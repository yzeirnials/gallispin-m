
*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17)
         0 |   unsigned long long __wseq
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_internal_list
         0 |   struct __pthread_internal_list * __prev
         8 |   struct __pthread_internal_list * __next
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_mutex_s
         0 |   int __lock
         4 |   unsigned int __count
         8 |   int __owner
        12 |   unsigned int __nusers
        16 |   int __kind
        20 |   short __spins
        22 |   short __elision
        24 |   struct __pthread_internal_list __list
        24 |     struct __pthread_internal_list * __prev
        32 |     struct __pthread_internal_list * __next
           | [sizeof=40, dsize=40, align=8,
           |  nvsize=40, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17)
         0 |   unsigned long long __g1_start
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s
         0 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17) 
         0 |     unsigned long long __wseq
         0 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |       unsigned int __low
         4 |       unsigned int __high
         8 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17) 
         8 |     unsigned long long __g1_start
         8 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         8 |       unsigned int __low
        12 |       unsigned int __high
        16 |   unsigned int [2] __g_refs
        24 |   unsigned int [2] __g_size
        32 |   unsigned int __g1_orig_size
        36 |   unsigned int __wrefs
        40 |   unsigned int [2] __g_signals
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_rwlock_arch_t
         0 |   unsigned int __readers
         4 |   unsigned int __writers
         8 |   unsigned int __wrphase_futex
        12 |   unsigned int __writers_futex
        16 |   unsigned int __pad3
        20 |   unsigned int __pad4
        24 |   int __cur_writer
        28 |   int __shared
        32 |   signed char __rwelision
        33 |   unsigned char [7] __pad1
        40 |   unsigned long __pad2
        48 |   unsigned int __flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | lldiv_t
         0 |   long long quot
         8 |   long long rem
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct msghdr
         0 |   void * msg_name
         8 |   socklen_t msg_namelen
        16 |   struct iovec * msg_iov
        24 |   size_t msg_iovlen
        32 |   void * msg_control
        40 |   size_t msg_controllen
        48 |   int msg_flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | struct in_addr
         0 |   in_addr_t s_addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5)
         0 |   uint8_t [16] __u6_addr8
         0 |   uint16_t [8] __u6_addr16
         0 |   uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr
         0 |   sa_family_t sa_family
         2 |   char [14] sa_data
           | [sizeof=16, dsize=16, align=2,
           |  nvsize=16, nvalign=2]

*** Dumping AST Record Layout
         0 | struct in6_addr
         0 |   union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         0 |     uint8_t [16] __u6_addr8
         0 |     uint16_t [8] __u6_addr16
         0 |     uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr_storage
         0 |   sa_family_t ss_family
         2 |   char [118] __ss_padding
       120 |   unsigned long __ss_align
           | [sizeof=128, dsize=128, align=8,
           |  nvsize=128, nvalign=8]

*** Dumping AST Record Layout
         0 | struct sockaddr_in6
         0 |   sa_family_t sin6_family
         2 |   in_port_t sin6_port
         4 |   uint32_t sin6_flowinfo
         8 |   struct in6_addr sin6_addr
         8 |     union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         8 |       uint8_t [16] __u6_addr8
         8 |       uint16_t [8] __u6_addr16
         8 |       uint32_t [4] __u6_addr32
        24 |   uint32_t sin6_scope_id
           | [sizeof=28, dsize=28, align=4,
           |  nvsize=28, nvalign=4]

*** Dumping AST Record Layout
         0 | struct timeval
         0 |   __time_t tv_sec
         8 |   __suseconds_t tv_usec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::memo_t
         0 |   volatile uint32_t refcount
         4 |   uint32_t capacity
         8 |   volatile uint32_t dirty
        12 |   char [8] real_data
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping AST Record Layout
         0 | class IPAddress
         0 |   uint32_t _addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Timestamp::rep_t
         0 |   int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timestamp
         0 |   union Timestamp::rep_t _t
         0 |     int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct timespec
         0 |   __time_t tv_sec
         8 |   __syscall_slong_t tv_nsec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element::Port
         0 |   class Element * _e
         8 |   int _port
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::rep_t
         0 |   const char * data
         8 |   int length
        16 |   struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class String
         0 |   struct String::rep_t _r
         0 |     const char * data
         8 |     int length
        16 |     struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | struct StringAccum::rep_t
         0 |   unsigned char * s
         8 |   int len
        12 |   int cap
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct TimerSet::heap_element
         0 |   class Timestamp expiry_s
         0 |     union Timestamp::rep_t _t
         0 |       int64_t x
         8 |   class Timer * t
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct pollfd
         0 |   int fd
         4 |   short events
         6 |   short revents
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | struct SelectSet::SelectorInfo
         0 |   class Element * read
         8 |   class Element * write
        16 |   int pollfd
           | [sizeof=24, dsize=20, align=8,
           |  nvsize=20, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Router::Port
         0 |   int idx
         4 |   int port
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | struct Router::element_landmark_t
         0 |   uint32_t first_landmarkid
         8 |   class String filename
         8 |     struct String::rep_t _r
         8 |       const char * data
        16 |       int length
        24 |       struct String::memo_t * memo
           | [sizeof=32, dsize=32, align=8,
           |  nvsize=32, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<4> >
         0 |   vector_memory<class sized_array_memory<4> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<int>
         0 |   class vector_memory<class sized_array_memory<4> > vm_
         0 |     vector_memory<class sized_array_memory<4> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Router::Connection
         0 |   struct Router::Port [2] p
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | class atomic_uint32_t
         0 |   uint32_t _val
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | class Element
         0 |   (Element vtable pointer)
         8 |   class Element::Port *[2] _ports
        24 |   class Element::Port [4] _inline_ports
        88 |   int [2] _nports
        96 |   class Router * _router
       104 |   int _eindex
           | [sizeof=112, dsize=108, align=8,
           |  nvsize=108, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f32dcf8158 prev 0x55f32dcef8f8 <../dummy_inc/click/element.hh:214:5, line:252:5> line:214:11 referenced class Port definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55f32dcf8250 <col:5, col:11> col:11 implicit referenced class Port
|-AccessSpecDecl 0x55f32dcf82e0 <col:18, col:24> col:18 public
|-CXXMethodDecl 0x55f32dcf8358 <line:216:9, col:30> col:21 used active 'bool () const' inline
|-CXXMethodDecl 0x55f32dcf8418 <line:217:9, col:35> col:25 element 'Element *() const' inline
|-CXXMethodDecl 0x55f32dcf84e0 <line:218:9, col:27> col:20 port 'int () const' inline
|-CXXMethodDecl 0x55f32dcf8658 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| |-ParmVarDecl 0x55f32dcf8590 <col:54, col:62> col:62 p 'Packet *'
| |-NoInlineAttr 0x55f32dcf8700 <col:24>
| `-OptimizeNoneAttr 0x55f32dcf8758 <col:34>
|-CXXMethodDecl 0x55f32dcf87a0 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
|-CXXMethodDecl 0x55f32dcf8a58 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| |-ParmVarDecl 0x55f32dcf8850 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x55f32dcf88c8 <col:43, col:52> col:52 e 'Element *'
| `-ParmVarDecl 0x55f32dcf8948 <col:55, col:59> col:59 port 'int'
|-AccessSpecDecl 0x55f32dcf8b10 <line:229:7, col:14> col:7 private
|-FieldDecl 0x55f32dcf8b48 <line:231:9, col:18> col:18 referenced _e 'Element *'
|-FieldDecl 0x55f32dcf8bb0 <line:232:9, col:13> col:13 referenced _port 'int'
|-CXXConstructorDecl 0x55f32dcf8c38 <line:247:9, col:21> col:16 Port 'void ()' inline
|-CXXMethodDecl 0x55f32dcf8f58 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| |-ParmVarDecl 0x55f32dcf8cf0 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x55f32dcf8d68 <col:43, col:52> col:52 owner 'Element *'
| |-ParmVarDecl 0x55f32dcf8de0 <col:59, col:68> col:68 e 'Element *'
| `-ParmVarDecl 0x55f32dcf8e60 <col:71, col:75> col:75 port 'int'
|-FriendDecl 0x55f32dcf9070 <line:250:9, col:22> col:16 'class Element':'Element'
|-CXXConstructorDecl 0x55f32dd009e8 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x55f32dd009e8
| `-ParmVarDecl 0x55f32dd00af8 <col:11> col:11 'const Element::Port &'
|-CXXConstructorDecl 0x55f32dd00b98 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x55f32dd00b98
| `-ParmVarDecl 0x55f32dd00ca8 <col:11> col:11 'Element::Port &&'
`-CXXDestructorDecl 0x55f32dee8a00 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"class.Element::Port" = type <{ %class.Element*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%"class.Element::Port.base" = type <{ %class.Element*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<8> >
         0 |   vector_memory<class sized_array_memory<8> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class Element *>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class typed_array_memory<class String> >
         0 |   vector_memory<class typed_array_memory<class String> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class String>
         0 |   class vector_memory<class typed_array_memory<class String> > vm_
         0 |     vector_memory<class typed_array_memory<class String> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<unsigned int>
         0 |   class vector_memory<class sized_array_memory<4> > vm_
         0 |     vector_memory<class sized_array_memory<4> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class typed_array_memory<struct Router::element_landmark_t> >
         0 |   vector_memory<class typed_array_memory<struct Router::element_landmark_t> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct Router::element_landmark_t>
         0 |   class vector_memory<class typed_array_memory<struct Router::element_landmark_t> > vm_
         0 |     vector_memory<class typed_array_memory<struct Router::element_landmark_t> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<16> >
         0 |   vector_memory<class sized_array_memory<16> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct Router::Connection>
         0 |   class vector_memory<class sized_array_memory<16> > vm_
         0 |     vector_memory<class sized_array_memory<16> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<void *>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Router
         0 |   class Master * _master
         8 |   class atomic_uint32_t _runcount
         8 |     uint32_t _val
        12 |   volatile int _state
    16:0-0 |   _Bool _have_connections
    16:1-1 |   _Bool _conn_sorted
    16:2-2 |   _Bool _have_configuration
        20 |   volatile int _running
        24 |   class atomic_uint32_t _refcount
        24 |     uint32_t _val
        32 |   class Vector<class Element *> _elements
        32 |     class vector_memory<class sized_array_memory<8> > vm_
        32 |       vector_memory<class sized_array_memory<8> >::type * l_
        40 |       vector_memory::size_type n_
        44 |       vector_memory::size_type capacity_
        48 |   class Vector<class String> _element_names
        48 |     class vector_memory<class typed_array_memory<class String> > vm_
        48 |       vector_memory<class typed_array_memory<class String> >::type * l_
        56 |       vector_memory::size_type n_
        60 |       vector_memory::size_type capacity_
        64 |   class Vector<class String> _element_configurations
        64 |     class vector_memory<class typed_array_memory<class String> > vm_
        64 |       vector_memory<class typed_array_memory<class String> >::type * l_
        72 |       vector_memory::size_type n_
        76 |       vector_memory::size_type capacity_
        80 |   class Vector<unsigned int> _element_landmarkids
        80 |     class vector_memory<class sized_array_memory<4> > vm_
        80 |       vector_memory<class sized_array_memory<4> >::type * l_
        88 |       vector_memory::size_type n_
        92 |       vector_memory::size_type capacity_
        96 |   class Vector<int> _element_home_thread_ids
        96 |     class vector_memory<class sized_array_memory<4> > vm_
        96 |       vector_memory<class sized_array_memory<4> >::type * l_
       104 |       vector_memory::size_type n_
       108 |       vector_memory::size_type capacity_
       112 |   class Vector<struct Router::element_landmark_t> _element_landmarks
       112 |     class vector_memory<class typed_array_memory<struct Router::element_landmark_t> > vm_
       112 |       vector_memory<class typed_array_memory<struct Router::element_landmark_t> >::type * l_
       120 |       vector_memory::size_type n_
       124 |       vector_memory::size_type capacity_
       128 |   uint32_t _last_landmarkid
       136 |   class Vector<int> _element_name_sorter
       136 |     class vector_memory<class sized_array_memory<4> > vm_
       136 |       vector_memory<class sized_array_memory<4> >::type * l_
       144 |       vector_memory::size_type n_
       148 |       vector_memory::size_type capacity_
       152 |   Vector<int> [2] _element_gport_offset
       184 |   class Vector<int> _element_configure_order
       184 |     class vector_memory<class sized_array_memory<4> > vm_
       184 |       vector_memory<class sized_array_memory<4> >::type * l_
       192 |       vector_memory::size_type n_
       196 |       vector_memory::size_type capacity_
       200 |   class Vector<struct Router::Connection> _conn
       200 |     class vector_memory<class sized_array_memory<16> > vm_
       200 |       vector_memory<class sized_array_memory<16> >::type * l_
       208 |       vector_memory::size_type n_
       212 |       vector_memory::size_type capacity_
       216 |   class Vector<int> _conn_output_sorter
       216 |     class vector_memory<class sized_array_memory<4> > vm_
       216 |       vector_memory<class sized_array_memory<4> >::type * l_
       224 |       vector_memory::size_type n_
       228 |       vector_memory::size_type capacity_
       232 |   class Vector<class String> _requirements
       232 |     class vector_memory<class typed_array_memory<class String> > vm_
       232 |       vector_memory<class typed_array_memory<class String> >::type * l_
       240 |       vector_memory::size_type n_
       244 |       vector_memory::size_type capacity_
       248 |   class Vector<int> _ehandler_first_by_element
       248 |     class vector_memory<class sized_array_memory<4> > vm_
       248 |       vector_memory<class sized_array_memory<4> >::type * l_
       256 |       vector_memory::size_type n_
       260 |       vector_memory::size_type capacity_
       264 |   class Vector<int> _ehandler_to_handler
       264 |     class vector_memory<class sized_array_memory<4> > vm_
       264 |       vector_memory<class sized_array_memory<4> >::type * l_
       272 |       vector_memory::size_type n_
       276 |       vector_memory::size_type capacity_
       280 |   class Vector<int> _ehandler_next
       280 |     class vector_memory<class sized_array_memory<4> > vm_
       280 |       vector_memory<class sized_array_memory<4> >::type * l_
       288 |       vector_memory::size_type n_
       292 |       vector_memory::size_type capacity_
       296 |   class Vector<int> _handler_first_by_name
       296 |     class vector_memory<class sized_array_memory<4> > vm_
       296 |       vector_memory<class sized_array_memory<4> >::type * l_
       304 |       vector_memory::size_type n_
       308 |       vector_memory::size_type capacity_
       312 |   class Handler ** _handler_bufs
       320 |   int _nhandlers_bufs
       324 |   int _free_handler
       328 |   class Vector<class String> _attachment_names
       328 |     class vector_memory<class typed_array_memory<class String> > vm_
       328 |       vector_memory<class typed_array_memory<class String> >::type * l_
       336 |       vector_memory::size_type n_
       340 |       vector_memory::size_type capacity_
       344 |   class Vector<void *> _attachments
       344 |     class vector_memory<class sized_array_memory<8> > vm_
       344 |       vector_memory<class sized_array_memory<8> >::type * l_
       352 |       vector_memory::size_type n_
       356 |       vector_memory::size_type capacity_
       360 |   class Element * _root_element
       368 |   class String _configuration
       368 |     struct String::rep_t _r
       368 |       const char * data
       376 |       int length
       384 |       struct String::memo_t * memo
       392 |   struct Router::notifier_signals_t * _notifier_signals
       400 |   class HashMap_ArenaFactory * _arena_factory
       408 |   class Router * _hotswap_router
       416 |   class ThreadSched * _thread_sched
       424 |   class NameInfo * _name_info
       432 |   class Vector<int> _flow_code_override_eindex
       432 |     class vector_memory<class sized_array_memory<4> > vm_
       432 |       vector_memory<class sized_array_memory<4> >::type * l_
       440 |       vector_memory::size_type n_
       444 |       vector_memory::size_type capacity_
       448 |   class Vector<class String> _flow_code_override
       448 |     class vector_memory<class typed_array_memory<class String> > vm_
       448 |       vector_memory<class typed_array_memory<class String> >::type * l_
       456 |       vector_memory::size_type n_
       460 |       vector_memory::size_type capacity_
       464 |   class Router * _next_router
           | [sizeof=472, dsize=472, align=8,
           |  nvsize=472, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f32daa9c20 <../dummy_inc/click/atomic.hh:52:1, line:94:1> line:52:7 referenced class atomic_uint32_t definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55f32daa9d38 <col:1, col:7> col:7 implicit referenced class atomic_uint32_t
|-AccessSpecDecl 0x55f32daa9dc8 <col:25, col:31> col:25 public
|-CXXMethodDecl 0x55f32daa9e98 <line:57:5, col:29> col:21 used value 'uint32_t () const' inline
|-CXXConversionDecl 0x55f32daa9f80 <line:58:5, col:32> col:12 operator unsigned int 'uint32_t () const' inline
|-CXXMethodDecl 0x55f32daaa198 <line:60:5, col:49> col:29 used operator= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x55f32daaa040 <col:39, col:48> col:48 x 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f32daaa348 <line:62:5, col:53> col:29 operator+= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x55f32daaa250 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x55f32daaa490 <line:63:5, col:53> col:29 operator-= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x55f32daaa400 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x55f32daaa5d8 <line:64:5, col:53> col:29 operator|= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x55f32daaa548 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f32daaa720 <line:65:5, col:53> col:29 operator&= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x55f32daaa690 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f32daaa7e8 <line:67:5, col:28> col:17 used operator++ 'void ()' inline
|-CXXMethodDecl 0x55f32daaa930 <line:68:5, col:31> col:17 used operator++ 'void (int)' inline
| `-ParmVarDecl 0x55f32daaa8a0 <col:28> col:31 'int'
|-CXXMethodDecl 0x55f32daaa9f8 <line:69:5, col:28> col:17 used operator-- 'void ()' inline
|-CXXMethodDecl 0x55f32daaab40 <line:70:5, col:31> col:17 operator-- 'void (int)' inline
| `-ParmVarDecl 0x55f32daaaab0 <col:28> col:31 'int'
|-CXXMethodDecl 0x55f32daaacb8 <line:72:5, col:42> col:21 swap 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x55f32daaabf8 <col:26, col:35> col:35 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f32daaae00 <line:73:5, col:49> col:21 fetch_and_add 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x55f32daaad70 <col:35, col:44> col:44 delta 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f32daaaec8 <line:74:5, col:30> col:17 dec_and_test 'bool ()' inline
|-CXXMethodDecl 0x55f32daab088 <line:75:5, col:69> col:21 used compare_swap 'uint32_t (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x55f32daaaf78 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55f32daaaff0 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f32daab2d8 <line:76:5, col:97> col:17 compare_and_swap 'bool (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x55f32daab148 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55f32daab1c0 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55f32daab388 <col:86> "" ""
|-CXXMethodDecl 0x55f32daab5f8 <line:78:5, col:71> col:28 used swap 'uint32_t (volatile uint32_t &, uint32_t)' static inline
| |-ParmVarDecl 0x55f32daab468 <col:33, col:52> col:52 x 'volatile uint32_t &'
| `-ParmVarDecl 0x55f32daab4e0 <col:55, col:64> col:64 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f32daab7a8 <line:79:5, col:48> col:24 used inc 'void (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x55f32daab6b8 <col:28, col:47> col:47 x 'volatile uint32_t &'
|-CXXMethodDecl 0x55f32daab958 <line:80:5, col:57> col:24 used dec_and_test 'bool (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x55f32daab860 <col:37, col:56> col:56 x 'volatile uint32_t &'
|-CXXMethodDecl 0x55f32daabc28 <line:81:5, col:98> col:28 compare_swap 'uint32_t (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x55f32daaba10 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x55f32daaba88 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55f32daabb00 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f32daabf08 <line:82:5, col:126> col:24 compare_and_swap 'bool (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x55f32daabcf0 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x55f32daabd68 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55f32daabde0 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55f32daabfc0 <col:115> "" ""
|-AccessSpecDecl 0x55f32daac030 <line:84:3, col:10> col:3 private
|-FieldDecl 0x55f32daac068 <line:91:5, col:14> col:14 referenced _val 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f32daad580 <line:52:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x55f32daad580
| `-ParmVarDecl 0x55f32daad688 <col:7> col:7 'const atomic_uint32_t &'
|-CXXMethodDecl 0x55f32daad728 <col:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x55f32daad728
| `-ParmVarDecl 0x55f32daad838 <col:7> col:7 'atomic_uint32_t &&'
|-CXXConstructorDecl 0x55f32dae2e68 <col:7> col:7 implicit used atomic_uint32_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55f32dcd4c60 <col:7>
|-CXXConstructorDecl 0x55f32dae2f40 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x55f32dae2f40
| `-ParmVarDecl 0x55f32dae3058 <col:7> col:7 'const atomic_uint32_t &'
|-CXXConstructorDecl 0x55f32dae30c8 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x55f32dae30c8
| `-ParmVarDecl 0x55f32dae31d8 <col:7> col:7 'atomic_uint32_t &&'
`-CXXDestructorDecl 0x55f32dcd7660 <col:7> col:7 implicit referenced ~atomic_uint32_t 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.atomic_uint32_t = type { i32 }
  NonVirtualBaseLLVMType:%class.atomic_uint32_t = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55f32ddd90d0 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<8>'
|-CXXRecordDecl 0x55f32ddd92a8 prev 0x55f32ddd90d0 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55f32ddd9338 <col:46, col:52> col:46 public
|-TypedefDecl 0x55f32ddd9360 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55f32d785580 'int'
|-TypedefDecl 0x55f32dddaf40 <line:13:5, col:31> col:31 type 'typename sized_array_memory<8>::type':'char_array<8>'
| `-ElaboratedType 0x55f32dddaef0 'typename sized_array_memory<8>::type' sugar
|   `-TypedefType 0x55f32ddd9820 'sized_array_memory<8>::type' sugar
|     |-Typedef 0x55f32ddd9720 'type'
|     `-TemplateSpecializationType 0x55f32ddd96b0 'char_array<8UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x55f32ddd9590 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 8
|       |   `-SubstNonTypeTemplateParmExpr 0x55f32ddd9570 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x55f32ddd9550 <col:24> 'unsigned long' 8
|       `-RecordType 0x55f32ddd9690 'char_array<8>'
|         `-ClassTemplateSpecialization 0x55f32ddd95b0 'char_array'
|-TypedefDecl 0x55f32dddaff8 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<8> >::type *'
| `-PointerType 0x55f32dddafc0 'vector_memory<sized_array_memory<8> >::type *'
|   `-TypedefType 0x55f32dddafa0 'vector_memory<sized_array_memory<8> >::type' sugar
|     |-Typedef 0x55f32dddaf40 'type'
|     `-ElaboratedType 0x55f32dddaef0 'typename sized_array_memory<8>::type' sugar
|       `-TypedefType 0x55f32ddd9820 'sized_array_memory<8>::type' sugar
|         |-Typedef 0x55f32ddd9720 'type'
|         `-TemplateSpecializationType 0x55f32ddd96b0 'char_array<8UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x55f32ddd9590 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 8
|           |   `-SubstNonTypeTemplateParmExpr 0x55f32ddd9570 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x55f32ddd9550 <col:24> 'unsigned long' 8
|           `-RecordType 0x55f32ddd9690 'char_array<8>'
|             `-ClassTemplateSpecialization 0x55f32ddd95b0 'char_array'
|-CXXMethodDecl 0x55f32dddb178 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<8> >::type *) const' inline
| `-ParmVarDecl 0x55f32dddb088 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXConstructorDecl 0x55f32dddb268 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55f32dddb348 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x55f32dddb348
|-CXXMethodDecl 0x55f32dddb618 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<8> > &)'
| `-ParmVarDecl 0x55f32dddb520 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<8> > &'
|-CXXMethodDecl 0x55f32dddb858 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x55f32dddb6d0 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55f32dddb748 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55f32dddba28 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x55f32dddb918 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55f32dddb990 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55f32dddbb88 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<8> >::iterator ()'
|-CXXMethodDecl 0x55f32dddbc58 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<8> >::iterator ()'
|-CXXMethodDecl 0x55f32dddbea8 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<8> >::iterator (vector_memory<sized_array_memory<8> >::iterator, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x55f32dddbd18 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
| `-ParmVarDecl 0x55f32dddbd90 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55f32dddc108 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<8> >::iterator (vector_memory<sized_array_memory<8> >::iterator, vector_memory<sized_array_memory<8> >::iterator)'
| |-ParmVarDecl 0x55f32dddbf78 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
| `-ParmVarDecl 0x55f32dddbff0 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55f32dddc2c8 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<8> >::type *)' inline
| `-ParmVarDecl 0x55f32dddc1d8 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55f32dddc488 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<8> >::type *)' inline
| `-ParmVarDecl 0x55f32dddc390 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55f32dddc540 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55f32dddc5f0 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55f32dddc828 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x55f32dddc6a0 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55f32dddc718 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55f32dddcac8 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<8> > &)'
| `-ParmVarDecl 0x55f32dddc9d0 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<8> > &'
|-FieldDecl 0x55f32dddcb90 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<8> >::type *'
|-FieldDecl 0x55f32dddcbe0 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55f32dddcc30 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory = type { %struct.char_array*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory = type { %struct.char_array*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55f32de86368 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Element *'
|-CXXRecordDecl 0x55f32de90498 prev 0x55f32de86368 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55f32de914b0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<Element *>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x55f32de91460 'typename array_memory<Element *>::type' sugar
|   `-TypedefType 0x55f32de91440 'conditional<true, sized_array_memory<8>, typed_array_memory<Element *> >::type' sugar
|     |-Typedef 0x55f32de912f0 'type'
|     `-SubstTemplateTypeParmType 0x55f32ddd8ca0 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x55f32da4f230 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f32da4f1d8 'T'
|       `-RecordType 0x55f32ddd87f0 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x55f32ddd8708 'sized_array_memory'
|-FieldDecl 0x55f32de915b0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Element *>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x55f32de91600 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55f32de91638 <line:118:5, col:15> col:15 value_type 'Element *':'Element *'
| `-SubstTemplateTypeParmType 0x55f32de90530 'Element *' sugar
|   |-TemplateTypeParmType 0x55f32da87140 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55f32da870e8 'T'
|   `-PointerType 0x55f32dce16a0 'Element *'
|     `-RecordType 0x55f32dce1420 'Element'
|       `-CXXRecord 0x55f32dceb170 'Element'
|-TypedefDecl 0x55f32de916c8 <line:119:5, col:16> col:16 reference 'Element *&'
| `-LValueReferenceType 0x55f32de91690 'Element *&'
|   `-SubstTemplateTypeParmType 0x55f32de90530 'Element *' sugar
|     |-TemplateTypeParmType 0x55f32da87140 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55f32da870e8 'T'
|     `-PointerType 0x55f32dce16a0 'Element *'
|       `-RecordType 0x55f32dce1420 'Element'
|         `-CXXRecord 0x55f32dceb170 'Element'
|-TypedefDecl 0x55f32de91788 <line:120:5, col:22> col:22 const_reference 'Element *const &'
| `-LValueReferenceType 0x55f32de91750 'Element *const &'
|   `-QualType 0x55f32de90531 'Element *const' const
|     `-SubstTemplateTypeParmType 0x55f32de90530 'Element *' sugar
|       |-TemplateTypeParmType 0x55f32da87140 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f32da870e8 'T'
|       `-PointerType 0x55f32dce16a0 'Element *'
|         `-RecordType 0x55f32dce1420 'Element'
|           `-CXXRecord 0x55f32dceb170 'Element'
|-TypedefDecl 0x55f32de91818 <line:121:5, col:16> col:16 pointer 'Element **'
| `-PointerType 0x55f32de917e0 'Element **'
|   `-SubstTemplateTypeParmType 0x55f32de90530 'Element *' sugar
|     |-TemplateTypeParmType 0x55f32da87140 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55f32da870e8 'T'
|     `-PointerType 0x55f32dce16a0 'Element *'
|       `-RecordType 0x55f32dce1420 'Element'
|         `-CXXRecord 0x55f32dceb170 'Element'
|-TypedefDecl 0x55f32de918d8 <line:122:5, col:22> col:22 const_pointer 'Element *const *'
| `-PointerType 0x55f32de918a0 'Element *const *'
|   `-QualType 0x55f32de90531 'Element *const' const
|     `-SubstTemplateTypeParmType 0x55f32de90530 'Element *' sugar
|       |-TemplateTypeParmType 0x55f32da87140 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f32da870e8 'T'
|       `-PointerType 0x55f32dce16a0 'Element *'
|         `-RecordType 0x55f32dce1420 'Element'
|           `-CXXRecord 0x55f32dceb170 'Element'
|-TypedefDecl 0x55f32de924b0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<Element *>::type':'Element *'
| `-ElaboratedType 0x55f32de92460 'typename fast_argument<Element *>::type' sugar
|   `-TypedefType 0x55f32de92440 'fast_argument<Element *, false>::type' sugar
|     |-Typedef 0x55f32de923d0 'type'
|     `-SubstTemplateTypeParmType 0x55f32de92190 'Element *' sugar
|       |-TemplateTypeParmType 0x55f32da5a250 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f32da5a200 'T'
|       `-PointerType 0x55f32dce16a0 'Element *'
|         `-RecordType 0x55f32dce1420 'Element'
|           `-CXXRecord 0x55f32dceb170 'Element'
|-TypedefDecl 0x55f32de92518 <line:126:5, col:22> col:22 const_access_type 'Element *const &'
| `-LValueReferenceType 0x55f32de91750 'Element *const &'
|   `-QualType 0x55f32de90531 'Element *const' const
|     `-SubstTemplateTypeParmType 0x55f32de90530 'Element *' sugar
|       |-TemplateTypeParmType 0x55f32da87140 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f32da870e8 'T'
|       `-PointerType 0x55f32dce16a0 'Element *'
|         `-RecordType 0x55f32dce1420 'Element'
|           `-CXXRecord 0x55f32dceb170 'Element'
|-TypedefDecl 0x55f32de92570 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55f32d785580 'int'
|-TypedefDecl 0x55f32de925d8 <line:130:5, col:16> col:16 iterator 'Element **'
| `-PointerType 0x55f32de917e0 'Element **'
|   `-SubstTemplateTypeParmType 0x55f32de90530 'Element *' sugar
|     |-TemplateTypeParmType 0x55f32da87140 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55f32da870e8 'T'
|     `-PointerType 0x55f32dce16a0 'Element *'
|       `-RecordType 0x55f32dce1420 'Element'
|         `-CXXRecord 0x55f32dceb170 'Element'
|-TypedefDecl 0x55f32de92640 <line:131:5, col:22> col:22 const_iterator 'Element *const *'
| `-PointerType 0x55f32de918a0 'Element *const *'
|   `-QualType 0x55f32de90531 'Element *const' const
|     `-SubstTemplateTypeParmType 0x55f32de90530 'Element *' sugar
|       |-TemplateTypeParmType 0x55f32da87140 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f32da870e8 'T'
|       `-PointerType 0x55f32dce16a0 'Element *'
|         `-RecordType 0x55f32dce1420 'Element'
|           `-CXXRecord 0x55f32dceb170 'Element'
|-EnumDecl 0x55f32de92698 <line:134:5> col:5
| `-EnumConstantDecl 0x55f32de92790 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Element *>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55f32de92770 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55f32da887c8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55f32da887a0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55f32da88780 <col:40> 'int' 1
|-CXXConstructorDecl 0x55f32de92818 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55f32de92aa8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Element *>::value_argument_type)' inline
| |-ParmVarDecl 0x55f32de928d0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55f32de92970 <col:41, col:61> col:61 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXConstructorDecl 0x55f32de92d38 <line:139:5, col:37> col:12 Vector 'void (const Vector<Element *> &)' inline
| `-ParmVarDecl 0x55f32de92c20 <col:19, col:36> col:36 x 'const Vector<Element *> &'
|-CXXConstructorDecl 0x55f32de92ff8 <line:141:5, col:32> col:12 Vector 'void (Vector<Element *> &&)' inline
| `-ParmVarDecl 0x55f32de92ee0 <col:19, col:31> col:31 x 'Vector<Element *> &&'
|-CXXMethodDecl 0x55f32de93310 <line:144:5, col:51> col:23 operator= 'Vector<Element *> &(const Vector<Element *> &)' inline
| `-ParmVarDecl 0x55f32de931f0 <col:33, col:50> col:50 x 'const Vector<Element *> &'
|-CXXMethodDecl 0x55f32de93620 <line:146:5, col:46> col:23 operator= 'Vector<Element *> &(Vector<Element *> &&)' inline
| `-ParmVarDecl 0x55f32de93500 <col:33, col:45> col:45 x 'Vector<Element *> &&'
|-CXXMethodDecl 0x55f32de965e0 <line:148:5, col:70> col:23 assign 'Vector<Element *> &(Vector::size_type, Vector<Element *>::value_argument_type)' inline
| |-ParmVarDecl 0x55f32de93758 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55f32de964a0 <col:43, col:69> col:63 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXMethodDecl 0x55f32de96738 <line:150:5, col:55> col:49 begin 'Vector<Element *>::iterator ()'
| |-NoInlineAttr 0x55f32de96818 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f32de96870 <col:30> Inherited
|-CXXMethodDecl 0x55f32de968b8 <line:151:5, col:53> col:49 end 'Vector<Element *>::iterator ()'
| |-NoInlineAttr 0x55f32de96968 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f32de969c0 <col:30> Inherited
|-CXXMethodDecl 0x55f32de96a88 <line:152:5, col:63> col:55 begin 'Vector<Element *>::const_iterator () const'
| |-NoInlineAttr 0x55f32de96b38 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f32de96b90 <col:30> Inherited
|-CXXMethodDecl 0x55f32de96bd8 <line:153:5, col:61> col:55 end 'Vector<Element *>::const_iterator () const'
| |-NoInlineAttr 0x55f32de96c88 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f32de96ce0 <col:30> Inherited
|-CXXMethodDecl 0x55f32de96d28 <line:154:5, col:64> col:55 cbegin 'Vector<Element *>::const_iterator () const'
| |-NoInlineAttr 0x55f32de96dd8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f32de96e30 <col:30> Inherited
|-CXXMethodDecl 0x55f32de96e78 <line:155:5, col:62> col:55 cend 'Vector<Element *>::const_iterator () const'
| |-NoInlineAttr 0x55f32de96f28 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f32de96f80 <col:30> Inherited
|-CXXMethodDecl 0x55f32de96fa8 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55f32de97058 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55f32de97108 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55f32de972c8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Element *>::value_argument_type)' inline
| |-ParmVarDecl 0x55f32de971b8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55f32de97230 <col:37, col:63> col:57 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXMethodDecl 0x55f32de97418 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55f32de97388 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f32de975c8 <line:163:5, col:65> col:43 operator[] 'Element *&(Vector::size_type)'
| |-ParmVarDecl 0x55f32de974d0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55f32de97680 <col:20>
| `-OptimizeNoneAttr 0x55f32de976d8 <col:30>
|-CXXMethodDecl 0x55f32de977f8 <line:164:5, col:73> col:49 operator[] 'Element *const &(Vector::size_type) const'
| |-ParmVarDecl 0x55f32de97700 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55f32de978b0 <col:20>
| `-OptimizeNoneAttr 0x55f32de97908 <col:30>
|-CXXMethodDecl 0x55f32de979c0 <line:165:5, col:29> col:15 at 'Element *&(Vector::size_type)' inline
| `-ParmVarDecl 0x55f32de97930 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f32de97b08 <line:166:5, col:37> col:21 at 'Element *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55f32de97a78 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f32de97c38 <line:167:5, col:21> col:15 front 'Element *&()' inline
|-CXXMethodDecl 0x55f32de97d68 <line:168:5, col:29> col:21 front 'Element *const &() const' inline
|-CXXMethodDecl 0x55f32de97e38 <line:169:5, col:20> col:15 back 'Element *&()' inline
|-CXXMethodDecl 0x55f32de97f08 <line:170:5, col:28> col:21 back 'Element *const &() const' inline
|-CXXMethodDecl 0x55f32de98048 <line:172:5, col:39> col:15 unchecked_at 'Element *&(Vector::size_type)' inline
| `-ParmVarDecl 0x55f32de97fb8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f32de98190 <line:173:5, col:47> col:21 unchecked_at 'Element *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55f32de98100 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f32de982d8 <line:174:5, col:59> col:15 at_u 'Element *&(Vector::size_type)' inline
| |-ParmVarDecl 0x55f32de98248 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55f32de98390 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55f32de98490 <line:175:5, col:71> col:21 at_u 'Element *const &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55f32de98400 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55f32de98548 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55f32de98608 <line:177:5, col:20> col:15 data 'Element **()' inline
|-CXXMethodDecl 0x55f32de98708 <line:178:5, col:28> col:21 data 'Element *const *() const' inline
|-CXXMethodDecl 0x55f32de98888 <line:180:5, col:48> col:17 push_back 'void (Vector<Element *>::value_argument_type)' inline
| `-ParmVarDecl 0x55f32de987c8 <col:27, col:47> col:47 v 'Vector<Element *>::value_argument_type':'Element *'
|-FunctionTemplateDecl 0x55f32de99048 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55f32de98940 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Element *>':'fast_argument<Element *, false>'
| `-CXXMethodDecl 0x55f32de98fa8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Element *&&)' inline
|   `-ParmVarDecl 0x55f32de98ea8 <col:58, col:62> col:62 v 'Element *&&'
|-CXXMethodDecl 0x55f32de99128 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55f32de99278 <line:186:5, col:49> col:17 push_front 'void (Vector<Element *>::value_argument_type)' inline
| `-ParmVarDecl 0x55f32de991e8 <col:28, col:48> col:48 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXMethodDecl 0x55f32de99330 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55f32de99578 <line:189:5, col:62> col:21 insert 'Vector<Element *>::iterator (Vector<Element *>::iterator, Vector<Element *>::value_argument_type)' inline
| |-ParmVarDecl 0x55f32de993f0 <col:28, col:37> col:37 it 'Vector<Element *>::iterator':'Element **'
| `-ParmVarDecl 0x55f32de99468 <col:41, col:61> col:61 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXMethodDecl 0x55f32de99738 <line:190:5, col:38> col:21 erase 'Vector<Element *>::iterator (Vector<Element *>::iterator)' inline
| `-ParmVarDecl 0x55f32de99648 <col:27, col:36> col:36 it 'Vector<Element *>::iterator':'Element **'
|-CXXMethodDecl 0x55f32de99988 <line:191:5, col:49> col:21 erase 'Vector<Element *>::iterator (Vector<Element *>::iterator, Vector<Element *>::iterator)' inline
| |-ParmVarDecl 0x55f32de99800 <col:27, col:36> col:36 a 'Vector<Element *>::iterator':'Element **'
| `-ParmVarDecl 0x55f32de99878 <col:39, col:48> col:48 b 'Vector<Element *>::iterator':'Element **'
|-CXXMethodDecl 0x55f32de99a48 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55f32de99ca8 <line:195:5, col:34> col:17 swap 'void (Vector<Element *> &)' inline
| `-ParmVarDecl 0x55f32de99bb0 <col:22, col:33> col:33 x 'Vector<Element *> &'
`-CXXDestructorDecl 0x55f32de99d78 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55f32de99d78

Layout: <CGRecordLayout
  LLVMType:%class.Vector = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f32dabf010 <../dummy_inc/click/string.hh:189:5, line:198:5> line:189:12 referenced struct memo_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x55f32dabf128 <col:5, col:12> col:12 implicit struct memo_t
|-FieldDecl 0x55f32dabf1c8 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
|-FieldDecl 0x55f32dabf228 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
|-FieldDecl 0x55f32dabf288 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
`-FieldDecl 0x55f32dabf338 <line:197:2, col:18> col:7 real_data 'char [8]'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  NonVirtualBaseLLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f32dabf640 <../dummy_inc/click/string.hh:204:5, line:208:5> line:204:12 referenced struct rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55f32dabf758 <col:5, col:12> col:12 implicit struct rep_t
|-FieldDecl 0x55f32dabf800 <line:205:2, col:14> col:14 referenced data 'const char *'
|-FieldDecl 0x55f32dabf868 <line:206:2, col:6> col:6 referenced length 'int'
|-FieldDecl 0x55f32dabf8f8 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
|-CXXConstructorDecl 0x55f32dac5990 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55f32dac5dc8 <col:12>
|-CXXConstructorDecl 0x55f32dac5a98 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55f32dac5ba8 <col:12> col:12 used 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x55f32dabf800 'data' 'const char *'
| | `-ImplicitCastExpr 0x55f32dac8350 <col:12> 'const char *' <LValueToRValue>
| |   `-MemberExpr 0x55f32dac8320 <col:12> 'const char *const' lvalue .data 0x55f32dabf800
| |     `-DeclRefExpr 0x55f32dac8300 <col:12> 'const String::rep_t' lvalue ParmVar 0x55f32dac5ba8 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x55f32dabf868 'length' 'int'
| | `-ImplicitCastExpr 0x55f32dac83e0 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x55f32dac83b0 <col:12> 'const int' lvalue .length 0x55f32dabf868
| |     `-DeclRefExpr 0x55f32dac8390 <col:12> 'const String::rep_t' lvalue ParmVar 0x55f32dac5ba8 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x55f32dabf8f8 'memo' 'String::memo_t *'
| | `-ImplicitCastExpr 0x55f32dac8470 <col:12> 'String::memo_t *' <LValueToRValue>
| |   `-MemberExpr 0x55f32dac8440 <col:12> 'String::memo_t *const' lvalue .memo 0x55f32dabf8f8
| |     `-DeclRefExpr 0x55f32dac8420 <col:12> 'const String::rep_t' lvalue ParmVar 0x55f32dac5ba8 '' 'const String::rep_t &'
| `-CompoundStmt 0x55f32dac84c8 <col:12>
|-CXXConstructorDecl 0x55f32dac5c48 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55f32dac5c48
| `-ParmVarDecl 0x55f32dac5d58 <col:12> col:12 'String::rep_t &&'
|-CXXDestructorDecl 0x55f32dacb2b0 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55f32dad6cc8 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55f32dad6dd8 <col:12> col:12 used 'const String::rep_t &'
| `-CompoundStmt 0x55f32dad72f0 <col:12>
|   |-BinaryOperator 0x55f32dad7108 <col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x55f32dad70c0 <col:12> 'const char *' lvalue ->data 0x55f32dabf800
|   | | `-CXXThisExpr 0x55f32dad70b0 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x55f32dad70f0 <col:12> 'const char *' <LValueToRValue>
|   |   `-MemberExpr 0x55f32dad7080 <col:12> 'const char *const' lvalue .data 0x55f32dabf800
|   |     `-DeclRefExpr 0x55f32dad7060 <col:12> 'const String::rep_t' lvalue ParmVar 0x55f32dad6dd8 '' 'const String::rep_t &'
|   |-BinaryOperator 0x55f32dad71d0 <col:12> 'int' lvalue '='
|   | |-MemberExpr 0x55f32dad7188 <col:12> 'int' lvalue ->length 0x55f32dabf868
|   | | `-CXXThisExpr 0x55f32dad7178 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x55f32dad71b8 <col:12> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x55f32dad7148 <col:12> 'const int' lvalue .length 0x55f32dabf868
|   |     `-DeclRefExpr 0x55f32dad7128 <col:12> 'const String::rep_t' lvalue ParmVar 0x55f32dad6dd8 '' 'const String::rep_t &'
|   |-BinaryOperator 0x55f32dad7298 <col:12> 'String::memo_t *' lvalue '='
|   | |-MemberExpr 0x55f32dad7250 <col:12> 'String::memo_t *' lvalue ->memo 0x55f32dabf8f8
|   | | `-CXXThisExpr 0x55f32dad7240 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x55f32dad7280 <col:12> 'String::memo_t *' <LValueToRValue>
|   |   `-MemberExpr 0x55f32dad7210 <col:12> 'String::memo_t *const' lvalue .memo 0x55f32dabf8f8
|   |     `-DeclRefExpr 0x55f32dad71f0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55f32dad6dd8 '' 'const String::rep_t &'
|   `-ReturnStmt 0x55f32dad72e0 <col:12>
|     `-UnaryOperator 0x55f32dad72c8 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55f32dad72b8 <col:12> 'String::rep_t *' this
`-CXXMethodDecl 0x55f32dad6e48 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55f32dad6e48
  `-ParmVarDecl 0x55f32dad6f58 <col:12> col:12 'String::rep_t &&'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  NonVirtualBaseLLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f32dab6580 <../dummy_inc/click/string.hh:19:1, line:304:1> line:19:7 referenced class String definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55f32dab6698 <col:1, col:7> col:7 implicit referenced class String
|-AccessSpecDecl 0x55f32dab6728 <col:16, col:22> col:16 public
|-TypedefDecl 0x55f32dab6768 <line:21:5, col:25> col:25 referenced const_iterator 'const char *'
| `-PointerType 0x55f32d785fd0 'const char *'
|   `-QualType 0x55f32d785521 'const char' const
|     `-BuiltinType 0x55f32d785520 'char'
|-TypedefDecl 0x55f32dab67f0 <line:22:5, col:28> col:28 iterator 'String::const_iterator':'const char *'
| `-TypedefType 0x55f32dab67c0 'String::const_iterator' sugar
|   |-Typedef 0x55f32dab6768 'const_iterator'
|   `-PointerType 0x55f32d785fd0 'const char *'
|     `-QualType 0x55f32d785521 'const char' const
|       `-BuiltinType 0x55f32d785520 'char'
|-TypedefDecl 0x55f32dab6960 <line:24:5, col:52> col:27 referenced unspecified_bool_type 'int (String::*)() const'
| `-MemberPointerType 0x55f32dab68d0 'int (String::*)() const'
|   |-RecordType 0x55f32dab6610 'String'
|   | `-CXXRecord 0x55f32dab6580 'String'
|   `-ParenType 0x55f32dab6870 'int () const' sugar
|     `-FunctionProtoType 0x55f32da8a400 'int () const' const cdecl
|       `-BuiltinType 0x55f32d785580 'int'
|-TypedefDecl 0x55f32dab69c8 <line:27:5, col:21> col:21 referenced intmax_t 'int64_t':'long'
| `-TypedefType 0x55f32d8dedc0 'int64_t' sugar
|   |-Typedef 0x55f32d7ee390 'int64_t'
|   `-TypedefType 0x55f32d7c7630 '__int64_t' sugar
|     |-Typedef 0x55f32d7c7208 '__int64_t'
|     `-BuiltinType 0x55f32d7855a0 'long'
|-TypedefDecl 0x55f32dab6a30 <line:28:5, col:22> col:22 referenced uintmax_t 'uint64_t':'unsigned long'
| `-TypedefType 0x55f32d8dece0 'uint64_t' sugar
|   |-Typedef 0x55f32d7ee530 'uint64_t'
|   `-TypedefType 0x55f32d7c76c0 '__uint64_t' sugar
|     |-Typedef 0x55f32d7c7278 '__uint64_t'
|     `-BuiltinType 0x55f32d785640 'unsigned long'
|-TypedefDecl 0x55f32dab6ac0 <line:36:5, col:22> col:22 int_large_t 'String::intmax_t':'long'
| `-TypedefType 0x55f32dab6a90 'String::intmax_t' sugar
|   |-Typedef 0x55f32dab69c8 'intmax_t'
|   `-TypedefType 0x55f32d8dedc0 'int64_t' sugar
|     |-Typedef 0x55f32d7ee390 'int64_t'
|     `-TypedefType 0x55f32d7c7630 '__int64_t' sugar
|       |-Typedef 0x55f32d7c7208 '__int64_t'
|       `-BuiltinType 0x55f32d7855a0 'long'
|-TypedefDecl 0x55f32dab6b50 <line:37:5, col:23> col:23 uint_large_t 'String::uintmax_t':'unsigned long'
| `-TypedefType 0x55f32dab6b20 'String::uintmax_t' sugar
|   |-Typedef 0x55f32dab6a30 'uintmax_t'
|   `-TypedefType 0x55f32d8dece0 'uint64_t' sugar
|     |-Typedef 0x55f32d7ee530 'uint64_t'
|     `-TypedefType 0x55f32d7c76c0 '__uint64_t' sugar
|       |-Typedef 0x55f32d7c7278 '__uint64_t'
|       `-BuiltinType 0x55f32d785640 'unsigned long'
|-CXXConstructorDecl 0x55f32dab6c10 <line:39:5, col:19> col:12 used String 'void ()' inline
|-CXXConstructorDecl 0x55f32dab6db8 <line:40:5, col:34> col:12 used String 'void (const String &)' inline
| `-ParmVarDecl 0x55f32dab6cf8 <col:19, col:33> col:33 x 'const String &'
|-CXXConstructorDecl 0x55f32dab6f68 <line:42:5, col:29> col:12 used String 'void (String &&)' inline
| `-ParmVarDecl 0x55f32dab6ea8 <col:19, col:28> col:28 x 'String &&'
|-CXXConstructorDecl 0x55f32dab70c0 <line:44:5, col:35> col:12 used String 'void (const char *)' inline
| `-ParmVarDecl 0x55f32dab7030 <col:19, col:31> col:31 cstr 'const char *'
|-CXXConstructorDecl 0x55f32dab72d8 <line:45:5, col:41> col:12 String 'void (const char *, int)' inline
| |-ParmVarDecl 0x55f32dab7188 <col:19, col:31> col:31 s 'const char *'
| `-ParmVarDecl 0x55f32dab7208 <col:34, col:38> col:38 len 'int'
|-CXXConstructorDecl 0x55f32dab74f8 <line:46:5, col:50> col:12 String 'void (const unsigned char *, int)' inline
| |-ParmVarDecl 0x55f32dab73a8 <col:19, col:40> col:40 s 'const unsigned char *'
| `-ParmVarDecl 0x55f32dab7428 <col:43, col:47> col:47 len 'int'
|-CXXConstructorDecl 0x55f32dab7718 <line:47:5, col:54> col:12 used String 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x55f32dab75c8 <col:19, col:31> col:31 first 'const char *'
| `-ParmVarDecl 0x55f32dab7648 <col:38, col:50> col:50 last 'const char *'
|-CXXConstructorDecl 0x55f32dab7938 <line:48:5, col:72> col:12 String 'void (const unsigned char *, const unsigned char *)' inline
| |-ParmVarDecl 0x55f32dab77e8 <col:19, col:40> col:40 first 'const unsigned char *'
| `-ParmVarDecl 0x55f32dab7868 <col:47, col:68> col:68 last 'const unsigned char *'
|-CXXConstructorDecl 0x55f32dab7ac8 <line:49:5, col:34> col:21 used String 'void (bool)' inline
| `-ParmVarDecl 0x55f32dab7a00 <col:28, col:33> col:33 x 'bool'
|-CXXConstructorDecl 0x55f32dab7c48 <line:50:5, col:34> col:21 String 'void (char)' inline
| `-ParmVarDecl 0x55f32dab7b88 <col:28, col:33> col:33 c 'char'
|-CXXConstructorDecl 0x55f32dab7dd8 <line:51:5, col:43> col:21 String 'void (unsigned char)' inline
| `-ParmVarDecl 0x55f32dab7d10 <col:28, col:42> col:42 c 'unsigned char'
|-CXXConstructorDecl 0x55f32dab7f30 <line:52:5, col:26> col:14 String 'void (int)'
| `-ParmVarDecl 0x55f32dab7ea0 <col:21, col:25> col:25 x 'int'
|-CXXConstructorDecl 0x55f32dab8088 <line:53:5, col:31> col:14 String 'void (unsigned int)'
| `-ParmVarDecl 0x55f32dab7ff8 <col:21, col:30> col:30 x 'unsigned int'
|-CXXConstructorDecl 0x55f32dab81e0 <line:54:5, col:27> col:14 String 'void (long)'
| `-ParmVarDecl 0x55f32dab8150 <col:21, col:26> col:26 x 'long'
|-CXXConstructorDecl 0x55f32dab8368 <line:55:5, col:36> col:14 String 'void (unsigned long)'
| `-ParmVarDecl 0x55f32dab82a8 <col:21, col:35> col:35 x 'unsigned long'
|-CXXConstructorDecl 0x55f32dab84f8 <line:57:5, col:32> col:14 String 'void (long long)'
| `-ParmVarDecl 0x55f32dab8430 <col:21, col:31> col:31 x 'long long'
|-CXXConstructorDecl 0x55f32dab8688 <line:58:5, col:41> col:14 String 'void (unsigned long long)'
| `-ParmVarDecl 0x55f32dab85c0 <col:21, col:40> col:40 x 'unsigned long long'
|-CXXConstructorDecl 0x55f32dab8818 <line:65:5, col:29> col:14 String 'void (double)'
| `-ParmVarDecl 0x55f32dab8750 <col:21, col:28> col:28 x 'double'
|-CXXDestructorDecl 0x55f32dab8910 <line:67:5, col:20> col:12 used ~String 'void () noexcept' inline
|-CXXMethodDecl 0x55f32dab8a38 <line:69:5, col:44> col:33 make_empty 'const String &()' static inline
|-CXXMethodDecl 0x55f32dab8bb8 <line:70:5, col:52> col:26 used make_uninitialized 'String (int)' static inline
| `-ParmVarDecl 0x55f32dab8af0 <col:45, col:49> col:49 len 'int'
|-CXXMethodDecl 0x55f32dab8d08 <line:71:5, col:74> col:26 make_garbage 'String (int)' static inline
| |-ParmVarDecl 0x55f32dab8c78 <col:39, col:43> col:43 len 'int'
| `-DeprecatedAttr 0x55f32dab8dc0 <col:63> "" ""
|-CXXMethodDecl 0x55f32dab8f08 <line:72:5, col:54> col:26 make_stable 'String (const char *)' static inline
| `-ParmVarDecl 0x55f32dab8e48 <col:38, col:50> col:50 cstr 'const char *'
|-CXXMethodDecl 0x55f32dab9118 <line:73:5, col:60> col:26 make_stable 'String (const char *, int)' static inline
| |-ParmVarDecl 0x55f32dab8fc8 <col:38, col:50> col:50 s 'const char *'
| `-ParmVarDecl 0x55f32dab9048 <col:53, col:57> col:57 len 'int'
|-CXXMethodDecl 0x55f32dab9338 <line:74:5, col:73> col:26 make_stable 'String (const char *, const char *)' static inline
| |-ParmVarDecl 0x55f32dab91e0 <col:38, col:50> col:50 first 'const char *'
| `-ParmVarDecl 0x55f32dab9260 <col:57, col:69> col:69 last 'const char *'
|-CXXMethodDecl 0x55f32dab9618 <line:75:5, col:80> col:19 make_numeric 'String (String::intmax_t, int, bool)' static
| |-ParmVarDecl 0x55f32dab93f8 <col:32, col:41> col:41 x 'String::intmax_t':'long'
| |-ParmVarDecl 0x55f32dab9478 <col:44, col:55> col:48 base 'int' cinit
| | `-IntegerLiteral 0x55f32dac5460 <col:55> 'int' 10
| `-ParmVarDecl 0x55f32dab94f0 <col:59, col:76> col:64 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55f32dac5480 <col:76> 'bool' true
|-CXXMethodDecl 0x55f32dab98f8 <line:76:5, col:81> col:19 make_numeric 'String (String::uintmax_t, int, bool)' static
| |-ParmVarDecl 0x55f32dab96e0 <col:32, col:42> col:42 x 'String::uintmax_t':'unsigned long'
| |-ParmVarDecl 0x55f32dab9760 <col:45, col:56> col:49 base 'int' cinit
| | `-IntegerLiteral 0x55f32dac5490 <col:56> 'int' 10
| `-ParmVarDecl 0x55f32dab97d8 <col:60, col:77> col:65 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55f32dac54b0 <col:77> 'bool' true
|-CXXMethodDecl 0x55f32dab9a00 <line:78:5, col:31> col:24 used data 'const char *() const' inline
|-CXXMethodDecl 0x55f32dab9ac8 <line:79:5, col:25> col:16 used length 'int () const' inline
|-CXXMethodDecl 0x55f32dab9b90 <line:81:5, col:60> col:52 c_str 'const char *() const'
| |-NoInlineAttr 0x55f32dab9c30 <col:20>
| `-OptimizeNoneAttr 0x55f32dab9c88 <col:30>
|-CXXConversionDecl 0x55f32dab9d78 <line:83:5, col:45> col:12 used operator int (String::*)() const 'String::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x55f32dab9e48 <line:84:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x55f32dab9f08 <line:85:5, col:29> col:17 operator! 'bool () const' inline
|-CXXMethodDecl 0x55f32dab9ff8 <line:87:5, col:35> col:27 used begin 'String::const_iterator () const' inline
|-CXXMethodDecl 0x55f32daba0b8 <line:88:5, col:33> col:27 used end 'String::const_iterator () const' inline
|-CXXMethodDecl 0x55f32daba238 <line:90:5, col:35> col:17 used operator[] 'char (int) const' inline
| `-ParmVarDecl 0x55f32daba170 <col:28, col:32> col:32 i 'int'
|-CXXMethodDecl 0x55f32daba388 <line:91:5, col:27> col:17 at 'char (int) const' inline
| `-ParmVarDecl 0x55f32daba2f8 <col:20, col:24> col:24 i 'int'
|-CXXMethodDecl 0x55f32daba478 <line:92:5, col:25> col:17 front 'char () const' inline
|-CXXMethodDecl 0x55f32daba538 <line:93:5, col:24> col:17 back 'char () const' inline
|-CXXMethodDecl 0x55f32daba788 <line:95:5, col:64> col:21 used hashcode 'uint32_t (const char *, const char *)' static
| |-ParmVarDecl 0x55f32daba5f0 <col:30, col:42> col:42 begin 'const char *'
| `-ParmVarDecl 0x55f32daba670 <col:49, col:61> col:61 end 'const char *'
|-CXXMethodDecl 0x55f32daba9e8 <line:96:5, line:97:33> line:96:28 hashcode 'uint32_t (const unsigned char *, const unsigned char *)' static inline
| |-ParmVarDecl 0x55f32daba850 <col:37, col:58> col:58 begin 'const unsigned char *'
| `-ParmVarDecl 0x55f32daba8d0 <line:97:9, col:30> col:30 end 'const unsigned char *'
|-CXXMethodDecl 0x55f32dabaab8 <line:98:5, col:32> col:21 hashcode 'uint32_t () const' inline
|-CXXMethodDecl 0x55f32dabacc8 <line:100:5, col:65> col:19 substring 'String (const char *, const char *) const' inline
| |-ParmVarDecl 0x55f32dabab70 <col:29, col:41> col:41 begin 'const char *'
| `-ParmVarDecl 0x55f32dababf0 <col:48, col:60> col:60 end 'const char *'
|-CXXMethodDecl 0x55f32dabaee8 <line:101:5, col:40> col:12 used substring 'String (int, int) const'
| |-ParmVarDecl 0x55f32dabad90 <col:22, col:26> col:26 pos 'int'
| `-ParmVarDecl 0x55f32dabae10 <col:31, col:35> col:35 len 'int'
|-CXXMethodDecl 0x55f32dabb078 <line:102:5, col:38> col:19 substring 'String (int) const' inline
| `-ParmVarDecl 0x55f32dabafb0 <col:29, col:33> col:33 pos 'int'
|-CXXMethodDecl 0x55f32dabb168 <line:103:5, col:25> col:12 trim_space 'String () const'
|-CXXMethodDecl 0x55f32dabb2d8 <line:105:5, col:41> col:17 equals 'bool (const String &) const' inline
| `-ParmVarDecl 0x55f32dabb218 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x55f32dabb4e8 <line:106:5, col:48> col:17 used equals 'bool (const char *, int) const' inline
| |-ParmVarDecl 0x55f32dabb398 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x55f32dabb418 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x55f32dabb700 <line:107:5, col:63> col:23 used compare 'int (const String &, const String &)' static inline
| |-ParmVarDecl 0x55f32dabb5a8 <col:31, col:45> col:45 a 'const String &'
| `-ParmVarDecl 0x55f32dabb620 <col:48, col:62> col:62 b 'const String &'
|-CXXMethodDecl 0x55f32dabb890 <line:108:5, col:41> col:16 used compare 'int (const String &) const' inline
| `-ParmVarDecl 0x55f32dabb7c0 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x55f32dabbab0 <line:109:5, col:41> col:9 used compare 'int (const char *, int) const'
| |-ParmVarDecl 0x55f32dabb950 <col:17, col:29> col:29 s 'const char *'
| `-ParmVarDecl 0x55f32dabb9d0 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x55f32dabbc00 <line:110:5, col:46> col:17 starts_with 'bool (const String &) const' inline
| `-ParmVarDecl 0x55f32dabbb70 <col:29, col:43> col:43 x 'const String &'
|-CXXMethodDecl 0x55f32dabbdd8 <line:111:5, col:46> col:10 used starts_with 'bool (const char *, int) const'
| |-ParmVarDecl 0x55f32dabbcc0 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x55f32dabbd40 <col:37, col:41> col:41 len 'int'
|-CXXMethodDecl 0x55f32dabbf28 <line:112:5, col:44> col:10 glob_match 'bool (const String &) const'
| `-ParmVarDecl 0x55f32dabbe98 <col:21, col:35> col:35 pattern 'const String &'
|-CXXMethodDecl 0x55f32dabc140 <line:125:5, col:42> col:9 find_left 'int (char, int) const'
| |-ParmVarDecl 0x55f32dabbfe0 <col:19, col:24> col:24 c 'char'
| `-ParmVarDecl 0x55f32dabc060 <col:27, col:39> col:31 start 'int' cinit
|   `-IntegerLiteral 0x55f32dac54c0 <col:39> 'int' 0
|-CXXMethodDecl 0x55f32dabc360 <line:126:5, col:51> col:9 find_left 'int (const String &, int) const'
| |-ParmVarDecl 0x55f32dabc200 <col:19, col:33> col:33 x 'const String &'
| `-ParmVarDecl 0x55f32dabc280 <col:36, col:48> col:40 start 'int' cinit
|   `-IntegerLiteral 0x55f32dac54e0 <col:48> 'int' 0
|-CXXMethodDecl 0x55f32dabc540 <line:127:5, col:52> col:9 find_right 'int (char, int) const'
| |-ParmVarDecl 0x55f32dabc420 <col:20, col:25> col:25 c 'char'
| `-ParmVarDecl 0x55f32dabc4a0 <col:28, col:40> col:32 start 'int' cinit
|   `-IntegerLiteral 0x55f32dac5500 <col:40> 'int' 2147483647
|-CXXMethodDecl 0x55f32dabc610 <line:129:5, col:20> col:12 lower 'String () const'
|-CXXMethodDecl 0x55f32dabc6d0 <line:130:5, col:20> col:12 upper 'String () const'
|-CXXMethodDecl 0x55f32dabc790 <line:131:5, col:24> col:12 printable 'String () const'
|-CXXMethodDecl 0x55f32dabc850 <line:132:5, col:25> col:12 quoted_hex 'String () const'
|-CXXMethodDecl 0x55f32dabc910 <line:133:5, col:26> col:12 encode_json 'String () const'
|-CXXMethodDecl 0x55f32dabcab8 <line:135:5, col:45> col:20 used operator= 'String &(const String &)' inline
| `-ParmVarDecl 0x55f32dabc9c0 <col:30, col:44> col:44 x 'const String &'
|-CXXMethodDecl 0x55f32dabcc38 <line:137:5, col:40> col:20 used operator= 'String &(String &&)' inline
| `-ParmVarDecl 0x55f32dabcb70 <col:30, col:39> col:39 x 'String &&'
|-CXXMethodDecl 0x55f32dabce10 <line:139:5, col:46> col:20 operator= 'String &(const char *)' inline
| `-ParmVarDecl 0x55f32dabccf8 <col:30, col:42> col:42 cstr 'const char *'
|-CXXMethodDecl 0x55f32dabcf88 <line:141:5, col:31> col:17 swap 'void (String &)' inline
| `-ParmVarDecl 0x55f32dabcec8 <col:22, col:30> col:30 x 'String &'
|-CXXMethodDecl 0x55f32dabd0d0 <line:143:5, col:39> col:17 append 'void (const String &)' inline
| `-ParmVarDecl 0x55f32dabd040 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x55f32dabd220 <line:144:5, col:40> col:17 used append 'void (const char *)' inline
| `-ParmVarDecl 0x55f32dabd190 <col:24, col:36> col:36 cstr 'const char *'
|-CXXMethodDecl 0x55f32dabd3f8 <line:145:5, col:46> col:17 used append 'void (const char *, int)' inline
| |-ParmVarDecl 0x55f32dabd2e0 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x55f32dabd360 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x55f32dabd5d8 <line:146:5, col:59> col:17 append 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x55f32dabd4c0 <col:24, col:36> col:36 first 'const char *'
| `-ParmVarDecl 0x55f32dabd540 <col:43, col:55> col:55 last 'const char *'
|-CXXMethodDecl 0x55f32dabd728 <line:147:5, col:30> col:17 append 'void (char)' inline
| `-ParmVarDecl 0x55f32dabd698 <col:24, col:29> col:29 c 'char'
|-CXXMethodDecl 0x55f32dabd938 <line:148:5, col:36> col:10 append_fill 'void (int, int)'
| |-ParmVarDecl 0x55f32dabd7e8 <col:22, col:26> col:26 c 'int'
| `-ParmVarDecl 0x55f32dabd868 <col:29, col:33> col:33 len 'int'
|-CXXMethodDecl 0x55f32dabda98 <line:149:5, col:39> col:11 used append_uninitialized 'char *(int)'
| `-ParmVarDecl 0x55f32dabda00 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x55f32dabdbf0 <line:150:5, col:68> col:18 append_garbage 'char *(int)' inline
| |-ParmVarDecl 0x55f32dabdb58 <col:33, col:37> col:37 len 'int'
| `-DeprecatedAttr 0x55f32dabdc98 <col:57> "" ""
|-CXXMethodDecl 0x55f32dabdda8 <line:152:5, col:46> col:20 used operator+= 'String &(const String &)' inline
| `-ParmVarDecl 0x55f32dabdd18 <col:31, col:45> col:45 x 'const String &'
|-CXXMethodDecl 0x55f32dabdef8 <line:153:5, col:47> col:20 operator+= 'String &(const char *)' inline
| `-ParmVarDecl 0x55f32dabde68 <col:31, col:43> col:43 cstr 'const char *'
|-CXXMethodDecl 0x55f32dabe078 <line:154:5, col:37> col:20 operator+= 'String &(char)' inline
| `-ParmVarDecl 0x55f32dabdfb0 <col:31, col:36> col:36 c 'char'
|-CXXMethodDecl 0x55f32dabe140 <line:160:5, col:29> col:17 is_shared 'bool () const' inline
|-CXXMethodDecl 0x55f32dabe200 <line:161:5, col:29> col:17 is_stable 'bool () const' inline
|-CXXMethodDecl 0x55f32dabe2c0 <line:163:5, col:60> col:19 unique 'String () const' inline
| `-DeprecatedAttr 0x55f32dabe360 <col:49> "" ""
|-CXXMethodDecl 0x55f32dabe3f0 <line:164:5, col:30> col:19 used unshared 'String () const' inline
|-CXXMethodDecl 0x55f32dabe4b0 <line:165:5, col:29> col:19 compact 'String () const' inline
|-CXXMethodDecl 0x55f32dabe5a0 <line:167:5, col:24> col:11 mutable_data 'char *()'
|-CXXMethodDecl 0x55f32dabe668 <line:168:5, col:25> col:11 mutable_c_str 'char *()'
|-CXXMethodDecl 0x55f32dabe728 <line:170:5, col:52> col:33 make_out_of_memory 'const String &()' static inline
|-CXXMethodDecl 0x55f32dabe7e8 <line:171:5, col:33> col:17 out_of_memory 'bool () const' inline
|-CXXMethodDecl 0x55f32dabe8e0 <line:172:5, col:50> col:31 out_of_memory_data 'const char *()' static inline
|-CXXMethodDecl 0x55f32dabe9a8 <line:173:5, col:44> col:23 out_of_memory_length 'int ()' static inline
|-CXXMethodDecl 0x55f32dabea70 <line:174:5, col:42> col:31 used empty_data 'const char *()' static inline
|-CXXMethodDecl 0x55f32dabec48 <line:180:5, col:81> col:31 skip_utf8_char 'const char *(const char *, const char *)' static inline
| |-ParmVarDecl 0x55f32dabeb28 <col:46, col:58> col:58 first 'const char *'
| `-ParmVarDecl 0x55f32dabeba8 <col:65, col:77> col:77 last 'const char *'
|-CXXMethodDecl 0x55f32dabee70 <line:181:5, line:182:38> line:181:33 used skip_utf8_char 'const unsigned char *(const unsigned char *, const unsigned char *)' static
| |-ParmVarDecl 0x55f32dabed10 <col:48, col:69> col:69 first 'const unsigned char *'
| `-ParmVarDecl 0x55f32dabed90 <line:182:13, col:34> col:34 last 'const unsigned char *'
|-VarDecl 0x55f32dabef80 <line:184:5, col:35> col:23 used bool_data 'const char [11]' static
|-AccessSpecDecl 0x55f32dabefe8 <line:186:3, col:10> col:3 private
|-CXXRecordDecl 0x55f32dabf010 <line:189:5, line:198:5> line:189:12 referenced struct memo_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55f32dabf128 <col:5, col:12> col:12 implicit struct memo_t
| |-FieldDecl 0x55f32dabf1c8 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
| |-FieldDecl 0x55f32dabf228 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
| |-FieldDecl 0x55f32dabf288 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
| `-FieldDecl 0x55f32dabf338 <line:197:2, col:18> col:7 real_data 'char [8]'
|-EnumDecl 0x55f32dabf3a0 <line:200:5, line:202:5> line:200:5
| `-EnumConstantDecl 0x55f32dabf5d8 <line:201:2, col:32> col:2 referenced MEMO_SPACE 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)'
|   `-ImplicitCastExpr 0x55f32dabf628 <col:15, col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55f32dabf5b8 <col:15, col:32> 'unsigned long' Int: 12
|       `-BinaryOperator 0x55f32dabf4c8 <col:15, col:32> 'unsigned long' '-'
|         |-UnaryExprOrTypeTraitExpr 0x55f32dabf470 <col:15, col:28> 'unsigned long' sizeof 'String::memo_t'
|         `-ImplicitCastExpr 0x55f32dabf4b0 <col:32> 'unsigned long' <IntegralCast>
|           `-IntegerLiteral 0x55f32dabf490 <col:32> 'int' 8
|-CXXRecordDecl 0x55f32dabf640 <line:204:5, line:208:5> line:204:12 referenced struct rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55f32dabf758 <col:5, col:12> col:12 implicit struct rep_t
| |-FieldDecl 0x55f32dabf800 <line:205:2, col:14> col:14 referenced data 'const char *'
| |-FieldDecl 0x55f32dabf868 <line:206:2, col:6> col:6 referenced length 'int'
| |-FieldDecl 0x55f32dabf8f8 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
| |-CXXConstructorDecl 0x55f32dac5990 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55f32dac5dc8 <col:12>
| |-CXXConstructorDecl 0x55f32dac5a98 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55f32dac5ba8 <col:12> col:12 used 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x55f32dabf800 'data' 'const char *'
| | | `-ImplicitCastExpr 0x55f32dac8350 <col:12> 'const char *' <LValueToRValue>
| | |   `-MemberExpr 0x55f32dac8320 <col:12> 'const char *const' lvalue .data 0x55f32dabf800
| | |     `-DeclRefExpr 0x55f32dac8300 <col:12> 'const String::rep_t' lvalue ParmVar 0x55f32dac5ba8 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x55f32dabf868 'length' 'int'
| | | `-ImplicitCastExpr 0x55f32dac83e0 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x55f32dac83b0 <col:12> 'const int' lvalue .length 0x55f32dabf868
| | |     `-DeclRefExpr 0x55f32dac8390 <col:12> 'const String::rep_t' lvalue ParmVar 0x55f32dac5ba8 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x55f32dabf8f8 'memo' 'String::memo_t *'
| | | `-ImplicitCastExpr 0x55f32dac8470 <col:12> 'String::memo_t *' <LValueToRValue>
| | |   `-MemberExpr 0x55f32dac8440 <col:12> 'String::memo_t *const' lvalue .memo 0x55f32dabf8f8
| | |     `-DeclRefExpr 0x55f32dac8420 <col:12> 'const String::rep_t' lvalue ParmVar 0x55f32dac5ba8 '' 'const String::rep_t &'
| | `-CompoundStmt 0x55f32dac84c8 <col:12>
| |-CXXConstructorDecl 0x55f32dac5c48 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55f32dac5c48
| | `-ParmVarDecl 0x55f32dac5d58 <col:12> col:12 'String::rep_t &&'
| |-CXXDestructorDecl 0x55f32dacb2b0 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x55f32dad6cc8 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55f32dad6dd8 <col:12> col:12 used 'const String::rep_t &'
| | `-CompoundStmt 0x55f32dad72f0 <col:12>
| |   |-BinaryOperator 0x55f32dad7108 <col:12> 'const char *' lvalue '='
| |   | |-MemberExpr 0x55f32dad70c0 <col:12> 'const char *' lvalue ->data 0x55f32dabf800
| |   | | `-CXXThisExpr 0x55f32dad70b0 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x55f32dad70f0 <col:12> 'const char *' <LValueToRValue>
| |   |   `-MemberExpr 0x55f32dad7080 <col:12> 'const char *const' lvalue .data 0x55f32dabf800
| |   |     `-DeclRefExpr 0x55f32dad7060 <col:12> 'const String::rep_t' lvalue ParmVar 0x55f32dad6dd8 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x55f32dad71d0 <col:12> 'int' lvalue '='
| |   | |-MemberExpr 0x55f32dad7188 <col:12> 'int' lvalue ->length 0x55f32dabf868
| |   | | `-CXXThisExpr 0x55f32dad7178 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x55f32dad71b8 <col:12> 'int' <LValueToRValue>
| |   |   `-MemberExpr 0x55f32dad7148 <col:12> 'const int' lvalue .length 0x55f32dabf868
| |   |     `-DeclRefExpr 0x55f32dad7128 <col:12> 'const String::rep_t' lvalue ParmVar 0x55f32dad6dd8 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x55f32dad7298 <col:12> 'String::memo_t *' lvalue '='
| |   | |-MemberExpr 0x55f32dad7250 <col:12> 'String::memo_t *' lvalue ->memo 0x55f32dabf8f8
| |   | | `-CXXThisExpr 0x55f32dad7240 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x55f32dad7280 <col:12> 'String::memo_t *' <LValueToRValue>
| |   |   `-MemberExpr 0x55f32dad7210 <col:12> 'String::memo_t *const' lvalue .memo 0x55f32dabf8f8
| |   |     `-DeclRefExpr 0x55f32dad71f0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55f32dad6dd8 '' 'const String::rep_t &'
| |   `-ReturnStmt 0x55f32dad72e0 <col:12>
| |     `-UnaryOperator 0x55f32dad72c8 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x55f32dad72b8 <col:12> 'String::rep_t *' this
| `-CXXMethodDecl 0x55f32dad6e48 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55f32dad6e48
|   `-ParmVarDecl 0x55f32dad6f58 <col:12> col:12 'String::rep_t &&'
|-FieldDecl 0x55f32dabf970 <line:211:5, col:19> col:19 referenced _r 'String::rep_t' mutable
|-CXXMethodDecl 0x55f32dabfbb8 <line:256:5, line:261:5> line:256:17 used assign_memo 'void (const char *, int, String::memo_t *) const' inline
| |-ParmVarDecl 0x55f32dabf9d8 <col:29, col:41> col:41 used data 'const char *'
| |-ParmVarDecl 0x55f32dabfa58 <col:47, col:51> col:51 used length 'int'
| |-ParmVarDecl 0x55f32dabfad0 <col:59, col:67> col:67 used memo 'String::memo_t *'
| `-CompoundStmt 0x55f32dac5950 <col:79, line:261:5>
|   |-BinaryOperator 0x55f32dac55c8 <line:257:2, col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x55f32dac5560 <col:2, col:5> 'const char *' lvalue .data 0x55f32dabf800
|   | | `-MemberExpr 0x55f32dac5530 <col:2> 'String::rep_t' lvalue ->_r 0x55f32dabf970
|   | |   `-CXXThisExpr 0x55f32dac5520 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x55f32dac55b0 <col:12> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x55f32dac5590 <col:12> 'const char *' lvalue ParmVar 0x55f32dabf9d8 'data' 'const char *'
|   |-BinaryOperator 0x55f32dac5690 <line:258:2, col:14> 'int' lvalue '='
|   | |-MemberExpr 0x55f32dac5628 <col:2, col:5> 'int' lvalue .length 0x55f32dabf868
|   | | `-MemberExpr 0x55f32dac55f8 <col:2> 'String::rep_t' lvalue ->_r 0x55f32dabf970
|   | |   `-CXXThisExpr 0x55f32dac55e8 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x55f32dac5678 <col:14> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55f32dac5658 <col:14> 'int' lvalue ParmVar 0x55f32dabfa58 'length' 'int'
|   `-IfStmt 0x55f32dac5938 <line:259:2, line:260:41>
|     |-ImplicitCastExpr 0x55f32dac57b0 <line:259:6, col:21> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x55f32dac5798 <col:6, col:21> 'String::memo_t *' <LValueToRValue>
|     |   `-ParenExpr 0x55f32dac5778 <col:6, col:21> 'String::memo_t *' lvalue
|     |     `-BinaryOperator 0x55f32dac5758 <col:7, col:17> 'String::memo_t *' lvalue '='
|     |       |-MemberExpr 0x55f32dac56f0 <col:7, col:10> 'String::memo_t *' lvalue .memo 0x55f32dabf8f8
|     |       | `-MemberExpr 0x55f32dac56c0 <col:7> 'String::rep_t' lvalue ->_r 0x55f32dabf970
|     |       |   `-CXXThisExpr 0x55f32dac56b0 <col:7> 'const String *' implicit this
|     |       `-ImplicitCastExpr 0x55f32dac5740 <col:17> 'String::memo_t *' <LValueToRValue>
|     |         `-DeclRefExpr 0x55f32dac5720 <col:17> 'String::memo_t *' lvalue ParmVar 0x55f32dabfad0 'memo' 'String::memo_t *'
|     `-CallExpr 0x55f32dac5910 <line:260:6, col:41> 'void'
|       |-ImplicitCastExpr 0x55f32dac58f8 <col:6, col:23> 'void (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55f32dac5800 <col:6, col:23> 'void (volatile uint32_t &)' lvalue CXXMethod 0x55f32daae5e8 'inc' 'void (volatile uint32_t &)'
|       `-MemberExpr 0x55f32dac5868 <col:27, col:33> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x55f32dabf1c8
|         `-ImplicitCastExpr 0x55f32dac5850 <col:27> 'String::memo_t *' <LValueToRValue>
|           `-DeclRefExpr 0x55f32dac5830 <col:27> 'String::memo_t *' lvalue ParmVar 0x55f32dabfad0 'memo' 'String::memo_t *'
|-CXXConstructorDecl 0x55f32dabfe68 <line:263:5, line:265:5> line:263:12 used String 'void (const char *, int, String::memo_t *)' inline
| |-ParmVarDecl 0x55f32dabfc88 <col:19, col:31> col:31 used data 'const char *'
| |-ParmVarDecl 0x55f32dabfd08 <col:37, col:41> col:41 used length 'int'
| |-ParmVarDecl 0x55f32dabfd80 <col:49, col:57> col:57 used memo 'String::memo_t *'
| |-CXXCtorInitializer Field 0x55f32dabf970 '_r' 'String::rep_t'
| | `-CXXConstructExpr 0x55f32dac5dd8 <col:12> 'String::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55f32dac5f68 <col:63, line:265:5>
|   `-CXXMemberCallExpr 0x55f32dac5ed0 <line:264:2, col:32> 'void'
|     |-MemberExpr 0x55f32dac5e40 <col:2> '<bound member function type>' ->assign_memo 0x55f32dabfbb8
|     | `-ImplicitCastExpr 0x55f32dac5f08 <col:2> 'const String *' <NoOp>
|     |   `-CXXThisExpr 0x55f32dac5e30 <col:2> 'String *' implicit this
|     |-ImplicitCastExpr 0x55f32dac5f20 <col:14> 'const char *' <LValueToRValue>
|     | `-DeclRefExpr 0x55f32dac5e70 <col:14> 'const char *' lvalue ParmVar 0x55f32dabfc88 'data' 'const char *'
|     |-ImplicitCastExpr 0x55f32dac5f38 <col:20> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x55f32dac5e90 <col:20> 'int' lvalue ParmVar 0x55f32dabfd08 'length' 'int'
|     `-ImplicitCastExpr 0x55f32dac5f50 <col:28> 'String::memo_t *' <LValueToRValue>
|       `-DeclRefExpr 0x55f32dac5eb0 <col:28> 'String::memo_t *' lvalue ParmVar 0x55f32dabfd80 'memo' 'String::memo_t *'
|-CXXMethodDecl 0x55f32dabfff8 <line:267:5, line:269:5> line:267:17 used assign 'void (const String &) const' inline
| |-ParmVarDecl 0x55f32dabff38 <col:24, col:38> col:38 used x 'const String &'
| `-CompoundStmt 0x55f32dac61c0 <col:47, line:269:5>
|   `-CXXMemberCallExpr 0x55f32dac6140 <line:268:2, col:47> 'void'
|     |-MemberExpr 0x55f32dac5f90 <col:2> '<bound member function type>' ->assign_memo 0x55f32dabfbb8
|     | `-CXXThisExpr 0x55f32dac5f80 <col:2> 'const String *' implicit this
|     |-ImplicitCastExpr 0x55f32dac6178 <col:14, col:19> 'const char *' <LValueToRValue>
|     | `-MemberExpr 0x55f32dac6010 <col:14, col:19> 'const char *' lvalue .data 0x55f32dabf800
|     |   `-MemberExpr 0x55f32dac5fe0 <col:14, col:16> 'String::rep_t' lvalue ._r 0x55f32dabf970
|     |     `-DeclRefExpr 0x55f32dac5fc0 <col:14> 'const String' lvalue ParmVar 0x55f32dabff38 'x' 'const String &'
|     |-ImplicitCastExpr 0x55f32dac6190 <col:25, col:30> 'int' <LValueToRValue>
|     | `-MemberExpr 0x55f32dac6090 <col:25, col:30> 'int' lvalue .length 0x55f32dabf868
|     |   `-MemberExpr 0x55f32dac6060 <col:25, col:27> 'String::rep_t' lvalue ._r 0x55f32dabf970
|     |     `-DeclRefExpr 0x55f32dac6040 <col:25> 'const String' lvalue ParmVar 0x55f32dabff38 'x' 'const String &'
|     `-ImplicitCastExpr 0x55f32dac61a8 <col:38, col:43> 'String::memo_t *' <LValueToRValue>
|       `-MemberExpr 0x55f32dac6110 <col:38, col:43> 'String::memo_t *' lvalue .memo 0x55f32dabf8f8
|         `-MemberExpr 0x55f32dac60e0 <col:38, col:40> 'String::rep_t' lvalue ._r 0x55f32dabf970
|           `-DeclRefExpr 0x55f32dac60c0 <col:38> 'const String' lvalue ParmVar 0x55f32dabff38 'x' 'const String &'
|-CXXMethodDecl 0x55f32dac00c0 <line:271:5, line:278:5> line:271:17 used deref 'void () const' inline
| `-CompoundStmt 0x55f32dac6b80 <col:31, line:278:5>
|   `-IfStmt 0x55f32dac6b68 <line:272:2, line:277:2>
|     |-ImplicitCastExpr 0x55f32dac6260 <line:272:6, col:9> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x55f32dac6248 <col:6, col:9> 'String::memo_t *' <LValueToRValue>
|     |   `-MemberExpr 0x55f32dac6218 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x55f32dabf8f8
|     |     `-MemberExpr 0x55f32dac61e8 <col:6> 'String::rep_t' lvalue ->_r 0x55f32dabf970
|     |       `-CXXThisExpr 0x55f32dac61d8 <col:6> 'const String *' implicit this
|     `-CompoundStmt 0x55f32dac6b40 <col:15, line:277:2>
|       |-ParenExpr 0x55f32dac6710 <line:273:6, col:166> 'void'
|       | `-ConditionalOperator 0x55f32dac66e0 <col:7, col:165> 'void'
|       |   |-CXXStaticCastExpr 0x55f32dac6370 <col:7, col:44> 'bool' static_cast<_Bool> <NoOp>
|       |   | `-ImplicitCastExpr 0x55f32dac6358 <col:27, col:36> 'bool' <IntegralToBoolean> part_of_explicit_cast
|       |   |   `-ImplicitCastExpr 0x55f32dac6340 <col:27, col:36> 'uint32_t':'unsigned int' <LValueToRValue> part_of_explicit_cast
|       |   |     `-MemberExpr 0x55f32dac6300 <col:27, col:36> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x55f32dabf1c8
|       |   |       `-ImplicitCastExpr 0x55f32dac62e8 <col:27, col:30> 'String::memo_t *' <LValueToRValue>
|       |   |         `-MemberExpr 0x55f32dac62b8 <col:27, col:30> 'String::memo_t *' lvalue .memo 0x55f32dabf8f8
|       |   |           `-MemberExpr 0x55f32dac6288 <col:27> 'String::rep_t' lvalue ->_r 0x55f32dabf970
|       |   |             `-CXXThisExpr 0x55f32dac6278 <col:27> 'const String *' implicit this
|       |   |-CXXFunctionalCastExpr 0x55f32dac63d0 <col:48, col:55> 'void' functional cast to void <ToVoid>
|       |   | `-IntegerLiteral 0x55f32dac63b0 <col:54> 'int' 0
|       |   `-CallExpr 0x55f32dac6640 <col:59, col:165> 'void'
|       |     |-ImplicitCastExpr 0x55f32dac6628 <col:59> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x55f32dac65a8 <col:59> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55f32d8255d0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|       |     |-ImplicitCastExpr 0x55f32dac6680 <col:74> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x55f32dac64b8 <col:74> 'const char [18]' lvalue "_r.memo->refcount"
|       |     |-ImplicitCastExpr 0x55f32dac6698 <col:95> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x55f32dac64e8 <col:95> 'const char [29]' lvalue "../dummy_inc/click/string.hh"
|       |     |-ImplicitCastExpr 0x55f32dac66b0 <col:127> 'unsigned int' <IntegralCast>
|       |     | `-IntegerLiteral 0x55f32dac6520 <col:127> 'int' 273
|       |     `-ImplicitCastExpr 0x55f32dac66c8 <col:132, col:146> 'const char *' <ArrayToPointerDecay>
|       |       `-UnaryOperator 0x55f32dac6590 <col:132, col:146> 'const char [27]' lvalue prefix '__extension__' cannot overflow
|       |         `-PredefinedExpr 0x55f32dac6578 <col:146> 'const char [27]' lvalue __PRETTY_FUNCTION__
|       |           `-StringLiteral 0x55f32dac6540 <col:146> 'const char [27]' lvalue "void String::deref() const"
|       |-IfStmt 0x55f32dac6a60 <line:274:6, line:275:22>
|       | |-CallExpr 0x55f32dac6920 <line:274:10, col:57> 'bool'
|       | | |-ImplicitCastExpr 0x55f32dac6908 <col:10, col:27> 'bool (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | | | `-DeclRefExpr 0x55f32dac6880 <col:10, col:27> 'bool (volatile uint32_t &)' lvalue CXXMethod 0x55f32daafa30 'dec_and_test' 'bool (volatile uint32_t &)'
|       | | `-MemberExpr 0x55f32dac6850 <col:40, col:49> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x55f32dabf1c8
|       | |   `-ImplicitCastExpr 0x55f32dac6838 <col:40, col:43> 'String::memo_t *' <LValueToRValue>
|       | |     `-MemberExpr 0x55f32dac6808 <col:40, col:43> 'String::memo_t *' lvalue .memo 0x55f32dabf8f8
|       | |       `-MemberExpr 0x55f32dac67d8 <col:40> 'String::rep_t' lvalue ->_r 0x55f32dabf970
|       | |         `-CXXThisExpr 0x55f32dac67c8 <col:40> 'const String *' implicit this
|       | `-CallExpr 0x55f32dac6a20 <line:275:3, col:22> 'void'
|       |   |-ImplicitCastExpr 0x55f32dac6a08 <col:3> 'void (*)(String::memo_t *)' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x55f32dac6948 <col:3> 'void (String::memo_t *)' lvalue CXXMethod 0x55f32dac48a0 'delete_memo' 'void (String::memo_t *)'
|       |   `-ImplicitCastExpr 0x55f32dac6a48 <col:15, col:18> 'String::memo_t *' <LValueToRValue>
|       |     `-MemberExpr 0x55f32dac69a8 <col:15, col:18> 'String::memo_t *' lvalue .memo 0x55f32dabf8f8
|       |       `-MemberExpr 0x55f32dac6978 <col:15> 'String::rep_t' lvalue ->_r 0x55f32dabf970
|       |         `-CXXThisExpr 0x55f32dac6968 <col:15> 'const String *' implicit this
|       `-BinaryOperator 0x55f32dac6b20 <line:276:6, col:16> 'String::memo_t *' lvalue '='
|         |-MemberExpr 0x55f32dac6ab8 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x55f32dabf8f8
|         | `-MemberExpr 0x55f32dac6a88 <col:6> 'String::rep_t' lvalue ->_r 0x55f32dabf970
|         |   `-CXXThisExpr 0x55f32dac6a78 <col:6> 'const String *' implicit this
|         `-ImplicitCastExpr 0x55f32dac6b08 <col:16> 'String::memo_t *' <NullToPointer>
|           `-IntegerLiteral 0x55f32dac6ae8 <col:16> 'int' 0
|-CXXMethodDecl 0x55f32dac0358 <line:280:5, col:56> col:10 used assign 'void (const char *, int, bool)'
| |-ParmVarDecl 0x55f32dac0178 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x55f32dac01f8 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x55f32dac0270 <col:41, col:46> col:46 need_deref 'bool'
|-CXXMethodDecl 0x55f32dac0430 <line:281:5, col:31> col:10 assign_out_of_memory 'void ()'
|-CXXMethodDecl 0x55f32dac0680 <line:282:5, col:53> col:10 used append 'void (const char *, int, String::memo_t *)'
| |-ParmVarDecl 0x55f32dac04e8 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x55f32dac0568 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x55f32dac05e0 <col:41, col:49> col:49 memo 'String::memo_t *'
|-CXXMethodDecl 0x55f32dac0868 <line:283:5, col:58> col:19 used hard_make_stable 'String (const char *, int)' static
| |-ParmVarDecl 0x55f32dac0750 <col:36, col:48> col:48 s 'const char *'
| `-ParmVarDecl 0x55f32dac07d0 <col:51, col:55> col:55 len 'int'
|-CXXMethodDecl 0x55f32dac0968 <line:284:5, line:286:5> line:284:27 used absent_memo 'String::memo_t *()' static inline
| `-CompoundStmt 0x55f32dac6c58 <col:41, line:286:5>
|   `-ReturnStmt 0x55f32dac6c48 <line:285:2, col:48>
|     `-CXXReinterpretCastExpr 0x55f32dac6c18 <col:9, col:48> 'String::memo_t *' reinterpret_cast<struct String::memo_t *> <IntegralToPointer>
|       `-CXXFunctionalCastExpr 0x55f32dac6be0 <col:36, col:47> 'uintptr_t':'unsigned long' functional cast to uintptr_t <NoOp>
|         `-ImplicitCastExpr 0x55f32dac6bc8 <col:46> 'uintptr_t':'unsigned long' <IntegralCast> part_of_explicit_cast
|           `-IntegerLiteral 0x55f32dac6ba8 <col:46> 'int' 1
|-CXXMethodDecl 0x55f32dac0c08 <line:287:5, col:68> col:20 create_memo 'String::memo_t *(char *, int, int)' static
| |-ParmVarDecl 0x55f32dac0a20 <col:32, col:38> col:38 space 'char *'
| |-ParmVarDecl 0x55f32dac0aa0 <col:45, col:49> col:49 dirty 'int'
| `-ParmVarDecl 0x55f32dac0b20 <col:56, col:60> col:60 capacity 'int'
|-CXXMethodDecl 0x55f32dac48a0 <line:288:5, col:41> col:17 used delete_memo 'void (String::memo_t *)' static
| `-ParmVarDecl 0x55f32dac0cd0 <col:29, col:37> col:37 memo 'String::memo_t *'
|-CXXMethodDecl 0x55f32dac4970 <line:289:5, col:30> col:17 hard_c_str 'const char *() const'
|-CXXMethodDecl 0x55f32dac4b40 <line:290:5, col:46> col:10 used hard_equals 'bool (const char *, int) const'
| |-ParmVarDecl 0x55f32dac4a28 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x55f32dac4aa8 <col:37, col:41> col:41 len 'int'
|-VarDecl 0x55f32dac4c00 <line:292:5, col:23> col:23 used null_data 'const char' static
|-VarDecl 0x55f32dac4cc8 <line:293:5, col:34> col:23 used oom_data 'const char [15]' static
|-VarDecl 0x55f32dac4dc8 <line:294:5, col:34> col:23 int_data 'const char [20]' static
|-VarDecl 0x55f32dac4e40 <line:295:5, col:24> col:24 used null_string_rep 'const String::rep_t' static
|-VarDecl 0x55f32dac4eb8 <line:296:5, col:24> col:24 used oom_string_rep 'const String::rep_t' static
|-EnumDecl 0x55f32dac4f20 <line:297:5, col:25> col:5
| `-EnumConstantDecl 0x55f32dac5020 <col:12, col:22> col:12 referenced oom_len 'String::(anonymous enum at ../dummy_inc/click/string.hh:297:5)'
|   `-ImplicitCastExpr 0x55f32dac5070 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55f32dac5000 <col:22> 'int' Int: 14
|       `-IntegerLiteral 0x55f32dac4fe0 <col:22> 'int' 14
|-CXXMethodDecl 0x55f32dac5288 <line:299:5, col:46> col:19 make_claim 'String (char *, int, int)' static
| |-ParmVarDecl 0x55f32dac50a0 <col:30, col:35> col:36 'char *'
| |-ParmVarDecl 0x55f32dac5120 <col:38> col:41 'int'
| `-ParmVarDecl 0x55f32dac51a0 <col:43> col:46 'int'
|-FriendDecl 0x55f32dac5390 <line:301:5, col:19> col:12 'struct rep_t':'String::rep_t'
`-FriendDecl 0x55f32dac5420 <line:302:5, col:18> col:12 'class StringAccum':'StringAccum'

Layout: <CGRecordLayout
  LLVMType:%class.String = type { %"struct.String::rep_t" }
  NonVirtualBaseLLVMType:%class.String = type { %"struct.String::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55f32db86e00 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'typed_array_memory<String>'
|-CXXRecordDecl 0x55f32db86fd8 prev 0x55f32db86e00 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55f32db87068 <col:46, col:52> col:46 public
|-TypedefDecl 0x55f32db87090 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55f32d785580 'int'
|-TypedefDecl 0x55f32db889f0 <line:13:5, col:31> col:31 type 'typename typed_array_memory<String>::type':'String'
| `-ElaboratedType 0x55f32db889a0 'typename typed_array_memory<String>::type' sugar
|   `-TypedefType 0x55f32db88980 'typed_array_memory<String>::type' sugar
|     |-Typedef 0x55f32db872a8 'type'
|     `-SubstTemplateTypeParmType 0x55f32db87270 'String' sugar
|       |-TemplateTypeParmType 0x55f32da79e20 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f32da79dd0 'T'
|       `-RecordType 0x55f32dab6610 'String'
|         `-CXXRecord 0x55f32dab6580 'String'
|-TypedefDecl 0x55f32db88aa8 <line:14:5, col:19> col:19 iterator 'vector_memory<typed_array_memory<String> >::type *'
| `-PointerType 0x55f32db88a70 'vector_memory<typed_array_memory<String> >::type *'
|   `-TypedefType 0x55f32db88a50 'vector_memory<typed_array_memory<String> >::type' sugar
|     |-Typedef 0x55f32db889f0 'type'
|     `-ElaboratedType 0x55f32db889a0 'typename typed_array_memory<String>::type' sugar
|       `-TypedefType 0x55f32db88980 'typed_array_memory<String>::type' sugar
|         |-Typedef 0x55f32db872a8 'type'
|         `-SubstTemplateTypeParmType 0x55f32db87270 'String' sugar
|           |-TemplateTypeParmType 0x55f32da79e20 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55f32da79dd0 'T'
|           `-RecordType 0x55f32dab6610 'String'
|             `-CXXRecord 0x55f32dab6580 'String'
|-CXXMethodDecl 0x55f32db88c28 <line:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<typed_array_memory<String> >::type *) const' inline
| `-ParmVarDecl 0x55f32db88b38 <col:36, col:48> col:48 argp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXConstructorDecl 0x55f32db88d18 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55f32db88df8 <line:23:5, col:20> col:5 used ~vector_memory 'void () noexcept'
|-CXXMethodDecl 0x55f32db890c8 <line:25:5, col:43> col:10 assign 'void (const vector_memory<typed_array_memory<String> > &)'
| `-ParmVarDecl 0x55f32db88fd0 <col:17, col:42> col:42 x 'const vector_memory<typed_array_memory<String> > &'
|-CXXMethodDecl 0x55f32db89308 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x55f32db89180 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55f32db891f8 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55f32db894d8 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x55f32db893c8 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55f32db89440 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55f32db89638 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<typed_array_memory<String> >::iterator ()'
|-CXXMethodDecl 0x55f32db89708 <line:31:5, line:33:5> line:31:14 end 'vector_memory<typed_array_memory<String> >::iterator ()'
|-CXXMethodDecl 0x55f32db89958 <line:34:5, col:48> col:14 insert 'vector_memory<typed_array_memory<String> >::iterator (vector_memory<typed_array_memory<String> >::iterator, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x55f32db897c8 <col:21, col:30> col:30 it 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
| `-ParmVarDecl 0x55f32db89840 <col:34, col:46> col:46 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55f32dd33cf8 <line:35:5, col:42> col:14 erase 'vector_memory<typed_array_memory<String> >::iterator (vector_memory<typed_array_memory<String> >::iterator, vector_memory<typed_array_memory<String> >::iterator)'
| |-ParmVarDecl 0x55f32dd33b70 <col:20, col:29> col:29 a 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
| `-ParmVarDecl 0x55f32dd33be8 <col:32, col:41> col:41 b 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55f32dd33eb8 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<typed_array_memory<String> >::type *)' inline
| `-ParmVarDecl 0x55f32dd33dc8 <col:27, col:39> col:39 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55f32dd34078 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<typed_array_memory<String> >::type *)' inline
| `-ParmVarDecl 0x55f32dd33f80 <col:37, col:43> col:43 vp 'vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55f32dd34130 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55f32dd341e0 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55f32dd34418 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x55f32dd34290 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55f32dd34308 <col:45, col:57> col:57 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55f32dd346b8 <line:66:5, col:35> col:10 swap 'void (vector_memory<typed_array_memory<String> > &)'
| `-ParmVarDecl 0x55f32dd345c0 <col:15, col:34> col:34 x 'vector_memory<typed_array_memory<String> > &'
|-FieldDecl 0x55f32dd34780 <line:68:5, col:11> col:11 l_ 'vector_memory<typed_array_memory<String> >::type *'
|-FieldDecl 0x55f32dd347d0 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55f32dd34820 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.1 = type { %class.String*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.1 = type { %class.String*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55f32dceddb0 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'String'
|-CXXRecordDecl 0x55f32db85868 prev 0x55f32dceddb0 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55f32db86d70 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<String>::type':'typed_array_memory<String>'
| `-ElaboratedType 0x55f32db86d20 'typename array_memory<String>::type' sugar
|   `-TypedefType 0x55f32db86d00 'conditional<false, sized_array_memory<24>, typed_array_memory<String> >::type' sugar
|     |-Typedef 0x55f32db86bb0 'type'
|     `-SubstTemplateTypeParmType 0x55f32db86a40 'typed_array_memory<String>' sugar
|       |-TemplateTypeParmType 0x55f32da4f9b0 'F' dependent depth 0 index 1
|       | `-TemplateTypeParm 0x55f32da4f958 'F'
|       `-RecordType 0x55f32db866a0 'typed_array_memory<String>'
|         `-ClassTemplateSpecialization 0x55f32db865c0 'typed_array_memory'
|-FieldDecl 0x55f32dd34870 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<String>::array_memory_type>':'vector_memory<typed_array_memory<String> >' mutable
|-AccessSpecDecl 0x55f32dd348c0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55f32dd348f8 <line:118:5, col:15> col:15 value_type 'String':'String'
| `-SubstTemplateTypeParmType 0x55f32db85900 'String' sugar
|   |-TemplateTypeParmType 0x55f32da87140 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55f32da870e8 'T'
|   `-RecordType 0x55f32dab6610 'String'
|     `-CXXRecord 0x55f32dab6580 'String'
|-TypedefDecl 0x55f32dd34988 <line:119:5, col:16> col:16 reference 'String &'
| `-LValueReferenceType 0x55f32dd34950 'String &'
|   `-SubstTemplateTypeParmType 0x55f32db85900 'String' sugar
|     |-TemplateTypeParmType 0x55f32da87140 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55f32da870e8 'T'
|     `-RecordType 0x55f32dab6610 'String'
|       `-CXXRecord 0x55f32dab6580 'String'
|-TypedefDecl 0x55f32dd34a18 <line:120:5, col:22> col:22 const_reference 'const String &'
| `-LValueReferenceType 0x55f32dd349e0 'const String &'
|   `-QualType 0x55f32db85901 'const String' const
|     `-SubstTemplateTypeParmType 0x55f32db85900 'String' sugar
|       |-TemplateTypeParmType 0x55f32da87140 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f32da870e8 'T'
|       `-RecordType 0x55f32dab6610 'String'
|         `-CXXRecord 0x55f32dab6580 'String'
|-TypedefDecl 0x55f32dd34aa8 <line:121:5, col:16> col:16 pointer 'String *'
| `-PointerType 0x55f32dd34a70 'String *'
|   `-SubstTemplateTypeParmType 0x55f32db85900 'String' sugar
|     |-TemplateTypeParmType 0x55f32da87140 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55f32da870e8 'T'
|     `-RecordType 0x55f32dab6610 'String'
|       `-CXXRecord 0x55f32dab6580 'String'
|-TypedefDecl 0x55f32dd34b38 <line:122:5, col:22> col:22 const_pointer 'const String *'
| `-PointerType 0x55f32dd34b00 'const String *'
|   `-QualType 0x55f32db85901 'const String' const
|     `-SubstTemplateTypeParmType 0x55f32db85900 'String' sugar
|       |-TemplateTypeParmType 0x55f32da87140 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f32da870e8 'T'
|       `-RecordType 0x55f32dab6610 'String'
|         `-CXXRecord 0x55f32dab6580 'String'
|-TypedefDecl 0x55f32dd35790 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<String>::type':'const String &'
| `-ElaboratedType 0x55f32dd35740 'typename fast_argument<String>::type' sugar
|   `-TypedefType 0x55f32dd35720 'fast_argument<String, true>::type' sugar
|     |-Typedef 0x55f32dd35658 'type'
|     `-LValueReferenceType 0x55f32dd35620 'const String &'
|       `-QualType 0x55f32dd353c1 'const String' const
|         `-SubstTemplateTypeParmType 0x55f32dd353c0 'String' sugar
|           |-TemplateTypeParmType 0x55f32da59b20 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55f32da59ac8 'T'
|           `-RecordType 0x55f32dab6610 'String'
|             `-CXXRecord 0x55f32dab6580 'String'
|-TypedefDecl 0x55f32dd357f8 <line:126:5, col:22> col:22 const_access_type 'const String &'
| `-LValueReferenceType 0x55f32dd349e0 'const String &'
|   `-QualType 0x55f32db85901 'const String' const
|     `-SubstTemplateTypeParmType 0x55f32db85900 'String' sugar
|       |-TemplateTypeParmType 0x55f32da87140 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f32da870e8 'T'
|       `-RecordType 0x55f32dab6610 'String'
|         `-CXXRecord 0x55f32dab6580 'String'
|-TypedefDecl 0x55f32dd35850 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55f32d785580 'int'
|-TypedefDecl 0x55f32dd358b8 <line:130:5, col:16> col:16 iterator 'String *'
| `-PointerType 0x55f32dd34a70 'String *'
|   `-SubstTemplateTypeParmType 0x55f32db85900 'String' sugar
|     |-TemplateTypeParmType 0x55f32da87140 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55f32da870e8 'T'
|     `-RecordType 0x55f32dab6610 'String'
|       `-CXXRecord 0x55f32dab6580 'String'
|-TypedefDecl 0x55f32dd35920 <line:131:5, col:22> col:22 const_iterator 'const String *'
| `-PointerType 0x55f32dd34b00 'const String *'
|   `-QualType 0x55f32db85901 'const String' const
|     `-SubstTemplateTypeParmType 0x55f32db85900 'String' sugar
|       |-TemplateTypeParmType 0x55f32da87140 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f32da870e8 'T'
|       `-RecordType 0x55f32dab6610 'String'
|         `-CXXRecord 0x55f32dab6580 'String'
|-EnumDecl 0x55f32dd35978 <line:134:5> col:5
| `-EnumConstantDecl 0x55f32dd35a70 <col:12, col:40> col:12 RESERVE_GROW 'Vector<String>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55f32dd35a50 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55f32da887c8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55f32da887a0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55f32da88780 <col:40> 'int' 1
|-CXXConstructorDecl 0x55f32dd35af8 <line:137:5, col:28> col:21 used Vector 'void ()' inline
|-CXXConstructorDecl 0x55f32dd35d88 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x55f32dd35bb0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55f32dd35c50 <col:41, col:61> col:61 v 'Vector<String>::value_argument_type':'const String &'
|-CXXConstructorDecl 0x55f32dd36018 <line:139:5, col:37> col:12 Vector 'void (const Vector<String> &)' inline
| `-ParmVarDecl 0x55f32dd35f00 <col:19, col:36> col:36 x 'const Vector<String> &'
|-CXXConstructorDecl 0x55f32dd362d8 <line:141:5, col:32> col:12 Vector 'void (Vector<String> &&)' inline
| `-ParmVarDecl 0x55f32dd361c0 <col:19, col:31> col:31 x 'Vector<String> &&'
|-CXXMethodDecl 0x55f32dd365f0 <line:144:5, col:51> col:23 operator= 'Vector<String> &(const Vector<String> &)' inline
| `-ParmVarDecl 0x55f32dd364d0 <col:33, col:50> col:50 x 'const Vector<String> &'
|-CXXMethodDecl 0x55f32dd36900 <line:146:5, col:46> col:23 operator= 'Vector<String> &(Vector<String> &&)' inline
| `-ParmVarDecl 0x55f32dd367e0 <col:33, col:45> col:45 x 'Vector<String> &&'
|-CXXMethodDecl 0x55f32dd36bf0 <line:148:5, col:70> col:23 assign 'Vector<String> &(Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x55f32dd36a38 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55f32dd36ab0 <col:43, col:69> col:63 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x55f32dd36d18 <line:150:5, col:55> col:49 begin 'Vector<String>::iterator ()'
| |-NoInlineAttr 0x55f32dd36dc8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f32dd36e20 <col:30> Inherited
|-CXXMethodDecl 0x55f32dd36e68 <line:151:5, col:53> col:49 end 'Vector<String>::iterator ()'
| |-NoInlineAttr 0x55f32dd36f18 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f32dd36f70 <col:30> Inherited
|-CXXMethodDecl 0x55f32dd37038 <line:152:5, col:63> col:55 used begin 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x55f32dd370e8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f32dd37140 <col:30> Inherited
|-CXXMethodDecl 0x55f32dd37188 <line:153:5, col:61> col:55 used end 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x55f32dd37238 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f32dd37290 <col:30> Inherited
|-CXXMethodDecl 0x55f32dd372d8 <line:154:5, col:64> col:55 cbegin 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x55f32dd37388 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f32dd373e0 <col:30> Inherited
|-CXXMethodDecl 0x55f32dd37428 <line:155:5, col:62> col:55 cend 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x55f32dd374d8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f32dd37530 <col:30> Inherited
|-CXXMethodDecl 0x55f32dd37558 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55f32dd37608 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55f32dd376b8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55f32dd37878 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x55f32dd37768 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55f32dd377e0 <col:37, col:63> col:57 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x55f32dd379c8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55f32dd37938 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f32dd37b78 <line:163:5, col:65> col:43 operator[] 'String &(Vector::size_type)'
| |-ParmVarDecl 0x55f32dd37a80 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55f32dd37c30 <col:20>
| `-OptimizeNoneAttr 0x55f32dd37c88 <col:30>
|-CXXMethodDecl 0x55f32dd37da8 <line:164:5, col:73> col:49 operator[] 'const String &(Vector::size_type) const'
| |-ParmVarDecl 0x55f32dd37cb0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55f32dd37e60 <col:20>
| `-OptimizeNoneAttr 0x55f32dd37eb8 <col:30>
|-CXXMethodDecl 0x55f32dd37f70 <line:165:5, col:29> col:15 at 'String &(Vector::size_type)' inline
| `-ParmVarDecl 0x55f32dd37ee0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f32dd380b8 <line:166:5, col:37> col:21 at 'const String &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55f32dd38028 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f32dd381e8 <line:167:5, col:21> col:15 front 'String &()' inline
|-CXXMethodDecl 0x55f32dd382e8 <line:168:5, col:29> col:21 front 'const String &() const' inline
|-CXXMethodDecl 0x55f32dd383b8 <line:169:5, col:20> col:15 back 'String &()' inline
|-CXXMethodDecl 0x55f32dd38488 <line:170:5, col:28> col:21 back 'const String &() const' inline
|-CXXMethodDecl 0x55f32dd385c8 <line:172:5, col:39> col:15 unchecked_at 'String &(Vector::size_type)' inline
| `-ParmVarDecl 0x55f32dd38538 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f32dd38710 <line:173:5, col:47> col:21 unchecked_at 'const String &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55f32dd38680 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f32dd38858 <line:174:5, col:59> col:15 at_u 'String &(Vector::size_type)' inline
| |-ParmVarDecl 0x55f32dd387c8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55f32dd38910 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55f32dd38a10 <line:175:5, col:71> col:21 at_u 'const String &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55f32dd38980 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55f32dd38ac8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55f32dd38b88 <line:177:5, col:20> col:15 data 'String *()' inline
|-CXXMethodDecl 0x55f32dd38c88 <line:178:5, col:28> col:21 data 'const String *() const' inline
|-CXXMethodDecl 0x55f32dd38e08 <line:180:5, col:48> col:17 used push_back 'void (Vector<String>::value_argument_type)' inline
| `-ParmVarDecl 0x55f32dd38d48 <col:27, col:47> col:47 v 'Vector<String>::value_argument_type':'const String &'
|-FunctionTemplateDecl 0x55f32dd395c8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55f32dd38ec0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<String>':'fast_argument<String, true>'
| `-CXXMethodDecl 0x55f32dd39528 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (String &&)' inline
|   `-ParmVarDecl 0x55f32dd39428 <col:58, col:62> col:62 v 'String &&'
|-CXXMethodDecl 0x55f32dd396a8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55f32dd397f8 <line:186:5, col:49> col:17 push_front 'void (Vector<String>::value_argument_type)' inline
| `-ParmVarDecl 0x55f32dd39768 <col:28, col:48> col:48 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x55f32dd398b0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55f32dd39af8 <line:189:5, col:62> col:21 insert 'Vector<String>::iterator (Vector<String>::iterator, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x55f32dd39970 <col:28, col:37> col:37 it 'Vector<String>::iterator':'String *'
| `-ParmVarDecl 0x55f32dd399e8 <col:41, col:61> col:61 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x55f32dd39c88 <line:190:5, col:38> col:21 erase 'Vector<String>::iterator (Vector<String>::iterator)' inline
| `-ParmVarDecl 0x55f32dd39bc8 <col:27, col:36> col:36 it 'Vector<String>::iterator':'String *'
|-CXXMethodDecl 0x55f32dd39e98 <line:191:5, col:49> col:21 erase 'Vector<String>::iterator (Vector<String>::iterator, Vector<String>::iterator)' inline
| |-ParmVarDecl 0x55f32dd39d50 <col:27, col:36> col:36 a 'Vector<String>::iterator':'String *'
| `-ParmVarDecl 0x55f32dd39dc8 <col:39, col:48> col:48 b 'Vector<String>::iterator':'String *'
|-CXXMethodDecl 0x55f32dd39f58 <line:193:5, col:23> col:17 used clear 'void ()' inline
|-CXXMethodDecl 0x55f32dd3a1b8 <line:195:5, col:34> col:17 swap 'void (Vector<String> &)' inline
| `-ParmVarDecl 0x55f32dd3a0c0 <col:22, col:33> col:33 x 'Vector<String> &'
`-CXXDestructorDecl 0x55f32dd3a288 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit used ~Vector 'void () noexcept' inline default
  `-CompoundStmt 0x55f32dde93a8 <col:29>

Layout: <CGRecordLayout
  LLVMType:%class.Vector.0 = type { %class.vector_memory.1 }
  NonVirtualBaseLLVMType:%class.Vector.0 = type { %class.vector_memory.1 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55f32dd78f00 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<4>'
|-CXXRecordDecl 0x55f32dd790d8 prev 0x55f32dd78f00 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55f32dd79168 <col:46, col:52> col:46 public
|-TypedefDecl 0x55f32dd79190 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55f32d785580 'int'
|-TypedefDecl 0x55f32dd7ad60 <line:13:5, col:31> col:31 type 'typename sized_array_memory<4>::type':'char_array<4>'
| `-ElaboratedType 0x55f32dd7ad10 'typename sized_array_memory<4>::type' sugar
|   `-TypedefType 0x55f32dd79640 'sized_array_memory<4>::type' sugar
|     |-Typedef 0x55f32dd79540 'type'
|     `-TemplateSpecializationType 0x55f32dd794d0 'char_array<4UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x55f32dd793b0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 4
|       |   `-SubstNonTypeTemplateParmExpr 0x55f32dd79390 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x55f32dd79370 <col:24> 'unsigned long' 4
|       `-RecordType 0x55f32dd794b0 'char_array<4>'
|         `-ClassTemplateSpecialization 0x55f32dd793d0 'char_array'
|-TypedefDecl 0x55f32dd7ae18 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<4> >::type *'
| `-PointerType 0x55f32dd7ade0 'vector_memory<sized_array_memory<4> >::type *'
|   `-TypedefType 0x55f32dd7adc0 'vector_memory<sized_array_memory<4> >::type' sugar
|     |-Typedef 0x55f32dd7ad60 'type'
|     `-ElaboratedType 0x55f32dd7ad10 'typename sized_array_memory<4>::type' sugar
|       `-TypedefType 0x55f32dd79640 'sized_array_memory<4>::type' sugar
|         |-Typedef 0x55f32dd79540 'type'
|         `-TemplateSpecializationType 0x55f32dd794d0 'char_array<4UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x55f32dd793b0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 4
|           |   `-SubstNonTypeTemplateParmExpr 0x55f32dd79390 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x55f32dd79370 <col:24> 'unsigned long' 4
|           `-RecordType 0x55f32dd794b0 'char_array<4>'
|             `-ClassTemplateSpecialization 0x55f32dd793d0 'char_array'
|-CXXMethodDecl 0x55f32dd7af98 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<4> >::type *) const' inline
| `-ParmVarDecl 0x55f32dd7aea8 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXConstructorDecl 0x55f32dd7b088 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55f32dd7b168 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x55f32dd7b168
|-CXXMethodDecl 0x55f32dd7b438 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<4> > &)'
| `-ParmVarDecl 0x55f32dd7b340 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<4> > &'
|-CXXMethodDecl 0x55f32dd7b678 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x55f32dd7b4f0 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55f32dd7b568 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55f32dd7b848 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x55f32dd7b738 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55f32dd7b7b0 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55f32dd7b9a8 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<4> >::iterator ()'
|-CXXMethodDecl 0x55f32dd7ba78 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<4> >::iterator ()'
|-CXXMethodDecl 0x55f32dd7bcc8 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<4> >::iterator (vector_memory<sized_array_memory<4> >::iterator, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x55f32dd7bb38 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<4> >::iterator':'vector_memory<sized_array_memory<4> >::type *'
| `-ParmVarDecl 0x55f32dd7bbb0 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55f32dd7bf28 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<4> >::iterator (vector_memory<sized_array_memory<4> >::iterator, vector_memory<sized_array_memory<4> >::iterator)'
| |-ParmVarDecl 0x55f32dd7bd98 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<4> >::iterator':'vector_memory<sized_array_memory<4> >::type *'
| `-ParmVarDecl 0x55f32dd7be10 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<4> >::iterator':'vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55f32dd7c0e8 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<4> >::type *)' inline
| `-ParmVarDecl 0x55f32dd7bff8 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55f32dd7c2a8 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<4> >::type *)' inline
| `-ParmVarDecl 0x55f32dd7c1b0 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55f32dd7c360 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55f32dd7c410 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55f32dd7c648 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x55f32dd7c4c0 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55f32dd7c538 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55f32dd82cf8 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<4> > &)'
| `-ParmVarDecl 0x55f32dd7c7f0 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<4> > &'
|-FieldDecl 0x55f32dd82dc0 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<4> >::type *'
|-FieldDecl 0x55f32dd82e10 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55f32dd82e60 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.3 = type { %struct.char_array.4*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.3 = type { %struct.char_array.4*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55f32de9a0c0 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'unsigned int'
|-CXXRecordDecl 0x55f32de9a2c8 prev 0x55f32de9a0c0 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55f32de9b2e0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<unsigned int>::type':'sized_array_memory<4>'
| `-ElaboratedType 0x55f32de9b290 'typename array_memory<unsigned int>::type' sugar
|   `-TypedefType 0x55f32de9b270 'conditional<true, sized_array_memory<4>, typed_array_memory<unsigned int> >::type' sugar
|     |-Typedef 0x55f32de9b120 'type'
|     `-SubstTemplateTypeParmType 0x55f32dd78ad0 'sized_array_memory<4>' sugar
|       |-TemplateTypeParmType 0x55f32da4f230 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f32da4f1d8 'T'
|       `-RecordType 0x55f32dd78620 'sized_array_memory<4>'
|         `-ClassTemplateSpecialization 0x55f32dd78538 'sized_array_memory'
|-FieldDecl 0x55f32de9b3e0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<unsigned int>::array_memory_type>':'vector_memory<sized_array_memory<4> >' mutable
|-AccessSpecDecl 0x55f32de9b430 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55f32de9b468 <line:118:5, col:15> col:15 value_type 'unsigned int':'unsigned int'
| `-SubstTemplateTypeParmType 0x55f32de9a360 'unsigned int' sugar
|   |-TemplateTypeParmType 0x55f32da87140 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55f32da870e8 'T'
|   `-BuiltinType 0x55f32d785620 'unsigned int'
|-TypedefDecl 0x55f32de9b4f8 <line:119:5, col:16> col:16 reference 'unsigned int &'
| `-LValueReferenceType 0x55f32de9b4c0 'unsigned int &'
|   `-SubstTemplateTypeParmType 0x55f32de9a360 'unsigned int' sugar
|     |-TemplateTypeParmType 0x55f32da87140 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55f32da870e8 'T'
|     `-BuiltinType 0x55f32d785620 'unsigned int'
|-TypedefDecl 0x55f32de9b5b8 <line:120:5, col:22> col:22 const_reference 'const unsigned int &'
| `-LValueReferenceType 0x55f32de9b580 'const unsigned int &'
|   `-QualType 0x55f32de9a361 'const unsigned int' const
|     `-SubstTemplateTypeParmType 0x55f32de9a360 'unsigned int' sugar
|       |-TemplateTypeParmType 0x55f32da87140 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f32da870e8 'T'
|       `-BuiltinType 0x55f32d785620 'unsigned int'
|-TypedefDecl 0x55f32de9b648 <line:121:5, col:16> col:16 pointer 'unsigned int *'
| `-PointerType 0x55f32de9b610 'unsigned int *'
|   `-SubstTemplateTypeParmType 0x55f32de9a360 'unsigned int' sugar
|     |-TemplateTypeParmType 0x55f32da87140 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55f32da870e8 'T'
|     `-BuiltinType 0x55f32d785620 'unsigned int'
|-TypedefDecl 0x55f32de9b6d8 <line:122:5, col:22> col:22 const_pointer 'const unsigned int *'
| `-PointerType 0x55f32de9b6a0 'const unsigned int *'
|   `-QualType 0x55f32de9a361 'const unsigned int' const
|     `-SubstTemplateTypeParmType 0x55f32de9a360 'unsigned int' sugar
|       |-TemplateTypeParmType 0x55f32da87140 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f32da870e8 'T'
|       `-BuiltinType 0x55f32d785620 'unsigned int'
|-TypedefDecl 0x55f32de9c2c0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<unsigned int>::type':'unsigned int'
| `-ElaboratedType 0x55f32de9c270 'typename fast_argument<unsigned int>::type' sugar
|   `-TypedefType 0x55f32de9c250 'fast_argument<unsigned int, false>::type' sugar
|     |-Typedef 0x55f32de9c1e0 'type'
|     `-SubstTemplateTypeParmType 0x55f32de9bfa0 'unsigned int' sugar
|       |-TemplateTypeParmType 0x55f32da5a250 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f32da5a200 'T'
|       `-BuiltinType 0x55f32d785620 'unsigned int'
|-TypedefDecl 0x55f32de9c328 <line:126:5, col:22> col:22 const_access_type 'const unsigned int &'
| `-LValueReferenceType 0x55f32de9b580 'const unsigned int &'
|   `-QualType 0x55f32de9a361 'const unsigned int' const
|     `-SubstTemplateTypeParmType 0x55f32de9a360 'unsigned int' sugar
|       |-TemplateTypeParmType 0x55f32da87140 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f32da870e8 'T'
|       `-BuiltinType 0x55f32d785620 'unsigned int'
|-TypedefDecl 0x55f32de9c380 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55f32d785580 'int'
|-TypedefDecl 0x55f32de9c3e8 <line:130:5, col:16> col:16 iterator 'unsigned int *'
| `-PointerType 0x55f32de9b610 'unsigned int *'
|   `-SubstTemplateTypeParmType 0x55f32de9a360 'unsigned int' sugar
|     |-TemplateTypeParmType 0x55f32da87140 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55f32da870e8 'T'
|     `-BuiltinType 0x55f32d785620 'unsigned int'
|-TypedefDecl 0x55f32de9c450 <line:131:5, col:22> col:22 const_iterator 'const unsigned int *'
| `-PointerType 0x55f32de9b6a0 'const unsigned int *'
|   `-QualType 0x55f32de9a361 'const unsigned int' const
|     `-SubstTemplateTypeParmType 0x55f32de9a360 'unsigned int' sugar
|       |-TemplateTypeParmType 0x55f32da87140 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f32da870e8 'T'
|       `-BuiltinType 0x55f32d785620 'unsigned int'
|-EnumDecl 0x55f32de9c4a8 <line:134:5> col:5
| `-EnumConstantDecl 0x55f32de9c5a0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<unsigned int>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55f32de9c580 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55f32da887c8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55f32da887a0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55f32da88780 <col:40> 'int' 1
|-CXXConstructorDecl 0x55f32de9c628 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55f32de9c878 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<unsigned int>::value_argument_type)' inline
| |-ParmVarDecl 0x55f32de9c6e0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55f32de9c780 <col:41, col:61> col:61 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXConstructorDecl 0x55f32de9cb38 <line:139:5, col:37> col:12 Vector 'void (const Vector<unsigned int> &)' inline
| `-ParmVarDecl 0x55f32de9ca20 <col:19, col:36> col:36 x 'const Vector<unsigned int> &'
|-CXXConstructorDecl 0x55f32de9cdf8 <line:141:5, col:32> col:12 Vector 'void (Vector<unsigned int> &&)' inline
| `-ParmVarDecl 0x55f32de9cce0 <col:19, col:31> col:31 x 'Vector<unsigned int> &&'
|-CXXMethodDecl 0x55f32de9d140 <line:144:5, col:51> col:23 operator= 'Vector<unsigned int> &(const Vector<unsigned int> &)' inline
| `-ParmVarDecl 0x55f32de9d020 <col:33, col:50> col:50 x 'const Vector<unsigned int> &'
|-CXXMethodDecl 0x55f32de9d450 <line:146:5, col:46> col:23 operator= 'Vector<unsigned int> &(Vector<unsigned int> &&)' inline
| `-ParmVarDecl 0x55f32de9d330 <col:33, col:45> col:45 x 'Vector<unsigned int> &&'
|-CXXMethodDecl 0x55f32de9d740 <line:148:5, col:70> col:23 assign 'Vector<unsigned int> &(Vector::size_type, Vector<unsigned int>::value_argument_type)' inline
| |-ParmVarDecl 0x55f32de9d588 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55f32de9d600 <col:43, col:69> col:63 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXMethodDecl 0x55f32de9d868 <line:150:5, col:55> col:49 begin 'Vector<unsigned int>::iterator ()'
| |-NoInlineAttr 0x55f32de9d948 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f32de9d9a0 <col:30> Inherited
|-CXXMethodDecl 0x55f32de9d9e8 <line:151:5, col:53> col:49 end 'Vector<unsigned int>::iterator ()'
| |-NoInlineAttr 0x55f32de9da98 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f32de9daf0 <col:30> Inherited
|-CXXMethodDecl 0x55f32de9db88 <line:152:5, col:63> col:55 begin 'Vector<unsigned int>::const_iterator () const'
| |-NoInlineAttr 0x55f32de9dc38 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f32de9dc90 <col:30> Inherited
|-CXXMethodDecl 0x55f32de9dcd8 <line:153:5, col:61> col:55 end 'Vector<unsigned int>::const_iterator () const'
| |-NoInlineAttr 0x55f32de9dd88 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f32de9dde0 <col:30> Inherited
|-CXXMethodDecl 0x55f32de9de28 <line:154:5, col:64> col:55 cbegin 'Vector<unsigned int>::const_iterator () const'
| |-NoInlineAttr 0x55f32de9ded8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f32de9df30 <col:30> Inherited
|-CXXMethodDecl 0x55f32de9df78 <line:155:5, col:62> col:55 cend 'Vector<unsigned int>::const_iterator () const'
| |-NoInlineAttr 0x55f32de9e028 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f32de9e080 <col:30> Inherited
|-CXXMethodDecl 0x55f32de9e0a8 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55f32de9e158 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55f32de9e208 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55f32de9e3c8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<unsigned int>::value_argument_type)' inline
| |-ParmVarDecl 0x55f32de9e2b8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55f32de9e330 <col:37, col:63> col:57 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXMethodDecl 0x55f32de9fc20 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55f32de9fb90 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f32de9fdc8 <line:163:5, col:65> col:43 operator[] 'unsigned int &(Vector::size_type)'
| |-ParmVarDecl 0x55f32de9fcd8 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55f32de9fe80 <col:20>
| `-OptimizeNoneAttr 0x55f32de9fed8 <col:30>
|-CXXMethodDecl 0x55f32de9fff8 <line:164:5, col:73> col:49 operator[] 'const unsigned int &(Vector::size_type) const'
| |-ParmVarDecl 0x55f32de9ff00 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55f32dea00b0 <col:20>
| `-OptimizeNoneAttr 0x55f32dea0108 <col:30>
|-CXXMethodDecl 0x55f32dea01c0 <line:165:5, col:29> col:15 at 'unsigned int &(Vector::size_type)' inline
| `-ParmVarDecl 0x55f32dea0130 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f32dea0308 <line:166:5, col:37> col:21 at 'const unsigned int &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55f32dea0278 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f32dea0438 <line:167:5, col:21> col:15 front 'unsigned int &()' inline
|-CXXMethodDecl 0x55f32dea0568 <line:168:5, col:29> col:21 front 'const unsigned int &() const' inline
|-CXXMethodDecl 0x55f32dea0638 <line:169:5, col:20> col:15 back 'unsigned int &()' inline
|-CXXMethodDecl 0x55f32dea0708 <line:170:5, col:28> col:21 back 'const unsigned int &() const' inline
|-CXXMethodDecl 0x55f32dea0848 <line:172:5, col:39> col:15 unchecked_at 'unsigned int &(Vector::size_type)' inline
| `-ParmVarDecl 0x55f32dea07b8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f32dea0990 <line:173:5, col:47> col:21 unchecked_at 'const unsigned int &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55f32dea0900 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f32dea0ad8 <line:174:5, col:59> col:15 at_u 'unsigned int &(Vector::size_type)' inline
| |-ParmVarDecl 0x55f32dea0a48 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55f32dea0b90 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55f32dea0c90 <line:175:5, col:71> col:21 at_u 'const unsigned int &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55f32dea0c00 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55f32dea0d48 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55f32dea0e08 <line:177:5, col:20> col:15 data 'unsigned int *()' inline
|-CXXMethodDecl 0x55f32dea0f08 <line:178:5, col:28> col:21 data 'const unsigned int *() const' inline
|-CXXMethodDecl 0x55f32dea1088 <line:180:5, col:48> col:17 push_back 'void (Vector<unsigned int>::value_argument_type)' inline
| `-ParmVarDecl 0x55f32dea0fc8 <col:27, col:47> col:47 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-FunctionTemplateDecl 0x55f32dea1848 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55f32dea1140 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<unsigned int>':'fast_argument<unsigned int, false>'
| `-CXXMethodDecl 0x55f32dea17a8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (unsigned int &&)' inline
|   `-ParmVarDecl 0x55f32dea16a8 <col:58, col:62> col:62 v 'unsigned int &&'
|-CXXMethodDecl 0x55f32dea1928 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55f32dea1a78 <line:186:5, col:49> col:17 push_front 'void (Vector<unsigned int>::value_argument_type)' inline
| `-ParmVarDecl 0x55f32dea19e8 <col:28, col:48> col:48 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXMethodDecl 0x55f32dea1b30 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55f32dea1d78 <line:189:5, col:62> col:21 insert 'Vector<unsigned int>::iterator (Vector<unsigned int>::iterator, Vector<unsigned int>::value_argument_type)' inline
| |-ParmVarDecl 0x55f32dea1bf0 <col:28, col:37> col:37 it 'Vector<unsigned int>::iterator':'unsigned int *'
| `-ParmVarDecl 0x55f32dea1c68 <col:41, col:61> col:61 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXMethodDecl 0x55f32dea1f38 <line:190:5, col:38> col:21 erase 'Vector<unsigned int>::iterator (Vector<unsigned int>::iterator)' inline
| `-ParmVarDecl 0x55f32dea1e48 <col:27, col:36> col:36 it 'Vector<unsigned int>::iterator':'unsigned int *'
|-CXXMethodDecl 0x55f32dea2188 <line:191:5, col:49> col:21 erase 'Vector<unsigned int>::iterator (Vector<unsigned int>::iterator, Vector<unsigned int>::iterator)' inline
| |-ParmVarDecl 0x55f32dea2000 <col:27, col:36> col:36 a 'Vector<unsigned int>::iterator':'unsigned int *'
| `-ParmVarDecl 0x55f32dea2078 <col:39, col:48> col:48 b 'Vector<unsigned int>::iterator':'unsigned int *'
|-CXXMethodDecl 0x55f32dea2248 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55f32dea24a8 <line:195:5, col:34> col:17 swap 'void (Vector<unsigned int> &)' inline
| `-ParmVarDecl 0x55f32dea23b0 <col:22, col:33> col:33 x 'Vector<unsigned int> &'
`-CXXDestructorDecl 0x55f32dea2578 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55f32dea2578

Layout: <CGRecordLayout
  LLVMType:%class.Vector.2 = type { %class.vector_memory.3 }
  NonVirtualBaseLLVMType:%class.Vector.2 = type { %class.vector_memory.3 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55f32dd77908 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'int'
|-CXXRecordDecl 0x55f32dd77b18 prev 0x55f32dd77908 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55f32dd78e70 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<int>::type':'sized_array_memory<4>'
| `-ElaboratedType 0x55f32dd78e20 'typename array_memory<int>::type' sugar
|   `-TypedefType 0x55f32dd78e00 'conditional<true, sized_array_memory<4>, typed_array_memory<int> >::type' sugar
|     |-Typedef 0x55f32dd78cb0 'type'
|     `-SubstTemplateTypeParmType 0x55f32dd78ad0 'sized_array_memory<4>' sugar
|       |-TemplateTypeParmType 0x55f32da4f230 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f32da4f1d8 'T'
|       `-RecordType 0x55f32dd78620 'sized_array_memory<4>'
|         `-ClassTemplateSpecialization 0x55f32dd78538 'sized_array_memory'
|-FieldDecl 0x55f32dd82eb0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<int>::array_memory_type>':'vector_memory<sized_array_memory<4> >' mutable
|-AccessSpecDecl 0x55f32dd82f00 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55f32dd82f38 <line:118:5, col:15> col:15 value_type 'int':'int'
| `-SubstTemplateTypeParmType 0x55f32dd77bb0 'int' sugar
|   |-TemplateTypeParmType 0x55f32da87140 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55f32da870e8 'T'
|   `-BuiltinType 0x55f32d785580 'int'
|-TypedefDecl 0x55f32dd82fc8 <line:119:5, col:16> col:16 reference 'int &'
| `-LValueReferenceType 0x55f32dd82f90 'int &'
|   `-SubstTemplateTypeParmType 0x55f32dd77bb0 'int' sugar
|     |-TemplateTypeParmType 0x55f32da87140 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55f32da870e8 'T'
|     `-BuiltinType 0x55f32d785580 'int'
|-TypedefDecl 0x55f32dd83088 <line:120:5, col:22> col:22 const_reference 'const int &'
| `-LValueReferenceType 0x55f32dd83050 'const int &'
|   `-QualType 0x55f32dd77bb1 'const int' const
|     `-SubstTemplateTypeParmType 0x55f32dd77bb0 'int' sugar
|       |-TemplateTypeParmType 0x55f32da87140 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f32da870e8 'T'
|       `-BuiltinType 0x55f32d785580 'int'
|-TypedefDecl 0x55f32dd83118 <line:121:5, col:16> col:16 pointer 'int *'
| `-PointerType 0x55f32dd830e0 'int *'
|   `-SubstTemplateTypeParmType 0x55f32dd77bb0 'int' sugar
|     |-TemplateTypeParmType 0x55f32da87140 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55f32da870e8 'T'
|     `-BuiltinType 0x55f32d785580 'int'
|-TypedefDecl 0x55f32dd831a8 <line:122:5, col:22> col:22 const_pointer 'const int *'
| `-PointerType 0x55f32dd83170 'const int *'
|   `-QualType 0x55f32dd77bb1 'const int' const
|     `-SubstTemplateTypeParmType 0x55f32dd77bb0 'int' sugar
|       |-TemplateTypeParmType 0x55f32da87140 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f32da870e8 'T'
|       `-BuiltinType 0x55f32d785580 'int'
|-TypedefDecl 0x55f32dd83d90 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<int>::type':'int'
| `-ElaboratedType 0x55f32dd83d40 'typename fast_argument<int>::type' sugar
|   `-TypedefType 0x55f32dd83d20 'fast_argument<int, false>::type' sugar
|     |-Typedef 0x55f32dd83cb0 'type'
|     `-SubstTemplateTypeParmType 0x55f32dd83a70 'int' sugar
|       |-TemplateTypeParmType 0x55f32da5a250 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f32da5a200 'T'
|       `-BuiltinType 0x55f32d785580 'int'
|-TypedefDecl 0x55f32dd83df8 <line:126:5, col:22> col:22 const_access_type 'const int &'
| `-LValueReferenceType 0x55f32dd83050 'const int &'
|   `-QualType 0x55f32dd77bb1 'const int' const
|     `-SubstTemplateTypeParmType 0x55f32dd77bb0 'int' sugar
|       |-TemplateTypeParmType 0x55f32da87140 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f32da870e8 'T'
|       `-BuiltinType 0x55f32d785580 'int'
|-TypedefDecl 0x55f32dd83e50 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55f32d785580 'int'
|-TypedefDecl 0x55f32dd83eb8 <line:130:5, col:16> col:16 iterator 'int *'
| `-PointerType 0x55f32dd830e0 'int *'
|   `-SubstTemplateTypeParmType 0x55f32dd77bb0 'int' sugar
|     |-TemplateTypeParmType 0x55f32da87140 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55f32da870e8 'T'
|     `-BuiltinType 0x55f32d785580 'int'
|-TypedefDecl 0x55f32dd83f20 <line:131:5, col:22> col:22 const_iterator 'const int *'
| `-PointerType 0x55f32dd83170 'const int *'
|   `-QualType 0x55f32dd77bb1 'const int' const
|     `-SubstTemplateTypeParmType 0x55f32dd77bb0 'int' sugar
|       |-TemplateTypeParmType 0x55f32da87140 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f32da870e8 'T'
|       `-BuiltinType 0x55f32d785580 'int'
|-EnumDecl 0x55f32dd83f78 <line:134:5> col:5
| `-EnumConstantDecl 0x55f32dd84070 <col:12, col:40> col:12 RESERVE_GROW 'Vector<int>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55f32dd84050 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55f32da887c8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55f32da887a0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55f32da88780 <col:40> 'int' 1
|-CXXConstructorDecl 0x55f32dd840f8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55f32dd84348 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x55f32dd841b0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55f32dd84250 <col:41, col:61> col:61 v 'Vector<int>::value_argument_type':'int'
|-CXXConstructorDecl 0x55f32dd84608 <line:139:5, col:37> col:12 Vector 'void (const Vector<int> &)' inline
| `-ParmVarDecl 0x55f32dd844f0 <col:19, col:36> col:36 x 'const Vector<int> &'
|-CXXConstructorDecl 0x55f32dd848c8 <line:141:5, col:32> col:12 Vector 'void (Vector<int> &&)' inline
| `-ParmVarDecl 0x55f32dd847b0 <col:19, col:31> col:31 x 'Vector<int> &&'
|-CXXMethodDecl 0x55f32dd84c10 <line:144:5, col:51> col:23 operator= 'Vector<int> &(const Vector<int> &)' inline
| `-ParmVarDecl 0x55f32dd84af0 <col:33, col:50> col:50 x 'const Vector<int> &'
|-CXXMethodDecl 0x55f32dd84f20 <line:146:5, col:46> col:23 operator= 'Vector<int> &(Vector<int> &&)' inline
| `-ParmVarDecl 0x55f32dd84e00 <col:33, col:45> col:45 x 'Vector<int> &&'
|-CXXMethodDecl 0x55f32dd85210 <line:148:5, col:70> col:23 assign 'Vector<int> &(Vector::size_type, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x55f32dd85058 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55f32dd850d0 <col:43, col:69> col:63 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x55f32dd85338 <line:150:5, col:55> col:49 begin 'Vector<int>::iterator ()'
| |-NoInlineAttr 0x55f32dd85418 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f32dd85470 <col:30> Inherited
|-CXXMethodDecl 0x55f32dd854b8 <line:151:5, col:53> col:49 end 'Vector<int>::iterator ()'
| |-NoInlineAttr 0x55f32dd85568 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f32dd855c0 <col:30> Inherited
|-CXXMethodDecl 0x55f32dd85688 <line:152:5, col:63> col:55 begin 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x55f32dd85738 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f32dd85790 <col:30> Inherited
|-CXXMethodDecl 0x55f32dd857d8 <line:153:5, col:61> col:55 end 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x55f32dd85888 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f32dd858e0 <col:30> Inherited
|-CXXMethodDecl 0x55f32dd85928 <line:154:5, col:64> col:55 cbegin 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x55f32dd859d8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f32dd85a30 <col:30> Inherited
|-CXXMethodDecl 0x55f32dd85a78 <line:155:5, col:62> col:55 cend 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x55f32dd85b28 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f32dd85b80 <col:30> Inherited
|-CXXMethodDecl 0x55f32dd85ba8 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55f32dd85c58 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55f32dd85d08 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55f32dd85ec8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x55f32dd85db8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55f32dd85e30 <col:37, col:63> col:57 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x55f32dd86018 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55f32dd85f88 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f32dd861c8 <line:163:5, col:65> col:43 used operator[] 'int &(Vector::size_type)'
| |-ParmVarDecl 0x55f32dd860d0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55f32dd86280 <col:20>
| `-OptimizeNoneAttr 0x55f32dd862d8 <col:30>
|-CXXMethodDecl 0x55f32dd863f8 <line:164:5, col:73> col:49 operator[] 'const int &(Vector::size_type) const'
| |-ParmVarDecl 0x55f32dd86300 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55f32dd864b0 <col:20>
| `-OptimizeNoneAttr 0x55f32dd86508 <col:30>
|-CXXMethodDecl 0x55f32dd865c0 <line:165:5, col:29> col:15 at 'int &(Vector::size_type)' inline
| `-ParmVarDecl 0x55f32dd86530 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f32dd86708 <line:166:5, col:37> col:21 at 'const int &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55f32dd86678 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f32dd86838 <line:167:5, col:21> col:15 front 'int &()' inline
|-CXXMethodDecl 0x55f32dd86968 <line:168:5, col:29> col:21 front 'const int &() const' inline
|-CXXMethodDecl 0x55f32dd86a38 <line:169:5, col:20> col:15 back 'int &()' inline
|-CXXMethodDecl 0x55f32dd86b08 <line:170:5, col:28> col:21 used back 'const int &() const' inline
|-CXXMethodDecl 0x55f32dd86c48 <line:172:5, col:39> col:15 unchecked_at 'int &(Vector::size_type)' inline
| `-ParmVarDecl 0x55f32dd86bb8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f32dd86d90 <line:173:5, col:47> col:21 unchecked_at 'const int &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55f32dd86d00 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f32dd86ed8 <line:174:5, col:59> col:15 at_u 'int &(Vector::size_type)' inline
| |-ParmVarDecl 0x55f32dd86e48 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55f32dd86f90 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55f32dd87090 <line:175:5, col:71> col:21 at_u 'const int &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55f32dd87000 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55f32dd87148 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55f32dd87208 <line:177:5, col:20> col:15 data 'int *()' inline
|-CXXMethodDecl 0x55f32dd87308 <line:178:5, col:28> col:21 data 'const int *() const' inline
|-CXXMethodDecl 0x55f32dd87488 <line:180:5, col:48> col:17 push_back 'void (Vector<int>::value_argument_type)' inline
| `-ParmVarDecl 0x55f32dd873c8 <col:27, col:47> col:47 v 'Vector<int>::value_argument_type':'int'
|-FunctionTemplateDecl 0x55f32dd87c48 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55f32dd87540 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<int>':'fast_argument<int, false>'
| `-CXXMethodDecl 0x55f32dd87ba8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (int &&)' inline
|   `-ParmVarDecl 0x55f32dd87aa8 <col:58, col:62> col:62 v 'int &&'
|-CXXMethodDecl 0x55f32dd87d28 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55f32dd87e78 <line:186:5, col:49> col:17 push_front 'void (Vector<int>::value_argument_type)' inline
| `-ParmVarDecl 0x55f32dd87de8 <col:28, col:48> col:48 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x55f32dd87f30 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55f32dd88178 <line:189:5, col:62> col:21 insert 'Vector<int>::iterator (Vector<int>::iterator, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x55f32dd87ff0 <col:28, col:37> col:37 it 'Vector<int>::iterator':'int *'
| `-ParmVarDecl 0x55f32dd88068 <col:41, col:61> col:61 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x55f32dd88338 <line:190:5, col:38> col:21 erase 'Vector<int>::iterator (Vector<int>::iterator)' inline
| `-ParmVarDecl 0x55f32dd88248 <col:27, col:36> col:36 it 'Vector<int>::iterator':'int *'
|-CXXMethodDecl 0x55f32dd88588 <line:191:5, col:49> col:21 erase 'Vector<int>::iterator (Vector<int>::iterator, Vector<int>::iterator)' inline
| |-ParmVarDecl 0x55f32dd88400 <col:27, col:36> col:36 a 'Vector<int>::iterator':'int *'
| `-ParmVarDecl 0x55f32dd88478 <col:39, col:48> col:48 b 'Vector<int>::iterator':'int *'
|-CXXMethodDecl 0x55f32dd88648 <line:193:5, col:23> col:17 used clear 'void ()' inline
|-CXXMethodDecl 0x55f32dd888a8 <line:195:5, col:34> col:17 swap 'void (Vector<int> &)' inline
| `-ParmVarDecl 0x55f32dd887b0 <col:22, col:33> col:33 x 'Vector<int> &'
`-CXXDestructorDecl 0x55f32dd88978 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55f32dd88978

Layout: <CGRecordLayout
  LLVMType:%class.Vector.5 = type { %class.vector_memory.3 }
  NonVirtualBaseLLVMType:%class.Vector.5 = type { %class.vector_memory.3 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f32dea27c0 <../dummy_inc/click/router.hh:247:5, line:250:5> line:247:12 referenced struct element_landmark_t definition
|-DefinitionData aggregate standard_layout has_mutable_fields
| |-DefaultConstructor exists non_trivial needs_implicit
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x55f32dea28d8 <col:5, col:12> col:12 implicit struct element_landmark_t
|-FieldDecl 0x55f32dea2978 <line:248:9, col:18> col:18 first_landmarkid 'uint32_t':'unsigned int'
|-FieldDecl 0x55f32dea29d8 <line:249:9, col:16> col:16 filename 'String'
|-CXXConstructorDecl 0x55f32dea2a70 <line:247:12> col:12 implicit element_landmark_t 'void (const Router::element_landmark_t &)' inline default noexcept-unevaluated 0x55f32dea2a70
| `-ParmVarDecl 0x55f32dea2b88 <col:12> col:12 'const Router::element_landmark_t &'
|-CXXConstructorDecl 0x55f32dea2c28 <col:12> col:12 implicit element_landmark_t 'void (Router::element_landmark_t &&)' inline default noexcept-unevaluated 0x55f32dea2c28
| `-ParmVarDecl 0x55f32dea2d38 <col:12> col:12 'Router::element_landmark_t &&'
|-CXXMethodDecl 0x55f32dea2dd8 <col:12> col:12 implicit operator= 'Router::element_landmark_t &(const Router::element_landmark_t &)' inline default noexcept-unevaluated 0x55f32dea2dd8
| `-ParmVarDecl 0x55f32dea2ee8 <col:12> col:12 'const Router::element_landmark_t &'
|-CXXMethodDecl 0x55f32dea2f58 <col:12> col:12 implicit operator= 'Router::element_landmark_t &(Router::element_landmark_t &&)' inline default noexcept-unevaluated 0x55f32dea2f58
| `-ParmVarDecl 0x55f32dea3068 <col:12> col:12 'Router::element_landmark_t &&'
`-CXXDestructorDecl 0x55f32dea30f0 <col:12> col:12 implicit ~element_landmark_t 'void ()' inline default noexcept-unevaluated 0x55f32dea30f0

Layout: <CGRecordLayout
  LLVMType:%"struct.Router::element_landmark_t" = type { i32, %class.String }
  NonVirtualBaseLLVMType:%"struct.Router::element_landmark_t" = type { i32, %class.String }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55f32dea4680 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'typed_array_memory<Router::element_landmark_t>'
|-CXXRecordDecl 0x55f32dea4858 prev 0x55f32dea4680 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55f32dea48e8 <col:46, col:52> col:46 public
|-TypedefDecl 0x55f32dea4910 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55f32d785580 'int'
|-TypedefDecl 0x55f32dea62d0 <line:13:5, col:31> col:31 type 'typename typed_array_memory<element_landmark_t>::type':'Router::element_landmark_t'
| `-ElaboratedType 0x55f32dea6280 'typename typed_array_memory<element_landmark_t>::type' sugar
|   `-TypedefType 0x55f32dea6260 'typed_array_memory<Router::element_landmark_t>::type' sugar
|     |-Typedef 0x55f32dea4b28 'type'
|     `-SubstTemplateTypeParmType 0x55f32dea4af0 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x55f32da79e20 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f32da79dd0 'T'
|       `-RecordType 0x55f32dea2850 'Router::element_landmark_t'
|         `-CXXRecord 0x55f32dea27c0 'element_landmark_t'
|-TypedefDecl 0x55f32dea6388 <line:14:5, col:19> col:19 iterator 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
| `-PointerType 0x55f32dea6350 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|   `-TypedefType 0x55f32dea6330 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type' sugar
|     |-Typedef 0x55f32dea62d0 'type'
|     `-ElaboratedType 0x55f32dea6280 'typename typed_array_memory<element_landmark_t>::type' sugar
|       `-TypedefType 0x55f32dea6260 'typed_array_memory<Router::element_landmark_t>::type' sugar
|         |-Typedef 0x55f32dea4b28 'type'
|         `-SubstTemplateTypeParmType 0x55f32dea4af0 'Router::element_landmark_t' sugar
|           |-TemplateTypeParmType 0x55f32da79e20 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55f32da79dd0 'T'
|           `-RecordType 0x55f32dea2850 'Router::element_landmark_t'
|             `-CXXRecord 0x55f32dea27c0 'element_landmark_t'
|-CXXMethodDecl 0x55f32dea6508 <line:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *) const' inline
| `-ParmVarDecl 0x55f32dea6418 <col:36, col:48> col:48 argp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXConstructorDecl 0x55f32dea65f8 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55f32dea66d8 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x55f32dea66d8
|-CXXMethodDecl 0x55f32dea69a8 <line:25:5, col:43> col:10 assign 'void (const vector_memory<typed_array_memory<Router::element_landmark_t> > &)'
| `-ParmVarDecl 0x55f32dea68b0 <col:17, col:42> col:42 x 'const vector_memory<typed_array_memory<Router::element_landmark_t> > &'
|-CXXMethodDecl 0x55f32dea6be8 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)'
| |-ParmVarDecl 0x55f32dea6a60 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55f32dea6ad8 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x55f32dea6db8 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)'
| |-ParmVarDecl 0x55f32dea6ca8 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55f32dea6d20 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x55f32dea6f18 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator ()'
|-CXXMethodDecl 0x55f32dea6fe8 <line:31:5, line:33:5> line:31:14 end 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator ()'
|-CXXMethodDecl 0x55f32dea7238 <line:34:5, col:48> col:14 insert 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator (vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator, const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)'
| |-ParmVarDecl 0x55f32dea70a8 <col:21, col:30> col:30 it 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator':'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
| `-ParmVarDecl 0x55f32dea7120 <col:34, col:46> col:46 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x55f32dea7498 <line:35:5, col:42> col:14 erase 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator (vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator, vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator)'
| |-ParmVarDecl 0x55f32dea7308 <col:20, col:29> col:29 a 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator':'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
| `-ParmVarDecl 0x55f32dea7380 <col:32, col:41> col:41 b 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator':'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x55f32dea7658 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)' inline
| `-ParmVarDecl 0x55f32dea7568 <col:27, col:39> col:39 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x55f32dea7818 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)' inline
| `-ParmVarDecl 0x55f32dea7720 <col:37, col:43> col:43 vp 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x55f32dea78d0 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55f32dea7980 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55f32dea9900 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)'
| |-ParmVarDecl 0x55f32dea7a30 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55f32dea7aa8 <col:45, col:57> col:57 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x55f32dea9b98 <line:66:5, col:35> col:10 swap 'void (vector_memory<typed_array_memory<Router::element_landmark_t> > &)'
| `-ParmVarDecl 0x55f32dea9aa0 <col:15, col:34> col:34 x 'vector_memory<typed_array_memory<Router::element_landmark_t> > &'
|-FieldDecl 0x55f32dea9c60 <line:68:5, col:11> col:11 l_ 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-FieldDecl 0x55f32dea9cb0 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55f32dea9d00 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.7 = type { %"struct.Router::element_landmark_t"*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.7 = type { %"struct.Router::element_landmark_t"*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55f32dea31e0 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Router::element_landmark_t'
|-CXXRecordDecl 0x55f32dea33e8 prev 0x55f32dea31e0 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55f32dea45f0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<element_landmark_t>::type':'typed_array_memory<Router::element_landmark_t>'
| `-ElaboratedType 0x55f32dea45a0 'typename array_memory<element_landmark_t>::type' sugar
|   `-TypedefType 0x55f32dea4580 'conditional<false, sized_array_memory<32>, typed_array_memory<Router::element_landmark_t> >::type' sugar
|     |-Typedef 0x55f32dea4430 'type'
|     `-SubstTemplateTypeParmType 0x55f32dea42c0 'typed_array_memory<Router::element_landmark_t>' sugar
|       |-TemplateTypeParmType 0x55f32da4f9b0 'F' dependent depth 0 index 1
|       | `-TemplateTypeParm 0x55f32da4f958 'F'
|       `-RecordType 0x55f32dea3f20 'typed_array_memory<Router::element_landmark_t>'
|         `-ClassTemplateSpecialization 0x55f32dea3e40 'typed_array_memory'
|-FieldDecl 0x55f32dea9d50 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Router::element_landmark_t>::array_memory_type>':'vector_memory<typed_array_memory<Router::element_landmark_t> >' mutable
|-AccessSpecDecl 0x55f32dea9da0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55f32dea9dd8 <line:118:5, col:15> col:15 value_type 'Router::element_landmark_t':'Router::element_landmark_t'
| `-SubstTemplateTypeParmType 0x55f32dea3480 'Router::element_landmark_t' sugar
|   |-TemplateTypeParmType 0x55f32da87140 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55f32da870e8 'T'
|   `-RecordType 0x55f32dea2850 'Router::element_landmark_t'
|     `-CXXRecord 0x55f32dea27c0 'element_landmark_t'
|-TypedefDecl 0x55f32dea9e68 <line:119:5, col:16> col:16 reference 'Router::element_landmark_t &'
| `-LValueReferenceType 0x55f32dea9e30 'Router::element_landmark_t &'
|   `-SubstTemplateTypeParmType 0x55f32dea3480 'Router::element_landmark_t' sugar
|     |-TemplateTypeParmType 0x55f32da87140 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55f32da870e8 'T'
|     `-RecordType 0x55f32dea2850 'Router::element_landmark_t'
|       `-CXXRecord 0x55f32dea27c0 'element_landmark_t'
|-TypedefDecl 0x55f32dea9ef8 <line:120:5, col:22> col:22 const_reference 'const Router::element_landmark_t &'
| `-LValueReferenceType 0x55f32dea9ec0 'const Router::element_landmark_t &'
|   `-QualType 0x55f32dea3481 'const Router::element_landmark_t' const
|     `-SubstTemplateTypeParmType 0x55f32dea3480 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x55f32da87140 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f32da870e8 'T'
|       `-RecordType 0x55f32dea2850 'Router::element_landmark_t'
|         `-CXXRecord 0x55f32dea27c0 'element_landmark_t'
|-TypedefDecl 0x55f32dea9f88 <line:121:5, col:16> col:16 pointer 'Router::element_landmark_t *'
| `-PointerType 0x55f32dea9f50 'Router::element_landmark_t *'
|   `-SubstTemplateTypeParmType 0x55f32dea3480 'Router::element_landmark_t' sugar
|     |-TemplateTypeParmType 0x55f32da87140 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55f32da870e8 'T'
|     `-RecordType 0x55f32dea2850 'Router::element_landmark_t'
|       `-CXXRecord 0x55f32dea27c0 'element_landmark_t'
|-TypedefDecl 0x55f32deaa018 <line:122:5, col:22> col:22 const_pointer 'const Router::element_landmark_t *'
| `-PointerType 0x55f32dea9fe0 'const Router::element_landmark_t *'
|   `-QualType 0x55f32dea3481 'const Router::element_landmark_t' const
|     `-SubstTemplateTypeParmType 0x55f32dea3480 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x55f32da87140 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f32da870e8 'T'
|       `-RecordType 0x55f32dea2850 'Router::element_landmark_t'
|         `-CXXRecord 0x55f32dea27c0 'element_landmark_t'
|-TypedefDecl 0x55f32deaac70 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<element_landmark_t>::type':'const Router::element_landmark_t &'
| `-ElaboratedType 0x55f32deaac20 'typename fast_argument<element_landmark_t>::type' sugar
|   `-TypedefType 0x55f32deaac00 'fast_argument<Router::element_landmark_t, true>::type' sugar
|     |-Typedef 0x55f32deaab38 'type'
|     `-LValueReferenceType 0x55f32deaab00 'const Router::element_landmark_t &'
|       `-QualType 0x55f32deaa8a1 'const Router::element_landmark_t' const
|         `-SubstTemplateTypeParmType 0x55f32deaa8a0 'Router::element_landmark_t' sugar
|           |-TemplateTypeParmType 0x55f32da59b20 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55f32da59ac8 'T'
|           `-RecordType 0x55f32dea2850 'Router::element_landmark_t'
|             `-CXXRecord 0x55f32dea27c0 'element_landmark_t'
|-TypedefDecl 0x55f32deaacd8 <line:126:5, col:22> col:22 const_access_type 'const Router::element_landmark_t &'
| `-LValueReferenceType 0x55f32dea9ec0 'const Router::element_landmark_t &'
|   `-QualType 0x55f32dea3481 'const Router::element_landmark_t' const
|     `-SubstTemplateTypeParmType 0x55f32dea3480 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x55f32da87140 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f32da870e8 'T'
|       `-RecordType 0x55f32dea2850 'Router::element_landmark_t'
|         `-CXXRecord 0x55f32dea27c0 'element_landmark_t'
|-TypedefDecl 0x55f32deaad30 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55f32d785580 'int'
|-TypedefDecl 0x55f32deaad98 <line:130:5, col:16> col:16 iterator 'Router::element_landmark_t *'
| `-PointerType 0x55f32dea9f50 'Router::element_landmark_t *'
|   `-SubstTemplateTypeParmType 0x55f32dea3480 'Router::element_landmark_t' sugar
|     |-TemplateTypeParmType 0x55f32da87140 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55f32da870e8 'T'
|     `-RecordType 0x55f32dea2850 'Router::element_landmark_t'
|       `-CXXRecord 0x55f32dea27c0 'element_landmark_t'
|-TypedefDecl 0x55f32deaae00 <line:131:5, col:22> col:22 const_iterator 'const Router::element_landmark_t *'
| `-PointerType 0x55f32dea9fe0 'const Router::element_landmark_t *'
|   `-QualType 0x55f32dea3481 'const Router::element_landmark_t' const
|     `-SubstTemplateTypeParmType 0x55f32dea3480 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x55f32da87140 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f32da870e8 'T'
|       `-RecordType 0x55f32dea2850 'Router::element_landmark_t'
|         `-CXXRecord 0x55f32dea27c0 'element_landmark_t'
|-EnumDecl 0x55f32deaae58 <line:134:5> col:5
| `-EnumConstantDecl 0x55f32deaaf50 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Router::element_landmark_t>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55f32deaaf30 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55f32da887c8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55f32da887a0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55f32da88780 <col:40> 'int' 1
|-CXXConstructorDecl 0x55f32deaafd8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55f32deab268 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Router::element_landmark_t>::value_argument_type)' inline
| |-ParmVarDecl 0x55f32deab090 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55f32deab130 <col:41, col:61> col:61 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXConstructorDecl 0x55f32deab528 <line:139:5, col:37> col:12 Vector 'void (const Vector<Router::element_landmark_t> &)' inline
| `-ParmVarDecl 0x55f32deab410 <col:19, col:36> col:36 x 'const Vector<Router::element_landmark_t> &'
|-CXXConstructorDecl 0x55f32deab7e8 <line:141:5, col:32> col:12 Vector 'void (Vector<Router::element_landmark_t> &&)' inline
| `-ParmVarDecl 0x55f32deab6d0 <col:19, col:31> col:31 x 'Vector<Router::element_landmark_t> &&'
|-CXXMethodDecl 0x55f32deabb30 <line:144:5, col:51> col:23 operator= 'Vector<Router::element_landmark_t> &(const Vector<Router::element_landmark_t> &)' inline
| `-ParmVarDecl 0x55f32deaba10 <col:33, col:50> col:50 x 'const Vector<Router::element_landmark_t> &'
|-CXXMethodDecl 0x55f32deabe40 <line:146:5, col:46> col:23 operator= 'Vector<Router::element_landmark_t> &(Vector<Router::element_landmark_t> &&)' inline
| `-ParmVarDecl 0x55f32deabd20 <col:33, col:45> col:45 x 'Vector<Router::element_landmark_t> &&'
|-CXXMethodDecl 0x55f32deac130 <line:148:5, col:70> col:23 assign 'Vector<Router::element_landmark_t> &(Vector::size_type, Vector<Router::element_landmark_t>::value_argument_type)' inline
| |-ParmVarDecl 0x55f32deabf78 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55f32deabff0 <col:43, col:69> col:63 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXMethodDecl 0x55f32deac258 <line:150:5, col:55> col:49 begin 'Vector<Router::element_landmark_t>::iterator ()'
| |-NoInlineAttr 0x55f32deac338 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f32deac390 <col:30> Inherited
|-CXXMethodDecl 0x55f32deac3d8 <line:151:5, col:53> col:49 end 'Vector<Router::element_landmark_t>::iterator ()'
| |-NoInlineAttr 0x55f32deac488 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f32deac4e0 <col:30> Inherited
|-CXXMethodDecl 0x55f32deac5a8 <line:152:5, col:63> col:55 begin 'Vector<Router::element_landmark_t>::const_iterator () const'
| |-NoInlineAttr 0x55f32deac658 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f32deac6b0 <col:30> Inherited
|-CXXMethodDecl 0x55f32deac6f8 <line:153:5, col:61> col:55 end 'Vector<Router::element_landmark_t>::const_iterator () const'
| |-NoInlineAttr 0x55f32deac7a8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f32deac800 <col:30> Inherited
|-CXXMethodDecl 0x55f32deac848 <line:154:5, col:64> col:55 cbegin 'Vector<Router::element_landmark_t>::const_iterator () const'
| |-NoInlineAttr 0x55f32deac8f8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f32deac950 <col:30> Inherited
|-CXXMethodDecl 0x55f32deac998 <line:155:5, col:62> col:55 cend 'Vector<Router::element_landmark_t>::const_iterator () const'
| |-NoInlineAttr 0x55f32deaca48 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f32deacaa0 <col:30> Inherited
|-CXXMethodDecl 0x55f32deacac8 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55f32deacb78 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55f32deacc28 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55f32deacde8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Router::element_landmark_t>::value_argument_type)' inline
| |-ParmVarDecl 0x55f32deaccd8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55f32deacd50 <col:37, col:63> col:57 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXMethodDecl 0x55f32deacf38 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55f32deacea8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f32dead0e8 <line:163:5, col:65> col:43 operator[] 'Router::element_landmark_t &(Vector::size_type)'
| |-ParmVarDecl 0x55f32deacff0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55f32dead1a0 <col:20>
| `-OptimizeNoneAttr 0x55f32dead1f8 <col:30>
|-CXXMethodDecl 0x55f32dead318 <line:164:5, col:73> col:49 operator[] 'const Router::element_landmark_t &(Vector::size_type) const'
| |-ParmVarDecl 0x55f32dead220 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55f32dead3d0 <col:20>
| `-OptimizeNoneAttr 0x55f32dead428 <col:30>
|-CXXMethodDecl 0x55f32dead4e0 <line:165:5, col:29> col:15 at 'Router::element_landmark_t &(Vector::size_type)' inline
| `-ParmVarDecl 0x55f32dead450 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f32dead628 <line:166:5, col:37> col:21 at 'const Router::element_landmark_t &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55f32dead598 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f32dead758 <line:167:5, col:21> col:15 front 'Router::element_landmark_t &()' inline
|-CXXMethodDecl 0x55f32dead888 <line:168:5, col:29> col:21 front 'const Router::element_landmark_t &() const' inline
|-CXXMethodDecl 0x55f32dead958 <line:169:5, col:20> col:15 back 'Router::element_landmark_t &()' inline
|-CXXMethodDecl 0x55f32deada28 <line:170:5, col:28> col:21 back 'const Router::element_landmark_t &() const' inline
|-CXXMethodDecl 0x55f32deadb68 <line:172:5, col:39> col:15 unchecked_at 'Router::element_landmark_t &(Vector::size_type)' inline
| `-ParmVarDecl 0x55f32deadad8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f32deadcb0 <line:173:5, col:47> col:21 unchecked_at 'const Router::element_landmark_t &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55f32deadc20 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f32deaddf8 <line:174:5, col:59> col:15 at_u 'Router::element_landmark_t &(Vector::size_type)' inline
| |-ParmVarDecl 0x55f32deadd68 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55f32deadeb0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55f32deadfb0 <line:175:5, col:71> col:21 at_u 'const Router::element_landmark_t &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55f32deadf20 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55f32deae068 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55f32deae128 <line:177:5, col:20> col:15 data 'Router::element_landmark_t *()' inline
|-CXXMethodDecl 0x55f32deae228 <line:178:5, col:28> col:21 data 'const Router::element_landmark_t *() const' inline
|-CXXMethodDecl 0x55f32deae3a8 <line:180:5, col:48> col:17 push_back 'void (Vector<Router::element_landmark_t>::value_argument_type)' inline
| `-ParmVarDecl 0x55f32deae2e8 <col:27, col:47> col:47 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-FunctionTemplateDecl 0x55f32deaeb38 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55f32deae460 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Router::element_landmark_t>':'fast_argument<Router::element_landmark_t, true>'
| `-CXXMethodDecl 0x55f32deaea98 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Router::element_landmark_t &&)' inline
|   `-ParmVarDecl 0x55f32deae998 <col:58, col:62> col:62 v 'Router::element_landmark_t &&'
|-CXXMethodDecl 0x55f32deaec18 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55f32deaed68 <line:186:5, col:49> col:17 push_front 'void (Vector<Router::element_landmark_t>::value_argument_type)' inline
| `-ParmVarDecl 0x55f32deaecd8 <col:28, col:48> col:48 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXMethodDecl 0x55f32deaee20 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55f32deaf068 <line:189:5, col:62> col:21 insert 'Vector<Router::element_landmark_t>::iterator (Vector<Router::element_landmark_t>::iterator, Vector<Router::element_landmark_t>::value_argument_type)' inline
| |-ParmVarDecl 0x55f32deaeee0 <col:28, col:37> col:37 it 'Vector<Router::element_landmark_t>::iterator':'Router::element_landmark_t *'
| `-ParmVarDecl 0x55f32deaef58 <col:41, col:61> col:61 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXMethodDecl 0x55f32deaf1f8 <line:190:5, col:38> col:21 erase 'Vector<Router::element_landmark_t>::iterator (Vector<Router::element_landmark_t>::iterator)' inline
| `-ParmVarDecl 0x55f32deaf138 <col:27, col:36> col:36 it 'Vector<Router::element_landmark_t>::iterator':'Router::element_landmark_t *'
|-CXXMethodDecl 0x55f32deaf408 <line:191:5, col:49> col:21 erase 'Vector<Router::element_landmark_t>::iterator (Vector<Router::element_landmark_t>::iterator, Vector<Router::element_landmark_t>::iterator)' inline
| |-ParmVarDecl 0x55f32deaf2c0 <col:27, col:36> col:36 a 'Vector<Router::element_landmark_t>::iterator':'Router::element_landmark_t *'
| `-ParmVarDecl 0x55f32deaf338 <col:39, col:48> col:48 b 'Vector<Router::element_landmark_t>::iterator':'Router::element_landmark_t *'
|-CXXMethodDecl 0x55f32deaf4c8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55f32deaf728 <line:195:5, col:34> col:17 swap 'void (Vector<Router::element_landmark_t> &)' inline
| `-ParmVarDecl 0x55f32deaf630 <col:22, col:33> col:33 x 'Vector<Router::element_landmark_t> &'
`-CXXDestructorDecl 0x55f32deaf7f8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55f32deaf7f8

Layout: <CGRecordLayout
  LLVMType:%class.Vector.6 = type { %class.vector_memory.7 }
  NonVirtualBaseLLVMType:%class.Vector.6 = type { %class.vector_memory.7 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55f32de126b0 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<16>'
|-CXXRecordDecl 0x55f32de12888 prev 0x55f32de126b0 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55f32de12918 <col:46, col:52> col:46 public
|-TypedefDecl 0x55f32de12940 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55f32d785580 'int'
|-TypedefDecl 0x55f32de14510 <line:13:5, col:31> col:31 type 'typename sized_array_memory<16>::type':'char_array<16>'
| `-ElaboratedType 0x55f32de144c0 'typename sized_array_memory<16>::type' sugar
|   `-TypedefType 0x55f32de12df0 'sized_array_memory<16>::type' sugar
|     |-Typedef 0x55f32de12cf0 'type'
|     `-TemplateSpecializationType 0x55f32de12c80 'char_array<16UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x55f32de12b60 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 16
|       |   `-SubstNonTypeTemplateParmExpr 0x55f32de12b40 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x55f32de12b20 <col:24> 'unsigned long' 16
|       `-RecordType 0x55f32de12c60 'char_array<16>'
|         `-ClassTemplateSpecialization 0x55f32de12b80 'char_array'
|-TypedefDecl 0x55f32de145c8 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<16> >::type *'
| `-PointerType 0x55f32de14590 'vector_memory<sized_array_memory<16> >::type *'
|   `-TypedefType 0x55f32de14570 'vector_memory<sized_array_memory<16> >::type' sugar
|     |-Typedef 0x55f32de14510 'type'
|     `-ElaboratedType 0x55f32de144c0 'typename sized_array_memory<16>::type' sugar
|       `-TypedefType 0x55f32de12df0 'sized_array_memory<16>::type' sugar
|         |-Typedef 0x55f32de12cf0 'type'
|         `-TemplateSpecializationType 0x55f32de12c80 'char_array<16UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x55f32de12b60 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 16
|           |   `-SubstNonTypeTemplateParmExpr 0x55f32de12b40 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x55f32de12b20 <col:24> 'unsigned long' 16
|           `-RecordType 0x55f32de12c60 'char_array<16>'
|             `-ClassTemplateSpecialization 0x55f32de12b80 'char_array'
|-CXXMethodDecl 0x55f32de14748 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<16> >::type *) const' inline
| `-ParmVarDecl 0x55f32de14658 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXConstructorDecl 0x55f32de14838 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55f32de14918 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x55f32de14918
|-CXXMethodDecl 0x55f32de14be8 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<16> > &)'
| `-ParmVarDecl 0x55f32de14af0 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<16> > &'
|-CXXMethodDecl 0x55f32de14e28 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x55f32de14ca0 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55f32de14d18 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55f32de14ff8 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x55f32de14ee8 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55f32de14f60 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55f32de15158 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<16> >::iterator ()'
|-CXXMethodDecl 0x55f32de15228 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<16> >::iterator ()'
|-CXXMethodDecl 0x55f32de15478 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<16> >::iterator (vector_memory<sized_array_memory<16> >::iterator, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x55f32de152e8 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
| `-ParmVarDecl 0x55f32de15360 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55f32de156d8 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<16> >::iterator (vector_memory<sized_array_memory<16> >::iterator, vector_memory<sized_array_memory<16> >::iterator)'
| |-ParmVarDecl 0x55f32de15548 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
| `-ParmVarDecl 0x55f32de155c0 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55f32de15898 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<16> >::type *)' inline
| `-ParmVarDecl 0x55f32de157a8 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55f32de15a58 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<16> >::type *)' inline
| `-ParmVarDecl 0x55f32de15960 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55f32de15b10 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55f32de15bc0 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55f32de15df8 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x55f32de15c70 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55f32de15ce8 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55f32de16098 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<16> > &)'
| `-ParmVarDecl 0x55f32de15fa0 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<16> > &'
|-FieldDecl 0x55f32de16160 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<16> >::type *'
|-FieldDecl 0x55f32de161b0 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55f32de16200 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.9 = type { %struct.char_array.10*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.9 = type { %struct.char_array.10*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55f32deaff10 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Router::Connection'
|-CXXRecordDecl 0x55f32deb0118 prev 0x55f32deaff10 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55f32deb11e0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<Connection>::type':'sized_array_memory<16>'
| `-ElaboratedType 0x55f32deb1190 'typename array_memory<Connection>::type' sugar
|   `-TypedefType 0x55f32deb1170 'conditional<true, sized_array_memory<16>, typed_array_memory<Router::Connection> >::type' sugar
|     |-Typedef 0x55f32deb1020 'type'
|     `-SubstTemplateTypeParmType 0x55f32de12210 'sized_array_memory<16>' sugar
|       |-TemplateTypeParmType 0x55f32da4f230 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f32da4f1d8 'T'
|       `-RecordType 0x55f32de11d60 'sized_array_memory<16>'
|         `-ClassTemplateSpecialization 0x55f32de11c78 'sized_array_memory'
|-FieldDecl 0x55f32deb12e0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Router::Connection>::array_memory_type>':'vector_memory<sized_array_memory<16> >' mutable
|-AccessSpecDecl 0x55f32deb1330 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55f32deb1368 <line:118:5, col:15> col:15 value_type 'Router::Connection':'Router::Connection'
| `-SubstTemplateTypeParmType 0x55f32deb01b0 'Router::Connection' sugar
|   |-TemplateTypeParmType 0x55f32da87140 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55f32da870e8 'T'
|   `-RecordType 0x55f32de8eb30 'Router::Connection'
|     `-CXXRecord 0x55f32de8eaa0 'Connection'
|-TypedefDecl 0x55f32deb1428 <line:119:5, col:16> col:16 reference 'Router::Connection &'
| `-LValueReferenceType 0x55f32deb13f0 'Router::Connection &'
|   `-SubstTemplateTypeParmType 0x55f32deb01b0 'Router::Connection' sugar
|     |-TemplateTypeParmType 0x55f32da87140 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55f32da870e8 'T'
|     `-RecordType 0x55f32de8eb30 'Router::Connection'
|       `-CXXRecord 0x55f32de8eaa0 'Connection'
|-TypedefDecl 0x55f32deb14b8 <line:120:5, col:22> col:22 const_reference 'const Router::Connection &'
| `-LValueReferenceType 0x55f32deb1480 'const Router::Connection &'
|   `-QualType 0x55f32deb01b1 'const Router::Connection' const
|     `-SubstTemplateTypeParmType 0x55f32deb01b0 'Router::Connection' sugar
|       |-TemplateTypeParmType 0x55f32da87140 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f32da870e8 'T'
|       `-RecordType 0x55f32de8eb30 'Router::Connection'
|         `-CXXRecord 0x55f32de8eaa0 'Connection'
|-TypedefDecl 0x55f32deb1548 <line:121:5, col:16> col:16 pointer 'Router::Connection *'
| `-PointerType 0x55f32deb1510 'Router::Connection *'
|   `-SubstTemplateTypeParmType 0x55f32deb01b0 'Router::Connection' sugar
|     |-TemplateTypeParmType 0x55f32da87140 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55f32da870e8 'T'
|     `-RecordType 0x55f32de8eb30 'Router::Connection'
|       `-CXXRecord 0x55f32de8eaa0 'Connection'
|-TypedefDecl 0x55f32deb15d8 <line:122:5, col:22> col:22 const_pointer 'const Router::Connection *'
| `-PointerType 0x55f32deb15a0 'const Router::Connection *'
|   `-QualType 0x55f32deb01b1 'const Router::Connection' const
|     `-SubstTemplateTypeParmType 0x55f32deb01b0 'Router::Connection' sugar
|       |-TemplateTypeParmType 0x55f32da87140 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f32da870e8 'T'
|       `-RecordType 0x55f32de8eb30 'Router::Connection'
|         `-CXXRecord 0x55f32de8eaa0 'Connection'
|-TypedefDecl 0x55f32deb3810 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<Connection>::type':'const Router::Connection &'
| `-ElaboratedType 0x55f32deb37c0 'typename fast_argument<Connection>::type' sugar
|   `-TypedefType 0x55f32deb37a0 'fast_argument<Router::Connection, true>::type' sugar
|     |-Typedef 0x55f32deb36d8 'type'
|     `-LValueReferenceType 0x55f32deb36a0 'const Router::Connection &'
|       `-QualType 0x55f32deb3441 'const Router::Connection' const
|         `-SubstTemplateTypeParmType 0x55f32deb3440 'Router::Connection' sugar
|           |-TemplateTypeParmType 0x55f32da59b20 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55f32da59ac8 'T'
|           `-RecordType 0x55f32de8eb30 'Router::Connection'
|             `-CXXRecord 0x55f32de8eaa0 'Connection'
|-TypedefDecl 0x55f32deb3878 <line:126:5, col:22> col:22 const_access_type 'const Router::Connection &'
| `-LValueReferenceType 0x55f32deb1480 'const Router::Connection &'
|   `-QualType 0x55f32deb01b1 'const Router::Connection' const
|     `-SubstTemplateTypeParmType 0x55f32deb01b0 'Router::Connection' sugar
|       |-TemplateTypeParmType 0x55f32da87140 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f32da870e8 'T'
|       `-RecordType 0x55f32de8eb30 'Router::Connection'
|         `-CXXRecord 0x55f32de8eaa0 'Connection'
|-TypedefDecl 0x55f32deb38d0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55f32d785580 'int'
|-TypedefDecl 0x55f32deb3938 <line:130:5, col:16> col:16 iterator 'Router::Connection *'
| `-PointerType 0x55f32deb1510 'Router::Connection *'
|   `-SubstTemplateTypeParmType 0x55f32deb01b0 'Router::Connection' sugar
|     |-TemplateTypeParmType 0x55f32da87140 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55f32da870e8 'T'
|     `-RecordType 0x55f32de8eb30 'Router::Connection'
|       `-CXXRecord 0x55f32de8eaa0 'Connection'
|-TypedefDecl 0x55f32deb39a0 <line:131:5, col:22> col:22 const_iterator 'const Router::Connection *'
| `-PointerType 0x55f32deb15a0 'const Router::Connection *'
|   `-QualType 0x55f32deb01b1 'const Router::Connection' const
|     `-SubstTemplateTypeParmType 0x55f32deb01b0 'Router::Connection' sugar
|       |-TemplateTypeParmType 0x55f32da87140 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f32da870e8 'T'
|       `-RecordType 0x55f32de8eb30 'Router::Connection'
|         `-CXXRecord 0x55f32de8eaa0 'Connection'
|-EnumDecl 0x55f32deb39f8 <line:134:5> col:5
| `-EnumConstantDecl 0x55f32deb3af0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Router::Connection>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55f32deb3ad0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55f32da887c8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55f32da887a0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55f32da88780 <col:40> 'int' 1
|-CXXConstructorDecl 0x55f32deb3b78 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55f32deb3e08 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Router::Connection>::value_argument_type)' inline
| |-ParmVarDecl 0x55f32deb3c30 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55f32deb3cd0 <col:41, col:61> col:61 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXConstructorDecl 0x55f32deb40c8 <line:139:5, col:37> col:12 Vector 'void (const Vector<Router::Connection> &)' inline
| `-ParmVarDecl 0x55f32deb3fb0 <col:19, col:36> col:36 x 'const Vector<Router::Connection> &'
|-CXXConstructorDecl 0x55f32deb4388 <line:141:5, col:32> col:12 Vector 'void (Vector<Router::Connection> &&)' inline
| `-ParmVarDecl 0x55f32deb4270 <col:19, col:31> col:31 x 'Vector<Router::Connection> &&'
|-CXXMethodDecl 0x55f32deb46d0 <line:144:5, col:51> col:23 operator= 'Vector<Router::Connection> &(const Vector<Router::Connection> &)' inline
| `-ParmVarDecl 0x55f32deb45b0 <col:33, col:50> col:50 x 'const Vector<Router::Connection> &'
|-CXXMethodDecl 0x55f32deb49e0 <line:146:5, col:46> col:23 operator= 'Vector<Router::Connection> &(Vector<Router::Connection> &&)' inline
| `-ParmVarDecl 0x55f32deb48c0 <col:33, col:45> col:45 x 'Vector<Router::Connection> &&'
|-CXXMethodDecl 0x55f32deb4cd0 <line:148:5, col:70> col:23 assign 'Vector<Router::Connection> &(Vector::size_type, Vector<Router::Connection>::value_argument_type)' inline
| |-ParmVarDecl 0x55f32deb4b18 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55f32deb4b90 <col:43, col:69> col:63 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXMethodDecl 0x55f32deb4e28 <line:150:5, col:55> col:49 begin 'Vector<Router::Connection>::iterator ()'
| |-NoInlineAttr 0x55f32deb4f08 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f32deb4f60 <col:30> Inherited
|-CXXMethodDecl 0x55f32deb4fa8 <line:151:5, col:53> col:49 end 'Vector<Router::Connection>::iterator ()'
| |-NoInlineAttr 0x55f32deb5058 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f32deb50b0 <col:30> Inherited
|-CXXMethodDecl 0x55f32deb5178 <line:152:5, col:63> col:55 begin 'Vector<Router::Connection>::const_iterator () const'
| |-NoInlineAttr 0x55f32deb5228 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f32deb5280 <col:30> Inherited
|-CXXMethodDecl 0x55f32deb52c8 <line:153:5, col:61> col:55 end 'Vector<Router::Connection>::const_iterator () const'
| |-NoInlineAttr 0x55f32deb5378 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f32deb53d0 <col:30> Inherited
|-CXXMethodDecl 0x55f32deb5418 <line:154:5, col:64> col:55 cbegin 'Vector<Router::Connection>::const_iterator () const'
| |-NoInlineAttr 0x55f32deb54c8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f32deb5520 <col:30> Inherited
|-CXXMethodDecl 0x55f32deb5568 <line:155:5, col:62> col:55 cend 'Vector<Router::Connection>::const_iterator () const'
| |-NoInlineAttr 0x55f32deb5618 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f32deb5670 <col:30> Inherited
|-CXXMethodDecl 0x55f32deb5698 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55f32deb5748 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55f32deb57f8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55f32deb59b8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Router::Connection>::value_argument_type)' inline
| |-ParmVarDecl 0x55f32deb58a8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55f32deb5920 <col:37, col:63> col:57 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXMethodDecl 0x55f32deb5b08 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55f32deb5a78 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f32deb5cb8 <line:163:5, col:65> col:43 operator[] 'Router::Connection &(Vector::size_type)'
| |-ParmVarDecl 0x55f32deb5bc0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55f32deb5d70 <col:20>
| `-OptimizeNoneAttr 0x55f32deb5dc8 <col:30>
|-CXXMethodDecl 0x55f32deb5ee8 <line:164:5, col:73> col:49 operator[] 'const Router::Connection &(Vector::size_type) const'
| |-ParmVarDecl 0x55f32deb5df0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55f32deb5fa0 <col:20>
| `-OptimizeNoneAttr 0x55f32deb5ff8 <col:30>
|-CXXMethodDecl 0x55f32deb60b0 <line:165:5, col:29> col:15 at 'Router::Connection &(Vector::size_type)' inline
| `-ParmVarDecl 0x55f32deb6020 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f32deb61f8 <line:166:5, col:37> col:21 at 'const Router::Connection &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55f32deb6168 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f32deb6328 <line:167:5, col:21> col:15 front 'Router::Connection &()' inline
|-CXXMethodDecl 0x55f32deb6458 <line:168:5, col:29> col:21 front 'const Router::Connection &() const' inline
|-CXXMethodDecl 0x55f32deb6528 <line:169:5, col:20> col:15 back 'Router::Connection &()' inline
|-CXXMethodDecl 0x55f32deb65f8 <line:170:5, col:28> col:21 back 'const Router::Connection &() const' inline
|-CXXMethodDecl 0x55f32deb6738 <line:172:5, col:39> col:15 unchecked_at 'Router::Connection &(Vector::size_type)' inline
| `-ParmVarDecl 0x55f32deb66a8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f32deb6880 <line:173:5, col:47> col:21 unchecked_at 'const Router::Connection &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55f32deb67f0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f32deb69c8 <line:174:5, col:59> col:15 at_u 'Router::Connection &(Vector::size_type)' inline
| |-ParmVarDecl 0x55f32deb6938 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55f32deb6a80 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55f32deb6b80 <line:175:5, col:71> col:21 at_u 'const Router::Connection &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55f32deb6af0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55f32deb6c38 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55f32deb6cf8 <line:177:5, col:20> col:15 data 'Router::Connection *()' inline
|-CXXMethodDecl 0x55f32deb6df8 <line:178:5, col:28> col:21 data 'const Router::Connection *() const' inline
|-CXXMethodDecl 0x55f32deb6fa8 <line:180:5, col:48> col:17 push_back 'void (Vector<Router::Connection>::value_argument_type)' inline
| `-ParmVarDecl 0x55f32deb6eb8 <col:27, col:47> col:47 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-FunctionTemplateDecl 0x55f32deb7768 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55f32deb7060 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Router::Connection>':'fast_argument<Router::Connection, true>'
| `-CXXMethodDecl 0x55f32deb76c8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Router::Connection &&)' inline
|   `-ParmVarDecl 0x55f32deb75c8 <col:58, col:62> col:62 v 'Router::Connection &&'
|-CXXMethodDecl 0x55f32deb7848 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55f32deb7998 <line:186:5, col:49> col:17 push_front 'void (Vector<Router::Connection>::value_argument_type)' inline
| `-ParmVarDecl 0x55f32deb7908 <col:28, col:48> col:48 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXMethodDecl 0x55f32deb7a50 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55f32deb7c98 <line:189:5, col:62> col:21 insert 'Vector<Router::Connection>::iterator (Vector<Router::Connection>::iterator, Vector<Router::Connection>::value_argument_type)' inline
| |-ParmVarDecl 0x55f32deb7b10 <col:28, col:37> col:37 it 'Vector<Router::Connection>::iterator':'Router::Connection *'
| `-ParmVarDecl 0x55f32deb7b88 <col:41, col:61> col:61 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXMethodDecl 0x55f32deb7e58 <line:190:5, col:38> col:21 erase 'Vector<Router::Connection>::iterator (Vector<Router::Connection>::iterator)' inline
| `-ParmVarDecl 0x55f32deb7d68 <col:27, col:36> col:36 it 'Vector<Router::Connection>::iterator':'Router::Connection *'
|-CXXMethodDecl 0x55f32deb80a8 <line:191:5, col:49> col:21 erase 'Vector<Router::Connection>::iterator (Vector<Router::Connection>::iterator, Vector<Router::Connection>::iterator)' inline
| |-ParmVarDecl 0x55f32deb7f20 <col:27, col:36> col:36 a 'Vector<Router::Connection>::iterator':'Router::Connection *'
| `-ParmVarDecl 0x55f32deb7f98 <col:39, col:48> col:48 b 'Vector<Router::Connection>::iterator':'Router::Connection *'
|-CXXMethodDecl 0x55f32deb8168 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55f32deb83c8 <line:195:5, col:34> col:17 swap 'void (Vector<Router::Connection> &)' inline
| `-ParmVarDecl 0x55f32deb82d0 <col:22, col:33> col:33 x 'Vector<Router::Connection> &'
`-CXXDestructorDecl 0x55f32deb8498 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55f32deb8498

Layout: <CGRecordLayout
  LLVMType:%class.Vector.8 = type { %class.vector_memory.9 }
  NonVirtualBaseLLVMType:%class.Vector.8 = type { %class.vector_memory.9 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | union Handler::(anonymous at ../dummy_inc/click/handler.hh:290:5)
         0 |   HandlerCallback h
         0 |   ReadHandlerCallback r
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | union Handler::(anonymous at ../dummy_inc/click/handler.hh:294:5)
         0 |   HandlerCallback h
         0 |   WriteHandlerCallback w
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Handler
         0 |   class String _name
         0 |     struct String::rep_t _r
         0 |       const char * data
         8 |       int length
        16 |       struct String::memo_t * memo
        24 |   union Handler::(anonymous at ../dummy_inc/click/handler.hh:290:5) _read_hook
        24 |     HandlerCallback h
        24 |     ReadHandlerCallback r
        32 |   union Handler::(anonymous at ../dummy_inc/click/handler.hh:294:5) _write_hook
        32 |     HandlerCallback h
        32 |     WriteHandlerCallback w
        40 |   void * _read_user_data
        48 |   void * _write_user_data
        56 |   uint32_t _flags
        60 |   int _use_count
        64 |   int _next_by_name
           | [sizeof=72, dsize=68, align=8,
           |  nvsize=68, nvalign=8]

*** Dumping AST Record Layout
         0 | class ErrorHandler
         0 |   (ErrorHandler vtable pointer)
         8 |   int _nerrors
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f32ded4ac0 prev 0x55f32ddd4610 <../dummy_inc/click/error.hh:90:1, line:592:1> line:90:7 referenced class ErrorHandler definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55f32ded4bb8 <col:1, col:7> col:7 implicit referenced class ErrorHandler
|-AccessSpecDecl 0x55f32ded4c48 <col:22, col:28> col:22 public
|-EnumDecl 0x55f32ded4c70 <line:98:5, line:111:5> line:98:10 Level
| |-EnumConstantDecl 0x55f32ded4d88 <line:99:2, col:14> col:2 el_abort 'ErrorHandler::Level'
| | `-ConstantExpr 0x55f32ded4d68 <col:13, col:14> 'int' Int: -999
| |   `-UnaryOperator 0x55f32ded4d50 <col:13, col:14> 'int' prefix '-'
| |     `-IntegerLiteral 0x55f32ded4d30 <col:14> 'int' 999
| |-EnumConstantDecl 0x55f32ded4e30 <line:100:2, col:14> col:2 el_fatal 'ErrorHandler::Level'
| | `-ConstantExpr 0x55f32ded4e10 <col:13, col:14> 'int' Int: -1
| |   `-UnaryOperator 0x55f32ded4df8 <col:13, col:14> 'int' prefix '-'
| |     `-IntegerLiteral 0x55f32ded4dd8 <col:14> 'int' 1
| |-EnumConstantDecl 0x55f32ded4ec0 <line:102:2, col:17> col:2 el_emergency 'ErrorHandler::Level'
| | `-ConstantExpr 0x55f32ded4ea0 <col:17> 'int' Int: 0
| |   `-IntegerLiteral 0x55f32ded4e80 <col:17> 'int' 0
| |-EnumConstantDecl 0x55f32ded4f50 <line:103:2, col:13> col:2 el_alert 'ErrorHandler::Level'
| | `-ConstantExpr 0x55f32ded4f30 <col:13> 'int' Int: 1
| |   `-IntegerLiteral 0x55f32ded4f10 <col:13> 'int' 1
| |-EnumConstantDecl 0x55f32ded4fe0 <line:104:2, col:16> col:2 el_critical 'ErrorHandler::Level'
| | `-ConstantExpr 0x55f32ded4fc0 <col:16> 'int' Int: 2
| |   `-IntegerLiteral 0x55f32ded4fa0 <col:16> 'int' 2
| |-EnumConstantDecl 0x55f32ded5070 <line:105:2, col:13> col:2 referenced el_error 'ErrorHandler::Level'
| | `-ConstantExpr 0x55f32ded5050 <col:13> 'int' Int: 3
| |   `-IntegerLiteral 0x55f32ded5030 <col:13> 'int' 3
| |-EnumConstantDecl 0x55f32ded5100 <line:106:2, col:15> col:2 el_warning 'ErrorHandler::Level'
| | `-ConstantExpr 0x55f32ded50e0 <col:15> 'int' Int: 4
| |   `-IntegerLiteral 0x55f32ded50c0 <col:15> 'int' 4
| |-EnumConstantDecl 0x55f32ded5190 <line:107:2, col:14> col:2 el_notice 'ErrorHandler::Level'
| | `-ConstantExpr 0x55f32ded5170 <col:14> 'int' Int: 5
| |   `-IntegerLiteral 0x55f32ded5150 <col:14> 'int' 5
| |-EnumConstantDecl 0x55f32ded5220 <line:109:2, col:12> col:2 el_info 'ErrorHandler::Level'
| | `-ConstantExpr 0x55f32ded5200 <col:12> 'int' Int: 6
| |   `-IntegerLiteral 0x55f32ded51e0 <col:12> 'int' 6
| `-EnumConstantDecl 0x55f32ded52b0 <line:110:2, col:13> col:2 el_debug 'ErrorHandler::Level'
|   `-ConstantExpr 0x55f32ded5290 <col:13> 'int' Int: 7
|     `-IntegerLiteral 0x55f32ded5270 <col:13> 'int' 7
|-VarDecl 0x55f32ded5320 <line:114:5, col:31> col:23 e_abort 'const char []' static
|-VarDecl 0x55f32ded53a8 <col:5, line:115:10> col:2 e_fatal 'const char []' static
|-VarDecl 0x55f32ded5430 <line:114:5, line:116:14> col:2 e_emergency 'const char []' static
|-VarDecl 0x55f32ded54b8 <line:114:5, line:117:10> col:2 e_alert 'const char []' static
|-VarDecl 0x55f32ded5540 <line:114:5, line:118:13> col:2 e_critical 'const char []' static
|-VarDecl 0x55f32ded55c8 <line:114:5, line:119:10> col:2 e_error 'const char []' static
|-VarDecl 0x55f32ded5650 <line:114:5, line:120:12> col:2 e_warning 'const char []' static
|-VarDecl 0x55f32ded56d8 <line:114:5, line:121:22> col:2 e_warning_annotated 'const char []' static
|-VarDecl 0x55f32ded5760 <line:114:5, line:122:11> col:2 e_notice 'const char []' static
|-VarDecl 0x55f32ded57e8 <line:114:5, line:123:9> col:2 e_info 'const char []' static
|-VarDecl 0x55f32ded5870 <line:114:5, line:124:10> col:2 e_debug 'const char []' static
|-CXXConstructorDecl 0x55f32ded5970 <line:127:5, line:129:5> line:127:5 used ErrorHandler 'void ()'
| |-CXXCtorInitializer Field 0x55f32dedbc78 '_nerrors' 'int'
| | `-IntegerLiteral 0x55f32dedc408 <line:128:13> 'int' 0
| `-CompoundStmt 0x55f32dedc478 <col:16, line:129:5>
|-CXXDestructorDecl 0x55f32ded5a60 <line:131:5, line:132:5> line:131:13 used ~ErrorHandler 'void () noexcept' virtual
| `-CompoundStmt 0x55f32dedc488 <col:29, line:132:5>
|-CXXMethodDecl 0x55f32ded5c18 <line:148:5, col:62> col:26 static_initialize 'ErrorHandler *(ErrorHandler *)' static
| `-ParmVarDecl 0x55f32ded5b50 <col:44, col:58> col:58 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55f32ded5ce0 <line:154:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x55f32ded5dc8 <line:159:5, line:161:5> line:159:26 default_handler 'ErrorHandler *()' static
| `-CompoundStmt 0x55f32dedc4e0 <col:44, line:161:5>
|   `-ReturnStmt 0x55f32dedc4d0 <line:160:2, col:9>
|     `-ImplicitCastExpr 0x55f32dedc4b8 <col:9> 'ErrorHandler *' <LValueToRValue>
|       `-DeclRefExpr 0x55f32dedc498 <col:9> 'ErrorHandler *' lvalue Var 0x55f32dedbcd8 'the_default_handler' 'ErrorHandler *'
|-CXXMethodDecl 0x55f32ded5f08 <line:168:5, col:55> col:17 set_default_handler 'void (ErrorHandler *)' static
| `-ParmVarDecl 0x55f32ded5e78 <col:37, col:51> col:51 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55f32ded5fd0 <line:171:5, line:173:5> line:171:26 silent_handler 'ErrorHandler *()' static
| `-CompoundStmt 0x55f32dedc540 <col:43, line:173:5>
|   `-ReturnStmt 0x55f32dedc530 <line:172:2, col:9>
|     `-ImplicitCastExpr 0x55f32dedc518 <col:9> 'ErrorHandler *' <LValueToRValue>
|       `-DeclRefExpr 0x55f32dedc4f8 <col:9> 'ErrorHandler *' lvalue Var 0x55f32dedbd50 'the_silent_handler' 'ErrorHandler *'
|-VarDecl 0x55f32ded6088 <line:176:5, col:22> col:22 ok_result 'const int' static
|-VarDecl 0x55f32ded6108 <line:178:5, col:22> col:22 error_result 'const int' static
|-CXXMethodDecl 0x55f32ded6218 <line:186:5, col:36> col:10 debug 'void (const char *, ...)'
| `-ParmVarDecl 0x55f32ded6188 <col:16, col:28> col:28 fmt 'const char *'
|-CXXMethodDecl 0x55f32ded6368 <line:188:5, col:38> col:10 message 'void (const char *, ...)'
| `-ParmVarDecl 0x55f32ded62d8 <col:18, col:30> col:30 fmt 'const char *'
|-CXXMethodDecl 0x55f32ded64c0 <line:193:5, col:37> col:9 warning 'int (const char *, ...)'
| `-ParmVarDecl 0x55f32ded6428 <col:17, col:29> col:29 fmt 'const char *'
|-CXXMethodDecl 0x55f32ded6618 <line:196:5, col:35> col:9 error 'int (const char *, ...)'
| `-ParmVarDecl 0x55f32ded6580 <col:15, col:27> col:27 fmt 'const char *'
|-CXXMethodDecl 0x55f32ded6770 <line:201:5, col:35> col:9 fatal 'int (const char *, ...)'
| `-ParmVarDecl 0x55f32ded66d8 <col:15, col:27> col:27 fmt 'const char *'
|-CXXMethodDecl 0x55f32ded6980 <line:204:5, col:61> col:10 ldebug 'void (const String &, const char *, ...)'
| |-ParmVarDecl 0x55f32ded6828 <col:17, col:31> col:31 landmark 'const String &'
| `-ParmVarDecl 0x55f32ded68a8 <col:41, col:53> col:53 fmt 'const char *'
|-CXXMethodDecl 0x55f32ded6b58 <line:206:5, col:63> col:10 lmessage 'void (const String &, const char *, ...)'
| |-ParmVarDecl 0x55f32ded6a40 <col:19, col:33> col:33 landmark 'const String &'
| `-ParmVarDecl 0x55f32ded6ac0 <col:43, col:55> col:55 fmt 'const char *'
|-CXXMethodDecl 0x55f32ded6d78 <line:208:5, col:62> col:9 lwarning 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x55f32ded6c18 <col:18, col:32> col:32 landmark 'const String &'
| `-ParmVarDecl 0x55f32ded6c98 <col:42, col:54> col:54 fmt 'const char *'
|-CXXMethodDecl 0x55f32ded6f58 <line:210:5, col:60> col:9 lerror 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x55f32ded6e38 <col:16, col:30> col:30 landmark 'const String &'
| `-ParmVarDecl 0x55f32ded6eb8 <col:40, col:52> col:52 fmt 'const char *'
|-CXXMethodDecl 0x55f32ded7138 <line:212:5, col:60> col:9 lfatal 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x55f32ded7018 <col:16, col:30> col:30 landmark 'const String &'
| `-ParmVarDecl 0x55f32ded7098 <col:40, col:52> col:52 fmt 'const char *'
|-CXXMethodDecl 0x55f32ded72c0 <line:226:5, col:35> col:9 used xmessage 'int (const String &)'
| `-ParmVarDecl 0x55f32ded71f8 <col:18, col:32> col:32 str 'const String &'
|-CXXMethodDecl 0x55f32ded7490 <line:232:5, line:234:5> line:232:9 used xmessage 'int (const String &, const String &)'
| |-ParmVarDecl 0x55f32ded7378 <col:18, col:32> col:32 used anno 'const String &'
| |-ParmVarDecl 0x55f32ded73f0 <col:38, col:52> col:52 used str 'const String &'
| `-CompoundStmt 0x55f32dedc798 <col:57, line:234:5>
|   `-ReturnStmt 0x55f32dedc788 <line:233:2, col:41>
|     `-ExprWithCleanups 0x55f32dedc770 <col:9, col:41> 'int'
|       `-CXXMemberCallExpr 0x55f32dedc718 <col:9, col:41> 'int'
|         |-MemberExpr 0x55f32dedc6e8 <col:9> '<bound member function type>' ->xmessage 0x55f32ded72c0
|         | `-CXXThisExpr 0x55f32dedc6d8 <col:9> 'ErrorHandler *' implicit this
|         `-MaterializeTemporaryExpr 0x55f32dedc758 <col:18, col:40> 'const String' lvalue
|           `-ImplicitCastExpr 0x55f32dedc740 <col:18, col:40> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x55f32dedc6b8 <col:18, col:40> 'String' (CXXTemporary 0x55f32dedc6b8)
|               `-CallExpr 0x55f32dedc680 <col:18, col:40> 'String'
|                 |-ImplicitCastExpr 0x55f32dedc668 <col:18> 'String (*)(const String &, const String &)' <FunctionToPointerDecay>
|                 | `-DeclRefExpr 0x55f32dedc5e0 <col:18> 'String (const String &, const String &)' lvalue CXXMethod 0x55f32ded9488 'combine_anno' 'String (const String &, const String &)'
|                 |-DeclRefExpr 0x55f32dedc600 <col:31> 'const String' lvalue ParmVar 0x55f32ded73f0 'str' 'const String &'
|                 `-DeclRefExpr 0x55f32dedc620 <col:36> 'const String' lvalue ParmVar 0x55f32ded7378 'anno' 'const String &'
|-CXXMethodDecl 0x55f32ded7770 <line:241:5, line:243:5> line:241:9 xmessage 'int (const String &, const char *, __va_list_tag *)'
| |-ParmVarDecl 0x55f32ded7550 <col:18, col:32> col:32 used anno 'const String &'
| |-ParmVarDecl 0x55f32ded75d0 <col:38, col:50> col:50 used fmt 'const char *'
| |-ParmVarDecl 0x55f32ded7648 <col:55, col:63> col:63 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x55f32dedca28 <col:68, line:243:5>
|   `-ReturnStmt 0x55f32dedca18 <line:242:2, col:41>
|     `-ExprWithCleanups 0x55f32dedca00 <col:9, col:41> 'int'
|       `-CXXMemberCallExpr 0x55f32dedc9a0 <col:9, col:41> 'int'
|         |-MemberExpr 0x55f32dedc970 <col:9> '<bound member function type>' ->xmessage 0x55f32ded7490
|         | `-CXXThisExpr 0x55f32dedc960 <col:9> 'ErrorHandler *' implicit this
|         |-DeclRefExpr 0x55f32dedc838 <col:18> 'const String' lvalue ParmVar 0x55f32ded7550 'anno' 'const String &'
|         `-MaterializeTemporaryExpr 0x55f32dedc9e8 <col:24, col:40> 'const String' lvalue
|           `-ImplicitCastExpr 0x55f32dedc9d0 <col:24, col:40> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x55f32dedc940 <col:24, col:40> 'String' (CXXTemporary 0x55f32dedc940)
|               `-CXXMemberCallExpr 0x55f32dedc8d8 <col:24, col:40> 'String'
|                 |-MemberExpr 0x55f32dedc868 <col:24> '<bound member function type>' ->vformat 0x55f32ded8950
|                 | `-CXXThisExpr 0x55f32dedc858 <col:24> 'ErrorHandler *' implicit this
|                 |-ImplicitCastExpr 0x55f32dedc908 <col:32> 'const char *' <LValueToRValue>
|                 | `-DeclRefExpr 0x55f32dedc898 <col:32> 'const char *' lvalue ParmVar 0x55f32ded75d0 'fmt' 'const char *'
|                 `-ImplicitCastExpr 0x55f32dedc920 <col:37> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                   `-DeclRefExpr 0x55f32dedc8b8 <col:37> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x55f32ded7648 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55f32ded7a10 <line:251:5, line:254:5> line:251:9 used xmessage 'int (const String &, const String &, const String &)'
| |-ParmVarDecl 0x55f32ded7838 <col:18, col:32> col:32 used landmark 'const String &'
| |-ParmVarDecl 0x55f32ded78b0 <col:42, col:56> col:56 used anno 'const String &'
| |-ParmVarDecl 0x55f32ded7928 <line:252:4, col:18> col:18 used str 'const String &'
| `-CompoundStmt 0x55f32dedcd68 <col:23, line:254:5>
|   `-ReturnStmt 0x55f32dedcd58 <line:253:2, col:71>
|     `-ExprWithCleanups 0x55f32dedcd40 <col:9, col:71> 'int'
|       `-CXXMemberCallExpr 0x55f32dedcce0 <col:9, col:71> 'int'
|         |-MemberExpr 0x55f32dedccb0 <col:9> '<bound member function type>' ->xmessage 0x55f32ded7490
|         | `-CXXThisExpr 0x55f32dedcca0 <col:9> 'ErrorHandler *' implicit this
|         |-MaterializeTemporaryExpr 0x55f32dedcd28 <col:18, col:65> 'const String' lvalue
|         | `-ImplicitCastExpr 0x55f32dedcd10 <col:18, col:65> 'const String' <NoOp>
|         |   `-CXXBindTemporaryExpr 0x55f32dedcc60 <col:18, col:65> 'String' (CXXTemporary 0x55f32dedcc60)
|         |     `-CallExpr 0x55f32dedcbf8 <col:18, col:65> 'String'
|         |       |-ImplicitCastExpr 0x55f32dedcbe0 <col:18> 'String (*)(const String &, const String &)' <FunctionToPointerDecay>
|         |       | `-DeclRefExpr 0x55f32dedcac8 <col:18> 'String (const String &, const String &)' lvalue CXXMethod 0x55f32ded9488 'combine_anno' 'String (const String &, const String &)'
|         |       |-DeclRefExpr 0x55f32dedcae8 <col:31> 'const String' lvalue ParmVar 0x55f32ded78b0 'anno' 'const String &'
|         |       `-MaterializeTemporaryExpr 0x55f32dedcc40 <col:37, col:64> 'const String' lvalue
|         |         `-ImplicitCastExpr 0x55f32dedcc28 <col:37, col:64> 'const String' <NoOp>
|         |           `-CXXBindTemporaryExpr 0x55f32dedcbc0 <col:37, col:64> 'String' (CXXTemporary 0x55f32dedcbc0)
|         |             `-CallExpr 0x55f32dedcb90 <col:37, col:64> 'String'
|         |               |-ImplicitCastExpr 0x55f32dedcb78 <col:37> 'String (*)(const String &)' <FunctionToPointerDecay>
|         |               | `-DeclRefExpr 0x55f32dedcb08 <col:37> 'String (const String &)' lvalue CXXMethod 0x55f32ded9ad8 'make_landmark_anno' 'String (const String &)'
|         |               `-DeclRefExpr 0x55f32dedcb28 <col:56> 'const String' lvalue ParmVar 0x55f32ded7838 'landmark' 'const String &'
|         `-DeclRefExpr 0x55f32dedcc80 <col:68> 'const String' lvalue ParmVar 0x55f32ded7928 'str' 'const String &'
|-CXXMethodDecl 0x55f32ded7d90 <line:264:5, line:267:5> line:264:9 xmessage 'int (const String &, const String &, const char *, __va_list_tag *)'
| |-ParmVarDecl 0x55f32ded7ad8 <col:18, col:32> col:32 used landmark 'const String &'
| |-ParmVarDecl 0x55f32ded7b50 <col:42, col:56> col:56 used anno 'const String &'
| |-ParmVarDecl 0x55f32ded7bd0 <line:265:4, col:16> col:16 used fmt 'const char *'
| |-ParmVarDecl 0x55f32ded7c48 <col:21, col:29> col:29 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x55f32dedd020 <col:34, line:267:5>
|   `-ReturnStmt 0x55f32dedd010 <line:266:2, col:51>
|     `-ExprWithCleanups 0x55f32dedcff8 <col:9, col:51> 'int'
|       `-CXXMemberCallExpr 0x55f32dedcf90 <col:9, col:51> 'int'
|         |-MemberExpr 0x55f32dedcf60 <col:9> '<bound member function type>' ->xmessage 0x55f32ded7a10
|         | `-CXXThisExpr 0x55f32dedcf50 <col:9> 'ErrorHandler *' implicit this
|         |-DeclRefExpr 0x55f32dedce08 <col:18> 'const String' lvalue ParmVar 0x55f32ded7ad8 'landmark' 'const String &'
|         |-DeclRefExpr 0x55f32dedce28 <col:28> 'const String' lvalue ParmVar 0x55f32ded7b50 'anno' 'const String &'
|         `-MaterializeTemporaryExpr 0x55f32dedcfe0 <col:34, col:50> 'const String' lvalue
|           `-ImplicitCastExpr 0x55f32dedcfc8 <col:34, col:50> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x55f32dedcf30 <col:34, col:50> 'String' (CXXTemporary 0x55f32dedcf30)
|               `-CXXMemberCallExpr 0x55f32dedcec8 <col:34, col:50> 'String'
|                 |-MemberExpr 0x55f32dedce58 <col:34> '<bound member function type>' ->vformat 0x55f32ded8950
|                 | `-CXXThisExpr 0x55f32dedce48 <col:34> 'ErrorHandler *' implicit this
|                 |-ImplicitCastExpr 0x55f32dedcef8 <col:42> 'const char *' <LValueToRValue>
|                 | `-DeclRefExpr 0x55f32dedce88 <col:42> 'const char *' lvalue ParmVar 0x55f32ded7bd0 'fmt' 'const char *'
|                 `-ImplicitCastExpr 0x55f32dedcf10 <col:47> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                   `-DeclRefExpr 0x55f32dedcea8 <col:47> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x55f32ded7c48 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55f32ded7ea0 <line:286:5, line:288:5> line:286:9 nerrors 'int () const'
| `-CompoundStmt 0x55f32dedd0a0 <col:25, line:288:5>
|   `-ReturnStmt 0x55f32dedd090 <line:287:2, col:9>
|     `-ImplicitCastExpr 0x55f32dedd078 <col:9> 'int' <LValueToRValue>
|       `-MemberExpr 0x55f32dedd048 <col:9> 'const int' lvalue ->_nerrors 0x55f32dedbc78
|         `-CXXThisExpr 0x55f32dedd038 <col:9> 'const ErrorHandler *' implicit this
|-CXXMethodDecl 0x55f32ded80b0 <line:349:5, col:66> col:19 xformat 'String (int, const char *, ...)' static
| |-ParmVarDecl 0x55f32ded7f58 <col:27, col:31> col:31 default_flags 'int'
| `-ParmVarDecl 0x55f32ded7fd8 <col:46, col:58> col:58 fmt 'const char *'
|-CXXMethodDecl 0x55f32ded8398 <line:351:5, col:75> col:19 used vxformat 'String (int, const char *, __va_list_tag *)' static
| |-ParmVarDecl 0x55f32ded8178 <col:28, col:32> col:32 default_flags 'int'
| |-ParmVarDecl 0x55f32ded81f8 <col:47, col:59> col:59 fmt 'const char *'
| `-ParmVarDecl 0x55f32ded8270 <col:64, col:72> col:72 val '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55f32ded8530 <line:353:5, col:47> col:19 xformat 'String (const char *, ...)' static
| `-ParmVarDecl 0x55f32ded8468 <col:27, col:39> col:39 fmt 'const char *'
|-CXXMethodDecl 0x55f32ded8778 <line:355:5, line:357:5> line:355:19 vxformat 'String (const char *, __va_list_tag *)' static
| |-ParmVarDecl 0x55f32ded85f0 <col:28, col:40> col:40 used fmt 'const char *'
| |-ParmVarDecl 0x55f32ded8668 <col:45, col:53> col:53 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x55f32dedd300 <col:58, line:357:5>
|   `-ReturnStmt 0x55f32dedd2f0 <line:356:2, col:29>
|     `-ExprWithCleanups 0x55f32dedd2d8 <col:9, col:29> 'String'
|       `-CXXConstructExpr 0x55f32dedd2a8 <col:9, col:29> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x55f32dedd290 <col:9, col:29> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x55f32dedd270 <col:9, col:29> 'String' (CXXTemporary 0x55f32dedd270)
|             `-CallExpr 0x55f32dedd200 <col:9, col:29> 'String'
|               |-ImplicitCastExpr 0x55f32dedd1e8 <col:9> 'String (*)(int, const char *, __va_list_tag *)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x55f32dedd168 <col:9> 'String (int, const char *, __va_list_tag *)' lvalue CXXMethod 0x55f32ded8398 'vxformat' 'String (int, const char *, __va_list_tag *)'
|               |-IntegerLiteral 0x55f32dedd108 <col:18> 'int' 0
|               |-ImplicitCastExpr 0x55f32dedd238 <col:21> 'const char *' <LValueToRValue>
|               | `-DeclRefExpr 0x55f32dedd128 <col:21> 'const char *' lvalue ParmVar 0x55f32ded85f0 'fmt' 'const char *'
|               `-ImplicitCastExpr 0x55f32dedd250 <col:26> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                 `-DeclRefExpr 0x55f32dedd148 <col:26> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x55f32ded8668 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55f32ded8950 <line:369:5, col:56> col:20 used vformat 'String (const char *, __va_list_tag *)' virtual
| |-ParmVarDecl 0x55f32ded8840 <col:28, col:40> col:40 fmt 'const char *'
| `-ParmVarDecl 0x55f32ded88b8 <col:45, col:53> col:53 val '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55f32ded8aa8 <line:379:5, col:39> col:12 format 'String (const char *, ...)'
| `-ParmVarDecl 0x55f32ded8a18 <col:19, col:31> col:31 fmt 'const char *'
|-CXXMethodDecl 0x55f32ded8bf0 <line:393:5, col:46> col:20 decorate 'String (const String &)' virtual
| `-ParmVarDecl 0x55f32ded8b60 <col:29, col:43> col:43 str 'const String &'
|-CXXMethodDecl 0x55f32ded8e90 <line:424:5, col:69> col:19 emit 'void *(const String &, void *, bool)' virtual
| |-ParmVarDecl 0x55f32ded8ca8 <col:24, col:38> col:38 str 'const String &'
| |-ParmVarDecl 0x55f32ded8d28 <col:43, col:49> col:49 user_data 'void *'
| `-ParmVarDecl 0x55f32ded8da0 <col:60, col:65> col:65 more 'bool'
|-CXXMethodDecl 0x55f32ded8ff0 <line:438:5, line:441:5> line:438:18 account 'void (int)' virtual
| |-ParmVarDecl 0x55f32ded8f60 <col:26, col:30> col:30 used level 'int'
| `-CompoundStmt 0x55f32dedd418 <col:37, line:441:5>
|   `-IfStmt 0x55f32dedd400 <line:439:2, line:440:8>
|     |-BinaryOperator 0x55f32dedd388 <line:439:6, col:15> 'bool' '<='
|     | |-ImplicitCastExpr 0x55f32dedd358 <col:6> 'int' <LValueToRValue>
|     | | `-DeclRefExpr 0x55f32dedd318 <col:6> 'int' lvalue ParmVar 0x55f32ded8f60 'level' 'int'
|     | `-ImplicitCastExpr 0x55f32dedd370 <col:15> 'int' <IntegralCast>
|     |   `-DeclRefExpr 0x55f32dedd338 <col:15> 'ErrorHandler::Level' EnumConstant 0x55f32ded5070 'el_error' 'ErrorHandler::Level'
|     `-UnaryOperator 0x55f32dedd3e8 <line:440:6, col:8> 'int' lvalue prefix '++'
|       `-MemberExpr 0x55f32dedd3b8 <col:8> 'int' lvalue ->_nerrors 0x55f32dedbc78
|         `-CXXThisExpr 0x55f32dedd3a8 <col:8> 'ErrorHandler *' implicit this
|-CXXMethodDecl 0x55f32ded90b8 <line:446:5, line:448:5> line:446:18 clear 'void ()' virtual
| `-CompoundStmt 0x55f32dedd4b0 <col:26, line:448:5>
|   `-BinaryOperator 0x55f32dedd490 <line:447:2, col:13> 'int' lvalue '='
|     |-MemberExpr 0x55f32dedd440 <col:2> 'int' lvalue ->_nerrors 0x55f32dedbc78
|     | `-CXXThisExpr 0x55f32dedd430 <col:2> 'ErrorHandler *' implicit this
|     `-IntegerLiteral 0x55f32dedd470 <col:13> 'int' 0
|-CXXMethodDecl 0x55f32ded9280 <line:466:5, col:66> col:19 used make_anno 'String (const char *, const String &)' static
| |-ParmVarDecl 0x55f32ded9170 <col:29, col:41> col:41 name 'const char *'
| `-ParmVarDecl 0x55f32ded91e8 <col:47, col:61> col:61 value 'const String &'
|-CXXMethodDecl 0x55f32ded9488 <line:482:5, col:69> col:19 used combine_anno 'String (const String &, const String &)' static
| |-ParmVarDecl 0x55f32ded9340 <col:32, col:46> col:46 str 'const String &'
| `-ParmVarDecl 0x55f32ded93b8 <col:51, col:65> col:65 anno 'const String &'
|-CXXMethodDecl 0x55f32ded9738 <line:516:5, line:517:68> line:516:24 parse_anno 'const char *(const String &, const char *, const char *, ...)' static
| |-ParmVarDecl 0x55f32ded9548 <col:35, col:49> col:49 str 'const String &'
| |-ParmVarDecl 0x55f32ded95c8 <line:517:3, col:15> col:15 begin 'const char *'
| |-ParmVarDecl 0x55f32ded9648 <col:22, col:34> col:34 end 'const char *'
| `-SentinelAttr 0x55f32ded97f0 <col:59> 0 0
|-CXXMethodDecl 0x55f32ded9988 <line:527:5, line:534:5> line:527:24 skip_anno 'const char *(const char *, const char *)' static
| |-ParmVarDecl 0x55f32ded9868 <col:34, col:46> col:46 used begin 'const char *'
| |-ParmVarDecl 0x55f32ded98e8 <col:53, col:65> col:65 used end 'const char *'
| `-CompoundStmt 0x55f32deddb20 <col:70, line:534:5>
|   |-DeclStmt 0x55f32dedd620 <line:528:2, col:20>
|   | |-VarDecl 0x55f32dedd4d8 <col:2, col:9> col:9 used name 'String' callinit destroyed
|   | | `-CXXConstructExpr 0x55f32dedd540 <col:9> 'String' 'void ()'
|   | `-VarDecl 0x55f32dedd578 <col:2, col:15> col:15 used value 'String' callinit destroyed
|   |   `-CXXConstructExpr 0x55f32dedd5e0 <col:15> 'String' 'void ()'
|   |-DeclStmt 0x55f32dedd6f0 <line:529:2, col:23>
|   | `-VarDecl 0x55f32dedd650 <col:2, col:18> col:14 used x 'const char *' cinit
|   |   `-ImplicitCastExpr 0x55f32dedd6d8 <col:18> 'const char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x55f32dedd6b8 <col:18> 'const char *' lvalue ParmVar 0x55f32ded9868 'begin' 'const char *'
|   |-DoStmt 0x55f32deddab8 <line:530:2, line:532:15>
|   | |-CompoundStmt 0x55f32dedd9e8 <line:530:5, line:532:2>
|   | | `-ExprWithCleanups 0x55f32dedd9d0 <line:531:6, col:58> 'const char *' lvalue
|   | |   `-BinaryOperator 0x55f32dedd9b0 <col:6, col:58> 'const char *' lvalue '='
|   | |     |-DeclRefExpr 0x55f32dedd708 <col:6> 'const char *' lvalue Var 0x55f32dedd650 'x' 'const char *'
|   | |     `-CallExpr 0x55f32dedd900 <col:10, col:58> 'const char *'
|   | |       |-ImplicitCastExpr 0x55f32dedd8e8 <col:10> 'const char *(*)(const String &, const char *, const char *, String *, String *, bool)' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x55f32dedd8a0 <col:10> 'const char *(const String &, const char *, const char *, String *, String *, bool)' lvalue CXXMethod 0x55f32dedc150 'skip_anno' 'const char *(const String &, const char *, const char *, String *, String *, bool)'
|   | |       |-MaterializeTemporaryExpr 0x55f32dedd968 <col:20, col:27> 'const String' lvalue
|   | |       | `-ImplicitCastExpr 0x55f32dedd950 <col:20, col:27> 'const String' <NoOp>
|   | |       |   `-CXXBindTemporaryExpr 0x55f32dedd7c0 <col:20, col:27> 'String' (CXXTemporary 0x55f32dedd7c0)
|   | |       |     `-CXXTemporaryObjectExpr 0x55f32dedd788 <col:20, col:27> 'String' 'void ()'
|   | |       |-ImplicitCastExpr 0x55f32dedd980 <col:30> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x55f32dedd7e0 <col:30> 'const char *' lvalue Var 0x55f32dedd650 'x' 'const char *'
|   | |       |-ImplicitCastExpr 0x55f32dedd998 <col:33> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x55f32dedd800 <col:33> 'const char *' lvalue ParmVar 0x55f32ded98e8 'end' 'const char *'
|   | |       |-UnaryOperator 0x55f32dedd840 <col:38, col:39> 'String *' prefix '&' cannot overflow
|   | |       | `-DeclRefExpr 0x55f32dedd820 <col:39> 'String' lvalue Var 0x55f32dedd4d8 'name' 'String'
|   | |       |-UnaryOperator 0x55f32dedd878 <col:45, col:46> 'String *' prefix '&' cannot overflow
|   | |       | `-DeclRefExpr 0x55f32dedd858 <col:46> 'String' lvalue Var 0x55f32dedd578 'value' 'String'
|   | |       `-CXXBoolLiteralExpr 0x55f32dedd890 <col:53> 'bool' false
|   | `-ImplicitCastExpr 0x55f32deddaa0 <line:532:11> 'bool' <MemberPointerToBoolean>
|   |   `-ImplicitCastExpr 0x55f32dedda88 <col:11> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|   |     `-CXXMemberCallExpr 0x55f32dedda68 <col:11> 'String::unspecified_bool_type':'int (String::*)() const'
|   |       `-MemberExpr 0x55f32dedda38 <col:11> '<bound member function type>' .operator int (String::*)() const 0x55f32dab9d78
|   |         `-ImplicitCastExpr 0x55f32dedda20 <col:11> 'const String' lvalue <NoOp>
|   |           `-DeclRefExpr 0x55f32dedda00 <col:11> 'String' lvalue Var 0x55f32dedd4d8 'name' 'String'
|   `-ReturnStmt 0x55f32deddb10 <line:533:2, col:9>
|     `-ImplicitCastExpr 0x55f32deddaf8 <col:9> 'const char *' <LValueToRValue>
|       `-DeclRefExpr 0x55f32deddad8 <col:9> 'const char *' lvalue Var 0x55f32dedd650 'x' 'const char *'
|-CXXMethodDecl 0x55f32ded9ad8 <line:543:5, line:550:5> line:543:19 used make_landmark_anno 'String (const String &)' static
| |-ParmVarDecl 0x55f32ded9a48 <col:38, col:52> col:52 used x 'const String &'
| `-CompoundStmt 0x55f32dede128 <col:55, line:550:5>
|   `-IfStmt 0x55f32dede100 <line:544:2, line:549:20> has_else
|     |-BinaryOperator 0x55f32deddd60 <line:544:6, col:19> 'bool' '&&'
|     | |-ImplicitCastExpr 0x55f32deddd48 <col:6> 'bool' <MemberPointerToBoolean>
|     | | `-ImplicitCastExpr 0x55f32deddd30 <col:6> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|     | |   `-CXXMemberCallExpr 0x55f32deddd10 <col:6> 'String::unspecified_bool_type':'int (String::*)() const'
|     | |     `-MemberExpr 0x55f32deddce0 <col:6> '<bound member function type>' .operator int (String::*)() const 0x55f32dab9d78
|     | |       `-DeclRefExpr 0x55f32deddb80 <col:6> 'const String' lvalue ParmVar 0x55f32ded9a48 'x' 'const String &'
|     | `-BinaryOperator 0x55f32deddcc0 <col:11, col:19> 'bool' '=='
|     |   |-ImplicitCastExpr 0x55f32deddc90 <col:11, col:14> 'int' <IntegralCast>
|     |   | `-CXXOperatorCallExpr 0x55f32deddc40 <col:11, col:14> 'char'
|     |   |   |-ImplicitCastExpr 0x55f32deddc28 <col:12, col:14> 'char (*)(int) const' <FunctionToPointerDecay>
|     |   |   | `-DeclRefExpr 0x55f32deddbe0 <col:12, col:14> 'char (int) const' lvalue CXXMethod 0x55f32dad35b0 'operator[]' 'char (int) const'
|     |   |   |-DeclRefExpr 0x55f32deddba0 <col:11> 'const String' lvalue ParmVar 0x55f32ded9a48 'x' 'const String &'
|     |   |   `-IntegerLiteral 0x55f32deddbc0 <col:13> 'int' 0
|     |   `-ImplicitCastExpr 0x55f32deddca8 <col:19> 'int' <IntegralCast>
|     |     `-CharacterLiteral 0x55f32deddc78 <col:19> 'char' 123
|     |-ReturnStmt 0x55f32dedddd0 <line:545:6, col:13>
|     | `-CXXConstructExpr 0x55f32deddda0 <col:13> 'String' 'void (const String &)'
|     |   `-DeclRefExpr 0x55f32deddd80 <col:13> 'const String' lvalue ParmVar 0x55f32ded9a48 'x' 'const String &'
|     `-IfStmt 0x55f32dede0d8 <line:546:7, line:549:20> has_else
|       |-ImplicitCastExpr 0x55f32dedde68 <line:546:11> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x55f32dedde50 <col:11> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x55f32dedde30 <col:11> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x55f32dedde00 <col:11> '<bound member function type>' .operator int (String::*)() const 0x55f32dab9d78
|       |       `-DeclRefExpr 0x55f32deddde0 <col:11> 'const String' lvalue ParmVar 0x55f32ded9a48 'x' 'const String &'
|       |-ReturnStmt 0x55f32deddff0 <line:547:6, col:29>
|       | `-ExprWithCleanups 0x55f32deddfd8 <col:13, col:29> 'String'
|       |   `-CXXConstructExpr 0x55f32deddfa8 <col:13, col:29> 'String' 'void (String &&)' elidable
|       |     `-MaterializeTemporaryExpr 0x55f32deddf90 <col:13, col:29> 'String' xvalue
|       |       `-CXXBindTemporaryExpr 0x55f32deddf70 <col:13, col:29> 'String' (CXXTemporary 0x55f32deddf70)
|       |         `-CallExpr 0x55f32deddf20 <col:13, col:29> 'String'
|       |           |-ImplicitCastExpr 0x55f32deddf08 <col:13> 'String (*)(const char *, const String &)' <FunctionToPointerDecay>
|       |           | `-DeclRefExpr 0x55f32dedde80 <col:13> 'String (const char *, const String &)' lvalue CXXMethod 0x55f32ded9280 'make_anno' 'String (const char *, const String &)'
|       |           |-ImplicitCastExpr 0x55f32deddf50 <col:23> 'const char *' <ArrayToPointerDecay>
|       |           | `-StringLiteral 0x55f32deddea0 <col:23> 'const char [2]' lvalue "l"
|       |           `-DeclRefExpr 0x55f32deddec0 <col:28> 'const String' lvalue ParmVar 0x55f32ded9a48 'x' 'const String &'
|       `-ReturnStmt 0x55f32dede0c8 <line:549:6, col:20>
|         `-ExprWithCleanups 0x55f32dede0b0 <col:13, col:20> 'String'
|           `-CXXConstructExpr 0x55f32dede080 <col:13, col:20> 'String' 'void (String &&)' elidable
|             `-MaterializeTemporaryExpr 0x55f32dede068 <col:13, col:20> 'String' xvalue
|               `-CXXBindTemporaryExpr 0x55f32dede048 <col:13, col:20> 'String' (CXXTemporary 0x55f32dede048)
|                 `-CXXTemporaryObjectExpr 0x55f32dede010 <col:13, col:20> 'String' 'void ()'
|-CXXMethodDecl 0x55f32ded9ca0 <line:559:5, col:76> col:19 clean_landmark 'String (const String &, bool)' static
| |-ParmVarDecl 0x55f32ded9b90 <col:34, col:48> col:48 landmark 'const String &'
| `-ParmVarDecl 0x55f32ded9c08 <col:58, col:71> col:63 colon 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55f32dedc3f8 <col:71> 'bool' false
|-CXXRecordDecl 0x55f32ded9d50 <line:563:5, col:12> col:12 referenced struct Conversion
|-TypedefDecl 0x55f32deda048 <line:564:5, col:60> col:22 referenced ConversionFunction 'String (*)(int, __va_list_tag *)'
| `-PointerType 0x55f32ded9fe0 'String (*)(int, __va_list_tag *)'
|   `-ParenType 0x55f32ded9f80 'String (int, __va_list_tag *)' sugar
|     `-FunctionProtoType 0x55f32ded9f40 'String (int, __va_list_tag *)' cdecl
|       |-RecordType 0x55f32dab6610 'String'
|       | `-CXXRecord 0x55f32dab6580 'String'
|       |-BuiltinType 0x55f32d785580 'int'
|       `-DecayedType 0x55f32dc6c610 '__va_list_tag *' sugar
|         |-TypedefType 0x55f32dc6c5e0 'va_list' sugar
|         | |-Typedef 0x55f32d9a74a0 'va_list'
|         | `-TypedefType 0x55f32d9a7450 '__gnuc_va_list' sugar
|         |   |-Typedef 0x55f32d8df078 '__gnuc_va_list'
|         |   `-TypedefType 0x55f32d8defe0 '__builtin_va_list' sugar
|         |     |-Typedef 0x55f32d7c6d38 '__builtin_va_list'
|         |     `-ConstantArrayType 0x55f32d7c6ce0 '__va_list_tag [1]' 1 
|         |       `-RecordType 0x55f32d7862d0 '__va_list_tag'
|         |         `-CXXRecord 0x55f32d786238 '__va_list_tag'
|         `-PointerType 0x55f32d9acd40 '__va_list_tag *'
|           `-RecordType 0x55f32d7862d0 '__va_list_tag'
|             `-CXXRecord 0x55f32d786238 '__va_list_tag'
|-EnumDecl 0x55f32deda0a0 <line:565:5, line:576:5> line:565:10 ConversionFlags
| |-EnumConstantDecl 0x55f32deda1a0 <line:566:2, col:16> col:2 cf_zero_pad 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55f32deda700 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f32deda180 <col:16> 'int' Int: 1
| |     `-IntegerLiteral 0x55f32deda160 <col:16> 'int' 1
| |-EnumConstantDecl 0x55f32deda230 <line:567:2, col:21> col:2 cf_plus_positive 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55f32deda718 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f32deda210 <col:21> 'int' Int: 2
| |     `-IntegerLiteral 0x55f32deda1f0 <col:21> 'int' 2
| |-EnumConstantDecl 0x55f32deda2c0 <line:568:2, col:22> col:2 cf_space_positive 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55f32deda730 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f32deda2a0 <col:22> 'int' Int: 4
| |     `-IntegerLiteral 0x55f32deda280 <col:22> 'int' 4
| |-EnumConstantDecl 0x55f32deda350 <line:569:2, col:17> col:2 cf_left_just 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55f32deda748 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f32deda330 <col:17> 'int' Int: 8
| |     `-IntegerLiteral 0x55f32deda310 <col:17> 'int' 8
| |-EnumConstantDecl 0x55f32deda3e0 <line:570:2, col:22> col:2 cf_alternate_form 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55f32deda760 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f32deda3c0 <col:22> 'int' Int: 16
| |     `-IntegerLiteral 0x55f32deda3a0 <col:22> 'int' 16
| |-EnumConstantDecl 0x55f32deda470 <line:571:2, col:19> col:2 cf_singlequote 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55f32deda778 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f32deda450 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x55f32deda430 <col:19> 'int' 32
| |-EnumConstantDecl 0x55f32deda500 <line:572:2, col:17> col:2 cf_uppercase 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55f32deda790 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f32deda4e0 <col:17> 'int' Int: 64
| |     `-IntegerLiteral 0x55f32deda4c0 <col:17> 'int' 64
| |-EnumConstantDecl 0x55f32deda590 <line:573:2, col:14> col:2 cf_signed 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55f32deda7a8 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f32deda570 <col:14> 'int' Int: 128
| |     `-IntegerLiteral 0x55f32deda550 <col:14> 'int' 128
| |-EnumConstantDecl 0x55f32deda620 <line:574:2, col:16> col:2 cf_negative 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55f32deda7c0 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f32deda600 <col:16> 'int' Int: 256
| |     `-IntegerLiteral 0x55f32deda5e0 <col:16> 'int' 256
| `-EnumConstantDecl 0x55f32deda6b0 <line:575:2, col:12> col:2 cf_utf8 'ErrorHandler::ConversionFlags'
|   `-ImplicitCastExpr 0x55f32deda7d8 <col:12> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55f32deda690 <col:12> 'int' Int: 1024
|       `-IntegerLiteral 0x55f32deda670 <col:12> 'int' 1024
|-CXXMethodDecl 0x55f32dedba08 <line:577:5, col:82> col:24 add_conversion 'ErrorHandler::Conversion *(const String &, ErrorHandler::ConversionFunction)' static
| |-ParmVarDecl 0x55f32deda800 <col:39, col:53> col:53 name 'const String &'
| `-ParmVarDecl 0x55f32deda8a0 <col:59, col:78> col:78 func 'ErrorHandler::ConversionFunction':'String (*)(int, __va_list_tag *)'
|-CXXMethodDecl 0x55f32dedbb90 <line:578:5, col:56> col:16 remove_conversion 'int (ErrorHandler::Conversion *)' static
| `-ParmVarDecl 0x55f32dedbac8 <col:34, col:46> col:46 conversion 'ErrorHandler::Conversion *'
|-AccessSpecDecl 0x55f32dedbc38 <line:580:3, col:10> col:3 private
|-FieldDecl 0x55f32dedbc78 <line:582:5, col:9> col:9 referenced _nerrors 'int'
|-VarDecl 0x55f32dedbcd8 <line:584:5, col:26> col:26 used the_default_handler 'ErrorHandler *' static
|-VarDecl 0x55f32dedbd50 <line:585:5, col:26> col:26 used the_silent_handler 'ErrorHandler *' static
|-CXXMethodDecl 0x55f32dedc150 <line:587:5, line:590:14> line:587:24 used skip_anno 'const char *(const String &, const char *, const char *, String *, String *, bool)' static
| |-ParmVarDecl 0x55f32dedbdc8 <col:34, col:48> col:48 str 'const String &'
| |-ParmVarDecl 0x55f32dedbe48 <line:588:6, col:18> col:18 begin 'const char *'
| |-ParmVarDecl 0x55f32dedbec8 <col:25, col:37> col:37 end 'const char *'
| |-ParmVarDecl 0x55f32dedbf40 <line:589:6, col:14> col:14 name_result 'String *'
| |-ParmVarDecl 0x55f32dedbfb8 <col:27, col:35> col:35 value_result 'String *'
| `-ParmVarDecl 0x55f32dedc030 <line:590:6, col:11> col:11 raw 'bool'
|-CXXMethodDecl 0x55f32dedc278 <line:90:7> col:7 implicit operator= 'ErrorHandler &(const ErrorHandler &)' inline default noexcept-unevaluated 0x55f32dedc278
| `-ParmVarDecl 0x55f32dedc388 <col:7> col:7 'const ErrorHandler &'
`-CXXConstructorDecl 0x55f32dede488 <col:7> col:7 implicit constexpr ErrorHandler 'void (const ErrorHandler &)' inline default noexcept-unevaluated 0x55f32dede488
  `-ParmVarDecl 0x55f32dede598 <col:7> col:7 'const ErrorHandler &'

Layout: <CGRecordLayout
  LLVMType:%class.ErrorHandler = type <{ i32 (...)**, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.ErrorHandler.base = type <{ i32 (...)**, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f32dce66d0 <../dummy_inc/click/handler.hh:290:5, line:293:5> line:290:5 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x55f32dce6820 <line:291:2, col:18> col:18 h 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
|-FieldDecl 0x55f32dce68a0 <line:292:2, col:22> col:22 referenced r 'ReadHandlerCallback':'String (*)(Element *, void *)'
|-CXXConstructorDecl 0x55f32dce7698 <line:290:5> col:5 implicit constexpr  'void (const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &)' inline default trivial noexcept-unevaluated 0x55f32dce7698
| `-ParmVarDecl 0x55f32dce77a8 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &'
|-CXXConstructorDecl 0x55f32dce7848 <col:5> col:5 implicit constexpr  'void (Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&)' inline default trivial noexcept-unevaluated 0x55f32dce7848
| `-ParmVarDecl 0x55f32dce7958 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&'
|-CXXDestructorDecl 0x55f32dce79c8 <col:5> col:5 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x55f32dce79c8
|-CXXMethodDecl 0x55f32dce8298 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &(const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &)' inline default trivial noexcept-unevaluated 0x55f32dce8298
| `-ParmVarDecl 0x55f32dce83a8 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &'
|-CXXMethodDecl 0x55f32dce8418 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &(Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&)' inline default trivial noexcept-unevaluated 0x55f32dce8418
| `-ParmVarDecl 0x55f32dce8528 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&'
`-CXXConstructorDecl 0x55f32ded4650 <col:5> col:5 implicit used  'void () noexcept' inline default trivial
  `-CompoundStmt 0x55f32ded4730 <col:5>

Layout: <CGRecordLayout
  LLVMType:%union.anon = type { i32 (i32, %class.String*, %class.Element*, %class.Handler*, %class.ErrorHandler*)* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f32dce69d0 <../dummy_inc/click/handler.hh:294:5, line:297:5> line:294:5 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x55f32dce6af8 <line:295:2, col:18> col:18 h 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
|-FieldDecl 0x55f32dce6b80 <line:296:2, col:23> col:23 referenced w 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
|-CXXConstructorDecl 0x55f32dce7af8 <line:294:5> col:5 implicit constexpr  'void (const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &)' inline default trivial noexcept-unevaluated 0x55f32dce7af8
| `-ParmVarDecl 0x55f32dce7c08 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &'
|-CXXConstructorDecl 0x55f32dce7ca8 <col:5> col:5 implicit constexpr  'void (Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&)' inline default trivial noexcept-unevaluated 0x55f32dce7ca8
| `-ParmVarDecl 0x55f32dce7db8 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&'
|-CXXDestructorDecl 0x55f32dce7e28 <col:5> col:5 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x55f32dce7e28
|-CXXMethodDecl 0x55f32dce85c8 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &(const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &)' inline default trivial noexcept-unevaluated 0x55f32dce85c8
| `-ParmVarDecl 0x55f32dce86d8 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &'
|-CXXMethodDecl 0x55f32dce8748 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &(Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&)' inline default trivial noexcept-unevaluated 0x55f32dce8748
| `-ParmVarDecl 0x55f32dce8858 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&'
`-CXXConstructorDecl 0x55f32ded4790 <col:5> col:5 implicit used  'void () noexcept' inline default trivial
  `-CompoundStmt 0x55f32ded4870 <col:5>

Layout: <CGRecordLayout
  LLVMType:%union.anon.11 = type { i32 (i32, %class.String*, %class.Element*, %class.Handler*, %class.ErrorHandler*)* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f32dce2058 prev 0x55f32dce14f0 <../dummy_inc/click/handler.hh:19:1, line:313:1> line:19:7 class Handler definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x55f32dce2150 <col:1, col:7> col:7 implicit referenced class Handler
|-AccessSpecDecl 0x55f32dce21e0 <col:17, col:23> col:17 public
|-EnumDecl 0x55f32dce2208 <line:21:5, line:59:5> line:21:10 Flags
| |-EnumConstantDecl 0x55f32dce2310 <line:22:2, col:11> col:2 referenced f_read 'Handler::Flags'
| | `-ImplicitCastExpr 0x55f32dce3060 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f32dce22f0 <col:11> 'int' Int: 1
| |     `-IntegerLiteral 0x55f32dce22d0 <col:11> 'int' 1
| |-EnumConstantDecl 0x55f32dce23a0 <line:23:2, col:12> col:2 referenced f_write 'Handler::Flags'
| | `-ImplicitCastExpr 0x55f32dce3078 <col:12> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f32dce2380 <col:12> 'int' Int: 2
| |     `-IntegerLiteral 0x55f32dce2360 <col:12> 'int' 2
| |-EnumConstantDecl 0x55f32dce2430 <line:24:2, col:17> col:2 referenced f_read_param 'Handler::Flags'
| | `-ImplicitCastExpr 0x55f32dce3090 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f32dce2410 <col:17> 'int' Int: 4
| |     `-IntegerLiteral 0x55f32dce23f0 <col:17> 'int' 4
| |-EnumConstantDecl 0x55f32dce24c0 <line:25:2, col:16> col:2 referenced f_exclusive 'Handler::Flags'
| | `-ImplicitCastExpr 0x55f32dce30a8 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f32dce24a0 <col:16> 'int' Int: 0
| |     `-IntegerLiteral 0x55f32dce2480 <col:16> 'int' 0
| |-EnumConstantDecl 0x55f32dce2550 <line:28:2, col:19> col:2 referenced f_nonexclusive 'Handler::Flags'
| | `-ImplicitCastExpr 0x55f32dce30c0 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f32dce2530 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x55f32dce2510 <col:19> 'int' 32
| |-EnumConstantDecl 0x55f32dce25e0 <line:31:2, col:10> col:2 referenced f_raw 'Handler::Flags'
| | `-ImplicitCastExpr 0x55f32dce30d8 <col:10> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f32dce25c0 <col:10> 'int' Int: 64
| |     `-IntegerLiteral 0x55f32dce25a0 <col:10> 'int' 64
| |-EnumConstantDecl 0x55f32dce2670 <line:32:2, col:19> col:2 referenced f_read_private 'Handler::Flags'
| | `-ImplicitCastExpr 0x55f32dce30f0 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f32dce2650 <col:19> 'int' Int: 128
| |     `-IntegerLiteral 0x55f32dce2630 <col:19> 'int' 128
| |-EnumConstantDecl 0x55f32dce2700 <line:34:2, col:20> col:2 referenced f_write_private 'Handler::Flags'
| | `-ImplicitCastExpr 0x55f32dce3108 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f32dce26e0 <col:20> 'int' Int: 256
| |     `-IntegerLiteral 0x55f32dce26c0 <col:20> 'int' 256
| |-EnumConstantDecl 0x55f32dce2790 <line:36:2, col:17> col:2 referenced f_deprecated 'Handler::Flags'
| | `-ImplicitCastExpr 0x55f32dce3120 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f32dce2770 <col:17> 'int' Int: 512
| |     `-IntegerLiteral 0x55f32dce2750 <col:17> 'int' 512
| |-EnumConstantDecl 0x55f32dce2820 <line:38:2, col:15> col:2 referenced f_uncommon 'Handler::Flags'
| | `-ImplicitCastExpr 0x55f32dce3138 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f32dce2800 <col:15> 'int' Int: 1024
| |     `-IntegerLiteral 0x55f32dce27e0 <col:15> 'int' 1024
| |-EnumConstantDecl 0x55f32dce28b0 <line:40:2, col:11> col:2 referenced f_calm 'Handler::Flags'
| | `-ImplicitCastExpr 0x55f32dce3150 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f32dce2890 <col:11> 'int' Int: 2048
| |     `-IntegerLiteral 0x55f32dce2870 <col:11> 'int' 2048
| |-EnumConstantDecl 0x55f32dce2940 <line:41:2, col:16> col:2 referenced f_expensive 'Handler::Flags'
| | `-ImplicitCastExpr 0x55f32dce3168 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f32dce2920 <col:16> 'int' Int: 4096
| |     `-IntegerLiteral 0x55f32dce2900 <col:16> 'int' 4096
| |-EnumConstantDecl 0x55f32dce29d0 <line:42:2, col:13> col:2 referenced f_button 'Handler::Flags'
| | `-ImplicitCastExpr 0x55f32dce3180 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f32dce29b0 <col:13> 'int' Int: 8192
| |     `-IntegerLiteral 0x55f32dce2990 <col:13> 'int' 8192
| |-EnumConstantDecl 0x55f32dce2a60 <line:43:2, col:15> col:2 referenced f_checkbox 'Handler::Flags'
| | `-ImplicitCastExpr 0x55f32dce3198 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f32dce2a40 <col:15> 'int' Int: 16384
| |     `-IntegerLiteral 0x55f32dce2a20 <col:15> 'int' 16384
| |-EnumConstantDecl 0x55f32dce2b30 <line:45:2, col:20> col:2 referenced f_driver0 'Handler::Flags'
| | `-ConstantExpr 0x55f32dce2b10 <col:14, col:20> 'unsigned int' Int: 67108864
| |   `-BinaryOperator 0x55f32dce2af0 <col:14, col:20> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x55f32dce2ab0 <col:14> 'unsigned int' 1
| |     `-IntegerLiteral 0x55f32dce2ad0 <col:20> 'int' 26
| |-EnumConstantDecl 0x55f32dce2c00 <line:46:9, col:27> col:9 referenced f_driver1 'Handler::Flags'
| | `-ConstantExpr 0x55f32dce2be0 <col:21, col:27> 'unsigned int' Int: 134217728
| |   `-BinaryOperator 0x55f32dce2bc0 <col:21, col:27> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x55f32dce2b80 <col:21> 'unsigned int' 1
| |     `-IntegerLiteral 0x55f32dce2ba0 <col:27> 'int' 27
| |-EnumConstantDecl 0x55f32dce2c90 <line:48:2, col:17> col:2 referenced f_user_shift 'Handler::Flags'
| | `-ImplicitCastExpr 0x55f32dce31b0 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f32dce2c70 <col:17> 'int' Int: 28
| |     `-IntegerLiteral 0x55f32dce2c50 <col:17> 'int' 28
| |-EnumConstantDecl 0x55f32dce2d60 <line:49:2, col:18> col:2 referenced f_user0 'Handler::Flags'
| | `-ConstantExpr 0x55f32dce2d40 <col:12, col:18> 'unsigned int' Int: 268435456
| |   `-BinaryOperator 0x55f32dce2d20 <col:12, col:18> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x55f32dce2ce0 <col:12> 'unsigned int' 1
| |     `-DeclRefExpr 0x55f32dce2d00 <col:18> 'int' EnumConstant 0x55f32dce2c90 'f_user_shift' 'Handler::Flags'
| |-EnumConstantDecl 0x55f32dce2df0 <line:54:2, col:25> col:2 referenced f_read_comprehensive 'Handler::Flags'
| | `-ImplicitCastExpr 0x55f32dce31c8 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f32dce2dd0 <col:25> 'int' Int: 8
| |     `-IntegerLiteral 0x55f32dce2db0 <col:25> 'int' 8
| |-EnumConstantDecl 0x55f32dce2e80 <line:55:2, col:26> col:2 referenced f_write_comprehensive 'Handler::Flags'
| | `-ImplicitCastExpr 0x55f32dce31e0 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f32dce2e60 <col:26> 'int' Int: 16
| |     `-IntegerLiteral 0x55f32dce2e40 <col:26> 'int' 16
| `-EnumConstantDecl 0x55f32dce3010 <line:56:2, col:71> col:2 referenced f_special 'Handler::Flags'
|   `-ImplicitCastExpr 0x55f32dce31f8 <col:14, col:71> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55f32dce2ff0 <col:14, col:71> 'int' Int: 31
|       `-BinaryOperator 0x55f32dce2fd0 <col:14, col:71> 'int' '|'
|         |-BinaryOperator 0x55f32dce2f90 <col:14, col:48> 'int' '|'
|         | |-BinaryOperator 0x55f32dce2f50 <col:14, col:33> 'int' '|'
|         | | |-BinaryOperator 0x55f32dce2f10 <col:14, col:23> 'int' '|'
|         | | | |-DeclRefExpr 0x55f32dce2ed0 <col:14> 'int' EnumConstant 0x55f32dce2310 'f_read' 'Handler::Flags'
|         | | | `-DeclRefExpr 0x55f32dce2ef0 <col:23> 'int' EnumConstant 0x55f32dce23a0 'f_write' 'Handler::Flags'
|         | | `-DeclRefExpr 0x55f32dce2f30 <col:33> 'int' EnumConstant 0x55f32dce2430 'f_read_param' 'Handler::Flags'
|         | `-DeclRefExpr 0x55f32dce2f70 <col:48> 'int' EnumConstant 0x55f32dce2df0 'f_read_comprehensive' 'Handler::Flags'
|         `-DeclRefExpr 0x55f32dce2fb0 <col:71> 'int' EnumConstant 0x55f32dce2e80 'f_write_comprehensive' 'Handler::Flags'
|-CXXMethodDecl 0x55f32dce3258 <line:62:5, line:64:5> line:62:26 name 'const String &() const' inline
| `-CompoundStmt 0x55f32dce8c78 <col:39, line:64:5>
|   `-ReturnStmt 0x55f32dce8c68 <line:63:2, col:9>
|     `-MemberExpr 0x55f32dce8c38 <col:9> 'const String' lvalue ->_name 0x55f32dce6680
|       `-CXXThisExpr 0x55f32dce8c28 <col:9> 'const Handler *' implicit this
|-CXXMethodDecl 0x55f32dce3318 <line:69:5, line:71:5> line:69:21 flags 'uint32_t () const' inline
| `-CompoundStmt 0x55f32dce8cf8 <col:35, line:71:5>
|   `-ReturnStmt 0x55f32dce8ce8 <line:70:2, col:9>
|     `-ImplicitCastExpr 0x55f32dce8cd0 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x55f32dce8ca0 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55f32dce6d90
|         `-CXXThisExpr 0x55f32dce8c90 <col:9> 'const Handler *' implicit this
|-CXXMethodDecl 0x55f32dce3468 <line:75:5, line:77:5> line:75:18 user_data 'void *(int) const' inline
| |-ParmVarDecl 0x55f32dce33d0 <col:28, col:32> col:32 used op 'int'
| `-CompoundStmt 0x55f32dce8e78 <col:42, line:77:5>
|   `-ReturnStmt 0x55f32dce8e68 <line:76:2, col:44>
|     `-ImplicitCastExpr 0x55f32dce8e50 <col:9, col:44> 'void *' <LValueToRValue>
|       `-ConditionalOperator 0x55f32dce8e20 <col:9, col:44> 'void *const' lvalue
|         |-BinaryOperator 0x55f32dce8d80 <col:9, col:15> 'bool' '=='
|         | |-ImplicitCastExpr 0x55f32dce8d50 <col:9> 'int' <LValueToRValue>
|         | | `-DeclRefExpr 0x55f32dce8d10 <col:9> 'int' lvalue ParmVar 0x55f32dce33d0 'op' 'int'
|         | `-ImplicitCastExpr 0x55f32dce8d68 <col:15> 'int' <IntegralCast>
|         |   `-DeclRefExpr 0x55f32dce8d30 <col:15> 'Handler::Flags' EnumConstant 0x55f32dce23a0 'f_write' 'Handler::Flags'
|         |-MemberExpr 0x55f32dce8db0 <col:25> 'void *const' lvalue ->_write_user_data 0x55f32dce6d30
|         | `-CXXThisExpr 0x55f32dce8da0 <col:25> 'const Handler *' implicit this
|         `-MemberExpr 0x55f32dce8df0 <col:44> 'void *const' lvalue ->_read_user_data 0x55f32dce6cc8
|           `-CXXThisExpr 0x55f32dce8de0 <col:44> 'const Handler *' implicit this
|-CXXMethodDecl 0x55f32dce3538 <line:80:5, line:82:5> line:80:18 read_user_data 'void *() const' inline
| `-CompoundStmt 0x55f32dce8ef8 <col:41, line:82:5>
|   `-ReturnStmt 0x55f32dce8ee8 <line:81:2, col:9>
|     `-ImplicitCastExpr 0x55f32dce8ed0 <col:9> 'void *' <LValueToRValue>
|       `-MemberExpr 0x55f32dce8ea0 <col:9> 'void *const' lvalue ->_read_user_data 0x55f32dce6cc8
|         `-CXXThisExpr 0x55f32dce8e90 <col:9> 'const Handler *' implicit this
|-CXXMethodDecl 0x55f32dce3600 <line:85:5, line:87:5> line:85:18 write_user_data 'void *() const' inline
| `-CompoundStmt 0x55f32dce8f78 <col:42, line:87:5>
|   `-ReturnStmt 0x55f32dce8f68 <line:86:2, col:9>
|     `-ImplicitCastExpr 0x55f32dce8f50 <col:9> 'void *' <LValueToRValue>
|       `-MemberExpr 0x55f32dce8f20 <col:9> 'void *const' lvalue ->_write_user_data 0x55f32dce6d30
|         `-CXXThisExpr 0x55f32dce8f10 <col:9> 'const Handler *' implicit this
|-CXXMethodDecl 0x55f32dce36c8 <line:90:5, col:63> col:18 user_data1 'void *() const' inline
| `-DeprecatedAttr 0x55f32dce3768 <col:52> "" ""
|-CXXMethodDecl 0x55f32dce3800 <line:91:5, col:63> col:18 user_data2 'void *() const' inline
| `-DeprecatedAttr 0x55f32dce38a0 <col:52> "" ""
|-CXXMethodDecl 0x55f32dce3930 <line:96:5, line:98:5> line:96:17 readable 'bool () const' inline
| `-CompoundStmt 0x55f32dce9068 <col:34, line:98:5>
|   `-ReturnStmt 0x55f32dce9058 <line:97:2, col:18>
|     `-ImplicitCastExpr 0x55f32dce9040 <col:9, col:18> 'bool' <IntegralToBoolean>
|       `-BinaryOperator 0x55f32dce9020 <col:9, col:18> 'unsigned int' '&'
|         |-ImplicitCastExpr 0x55f32dce8ff0 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-MemberExpr 0x55f32dce8fa0 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55f32dce6d90
|         |   `-CXXThisExpr 0x55f32dce8f90 <col:9> 'const Handler *' implicit this
|         `-ImplicitCastExpr 0x55f32dce9008 <col:18> 'unsigned int' <IntegralCast>
|           `-DeclRefExpr 0x55f32dce8fd0 <col:18> 'Handler::Flags' EnumConstant 0x55f32dce2310 'f_read' 'Handler::Flags'
|-CXXMethodDecl 0x55f32dce39f0 <line:102:5, line:104:5> line:102:17 read_param 'bool () const' inline
| `-CompoundStmt 0x55f32dce9158 <col:36, line:104:5>
|   `-ReturnStmt 0x55f32dce9148 <line:103:2, col:18>
|     `-ImplicitCastExpr 0x55f32dce9130 <col:9, col:18> 'bool' <IntegralToBoolean>
|       `-BinaryOperator 0x55f32dce9110 <col:9, col:18> 'unsigned int' '&'
|         |-ImplicitCastExpr 0x55f32dce90e0 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-MemberExpr 0x55f32dce9090 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55f32dce6d90
|         |   `-CXXThisExpr 0x55f32dce9080 <col:9> 'const Handler *' implicit this
|         `-ImplicitCastExpr 0x55f32dce90f8 <col:18> 'unsigned int' <IntegralCast>
|           `-DeclRefExpr 0x55f32dce90c0 <col:18> 'Handler::Flags' EnumConstant 0x55f32dce2430 'f_read_param' 'Handler::Flags'
|-CXXMethodDecl 0x55f32dce3ab0 <line:111:5, line:113:5> line:111:17 used read_visible 'bool () const' inline
| `-CompoundStmt 0x55f32dce9338 <col:38, line:113:5>
|   `-ReturnStmt 0x55f32dce9328 <line:112:2, col:49>
|     `-BinaryOperator 0x55f32dce9308 <col:9, col:49> 'bool' '=='
|       |-ParenExpr 0x55f32dce92b0 <col:9, col:44> 'unsigned int'
|       | `-BinaryOperator 0x55f32dce9290 <col:10, col:43> 'unsigned int' '&'
|       |   |-ImplicitCastExpr 0x55f32dce9260 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-MemberExpr 0x55f32dce9180 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55f32dce6d90
|       |   |   `-CXXThisExpr 0x55f32dce9170 <col:10> 'const Handler *' implicit this
|       |   `-ImplicitCastExpr 0x55f32dce9278 <col:19, col:43> 'unsigned int' <IntegralCast>
|       |     `-ParenExpr 0x55f32dce9240 <col:19, col:43> 'int'
|       |       `-BinaryOperator 0x55f32dce9220 <col:20, col:29> 'int' '|'
|       |         |-ImplicitCastExpr 0x55f32dce91f0 <col:20> 'int' <IntegralCast>
|       |         | `-DeclRefExpr 0x55f32dce91b0 <col:20> 'Handler::Flags' EnumConstant 0x55f32dce2310 'f_read' 'Handler::Flags'
|       |         `-ImplicitCastExpr 0x55f32dce9208 <col:29> 'int' <IntegralCast>
|       |           `-DeclRefExpr 0x55f32dce91d0 <col:29> 'Handler::Flags' EnumConstant 0x55f32dce2670 'f_read_private' 'Handler::Flags'
|       `-ImplicitCastExpr 0x55f32dce92f0 <col:49> 'unsigned int' <IntegralCast>
|         `-DeclRefExpr 0x55f32dce92d0 <col:49> 'Handler::Flags' EnumConstant 0x55f32dce2310 'f_read' 'Handler::Flags'
|-CXXMethodDecl 0x55f32dce3b70 <line:116:5, line:118:5> line:116:17 writable 'bool () const' inline
| `-CompoundStmt 0x55f32dce9428 <col:34, line:118:5>
|   `-ReturnStmt 0x55f32dce9418 <line:117:2, col:18>
|     `-ImplicitCastExpr 0x55f32dce9400 <col:9, col:18> 'bool' <IntegralToBoolean>
|       `-BinaryOperator 0x55f32dce93e0 <col:9, col:18> 'unsigned int' '&'
|         |-ImplicitCastExpr 0x55f32dce93b0 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-MemberExpr 0x55f32dce9360 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55f32dce6d90
|         |   `-CXXThisExpr 0x55f32dce9350 <col:9> 'const Handler *' implicit this
|         `-ImplicitCastExpr 0x55f32dce93c8 <col:18> 'unsigned int' <IntegralCast>
|           `-DeclRefExpr 0x55f32dce9390 <col:18> 'Handler::Flags' EnumConstant 0x55f32dce23a0 'f_write' 'Handler::Flags'
|-CXXMethodDecl 0x55f32dce3c30 <line:125:5, line:127:5> line:125:17 used write_visible 'bool () const' inline
| `-CompoundStmt 0x55f32dce9608 <col:39, line:127:5>
|   `-ReturnStmt 0x55f32dce95f8 <line:126:2, col:51>
|     `-BinaryOperator 0x55f32dce95d8 <col:9, col:51> 'bool' '=='
|       |-ParenExpr 0x55f32dce9580 <col:9, col:46> 'unsigned int'
|       | `-BinaryOperator 0x55f32dce9560 <col:10, col:45> 'unsigned int' '&'
|       |   |-ImplicitCastExpr 0x55f32dce9530 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-MemberExpr 0x55f32dce9450 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55f32dce6d90
|       |   |   `-CXXThisExpr 0x55f32dce9440 <col:10> 'const Handler *' implicit this
|       |   `-ImplicitCastExpr 0x55f32dce9548 <col:19, col:45> 'unsigned int' <IntegralCast>
|       |     `-ParenExpr 0x55f32dce9510 <col:19, col:45> 'int'
|       |       `-BinaryOperator 0x55f32dce94f0 <col:20, col:30> 'int' '|'
|       |         |-ImplicitCastExpr 0x55f32dce94c0 <col:20> 'int' <IntegralCast>
|       |         | `-DeclRefExpr 0x55f32dce9480 <col:20> 'Handler::Flags' EnumConstant 0x55f32dce23a0 'f_write' 'Handler::Flags'
|       |         `-ImplicitCastExpr 0x55f32dce94d8 <col:30> 'int' <IntegralCast>
|       |           `-DeclRefExpr 0x55f32dce94a0 <col:30> 'Handler::Flags' EnumConstant 0x55f32dce2700 'f_write_private' 'Handler::Flags'
|       `-ImplicitCastExpr 0x55f32dce95c0 <col:51> 'unsigned int' <IntegralCast>
|         `-DeclRefExpr 0x55f32dce95a0 <col:51> 'Handler::Flags' EnumConstant 0x55f32dce23a0 'f_write' 'Handler::Flags'
|-CXXMethodDecl 0x55f32dce3cf0 <line:130:5, line:132:5> line:130:17 visible 'bool () const' inline
| `-CompoundStmt 0x55f32dce9710 <col:33, line:132:5>
|   `-ReturnStmt 0x55f32dce9700 <line:131:2, col:41>
|     `-BinaryOperator 0x55f32dce96e0 <col:9, col:41> 'bool' '||'
|       |-CXXMemberCallExpr 0x55f32dce9660 <col:9, col:22> 'bool'
|       | `-MemberExpr 0x55f32dce9630 <col:9> '<bound member function type>' ->read_visible 0x55f32dce3ab0
|       |   `-CXXThisExpr 0x55f32dce9620 <col:9> 'const Handler *' implicit this
|       `-CXXMemberCallExpr 0x55f32dce96c0 <col:27, col:41> 'bool'
|         `-MemberExpr 0x55f32dce9690 <col:27> '<bound member function type>' ->write_visible 0x55f32dce3c30
|           `-CXXThisExpr 0x55f32dce9680 <col:27> 'const Handler *' implicit this
|-CXXMethodDecl 0x55f32dce3db0 <line:136:5, line:138:5> line:136:17 allow_concurrent_handlers 'bool () const' inline
| `-CompoundStmt 0x55f32dce9848 <col:51, line:138:5>
|   `-ReturnStmt 0x55f32dce9838 <line:137:9, col:40>
|     `-ImplicitCastExpr 0x55f32dce9820 <col:16, col:40> 'bool' <IntegralToBoolean>
|       `-ParenExpr 0x55f32dce9800 <col:16, col:40> 'unsigned int'
|         `-BinaryOperator 0x55f32dce97b8 <col:17, col:26> 'unsigned int' '&'
|           |-ImplicitCastExpr 0x55f32dce9788 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|           | `-MemberExpr 0x55f32dce9738 <col:17> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55f32dce6d90
|           |   `-CXXThisExpr 0x55f32dce9728 <col:17> 'const Handler *' implicit this
|           `-ImplicitCastExpr 0x55f32dce97a0 <col:26> 'unsigned int' <IntegralCast>
|             `-DeclRefExpr 0x55f32dce9768 <col:26> 'Handler::Flags' EnumConstant 0x55f32dce2550 'f_nonexclusive' 'Handler::Flags'
|-CXXMethodDecl 0x55f32dce3e70 <line:142:5, line:144:5> line:142:17 allow_concurrent_threads 'bool () const' inline
| `-CompoundStmt 0x55f32dce9958 <col:50, line:144:5>
|   `-ReturnStmt 0x55f32dce9948 <line:143:9, col:40>
|     `-ImplicitCastExpr 0x55f32dce9930 <col:16, col:40> 'bool' <IntegralToBoolean>
|       `-ParenExpr 0x55f32dce9910 <col:16, col:40> 'unsigned int'
|         `-BinaryOperator 0x55f32dce98f0 <col:17, col:26> 'unsigned int' '&'
|           |-ImplicitCastExpr 0x55f32dce98c0 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|           | `-MemberExpr 0x55f32dce9870 <col:17> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55f32dce6d90
|           |   `-CXXThisExpr 0x55f32dce9860 <col:17> 'const Handler *' implicit this
|           `-ImplicitCastExpr 0x55f32dce98d8 <col:26> 'unsigned int' <IntegralCast>
|             `-DeclRefExpr 0x55f32dce98a0 <col:26> 'Handler::Flags' EnumConstant 0x55f32dce2550 'f_nonexclusive' 'Handler::Flags'
|-CXXMethodDecl 0x55f32dce3f30 <line:164:5, line:166:5> line:164:17 raw 'bool () const' inline
| `-CompoundStmt 0x55f32dce9a48 <col:29, line:166:5>
|   `-ReturnStmt 0x55f32dce9a38 <line:165:2, col:18>
|     `-ImplicitCastExpr 0x55f32dce9a20 <col:9, col:18> 'bool' <IntegralToBoolean>
|       `-BinaryOperator 0x55f32dce9a00 <col:9, col:18> 'unsigned int' '&'
|         |-ImplicitCastExpr 0x55f32dce99d0 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-MemberExpr 0x55f32dce9980 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55f32dce6d90
|         |   `-CXXThisExpr 0x55f32dce9970 <col:9> 'const Handler *' implicit this
|         `-ImplicitCastExpr 0x55f32dce99e8 <col:18> 'unsigned int' <IntegralCast>
|           `-DeclRefExpr 0x55f32dce99b0 <col:18> 'Handler::Flags' EnumConstant 0x55f32dce25e0 'f_raw' 'Handler::Flags'
|-CXXMethodDecl 0x55f32dce41b8 <line:177:5, col:75> col:12 used call_read 'String (Element *, const String &, ErrorHandler *) const'
| |-ParmVarDecl 0x55f32dce3fe0 <col:22, col:31> col:31 e 'Element *'
| |-ParmVarDecl 0x55f32dce4058 <col:34, col:48> col:48 param 'const String &'
| `-ParmVarDecl 0x55f32dce40d0 <col:55, col:69> col:69 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55f32dce43c8 <line:186:5, line:188:5> line:186:19 call_read 'String (Element *, ErrorHandler *) const' inline
| |-ParmVarDecl 0x55f32dce4280 <col:29, col:38> col:38 used e 'Element *'
| |-ParmVarDecl 0x55f32dce42f8 <col:41, col:62> col:55 used errh 'ErrorHandler *' cinit
| | `-ImplicitCastExpr 0x55f32dce8b60 <col:62> 'ErrorHandler *' <NullToPointer>
| |   `-IntegerLiteral 0x55f32dce8b40 <col:62> 'int' 0
| `-CompoundStmt 0x55f32dce9ce8 <col:71, line:188:5>
|   `-ReturnStmt 0x55f32dce9cd8 <line:187:2, col:36>
|     `-ExprWithCleanups 0x55f32dce9cc0 <col:9, col:36> 'String'
|       `-CXXConstructExpr 0x55f32dce9c90 <col:9, col:36> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x55f32dce9c78 <col:9, col:36> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x55f32dce9c58 <col:9, col:36> 'String' (CXXTemporary 0x55f32dce9c58)
|             `-CXXMemberCallExpr 0x55f32dce9bb8 <col:9, col:36> 'String'
|               |-MemberExpr 0x55f32dce9b88 <col:9> '<bound member function type>' ->call_read 0x55f32dce41b8
|               | `-CXXThisExpr 0x55f32dce9b78 <col:9> 'const Handler *' implicit this
|               |-ImplicitCastExpr 0x55f32dce9bf0 <col:19> 'Element *' <LValueToRValue>
|               | `-DeclRefExpr 0x55f32dce9ad0 <col:19> 'Element *' lvalue ParmVar 0x55f32dce4280 'e' 'Element *'
|               |-MaterializeTemporaryExpr 0x55f32dce9c20 <col:22, col:29> 'const String' lvalue
|               | `-ImplicitCastExpr 0x55f32dce9c08 <col:22, col:29> 'const String' <NoOp>
|               |   `-CXXBindTemporaryExpr 0x55f32dce9b38 <col:22, col:29> 'String' (CXXTemporary 0x55f32dce9b38)
|               |     `-CXXTemporaryObjectExpr 0x55f32dce9b00 <col:22, col:29> 'String' 'void ()'
|               `-ImplicitCastExpr 0x55f32dce9c38 <col:32> 'ErrorHandler *' <LValueToRValue>
|                 `-DeclRefExpr 0x55f32dce9b58 <col:32> 'ErrorHandler *' lvalue ParmVar 0x55f32dce42f8 'errh' 'ErrorHandler *'
|-CXXMethodDecl 0x55f32dce4660 <line:198:5, col:73> col:9 call_write 'int (const String &, Element *, ErrorHandler *) const'
| |-ParmVarDecl 0x55f32dce4488 <col:20, col:34> col:34 value 'const String &'
| |-ParmVarDecl 0x55f32dce4500 <col:41, col:50> col:50 e 'Element *'
| `-ParmVarDecl 0x55f32dce4578 <col:53, col:67> col:67 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55f32dce47e8 <line:207:5, col:37> col:12 unparse_name 'String (Element *) const'
| `-ParmVarDecl 0x55f32dce4728 <col:25, col:34> col:34 e 'Element *'
|-CXXMethodDecl 0x55f32dce4a18 <line:216:5, col:63> col:19 unparse_name 'String (Element *, const String &)' static
| |-ParmVarDecl 0x55f32dce48a0 <col:32, col:41> col:41 e 'Element *'
| `-ParmVarDecl 0x55f32dce4918 <col:44, col:58> col:58 hname 'const String &'
|-CXXMethodDecl 0x55f32dce4b18 <line:223:5, line:225:5> line:223:34 blank_handler 'const Handler *()' static inline
| `-CompoundStmt 0x55f32dce9d48 <col:50, line:225:5>
|   `-ReturnStmt 0x55f32dce9d38 <line:224:2, col:9>
|     `-ImplicitCastExpr 0x55f32dce9d20 <col:9> 'const Handler *' <LValueToRValue>
|       `-DeclRefExpr 0x55f32dce9d00 <col:9> 'const Handler *' lvalue Var 0x55f32dce6ec0 'the_blank_handler' 'const Handler *'
|-EnumDecl 0x55f32dce4bb8 <line:229:5, line:251:5> line:229:5
| |-EnumConstantDecl 0x55f32dce4cc0 <line:230:2, col:11> col:2 h_read 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55f32dce5860 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f32dce4ca0 <col:11> 'Handler::Flags' Int: 1
| |     `-DeclRefExpr 0x55f32dce4c80 <col:11> 'Handler::Flags' EnumConstant 0x55f32dce2310 'f_read' 'Handler::Flags'
| |-EnumConstantDecl 0x55f32dce4d50 <line:231:2, col:12> col:2 h_write 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55f32dce5878 <col:12> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f32dce4d30 <col:12> 'Handler::Flags' Int: 2
| |     `-DeclRefExpr 0x55f32dce4d10 <col:12> 'Handler::Flags' EnumConstant 0x55f32dce23a0 'f_write' 'Handler::Flags'
| |-EnumConstantDecl 0x55f32dce4de0 <line:232:2, col:17> col:2 h_read_param 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55f32dce5890 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f32dce4dc0 <col:17> 'Handler::Flags' Int: 4
| |     `-DeclRefExpr 0x55f32dce4da0 <col:17> 'Handler::Flags' EnumConstant 0x55f32dce2430 'f_read_param' 'Handler::Flags'
| |-EnumConstantDecl 0x55f32dce4e70 <line:233:2, col:16> col:2 h_exclusive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55f32dce58a8 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f32dce4e50 <col:16> 'Handler::Flags' Int: 0
| |     `-DeclRefExpr 0x55f32dce4e30 <col:16> 'Handler::Flags' EnumConstant 0x55f32dce24c0 'f_exclusive' 'Handler::Flags'
| |-EnumConstantDecl 0x55f32dce4f00 <line:234:2, col:19> col:2 h_nonexclusive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55f32dce58c0 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f32dce4ee0 <col:19> 'Handler::Flags' Int: 32
| |     `-DeclRefExpr 0x55f32dce4ec0 <col:19> 'Handler::Flags' EnumConstant 0x55f32dce2550 'f_nonexclusive' 'Handler::Flags'
| |-EnumConstantDecl 0x55f32dce4f90 <line:235:2, col:10> col:2 h_raw 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55f32dce58d8 <col:10> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f32dce4f70 <col:10> 'Handler::Flags' Int: 64
| |     `-DeclRefExpr 0x55f32dce4f50 <col:10> 'Handler::Flags' EnumConstant 0x55f32dce25e0 'f_raw' 'Handler::Flags'
| |-EnumConstantDecl 0x55f32dce5020 <line:236:2, col:19> col:2 h_read_private 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55f32dce58f0 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f32dce5000 <col:19> 'Handler::Flags' Int: 128
| |     `-DeclRefExpr 0x55f32dce4fe0 <col:19> 'Handler::Flags' EnumConstant 0x55f32dce2670 'f_read_private' 'Handler::Flags'
| |-EnumConstantDecl 0x55f32dce50b0 <line:237:2, col:20> col:2 h_write_private 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55f32dce5908 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f32dce5090 <col:20> 'Handler::Flags' Int: 256
| |     `-DeclRefExpr 0x55f32dce5070 <col:20> 'Handler::Flags' EnumConstant 0x55f32dce2700 'f_write_private' 'Handler::Flags'
| |-EnumConstantDecl 0x55f32dce5140 <line:238:2, col:17> col:2 h_deprecated 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55f32dce5920 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f32dce5120 <col:17> 'Handler::Flags' Int: 512
| |     `-DeclRefExpr 0x55f32dce5100 <col:17> 'Handler::Flags' EnumConstant 0x55f32dce2790 'f_deprecated' 'Handler::Flags'
| |-EnumConstantDecl 0x55f32dce51d0 <line:239:2, col:15> col:2 h_uncommon 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55f32dce5938 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f32dce51b0 <col:15> 'Handler::Flags' Int: 1024
| |     `-DeclRefExpr 0x55f32dce5190 <col:15> 'Handler::Flags' EnumConstant 0x55f32dce2820 'f_uncommon' 'Handler::Flags'
| |-EnumConstantDecl 0x55f32dce5260 <line:240:2, col:11> col:2 h_calm 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55f32dce5950 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f32dce5240 <col:11> 'Handler::Flags' Int: 2048
| |     `-DeclRefExpr 0x55f32dce5220 <col:11> 'Handler::Flags' EnumConstant 0x55f32dce28b0 'f_calm' 'Handler::Flags'
| |-EnumConstantDecl 0x55f32dce52f0 <line:241:2, col:16> col:2 h_expensive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55f32dce5968 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f32dce52d0 <col:16> 'Handler::Flags' Int: 4096
| |     `-DeclRefExpr 0x55f32dce52b0 <col:16> 'Handler::Flags' EnumConstant 0x55f32dce2940 'f_expensive' 'Handler::Flags'
| |-EnumConstantDecl 0x55f32dce5380 <line:242:2, col:13> col:2 h_button 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55f32dce5980 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f32dce5360 <col:13> 'Handler::Flags' Int: 8192
| |     `-DeclRefExpr 0x55f32dce5340 <col:13> 'Handler::Flags' EnumConstant 0x55f32dce29d0 'f_button' 'Handler::Flags'
| |-EnumConstantDecl 0x55f32dce5410 <line:243:2, col:15> col:2 h_checkbox 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55f32dce5998 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f32dce53f0 <col:15> 'Handler::Flags' Int: 16384
| |     `-DeclRefExpr 0x55f32dce53d0 <col:15> 'Handler::Flags' EnumConstant 0x55f32dce2a60 'f_checkbox' 'Handler::Flags'
| |-EnumConstantDecl 0x55f32dce54a0 <line:244:2, col:20> col:2 h_driver_flag_0 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55f32dce59b0 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f32dce5480 <col:20> 'Handler::Flags' Int: 67108864
| |     `-DeclRefExpr 0x55f32dce5460 <col:20> 'Handler::Flags' EnumConstant 0x55f32dce2b30 'f_driver0' 'Handler::Flags'
| |-EnumConstantDecl 0x55f32dce5530 <line:245:9, col:27> col:9 h_driver_flag_1 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55f32dce59c8 <col:27> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f32dce5510 <col:27> 'Handler::Flags' Int: 134217728
| |     `-DeclRefExpr 0x55f32dce54f0 <col:27> 'Handler::Flags' EnumConstant 0x55f32dce2c00 'f_driver1' 'Handler::Flags'
| |-EnumConstantDecl 0x55f32dce55c0 <line:246:2, col:22> col:2 h_user_flag_shift 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55f32dce59e0 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f32dce55a0 <col:22> 'Handler::Flags' Int: 28
| |     `-DeclRefExpr 0x55f32dce5580 <col:22> 'Handler::Flags' EnumConstant 0x55f32dce2c90 'f_user_shift' 'Handler::Flags'
| |-EnumConstantDecl 0x55f32dce5650 <line:247:2, col:18> col:2 h_user_flag_0 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55f32dce59f8 <col:18> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f32dce5630 <col:18> 'Handler::Flags' Int: 268435456
| |     `-DeclRefExpr 0x55f32dce5610 <col:18> 'Handler::Flags' EnumConstant 0x55f32dce2d60 'f_user0' 'Handler::Flags'
| |-EnumConstantDecl 0x55f32dce56e0 <line:248:2, col:25> col:2 h_read_comprehensive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55f32dce5a10 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f32dce56c0 <col:25> 'Handler::Flags' Int: 8
| |     `-DeclRefExpr 0x55f32dce56a0 <col:25> 'Handler::Flags' EnumConstant 0x55f32dce2df0 'f_read_comprehensive' 'Handler::Flags'
| |-EnumConstantDecl 0x55f32dce5770 <line:249:2, col:26> col:2 h_write_comprehensive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55f32dce5a28 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f32dce5750 <col:26> 'Handler::Flags' Int: 16
| |     `-DeclRefExpr 0x55f32dce5730 <col:26> 'Handler::Flags' EnumConstant 0x55f32dce2e80 'f_write_comprehensive' 'Handler::Flags'
| `-EnumConstantDecl 0x55f32dce5810 <line:250:2, col:20> col:2 h_special_flags 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
|   `-ImplicitCastExpr 0x55f32dce5a40 <col:20> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55f32dce57f0 <col:20> 'Handler::Flags' Int: 31
|       `-DeclRefExpr 0x55f32dce57c0 <col:20> 'Handler::Flags' EnumConstant 0x55f32dce3010 'f_special' 'Handler::Flags'
|-EnumDecl 0x55f32dce5a58 <line:252:5, line:267:5> line:252:10 DeprecatedFlags
| |-EnumConstantDecl 0x55f32dce5b60 <line:253:2, col:12> col:2 OP_READ 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x55f32dce60c0 <col:12> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f32dce5b40 <col:12> 'Handler::Flags' Int: 1
| |     `-DeclRefExpr 0x55f32dce5b20 <col:12> 'Handler::Flags' EnumConstant 0x55f32dce2310 'f_read' 'Handler::Flags'
| |-EnumConstantDecl 0x55f32dce5bf0 <line:254:2, col:13> col:2 OP_WRITE 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x55f32dce60d8 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f32dce5bd0 <col:13> 'Handler::Flags' Int: 2
| |     `-DeclRefExpr 0x55f32dce5bb0 <col:13> 'Handler::Flags' EnumConstant 0x55f32dce23a0 'f_write' 'Handler::Flags'
| |-EnumConstantDecl 0x55f32dce5c80 <line:255:2, col:15> col:2 READ_PARAM 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x55f32dce60f0 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f32dce5c60 <col:15> 'Handler::Flags' Int: 4
| |     `-DeclRefExpr 0x55f32dce5c40 <col:15> 'Handler::Flags' EnumConstant 0x55f32dce2430 'f_read_param' 'Handler::Flags'
| |-EnumConstantDecl 0x55f32dce5d10 <line:256:2, col:8> col:2 RAW 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x55f32dce6108 <col:8> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f32dce5cf0 <col:8> 'Handler::Flags' Int: 64
| |     `-DeclRefExpr 0x55f32dce5cd0 <col:8> 'Handler::Flags' EnumConstant 0x55f32dce25e0 'f_raw' 'Handler::Flags'
| |-EnumConstantDecl 0x55f32dce5da0 <line:261:2, col:9> col:2 CALM 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x55f32dce6120 <col:9> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f32dce5d80 <col:9> 'Handler::Flags' Int: 2048
| |     `-DeclRefExpr 0x55f32dce5d60 <col:9> 'Handler::Flags' EnumConstant 0x55f32dce28b0 'f_calm' 'Handler::Flags'
| |-EnumConstantDecl 0x55f32dce5e30 <line:262:2, col:14> col:2 EXPENSIVE 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x55f32dce6138 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f32dce5e10 <col:14> 'Handler::Flags' Int: 4096
| |     `-DeclRefExpr 0x55f32dce5df0 <col:14> 'Handler::Flags' EnumConstant 0x55f32dce2940 'f_expensive' 'Handler::Flags'
| |-EnumConstantDecl 0x55f32dce5ec0 <line:263:2, col:11> col:2 BUTTON 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x55f32dce6150 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f32dce5ea0 <col:11> 'Handler::Flags' Int: 8192
| |     `-DeclRefExpr 0x55f32dce5e80 <col:11> 'Handler::Flags' EnumConstant 0x55f32dce29d0 'f_button' 'Handler::Flags'
| |-EnumConstantDecl 0x55f32dce5f50 <line:264:2, col:13> col:2 CHECKBOX 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x55f32dce6168 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f32dce5f30 <col:13> 'Handler::Flags' Int: 16384
| |     `-DeclRefExpr 0x55f32dce5f10 <col:13> 'Handler::Flags' EnumConstant 0x55f32dce2a60 'f_checkbox' 'Handler::Flags'
| |-EnumConstantDecl 0x55f32dce5fe0 <line:265:2, col:20> col:2 USER_FLAG_SHIFT 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x55f32dce6180 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f32dce5fc0 <col:20> 'Handler::Flags' Int: 28
| |     `-DeclRefExpr 0x55f32dce5fa0 <col:20> 'Handler::Flags' EnumConstant 0x55f32dce2c90 'f_user_shift' 'Handler::Flags'
| `-EnumConstantDecl 0x55f32dce6070 <line:266:2, col:16> col:2 USER_FLAG_0 'Handler::DeprecatedFlags'
|   `-ImplicitCastExpr 0x55f32dce6198 <col:16> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55f32dce6050 <col:16> 'Handler::Flags' Int: 268435456
|       `-DeclRefExpr 0x55f32dce6030 <col:16> 'Handler::Flags' EnumConstant 0x55f32dce2d60 'f_user0' 'Handler::Flags'
|-EnumDecl 0x55f32dce61b0 <line:268:5, line:271:5> line:268:5
| |-DeprecatedAttr 0x55f32dce6270 <col:25> "" ""
| |-EnumConstantDecl 0x55f32dce6320 <line:269:2, col:14> col:2 EXCLUSIVE 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:268:5)'
| | `-ImplicitCastExpr 0x55f32dce6400 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f32dce6300 <col:14> 'Handler::Flags' Int: 0
| |     `-DeclRefExpr 0x55f32dce62e0 <col:14> 'Handler::Flags' EnumConstant 0x55f32dce24c0 'f_exclusive' 'Handler::Flags'
| `-EnumConstantDecl 0x55f32dce63b0 <line:270:2, col:17> col:2 NONEXCLUSIVE 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:268:5)'
|   `-ImplicitCastExpr 0x55f32dce6418 <col:17> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55f32dce6390 <col:17> 'Handler::Flags' Int: 32
|       `-DeclRefExpr 0x55f32dce6370 <col:17> 'Handler::Flags' EnumConstant 0x55f32dce2550 'f_nonexclusive' 'Handler::Flags'
|-CXXMethodDecl 0x55f32dce6598 <line:281:5, line:284:5> line:281:19 __call_read 'String (Element *, void *) const' inline
| |-ParmVarDecl 0x55f32dce6440 <col:31, col:40> col:40 used e 'Element *'
| |-ParmVarDecl 0x55f32dce64c0 <col:43, col:49> col:49 used new_user_data 'void *'
| `-CompoundStmt 0x55f32dcea408 <col:70, line:284:5>
|   |-ParenExpr 0x55f32dcea228 <line:282:2, col:233> 'void'
|   | `-ConditionalOperator 0x55f32dcea1f8 <col:3, col:232> 'void'
|   |   |-CXXStaticCastExpr 0x55f32dce9f28 <col:3, col:75> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55f32dce9ef8 <col:23, col:69> 'bool' '=='
|   |   |   |-ParenExpr 0x55f32dce9ea0 <col:23, col:64> 'unsigned int'
|   |   |   | `-BinaryOperator 0x55f32dce9e80 <col:24, col:63> 'unsigned int' '&'
|   |   |   |   |-ImplicitCastExpr 0x55f32dce9e50 <col:24> 'uint32_t':'unsigned int' <LValueToRValue>
|   |   |   |   | `-MemberExpr 0x55f32dce9d70 <col:24> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55f32dce6d90
|   |   |   |   |   `-CXXThisExpr 0x55f32dce9d60 <col:24> 'const Handler *' implicit this
|   |   |   |   `-ImplicitCastExpr 0x55f32dce9e68 <col:33, col:63> 'unsigned int' <IntegralCast>
|   |   |   |     `-ParenExpr 0x55f32dce9e30 <col:33, col:63> 'int'
|   |   |   |       `-BinaryOperator 0x55f32dce9e10 <col:34, col:43> 'int' '|'
|   |   |   |         |-ImplicitCastExpr 0x55f32dce9de0 <col:34> 'int' <IntegralCast>
|   |   |   |         | `-DeclRefExpr 0x55f32dce9da0 <col:34> 'Handler::Flags' EnumConstant 0x55f32dce2310 'f_read' 'Handler::Flags'
|   |   |   |         `-ImplicitCastExpr 0x55f32dce9df8 <col:43> 'int' <IntegralCast>
|   |   |   |           `-DeclRefExpr 0x55f32dce9dc0 <col:43> 'Handler::Flags' EnumConstant 0x55f32dce2df0 'f_read_comprehensive' 'Handler::Flags'
|   |   |   `-ImplicitCastExpr 0x55f32dce9ee0 <col:69> 'unsigned int' <IntegralCast>
|   |   |     `-DeclRefExpr 0x55f32dce9ec0 <col:69> 'Handler::Flags' EnumConstant 0x55f32dce2310 'f_read' 'Handler::Flags'
|   |   |-CXXFunctionalCastExpr 0x55f32dce9f88 <col:79, col:86> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55f32dce9f68 <col:85> 'int' 0
|   |   `-CallExpr 0x55f32dcea158 <col:90, col:232> 'void'
|   |     |-ImplicitCastExpr 0x55f32dcea140 <col:90> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55f32dcea120 <col:90> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55f32d8255d0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55f32dcea198 <col:105> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f32dce9ff8 <col:105> 'const char [53]' lvalue "(_flags & (f_read | f_read_comprehensive)) == f_read"
|   |     |-ImplicitCastExpr 0x55f32dcea1b0 <col:161> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f32dcea048 <col:161> 'const char [30]' lvalue "../dummy_inc/click/handler.hh"
|   |     |-ImplicitCastExpr 0x55f32dcea1c8 <col:194> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55f32dcea080 <col:194> 'int' 282
|   |     `-ImplicitCastExpr 0x55f32dcea1e0 <col:199, col:213> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55f32dcea108 <col:199, col:213> 'const char [53]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55f32dcea0f0 <col:213> 'const char [53]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55f32dcea0a0 <col:213> 'const char [53]' lvalue "String Handler::__call_read(Element *, void *) const"
|   `-ReturnStmt 0x55f32dcea3f8 <line:283:2, col:38>
|     `-ExprWithCleanups 0x55f32dcea3e0 <col:9, col:38> 'String'
|       `-CXXConstructExpr 0x55f32dcea3b0 <col:9, col:38> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x55f32dcea398 <col:9, col:38> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x55f32dcea378 <col:9, col:38> 'String' (CXXTemporary 0x55f32dcea378)
|             `-CallExpr 0x55f32dcea310 <col:9, col:38> 'String'
|               |-ImplicitCastExpr 0x55f32dcea2f8 <col:9, col:20> 'ReadHandlerCallback':'String (*)(Element *, void *)' <LValueToRValue>
|               | `-MemberExpr 0x55f32dcea288 <col:9, col:20> 'const ReadHandlerCallback':'String (*const)(Element *, void *)' lvalue .r 0x55f32dce68a0
|               |   `-MemberExpr 0x55f32dcea258 <col:9> 'const union (anonymous union at ../dummy_inc/click/handler.hh:290:5)':'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5)' lvalue ->_read_hook 0x55f32dce6968
|               |     `-CXXThisExpr 0x55f32dcea248 <col:9> 'const Handler *' implicit this
|               |-ImplicitCastExpr 0x55f32dcea340 <col:22> 'Element *' <LValueToRValue>
|               | `-DeclRefExpr 0x55f32dcea2b8 <col:22> 'Element *' lvalue ParmVar 0x55f32dce6440 'e' 'Element *'
|               `-ImplicitCastExpr 0x55f32dcea358 <col:25> 'void *' <LValueToRValue>
|                 `-DeclRefExpr 0x55f32dcea2d8 <col:25> 'void *' lvalue ParmVar 0x55f32dce64c0 'new_user_data' 'void *'
|-AccessSpecDecl 0x55f32dce6648 <line:287:3, col:10> col:3 private
|-FieldDecl 0x55f32dce6680 <line:289:5, col:12> col:12 referenced _name 'String'
|-CXXRecordDecl 0x55f32dce66d0 <line:290:5, line:293:5> line:290:5 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x55f32dce6820 <line:291:2, col:18> col:18 h 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-FieldDecl 0x55f32dce68a0 <line:292:2, col:22> col:22 referenced r 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-CXXConstructorDecl 0x55f32dce7698 <line:290:5> col:5 implicit constexpr  'void (const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &)' inline default trivial noexcept-unevaluated 0x55f32dce7698
| | `-ParmVarDecl 0x55f32dce77a8 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &'
| |-CXXConstructorDecl 0x55f32dce7848 <col:5> col:5 implicit constexpr  'void (Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&)' inline default trivial noexcept-unevaluated 0x55f32dce7848
| | `-ParmVarDecl 0x55f32dce7958 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&'
| |-CXXDestructorDecl 0x55f32dce79c8 <col:5> col:5 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x55f32dce79c8
| |-CXXMethodDecl 0x55f32dce8298 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &(const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &)' inline default trivial noexcept-unevaluated 0x55f32dce8298
| | `-ParmVarDecl 0x55f32dce83a8 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &'
| |-CXXMethodDecl 0x55f32dce8418 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &(Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&)' inline default trivial noexcept-unevaluated 0x55f32dce8418
| | `-ParmVarDecl 0x55f32dce8528 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&'
| `-CXXConstructorDecl 0x55f32ded4650 <col:5> col:5 implicit used  'void () noexcept' inline default trivial
|   `-CompoundStmt 0x55f32ded4730 <col:5>
|-FieldDecl 0x55f32dce6968 <col:5, line:293:7> col:7 referenced _read_hook 'union (anonymous union at ../dummy_inc/click/handler.hh:290:5)':'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5)'
|-CXXRecordDecl 0x55f32dce69d0 <line:294:5, line:297:5> line:294:5 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x55f32dce6af8 <line:295:2, col:18> col:18 h 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-FieldDecl 0x55f32dce6b80 <line:296:2, col:23> col:23 referenced w 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-CXXConstructorDecl 0x55f32dce7af8 <line:294:5> col:5 implicit constexpr  'void (const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &)' inline default trivial noexcept-unevaluated 0x55f32dce7af8
| | `-ParmVarDecl 0x55f32dce7c08 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &'
| |-CXXConstructorDecl 0x55f32dce7ca8 <col:5> col:5 implicit constexpr  'void (Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&)' inline default trivial noexcept-unevaluated 0x55f32dce7ca8
| | `-ParmVarDecl 0x55f32dce7db8 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&'
| |-CXXDestructorDecl 0x55f32dce7e28 <col:5> col:5 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x55f32dce7e28
| |-CXXMethodDecl 0x55f32dce85c8 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &(const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &)' inline default trivial noexcept-unevaluated 0x55f32dce85c8
| | `-ParmVarDecl 0x55f32dce86d8 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &'
| |-CXXMethodDecl 0x55f32dce8748 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &(Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&)' inline default trivial noexcept-unevaluated 0x55f32dce8748
| | `-ParmVarDecl 0x55f32dce8858 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&'
| `-CXXConstructorDecl 0x55f32ded4790 <col:5> col:5 implicit used  'void () noexcept' inline default trivial
|   `-CompoundStmt 0x55f32ded4870 <col:5>
|-FieldDecl 0x55f32dce6c48 <col:5, line:297:7> col:7 referenced _write_hook 'union (anonymous union at ../dummy_inc/click/handler.hh:294:5)':'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5)'
|-FieldDecl 0x55f32dce6cc8 <line:298:5, col:11> col:11 referenced _read_user_data 'void *'
|-FieldDecl 0x55f32dce6d30 <line:299:5, col:11> col:11 referenced _write_user_data 'void *'
|-FieldDecl 0x55f32dce6d90 <line:300:5, col:14> col:14 referenced _flags 'uint32_t':'unsigned int'
|-FieldDecl 0x55f32dce6df8 <line:301:5, col:9> col:9 _use_count 'int'
|-FieldDecl 0x55f32dce6e60 <line:302:5, col:9> col:9 _next_by_name 'int'
|-VarDecl 0x55f32dce6ec0 <line:304:5, col:27> col:27 used the_blank_handler 'const Handler *' static
|-CXXConstructorDecl 0x55f32dce6fe0 <line:306:5, col:38> col:5 Handler 'void (const String &)'
| `-ParmVarDecl 0x55f32dce6f38 <col:13, col:37> col:28 'const String &' cinit
|   `-ExprWithCleanups 0x55f32dce8c10 <col:30, col:37> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x55f32dce8bf8 <col:30, col:37> 'const String' lvalue
|       `-ImplicitCastExpr 0x55f32dce8be0 <col:30, col:37> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x55f32dce8bc0 <col:30, col:37> 'String' (CXXTemporary 0x55f32dce8bc0)
|           `-CXXTemporaryObjectExpr 0x55f32dce8b88 <col:30, col:37> 'String' 'void ()'
|-CXXMethodDecl 0x55f32dce7188 <line:308:5, col:41> col:17 combine 'void (const Handler &)' inline
| `-ParmVarDecl 0x55f32dce70c8 <col:25, col:40> col:40 x 'const Handler &'
|-CXXMethodDecl 0x55f32dce7308 <line:309:5, col:46> col:17 compatible 'bool (const Handler &) const' inline
| `-ParmVarDecl 0x55f32dce7240 <col:28, col:43> col:43 x 'const Handler &'
|-FriendDecl 0x55f32dce74c8 <line:311:5, col:18> col:12 'class Router':'Router'
|-CXXConstructorDecl 0x55f32dce7508 <line:19:7> col:7 implicit Handler 'void (const Handler &)' inline default noexcept-unevaluated 0x55f32dce7508
| `-ParmVarDecl 0x55f32dce75e8 <col:7> col:7 'const Handler &'
|-CXXConstructorDecl 0x55f32dce7f38 <col:7> col:7 implicit Handler 'void (Handler &&)' inline default noexcept-unevaluated 0x55f32dce7f38
| `-ParmVarDecl 0x55f32dce8048 <col:7> col:7 'Handler &&'
|-CXXMethodDecl 0x55f32dce80e8 <col:7> col:7 implicit operator= 'Handler &(const Handler &)' inline default noexcept-unevaluated 0x55f32dce80e8
| `-ParmVarDecl 0x55f32dce81f8 <col:7> col:7 'const Handler &'
|-CXXMethodDecl 0x55f32dce88c8 <col:7> col:7 implicit operator= 'Handler &(Handler &&)' inline default noexcept-unevaluated 0x55f32dce88c8
| `-ParmVarDecl 0x55f32dce89d8 <col:7> col:7 'Handler &&'
`-CXXDestructorDecl 0x55f32dce8a60 <col:7> col:7 implicit ~Handler 'void ()' inline default noexcept-unevaluated 0x55f32dce8a60

Layout: <CGRecordLayout
  LLVMType:%class.Handler = type <{ %class.String, %union.anon, %union.anon.11, i8*, i8*, i32, i32, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Handler.base = type <{ %class.String, %union.anon, %union.anon.11, i8*, i8*, i32, i32, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55f32deb9008 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'void *'
|-CXXRecordDecl 0x55f32deb9218 prev 0x55f32deb9008 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55f32deba230 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<void *>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x55f32deba1e0 'typename array_memory<void *>::type' sugar
|   `-TypedefType 0x55f32deba1c0 'conditional<true, sized_array_memory<8>, typed_array_memory<void *> >::type' sugar
|     |-Typedef 0x55f32deba070 'type'
|     `-SubstTemplateTypeParmType 0x55f32ddd8ca0 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x55f32da4f230 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f32da4f1d8 'T'
|       `-RecordType 0x55f32ddd87f0 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x55f32ddd8708 'sized_array_memory'
|-FieldDecl 0x55f32deba330 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<void *>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x55f32deba380 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55f32deba3b8 <line:118:5, col:15> col:15 value_type 'void *':'void *'
| `-SubstTemplateTypeParmType 0x55f32deb92b0 'void *' sugar
|   |-TemplateTypeParmType 0x55f32da87140 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55f32da870e8 'T'
|   `-PointerType 0x55f32d785ce0 'void *'
|     `-BuiltinType 0x55f32d7854e0 'void'
|-TypedefDecl 0x55f32deba448 <line:119:5, col:16> col:16 reference 'void *&'
| `-LValueReferenceType 0x55f32deba410 'void *&'
|   `-SubstTemplateTypeParmType 0x55f32deb92b0 'void *' sugar
|     |-TemplateTypeParmType 0x55f32da87140 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55f32da870e8 'T'
|     `-PointerType 0x55f32d785ce0 'void *'
|       `-BuiltinType 0x55f32d7854e0 'void'
|-TypedefDecl 0x55f32deba508 <line:120:5, col:22> col:22 const_reference 'void *const &'
| `-LValueReferenceType 0x55f32deba4d0 'void *const &'
|   `-QualType 0x55f32deb92b1 'void *const' const
|     `-SubstTemplateTypeParmType 0x55f32deb92b0 'void *' sugar
|       |-TemplateTypeParmType 0x55f32da87140 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f32da870e8 'T'
|       `-PointerType 0x55f32d785ce0 'void *'
|         `-BuiltinType 0x55f32d7854e0 'void'
|-TypedefDecl 0x55f32deba598 <line:121:5, col:16> col:16 pointer 'void **'
| `-PointerType 0x55f32deba560 'void **'
|   `-SubstTemplateTypeParmType 0x55f32deb92b0 'void *' sugar
|     |-TemplateTypeParmType 0x55f32da87140 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55f32da870e8 'T'
|     `-PointerType 0x55f32d785ce0 'void *'
|       `-BuiltinType 0x55f32d7854e0 'void'
|-TypedefDecl 0x55f32deba628 <line:122:5, col:22> col:22 const_pointer 'void *const *'
| `-PointerType 0x55f32deba5f0 'void *const *'
|   `-QualType 0x55f32deb92b1 'void *const' const
|     `-SubstTemplateTypeParmType 0x55f32deb92b0 'void *' sugar
|       |-TemplateTypeParmType 0x55f32da87140 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f32da870e8 'T'
|       `-PointerType 0x55f32d785ce0 'void *'
|         `-BuiltinType 0x55f32d7854e0 'void'
|-TypedefDecl 0x55f32debcbf0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<void *>::type':'void *'
| `-ElaboratedType 0x55f32debcba0 'typename fast_argument<void *>::type' sugar
|   `-TypedefType 0x55f32debcb80 'fast_argument<void *, false>::type' sugar
|     |-Typedef 0x55f32debcb10 'type'
|     `-SubstTemplateTypeParmType 0x55f32debc8d0 'void *' sugar
|       |-TemplateTypeParmType 0x55f32da5a250 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f32da5a200 'T'
|       `-PointerType 0x55f32d785ce0 'void *'
|         `-BuiltinType 0x55f32d7854e0 'void'
|-TypedefDecl 0x55f32debcc58 <line:126:5, col:22> col:22 const_access_type 'void *const &'
| `-LValueReferenceType 0x55f32deba4d0 'void *const &'
|   `-QualType 0x55f32deb92b1 'void *const' const
|     `-SubstTemplateTypeParmType 0x55f32deb92b0 'void *' sugar
|       |-TemplateTypeParmType 0x55f32da87140 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f32da870e8 'T'
|       `-PointerType 0x55f32d785ce0 'void *'
|         `-BuiltinType 0x55f32d7854e0 'void'
|-TypedefDecl 0x55f32debccb0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55f32d785580 'int'
|-TypedefDecl 0x55f32debcd18 <line:130:5, col:16> col:16 iterator 'void **'
| `-PointerType 0x55f32deba560 'void **'
|   `-SubstTemplateTypeParmType 0x55f32deb92b0 'void *' sugar
|     |-TemplateTypeParmType 0x55f32da87140 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55f32da870e8 'T'
|     `-PointerType 0x55f32d785ce0 'void *'
|       `-BuiltinType 0x55f32d7854e0 'void'
|-TypedefDecl 0x55f32debcd80 <line:131:5, col:22> col:22 const_iterator 'void *const *'
| `-PointerType 0x55f32deba5f0 'void *const *'
|   `-QualType 0x55f32deb92b1 'void *const' const
|     `-SubstTemplateTypeParmType 0x55f32deb92b0 'void *' sugar
|       |-TemplateTypeParmType 0x55f32da87140 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f32da870e8 'T'
|       `-PointerType 0x55f32d785ce0 'void *'
|         `-BuiltinType 0x55f32d7854e0 'void'
|-EnumDecl 0x55f32debcdd8 <line:134:5> col:5
| `-EnumConstantDecl 0x55f32debced0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<void *>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55f32debceb0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55f32da887c8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55f32da887a0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55f32da88780 <col:40> 'int' 1
|-CXXConstructorDecl 0x55f32debcf58 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55f32debd1a8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<void *>::value_argument_type)' inline
| |-ParmVarDecl 0x55f32debd010 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55f32debd0b0 <col:41, col:61> col:61 v 'Vector<void *>::value_argument_type':'void *'
|-CXXConstructorDecl 0x55f32debd468 <line:139:5, col:37> col:12 Vector 'void (const Vector<void *> &)' inline
| `-ParmVarDecl 0x55f32debd350 <col:19, col:36> col:36 x 'const Vector<void *> &'
|-CXXConstructorDecl 0x55f32debd728 <line:141:5, col:32> col:12 Vector 'void (Vector<void *> &&)' inline
| `-ParmVarDecl 0x55f32debd610 <col:19, col:31> col:31 x 'Vector<void *> &&'
|-CXXMethodDecl 0x55f32debda70 <line:144:5, col:51> col:23 operator= 'Vector<void *> &(const Vector<void *> &)' inline
| `-ParmVarDecl 0x55f32debd950 <col:33, col:50> col:50 x 'const Vector<void *> &'
|-CXXMethodDecl 0x55f32debdd80 <line:146:5, col:46> col:23 operator= 'Vector<void *> &(Vector<void *> &&)' inline
| `-ParmVarDecl 0x55f32debdc60 <col:33, col:45> col:45 x 'Vector<void *> &&'
|-CXXMethodDecl 0x55f32debe070 <line:148:5, col:70> col:23 assign 'Vector<void *> &(Vector::size_type, Vector<void *>::value_argument_type)' inline
| |-ParmVarDecl 0x55f32debdeb8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55f32debdf30 <col:43, col:69> col:63 v 'Vector<void *>::value_argument_type':'void *'
|-CXXMethodDecl 0x55f32debe1c8 <line:150:5, col:55> col:49 begin 'Vector<void *>::iterator ()'
| |-NoInlineAttr 0x55f32debe2a8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f32debe300 <col:30> Inherited
|-CXXMethodDecl 0x55f32debe348 <line:151:5, col:53> col:49 end 'Vector<void *>::iterator ()'
| |-NoInlineAttr 0x55f32debe3f8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f32debe450 <col:30> Inherited
|-CXXMethodDecl 0x55f32debe518 <line:152:5, col:63> col:55 begin 'Vector<void *>::const_iterator () const'
| |-NoInlineAttr 0x55f32debe5c8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f32debe620 <col:30> Inherited
|-CXXMethodDecl 0x55f32debe668 <line:153:5, col:61> col:55 end 'Vector<void *>::const_iterator () const'
| |-NoInlineAttr 0x55f32debe718 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f32debe770 <col:30> Inherited
|-CXXMethodDecl 0x55f32debe7b8 <line:154:5, col:64> col:55 cbegin 'Vector<void *>::const_iterator () const'
| |-NoInlineAttr 0x55f32debe868 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f32debe8c0 <col:30> Inherited
|-CXXMethodDecl 0x55f32debe908 <line:155:5, col:62> col:55 cend 'Vector<void *>::const_iterator () const'
| |-NoInlineAttr 0x55f32debe9b8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f32debea10 <col:30> Inherited
|-CXXMethodDecl 0x55f32debea38 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55f32debeae8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55f32debeb98 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55f32debed58 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<void *>::value_argument_type)' inline
| |-ParmVarDecl 0x55f32debec48 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55f32debecc0 <col:37, col:63> col:57 v 'Vector<void *>::value_argument_type':'void *'
|-CXXMethodDecl 0x55f32debeea8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55f32debee18 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f32debf058 <line:163:5, col:65> col:43 operator[] 'void *&(Vector::size_type)'
| |-ParmVarDecl 0x55f32debef60 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55f32debf110 <col:20>
| `-OptimizeNoneAttr 0x55f32debf168 <col:30>
|-CXXMethodDecl 0x55f32debf288 <line:164:5, col:73> col:49 operator[] 'void *const &(Vector::size_type) const'
| |-ParmVarDecl 0x55f32debf190 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55f32debf340 <col:20>
| `-OptimizeNoneAttr 0x55f32debf398 <col:30>
|-CXXMethodDecl 0x55f32debf450 <line:165:5, col:29> col:15 at 'void *&(Vector::size_type)' inline
| `-ParmVarDecl 0x55f32debf3c0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f32debf598 <line:166:5, col:37> col:21 at 'void *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55f32debf508 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f32debf6c8 <line:167:5, col:21> col:15 front 'void *&()' inline
|-CXXMethodDecl 0x55f32debf7f8 <line:168:5, col:29> col:21 front 'void *const &() const' inline
|-CXXMethodDecl 0x55f32debf8c8 <line:169:5, col:20> col:15 back 'void *&()' inline
|-CXXMethodDecl 0x55f32debf998 <line:170:5, col:28> col:21 back 'void *const &() const' inline
|-CXXMethodDecl 0x55f32debfad8 <line:172:5, col:39> col:15 unchecked_at 'void *&(Vector::size_type)' inline
| `-ParmVarDecl 0x55f32debfa48 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f32debfc20 <line:173:5, col:47> col:21 unchecked_at 'void *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55f32debfb90 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f32debfd68 <line:174:5, col:59> col:15 at_u 'void *&(Vector::size_type)' inline
| |-ParmVarDecl 0x55f32debfcd8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55f32debfe20 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55f32debff20 <line:175:5, col:71> col:21 at_u 'void *const &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55f32debfe90 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55f32debffd8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55f32dec0098 <line:177:5, col:20> col:15 data 'void **()' inline
|-CXXMethodDecl 0x55f32dec0198 <line:178:5, col:28> col:21 data 'void *const *() const' inline
|-CXXMethodDecl 0x55f32dec0318 <line:180:5, col:48> col:17 push_back 'void (Vector<void *>::value_argument_type)' inline
| `-ParmVarDecl 0x55f32dec0258 <col:27, col:47> col:47 v 'Vector<void *>::value_argument_type':'void *'
|-FunctionTemplateDecl 0x55f32dec0ad8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55f32dec03d0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<void *>':'fast_argument<void *, false>'
| `-CXXMethodDecl 0x55f32dec0a38 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (void *&&)' inline
|   `-ParmVarDecl 0x55f32dec0938 <col:58, col:62> col:62 v 'void *&&'
|-CXXMethodDecl 0x55f32dec0bb8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55f32dec0d08 <line:186:5, col:49> col:17 push_front 'void (Vector<void *>::value_argument_type)' inline
| `-ParmVarDecl 0x55f32dec0c78 <col:28, col:48> col:48 v 'Vector<void *>::value_argument_type':'void *'
|-CXXMethodDecl 0x55f32dec0dc0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55f32dec1008 <line:189:5, col:62> col:21 insert 'Vector<void *>::iterator (Vector<void *>::iterator, Vector<void *>::value_argument_type)' inline
| |-ParmVarDecl 0x55f32dec0e80 <col:28, col:37> col:37 it 'Vector<void *>::iterator':'void **'
| `-ParmVarDecl 0x55f32dec0ef8 <col:41, col:61> col:61 v 'Vector<void *>::value_argument_type':'void *'
|-CXXMethodDecl 0x55f32dec11c8 <line:190:5, col:38> col:21 erase 'Vector<void *>::iterator (Vector<void *>::iterator)' inline
| `-ParmVarDecl 0x55f32dec10d8 <col:27, col:36> col:36 it 'Vector<void *>::iterator':'void **'
|-CXXMethodDecl 0x55f32dec1418 <line:191:5, col:49> col:21 erase 'Vector<void *>::iterator (Vector<void *>::iterator, Vector<void *>::iterator)' inline
| |-ParmVarDecl 0x55f32dec1290 <col:27, col:36> col:36 a 'Vector<void *>::iterator':'void **'
| `-ParmVarDecl 0x55f32dec1308 <col:39, col:48> col:48 b 'Vector<void *>::iterator':'void **'
|-CXXMethodDecl 0x55f32dec14d8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55f32dec1738 <line:195:5, col:34> col:17 swap 'void (Vector<void *> &)' inline
| `-ParmVarDecl 0x55f32dec1640 <col:22, col:33> col:33 x 'Vector<void *> &'
`-CXXDestructorDecl 0x55f32dec1808 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55f32dec1808

Layout: <CGRecordLayout
  LLVMType:%class.Vector.12 = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector.12 = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct Router::notifier_signals_t
         0 |   class String name
         0 |     struct String::rep_t _r
         0 |       const char * data
         8 |       int length
        16 |       struct String::memo_t * memo
        24 |   int nsig
        28 |   class atomic_uint32_t [128] sig
       544 |   struct Router::notifier_signals_t * next
           | [sizeof=552, dsize=552, align=8,
           |  nvsize=552, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f32dec1a00 <../dummy_inc/click/router.hh:280:5, line:290:5> line:280:12 referenced struct notifier_signals_t definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x55f32dec1b18 <col:5, col:12> col:12 implicit referenced struct notifier_signals_t
|-EnumDecl 0x55f32dec1ba8 <line:281:9, col:32> col:9
| `-EnumConstantDecl 0x55f32dec1cb0 <col:16, col:27> col:16 referenced capacity 'Router::notifier_signals_t::(anonymous enum at ../dummy_inc/click/router.hh:281:9)'
|   `-ImplicitCastExpr 0x55f32dec1d00 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55f32dec1c90 <col:27> 'int' Int: 4096
|       `-IntegerLiteral 0x55f32dec1c70 <col:27> 'int' 4096
|-FieldDecl 0x55f32dec1d28 <line:282:9, col:16> col:16 name 'String'
|-FieldDecl 0x55f32dec1d90 <line:283:9, col:13> col:13 nsig 'int'
|-FieldDecl 0x55f32dec1f88 <line:284:9, col:42> col:25 referenced sig 'atomic_uint32_t [128]'
|-FieldDecl 0x55f32dec2018 <line:285:9, col:29> col:29 next 'Router::notifier_signals_t *'
|-CXXConstructorDecl 0x55f32dec21d8 <line:286:9, line:289:9> line:286:9 notifier_signals_t 'void (const String &, Router::notifier_signals_t *)'
| |-ParmVarDecl 0x55f32dec2078 <col:28, col:42> col:42 used n 'const String &'
| |-ParmVarDecl 0x55f32dec20f0 <col:45, col:65> col:65 used nx 'Router::notifier_signals_t *'
| |-CXXCtorInitializer Field 0x55f32dec1d28 'name' 'String'
| | `-CXXConstructExpr 0x55f32decd1a8 <line:287:15, col:21> 'String' 'void (const String &)'
| |   `-DeclRefExpr 0x55f32decd168 <col:20> 'const String' lvalue ParmVar 0x55f32dec2078 'n' 'const String &'
| |-CXXCtorInitializer Field 0x55f32dec1d90 'nsig' 'int'
| | `-IntegerLiteral 0x55f32decd200 <col:29> 'int' 0
| |-CXXCtorInitializer Field 0x55f32dec1f88 'sig' 'atomic_uint32_t [128]'
| | `-CXXConstructExpr 0x55f32decd2e8 <line:286:9> 'atomic_uint32_t [128]' 'void () noexcept'
| |-CXXCtorInitializer Field 0x55f32dec2018 'next' 'Router::notifier_signals_t *'
| | `-ImplicitCastExpr 0x55f32decd2a8 <line:287:38> 'Router::notifier_signals_t *' <LValueToRValue>
| |   `-DeclRefExpr 0x55f32decd268 <col:38> 'Router::notifier_signals_t *' lvalue ParmVar 0x55f32dec20f0 'nx' 'Router::notifier_signals_t *'
| `-CompoundStmt 0x55f32decd578 <col:42, line:289:9>
|   `-CallExpr 0x55f32decd528 <line:288:13, col:43> 'void *'
|     |-ImplicitCastExpr 0x55f32decd510 <col:13> 'void *(*)(void *, int, size_t) throw()' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x55f32decd4f0 <col:13> 'void *(void *, int, size_t) throw()' lvalue Function 0x55f32d9e98e8 'memset' 'void *(void *, int, size_t) throw()'
|     |-ImplicitCastExpr 0x55f32decd560 <col:20, col:26> 'void *' <BitCast>
|     | `-UnaryOperator 0x55f32decd438 <col:20, col:26> 'atomic_uint32_t *' prefix '&' cannot overflow
|     |   `-ArraySubscriptExpr 0x55f32decd418 <col:21, col:26> 'atomic_uint32_t' lvalue
|     |     |-ImplicitCastExpr 0x55f32decd400 <col:21> 'atomic_uint32_t *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55f32decd3b0 <col:21> 'atomic_uint32_t [128]' lvalue ->sig 0x55f32dec1f88
|     |     |   `-CXXThisExpr 0x55f32decd3a0 <col:21> 'Router::notifier_signals_t *' implicit this
|     |     `-IntegerLiteral 0x55f32decd3e0 <col:25> 'int' 0
|     |-IntegerLiteral 0x55f32decd450 <col:29> 'int' 0
|     `-UnaryExprOrTypeTraitExpr 0x55f32decd4d0 <col:32, col:42> 'unsigned long' sizeof
|       `-ParenExpr 0x55f32decd4b0 <col:38, col:42> 'atomic_uint32_t [128]' lvalue
|         `-MemberExpr 0x55f32decd480 <col:39> 'atomic_uint32_t [128]' lvalue ->sig 0x55f32dec1f88 non_odr_use_unevaluated
|           `-CXXThisExpr 0x55f32decd470 <col:39> 'Router::notifier_signals_t *' implicit this
|-CXXConstructorDecl 0x55f32dec22b8 <line:280:12> col:12 implicit notifier_signals_t 'void (const Router::notifier_signals_t &)' inline default noexcept-unevaluated 0x55f32dec22b8
| `-ParmVarDecl 0x55f32dec23c8 <col:12> col:12 'const Router::notifier_signals_t &'
|-CXXConstructorDecl 0x55f32dec2468 <col:12> col:12 implicit notifier_signals_t 'void (Router::notifier_signals_t &&)' inline default noexcept-unevaluated 0x55f32dec2468
| `-ParmVarDecl 0x55f32dec2578 <col:12> col:12 'Router::notifier_signals_t &&'
|-CXXMethodDecl 0x55f32dec2618 <col:12> col:12 implicit operator= 'Router::notifier_signals_t &(const Router::notifier_signals_t &)' inline default noexcept-unevaluated 0x55f32dec2618
| `-ParmVarDecl 0x55f32dec2728 <col:12> col:12 'const Router::notifier_signals_t &'
|-CXXMethodDecl 0x55f32dec2798 <col:12> col:12 implicit operator= 'Router::notifier_signals_t &(Router::notifier_signals_t &&)' inline default noexcept-unevaluated 0x55f32dec2798
| `-ParmVarDecl 0x55f32dec28a8 <col:12> col:12 'Router::notifier_signals_t &&'
`-CXXDestructorDecl 0x55f32dec2930 <col:12> col:12 implicit ~notifier_signals_t 'void ()' inline default noexcept-unevaluated 0x55f32dec2930

Layout: <CGRecordLayout
  LLVMType:%"struct.Router::notifier_signals_t" = type { %class.String, i32, [128 x %class.atomic_uint32_t], %"struct.Router::notifier_signals_t"* }
  NonVirtualBaseLLVMType:%"struct.Router::notifier_signals_t" = type { %class.String, i32, [128 x %class.atomic_uint32_t], %"struct.Router::notifier_signals_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class ThreadSched
         0 |   (ThreadSched vtable pointer)
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f32de84888 <../dummy_inc/click/standard/threadsched.hh:6:1, line:15:1> line:6:7 class ThreadSched definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple non_trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55f32de849a8 <col:1, col:7> col:7 implicit referenced class ThreadSched
|-AccessSpecDecl 0x55f32de84a38 <col:21, col:27> col:21 public
|-EnumDecl 0x55f32de84a60 <line:8:5, col:58> col:5
| |-EnumConstantDecl 0x55f32de84b78 <col:12, col:32> col:12 THREAD_QUIESCENT 'ThreadSched::(anonymous enum at ../dummy_inc/click/standard/threadsched.hh:8:5)'
| | `-ConstantExpr 0x55f32de84b58 <col:31, col:32> 'int' Int: -1
| |   `-UnaryOperator 0x55f32de84b40 <col:31, col:32> 'int' prefix '-'
| |     `-IntegerLiteral 0x55f32de84b20 <col:32> 'int' 1
| `-EnumConstantDecl 0x55f32de84c20 <col:35, col:53> col:35 THREAD_UNKNOWN 'ThreadSched::(anonymous enum at ../dummy_inc/click/standard/threadsched.hh:8:5)'
|   `-ConstantExpr 0x55f32de84c00 <col:52, col:53> 'int' Int: -1000
|     `-UnaryOperator 0x55f32de84be8 <col:52, col:53> 'int' prefix '-'
|       `-IntegerLiteral 0x55f32de84bc8 <col:53> 'int' 1000
|-CXXConstructorDecl 0x55f32de84cd0 <line:10:5, col:21> col:5 ThreadSched 'void ()'
| `-CompoundStmt 0x55f32de85208 <col:19, col:21>
|-CXXDestructorDecl 0x55f32de84dc0 <line:11:5, col:30> col:13 ~ThreadSched 'void () noexcept' virtual
| `-CompoundStmt 0x55f32de85218 <col:28, col:30>
|-CXXMethodDecl 0x55f32de84f80 <line:13:5, col:56> col:17 initial_home_thread_id 'int (const Element *)' virtual
| `-ParmVarDecl 0x55f32de84eb0 <col:40, col:55> col:55 e 'const Element *'
`-CXXMethodDecl 0x55f32de85088 <line:6:7> col:7 implicit operator= 'ThreadSched &(const ThreadSched &)' inline default noexcept-unevaluated 0x55f32de85088
  `-ParmVarDecl 0x55f32de85198 <col:7> col:7 'const ThreadSched &'

Layout: <CGRecordLayout
  LLVMType:%class.ThreadSched = type { i32 (...)** }
  NonVirtualBaseLLVMType:%class.ThreadSched = type { i32 (...)** }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class Vector<class NameDB *>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class NameInfo
         0 |   class Vector<class NameDB *> _namedb_roots
         0 |     class vector_memory<class sized_array_memory<8> > vm_
         0 |       vector_memory<class sized_array_memory<8> >::type * l_
         8 |       vector_memory::size_type n_
        12 |       vector_memory::size_type capacity_
        16 |   class Vector<class NameDB *> _namedbs
        16 |     class vector_memory<class sized_array_memory<8> > vm_
        16 |       vector_memory<class sized_array_memory<8> >::type * l_
        24 |       vector_memory::size_type n_
        28 |       vector_memory::size_type capacity_
           | [sizeof=32, dsize=32, align=8,
           |  nvsize=32, nvalign=8]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55f32ddd7cf0 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'NameDB *'
|-CXXRecordDecl 0x55f32ddd7ef8 prev 0x55f32ddd7cf0 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55f32ddd9040 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<NameDB *>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x55f32ddd8ff0 'typename array_memory<NameDB *>::type' sugar
|   `-TypedefType 0x55f32ddd8fd0 'conditional<true, sized_array_memory<8>, typed_array_memory<NameDB *> >::type' sugar
|     |-Typedef 0x55f32ddd8e80 'type'
|     `-SubstTemplateTypeParmType 0x55f32ddd8ca0 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x55f32da4f230 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f32da4f1d8 'T'
|       `-RecordType 0x55f32ddd87f0 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x55f32ddd8708 'sized_array_memory'
|-FieldDecl 0x55f32dddcc80 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<NameDB *>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x55f32dddccd0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55f32dddcd08 <line:118:5, col:15> col:15 value_type 'NameDB *':'NameDB *'
| `-SubstTemplateTypeParmType 0x55f32ddd7f90 'NameDB *' sugar
|   |-TemplateTypeParmType 0x55f32da87140 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55f32da870e8 'T'
|   `-PointerType 0x55f32ddd5e80 'NameDB *'
|     `-RecordType 0x55f32ddd45f0 'NameDB'
|       `-CXXRecord 0x55f32dde3348 'NameDB'
|-TypedefDecl 0x55f32dddcdc8 <line:119:5, col:16> col:16 reference 'NameDB *&'
| `-LValueReferenceType 0x55f32dddcd90 'NameDB *&'
|   `-SubstTemplateTypeParmType 0x55f32ddd7f90 'NameDB *' sugar
|     |-TemplateTypeParmType 0x55f32da87140 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55f32da870e8 'T'
|     `-PointerType 0x55f32ddd5e80 'NameDB *'
|       `-RecordType 0x55f32ddd45f0 'NameDB'
|         `-CXXRecord 0x55f32dde3348 'NameDB'
|-TypedefDecl 0x55f32dddce88 <line:120:5, col:22> col:22 const_reference 'NameDB *const &'
| `-LValueReferenceType 0x55f32dddce50 'NameDB *const &'
|   `-QualType 0x55f32ddd7f91 'NameDB *const' const
|     `-SubstTemplateTypeParmType 0x55f32ddd7f90 'NameDB *' sugar
|       |-TemplateTypeParmType 0x55f32da87140 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f32da870e8 'T'
|       `-PointerType 0x55f32ddd5e80 'NameDB *'
|         `-RecordType 0x55f32ddd45f0 'NameDB'
|           `-CXXRecord 0x55f32dde3348 'NameDB'
|-TypedefDecl 0x55f32dddcf48 <line:121:5, col:16> col:16 pointer 'NameDB **'
| `-PointerType 0x55f32dddcf10 'NameDB **'
|   `-SubstTemplateTypeParmType 0x55f32ddd7f90 'NameDB *' sugar
|     |-TemplateTypeParmType 0x55f32da87140 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55f32da870e8 'T'
|     `-PointerType 0x55f32ddd5e80 'NameDB *'
|       `-RecordType 0x55f32ddd45f0 'NameDB'
|         `-CXXRecord 0x55f32dde3348 'NameDB'
|-TypedefDecl 0x55f32dddd008 <line:122:5, col:22> col:22 const_pointer 'NameDB *const *'
| `-PointerType 0x55f32dddcfd0 'NameDB *const *'
|   `-QualType 0x55f32ddd7f91 'NameDB *const' const
|     `-SubstTemplateTypeParmType 0x55f32ddd7f90 'NameDB *' sugar
|       |-TemplateTypeParmType 0x55f32da87140 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f32da870e8 'T'
|       `-PointerType 0x55f32ddd5e80 'NameDB *'
|         `-RecordType 0x55f32ddd45f0 'NameDB'
|           `-CXXRecord 0x55f32dde3348 'NameDB'
|-TypedefDecl 0x55f32ddddbe0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<NameDB *>::type':'NameDB *'
| `-ElaboratedType 0x55f32ddddb90 'typename fast_argument<NameDB *>::type' sugar
|   `-TypedefType 0x55f32ddddb70 'fast_argument<NameDB *, false>::type' sugar
|     |-Typedef 0x55f32ddddb00 'type'
|     `-SubstTemplateTypeParmType 0x55f32dddd8c0 'NameDB *' sugar
|       |-TemplateTypeParmType 0x55f32da5a250 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f32da5a200 'T'
|       `-PointerType 0x55f32ddd5e80 'NameDB *'
|         `-RecordType 0x55f32ddd45f0 'NameDB'
|           `-CXXRecord 0x55f32dde3348 'NameDB'
|-TypedefDecl 0x55f32ddddc48 <line:126:5, col:22> col:22 const_access_type 'NameDB *const &'
| `-LValueReferenceType 0x55f32dddce50 'NameDB *const &'
|   `-QualType 0x55f32ddd7f91 'NameDB *const' const
|     `-SubstTemplateTypeParmType 0x55f32ddd7f90 'NameDB *' sugar
|       |-TemplateTypeParmType 0x55f32da87140 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f32da870e8 'T'
|       `-PointerType 0x55f32ddd5e80 'NameDB *'
|         `-RecordType 0x55f32ddd45f0 'NameDB'
|           `-CXXRecord 0x55f32dde3348 'NameDB'
|-TypedefDecl 0x55f32ddddca0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55f32d785580 'int'
|-TypedefDecl 0x55f32ddddd08 <line:130:5, col:16> col:16 iterator 'NameDB **'
| `-PointerType 0x55f32dddcf10 'NameDB **'
|   `-SubstTemplateTypeParmType 0x55f32ddd7f90 'NameDB *' sugar
|     |-TemplateTypeParmType 0x55f32da87140 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55f32da870e8 'T'
|     `-PointerType 0x55f32ddd5e80 'NameDB *'
|       `-RecordType 0x55f32ddd45f0 'NameDB'
|         `-CXXRecord 0x55f32dde3348 'NameDB'
|-TypedefDecl 0x55f32ddddd70 <line:131:5, col:22> col:22 const_iterator 'NameDB *const *'
| `-PointerType 0x55f32dddcfd0 'NameDB *const *'
|   `-QualType 0x55f32ddd7f91 'NameDB *const' const
|     `-SubstTemplateTypeParmType 0x55f32ddd7f90 'NameDB *' sugar
|       |-TemplateTypeParmType 0x55f32da87140 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f32da870e8 'T'
|       `-PointerType 0x55f32ddd5e80 'NameDB *'
|         `-RecordType 0x55f32ddd45f0 'NameDB'
|           `-CXXRecord 0x55f32dde3348 'NameDB'
|-EnumDecl 0x55f32dddddc8 <line:134:5> col:5
| `-EnumConstantDecl 0x55f32ddddec0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<NameDB *>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55f32ddddea0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55f32da887c8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55f32da887a0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55f32da88780 <col:40> 'int' 1
|-CXXConstructorDecl 0x55f32ddddf48 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55f32ddde1d8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<NameDB *>::value_argument_type)' inline
| |-ParmVarDecl 0x55f32ddde000 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55f32ddde0a0 <col:41, col:61> col:61 v 'Vector<NameDB *>::value_argument_type':'NameDB *'
|-CXXConstructorDecl 0x55f32ddde498 <line:139:5, col:37> col:12 Vector 'void (const Vector<NameDB *> &)' inline
| `-ParmVarDecl 0x55f32ddde380 <col:19, col:36> col:36 x 'const Vector<NameDB *> &'
|-CXXConstructorDecl 0x55f32ddde758 <line:141:5, col:32> col:12 Vector 'void (Vector<NameDB *> &&)' inline
| `-ParmVarDecl 0x55f32ddde640 <col:19, col:31> col:31 x 'Vector<NameDB *> &&'
|-CXXMethodDecl 0x55f32dddeaa0 <line:144:5, col:51> col:23 operator= 'Vector<NameDB *> &(const Vector<NameDB *> &)' inline
| `-ParmVarDecl 0x55f32ddde980 <col:33, col:50> col:50 x 'const Vector<NameDB *> &'
|-CXXMethodDecl 0x55f32dddedb0 <line:146:5, col:46> col:23 operator= 'Vector<NameDB *> &(Vector<NameDB *> &&)' inline
| `-ParmVarDecl 0x55f32dddec90 <col:33, col:45> col:45 x 'Vector<NameDB *> &&'
|-CXXMethodDecl 0x55f32dddf0a0 <line:148:5, col:70> col:23 assign 'Vector<NameDB *> &(Vector::size_type, Vector<NameDB *>::value_argument_type)' inline
| |-ParmVarDecl 0x55f32dddeee8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55f32dddef60 <col:43, col:69> col:63 v 'Vector<NameDB *>::value_argument_type':'NameDB *'
|-CXXMethodDecl 0x55f32dddf1f8 <line:150:5, col:55> col:49 begin 'Vector<NameDB *>::iterator ()'
| |-NoInlineAttr 0x55f32dddf2d8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f32dddf330 <col:30> Inherited
|-CXXMethodDecl 0x55f32dddf378 <line:151:5, col:53> col:49 end 'Vector<NameDB *>::iterator ()'
| |-NoInlineAttr 0x55f32dddf428 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f32dddf480 <col:30> Inherited
|-CXXMethodDecl 0x55f32dddf548 <line:152:5, col:63> col:55 begin 'Vector<NameDB *>::const_iterator () const'
| |-NoInlineAttr 0x55f32dddf5f8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f32dddf650 <col:30> Inherited
|-CXXMethodDecl 0x55f32dddf698 <line:153:5, col:61> col:55 end 'Vector<NameDB *>::const_iterator () const'
| |-NoInlineAttr 0x55f32dddf748 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f32dddf7a0 <col:30> Inherited
|-CXXMethodDecl 0x55f32dddf7e8 <line:154:5, col:64> col:55 cbegin 'Vector<NameDB *>::const_iterator () const'
| |-NoInlineAttr 0x55f32dddf898 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f32dddf8f0 <col:30> Inherited
|-CXXMethodDecl 0x55f32dddf938 <line:155:5, col:62> col:55 cend 'Vector<NameDB *>::const_iterator () const'
| |-NoInlineAttr 0x55f32dddf9e8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f32dddfa40 <col:30> Inherited
|-CXXMethodDecl 0x55f32dddfa68 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55f32dddfb18 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55f32dddfbc8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55f32dddfd88 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<NameDB *>::value_argument_type)' inline
| |-ParmVarDecl 0x55f32dddfc78 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55f32dddfcf0 <col:37, col:63> col:57 v 'Vector<NameDB *>::value_argument_type':'NameDB *'
|-CXXMethodDecl 0x55f32dddfed8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55f32dddfe48 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f32dde0088 <line:163:5, col:65> col:43 operator[] 'NameDB *&(Vector::size_type)'
| |-ParmVarDecl 0x55f32dddff90 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55f32dde0140 <col:20>
| `-OptimizeNoneAttr 0x55f32dde0198 <col:30>
|-CXXMethodDecl 0x55f32dde02b8 <line:164:5, col:73> col:49 operator[] 'NameDB *const &(Vector::size_type) const'
| |-ParmVarDecl 0x55f32dde01c0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55f32dde0370 <col:20>
| `-OptimizeNoneAttr 0x55f32dde03c8 <col:30>
|-CXXMethodDecl 0x55f32dde0480 <line:165:5, col:29> col:15 at 'NameDB *&(Vector::size_type)' inline
| `-ParmVarDecl 0x55f32dde03f0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f32dde05c8 <line:166:5, col:37> col:21 at 'NameDB *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55f32dde0538 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f32dde06f8 <line:167:5, col:21> col:15 front 'NameDB *&()' inline
|-CXXMethodDecl 0x55f32dde0828 <line:168:5, col:29> col:21 front 'NameDB *const &() const' inline
|-CXXMethodDecl 0x55f32dde08f8 <line:169:5, col:20> col:15 back 'NameDB *&()' inline
|-CXXMethodDecl 0x55f32dde09c8 <line:170:5, col:28> col:21 back 'NameDB *const &() const' inline
|-CXXMethodDecl 0x55f32dde0b08 <line:172:5, col:39> col:15 unchecked_at 'NameDB *&(Vector::size_type)' inline
| `-ParmVarDecl 0x55f32dde0a78 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f32dde0c50 <line:173:5, col:47> col:21 unchecked_at 'NameDB *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55f32dde0bc0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f32dde0d98 <line:174:5, col:59> col:15 at_u 'NameDB *&(Vector::size_type)' inline
| |-ParmVarDecl 0x55f32dde0d08 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55f32dde0e50 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55f32dde0f50 <line:175:5, col:71> col:21 at_u 'NameDB *const &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55f32dde0ec0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55f32dde1008 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55f32dde10c8 <line:177:5, col:20> col:15 data 'NameDB **()' inline
|-CXXMethodDecl 0x55f32dde11c8 <line:178:5, col:28> col:21 data 'NameDB *const *() const' inline
|-CXXMethodDecl 0x55f32dde13e0 <line:180:5, col:48> col:17 push_back 'void (Vector<NameDB *>::value_argument_type)' inline
| `-ParmVarDecl 0x55f32dde1288 <col:27, col:47> col:47 v 'Vector<NameDB *>::value_argument_type':'NameDB *'
|-FunctionTemplateDecl 0x55f32dde1ba8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55f32dde1498 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<NameDB *>':'fast_argument<NameDB *, false>'
| `-CXXMethodDecl 0x55f32dde1b08 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (NameDB *&&)' inline
|   `-ParmVarDecl 0x55f32dde1a08 <col:58, col:62> col:62 v 'NameDB *&&'
|-CXXMethodDecl 0x55f32dde1c88 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55f32dde1dd8 <line:186:5, col:49> col:17 push_front 'void (Vector<NameDB *>::value_argument_type)' inline
| `-ParmVarDecl 0x55f32dde1d48 <col:28, col:48> col:48 v 'Vector<NameDB *>::value_argument_type':'NameDB *'
|-CXXMethodDecl 0x55f32dde1e90 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55f32dde20d8 <line:189:5, col:62> col:21 insert 'Vector<NameDB *>::iterator (Vector<NameDB *>::iterator, Vector<NameDB *>::value_argument_type)' inline
| |-ParmVarDecl 0x55f32dde1f50 <col:28, col:37> col:37 it 'Vector<NameDB *>::iterator':'NameDB **'
| `-ParmVarDecl 0x55f32dde1fc8 <col:41, col:61> col:61 v 'Vector<NameDB *>::value_argument_type':'NameDB *'
|-CXXMethodDecl 0x55f32dde2298 <line:190:5, col:38> col:21 erase 'Vector<NameDB *>::iterator (Vector<NameDB *>::iterator)' inline
| `-ParmVarDecl 0x55f32dde21a8 <col:27, col:36> col:36 it 'Vector<NameDB *>::iterator':'NameDB **'
|-CXXMethodDecl 0x55f32dde24e8 <line:191:5, col:49> col:21 erase 'Vector<NameDB *>::iterator (Vector<NameDB *>::iterator, Vector<NameDB *>::iterator)' inline
| |-ParmVarDecl 0x55f32dde2360 <col:27, col:36> col:36 a 'Vector<NameDB *>::iterator':'NameDB **'
| `-ParmVarDecl 0x55f32dde23d8 <col:39, col:48> col:48 b 'Vector<NameDB *>::iterator':'NameDB **'
|-CXXMethodDecl 0x55f32dde25a8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55f32dde2808 <line:195:5, col:34> col:17 swap 'void (Vector<NameDB *> &)' inline
| `-ParmVarDecl 0x55f32dde2710 <col:22, col:33> col:33 x 'Vector<NameDB *> &'
`-CXXDestructorDecl 0x55f32dde28d8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55f32dde28d8

Layout: <CGRecordLayout
  LLVMType:%class.Vector.13 = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector.13 = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f32ddd46a0 <../dummy_inc/click/nameinfo.hh:11:1, line:243:1> line:11:7 referenced class NameInfo definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55f32ddd47b8 <col:1, col:7> col:7 implicit referenced class NameInfo
|-AccessSpecDecl 0x55f32ddd4848 <col:18, col:24> col:18 public
|-CXXConstructorDecl 0x55f32ddd48d0 <line:16:5, col:14> col:5 NameInfo 'void ()'
|-CXXDestructorDecl 0x55f32ddd49c0 <line:23:5, col:15> col:5 ~NameInfo 'void ()' noexcept-unevaluated 0x55f32ddd49c0
|-CXXMethodDecl 0x55f32ddd4ac0 <line:29:5, col:35> col:17 static_initialize 'void ()' static
|-CXXMethodDecl 0x55f32ddd4b80 <line:35:5, col:32> col:17 static_cleanup 'void ()' static
|-EnumDecl 0x55f32ddd4c20 <line:38:5, line:63:5> line:38:10 DBType
| |-EnumConstantDecl 0x55f32ddd4d20 <line:39:2, col:11> col:2 T_NONE 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x55f32ddd5a60 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f32ddd4d00 <col:11> 'int' Int: 0
| |     `-IntegerLiteral 0x55f32ddd4ce0 <col:11> 'int' 0
| |-EnumConstantDecl 0x55f32ddd4db0 <line:40:2, col:19> col:2 T_SCHEDULEINFO 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x55f32ddd5a78 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f32ddd4d90 <col:19> 'int' Int: 1
| |     `-IntegerLiteral 0x55f32ddd4d70 <col:19> 'int' 1
| |-EnumConstantDecl 0x55f32ddd4e40 <line:41:2, col:17> col:2 T_ANNOTATION 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x55f32ddd5a90 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f32ddd4e20 <col:17> 'int' Int: 2
| |     `-IntegerLiteral 0x55f32ddd4e00 <col:17> 'int' 2
| |-EnumConstantDecl 0x55f32ddd4ed0 <line:42:2, col:18> col:2 T_SCRIPT_INSN 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x55f32ddd5aa8 <col:18> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f32ddd4eb0 <col:18> 'int' Int: 3
| |     `-IntegerLiteral 0x55f32ddd4e90 <col:18> 'int' 3
| |-EnumConstantDecl 0x55f32ddd4f60 <line:43:2, col:12> col:2 T_SIGNO 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x55f32ddd5ac0 <col:12> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f32ddd4f40 <col:12> 'int' Int: 4
| |     `-IntegerLiteral 0x55f32ddd4f20 <col:12> 'int' 4
| |-EnumConstantDecl 0x55f32ddd4ff0 <line:44:2, col:15> col:2 T_SPINLOCK 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x55f32ddd5ad8 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f32ddd4fd0 <col:15> 'int' Int: 5
| |     `-IntegerLiteral 0x55f32ddd4fb0 <col:15> 'int' 5
| |-EnumConstantDecl 0x55f32ddd5080 <line:45:2, col:20> col:2 T_ETHERNET_ADDR 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x55f32ddd5af0 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f32ddd5060 <col:20> 'int' Int: 16777217
| |     `-IntegerLiteral 0x55f32ddd5040 <col:20> 'int' 16777217
| |-EnumConstantDecl 0x55f32ddd5110 <line:46:2, col:14> col:2 T_IP_ADDR 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x55f32ddd5b08 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f32ddd50f0 <col:14> 'int' Int: 67108865
| |     `-IntegerLiteral 0x55f32ddd50d0 <col:14> 'int' 67108865
| |-EnumConstantDecl 0x55f32ddd51a0 <line:47:2, col:16> col:2 T_IP_PREFIX 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x55f32ddd5b20 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f32ddd5180 <col:16> 'int' Int: 67108866
| |     `-IntegerLiteral 0x55f32ddd5160 <col:16> 'int' 67108866
| |-EnumConstantDecl 0x55f32ddd5230 <line:48:2, col:15> col:2 T_IP_PROTO 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x55f32ddd5b38 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f32ddd5210 <col:15> 'int' Int: 67108867
| |     `-IntegerLiteral 0x55f32ddd51f0 <col:15> 'int' 67108867
| |-EnumConstantDecl 0x55f32ddd52c0 <line:49:2, col:20> col:2 T_IPFILTER_TYPE 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x55f32ddd5b50 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f32ddd52a0 <col:20> 'int' Int: 67108868
| |     `-IntegerLiteral 0x55f32ddd5280 <col:20> 'int' 67108868
| |-EnumConstantDecl 0x55f32ddd5350 <line:50:2, col:14> col:2 T_TCP_OPT 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x55f32ddd5b68 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f32ddd5330 <col:14> 'int' Int: 67108869
| |     `-IntegerLiteral 0x55f32ddd5310 <col:14> 'int' 67108869
| |-EnumConstantDecl 0x55f32ddd53e0 <line:51:2, col:25> col:2 T_IPREWRITER_PATTERN 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x55f32ddd5b80 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f32ddd53c0 <col:25> 'int' Int: 67108870
| |     `-IntegerLiteral 0x55f32ddd53a0 <col:25> 'int' 67108870
| |-EnumConstantDecl 0x55f32ddd5470 <line:52:2, col:16> col:2 T_ICMP_TYPE 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x55f32ddd5b98 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f32ddd5450 <col:16> 'int' Int: 67174400
| |     `-IntegerLiteral 0x55f32ddd5430 <col:16> 'int' 67174400
| |-EnumConstantDecl 0x55f32ddd5500 <line:53:2, col:16> col:2 T_ICMP_CODE 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x55f32ddd5bb0 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f32ddd54e0 <col:16> 'int' Int: 67174656
| |     `-IntegerLiteral 0x55f32ddd54c0 <col:16> 'int' 67174656
| |-EnumConstantDecl 0x55f32ddd5590 <line:54:2, col:14> col:2 T_IP_PORT 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x55f32ddd5bc8 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f32ddd5570 <col:14> 'int' Int: 67239936
| |     `-IntegerLiteral 0x55f32ddd5550 <col:14> 'int' 67239936
| |-EnumConstantDecl 0x55f32ddd5620 <line:55:2, col:15> col:2 T_TCP_PORT 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x55f32ddd5be0 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f32ddd5600 <col:15> 'int' Int: 67239942
| |     `-IntegerLiteral 0x55f32ddd55e0 <col:15> 'int' 67239942
| |-EnumConstantDecl 0x55f32ddd56b0 <line:56:2, col:15> col:2 T_UDP_PORT 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x55f32ddd5bf8 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f32ddd5690 <col:15> 'int' Int: 67239953
| |     `-IntegerLiteral 0x55f32ddd5670 <col:15> 'int' 67239953
| |-EnumConstantDecl 0x55f32ddd5740 <line:57:2, col:19> col:2 T_IP_FIELDNAME 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x55f32ddd5c10 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f32ddd5720 <col:19> 'int' Int: 67305472
| |     `-IntegerLiteral 0x55f32ddd5700 <col:19> 'int' 67305472
| |-EnumConstantDecl 0x55f32ddd57d0 <line:58:2, col:21> col:2 T_ICMP_FIELDNAME 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x55f32ddd5c28 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f32ddd57b0 <col:21> 'int' Int: 67305473
| |     `-IntegerLiteral 0x55f32ddd5790 <col:21> 'int' 67305473
| |-EnumConstantDecl 0x55f32ddd5860 <line:59:2, col:20> col:2 T_TCP_FIELDNAME 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x55f32ddd5c40 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f32ddd5840 <col:20> 'int' Int: 67305478
| |     `-IntegerLiteral 0x55f32ddd5820 <col:20> 'int' 67305478
| |-EnumConstantDecl 0x55f32ddd58f0 <line:60:2, col:20> col:2 T_UDP_FIELDNAME 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x55f32ddd5c58 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f32ddd58d0 <col:20> 'int' Int: 67305489
| |     `-IntegerLiteral 0x55f32ddd58b0 <col:20> 'int' 67305489
| |-EnumConstantDecl 0x55f32ddd5980 <line:61:2, col:15> col:2 T_IP6_ADDR 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x55f32ddd5c70 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f32ddd5960 <col:15> 'int' Int: 100663297
| |     `-IntegerLiteral 0x55f32ddd5940 <col:15> 'int' 100663297
| `-EnumConstantDecl 0x55f32ddd5a10 <line:62:2, col:17> col:2 T_IP6_PREFIX 'NameInfo::DBType'
|   `-ImplicitCastExpr 0x55f32ddd5c88 <col:17> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55f32ddd59f0 <col:17> 'int' Int: 100663298
|       `-IntegerLiteral 0x55f32ddd59d0 <col:17> 'int' 100663298
|-CXXMethodDecl 0x55f32ddd5f88 <line:85:5, line:86:35> line:85:20 used getdb 'NameDB *(uint32_t, const Element *, size_t, bool)' static
| |-ParmVarDecl 0x55f32ddd5cb0 <col:26, col:35> col:35 type 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55f32ddd5d28 <col:41, col:56> col:56 context 'const Element *'
| |-ParmVarDecl 0x55f32ddd5da0 <line:86:5, col:12> col:12 value_size 'size_t':'unsigned long'
| `-ParmVarDecl 0x55f32ddd5e18 <col:24, col:29> col:29 create 'bool'
|-CXXMethodDecl 0x55f32ddd61a8 <line:104:5, col:61> col:17 installdb 'void (NameDB *, const Element *)' static
| |-ParmVarDecl 0x55f32ddd6058 <col:27, col:35> col:35 db 'NameDB *'
| `-ParmVarDecl 0x55f32ddd60d0 <col:39, col:54> col:54 context 'const Element *'
|-CXXMethodDecl 0x55f32ddd6328 <line:112:5, col:39> col:17 used uninstalldb 'void (NameDB *)' static
| `-ParmVarDecl 0x55f32ddd6268 <col:29, col:37> col:37 db 'NameDB *'
|-CXXMethodDecl 0x55f32ddd6718 <line:127:5, line:128:65> line:127:17 used query 'bool (uint32_t, const Element *, const String &, void *, size_t)' static
| |-ParmVarDecl 0x55f32ddd63e0 <col:23, col:32> col:32 type 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55f32ddd6458 <col:38, col:53> col:53 context 'const Element *'
| |-ParmVarDecl 0x55f32ddd64d0 <line:128:9, col:23> col:23 name 'const String &'
| |-ParmVarDecl 0x55f32ddd6550 <col:29, col:35> col:35 value_store 'void *'
| `-ParmVarDecl 0x55f32ddd65c8 <col:48, col:55> col:55 value_size 'size_t':'unsigned long'
|-CXXMethodDecl 0x55f32ddd6a98 <line:147:5, line:148:46> line:147:17 query_int 'bool (uint32_t, const Element *, const String &, int32_t *)' static
| |-ParmVarDecl 0x55f32ddd67f0 <col:27, col:36> col:36 type 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55f32ddd6868 <col:42, col:57> col:57 context 'const Element *'
| |-ParmVarDecl 0x55f32ddd68e0 <line:148:6, col:20> col:20 name 'const String &'
| `-ParmVarDecl 0x55f32ddd6958 <col:26, col:35> col:35 value_store 'int32_t *'
|-CXXMethodDecl 0x55f32ddd6e18 <line:151:5, line:152:47> line:151:17 query_int 'bool (uint32_t, const Element *, const String &, uint32_t *)' static
| |-ParmVarDecl 0x55f32ddd6b68 <col:27, col:36> col:36 type 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55f32ddd6be0 <col:42, col:57> col:57 context 'const Element *'
| |-ParmVarDecl 0x55f32ddd6c58 <line:152:6, col:20> col:20 name 'const String &'
| `-ParmVarDecl 0x55f32ddd6cd0 <col:26, col:36> col:36 value_store 'uint32_t *'
|-CXXMethodDecl 0x55f32ddd7198 <line:167:5, line:168:43> line:167:19 used revquery 'String (uint32_t, const Element *, const void *, size_t)' static
| |-ParmVarDecl 0x55f32ddd6ee8 <col:28, col:37> col:37 type 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55f32ddd6f60 <col:43, col:58> col:58 context 'const Element *'
| |-ParmVarDecl 0x55f32ddd6fe0 <line:168:7, col:19> col:19 value 'const void *'
| `-ParmVarDecl 0x55f32ddd7058 <col:26, col:33> col:33 value_size 'size_t':'unsigned long'
|-CXXMethodDecl 0x55f32ddd7478 <line:182:5, line:183:24> line:182:26 revquery_int 'String (uint32_t, const Element *, int32_t)' static inline
| |-ParmVarDecl 0x55f32ddd7268 <col:39, col:48> col:48 type 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55f32ddd72e0 <col:54, col:69> col:69 context 'const Element *'
| `-ParmVarDecl 0x55f32ddd7358 <line:183:11, col:19> col:19 value 'int32_t':'int'
|-CXXMethodDecl 0x55f32ddd7878 <line:202:5, line:203:66> line:202:24 define 'bool (uint32_t, const Element *, const String &, const void *, size_t)' static inline
| |-ParmVarDecl 0x55f32ddd7540 <col:31, col:40> col:40 type 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55f32ddd75b8 <col:46, col:61> col:61 context 'const Element *'
| |-ParmVarDecl 0x55f32ddd7630 <line:203:10, col:24> col:24 name 'const String &'
| |-ParmVarDecl 0x55f32ddd76b0 <col:30, col:42> col:42 value 'const void *'
| `-ParmVarDecl 0x55f32ddd7728 <col:49, col:56> col:56 value_size 'size_t':'unsigned long'
|-CXXMethodDecl 0x55f32ddd7bf8 <line:220:5, line:221:40> line:220:24 define_int 'bool (uint32_t, const Element *, const String &, int32_t)' static inline
| |-ParmVarDecl 0x55f32ddd7950 <col:35, col:44> col:44 type 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55f32ddd79c8 <col:50, col:65> col:65 context 'const Element *'
| |-ParmVarDecl 0x55f32ddd7a40 <line:221:7, col:21> col:21 name 'const String &'
| `-ParmVarDecl 0x55f32ddd7ab8 <col:27, col:35> col:35 value 'int32_t':'int'
|-AccessSpecDecl 0x55f32ddd7cb8 <line:230:3, col:10> col:3 private
|-FieldDecl 0x55f32dde29c0 <line:232:5, col:22> col:22 _namedb_roots 'Vector<NameDB *>':'Vector<NameDB *>'
|-FieldDecl 0x55f32dde2ac0 <line:233:5, col:22> col:22 _namedbs 'Vector<NameDB *>':'Vector<NameDB *>'
|-CXXMethodDecl 0x55f32dde2b58 <line:235:5, col:73> col:20 install_dynamic_sentinel 'NameDB *()' inline
| `-CompoundStmt 0x55f32dde3330 <col:47, col:73>
|   `-ReturnStmt 0x55f32dde3320 <col:49, col:67>
|     `-CStyleCastExpr 0x55f32dde32f8 <col:56, col:67> 'NameDB *' <BitCast>
|       `-CXXThisExpr 0x55f32dde32d8 <col:67> 'NameInfo *' this
|-CXXMethodDecl 0x55f32dde2eb8 <line:236:5, col:87> col:13 namedb 'NameDB *(uint32_t, size_t, const String &, NameDB *)'
| |-ParmVarDecl 0x55f32dde2c08 <col:20, col:29> col:29 type 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55f32dde2c80 <col:35, col:42> col:42 size 'size_t':'unsigned long'
| |-ParmVarDecl 0x55f32dde2cf8 <col:48, col:62> col:62 prefix 'const String &'
| `-ParmVarDecl 0x55f32dde2d70 <col:70, col:78> col:78 installer 'NameDB *'
|-CXXConstructorDecl 0x55f32dde2fa8 <line:11:7> col:7 implicit NameInfo 'void (const NameInfo &)' inline default noexcept-unevaluated 0x55f32dde2fa8
| `-ParmVarDecl 0x55f32dde30b8 <col:7> col:7 'const NameInfo &'
`-CXXMethodDecl 0x55f32dde3158 <col:7> col:7 implicit operator= 'NameInfo &(const NameInfo &)' inline default noexcept-unevaluated 0x55f32dde3158
  `-ParmVarDecl 0x55f32dde3268 <col:7> col:7 'const NameInfo &'

Layout: <CGRecordLayout
  LLVMType:%class.NameInfo = type { %class.Vector.13, %class.Vector.13 }
  NonVirtualBaseLLVMType:%class.NameInfo = type { %class.Vector.13, %class.Vector.13 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f32de857a0 prev 0x55f32de4ed50 <../dummy_inc/click/router.hh:23:1, line:352:1> line:23:7 referenced class Router definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-CXXRecordDecl 0x55f32de85898 <col:1, col:7> col:7 implicit referenced class Router
|-AccessSpecDecl 0x55f32de85928 <col:16, col:22> col:16 public
|-CXXMethodDecl 0x55f32de85998 <line:28:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x55f32de85a58 <line:31:5, col:31> col:17 used initialized 'bool () const' inline
|-CXXMethodDecl 0x55f32de85b18 <line:32:5, col:34> col:17 handlers_ready 'bool () const' inline
|-CXXMethodDecl 0x55f32de85bd8 <line:33:5, col:27> col:17 running 'bool () const' inline
|-CXXMethodDecl 0x55f32de85c98 <line:34:5, col:25> col:17 dying 'bool () const' inline
|-EnumDecl 0x55f32de85d38 <line:37:5, col:44> col:5
| `-EnumConstantDecl 0x55f32de85e98 <col:12, col:42> col:12 STOP_RUNCOUNT 'Router::(anonymous enum at ../dummy_inc/click/router.hh:37:5)'
|   `-ConstantExpr 0x55f32de85e78 <col:28, col:42> 'int' Int: -2147483648
|     `-BinaryOperator 0x55f32de85e58 <col:28, col:42> 'int' '-'
|       |-UnaryOperator 0x55f32de85e20 <col:28, col:29> 'int' prefix '-'
|       | `-IntegerLiteral 0x55f32de85e00 <col:29> 'int' 2147483647
|       `-IntegerLiteral 0x55f32de85e38 <col:42> 'int' 1
|-CXXMethodDecl 0x55f32de85f38 <line:38:5, col:31> col:20 runcount 'int32_t () const' inline
|-CXXMethodDecl 0x55f32de860a8 <line:39:5, col:39> col:10 used adjust_runcount 'void (int32_t)'
| `-ParmVarDecl 0x55f32de85fe8 <col:26, col:34> col:34 delta 'int32_t':'int'
|-CXXMethodDecl 0x55f32de861f0 <line:40:5, col:33> col:10 set_runcount 'void (int32_t)'
| `-ParmVarDecl 0x55f32de86160 <col:23, col:31> col:31 rc 'int32_t':'int'
|-CXXMethodDecl 0x55f32de862b8 <line:41:5, col:36> col:17 please_stop_driver 'void ()' inline
|-CXXMethodDecl 0x55f32de865e0 <line:44:5, col:47> col:36 elements 'const Vector<Element *> &() const' inline
|-CXXMethodDecl 0x55f32de866a8 <line:45:5, col:28> col:16 nelements 'int () const' inline
|-CXXMethodDecl 0x55f32de86828 <line:46:5, col:36> col:21 element 'Element *(int) const' inline
| `-ParmVarDecl 0x55f32de86760 <col:29, col:33> col:33 i 'int'
|-CXXMethodDecl 0x55f32de868f0 <line:47:5, col:36> col:21 root_element 'Element *() const' inline
|-CXXMethodDecl 0x55f32de86af8 <line:48:5, col:56> col:21 used element 'Element *(const Router *, int)' static
| |-ParmVarDecl 0x55f32de869a0 <col:29, col:43> col:43 router 'const Router *'
| `-ParmVarDecl 0x55f32de86a20 <col:51, col:55> col:55 i 'int'
|-CXXMethodDecl 0x55f32de86c50 <line:50:5, col:32> col:19 ename 'const String &(int) const'
| `-ParmVarDecl 0x55f32de86bc0 <col:25, col:29> col:29 i 'int'
|-CXXMethodDecl 0x55f32de86da0 <line:51:5, col:33> col:12 ename_context 'String (int) const'
| `-ParmVarDecl 0x55f32de86d10 <col:26, col:30> col:30 i 'int'
|-CXXMethodDecl 0x55f32de86ef0 <line:52:5, col:29> col:12 elandmark 'String (int) const'
| `-ParmVarDecl 0x55f32de86e60 <col:22, col:26> col:26 i 'int'
|-CXXMethodDecl 0x55f32de87040 <line:53:5, col:41> col:19 econfiguration 'const String &(int) const'
| `-ParmVarDecl 0x55f32de86fb0 <col:34, col:38> col:38 i 'int'
|-CXXMethodDecl 0x55f32de87210 <line:54:5, col:54> col:10 set_econfiguration 'void (int, const String &)'
| |-ParmVarDecl 0x55f32de87100 <col:29, col:33> col:33 i 'int'
| `-ParmVarDecl 0x55f32de87178 <col:36, col:50> col:50 conf 'const String &'
|-CXXMethodDecl 0x55f32de87418 <line:56:5, col:63> col:14 find 'Element *(const String &, ErrorHandler *) const'
| |-ParmVarDecl 0x55f32de872d0 <col:19, col:33> col:33 name 'const String &'
| `-ParmVarDecl 0x55f32de87348 <col:39, col:60> col:53 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x55f32dec9df0 <col:60> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x55f32dec9dd0 <col:60> 'int' 0
|-CXXMethodDecl 0x55f32de876a8 <line:57:5, col:79> col:14 used find 'Element *(const String &, String, ErrorHandler *) const'
| |-ParmVarDecl 0x55f32de874d8 <col:19, col:33> col:33 name 'const String &'
| |-ParmVarDecl 0x55f32de87550 <col:39, col:46> col:46 context 'String' destroyed
| `-ParmVarDecl 0x55f32de875c8 <col:55, col:76> col:69 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x55f32dec9e28 <col:76> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x55f32dec9e08 <col:76> 'int' 0
|-CXXMethodDecl 0x55f32de87948 <line:58:5, col:87> col:14 find 'Element *(const String &, const Element *, ErrorHandler *) const'
| |-ParmVarDecl 0x55f32de87770 <col:19, col:33> col:33 name 'const String &'
| |-ParmVarDecl 0x55f32de877e8 <col:39, col:54> col:54 context 'const Element *'
| `-ParmVarDecl 0x55f32de87860 <col:63, col:84> col:77 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x55f32dec9e60 <col:84> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x55f32dec9e40 <col:84> 'int' 0
|-CXXMethodDecl 0x55f32de87ca0 <line:60:5, col:76> col:9 used visit 'int (Element *, bool, int, RouterVisitor *) const'
| |-ParmVarDecl 0x55f32de87a10 <col:15, col:24> col:24 e 'Element *'
| |-ParmVarDecl 0x55f32de87a88 <col:27, col:32> col:32 isoutput 'bool'
| |-ParmVarDecl 0x55f32de87b08 <col:42, col:46> col:46 port 'int'
| `-ParmVarDecl 0x55f32de87ba8 <col:52, col:67> col:67 visitor 'RouterVisitor *'
|-CXXMethodDecl 0x55f32de87f50 <line:61:5, col:72> col:9 visit_downstream 'int (Element *, int, RouterVisitor *) const'
| |-ParmVarDecl 0x55f32de87d70 <col:26, col:35> col:35 e 'Element *'
| |-ParmVarDecl 0x55f32de87df0 <col:38, col:42> col:42 port 'int'
| `-ParmVarDecl 0x55f32de87e68 <col:48, col:63> col:63 visitor 'RouterVisitor *'
|-CXXMethodDecl 0x55f32de881b8 <line:62:5, col:70> col:9 visit_upstream 'int (Element *, int, RouterVisitor *) const'
| |-ParmVarDecl 0x55f32de88018 <col:24, col:33> col:33 e 'Element *'
| |-ParmVarDecl 0x55f32de88098 <col:36, col:40> col:40 port 'int'
| `-ParmVarDecl 0x55f32de88110 <col:46, col:61> col:61 visitor 'RouterVisitor *'
|-CXXMethodDecl 0x55f32de88670 <line:64:5, col:126> col:9 downstream_elements 'int (Element *, int, ElementFilter *, Vector<Element *> &)'
| |-ParmVarDecl 0x55f32de88280 <col:29, col:38> col:38 e 'Element *'
| |-ParmVarDecl 0x55f32de88300 <col:41, col:45> col:45 port 'int'
| |-ParmVarDecl 0x55f32de883a8 <col:51, col:66> col:66 filter 'ElementFilter *'
| |-ParmVarDecl 0x55f32de88520 <col:74, col:92> col:92 result 'Vector<Element *> &'
| `-DeprecatedAttr 0x55f32de88730 <col:115> "" ""
|-CXXMethodDecl 0x55f32de88af0 <line:65:5, col:124> col:9 upstream_elements 'int (Element *, int, ElementFilter *, Vector<Element *> &)'
| |-ParmVarDecl 0x55f32de887b0 <col:27, col:36> col:36 e 'Element *'
| |-ParmVarDecl 0x55f32de88830 <col:39, col:43> col:43 port 'int'
| |-ParmVarDecl 0x55f32de888a8 <col:49, col:64> col:64 filter 'ElementFilter *'
| |-ParmVarDecl 0x55f32de889f0 <col:72, col:90> col:90 result 'Vector<Element *> &'
| `-DeprecatedAttr 0x55f32de88bb0 <col:113> "" ""
|-CXXMethodDecl 0x55f32de88d00 <line:67:5, col:55> col:24 flow_code_override 'const char *(int) const' inline
| `-ParmVarDecl 0x55f32de88c38 <col:43, col:47> col:47 eindex 'int'
|-CXXMethodDecl 0x55f32de88ed0 <line:68:5, col:68> col:10 set_flow_code_override 'void (int, const String &)'
| |-ParmVarDecl 0x55f32de88dc0 <col:33, col:37> col:37 eindex 'int'
| `-ParmVarDecl 0x55f32de88e38 <col:45, col:59> col:59 flow_code 'const String &'
|-CXXMethodDecl 0x55f32de890d8 <line:72:5, col:72> col:27 handler 'const Handler *(const Element *, const String &)' static
| |-ParmVarDecl 0x55f32de88f90 <col:35, col:50> col:50 e 'const Element *'
| `-ParmVarDecl 0x55f32de89008 <col:53, col:67> col:67 hname 'const String &'
|-CXXMethodDecl 0x55f32de894d8 <line:73:5, col:138> col:17 add_read_handler 'void (const Element *, const String &, ReadHandlerCallback, void *, uint32_t)' static
| |-ParmVarDecl 0x55f32de89198 <col:34, col:49> col:49 e 'const Element *'
| |-ParmVarDecl 0x55f32de89210 <col:52, col:66> col:66 hname 'const String &'
| |-ParmVarDecl 0x55f32de89288 <col:73, col:93> col:93 callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55f32de89308 <col:103, col:109> col:109 user_data 'void *'
| `-ParmVarDecl 0x55f32de89380 <col:120, col:137> col:129 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55f32dec9e98 <col:137> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55f32dec9e78 <col:137> 'int' 0
|-CXXMethodDecl 0x55f32de898e8 <line:74:5, col:140> col:17 add_write_handler 'void (const Element *, const String &, WriteHandlerCallback, void *, uint32_t)' static
| |-ParmVarDecl 0x55f32de895b0 <col:35, col:50> col:50 e 'const Element *'
| |-ParmVarDecl 0x55f32de89628 <col:53, col:67> col:67 hname 'const String &'
| |-ParmVarDecl 0x55f32de896a0 <col:74, col:95> col:95 callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55f32de89720 <col:105, col:111> col:111 user_data 'void *'
| `-ParmVarDecl 0x55f32de89798 <col:122, col:139> col:131 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55f32dec9ed0 <col:139> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55f32dec9eb0 <col:139> 'int' 0
|-CXXMethodDecl 0x55f32de89d98 <line:75:5, col:161> col:17 set_handler 'void (const Element *, const String &, uint32_t, HandlerCallback, void *, void *)' static
| |-ParmVarDecl 0x55f32de899c0 <col:29, col:44> col:44 e 'const Element *'
| |-ParmVarDecl 0x55f32de89a38 <col:47, col:61> col:61 hname 'const String &'
| |-ParmVarDecl 0x55f32de89ab0 <col:68, col:77> col:77 flags 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55f32de89b28 <col:84, col:100> col:100 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55f32de89ba8 <col:110, col:133> col:116 read_user_data 'void *' cinit
| | `-ImplicitCastExpr 0x55f32dec9f08 <col:133> 'void *' <NullToPointer>
| |   `-IntegerLiteral 0x55f32dec9ee8 <col:133> 'int' 0
| `-ParmVarDecl 0x55f32de89c28 <col:136, col:160> col:142 write_user_data 'void *' cinit
|   `-ImplicitCastExpr 0x55f32dec9f40 <col:160> 'void *' <NullToPointer>
|     `-IntegerLiteral 0x55f32dec9f20 <col:160> 'int' 0
|-CXXMethodDecl 0x55f32de8a130 <line:76:5, col:117> col:16 set_handler_flags 'int (const Element *, const String &, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x55f32de89e78 <col:34, col:49> col:49 e 'const Element *'
| |-ParmVarDecl 0x55f32de89ef0 <col:52, col:66> col:66 hname 'const String &'
| |-ParmVarDecl 0x55f32de89f68 <col:73, col:82> col:82 set_flags 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55f32de89fe0 <col:93, col:116> col:102 clear_flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55f32dec9f78 <col:116> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55f32dec9f58 <col:116> 'int' 0
|-EnumDecl 0x55f32de8a1f0 <line:78:5, col:46> col:5
| `-EnumConstantDecl 0x55f32de8a2f0 <col:12, col:35> col:12 FIRST_GLOBAL_HANDLER 'Router::(anonymous enum at ../dummy_inc/click/router.hh:78:5)'
|   `-ImplicitCastExpr 0x55f32de8a340 <col:35> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55f32de8a2d0 <col:35> 'int' Int: 1073741824
|       `-IntegerLiteral 0x55f32de8a2b0 <col:35> 'int' 1073741824
|-CXXMethodDecl 0x55f32de8a4c0 <line:79:5, col:60> col:16 hindex 'int (const Element *, const String &)' static
| |-ParmVarDecl 0x55f32de8a368 <col:23, col:38> col:38 e 'const Element *'
| `-ParmVarDecl 0x55f32de8a3e0 <col:41, col:55> col:55 hname 'const String &'
|-CXXMethodDecl 0x55f32de8a6d8 <line:80:5, col:67> col:27 handler 'const Handler *(const Router *, int)' static
| |-ParmVarDecl 0x55f32de8a580 <col:35, col:49> col:49 router 'const Router *'
| `-ParmVarDecl 0x55f32de8a600 <col:57, col:61> col:61 hindex 'int'
|-CXXMethodDecl 0x55f32de8aa08 <line:81:5, col:71> col:17 element_hindexes 'void (const Element *, Vector<int> &)' static
| |-ParmVarDecl 0x55f32de8a798 <col:34, col:49> col:49 e 'const Element *'
| `-ParmVarDecl 0x55f32de8a8f0 <col:52, col:65> col:65 result 'Vector<int> &'
|-CXXMethodDecl 0x55f32de8ab90 <line:84:5, col:43> col:11 attachment 'void *(const String &) const'
| `-ParmVarDecl 0x55f32de8aac8 <col:22, col:36> col:36 aname 'const String &'
|-CXXMethodDecl 0x55f32de8ad10 <line:85:5, col:48> col:12 force_attachment 'void *&(const String &)'
| `-ParmVarDecl 0x55f32de8ac48 <col:29, col:43> col:43 aname 'const String &'
|-CXXMethodDecl 0x55f32de8af20 <line:86:5, col:58> col:11 set_attachment 'void *(const String &, void *)'
| |-ParmVarDecl 0x55f32de8adc8 <col:26, col:40> col:40 aname 'const String &'
| `-ParmVarDecl 0x55f32de8ae48 <col:47, col:53> col:53 value 'void *'
|-CXXMethodDecl 0x55f32de8b0a8 <line:88:5, col:63> col:19 chatter_channel 'ErrorHandler *(const String &) const'
| `-ParmVarDecl 0x55f32de8afe0 <col:35, col:49> col:49 channel_name 'const String &'
|-CXXMethodDecl 0x55f32de8b1c8 <line:89:5, col:43> col:27 arena_factory 'HashMap_ArenaFactory *() const'
|-CXXMethodDecl 0x55f32de8b2b8 <line:91:5, col:40> col:25 thread_sched 'ThreadSched *() const' inline
|-CXXMethodDecl 0x55f32de8b428 <line:92:5, col:56> col:17 set_thread_sched 'void (ThreadSched *)' inline
| `-ParmVarDecl 0x55f32de8b368 <col:34, col:47> col:47 scheduler 'ThreadSched *'
|-CXXMethodDecl 0x55f32de8b5b0 <line:93:5, col:49> col:16 home_thread_id 'int (const Element *) const' inline
| `-ParmVarDecl 0x55f32de8b4e0 <col:31, col:46> col:46 e 'const Element *'
|-CXXMethodDecl 0x55f32de8b7e0 <line:94:5, col:69> col:17 set_home_thread_id 'void (const Element *, int)' inline
| |-ParmVarDecl 0x55f32de8b668 <col:36, col:51> col:51 e 'const Element *'
| `-ParmVarDecl 0x55f32de8b6e8 <col:54, col:58> col:58 home_thread 'int'
|-CXXMethodDecl 0x55f32de8b8d8 <line:98:5, col:34> col:22 name_info 'NameInfo *() const' inline
|-CXXMethodDecl 0x55f32de8b9c8 <line:99:5, col:31> col:15 force_name_info 'NameInfo *()'
|-CXXMethodDecl 0x55f32de8ba88 <line:103:5, col:35> col:12 configuration_string 'String () const'
|-CXXMethodDecl 0x55f32de8bc88 <line:104:5, col:68> col:10 unparse 'void (StringAccum &, const String &) const'
| |-ParmVarDecl 0x55f32de8bb38 <col:18, col:31> col:31 sa 'StringAccum &'
| `-ParmVarDecl 0x55f32de8bbb0 <col:35, col:65> col:49 indent 'const String &' cinit
|   `-ExprWithCleanups 0x55f32deca028 <col:58, col:65> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x55f32deca010 <col:58, col:65> 'const String' lvalue
|       `-ImplicitCastExpr 0x55f32dec9ff8 <col:58, col:65> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x55f32dec9fd8 <col:58, col:65> 'String' (CXXTemporary 0x55f32dec9fd8)
|           `-CXXTemporaryObjectExpr 0x55f32dec9fa0 <col:58, col:65> 'String' 'void ()'
|-CXXMethodDecl 0x55f32de8be58 <line:105:5, col:81> col:10 unparse_requirements 'void (StringAccum &, const String &) const'
| |-ParmVarDecl 0x55f32de8bd48 <col:31, col:44> col:44 sa 'StringAccum &'
| `-ParmVarDecl 0x55f32de8bdc0 <col:48, col:78> col:62 indent 'const String &' cinit
|   `-ExprWithCleanups 0x55f32deca0d8 <col:71, col:78> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x55f32deca0c0 <col:71, col:78> 'const String' lvalue
|       `-ImplicitCastExpr 0x55f32deca0a8 <col:71, col:78> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x55f32deca088 <col:71, col:78> 'String' (CXXTemporary 0x55f32deca088)
|           `-CXXTemporaryObjectExpr 0x55f32deca050 <col:71, col:78> 'String' 'void ()'
|-CXXMethodDecl 0x55f32de8c028 <line:106:5, col:81> col:10 unparse_declarations 'void (StringAccum &, const String &) const'
| |-ParmVarDecl 0x55f32de8bf18 <col:31, col:44> col:44 sa 'StringAccum &'
| `-ParmVarDecl 0x55f32de8bf90 <col:48, col:78> col:62 indent 'const String &' cinit
|   `-ExprWithCleanups 0x55f32deca188 <col:71, col:78> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x55f32deca170 <col:71, col:78> 'const String' lvalue
|       `-ImplicitCastExpr 0x55f32deca158 <col:71, col:78> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x55f32deca138 <col:71, col:78> 'String' (CXXTemporary 0x55f32deca138)
|           `-CXXTemporaryObjectExpr 0x55f32deca100 <col:71, col:78> 'String' 'void ()'
|-CXXMethodDecl 0x55f32de8c1f8 <line:107:5, col:80> col:10 unparse_connections 'void (StringAccum &, const String &) const'
| |-ParmVarDecl 0x55f32de8c0e8 <col:30, col:43> col:43 sa 'StringAccum &'
| `-ParmVarDecl 0x55f32de8c160 <col:47, col:77> col:61 indent 'const String &' cinit
|   `-ExprWithCleanups 0x55f32deca238 <col:70, col:77> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x55f32deca220 <col:70, col:77> 'const String' lvalue
|       `-ImplicitCastExpr 0x55f32deca208 <col:70, col:77> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x55f32deca1e8 <col:70, col:77> 'String' (CXXTemporary 0x55f32deca1e8)
|           `-CXXTemporaryObjectExpr 0x55f32deca1b0 <col:70, col:77> 'String' 'void ()'
|-CXXMethodDecl 0x55f32de8c378 <line:109:5, col:51> col:12 element_ports_string 'String (const Element *) const'
| `-ParmVarDecl 0x55f32de8c2b8 <col:33, col:48> col:48 e 'const Element *'
|-CXXConstructorDecl 0x55f32de8c598 <line:115:5, col:55> col:5 Router 'void (const String &, Master *)'
| |-ParmVarDecl 0x55f32de8c430 <col:12, col:26> col:26 configuration 'const String &'
| `-ParmVarDecl 0x55f32de8c4a8 <col:41, col:49> col:49 master 'Master *'
|-CXXDestructorDecl 0x55f32de8c698 <line:116:5, col:13> col:5 ~Router 'void ()' noexcept-unevaluated 0x55f32de8c698
|-CXXMethodDecl 0x55f32de8c7a0 <line:118:5, col:35> col:17 static_initialize 'void ()' static
|-CXXMethodDecl 0x55f32de8c860 <line:119:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x55f32de8c920 <line:121:5, col:21> col:17 use 'void ()' inline
|-CXXMethodDecl 0x55f32de8c9e0 <line:122:5, col:16> col:10 unuse 'void ()'
|-CXXMethodDecl 0x55f32de8cbd8 <line:124:5, col:65> col:10 add_requirement 'void (const String &, const String &)'
| |-ParmVarDecl 0x55f32de8ca90 <col:26, col:40> col:40 type 'const String &'
| `-ParmVarDecl 0x55f32de8cb08 <col:46, col:60> col:60 value 'const String &'
|-CXXMethodDecl 0x55f32de8cf90 <line:125:5, col:112> col:9 add_element 'int (Element *, const String &, const String &, const String &, unsigned int)'
| |-ParmVarDecl 0x55f32de8cc98 <col:21, col:30> col:30 e 'Element *'
| |-ParmVarDecl 0x55f32de8cd10 <col:33, col:47> col:47 name 'const String &'
| |-ParmVarDecl 0x55f32de8cd88 <col:53, col:67> col:67 conf 'const String &'
| |-ParmVarDecl 0x55f32de8ce00 <col:73, col:87> col:87 filename 'const String &'
| `-ParmVarDecl 0x55f32de8ce80 <col:97, col:106> col:106 lineno 'unsigned int'
|-CXXMethodDecl 0x55f32de8d2f0 <line:126:5, col:76> col:9 add_connection 'int (int, int, int, int)'
| |-ParmVarDecl 0x55f32de8d070 <col:24, col:28> col:28 from_idx 'int'
| |-ParmVarDecl 0x55f32de8d0f0 <col:38, col:42> col:42 from_port 'int'
| |-ParmVarDecl 0x55f32de8d170 <col:53, col:57> col:57 to_idx 'int'
| `-ParmVarDecl 0x55f32de8d1f0 <col:65, col:69> col:69 to_port 'int'
|-CXXMethodDecl 0x55f32de8d3d0 <line:131:5, col:37> col:20 hotswap_router 'Router *() const' inline
|-CXXMethodDecl 0x55f32de8d510 <line:132:5, col:43> col:10 set_hotswap_router 'void (Router *)'
| `-ParmVarDecl 0x55f32de8d480 <col:29, col:37> col:37 router 'Router *'
|-CXXMethodDecl 0x55f32de8d660 <line:134:5, col:38> col:9 initialize 'int (ErrorHandler *)'
| `-ParmVarDecl 0x55f32de8d5c8 <col:20, col:34> col:34 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55f32de8d868 <line:135:5, col:54> col:10 used activate 'void (bool, ErrorHandler *)'
| |-ParmVarDecl 0x55f32de8d718 <col:19, col:24> col:24 foreground 'bool'
| `-ParmVarDecl 0x55f32de8d790 <col:36, col:50> col:50 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55f32de8d9b8 <line:136:5, col:44> col:17 activate 'void (ErrorHandler *)' inline
| `-ParmVarDecl 0x55f32de8d928 <col:26, col:40> col:40 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55f32de8db00 <line:137:5, col:47> col:17 set_foreground 'void (bool)' inline
| `-ParmVarDecl 0x55f32de8da70 <col:32, col:37> col:37 foreground 'bool'
|-CXXMethodDecl 0x55f32de8dd40 <line:139:5, col:69> col:9 new_notifier_signal 'int (const char *, NotifierSignal &)'
| |-ParmVarDecl 0x55f32de8dbc0 <col:29, col:41> col:41 name 'const char *'
| `-ParmVarDecl 0x55f32de8dc68 <col:47, col:63> col:63 signal 'NotifierSignal &'
|-CXXMethodDecl 0x55f32de8dec8 <line:140:5, col:64> col:12 notifier_signal_name 'String (const atomic_uint32_t *) const'
| `-ParmVarDecl 0x55f32de8de00 <col:33, col:56> col:56 signal 'const atomic_uint32_t *'
|-CXXRecordDecl 0x55f32de8df70 <line:145:5, line:167:5> line:145:12 referenced struct Port definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55f32de8e088 <col:5, col:12> col:12 implicit referenced struct Port
| |-FieldDecl 0x55f32de8e130 <line:146:9, col:13> col:13 referenced idx 'int'
| |-FieldDecl 0x55f32de8e198 <line:147:9, col:13> col:13 referenced port 'int'
| |-CXXConstructorDecl 0x55f32de8e250 <line:149:9, line:150:9> line:149:9 used Port 'void ()'
| | `-CompoundStmt 0x55f32deca260 <col:16, line:150:9>
| |-CXXConstructorDecl 0x55f32de8e428 <line:151:9, line:153:9> line:151:9 used Port 'void (int, int)'
| | |-ParmVarDecl 0x55f32de8e310 <col:14, col:18> col:18 used i 'int'
| | |-ParmVarDecl 0x55f32de8e390 <col:21, col:25> col:25 used p 'int'
| | |-CXXCtorInitializer Field 0x55f32de8e130 'idx' 'int'
| | | `-ImplicitCastExpr 0x55f32deca2b0 <line:152:19> 'int' <LValueToRValue>
| | |   `-DeclRefExpr 0x55f32deca270 <col:19> 'int' lvalue ParmVar 0x55f32de8e310 'i' 'int'
| | |-CXXCtorInitializer Field 0x55f32de8e198 'port' 'int'
| | | `-ImplicitCastExpr 0x55f32deca330 <col:28> 'int' <LValueToRValue>
| | |   `-DeclRefExpr 0x55f32deca2f0 <col:28> 'int' lvalue ParmVar 0x55f32de8e390 'p' 'int'
| | `-CompoundStmt 0x55f32deca380 <col:31, line:153:9>
| |-CXXMethodDecl 0x55f32de8e608 <line:155:9, line:157:9> line:155:14 used operator== 'bool (const Router::Port &) const'
| | |-ParmVarDecl 0x55f32de8e518 <col:25, col:37> col:37 used x 'const Router::Port &'
| | `-CompoundStmt 0x55f32deca580 <col:46, line:157:9>
| |   `-ReturnStmt 0x55f32deca570 <line:156:13, col:46>
| |     `-BinaryOperator 0x55f32deca550 <col:20, col:46> 'bool' '&&'
| |       |-BinaryOperator 0x55f32deca450 <col:20, col:29> 'bool' '=='
| |       | |-ImplicitCastExpr 0x55f32deca420 <col:20> 'int' <LValueToRValue>
| |       | | `-MemberExpr 0x55f32deca3a0 <col:20> 'const int' lvalue ->idx 0x55f32de8e130
| |       | |   `-CXXThisExpr 0x55f32deca390 <col:20> 'const Router::Port *' implicit this
| |       | `-ImplicitCastExpr 0x55f32deca438 <col:27, col:29> 'int' <LValueToRValue>
| |       |   `-MemberExpr 0x55f32deca3f0 <col:27, col:29> 'const int' lvalue .idx 0x55f32de8e130
| |       |     `-DeclRefExpr 0x55f32deca3d0 <col:27> 'const Router::Port' lvalue ParmVar 0x55f32de8e518 'x' 'const Router::Port &'
| |       `-BinaryOperator 0x55f32deca530 <col:36, col:46> 'bool' '=='
| |         |-ImplicitCastExpr 0x55f32deca500 <col:36> 'int' <LValueToRValue>
| |         | `-MemberExpr 0x55f32deca480 <col:36> 'const int' lvalue ->port 0x55f32de8e198
| |         |   `-CXXThisExpr 0x55f32deca470 <col:36> 'const Router::Port *' implicit this
| |         `-ImplicitCastExpr 0x55f32deca518 <col:44, col:46> 'int' <LValueToRValue>
| |           `-MemberExpr 0x55f32deca4d0 <col:44, col:46> 'const int' lvalue .port 0x55f32de8e198
| |             `-DeclRefExpr 0x55f32deca4b0 <col:44> 'const Router::Port' lvalue ParmVar 0x55f32de8e518 'x' 'const Router::Port &'
| |-CXXMethodDecl 0x55f32de8e750 <line:158:9, line:160:9> line:158:14 operator!= 'bool (const Router::Port &) const'
| | |-ParmVarDecl 0x55f32de8e6c0 <col:25, col:37> col:37 used x 'const Router::Port &'
| | `-CompoundStmt 0x55f32deca788 <col:46, line:160:9>
| |   `-ReturnStmt 0x55f32deca778 <line:159:13, col:46>
| |     `-BinaryOperator 0x55f32deca758 <col:20, col:46> 'bool' '||'
| |       |-BinaryOperator 0x55f32deca658 <col:20, col:29> 'bool' '!='
| |       | |-ImplicitCastExpr 0x55f32deca628 <col:20> 'int' <LValueToRValue>
| |       | | `-MemberExpr 0x55f32deca5a8 <col:20> 'const int' lvalue ->idx 0x55f32de8e130
| |       | |   `-CXXThisExpr 0x55f32deca598 <col:20> 'const Router::Port *' implicit this
| |       | `-ImplicitCastExpr 0x55f32deca640 <col:27, col:29> 'int' <LValueToRValue>
| |       |   `-MemberExpr 0x55f32deca5f8 <col:27, col:29> 'const int' lvalue .idx 0x55f32de8e130
| |       |     `-DeclRefExpr 0x55f32deca5d8 <col:27> 'const Router::Port' lvalue ParmVar 0x55f32de8e6c0 'x' 'const Router::Port &'
| |       `-BinaryOperator 0x55f32deca738 <col:36, col:46> 'bool' '!='
| |         |-ImplicitCastExpr 0x55f32deca708 <col:36> 'int' <LValueToRValue>
| |         | `-MemberExpr 0x55f32deca688 <col:36> 'const int' lvalue ->port 0x55f32de8e198
| |         |   `-CXXThisExpr 0x55f32deca678 <col:36> 'const Router::Port *' implicit this
| |         `-ImplicitCastExpr 0x55f32deca720 <col:44, col:46> 'int' <LValueToRValue>
| |           `-MemberExpr 0x55f32deca6d8 <col:44, col:46> 'const int' lvalue .port 0x55f32de8e198
| |             `-DeclRefExpr 0x55f32deca6b8 <col:44> 'const Router::Port' lvalue ParmVar 0x55f32de8e6c0 'x' 'const Router::Port &'
| |-CXXMethodDecl 0x55f32de8e898 <line:161:9, line:163:9> line:161:14 used operator< 'bool (const Router::Port &) const'
| | |-ParmVarDecl 0x55f32de8e808 <col:24, col:36> col:36 used x 'const Router::Port &'
| | `-CompoundStmt 0x55f32decaab0 <col:45, line:163:9>
| |   `-ReturnStmt 0x55f32decaaa0 <line:162:13, col:65>
| |     `-BinaryOperator 0x55f32decaa80 <col:20, col:65> 'bool' '||'
| |       |-BinaryOperator 0x55f32deca860 <col:20, col:28> 'bool' '<'
| |       | |-ImplicitCastExpr 0x55f32deca830 <col:20> 'int' <LValueToRValue>
| |       | | `-MemberExpr 0x55f32deca7b0 <col:20> 'const int' lvalue ->idx 0x55f32de8e130
| |       | |   `-CXXThisExpr 0x55f32deca7a0 <col:20> 'const Router::Port *' implicit this
| |       | `-ImplicitCastExpr 0x55f32deca848 <col:26, col:28> 'int' <LValueToRValue>
| |       |   `-MemberExpr 0x55f32deca800 <col:26, col:28> 'const int' lvalue .idx 0x55f32de8e130
| |       |     `-DeclRefExpr 0x55f32deca7e0 <col:26> 'const Router::Port' lvalue ParmVar 0x55f32de8e808 'x' 'const Router::Port &'
| |       `-ParenExpr 0x55f32decaa60 <col:35, col:65> 'bool'
| |         `-BinaryOperator 0x55f32decaa40 <col:36, col:61> 'bool' '&&'
| |           |-BinaryOperator 0x55f32deca940 <col:36, col:45> 'bool' '=='
| |           | |-ImplicitCastExpr 0x55f32deca910 <col:36> 'int' <LValueToRValue>
| |           | | `-MemberExpr 0x55f32deca890 <col:36> 'const int' lvalue ->idx 0x55f32de8e130
| |           | |   `-CXXThisExpr 0x55f32deca880 <col:36> 'const Router::Port *' implicit this
| |           | `-ImplicitCastExpr 0x55f32deca928 <col:43, col:45> 'int' <LValueToRValue>
| |           |   `-MemberExpr 0x55f32deca8e0 <col:43, col:45> 'const int' lvalue .idx 0x55f32de8e130
| |           |     `-DeclRefExpr 0x55f32deca8c0 <col:43> 'const Router::Port' lvalue ParmVar 0x55f32de8e808 'x' 'const Router::Port &'
| |           `-BinaryOperator 0x55f32decaa20 <col:52, col:61> 'bool' '<'
| |             |-ImplicitCastExpr 0x55f32deca9f0 <col:52> 'int' <LValueToRValue>
| |             | `-MemberExpr 0x55f32deca970 <col:52> 'const int' lvalue ->port 0x55f32de8e198
| |             |   `-CXXThisExpr 0x55f32deca960 <col:52> 'const Router::Port *' implicit this
| |             `-ImplicitCastExpr 0x55f32decaa08 <col:59, col:61> 'int' <LValueToRValue>
| |               `-MemberExpr 0x55f32deca9c0 <col:59, col:61> 'const int' lvalue .port 0x55f32de8e198
| |                 `-DeclRefExpr 0x55f32deca9a0 <col:59> 'const Router::Port' lvalue ParmVar 0x55f32de8e808 'x' 'const Router::Port &'
| |-CXXMethodDecl 0x55f32de8e9e0 <line:164:9, line:166:9> line:164:14 operator<= 'bool (const Router::Port &) const'
| | |-ParmVarDecl 0x55f32de8e950 <col:25, col:37> col:37 used x 'const Router::Port &'
| | `-CompoundStmt 0x55f32decadd8 <col:46, line:166:9>
| |   `-ReturnStmt 0x55f32decadc8 <line:165:13, col:66>
| |     `-BinaryOperator 0x55f32decada8 <col:20, col:66> 'bool' '||'
| |       |-BinaryOperator 0x55f32decab88 <col:20, col:28> 'bool' '<'
| |       | |-ImplicitCastExpr 0x55f32decab58 <col:20> 'int' <LValueToRValue>
| |       | | `-MemberExpr 0x55f32decaad8 <col:20> 'const int' lvalue ->idx 0x55f32de8e130
| |       | |   `-CXXThisExpr 0x55f32decaac8 <col:20> 'const Router::Port *' implicit this
| |       | `-ImplicitCastExpr 0x55f32decab70 <col:26, col:28> 'int' <LValueToRValue>
| |       |   `-MemberExpr 0x55f32decab28 <col:26, col:28> 'const int' lvalue .idx 0x55f32de8e130
| |       |     `-DeclRefExpr 0x55f32decab08 <col:26> 'const Router::Port' lvalue ParmVar 0x55f32de8e950 'x' 'const Router::Port &'
| |       `-ParenExpr 0x55f32decad88 <col:35, col:66> 'bool'
| |         `-BinaryOperator 0x55f32decad68 <col:36, col:62> 'bool' '&&'
| |           |-BinaryOperator 0x55f32decac68 <col:36, col:45> 'bool' '=='
| |           | |-ImplicitCastExpr 0x55f32decac38 <col:36> 'int' <LValueToRValue>
| |           | | `-MemberExpr 0x55f32decabb8 <col:36> 'const int' lvalue ->idx 0x55f32de8e130
| |           | |   `-CXXThisExpr 0x55f32decaba8 <col:36> 'const Router::Port *' implicit this
| |           | `-ImplicitCastExpr 0x55f32decac50 <col:43, col:45> 'int' <LValueToRValue>
| |           |   `-MemberExpr 0x55f32decac08 <col:43, col:45> 'const int' lvalue .idx 0x55f32de8e130
| |           |     `-DeclRefExpr 0x55f32decabe8 <col:43> 'const Router::Port' lvalue ParmVar 0x55f32de8e950 'x' 'const Router::Port &'
| |           `-BinaryOperator 0x55f32decad48 <col:52, col:62> 'bool' '<='
| |             |-ImplicitCastExpr 0x55f32decad18 <col:52> 'int' <LValueToRValue>
| |             | `-MemberExpr 0x55f32decac98 <col:52> 'const int' lvalue ->port 0x55f32de8e198
| |             |   `-CXXThisExpr 0x55f32decac88 <col:52> 'const Router::Port *' implicit this
| |             `-ImplicitCastExpr 0x55f32decad30 <col:60, col:62> 'int' <LValueToRValue>
| |               `-MemberExpr 0x55f32decace8 <col:60, col:62> 'const int' lvalue .port 0x55f32de8e198
| |                 `-DeclRefExpr 0x55f32decacc8 <col:60> 'const Router::Port' lvalue ParmVar 0x55f32de8e950 'x' 'const Router::Port &'
| |-CXXConstructorDecl 0x55f32decadf0 <line:145:12> col:12 implicit constexpr Port 'void (const Router::Port &)' inline default trivial noexcept-unevaluated 0x55f32decadf0
| | `-ParmVarDecl 0x55f32decaf08 <col:12> col:12 'const Router::Port &'
| |-CXXConstructorDecl 0x55f32decafa8 <col:12> col:12 implicit constexpr Port 'void (Router::Port &&)' inline default trivial noexcept-unevaluated 0x55f32decafa8
| | `-ParmVarDecl 0x55f32decb0b8 <col:12> col:12 'Router::Port &&'
| |-CXXDestructorDecl 0x55f32decb150 <col:12> col:12 implicit referenced ~Port 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x55f32decb420 <col:12> col:12 implicit operator= 'Router::Port &(const Router::Port &)' inline default trivial noexcept-unevaluated 0x55f32decb420
| | `-ParmVarDecl 0x55f32decb528 <col:12> col:12 'const Router::Port &'
| `-CXXMethodDecl 0x55f32decb598 <col:12> col:12 implicit used operator= 'Router::Port &(Router::Port &&) noexcept' inline default trivial
|   |-ParmVarDecl 0x55f32decb6a8 <col:12> col:12 used 'Router::Port &&'
|   `-CompoundStmt 0x55f32decb9c8 <col:12>
|     |-BinaryOperator 0x55f32decb868 <col:12> 'int' lvalue '='
|     | |-MemberExpr 0x55f32decb820 <col:12> 'int' lvalue ->idx 0x55f32de8e130
|     | | `-CXXThisExpr 0x55f32decb810 <col:12> 'Router::Port *' this
|     | `-ImplicitCastExpr 0x55f32decb850 <col:12> 'int' <LValueToRValue>
|     |   `-MemberExpr 0x55f32decb7e0 <col:12> 'int' xvalue .idx 0x55f32de8e130
|     |     `-CXXStaticCastExpr 0x55f32decb7b0 <col:12> 'Router::Port' xvalue static_cast<struct Router::Port &&> <NoOp>
|     |       `-DeclRefExpr 0x55f32decb780 <col:12> 'Router::Port' lvalue ParmVar 0x55f32decb6a8 '' 'Router::Port &&'
|     |-BinaryOperator 0x55f32decb970 <col:12> 'int' lvalue '='
|     | |-MemberExpr 0x55f32decb928 <col:12> 'int' lvalue ->port 0x55f32de8e198
|     | | `-CXXThisExpr 0x55f32decb918 <col:12> 'Router::Port *' this
|     | `-ImplicitCastExpr 0x55f32decb958 <col:12> 'int' <LValueToRValue>
|     |   `-MemberExpr 0x55f32decb8e8 <col:12> 'int' xvalue .port 0x55f32de8e198
|     |     `-CXXStaticCastExpr 0x55f32decb8b8 <col:12> 'Router::Port' xvalue static_cast<struct Router::Port &&> <NoOp>
|     |       `-DeclRefExpr 0x55f32decb888 <col:12> 'Router::Port' lvalue ParmVar 0x55f32decb6a8 '' 'Router::Port &&'
|     `-ReturnStmt 0x55f32decb9b8 <col:12>
|       `-UnaryOperator 0x55f32decb9a0 <col:12> 'Router::Port' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55f32decb990 <col:12> 'Router::Port *' this
|-CXXRecordDecl 0x55f32de8eaa0 <line:169:5, line:194:5> line:169:12 referenced struct Connection definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55f32de8ebb8 <col:5, col:12> col:12 implicit referenced struct Connection
| |-FieldDecl 0x55f32de8eda8 <line:170:9, col:17> col:14 referenced p 'Router::Port [2]'
| |-CXXConstructorDecl 0x55f32de8ee60 <line:172:9, line:173:9> line:172:9 Connection 'void ()'
| | |-CXXCtorInitializer Field 0x55f32de8eda8 'p' 'Router::Port [2]'
| | | `-CXXConstructExpr 0x55f32decb128 <col:9> 'Router::Port [2]' 'void ()'
| | `-CompoundStmt 0x55f32decb260 <col:22, line:173:9>
| |-CXXConstructorDecl 0x55f32de8f198 <line:174:9, line:177:9> line:174:9 Connection 'void (int, int, int, int)'
| | |-ParmVarDecl 0x55f32de8ef20 <col:20, col:24> col:24 used from_idx 'int'
| | |-ParmVarDecl 0x55f32de8efa0 <col:34, col:38> col:38 used from_port 'int'
| | |-ParmVarDecl 0x55f32de8f020 <col:49, col:53> col:53 used to_idx 'int'
| | |-ParmVarDecl 0x55f32de8f0a0 <col:61, col:65> col:65 used to_port 'int'
| | |-CXXCtorInitializer Field 0x55f32de8eda8 'p' 'Router::Port [2]'
| | | `-CXXConstructExpr 0x55f32decb270 <col:9> 'Router::Port [2]' 'void ()'
| | `-CompoundStmt 0x55f32decbca8 <col:74, line:177:9>
| |   |-ExprWithCleanups 0x55f32decba98 <line:175:13, col:40> 'Router::Port' lvalue
| |   | `-CXXOperatorCallExpr 0x55f32decba60 <col:13, col:40> 'Router::Port' lvalue
| |   |   |-ImplicitCastExpr 0x55f32decba48 <col:18> 'Router::Port &(*)(Router::Port &&) noexcept' <FunctionToPointerDecay>
| |   |   | `-DeclRefExpr 0x55f32decb730 <col:18> 'Router::Port &(Router::Port &&) noexcept' lvalue CXXMethod 0x55f32decb598 'operator=' 'Router::Port &(Router::Port &&) noexcept'
| |   |   |-ArraySubscriptExpr 0x55f32decb340 <col:13, col:16> 'Router::Port' lvalue
| |   |   | |-ImplicitCastExpr 0x55f32decb328 <col:13> 'Router::Port *' <ArrayToPointerDecay>
| |   |   | | `-MemberExpr 0x55f32decb2d8 <col:13> 'Router::Port [2]' lvalue ->p 0x55f32de8eda8
| |   |   | |   `-CXXThisExpr 0x55f32decb2c8 <col:13> 'Router::Connection *' implicit this
| |   |   | `-IntegerLiteral 0x55f32decb308 <col:15> 'int' 0
| |   |   `-MaterializeTemporaryExpr 0x55f32decb718 <col:20, col:40> 'Router::Port' xvalue
| |   |     `-CXXTemporaryObjectExpr 0x55f32decb3e0 <col:20, col:40> 'Router::Port' 'void (int, int)'
| |   |       |-ImplicitCastExpr 0x55f32decb3b0 <col:25> 'int' <LValueToRValue>
| |   |       | `-DeclRefExpr 0x55f32decb370 <col:25> 'int' lvalue ParmVar 0x55f32de8f020 'to_idx' 'int'
| |   |       `-ImplicitCastExpr 0x55f32decb3c8 <col:33> 'int' <LValueToRValue>
| |   |         `-DeclRefExpr 0x55f32decb390 <col:33> 'int' lvalue ParmVar 0x55f32de8f0a0 'to_port' 'int'
| |   `-ExprWithCleanups 0x55f32decbc90 <line:176:13, col:44> 'Router::Port' lvalue
| |     `-CXXOperatorCallExpr 0x55f32decbc58 <col:13, col:44> 'Router::Port' lvalue
| |       |-ImplicitCastExpr 0x55f32decbc40 <col:18> 'Router::Port &(*)(Router::Port &&) noexcept' <FunctionToPointerDecay>
| |       | `-DeclRefExpr 0x55f32decbc20 <col:18> 'Router::Port &(Router::Port &&) noexcept' lvalue CXXMethod 0x55f32decb598 'operator=' 'Router::Port &(Router::Port &&) noexcept'
| |       |-ArraySubscriptExpr 0x55f32decbb28 <col:13, col:16> 'Router::Port' lvalue
| |       | |-ImplicitCastExpr 0x55f32decbb10 <col:13> 'Router::Port *' <ArrayToPointerDecay>
| |       | | `-MemberExpr 0x55f32decbac0 <col:13> 'Router::Port [2]' lvalue ->p 0x55f32de8eda8
| |       | |   `-CXXThisExpr 0x55f32decbab0 <col:13> 'Router::Connection *' implicit this
| |       | `-IntegerLiteral 0x55f32decbaf0 <col:15> 'int' 1
| |       `-MaterializeTemporaryExpr 0x55f32decbc08 <col:20, col:44> 'Router::Port' xvalue
| |         `-CXXTemporaryObjectExpr 0x55f32decbbc8 <col:20, col:44> 'Router::Port' 'void (int, int)'
| |           |-ImplicitCastExpr 0x55f32decbb98 <col:25> 'int' <LValueToRValue>
| |           | `-DeclRefExpr 0x55f32decbb58 <col:25> 'int' lvalue ParmVar 0x55f32de8ef20 'from_idx' 'int'
| |           `-ImplicitCastExpr 0x55f32decbbb0 <col:35> 'int' <LValueToRValue>
| |             `-DeclRefExpr 0x55f32decbb78 <col:35> 'int' lvalue ParmVar 0x55f32de8efa0 'from_port' 'int'
| |-CXXMethodDecl 0x55f32de8f368 <line:179:9, line:182:9> line:179:21 operator[] 'const Router::Port &(int) const'
| | |-ParmVarDecl 0x55f32de8f278 <col:32, col:36> col:36 used i 'int'
| | `-CompoundStmt 0x55f32decc268 <col:45, line:182:9>
| |   |-ParenExpr 0x55f32decc148 <line:180:13, col:169> 'void'
| |   | `-ConditionalOperator 0x55f32decc118 <col:14, col:168> 'void'
| |   |   |-CXXStaticCastExpr 0x55f32decbde8 <col:14, col:49> 'bool' static_cast<_Bool> <NoOp>
| |   |   | `-BinaryOperator 0x55f32decbdb8 <col:34, col:48> 'bool' '&&'
| |   |   |   |-BinaryOperator 0x55f32decbd20 <col:34, col:39> 'bool' '>='
| |   |   |   | |-ImplicitCastExpr 0x55f32decbd08 <col:34> 'int' <LValueToRValue>
| |   |   |   | | `-DeclRefExpr 0x55f32decbcc8 <col:34> 'int' lvalue ParmVar 0x55f32de8f278 'i' 'int'
| |   |   |   | `-IntegerLiteral 0x55f32decbce8 <col:39> 'int' 0
| |   |   |   `-BinaryOperator 0x55f32decbd98 <col:44, col:48> 'bool' '<'
| |   |   |     |-ImplicitCastExpr 0x55f32decbd80 <col:44> 'int' <LValueToRValue>
| |   |   |     | `-DeclRefExpr 0x55f32decbd40 <col:44> 'int' lvalue ParmVar 0x55f32de8f278 'i' 'int'
| |   |   |     `-IntegerLiteral 0x55f32decbd60 <col:48> 'int' 2
| |   |   |-CXXFunctionalCastExpr 0x55f32decbe48 <col:53, col:60> 'void' functional cast to void <ToVoid>
| |   |   | `-IntegerLiteral 0x55f32decbe28 <col:59> 'int' 0
| |   |   `-CallExpr 0x55f32decc078 <col:64, col:168> 'void'
| |   |     |-ImplicitCastExpr 0x55f32decc060 <col:64> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x55f32decc040 <col:64> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55f32d8255d0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
| |   |     |-ImplicitCastExpr 0x55f32decc0b8 <col:79> 'const char *' <ArrayToPointerDecay>
| |   |     | `-StringLiteral 0x55f32decbeb8 <col:79> 'const char [16]' lvalue "i >= 0 && i < 2"
| |   |     |-ImplicitCastExpr 0x55f32decc0d0 <col:98> 'const char *' <ArrayToPointerDecay>
| |   |     | `-StringLiteral 0x55f32decbee0 <col:98> 'const char [29]' lvalue "../dummy_inc/click/router.hh"
| |   |     |-ImplicitCastExpr 0x55f32decc0e8 <col:130> 'unsigned int' <IntegralCast>
| |   |     | `-IntegerLiteral 0x55f32decbf18 <col:130> 'int' 180
| |   |     `-ImplicitCastExpr 0x55f32decc100 <col:135, col:149> 'const char *' <ArrayToPointerDecay>
| |   |       `-UnaryOperator 0x55f32decc028 <col:135, col:149> 'const char [62]' lvalue prefix '__extension__' cannot overflow
| |   |         `-PredefinedExpr 0x55f32decc010 <col:149> 'const char [62]' lvalue __PRETTY_FUNCTION__
| |   |           `-StringLiteral 0x55f32decbfb8 <col:149> 'const char [62]' lvalue "const Router::Port &Router::Connection::operator[](int) const"
| |   `-ReturnStmt 0x55f32decc258 <line:181:13, col:23>
| |     `-ArraySubscriptExpr 0x55f32decc238 <col:20, col:23> 'const Router::Port' lvalue
| |       |-ImplicitCastExpr 0x55f32decc208 <col:20> 'const Router::Port *' <ArrayToPointerDecay>
| |       | `-MemberExpr 0x55f32decc178 <col:20> 'Router::Port const[2]' lvalue ->p 0x55f32de8eda8
| |       |   `-CXXThisExpr 0x55f32decc168 <col:20> 'const Router::Connection *' implicit this
| |       `-ImplicitCastExpr 0x55f32decc220 <col:22> 'int' <LValueToRValue>
| |         `-DeclRefExpr 0x55f32decc1a8 <col:22> 'int' lvalue ParmVar 0x55f32de8f278 'i' 'int'
| |-CXXMethodDecl 0x55f32de8f518 <line:183:9, line:186:9> line:183:15 operator[] 'Router::Port &(int)'
| | |-ParmVarDecl 0x55f32de8f428 <col:26, col:30> col:30 used i 'int'
| | `-CompoundStmt 0x55f32decc7e0 <col:33, line:186:9>
| |   |-ParenExpr 0x55f32decc700 <line:184:13, col:169> 'void'
| |   | `-ConditionalOperator 0x55f32decc6d0 <col:14, col:168> 'void'
| |   |   |-CXXStaticCastExpr 0x55f32decc3a8 <col:14, col:49> 'bool' static_cast<_Bool> <NoOp>
| |   |   | `-BinaryOperator 0x55f32decc378 <col:34, col:48> 'bool' '&&'
| |   |   |   |-BinaryOperator 0x55f32decc2e0 <col:34, col:39> 'bool' '>='
| |   |   |   | |-ImplicitCastExpr 0x55f32decc2c8 <col:34> 'int' <LValueToRValue>
| |   |   |   | | `-DeclRefExpr 0x55f32decc288 <col:34> 'int' lvalue ParmVar 0x55f32de8f428 'i' 'int'
| |   |   |   | `-IntegerLiteral 0x55f32decc2a8 <col:39> 'int' 0
| |   |   |   `-BinaryOperator 0x55f32decc358 <col:44, col:48> 'bool' '<'
| |   |   |     |-ImplicitCastExpr 0x55f32decc340 <col:44> 'int' <LValueToRValue>
| |   |   |     | `-DeclRefExpr 0x55f32decc300 <col:44> 'int' lvalue ParmVar 0x55f32de8f428 'i' 'int'
| |   |   |     `-IntegerLiteral 0x55f32decc320 <col:48> 'int' 2
| |   |   |-CXXFunctionalCastExpr 0x55f32decc408 <col:53, col:60> 'void' functional cast to void <ToVoid>
| |   |   | `-IntegerLiteral 0x55f32decc3e8 <col:59> 'int' 0
| |   |   `-CallExpr 0x55f32decc630 <col:64, col:168> 'void'
| |   |     |-ImplicitCastExpr 0x55f32decc618 <col:64> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x55f32decc5f8 <col:64> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55f32d8255d0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
| |   |     |-ImplicitCastExpr 0x55f32decc670 <col:79> 'const char *' <ArrayToPointerDecay>
| |   |     | `-StringLiteral 0x55f32decc478 <col:79> 'const char [16]' lvalue "i >= 0 && i < 2"
| |   |     |-ImplicitCastExpr 0x55f32decc688 <col:98> 'const char *' <ArrayToPointerDecay>
| |   |     | `-StringLiteral 0x55f32decc4a0 <col:98> 'const char [29]' lvalue "../dummy_inc/click/router.hh"
| |   |     |-ImplicitCastExpr 0x55f32decc6a0 <col:130> 'unsigned int' <IntegralCast>
| |   |     | `-IntegerLiteral 0x55f32decc4d8 <col:130> 'int' 184
| |   |     `-ImplicitCastExpr 0x55f32decc6b8 <col:135, col:149> 'const char *' <ArrayToPointerDecay>
| |   |       `-UnaryOperator 0x55f32decc5e0 <col:135, col:149> 'const char [50]' lvalue prefix '__extension__' cannot overflow
| |   |         `-PredefinedExpr 0x55f32decc5c8 <col:149> 'const char [50]' lvalue __PRETTY_FUNCTION__
| |   |           `-StringLiteral 0x55f32decc578 <col:149> 'const char [50]' lvalue "Router::Port &Router::Connection::operator[](int)"
| |   `-ReturnStmt 0x55f32decc7d0 <line:185:13, col:23>
| |     `-ArraySubscriptExpr 0x55f32decc7b0 <col:20, col:23> 'Router::Port' lvalue
| |       |-ImplicitCastExpr 0x55f32decc780 <col:20> 'Router::Port *' <ArrayToPointerDecay>
| |       | `-MemberExpr 0x55f32decc730 <col:20> 'Router::Port [2]' lvalue ->p 0x55f32de8eda8
| |       |   `-CXXThisExpr 0x55f32decc720 <col:20> 'Router::Connection *' implicit this
| |       `-ImplicitCastExpr 0x55f32decc798 <col:22> 'int' <LValueToRValue>
| |         `-DeclRefExpr 0x55f32decc760 <col:22> 'int' lvalue ParmVar 0x55f32de8f428 'i' 'int'
| |-CXXMethodDecl 0x55f32de8f6b8 <line:188:9, line:190:9> line:188:14 operator== 'bool (const Router::Connection &) const'
| | |-ParmVarDecl 0x55f32de8f5f8 <col:25, col:43> col:43 used x 'const Router::Connection &'
| | `-CompoundStmt 0x55f32deccbb8 <col:52, line:190:9>
| |   `-ReturnStmt 0x55f32deccba8 <line:189:13, col:51>
| |     `-BinaryOperator 0x55f32deccb88 <col:20, col:51> 'bool' '&&'
| |       |-CXXOperatorCallExpr 0x55f32decc9a0 <col:20, col:33> 'bool'
| |       | |-ImplicitCastExpr 0x55f32decc988 <col:25> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
| |       | | `-DeclRefExpr 0x55f32decc940 <col:25> 'bool (const Router::Port &) const' lvalue CXXMethod 0x55f32de8e608 'operator==' 'bool (const Router::Port &) const'
| |       | |-ArraySubscriptExpr 0x55f32decc878 <col:20, col:23> 'const Router::Port' lvalue
| |       | | |-ImplicitCastExpr 0x55f32decc860 <col:20> 'const Router::Port *' <ArrayToPointerDecay>
| |       | | | `-MemberExpr 0x55f32decc810 <col:20> 'Router::Port const[2]' lvalue ->p 0x55f32de8eda8
| |       | | |   `-CXXThisExpr 0x55f32decc800 <col:20> 'const Router::Connection *' implicit this
| |       | | `-IntegerLiteral 0x55f32decc840 <col:22> 'int' 0
| |       | `-ArraySubscriptExpr 0x55f32decc920 <col:28, col:33> 'const Router::Port' lvalue
| |       |   |-ImplicitCastExpr 0x55f32decc908 <col:28, col:30> 'const Router::Port *' <ArrayToPointerDecay>
| |       |   | `-MemberExpr 0x55f32decc8b8 <col:28, col:30> 'Router::Port const[2]' lvalue .p 0x55f32de8eda8
| |       |   |   `-DeclRefExpr 0x55f32decc898 <col:28> 'const Router::Connection' lvalue ParmVar 0x55f32de8f5f8 'x' 'const Router::Connection &'
| |       |   `-IntegerLiteral 0x55f32decc8e8 <col:32> 'int' 0
| |       `-CXXOperatorCallExpr 0x55f32deccb50 <col:38, col:51> 'bool'
| |         |-ImplicitCastExpr 0x55f32deccb38 <col:43> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
| |         | `-DeclRefExpr 0x55f32deccb18 <col:43> 'bool (const Router::Port &) const' lvalue CXXMethod 0x55f32de8e608 'operator==' 'bool (const Router::Port &) const'
| |         |-ArraySubscriptExpr 0x55f32decca50 <col:38, col:41> 'const Router::Port' lvalue
| |         | |-ImplicitCastExpr 0x55f32decca38 <col:38> 'const Router::Port *' <ArrayToPointerDecay>
| |         | | `-MemberExpr 0x55f32decc9e8 <col:38> 'Router::Port const[2]' lvalue ->p 0x55f32de8eda8
| |         | |   `-CXXThisExpr 0x55f32decc9d8 <col:38> 'const Router::Connection *' implicit this
| |         | `-IntegerLiteral 0x55f32decca18 <col:40> 'int' 1
| |         `-ArraySubscriptExpr 0x55f32deccaf8 <col:46, col:51> 'const Router::Port' lvalue
| |           |-ImplicitCastExpr 0x55f32deccae0 <col:46, col:48> 'const Router::Port *' <ArrayToPointerDecay>
| |           | `-MemberExpr 0x55f32decca90 <col:46, col:48> 'Router::Port const[2]' lvalue .p 0x55f32de8eda8
| |           |   `-DeclRefExpr 0x55f32decca70 <col:46> 'const Router::Connection' lvalue ParmVar 0x55f32de8f5f8 'x' 'const Router::Connection &'
| |           `-IntegerLiteral 0x55f32deccac0 <col:50> 'int' 1
| `-CXXMethodDecl 0x55f32de8f800 <line:191:9, line:193:9> line:191:14 operator< 'bool (const Router::Connection &) const'
|   |-ParmVarDecl 0x55f32de8f770 <col:24, col:42> col:42 used x 'const Router::Connection &'
|   `-CompoundStmt 0x55f32decd150 <col:51, line:193:9>
|     `-ReturnStmt 0x55f32decd140 <line:192:13, col:69>
|       `-BinaryOperator 0x55f32decd120 <col:20, col:69> 'bool' '||'
|         |-CXXOperatorCallExpr 0x55f32deccd48 <col:20, col:32> 'bool'
|         | |-ImplicitCastExpr 0x55f32deccd30 <col:25> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
|         | | `-DeclRefExpr 0x55f32deccd10 <col:25> 'bool (const Router::Port &) const' lvalue CXXMethod 0x55f32de8e898 'operator<' 'bool (const Router::Port &) const'
|         | |-ArraySubscriptExpr 0x55f32deccc48 <col:20, col:23> 'const Router::Port' lvalue
|         | | |-ImplicitCastExpr 0x55f32deccc30 <col:20> 'const Router::Port *' <ArrayToPointerDecay>
|         | | | `-MemberExpr 0x55f32deccbe0 <col:20> 'Router::Port const[2]' lvalue ->p 0x55f32de8eda8
|         | | |   `-CXXThisExpr 0x55f32deccbd0 <col:20> 'const Router::Connection *' implicit this
|         | | `-IntegerLiteral 0x55f32deccc10 <col:22> 'int' 0
|         | `-ArraySubscriptExpr 0x55f32decccf0 <col:27, col:32> 'const Router::Port' lvalue
|         |   |-ImplicitCastExpr 0x55f32decccd8 <col:27, col:29> 'const Router::Port *' <ArrayToPointerDecay>
|         |   | `-MemberExpr 0x55f32deccc88 <col:27, col:29> 'Router::Port const[2]' lvalue .p 0x55f32de8eda8
|         |   |   `-DeclRefExpr 0x55f32deccc68 <col:27> 'const Router::Connection' lvalue ParmVar 0x55f32de8f770 'x' 'const Router::Connection &'
|         |   `-IntegerLiteral 0x55f32decccb8 <col:31> 'int' 0
|         `-ParenExpr 0x55f32decd100 <col:37, col:69> 'bool'
|           `-BinaryOperator 0x55f32decd0e0 <col:38, col:68> 'bool' '&&'
|             |-CXXOperatorCallExpr 0x55f32deccef8 <col:38, col:51> 'bool'
|             | |-ImplicitCastExpr 0x55f32deccee0 <col:43> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
|             | | `-DeclRefExpr 0x55f32deccec0 <col:43> 'bool (const Router::Port &) const' lvalue CXXMethod 0x55f32de8e608 'operator==' 'bool (const Router::Port &) const'
|             | |-ArraySubscriptExpr 0x55f32deccdf8 <col:38, col:41> 'const Router::Port' lvalue
|             | | |-ImplicitCastExpr 0x55f32deccde0 <col:38> 'const Router::Port *' <ArrayToPointerDecay>
|             | | | `-MemberExpr 0x55f32deccd90 <col:38> 'Router::Port const[2]' lvalue ->p 0x55f32de8eda8
|             | | |   `-CXXThisExpr 0x55f32deccd80 <col:38> 'const Router::Connection *' implicit this
|             | | `-IntegerLiteral 0x55f32deccdc0 <col:40> 'int' 0
|             | `-ArraySubscriptExpr 0x55f32deccea0 <col:46, col:51> 'const Router::Port' lvalue
|             |   |-ImplicitCastExpr 0x55f32decce88 <col:46, col:48> 'const Router::Port *' <ArrayToPointerDecay>
|             |   | `-MemberExpr 0x55f32decce38 <col:46, col:48> 'Router::Port const[2]' lvalue .p 0x55f32de8eda8
|             |   |   `-DeclRefExpr 0x55f32decce18 <col:46> 'const Router::Connection' lvalue ParmVar 0x55f32de8f770 'x' 'const Router::Connection &'
|             |   `-IntegerLiteral 0x55f32decce68 <col:50> 'int' 0
|             `-CXXOperatorCallExpr 0x55f32decd0a8 <col:56, col:68> 'bool'
|               |-ImplicitCastExpr 0x55f32decd090 <col:61> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x55f32decd070 <col:61> 'bool (const Router::Port &) const' lvalue CXXMethod 0x55f32de8e898 'operator<' 'bool (const Router::Port &) const'
|               |-ArraySubscriptExpr 0x55f32deccfa8 <col:56, col:59> 'const Router::Port' lvalue
|               | |-ImplicitCastExpr 0x55f32deccf90 <col:56> 'const Router::Port *' <ArrayToPointerDecay>
|               | | `-MemberExpr 0x55f32deccf40 <col:56> 'Router::Port const[2]' lvalue ->p 0x55f32de8eda8
|               | |   `-CXXThisExpr 0x55f32deccf30 <col:56> 'const Router::Connection *' implicit this
|               | `-IntegerLiteral 0x55f32deccf70 <col:58> 'int' 1
|               `-ArraySubscriptExpr 0x55f32decd050 <col:63, col:68> 'const Router::Port' lvalue
|                 |-ImplicitCastExpr 0x55f32decd038 <col:63, col:65> 'const Router::Port *' <ArrayToPointerDecay>
|                 | `-MemberExpr 0x55f32deccfe8 <col:63, col:65> 'Router::Port const[2]' lvalue .p 0x55f32de8eda8
|                 |   `-DeclRefExpr 0x55f32deccfc8 <col:63> 'const Router::Connection' lvalue ParmVar 0x55f32de8f770 'x' 'const Router::Connection &'
|                 `-IntegerLiteral 0x55f32decd018 <col:67> 'int' 1
|-AccessSpecDecl 0x55f32de8f8c0 <line:216:3, col:10> col:3 private
|-CXXRecordDecl 0x55f32de8f8e8 <line:218:5, col:11> col:11 class RouterContextErrh
|-EnumDecl 0x55f32de8f9a0 <line:220:5, line:223:5> line:220:5
| |-EnumConstantDecl 0x55f32de8fa60 <line:221:9> col:9 ROUTER_NEW 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
| |-EnumConstantDecl 0x55f32de8fab0 <col:21> col:21 referenced ROUTER_PRECONFIGURE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
| |-EnumConstantDecl 0x55f32de8fb00 <col:42> col:42 ROUTER_PREINITIALIZE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
| |-EnumConstantDecl 0x55f32de8fb50 <line:222:9> col:9 referenced ROUTER_LIVE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
| `-EnumConstantDecl 0x55f32de8fba0 <col:22> col:22 ROUTER_DEAD 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
|-EnumDecl 0x55f32de8fbf0 <line:224:5, line:227:5> line:224:5
| |-EnumConstantDecl 0x55f32de8fd08 <line:225:9, col:25> col:9 referenced RUNNING_DEAD 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
| | `-ConstantExpr 0x55f32de8fce8 <col:24, col:25> 'int' Int: -2
| |   `-UnaryOperator 0x55f32de8fcd0 <col:24, col:25> 'int' prefix '-'
| |     `-IntegerLiteral 0x55f32de8fcb0 <col:25> 'int' 2
| |-EnumConstantDecl 0x55f32de8fdb0 <col:28, col:48> col:28 RUNNING_INACTIVE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
| | `-ConstantExpr 0x55f32de8fd90 <col:47, col:48> 'int' Int: -1
| |   `-UnaryOperator 0x55f32de8fd78 <col:47, col:48> 'int' prefix '-'
| |     `-IntegerLiteral 0x55f32de8fd58 <col:48> 'int' 1
| |-EnumConstantDecl 0x55f32de8fe40 <col:51, col:71> col:51 RUNNING_PREPARING 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
| | `-ConstantExpr 0x55f32de8fe20 <col:71> 'int' Int: 0
| |   `-IntegerLiteral 0x55f32de8fe00 <col:71> 'int' 0
| |-EnumConstantDecl 0x55f32de8fed0 <line:226:9, col:30> col:9 referenced RUNNING_BACKGROUND 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
| | `-ConstantExpr 0x55f32de8feb0 <col:30> 'int' Int: 1
| |   `-IntegerLiteral 0x55f32de8fe90 <col:30> 'int' 1
| `-EnumConstantDecl 0x55f32de8ff60 <col:33, col:50> col:33 referenced RUNNING_ACTIVE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
|   `-ConstantExpr 0x55f32de8ff40 <col:50> 'int' Int: 2
|     `-IntegerLiteral 0x55f32de8ff20 <col:50> 'int' 2
|-FieldDecl 0x55f32de8ffc0 <line:229:5, col:13> col:13 referenced _master 'Master *'
|-FieldDecl 0x55f32de90020 <line:231:5, col:21> col:21 referenced _runcount 'atomic_uint32_t'
|-FieldDecl 0x55f32de90088 <line:233:5, col:18> col:18 referenced _state 'volatile int'
|-FieldDecl 0x55f32de90128 <line:234:5, col:30> col:10 _have_connections 'bool'
| `-ConstantExpr 0x55f32de90108 <col:30> 'int' Int: 1
|   `-IntegerLiteral 0x55f32de900d8 <col:30> 'int' 1
|-FieldDecl 0x55f32de901c8 <line:235:5, col:33> col:18 _conn_sorted 'bool' mutable
| `-ConstantExpr 0x55f32de901a8 <col:33> 'int' Int: 1
|   `-IntegerLiteral 0x55f32de90178 <col:33> 'int' 1
|-FieldDecl 0x55f32de90268 <line:236:5, col:32> col:10 _have_configuration 'bool'
| `-ConstantExpr 0x55f32de90248 <col:32> 'int' Int: 1
|   `-IntegerLiteral 0x55f32de90218 <col:32> 'int' 1
|-FieldDecl 0x55f32de902d0 <line:237:5, col:18> col:18 referenced _running 'volatile int'
|-FieldDecl 0x55f32de90330 <line:239:5, col:21> col:21 referenced _refcount 'atomic_uint32_t'
|-FieldDecl 0x55f32de99e60 <line:241:5, col:23> col:23 referenced _elements 'Vector<Element *>':'Vector<Element *>'
|-FieldDecl 0x55f32de99f60 <line:242:5, col:20> col:20 _element_names 'Vector<String>':'Vector<String>'
|-FieldDecl 0x55f32de9a060 <line:243:5, col:20> col:20 _element_configurations 'Vector<String>':'Vector<String>'
|-FieldDecl 0x55f32dea2660 <line:244:5, col:22> col:22 _element_landmarkids 'Vector<uint32_t>':'Vector<unsigned int>'
|-FieldDecl 0x55f32dea2770 <line:245:5, col:25> col:25 referenced _element_home_thread_ids 'Vector<int>':'Vector<int>' mutable
|-CXXRecordDecl 0x55f32dea27c0 <line:247:5, line:250:5> line:247:12 referenced struct element_landmark_t definition
| |-DefinitionData aggregate standard_layout has_mutable_fields
| | |-DefaultConstructor exists non_trivial needs_implicit
| | |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveConstructor exists simple non_trivial needs_overload_resolution
| | |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveAssignment exists simple non_trivial needs_overload_resolution
| | `-Destructor simple non_trivial needs_overload_resolution
| |-CXXRecordDecl 0x55f32dea28d8 <col:5, col:12> col:12 implicit struct element_landmark_t
| |-FieldDecl 0x55f32dea2978 <line:248:9, col:18> col:18 first_landmarkid 'uint32_t':'unsigned int'
| |-FieldDecl 0x55f32dea29d8 <line:249:9, col:16> col:16 filename 'String'
| |-CXXConstructorDecl 0x55f32dea2a70 <line:247:12> col:12 implicit element_landmark_t 'void (const Router::element_landmark_t &)' inline default noexcept-unevaluated 0x55f32dea2a70
| | `-ParmVarDecl 0x55f32dea2b88 <col:12> col:12 'const Router::element_landmark_t &'
| |-CXXConstructorDecl 0x55f32dea2c28 <col:12> col:12 implicit element_landmark_t 'void (Router::element_landmark_t &&)' inline default noexcept-unevaluated 0x55f32dea2c28
| | `-ParmVarDecl 0x55f32dea2d38 <col:12> col:12 'Router::element_landmark_t &&'
| |-CXXMethodDecl 0x55f32dea2dd8 <col:12> col:12 implicit operator= 'Router::element_landmark_t &(const Router::element_landmark_t &)' inline default noexcept-unevaluated 0x55f32dea2dd8
| | `-ParmVarDecl 0x55f32dea2ee8 <col:12> col:12 'const Router::element_landmark_t &'
| |-CXXMethodDecl 0x55f32dea2f58 <col:12> col:12 implicit operator= 'Router::element_landmark_t &(Router::element_landmark_t &&)' inline default noexcept-unevaluated 0x55f32dea2f58
| | `-ParmVarDecl 0x55f32dea3068 <col:12> col:12 'Router::element_landmark_t &&'
| `-CXXDestructorDecl 0x55f32dea30f0 <col:12> col:12 implicit ~element_landmark_t 'void ()' inline default noexcept-unevaluated 0x55f32dea30f0
|-FieldDecl 0x55f32deaf8e0 <line:251:5, col:32> col:32 _element_landmarks 'Vector<Router::element_landmark_t>':'Vector<Router::element_landmark_t>'
|-FieldDecl 0x55f32deaf940 <line:252:5, col:14> col:14 _last_landmarkid 'uint32_t':'unsigned int'
|-FieldDecl 0x55f32deafa50 <line:254:5, col:25> col:25 _element_name_sorter 'Vector<int>':'Vector<int>' mutable
|-FieldDecl 0x55f32deafda8 <line:255:5, col:40> col:17 referenced _element_gport_offset 'Vector<int> [2]'
|-FieldDecl 0x55f32deafeb0 <line:256:5, col:17> col:17 _element_configure_order 'Vector<int>':'Vector<int>'
|-FieldDecl 0x55f32deb8580 <line:258:5, col:32> col:32 _conn 'Vector<Router::Connection>':'Vector<Router::Connection>' mutable
|-FieldDecl 0x55f32deb8690 <line:259:5, col:25> col:25 _conn_output_sorter 'Vector<int>':'Vector<int>' mutable
|-FieldDecl 0x55f32deb8790 <line:261:5, col:20> col:20 _requirements 'Vector<String>':'Vector<String>'
|-FieldDecl 0x55f32deb88a0 <line:263:5, col:17> col:17 _ehandler_first_by_element 'Vector<int>':'Vector<int>'
|-FieldDecl 0x55f32deb89b0 <line:264:5, col:17> col:17 _ehandler_to_handler 'Vector<int>':'Vector<int>'
|-FieldDecl 0x55f32deb8ac0 <line:265:5, col:17> col:17 _ehandler_next 'Vector<int>':'Vector<int>'
|-FieldDecl 0x55f32deb8bd0 <line:267:5, col:17> col:17 _handler_first_by_name 'Vector<int>':'Vector<int>'
|-EnumDecl 0x55f32deb8c20 <line:269:5, col:33> col:5
| `-EnumConstantDecl 0x55f32deb8d20 <col:12, col:29> col:12 HANDLER_BUFSIZ 'Router::(anonymous enum at ../dummy_inc/click/router.hh:269:5)'
|   `-ImplicitCastExpr 0x55f32deb8d70 <col:29> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55f32deb8d00 <col:29> 'int' Int: 256
|       `-IntegerLiteral 0x55f32deb8ce0 <col:29> 'int' 256
|-FieldDecl 0x55f32deb8dd0 <line:270:5, col:15> col:15 _handler_bufs 'Handler **'
|-FieldDecl 0x55f32deb8e38 <line:271:5, col:9> col:9 _nhandlers_bufs 'int'
|-FieldDecl 0x55f32deb8ea0 <line:272:5, col:9> col:9 _free_handler 'int'
|-FieldDecl 0x55f32deb8fa0 <line:274:5, col:20> col:20 _attachment_names 'Vector<String>':'Vector<String>'
|-FieldDecl 0x55f32dec18f0 <line:275:5, col:19> col:19 _attachments 'Vector<void *>':'Vector<void *>'
|-FieldDecl 0x55f32dec1950 <line:277:5, col:14> col:14 referenced _root_element 'Element *'
|-FieldDecl 0x55f32dec19b0 <line:278:5, col:12> col:12 _configuration 'String'
|-CXXRecordDecl 0x55f32dec1a00 <line:280:5, line:290:5> line:280:12 referenced struct notifier_signals_t definition
| |-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| | |-DefaultConstructor
| | |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveConstructor exists simple non_trivial needs_overload_resolution
| | |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveAssignment exists simple non_trivial needs_overload_resolution
| | `-Destructor simple non_trivial needs_overload_resolution
| |-CXXRecordDecl 0x55f32dec1b18 <col:5, col:12> col:12 implicit referenced struct notifier_signals_t
| |-EnumDecl 0x55f32dec1ba8 <line:281:9, col:32> col:9
| | `-EnumConstantDecl 0x55f32dec1cb0 <col:16, col:27> col:16 referenced capacity 'Router::notifier_signals_t::(anonymous enum at ../dummy_inc/click/router.hh:281:9)'
| |   `-ImplicitCastExpr 0x55f32dec1d00 <col:27> 'unsigned int' <IntegralCast>
| |     `-ConstantExpr 0x55f32dec1c90 <col:27> 'int' Int: 4096
| |       `-IntegerLiteral 0x55f32dec1c70 <col:27> 'int' 4096
| |-FieldDecl 0x55f32dec1d28 <line:282:9, col:16> col:16 name 'String'
| |-FieldDecl 0x55f32dec1d90 <line:283:9, col:13> col:13 nsig 'int'
| |-FieldDecl 0x55f32dec1f88 <line:284:9, col:42> col:25 referenced sig 'atomic_uint32_t [128]'
| |-FieldDecl 0x55f32dec2018 <line:285:9, col:29> col:29 next 'Router::notifier_signals_t *'
| |-CXXConstructorDecl 0x55f32dec21d8 <line:286:9, line:289:9> line:286:9 notifier_signals_t 'void (const String &, Router::notifier_signals_t *)'
| | |-ParmVarDecl 0x55f32dec2078 <col:28, col:42> col:42 used n 'const String &'
| | |-ParmVarDecl 0x55f32dec20f0 <col:45, col:65> col:65 used nx 'Router::notifier_signals_t *'
| | |-CXXCtorInitializer Field 0x55f32dec1d28 'name' 'String'
| | | `-CXXConstructExpr 0x55f32decd1a8 <line:287:15, col:21> 'String' 'void (const String &)'
| | |   `-DeclRefExpr 0x55f32decd168 <col:20> 'const String' lvalue ParmVar 0x55f32dec2078 'n' 'const String &'
| | |-CXXCtorInitializer Field 0x55f32dec1d90 'nsig' 'int'
| | | `-IntegerLiteral 0x55f32decd200 <col:29> 'int' 0
| | |-CXXCtorInitializer Field 0x55f32dec1f88 'sig' 'atomic_uint32_t [128]'
| | | `-CXXConstructExpr 0x55f32decd2e8 <line:286:9> 'atomic_uint32_t [128]' 'void () noexcept'
| | |-CXXCtorInitializer Field 0x55f32dec2018 'next' 'Router::notifier_signals_t *'
| | | `-ImplicitCastExpr 0x55f32decd2a8 <line:287:38> 'Router::notifier_signals_t *' <LValueToRValue>
| | |   `-DeclRefExpr 0x55f32decd268 <col:38> 'Router::notifier_signals_t *' lvalue ParmVar 0x55f32dec20f0 'nx' 'Router::notifier_signals_t *'
| | `-CompoundStmt 0x55f32decd578 <col:42, line:289:9>
| |   `-CallExpr 0x55f32decd528 <line:288:13, col:43> 'void *'
| |     |-ImplicitCastExpr 0x55f32decd510 <col:13> 'void *(*)(void *, int, size_t) throw()' <FunctionToPointerDecay>
| |     | `-DeclRefExpr 0x55f32decd4f0 <col:13> 'void *(void *, int, size_t) throw()' lvalue Function 0x55f32d9e98e8 'memset' 'void *(void *, int, size_t) throw()'
| |     |-ImplicitCastExpr 0x55f32decd560 <col:20, col:26> 'void *' <BitCast>
| |     | `-UnaryOperator 0x55f32decd438 <col:20, col:26> 'atomic_uint32_t *' prefix '&' cannot overflow
| |     |   `-ArraySubscriptExpr 0x55f32decd418 <col:21, col:26> 'atomic_uint32_t' lvalue
| |     |     |-ImplicitCastExpr 0x55f32decd400 <col:21> 'atomic_uint32_t *' <ArrayToPointerDecay>
| |     |     | `-MemberExpr 0x55f32decd3b0 <col:21> 'atomic_uint32_t [128]' lvalue ->sig 0x55f32dec1f88
| |     |     |   `-CXXThisExpr 0x55f32decd3a0 <col:21> 'Router::notifier_signals_t *' implicit this
| |     |     `-IntegerLiteral 0x55f32decd3e0 <col:25> 'int' 0
| |     |-IntegerLiteral 0x55f32decd450 <col:29> 'int' 0
| |     `-UnaryExprOrTypeTraitExpr 0x55f32decd4d0 <col:32, col:42> 'unsigned long' sizeof
| |       `-ParenExpr 0x55f32decd4b0 <col:38, col:42> 'atomic_uint32_t [128]' lvalue
| |         `-MemberExpr 0x55f32decd480 <col:39> 'atomic_uint32_t [128]' lvalue ->sig 0x55f32dec1f88 non_odr_use_unevaluated
| |           `-CXXThisExpr 0x55f32decd470 <col:39> 'Router::notifier_signals_t *' implicit this
| |-CXXConstructorDecl 0x55f32dec22b8 <line:280:12> col:12 implicit notifier_signals_t 'void (const Router::notifier_signals_t &)' inline default noexcept-unevaluated 0x55f32dec22b8
| | `-ParmVarDecl 0x55f32dec23c8 <col:12> col:12 'const Router::notifier_signals_t &'
| |-CXXConstructorDecl 0x55f32dec2468 <col:12> col:12 implicit notifier_signals_t 'void (Router::notifier_signals_t &&)' inline default noexcept-unevaluated 0x55f32dec2468
| | `-ParmVarDecl 0x55f32dec2578 <col:12> col:12 'Router::notifier_signals_t &&'
| |-CXXMethodDecl 0x55f32dec2618 <col:12> col:12 implicit operator= 'Router::notifier_signals_t &(const Router::notifier_signals_t &)' inline default noexcept-unevaluated 0x55f32dec2618
| | `-ParmVarDecl 0x55f32dec2728 <col:12> col:12 'const Router::notifier_signals_t &'
| |-CXXMethodDecl 0x55f32dec2798 <col:12> col:12 implicit operator= 'Router::notifier_signals_t &(Router::notifier_signals_t &&)' inline default noexcept-unevaluated 0x55f32dec2798
| | `-ParmVarDecl 0x55f32dec28a8 <col:12> col:12 'Router::notifier_signals_t &&'
| `-CXXDestructorDecl 0x55f32dec2930 <col:12> col:12 implicit ~notifier_signals_t 'void ()' inline default noexcept-unevaluated 0x55f32dec2930
|-FieldDecl 0x55f32dec2a20 <line:291:5, col:25> col:25 _notifier_signals 'Router::notifier_signals_t *'
|-FieldDecl 0x55f32dec2a80 <line:292:5, col:27> col:27 referenced _arena_factory 'HashMap_ArenaFactory *'
|-FieldDecl 0x55f32dec2ae0 <line:293:5, col:13> col:13 referenced _hotswap_router 'Router *'
|-FieldDecl 0x55f32dec2b40 <line:294:5, col:18> col:18 referenced _thread_sched 'ThreadSched *'
|-FieldDecl 0x55f32dec2ba0 <line:295:5, col:23> col:23 referenced _name_info 'NameInfo *' mutable
|-FieldDecl 0x55f32dec2cb0 <line:296:5, col:17> col:17 _flow_code_override_eindex 'Vector<int>':'Vector<int>'
|-FieldDecl 0x55f32dec2db0 <line:297:5, col:20> col:20 referenced _flow_code_override 'Vector<String>':'Vector<String>'
|-FieldDecl 0x55f32dec2e10 <line:299:5, col:13> col:13 _next_router 'Router *'
|-CXXConstructorDecl 0x55f32dec2f58 <line:305:5, col:25> col:5 Router 'void (const Router &)'
| `-ParmVarDecl 0x55f32dec2e98 <col:12, col:24> col:25 'const Router &'
|-CXXMethodDecl 0x55f32dec3108 <line:306:5, col:36> col:13 operator= 'Router &(const Router &)'
| `-ParmVarDecl 0x55f32dec3018 <col:23, col:35> col:36 'const Router &'
|-CXXMethodDecl 0x55f32dec3250 <line:308:5, col:49> col:17 remove_connection 'Router::Connection *(Router::Connection *)'
| `-ParmVarDecl 0x55f32dec31c0 <col:35, col:47> col:47 cp 'Router::Connection *'
|-CXXMethodDecl 0x55f32dec35f8 <line:309:5, line:310:62> line:309:10 hookup_error 'void (const Router::Port &, bool, const char *, ErrorHandler *, bool)'
| |-ParmVarDecl 0x55f32dec3308 <col:23, col:35> col:35 p 'const Router::Port &'
| |-ParmVarDecl 0x55f32dec3380 <col:38, col:43> col:43 isoutput 'bool'
| |-ParmVarDecl 0x55f32dec3400 <col:53, col:65> col:65 message 'const char *'
| |-ParmVarDecl 0x55f32dec3478 <line:310:23, col:37> col:37 errh 'ErrorHandler *'
| `-ParmVarDecl 0x55f32dec34f0 <col:43, col:57> col:48 active 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55f32deca250 <col:57> 'bool' false
|-CXXMethodDecl 0x55f32dec3768 <line:311:5, col:44> col:9 check_hookup_elements 'int (ErrorHandler *)'
| `-ParmVarDecl 0x55f32dec36d0 <col:31, col:43> col:44 'ErrorHandler *'
|-CXXMethodDecl 0x55f32dec38b8 <line:312:5, col:41> col:9 check_hookup_range 'int (ErrorHandler *)'
| `-ParmVarDecl 0x55f32dec3820 <col:28, col:40> col:41 'ErrorHandler *'
|-CXXMethodDecl 0x55f32dec3a08 <line:313:5, col:48> col:9 check_hookup_completeness 'int (ErrorHandler *)'
| `-ParmVarDecl 0x55f32dec3970 <col:35, col:47> col:48 'ErrorHandler *'
|-CXXMethodDecl 0x55f32dec3b60 <line:315:5, col:48> col:17 used hard_flow_code_override 'const char *(int) const'
| `-ParmVarDecl 0x55f32dec3ac8 <col:41, col:45> col:45 e 'int'
|-CXXMethodDecl 0x55f32dec3e80 <line:316:5, col:74> col:9 processing_error 'int (const Router::Connection &, bool, int, ErrorHandler *)'
| |-ParmVarDecl 0x55f32dec3c18 <col:26, col:44> col:44 conn 'const Router::Connection &'
| |-ParmVarDecl 0x55f32dec3c90 <col:50> col:54 'bool'
| |-ParmVarDecl 0x55f32dec3d10 <col:56> col:59 'int'
| `-ParmVarDecl 0x55f32dec3d88 <col:61, col:73> col:74 'ErrorHandler *'
|-CXXMethodDecl 0x55f32dec3fe8 <line:317:5, col:42> col:9 check_push_and_pull 'int (ErrorHandler *)'
| `-ParmVarDecl 0x55f32dec3f50 <col:29, col:41> col:42 'ErrorHandler *'
|-CXXMethodDecl 0x55f32dec40b0 <line:319:5, col:26> col:10 set_connections 'void ()'
|-CXXMethodDecl 0x55f32dec4170 <line:320:5, col:29> col:10 sort_connections 'void () const'
|-CXXMethodDecl 0x55f32dec4370 <line:321:5, col:64> col:9 connindex_lower_bound 'int (bool, const Router::Port &) const'
| |-ParmVarDecl 0x55f32dec4220 <col:31, col:36> col:36 isoutput 'bool'
| `-ParmVarDecl 0x55f32dec4298 <col:46, col:58> col:58 port 'const Router::Port &'
|-CXXMethodDecl 0x55f32dec4440 <line:323:5, col:22> col:10 make_gports 'void ()'
|-CXXMethodDecl 0x55f32dec4588 <line:324:5, line:326:5> line:324:16 ngports 'int (bool) const' inline
| |-ParmVarDecl 0x55f32dec44f0 <col:24, col:29> col:29 used isout 'bool'
| `-CompoundStmt 0x55f32decd7b0 <col:42, line:326:5>
|   `-ReturnStmt 0x55f32decd7a0 <line:325:9, col:50>
|     `-ImplicitCastExpr 0x55f32decd788 <col:16, col:50> 'int':'int' <LValueToRValue>
|       `-CXXMemberCallExpr 0x55f32decd768 <col:16, col:50> 'const int':'const int' lvalue
|         `-MemberExpr 0x55f32decd738 <col:16, col:45> '<bound member function type>' .back 0x55f32dd86b08
|           `-ArraySubscriptExpr 0x55f32decd6b8 <col:16, col:43> 'const Vector<int>':'const Vector<int>' lvalue
|             |-ImplicitCastExpr 0x55f32decd688 <col:16> 'const Vector<int> *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55f32decd5a0 <col:16> 'Vector<int> const[2]' lvalue ->_element_gport_offset 0x55f32deafda8
|             |   `-CXXThisExpr 0x55f32decd590 <col:16> 'const Router *' implicit this
|             `-ImplicitCastExpr 0x55f32decd6a0 <col:38> 'bool' <LValueToRValue>
|               `-DeclRefExpr 0x55f32decd5d0 <col:38> 'bool' lvalue ParmVar 0x55f32dec44f0 'isout' 'bool'
|-CXXMethodDecl 0x55f32dec4758 <line:327:5, col:55> col:16 gport 'int (bool, const Router::Port &) const' inline
| |-ParmVarDecl 0x55f32dec4640 <col:22, col:27> col:27 isoutput 'bool'
| `-ParmVarDecl 0x55f32dec46b8 <col:37, col:49> col:49 port 'const Router::Port &'
|-CXXMethodDecl 0x55f32dec84d8 <line:329:5, col:47> col:9 used hard_home_thread_id 'int (const Element *) const'
| `-ParmVarDecl 0x55f32dec8440 <col:29, col:44> col:44 e 'const Element *'
|-CXXMethodDecl 0x55f32dec8778 <line:331:5, col:67> col:9 element_lerror 'int (ErrorHandler *, Element *, const char *, ...) const'
| |-ParmVarDecl 0x55f32dec8590 <col:24, col:36> col:37 'ErrorHandler *'
| |-ParmVarDecl 0x55f32dec8608 <col:39, col:46> col:47 'Element *'
| `-ParmVarDecl 0x55f32dec8688 <col:49, col:59> col:60 'const char *'
|-CXXMethodDecl 0x55f32dec8950 <line:334:5, col:40> col:10 initialize_handlers 'void (bool, bool)'
| |-ParmVarDecl 0x55f32dec8840 <col:30> col:34 'bool'
| `-ParmVarDecl 0x55f32dec88b8 <col:36> col:40 'bool'
|-CXXMethodDecl 0x55f32dec8ad8 <line:335:5, col:35> col:21 xhandler 'Handler *(int) const' inline
| `-ParmVarDecl 0x55f32dec8a18 <col:30> col:33 'int'
|-CXXMethodDecl 0x55f32dec8d70 <line:336:5, col:60> col:9 find_ehandler 'int (int, const String &, bool) const'
| |-ParmVarDecl 0x55f32dec8b98 <col:23> col:26 'int'
| |-ParmVarDecl 0x55f32dec8c10 <col:28, col:40> col:41 'const String &'
| `-ParmVarDecl 0x55f32dec8c88 <col:43, col:48> col:48 allow_star 'bool'
|-CXXMethodDecl 0x55f32dec8f88 <line:337:5, col:70> col:27 fetch_handler 'Handler (const Element *, const String &)' static inline
| |-ParmVarDecl 0x55f32dec8e38 <col:41, col:54> col:55 'const Element *'
| `-ParmVarDecl 0x55f32dec8eb0 <col:57, col:69> col:70 'const String &'
|-CXXMethodDecl 0x55f32dec9198 <line:338:5, col:52> col:10 store_local_handler 'void (int, Handler &)'
| |-ParmVarDecl 0x55f32dec9050 <col:30, col:34> col:34 eindex 'int'
| `-ParmVarDecl 0x55f32dec90c8 <col:42, col:51> col:51 h 'Handler &'
|-CXXMethodDecl 0x55f32dec9318 <line:339:5, col:48> col:17 store_global_handler 'void (Handler &)' static
| `-ParmVarDecl 0x55f32dec9258 <col:38, col:47> col:47 h 'Handler &'
|-CXXMethodDecl 0x55f32dec9518 <line:340:5, col:72> col:24 store_handler 'void (const Element *, Handler &)' static inline
| |-ParmVarDecl 0x55f32dec93d0 <col:38, col:53> col:53 element 'const Element *'
| `-ParmVarDecl 0x55f32dec9448 <col:62, col:71> col:71 h 'Handler &'
|-CXXMethodDecl 0x55f32dec96f0 <line:343:5, col:66> col:19 router_read_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55f32dec95d8 <col:39, col:48> col:48 e 'Element *'
| `-ParmVarDecl 0x55f32dec9658 <col:51, col:57> col:57 user_data 'void *'
|-CXXMethodDecl 0x55f32dec99d0 <line:344:5, col:103> col:16 router_write_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x55f32dec97b0 <col:37, col:51> col:51 str 'const String &'
| |-ParmVarDecl 0x55f32dec9828 <col:56, col:65> col:65 e 'Element *'
| |-ParmVarDecl 0x55f32dec98a8 <col:68, col:74> col:74 user_data 'void *'
| `-ParmVarDecl 0x55f32dec9920 <col:85, col:99> col:99 errh 'ErrorHandler *'
|-FriendDecl 0x55f32dec9ab0 <line:347:5, col:18> col:12 'class Master':'Master'
|-FriendDecl 0x55f32dec9b10 <line:348:5, col:18> col:12 'class Task':'Task'
`-FriendDecl 0x55f32dec9d90 <line:349:5, col:44> col:25
  `-CXXMethodDecl 0x55f32dec9c90 parent 0x55f32dceb170 prev 0x55f32dcfad98 <col:5, col:44> col:25 set_nports 'int (int, int)'
    |-ParmVarDecl 0x55f32dec9b70 <col:36> col:39 'int'
    `-ParmVarDecl 0x55f32dec9bf0 <col:41> col:44 'int'

Layout: <CGRecordLayout
  LLVMType:%class.Router = type { %class.Master*, %class.atomic_uint32_t, i32, i8, i32, %class.atomic_uint32_t, %class.Vector, %class.Vector.0, %class.Vector.0, %class.Vector.2, %class.Vector.5, %class.Vector.6, i32, %class.Vector.5, [2 x %class.Vector.5], %class.Vector.5, %class.Vector.8, %class.Vector.5, %class.Vector.0, %class.Vector.5, %class.Vector.5, %class.Vector.5, %class.Vector.5, %class.Handler**, i32, i32, %class.Vector.0, %class.Vector.12, %class.Element*, %class.String, %"struct.Router::notifier_signals_t"*, %class.HashMap_ArenaFactory*, %class.Router*, %class.ThreadSched*, %class.NameInfo*, %class.Vector.5, %class.Vector.0, %class.Router* }
  NonVirtualBaseLLVMType:%class.Router = type { %class.Master*, %class.atomic_uint32_t, i32, i8, i32, %class.atomic_uint32_t, %class.Vector, %class.Vector.0, %class.Vector.0, %class.Vector.2, %class.Vector.5, %class.Vector.6, i32, %class.Vector.5, [2 x %class.Vector.5], %class.Vector.5, %class.Vector.8, %class.Vector.5, %class.Vector.0, %class.Vector.5, %class.Vector.5, %class.Vector.5, %class.Vector.5, %class.Handler**, i32, i32, %class.Vector.0, %class.Vector.12, %class.Element*, %class.String, %"struct.Router::notifier_signals_t"*, %class.HashMap_ArenaFactory*, %class.Router*, %class.ThreadSched*, %class.NameInfo*, %class.Vector.5, %class.Vector.0, %class.Router* }
  IsZeroInitializable:1
  BitFields:[
    <CGBitFieldInfo Offset:0 Size:1 IsSigned:0 StorageSize:8 StorageOffset:16>
    <CGBitFieldInfo Offset:1 Size:1 IsSigned:0 StorageSize:8 StorageOffset:16>
    <CGBitFieldInfo Offset:2 Size:1 IsSigned:0 StorageSize:8 StorageOffset:16>
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f32dceb170 prev 0x55f32dceaef0 <../dummy_inc/click/element.hh:29:1, line:319:1> line:29:7 referenced class Element definition
|-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55f32dceb268 <col:1, col:7> col:7 implicit referenced class Element
|-AccessSpecDecl 0x55f32dceb2f8 <col:17, col:23> col:17 public
|-CXXConstructorDecl 0x55f32dceb358 <line:31:5, col:13> col:5 used Element 'void ()'
|-CXXDestructorDecl 0x55f32dceb448 <line:32:5, col:22> col:13 used ~Element 'void () noexcept' virtual
|-VarDecl 0x55f32dceb548 <line:33:5, col:16> col:16 nelements_allocated 'int' static
|-CXXMethodDecl 0x55f32dceb718 <line:36:5, col:42> col:18 used push 'void (int, Packet *)' virtual
| |-ParmVarDecl 0x55f32dceb5c8 <col:23, col:27> col:27 port 'int'
| `-ParmVarDecl 0x55f32dceb640 <col:33, col:41> col:41 p 'Packet *'
|-CXXMethodDecl 0x55f32dceb8a8 <line:37:5, col:70> col:21 used pull 'Packet *(int)' virtual
| |-ParmVarDecl 0x55f32dceb7e0 <col:26, col:30> col:30 port 'int'
| `-WarnUnusedResultAttr 0x55f32dceb950 <col:51> warn_unused_result ""
|-CXXMethodDecl 0x55f32dceba88 <line:38:5, col:44> col:21 simple_action 'Packet *(Packet *)' virtual
| `-ParmVarDecl 0x55f32dceb9c0 <col:35, col:43> col:43 p 'Packet *'
|-CXXMethodDecl 0x55f32dcebc28 <line:40:5, col:37> col:18 used run_task 'bool (Task *)' virtual
| `-ParmVarDecl 0x55f32dcebb68 <col:27, col:33> col:33 task 'Task *'
|-CXXMethodDecl 0x55f32dcebdc8 <line:41:5, col:40> col:18 run_timer 'void (Timer *)' virtual
| `-ParmVarDecl 0x55f32dcebd08 <col:28, col:35> col:35 timer 'Timer *'
|-EnumDecl 0x55f32dcebe70 <line:43:5, col:46> col:5
| |-EnumConstantDecl 0x55f32dcebf70 <col:12, col:26> col:12 SELECT_READ 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
| | `-ImplicitCastExpr 0x55f32dcec050 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f32dcebf50 <col:26> 'int' Int: 1
| |     `-IntegerLiteral 0x55f32dcebf30 <col:26> 'int' 1
| `-EnumConstantDecl 0x55f32dcec000 <col:29, col:44> col:29 SELECT_WRITE 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
|   `-ImplicitCastExpr 0x55f32dcec068 <col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55f32dcebfe0 <col:44> 'int' Int: 2
|       `-IntegerLiteral 0x55f32dcebfc0 <col:44> 'int' 2
|-CXXMethodDecl 0x55f32dcec1b0 <line:44:5, col:43> col:18 selected 'void (int, int)' virtual
| |-ParmVarDecl 0x55f32dcec098 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x55f32dcec118 <col:35, col:39> col:39 mask 'int'
|-CXXMethodDecl 0x55f32dcec308 <line:45:5, col:33> col:18 selected 'void (int)' virtual
| `-ParmVarDecl 0x55f32dcec278 <col:27, col:31> col:31 fd 'int'
|-CXXMethodDecl 0x55f32dcec548 <line:48:5, col:86> col:45 checked_output_push 'void (int, Packet *) const'
| |-ParmVarDecl 0x55f32dcec3c8 <col:65, col:69> col:69 port 'int'
| |-ParmVarDecl 0x55f32dcec440 <col:75, col:83> col:83 p 'Packet *'
| |-NoInlineAttr 0x55f32dcec5f8 <col:20>
| `-OptimizeNoneAttr 0x55f32dcec650 <col:30>
|-CXXMethodDecl 0x55f32dcec758 <line:49:5, col:77> col:48 checked_input_pull 'Packet *(int) const'
| |-ParmVarDecl 0x55f32dcec690 <col:67, col:71> col:71 port 'int'
| |-NoInlineAttr 0x55f32dcec800 <col:20>
| `-OptimizeNoneAttr 0x55f32dcec858 <col:30>
|-CXXMethodDecl 0x55f32dcec8a8 <line:52:5, col:46> col:25 class_name 'const char *() const' virtual pure
|-CXXMethodDecl 0x55f32dcec970 <line:54:5, col:38> col:25 port_count 'const char *() const' virtual
|-VarDecl 0x55f32dceca88 <line:55:5, col:33> col:23 PORTS_0_0 'const char []' static
|-VarDecl 0x55f32dcecb10 <line:56:5, col:33> col:23 PORTS_0_1 'const char []' static
|-VarDecl 0x55f32dcecb98 <line:57:5, col:33> col:23 PORTS_1_0 'const char []' static
|-VarDecl 0x55f32dcecc20 <line:58:5, col:33> col:23 PORTS_1_1 'const char []' static
|-VarDecl 0x55f32dcecca8 <line:59:5, col:35> col:23 PORTS_1_1X2 'const char []' static
|-CXXMethodDecl 0x55f32dcecd38 <line:61:5, col:38> col:25 processing 'const char *() const' virtual
|-VarDecl 0x55f32dcecdf8 <line:62:5, col:32> col:23 AGNOSTIC 'const char []' static
|-VarDecl 0x55f32dcece80 <line:63:5, col:28> col:23 PUSH 'const char []' static
|-VarDecl 0x55f32dcecf08 <line:64:5, col:28> col:23 PULL 'const char []' static
|-VarDecl 0x55f32dcecf90 <line:65:5, col:36> col:23 PUSH_TO_PULL 'const char []' static
|-VarDecl 0x55f32dced018 <line:66:5, col:36> col:23 PULL_TO_PUSH 'const char []' static
|-VarDecl 0x55f32dced0a0 <line:67:5, col:39> col:23 PROCESSING_A_AH 'const char []' static
|-CXXMethodDecl 0x55f32dced130 <line:69:5, col:37> col:25 flow_code 'const char *() const' virtual
|-VarDecl 0x55f32dced1f0 <line:70:5, col:37> col:23 COMPLETE_FLOW 'const char []' static
|-CXXMethodDecl 0x55f32dced280 <line:72:5, col:33> col:25 flags 'const char *() const' virtual
|-CXXMethodDecl 0x55f32dced3d0 <line:73:5, col:30> col:9 flag_value 'int (int) const'
| `-ParmVarDecl 0x55f32dced338 <col:20, col:24> col:24 flag 'int'
|-CXXMethodDecl 0x55f32dced560 <line:75:5, col:40> col:19 cast 'void *(const char *)' virtual
| `-ParmVarDecl 0x55f32dced490 <col:24, col:36> col:36 name 'const char *'
|-CXXMethodDecl 0x55f32dced810 <line:76:5, col:70> col:19 port_cast 'void *(bool, int, const char *)' virtual
| |-ParmVarDecl 0x55f32dced618 <col:29, col:34> col:34 isoutput 'bool'
| |-ParmVarDecl 0x55f32dced698 <col:44, col:48> col:48 port 'int'
| `-ParmVarDecl 0x55f32dced718 <col:54, col:66> col:66 name 'const char *'
|-EnumDecl 0x55f32dced8c8 <line:79:5, line:85:5> line:79:10 ConfigurePhase
| |-EnumConstantDecl 0x55f32dced9d0 <line:80:9, col:33> col:9 referenced CONFIGURE_PHASE_FIRST 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55f32dcedc60 <col:33> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f32dced9b0 <col:33> 'int' Int: 0
| |     `-IntegerLiteral 0x55f32dced990 <col:33> 'int' 0
| |-EnumConstantDecl 0x55f32dceda60 <line:81:9, col:32> col:9 CONFIGURE_PHASE_INFO 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55f32dcedc78 <col:32> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f32dceda40 <col:32> 'int' Int: 20
| |     `-IntegerLiteral 0x55f32dceda20 <col:32> 'int' 20
| |-EnumConstantDecl 0x55f32dcedaf0 <line:82:9, col:38> col:9 CONFIGURE_PHASE_PRIVILEGED 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55f32dcedc90 <col:38> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f32dcedad0 <col:38> 'int' Int: 90
| |     `-IntegerLiteral 0x55f32dcedab0 <col:38> 'int' 90
| |-EnumConstantDecl 0x55f32dcedb80 <line:83:9, col:35> col:9 CONFIGURE_PHASE_DEFAULT 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55f32dcedca8 <col:35> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f32dcedb60 <col:35> 'int' Int: 100
| |     `-IntegerLiteral 0x55f32dcedb40 <col:35> 'int' 100
| `-EnumConstantDecl 0x55f32dcedc10 <line:84:9, col:32> col:9 CONFIGURE_PHASE_LAST 'Element::ConfigurePhase'
|   `-ImplicitCastExpr 0x55f32dcedcc0 <col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55f32dcedbf0 <col:32> 'int' Int: 2000
|       `-IntegerLiteral 0x55f32dcedbd0 <col:32> 'int' 2000
|-CXXMethodDecl 0x55f32dcedd00 <line:86:5, col:35> col:17 configure_phase 'int () const' virtual
|-CXXMethodDecl 0x55f32dcee140 <line:88:5, col:67> col:17 configure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x55f32dcedfb0 <col:27, col:43> col:43 conf 'Vector<String> &'
| `-ParmVarDecl 0x55f32dcee028 <col:49, col:63> col:63 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55f32dcee210 <line:90:5, col:31> col:18 add_handlers 'void ()' virtual
|-CXXMethodDecl 0x55f32dcee390 <line:92:5, col:46> col:17 initialize 'int (ErrorHandler *)' virtual
| `-ParmVarDecl 0x55f32dcee2c0 <col:28, col:42> col:42 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55f32dcee598 <line:94:5, col:69> col:18 take_state 'void (Element *, ErrorHandler *)' virtual
| |-ParmVarDecl 0x55f32dcee448 <col:29, col:38> col:38 old_element 'Element *'
| `-ParmVarDecl 0x55f32dcee4c0 <col:51, col:65> col:65 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55f32dcee698 <line:95:5, col:40> col:22 hotswap_element 'Element *() const' virtual
|-EnumDecl 0x55f32dcee738 <line:97:5, line:106:5> line:97:10 referenced CleanupStage
| |-EnumConstantDecl 0x55f32dcee800 <line:98:9> col:9 referenced CLEANUP_NO_ROUTER 'Element::CleanupStage'
| |-EnumConstantDecl 0x55f32dcee890 <line:99:9, col:36> col:9 CLEANUP_BEFORE_CONFIGURE 'Element::CleanupStage'
| | `-ImplicitCastExpr 0x55f32dceeac0 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f32dcee870 <col:36> 'int' Int: 0
| |     `-DeclRefExpr 0x55f32dcee850 <col:36> 'int' EnumConstant 0x55f32dcee800 'CLEANUP_NO_ROUTER' 'Element::CleanupStage'
| |-EnumConstantDecl 0x55f32dcee8e0 <line:100:9> col:9 CLEANUP_CONFIGURE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55f32dcee930 <line:101:9> col:9 CLEANUP_CONFIGURED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55f32dcee980 <line:102:9> col:9 CLEANUP_INITIALIZE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55f32dcee9d0 <line:103:9> col:9 CLEANUP_INITIALIZED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55f32dceea20 <line:104:9> col:9 CLEANUP_ROUTER_INITIALIZED 'Element::CleanupStage'
| `-EnumConstantDecl 0x55f32dceea70 <line:105:9> col:9 CLEANUP_MANUAL 'Element::CleanupStage'
|-CXXMethodDecl 0x55f32dceeba8 <line:107:5, col:44> col:18 cleanup 'void (Element::CleanupStage)' virtual
| `-ParmVarDecl 0x55f32dceeae8 <col:26, col:39> col:39 stage 'Element::CleanupStage'
|-CXXMethodDecl 0x55f32dceec70 <line:109:5, col:42> col:24 static_initialize 'void ()' static inline
|-CXXMethodDecl 0x55f32dceed30 <line:110:5, col:39> col:24 static_cleanup 'void ()' static inline
|-CXXMethodDecl 0x55f32dceedf0 <line:113:5, col:19> col:12 name 'String () const'
|-CXXMethodDecl 0x55f32dceeeb0 <line:114:5, col:34> col:20 declaration 'String () const' virtual
|-CXXMethodDecl 0x55f32dceefc8 <line:116:5, col:29> col:20 used router 'Router *() const' inline
|-CXXMethodDecl 0x55f32dcef090 <line:117:5, col:25> col:16 used eindex 'int () const' inline
|-CXXMethodDecl 0x55f32dcef210 <line:118:5, col:34> col:16 eindex 'int (Router *) const' inline
| `-ParmVarDecl 0x55f32dcef140 <col:23, col:31> col:31 r 'Router *'
|-CXXMethodDecl 0x55f32dcef338 <line:121:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x55f32dcef538 <line:123:5, line:127:5> line:123:17 attach_router 'void (Router *, int)' inline
| |-ParmVarDecl 0x55f32dcef3e8 <col:31, col:39> col:39 used r 'Router *'
| |-ParmVarDecl 0x55f32dcef468 <col:42, col:46> col:46 used eindex 'int'
| `-CompoundStmt 0x55f32dcfce88 <col:54, line:127:5>
|   |-ParenExpr 0x55f32dcfcd38 <line:124:9, col:152> 'void'
|   | `-ConditionalOperator 0x55f32dcfcd08 <col:10, col:151> 'void'
|   |   |-CXXStaticCastExpr 0x55f32dcfc9f8 <col:10, col:38> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x55f32dcfc9d0 <col:30, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-ImplicitCastExpr 0x55f32dcfc9b8 <col:31> 'bool' <PointerToBoolean>
|   |   |     `-ImplicitCastExpr 0x55f32dcfc9a0 <col:31> 'Router *' <LValueToRValue>
|   |   |       `-MemberExpr 0x55f32dcfc970 <col:31> 'Router *' lvalue ->_router 0x55f32dcfa850
|   |   |         `-CXXThisExpr 0x55f32dcfc960 <col:31> 'Element *' implicit this
|   |   |-CXXFunctionalCastExpr 0x55f32dcfca58 <col:42, col:49> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55f32dcfca38 <col:48> 'int' 0
|   |   `-CallExpr 0x55f32dcfcc68 <col:53, col:151> 'void'
|   |     |-ImplicitCastExpr 0x55f32dcfcc50 <col:53> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55f32dcfcc30 <col:53> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55f32d8255d0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55f32dcfcca8 <col:68> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f32dcfcac8 <col:68> 'const char [9]' lvalue "!_router"
|   |     |-ImplicitCastExpr 0x55f32dcfccc0 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f32dcfcae8 <col:80> 'const char [30]' lvalue "../dummy_inc/click/element.hh"
|   |     |-ImplicitCastExpr 0x55f32dcfccd8 <col:113> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55f32dcfcb20 <col:113> 'int' 124
|   |     `-ImplicitCastExpr 0x55f32dcfccf0 <col:118, col:132> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55f32dcfcc18 <col:118, col:132> 'const char [43]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55f32dcfcc00 <col:132> 'const char [43]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55f32dcfcbb8 <col:132> 'const char [43]' lvalue "void Element::attach_router(Router *, int)"
|   |-BinaryOperator 0x55f32dcfcdd0 <line:125:9, col:19> 'Router *' lvalue '='
|   | |-MemberExpr 0x55f32dcfcd68 <col:9> 'Router *' lvalue ->_router 0x55f32dcfa850
|   | | `-CXXThisExpr 0x55f32dcfcd58 <col:9> 'Element *' implicit this
|   | `-ImplicitCastExpr 0x55f32dcfcdb8 <col:19> 'Router *' <LValueToRValue>
|   |   `-DeclRefExpr 0x55f32dcfcd98 <col:19> 'Router *' lvalue ParmVar 0x55f32dcef3e8 'r' 'Router *'
|   `-BinaryOperator 0x55f32dcfce68 <line:126:9, col:19> 'int' lvalue '='
|     |-MemberExpr 0x55f32dcfce00 <col:9> 'int' lvalue ->_eindex 0x55f32dcfa8b8
|     | `-CXXThisExpr 0x55f32dcfcdf0 <col:9> 'Element *' implicit this
|     `-ImplicitCastExpr 0x55f32dcfce50 <col:19> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x55f32dcfce30 <col:19> 'int' lvalue ParmVar 0x55f32dcef468 'eindex' 'int'
|-CXXMethodDecl 0x55f32dcef6c0 <line:130:5, col:38> col:16 used nports 'int (bool) const' inline
| `-ParmVarDecl 0x55f32dcef5f8 <col:23, col:28> col:28 isoutput 'bool'
|-CXXMethodDecl 0x55f32dcef790 <line:131:5, col:26> col:16 used ninputs 'int () const' inline
|-CXXMethodDecl 0x55f32dcef858 <line:132:5, col:27> col:16 used noutputs 'int () const' inline
|-CXXRecordDecl 0x55f32dcef8f8 <line:134:5, col:11> col:11 referenced class Port
|-CXXMethodDecl 0x55f32dcefb48 <line:135:5, col:82> col:52 used port 'const Element::Port &(bool, int) const'
| |-ParmVarDecl 0x55f32dcef9c0 <col:57, col:62> col:62 isoutput 'bool'
| |-ParmVarDecl 0x55f32dcefa40 <col:72, col:76> col:76 port 'int'
| |-NoInlineAttr 0x55f32dcefbf8 <col:20>
| `-OptimizeNoneAttr 0x55f32dcefc50 <col:30>
|-CXXMethodDecl 0x55f32dcefd58 <line:136:5, col:68> col:52 input 'const Element::Port &(int) const'
| |-ParmVarDecl 0x55f32dcefc90 <col:58, col:62> col:62 port 'int'
| |-NoInlineAttr 0x55f32dcefe00 <col:20>
| `-OptimizeNoneAttr 0x55f32dcefe58 <col:30>
|-CXXMethodDecl 0x55f32dceff28 <line:137:5, col:69> col:52 output 'const Element::Port &(int) const'
| |-ParmVarDecl 0x55f32dcefe98 <col:59, col:63> col:63 port 'int'
| |-NoInlineAttr 0x55f32dceffd0 <col:20>
| `-OptimizeNoneAttr 0x55f32dcf0028 <col:30>
|-CXXMethodDecl 0x55f32dcf01b8 <line:139:5, col:54> col:17 used port_active 'bool (bool, int) const' inline
| |-ParmVarDecl 0x55f32dcf0060 <col:29, col:34> col:34 isoutput 'bool'
| `-ParmVarDecl 0x55f32dcf00e0 <col:44, col:48> col:48 port 'int'
|-CXXMethodDecl 0x55f32dcf0348 <line:140:5, col:41> col:17 input_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x55f32dcf0280 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x55f32dcf0498 <line:141:5, col:41> col:17 input_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x55f32dcf0408 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x55f32dcf05e8 <line:142:5, col:42> col:17 output_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x55f32dcf0558 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x55f32dcf0738 <line:143:5, col:42> col:17 output_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x55f32dcf06a8 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x55f32dcf09f8 <line:144:5, col:57> col:10 port_flow 'void (bool, int, Bitvector *) const'
| |-ParmVarDecl 0x55f32dcf07f0 <col:20, col:25> col:25 isoutput 'bool'
| |-ParmVarDecl 0x55f32dcf0870 <col:35, col:39> col:39 port 'int'
| `-ParmVarDecl 0x55f32dcf0918 <col:45, col:54> col:55 'Bitvector *'
|-CXXMethodDecl 0x55f32dcf0ad0 <line:147:5, col:28> col:12 configuration 'String () const'
|-CXXMethodDecl 0x55f32dcf0b90 <line:149:5, col:41> col:18 can_live_reconfigure 'bool () const' virtual
|-CXXMethodDecl 0x55f32dcf0e60 <line:150:5, col:64> col:17 live_reconfigure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x55f32dcf0d10 <col:34, col:48> col:49 'Vector<String> &'
| `-ParmVarDecl 0x55f32dcf0d88 <col:51, col:63> col:64 'ErrorHandler *'
|-CXXMethodDecl 0x55f32dcf0f88 <line:152:5, col:33> col:19 home_thread 'RouterThread *() const'
|-CXXMethodDecl 0x55f32dcf1160 <line:156:5, col:36> col:9 add_select 'int (int, int)'
| |-ParmVarDecl 0x55f32dcf1040 <col:20, col:24> col:24 fd 'int'
| `-ParmVarDecl 0x55f32dcf10c0 <col:28, col:32> col:32 mask 'int'
|-CXXMethodDecl 0x55f32dcf1348 <line:157:5, col:39> col:9 remove_select 'int (int, int)'
| |-ParmVarDecl 0x55f32dcf1228 <col:23, col:27> col:27 fd 'int'
| `-ParmVarDecl 0x55f32dcf12a8 <col:31, col:35> col:35 mask 'int'
|-CXXMethodDecl 0x55f32dcf16b8 <line:161:5, col:127> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x55f32dcf1408 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x55f32dcf1480 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55f32dcf1500 <col:82, col:106> col:94 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x55f32dcfc470 <col:106> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x55f32dcfc450 <col:106> 'int' 0
| `-ParmVarDecl 0x55f32dcf1578 <col:109, col:126> col:118 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55f32dcfc4a8 <col:126> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55f32dcfc488 <col:126> 'int' 0
|-CXXMethodDecl 0x55f32dcf1a58 <line:162:5, col:115> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55f32dcf1788 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x55f32dcf1820 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55f32dcf18a0 <col:82, col:86> col:86 user_data 'int'
| `-ParmVarDecl 0x55f32dcf1918 <col:97, col:114> col:106 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55f32dcfc4e0 <col:114> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55f32dcfc4c0 <col:114> 'int' 0
|-CXXMethodDecl 0x55f32dcf1de8 <line:163:5, col:117> col:10 add_read_handler 'void (const char *, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55f32dcf1b30 <col:27, col:39> col:39 name 'const char *'
| |-ParmVarDecl 0x55f32dcf1ba8 <col:45, col:65> col:65 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55f32dcf1c28 <col:80, col:96> col:84 user_data 'int' cinit
| | `-IntegerLiteral 0x55f32dcfc4f8 <col:96> 'int' 0
| `-ParmVarDecl 0x55f32dcf1ca0 <col:99, col:116> col:108 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55f32dcfc538 <col:116> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55f32dcfc518 <col:116> 'int' 0
|-CXXMethodDecl 0x55f32dcf2168 <line:164:5, col:130> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x55f32dcf1eb8 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x55f32dcf1f30 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55f32dcf1fb0 <col:85, col:109> col:97 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x55f32dcfc570 <col:109> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x55f32dcfc550 <col:109> 'int' 0
| `-ParmVarDecl 0x55f32dcf2028 <col:112, col:129> col:121 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55f32dcfc5a8 <col:129> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55f32dcfc588 <col:129> 'int' 0
|-CXXMethodDecl 0x55f32dcf24e8 <line:165:5, col:118> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55f32dcf2238 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x55f32dcf22b0 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55f32dcf2330 <col:85, col:89> col:89 user_data 'int'
| `-ParmVarDecl 0x55f32dcf23a8 <col:100, col:117> col:109 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55f32dcfc5e0 <col:117> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55f32dcfc5c0 <col:117> 'int' 0
|-CXXMethodDecl 0x55f32dcf2878 <line:166:5, col:120> col:10 add_write_handler 'void (const char *, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55f32dcf25c0 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55f32dcf2638 <col:46, col:67> col:67 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55f32dcf26b8 <col:83, col:99> col:87 user_data 'int' cinit
| | `-IntegerLiteral 0x55f32dcfc5f8 <col:99> 'int' 0
| `-ParmVarDecl 0x55f32dcf2730 <col:102, col:119> col:111 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55f32dcfc638 <col:119> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55f32dcfc618 <col:119> 'int' 0
|-CXXMethodDecl 0x55f32dcf2c98 <line:167:5, col:142> col:10 set_handler 'void (const String &, int, HandlerCallback, const void *, const void *)'
| |-ParmVarDecl 0x55f32dcf2948 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x55f32dcf29c8 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x55f32dcf2a40 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55f32dcf2ac0 <col:79, col:108> col:91 read_user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x55f32dcfc670 <col:108> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x55f32dcfc650 <col:108> 'int' 0
| `-ParmVarDecl 0x55f32dcf2b40 <col:111, col:141> col:123 write_user_data 'const void *' cinit
|   `-ImplicitCastExpr 0x55f32dcfc6a8 <col:141> 'const void *' <NullToPointer>
|     `-IntegerLiteral 0x55f32dcfc688 <col:141> 'int' 0
|-CXXMethodDecl 0x55f32dcf30b8 <line:168:5, col:122> col:10 set_handler 'void (const String &, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x55f32dcf2d70 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x55f32dcf2df0 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x55f32dcf2e68 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55f32dcf2ee8 <col:79, col:83> col:83 read_user_data 'int'
| `-ParmVarDecl 0x55f32dcf2f68 <col:99, col:121> col:103 write_user_data 'int' cinit
|   `-IntegerLiteral 0x55f32dcfc6c0 <col:121> 'int' 0
|-CXXMethodDecl 0x55f32dcf34e8 <line:169:5, col:124> col:10 set_handler 'void (const char *, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x55f32dcf3198 <col:22, col:34> col:34 name 'const char *'
| |-ParmVarDecl 0x55f32dcf3218 <col:40, col:44> col:44 flags 'int'
| |-ParmVarDecl 0x55f32dcf3290 <col:51, col:67> col:67 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55f32dcf3310 <col:77, col:98> col:81 read_user_data 'int' cinit
| | `-IntegerLiteral 0x55f32dcfc6e0 <col:98> 'int' 0
| `-ParmVarDecl 0x55f32dcf3390 <col:101, col:123> col:105 write_user_data 'int' cinit
|   `-IntegerLiteral 0x55f32dcfc700 <col:123> 'int' 0
|-CXXMethodDecl 0x55f32dcf37b0 <line:170:5, col:81> col:9 set_handler_flags 'int (const String &, int, int)'
| |-ParmVarDecl 0x55f32dcf35c0 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x55f32dcf3640 <col:47, col:51> col:51 set_flags 'int'
| `-ParmVarDecl 0x55f32dcf36c0 <col:62, col:80> col:66 clear_flags 'int' cinit
|   `-IntegerLiteral 0x55f32dcfc720 <col:80> 'int' 0
|-EnumDecl 0x55f32dcf3868 <line:171:5, line:175:36> line:171:5
| |-EnumConstantDecl 0x55f32dcf3970 <col:12, col:42> col:12 TASKHANDLER_WRITE_SCHEDULED 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55f32dcf3c00 <col:42> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f32dcf3950 <col:42> 'int' Int: 1
| |     `-IntegerLiteral 0x55f32dcf3930 <col:42> 'int' 1
| |-EnumConstantDecl 0x55f32dcf3a00 <line:172:12, col:40> col:12 TASKHANDLER_WRITE_TICKETS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55f32dcf3c18 <col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f32dcf39e0 <col:40> 'int' Int: 2
| |     `-IntegerLiteral 0x55f32dcf39c0 <col:40> 'int' 2
| |-EnumConstantDecl 0x55f32dcf3a90 <line:173:12, col:44> col:12 TASKHANDLER_WRITE_HOME_THREAD 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55f32dcf3c30 <col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f32dcf3a70 <col:44> 'int' Int: 4
| |     `-IntegerLiteral 0x55f32dcf3a50 <col:44> 'int' 4
| |-EnumConstantDecl 0x55f32dcf3b20 <line:174:12, col:36> col:12 TASKHANDLER_WRITE_ALL 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55f32dcf3c48 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f32dcf3b00 <col:36> 'int' Int: 7
| |     `-IntegerLiteral 0x55f32dcf3ae0 <col:36> 'int' 7
| `-EnumConstantDecl 0x55f32dcf3bb0 <line:175:12, col:34> col:12 referenced TASKHANDLER_DEFAULT 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|   `-ImplicitCastExpr 0x55f32dcf3c60 <col:34> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55f32dcf3b90 <col:34> 'int' Int: 6
|       `-IntegerLiteral 0x55f32dcf3b70 <col:34> 'int' 6
|-CXXMethodDecl 0x55f32dcf3f18 <line:176:5, col:106> col:10 used add_task_handlers 'void (Task *, NotifierSignal *, int, const String &)'
| |-ParmVarDecl 0x55f32dcf3c88 <col:28, col:34> col:34 task 'Task *'
| |-ParmVarDecl 0x55f32dcf3d28 <col:40, col:56> col:56 signal 'NotifierSignal *'
| |-ParmVarDecl 0x55f32dcf3da8 <col:64, col:68> col:68 flags 'int'
| `-ParmVarDecl 0x55f32dcf3e20 <col:75, col:105> col:89 prefix 'const String &' cinit
|   `-ExprWithCleanups 0x55f32dcfc7d8 <col:98, col:105> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x55f32dcfc7c0 <col:98, col:105> 'const String' lvalue
|       `-ImplicitCastExpr 0x55f32dcfc7a8 <col:98, col:105> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x55f32dcfc788 <col:98, col:105> 'String' (CXXTemporary 0x55f32dcfc788)
|           `-CXXTemporaryObjectExpr 0x55f32dcfc750 <col:98, col:105> 'String' 'void ()'
|-CXXMethodDecl 0x55f32dcf41b8 <line:177:5, line:179:5> line:177:17 add_task_handlers 'void (Task *, NotifierSignal *, const String &)' inline
| |-ParmVarDecl 0x55f32dcf3fe8 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x55f32dcf4060 <col:47, col:63> col:63 used signal 'NotifierSignal *'
| |-ParmVarDecl 0x55f32dcf40d8 <col:71, col:101> col:85 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x55f32dcfc888 <col:94, col:101> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x55f32dcfc870 <col:94, col:101> 'const String' lvalue
| |     `-ImplicitCastExpr 0x55f32dcfc858 <col:94, col:101> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x55f32dcfc838 <col:94, col:101> 'String' (CXXTemporary 0x55f32dcfc838)
| |         `-CXXTemporaryObjectExpr 0x55f32dcfc800 <col:94, col:101> 'String' 'void ()'
| `-CompoundStmt 0x55f32dcfd070 <col:104, line:179:5>
|   `-CXXMemberCallExpr 0x55f32dcfcfe8 <line:178:9, col:68> 'void'
|     |-MemberExpr 0x55f32dcfcfb8 <col:9> '<bound member function type>' ->add_task_handlers 0x55f32dcf3f18
|     | `-CXXThisExpr 0x55f32dcfcfa8 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x55f32dcfd028 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x55f32dcfcf28 <col:27> 'Task *' lvalue ParmVar 0x55f32dcf3fe8 'task' 'Task *'
|     |-ImplicitCastExpr 0x55f32dcfd040 <col:33> 'NotifierSignal *' <LValueToRValue>
|     | `-DeclRefExpr 0x55f32dcfcf48 <col:33> 'NotifierSignal *' lvalue ParmVar 0x55f32dcf4060 'signal' 'NotifierSignal *'
|     |-ImplicitCastExpr 0x55f32dcfd058 <col:41> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x55f32dcfcf68 <col:41> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x55f32dcf3bb0 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x55f32dcfcf88 <col:62> 'const String' lvalue ParmVar 0x55f32dcf40d8 'prefix' 'const String &'
|-CXXMethodDecl 0x55f32dcf43c8 <line:180:5, line:182:5> line:180:17 add_task_handlers 'void (Task *, const String &)' inline
| |-ParmVarDecl 0x55f32dcf4280 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x55f32dcf42f8 <col:47, col:77> col:61 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x55f32dcfc938 <col:70, col:77> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x55f32dcfc920 <col:70, col:77> 'const String' lvalue
| |     `-ImplicitCastExpr 0x55f32dcfc908 <col:70, col:77> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x55f32dcfc8e8 <col:70, col:77> 'String' (CXXTemporary 0x55f32dcfc8e8)
| |         `-CXXTemporaryObjectExpr 0x55f32dcfc8b0 <col:70, col:77> 'String' 'void ()'
| `-CompoundStmt 0x55f32dcfd248 <col:80, line:182:5>
|   `-CXXMemberCallExpr 0x55f32dcfd1c0 <line:181:9, col:63> 'void'
|     |-MemberExpr 0x55f32dcfd190 <col:9> '<bound member function type>' ->add_task_handlers 0x55f32dcf3f18
|     | `-CXXThisExpr 0x55f32dcfd180 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x55f32dcfd200 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x55f32dcfd100 <col:27> 'Task *' lvalue ParmVar 0x55f32dcf4280 'task' 'Task *'
|     |-ImplicitCastExpr 0x55f32dcfd218 <col:33> 'NotifierSignal *' <NullToPointer>
|     | `-IntegerLiteral 0x55f32dcfd120 <col:33> 'int' 0
|     |-ImplicitCastExpr 0x55f32dcfd230 <col:36> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x55f32dcfd140 <col:36> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x55f32dcf3bb0 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x55f32dcfd160 <col:57> 'const String' lvalue ParmVar 0x55f32dcf42f8 'prefix' 'const String &'
|-CXXMethodDecl 0x55f32dcf46a8 <line:184:5, col:70> col:10 add_data_handlers 'void (const char *, int, uint8_t *)'
| |-ParmVarDecl 0x55f32dcf4490 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55f32dcf4510 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55f32dcf4588 <col:57, col:66> col:66 data 'uint8_t *'
|-CXXMethodDecl 0x55f32dcf4958 <line:185:5, col:67> col:10 add_data_handlers 'void (const char *, int, bool *)'
| |-ParmVarDecl 0x55f32dcf4778 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55f32dcf47f8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55f32dcf4878 <col:57, col:63> col:63 data 'bool *'
|-CXXMethodDecl 0x55f32dcf4c48 <line:186:5, col:71> col:10 add_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x55f32dcf4a28 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55f32dcf4aa8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55f32dcf4b20 <col:57, col:67> col:67 data 'uint16_t *'
|-CXXMethodDecl 0x55f32dcf4ef8 <line:187:5, col:66> col:10 add_data_handlers 'void (const char *, int, int *)'
| |-ParmVarDecl 0x55f32dcf4d18 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55f32dcf4d98 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55f32dcf4e18 <col:57, col:62> col:62 data 'int *'
|-CXXMethodDecl 0x55f32dcf51a8 <line:188:5, col:71> col:10 add_data_handlers 'void (const char *, int, unsigned int *)'
| |-ParmVarDecl 0x55f32dcf4fc8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55f32dcf5048 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55f32dcf50c8 <col:57, col:67> col:67 data 'unsigned int *'
|-CXXMethodDecl 0x55f32dcf5458 <line:189:5, col:78> col:10 add_data_handlers 'void (const char *, int, atomic_uint32_t *)'
| |-ParmVarDecl 0x55f32dcf5278 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55f32dcf52f8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55f32dcf5370 <col:57, col:74> col:74 data 'atomic_uint32_t *'
|-CXXMethodDecl 0x55f32dcf5708 <line:190:5, col:67> col:10 add_data_handlers 'void (const char *, int, long *)'
| |-ParmVarDecl 0x55f32dcf5528 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55f32dcf55a8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55f32dcf5628 <col:57, col:63> col:63 data 'long *'
|-CXXMethodDecl 0x55f32dcf5a18 <line:191:5, col:76> col:10 add_data_handlers 'void (const char *, int, unsigned long *)'
| |-ParmVarDecl 0x55f32dcf5830 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55f32dcf58b0 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55f32dcf5930 <col:57, col:72> col:72 data 'unsigned long *'
|-CXXMethodDecl 0x55f32dcf5cf8 <line:193:5, col:72> col:10 add_data_handlers 'void (const char *, int, long long *)'
| |-ParmVarDecl 0x55f32dcf5ae8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55f32dcf5b68 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55f32dcf5c10 <col:57, col:68> col:68 data 'long long *'
|-CXXMethodDecl 0x55f32dcf5fd8 <line:194:5, col:81> col:10 add_data_handlers 'void (const char *, int, unsigned long long *)'
| |-ParmVarDecl 0x55f32dcf5dc8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55f32dcf5e48 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55f32dcf5ef0 <col:57, col:77> col:77 data 'unsigned long long *'
|-CXXMethodDecl 0x55f32dcf6240 <line:196:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x55f32dcf60a8 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x55f32dcf6128 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x55f32dcf61a0 <col:67, col:77> col:77 data 'uint16_t *'
|-CXXMethodDecl 0x55f32dcf64e8 <line:197:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint32_t *)'
| |-ParmVarDecl 0x55f32dcf6310 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x55f32dcf6390 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x55f32dcf6408 <col:67, col:77> col:77 data 'uint32_t *'
|-CXXMethodDecl 0x55f32dcf6798 <line:199:5, col:69> col:10 add_data_handlers 'void (const char *, int, double *)'
| |-ParmVarDecl 0x55f32dcf65b8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55f32dcf6638 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55f32dcf66b8 <col:57, col:65> col:65 data 'double *'
|-CXXMethodDecl 0x55f32dcf6a48 <line:201:5, col:69> col:10 add_data_handlers 'void (const char *, int, String *)'
| |-ParmVarDecl 0x55f32dcf6868 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55f32dcf68e8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55f32dcf6960 <col:57, col:65> col:65 data 'String *'
|-CXXMethodDecl 0x55f32dcf6cf8 <line:202:5, col:72> col:10 add_data_handlers 'void (const char *, int, IPAddress *)'
| |-ParmVarDecl 0x55f32dcf6b18 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55f32dcf6b98 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55f32dcf6c10 <col:57, col:68> col:68 data 'IPAddress *'
|-CXXMethodDecl 0x55f32dcf6fc8 <line:203:5, col:75> col:10 add_data_handlers 'void (const char *, int, EtherAddress *)'
| |-ParmVarDecl 0x55f32dcf6dc8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55f32dcf6e48 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55f32dcf6ee8 <col:57, col:71> col:71 data 'EtherAddress *'
|-CXXMethodDecl 0x55f32dcf72f8 <line:204:5, col:98> col:10 add_data_handlers 'void (const char *, int, Timestamp *, bool)'
| |-ParmVarDecl 0x55f32dcf7098 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55f32dcf7118 <col:46, col:50> col:50 flags 'int'
| |-ParmVarDecl 0x55f32dcf7190 <col:57, col:68> col:68 data 'Timestamp *'
| `-ParmVarDecl 0x55f32dcf7208 <col:74, col:93> col:79 is_interval 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55f32dcfc950 <col:93> 'bool' false
|-CXXMethodDecl 0x55f32dcf74e0 <line:206:5, col:58> col:19 read_positional_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55f32dcf73c8 <col:43, col:50> col:51 'Element *'
| `-ParmVarDecl 0x55f32dcf7448 <col:53, col:57> col:58 'void *'
|-CXXMethodDecl 0x55f32dcf76b8 <line:207:5, col:55> col:19 read_keyword_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55f32dcf75a0 <col:40, col:47> col:48 'Element *'
| `-ParmVarDecl 0x55f32dcf7620 <col:50, col:54> col:55 'void *'
|-CXXMethodDecl 0x55f32dcf7998 <line:208:5, col:92> col:16 reconfigure_positional_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x55f32dcf7778 <col:47, col:59> col:60 'const String &'
| |-ParmVarDecl 0x55f32dcf77f0 <col:62, col:69> col:70 'Element *'
| |-ParmVarDecl 0x55f32dcf7870 <col:72, col:76> col:77 'void *'
| `-ParmVarDecl 0x55f32dcf78e8 <col:79, col:91> col:92 'ErrorHandler *'
|-CXXMethodDecl 0x55f32dcf7c88 <line:209:5, col:89> col:16 reconfigure_keyword_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x55f32dcf7a68 <col:44, col:56> col:57 'const String &'
| |-ParmVarDecl 0x55f32dcf7ae0 <col:59, col:66> col:67 'Element *'
| |-ParmVarDecl 0x55f32dcf7b60 <col:69, col:73> col:74 'void *'
| `-ParmVarDecl 0x55f32dcf7bd8 <col:76, col:88> col:89 'ErrorHandler *'
|-CXXMethodDecl 0x55f32dcf7ec0 <line:211:5, col:50> col:17 llrpc 'int (unsigned int, void *)' virtual
| |-ParmVarDecl 0x55f32dcf7d60 <col:23, col:32> col:32 command 'unsigned int'
| `-ParmVarDecl 0x55f32dcf7de0 <col:41, col:47> col:47 arg 'void *'
|-CXXMethodDecl 0x55f32dcf80a8 <line:212:5, col:48> col:9 local_llrpc 'int (unsigned int, void *)'
| |-ParmVarDecl 0x55f32dcf7f88 <col:21, col:30> col:30 command 'unsigned int'
| `-ParmVarDecl 0x55f32dcf8008 <col:39, col:45> col:45 arg 'void *'
|-CXXRecordDecl 0x55f32dcf8158 prev 0x55f32dcef8f8 <line:214:5, line:252:5> line:214:11 referenced class Port definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55f32dcf8250 <col:5, col:11> col:11 implicit referenced class Port
| |-AccessSpecDecl 0x55f32dcf82e0 <col:18, col:24> col:18 public
| |-CXXMethodDecl 0x55f32dcf8358 <line:216:9, col:30> col:21 used active 'bool () const' inline
| |-CXXMethodDecl 0x55f32dcf8418 <line:217:9, col:35> col:25 element 'Element *() const' inline
| |-CXXMethodDecl 0x55f32dcf84e0 <line:218:9, col:27> col:20 port 'int () const' inline
| |-CXXMethodDecl 0x55f32dcf8658 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| | |-ParmVarDecl 0x55f32dcf8590 <col:54, col:62> col:62 p 'Packet *'
| | |-NoInlineAttr 0x55f32dcf8700 <col:24>
| | `-OptimizeNoneAttr 0x55f32dcf8758 <col:34>
| |-CXXMethodDecl 0x55f32dcf87a0 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
| |-CXXMethodDecl 0x55f32dcf8a58 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| | |-ParmVarDecl 0x55f32dcf8850 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x55f32dcf88c8 <col:43, col:52> col:52 e 'Element *'
| | `-ParmVarDecl 0x55f32dcf8948 <col:55, col:59> col:59 port 'int'
| |-AccessSpecDecl 0x55f32dcf8b10 <line:229:7, col:14> col:7 private
| |-FieldDecl 0x55f32dcf8b48 <line:231:9, col:18> col:18 referenced _e 'Element *'
| |-FieldDecl 0x55f32dcf8bb0 <line:232:9, col:13> col:13 referenced _port 'int'
| |-CXXConstructorDecl 0x55f32dcf8c38 <line:247:9, col:21> col:16 Port 'void ()' inline
| |-CXXMethodDecl 0x55f32dcf8f58 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| | |-ParmVarDecl 0x55f32dcf8cf0 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x55f32dcf8d68 <col:43, col:52> col:52 owner 'Element *'
| | |-ParmVarDecl 0x55f32dcf8de0 <col:59, col:68> col:68 e 'Element *'
| | `-ParmVarDecl 0x55f32dcf8e60 <col:71, col:75> col:75 port 'int'
| |-FriendDecl 0x55f32dcf9070 <line:250:9, col:22> col:16 'class Element':'Element'
| |-CXXConstructorDecl 0x55f32dd009e8 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x55f32dd009e8
| | `-ParmVarDecl 0x55f32dd00af8 <col:11> col:11 'const Element::Port &'
| |-CXXConstructorDecl 0x55f32dd00b98 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x55f32dd00b98
| | `-ParmVarDecl 0x55f32dd00ca8 <col:11> col:11 'Element::Port &&'
| `-CXXDestructorDecl 0x55f32dee8a00 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55f32dcf90e8 <line:256:5, col:49> col:12 id 'String () const'
| `-DeprecatedAttr 0x55f32dcf9188 <col:38> "" ""
|-CXXMethodDecl 0x55f32dcf9218 <line:257:5, col:55> col:12 landmark 'String () const'
| `-DeprecatedAttr 0x55f32dcf92b8 <col:44> "" ""
|-AccessSpecDecl 0x55f32dcf9328 <line:260:3, col:10> col:3 private
|-EnumDecl 0x55f32dcf9350 <line:262:5, col:29> col:5
| `-EnumConstantDecl 0x55f32dcf9450 <col:12, col:27> col:12 referenced INLINE_PORTS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:262:5)'
|   `-ImplicitCastExpr 0x55f32dcf94a0 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55f32dcf9430 <col:27> 'int' Int: 4
|       `-IntegerLiteral 0x55f32dcf9410 <col:27> 'int' 4
|-FieldDecl 0x55f32dcf9558 <line:264:5, col:19> col:11 referenced _ports 'Element::Port *[2]'
|-FieldDecl 0x55f32dcf9708 <line:265:5, col:36> col:10 _inline_ports 'Element::Port [4]'
|-FieldDecl 0x55f32dcf97c0 <line:267:5, col:18> col:9 referenced _nports 'int [2]'
|-FieldDecl 0x55f32dcfa850 <line:269:5, col:13> col:13 referenced _router 'Router *'
|-FieldDecl 0x55f32dcfa8b8 <line:270:5, col:9> col:9 referenced _eindex 'int'
|-CXXConstructorDecl 0x55f32dcfaa08 <line:292:5, col:28> col:5 Element 'void (const Element &)'
| `-ParmVarDecl 0x55f32dcfa948 <col:13, col:27> col:28 'const Element &'
|-CXXMethodDecl 0x55f32dcfabb8 <line:293:5, col:39> col:14 operator= 'Element &(const Element &)'
| `-ParmVarDecl 0x55f32dcfaac8 <col:24, col:38> col:39 'const Element &'
|-CXXMethodDecl 0x55f32dcfad98 <line:296:5, col:28> col:9 set_nports 'int (int, int)'
| |-ParmVarDecl 0x55f32dcfac78 <col:20> col:23 'int'
| `-ParmVarDecl 0x55f32dcfacf8 <col:25> col:28 'int'
|-CXXMethodDecl 0x55f32dcfb040 <line:297:5, col:47> col:9 notify_nports 'int (int, int, ErrorHandler *)'
| |-ParmVarDecl 0x55f32dcfae60 <col:23> col:26 'int'
| |-ParmVarDecl 0x55f32dcfaee0 <col:28> col:31 'int'
| `-ParmVarDecl 0x55f32dcfaf58 <col:33, col:46> col:47 'ErrorHandler *'
|-EnumDecl 0x55f32dcfb0f8 <line:298:5, col:47> col:10 Processing
| |-EnumConstantDecl 0x55f32dcfb1c0 <col:23> col:23 VAGNOSTIC 'Element::Processing'
| |-EnumConstantDecl 0x55f32dcfb210 <col:34> col:34 VPUSH 'Element::Processing'
| `-EnumConstantDecl 0x55f32dcfb260 <col:41> col:41 VPULL 'Element::Processing'
|-CXXMethodDecl 0x55f32dcfb440 <line:299:5, col:71> col:16 next_processing_code 'int (const char *&, ErrorHandler *)' static
| |-ParmVarDecl 0x55f32dcfb2f0 <col:37, col:50> col:50 p 'const char *&'
| `-ParmVarDecl 0x55f32dcfb368 <col:53, col:67> col:67 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55f32dcfb6e8 <line:300:5, col:80> col:10 processing_vector 'void (int *, int *, ErrorHandler *) const'
| |-ParmVarDecl 0x55f32dcfb508 <col:28, col:33> col:33 input_codes 'int *'
| |-ParmVarDecl 0x55f32dcfb588 <col:46, col:51> col:51 output_codes 'int *'
| `-ParmVarDecl 0x55f32dcfb600 <col:65, col:77> col:78 'ErrorHandler *'
|-CXXMethodDecl 0x55f32dcfb908 <line:302:5, col:74> col:10 initialize_ports 'void (const int *, const int *)'
| |-ParmVarDecl 0x55f32dcfb7b8 <col:27, col:38> col:38 input_codes 'const int *'
| `-ParmVarDecl 0x55f32dcfb838 <col:51, col:62> col:62 output_codes 'const int *'
|-CXXMethodDecl 0x55f32dcfbc40 <line:303:5, col:60> col:9 connect_port 'int (bool, int, Element *, int)'
| |-ParmVarDecl 0x55f32dcfb9c8 <col:22, col:27> col:27 isoutput 'bool'
| |-ParmVarDecl 0x55f32dcfba48 <col:37, col:41> col:41 port 'int'
| |-ParmVarDecl 0x55f32dcfbac0 <col:47, col:54> col:55 'Element *'
| `-ParmVarDecl 0x55f32dcfbb40 <col:57> col:60 'int'
|-CXXMethodDecl 0x55f32dcfbe28 <line:305:5, col:68> col:19 read_handlers_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55f32dcfbd10 <col:41, col:50> col:50 e 'Element *'
| `-ParmVarDecl 0x55f32dcfbd90 <col:53, col:59> col:59 user_data 'void *'
|-CXXMethodDecl 0x55f32dcfbf78 <line:306:5, col:51> col:10 add_default_handlers 'void (bool)'
| `-ParmVarDecl 0x55f32dcfbee8 <col:31, col:36> col:36 writable_config 'bool'
|-CXXMethodDecl 0x55f32dcfc2f8 <line:307:5, col:100> col:17 add_data_handlers 'void (const char *, int, HandlerCallback, void *)' inline
| |-ParmVarDecl 0x55f32dcfc038 <col:35, col:47> col:47 name 'const char *'
| |-ParmVarDecl 0x55f32dcfc0b8 <col:53, col:57> col:57 flags 'int'
| |-ParmVarDecl 0x55f32dcfc130 <col:64, col:80> col:80 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| `-ParmVarDecl 0x55f32dcfc1b0 <col:90, col:96> col:96 data 'void *'
`-FriendDecl 0x55f32dcfc410 <line:309:5, col:18> col:12 'class Router':'Router'

Layout: <CGRecordLayout
  LLVMType:%class.Element = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Element.base = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class PortInfo
         0 |   class Element (primary base)
         0 |     (Element vtable pointer)
         8 |     class Element::Port *[2] _ports
        24 |     class Element::Port [4] _inline_ports
        88 |     int [2] _nports
        96 |     class Router * _router
       104 |     int _eindex
           | [sizeof=112, dsize=108, align=8,
           |  nvsize=108, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f32dd03b58 <../dummy_inc/click/standard/portinfo.hh:59:1, line:68:1> line:59:7 class PortInfo definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-public 'Element'
|-CXXRecordDecl 0x55f32dd03cb8 <col:1, col:7> col:7 implicit referenced class PortInfo
|-AccessSpecDecl 0x55f32dd03d48 <col:35, col:41> col:35 public
|-CXXConstructorDecl 0x55f32dd03dd0 <line:61:5, col:14> col:5 PortInfo 'void ()'
|-CXXMethodDecl 0x55f32dd03ed0 <line:63:5, col:57> col:17 class_name 'const char *() const'
| |-Overrides: [ 0x55f32dcec8a8 Element::class_name 'const char *() const' ]
| `-CompoundStmt 0x55f32dd04ae8 <col:36, col:57>
|   `-ReturnStmt 0x55f32dd04ad8 <col:38, col:45>
|     `-ImplicitCastExpr 0x55f32dd04ac0 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x55f32dd04aa0 <col:45> 'const char [9]' lvalue "PortInfo"
|-CXXMethodDecl 0x55f32dd03f98 <line:65:5, col:65> col:9 configure_phase 'int () const'
| |-Overrides: [ 0x55f32dcedd00 Element::configure_phase 'int () const' ]
| `-CompoundStmt 0x55f32dd04b48 <col:33, col:65>
|   `-ReturnStmt 0x55f32dd04b38 <col:35, col:42>
|     `-ImplicitCastExpr 0x55f32dd04b20 <col:42> 'int' <IntegralCast>
|       `-DeclRefExpr 0x55f32dd04b00 <col:42> 'Element::ConfigurePhase' EnumConstant 0x55f32dced9d0 'CONFIGURE_PHASE_FIRST' 'Element::ConfigurePhase'
|-CXXMethodDecl 0x55f32dd04270 <line:66:5, col:51> col:9 configure 'int (Vector<String> &, ErrorHandler *)'
| |-Overrides: [ 0x55f32dcee140 Element::configure 'int (Vector<String> &, ErrorHandler *)' ]
| |-ParmVarDecl 0x55f32dd04120 <col:19, col:34> col:35 'Vector<String> &'
| `-ParmVarDecl 0x55f32dd04198 <col:37, col:50> col:51 'ErrorHandler *'
|-CXXConstructorDecl 0x55f32dd04348 <line:59:7> col:7 implicit PortInfo 'void (const PortInfo &)' inline default_delete noexcept-unevaluated 0x55f32dd04348
| `-ParmVarDecl 0x55f32dd04458 <col:7> col:7 'const PortInfo &'
|-CXXConstructorDecl 0x55f32dd044f8 <col:7> col:7 implicit PortInfo 'void (PortInfo &&)' inline default_delete noexcept-unevaluated 0x55f32dd044f8
| `-ParmVarDecl 0x55f32dd04608 <col:7> col:7 'PortInfo &&'
|-CXXMethodDecl 0x55f32dd046a8 <col:7> col:7 implicit operator= 'PortInfo &(const PortInfo &)' inline default_delete noexcept-unevaluated 0x55f32dd046a8
| `-ParmVarDecl 0x55f32dd047b8 <col:7> col:7 'const PortInfo &'
|-CXXMethodDecl 0x55f32dd04828 <col:7> col:7 implicit operator= 'PortInfo &(PortInfo &&)' inline default_delete noexcept-unevaluated 0x55f32dd04828
| `-ParmVarDecl 0x55f32dd04938 <col:7> col:7 'PortInfo &&'
`-CXXDestructorDecl 0x55f32dd049c0 <col:7> col:7 implicit ~PortInfo 'void ()' inline default noexcept-unevaluated 0x55f32dd049c0
  `-Overrides: [ 0x55f32dceb448 Element::~Element 'void () noexcept' ]

Layout: <CGRecordLayout
  LLVMType:%class.PortInfo = type { %class.Element.base, [4 x i8] }
  NonVirtualBaseLLVMType:%class.PortInfo.base = type { %class.Element.base }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | union Packet::Anno
         0 |   char [48] c
         0 |   uint8_t [48] u8
         0 |   uint16_t [24] u16
         0 |   uint32_t [12] u32
         0 |   uint64_t [6] u64
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Packet::AllAnno
         0 |   union Packet::Anno cb
         0 |     char [48] c
         0 |     uint8_t [48] u8
         0 |     uint16_t [24] u16
         0 |     uint32_t [12] u32
         0 |     uint64_t [6] u64
        48 |   unsigned char * mac
        56 |   unsigned char * nh
        64 |   unsigned char * h
        72 |   enum Packet::PacketType pkt_type
        76 |   char [8] timestamp
        88 |   class Packet * next
        96 |   class Packet * prev
           | [sizeof=104, dsize=104, align=8,
           |  nvsize=104, nvalign=8]

*** Dumping AST Record Layout
         0 | class Packet
         0 |   class atomic_uint32_t _use_count
         0 |     uint32_t _val
         8 |   class Packet * _data_packet
        16 |   unsigned char * _head
        24 |   unsigned char * _data
        32 |   unsigned char * _tail
        40 |   unsigned char * _end
        48 |   struct Packet::AllAnno _aa
        48 |     union Packet::Anno cb
        48 |       char [48] c
        48 |       uint8_t [48] u8
        48 |       uint16_t [24] u16
        48 |       uint32_t [12] u32
        48 |       uint64_t [6] u64
        96 |     unsigned char * mac
       104 |     unsigned char * nh
       112 |     unsigned char * h
       120 |     enum Packet::PacketType pkt_type
       124 |     char [8] timestamp
       136 |     class Packet * next
       144 |     class Packet * prev
       152 |   Packet::buffer_destructor_type _destructor
       160 |   void * _destructor_argument
           | [sizeof=168, dsize=168, align=8,
           |  nvsize=168, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f32dcc3808 prev 0x55f32dcb8a10 <../dummy_inc/click/packet.hh:702:5, line:711:5> line:702:11 referenced union Anno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55f32dcc3900 <col:5, col:11> col:11 implicit union Anno
|-FieldDecl 0x55f32dcc39f0 <line:703:2, col:18> col:7 referenced c 'char [48]'
|-FieldDecl 0x55f32dcc3b18 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
|-FieldDecl 0x55f32dcc3c98 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
|-FieldDecl 0x55f32dcc3e18 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
|-FieldDecl 0x55f32dcc3f98 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
|-CXXConstructorDecl 0x55f32dcd4dc8 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55f32dcd5638 <col:11>
|-CXXDestructorDecl 0x55f32dcd4ea0 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x55f32dcd4fd8 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x55f32dcd4fd8
| `-ParmVarDecl 0x55f32dcd50e8 <col:11> col:11 'const Packet::Anno &'
|-CXXConstructorDecl 0x55f32dcd5188 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55f32dcd5188
| `-ParmVarDecl 0x55f32dcd5298 <col:11> col:11 'Packet::Anno &&'
|-CXXMethodDecl 0x55f32dcd8058 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| |-ParmVarDecl 0x55f32dcd8168 <col:11> col:11 'const Packet::Anno &'
| `-CompoundStmt 0x55f32dcd83e8 <col:11>
|   `-ReturnStmt 0x55f32dcd83d8 <col:11>
|     `-UnaryOperator 0x55f32dcd83c0 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55f32dcd83b0 <col:11> 'Packet::Anno *' this
`-CXXMethodDecl 0x55f32dcd81d8 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55f32dcd81d8
  `-ParmVarDecl 0x55f32dcd82e8 <col:11> col:11 'Packet::Anno &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Packet::Anno" = type { [6 x i64] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f32dcc4000 <../dummy_inc/click/packet.hh:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55f32dcc4118 <col:5, col:12> col:12 implicit struct AllAnno
|-FieldDecl 0x55f32dcc41b8 <line:717:2, col:7> col:7 cb 'Packet::Anno'
|-FieldDecl 0x55f32dcc4220 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
|-FieldDecl 0x55f32dcc4288 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
|-FieldDecl 0x55f32dcc42f0 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
|-FieldDecl 0x55f32dcc4350 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
|-FieldDecl 0x55f32dcc4410 <line:722:2, col:34> col:7 timestamp 'char [8]'
|-FieldDecl 0x55f32dcc4470 <line:723:2, col:10> col:10 referenced next 'Packet *'
|-FieldDecl 0x55f32dcc44d0 <line:724:2, col:10> col:10 referenced prev 'Packet *'
|-CXXConstructorDecl 0x55f32dcd4cd8 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| |-CXXCtorInitializer Field 0x55f32dcc41b8 'cb' 'Packet::Anno'
| | `-CXXConstructExpr 0x55f32dcd5648 <col:12> 'Packet::Anno' 'void () noexcept'
| `-CompoundStmt 0x55f32dcd56a0 <col:12>
|-CXXConstructorDecl 0x55f32dcd5308 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x55f32dcd5308
| `-ParmVarDecl 0x55f32dcd5418 <col:12> col:12 'const Packet::AllAnno &'
|-CXXConstructorDecl 0x55f32dcd54b8 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x55f32dcd54b8
| `-ParmVarDecl 0x55f32dcd55c8 <col:12> col:12 'Packet::AllAnno &&'
`-CXXDestructorDecl 0x55f32dcd7740 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  NonVirtualBaseLLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f32dcb2120 <../dummy_inc/click/packet.hh:35:1, line:775:1> line:35:7 referenced class Packet definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55f32dcb2238 <col:1, col:7> col:7 implicit referenced class Packet
|-AccessSpecDecl 0x55f32dcb22c8 <col:16, col:22> col:16 public
|-EnumDecl 0x55f32dcb22f0 <line:41:5, line:50:5> line:41:5
| |-EnumConstantDecl 0x55f32dcb23f0 <line:45:2, col:21> col:2 referenced default_headroom 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| | `-ImplicitCastExpr 0x55f32dcb24d0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f32dcb23d0 <col:21> 'int' Int: 28
| |     `-IntegerLiteral 0x55f32dcb23b0 <col:21> 'int' 28
| `-EnumConstantDecl 0x55f32dcb2480 <line:48:2, col:22> col:2 referenced min_buffer_length 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
|   `-ImplicitCastExpr 0x55f32dcb24e8 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55f32dcb2460 <col:22> 'int' Int: 64
|       `-IntegerLiteral 0x55f32dcb2440 <col:22> 'int' 64
|-CXXMethodDecl 0x55f32dcb2828 <line:52:5, line:53:75> line:52:28 used make 'WritablePacket *(uint32_t, const void *, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x55f32dcb2510 <col:33, col:42> col:42 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55f32dcb2590 <col:52, col:64> col:64 data 'const void *'
| |-ParmVarDecl 0x55f32dcb2608 <line:53:5, col:14> col:14 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55f32dcb2680 <col:22, col:31> col:31 tailroom 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55f32dcb28e8 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x55f32dcb2ae8 <line:54:5, col:109> col:35 make 'WritablePacket *(const void *, uint32_t)' static inline
| |-ParmVarDecl 0x55f32dcb2960 <col:40, col:52> col:52 data 'const void *'
| |-ParmVarDecl 0x55f32dcb29d8 <col:58, col:67> col:67 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55f32dcb2b98 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x55f32dcb2cf8 <line:55:5, col:91> col:35 make 'WritablePacket *(uint32_t)' static inline
| |-ParmVarDecl 0x55f32dcb2c08 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55f32dcb2da0 <col:72> warn_unused_result ""
|-TypedefDecl 0x55f32dcb3100 <line:65:5, col:89> col:20 referenced buffer_destructor_type 'void (*)(unsigned char *, size_t, void *)'
| `-PointerType 0x55f32dcb3090 'void (*)(unsigned char *, size_t, void *)'
|   `-ParenType 0x55f32dcb3030 'void (unsigned char *, size_t, void *)' sugar
|     `-FunctionProtoType 0x55f32dcb2ff0 'void (unsigned char *, size_t, void *)' cdecl
|       |-BuiltinType 0x55f32d7854e0 'void'
|       |-PointerType 0x55f32da322a0 'unsigned char *'
|       | `-BuiltinType 0x55f32d7855e0 'unsigned char'
|       |-TypedefType 0x55f32d82e870 'size_t' sugar
|       | |-Typedef 0x55f32d7f5be0 'size_t'
|       | `-BuiltinType 0x55f32d785640 'unsigned long'
|       `-PointerType 0x55f32d785ce0 'void *'
|         `-BuiltinType 0x55f32d7854e0 'void'
|-CXXMethodDecl 0x55f32dcb3578 <line:66:5, line:68:131> line:66:28 make 'WritablePacket *(unsigned char *, uint32_t, Packet::buffer_destructor_type, void *, int, int)' static
| |-ParmVarDecl 0x55f32dcb3170 <col:33, col:48> col:48 data 'unsigned char *'
| |-ParmVarDecl 0x55f32dcb31e8 <col:54, col:63> col:63 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55f32dcb3280 <line:67:5, col:28> col:28 buffer_destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| |-ParmVarDecl 0x55f32dcb3300 <line:68:33, col:58> col:39 argument 'void *' cinit
| | `-CStyleCastExpr 0x55f32dccdc70 <col:50, col:58> 'void *' <NoOp>
| |   `-ImplicitCastExpr 0x55f32dccdc58 <col:58> 'void *' <NullToPointer> part_of_explicit_cast
| |     `-IntegerLiteral 0x55f32dccdc20 <col:58> 'int' 0
| |-ParmVarDecl 0x55f32dcb3380 <col:61, col:76> col:65 headroom 'int' cinit
| | `-IntegerLiteral 0x55f32dccdc98 <col:76> 'int' 0
| |-ParmVarDecl 0x55f32dcb3400 <col:79, col:94> col:83 tailroom 'int' cinit
| | `-IntegerLiteral 0x55f32dccdcb8 <col:94> 'int' 0
| `-WarnUnusedResultAttr 0x55f32dcb3648 <col:112> warn_unused_result ""
|-CXXMethodDecl 0x55f32dcb36c8 <line:71:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x55f32dcb3788 <line:73:5, col:50> col:45 used kill 'void ()'
| |-NoInlineAttr 0x55f32dcb3828 <col:20>
| `-OptimizeNoneAttr 0x55f32dcb3880 <col:30>
|-CXXMethodDecl 0x55f32dcb38f8 <line:75:5, col:54> col:45 used shared 'bool () const'
| |-NoInlineAttr 0x55f32dcb3998 <col:20>
| `-OptimizeNoneAttr 0x55f32dcb39f0 <col:30>
|-CXXMethodDecl 0x55f32dcb3a68 <line:76:5, col:55> col:13 clone 'Packet *()'
| `-WarnUnusedResultAttr 0x55f32dcb3b08 <col:36> warn_unused_result ""
|-CXXMethodDecl 0x55f32dcb3bb8 <line:77:5, col:102> col:56 uniqueify 'WritablePacket *()'
| |-NoInlineAttr 0x55f32dcb3c58 <col:20>
| |-OptimizeNoneAttr 0x55f32dcb3cb0 <col:30>
| `-WarnUnusedResultAttr 0x55f32dcb3cd8 <col:83> warn_unused_result ""
|-CXXMethodDecl 0x55f32dcb3d30 <line:79:5, col:68> col:61 used data 'const unsigned char *() const'
| |-NoInlineAttr 0x55f32dcb3dd0 <col:20>
| `-OptimizeNoneAttr 0x55f32dcb3e28 <col:30>
|-CXXMethodDecl 0x55f32dcb3e78 <line:80:5, col:72> col:61 used end_data 'const unsigned char *() const'
| |-NoInlineAttr 0x55f32dcb3f18 <col:20>
| `-OptimizeNoneAttr 0x55f32dcb3f70 <col:30>
|-CXXMethodDecl 0x55f32dcb3fb8 <line:81:5, col:58> col:49 length 'uint32_t () const'
| |-NoInlineAttr 0x55f32dcb4058 <col:20>
| `-OptimizeNoneAttr 0x55f32dcb40b0 <col:30>
|-CXXMethodDecl 0x55f32dcb40f8 <line:82:5, col:32> col:21 used headroom 'uint32_t () const' inline
|-CXXMethodDecl 0x55f32dcb41b8 <line:83:5, col:32> col:21 used tailroom 'uint32_t () const' inline
|-CXXMethodDecl 0x55f32dcb4280 <line:84:5, col:42> col:33 used buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x55f32dcb4348 <line:85:5, col:46> col:33 used end_buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x55f32dcb4408 <line:86:5, col:37> col:21 used buffer_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55f32dcb4528 <line:97:5, line:99:5> line:97:28 buffer_destructor 'Packet::buffer_destructor_type () const'
| `-CompoundStmt 0x55f32dccdd80 <col:54, line:99:5>
|   `-ReturnStmt 0x55f32dccdd70 <line:98:2, col:9>
|     `-ImplicitCastExpr 0x55f32dccdd58 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-MemberExpr 0x55f32dccdd28 <col:9> 'const Packet::buffer_destructor_type':'void (*const)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x55f32dcc4808
|         `-CXXThisExpr 0x55f32dccdd18 <col:9> 'const Packet *' implicit this
|-CXXMethodDecl 0x55f32dcb46c8 <line:101:5, line:103:5> line:101:10 set_buffer_destructor 'void (Packet::buffer_destructor_type)'
| |-ParmVarDecl 0x55f32dcb45d8 <col:32, col:55> col:55 used destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| `-CompoundStmt 0x55f32dccde30 <col:67, line:103:5>
|   `-BinaryOperator 0x55f32dccde10 <line:102:9, col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x55f32dccdda8 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x55f32dcc4808
|     | `-CXXThisExpr 0x55f32dccdd98 <col:9> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x55f32dccddf8 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-DeclRefExpr 0x55f32dccddd8 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ParmVar 0x55f32dcb45d8 'destructor' 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-CXXMethodDecl 0x55f32dcb47c0 <line:105:5, line:107:5> line:105:11 destructor_argument 'void *()'
| `-CompoundStmt 0x55f32dccdeb0 <col:33, line:107:5>
|   `-ReturnStmt 0x55f32dccdea0 <line:106:9, col:16>
|     `-ImplicitCastExpr 0x55f32dccde88 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x55f32dccde58 <col:16> 'void *' lvalue ->_destructor_argument 0x55f32dcc4870
|         `-CXXThisExpr 0x55f32dccde48 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x55f32dcb4880 <line:109:5, line:113:5> line:109:10 reset_buffer 'void ()'
| `-CompoundStmt 0x55f32dcce4e0 <col:25, line:113:5>
|   |-ParenExpr 0x55f32dcce228 <line:110:2, col:146> 'void'
|   | `-ConditionalOperator 0x55f32dcce1f8 <col:3, col:145> 'void'
|   |   |-CXXStaticCastExpr 0x55f32dccdf68 <col:3, col:32> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x55f32dccdf40 <col:23, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-CXXMemberCallExpr 0x55f32dccdf08 <col:24, col:31> 'bool'
|   |   |     `-MemberExpr 0x55f32dccded8 <col:24> '<bound member function type>' ->shared 0x55f32dcb38f8
|   |   |       `-ImplicitCastExpr 0x55f32dccdf28 <col:24> 'const Packet *' <NoOp>
|   |   |         `-CXXThisExpr 0x55f32dccdec8 <col:24> 'Packet *' implicit this
|   |   |-CXXFunctionalCastExpr 0x55f32dccdfc8 <col:36, col:43> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55f32dccdfa8 <col:42> 'int' 0
|   |   `-CallExpr 0x55f32dcce158 <col:47, col:145> 'void'
|   |     |-ImplicitCastExpr 0x55f32dcce140 <col:47> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55f32dcce120 <col:47> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55f32d8255d0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55f32dcce198 <col:62> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f32dcce038 <col:62> 'const char [10]' lvalue "!shared()"
|   |     |-ImplicitCastExpr 0x55f32dcce1b0 <col:75> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f32dcce060 <col:75> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55f32dcce1c8 <col:107> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55f32dcce098 <col:107> 'int' 110
|   |     `-ImplicitCastExpr 0x55f32dcce1e0 <col:112, col:126> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55f32dcce108 <col:112, col:126> 'const char [28]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55f32dcce0f0 <col:126> 'const char [28]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55f32dcce0b8 <col:126> 'const char [28]' lvalue "void Packet::reset_buffer()"
|   |-BinaryOperator 0x55f32dcce428 <line:111:2, col:33> 'unsigned char *' lvalue '='
|   | |-MemberExpr 0x55f32dcce258 <col:2> 'unsigned char *' lvalue ->_head 0x55f32dcc4610
|   | | `-CXXThisExpr 0x55f32dcce248 <col:2> 'Packet *' implicit this
|   | `-ImplicitCastExpr 0x55f32dcce410 <col:10, col:33> 'unsigned char *' <LValueToRValue>
|   |   `-BinaryOperator 0x55f32dcce3f0 <col:10, col:33> 'unsigned char *' lvalue '='
|   |     |-MemberExpr 0x55f32dcce298 <col:10> 'unsigned char *' lvalue ->_data 0x55f32dcc4678
|   |     | `-CXXThisExpr 0x55f32dcce288 <col:10> 'Packet *' implicit this
|   |     `-ImplicitCastExpr 0x55f32dcce3d8 <col:18, col:33> 'unsigned char *' <LValueToRValue>
|   |       `-BinaryOperator 0x55f32dcce3b8 <col:18, col:33> 'unsigned char *' lvalue '='
|   |         |-MemberExpr 0x55f32dcce2d8 <col:18> 'unsigned char *' lvalue ->_tail 0x55f32dcc46e0
|   |         | `-CXXThisExpr 0x55f32dcce2c8 <col:18> 'Packet *' implicit this
|   |         `-ImplicitCastExpr 0x55f32dcce3a0 <col:26, col:33> 'unsigned char *' <LValueToRValue>
|   |           `-BinaryOperator 0x55f32dcce380 <col:26, col:33> 'unsigned char *' lvalue '='
|   |             |-MemberExpr 0x55f32dcce318 <col:26> 'unsigned char *' lvalue ->_end 0x55f32dcc4748
|   |             | `-CXXThisExpr 0x55f32dcce308 <col:26> 'Packet *' implicit this
|   |             `-ImplicitCastExpr 0x55f32dcce368 <col:33> 'unsigned char *' <NullToPointer>
|   |               `-IntegerLiteral 0x55f32dcce348 <col:33> 'int' 0
|   `-BinaryOperator 0x55f32dcce4c0 <line:112:2, col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x55f32dcce458 <col:2> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x55f32dcc4808
|     | `-CXXThisExpr 0x55f32dcce448 <col:2> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x55f32dcce4a8 <col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <NullToPointer>
|       `-IntegerLiteral 0x55f32dcce488 <col:16> 'int' 0
|-CXXMethodDecl 0x55f32dcb49c0 <line:141:5, col:109> col:56 push 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x55f32dcb4930 <col:61, col:70> col:70 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55f32dcb4a68 <col:20>
| |-OptimizeNoneAttr 0x55f32dcb4ac0 <col:30>
| `-WarnUnusedResultAttr 0x55f32dcb4ae8 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x55f32dcb4bb8 <line:152:5, col:120> col:56 push_mac_header 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x55f32dcb4b28 <col:72, col:81> col:81 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55f32dcb4c60 <col:20>
| |-OptimizeNoneAttr 0x55f32dcb4cb8 <col:30>
| `-WarnUnusedResultAttr 0x55f32dcb4ce0 <col:101> warn_unused_result ""
|-CXXMethodDecl 0x55f32dcb4e18 <line:171:5, col:76> col:13 nonunique_push 'Packet *(uint32_t)'
| |-ParmVarDecl 0x55f32dcb4d20 <col:28, col:37> col:37 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55f32dcb4ec0 <col:57> warn_unused_result ""
|-CXXMethodDecl 0x55f32dcb4fc0 <line:187:5, col:62> col:45 pull 'void (uint32_t)'
| |-ParmVarDecl 0x55f32dcb4f30 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55f32dcb5068 <col:20>
| `-OptimizeNoneAttr 0x55f32dcb50c0 <col:30>
|-CXXMethodDecl 0x55f32dcb5188 <line:213:5, col:73> col:21 put 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x55f32dcb50f8 <col:25, col:34> col:34 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55f32dcb5230 <col:54> warn_unused_result ""
|-CXXMethodDecl 0x55f32dcb5330 <line:230:5, col:75> col:13 nonunique_put 'Packet *(uint32_t)'
| |-ParmVarDecl 0x55f32dcb52a0 <col:27, col:36> col:36 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55f32dcb53d8 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x55f32dcb54d8 <line:245:5, col:62> col:45 take 'void (uint32_t)'
| |-ParmVarDecl 0x55f32dcb5448 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55f32dcb5580 <col:20>
| `-OptimizeNoneAttr 0x55f32dcb55d8 <col:30>
|-CXXMethodDecl 0x55f32dcb5768 <line:269:5, col:99> col:13 shift_data 'Packet *(int, bool)'
| |-ParmVarDecl 0x55f32dcb5618 <col:24, col:28> col:28 offset 'int'
| |-ParmVarDecl 0x55f32dcb5690 <col:36, col:59> col:41 free_on_failure 'bool' cinit
| | `-CXXBoolLiteralExpr 0x55f32dccdcd8 <col:59> 'bool' true
| `-WarnUnusedResultAttr 0x55f32dcb5818 <col:80> warn_unused_result ""
|-CXXMethodDecl 0x55f32dcb5a18 <line:271:5, col:71> col:17 shrink_data 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x55f32dcb5890 <col:29, col:50> col:50 data 'const unsigned char *'
| `-ParmVarDecl 0x55f32dcb5908 <col:56, col:65> col:65 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f32dcb5c28 <line:272:5, col:78> col:17 change_headroom_and_length 'void (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x55f32dcb5ad8 <col:44, col:53> col:53 headroom 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55f32dcb5b50 <col:63, col:72> col:72 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f32dcb5e38 <line:274:5, col:40> col:10 copy 'bool (Packet *, int)'
| |-ParmVarDecl 0x55f32dcb5ce8 <col:15, col:23> col:23 p 'Packet *'
| `-ParmVarDecl 0x55f32dcb5d68 <col:26, col:39> col:30 headroom 'int' cinit
|   `-IntegerLiteral 0x55f32dccdce8 <col:39> 'int' 0
|-CXXMethodDecl 0x55f32dcb5f08 <line:279:5, col:34> col:17 has_mac_header 'bool () const' inline
|-CXXMethodDecl 0x55f32dcb5fd0 <line:280:5, col:46> col:33 used mac_header 'const unsigned char *() const' inline
|-CXXMethodDecl 0x55f32dcb6098 <line:281:5, col:36> col:16 mac_header_offset 'int () const' inline
|-CXXMethodDecl 0x55f32dcb6158 <line:282:5, col:41> col:21 mac_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55f32dcb6220 <line:283:5, col:29> col:16 mac_length 'int () const' inline
|-CXXMethodDecl 0x55f32dcb6368 <line:284:5, col:54> col:17 set_mac_header 'void (const unsigned char *)' inline
| `-ParmVarDecl 0x55f32dcb62d8 <col:32, col:53> col:53 p 'const unsigned char *'
|-CXXMethodDecl 0x55f32dcb6538 <line:285:5, col:68> col:17 used set_mac_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x55f32dcb6428 <col:32, col:53> col:53 p 'const unsigned char *'
| `-ParmVarDecl 0x55f32dcb64a0 <col:56, col:65> col:65 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f32dcb6608 <line:286:5, col:34> col:17 clear_mac_header 'void ()' inline
|-CXXMethodDecl 0x55f32dcb66c8 <line:288:5, col:66> col:45 has_network_header 'bool () const'
| |-NoInlineAttr 0x55f32dcb6768 <col:20>
| `-OptimizeNoneAttr 0x55f32dcb67c0 <col:30>
|-CXXMethodDecl 0x55f32dcb6810 <line:289:5, col:78> col:61 used network_header 'const unsigned char *() const'
| |-NoInlineAttr 0x55f32dcb68b0 <col:20>
| `-OptimizeNoneAttr 0x55f32dcb6908 <col:30>
|-CXXMethodDecl 0x55f32dcb6958 <line:290:5, col:40> col:16 used network_header_offset 'int () const' inline
|-CXXMethodDecl 0x55f32dcb6a18 <line:291:5, col:45> col:21 used network_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55f32dcb6ae0 <line:292:5, col:61> col:44 network_length 'int () const'
| |-NoInlineAttr 0x55f32dcb6b80 <col:20>
| `-OptimizeNoneAttr 0x55f32dcb6bd8 <col:30>
|-CXXMethodDecl 0x55f32dcb6d28 <line:293:5, col:72> col:17 set_network_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x55f32dcb6c18 <col:36, col:57> col:57 p 'const unsigned char *'
| `-ParmVarDecl 0x55f32dcb6c90 <col:60, col:69> col:69 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f32dcb6e78 <line:294:5, col:55> col:17 set_network_header_length 'void (uint32_t)' inline
| `-ParmVarDecl 0x55f32dcb6de8 <col:43, col:52> col:52 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f32dcb6f50 <line:295:5, col:38> col:17 clear_network_header 'void ()' inline
|-CXXMethodDecl 0x55f32dcb7010 <line:297:5, col:68> col:45 has_transport_header 'bool () const'
| |-NoInlineAttr 0x55f32dcb70b0 <col:20>
| `-OptimizeNoneAttr 0x55f32dcb7108 <col:30>
|-CXXMethodDecl 0x55f32dcb7158 <line:298:5, col:80> col:61 used transport_header 'const unsigned char *() const'
| |-NoInlineAttr 0x55f32dcb71f8 <col:20>
| `-OptimizeNoneAttr 0x55f32dcb7250 <col:30>
|-CXXMethodDecl 0x55f32dcb72a0 <line:299:5, col:42> col:16 transport_header_offset 'int () const' inline
|-CXXMethodDecl 0x55f32dcb7368 <line:300:5, col:63> col:44 transport_length 'int () const'
| |-NoInlineAttr 0x55f32dcb7408 <col:20>
| `-OptimizeNoneAttr 0x55f32dcb7460 <col:30>
|-CXXMethodDecl 0x55f32dcb74a8 <line:301:5, col:40> col:17 clear_transport_header 'void ()' inline
|-CXXMethodDecl 0x55f32dcb75c8 <line:304:5, col:46> col:31 ether_header 'const click_ether *() const' inline
|-CXXMethodDecl 0x55f32dcb7738 <line:305:5, col:57> col:17 set_ether_header 'void (const click_ether *)' inline
| `-ParmVarDecl 0x55f32dcb7678 <col:34, col:53> col:53 ethh 'const click_ether *'
|-CXXMethodDecl 0x55f32dcb7828 <line:307:5, col:68> col:56 ip_header 'const click_ip *() const'
| |-NoInlineAttr 0x55f32dcb78c8 <col:20>
| `-OptimizeNoneAttr 0x55f32dcb7920 <col:30>
|-CXXMethodDecl 0x55f32dcb7970 <line:308:5, col:35> col:16 ip_header_offset 'int () const' inline
|-CXXMethodDecl 0x55f32dcb7a30 <line:309:5, col:40> col:21 ip_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55f32dcb7c68 <line:310:5, col:92> col:45 set_ip_header 'void (const click_ip *, uint32_t)'
| |-ParmVarDecl 0x55f32dcb7ae0 <col:59, col:75> col:75 iph 'const click_ip *'
| |-ParmVarDecl 0x55f32dcb7b58 <col:80, col:89> col:89 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55f32dcb7d18 <col:20>
| `-OptimizeNoneAttr 0x55f32dcb7d70 <col:30>
|-CXXMethodDecl 0x55f32dcb7e18 <line:312:5, col:70> col:57 ip6_header 'const click_ip6 *() const'
| |-NoInlineAttr 0x55f32dcb7eb8 <col:20>
| `-OptimizeNoneAttr 0x55f32dcb7f10 <col:30>
|-CXXMethodDecl 0x55f32dcb7f60 <line:313:5, col:64> col:44 ip6_header_offset 'int () const'
| |-NoInlineAttr 0x55f32dcb8000 <col:20>
| `-OptimizeNoneAttr 0x55f32dcb8058 <col:30>
|-CXXMethodDecl 0x55f32dcb80a0 <line:314:5, col:69> col:49 ip6_header_length 'uint32_t () const'
| |-NoInlineAttr 0x55f32dcb8140 <col:20>
| `-OptimizeNoneAttr 0x55f32dcb8198 <col:30>
|-CXXMethodDecl 0x55f32dcb8298 <line:315:5, col:81> col:45 set_ip6_header 'void (const click_ip6 *)'
| |-ParmVarDecl 0x55f32dcb81d0 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-NoInlineAttr 0x55f32dcb8340 <col:20>
| `-OptimizeNoneAttr 0x55f32dcb8398 <col:30>
|-CXXMethodDecl 0x55f32dcb8558 <line:316:5, col:95> col:45 set_ip6_header 'void (const click_ip6 *, uint32_t)'
| |-ParmVarDecl 0x55f32dcb83d0 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-ParmVarDecl 0x55f32dcb8448 <col:83, col:92> col:92 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55f32dcb8608 <col:20>
| `-OptimizeNoneAttr 0x55f32dcb8660 <col:30>
|-CXXMethodDecl 0x55f32dcb8708 <line:318:5, col:44> col:30 used icmp_header 'const click_icmp *() const' inline
|-CXXMethodDecl 0x55f32dcb8828 <line:319:5, col:42> col:29 used tcp_header 'const click_tcp *() const' inline
|-CXXMethodDecl 0x55f32dcb8948 <line:320:5, col:42> col:29 used udp_header 'const click_udp *() const' inline
|-AccessSpecDecl 0x55f32dcb89e8 <line:333:3, col:10> col:3 private
|-CXXRecordDecl 0x55f32dcb8a10 <line:335:5, col:11> col:11 referenced union Anno
|-CXXMethodDecl 0x55f32dcb8b38 <line:340:5, col:60> col:52 used xanno 'const Packet::Anno *() const'
| |-NoInlineAttr 0x55f32dcb8bd8 <col:20>
| `-OptimizeNoneAttr 0x55f32dcb8c30 <col:30>
|-CXXMethodDecl 0x55f32dcb8cd8 <line:341:5, col:52> col:46 used xanno 'Packet::Anno *()'
| |-NoInlineAttr 0x55f32dcb8d78 <col:20>
| `-OptimizeNoneAttr 0x55f32dcb8dd0 <col:30>
|-AccessSpecDecl 0x55f32dcb8df8 <line:344:3, col:9> col:3 public
|-EnumDecl 0x55f32dcb8e20 <line:349:5, line:351:5> line:349:5
| `-EnumConstantDecl 0x55f32dcb8f20 <line:350:2, col:14> col:2 referenced anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   `-ImplicitCastExpr 0x55f32dcb8f70 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55f32dcb8f00 <col:14> 'int' Int: 48
|       `-IntegerLiteral 0x55f32dcb8ee0 <col:14> 'int' 48
|-CXXMethodDecl 0x55f32dcb8fd8 <line:354:5, col:74> col:57 used timestamp_anno 'const Timestamp &() const'
| |-NoInlineAttr 0x55f32dcb9078 <col:20>
| `-OptimizeNoneAttr 0x55f32dcb90d0 <col:30>
|-CXXMethodDecl 0x55f32dcb9148 <line:356:5, col:66> col:51 used timestamp_anno 'Timestamp &()'
| |-NoInlineAttr 0x55f32dcb91e8 <col:20>
| `-OptimizeNoneAttr 0x55f32dcb9240 <col:30>
|-CXXMethodDecl 0x55f32dcb9308 <line:359:5, col:54> col:17 used set_timestamp_anno 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x55f32dcb9278 <col:36, col:53> col:53 t 'const Timestamp &'
|-CXXMethodDecl 0x55f32dcb94a8 <line:362:5, col:38> col:24 used device_anno 'net_device *() const' inline
|-CXXMethodDecl 0x55f32dcb9648 <line:364:5, col:48> col:17 used set_device_anno 'void (net_device *)' inline
| `-ParmVarDecl 0x55f32dcb9558 <col:33, col:45> col:45 dev 'net_device *'
|-EnumDecl 0x55f32dcb96f0 <line:368:5, line:381:5> line:368:10 referenced PacketType
| |-EnumConstantDecl 0x55f32dcb97f0 <line:369:2, col:9> col:2 HOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55f32dcb9ba0 <col:9> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f32dcb97d0 <col:9> 'int' Int: 0
| |     `-IntegerLiteral 0x55f32dcb97b0 <col:9> 'int' 0
| |-EnumConstantDecl 0x55f32dcb9880 <line:370:2, col:14> col:2 BROADCAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55f32dcb9bb8 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f32dcb9860 <col:14> 'int' Int: 1
| |     `-IntegerLiteral 0x55f32dcb9840 <col:14> 'int' 1
| |-EnumConstantDecl 0x55f32dcb9910 <line:372:2, col:14> col:2 MULTICAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55f32dcb9bd0 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f32dcb98f0 <col:14> 'int' Int: 2
| |     `-IntegerLiteral 0x55f32dcb98d0 <col:14> 'int' 2
| |-EnumConstantDecl 0x55f32dcb99a0 <line:374:2, col:14> col:2 OTHERHOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55f32dcb9be8 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f32dcb9980 <col:14> 'int' Int: 3
| |     `-IntegerLiteral 0x55f32dcb9960 <col:14> 'int' 3
| |-EnumConstantDecl 0x55f32dcb9a30 <line:377:2, col:13> col:2 OUTGOING 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55f32dcb9c00 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f32dcb9a10 <col:13> 'int' Int: 4
| |     `-IntegerLiteral 0x55f32dcb99f0 <col:13> 'int' 4
| |-EnumConstantDecl 0x55f32dcb9ac0 <line:379:2, col:13> col:2 LOOPBACK 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55f32dcb9c18 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f32dcb9aa0 <col:13> 'int' Int: 5
| |     `-IntegerLiteral 0x55f32dcb9a80 <col:13> 'int' 5
| `-EnumConstantDecl 0x55f32dcb9b50 <line:380:2, col:14> col:2 FASTROUTE 'Packet::PacketType'
|   `-ImplicitCastExpr 0x55f32dcb9c30 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55f32dcb9b30 <col:14> 'int' Int: 6
|       `-IntegerLiteral 0x55f32dcb9b10 <col:14> 'int' 6
|-CXXMethodDecl 0x55f32dcb9c98 <line:383:5, col:70> col:51 used packet_type_anno 'Packet::PacketType () const'
| |-NoInlineAttr 0x55f32dcb9d38 <col:20>
| `-OptimizeNoneAttr 0x55f32dcb9d90 <col:30>
|-CXXMethodDecl 0x55f32dcb9e88 <line:385:5, col:78> col:45 used set_packet_type_anno 'void (Packet::PacketType)'
| |-ParmVarDecl 0x55f32dcb9dc8 <col:66, col:77> col:77 t 'Packet::PacketType'
| |-NoInlineAttr 0x55f32dcb9f30 <col:20>
| `-OptimizeNoneAttr 0x55f32dcb9f88 <col:30>
|-CXXMethodDecl 0x55f32dcb9ff8 <line:410:5, col:27> col:20 next 'Packet *() const' inline
|-CXXMethodDecl 0x55f32dcba120 <line:412:5, col:26> col:21 next 'Packet *&()' inline
|-CXXMethodDecl 0x55f32dcba298 <line:414:5, col:35> col:17 set_next 'void (Packet *)' inline
| `-ParmVarDecl 0x55f32dcba1d0 <col:26, col:34> col:34 p 'Packet *'
|-CXXMethodDecl 0x55f32dcba360 <line:417:5, col:27> col:20 prev 'Packet *() const' inline
|-CXXMethodDecl 0x55f32dcba428 <line:419:5, col:26> col:21 prev 'Packet *&()' inline
|-CXXMethodDecl 0x55f32dcba568 <line:421:5, col:35> col:17 set_prev 'void (Packet *)' inline
| `-ParmVarDecl 0x55f32dcba4d8 <col:26, col:34> col:34 p 'Packet *'
|-EnumDecl 0x55f32dcba610 <line:423:5, line:426:5> line:423:5
| |-EnumConstantDecl 0x55f32dcba710 <line:424:2, col:23> col:2 referenced dst_ip_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x55f32dcba910 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f32dcba6f0 <col:23> 'int' Int: 0
| |     `-IntegerLiteral 0x55f32dcba6d0 <col:23> 'int' 0
| |-EnumConstantDecl 0x55f32dcba7a0 <col:26, col:45> col:26 dst_ip_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x55f32dcba928 <col:45> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f32dcba780 <col:45> 'int' Int: 4
| |     `-IntegerLiteral 0x55f32dcba760 <col:45> 'int' 4
| |-EnumConstantDecl 0x55f32dcba830 <line:425:2, col:24> col:2 dst_ip6_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x55f32dcba940 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f32dcba810 <col:24> 'int' Int: 0
| |     `-IntegerLiteral 0x55f32dcba7f0 <col:24> 'int' 0
| `-EnumConstantDecl 0x55f32dcba8c0 <col:27, col:47> col:27 dst_ip6_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
|   `-ImplicitCastExpr 0x55f32dcba958 <col:47> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55f32dcba8a0 <col:47> 'int' Int: 16
|       `-IntegerLiteral 0x55f32dcba880 <col:47> 'int' 16
|-CXXMethodDecl 0x55f32dcba9b8 <line:431:5, col:36> col:22 dst_ip_anno 'IPAddress () const' inline
|-CXXMethodDecl 0x55f32dcbab28 <line:436:5, col:75> col:45 set_dst_ip_anno 'void (IPAddress)'
| |-ParmVarDecl 0x55f32dcbaa68 <col:61, col:71> col:71 addr 'IPAddress'
| |-NoInlineAttr 0x55f32dcbabd0 <col:20>
| `-OptimizeNoneAttr 0x55f32dcbac28 <col:30>
|-CXXMethodDecl 0x55f32dcbac78 <line:441:5, col:36> col:11 anno 'void *()'
| `-CompoundStmt 0x55f32dcce600 <col:18, col:36>
|   `-ReturnStmt 0x55f32dcce5f0 <col:20, col:33>
|     `-ImplicitCastExpr 0x55f32dcce5d8 <col:27, col:33> 'void *' <BitCast>
|       `-CXXMemberCallExpr 0x55f32dcce5b8 <col:27, col:33> 'Packet::Anno *'
|         `-MemberExpr 0x55f32dcce588 <col:27> '<bound member function type>' ->xanno 0x55f32dcb8cd8
|           `-CXXThisExpr 0x55f32dcce578 <col:27> 'Packet *' implicit this
|-CXXMethodDecl 0x55f32dcbad70 <line:444:5, col:48> col:17 anno 'const void *() const'
| `-CompoundStmt 0x55f32dcce710 <col:30, col:48>
|   `-ReturnStmt 0x55f32dcce700 <col:32, col:45>
|     `-ImplicitCastExpr 0x55f32dcce6e8 <col:39, col:45> 'const void *' <BitCast>
|       `-CXXMemberCallExpr 0x55f32dcce6c8 <col:39, col:45> 'const Packet::Anno *'
|         `-MemberExpr 0x55f32dcce698 <col:39> '<bound member function type>' ->xanno 0x55f32dcb8b38
|           `-CXXThisExpr 0x55f32dcce688 <col:39> 'const Packet *' implicit this
|-CXXMethodDecl 0x55f32dcbae58 <line:447:5, col:50> col:14 used anno_u8 'uint8_t *()'
| `-CompoundStmt 0x55f32dcce8a8 <col:24, col:50>
|   `-ReturnStmt 0x55f32dcce898 <col:26, col:47>
|     `-UnaryOperator 0x55f32dcce880 <col:33, col:47> 'uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55f32dcce860 <col:34, col:47> 'uint8_t':'unsigned char' lvalue
|         |-ImplicitCastExpr 0x55f32dcce848 <col:34, col:43> 'uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55f32dcce7f8 <col:34, col:43> 'uint8_t [48]' lvalue ->u8 0x55f32dcc3b18
|         |   `-CXXMemberCallExpr 0x55f32dcce7d8 <col:34, col:40> 'Packet::Anno *'
|         |     `-MemberExpr 0x55f32dcce7a8 <col:34> '<bound member function type>' ->xanno 0x55f32dcb8cd8
|         |       `-CXXThisExpr 0x55f32dcce798 <col:34> 'Packet *' implicit this
|         `-IntegerLiteral 0x55f32dcce828 <col:46> 'int' 0
|-CXXMethodDecl 0x55f32dcbaf60 <line:450:5, col:62> col:20 used anno_u8 'const uint8_t *() const'
| `-CompoundStmt 0x55f32dccea78 <col:36, col:62>
|   `-ReturnStmt 0x55f32dccea68 <col:38, col:59>
|     `-UnaryOperator 0x55f32dccea50 <col:45, col:59> 'const uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55f32dccea30 <col:46, col:59> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x55f32dccea18 <col:46, col:55> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55f32dcce990 <col:46, col:55> 'uint8_t const[48]' lvalue ->u8 0x55f32dcc3b18
|         |   `-CXXMemberCallExpr 0x55f32dcce970 <col:46, col:52> 'const Packet::Anno *'
|         |     `-MemberExpr 0x55f32dcce940 <col:46> '<bound member function type>' ->xanno 0x55f32dcb8b38
|         |       `-CXXThisExpr 0x55f32dcce930 <col:46> 'const Packet *' implicit this
|         `-IntegerLiteral 0x55f32dcce9c0 <col:58> 'int' 0
|-CXXMethodDecl 0x55f32dcbb078 <line:453:5, col:53> col:15 used anno_u32 'uint32_t *()'
| `-CompoundStmt 0x55f32dccec10 <col:26, col:53>
|   `-ReturnStmt 0x55f32dccec00 <col:28, col:50>
|     `-UnaryOperator 0x55f32dccebe8 <col:35, col:50> 'uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55f32dccebc8 <col:36, col:50> 'uint32_t':'unsigned int' lvalue
|         |-ImplicitCastExpr 0x55f32dccebb0 <col:36, col:45> 'uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55f32dcceb60 <col:36, col:45> 'uint32_t [12]' lvalue ->u32 0x55f32dcc3e18
|         |   `-CXXMemberCallExpr 0x55f32dcceb40 <col:36, col:42> 'Packet::Anno *'
|         |     `-MemberExpr 0x55f32dcceb10 <col:36> '<bound member function type>' ->xanno 0x55f32dcb8cd8
|         |       `-CXXThisExpr 0x55f32dcceb00 <col:36> 'Packet *' implicit this
|         `-IntegerLiteral 0x55f32dcceb90 <col:49> 'int' 0
|-CXXMethodDecl 0x55f32dcbb198 <line:456:5, col:65> col:21 used anno_u32 'const uint32_t *() const'
| `-CompoundStmt 0x55f32dccede8 <col:38, col:65>
|   `-ReturnStmt 0x55f32dccedd8 <col:40, col:62>
|     `-UnaryOperator 0x55f32dccedc0 <col:47, col:62> 'const uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55f32dcceda0 <col:48, col:62> 'const uint32_t':'const unsigned int' lvalue
|         |-ImplicitCastExpr 0x55f32dcced88 <col:48, col:57> 'const uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55f32dccecf8 <col:48, col:57> 'uint32_t const[12]' lvalue ->u32 0x55f32dcc3e18
|         |   `-CXXMemberCallExpr 0x55f32dccecd8 <col:48, col:54> 'const Packet::Anno *'
|         |     `-MemberExpr 0x55f32dcceca8 <col:48> '<bound member function type>' ->xanno 0x55f32dcb8b38
|         |       `-CXXThisExpr 0x55f32dccec98 <col:48> 'const Packet *' implicit this
|         `-IntegerLiteral 0x55f32dcced28 <col:61> 'int' 0
|-CXXMethodDecl 0x55f32dcbb348 <line:460:5, line:463:5> line:460:13 used anno_u8 'uint8_t (int) const'
| |-ParmVarDecl 0x55f32dcbb250 <col:21, col:25> col:25 used i 'int'
| `-CompoundStmt 0x55f32dccf4b8 <col:34, line:463:5>
|   |-ParenExpr 0x55f32dccf300 <line:461:2, col:174> 'void'
|   | `-ConditionalOperator 0x55f32dccf2d0 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x55f32dccef38 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55f32dccef08 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55f32dccee58 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55f32dccee40 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55f32dccee00 <col:23> 'int' lvalue ParmVar 0x55f32dcbb250 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55f32dccee20 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55f32dcceee8 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55f32dcceeb8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55f32dccee78 <col:33> 'int' lvalue ParmVar 0x55f32dcbb250 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x55f32dcceed0 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x55f32dccee98 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55f32dcb8f20 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x55f32dccef98 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55f32dccef78 <col:56> 'int' 0
|   |   `-CallExpr 0x55f32dccf230 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x55f32dccf218 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55f32dccf1f8 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55f32d8255d0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55f32dccf270 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f32dccf088 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x55f32dccf288 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f32dccf0b8 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55f32dccf2a0 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55f32dccf0f0 <col:135> 'int' 461
|   |     `-ImplicitCastExpr 0x55f32dccf2b8 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55f32dccf1e0 <col:140, col:154> 'const char [35]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55f32dccf1c8 <col:154> 'const char [35]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55f32dccf188 <col:154> 'const char [35]' lvalue "uint8_t Packet::anno_u8(int) const"
|   `-ReturnStmt 0x55f32dccf4a8 <line:462:2, col:22>
|     `-ImplicitCastExpr 0x55f32dccf490 <col:9, col:22> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-ArraySubscriptExpr 0x55f32dccf470 <col:9, col:22> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x55f32dccf440 <col:9, col:18> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55f32dccf3f0 <col:9, col:18> 'uint8_t const[48]' lvalue ->u8 0x55f32dcc3b18
|         |   `-CXXMemberCallExpr 0x55f32dccf3d0 <col:9, col:15> 'const Packet::Anno *'
|         |     `-MemberExpr 0x55f32dccf3a0 <col:9> '<bound member function type>' ->xanno 0x55f32dcb8b38
|         |       `-CXXThisExpr 0x55f32dccf390 <col:9> 'const Packet *' implicit this
|         `-ImplicitCastExpr 0x55f32dccf458 <col:21> 'int' <LValueToRValue>
|           `-DeclRefExpr 0x55f32dccf420 <col:21> 'int' lvalue ParmVar 0x55f32dcbb250 'i' 'int'
|-CXXMethodDecl 0x55f32dcbb598 <line:469:5, line:472:5> line:469:10 used set_anno_u8 'void (int, uint8_t)'
| |-ParmVarDecl 0x55f32dcbb408 <col:22, col:26> col:26 used i 'int'
| |-ParmVarDecl 0x55f32dcbb480 <col:29, col:37> col:37 used x 'uint8_t':'unsigned char'
| `-CompoundStmt 0x55f32dccfb48 <col:40, line:472:5>
|   |-ParenExpr 0x55f32dccf960 <line:470:2, col:174> 'void'
|   | `-ConditionalOperator 0x55f32dccf930 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x55f32dccf610 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55f32dccf5e0 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55f32dccf530 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55f32dccf518 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55f32dccf4d8 <col:23> 'int' lvalue ParmVar 0x55f32dcbb408 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55f32dccf4f8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55f32dccf5c0 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55f32dccf590 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55f32dccf550 <col:33> 'int' lvalue ParmVar 0x55f32dcbb408 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x55f32dccf5a8 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x55f32dccf570 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55f32dcb8f20 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x55f32dccf670 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55f32dccf650 <col:56> 'int' 0
|   |   `-CallExpr 0x55f32dccf890 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x55f32dccf878 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55f32dccf858 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55f32d8255d0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55f32dccf8d0 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f32dccf6e0 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x55f32dccf8e8 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f32dccf710 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55f32dccf900 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55f32dccf748 <col:135> 'int' 470
|   |     `-ImplicitCastExpr 0x55f32dccf918 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55f32dccf840 <col:140, col:154> 'const char [39]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55f32dccf828 <col:154> 'const char [39]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55f32dccf7e8 <col:154> 'const char [39]' lvalue "void Packet::set_anno_u8(int, uint8_t)"
|   `-BinaryOperator 0x55f32dccfb28 <line:471:2, col:19> 'uint8_t':'unsigned char' lvalue '='
|     |-ArraySubscriptExpr 0x55f32dccfad0 <col:2, col:15> 'uint8_t':'unsigned char' lvalue
|     | |-ImplicitCastExpr 0x55f32dccfaa0 <col:2, col:11> 'uint8_t *' <ArrayToPointerDecay>
|     | | `-MemberExpr 0x55f32dccfa50 <col:2, col:11> 'uint8_t [48]' lvalue ->u8 0x55f32dcc3b18
|     | |   `-CXXMemberCallExpr 0x55f32dccfa30 <col:2, col:8> 'Packet::Anno *'
|     | |     `-MemberExpr 0x55f32dccfa00 <col:2> '<bound member function type>' ->xanno 0x55f32dcb8cd8
|     | |       `-CXXThisExpr 0x55f32dccf9f0 <col:2> 'Packet *' implicit this
|     | `-ImplicitCastExpr 0x55f32dccfab8 <col:14> 'int' <LValueToRValue>
|     |   `-DeclRefExpr 0x55f32dccfa80 <col:14> 'int' lvalue ParmVar 0x55f32dcbb408 'i' 'int'
|     `-ImplicitCastExpr 0x55f32dccfb10 <col:19> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-DeclRefExpr 0x55f32dccfaf0 <col:19> 'uint8_t':'unsigned char' lvalue ParmVar 0x55f32dcbb480 'x' 'uint8_t':'unsigned char'
|-CXXMethodDecl 0x55f32dcbb758 <line:479:5, line:485:5> line:479:14 used anno_u16 'uint16_t (int) const'
| |-ParmVarDecl 0x55f32dcbb660 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x55f32dcd02c8 <col:36, line:485:5>
|   |-ParenExpr 0x55f32dcd0030 <line:480:2, col:182> 'void'
|   | `-ConditionalOperator 0x55f32dcd0000 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55f32dccfce0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55f32dccfcb0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55f32dccfbc0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55f32dccfba8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55f32dccfb68 <col:23> 'int' lvalue ParmVar 0x55f32dcbb660 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55f32dccfb88 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55f32dccfc90 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55f32dccfc78 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55f32dccfbe0 <col:33> 'int' lvalue ParmVar 0x55f32dcbb660 'i' 'int'
|   |   |     `-BinaryOperator 0x55f32dccfc58 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55f32dccfc40 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55f32dccfc00 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55f32dcb8f20 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55f32dccfc20 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55f32dccfd40 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55f32dccfd20 <col:60> 'int' 0
|   |   `-CallExpr 0x55f32dccff60 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55f32dccff48 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55f32dccff28 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55f32d8255d0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55f32dccffa0 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f32dccfdb0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55f32dccffb8 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f32dccfde8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55f32dccffd0 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55f32dccfe20 <col:143> 'int' 480
|   |     `-ImplicitCastExpr 0x55f32dccffe8 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55f32dccff10 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55f32dccfef8 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55f32dccfeb8 <col:162> 'const char [37]' lvalue "uint16_t Packet::anno_u16(int) const"
|   `-ReturnStmt 0x55f32dcd02b8 <line:484:2, col:75>
|     `-ImplicitCastExpr 0x55f32dcd02a0 <col:9, col:75> 'click_aliasable_uint16_t':'unsigned short' <LValueToRValue>
|       `-UnaryOperator 0x55f32dcd0288 <col:9, col:75> 'const click_aliasable_uint16_t':'const unsigned short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55f32dcd0258 <col:10, col:75> 'const click_aliasable_uint16_t *' reinterpret_cast<const click_aliasable_uint16_t *> <BitCast>
|           `-BinaryOperator 0x55f32dcd01f8 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x55f32dcd01c8 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55f32dcd0140 <col:61, col:70> 'char const[48]' lvalue ->c 0x55f32dcc39f0
|             |   `-CXXMemberCallExpr 0x55f32dcd0120 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55f32dcd00f0 <col:61> '<bound member function type>' ->xanno 0x55f32dcb8b38
|             |       `-CXXThisExpr 0x55f32dcd00e0 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55f32dcd01e0 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55f32dcd0170 <col:74> 'int' lvalue ParmVar 0x55f32dcbb660 'i' 'int'
|-CXXMethodDecl 0x55f32dcbb9a8 <line:494:5, line:500:5> line:494:10 used set_anno_u16 'void (int, uint16_t)'
| |-ParmVarDecl 0x55f32dcbb818 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55f32dcbb890 <col:30, col:39> col:39 used x 'uint16_t':'unsigned short'
| `-CompoundStmt 0x55f32dcd0a18 <col:42, line:500:5>
|   |-ParenExpr 0x55f32dcd07b0 <line:495:2, col:182> 'void'
|   | `-ConditionalOperator 0x55f32dcd0780 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55f32dcd0460 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55f32dcd0430 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55f32dcd0340 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55f32dcd0328 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55f32dcd02e8 <col:23> 'int' lvalue ParmVar 0x55f32dcbb818 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55f32dcd0308 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55f32dcd0410 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55f32dcd03f8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55f32dcd0360 <col:33> 'int' lvalue ParmVar 0x55f32dcbb818 'i' 'int'
|   |   |     `-BinaryOperator 0x55f32dcd03d8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55f32dcd03c0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55f32dcd0380 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55f32dcb8f20 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55f32dcd03a0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55f32dcd04c0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55f32dcd04a0 <col:60> 'int' 0
|   |   `-CallExpr 0x55f32dcd06e0 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55f32dcd06c8 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55f32dcd06a8 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55f32d8255d0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55f32dcd0720 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f32dcd0530 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55f32dcd0738 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f32dcd0568 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55f32dcd0750 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55f32dcd05a0 <col:143> 'int' 495
|   |     `-ImplicitCastExpr 0x55f32dcd0768 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55f32dcd0690 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55f32dcd0678 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55f32dcd0638 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u16(int, uint16_t)"
|   `-BinaryOperator 0x55f32dcd09f8 <line:499:2, col:66> 'click_aliasable_uint16_t':'unsigned short' lvalue '='
|     |-UnaryOperator 0x55f32dcd09a8 <col:2, col:62> 'click_aliasable_uint16_t':'unsigned short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55f32dcd0978 <col:3, col:62> 'click_aliasable_uint16_t *' reinterpret_cast<click_aliasable_uint16_t *> <BitCast>
|     |   `-BinaryOperator 0x55f32dcd0920 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55f32dcd08f0 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55f32dcd08a0 <col:48, col:57> 'char [48]' lvalue ->c 0x55f32dcc39f0
|     |     |   `-CXXMemberCallExpr 0x55f32dcd0880 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55f32dcd0850 <col:48> '<bound member function type>' ->xanno 0x55f32dcb8cd8
|     |     |       `-CXXThisExpr 0x55f32dcd0840 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55f32dcd0908 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55f32dcd08d0 <col:61> 'int' lvalue ParmVar 0x55f32dcbb818 'i' 'int'
|     `-ImplicitCastExpr 0x55f32dcd09e0 <col:66> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x55f32dcd09c0 <col:66> 'uint16_t':'unsigned short' lvalue ParmVar 0x55f32dcbb890 'x' 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x55f32dcbbb68 <line:507:5, line:513:5> line:507:13 anno_s16 'int16_t (int) const'
| |-ParmVarDecl 0x55f32dcbba70 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x55f32dcd1178 <col:35, line:513:5>
|   |-ParenExpr 0x55f32dcd0e88 <line:508:2, col:182> 'void'
|   | `-ConditionalOperator 0x55f32dcd0e58 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55f32dcd0bb0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55f32dcd0b80 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55f32dcd0a90 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55f32dcd0a78 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55f32dcd0a38 <col:23> 'int' lvalue ParmVar 0x55f32dcbba70 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55f32dcd0a58 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55f32dcd0b60 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55f32dcd0b48 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55f32dcd0ab0 <col:33> 'int' lvalue ParmVar 0x55f32dcbba70 'i' 'int'
|   |   |     `-BinaryOperator 0x55f32dcd0b28 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55f32dcd0b10 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55f32dcd0ad0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55f32dcb8f20 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55f32dcd0af0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55f32dcd0c10 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55f32dcd0bf0 <col:60> 'int' 0
|   |   `-CallExpr 0x55f32dcd0db8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55f32dcd0da0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55f32dcd0d80 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55f32d8255d0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55f32dcd0df8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f32dcd0c80 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55f32dcd0e10 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f32dcd0cb8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55f32dcd0e28 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55f32dcd0cf0 <col:143> 'int' 508
|   |     `-ImplicitCastExpr 0x55f32dcd0e40 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55f32dcd0d68 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55f32dcd0d50 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55f32dcd0d10 <col:162> 'const char [36]' lvalue "int16_t Packet::anno_s16(int) const"
|   `-ReturnStmt 0x55f32dcd1168 <line:512:2, col:74>
|     `-ImplicitCastExpr 0x55f32dcd1150 <col:9, col:74> 'click_aliasable_int16_t':'short' <LValueToRValue>
|       `-UnaryOperator 0x55f32dcd1138 <col:9, col:74> 'const click_aliasable_int16_t':'const short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55f32dcd1108 <col:10, col:74> 'const click_aliasable_int16_t *' reinterpret_cast<const click_aliasable_int16_t *> <BitCast>
|           `-BinaryOperator 0x55f32dcd1080 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x55f32dcd1050 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55f32dcd1000 <col:60, col:69> 'char const[48]' lvalue ->c 0x55f32dcc39f0
|             |   `-CXXMemberCallExpr 0x55f32dcd0fe0 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55f32dcd0fb0 <col:60> '<bound member function type>' ->xanno 0x55f32dcb8b38
|             |       `-CXXThisExpr 0x55f32dcd0fa0 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55f32dcd1068 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55f32dcd1030 <col:73> 'int' lvalue ParmVar 0x55f32dcbba70 'i' 'int'
|-CXXMethodDecl 0x55f32dcbbdb8 <line:522:5, line:528:5> line:522:10 set_anno_s16 'void (int, int16_t)'
| |-ParmVarDecl 0x55f32dcbbc28 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55f32dcbbca0 <col:30, col:38> col:38 used x 'int16_t':'short'
| `-CompoundStmt 0x55f32dcd1898 <col:41, line:528:5>
|   |-ParenExpr 0x55f32dcd1620 <line:523:2, col:182> 'void'
|   | `-ConditionalOperator 0x55f32dcd15f0 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55f32dcd1310 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55f32dcd12e0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55f32dcd11f0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55f32dcd11d8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55f32dcd1198 <col:23> 'int' lvalue ParmVar 0x55f32dcbbc28 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55f32dcd11b8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55f32dcd12c0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55f32dcd12a8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55f32dcd1210 <col:33> 'int' lvalue ParmVar 0x55f32dcbbc28 'i' 'int'
|   |   |     `-BinaryOperator 0x55f32dcd1288 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55f32dcd1270 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55f32dcd1230 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55f32dcb8f20 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55f32dcd1250 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55f32dcd1370 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55f32dcd1350 <col:60> 'int' 0
|   |   `-CallExpr 0x55f32dcd1550 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55f32dcd1538 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55f32dcd1518 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55f32d8255d0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55f32dcd1590 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f32dcd13e0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55f32dcd15a8 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f32dcd1418 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55f32dcd15c0 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55f32dcd1450 <col:143> 'int' 523
|   |     `-ImplicitCastExpr 0x55f32dcd15d8 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55f32dcd1500 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55f32dcd14e8 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55f32dcd14a8 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s16(int, int16_t)"
|   `-BinaryOperator 0x55f32dcd1878 <line:527:2, col:65> 'click_aliasable_int16_t':'short' lvalue '='
|     |-UnaryOperator 0x55f32dcd1828 <col:2, col:61> 'click_aliasable_int16_t':'short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55f32dcd17f8 <col:3, col:61> 'click_aliasable_int16_t *' reinterpret_cast<click_aliasable_int16_t *> <BitCast>
|     |   `-BinaryOperator 0x55f32dcd17a0 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55f32dcd1760 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55f32dcd1710 <col:47, col:56> 'char [48]' lvalue ->c 0x55f32dcc39f0
|     |     |   `-CXXMemberCallExpr 0x55f32dcd16f0 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55f32dcd16c0 <col:47> '<bound member function type>' ->xanno 0x55f32dcb8cd8
|     |     |       `-CXXThisExpr 0x55f32dcd16b0 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55f32dcd1778 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55f32dcd1740 <col:60> 'int' lvalue ParmVar 0x55f32dcbbc28 'i' 'int'
|     `-ImplicitCastExpr 0x55f32dcd1860 <col:65> 'int16_t':'short' <LValueToRValue>
|       `-DeclRefExpr 0x55f32dcd1840 <col:65> 'int16_t':'short' lvalue ParmVar 0x55f32dcbbca0 'x' 'int16_t':'short'
|-CXXMethodDecl 0x55f32dcbbf78 <line:535:5, line:541:5> line:535:14 used anno_u32 'uint32_t (int) const'
| |-ParmVarDecl 0x55f32dcbbe80 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x55f32dcd1f68 <col:36, line:541:5>
|   |-ParenExpr 0x55f32dcd1d08 <line:536:2, col:182> 'void'
|   | `-ConditionalOperator 0x55f32dcd1cd8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55f32dcd1a30 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55f32dcd1a00 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55f32dcd1910 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55f32dcd18f8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55f32dcd18b8 <col:23> 'int' lvalue ParmVar 0x55f32dcbbe80 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55f32dcd18d8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55f32dcd19e0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55f32dcd19c8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55f32dcd1930 <col:33> 'int' lvalue ParmVar 0x55f32dcbbe80 'i' 'int'
|   |   |     `-BinaryOperator 0x55f32dcd19a8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55f32dcd1990 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55f32dcd1950 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55f32dcb8f20 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55f32dcd1970 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x55f32dcd1a90 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55f32dcd1a70 <col:60> 'int' 0
|   |   `-CallExpr 0x55f32dcd1c38 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55f32dcd1c20 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55f32dcd1c00 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55f32d8255d0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55f32dcd1c78 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f32dcd1b00 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x55f32dcd1c90 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f32dcd1b38 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55f32dcd1ca8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55f32dcd1b70 <col:143> 'int' 536
|   |     `-ImplicitCastExpr 0x55f32dcd1cc0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55f32dcd1be8 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55f32dcd1bd0 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55f32dcd1b90 <col:162> 'const char [37]' lvalue "uint32_t Packet::anno_u32(int) const"
|   `-ReturnStmt 0x55f32dcd1f58 <line:540:2, col:75>
|     `-ImplicitCastExpr 0x55f32dcd1f40 <col:9, col:75> 'click_aliasable_uint32_t':'unsigned int' <LValueToRValue>
|       `-UnaryOperator 0x55f32dcd1f28 <col:9, col:75> 'const click_aliasable_uint32_t':'const unsigned int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55f32dcd1ef8 <col:10, col:75> 'const click_aliasable_uint32_t *' reinterpret_cast<const click_aliasable_uint32_t *> <BitCast>
|           `-BinaryOperator 0x55f32dcd1ea0 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x55f32dcd1e70 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55f32dcd1e20 <col:61, col:70> 'char const[48]' lvalue ->c 0x55f32dcc39f0
|             |   `-CXXMemberCallExpr 0x55f32dcd1e00 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55f32dcd1dd0 <col:61> '<bound member function type>' ->xanno 0x55f32dcb8b38
|             |       `-CXXThisExpr 0x55f32dcd1dc0 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55f32dcd1e88 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55f32dcd1e50 <col:74> 'int' lvalue ParmVar 0x55f32dcbbe80 'i' 'int'
|-CXXMethodDecl 0x55f32dcbc148 <line:550:5, col:75> col:45 used set_anno_u32 'void (int, uint32_t)'
| |-ParmVarDecl 0x55f32dcbc038 <col:58, col:62> col:62 i 'int'
| |-ParmVarDecl 0x55f32dcbc0b0 <col:65, col:74> col:74 x 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55f32dcbc1f8 <col:20>
| `-OptimizeNoneAttr 0x55f32dcbc250 <col:30>
|-CXXMethodDecl 0x55f32dcbc388 <line:556:5, line:562:5> line:556:13 used anno_s32 'int32_t (int) const'
| |-ParmVarDecl 0x55f32dcbc290 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x55f32dcd2638 <col:35, line:562:5>
|   |-ParenExpr 0x55f32dcd23d8 <line:557:2, col:182> 'void'
|   | `-ConditionalOperator 0x55f32dcd23a8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55f32dcd2100 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55f32dcd20d0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55f32dcd1fe0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55f32dcd1fc8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55f32dcd1f88 <col:23> 'int' lvalue ParmVar 0x55f32dcbc290 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55f32dcd1fa8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55f32dcd20b0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55f32dcd2098 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55f32dcd2000 <col:33> 'int' lvalue ParmVar 0x55f32dcbc290 'i' 'int'
|   |   |     `-BinaryOperator 0x55f32dcd2078 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55f32dcd2060 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55f32dcd2020 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55f32dcb8f20 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55f32dcd2040 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x55f32dcd2160 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55f32dcd2140 <col:60> 'int' 0
|   |   `-CallExpr 0x55f32dcd2308 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55f32dcd22f0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55f32dcd22d0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55f32d8255d0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55f32dcd2348 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f32dcd21d0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x55f32dcd2360 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f32dcd2208 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55f32dcd2378 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55f32dcd2240 <col:143> 'int' 557
|   |     `-ImplicitCastExpr 0x55f32dcd2390 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55f32dcd22b8 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55f32dcd22a0 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55f32dcd2260 <col:162> 'const char [36]' lvalue "int32_t Packet::anno_s32(int) const"
|   `-ReturnStmt 0x55f32dcd2628 <line:561:2, col:74>
|     `-ImplicitCastExpr 0x55f32dcd2610 <col:9, col:74> 'click_aliasable_int32_t':'int' <LValueToRValue>
|       `-UnaryOperator 0x55f32dcd25f8 <col:9, col:74> 'const click_aliasable_int32_t':'const int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55f32dcd25c8 <col:10, col:74> 'const click_aliasable_int32_t *' reinterpret_cast<const click_aliasable_int32_t *> <BitCast>
|           `-BinaryOperator 0x55f32dcd2570 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x55f32dcd2540 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55f32dcd24f0 <col:60, col:69> 'char const[48]' lvalue ->c 0x55f32dcc39f0
|             |   `-CXXMemberCallExpr 0x55f32dcd24d0 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55f32dcd24a0 <col:60> '<bound member function type>' ->xanno 0x55f32dcb8b38
|             |       `-CXXThisExpr 0x55f32dcd2490 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55f32dcd2558 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55f32dcd2520 <col:73> 'int' lvalue ParmVar 0x55f32dcbc290 'i' 'int'
|-CXXMethodDecl 0x55f32dcbc598 <line:571:5, line:577:5> line:571:10 used set_anno_s32 'void (int, int32_t)'
| |-ParmVarDecl 0x55f32dcbc448 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55f32dcbc4c0 <col:30, col:38> col:38 used x 'int32_t':'int'
| `-CompoundStmt 0x55f32dcd2d18 <col:41, line:577:5>
|   |-ParenExpr 0x55f32dcd2aa8 <line:572:2, col:182> 'void'
|   | `-ConditionalOperator 0x55f32dcd2a78 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55f32dcd27d0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55f32dcd27a0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55f32dcd26b0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55f32dcd2698 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55f32dcd2658 <col:23> 'int' lvalue ParmVar 0x55f32dcbc448 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55f32dcd2678 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55f32dcd2780 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55f32dcd2768 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55f32dcd26d0 <col:33> 'int' lvalue ParmVar 0x55f32dcbc448 'i' 'int'
|   |   |     `-BinaryOperator 0x55f32dcd2748 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55f32dcd2730 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55f32dcd26f0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55f32dcb8f20 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55f32dcd2710 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x55f32dcd2830 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55f32dcd2810 <col:60> 'int' 0
|   |   `-CallExpr 0x55f32dcd29d8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55f32dcd29c0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55f32dcd29a0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55f32d8255d0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55f32dcd2a18 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f32dcd28a0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x55f32dcd2a30 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f32dcd28d8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55f32dcd2a48 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55f32dcd2910 <col:143> 'int' 572
|   |     `-ImplicitCastExpr 0x55f32dcd2a60 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55f32dcd2988 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55f32dcd2970 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55f32dcd2930 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s32(int, int32_t)"
|   `-BinaryOperator 0x55f32dcd2cf8 <line:576:2, col:65> 'click_aliasable_int32_t':'int' lvalue '='
|     |-UnaryOperator 0x55f32dcd2ca8 <col:2, col:61> 'click_aliasable_int32_t':'int' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55f32dcd2c78 <col:3, col:61> 'click_aliasable_int32_t *' reinterpret_cast<click_aliasable_int32_t *> <BitCast>
|     |   `-BinaryOperator 0x55f32dcd2c18 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55f32dcd2be8 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55f32dcd2b98 <col:47, col:56> 'char [48]' lvalue ->c 0x55f32dcc39f0
|     |     |   `-CXXMemberCallExpr 0x55f32dcd2b78 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55f32dcd2b48 <col:47> '<bound member function type>' ->xanno 0x55f32dcb8cd8
|     |     |       `-CXXThisExpr 0x55f32dcd2b38 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55f32dcd2c00 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55f32dcd2bc8 <col:60> 'int' lvalue ParmVar 0x55f32dcbc448 'i' 'int'
|     `-ImplicitCastExpr 0x55f32dcd2ce0 <col:65> 'int32_t':'int' <LValueToRValue>
|       `-DeclRefExpr 0x55f32dcd2cc0 <col:65> 'int32_t':'int' lvalue ParmVar 0x55f32dcbc4c0 'x' 'int32_t':'int'
|-CXXMethodDecl 0x55f32dcbc758 <line:585:5, line:591:5> line:585:14 used anno_u64 'uint64_t (int) const'
| |-ParmVarDecl 0x55f32dcbc660 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x55f32dcd3448 <col:36, line:591:5>
|   |-ParenExpr 0x55f32dcd3188 <line:586:2, col:182> 'void'
|   | `-ConditionalOperator 0x55f32dcd3158 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55f32dcd2eb0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55f32dcd2e80 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55f32dcd2d90 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55f32dcd2d78 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55f32dcd2d38 <col:23> 'int' lvalue ParmVar 0x55f32dcbc660 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55f32dcd2d58 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55f32dcd2e60 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55f32dcd2e48 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55f32dcd2db0 <col:33> 'int' lvalue ParmVar 0x55f32dcbc660 'i' 'int'
|   |   |     `-BinaryOperator 0x55f32dcd2e28 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55f32dcd2e10 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55f32dcd2dd0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55f32dcb8f20 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55f32dcd2df0 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x55f32dcd2f10 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55f32dcd2ef0 <col:60> 'int' 0
|   |   `-CallExpr 0x55f32dcd30b8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55f32dcd30a0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55f32dcd3080 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55f32d8255d0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55f32dcd30f8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f32dcd2f80 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x55f32dcd3110 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f32dcd2fb8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55f32dcd3128 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55f32dcd2ff0 <col:143> 'int' 586
|   |     `-ImplicitCastExpr 0x55f32dcd3140 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55f32dcd3068 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55f32dcd3050 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55f32dcd3010 <col:162> 'const char [37]' lvalue "uint64_t Packet::anno_u64(int) const"
|   `-ReturnStmt 0x55f32dcd3438 <line:590:2, col:75>
|     `-ImplicitCastExpr 0x55f32dcd3420 <col:9, col:75> 'click_aliasable_uint64_t':'unsigned long' <LValueToRValue>
|       `-UnaryOperator 0x55f32dcd3408 <col:9, col:75> 'const click_aliasable_uint64_t':'const unsigned long' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55f32dcd33d8 <col:10, col:75> 'const click_aliasable_uint64_t *' reinterpret_cast<const click_aliasable_uint64_t *> <BitCast>
|           `-BinaryOperator 0x55f32dcd3350 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x55f32dcd3320 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55f32dcd32d0 <col:61, col:70> 'char const[48]' lvalue ->c 0x55f32dcc39f0
|             |   `-CXXMemberCallExpr 0x55f32dcd32b0 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55f32dcd3280 <col:61> '<bound member function type>' ->xanno 0x55f32dcb8b38
|             |       `-CXXThisExpr 0x55f32dcd3270 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55f32dcd3338 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55f32dcd3300 <col:74> 'int' lvalue ParmVar 0x55f32dcbc660 'i' 'int'
|-CXXMethodDecl 0x55f32dcbc9a8 <line:600:5, line:606:5> line:600:10 used set_anno_u64 'void (int, uint64_t)'
| |-ParmVarDecl 0x55f32dcbc818 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55f32dcbc890 <col:30, col:39> col:39 used x 'uint64_t':'unsigned long'
| `-CompoundStmt 0x55f32dcd3b28 <col:42, line:606:5>
|   |-ParenExpr 0x55f32dcd38b8 <line:601:2, col:182> 'void'
|   | `-ConditionalOperator 0x55f32dcd3888 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55f32dcd35e0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55f32dcd35b0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55f32dcd34c0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55f32dcd34a8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55f32dcd3468 <col:23> 'int' lvalue ParmVar 0x55f32dcbc818 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55f32dcd3488 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55f32dcd3590 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55f32dcd3578 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55f32dcd34e0 <col:33> 'int' lvalue ParmVar 0x55f32dcbc818 'i' 'int'
|   |   |     `-BinaryOperator 0x55f32dcd3558 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55f32dcd3540 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55f32dcd3500 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55f32dcb8f20 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55f32dcd3520 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x55f32dcd3640 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55f32dcd3620 <col:60> 'int' 0
|   |   `-CallExpr 0x55f32dcd37e8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55f32dcd37d0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55f32dcd37b0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55f32d8255d0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55f32dcd3828 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f32dcd36b0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x55f32dcd3840 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f32dcd36e8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55f32dcd3858 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55f32dcd3720 <col:143> 'int' 601
|   |     `-ImplicitCastExpr 0x55f32dcd3870 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55f32dcd3798 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55f32dcd3780 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55f32dcd3740 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u64(int, uint64_t)"
|   `-BinaryOperator 0x55f32dcd3b08 <line:605:2, col:66> 'click_aliasable_uint64_t':'unsigned long' lvalue '='
|     |-UnaryOperator 0x55f32dcd3ab8 <col:2, col:62> 'click_aliasable_uint64_t':'unsigned long' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55f32dcd3a88 <col:3, col:62> 'click_aliasable_uint64_t *' reinterpret_cast<click_aliasable_uint64_t *> <BitCast>
|     |   `-BinaryOperator 0x55f32dcd3a28 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55f32dcd39f8 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55f32dcd39a8 <col:48, col:57> 'char [48]' lvalue ->c 0x55f32dcc39f0
|     |     |   `-CXXMemberCallExpr 0x55f32dcd3988 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55f32dcd3958 <col:48> '<bound member function type>' ->xanno 0x55f32dcb8cd8
|     |     |       `-CXXThisExpr 0x55f32dcd3948 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55f32dcd3a10 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55f32dcd39d8 <col:61> 'int' lvalue ParmVar 0x55f32dcbc818 'i' 'int'
|     `-ImplicitCastExpr 0x55f32dcd3af0 <col:66> 'uint64_t':'unsigned long' <LValueToRValue>
|       `-DeclRefExpr 0x55f32dcd3ad0 <col:66> 'uint64_t':'unsigned long' lvalue ParmVar 0x55f32dcbc890 'x' 'uint64_t':'unsigned long'
|-CXXMethodDecl 0x55f32dcbcb40 <line:614:5, line:620:5> line:614:11 anno_ptr 'void *(int) const'
| |-ParmVarDecl 0x55f32dcbca70 <col:20, col:24> col:24 used i 'int'
| `-CompoundStmt 0x55f32dcd4398 <col:33, line:620:5>
|   |-ParenExpr 0x55f32dcd4110 <line:615:2, col:220> 'void'
|   | `-ConditionalOperator 0x55f32dcd40e0 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x55f32dcd3d30 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55f32dcd3d00 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55f32dcd3ba0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55f32dcd3b88 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55f32dcd3b48 <col:23> 'int' lvalue ParmVar 0x55f32dcbca70 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55f32dcd3b68 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55f32dcd3ce0 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x55f32dcd3cc8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55f32dcd3bc0 <col:33> 'int' lvalue ParmVar 0x55f32dcbca70 'i' 'int'
|   |   |     `-BinaryOperator 0x55f32dcd3ca8 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55f32dcd3c90 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55f32dcd3be0 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55f32dcb8f20 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x55f32dcd3c68 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x55f32dcd3c50 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x55f32dcd3c18 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x55f32dcd3d90 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55f32dcd3d70 <col:79> 'int' 0
|   |   `-CallExpr 0x55f32dcd4040 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x55f32dcd4028 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55f32dcd4008 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55f32d8255d0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55f32dcd4080 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f32dcd3e78 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x55f32dcd4098 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f32dcd3ec0 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55f32dcd40b0 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55f32dcd3ef8 <col:181> 'int' 615
|   |     `-ImplicitCastExpr 0x55f32dcd40c8 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55f32dcd3ff0 <col:186, col:200> 'const char [34]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55f32dcd3fd8 <col:200> 'const char [34]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55f32dcd3f98 <col:200> 'const char [34]' lvalue "void *Packet::anno_ptr(int) const"
|   `-ReturnStmt 0x55f32dcd4388 <line:619:2, col:81>
|     `-ImplicitCastExpr 0x55f32dcd4370 <col:9, col:81> 'click_aliasable_void_pointer_t':'void *' <LValueToRValue>
|       `-UnaryOperator 0x55f32dcd4358 <col:9, col:81> 'const click_aliasable_void_pointer_t':'void *const' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55f32dcd4328 <col:10, col:81> 'const click_aliasable_void_pointer_t *' reinterpret_cast<const click_aliasable_void_pointer_t *> <BitCast>
|           `-BinaryOperator 0x55f32dcd42a0 <col:67, col:80> 'const char *' '+'
|             |-ImplicitCastExpr 0x55f32dcd4270 <col:67, col:76> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55f32dcd4220 <col:67, col:76> 'char const[48]' lvalue ->c 0x55f32dcc39f0
|             |   `-CXXMemberCallExpr 0x55f32dcd4200 <col:67, col:73> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55f32dcd41d0 <col:67> '<bound member function type>' ->xanno 0x55f32dcb8b38
|             |       `-CXXThisExpr 0x55f32dcd41c0 <col:67> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55f32dcd4288 <col:80> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55f32dcd4250 <col:80> 'int' lvalue ParmVar 0x55f32dcbca70 'i' 'int'
|-CXXMethodDecl 0x55f32dcbcd58 <line:629:5, line:635:5> line:629:10 set_anno_ptr 'void (int, const void *)'
| |-ParmVarDecl 0x55f32dcbcc00 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55f32dcbcc80 <col:30, col:42> col:42 used x 'const void *'
| `-CompoundStmt 0x55f32dcd4bc0 <col:45, line:635:5>
|   |-ParenExpr 0x55f32dcd4908 <line:630:2, col:220> 'void'
|   | `-ConditionalOperator 0x55f32dcd48d8 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x55f32dcd45a0 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55f32dcd4570 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55f32dcd4410 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55f32dcd43f8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55f32dcd43b8 <col:23> 'int' lvalue ParmVar 0x55f32dcbcc00 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55f32dcd43d8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55f32dcd4550 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x55f32dcd4538 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55f32dcd4430 <col:33> 'int' lvalue ParmVar 0x55f32dcbcc00 'i' 'int'
|   |   |     `-BinaryOperator 0x55f32dcd4518 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55f32dcd4500 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55f32dcd4450 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55f32dcb8f20 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x55f32dcd44d8 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x55f32dcd44c0 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x55f32dcd4488 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x55f32dcd4600 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55f32dcd45e0 <col:79> 'int' 0
|   |   `-CallExpr 0x55f32dcd4838 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x55f32dcd4820 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55f32dcd4800 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55f32d8255d0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55f32dcd4878 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f32dcd4670 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x55f32dcd4890 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f32dcd46b8 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55f32dcd48a8 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55f32dcd46f0 <col:181> 'int' 630
|   |     `-ImplicitCastExpr 0x55f32dcd48c0 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55f32dcd47e8 <col:186, col:200> 'const char [45]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55f32dcd47d0 <col:200> 'const char [45]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55f32dcd4788 <col:200> 'const char [45]' lvalue "void Packet::set_anno_ptr(int, const void *)"
|   `-BinaryOperator 0x55f32dcd4ba0 <line:634:2, col:92> 'click_aliasable_void_pointer_t':'void *' lvalue '='
|     |-UnaryOperator 0x55f32dcd4b08 <col:2, col:68> 'click_aliasable_void_pointer_t':'void *' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55f32dcd4ad8 <col:3, col:68> 'click_aliasable_void_pointer_t *' reinterpret_cast<click_aliasable_void_pointer_t *> <BitCast>
|     |   `-BinaryOperator 0x55f32dcd4a78 <col:54, col:67> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55f32dcd4a48 <col:54, col:63> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55f32dcd49f8 <col:54, col:63> 'char [48]' lvalue ->c 0x55f32dcc39f0
|     |     |   `-CXXMemberCallExpr 0x55f32dcd49d8 <col:54, col:60> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55f32dcd49a8 <col:54> '<bound member function type>' ->xanno 0x55f32dcb8cd8
|     |     |       `-CXXThisExpr 0x55f32dcd4998 <col:54> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55f32dcd4a60 <col:67> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55f32dcd4a28 <col:67> 'int' lvalue ParmVar 0x55f32dcbcc00 'i' 'int'
|     `-CXXConstCastExpr 0x55f32dcd4b70 <col:72, col:92> 'void *' const_cast<void *> <NoOp>
|       `-ImplicitCastExpr 0x55f32dcd4b58 <col:91> 'const void *' <LValueToRValue> part_of_explicit_cast
|         `-DeclRefExpr 0x55f32dcd4b20 <col:91> 'const void *' lvalue ParmVar 0x55f32dcbcc80 'x' 'const void *'
|-CXXMethodDecl 0x55f32dcbce28 <line:638:5, line:640:5> line:638:20 data_packet 'Packet *()' inline
| `-CompoundStmt 0x55f32dcd4c48 <col:34, line:640:5>
|   `-ReturnStmt 0x55f32dcd4c38 <line:639:9, col:16>
|     `-ImplicitCastExpr 0x55f32dcd4c20 <col:16> 'Packet *' <LValueToRValue>
|       `-MemberExpr 0x55f32dcd4bf0 <col:16> 'Packet *' lvalue ->_data_packet 0x55f32dcc45a8
|         `-CXXThisExpr 0x55f32dcd4be0 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x55f32dcbcf68 <line:643:5, col:50> col:17 used clear_annotations 'void (bool)' inline
| `-ParmVarDecl 0x55f32dcbced8 <col:35, col:46> col:40 all 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55f32dccdd08 <col:46> 'bool' true
|-CXXMethodDecl 0x55f32dcbd0e8 <line:644:5, col:48> col:17 copy_annotations 'void (const Packet *)' inline
| `-ParmVarDecl 0x55f32dcbd020 <col:34, col:47> col:48 'const Packet *'
|-EnumDecl 0x55f32dcbd190 <line:648:5, line:660:5> line:648:5
| |-DeprecatedAttr 0x55f32dcbd940 <line:660:22> "" ""
| |-EnumConstantDecl 0x55f32dcbd290 <line:649:2, col:21> col:2 DEFAULT_HEADROOM 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55f32dcbd9b0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f32dcbd270 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 28
| |     `-DeclRefExpr 0x55f32dcbd250 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x55f32dcb23f0 'default_headroom' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x55f32dcbd320 <line:650:2, col:22> col:2 MIN_BUFFER_LENGTH 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55f32dcbd9c8 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f32dcbd300 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 64
| |     `-DeclRefExpr 0x55f32dcbd2e0 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x55f32dcb2480 'min_buffer_length' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x55f32dcbd3b0 <line:651:2, col:21> col:2 referenced addr_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55f32dcbd9e0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f32dcbd390 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x55f32dcbd370 <col:21> 'int' 0
| |-EnumConstantDecl 0x55f32dcbd440 <line:652:2, col:19> col:2 referenced addr_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55f32dcbd9f8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f32dcbd420 <col:19> 'int' Int: 16
| |     `-IntegerLiteral 0x55f32dcbd400 <col:19> 'int' 16
| |-EnumConstantDecl 0x55f32dcbd4d0 <line:653:2, col:21> col:2 referenced user_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55f32dcbda10 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f32dcbd4b0 <col:21> 'int' Int: 16
| |     `-IntegerLiteral 0x55f32dcbd490 <col:21> 'int' 16
| |-EnumConstantDecl 0x55f32dcbd560 <line:654:2, col:19> col:2 referenced user_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55f32dcbda28 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f32dcbd540 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x55f32dcbd520 <col:19> 'int' 32
| |-EnumConstantDecl 0x55f32dcbd5f0 <line:655:2, col:19> col:2 ADDR_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55f32dcbda40 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f32dcbd5d0 <col:19> 'int' Int: 16
| |     `-DeclRefExpr 0x55f32dcbd5b0 <col:19> 'int' EnumConstant 0x55f32dcbd440 'addr_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x55f32dcbd680 <line:656:2, col:19> col:2 referenced USER_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55f32dcbda58 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f32dcbd660 <col:19> 'int' Int: 32
| |     `-DeclRefExpr 0x55f32dcbd640 <col:19> 'int' EnumConstant 0x55f32dcbd560 'user_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x55f32dcbd750 <line:657:2, col:40> col:2 USER_ANNO_U16_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55f32dcbda70 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f32dcbd730 <col:23, col:40> 'int' Int: 16
| |     `-BinaryOperator 0x55f32dcbd710 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x55f32dcbd6d0 <col:23> 'int' EnumConstant 0x55f32dcbd680 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x55f32dcbd6f0 <col:40> 'int' 2
| |-EnumConstantDecl 0x55f32dcbd820 <line:658:2, col:40> col:2 USER_ANNO_U32_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55f32dcbda88 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f32dcbd800 <col:23, col:40> 'int' Int: 8
| |     `-BinaryOperator 0x55f32dcbd7e0 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x55f32dcbd7a0 <col:23> 'int' EnumConstant 0x55f32dcbd680 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x55f32dcbd7c0 <col:40> 'int' 4
| `-EnumConstantDecl 0x55f32dcbd8f0 <line:659:2, col:40> col:2 USER_ANNO_U64_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|   `-ImplicitCastExpr 0x55f32dcbdaa0 <col:23, col:40> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55f32dcbd8d0 <col:23, col:40> 'int' Int: 4
|       `-BinaryOperator 0x55f32dcbd8b0 <col:23, col:40> 'int' '/'
|         |-DeclRefExpr 0x55f32dcbd870 <col:23> 'int' EnumConstant 0x55f32dcbd680 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|         `-IntegerLiteral 0x55f32dcbd890 <col:40> 'int' 8
|-CXXMethodDecl 0x55f32dcbdae0 <line:661:5, col:79> col:33 buffer_data 'const unsigned char *() const' inline
| `-DeprecatedAttr 0x55f32dcbdb80 <col:68> "" ""
|-CXXMethodDecl 0x55f32dcbdc18 <line:662:5, col:56> col:18 addr_anno 'void *()' inline
| `-DeprecatedAttr 0x55f32dcbdcb8 <col:45> "" ""
|-CXXMethodDecl 0x55f32dcbdd50 <line:663:5, col:68> col:24 addr_anno 'const void *() const' inline
| `-DeprecatedAttr 0x55f32dcbddf0 <col:57> "" ""
|-CXXMethodDecl 0x55f32dcbde88 <line:664:5, col:56> col:18 user_anno 'void *()' inline
| `-DeprecatedAttr 0x55f32dcbdf28 <col:45> "" ""
|-CXXMethodDecl 0x55f32dcbdfc0 <line:665:5, col:68> col:24 user_anno 'const void *() const' inline
| `-DeprecatedAttr 0x55f32dcbe060 <col:57> "" ""
|-CXXMethodDecl 0x55f32dcbe0f0 <line:666:5, col:62> col:21 user_anno_u8 'uint8_t *()' inline
| `-DeprecatedAttr 0x55f32dcbe190 <col:51> "" ""
|-CXXMethodDecl 0x55f32dcbe220 <line:667:5, col:74> col:27 user_anno_u8 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x55f32dcbe2c0 <col:63> "" ""
|-CXXMethodDecl 0x55f32dcbe350 <line:668:5, col:64> col:22 user_anno_u32 'uint32_t *()' inline
| `-DeprecatedAttr 0x55f32dcbe3f0 <col:53> "" ""
|-CXXMethodDecl 0x55f32dcbe480 <line:669:5, col:76> col:28 user_anno_u32 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x55f32dcbe520 <col:65> "" ""
|-CXXMethodDecl 0x55f32dcbe638 <line:670:5, col:72> col:20 user_anno_u8 'uint8_t (int) const' inline
| |-ParmVarDecl 0x55f32dcbe5a8 <col:33, col:37> col:37 i 'int'
| `-DeprecatedAttr 0x55f32dcbe6e0 <col:61> "" ""
|-CXXMethodDecl 0x55f32dcbe878 <line:671:5, col:78> col:17 set_user_anno_u8 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x55f32dcbe768 <col:34, col:38> col:38 i 'int'
| |-ParmVarDecl 0x55f32dcbe7e0 <col:41, col:49> col:49 v 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x55f32dcbe928 <col:67> "" ""
|-CXXMethodDecl 0x55f32dcbea40 <line:672:5, col:74> col:21 user_anno_u16 'uint16_t (int) const' inline
| |-ParmVarDecl 0x55f32dcbe9b0 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x55f32dcbeae8 <col:63> "" ""
|-CXXMethodDecl 0x55f32dcbec80 <line:673:5, col:80> col:17 set_user_anno_u16 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x55f32dcbeb70 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55f32dcbebe8 <col:42, col:51> col:51 v 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x55f32dcbed30 <col:69> "" ""
|-CXXMethodDecl 0x55f32dcbee48 <line:674:5, col:74> col:21 user_anno_u32 'uint32_t (int) const' inline
| |-ParmVarDecl 0x55f32dcbedb8 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x55f32dcbeef0 <col:63> "" ""
|-CXXMethodDecl 0x55f32dcc15c8 <line:675:5, col:80> col:17 set_user_anno_u32 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x55f32dcc14b8 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55f32dcc1530 <col:42, col:51> col:51 v 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55f32dcc1678 <col:69> "" ""
|-CXXMethodDecl 0x55f32dcc1790 <line:676:5, col:73> col:20 user_anno_s32 'int32_t (int) const' inline
| |-ParmVarDecl 0x55f32dcc1700 <col:34, col:38> col:38 i 'int'
| `-DeprecatedAttr 0x55f32dcc1838 <col:62> "" ""
|-CXXMethodDecl 0x55f32dcc19d0 <line:677:5, col:79> col:17 set_user_anno_s32 'void (int, int32_t)' inline
| |-ParmVarDecl 0x55f32dcc18c0 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55f32dcc1938 <col:42, col:50> col:50 v 'int32_t':'int'
| `-DeprecatedAttr 0x55f32dcc1a80 <col:68> "" ""
|-CXXMethodDecl 0x55f32dcc1b98 <line:679:5, col:74> col:21 user_anno_u64 'uint64_t (int) const' inline
| |-ParmVarDecl 0x55f32dcc1b08 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x55f32dcc1c40 <col:63> "" ""
|-CXXMethodDecl 0x55f32dcc1dd8 <line:680:5, col:80> col:17 set_user_anno_u64 'void (int, uint64_t)' inline
| |-ParmVarDecl 0x55f32dcc1cc8 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55f32dcc1d40 <col:42, col:51> col:51 v 'uint64_t':'unsigned long'
| `-DeprecatedAttr 0x55f32dcc1e88 <col:69> "" ""
|-CXXMethodDecl 0x55f32dcc1f18 <line:682:5, col:75> col:27 all_user_anno 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x55f32dcc1fb8 <col:64> "" ""
|-CXXMethodDecl 0x55f32dcc2048 <line:683:5, col:63> col:21 all_user_anno 'uint8_t *()' inline
| `-DeprecatedAttr 0x55f32dcc20e8 <col:52> "" ""
|-CXXMethodDecl 0x55f32dcc2178 <line:684:5, col:78> col:28 all_user_anno_u 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x55f32dcc2218 <col:67> "" ""
|-CXXMethodDecl 0x55f32dcc22a8 <line:685:5, col:66> col:22 all_user_anno_u 'uint32_t *()' inline
| `-DeprecatedAttr 0x55f32dcc2348 <col:55> "" ""
|-CXXMethodDecl 0x55f32dcc2460 <line:686:5, col:69> col:20 user_anno_c 'uint8_t (int) const' inline
| |-ParmVarDecl 0x55f32dcc23d0 <col:32> col:35 'int'
| `-DeprecatedAttr 0x55f32dcc2508 <col:58> "" ""
|-CXXMethodDecl 0x55f32dcc26a0 <line:687:5, col:73> col:17 set_user_anno_c 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x55f32dcc2590 <col:33> col:36 'int'
| |-ParmVarDecl 0x55f32dcc2608 <col:38> col:45 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x55f32dcc2750 <col:62> "" ""
|-CXXMethodDecl 0x55f32dcc2868 <line:688:5, col:69> col:20 user_anno_s 'int16_t (int) const' inline
| |-ParmVarDecl 0x55f32dcc27d8 <col:32> col:35 'int'
| `-DeprecatedAttr 0x55f32dcc2910 <col:58> "" ""
|-CXXMethodDecl 0x55f32dcc2aa8 <line:689:5, col:73> col:17 set_user_anno_s 'void (int, int16_t)' inline
| |-ParmVarDecl 0x55f32dcc2998 <col:33> col:36 'int'
| |-ParmVarDecl 0x55f32dcc2a10 <col:38> col:45 'int16_t':'short'
| `-DeprecatedAttr 0x55f32dcc2b58 <col:62> "" ""
|-CXXMethodDecl 0x55f32dcc2c70 <line:690:5, col:71> col:21 user_anno_us 'uint16_t (int) const' inline
| |-ParmVarDecl 0x55f32dcc2be0 <col:34> col:37 'int'
| `-DeprecatedAttr 0x55f32dcc2d18 <col:60> "" ""
|-CXXMethodDecl 0x55f32dcc2eb0 <line:691:5, col:75> col:17 set_user_anno_us 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x55f32dcc2da0 <col:34> col:37 'int'
| |-ParmVarDecl 0x55f32dcc2e18 <col:39> col:47 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x55f32dcc2f60 <col:64> "" ""
|-CXXMethodDecl 0x55f32dcc3078 <line:692:5, col:69> col:20 user_anno_i 'int32_t (int) const' inline
| |-ParmVarDecl 0x55f32dcc2fe8 <col:32> col:35 'int'
| `-DeprecatedAttr 0x55f32dcc3120 <col:58> "" ""
|-CXXMethodDecl 0x55f32dcc32b8 <line:693:5, col:73> col:17 set_user_anno_i 'void (int, int32_t)' inline
| |-ParmVarDecl 0x55f32dcc31a8 <col:33> col:36 'int'
| |-ParmVarDecl 0x55f32dcc3220 <col:38> col:45 'int32_t':'int'
| `-DeprecatedAttr 0x55f32dcc3368 <col:62> "" ""
|-CXXMethodDecl 0x55f32dcc3480 <line:694:5, col:70> col:21 user_anno_u 'uint32_t (int) const' inline
| |-ParmVarDecl 0x55f32dcc33f0 <col:33> col:36 'int'
| `-DeprecatedAttr 0x55f32dcc3528 <col:59> "" ""
|-CXXMethodDecl 0x55f32dcc36c0 <line:695:5, col:74> col:17 set_user_anno_u 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x55f32dcc35b0 <col:33> col:36 'int'
| |-ParmVarDecl 0x55f32dcc3628 <col:38> col:46 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55f32dcc3770 <col:63> "" ""
|-AccessSpecDecl 0x55f32dcc37e0 <line:698:3, col:10> col:3 private
|-CXXRecordDecl 0x55f32dcc3808 prev 0x55f32dcb8a10 <line:702:5, line:711:5> line:702:11 referenced union Anno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55f32dcc3900 <col:5, col:11> col:11 implicit union Anno
| |-FieldDecl 0x55f32dcc39f0 <line:703:2, col:18> col:7 referenced c 'char [48]'
| |-FieldDecl 0x55f32dcc3b18 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
| |-FieldDecl 0x55f32dcc3c98 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
| |-FieldDecl 0x55f32dcc3e18 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
| |-FieldDecl 0x55f32dcc3f98 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
| |-CXXConstructorDecl 0x55f32dcd4dc8 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55f32dcd5638 <col:11>
| |-CXXDestructorDecl 0x55f32dcd4ea0 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
| |-CXXConstructorDecl 0x55f32dcd4fd8 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x55f32dcd4fd8
| | `-ParmVarDecl 0x55f32dcd50e8 <col:11> col:11 'const Packet::Anno &'
| |-CXXConstructorDecl 0x55f32dcd5188 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55f32dcd5188
| | `-ParmVarDecl 0x55f32dcd5298 <col:11> col:11 'Packet::Anno &&'
| |-CXXMethodDecl 0x55f32dcd8058 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55f32dcd8168 <col:11> col:11 'const Packet::Anno &'
| | `-CompoundStmt 0x55f32dcd83e8 <col:11>
| |   `-ReturnStmt 0x55f32dcd83d8 <col:11>
| |     `-UnaryOperator 0x55f32dcd83c0 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x55f32dcd83b0 <col:11> 'Packet::Anno *' this
| `-CXXMethodDecl 0x55f32dcd81d8 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55f32dcd81d8
|   `-ParmVarDecl 0x55f32dcd82e8 <col:11> col:11 'Packet::Anno &&'
|-CXXRecordDecl 0x55f32dcc4000 <line:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55f32dcc4118 <col:5, col:12> col:12 implicit struct AllAnno
| |-FieldDecl 0x55f32dcc41b8 <line:717:2, col:7> col:7 cb 'Packet::Anno'
| |-FieldDecl 0x55f32dcc4220 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
| |-FieldDecl 0x55f32dcc4288 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
| |-FieldDecl 0x55f32dcc42f0 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
| |-FieldDecl 0x55f32dcc4350 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
| |-FieldDecl 0x55f32dcc4410 <line:722:2, col:34> col:7 timestamp 'char [8]'
| |-FieldDecl 0x55f32dcc4470 <line:723:2, col:10> col:10 referenced next 'Packet *'
| |-FieldDecl 0x55f32dcc44d0 <line:724:2, col:10> col:10 referenced prev 'Packet *'
| |-CXXConstructorDecl 0x55f32dcd4cd8 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| | |-CXXCtorInitializer Field 0x55f32dcc41b8 'cb' 'Packet::Anno'
| | | `-CXXConstructExpr 0x55f32dcd5648 <col:12> 'Packet::Anno' 'void () noexcept'
| | `-CompoundStmt 0x55f32dcd56a0 <col:12>
| |-CXXConstructorDecl 0x55f32dcd5308 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x55f32dcd5308
| | `-ParmVarDecl 0x55f32dcd5418 <col:12> col:12 'const Packet::AllAnno &'
| |-CXXConstructorDecl 0x55f32dcd54b8 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x55f32dcd54b8
| | `-ParmVarDecl 0x55f32dcd55c8 <col:12> col:12 'Packet::AllAnno &&'
| `-CXXDestructorDecl 0x55f32dcd7740 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial
|-FieldDecl 0x55f32dcc4548 <line:731:5, col:21> col:21 referenced _use_count 'atomic_uint32_t'
|-FieldDecl 0x55f32dcc45a8 <line:732:5, col:13> col:13 referenced _data_packet 'Packet *'
|-FieldDecl 0x55f32dcc4610 <line:734:5, col:20> col:20 referenced _head 'unsigned char *'
|-FieldDecl 0x55f32dcc4678 <line:735:5, col:20> col:20 referenced _data 'unsigned char *'
|-FieldDecl 0x55f32dcc46e0 <line:736:5, col:20> col:20 referenced _tail 'unsigned char *'
|-FieldDecl 0x55f32dcc4748 <line:737:5, col:20> col:20 referenced _end 'unsigned char *'
|-FieldDecl 0x55f32dcc47a8 <line:741:5, col:13> col:13 referenced _aa 'Packet::AllAnno'
|-FieldDecl 0x55f32dcc4808 <line:746:5, col:28> col:28 referenced _destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-FieldDecl 0x55f32dcc4870 <line:747:5, col:11> col:11 referenced _destructor_argument 'void *'
|-CXXConstructorDecl 0x55f32dcc48f8 <line:751:5, line:755:5> line:751:12 used Packet 'void ()' inline
| |-CXXCtorInitializer Field 0x55f32dcc4548 '_use_count' 'atomic_uint32_t'
| | `-CXXConstructExpr 0x55f32dcd4c70 <col:12> 'atomic_uint32_t' 'void () noexcept'
| |-CXXCtorInitializer Field 0x55f32dcc47a8 '_aa' 'Packet::AllAnno'
| | `-CXXConstructExpr 0x55f32dcd56b0 <col:12> 'Packet::AllAnno' 'void () noexcept'
| `-CompoundStmt 0x55f32dcd5710 <col:21, line:755:5>
|-CXXConstructorDecl 0x55f32dcc4a98 <line:756:5, col:27> col:5 Packet 'void (const Packet &)'
| `-ParmVarDecl 0x55f32dcc49d8 <col:12, col:26> col:26 x 'const Packet &'
|-CXXDestructorDecl 0x55f32dcc4b90 <line:757:5, col:13> col:5 used ~Packet 'void () noexcept'
|-CXXMethodDecl 0x55f32dcc4d78 <line:758:5, col:38> col:13 operator= 'Packet &(const Packet &)'
| `-ParmVarDecl 0x55f32dcc4c80 <col:23, col:37> col:37 x 'const Packet &'
|-CXXMethodDecl 0x55f32dcc5048 <line:761:5, col:74> col:10 alloc_data 'bool (uint32_t, uint32_t, uint32_t)'
| |-ParmVarDecl 0x55f32dcc4e30 <col:21, col:30> col:30 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55f32dcc4ea8 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55f32dcc4f20 <col:57, col:66> col:66 tailroom 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f32dcc5268 <line:768:5, col:95> col:17 shift_header_annotations 'void (const unsigned char *, int32_t)' inline
| |-ParmVarDecl 0x55f32dcc5118 <col:42, col:63> col:63 old_head 'const unsigned char *'
| `-ParmVarDecl 0x55f32dcc5190 <col:73, col:81> col:81 extra_headroom 'int32_t':'int'
|-CXXMethodDecl 0x55f32dccd848 <line:769:5, col:109> col:21 expensive_uniqueify 'WritablePacket *(int32_t, int32_t, bool)'
| |-ParmVarDecl 0x55f32dcc5328 <col:41, col:49> col:49 extra_headroom 'int32_t':'int'
| |-ParmVarDecl 0x55f32dcc53a0 <col:65, col:73> col:73 extra_tailroom 'int32_t':'int'
| `-ParmVarDecl 0x55f32dcc5418 <col:89, col:94> col:94 free_on_failure 'bool'
|-CXXMethodDecl 0x55f32dccd9a0 <line:770:5, col:51> col:21 used expensive_push 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x55f32dccd910 <col:36, col:45> col:45 nbytes 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f32dccdae8 <line:771:5, col:50> col:21 used expensive_put 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x55f32dccda58 <col:35, col:44> col:44 nbytes 'uint32_t':'unsigned int'
`-FriendDecl 0x55f32dccdbe0 <line:773:5, col:18> col:12 'class WritablePacket':'WritablePacket'

Layout: <CGRecordLayout
  LLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  NonVirtualBaseLLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct TaskLink
         0 |   struct TaskLink * _prev
         8 |   struct TaskLink * _next
        16 |   unsigned int _pass
           | [sizeof=24, dsize=20, align=8,
           |  nvsize=20, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f32ddfcf40 <../dummy_inc/click/task.hh:31:1, line:47:1> line:31:8 referenced struct TaskLink definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55f32ddfd058 <col:1, col:8> col:8 implicit referenced struct TaskLink
|-FieldDecl 0x55f32ddfd128 <line:33:5, col:15> col:15 referenced _prev 'TaskLink *'
|-FieldDecl 0x55f32ddfd188 <line:34:5, col:15> col:15 referenced _next 'TaskLink *'
|-FieldDecl 0x55f32ddfd1f0 <line:37:5, col:14> col:14 referenced _pass 'unsigned int'
|-CXXConstructorDecl 0x55f32ddfd278 <line:39:5, line:46:5> line:39:5 used TaskLink 'void ()'
| `-CompoundStmt 0x55f32de0a7f8 <col:16, line:46:5>
|   |-BinaryOperator 0x55f32de0a740 <line:41:9, col:25> 'TaskLink *' lvalue '='
|   | |-MemberExpr 0x55f32ddfd348 <col:9> 'TaskLink *' lvalue ->_prev 0x55f32ddfd128
|   | | `-CXXThisExpr 0x55f32ddfd338 <col:9> 'TaskLink *' implicit this
|   | `-ImplicitCastExpr 0x55f32de0a728 <col:17, col:25> 'TaskLink *' <LValueToRValue>
|   |   `-BinaryOperator 0x55f32de0a708 <col:17, col:25> 'TaskLink *' lvalue '='
|   |     |-MemberExpr 0x55f32de0a6a0 <col:17> 'TaskLink *' lvalue ->_next 0x55f32ddfd188
|   |     | `-CXXThisExpr 0x55f32ddfd378 <col:17> 'TaskLink *' implicit this
|   |     `-ImplicitCastExpr 0x55f32de0a6f0 <col:25> 'TaskLink *' <NullToPointer>
|   |       `-IntegerLiteral 0x55f32de0a6d0 <col:25> 'int' 0
|   `-BinaryOperator 0x55f32de0a7d8 <line:44:9, col:17> 'unsigned int' lvalue '='
|     |-MemberExpr 0x55f32de0a770 <col:9> 'unsigned int' lvalue ->_pass 0x55f32ddfd1f0
|     | `-CXXThisExpr 0x55f32de0a760 <col:9> 'TaskLink *' implicit this
|     `-ImplicitCastExpr 0x55f32de0a7c0 <col:17> 'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x55f32de0a7a0 <col:17> 'int' 0
|-CXXConstructorDecl 0x55f32de67368 <line:31:8> col:8 implicit constexpr TaskLink 'void (const TaskLink &)' inline default trivial noexcept-unevaluated 0x55f32de67368
| `-ParmVarDecl 0x55f32de67478 <col:8> col:8 'const TaskLink &'
|-CXXConstructorDecl 0x55f32de67518 <col:8> col:8 implicit constexpr TaskLink 'void (TaskLink &&)' inline default trivial noexcept-unevaluated 0x55f32de67518
| `-ParmVarDecl 0x55f32de67628 <col:8> col:8 'TaskLink &&'
|-CXXDestructorDecl 0x55f32de67818 <col:8> col:8 implicit ~TaskLink 'void ()' inline default trivial noexcept-unevaluated 0x55f32de67818
|-CXXMethodDecl 0x55f32de68018 <col:8> col:8 implicit operator= 'TaskLink &(const TaskLink &)' inline default trivial noexcept-unevaluated 0x55f32de68018
| `-ParmVarDecl 0x55f32de68128 <col:8> col:8 'const TaskLink &'
`-CXXMethodDecl 0x55f32de68198 <col:8> col:8 implicit operator= 'TaskLink &(TaskLink &&)' inline default trivial noexcept-unevaluated 0x55f32de68198
  `-ParmVarDecl 0x55f32de682a8 <col:8> col:8 'TaskLink &&'

Layout: <CGRecordLayout
  LLVMType:%struct.TaskLink = type <{ %struct.TaskLink*, %struct.TaskLink*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%struct.TaskLink.base = type <{ %struct.TaskLink*, %struct.TaskLink*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9)
         0 |   int16_t home_thread_id
         2 |   uint8_t is_scheduled
         3 |   uint8_t is_strong_unscheduled
           | [sizeof=4, dsize=4, align=2,
           |  nvsize=4, nvalign=2]

*** Dumping AST Record Layout
         0 | union Task::Status
         0 |   struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9) 
         0 |     int16_t home_thread_id
         2 |     uint8_t is_scheduled
         3 |     uint8_t is_strong_unscheduled
         0 |   uint32_t status
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Task::Pending
         0 |   class Task * t
         0 |   uintptr_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Task
         0 |   struct TaskLink (base)
         0 |     struct TaskLink * _prev
         8 |     struct TaskLink * _next
        16 |     unsigned int _pass
        20 |   unsigned int _stride
        24 |   int _tickets
        28 |   union Task::Status _status
        28 |     struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9) 
        28 |       int16_t home_thread_id
        30 |       uint8_t is_scheduled
        31 |       uint8_t is_strong_unscheduled
        28 |     uint32_t status
        32 |   TaskCallback _hook
        40 |   void * _thunk
        48 |   class RouterThread * _thread
        56 |   class Element * _owner
        64 |   union Task::Pending _pending_nextptr
        64 |     class Task * t
        64 |     uintptr_t x
           | [sizeof=72, dsize=72, align=8,
           |  nvsize=72, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f32de0cd68 <../dummy_inc/click/task.hh:315:9, line:319:9> line:315:9 struct definition
|-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x55f32de0ce98 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
|-FieldDecl 0x55f32de0cef8 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
|-FieldDecl 0x55f32de0cf58 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
|-CXXConstructorDecl 0x55f32de80138 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
|-CXXDestructorDecl 0x55f32de80210 <col:9> col:9 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x55f32de80210
|-CXXConstructorDecl 0x55f32de804c8 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x55f32de804c8
| `-ParmVarDecl 0x55f32de805d8 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
`-CXXConstructorDecl 0x55f32de80678 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x55f32de80678
  `-ParmVarDecl 0x55f32de80788 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'

Layout: <CGRecordLayout
  LLVMType:%struct.anon = type { i16, i8, i8 }
  NonVirtualBaseLLVMType:%struct.anon = type { i16, i8, i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f32de0cbc0 <../dummy_inc/click/task.hh:314:5, line:321:5> line:314:11 union Status definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x55f32de0ccd8 <col:5, col:11> col:11 implicit union Status
|-CXXRecordDecl 0x55f32de0cd68 <line:315:9, line:319:9> line:315:9 struct definition
| |-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x55f32de0ce98 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
| |-FieldDecl 0x55f32de0cef8 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
| |-FieldDecl 0x55f32de0cf58 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
| |-CXXConstructorDecl 0x55f32de80138 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
| |-CXXDestructorDecl 0x55f32de80210 <col:9> col:9 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x55f32de80210
| |-CXXConstructorDecl 0x55f32de804c8 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x55f32de804c8
| | `-ParmVarDecl 0x55f32de805d8 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
| `-CXXConstructorDecl 0x55f32de80678 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x55f32de80678
|   `-ParmVarDecl 0x55f32de80788 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'
|-FieldDecl 0x55f32de0d018 <col:9> col:9 implicit referenced 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
|-IndirectFieldDecl 0x55f32de0d078 <line:316:21> col:21 implicit home_thread_id 'int16_t':'short'
| |-Field 0x55f32de0d018 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x55f32de0ce98 'home_thread_id' 'int16_t':'short'
|-IndirectFieldDecl 0x55f32de0d0d0 <line:317:21> col:21 implicit is_scheduled 'uint8_t':'unsigned char'
| |-Field 0x55f32de0d018 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x55f32de0cef8 'is_scheduled' 'uint8_t':'unsigned char'
|-IndirectFieldDecl 0x55f32de0d128 <line:318:21> col:21 implicit is_strong_unscheduled 'uint8_t':'unsigned char'
| |-Field 0x55f32de0d018 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x55f32de0cf58 'is_strong_unscheduled' 'uint8_t':'unsigned char'
|-FieldDecl 0x55f32de0d180 <line:320:9, col:18> col:18 status 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55f32de80048 <line:314:11> col:11 implicit used Status 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55f32de809a8 <col:11>
|-CXXConstructorDecl 0x55f32de80318 <col:11> col:11 implicit constexpr Status 'void (const Task::Status &)' inline default trivial noexcept-unevaluated 0x55f32de80318
| `-ParmVarDecl 0x55f32de80428 <col:11> col:11 'const Task::Status &'
`-CXXConstructorDecl 0x55f32de80828 <col:11> col:11 implicit constexpr Status 'void (Task::Status &&)' inline default trivial noexcept-unevaluated 0x55f32de80828
  `-ParmVarDecl 0x55f32de80938 <col:11> col:11 'Task::Status &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Task::Status" = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class Vector<struct TimerSet::heap_element>
         0 |   class vector_memory<class sized_array_memory<16> > vm_
         0 |     vector_memory<class sized_array_memory<16> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class Timer *>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class SimpleSpinlock (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class TimerSet
         0 |   class Timestamp _timer_expiry
         0 |     union Timestamp::rep_t _t
         0 |       int64_t x
         8 |   unsigned int _max_timer_stride
        12 |   unsigned int _timer_stride
        16 |   unsigned int _timer_count
        24 |   class Vector<struct TimerSet::heap_element> _timer_heap
        24 |     class vector_memory<class sized_array_memory<16> > vm_
        24 |       vector_memory<class sized_array_memory<16> >::type * l_
        32 |       vector_memory::size_type n_
        36 |       vector_memory::size_type capacity_
        40 |   class Vector<class Timer *> _timer_runchunk
        40 |     class vector_memory<class sized_array_memory<8> > vm_
        40 |       vector_memory<class sized_array_memory<8> >::type * l_
        48 |       vector_memory::size_type n_
        52 |       vector_memory::size_type capacity_
        56 |   class SimpleSpinlock _timer_lock (empty)
        64 |   class Timestamp _timer_check
        64 |     union Timestamp::rep_t _t
        64 |       int64_t x
        72 |   uint32_t _timer_check_reports
           | [sizeof=80, dsize=76, align=8,
           |  nvsize=76, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct pollfd>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<24> >
         0 |   vector_memory<class sized_array_memory<24> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct SelectSet::SelectorInfo>
         0 |   class vector_memory<class sized_array_memory<24> > vm_
         0 |     vector_memory<class sized_array_memory<24> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class SelectSet
         0 |   int [2] _wake_pipe
         8 |   volatile _Bool _wake_pipe_pending
        16 |   class Vector<struct pollfd> _pollfds
        16 |     class vector_memory<class sized_array_memory<8> > vm_
        16 |       vector_memory<class sized_array_memory<8> >::type * l_
        24 |       vector_memory::size_type n_
        28 |       vector_memory::size_type capacity_
        32 |   class Vector<struct SelectSet::SelectorInfo> _selinfo
        32 |     class vector_memory<class sized_array_memory<24> > vm_
        32 |       vector_memory<class sized_array_memory<24> >::type * l_
        40 |       vector_memory::size_type n_
        44 |       vector_memory::size_type capacity_
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | class Spinlock (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class SpinlockIRQ (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class RouterThread
         0 |   struct TaskLink _task_link
         0 |     struct TaskLink * _prev
         8 |     struct TaskLink * _next
        16 |     unsigned int _pass
        24 |   volatile _Bool _stop_flag
        32 |   class TimerSet _timers
        32 |     class Timestamp _timer_expiry
        32 |       union Timestamp::rep_t _t
        32 |         int64_t x
        40 |     unsigned int _max_timer_stride
        44 |     unsigned int _timer_stride
        48 |     unsigned int _timer_count
        56 |     class Vector<struct TimerSet::heap_element> _timer_heap
        56 |       class vector_memory<class sized_array_memory<16> > vm_
        56 |         vector_memory<class sized_array_memory<16> >::type * l_
        64 |         vector_memory::size_type n_
        68 |         vector_memory::size_type capacity_
        72 |     class Vector<class Timer *> _timer_runchunk
        72 |       class vector_memory<class sized_array_memory<8> > vm_
        72 |         vector_memory<class sized_array_memory<8> >::type * l_
        80 |         vector_memory::size_type n_
        84 |         vector_memory::size_type capacity_
        88 |     class SimpleSpinlock _timer_lock (empty)
        96 |     class Timestamp _timer_check
        96 |       union Timestamp::rep_t _t
        96 |         int64_t x
       104 |     uint32_t _timer_check_reports
       112 |   class SelectSet _selects
       112 |     int [2] _wake_pipe
       120 |     volatile _Bool _wake_pipe_pending
       128 |     class Vector<struct pollfd> _pollfds
       128 |       class vector_memory<class sized_array_memory<8> > vm_
       128 |         vector_memory<class sized_array_memory<8> >::type * l_
       136 |         vector_memory::size_type n_
       140 |         vector_memory::size_type capacity_
       144 |     class Vector<struct SelectSet::SelectorInfo> _selinfo
       144 |       class vector_memory<class sized_array_memory<24> > vm_
       144 |         vector_memory<class sized_array_memory<24> >::type * l_
       152 |         vector_memory::size_type n_
       156 |         vector_memory::size_type capacity_
       192 |   class Spinlock _task_lock (empty)
       196 |   class atomic_uint32_t _task_blocker
       196 |     uint32_t _val
       200 |   class atomic_uint32_t _task_blocker_waiting
       200 |     uint32_t _val
       208 |   union Task::Pending _pending_head
       208 |     class Task * t
       208 |     uintptr_t x
       216 |   class Task::Pending * _pending_tail
       224 |   class SpinlockIRQ _pending_lock (empty)
       256 |   class Master * _master
       264 |   int _id
       268 |   _Bool _driver_entered
       272 |   unsigned int _tasks_per_iter
       276 |   unsigned int _iters_per_os
           | [sizeof=320, dsize=280, align=64,
           |  nvsize=280, nvalign=64]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f32dc83aa0 prev 0x55f32dc7a8e0 <../dummy_inc/click/timestamp.hh:539:5, line:566:5> line:539:11 referenced union rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55f32dc83b98 <col:5, col:11> col:11 implicit union rep_t
|-FieldDecl 0x55f32dc83c38 <line:541:9, col:17> col:17 referenced x 'int64_t':'long'
|-CXXConstructorDecl 0x55f32dc8aa00 <line:539:11> col:11 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55f32dc8ade8 <col:11>
|-CXXConstructorDecl 0x55f32dc8aae0 <col:11> col:11 implicit used constexpr rep_t 'void (const Timestamp::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55f32dc8abc8 <col:11> col:11 'const Timestamp::rep_t &'
| `-CompoundStmt 0x55f32dc8b530 <col:11>
|-CXXConstructorDecl 0x55f32dc8ac68 <col:11> col:11 implicit used constexpr rep_t 'void (Timestamp::rep_t &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55f32dc8ad78 <col:11> col:11 'Timestamp::rep_t &&'
| `-CompoundStmt 0x55f32dc8cd88 <col:11>
|-CXXDestructorDecl 0x55f32dc8c098 <col:11> col:11 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55f32d992a28 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(const Timestamp::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55f32d992b38 <col:11> col:11 'const Timestamp::rep_t &'
| `-CompoundStmt 0x55f32d993400 <col:11>
|   `-ReturnStmt 0x55f32d9933f0 <col:11>
|     `-UnaryOperator 0x55f32d9933d8 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55f32d9933c8 <col:11> 'Timestamp::rep_t *' this
`-CXXMethodDecl 0x55f32d992ba8 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(Timestamp::rep_t &&) noexcept' inline default trivial
  |-ParmVarDecl 0x55f32d992cb8 <col:11> col:11 'Timestamp::rep_t &&'
  `-CompoundStmt 0x55f32ddfb240 <col:11>
    `-ReturnStmt 0x55f32ddfb230 <col:11>
      `-UnaryOperator 0x55f32ddfb218 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
        `-CXXThisExpr 0x55f32ddfb208 <col:11> 'Timestamp::rep_t *' this

Layout: <CGRecordLayout
  LLVMType:%"union.Timestamp::rep_t" = type { i64 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f32dc79a98 prev 0x55f32dc797a8 <../dummy_inc/click/timestamp.hh:122:1, line:723:1> line:122:7 referenced class Timestamp definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55f32dc79b90 <col:1, col:7> col:7 implicit referenced class Timestamp
|-AccessSpecDecl 0x55f32dc79c20 <col:19, col:25> col:19 public
|-TypedefDecl 0x55f32dc79c58 <line:125:5, col:21> col:21 referenced seconds_type 'int32_t':'int'
| `-TypedefType 0x55f32d8dec00 'int32_t' sugar
|   |-Typedef 0x55f32d7ee328 'int32_t'
|   `-TypedefType 0x55f32d7c7510 '__int32_t' sugar
|     |-Typedef 0x55f32d7c7128 '__int32_t'
|     `-BuiltinType 0x55f32d785580 'int'
|-TypedefDecl 0x55f32dc79cc0 <line:128:5, col:21> col:21 referenced value_type 'int64_t':'long'
| `-TypedefType 0x55f32d8dedc0 'int64_t' sugar
|   |-Typedef 0x55f32d7ee390 'int64_t'
|   `-TypedefType 0x55f32d7c7630 '__int64_t' sugar
|     |-Typedef 0x55f32d7c7208 '__int64_t'
|     `-BuiltinType 0x55f32d7855a0 'long'
|-EnumDecl 0x55f32dc79d18 <line:133:5, line:140:5> line:133:5
| |-EnumConstantDecl 0x55f32dc79e90 <line:134:9, col:38> col:9 max_seconds 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:133:5)'
| | `-ConstantExpr 0x55f32dc79e70 <col:23, col:38> 'Timestamp::seconds_type':'int' Int: 2147483647
| |   `-CStyleCastExpr 0x55f32dc79e48 <col:23, col:38> 'Timestamp::seconds_type':'int' <NoOp>
| |     `-ImplicitCastExpr 0x55f32dc79e30 <col:38> 'Timestamp::seconds_type':'int' <IntegralCast> part_of_explicit_cast
| |       `-IntegerLiteral 0x55f32dc79e00 <col:38> 'unsigned int' 2147483647
| `-EnumConstantDecl 0x55f32dc79f88 <line:137:9, col:39> col:9 min_seconds 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:133:5)'
|   `-ConstantExpr 0x55f32dc79f68 <col:23, col:39> 'Timestamp::seconds_type':'int' Int: -2147483648
|     `-CStyleCastExpr 0x55f32dc79f40 <col:23, col:39> 'Timestamp::seconds_type':'int' <NoOp>
|       `-ImplicitCastExpr 0x55f32dc79f28 <col:38, col:39> 'Timestamp::seconds_type':'int' <IntegralCast> part_of_explicit_cast
|         `-UnaryOperator 0x55f32dc79f00 <col:38, col:39> 'unsigned int' prefix '-'
|           `-IntegerLiteral 0x55f32dc79ee0 <col:39> 'unsigned int' 2147483648
|-EnumDecl 0x55f32dc79fd8 <line:142:5, line:162:5> line:142:5
| |-EnumConstantDecl 0x55f32dc7a0e0 <line:143:9, col:24> col:9 referenced nsec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55f32dc7a630 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f32dc7a0c0 <col:24> 'int' Int: 1000000000
| |     `-IntegerLiteral 0x55f32dc7a0a0 <col:24> 'int' 1000000000
| |-EnumConstantDecl 0x55f32dc7a170 <line:144:9, col:25> col:9 nsec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55f32dc7a648 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f32dc7a150 <col:25> 'int' Int: 1000000
| |     `-IntegerLiteral 0x55f32dc7a130 <col:25> 'int' 1000000
| |-EnumConstantDecl 0x55f32dc7a200 <line:145:9, col:25> col:9 nsec_per_usec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55f32dc7a660 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f32dc7a1e0 <col:25> 'int' Int: 1000
| |     `-IntegerLiteral 0x55f32dc7a1c0 <col:25> 'int' 1000
| |-EnumConstantDecl 0x55f32dc7a290 <line:146:9, col:24> col:9 referenced usec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55f32dc7a678 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f32dc7a270 <col:24> 'int' Int: 1000000
| |     `-IntegerLiteral 0x55f32dc7a250 <col:24> 'int' 1000000
| |-EnumConstantDecl 0x55f32dc7a320 <line:147:9, col:25> col:9 usec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55f32dc7a690 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f32dc7a300 <col:25> 'int' Int: 1000
| |     `-IntegerLiteral 0x55f32dc7a2e0 <col:25> 'int' 1000
| |-EnumConstantDecl 0x55f32dc7a3b0 <line:148:9, col:24> col:9 referenced msec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55f32dc7a6a8 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f32dc7a390 <col:24> 'int' Int: 1000
| |     `-IntegerLiteral 0x55f32dc7a370 <col:24> 'int' 1000
| |-EnumConstantDecl 0x55f32dc7a440 <line:150:9, col:26> col:9 referenced subsec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55f32dc7a6c0 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f32dc7a420 <col:26> 'int' Int: 1000000000
| |     `-DeclRefExpr 0x55f32dc7a400 <col:26> 'int' EnumConstant 0x55f32dc7a0e0 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| |-EnumConstantDecl 0x55f32dc7a510 <line:157:9, col:44> col:9 referenced subsec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55f32dc7a6d8 <col:27, col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f32dc7a4f0 <col:27, col:44> 'int' Int: 1000000
| |     `-BinaryOperator 0x55f32dc7a4d0 <col:27, col:44> 'int' '/'
| |       |-DeclRefExpr 0x55f32dc7a490 <col:27> 'int' EnumConstant 0x55f32dc7a440 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| |       `-DeclRefExpr 0x55f32dc7a4b0 <col:44> 'int' EnumConstant 0x55f32dc7a3b0 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| `-EnumConstantDecl 0x55f32dc7a5e0 <line:158:9, col:44> col:9 referenced subsec_per_usec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ImplicitCastExpr 0x55f32dc7a6f0 <col:27, col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55f32dc7a5c0 <col:27, col:44> 'int' Int: 1000
|       `-BinaryOperator 0x55f32dc7a5a0 <col:27, col:44> 'int' '/'
|         |-DeclRefExpr 0x55f32dc7a560 <col:27> 'int' EnumConstant 0x55f32dc7a440 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|         `-DeclRefExpr 0x55f32dc7a580 <col:44> 'int' EnumConstant 0x55f32dc7a290 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-EnumDecl 0x55f32dc7a708 <line:164:5, line:166:5> line:164:5
| `-EnumConstantDecl 0x55f32dc7a810 <line:165:9, col:19> col:9 NSUBSEC 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:164:5)'
|   `-ImplicitCastExpr 0x55f32dc7a860 <col:19> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55f32dc7a7f0 <col:19> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' Int: 1000000000
|       `-DeclRefExpr 0x55f32dc7a7d0 <col:19> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f32dc7a440 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-TypedefDecl 0x55f32dc7a888 <line:168:5, col:32> col:32 referenced uninitialized_t 'uninitialized_type'
| `-RecordType 0x55f32d8de830 'uninitialized_type'
|   `-CXXRecord 0x55f32d8de798 'uninitialized_type'
|-CXXRecordDecl 0x55f32dc7a8e0 <line:170:5, col:11> col:11 referenced union rep_t
|-CXXConstructorDecl 0x55f32dc7a9f0 <line:174:5, line:176:5> line:174:12 used Timestamp 'void ()' inline
| |-CXXCtorInitializer Field 0x55f32dc84be8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55f32dc8adf8 <col:12> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55f32dc8af18 <col:24, line:176:5>
|   `-CXXMemberCallExpr 0x55f32dc8aed0 <line:175:9, col:20> 'void'
|     |-MemberExpr 0x55f32dc8ae60 <col:9> '<bound member function type>' ->assign 0x55f32dc7f638
|     | `-CXXThisExpr 0x55f32dc8ae50 <col:9> 'Timestamp *' implicit this
|     |-IntegerLiteral 0x55f32dc8ae90 <col:16> 'int' 0
|     `-ImplicitCastExpr 0x55f32dc8af00 <col:19> 'uint32_t':'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x55f32dc8aeb0 <col:19> 'int' 0
|-CXXConstructorDecl 0x55f32dc7ac38 <line:187:5, line:189:5> line:187:21 Timestamp 'void (long, uint32_t)' inline
| |-ParmVarDecl 0x55f32dc7aab0 <col:31, col:36> col:36 used sec 'long'
| |-ParmVarDecl 0x55f32dc7ab28 <col:41, col:59> col:50 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55f32dc86730 <col:59> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55f32dc86710 <col:59> 'int' 0
| |-CXXCtorInitializer Field 0x55f32dc84be8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55f32dc8af30 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55f32dc8b080 <col:62, line:189:5>
|   `-CXXMemberCallExpr 0x55f32dc8b008 <line:188:9, col:27> 'void'
|     |-MemberExpr 0x55f32dc8af98 <col:9> '<bound member function type>' ->assign 0x55f32dc7f638
|     | `-CXXThisExpr 0x55f32dc8af88 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55f32dc8b050 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x55f32dc8b038 <col:16> 'long' <LValueToRValue>
|     |   `-DeclRefExpr 0x55f32dc8afc8 <col:16> 'long' lvalue ParmVar 0x55f32dc7aab0 'sec' 'long'
|     `-ImplicitCastExpr 0x55f32dc8b068 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x55f32dc8afe8 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x55f32dc7ab28 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55f32dc7ae98 <line:191:5, line:193:5> line:191:21 used Timestamp 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x55f32dc7ad08 <col:31, col:35> col:35 used sec 'int'
| |-ParmVarDecl 0x55f32dc7ad80 <col:40, col:58> col:49 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55f32dc86768 <col:58> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55f32dc86748 <col:58> 'int' 0
| |-CXXCtorInitializer Field 0x55f32dc84be8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55f32dc8b098 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55f32dc8b1d0 <col:61, line:193:5>
|   `-CXXMemberCallExpr 0x55f32dc8b170 <line:192:9, col:27> 'void'
|     |-MemberExpr 0x55f32dc8b100 <col:9> '<bound member function type>' ->assign 0x55f32dc7f638
|     | `-CXXThisExpr 0x55f32dc8b0f0 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55f32dc8b1a0 <col:16> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x55f32dc8b130 <col:16> 'int' lvalue ParmVar 0x55f32dc7ad08 'sec' 'int'
|     `-ImplicitCastExpr 0x55f32dc8b1b8 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x55f32dc8b150 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x55f32dc7ad80 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55f32dc7b0f8 <line:195:5, line:197:5> line:195:21 Timestamp 'void (unsigned long, uint32_t)' inline
| |-ParmVarDecl 0x55f32dc7af68 <col:31, col:45> col:45 used sec 'unsigned long'
| |-ParmVarDecl 0x55f32dc7afe0 <col:50, col:68> col:59 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55f32dc867a0 <col:68> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55f32dc86780 <col:68> 'int' 0
| |-CXXCtorInitializer Field 0x55f32dc84be8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55f32dc8b1e8 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55f32dc8b338 <col:71, line:197:5>
|   `-CXXMemberCallExpr 0x55f32dc8b2c0 <line:196:9, col:27> 'void'
|     |-MemberExpr 0x55f32dc8b250 <col:9> '<bound member function type>' ->assign 0x55f32dc7f638
|     | `-CXXThisExpr 0x55f32dc8b240 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55f32dc8b308 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x55f32dc8b2f0 <col:16> 'unsigned long' <LValueToRValue>
|     |   `-DeclRefExpr 0x55f32dc8b280 <col:16> 'unsigned long' lvalue ParmVar 0x55f32dc7af68 'sec' 'unsigned long'
|     `-ImplicitCastExpr 0x55f32dc8b320 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x55f32dc8b2a0 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x55f32dc7afe0 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55f32dc7c290 <line:199:5, line:201:5> line:199:21 used Timestamp 'void (unsigned int, uint32_t)' inline
| |-ParmVarDecl 0x55f32dc7b1c8 <col:31, col:40> col:40 used sec 'unsigned int'
| |-ParmVarDecl 0x55f32dc7b240 <col:45, col:63> col:54 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55f32dc867d8 <col:63> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55f32dc867b8 <col:63> 'int' 0
| |-CXXCtorInitializer Field 0x55f32dc84be8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55f32dc8b350 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55f32dc8b4a0 <col:66, line:201:5>
|   `-CXXMemberCallExpr 0x55f32dc8b428 <line:200:9, col:27> 'void'
|     |-MemberExpr 0x55f32dc8b3b8 <col:9> '<bound member function type>' ->assign 0x55f32dc7f638
|     | `-CXXThisExpr 0x55f32dc8b3a8 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55f32dc8b470 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x55f32dc8b458 <col:16> 'unsigned int' <LValueToRValue>
|     |   `-DeclRefExpr 0x55f32dc8b3e8 <col:16> 'unsigned int' lvalue ParmVar 0x55f32dc7b1c8 'sec' 'unsigned int'
|     `-ImplicitCastExpr 0x55f32dc8b488 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x55f32dc8b408 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x55f32dc7b240 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55f32dc7c3f0 <line:203:5, col:37> col:21 used Timestamp 'void (double)' inline
| `-ParmVarDecl 0x55f32dc7c360 <col:31> col:37 'double'
|-CXXConstructorDecl 0x55f32dc7c588 <line:206:5, col:46> col:12 Timestamp 'void (const struct timeval &)' inline
| `-ParmVarDecl 0x55f32dc7c4c8 <col:22, col:44> col:44 tv 'const struct timeval &'
|-CXXConstructorDecl 0x55f32dc7c7b8 <line:208:5, col:47> col:12 Timestamp 'void (const struct timespec &)' inline
| `-ParmVarDecl 0x55f32dc7c6c0 <col:22, col:45> col:45 ts 'const struct timespec &'
|-CXXConstructorDecl 0x55f32dc7c968 <line:212:5, line:214:5> line:212:12 Timestamp 'void (const Timestamp::rep_t &)' inline
| |-ParmVarDecl 0x55f32dc7c8a8 <col:22, col:35> col:35 used rep 'const Timestamp::rep_t &'
| |-CXXCtorInitializer Field 0x55f32dc84be8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55f32dc8b540 <line:213:11, col:17> 'Timestamp::rep_t' 'void (const Timestamp::rep_t &) noexcept'
| |   `-DeclRefExpr 0x55f32dc8b4b8 <col:14> 'const Timestamp::rep_t' lvalue ParmVar 0x55f32dc7c8a8 'rep' 'const Timestamp::rep_t &'
| `-CompoundStmt 0x55f32dc8b5a0 <col:19, line:214:5>
|-CXXConstructorDecl 0x55f32dc7cb38 <line:217:5, line:219:5> line:217:12 used Timestamp 'void (const Timestamp::uninitialized_t &)' inline
| |-ParmVarDecl 0x55f32dc7ca78 <col:22, col:45> col:45 used unused 'const Timestamp::uninitialized_t &'
| |-CXXCtorInitializer Field 0x55f32dc84be8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55f32dc8b5b0 <col:12> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55f32dc8b660 <col:53, line:219:5>
|   `-CStyleCastExpr 0x55f32dc8b638 <line:218:9, col:16> 'void' <ToVoid>
|     `-DeclRefExpr 0x55f32dc8b608 <col:16> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue ParmVar 0x55f32dc7ca78 'unused' 'const Timestamp::uninitialized_t &'
|-TypedefDecl 0x55f32dc7cd28 <line:221:5, col:64> col:39 referenced unspecified_bool_type 'Timestamp::seconds_type (Timestamp::*)() const'
| `-MemberPointerType 0x55f32dc7cca0 'Timestamp::seconds_type (Timestamp::*)() const'
|   |-RecordType 0x55f32dc79840 'Timestamp'
|   | `-CXXRecord 0x55f32dc79a98 'Timestamp'
|   `-ParenType 0x55f32dc7cc40 'Timestamp::seconds_type () const' sugar
|     `-FunctionProtoType 0x55f32dc7cc10 'Timestamp::seconds_type () const' const cdecl
|       `-TypedefType 0x55f32dc79de0 'Timestamp::seconds_type' sugar
|         |-Typedef 0x55f32dc79c58 'seconds_type'
|         `-TypedefType 0x55f32d8dec00 'int32_t' sugar
|           |-Typedef 0x55f32d7ee328 'int32_t'
|           `-TypedefType 0x55f32d7c7510 '__int32_t' sugar
|             |-Typedef 0x55f32d7c7128 '__int32_t'
|             `-BuiltinType 0x55f32d785580 'int'
|-CXXConversionDecl 0x55f32dc7ce68 <line:222:5, col:45> col:12 used operator int (Timestamp::*)() const 'Timestamp::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x55f32dc7cf38 <line:225:5, line:231:5> line:225:17 is_negative 'bool () const' inline
| `-CompoundStmt 0x55f32dc8b768 <col:37, line:231:5>
|   `-ReturnStmt 0x55f32dc8b758 <line:227:9, col:23>
|     `-BinaryOperator 0x55f32dc8b738 <col:16, col:23> 'bool' '<'
|       |-ImplicitCastExpr 0x55f32dc8b708 <col:16, col:19> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x55f32dc8b6b8 <col:16, col:19> 'const int64_t':'const long' lvalue .x 0x55f32dc83c38
|       |   `-MemberExpr 0x55f32dc8b688 <col:16> 'const Timestamp::rep_t' lvalue ->_t 0x55f32dc84be8
|       |     `-CXXThisExpr 0x55f32dc8b678 <col:16> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x55f32dc8b720 <col:23> 'long' <IntegralCast>
|         `-IntegerLiteral 0x55f32dc8b6e8 <col:23> 'int' 0
|-CXXMethodDecl 0x55f32dc7cff8 <line:233:5, col:31> col:25 used sec 'Timestamp::seconds_type () const' inline
|-CXXMethodDecl 0x55f32dc7d0b8 <line:234:5, col:30> col:21 used subsec 'uint32_t () const' inline
|-CXXMethodDecl 0x55f32dc7d178 <line:235:5, col:28> col:21 msec 'uint32_t () const' inline
|-CXXMethodDecl 0x55f32dc7d238 <line:236:5, col:28> col:21 used usec 'uint32_t () const' inline
|-CXXMethodDecl 0x55f32dc7d2f8 <line:237:5, col:28> col:21 used nsec 'uint32_t () const' inline
|-CXXMethodDecl 0x55f32dc7d468 <line:239:5, col:41> col:17 set_sec 'void (Timestamp::seconds_type)' inline
| `-ParmVarDecl 0x55f32dc7d3a8 <col:25, col:38> col:38 sec 'Timestamp::seconds_type':'int'
|-CXXMethodDecl 0x55f32dc7d5b0 <line:240:5, col:43> col:17 set_subsec 'void (uint32_t)' inline
| `-ParmVarDecl 0x55f32dc7d520 <col:28, col:37> col:37 subsec 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f32dc7d678 <line:242:5, col:65> col:25 msec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x55f32dc7d718 <col:54> "" ""
|-CXXMethodDecl 0x55f32dc7d7a8 <line:243:5, col:65> col:25 usec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x55f32dc7d848 <col:54> "" ""
|-CXXMethodDecl 0x55f32dc7d8d8 <line:244:5, col:65> col:25 nsec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x55f32dc7d978 <col:54> "" ""
|-CXXMethodDecl 0x55f32dc7da78 <line:250:5, col:37> col:27 used timeval 'struct timeval () const' inline
|-CXXMethodDecl 0x55f32dc7db48 <line:251:5, col:42> col:27 timeval_ceil 'struct timeval () const' inline
|-CXXMethodDecl 0x55f32dc7dc78 <line:257:5, col:39> col:28 timespec 'struct timespec () const' inline
|-CXXMethodDecl 0x55f32dc7dd70 <line:262:5, col:31> col:19 used doubleval 'double () const' inline
|-CXXMethodDecl 0x55f32dc7dea8 <line:265:5, line:271:5> line:265:23 msecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x55f32dc8b980 <col:39, line:271:5>
|   `-ReturnStmt 0x55f32dc8b970 <line:267:9, col:61>
|     `-CallExpr 0x55f32dc8b910 <col:16, col:61> 'Timestamp::value_type':'long'
|       |-ImplicitCastExpr 0x55f32dc8b8f8 <col:16> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55f32dc8b780 <col:16> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x55f32dc84f18 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|       |-ImplicitCastExpr 0x55f32dc8b940 <col:26, col:29> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x55f32dc8b7e0 <col:26, col:29> 'const int64_t':'const long' lvalue .x 0x55f32dc83c38
|       |   `-MemberExpr 0x55f32dc8b7b0 <col:26> 'const Timestamp::rep_t' lvalue ->_t 0x55f32dc84be8
|       |     `-CXXThisExpr 0x55f32dc8b7a0 <col:26> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x55f32dc8b958 <col:32, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|         `-BinaryOperator 0x55f32dc8b880 <col:32, col:49> 'int' '/'
|           |-ImplicitCastExpr 0x55f32dc8b850 <col:32> 'int' <IntegralCast>
|           | `-DeclRefExpr 0x55f32dc8b810 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f32dc7a440 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|           `-ImplicitCastExpr 0x55f32dc8b868 <col:49> 'int' <IntegralCast>
|             `-DeclRefExpr 0x55f32dc8b830 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f32dc7a3b0 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55f32dc7df68 <line:273:5, line:279:5> line:273:23 usecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x55f32dc8bb40 <col:39, line:279:5>
|   `-ReturnStmt 0x55f32dc8bb30 <line:275:9, col:61>
|     `-CallExpr 0x55f32dc8bad0 <col:16, col:61> 'Timestamp::value_type':'long'
|       |-ImplicitCastExpr 0x55f32dc8bab8 <col:16> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55f32dc8b998 <col:16> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x55f32dc84f18 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|       |-ImplicitCastExpr 0x55f32dc8bb00 <col:26, col:29> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x55f32dc8b9f8 <col:26, col:29> 'const int64_t':'const long' lvalue .x 0x55f32dc83c38
|       |   `-MemberExpr 0x55f32dc8b9c8 <col:26> 'const Timestamp::rep_t' lvalue ->_t 0x55f32dc84be8
|       |     `-CXXThisExpr 0x55f32dc8b9b8 <col:26> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x55f32dc8bb18 <col:32, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|         `-BinaryOperator 0x55f32dc8ba98 <col:32, col:49> 'int' '/'
|           |-ImplicitCastExpr 0x55f32dc8ba68 <col:32> 'int' <IntegralCast>
|           | `-DeclRefExpr 0x55f32dc8ba28 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f32dc7a440 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|           `-ImplicitCastExpr 0x55f32dc8ba80 <col:49> 'int' <IntegralCast>
|             `-DeclRefExpr 0x55f32dc8ba48 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f32dc7a290 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55f32dc7e028 <line:281:5, line:287:5> line:281:23 nsecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x55f32dc8bcd8 <col:39, line:287:5>
|   `-ReturnStmt 0x55f32dc8bcc8 <line:283:9, col:53>
|     `-BinaryOperator 0x55f32dc8bca8 <col:16, col:53> 'long' '*'
|       |-ImplicitCastExpr 0x55f32dc8bc78 <col:16, col:19> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x55f32dc8bb98 <col:16, col:19> 'const int64_t':'const long' lvalue .x 0x55f32dc83c38
|       |   `-MemberExpr 0x55f32dc8bb68 <col:16> 'const Timestamp::rep_t' lvalue ->_t 0x55f32dc84be8
|       |     `-CXXThisExpr 0x55f32dc8bb58 <col:16> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x55f32dc8bc90 <col:23, col:53> 'long' <IntegralCast>
|         `-ParenExpr 0x55f32dc8bc58 <col:23, col:53> 'int'
|           `-BinaryOperator 0x55f32dc8bc38 <col:24, col:39> 'int' '/'
|             |-ImplicitCastExpr 0x55f32dc8bc08 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55f32dc8bbc8 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f32dc7a0e0 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55f32dc8bc20 <col:39> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55f32dc8bbe8 <col:39> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f32dc7a440 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55f32dc7e118 <line:290:5, line:293:5> line:290:22 msec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x55f32dc8cf70 <col:40, line:293:5>
|   |-DeclStmt 0x55f32dc8be20 <line:291:9, col:48>
|   | `-VarDecl 0x55f32dc8bd00 <col:9, col:33> col:18 used x 'uint32_t':'unsigned int' cinit
|   |   `-BinaryOperator 0x55f32dc8be00 <col:22, col:33> 'unsigned int' '%'
|   |     |-CXXMemberCallExpr 0x55f32dc8bda8 <col:22, col:29> 'uint32_t':'unsigned int'
|   |     | `-MemberExpr 0x55f32dc8bd78 <col:22> '<bound member function type>' ->subsec 0x55f32dc7d0b8
|   |     |   `-CXXThisExpr 0x55f32dc8bd68 <col:22> 'const Timestamp *' implicit this
|   |     `-ImplicitCastExpr 0x55f32dc8bde8 <col:33> 'unsigned int' <IntegralCast>
|   |       `-DeclRefExpr 0x55f32dc8bdc8 <col:33> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f32dc7a510 'subsec_per_msec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x55f32dc8cf60 <line:292:9, col:70>
|     `-ExprWithCleanups 0x55f32dc8cf48 <col:16, col:70> 'Timestamp'
|       `-CXXConstructExpr 0x55f32dc8cf18 <col:16, col:70> 'Timestamp' 'void (const Timestamp &) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55f32dc8cf00 <col:16, col:70> 'const Timestamp' lvalue
|           `-ParenExpr 0x55f32dc8cee0 <col:16, col:70> 'const Timestamp'
|             `-ConditionalOperator 0x55f32dc8ceb0 <col:17, col:66> 'const Timestamp'
|               |-ImplicitCastExpr 0x55f32dc8cc48 <col:17> 'bool' <IntegralToBoolean>
|               | `-ImplicitCastExpr 0x55f32dc8cc30 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|               |   `-DeclRefExpr 0x55f32dc8be38 <col:17> 'uint32_t':'unsigned int' lvalue Var 0x55f32dc8bd00 'x' 'uint32_t':'unsigned int'
|               |-CXXConstructExpr 0x55f32dc8ce50 <col:21, col:61> 'const Timestamp' 'void (const Timestamp &) noexcept' elidable
|               | `-MaterializeTemporaryExpr 0x55f32dc8ce38 <col:21, col:61> 'const Timestamp' lvalue
|               |   `-CXXConstructExpr 0x55f32dc8ce08 <col:21, col:61> 'const Timestamp' 'void (Timestamp &&) noexcept' elidable
|               |     `-MaterializeTemporaryExpr 0x55f32dc8cc60 <col:21, col:61> 'Timestamp' xvalue
|               |       `-CXXOperatorCallExpr 0x55f32dc8cbd0 <col:21, col:61> 'Timestamp'
|               |         |-ImplicitCastExpr 0x55f32dc8cbb8 <col:27> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|               |         | `-DeclRefExpr 0x55f32dc8cb68 <col:27> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55f32dc799e8 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|               |         |-CXXConstructExpr 0x55f32dc8cb08 <col:21, col:22> 'Timestamp' 'void (const Timestamp &) noexcept'
|               |         | `-UnaryOperator 0x55f32dc8be68 <col:21, col:22> 'const Timestamp' lvalue prefix '*' cannot overflow
|               |         |   `-CXXThisExpr 0x55f32dc8be58 <col:22> 'const Timestamp *' this
|               |         `-MaterializeTemporaryExpr 0x55f32dc8cb50 <col:29, col:61> 'const Timestamp' lvalue
|               |           `-ImplicitCastExpr 0x55f32dc8cb38 <col:29, col:61> 'const Timestamp' <NoOp>
|               |             `-CXXTemporaryObjectExpr 0x55f32dc8c328 <col:29, col:61> 'Timestamp' 'void (int, uint32_t)'
|               |               |-IntegerLiteral 0x55f32dc8be90 <col:39> 'int' 0
|               |               `-BinaryOperator 0x55f32dc8bf20 <col:42, col:60> 'unsigned int' '-'
|               |                 |-ImplicitCastExpr 0x55f32dc8bef0 <col:42> 'unsigned int' <IntegralCast>
|               |                 | `-DeclRefExpr 0x55f32dc8beb0 <col:42> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f32dc7a510 'subsec_per_msec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|               |                 `-ImplicitCastExpr 0x55f32dc8bf08 <col:60> 'uint32_t':'unsigned int' <LValueToRValue>
|               |                   `-DeclRefExpr 0x55f32dc8bed0 <col:60> 'uint32_t':'unsigned int' lvalue Var 0x55f32dc8bd00 'x' 'uint32_t':'unsigned int'
|               `-CXXConstructExpr 0x55f32dc8ce80 <col:65, col:66> 'const Timestamp' 'void (const Timestamp &) noexcept'
|                 `-UnaryOperator 0x55f32dc8cc18 <col:65, col:66> 'const Timestamp' lvalue prefix '*' cannot overflow
|                   `-CXXThisExpr 0x55f32dc8cc08 <col:66> 'const Timestamp *' this
|-CXXMethodDecl 0x55f32dc7e1d8 <line:295:5, line:302:5> line:295:22 usec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x55f32dc8d4c8 <col:40, line:302:5>
|   |-DeclStmt 0x55f32dc8d0c0 <line:297:9, col:48>
|   | `-VarDecl 0x55f32dc8cfa0 <col:9, col:33> col:18 used x 'uint32_t':'unsigned int' cinit
|   |   `-BinaryOperator 0x55f32dc8d0a0 <col:22, col:33> 'unsigned int' '%'
|   |     |-CXXMemberCallExpr 0x55f32dc8d048 <col:22, col:29> 'uint32_t':'unsigned int'
|   |     | `-MemberExpr 0x55f32dc8d018 <col:22> '<bound member function type>' ->subsec 0x55f32dc7d0b8
|   |     |   `-CXXThisExpr 0x55f32dc8d008 <col:22> 'const Timestamp *' implicit this
|   |     `-ImplicitCastExpr 0x55f32dc8d088 <col:33> 'unsigned int' <IntegralCast>
|   |       `-DeclRefExpr 0x55f32dc8d068 <col:33> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f32dc7a5e0 'subsec_per_usec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x55f32dc8d4b8 <line:298:9, col:70>
|     `-ExprWithCleanups 0x55f32dc8d4a0 <col:16, col:70> 'Timestamp'
|       `-CXXConstructExpr 0x55f32dc8d470 <col:16, col:70> 'Timestamp' 'void (const Timestamp &) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55f32dc8d458 <col:16, col:70> 'const Timestamp' lvalue
|           `-ParenExpr 0x55f32dc8d438 <col:16, col:70> 'const Timestamp'
|             `-ConditionalOperator 0x55f32dc8d408 <col:17, col:66> 'const Timestamp'
|               |-ImplicitCastExpr 0x55f32dc8d330 <col:17> 'bool' <IntegralToBoolean>
|               | `-ImplicitCastExpr 0x55f32dc8d318 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|               |   `-DeclRefExpr 0x55f32dc8d0d8 <col:17> 'uint32_t':'unsigned int' lvalue Var 0x55f32dc8cfa0 'x' 'uint32_t':'unsigned int'
|               |-CXXConstructExpr 0x55f32dc8d3a8 <col:21, col:61> 'const Timestamp' 'void (const Timestamp &) noexcept' elidable
|               | `-MaterializeTemporaryExpr 0x55f32dc8d390 <col:21, col:61> 'const Timestamp' lvalue
|               |   `-CXXConstructExpr 0x55f32dc8d360 <col:21, col:61> 'const Timestamp' 'void (Timestamp &&) noexcept' elidable
|               |     `-MaterializeTemporaryExpr 0x55f32dc8d348 <col:21, col:61> 'Timestamp' xvalue
|               |       `-CXXOperatorCallExpr 0x55f32dc8d2b8 <col:21, col:61> 'Timestamp'
|               |         |-ImplicitCastExpr 0x55f32dc8d2a0 <col:27> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|               |         | `-DeclRefExpr 0x55f32dc8d280 <col:27> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55f32dc799e8 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|               |         |-CXXConstructExpr 0x55f32dc8d220 <col:21, col:22> 'Timestamp' 'void (const Timestamp &) noexcept'
|               |         | `-UnaryOperator 0x55f32dc8d108 <col:21, col:22> 'const Timestamp' lvalue prefix '*' cannot overflow
|               |         |   `-CXXThisExpr 0x55f32dc8d0f8 <col:22> 'const Timestamp *' this
|               |         `-MaterializeTemporaryExpr 0x55f32dc8d268 <col:29, col:61> 'const Timestamp' lvalue
|               |           `-ImplicitCastExpr 0x55f32dc8d250 <col:29, col:61> 'const Timestamp' <NoOp>
|               |             `-CXXTemporaryObjectExpr 0x55f32dc8d1e0 <col:29, col:61> 'Timestamp' 'void (int, uint32_t)'
|               |               |-IntegerLiteral 0x55f32dc8d130 <col:39> 'int' 0
|               |               `-BinaryOperator 0x55f32dc8d1c0 <col:42, col:60> 'unsigned int' '-'
|               |                 |-ImplicitCastExpr 0x55f32dc8d190 <col:42> 'unsigned int' <IntegralCast>
|               |                 | `-DeclRefExpr 0x55f32dc8d150 <col:42> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f32dc7a5e0 'subsec_per_usec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|               |                 `-ImplicitCastExpr 0x55f32dc8d1a8 <col:60> 'uint32_t':'unsigned int' <LValueToRValue>
|               |                   `-DeclRefExpr 0x55f32dc8d170 <col:60> 'uint32_t':'unsigned int' lvalue Var 0x55f32dc8cfa0 'x' 'uint32_t':'unsigned int'
|               `-CXXConstructExpr 0x55f32dc8d3d8 <col:65, col:66> 'const Timestamp' 'void (const Timestamp &) noexcept'
|                 `-UnaryOperator 0x55f32dc8d300 <col:65, col:66> 'const Timestamp' lvalue prefix '*' cannot overflow
|                   `-CXXThisExpr 0x55f32dc8d2f0 <col:66> 'const Timestamp *' this
|-CXXMethodDecl 0x55f32dc7e298 <line:304:5, line:306:5> line:304:22 nsec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x55f32dc8d550 <col:40, line:306:5>
|   `-ReturnStmt 0x55f32dc8d540 <line:305:9, col:17>
|     `-CXXConstructExpr 0x55f32dc8d510 <col:16, col:17> 'Timestamp' 'void (const Timestamp &) noexcept'
|       `-UnaryOperator 0x55f32dc8d4f8 <col:16, col:17> 'const Timestamp' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55f32dc8d4e8 <col:17> 'const Timestamp *' this
|-CXXMethodDecl 0x55f32dc7e438 <line:310:5, col:65> col:29 make_jiffies 'Timestamp (click_jiffies_t)' static inline
| `-ParmVarDecl 0x55f32dc7e348 <col:42, col:58> col:58 jiffies 'click_jiffies_t':'unsigned int'
|-CXXMethodDecl 0x55f32dc7e608 <line:312:5, col:76> col:29 make_jiffies 'Timestamp (click_jiffies_difference_t)' static inline
| `-ParmVarDecl 0x55f32dc7e510 <col:42, col:69> col:69 jiffies 'click_jiffies_difference_t':'int'
|-CXXMethodDecl 0x55f32dc7e6f8 <line:314:5, col:38> col:28 jiffies 'click_jiffies_t () const' inline
|-CXXMethodDecl 0x55f32dc7e868 <line:318:5, line:320:5> line:318:29 make_sec 'Timestamp (Timestamp::seconds_type)' static inline
| |-ParmVarDecl 0x55f32dc7e7a8 <col:38, col:51> col:51 used sec 'Timestamp::seconds_type':'int'
| `-CompoundStmt 0x55f32dc8d698 <col:56, line:320:5>
|   `-ReturnStmt 0x55f32dc8d688 <line:319:9, col:32>
|     `-ExprWithCleanups 0x55f32dc8d670 <col:16, col:32> 'Timestamp'
|       `-CXXConstructExpr 0x55f32dc8d640 <col:16, col:32> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55f32dc8d628 <col:16, col:32> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55f32dc8d5e8 <col:16, col:32> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x55f32dc8d5b8 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x55f32dc8d578 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55f32dc7e7a8 'sec' 'Timestamp::seconds_type':'int'
|             `-ImplicitCastExpr 0x55f32dc8d5d0 <col:31> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x55f32dc8d598 <col:31> 'int' 0
|-CXXMethodDecl 0x55f32dc7eaa8 <line:324:5, line:326:5> line:324:29 make_msec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x55f32dc7e920 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55f32dc7e998 <col:57, col:66> col:66 used msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55f32dc8d868 <col:72, line:326:5>
|   `-ReturnStmt 0x55f32dc8d858 <line:325:9, col:51>
|     `-ExprWithCleanups 0x55f32dc8d840 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x55f32dc8d810 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55f32dc8d7f8 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55f32dc8d7b8 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x55f32dc8d7a0 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x55f32dc8d6c0 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55f32dc7e920 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x55f32dc8d760 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x55f32dc8d748 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x55f32dc8d6e0 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x55f32dc83390 'msec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x55f32dc8d788 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x55f32dc8d700 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x55f32dc7e998 'msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f32dc7ec58 <line:328:5, line:337:5> line:328:29 used make_msec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x55f32dc7eb68 <col:39, col:50> col:50 used msec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x55f32dc8df30 <col:56, line:337:5>
|   |-DeclStmt 0x55f32dc8db68 <line:329:9, col:51>
|   | `-VarDecl 0x55f32dc8d890 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x55f32dc8db50 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x55f32dc8db20 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x55f32dc8db08 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x55f32dc8daf0 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x55f32dc8dac0 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x55f32dc8daa8 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x55f32dc8da90 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x55f32dc8d980 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x55f32dc8dd20 <line:331:9, col:55> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x55f32dc8dbd0 <col:9, col:14> 'int64_t':'long' lvalue .x 0x55f32dc83c38
|   | | `-MemberExpr 0x55f32dc8dba0 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x55f32dc84be8
|   | |   `-DeclRefExpr 0x55f32dc8db80 <col:9> 'Timestamp' lvalue Var 0x55f32dc8d890 't' 'Timestamp'
|   | `-BinaryOperator 0x55f32dc8dd00 <col:18, col:55> 'long' '*'
|   |   |-ImplicitCastExpr 0x55f32dc8dcd0 <col:18> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55f32dc8dc00 <col:18> 'Timestamp::value_type':'long' lvalue ParmVar 0x55f32dc7eb68 'msec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x55f32dc8dce8 <col:25, col:55> 'long' <IntegralCast>
|   |     `-ParenExpr 0x55f32dc8dcb0 <col:25, col:55> 'int'
|   |       `-BinaryOperator 0x55f32dc8dc90 <col:26, col:43> 'int' '/'
|   |         |-ImplicitCastExpr 0x55f32dc8dc60 <col:26> 'int' <IntegralCast>
|   |         | `-DeclRefExpr 0x55f32dc8dc20 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f32dc7a440 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |         `-ImplicitCastExpr 0x55f32dc8dc78 <col:43> 'int' <IntegralCast>
|   |           `-DeclRefExpr 0x55f32dc8dc40 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f32dc7a3b0 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x55f32dc8df18 <line:336:9, col:16>
|     `-CXXConstructExpr 0x55f32dc8dee8 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x55f32dc8ded0 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x55f32dc8deb0 <col:16> 'Timestamp' lvalue Var 0x55f32dc8d890 't' 'Timestamp'
|-CXXMethodDecl 0x55f32dc7ee20 <line:341:5, line:343:5> line:341:29 make_usec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x55f32dc7ed10 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55f32dc7ed88 <col:57, col:66> col:66 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55f32dc8e0e8 <col:72, line:343:5>
|   `-ReturnStmt 0x55f32dc8e0d8 <line:342:9, col:51>
|     `-ExprWithCleanups 0x55f32dc8e0c0 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x55f32dc8e090 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55f32dc8e078 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55f32dc8e038 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x55f32dc8e020 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x55f32dc8df68 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55f32dc7ed10 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x55f32dc8dfe0 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x55f32dc8dfc8 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x55f32dc8df88 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x55f32dc834d8 'usec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x55f32dc8e008 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x55f32dc8dfa8 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x55f32dc7ed88 'usec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f32dc7ef70 <line:345:5, line:354:5> line:345:29 used make_usec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x55f32dc7eee0 <col:39, col:50> col:50 used usec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x55f32dc8e530 <col:56, line:354:5>
|   |-DeclStmt 0x55f32dc8e2d8 <line:346:9, col:51>
|   | `-VarDecl 0x55f32dc8e110 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x55f32dc8e2c0 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x55f32dc8e290 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x55f32dc8e278 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x55f32dc8e260 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x55f32dc8e230 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x55f32dc8e218 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x55f32dc8e200 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x55f32dc8e1d0 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x55f32dc8e490 <line:348:9, col:55> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x55f32dc8e340 <col:9, col:14> 'int64_t':'long' lvalue .x 0x55f32dc83c38
|   | | `-MemberExpr 0x55f32dc8e310 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x55f32dc84be8
|   | |   `-DeclRefExpr 0x55f32dc8e2f0 <col:9> 'Timestamp' lvalue Var 0x55f32dc8e110 't' 'Timestamp'
|   | `-BinaryOperator 0x55f32dc8e470 <col:18, col:55> 'long' '*'
|   |   |-ImplicitCastExpr 0x55f32dc8e440 <col:18> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55f32dc8e370 <col:18> 'Timestamp::value_type':'long' lvalue ParmVar 0x55f32dc7eee0 'usec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x55f32dc8e458 <col:25, col:55> 'long' <IntegralCast>
|   |     `-ParenExpr 0x55f32dc8e420 <col:25, col:55> 'int'
|   |       `-BinaryOperator 0x55f32dc8e400 <col:26, col:43> 'int' '/'
|   |         |-ImplicitCastExpr 0x55f32dc8e3d0 <col:26> 'int' <IntegralCast>
|   |         | `-DeclRefExpr 0x55f32dc8e390 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f32dc7a440 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |         `-ImplicitCastExpr 0x55f32dc8e3e8 <col:43> 'int' <IntegralCast>
|   |           `-DeclRefExpr 0x55f32dc8e3b0 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f32dc7a290 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x55f32dc8e518 <line:353:9, col:16>
|     `-CXXConstructExpr 0x55f32dc8e4e8 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x55f32dc8e4d0 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x55f32dc8e4b0 <col:16> 'Timestamp' lvalue Var 0x55f32dc8e110 't' 'Timestamp'
|-CXXMethodDecl 0x55f32dc7f138 <line:358:5, line:360:5> line:358:29 make_nsec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x55f32dc7f028 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55f32dc7f0a0 <col:57, col:66> col:66 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55f32dc8e6e8 <col:72, line:360:5>
|   `-ReturnStmt 0x55f32dc8e6d8 <line:359:9, col:51>
|     `-ExprWithCleanups 0x55f32dc8e6c0 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x55f32dc8e690 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55f32dc8e678 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55f32dc8e638 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x55f32dc8e620 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x55f32dc8e568 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55f32dc7f028 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x55f32dc8e5e0 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x55f32dc8e5c8 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x55f32dc8e588 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x55f32dc83620 'nsec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x55f32dc8e608 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x55f32dc8e5a8 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x55f32dc7f0a0 'nsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f32dc7f288 <line:362:5, line:371:5> line:362:29 make_nsec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x55f32dc7f1f8 <col:39, col:50> col:50 used nsec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x55f32dc9b058 <col:56, line:371:5>
|   |-DeclStmt 0x55f32dc8e8d8 <line:363:9, col:51>
|   | `-VarDecl 0x55f32dc8e710 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x55f32dc8e8c0 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x55f32dc8e890 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x55f32dc8e878 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x55f32dc8e860 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x55f32dc8e830 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x55f32dc8e818 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x55f32dc8e800 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x55f32dc8e7d0 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x55f32dc9afb8 <line:365:9, col:63> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x55f32dc8e940 <col:9, col:14> 'int64_t':'long' lvalue .x 0x55f32dc83c38
|   | | `-MemberExpr 0x55f32dc8e910 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x55f32dc84be8
|   | |   `-DeclRefExpr 0x55f32dc8e8f0 <col:9> 'Timestamp' lvalue Var 0x55f32dc8e710 't' 'Timestamp'
|   | `-CallExpr 0x55f32dc9af58 <col:18, col:63> 'Timestamp::value_type':'long'
|   |   |-ImplicitCastExpr 0x55f32dc9af40 <col:18> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x55f32dc8e970 <col:18> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x55f32dc84f18 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|   |   |-ImplicitCastExpr 0x55f32dc9af88 <col:28> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55f32dc8e990 <col:28> 'Timestamp::value_type':'long' lvalue ParmVar 0x55f32dc7f1f8 'nsec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x55f32dc9afa0 <col:34, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|   |     `-BinaryOperator 0x55f32dc9af20 <col:34, col:49> 'int' '/'
|   |       |-ImplicitCastExpr 0x55f32dc9aef0 <col:34> 'int' <IntegralCast>
|   |       | `-DeclRefExpr 0x55f32dc8e9b0 <col:34> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f32dc7a0e0 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |       `-ImplicitCastExpr 0x55f32dc9af08 <col:49> 'int' <IntegralCast>
|   |         `-DeclRefExpr 0x55f32dc8e9d0 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f32dc7a440 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x55f32dc9b040 <line:370:9, col:16>
|     `-CXXConstructExpr 0x55f32dc9b010 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x55f32dc9aff8 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x55f32dc9afd8 <col:16> 'Timestamp' lvalue Var 0x55f32dc8e710 't' 'Timestamp'
|-CXXMethodDecl 0x55f32dc7f378 <line:375:5, line:377:5> line:375:29 epsilon 'Timestamp ()' static inline
| `-CompoundStmt 0x55f32dc9b198 <col:39, line:377:5>
|   `-ReturnStmt 0x55f32dc9b188 <line:376:9, col:30>
|     `-ExprWithCleanups 0x55f32dc9b170 <col:16, col:30> 'Timestamp'
|       `-CXXConstructExpr 0x55f32dc9b140 <col:16, col:30> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55f32dc9b128 <col:16, col:30> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55f32dc9b0e8 <col:16, col:30> 'Timestamp' 'void (int, uint32_t)'
|             |-IntegerLiteral 0x55f32dc9b090 <col:26> 'int' 0
|             `-ImplicitCastExpr 0x55f32dc9b0d0 <col:29> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x55f32dc9b0b0 <col:29> 'int' 1
|-CXXMethodDecl 0x55f32dc7f438 <line:380:5, line:382:5> line:380:17 clear 'void ()' inline
| `-CompoundStmt 0x55f32dc9b278 <col:25, line:382:5>
|   `-CXXMemberCallExpr 0x55f32dc9b230 <line:381:9, col:20> 'void'
|     |-MemberExpr 0x55f32dc9b1c0 <col:9> '<bound member function type>' ->assign 0x55f32dc7f638
|     | `-CXXThisExpr 0x55f32dc9b1b0 <col:9> 'Timestamp *' implicit this
|     |-IntegerLiteral 0x55f32dc9b1f0 <col:16> 'int' 0
|     `-ImplicitCastExpr 0x55f32dc9b260 <col:19> 'uint32_t':'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x55f32dc9b210 <col:19> 'int' 0
|-CXXMethodDecl 0x55f32dc7f638 <line:388:5, line:395:5> line:388:17 used assign 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55f32dc7f4e8 <col:24, col:37> col:37 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55f32dc7f560 <col:42, col:60> col:51 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55f32dc86810 <col:60> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55f32dc867f0 <col:60> 'int' 0
| `-CompoundStmt 0x55f32dc9b470 <col:63, line:395:5>
|   `-BinaryOperator 0x55f32dc9b450 <line:390:9, col:49> 'int64_t':'long' lvalue '='
|     |-MemberExpr 0x55f32dc9b2d0 <col:9, col:12> 'int64_t':'long' lvalue .x 0x55f32dc83c38
|     | `-MemberExpr 0x55f32dc9b2a0 <col:9> 'Timestamp::rep_t' lvalue ->_t 0x55f32dc84be8
|     |   `-CXXThisExpr 0x55f32dc9b290 <col:9> 'Timestamp *' implicit this
|     `-BinaryOperator 0x55f32dc9b430 <col:16, col:49> 'long' '+'
|       |-BinaryOperator 0x55f32dc9b3c0 <col:16, col:32> 'long' '*'
|       | |-CStyleCastExpr 0x55f32dc9b360 <col:16, col:26> 'int64_t':'long' <NoOp>
|       | | `-ImplicitCastExpr 0x55f32dc9b348 <col:26> 'int64_t':'long' <IntegralCast> part_of_explicit_cast
|       | |   `-ImplicitCastExpr 0x55f32dc9b330 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue> part_of_explicit_cast
|       | |     `-DeclRefExpr 0x55f32dc9b300 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55f32dc7f4e8 'sec' 'Timestamp::seconds_type':'int'
|       | `-ImplicitCastExpr 0x55f32dc9b3a8 <col:32> 'long' <IntegralCast>
|       |   `-DeclRefExpr 0x55f32dc9b388 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f32dc7a440 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|       `-ImplicitCastExpr 0x55f32dc9b418 <col:49> 'long' <IntegralCast>
|         `-ImplicitCastExpr 0x55f32dc9b400 <col:49> 'uint32_t':'unsigned int' <LValueToRValue>
|           `-DeclRefExpr 0x55f32dc9b3e0 <col:49> 'uint32_t':'unsigned int' lvalue ParmVar 0x55f32dc7f560 'subsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f32dc7f808 <line:397:5, line:399:5> line:397:17 used assign_usec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55f32dc7f6f8 <col:29, col:42> col:42 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55f32dc7f770 <col:47, col:56> col:56 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55f32dc9b5c8 <col:62, line:399:5>
|   `-CXXMemberCallExpr 0x55f32dc9b580 <line:398:9, col:41> 'void'
|     |-MemberExpr 0x55f32dc9b498 <col:9> '<bound member function type>' ->assign 0x55f32dc7f638
|     | `-CXXThisExpr 0x55f32dc9b488 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55f32dc9b5b0 <col:16> 'Timestamp::seconds_type':'int' <LValueToRValue>
|     | `-DeclRefExpr 0x55f32dc9b4c8 <col:16> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55f32dc7f6f8 'sec' 'Timestamp::seconds_type':'int'
|     `-CallExpr 0x55f32dc9b540 <col:21, col:40> 'uint32_t':'unsigned int'
|       |-ImplicitCastExpr 0x55f32dc9b528 <col:21> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55f32dc9b4e8 <col:21> 'uint32_t (uint32_t)' lvalue CXXMethod 0x55f32dc834d8 'usec_to_subsec' 'uint32_t (uint32_t)'
|       `-ImplicitCastExpr 0x55f32dc9b568 <col:36> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55f32dc9b508 <col:36> 'uint32_t':'unsigned int' lvalue ParmVar 0x55f32dc7f770 'usec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f32dc7f9d8 <line:401:5, line:403:5> line:401:17 used assign_nsec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55f32dc7f8c8 <col:29, col:42> col:42 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55f32dc7f940 <col:47, col:56> col:56 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55f32dc9b720 <col:62, line:403:5>
|   `-CXXMemberCallExpr 0x55f32dc9b6d8 <line:402:9, col:41> 'void'
|     |-MemberExpr 0x55f32dc9b5f0 <col:9> '<bound member function type>' ->assign 0x55f32dc7f638
|     | `-CXXThisExpr 0x55f32dc9b5e0 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55f32dc9b708 <col:16> 'Timestamp::seconds_type':'int' <LValueToRValue>
|     | `-DeclRefExpr 0x55f32dc9b620 <col:16> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55f32dc7f8c8 'sec' 'Timestamp::seconds_type':'int'
|     `-CallExpr 0x55f32dc9b698 <col:21, col:40> 'uint32_t':'unsigned int'
|       |-ImplicitCastExpr 0x55f32dc9b680 <col:21> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55f32dc9b640 <col:21> 'uint32_t (uint32_t)' lvalue CXXMethod 0x55f32dc83620 'nsec_to_subsec' 'uint32_t (uint32_t)'
|       `-ImplicitCastExpr 0x55f32dc9b6c0 <col:36> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55f32dc9b660 <col:36> 'uint32_t':'unsigned int' lvalue ParmVar 0x55f32dc7f940 'nsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f32dc7fba8 <line:408:5, col:86> col:17 set 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55f32dc7fa98 <col:21, col:34> col:34 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55f32dc7fb10 <col:39, col:57> col:48 subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55f32dc86848 <col:57> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55f32dc86828 <col:57> 'int' 0
| `-DeprecatedAttr 0x55f32dc7fc58 <col:75> "" ""
|-CXXMethodDecl 0x55f32dc7fde8 <line:411:5, col:85> col:17 set_usec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55f32dc7fcd8 <col:26, col:39> col:39 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55f32dc7fd50 <col:44, col:53> col:53 usec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55f32dc7fe98 <col:74> "" ""
|-CXXMethodDecl 0x55f32dc80028 <line:414:5, col:85> col:17 set_nsec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55f32dc7ff18 <col:26, col:39> col:39 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55f32dc7ff90 <col:44, col:53> col:53 nsec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55f32dc800d8 <col:74> "" ""
|-CXXMethodDecl 0x55f32dc80168 <line:417:5, col:53> col:17 set_now 'void ()' inline
| `-DeprecatedAttr 0x55f32dc80208 <col:42> "" ""
|-CXXMethodDecl 0x55f32dc82a40 <line:420:5, col:53> col:9 set_timeval_ioctl 'int (int, int)'
| |-ParmVarDecl 0x55f32dc82920 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x55f32dc829a0 <col:35, col:39> col:39 ioctl_selector 'int'
|-CXXMethodDecl 0x55f32dc82b10 <line:432:5, col:33> col:29 now 'Timestamp ()' static inline
|-CXXMethodDecl 0x55f32dc82bd0 <line:438:5, col:56> col:45 used assign_now 'void ()'
| |-NoInlineAttr 0x55f32dc82c70 <col:20>
| `-OptimizeNoneAttr 0x55f32dc82cc8 <col:30>
|-CXXMethodDecl 0x55f32dc82d10 <line:446:5, col:36> col:29 used recent 'Timestamp ()' static inline
|-CXXMethodDecl 0x55f32dc82dd0 <line:452:5, col:31> col:17 used assign_recent 'void ()' inline
|-CXXMethodDecl 0x55f32dc82e90 <line:466:5, col:40> col:29 now_steady 'Timestamp ()' static inline
|-CXXMethodDecl 0x55f32dc82f50 <line:472:5, col:35> col:17 used assign_now_steady 'void ()' inline
|-CXXMethodDecl 0x55f32dc83010 <line:481:5, col:43> col:29 used recent_steady 'Timestamp ()' static inline
|-CXXMethodDecl 0x55f32dc830d0 <line:487:5, col:38> col:17 used assign_recent_steady 'void ()' inline
|-CXXMethodDecl 0x55f32dc83190 <line:496:5, col:22> col:12 unparse 'String () const'
|-CXXMethodDecl 0x55f32dc83250 <line:501:5, col:31> col:12 unparse_interval 'String () const'
|-CXXMethodDecl 0x55f32dc83390 <line:510:5, line:512:5> line:510:28 used msec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55f32dc83300 <col:43, col:52> col:52 used msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55f32dc9b868 <col:58, line:512:5>
|   `-ReturnStmt 0x55f32dc9b858 <line:511:9, col:53>
|     `-BinaryOperator 0x55f32dc9b838 <col:16, col:53> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x55f32dc9b808 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55f32dc9b738 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55f32dc83300 'msec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55f32dc9b820 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55f32dc9b7e8 <col:23, col:53> 'int'
|           `-BinaryOperator 0x55f32dc9b7c8 <col:24, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x55f32dc9b798 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55f32dc9b758 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f32dc7a440 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55f32dc9b7b0 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55f32dc9b778 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f32dc7a3b0 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55f32dc834d8 <line:514:5, line:516:5> line:514:28 used usec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55f32dc83448 <col:43, col:52> col:52 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55f32dc9b9b0 <col:58, line:516:5>
|   `-ReturnStmt 0x55f32dc9b9a0 <line:515:9, col:53>
|     `-BinaryOperator 0x55f32dc9b980 <col:16, col:53> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x55f32dc9b950 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55f32dc9b880 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55f32dc83448 'usec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55f32dc9b968 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55f32dc9b930 <col:23, col:53> 'int'
|           `-BinaryOperator 0x55f32dc9b910 <col:24, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x55f32dc9b8e0 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55f32dc9b8a0 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f32dc7a440 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55f32dc9b8f8 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55f32dc9b8c0 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f32dc7a290 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55f32dc83620 <line:518:5, line:520:5> line:518:28 used nsec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55f32dc83590 <col:43, col:52> col:52 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55f32dc9baf8 <col:58, line:520:5>
|   `-ReturnStmt 0x55f32dc9bae8 <line:519:9, col:53>
|     `-BinaryOperator 0x55f32dc9bac8 <col:16, col:53> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x55f32dc9ba98 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55f32dc9b9c8 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55f32dc83590 'nsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55f32dc9bab0 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55f32dc9ba78 <col:23, col:53> 'int'
|           `-BinaryOperator 0x55f32dc9ba58 <col:24, col:39> 'int' '/'
|             |-ImplicitCastExpr 0x55f32dc9ba28 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55f32dc9b9e8 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f32dc7a0e0 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55f32dc9ba40 <col:39> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55f32dc9ba08 <col:39> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f32dc7a440 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55f32dc83768 <line:522:5, line:524:5> line:522:28 used subsec_to_msec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55f32dc836d8 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55f32dc9bc40 <col:60, line:524:5>
|   `-ReturnStmt 0x55f32dc9bc30 <line:523:9, col:55>
|     `-BinaryOperator 0x55f32dc9bc10 <col:16, col:55> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x55f32dc9bbe0 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55f32dc9bb10 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55f32dc836d8 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55f32dc9bbf8 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55f32dc9bbc0 <col:25, col:55> 'int'
|           `-BinaryOperator 0x55f32dc9bba0 <col:26, col:43> 'int' '/'
|             |-ImplicitCastExpr 0x55f32dc9bb70 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55f32dc9bb30 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f32dc7a440 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55f32dc9bb88 <col:43> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55f32dc9bb50 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f32dc7a3b0 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55f32dc838b0 <line:526:5, line:528:5> line:526:28 used subsec_to_usec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55f32dc83820 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55f32dc9bd88 <col:60, line:528:5>
|   `-ReturnStmt 0x55f32dc9bd78 <line:527:9, col:55>
|     `-BinaryOperator 0x55f32dc9bd58 <col:16, col:55> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x55f32dc9bd28 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55f32dc9bc58 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55f32dc83820 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55f32dc9bd40 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55f32dc9bd08 <col:25, col:55> 'int'
|           `-BinaryOperator 0x55f32dc9bce8 <col:26, col:43> 'int' '/'
|             |-ImplicitCastExpr 0x55f32dc9bcb8 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55f32dc9bc78 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f32dc7a440 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55f32dc9bcd0 <col:43> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55f32dc9bc98 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f32dc7a290 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55f32dc839f8 <line:530:5, line:532:5> line:530:28 used subsec_to_nsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55f32dc83968 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55f32dc9bed0 <col:60, line:532:5>
|   `-ReturnStmt 0x55f32dc9bec0 <line:531:9, col:55>
|     `-BinaryOperator 0x55f32dc9bea0 <col:16, col:55> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x55f32dc9be70 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55f32dc9bda0 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55f32dc83968 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55f32dc9be88 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55f32dc9be50 <col:25, col:55> 'int'
|           `-BinaryOperator 0x55f32dc9be30 <col:26, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x55f32dc9be00 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55f32dc9bdc0 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f32dc7a0e0 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55f32dc9be18 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55f32dc9bde0 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f32dc7a440 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXRecordDecl 0x55f32dc83aa0 prev 0x55f32dc7a8e0 <line:539:5, line:566:5> line:539:11 referenced union rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55f32dc83b98 <col:5, col:11> col:11 implicit union rep_t
| |-FieldDecl 0x55f32dc83c38 <line:541:9, col:17> col:17 referenced x 'int64_t':'long'
| |-CXXConstructorDecl 0x55f32dc8aa00 <line:539:11> col:11 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55f32dc8ade8 <col:11>
| |-CXXConstructorDecl 0x55f32dc8aae0 <col:11> col:11 implicit used constexpr rep_t 'void (const Timestamp::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55f32dc8abc8 <col:11> col:11 'const Timestamp::rep_t &'
| | `-CompoundStmt 0x55f32dc8b530 <col:11>
| |-CXXConstructorDecl 0x55f32dc8ac68 <col:11> col:11 implicit used constexpr rep_t 'void (Timestamp::rep_t &&) noexcept' inline default trivial
| | |-ParmVarDecl 0x55f32dc8ad78 <col:11> col:11 'Timestamp::rep_t &&'
| | `-CompoundStmt 0x55f32dc8cd88 <col:11>
| |-CXXDestructorDecl 0x55f32dc8c098 <col:11> col:11 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x55f32d992a28 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(const Timestamp::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55f32d992b38 <col:11> col:11 'const Timestamp::rep_t &'
| | `-CompoundStmt 0x55f32d993400 <col:11>
| |   `-ReturnStmt 0x55f32d9933f0 <col:11>
| |     `-UnaryOperator 0x55f32d9933d8 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x55f32d9933c8 <col:11> 'Timestamp::rep_t *' this
| `-CXXMethodDecl 0x55f32d992ba8 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(Timestamp::rep_t &&) noexcept' inline default trivial
|   |-ParmVarDecl 0x55f32d992cb8 <col:11> col:11 'Timestamp::rep_t &&'
|   `-CompoundStmt 0x55f32ddfb240 <col:11>
|     `-ReturnStmt 0x55f32ddfb230 <col:11>
|       `-UnaryOperator 0x55f32ddfb218 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55f32ddfb208 <col:11> 'Timestamp::rep_t *' this
|-EnumDecl 0x55f32dc83ca0 <line:571:5, line:577:5> line:571:10 referenced warp_class_type
| |-EnumConstantDecl 0x55f32dc83da0 <line:572:9, col:21> col:9 warp_none 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x55f32dc83fa0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f32dc83d80 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x55f32dc83d60 <col:21> 'int' 0
| |-EnumConstantDecl 0x55f32dc83e30 <line:573:9, col:23> col:9 warp_linear 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x55f32dc83fb8 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f32dc83e10 <col:23> 'int' Int: 1
| |     `-IntegerLiteral 0x55f32dc83df0 <col:23> 'int' 1
| |-EnumConstantDecl 0x55f32dc83ec0 <line:574:9, col:23> col:9 referenced warp_nowait 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x55f32dc83fd0 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f32dc83ea0 <col:23> 'int' Int: 2
| |     `-IntegerLiteral 0x55f32dc83e80 <col:23> 'int' 2
| `-EnumConstantDecl 0x55f32dc83f50 <line:576:9, col:27> col:9 warp_simulation 'Timestamp::warp_class_type'
|   `-ImplicitCastExpr 0x55f32dc83fe8 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55f32dc83f30 <col:27> 'int' Int: 3
|       `-IntegerLiteral 0x55f32dc83f10 <col:27> 'int' 3
|-CXXMethodDecl 0x55f32dc84028 <line:581:5, col:34> col:23 warp_class 'int ()' static inline
|-CXXMethodDecl 0x55f32dc840f0 <line:588:5, col:37> col:26 warp_speed 'double ()' static inline
|-CXXMethodDecl 0x55f32dc842f8 <line:621:5, col:65> col:17 warp_set_class 'void (Timestamp::warp_class_type, double)' static
| |-ParmVarDecl 0x55f32dc841a0 <col:32, col:48> col:48 w 'Timestamp::warp_class_type'
| `-ParmVarDecl 0x55f32dc84220 <col:51, col:62> col:58 s 'double' cinit
|   `-FloatingLiteral 0x55f32dc86860 <col:62> 'double' 1.000000e+00
|-CXXMethodDecl 0x55f32dc84508 <line:628:5, col:82> col:17 warp_set_now 'void (const Timestamp &, const Timestamp &)' static
| |-ParmVarDecl 0x55f32dc843b8 <col:30, col:47> col:47 t_system 'const Timestamp &'
| `-ParmVarDecl 0x55f32dc84430 <col:57, col:74> col:74 t_steady 'const Timestamp &'
|-CXXMethodDecl 0x55f32dc845d8 <line:632:5, col:40> col:22 warp_real_delay 'Timestamp () const' inline
|-CXXMethodDecl 0x55f32dc84698 <line:635:5, col:37> col:24 used warp_jumping 'bool ()' static inline
|-CXXMethodDecl 0x55f32dc84808 <line:640:5, col:57> col:17 warp_jump_steady 'void (const Timestamp &)' static
| `-ParmVarDecl 0x55f32dc84748 <col:34, col:51> col:51 expiry 'const Timestamp &'
|-CXXMethodDecl 0x55f32dc848d0 <line:647:5, col:42> col:29 now_unwarped 'Timestamp ()' static inline
|-CXXMethodDecl 0x55f32dc84990 <line:653:5, col:37> col:17 used assign_now_unwarped 'void ()' inline
|-CXXMethodDecl 0x55f32dc84a50 <line:659:5, col:49> col:29 now_steady_unwarped 'Timestamp ()' static inline
|-CXXMethodDecl 0x55f32dc84b10 <line:666:5, col:44> col:17 used assign_now_steady_unwarped 'void ()' inline
|-AccessSpecDecl 0x55f32dc84bb0 <line:670:3, col:10> col:3 private
|-FieldDecl 0x55f32dc84be8 <line:672:5, col:11> col:11 referenced _t 'Timestamp::rep_t'
|-CXXMethodDecl 0x55f32dc84c58 <line:674:5, line:684:5> line:674:17 used add_fix 'void ()' inline
| `-CompoundStmt 0x55f32dc9bee8 <col:27, line:684:5>
|-CXXMethodDecl 0x55f32dc84d18 <line:686:5, line:696:5> line:686:17 used sub_fix 'void ()' inline
| `-CompoundStmt 0x55f32dc9bef8 <col:27, line:696:5>
|-CXXMethodDecl 0x55f32dc84f18 <line:698:5, line:700:5> line:698:30 used value_div 'Timestamp::value_type (Timestamp::value_type, uint32_t)' static inline
| |-ParmVarDecl 0x55f32dc84dc8 <col:40, col:51> col:51 used a 'Timestamp::value_type':'long'
| |-ParmVarDecl 0x55f32dc84e40 <col:54, col:63> col:63 used b 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55f32dc9c080 <col:66, line:700:5>
|   `-ReturnStmt 0x55f32dc9c070 <line:699:9, col:31>
|     `-CallExpr 0x55f32dc9c010 <col:16, col:31> 'int64_t':'long'
|       |-ImplicitCastExpr 0x55f32dc9bff8 <col:16> 'int64_t (*)(int64_t, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55f32dc9bfa8 <col:16> 'int64_t (int64_t, uint32_t)' lvalue Function 0x55f32db072c8 'int_divide' 'int64_t (int64_t, uint32_t)'
|       |-ImplicitCastExpr 0x55f32dc9c040 <col:27> 'Timestamp::value_type':'long' <LValueToRValue>
|       | `-DeclRefExpr 0x55f32dc9bf68 <col:27> 'Timestamp::value_type':'long' lvalue ParmVar 0x55f32dc84dc8 'a' 'Timestamp::value_type':'long'
|       `-ImplicitCastExpr 0x55f32dc9c058 <col:30> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55f32dc9bf88 <col:30> 'uint32_t':'unsigned int' lvalue ParmVar 0x55f32dc84e40 'b' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f32dc85288 <line:702:5, line:707:5> line:702:24 value_div_mod 'void (int32_t &, int32_t &, Timestamp::value_type, uint32_t)' static inline
| |-ParmVarDecl 0x55f32dc84fd8 <col:38, col:47> col:47 used div 'int32_t &'
| |-ParmVarDecl 0x55f32dc85050 <col:52, col:61> col:61 used rem 'int32_t &'
| |-ParmVarDecl 0x55f32dc850c8 <line:703:38, col:49> col:49 used a 'Timestamp::value_type':'long'
| |-ParmVarDecl 0x55f32dc85140 <col:52, col:61> col:61 used b 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55f32dc9c3d0 <col:64, line:707:5>
|   |-DeclStmt 0x55f32dc9c110 <line:704:9, col:24>
|   | `-VarDecl 0x55f32dc9c0a8 <col:9, col:20> col:20 used quot 'Timestamp::value_type':'long'
|   |-BinaryOperator 0x55f32dc9c320 <line:705:9, col:39> 'int32_t':'int' lvalue '='
|   | |-DeclRefExpr 0x55f32dc9c128 <col:9> 'int32_t':'int' lvalue ParmVar 0x55f32dc85050 'rem' 'int32_t &'
|   | `-ImplicitCastExpr 0x55f32dc9c308 <col:15, col:39> 'int32_t':'int' <IntegralCast>
|   |   `-CallExpr 0x55f32dc9c2a0 <col:15, col:39> 'uint32_t':'unsigned int'
|   |     |-ImplicitCastExpr 0x55f32dc9c288 <col:15> 'uint32_t (*)(int64_t, uint32_t, int64_t &)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55f32dc9c208 <col:15> 'uint32_t (int64_t, uint32_t, int64_t &)' lvalue Function 0x55f32db0c598 'int_remainder' 'uint32_t (int64_t, uint32_t, int64_t &)'
|   |     |-ImplicitCastExpr 0x55f32dc9c2d8 <col:29> 'Timestamp::value_type':'long' <LValueToRValue>
|   |     | `-DeclRefExpr 0x55f32dc9c1a8 <col:29> 'Timestamp::value_type':'long' lvalue ParmVar 0x55f32dc850c8 'a' 'Timestamp::value_type':'long'
|   |     |-ImplicitCastExpr 0x55f32dc9c2f0 <col:32> 'uint32_t':'unsigned int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x55f32dc9c1c8 <col:32> 'uint32_t':'unsigned int' lvalue ParmVar 0x55f32dc85140 'b' 'uint32_t':'unsigned int'
|   |     `-DeclRefExpr 0x55f32dc9c1e8 <col:35> 'Timestamp::value_type':'long' lvalue Var 0x55f32dc9c0a8 'quot' 'Timestamp::value_type':'long'
|   `-BinaryOperator 0x55f32dc9c3b0 <line:706:9, col:15> 'int32_t':'int' lvalue '='
|     |-DeclRefExpr 0x55f32dc9c340 <col:9> 'int32_t':'int' lvalue ParmVar 0x55f32dc84fd8 'div' 'int32_t &'
|     `-ImplicitCastExpr 0x55f32dc9c398 <col:15> 'int32_t':'int' <IntegralCast>
|       `-ImplicitCastExpr 0x55f32dc9c380 <col:15> 'Timestamp::value_type':'long' <LValueToRValue>
|         `-DeclRefExpr 0x55f32dc9c360 <col:15> 'Timestamp::value_type':'long' lvalue Var 0x55f32dc9c0a8 'quot' 'Timestamp::value_type':'long'
|-CXXMethodDecl 0x55f32dc85528 <line:709:5, col:67> col:17 used assign_now 'void (bool, bool, bool)' inline
| |-ParmVarDecl 0x55f32dc85358 <col:28, col:33> col:33 recent 'bool'
| |-ParmVarDecl 0x55f32dc853d0 <col:41, col:46> col:46 steady 'bool'
| `-ParmVarDecl 0x55f32dc85448 <col:54, col:59> col:59 unwarped 'bool'
|-CXXMethodDecl 0x55f32dc857c8 <line:712:5, col:98> col:24 warp_adjust 'void (bool, const Timestamp &, const Timestamp &)' static inline
| |-ParmVarDecl 0x55f32dc855f0 <col:36, col:41> col:41 steady 'bool'
| |-ParmVarDecl 0x55f32dc85668 <col:49, col:66> col:66 t_raw 'const Timestamp &'
| `-ParmVarDecl 0x55f32dc856e0 <col:73, col:90> col:90 t_warped 'const Timestamp &'
|-CXXMethodDecl 0x55f32dc85958 <line:713:5, col:42> col:22 warped 'Timestamp (bool) const' inline
| `-ParmVarDecl 0x55f32dc85890 <col:29, col:34> col:34 steady 'bool'
|-CXXMethodDecl 0x55f32dc85b58 <line:714:5, col:41> col:10 used warp 'void (bool, bool)'
| |-ParmVarDecl 0x55f32dc85a10 <col:15, col:20> col:20 steady 'bool'
| `-ParmVarDecl 0x55f32dc85a88 <col:28, col:33> col:33 from_now 'bool'
|-FriendDecl 0x55f32dc85e28 <line:717:5, col:73> col:24
| `-FunctionDecl 0x55f32dc85d68 parent 0x55f32d785488 <col:5, col:73> col:24 used operator== 'bool (const Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x55f32dc85c18 <col:35, col:52> col:52 a 'const Timestamp &'
|   `-ParmVarDecl 0x55f32dc85c90 <col:55, col:72> col:72 b 'const Timestamp &'
|-FriendDecl 0x55f32dc86048 <line:718:5, col:72> col:24
| `-FunctionDecl 0x55f32dc85f88 parent 0x55f32d785488 <col:5, col:72> col:24 used operator< 'bool (const Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x55f32dc85e78 <col:34, col:51> col:51 a 'const Timestamp &'
|   `-ParmVarDecl 0x55f32dc85ef0 <col:54, col:71> col:71 b 'const Timestamp &'
|-FriendDecl 0x55f32dc86210 <line:719:5, col:57> col:29
| `-FunctionDecl 0x55f32dc86158 parent 0x55f32d785488 <col:5, col:57> col:29 operator- 'Timestamp (const Timestamp &)' inline
|   `-ParmVarDecl 0x55f32dc86098 <col:39, col:56> col:56 b 'const Timestamp &'
|-FriendDecl 0x55f32dc86498 <line:720:5, col:73> col:30
| `-FunctionDecl 0x55f32dc863d8 parent 0x55f32d785488 <col:5, col:73> col:30 used operator+= 'Timestamp &(Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x55f32dc86288 <col:41, col:52> col:52 a 'Timestamp &'
|   `-ParmVarDecl 0x55f32dc86300 <col:55, col:72> col:72 b 'const Timestamp &'
|-FriendDecl 0x55f32dc866b8 <line:721:5, col:73> col:30
| `-FunctionDecl 0x55f32dc865f8 parent 0x55f32d785488 <col:5, col:73> col:30 used operator-= 'Timestamp &(Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x55f32dc864e8 <col:41, col:52> col:52 a 'Timestamp &'
|   `-ParmVarDecl 0x55f32dc86560 <col:55, col:72> col:72 b 'const Timestamp &'
|-CXXConstructorDecl 0x55f32dc8bf40 <line:122:7> col:7 implicit used constexpr Timestamp 'void (const Timestamp &) noexcept' inline default trivial
| |-ParmVarDecl 0x55f32dc8c028 <col:7> col:7 used 'const Timestamp &'
| |-CXXCtorInitializer Field 0x55f32dc84be8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55f32dc8ca98 <col:7> 'Timestamp::rep_t' 'void (const Timestamp::rep_t &) noexcept'
| |   `-MemberExpr 0x55f32dc8ca50 <col:7> 'const Timestamp::rep_t' lvalue ._t 0x55f32dc84be8
| |     `-DeclRefExpr 0x55f32dc8ca30 <col:7> 'const Timestamp' lvalue ParmVar 0x55f32dc8c028 '' 'const Timestamp &'
| `-CompoundStmt 0x55f32dc8caf8 <col:7>
|-CXXConstructorDecl 0x55f32dc8c1a8 <col:7> col:7 implicit used constexpr Timestamp 'void (Timestamp &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55f32dc8c2b8 <col:7> col:7 used 'Timestamp &&'
| |-CXXCtorInitializer Field 0x55f32dc84be8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55f32dc8cd98 <col:7> 'Timestamp::rep_t' 'void (Timestamp::rep_t &&) noexcept'
| |   `-MemberExpr 0x55f32dc8cd40 <col:7> 'Timestamp::rep_t' xvalue ._t 0x55f32dc84be8
| |     `-CXXStaticCastExpr 0x55f32dc8cd10 <col:7> 'Timestamp' xvalue static_cast<class Timestamp &&> <NoOp>
| |       `-DeclRefExpr 0x55f32dc8cce0 <col:7> 'Timestamp' lvalue ParmVar 0x55f32dc8c2b8 '' 'Timestamp &&'
| `-CompoundStmt 0x55f32dc8cdf8 <col:7>
|-CXXDestructorDecl 0x55f32dc8c368 <col:7> col:7 implicit referenced ~Timestamp 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55f32d992878 <col:7> col:7 implicit used operator= 'Timestamp &(const Timestamp &) noexcept' inline default trivial
| |-ParmVarDecl 0x55f32d992988 <col:7> col:7 used 'const Timestamp &'
| `-CompoundStmt 0x55f32d993478 <col:7>
|   |-CXXMemberCallExpr 0x55f32d993418 <col:7> 'Timestamp::rep_t' lvalue
|   | |-MemberExpr 0x55f32d993358 <col:7> '<bound member function type>' .operator= 0x55f32d992a28
|   | | `-MemberExpr 0x55f32d993268 <col:7> 'Timestamp::rep_t' lvalue ->_t 0x55f32dc84be8
|   | |   `-CXXThisExpr 0x55f32d993258 <col:7> 'Timestamp *' this
|   | `-MemberExpr 0x55f32d993328 <col:7> 'const Timestamp::rep_t' lvalue ._t 0x55f32dc84be8
|   |   `-DeclRefExpr 0x55f32d993308 <col:7> 'const Timestamp' lvalue ParmVar 0x55f32d992988 '' 'const Timestamp &'
|   `-ReturnStmt 0x55f32d993468 <col:7>
|     `-UnaryOperator 0x55f32d993450 <col:7> 'Timestamp' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55f32d993440 <col:7> 'Timestamp *' this
`-CXXMethodDecl 0x55f32d992d28 <col:7> col:7 implicit used operator= 'Timestamp &(Timestamp &&) noexcept' inline default trivial
  |-ParmVarDecl 0x55f32d992e38 <col:7> col:7 used 'Timestamp &&'
  `-CompoundStmt 0x55f32ddfb2b8 <col:7>
    |-CXXMemberCallExpr 0x55f32ddfb258 <col:7> 'Timestamp::rep_t' lvalue
    | |-MemberExpr 0x55f32ddfb1c0 <col:7> '<bound member function type>' .operator= 0x55f32d992ba8
    | | `-MemberExpr 0x55f32ddfb090 <col:7> 'Timestamp::rep_t' lvalue ->_t 0x55f32dc84be8
    | |   `-CXXThisExpr 0x55f32ddfb080 <col:7> 'Timestamp *' this
    | `-MemberExpr 0x55f32ddfb190 <col:7> 'Timestamp::rep_t' xvalue ._t 0x55f32dc84be8
    |   `-CXXStaticCastExpr 0x55f32ddfb160 <col:7> 'Timestamp' xvalue static_cast<class Timestamp &&> <NoOp>
    |     `-DeclRefExpr 0x55f32ddfb130 <col:7> 'Timestamp' lvalue ParmVar 0x55f32d992e38 '' 'Timestamp &&'
    `-ReturnStmt 0x55f32ddfb2a8 <col:7>
      `-UnaryOperator 0x55f32ddfb290 <col:7> 'Timestamp' lvalue prefix '*' cannot overflow
        `-CXXThisExpr 0x55f32ddfb280 <col:7> 'Timestamp *' this

Layout: <CGRecordLayout
  LLVMType:%class.Timestamp = type { %"union.Timestamp::rep_t" }
  NonVirtualBaseLLVMType:%class.Timestamp = type { %"union.Timestamp::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55f32de11198 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'TimerSet::heap_element'
|-CXXRecordDecl 0x55f32de113a8 prev 0x55f32de11198 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55f32de125b0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<heap_element>::type':'sized_array_memory<16>'
| `-ElaboratedType 0x55f32de12560 'typename array_memory<heap_element>::type' sugar
|   `-TypedefType 0x55f32de12540 'conditional<true, sized_array_memory<16>, typed_array_memory<TimerSet::heap_element> >::type' sugar
|     |-Typedef 0x55f32de123f0 'type'
|     `-SubstTemplateTypeParmType 0x55f32de12210 'sized_array_memory<16>' sugar
|       |-TemplateTypeParmType 0x55f32da4f230 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f32da4f1d8 'T'
|       `-RecordType 0x55f32de11d60 'sized_array_memory<16>'
|         `-ClassTemplateSpecialization 0x55f32de11c78 'sized_array_memory'
|-FieldDecl 0x55f32de16250 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<TimerSet::heap_element>::array_memory_type>':'vector_memory<sized_array_memory<16> >' mutable
|-AccessSpecDecl 0x55f32de162a0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55f32de162d8 <line:118:5, col:15> col:15 value_type 'TimerSet::heap_element':'TimerSet::heap_element'
| `-SubstTemplateTypeParmType 0x55f32de11440 'TimerSet::heap_element' sugar
|   |-TemplateTypeParmType 0x55f32da87140 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55f32da870e8 'T'
|   `-RecordType 0x55f32de103a0 'TimerSet::heap_element'
|     `-CXXRecord 0x55f32de10310 'heap_element'
|-TypedefDecl 0x55f32de16398 <line:119:5, col:16> col:16 reference 'TimerSet::heap_element &'
| `-LValueReferenceType 0x55f32de16360 'TimerSet::heap_element &'
|   `-SubstTemplateTypeParmType 0x55f32de11440 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x55f32da87140 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55f32da870e8 'T'
|     `-RecordType 0x55f32de103a0 'TimerSet::heap_element'
|       `-CXXRecord 0x55f32de10310 'heap_element'
|-TypedefDecl 0x55f32de16428 <line:120:5, col:22> col:22 const_reference 'const TimerSet::heap_element &'
| `-LValueReferenceType 0x55f32de163f0 'const TimerSet::heap_element &'
|   `-QualType 0x55f32de11441 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x55f32de11440 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x55f32da87140 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f32da870e8 'T'
|       `-RecordType 0x55f32de103a0 'TimerSet::heap_element'
|         `-CXXRecord 0x55f32de10310 'heap_element'
|-TypedefDecl 0x55f32de164b8 <line:121:5, col:16> col:16 pointer 'TimerSet::heap_element *'
| `-PointerType 0x55f32de16480 'TimerSet::heap_element *'
|   `-SubstTemplateTypeParmType 0x55f32de11440 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x55f32da87140 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55f32da870e8 'T'
|     `-RecordType 0x55f32de103a0 'TimerSet::heap_element'
|       `-CXXRecord 0x55f32de10310 'heap_element'
|-TypedefDecl 0x55f32de16578 <line:122:5, col:22> col:22 const_pointer 'const TimerSet::heap_element *'
| `-PointerType 0x55f32de16540 'const TimerSet::heap_element *'
|   `-QualType 0x55f32de11441 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x55f32de11440 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x55f32da87140 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f32da870e8 'T'
|       `-RecordType 0x55f32de103a0 'TimerSet::heap_element'
|         `-CXXRecord 0x55f32de10310 'heap_element'
|-TypedefDecl 0x55f32de171d0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<heap_element>::type':'const TimerSet::heap_element &'
| `-ElaboratedType 0x55f32de17180 'typename fast_argument<heap_element>::type' sugar
|   `-TypedefType 0x55f32de17160 'fast_argument<TimerSet::heap_element, true>::type' sugar
|     |-Typedef 0x55f32de17098 'type'
|     `-LValueReferenceType 0x55f32de17060 'const TimerSet::heap_element &'
|       `-QualType 0x55f32de16e01 'const TimerSet::heap_element' const
|         `-SubstTemplateTypeParmType 0x55f32de16e00 'TimerSet::heap_element' sugar
|           |-TemplateTypeParmType 0x55f32da59b20 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55f32da59ac8 'T'
|           `-RecordType 0x55f32de103a0 'TimerSet::heap_element'
|             `-CXXRecord 0x55f32de10310 'heap_element'
|-TypedefDecl 0x55f32de17238 <line:126:5, col:22> col:22 const_access_type 'const TimerSet::heap_element &'
| `-LValueReferenceType 0x55f32de163f0 'const TimerSet::heap_element &'
|   `-QualType 0x55f32de11441 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x55f32de11440 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x55f32da87140 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f32da870e8 'T'
|       `-RecordType 0x55f32de103a0 'TimerSet::heap_element'
|         `-CXXRecord 0x55f32de10310 'heap_element'
|-TypedefDecl 0x55f32de17290 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55f32d785580 'int'
|-TypedefDecl 0x55f32de172f8 <line:130:5, col:16> col:16 iterator 'TimerSet::heap_element *'
| `-PointerType 0x55f32de16480 'TimerSet::heap_element *'
|   `-SubstTemplateTypeParmType 0x55f32de11440 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x55f32da87140 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55f32da870e8 'T'
|     `-RecordType 0x55f32de103a0 'TimerSet::heap_element'
|       `-CXXRecord 0x55f32de10310 'heap_element'
|-TypedefDecl 0x55f32de17360 <line:131:5, col:22> col:22 const_iterator 'const TimerSet::heap_element *'
| `-PointerType 0x55f32de16540 'const TimerSet::heap_element *'
|   `-QualType 0x55f32de11441 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x55f32de11440 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x55f32da87140 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f32da870e8 'T'
|       `-RecordType 0x55f32de103a0 'TimerSet::heap_element'
|         `-CXXRecord 0x55f32de10310 'heap_element'
|-EnumDecl 0x55f32de173b8 <line:134:5> col:5
| `-EnumConstantDecl 0x55f32de174b0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<TimerSet::heap_element>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55f32de17490 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55f32da887c8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55f32da887a0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55f32da88780 <col:40> 'int' 1
|-CXXConstructorDecl 0x55f32de17538 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55f32de177c8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x55f32de175f0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55f32de17690 <col:41, col:61> col:61 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXConstructorDecl 0x55f32de17a88 <line:139:5, col:37> col:12 Vector 'void (const Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x55f32de17970 <col:19, col:36> col:36 x 'const Vector<TimerSet::heap_element> &'
|-CXXConstructorDecl 0x55f32de17d48 <line:141:5, col:32> col:12 Vector 'void (Vector<TimerSet::heap_element> &&)' inline
| `-ParmVarDecl 0x55f32de17c30 <col:19, col:31> col:31 x 'Vector<TimerSet::heap_element> &&'
|-CXXMethodDecl 0x55f32de18090 <line:144:5, col:51> col:23 operator= 'Vector<TimerSet::heap_element> &(const Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x55f32de17f70 <col:33, col:50> col:50 x 'const Vector<TimerSet::heap_element> &'
|-CXXMethodDecl 0x55f32de183a0 <line:146:5, col:46> col:23 operator= 'Vector<TimerSet::heap_element> &(Vector<TimerSet::heap_element> &&)' inline
| `-ParmVarDecl 0x55f32de18280 <col:33, col:45> col:45 x 'Vector<TimerSet::heap_element> &&'
|-CXXMethodDecl 0x55f32de18690 <line:148:5, col:70> col:23 assign 'Vector<TimerSet::heap_element> &(Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x55f32de184d8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55f32de18550 <col:43, col:69> col:63 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x55f32de187e8 <line:150:5, col:55> col:49 begin 'Vector<TimerSet::heap_element>::iterator ()'
| |-NoInlineAttr 0x55f32de188c8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f32de18920 <col:30> Inherited
|-CXXMethodDecl 0x55f32de18968 <line:151:5, col:53> col:49 end 'Vector<TimerSet::heap_element>::iterator ()'
| |-NoInlineAttr 0x55f32de18a18 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f32de18a70 <col:30> Inherited
|-CXXMethodDecl 0x55f32de18b38 <line:152:5, col:63> col:55 begin 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x55f32de18be8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f32de18c40 <col:30> Inherited
|-CXXMethodDecl 0x55f32de18c88 <line:153:5, col:61> col:55 end 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x55f32de18d38 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f32de18d90 <col:30> Inherited
|-CXXMethodDecl 0x55f32de18dd8 <line:154:5, col:64> col:55 cbegin 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x55f32de18e88 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f32de18ee0 <col:30> Inherited
|-CXXMethodDecl 0x55f32de18f28 <line:155:5, col:62> col:55 cend 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x55f32de18fd8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f32de19030 <col:30> Inherited
|-CXXMethodDecl 0x55f32de19058 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55f32de19108 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55f32de191b8 <line:159:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x55f32de19378 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x55f32de19268 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55f32de192e0 <col:37, col:63> col:57 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x55f32de194c8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55f32de19438 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f32de19678 <line:163:5, col:65> col:43 operator[] 'TimerSet::heap_element &(Vector::size_type)'
| |-ParmVarDecl 0x55f32de19580 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55f32de19730 <col:20>
| `-OptimizeNoneAttr 0x55f32de19788 <col:30>
|-CXXMethodDecl 0x55f32de198a8 <line:164:5, col:73> col:49 operator[] 'const TimerSet::heap_element &(Vector::size_type) const'
| |-ParmVarDecl 0x55f32de197b0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55f32de19960 <col:20>
| `-OptimizeNoneAttr 0x55f32de199b8 <col:30>
|-CXXMethodDecl 0x55f32de19a70 <line:165:5, col:29> col:15 at 'TimerSet::heap_element &(Vector::size_type)' inline
| `-ParmVarDecl 0x55f32de199e0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f32de19bb8 <line:166:5, col:37> col:21 at 'const TimerSet::heap_element &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55f32de19b28 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f32de19ce8 <line:167:5, col:21> col:15 front 'TimerSet::heap_element &()' inline
|-CXXMethodDecl 0x55f32de19e18 <line:168:5, col:29> col:21 front 'const TimerSet::heap_element &() const' inline
|-CXXMethodDecl 0x55f32de19ee8 <line:169:5, col:20> col:15 back 'TimerSet::heap_element &()' inline
|-CXXMethodDecl 0x55f32de19fb8 <line:170:5, col:28> col:21 back 'const TimerSet::heap_element &() const' inline
|-CXXMethodDecl 0x55f32de1a0f8 <line:172:5, col:39> col:15 used unchecked_at 'TimerSet::heap_element &(Vector::size_type)' inline
| `-ParmVarDecl 0x55f32de1a068 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f32de1a240 <line:173:5, col:47> col:21 unchecked_at 'const TimerSet::heap_element &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55f32de1a1b0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f32de1a388 <line:174:5, col:59> col:15 at_u 'TimerSet::heap_element &(Vector::size_type)' inline
| |-ParmVarDecl 0x55f32de1a2f8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55f32de1a440 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55f32de1a540 <line:175:5, col:71> col:21 at_u 'const TimerSet::heap_element &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55f32de1a4b0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55f32de1a5f8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55f32de1a6e0 <line:177:5, col:20> col:15 data 'TimerSet::heap_element *()' inline
|-CXXMethodDecl 0x55f32de1a7d8 <line:178:5, col:28> col:21 data 'const TimerSet::heap_element *() const' inline
|-CXXMethodDecl 0x55f32de1a988 <line:180:5, col:48> col:17 push_back 'void (Vector<TimerSet::heap_element>::value_argument_type)' inline
| `-ParmVarDecl 0x55f32de1a898 <col:27, col:47> col:47 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-FunctionTemplateDecl 0x55f32de1b148 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55f32de1aa40 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<TimerSet::heap_element>':'fast_argument<TimerSet::heap_element, true>'
| `-CXXMethodDecl 0x55f32de1b0a8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (TimerSet::heap_element &&)' inline
|   `-ParmVarDecl 0x55f32de1afa8 <col:58, col:62> col:62 v 'TimerSet::heap_element &&'
|-CXXMethodDecl 0x55f32de1b228 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55f32de1b378 <line:186:5, col:49> col:17 push_front 'void (Vector<TimerSet::heap_element>::value_argument_type)' inline
| `-ParmVarDecl 0x55f32de1b2e8 <col:28, col:48> col:48 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x55f32de1b430 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55f32de1b678 <line:189:5, col:62> col:21 insert 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x55f32de1b4f0 <col:28, col:37> col:37 it 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
| `-ParmVarDecl 0x55f32de1b568 <col:41, col:61> col:61 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x55f32de1b838 <line:190:5, col:38> col:21 erase 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator)' inline
| `-ParmVarDecl 0x55f32de1b748 <col:27, col:36> col:36 it 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
|-CXXMethodDecl 0x55f32de1ba88 <line:191:5, col:49> col:21 erase 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator, Vector<TimerSet::heap_element>::iterator)' inline
| |-ParmVarDecl 0x55f32de1b900 <col:27, col:36> col:36 a 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
| `-ParmVarDecl 0x55f32de1b978 <col:39, col:48> col:48 b 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
|-CXXMethodDecl 0x55f32de1bb48 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55f32de1bda8 <line:195:5, col:34> col:17 swap 'void (Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x55f32de1bcb0 <col:22, col:33> col:33 x 'Vector<TimerSet::heap_element> &'
`-CXXDestructorDecl 0x55f32de1be78 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55f32de1be78

Layout: <CGRecordLayout
  LLVMType:%class.Vector.14 = type { %class.vector_memory.9 }
  NonVirtualBaseLLVMType:%class.Vector.14 = type { %class.vector_memory.9 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55f32de1bfc0 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Timer *'
|-CXXRecordDecl 0x55f32de1c1c8 prev 0x55f32de1bfc0 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55f32de1d1e0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<Timer *>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x55f32de1d190 'typename array_memory<Timer *>::type' sugar
|   `-TypedefType 0x55f32de1d170 'conditional<true, sized_array_memory<8>, typed_array_memory<Timer *> >::type' sugar
|     |-Typedef 0x55f32de1d020 'type'
|     `-SubstTemplateTypeParmType 0x55f32ddd8ca0 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x55f32da4f230 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f32da4f1d8 'T'
|       `-RecordType 0x55f32ddd87f0 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x55f32ddd8708 'sized_array_memory'
|-FieldDecl 0x55f32de1d2e0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Timer *>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x55f32de1d330 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55f32de1d368 <line:118:5, col:15> col:15 value_type 'Timer *':'Timer *'
| `-SubstTemplateTypeParmType 0x55f32de1c260 'Timer *' sugar
|   |-TemplateTypeParmType 0x55f32da87140 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55f32da870e8 'T'
|   `-PointerType 0x55f32dcebcd0 'Timer *'
|     `-RecordType 0x55f32dceae20 'Timer'
|       `-CXXRecord 0x55f32ddf1008 'Timer'
|-TypedefDecl 0x55f32de1d428 <line:119:5, col:16> col:16 reference 'Timer *&'
| `-LValueReferenceType 0x55f32de1d3f0 'Timer *&'
|   `-SubstTemplateTypeParmType 0x55f32de1c260 'Timer *' sugar
|     |-TemplateTypeParmType 0x55f32da87140 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55f32da870e8 'T'
|     `-PointerType 0x55f32dcebcd0 'Timer *'
|       `-RecordType 0x55f32dceae20 'Timer'
|         `-CXXRecord 0x55f32ddf1008 'Timer'
|-TypedefDecl 0x55f32de1d4e8 <line:120:5, col:22> col:22 const_reference 'Timer *const &'
| `-LValueReferenceType 0x55f32de1d4b0 'Timer *const &'
|   `-QualType 0x55f32de1c261 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x55f32de1c260 'Timer *' sugar
|       |-TemplateTypeParmType 0x55f32da87140 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f32da870e8 'T'
|       `-PointerType 0x55f32dcebcd0 'Timer *'
|         `-RecordType 0x55f32dceae20 'Timer'
|           `-CXXRecord 0x55f32ddf1008 'Timer'
|-TypedefDecl 0x55f32de1d5a8 <line:121:5, col:16> col:16 pointer 'Timer **'
| `-PointerType 0x55f32de1d570 'Timer **'
|   `-SubstTemplateTypeParmType 0x55f32de1c260 'Timer *' sugar
|     |-TemplateTypeParmType 0x55f32da87140 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55f32da870e8 'T'
|     `-PointerType 0x55f32dcebcd0 'Timer *'
|       `-RecordType 0x55f32dceae20 'Timer'
|         `-CXXRecord 0x55f32ddf1008 'Timer'
|-TypedefDecl 0x55f32de1d668 <line:122:5, col:22> col:22 const_pointer 'Timer *const *'
| `-PointerType 0x55f32de1d630 'Timer *const *'
|   `-QualType 0x55f32de1c261 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x55f32de1c260 'Timer *' sugar
|       |-TemplateTypeParmType 0x55f32da87140 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f32da870e8 'T'
|       `-PointerType 0x55f32dcebcd0 'Timer *'
|         `-RecordType 0x55f32dceae20 'Timer'
|           `-CXXRecord 0x55f32ddf1008 'Timer'
|-TypedefDecl 0x55f32de1e240 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<Timer *>::type':'Timer *'
| `-ElaboratedType 0x55f32de1e1f0 'typename fast_argument<Timer *>::type' sugar
|   `-TypedefType 0x55f32de1e1d0 'fast_argument<Timer *, false>::type' sugar
|     |-Typedef 0x55f32de1e160 'type'
|     `-SubstTemplateTypeParmType 0x55f32de1df20 'Timer *' sugar
|       |-TemplateTypeParmType 0x55f32da5a250 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f32da5a200 'T'
|       `-PointerType 0x55f32dcebcd0 'Timer *'
|         `-RecordType 0x55f32dceae20 'Timer'
|           `-CXXRecord 0x55f32ddf1008 'Timer'
|-TypedefDecl 0x55f32de1e2a8 <line:126:5, col:22> col:22 const_access_type 'Timer *const &'
| `-LValueReferenceType 0x55f32de1d4b0 'Timer *const &'
|   `-QualType 0x55f32de1c261 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x55f32de1c260 'Timer *' sugar
|       |-TemplateTypeParmType 0x55f32da87140 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f32da870e8 'T'
|       `-PointerType 0x55f32dcebcd0 'Timer *'
|         `-RecordType 0x55f32dceae20 'Timer'
|           `-CXXRecord 0x55f32ddf1008 'Timer'
|-TypedefDecl 0x55f32de1e300 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55f32d785580 'int'
|-TypedefDecl 0x55f32de1e368 <line:130:5, col:16> col:16 iterator 'Timer **'
| `-PointerType 0x55f32de1d570 'Timer **'
|   `-SubstTemplateTypeParmType 0x55f32de1c260 'Timer *' sugar
|     |-TemplateTypeParmType 0x55f32da87140 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55f32da870e8 'T'
|     `-PointerType 0x55f32dcebcd0 'Timer *'
|       `-RecordType 0x55f32dceae20 'Timer'
|         `-CXXRecord 0x55f32ddf1008 'Timer'
|-TypedefDecl 0x55f32de1e3d0 <line:131:5, col:22> col:22 const_iterator 'Timer *const *'
| `-PointerType 0x55f32de1d630 'Timer *const *'
|   `-QualType 0x55f32de1c261 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x55f32de1c260 'Timer *' sugar
|       |-TemplateTypeParmType 0x55f32da87140 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f32da870e8 'T'
|       `-PointerType 0x55f32dcebcd0 'Timer *'
|         `-RecordType 0x55f32dceae20 'Timer'
|           `-CXXRecord 0x55f32ddf1008 'Timer'
|-EnumDecl 0x55f32de1e428 <line:134:5> col:5
| `-EnumConstantDecl 0x55f32de1e520 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Timer *>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55f32de1e500 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55f32da887c8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55f32da887a0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55f32da88780 <col:40> 'int' 1
|-CXXConstructorDecl 0x55f32de1e5a8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55f32de1e838 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x55f32de1e660 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55f32de1e700 <col:41, col:61> col:61 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXConstructorDecl 0x55f32de1eaf8 <line:139:5, col:37> col:12 Vector 'void (const Vector<Timer *> &)' inline
| `-ParmVarDecl 0x55f32de1e9e0 <col:19, col:36> col:36 x 'const Vector<Timer *> &'
|-CXXConstructorDecl 0x55f32de1edb8 <line:141:5, col:32> col:12 Vector 'void (Vector<Timer *> &&)' inline
| `-ParmVarDecl 0x55f32de1eca0 <col:19, col:31> col:31 x 'Vector<Timer *> &&'
|-CXXMethodDecl 0x55f32de1f100 <line:144:5, col:51> col:23 operator= 'Vector<Timer *> &(const Vector<Timer *> &)' inline
| `-ParmVarDecl 0x55f32de1efe0 <col:33, col:50> col:50 x 'const Vector<Timer *> &'
|-CXXMethodDecl 0x55f32de1f410 <line:146:5, col:46> col:23 operator= 'Vector<Timer *> &(Vector<Timer *> &&)' inline
| `-ParmVarDecl 0x55f32de1f2f0 <col:33, col:45> col:45 x 'Vector<Timer *> &&'
|-CXXMethodDecl 0x55f32de1f700 <line:148:5, col:70> col:23 assign 'Vector<Timer *> &(Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x55f32de1f548 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55f32de1f5c0 <col:43, col:69> col:63 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x55f32de1f858 <line:150:5, col:55> col:49 begin 'Vector<Timer *>::iterator ()'
| |-NoInlineAttr 0x55f32de1f938 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f32de1f990 <col:30> Inherited
|-CXXMethodDecl 0x55f32de1f9d8 <line:151:5, col:53> col:49 end 'Vector<Timer *>::iterator ()'
| |-NoInlineAttr 0x55f32de1fa88 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f32de1fae0 <col:30> Inherited
|-CXXMethodDecl 0x55f32de1fba8 <line:152:5, col:63> col:55 begin 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x55f32de1fc58 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f32de1fcb0 <col:30> Inherited
|-CXXMethodDecl 0x55f32de1fcf8 <line:153:5, col:61> col:55 end 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x55f32de1fda8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f32de1fe00 <col:30> Inherited
|-CXXMethodDecl 0x55f32de1fe48 <line:154:5, col:64> col:55 cbegin 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x55f32de1fef8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f32de1ff50 <col:30> Inherited
|-CXXMethodDecl 0x55f32de1ff98 <line:155:5, col:62> col:55 cend 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x55f32de20048 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f32de200a0 <col:30> Inherited
|-CXXMethodDecl 0x55f32de200c8 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55f32de20178 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55f32de20228 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55f32de203e8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x55f32de202d8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55f32de20350 <col:37, col:63> col:57 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x55f32de20538 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55f32de204a8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f32de206e8 <line:163:5, col:65> col:43 operator[] 'Timer *&(Vector::size_type)'
| |-ParmVarDecl 0x55f32de205f0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55f32de207a0 <col:20>
| `-OptimizeNoneAttr 0x55f32de207f8 <col:30>
|-CXXMethodDecl 0x55f32de20918 <line:164:5, col:73> col:49 operator[] 'Timer *const &(Vector::size_type) const'
| |-ParmVarDecl 0x55f32de20820 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55f32de209d0 <col:20>
| `-OptimizeNoneAttr 0x55f32de20a28 <col:30>
|-CXXMethodDecl 0x55f32de20ae0 <line:165:5, col:29> col:15 at 'Timer *&(Vector::size_type)' inline
| `-ParmVarDecl 0x55f32de20a50 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f32de20c28 <line:166:5, col:37> col:21 at 'Timer *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55f32de20b98 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f32de20d58 <line:167:5, col:21> col:15 front 'Timer *&()' inline
|-CXXMethodDecl 0x55f32de20e88 <line:168:5, col:29> col:21 front 'Timer *const &() const' inline
|-CXXMethodDecl 0x55f32de20f58 <line:169:5, col:20> col:15 back 'Timer *&()' inline
|-CXXMethodDecl 0x55f32de21028 <line:170:5, col:28> col:21 back 'Timer *const &() const' inline
|-CXXMethodDecl 0x55f32de21168 <line:172:5, col:39> col:15 unchecked_at 'Timer *&(Vector::size_type)' inline
| `-ParmVarDecl 0x55f32de210d8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f32de212b0 <line:173:5, col:47> col:21 unchecked_at 'Timer *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55f32de21220 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f32de213f8 <line:174:5, col:59> col:15 at_u 'Timer *&(Vector::size_type)' inline
| |-ParmVarDecl 0x55f32de21368 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55f32de214b0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55f32de215b0 <line:175:5, col:71> col:21 at_u 'Timer *const &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55f32de21520 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55f32de21668 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55f32de21728 <line:177:5, col:20> col:15 data 'Timer **()' inline
|-CXXMethodDecl 0x55f32de21828 <line:178:5, col:28> col:21 data 'Timer *const *() const' inline
|-CXXMethodDecl 0x55f32de219a8 <line:180:5, col:48> col:17 push_back 'void (Vector<Timer *>::value_argument_type)' inline
| `-ParmVarDecl 0x55f32de218e8 <col:27, col:47> col:47 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-FunctionTemplateDecl 0x55f32de22168 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55f32de21a60 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Timer *>':'fast_argument<Timer *, false>'
| `-CXXMethodDecl 0x55f32de220c8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Timer *&&)' inline
|   `-ParmVarDecl 0x55f32de21fc8 <col:58, col:62> col:62 v 'Timer *&&'
|-CXXMethodDecl 0x55f32de22248 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55f32de22398 <line:186:5, col:49> col:17 push_front 'void (Vector<Timer *>::value_argument_type)' inline
| `-ParmVarDecl 0x55f32de22308 <col:28, col:48> col:48 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x55f32de22450 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55f32de23480 <line:189:5, col:62> col:21 insert 'Vector<Timer *>::iterator (Vector<Timer *>::iterator, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x55f32de22510 <col:28, col:37> col:37 it 'Vector<Timer *>::iterator':'Timer **'
| `-ParmVarDecl 0x55f32de22588 <col:41, col:61> col:61 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x55f32de23648 <line:190:5, col:38> col:21 erase 'Vector<Timer *>::iterator (Vector<Timer *>::iterator)' inline
| `-ParmVarDecl 0x55f32de23550 <col:27, col:36> col:36 it 'Vector<Timer *>::iterator':'Timer **'
|-CXXMethodDecl 0x55f32de23898 <line:191:5, col:49> col:21 erase 'Vector<Timer *>::iterator (Vector<Timer *>::iterator, Vector<Timer *>::iterator)' inline
| |-ParmVarDecl 0x55f32de23710 <col:27, col:36> col:36 a 'Vector<Timer *>::iterator':'Timer **'
| `-ParmVarDecl 0x55f32de23788 <col:39, col:48> col:48 b 'Vector<Timer *>::iterator':'Timer **'
|-CXXMethodDecl 0x55f32de23958 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55f32de23bb8 <line:195:5, col:34> col:17 swap 'void (Vector<Timer *> &)' inline
| `-ParmVarDecl 0x55f32de23ac0 <col:22, col:33> col:33 x 'Vector<Timer *> &'
`-CXXDestructorDecl 0x55f32de23c88 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55f32de23c88

Layout: <CGRecordLayout
  LLVMType:%class.Vector.15 = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector.15 = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f32ddeda40 <../dummy_inc/click/sync.hh:194:1, line:211:1> line:194:7 referenced class SimpleSpinlock definition
|-DefinitionData empty standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55f32ddedb58 <col:1, col:7> col:7 implicit referenced class SimpleSpinlock
|-AccessSpecDecl 0x55f32ddedbe8 <col:24, col:30> col:24 public
|-CXXConstructorDecl 0x55f32ddedc70 <line:196:5, col:27> col:12 SimpleSpinlock 'void ()' inline
|-CXXDestructorDecl 0x55f32ddedd60 <line:197:5, col:28> col:12 ~SimpleSpinlock 'void () noexcept' inline
|-CXXMethodDecl 0x55f32ddede60 <line:199:5, col:25> col:17 acquire 'void ()' inline
|-CXXMethodDecl 0x55f32ddedf20 <line:200:5, col:25> col:17 release 'void ()' inline
|-CXXMethodDecl 0x55f32ddedfe0 <line:201:5, col:25> col:17 attempt 'bool ()' inline
|-CXXConstructorDecl 0x55f32ddee108 <line:194:7> col:7 implicit constexpr SimpleSpinlock 'void (const SimpleSpinlock &)' inline default trivial noexcept-unevaluated 0x55f32ddee108
| `-ParmVarDecl 0x55f32ddee218 <col:7> col:7 'const SimpleSpinlock &'
`-CXXMethodDecl 0x55f32de24a38 <col:7> col:7 implicit operator= 'SimpleSpinlock &(const SimpleSpinlock &)' inline default trivial noexcept-unevaluated 0x55f32de24a38
  `-ParmVarDecl 0x55f32de24b48 <col:7> col:7 'const SimpleSpinlock &'

Layout: <CGRecordLayout
  LLVMType:%class.SimpleSpinlock = type { i8 }
  NonVirtualBaseLLVMType:%class.SimpleSpinlock.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f32de0f490 prev 0x55f32ddf8d48 <../dummy_inc/click/timerset.hh:12:1, line:90:1> line:12:7 referenced class TimerSet definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x55f32de0f588 <col:1, col:7> col:7 implicit referenced class TimerSet
|-AccessSpecDecl 0x55f32de0f618 <col:18, col:24> col:18 public
|-CXXConstructorDecl 0x55f32de0f6a0 <line:14:5, col:14> col:5 TimerSet 'void ()'
|-CXXMethodDecl 0x55f32de0f798 <line:16:5, col:67> col:15 timer_expiry_steady 'Timestamp () const'
| `-CompoundStmt 0x55f32de24eb0 <col:43, col:67>
|   `-ReturnStmt 0x55f32de24ea0 <col:45, col:52>
|     `-CXXConstructExpr 0x55f32de24e70 <col:52> 'Timestamp' 'void (const Timestamp &) noexcept'
|       `-MemberExpr 0x55f32de24e40 <col:52> 'const Timestamp' lvalue ->_timer_expiry 0x55f32de10f80
|         `-CXXThisExpr 0x55f32de24e30 <col:52> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x55f32de0f858 <line:17:5, col:53> col:22 timer_expiry_steady_adjusted 'Timestamp () const' inline
|-CXXMethodDecl 0x55f32de0fa60 <line:19:5, col:64> col:16 next_timer_delay 'int (bool, Timestamp &) const' inline
| |-ParmVarDecl 0x55f32de0f908 <col:33, col:38> col:38 more_tasks 'bool'
| `-ParmVarDecl 0x55f32de0f980 <col:50, col:61> col:61 t 'Timestamp &'
|-CXXMethodDecl 0x55f32de0fb58 <line:22:5, col:23> col:12 next_timer 'Timer *()'
|-CXXMethodDecl 0x55f32de0fc20 <line:24:5, col:67> col:14 max_timer_stride 'unsigned int () const'
| `-CompoundStmt 0x55f32de24f30 <col:39, col:67>
|   `-ReturnStmt 0x55f32de24f20 <col:41, col:48>
|     `-ImplicitCastExpr 0x55f32de24f08 <col:48> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x55f32de24ed8 <col:48> 'const unsigned int' lvalue ->_max_timer_stride 0x55f32de11068
|         `-CXXThisExpr 0x55f32de24ec8 <col:48> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x55f32de0fce8 <line:25:5, col:59> col:14 timer_stride 'unsigned int () const'
| `-CompoundStmt 0x55f32de24fb0 <col:35, col:59>
|   `-ReturnStmt 0x55f32de24fa0 <col:37, col:44>
|     `-ImplicitCastExpr 0x55f32de24f88 <col:44> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x55f32de24f58 <col:44> 'const unsigned int' lvalue ->_timer_stride 0x55f32de110d0
|         `-CXXThisExpr 0x55f32de24f48 <col:44> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x55f32de0fe30 <line:26:5, col:52> col:10 set_max_timer_stride 'void (unsigned int)'
| `-ParmVarDecl 0x55f32de0fda0 <col:31, col:40> col:40 timer_stride 'unsigned int'
|-CXXMethodDecl 0x55f32de0ff78 <line:28:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x55f32de0fee8 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x55f32de10178 <line:30:5, col:57> col:10 run_timers 'void (RouterThread *, Master *)'
| |-ParmVarDecl 0x55f32de10030 <col:21, col:35> col:35 thread 'RouterThread *'
| `-ParmVarDecl 0x55f32de100a8 <col:43, col:51> col:51 master 'Master *'
|-CXXMethodDecl 0x55f32de10248 <line:32:5, col:23> col:17 fence 'void ()' inline
|-AccessSpecDecl 0x55f32de102e8 <line:34:3, col:10> col:3 private
|-CXXRecordDecl 0x55f32de10310 <line:36:5, line:45:5> line:36:12 referenced struct heap_element definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55f32de10428 <col:5, col:12> col:12 implicit referenced struct heap_element
| |-FieldDecl 0x55f32de104c8 <line:37:2, col:12> col:12 referenced expiry_s 'Timestamp'
| |-FieldDecl 0x55f32de10528 <line:38:2, col:9> col:9 referenced t 'Timer *'
| `-CXXConstructorDecl 0x55f32de10658 <line:42:2, line:44:2> line:42:2 heap_element 'void (Timer *)'
|   |-ParmVarDecl 0x55f32de10588 <col:15, col:22> col:22 used t_ 'Timer *'
|   |-CXXCtorInitializer Field 0x55f32de104c8 'expiry_s' 'Timestamp'
|   | `-CXXConstructExpr 0x55f32de25088 <line:43:8, col:36> 'Timestamp' 'void (const Timestamp &) noexcept'
|   |   `-CXXMemberCallExpr 0x55f32de25030 <col:17, col:35> 'const Timestamp' lvalue
|   |     `-MemberExpr 0x55f32de25000 <col:17, col:21> '<bound member function type>' ->expiry_steady 0x55f32ddf61a8
|   |       `-ImplicitCastExpr 0x55f32de25050 <col:17> 'const Timer *' <NoOp>
|   |         `-ImplicitCastExpr 0x55f32de24fe8 <col:17> 'Timer *' <LValueToRValue>
|   |           `-DeclRefExpr 0x55f32de24fc8 <col:17> 'Timer *' lvalue ParmVar 0x55f32de10588 't_' 'Timer *'
|   |-CXXCtorInitializer Field 0x55f32de10528 't' 'Timer *'
|   | `-ImplicitCastExpr 0x55f32de25120 <col:41> 'Timer *' <LValueToRValue>
|   |   `-DeclRefExpr 0x55f32de250e0 <col:41> 'Timer *' lvalue ParmVar 0x55f32de10588 't_' 'Timer *'
|   `-CompoundStmt 0x55f32de25170 <col:45, line:44:2>
|-CXXRecordDecl 0x55f32de10720 <line:46:5, line:50:5> line:46:12 struct heap_less definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55f32de10838 <col:5, col:12> col:12 implicit struct heap_less
| `-CXXMethodDecl 0x55f32de10a88 <line:47:2, line:49:2> line:47:14 operator() 'bool (const TimerSet::heap_element &, const TimerSet::heap_element &)' inline
|   |-ParmVarDecl 0x55f32de10908 <col:25, col:45> col:45 used a 'const TimerSet::heap_element &'
|   |-ParmVarDecl 0x55f32de10980 <col:48, col:68> col:68 used b 'const TimerSet::heap_element &'
|   `-CompoundStmt 0x55f32de252a0 <col:71, line:49:2>
|     `-ReturnStmt 0x55f32de25290 <line:48:6, col:28>
|       `-CXXOperatorCallExpr 0x55f32de25258 <col:13, col:28> 'bool'
|         |-ImplicitCastExpr 0x55f32de25240 <col:24> 'bool (*)(const Timestamp &, const Timestamp &)' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x55f32de25220 <col:24> 'bool (const Timestamp &, const Timestamp &)' lvalue Function 0x55f32dca9038 'operator<' 'bool (const Timestamp &, const Timestamp &)'
|         |-MemberExpr 0x55f32de251a0 <col:13, col:15> 'const Timestamp' lvalue .expiry_s 0x55f32de104c8
|         | `-DeclRefExpr 0x55f32de25180 <col:13> 'const TimerSet::heap_element' lvalue ParmVar 0x55f32de10908 'a' 'const TimerSet::heap_element &'
|         `-MemberExpr 0x55f32de251f0 <col:26, col:28> 'const Timestamp' lvalue .expiry_s 0x55f32de104c8
|           `-DeclRefExpr 0x55f32de251d0 <col:26> 'const TimerSet::heap_element' lvalue ParmVar 0x55f32de10980 'b' 'const TimerSet::heap_element &'
|-CXXRecordDecl 0x55f32de10b50 <line:51:5, line:55:5> line:51:12 struct heap_place definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55f32de10c68 <col:5, col:12> col:12 implicit struct heap_place
| `-CXXMethodDecl 0x55f32de10e88 <line:52:2, line:54:2> line:52:14 operator() 'void (TimerSet::heap_element *, TimerSet::heap_element *)' inline
|   |-ParmVarDecl 0x55f32de10d08 <col:25, col:39> col:39 used begin 'TimerSet::heap_element *'
|   |-ParmVarDecl 0x55f32de10d80 <col:46, col:60> col:60 used t 'TimerSet::heap_element *'
|   `-CompoundStmt 0x55f32de254a8 <col:63, line:54:2>
|     `-BinaryOperator 0x55f32de25488 <line:53:6, col:39> 'int' lvalue '='
|       |-MemberExpr 0x55f32de25338 <col:6, col:12> 'int' lvalue ->_schedpos1 0x55f32ddf81e8
|       | `-ImplicitCastExpr 0x55f32de25320 <col:6, col:9> 'Timer *' <LValueToRValue>
|       |   `-MemberExpr 0x55f32de252f0 <col:6, col:9> 'Timer *' lvalue ->t 0x55f32de10528
|       |     `-ImplicitCastExpr 0x55f32de252d8 <col:6> 'TimerSet::heap_element *' <LValueToRValue>
|       |       `-DeclRefExpr 0x55f32de252b8 <col:6> 'TimerSet::heap_element *' lvalue ParmVar 0x55f32de10d80 't' 'TimerSet::heap_element *'
|       `-ImplicitCastExpr 0x55f32de25470 <col:25, col:39> 'int' <IntegralCast>
|         `-BinaryOperator 0x55f32de25450 <col:25, col:39> 'long' '+'
|           |-ParenExpr 0x55f32de253f8 <col:25, col:35> 'long'
|           | `-BinaryOperator 0x55f32de253d8 <col:26, col:30> 'long' '-'
|           |   |-ImplicitCastExpr 0x55f32de253a8 <col:26> 'TimerSet::heap_element *' <LValueToRValue>
|           |   | `-DeclRefExpr 0x55f32de25368 <col:26> 'TimerSet::heap_element *' lvalue ParmVar 0x55f32de10d80 't' 'TimerSet::heap_element *'
|           |   `-ImplicitCastExpr 0x55f32de253c0 <col:30> 'TimerSet::heap_element *' <LValueToRValue>
|           |     `-DeclRefExpr 0x55f32de25388 <col:30> 'TimerSet::heap_element *' lvalue ParmVar 0x55f32de10d08 'begin' 'TimerSet::heap_element *'
|           `-ImplicitCastExpr 0x55f32de25438 <col:39> 'long' <IntegralCast>
|             `-IntegerLiteral 0x55f32de25418 <col:39> 'int' 1
|-FieldDecl 0x55f32de10f80 <line:58:5, col:15> col:15 referenced _timer_expiry 'Timestamp'
| `-AlignedAttr 0x55f32de10ff0 <col:44, col:53> aligned
|   `-ConstantExpr 0x55f32de10fd0 <col:52> 'int' Int: 8
|     `-IntegerLiteral 0x55f32de10f50 <col:52> 'int' 8
|-FieldDecl 0x55f32de11068 <line:60:5, col:14> col:14 referenced _max_timer_stride 'unsigned int'
|-FieldDecl 0x55f32de110d0 <line:61:5, col:14> col:14 referenced _timer_stride 'unsigned int'
|-FieldDecl 0x55f32de11138 <line:62:5, col:14> col:14 _timer_count 'unsigned int'
|-FieldDecl 0x55f32de1bf60 <line:63:5, col:26> col:26 referenced _timer_heap 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>'
|-FieldDecl 0x55f32de23d70 <line:64:5, col:21> col:21 _timer_runchunk 'Vector<Timer *>':'Vector<Timer *>'
|-FieldDecl 0x55f32de23dd0 <line:65:5, col:20> col:20 _timer_lock 'SimpleSpinlock'
|-FieldDecl 0x55f32de23e30 <line:71:5, col:15> col:15 _timer_check 'Timestamp'
|-FieldDecl 0x55f32de23e90 <line:72:5, col:14> col:14 _timer_check_reports 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f32de23f80 <line:74:5, col:38> col:17 run_one_timer 'void (Timer *)' inline
| `-ParmVarDecl 0x55f32de23ef0 <col:31, col:37> col:38 'Timer *'
|-CXXMethodDecl 0x55f32de24048 <line:76:5, line:81:5> line:76:10 set_timer_expiry 'void ()'
| `-CompoundStmt 0x55f32de25900 <col:29, line:81:5>
|   `-IfStmt 0x55f32de258d8 <line:77:2, line:80:32> has_else
|     |-ImplicitCastExpr 0x55f32de25590 <line:77:6, col:23> 'bool' <IntegralToBoolean>
|     | `-CXXMemberCallExpr 0x55f32de25530 <col:6, col:23> 'Vector::size_type':'int'
|     |   `-MemberExpr 0x55f32de25500 <col:6, col:18> '<bound member function type>' .size 0x55f32de19058
|     |     `-ImplicitCastExpr 0x55f32de25578 <col:6> 'const Vector<TimerSet::heap_element>' lvalue <NoOp>
|     |       `-MemberExpr 0x55f32de254d0 <col:6> 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>' lvalue ->_timer_heap 0x55f32de1bf60
|     |         `-CXXThisExpr 0x55f32de254c0 <col:6> 'TimerSet *' implicit this
|     |-CXXOperatorCallExpr 0x55f32de25780 <line:78:6, col:50> 'Timestamp' lvalue
|     | |-ImplicitCastExpr 0x55f32de25768 <col:20> 'Timestamp &(*)(const Timestamp &) noexcept' <FunctionToPointerDecay>
|     | | `-DeclRefExpr 0x55f32de25748 <col:20> 'Timestamp &(const Timestamp &) noexcept' lvalue CXXMethod 0x55f32d992878 'operator=' 'Timestamp &(const Timestamp &) noexcept'
|     | |-MemberExpr 0x55f32de255b8 <col:6> 'Timestamp' lvalue ->_timer_expiry 0x55f32de10f80
|     | | `-CXXThisExpr 0x55f32de255a8 <col:6> 'TimerSet *' implicit this
|     | `-ImplicitCastExpr 0x55f32de25730 <col:22, col:50> 'const Timestamp' lvalue <NoOp>
|     |   `-MemberExpr 0x55f32de25700 <col:22, col:50> 'Timestamp' lvalue .expiry_s 0x55f32de104c8
|     |     `-CXXMemberCallExpr 0x55f32de256d8 <col:22, col:48> 'TimerSet::heap_element':'TimerSet::heap_element' lvalue
|     |       |-MemberExpr 0x55f32de256a8 <col:22, col:34> '<bound member function type>' .unchecked_at 0x55f32de1a0f8
|     |       | `-MemberExpr 0x55f32de255f8 <col:22> 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>' lvalue ->_timer_heap 0x55f32de1bf60
|     |       |   `-CXXThisExpr 0x55f32de255e8 <col:22> 'TimerSet *' implicit this
|     |       `-IntegerLiteral 0x55f32de25688 <col:47> 'int' 0
|     `-ExprWithCleanups 0x55f32de258c0 <line:80:6, col:32> 'Timestamp' lvalue
|       `-CXXOperatorCallExpr 0x55f32de25888 <col:6, col:32> 'Timestamp' lvalue
|         |-ImplicitCastExpr 0x55f32de25870 <col:20> 'Timestamp &(*)(Timestamp &&) noexcept' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x55f32de25850 <col:20> 'Timestamp &(Timestamp &&) noexcept' lvalue CXXMethod 0x55f32d992d28 'operator=' 'Timestamp &(Timestamp &&) noexcept'
|         |-MemberExpr 0x55f32de257c8 <col:6> 'Timestamp' lvalue ->_timer_expiry 0x55f32de10f80
|         | `-CXXThisExpr 0x55f32de257b8 <col:6> 'TimerSet *' implicit this
|         `-MaterializeTemporaryExpr 0x55f32de25838 <col:22, col:32> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55f32de25808 <col:22, col:32> 'Timestamp' 'void ()'
|-CXXMethodDecl 0x55f32de24188 <line:82:5, col:37> col:10 check_timer_expiry 'void (Timer *)'
| `-ParmVarDecl 0x55f32de240f8 <col:29, col:36> col:36 t 'Timer *'
|-CXXMethodDecl 0x55f32de24250 <line:84:5, col:29> col:17 used lock_timers 'void ()' inline
|-CXXMethodDecl 0x55f32de24310 <line:85:5, col:37> col:17 attempt_lock_timers 'bool ()' inline
|-CXXMethodDecl 0x55f32de243d0 <line:86:5, col:31> col:17 used unlock_timers 'void ()' inline
|-FriendDecl 0x55f32de244c0 <line:88:5, col:18> col:12 'class Timer':'Timer'
|-CXXConstructorDecl 0x55f32de24528 <line:12:7> col:7 implicit TimerSet 'void (const TimerSet &)' inline default noexcept-unevaluated 0x55f32de24528
| `-ParmVarDecl 0x55f32de24638 <col:7> col:7 'const TimerSet &'
|-CXXConstructorDecl 0x55f32de246d8 <col:7> col:7 implicit TimerSet 'void (TimerSet &&)' inline default noexcept-unevaluated 0x55f32de246d8
| `-ParmVarDecl 0x55f32de247e8 <col:7> col:7 'TimerSet &&'
|-CXXMethodDecl 0x55f32de24888 <col:7> col:7 implicit operator= 'TimerSet &(const TimerSet &)' inline default noexcept-unevaluated 0x55f32de24888
| `-ParmVarDecl 0x55f32de24998 <col:7> col:7 'const TimerSet &'
|-CXXMethodDecl 0x55f32de24bb8 <col:7> col:7 implicit operator= 'TimerSet &(TimerSet &&)' inline default noexcept-unevaluated 0x55f32de24bb8
| `-ParmVarDecl 0x55f32de24cc8 <col:7> col:7 'TimerSet &&'
`-CXXDestructorDecl 0x55f32de24d50 <col:7> col:7 implicit ~TimerSet 'void ()' inline default noexcept-unevaluated 0x55f32de24d50

Layout: <CGRecordLayout
  LLVMType:%class.TimerSet = type <{ %class.Timestamp, i32, i32, i32, [4 x i8], %class.Vector.14, %class.Vector.15, %class.SimpleSpinlock, [7 x i8], %class.Timestamp, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.TimerSet.base = type <{ %class.Timestamp, i32, i32, i32, [4 x i8], %class.Vector.14, %class.Vector.15, %class.SimpleSpinlock, [7 x i8], %class.Timestamp, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55f32de501b8 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'pollfd'
|-CXXRecordDecl 0x55f32de503c8 prev 0x55f32de501b8 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55f32de514a0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<pollfd>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x55f32de51450 'typename array_memory<pollfd>::type' sugar
|   `-TypedefType 0x55f32de51430 'conditional<true, sized_array_memory<8>, typed_array_memory<pollfd> >::type' sugar
|     |-Typedef 0x55f32de512e0 'type'
|     `-SubstTemplateTypeParmType 0x55f32ddd8ca0 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x55f32da4f230 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f32da4f1d8 'T'
|       `-RecordType 0x55f32ddd87f0 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x55f32ddd8708 'sized_array_memory'
|-FieldDecl 0x55f32de515a0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<pollfd>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x55f32de515f0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55f32de51628 <line:118:5, col:15> col:15 value_type 'pollfd':'pollfd'
| `-SubstTemplateTypeParmType 0x55f32de50460 'pollfd' sugar
|   |-TemplateTypeParmType 0x55f32da87140 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55f32da870e8 'T'
|   `-RecordType 0x55f32de4e270 'pollfd'
|     `-CXXRecord 0x55f32de4e1e0 'pollfd'
|-TypedefDecl 0x55f32de516e8 <line:119:5, col:16> col:16 reference 'pollfd &'
| `-LValueReferenceType 0x55f32de516b0 'pollfd &'
|   `-SubstTemplateTypeParmType 0x55f32de50460 'pollfd' sugar
|     |-TemplateTypeParmType 0x55f32da87140 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55f32da870e8 'T'
|     `-RecordType 0x55f32de4e270 'pollfd'
|       `-CXXRecord 0x55f32de4e1e0 'pollfd'
|-TypedefDecl 0x55f32de517a8 <line:120:5, col:22> col:22 const_reference 'const pollfd &'
| `-LValueReferenceType 0x55f32de51770 'const pollfd &'
|   `-QualType 0x55f32de50461 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x55f32de50460 'pollfd' sugar
|       |-TemplateTypeParmType 0x55f32da87140 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f32da870e8 'T'
|       `-RecordType 0x55f32de4e270 'pollfd'
|         `-CXXRecord 0x55f32de4e1e0 'pollfd'
|-TypedefDecl 0x55f32de51838 <line:121:5, col:16> col:16 pointer 'pollfd *'
| `-PointerType 0x55f32de51800 'pollfd *'
|   `-SubstTemplateTypeParmType 0x55f32de50460 'pollfd' sugar
|     |-TemplateTypeParmType 0x55f32da87140 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55f32da870e8 'T'
|     `-RecordType 0x55f32de4e270 'pollfd'
|       `-CXXRecord 0x55f32de4e1e0 'pollfd'
|-TypedefDecl 0x55f32de518f8 <line:122:5, col:22> col:22 const_pointer 'const pollfd *'
| `-PointerType 0x55f32de518c0 'const pollfd *'
|   `-QualType 0x55f32de50461 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x55f32de50460 'pollfd' sugar
|       |-TemplateTypeParmType 0x55f32da87140 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f32da870e8 'T'
|       `-RecordType 0x55f32de4e270 'pollfd'
|         `-CXXRecord 0x55f32de4e1e0 'pollfd'
|-TypedefDecl 0x55f32de52500 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<pollfd>::type':'pollfd'
| `-ElaboratedType 0x55f32de524b0 'typename fast_argument<pollfd>::type' sugar
|   `-TypedefType 0x55f32de52490 'fast_argument<pollfd, false>::type' sugar
|     |-Typedef 0x55f32de52420 'type'
|     `-SubstTemplateTypeParmType 0x55f32de521e0 'pollfd' sugar
|       |-TemplateTypeParmType 0x55f32da5a250 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f32da5a200 'T'
|       `-RecordType 0x55f32de4e270 'pollfd'
|         `-CXXRecord 0x55f32de4e1e0 'pollfd'
|-TypedefDecl 0x55f32de52568 <line:126:5, col:22> col:22 const_access_type 'const pollfd &'
| `-LValueReferenceType 0x55f32de51770 'const pollfd &'
|   `-QualType 0x55f32de50461 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x55f32de50460 'pollfd' sugar
|       |-TemplateTypeParmType 0x55f32da87140 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f32da870e8 'T'
|       `-RecordType 0x55f32de4e270 'pollfd'
|         `-CXXRecord 0x55f32de4e1e0 'pollfd'
|-TypedefDecl 0x55f32de525c0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55f32d785580 'int'
|-TypedefDecl 0x55f32de52628 <line:130:5, col:16> col:16 iterator 'pollfd *'
| `-PointerType 0x55f32de51800 'pollfd *'
|   `-SubstTemplateTypeParmType 0x55f32de50460 'pollfd' sugar
|     |-TemplateTypeParmType 0x55f32da87140 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55f32da870e8 'T'
|     `-RecordType 0x55f32de4e270 'pollfd'
|       `-CXXRecord 0x55f32de4e1e0 'pollfd'
|-TypedefDecl 0x55f32de52690 <line:131:5, col:22> col:22 const_iterator 'const pollfd *'
| `-PointerType 0x55f32de518c0 'const pollfd *'
|   `-QualType 0x55f32de50461 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x55f32de50460 'pollfd' sugar
|       |-TemplateTypeParmType 0x55f32da87140 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f32da870e8 'T'
|       `-RecordType 0x55f32de4e270 'pollfd'
|         `-CXXRecord 0x55f32de4e1e0 'pollfd'
|-EnumDecl 0x55f32de526e8 <line:134:5> col:5
| `-EnumConstantDecl 0x55f32de527e0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<pollfd>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55f32de527c0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55f32da887c8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55f32da887a0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55f32da88780 <col:40> 'int' 1
|-CXXConstructorDecl 0x55f32de52868 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55f32de52af8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x55f32de52920 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55f32de529c0 <col:41, col:61> col:61 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXConstructorDecl 0x55f32de52db8 <line:139:5, col:37> col:12 Vector 'void (const Vector<pollfd> &)' inline
| `-ParmVarDecl 0x55f32de52ca0 <col:19, col:36> col:36 x 'const Vector<pollfd> &'
|-CXXConstructorDecl 0x55f32de53078 <line:141:5, col:32> col:12 Vector 'void (Vector<pollfd> &&)' inline
| `-ParmVarDecl 0x55f32de52f60 <col:19, col:31> col:31 x 'Vector<pollfd> &&'
|-CXXMethodDecl 0x55f32de533c0 <line:144:5, col:51> col:23 operator= 'Vector<pollfd> &(const Vector<pollfd> &)' inline
| `-ParmVarDecl 0x55f32de532a0 <col:33, col:50> col:50 x 'const Vector<pollfd> &'
|-CXXMethodDecl 0x55f32de536d0 <line:146:5, col:46> col:23 operator= 'Vector<pollfd> &(Vector<pollfd> &&)' inline
| `-ParmVarDecl 0x55f32de535b0 <col:33, col:45> col:45 x 'Vector<pollfd> &&'
|-CXXMethodDecl 0x55f32de539c0 <line:148:5, col:70> col:23 assign 'Vector<pollfd> &(Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x55f32de53808 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55f32de53880 <col:43, col:69> col:63 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x55f32de53b18 <line:150:5, col:55> col:49 begin 'Vector<pollfd>::iterator ()'
| |-NoInlineAttr 0x55f32de53bf8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f32de53c50 <col:30> Inherited
|-CXXMethodDecl 0x55f32de53c98 <line:151:5, col:53> col:49 end 'Vector<pollfd>::iterator ()'
| |-NoInlineAttr 0x55f32de53d48 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f32de53da0 <col:30> Inherited
|-CXXMethodDecl 0x55f32de53e68 <line:152:5, col:63> col:55 begin 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x55f32de53f18 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f32de53f70 <col:30> Inherited
|-CXXMethodDecl 0x55f32de53fb8 <line:153:5, col:61> col:55 end 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x55f32de54068 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f32de540c0 <col:30> Inherited
|-CXXMethodDecl 0x55f32de54108 <line:154:5, col:64> col:55 cbegin 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x55f32de541b8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f32de54210 <col:30> Inherited
|-CXXMethodDecl 0x55f32de54258 <line:155:5, col:62> col:55 cend 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x55f32de54308 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f32de54360 <col:30> Inherited
|-CXXMethodDecl 0x55f32de54388 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55f32de54438 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55f32de544e8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55f32de546a8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x55f32de54598 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55f32de54610 <col:37, col:63> col:57 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x55f32de547f8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55f32de54768 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f32de549a8 <line:163:5, col:65> col:43 operator[] 'pollfd &(Vector::size_type)'
| |-ParmVarDecl 0x55f32de548b0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55f32de54a60 <col:20>
| `-OptimizeNoneAttr 0x55f32de54ab8 <col:30>
|-CXXMethodDecl 0x55f32de54bd8 <line:164:5, col:73> col:49 operator[] 'const pollfd &(Vector::size_type) const'
| |-ParmVarDecl 0x55f32de54ae0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55f32de54c90 <col:20>
| `-OptimizeNoneAttr 0x55f32de54ce8 <col:30>
|-CXXMethodDecl 0x55f32de54da0 <line:165:5, col:29> col:15 at 'pollfd &(Vector::size_type)' inline
| `-ParmVarDecl 0x55f32de54d10 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f32de54ee8 <line:166:5, col:37> col:21 at 'const pollfd &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55f32de54e58 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f32de55018 <line:167:5, col:21> col:15 front 'pollfd &()' inline
|-CXXMethodDecl 0x55f32de55148 <line:168:5, col:29> col:21 front 'const pollfd &() const' inline
|-CXXMethodDecl 0x55f32de55218 <line:169:5, col:20> col:15 back 'pollfd &()' inline
|-CXXMethodDecl 0x55f32de552e8 <line:170:5, col:28> col:21 back 'const pollfd &() const' inline
|-CXXMethodDecl 0x55f32de55428 <line:172:5, col:39> col:15 unchecked_at 'pollfd &(Vector::size_type)' inline
| `-ParmVarDecl 0x55f32de55398 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f32de55570 <line:173:5, col:47> col:21 unchecked_at 'const pollfd &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55f32de554e0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f32de556b8 <line:174:5, col:59> col:15 at_u 'pollfd &(Vector::size_type)' inline
| |-ParmVarDecl 0x55f32de55628 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55f32de55770 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55f32de55870 <line:175:5, col:71> col:21 at_u 'const pollfd &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55f32de557e0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55f32de55928 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55f32de559e8 <line:177:5, col:20> col:15 data 'pollfd *()' inline
|-CXXMethodDecl 0x55f32de55ae8 <line:178:5, col:28> col:21 data 'const pollfd *() const' inline
|-CXXMethodDecl 0x55f32de55c98 <line:180:5, col:48> col:17 push_back 'void (Vector<pollfd>::value_argument_type)' inline
| `-ParmVarDecl 0x55f32de55ba8 <col:27, col:47> col:47 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-FunctionTemplateDecl 0x55f32de56458 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55f32de55d50 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<pollfd>':'fast_argument<pollfd, false>'
| `-CXXMethodDecl 0x55f32de563b8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (pollfd &&)' inline
|   `-ParmVarDecl 0x55f32de562b8 <col:58, col:62> col:62 v 'pollfd &&'
|-CXXMethodDecl 0x55f32de56538 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55f32de56688 <line:186:5, col:49> col:17 push_front 'void (Vector<pollfd>::value_argument_type)' inline
| `-ParmVarDecl 0x55f32de565f8 <col:28, col:48> col:48 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x55f32de56740 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55f32de56988 <line:189:5, col:62> col:21 insert 'Vector<pollfd>::iterator (Vector<pollfd>::iterator, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x55f32de56800 <col:28, col:37> col:37 it 'Vector<pollfd>::iterator':'pollfd *'
| `-ParmVarDecl 0x55f32de56878 <col:41, col:61> col:61 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x55f32de56b48 <line:190:5, col:38> col:21 erase 'Vector<pollfd>::iterator (Vector<pollfd>::iterator)' inline
| `-ParmVarDecl 0x55f32de56a58 <col:27, col:36> col:36 it 'Vector<pollfd>::iterator':'pollfd *'
|-CXXMethodDecl 0x55f32de56d98 <line:191:5, col:49> col:21 erase 'Vector<pollfd>::iterator (Vector<pollfd>::iterator, Vector<pollfd>::iterator)' inline
| |-ParmVarDecl 0x55f32de56c10 <col:27, col:36> col:36 a 'Vector<pollfd>::iterator':'pollfd *'
| `-ParmVarDecl 0x55f32de56c88 <col:39, col:48> col:48 b 'Vector<pollfd>::iterator':'pollfd *'
|-CXXMethodDecl 0x55f32de56e58 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55f32de570b8 <line:195:5, col:34> col:17 swap 'void (Vector<pollfd> &)' inline
| `-ParmVarDecl 0x55f32de56fc0 <col:22, col:33> col:33 x 'Vector<pollfd> &'
`-CXXDestructorDecl 0x55f32de57188 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55f32de57188

Layout: <CGRecordLayout
  LLVMType:%class.Vector.16 = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector.16 = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55f32de58670 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<24>'
|-CXXRecordDecl 0x55f32de58848 prev 0x55f32de58670 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55f32de588d8 <col:46, col:52> col:46 public
|-TypedefDecl 0x55f32de58900 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55f32d785580 'int'
|-TypedefDecl 0x55f32de5a500 <line:13:5, col:31> col:31 type 'typename sized_array_memory<24>::type':'char_array<24>'
| `-ElaboratedType 0x55f32de5a4b0 'typename sized_array_memory<24>::type' sugar
|   `-TypedefType 0x55f32de58db0 'sized_array_memory<24>::type' sugar
|     |-Typedef 0x55f32de58cb0 'type'
|     `-TemplateSpecializationType 0x55f32de58c40 'char_array<24UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x55f32de58b20 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 24
|       |   `-SubstNonTypeTemplateParmExpr 0x55f32de58b00 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x55f32de58ae0 <col:24> 'unsigned long' 24
|       `-RecordType 0x55f32de58c20 'char_array<24>'
|         `-ClassTemplateSpecialization 0x55f32de58b40 'char_array'
|-TypedefDecl 0x55f32de5a5b8 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<24> >::type *'
| `-PointerType 0x55f32de5a580 'vector_memory<sized_array_memory<24> >::type *'
|   `-TypedefType 0x55f32de5a560 'vector_memory<sized_array_memory<24> >::type' sugar
|     |-Typedef 0x55f32de5a500 'type'
|     `-ElaboratedType 0x55f32de5a4b0 'typename sized_array_memory<24>::type' sugar
|       `-TypedefType 0x55f32de58db0 'sized_array_memory<24>::type' sugar
|         |-Typedef 0x55f32de58cb0 'type'
|         `-TemplateSpecializationType 0x55f32de58c40 'char_array<24UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x55f32de58b20 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 24
|           |   `-SubstNonTypeTemplateParmExpr 0x55f32de58b00 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x55f32de58ae0 <col:24> 'unsigned long' 24
|           `-RecordType 0x55f32de58c20 'char_array<24>'
|             `-ClassTemplateSpecialization 0x55f32de58b40 'char_array'
|-CXXMethodDecl 0x55f32de5a738 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<24> >::type *) const' inline
| `-ParmVarDecl 0x55f32de5a648 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXConstructorDecl 0x55f32de5a828 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55f32de5a908 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x55f32de5a908
|-CXXMethodDecl 0x55f32de5abd8 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<24> > &)'
| `-ParmVarDecl 0x55f32de5aae0 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<24> > &'
|-CXXMethodDecl 0x55f32de5ae18 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x55f32de5ac90 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55f32de5ad08 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55f32de5afe8 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x55f32de5aed8 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55f32de5af50 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55f32de5b148 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<24> >::iterator ()'
|-CXXMethodDecl 0x55f32de5b218 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<24> >::iterator ()'
|-CXXMethodDecl 0x55f32de5b468 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<24> >::iterator (vector_memory<sized_array_memory<24> >::iterator, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x55f32de5b2d8 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
| `-ParmVarDecl 0x55f32de5b350 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55f32de5b6c8 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<24> >::iterator (vector_memory<sized_array_memory<24> >::iterator, vector_memory<sized_array_memory<24> >::iterator)'
| |-ParmVarDecl 0x55f32de5b538 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
| `-ParmVarDecl 0x55f32de5b5b0 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55f32de5b888 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<24> >::type *)' inline
| `-ParmVarDecl 0x55f32de5b798 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55f32de5ba48 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<24> >::type *)' inline
| `-ParmVarDecl 0x55f32de5b950 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55f32de5bb00 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55f32de5bbb0 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55f32de5bde8 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x55f32de5bc60 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55f32de5bcd8 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55f32de5c088 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<24> > &)'
| `-ParmVarDecl 0x55f32de5bf90 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<24> > &'
|-FieldDecl 0x55f32de5c150 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<24> >::type *'
|-FieldDecl 0x55f32de5c1a0 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55f32de5c1f0 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.18 = type { %struct.char_array.19*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.18 = type { %struct.char_array.19*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55f32de572d0 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'SelectSet::SelectorInfo'
|-CXXRecordDecl 0x55f32de574d8 prev 0x55f32de572d0 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55f32de585e0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<SelectorInfo>::type':'sized_array_memory<24>'
| `-ElaboratedType 0x55f32de58590 'typename array_memory<SelectorInfo>::type' sugar
|   `-TypedefType 0x55f32de58570 'conditional<true, sized_array_memory<24>, typed_array_memory<SelectSet::SelectorInfo> >::type' sugar
|     |-Typedef 0x55f32de58420 'type'
|     `-SubstTemplateTypeParmType 0x55f32de58240 'sized_array_memory<24>' sugar
|       |-TemplateTypeParmType 0x55f32da4f230 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f32da4f1d8 'T'
|       `-RecordType 0x55f32db86520 'sized_array_memory<24>'
|         `-ClassTemplateSpecialization 0x55f32db86438 'sized_array_memory'
|-FieldDecl 0x55f32de5c240 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<SelectSet::SelectorInfo>::array_memory_type>':'vector_memory<sized_array_memory<24> >' mutable
|-AccessSpecDecl 0x55f32de5c290 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55f32de5c2c8 <line:118:5, col:15> col:15 value_type 'SelectSet::SelectorInfo':'SelectSet::SelectorInfo'
| `-SubstTemplateTypeParmType 0x55f32de57570 'SelectSet::SelectorInfo' sugar
|   |-TemplateTypeParmType 0x55f32da87140 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55f32da870e8 'T'
|   `-RecordType 0x55f32de4fd20 'SelectSet::SelectorInfo'
|     `-CXXRecord 0x55f32de4fc90 'SelectorInfo'
|-TypedefDecl 0x55f32de5c388 <line:119:5, col:16> col:16 reference 'SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x55f32de5c350 'SelectSet::SelectorInfo &'
|   `-SubstTemplateTypeParmType 0x55f32de57570 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x55f32da87140 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55f32da870e8 'T'
|     `-RecordType 0x55f32de4fd20 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x55f32de4fc90 'SelectorInfo'
|-TypedefDecl 0x55f32de5c448 <line:120:5, col:22> col:22 const_reference 'const SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x55f32de5c410 'const SelectSet::SelectorInfo &'
|   `-QualType 0x55f32de57571 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x55f32de57570 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x55f32da87140 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f32da870e8 'T'
|       `-RecordType 0x55f32de4fd20 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x55f32de4fc90 'SelectorInfo'
|-TypedefDecl 0x55f32de5c4d8 <line:121:5, col:16> col:16 pointer 'SelectSet::SelectorInfo *'
| `-PointerType 0x55f32de5c4a0 'SelectSet::SelectorInfo *'
|   `-SubstTemplateTypeParmType 0x55f32de57570 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x55f32da87140 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55f32da870e8 'T'
|     `-RecordType 0x55f32de4fd20 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x55f32de4fc90 'SelectorInfo'
|-TypedefDecl 0x55f32de5c598 <line:122:5, col:22> col:22 const_pointer 'const SelectSet::SelectorInfo *'
| `-PointerType 0x55f32de5c560 'const SelectSet::SelectorInfo *'
|   `-QualType 0x55f32de57571 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x55f32de57570 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x55f32da87140 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f32da870e8 'T'
|       `-RecordType 0x55f32de4fd20 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x55f32de4fc90 'SelectorInfo'
|-TypedefDecl 0x55f32de5d1f0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<SelectorInfo>::type':'const SelectSet::SelectorInfo &'
| `-ElaboratedType 0x55f32de5d1a0 'typename fast_argument<SelectorInfo>::type' sugar
|   `-TypedefType 0x55f32de5d180 'fast_argument<SelectSet::SelectorInfo, true>::type' sugar
|     |-Typedef 0x55f32de5d0b8 'type'
|     `-LValueReferenceType 0x55f32de5d080 'const SelectSet::SelectorInfo &'
|       `-QualType 0x55f32de5ce21 'const SelectSet::SelectorInfo' const
|         `-SubstTemplateTypeParmType 0x55f32de5ce20 'SelectSet::SelectorInfo' sugar
|           |-TemplateTypeParmType 0x55f32da59b20 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55f32da59ac8 'T'
|           `-RecordType 0x55f32de4fd20 'SelectSet::SelectorInfo'
|             `-CXXRecord 0x55f32de4fc90 'SelectorInfo'
|-TypedefDecl 0x55f32de5d258 <line:126:5, col:22> col:22 const_access_type 'const SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x55f32de5c410 'const SelectSet::SelectorInfo &'
|   `-QualType 0x55f32de57571 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x55f32de57570 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x55f32da87140 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f32da870e8 'T'
|       `-RecordType 0x55f32de4fd20 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x55f32de4fc90 'SelectorInfo'
|-TypedefDecl 0x55f32de5d2b0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55f32d785580 'int'
|-TypedefDecl 0x55f32de5d318 <line:130:5, col:16> col:16 iterator 'SelectSet::SelectorInfo *'
| `-PointerType 0x55f32de5c4a0 'SelectSet::SelectorInfo *'
|   `-SubstTemplateTypeParmType 0x55f32de57570 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x55f32da87140 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55f32da870e8 'T'
|     `-RecordType 0x55f32de4fd20 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x55f32de4fc90 'SelectorInfo'
|-TypedefDecl 0x55f32de5d380 <line:131:5, col:22> col:22 const_iterator 'const SelectSet::SelectorInfo *'
| `-PointerType 0x55f32de5c560 'const SelectSet::SelectorInfo *'
|   `-QualType 0x55f32de57571 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x55f32de57570 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x55f32da87140 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f32da870e8 'T'
|       `-RecordType 0x55f32de4fd20 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x55f32de4fc90 'SelectorInfo'
|-EnumDecl 0x55f32de5d3d8 <line:134:5> col:5
| `-EnumConstantDecl 0x55f32de5d4d0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<SelectSet::SelectorInfo>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55f32de5d4b0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55f32da887c8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55f32da887a0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55f32da88780 <col:40> 'int' 1
|-CXXConstructorDecl 0x55f32de5d558 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55f32de5d7e8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x55f32de5d610 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55f32de5d6b0 <col:41, col:61> col:61 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXConstructorDecl 0x55f32de5daa8 <line:139:5, col:37> col:12 Vector 'void (const Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x55f32de5d990 <col:19, col:36> col:36 x 'const Vector<SelectSet::SelectorInfo> &'
|-CXXConstructorDecl 0x55f32de5dd68 <line:141:5, col:32> col:12 Vector 'void (Vector<SelectSet::SelectorInfo> &&)' inline
| `-ParmVarDecl 0x55f32de5dc50 <col:19, col:31> col:31 x 'Vector<SelectSet::SelectorInfo> &&'
|-CXXMethodDecl 0x55f32de5e0b0 <line:144:5, col:51> col:23 operator= 'Vector<SelectSet::SelectorInfo> &(const Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x55f32de5df90 <col:33, col:50> col:50 x 'const Vector<SelectSet::SelectorInfo> &'
|-CXXMethodDecl 0x55f32de5e3c0 <line:146:5, col:46> col:23 operator= 'Vector<SelectSet::SelectorInfo> &(Vector<SelectSet::SelectorInfo> &&)' inline
| `-ParmVarDecl 0x55f32de5e2a0 <col:33, col:45> col:45 x 'Vector<SelectSet::SelectorInfo> &&'
|-CXXMethodDecl 0x55f32de5e6b0 <line:148:5, col:70> col:23 assign 'Vector<SelectSet::SelectorInfo> &(Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x55f32de5e4f8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55f32de5e570 <col:43, col:69> col:63 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x55f32de5e808 <line:150:5, col:55> col:49 begin 'Vector<SelectSet::SelectorInfo>::iterator ()'
| |-NoInlineAttr 0x55f32de5e8e8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f32de5e940 <col:30> Inherited
|-CXXMethodDecl 0x55f32de5e988 <line:151:5, col:53> col:49 end 'Vector<SelectSet::SelectorInfo>::iterator ()'
| |-NoInlineAttr 0x55f32de5ea38 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f32de5ea90 <col:30> Inherited
|-CXXMethodDecl 0x55f32de5eb58 <line:152:5, col:63> col:55 begin 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x55f32de5ec08 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f32de5ec60 <col:30> Inherited
|-CXXMethodDecl 0x55f32de5eca8 <line:153:5, col:61> col:55 end 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x55f32de5ed58 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f32de5edb0 <col:30> Inherited
|-CXXMethodDecl 0x55f32de5edf8 <line:154:5, col:64> col:55 cbegin 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x55f32de5eea8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f32de5ef00 <col:30> Inherited
|-CXXMethodDecl 0x55f32de5ef48 <line:155:5, col:62> col:55 cend 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x55f32de5eff8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f32de5f050 <col:30> Inherited
|-CXXMethodDecl 0x55f32de5f078 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55f32de5f128 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55f32de5f1d8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55f32de5f398 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x55f32de5f288 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55f32de5f300 <col:37, col:63> col:57 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x55f32de5f4e8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55f32de5f458 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f32de5f698 <line:163:5, col:65> col:43 operator[] 'SelectSet::SelectorInfo &(Vector::size_type)'
| |-ParmVarDecl 0x55f32de5f5a0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55f32de5f750 <col:20>
| `-OptimizeNoneAttr 0x55f32de5f7a8 <col:30>
|-CXXMethodDecl 0x55f32de5f8c8 <line:164:5, col:73> col:49 operator[] 'const SelectSet::SelectorInfo &(Vector::size_type) const'
| |-ParmVarDecl 0x55f32de5f7d0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55f32de5f980 <col:20>
| `-OptimizeNoneAttr 0x55f32de5f9d8 <col:30>
|-CXXMethodDecl 0x55f32de5fa90 <line:165:5, col:29> col:15 at 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| `-ParmVarDecl 0x55f32de5fa00 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f32de5fbd8 <line:166:5, col:37> col:21 at 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55f32de5fb48 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f32de5fd08 <line:167:5, col:21> col:15 front 'SelectSet::SelectorInfo &()' inline
|-CXXMethodDecl 0x55f32de5fe38 <line:168:5, col:29> col:21 front 'const SelectSet::SelectorInfo &() const' inline
|-CXXMethodDecl 0x55f32de5ff08 <line:169:5, col:20> col:15 back 'SelectSet::SelectorInfo &()' inline
|-CXXMethodDecl 0x55f32de5ffd8 <line:170:5, col:28> col:21 back 'const SelectSet::SelectorInfo &() const' inline
|-CXXMethodDecl 0x55f32de60118 <line:172:5, col:39> col:15 unchecked_at 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| `-ParmVarDecl 0x55f32de60088 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f32de60260 <line:173:5, col:47> col:21 unchecked_at 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55f32de601d0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f32de603a8 <line:174:5, col:59> col:15 at_u 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| |-ParmVarDecl 0x55f32de60318 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55f32de60460 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55f32de60560 <line:175:5, col:71> col:21 at_u 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55f32de604d0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55f32de60618 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55f32de606d8 <line:177:5, col:20> col:15 data 'SelectSet::SelectorInfo *()' inline
|-CXXMethodDecl 0x55f32de607d8 <line:178:5, col:28> col:21 data 'const SelectSet::SelectorInfo *() const' inline
|-CXXMethodDecl 0x55f32de60988 <line:180:5, col:48> col:17 push_back 'void (Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| `-ParmVarDecl 0x55f32de60898 <col:27, col:47> col:47 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-FunctionTemplateDecl 0x55f32de61148 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55f32de60a40 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<SelectSet::SelectorInfo>':'fast_argument<SelectSet::SelectorInfo, true>'
| `-CXXMethodDecl 0x55f32de610a8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (SelectSet::SelectorInfo &&)' inline
|   `-ParmVarDecl 0x55f32de60fa8 <col:58, col:62> col:62 v 'SelectSet::SelectorInfo &&'
|-CXXMethodDecl 0x55f32de61228 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55f32de61378 <line:186:5, col:49> col:17 push_front 'void (Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| `-ParmVarDecl 0x55f32de612e8 <col:28, col:48> col:48 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x55f32de61430 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55f32de61678 <line:189:5, col:62> col:21 insert 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x55f32de614f0 <col:28, col:37> col:37 it 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
| `-ParmVarDecl 0x55f32de61568 <col:41, col:61> col:61 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x55f32de61838 <line:190:5, col:38> col:21 erase 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator)' inline
| `-ParmVarDecl 0x55f32de61748 <col:27, col:36> col:36 it 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
|-CXXMethodDecl 0x55f32de61a88 <line:191:5, col:49> col:21 erase 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator, Vector<SelectSet::SelectorInfo>::iterator)' inline
| |-ParmVarDecl 0x55f32de61900 <col:27, col:36> col:36 a 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
| `-ParmVarDecl 0x55f32de61978 <col:39, col:48> col:48 b 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
|-CXXMethodDecl 0x55f32de61bc0 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55f32de61e18 <line:195:5, col:34> col:17 swap 'void (Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x55f32de61d20 <col:22, col:33> col:33 x 'Vector<SelectSet::SelectorInfo> &'
`-CXXDestructorDecl 0x55f32de61ee8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55f32de61ee8

Layout: <CGRecordLayout
  LLVMType:%class.Vector.17 = type { %class.vector_memory.18 }
  NonVirtualBaseLLVMType:%class.Vector.17 = type { %class.vector_memory.18 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f32de4ee70 <../dummy_inc/click/selectset.hh:36:1, line:109:1> line:36:7 referenced class SelectSet definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55f32de4ef88 <col:1, col:7> col:7 implicit referenced class SelectSet
|-AccessSpecDecl 0x55f32de4f018 <col:19, col:25> col:19 public
|-CXXConstructorDecl 0x55f32de4f0a0 <line:38:5, col:15> col:5 SelectSet 'void ()'
|-CXXDestructorDecl 0x55f32de4f190 <line:39:5, col:16> col:5 ~SelectSet 'void ()' noexcept-unevaluated 0x55f32de4f190
|-CXXMethodDecl 0x55f32de4f290 <line:41:5, col:21> col:10 initialize 'void ()'
|-CXXMethodDecl 0x55f32de4f530 <line:43:5, col:54> col:9 add_select 'int (int, Element *, int)'
| |-ParmVarDecl 0x55f32de4f348 <col:20, col:24> col:24 fd 'int'
| |-ParmVarDecl 0x55f32de4f3c0 <col:28, col:37> col:37 element 'Element *'
| `-ParmVarDecl 0x55f32de4f440 <col:46, col:50> col:50 mask 'int'
|-CXXMethodDecl 0x55f32de4f7a0 <line:44:5, col:57> col:9 remove_select 'int (int, Element *, int)'
| |-ParmVarDecl 0x55f32de4f600 <col:23, col:27> col:27 fd 'int'
| |-ParmVarDecl 0x55f32de4f678 <col:31, col:40> col:40 element 'Element *'
| `-ParmVarDecl 0x55f32de4f6f8 <col:49, col:53> col:53 mask 'int'
|-CXXMethodDecl 0x55f32de4f8f8 <line:46:5, col:42> col:10 run_selects 'void (RouterThread *)'
| `-ParmVarDecl 0x55f32de4f868 <col:22, col:36> col:36 thread 'RouterThread *'
|-CXXMethodDecl 0x55f32de4f9c0 <line:47:5, line:50:5> line:47:17 used wake_immediate 'void ()' inline
| `-CompoundStmt 0x55f32de63598 <col:34, line:50:5>
|   |-BinaryOperator 0x55f32de62f68 <line:48:2, col:23> 'volatile bool' lvalue '='
|   | |-MemberExpr 0x55f32de62f28 <col:2> 'volatile bool' lvalue ->_wake_pipe_pending 0x55f32de50148
|   | | `-CXXThisExpr 0x55f32de62f18 <col:2> 'SelectSet *' implicit this
|   | `-CXXBoolLiteralExpr 0x55f32de62f58 <col:23> 'bool' true
|   `-CallExpr 0x55f32de63570 <line:49:2, col:43> 'void'
|     |-ImplicitCastExpr 0x55f32de63558 <col:2> 'void (*)(long)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x55f32de634d8 <col:2> 'void (long)' lvalue Function 0x55f32de633d8 'ignore_result' 'void (long)' (FunctionTemplate 0x55f32da4a1d8 'ignore_result')
|     `-CallExpr 0x55f32de63180 <col:16, col:42> 'ssize_t':'long'
|       |-ImplicitCastExpr 0x55f32de63168 <col:16> 'ssize_t (*)(int, const void *, size_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55f32de630e8 <col:16> 'ssize_t (int, const void *, size_t)' lvalue Function 0x55f32de28928 'write' 'ssize_t (int, const void *, size_t)'
|       |-ImplicitCastExpr 0x55f32de631b8 <col:22, col:34> 'int' <LValueToRValue>
|       | `-ArraySubscriptExpr 0x55f32de63090 <col:22, col:34> 'int' lvalue
|       |   |-ImplicitCastExpr 0x55f32de63078 <col:22> 'int *' <ArrayToPointerDecay>
|       |   | `-MemberExpr 0x55f32de63028 <col:22> 'int [2]' lvalue ->_wake_pipe 0x55f32de500e8
|       |   |   `-CXXThisExpr 0x55f32de63018 <col:22> 'SelectSet *' implicit this
|       |   `-IntegerLiteral 0x55f32de63058 <col:33> 'int' 1
|       |-ImplicitCastExpr 0x55f32de631e8 <col:37> 'const void *' <BitCast>
|       | `-ImplicitCastExpr 0x55f32de631d0 <col:37> 'const char *' <ArrayToPointerDecay>
|       |   `-StringLiteral 0x55f32de630b0 <col:37> 'const char [1]' lvalue ""
|       `-ImplicitCastExpr 0x55f32de63200 <col:41> 'size_t':'unsigned long' <IntegralCast>
|         `-IntegerLiteral 0x55f32de630c8 <col:41> 'int' 1
|-CXXMethodDecl 0x55f32de4fb00 <line:52:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x55f32de4fa70 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x55f32de4fbc8 <line:54:5, col:23> col:17 fence 'void ()' inline
|-AccessSpecDecl 0x55f32de4fc68 <line:56:3, col:10> col:3 private
|-CXXRecordDecl 0x55f32de4fc90 <line:58:5, line:66:5> line:58:12 referenced struct SelectorInfo definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55f32de4fda8 <col:5, col:12> col:12 implicit referenced struct SelectorInfo
| |-FieldDecl 0x55f32de4fe48 <line:59:2, col:11> col:11 read 'Element *'
| |-FieldDecl 0x55f32de4fea8 <line:60:2, col:11> col:11 write 'Element *'
| |-FieldDecl 0x55f32de4ff10 <line:61:2, col:6> col:6 pollfd 'int'
| `-CXXConstructorDecl 0x55f32de4ffc0 <line:62:2, line:65:2> line:62:2 SelectorInfo 'void ()'
|   |-CXXCtorInitializer Field 0x55f32de4fe48 'read' 'Element *'
|   | `-ImplicitCastExpr 0x55f32de635f8 <line:63:13> 'Element *' <NullToPointer>
|   |   `-IntegerLiteral 0x55f32de635b8 <col:13> 'int' 0
|   |-CXXCtorInitializer Field 0x55f32de4fea8 'write' 'Element *'
|   | `-ImplicitCastExpr 0x55f32de63678 <col:23> 'Element *' <NullToPointer>
|   |   `-IntegerLiteral 0x55f32de63638 <col:23> 'int' 0
|   |-CXXCtorInitializer Field 0x55f32de4ff10 'pollfd' 'int'
|   | `-UnaryOperator 0x55f32de636d8 <col:34, col:35> 'int' prefix '-'
|   |   `-IntegerLiteral 0x55f32de636b8 <col:35> 'int' 1
|   `-CompoundStmt 0x55f32de63750 <line:64:2, line:65:2>
|-FieldDecl 0x55f32de500e8 <line:68:5, col:21> col:9 referenced _wake_pipe 'int [2]'
|-FieldDecl 0x55f32de50148 <line:69:5, col:19> col:19 referenced _wake_pipe_pending 'volatile bool'
|-FieldDecl 0x55f32de57270 <line:82:5, col:27> col:27 _pollfds 'Vector<struct pollfd>':'Vector<pollfd>'
|-FieldDecl 0x55f32de61fd0 <line:83:5, col:26> col:26 _selinfo 'Vector<SelectSet::SelectorInfo>':'Vector<SelectSet::SelectorInfo>'
|-CXXMethodDecl 0x55f32de62208 <line:89:5, col:63> col:10 register_select 'void (int, bool, bool)'
| |-ParmVarDecl 0x55f32de62038 <col:26, col:30> col:30 fd 'int'
| |-ParmVarDecl 0x55f32de620b0 <col:34, col:39> col:39 add_read 'bool'
| `-ParmVarDecl 0x55f32de62128 <col:49, col:54> col:54 add_write 'bool'
|-CXXMethodDecl 0x55f32de623f0 <line:90:5, col:41> col:10 remove_pollfd 'void (int, int)'
| |-ParmVarDecl 0x55f32de622d8 <col:24, col:28> col:28 pi 'int'
| `-ParmVarDecl 0x55f32de62358 <col:32, col:36> col:36 event 'int'
|-CXXMethodDecl 0x55f32de62638 <line:91:5, col:49> col:17 call_selected 'void (int, int) const' inline
| |-ParmVarDecl 0x55f32de624b8 <col:31, col:35> col:35 fd 'int'
| `-ParmVarDecl 0x55f32de62538 <col:39, col:43> col:43 mask 'int'
|-CXXMethodDecl 0x55f32de62848 <line:92:5, col:63> col:17 post_select 'bool (RouterThread *, bool)' inline
| |-ParmVarDecl 0x55f32de626f8 <col:29, col:43> col:43 thread 'RouterThread *'
| `-ParmVarDecl 0x55f32de62770 <col:51, col:56> col:56 acquire 'bool'
|-CXXMethodDecl 0x55f32de62998 <line:97:5, col:47> col:10 run_selects_poll 'void (RouterThread *)'
| `-ParmVarDecl 0x55f32de62908 <col:27, col:41> col:41 thread 'RouterThread *'
|-CXXMethodDecl 0x55f32de62a60 <line:102:5, col:22> col:17 used lock 'void ()' inline
|-CXXMethodDecl 0x55f32de62b20 <line:103:5, col:24> col:17 used unlock 'void ()' inline
|-CXXConstructorDecl 0x55f32de62be8 <line:36:7> col:7 implicit SelectSet 'void (const SelectSet &)' inline default noexcept-unevaluated 0x55f32de62be8
| `-ParmVarDecl 0x55f32de62cf8 <col:7> col:7 'const SelectSet &'
`-CXXMethodDecl 0x55f32de62d98 <col:7> col:7 implicit operator= 'SelectSet &(const SelectSet &)' inline default noexcept-unevaluated 0x55f32de62d98
  `-ParmVarDecl 0x55f32de62ea8 <col:7> col:7 'const SelectSet &'

Layout: <CGRecordLayout
  LLVMType:%class.SelectSet = type { [2 x i32], i8, %class.Vector.16, %class.Vector.17 }
  NonVirtualBaseLLVMType:%class.SelectSet = type { [2 x i32], i8, %class.Vector.16, %class.Vector.17 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f32ddec9a8 <../dummy_inc/click/sync.hh:46:1, line:64:1> line:46:7 referenced class Spinlock definition
|-DefinitionData empty standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55f32ddecac8 <col:1, col:7> col:7 implicit referenced class Spinlock
|-AccessSpecDecl 0x55f32ddecb58 <col:18, col:24> col:18 public
|-CXXConstructorDecl 0x55f32ddecbe0 <line:48:5, col:21> col:12 Spinlock 'void ()' inline
|-CXXDestructorDecl 0x55f32ddeccd0 <line:49:5, col:22> col:12 ~Spinlock 'void () noexcept' inline
|-CXXMethodDecl 0x55f32ddecdd0 <line:51:5, col:25> col:17 used acquire 'void ()' inline
|-CXXMethodDecl 0x55f32ddece90 <line:52:5, col:25> col:17 used release 'void ()' inline
|-CXXMethodDecl 0x55f32ddecf50 <line:53:5, col:25> col:17 attempt 'bool ()' inline
|-CXXMethodDecl 0x55f32dded038 <line:54:5, col:26> col:17 nested 'bool () const' inline
|-CXXConstructorDecl 0x55f32dded158 <line:46:7> col:7 implicit constexpr Spinlock 'void (const Spinlock &)' inline default trivial noexcept-unevaluated 0x55f32dded158
| `-ParmVarDecl 0x55f32dded268 <col:7> col:7 'const Spinlock &'
`-CXXMethodDecl 0x55f32de68348 <col:7> col:7 implicit operator= 'Spinlock &(const Spinlock &)' inline default trivial noexcept-unevaluated 0x55f32de68348
  `-ParmVarDecl 0x55f32de68458 <col:7> col:7 'const Spinlock &'

Layout: <CGRecordLayout
  LLVMType:%class.Spinlock = type { i8 }
  NonVirtualBaseLLVMType:%class.Spinlock.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f32de0d438 <../dummy_inc/click/task.hh:339:5, line:342:5> line:339:11 referenced union Pending definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55f32de0d558 <col:5, col:11> col:11 implicit union Pending
|-FieldDecl 0x55f32de0d5f8 <line:340:9, col:15> col:15 t 'Task *'
|-FieldDecl 0x55f32de0d658 <line:341:9, col:19> col:19 referenced x 'uintptr_t':'unsigned long'
|-CXXConstructorDecl 0x55f32de67948 <line:339:11> col:11 implicit constexpr Pending 'void (const Task::Pending &)' inline default trivial noexcept-unevaluated 0x55f32de67948
| `-ParmVarDecl 0x55f32de67a58 <col:11> col:11 'const Task::Pending &'
|-CXXConstructorDecl 0x55f32de67af8 <col:11> col:11 implicit constexpr Pending 'void (Task::Pending &&)' inline default trivial noexcept-unevaluated 0x55f32de67af8
| `-ParmVarDecl 0x55f32de67c08 <col:11> col:11 'Task::Pending &&'
|-CXXDestructorDecl 0x55f32de67c78 <col:11> col:11 implicit ~Pending 'void ()' inline default trivial noexcept-unevaluated 0x55f32de67c78
|-CXXMethodDecl 0x55f32de684f8 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(const Task::Pending &)' inline default trivial noexcept-unevaluated 0x55f32de684f8
| `-ParmVarDecl 0x55f32de68608 <col:11> col:11 'const Task::Pending &'
|-CXXMethodDecl 0x55f32de68678 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(Task::Pending &&)' inline default trivial noexcept-unevaluated 0x55f32de68678
| `-ParmVarDecl 0x55f32de68788 <col:11> col:11 'Task::Pending &&'
`-CXXConstructorDecl 0x55f32de80a08 <col:11> col:11 implicit used Pending 'void () noexcept' inline default trivial
  `-CompoundStmt 0x55f32de80ae0 <col:11>

Layout: <CGRecordLayout
  LLVMType:%"union.Task::Pending" = type { %class.Task* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f32ddee8a0 <../dummy_inc/click/sync.hh:303:1, line:324:1> line:303:7 referenced class SpinlockIRQ definition
|-DefinitionData pass_in_registers empty standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55f32ddee9b8 <col:1, col:7> col:7 implicit referenced class SpinlockIRQ
|-AccessSpecDecl 0x55f32ddeea48 <col:21, col:27> col:21 public
|-CXXConstructorDecl 0x55f32ddeead0 <line:305:5, col:24> col:12 SpinlockIRQ 'void ()' inline
|-TypedefDecl 0x55f32ddeeb90 <line:310:5, col:17> col:17 referenced flags_t 'int'
| `-BuiltinType 0x55f32d785580 'int'
|-CXXMethodDecl 0x55f32ddeec58 <line:313:5, col:59> col:20 acquire 'SpinlockIRQ::flags_t ()' inline
| `-AlwaysInlineAttr 0x55f32ddeecf8 <col:45> always_inline
|-CXXMethodDecl 0x55f32ddeee28 <line:314:5, col:63> col:17 release 'void (SpinlockIRQ::flags_t)' inline
| |-ParmVarDecl 0x55f32ddeed60 <col:25> col:32 'SpinlockIRQ::flags_t':'int'
| `-AlwaysInlineAttr 0x55f32ddeeed0 <col:49> always_inline
|-CXXConstructorDecl 0x55f32ddeefc8 <line:303:7> col:7 implicit constexpr SpinlockIRQ 'void (const SpinlockIRQ &)' inline default trivial noexcept-unevaluated 0x55f32ddeefc8
| `-ParmVarDecl 0x55f32ddef0d8 <col:7> col:7 'const SpinlockIRQ &'
|-CXXConstructorDecl 0x55f32ddef178 <col:7> col:7 implicit constexpr SpinlockIRQ 'void (SpinlockIRQ &&)' inline default trivial noexcept-unevaluated 0x55f32ddef178
| `-ParmVarDecl 0x55f32ddef288 <col:7> col:7 'SpinlockIRQ &&'
|-CXXDestructorDecl 0x55f32de67d60 <col:7> col:7 implicit ~SpinlockIRQ 'void ()' inline default trivial noexcept-unevaluated 0x55f32de67d60
|-CXXMethodDecl 0x55f32de68828 <col:7> col:7 implicit operator= 'SpinlockIRQ &(const SpinlockIRQ &)' inline default trivial noexcept-unevaluated 0x55f32de68828
| `-ParmVarDecl 0x55f32de68938 <col:7> col:7 'const SpinlockIRQ &'
`-CXXMethodDecl 0x55f32de689a8 <col:7> col:7 implicit operator= 'SpinlockIRQ &(SpinlockIRQ &&)' inline default trivial noexcept-unevaluated 0x55f32de689a8
  `-ParmVarDecl 0x55f32de68ab8 <col:7> col:7 'SpinlockIRQ &&'

Layout: <CGRecordLayout
  LLVMType:%class.SpinlockIRQ = type { i8 }
  NonVirtualBaseLLVMType:%class.SpinlockIRQ.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f32de63bc0 prev 0x55f32de4ede0 <../dummy_inc/click/routerthread.hh:28:1, line:248:1> line:28:7 referenced class RouterThread definition
|-DefinitionData has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-CXXRecordDecl 0x55f32de63cb8 <col:1, col:7> col:7 implicit referenced class RouterThread
|-AccessSpecDecl 0x55f32de63d48 <col:22, col:28> col:22 public
|-EnumDecl 0x55f32de63d70 <line:30:5, col:58> col:5
| |-EnumConstantDecl 0x55f32de63e88 <col:12, col:32> col:12 THREAD_QUIESCENT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:30:5)'
| | `-ConstantExpr 0x55f32de63e68 <col:31, col:32> 'int' Int: -1
| |   `-UnaryOperator 0x55f32de63e50 <col:31, col:32> 'int' prefix '-'
| |     `-IntegerLiteral 0x55f32de63e30 <col:32> 'int' 1
| `-EnumConstantDecl 0x55f32de63f30 <col:35, col:53> col:35 THREAD_UNKNOWN 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:30:5)'
|   `-ConstantExpr 0x55f32de63f10 <col:52, col:53> 'int' Int: -1000
|     `-UnaryOperator 0x55f32de63ef8 <col:52, col:53> 'int' prefix '-'
|       `-IntegerLiteral 0x55f32de63ed8 <col:53> 'int' 1000
|-CXXMethodDecl 0x55f32de63fd0 <line:32:5, col:28> col:16 thread_id 'int () const' inline
|-CXXMethodDecl 0x55f32de64090 <line:34:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x55f32de64178 <line:35:5, col:52> col:22 timer_set 'TimerSet &()' inline
| `-CompoundStmt 0x55f32de68b78 <col:34, col:52>
|   `-ReturnStmt 0x55f32de68b68 <col:36, col:43>
|     `-MemberExpr 0x55f32de68b38 <col:43> 'TimerSet' lvalue ->_timers 0x55f32de65e48
|       `-CXXThisExpr 0x55f32de68b28 <col:43> 'RouterThread *' implicit this
|-CXXMethodDecl 0x55f32de64268 <line:36:5, col:64> col:28 timer_set 'const TimerSet &() const' inline
| `-CompoundStmt 0x55f32de68be0 <col:46, col:64>
|   `-ReturnStmt 0x55f32de68bd0 <col:48, col:55>
|     `-MemberExpr 0x55f32de68ba0 <col:55> 'const TimerSet' lvalue ->_timers 0x55f32de65e48
|       `-CXXThisExpr 0x55f32de68b90 <col:55> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x55f32de64358 <line:38:5, col:55> col:23 select_set 'SelectSet &()' inline
| `-CompoundStmt 0x55f32de68c48 <col:36, col:55>
|   `-ReturnStmt 0x55f32de68c38 <col:38, col:45>
|     `-MemberExpr 0x55f32de68c08 <col:45> 'SelectSet' lvalue ->_selects 0x55f32de65ea8
|       `-CXXThisExpr 0x55f32de68bf8 <col:45> 'RouterThread *' implicit this
|-CXXMethodDecl 0x55f32de64448 <line:39:5, col:67> col:29 select_set 'const SelectSet &() const' inline
| `-CompoundStmt 0x55f32de68cb0 <col:48, col:67>
|   `-ReturnStmt 0x55f32de68ca0 <col:50, col:57>
|     `-MemberExpr 0x55f32de68c70 <col:57> 'const SelectSet' lvalue ->_selects 0x55f32de65ea8
|       `-CXXThisExpr 0x55f32de68c60 <col:57> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x55f32de64508 <line:43:5, col:26> col:17 active 'bool () const' inline
|-CXXMethodDecl 0x55f32de645f8 <line:44:5, col:31> col:18 task_begin 'Task *() const' inline
|-CXXMethodDecl 0x55f32de64768 <line:45:5, col:40> col:18 task_next 'Task *(Task *) const' inline
| `-ParmVarDecl 0x55f32de646a8 <col:28, col:34> col:34 task 'Task *'
|-CXXMethodDecl 0x55f32de64830 <line:46:5, col:29> col:18 task_end 'Task *() const' inline
|-CXXMethodDecl 0x55f32de64c78 <line:47:5, col:59> col:10 scheduled_tasks 'void (Router *, Vector<Task *> &)'
| |-ParmVarDecl 0x55f32de648e0 <col:26, col:34> col:34 router 'Router *'
| `-ParmVarDecl 0x55f32de64b60 <col:42, col:58> col:58 x 'Vector<Task *> &'
|-CXXMethodDecl 0x55f32de64d48 <line:49:5, col:28> col:17 lock_tasks 'void ()' inline
|-CXXMethodDecl 0x55f32de64e08 <line:50:5, col:30> col:17 unlock_tasks 'void ()' inline
|-CXXMethodDecl 0x55f32de64ec8 <line:52:5, col:38> col:17 schedule_block_tasks 'void ()' inline
|-CXXMethodDecl 0x55f32de65008 <line:53:5, col:43> col:17 used block_tasks 'void (bool)' inline
| `-ParmVarDecl 0x55f32de64f78 <col:29, col:34> col:34 scheduled 'bool'
|-CXXMethodDecl 0x55f32de650d0 <line:54:5, col:31> col:17 used unblock_tasks 'void ()' inline
|-CXXMethodDecl 0x55f32de65190 <line:56:5, col:29> col:17 stop_flag 'bool () const' inline
|-CXXMethodDecl 0x55f32de65250 <line:58:5, col:35> col:17 mark_driver_entry 'void ()' inline
|-CXXMethodDecl 0x55f32de65310 <line:59:5, col:17> col:10 driver 'void ()'
|-CXXMethodDecl 0x55f32de65450 <line:61:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x55f32de653c0 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x55f32de65518 <line:77:5, col:22> col:17 used wake 'void ()' inline
|-CXXMethodDecl 0x55f32de655d8 <line:80:5, col:29> col:17 run_signals 'void ()' inline
|-EnumDecl 0x55f32de65678 <line:83:5, line:86:20> line:83:5
| |-EnumConstantDecl 0x55f32de65740 <col:12> col:12 referenced S_PAUSED 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55f32de65790 <col:22> col:22 referenced S_BLOCKED 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55f32de657e0 <col:33> col:33 referenced S_TIMERWAIT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55f32de65830 <line:84:12> col:12 S_LOCKSELECT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55f32de65880 <col:26> col:26 S_LOCKTASKS 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55f32de658d0 <line:85:12> col:12 S_RUNTASK 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55f32de65920 <col:23> col:23 S_RUNTIMER 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55f32de65970 <col:35> col:35 S_RUNSIGNAL 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55f32de659c0 <col:48> col:48 S_RUNPENDING 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55f32de65a10 <col:62> col:62 S_RUNSELECT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| `-EnumConstantDecl 0x55f32de65a60 <line:86:12> col:12 NSTATES 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
|-CXXMethodDecl 0x55f32de65b58 <line:87:5, col:43> col:17 used set_thread_state 'void (int)' inline
| `-ParmVarDecl 0x55f32de65ac8 <col:34, col:38> col:38 state 'int'
|-CXXMethodDecl 0x55f32de65ca8 <line:88:5, col:61> col:17 set_thread_state_for_blocking 'void (int)' inline
| `-ParmVarDecl 0x55f32de65c18 <col:47, col:51> col:51 delay_type 'int'
|-AccessSpecDecl 0x55f32de65d50 <line:104:3, col:10> col:3 private
|-FieldDecl 0x55f32de65d88 <line:119:5, col:14> col:14 referenced _task_link 'TaskLink'
|-FieldDecl 0x55f32de65de8 <line:120:5, col:19> col:19 referenced _stop_flag 'volatile bool'
|-FieldDecl 0x55f32de65e48 <line:125:5, col:14> col:14 referenced _timers 'TimerSet'
|-FieldDecl 0x55f32de65ea8 <line:127:5, col:15> col:15 referenced _selects 'SelectSet'
|-FieldDecl 0x55f32de65f28 <line:148:5, col:14> col:14 referenced _task_lock 'Spinlock'
| `-AlignedAttr 0x55f32de65f98 <col:40, col:50> aligned
|   `-ConstantExpr 0x55f32de65f78 <col:48> 'int' Int: 64
|     `-IntegerLiteral 0x55f32de65ef8 <col:48> 'int' 64
|-FieldDecl 0x55f32de66008 <line:149:5, col:21> col:21 referenced _task_blocker 'atomic_uint32_t'
|-FieldDecl 0x55f32de66068 <line:150:5, col:21> col:21 referenced _task_blocker_waiting 'atomic_uint32_t'
|-FieldDecl 0x55f32de66160 <line:152:5, col:19> col:19 referenced _pending_head 'Task::Pending':'Task::Pending'
|-FieldDecl 0x55f32de66270 <line:153:5, col:20> col:20 _pending_tail 'Task::Pending *'
|-FieldDecl 0x55f32de662d0 <line:154:5, col:17> col:17 _pending_lock 'SpinlockIRQ'
|-FieldDecl 0x55f32de66350 <line:157:5, col:13> col:13 referenced _master 'Master *'
| `-AlignedAttr 0x55f32de663c0 <col:36, col:46> aligned
|   `-ConstantExpr 0x55f32de663a0 <col:44> 'int' Int: 64
|     `-IntegerLiteral 0x55f32de66320 <col:44> 'int' 64
|-FieldDecl 0x55f32de66438 <line:158:5, col:9> col:9 referenced _id 'int'
|-FieldDecl 0x55f32de66498 <line:159:5, col:10> col:10 referenced _driver_entered 'bool'
|-AccessSpecDecl 0x55f32de664e8 <line:170:3, col:9> col:3 public
|-FieldDecl 0x55f32de66528 <line:171:5, col:14> col:14 _tasks_per_iter 'unsigned int'
|-FieldDecl 0x55f32de66590 <line:172:5, col:14> col:14 _iters_per_os 'unsigned int'
|-AccessSpecDecl 0x55f32de665e0 <line:173:3, col:10> col:3 private
|-CXXConstructorDecl 0x55f32de66788 <line:205:5, col:46> col:5 RouterThread 'void (Master *, int)'
| |-ParmVarDecl 0x55f32de66618 <col:18, col:26> col:26 master 'Master *'
| `-ParmVarDecl 0x55f32de66698 <col:34, col:38> col:38 threadno 'int'
|-CXXDestructorDecl 0x55f32de66888 <line:206:5, col:19> col:5 ~RouterThread 'void ()' noexcept-unevaluated 0x55f32de66888
|-CXXMethodDecl 0x55f32de66990 <line:209:5, col:29> col:17 add_pending 'void ()' inline
|-CXXMethodDecl 0x55f32de66a58 <line:211:5, line:217:5> line:211:21 pass 'unsigned int () const' inline
| `-CompoundStmt 0x55f32de68da8 <col:34, line:217:5>
|   `-ReturnStmt 0x55f32de68d98 <line:215:9, col:34>
|     `-ImplicitCastExpr 0x55f32de68d80 <col:16, col:34> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x55f32de68d50 <col:16, col:34> 'unsigned int' lvalue ->_pass 0x55f32ddfd1f0
|         `-ImplicitCastExpr 0x55f32de68d38 <col:16, col:27> 'TaskLink *' <LValueToRValue>
|           `-MemberExpr 0x55f32de68d08 <col:16, col:27> 'TaskLink *const' lvalue ._next 0x55f32ddfd188
|             `-MemberExpr 0x55f32de68cd8 <col:16> 'const TaskLink' lvalue ->_task_link 0x55f32de65d88
|               `-CXXThisExpr 0x55f32de68cc8 <col:16> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x55f32de66b18 <line:221:5, col:28> col:10 driver_lock_tasks 'void ()'
|-CXXMethodDecl 0x55f32de66bd8 <line:222:5, line:226:5> line:222:17 driver_unlock_tasks 'void ()' inline
| `-CompoundStmt 0x55f32de694d0 <col:39, line:226:5>
|   |-DeclStmt 0x55f32de68ff8 <line:223:9, col:68>
|   | `-VarDecl 0x55f32de68dd0 <col:9, col:67> col:18 used val 'uint32_t':'unsigned int' cinit
|   |   `-CXXMemberCallExpr 0x55f32de68fb0 <col:24, col:67> 'uint32_t':'unsigned int'
|   |     |-MemberExpr 0x55f32de68f80 <col:24, col:38> '<bound member function type>' .compare_swap 0x55f32dab0a40
|   |     | `-MemberExpr 0x55f32de68e48 <col:24> 'atomic_uint32_t' lvalue ->_task_blocker 0x55f32de66008
|   |     |   `-CXXThisExpr 0x55f32de68e38 <col:24> 'RouterThread *' implicit this
|   |     |-CStyleCastExpr 0x55f32de68f38 <col:51, col:63> 'uint32_t':'unsigned int' <NoOp>
|   |     | `-ImplicitCastExpr 0x55f32de68f20 <col:62, col:63> 'uint32_t':'unsigned int' <IntegralCast> part_of_explicit_cast
|   |     |   `-UnaryOperator 0x55f32de68ef8 <col:62, col:63> 'int' prefix '-'
|   |     |     `-IntegerLiteral 0x55f32de68ed8 <col:63> 'int' 1
|   |     `-ImplicitCastExpr 0x55f32de68fe0 <col:66> 'uint32_t':'unsigned int' <IntegralCast>
|   |       `-IntegerLiteral 0x55f32de68f60 <col:66> 'int' 0
|   |-CStyleCastExpr 0x55f32de69040 <line:224:9, col:16> 'void' <ToVoid>
|   | `-DeclRefExpr 0x55f32de69010 <col:16> 'uint32_t':'unsigned int' lvalue Var 0x55f32de68dd0 'val' 'uint32_t':'unsigned int'
|   `-ParenExpr 0x55f32de694b0 <line:225:9, col:181> 'void'
|     `-ConditionalOperator 0x55f32de69480 <col:10, col:180> 'void'
|       |-CXXStaticCastExpr 0x55f32de69158 <col:10, col:50> 'bool' static_cast<_Bool> <NoOp>
|       | `-BinaryOperator 0x55f32de69128 <col:30, col:49> 'bool' '=='
|       |   |-ImplicitCastExpr 0x55f32de69110 <col:30> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-DeclRefExpr 0x55f32de69068 <col:30> 'uint32_t':'unsigned int' lvalue Var 0x55f32de68dd0 'val' 'uint32_t':'unsigned int'
|       |   `-CStyleCastExpr 0x55f32de690e8 <col:37, col:49> 'uint32_t':'unsigned int' <NoOp>
|       |     `-ImplicitCastExpr 0x55f32de690d0 <col:48, col:49> 'uint32_t':'unsigned int' <IntegralCast> part_of_explicit_cast
|       |       `-UnaryOperator 0x55f32de690a8 <col:48, col:49> 'int' prefix '-'
|       |         `-IntegerLiteral 0x55f32de69088 <col:49> 'int' 1
|       |-CXXFunctionalCastExpr 0x55f32de691b8 <col:54, col:61> 'void' functional cast to void <ToVoid>
|       | `-IntegerLiteral 0x55f32de69198 <col:60> 'int' 0
|       `-CallExpr 0x55f32de693e0 <col:65, col:180> 'void'
|         |-ImplicitCastExpr 0x55f32de693c8 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x55f32de693a8 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55f32d8255d0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|         |-ImplicitCastExpr 0x55f32de69420 <col:80> 'const char *' <ArrayToPointerDecay>
|         | `-StringLiteral 0x55f32de692a8 <col:80> 'const char [21]' lvalue "val == (uint32_t) -1"
|         |-ImplicitCastExpr 0x55f32de69438 <col:104> 'const char *' <ArrayToPointerDecay>
|         | `-StringLiteral 0x55f32de692d8 <col:104> 'const char [35]' lvalue "../dummy_inc/click/routerthread.hh"
|         |-ImplicitCastExpr 0x55f32de69450 <col:142> 'unsigned int' <IntegralCast>
|         | `-IntegerLiteral 0x55f32de69318 <col:142> 'int' 225
|         `-ImplicitCastExpr 0x55f32de69468 <col:147, col:161> 'const char *' <ArrayToPointerDecay>
|           `-UnaryOperator 0x55f32de69390 <col:147, col:161> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|             `-PredefinedExpr 0x55f32de69378 <col:161> 'const char [41]' lvalue __PRETTY_FUNCTION__
|               `-StringLiteral 0x55f32de69338 <col:161> 'const char [41]' lvalue "void RouterThread::driver_unlock_tasks()"
|-CXXMethodDecl 0x55f32de66d20 <line:228:5, col:37> col:17 run_tasks 'void (int)' inline
| `-ParmVarDecl 0x55f32de66c90 <col:27, col:31> col:31 ntasks 'int'
|-CXXMethodDecl 0x55f32de66de8 <line:229:5, col:33> col:17 process_pending 'void ()' inline
|-CXXMethodDecl 0x55f32de66ea8 <line:230:5, col:24> col:17 run_os 'void ()' inline
|-CXXMethodDecl 0x55f32de66f68 <line:238:5, col:45> col:24 used running_in_interrupt 'bool ()' static inline
|-CXXMethodDecl 0x55f32de67028 <line:239:5, col:45> col:17 used current_thread_is_running 'bool () const' inline
|-CXXMethodDecl 0x55f32de670e8 <line:240:5, col:53> col:17 current_thread_is_running_cleanup 'bool () const' inline
|-FriendDecl 0x55f32de671e0 <line:242:5, col:18> col:12 'class Task':'Task'
|-FriendDecl 0x55f32de67240 <line:243:5, col:18> col:12 'class Master':'Master'
|-FriendDecl 0x55f32de672d0 <line:245:5, col:18> col:12 'class SelectSet':'SelectSet'
|-CXXConstructorDecl 0x55f32de67698 <line:28:7> col:7 implicit RouterThread 'void (const RouterThread &)' inline default noexcept-unevaluated 0x55f32de67698
| `-ParmVarDecl 0x55f32de677a8 <col:7> col:7 'const RouterThread &'
`-CXXMethodDecl 0x55f32de67e68 <col:7> col:7 implicit operator= 'RouterThread &(const RouterThread &)' inline default noexcept-unevaluated 0x55f32de67e68
  `-ParmVarDecl 0x55f32de67f78 <col:7> col:7 'const RouterThread &'

Layout: <CGRecordLayout
  LLVMType:%class.RouterThread = type { %struct.TaskLink, i8, [7 x i8], %class.TimerSet, %class.SelectSet, [32 x i8], %class.Spinlock, %class.atomic_uint32_t, %class.atomic_uint32_t, %"union.Task::Pending", %"union.Task::Pending"*, %class.SpinlockIRQ, [31 x i8], %class.Master*, i32, i8, i32, i32, [40 x i8] }
  NonVirtualBaseLLVMType:%class.RouterThread.base = type { %struct.TaskLink, i8, [7 x i8], %class.TimerSet, %class.SelectSet, [32 x i8], %class.Spinlock, %class.atomic_uint32_t, %class.atomic_uint32_t, %"union.Task::Pending", %"union.Task::Pending"*, %class.SpinlockIRQ, [31 x i8], %class.Master*, i32, i8, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f32de0a818 prev 0x55f32dceace0 <../dummy_inc/click/task.hh:49:1, line:371:1> line:49:7 referenced class Task definition
|-DefinitionData has_user_declared_ctor can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-private 'TaskLink'
|-CXXRecordDecl 0x55f32de0a950 <col:1, col:7> col:7 implicit referenced class Task
|-AccessSpecDecl 0x55f32de0a9e0 <col:33, col:39> col:33 public
|-EnumDecl 0x55f32de0aa08 <line:52:5, col:50> col:5
| |-EnumConstantDecl 0x55f32de0ab50 <col:12, col:26> col:12 referenced STRIDE1 'Task::(anonymous enum at ../dummy_inc/click/task.hh:52:5)'
| | `-ConstantExpr 0x55f32de0ab30 <col:22, col:26> 'unsigned int' Int: 65536
| |   `-BinaryOperator 0x55f32de0ab10 <col:22, col:26> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x55f32de0aad0 <col:22> 'unsigned int' 1
| |     `-IntegerLiteral 0x55f32de0aaf0 <col:26> 'int' 16
| `-EnumConstantDecl 0x55f32de0ac20 <col:30, col:47> col:30 referenced MAX_STRIDE 'Task::(anonymous enum at ../dummy_inc/click/task.hh:52:5)'
|   `-ConstantExpr 0x55f32de0ac00 <col:43, col:47> 'unsigned int' Int: 2147483648
|     `-BinaryOperator 0x55f32de0abe0 <col:43, col:47> 'unsigned int' '<<'
|       |-IntegerLiteral 0x55f32de0aba0 <col:43> 'unsigned int' 1
|       `-IntegerLiteral 0x55f32de0abc0 <col:47> 'int' 31
|-EnumDecl 0x55f32de0ac70 <line:53:5, col:57> col:5
| |-EnumConstantDecl 0x55f32de0adb0 <col:12, col:29> col:12 referenced MAX_TICKETS 'Task::(anonymous enum at ../dummy_inc/click/task.hh:53:5)'
| | `-ImplicitCastExpr 0x55f32de0aed0 <col:26, col:29> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f32de0ad90 <col:26, col:29> 'int' Int: 32768
| |     `-BinaryOperator 0x55f32de0ad70 <col:26, col:29> 'int' '<<'
| |       |-IntegerLiteral 0x55f32de0ad30 <col:26> 'int' 1
| |       `-IntegerLiteral 0x55f32de0ad50 <col:29> 'int' 15
| `-EnumConstantDecl 0x55f32de0ae80 <col:33, col:54> col:33 DEFAULT_TICKETS 'Task::(anonymous enum at ../dummy_inc/click/task.hh:53:5)'
|   `-ImplicitCastExpr 0x55f32de0aee8 <col:51, col:54> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55f32de0ae60 <col:51, col:54> 'int' Int: 1024
|       `-BinaryOperator 0x55f32de0ae40 <col:51, col:54> 'int' '<<'
|         |-IntegerLiteral 0x55f32de0ae00 <col:51> 'int' 1
|         `-IntegerLiteral 0x55f32de0ae20 <col:54> 'int' 10
|-CXXConstructorDecl 0x55f32de0b0b8 <line:75:5, col:48> col:12 Task 'void (TaskCallback, void *)' inline
| |-ParmVarDecl 0x55f32de0af10 <col:17, col:30> col:30 f 'TaskCallback':'bool (*)(Task *, void *)'
| `-ParmVarDecl 0x55f32de0af90 <col:33, col:39> col:39 user_data 'void *'
|-CXXConstructorDecl 0x55f32de0b210 <line:86:5, col:27> col:12 Task 'void (Element *)' inline
| `-ParmVarDecl 0x55f32de0b180 <col:17, col:26> col:26 e 'Element *'
|-CXXDestructorDecl 0x55f32de0b308 <line:91:5, col:11> col:5 ~Task 'void ()' noexcept-unevaluated 0x55f32de0b308
|-CXXMethodDecl 0x55f32de0b498 <line:98:5, line:100:5> line:98:25 callback 'TaskCallback () const' inline
| `-CompoundStmt 0x55f32de0e598 <col:42, line:100:5>
|   `-ReturnStmt 0x55f32de0e588 <line:99:9, col:16>
|     `-ImplicitCastExpr 0x55f32de0e570 <col:16> 'TaskCallback':'bool (*)(Task *, void *)' <LValueToRValue>
|       `-MemberExpr 0x55f32de0e540 <col:16> 'const TaskCallback':'bool (*const)(Task *, void *)' lvalue ->_hook 0x55f32de0d2c0
|         `-CXXThisExpr 0x55f32de0e530 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x55f32de0b560 <line:103:5, line:105:5> line:103:18 user_data 'void *() const' inline
| `-CompoundStmt 0x55f32de0e618 <col:36, line:105:5>
|   `-ReturnStmt 0x55f32de0e608 <line:104:9, col:16>
|     `-ImplicitCastExpr 0x55f32de0e5f0 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x55f32de0e5c0 <col:16> 'void *const' lvalue ->_thunk 0x55f32de0d328
|         `-CXXThisExpr 0x55f32de0e5b0 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x55f32de0b620 <line:108:5, line:110:5> line:108:21 element 'Element *() const' inline
| `-CompoundStmt 0x55f32de0e698 <col:37, line:110:5>
|   `-ReturnStmt 0x55f32de0e688 <line:109:9, col:16>
|     `-ImplicitCastExpr 0x55f32de0e670 <col:16> 'Element *' <LValueToRValue>
|       `-MemberExpr 0x55f32de0e640 <col:16> 'Element *const' lvalue ->_owner 0x55f32de0d3e8
|         `-CXXThisExpr 0x55f32de0e630 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x55f32de0b6e0 <line:114:5, col:31> col:17 initialized 'bool () const' inline
|-CXXMethodDecl 0x55f32de0b7a8 <line:123:5, col:33> col:16 home_thread_id 'int () const' inline
|-CXXMethodDecl 0x55f32de0b868 <line:132:5, col:35> col:26 thread 'RouterThread *() const' inline
|-CXXMethodDecl 0x55f32de0b928 <line:135:5, line:137:5> line:135:20 router 'Router *() const' inline
| `-CompoundStmt 0x55f32de0e780 <col:35, line:137:5>
|   `-ReturnStmt 0x55f32de0e770 <line:136:9, col:31>
|     `-CXXMemberCallExpr 0x55f32de0e738 <col:16, col:31> 'Router *'
|       `-MemberExpr 0x55f32de0e708 <col:16, col:24> '<bound member function type>' ->router 0x55f32dcfd4f0
|         `-ImplicitCastExpr 0x55f32de0e758 <col:16> 'const Element *' <NoOp>
|           `-ImplicitCastExpr 0x55f32de0e6f0 <col:16> 'Element *' <LValueToRValue>
|             `-MemberExpr 0x55f32de0e6c0 <col:16> 'Element *const' lvalue ->_owner 0x55f32de0d3e8
|               `-CXXThisExpr 0x55f32de0e6b0 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x55f32de0b9e8 <line:140:5, col:22> col:13 master 'Master *() const'
|-CXXMethodDecl 0x55f32de0bba8 <line:159:5, col:50> col:10 initialize 'void (Element *, bool)'
| |-ParmVarDecl 0x55f32de0ba98 <col:21, col:30> col:30 owner 'Element *'
| `-ParmVarDecl 0x55f32de0bb10 <col:37, col:42> col:42 schedule 'bool'
|-CXXMethodDecl 0x55f32de0bdb8 <line:169:5, col:50> col:10 initialize 'void (Router *, bool)'
| |-ParmVarDecl 0x55f32de0bc68 <col:21, col:29> col:29 router 'Router *'
| `-ParmVarDecl 0x55f32de0bce0 <col:37, col:42> col:42 schedule 'bool'
|-CXXMethodDecl 0x55f32de0be88 <line:179:5, line:181:5> line:179:17 scheduled 'bool () const' inline
| `-CompoundStmt 0x55f32de0e890 <col:35, line:181:5>
|   `-ReturnStmt 0x55f32de0e880 <line:180:9, col:24>
|     `-ImplicitCastExpr 0x55f32de0e868 <col:16, col:24> 'bool' <IntegralToBoolean>
|       `-ImplicitCastExpr 0x55f32de0e850 <col:16, col:24> 'uint8_t':'unsigned char' <LValueToRValue>
|         `-MemberExpr 0x55f32de0e820 <col:16, col:24> 'const uint8_t':'const unsigned char' lvalue .is_scheduled 0x55f32de0cef8
|           `-MemberExpr 0x55f32de0e7d8 <col:16, col:24> 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55f32de0d018
|             `-MemberExpr 0x55f32de0e7a8 <col:16> 'const union Status':'const Task::Status' lvalue ->_status 0x55f32de0d248
|               `-CXXThisExpr 0x55f32de0e798 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x55f32de0bf48 <line:190:5, line:192:5> line:190:17 unschedule 'void ()' inline
| `-CompoundStmt 0x55f32de0e9a8 <col:30, line:192:5>
|   `-BinaryOperator 0x55f32de0e988 <line:191:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x55f32de0e930 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x55f32de0cef8
|     | `-MemberExpr 0x55f32de0e8e8 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55f32de0d018
|     |   `-MemberExpr 0x55f32de0e8b8 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x55f32de0d248
|     |     `-CXXThisExpr 0x55f32de0e8a8 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x55f32de0e970 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x55f32de0e960 <col:32> 'bool' false
|-CXXMethodDecl 0x55f32de0c008 <line:201:5, line:206:5> line:201:17 used reschedule 'void ()' inline
| `-CompoundStmt 0x55f32de0ecf8 <col:30, line:206:5>
|   |-BinaryOperator 0x55f32de0eaa0 <line:202:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x55f32de0ea48 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x55f32de0cef8
|   | | `-MemberExpr 0x55f32de0ea00 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55f32de0d018
|   | |   `-MemberExpr 0x55f32de0e9d0 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x55f32de0d248
|   | |     `-CXXThisExpr 0x55f32de0e9c0 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x55f32de0ea88 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x55f32de0ea78 <col:32> 'bool' true
|   |-CallExpr 0x55f32de0eb40 <line:203:9, col:21> 'void'
|   | `-ImplicitCastExpr 0x55f32de0eb28 <col:9> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f32de0eb08 <col:9> 'void ()' lvalue Function 0x55f32ddec560 'click_fence' 'void ()'
|   `-IfStmt 0x55f32de0ece0 <line:204:9, line:205:32>
|     |-BinaryOperator 0x55f32de0ec20 <line:204:13, col:34> 'bool' '<'
|     | |-ImplicitCastExpr 0x55f32de0ebf0 <col:13, col:30> 'uintptr_t':'unsigned long' <LValueToRValue>
|     | | `-MemberExpr 0x55f32de0eba0 <col:13, col:30> 'uintptr_t':'unsigned long' lvalue .x 0x55f32de0d658
|     | |   `-MemberExpr 0x55f32de0eb70 <col:13> 'Task::Pending' lvalue ->_pending_nextptr 0x55f32de0d6d0
|     | |     `-CXXThisExpr 0x55f32de0eb60 <col:13> 'Task *' implicit this
|     | `-ImplicitCastExpr 0x55f32de0ec08 <col:34> 'unsigned long' <IntegralCast>
|     |   `-IntegerLiteral 0x55f32de0ebd0 <col:34> 'int' 2
|     `-CXXMemberCallExpr 0x55f32de0eca0 <line:205:13, col:32> 'void'
|       |-MemberExpr 0x55f32de0ec50 <col:13> '<bound member function type>' ->complete_schedule 0x55f32de0e0d0
|       | `-CXXThisExpr 0x55f32de0ec40 <col:13> 'Task *' implicit this
|       `-ImplicitCastExpr 0x55f32de0ecc8 <col:31> 'RouterThread *' <NullToPointer>
|         `-IntegerLiteral 0x55f32de0ec80 <col:31> 'int' 0
|-CXXMethodDecl 0x55f32de0c0c8 <line:238:5, line:240:5> line:238:17 fast_reschedule 'void ()' inline
| `-CompoundStmt 0x55f32de0ee20 <col:35, line:240:5>
|   `-BinaryOperator 0x55f32de0ee00 <line:239:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x55f32de0eda8 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x55f32de0cef8
|     | `-MemberExpr 0x55f32de0ed60 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55f32de0d018
|     |   `-MemberExpr 0x55f32de0ed30 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x55f32de0d248
|     |     `-CXXThisExpr 0x55f32de0ed20 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x55f32de0ede8 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x55f32de0edd8 <col:32> 'bool' true
|-CXXMethodDecl 0x55f32de0c188 <line:250:5, line:253:5> line:250:17 strong_unschedule 'void ()' inline
| `-CompoundStmt 0x55f32de0f038 <col:37, line:253:5>
|   |-BinaryOperator 0x55f32de0ef18 <line:251:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x55f32de0eec0 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x55f32de0cef8
|   | | `-MemberExpr 0x55f32de0ee78 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55f32de0d018
|   | |   `-MemberExpr 0x55f32de0ee48 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x55f32de0d248
|   | |     `-CXXThisExpr 0x55f32de0ee38 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x55f32de0ef00 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x55f32de0eef0 <col:32> 'bool' false
|   `-BinaryOperator 0x55f32de0f018 <line:252:9, col:41> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x55f32de0efc0 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_strong_unscheduled 0x55f32de0cf58
|     | `-MemberExpr 0x55f32de0ef78 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55f32de0d018
|     |   `-MemberExpr 0x55f32de0ef48 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x55f32de0d248
|     |     `-CXXThisExpr 0x55f32de0ef38 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x55f32de0f000 <col:41> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x55f32de0eff0 <col:41> 'bool' true
|-CXXMethodDecl 0x55f32de0c248 <line:261:5, line:264:5> line:261:17 strong_reschedule 'void ()' inline
| `-CompoundStmt 0x55f32de0f1b8 <col:37, line:264:5>
|   |-BinaryOperator 0x55f32de0f138 <line:262:9, col:41> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x55f32de0f0e0 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_strong_unscheduled 0x55f32de0cf58
|   | | `-MemberExpr 0x55f32de0f098 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55f32de0d018
|   | |   `-MemberExpr 0x55f32de0f068 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x55f32de0d248
|   | |     `-CXXThisExpr 0x55f32de0f058 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x55f32de0f120 <col:41> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x55f32de0f110 <col:41> 'bool' false
|   `-CXXMemberCallExpr 0x55f32de0f198 <line:263:9, col:20> 'void'
|     `-MemberExpr 0x55f32de0f168 <col:9> '<bound member function type>' ->reschedule 0x55f32de0c008
|       `-CXXThisExpr 0x55f32de0f158 <col:9> 'Task *' implicit this
|-CXXMethodDecl 0x55f32de0c390 <line:275:5, col:39> col:10 move_thread 'void (int)'
| `-ParmVarDecl 0x55f32de0c300 <col:22, col:26> col:26 new_thread_id 'int'
|-CXXMethodDecl 0x55f32de0c460 <line:279:5, col:26> col:16 tickets 'int () const' inline
|-CXXMethodDecl 0x55f32de0c5a8 <line:280:5, col:34> col:17 used set_tickets 'void (int)' inline
| `-ParmVarDecl 0x55f32de0c518 <col:29, col:33> col:33 n 'int'
|-CXXMethodDecl 0x55f32de0c6f8 <line:281:5, col:41> col:17 adjust_tickets 'void (int)' inline
| `-ParmVarDecl 0x55f32de0c668 <col:32, col:36> col:36 delta 'int'
|-CXXMethodDecl 0x55f32de0c7c0 <line:284:5, col:22> col:17 fire 'bool ()' inline
|-CXXMethodDecl 0x55f32de0c880 <line:299:5, col:64> col:25 hook 'TaskCallback () const' inline
| `-DeprecatedAttr 0x55f32de0c920 <col:53> "" ""
|-CXXMethodDecl 0x55f32de0c9b8 <line:300:5, col:58> col:18 thunk 'void *() const' inline
| `-DeprecatedAttr 0x55f32de0ca58 <col:47> "" ""
|-AccessSpecDecl 0x55f32de0cac8 <line:303:3, col:10> col:3 private
|-FieldDecl 0x55f32de0cb08 <line:310:5, col:14> col:14 referenced _stride 'unsigned int'
|-FieldDecl 0x55f32de0cb70 <line:311:5, col:9> col:9 referenced _tickets 'int'
|-CXXRecordDecl 0x55f32de0cbc0 <line:314:5, line:321:5> line:314:11 union Status definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55f32de0ccd8 <col:5, col:11> col:11 implicit union Status
| |-CXXRecordDecl 0x55f32de0cd68 <line:315:9, line:319:9> line:315:9 struct definition
| | |-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | | |-DefaultConstructor exists trivial
| | | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | | |-MoveConstructor exists simple trivial
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial
| | |-FieldDecl 0x55f32de0ce98 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
| | |-FieldDecl 0x55f32de0cef8 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
| | |-FieldDecl 0x55f32de0cf58 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
| | |-CXXConstructorDecl 0x55f32de80138 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
| | |-CXXDestructorDecl 0x55f32de80210 <col:9> col:9 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x55f32de80210
| | |-CXXConstructorDecl 0x55f32de804c8 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x55f32de804c8
| | | `-ParmVarDecl 0x55f32de805d8 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
| | `-CXXConstructorDecl 0x55f32de80678 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x55f32de80678
| |   `-ParmVarDecl 0x55f32de80788 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'
| |-FieldDecl 0x55f32de0d018 <col:9> col:9 implicit referenced 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| |-IndirectFieldDecl 0x55f32de0d078 <line:316:21> col:21 implicit home_thread_id 'int16_t':'short'
| | |-Field 0x55f32de0d018 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x55f32de0ce98 'home_thread_id' 'int16_t':'short'
| |-IndirectFieldDecl 0x55f32de0d0d0 <line:317:21> col:21 implicit is_scheduled 'uint8_t':'unsigned char'
| | |-Field 0x55f32de0d018 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x55f32de0cef8 'is_scheduled' 'uint8_t':'unsigned char'
| |-IndirectFieldDecl 0x55f32de0d128 <line:318:21> col:21 implicit is_strong_unscheduled 'uint8_t':'unsigned char'
| | |-Field 0x55f32de0d018 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x55f32de0cf58 'is_strong_unscheduled' 'uint8_t':'unsigned char'
| |-FieldDecl 0x55f32de0d180 <line:320:9, col:18> col:18 status 'uint32_t':'unsigned int'
| |-CXXConstructorDecl 0x55f32de80048 <line:314:11> col:11 implicit used Status 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55f32de809a8 <col:11>
| |-CXXConstructorDecl 0x55f32de80318 <col:11> col:11 implicit constexpr Status 'void (const Task::Status &)' inline default trivial noexcept-unevaluated 0x55f32de80318
| | `-ParmVarDecl 0x55f32de80428 <col:11> col:11 'const Task::Status &'
| `-CXXConstructorDecl 0x55f32de80828 <col:11> col:11 implicit constexpr Status 'void (Task::Status &&)' inline default trivial noexcept-unevaluated 0x55f32de80828
|   `-ParmVarDecl 0x55f32de80938 <col:11> col:11 'Task::Status &&'
|-FieldDecl 0x55f32de0d248 <col:5, line:321:7> col:7 referenced _status 'union Status':'Task::Status'
|-FieldDecl 0x55f32de0d2c0 <line:323:5, col:18> col:18 referenced _hook 'TaskCallback':'bool (*)(Task *, void *)'
|-FieldDecl 0x55f32de0d328 <line:324:5, col:11> col:11 referenced _thunk 'void *'
|-FieldDecl 0x55f32de0d388 <line:335:5, col:19> col:19 referenced _thread 'RouterThread *'
|-FieldDecl 0x55f32de0d3e8 <line:337:5, col:14> col:14 referenced _owner 'Element *'
|-CXXRecordDecl 0x55f32de0d438 <line:339:5, line:342:5> line:339:11 referenced union Pending definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55f32de0d558 <col:5, col:11> col:11 implicit union Pending
| |-FieldDecl 0x55f32de0d5f8 <line:340:9, col:15> col:15 t 'Task *'
| |-FieldDecl 0x55f32de0d658 <line:341:9, col:19> col:19 referenced x 'uintptr_t':'unsigned long'
| |-CXXConstructorDecl 0x55f32de67948 <line:339:11> col:11 implicit constexpr Pending 'void (const Task::Pending &)' inline default trivial noexcept-unevaluated 0x55f32de67948
| | `-ParmVarDecl 0x55f32de67a58 <col:11> col:11 'const Task::Pending &'
| |-CXXConstructorDecl 0x55f32de67af8 <col:11> col:11 implicit constexpr Pending 'void (Task::Pending &&)' inline default trivial noexcept-unevaluated 0x55f32de67af8
| | `-ParmVarDecl 0x55f32de67c08 <col:11> col:11 'Task::Pending &&'
| |-CXXDestructorDecl 0x55f32de67c78 <col:11> col:11 implicit ~Pending 'void ()' inline default trivial noexcept-unevaluated 0x55f32de67c78
| |-CXXMethodDecl 0x55f32de684f8 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(const Task::Pending &)' inline default trivial noexcept-unevaluated 0x55f32de684f8
| | `-ParmVarDecl 0x55f32de68608 <col:11> col:11 'const Task::Pending &'
| |-CXXMethodDecl 0x55f32de68678 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(Task::Pending &&)' inline default trivial noexcept-unevaluated 0x55f32de68678
| | `-ParmVarDecl 0x55f32de68788 <col:11> col:11 'Task::Pending &&'
| `-CXXConstructorDecl 0x55f32de80a08 <col:11> col:11 implicit used Pending 'void () noexcept' inline default trivial
|   `-CompoundStmt 0x55f32de80ae0 <col:11>
|-FieldDecl 0x55f32de0d6d0 <line:343:5, col:13> col:13 referenced _pending_nextptr 'Task::Pending'
|-CXXConstructorDecl 0x55f32de0d818 <line:345:5, col:23> col:5 Task 'void (const Task &)'
| `-ParmVarDecl 0x55f32de0d758 <col:10, col:22> col:22 x 'const Task &'
|-CXXMethodDecl 0x55f32de0d9c8 <line:346:5, col:34> col:11 operator= 'Task &(const Task &)'
| `-ParmVarDecl 0x55f32de0d8d8 <col:21, col:33> col:33 x 'const Task &'
|-CXXMethodDecl 0x55f32de0da90 <line:347:5, col:18> col:10 cleanup 'void ()'
|-CXXMethodDecl 0x55f32de0db50 <line:352:5, col:37> col:17 used on_scheduled_list 'bool () const' inline
|-CXXMethodDecl 0x55f32de0dc10 <line:353:5, line:355:5> line:353:17 on_pending_list 'bool () const' inline
| `-CompoundStmt 0x55f32de0f2c8 <col:41, line:355:5>
|   `-ReturnStmt 0x55f32de0f2b8 <line:354:9, col:38>
|     `-BinaryOperator 0x55f32de0f298 <col:16, col:38> 'bool' '!='
|       |-ImplicitCastExpr 0x55f32de0f268 <col:16, col:33> 'uintptr_t':'unsigned long' <LValueToRValue>
|       | `-MemberExpr 0x55f32de0f218 <col:16, col:33> 'const uintptr_t':'const unsigned long' lvalue .x 0x55f32de0d658
|       |   `-MemberExpr 0x55f32de0f1e8 <col:16> 'const Task::Pending' lvalue ->_pending_nextptr 0x55f32de0d6d0
|       |     `-CXXThisExpr 0x55f32de0f1d8 <col:16> 'const Task *' implicit this
|       `-ImplicitCastExpr 0x55f32de0f280 <col:38> 'unsigned long' <IntegralCast>
|         `-IntegerLiteral 0x55f32de0f248 <col:38> 'int' 0
|-CXXMethodDecl 0x55f32de0dcd0 <line:356:5, col:33> col:17 needs_cleanup 'bool () const' inline
|-CXXMethodDecl 0x55f32de0de10 <line:361:5, col:33> col:10 add_pending 'void (bool)'
| `-ParmVarDecl 0x55f32de0dd80 <col:22, col:27> col:27 always 'bool'
|-CXXMethodDecl 0x55f32de0df88 <line:362:5, col:46> col:10 process_pending 'void (RouterThread *)'
| `-ParmVarDecl 0x55f32de0dec8 <col:26, col:40> col:40 thread 'RouterThread *'
|-CXXMethodDecl 0x55f32de0e0d0 <line:364:5, col:64> col:10 used complete_schedule 'void (RouterThread *)'
| `-ParmVarDecl 0x55f32de0e040 <col:28, col:42> col:42 process_pending_thread 'RouterThread *'
|-CXXMethodDecl 0x55f32de0e198 <line:365:5, col:44> col:17 remove_from_scheduled_list 'void ()' inline
|-CXXMethodDecl 0x55f32de0e360 <line:367:5, col:55> col:17 error_hook 'bool (Task *, void *)' static
| |-ParmVarDecl 0x55f32de0e248 <col:28, col:34> col:34 task 'Task *'
| `-ParmVarDecl 0x55f32de0e2c8 <col:40, col:46> col:46 user_data 'void *'
|-FriendDecl 0x55f32de0e460 <line:369:5, col:18> col:12 'class RouterThread':'RouterThread'
`-FriendDecl 0x55f32de0e4f0 <line:370:5, col:18> col:12 'class Master':'Master'

Layout: <CGRecordLayout
  LLVMType:%class.Task = type { %struct.TaskLink.base, i32, i32, %"union.Task::Status", i1 (%class.Task*, i8*)*, i8*, %class.RouterThread*, %class.Element*, %"union.Task::Pending" }
  NonVirtualBaseLLVMType:%class.Task = type { %struct.TaskLink.base, i32, i32, %"union.Task::Status", i1 (%class.Task*, i8*)*, i8*, %class.RouterThread*, %class.Element*, %"union.Task::Pending" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5)
         0 |   TimerCallback callback
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timer
         0 |   int _schedpos1
         8 |   class Timestamp _expiry_s
         8 |     union Timestamp::rep_t _t
         8 |       int64_t x
        16 |   union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5) _hook
        16 |     TimerCallback callback
        24 |   void * _thunk
        32 |   class Element * _owner
        40 |   class RouterThread * _thread
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f32ddf8298 <../dummy_inc/click/timer.hh:343:5, line:345:5> line:343:5 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x55f32ddf83c8 <line:344:2, col:16> col:16 referenced callback 'TimerCallback':'void (*)(Timer *, void *)'
`-CXXDestructorDecl 0x55f32ddf8eb8 <line:343:5> col:5 implicit ~ 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%union.anon.20 = type { void (%class.Timer*, i8*)* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f32ddf1008 prev 0x55f32dcead90 <../dummy_inc/click/timer.hh:14:1, line:358:1> line:14:7 class Timer definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55f32ddf1100 <col:1, col:7> col:7 implicit referenced class Timer
|-AccessSpecDecl 0x55f32ddf1190 <col:15, col:21> col:15 public
|-CXXConstructorDecl 0x55f32ddf11f0 <line:22:5, col:11> col:5 Timer 'void ()'
|-CXXRecordDecl 0x55f32ddf1298 <line:24:5, line:25:5> line:24:12 referenced struct do_nothing_t definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| `-CXXRecordDecl 0x55f32ddf13b8 <col:5, col:12> col:12 implicit struct do_nothing_t
|-CXXConstructorDecl 0x55f32ddf1558 <line:32:5, col:37> col:5 Timer 'void (const Timer::do_nothing_t &)'
| `-ParmVarDecl 0x55f32ddf1498 <col:11, col:31> col:31 unused 'const Timer::do_nothing_t &'
|-CXXConstructorDecl 0x55f32ddf17a8 <line:38:5, col:43> col:5 Timer 'void (TimerCallback, void *)'
| |-ParmVarDecl 0x55f32ddf1618 <col:11, col:25> col:25 f 'TimerCallback':'void (*)(Timer *, void *)'
| `-ParmVarDecl 0x55f32ddf1698 <col:28, col:34> col:34 user_data 'void *'
|-CXXConstructorDecl 0x55f32ddf5468 <line:43:5, col:27> col:5 Timer 'void (Element *)'
| `-ParmVarDecl 0x55f32ddf53a0 <col:11, col:20> col:20 element 'Element *'
|-CXXConstructorDecl 0x55f32ddf55e8 <line:47:5, col:21> col:5 Timer 'void (Task *)'
| `-ParmVarDecl 0x55f32ddf5528 <col:11, col:17> col:17 task 'Task *'
|-CXXConstructorDecl 0x55f32ddf5798 <line:52:5, col:25> col:5 Timer 'void (const Timer &)'
| `-ParmVarDecl 0x55f32ddf56d8 <col:11, col:24> col:24 x 'const Timer &'
|-CXXDestructorDecl 0x55f32ddf5890 <line:55:5, line:58:5> line:55:12 ~Timer 'void () noexcept' inline
| `-CompoundStmt 0x55f32ddf9090 <col:21, line:58:5>
|   `-IfStmt 0x55f32ddf9078 <line:56:2, line:57:17>
|     |-CXXMemberCallExpr 0x55f32ddf8fe0 <line:56:6, col:16> 'bool'
|     | `-MemberExpr 0x55f32ddf8fb0 <col:6> '<bound member function type>' ->scheduled 0x55f32ddf60e8
|     |   `-ImplicitCastExpr 0x55f32ddf9000 <col:6> 'const Timer *' <NoOp>
|     |     `-CXXThisExpr 0x55f32ddf8fa0 <col:6> 'Timer *' implicit this
|     `-CXXMemberCallExpr 0x55f32ddf9058 <line:57:6, col:17> 'void'
|       `-MemberExpr 0x55f32ddf9028 <col:6> '<bound member function type>' ->unschedule 0x55f32ddf7740
|         `-CXXThisExpr 0x55f32ddf9018 <col:6> 'Timer *' implicit this
|-CXXMethodDecl 0x55f32ddf5990 <line:62:5, line:65:5> line:62:17 used assign 'void ()' inline
| `-CompoundStmt 0x55f32ddf9230 <col:26, line:65:5>
|   |-BinaryOperator 0x55f32ddf9150 <line:63:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x55f32ddf90e8 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x55f32ddf83c8
|   | | `-MemberExpr 0x55f32ddf90b8 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x55f32ddf8488
|   | |   `-CXXThisExpr 0x55f32ddf90a8 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x55f32ddf9138 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f32ddf9118 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x55f32ddf88e8 'do_nothing_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x55f32ddf9210 <line:64:2, col:20> 'void *' lvalue '='
|     |-MemberExpr 0x55f32ddf9180 <col:2> 'void *' lvalue ->_thunk 0x55f32ddf8508
|     | `-CXXThisExpr 0x55f32ddf9170 <col:2> 'Timer *' implicit this
|     `-CStyleCastExpr 0x55f32ddf91e8 <col:11, col:20> 'void *' <IntegralToPointer>
|       `-IntegerLiteral 0x55f32ddf91b0 <col:20> 'int' 1
|-CXXMethodDecl 0x55f32ddf5ad0 <line:68:5, line:71:5> line:68:17 assign 'void (const Timer::do_nothing_t &)' inline
| |-ParmVarDecl 0x55f32ddf5a40 <col:24, col:44> col:44 used unused 'const Timer::do_nothing_t &'
| `-CompoundStmt 0x55f32ddf9390 <col:52, line:71:5>
|   |-CStyleCastExpr 0x55f32ddf9280 <line:69:2, col:9> 'void' <ToVoid>
|   | `-DeclRefExpr 0x55f32ddf9250 <col:9> 'const Timer::do_nothing_t' lvalue ParmVar 0x55f32ddf5a40 'unused' 'const Timer::do_nothing_t &'
|   `-CXXMemberCallExpr 0x55f32ddf9370 <line:70:2, col:9> 'void'
|     `-MemberExpr 0x55f32ddf9340 <col:2> '<bound member function type>' ->assign 0x55f32ddf5990
|       `-CXXThisExpr 0x55f32ddf9330 <col:2> 'Timer *' implicit this
|-CXXMethodDecl 0x55f32ddf5ca0 <line:76:5, line:79:5> line:76:17 assign 'void (TimerCallback, void *)' inline
| |-ParmVarDecl 0x55f32ddf5b88 <col:24, col:38> col:38 used f 'TimerCallback':'void (*)(Timer *, void *)'
| |-ParmVarDecl 0x55f32ddf5c08 <col:41, col:47> col:47 used user_data 'void *'
| `-CompoundStmt 0x55f32ddf9510 <col:58, line:79:5>
|   |-BinaryOperator 0x55f32ddf9458 <line:77:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x55f32ddf93f0 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x55f32ddf83c8
|   | | `-MemberExpr 0x55f32ddf93c0 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x55f32ddf8488
|   | |   `-CXXThisExpr 0x55f32ddf93b0 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x55f32ddf9440 <col:19> 'TimerCallback':'void (*)(Timer *, void *)' <LValueToRValue>
|   |   `-DeclRefExpr 0x55f32ddf9420 <col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue ParmVar 0x55f32ddf5b88 'f' 'TimerCallback':'void (*)(Timer *, void *)'
|   `-BinaryOperator 0x55f32ddf94f0 <line:78:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x55f32ddf9488 <col:2> 'void *' lvalue ->_thunk 0x55f32ddf8508
|     | `-CXXThisExpr 0x55f32ddf9478 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x55f32ddf94d8 <col:11> 'void *' <LValueToRValue>
|       `-DeclRefExpr 0x55f32ddf94b8 <col:11> 'void *' lvalue ParmVar 0x55f32ddf5c08 'user_data' 'void *'
|-CXXMethodDecl 0x55f32ddf5df0 <line:84:5, line:87:5> line:84:10 assign 'void (Element *)'
| |-ParmVarDecl 0x55f32ddf5d60 <col:17, col:26> col:26 used element 'Element *'
| `-CompoundStmt 0x55f32ddf96a8 <col:35, line:87:5>
|   |-BinaryOperator 0x55f32ddf95d8 <line:85:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x55f32ddf9570 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x55f32ddf83c8
|   | | `-MemberExpr 0x55f32ddf9540 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x55f32ddf8488
|   | |   `-CXXThisExpr 0x55f32ddf9530 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x55f32ddf95c0 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f32ddf95a0 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x55f32ddf8ac0 'element_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x55f32ddf9688 <line:86:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x55f32ddf9608 <col:2> 'void *' lvalue ->_thunk 0x55f32ddf8508
|     | `-CXXThisExpr 0x55f32ddf95f8 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x55f32ddf9670 <col:11> 'void *' <BitCast>
|       `-ImplicitCastExpr 0x55f32ddf9658 <col:11> 'Element *' <LValueToRValue>
|         `-DeclRefExpr 0x55f32ddf9638 <col:11> 'Element *' lvalue ParmVar 0x55f32ddf5d60 'element' 'Element *'
|-CXXMethodDecl 0x55f32ddf5f38 <line:91:5, line:94:5> line:91:10 assign 'void (Task *)'
| |-ParmVarDecl 0x55f32ddf5ea8 <col:17, col:23> col:23 used task 'Task *'
| `-CompoundStmt 0x55f32ddf9840 <col:29, line:94:5>
|   |-BinaryOperator 0x55f32ddf9770 <line:92:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x55f32ddf9708 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x55f32ddf83c8
|   | | `-MemberExpr 0x55f32ddf96d8 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x55f32ddf8488
|   | |   `-CXXThisExpr 0x55f32ddf96c8 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x55f32ddf9758 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f32ddf9738 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x55f32ddf8c98 'task_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x55f32ddf9820 <line:93:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x55f32ddf97a0 <col:2> 'void *' lvalue ->_thunk 0x55f32ddf8508
|     | `-CXXThisExpr 0x55f32ddf9790 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x55f32ddf9808 <col:11> 'void *' <BitCast>
|       `-ImplicitCastExpr 0x55f32ddf97f0 <col:11> 'Task *' <LValueToRValue>
|         `-DeclRefExpr 0x55f32ddf97d0 <col:11> 'Task *' lvalue ParmVar 0x55f32ddf5ea8 'task' 'Task *'
|-CXXMethodDecl 0x55f32ddf6028 <line:98:5, line:100:5> line:98:17 initialized 'bool () const' inline
| `-CompoundStmt 0x55f32ddf9920 <col:37, line:100:5>
|   `-ReturnStmt 0x55f32ddf9910 <line:99:2, col:19>
|     `-BinaryOperator 0x55f32ddf98f0 <col:9, col:19> 'bool' '!='
|       |-ImplicitCastExpr 0x55f32ddf98c0 <col:9> 'Element *' <LValueToRValue>
|       | `-MemberExpr 0x55f32ddf9870 <col:9> 'Element *const' lvalue ->_owner 0x55f32ddf8568
|       |   `-CXXThisExpr 0x55f32ddf9860 <col:9> 'const Timer *' implicit this
|       `-ImplicitCastExpr 0x55f32ddf98d8 <col:19> 'Element *' <NullToPointer>
|         `-IntegerLiteral 0x55f32ddf98a0 <col:19> 'int' 0
|-CXXMethodDecl 0x55f32ddf60e8 <line:103:5, line:105:5> line:103:17 used scheduled 'bool () const' inline
| `-CompoundStmt 0x55f32ddf99e0 <col:35, line:105:5>
|   `-ReturnStmt 0x55f32ddf99d0 <line:104:2, col:23>
|     `-BinaryOperator 0x55f32ddf99b0 <col:9, col:23> 'bool' '!='
|       |-ImplicitCastExpr 0x55f32ddf9998 <col:9> 'int' <LValueToRValue>
|       | `-MemberExpr 0x55f32ddf9948 <col:9> 'const int' lvalue ->_schedpos1 0x55f32ddf81e8
|       |   `-CXXThisExpr 0x55f32ddf9938 <col:9> 'const Timer *' implicit this
|       `-IntegerLiteral 0x55f32ddf9978 <col:23> 'int' 0
|-CXXMethodDecl 0x55f32ddf61a8 <line:116:5, line:118:5> line:116:29 used expiry_steady 'const Timestamp &() const' inline
| `-CompoundStmt 0x55f32ddf9a48 <col:51, line:118:5>
|   `-ReturnStmt 0x55f32ddf9a38 <line:117:2, col:9>
|     `-MemberExpr 0x55f32ddf9a08 <col:9> 'const Timestamp' lvalue ->_expiry_s 0x55f32ddf8248
|       `-CXXThisExpr 0x55f32ddf99f8 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x55f32ddf6268 <line:131:5, line:136:5> line:131:22 expiry 'Timestamp () const' inline
| `-CompoundStmt 0x55f32ddf9fa0 <col:37, line:136:5>
|   `-IfStmt 0x55f32ddf9f78 <line:132:2, line:135:13> has_else
|     |-ImplicitCastExpr 0x55f32ddf9b08 <line:132:6> 'bool' <MemberPointerToBoolean>
|     | `-ImplicitCastExpr 0x55f32ddf9af0 <col:6> 'Timestamp::unspecified_bool_type':'Timestamp::seconds_type (Timestamp::*)() const' <UserDefinedConversion>
|     |   `-CXXMemberCallExpr 0x55f32ddf9ad0 <col:6> 'Timestamp::unspecified_bool_type':'Timestamp::seconds_type (Timestamp::*)() const'
|     |     `-MemberExpr 0x55f32ddf9aa0 <col:6> '<bound member function type>' .operator int (Timestamp::*)() const 0x55f32dc7ce68
|     |       `-MemberExpr 0x55f32ddf9a70 <col:6> 'const Timestamp' lvalue ->_expiry_s 0x55f32ddf8248
|     |         `-CXXThisExpr 0x55f32ddf9a60 <col:6> 'const Timer *' implicit this
|     |-ReturnStmt 0x55f32ddf9ee8 <line:133:6, col:72>
|     | `-ExprWithCleanups 0x55f32ddf9ed0 <col:13, col:72> 'Timestamp'
|     |   `-CXXConstructExpr 0x55f32ddf9ea0 <col:13, col:72> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|     |     `-MaterializeTemporaryExpr 0x55f32ddf9e88 <col:13, col:72> 'Timestamp' xvalue
|     |       `-CXXOperatorCallExpr 0x55f32ddf9e50 <col:13, col:72> 'Timestamp'
|     |         |-ImplicitCastExpr 0x55f32ddf9e38 <col:45> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|     |         | `-DeclRefExpr 0x55f32ddf9e18 <col:45> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55f32dcab640 'operator-' 'Timestamp (Timestamp, const Timestamp &)'
|     |         |-CXXConstructExpr 0x55f32ddf9db8 <col:13, col:43> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|     |         | `-MaterializeTemporaryExpr 0x55f32ddf9da0 <col:13, col:43> 'Timestamp' xvalue
|     |         |   `-CXXOperatorCallExpr 0x55f32ddf9cc8 <col:13, col:43> 'Timestamp'
|     |         |     |-ImplicitCastExpr 0x55f32ddf9cb0 <col:23> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|     |         |     | `-DeclRefExpr 0x55f32ddf9c90 <col:23> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55f32dcab300 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|     |         |     |-CXXConstructExpr 0x55f32ddf9c30 <col:13> 'Timestamp' 'void (const Timestamp &) noexcept'
|     |         |     | `-MemberExpr 0x55f32ddf9b30 <col:13> 'const Timestamp' lvalue ->_expiry_s 0x55f32ddf8248
|     |         |     |   `-CXXThisExpr 0x55f32ddf9b20 <col:13> 'const Timer *' implicit this
|     |         |     `-MaterializeTemporaryExpr 0x55f32ddf9c78 <col:25, col:43> 'const Timestamp' lvalue
|     |         |       `-ImplicitCastExpr 0x55f32ddf9c60 <col:25, col:43> 'const Timestamp' <NoOp>
|     |         |         `-CallExpr 0x55f32ddf9c10 <col:25, col:43> 'Timestamp'
|     |         |           `-ImplicitCastExpr 0x55f32ddf9bf8 <col:25, col:36> 'Timestamp (*)()' <FunctionToPointerDecay>
|     |         |             `-DeclRefExpr 0x55f32ddf9b98 <col:25, col:36> 'Timestamp ()' lvalue CXXMethod 0x55f32dc9e960 'recent' 'Timestamp ()'
|     |         `-MaterializeTemporaryExpr 0x55f32ddf9e00 <col:47, col:72> 'const Timestamp' lvalue
|     |           `-ImplicitCastExpr 0x55f32ddf9de8 <col:47, col:72> 'const Timestamp' <NoOp>
|     |             `-CallExpr 0x55f32ddf9d80 <col:47, col:72> 'Timestamp'
|     |               `-ImplicitCastExpr 0x55f32ddf9d68 <col:47, col:58> 'Timestamp (*)()' <FunctionToPointerDecay>
|     |                 `-DeclRefExpr 0x55f32ddf9d38 <col:47, col:58> 'Timestamp ()' lvalue CXXMethod 0x55f32daf9eb0 'recent_steady' 'Timestamp ()'
|     `-ReturnStmt 0x55f32ddf9f68 <line:135:6, col:13>
|       `-CXXConstructExpr 0x55f32ddf9f38 <col:13> 'Timestamp' 'void (const Timestamp &) noexcept'
|         `-MemberExpr 0x55f32ddf9f08 <col:13> 'const Timestamp' lvalue ->_expiry_s 0x55f32ddf8248
|           `-CXXThisExpr 0x55f32ddf9ef8 <col:13> 'const Timer *' implicit this
|-CXXMethodDecl 0x55f32ddf6328 <line:139:5, line:141:5> line:139:20 router 'Router *() const' inline
| `-CompoundStmt 0x55f32ddfa088 <col:35, line:141:5>
|   `-ReturnStmt 0x55f32ddfa078 <line:140:2, col:24>
|     `-CXXMemberCallExpr 0x55f32ddfa040 <col:9, col:24> 'Router *'
|       `-MemberExpr 0x55f32ddfa010 <col:9, col:17> '<bound member function type>' ->router 0x55f32dcfd4f0
|         `-ImplicitCastExpr 0x55f32ddfa060 <col:9> 'const Element *' <NoOp>
|           `-ImplicitCastExpr 0x55f32ddf9ff8 <col:9> 'Element *' <LValueToRValue>
|             `-MemberExpr 0x55f32ddf9fc8 <col:9> 'Element *const' lvalue ->_owner 0x55f32ddf8568
|               `-CXXThisExpr 0x55f32ddf9fb8 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x55f32ddf63e8 <line:144:5, line:146:5> line:144:21 element 'Element *() const' inline
| `-CompoundStmt 0x55f32ddfa108 <col:37, line:146:5>
|   `-ReturnStmt 0x55f32ddfa0f8 <line:145:2, col:9>
|     `-ImplicitCastExpr 0x55f32ddfa0e0 <col:9> 'Element *' <LValueToRValue>
|       `-MemberExpr 0x55f32ddfa0b0 <col:9> 'Element *const' lvalue ->_owner 0x55f32ddf8568
|         `-CXXThisExpr 0x55f32ddfa0a0 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x55f32ddf64a8 <line:149:5, line:151:5> line:149:26 thread 'RouterThread *() const' inline
| `-CompoundStmt 0x55f32ddfa188 <col:41, line:151:5>
|   `-ReturnStmt 0x55f32ddfa178 <line:150:2, col:9>
|     `-ImplicitCastExpr 0x55f32ddfa160 <col:9> 'RouterThread *' <LValueToRValue>
|       `-MemberExpr 0x55f32ddfa130 <col:9> 'RouterThread *const' lvalue ->_thread 0x55f32ddf85c8
|         `-CXXThisExpr 0x55f32ddfa120 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x55f32ddf6570 <line:154:5, col:26> col:9 home_thread_id 'int () const'
|-CXXMethodDecl 0x55f32ddf6768 <line:171:5, col:55> col:10 initialize 'void (Element *, bool)'
| |-ParmVarDecl 0x55f32ddf6620 <col:21, col:30> col:30 owner 'Element *'
| `-ParmVarDecl 0x55f32ddf6698 <col:37, col:50> col:42 quiet 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55f32ddf8ea8 <col:50> 'bool' false
|-CXXMethodDecl 0x55f32ddf68e8 <line:181:5, col:35> col:10 initialize 'void (Router *)'
| `-ParmVarDecl 0x55f32ddf6828 <col:21, col:29> col:29 router 'Router *'
|-CXXMethodDecl 0x55f32ddf6a30 <line:191:5, col:57> col:10 used schedule_at_steady 'void (const Timestamp &)'
| `-ParmVarDecl 0x55f32ddf69a0 <col:29, col:46> col:46 when_steady 'const Timestamp &'
|-CXXMethodDecl 0x55f32ddf6b78 <line:197:5, col:59> col:10 reschedule_at_steady 'void (const Timestamp &)'
| `-ParmVarDecl 0x55f32ddf6ae8 <col:31, col:48> col:48 when_steady 'const Timestamp &'
|-CXXMethodDecl 0x55f32ddf6cc0 <line:210:5, col:50> col:17 used schedule_at 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x55f32ddf6c30 <col:29, col:46> col:46 when 'const Timestamp &'
|-CXXMethodDecl 0x55f32ddf6e08 <line:216:5, col:52> col:17 reschedule_at 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x55f32ddf6d78 <col:31, col:48> col:48 when 'const Timestamp &'
|-CXXMethodDecl 0x55f32ddf6ed0 <line:221:5, line:223:5> line:221:17 schedule_now 'void ()' inline
| `-CompoundStmt 0x55f32ddfa2f0 <col:32, line:223:5>
|   `-ExprWithCleanups 0x55f32ddfa2d8 <line:222:2, col:47> 'void'
|     `-CXXMemberCallExpr 0x55f32ddfa280 <col:2, col:47> 'void'
|       |-MemberExpr 0x55f32ddfa1b0 <col:2> '<bound member function type>' ->schedule_at_steady 0x55f32ddf6a30
|       | `-CXXThisExpr 0x55f32ddfa1a0 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55f32ddfa2c0 <col:21, col:46> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55f32ddfa2a8 <col:21, col:46> 'const Timestamp' <NoOp>
|           `-CallExpr 0x55f32ddfa260 <col:21, col:46> 'Timestamp'
|             `-ImplicitCastExpr 0x55f32ddfa248 <col:21, col:32> 'Timestamp (*)()' <FunctionToPointerDecay>
|               `-DeclRefExpr 0x55f32ddfa218 <col:21, col:32> 'Timestamp ()' lvalue CXXMethod 0x55f32daf9eb0 'recent_steady' 'Timestamp ()'
|-CXXMethodDecl 0x55f32ddf7010 <line:233:5, col:47> col:10 used schedule_after 'void (const Timestamp &)'
| `-ParmVarDecl 0x55f32ddf6f80 <col:25, col:42> col:42 delta 'const Timestamp &'
|-CXXMethodDecl 0x55f32ddf7158 <line:239:5, line:241:5> line:239:17 used schedule_after_sec 'void (uint32_t)' inline
| |-ParmVarDecl 0x55f32ddf70c8 <col:36, col:45> col:45 used delta_sec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55f32ddfa478 <col:56, line:241:5>
|   `-ExprWithCleanups 0x55f32ddfa460 <line:240:2, col:40> 'void'
|     `-CXXMemberCallExpr 0x55f32ddfa408 <col:2, col:40> 'void'
|       |-MemberExpr 0x55f32ddfa318 <col:2> '<bound member function type>' ->schedule_after 0x55f32ddf7010
|       | `-CXXThisExpr 0x55f32ddfa308 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55f32ddfa448 <col:17, col:39> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55f32ddfa430 <col:17, col:39> 'const Timestamp' <NoOp>
|           `-CXXTemporaryObjectExpr 0x55f32ddfa3c8 <col:17, col:39> 'Timestamp' 'void (unsigned int, uint32_t)'
|             |-ImplicitCastExpr 0x55f32ddfa398 <col:27> 'uint32_t':'unsigned int' <LValueToRValue>
|             | `-DeclRefExpr 0x55f32ddfa358 <col:27> 'uint32_t':'unsigned int' lvalue ParmVar 0x55f32ddf70c8 'delta_sec' 'uint32_t':'unsigned int'
|             `-ImplicitCastExpr 0x55f32ddfa3b0 <col:38> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x55f32ddfa378 <col:38> 'int' 0
|-CXXMethodDecl 0x55f32ddf72a0 <line:247:5, line:249:5> line:247:17 used schedule_after_msec 'void (uint32_t)' inline
| |-ParmVarDecl 0x55f32ddf7210 <col:37, col:46> col:46 used delta_msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55f32ddfa6e8 <col:58, line:249:5>
|   `-ExprWithCleanups 0x55f32ddfa6d0 <line:248:2, col:49> 'void'
|     `-CXXMemberCallExpr 0x55f32ddfa678 <col:2, col:49> 'void'
|       |-MemberExpr 0x55f32ddfa4a0 <col:2> '<bound member function type>' ->schedule_after 0x55f32ddf7010
|       | `-CXXThisExpr 0x55f32ddfa490 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55f32ddfa6b8 <col:17, col:48> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55f32ddfa6a0 <col:17, col:48> 'const Timestamp' <NoOp>
|           `-CallExpr 0x55f32ddfa620 <col:17, col:48> 'Timestamp'
|             |-ImplicitCastExpr 0x55f32ddfa608 <col:17, col:28> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x55f32ddfa578 <col:17, col:28> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x55f32dc7ec58 'make_msec' 'Timestamp (Timestamp::value_type)'
|             `-ImplicitCastExpr 0x55f32ddfa660 <col:38> 'Timestamp::value_type':'long' <IntegralCast>
|               `-ImplicitCastExpr 0x55f32ddfa648 <col:38> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x55f32ddfa558 <col:38> 'uint32_t':'unsigned int' lvalue ParmVar 0x55f32ddf7210 'delta_msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f32ddf73e8 <line:259:5, line:261:5> line:259:17 reschedule_after 'void (const Timestamp &)' inline
| |-ParmVarDecl 0x55f32ddf7358 <col:34, col:51> col:51 used delta 'const Timestamp &'
| `-CompoundStmt 0x55f32ddfa8c8 <col:58, line:261:5>
|   `-ExprWithCleanups 0x55f32ddfa8b0 <line:260:2, col:38> 'void'
|     `-CXXMemberCallExpr 0x55f32ddfa858 <col:2, col:38> 'void'
|       |-MemberExpr 0x55f32ddfa710 <col:2> '<bound member function type>' ->schedule_at_steady 0x55f32ddf6a30
|       | `-CXXThisExpr 0x55f32ddfa700 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55f32ddfa898 <col:21, col:33> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55f32ddfa880 <col:21, col:33> 'const Timestamp' <NoOp>
|           `-CXXOperatorCallExpr 0x55f32ddfa820 <col:21, col:33> 'Timestamp'
|             |-ImplicitCastExpr 0x55f32ddfa808 <col:31> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x55f32ddfa7e8 <col:31> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55f32dcab300 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|             |-CXXConstructExpr 0x55f32ddfa7b8 <col:21> 'Timestamp' 'void (const Timestamp &) noexcept'
|             | `-ImplicitCastExpr 0x55f32ddfa7a0 <col:21> 'const Timestamp' lvalue <NoOp>
|             |   `-MemberExpr 0x55f32ddfa750 <col:21> 'Timestamp' lvalue ->_expiry_s 0x55f32ddf8248
|             |     `-CXXThisExpr 0x55f32ddfa740 <col:21> 'Timer *' implicit this
|             `-DeclRefExpr 0x55f32ddfa780 <col:33> 'const Timestamp' lvalue ParmVar 0x55f32ddf7358 'delta' 'const Timestamp &'
|-CXXMethodDecl 0x55f32ddf7530 <line:268:5, line:270:5> line:268:17 used reschedule_after_sec 'void (uint32_t)' inline
| |-ParmVarDecl 0x55f32ddf74a0 <col:38, col:47> col:47 used delta_sec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55f32ddfaba0 <col:58, line:270:5>
|   `-ExprWithCleanups 0x55f32ddfab88 <line:269:2, col:79> 'void'
|     `-CXXMemberCallExpr 0x55f32ddfab30 <col:2, col:79> 'void'
|       |-MemberExpr 0x55f32ddfa8f0 <col:2> '<bound member function type>' ->schedule_at_steady 0x55f32ddf6a30
|       | `-CXXThisExpr 0x55f32ddfa8e0 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55f32ddfab70 <col:21, col:78> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55f32ddfab58 <col:21, col:78> 'const Timestamp' <NoOp>
|           `-CXXTemporaryObjectExpr 0x55f32ddfaaf0 <col:21, col:78> 'Timestamp' 'void (unsigned int, uint32_t)'
|             |-BinaryOperator 0x55f32ddfaa28 <col:31, col:49> 'unsigned int' '+'
|             | |-ImplicitCastExpr 0x55f32ddfaa10 <col:31, col:45> 'unsigned int' <IntegralCast>
|             | | `-CXXMemberCallExpr 0x55f32ddfa9a0 <col:31, col:45> 'Timestamp::seconds_type':'int'
|             | |   `-MemberExpr 0x55f32ddfa970 <col:31, col:41> '<bound member function type>' .sec 0x55f32dafb9a8
|             | |     `-ImplicitCastExpr 0x55f32ddfa9c0 <col:31> 'const Timestamp' lvalue <NoOp>
|             | |       `-MemberExpr 0x55f32ddfa940 <col:31> 'Timestamp' lvalue ->_expiry_s 0x55f32ddf8248
|             | |         `-CXXThisExpr 0x55f32ddfa930 <col:31> 'Timer *' implicit this
|             | `-ImplicitCastExpr 0x55f32ddfa9f8 <col:49> 'uint32_t':'unsigned int' <LValueToRValue>
|             |   `-DeclRefExpr 0x55f32ddfa9d8 <col:49> 'uint32_t':'unsigned int' lvalue ParmVar 0x55f32ddf74a0 'delta_sec' 'uint32_t':'unsigned int'
|             `-CXXMemberCallExpr 0x55f32ddfaab8 <col:60, col:77> 'uint32_t':'unsigned int'
|               `-MemberExpr 0x55f32ddfaa88 <col:60, col:70> '<bound member function type>' .subsec 0x55f32dafc0a0
|                 `-ImplicitCastExpr 0x55f32ddfaad8 <col:60> 'const Timestamp' lvalue <NoOp>
|                   `-MemberExpr 0x55f32ddfaa58 <col:60> 'Timestamp' lvalue ->_expiry_s 0x55f32ddf8248
|                     `-CXXThisExpr 0x55f32ddfaa48 <col:60> 'Timer *' implicit this
|-CXXMethodDecl 0x55f32ddf7678 <line:277:5, line:279:5> line:277:17 used reschedule_after_msec 'void (uint32_t)' inline
| |-ParmVarDecl 0x55f32ddf75e8 <col:39, col:48> col:48 used delta_msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55f32ddfaed8 <col:60, line:279:5>
|   `-ExprWithCleanups 0x55f32ddfaec0 <line:278:2, col:65> 'void'
|     `-CXXMemberCallExpr 0x55f32ddfae68 <col:2, col:65> 'void'
|       |-MemberExpr 0x55f32ddfabc8 <col:2> '<bound member function type>' ->schedule_at_steady 0x55f32ddf6a30
|       | `-CXXThisExpr 0x55f32ddfabb8 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55f32ddfaea8 <col:21, col:64> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55f32ddfae90 <col:21, col:64> 'const Timestamp' <NoOp>
|           `-CXXOperatorCallExpr 0x55f32ddfae30 <col:21, col:64> 'Timestamp'
|             |-ImplicitCastExpr 0x55f32ddfae18 <col:31> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x55f32ddfadf8 <col:31> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55f32dcab300 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|             |-CXXConstructExpr 0x55f32ddfad98 <col:21> 'Timestamp' 'void (const Timestamp &) noexcept'
|             | `-ImplicitCastExpr 0x55f32ddfad80 <col:21> 'const Timestamp' lvalue <NoOp>
|             |   `-MemberExpr 0x55f32ddfac08 <col:21> 'Timestamp' lvalue ->_expiry_s 0x55f32ddf8248
|             |     `-CXXThisExpr 0x55f32ddfabf8 <col:21> 'Timer *' implicit this
|             `-MaterializeTemporaryExpr 0x55f32ddfade0 <col:33, col:64> 'const Timestamp' lvalue
|               `-ImplicitCastExpr 0x55f32ddfadc8 <col:33, col:64> 'const Timestamp' <NoOp>
|                 `-CallExpr 0x55f32ddfad28 <col:33, col:64> 'Timestamp'
|                   |-ImplicitCastExpr 0x55f32ddfad10 <col:33, col:44> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|                   | `-DeclRefExpr 0x55f32ddface0 <col:33, col:44> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x55f32dc7ec58 'make_msec' 'Timestamp (Timestamp::value_type)'
|                   `-ImplicitCastExpr 0x55f32ddfad68 <col:54> 'Timestamp::value_type':'long' <IntegralCast>
|                     `-ImplicitCastExpr 0x55f32ddfad50 <col:54> 'uint32_t':'unsigned int' <LValueToRValue>
|                       `-DeclRefExpr 0x55f32ddfacc0 <col:54> 'uint32_t':'unsigned int' lvalue ParmVar 0x55f32ddf75e8 'delta_msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f32ddf7740 <line:285:5, col:21> col:10 used unschedule 'void ()'
|-CXXMethodDecl 0x55f32ddf7800 <line:288:5, line:291:5> line:288:17 clear 'void ()' inline
| `-CompoundStmt 0x55f32ddfb3a0 <col:25, line:291:5>
|   |-CXXMemberCallExpr 0x55f32ddfaf30 <line:289:2, col:13> 'void'
|   | `-MemberExpr 0x55f32ddfaf00 <col:2> '<bound member function type>' ->unschedule 0x55f32ddf7740
|   |   `-CXXThisExpr 0x55f32ddfaef0 <col:2> 'Timer *' implicit this
|   `-ExprWithCleanups 0x55f32ddfb388 <line:290:2, col:24> 'Timestamp' lvalue
|     `-CXXOperatorCallExpr 0x55f32ddfb350 <col:2, col:24> 'Timestamp' lvalue
|       |-ImplicitCastExpr 0x55f32ddfb338 <col:12> 'Timestamp &(*)(Timestamp &&) noexcept' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55f32ddfafe8 <col:12> 'Timestamp &(Timestamp &&) noexcept' lvalue CXXMethod 0x55f32d992d28 'operator=' 'Timestamp &(Timestamp &&) noexcept'
|       |-MemberExpr 0x55f32ddfaf60 <col:2> 'Timestamp' lvalue ->_expiry_s 0x55f32ddf8248
|       | `-CXXThisExpr 0x55f32ddfaf50 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55f32ddfafd0 <col:14, col:24> 'Timestamp' xvalue
|         `-CXXTemporaryObjectExpr 0x55f32ddfafa0 <col:14, col:24> 'Timestamp' 'void ()'
|-CXXMethodDecl 0x55f32ddf78c0 <line:304:5, line:310:5> line:304:29 used adjustment 'Timestamp ()' static inline
| `-CompoundStmt 0x55f32ddfb6f8 <col:42, line:310:5>
|   |-IfStmt 0x55f32ddfb540 <line:306:2, line:307:23>
|   | |-CallExpr 0x55f32ddfb470 <line:306:6, col:30> 'bool'
|   | | `-ImplicitCastExpr 0x55f32ddfb458 <col:6, col:17> 'bool (*)()' <FunctionToPointerDecay>
|   | |   `-DeclRefExpr 0x55f32ddfb3f8 <col:6, col:17> 'bool ()' lvalue CXXMethod 0x55f32dc9cdd0 'warp_jumping' 'bool ()'
|   | `-ReturnStmt 0x55f32ddfb530 <line:307:6, col:23>
|   |   `-ExprWithCleanups 0x55f32ddfb518 <col:13, col:23> 'Timestamp'
|   |     `-CXXConstructExpr 0x55f32ddfb4e8 <col:13, col:23> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x55f32ddfb4d0 <col:13, col:23> 'Timestamp' xvalue
|   |         `-CXXTemporaryObjectExpr 0x55f32ddfb4a0 <col:13, col:23> 'Timestamp' 'void ()'
|   `-ReturnStmt 0x55f32ddfb6e8 <line:309:2, col:33>
|     `-ExprWithCleanups 0x55f32ddfb6d0 <col:9, col:33> 'Timestamp'
|       `-CXXConstructExpr 0x55f32ddfb6a0 <col:9, col:33> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55f32ddfb688 <col:9, col:33> 'Timestamp' xvalue
|           `-CallExpr 0x55f32ddfb648 <col:9, col:33> 'Timestamp'
|             |-ImplicitCastExpr 0x55f32ddfb630 <col:9, col:20> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x55f32ddfb600 <col:9, col:20> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x55f32dc7ef70 'make_usec' 'Timestamp (Timestamp::value_type)'
|             `-ImplicitCastExpr 0x55f32ddfb670 <col:30> 'Timestamp::value_type':'long' <IntegralCast>
|               `-IntegerLiteral 0x55f32ddfb5e0 <col:30> 'int' 500
|-CXXMethodDecl 0x55f32ddf7a00 <line:317:5, col:80> col:17 schedule_after_s 'void (uint32_t)' inline
| |-ParmVarDecl 0x55f32ddf7970 <col:34, col:43> col:43 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55f32ddf7aa8 <col:69> "" ""
|-CXXMethodDecl 0x55f32ddf7bb8 <line:323:5, col:81> col:17 schedule_after_ms 'void (uint32_t)' inline
| |-ParmVarDecl 0x55f32ddf7b28 <col:35, col:44> col:44 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55f32ddf7c60 <col:70> "" ""
|-CXXMethodDecl 0x55f32ddf7d70 <line:329:5, col:82> col:17 reschedule_after_s 'void (uint32_t)' inline
| |-ParmVarDecl 0x55f32ddf7ce0 <col:36, col:45> col:45 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55f32ddf7e18 <col:71> "" ""
|-CXXMethodDecl 0x55f32ddf7f28 <line:335:5, col:83> col:17 reschedule_after_ms 'void (uint32_t)' inline
| |-ParmVarDecl 0x55f32ddf7e98 <col:37, col:46> col:46 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55f32ddf7fd0 <col:72> "" ""
|-EnumDecl 0x55f32ddf8040 <line:337:5, col:27> col:5
| `-EnumConstantDecl 0x55f32ddf8140 <col:12, col:25> col:12 behind_sec 'Timer::(anonymous enum at ../dummy_inc/click/timer.hh:337:5)'
|   `-ImplicitCastExpr 0x55f32ddf8190 <col:25> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55f32ddf8120 <col:25> 'int' Int: 1
|       `-IntegerLiteral 0x55f32ddf8100 <col:25> 'int' 1
|-AccessSpecDecl 0x55f32ddf81a8 <line:339:3, col:10> col:3 private
|-FieldDecl 0x55f32ddf81e8 <line:341:5, col:9> col:9 referenced _schedpos1 'int'
|-FieldDecl 0x55f32ddf8248 <line:342:5, col:15> col:15 referenced _expiry_s 'Timestamp'
|-CXXRecordDecl 0x55f32ddf8298 <line:343:5, line:345:5> line:343:5 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x55f32ddf83c8 <line:344:2, col:16> col:16 referenced callback 'TimerCallback':'void (*)(Timer *, void *)'
| `-CXXDestructorDecl 0x55f32ddf8eb8 <line:343:5> col:5 implicit ~ 'void () noexcept' inline default trivial
|-FieldDecl 0x55f32ddf8488 <col:5, line:345:7> col:7 referenced _hook 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)'
|-FieldDecl 0x55f32ddf8508 <line:346:5, col:11> col:11 referenced _thunk 'void *'
|-FieldDecl 0x55f32ddf8568 <line:347:5, col:14> col:14 referenced _owner 'Element *'
|-FieldDecl 0x55f32ddf85c8 <line:348:5, col:19> col:19 referenced _thread 'RouterThread *'
|-CXXMethodDecl 0x55f32ddf8718 <line:350:5, col:36> col:12 operator= 'Timer &(const Timer &)'
| `-ParmVarDecl 0x55f32ddf8628 <col:22, col:35> col:35 x 'const Timer &'
|-CXXMethodDecl 0x55f32ddf88e8 <line:352:5, col:58> col:17 used do_nothing_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x55f32ddf87d0 <col:33, col:40> col:40 t 'Timer *'
| `-ParmVarDecl 0x55f32ddf8850 <col:43, col:49> col:49 user_data 'void *'
|-CXXMethodDecl 0x55f32ddf8ac0 <line:353:5, col:55> col:17 used element_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x55f32ddf89a8 <col:30, col:37> col:37 t 'Timer *'
| `-ParmVarDecl 0x55f32ddf8a28 <col:40, col:46> col:46 user_data 'void *'
|-CXXMethodDecl 0x55f32ddf8c98 <line:354:5, col:52> col:17 used task_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x55f32ddf8b80 <col:27, col:34> col:34 t 'Timer *'
| `-ParmVarDecl 0x55f32ddf8c00 <col:37, col:43> col:43 user_data 'void *'
`-FriendDecl 0x55f32ddf8e68 <line:356:5, col:18> col:12 'class TimerSet':'TimerSet'

Layout: <CGRecordLayout
  LLVMType:%class.Timer = type { i32, %class.Timestamp, %union.anon.20, i8*, %class.Element*, %class.RouterThread* }
  NonVirtualBaseLLVMType:%class.Timer = type { i32, %class.Timestamp, %union.anon.20, i8*, %class.Element*, %class.RouterThread* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct char_array<16>
         0 |   char [16] x
           | [sizeof=16, dsize=16, align=1,
           |  nvsize=16, nvalign=1]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55f32de12b80 <../dummy_inc/click/type_traits.hh:165:1, line:167:1> line:165:28 struct char_array definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-TemplateArgument integral 16
|-PackedAttr 0x55f32df1a378 <line:167:18>
|-CXXRecordDecl 0x55f32df1a438 prev 0x55f32de12b80 <line:165:21, col:28> col:28 implicit struct char_array
`-FieldDecl 0x55f32df1a548 <line:166:5, col:13> col:10 x 'char [16]'

Layout: <CGRecordLayout
  LLVMType:%struct.char_array.10 = type { [16 x i8] }
  NonVirtualBaseLLVMType:%struct.char_array.10 = type { [16 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class NameDB
         0 |   (NameDB vtable pointer)
         8 |   uint32_t _type
        16 |   class String _context
        16 |     struct String::rep_t _r
        16 |       const char * data
        24 |       int length
        32 |       struct String::memo_t * memo
        40 |   size_t _value_size
        48 |   class NameDB * _context_parent
        56 |   class NameDB * _context_sibling
        64 |   class NameDB * _context_child
        72 |   class NameInfo * _installed
           | [sizeof=80, dsize=80, align=8,
           |  nvsize=80, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f32dde3348 prev 0x55f32ddd4558 <../dummy_inc/click/nameinfo.hh:245:1, line:348:1> line:245:7 referenced class NameDB definition
|-DefinitionData polymorphic abstract has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-CXXRecordDecl 0x55f32dde3440 <col:1, col:7> col:7 implicit referenced class NameDB
|-AccessSpecDecl 0x55f32dde34d0 <col:16, col:22> col:16 public
|-CXXConstructorDecl 0x55f32dde3738 <line:253:5, col:74> col:12 used NameDB 'void (uint32_t, const String &, size_t)' inline
| |-ParmVarDecl 0x55f32dde3508 <col:19, col:28> col:28 type 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55f32dde3580 <col:34, col:48> col:48 context 'const String &'
| `-ParmVarDecl 0x55f32dde35f8 <col:57, col:64> col:64 value_size 'size_t':'unsigned long'
|-CXXDestructorDecl 0x55f32dde3840 <line:259:5, line:261:5> line:259:13 used ~NameDB 'void () noexcept' virtual
| `-CompoundStmt 0x55f32dde4ec8 <col:23, line:261:5>
|   `-CallExpr 0x55f32dde4ea0 <line:260:2, col:28> 'void'
|     |-ImplicitCastExpr 0x55f32dde4e88 <col:2, col:12> 'void (*)(NameDB *)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x55f32dde4e18 <col:2, col:12> 'void (NameDB *)' lvalue CXXMethod 0x55f32ddd6328 'uninstalldb' 'void (NameDB *)'
|     `-CXXThisExpr 0x55f32dde4e48 <col:24> 'NameDB *' this
|-CXXMethodDecl 0x55f32dde3968 <line:264:5, line:266:5> line:264:14 type 'uint32_t () const'
| `-CompoundStmt 0x55f32dde4f48 <col:27, line:266:5>
|   `-ReturnStmt 0x55f32dde4f38 <line:265:2, col:9>
|     `-ImplicitCastExpr 0x55f32dde4f20 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x55f32dde4ef0 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_type 0x55f32dde4750
|         `-CXXThisExpr 0x55f32dde4ee0 <col:9> 'const NameDB *' implicit this
|-CXXMethodDecl 0x55f32dde3a28 <line:269:5, line:271:5> line:269:19 context 'const String &() const'
| `-CompoundStmt 0x55f32dde4fb0 <col:35, line:271:5>
|   `-ReturnStmt 0x55f32dde4fa0 <line:270:2, col:9>
|     `-MemberExpr 0x55f32dde4f70 <col:9> 'const String' lvalue ->_context 0x55f32dde47b0
|       `-CXXThisExpr 0x55f32dde4f60 <col:9> 'const NameDB *' implicit this
|-CXXMethodDecl 0x55f32dde3b18 <line:279:5, line:281:5> line:279:13 context_parent 'NameDB *() const'
| `-CompoundStmt 0x55f32dde5030 <col:36, line:281:5>
|   `-ReturnStmt 0x55f32dde5020 <line:280:2, col:9>
|     `-ImplicitCastExpr 0x55f32dde5008 <col:9> 'NameDB *' <LValueToRValue>
|       `-MemberExpr 0x55f32dde4fd8 <col:9> 'NameDB *const' lvalue ->_context_parent 0x55f32dde4870
|         `-CXXThisExpr 0x55f32dde4fc8 <col:9> 'const NameDB *' implicit this
|-CXXMethodDecl 0x55f32dde3c08 <line:284:5, line:286:5> line:284:12 value_size 'size_t () const'
| `-CompoundStmt 0x55f32dde50b0 <col:31, line:286:5>
|   `-ReturnStmt 0x55f32dde50a0 <line:285:2, col:9>
|     `-ImplicitCastExpr 0x55f32dde5088 <col:9> 'size_t':'unsigned long' <LValueToRValue>
|       `-MemberExpr 0x55f32dde5058 <col:9> 'const size_t':'const unsigned long' lvalue ->_value_size 0x55f32dde4810
|         `-CXXThisExpr 0x55f32dde5048 <col:9> 'const NameDB *' implicit this
|-CXXMethodDecl 0x55f32dde3ed8 <line:295:5, col:78> col:18 query 'bool (const String &, void *, size_t)' virtual pure
| |-ParmVarDecl 0x55f32dde3cb8 <col:24, col:38> col:38 name 'const String &'
| |-ParmVarDecl 0x55f32dde3d38 <col:44, col:50> col:50 value 'void *'
| `-ParmVarDecl 0x55f32dde3db0 <col:57, col:64> col:64 value_size 'size_t':'unsigned long'
|-CXXMethodDecl 0x55f32dde4138 <line:305:5, col:65> col:20 revquery 'String (const void *, size_t)' virtual
| |-ParmVarDecl 0x55f32dde3fa8 <col:29, col:41> col:41 value 'const void *'
| `-ParmVarDecl 0x55f32dde4020 <col:48, col:55> col:55 value_size 'size_t':'unsigned long'
|-CXXMethodDecl 0x55f32dde4418 <line:315:5, col:81> col:18 used define 'bool (const String &, const void *, size_t)' virtual
| |-ParmVarDecl 0x55f32dde41f8 <col:25, col:39> col:39 name 'const String &'
| |-ParmVarDecl 0x55f32dde4278 <col:45, col:57> col:57 value 'const void *'
| `-ParmVarDecl 0x55f32dde42f0 <col:64, col:71> col:71 value_size 'size_t':'unsigned long'
|-CXXMethodDecl 0x55f32dde4668 <line:324:5, col:61> col:17 define_int 'bool (const String &, int32_t)' inline
| |-ParmVarDecl 0x55f32dde44e0 <col:28, col:42> col:42 name 'const String &'
| `-ParmVarDecl 0x55f32dde4558 <col:48, col:56> col:56 value 'int32_t':'int'
|-AccessSpecDecl 0x55f32dde4718 <line:332:3, col:10> col:3 private
|-FieldDecl 0x55f32dde4750 <line:334:5, col:14> col:14 referenced _type 'uint32_t':'unsigned int'
|-FieldDecl 0x55f32dde47b0 <line:335:5, col:12> col:12 referenced _context 'String'
|-FieldDecl 0x55f32dde4810 <line:336:5, col:12> col:12 referenced _value_size 'size_t':'unsigned long'
|-FieldDecl 0x55f32dde4870 <line:337:5, col:13> col:13 referenced _context_parent 'NameDB *'
|-FieldDecl 0x55f32dde48d0 <line:338:5, col:13> col:13 _context_sibling 'NameDB *'
|-FieldDecl 0x55f32dde4930 <line:339:5, col:13> col:13 _context_child 'NameDB *'
|-FieldDecl 0x55f32dde4990 <line:340:5, col:15> col:15 _installed 'NameInfo *'
|-FriendDecl 0x55f32dde4a30 <line:346:5, col:18> col:12 'class NameInfo':'NameInfo'
|-CXXConstructorDecl 0x55f32dde4a98 <line:245:7> col:7 implicit NameDB 'void (const NameDB &)' inline default noexcept-unevaluated 0x55f32dde4a98
| `-ParmVarDecl 0x55f32dde4ba8 <col:7> col:7 'const NameDB &'
`-CXXMethodDecl 0x55f32dde4c48 <col:7> col:7 implicit operator= 'NameDB &(const NameDB &)' inline default noexcept-unevaluated 0x55f32dde4c48
  `-ParmVarDecl 0x55f32dde4d58 <col:7> col:7 'const NameDB &'

Layout: <CGRecordLayout
  LLVMType:%class.NameDB = type { i32 (...)**, i32, %class.String, i64, %class.NameDB*, %class.NameDB*, %class.NameDB*, %class.NameInfo* }
  NonVirtualBaseLLVMType:%class.NameDB = type { i32 (...)**, i32, %class.String, i64, %class.NameDB*, %class.NameDB*, %class.NameDB*, %class.NameInfo* }
  IsZeroInitializable:1
  BitFields:[
]>
