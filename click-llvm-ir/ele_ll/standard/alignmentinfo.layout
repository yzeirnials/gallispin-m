
*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17)
         0 |   unsigned long long __wseq
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_internal_list
         0 |   struct __pthread_internal_list * __prev
         8 |   struct __pthread_internal_list * __next
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_mutex_s
         0 |   int __lock
         4 |   unsigned int __count
         8 |   int __owner
        12 |   unsigned int __nusers
        16 |   int __kind
        20 |   short __spins
        22 |   short __elision
        24 |   struct __pthread_internal_list __list
        24 |     struct __pthread_internal_list * __prev
        32 |     struct __pthread_internal_list * __next
           | [sizeof=40, dsize=40, align=8,
           |  nvsize=40, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17)
         0 |   unsigned long long __g1_start
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s
         0 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17) 
         0 |     unsigned long long __wseq
         0 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |       unsigned int __low
         4 |       unsigned int __high
         8 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17) 
         8 |     unsigned long long __g1_start
         8 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         8 |       unsigned int __low
        12 |       unsigned int __high
        16 |   unsigned int [2] __g_refs
        24 |   unsigned int [2] __g_size
        32 |   unsigned int __g1_orig_size
        36 |   unsigned int __wrefs
        40 |   unsigned int [2] __g_signals
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_rwlock_arch_t
         0 |   unsigned int __readers
         4 |   unsigned int __writers
         8 |   unsigned int __wrphase_futex
        12 |   unsigned int __writers_futex
        16 |   unsigned int __pad3
        20 |   unsigned int __pad4
        24 |   int __cur_writer
        28 |   int __shared
        32 |   signed char __rwelision
        33 |   unsigned char [7] __pad1
        40 |   unsigned long __pad2
        48 |   unsigned int __flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | lldiv_t
         0 |   long long quot
         8 |   long long rem
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct msghdr
         0 |   void * msg_name
         8 |   socklen_t msg_namelen
        16 |   struct iovec * msg_iov
        24 |   size_t msg_iovlen
        32 |   void * msg_control
        40 |   size_t msg_controllen
        48 |   int msg_flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | struct in_addr
         0 |   in_addr_t s_addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5)
         0 |   uint8_t [16] __u6_addr8
         0 |   uint16_t [8] __u6_addr16
         0 |   uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr
         0 |   sa_family_t sa_family
         2 |   char [14] sa_data
           | [sizeof=16, dsize=16, align=2,
           |  nvsize=16, nvalign=2]

*** Dumping AST Record Layout
         0 | struct in6_addr
         0 |   union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         0 |     uint8_t [16] __u6_addr8
         0 |     uint16_t [8] __u6_addr16
         0 |     uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr_storage
         0 |   sa_family_t ss_family
         2 |   char [118] __ss_padding
       120 |   unsigned long __ss_align
           | [sizeof=128, dsize=128, align=8,
           |  nvsize=128, nvalign=8]

*** Dumping AST Record Layout
         0 | struct sockaddr_in6
         0 |   sa_family_t sin6_family
         2 |   in_port_t sin6_port
         4 |   uint32_t sin6_flowinfo
         8 |   struct in6_addr sin6_addr
         8 |     union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         8 |       uint8_t [16] __u6_addr8
         8 |       uint16_t [8] __u6_addr16
         8 |       uint32_t [4] __u6_addr32
        24 |   uint32_t sin6_scope_id
           | [sizeof=28, dsize=28, align=4,
           |  nvsize=28, nvalign=4]

*** Dumping AST Record Layout
         0 | struct timeval
         0 |   __time_t tv_sec
         8 |   __suseconds_t tv_usec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::memo_t
         0 |   volatile uint32_t refcount
         4 |   uint32_t capacity
         8 |   volatile uint32_t dirty
        12 |   char [8] real_data
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping AST Record Layout
         0 | class IPAddress
         0 |   uint32_t _addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Timestamp::rep_t
         0 |   int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timestamp
         0 |   union Timestamp::rep_t _t
         0 |     int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct timespec
         0 |   __time_t tv_sec
         8 |   __syscall_slong_t tv_nsec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element::Port
         0 |   class Element * _e
         8 |   int _port
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::rep_t
         0 |   const char * data
         8 |   int length
        16 |   struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class String
         0 |   struct String::rep_t _r
         0 |     const char * data
         8 |     int length
        16 |     struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | struct TimerSet::heap_element
         0 |   class Timestamp expiry_s
         0 |     union Timestamp::rep_t _t
         0 |       int64_t x
         8 |   class Timer * t
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct pollfd
         0 |   int fd
         4 |   short events
         6 |   short revents
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | struct SelectSet::SelectorInfo
         0 |   class Element * read
         8 |   class Element * write
        16 |   int pollfd
           | [sizeof=24, dsize=20, align=8,
           |  nvsize=20, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Router::Port
         0 |   int idx
         4 |   int port
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | struct Router::element_landmark_t
         0 |   uint32_t first_landmarkid
         8 |   class String filename
         8 |     struct String::rep_t _r
         8 |       const char * data
        16 |       int length
        24 |       struct String::memo_t * memo
           | [sizeof=32, dsize=32, align=8,
           |  nvsize=32, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<4> >
         0 |   vector_memory<class sized_array_memory<4> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<int>
         0 |   class vector_memory<class sized_array_memory<4> > vm_
         0 |     vector_memory<class sized_array_memory<4> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Router::Connection
         0 |   struct Router::Port [2] p
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | class atomic_uint32_t
         0 |   uint32_t _val
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | class Element
         0 |   (Element vtable pointer)
         8 |   class Element::Port *[2] _ports
        24 |   class Element::Port [4] _inline_ports
        88 |   int [2] _nports
        96 |   class Router * _router
       104 |   int _eindex
           | [sizeof=112, dsize=108, align=8,
           |  nvsize=108, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55cf2bccb268 prev 0x55cf2bcc2a08 <../dummy_inc/click/element.hh:214:5, line:252:5> line:214:11 referenced class Port definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55cf2bccb360 <col:5, col:11> col:11 implicit referenced class Port
|-AccessSpecDecl 0x55cf2bccb3f0 <col:18, col:24> col:18 public
|-CXXMethodDecl 0x55cf2bccb468 <line:216:9, col:30> col:21 used active 'bool () const' inline
|-CXXMethodDecl 0x55cf2bccb528 <line:217:9, col:35> col:25 element 'Element *() const' inline
|-CXXMethodDecl 0x55cf2bccb5f0 <line:218:9, col:27> col:20 port 'int () const' inline
|-CXXMethodDecl 0x55cf2bccb768 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| |-ParmVarDecl 0x55cf2bccb6a0 <col:54, col:62> col:62 p 'Packet *'
| |-NoInlineAttr 0x55cf2bccb810 <col:24>
| `-OptimizeNoneAttr 0x55cf2bccb868 <col:34>
|-CXXMethodDecl 0x55cf2bccb8b0 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
|-CXXMethodDecl 0x55cf2bccbb68 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| |-ParmVarDecl 0x55cf2bccb960 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x55cf2bccb9d8 <col:43, col:52> col:52 e 'Element *'
| `-ParmVarDecl 0x55cf2bccba58 <col:55, col:59> col:59 port 'int'
|-AccessSpecDecl 0x55cf2bccbc20 <line:229:7, col:14> col:7 private
|-FieldDecl 0x55cf2bccbc58 <line:231:9, col:18> col:18 referenced _e 'Element *'
|-FieldDecl 0x55cf2bccbcc0 <line:232:9, col:13> col:13 referenced _port 'int'
|-CXXConstructorDecl 0x55cf2bccbd48 <line:247:9, col:21> col:16 Port 'void ()' inline
|-CXXMethodDecl 0x55cf2bccc068 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| |-ParmVarDecl 0x55cf2bccbe00 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x55cf2bccbe78 <col:43, col:52> col:52 owner 'Element *'
| |-ParmVarDecl 0x55cf2bccbef0 <col:59, col:68> col:68 e 'Element *'
| `-ParmVarDecl 0x55cf2bccbf70 <col:71, col:75> col:75 port 'int'
|-FriendDecl 0x55cf2bccc180 <line:250:9, col:22> col:16 'class Element':'Element'
|-CXXConstructorDecl 0x55cf2bcd3af8 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x55cf2bcd3af8
| `-ParmVarDecl 0x55cf2bcd3c08 <col:11> col:11 'const Element::Port &'
|-CXXConstructorDecl 0x55cf2bcd3ca8 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x55cf2bcd3ca8
| `-ParmVarDecl 0x55cf2bcd3db8 <col:11> col:11 'Element::Port &&'
`-CXXDestructorDecl 0x55cf2be83db0 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"class.Element::Port" = type <{ %class.Element*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%"class.Element::Port.base" = type <{ %class.Element*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<8> >
         0 |   vector_memory<class sized_array_memory<8> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class Element *>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class typed_array_memory<class String> >
         0 |   vector_memory<class typed_array_memory<class String> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class String>
         0 |   class vector_memory<class typed_array_memory<class String> > vm_
         0 |     vector_memory<class typed_array_memory<class String> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<unsigned int>
         0 |   class vector_memory<class sized_array_memory<4> > vm_
         0 |     vector_memory<class sized_array_memory<4> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class typed_array_memory<struct Router::element_landmark_t> >
         0 |   vector_memory<class typed_array_memory<struct Router::element_landmark_t> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct Router::element_landmark_t>
         0 |   class vector_memory<class typed_array_memory<struct Router::element_landmark_t> > vm_
         0 |     vector_memory<class typed_array_memory<struct Router::element_landmark_t> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<16> >
         0 |   vector_memory<class sized_array_memory<16> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct Router::Connection>
         0 |   class vector_memory<class sized_array_memory<16> > vm_
         0 |     vector_memory<class sized_array_memory<16> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<void *>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Router
         0 |   class Master * _master
         8 |   class atomic_uint32_t _runcount
         8 |     uint32_t _val
        12 |   volatile int _state
    16:0-0 |   _Bool _have_connections
    16:1-1 |   _Bool _conn_sorted
    16:2-2 |   _Bool _have_configuration
        20 |   volatile int _running
        24 |   class atomic_uint32_t _refcount
        24 |     uint32_t _val
        32 |   class Vector<class Element *> _elements
        32 |     class vector_memory<class sized_array_memory<8> > vm_
        32 |       vector_memory<class sized_array_memory<8> >::type * l_
        40 |       vector_memory::size_type n_
        44 |       vector_memory::size_type capacity_
        48 |   class Vector<class String> _element_names
        48 |     class vector_memory<class typed_array_memory<class String> > vm_
        48 |       vector_memory<class typed_array_memory<class String> >::type * l_
        56 |       vector_memory::size_type n_
        60 |       vector_memory::size_type capacity_
        64 |   class Vector<class String> _element_configurations
        64 |     class vector_memory<class typed_array_memory<class String> > vm_
        64 |       vector_memory<class typed_array_memory<class String> >::type * l_
        72 |       vector_memory::size_type n_
        76 |       vector_memory::size_type capacity_
        80 |   class Vector<unsigned int> _element_landmarkids
        80 |     class vector_memory<class sized_array_memory<4> > vm_
        80 |       vector_memory<class sized_array_memory<4> >::type * l_
        88 |       vector_memory::size_type n_
        92 |       vector_memory::size_type capacity_
        96 |   class Vector<int> _element_home_thread_ids
        96 |     class vector_memory<class sized_array_memory<4> > vm_
        96 |       vector_memory<class sized_array_memory<4> >::type * l_
       104 |       vector_memory::size_type n_
       108 |       vector_memory::size_type capacity_
       112 |   class Vector<struct Router::element_landmark_t> _element_landmarks
       112 |     class vector_memory<class typed_array_memory<struct Router::element_landmark_t> > vm_
       112 |       vector_memory<class typed_array_memory<struct Router::element_landmark_t> >::type * l_
       120 |       vector_memory::size_type n_
       124 |       vector_memory::size_type capacity_
       128 |   uint32_t _last_landmarkid
       136 |   class Vector<int> _element_name_sorter
       136 |     class vector_memory<class sized_array_memory<4> > vm_
       136 |       vector_memory<class sized_array_memory<4> >::type * l_
       144 |       vector_memory::size_type n_
       148 |       vector_memory::size_type capacity_
       152 |   Vector<int> [2] _element_gport_offset
       184 |   class Vector<int> _element_configure_order
       184 |     class vector_memory<class sized_array_memory<4> > vm_
       184 |       vector_memory<class sized_array_memory<4> >::type * l_
       192 |       vector_memory::size_type n_
       196 |       vector_memory::size_type capacity_
       200 |   class Vector<struct Router::Connection> _conn
       200 |     class vector_memory<class sized_array_memory<16> > vm_
       200 |       vector_memory<class sized_array_memory<16> >::type * l_
       208 |       vector_memory::size_type n_
       212 |       vector_memory::size_type capacity_
       216 |   class Vector<int> _conn_output_sorter
       216 |     class vector_memory<class sized_array_memory<4> > vm_
       216 |       vector_memory<class sized_array_memory<4> >::type * l_
       224 |       vector_memory::size_type n_
       228 |       vector_memory::size_type capacity_
       232 |   class Vector<class String> _requirements
       232 |     class vector_memory<class typed_array_memory<class String> > vm_
       232 |       vector_memory<class typed_array_memory<class String> >::type * l_
       240 |       vector_memory::size_type n_
       244 |       vector_memory::size_type capacity_
       248 |   class Vector<int> _ehandler_first_by_element
       248 |     class vector_memory<class sized_array_memory<4> > vm_
       248 |       vector_memory<class sized_array_memory<4> >::type * l_
       256 |       vector_memory::size_type n_
       260 |       vector_memory::size_type capacity_
       264 |   class Vector<int> _ehandler_to_handler
       264 |     class vector_memory<class sized_array_memory<4> > vm_
       264 |       vector_memory<class sized_array_memory<4> >::type * l_
       272 |       vector_memory::size_type n_
       276 |       vector_memory::size_type capacity_
       280 |   class Vector<int> _ehandler_next
       280 |     class vector_memory<class sized_array_memory<4> > vm_
       280 |       vector_memory<class sized_array_memory<4> >::type * l_
       288 |       vector_memory::size_type n_
       292 |       vector_memory::size_type capacity_
       296 |   class Vector<int> _handler_first_by_name
       296 |     class vector_memory<class sized_array_memory<4> > vm_
       296 |       vector_memory<class sized_array_memory<4> >::type * l_
       304 |       vector_memory::size_type n_
       308 |       vector_memory::size_type capacity_
       312 |   class Handler ** _handler_bufs
       320 |   int _nhandlers_bufs
       324 |   int _free_handler
       328 |   class Vector<class String> _attachment_names
       328 |     class vector_memory<class typed_array_memory<class String> > vm_
       328 |       vector_memory<class typed_array_memory<class String> >::type * l_
       336 |       vector_memory::size_type n_
       340 |       vector_memory::size_type capacity_
       344 |   class Vector<void *> _attachments
       344 |     class vector_memory<class sized_array_memory<8> > vm_
       344 |       vector_memory<class sized_array_memory<8> >::type * l_
       352 |       vector_memory::size_type n_
       356 |       vector_memory::size_type capacity_
       360 |   class Element * _root_element
       368 |   class String _configuration
       368 |     struct String::rep_t _r
       368 |       const char * data
       376 |       int length
       384 |       struct String::memo_t * memo
       392 |   struct Router::notifier_signals_t * _notifier_signals
       400 |   class HashMap_ArenaFactory * _arena_factory
       408 |   class Router * _hotswap_router
       416 |   class ThreadSched * _thread_sched
       424 |   class NameInfo * _name_info
       432 |   class Vector<int> _flow_code_override_eindex
       432 |     class vector_memory<class sized_array_memory<4> > vm_
       432 |       vector_memory<class sized_array_memory<4> >::type * l_
       440 |       vector_memory::size_type n_
       444 |       vector_memory::size_type capacity_
       448 |   class Vector<class String> _flow_code_override
       448 |     class vector_memory<class typed_array_memory<class String> > vm_
       448 |       vector_memory<class typed_array_memory<class String> >::type * l_
       456 |       vector_memory::size_type n_
       460 |       vector_memory::size_type capacity_
       464 |   class Router * _next_router
           | [sizeof=472, dsize=472, align=8,
           |  nvsize=472, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55cf2ba7cf00 <../dummy_inc/click/atomic.hh:52:1, line:94:1> line:52:7 referenced class atomic_uint32_t definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55cf2ba7d018 <col:1, col:7> col:7 implicit referenced class atomic_uint32_t
|-AccessSpecDecl 0x55cf2ba7d0a8 <col:25, col:31> col:25 public
|-CXXMethodDecl 0x55cf2ba7d178 <line:57:5, col:29> col:21 used value 'uint32_t () const' inline
|-CXXConversionDecl 0x55cf2ba7d260 <line:58:5, col:32> col:12 operator unsigned int 'uint32_t () const' inline
|-CXXMethodDecl 0x55cf2ba7d478 <line:60:5, col:49> col:29 used operator= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x55cf2ba7d320 <col:39, col:48> col:48 x 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55cf2ba7d628 <line:62:5, col:53> col:29 operator+= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x55cf2ba7d530 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x55cf2ba7d770 <line:63:5, col:53> col:29 operator-= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x55cf2ba7d6e0 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x55cf2ba7d8b8 <line:64:5, col:53> col:29 operator|= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x55cf2ba7d828 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55cf2ba7da00 <line:65:5, col:53> col:29 operator&= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x55cf2ba7d970 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55cf2ba7dac8 <line:67:5, col:28> col:17 used operator++ 'void ()' inline
|-CXXMethodDecl 0x55cf2ba7dc10 <line:68:5, col:31> col:17 used operator++ 'void (int)' inline
| `-ParmVarDecl 0x55cf2ba7db80 <col:28> col:31 'int'
|-CXXMethodDecl 0x55cf2ba7dcd8 <line:69:5, col:28> col:17 used operator-- 'void ()' inline
|-CXXMethodDecl 0x55cf2ba7de20 <line:70:5, col:31> col:17 operator-- 'void (int)' inline
| `-ParmVarDecl 0x55cf2ba7dd90 <col:28> col:31 'int'
|-CXXMethodDecl 0x55cf2ba7df98 <line:72:5, col:42> col:21 swap 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x55cf2ba7ded8 <col:26, col:35> col:35 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55cf2ba7e0e0 <line:73:5, col:49> col:21 fetch_and_add 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x55cf2ba7e050 <col:35, col:44> col:44 delta 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55cf2ba7e1a8 <line:74:5, col:30> col:17 dec_and_test 'bool ()' inline
|-CXXMethodDecl 0x55cf2ba7e368 <line:75:5, col:69> col:21 used compare_swap 'uint32_t (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x55cf2ba7e258 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55cf2ba7e2d0 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55cf2ba7e5b8 <line:76:5, col:97> col:17 compare_and_swap 'bool (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x55cf2ba7e428 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55cf2ba7e4a0 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55cf2ba7e668 <col:86> "" ""
|-CXXMethodDecl 0x55cf2ba7e8d8 <line:78:5, col:71> col:28 used swap 'uint32_t (volatile uint32_t &, uint32_t)' static inline
| |-ParmVarDecl 0x55cf2ba7e748 <col:33, col:52> col:52 x 'volatile uint32_t &'
| `-ParmVarDecl 0x55cf2ba7e7c0 <col:55, col:64> col:64 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55cf2ba7ea88 <line:79:5, col:48> col:24 used inc 'void (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x55cf2ba7e998 <col:28, col:47> col:47 x 'volatile uint32_t &'
|-CXXMethodDecl 0x55cf2ba7ec38 <line:80:5, col:57> col:24 used dec_and_test 'bool (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x55cf2ba7eb40 <col:37, col:56> col:56 x 'volatile uint32_t &'
|-CXXMethodDecl 0x55cf2ba7ef08 <line:81:5, col:98> col:28 compare_swap 'uint32_t (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x55cf2ba7ecf0 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x55cf2ba7ed68 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55cf2ba7ede0 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55cf2ba7f1e8 <line:82:5, col:126> col:24 compare_and_swap 'bool (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x55cf2ba7efd0 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x55cf2ba7f048 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55cf2ba7f0c0 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55cf2ba7f2a0 <col:115> "" ""
|-AccessSpecDecl 0x55cf2ba7f310 <line:84:3, col:10> col:3 private
|-FieldDecl 0x55cf2ba7f348 <line:91:5, col:14> col:14 referenced _val 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55cf2ba80860 <line:52:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x55cf2ba80860
| `-ParmVarDecl 0x55cf2ba80968 <col:7> col:7 'const atomic_uint32_t &'
|-CXXMethodDecl 0x55cf2ba80a08 <col:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x55cf2ba80a08
| `-ParmVarDecl 0x55cf2ba80b18 <col:7> col:7 'atomic_uint32_t &&'
|-CXXConstructorDecl 0x55cf2bab5f78 <col:7> col:7 implicit used atomic_uint32_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55cf2bca7d70 <col:7>
|-CXXConstructorDecl 0x55cf2bab6050 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x55cf2bab6050
| `-ParmVarDecl 0x55cf2bab6168 <col:7> col:7 'const atomic_uint32_t &'
|-CXXConstructorDecl 0x55cf2bab61d8 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x55cf2bab61d8
| `-ParmVarDecl 0x55cf2bab62e8 <col:7> col:7 'atomic_uint32_t &&'
`-CXXDestructorDecl 0x55cf2bcaa770 <col:7> col:7 implicit referenced ~atomic_uint32_t 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.atomic_uint32_t = type { i32 }
  NonVirtualBaseLLVMType:%class.atomic_uint32_t = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55cf2bdb27e0 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<8>'
|-CXXRecordDecl 0x55cf2bdb29b8 prev 0x55cf2bdb27e0 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55cf2bdb2a48 <col:46, col:52> col:46 public
|-TypedefDecl 0x55cf2bdb2a70 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55cf2b759370 'int'
|-TypedefDecl 0x55cf2bdb4640 <line:13:5, col:31> col:31 type 'typename sized_array_memory<8>::type':'char_array<8>'
| `-ElaboratedType 0x55cf2bdb45f0 'typename sized_array_memory<8>::type' sugar
|   `-TypedefType 0x55cf2bdb2f20 'sized_array_memory<8>::type' sugar
|     |-Typedef 0x55cf2bdb2e20 'type'
|     `-TemplateSpecializationType 0x55cf2bdb2db0 'char_array<8UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x55cf2bdb2c90 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 8
|       |   `-SubstNonTypeTemplateParmExpr 0x55cf2bdb2c70 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x55cf2bdb2c50 <col:24> 'unsigned long' 8
|       `-RecordType 0x55cf2bdb2d90 'char_array<8>'
|         `-ClassTemplateSpecialization 0x55cf2bdb2cb0 'char_array'
|-TypedefDecl 0x55cf2bdb46f8 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<8> >::type *'
| `-PointerType 0x55cf2bdb46c0 'vector_memory<sized_array_memory<8> >::type *'
|   `-TypedefType 0x55cf2bdb46a0 'vector_memory<sized_array_memory<8> >::type' sugar
|     |-Typedef 0x55cf2bdb4640 'type'
|     `-ElaboratedType 0x55cf2bdb45f0 'typename sized_array_memory<8>::type' sugar
|       `-TypedefType 0x55cf2bdb2f20 'sized_array_memory<8>::type' sugar
|         |-Typedef 0x55cf2bdb2e20 'type'
|         `-TemplateSpecializationType 0x55cf2bdb2db0 'char_array<8UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x55cf2bdb2c90 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 8
|           |   `-SubstNonTypeTemplateParmExpr 0x55cf2bdb2c70 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x55cf2bdb2c50 <col:24> 'unsigned long' 8
|           `-RecordType 0x55cf2bdb2d90 'char_array<8>'
|             `-ClassTemplateSpecialization 0x55cf2bdb2cb0 'char_array'
|-CXXMethodDecl 0x55cf2bdb4878 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<8> >::type *) const' inline
| `-ParmVarDecl 0x55cf2bdb4788 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXConstructorDecl 0x55cf2bdb4968 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55cf2bdb4a48 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x55cf2bdb4a48
|-CXXMethodDecl 0x55cf2bdb4d18 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<8> > &)'
| `-ParmVarDecl 0x55cf2bdb4c20 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<8> > &'
|-CXXMethodDecl 0x55cf2bdb4f58 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x55cf2bdb4dd0 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55cf2bdb4e48 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55cf2bdb5128 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x55cf2bdb5018 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55cf2bdb5090 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55cf2bdb5288 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<8> >::iterator ()'
|-CXXMethodDecl 0x55cf2bdb5358 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<8> >::iterator ()'
|-CXXMethodDecl 0x55cf2bdb55a8 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<8> >::iterator (vector_memory<sized_array_memory<8> >::iterator, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x55cf2bdb5418 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
| `-ParmVarDecl 0x55cf2bdb5490 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55cf2bdb5808 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<8> >::iterator (vector_memory<sized_array_memory<8> >::iterator, vector_memory<sized_array_memory<8> >::iterator)'
| |-ParmVarDecl 0x55cf2bdb5678 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
| `-ParmVarDecl 0x55cf2bdb56f0 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55cf2bdb59c8 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<8> >::type *)' inline
| `-ParmVarDecl 0x55cf2bdb58d8 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55cf2bdb5b88 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<8> >::type *)' inline
| `-ParmVarDecl 0x55cf2bdb5a90 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55cf2bdb5c40 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55cf2bdb5cf0 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55cf2bdb5f28 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x55cf2bdb5da0 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55cf2bdb5e18 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55cf2bdb61c8 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<8> > &)'
| `-ParmVarDecl 0x55cf2bdb60d0 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<8> > &'
|-FieldDecl 0x55cf2bdb6290 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<8> >::type *'
|-FieldDecl 0x55cf2bdb62e0 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55cf2bdb6330 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory = type { %struct.char_array*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory = type { %struct.char_array*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55cf2be17698 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Element *'
|-CXXRecordDecl 0x55cf2be27028 prev 0x55cf2be17698 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55cf2be28040 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<Element *>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x55cf2be27ff0 'typename array_memory<Element *>::type' sugar
|   `-TypedefType 0x55cf2be27fd0 'conditional<true, sized_array_memory<8>, typed_array_memory<Element *> >::type' sugar
|     |-Typedef 0x55cf2be27e80 'type'
|     `-SubstTemplateTypeParmType 0x55cf2bdb23b0 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x55cf2ba22420 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55cf2ba223c8 'T'
|       `-RecordType 0x55cf2bdb1f00 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x55cf2bdb1e18 'sized_array_memory'
|-FieldDecl 0x55cf2be28140 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Element *>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x55cf2be28190 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55cf2be281c8 <line:118:5, col:15> col:15 value_type 'Element *':'Element *'
| `-SubstTemplateTypeParmType 0x55cf2be270c0 'Element *' sugar
|   |-TemplateTypeParmType 0x55cf2ba5a110 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55cf2ba5a0b8 'T'
|   `-PointerType 0x55cf2bcb47b0 'Element *'
|     `-RecordType 0x55cf2bcb4530 'Element'
|       `-CXXRecord 0x55cf2bcbe280 'Element'
|-TypedefDecl 0x55cf2be28258 <line:119:5, col:16> col:16 reference 'Element *&'
| `-LValueReferenceType 0x55cf2be28220 'Element *&'
|   `-SubstTemplateTypeParmType 0x55cf2be270c0 'Element *' sugar
|     |-TemplateTypeParmType 0x55cf2ba5a110 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55cf2ba5a0b8 'T'
|     `-PointerType 0x55cf2bcb47b0 'Element *'
|       `-RecordType 0x55cf2bcb4530 'Element'
|         `-CXXRecord 0x55cf2bcbe280 'Element'
|-TypedefDecl 0x55cf2be28318 <line:120:5, col:22> col:22 const_reference 'Element *const &'
| `-LValueReferenceType 0x55cf2be282e0 'Element *const &'
|   `-QualType 0x55cf2be270c1 'Element *const' const
|     `-SubstTemplateTypeParmType 0x55cf2be270c0 'Element *' sugar
|       |-TemplateTypeParmType 0x55cf2ba5a110 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55cf2ba5a0b8 'T'
|       `-PointerType 0x55cf2bcb47b0 'Element *'
|         `-RecordType 0x55cf2bcb4530 'Element'
|           `-CXXRecord 0x55cf2bcbe280 'Element'
|-TypedefDecl 0x55cf2be283a8 <line:121:5, col:16> col:16 pointer 'Element **'
| `-PointerType 0x55cf2be28370 'Element **'
|   `-SubstTemplateTypeParmType 0x55cf2be270c0 'Element *' sugar
|     |-TemplateTypeParmType 0x55cf2ba5a110 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55cf2ba5a0b8 'T'
|     `-PointerType 0x55cf2bcb47b0 'Element *'
|       `-RecordType 0x55cf2bcb4530 'Element'
|         `-CXXRecord 0x55cf2bcbe280 'Element'
|-TypedefDecl 0x55cf2be28468 <line:122:5, col:22> col:22 const_pointer 'Element *const *'
| `-PointerType 0x55cf2be28430 'Element *const *'
|   `-QualType 0x55cf2be270c1 'Element *const' const
|     `-SubstTemplateTypeParmType 0x55cf2be270c0 'Element *' sugar
|       |-TemplateTypeParmType 0x55cf2ba5a110 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55cf2ba5a0b8 'T'
|       `-PointerType 0x55cf2bcb47b0 'Element *'
|         `-RecordType 0x55cf2bcb4530 'Element'
|           `-CXXRecord 0x55cf2bcbe280 'Element'
|-TypedefDecl 0x55cf2be29040 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<Element *>::type':'Element *'
| `-ElaboratedType 0x55cf2be28ff0 'typename fast_argument<Element *>::type' sugar
|   `-TypedefType 0x55cf2be28fd0 'fast_argument<Element *, false>::type' sugar
|     |-Typedef 0x55cf2be28f60 'type'
|     `-SubstTemplateTypeParmType 0x55cf2be28d20 'Element *' sugar
|       |-TemplateTypeParmType 0x55cf2ba2d220 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55cf2ba2d1d0 'T'
|       `-PointerType 0x55cf2bcb47b0 'Element *'
|         `-RecordType 0x55cf2bcb4530 'Element'
|           `-CXXRecord 0x55cf2bcbe280 'Element'
|-TypedefDecl 0x55cf2be290a8 <line:126:5, col:22> col:22 const_access_type 'Element *const &'
| `-LValueReferenceType 0x55cf2be282e0 'Element *const &'
|   `-QualType 0x55cf2be270c1 'Element *const' const
|     `-SubstTemplateTypeParmType 0x55cf2be270c0 'Element *' sugar
|       |-TemplateTypeParmType 0x55cf2ba5a110 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55cf2ba5a0b8 'T'
|       `-PointerType 0x55cf2bcb47b0 'Element *'
|         `-RecordType 0x55cf2bcb4530 'Element'
|           `-CXXRecord 0x55cf2bcbe280 'Element'
|-TypedefDecl 0x55cf2be29100 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55cf2b759370 'int'
|-TypedefDecl 0x55cf2be29168 <line:130:5, col:16> col:16 iterator 'Element **'
| `-PointerType 0x55cf2be28370 'Element **'
|   `-SubstTemplateTypeParmType 0x55cf2be270c0 'Element *' sugar
|     |-TemplateTypeParmType 0x55cf2ba5a110 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55cf2ba5a0b8 'T'
|     `-PointerType 0x55cf2bcb47b0 'Element *'
|       `-RecordType 0x55cf2bcb4530 'Element'
|         `-CXXRecord 0x55cf2bcbe280 'Element'
|-TypedefDecl 0x55cf2be291d0 <line:131:5, col:22> col:22 const_iterator 'Element *const *'
| `-PointerType 0x55cf2be28430 'Element *const *'
|   `-QualType 0x55cf2be270c1 'Element *const' const
|     `-SubstTemplateTypeParmType 0x55cf2be270c0 'Element *' sugar
|       |-TemplateTypeParmType 0x55cf2ba5a110 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55cf2ba5a0b8 'T'
|       `-PointerType 0x55cf2bcb47b0 'Element *'
|         `-RecordType 0x55cf2bcb4530 'Element'
|           `-CXXRecord 0x55cf2bcbe280 'Element'
|-EnumDecl 0x55cf2be29228 <line:134:5> col:5
| `-EnumConstantDecl 0x55cf2be29320 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Element *>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55cf2be29300 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55cf2ba5baa8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55cf2ba5ba80 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55cf2ba5ba60 <col:40> 'int' 1
|-CXXConstructorDecl 0x55cf2be293a8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55cf2be29638 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Element *>::value_argument_type)' inline
| |-ParmVarDecl 0x55cf2be29460 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55cf2be29500 <col:41, col:61> col:61 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXConstructorDecl 0x55cf2be298c8 <line:139:5, col:37> col:12 Vector 'void (const Vector<Element *> &)' inline
| `-ParmVarDecl 0x55cf2be297b0 <col:19, col:36> col:36 x 'const Vector<Element *> &'
|-CXXConstructorDecl 0x55cf2be29b88 <line:141:5, col:32> col:12 Vector 'void (Vector<Element *> &&)' inline
| `-ParmVarDecl 0x55cf2be29a70 <col:19, col:31> col:31 x 'Vector<Element *> &&'
|-CXXMethodDecl 0x55cf2be29ea0 <line:144:5, col:51> col:23 operator= 'Vector<Element *> &(const Vector<Element *> &)' inline
| `-ParmVarDecl 0x55cf2be29d80 <col:33, col:50> col:50 x 'const Vector<Element *> &'
|-CXXMethodDecl 0x55cf2be2a1b0 <line:146:5, col:46> col:23 operator= 'Vector<Element *> &(Vector<Element *> &&)' inline
| `-ParmVarDecl 0x55cf2be2a090 <col:33, col:45> col:45 x 'Vector<Element *> &&'
|-CXXMethodDecl 0x55cf2be2a4a0 <line:148:5, col:70> col:23 assign 'Vector<Element *> &(Vector::size_type, Vector<Element *>::value_argument_type)' inline
| |-ParmVarDecl 0x55cf2be2a2e8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55cf2be2a360 <col:43, col:69> col:63 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXMethodDecl 0x55cf2be2a5f8 <line:150:5, col:55> col:49 begin 'Vector<Element *>::iterator ()'
| |-NoInlineAttr 0x55cf2be2a6d8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55cf2be2a730 <col:30> Inherited
|-CXXMethodDecl 0x55cf2be2a778 <line:151:5, col:53> col:49 end 'Vector<Element *>::iterator ()'
| |-NoInlineAttr 0x55cf2be2a828 <col:20> Inherited
| `-OptimizeNoneAttr 0x55cf2be2a880 <col:30> Inherited
|-CXXMethodDecl 0x55cf2be2a948 <line:152:5, col:63> col:55 begin 'Vector<Element *>::const_iterator () const'
| |-NoInlineAttr 0x55cf2be2a9f8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55cf2be2aa50 <col:30> Inherited
|-CXXMethodDecl 0x55cf2be2aa98 <line:153:5, col:61> col:55 end 'Vector<Element *>::const_iterator () const'
| |-NoInlineAttr 0x55cf2be2ab48 <col:20> Inherited
| `-OptimizeNoneAttr 0x55cf2be2aba0 <col:30> Inherited
|-CXXMethodDecl 0x55cf2be2abe8 <line:154:5, col:64> col:55 cbegin 'Vector<Element *>::const_iterator () const'
| |-NoInlineAttr 0x55cf2be2ac98 <col:20> Inherited
| `-OptimizeNoneAttr 0x55cf2be2acf0 <col:30> Inherited
|-CXXMethodDecl 0x55cf2be2ad38 <line:155:5, col:62> col:55 cend 'Vector<Element *>::const_iterator () const'
| |-NoInlineAttr 0x55cf2be2ade8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55cf2be2ae40 <col:30> Inherited
|-CXXMethodDecl 0x55cf2be2ae68 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55cf2be2af18 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55cf2be2afc8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55cf2be2b188 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Element *>::value_argument_type)' inline
| |-ParmVarDecl 0x55cf2be2b078 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55cf2be2b0f0 <col:37, col:63> col:57 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXMethodDecl 0x55cf2be2b2d8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55cf2be2b248 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55cf2be2b488 <line:163:5, col:65> col:43 operator[] 'Element *&(Vector::size_type)'
| |-ParmVarDecl 0x55cf2be2b390 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55cf2be2b540 <col:20>
| `-OptimizeNoneAttr 0x55cf2be2b598 <col:30>
|-CXXMethodDecl 0x55cf2be2b6b8 <line:164:5, col:73> col:49 operator[] 'Element *const &(Vector::size_type) const'
| |-ParmVarDecl 0x55cf2be2b5c0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55cf2be2b770 <col:20>
| `-OptimizeNoneAttr 0x55cf2be2b7c8 <col:30>
|-CXXMethodDecl 0x55cf2be2b880 <line:165:5, col:29> col:15 at 'Element *&(Vector::size_type)' inline
| `-ParmVarDecl 0x55cf2be2b7f0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55cf2be2b9c8 <line:166:5, col:37> col:21 at 'Element *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55cf2be2b938 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55cf2be2baf8 <line:167:5, col:21> col:15 front 'Element *&()' inline
|-CXXMethodDecl 0x55cf2be2bc28 <line:168:5, col:29> col:21 front 'Element *const &() const' inline
|-CXXMethodDecl 0x55cf2be2bcf8 <line:169:5, col:20> col:15 back 'Element *&()' inline
|-CXXMethodDecl 0x55cf2be2bdc8 <line:170:5, col:28> col:21 back 'Element *const &() const' inline
|-CXXMethodDecl 0x55cf2be2bf08 <line:172:5, col:39> col:15 unchecked_at 'Element *&(Vector::size_type)' inline
| `-ParmVarDecl 0x55cf2be2be78 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55cf2be2c050 <line:173:5, col:47> col:21 unchecked_at 'Element *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55cf2be2bfc0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55cf2be2c198 <line:174:5, col:59> col:15 at_u 'Element *&(Vector::size_type)' inline
| |-ParmVarDecl 0x55cf2be2c108 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55cf2be2c250 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55cf2be2c350 <line:175:5, col:71> col:21 at_u 'Element *const &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55cf2be2c2c0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55cf2be2c408 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55cf2be2c4c8 <line:177:5, col:20> col:15 data 'Element **()' inline
|-CXXMethodDecl 0x55cf2be2c5c8 <line:178:5, col:28> col:21 data 'Element *const *() const' inline
|-CXXMethodDecl 0x55cf2be2c748 <line:180:5, col:48> col:17 push_back 'void (Vector<Element *>::value_argument_type)' inline
| `-ParmVarDecl 0x55cf2be2c688 <col:27, col:47> col:47 v 'Vector<Element *>::value_argument_type':'Element *'
|-FunctionTemplateDecl 0x55cf2be2cf08 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55cf2be2c800 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Element *>':'fast_argument<Element *, false>'
| `-CXXMethodDecl 0x55cf2be2ce68 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Element *&&)' inline
|   `-ParmVarDecl 0x55cf2be2cd68 <col:58, col:62> col:62 v 'Element *&&'
|-CXXMethodDecl 0x55cf2be2cfe8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55cf2be2d138 <line:186:5, col:49> col:17 push_front 'void (Vector<Element *>::value_argument_type)' inline
| `-ParmVarDecl 0x55cf2be2d0a8 <col:28, col:48> col:48 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXMethodDecl 0x55cf2be2d1f0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55cf2be2d438 <line:189:5, col:62> col:21 insert 'Vector<Element *>::iterator (Vector<Element *>::iterator, Vector<Element *>::value_argument_type)' inline
| |-ParmVarDecl 0x55cf2be2d2b0 <col:28, col:37> col:37 it 'Vector<Element *>::iterator':'Element **'
| `-ParmVarDecl 0x55cf2be2d328 <col:41, col:61> col:61 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXMethodDecl 0x55cf2be2d5f8 <line:190:5, col:38> col:21 erase 'Vector<Element *>::iterator (Vector<Element *>::iterator)' inline
| `-ParmVarDecl 0x55cf2be2d508 <col:27, col:36> col:36 it 'Vector<Element *>::iterator':'Element **'
|-CXXMethodDecl 0x55cf2be2d848 <line:191:5, col:49> col:21 erase 'Vector<Element *>::iterator (Vector<Element *>::iterator, Vector<Element *>::iterator)' inline
| |-ParmVarDecl 0x55cf2be2d6c0 <col:27, col:36> col:36 a 'Vector<Element *>::iterator':'Element **'
| `-ParmVarDecl 0x55cf2be2d738 <col:39, col:48> col:48 b 'Vector<Element *>::iterator':'Element **'
|-CXXMethodDecl 0x55cf2be2d908 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55cf2be2db68 <line:195:5, col:34> col:17 swap 'void (Vector<Element *> &)' inline
| `-ParmVarDecl 0x55cf2be2da70 <col:22, col:33> col:33 x 'Vector<Element *> &'
`-CXXDestructorDecl 0x55cf2be2dc38 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55cf2be2dc38

Layout: <CGRecordLayout
  LLVMType:%class.Vector = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55cf2ba922b0 <../dummy_inc/click/string.hh:189:5, line:198:5> line:189:12 referenced struct memo_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x55cf2ba923c8 <col:5, col:12> col:12 implicit struct memo_t
|-FieldDecl 0x55cf2ba92468 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
|-FieldDecl 0x55cf2ba924c8 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
|-FieldDecl 0x55cf2ba92528 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
`-FieldDecl 0x55cf2ba925d8 <line:197:2, col:18> col:7 real_data 'char [8]'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  NonVirtualBaseLLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55cf2ba928e0 <../dummy_inc/click/string.hh:204:5, line:208:5> line:204:12 referenced struct rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55cf2ba929f8 <col:5, col:12> col:12 implicit struct rep_t
|-FieldDecl 0x55cf2ba92aa0 <line:205:2, col:14> col:14 referenced data 'const char *'
|-FieldDecl 0x55cf2ba92b08 <line:206:2, col:6> col:6 referenced length 'int'
|-FieldDecl 0x55cf2ba92b98 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
|-CXXConstructorDecl 0x55cf2ba98aa0 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55cf2ba98ed8 <col:12>
|-CXXConstructorDecl 0x55cf2ba98ba8 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55cf2ba98cb8 <col:12> col:12 used 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x55cf2ba92aa0 'data' 'const char *'
| | `-ImplicitCastExpr 0x55cf2ba9b460 <col:12> 'const char *' <LValueToRValue>
| |   `-MemberExpr 0x55cf2ba9b430 <col:12> 'const char *const' lvalue .data 0x55cf2ba92aa0
| |     `-DeclRefExpr 0x55cf2ba9b410 <col:12> 'const String::rep_t' lvalue ParmVar 0x55cf2ba98cb8 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x55cf2ba92b08 'length' 'int'
| | `-ImplicitCastExpr 0x55cf2ba9b4f0 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x55cf2ba9b4c0 <col:12> 'const int' lvalue .length 0x55cf2ba92b08
| |     `-DeclRefExpr 0x55cf2ba9b4a0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55cf2ba98cb8 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x55cf2ba92b98 'memo' 'String::memo_t *'
| | `-ImplicitCastExpr 0x55cf2ba9b580 <col:12> 'String::memo_t *' <LValueToRValue>
| |   `-MemberExpr 0x55cf2ba9b550 <col:12> 'String::memo_t *const' lvalue .memo 0x55cf2ba92b98
| |     `-DeclRefExpr 0x55cf2ba9b530 <col:12> 'const String::rep_t' lvalue ParmVar 0x55cf2ba98cb8 '' 'const String::rep_t &'
| `-CompoundStmt 0x55cf2ba9b5d8 <col:12>
|-CXXConstructorDecl 0x55cf2ba98d58 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55cf2ba98d58
| `-ParmVarDecl 0x55cf2ba98e68 <col:12> col:12 'String::rep_t &&'
|-CXXDestructorDecl 0x55cf2ba9e3c0 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55cf2baa9dd8 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55cf2baa9ee8 <col:12> col:12 used 'const String::rep_t &'
| `-CompoundStmt 0x55cf2baaa400 <col:12>
|   |-BinaryOperator 0x55cf2baaa218 <col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x55cf2baaa1d0 <col:12> 'const char *' lvalue ->data 0x55cf2ba92aa0
|   | | `-CXXThisExpr 0x55cf2baaa1c0 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x55cf2baaa200 <col:12> 'const char *' <LValueToRValue>
|   |   `-MemberExpr 0x55cf2baaa190 <col:12> 'const char *const' lvalue .data 0x55cf2ba92aa0
|   |     `-DeclRefExpr 0x55cf2baaa170 <col:12> 'const String::rep_t' lvalue ParmVar 0x55cf2baa9ee8 '' 'const String::rep_t &'
|   |-BinaryOperator 0x55cf2baaa2e0 <col:12> 'int' lvalue '='
|   | |-MemberExpr 0x55cf2baaa298 <col:12> 'int' lvalue ->length 0x55cf2ba92b08
|   | | `-CXXThisExpr 0x55cf2baaa288 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x55cf2baaa2c8 <col:12> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x55cf2baaa258 <col:12> 'const int' lvalue .length 0x55cf2ba92b08
|   |     `-DeclRefExpr 0x55cf2baaa238 <col:12> 'const String::rep_t' lvalue ParmVar 0x55cf2baa9ee8 '' 'const String::rep_t &'
|   |-BinaryOperator 0x55cf2baaa3a8 <col:12> 'String::memo_t *' lvalue '='
|   | |-MemberExpr 0x55cf2baaa360 <col:12> 'String::memo_t *' lvalue ->memo 0x55cf2ba92b98
|   | | `-CXXThisExpr 0x55cf2baaa350 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x55cf2baaa390 <col:12> 'String::memo_t *' <LValueToRValue>
|   |   `-MemberExpr 0x55cf2baaa320 <col:12> 'String::memo_t *const' lvalue .memo 0x55cf2ba92b98
|   |     `-DeclRefExpr 0x55cf2baaa300 <col:12> 'const String::rep_t' lvalue ParmVar 0x55cf2baa9ee8 '' 'const String::rep_t &'
|   `-ReturnStmt 0x55cf2baaa3f0 <col:12>
|     `-UnaryOperator 0x55cf2baaa3d8 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55cf2baaa3c8 <col:12> 'String::rep_t *' this
`-CXXMethodDecl 0x55cf2baa9f58 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55cf2baa9f58
  `-ParmVarDecl 0x55cf2baaa068 <col:12> col:12 'String::rep_t &&'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  NonVirtualBaseLLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55cf2ba89860 <../dummy_inc/click/string.hh:19:1, line:304:1> line:19:7 referenced class String definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55cf2ba89978 <col:1, col:7> col:7 implicit referenced class String
|-AccessSpecDecl 0x55cf2ba89a08 <col:16, col:22> col:16 public
|-TypedefDecl 0x55cf2ba89a48 <line:21:5, col:25> col:25 referenced const_iterator 'const char *'
| `-PointerType 0x55cf2b759dc0 'const char *'
|   `-QualType 0x55cf2b759311 'const char' const
|     `-BuiltinType 0x55cf2b759310 'char'
|-TypedefDecl 0x55cf2ba89ad0 <line:22:5, col:28> col:28 iterator 'String::const_iterator':'const char *'
| `-TypedefType 0x55cf2ba89aa0 'String::const_iterator' sugar
|   |-Typedef 0x55cf2ba89a48 'const_iterator'
|   `-PointerType 0x55cf2b759dc0 'const char *'
|     `-QualType 0x55cf2b759311 'const char' const
|       `-BuiltinType 0x55cf2b759310 'char'
|-TypedefDecl 0x55cf2ba89c40 <line:24:5, col:52> col:27 referenced unspecified_bool_type 'int (String::*)() const'
| `-MemberPointerType 0x55cf2ba89bb0 'int (String::*)() const'
|   |-RecordType 0x55cf2ba898f0 'String'
|   | `-CXXRecord 0x55cf2ba89860 'String'
|   `-ParenType 0x55cf2ba89b50 'int () const' sugar
|     `-FunctionProtoType 0x55cf2ba5d6e0 'int () const' const cdecl
|       `-BuiltinType 0x55cf2b759370 'int'
|-TypedefDecl 0x55cf2ba89ca8 <line:27:5, col:21> col:21 referenced intmax_t 'int64_t':'long'
| `-TypedefType 0x55cf2b8b1fb0 'int64_t' sugar
|   |-Typedef 0x55cf2b7c22d0 'int64_t'
|   `-TypedefType 0x55cf2b79b4d0 '__int64_t' sugar
|     |-Typedef 0x55cf2b79b0a8 '__int64_t'
|     `-BuiltinType 0x55cf2b759390 'long'
|-TypedefDecl 0x55cf2ba89d10 <line:28:5, col:22> col:22 referenced uintmax_t 'uint64_t':'unsigned long'
| `-TypedefType 0x55cf2b8b1ed0 'uint64_t' sugar
|   |-Typedef 0x55cf2b7c2470 'uint64_t'
|   `-TypedefType 0x55cf2b79b560 '__uint64_t' sugar
|     |-Typedef 0x55cf2b79b118 '__uint64_t'
|     `-BuiltinType 0x55cf2b759430 'unsigned long'
|-TypedefDecl 0x55cf2ba89da0 <line:36:5, col:22> col:22 int_large_t 'String::intmax_t':'long'
| `-TypedefType 0x55cf2ba89d70 'String::intmax_t' sugar
|   |-Typedef 0x55cf2ba89ca8 'intmax_t'
|   `-TypedefType 0x55cf2b8b1fb0 'int64_t' sugar
|     |-Typedef 0x55cf2b7c22d0 'int64_t'
|     `-TypedefType 0x55cf2b79b4d0 '__int64_t' sugar
|       |-Typedef 0x55cf2b79b0a8 '__int64_t'
|       `-BuiltinType 0x55cf2b759390 'long'
|-TypedefDecl 0x55cf2ba89e30 <line:37:5, col:23> col:23 uint_large_t 'String::uintmax_t':'unsigned long'
| `-TypedefType 0x55cf2ba89e00 'String::uintmax_t' sugar
|   |-Typedef 0x55cf2ba89d10 'uintmax_t'
|   `-TypedefType 0x55cf2b8b1ed0 'uint64_t' sugar
|     |-Typedef 0x55cf2b7c2470 'uint64_t'
|     `-TypedefType 0x55cf2b79b560 '__uint64_t' sugar
|       |-Typedef 0x55cf2b79b118 '__uint64_t'
|       `-BuiltinType 0x55cf2b759430 'unsigned long'
|-CXXConstructorDecl 0x55cf2ba89ef0 <line:39:5, col:19> col:12 used String 'void ()' inline
|-CXXConstructorDecl 0x55cf2ba8a098 <line:40:5, col:34> col:12 used String 'void (const String &)' inline
| `-ParmVarDecl 0x55cf2ba89fd8 <col:19, col:33> col:33 x 'const String &'
|-CXXConstructorDecl 0x55cf2ba8a248 <line:42:5, col:29> col:12 used String 'void (String &&)' inline
| `-ParmVarDecl 0x55cf2ba8a188 <col:19, col:28> col:28 x 'String &&'
|-CXXConstructorDecl 0x55cf2ba8a3a0 <line:44:5, col:35> col:12 used String 'void (const char *)' inline
| `-ParmVarDecl 0x55cf2ba8a310 <col:19, col:31> col:31 cstr 'const char *'
|-CXXConstructorDecl 0x55cf2ba8a5b8 <line:45:5, col:41> col:12 String 'void (const char *, int)' inline
| |-ParmVarDecl 0x55cf2ba8a468 <col:19, col:31> col:31 s 'const char *'
| `-ParmVarDecl 0x55cf2ba8a4e8 <col:34, col:38> col:38 len 'int'
|-CXXConstructorDecl 0x55cf2ba8a7d8 <line:46:5, col:50> col:12 String 'void (const unsigned char *, int)' inline
| |-ParmVarDecl 0x55cf2ba8a688 <col:19, col:40> col:40 s 'const unsigned char *'
| `-ParmVarDecl 0x55cf2ba8a708 <col:43, col:47> col:47 len 'int'
|-CXXConstructorDecl 0x55cf2ba8a9f8 <line:47:5, col:54> col:12 used String 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x55cf2ba8a8a8 <col:19, col:31> col:31 first 'const char *'
| `-ParmVarDecl 0x55cf2ba8a928 <col:38, col:50> col:50 last 'const char *'
|-CXXConstructorDecl 0x55cf2ba8ac18 <line:48:5, col:72> col:12 String 'void (const unsigned char *, const unsigned char *)' inline
| |-ParmVarDecl 0x55cf2ba8aac8 <col:19, col:40> col:40 first 'const unsigned char *'
| `-ParmVarDecl 0x55cf2ba8ab48 <col:47, col:68> col:68 last 'const unsigned char *'
|-CXXConstructorDecl 0x55cf2ba8ada8 <line:49:5, col:34> col:21 used String 'void (bool)' inline
| `-ParmVarDecl 0x55cf2ba8ace0 <col:28, col:33> col:33 x 'bool'
|-CXXConstructorDecl 0x55cf2ba8af28 <line:50:5, col:34> col:21 String 'void (char)' inline
| `-ParmVarDecl 0x55cf2ba8ae68 <col:28, col:33> col:33 c 'char'
|-CXXConstructorDecl 0x55cf2ba8b0b8 <line:51:5, col:43> col:21 String 'void (unsigned char)' inline
| `-ParmVarDecl 0x55cf2ba8aff0 <col:28, col:42> col:42 c 'unsigned char'
|-CXXConstructorDecl 0x55cf2ba8b210 <line:52:5, col:26> col:14 String 'void (int)'
| `-ParmVarDecl 0x55cf2ba8b180 <col:21, col:25> col:25 x 'int'
|-CXXConstructorDecl 0x55cf2ba8b368 <line:53:5, col:31> col:14 String 'void (unsigned int)'
| `-ParmVarDecl 0x55cf2ba8b2d8 <col:21, col:30> col:30 x 'unsigned int'
|-CXXConstructorDecl 0x55cf2ba8b4c0 <line:54:5, col:27> col:14 String 'void (long)'
| `-ParmVarDecl 0x55cf2ba8b430 <col:21, col:26> col:26 x 'long'
|-CXXConstructorDecl 0x55cf2ba8b648 <line:55:5, col:36> col:14 String 'void (unsigned long)'
| `-ParmVarDecl 0x55cf2ba8b588 <col:21, col:35> col:35 x 'unsigned long'
|-CXXConstructorDecl 0x55cf2ba8b7d8 <line:57:5, col:32> col:14 String 'void (long long)'
| `-ParmVarDecl 0x55cf2ba8b710 <col:21, col:31> col:31 x 'long long'
|-CXXConstructorDecl 0x55cf2ba8b968 <line:58:5, col:41> col:14 String 'void (unsigned long long)'
| `-ParmVarDecl 0x55cf2ba8b8a0 <col:21, col:40> col:40 x 'unsigned long long'
|-CXXConstructorDecl 0x55cf2ba8baf8 <line:65:5, col:29> col:14 String 'void (double)'
| `-ParmVarDecl 0x55cf2ba8ba30 <col:21, col:28> col:28 x 'double'
|-CXXDestructorDecl 0x55cf2ba8bbf0 <line:67:5, col:20> col:12 used ~String 'void () noexcept' inline
|-CXXMethodDecl 0x55cf2ba8bd18 <line:69:5, col:44> col:33 make_empty 'const String &()' static inline
|-CXXMethodDecl 0x55cf2ba8be98 <line:70:5, col:52> col:26 used make_uninitialized 'String (int)' static inline
| `-ParmVarDecl 0x55cf2ba8bdd0 <col:45, col:49> col:49 len 'int'
|-CXXMethodDecl 0x55cf2ba8bfe8 <line:71:5, col:74> col:26 make_garbage 'String (int)' static inline
| |-ParmVarDecl 0x55cf2ba8bf58 <col:39, col:43> col:43 len 'int'
| `-DeprecatedAttr 0x55cf2ba8c0a0 <col:63> "" ""
|-CXXMethodDecl 0x55cf2ba8c1e8 <line:72:5, col:54> col:26 make_stable 'String (const char *)' static inline
| `-ParmVarDecl 0x55cf2ba8c128 <col:38, col:50> col:50 cstr 'const char *'
|-CXXMethodDecl 0x55cf2ba8c3f8 <line:73:5, col:60> col:26 make_stable 'String (const char *, int)' static inline
| |-ParmVarDecl 0x55cf2ba8c2a8 <col:38, col:50> col:50 s 'const char *'
| `-ParmVarDecl 0x55cf2ba8c328 <col:53, col:57> col:57 len 'int'
|-CXXMethodDecl 0x55cf2ba8c618 <line:74:5, col:73> col:26 make_stable 'String (const char *, const char *)' static inline
| |-ParmVarDecl 0x55cf2ba8c4c0 <col:38, col:50> col:50 first 'const char *'
| `-ParmVarDecl 0x55cf2ba8c540 <col:57, col:69> col:69 last 'const char *'
|-CXXMethodDecl 0x55cf2ba8c8f8 <line:75:5, col:80> col:19 make_numeric 'String (String::intmax_t, int, bool)' static
| |-ParmVarDecl 0x55cf2ba8c6d8 <col:32, col:41> col:41 x 'String::intmax_t':'long'
| |-ParmVarDecl 0x55cf2ba8c758 <col:44, col:55> col:48 base 'int' cinit
| | `-IntegerLiteral 0x55cf2ba98570 <col:55> 'int' 10
| `-ParmVarDecl 0x55cf2ba8c7d0 <col:59, col:76> col:64 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55cf2ba98590 <col:76> 'bool' true
|-CXXMethodDecl 0x55cf2ba8cbd8 <line:76:5, col:81> col:19 make_numeric 'String (String::uintmax_t, int, bool)' static
| |-ParmVarDecl 0x55cf2ba8c9c0 <col:32, col:42> col:42 x 'String::uintmax_t':'unsigned long'
| |-ParmVarDecl 0x55cf2ba8ca40 <col:45, col:56> col:49 base 'int' cinit
| | `-IntegerLiteral 0x55cf2ba985a0 <col:56> 'int' 10
| `-ParmVarDecl 0x55cf2ba8cab8 <col:60, col:77> col:65 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55cf2ba985c0 <col:77> 'bool' true
|-CXXMethodDecl 0x55cf2ba8cce0 <line:78:5, col:31> col:24 used data 'const char *() const' inline
|-CXXMethodDecl 0x55cf2ba8cda8 <line:79:5, col:25> col:16 used length 'int () const' inline
|-CXXMethodDecl 0x55cf2ba8ce70 <line:81:5, col:60> col:52 c_str 'const char *() const'
| |-NoInlineAttr 0x55cf2ba8cf10 <col:20>
| `-OptimizeNoneAttr 0x55cf2ba8cf68 <col:30>
|-CXXConversionDecl 0x55cf2ba8d058 <line:83:5, col:45> col:12 used operator int (String::*)() const 'String::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x55cf2ba8d128 <line:84:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x55cf2ba8d1e8 <line:85:5, col:29> col:17 operator! 'bool () const' inline
|-CXXMethodDecl 0x55cf2ba8d2d8 <line:87:5, col:35> col:27 used begin 'String::const_iterator () const' inline
|-CXXMethodDecl 0x55cf2ba8d398 <line:88:5, col:33> col:27 used end 'String::const_iterator () const' inline
|-CXXMethodDecl 0x55cf2ba8d518 <line:90:5, col:35> col:17 used operator[] 'char (int) const' inline
| `-ParmVarDecl 0x55cf2ba8d450 <col:28, col:32> col:32 i 'int'
|-CXXMethodDecl 0x55cf2ba8d668 <line:91:5, col:27> col:17 at 'char (int) const' inline
| `-ParmVarDecl 0x55cf2ba8d5d8 <col:20, col:24> col:24 i 'int'
|-CXXMethodDecl 0x55cf2ba8d758 <line:92:5, col:25> col:17 front 'char () const' inline
|-CXXMethodDecl 0x55cf2ba8d818 <line:93:5, col:24> col:17 back 'char () const' inline
|-CXXMethodDecl 0x55cf2ba8da68 <line:95:5, col:64> col:21 used hashcode 'uint32_t (const char *, const char *)' static
| |-ParmVarDecl 0x55cf2ba8d8d0 <col:30, col:42> col:42 begin 'const char *'
| `-ParmVarDecl 0x55cf2ba8d950 <col:49, col:61> col:61 end 'const char *'
|-CXXMethodDecl 0x55cf2ba8dcc8 <line:96:5, line:97:33> line:96:28 hashcode 'uint32_t (const unsigned char *, const unsigned char *)' static inline
| |-ParmVarDecl 0x55cf2ba8db30 <col:37, col:58> col:58 begin 'const unsigned char *'
| `-ParmVarDecl 0x55cf2ba8dbb0 <line:97:9, col:30> col:30 end 'const unsigned char *'
|-CXXMethodDecl 0x55cf2ba8dd98 <line:98:5, col:32> col:21 hashcode 'uint32_t () const' inline
|-CXXMethodDecl 0x55cf2ba8dfa8 <line:100:5, col:65> col:19 substring 'String (const char *, const char *) const' inline
| |-ParmVarDecl 0x55cf2ba8de50 <col:29, col:41> col:41 begin 'const char *'
| `-ParmVarDecl 0x55cf2ba8ded0 <col:48, col:60> col:60 end 'const char *'
|-CXXMethodDecl 0x55cf2ba8e1c8 <line:101:5, col:40> col:12 used substring 'String (int, int) const'
| |-ParmVarDecl 0x55cf2ba8e070 <col:22, col:26> col:26 pos 'int'
| `-ParmVarDecl 0x55cf2ba8e0f0 <col:31, col:35> col:35 len 'int'
|-CXXMethodDecl 0x55cf2ba8e358 <line:102:5, col:38> col:19 substring 'String (int) const' inline
| `-ParmVarDecl 0x55cf2ba8e290 <col:29, col:33> col:33 pos 'int'
|-CXXMethodDecl 0x55cf2ba8e448 <line:103:5, col:25> col:12 trim_space 'String () const'
|-CXXMethodDecl 0x55cf2ba8e5b8 <line:105:5, col:41> col:17 equals 'bool (const String &) const' inline
| `-ParmVarDecl 0x55cf2ba8e4f8 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x55cf2ba8e7c8 <line:106:5, col:48> col:17 used equals 'bool (const char *, int) const' inline
| |-ParmVarDecl 0x55cf2ba8e678 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x55cf2ba8e6f8 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x55cf2ba8e9e0 <line:107:5, col:63> col:23 used compare 'int (const String &, const String &)' static inline
| |-ParmVarDecl 0x55cf2ba8e888 <col:31, col:45> col:45 a 'const String &'
| `-ParmVarDecl 0x55cf2ba8e900 <col:48, col:62> col:62 b 'const String &'
|-CXXMethodDecl 0x55cf2ba8eb70 <line:108:5, col:41> col:16 used compare 'int (const String &) const' inline
| `-ParmVarDecl 0x55cf2ba8eaa0 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x55cf2ba8ed90 <line:109:5, col:41> col:9 used compare 'int (const char *, int) const'
| |-ParmVarDecl 0x55cf2ba8ec30 <col:17, col:29> col:29 s 'const char *'
| `-ParmVarDecl 0x55cf2ba8ecb0 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x55cf2ba8eee0 <line:110:5, col:46> col:17 starts_with 'bool (const String &) const' inline
| `-ParmVarDecl 0x55cf2ba8ee50 <col:29, col:43> col:43 x 'const String &'
|-CXXMethodDecl 0x55cf2ba8f0b8 <line:111:5, col:46> col:10 used starts_with 'bool (const char *, int) const'
| |-ParmVarDecl 0x55cf2ba8efa0 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x55cf2ba8f020 <col:37, col:41> col:41 len 'int'
|-CXXMethodDecl 0x55cf2ba8f208 <line:112:5, col:44> col:10 glob_match 'bool (const String &) const'
| `-ParmVarDecl 0x55cf2ba8f178 <col:21, col:35> col:35 pattern 'const String &'
|-CXXMethodDecl 0x55cf2ba8f420 <line:125:5, col:42> col:9 find_left 'int (char, int) const'
| |-ParmVarDecl 0x55cf2ba8f2c0 <col:19, col:24> col:24 c 'char'
| `-ParmVarDecl 0x55cf2ba8f340 <col:27, col:39> col:31 start 'int' cinit
|   `-IntegerLiteral 0x55cf2ba985d0 <col:39> 'int' 0
|-CXXMethodDecl 0x55cf2ba8f640 <line:126:5, col:51> col:9 find_left 'int (const String &, int) const'
| |-ParmVarDecl 0x55cf2ba8f4e0 <col:19, col:33> col:33 x 'const String &'
| `-ParmVarDecl 0x55cf2ba8f560 <col:36, col:48> col:40 start 'int' cinit
|   `-IntegerLiteral 0x55cf2ba985f0 <col:48> 'int' 0
|-CXXMethodDecl 0x55cf2ba8f820 <line:127:5, col:52> col:9 find_right 'int (char, int) const'
| |-ParmVarDecl 0x55cf2ba8f700 <col:20, col:25> col:25 c 'char'
| `-ParmVarDecl 0x55cf2ba8f780 <col:28, col:40> col:32 start 'int' cinit
|   `-IntegerLiteral 0x55cf2ba98610 <col:40> 'int' 2147483647
|-CXXMethodDecl 0x55cf2ba8f8f0 <line:129:5, col:20> col:12 lower 'String () const'
|-CXXMethodDecl 0x55cf2ba8f9b0 <line:130:5, col:20> col:12 upper 'String () const'
|-CXXMethodDecl 0x55cf2ba8fa70 <line:131:5, col:24> col:12 printable 'String () const'
|-CXXMethodDecl 0x55cf2ba8fb30 <line:132:5, col:25> col:12 quoted_hex 'String () const'
|-CXXMethodDecl 0x55cf2ba8fbf0 <line:133:5, col:26> col:12 encode_json 'String () const'
|-CXXMethodDecl 0x55cf2ba8fd98 <line:135:5, col:45> col:20 used operator= 'String &(const String &)' inline
| `-ParmVarDecl 0x55cf2ba8fca0 <col:30, col:44> col:44 x 'const String &'
|-CXXMethodDecl 0x55cf2ba8ff18 <line:137:5, col:40> col:20 used operator= 'String &(String &&)' inline
| `-ParmVarDecl 0x55cf2ba8fe50 <col:30, col:39> col:39 x 'String &&'
|-CXXMethodDecl 0x55cf2ba900b0 <line:139:5, col:46> col:20 operator= 'String &(const char *)' inline
| `-ParmVarDecl 0x55cf2ba8ffd8 <col:30, col:42> col:42 cstr 'const char *'
|-CXXMethodDecl 0x55cf2ba90228 <line:141:5, col:31> col:17 swap 'void (String &)' inline
| `-ParmVarDecl 0x55cf2ba90168 <col:22, col:30> col:30 x 'String &'
|-CXXMethodDecl 0x55cf2ba90370 <line:143:5, col:39> col:17 append 'void (const String &)' inline
| `-ParmVarDecl 0x55cf2ba902e0 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x55cf2ba904c0 <line:144:5, col:40> col:17 used append 'void (const char *)' inline
| `-ParmVarDecl 0x55cf2ba90430 <col:24, col:36> col:36 cstr 'const char *'
|-CXXMethodDecl 0x55cf2ba90698 <line:145:5, col:46> col:17 used append 'void (const char *, int)' inline
| |-ParmVarDecl 0x55cf2ba90580 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x55cf2ba90600 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x55cf2ba90878 <line:146:5, col:59> col:17 append 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x55cf2ba90760 <col:24, col:36> col:36 first 'const char *'
| `-ParmVarDecl 0x55cf2ba907e0 <col:43, col:55> col:55 last 'const char *'
|-CXXMethodDecl 0x55cf2ba909c8 <line:147:5, col:30> col:17 append 'void (char)' inline
| `-ParmVarDecl 0x55cf2ba90938 <col:24, col:29> col:29 c 'char'
|-CXXMethodDecl 0x55cf2ba90bd8 <line:148:5, col:36> col:10 append_fill 'void (int, int)'
| |-ParmVarDecl 0x55cf2ba90a88 <col:22, col:26> col:26 c 'int'
| `-ParmVarDecl 0x55cf2ba90b08 <col:29, col:33> col:33 len 'int'
|-CXXMethodDecl 0x55cf2ba90d38 <line:149:5, col:39> col:11 used append_uninitialized 'char *(int)'
| `-ParmVarDecl 0x55cf2ba90ca0 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x55cf2ba90e90 <line:150:5, col:68> col:18 append_garbage 'char *(int)' inline
| |-ParmVarDecl 0x55cf2ba90df8 <col:33, col:37> col:37 len 'int'
| `-DeprecatedAttr 0x55cf2ba90f38 <col:57> "" ""
|-CXXMethodDecl 0x55cf2ba91048 <line:152:5, col:46> col:20 used operator+= 'String &(const String &)' inline
| `-ParmVarDecl 0x55cf2ba90fb8 <col:31, col:45> col:45 x 'const String &'
|-CXXMethodDecl 0x55cf2ba91198 <line:153:5, col:47> col:20 operator+= 'String &(const char *)' inline
| `-ParmVarDecl 0x55cf2ba91108 <col:31, col:43> col:43 cstr 'const char *'
|-CXXMethodDecl 0x55cf2ba91318 <line:154:5, col:37> col:20 operator+= 'String &(char)' inline
| `-ParmVarDecl 0x55cf2ba91250 <col:31, col:36> col:36 c 'char'
|-CXXMethodDecl 0x55cf2ba913e0 <line:160:5, col:29> col:17 is_shared 'bool () const' inline
|-CXXMethodDecl 0x55cf2ba914a0 <line:161:5, col:29> col:17 is_stable 'bool () const' inline
|-CXXMethodDecl 0x55cf2ba91560 <line:163:5, col:60> col:19 unique 'String () const' inline
| `-DeprecatedAttr 0x55cf2ba91600 <col:49> "" ""
|-CXXMethodDecl 0x55cf2ba91690 <line:164:5, col:30> col:19 used unshared 'String () const' inline
|-CXXMethodDecl 0x55cf2ba91750 <line:165:5, col:29> col:19 compact 'String () const' inline
|-CXXMethodDecl 0x55cf2ba91840 <line:167:5, col:24> col:11 mutable_data 'char *()'
|-CXXMethodDecl 0x55cf2ba91908 <line:168:5, col:25> col:11 mutable_c_str 'char *()'
|-CXXMethodDecl 0x55cf2ba919c8 <line:170:5, col:52> col:33 make_out_of_memory 'const String &()' static inline
|-CXXMethodDecl 0x55cf2ba91a88 <line:171:5, col:33> col:17 out_of_memory 'bool () const' inline
|-CXXMethodDecl 0x55cf2ba91b80 <line:172:5, col:50> col:31 out_of_memory_data 'const char *()' static inline
|-CXXMethodDecl 0x55cf2ba91c48 <line:173:5, col:44> col:23 out_of_memory_length 'int ()' static inline
|-CXXMethodDecl 0x55cf2ba91d10 <line:174:5, col:42> col:31 empty_data 'const char *()' static inline
|-CXXMethodDecl 0x55cf2ba91ee8 <line:180:5, col:81> col:31 skip_utf8_char 'const char *(const char *, const char *)' static inline
| |-ParmVarDecl 0x55cf2ba91dc8 <col:46, col:58> col:58 first 'const char *'
| `-ParmVarDecl 0x55cf2ba91e48 <col:65, col:77> col:77 last 'const char *'
|-CXXMethodDecl 0x55cf2ba92110 <line:181:5, line:182:38> line:181:33 used skip_utf8_char 'const unsigned char *(const unsigned char *, const unsigned char *)' static
| |-ParmVarDecl 0x55cf2ba91fb0 <col:48, col:69> col:69 first 'const unsigned char *'
| `-ParmVarDecl 0x55cf2ba92030 <line:182:13, col:34> col:34 last 'const unsigned char *'
|-VarDecl 0x55cf2ba92220 <line:184:5, col:35> col:23 used bool_data 'const char [11]' static
|-AccessSpecDecl 0x55cf2ba92288 <line:186:3, col:10> col:3 private
|-CXXRecordDecl 0x55cf2ba922b0 <line:189:5, line:198:5> line:189:12 referenced struct memo_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55cf2ba923c8 <col:5, col:12> col:12 implicit struct memo_t
| |-FieldDecl 0x55cf2ba92468 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
| |-FieldDecl 0x55cf2ba924c8 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
| |-FieldDecl 0x55cf2ba92528 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
| `-FieldDecl 0x55cf2ba925d8 <line:197:2, col:18> col:7 real_data 'char [8]'
|-EnumDecl 0x55cf2ba92640 <line:200:5, line:202:5> line:200:5
| `-EnumConstantDecl 0x55cf2ba92878 <line:201:2, col:32> col:2 MEMO_SPACE 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)'
|   `-ImplicitCastExpr 0x55cf2ba928c8 <col:15, col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55cf2ba92858 <col:15, col:32> 'unsigned long' Int: 12
|       `-BinaryOperator 0x55cf2ba92768 <col:15, col:32> 'unsigned long' '-'
|         |-UnaryExprOrTypeTraitExpr 0x55cf2ba92710 <col:15, col:28> 'unsigned long' sizeof 'String::memo_t'
|         `-ImplicitCastExpr 0x55cf2ba92750 <col:32> 'unsigned long' <IntegralCast>
|           `-IntegerLiteral 0x55cf2ba92730 <col:32> 'int' 8
|-CXXRecordDecl 0x55cf2ba928e0 <line:204:5, line:208:5> line:204:12 referenced struct rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55cf2ba929f8 <col:5, col:12> col:12 implicit struct rep_t
| |-FieldDecl 0x55cf2ba92aa0 <line:205:2, col:14> col:14 referenced data 'const char *'
| |-FieldDecl 0x55cf2ba92b08 <line:206:2, col:6> col:6 referenced length 'int'
| |-FieldDecl 0x55cf2ba92b98 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
| |-CXXConstructorDecl 0x55cf2ba98aa0 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55cf2ba98ed8 <col:12>
| |-CXXConstructorDecl 0x55cf2ba98ba8 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55cf2ba98cb8 <col:12> col:12 used 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x55cf2ba92aa0 'data' 'const char *'
| | | `-ImplicitCastExpr 0x55cf2ba9b460 <col:12> 'const char *' <LValueToRValue>
| | |   `-MemberExpr 0x55cf2ba9b430 <col:12> 'const char *const' lvalue .data 0x55cf2ba92aa0
| | |     `-DeclRefExpr 0x55cf2ba9b410 <col:12> 'const String::rep_t' lvalue ParmVar 0x55cf2ba98cb8 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x55cf2ba92b08 'length' 'int'
| | | `-ImplicitCastExpr 0x55cf2ba9b4f0 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x55cf2ba9b4c0 <col:12> 'const int' lvalue .length 0x55cf2ba92b08
| | |     `-DeclRefExpr 0x55cf2ba9b4a0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55cf2ba98cb8 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x55cf2ba92b98 'memo' 'String::memo_t *'
| | | `-ImplicitCastExpr 0x55cf2ba9b580 <col:12> 'String::memo_t *' <LValueToRValue>
| | |   `-MemberExpr 0x55cf2ba9b550 <col:12> 'String::memo_t *const' lvalue .memo 0x55cf2ba92b98
| | |     `-DeclRefExpr 0x55cf2ba9b530 <col:12> 'const String::rep_t' lvalue ParmVar 0x55cf2ba98cb8 '' 'const String::rep_t &'
| | `-CompoundStmt 0x55cf2ba9b5d8 <col:12>
| |-CXXConstructorDecl 0x55cf2ba98d58 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55cf2ba98d58
| | `-ParmVarDecl 0x55cf2ba98e68 <col:12> col:12 'String::rep_t &&'
| |-CXXDestructorDecl 0x55cf2ba9e3c0 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x55cf2baa9dd8 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55cf2baa9ee8 <col:12> col:12 used 'const String::rep_t &'
| | `-CompoundStmt 0x55cf2baaa400 <col:12>
| |   |-BinaryOperator 0x55cf2baaa218 <col:12> 'const char *' lvalue '='
| |   | |-MemberExpr 0x55cf2baaa1d0 <col:12> 'const char *' lvalue ->data 0x55cf2ba92aa0
| |   | | `-CXXThisExpr 0x55cf2baaa1c0 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x55cf2baaa200 <col:12> 'const char *' <LValueToRValue>
| |   |   `-MemberExpr 0x55cf2baaa190 <col:12> 'const char *const' lvalue .data 0x55cf2ba92aa0
| |   |     `-DeclRefExpr 0x55cf2baaa170 <col:12> 'const String::rep_t' lvalue ParmVar 0x55cf2baa9ee8 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x55cf2baaa2e0 <col:12> 'int' lvalue '='
| |   | |-MemberExpr 0x55cf2baaa298 <col:12> 'int' lvalue ->length 0x55cf2ba92b08
| |   | | `-CXXThisExpr 0x55cf2baaa288 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x55cf2baaa2c8 <col:12> 'int' <LValueToRValue>
| |   |   `-MemberExpr 0x55cf2baaa258 <col:12> 'const int' lvalue .length 0x55cf2ba92b08
| |   |     `-DeclRefExpr 0x55cf2baaa238 <col:12> 'const String::rep_t' lvalue ParmVar 0x55cf2baa9ee8 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x55cf2baaa3a8 <col:12> 'String::memo_t *' lvalue '='
| |   | |-MemberExpr 0x55cf2baaa360 <col:12> 'String::memo_t *' lvalue ->memo 0x55cf2ba92b98
| |   | | `-CXXThisExpr 0x55cf2baaa350 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x55cf2baaa390 <col:12> 'String::memo_t *' <LValueToRValue>
| |   |   `-MemberExpr 0x55cf2baaa320 <col:12> 'String::memo_t *const' lvalue .memo 0x55cf2ba92b98
| |   |     `-DeclRefExpr 0x55cf2baaa300 <col:12> 'const String::rep_t' lvalue ParmVar 0x55cf2baa9ee8 '' 'const String::rep_t &'
| |   `-ReturnStmt 0x55cf2baaa3f0 <col:12>
| |     `-UnaryOperator 0x55cf2baaa3d8 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x55cf2baaa3c8 <col:12> 'String::rep_t *' this
| `-CXXMethodDecl 0x55cf2baa9f58 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55cf2baa9f58
|   `-ParmVarDecl 0x55cf2baaa068 <col:12> col:12 'String::rep_t &&'
|-FieldDecl 0x55cf2ba92c10 <line:211:5, col:19> col:19 referenced _r 'String::rep_t' mutable
|-CXXMethodDecl 0x55cf2ba92e58 <line:256:5, line:261:5> line:256:17 used assign_memo 'void (const char *, int, String::memo_t *) const' inline
| |-ParmVarDecl 0x55cf2ba92c78 <col:29, col:41> col:41 used data 'const char *'
| |-ParmVarDecl 0x55cf2ba92cf8 <col:47, col:51> col:51 used length 'int'
| |-ParmVarDecl 0x55cf2ba92d70 <col:59, col:67> col:67 used memo 'String::memo_t *'
| `-CompoundStmt 0x55cf2ba98a60 <col:79, line:261:5>
|   |-BinaryOperator 0x55cf2ba986d8 <line:257:2, col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x55cf2ba98670 <col:2, col:5> 'const char *' lvalue .data 0x55cf2ba92aa0
|   | | `-MemberExpr 0x55cf2ba98640 <col:2> 'String::rep_t' lvalue ->_r 0x55cf2ba92c10
|   | |   `-CXXThisExpr 0x55cf2ba98630 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x55cf2ba986c0 <col:12> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x55cf2ba986a0 <col:12> 'const char *' lvalue ParmVar 0x55cf2ba92c78 'data' 'const char *'
|   |-BinaryOperator 0x55cf2ba987a0 <line:258:2, col:14> 'int' lvalue '='
|   | |-MemberExpr 0x55cf2ba98738 <col:2, col:5> 'int' lvalue .length 0x55cf2ba92b08
|   | | `-MemberExpr 0x55cf2ba98708 <col:2> 'String::rep_t' lvalue ->_r 0x55cf2ba92c10
|   | |   `-CXXThisExpr 0x55cf2ba986f8 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x55cf2ba98788 <col:14> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55cf2ba98768 <col:14> 'int' lvalue ParmVar 0x55cf2ba92cf8 'length' 'int'
|   `-IfStmt 0x55cf2ba98a48 <line:259:2, line:260:41>
|     |-ImplicitCastExpr 0x55cf2ba988c0 <line:259:6, col:21> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x55cf2ba988a8 <col:6, col:21> 'String::memo_t *' <LValueToRValue>
|     |   `-ParenExpr 0x55cf2ba98888 <col:6, col:21> 'String::memo_t *' lvalue
|     |     `-BinaryOperator 0x55cf2ba98868 <col:7, col:17> 'String::memo_t *' lvalue '='
|     |       |-MemberExpr 0x55cf2ba98800 <col:7, col:10> 'String::memo_t *' lvalue .memo 0x55cf2ba92b98
|     |       | `-MemberExpr 0x55cf2ba987d0 <col:7> 'String::rep_t' lvalue ->_r 0x55cf2ba92c10
|     |       |   `-CXXThisExpr 0x55cf2ba987c0 <col:7> 'const String *' implicit this
|     |       `-ImplicitCastExpr 0x55cf2ba98850 <col:17> 'String::memo_t *' <LValueToRValue>
|     |         `-DeclRefExpr 0x55cf2ba98830 <col:17> 'String::memo_t *' lvalue ParmVar 0x55cf2ba92d70 'memo' 'String::memo_t *'
|     `-CallExpr 0x55cf2ba98a20 <line:260:6, col:41> 'void'
|       |-ImplicitCastExpr 0x55cf2ba98a08 <col:6, col:23> 'void (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55cf2ba98910 <col:6, col:23> 'void (volatile uint32_t &)' lvalue CXXMethod 0x55cf2ba818c8 'inc' 'void (volatile uint32_t &)'
|       `-MemberExpr 0x55cf2ba98978 <col:27, col:33> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x55cf2ba92468
|         `-ImplicitCastExpr 0x55cf2ba98960 <col:27> 'String::memo_t *' <LValueToRValue>
|           `-DeclRefExpr 0x55cf2ba98940 <col:27> 'String::memo_t *' lvalue ParmVar 0x55cf2ba92d70 'memo' 'String::memo_t *'
|-CXXConstructorDecl 0x55cf2ba93108 <line:263:5, line:265:5> line:263:12 used String 'void (const char *, int, String::memo_t *)' inline
| |-ParmVarDecl 0x55cf2ba92f28 <col:19, col:31> col:31 used data 'const char *'
| |-ParmVarDecl 0x55cf2ba92fa8 <col:37, col:41> col:41 used length 'int'
| |-ParmVarDecl 0x55cf2ba93020 <col:49, col:57> col:57 used memo 'String::memo_t *'
| |-CXXCtorInitializer Field 0x55cf2ba92c10 '_r' 'String::rep_t'
| | `-CXXConstructExpr 0x55cf2ba98ee8 <col:12> 'String::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55cf2ba99078 <col:63, line:265:5>
|   `-CXXMemberCallExpr 0x55cf2ba98fe0 <line:264:2, col:32> 'void'
|     |-MemberExpr 0x55cf2ba98f50 <col:2> '<bound member function type>' ->assign_memo 0x55cf2ba92e58
|     | `-ImplicitCastExpr 0x55cf2ba99018 <col:2> 'const String *' <NoOp>
|     |   `-CXXThisExpr 0x55cf2ba98f40 <col:2> 'String *' implicit this
|     |-ImplicitCastExpr 0x55cf2ba99030 <col:14> 'const char *' <LValueToRValue>
|     | `-DeclRefExpr 0x55cf2ba98f80 <col:14> 'const char *' lvalue ParmVar 0x55cf2ba92f28 'data' 'const char *'
|     |-ImplicitCastExpr 0x55cf2ba99048 <col:20> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x55cf2ba98fa0 <col:20> 'int' lvalue ParmVar 0x55cf2ba92fa8 'length' 'int'
|     `-ImplicitCastExpr 0x55cf2ba99060 <col:28> 'String::memo_t *' <LValueToRValue>
|       `-DeclRefExpr 0x55cf2ba98fc0 <col:28> 'String::memo_t *' lvalue ParmVar 0x55cf2ba93020 'memo' 'String::memo_t *'
|-CXXMethodDecl 0x55cf2ba93298 <line:267:5, line:269:5> line:267:17 used assign 'void (const String &) const' inline
| |-ParmVarDecl 0x55cf2ba931d8 <col:24, col:38> col:38 used x 'const String &'
| `-CompoundStmt 0x55cf2ba992d0 <col:47, line:269:5>
|   `-CXXMemberCallExpr 0x55cf2ba99250 <line:268:2, col:47> 'void'
|     |-MemberExpr 0x55cf2ba990a0 <col:2> '<bound member function type>' ->assign_memo 0x55cf2ba92e58
|     | `-CXXThisExpr 0x55cf2ba99090 <col:2> 'const String *' implicit this
|     |-ImplicitCastExpr 0x55cf2ba99288 <col:14, col:19> 'const char *' <LValueToRValue>
|     | `-MemberExpr 0x55cf2ba99120 <col:14, col:19> 'const char *' lvalue .data 0x55cf2ba92aa0
|     |   `-MemberExpr 0x55cf2ba990f0 <col:14, col:16> 'String::rep_t' lvalue ._r 0x55cf2ba92c10
|     |     `-DeclRefExpr 0x55cf2ba990d0 <col:14> 'const String' lvalue ParmVar 0x55cf2ba931d8 'x' 'const String &'
|     |-ImplicitCastExpr 0x55cf2ba992a0 <col:25, col:30> 'int' <LValueToRValue>
|     | `-MemberExpr 0x55cf2ba991a0 <col:25, col:30> 'int' lvalue .length 0x55cf2ba92b08
|     |   `-MemberExpr 0x55cf2ba99170 <col:25, col:27> 'String::rep_t' lvalue ._r 0x55cf2ba92c10
|     |     `-DeclRefExpr 0x55cf2ba99150 <col:25> 'const String' lvalue ParmVar 0x55cf2ba931d8 'x' 'const String &'
|     `-ImplicitCastExpr 0x55cf2ba992b8 <col:38, col:43> 'String::memo_t *' <LValueToRValue>
|       `-MemberExpr 0x55cf2ba99220 <col:38, col:43> 'String::memo_t *' lvalue .memo 0x55cf2ba92b98
|         `-MemberExpr 0x55cf2ba991f0 <col:38, col:40> 'String::rep_t' lvalue ._r 0x55cf2ba92c10
|           `-DeclRefExpr 0x55cf2ba991d0 <col:38> 'const String' lvalue ParmVar 0x55cf2ba931d8 'x' 'const String &'
|-CXXMethodDecl 0x55cf2ba93360 <line:271:5, line:278:5> line:271:17 used deref 'void () const' inline
| `-CompoundStmt 0x55cf2ba99c90 <col:31, line:278:5>
|   `-IfStmt 0x55cf2ba99c78 <line:272:2, line:277:2>
|     |-ImplicitCastExpr 0x55cf2ba99370 <line:272:6, col:9> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x55cf2ba99358 <col:6, col:9> 'String::memo_t *' <LValueToRValue>
|     |   `-MemberExpr 0x55cf2ba99328 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x55cf2ba92b98
|     |     `-MemberExpr 0x55cf2ba992f8 <col:6> 'String::rep_t' lvalue ->_r 0x55cf2ba92c10
|     |       `-CXXThisExpr 0x55cf2ba992e8 <col:6> 'const String *' implicit this
|     `-CompoundStmt 0x55cf2ba99c50 <col:15, line:277:2>
|       |-ParenExpr 0x55cf2ba99820 <line:273:6, col:166> 'void'
|       | `-ConditionalOperator 0x55cf2ba997f0 <col:7, col:165> 'void'
|       |   |-CXXStaticCastExpr 0x55cf2ba99480 <col:7, col:44> 'bool' static_cast<_Bool> <NoOp>
|       |   | `-ImplicitCastExpr 0x55cf2ba99468 <col:27, col:36> 'bool' <IntegralToBoolean> part_of_explicit_cast
|       |   |   `-ImplicitCastExpr 0x55cf2ba99450 <col:27, col:36> 'uint32_t':'unsigned int' <LValueToRValue> part_of_explicit_cast
|       |   |     `-MemberExpr 0x55cf2ba99410 <col:27, col:36> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x55cf2ba92468
|       |   |       `-ImplicitCastExpr 0x55cf2ba993f8 <col:27, col:30> 'String::memo_t *' <LValueToRValue>
|       |   |         `-MemberExpr 0x55cf2ba993c8 <col:27, col:30> 'String::memo_t *' lvalue .memo 0x55cf2ba92b98
|       |   |           `-MemberExpr 0x55cf2ba99398 <col:27> 'String::rep_t' lvalue ->_r 0x55cf2ba92c10
|       |   |             `-CXXThisExpr 0x55cf2ba99388 <col:27> 'const String *' implicit this
|       |   |-CXXFunctionalCastExpr 0x55cf2ba994e0 <col:48, col:55> 'void' functional cast to void <ToVoid>
|       |   | `-IntegerLiteral 0x55cf2ba994c0 <col:54> 'int' 0
|       |   `-CallExpr 0x55cf2ba99750 <col:59, col:165> 'void'
|       |     |-ImplicitCastExpr 0x55cf2ba99738 <col:59> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x55cf2ba996b8 <col:59> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55cf2b7f8810 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|       |     |-ImplicitCastExpr 0x55cf2ba99790 <col:74> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x55cf2ba995c8 <col:74> 'const char [18]' lvalue "_r.memo->refcount"
|       |     |-ImplicitCastExpr 0x55cf2ba997a8 <col:95> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x55cf2ba995f8 <col:95> 'const char [29]' lvalue "../dummy_inc/click/string.hh"
|       |     |-ImplicitCastExpr 0x55cf2ba997c0 <col:127> 'unsigned int' <IntegralCast>
|       |     | `-IntegerLiteral 0x55cf2ba99630 <col:127> 'int' 273
|       |     `-ImplicitCastExpr 0x55cf2ba997d8 <col:132, col:146> 'const char *' <ArrayToPointerDecay>
|       |       `-UnaryOperator 0x55cf2ba996a0 <col:132, col:146> 'const char [27]' lvalue prefix '__extension__' cannot overflow
|       |         `-PredefinedExpr 0x55cf2ba99688 <col:146> 'const char [27]' lvalue __PRETTY_FUNCTION__
|       |           `-StringLiteral 0x55cf2ba99650 <col:146> 'const char [27]' lvalue "void String::deref() const"
|       |-IfStmt 0x55cf2ba99b70 <line:274:6, line:275:22>
|       | |-CallExpr 0x55cf2ba99a30 <line:274:10, col:57> 'bool'
|       | | |-ImplicitCastExpr 0x55cf2ba99a18 <col:10, col:27> 'bool (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | | | `-DeclRefExpr 0x55cf2ba99990 <col:10, col:27> 'bool (volatile uint32_t &)' lvalue CXXMethod 0x55cf2ba82d10 'dec_and_test' 'bool (volatile uint32_t &)'
|       | | `-MemberExpr 0x55cf2ba99960 <col:40, col:49> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x55cf2ba92468
|       | |   `-ImplicitCastExpr 0x55cf2ba99948 <col:40, col:43> 'String::memo_t *' <LValueToRValue>
|       | |     `-MemberExpr 0x55cf2ba99918 <col:40, col:43> 'String::memo_t *' lvalue .memo 0x55cf2ba92b98
|       | |       `-MemberExpr 0x55cf2ba998e8 <col:40> 'String::rep_t' lvalue ->_r 0x55cf2ba92c10
|       | |         `-CXXThisExpr 0x55cf2ba998d8 <col:40> 'const String *' implicit this
|       | `-CallExpr 0x55cf2ba99b30 <line:275:3, col:22> 'void'
|       |   |-ImplicitCastExpr 0x55cf2ba99b18 <col:3> 'void (*)(String::memo_t *)' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x55cf2ba99a58 <col:3> 'void (String::memo_t *)' lvalue CXXMethod 0x55cf2ba979b0 'delete_memo' 'void (String::memo_t *)'
|       |   `-ImplicitCastExpr 0x55cf2ba99b58 <col:15, col:18> 'String::memo_t *' <LValueToRValue>
|       |     `-MemberExpr 0x55cf2ba99ab8 <col:15, col:18> 'String::memo_t *' lvalue .memo 0x55cf2ba92b98
|       |       `-MemberExpr 0x55cf2ba99a88 <col:15> 'String::rep_t' lvalue ->_r 0x55cf2ba92c10
|       |         `-CXXThisExpr 0x55cf2ba99a78 <col:15> 'const String *' implicit this
|       `-BinaryOperator 0x55cf2ba99c30 <line:276:6, col:16> 'String::memo_t *' lvalue '='
|         |-MemberExpr 0x55cf2ba99bc8 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x55cf2ba92b98
|         | `-MemberExpr 0x55cf2ba99b98 <col:6> 'String::rep_t' lvalue ->_r 0x55cf2ba92c10
|         |   `-CXXThisExpr 0x55cf2ba99b88 <col:6> 'const String *' implicit this
|         `-ImplicitCastExpr 0x55cf2ba99c18 <col:16> 'String::memo_t *' <NullToPointer>
|           `-IntegerLiteral 0x55cf2ba99bf8 <col:16> 'int' 0
|-CXXMethodDecl 0x55cf2ba935f8 <line:280:5, col:56> col:10 used assign 'void (const char *, int, bool)'
| |-ParmVarDecl 0x55cf2ba93418 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x55cf2ba93498 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x55cf2ba93510 <col:41, col:46> col:46 need_deref 'bool'
|-CXXMethodDecl 0x55cf2ba936d0 <line:281:5, col:31> col:10 assign_out_of_memory 'void ()'
|-CXXMethodDecl 0x55cf2ba93920 <line:282:5, col:53> col:10 used append 'void (const char *, int, String::memo_t *)'
| |-ParmVarDecl 0x55cf2ba93788 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x55cf2ba93808 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x55cf2ba93880 <col:41, col:49> col:49 memo 'String::memo_t *'
|-CXXMethodDecl 0x55cf2ba93b08 <line:283:5, col:58> col:19 used hard_make_stable 'String (const char *, int)' static
| |-ParmVarDecl 0x55cf2ba939f0 <col:36, col:48> col:48 s 'const char *'
| `-ParmVarDecl 0x55cf2ba93a70 <col:51, col:55> col:55 len 'int'
|-CXXMethodDecl 0x55cf2ba93c08 <line:284:5, line:286:5> line:284:27 used absent_memo 'String::memo_t *()' static inline
| `-CompoundStmt 0x55cf2ba99d68 <col:41, line:286:5>
|   `-ReturnStmt 0x55cf2ba99d58 <line:285:2, col:48>
|     `-CXXReinterpretCastExpr 0x55cf2ba99d28 <col:9, col:48> 'String::memo_t *' reinterpret_cast<struct String::memo_t *> <IntegralToPointer>
|       `-CXXFunctionalCastExpr 0x55cf2ba99cf0 <col:36, col:47> 'uintptr_t':'unsigned long' functional cast to uintptr_t <NoOp>
|         `-ImplicitCastExpr 0x55cf2ba99cd8 <col:46> 'uintptr_t':'unsigned long' <IntegralCast> part_of_explicit_cast
|           `-IntegerLiteral 0x55cf2ba99cb8 <col:46> 'int' 1
|-CXXMethodDecl 0x55cf2ba93ea8 <line:287:5, col:68> col:20 create_memo 'String::memo_t *(char *, int, int)' static
| |-ParmVarDecl 0x55cf2ba93cc0 <col:32, col:38> col:38 space 'char *'
| |-ParmVarDecl 0x55cf2ba93d40 <col:45, col:49> col:49 dirty 'int'
| `-ParmVarDecl 0x55cf2ba93dc0 <col:56, col:60> col:60 capacity 'int'
|-CXXMethodDecl 0x55cf2ba979b0 <line:288:5, col:41> col:17 used delete_memo 'void (String::memo_t *)' static
| `-ParmVarDecl 0x55cf2ba93f70 <col:29, col:37> col:37 memo 'String::memo_t *'
|-CXXMethodDecl 0x55cf2ba97a80 <line:289:5, col:30> col:17 hard_c_str 'const char *() const'
|-CXXMethodDecl 0x55cf2ba97c50 <line:290:5, col:46> col:10 used hard_equals 'bool (const char *, int) const'
| |-ParmVarDecl 0x55cf2ba97b38 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x55cf2ba97bb8 <col:37, col:41> col:41 len 'int'
|-VarDecl 0x55cf2ba97d10 <line:292:5, col:23> col:23 used null_data 'const char' static
|-VarDecl 0x55cf2ba97dd8 <line:293:5, col:34> col:23 used oom_data 'const char [15]' static
|-VarDecl 0x55cf2ba97ed8 <line:294:5, col:34> col:23 int_data 'const char [20]' static
|-VarDecl 0x55cf2ba97f50 <line:295:5, col:24> col:24 used null_string_rep 'const String::rep_t' static
|-VarDecl 0x55cf2ba97fc8 <line:296:5, col:24> col:24 used oom_string_rep 'const String::rep_t' static
|-EnumDecl 0x55cf2ba98030 <line:297:5, col:25> col:5
| `-EnumConstantDecl 0x55cf2ba98130 <col:12, col:22> col:12 referenced oom_len 'String::(anonymous enum at ../dummy_inc/click/string.hh:297:5)'
|   `-ImplicitCastExpr 0x55cf2ba98180 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55cf2ba98110 <col:22> 'int' Int: 14
|       `-IntegerLiteral 0x55cf2ba980f0 <col:22> 'int' 14
|-CXXMethodDecl 0x55cf2ba98398 <line:299:5, col:46> col:19 make_claim 'String (char *, int, int)' static
| |-ParmVarDecl 0x55cf2ba981b0 <col:30, col:35> col:36 'char *'
| |-ParmVarDecl 0x55cf2ba98230 <col:38> col:41 'int'
| `-ParmVarDecl 0x55cf2ba982b0 <col:43> col:46 'int'
|-FriendDecl 0x55cf2ba984a0 <line:301:5, col:19> col:12 'struct rep_t':'String::rep_t'
`-FriendDecl 0x55cf2ba98530 <line:302:5, col:18> col:12 'class StringAccum':'StringAccum'

Layout: <CGRecordLayout
  LLVMType:%class.String = type { %"struct.String::rep_t" }
  NonVirtualBaseLLVMType:%class.String = type { %"struct.String::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55cf2bd0f520 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'typed_array_memory<String>'
|-CXXRecordDecl 0x55cf2bd0f6f8 prev 0x55cf2bd0f520 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55cf2bd0f788 <col:46, col:52> col:46 public
|-TypedefDecl 0x55cf2bd0f7b0 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55cf2b759370 'int'
|-TypedefDecl 0x55cf2bd11110 <line:13:5, col:31> col:31 type 'typename typed_array_memory<String>::type':'String'
| `-ElaboratedType 0x55cf2bd110c0 'typename typed_array_memory<String>::type' sugar
|   `-TypedefType 0x55cf2bd110a0 'typed_array_memory<String>::type' sugar
|     |-Typedef 0x55cf2bd0f9c8 'type'
|     `-SubstTemplateTypeParmType 0x55cf2bd0f990 'String' sugar
|       |-TemplateTypeParmType 0x55cf2ba4cdf0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55cf2ba4cda0 'T'
|       `-RecordType 0x55cf2ba898f0 'String'
|         `-CXXRecord 0x55cf2ba89860 'String'
|-TypedefDecl 0x55cf2bd111c8 <line:14:5, col:19> col:19 iterator 'vector_memory<typed_array_memory<String> >::type *'
| `-PointerType 0x55cf2bd11190 'vector_memory<typed_array_memory<String> >::type *'
|   `-TypedefType 0x55cf2bd11170 'vector_memory<typed_array_memory<String> >::type' sugar
|     |-Typedef 0x55cf2bd11110 'type'
|     `-ElaboratedType 0x55cf2bd110c0 'typename typed_array_memory<String>::type' sugar
|       `-TypedefType 0x55cf2bd110a0 'typed_array_memory<String>::type' sugar
|         |-Typedef 0x55cf2bd0f9c8 'type'
|         `-SubstTemplateTypeParmType 0x55cf2bd0f990 'String' sugar
|           |-TemplateTypeParmType 0x55cf2ba4cdf0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55cf2ba4cda0 'T'
|           `-RecordType 0x55cf2ba898f0 'String'
|             `-CXXRecord 0x55cf2ba89860 'String'
|-CXXMethodDecl 0x55cf2bd11348 <line:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<typed_array_memory<String> >::type *) const' inline
| `-ParmVarDecl 0x55cf2bd11258 <col:36, col:48> col:48 argp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXConstructorDecl 0x55cf2bd11438 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55cf2bd11518 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x55cf2bd11518
|-CXXMethodDecl 0x55cf2bd117e8 <line:25:5, col:43> col:10 assign 'void (const vector_memory<typed_array_memory<String> > &)'
| `-ParmVarDecl 0x55cf2bd116f0 <col:17, col:42> col:42 x 'const vector_memory<typed_array_memory<String> > &'
|-CXXMethodDecl 0x55cf2bd11a28 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x55cf2bd118a0 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55cf2bd11918 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55cf2bd11bf8 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x55cf2bd11ae8 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55cf2bd11b60 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55cf2bd11d58 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<typed_array_memory<String> >::iterator ()'
|-CXXMethodDecl 0x55cf2bd11e28 <line:31:5, line:33:5> line:31:14 end 'vector_memory<typed_array_memory<String> >::iterator ()'
|-CXXMethodDecl 0x55cf2bd12078 <line:34:5, col:48> col:14 insert 'vector_memory<typed_array_memory<String> >::iterator (vector_memory<typed_array_memory<String> >::iterator, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x55cf2bd11ee8 <col:21, col:30> col:30 it 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
| `-ParmVarDecl 0x55cf2bd11f60 <col:34, col:46> col:46 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55cf2bd122d8 <line:35:5, col:42> col:14 erase 'vector_memory<typed_array_memory<String> >::iterator (vector_memory<typed_array_memory<String> >::iterator, vector_memory<typed_array_memory<String> >::iterator)'
| |-ParmVarDecl 0x55cf2bd12148 <col:20, col:29> col:29 a 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
| `-ParmVarDecl 0x55cf2bd121c0 <col:32, col:41> col:41 b 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55cf2bd12498 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<typed_array_memory<String> >::type *)' inline
| `-ParmVarDecl 0x55cf2bd123a8 <col:27, col:39> col:39 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55cf2bd12658 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<typed_array_memory<String> >::type *)' inline
| `-ParmVarDecl 0x55cf2bd12560 <col:37, col:43> col:43 vp 'vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55cf2bd12710 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55cf2bd127c0 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55cf2bd129f8 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x55cf2bd12870 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55cf2bd128e8 <col:45, col:57> col:57 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55cf2bd12c98 <line:66:5, col:35> col:10 swap 'void (vector_memory<typed_array_memory<String> > &)'
| `-ParmVarDecl 0x55cf2bd12ba0 <col:15, col:34> col:34 x 'vector_memory<typed_array_memory<String> > &'
|-FieldDecl 0x55cf2bd12d60 <line:68:5, col:11> col:11 l_ 'vector_memory<typed_array_memory<String> >::type *'
|-FieldDecl 0x55cf2bd12db0 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55cf2bd12e00 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.1 = type { %class.String*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.1 = type { %class.String*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55cf2bcc0ec0 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'String'
|-CXXRecordDecl 0x55cf2bb5c408 prev 0x55cf2bcc0ec0 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55cf2bd0f490 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<String>::type':'typed_array_memory<String>'
| `-ElaboratedType 0x55cf2bd0f440 'typename array_memory<String>::type' sugar
|   `-TypedefType 0x55cf2bd0f420 'conditional<false, sized_array_memory<24>, typed_array_memory<String> >::type' sugar
|     |-Typedef 0x55cf2bd0f2d0 'type'
|     `-SubstTemplateTypeParmType 0x55cf2bd0f160 'typed_array_memory<String>' sugar
|       |-TemplateTypeParmType 0x55cf2ba22ba0 'F' dependent depth 0 index 1
|       | `-TemplateTypeParm 0x55cf2ba22b48 'F'
|       `-RecordType 0x55cf2bd0edc0 'typed_array_memory<String>'
|         `-ClassTemplateSpecialization 0x55cf2bd0ece0 'typed_array_memory'
|-FieldDecl 0x55cf2bd12e50 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<String>::array_memory_type>':'vector_memory<typed_array_memory<String> >' mutable
|-AccessSpecDecl 0x55cf2bd12ea0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55cf2bd12ed8 <line:118:5, col:15> col:15 value_type 'String':'String'
| `-SubstTemplateTypeParmType 0x55cf2bb5c4a0 'String' sugar
|   |-TemplateTypeParmType 0x55cf2ba5a110 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55cf2ba5a0b8 'T'
|   `-RecordType 0x55cf2ba898f0 'String'
|     `-CXXRecord 0x55cf2ba89860 'String'
|-TypedefDecl 0x55cf2bd12f68 <line:119:5, col:16> col:16 reference 'String &'
| `-LValueReferenceType 0x55cf2bd12f30 'String &'
|   `-SubstTemplateTypeParmType 0x55cf2bb5c4a0 'String' sugar
|     |-TemplateTypeParmType 0x55cf2ba5a110 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55cf2ba5a0b8 'T'
|     `-RecordType 0x55cf2ba898f0 'String'
|       `-CXXRecord 0x55cf2ba89860 'String'
|-TypedefDecl 0x55cf2bd12ff8 <line:120:5, col:22> col:22 const_reference 'const String &'
| `-LValueReferenceType 0x55cf2bd12fc0 'const String &'
|   `-QualType 0x55cf2bb5c4a1 'const String' const
|     `-SubstTemplateTypeParmType 0x55cf2bb5c4a0 'String' sugar
|       |-TemplateTypeParmType 0x55cf2ba5a110 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55cf2ba5a0b8 'T'
|       `-RecordType 0x55cf2ba898f0 'String'
|         `-CXXRecord 0x55cf2ba89860 'String'
|-TypedefDecl 0x55cf2bd13088 <line:121:5, col:16> col:16 pointer 'String *'
| `-PointerType 0x55cf2bd13050 'String *'
|   `-SubstTemplateTypeParmType 0x55cf2bb5c4a0 'String' sugar
|     |-TemplateTypeParmType 0x55cf2ba5a110 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55cf2ba5a0b8 'T'
|     `-RecordType 0x55cf2ba898f0 'String'
|       `-CXXRecord 0x55cf2ba89860 'String'
|-TypedefDecl 0x55cf2bd13118 <line:122:5, col:22> col:22 const_pointer 'const String *'
| `-PointerType 0x55cf2bd130e0 'const String *'
|   `-QualType 0x55cf2bb5c4a1 'const String' const
|     `-SubstTemplateTypeParmType 0x55cf2bb5c4a0 'String' sugar
|       |-TemplateTypeParmType 0x55cf2ba5a110 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55cf2ba5a0b8 'T'
|       `-RecordType 0x55cf2ba898f0 'String'
|         `-CXXRecord 0x55cf2ba89860 'String'
|-TypedefDecl 0x55cf2bd13d70 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<String>::type':'const String &'
| `-ElaboratedType 0x55cf2bd13d20 'typename fast_argument<String>::type' sugar
|   `-TypedefType 0x55cf2bd13d00 'fast_argument<String, true>::type' sugar
|     |-Typedef 0x55cf2bd13c38 'type'
|     `-LValueReferenceType 0x55cf2bd13c00 'const String &'
|       `-QualType 0x55cf2bd139a1 'const String' const
|         `-SubstTemplateTypeParmType 0x55cf2bd139a0 'String' sugar
|           |-TemplateTypeParmType 0x55cf2ba2caf0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55cf2ba2ca98 'T'
|           `-RecordType 0x55cf2ba898f0 'String'
|             `-CXXRecord 0x55cf2ba89860 'String'
|-TypedefDecl 0x55cf2bd13dd8 <line:126:5, col:22> col:22 const_access_type 'const String &'
| `-LValueReferenceType 0x55cf2bd12fc0 'const String &'
|   `-QualType 0x55cf2bb5c4a1 'const String' const
|     `-SubstTemplateTypeParmType 0x55cf2bb5c4a0 'String' sugar
|       |-TemplateTypeParmType 0x55cf2ba5a110 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55cf2ba5a0b8 'T'
|       `-RecordType 0x55cf2ba898f0 'String'
|         `-CXXRecord 0x55cf2ba89860 'String'
|-TypedefDecl 0x55cf2bd13e30 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55cf2b759370 'int'
|-TypedefDecl 0x55cf2bd13e98 <line:130:5, col:16> col:16 iterator 'String *'
| `-PointerType 0x55cf2bd13050 'String *'
|   `-SubstTemplateTypeParmType 0x55cf2bb5c4a0 'String' sugar
|     |-TemplateTypeParmType 0x55cf2ba5a110 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55cf2ba5a0b8 'T'
|     `-RecordType 0x55cf2ba898f0 'String'
|       `-CXXRecord 0x55cf2ba89860 'String'
|-TypedefDecl 0x55cf2bd13f00 <line:131:5, col:22> col:22 const_iterator 'const String *'
| `-PointerType 0x55cf2bd130e0 'const String *'
|   `-QualType 0x55cf2bb5c4a1 'const String' const
|     `-SubstTemplateTypeParmType 0x55cf2bb5c4a0 'String' sugar
|       |-TemplateTypeParmType 0x55cf2ba5a110 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55cf2ba5a0b8 'T'
|       `-RecordType 0x55cf2ba898f0 'String'
|         `-CXXRecord 0x55cf2ba89860 'String'
|-EnumDecl 0x55cf2bd13f58 <line:134:5> col:5
| `-EnumConstantDecl 0x55cf2bd14050 <col:12, col:40> col:12 RESERVE_GROW 'Vector<String>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55cf2bd14030 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55cf2ba5baa8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55cf2ba5ba80 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55cf2ba5ba60 <col:40> 'int' 1
|-CXXConstructorDecl 0x55cf2bd140d8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55cf2bd14368 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x55cf2bd14190 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55cf2bd14230 <col:41, col:61> col:61 v 'Vector<String>::value_argument_type':'const String &'
|-CXXConstructorDecl 0x55cf2bd145f8 <line:139:5, col:37> col:12 Vector 'void (const Vector<String> &)' inline
| `-ParmVarDecl 0x55cf2bd144e0 <col:19, col:36> col:36 x 'const Vector<String> &'
|-CXXConstructorDecl 0x55cf2bd148b8 <line:141:5, col:32> col:12 Vector 'void (Vector<String> &&)' inline
| `-ParmVarDecl 0x55cf2bd147a0 <col:19, col:31> col:31 x 'Vector<String> &&'
|-CXXMethodDecl 0x55cf2bd14bd0 <line:144:5, col:51> col:23 operator= 'Vector<String> &(const Vector<String> &)' inline
| `-ParmVarDecl 0x55cf2bd14ab0 <col:33, col:50> col:50 x 'const Vector<String> &'
|-CXXMethodDecl 0x55cf2bd14ee0 <line:146:5, col:46> col:23 operator= 'Vector<String> &(Vector<String> &&)' inline
| `-ParmVarDecl 0x55cf2bd14dc0 <col:33, col:45> col:45 x 'Vector<String> &&'
|-CXXMethodDecl 0x55cf2bd151d0 <line:148:5, col:70> col:23 assign 'Vector<String> &(Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x55cf2bd15018 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55cf2bd15090 <col:43, col:69> col:63 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x55cf2bd152f8 <line:150:5, col:55> col:49 begin 'Vector<String>::iterator ()'
| |-NoInlineAttr 0x55cf2bd153a8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55cf2bd15400 <col:30> Inherited
|-CXXMethodDecl 0x55cf2bd15448 <line:151:5, col:53> col:49 end 'Vector<String>::iterator ()'
| |-NoInlineAttr 0x55cf2bd154f8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55cf2bd15550 <col:30> Inherited
|-CXXMethodDecl 0x55cf2bd15618 <line:152:5, col:63> col:55 used begin 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x55cf2bd156c8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55cf2bd15720 <col:30> Inherited
|-CXXMethodDecl 0x55cf2bd15768 <line:153:5, col:61> col:55 used end 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x55cf2bd15818 <col:20> Inherited
| `-OptimizeNoneAttr 0x55cf2bd15870 <col:30> Inherited
|-CXXMethodDecl 0x55cf2bd158b8 <line:154:5, col:64> col:55 cbegin 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x55cf2bd15968 <col:20> Inherited
| `-OptimizeNoneAttr 0x55cf2bd159c0 <col:30> Inherited
|-CXXMethodDecl 0x55cf2bd15a08 <line:155:5, col:62> col:55 cend 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x55cf2bd15ab8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55cf2bd15b10 <col:30> Inherited
|-CXXMethodDecl 0x55cf2bd15b38 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55cf2bd15be8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55cf2bd15c98 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55cf2bd15e58 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x55cf2bd15d48 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55cf2bd15dc0 <col:37, col:63> col:57 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x55cf2bd15fa8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55cf2bd15f18 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55cf2bd16158 <line:163:5, col:65> col:43 operator[] 'String &(Vector::size_type)'
| |-ParmVarDecl 0x55cf2bd16060 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55cf2bd16210 <col:20>
| `-OptimizeNoneAttr 0x55cf2bd16268 <col:30>
|-CXXMethodDecl 0x55cf2bd16388 <line:164:5, col:73> col:49 operator[] 'const String &(Vector::size_type) const'
| |-ParmVarDecl 0x55cf2bd16290 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55cf2bd16440 <col:20>
| `-OptimizeNoneAttr 0x55cf2bd16498 <col:30>
|-CXXMethodDecl 0x55cf2bd16550 <line:165:5, col:29> col:15 at 'String &(Vector::size_type)' inline
| `-ParmVarDecl 0x55cf2bd164c0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55cf2bd16698 <line:166:5, col:37> col:21 at 'const String &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55cf2bd16608 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55cf2bd167c8 <line:167:5, col:21> col:15 front 'String &()' inline
|-CXXMethodDecl 0x55cf2bd17960 <line:168:5, col:29> col:21 front 'const String &() const' inline
|-CXXMethodDecl 0x55cf2bd17a30 <line:169:5, col:20> col:15 back 'String &()' inline
|-CXXMethodDecl 0x55cf2bd17b00 <line:170:5, col:28> col:21 back 'const String &() const' inline
|-CXXMethodDecl 0x55cf2bd17c40 <line:172:5, col:39> col:15 unchecked_at 'String &(Vector::size_type)' inline
| `-ParmVarDecl 0x55cf2bd17bb0 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55cf2bd17d88 <line:173:5, col:47> col:21 unchecked_at 'const String &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55cf2bd17cf8 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55cf2bd17ed0 <line:174:5, col:59> col:15 at_u 'String &(Vector::size_type)' inline
| |-ParmVarDecl 0x55cf2bd17e40 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55cf2bd17f88 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55cf2bd18088 <line:175:5, col:71> col:21 at_u 'const String &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55cf2bd17ff8 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55cf2bd18140 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55cf2bd181f8 <line:177:5, col:20> col:15 data 'String *()' inline
|-CXXMethodDecl 0x55cf2bd182f8 <line:178:5, col:28> col:21 data 'const String *() const' inline
|-CXXMethodDecl 0x55cf2bd18478 <line:180:5, col:48> col:17 used push_back 'void (Vector<String>::value_argument_type)' inline
| `-ParmVarDecl 0x55cf2bd183b8 <col:27, col:47> col:47 v 'Vector<String>::value_argument_type':'const String &'
|-FunctionTemplateDecl 0x55cf2bd18c08 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55cf2bd18530 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<String>':'fast_argument<String, true>'
| `-CXXMethodDecl 0x55cf2bd18b68 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (String &&)' inline
|   `-ParmVarDecl 0x55cf2bd18a68 <col:58, col:62> col:62 v 'String &&'
|-CXXMethodDecl 0x55cf2bd18ce8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55cf2bd18e38 <line:186:5, col:49> col:17 push_front 'void (Vector<String>::value_argument_type)' inline
| `-ParmVarDecl 0x55cf2bd18da8 <col:28, col:48> col:48 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x55cf2bd18ef0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55cf2bd19138 <line:189:5, col:62> col:21 insert 'Vector<String>::iterator (Vector<String>::iterator, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x55cf2bd18fb0 <col:28, col:37> col:37 it 'Vector<String>::iterator':'String *'
| `-ParmVarDecl 0x55cf2bd19028 <col:41, col:61> col:61 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x55cf2bd192c8 <line:190:5, col:38> col:21 erase 'Vector<String>::iterator (Vector<String>::iterator)' inline
| `-ParmVarDecl 0x55cf2bd19208 <col:27, col:36> col:36 it 'Vector<String>::iterator':'String *'
|-CXXMethodDecl 0x55cf2bd194d8 <line:191:5, col:49> col:21 erase 'Vector<String>::iterator (Vector<String>::iterator, Vector<String>::iterator)' inline
| |-ParmVarDecl 0x55cf2bd19390 <col:27, col:36> col:36 a 'Vector<String>::iterator':'String *'
| `-ParmVarDecl 0x55cf2bd19408 <col:39, col:48> col:48 b 'Vector<String>::iterator':'String *'
|-CXXMethodDecl 0x55cf2bd19598 <line:193:5, col:23> col:17 used clear 'void ()' inline
|-CXXMethodDecl 0x55cf2bd197f8 <line:195:5, col:34> col:17 swap 'void (Vector<String> &)' inline
| `-ParmVarDecl 0x55cf2bd19700 <col:22, col:33> col:33 x 'Vector<String> &'
`-CXXDestructorDecl 0x55cf2bd198c8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55cf2bd198c8

Layout: <CGRecordLayout
  LLVMType:%class.Vector.0 = type { %class.vector_memory.1 }
  NonVirtualBaseLLVMType:%class.Vector.0 = type { %class.vector_memory.1 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55cf2bcd9120 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<4>'
|-CXXRecordDecl 0x55cf2bcd92f8 prev 0x55cf2bcd9120 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55cf2bcd9388 <col:46, col:52> col:46 public
|-TypedefDecl 0x55cf2bcd93b0 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55cf2b759370 'int'
|-TypedefDecl 0x55cf2bcdaf80 <line:13:5, col:31> col:31 type 'typename sized_array_memory<4>::type':'char_array<4>'
| `-ElaboratedType 0x55cf2bcdaf30 'typename sized_array_memory<4>::type' sugar
|   `-TypedefType 0x55cf2bcd9860 'sized_array_memory<4>::type' sugar
|     |-Typedef 0x55cf2bcd9760 'type'
|     `-TemplateSpecializationType 0x55cf2bcd96f0 'char_array<4UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x55cf2bcd95d0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 4
|       |   `-SubstNonTypeTemplateParmExpr 0x55cf2bcd95b0 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x55cf2bcd9590 <col:24> 'unsigned long' 4
|       `-RecordType 0x55cf2bcd96d0 'char_array<4>'
|         `-ClassTemplateSpecialization 0x55cf2bcd95f0 'char_array'
|-TypedefDecl 0x55cf2bcdb038 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<4> >::type *'
| `-PointerType 0x55cf2bcdb000 'vector_memory<sized_array_memory<4> >::type *'
|   `-TypedefType 0x55cf2bcdafe0 'vector_memory<sized_array_memory<4> >::type' sugar
|     |-Typedef 0x55cf2bcdaf80 'type'
|     `-ElaboratedType 0x55cf2bcdaf30 'typename sized_array_memory<4>::type' sugar
|       `-TypedefType 0x55cf2bcd9860 'sized_array_memory<4>::type' sugar
|         |-Typedef 0x55cf2bcd9760 'type'
|         `-TemplateSpecializationType 0x55cf2bcd96f0 'char_array<4UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x55cf2bcd95d0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 4
|           |   `-SubstNonTypeTemplateParmExpr 0x55cf2bcd95b0 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x55cf2bcd9590 <col:24> 'unsigned long' 4
|           `-RecordType 0x55cf2bcd96d0 'char_array<4>'
|             `-ClassTemplateSpecialization 0x55cf2bcd95f0 'char_array'
|-CXXMethodDecl 0x55cf2bcdb1b8 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<4> >::type *) const' inline
| `-ParmVarDecl 0x55cf2bcdb0c8 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXConstructorDecl 0x55cf2bcdb2a8 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55cf2bcdb388 <line:23:5, col:20> col:5 used ~vector_memory 'void () noexcept'
|-CXXMethodDecl 0x55cf2bcdb658 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<4> > &)'
| `-ParmVarDecl 0x55cf2bcdb560 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<4> > &'
|-CXXMethodDecl 0x55cf2bcdb898 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x55cf2bcdb710 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55cf2bcdb788 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55cf2bcdba68 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x55cf2bcdb958 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55cf2bcdb9d0 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55cf2bcdbbc8 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<4> >::iterator ()'
|-CXXMethodDecl 0x55cf2bcdbc98 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<4> >::iterator ()'
|-CXXMethodDecl 0x55cf2bcdbee8 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<4> >::iterator (vector_memory<sized_array_memory<4> >::iterator, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x55cf2bcdbd58 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<4> >::iterator':'vector_memory<sized_array_memory<4> >::type *'
| `-ParmVarDecl 0x55cf2bcdbdd0 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55cf2bcdc148 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<4> >::iterator (vector_memory<sized_array_memory<4> >::iterator, vector_memory<sized_array_memory<4> >::iterator)'
| |-ParmVarDecl 0x55cf2bcdbfb8 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<4> >::iterator':'vector_memory<sized_array_memory<4> >::type *'
| `-ParmVarDecl 0x55cf2bcdc030 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<4> >::iterator':'vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55cf2bcdc308 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<4> >::type *)' inline
| `-ParmVarDecl 0x55cf2bcdc218 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55cf2bcdc4c8 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<4> >::type *)' inline
| `-ParmVarDecl 0x55cf2bcdc3d0 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55cf2bcdc580 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55cf2bcdc630 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55cf2bcdc868 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x55cf2bcdc6e0 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55cf2bcdc758 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55cf2bcdcb08 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<4> > &)'
| `-ParmVarDecl 0x55cf2bcdca10 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<4> > &'
|-FieldDecl 0x55cf2bcdcbd0 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<4> >::type *'
|-FieldDecl 0x55cf2bcdcc20 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55cf2bcdcc70 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.3 = type { %struct.char_array.4*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.3 = type { %struct.char_array.4*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55cf2be2df80 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'unsigned int'
|-CXXRecordDecl 0x55cf2be30828 prev 0x55cf2be2df80 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55cf2be31840 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<unsigned int>::type':'sized_array_memory<4>'
| `-ElaboratedType 0x55cf2be317f0 'typename array_memory<unsigned int>::type' sugar
|   `-TypedefType 0x55cf2be317d0 'conditional<true, sized_array_memory<4>, typed_array_memory<unsigned int> >::type' sugar
|     |-Typedef 0x55cf2be31680 'type'
|     `-SubstTemplateTypeParmType 0x55cf2bcd8cf0 'sized_array_memory<4>' sugar
|       |-TemplateTypeParmType 0x55cf2ba22420 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55cf2ba223c8 'T'
|       `-RecordType 0x55cf2bcd8840 'sized_array_memory<4>'
|         `-ClassTemplateSpecialization 0x55cf2bcd8758 'sized_array_memory'
|-FieldDecl 0x55cf2be31940 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<unsigned int>::array_memory_type>':'vector_memory<sized_array_memory<4> >' mutable
|-AccessSpecDecl 0x55cf2be31990 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55cf2be319c8 <line:118:5, col:15> col:15 value_type 'unsigned int':'unsigned int'
| `-SubstTemplateTypeParmType 0x55cf2be308c0 'unsigned int' sugar
|   |-TemplateTypeParmType 0x55cf2ba5a110 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55cf2ba5a0b8 'T'
|   `-BuiltinType 0x55cf2b759410 'unsigned int'
|-TypedefDecl 0x55cf2be31a58 <line:119:5, col:16> col:16 reference 'unsigned int &'
| `-LValueReferenceType 0x55cf2be31a20 'unsigned int &'
|   `-SubstTemplateTypeParmType 0x55cf2be308c0 'unsigned int' sugar
|     |-TemplateTypeParmType 0x55cf2ba5a110 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55cf2ba5a0b8 'T'
|     `-BuiltinType 0x55cf2b759410 'unsigned int'
|-TypedefDecl 0x55cf2be31b18 <line:120:5, col:22> col:22 const_reference 'const unsigned int &'
| `-LValueReferenceType 0x55cf2be31ae0 'const unsigned int &'
|   `-QualType 0x55cf2be308c1 'const unsigned int' const
|     `-SubstTemplateTypeParmType 0x55cf2be308c0 'unsigned int' sugar
|       |-TemplateTypeParmType 0x55cf2ba5a110 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55cf2ba5a0b8 'T'
|       `-BuiltinType 0x55cf2b759410 'unsigned int'
|-TypedefDecl 0x55cf2be31ba8 <line:121:5, col:16> col:16 pointer 'unsigned int *'
| `-PointerType 0x55cf2be31b70 'unsigned int *'
|   `-SubstTemplateTypeParmType 0x55cf2be308c0 'unsigned int' sugar
|     |-TemplateTypeParmType 0x55cf2ba5a110 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55cf2ba5a0b8 'T'
|     `-BuiltinType 0x55cf2b759410 'unsigned int'
|-TypedefDecl 0x55cf2be31c38 <line:122:5, col:22> col:22 const_pointer 'const unsigned int *'
| `-PointerType 0x55cf2be31c00 'const unsigned int *'
|   `-QualType 0x55cf2be308c1 'const unsigned int' const
|     `-SubstTemplateTypeParmType 0x55cf2be308c0 'unsigned int' sugar
|       |-TemplateTypeParmType 0x55cf2ba5a110 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55cf2ba5a0b8 'T'
|       `-BuiltinType 0x55cf2b759410 'unsigned int'
|-TypedefDecl 0x55cf2be32820 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<unsigned int>::type':'unsigned int'
| `-ElaboratedType 0x55cf2be327d0 'typename fast_argument<unsigned int>::type' sugar
|   `-TypedefType 0x55cf2be327b0 'fast_argument<unsigned int, false>::type' sugar
|     |-Typedef 0x55cf2be32740 'type'
|     `-SubstTemplateTypeParmType 0x55cf2be32500 'unsigned int' sugar
|       |-TemplateTypeParmType 0x55cf2ba2d220 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55cf2ba2d1d0 'T'
|       `-BuiltinType 0x55cf2b759410 'unsigned int'
|-TypedefDecl 0x55cf2be32888 <line:126:5, col:22> col:22 const_access_type 'const unsigned int &'
| `-LValueReferenceType 0x55cf2be31ae0 'const unsigned int &'
|   `-QualType 0x55cf2be308c1 'const unsigned int' const
|     `-SubstTemplateTypeParmType 0x55cf2be308c0 'unsigned int' sugar
|       |-TemplateTypeParmType 0x55cf2ba5a110 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55cf2ba5a0b8 'T'
|       `-BuiltinType 0x55cf2b759410 'unsigned int'
|-TypedefDecl 0x55cf2be328e0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55cf2b759370 'int'
|-TypedefDecl 0x55cf2be32948 <line:130:5, col:16> col:16 iterator 'unsigned int *'
| `-PointerType 0x55cf2be31b70 'unsigned int *'
|   `-SubstTemplateTypeParmType 0x55cf2be308c0 'unsigned int' sugar
|     |-TemplateTypeParmType 0x55cf2ba5a110 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55cf2ba5a0b8 'T'
|     `-BuiltinType 0x55cf2b759410 'unsigned int'
|-TypedefDecl 0x55cf2be329b0 <line:131:5, col:22> col:22 const_iterator 'const unsigned int *'
| `-PointerType 0x55cf2be31c00 'const unsigned int *'
|   `-QualType 0x55cf2be308c1 'const unsigned int' const
|     `-SubstTemplateTypeParmType 0x55cf2be308c0 'unsigned int' sugar
|       |-TemplateTypeParmType 0x55cf2ba5a110 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55cf2ba5a0b8 'T'
|       `-BuiltinType 0x55cf2b759410 'unsigned int'
|-EnumDecl 0x55cf2be32a08 <line:134:5> col:5
| `-EnumConstantDecl 0x55cf2be32b00 <col:12, col:40> col:12 RESERVE_GROW 'Vector<unsigned int>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55cf2be32ae0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55cf2ba5baa8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55cf2ba5ba80 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55cf2ba5ba60 <col:40> 'int' 1
|-CXXConstructorDecl 0x55cf2be32b88 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55cf2be32dd8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<unsigned int>::value_argument_type)' inline
| |-ParmVarDecl 0x55cf2be32c40 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55cf2be32ce0 <col:41, col:61> col:61 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXConstructorDecl 0x55cf2be33098 <line:139:5, col:37> col:12 Vector 'void (const Vector<unsigned int> &)' inline
| `-ParmVarDecl 0x55cf2be32f80 <col:19, col:36> col:36 x 'const Vector<unsigned int> &'
|-CXXConstructorDecl 0x55cf2be33358 <line:141:5, col:32> col:12 Vector 'void (Vector<unsigned int> &&)' inline
| `-ParmVarDecl 0x55cf2be33240 <col:19, col:31> col:31 x 'Vector<unsigned int> &&'
|-CXXMethodDecl 0x55cf2be336a0 <line:144:5, col:51> col:23 operator= 'Vector<unsigned int> &(const Vector<unsigned int> &)' inline
| `-ParmVarDecl 0x55cf2be33580 <col:33, col:50> col:50 x 'const Vector<unsigned int> &'
|-CXXMethodDecl 0x55cf2be339b0 <line:146:5, col:46> col:23 operator= 'Vector<unsigned int> &(Vector<unsigned int> &&)' inline
| `-ParmVarDecl 0x55cf2be33890 <col:33, col:45> col:45 x 'Vector<unsigned int> &&'
|-CXXMethodDecl 0x55cf2be33ca0 <line:148:5, col:70> col:23 assign 'Vector<unsigned int> &(Vector::size_type, Vector<unsigned int>::value_argument_type)' inline
| |-ParmVarDecl 0x55cf2be33ae8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55cf2be33b60 <col:43, col:69> col:63 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXMethodDecl 0x55cf2be33dc8 <line:150:5, col:55> col:49 begin 'Vector<unsigned int>::iterator ()'
| |-NoInlineAttr 0x55cf2be33ea8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55cf2be33f00 <col:30> Inherited
|-CXXMethodDecl 0x55cf2be33f48 <line:151:5, col:53> col:49 end 'Vector<unsigned int>::iterator ()'
| |-NoInlineAttr 0x55cf2be33ff8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55cf2be34050 <col:30> Inherited
|-CXXMethodDecl 0x55cf2be340e8 <line:152:5, col:63> col:55 begin 'Vector<unsigned int>::const_iterator () const'
| |-NoInlineAttr 0x55cf2be34198 <col:20> Inherited
| `-OptimizeNoneAttr 0x55cf2be341f0 <col:30> Inherited
|-CXXMethodDecl 0x55cf2be34238 <line:153:5, col:61> col:55 end 'Vector<unsigned int>::const_iterator () const'
| |-NoInlineAttr 0x55cf2be342e8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55cf2be34340 <col:30> Inherited
|-CXXMethodDecl 0x55cf2be34388 <line:154:5, col:64> col:55 cbegin 'Vector<unsigned int>::const_iterator () const'
| |-NoInlineAttr 0x55cf2be34438 <col:20> Inherited
| `-OptimizeNoneAttr 0x55cf2be34490 <col:30> Inherited
|-CXXMethodDecl 0x55cf2be344d8 <line:155:5, col:62> col:55 cend 'Vector<unsigned int>::const_iterator () const'
| |-NoInlineAttr 0x55cf2be34588 <col:20> Inherited
| `-OptimizeNoneAttr 0x55cf2be345e0 <col:30> Inherited
|-CXXMethodDecl 0x55cf2be34608 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55cf2be346b8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55cf2be34768 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55cf2be34928 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<unsigned int>::value_argument_type)' inline
| |-ParmVarDecl 0x55cf2be34818 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55cf2be34890 <col:37, col:63> col:57 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXMethodDecl 0x55cf2be34a78 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55cf2be349e8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55cf2be34c28 <line:163:5, col:65> col:43 operator[] 'unsigned int &(Vector::size_type)'
| |-ParmVarDecl 0x55cf2be34b30 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55cf2be34ce0 <col:20>
| `-OptimizeNoneAttr 0x55cf2be34d38 <col:30>
|-CXXMethodDecl 0x55cf2be34e58 <line:164:5, col:73> col:49 operator[] 'const unsigned int &(Vector::size_type) const'
| |-ParmVarDecl 0x55cf2be34d60 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55cf2be34f10 <col:20>
| `-OptimizeNoneAttr 0x55cf2be34f68 <col:30>
|-CXXMethodDecl 0x55cf2be35020 <line:165:5, col:29> col:15 at 'unsigned int &(Vector::size_type)' inline
| `-ParmVarDecl 0x55cf2be34f90 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55cf2be35168 <line:166:5, col:37> col:21 at 'const unsigned int &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55cf2be350d8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55cf2be35298 <line:167:5, col:21> col:15 front 'unsigned int &()' inline
|-CXXMethodDecl 0x55cf2be353c8 <line:168:5, col:29> col:21 front 'const unsigned int &() const' inline
|-CXXMethodDecl 0x55cf2be35498 <line:169:5, col:20> col:15 back 'unsigned int &()' inline
|-CXXMethodDecl 0x55cf2be35568 <line:170:5, col:28> col:21 back 'const unsigned int &() const' inline
|-CXXMethodDecl 0x55cf2be356a8 <line:172:5, col:39> col:15 unchecked_at 'unsigned int &(Vector::size_type)' inline
| `-ParmVarDecl 0x55cf2be35618 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55cf2be357f0 <line:173:5, col:47> col:21 unchecked_at 'const unsigned int &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55cf2be35760 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55cf2be35938 <line:174:5, col:59> col:15 at_u 'unsigned int &(Vector::size_type)' inline
| |-ParmVarDecl 0x55cf2be358a8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55cf2be359f0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55cf2be35af0 <line:175:5, col:71> col:21 at_u 'const unsigned int &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55cf2be35a60 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55cf2be35ba8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55cf2be35c68 <line:177:5, col:20> col:15 data 'unsigned int *()' inline
|-CXXMethodDecl 0x55cf2be35d68 <line:178:5, col:28> col:21 data 'const unsigned int *() const' inline
|-CXXMethodDecl 0x55cf2be35ee8 <line:180:5, col:48> col:17 push_back 'void (Vector<unsigned int>::value_argument_type)' inline
| `-ParmVarDecl 0x55cf2be35e28 <col:27, col:47> col:47 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-FunctionTemplateDecl 0x55cf2be366a8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55cf2be35fa0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<unsigned int>':'fast_argument<unsigned int, false>'
| `-CXXMethodDecl 0x55cf2be36608 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (unsigned int &&)' inline
|   `-ParmVarDecl 0x55cf2be36508 <col:58, col:62> col:62 v 'unsigned int &&'
|-CXXMethodDecl 0x55cf2be36788 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55cf2be368d8 <line:186:5, col:49> col:17 push_front 'void (Vector<unsigned int>::value_argument_type)' inline
| `-ParmVarDecl 0x55cf2be36848 <col:28, col:48> col:48 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXMethodDecl 0x55cf2be36990 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55cf2be36bd8 <line:189:5, col:62> col:21 insert 'Vector<unsigned int>::iterator (Vector<unsigned int>::iterator, Vector<unsigned int>::value_argument_type)' inline
| |-ParmVarDecl 0x55cf2be36a50 <col:28, col:37> col:37 it 'Vector<unsigned int>::iterator':'unsigned int *'
| `-ParmVarDecl 0x55cf2be36ac8 <col:41, col:61> col:61 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXMethodDecl 0x55cf2be36d98 <line:190:5, col:38> col:21 erase 'Vector<unsigned int>::iterator (Vector<unsigned int>::iterator)' inline
| `-ParmVarDecl 0x55cf2be36ca8 <col:27, col:36> col:36 it 'Vector<unsigned int>::iterator':'unsigned int *'
|-CXXMethodDecl 0x55cf2be36fe8 <line:191:5, col:49> col:21 erase 'Vector<unsigned int>::iterator (Vector<unsigned int>::iterator, Vector<unsigned int>::iterator)' inline
| |-ParmVarDecl 0x55cf2be36e60 <col:27, col:36> col:36 a 'Vector<unsigned int>::iterator':'unsigned int *'
| `-ParmVarDecl 0x55cf2be36ed8 <col:39, col:48> col:48 b 'Vector<unsigned int>::iterator':'unsigned int *'
|-CXXMethodDecl 0x55cf2be370a8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55cf2be37308 <line:195:5, col:34> col:17 swap 'void (Vector<unsigned int> &)' inline
| `-ParmVarDecl 0x55cf2be37210 <col:22, col:33> col:33 x 'Vector<unsigned int> &'
`-CXXDestructorDecl 0x55cf2be373d8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55cf2be373d8

Layout: <CGRecordLayout
  LLVMType:%class.Vector.2 = type { %class.vector_memory.3 }
  NonVirtualBaseLLVMType:%class.Vector.2 = type { %class.vector_memory.3 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55cf2bcd7af8 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'int'
|-CXXRecordDecl 0x55cf2bcd7d08 prev 0x55cf2bcd7af8 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55cf2bcd9090 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<int>::type':'sized_array_memory<4>'
| `-ElaboratedType 0x55cf2bcd9040 'typename array_memory<int>::type' sugar
|   `-TypedefType 0x55cf2bcd9020 'conditional<true, sized_array_memory<4>, typed_array_memory<int> >::type' sugar
|     |-Typedef 0x55cf2bcd8ed0 'type'
|     `-SubstTemplateTypeParmType 0x55cf2bcd8cf0 'sized_array_memory<4>' sugar
|       |-TemplateTypeParmType 0x55cf2ba22420 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55cf2ba223c8 'T'
|       `-RecordType 0x55cf2bcd8840 'sized_array_memory<4>'
|         `-ClassTemplateSpecialization 0x55cf2bcd8758 'sized_array_memory'
|-FieldDecl 0x55cf2bcdccc0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<int>::array_memory_type>':'vector_memory<sized_array_memory<4> >' mutable
|-AccessSpecDecl 0x55cf2bcdcd10 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55cf2bcdcd48 <line:118:5, col:15> col:15 value_type 'int':'int'
| `-SubstTemplateTypeParmType 0x55cf2bcd7da0 'int' sugar
|   |-TemplateTypeParmType 0x55cf2ba5a110 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55cf2ba5a0b8 'T'
|   `-BuiltinType 0x55cf2b759370 'int'
|-TypedefDecl 0x55cf2bcdcdd8 <line:119:5, col:16> col:16 reference 'int &'
| `-LValueReferenceType 0x55cf2bcdcda0 'int &'
|   `-SubstTemplateTypeParmType 0x55cf2bcd7da0 'int' sugar
|     |-TemplateTypeParmType 0x55cf2ba5a110 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55cf2ba5a0b8 'T'
|     `-BuiltinType 0x55cf2b759370 'int'
|-TypedefDecl 0x55cf2bcdce98 <line:120:5, col:22> col:22 const_reference 'const int &'
| `-LValueReferenceType 0x55cf2bcdce60 'const int &'
|   `-QualType 0x55cf2bcd7da1 'const int' const
|     `-SubstTemplateTypeParmType 0x55cf2bcd7da0 'int' sugar
|       |-TemplateTypeParmType 0x55cf2ba5a110 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55cf2ba5a0b8 'T'
|       `-BuiltinType 0x55cf2b759370 'int'
|-TypedefDecl 0x55cf2bcdcf28 <line:121:5, col:16> col:16 pointer 'int *'
| `-PointerType 0x55cf2bcdcef0 'int *'
|   `-SubstTemplateTypeParmType 0x55cf2bcd7da0 'int' sugar
|     |-TemplateTypeParmType 0x55cf2ba5a110 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55cf2ba5a0b8 'T'
|     `-BuiltinType 0x55cf2b759370 'int'
|-TypedefDecl 0x55cf2bcdcfb8 <line:122:5, col:22> col:22 const_pointer 'const int *'
| `-PointerType 0x55cf2bcdcf80 'const int *'
|   `-QualType 0x55cf2bcd7da1 'const int' const
|     `-SubstTemplateTypeParmType 0x55cf2bcd7da0 'int' sugar
|       |-TemplateTypeParmType 0x55cf2ba5a110 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55cf2ba5a0b8 'T'
|       `-BuiltinType 0x55cf2b759370 'int'
|-TypedefDecl 0x55cf2bcdddc0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<int>::type':'int'
| `-ElaboratedType 0x55cf2bcddd70 'typename fast_argument<int>::type' sugar
|   `-TypedefType 0x55cf2bcddd50 'fast_argument<int, false>::type' sugar
|     |-Typedef 0x55cf2bcddce0 'type'
|     `-SubstTemplateTypeParmType 0x55cf2bcddaa0 'int' sugar
|       |-TemplateTypeParmType 0x55cf2ba2d220 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55cf2ba2d1d0 'T'
|       `-BuiltinType 0x55cf2b759370 'int'
|-TypedefDecl 0x55cf2bcdde28 <line:126:5, col:22> col:22 const_access_type 'const int &'
| `-LValueReferenceType 0x55cf2bcdce60 'const int &'
|   `-QualType 0x55cf2bcd7da1 'const int' const
|     `-SubstTemplateTypeParmType 0x55cf2bcd7da0 'int' sugar
|       |-TemplateTypeParmType 0x55cf2ba5a110 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55cf2ba5a0b8 'T'
|       `-BuiltinType 0x55cf2b759370 'int'
|-TypedefDecl 0x55cf2bcdde80 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55cf2b759370 'int'
|-TypedefDecl 0x55cf2bcddee8 <line:130:5, col:16> col:16 iterator 'int *'
| `-PointerType 0x55cf2bcdcef0 'int *'
|   `-SubstTemplateTypeParmType 0x55cf2bcd7da0 'int' sugar
|     |-TemplateTypeParmType 0x55cf2ba5a110 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55cf2ba5a0b8 'T'
|     `-BuiltinType 0x55cf2b759370 'int'
|-TypedefDecl 0x55cf2bcddf50 <line:131:5, col:22> col:22 const_iterator 'const int *'
| `-PointerType 0x55cf2bcdcf80 'const int *'
|   `-QualType 0x55cf2bcd7da1 'const int' const
|     `-SubstTemplateTypeParmType 0x55cf2bcd7da0 'int' sugar
|       |-TemplateTypeParmType 0x55cf2ba5a110 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55cf2ba5a0b8 'T'
|       `-BuiltinType 0x55cf2b759370 'int'
|-EnumDecl 0x55cf2bcddfa8 <line:134:5> col:5
| `-EnumConstantDecl 0x55cf2bcde0a0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<int>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55cf2bcde080 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55cf2ba5baa8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55cf2ba5ba80 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55cf2ba5ba60 <col:40> 'int' 1
|-CXXConstructorDecl 0x55cf2bcde128 <line:137:5, col:28> col:21 used Vector 'void ()' inline
|-CXXConstructorDecl 0x55cf2bcde378 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x55cf2bcde1e0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55cf2bcde280 <col:41, col:61> col:61 v 'Vector<int>::value_argument_type':'int'
|-CXXConstructorDecl 0x55cf2bcde638 <line:139:5, col:37> col:12 Vector 'void (const Vector<int> &)' inline
| `-ParmVarDecl 0x55cf2bcde520 <col:19, col:36> col:36 x 'const Vector<int> &'
|-CXXConstructorDecl 0x55cf2bcde8f8 <line:141:5, col:32> col:12 Vector 'void (Vector<int> &&)' inline
| `-ParmVarDecl 0x55cf2bcde7e0 <col:19, col:31> col:31 x 'Vector<int> &&'
|-CXXMethodDecl 0x55cf2bcdec40 <line:144:5, col:51> col:23 operator= 'Vector<int> &(const Vector<int> &)' inline
| `-ParmVarDecl 0x55cf2bcdeb20 <col:33, col:50> col:50 x 'const Vector<int> &'
|-CXXMethodDecl 0x55cf2bcdef50 <line:146:5, col:46> col:23 operator= 'Vector<int> &(Vector<int> &&)' inline
| `-ParmVarDecl 0x55cf2bcdee30 <col:33, col:45> col:45 x 'Vector<int> &&'
|-CXXMethodDecl 0x55cf2bcdf240 <line:148:5, col:70> col:23 assign 'Vector<int> &(Vector::size_type, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x55cf2bcdf088 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55cf2bcdf100 <col:43, col:69> col:63 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x55cf2bcdf368 <line:150:5, col:55> col:49 begin 'Vector<int>::iterator ()'
| |-NoInlineAttr 0x55cf2bcdf448 <col:20> Inherited
| `-OptimizeNoneAttr 0x55cf2bcdf4a0 <col:30> Inherited
|-CXXMethodDecl 0x55cf2bcdf4e8 <line:151:5, col:53> col:49 end 'Vector<int>::iterator ()'
| |-NoInlineAttr 0x55cf2bcdf598 <col:20> Inherited
| `-OptimizeNoneAttr 0x55cf2bcdf5f0 <col:30> Inherited
|-CXXMethodDecl 0x55cf2bcdf6b8 <line:152:5, col:63> col:55 begin 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x55cf2bcdf768 <col:20> Inherited
| `-OptimizeNoneAttr 0x55cf2bcdf7c0 <col:30> Inherited
|-CXXMethodDecl 0x55cf2bcdf808 <line:153:5, col:61> col:55 end 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x55cf2bcdf8b8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55cf2bcdf910 <col:30> Inherited
|-CXXMethodDecl 0x55cf2bcdf958 <line:154:5, col:64> col:55 cbegin 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x55cf2bcdfa08 <col:20> Inherited
| `-OptimizeNoneAttr 0x55cf2bcdfa60 <col:30> Inherited
|-CXXMethodDecl 0x55cf2bcdfaa8 <line:155:5, col:62> col:55 cend 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x55cf2bcdfb58 <col:20> Inherited
| `-OptimizeNoneAttr 0x55cf2bcdfbb0 <col:30> Inherited
|-CXXMethodDecl 0x55cf2bcdfbd8 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55cf2bcdfc88 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55cf2bcdfd38 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55cf2bcdfef8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x55cf2bcdfde8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55cf2bcdfe60 <col:37, col:63> col:57 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x55cf2bce0048 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55cf2bcdffb8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55cf2bce01f8 <line:163:5, col:65> col:43 used operator[] 'int &(Vector::size_type)'
| |-ParmVarDecl 0x55cf2bce0100 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55cf2bce02b0 <col:20>
| `-OptimizeNoneAttr 0x55cf2bce0308 <col:30>
|-CXXMethodDecl 0x55cf2bce0428 <line:164:5, col:73> col:49 operator[] 'const int &(Vector::size_type) const'
| |-ParmVarDecl 0x55cf2bce0330 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55cf2bce04e0 <col:20>
| `-OptimizeNoneAttr 0x55cf2bce0538 <col:30>
|-CXXMethodDecl 0x55cf2bce05f0 <line:165:5, col:29> col:15 at 'int &(Vector::size_type)' inline
| `-ParmVarDecl 0x55cf2bce0560 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55cf2bce0738 <line:166:5, col:37> col:21 at 'const int &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55cf2bce06a8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55cf2bce0868 <line:167:5, col:21> col:15 front 'int &()' inline
|-CXXMethodDecl 0x55cf2bce0998 <line:168:5, col:29> col:21 front 'const int &() const' inline
|-CXXMethodDecl 0x55cf2bce0a68 <line:169:5, col:20> col:15 back 'int &()' inline
|-CXXMethodDecl 0x55cf2bce0b38 <line:170:5, col:28> col:21 used back 'const int &() const' inline
|-CXXMethodDecl 0x55cf2bce0c78 <line:172:5, col:39> col:15 unchecked_at 'int &(Vector::size_type)' inline
| `-ParmVarDecl 0x55cf2bce0be8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55cf2bce0dc0 <line:173:5, col:47> col:21 unchecked_at 'const int &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55cf2bce0d30 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55cf2bce0f08 <line:174:5, col:59> col:15 at_u 'int &(Vector::size_type)' inline
| |-ParmVarDecl 0x55cf2bce0e78 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55cf2bce0fc0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55cf2bce10c0 <line:175:5, col:71> col:21 at_u 'const int &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55cf2bce1030 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55cf2bce1178 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55cf2bce1238 <line:177:5, col:20> col:15 data 'int *()' inline
|-CXXMethodDecl 0x55cf2bce1338 <line:178:5, col:28> col:21 data 'const int *() const' inline
|-CXXMethodDecl 0x55cf2bce14b8 <line:180:5, col:48> col:17 push_back 'void (Vector<int>::value_argument_type)' inline
| `-ParmVarDecl 0x55cf2bce13f8 <col:27, col:47> col:47 v 'Vector<int>::value_argument_type':'int'
|-FunctionTemplateDecl 0x55cf2bce1ca8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55cf2bce1570 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<int>':'fast_argument<int, false>'
| `-CXXMethodDecl 0x55cf2bce1c08 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (int &&)' inline
|   `-ParmVarDecl 0x55cf2bce1b08 <col:58, col:62> col:62 v 'int &&'
|-CXXMethodDecl 0x55cf2bce1d88 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55cf2bce1ed8 <line:186:5, col:49> col:17 push_front 'void (Vector<int>::value_argument_type)' inline
| `-ParmVarDecl 0x55cf2bce1e48 <col:28, col:48> col:48 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x55cf2bce1f90 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55cf2bce21d8 <line:189:5, col:62> col:21 insert 'Vector<int>::iterator (Vector<int>::iterator, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x55cf2bce2050 <col:28, col:37> col:37 it 'Vector<int>::iterator':'int *'
| `-ParmVarDecl 0x55cf2bce20c8 <col:41, col:61> col:61 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x55cf2bce2398 <line:190:5, col:38> col:21 erase 'Vector<int>::iterator (Vector<int>::iterator)' inline
| `-ParmVarDecl 0x55cf2bce22a8 <col:27, col:36> col:36 it 'Vector<int>::iterator':'int *'
|-CXXMethodDecl 0x55cf2bce25e8 <line:191:5, col:49> col:21 erase 'Vector<int>::iterator (Vector<int>::iterator, Vector<int>::iterator)' inline
| |-ParmVarDecl 0x55cf2bce2460 <col:27, col:36> col:36 a 'Vector<int>::iterator':'int *'
| `-ParmVarDecl 0x55cf2bce24d8 <col:39, col:48> col:48 b 'Vector<int>::iterator':'int *'
|-CXXMethodDecl 0x55cf2bce26a8 <line:193:5, col:23> col:17 used clear 'void ()' inline
|-CXXMethodDecl 0x55cf2bce2908 <line:195:5, col:34> col:17 swap 'void (Vector<int> &)' inline
| `-ParmVarDecl 0x55cf2bce2810 <col:22, col:33> col:33 x 'Vector<int> &'
`-CXXDestructorDecl 0x55cf2bce29d8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit used ~Vector 'void () noexcept' inline default
  `-CompoundStmt 0x55cf2be83da0 <col:29>

Layout: <CGRecordLayout
  LLVMType:%class.Vector.5 = type { %class.vector_memory.3 }
  NonVirtualBaseLLVMType:%class.Vector.5 = type { %class.vector_memory.3 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55cf2be37620 <../dummy_inc/click/router.hh:247:5, line:250:5> line:247:12 referenced struct element_landmark_t definition
|-DefinitionData aggregate standard_layout has_mutable_fields
| |-DefaultConstructor exists non_trivial needs_implicit
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x55cf2be37738 <col:5, col:12> col:12 implicit struct element_landmark_t
|-FieldDecl 0x55cf2be377d8 <line:248:9, col:18> col:18 first_landmarkid 'uint32_t':'unsigned int'
|-FieldDecl 0x55cf2be37838 <line:249:9, col:16> col:16 filename 'String'
|-CXXConstructorDecl 0x55cf2be378d0 <line:247:12> col:12 implicit element_landmark_t 'void (const Router::element_landmark_t &)' inline default noexcept-unevaluated 0x55cf2be378d0
| `-ParmVarDecl 0x55cf2be379e8 <col:12> col:12 'const Router::element_landmark_t &'
|-CXXConstructorDecl 0x55cf2be37a88 <col:12> col:12 implicit element_landmark_t 'void (Router::element_landmark_t &&)' inline default noexcept-unevaluated 0x55cf2be37a88
| `-ParmVarDecl 0x55cf2be37b98 <col:12> col:12 'Router::element_landmark_t &&'
|-CXXMethodDecl 0x55cf2be37c38 <col:12> col:12 implicit operator= 'Router::element_landmark_t &(const Router::element_landmark_t &)' inline default noexcept-unevaluated 0x55cf2be37c38
| `-ParmVarDecl 0x55cf2be37d48 <col:12> col:12 'const Router::element_landmark_t &'
|-CXXMethodDecl 0x55cf2be37db8 <col:12> col:12 implicit operator= 'Router::element_landmark_t &(Router::element_landmark_t &&)' inline default noexcept-unevaluated 0x55cf2be37db8
| `-ParmVarDecl 0x55cf2be37ec8 <col:12> col:12 'Router::element_landmark_t &&'
`-CXXDestructorDecl 0x55cf2be37f50 <col:12> col:12 implicit ~element_landmark_t 'void ()' inline default noexcept-unevaluated 0x55cf2be37f50

Layout: <CGRecordLayout
  LLVMType:%"struct.Router::element_landmark_t" = type { i32, %class.String }
  NonVirtualBaseLLVMType:%"struct.Router::element_landmark_t" = type { i32, %class.String }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55cf2be3b110 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'typed_array_memory<Router::element_landmark_t>'
|-CXXRecordDecl 0x55cf2be3b2e8 prev 0x55cf2be3b110 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55cf2be3b378 <col:46, col:52> col:46 public
|-TypedefDecl 0x55cf2be3b3a0 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55cf2b759370 'int'
|-TypedefDecl 0x55cf2be3cd60 <line:13:5, col:31> col:31 type 'typename typed_array_memory<element_landmark_t>::type':'Router::element_landmark_t'
| `-ElaboratedType 0x55cf2be3cd10 'typename typed_array_memory<element_landmark_t>::type' sugar
|   `-TypedefType 0x55cf2be3ccf0 'typed_array_memory<Router::element_landmark_t>::type' sugar
|     |-Typedef 0x55cf2be3b5b8 'type'
|     `-SubstTemplateTypeParmType 0x55cf2be3b580 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x55cf2ba4cdf0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55cf2ba4cda0 'T'
|       `-RecordType 0x55cf2be376b0 'Router::element_landmark_t'
|         `-CXXRecord 0x55cf2be37620 'element_landmark_t'
|-TypedefDecl 0x55cf2be3ce18 <line:14:5, col:19> col:19 iterator 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
| `-PointerType 0x55cf2be3cde0 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|   `-TypedefType 0x55cf2be3cdc0 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type' sugar
|     |-Typedef 0x55cf2be3cd60 'type'
|     `-ElaboratedType 0x55cf2be3cd10 'typename typed_array_memory<element_landmark_t>::type' sugar
|       `-TypedefType 0x55cf2be3ccf0 'typed_array_memory<Router::element_landmark_t>::type' sugar
|         |-Typedef 0x55cf2be3b5b8 'type'
|         `-SubstTemplateTypeParmType 0x55cf2be3b580 'Router::element_landmark_t' sugar
|           |-TemplateTypeParmType 0x55cf2ba4cdf0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55cf2ba4cda0 'T'
|           `-RecordType 0x55cf2be376b0 'Router::element_landmark_t'
|             `-CXXRecord 0x55cf2be37620 'element_landmark_t'
|-CXXMethodDecl 0x55cf2be3cf98 <line:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *) const' inline
| `-ParmVarDecl 0x55cf2be3cea8 <col:36, col:48> col:48 argp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXConstructorDecl 0x55cf2be3d088 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55cf2be3d168 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x55cf2be3d168
|-CXXMethodDecl 0x55cf2be3d438 <line:25:5, col:43> col:10 assign 'void (const vector_memory<typed_array_memory<Router::element_landmark_t> > &)'
| `-ParmVarDecl 0x55cf2be3d340 <col:17, col:42> col:42 x 'const vector_memory<typed_array_memory<Router::element_landmark_t> > &'
|-CXXMethodDecl 0x55cf2be3d678 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)'
| |-ParmVarDecl 0x55cf2be3d4f0 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55cf2be3d568 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x55cf2be3d848 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)'
| |-ParmVarDecl 0x55cf2be3d738 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55cf2be3d7b0 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x55cf2be3d9a8 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator ()'
|-CXXMethodDecl 0x55cf2be3da78 <line:31:5, line:33:5> line:31:14 end 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator ()'
|-CXXMethodDecl 0x55cf2be3dcc8 <line:34:5, col:48> col:14 insert 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator (vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator, const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)'
| |-ParmVarDecl 0x55cf2be3db38 <col:21, col:30> col:30 it 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator':'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
| `-ParmVarDecl 0x55cf2be3dbb0 <col:34, col:46> col:46 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x55cf2be3df28 <line:35:5, col:42> col:14 erase 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator (vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator, vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator)'
| |-ParmVarDecl 0x55cf2be3dd98 <col:20, col:29> col:29 a 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator':'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
| `-ParmVarDecl 0x55cf2be3de10 <col:32, col:41> col:41 b 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator':'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x55cf2be3e0e8 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)' inline
| `-ParmVarDecl 0x55cf2be3dff8 <col:27, col:39> col:39 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x55cf2be3e2a8 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)' inline
| `-ParmVarDecl 0x55cf2be3e1b0 <col:37, col:43> col:43 vp 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x55cf2be3e360 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55cf2be3e410 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55cf2be3e648 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)'
| |-ParmVarDecl 0x55cf2be3e4c0 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55cf2be3e538 <col:45, col:57> col:57 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x55cf2be3e8e8 <line:66:5, col:35> col:10 swap 'void (vector_memory<typed_array_memory<Router::element_landmark_t> > &)'
| `-ParmVarDecl 0x55cf2be3e7f0 <col:15, col:34> col:34 x 'vector_memory<typed_array_memory<Router::element_landmark_t> > &'
|-FieldDecl 0x55cf2be3e9b0 <line:68:5, col:11> col:11 l_ 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-FieldDecl 0x55cf2be3ea00 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55cf2be3ea50 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.7 = type { %"struct.Router::element_landmark_t"*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.7 = type { %"struct.Router::element_landmark_t"*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55cf2be38040 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Router::element_landmark_t'
|-CXXRecordDecl 0x55cf2be38248 prev 0x55cf2be38040 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55cf2be3b080 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<element_landmark_t>::type':'typed_array_memory<Router::element_landmark_t>'
| `-ElaboratedType 0x55cf2be3b030 'typename array_memory<element_landmark_t>::type' sugar
|   `-TypedefType 0x55cf2be3b010 'conditional<false, sized_array_memory<32>, typed_array_memory<Router::element_landmark_t> >::type' sugar
|     |-Typedef 0x55cf2be3aec0 'type'
|     `-SubstTemplateTypeParmType 0x55cf2be3ad50 'typed_array_memory<Router::element_landmark_t>' sugar
|       |-TemplateTypeParmType 0x55cf2ba22ba0 'F' dependent depth 0 index 1
|       | `-TemplateTypeParm 0x55cf2ba22b48 'F'
|       `-RecordType 0x55cf2be3a9b0 'typed_array_memory<Router::element_landmark_t>'
|         `-ClassTemplateSpecialization 0x55cf2be3a8d0 'typed_array_memory'
|-FieldDecl 0x55cf2be3eaa0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Router::element_landmark_t>::array_memory_type>':'vector_memory<typed_array_memory<Router::element_landmark_t> >' mutable
|-AccessSpecDecl 0x55cf2be3eaf0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55cf2be3eb28 <line:118:5, col:15> col:15 value_type 'Router::element_landmark_t':'Router::element_landmark_t'
| `-SubstTemplateTypeParmType 0x55cf2be382e0 'Router::element_landmark_t' sugar
|   |-TemplateTypeParmType 0x55cf2ba5a110 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55cf2ba5a0b8 'T'
|   `-RecordType 0x55cf2be376b0 'Router::element_landmark_t'
|     `-CXXRecord 0x55cf2be37620 'element_landmark_t'
|-TypedefDecl 0x55cf2be3ebb8 <line:119:5, col:16> col:16 reference 'Router::element_landmark_t &'
| `-LValueReferenceType 0x55cf2be3eb80 'Router::element_landmark_t &'
|   `-SubstTemplateTypeParmType 0x55cf2be382e0 'Router::element_landmark_t' sugar
|     |-TemplateTypeParmType 0x55cf2ba5a110 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55cf2ba5a0b8 'T'
|     `-RecordType 0x55cf2be376b0 'Router::element_landmark_t'
|       `-CXXRecord 0x55cf2be37620 'element_landmark_t'
|-TypedefDecl 0x55cf2be3ec48 <line:120:5, col:22> col:22 const_reference 'const Router::element_landmark_t &'
| `-LValueReferenceType 0x55cf2be3ec10 'const Router::element_landmark_t &'
|   `-QualType 0x55cf2be382e1 'const Router::element_landmark_t' const
|     `-SubstTemplateTypeParmType 0x55cf2be382e0 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x55cf2ba5a110 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55cf2ba5a0b8 'T'
|       `-RecordType 0x55cf2be376b0 'Router::element_landmark_t'
|         `-CXXRecord 0x55cf2be37620 'element_landmark_t'
|-TypedefDecl 0x55cf2be3ecd8 <line:121:5, col:16> col:16 pointer 'Router::element_landmark_t *'
| `-PointerType 0x55cf2be3eca0 'Router::element_landmark_t *'
|   `-SubstTemplateTypeParmType 0x55cf2be382e0 'Router::element_landmark_t' sugar
|     |-TemplateTypeParmType 0x55cf2ba5a110 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55cf2ba5a0b8 'T'
|     `-RecordType 0x55cf2be376b0 'Router::element_landmark_t'
|       `-CXXRecord 0x55cf2be37620 'element_landmark_t'
|-TypedefDecl 0x55cf2be3ed68 <line:122:5, col:22> col:22 const_pointer 'const Router::element_landmark_t *'
| `-PointerType 0x55cf2be3ed30 'const Router::element_landmark_t *'
|   `-QualType 0x55cf2be382e1 'const Router::element_landmark_t' const
|     `-SubstTemplateTypeParmType 0x55cf2be382e0 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x55cf2ba5a110 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55cf2ba5a0b8 'T'
|       `-RecordType 0x55cf2be376b0 'Router::element_landmark_t'
|         `-CXXRecord 0x55cf2be37620 'element_landmark_t'
|-TypedefDecl 0x55cf2be3f9c0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<element_landmark_t>::type':'const Router::element_landmark_t &'
| `-ElaboratedType 0x55cf2be3f970 'typename fast_argument<element_landmark_t>::type' sugar
|   `-TypedefType 0x55cf2be3f950 'fast_argument<Router::element_landmark_t, true>::type' sugar
|     |-Typedef 0x55cf2be3f888 'type'
|     `-LValueReferenceType 0x55cf2be3f850 'const Router::element_landmark_t &'
|       `-QualType 0x55cf2be3f5f1 'const Router::element_landmark_t' const
|         `-SubstTemplateTypeParmType 0x55cf2be3f5f0 'Router::element_landmark_t' sugar
|           |-TemplateTypeParmType 0x55cf2ba2caf0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55cf2ba2ca98 'T'
|           `-RecordType 0x55cf2be376b0 'Router::element_landmark_t'
|             `-CXXRecord 0x55cf2be37620 'element_landmark_t'
|-TypedefDecl 0x55cf2be3fa28 <line:126:5, col:22> col:22 const_access_type 'const Router::element_landmark_t &'
| `-LValueReferenceType 0x55cf2be3ec10 'const Router::element_landmark_t &'
|   `-QualType 0x55cf2be382e1 'const Router::element_landmark_t' const
|     `-SubstTemplateTypeParmType 0x55cf2be382e0 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x55cf2ba5a110 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55cf2ba5a0b8 'T'
|       `-RecordType 0x55cf2be376b0 'Router::element_landmark_t'
|         `-CXXRecord 0x55cf2be37620 'element_landmark_t'
|-TypedefDecl 0x55cf2be3fa80 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55cf2b759370 'int'
|-TypedefDecl 0x55cf2be3fae8 <line:130:5, col:16> col:16 iterator 'Router::element_landmark_t *'
| `-PointerType 0x55cf2be3eca0 'Router::element_landmark_t *'
|   `-SubstTemplateTypeParmType 0x55cf2be382e0 'Router::element_landmark_t' sugar
|     |-TemplateTypeParmType 0x55cf2ba5a110 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55cf2ba5a0b8 'T'
|     `-RecordType 0x55cf2be376b0 'Router::element_landmark_t'
|       `-CXXRecord 0x55cf2be37620 'element_landmark_t'
|-TypedefDecl 0x55cf2be3fb50 <line:131:5, col:22> col:22 const_iterator 'const Router::element_landmark_t *'
| `-PointerType 0x55cf2be3ed30 'const Router::element_landmark_t *'
|   `-QualType 0x55cf2be382e1 'const Router::element_landmark_t' const
|     `-SubstTemplateTypeParmType 0x55cf2be382e0 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x55cf2ba5a110 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55cf2ba5a0b8 'T'
|       `-RecordType 0x55cf2be376b0 'Router::element_landmark_t'
|         `-CXXRecord 0x55cf2be37620 'element_landmark_t'
|-EnumDecl 0x55cf2be3fba8 <line:134:5> col:5
| `-EnumConstantDecl 0x55cf2be3fca0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Router::element_landmark_t>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55cf2be3fc80 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55cf2ba5baa8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55cf2ba5ba80 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55cf2ba5ba60 <col:40> 'int' 1
|-CXXConstructorDecl 0x55cf2be3fd28 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55cf2be3ffb8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Router::element_landmark_t>::value_argument_type)' inline
| |-ParmVarDecl 0x55cf2be3fde0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55cf2be3fe80 <col:41, col:61> col:61 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXConstructorDecl 0x55cf2be40278 <line:139:5, col:37> col:12 Vector 'void (const Vector<Router::element_landmark_t> &)' inline
| `-ParmVarDecl 0x55cf2be40160 <col:19, col:36> col:36 x 'const Vector<Router::element_landmark_t> &'
|-CXXConstructorDecl 0x55cf2be40538 <line:141:5, col:32> col:12 Vector 'void (Vector<Router::element_landmark_t> &&)' inline
| `-ParmVarDecl 0x55cf2be40420 <col:19, col:31> col:31 x 'Vector<Router::element_landmark_t> &&'
|-CXXMethodDecl 0x55cf2be40880 <line:144:5, col:51> col:23 operator= 'Vector<Router::element_landmark_t> &(const Vector<Router::element_landmark_t> &)' inline
| `-ParmVarDecl 0x55cf2be40760 <col:33, col:50> col:50 x 'const Vector<Router::element_landmark_t> &'
|-CXXMethodDecl 0x55cf2be40b90 <line:146:5, col:46> col:23 operator= 'Vector<Router::element_landmark_t> &(Vector<Router::element_landmark_t> &&)' inline
| `-ParmVarDecl 0x55cf2be40a70 <col:33, col:45> col:45 x 'Vector<Router::element_landmark_t> &&'
|-CXXMethodDecl 0x55cf2be40e80 <line:148:5, col:70> col:23 assign 'Vector<Router::element_landmark_t> &(Vector::size_type, Vector<Router::element_landmark_t>::value_argument_type)' inline
| |-ParmVarDecl 0x55cf2be40cc8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55cf2be40d40 <col:43, col:69> col:63 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXMethodDecl 0x55cf2be40fa8 <line:150:5, col:55> col:49 begin 'Vector<Router::element_landmark_t>::iterator ()'
| |-NoInlineAttr 0x55cf2be41088 <col:20> Inherited
| `-OptimizeNoneAttr 0x55cf2be410e0 <col:30> Inherited
|-CXXMethodDecl 0x55cf2be41128 <line:151:5, col:53> col:49 end 'Vector<Router::element_landmark_t>::iterator ()'
| |-NoInlineAttr 0x55cf2be411d8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55cf2be41230 <col:30> Inherited
|-CXXMethodDecl 0x55cf2be412f8 <line:152:5, col:63> col:55 begin 'Vector<Router::element_landmark_t>::const_iterator () const'
| |-NoInlineAttr 0x55cf2be413a8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55cf2be41400 <col:30> Inherited
|-CXXMethodDecl 0x55cf2be41448 <line:153:5, col:61> col:55 end 'Vector<Router::element_landmark_t>::const_iterator () const'
| |-NoInlineAttr 0x55cf2be414f8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55cf2be41550 <col:30> Inherited
|-CXXMethodDecl 0x55cf2be41598 <line:154:5, col:64> col:55 cbegin 'Vector<Router::element_landmark_t>::const_iterator () const'
| |-NoInlineAttr 0x55cf2be41648 <col:20> Inherited
| `-OptimizeNoneAttr 0x55cf2be416a0 <col:30> Inherited
|-CXXMethodDecl 0x55cf2be416e8 <line:155:5, col:62> col:55 cend 'Vector<Router::element_landmark_t>::const_iterator () const'
| |-NoInlineAttr 0x55cf2be41798 <col:20> Inherited
| `-OptimizeNoneAttr 0x55cf2be417f0 <col:30> Inherited
|-CXXMethodDecl 0x55cf2be41818 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55cf2be418c8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55cf2be41978 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55cf2be41b38 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Router::element_landmark_t>::value_argument_type)' inline
| |-ParmVarDecl 0x55cf2be41a28 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55cf2be41aa0 <col:37, col:63> col:57 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXMethodDecl 0x55cf2be41c88 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55cf2be41bf8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55cf2be41e38 <line:163:5, col:65> col:43 operator[] 'Router::element_landmark_t &(Vector::size_type)'
| |-ParmVarDecl 0x55cf2be41d40 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55cf2be41ef0 <col:20>
| `-OptimizeNoneAttr 0x55cf2be41f48 <col:30>
|-CXXMethodDecl 0x55cf2be42068 <line:164:5, col:73> col:49 operator[] 'const Router::element_landmark_t &(Vector::size_type) const'
| |-ParmVarDecl 0x55cf2be41f70 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55cf2be42120 <col:20>
| `-OptimizeNoneAttr 0x55cf2be42178 <col:30>
|-CXXMethodDecl 0x55cf2be42230 <line:165:5, col:29> col:15 at 'Router::element_landmark_t &(Vector::size_type)' inline
| `-ParmVarDecl 0x55cf2be421a0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55cf2be438e0 <line:166:5, col:37> col:21 at 'const Router::element_landmark_t &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55cf2be422e8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55cf2be43a18 <line:167:5, col:21> col:15 front 'Router::element_landmark_t &()' inline
|-CXXMethodDecl 0x55cf2be43b48 <line:168:5, col:29> col:21 front 'const Router::element_landmark_t &() const' inline
|-CXXMethodDecl 0x55cf2be43c18 <line:169:5, col:20> col:15 back 'Router::element_landmark_t &()' inline
|-CXXMethodDecl 0x55cf2be43ce8 <line:170:5, col:28> col:21 back 'const Router::element_landmark_t &() const' inline
|-CXXMethodDecl 0x55cf2be43e28 <line:172:5, col:39> col:15 unchecked_at 'Router::element_landmark_t &(Vector::size_type)' inline
| `-ParmVarDecl 0x55cf2be43d98 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55cf2be43f70 <line:173:5, col:47> col:21 unchecked_at 'const Router::element_landmark_t &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55cf2be43ee0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55cf2be440b8 <line:174:5, col:59> col:15 at_u 'Router::element_landmark_t &(Vector::size_type)' inline
| |-ParmVarDecl 0x55cf2be44028 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55cf2be44170 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55cf2be44270 <line:175:5, col:71> col:21 at_u 'const Router::element_landmark_t &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55cf2be441e0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55cf2be44328 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55cf2be443e8 <line:177:5, col:20> col:15 data 'Router::element_landmark_t *()' inline
|-CXXMethodDecl 0x55cf2be444e8 <line:178:5, col:28> col:21 data 'const Router::element_landmark_t *() const' inline
|-CXXMethodDecl 0x55cf2be44668 <line:180:5, col:48> col:17 push_back 'void (Vector<Router::element_landmark_t>::value_argument_type)' inline
| `-ParmVarDecl 0x55cf2be445a8 <col:27, col:47> col:47 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-FunctionTemplateDecl 0x55cf2be44df8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55cf2be44720 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Router::element_landmark_t>':'fast_argument<Router::element_landmark_t, true>'
| `-CXXMethodDecl 0x55cf2be44d58 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Router::element_landmark_t &&)' inline
|   `-ParmVarDecl 0x55cf2be44c58 <col:58, col:62> col:62 v 'Router::element_landmark_t &&'
|-CXXMethodDecl 0x55cf2be44ed8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55cf2be45028 <line:186:5, col:49> col:17 push_front 'void (Vector<Router::element_landmark_t>::value_argument_type)' inline
| `-ParmVarDecl 0x55cf2be44f98 <col:28, col:48> col:48 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXMethodDecl 0x55cf2be450e0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55cf2be45328 <line:189:5, col:62> col:21 insert 'Vector<Router::element_landmark_t>::iterator (Vector<Router::element_landmark_t>::iterator, Vector<Router::element_landmark_t>::value_argument_type)' inline
| |-ParmVarDecl 0x55cf2be451a0 <col:28, col:37> col:37 it 'Vector<Router::element_landmark_t>::iterator':'Router::element_landmark_t *'
| `-ParmVarDecl 0x55cf2be45218 <col:41, col:61> col:61 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXMethodDecl 0x55cf2be454b8 <line:190:5, col:38> col:21 erase 'Vector<Router::element_landmark_t>::iterator (Vector<Router::element_landmark_t>::iterator)' inline
| `-ParmVarDecl 0x55cf2be453f8 <col:27, col:36> col:36 it 'Vector<Router::element_landmark_t>::iterator':'Router::element_landmark_t *'
|-CXXMethodDecl 0x55cf2be456c8 <line:191:5, col:49> col:21 erase 'Vector<Router::element_landmark_t>::iterator (Vector<Router::element_landmark_t>::iterator, Vector<Router::element_landmark_t>::iterator)' inline
| |-ParmVarDecl 0x55cf2be45580 <col:27, col:36> col:36 a 'Vector<Router::element_landmark_t>::iterator':'Router::element_landmark_t *'
| `-ParmVarDecl 0x55cf2be455f8 <col:39, col:48> col:48 b 'Vector<Router::element_landmark_t>::iterator':'Router::element_landmark_t *'
|-CXXMethodDecl 0x55cf2be45788 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55cf2be459e8 <line:195:5, col:34> col:17 swap 'void (Vector<Router::element_landmark_t> &)' inline
| `-ParmVarDecl 0x55cf2be458f0 <col:22, col:33> col:33 x 'Vector<Router::element_landmark_t> &'
`-CXXDestructorDecl 0x55cf2be45ab8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55cf2be45ab8

Layout: <CGRecordLayout
  LLVMType:%class.Vector.6 = type { %class.vector_memory.7 }
  NonVirtualBaseLLVMType:%class.Vector.6 = type { %class.vector_memory.7 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55cf2bda6ac0 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<16>'
|-CXXRecordDecl 0x55cf2bda6c98 prev 0x55cf2bda6ac0 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55cf2bda6d28 <col:46, col:52> col:46 public
|-TypedefDecl 0x55cf2bda6d50 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55cf2b759370 'int'
|-TypedefDecl 0x55cf2bda8920 <line:13:5, col:31> col:31 type 'typename sized_array_memory<16>::type':'char_array<16>'
| `-ElaboratedType 0x55cf2bda88d0 'typename sized_array_memory<16>::type' sugar
|   `-TypedefType 0x55cf2bda7200 'sized_array_memory<16>::type' sugar
|     |-Typedef 0x55cf2bda7100 'type'
|     `-TemplateSpecializationType 0x55cf2bda7090 'char_array<16UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x55cf2bda6f70 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 16
|       |   `-SubstNonTypeTemplateParmExpr 0x55cf2bda6f50 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x55cf2bda6f30 <col:24> 'unsigned long' 16
|       `-RecordType 0x55cf2bda7070 'char_array<16>'
|         `-ClassTemplateSpecialization 0x55cf2bda6f90 'char_array'
|-TypedefDecl 0x55cf2bda89d8 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<16> >::type *'
| `-PointerType 0x55cf2bda89a0 'vector_memory<sized_array_memory<16> >::type *'
|   `-TypedefType 0x55cf2bda8980 'vector_memory<sized_array_memory<16> >::type' sugar
|     |-Typedef 0x55cf2bda8920 'type'
|     `-ElaboratedType 0x55cf2bda88d0 'typename sized_array_memory<16>::type' sugar
|       `-TypedefType 0x55cf2bda7200 'sized_array_memory<16>::type' sugar
|         |-Typedef 0x55cf2bda7100 'type'
|         `-TemplateSpecializationType 0x55cf2bda7090 'char_array<16UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x55cf2bda6f70 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 16
|           |   `-SubstNonTypeTemplateParmExpr 0x55cf2bda6f50 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x55cf2bda6f30 <col:24> 'unsigned long' 16
|           `-RecordType 0x55cf2bda7070 'char_array<16>'
|             `-ClassTemplateSpecialization 0x55cf2bda6f90 'char_array'
|-CXXMethodDecl 0x55cf2bda8b58 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<16> >::type *) const' inline
| `-ParmVarDecl 0x55cf2bda8a68 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXConstructorDecl 0x55cf2bda8c48 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55cf2bda8d28 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x55cf2bda8d28
|-CXXMethodDecl 0x55cf2bda8ff8 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<16> > &)'
| `-ParmVarDecl 0x55cf2bda8f00 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<16> > &'
|-CXXMethodDecl 0x55cf2bda9238 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x55cf2bda90b0 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55cf2bda9128 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55cf2bda9408 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x55cf2bda92f8 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55cf2bda9370 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55cf2bda9568 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<16> >::iterator ()'
|-CXXMethodDecl 0x55cf2bda9638 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<16> >::iterator ()'
|-CXXMethodDecl 0x55cf2bda9888 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<16> >::iterator (vector_memory<sized_array_memory<16> >::iterator, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x55cf2bda96f8 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
| `-ParmVarDecl 0x55cf2bda9770 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55cf2bda9ae8 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<16> >::iterator (vector_memory<sized_array_memory<16> >::iterator, vector_memory<sized_array_memory<16> >::iterator)'
| |-ParmVarDecl 0x55cf2bda9958 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
| `-ParmVarDecl 0x55cf2bda99d0 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55cf2bda9ca8 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<16> >::type *)' inline
| `-ParmVarDecl 0x55cf2bda9bb8 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55cf2bda9e68 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<16> >::type *)' inline
| `-ParmVarDecl 0x55cf2bda9d70 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55cf2bda9f20 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55cf2bda9fd0 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55cf2bdaa208 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x55cf2bdaa080 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55cf2bdaa0f8 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55cf2bdaa4a8 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<16> > &)'
| `-ParmVarDecl 0x55cf2bdaa3b0 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<16> > &'
|-FieldDecl 0x55cf2bdaa570 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<16> >::type *'
|-FieldDecl 0x55cf2bdaa5c0 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55cf2bdaa610 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.9 = type { %struct.char_array.10*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.9 = type { %struct.char_array.10*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55cf2be461d0 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Router::Connection'
|-CXXRecordDecl 0x55cf2be463d8 prev 0x55cf2be461d0 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55cf2be474a0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<Connection>::type':'sized_array_memory<16>'
| `-ElaboratedType 0x55cf2be47450 'typename array_memory<Connection>::type' sugar
|   `-TypedefType 0x55cf2be47430 'conditional<true, sized_array_memory<16>, typed_array_memory<Router::Connection> >::type' sugar
|     |-Typedef 0x55cf2be472e0 'type'
|     `-SubstTemplateTypeParmType 0x55cf2bda6690 'sized_array_memory<16>' sugar
|       |-TemplateTypeParmType 0x55cf2ba22420 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55cf2ba223c8 'T'
|       `-RecordType 0x55cf2bda61a0 'sized_array_memory<16>'
|         `-ClassTemplateSpecialization 0x55cf2bda60b8 'sized_array_memory'
|-FieldDecl 0x55cf2be475a0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Router::Connection>::array_memory_type>':'vector_memory<sized_array_memory<16> >' mutable
|-AccessSpecDecl 0x55cf2be475f0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55cf2be47628 <line:118:5, col:15> col:15 value_type 'Router::Connection':'Router::Connection'
| `-SubstTemplateTypeParmType 0x55cf2be46470 'Router::Connection' sugar
|   |-TemplateTypeParmType 0x55cf2ba5a110 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55cf2ba5a0b8 'T'
|   `-RecordType 0x55cf2be20ae0 'Router::Connection'
|     `-CXXRecord 0x55cf2be20a50 'Connection'
|-TypedefDecl 0x55cf2be476e8 <line:119:5, col:16> col:16 reference 'Router::Connection &'
| `-LValueReferenceType 0x55cf2be476b0 'Router::Connection &'
|   `-SubstTemplateTypeParmType 0x55cf2be46470 'Router::Connection' sugar
|     |-TemplateTypeParmType 0x55cf2ba5a110 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55cf2ba5a0b8 'T'
|     `-RecordType 0x55cf2be20ae0 'Router::Connection'
|       `-CXXRecord 0x55cf2be20a50 'Connection'
|-TypedefDecl 0x55cf2be47778 <line:120:5, col:22> col:22 const_reference 'const Router::Connection &'
| `-LValueReferenceType 0x55cf2be47740 'const Router::Connection &'
|   `-QualType 0x55cf2be46471 'const Router::Connection' const
|     `-SubstTemplateTypeParmType 0x55cf2be46470 'Router::Connection' sugar
|       |-TemplateTypeParmType 0x55cf2ba5a110 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55cf2ba5a0b8 'T'
|       `-RecordType 0x55cf2be20ae0 'Router::Connection'
|         `-CXXRecord 0x55cf2be20a50 'Connection'
|-TypedefDecl 0x55cf2be47808 <line:121:5, col:16> col:16 pointer 'Router::Connection *'
| `-PointerType 0x55cf2be477d0 'Router::Connection *'
|   `-SubstTemplateTypeParmType 0x55cf2be46470 'Router::Connection' sugar
|     |-TemplateTypeParmType 0x55cf2ba5a110 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55cf2ba5a0b8 'T'
|     `-RecordType 0x55cf2be20ae0 'Router::Connection'
|       `-CXXRecord 0x55cf2be20a50 'Connection'
|-TypedefDecl 0x55cf2be47898 <line:122:5, col:22> col:22 const_pointer 'const Router::Connection *'
| `-PointerType 0x55cf2be47860 'const Router::Connection *'
|   `-QualType 0x55cf2be46471 'const Router::Connection' const
|     `-SubstTemplateTypeParmType 0x55cf2be46470 'Router::Connection' sugar
|       |-TemplateTypeParmType 0x55cf2ba5a110 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55cf2ba5a0b8 'T'
|       `-RecordType 0x55cf2be20ae0 'Router::Connection'
|         `-CXXRecord 0x55cf2be20a50 'Connection'
|-TypedefDecl 0x55cf2be484f0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<Connection>::type':'const Router::Connection &'
| `-ElaboratedType 0x55cf2be484a0 'typename fast_argument<Connection>::type' sugar
|   `-TypedefType 0x55cf2be48480 'fast_argument<Router::Connection, true>::type' sugar
|     |-Typedef 0x55cf2be483b8 'type'
|     `-LValueReferenceType 0x55cf2be48380 'const Router::Connection &'
|       `-QualType 0x55cf2be48121 'const Router::Connection' const
|         `-SubstTemplateTypeParmType 0x55cf2be48120 'Router::Connection' sugar
|           |-TemplateTypeParmType 0x55cf2ba2caf0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55cf2ba2ca98 'T'
|           `-RecordType 0x55cf2be20ae0 'Router::Connection'
|             `-CXXRecord 0x55cf2be20a50 'Connection'
|-TypedefDecl 0x55cf2be48558 <line:126:5, col:22> col:22 const_access_type 'const Router::Connection &'
| `-LValueReferenceType 0x55cf2be47740 'const Router::Connection &'
|   `-QualType 0x55cf2be46471 'const Router::Connection' const
|     `-SubstTemplateTypeParmType 0x55cf2be46470 'Router::Connection' sugar
|       |-TemplateTypeParmType 0x55cf2ba5a110 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55cf2ba5a0b8 'T'
|       `-RecordType 0x55cf2be20ae0 'Router::Connection'
|         `-CXXRecord 0x55cf2be20a50 'Connection'
|-TypedefDecl 0x55cf2be485b0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55cf2b759370 'int'
|-TypedefDecl 0x55cf2be48618 <line:130:5, col:16> col:16 iterator 'Router::Connection *'
| `-PointerType 0x55cf2be477d0 'Router::Connection *'
|   `-SubstTemplateTypeParmType 0x55cf2be46470 'Router::Connection' sugar
|     |-TemplateTypeParmType 0x55cf2ba5a110 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55cf2ba5a0b8 'T'
|     `-RecordType 0x55cf2be20ae0 'Router::Connection'
|       `-CXXRecord 0x55cf2be20a50 'Connection'
|-TypedefDecl 0x55cf2be48680 <line:131:5, col:22> col:22 const_iterator 'const Router::Connection *'
| `-PointerType 0x55cf2be47860 'const Router::Connection *'
|   `-QualType 0x55cf2be46471 'const Router::Connection' const
|     `-SubstTemplateTypeParmType 0x55cf2be46470 'Router::Connection' sugar
|       |-TemplateTypeParmType 0x55cf2ba5a110 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55cf2ba5a0b8 'T'
|       `-RecordType 0x55cf2be20ae0 'Router::Connection'
|         `-CXXRecord 0x55cf2be20a50 'Connection'
|-EnumDecl 0x55cf2be486d8 <line:134:5> col:5
| `-EnumConstantDecl 0x55cf2be487d0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Router::Connection>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55cf2be487b0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55cf2ba5baa8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55cf2ba5ba80 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55cf2ba5ba60 <col:40> 'int' 1
|-CXXConstructorDecl 0x55cf2be48858 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55cf2be48ae8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Router::Connection>::value_argument_type)' inline
| |-ParmVarDecl 0x55cf2be48910 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55cf2be489b0 <col:41, col:61> col:61 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXConstructorDecl 0x55cf2be48da8 <line:139:5, col:37> col:12 Vector 'void (const Vector<Router::Connection> &)' inline
| `-ParmVarDecl 0x55cf2be48c90 <col:19, col:36> col:36 x 'const Vector<Router::Connection> &'
|-CXXConstructorDecl 0x55cf2be49068 <line:141:5, col:32> col:12 Vector 'void (Vector<Router::Connection> &&)' inline
| `-ParmVarDecl 0x55cf2be48f50 <col:19, col:31> col:31 x 'Vector<Router::Connection> &&'
|-CXXMethodDecl 0x55cf2be493b0 <line:144:5, col:51> col:23 operator= 'Vector<Router::Connection> &(const Vector<Router::Connection> &)' inline
| `-ParmVarDecl 0x55cf2be49290 <col:33, col:50> col:50 x 'const Vector<Router::Connection> &'
|-CXXMethodDecl 0x55cf2be496c0 <line:146:5, col:46> col:23 operator= 'Vector<Router::Connection> &(Vector<Router::Connection> &&)' inline
| `-ParmVarDecl 0x55cf2be495a0 <col:33, col:45> col:45 x 'Vector<Router::Connection> &&'
|-CXXMethodDecl 0x55cf2be499b0 <line:148:5, col:70> col:23 assign 'Vector<Router::Connection> &(Vector::size_type, Vector<Router::Connection>::value_argument_type)' inline
| |-ParmVarDecl 0x55cf2be497f8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55cf2be49870 <col:43, col:69> col:63 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXMethodDecl 0x55cf2be49b08 <line:150:5, col:55> col:49 begin 'Vector<Router::Connection>::iterator ()'
| |-NoInlineAttr 0x55cf2be49be8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55cf2be49c40 <col:30> Inherited
|-CXXMethodDecl 0x55cf2be49c88 <line:151:5, col:53> col:49 end 'Vector<Router::Connection>::iterator ()'
| |-NoInlineAttr 0x55cf2be49d38 <col:20> Inherited
| `-OptimizeNoneAttr 0x55cf2be49d90 <col:30> Inherited
|-CXXMethodDecl 0x55cf2be49e58 <line:152:5, col:63> col:55 begin 'Vector<Router::Connection>::const_iterator () const'
| |-NoInlineAttr 0x55cf2be49f08 <col:20> Inherited
| `-OptimizeNoneAttr 0x55cf2be49f60 <col:30> Inherited
|-CXXMethodDecl 0x55cf2be49fa8 <line:153:5, col:61> col:55 end 'Vector<Router::Connection>::const_iterator () const'
| |-NoInlineAttr 0x55cf2be4a058 <col:20> Inherited
| `-OptimizeNoneAttr 0x55cf2be4a0b0 <col:30> Inherited
|-CXXMethodDecl 0x55cf2be4a0f8 <line:154:5, col:64> col:55 cbegin 'Vector<Router::Connection>::const_iterator () const'
| |-NoInlineAttr 0x55cf2be4a1a8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55cf2be4a200 <col:30> Inherited
|-CXXMethodDecl 0x55cf2be4a248 <line:155:5, col:62> col:55 cend 'Vector<Router::Connection>::const_iterator () const'
| |-NoInlineAttr 0x55cf2be4a2f8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55cf2be4a350 <col:30> Inherited
|-CXXMethodDecl 0x55cf2be4a378 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55cf2be4a428 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55cf2be4a4d8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55cf2be4a698 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Router::Connection>::value_argument_type)' inline
| |-ParmVarDecl 0x55cf2be4a588 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55cf2be4a600 <col:37, col:63> col:57 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXMethodDecl 0x55cf2be4a7e8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55cf2be4a758 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55cf2be4a998 <line:163:5, col:65> col:43 operator[] 'Router::Connection &(Vector::size_type)'
| |-ParmVarDecl 0x55cf2be4a8a0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55cf2be4aa50 <col:20>
| `-OptimizeNoneAttr 0x55cf2be4aaa8 <col:30>
|-CXXMethodDecl 0x55cf2be4abc8 <line:164:5, col:73> col:49 operator[] 'const Router::Connection &(Vector::size_type) const'
| |-ParmVarDecl 0x55cf2be4aad0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55cf2be4ac80 <col:20>
| `-OptimizeNoneAttr 0x55cf2be4acd8 <col:30>
|-CXXMethodDecl 0x55cf2be4ad90 <line:165:5, col:29> col:15 at 'Router::Connection &(Vector::size_type)' inline
| `-ParmVarDecl 0x55cf2be4ad00 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55cf2be4aed8 <line:166:5, col:37> col:21 at 'const Router::Connection &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55cf2be4ae48 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55cf2be4b008 <line:167:5, col:21> col:15 front 'Router::Connection &()' inline
|-CXXMethodDecl 0x55cf2be4b138 <line:168:5, col:29> col:21 front 'const Router::Connection &() const' inline
|-CXXMethodDecl 0x55cf2be4b208 <line:169:5, col:20> col:15 back 'Router::Connection &()' inline
|-CXXMethodDecl 0x55cf2be4b2d8 <line:170:5, col:28> col:21 back 'const Router::Connection &() const' inline
|-CXXMethodDecl 0x55cf2be4b418 <line:172:5, col:39> col:15 unchecked_at 'Router::Connection &(Vector::size_type)' inline
| `-ParmVarDecl 0x55cf2be4b388 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55cf2be4b560 <line:173:5, col:47> col:21 unchecked_at 'const Router::Connection &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55cf2be4b4d0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55cf2be4b6a8 <line:174:5, col:59> col:15 at_u 'Router::Connection &(Vector::size_type)' inline
| |-ParmVarDecl 0x55cf2be4b618 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55cf2be4b760 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55cf2be4cb60 <line:175:5, col:71> col:21 at_u 'const Router::Connection &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55cf2be4b7d0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55cf2be4cc18 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55cf2be4ccd8 <line:177:5, col:20> col:15 data 'Router::Connection *()' inline
|-CXXMethodDecl 0x55cf2be4cdd8 <line:178:5, col:28> col:21 data 'const Router::Connection *() const' inline
|-CXXMethodDecl 0x55cf2be4cf88 <line:180:5, col:48> col:17 push_back 'void (Vector<Router::Connection>::value_argument_type)' inline
| `-ParmVarDecl 0x55cf2be4ce98 <col:27, col:47> col:47 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-FunctionTemplateDecl 0x55cf2be4d748 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55cf2be4d040 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Router::Connection>':'fast_argument<Router::Connection, true>'
| `-CXXMethodDecl 0x55cf2be4d6a8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Router::Connection &&)' inline
|   `-ParmVarDecl 0x55cf2be4d5a8 <col:58, col:62> col:62 v 'Router::Connection &&'
|-CXXMethodDecl 0x55cf2be4d828 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55cf2be4d978 <line:186:5, col:49> col:17 push_front 'void (Vector<Router::Connection>::value_argument_type)' inline
| `-ParmVarDecl 0x55cf2be4d8e8 <col:28, col:48> col:48 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXMethodDecl 0x55cf2be4da30 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55cf2be4dc78 <line:189:5, col:62> col:21 insert 'Vector<Router::Connection>::iterator (Vector<Router::Connection>::iterator, Vector<Router::Connection>::value_argument_type)' inline
| |-ParmVarDecl 0x55cf2be4daf0 <col:28, col:37> col:37 it 'Vector<Router::Connection>::iterator':'Router::Connection *'
| `-ParmVarDecl 0x55cf2be4db68 <col:41, col:61> col:61 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXMethodDecl 0x55cf2be4de38 <line:190:5, col:38> col:21 erase 'Vector<Router::Connection>::iterator (Vector<Router::Connection>::iterator)' inline
| `-ParmVarDecl 0x55cf2be4dd48 <col:27, col:36> col:36 it 'Vector<Router::Connection>::iterator':'Router::Connection *'
|-CXXMethodDecl 0x55cf2be4e088 <line:191:5, col:49> col:21 erase 'Vector<Router::Connection>::iterator (Vector<Router::Connection>::iterator, Vector<Router::Connection>::iterator)' inline
| |-ParmVarDecl 0x55cf2be4df00 <col:27, col:36> col:36 a 'Vector<Router::Connection>::iterator':'Router::Connection *'
| `-ParmVarDecl 0x55cf2be4df78 <col:39, col:48> col:48 b 'Vector<Router::Connection>::iterator':'Router::Connection *'
|-CXXMethodDecl 0x55cf2be4e148 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55cf2be4e3a8 <line:195:5, col:34> col:17 swap 'void (Vector<Router::Connection> &)' inline
| `-ParmVarDecl 0x55cf2be4e2b0 <col:22, col:33> col:33 x 'Vector<Router::Connection> &'
`-CXXDestructorDecl 0x55cf2be4e478 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55cf2be4e478

Layout: <CGRecordLayout
  LLVMType:%class.Vector.8 = type { %class.vector_memory.9 }
  NonVirtualBaseLLVMType:%class.Vector.8 = type { %class.vector_memory.9 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | union Handler::(anonymous at ../dummy_inc/click/handler.hh:290:5)
         0 |   HandlerCallback h
         0 |   ReadHandlerCallback r
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | union Handler::(anonymous at ../dummy_inc/click/handler.hh:294:5)
         0 |   HandlerCallback h
         0 |   WriteHandlerCallback w
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Handler
         0 |   class String _name
         0 |     struct String::rep_t _r
         0 |       const char * data
         8 |       int length
        16 |       struct String::memo_t * memo
        24 |   union Handler::(anonymous at ../dummy_inc/click/handler.hh:290:5) _read_hook
        24 |     HandlerCallback h
        24 |     ReadHandlerCallback r
        32 |   union Handler::(anonymous at ../dummy_inc/click/handler.hh:294:5) _write_hook
        32 |     HandlerCallback h
        32 |     WriteHandlerCallback w
        40 |   void * _read_user_data
        48 |   void * _write_user_data
        56 |   uint32_t _flags
        60 |   int _use_count
        64 |   int _next_by_name
           | [sizeof=72, dsize=68, align=8,
           |  nvsize=68, nvalign=8]

*** Dumping AST Record Layout
         0 | class ErrorHandler
         0 |   (ErrorHandler vtable pointer)
         8 |   int _nerrors
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55cf2be681a0 prev 0x55cf2bc42088 <../dummy_inc/click/error.hh:90:1, line:592:1> line:90:7 referenced class ErrorHandler definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55cf2be68298 <col:1, col:7> col:7 implicit referenced class ErrorHandler
|-AccessSpecDecl 0x55cf2be68328 <col:22, col:28> col:22 public
|-EnumDecl 0x55cf2be68350 <line:98:5, line:111:5> line:98:10 Level
| |-EnumConstantDecl 0x55cf2be68468 <line:99:2, col:14> col:2 el_abort 'ErrorHandler::Level'
| | `-ConstantExpr 0x55cf2be68448 <col:13, col:14> 'int' Int: -999
| |   `-UnaryOperator 0x55cf2be68430 <col:13, col:14> 'int' prefix '-'
| |     `-IntegerLiteral 0x55cf2be68410 <col:14> 'int' 999
| |-EnumConstantDecl 0x55cf2be68510 <line:100:2, col:14> col:2 el_fatal 'ErrorHandler::Level'
| | `-ConstantExpr 0x55cf2be684f0 <col:13, col:14> 'int' Int: -1
| |   `-UnaryOperator 0x55cf2be684d8 <col:13, col:14> 'int' prefix '-'
| |     `-IntegerLiteral 0x55cf2be684b8 <col:14> 'int' 1
| |-EnumConstantDecl 0x55cf2be685a0 <line:102:2, col:17> col:2 el_emergency 'ErrorHandler::Level'
| | `-ConstantExpr 0x55cf2be68580 <col:17> 'int' Int: 0
| |   `-IntegerLiteral 0x55cf2be68560 <col:17> 'int' 0
| |-EnumConstantDecl 0x55cf2be68630 <line:103:2, col:13> col:2 el_alert 'ErrorHandler::Level'
| | `-ConstantExpr 0x55cf2be68610 <col:13> 'int' Int: 1
| |   `-IntegerLiteral 0x55cf2be685f0 <col:13> 'int' 1
| |-EnumConstantDecl 0x55cf2be686c0 <line:104:2, col:16> col:2 el_critical 'ErrorHandler::Level'
| | `-ConstantExpr 0x55cf2be686a0 <col:16> 'int' Int: 2
| |   `-IntegerLiteral 0x55cf2be68680 <col:16> 'int' 2
| |-EnumConstantDecl 0x55cf2be68750 <line:105:2, col:13> col:2 referenced el_error 'ErrorHandler::Level'
| | `-ConstantExpr 0x55cf2be68730 <col:13> 'int' Int: 3
| |   `-IntegerLiteral 0x55cf2be68710 <col:13> 'int' 3
| |-EnumConstantDecl 0x55cf2be687e0 <line:106:2, col:15> col:2 el_warning 'ErrorHandler::Level'
| | `-ConstantExpr 0x55cf2be687c0 <col:15> 'int' Int: 4
| |   `-IntegerLiteral 0x55cf2be687a0 <col:15> 'int' 4
| |-EnumConstantDecl 0x55cf2be68870 <line:107:2, col:14> col:2 el_notice 'ErrorHandler::Level'
| | `-ConstantExpr 0x55cf2be68850 <col:14> 'int' Int: 5
| |   `-IntegerLiteral 0x55cf2be68830 <col:14> 'int' 5
| |-EnumConstantDecl 0x55cf2be68900 <line:109:2, col:12> col:2 el_info 'ErrorHandler::Level'
| | `-ConstantExpr 0x55cf2be688e0 <col:12> 'int' Int: 6
| |   `-IntegerLiteral 0x55cf2be688c0 <col:12> 'int' 6
| `-EnumConstantDecl 0x55cf2be68990 <line:110:2, col:13> col:2 el_debug 'ErrorHandler::Level'
|   `-ConstantExpr 0x55cf2be68970 <col:13> 'int' Int: 7
|     `-IntegerLiteral 0x55cf2be68950 <col:13> 'int' 7
|-VarDecl 0x55cf2be68a00 <line:114:5, col:31> col:23 e_abort 'const char []' static
|-VarDecl 0x55cf2be68a88 <col:5, line:115:10> col:2 e_fatal 'const char []' static
|-VarDecl 0x55cf2be68b10 <line:114:5, line:116:14> col:2 e_emergency 'const char []' static
|-VarDecl 0x55cf2be68b98 <line:114:5, line:117:10> col:2 e_alert 'const char []' static
|-VarDecl 0x55cf2be68c20 <line:114:5, line:118:13> col:2 e_critical 'const char []' static
|-VarDecl 0x55cf2be68ca8 <line:114:5, line:119:10> col:2 e_error 'const char []' static
|-VarDecl 0x55cf2be68d30 <line:114:5, line:120:12> col:2 e_warning 'const char []' static
|-VarDecl 0x55cf2be68db8 <line:114:5, line:121:22> col:2 e_warning_annotated 'const char []' static
|-VarDecl 0x55cf2be68e40 <line:114:5, line:122:11> col:2 e_notice 'const char []' static
|-VarDecl 0x55cf2be68ec8 <line:114:5, line:123:9> col:2 e_info 'const char []' static
|-VarDecl 0x55cf2be68f50 <line:114:5, line:124:10> col:2 e_debug 'const char []' static
|-CXXConstructorDecl 0x55cf2be69050 <line:127:5, line:129:5> line:127:5 used ErrorHandler 'void ()'
| |-CXXCtorInitializer Field 0x55cf2bc766e8 '_nerrors' 'int'
| | `-IntegerLiteral 0x55cf2bc76e78 <line:128:13> 'int' 0
| `-CompoundStmt 0x55cf2bc76ee8 <col:16, line:129:5>
|-CXXDestructorDecl 0x55cf2be69140 <line:131:5, line:132:5> line:131:13 used ~ErrorHandler 'void () noexcept' virtual
| `-CompoundStmt 0x55cf2bc76ef8 <col:29, line:132:5>
|-CXXMethodDecl 0x55cf2be692f8 <line:148:5, col:62> col:26 static_initialize 'ErrorHandler *(ErrorHandler *)' static
| `-ParmVarDecl 0x55cf2be69230 <col:44, col:58> col:58 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55cf2be693c0 <line:154:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x55cf2be694a8 <line:159:5, line:161:5> line:159:26 default_handler 'ErrorHandler *()' static
| `-CompoundStmt 0x55cf2bc76f50 <col:44, line:161:5>
|   `-ReturnStmt 0x55cf2bc76f40 <line:160:2, col:9>
|     `-ImplicitCastExpr 0x55cf2bc76f28 <col:9> 'ErrorHandler *' <LValueToRValue>
|       `-DeclRefExpr 0x55cf2bc76f08 <col:9> 'ErrorHandler *' lvalue Var 0x55cf2bc76748 'the_default_handler' 'ErrorHandler *'
|-CXXMethodDecl 0x55cf2be695e8 <line:168:5, col:55> col:17 set_default_handler 'void (ErrorHandler *)' static
| `-ParmVarDecl 0x55cf2be69558 <col:37, col:51> col:51 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55cf2be696b0 <line:171:5, line:173:5> line:171:26 silent_handler 'ErrorHandler *()' static
| `-CompoundStmt 0x55cf2bc76fb0 <col:43, line:173:5>
|   `-ReturnStmt 0x55cf2bc76fa0 <line:172:2, col:9>
|     `-ImplicitCastExpr 0x55cf2bc76f88 <col:9> 'ErrorHandler *' <LValueToRValue>
|       `-DeclRefExpr 0x55cf2bc76f68 <col:9> 'ErrorHandler *' lvalue Var 0x55cf2bc767c0 'the_silent_handler' 'ErrorHandler *'
|-VarDecl 0x55cf2be69768 <line:176:5, col:22> col:22 ok_result 'const int' static
|-VarDecl 0x55cf2be697e8 <line:178:5, col:22> col:22 error_result 'const int' static
|-CXXMethodDecl 0x55cf2be698f8 <line:186:5, col:36> col:10 debug 'void (const char *, ...)'
| `-ParmVarDecl 0x55cf2be69868 <col:16, col:28> col:28 fmt 'const char *'
|-CXXMethodDecl 0x55cf2be69a48 <line:188:5, col:38> col:10 message 'void (const char *, ...)'
| `-ParmVarDecl 0x55cf2be699b8 <col:18, col:30> col:30 fmt 'const char *'
|-CXXMethodDecl 0x55cf2be69ba0 <line:193:5, col:37> col:9 warning 'int (const char *, ...)'
| `-ParmVarDecl 0x55cf2be69b08 <col:17, col:29> col:29 fmt 'const char *'
|-CXXMethodDecl 0x55cf2bc720a8 <line:196:5, col:35> col:9 error 'int (const char *, ...)'
| `-ParmVarDecl 0x55cf2bc72010 <col:15, col:27> col:27 fmt 'const char *'
|-CXXMethodDecl 0x55cf2bc72200 <line:201:5, col:35> col:9 fatal 'int (const char *, ...)'
| `-ParmVarDecl 0x55cf2bc72168 <col:15, col:27> col:27 fmt 'const char *'
|-CXXMethodDecl 0x55cf2bc72410 <line:204:5, col:61> col:10 ldebug 'void (const String &, const char *, ...)'
| |-ParmVarDecl 0x55cf2bc722b8 <col:17, col:31> col:31 landmark 'const String &'
| `-ParmVarDecl 0x55cf2bc72338 <col:41, col:53> col:53 fmt 'const char *'
|-CXXMethodDecl 0x55cf2bc725e8 <line:206:5, col:63> col:10 lmessage 'void (const String &, const char *, ...)'
| |-ParmVarDecl 0x55cf2bc724d0 <col:19, col:33> col:33 landmark 'const String &'
| `-ParmVarDecl 0x55cf2bc72550 <col:43, col:55> col:55 fmt 'const char *'
|-CXXMethodDecl 0x55cf2bc72808 <line:208:5, col:62> col:9 lwarning 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x55cf2bc726a8 <col:18, col:32> col:32 landmark 'const String &'
| `-ParmVarDecl 0x55cf2bc72728 <col:42, col:54> col:54 fmt 'const char *'
|-CXXMethodDecl 0x55cf2bc729e8 <line:210:5, col:60> col:9 lerror 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x55cf2bc728c8 <col:16, col:30> col:30 landmark 'const String &'
| `-ParmVarDecl 0x55cf2bc72948 <col:40, col:52> col:52 fmt 'const char *'
|-CXXMethodDecl 0x55cf2bc72bc8 <line:212:5, col:60> col:9 lfatal 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x55cf2bc72aa8 <col:16, col:30> col:30 landmark 'const String &'
| `-ParmVarDecl 0x55cf2bc72b28 <col:40, col:52> col:52 fmt 'const char *'
|-CXXMethodDecl 0x55cf2bc72d50 <line:226:5, col:35> col:9 used xmessage 'int (const String &)'
| `-ParmVarDecl 0x55cf2bc72c88 <col:18, col:32> col:32 str 'const String &'
|-CXXMethodDecl 0x55cf2bc72f20 <line:232:5, line:234:5> line:232:9 used xmessage 'int (const String &, const String &)'
| |-ParmVarDecl 0x55cf2bc72e08 <col:18, col:32> col:32 used anno 'const String &'
| |-ParmVarDecl 0x55cf2bc72e80 <col:38, col:52> col:52 used str 'const String &'
| `-CompoundStmt 0x55cf2bc77208 <col:57, line:234:5>
|   `-ReturnStmt 0x55cf2bc771f8 <line:233:2, col:41>
|     `-ExprWithCleanups 0x55cf2bc771e0 <col:9, col:41> 'int'
|       `-CXXMemberCallExpr 0x55cf2bc77188 <col:9, col:41> 'int'
|         |-MemberExpr 0x55cf2bc77158 <col:9> '<bound member function type>' ->xmessage 0x55cf2bc72d50
|         | `-CXXThisExpr 0x55cf2bc77148 <col:9> 'ErrorHandler *' implicit this
|         `-MaterializeTemporaryExpr 0x55cf2bc771c8 <col:18, col:40> 'const String' lvalue
|           `-ImplicitCastExpr 0x55cf2bc771b0 <col:18, col:40> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x55cf2bc77128 <col:18, col:40> 'String' (CXXTemporary 0x55cf2bc77128)
|               `-CallExpr 0x55cf2bc770f0 <col:18, col:40> 'String'
|                 |-ImplicitCastExpr 0x55cf2bc770d8 <col:18> 'String (*)(const String &, const String &)' <FunctionToPointerDecay>
|                 | `-DeclRefExpr 0x55cf2bc77050 <col:18> 'String (const String &, const String &)' lvalue CXXMethod 0x55cf2bc74f18 'combine_anno' 'String (const String &, const String &)'
|                 |-DeclRefExpr 0x55cf2bc77070 <col:31> 'const String' lvalue ParmVar 0x55cf2bc72e80 'str' 'const String &'
|                 `-DeclRefExpr 0x55cf2bc77090 <col:36> 'const String' lvalue ParmVar 0x55cf2bc72e08 'anno' 'const String &'
|-CXXMethodDecl 0x55cf2bc73200 <line:241:5, line:243:5> line:241:9 xmessage 'int (const String &, const char *, __va_list_tag *)'
| |-ParmVarDecl 0x55cf2bc72fe0 <col:18, col:32> col:32 used anno 'const String &'
| |-ParmVarDecl 0x55cf2bc73060 <col:38, col:50> col:50 used fmt 'const char *'
| |-ParmVarDecl 0x55cf2bc730d8 <col:55, col:63> col:63 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x55cf2bc77498 <col:68, line:243:5>
|   `-ReturnStmt 0x55cf2bc77488 <line:242:2, col:41>
|     `-ExprWithCleanups 0x55cf2bc77470 <col:9, col:41> 'int'
|       `-CXXMemberCallExpr 0x55cf2bc77410 <col:9, col:41> 'int'
|         |-MemberExpr 0x55cf2bc773e0 <col:9> '<bound member function type>' ->xmessage 0x55cf2bc72f20
|         | `-CXXThisExpr 0x55cf2bc773d0 <col:9> 'ErrorHandler *' implicit this
|         |-DeclRefExpr 0x55cf2bc772a8 <col:18> 'const String' lvalue ParmVar 0x55cf2bc72fe0 'anno' 'const String &'
|         `-MaterializeTemporaryExpr 0x55cf2bc77458 <col:24, col:40> 'const String' lvalue
|           `-ImplicitCastExpr 0x55cf2bc77440 <col:24, col:40> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x55cf2bc773b0 <col:24, col:40> 'String' (CXXTemporary 0x55cf2bc773b0)
|               `-CXXMemberCallExpr 0x55cf2bc77348 <col:24, col:40> 'String'
|                 |-MemberExpr 0x55cf2bc772d8 <col:24> '<bound member function type>' ->vformat 0x55cf2bc743e0
|                 | `-CXXThisExpr 0x55cf2bc772c8 <col:24> 'ErrorHandler *' implicit this
|                 |-ImplicitCastExpr 0x55cf2bc77378 <col:32> 'const char *' <LValueToRValue>
|                 | `-DeclRefExpr 0x55cf2bc77308 <col:32> 'const char *' lvalue ParmVar 0x55cf2bc73060 'fmt' 'const char *'
|                 `-ImplicitCastExpr 0x55cf2bc77390 <col:37> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                   `-DeclRefExpr 0x55cf2bc77328 <col:37> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x55cf2bc730d8 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55cf2bc734a0 <line:251:5, line:254:5> line:251:9 used xmessage 'int (const String &, const String &, const String &)'
| |-ParmVarDecl 0x55cf2bc732c8 <col:18, col:32> col:32 used landmark 'const String &'
| |-ParmVarDecl 0x55cf2bc73340 <col:42, col:56> col:56 used anno 'const String &'
| |-ParmVarDecl 0x55cf2bc733b8 <line:252:4, col:18> col:18 used str 'const String &'
| `-CompoundStmt 0x55cf2bc777d8 <col:23, line:254:5>
|   `-ReturnStmt 0x55cf2bc777c8 <line:253:2, col:71>
|     `-ExprWithCleanups 0x55cf2bc777b0 <col:9, col:71> 'int'
|       `-CXXMemberCallExpr 0x55cf2bc77750 <col:9, col:71> 'int'
|         |-MemberExpr 0x55cf2bc77720 <col:9> '<bound member function type>' ->xmessage 0x55cf2bc72f20
|         | `-CXXThisExpr 0x55cf2bc77710 <col:9> 'ErrorHandler *' implicit this
|         |-MaterializeTemporaryExpr 0x55cf2bc77798 <col:18, col:65> 'const String' lvalue
|         | `-ImplicitCastExpr 0x55cf2bc77780 <col:18, col:65> 'const String' <NoOp>
|         |   `-CXXBindTemporaryExpr 0x55cf2bc776d0 <col:18, col:65> 'String' (CXXTemporary 0x55cf2bc776d0)
|         |     `-CallExpr 0x55cf2bc77668 <col:18, col:65> 'String'
|         |       |-ImplicitCastExpr 0x55cf2bc77650 <col:18> 'String (*)(const String &, const String &)' <FunctionToPointerDecay>
|         |       | `-DeclRefExpr 0x55cf2bc77538 <col:18> 'String (const String &, const String &)' lvalue CXXMethod 0x55cf2bc74f18 'combine_anno' 'String (const String &, const String &)'
|         |       |-DeclRefExpr 0x55cf2bc77558 <col:31> 'const String' lvalue ParmVar 0x55cf2bc73340 'anno' 'const String &'
|         |       `-MaterializeTemporaryExpr 0x55cf2bc776b0 <col:37, col:64> 'const String' lvalue
|         |         `-ImplicitCastExpr 0x55cf2bc77698 <col:37, col:64> 'const String' <NoOp>
|         |           `-CXXBindTemporaryExpr 0x55cf2bc77630 <col:37, col:64> 'String' (CXXTemporary 0x55cf2bc77630)
|         |             `-CallExpr 0x55cf2bc77600 <col:37, col:64> 'String'
|         |               |-ImplicitCastExpr 0x55cf2bc775e8 <col:37> 'String (*)(const String &)' <FunctionToPointerDecay>
|         |               | `-DeclRefExpr 0x55cf2bc77578 <col:37> 'String (const String &)' lvalue CXXMethod 0x55cf2bc75568 'make_landmark_anno' 'String (const String &)'
|         |               `-DeclRefExpr 0x55cf2bc77598 <col:56> 'const String' lvalue ParmVar 0x55cf2bc732c8 'landmark' 'const String &'
|         `-DeclRefExpr 0x55cf2bc776f0 <col:68> 'const String' lvalue ParmVar 0x55cf2bc733b8 'str' 'const String &'
|-CXXMethodDecl 0x55cf2bc73820 <line:264:5, line:267:5> line:264:9 xmessage 'int (const String &, const String &, const char *, __va_list_tag *)'
| |-ParmVarDecl 0x55cf2bc73568 <col:18, col:32> col:32 used landmark 'const String &'
| |-ParmVarDecl 0x55cf2bc735e0 <col:42, col:56> col:56 used anno 'const String &'
| |-ParmVarDecl 0x55cf2bc73660 <line:265:4, col:16> col:16 used fmt 'const char *'
| |-ParmVarDecl 0x55cf2bc736d8 <col:21, col:29> col:29 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x55cf2bc77a90 <col:34, line:267:5>
|   `-ReturnStmt 0x55cf2bc77a80 <line:266:2, col:51>
|     `-ExprWithCleanups 0x55cf2bc77a68 <col:9, col:51> 'int'
|       `-CXXMemberCallExpr 0x55cf2bc77a00 <col:9, col:51> 'int'
|         |-MemberExpr 0x55cf2bc779d0 <col:9> '<bound member function type>' ->xmessage 0x55cf2bc734a0
|         | `-CXXThisExpr 0x55cf2bc779c0 <col:9> 'ErrorHandler *' implicit this
|         |-DeclRefExpr 0x55cf2bc77878 <col:18> 'const String' lvalue ParmVar 0x55cf2bc73568 'landmark' 'const String &'
|         |-DeclRefExpr 0x55cf2bc77898 <col:28> 'const String' lvalue ParmVar 0x55cf2bc735e0 'anno' 'const String &'
|         `-MaterializeTemporaryExpr 0x55cf2bc77a50 <col:34, col:50> 'const String' lvalue
|           `-ImplicitCastExpr 0x55cf2bc77a38 <col:34, col:50> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x55cf2bc779a0 <col:34, col:50> 'String' (CXXTemporary 0x55cf2bc779a0)
|               `-CXXMemberCallExpr 0x55cf2bc77938 <col:34, col:50> 'String'
|                 |-MemberExpr 0x55cf2bc778c8 <col:34> '<bound member function type>' ->vformat 0x55cf2bc743e0
|                 | `-CXXThisExpr 0x55cf2bc778b8 <col:34> 'ErrorHandler *' implicit this
|                 |-ImplicitCastExpr 0x55cf2bc77968 <col:42> 'const char *' <LValueToRValue>
|                 | `-DeclRefExpr 0x55cf2bc778f8 <col:42> 'const char *' lvalue ParmVar 0x55cf2bc73660 'fmt' 'const char *'
|                 `-ImplicitCastExpr 0x55cf2bc77980 <col:47> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                   `-DeclRefExpr 0x55cf2bc77918 <col:47> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x55cf2bc736d8 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55cf2bc73930 <line:286:5, line:288:5> line:286:9 nerrors 'int () const'
| `-CompoundStmt 0x55cf2bc77b10 <col:25, line:288:5>
|   `-ReturnStmt 0x55cf2bc77b00 <line:287:2, col:9>
|     `-ImplicitCastExpr 0x55cf2bc77ae8 <col:9> 'int' <LValueToRValue>
|       `-MemberExpr 0x55cf2bc77ab8 <col:9> 'const int' lvalue ->_nerrors 0x55cf2bc766e8
|         `-CXXThisExpr 0x55cf2bc77aa8 <col:9> 'const ErrorHandler *' implicit this
|-CXXMethodDecl 0x55cf2bc73b40 <line:349:5, col:66> col:19 xformat 'String (int, const char *, ...)' static
| |-ParmVarDecl 0x55cf2bc739e8 <col:27, col:31> col:31 default_flags 'int'
| `-ParmVarDecl 0x55cf2bc73a68 <col:46, col:58> col:58 fmt 'const char *'
|-CXXMethodDecl 0x55cf2bc73e28 <line:351:5, col:75> col:19 used vxformat 'String (int, const char *, __va_list_tag *)' static
| |-ParmVarDecl 0x55cf2bc73c08 <col:28, col:32> col:32 default_flags 'int'
| |-ParmVarDecl 0x55cf2bc73c88 <col:47, col:59> col:59 fmt 'const char *'
| `-ParmVarDecl 0x55cf2bc73d00 <col:64, col:72> col:72 val '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55cf2bc73fc0 <line:353:5, col:47> col:19 xformat 'String (const char *, ...)' static
| `-ParmVarDecl 0x55cf2bc73ef8 <col:27, col:39> col:39 fmt 'const char *'
|-CXXMethodDecl 0x55cf2bc74208 <line:355:5, line:357:5> line:355:19 vxformat 'String (const char *, __va_list_tag *)' static
| |-ParmVarDecl 0x55cf2bc74080 <col:28, col:40> col:40 used fmt 'const char *'
| |-ParmVarDecl 0x55cf2bc740f8 <col:45, col:53> col:53 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x55cf2bc77d70 <col:58, line:357:5>
|   `-ReturnStmt 0x55cf2bc77d60 <line:356:2, col:29>
|     `-ExprWithCleanups 0x55cf2bc77d48 <col:9, col:29> 'String'
|       `-CXXConstructExpr 0x55cf2bc77d18 <col:9, col:29> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x55cf2bc77d00 <col:9, col:29> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x55cf2bc77ce0 <col:9, col:29> 'String' (CXXTemporary 0x55cf2bc77ce0)
|             `-CallExpr 0x55cf2bc77c70 <col:9, col:29> 'String'
|               |-ImplicitCastExpr 0x55cf2bc77c58 <col:9> 'String (*)(int, const char *, __va_list_tag *)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x55cf2bc77bd8 <col:9> 'String (int, const char *, __va_list_tag *)' lvalue CXXMethod 0x55cf2bc73e28 'vxformat' 'String (int, const char *, __va_list_tag *)'
|               |-IntegerLiteral 0x55cf2bc77b78 <col:18> 'int' 0
|               |-ImplicitCastExpr 0x55cf2bc77ca8 <col:21> 'const char *' <LValueToRValue>
|               | `-DeclRefExpr 0x55cf2bc77b98 <col:21> 'const char *' lvalue ParmVar 0x55cf2bc74080 'fmt' 'const char *'
|               `-ImplicitCastExpr 0x55cf2bc77cc0 <col:26> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                 `-DeclRefExpr 0x55cf2bc77bb8 <col:26> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x55cf2bc740f8 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55cf2bc743e0 <line:369:5, col:56> col:20 used vformat 'String (const char *, __va_list_tag *)' virtual
| |-ParmVarDecl 0x55cf2bc742d0 <col:28, col:40> col:40 fmt 'const char *'
| `-ParmVarDecl 0x55cf2bc74348 <col:45, col:53> col:53 val '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55cf2bc74538 <line:379:5, col:39> col:12 format 'String (const char *, ...)'
| `-ParmVarDecl 0x55cf2bc744a8 <col:19, col:31> col:31 fmt 'const char *'
|-CXXMethodDecl 0x55cf2bc74680 <line:393:5, col:46> col:20 decorate 'String (const String &)' virtual
| `-ParmVarDecl 0x55cf2bc745f0 <col:29, col:43> col:43 str 'const String &'
|-CXXMethodDecl 0x55cf2bc74920 <line:424:5, col:69> col:19 emit 'void *(const String &, void *, bool)' virtual
| |-ParmVarDecl 0x55cf2bc74738 <col:24, col:38> col:38 str 'const String &'
| |-ParmVarDecl 0x55cf2bc747b8 <col:43, col:49> col:49 user_data 'void *'
| `-ParmVarDecl 0x55cf2bc74830 <col:60, col:65> col:65 more 'bool'
|-CXXMethodDecl 0x55cf2bc74a80 <line:438:5, line:441:5> line:438:18 account 'void (int)' virtual
| |-ParmVarDecl 0x55cf2bc749f0 <col:26, col:30> col:30 used level 'int'
| `-CompoundStmt 0x55cf2bc77e88 <col:37, line:441:5>
|   `-IfStmt 0x55cf2bc77e70 <line:439:2, line:440:8>
|     |-BinaryOperator 0x55cf2bc77df8 <line:439:6, col:15> 'bool' '<='
|     | |-ImplicitCastExpr 0x55cf2bc77dc8 <col:6> 'int' <LValueToRValue>
|     | | `-DeclRefExpr 0x55cf2bc77d88 <col:6> 'int' lvalue ParmVar 0x55cf2bc749f0 'level' 'int'
|     | `-ImplicitCastExpr 0x55cf2bc77de0 <col:15> 'int' <IntegralCast>
|     |   `-DeclRefExpr 0x55cf2bc77da8 <col:15> 'ErrorHandler::Level' EnumConstant 0x55cf2be68750 'el_error' 'ErrorHandler::Level'
|     `-UnaryOperator 0x55cf2bc77e58 <line:440:6, col:8> 'int' lvalue prefix '++'
|       `-MemberExpr 0x55cf2bc77e28 <col:8> 'int' lvalue ->_nerrors 0x55cf2bc766e8
|         `-CXXThisExpr 0x55cf2bc77e18 <col:8> 'ErrorHandler *' implicit this
|-CXXMethodDecl 0x55cf2bc74b48 <line:446:5, line:448:5> line:446:18 clear 'void ()' virtual
| `-CompoundStmt 0x55cf2bc77f20 <col:26, line:448:5>
|   `-BinaryOperator 0x55cf2bc77f00 <line:447:2, col:13> 'int' lvalue '='
|     |-MemberExpr 0x55cf2bc77eb0 <col:2> 'int' lvalue ->_nerrors 0x55cf2bc766e8
|     | `-CXXThisExpr 0x55cf2bc77ea0 <col:2> 'ErrorHandler *' implicit this
|     `-IntegerLiteral 0x55cf2bc77ee0 <col:13> 'int' 0
|-CXXMethodDecl 0x55cf2bc74d10 <line:466:5, col:66> col:19 used make_anno 'String (const char *, const String &)' static
| |-ParmVarDecl 0x55cf2bc74c00 <col:29, col:41> col:41 name 'const char *'
| `-ParmVarDecl 0x55cf2bc74c78 <col:47, col:61> col:61 value 'const String &'
|-CXXMethodDecl 0x55cf2bc74f18 <line:482:5, col:69> col:19 used combine_anno 'String (const String &, const String &)' static
| |-ParmVarDecl 0x55cf2bc74dd0 <col:32, col:46> col:46 str 'const String &'
| `-ParmVarDecl 0x55cf2bc74e48 <col:51, col:65> col:65 anno 'const String &'
|-CXXMethodDecl 0x55cf2bc751c8 <line:516:5, line:517:68> line:516:24 parse_anno 'const char *(const String &, const char *, const char *, ...)' static
| |-ParmVarDecl 0x55cf2bc74fd8 <col:35, col:49> col:49 str 'const String &'
| |-ParmVarDecl 0x55cf2bc75058 <line:517:3, col:15> col:15 begin 'const char *'
| |-ParmVarDecl 0x55cf2bc750d8 <col:22, col:34> col:34 end 'const char *'
| `-SentinelAttr 0x55cf2bc75280 <col:59> 0 0
|-CXXMethodDecl 0x55cf2bc75418 <line:527:5, line:534:5> line:527:24 skip_anno 'const char *(const char *, const char *)' static
| |-ParmVarDecl 0x55cf2bc752f8 <col:34, col:46> col:46 used begin 'const char *'
| |-ParmVarDecl 0x55cf2bc75378 <col:53, col:65> col:65 used end 'const char *'
| `-CompoundStmt 0x55cf2bc78590 <col:70, line:534:5>
|   |-DeclStmt 0x55cf2bc78090 <line:528:2, col:20>
|   | |-VarDecl 0x55cf2bc77f48 <col:2, col:9> col:9 used name 'String' callinit destroyed
|   | | `-CXXConstructExpr 0x55cf2bc77fb0 <col:9> 'String' 'void ()'
|   | `-VarDecl 0x55cf2bc77fe8 <col:2, col:15> col:15 used value 'String' callinit destroyed
|   |   `-CXXConstructExpr 0x55cf2bc78050 <col:15> 'String' 'void ()'
|   |-DeclStmt 0x55cf2bc78160 <line:529:2, col:23>
|   | `-VarDecl 0x55cf2bc780c0 <col:2, col:18> col:14 used x 'const char *' cinit
|   |   `-ImplicitCastExpr 0x55cf2bc78148 <col:18> 'const char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x55cf2bc78128 <col:18> 'const char *' lvalue ParmVar 0x55cf2bc752f8 'begin' 'const char *'
|   |-DoStmt 0x55cf2bc78528 <line:530:2, line:532:15>
|   | |-CompoundStmt 0x55cf2bc78458 <line:530:5, line:532:2>
|   | | `-ExprWithCleanups 0x55cf2bc78440 <line:531:6, col:58> 'const char *' lvalue
|   | |   `-BinaryOperator 0x55cf2bc78420 <col:6, col:58> 'const char *' lvalue '='
|   | |     |-DeclRefExpr 0x55cf2bc78178 <col:6> 'const char *' lvalue Var 0x55cf2bc780c0 'x' 'const char *'
|   | |     `-CallExpr 0x55cf2bc78370 <col:10, col:58> 'const char *'
|   | |       |-ImplicitCastExpr 0x55cf2bc78358 <col:10> 'const char *(*)(const String &, const char *, const char *, String *, String *, bool)' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x55cf2bc78310 <col:10> 'const char *(const String &, const char *, const char *, String *, String *, bool)' lvalue CXXMethod 0x55cf2bc76bc0 'skip_anno' 'const char *(const String &, const char *, const char *, String *, String *, bool)'
|   | |       |-MaterializeTemporaryExpr 0x55cf2bc783d8 <col:20, col:27> 'const String' lvalue
|   | |       | `-ImplicitCastExpr 0x55cf2bc783c0 <col:20, col:27> 'const String' <NoOp>
|   | |       |   `-CXXBindTemporaryExpr 0x55cf2bc78230 <col:20, col:27> 'String' (CXXTemporary 0x55cf2bc78230)
|   | |       |     `-CXXTemporaryObjectExpr 0x55cf2bc781f8 <col:20, col:27> 'String' 'void ()'
|   | |       |-ImplicitCastExpr 0x55cf2bc783f0 <col:30> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x55cf2bc78250 <col:30> 'const char *' lvalue Var 0x55cf2bc780c0 'x' 'const char *'
|   | |       |-ImplicitCastExpr 0x55cf2bc78408 <col:33> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x55cf2bc78270 <col:33> 'const char *' lvalue ParmVar 0x55cf2bc75378 'end' 'const char *'
|   | |       |-UnaryOperator 0x55cf2bc782b0 <col:38, col:39> 'String *' prefix '&' cannot overflow
|   | |       | `-DeclRefExpr 0x55cf2bc78290 <col:39> 'String' lvalue Var 0x55cf2bc77f48 'name' 'String'
|   | |       |-UnaryOperator 0x55cf2bc782e8 <col:45, col:46> 'String *' prefix '&' cannot overflow
|   | |       | `-DeclRefExpr 0x55cf2bc782c8 <col:46> 'String' lvalue Var 0x55cf2bc77fe8 'value' 'String'
|   | |       `-CXXBoolLiteralExpr 0x55cf2bc78300 <col:53> 'bool' false
|   | `-ImplicitCastExpr 0x55cf2bc78510 <line:532:11> 'bool' <MemberPointerToBoolean>
|   |   `-ImplicitCastExpr 0x55cf2bc784f8 <col:11> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|   |     `-CXXMemberCallExpr 0x55cf2bc784d8 <col:11> 'String::unspecified_bool_type':'int (String::*)() const'
|   |       `-MemberExpr 0x55cf2bc784a8 <col:11> '<bound member function type>' .operator int (String::*)() const 0x55cf2ba8d058
|   |         `-ImplicitCastExpr 0x55cf2bc78490 <col:11> 'const String' lvalue <NoOp>
|   |           `-DeclRefExpr 0x55cf2bc78470 <col:11> 'String' lvalue Var 0x55cf2bc77f48 'name' 'String'
|   `-ReturnStmt 0x55cf2bc78580 <line:533:2, col:9>
|     `-ImplicitCastExpr 0x55cf2bc78568 <col:9> 'const char *' <LValueToRValue>
|       `-DeclRefExpr 0x55cf2bc78548 <col:9> 'const char *' lvalue Var 0x55cf2bc780c0 'x' 'const char *'
|-CXXMethodDecl 0x55cf2bc75568 <line:543:5, line:550:5> line:543:19 used make_landmark_anno 'String (const String &)' static
| |-ParmVarDecl 0x55cf2bc754d8 <col:38, col:52> col:52 used x 'const String &'
| `-CompoundStmt 0x55cf2bc78b98 <col:55, line:550:5>
|   `-IfStmt 0x55cf2bc78b70 <line:544:2, line:549:20> has_else
|     |-BinaryOperator 0x55cf2bc787d0 <line:544:6, col:19> 'bool' '&&'
|     | |-ImplicitCastExpr 0x55cf2bc787b8 <col:6> 'bool' <MemberPointerToBoolean>
|     | | `-ImplicitCastExpr 0x55cf2bc787a0 <col:6> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|     | |   `-CXXMemberCallExpr 0x55cf2bc78780 <col:6> 'String::unspecified_bool_type':'int (String::*)() const'
|     | |     `-MemberExpr 0x55cf2bc78750 <col:6> '<bound member function type>' .operator int (String::*)() const 0x55cf2ba8d058
|     | |       `-DeclRefExpr 0x55cf2bc785f0 <col:6> 'const String' lvalue ParmVar 0x55cf2bc754d8 'x' 'const String &'
|     | `-BinaryOperator 0x55cf2bc78730 <col:11, col:19> 'bool' '=='
|     |   |-ImplicitCastExpr 0x55cf2bc78700 <col:11, col:14> 'int' <IntegralCast>
|     |   | `-CXXOperatorCallExpr 0x55cf2bc786b0 <col:11, col:14> 'char'
|     |   |   |-ImplicitCastExpr 0x55cf2bc78698 <col:12, col:14> 'char (*)(int) const' <FunctionToPointerDecay>
|     |   |   | `-DeclRefExpr 0x55cf2bc78650 <col:12, col:14> 'char (int) const' lvalue CXXMethod 0x55cf2baa66c0 'operator[]' 'char (int) const'
|     |   |   |-DeclRefExpr 0x55cf2bc78610 <col:11> 'const String' lvalue ParmVar 0x55cf2bc754d8 'x' 'const String &'
|     |   |   `-IntegerLiteral 0x55cf2bc78630 <col:13> 'int' 0
|     |   `-ImplicitCastExpr 0x55cf2bc78718 <col:19> 'int' <IntegralCast>
|     |     `-CharacterLiteral 0x55cf2bc786e8 <col:19> 'char' 123
|     |-ReturnStmt 0x55cf2bc78840 <line:545:6, col:13>
|     | `-CXXConstructExpr 0x55cf2bc78810 <col:13> 'String' 'void (const String &)'
|     |   `-DeclRefExpr 0x55cf2bc787f0 <col:13> 'const String' lvalue ParmVar 0x55cf2bc754d8 'x' 'const String &'
|     `-IfStmt 0x55cf2bc78b48 <line:546:7, line:549:20> has_else
|       |-ImplicitCastExpr 0x55cf2bc788d8 <line:546:11> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x55cf2bc788c0 <col:11> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x55cf2bc788a0 <col:11> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x55cf2bc78870 <col:11> '<bound member function type>' .operator int (String::*)() const 0x55cf2ba8d058
|       |       `-DeclRefExpr 0x55cf2bc78850 <col:11> 'const String' lvalue ParmVar 0x55cf2bc754d8 'x' 'const String &'
|       |-ReturnStmt 0x55cf2bc78a60 <line:547:6, col:29>
|       | `-ExprWithCleanups 0x55cf2bc78a48 <col:13, col:29> 'String'
|       |   `-CXXConstructExpr 0x55cf2bc78a18 <col:13, col:29> 'String' 'void (String &&)' elidable
|       |     `-MaterializeTemporaryExpr 0x55cf2bc78a00 <col:13, col:29> 'String' xvalue
|       |       `-CXXBindTemporaryExpr 0x55cf2bc789e0 <col:13, col:29> 'String' (CXXTemporary 0x55cf2bc789e0)
|       |         `-CallExpr 0x55cf2bc78990 <col:13, col:29> 'String'
|       |           |-ImplicitCastExpr 0x55cf2bc78978 <col:13> 'String (*)(const char *, const String &)' <FunctionToPointerDecay>
|       |           | `-DeclRefExpr 0x55cf2bc788f0 <col:13> 'String (const char *, const String &)' lvalue CXXMethod 0x55cf2bc74d10 'make_anno' 'String (const char *, const String &)'
|       |           |-ImplicitCastExpr 0x55cf2bc789c0 <col:23> 'const char *' <ArrayToPointerDecay>
|       |           | `-StringLiteral 0x55cf2bc78910 <col:23> 'const char [2]' lvalue "l"
|       |           `-DeclRefExpr 0x55cf2bc78930 <col:28> 'const String' lvalue ParmVar 0x55cf2bc754d8 'x' 'const String &'
|       `-ReturnStmt 0x55cf2bc78b38 <line:549:6, col:20>
|         `-ExprWithCleanups 0x55cf2bc78b20 <col:13, col:20> 'String'
|           `-CXXConstructExpr 0x55cf2bc78af0 <col:13, col:20> 'String' 'void (String &&)' elidable
|             `-MaterializeTemporaryExpr 0x55cf2bc78ad8 <col:13, col:20> 'String' xvalue
|               `-CXXBindTemporaryExpr 0x55cf2bc78ab8 <col:13, col:20> 'String' (CXXTemporary 0x55cf2bc78ab8)
|                 `-CXXTemporaryObjectExpr 0x55cf2bc78a80 <col:13, col:20> 'String' 'void ()'
|-CXXMethodDecl 0x55cf2bc75730 <line:559:5, col:76> col:19 clean_landmark 'String (const String &, bool)' static
| |-ParmVarDecl 0x55cf2bc75620 <col:34, col:48> col:48 landmark 'const String &'
| `-ParmVarDecl 0x55cf2bc75698 <col:58, col:71> col:63 colon 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55cf2bc76e68 <col:71> 'bool' false
|-CXXRecordDecl 0x55cf2bc757e0 <line:563:5, col:12> col:12 referenced struct Conversion
|-TypedefDecl 0x55cf2bc75ad8 <line:564:5, col:60> col:22 referenced ConversionFunction 'String (*)(int, __va_list_tag *)'
| `-PointerType 0x55cf2bc75a70 'String (*)(int, __va_list_tag *)'
|   `-ParenType 0x55cf2bc75a10 'String (int, __va_list_tag *)' sugar
|     `-FunctionProtoType 0x55cf2bc759d0 'String (int, __va_list_tag *)' cdecl
|       |-RecordType 0x55cf2ba898f0 'String'
|       | `-CXXRecord 0x55cf2ba89860 'String'
|       |-BuiltinType 0x55cf2b759370 'int'
|       `-DecayedType 0x55cf2bc430d0 '__va_list_tag *' sugar
|         |-TypedefType 0x55cf2bc430a0 'va_list' sugar
|         | |-Typedef 0x55cf2b97a690 'va_list'
|         | `-TypedefType 0x55cf2b97a640 '__gnuc_va_list' sugar
|         |   |-Typedef 0x55cf2b8b2268 '__gnuc_va_list'
|         |   `-TypedefType 0x55cf2b8b21d0 '__builtin_va_list' sugar
|         |     |-Typedef 0x55cf2b79abd8 '__builtin_va_list'
|         |     `-ConstantArrayType 0x55cf2b79ab80 '__va_list_tag [1]' 1 
|         |       `-RecordType 0x55cf2b75a0c0 '__va_list_tag'
|         |         `-CXXRecord 0x55cf2b75a028 '__va_list_tag'
|         `-PointerType 0x55cf2b97ff30 '__va_list_tag *'
|           `-RecordType 0x55cf2b75a0c0 '__va_list_tag'
|             `-CXXRecord 0x55cf2b75a028 '__va_list_tag'
|-EnumDecl 0x55cf2bc75b30 <line:565:5, line:576:5> line:565:10 ConversionFlags
| |-EnumConstantDecl 0x55cf2bc75c30 <line:566:2, col:16> col:2 cf_zero_pad 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55cf2bc76190 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf2bc75c10 <col:16> 'int' Int: 1
| |     `-IntegerLiteral 0x55cf2bc75bf0 <col:16> 'int' 1
| |-EnumConstantDecl 0x55cf2bc75cc0 <line:567:2, col:21> col:2 cf_plus_positive 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55cf2bc761a8 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf2bc75ca0 <col:21> 'int' Int: 2
| |     `-IntegerLiteral 0x55cf2bc75c80 <col:21> 'int' 2
| |-EnumConstantDecl 0x55cf2bc75d50 <line:568:2, col:22> col:2 cf_space_positive 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55cf2bc761c0 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf2bc75d30 <col:22> 'int' Int: 4
| |     `-IntegerLiteral 0x55cf2bc75d10 <col:22> 'int' 4
| |-EnumConstantDecl 0x55cf2bc75de0 <line:569:2, col:17> col:2 cf_left_just 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55cf2bc761d8 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf2bc75dc0 <col:17> 'int' Int: 8
| |     `-IntegerLiteral 0x55cf2bc75da0 <col:17> 'int' 8
| |-EnumConstantDecl 0x55cf2bc75e70 <line:570:2, col:22> col:2 cf_alternate_form 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55cf2bc761f0 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf2bc75e50 <col:22> 'int' Int: 16
| |     `-IntegerLiteral 0x55cf2bc75e30 <col:22> 'int' 16
| |-EnumConstantDecl 0x55cf2bc75f00 <line:571:2, col:19> col:2 cf_singlequote 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55cf2bc76208 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf2bc75ee0 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x55cf2bc75ec0 <col:19> 'int' 32
| |-EnumConstantDecl 0x55cf2bc75f90 <line:572:2, col:17> col:2 cf_uppercase 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55cf2bc76220 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf2bc75f70 <col:17> 'int' Int: 64
| |     `-IntegerLiteral 0x55cf2bc75f50 <col:17> 'int' 64
| |-EnumConstantDecl 0x55cf2bc76020 <line:573:2, col:14> col:2 cf_signed 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55cf2bc76238 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf2bc76000 <col:14> 'int' Int: 128
| |     `-IntegerLiteral 0x55cf2bc75fe0 <col:14> 'int' 128
| |-EnumConstantDecl 0x55cf2bc760b0 <line:574:2, col:16> col:2 cf_negative 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55cf2bc76250 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf2bc76090 <col:16> 'int' Int: 256
| |     `-IntegerLiteral 0x55cf2bc76070 <col:16> 'int' 256
| `-EnumConstantDecl 0x55cf2bc76140 <line:575:2, col:12> col:2 cf_utf8 'ErrorHandler::ConversionFlags'
|   `-ImplicitCastExpr 0x55cf2bc76268 <col:12> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55cf2bc76120 <col:12> 'int' Int: 1024
|       `-IntegerLiteral 0x55cf2bc76100 <col:12> 'int' 1024
|-CXXMethodDecl 0x55cf2bc76478 <line:577:5, col:82> col:24 add_conversion 'ErrorHandler::Conversion *(const String &, ErrorHandler::ConversionFunction)' static
| |-ParmVarDecl 0x55cf2bc76290 <col:39, col:53> col:53 name 'const String &'
| `-ParmVarDecl 0x55cf2bc76330 <col:59, col:78> col:78 func 'ErrorHandler::ConversionFunction':'String (*)(int, __va_list_tag *)'
|-CXXMethodDecl 0x55cf2bc76600 <line:578:5, col:56> col:16 remove_conversion 'int (ErrorHandler::Conversion *)' static
| `-ParmVarDecl 0x55cf2bc76538 <col:34, col:46> col:46 conversion 'ErrorHandler::Conversion *'
|-AccessSpecDecl 0x55cf2bc766a8 <line:580:3, col:10> col:3 private
|-FieldDecl 0x55cf2bc766e8 <line:582:5, col:9> col:9 referenced _nerrors 'int'
|-VarDecl 0x55cf2bc76748 <line:584:5, col:26> col:26 used the_default_handler 'ErrorHandler *' static
|-VarDecl 0x55cf2bc767c0 <line:585:5, col:26> col:26 used the_silent_handler 'ErrorHandler *' static
|-CXXMethodDecl 0x55cf2bc76bc0 <line:587:5, line:590:14> line:587:24 used skip_anno 'const char *(const String &, const char *, const char *, String *, String *, bool)' static
| |-ParmVarDecl 0x55cf2bc76838 <col:34, col:48> col:48 str 'const String &'
| |-ParmVarDecl 0x55cf2bc768b8 <line:588:6, col:18> col:18 begin 'const char *'
| |-ParmVarDecl 0x55cf2bc76938 <col:25, col:37> col:37 end 'const char *'
| |-ParmVarDecl 0x55cf2bc769b0 <line:589:6, col:14> col:14 name_result 'String *'
| |-ParmVarDecl 0x55cf2bc76a28 <col:27, col:35> col:35 value_result 'String *'
| `-ParmVarDecl 0x55cf2bc76aa0 <line:590:6, col:11> col:11 raw 'bool'
|-CXXMethodDecl 0x55cf2bc76ce8 <line:90:7> col:7 implicit operator= 'ErrorHandler &(const ErrorHandler &)' inline default noexcept-unevaluated 0x55cf2bc76ce8
| `-ParmVarDecl 0x55cf2bc76df8 <col:7> col:7 'const ErrorHandler &'
`-CXXConstructorDecl 0x55cf2bc78ef8 <col:7> col:7 implicit constexpr ErrorHandler 'void (const ErrorHandler &)' inline default noexcept-unevaluated 0x55cf2bc78ef8
  `-ParmVarDecl 0x55cf2bc79008 <col:7> col:7 'const ErrorHandler &'

Layout: <CGRecordLayout
  LLVMType:%class.ErrorHandler = type <{ i32 (...)**, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.ErrorHandler.base = type <{ i32 (...)**, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55cf2bcb97e0 <../dummy_inc/click/handler.hh:290:5, line:293:5> line:290:5 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x55cf2bcb9930 <line:291:2, col:18> col:18 h 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
|-FieldDecl 0x55cf2bcb99b0 <line:292:2, col:22> col:22 referenced r 'ReadHandlerCallback':'String (*)(Element *, void *)'
|-CXXConstructorDecl 0x55cf2bcba7a8 <line:290:5> col:5 implicit constexpr  'void (const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &)' inline default trivial noexcept-unevaluated 0x55cf2bcba7a8
| `-ParmVarDecl 0x55cf2bcba8b8 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &'
|-CXXConstructorDecl 0x55cf2bcba958 <col:5> col:5 implicit constexpr  'void (Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&)' inline default trivial noexcept-unevaluated 0x55cf2bcba958
| `-ParmVarDecl 0x55cf2bcbaa68 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&'
|-CXXDestructorDecl 0x55cf2bcbaad8 <col:5> col:5 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x55cf2bcbaad8
|-CXXMethodDecl 0x55cf2bcbb3a8 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &(const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &)' inline default trivial noexcept-unevaluated 0x55cf2bcbb3a8
| `-ParmVarDecl 0x55cf2bcbb4b8 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &'
|-CXXMethodDecl 0x55cf2bcbb528 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &(Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&)' inline default trivial noexcept-unevaluated 0x55cf2bcbb528
| `-ParmVarDecl 0x55cf2bcbb638 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&'
`-CXXConstructorDecl 0x55cf2be67d30 <col:5> col:5 implicit used  'void () noexcept' inline default trivial
  `-CompoundStmt 0x55cf2be67e10 <col:5>

Layout: <CGRecordLayout
  LLVMType:%union.anon = type { i32 (i32, %class.String*, %class.Element*, %class.Handler*, %class.ErrorHandler*)* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55cf2bcb9ae0 <../dummy_inc/click/handler.hh:294:5, line:297:5> line:294:5 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x55cf2bcb9c08 <line:295:2, col:18> col:18 h 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
|-FieldDecl 0x55cf2bcb9c90 <line:296:2, col:23> col:23 referenced w 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
|-CXXConstructorDecl 0x55cf2bcbac08 <line:294:5> col:5 implicit constexpr  'void (const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &)' inline default trivial noexcept-unevaluated 0x55cf2bcbac08
| `-ParmVarDecl 0x55cf2bcbad18 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &'
|-CXXConstructorDecl 0x55cf2bcbadb8 <col:5> col:5 implicit constexpr  'void (Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&)' inline default trivial noexcept-unevaluated 0x55cf2bcbadb8
| `-ParmVarDecl 0x55cf2bcbaec8 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&'
|-CXXDestructorDecl 0x55cf2bcbaf38 <col:5> col:5 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x55cf2bcbaf38
|-CXXMethodDecl 0x55cf2bcbb6d8 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &(const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &)' inline default trivial noexcept-unevaluated 0x55cf2bcbb6d8
| `-ParmVarDecl 0x55cf2bcbb7e8 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &'
|-CXXMethodDecl 0x55cf2bcbb858 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &(Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&)' inline default trivial noexcept-unevaluated 0x55cf2bcbb858
| `-ParmVarDecl 0x55cf2bcbb968 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&'
`-CXXConstructorDecl 0x55cf2be67e70 <col:5> col:5 implicit used  'void () noexcept' inline default trivial
  `-CompoundStmt 0x55cf2be67f50 <col:5>

Layout: <CGRecordLayout
  LLVMType:%union.anon.11 = type { i32 (i32, %class.String*, %class.Element*, %class.Handler*, %class.ErrorHandler*)* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55cf2bcb5168 prev 0x55cf2bcb4600 <../dummy_inc/click/handler.hh:19:1, line:313:1> line:19:7 class Handler definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x55cf2bcb5260 <col:1, col:7> col:7 implicit referenced class Handler
|-AccessSpecDecl 0x55cf2bcb52f0 <col:17, col:23> col:17 public
|-EnumDecl 0x55cf2bcb5318 <line:21:5, line:59:5> line:21:10 Flags
| |-EnumConstantDecl 0x55cf2bcb5420 <line:22:2, col:11> col:2 referenced f_read 'Handler::Flags'
| | `-ImplicitCastExpr 0x55cf2bcb6170 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf2bcb5400 <col:11> 'int' Int: 1
| |     `-IntegerLiteral 0x55cf2bcb53e0 <col:11> 'int' 1
| |-EnumConstantDecl 0x55cf2bcb54b0 <line:23:2, col:12> col:2 referenced f_write 'Handler::Flags'
| | `-ImplicitCastExpr 0x55cf2bcb6188 <col:12> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf2bcb5490 <col:12> 'int' Int: 2
| |     `-IntegerLiteral 0x55cf2bcb5470 <col:12> 'int' 2
| |-EnumConstantDecl 0x55cf2bcb5540 <line:24:2, col:17> col:2 referenced f_read_param 'Handler::Flags'
| | `-ImplicitCastExpr 0x55cf2bcb61a0 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf2bcb5520 <col:17> 'int' Int: 4
| |     `-IntegerLiteral 0x55cf2bcb5500 <col:17> 'int' 4
| |-EnumConstantDecl 0x55cf2bcb55d0 <line:25:2, col:16> col:2 referenced f_exclusive 'Handler::Flags'
| | `-ImplicitCastExpr 0x55cf2bcb61b8 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf2bcb55b0 <col:16> 'int' Int: 0
| |     `-IntegerLiteral 0x55cf2bcb5590 <col:16> 'int' 0
| |-EnumConstantDecl 0x55cf2bcb5660 <line:28:2, col:19> col:2 referenced f_nonexclusive 'Handler::Flags'
| | `-ImplicitCastExpr 0x55cf2bcb61d0 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf2bcb5640 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x55cf2bcb5620 <col:19> 'int' 32
| |-EnumConstantDecl 0x55cf2bcb56f0 <line:31:2, col:10> col:2 referenced f_raw 'Handler::Flags'
| | `-ImplicitCastExpr 0x55cf2bcb61e8 <col:10> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf2bcb56d0 <col:10> 'int' Int: 64
| |     `-IntegerLiteral 0x55cf2bcb56b0 <col:10> 'int' 64
| |-EnumConstantDecl 0x55cf2bcb5780 <line:32:2, col:19> col:2 referenced f_read_private 'Handler::Flags'
| | `-ImplicitCastExpr 0x55cf2bcb6200 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf2bcb5760 <col:19> 'int' Int: 128
| |     `-IntegerLiteral 0x55cf2bcb5740 <col:19> 'int' 128
| |-EnumConstantDecl 0x55cf2bcb5810 <line:34:2, col:20> col:2 referenced f_write_private 'Handler::Flags'
| | `-ImplicitCastExpr 0x55cf2bcb6218 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf2bcb57f0 <col:20> 'int' Int: 256
| |     `-IntegerLiteral 0x55cf2bcb57d0 <col:20> 'int' 256
| |-EnumConstantDecl 0x55cf2bcb58a0 <line:36:2, col:17> col:2 referenced f_deprecated 'Handler::Flags'
| | `-ImplicitCastExpr 0x55cf2bcb6230 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf2bcb5880 <col:17> 'int' Int: 512
| |     `-IntegerLiteral 0x55cf2bcb5860 <col:17> 'int' 512
| |-EnumConstantDecl 0x55cf2bcb5930 <line:38:2, col:15> col:2 referenced f_uncommon 'Handler::Flags'
| | `-ImplicitCastExpr 0x55cf2bcb6248 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf2bcb5910 <col:15> 'int' Int: 1024
| |     `-IntegerLiteral 0x55cf2bcb58f0 <col:15> 'int' 1024
| |-EnumConstantDecl 0x55cf2bcb59c0 <line:40:2, col:11> col:2 referenced f_calm 'Handler::Flags'
| | `-ImplicitCastExpr 0x55cf2bcb6260 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf2bcb59a0 <col:11> 'int' Int: 2048
| |     `-IntegerLiteral 0x55cf2bcb5980 <col:11> 'int' 2048
| |-EnumConstantDecl 0x55cf2bcb5a50 <line:41:2, col:16> col:2 referenced f_expensive 'Handler::Flags'
| | `-ImplicitCastExpr 0x55cf2bcb6278 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf2bcb5a30 <col:16> 'int' Int: 4096
| |     `-IntegerLiteral 0x55cf2bcb5a10 <col:16> 'int' 4096
| |-EnumConstantDecl 0x55cf2bcb5ae0 <line:42:2, col:13> col:2 referenced f_button 'Handler::Flags'
| | `-ImplicitCastExpr 0x55cf2bcb6290 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf2bcb5ac0 <col:13> 'int' Int: 8192
| |     `-IntegerLiteral 0x55cf2bcb5aa0 <col:13> 'int' 8192
| |-EnumConstantDecl 0x55cf2bcb5b70 <line:43:2, col:15> col:2 referenced f_checkbox 'Handler::Flags'
| | `-ImplicitCastExpr 0x55cf2bcb62a8 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf2bcb5b50 <col:15> 'int' Int: 16384
| |     `-IntegerLiteral 0x55cf2bcb5b30 <col:15> 'int' 16384
| |-EnumConstantDecl 0x55cf2bcb5c40 <line:45:2, col:20> col:2 referenced f_driver0 'Handler::Flags'
| | `-ConstantExpr 0x55cf2bcb5c20 <col:14, col:20> 'unsigned int' Int: 67108864
| |   `-BinaryOperator 0x55cf2bcb5c00 <col:14, col:20> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x55cf2bcb5bc0 <col:14> 'unsigned int' 1
| |     `-IntegerLiteral 0x55cf2bcb5be0 <col:20> 'int' 26
| |-EnumConstantDecl 0x55cf2bcb5d10 <line:46:9, col:27> col:9 referenced f_driver1 'Handler::Flags'
| | `-ConstantExpr 0x55cf2bcb5cf0 <col:21, col:27> 'unsigned int' Int: 134217728
| |   `-BinaryOperator 0x55cf2bcb5cd0 <col:21, col:27> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x55cf2bcb5c90 <col:21> 'unsigned int' 1
| |     `-IntegerLiteral 0x55cf2bcb5cb0 <col:27> 'int' 27
| |-EnumConstantDecl 0x55cf2bcb5da0 <line:48:2, col:17> col:2 referenced f_user_shift 'Handler::Flags'
| | `-ImplicitCastExpr 0x55cf2bcb62c0 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf2bcb5d80 <col:17> 'int' Int: 28
| |     `-IntegerLiteral 0x55cf2bcb5d60 <col:17> 'int' 28
| |-EnumConstantDecl 0x55cf2bcb5e70 <line:49:2, col:18> col:2 referenced f_user0 'Handler::Flags'
| | `-ConstantExpr 0x55cf2bcb5e50 <col:12, col:18> 'unsigned int' Int: 268435456
| |   `-BinaryOperator 0x55cf2bcb5e30 <col:12, col:18> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x55cf2bcb5df0 <col:12> 'unsigned int' 1
| |     `-DeclRefExpr 0x55cf2bcb5e10 <col:18> 'int' EnumConstant 0x55cf2bcb5da0 'f_user_shift' 'Handler::Flags'
| |-EnumConstantDecl 0x55cf2bcb5f00 <line:54:2, col:25> col:2 referenced f_read_comprehensive 'Handler::Flags'
| | `-ImplicitCastExpr 0x55cf2bcb62d8 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf2bcb5ee0 <col:25> 'int' Int: 8
| |     `-IntegerLiteral 0x55cf2bcb5ec0 <col:25> 'int' 8
| |-EnumConstantDecl 0x55cf2bcb5f90 <line:55:2, col:26> col:2 referenced f_write_comprehensive 'Handler::Flags'
| | `-ImplicitCastExpr 0x55cf2bcb62f0 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf2bcb5f70 <col:26> 'int' Int: 16
| |     `-IntegerLiteral 0x55cf2bcb5f50 <col:26> 'int' 16
| `-EnumConstantDecl 0x55cf2bcb6120 <line:56:2, col:71> col:2 referenced f_special 'Handler::Flags'
|   `-ImplicitCastExpr 0x55cf2bcb6308 <col:14, col:71> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55cf2bcb6100 <col:14, col:71> 'int' Int: 31
|       `-BinaryOperator 0x55cf2bcb60e0 <col:14, col:71> 'int' '|'
|         |-BinaryOperator 0x55cf2bcb60a0 <col:14, col:48> 'int' '|'
|         | |-BinaryOperator 0x55cf2bcb6060 <col:14, col:33> 'int' '|'
|         | | |-BinaryOperator 0x55cf2bcb6020 <col:14, col:23> 'int' '|'
|         | | | |-DeclRefExpr 0x55cf2bcb5fe0 <col:14> 'int' EnumConstant 0x55cf2bcb5420 'f_read' 'Handler::Flags'
|         | | | `-DeclRefExpr 0x55cf2bcb6000 <col:23> 'int' EnumConstant 0x55cf2bcb54b0 'f_write' 'Handler::Flags'
|         | | `-DeclRefExpr 0x55cf2bcb6040 <col:33> 'int' EnumConstant 0x55cf2bcb5540 'f_read_param' 'Handler::Flags'
|         | `-DeclRefExpr 0x55cf2bcb6080 <col:48> 'int' EnumConstant 0x55cf2bcb5f00 'f_read_comprehensive' 'Handler::Flags'
|         `-DeclRefExpr 0x55cf2bcb60c0 <col:71> 'int' EnumConstant 0x55cf2bcb5f90 'f_write_comprehensive' 'Handler::Flags'
|-CXXMethodDecl 0x55cf2bcb6368 <line:62:5, line:64:5> line:62:26 name 'const String &() const' inline
| `-CompoundStmt 0x55cf2bcbbd88 <col:39, line:64:5>
|   `-ReturnStmt 0x55cf2bcbbd78 <line:63:2, col:9>
|     `-MemberExpr 0x55cf2bcbbd48 <col:9> 'const String' lvalue ->_name 0x55cf2bcb9790
|       `-CXXThisExpr 0x55cf2bcbbd38 <col:9> 'const Handler *' implicit this
|-CXXMethodDecl 0x55cf2bcb6428 <line:69:5, line:71:5> line:69:21 flags 'uint32_t () const' inline
| `-CompoundStmt 0x55cf2bcbbe08 <col:35, line:71:5>
|   `-ReturnStmt 0x55cf2bcbbdf8 <line:70:2, col:9>
|     `-ImplicitCastExpr 0x55cf2bcbbde0 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x55cf2bcbbdb0 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55cf2bcb9ea0
|         `-CXXThisExpr 0x55cf2bcbbda0 <col:9> 'const Handler *' implicit this
|-CXXMethodDecl 0x55cf2bcb6578 <line:75:5, line:77:5> line:75:18 user_data 'void *(int) const' inline
| |-ParmVarDecl 0x55cf2bcb64e0 <col:28, col:32> col:32 used op 'int'
| `-CompoundStmt 0x55cf2bcbbf88 <col:42, line:77:5>
|   `-ReturnStmt 0x55cf2bcbbf78 <line:76:2, col:44>
|     `-ImplicitCastExpr 0x55cf2bcbbf60 <col:9, col:44> 'void *' <LValueToRValue>
|       `-ConditionalOperator 0x55cf2bcbbf30 <col:9, col:44> 'void *const' lvalue
|         |-BinaryOperator 0x55cf2bcbbe90 <col:9, col:15> 'bool' '=='
|         | |-ImplicitCastExpr 0x55cf2bcbbe60 <col:9> 'int' <LValueToRValue>
|         | | `-DeclRefExpr 0x55cf2bcbbe20 <col:9> 'int' lvalue ParmVar 0x55cf2bcb64e0 'op' 'int'
|         | `-ImplicitCastExpr 0x55cf2bcbbe78 <col:15> 'int' <IntegralCast>
|         |   `-DeclRefExpr 0x55cf2bcbbe40 <col:15> 'Handler::Flags' EnumConstant 0x55cf2bcb54b0 'f_write' 'Handler::Flags'
|         |-MemberExpr 0x55cf2bcbbec0 <col:25> 'void *const' lvalue ->_write_user_data 0x55cf2bcb9e40
|         | `-CXXThisExpr 0x55cf2bcbbeb0 <col:25> 'const Handler *' implicit this
|         `-MemberExpr 0x55cf2bcbbf00 <col:44> 'void *const' lvalue ->_read_user_data 0x55cf2bcb9dd8
|           `-CXXThisExpr 0x55cf2bcbbef0 <col:44> 'const Handler *' implicit this
|-CXXMethodDecl 0x55cf2bcb6648 <line:80:5, line:82:5> line:80:18 read_user_data 'void *() const' inline
| `-CompoundStmt 0x55cf2bcbc008 <col:41, line:82:5>
|   `-ReturnStmt 0x55cf2bcbbff8 <line:81:2, col:9>
|     `-ImplicitCastExpr 0x55cf2bcbbfe0 <col:9> 'void *' <LValueToRValue>
|       `-MemberExpr 0x55cf2bcbbfb0 <col:9> 'void *const' lvalue ->_read_user_data 0x55cf2bcb9dd8
|         `-CXXThisExpr 0x55cf2bcbbfa0 <col:9> 'const Handler *' implicit this
|-CXXMethodDecl 0x55cf2bcb6710 <line:85:5, line:87:5> line:85:18 write_user_data 'void *() const' inline
| `-CompoundStmt 0x55cf2bcbc088 <col:42, line:87:5>
|   `-ReturnStmt 0x55cf2bcbc078 <line:86:2, col:9>
|     `-ImplicitCastExpr 0x55cf2bcbc060 <col:9> 'void *' <LValueToRValue>
|       `-MemberExpr 0x55cf2bcbc030 <col:9> 'void *const' lvalue ->_write_user_data 0x55cf2bcb9e40
|         `-CXXThisExpr 0x55cf2bcbc020 <col:9> 'const Handler *' implicit this
|-CXXMethodDecl 0x55cf2bcb67d8 <line:90:5, col:63> col:18 user_data1 'void *() const' inline
| `-DeprecatedAttr 0x55cf2bcb6878 <col:52> "" ""
|-CXXMethodDecl 0x55cf2bcb6910 <line:91:5, col:63> col:18 user_data2 'void *() const' inline
| `-DeprecatedAttr 0x55cf2bcb69b0 <col:52> "" ""
|-CXXMethodDecl 0x55cf2bcb6a40 <line:96:5, line:98:5> line:96:17 readable 'bool () const' inline
| `-CompoundStmt 0x55cf2bcbc178 <col:34, line:98:5>
|   `-ReturnStmt 0x55cf2bcbc168 <line:97:2, col:18>
|     `-ImplicitCastExpr 0x55cf2bcbc150 <col:9, col:18> 'bool' <IntegralToBoolean>
|       `-BinaryOperator 0x55cf2bcbc130 <col:9, col:18> 'unsigned int' '&'
|         |-ImplicitCastExpr 0x55cf2bcbc100 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-MemberExpr 0x55cf2bcbc0b0 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55cf2bcb9ea0
|         |   `-CXXThisExpr 0x55cf2bcbc0a0 <col:9> 'const Handler *' implicit this
|         `-ImplicitCastExpr 0x55cf2bcbc118 <col:18> 'unsigned int' <IntegralCast>
|           `-DeclRefExpr 0x55cf2bcbc0e0 <col:18> 'Handler::Flags' EnumConstant 0x55cf2bcb5420 'f_read' 'Handler::Flags'
|-CXXMethodDecl 0x55cf2bcb6b00 <line:102:5, line:104:5> line:102:17 read_param 'bool () const' inline
| `-CompoundStmt 0x55cf2bcbc268 <col:36, line:104:5>
|   `-ReturnStmt 0x55cf2bcbc258 <line:103:2, col:18>
|     `-ImplicitCastExpr 0x55cf2bcbc240 <col:9, col:18> 'bool' <IntegralToBoolean>
|       `-BinaryOperator 0x55cf2bcbc220 <col:9, col:18> 'unsigned int' '&'
|         |-ImplicitCastExpr 0x55cf2bcbc1f0 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-MemberExpr 0x55cf2bcbc1a0 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55cf2bcb9ea0
|         |   `-CXXThisExpr 0x55cf2bcbc190 <col:9> 'const Handler *' implicit this
|         `-ImplicitCastExpr 0x55cf2bcbc208 <col:18> 'unsigned int' <IntegralCast>
|           `-DeclRefExpr 0x55cf2bcbc1d0 <col:18> 'Handler::Flags' EnumConstant 0x55cf2bcb5540 'f_read_param' 'Handler::Flags'
|-CXXMethodDecl 0x55cf2bcb6bc0 <line:111:5, line:113:5> line:111:17 used read_visible 'bool () const' inline
| `-CompoundStmt 0x55cf2bcbc448 <col:38, line:113:5>
|   `-ReturnStmt 0x55cf2bcbc438 <line:112:2, col:49>
|     `-BinaryOperator 0x55cf2bcbc418 <col:9, col:49> 'bool' '=='
|       |-ParenExpr 0x55cf2bcbc3c0 <col:9, col:44> 'unsigned int'
|       | `-BinaryOperator 0x55cf2bcbc3a0 <col:10, col:43> 'unsigned int' '&'
|       |   |-ImplicitCastExpr 0x55cf2bcbc370 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-MemberExpr 0x55cf2bcbc290 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55cf2bcb9ea0
|       |   |   `-CXXThisExpr 0x55cf2bcbc280 <col:10> 'const Handler *' implicit this
|       |   `-ImplicitCastExpr 0x55cf2bcbc388 <col:19, col:43> 'unsigned int' <IntegralCast>
|       |     `-ParenExpr 0x55cf2bcbc350 <col:19, col:43> 'int'
|       |       `-BinaryOperator 0x55cf2bcbc330 <col:20, col:29> 'int' '|'
|       |         |-ImplicitCastExpr 0x55cf2bcbc300 <col:20> 'int' <IntegralCast>
|       |         | `-DeclRefExpr 0x55cf2bcbc2c0 <col:20> 'Handler::Flags' EnumConstant 0x55cf2bcb5420 'f_read' 'Handler::Flags'
|       |         `-ImplicitCastExpr 0x55cf2bcbc318 <col:29> 'int' <IntegralCast>
|       |           `-DeclRefExpr 0x55cf2bcbc2e0 <col:29> 'Handler::Flags' EnumConstant 0x55cf2bcb5780 'f_read_private' 'Handler::Flags'
|       `-ImplicitCastExpr 0x55cf2bcbc400 <col:49> 'unsigned int' <IntegralCast>
|         `-DeclRefExpr 0x55cf2bcbc3e0 <col:49> 'Handler::Flags' EnumConstant 0x55cf2bcb5420 'f_read' 'Handler::Flags'
|-CXXMethodDecl 0x55cf2bcb6c80 <line:116:5, line:118:5> line:116:17 writable 'bool () const' inline
| `-CompoundStmt 0x55cf2bcbc538 <col:34, line:118:5>
|   `-ReturnStmt 0x55cf2bcbc528 <line:117:2, col:18>
|     `-ImplicitCastExpr 0x55cf2bcbc510 <col:9, col:18> 'bool' <IntegralToBoolean>
|       `-BinaryOperator 0x55cf2bcbc4f0 <col:9, col:18> 'unsigned int' '&'
|         |-ImplicitCastExpr 0x55cf2bcbc4c0 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-MemberExpr 0x55cf2bcbc470 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55cf2bcb9ea0
|         |   `-CXXThisExpr 0x55cf2bcbc460 <col:9> 'const Handler *' implicit this
|         `-ImplicitCastExpr 0x55cf2bcbc4d8 <col:18> 'unsigned int' <IntegralCast>
|           `-DeclRefExpr 0x55cf2bcbc4a0 <col:18> 'Handler::Flags' EnumConstant 0x55cf2bcb54b0 'f_write' 'Handler::Flags'
|-CXXMethodDecl 0x55cf2bcb6d40 <line:125:5, line:127:5> line:125:17 used write_visible 'bool () const' inline
| `-CompoundStmt 0x55cf2bcbc718 <col:39, line:127:5>
|   `-ReturnStmt 0x55cf2bcbc708 <line:126:2, col:51>
|     `-BinaryOperator 0x55cf2bcbc6e8 <col:9, col:51> 'bool' '=='
|       |-ParenExpr 0x55cf2bcbc690 <col:9, col:46> 'unsigned int'
|       | `-BinaryOperator 0x55cf2bcbc670 <col:10, col:45> 'unsigned int' '&'
|       |   |-ImplicitCastExpr 0x55cf2bcbc640 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-MemberExpr 0x55cf2bcbc560 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55cf2bcb9ea0
|       |   |   `-CXXThisExpr 0x55cf2bcbc550 <col:10> 'const Handler *' implicit this
|       |   `-ImplicitCastExpr 0x55cf2bcbc658 <col:19, col:45> 'unsigned int' <IntegralCast>
|       |     `-ParenExpr 0x55cf2bcbc620 <col:19, col:45> 'int'
|       |       `-BinaryOperator 0x55cf2bcbc600 <col:20, col:30> 'int' '|'
|       |         |-ImplicitCastExpr 0x55cf2bcbc5d0 <col:20> 'int' <IntegralCast>
|       |         | `-DeclRefExpr 0x55cf2bcbc590 <col:20> 'Handler::Flags' EnumConstant 0x55cf2bcb54b0 'f_write' 'Handler::Flags'
|       |         `-ImplicitCastExpr 0x55cf2bcbc5e8 <col:30> 'int' <IntegralCast>
|       |           `-DeclRefExpr 0x55cf2bcbc5b0 <col:30> 'Handler::Flags' EnumConstant 0x55cf2bcb5810 'f_write_private' 'Handler::Flags'
|       `-ImplicitCastExpr 0x55cf2bcbc6d0 <col:51> 'unsigned int' <IntegralCast>
|         `-DeclRefExpr 0x55cf2bcbc6b0 <col:51> 'Handler::Flags' EnumConstant 0x55cf2bcb54b0 'f_write' 'Handler::Flags'
|-CXXMethodDecl 0x55cf2bcb6e00 <line:130:5, line:132:5> line:130:17 visible 'bool () const' inline
| `-CompoundStmt 0x55cf2bcbc820 <col:33, line:132:5>
|   `-ReturnStmt 0x55cf2bcbc810 <line:131:2, col:41>
|     `-BinaryOperator 0x55cf2bcbc7f0 <col:9, col:41> 'bool' '||'
|       |-CXXMemberCallExpr 0x55cf2bcbc770 <col:9, col:22> 'bool'
|       | `-MemberExpr 0x55cf2bcbc740 <col:9> '<bound member function type>' ->read_visible 0x55cf2bcb6bc0
|       |   `-CXXThisExpr 0x55cf2bcbc730 <col:9> 'const Handler *' implicit this
|       `-CXXMemberCallExpr 0x55cf2bcbc7d0 <col:27, col:41> 'bool'
|         `-MemberExpr 0x55cf2bcbc7a0 <col:27> '<bound member function type>' ->write_visible 0x55cf2bcb6d40
|           `-CXXThisExpr 0x55cf2bcbc790 <col:27> 'const Handler *' implicit this
|-CXXMethodDecl 0x55cf2bcb6ec0 <line:136:5, line:138:5> line:136:17 allow_concurrent_handlers 'bool () const' inline
| `-CompoundStmt 0x55cf2bcbc958 <col:51, line:138:5>
|   `-ReturnStmt 0x55cf2bcbc948 <line:137:9, col:40>
|     `-ImplicitCastExpr 0x55cf2bcbc930 <col:16, col:40> 'bool' <IntegralToBoolean>
|       `-ParenExpr 0x55cf2bcbc910 <col:16, col:40> 'unsigned int'
|         `-BinaryOperator 0x55cf2bcbc8c8 <col:17, col:26> 'unsigned int' '&'
|           |-ImplicitCastExpr 0x55cf2bcbc898 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|           | `-MemberExpr 0x55cf2bcbc848 <col:17> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55cf2bcb9ea0
|           |   `-CXXThisExpr 0x55cf2bcbc838 <col:17> 'const Handler *' implicit this
|           `-ImplicitCastExpr 0x55cf2bcbc8b0 <col:26> 'unsigned int' <IntegralCast>
|             `-DeclRefExpr 0x55cf2bcbc878 <col:26> 'Handler::Flags' EnumConstant 0x55cf2bcb5660 'f_nonexclusive' 'Handler::Flags'
|-CXXMethodDecl 0x55cf2bcb6f80 <line:142:5, line:144:5> line:142:17 allow_concurrent_threads 'bool () const' inline
| `-CompoundStmt 0x55cf2bcbca68 <col:50, line:144:5>
|   `-ReturnStmt 0x55cf2bcbca58 <line:143:9, col:40>
|     `-ImplicitCastExpr 0x55cf2bcbca40 <col:16, col:40> 'bool' <IntegralToBoolean>
|       `-ParenExpr 0x55cf2bcbca20 <col:16, col:40> 'unsigned int'
|         `-BinaryOperator 0x55cf2bcbca00 <col:17, col:26> 'unsigned int' '&'
|           |-ImplicitCastExpr 0x55cf2bcbc9d0 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|           | `-MemberExpr 0x55cf2bcbc980 <col:17> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55cf2bcb9ea0
|           |   `-CXXThisExpr 0x55cf2bcbc970 <col:17> 'const Handler *' implicit this
|           `-ImplicitCastExpr 0x55cf2bcbc9e8 <col:26> 'unsigned int' <IntegralCast>
|             `-DeclRefExpr 0x55cf2bcbc9b0 <col:26> 'Handler::Flags' EnumConstant 0x55cf2bcb5660 'f_nonexclusive' 'Handler::Flags'
|-CXXMethodDecl 0x55cf2bcb7040 <line:164:5, line:166:5> line:164:17 raw 'bool () const' inline
| `-CompoundStmt 0x55cf2bcbcb58 <col:29, line:166:5>
|   `-ReturnStmt 0x55cf2bcbcb48 <line:165:2, col:18>
|     `-ImplicitCastExpr 0x55cf2bcbcb30 <col:9, col:18> 'bool' <IntegralToBoolean>
|       `-BinaryOperator 0x55cf2bcbcb10 <col:9, col:18> 'unsigned int' '&'
|         |-ImplicitCastExpr 0x55cf2bcbcae0 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-MemberExpr 0x55cf2bcbca90 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55cf2bcb9ea0
|         |   `-CXXThisExpr 0x55cf2bcbca80 <col:9> 'const Handler *' implicit this
|         `-ImplicitCastExpr 0x55cf2bcbcaf8 <col:18> 'unsigned int' <IntegralCast>
|           `-DeclRefExpr 0x55cf2bcbcac0 <col:18> 'Handler::Flags' EnumConstant 0x55cf2bcb56f0 'f_raw' 'Handler::Flags'
|-CXXMethodDecl 0x55cf2bcb72c8 <line:177:5, col:75> col:12 used call_read 'String (Element *, const String &, ErrorHandler *) const'
| |-ParmVarDecl 0x55cf2bcb70f0 <col:22, col:31> col:31 e 'Element *'
| |-ParmVarDecl 0x55cf2bcb7168 <col:34, col:48> col:48 param 'const String &'
| `-ParmVarDecl 0x55cf2bcb71e0 <col:55, col:69> col:69 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55cf2bcb74d8 <line:186:5, line:188:5> line:186:19 call_read 'String (Element *, ErrorHandler *) const' inline
| |-ParmVarDecl 0x55cf2bcb7390 <col:29, col:38> col:38 used e 'Element *'
| |-ParmVarDecl 0x55cf2bcb7408 <col:41, col:62> col:55 used errh 'ErrorHandler *' cinit
| | `-ImplicitCastExpr 0x55cf2bcbbc70 <col:62> 'ErrorHandler *' <NullToPointer>
| |   `-IntegerLiteral 0x55cf2bcbbc50 <col:62> 'int' 0
| `-CompoundStmt 0x55cf2bcbcdf8 <col:71, line:188:5>
|   `-ReturnStmt 0x55cf2bcbcde8 <line:187:2, col:36>
|     `-ExprWithCleanups 0x55cf2bcbcdd0 <col:9, col:36> 'String'
|       `-CXXConstructExpr 0x55cf2bcbcda0 <col:9, col:36> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x55cf2bcbcd88 <col:9, col:36> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x55cf2bcbcd68 <col:9, col:36> 'String' (CXXTemporary 0x55cf2bcbcd68)
|             `-CXXMemberCallExpr 0x55cf2bcbccc8 <col:9, col:36> 'String'
|               |-MemberExpr 0x55cf2bcbcc98 <col:9> '<bound member function type>' ->call_read 0x55cf2bcb72c8
|               | `-CXXThisExpr 0x55cf2bcbcc88 <col:9> 'const Handler *' implicit this
|               |-ImplicitCastExpr 0x55cf2bcbcd00 <col:19> 'Element *' <LValueToRValue>
|               | `-DeclRefExpr 0x55cf2bcbcbe0 <col:19> 'Element *' lvalue ParmVar 0x55cf2bcb7390 'e' 'Element *'
|               |-MaterializeTemporaryExpr 0x55cf2bcbcd30 <col:22, col:29> 'const String' lvalue
|               | `-ImplicitCastExpr 0x55cf2bcbcd18 <col:22, col:29> 'const String' <NoOp>
|               |   `-CXXBindTemporaryExpr 0x55cf2bcbcc48 <col:22, col:29> 'String' (CXXTemporary 0x55cf2bcbcc48)
|               |     `-CXXTemporaryObjectExpr 0x55cf2bcbcc10 <col:22, col:29> 'String' 'void ()'
|               `-ImplicitCastExpr 0x55cf2bcbcd48 <col:32> 'ErrorHandler *' <LValueToRValue>
|                 `-DeclRefExpr 0x55cf2bcbcc68 <col:32> 'ErrorHandler *' lvalue ParmVar 0x55cf2bcb7408 'errh' 'ErrorHandler *'
|-CXXMethodDecl 0x55cf2bcb7770 <line:198:5, col:73> col:9 call_write 'int (const String &, Element *, ErrorHandler *) const'
| |-ParmVarDecl 0x55cf2bcb7598 <col:20, col:34> col:34 value 'const String &'
| |-ParmVarDecl 0x55cf2bcb7610 <col:41, col:50> col:50 e 'Element *'
| `-ParmVarDecl 0x55cf2bcb7688 <col:53, col:67> col:67 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55cf2bcb78f8 <line:207:5, col:37> col:12 unparse_name 'String (Element *) const'
| `-ParmVarDecl 0x55cf2bcb7838 <col:25, col:34> col:34 e 'Element *'
|-CXXMethodDecl 0x55cf2bcb7b28 <line:216:5, col:63> col:19 unparse_name 'String (Element *, const String &)' static
| |-ParmVarDecl 0x55cf2bcb79b0 <col:32, col:41> col:41 e 'Element *'
| `-ParmVarDecl 0x55cf2bcb7a28 <col:44, col:58> col:58 hname 'const String &'
|-CXXMethodDecl 0x55cf2bcb7c28 <line:223:5, line:225:5> line:223:34 blank_handler 'const Handler *()' static inline
| `-CompoundStmt 0x55cf2bcbce58 <col:50, line:225:5>
|   `-ReturnStmt 0x55cf2bcbce48 <line:224:2, col:9>
|     `-ImplicitCastExpr 0x55cf2bcbce30 <col:9> 'const Handler *' <LValueToRValue>
|       `-DeclRefExpr 0x55cf2bcbce10 <col:9> 'const Handler *' lvalue Var 0x55cf2bcb9fd0 'the_blank_handler' 'const Handler *'
|-EnumDecl 0x55cf2bcb7cc8 <line:229:5, line:251:5> line:229:5
| |-EnumConstantDecl 0x55cf2bcb7dd0 <line:230:2, col:11> col:2 h_read 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55cf2bcb8970 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf2bcb7db0 <col:11> 'Handler::Flags' Int: 1
| |     `-DeclRefExpr 0x55cf2bcb7d90 <col:11> 'Handler::Flags' EnumConstant 0x55cf2bcb5420 'f_read' 'Handler::Flags'
| |-EnumConstantDecl 0x55cf2bcb7e60 <line:231:2, col:12> col:2 h_write 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55cf2bcb8988 <col:12> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf2bcb7e40 <col:12> 'Handler::Flags' Int: 2
| |     `-DeclRefExpr 0x55cf2bcb7e20 <col:12> 'Handler::Flags' EnumConstant 0x55cf2bcb54b0 'f_write' 'Handler::Flags'
| |-EnumConstantDecl 0x55cf2bcb7ef0 <line:232:2, col:17> col:2 h_read_param 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55cf2bcb89a0 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf2bcb7ed0 <col:17> 'Handler::Flags' Int: 4
| |     `-DeclRefExpr 0x55cf2bcb7eb0 <col:17> 'Handler::Flags' EnumConstant 0x55cf2bcb5540 'f_read_param' 'Handler::Flags'
| |-EnumConstantDecl 0x55cf2bcb7f80 <line:233:2, col:16> col:2 h_exclusive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55cf2bcb89b8 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf2bcb7f60 <col:16> 'Handler::Flags' Int: 0
| |     `-DeclRefExpr 0x55cf2bcb7f40 <col:16> 'Handler::Flags' EnumConstant 0x55cf2bcb55d0 'f_exclusive' 'Handler::Flags'
| |-EnumConstantDecl 0x55cf2bcb8010 <line:234:2, col:19> col:2 h_nonexclusive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55cf2bcb89d0 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf2bcb7ff0 <col:19> 'Handler::Flags' Int: 32
| |     `-DeclRefExpr 0x55cf2bcb7fd0 <col:19> 'Handler::Flags' EnumConstant 0x55cf2bcb5660 'f_nonexclusive' 'Handler::Flags'
| |-EnumConstantDecl 0x55cf2bcb80a0 <line:235:2, col:10> col:2 h_raw 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55cf2bcb89e8 <col:10> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf2bcb8080 <col:10> 'Handler::Flags' Int: 64
| |     `-DeclRefExpr 0x55cf2bcb8060 <col:10> 'Handler::Flags' EnumConstant 0x55cf2bcb56f0 'f_raw' 'Handler::Flags'
| |-EnumConstantDecl 0x55cf2bcb8130 <line:236:2, col:19> col:2 h_read_private 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55cf2bcb8a00 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf2bcb8110 <col:19> 'Handler::Flags' Int: 128
| |     `-DeclRefExpr 0x55cf2bcb80f0 <col:19> 'Handler::Flags' EnumConstant 0x55cf2bcb5780 'f_read_private' 'Handler::Flags'
| |-EnumConstantDecl 0x55cf2bcb81c0 <line:237:2, col:20> col:2 h_write_private 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55cf2bcb8a18 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf2bcb81a0 <col:20> 'Handler::Flags' Int: 256
| |     `-DeclRefExpr 0x55cf2bcb8180 <col:20> 'Handler::Flags' EnumConstant 0x55cf2bcb5810 'f_write_private' 'Handler::Flags'
| |-EnumConstantDecl 0x55cf2bcb8250 <line:238:2, col:17> col:2 h_deprecated 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55cf2bcb8a30 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf2bcb8230 <col:17> 'Handler::Flags' Int: 512
| |     `-DeclRefExpr 0x55cf2bcb8210 <col:17> 'Handler::Flags' EnumConstant 0x55cf2bcb58a0 'f_deprecated' 'Handler::Flags'
| |-EnumConstantDecl 0x55cf2bcb82e0 <line:239:2, col:15> col:2 h_uncommon 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55cf2bcb8a48 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf2bcb82c0 <col:15> 'Handler::Flags' Int: 1024
| |     `-DeclRefExpr 0x55cf2bcb82a0 <col:15> 'Handler::Flags' EnumConstant 0x55cf2bcb5930 'f_uncommon' 'Handler::Flags'
| |-EnumConstantDecl 0x55cf2bcb8370 <line:240:2, col:11> col:2 h_calm 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55cf2bcb8a60 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf2bcb8350 <col:11> 'Handler::Flags' Int: 2048
| |     `-DeclRefExpr 0x55cf2bcb8330 <col:11> 'Handler::Flags' EnumConstant 0x55cf2bcb59c0 'f_calm' 'Handler::Flags'
| |-EnumConstantDecl 0x55cf2bcb8400 <line:241:2, col:16> col:2 h_expensive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55cf2bcb8a78 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf2bcb83e0 <col:16> 'Handler::Flags' Int: 4096
| |     `-DeclRefExpr 0x55cf2bcb83c0 <col:16> 'Handler::Flags' EnumConstant 0x55cf2bcb5a50 'f_expensive' 'Handler::Flags'
| |-EnumConstantDecl 0x55cf2bcb8490 <line:242:2, col:13> col:2 h_button 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55cf2bcb8a90 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf2bcb8470 <col:13> 'Handler::Flags' Int: 8192
| |     `-DeclRefExpr 0x55cf2bcb8450 <col:13> 'Handler::Flags' EnumConstant 0x55cf2bcb5ae0 'f_button' 'Handler::Flags'
| |-EnumConstantDecl 0x55cf2bcb8520 <line:243:2, col:15> col:2 h_checkbox 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55cf2bcb8aa8 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf2bcb8500 <col:15> 'Handler::Flags' Int: 16384
| |     `-DeclRefExpr 0x55cf2bcb84e0 <col:15> 'Handler::Flags' EnumConstant 0x55cf2bcb5b70 'f_checkbox' 'Handler::Flags'
| |-EnumConstantDecl 0x55cf2bcb85b0 <line:244:2, col:20> col:2 h_driver_flag_0 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55cf2bcb8ac0 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf2bcb8590 <col:20> 'Handler::Flags' Int: 67108864
| |     `-DeclRefExpr 0x55cf2bcb8570 <col:20> 'Handler::Flags' EnumConstant 0x55cf2bcb5c40 'f_driver0' 'Handler::Flags'
| |-EnumConstantDecl 0x55cf2bcb8640 <line:245:9, col:27> col:9 h_driver_flag_1 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55cf2bcb8ad8 <col:27> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf2bcb8620 <col:27> 'Handler::Flags' Int: 134217728
| |     `-DeclRefExpr 0x55cf2bcb8600 <col:27> 'Handler::Flags' EnumConstant 0x55cf2bcb5d10 'f_driver1' 'Handler::Flags'
| |-EnumConstantDecl 0x55cf2bcb86d0 <line:246:2, col:22> col:2 h_user_flag_shift 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55cf2bcb8af0 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf2bcb86b0 <col:22> 'Handler::Flags' Int: 28
| |     `-DeclRefExpr 0x55cf2bcb8690 <col:22> 'Handler::Flags' EnumConstant 0x55cf2bcb5da0 'f_user_shift' 'Handler::Flags'
| |-EnumConstantDecl 0x55cf2bcb8760 <line:247:2, col:18> col:2 h_user_flag_0 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55cf2bcb8b08 <col:18> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf2bcb8740 <col:18> 'Handler::Flags' Int: 268435456
| |     `-DeclRefExpr 0x55cf2bcb8720 <col:18> 'Handler::Flags' EnumConstant 0x55cf2bcb5e70 'f_user0' 'Handler::Flags'
| |-EnumConstantDecl 0x55cf2bcb87f0 <line:248:2, col:25> col:2 h_read_comprehensive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55cf2bcb8b20 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf2bcb87d0 <col:25> 'Handler::Flags' Int: 8
| |     `-DeclRefExpr 0x55cf2bcb87b0 <col:25> 'Handler::Flags' EnumConstant 0x55cf2bcb5f00 'f_read_comprehensive' 'Handler::Flags'
| |-EnumConstantDecl 0x55cf2bcb8880 <line:249:2, col:26> col:2 h_write_comprehensive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55cf2bcb8b38 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf2bcb8860 <col:26> 'Handler::Flags' Int: 16
| |     `-DeclRefExpr 0x55cf2bcb8840 <col:26> 'Handler::Flags' EnumConstant 0x55cf2bcb5f90 'f_write_comprehensive' 'Handler::Flags'
| `-EnumConstantDecl 0x55cf2bcb8920 <line:250:2, col:20> col:2 h_special_flags 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
|   `-ImplicitCastExpr 0x55cf2bcb8b50 <col:20> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55cf2bcb8900 <col:20> 'Handler::Flags' Int: 31
|       `-DeclRefExpr 0x55cf2bcb88d0 <col:20> 'Handler::Flags' EnumConstant 0x55cf2bcb6120 'f_special' 'Handler::Flags'
|-EnumDecl 0x55cf2bcb8b68 <line:252:5, line:267:5> line:252:10 DeprecatedFlags
| |-EnumConstantDecl 0x55cf2bcb8c70 <line:253:2, col:12> col:2 OP_READ 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x55cf2bcb91d0 <col:12> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf2bcb8c50 <col:12> 'Handler::Flags' Int: 1
| |     `-DeclRefExpr 0x55cf2bcb8c30 <col:12> 'Handler::Flags' EnumConstant 0x55cf2bcb5420 'f_read' 'Handler::Flags'
| |-EnumConstantDecl 0x55cf2bcb8d00 <line:254:2, col:13> col:2 OP_WRITE 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x55cf2bcb91e8 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf2bcb8ce0 <col:13> 'Handler::Flags' Int: 2
| |     `-DeclRefExpr 0x55cf2bcb8cc0 <col:13> 'Handler::Flags' EnumConstant 0x55cf2bcb54b0 'f_write' 'Handler::Flags'
| |-EnumConstantDecl 0x55cf2bcb8d90 <line:255:2, col:15> col:2 READ_PARAM 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x55cf2bcb9200 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf2bcb8d70 <col:15> 'Handler::Flags' Int: 4
| |     `-DeclRefExpr 0x55cf2bcb8d50 <col:15> 'Handler::Flags' EnumConstant 0x55cf2bcb5540 'f_read_param' 'Handler::Flags'
| |-EnumConstantDecl 0x55cf2bcb8e20 <line:256:2, col:8> col:2 RAW 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x55cf2bcb9218 <col:8> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf2bcb8e00 <col:8> 'Handler::Flags' Int: 64
| |     `-DeclRefExpr 0x55cf2bcb8de0 <col:8> 'Handler::Flags' EnumConstant 0x55cf2bcb56f0 'f_raw' 'Handler::Flags'
| |-EnumConstantDecl 0x55cf2bcb8eb0 <line:261:2, col:9> col:2 CALM 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x55cf2bcb9230 <col:9> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf2bcb8e90 <col:9> 'Handler::Flags' Int: 2048
| |     `-DeclRefExpr 0x55cf2bcb8e70 <col:9> 'Handler::Flags' EnumConstant 0x55cf2bcb59c0 'f_calm' 'Handler::Flags'
| |-EnumConstantDecl 0x55cf2bcb8f40 <line:262:2, col:14> col:2 EXPENSIVE 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x55cf2bcb9248 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf2bcb8f20 <col:14> 'Handler::Flags' Int: 4096
| |     `-DeclRefExpr 0x55cf2bcb8f00 <col:14> 'Handler::Flags' EnumConstant 0x55cf2bcb5a50 'f_expensive' 'Handler::Flags'
| |-EnumConstantDecl 0x55cf2bcb8fd0 <line:263:2, col:11> col:2 BUTTON 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x55cf2bcb9260 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf2bcb8fb0 <col:11> 'Handler::Flags' Int: 8192
| |     `-DeclRefExpr 0x55cf2bcb8f90 <col:11> 'Handler::Flags' EnumConstant 0x55cf2bcb5ae0 'f_button' 'Handler::Flags'
| |-EnumConstantDecl 0x55cf2bcb9060 <line:264:2, col:13> col:2 CHECKBOX 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x55cf2bcb9278 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf2bcb9040 <col:13> 'Handler::Flags' Int: 16384
| |     `-DeclRefExpr 0x55cf2bcb9020 <col:13> 'Handler::Flags' EnumConstant 0x55cf2bcb5b70 'f_checkbox' 'Handler::Flags'
| |-EnumConstantDecl 0x55cf2bcb90f0 <line:265:2, col:20> col:2 USER_FLAG_SHIFT 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x55cf2bcb9290 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf2bcb90d0 <col:20> 'Handler::Flags' Int: 28
| |     `-DeclRefExpr 0x55cf2bcb90b0 <col:20> 'Handler::Flags' EnumConstant 0x55cf2bcb5da0 'f_user_shift' 'Handler::Flags'
| `-EnumConstantDecl 0x55cf2bcb9180 <line:266:2, col:16> col:2 USER_FLAG_0 'Handler::DeprecatedFlags'
|   `-ImplicitCastExpr 0x55cf2bcb92a8 <col:16> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55cf2bcb9160 <col:16> 'Handler::Flags' Int: 268435456
|       `-DeclRefExpr 0x55cf2bcb9140 <col:16> 'Handler::Flags' EnumConstant 0x55cf2bcb5e70 'f_user0' 'Handler::Flags'
|-EnumDecl 0x55cf2bcb92c0 <line:268:5, line:271:5> line:268:5
| |-DeprecatedAttr 0x55cf2bcb9380 <col:25> "" ""
| |-EnumConstantDecl 0x55cf2bcb9430 <line:269:2, col:14> col:2 EXCLUSIVE 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:268:5)'
| | `-ImplicitCastExpr 0x55cf2bcb9510 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf2bcb9410 <col:14> 'Handler::Flags' Int: 0
| |     `-DeclRefExpr 0x55cf2bcb93f0 <col:14> 'Handler::Flags' EnumConstant 0x55cf2bcb55d0 'f_exclusive' 'Handler::Flags'
| `-EnumConstantDecl 0x55cf2bcb94c0 <line:270:2, col:17> col:2 NONEXCLUSIVE 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:268:5)'
|   `-ImplicitCastExpr 0x55cf2bcb9528 <col:17> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55cf2bcb94a0 <col:17> 'Handler::Flags' Int: 32
|       `-DeclRefExpr 0x55cf2bcb9480 <col:17> 'Handler::Flags' EnumConstant 0x55cf2bcb5660 'f_nonexclusive' 'Handler::Flags'
|-CXXMethodDecl 0x55cf2bcb96a8 <line:281:5, line:284:5> line:281:19 __call_read 'String (Element *, void *) const' inline
| |-ParmVarDecl 0x55cf2bcb9550 <col:31, col:40> col:40 used e 'Element *'
| |-ParmVarDecl 0x55cf2bcb95d0 <col:43, col:49> col:49 used new_user_data 'void *'
| `-CompoundStmt 0x55cf2bcbd518 <col:70, line:284:5>
|   |-ParenExpr 0x55cf2bcbd338 <line:282:2, col:233> 'void'
|   | `-ConditionalOperator 0x55cf2bcbd308 <col:3, col:232> 'void'
|   |   |-CXXStaticCastExpr 0x55cf2bcbd038 <col:3, col:75> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55cf2bcbd008 <col:23, col:69> 'bool' '=='
|   |   |   |-ParenExpr 0x55cf2bcbcfb0 <col:23, col:64> 'unsigned int'
|   |   |   | `-BinaryOperator 0x55cf2bcbcf90 <col:24, col:63> 'unsigned int' '&'
|   |   |   |   |-ImplicitCastExpr 0x55cf2bcbcf60 <col:24> 'uint32_t':'unsigned int' <LValueToRValue>
|   |   |   |   | `-MemberExpr 0x55cf2bcbce80 <col:24> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55cf2bcb9ea0
|   |   |   |   |   `-CXXThisExpr 0x55cf2bcbce70 <col:24> 'const Handler *' implicit this
|   |   |   |   `-ImplicitCastExpr 0x55cf2bcbcf78 <col:33, col:63> 'unsigned int' <IntegralCast>
|   |   |   |     `-ParenExpr 0x55cf2bcbcf40 <col:33, col:63> 'int'
|   |   |   |       `-BinaryOperator 0x55cf2bcbcf20 <col:34, col:43> 'int' '|'
|   |   |   |         |-ImplicitCastExpr 0x55cf2bcbcef0 <col:34> 'int' <IntegralCast>
|   |   |   |         | `-DeclRefExpr 0x55cf2bcbceb0 <col:34> 'Handler::Flags' EnumConstant 0x55cf2bcb5420 'f_read' 'Handler::Flags'
|   |   |   |         `-ImplicitCastExpr 0x55cf2bcbcf08 <col:43> 'int' <IntegralCast>
|   |   |   |           `-DeclRefExpr 0x55cf2bcbced0 <col:43> 'Handler::Flags' EnumConstant 0x55cf2bcb5f00 'f_read_comprehensive' 'Handler::Flags'
|   |   |   `-ImplicitCastExpr 0x55cf2bcbcff0 <col:69> 'unsigned int' <IntegralCast>
|   |   |     `-DeclRefExpr 0x55cf2bcbcfd0 <col:69> 'Handler::Flags' EnumConstant 0x55cf2bcb5420 'f_read' 'Handler::Flags'
|   |   |-CXXFunctionalCastExpr 0x55cf2bcbd098 <col:79, col:86> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55cf2bcbd078 <col:85> 'int' 0
|   |   `-CallExpr 0x55cf2bcbd268 <col:90, col:232> 'void'
|   |     |-ImplicitCastExpr 0x55cf2bcbd250 <col:90> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55cf2bcbd230 <col:90> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55cf2b7f8810 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55cf2bcbd2a8 <col:105> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55cf2bcbd108 <col:105> 'const char [53]' lvalue "(_flags & (f_read | f_read_comprehensive)) == f_read"
|   |     |-ImplicitCastExpr 0x55cf2bcbd2c0 <col:161> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55cf2bcbd158 <col:161> 'const char [30]' lvalue "../dummy_inc/click/handler.hh"
|   |     |-ImplicitCastExpr 0x55cf2bcbd2d8 <col:194> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55cf2bcbd190 <col:194> 'int' 282
|   |     `-ImplicitCastExpr 0x55cf2bcbd2f0 <col:199, col:213> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55cf2bcbd218 <col:199, col:213> 'const char [53]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55cf2bcbd200 <col:213> 'const char [53]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55cf2bcbd1b0 <col:213> 'const char [53]' lvalue "String Handler::__call_read(Element *, void *) const"
|   `-ReturnStmt 0x55cf2bcbd508 <line:283:2, col:38>
|     `-ExprWithCleanups 0x55cf2bcbd4f0 <col:9, col:38> 'String'
|       `-CXXConstructExpr 0x55cf2bcbd4c0 <col:9, col:38> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x55cf2bcbd4a8 <col:9, col:38> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x55cf2bcbd488 <col:9, col:38> 'String' (CXXTemporary 0x55cf2bcbd488)
|             `-CallExpr 0x55cf2bcbd420 <col:9, col:38> 'String'
|               |-ImplicitCastExpr 0x55cf2bcbd408 <col:9, col:20> 'ReadHandlerCallback':'String (*)(Element *, void *)' <LValueToRValue>
|               | `-MemberExpr 0x55cf2bcbd398 <col:9, col:20> 'const ReadHandlerCallback':'String (*const)(Element *, void *)' lvalue .r 0x55cf2bcb99b0
|               |   `-MemberExpr 0x55cf2bcbd368 <col:9> 'const union (anonymous union at ../dummy_inc/click/handler.hh:290:5)':'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5)' lvalue ->_read_hook 0x55cf2bcb9a78
|               |     `-CXXThisExpr 0x55cf2bcbd358 <col:9> 'const Handler *' implicit this
|               |-ImplicitCastExpr 0x55cf2bcbd450 <col:22> 'Element *' <LValueToRValue>
|               | `-DeclRefExpr 0x55cf2bcbd3c8 <col:22> 'Element *' lvalue ParmVar 0x55cf2bcb9550 'e' 'Element *'
|               `-ImplicitCastExpr 0x55cf2bcbd468 <col:25> 'void *' <LValueToRValue>
|                 `-DeclRefExpr 0x55cf2bcbd3e8 <col:25> 'void *' lvalue ParmVar 0x55cf2bcb95d0 'new_user_data' 'void *'
|-AccessSpecDecl 0x55cf2bcb9758 <line:287:3, col:10> col:3 private
|-FieldDecl 0x55cf2bcb9790 <line:289:5, col:12> col:12 referenced _name 'String'
|-CXXRecordDecl 0x55cf2bcb97e0 <line:290:5, line:293:5> line:290:5 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x55cf2bcb9930 <line:291:2, col:18> col:18 h 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-FieldDecl 0x55cf2bcb99b0 <line:292:2, col:22> col:22 referenced r 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-CXXConstructorDecl 0x55cf2bcba7a8 <line:290:5> col:5 implicit constexpr  'void (const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &)' inline default trivial noexcept-unevaluated 0x55cf2bcba7a8
| | `-ParmVarDecl 0x55cf2bcba8b8 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &'
| |-CXXConstructorDecl 0x55cf2bcba958 <col:5> col:5 implicit constexpr  'void (Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&)' inline default trivial noexcept-unevaluated 0x55cf2bcba958
| | `-ParmVarDecl 0x55cf2bcbaa68 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&'
| |-CXXDestructorDecl 0x55cf2bcbaad8 <col:5> col:5 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x55cf2bcbaad8
| |-CXXMethodDecl 0x55cf2bcbb3a8 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &(const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &)' inline default trivial noexcept-unevaluated 0x55cf2bcbb3a8
| | `-ParmVarDecl 0x55cf2bcbb4b8 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &'
| |-CXXMethodDecl 0x55cf2bcbb528 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &(Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&)' inline default trivial noexcept-unevaluated 0x55cf2bcbb528
| | `-ParmVarDecl 0x55cf2bcbb638 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&'
| `-CXXConstructorDecl 0x55cf2be67d30 <col:5> col:5 implicit used  'void () noexcept' inline default trivial
|   `-CompoundStmt 0x55cf2be67e10 <col:5>
|-FieldDecl 0x55cf2bcb9a78 <col:5, line:293:7> col:7 referenced _read_hook 'union (anonymous union at ../dummy_inc/click/handler.hh:290:5)':'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5)'
|-CXXRecordDecl 0x55cf2bcb9ae0 <line:294:5, line:297:5> line:294:5 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x55cf2bcb9c08 <line:295:2, col:18> col:18 h 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-FieldDecl 0x55cf2bcb9c90 <line:296:2, col:23> col:23 referenced w 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-CXXConstructorDecl 0x55cf2bcbac08 <line:294:5> col:5 implicit constexpr  'void (const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &)' inline default trivial noexcept-unevaluated 0x55cf2bcbac08
| | `-ParmVarDecl 0x55cf2bcbad18 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &'
| |-CXXConstructorDecl 0x55cf2bcbadb8 <col:5> col:5 implicit constexpr  'void (Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&)' inline default trivial noexcept-unevaluated 0x55cf2bcbadb8
| | `-ParmVarDecl 0x55cf2bcbaec8 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&'
| |-CXXDestructorDecl 0x55cf2bcbaf38 <col:5> col:5 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x55cf2bcbaf38
| |-CXXMethodDecl 0x55cf2bcbb6d8 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &(const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &)' inline default trivial noexcept-unevaluated 0x55cf2bcbb6d8
| | `-ParmVarDecl 0x55cf2bcbb7e8 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &'
| |-CXXMethodDecl 0x55cf2bcbb858 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &(Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&)' inline default trivial noexcept-unevaluated 0x55cf2bcbb858
| | `-ParmVarDecl 0x55cf2bcbb968 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&'
| `-CXXConstructorDecl 0x55cf2be67e70 <col:5> col:5 implicit used  'void () noexcept' inline default trivial
|   `-CompoundStmt 0x55cf2be67f50 <col:5>
|-FieldDecl 0x55cf2bcb9d58 <col:5, line:297:7> col:7 referenced _write_hook 'union (anonymous union at ../dummy_inc/click/handler.hh:294:5)':'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5)'
|-FieldDecl 0x55cf2bcb9dd8 <line:298:5, col:11> col:11 referenced _read_user_data 'void *'
|-FieldDecl 0x55cf2bcb9e40 <line:299:5, col:11> col:11 referenced _write_user_data 'void *'
|-FieldDecl 0x55cf2bcb9ea0 <line:300:5, col:14> col:14 referenced _flags 'uint32_t':'unsigned int'
|-FieldDecl 0x55cf2bcb9f08 <line:301:5, col:9> col:9 _use_count 'int'
|-FieldDecl 0x55cf2bcb9f70 <line:302:5, col:9> col:9 _next_by_name 'int'
|-VarDecl 0x55cf2bcb9fd0 <line:304:5, col:27> col:27 used the_blank_handler 'const Handler *' static
|-CXXConstructorDecl 0x55cf2bcba0f0 <line:306:5, col:38> col:5 Handler 'void (const String &)'
| `-ParmVarDecl 0x55cf2bcba048 <col:13, col:37> col:28 'const String &' cinit
|   `-ExprWithCleanups 0x55cf2bcbbd20 <col:30, col:37> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x55cf2bcbbd08 <col:30, col:37> 'const String' lvalue
|       `-ImplicitCastExpr 0x55cf2bcbbcf0 <col:30, col:37> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x55cf2bcbbcd0 <col:30, col:37> 'String' (CXXTemporary 0x55cf2bcbbcd0)
|           `-CXXTemporaryObjectExpr 0x55cf2bcbbc98 <col:30, col:37> 'String' 'void ()'
|-CXXMethodDecl 0x55cf2bcba298 <line:308:5, col:41> col:17 combine 'void (const Handler &)' inline
| `-ParmVarDecl 0x55cf2bcba1d8 <col:25, col:40> col:40 x 'const Handler &'
|-CXXMethodDecl 0x55cf2bcba418 <line:309:5, col:46> col:17 compatible 'bool (const Handler &) const' inline
| `-ParmVarDecl 0x55cf2bcba350 <col:28, col:43> col:43 x 'const Handler &'
|-FriendDecl 0x55cf2bcba5d8 <line:311:5, col:18> col:12 'class Router':'Router'
|-CXXConstructorDecl 0x55cf2bcba618 <line:19:7> col:7 implicit Handler 'void (const Handler &)' inline default noexcept-unevaluated 0x55cf2bcba618
| `-ParmVarDecl 0x55cf2bcba6f8 <col:7> col:7 'const Handler &'
|-CXXConstructorDecl 0x55cf2bcbb048 <col:7> col:7 implicit Handler 'void (Handler &&)' inline default noexcept-unevaluated 0x55cf2bcbb048
| `-ParmVarDecl 0x55cf2bcbb158 <col:7> col:7 'Handler &&'
|-CXXMethodDecl 0x55cf2bcbb1f8 <col:7> col:7 implicit operator= 'Handler &(const Handler &)' inline default noexcept-unevaluated 0x55cf2bcbb1f8
| `-ParmVarDecl 0x55cf2bcbb308 <col:7> col:7 'const Handler &'
|-CXXMethodDecl 0x55cf2bcbb9d8 <col:7> col:7 implicit operator= 'Handler &(Handler &&)' inline default noexcept-unevaluated 0x55cf2bcbb9d8
| `-ParmVarDecl 0x55cf2bcbbae8 <col:7> col:7 'Handler &&'
`-CXXDestructorDecl 0x55cf2bcbbb70 <col:7> col:7 implicit ~Handler 'void ()' inline default noexcept-unevaluated 0x55cf2bcbbb70

Layout: <CGRecordLayout
  LLVMType:%class.Handler = type <{ %class.String, %union.anon, %union.anon.11, i8*, i8*, i32, i32, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Handler.base = type <{ %class.String, %union.anon, %union.anon.11, i8*, i8*, i32, i32, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55cf2be4efe8 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'void *'
|-CXXRecordDecl 0x55cf2be4f1f8 prev 0x55cf2be4efe8 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55cf2be50210 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<void *>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x55cf2be501c0 'typename array_memory<void *>::type' sugar
|   `-TypedefType 0x55cf2be501a0 'conditional<true, sized_array_memory<8>, typed_array_memory<void *> >::type' sugar
|     |-Typedef 0x55cf2be50050 'type'
|     `-SubstTemplateTypeParmType 0x55cf2bdb23b0 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x55cf2ba22420 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55cf2ba223c8 'T'
|       `-RecordType 0x55cf2bdb1f00 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x55cf2bdb1e18 'sized_array_memory'
|-FieldDecl 0x55cf2be50310 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<void *>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x55cf2be50360 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55cf2be50398 <line:118:5, col:15> col:15 value_type 'void *':'void *'
| `-SubstTemplateTypeParmType 0x55cf2be4f290 'void *' sugar
|   |-TemplateTypeParmType 0x55cf2ba5a110 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55cf2ba5a0b8 'T'
|   `-PointerType 0x55cf2b759ad0 'void *'
|     `-BuiltinType 0x55cf2b7592d0 'void'
|-TypedefDecl 0x55cf2be50428 <line:119:5, col:16> col:16 reference 'void *&'
| `-LValueReferenceType 0x55cf2be503f0 'void *&'
|   `-SubstTemplateTypeParmType 0x55cf2be4f290 'void *' sugar
|     |-TemplateTypeParmType 0x55cf2ba5a110 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55cf2ba5a0b8 'T'
|     `-PointerType 0x55cf2b759ad0 'void *'
|       `-BuiltinType 0x55cf2b7592d0 'void'
|-TypedefDecl 0x55cf2be504e8 <line:120:5, col:22> col:22 const_reference 'void *const &'
| `-LValueReferenceType 0x55cf2be504b0 'void *const &'
|   `-QualType 0x55cf2be4f291 'void *const' const
|     `-SubstTemplateTypeParmType 0x55cf2be4f290 'void *' sugar
|       |-TemplateTypeParmType 0x55cf2ba5a110 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55cf2ba5a0b8 'T'
|       `-PointerType 0x55cf2b759ad0 'void *'
|         `-BuiltinType 0x55cf2b7592d0 'void'
|-TypedefDecl 0x55cf2be50578 <line:121:5, col:16> col:16 pointer 'void **'
| `-PointerType 0x55cf2be50540 'void **'
|   `-SubstTemplateTypeParmType 0x55cf2be4f290 'void *' sugar
|     |-TemplateTypeParmType 0x55cf2ba5a110 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55cf2ba5a0b8 'T'
|     `-PointerType 0x55cf2b759ad0 'void *'
|       `-BuiltinType 0x55cf2b7592d0 'void'
|-TypedefDecl 0x55cf2be50608 <line:122:5, col:22> col:22 const_pointer 'void *const *'
| `-PointerType 0x55cf2be505d0 'void *const *'
|   `-QualType 0x55cf2be4f291 'void *const' const
|     `-SubstTemplateTypeParmType 0x55cf2be4f290 'void *' sugar
|       |-TemplateTypeParmType 0x55cf2ba5a110 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55cf2ba5a0b8 'T'
|       `-PointerType 0x55cf2b759ad0 'void *'
|         `-BuiltinType 0x55cf2b7592d0 'void'
|-TypedefDecl 0x55cf2be511f0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<void *>::type':'void *'
| `-ElaboratedType 0x55cf2be511a0 'typename fast_argument<void *>::type' sugar
|   `-TypedefType 0x55cf2be51180 'fast_argument<void *, false>::type' sugar
|     |-Typedef 0x55cf2be51110 'type'
|     `-SubstTemplateTypeParmType 0x55cf2be50ed0 'void *' sugar
|       |-TemplateTypeParmType 0x55cf2ba2d220 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55cf2ba2d1d0 'T'
|       `-PointerType 0x55cf2b759ad0 'void *'
|         `-BuiltinType 0x55cf2b7592d0 'void'
|-TypedefDecl 0x55cf2be51258 <line:126:5, col:22> col:22 const_access_type 'void *const &'
| `-LValueReferenceType 0x55cf2be504b0 'void *const &'
|   `-QualType 0x55cf2be4f291 'void *const' const
|     `-SubstTemplateTypeParmType 0x55cf2be4f290 'void *' sugar
|       |-TemplateTypeParmType 0x55cf2ba5a110 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55cf2ba5a0b8 'T'
|       `-PointerType 0x55cf2b759ad0 'void *'
|         `-BuiltinType 0x55cf2b7592d0 'void'
|-TypedefDecl 0x55cf2be512b0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55cf2b759370 'int'
|-TypedefDecl 0x55cf2be51318 <line:130:5, col:16> col:16 iterator 'void **'
| `-PointerType 0x55cf2be50540 'void **'
|   `-SubstTemplateTypeParmType 0x55cf2be4f290 'void *' sugar
|     |-TemplateTypeParmType 0x55cf2ba5a110 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55cf2ba5a0b8 'T'
|     `-PointerType 0x55cf2b759ad0 'void *'
|       `-BuiltinType 0x55cf2b7592d0 'void'
|-TypedefDecl 0x55cf2be51380 <line:131:5, col:22> col:22 const_iterator 'void *const *'
| `-PointerType 0x55cf2be505d0 'void *const *'
|   `-QualType 0x55cf2be4f291 'void *const' const
|     `-SubstTemplateTypeParmType 0x55cf2be4f290 'void *' sugar
|       |-TemplateTypeParmType 0x55cf2ba5a110 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55cf2ba5a0b8 'T'
|       `-PointerType 0x55cf2b759ad0 'void *'
|         `-BuiltinType 0x55cf2b7592d0 'void'
|-EnumDecl 0x55cf2be513d8 <line:134:5> col:5
| `-EnumConstantDecl 0x55cf2be514d0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<void *>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55cf2be514b0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55cf2ba5baa8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55cf2ba5ba80 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55cf2ba5ba60 <col:40> 'int' 1
|-CXXConstructorDecl 0x55cf2be51558 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55cf2be517a8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<void *>::value_argument_type)' inline
| |-ParmVarDecl 0x55cf2be51610 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55cf2be516b0 <col:41, col:61> col:61 v 'Vector<void *>::value_argument_type':'void *'
|-CXXConstructorDecl 0x55cf2be51a68 <line:139:5, col:37> col:12 Vector 'void (const Vector<void *> &)' inline
| `-ParmVarDecl 0x55cf2be51950 <col:19, col:36> col:36 x 'const Vector<void *> &'
|-CXXConstructorDecl 0x55cf2be51d28 <line:141:5, col:32> col:12 Vector 'void (Vector<void *> &&)' inline
| `-ParmVarDecl 0x55cf2be51c10 <col:19, col:31> col:31 x 'Vector<void *> &&'
|-CXXMethodDecl 0x55cf2be52070 <line:144:5, col:51> col:23 operator= 'Vector<void *> &(const Vector<void *> &)' inline
| `-ParmVarDecl 0x55cf2be51f50 <col:33, col:50> col:50 x 'const Vector<void *> &'
|-CXXMethodDecl 0x55cf2be52380 <line:146:5, col:46> col:23 operator= 'Vector<void *> &(Vector<void *> &&)' inline
| `-ParmVarDecl 0x55cf2be52260 <col:33, col:45> col:45 x 'Vector<void *> &&'
|-CXXMethodDecl 0x55cf2be52670 <line:148:5, col:70> col:23 assign 'Vector<void *> &(Vector::size_type, Vector<void *>::value_argument_type)' inline
| |-ParmVarDecl 0x55cf2be524b8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55cf2be52530 <col:43, col:69> col:63 v 'Vector<void *>::value_argument_type':'void *'
|-CXXMethodDecl 0x55cf2be527c8 <line:150:5, col:55> col:49 begin 'Vector<void *>::iterator ()'
| |-NoInlineAttr 0x55cf2be528a8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55cf2be52900 <col:30> Inherited
|-CXXMethodDecl 0x55cf2be52948 <line:151:5, col:53> col:49 end 'Vector<void *>::iterator ()'
| |-NoInlineAttr 0x55cf2be529f8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55cf2be52a50 <col:30> Inherited
|-CXXMethodDecl 0x55cf2be52b18 <line:152:5, col:63> col:55 begin 'Vector<void *>::const_iterator () const'
| |-NoInlineAttr 0x55cf2be52bc8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55cf2be52c20 <col:30> Inherited
|-CXXMethodDecl 0x55cf2be52c68 <line:153:5, col:61> col:55 end 'Vector<void *>::const_iterator () const'
| |-NoInlineAttr 0x55cf2be52d18 <col:20> Inherited
| `-OptimizeNoneAttr 0x55cf2be52d70 <col:30> Inherited
|-CXXMethodDecl 0x55cf2be52db8 <line:154:5, col:64> col:55 cbegin 'Vector<void *>::const_iterator () const'
| |-NoInlineAttr 0x55cf2be52e68 <col:20> Inherited
| `-OptimizeNoneAttr 0x55cf2be52ec0 <col:30> Inherited
|-CXXMethodDecl 0x55cf2be52f08 <line:155:5, col:62> col:55 cend 'Vector<void *>::const_iterator () const'
| |-NoInlineAttr 0x55cf2be52fb8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55cf2be53010 <col:30> Inherited
|-CXXMethodDecl 0x55cf2be53038 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55cf2be530e8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55cf2be53198 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55cf2be53358 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<void *>::value_argument_type)' inline
| |-ParmVarDecl 0x55cf2be53248 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55cf2be532c0 <col:37, col:63> col:57 v 'Vector<void *>::value_argument_type':'void *'
|-CXXMethodDecl 0x55cf2be534a8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55cf2be53418 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55cf2be53658 <line:163:5, col:65> col:43 operator[] 'void *&(Vector::size_type)'
| |-ParmVarDecl 0x55cf2be53560 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55cf2be53710 <col:20>
| `-OptimizeNoneAttr 0x55cf2be53768 <col:30>
|-CXXMethodDecl 0x55cf2be53888 <line:164:5, col:73> col:49 operator[] 'void *const &(Vector::size_type) const'
| |-ParmVarDecl 0x55cf2be53790 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55cf2be53940 <col:20>
| `-OptimizeNoneAttr 0x55cf2be53998 <col:30>
|-CXXMethodDecl 0x55cf2be53a50 <line:165:5, col:29> col:15 at 'void *&(Vector::size_type)' inline
| `-ParmVarDecl 0x55cf2be539c0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55cf2be53b98 <line:166:5, col:37> col:21 at 'void *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55cf2be53b08 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55cf2be53cc8 <line:167:5, col:21> col:15 front 'void *&()' inline
|-CXXMethodDecl 0x55cf2be53df8 <line:168:5, col:29> col:21 front 'void *const &() const' inline
|-CXXMethodDecl 0x55cf2be53ec8 <line:169:5, col:20> col:15 back 'void *&()' inline
|-CXXMethodDecl 0x55cf2be53f98 <line:170:5, col:28> col:21 back 'void *const &() const' inline
|-CXXMethodDecl 0x55cf2be540d8 <line:172:5, col:39> col:15 unchecked_at 'void *&(Vector::size_type)' inline
| `-ParmVarDecl 0x55cf2be54048 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55cf2be54220 <line:173:5, col:47> col:21 unchecked_at 'void *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55cf2be54190 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55cf2be54368 <line:174:5, col:59> col:15 at_u 'void *&(Vector::size_type)' inline
| |-ParmVarDecl 0x55cf2be542d8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55cf2be54420 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55cf2be54520 <line:175:5, col:71> col:21 at_u 'void *const &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55cf2be54490 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55cf2be545d8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55cf2be54698 <line:177:5, col:20> col:15 data 'void **()' inline
|-CXXMethodDecl 0x55cf2be54798 <line:178:5, col:28> col:21 data 'void *const *() const' inline
|-CXXMethodDecl 0x55cf2be54918 <line:180:5, col:48> col:17 push_back 'void (Vector<void *>::value_argument_type)' inline
| `-ParmVarDecl 0x55cf2be54858 <col:27, col:47> col:47 v 'Vector<void *>::value_argument_type':'void *'
|-FunctionTemplateDecl 0x55cf2be564b8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55cf2be549d0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<void *>':'fast_argument<void *, false>'
| `-CXXMethodDecl 0x55cf2be56418 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (void *&&)' inline
|   `-ParmVarDecl 0x55cf2be56318 <col:58, col:62> col:62 v 'void *&&'
|-CXXMethodDecl 0x55cf2be56598 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55cf2be566e8 <line:186:5, col:49> col:17 push_front 'void (Vector<void *>::value_argument_type)' inline
| `-ParmVarDecl 0x55cf2be56658 <col:28, col:48> col:48 v 'Vector<void *>::value_argument_type':'void *'
|-CXXMethodDecl 0x55cf2be567a0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55cf2be569e8 <line:189:5, col:62> col:21 insert 'Vector<void *>::iterator (Vector<void *>::iterator, Vector<void *>::value_argument_type)' inline
| |-ParmVarDecl 0x55cf2be56860 <col:28, col:37> col:37 it 'Vector<void *>::iterator':'void **'
| `-ParmVarDecl 0x55cf2be568d8 <col:41, col:61> col:61 v 'Vector<void *>::value_argument_type':'void *'
|-CXXMethodDecl 0x55cf2be56ba8 <line:190:5, col:38> col:21 erase 'Vector<void *>::iterator (Vector<void *>::iterator)' inline
| `-ParmVarDecl 0x55cf2be56ab8 <col:27, col:36> col:36 it 'Vector<void *>::iterator':'void **'
|-CXXMethodDecl 0x55cf2be56df8 <line:191:5, col:49> col:21 erase 'Vector<void *>::iterator (Vector<void *>::iterator, Vector<void *>::iterator)' inline
| |-ParmVarDecl 0x55cf2be56c70 <col:27, col:36> col:36 a 'Vector<void *>::iterator':'void **'
| `-ParmVarDecl 0x55cf2be56ce8 <col:39, col:48> col:48 b 'Vector<void *>::iterator':'void **'
|-CXXMethodDecl 0x55cf2be56eb8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55cf2be57118 <line:195:5, col:34> col:17 swap 'void (Vector<void *> &)' inline
| `-ParmVarDecl 0x55cf2be57020 <col:22, col:33> col:33 x 'Vector<void *> &'
`-CXXDestructorDecl 0x55cf2be571e8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55cf2be571e8

Layout: <CGRecordLayout
  LLVMType:%class.Vector.12 = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector.12 = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct Router::notifier_signals_t
         0 |   class String name
         0 |     struct String::rep_t _r
         0 |       const char * data
         8 |       int length
        16 |       struct String::memo_t * memo
        24 |   int nsig
        28 |   class atomic_uint32_t [128] sig
       544 |   struct Router::notifier_signals_t * next
           | [sizeof=552, dsize=552, align=8,
           |  nvsize=552, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55cf2be573e0 <../dummy_inc/click/router.hh:280:5, line:290:5> line:280:12 referenced struct notifier_signals_t definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x55cf2be574f8 <col:5, col:12> col:12 implicit referenced struct notifier_signals_t
|-EnumDecl 0x55cf2be57588 <line:281:9, col:32> col:9
| `-EnumConstantDecl 0x55cf2be57690 <col:16, col:27> col:16 referenced capacity 'Router::notifier_signals_t::(anonymous enum at ../dummy_inc/click/router.hh:281:9)'
|   `-ImplicitCastExpr 0x55cf2be576e0 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55cf2be57670 <col:27> 'int' Int: 4096
|       `-IntegerLiteral 0x55cf2be57650 <col:27> 'int' 4096
|-FieldDecl 0x55cf2be57708 <line:282:9, col:16> col:16 name 'String'
|-FieldDecl 0x55cf2be57770 <line:283:9, col:13> col:13 nsig 'int'
|-FieldDecl 0x55cf2be57968 <line:284:9, col:42> col:25 referenced sig 'atomic_uint32_t [128]'
|-FieldDecl 0x55cf2be579f8 <line:285:9, col:29> col:29 next 'Router::notifier_signals_t *'
|-CXXConstructorDecl 0x55cf2be57bb8 <line:286:9, line:289:9> line:286:9 notifier_signals_t 'void (const String &, Router::notifier_signals_t *)'
| |-ParmVarDecl 0x55cf2be57a58 <col:28, col:42> col:42 used n 'const String &'
| |-ParmVarDecl 0x55cf2be57ad0 <col:45, col:65> col:65 used nx 'Router::notifier_signals_t *'
| |-CXXCtorInitializer Field 0x55cf2be57708 'name' 'String'
| | `-CXXConstructExpr 0x55cf2be62d18 <line:287:15, col:21> 'String' 'void (const String &)'
| |   `-DeclRefExpr 0x55cf2be62cd8 <col:20> 'const String' lvalue ParmVar 0x55cf2be57a58 'n' 'const String &'
| |-CXXCtorInitializer Field 0x55cf2be57770 'nsig' 'int'
| | `-IntegerLiteral 0x55cf2be62d70 <col:29> 'int' 0
| |-CXXCtorInitializer Field 0x55cf2be57968 'sig' 'atomic_uint32_t [128]'
| | `-CXXConstructExpr 0x55cf2be62e58 <line:286:9> 'atomic_uint32_t [128]' 'void () noexcept'
| |-CXXCtorInitializer Field 0x55cf2be579f8 'next' 'Router::notifier_signals_t *'
| | `-ImplicitCastExpr 0x55cf2be62e18 <line:287:38> 'Router::notifier_signals_t *' <LValueToRValue>
| |   `-DeclRefExpr 0x55cf2be62dd8 <col:38> 'Router::notifier_signals_t *' lvalue ParmVar 0x55cf2be57ad0 'nx' 'Router::notifier_signals_t *'
| `-CompoundStmt 0x55cf2be630e8 <col:42, line:289:9>
|   `-CallExpr 0x55cf2be63098 <line:288:13, col:43> 'void *'
|     |-ImplicitCastExpr 0x55cf2be63080 <col:13> 'void *(*)(void *, int, size_t) throw()' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x55cf2be63060 <col:13> 'void *(void *, int, size_t) throw()' lvalue Function 0x55cf2b9bcad8 'memset' 'void *(void *, int, size_t) throw()'
|     |-ImplicitCastExpr 0x55cf2be630d0 <col:20, col:26> 'void *' <BitCast>
|     | `-UnaryOperator 0x55cf2be62fa8 <col:20, col:26> 'atomic_uint32_t *' prefix '&' cannot overflow
|     |   `-ArraySubscriptExpr 0x55cf2be62f88 <col:21, col:26> 'atomic_uint32_t' lvalue
|     |     |-ImplicitCastExpr 0x55cf2be62f70 <col:21> 'atomic_uint32_t *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55cf2be62f20 <col:21> 'atomic_uint32_t [128]' lvalue ->sig 0x55cf2be57968
|     |     |   `-CXXThisExpr 0x55cf2be62f10 <col:21> 'Router::notifier_signals_t *' implicit this
|     |     `-IntegerLiteral 0x55cf2be62f50 <col:25> 'int' 0
|     |-IntegerLiteral 0x55cf2be62fc0 <col:29> 'int' 0
|     `-UnaryExprOrTypeTraitExpr 0x55cf2be63040 <col:32, col:42> 'unsigned long' sizeof
|       `-ParenExpr 0x55cf2be63020 <col:38, col:42> 'atomic_uint32_t [128]' lvalue
|         `-MemberExpr 0x55cf2be62ff0 <col:39> 'atomic_uint32_t [128]' lvalue ->sig 0x55cf2be57968 non_odr_use_unevaluated
|           `-CXXThisExpr 0x55cf2be62fe0 <col:39> 'Router::notifier_signals_t *' implicit this
|-CXXConstructorDecl 0x55cf2be57c98 <line:280:12> col:12 implicit notifier_signals_t 'void (const Router::notifier_signals_t &)' inline default noexcept-unevaluated 0x55cf2be57c98
| `-ParmVarDecl 0x55cf2be57da8 <col:12> col:12 'const Router::notifier_signals_t &'
|-CXXConstructorDecl 0x55cf2be57e48 <col:12> col:12 implicit notifier_signals_t 'void (Router::notifier_signals_t &&)' inline default noexcept-unevaluated 0x55cf2be57e48
| `-ParmVarDecl 0x55cf2be57f58 <col:12> col:12 'Router::notifier_signals_t &&'
|-CXXMethodDecl 0x55cf2be57ff8 <col:12> col:12 implicit operator= 'Router::notifier_signals_t &(const Router::notifier_signals_t &)' inline default noexcept-unevaluated 0x55cf2be57ff8
| `-ParmVarDecl 0x55cf2be58108 <col:12> col:12 'const Router::notifier_signals_t &'
|-CXXMethodDecl 0x55cf2be58178 <col:12> col:12 implicit operator= 'Router::notifier_signals_t &(Router::notifier_signals_t &&)' inline default noexcept-unevaluated 0x55cf2be58178
| `-ParmVarDecl 0x55cf2be58288 <col:12> col:12 'Router::notifier_signals_t &&'
`-CXXDestructorDecl 0x55cf2be58310 <col:12> col:12 implicit ~notifier_signals_t 'void ()' inline default noexcept-unevaluated 0x55cf2be58310

Layout: <CGRecordLayout
  LLVMType:%"struct.Router::notifier_signals_t" = type { %class.String, i32, [128 x %class.atomic_uint32_t], %"struct.Router::notifier_signals_t"* }
  NonVirtualBaseLLVMType:%"struct.Router::notifier_signals_t" = type { %class.String, i32, [128 x %class.atomic_uint32_t], %"struct.Router::notifier_signals_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class ThreadSched
         0 |   (ThreadSched vtable pointer)
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55cf2be15ba0 <../dummy_inc/click/standard/threadsched.hh:6:1, line:15:1> line:6:7 class ThreadSched definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple non_trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55cf2be15cb8 <col:1, col:7> col:7 implicit referenced class ThreadSched
|-AccessSpecDecl 0x55cf2be15d48 <col:21, col:27> col:21 public
|-EnumDecl 0x55cf2be15d70 <line:8:5, col:58> col:5
| |-EnumConstantDecl 0x55cf2be15e88 <col:12, col:32> col:12 THREAD_QUIESCENT 'ThreadSched::(anonymous enum at ../dummy_inc/click/standard/threadsched.hh:8:5)'
| | `-ConstantExpr 0x55cf2be15e68 <col:31, col:32> 'int' Int: -1
| |   `-UnaryOperator 0x55cf2be15e50 <col:31, col:32> 'int' prefix '-'
| |     `-IntegerLiteral 0x55cf2be15e30 <col:32> 'int' 1
| `-EnumConstantDecl 0x55cf2be15f30 <col:35, col:53> col:35 THREAD_UNKNOWN 'ThreadSched::(anonymous enum at ../dummy_inc/click/standard/threadsched.hh:8:5)'
|   `-ConstantExpr 0x55cf2be15f10 <col:52, col:53> 'int' Int: -1000
|     `-UnaryOperator 0x55cf2be15ef8 <col:52, col:53> 'int' prefix '-'
|       `-IntegerLiteral 0x55cf2be15ed8 <col:53> 'int' 1000
|-CXXConstructorDecl 0x55cf2be15fe0 <line:10:5, col:21> col:5 ThreadSched 'void ()'
| `-CompoundStmt 0x55cf2be16518 <col:19, col:21>
|-CXXDestructorDecl 0x55cf2be160d0 <line:11:5, col:30> col:13 ~ThreadSched 'void () noexcept' virtual
| `-CompoundStmt 0x55cf2be16528 <col:28, col:30>
|-CXXMethodDecl 0x55cf2be16290 <line:13:5, col:56> col:17 initial_home_thread_id 'int (const Element *)' virtual
| `-ParmVarDecl 0x55cf2be161c0 <col:40, col:55> col:55 e 'const Element *'
`-CXXMethodDecl 0x55cf2be16398 <line:6:7> col:7 implicit operator= 'ThreadSched &(const ThreadSched &)' inline default noexcept-unevaluated 0x55cf2be16398
  `-ParmVarDecl 0x55cf2be164a8 <col:7> col:7 'const ThreadSched &'

Layout: <CGRecordLayout
  LLVMType:%class.ThreadSched = type { i32 (...)** }
  NonVirtualBaseLLVMType:%class.ThreadSched = type { i32 (...)** }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55cf2be16ad0 prev 0x55cf2bdebd00 <../dummy_inc/click/router.hh:23:1, line:352:1> line:23:7 referenced class Router definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-CXXRecordDecl 0x55cf2be16bc8 <col:1, col:7> col:7 implicit referenced class Router
|-AccessSpecDecl 0x55cf2be16c58 <col:16, col:22> col:16 public
|-CXXMethodDecl 0x55cf2be16cc8 <line:28:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x55cf2be16d88 <line:31:5, col:31> col:17 used initialized 'bool () const' inline
|-CXXMethodDecl 0x55cf2be16e48 <line:32:5, col:34> col:17 handlers_ready 'bool () const' inline
|-CXXMethodDecl 0x55cf2be16f08 <line:33:5, col:27> col:17 running 'bool () const' inline
|-CXXMethodDecl 0x55cf2be16fc8 <line:34:5, col:25> col:17 dying 'bool () const' inline
|-EnumDecl 0x55cf2be17068 <line:37:5, col:44> col:5
| `-EnumConstantDecl 0x55cf2be171c8 <col:12, col:42> col:12 STOP_RUNCOUNT 'Router::(anonymous enum at ../dummy_inc/click/router.hh:37:5)'
|   `-ConstantExpr 0x55cf2be171a8 <col:28, col:42> 'int' Int: -2147483648
|     `-BinaryOperator 0x55cf2be17188 <col:28, col:42> 'int' '-'
|       |-UnaryOperator 0x55cf2be17150 <col:28, col:29> 'int' prefix '-'
|       | `-IntegerLiteral 0x55cf2be17130 <col:29> 'int' 2147483647
|       `-IntegerLiteral 0x55cf2be17168 <col:42> 'int' 1
|-CXXMethodDecl 0x55cf2be17268 <line:38:5, col:31> col:20 runcount 'int32_t () const' inline
|-CXXMethodDecl 0x55cf2be173d8 <line:39:5, col:39> col:10 used adjust_runcount 'void (int32_t)'
| `-ParmVarDecl 0x55cf2be17318 <col:26, col:34> col:34 delta 'int32_t':'int'
|-CXXMethodDecl 0x55cf2be17520 <line:40:5, col:33> col:10 set_runcount 'void (int32_t)'
| `-ParmVarDecl 0x55cf2be17490 <col:23, col:31> col:31 rc 'int32_t':'int'
|-CXXMethodDecl 0x55cf2be175e8 <line:41:5, col:36> col:17 please_stop_driver 'void ()' inline
|-CXXMethodDecl 0x55cf2be17910 <line:44:5, col:47> col:36 elements 'const Vector<Element *> &() const' inline
|-CXXMethodDecl 0x55cf2be179d8 <line:45:5, col:28> col:16 nelements 'int () const' inline
|-CXXMethodDecl 0x55cf2be17b58 <line:46:5, col:36> col:21 element 'Element *(int) const' inline
| `-ParmVarDecl 0x55cf2be17a90 <col:29, col:33> col:33 i 'int'
|-CXXMethodDecl 0x55cf2be17c20 <line:47:5, col:36> col:21 root_element 'Element *() const' inline
|-CXXMethodDecl 0x55cf2be17e28 <line:48:5, col:56> col:21 used element 'Element *(const Router *, int)' static
| |-ParmVarDecl 0x55cf2be17cd0 <col:29, col:43> col:43 router 'const Router *'
| `-ParmVarDecl 0x55cf2be17d50 <col:51, col:55> col:55 i 'int'
|-CXXMethodDecl 0x55cf2be17f80 <line:50:5, col:32> col:19 ename 'const String &(int) const'
| `-ParmVarDecl 0x55cf2be17ef0 <col:25, col:29> col:29 i 'int'
|-CXXMethodDecl 0x55cf2be180d0 <line:51:5, col:33> col:12 ename_context 'String (int) const'
| `-ParmVarDecl 0x55cf2be18040 <col:26, col:30> col:30 i 'int'
|-CXXMethodDecl 0x55cf2be18220 <line:52:5, col:29> col:12 elandmark 'String (int) const'
| `-ParmVarDecl 0x55cf2be18190 <col:22, col:26> col:26 i 'int'
|-CXXMethodDecl 0x55cf2be18370 <line:53:5, col:41> col:19 econfiguration 'const String &(int) const'
| `-ParmVarDecl 0x55cf2be182e0 <col:34, col:38> col:38 i 'int'
|-CXXMethodDecl 0x55cf2be18540 <line:54:5, col:54> col:10 set_econfiguration 'void (int, const String &)'
| |-ParmVarDecl 0x55cf2be18430 <col:29, col:33> col:33 i 'int'
| `-ParmVarDecl 0x55cf2be184a8 <col:36, col:50> col:50 conf 'const String &'
|-CXXMethodDecl 0x55cf2be18748 <line:56:5, col:63> col:14 find 'Element *(const String &, ErrorHandler *) const'
| |-ParmVarDecl 0x55cf2be18600 <col:19, col:33> col:33 name 'const String &'
| `-ParmVarDecl 0x55cf2be18678 <col:39, col:60> col:53 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x55cf2be5bbb0 <col:60> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x55cf2be5bb90 <col:60> 'int' 0
|-CXXMethodDecl 0x55cf2be19648 <line:57:5, col:79> col:14 used find 'Element *(const String &, String, ErrorHandler *) const'
| |-ParmVarDecl 0x55cf2be18808 <col:19, col:33> col:33 name 'const String &'
| |-ParmVarDecl 0x55cf2be18880 <col:39, col:46> col:46 context 'String' destroyed
| `-ParmVarDecl 0x55cf2be188f8 <col:55, col:76> col:69 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x55cf2be5bbe8 <col:76> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x55cf2be5bbc8 <col:76> 'int' 0
|-CXXMethodDecl 0x55cf2be198e8 <line:58:5, col:87> col:14 find 'Element *(const String &, const Element *, ErrorHandler *) const'
| |-ParmVarDecl 0x55cf2be19710 <col:19, col:33> col:33 name 'const String &'
| |-ParmVarDecl 0x55cf2be19788 <col:39, col:54> col:54 context 'const Element *'
| `-ParmVarDecl 0x55cf2be19800 <col:63, col:84> col:77 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x55cf2be5bc20 <col:84> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x55cf2be5bc00 <col:84> 'int' 0
|-CXXMethodDecl 0x55cf2be19c40 <line:60:5, col:76> col:9 used visit 'int (Element *, bool, int, RouterVisitor *) const'
| |-ParmVarDecl 0x55cf2be199b0 <col:15, col:24> col:24 e 'Element *'
| |-ParmVarDecl 0x55cf2be19a28 <col:27, col:32> col:32 isoutput 'bool'
| |-ParmVarDecl 0x55cf2be19aa8 <col:42, col:46> col:46 port 'int'
| `-ParmVarDecl 0x55cf2be19b48 <col:52, col:67> col:67 visitor 'RouterVisitor *'
|-CXXMethodDecl 0x55cf2be19ef0 <line:61:5, col:72> col:9 visit_downstream 'int (Element *, int, RouterVisitor *) const'
| |-ParmVarDecl 0x55cf2be19d10 <col:26, col:35> col:35 e 'Element *'
| |-ParmVarDecl 0x55cf2be19d90 <col:38, col:42> col:42 port 'int'
| `-ParmVarDecl 0x55cf2be19e08 <col:48, col:63> col:63 visitor 'RouterVisitor *'
|-CXXMethodDecl 0x55cf2be1a158 <line:62:5, col:70> col:9 visit_upstream 'int (Element *, int, RouterVisitor *) const'
| |-ParmVarDecl 0x55cf2be19fb8 <col:24, col:33> col:33 e 'Element *'
| |-ParmVarDecl 0x55cf2be1a038 <col:36, col:40> col:40 port 'int'
| `-ParmVarDecl 0x55cf2be1a0b0 <col:46, col:61> col:61 visitor 'RouterVisitor *'
|-CXXMethodDecl 0x55cf2be1a610 <line:64:5, col:126> col:9 downstream_elements 'int (Element *, int, ElementFilter *, Vector<Element *> &)'
| |-ParmVarDecl 0x55cf2be1a220 <col:29, col:38> col:38 e 'Element *'
| |-ParmVarDecl 0x55cf2be1a2a0 <col:41, col:45> col:45 port 'int'
| |-ParmVarDecl 0x55cf2be1a348 <col:51, col:66> col:66 filter 'ElementFilter *'
| |-ParmVarDecl 0x55cf2be1a4c0 <col:74, col:92> col:92 result 'Vector<Element *> &'
| `-DeprecatedAttr 0x55cf2be1a6d0 <col:115> "" ""
|-CXXMethodDecl 0x55cf2be1aa90 <line:65:5, col:124> col:9 upstream_elements 'int (Element *, int, ElementFilter *, Vector<Element *> &)'
| |-ParmVarDecl 0x55cf2be1a750 <col:27, col:36> col:36 e 'Element *'
| |-ParmVarDecl 0x55cf2be1a7d0 <col:39, col:43> col:43 port 'int'
| |-ParmVarDecl 0x55cf2be1a848 <col:49, col:64> col:64 filter 'ElementFilter *'
| |-ParmVarDecl 0x55cf2be1a990 <col:72, col:90> col:90 result 'Vector<Element *> &'
| `-DeprecatedAttr 0x55cf2be1ab50 <col:113> "" ""
|-CXXMethodDecl 0x55cf2be1aca0 <line:67:5, col:55> col:24 flow_code_override 'const char *(int) const' inline
| `-ParmVarDecl 0x55cf2be1abd8 <col:43, col:47> col:47 eindex 'int'
|-CXXMethodDecl 0x55cf2be1ae70 <line:68:5, col:68> col:10 set_flow_code_override 'void (int, const String &)'
| |-ParmVarDecl 0x55cf2be1ad60 <col:33, col:37> col:37 eindex 'int'
| `-ParmVarDecl 0x55cf2be1add8 <col:45, col:59> col:59 flow_code 'const String &'
|-CXXMethodDecl 0x55cf2be1b078 <line:72:5, col:72> col:27 handler 'const Handler *(const Element *, const String &)' static
| |-ParmVarDecl 0x55cf2be1af30 <col:35, col:50> col:50 e 'const Element *'
| `-ParmVarDecl 0x55cf2be1afa8 <col:53, col:67> col:67 hname 'const String &'
|-CXXMethodDecl 0x55cf2be1b478 <line:73:5, col:138> col:17 add_read_handler 'void (const Element *, const String &, ReadHandlerCallback, void *, uint32_t)' static
| |-ParmVarDecl 0x55cf2be1b138 <col:34, col:49> col:49 e 'const Element *'
| |-ParmVarDecl 0x55cf2be1b1b0 <col:52, col:66> col:66 hname 'const String &'
| |-ParmVarDecl 0x55cf2be1b228 <col:73, col:93> col:93 callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55cf2be1b2a8 <col:103, col:109> col:109 user_data 'void *'
| `-ParmVarDecl 0x55cf2be1b320 <col:120, col:137> col:129 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55cf2be5bc58 <col:137> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55cf2be5bc38 <col:137> 'int' 0
|-CXXMethodDecl 0x55cf2be1b888 <line:74:5, col:140> col:17 add_write_handler 'void (const Element *, const String &, WriteHandlerCallback, void *, uint32_t)' static
| |-ParmVarDecl 0x55cf2be1b550 <col:35, col:50> col:50 e 'const Element *'
| |-ParmVarDecl 0x55cf2be1b5c8 <col:53, col:67> col:67 hname 'const String &'
| |-ParmVarDecl 0x55cf2be1b640 <col:74, col:95> col:95 callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55cf2be1b6c0 <col:105, col:111> col:111 user_data 'void *'
| `-ParmVarDecl 0x55cf2be1b738 <col:122, col:139> col:131 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55cf2be5bc90 <col:139> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55cf2be5bc70 <col:139> 'int' 0
|-CXXMethodDecl 0x55cf2be1bd38 <line:75:5, col:161> col:17 set_handler 'void (const Element *, const String &, uint32_t, HandlerCallback, void *, void *)' static
| |-ParmVarDecl 0x55cf2be1b960 <col:29, col:44> col:44 e 'const Element *'
| |-ParmVarDecl 0x55cf2be1b9d8 <col:47, col:61> col:61 hname 'const String &'
| |-ParmVarDecl 0x55cf2be1ba50 <col:68, col:77> col:77 flags 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55cf2be1bac8 <col:84, col:100> col:100 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55cf2be1bb48 <col:110, col:133> col:116 read_user_data 'void *' cinit
| | `-ImplicitCastExpr 0x55cf2be5bcc8 <col:133> 'void *' <NullToPointer>
| |   `-IntegerLiteral 0x55cf2be5bca8 <col:133> 'int' 0
| `-ParmVarDecl 0x55cf2be1bbc8 <col:136, col:160> col:142 write_user_data 'void *' cinit
|   `-ImplicitCastExpr 0x55cf2be5bd00 <col:160> 'void *' <NullToPointer>
|     `-IntegerLiteral 0x55cf2be5bce0 <col:160> 'int' 0
|-CXXMethodDecl 0x55cf2be1c0d0 <line:76:5, col:117> col:16 set_handler_flags 'int (const Element *, const String &, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x55cf2be1be18 <col:34, col:49> col:49 e 'const Element *'
| |-ParmVarDecl 0x55cf2be1be90 <col:52, col:66> col:66 hname 'const String &'
| |-ParmVarDecl 0x55cf2be1bf08 <col:73, col:82> col:82 set_flags 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55cf2be1bf80 <col:93, col:116> col:102 clear_flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55cf2be5bd38 <col:116> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55cf2be5bd18 <col:116> 'int' 0
|-EnumDecl 0x55cf2be1c190 <line:78:5, col:46> col:5
| `-EnumConstantDecl 0x55cf2be1c290 <col:12, col:35> col:12 FIRST_GLOBAL_HANDLER 'Router::(anonymous enum at ../dummy_inc/click/router.hh:78:5)'
|   `-ImplicitCastExpr 0x55cf2be1c2e0 <col:35> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55cf2be1c270 <col:35> 'int' Int: 1073741824
|       `-IntegerLiteral 0x55cf2be1c250 <col:35> 'int' 1073741824
|-CXXMethodDecl 0x55cf2be1c460 <line:79:5, col:60> col:16 hindex 'int (const Element *, const String &)' static
| |-ParmVarDecl 0x55cf2be1c308 <col:23, col:38> col:38 e 'const Element *'
| `-ParmVarDecl 0x55cf2be1c380 <col:41, col:55> col:55 hname 'const String &'
|-CXXMethodDecl 0x55cf2be1c678 <line:80:5, col:67> col:27 handler 'const Handler *(const Router *, int)' static
| |-ParmVarDecl 0x55cf2be1c520 <col:35, col:49> col:49 router 'const Router *'
| `-ParmVarDecl 0x55cf2be1c5a0 <col:57, col:61> col:61 hindex 'int'
|-CXXMethodDecl 0x55cf2be1c9a8 <line:81:5, col:71> col:17 element_hindexes 'void (const Element *, Vector<int> &)' static
| |-ParmVarDecl 0x55cf2be1c738 <col:34, col:49> col:49 e 'const Element *'
| `-ParmVarDecl 0x55cf2be1c890 <col:52, col:65> col:65 result 'Vector<int> &'
|-CXXMethodDecl 0x55cf2be1cb30 <line:84:5, col:43> col:11 attachment 'void *(const String &) const'
| `-ParmVarDecl 0x55cf2be1ca68 <col:22, col:36> col:36 aname 'const String &'
|-CXXMethodDecl 0x55cf2be1ccb0 <line:85:5, col:48> col:12 force_attachment 'void *&(const String &)'
| `-ParmVarDecl 0x55cf2be1cbe8 <col:29, col:43> col:43 aname 'const String &'
|-CXXMethodDecl 0x55cf2be1cec0 <line:86:5, col:58> col:11 set_attachment 'void *(const String &, void *)'
| |-ParmVarDecl 0x55cf2be1cd68 <col:26, col:40> col:40 aname 'const String &'
| `-ParmVarDecl 0x55cf2be1cde8 <col:47, col:53> col:53 value 'void *'
|-CXXMethodDecl 0x55cf2be1d048 <line:88:5, col:63> col:19 chatter_channel 'ErrorHandler *(const String &) const'
| `-ParmVarDecl 0x55cf2be1cf80 <col:35, col:49> col:49 channel_name 'const String &'
|-CXXMethodDecl 0x55cf2be1d168 <line:89:5, col:43> col:27 arena_factory 'HashMap_ArenaFactory *() const'
|-CXXMethodDecl 0x55cf2be1d258 <line:91:5, col:40> col:25 thread_sched 'ThreadSched *() const' inline
|-CXXMethodDecl 0x55cf2be1d3c8 <line:92:5, col:56> col:17 set_thread_sched 'void (ThreadSched *)' inline
| `-ParmVarDecl 0x55cf2be1d308 <col:34, col:47> col:47 scheduler 'ThreadSched *'
|-CXXMethodDecl 0x55cf2be1d550 <line:93:5, col:49> col:16 home_thread_id 'int (const Element *) const' inline
| `-ParmVarDecl 0x55cf2be1d480 <col:31, col:46> col:46 e 'const Element *'
|-CXXMethodDecl 0x55cf2be1d758 <line:94:5, col:69> col:17 set_home_thread_id 'void (const Element *, int)' inline
| |-ParmVarDecl 0x55cf2be1d608 <col:36, col:51> col:51 e 'const Element *'
| `-ParmVarDecl 0x55cf2be1d688 <col:54, col:58> col:58 home_thread 'int'
|-CXXMethodDecl 0x55cf2be1d888 <line:98:5, col:34> col:22 name_info 'NameInfo *() const' inline
|-CXXMethodDecl 0x55cf2be1d978 <line:99:5, col:31> col:15 force_name_info 'NameInfo *()'
|-CXXMethodDecl 0x55cf2be1da38 <line:103:5, col:35> col:12 configuration_string 'String () const'
|-CXXMethodDecl 0x55cf2be1dc38 <line:104:5, col:68> col:10 unparse 'void (StringAccum &, const String &) const'
| |-ParmVarDecl 0x55cf2be1dae8 <col:18, col:31> col:31 sa 'StringAccum &'
| `-ParmVarDecl 0x55cf2be1db60 <col:35, col:65> col:49 indent 'const String &' cinit
|   `-ExprWithCleanups 0x55cf2be5bde8 <col:58, col:65> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x55cf2be5bdd0 <col:58, col:65> 'const String' lvalue
|       `-ImplicitCastExpr 0x55cf2be5bdb8 <col:58, col:65> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x55cf2be5bd98 <col:58, col:65> 'String' (CXXTemporary 0x55cf2be5bd98)
|           `-CXXTemporaryObjectExpr 0x55cf2be5bd60 <col:58, col:65> 'String' 'void ()'
|-CXXMethodDecl 0x55cf2be1de08 <line:105:5, col:81> col:10 unparse_requirements 'void (StringAccum &, const String &) const'
| |-ParmVarDecl 0x55cf2be1dcf8 <col:31, col:44> col:44 sa 'StringAccum &'
| `-ParmVarDecl 0x55cf2be1dd70 <col:48, col:78> col:62 indent 'const String &' cinit
|   `-ExprWithCleanups 0x55cf2be5be98 <col:71, col:78> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x55cf2be5be80 <col:71, col:78> 'const String' lvalue
|       `-ImplicitCastExpr 0x55cf2be5be68 <col:71, col:78> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x55cf2be5be48 <col:71, col:78> 'String' (CXXTemporary 0x55cf2be5be48)
|           `-CXXTemporaryObjectExpr 0x55cf2be5be10 <col:71, col:78> 'String' 'void ()'
|-CXXMethodDecl 0x55cf2be1dfd8 <line:106:5, col:81> col:10 unparse_declarations 'void (StringAccum &, const String &) const'
| |-ParmVarDecl 0x55cf2be1dec8 <col:31, col:44> col:44 sa 'StringAccum &'
| `-ParmVarDecl 0x55cf2be1df40 <col:48, col:78> col:62 indent 'const String &' cinit
|   `-ExprWithCleanups 0x55cf2be5bf48 <col:71, col:78> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x55cf2be5bf30 <col:71, col:78> 'const String' lvalue
|       `-ImplicitCastExpr 0x55cf2be5bf18 <col:71, col:78> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x55cf2be5bef8 <col:71, col:78> 'String' (CXXTemporary 0x55cf2be5bef8)
|           `-CXXTemporaryObjectExpr 0x55cf2be5bec0 <col:71, col:78> 'String' 'void ()'
|-CXXMethodDecl 0x55cf2be1e1a8 <line:107:5, col:80> col:10 unparse_connections 'void (StringAccum &, const String &) const'
| |-ParmVarDecl 0x55cf2be1e098 <col:30, col:43> col:43 sa 'StringAccum &'
| `-ParmVarDecl 0x55cf2be1e110 <col:47, col:77> col:61 indent 'const String &' cinit
|   `-ExprWithCleanups 0x55cf2be5bff8 <col:70, col:77> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x55cf2be5bfe0 <col:70, col:77> 'const String' lvalue
|       `-ImplicitCastExpr 0x55cf2be5bfc8 <col:70, col:77> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x55cf2be5bfa8 <col:70, col:77> 'String' (CXXTemporary 0x55cf2be5bfa8)
|           `-CXXTemporaryObjectExpr 0x55cf2be5bf70 <col:70, col:77> 'String' 'void ()'
|-CXXMethodDecl 0x55cf2be1e328 <line:109:5, col:51> col:12 element_ports_string 'String (const Element *) const'
| `-ParmVarDecl 0x55cf2be1e268 <col:33, col:48> col:48 e 'const Element *'
|-CXXConstructorDecl 0x55cf2be1e548 <line:115:5, col:55> col:5 Router 'void (const String &, Master *)'
| |-ParmVarDecl 0x55cf2be1e3e0 <col:12, col:26> col:26 configuration 'const String &'
| `-ParmVarDecl 0x55cf2be1e458 <col:41, col:49> col:49 master 'Master *'
|-CXXDestructorDecl 0x55cf2be1e648 <line:116:5, col:13> col:5 ~Router 'void ()' noexcept-unevaluated 0x55cf2be1e648
|-CXXMethodDecl 0x55cf2be1e750 <line:118:5, col:35> col:17 static_initialize 'void ()' static
|-CXXMethodDecl 0x55cf2be1e810 <line:119:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x55cf2be1e8d0 <line:121:5, col:21> col:17 use 'void ()' inline
|-CXXMethodDecl 0x55cf2be1e990 <line:122:5, col:16> col:10 unuse 'void ()'
|-CXXMethodDecl 0x55cf2be1eb88 <line:124:5, col:65> col:10 add_requirement 'void (const String &, const String &)'
| |-ParmVarDecl 0x55cf2be1ea40 <col:26, col:40> col:40 type 'const String &'
| `-ParmVarDecl 0x55cf2be1eab8 <col:46, col:60> col:60 value 'const String &'
|-CXXMethodDecl 0x55cf2be1ef40 <line:125:5, col:112> col:9 add_element 'int (Element *, const String &, const String &, const String &, unsigned int)'
| |-ParmVarDecl 0x55cf2be1ec48 <col:21, col:30> col:30 e 'Element *'
| |-ParmVarDecl 0x55cf2be1ecc0 <col:33, col:47> col:47 name 'const String &'
| |-ParmVarDecl 0x55cf2be1ed38 <col:53, col:67> col:67 conf 'const String &'
| |-ParmVarDecl 0x55cf2be1edb0 <col:73, col:87> col:87 filename 'const String &'
| `-ParmVarDecl 0x55cf2be1ee30 <col:97, col:106> col:106 lineno 'unsigned int'
|-CXXMethodDecl 0x55cf2be1f2a0 <line:126:5, col:76> col:9 add_connection 'int (int, int, int, int)'
| |-ParmVarDecl 0x55cf2be1f020 <col:24, col:28> col:28 from_idx 'int'
| |-ParmVarDecl 0x55cf2be1f0a0 <col:38, col:42> col:42 from_port 'int'
| |-ParmVarDecl 0x55cf2be1f120 <col:53, col:57> col:57 to_idx 'int'
| `-ParmVarDecl 0x55cf2be1f1a0 <col:65, col:69> col:69 to_port 'int'
|-CXXMethodDecl 0x55cf2be1f380 <line:131:5, col:37> col:20 hotswap_router 'Router *() const' inline
|-CXXMethodDecl 0x55cf2be1f4c0 <line:132:5, col:43> col:10 set_hotswap_router 'void (Router *)'
| `-ParmVarDecl 0x55cf2be1f430 <col:29, col:37> col:37 router 'Router *'
|-CXXMethodDecl 0x55cf2be1f610 <line:134:5, col:38> col:9 initialize 'int (ErrorHandler *)'
| `-ParmVarDecl 0x55cf2be1f578 <col:20, col:34> col:34 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55cf2be1f818 <line:135:5, col:54> col:10 used activate 'void (bool, ErrorHandler *)'
| |-ParmVarDecl 0x55cf2be1f6c8 <col:19, col:24> col:24 foreground 'bool'
| `-ParmVarDecl 0x55cf2be1f740 <col:36, col:50> col:50 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55cf2be1f968 <line:136:5, col:44> col:17 activate 'void (ErrorHandler *)' inline
| `-ParmVarDecl 0x55cf2be1f8d8 <col:26, col:40> col:40 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55cf2be1fab0 <line:137:5, col:47> col:17 set_foreground 'void (bool)' inline
| `-ParmVarDecl 0x55cf2be1fa20 <col:32, col:37> col:37 foreground 'bool'
|-CXXMethodDecl 0x55cf2be1fcf0 <line:139:5, col:69> col:9 new_notifier_signal 'int (const char *, NotifierSignal &)'
| |-ParmVarDecl 0x55cf2be1fb70 <col:29, col:41> col:41 name 'const char *'
| `-ParmVarDecl 0x55cf2be1fc18 <col:47, col:63> col:63 signal 'NotifierSignal &'
|-CXXMethodDecl 0x55cf2be1fe78 <line:140:5, col:64> col:12 notifier_signal_name 'String (const atomic_uint32_t *) const'
| `-ParmVarDecl 0x55cf2be1fdb0 <col:33, col:56> col:56 signal 'const atomic_uint32_t *'
|-CXXRecordDecl 0x55cf2be1ff20 <line:145:5, line:167:5> line:145:12 referenced struct Port definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55cf2be20038 <col:5, col:12> col:12 implicit referenced struct Port
| |-FieldDecl 0x55cf2be200e0 <line:146:9, col:13> col:13 referenced idx 'int'
| |-FieldDecl 0x55cf2be20148 <line:147:9, col:13> col:13 referenced port 'int'
| |-CXXConstructorDecl 0x55cf2be20200 <line:149:9, line:150:9> line:149:9 used Port 'void ()'
| | `-CompoundStmt 0x55cf2be5c020 <col:16, line:150:9>
| |-CXXConstructorDecl 0x55cf2be203d8 <line:151:9, line:153:9> line:151:9 used Port 'void (int, int)'
| | |-ParmVarDecl 0x55cf2be202c0 <col:14, col:18> col:18 used i 'int'
| | |-ParmVarDecl 0x55cf2be20340 <col:21, col:25> col:25 used p 'int'
| | |-CXXCtorInitializer Field 0x55cf2be200e0 'idx' 'int'
| | | `-ImplicitCastExpr 0x55cf2be5c070 <line:152:19> 'int' <LValueToRValue>
| | |   `-DeclRefExpr 0x55cf2be5c030 <col:19> 'int' lvalue ParmVar 0x55cf2be202c0 'i' 'int'
| | |-CXXCtorInitializer Field 0x55cf2be20148 'port' 'int'
| | | `-ImplicitCastExpr 0x55cf2be5c0f0 <col:28> 'int' <LValueToRValue>
| | |   `-DeclRefExpr 0x55cf2be5c0b0 <col:28> 'int' lvalue ParmVar 0x55cf2be20340 'p' 'int'
| | `-CompoundStmt 0x55cf2be5c140 <col:31, line:153:9>
| |-CXXMethodDecl 0x55cf2be205b8 <line:155:9, line:157:9> line:155:14 used operator== 'bool (const Router::Port &) const'
| | |-ParmVarDecl 0x55cf2be204c8 <col:25, col:37> col:37 used x 'const Router::Port &'
| | `-CompoundStmt 0x55cf2be5c340 <col:46, line:157:9>
| |   `-ReturnStmt 0x55cf2be5c330 <line:156:13, col:46>
| |     `-BinaryOperator 0x55cf2be5c310 <col:20, col:46> 'bool' '&&'
| |       |-BinaryOperator 0x55cf2be5c210 <col:20, col:29> 'bool' '=='
| |       | |-ImplicitCastExpr 0x55cf2be5c1e0 <col:20> 'int' <LValueToRValue>
| |       | | `-MemberExpr 0x55cf2be5c160 <col:20> 'const int' lvalue ->idx 0x55cf2be200e0
| |       | |   `-CXXThisExpr 0x55cf2be5c150 <col:20> 'const Router::Port *' implicit this
| |       | `-ImplicitCastExpr 0x55cf2be5c1f8 <col:27, col:29> 'int' <LValueToRValue>
| |       |   `-MemberExpr 0x55cf2be5c1b0 <col:27, col:29> 'const int' lvalue .idx 0x55cf2be200e0
| |       |     `-DeclRefExpr 0x55cf2be5c190 <col:27> 'const Router::Port' lvalue ParmVar 0x55cf2be204c8 'x' 'const Router::Port &'
| |       `-BinaryOperator 0x55cf2be5c2f0 <col:36, col:46> 'bool' '=='
| |         |-ImplicitCastExpr 0x55cf2be5c2c0 <col:36> 'int' <LValueToRValue>
| |         | `-MemberExpr 0x55cf2be5c240 <col:36> 'const int' lvalue ->port 0x55cf2be20148
| |         |   `-CXXThisExpr 0x55cf2be5c230 <col:36> 'const Router::Port *' implicit this
| |         `-ImplicitCastExpr 0x55cf2be5c2d8 <col:44, col:46> 'int' <LValueToRValue>
| |           `-MemberExpr 0x55cf2be5c290 <col:44, col:46> 'const int' lvalue .port 0x55cf2be20148
| |             `-DeclRefExpr 0x55cf2be5c270 <col:44> 'const Router::Port' lvalue ParmVar 0x55cf2be204c8 'x' 'const Router::Port &'
| |-CXXMethodDecl 0x55cf2be20700 <line:158:9, line:160:9> line:158:14 operator!= 'bool (const Router::Port &) const'
| | |-ParmVarDecl 0x55cf2be20670 <col:25, col:37> col:37 used x 'const Router::Port &'
| | `-CompoundStmt 0x55cf2be5c548 <col:46, line:160:9>
| |   `-ReturnStmt 0x55cf2be5c538 <line:159:13, col:46>
| |     `-BinaryOperator 0x55cf2be5c518 <col:20, col:46> 'bool' '||'
| |       |-BinaryOperator 0x55cf2be5c418 <col:20, col:29> 'bool' '!='
| |       | |-ImplicitCastExpr 0x55cf2be5c3e8 <col:20> 'int' <LValueToRValue>
| |       | | `-MemberExpr 0x55cf2be5c368 <col:20> 'const int' lvalue ->idx 0x55cf2be200e0
| |       | |   `-CXXThisExpr 0x55cf2be5c358 <col:20> 'const Router::Port *' implicit this
| |       | `-ImplicitCastExpr 0x55cf2be5c400 <col:27, col:29> 'int' <LValueToRValue>
| |       |   `-MemberExpr 0x55cf2be5c3b8 <col:27, col:29> 'const int' lvalue .idx 0x55cf2be200e0
| |       |     `-DeclRefExpr 0x55cf2be5c398 <col:27> 'const Router::Port' lvalue ParmVar 0x55cf2be20670 'x' 'const Router::Port &'
| |       `-BinaryOperator 0x55cf2be5c4f8 <col:36, col:46> 'bool' '!='
| |         |-ImplicitCastExpr 0x55cf2be5c4c8 <col:36> 'int' <LValueToRValue>
| |         | `-MemberExpr 0x55cf2be5c448 <col:36> 'const int' lvalue ->port 0x55cf2be20148
| |         |   `-CXXThisExpr 0x55cf2be5c438 <col:36> 'const Router::Port *' implicit this
| |         `-ImplicitCastExpr 0x55cf2be5c4e0 <col:44, col:46> 'int' <LValueToRValue>
| |           `-MemberExpr 0x55cf2be5c498 <col:44, col:46> 'const int' lvalue .port 0x55cf2be20148
| |             `-DeclRefExpr 0x55cf2be5c478 <col:44> 'const Router::Port' lvalue ParmVar 0x55cf2be20670 'x' 'const Router::Port &'
| |-CXXMethodDecl 0x55cf2be20848 <line:161:9, line:163:9> line:161:14 used operator< 'bool (const Router::Port &) const'
| | |-ParmVarDecl 0x55cf2be207b8 <col:24, col:36> col:36 used x 'const Router::Port &'
| | `-CompoundStmt 0x55cf2be5c870 <col:45, line:163:9>
| |   `-ReturnStmt 0x55cf2be5c860 <line:162:13, col:65>
| |     `-BinaryOperator 0x55cf2be5c840 <col:20, col:65> 'bool' '||'
| |       |-BinaryOperator 0x55cf2be5c620 <col:20, col:28> 'bool' '<'
| |       | |-ImplicitCastExpr 0x55cf2be5c5f0 <col:20> 'int' <LValueToRValue>
| |       | | `-MemberExpr 0x55cf2be5c570 <col:20> 'const int' lvalue ->idx 0x55cf2be200e0
| |       | |   `-CXXThisExpr 0x55cf2be5c560 <col:20> 'const Router::Port *' implicit this
| |       | `-ImplicitCastExpr 0x55cf2be5c608 <col:26, col:28> 'int' <LValueToRValue>
| |       |   `-MemberExpr 0x55cf2be5c5c0 <col:26, col:28> 'const int' lvalue .idx 0x55cf2be200e0
| |       |     `-DeclRefExpr 0x55cf2be5c5a0 <col:26> 'const Router::Port' lvalue ParmVar 0x55cf2be207b8 'x' 'const Router::Port &'
| |       `-ParenExpr 0x55cf2be5c820 <col:35, col:65> 'bool'
| |         `-BinaryOperator 0x55cf2be5c800 <col:36, col:61> 'bool' '&&'
| |           |-BinaryOperator 0x55cf2be5c700 <col:36, col:45> 'bool' '=='
| |           | |-ImplicitCastExpr 0x55cf2be5c6d0 <col:36> 'int' <LValueToRValue>
| |           | | `-MemberExpr 0x55cf2be5c650 <col:36> 'const int' lvalue ->idx 0x55cf2be200e0
| |           | |   `-CXXThisExpr 0x55cf2be5c640 <col:36> 'const Router::Port *' implicit this
| |           | `-ImplicitCastExpr 0x55cf2be5c6e8 <col:43, col:45> 'int' <LValueToRValue>
| |           |   `-MemberExpr 0x55cf2be5c6a0 <col:43, col:45> 'const int' lvalue .idx 0x55cf2be200e0
| |           |     `-DeclRefExpr 0x55cf2be5c680 <col:43> 'const Router::Port' lvalue ParmVar 0x55cf2be207b8 'x' 'const Router::Port &'
| |           `-BinaryOperator 0x55cf2be5c7e0 <col:52, col:61> 'bool' '<'
| |             |-ImplicitCastExpr 0x55cf2be5c7b0 <col:52> 'int' <LValueToRValue>
| |             | `-MemberExpr 0x55cf2be5c730 <col:52> 'const int' lvalue ->port 0x55cf2be20148
| |             |   `-CXXThisExpr 0x55cf2be5c720 <col:52> 'const Router::Port *' implicit this
| |             `-ImplicitCastExpr 0x55cf2be5c7c8 <col:59, col:61> 'int' <LValueToRValue>
| |               `-MemberExpr 0x55cf2be5c780 <col:59, col:61> 'const int' lvalue .port 0x55cf2be20148
| |                 `-DeclRefExpr 0x55cf2be5c760 <col:59> 'const Router::Port' lvalue ParmVar 0x55cf2be207b8 'x' 'const Router::Port &'
| |-CXXMethodDecl 0x55cf2be20990 <line:164:9, line:166:9> line:164:14 operator<= 'bool (const Router::Port &) const'
| | |-ParmVarDecl 0x55cf2be20900 <col:25, col:37> col:37 used x 'const Router::Port &'
| | `-CompoundStmt 0x55cf2be5cb98 <col:46, line:166:9>
| |   `-ReturnStmt 0x55cf2be5cb88 <line:165:13, col:66>
| |     `-BinaryOperator 0x55cf2be5cb68 <col:20, col:66> 'bool' '||'
| |       |-BinaryOperator 0x55cf2be5c948 <col:20, col:28> 'bool' '<'
| |       | |-ImplicitCastExpr 0x55cf2be5c918 <col:20> 'int' <LValueToRValue>
| |       | | `-MemberExpr 0x55cf2be5c898 <col:20> 'const int' lvalue ->idx 0x55cf2be200e0
| |       | |   `-CXXThisExpr 0x55cf2be5c888 <col:20> 'const Router::Port *' implicit this
| |       | `-ImplicitCastExpr 0x55cf2be5c930 <col:26, col:28> 'int' <LValueToRValue>
| |       |   `-MemberExpr 0x55cf2be5c8e8 <col:26, col:28> 'const int' lvalue .idx 0x55cf2be200e0
| |       |     `-DeclRefExpr 0x55cf2be5c8c8 <col:26> 'const Router::Port' lvalue ParmVar 0x55cf2be20900 'x' 'const Router::Port &'
| |       `-ParenExpr 0x55cf2be5cb48 <col:35, col:66> 'bool'
| |         `-BinaryOperator 0x55cf2be5cb28 <col:36, col:62> 'bool' '&&'
| |           |-BinaryOperator 0x55cf2be5ca28 <col:36, col:45> 'bool' '=='
| |           | |-ImplicitCastExpr 0x55cf2be5c9f8 <col:36> 'int' <LValueToRValue>
| |           | | `-MemberExpr 0x55cf2be5c978 <col:36> 'const int' lvalue ->idx 0x55cf2be200e0
| |           | |   `-CXXThisExpr 0x55cf2be5c968 <col:36> 'const Router::Port *' implicit this
| |           | `-ImplicitCastExpr 0x55cf2be5ca10 <col:43, col:45> 'int' <LValueToRValue>
| |           |   `-MemberExpr 0x55cf2be5c9c8 <col:43, col:45> 'const int' lvalue .idx 0x55cf2be200e0
| |           |     `-DeclRefExpr 0x55cf2be5c9a8 <col:43> 'const Router::Port' lvalue ParmVar 0x55cf2be20900 'x' 'const Router::Port &'
| |           `-BinaryOperator 0x55cf2be5cb08 <col:52, col:62> 'bool' '<='
| |             |-ImplicitCastExpr 0x55cf2be5cad8 <col:52> 'int' <LValueToRValue>
| |             | `-MemberExpr 0x55cf2be5ca58 <col:52> 'const int' lvalue ->port 0x55cf2be20148
| |             |   `-CXXThisExpr 0x55cf2be5ca48 <col:52> 'const Router::Port *' implicit this
| |             `-ImplicitCastExpr 0x55cf2be5caf0 <col:60, col:62> 'int' <LValueToRValue>
| |               `-MemberExpr 0x55cf2be5caa8 <col:60, col:62> 'const int' lvalue .port 0x55cf2be20148
| |                 `-DeclRefExpr 0x55cf2be5ca88 <col:60> 'const Router::Port' lvalue ParmVar 0x55cf2be20900 'x' 'const Router::Port &'
| |-CXXConstructorDecl 0x55cf2be5cbb0 <line:145:12> col:12 implicit constexpr Port 'void (const Router::Port &)' inline default trivial noexcept-unevaluated 0x55cf2be5cbb0
| | `-ParmVarDecl 0x55cf2be5ccc8 <col:12> col:12 'const Router::Port &'
| |-CXXConstructorDecl 0x55cf2be5cd68 <col:12> col:12 implicit constexpr Port 'void (Router::Port &&)' inline default trivial noexcept-unevaluated 0x55cf2be5cd68
| | `-ParmVarDecl 0x55cf2be5ce78 <col:12> col:12 'Router::Port &&'
| |-CXXDestructorDecl 0x55cf2be5cf10 <col:12> col:12 implicit referenced ~Port 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x55cf2be5d1e0 <col:12> col:12 implicit operator= 'Router::Port &(const Router::Port &)' inline default trivial noexcept-unevaluated 0x55cf2be5d1e0
| | `-ParmVarDecl 0x55cf2be5d2e8 <col:12> col:12 'const Router::Port &'
| `-CXXMethodDecl 0x55cf2be5d358 <col:12> col:12 implicit used operator= 'Router::Port &(Router::Port &&) noexcept' inline default trivial
|   |-ParmVarDecl 0x55cf2be5d468 <col:12> col:12 used 'Router::Port &&'
|   `-CompoundStmt 0x55cf2be5d788 <col:12>
|     |-BinaryOperator 0x55cf2be5d628 <col:12> 'int' lvalue '='
|     | |-MemberExpr 0x55cf2be5d5e0 <col:12> 'int' lvalue ->idx 0x55cf2be200e0
|     | | `-CXXThisExpr 0x55cf2be5d5d0 <col:12> 'Router::Port *' this
|     | `-ImplicitCastExpr 0x55cf2be5d610 <col:12> 'int' <LValueToRValue>
|     |   `-MemberExpr 0x55cf2be5d5a0 <col:12> 'int' xvalue .idx 0x55cf2be200e0
|     |     `-CXXStaticCastExpr 0x55cf2be5d570 <col:12> 'Router::Port' xvalue static_cast<struct Router::Port &&> <NoOp>
|     |       `-DeclRefExpr 0x55cf2be5d540 <col:12> 'Router::Port' lvalue ParmVar 0x55cf2be5d468 '' 'Router::Port &&'
|     |-BinaryOperator 0x55cf2be5d730 <col:12> 'int' lvalue '='
|     | |-MemberExpr 0x55cf2be5d6e8 <col:12> 'int' lvalue ->port 0x55cf2be20148
|     | | `-CXXThisExpr 0x55cf2be5d6d8 <col:12> 'Router::Port *' this
|     | `-ImplicitCastExpr 0x55cf2be5d718 <col:12> 'int' <LValueToRValue>
|     |   `-MemberExpr 0x55cf2be5d6a8 <col:12> 'int' xvalue .port 0x55cf2be20148
|     |     `-CXXStaticCastExpr 0x55cf2be5d678 <col:12> 'Router::Port' xvalue static_cast<struct Router::Port &&> <NoOp>
|     |       `-DeclRefExpr 0x55cf2be5d648 <col:12> 'Router::Port' lvalue ParmVar 0x55cf2be5d468 '' 'Router::Port &&'
|     `-ReturnStmt 0x55cf2be5d778 <col:12>
|       `-UnaryOperator 0x55cf2be5d760 <col:12> 'Router::Port' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55cf2be5d750 <col:12> 'Router::Port *' this
|-CXXRecordDecl 0x55cf2be20a50 <line:169:5, line:194:5> line:169:12 referenced struct Connection definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55cf2be20b68 <col:5, col:12> col:12 implicit referenced struct Connection
| |-FieldDecl 0x55cf2be20d58 <line:170:9, col:17> col:14 referenced p 'Router::Port [2]'
| |-CXXConstructorDecl 0x55cf2be20e10 <line:172:9, line:173:9> line:172:9 Connection 'void ()'
| | |-CXXCtorInitializer Field 0x55cf2be20d58 'p' 'Router::Port [2]'
| | | `-CXXConstructExpr 0x55cf2be5cee8 <col:9> 'Router::Port [2]' 'void ()'
| | `-CompoundStmt 0x55cf2be5d020 <col:22, line:173:9>
| |-CXXConstructorDecl 0x55cf2be21148 <line:174:9, line:177:9> line:174:9 Connection 'void (int, int, int, int)'
| | |-ParmVarDecl 0x55cf2be20ed0 <col:20, col:24> col:24 used from_idx 'int'
| | |-ParmVarDecl 0x55cf2be20f50 <col:34, col:38> col:38 used from_port 'int'
| | |-ParmVarDecl 0x55cf2be20fd0 <col:49, col:53> col:53 used to_idx 'int'
| | |-ParmVarDecl 0x55cf2be21050 <col:61, col:65> col:65 used to_port 'int'
| | |-CXXCtorInitializer Field 0x55cf2be20d58 'p' 'Router::Port [2]'
| | | `-CXXConstructExpr 0x55cf2be5d030 <col:9> 'Router::Port [2]' 'void ()'
| | `-CompoundStmt 0x55cf2be5da68 <col:74, line:177:9>
| |   |-ExprWithCleanups 0x55cf2be5d858 <line:175:13, col:40> 'Router::Port' lvalue
| |   | `-CXXOperatorCallExpr 0x55cf2be5d820 <col:13, col:40> 'Router::Port' lvalue
| |   |   |-ImplicitCastExpr 0x55cf2be5d808 <col:18> 'Router::Port &(*)(Router::Port &&) noexcept' <FunctionToPointerDecay>
| |   |   | `-DeclRefExpr 0x55cf2be5d4f0 <col:18> 'Router::Port &(Router::Port &&) noexcept' lvalue CXXMethod 0x55cf2be5d358 'operator=' 'Router::Port &(Router::Port &&) noexcept'
| |   |   |-ArraySubscriptExpr 0x55cf2be5d100 <col:13, col:16> 'Router::Port' lvalue
| |   |   | |-ImplicitCastExpr 0x55cf2be5d0e8 <col:13> 'Router::Port *' <ArrayToPointerDecay>
| |   |   | | `-MemberExpr 0x55cf2be5d098 <col:13> 'Router::Port [2]' lvalue ->p 0x55cf2be20d58
| |   |   | |   `-CXXThisExpr 0x55cf2be5d088 <col:13> 'Router::Connection *' implicit this
| |   |   | `-IntegerLiteral 0x55cf2be5d0c8 <col:15> 'int' 0
| |   |   `-MaterializeTemporaryExpr 0x55cf2be5d4d8 <col:20, col:40> 'Router::Port' xvalue
| |   |     `-CXXTemporaryObjectExpr 0x55cf2be5d1a0 <col:20, col:40> 'Router::Port' 'void (int, int)'
| |   |       |-ImplicitCastExpr 0x55cf2be5d170 <col:25> 'int' <LValueToRValue>
| |   |       | `-DeclRefExpr 0x55cf2be5d130 <col:25> 'int' lvalue ParmVar 0x55cf2be20fd0 'to_idx' 'int'
| |   |       `-ImplicitCastExpr 0x55cf2be5d188 <col:33> 'int' <LValueToRValue>
| |   |         `-DeclRefExpr 0x55cf2be5d150 <col:33> 'int' lvalue ParmVar 0x55cf2be21050 'to_port' 'int'
| |   `-ExprWithCleanups 0x55cf2be5da50 <line:176:13, col:44> 'Router::Port' lvalue
| |     `-CXXOperatorCallExpr 0x55cf2be5da18 <col:13, col:44> 'Router::Port' lvalue
| |       |-ImplicitCastExpr 0x55cf2be5da00 <col:18> 'Router::Port &(*)(Router::Port &&) noexcept' <FunctionToPointerDecay>
| |       | `-DeclRefExpr 0x55cf2be5d9e0 <col:18> 'Router::Port &(Router::Port &&) noexcept' lvalue CXXMethod 0x55cf2be5d358 'operator=' 'Router::Port &(Router::Port &&) noexcept'
| |       |-ArraySubscriptExpr 0x55cf2be5d8e8 <col:13, col:16> 'Router::Port' lvalue
| |       | |-ImplicitCastExpr 0x55cf2be5d8d0 <col:13> 'Router::Port *' <ArrayToPointerDecay>
| |       | | `-MemberExpr 0x55cf2be5d880 <col:13> 'Router::Port [2]' lvalue ->p 0x55cf2be20d58
| |       | |   `-CXXThisExpr 0x55cf2be5d870 <col:13> 'Router::Connection *' implicit this
| |       | `-IntegerLiteral 0x55cf2be5d8b0 <col:15> 'int' 1
| |       `-MaterializeTemporaryExpr 0x55cf2be5d9c8 <col:20, col:44> 'Router::Port' xvalue
| |         `-CXXTemporaryObjectExpr 0x55cf2be5d988 <col:20, col:44> 'Router::Port' 'void (int, int)'
| |           |-ImplicitCastExpr 0x55cf2be5d958 <col:25> 'int' <LValueToRValue>
| |           | `-DeclRefExpr 0x55cf2be5d918 <col:25> 'int' lvalue ParmVar 0x55cf2be20ed0 'from_idx' 'int'
| |           `-ImplicitCastExpr 0x55cf2be5d970 <col:35> 'int' <LValueToRValue>
| |             `-DeclRefExpr 0x55cf2be5d938 <col:35> 'int' lvalue ParmVar 0x55cf2be20f50 'from_port' 'int'
| |-CXXMethodDecl 0x55cf2be21318 <line:179:9, line:182:9> line:179:21 operator[] 'const Router::Port &(int) const'
| | |-ParmVarDecl 0x55cf2be21228 <col:32, col:36> col:36 used i 'int'
| | `-CompoundStmt 0x55cf2be61dd8 <col:45, line:182:9>
| |   |-ParenExpr 0x55cf2be61cc0 <line:180:13, col:169> 'void'
| |   | `-ConditionalOperator 0x55cf2be5ded8 <col:14, col:168> 'void'
| |   |   |-CXXStaticCastExpr 0x55cf2be5dba8 <col:14, col:49> 'bool' static_cast<_Bool> <NoOp>
| |   |   | `-BinaryOperator 0x55cf2be5db78 <col:34, col:48> 'bool' '&&'
| |   |   |   |-BinaryOperator 0x55cf2be5dae0 <col:34, col:39> 'bool' '>='
| |   |   |   | |-ImplicitCastExpr 0x55cf2be5dac8 <col:34> 'int' <LValueToRValue>
| |   |   |   | | `-DeclRefExpr 0x55cf2be5da88 <col:34> 'int' lvalue ParmVar 0x55cf2be21228 'i' 'int'
| |   |   |   | `-IntegerLiteral 0x55cf2be5daa8 <col:39> 'int' 0
| |   |   |   `-BinaryOperator 0x55cf2be5db58 <col:44, col:48> 'bool' '<'
| |   |   |     |-ImplicitCastExpr 0x55cf2be5db40 <col:44> 'int' <LValueToRValue>
| |   |   |     | `-DeclRefExpr 0x55cf2be5db00 <col:44> 'int' lvalue ParmVar 0x55cf2be21228 'i' 'int'
| |   |   |     `-IntegerLiteral 0x55cf2be5db20 <col:48> 'int' 2
| |   |   |-CXXFunctionalCastExpr 0x55cf2be5dc08 <col:53, col:60> 'void' functional cast to void <ToVoid>
| |   |   | `-IntegerLiteral 0x55cf2be5dbe8 <col:59> 'int' 0
| |   |   `-CallExpr 0x55cf2be5de38 <col:64, col:168> 'void'
| |   |     |-ImplicitCastExpr 0x55cf2be5de20 <col:64> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x55cf2be5de00 <col:64> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55cf2b7f8810 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
| |   |     |-ImplicitCastExpr 0x55cf2be5de78 <col:79> 'const char *' <ArrayToPointerDecay>
| |   |     | `-StringLiteral 0x55cf2be5dc78 <col:79> 'const char [16]' lvalue "i >= 0 && i < 2"
| |   |     |-ImplicitCastExpr 0x55cf2be5de90 <col:98> 'const char *' <ArrayToPointerDecay>
| |   |     | `-StringLiteral 0x55cf2be5dca0 <col:98> 'const char [29]' lvalue "../dummy_inc/click/router.hh"
| |   |     |-ImplicitCastExpr 0x55cf2be5dea8 <col:130> 'unsigned int' <IntegralCast>
| |   |     | `-IntegerLiteral 0x55cf2be5dcd8 <col:130> 'int' 180
| |   |     `-ImplicitCastExpr 0x55cf2be5dec0 <col:135, col:149> 'const char *' <ArrayToPointerDecay>
| |   |       `-UnaryOperator 0x55cf2be5dde8 <col:135, col:149> 'const char [62]' lvalue prefix '__extension__' cannot overflow
| |   |         `-PredefinedExpr 0x55cf2be5ddd0 <col:149> 'const char [62]' lvalue __PRETTY_FUNCTION__
| |   |           `-StringLiteral 0x55cf2be5dd78 <col:149> 'const char [62]' lvalue "const Router::Port &Router::Connection::operator[](int) const"
| |   `-ReturnStmt 0x55cf2be61dc8 <line:181:13, col:23>
| |     `-ArraySubscriptExpr 0x55cf2be61da8 <col:20, col:23> 'const Router::Port' lvalue
| |       |-ImplicitCastExpr 0x55cf2be61d78 <col:20> 'const Router::Port *' <ArrayToPointerDecay>
| |       | `-MemberExpr 0x55cf2be61cf0 <col:20> 'Router::Port const[2]' lvalue ->p 0x55cf2be20d58
| |       |   `-CXXThisExpr 0x55cf2be61ce0 <col:20> 'const Router::Connection *' implicit this
| |       `-ImplicitCastExpr 0x55cf2be61d90 <col:22> 'int' <LValueToRValue>
| |         `-DeclRefExpr 0x55cf2be61d20 <col:22> 'int' lvalue ParmVar 0x55cf2be21228 'i' 'int'
| |-CXXMethodDecl 0x55cf2be214c8 <line:183:9, line:186:9> line:183:15 operator[] 'Router::Port &(int)'
| | |-ParmVarDecl 0x55cf2be213d8 <col:26, col:30> col:30 used i 'int'
| | `-CompoundStmt 0x55cf2be62350 <col:33, line:186:9>
| |   |-ParenExpr 0x55cf2be62270 <line:184:13, col:169> 'void'
| |   | `-ConditionalOperator 0x55cf2be62240 <col:14, col:168> 'void'
| |   |   |-CXXStaticCastExpr 0x55cf2be61f18 <col:14, col:49> 'bool' static_cast<_Bool> <NoOp>
| |   |   | `-BinaryOperator 0x55cf2be61ee8 <col:34, col:48> 'bool' '&&'
| |   |   |   |-BinaryOperator 0x55cf2be61e50 <col:34, col:39> 'bool' '>='
| |   |   |   | |-ImplicitCastExpr 0x55cf2be61e38 <col:34> 'int' <LValueToRValue>
| |   |   |   | | `-DeclRefExpr 0x55cf2be61df8 <col:34> 'int' lvalue ParmVar 0x55cf2be213d8 'i' 'int'
| |   |   |   | `-IntegerLiteral 0x55cf2be61e18 <col:39> 'int' 0
| |   |   |   `-BinaryOperator 0x55cf2be61ec8 <col:44, col:48> 'bool' '<'
| |   |   |     |-ImplicitCastExpr 0x55cf2be61eb0 <col:44> 'int' <LValueToRValue>
| |   |   |     | `-DeclRefExpr 0x55cf2be61e70 <col:44> 'int' lvalue ParmVar 0x55cf2be213d8 'i' 'int'
| |   |   |     `-IntegerLiteral 0x55cf2be61e90 <col:48> 'int' 2
| |   |   |-CXXFunctionalCastExpr 0x55cf2be61f78 <col:53, col:60> 'void' functional cast to void <ToVoid>
| |   |   | `-IntegerLiteral 0x55cf2be61f58 <col:59> 'int' 0
| |   |   `-CallExpr 0x55cf2be621a0 <col:64, col:168> 'void'
| |   |     |-ImplicitCastExpr 0x55cf2be62188 <col:64> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x55cf2be62168 <col:64> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55cf2b7f8810 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
| |   |     |-ImplicitCastExpr 0x55cf2be621e0 <col:79> 'const char *' <ArrayToPointerDecay>
| |   |     | `-StringLiteral 0x55cf2be61fe8 <col:79> 'const char [16]' lvalue "i >= 0 && i < 2"
| |   |     |-ImplicitCastExpr 0x55cf2be621f8 <col:98> 'const char *' <ArrayToPointerDecay>
| |   |     | `-StringLiteral 0x55cf2be62010 <col:98> 'const char [29]' lvalue "../dummy_inc/click/router.hh"
| |   |     |-ImplicitCastExpr 0x55cf2be62210 <col:130> 'unsigned int' <IntegralCast>
| |   |     | `-IntegerLiteral 0x55cf2be62048 <col:130> 'int' 184
| |   |     `-ImplicitCastExpr 0x55cf2be62228 <col:135, col:149> 'const char *' <ArrayToPointerDecay>
| |   |       `-UnaryOperator 0x55cf2be62150 <col:135, col:149> 'const char [50]' lvalue prefix '__extension__' cannot overflow
| |   |         `-PredefinedExpr 0x55cf2be62138 <col:149> 'const char [50]' lvalue __PRETTY_FUNCTION__
| |   |           `-StringLiteral 0x55cf2be620e8 <col:149> 'const char [50]' lvalue "Router::Port &Router::Connection::operator[](int)"
| |   `-ReturnStmt 0x55cf2be62340 <line:185:13, col:23>
| |     `-ArraySubscriptExpr 0x55cf2be62320 <col:20, col:23> 'Router::Port' lvalue
| |       |-ImplicitCastExpr 0x55cf2be622f0 <col:20> 'Router::Port *' <ArrayToPointerDecay>
| |       | `-MemberExpr 0x55cf2be622a0 <col:20> 'Router::Port [2]' lvalue ->p 0x55cf2be20d58
| |       |   `-CXXThisExpr 0x55cf2be62290 <col:20> 'Router::Connection *' implicit this
| |       `-ImplicitCastExpr 0x55cf2be62308 <col:22> 'int' <LValueToRValue>
| |         `-DeclRefExpr 0x55cf2be622d0 <col:22> 'int' lvalue ParmVar 0x55cf2be213d8 'i' 'int'
| |-CXXMethodDecl 0x55cf2be26248 <line:188:9, line:190:9> line:188:14 operator== 'bool (const Router::Connection &) const'
| | |-ParmVarDecl 0x55cf2be26180 <col:25, col:43> col:43 used x 'const Router::Connection &'
| | `-CompoundStmt 0x55cf2be62728 <col:52, line:190:9>
| |   `-ReturnStmt 0x55cf2be62718 <line:189:13, col:51>
| |     `-BinaryOperator 0x55cf2be626f8 <col:20, col:51> 'bool' '&&'
| |       |-CXXOperatorCallExpr 0x55cf2be62510 <col:20, col:33> 'bool'
| |       | |-ImplicitCastExpr 0x55cf2be624f8 <col:25> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
| |       | | `-DeclRefExpr 0x55cf2be624b0 <col:25> 'bool (const Router::Port &) const' lvalue CXXMethod 0x55cf2be205b8 'operator==' 'bool (const Router::Port &) const'
| |       | |-ArraySubscriptExpr 0x55cf2be623e8 <col:20, col:23> 'const Router::Port' lvalue
| |       | | |-ImplicitCastExpr 0x55cf2be623d0 <col:20> 'const Router::Port *' <ArrayToPointerDecay>
| |       | | | `-MemberExpr 0x55cf2be62380 <col:20> 'Router::Port const[2]' lvalue ->p 0x55cf2be20d58
| |       | | |   `-CXXThisExpr 0x55cf2be62370 <col:20> 'const Router::Connection *' implicit this
| |       | | `-IntegerLiteral 0x55cf2be623b0 <col:22> 'int' 0
| |       | `-ArraySubscriptExpr 0x55cf2be62490 <col:28, col:33> 'const Router::Port' lvalue
| |       |   |-ImplicitCastExpr 0x55cf2be62478 <col:28, col:30> 'const Router::Port *' <ArrayToPointerDecay>
| |       |   | `-MemberExpr 0x55cf2be62428 <col:28, col:30> 'Router::Port const[2]' lvalue .p 0x55cf2be20d58
| |       |   |   `-DeclRefExpr 0x55cf2be62408 <col:28> 'const Router::Connection' lvalue ParmVar 0x55cf2be26180 'x' 'const Router::Connection &'
| |       |   `-IntegerLiteral 0x55cf2be62458 <col:32> 'int' 0
| |       `-CXXOperatorCallExpr 0x55cf2be626c0 <col:38, col:51> 'bool'
| |         |-ImplicitCastExpr 0x55cf2be626a8 <col:43> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
| |         | `-DeclRefExpr 0x55cf2be62688 <col:43> 'bool (const Router::Port &) const' lvalue CXXMethod 0x55cf2be205b8 'operator==' 'bool (const Router::Port &) const'
| |         |-ArraySubscriptExpr 0x55cf2be625c0 <col:38, col:41> 'const Router::Port' lvalue
| |         | |-ImplicitCastExpr 0x55cf2be625a8 <col:38> 'const Router::Port *' <ArrayToPointerDecay>
| |         | | `-MemberExpr 0x55cf2be62558 <col:38> 'Router::Port const[2]' lvalue ->p 0x55cf2be20d58
| |         | |   `-CXXThisExpr 0x55cf2be62548 <col:38> 'const Router::Connection *' implicit this
| |         | `-IntegerLiteral 0x55cf2be62588 <col:40> 'int' 1
| |         `-ArraySubscriptExpr 0x55cf2be62668 <col:46, col:51> 'const Router::Port' lvalue
| |           |-ImplicitCastExpr 0x55cf2be62650 <col:46, col:48> 'const Router::Port *' <ArrayToPointerDecay>
| |           | `-MemberExpr 0x55cf2be62600 <col:46, col:48> 'Router::Port const[2]' lvalue .p 0x55cf2be20d58
| |           |   `-DeclRefExpr 0x55cf2be625e0 <col:46> 'const Router::Connection' lvalue ParmVar 0x55cf2be26180 'x' 'const Router::Connection &'
| |           `-IntegerLiteral 0x55cf2be62630 <col:50> 'int' 1
| `-CXXMethodDecl 0x55cf2be26390 <line:191:9, line:193:9> line:191:14 operator< 'bool (const Router::Connection &) const'
|   |-ParmVarDecl 0x55cf2be26300 <col:24, col:42> col:42 used x 'const Router::Connection &'
|   `-CompoundStmt 0x55cf2be62cc0 <col:51, line:193:9>
|     `-ReturnStmt 0x55cf2be62cb0 <line:192:13, col:69>
|       `-BinaryOperator 0x55cf2be62c90 <col:20, col:69> 'bool' '||'
|         |-CXXOperatorCallExpr 0x55cf2be628b8 <col:20, col:32> 'bool'
|         | |-ImplicitCastExpr 0x55cf2be628a0 <col:25> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
|         | | `-DeclRefExpr 0x55cf2be62880 <col:25> 'bool (const Router::Port &) const' lvalue CXXMethod 0x55cf2be20848 'operator<' 'bool (const Router::Port &) const'
|         | |-ArraySubscriptExpr 0x55cf2be627b8 <col:20, col:23> 'const Router::Port' lvalue
|         | | |-ImplicitCastExpr 0x55cf2be627a0 <col:20> 'const Router::Port *' <ArrayToPointerDecay>
|         | | | `-MemberExpr 0x55cf2be62750 <col:20> 'Router::Port const[2]' lvalue ->p 0x55cf2be20d58
|         | | |   `-CXXThisExpr 0x55cf2be62740 <col:20> 'const Router::Connection *' implicit this
|         | | `-IntegerLiteral 0x55cf2be62780 <col:22> 'int' 0
|         | `-ArraySubscriptExpr 0x55cf2be62860 <col:27, col:32> 'const Router::Port' lvalue
|         |   |-ImplicitCastExpr 0x55cf2be62848 <col:27, col:29> 'const Router::Port *' <ArrayToPointerDecay>
|         |   | `-MemberExpr 0x55cf2be627f8 <col:27, col:29> 'Router::Port const[2]' lvalue .p 0x55cf2be20d58
|         |   |   `-DeclRefExpr 0x55cf2be627d8 <col:27> 'const Router::Connection' lvalue ParmVar 0x55cf2be26300 'x' 'const Router::Connection &'
|         |   `-IntegerLiteral 0x55cf2be62828 <col:31> 'int' 0
|         `-ParenExpr 0x55cf2be62c70 <col:37, col:69> 'bool'
|           `-BinaryOperator 0x55cf2be62c50 <col:38, col:68> 'bool' '&&'
|             |-CXXOperatorCallExpr 0x55cf2be62a68 <col:38, col:51> 'bool'
|             | |-ImplicitCastExpr 0x55cf2be62a50 <col:43> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
|             | | `-DeclRefExpr 0x55cf2be62a30 <col:43> 'bool (const Router::Port &) const' lvalue CXXMethod 0x55cf2be205b8 'operator==' 'bool (const Router::Port &) const'
|             | |-ArraySubscriptExpr 0x55cf2be62968 <col:38, col:41> 'const Router::Port' lvalue
|             | | |-ImplicitCastExpr 0x55cf2be62950 <col:38> 'const Router::Port *' <ArrayToPointerDecay>
|             | | | `-MemberExpr 0x55cf2be62900 <col:38> 'Router::Port const[2]' lvalue ->p 0x55cf2be20d58
|             | | |   `-CXXThisExpr 0x55cf2be628f0 <col:38> 'const Router::Connection *' implicit this
|             | | `-IntegerLiteral 0x55cf2be62930 <col:40> 'int' 0
|             | `-ArraySubscriptExpr 0x55cf2be62a10 <col:46, col:51> 'const Router::Port' lvalue
|             |   |-ImplicitCastExpr 0x55cf2be629f8 <col:46, col:48> 'const Router::Port *' <ArrayToPointerDecay>
|             |   | `-MemberExpr 0x55cf2be629a8 <col:46, col:48> 'Router::Port const[2]' lvalue .p 0x55cf2be20d58
|             |   |   `-DeclRefExpr 0x55cf2be62988 <col:46> 'const Router::Connection' lvalue ParmVar 0x55cf2be26300 'x' 'const Router::Connection &'
|             |   `-IntegerLiteral 0x55cf2be629d8 <col:50> 'int' 0
|             `-CXXOperatorCallExpr 0x55cf2be62c18 <col:56, col:68> 'bool'
|               |-ImplicitCastExpr 0x55cf2be62c00 <col:61> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x55cf2be62be0 <col:61> 'bool (const Router::Port &) const' lvalue CXXMethod 0x55cf2be20848 'operator<' 'bool (const Router::Port &) const'
|               |-ArraySubscriptExpr 0x55cf2be62b18 <col:56, col:59> 'const Router::Port' lvalue
|               | |-ImplicitCastExpr 0x55cf2be62b00 <col:56> 'const Router::Port *' <ArrayToPointerDecay>
|               | | `-MemberExpr 0x55cf2be62ab0 <col:56> 'Router::Port const[2]' lvalue ->p 0x55cf2be20d58
|               | |   `-CXXThisExpr 0x55cf2be62aa0 <col:56> 'const Router::Connection *' implicit this
|               | `-IntegerLiteral 0x55cf2be62ae0 <col:58> 'int' 1
|               `-ArraySubscriptExpr 0x55cf2be62bc0 <col:63, col:68> 'const Router::Port' lvalue
|                 |-ImplicitCastExpr 0x55cf2be62ba8 <col:63, col:65> 'const Router::Port *' <ArrayToPointerDecay>
|                 | `-MemberExpr 0x55cf2be62b58 <col:63, col:65> 'Router::Port const[2]' lvalue .p 0x55cf2be20d58
|                 |   `-DeclRefExpr 0x55cf2be62b38 <col:63> 'const Router::Connection' lvalue ParmVar 0x55cf2be26300 'x' 'const Router::Connection &'
|                 `-IntegerLiteral 0x55cf2be62b88 <col:67> 'int' 1
|-AccessSpecDecl 0x55cf2be26450 <line:216:3, col:10> col:3 private
|-CXXRecordDecl 0x55cf2be26478 <line:218:5, col:11> col:11 class RouterContextErrh
|-EnumDecl 0x55cf2be26530 <line:220:5, line:223:5> line:220:5
| |-EnumConstantDecl 0x55cf2be265f0 <line:221:9> col:9 ROUTER_NEW 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
| |-EnumConstantDecl 0x55cf2be26640 <col:21> col:21 referenced ROUTER_PRECONFIGURE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
| |-EnumConstantDecl 0x55cf2be26690 <col:42> col:42 ROUTER_PREINITIALIZE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
| |-EnumConstantDecl 0x55cf2be266e0 <line:222:9> col:9 referenced ROUTER_LIVE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
| `-EnumConstantDecl 0x55cf2be26730 <col:22> col:22 ROUTER_DEAD 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
|-EnumDecl 0x55cf2be26780 <line:224:5, line:227:5> line:224:5
| |-EnumConstantDecl 0x55cf2be26898 <line:225:9, col:25> col:9 referenced RUNNING_DEAD 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
| | `-ConstantExpr 0x55cf2be26878 <col:24, col:25> 'int' Int: -2
| |   `-UnaryOperator 0x55cf2be26860 <col:24, col:25> 'int' prefix '-'
| |     `-IntegerLiteral 0x55cf2be26840 <col:25> 'int' 2
| |-EnumConstantDecl 0x55cf2be26940 <col:28, col:48> col:28 RUNNING_INACTIVE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
| | `-ConstantExpr 0x55cf2be26920 <col:47, col:48> 'int' Int: -1
| |   `-UnaryOperator 0x55cf2be26908 <col:47, col:48> 'int' prefix '-'
| |     `-IntegerLiteral 0x55cf2be268e8 <col:48> 'int' 1
| |-EnumConstantDecl 0x55cf2be269d0 <col:51, col:71> col:51 RUNNING_PREPARING 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
| | `-ConstantExpr 0x55cf2be269b0 <col:71> 'int' Int: 0
| |   `-IntegerLiteral 0x55cf2be26990 <col:71> 'int' 0
| |-EnumConstantDecl 0x55cf2be26a60 <line:226:9, col:30> col:9 referenced RUNNING_BACKGROUND 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
| | `-ConstantExpr 0x55cf2be26a40 <col:30> 'int' Int: 1
| |   `-IntegerLiteral 0x55cf2be26a20 <col:30> 'int' 1
| `-EnumConstantDecl 0x55cf2be26af0 <col:33, col:50> col:33 referenced RUNNING_ACTIVE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
|   `-ConstantExpr 0x55cf2be26ad0 <col:50> 'int' Int: 2
|     `-IntegerLiteral 0x55cf2be26ab0 <col:50> 'int' 2
|-FieldDecl 0x55cf2be26b50 <line:229:5, col:13> col:13 referenced _master 'Master *'
|-FieldDecl 0x55cf2be26bb0 <line:231:5, col:21> col:21 referenced _runcount 'atomic_uint32_t'
|-FieldDecl 0x55cf2be26c18 <line:233:5, col:18> col:18 referenced _state 'volatile int'
|-FieldDecl 0x55cf2be26cb8 <line:234:5, col:30> col:10 _have_connections 'bool'
| `-ConstantExpr 0x55cf2be26c98 <col:30> 'int' Int: 1
|   `-IntegerLiteral 0x55cf2be26c68 <col:30> 'int' 1
|-FieldDecl 0x55cf2be26d58 <line:235:5, col:33> col:18 _conn_sorted 'bool' mutable
| `-ConstantExpr 0x55cf2be26d38 <col:33> 'int' Int: 1
|   `-IntegerLiteral 0x55cf2be26d08 <col:33> 'int' 1
|-FieldDecl 0x55cf2be26df8 <line:236:5, col:32> col:10 _have_configuration 'bool'
| `-ConstantExpr 0x55cf2be26dd8 <col:32> 'int' Int: 1
|   `-IntegerLiteral 0x55cf2be26da8 <col:32> 'int' 1
|-FieldDecl 0x55cf2be26e60 <line:237:5, col:18> col:18 referenced _running 'volatile int'
|-FieldDecl 0x55cf2be26ec0 <line:239:5, col:21> col:21 referenced _refcount 'atomic_uint32_t'
|-FieldDecl 0x55cf2be2dd20 <line:241:5, col:23> col:23 referenced _elements 'Vector<Element *>':'Vector<Element *>'
|-FieldDecl 0x55cf2be2de20 <line:242:5, col:20> col:20 _element_names 'Vector<String>':'Vector<String>'
|-FieldDecl 0x55cf2be2df20 <line:243:5, col:20> col:20 _element_configurations 'Vector<String>':'Vector<String>'
|-FieldDecl 0x55cf2be374c0 <line:244:5, col:22> col:22 _element_landmarkids 'Vector<uint32_t>':'Vector<unsigned int>'
|-FieldDecl 0x55cf2be375d0 <line:245:5, col:25> col:25 referenced _element_home_thread_ids 'Vector<int>':'Vector<int>' mutable
|-CXXRecordDecl 0x55cf2be37620 <line:247:5, line:250:5> line:247:12 referenced struct element_landmark_t definition
| |-DefinitionData aggregate standard_layout has_mutable_fields
| | |-DefaultConstructor exists non_trivial needs_implicit
| | |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveConstructor exists simple non_trivial needs_overload_resolution
| | |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveAssignment exists simple non_trivial needs_overload_resolution
| | `-Destructor simple non_trivial needs_overload_resolution
| |-CXXRecordDecl 0x55cf2be37738 <col:5, col:12> col:12 implicit struct element_landmark_t
| |-FieldDecl 0x55cf2be377d8 <line:248:9, col:18> col:18 first_landmarkid 'uint32_t':'unsigned int'
| |-FieldDecl 0x55cf2be37838 <line:249:9, col:16> col:16 filename 'String'
| |-CXXConstructorDecl 0x55cf2be378d0 <line:247:12> col:12 implicit element_landmark_t 'void (const Router::element_landmark_t &)' inline default noexcept-unevaluated 0x55cf2be378d0
| | `-ParmVarDecl 0x55cf2be379e8 <col:12> col:12 'const Router::element_landmark_t &'
| |-CXXConstructorDecl 0x55cf2be37a88 <col:12> col:12 implicit element_landmark_t 'void (Router::element_landmark_t &&)' inline default noexcept-unevaluated 0x55cf2be37a88
| | `-ParmVarDecl 0x55cf2be37b98 <col:12> col:12 'Router::element_landmark_t &&'
| |-CXXMethodDecl 0x55cf2be37c38 <col:12> col:12 implicit operator= 'Router::element_landmark_t &(const Router::element_landmark_t &)' inline default noexcept-unevaluated 0x55cf2be37c38
| | `-ParmVarDecl 0x55cf2be37d48 <col:12> col:12 'const Router::element_landmark_t &'
| |-CXXMethodDecl 0x55cf2be37db8 <col:12> col:12 implicit operator= 'Router::element_landmark_t &(Router::element_landmark_t &&)' inline default noexcept-unevaluated 0x55cf2be37db8
| | `-ParmVarDecl 0x55cf2be37ec8 <col:12> col:12 'Router::element_landmark_t &&'
| `-CXXDestructorDecl 0x55cf2be37f50 <col:12> col:12 implicit ~element_landmark_t 'void ()' inline default noexcept-unevaluated 0x55cf2be37f50
|-FieldDecl 0x55cf2be45ba0 <line:251:5, col:32> col:32 _element_landmarks 'Vector<Router::element_landmark_t>':'Vector<Router::element_landmark_t>'
|-FieldDecl 0x55cf2be45c00 <line:252:5, col:14> col:14 _last_landmarkid 'uint32_t':'unsigned int'
|-FieldDecl 0x55cf2be45d10 <line:254:5, col:25> col:25 _element_name_sorter 'Vector<int>':'Vector<int>' mutable
|-FieldDecl 0x55cf2be46068 <line:255:5, col:40> col:17 referenced _element_gport_offset 'Vector<int> [2]'
|-FieldDecl 0x55cf2be46170 <line:256:5, col:17> col:17 _element_configure_order 'Vector<int>':'Vector<int>'
|-FieldDecl 0x55cf2be4e560 <line:258:5, col:32> col:32 _conn 'Vector<Router::Connection>':'Vector<Router::Connection>' mutable
|-FieldDecl 0x55cf2be4e670 <line:259:5, col:25> col:25 _conn_output_sorter 'Vector<int>':'Vector<int>' mutable
|-FieldDecl 0x55cf2be4e770 <line:261:5, col:20> col:20 _requirements 'Vector<String>':'Vector<String>'
|-FieldDecl 0x55cf2be4e880 <line:263:5, col:17> col:17 _ehandler_first_by_element 'Vector<int>':'Vector<int>'
|-FieldDecl 0x55cf2be4e990 <line:264:5, col:17> col:17 _ehandler_to_handler 'Vector<int>':'Vector<int>'
|-FieldDecl 0x55cf2be4eaa0 <line:265:5, col:17> col:17 _ehandler_next 'Vector<int>':'Vector<int>'
|-FieldDecl 0x55cf2be4ebb0 <line:267:5, col:17> col:17 _handler_first_by_name 'Vector<int>':'Vector<int>'
|-EnumDecl 0x55cf2be4ec00 <line:269:5, col:33> col:5
| `-EnumConstantDecl 0x55cf2be4ed00 <col:12, col:29> col:12 HANDLER_BUFSIZ 'Router::(anonymous enum at ../dummy_inc/click/router.hh:269:5)'
|   `-ImplicitCastExpr 0x55cf2be4ed50 <col:29> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55cf2be4ece0 <col:29> 'int' Int: 256
|       `-IntegerLiteral 0x55cf2be4ecc0 <col:29> 'int' 256
|-FieldDecl 0x55cf2be4edb0 <line:270:5, col:15> col:15 _handler_bufs 'Handler **'
|-FieldDecl 0x55cf2be4ee18 <line:271:5, col:9> col:9 _nhandlers_bufs 'int'
|-FieldDecl 0x55cf2be4ee80 <line:272:5, col:9> col:9 _free_handler 'int'
|-FieldDecl 0x55cf2be4ef80 <line:274:5, col:20> col:20 _attachment_names 'Vector<String>':'Vector<String>'
|-FieldDecl 0x55cf2be572d0 <line:275:5, col:19> col:19 _attachments 'Vector<void *>':'Vector<void *>'
|-FieldDecl 0x55cf2be57330 <line:277:5, col:14> col:14 referenced _root_element 'Element *'
|-FieldDecl 0x55cf2be57390 <line:278:5, col:12> col:12 _configuration 'String'
|-CXXRecordDecl 0x55cf2be573e0 <line:280:5, line:290:5> line:280:12 referenced struct notifier_signals_t definition
| |-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| | |-DefaultConstructor
| | |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveConstructor exists simple non_trivial needs_overload_resolution
| | |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveAssignment exists simple non_trivial needs_overload_resolution
| | `-Destructor simple non_trivial needs_overload_resolution
| |-CXXRecordDecl 0x55cf2be574f8 <col:5, col:12> col:12 implicit referenced struct notifier_signals_t
| |-EnumDecl 0x55cf2be57588 <line:281:9, col:32> col:9
| | `-EnumConstantDecl 0x55cf2be57690 <col:16, col:27> col:16 referenced capacity 'Router::notifier_signals_t::(anonymous enum at ../dummy_inc/click/router.hh:281:9)'
| |   `-ImplicitCastExpr 0x55cf2be576e0 <col:27> 'unsigned int' <IntegralCast>
| |     `-ConstantExpr 0x55cf2be57670 <col:27> 'int' Int: 4096
| |       `-IntegerLiteral 0x55cf2be57650 <col:27> 'int' 4096
| |-FieldDecl 0x55cf2be57708 <line:282:9, col:16> col:16 name 'String'
| |-FieldDecl 0x55cf2be57770 <line:283:9, col:13> col:13 nsig 'int'
| |-FieldDecl 0x55cf2be57968 <line:284:9, col:42> col:25 referenced sig 'atomic_uint32_t [128]'
| |-FieldDecl 0x55cf2be579f8 <line:285:9, col:29> col:29 next 'Router::notifier_signals_t *'
| |-CXXConstructorDecl 0x55cf2be57bb8 <line:286:9, line:289:9> line:286:9 notifier_signals_t 'void (const String &, Router::notifier_signals_t *)'
| | |-ParmVarDecl 0x55cf2be57a58 <col:28, col:42> col:42 used n 'const String &'
| | |-ParmVarDecl 0x55cf2be57ad0 <col:45, col:65> col:65 used nx 'Router::notifier_signals_t *'
| | |-CXXCtorInitializer Field 0x55cf2be57708 'name' 'String'
| | | `-CXXConstructExpr 0x55cf2be62d18 <line:287:15, col:21> 'String' 'void (const String &)'
| | |   `-DeclRefExpr 0x55cf2be62cd8 <col:20> 'const String' lvalue ParmVar 0x55cf2be57a58 'n' 'const String &'
| | |-CXXCtorInitializer Field 0x55cf2be57770 'nsig' 'int'
| | | `-IntegerLiteral 0x55cf2be62d70 <col:29> 'int' 0
| | |-CXXCtorInitializer Field 0x55cf2be57968 'sig' 'atomic_uint32_t [128]'
| | | `-CXXConstructExpr 0x55cf2be62e58 <line:286:9> 'atomic_uint32_t [128]' 'void () noexcept'
| | |-CXXCtorInitializer Field 0x55cf2be579f8 'next' 'Router::notifier_signals_t *'
| | | `-ImplicitCastExpr 0x55cf2be62e18 <line:287:38> 'Router::notifier_signals_t *' <LValueToRValue>
| | |   `-DeclRefExpr 0x55cf2be62dd8 <col:38> 'Router::notifier_signals_t *' lvalue ParmVar 0x55cf2be57ad0 'nx' 'Router::notifier_signals_t *'
| | `-CompoundStmt 0x55cf2be630e8 <col:42, line:289:9>
| |   `-CallExpr 0x55cf2be63098 <line:288:13, col:43> 'void *'
| |     |-ImplicitCastExpr 0x55cf2be63080 <col:13> 'void *(*)(void *, int, size_t) throw()' <FunctionToPointerDecay>
| |     | `-DeclRefExpr 0x55cf2be63060 <col:13> 'void *(void *, int, size_t) throw()' lvalue Function 0x55cf2b9bcad8 'memset' 'void *(void *, int, size_t) throw()'
| |     |-ImplicitCastExpr 0x55cf2be630d0 <col:20, col:26> 'void *' <BitCast>
| |     | `-UnaryOperator 0x55cf2be62fa8 <col:20, col:26> 'atomic_uint32_t *' prefix '&' cannot overflow
| |     |   `-ArraySubscriptExpr 0x55cf2be62f88 <col:21, col:26> 'atomic_uint32_t' lvalue
| |     |     |-ImplicitCastExpr 0x55cf2be62f70 <col:21> 'atomic_uint32_t *' <ArrayToPointerDecay>
| |     |     | `-MemberExpr 0x55cf2be62f20 <col:21> 'atomic_uint32_t [128]' lvalue ->sig 0x55cf2be57968
| |     |     |   `-CXXThisExpr 0x55cf2be62f10 <col:21> 'Router::notifier_signals_t *' implicit this
| |     |     `-IntegerLiteral 0x55cf2be62f50 <col:25> 'int' 0
| |     |-IntegerLiteral 0x55cf2be62fc0 <col:29> 'int' 0
| |     `-UnaryExprOrTypeTraitExpr 0x55cf2be63040 <col:32, col:42> 'unsigned long' sizeof
| |       `-ParenExpr 0x55cf2be63020 <col:38, col:42> 'atomic_uint32_t [128]' lvalue
| |         `-MemberExpr 0x55cf2be62ff0 <col:39> 'atomic_uint32_t [128]' lvalue ->sig 0x55cf2be57968 non_odr_use_unevaluated
| |           `-CXXThisExpr 0x55cf2be62fe0 <col:39> 'Router::notifier_signals_t *' implicit this
| |-CXXConstructorDecl 0x55cf2be57c98 <line:280:12> col:12 implicit notifier_signals_t 'void (const Router::notifier_signals_t &)' inline default noexcept-unevaluated 0x55cf2be57c98
| | `-ParmVarDecl 0x55cf2be57da8 <col:12> col:12 'const Router::notifier_signals_t &'
| |-CXXConstructorDecl 0x55cf2be57e48 <col:12> col:12 implicit notifier_signals_t 'void (Router::notifier_signals_t &&)' inline default noexcept-unevaluated 0x55cf2be57e48
| | `-ParmVarDecl 0x55cf2be57f58 <col:12> col:12 'Router::notifier_signals_t &&'
| |-CXXMethodDecl 0x55cf2be57ff8 <col:12> col:12 implicit operator= 'Router::notifier_signals_t &(const Router::notifier_signals_t &)' inline default noexcept-unevaluated 0x55cf2be57ff8
| | `-ParmVarDecl 0x55cf2be58108 <col:12> col:12 'const Router::notifier_signals_t &'
| |-CXXMethodDecl 0x55cf2be58178 <col:12> col:12 implicit operator= 'Router::notifier_signals_t &(Router::notifier_signals_t &&)' inline default noexcept-unevaluated 0x55cf2be58178
| | `-ParmVarDecl 0x55cf2be58288 <col:12> col:12 'Router::notifier_signals_t &&'
| `-CXXDestructorDecl 0x55cf2be58310 <col:12> col:12 implicit ~notifier_signals_t 'void ()' inline default noexcept-unevaluated 0x55cf2be58310
|-FieldDecl 0x55cf2be58400 <line:291:5, col:25> col:25 _notifier_signals 'Router::notifier_signals_t *'
|-FieldDecl 0x55cf2be58460 <line:292:5, col:27> col:27 referenced _arena_factory 'HashMap_ArenaFactory *'
|-FieldDecl 0x55cf2be584c0 <line:293:5, col:13> col:13 referenced _hotswap_router 'Router *'
|-FieldDecl 0x55cf2be58520 <line:294:5, col:18> col:18 referenced _thread_sched 'ThreadSched *'
|-FieldDecl 0x55cf2be58580 <line:295:5, col:23> col:23 referenced _name_info 'NameInfo *' mutable
|-FieldDecl 0x55cf2be58690 <line:296:5, col:17> col:17 _flow_code_override_eindex 'Vector<int>':'Vector<int>'
|-FieldDecl 0x55cf2be58790 <line:297:5, col:20> col:20 referenced _flow_code_override 'Vector<String>':'Vector<String>'
|-FieldDecl 0x55cf2be587f0 <line:299:5, col:13> col:13 _next_router 'Router *'
|-CXXConstructorDecl 0x55cf2be58938 <line:305:5, col:25> col:5 Router 'void (const Router &)'
| `-ParmVarDecl 0x55cf2be58878 <col:12, col:24> col:25 'const Router &'
|-CXXMethodDecl 0x55cf2be58ae8 <line:306:5, col:36> col:13 operator= 'Router &(const Router &)'
| `-ParmVarDecl 0x55cf2be589f8 <col:23, col:35> col:36 'const Router &'
|-CXXMethodDecl 0x55cf2be58c30 <line:308:5, col:49> col:17 remove_connection 'Router::Connection *(Router::Connection *)'
| `-ParmVarDecl 0x55cf2be58ba0 <col:35, col:47> col:47 cp 'Router::Connection *'
|-CXXMethodDecl 0x55cf2be58fd8 <line:309:5, line:310:62> line:309:10 hookup_error 'void (const Router::Port &, bool, const char *, ErrorHandler *, bool)'
| |-ParmVarDecl 0x55cf2be58ce8 <col:23, col:35> col:35 p 'const Router::Port &'
| |-ParmVarDecl 0x55cf2be58d60 <col:38, col:43> col:43 isoutput 'bool'
| |-ParmVarDecl 0x55cf2be58de0 <col:53, col:65> col:65 message 'const char *'
| |-ParmVarDecl 0x55cf2be58e58 <line:310:23, col:37> col:37 errh 'ErrorHandler *'
| `-ParmVarDecl 0x55cf2be58ed0 <col:43, col:57> col:48 active 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55cf2be5c010 <col:57> 'bool' false
|-CXXMethodDecl 0x55cf2be59148 <line:311:5, col:44> col:9 check_hookup_elements 'int (ErrorHandler *)'
| `-ParmVarDecl 0x55cf2be590b0 <col:31, col:43> col:44 'ErrorHandler *'
|-CXXMethodDecl 0x55cf2be59298 <line:312:5, col:41> col:9 check_hookup_range 'int (ErrorHandler *)'
| `-ParmVarDecl 0x55cf2be59200 <col:28, col:40> col:41 'ErrorHandler *'
|-CXXMethodDecl 0x55cf2be593e8 <line:313:5, col:48> col:9 check_hookup_completeness 'int (ErrorHandler *)'
| `-ParmVarDecl 0x55cf2be59350 <col:35, col:47> col:48 'ErrorHandler *'
|-CXXMethodDecl 0x55cf2be59540 <line:315:5, col:48> col:17 used hard_flow_code_override 'const char *(int) const'
| `-ParmVarDecl 0x55cf2be594a8 <col:41, col:45> col:45 e 'int'
|-CXXMethodDecl 0x55cf2be59860 <line:316:5, col:74> col:9 processing_error 'int (const Router::Connection &, bool, int, ErrorHandler *)'
| |-ParmVarDecl 0x55cf2be595f8 <col:26, col:44> col:44 conn 'const Router::Connection &'
| |-ParmVarDecl 0x55cf2be59670 <col:50> col:54 'bool'
| |-ParmVarDecl 0x55cf2be596f0 <col:56> col:59 'int'
| `-ParmVarDecl 0x55cf2be59768 <col:61, col:73> col:74 'ErrorHandler *'
|-CXXMethodDecl 0x55cf2be599c8 <line:317:5, col:42> col:9 check_push_and_pull 'int (ErrorHandler *)'
| `-ParmVarDecl 0x55cf2be59930 <col:29, col:41> col:42 'ErrorHandler *'
|-CXXMethodDecl 0x55cf2be59a90 <line:319:5, col:26> col:10 set_connections 'void ()'
|-CXXMethodDecl 0x55cf2be59b50 <line:320:5, col:29> col:10 sort_connections 'void () const'
|-CXXMethodDecl 0x55cf2be59d50 <line:321:5, col:64> col:9 connindex_lower_bound 'int (bool, const Router::Port &) const'
| |-ParmVarDecl 0x55cf2be59c00 <col:31, col:36> col:36 isoutput 'bool'
| `-ParmVarDecl 0x55cf2be59c78 <col:46, col:58> col:58 port 'const Router::Port &'
|-CXXMethodDecl 0x55cf2be59e20 <line:323:5, col:22> col:10 make_gports 'void ()'
|-CXXMethodDecl 0x55cf2be59f68 <line:324:5, line:326:5> line:324:16 ngports 'int (bool) const' inline
| |-ParmVarDecl 0x55cf2be59ed0 <col:24, col:29> col:29 used isout 'bool'
| `-CompoundStmt 0x55cf2be63320 <col:42, line:326:5>
|   `-ReturnStmt 0x55cf2be63310 <line:325:9, col:50>
|     `-ImplicitCastExpr 0x55cf2be632f8 <col:16, col:50> 'int':'int' <LValueToRValue>
|       `-CXXMemberCallExpr 0x55cf2be632d8 <col:16, col:50> 'const int':'const int' lvalue
|         `-MemberExpr 0x55cf2be632a8 <col:16, col:45> '<bound member function type>' .back 0x55cf2bce0b38
|           `-ArraySubscriptExpr 0x55cf2be63228 <col:16, col:43> 'const Vector<int>':'const Vector<int>' lvalue
|             |-ImplicitCastExpr 0x55cf2be631f8 <col:16> 'const Vector<int> *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55cf2be63110 <col:16> 'Vector<int> const[2]' lvalue ->_element_gport_offset 0x55cf2be46068
|             |   `-CXXThisExpr 0x55cf2be63100 <col:16> 'const Router *' implicit this
|             `-ImplicitCastExpr 0x55cf2be63210 <col:38> 'bool' <LValueToRValue>
|               `-DeclRefExpr 0x55cf2be63140 <col:38> 'bool' lvalue ParmVar 0x55cf2be59ed0 'isout' 'bool'
|-CXXMethodDecl 0x55cf2be5a138 <line:327:5, col:55> col:16 gport 'int (bool, const Router::Port &) const' inline
| |-ParmVarDecl 0x55cf2be5a020 <col:22, col:27> col:27 isoutput 'bool'
| `-ParmVarDecl 0x55cf2be5a098 <col:37, col:49> col:49 port 'const Router::Port &'
|-CXXMethodDecl 0x55cf2be5a290 <line:329:5, col:47> col:9 used hard_home_thread_id 'int (const Element *) const'
| `-ParmVarDecl 0x55cf2be5a1f8 <col:29, col:44> col:44 e 'const Element *'
|-CXXMethodDecl 0x55cf2be5a538 <line:331:5, col:67> col:9 element_lerror 'int (ErrorHandler *, Element *, const char *, ...) const'
| |-ParmVarDecl 0x55cf2be5a348 <col:24, col:36> col:37 'ErrorHandler *'
| |-ParmVarDecl 0x55cf2be5a3c0 <col:39, col:46> col:47 'Element *'
| `-ParmVarDecl 0x55cf2be5a440 <col:49, col:59> col:60 'const char *'
|-CXXMethodDecl 0x55cf2be5a710 <line:334:5, col:40> col:10 initialize_handlers 'void (bool, bool)'
| |-ParmVarDecl 0x55cf2be5a600 <col:30> col:34 'bool'
| `-ParmVarDecl 0x55cf2be5a678 <col:36> col:40 'bool'
|-CXXMethodDecl 0x55cf2be5a898 <line:335:5, col:35> col:21 xhandler 'Handler *(int) const' inline
| `-ParmVarDecl 0x55cf2be5a7d8 <col:30> col:33 'int'
|-CXXMethodDecl 0x55cf2be5ab30 <line:336:5, col:60> col:9 find_ehandler 'int (int, const String &, bool) const'
| |-ParmVarDecl 0x55cf2be5a958 <col:23> col:26 'int'
| |-ParmVarDecl 0x55cf2be5a9d0 <col:28, col:40> col:41 'const String &'
| `-ParmVarDecl 0x55cf2be5aa48 <col:43, col:48> col:48 allow_star 'bool'
|-CXXMethodDecl 0x55cf2be5ad48 <line:337:5, col:70> col:27 fetch_handler 'Handler (const Element *, const String &)' static inline
| |-ParmVarDecl 0x55cf2be5abf8 <col:41, col:54> col:55 'const Element *'
| `-ParmVarDecl 0x55cf2be5ac70 <col:57, col:69> col:70 'const String &'
|-CXXMethodDecl 0x55cf2be5af58 <line:338:5, col:52> col:10 store_local_handler 'void (int, Handler &)'
| |-ParmVarDecl 0x55cf2be5ae10 <col:30, col:34> col:34 eindex 'int'
| `-ParmVarDecl 0x55cf2be5ae88 <col:42, col:51> col:51 h 'Handler &'
|-CXXMethodDecl 0x55cf2be5b0d8 <line:339:5, col:48> col:17 store_global_handler 'void (Handler &)' static
| `-ParmVarDecl 0x55cf2be5b018 <col:38, col:47> col:47 h 'Handler &'
|-CXXMethodDecl 0x55cf2be5b2d8 <line:340:5, col:72> col:24 store_handler 'void (const Element *, Handler &)' static inline
| |-ParmVarDecl 0x55cf2be5b190 <col:38, col:53> col:53 element 'const Element *'
| `-ParmVarDecl 0x55cf2be5b208 <col:62, col:71> col:71 h 'Handler &'
|-CXXMethodDecl 0x55cf2be5b4b0 <line:343:5, col:66> col:19 router_read_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55cf2be5b398 <col:39, col:48> col:48 e 'Element *'
| `-ParmVarDecl 0x55cf2be5b418 <col:51, col:57> col:57 user_data 'void *'
|-CXXMethodDecl 0x55cf2be5b790 <line:344:5, col:103> col:16 router_write_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x55cf2be5b570 <col:37, col:51> col:51 str 'const String &'
| |-ParmVarDecl 0x55cf2be5b5e8 <col:56, col:65> col:65 e 'Element *'
| |-ParmVarDecl 0x55cf2be5b668 <col:68, col:74> col:74 user_data 'void *'
| `-ParmVarDecl 0x55cf2be5b6e0 <col:85, col:99> col:99 errh 'ErrorHandler *'
|-FriendDecl 0x55cf2be5b870 <line:347:5, col:18> col:12 'class Master':'Master'
|-FriendDecl 0x55cf2be5b8d0 <line:348:5, col:18> col:12 'class Task':'Task'
`-FriendDecl 0x55cf2be5bb50 <line:349:5, col:44> col:25
  `-CXXMethodDecl 0x55cf2be5ba50 parent 0x55cf2bcbe280 prev 0x55cf2bccdea8 <col:5, col:44> col:25 set_nports 'int (int, int)'
    |-ParmVarDecl 0x55cf2be5b930 <col:36> col:39 'int'
    `-ParmVarDecl 0x55cf2be5b9b0 <col:41> col:44 'int'

Layout: <CGRecordLayout
  LLVMType:%class.Router = type { %class.Master*, %class.atomic_uint32_t, i32, i8, i32, %class.atomic_uint32_t, %class.Vector, %class.Vector.0, %class.Vector.0, %class.Vector.2, %class.Vector.5, %class.Vector.6, i32, %class.Vector.5, [2 x %class.Vector.5], %class.Vector.5, %class.Vector.8, %class.Vector.5, %class.Vector.0, %class.Vector.5, %class.Vector.5, %class.Vector.5, %class.Vector.5, %class.Handler**, i32, i32, %class.Vector.0, %class.Vector.12, %class.Element*, %class.String, %"struct.Router::notifier_signals_t"*, %class.HashMap_ArenaFactory*, %class.Router*, %class.ThreadSched*, %class.NameInfo*, %class.Vector.5, %class.Vector.0, %class.Router* }
  NonVirtualBaseLLVMType:%class.Router = type { %class.Master*, %class.atomic_uint32_t, i32, i8, i32, %class.atomic_uint32_t, %class.Vector, %class.Vector.0, %class.Vector.0, %class.Vector.2, %class.Vector.5, %class.Vector.6, i32, %class.Vector.5, [2 x %class.Vector.5], %class.Vector.5, %class.Vector.8, %class.Vector.5, %class.Vector.0, %class.Vector.5, %class.Vector.5, %class.Vector.5, %class.Vector.5, %class.Handler**, i32, i32, %class.Vector.0, %class.Vector.12, %class.Element*, %class.String, %"struct.Router::notifier_signals_t"*, %class.HashMap_ArenaFactory*, %class.Router*, %class.ThreadSched*, %class.NameInfo*, %class.Vector.5, %class.Vector.0, %class.Router* }
  IsZeroInitializable:1
  BitFields:[
    <CGBitFieldInfo Offset:0 Size:1 IsSigned:0 StorageSize:8 StorageOffset:16>
    <CGBitFieldInfo Offset:1 Size:1 IsSigned:0 StorageSize:8 StorageOffset:16>
    <CGBitFieldInfo Offset:2 Size:1 IsSigned:0 StorageSize:8 StorageOffset:16>
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55cf2bcbe280 prev 0x55cf2bcbe000 <../dummy_inc/click/element.hh:29:1, line:319:1> line:29:7 referenced class Element definition
|-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55cf2bcbe378 <col:1, col:7> col:7 implicit referenced class Element
|-AccessSpecDecl 0x55cf2bcbe408 <col:17, col:23> col:17 public
|-CXXConstructorDecl 0x55cf2bcbe468 <line:31:5, col:13> col:5 used Element 'void ()'
|-CXXDestructorDecl 0x55cf2bcbe558 <line:32:5, col:22> col:13 used ~Element 'void () noexcept' virtual
|-VarDecl 0x55cf2bcbe658 <line:33:5, col:16> col:16 nelements_allocated 'int' static
|-CXXMethodDecl 0x55cf2bcbe828 <line:36:5, col:42> col:18 used push 'void (int, Packet *)' virtual
| |-ParmVarDecl 0x55cf2bcbe6d8 <col:23, col:27> col:27 port 'int'
| `-ParmVarDecl 0x55cf2bcbe750 <col:33, col:41> col:41 p 'Packet *'
|-CXXMethodDecl 0x55cf2bcbe9b8 <line:37:5, col:70> col:21 used pull 'Packet *(int)' virtual
| |-ParmVarDecl 0x55cf2bcbe8f0 <col:26, col:30> col:30 port 'int'
| `-WarnUnusedResultAttr 0x55cf2bcbea60 <col:51> warn_unused_result ""
|-CXXMethodDecl 0x55cf2bcbeb98 <line:38:5, col:44> col:21 simple_action 'Packet *(Packet *)' virtual
| `-ParmVarDecl 0x55cf2bcbead0 <col:35, col:43> col:43 p 'Packet *'
|-CXXMethodDecl 0x55cf2bcbed38 <line:40:5, col:37> col:18 used run_task 'bool (Task *)' virtual
| `-ParmVarDecl 0x55cf2bcbec78 <col:27, col:33> col:33 task 'Task *'
|-CXXMethodDecl 0x55cf2bcbeed8 <line:41:5, col:40> col:18 run_timer 'void (Timer *)' virtual
| `-ParmVarDecl 0x55cf2bcbee18 <col:28, col:35> col:35 timer 'Timer *'
|-EnumDecl 0x55cf2bcbef80 <line:43:5, col:46> col:5
| |-EnumConstantDecl 0x55cf2bcbf080 <col:12, col:26> col:12 SELECT_READ 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
| | `-ImplicitCastExpr 0x55cf2bcbf160 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf2bcbf060 <col:26> 'int' Int: 1
| |     `-IntegerLiteral 0x55cf2bcbf040 <col:26> 'int' 1
| `-EnumConstantDecl 0x55cf2bcbf110 <col:29, col:44> col:29 SELECT_WRITE 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
|   `-ImplicitCastExpr 0x55cf2bcbf178 <col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55cf2bcbf0f0 <col:44> 'int' Int: 2
|       `-IntegerLiteral 0x55cf2bcbf0d0 <col:44> 'int' 2
|-CXXMethodDecl 0x55cf2bcbf2c0 <line:44:5, col:43> col:18 selected 'void (int, int)' virtual
| |-ParmVarDecl 0x55cf2bcbf1a8 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x55cf2bcbf228 <col:35, col:39> col:39 mask 'int'
|-CXXMethodDecl 0x55cf2bcbf418 <line:45:5, col:33> col:18 selected 'void (int)' virtual
| `-ParmVarDecl 0x55cf2bcbf388 <col:27, col:31> col:31 fd 'int'
|-CXXMethodDecl 0x55cf2bcbf658 <line:48:5, col:86> col:45 checked_output_push 'void (int, Packet *) const'
| |-ParmVarDecl 0x55cf2bcbf4d8 <col:65, col:69> col:69 port 'int'
| |-ParmVarDecl 0x55cf2bcbf550 <col:75, col:83> col:83 p 'Packet *'
| |-NoInlineAttr 0x55cf2bcbf708 <col:20>
| `-OptimizeNoneAttr 0x55cf2bcbf760 <col:30>
|-CXXMethodDecl 0x55cf2bcbf868 <line:49:5, col:77> col:48 checked_input_pull 'Packet *(int) const'
| |-ParmVarDecl 0x55cf2bcbf7a0 <col:67, col:71> col:71 port 'int'
| |-NoInlineAttr 0x55cf2bcbf910 <col:20>
| `-OptimizeNoneAttr 0x55cf2bcbf968 <col:30>
|-CXXMethodDecl 0x55cf2bcbf9b8 <line:52:5, col:46> col:25 class_name 'const char *() const' virtual pure
|-CXXMethodDecl 0x55cf2bcbfa80 <line:54:5, col:38> col:25 port_count 'const char *() const' virtual
|-VarDecl 0x55cf2bcbfb98 <line:55:5, col:33> col:23 PORTS_0_0 'const char []' static
|-VarDecl 0x55cf2bcbfc20 <line:56:5, col:33> col:23 PORTS_0_1 'const char []' static
|-VarDecl 0x55cf2bcbfca8 <line:57:5, col:33> col:23 PORTS_1_0 'const char []' static
|-VarDecl 0x55cf2bcbfd30 <line:58:5, col:33> col:23 PORTS_1_1 'const char []' static
|-VarDecl 0x55cf2bcbfdb8 <line:59:5, col:35> col:23 PORTS_1_1X2 'const char []' static
|-CXXMethodDecl 0x55cf2bcbfe48 <line:61:5, col:38> col:25 processing 'const char *() const' virtual
|-VarDecl 0x55cf2bcbff08 <line:62:5, col:32> col:23 AGNOSTIC 'const char []' static
|-VarDecl 0x55cf2bcbff90 <line:63:5, col:28> col:23 PUSH 'const char []' static
|-VarDecl 0x55cf2bcc0018 <line:64:5, col:28> col:23 PULL 'const char []' static
|-VarDecl 0x55cf2bcc00a0 <line:65:5, col:36> col:23 PUSH_TO_PULL 'const char []' static
|-VarDecl 0x55cf2bcc0128 <line:66:5, col:36> col:23 PULL_TO_PUSH 'const char []' static
|-VarDecl 0x55cf2bcc01b0 <line:67:5, col:39> col:23 PROCESSING_A_AH 'const char []' static
|-CXXMethodDecl 0x55cf2bcc0240 <line:69:5, col:37> col:25 flow_code 'const char *() const' virtual
|-VarDecl 0x55cf2bcc0300 <line:70:5, col:37> col:23 COMPLETE_FLOW 'const char []' static
|-CXXMethodDecl 0x55cf2bcc0390 <line:72:5, col:33> col:25 flags 'const char *() const' virtual
|-CXXMethodDecl 0x55cf2bcc04e0 <line:73:5, col:30> col:9 flag_value 'int (int) const'
| `-ParmVarDecl 0x55cf2bcc0448 <col:20, col:24> col:24 flag 'int'
|-CXXMethodDecl 0x55cf2bcc0670 <line:75:5, col:40> col:19 cast 'void *(const char *)' virtual
| `-ParmVarDecl 0x55cf2bcc05a0 <col:24, col:36> col:36 name 'const char *'
|-CXXMethodDecl 0x55cf2bcc0920 <line:76:5, col:70> col:19 port_cast 'void *(bool, int, const char *)' virtual
| |-ParmVarDecl 0x55cf2bcc0728 <col:29, col:34> col:34 isoutput 'bool'
| |-ParmVarDecl 0x55cf2bcc07a8 <col:44, col:48> col:48 port 'int'
| `-ParmVarDecl 0x55cf2bcc0828 <col:54, col:66> col:66 name 'const char *'
|-EnumDecl 0x55cf2bcc09d8 <line:79:5, line:85:5> line:79:10 ConfigurePhase
| |-EnumConstantDecl 0x55cf2bcc0ae0 <line:80:9, col:33> col:9 CONFIGURE_PHASE_FIRST 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55cf2bcc0d70 <col:33> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf2bcc0ac0 <col:33> 'int' Int: 0
| |     `-IntegerLiteral 0x55cf2bcc0aa0 <col:33> 'int' 0
| |-EnumConstantDecl 0x55cf2bcc0b70 <line:81:9, col:32> col:9 referenced CONFIGURE_PHASE_INFO 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55cf2bcc0d88 <col:32> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf2bcc0b50 <col:32> 'int' Int: 20
| |     `-IntegerLiteral 0x55cf2bcc0b30 <col:32> 'int' 20
| |-EnumConstantDecl 0x55cf2bcc0c00 <line:82:9, col:38> col:9 CONFIGURE_PHASE_PRIVILEGED 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55cf2bcc0da0 <col:38> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf2bcc0be0 <col:38> 'int' Int: 90
| |     `-IntegerLiteral 0x55cf2bcc0bc0 <col:38> 'int' 90
| |-EnumConstantDecl 0x55cf2bcc0c90 <line:83:9, col:35> col:9 CONFIGURE_PHASE_DEFAULT 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55cf2bcc0db8 <col:35> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf2bcc0c70 <col:35> 'int' Int: 100
| |     `-IntegerLiteral 0x55cf2bcc0c50 <col:35> 'int' 100
| `-EnumConstantDecl 0x55cf2bcc0d20 <line:84:9, col:32> col:9 CONFIGURE_PHASE_LAST 'Element::ConfigurePhase'
|   `-ImplicitCastExpr 0x55cf2bcc0dd0 <col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55cf2bcc0d00 <col:32> 'int' Int: 2000
|       `-IntegerLiteral 0x55cf2bcc0ce0 <col:32> 'int' 2000
|-CXXMethodDecl 0x55cf2bcc0e10 <line:86:5, col:35> col:17 configure_phase 'int () const' virtual
|-CXXMethodDecl 0x55cf2bcc1250 <line:88:5, col:67> col:17 configure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x55cf2bcc10c0 <col:27, col:43> col:43 conf 'Vector<String> &'
| `-ParmVarDecl 0x55cf2bcc1138 <col:49, col:63> col:63 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55cf2bcc1320 <line:90:5, col:31> col:18 add_handlers 'void ()' virtual
|-CXXMethodDecl 0x55cf2bcc14a0 <line:92:5, col:46> col:17 initialize 'int (ErrorHandler *)' virtual
| `-ParmVarDecl 0x55cf2bcc13d0 <col:28, col:42> col:42 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55cf2bcc16a8 <line:94:5, col:69> col:18 take_state 'void (Element *, ErrorHandler *)' virtual
| |-ParmVarDecl 0x55cf2bcc1558 <col:29, col:38> col:38 old_element 'Element *'
| `-ParmVarDecl 0x55cf2bcc15d0 <col:51, col:65> col:65 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55cf2bcc17a8 <line:95:5, col:40> col:22 hotswap_element 'Element *() const' virtual
|-EnumDecl 0x55cf2bcc1848 <line:97:5, line:106:5> line:97:10 referenced CleanupStage
| |-EnumConstantDecl 0x55cf2bcc1910 <line:98:9> col:9 referenced CLEANUP_NO_ROUTER 'Element::CleanupStage'
| |-EnumConstantDecl 0x55cf2bcc19a0 <line:99:9, col:36> col:9 CLEANUP_BEFORE_CONFIGURE 'Element::CleanupStage'
| | `-ImplicitCastExpr 0x55cf2bcc1bd0 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf2bcc1980 <col:36> 'int' Int: 0
| |     `-DeclRefExpr 0x55cf2bcc1960 <col:36> 'int' EnumConstant 0x55cf2bcc1910 'CLEANUP_NO_ROUTER' 'Element::CleanupStage'
| |-EnumConstantDecl 0x55cf2bcc19f0 <line:100:9> col:9 CLEANUP_CONFIGURE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55cf2bcc1a40 <line:101:9> col:9 CLEANUP_CONFIGURED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55cf2bcc1a90 <line:102:9> col:9 CLEANUP_INITIALIZE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55cf2bcc1ae0 <line:103:9> col:9 CLEANUP_INITIALIZED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55cf2bcc1b30 <line:104:9> col:9 CLEANUP_ROUTER_INITIALIZED 'Element::CleanupStage'
| `-EnumConstantDecl 0x55cf2bcc1b80 <line:105:9> col:9 CLEANUP_MANUAL 'Element::CleanupStage'
|-CXXMethodDecl 0x55cf2bcc1cb8 <line:107:5, col:44> col:18 cleanup 'void (Element::CleanupStage)' virtual
| `-ParmVarDecl 0x55cf2bcc1bf8 <col:26, col:39> col:39 stage 'Element::CleanupStage'
|-CXXMethodDecl 0x55cf2bcc1d80 <line:109:5, col:42> col:24 static_initialize 'void ()' static inline
|-CXXMethodDecl 0x55cf2bcc1e40 <line:110:5, col:39> col:24 static_cleanup 'void ()' static inline
|-CXXMethodDecl 0x55cf2bcc1f00 <line:113:5, col:19> col:12 name 'String () const'
|-CXXMethodDecl 0x55cf2bcc1fc0 <line:114:5, col:34> col:20 declaration 'String () const' virtual
|-CXXMethodDecl 0x55cf2bcc20d8 <line:116:5, col:29> col:20 used router 'Router *() const' inline
|-CXXMethodDecl 0x55cf2bcc21a0 <line:117:5, col:25> col:16 used eindex 'int () const' inline
|-CXXMethodDecl 0x55cf2bcc2320 <line:118:5, col:34> col:16 eindex 'int (Router *) const' inline
| `-ParmVarDecl 0x55cf2bcc2250 <col:23, col:31> col:31 r 'Router *'
|-CXXMethodDecl 0x55cf2bcc2448 <line:121:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x55cf2bcc2648 <line:123:5, line:127:5> line:123:17 attach_router 'void (Router *, int)' inline
| |-ParmVarDecl 0x55cf2bcc24f8 <col:31, col:39> col:39 used r 'Router *'
| |-ParmVarDecl 0x55cf2bcc2578 <col:42, col:46> col:46 used eindex 'int'
| `-CompoundStmt 0x55cf2bccff98 <col:54, line:127:5>
|   |-ParenExpr 0x55cf2bccfe48 <line:124:9, col:152> 'void'
|   | `-ConditionalOperator 0x55cf2bccfe18 <col:10, col:151> 'void'
|   |   |-CXXStaticCastExpr 0x55cf2bccfb08 <col:10, col:38> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x55cf2bccfae0 <col:30, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-ImplicitCastExpr 0x55cf2bccfac8 <col:31> 'bool' <PointerToBoolean>
|   |   |     `-ImplicitCastExpr 0x55cf2bccfab0 <col:31> 'Router *' <LValueToRValue>
|   |   |       `-MemberExpr 0x55cf2bccfa80 <col:31> 'Router *' lvalue ->_router 0x55cf2bccd960
|   |   |         `-CXXThisExpr 0x55cf2bccfa70 <col:31> 'Element *' implicit this
|   |   |-CXXFunctionalCastExpr 0x55cf2bccfb68 <col:42, col:49> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55cf2bccfb48 <col:48> 'int' 0
|   |   `-CallExpr 0x55cf2bccfd78 <col:53, col:151> 'void'
|   |     |-ImplicitCastExpr 0x55cf2bccfd60 <col:53> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55cf2bccfd40 <col:53> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55cf2b7f8810 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55cf2bccfdb8 <col:68> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55cf2bccfbd8 <col:68> 'const char [9]' lvalue "!_router"
|   |     |-ImplicitCastExpr 0x55cf2bccfdd0 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55cf2bccfbf8 <col:80> 'const char [30]' lvalue "../dummy_inc/click/element.hh"
|   |     |-ImplicitCastExpr 0x55cf2bccfde8 <col:113> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55cf2bccfc30 <col:113> 'int' 124
|   |     `-ImplicitCastExpr 0x55cf2bccfe00 <col:118, col:132> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55cf2bccfd28 <col:118, col:132> 'const char [43]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55cf2bccfd10 <col:132> 'const char [43]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55cf2bccfcc8 <col:132> 'const char [43]' lvalue "void Element::attach_router(Router *, int)"
|   |-BinaryOperator 0x55cf2bccfee0 <line:125:9, col:19> 'Router *' lvalue '='
|   | |-MemberExpr 0x55cf2bccfe78 <col:9> 'Router *' lvalue ->_router 0x55cf2bccd960
|   | | `-CXXThisExpr 0x55cf2bccfe68 <col:9> 'Element *' implicit this
|   | `-ImplicitCastExpr 0x55cf2bccfec8 <col:19> 'Router *' <LValueToRValue>
|   |   `-DeclRefExpr 0x55cf2bccfea8 <col:19> 'Router *' lvalue ParmVar 0x55cf2bcc24f8 'r' 'Router *'
|   `-BinaryOperator 0x55cf2bccff78 <line:126:9, col:19> 'int' lvalue '='
|     |-MemberExpr 0x55cf2bccff10 <col:9> 'int' lvalue ->_eindex 0x55cf2bccd9c8
|     | `-CXXThisExpr 0x55cf2bccff00 <col:9> 'Element *' implicit this
|     `-ImplicitCastExpr 0x55cf2bccff60 <col:19> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x55cf2bccff40 <col:19> 'int' lvalue ParmVar 0x55cf2bcc2578 'eindex' 'int'
|-CXXMethodDecl 0x55cf2bcc27d0 <line:130:5, col:38> col:16 used nports 'int (bool) const' inline
| `-ParmVarDecl 0x55cf2bcc2708 <col:23, col:28> col:28 isoutput 'bool'
|-CXXMethodDecl 0x55cf2bcc28a0 <line:131:5, col:26> col:16 used ninputs 'int () const' inline
|-CXXMethodDecl 0x55cf2bcc2968 <line:132:5, col:27> col:16 used noutputs 'int () const' inline
|-CXXRecordDecl 0x55cf2bcc2a08 <line:134:5, col:11> col:11 referenced class Port
|-CXXMethodDecl 0x55cf2bcc2c58 <line:135:5, col:82> col:52 used port 'const Element::Port &(bool, int) const'
| |-ParmVarDecl 0x55cf2bcc2ad0 <col:57, col:62> col:62 isoutput 'bool'
| |-ParmVarDecl 0x55cf2bcc2b50 <col:72, col:76> col:76 port 'int'
| |-NoInlineAttr 0x55cf2bcc2d08 <col:20>
| `-OptimizeNoneAttr 0x55cf2bcc2d60 <col:30>
|-CXXMethodDecl 0x55cf2bcc2e68 <line:136:5, col:68> col:52 input 'const Element::Port &(int) const'
| |-ParmVarDecl 0x55cf2bcc2da0 <col:58, col:62> col:62 port 'int'
| |-NoInlineAttr 0x55cf2bcc2f10 <col:20>
| `-OptimizeNoneAttr 0x55cf2bcc2f68 <col:30>
|-CXXMethodDecl 0x55cf2bcc3038 <line:137:5, col:69> col:52 output 'const Element::Port &(int) const'
| |-ParmVarDecl 0x55cf2bcc2fa8 <col:59, col:63> col:63 port 'int'
| |-NoInlineAttr 0x55cf2bcc30e0 <col:20>
| `-OptimizeNoneAttr 0x55cf2bcc3138 <col:30>
|-CXXMethodDecl 0x55cf2bcc32c8 <line:139:5, col:54> col:17 used port_active 'bool (bool, int) const' inline
| |-ParmVarDecl 0x55cf2bcc3170 <col:29, col:34> col:34 isoutput 'bool'
| `-ParmVarDecl 0x55cf2bcc31f0 <col:44, col:48> col:48 port 'int'
|-CXXMethodDecl 0x55cf2bcc3458 <line:140:5, col:41> col:17 input_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x55cf2bcc3390 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x55cf2bcc35a8 <line:141:5, col:41> col:17 input_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x55cf2bcc3518 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x55cf2bcc36f8 <line:142:5, col:42> col:17 output_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x55cf2bcc3668 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x55cf2bcc3848 <line:143:5, col:42> col:17 output_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x55cf2bcc37b8 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x55cf2bcc3b08 <line:144:5, col:57> col:10 port_flow 'void (bool, int, Bitvector *) const'
| |-ParmVarDecl 0x55cf2bcc3900 <col:20, col:25> col:25 isoutput 'bool'
| |-ParmVarDecl 0x55cf2bcc3980 <col:35, col:39> col:39 port 'int'
| `-ParmVarDecl 0x55cf2bcc3a28 <col:45, col:54> col:55 'Bitvector *'
|-CXXMethodDecl 0x55cf2bcc3be0 <line:147:5, col:28> col:12 configuration 'String () const'
|-CXXMethodDecl 0x55cf2bcc3ca0 <line:149:5, col:41> col:18 can_live_reconfigure 'bool () const' virtual
|-CXXMethodDecl 0x55cf2bcc3f70 <line:150:5, col:64> col:17 live_reconfigure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x55cf2bcc3e20 <col:34, col:48> col:49 'Vector<String> &'
| `-ParmVarDecl 0x55cf2bcc3e98 <col:51, col:63> col:64 'ErrorHandler *'
|-CXXMethodDecl 0x55cf2bcc4098 <line:152:5, col:33> col:19 home_thread 'RouterThread *() const'
|-CXXMethodDecl 0x55cf2bcc4270 <line:156:5, col:36> col:9 add_select 'int (int, int)'
| |-ParmVarDecl 0x55cf2bcc4150 <col:20, col:24> col:24 fd 'int'
| `-ParmVarDecl 0x55cf2bcc41d0 <col:28, col:32> col:32 mask 'int'
|-CXXMethodDecl 0x55cf2bcc4458 <line:157:5, col:39> col:9 remove_select 'int (int, int)'
| |-ParmVarDecl 0x55cf2bcc4338 <col:23, col:27> col:27 fd 'int'
| `-ParmVarDecl 0x55cf2bcc43b8 <col:31, col:35> col:35 mask 'int'
|-CXXMethodDecl 0x55cf2bcc47c8 <line:161:5, col:127> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x55cf2bcc4518 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x55cf2bcc4590 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55cf2bcc4610 <col:82, col:106> col:94 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x55cf2bccf580 <col:106> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x55cf2bccf560 <col:106> 'int' 0
| `-ParmVarDecl 0x55cf2bcc4688 <col:109, col:126> col:118 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55cf2bccf5b8 <col:126> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55cf2bccf598 <col:126> 'int' 0
|-CXXMethodDecl 0x55cf2bcc4b68 <line:162:5, col:115> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55cf2bcc4898 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x55cf2bcc4930 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55cf2bcc49b0 <col:82, col:86> col:86 user_data 'int'
| `-ParmVarDecl 0x55cf2bcc4a28 <col:97, col:114> col:106 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55cf2bccf5f0 <col:114> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55cf2bccf5d0 <col:114> 'int' 0
|-CXXMethodDecl 0x55cf2bcc4ef8 <line:163:5, col:117> col:10 add_read_handler 'void (const char *, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55cf2bcc4c40 <col:27, col:39> col:39 name 'const char *'
| |-ParmVarDecl 0x55cf2bcc4cb8 <col:45, col:65> col:65 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55cf2bcc4d38 <col:80, col:96> col:84 user_data 'int' cinit
| | `-IntegerLiteral 0x55cf2bccf608 <col:96> 'int' 0
| `-ParmVarDecl 0x55cf2bcc4db0 <col:99, col:116> col:108 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55cf2bccf648 <col:116> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55cf2bccf628 <col:116> 'int' 0
|-CXXMethodDecl 0x55cf2bcc5278 <line:164:5, col:130> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x55cf2bcc4fc8 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x55cf2bcc5040 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55cf2bcc50c0 <col:85, col:109> col:97 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x55cf2bccf680 <col:109> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x55cf2bccf660 <col:109> 'int' 0
| `-ParmVarDecl 0x55cf2bcc5138 <col:112, col:129> col:121 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55cf2bccf6b8 <col:129> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55cf2bccf698 <col:129> 'int' 0
|-CXXMethodDecl 0x55cf2bcc55f8 <line:165:5, col:118> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55cf2bcc5348 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x55cf2bcc53c0 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55cf2bcc5440 <col:85, col:89> col:89 user_data 'int'
| `-ParmVarDecl 0x55cf2bcc54b8 <col:100, col:117> col:109 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55cf2bccf6f0 <col:117> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55cf2bccf6d0 <col:117> 'int' 0
|-CXXMethodDecl 0x55cf2bcc5988 <line:166:5, col:120> col:10 add_write_handler 'void (const char *, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55cf2bcc56d0 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55cf2bcc5748 <col:46, col:67> col:67 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55cf2bcc57c8 <col:83, col:99> col:87 user_data 'int' cinit
| | `-IntegerLiteral 0x55cf2bccf708 <col:99> 'int' 0
| `-ParmVarDecl 0x55cf2bcc5840 <col:102, col:119> col:111 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55cf2bccf748 <col:119> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55cf2bccf728 <col:119> 'int' 0
|-CXXMethodDecl 0x55cf2bcc5da8 <line:167:5, col:142> col:10 set_handler 'void (const String &, int, HandlerCallback, const void *, const void *)'
| |-ParmVarDecl 0x55cf2bcc5a58 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x55cf2bcc5ad8 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x55cf2bcc5b50 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55cf2bcc5bd0 <col:79, col:108> col:91 read_user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x55cf2bccf780 <col:108> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x55cf2bccf760 <col:108> 'int' 0
| `-ParmVarDecl 0x55cf2bcc5c50 <col:111, col:141> col:123 write_user_data 'const void *' cinit
|   `-ImplicitCastExpr 0x55cf2bccf7b8 <col:141> 'const void *' <NullToPointer>
|     `-IntegerLiteral 0x55cf2bccf798 <col:141> 'int' 0
|-CXXMethodDecl 0x55cf2bcc61c8 <line:168:5, col:122> col:10 set_handler 'void (const String &, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x55cf2bcc5e80 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x55cf2bcc5f00 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x55cf2bcc5f78 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55cf2bcc5ff8 <col:79, col:83> col:83 read_user_data 'int'
| `-ParmVarDecl 0x55cf2bcc6078 <col:99, col:121> col:103 write_user_data 'int' cinit
|   `-IntegerLiteral 0x55cf2bccf7d0 <col:121> 'int' 0
|-CXXMethodDecl 0x55cf2bcc65f8 <line:169:5, col:124> col:10 set_handler 'void (const char *, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x55cf2bcc62a8 <col:22, col:34> col:34 name 'const char *'
| |-ParmVarDecl 0x55cf2bcc6328 <col:40, col:44> col:44 flags 'int'
| |-ParmVarDecl 0x55cf2bcc63a0 <col:51, col:67> col:67 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55cf2bcc6420 <col:77, col:98> col:81 read_user_data 'int' cinit
| | `-IntegerLiteral 0x55cf2bccf7f0 <col:98> 'int' 0
| `-ParmVarDecl 0x55cf2bcc64a0 <col:101, col:123> col:105 write_user_data 'int' cinit
|   `-IntegerLiteral 0x55cf2bccf810 <col:123> 'int' 0
|-CXXMethodDecl 0x55cf2bcc68c0 <line:170:5, col:81> col:9 set_handler_flags 'int (const String &, int, int)'
| |-ParmVarDecl 0x55cf2bcc66d0 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x55cf2bcc6750 <col:47, col:51> col:51 set_flags 'int'
| `-ParmVarDecl 0x55cf2bcc67d0 <col:62, col:80> col:66 clear_flags 'int' cinit
|   `-IntegerLiteral 0x55cf2bccf830 <col:80> 'int' 0
|-EnumDecl 0x55cf2bcc6978 <line:171:5, line:175:36> line:171:5
| |-EnumConstantDecl 0x55cf2bcc6a80 <col:12, col:42> col:12 TASKHANDLER_WRITE_SCHEDULED 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55cf2bcc6d10 <col:42> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf2bcc6a60 <col:42> 'int' Int: 1
| |     `-IntegerLiteral 0x55cf2bcc6a40 <col:42> 'int' 1
| |-EnumConstantDecl 0x55cf2bcc6b10 <line:172:12, col:40> col:12 TASKHANDLER_WRITE_TICKETS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55cf2bcc6d28 <col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf2bcc6af0 <col:40> 'int' Int: 2
| |     `-IntegerLiteral 0x55cf2bcc6ad0 <col:40> 'int' 2
| |-EnumConstantDecl 0x55cf2bcc6ba0 <line:173:12, col:44> col:12 TASKHANDLER_WRITE_HOME_THREAD 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55cf2bcc6d40 <col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf2bcc6b80 <col:44> 'int' Int: 4
| |     `-IntegerLiteral 0x55cf2bcc6b60 <col:44> 'int' 4
| |-EnumConstantDecl 0x55cf2bcc6c30 <line:174:12, col:36> col:12 TASKHANDLER_WRITE_ALL 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55cf2bcc6d58 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf2bcc6c10 <col:36> 'int' Int: 7
| |     `-IntegerLiteral 0x55cf2bcc6bf0 <col:36> 'int' 7
| `-EnumConstantDecl 0x55cf2bcc6cc0 <line:175:12, col:34> col:12 referenced TASKHANDLER_DEFAULT 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|   `-ImplicitCastExpr 0x55cf2bcc6d70 <col:34> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55cf2bcc6ca0 <col:34> 'int' Int: 6
|       `-IntegerLiteral 0x55cf2bcc6c80 <col:34> 'int' 6
|-CXXMethodDecl 0x55cf2bcc7028 <line:176:5, col:106> col:10 used add_task_handlers 'void (Task *, NotifierSignal *, int, const String &)'
| |-ParmVarDecl 0x55cf2bcc6d98 <col:28, col:34> col:34 task 'Task *'
| |-ParmVarDecl 0x55cf2bcc6e38 <col:40, col:56> col:56 signal 'NotifierSignal *'
| |-ParmVarDecl 0x55cf2bcc6eb8 <col:64, col:68> col:68 flags 'int'
| `-ParmVarDecl 0x55cf2bcc6f30 <col:75, col:105> col:89 prefix 'const String &' cinit
|   `-ExprWithCleanups 0x55cf2bccf8e8 <col:98, col:105> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x55cf2bccf8d0 <col:98, col:105> 'const String' lvalue
|       `-ImplicitCastExpr 0x55cf2bccf8b8 <col:98, col:105> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x55cf2bccf898 <col:98, col:105> 'String' (CXXTemporary 0x55cf2bccf898)
|           `-CXXTemporaryObjectExpr 0x55cf2bccf860 <col:98, col:105> 'String' 'void ()'
|-CXXMethodDecl 0x55cf2bcc72c8 <line:177:5, line:179:5> line:177:17 add_task_handlers 'void (Task *, NotifierSignal *, const String &)' inline
| |-ParmVarDecl 0x55cf2bcc70f8 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x55cf2bcc7170 <col:47, col:63> col:63 used signal 'NotifierSignal *'
| |-ParmVarDecl 0x55cf2bcc71e8 <col:71, col:101> col:85 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x55cf2bccf998 <col:94, col:101> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x55cf2bccf980 <col:94, col:101> 'const String' lvalue
| |     `-ImplicitCastExpr 0x55cf2bccf968 <col:94, col:101> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x55cf2bccf948 <col:94, col:101> 'String' (CXXTemporary 0x55cf2bccf948)
| |         `-CXXTemporaryObjectExpr 0x55cf2bccf910 <col:94, col:101> 'String' 'void ()'
| `-CompoundStmt 0x55cf2bcd0180 <col:104, line:179:5>
|   `-CXXMemberCallExpr 0x55cf2bcd00f8 <line:178:9, col:68> 'void'
|     |-MemberExpr 0x55cf2bcd00c8 <col:9> '<bound member function type>' ->add_task_handlers 0x55cf2bcc7028
|     | `-CXXThisExpr 0x55cf2bcd00b8 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x55cf2bcd0138 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x55cf2bcd0038 <col:27> 'Task *' lvalue ParmVar 0x55cf2bcc70f8 'task' 'Task *'
|     |-ImplicitCastExpr 0x55cf2bcd0150 <col:33> 'NotifierSignal *' <LValueToRValue>
|     | `-DeclRefExpr 0x55cf2bcd0058 <col:33> 'NotifierSignal *' lvalue ParmVar 0x55cf2bcc7170 'signal' 'NotifierSignal *'
|     |-ImplicitCastExpr 0x55cf2bcd0168 <col:41> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x55cf2bcd0078 <col:41> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x55cf2bcc6cc0 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x55cf2bcd0098 <col:62> 'const String' lvalue ParmVar 0x55cf2bcc71e8 'prefix' 'const String &'
|-CXXMethodDecl 0x55cf2bcc74d8 <line:180:5, line:182:5> line:180:17 add_task_handlers 'void (Task *, const String &)' inline
| |-ParmVarDecl 0x55cf2bcc7390 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x55cf2bcc7408 <col:47, col:77> col:61 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x55cf2bccfa48 <col:70, col:77> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x55cf2bccfa30 <col:70, col:77> 'const String' lvalue
| |     `-ImplicitCastExpr 0x55cf2bccfa18 <col:70, col:77> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x55cf2bccf9f8 <col:70, col:77> 'String' (CXXTemporary 0x55cf2bccf9f8)
| |         `-CXXTemporaryObjectExpr 0x55cf2bccf9c0 <col:70, col:77> 'String' 'void ()'
| `-CompoundStmt 0x55cf2bcd0358 <col:80, line:182:5>
|   `-CXXMemberCallExpr 0x55cf2bcd02d0 <line:181:9, col:63> 'void'
|     |-MemberExpr 0x55cf2bcd02a0 <col:9> '<bound member function type>' ->add_task_handlers 0x55cf2bcc7028
|     | `-CXXThisExpr 0x55cf2bcd0290 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x55cf2bcd0310 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x55cf2bcd0210 <col:27> 'Task *' lvalue ParmVar 0x55cf2bcc7390 'task' 'Task *'
|     |-ImplicitCastExpr 0x55cf2bcd0328 <col:33> 'NotifierSignal *' <NullToPointer>
|     | `-IntegerLiteral 0x55cf2bcd0230 <col:33> 'int' 0
|     |-ImplicitCastExpr 0x55cf2bcd0340 <col:36> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x55cf2bcd0250 <col:36> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x55cf2bcc6cc0 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x55cf2bcd0270 <col:57> 'const String' lvalue ParmVar 0x55cf2bcc7408 'prefix' 'const String &'
|-CXXMethodDecl 0x55cf2bcc77b8 <line:184:5, col:70> col:10 add_data_handlers 'void (const char *, int, uint8_t *)'
| |-ParmVarDecl 0x55cf2bcc75a0 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55cf2bcc7620 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55cf2bcc7698 <col:57, col:66> col:66 data 'uint8_t *'
|-CXXMethodDecl 0x55cf2bcc7a68 <line:185:5, col:67> col:10 add_data_handlers 'void (const char *, int, bool *)'
| |-ParmVarDecl 0x55cf2bcc7888 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55cf2bcc7908 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55cf2bcc7988 <col:57, col:63> col:63 data 'bool *'
|-CXXMethodDecl 0x55cf2bcc7d58 <line:186:5, col:71> col:10 add_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x55cf2bcc7b38 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55cf2bcc7bb8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55cf2bcc7c30 <col:57, col:67> col:67 data 'uint16_t *'
|-CXXMethodDecl 0x55cf2bcc8008 <line:187:5, col:66> col:10 add_data_handlers 'void (const char *, int, int *)'
| |-ParmVarDecl 0x55cf2bcc7e28 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55cf2bcc7ea8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55cf2bcc7f28 <col:57, col:62> col:62 data 'int *'
|-CXXMethodDecl 0x55cf2bcc82b8 <line:188:5, col:71> col:10 add_data_handlers 'void (const char *, int, unsigned int *)'
| |-ParmVarDecl 0x55cf2bcc80d8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55cf2bcc8158 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55cf2bcc81d8 <col:57, col:67> col:67 data 'unsigned int *'
|-CXXMethodDecl 0x55cf2bcc8568 <line:189:5, col:78> col:10 add_data_handlers 'void (const char *, int, atomic_uint32_t *)'
| |-ParmVarDecl 0x55cf2bcc8388 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55cf2bcc8408 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55cf2bcc8480 <col:57, col:74> col:74 data 'atomic_uint32_t *'
|-CXXMethodDecl 0x55cf2bcc8818 <line:190:5, col:67> col:10 add_data_handlers 'void (const char *, int, long *)'
| |-ParmVarDecl 0x55cf2bcc8638 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55cf2bcc86b8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55cf2bcc8738 <col:57, col:63> col:63 data 'long *'
|-CXXMethodDecl 0x55cf2bcc8b28 <line:191:5, col:76> col:10 add_data_handlers 'void (const char *, int, unsigned long *)'
| |-ParmVarDecl 0x55cf2bcc8940 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55cf2bcc89c0 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55cf2bcc8a40 <col:57, col:72> col:72 data 'unsigned long *'
|-CXXMethodDecl 0x55cf2bcc8e08 <line:193:5, col:72> col:10 add_data_handlers 'void (const char *, int, long long *)'
| |-ParmVarDecl 0x55cf2bcc8bf8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55cf2bcc8c78 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55cf2bcc8d20 <col:57, col:68> col:68 data 'long long *'
|-CXXMethodDecl 0x55cf2bcc90e8 <line:194:5, col:81> col:10 add_data_handlers 'void (const char *, int, unsigned long long *)'
| |-ParmVarDecl 0x55cf2bcc8ed8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55cf2bcc8f58 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55cf2bcc9000 <col:57, col:77> col:77 data 'unsigned long long *'
|-CXXMethodDecl 0x55cf2bcc9350 <line:196:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x55cf2bcc91b8 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x55cf2bcc9238 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x55cf2bcc92b0 <col:67, col:77> col:77 data 'uint16_t *'
|-CXXMethodDecl 0x55cf2bcc95f8 <line:197:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint32_t *)'
| |-ParmVarDecl 0x55cf2bcc9420 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x55cf2bcc94a0 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x55cf2bcc9518 <col:67, col:77> col:77 data 'uint32_t *'
|-CXXMethodDecl 0x55cf2bcc98a8 <line:199:5, col:69> col:10 add_data_handlers 'void (const char *, int, double *)'
| |-ParmVarDecl 0x55cf2bcc96c8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55cf2bcc9748 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55cf2bcc97c8 <col:57, col:65> col:65 data 'double *'
|-CXXMethodDecl 0x55cf2bcc9b58 <line:201:5, col:69> col:10 add_data_handlers 'void (const char *, int, String *)'
| |-ParmVarDecl 0x55cf2bcc9978 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55cf2bcc99f8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55cf2bcc9a70 <col:57, col:65> col:65 data 'String *'
|-CXXMethodDecl 0x55cf2bcc9e08 <line:202:5, col:72> col:10 add_data_handlers 'void (const char *, int, IPAddress *)'
| |-ParmVarDecl 0x55cf2bcc9c28 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55cf2bcc9ca8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55cf2bcc9d20 <col:57, col:68> col:68 data 'IPAddress *'
|-CXXMethodDecl 0x55cf2bcca0d8 <line:203:5, col:75> col:10 add_data_handlers 'void (const char *, int, EtherAddress *)'
| |-ParmVarDecl 0x55cf2bcc9ed8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55cf2bcc9f58 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55cf2bcc9ff8 <col:57, col:71> col:71 data 'EtherAddress *'
|-CXXMethodDecl 0x55cf2bcca408 <line:204:5, col:98> col:10 add_data_handlers 'void (const char *, int, Timestamp *, bool)'
| |-ParmVarDecl 0x55cf2bcca1a8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55cf2bcca228 <col:46, col:50> col:50 flags 'int'
| |-ParmVarDecl 0x55cf2bcca2a0 <col:57, col:68> col:68 data 'Timestamp *'
| `-ParmVarDecl 0x55cf2bcca318 <col:74, col:93> col:79 is_interval 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55cf2bccfa60 <col:93> 'bool' false
|-CXXMethodDecl 0x55cf2bcca5f0 <line:206:5, col:58> col:19 read_positional_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55cf2bcca4d8 <col:43, col:50> col:51 'Element *'
| `-ParmVarDecl 0x55cf2bcca558 <col:53, col:57> col:58 'void *'
|-CXXMethodDecl 0x55cf2bcca7c8 <line:207:5, col:55> col:19 read_keyword_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55cf2bcca6b0 <col:40, col:47> col:48 'Element *'
| `-ParmVarDecl 0x55cf2bcca730 <col:50, col:54> col:55 'void *'
|-CXXMethodDecl 0x55cf2bccaaa8 <line:208:5, col:92> col:16 reconfigure_positional_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x55cf2bcca888 <col:47, col:59> col:60 'const String &'
| |-ParmVarDecl 0x55cf2bcca900 <col:62, col:69> col:70 'Element *'
| |-ParmVarDecl 0x55cf2bcca980 <col:72, col:76> col:77 'void *'
| `-ParmVarDecl 0x55cf2bcca9f8 <col:79, col:91> col:92 'ErrorHandler *'
|-CXXMethodDecl 0x55cf2bccad98 <line:209:5, col:89> col:16 reconfigure_keyword_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x55cf2bccab78 <col:44, col:56> col:57 'const String &'
| |-ParmVarDecl 0x55cf2bccabf0 <col:59, col:66> col:67 'Element *'
| |-ParmVarDecl 0x55cf2bccac70 <col:69, col:73> col:74 'void *'
| `-ParmVarDecl 0x55cf2bccace8 <col:76, col:88> col:89 'ErrorHandler *'
|-CXXMethodDecl 0x55cf2bccafd0 <line:211:5, col:50> col:17 llrpc 'int (unsigned int, void *)' virtual
| |-ParmVarDecl 0x55cf2bccae70 <col:23, col:32> col:32 command 'unsigned int'
| `-ParmVarDecl 0x55cf2bccaef0 <col:41, col:47> col:47 arg 'void *'
|-CXXMethodDecl 0x55cf2bccb1b8 <line:212:5, col:48> col:9 local_llrpc 'int (unsigned int, void *)'
| |-ParmVarDecl 0x55cf2bccb098 <col:21, col:30> col:30 command 'unsigned int'
| `-ParmVarDecl 0x55cf2bccb118 <col:39, col:45> col:45 arg 'void *'
|-CXXRecordDecl 0x55cf2bccb268 prev 0x55cf2bcc2a08 <line:214:5, line:252:5> line:214:11 referenced class Port definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55cf2bccb360 <col:5, col:11> col:11 implicit referenced class Port
| |-AccessSpecDecl 0x55cf2bccb3f0 <col:18, col:24> col:18 public
| |-CXXMethodDecl 0x55cf2bccb468 <line:216:9, col:30> col:21 used active 'bool () const' inline
| |-CXXMethodDecl 0x55cf2bccb528 <line:217:9, col:35> col:25 element 'Element *() const' inline
| |-CXXMethodDecl 0x55cf2bccb5f0 <line:218:9, col:27> col:20 port 'int () const' inline
| |-CXXMethodDecl 0x55cf2bccb768 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| | |-ParmVarDecl 0x55cf2bccb6a0 <col:54, col:62> col:62 p 'Packet *'
| | |-NoInlineAttr 0x55cf2bccb810 <col:24>
| | `-OptimizeNoneAttr 0x55cf2bccb868 <col:34>
| |-CXXMethodDecl 0x55cf2bccb8b0 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
| |-CXXMethodDecl 0x55cf2bccbb68 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| | |-ParmVarDecl 0x55cf2bccb960 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x55cf2bccb9d8 <col:43, col:52> col:52 e 'Element *'
| | `-ParmVarDecl 0x55cf2bccba58 <col:55, col:59> col:59 port 'int'
| |-AccessSpecDecl 0x55cf2bccbc20 <line:229:7, col:14> col:7 private
| |-FieldDecl 0x55cf2bccbc58 <line:231:9, col:18> col:18 referenced _e 'Element *'
| |-FieldDecl 0x55cf2bccbcc0 <line:232:9, col:13> col:13 referenced _port 'int'
| |-CXXConstructorDecl 0x55cf2bccbd48 <line:247:9, col:21> col:16 Port 'void ()' inline
| |-CXXMethodDecl 0x55cf2bccc068 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| | |-ParmVarDecl 0x55cf2bccbe00 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x55cf2bccbe78 <col:43, col:52> col:52 owner 'Element *'
| | |-ParmVarDecl 0x55cf2bccbef0 <col:59, col:68> col:68 e 'Element *'
| | `-ParmVarDecl 0x55cf2bccbf70 <col:71, col:75> col:75 port 'int'
| |-FriendDecl 0x55cf2bccc180 <line:250:9, col:22> col:16 'class Element':'Element'
| |-CXXConstructorDecl 0x55cf2bcd3af8 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x55cf2bcd3af8
| | `-ParmVarDecl 0x55cf2bcd3c08 <col:11> col:11 'const Element::Port &'
| |-CXXConstructorDecl 0x55cf2bcd3ca8 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x55cf2bcd3ca8
| | `-ParmVarDecl 0x55cf2bcd3db8 <col:11> col:11 'Element::Port &&'
| `-CXXDestructorDecl 0x55cf2be83db0 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55cf2bccc1f8 <line:256:5, col:49> col:12 id 'String () const'
| `-DeprecatedAttr 0x55cf2bccc298 <col:38> "" ""
|-CXXMethodDecl 0x55cf2bccc328 <line:257:5, col:55> col:12 landmark 'String () const'
| `-DeprecatedAttr 0x55cf2bccc3c8 <col:44> "" ""
|-AccessSpecDecl 0x55cf2bccc438 <line:260:3, col:10> col:3 private
|-EnumDecl 0x55cf2bccc460 <line:262:5, col:29> col:5
| `-EnumConstantDecl 0x55cf2bccc560 <col:12, col:27> col:12 referenced INLINE_PORTS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:262:5)'
|   `-ImplicitCastExpr 0x55cf2bccc5b0 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55cf2bccc540 <col:27> 'int' Int: 4
|       `-IntegerLiteral 0x55cf2bccc520 <col:27> 'int' 4
|-FieldDecl 0x55cf2bccc668 <line:264:5, col:19> col:11 referenced _ports 'Element::Port *[2]'
|-FieldDecl 0x55cf2bccc818 <line:265:5, col:36> col:10 _inline_ports 'Element::Port [4]'
|-FieldDecl 0x55cf2bccc8d0 <line:267:5, col:18> col:9 referenced _nports 'int [2]'
|-FieldDecl 0x55cf2bccd960 <line:269:5, col:13> col:13 referenced _router 'Router *'
|-FieldDecl 0x55cf2bccd9c8 <line:270:5, col:9> col:9 referenced _eindex 'int'
|-CXXConstructorDecl 0x55cf2bccdb18 <line:292:5, col:28> col:5 Element 'void (const Element &)'
| `-ParmVarDecl 0x55cf2bccda58 <col:13, col:27> col:28 'const Element &'
|-CXXMethodDecl 0x55cf2bccdcc8 <line:293:5, col:39> col:14 operator= 'Element &(const Element &)'
| `-ParmVarDecl 0x55cf2bccdbd8 <col:24, col:38> col:39 'const Element &'
|-CXXMethodDecl 0x55cf2bccdea8 <line:296:5, col:28> col:9 set_nports 'int (int, int)'
| |-ParmVarDecl 0x55cf2bccdd88 <col:20> col:23 'int'
| `-ParmVarDecl 0x55cf2bccde08 <col:25> col:28 'int'
|-CXXMethodDecl 0x55cf2bcce150 <line:297:5, col:47> col:9 notify_nports 'int (int, int, ErrorHandler *)'
| |-ParmVarDecl 0x55cf2bccdf70 <col:23> col:26 'int'
| |-ParmVarDecl 0x55cf2bccdff0 <col:28> col:31 'int'
| `-ParmVarDecl 0x55cf2bcce068 <col:33, col:46> col:47 'ErrorHandler *'
|-EnumDecl 0x55cf2bcce208 <line:298:5, col:47> col:10 Processing
| |-EnumConstantDecl 0x55cf2bcce2d0 <col:23> col:23 VAGNOSTIC 'Element::Processing'
| |-EnumConstantDecl 0x55cf2bcce320 <col:34> col:34 VPUSH 'Element::Processing'
| `-EnumConstantDecl 0x55cf2bcce370 <col:41> col:41 VPULL 'Element::Processing'
|-CXXMethodDecl 0x55cf2bcce550 <line:299:5, col:71> col:16 next_processing_code 'int (const char *&, ErrorHandler *)' static
| |-ParmVarDecl 0x55cf2bcce400 <col:37, col:50> col:50 p 'const char *&'
| `-ParmVarDecl 0x55cf2bcce478 <col:53, col:67> col:67 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55cf2bcce7f8 <line:300:5, col:80> col:10 processing_vector 'void (int *, int *, ErrorHandler *) const'
| |-ParmVarDecl 0x55cf2bcce618 <col:28, col:33> col:33 input_codes 'int *'
| |-ParmVarDecl 0x55cf2bcce698 <col:46, col:51> col:51 output_codes 'int *'
| `-ParmVarDecl 0x55cf2bcce710 <col:65, col:77> col:78 'ErrorHandler *'
|-CXXMethodDecl 0x55cf2bccea18 <line:302:5, col:74> col:10 initialize_ports 'void (const int *, const int *)'
| |-ParmVarDecl 0x55cf2bcce8c8 <col:27, col:38> col:38 input_codes 'const int *'
| `-ParmVarDecl 0x55cf2bcce948 <col:51, col:62> col:62 output_codes 'const int *'
|-CXXMethodDecl 0x55cf2bcced50 <line:303:5, col:60> col:9 connect_port 'int (bool, int, Element *, int)'
| |-ParmVarDecl 0x55cf2bccead8 <col:22, col:27> col:27 isoutput 'bool'
| |-ParmVarDecl 0x55cf2bcceb58 <col:37, col:41> col:41 port 'int'
| |-ParmVarDecl 0x55cf2bccebd0 <col:47, col:54> col:55 'Element *'
| `-ParmVarDecl 0x55cf2bccec50 <col:57> col:60 'int'
|-CXXMethodDecl 0x55cf2bccef38 <line:305:5, col:68> col:19 read_handlers_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55cf2bccee20 <col:41, col:50> col:50 e 'Element *'
| `-ParmVarDecl 0x55cf2bcceea0 <col:53, col:59> col:59 user_data 'void *'
|-CXXMethodDecl 0x55cf2bccf088 <line:306:5, col:51> col:10 add_default_handlers 'void (bool)'
| `-ParmVarDecl 0x55cf2bcceff8 <col:31, col:36> col:36 writable_config 'bool'
|-CXXMethodDecl 0x55cf2bccf408 <line:307:5, col:100> col:17 add_data_handlers 'void (const char *, int, HandlerCallback, void *)' inline
| |-ParmVarDecl 0x55cf2bccf148 <col:35, col:47> col:47 name 'const char *'
| |-ParmVarDecl 0x55cf2bccf1c8 <col:53, col:57> col:57 flags 'int'
| |-ParmVarDecl 0x55cf2bccf240 <col:64, col:80> col:80 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| `-ParmVarDecl 0x55cf2bccf2c0 <col:90, col:96> col:96 data 'void *'
`-FriendDecl 0x55cf2bccf520 <line:309:5, col:18> col:12 'class Router':'Router'

Layout: <CGRecordLayout
  LLVMType:%class.Element = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Element.base = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class AlignmentInfo
         0 |   class Element (primary base)
         0 |     (Element vtable pointer)
         8 |     class Element::Port *[2] _ports
        24 |     class Element::Port [4] _inline_ports
        88 |     int [2] _nports
        96 |     class Router * _router
       104 |     int _eindex
       112 |   class Vector<int> _elem_offset
       112 |     class vector_memory<class sized_array_memory<4> > vm_
       112 |       vector_memory<class sized_array_memory<4> >::type * l_
       120 |       vector_memory::size_type n_
       124 |       vector_memory::size_type capacity_
       128 |   class Vector<int> _elem_icount
       128 |     class vector_memory<class sized_array_memory<4> > vm_
       128 |       vector_memory<class sized_array_memory<4> >::type * l_
       136 |       vector_memory::size_type n_
       140 |       vector_memory::size_type capacity_
       144 |   class Vector<int> _chunks
       144 |     class vector_memory<class sized_array_memory<4> > vm_
       144 |       vector_memory<class sized_array_memory<4> >::type * l_
       152 |       vector_memory::size_type n_
       156 |       vector_memory::size_type capacity_
       160 |   class Vector<int> _offsets
       160 |     class vector_memory<class sized_array_memory<4> > vm_
       160 |       vector_memory<class sized_array_memory<4> >::type * l_
       168 |       vector_memory::size_type n_
       172 |       vector_memory::size_type capacity_
           | [sizeof=176, dsize=176, align=8,
           |  nvsize=176, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55cf2bcd6c68 <../dummy_inc/click/standard/alignmentinfo.hh:27:1, line:45:1> line:27:7 class AlignmentInfo definition
|-DefinitionData polymorphic has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-public 'Element'
|-CXXRecordDecl 0x55cf2bcd6dc8 <col:1, col:7> col:7 implicit referenced class AlignmentInfo
|-AccessSpecDecl 0x55cf2bcd6e58 <col:40, col:46> col:40 public
|-CXXConstructorDecl 0x55cf2bcd6ee0 <line:29:5, col:19> col:5 AlignmentInfo 'void ()'
|-CXXMethodDecl 0x55cf2bcd6fe0 <line:31:5, col:62> col:17 class_name 'const char *() const'
| |-Overrides: [ 0x55cf2bcbf9b8 Element::class_name 'const char *() const' ]
| `-CompoundStmt 0x55cf2bce3610 <col:36, col:62>
|   `-ReturnStmt 0x55cf2bce3600 <col:38, col:45>
|     `-ImplicitCastExpr 0x55cf2bce35e8 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x55cf2bce35c0 <col:45> 'const char [14]' lvalue "AlignmentInfo"
|-CXXMethodDecl 0x55cf2bcd70a8 <line:32:5, col:64> col:9 configure_phase 'int () const'
| |-Overrides: [ 0x55cf2bcc0e10 Element::configure_phase 'int () const' ]
| `-CompoundStmt 0x55cf2bce3670 <col:33, col:64>
|   `-ReturnStmt 0x55cf2bce3660 <col:35, col:42>
|     `-ImplicitCastExpr 0x55cf2bce3648 <col:42> 'int' <IntegralCast>
|       `-DeclRefExpr 0x55cf2bce3628 <col:42> 'Element::ConfigurePhase' EnumConstant 0x55cf2bcc0b70 'CONFIGURE_PHASE_INFO' 'Element::ConfigurePhase'
|-CXXMethodDecl 0x55cf2bcd7380 <line:33:5, col:51> col:9 configure 'int (Vector<String> &, ErrorHandler *)'
| |-Overrides: [ 0x55cf2bcc1250 Element::configure 'int (Vector<String> &, ErrorHandler *)' ]
| |-ParmVarDecl 0x55cf2bcd7230 <col:19, col:34> col:35 'Vector<String> &'
| `-ParmVarDecl 0x55cf2bcd72a8 <col:37, col:50> col:51 'ErrorHandler *'
|-CXXMethodDecl 0x55cf2bcd76b8 <line:35:5, col:70> col:10 query1 'bool (const Element *, int, int &, int &) const'
| |-ParmVarDecl 0x55cf2bcd7440 <col:17, col:32> col:32 e 'const Element *'
| |-ParmVarDecl 0x55cf2bcd74c0 <col:35, col:39> col:39 port 'int'
| |-ParmVarDecl 0x55cf2bcd7540 <col:45, col:50> col:50 chunk 'int &'
| `-ParmVarDecl 0x55cf2bcd75c0 <col:57, col:62> col:62 offset 'int &'
|-CXXMethodDecl 0x55cf2bcd79f8 <line:36:5, col:74> col:17 query 'bool (const Element *, int, int &, int &)' static
| |-ParmVarDecl 0x55cf2bcd7788 <col:23, col:38> col:38 e 'const Element *'
| |-ParmVarDecl 0x55cf2bcd7808 <col:41, col:45> col:45 port 'int'
| |-ParmVarDecl 0x55cf2bcd7888 <col:51, col:56> col:56 chunk 'int &'
| `-ParmVarDecl 0x55cf2bcd7908 <col:63, col:68> col:68 offset 'int &'
|-AccessSpecDecl 0x55cf2bcd7ab8 <line:38:3, col:10> col:3 private
|-FieldDecl 0x55cf2bce2ac0 <line:40:5, col:17> col:17 _elem_offset 'Vector<int>':'Vector<int>'
|-FieldDecl 0x55cf2bce2bd0 <line:41:5, col:17> col:17 _elem_icount 'Vector<int>':'Vector<int>'
|-FieldDecl 0x55cf2bce2ce0 <line:42:5, col:17> col:17 _chunks 'Vector<int>':'Vector<int>'
|-FieldDecl 0x55cf2bce2df0 <line:43:5, col:17> col:17 _offsets 'Vector<int>':'Vector<int>'
|-CXXConstructorDecl 0x55cf2bce2e68 <line:27:7> col:7 implicit AlignmentInfo 'void (const AlignmentInfo &)' inline default_delete noexcept-unevaluated 0x55cf2bce2e68
| `-ParmVarDecl 0x55cf2bce2f78 <col:7> col:7 'const AlignmentInfo &'
|-CXXConstructorDecl 0x55cf2bce3018 <col:7> col:7 implicit AlignmentInfo 'void (AlignmentInfo &&)' inline default_delete noexcept-unevaluated 0x55cf2bce3018
| `-ParmVarDecl 0x55cf2bce3128 <col:7> col:7 'AlignmentInfo &&'
|-CXXMethodDecl 0x55cf2bce31c8 <col:7> col:7 implicit operator= 'AlignmentInfo &(const AlignmentInfo &)' inline default_delete noexcept-unevaluated 0x55cf2bce31c8
| `-ParmVarDecl 0x55cf2bce32d8 <col:7> col:7 'const AlignmentInfo &'
|-CXXMethodDecl 0x55cf2bce3348 <col:7> col:7 implicit operator= 'AlignmentInfo &(AlignmentInfo &&)' inline default_delete noexcept-unevaluated 0x55cf2bce3348
| `-ParmVarDecl 0x55cf2bce3458 <col:7> col:7 'AlignmentInfo &&'
`-CXXDestructorDecl 0x55cf2bce34e0 <col:7> col:7 implicit ~AlignmentInfo 'void ()' inline default noexcept-unevaluated 0x55cf2bce34e0
  `-Overrides: [ 0x55cf2bcbe558 Element::~Element 'void () noexcept' ]

Layout: <CGRecordLayout
  LLVMType:%class.AlignmentInfo = type { %class.Element.base, %class.Vector.5, %class.Vector.5, %class.Vector.5, %class.Vector.5 }
  NonVirtualBaseLLVMType:%class.AlignmentInfo = type { %class.Element.base, %class.Vector.5, %class.Vector.5, %class.Vector.5, %class.Vector.5 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class NumArg (empty)
           | [sizeof=1, dsize=1, align=1,
           |  nvsize=1, nvalign=1]

*** Dumping AST Record Layout
         0 | class IntArg
         0 |   class NumArg (base) (empty)
         0 |   int base
         4 |   int status
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55cf2bd7a210 <../dummy_inc/click/args.hh:1013:1, line:1027:1> line:1013:7 referenced class NumArg definition
|-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |-DefaultConstructor exists trivial constexpr defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55cf2bd7a328 <col:1, col:7> col:7 implicit class NumArg
|-AccessSpecDecl 0x55cf2bd7a3b8 <col:16, col:22> col:16 public
|-EnumDecl 0x55cf2bd7a3e0 <line:1014:5, line:1026:5> line:1014:5
| |-EnumConstantDecl 0x55cf2bd7a4e0 <line:1015:9, col:21> col:9 status_ok 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| | `-ImplicitCastExpr 0x55cf2bd7a730 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf2bd7a4c0 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x55cf2bd7a4a0 <col:21> 'int' 0
| |-EnumConstantDecl 0x55cf2bd7a570 <line:1016:9, col:24> col:9 referenced status_inval 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| | `-ImplicitCastExpr 0x55cf2bd7a748 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf2bd7a550 <col:24> 'int' Int: 22
| |     `-IntegerLiteral 0x55cf2bd7a530 <col:24> 'int' 22
| |-EnumConstantDecl 0x55cf2bd7a600 <line:1017:9, col:24> col:9 referenced status_range 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| | `-ImplicitCastExpr 0x55cf2bd7a760 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf2bd7a5e0 <col:24> 'int' Int: 34
| |     `-IntegerLiteral 0x55cf2bd7a5c0 <col:24> 'int' 34
| |-EnumConstantDecl 0x55cf2bd7a690 <line:1019:9, col:25> col:9 status_notsup 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| | `-ImplicitCastExpr 0x55cf2bd7a778 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf2bd7a670 <col:25> 'int' Int: 95
| |     `-IntegerLiteral 0x55cf2bd7a650 <col:25> 'int' 95
| `-EnumConstantDecl 0x55cf2bd7a6e0 <line:1025:9> col:9 status_unitless 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
|-CXXConstructorDecl 0x55cf2bd7c0f0 <line:1013:7> col:7 implicit used constexpr NumArg 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55cf2bd7c528 <col:7>
|-CXXConstructorDecl 0x55cf2bd7c1f8 <col:7> col:7 implicit constexpr NumArg 'void (const NumArg &)' inline default trivial noexcept-unevaluated 0x55cf2bd7c1f8
| `-ParmVarDecl 0x55cf2bd7c308 <col:7> col:7 'const NumArg &'
|-CXXConstructorDecl 0x55cf2bd7c3a8 <col:7> col:7 implicit constexpr NumArg 'void (NumArg &&)' inline default trivial noexcept-unevaluated 0x55cf2bd7c3a8
| `-ParmVarDecl 0x55cf2bd7c4b8 <col:7> col:7 'NumArg &&'
`-CXXDestructorDecl 0x55cf2bd7e688 <col:7> col:7 implicit ~NumArg 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.NumArg = type { i8 }
  NonVirtualBaseLLVMType:%class.NumArg = type { i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55cf2bd7a7a8 <../dummy_inc/click/args.hh:1040:1, line:1095:1> line:1040:7 referenced class IntArg definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-public 'NumArg'
|-CXXRecordDecl 0x55cf2bd7a908 <col:1, col:7> col:7 implicit referenced class IntArg
|-AccessSpecDecl 0x55cf2bd7a998 <col:32, col:38> col:32 public
|-TypedefDecl 0x55cf2bd7a9d0 <line:1042:5, col:22> col:22 referenced limb_type 'uint32_t':'unsigned int'
| `-TypedefType 0x55cf2b8b1d10 'uint32_t' sugar
|   |-Typedef 0x55cf2b7c2408 'uint32_t'
|   `-TypedefType 0x55cf2b79b440 '__uint32_t' sugar
|     |-Typedef 0x55cf2b79b038 '__uint32_t'
|     `-BuiltinType 0x55cf2b759410 'unsigned int'
|-CXXConstructorDecl 0x55cf2bd7ab18 <line:1044:5, line:1046:5> line:1044:5 used IntArg 'void (int)'
| |-ParmVarDecl 0x55cf2bd7aa40 <col:12, col:20> col:16 used b 'int' cinit
| | `-IntegerLiteral 0x55cf2bd7bff8 <col:20> 'int' 0
| |-CXXCtorInitializer 'NumArg'
| | `-CXXConstructExpr 0x55cf2bd7c538 <col:5> 'NumArg' 'void () noexcept'
| |-CXXCtorInitializer Field 0x55cf2bd7b8b0 'base' 'int'
| | `-ImplicitCastExpr 0x55cf2bd7c098 <line:1045:16> 'int' <LValueToRValue>
| |   `-DeclRefExpr 0x55cf2bd7c058 <col:16> 'int' lvalue ParmVar 0x55cf2bd7aa40 'b' 'int'
| `-CompoundStmt 0x55cf2bd7c5a8 <col:19, line:1046:5>
|-CXXMethodDecl 0x55cf2bd7b010 <line:1048:5, line:1050:50> line:1048:17 parse 'const char *(const char *, const char *, bool, int, IntArg::limb_type *, int)'
| |-ParmVarDecl 0x55cf2bd7abe0 <col:23, col:35> col:35 begin 'const char *'
| |-ParmVarDecl 0x55cf2bd7ac60 <col:42, col:54> col:54 end 'const char *'
| |-ParmVarDecl 0x55cf2bd7acd8 <line:1049:23, col:28> col:28 is_signed 'bool'
| |-ParmVarDecl 0x55cf2bd7ad58 <col:39, col:43> col:43 size 'int'
| |-ParmVarDecl 0x55cf2bd7ae18 <line:1050:23, col:34> col:34 value 'IntArg::limb_type *'
| `-ParmVarDecl 0x55cf2bd7ae98 <col:41, col:45> col:45 nlimb 'int'
|-FunctionTemplateDecl 0x55cf2bd7b468 <line:1052:5, line:1067:5> line:1053:10 parse_saturating
| |-TemplateTypeParmDecl 0x55cf2bd7b0e0 <line:1052:14, col:23> col:23 referenced typename depth 0 index 0 V
| `-CXXMethodDecl 0x55cf2bd7b3c8 <line:1053:5, line:1067:5> line:1053:10 parse_saturating 'bool (const String &, V &, const ArgContext &)'
|   |-ParmVarDecl 0x55cf2bd7b188 <col:27, col:41> col:41 referenced str 'const String &'
|   |-ParmVarDecl 0x55cf2bd7b228 <col:46, col:49> col:49 referenced result 'V &'
|   |-ParmVarDecl 0x55cf2bd7b2a0 <col:57, col:82> col:75 referenced args 'const ArgContext &' cinit
|   | `-DeclRefExpr 0x55cf2bd7c018 <col:82> 'const ArgContext' lvalue Var 0x55cf2bd6ffa8 'blank_args' 'const ArgContext'
|   `-CompoundStmt 0x55cf2bd7d538 <col:94, line:1067:5>
|     |-DeclStmt 0x55cf2bd7c738 <line:1054:9, col:64>
|     | `-VarDecl 0x55cf2bd7c5c8 <col:9, col:55> col:24 referenced is_signed 'const bool' constexpr cinit
|     |   `-CXXDependentScopeMemberExpr 0x55cf2bd7c6f0 <col:36, col:55> '<dependent type>' lvalue ->is_signed
|     |-DeclStmt 0x55cf2bd7c958 <line:1055:9, col:91>
|     | `-VarDecl 0x55cf2bd7c768 <col:9, col:90> col:23 referenced nlimb 'const int' constexpr cinit
|     |   `-CXXFunctionalCastExpr 0x55cf2bd7c930 <col:31, col:90> 'int' functional cast to int <Dependent>
|     |     `-BinaryOperator 0x55cf2bd7c910 <col:35, col:89> 'unsigned long' '/'
|     |       |-ParenExpr 0x55cf2bd7c8c0 <col:35, col:69> 'unsigned long'
|     |       | `-BinaryOperator 0x55cf2bd7c8a0 <col:36, col:68> 'unsigned long' '-'
|     |       |   |-BinaryOperator 0x55cf2bd7c848 <col:36, col:64> 'unsigned long' '+'
|     |       |   | |-UnaryExprOrTypeTraitExpr 0x55cf2bd7c7f8 <col:36, col:44> 'unsigned long' sizeof 'V'
|     |       |   | `-UnaryExprOrTypeTraitExpr 0x55cf2bd7c828 <col:48, col:64> 'unsigned long' sizeof 'IntArg::limb_type':'unsigned int'
|     |       |   `-ImplicitCastExpr 0x55cf2bd7c888 <col:68> 'unsigned long' <IntegralCast>
|     |       |     `-IntegerLiteral 0x55cf2bd7c868 <col:68> 'int' 1
|     |       `-UnaryExprOrTypeTraitExpr 0x55cf2bd7c8f0 <col:73, col:89> 'unsigned long' sizeof 'IntArg::limb_type':'unsigned int'
|     |-DeclStmt 0x55cf2bd7cb18 <line:1056:9, col:27>
|     | `-VarDecl 0x55cf2bd7cab0 <col:9, col:26> col:19 referenced x 'IntArg::limb_type [nlimb]'
|     |-IfStmt 0x55cf2bd7cf60 <line:1057:9, line:1059:22>
|     | |-CXXOperatorCallExpr 0x55cf2bd7ce90 <line:1057:13, line:1058:24> '<dependent type>'
|     | | |-UnresolvedLookupExpr 0x55cf2bd7ce10 <col:13> '<overloaded function type>' lvalue (ADL) = 'operator!=' 0x55cf2bc7be38 0x55cf2bac5418 0x55cf2bac50f0 0x55cf2bab68d0 0x55cf2bab6580 0x55cf2bab5e70 0x55cf2ba889b0 0x55cf2ba14b60
|     | | |-CallExpr 0x55cf2bd7cd50 <line:1057:13, col:78> '<dependent type>'
|     | | | |-UnresolvedMemberExpr 0x55cf2bd7cb40 <col:13> '<bound member function type>' lvalue
|     | | | |-CXXMemberCallExpr 0x55cf2bd7cbf0 <col:19, col:29> 'String::const_iterator':'const char *'
|     | | | | `-MemberExpr 0x55cf2bd7cbc0 <col:19, col:23> '<bound member function type>' .begin 0x55cf2baa5ad8
|     | | | |   `-DeclRefExpr 0x55cf2bd7cba0 <col:19> 'const String' lvalue ParmVar 0x55cf2bd7b188 'str' 'const String &'
|     | | | |-CXXMemberCallExpr 0x55cf2bd7cc60 <col:32, col:40> 'String::const_iterator':'const char *'
|     | | | | `-MemberExpr 0x55cf2bd7cc30 <col:32, col:36> '<bound member function type>' .end 0x55cf2baa5cf0
|     | | | |   `-DeclRefExpr 0x55cf2bd7cc10 <col:32> 'const String' lvalue ParmVar 0x55cf2bd7b188 'str' 'const String &'
|     | | | |-DeclRefExpr 0x55cf2bd7cc80 <col:43> 'const bool' lvalue Var 0x55cf2bd7c5c8 'is_signed' 'const bool'
|     | | | |-CXXFunctionalCastExpr 0x55cf2bd7cce8 <col:54, col:67> 'int' functional cast to int <Dependent>
|     | | | | `-UnaryExprOrTypeTraitExpr 0x55cf2bd7ccc8 <col:58, col:66> 'unsigned long' sizeof 'V'
|     | | | |-DeclRefExpr 0x55cf2bd7cd10 <col:70> 'IntArg::limb_type [nlimb]' lvalue Var 0x55cf2bd7cab0 'x' 'IntArg::limb_type [nlimb]'
|     | | | `-DeclRefExpr 0x55cf2bd7cd30 <col:73> 'const int' lvalue Var 0x55cf2bd7c768 'nlimb' 'const int'
|     | | `-CXXMemberCallExpr 0x55cf2bd7cdf0 <line:1058:16, col:24> 'String::const_iterator':'const char *'
|     | |   `-MemberExpr 0x55cf2bd7cdc0 <col:16, col:20> '<bound member function type>' .end 0x55cf2baa5cf0
|     | |     `-DeclRefExpr 0x55cf2bd7cda0 <col:16> 'const String' lvalue ParmVar 0x55cf2bd7b188 'str' 'const String &'
|     | `-BinaryOperator 0x55cf2bd7cf40 <line:1059:13, col:22> 'int' lvalue '='
|     |   |-MemberExpr 0x55cf2bd7ced8 <col:13> 'int' lvalue ->status 0x55cf2bd7b918
|     |   | `-CXXThisExpr 0x55cf2bd7cec8 <col:13> 'IntArg *' implicit this
|     |   `-ImplicitCastExpr 0x55cf2bd7cf28 <col:22> 'int' <IntegralCast>
|     |     `-DeclRefExpr 0x55cf2bd7cf08 <col:22> 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)' EnumConstant 0x55cf2bd7a570 'status_inval' 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
|     |-IfStmt 0x55cf2bd7d1b0 <line:1060:9, line:1063:9>
|     | |-BinaryOperator 0x55cf2bd7d098 <line:1060:13, col:33> 'bool' '&&'
|     | | |-ImplicitCastExpr 0x55cf2bd7d080 <col:13> 'bool' <IntegralToBoolean>
|     | | | `-ImplicitCastExpr 0x55cf2bd7d068 <col:13> 'int' <LValueToRValue>
|     | | |   `-MemberExpr 0x55cf2bd7cf88 <col:13> 'int' lvalue ->status 0x55cf2bd7b918
|     | | |     `-CXXThisExpr 0x55cf2bd7cf78 <col:13> 'IntArg *' implicit this
|     | | `-BinaryOperator 0x55cf2bd7d048 <col:23, col:33> 'bool' '!='
|     | |   |-ImplicitCastExpr 0x55cf2bd7d018 <col:23> 'int' <LValueToRValue>
|     | |   | `-MemberExpr 0x55cf2bd7cfc8 <col:23> 'int' lvalue ->status 0x55cf2bd7b918
|     | |   |   `-CXXThisExpr 0x55cf2bd7cfb8 <col:23> 'IntArg *' implicit this
|     | |   `-ImplicitCastExpr 0x55cf2bd7d030 <col:33> 'int' <IntegralCast>
|     | |     `-DeclRefExpr 0x55cf2bd7cff8 <col:33> 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)' EnumConstant 0x55cf2bd7a600 'status_range' 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
|     | `-CompoundStmt 0x55cf2bd7d190 <col:47, line:1063:9>
|     |   |-CXXMemberCallExpr 0x55cf2bd7d130 <line:1061:13, col:40> 'void'
|     |   | |-MemberExpr 0x55cf2bd7d0d8 <col:13, col:18> '<bound member function type>' .error 0x55cf2bc42a50
|     |   | | `-DeclRefExpr 0x55cf2bd7d0b8 <col:13> 'const ArgContext' lvalue ParmVar 0x55cf2bd7b2a0 'args' 'const ArgContext &'
|     |   | `-ImplicitCastExpr 0x55cf2bd7d158 <col:24> 'const char *' <ArrayToPointerDecay>
|     |   |   `-StringLiteral 0x55cf2bd7d108 <col:24> 'const char [15]' lvalue "invalid number"
|     |   `-ReturnStmt 0x55cf2bd7d180 <line:1062:13, col:20>
|     |     `-CXXBoolLiteralExpr 0x55cf2bd7d170 <col:20> 'bool' false
|     |-DeclStmt 0x55cf2bd7d388 <line:1064:9, col:64>
|     | `-TypedefDecl 0x55cf2bd7d330 <col:9, col:49> col:49 referenced unsigned_v_type 'typename make_unsigned<V>::type'
|     |   `-DependentNameType 0x55cf2bd7d2c0 'typename make_unsigned<V>::type' dependent
|     |-CallExpr 0x55cf2bd7d4e8 <line:1065:9, col:71> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x55cf2bd7d3a0 <col:9> '<overloaded function type>' lvalue (ADL) = 'extract_integer' 0x55cf2ba48b28
|     | |-DeclRefExpr 0x55cf2bd7d3e8 <col:25> 'IntArg::limb_type [nlimb]' lvalue Var 0x55cf2bd7cab0 'x' 'IntArg::limb_type [nlimb]'
|     | `-CXXReinterpretCastExpr 0x55cf2bd7d4b8 <col:28, col:70> 'unsigned_v_type':'typename make_unsigned<V>::type' lvalue reinterpret_cast<unsigned_v_type &> <Dependent>
|     |   `-DeclRefExpr 0x55cf2bd7d430 <col:64> 'V' lvalue ParmVar 0x55cf2bd7b228 'result' 'V &'
|     `-ReturnStmt 0x55cf2bd7d528 <line:1066:9, col:16>
|       `-CXXBoolLiteralExpr 0x55cf2bd7d518 <col:16> 'bool' true
|-FunctionTemplateDecl 0x55cf2bd7b828 <line:1069:5, line:1083:5> line:1070:10 parse
| |-TemplateTypeParmDecl 0x55cf2bd7b4d8 <line:1069:14, col:23> col:23 referenced typename depth 0 index 0 V
| |-CXXMethodDecl 0x55cf2bd7b788 <line:1070:5, line:1083:5> line:1070:10 parse 'bool (const String &, V &, const ArgContext &)'
| | |-ParmVarDecl 0x55cf2bd7b588 <col:16, col:30> col:30 referenced str 'const String &'
| | |-ParmVarDecl 0x55cf2bd7b628 <col:35, col:38> col:38 referenced result 'V &'
| | |-ParmVarDecl 0x55cf2bd7b6a0 <col:46, col:71> col:64 referenced args 'const ArgContext &' cinit
| | | `-DeclRefExpr 0x55cf2bd7c038 <col:71> 'const ArgContext' lvalue Var 0x55cf2bd6ffa8 'blank_args' 'const ArgContext'
| | `-CompoundStmt 0x55cf2bd7dca8 <col:83, line:1083:5>
| |   |-DeclStmt 0x55cf2bd7d600 <line:1071:9, col:12>
| |   | `-VarDecl 0x55cf2bd7d598 <col:9, col:11> col:11 referenced x 'V'
| |   `-IfStmt 0x55cf2bd7dc80 <line:1072:9, line:1082:9> has_else
| |     |-BinaryOperator 0x55cf2bd7d890 <line:1072:13, line:1073:49> '<dependent type>' '||'
| |     | |-UnaryOperator 0x55cf2bd7d718 <line:1072:13, col:43> '<dependent type>' prefix '!' cannot overflow
| |     | | `-CallExpr 0x55cf2bd7d6e0 <col:14, col:43> '<dependent type>'
| |     | |   |-UnresolvedMemberExpr 0x55cf2bd7d628 <col:14> '<bound member function type>' lvalue
| |     | |   |-DeclRefExpr 0x55cf2bd7d680 <col:31> 'const String' lvalue ParmVar 0x55cf2bd7b588 'str' 'const String &'
| |     | |   |-DeclRefExpr 0x55cf2bd7d6a0 <col:36> 'V' lvalue Var 0x55cf2bd7d598 'x' 'V'
| |     | |   `-DeclRefExpr 0x55cf2bd7d6c0 <col:39> 'const ArgContext' lvalue ParmVar 0x55cf2bd7b6a0 'args' 'const ArgContext &'
| |     | `-ParenExpr 0x55cf2bd7d870 <line:1073:16, col:49> 'bool'
| |     |   `-BinaryOperator 0x55cf2bd7d850 <col:17, col:37> 'bool' '&&'
| |     |     |-ImplicitCastExpr 0x55cf2bd7d838 <col:17> 'bool' <IntegralToBoolean>
| |     |     | `-ImplicitCastExpr 0x55cf2bd7d820 <col:17> 'int' <LValueToRValue>
| |     |     |   `-MemberExpr 0x55cf2bd7d740 <col:17> 'int' lvalue ->status 0x55cf2bd7b918
| |     |     |     `-CXXThisExpr 0x55cf2bd7d730 <col:17> 'IntArg *' implicit this
| |     |     `-BinaryOperator 0x55cf2bd7d800 <col:27, col:37> 'bool' '!='
| |     |       |-ImplicitCastExpr 0x55cf2bd7d7d0 <col:27> 'int' <LValueToRValue>
| |     |       | `-MemberExpr 0x55cf2bd7d780 <col:27> 'int' lvalue ->status 0x55cf2bd7b918
| |     |       |   `-CXXThisExpr 0x55cf2bd7d770 <col:27> 'IntArg *' implicit this
| |     |       `-ImplicitCastExpr 0x55cf2bd7d7e8 <col:37> 'int' <IntegralCast>
| |     |         `-DeclRefExpr 0x55cf2bd7d7b0 <col:37> 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)' EnumConstant 0x55cf2bd7a600 'status_range' 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| |     |-ReturnStmt 0x55cf2bd7d8c0 <line:1074:13, col:20>
| |     | `-CXXBoolLiteralExpr 0x55cf2bd7d8b0 <col:20> 'bool' false
| |     `-IfStmt 0x55cf2bd7dc58 <line:1075:14, line:1082:9> has_else
| |       |-BinaryOperator 0x55cf2bd7d960 <line:1075:18, col:28> 'bool' '=='
| |       | |-ImplicitCastExpr 0x55cf2bd7d930 <col:18> 'int' <LValueToRValue>
| |       | | `-MemberExpr 0x55cf2bd7d8e0 <col:18> 'int' lvalue ->status 0x55cf2bd7b918
| |       | |   `-CXXThisExpr 0x55cf2bd7d8d0 <col:18> 'IntArg *' implicit this
| |       | `-ImplicitCastExpr 0x55cf2bd7d948 <col:28> 'int' <IntegralCast>
| |       |   `-DeclRefExpr 0x55cf2bd7d910 <col:28> 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)' EnumConstant 0x55cf2bd7a600 'status_range' 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| |       |-CompoundStmt 0x55cf2bd7db98 <col:42, line:1079:9>
| |       | |-CallExpr 0x55cf2bd7db40 <line:1076:13, line:1077:45> '<dependent type>'
| |       | | |-MemberExpr 0x55cf2bd7d990 <line:1076:13> '<bound member function type>' ->range_error 0x55cf2bd7bf28
| |       | | | `-CXXThisExpr 0x55cf2bd7d980 <col:13> 'IntArg *' implicit this
| |       | | |-DeclRefExpr 0x55cf2bd7d9c0 <col:25> 'const ArgContext' lvalue ParmVar 0x55cf2bd7b6a0 'args' 'const ArgContext &'
| |       | | |-CXXDependentScopeMemberExpr 0x55cf2bd7daa0 <col:31, col:50> '<dependent type>' lvalue ->is_signed
| |       | | `-CXXUnresolvedConstructExpr 0x55cf2bd7db18 <line:1077:25, col:44> 'click_int_large_t':'long long' 'click_int_large_t':'long long'
| |       | |   `-DeclRefExpr 0x55cf2bd7daf8 <col:43> 'V' lvalue Var 0x55cf2bd7d598 'x' 'V'
| |       | `-ReturnStmt 0x55cf2bd7db88 <line:1078:13, col:20>
| |       |   `-CXXBoolLiteralExpr 0x55cf2bd7db78 <col:20> 'bool' false
| |       `-CompoundStmt 0x55cf2bd7dc38 <line:1079:16, line:1082:9>
| |         |-BinaryOperator 0x55cf2bd7dbf8 <line:1080:13, col:22> '<dependent type>' '='
| |         | |-DeclRefExpr 0x55cf2bd7dbb8 <col:13> 'V' lvalue ParmVar 0x55cf2bd7b628 'result' 'V &'
| |         | `-DeclRefExpr 0x55cf2bd7dbd8 <col:22> 'V' lvalue Var 0x55cf2bd7d598 'x' 'V'
| |         `-ReturnStmt 0x55cf2bd7dc28 <line:1081:13, col:20>
| |           `-CXXBoolLiteralExpr 0x55cf2bd7dc18 <col:20> 'bool' true
| `-CXXMethodDecl 0x55cf2be91dc8 <line:1070:5, line:1083:5> line:1070:10 used parse 'bool (const String &, int &, const ArgContext &)'
|   |-TemplateArgument type 'int'
|   |-ParmVarDecl 0x55cf2be91ba0 <col:16, col:30> col:30 str 'const String &'
|   |-ParmVarDecl 0x55cf2be91c78 <col:35, col:38> col:38 result 'int &'
|   `-ParmVarDecl 0x55cf2be91ce0 <col:46, col:71> col:64 args 'const ArgContext &' cinit
|     `-DeclRefExpr 0x55cf2bd7c038 <col:71> 'const ArgContext' lvalue Var 0x55cf2bd6ffa8 'blank_args' 'const ArgContext'
|-FieldDecl 0x55cf2bd7b8b0 <line:1085:5, col:9> col:9 base 'int'
|-FieldDecl 0x55cf2bd7b918 <line:1086:5, col:9> col:9 referenced status 'int'
|-AccessSpecDecl 0x55cf2bd7b968 <line:1088:3, col:12> col:3 protected
|-CXXMethodDecl 0x55cf2bd7bc20 <line:1090:5, line:1091:51> line:1090:24 span 'const char *(const char *, const char *, bool, int &)' static
| |-ParmVarDecl 0x55cf2bd7b9a8 <col:29, col:41> col:41 begin 'const char *'
| |-ParmVarDecl 0x55cf2bd7ba28 <col:48, col:60> col:60 end 'const char *'
| |-ParmVarDecl 0x55cf2bd7baa0 <line:1091:29, col:34> col:34 is_signed 'bool'
| `-ParmVarDecl 0x55cf2bd7bb20 <col:45, col:50> col:50 b 'int &'
|-CXXMethodDecl 0x55cf2bd7bf28 <line:1092:5, line:1093:45> line:1092:10 referenced range_error 'void (const ArgContext &, bool, click_int_large_t)'
| |-ParmVarDecl 0x55cf2bd7bcf0 <col:22, col:40> col:40 args 'const ArgContext &'
| |-ParmVarDecl 0x55cf2bd7bd68 <col:46, col:51> col:51 is_signed 'bool'
| `-ParmVarDecl 0x55cf2bd7be00 <line:1093:22, col:40> col:40 value 'click_int_large_t':'long long'
|-CXXConstructorDecl 0x55cf2bd7e508 <line:1040:7> col:7 implicit constexpr IntArg 'void (const IntArg &)' inline default trivial noexcept-unevaluated 0x55cf2bd7e508
| `-ParmVarDecl 0x55cf2bd7e618 <col:7> col:7 'const IntArg &'
|-CXXConstructorDecl 0x55cf2bd7e798 <col:7> col:7 implicit constexpr IntArg 'void (IntArg &&)' inline default trivial noexcept-unevaluated 0x55cf2bd7e798
| `-ParmVarDecl 0x55cf2bd7e8a8 <col:7> col:7 'IntArg &&'
`-CXXDestructorDecl 0x55cf2be91898 <col:7> col:7 implicit referenced ~IntArg 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.IntArg = type { i32, i32 }
  NonVirtualBaseLLVMType:%class.IntArg = type { i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class ArgContext
         0 |   const class Element * _context
         8 |   class ErrorHandler * _errh
        16 |   const char * _arg_keyword
        24 |   _Bool _read_status
           | [sizeof=32, dsize=25, align=8,
           |  nvsize=25, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55cf2bc42118 prev 0x55cf2bc83968 <../dummy_inc/click/args.hh:29:1, line:85:1> line:29:7 referenced class ArgContext definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x55cf2bc42210 <col:1, col:7> col:7 implicit referenced class ArgContext
|-AccessSpecDecl 0x55cf2bc422a0 <col:20, col:26> col:20 public
|-CXXConstructorDecl 0x55cf2bc423d8 <line:33:5, line:38:5> line:33:5 ArgContext 'void (ErrorHandler *)'
| |-ParmVarDecl 0x55cf2bc422d8 <col:16, col:37> col:30 used errh 'ErrorHandler *' cinit
| | `-ImplicitCastExpr 0x55cf2bc43800 <col:37> 'ErrorHandler *' <NullToPointer>
| |   `-IntegerLiteral 0x55cf2bc437e0 <col:37> 'int' 0
| |-CXXCtorInitializer Field 0x55cf2bc43378 '_errh' 'ErrorHandler *'
| | `-ImplicitCastExpr 0x55cf2bc43890 <line:34:17> 'ErrorHandler *' <LValueToRValue>
| |   `-DeclRefExpr 0x55cf2bc43850 <col:17> 'ErrorHandler *' lvalue ParmVar 0x55cf2bc422d8 'errh' 'ErrorHandler *'
| |-CXXCtorInitializer Field 0x55cf2bc433e0 '_arg_keyword' 'const char *'
| | `-ImplicitCastExpr 0x55cf2bc43910 <col:37> 'const char *' <NullToPointer>
| |   `-IntegerLiteral 0x55cf2bc438d0 <col:37> 'int' 0
| |-CXXCtorInitializer Field 0x55cf2bc43440 '_read_status' 'bool'
| | `-CXXBoolLiteralExpr 0x55cf2bc43950 <col:54> 'bool' false
| `-CompoundStmt 0x55cf2bc43a58 <col:61, line:38:5>
|   `-BinaryOperator 0x55cf2bc43a38 <line:36:9, col:20> 'const Element *' lvalue '='
|     |-MemberExpr 0x55cf2bc439d0 <col:9> 'const Element *' lvalue ->_context 0x55cf2bc43318
|     | `-CXXThisExpr 0x55cf2bc439c0 <col:9> 'ArgContext *' implicit this
|     `-ImplicitCastExpr 0x55cf2bc43a20 <col:20> 'const Element *' <NullToPointer>
|       `-IntegerLiteral 0x55cf2bc43a00 <col:20> 'int' 0
|-CXXConstructorDecl 0x55cf2bc425e8 <line:44:5, line:46:5> line:44:5 ArgContext 'void (const Element *, ErrorHandler *)'
| |-ParmVarDecl 0x55cf2bc42498 <col:16, col:31> col:31 used context 'const Element *'
| |-ParmVarDecl 0x55cf2bc42510 <col:40, col:61> col:54 used errh 'ErrorHandler *' cinit
| | `-ImplicitCastExpr 0x55cf2bc43838 <col:61> 'ErrorHandler *' <NullToPointer>
| |   `-IntegerLiteral 0x55cf2bc43818 <col:61> 'int' 0
| |-CXXCtorInitializer Field 0x55cf2bc43318 '_context' 'const Element *'
| | `-ImplicitCastExpr 0x55cf2bc43ab0 <line:45:20> 'const Element *' <LValueToRValue>
| |   `-DeclRefExpr 0x55cf2bc43a70 <col:20> 'const Element *' lvalue ParmVar 0x55cf2bc42498 'context' 'const Element *'
| |-CXXCtorInitializer Field 0x55cf2bc43378 '_errh' 'ErrorHandler *'
| | `-ImplicitCastExpr 0x55cf2bc43b30 <col:36> 'ErrorHandler *' <LValueToRValue>
| |   `-DeclRefExpr 0x55cf2bc43af0 <col:36> 'ErrorHandler *' lvalue ParmVar 0x55cf2bc42510 'errh' 'ErrorHandler *'
| |-CXXCtorInitializer Field 0x55cf2bc433e0 '_arg_keyword' 'const char *'
| | `-ImplicitCastExpr 0x55cf2bc43bb0 <col:56> 'const char *' <NullToPointer>
| |   `-IntegerLiteral 0x55cf2bc43b70 <col:56> 'int' 0
| |-CXXCtorInitializer Field 0x55cf2bc43440 '_read_status' 'bool'
| | `-CXXBoolLiteralExpr 0x55cf2bc43bf0 <col:73> 'bool' false
| `-CompoundStmt 0x55cf2bc43c68 <col:80, line:46:5>
|-CXXMethodDecl 0x55cf2bc42718 <line:49:5, line:51:5> line:49:20 context 'const Element *() const'
| `-CompoundStmt 0x55cf2bc43ce0 <col:36, line:51:5>
|   `-ReturnStmt 0x55cf2bc43cd0 <line:50:9, col:16>
|     `-ImplicitCastExpr 0x55cf2bc43cb8 <col:16> 'const Element *' <LValueToRValue>
|       `-MemberExpr 0x55cf2bc43c88 <col:16> 'const Element *const' lvalue ->_context 0x55cf2bc43318
|         `-CXXThisExpr 0x55cf2bc43c78 <col:16> 'const ArgContext *' implicit this
|-CXXMethodDecl 0x55cf2bc42808 <line:55:5, line:57:5> line:55:19 errh 'ErrorHandler *() const'
| `-CompoundStmt 0x55cf2bc43d60 <col:32, line:57:5>
|   `-ReturnStmt 0x55cf2bc43d50 <line:56:9, col:16>
|     `-ImplicitCastExpr 0x55cf2bc43d38 <col:16> 'ErrorHandler *' <LValueToRValue>
|       `-MemberExpr 0x55cf2bc43d08 <col:16> 'ErrorHandler *const' lvalue ->_errh 0x55cf2bc43378
|         `-CXXThisExpr 0x55cf2bc43cf8 <col:16> 'const ArgContext *' implicit this
|-CXXMethodDecl 0x55cf2bc428c8 <line:62:5, col:27> col:12 error_prefix 'String () const'
|-CXXMethodDecl 0x55cf2bc42a50 <line:65:5, col:38> col:10 referenced error 'void (const char *, ...) const'
| `-ParmVarDecl 0x55cf2bc42980 <col:16, col:28> col:28 fmt 'const char *'
|-CXXMethodDecl 0x55cf2bc42ba0 <line:68:5, col:40> col:10 warning 'void (const char *, ...) const'
| `-ParmVarDecl 0x55cf2bc42b10 <col:18, col:30> col:30 fmt 'const char *'
|-CXXMethodDecl 0x55cf2bc42cf0 <line:71:5, col:40> col:10 message 'void (const char *, ...) const'
| `-ParmVarDecl 0x55cf2bc42c60 <col:18, col:30> col:30 fmt 'const char *'
|-CXXMethodDecl 0x55cf2bc42ef8 <line:73:5, col:58> col:10 xmessage 'void (const String &, const String &) const'
| |-ParmVarDecl 0x55cf2bc42da8 <col:19, col:33> col:33 anno 'const String &'
| `-ParmVarDecl 0x55cf2bc42e20 <col:39, col:53> col:53 str 'const String &'
|-CXXMethodDecl 0x55cf2bc43228 <line:74:5, col:69> col:10 xmessage 'void (const String &, const char *, __va_list_tag *) const'
| |-ParmVarDecl 0x55cf2bc42fb8 <col:19, col:33> col:33 anno 'const String &'
| |-ParmVarDecl 0x55cf2bc43038 <col:39, col:51> col:51 fmt 'const char *'
| `-ParmVarDecl 0x55cf2bc43100 <col:56, col:64> col:64 val '__va_list_tag *':'__va_list_tag *'
|-AccessSpecDecl 0x55cf2bc432e0 <line:76:3, col:12> col:3 protected
|-FieldDecl 0x55cf2bc43318 <line:79:5, col:20> col:20 referenced _context 'const Element *'
|-FieldDecl 0x55cf2bc43378 <line:81:5, col:19> col:19 referenced _errh 'ErrorHandler *'
|-FieldDecl 0x55cf2bc433e0 <line:82:5, col:17> col:17 _arg_keyword 'const char *'
|-FieldDecl 0x55cf2bc43440 <line:83:5, col:18> col:18 referenced _read_status 'bool' mutable
|-CXXConstructorDecl 0x55cf2bc43490 <line:29:7> col:7 implicit constexpr ArgContext 'void (const ArgContext &)' inline default trivial noexcept-unevaluated 0x55cf2bc43490
| `-ParmVarDecl 0x55cf2bc435a8 <col:7> col:7 'const ArgContext &'
`-CXXMethodDecl 0x55cf2bc43648 <col:7> col:7 implicit operator= 'ArgContext &(const ArgContext &)' inline default trivial noexcept-unevaluated 0x55cf2bc43648
  `-ParmVarDecl 0x55cf2bc43758 <col:7> col:7 'const ArgContext &'

Layout: <CGRecordLayout
  LLVMType:%class.ArgContext = type <{ %class.Element*, %class.ErrorHandler*, i8*, i8, [7 x i8] }>
  NonVirtualBaseLLVMType:%class.ArgContext.base = type <{ %class.Element*, %class.ErrorHandler*, i8*, i8 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | union Packet::Anno
         0 |   char [48] c
         0 |   uint8_t [48] u8
         0 |   uint16_t [24] u16
         0 |   uint32_t [12] u32
         0 |   uint64_t [6] u64
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Packet::AllAnno
         0 |   union Packet::Anno cb
         0 |     char [48] c
         0 |     uint8_t [48] u8
         0 |     uint16_t [24] u16
         0 |     uint32_t [12] u32
         0 |     uint64_t [6] u64
        48 |   unsigned char * mac
        56 |   unsigned char * nh
        64 |   unsigned char * h
        72 |   enum Packet::PacketType pkt_type
        76 |   char [8] timestamp
        88 |   class Packet * next
        96 |   class Packet * prev
           | [sizeof=104, dsize=104, align=8,
           |  nvsize=104, nvalign=8]

*** Dumping AST Record Layout
         0 | class Packet
         0 |   class atomic_uint32_t _use_count
         0 |     uint32_t _val
         8 |   class Packet * _data_packet
        16 |   unsigned char * _head
        24 |   unsigned char * _data
        32 |   unsigned char * _tail
        40 |   unsigned char * _end
        48 |   struct Packet::AllAnno _aa
        48 |     union Packet::Anno cb
        48 |       char [48] c
        48 |       uint8_t [48] u8
        48 |       uint16_t [24] u16
        48 |       uint32_t [12] u32
        48 |       uint64_t [6] u64
        96 |     unsigned char * mac
       104 |     unsigned char * nh
       112 |     unsigned char * h
       120 |     enum Packet::PacketType pkt_type
       124 |     char [8] timestamp
       136 |     class Packet * next
       144 |     class Packet * prev
       152 |   Packet::buffer_destructor_type _destructor
       160 |   void * _destructor_argument
           | [sizeof=168, dsize=168, align=8,
           |  nvsize=168, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55cf2bc96918 prev 0x55cf2bc8bb20 <../dummy_inc/click/packet.hh:702:5, line:711:5> line:702:11 referenced union Anno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55cf2bc96a10 <col:5, col:11> col:11 implicit union Anno
|-FieldDecl 0x55cf2bc96b00 <line:703:2, col:18> col:7 referenced c 'char [48]'
|-FieldDecl 0x55cf2bc96c28 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
|-FieldDecl 0x55cf2bc96da8 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
|-FieldDecl 0x55cf2bc96f28 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
|-FieldDecl 0x55cf2bc970a8 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
|-CXXConstructorDecl 0x55cf2bca7ed8 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55cf2bca8748 <col:11>
|-CXXDestructorDecl 0x55cf2bca7fb0 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x55cf2bca80e8 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x55cf2bca80e8
| `-ParmVarDecl 0x55cf2bca81f8 <col:11> col:11 'const Packet::Anno &'
|-CXXConstructorDecl 0x55cf2bca8298 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55cf2bca8298
| `-ParmVarDecl 0x55cf2bca83a8 <col:11> col:11 'Packet::Anno &&'
|-CXXMethodDecl 0x55cf2bcab168 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| |-ParmVarDecl 0x55cf2bcab278 <col:11> col:11 'const Packet::Anno &'
| `-CompoundStmt 0x55cf2bcab4f8 <col:11>
|   `-ReturnStmt 0x55cf2bcab4e8 <col:11>
|     `-UnaryOperator 0x55cf2bcab4d0 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55cf2bcab4c0 <col:11> 'Packet::Anno *' this
`-CXXMethodDecl 0x55cf2bcab2e8 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55cf2bcab2e8
  `-ParmVarDecl 0x55cf2bcab3f8 <col:11> col:11 'Packet::Anno &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Packet::Anno" = type { [6 x i64] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55cf2bc97110 <../dummy_inc/click/packet.hh:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55cf2bc97228 <col:5, col:12> col:12 implicit struct AllAnno
|-FieldDecl 0x55cf2bc972c8 <line:717:2, col:7> col:7 cb 'Packet::Anno'
|-FieldDecl 0x55cf2bc97330 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
|-FieldDecl 0x55cf2bc97398 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
|-FieldDecl 0x55cf2bc97400 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
|-FieldDecl 0x55cf2bc97460 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
|-FieldDecl 0x55cf2bc97520 <line:722:2, col:34> col:7 timestamp 'char [8]'
|-FieldDecl 0x55cf2bc97580 <line:723:2, col:10> col:10 referenced next 'Packet *'
|-FieldDecl 0x55cf2bc975e0 <line:724:2, col:10> col:10 referenced prev 'Packet *'
|-CXXConstructorDecl 0x55cf2bca7de8 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| |-CXXCtorInitializer Field 0x55cf2bc972c8 'cb' 'Packet::Anno'
| | `-CXXConstructExpr 0x55cf2bca8758 <col:12> 'Packet::Anno' 'void () noexcept'
| `-CompoundStmt 0x55cf2bca87b0 <col:12>
|-CXXConstructorDecl 0x55cf2bca8418 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x55cf2bca8418
| `-ParmVarDecl 0x55cf2bca8528 <col:12> col:12 'const Packet::AllAnno &'
|-CXXConstructorDecl 0x55cf2bca85c8 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x55cf2bca85c8
| `-ParmVarDecl 0x55cf2bca86d8 <col:12> col:12 'Packet::AllAnno &&'
`-CXXDestructorDecl 0x55cf2bcaa850 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  NonVirtualBaseLLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55cf2bc85230 <../dummy_inc/click/packet.hh:35:1, line:775:1> line:35:7 referenced class Packet definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55cf2bc85348 <col:1, col:7> col:7 implicit referenced class Packet
|-AccessSpecDecl 0x55cf2bc853d8 <col:16, col:22> col:16 public
|-EnumDecl 0x55cf2bc85400 <line:41:5, line:50:5> line:41:5
| |-EnumConstantDecl 0x55cf2bc85500 <line:45:2, col:21> col:2 referenced default_headroom 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| | `-ImplicitCastExpr 0x55cf2bc855e0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf2bc854e0 <col:21> 'int' Int: 28
| |     `-IntegerLiteral 0x55cf2bc854c0 <col:21> 'int' 28
| `-EnumConstantDecl 0x55cf2bc85590 <line:48:2, col:22> col:2 referenced min_buffer_length 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
|   `-ImplicitCastExpr 0x55cf2bc855f8 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55cf2bc85570 <col:22> 'int' Int: 64
|       `-IntegerLiteral 0x55cf2bc85550 <col:22> 'int' 64
|-CXXMethodDecl 0x55cf2bc85938 <line:52:5, line:53:75> line:52:28 used make 'WritablePacket *(uint32_t, const void *, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x55cf2bc85620 <col:33, col:42> col:42 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55cf2bc856a0 <col:52, col:64> col:64 data 'const void *'
| |-ParmVarDecl 0x55cf2bc85718 <line:53:5, col:14> col:14 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55cf2bc85790 <col:22, col:31> col:31 tailroom 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55cf2bc859f8 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x55cf2bc85bf8 <line:54:5, col:109> col:35 make 'WritablePacket *(const void *, uint32_t)' static inline
| |-ParmVarDecl 0x55cf2bc85a70 <col:40, col:52> col:52 data 'const void *'
| |-ParmVarDecl 0x55cf2bc85ae8 <col:58, col:67> col:67 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55cf2bc85ca8 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x55cf2bc85e08 <line:55:5, col:91> col:35 make 'WritablePacket *(uint32_t)' static inline
| |-ParmVarDecl 0x55cf2bc85d18 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55cf2bc85eb0 <col:72> warn_unused_result ""
|-TypedefDecl 0x55cf2bc86210 <line:65:5, col:89> col:20 referenced buffer_destructor_type 'void (*)(unsigned char *, size_t, void *)'
| `-PointerType 0x55cf2bc861a0 'void (*)(unsigned char *, size_t, void *)'
|   `-ParenType 0x55cf2bc86140 'void (unsigned char *, size_t, void *)' sugar
|     `-FunctionProtoType 0x55cf2bc86100 'void (unsigned char *, size_t, void *)' cdecl
|       |-BuiltinType 0x55cf2b7592d0 'void'
|       |-PointerType 0x55cf2ba05490 'unsigned char *'
|       | `-BuiltinType 0x55cf2b7593d0 'unsigned char'
|       |-TypedefType 0x55cf2b801a00 'size_t' sugar
|       | |-Typedef 0x55cf2b7c9b20 'size_t'
|       | `-BuiltinType 0x55cf2b759430 'unsigned long'
|       `-PointerType 0x55cf2b759ad0 'void *'
|         `-BuiltinType 0x55cf2b7592d0 'void'
|-CXXMethodDecl 0x55cf2bc86688 <line:66:5, line:68:131> line:66:28 make 'WritablePacket *(unsigned char *, uint32_t, Packet::buffer_destructor_type, void *, int, int)' static
| |-ParmVarDecl 0x55cf2bc86280 <col:33, col:48> col:48 data 'unsigned char *'
| |-ParmVarDecl 0x55cf2bc862f8 <col:54, col:63> col:63 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55cf2bc86390 <line:67:5, col:28> col:28 buffer_destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| |-ParmVarDecl 0x55cf2bc86410 <line:68:33, col:58> col:39 argument 'void *' cinit
| | `-CStyleCastExpr 0x55cf2bca0d80 <col:50, col:58> 'void *' <NoOp>
| |   `-ImplicitCastExpr 0x55cf2bca0d68 <col:58> 'void *' <NullToPointer> part_of_explicit_cast
| |     `-IntegerLiteral 0x55cf2bca0d30 <col:58> 'int' 0
| |-ParmVarDecl 0x55cf2bc86490 <col:61, col:76> col:65 headroom 'int' cinit
| | `-IntegerLiteral 0x55cf2bca0da8 <col:76> 'int' 0
| |-ParmVarDecl 0x55cf2bc86510 <col:79, col:94> col:83 tailroom 'int' cinit
| | `-IntegerLiteral 0x55cf2bca0dc8 <col:94> 'int' 0
| `-WarnUnusedResultAttr 0x55cf2bc86758 <col:112> warn_unused_result ""
|-CXXMethodDecl 0x55cf2bc867d8 <line:71:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x55cf2bc86898 <line:73:5, col:50> col:45 used kill 'void ()'
| |-NoInlineAttr 0x55cf2bc86938 <col:20>
| `-OptimizeNoneAttr 0x55cf2bc86990 <col:30>
|-CXXMethodDecl 0x55cf2bc86a08 <line:75:5, col:54> col:45 used shared 'bool () const'
| |-NoInlineAttr 0x55cf2bc86aa8 <col:20>
| `-OptimizeNoneAttr 0x55cf2bc86b00 <col:30>
|-CXXMethodDecl 0x55cf2bc86b78 <line:76:5, col:55> col:13 clone 'Packet *()'
| `-WarnUnusedResultAttr 0x55cf2bc86c18 <col:36> warn_unused_result ""
|-CXXMethodDecl 0x55cf2bc86cc8 <line:77:5, col:102> col:56 uniqueify 'WritablePacket *()'
| |-NoInlineAttr 0x55cf2bc86d68 <col:20>
| |-OptimizeNoneAttr 0x55cf2bc86dc0 <col:30>
| `-WarnUnusedResultAttr 0x55cf2bc86de8 <col:83> warn_unused_result ""
|-CXXMethodDecl 0x55cf2bc86e40 <line:79:5, col:68> col:61 used data 'const unsigned char *() const'
| |-NoInlineAttr 0x55cf2bc86ee0 <col:20>
| `-OptimizeNoneAttr 0x55cf2bc86f38 <col:30>
|-CXXMethodDecl 0x55cf2bc86f88 <line:80:5, col:72> col:61 used end_data 'const unsigned char *() const'
| |-NoInlineAttr 0x55cf2bc87028 <col:20>
| `-OptimizeNoneAttr 0x55cf2bc87080 <col:30>
|-CXXMethodDecl 0x55cf2bc870c8 <line:81:5, col:58> col:49 length 'uint32_t () const'
| |-NoInlineAttr 0x55cf2bc87168 <col:20>
| `-OptimizeNoneAttr 0x55cf2bc871c0 <col:30>
|-CXXMethodDecl 0x55cf2bc87208 <line:82:5, col:32> col:21 used headroom 'uint32_t () const' inline
|-CXXMethodDecl 0x55cf2bc872c8 <line:83:5, col:32> col:21 used tailroom 'uint32_t () const' inline
|-CXXMethodDecl 0x55cf2bc87390 <line:84:5, col:42> col:33 used buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x55cf2bc87458 <line:85:5, col:46> col:33 used end_buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x55cf2bc87518 <line:86:5, col:37> col:21 used buffer_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55cf2bc87638 <line:97:5, line:99:5> line:97:28 buffer_destructor 'Packet::buffer_destructor_type () const'
| `-CompoundStmt 0x55cf2bca0e90 <col:54, line:99:5>
|   `-ReturnStmt 0x55cf2bca0e80 <line:98:2, col:9>
|     `-ImplicitCastExpr 0x55cf2bca0e68 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-MemberExpr 0x55cf2bca0e38 <col:9> 'const Packet::buffer_destructor_type':'void (*const)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x55cf2bc97918
|         `-CXXThisExpr 0x55cf2bca0e28 <col:9> 'const Packet *' implicit this
|-CXXMethodDecl 0x55cf2bc877d8 <line:101:5, line:103:5> line:101:10 set_buffer_destructor 'void (Packet::buffer_destructor_type)'
| |-ParmVarDecl 0x55cf2bc876e8 <col:32, col:55> col:55 used destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| `-CompoundStmt 0x55cf2bca0f40 <col:67, line:103:5>
|   `-BinaryOperator 0x55cf2bca0f20 <line:102:9, col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x55cf2bca0eb8 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x55cf2bc97918
|     | `-CXXThisExpr 0x55cf2bca0ea8 <col:9> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x55cf2bca0f08 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-DeclRefExpr 0x55cf2bca0ee8 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ParmVar 0x55cf2bc876e8 'destructor' 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-CXXMethodDecl 0x55cf2bc878d0 <line:105:5, line:107:5> line:105:11 destructor_argument 'void *()'
| `-CompoundStmt 0x55cf2bca0fc0 <col:33, line:107:5>
|   `-ReturnStmt 0x55cf2bca0fb0 <line:106:9, col:16>
|     `-ImplicitCastExpr 0x55cf2bca0f98 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x55cf2bca0f68 <col:16> 'void *' lvalue ->_destructor_argument 0x55cf2bc97980
|         `-CXXThisExpr 0x55cf2bca0f58 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x55cf2bc87990 <line:109:5, line:113:5> line:109:10 reset_buffer 'void ()'
| `-CompoundStmt 0x55cf2bca15f0 <col:25, line:113:5>
|   |-ParenExpr 0x55cf2bca1338 <line:110:2, col:146> 'void'
|   | `-ConditionalOperator 0x55cf2bca1308 <col:3, col:145> 'void'
|   |   |-CXXStaticCastExpr 0x55cf2bca1078 <col:3, col:32> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x55cf2bca1050 <col:23, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-CXXMemberCallExpr 0x55cf2bca1018 <col:24, col:31> 'bool'
|   |   |     `-MemberExpr 0x55cf2bca0fe8 <col:24> '<bound member function type>' ->shared 0x55cf2bc86a08
|   |   |       `-ImplicitCastExpr 0x55cf2bca1038 <col:24> 'const Packet *' <NoOp>
|   |   |         `-CXXThisExpr 0x55cf2bca0fd8 <col:24> 'Packet *' implicit this
|   |   |-CXXFunctionalCastExpr 0x55cf2bca10d8 <col:36, col:43> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55cf2bca10b8 <col:42> 'int' 0
|   |   `-CallExpr 0x55cf2bca1268 <col:47, col:145> 'void'
|   |     |-ImplicitCastExpr 0x55cf2bca1250 <col:47> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55cf2bca1230 <col:47> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55cf2b7f8810 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55cf2bca12a8 <col:62> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55cf2bca1148 <col:62> 'const char [10]' lvalue "!shared()"
|   |     |-ImplicitCastExpr 0x55cf2bca12c0 <col:75> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55cf2bca1170 <col:75> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55cf2bca12d8 <col:107> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55cf2bca11a8 <col:107> 'int' 110
|   |     `-ImplicitCastExpr 0x55cf2bca12f0 <col:112, col:126> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55cf2bca1218 <col:112, col:126> 'const char [28]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55cf2bca1200 <col:126> 'const char [28]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55cf2bca11c8 <col:126> 'const char [28]' lvalue "void Packet::reset_buffer()"
|   |-BinaryOperator 0x55cf2bca1538 <line:111:2, col:33> 'unsigned char *' lvalue '='
|   | |-MemberExpr 0x55cf2bca1368 <col:2> 'unsigned char *' lvalue ->_head 0x55cf2bc97720
|   | | `-CXXThisExpr 0x55cf2bca1358 <col:2> 'Packet *' implicit this
|   | `-ImplicitCastExpr 0x55cf2bca1520 <col:10, col:33> 'unsigned char *' <LValueToRValue>
|   |   `-BinaryOperator 0x55cf2bca1500 <col:10, col:33> 'unsigned char *' lvalue '='
|   |     |-MemberExpr 0x55cf2bca13a8 <col:10> 'unsigned char *' lvalue ->_data 0x55cf2bc97788
|   |     | `-CXXThisExpr 0x55cf2bca1398 <col:10> 'Packet *' implicit this
|   |     `-ImplicitCastExpr 0x55cf2bca14e8 <col:18, col:33> 'unsigned char *' <LValueToRValue>
|   |       `-BinaryOperator 0x55cf2bca14c8 <col:18, col:33> 'unsigned char *' lvalue '='
|   |         |-MemberExpr 0x55cf2bca13e8 <col:18> 'unsigned char *' lvalue ->_tail 0x55cf2bc977f0
|   |         | `-CXXThisExpr 0x55cf2bca13d8 <col:18> 'Packet *' implicit this
|   |         `-ImplicitCastExpr 0x55cf2bca14b0 <col:26, col:33> 'unsigned char *' <LValueToRValue>
|   |           `-BinaryOperator 0x55cf2bca1490 <col:26, col:33> 'unsigned char *' lvalue '='
|   |             |-MemberExpr 0x55cf2bca1428 <col:26> 'unsigned char *' lvalue ->_end 0x55cf2bc97858
|   |             | `-CXXThisExpr 0x55cf2bca1418 <col:26> 'Packet *' implicit this
|   |             `-ImplicitCastExpr 0x55cf2bca1478 <col:33> 'unsigned char *' <NullToPointer>
|   |               `-IntegerLiteral 0x55cf2bca1458 <col:33> 'int' 0
|   `-BinaryOperator 0x55cf2bca15d0 <line:112:2, col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x55cf2bca1568 <col:2> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x55cf2bc97918
|     | `-CXXThisExpr 0x55cf2bca1558 <col:2> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x55cf2bca15b8 <col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <NullToPointer>
|       `-IntegerLiteral 0x55cf2bca1598 <col:16> 'int' 0
|-CXXMethodDecl 0x55cf2bc87ad0 <line:141:5, col:109> col:56 push 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x55cf2bc87a40 <col:61, col:70> col:70 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55cf2bc87b78 <col:20>
| |-OptimizeNoneAttr 0x55cf2bc87bd0 <col:30>
| `-WarnUnusedResultAttr 0x55cf2bc87bf8 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x55cf2bc87cc8 <line:152:5, col:120> col:56 push_mac_header 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x55cf2bc87c38 <col:72, col:81> col:81 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55cf2bc87d70 <col:20>
| |-OptimizeNoneAttr 0x55cf2bc87dc8 <col:30>
| `-WarnUnusedResultAttr 0x55cf2bc87df0 <col:101> warn_unused_result ""
|-CXXMethodDecl 0x55cf2bc87f28 <line:171:5, col:76> col:13 nonunique_push 'Packet *(uint32_t)'
| |-ParmVarDecl 0x55cf2bc87e30 <col:28, col:37> col:37 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55cf2bc87fd0 <col:57> warn_unused_result ""
|-CXXMethodDecl 0x55cf2bc880d0 <line:187:5, col:62> col:45 pull 'void (uint32_t)'
| |-ParmVarDecl 0x55cf2bc88040 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55cf2bc88178 <col:20>
| `-OptimizeNoneAttr 0x55cf2bc881d0 <col:30>
|-CXXMethodDecl 0x55cf2bc88298 <line:213:5, col:73> col:21 put 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x55cf2bc88208 <col:25, col:34> col:34 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55cf2bc88340 <col:54> warn_unused_result ""
|-CXXMethodDecl 0x55cf2bc88440 <line:230:5, col:75> col:13 nonunique_put 'Packet *(uint32_t)'
| |-ParmVarDecl 0x55cf2bc883b0 <col:27, col:36> col:36 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55cf2bc884e8 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x55cf2bc885e8 <line:245:5, col:62> col:45 take 'void (uint32_t)'
| |-ParmVarDecl 0x55cf2bc88558 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55cf2bc88690 <col:20>
| `-OptimizeNoneAttr 0x55cf2bc886e8 <col:30>
|-CXXMethodDecl 0x55cf2bc88878 <line:269:5, col:99> col:13 shift_data 'Packet *(int, bool)'
| |-ParmVarDecl 0x55cf2bc88728 <col:24, col:28> col:28 offset 'int'
| |-ParmVarDecl 0x55cf2bc887a0 <col:36, col:59> col:41 free_on_failure 'bool' cinit
| | `-CXXBoolLiteralExpr 0x55cf2bca0de8 <col:59> 'bool' true
| `-WarnUnusedResultAttr 0x55cf2bc88928 <col:80> warn_unused_result ""
|-CXXMethodDecl 0x55cf2bc88b28 <line:271:5, col:71> col:17 shrink_data 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x55cf2bc889a0 <col:29, col:50> col:50 data 'const unsigned char *'
| `-ParmVarDecl 0x55cf2bc88a18 <col:56, col:65> col:65 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55cf2bc88d38 <line:272:5, col:78> col:17 change_headroom_and_length 'void (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x55cf2bc88be8 <col:44, col:53> col:53 headroom 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55cf2bc88c60 <col:63, col:72> col:72 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55cf2bc88f48 <line:274:5, col:40> col:10 copy 'bool (Packet *, int)'
| |-ParmVarDecl 0x55cf2bc88df8 <col:15, col:23> col:23 p 'Packet *'
| `-ParmVarDecl 0x55cf2bc88e78 <col:26, col:39> col:30 headroom 'int' cinit
|   `-IntegerLiteral 0x55cf2bca0df8 <col:39> 'int' 0
|-CXXMethodDecl 0x55cf2bc89018 <line:279:5, col:34> col:17 has_mac_header 'bool () const' inline
|-CXXMethodDecl 0x55cf2bc890e0 <line:280:5, col:46> col:33 used mac_header 'const unsigned char *() const' inline
|-CXXMethodDecl 0x55cf2bc891a8 <line:281:5, col:36> col:16 mac_header_offset 'int () const' inline
|-CXXMethodDecl 0x55cf2bc89268 <line:282:5, col:41> col:21 mac_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55cf2bc89330 <line:283:5, col:29> col:16 mac_length 'int () const' inline
|-CXXMethodDecl 0x55cf2bc89478 <line:284:5, col:54> col:17 set_mac_header 'void (const unsigned char *)' inline
| `-ParmVarDecl 0x55cf2bc893e8 <col:32, col:53> col:53 p 'const unsigned char *'
|-CXXMethodDecl 0x55cf2bc89648 <line:285:5, col:68> col:17 used set_mac_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x55cf2bc89538 <col:32, col:53> col:53 p 'const unsigned char *'
| `-ParmVarDecl 0x55cf2bc895b0 <col:56, col:65> col:65 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55cf2bc89718 <line:286:5, col:34> col:17 clear_mac_header 'void ()' inline
|-CXXMethodDecl 0x55cf2bc897d8 <line:288:5, col:66> col:45 has_network_header 'bool () const'
| |-NoInlineAttr 0x55cf2bc89878 <col:20>
| `-OptimizeNoneAttr 0x55cf2bc898d0 <col:30>
|-CXXMethodDecl 0x55cf2bc89920 <line:289:5, col:78> col:61 used network_header 'const unsigned char *() const'
| |-NoInlineAttr 0x55cf2bc899c0 <col:20>
| `-OptimizeNoneAttr 0x55cf2bc89a18 <col:30>
|-CXXMethodDecl 0x55cf2bc89a68 <line:290:5, col:40> col:16 used network_header_offset 'int () const' inline
|-CXXMethodDecl 0x55cf2bc89b28 <line:291:5, col:45> col:21 used network_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55cf2bc89bf0 <line:292:5, col:61> col:44 network_length 'int () const'
| |-NoInlineAttr 0x55cf2bc89c90 <col:20>
| `-OptimizeNoneAttr 0x55cf2bc89ce8 <col:30>
|-CXXMethodDecl 0x55cf2bc89e38 <line:293:5, col:72> col:17 set_network_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x55cf2bc89d28 <col:36, col:57> col:57 p 'const unsigned char *'
| `-ParmVarDecl 0x55cf2bc89da0 <col:60, col:69> col:69 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55cf2bc89f88 <line:294:5, col:55> col:17 set_network_header_length 'void (uint32_t)' inline
| `-ParmVarDecl 0x55cf2bc89ef8 <col:43, col:52> col:52 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55cf2bc8a060 <line:295:5, col:38> col:17 clear_network_header 'void ()' inline
|-CXXMethodDecl 0x55cf2bc8a120 <line:297:5, col:68> col:45 has_transport_header 'bool () const'
| |-NoInlineAttr 0x55cf2bc8a1c0 <col:20>
| `-OptimizeNoneAttr 0x55cf2bc8a218 <col:30>
|-CXXMethodDecl 0x55cf2bc8a268 <line:298:5, col:80> col:61 used transport_header 'const unsigned char *() const'
| |-NoInlineAttr 0x55cf2bc8a308 <col:20>
| `-OptimizeNoneAttr 0x55cf2bc8a360 <col:30>
|-CXXMethodDecl 0x55cf2bc8a3b0 <line:299:5, col:42> col:16 transport_header_offset 'int () const' inline
|-CXXMethodDecl 0x55cf2bc8a478 <line:300:5, col:63> col:44 transport_length 'int () const'
| |-NoInlineAttr 0x55cf2bc8a518 <col:20>
| `-OptimizeNoneAttr 0x55cf2bc8a570 <col:30>
|-CXXMethodDecl 0x55cf2bc8a5b8 <line:301:5, col:40> col:17 clear_transport_header 'void ()' inline
|-CXXMethodDecl 0x55cf2bc8a6d8 <line:304:5, col:46> col:31 ether_header 'const click_ether *() const' inline
|-CXXMethodDecl 0x55cf2bc8a848 <line:305:5, col:57> col:17 set_ether_header 'void (const click_ether *)' inline
| `-ParmVarDecl 0x55cf2bc8a788 <col:34, col:53> col:53 ethh 'const click_ether *'
|-CXXMethodDecl 0x55cf2bc8a938 <line:307:5, col:68> col:56 ip_header 'const click_ip *() const'
| |-NoInlineAttr 0x55cf2bc8a9d8 <col:20>
| `-OptimizeNoneAttr 0x55cf2bc8aa30 <col:30>
|-CXXMethodDecl 0x55cf2bc8aa80 <line:308:5, col:35> col:16 ip_header_offset 'int () const' inline
|-CXXMethodDecl 0x55cf2bc8ab40 <line:309:5, col:40> col:21 ip_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55cf2bc8ad78 <line:310:5, col:92> col:45 set_ip_header 'void (const click_ip *, uint32_t)'
| |-ParmVarDecl 0x55cf2bc8abf0 <col:59, col:75> col:75 iph 'const click_ip *'
| |-ParmVarDecl 0x55cf2bc8ac68 <col:80, col:89> col:89 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55cf2bc8ae28 <col:20>
| `-OptimizeNoneAttr 0x55cf2bc8ae80 <col:30>
|-CXXMethodDecl 0x55cf2bc8af28 <line:312:5, col:70> col:57 ip6_header 'const click_ip6 *() const'
| |-NoInlineAttr 0x55cf2bc8afc8 <col:20>
| `-OptimizeNoneAttr 0x55cf2bc8b020 <col:30>
|-CXXMethodDecl 0x55cf2bc8b070 <line:313:5, col:64> col:44 ip6_header_offset 'int () const'
| |-NoInlineAttr 0x55cf2bc8b110 <col:20>
| `-OptimizeNoneAttr 0x55cf2bc8b168 <col:30>
|-CXXMethodDecl 0x55cf2bc8b1b0 <line:314:5, col:69> col:49 ip6_header_length 'uint32_t () const'
| |-NoInlineAttr 0x55cf2bc8b250 <col:20>
| `-OptimizeNoneAttr 0x55cf2bc8b2a8 <col:30>
|-CXXMethodDecl 0x55cf2bc8b3a8 <line:315:5, col:81> col:45 set_ip6_header 'void (const click_ip6 *)'
| |-ParmVarDecl 0x55cf2bc8b2e0 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-NoInlineAttr 0x55cf2bc8b450 <col:20>
| `-OptimizeNoneAttr 0x55cf2bc8b4a8 <col:30>
|-CXXMethodDecl 0x55cf2bc8b668 <line:316:5, col:95> col:45 set_ip6_header 'void (const click_ip6 *, uint32_t)'
| |-ParmVarDecl 0x55cf2bc8b4e0 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-ParmVarDecl 0x55cf2bc8b558 <col:83, col:92> col:92 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55cf2bc8b718 <col:20>
| `-OptimizeNoneAttr 0x55cf2bc8b770 <col:30>
|-CXXMethodDecl 0x55cf2bc8b818 <line:318:5, col:44> col:30 used icmp_header 'const click_icmp *() const' inline
|-CXXMethodDecl 0x55cf2bc8b938 <line:319:5, col:42> col:29 used tcp_header 'const click_tcp *() const' inline
|-CXXMethodDecl 0x55cf2bc8ba58 <line:320:5, col:42> col:29 used udp_header 'const click_udp *() const' inline
|-AccessSpecDecl 0x55cf2bc8baf8 <line:333:3, col:10> col:3 private
|-CXXRecordDecl 0x55cf2bc8bb20 <line:335:5, col:11> col:11 referenced union Anno
|-CXXMethodDecl 0x55cf2bc8bc48 <line:340:5, col:60> col:52 used xanno 'const Packet::Anno *() const'
| |-NoInlineAttr 0x55cf2bc8bce8 <col:20>
| `-OptimizeNoneAttr 0x55cf2bc8bd40 <col:30>
|-CXXMethodDecl 0x55cf2bc8bde8 <line:341:5, col:52> col:46 used xanno 'Packet::Anno *()'
| |-NoInlineAttr 0x55cf2bc8be88 <col:20>
| `-OptimizeNoneAttr 0x55cf2bc8bee0 <col:30>
|-AccessSpecDecl 0x55cf2bc8bf08 <line:344:3, col:9> col:3 public
|-EnumDecl 0x55cf2bc8bf30 <line:349:5, line:351:5> line:349:5
| `-EnumConstantDecl 0x55cf2bc8c030 <line:350:2, col:14> col:2 referenced anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   `-ImplicitCastExpr 0x55cf2bc8c080 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55cf2bc8c010 <col:14> 'int' Int: 48
|       `-IntegerLiteral 0x55cf2bc8bff0 <col:14> 'int' 48
|-CXXMethodDecl 0x55cf2bc8c0e8 <line:354:5, col:74> col:57 used timestamp_anno 'const Timestamp &() const'
| |-NoInlineAttr 0x55cf2bc8c188 <col:20>
| `-OptimizeNoneAttr 0x55cf2bc8c1e0 <col:30>
|-CXXMethodDecl 0x55cf2bc8c258 <line:356:5, col:66> col:51 used timestamp_anno 'Timestamp &()'
| |-NoInlineAttr 0x55cf2bc8c2f8 <col:20>
| `-OptimizeNoneAttr 0x55cf2bc8c350 <col:30>
|-CXXMethodDecl 0x55cf2bc8c418 <line:359:5, col:54> col:17 used set_timestamp_anno 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x55cf2bc8c388 <col:36, col:53> col:53 t 'const Timestamp &'
|-CXXMethodDecl 0x55cf2bc8c5b8 <line:362:5, col:38> col:24 used device_anno 'net_device *() const' inline
|-CXXMethodDecl 0x55cf2bc8c758 <line:364:5, col:48> col:17 used set_device_anno 'void (net_device *)' inline
| `-ParmVarDecl 0x55cf2bc8c668 <col:33, col:45> col:45 dev 'net_device *'
|-EnumDecl 0x55cf2bc8c800 <line:368:5, line:381:5> line:368:10 referenced PacketType
| |-EnumConstantDecl 0x55cf2bc8c900 <line:369:2, col:9> col:2 HOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55cf2bc8ccb0 <col:9> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf2bc8c8e0 <col:9> 'int' Int: 0
| |     `-IntegerLiteral 0x55cf2bc8c8c0 <col:9> 'int' 0
| |-EnumConstantDecl 0x55cf2bc8c990 <line:370:2, col:14> col:2 BROADCAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55cf2bc8ccc8 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf2bc8c970 <col:14> 'int' Int: 1
| |     `-IntegerLiteral 0x55cf2bc8c950 <col:14> 'int' 1
| |-EnumConstantDecl 0x55cf2bc8ca20 <line:372:2, col:14> col:2 MULTICAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55cf2bc8cce0 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf2bc8ca00 <col:14> 'int' Int: 2
| |     `-IntegerLiteral 0x55cf2bc8c9e0 <col:14> 'int' 2
| |-EnumConstantDecl 0x55cf2bc8cab0 <line:374:2, col:14> col:2 OTHERHOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55cf2bc8ccf8 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf2bc8ca90 <col:14> 'int' Int: 3
| |     `-IntegerLiteral 0x55cf2bc8ca70 <col:14> 'int' 3
| |-EnumConstantDecl 0x55cf2bc8cb40 <line:377:2, col:13> col:2 OUTGOING 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55cf2bc8cd10 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf2bc8cb20 <col:13> 'int' Int: 4
| |     `-IntegerLiteral 0x55cf2bc8cb00 <col:13> 'int' 4
| |-EnumConstantDecl 0x55cf2bc8cbd0 <line:379:2, col:13> col:2 LOOPBACK 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55cf2bc8cd28 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf2bc8cbb0 <col:13> 'int' Int: 5
| |     `-IntegerLiteral 0x55cf2bc8cb90 <col:13> 'int' 5
| `-EnumConstantDecl 0x55cf2bc8cc60 <line:380:2, col:14> col:2 FASTROUTE 'Packet::PacketType'
|   `-ImplicitCastExpr 0x55cf2bc8cd40 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55cf2bc8cc40 <col:14> 'int' Int: 6
|       `-IntegerLiteral 0x55cf2bc8cc20 <col:14> 'int' 6
|-CXXMethodDecl 0x55cf2bc8cda8 <line:383:5, col:70> col:51 used packet_type_anno 'Packet::PacketType () const'
| |-NoInlineAttr 0x55cf2bc8ce48 <col:20>
| `-OptimizeNoneAttr 0x55cf2bc8cea0 <col:30>
|-CXXMethodDecl 0x55cf2bc8cf98 <line:385:5, col:78> col:45 used set_packet_type_anno 'void (Packet::PacketType)'
| |-ParmVarDecl 0x55cf2bc8ced8 <col:66, col:77> col:77 t 'Packet::PacketType'
| |-NoInlineAttr 0x55cf2bc8d040 <col:20>
| `-OptimizeNoneAttr 0x55cf2bc8d098 <col:30>
|-CXXMethodDecl 0x55cf2bc8d108 <line:410:5, col:27> col:20 next 'Packet *() const' inline
|-CXXMethodDecl 0x55cf2bc8d230 <line:412:5, col:26> col:21 next 'Packet *&()' inline
|-CXXMethodDecl 0x55cf2bc8d3a8 <line:414:5, col:35> col:17 set_next 'void (Packet *)' inline
| `-ParmVarDecl 0x55cf2bc8d2e0 <col:26, col:34> col:34 p 'Packet *'
|-CXXMethodDecl 0x55cf2bc8d470 <line:417:5, col:27> col:20 prev 'Packet *() const' inline
|-CXXMethodDecl 0x55cf2bc8d538 <line:419:5, col:26> col:21 prev 'Packet *&()' inline
|-CXXMethodDecl 0x55cf2bc8d678 <line:421:5, col:35> col:17 set_prev 'void (Packet *)' inline
| `-ParmVarDecl 0x55cf2bc8d5e8 <col:26, col:34> col:34 p 'Packet *'
|-EnumDecl 0x55cf2bc8d720 <line:423:5, line:426:5> line:423:5
| |-EnumConstantDecl 0x55cf2bc8d820 <line:424:2, col:23> col:2 referenced dst_ip_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x55cf2bc8da20 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf2bc8d800 <col:23> 'int' Int: 0
| |     `-IntegerLiteral 0x55cf2bc8d7e0 <col:23> 'int' 0
| |-EnumConstantDecl 0x55cf2bc8d8b0 <col:26, col:45> col:26 dst_ip_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x55cf2bc8da38 <col:45> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf2bc8d890 <col:45> 'int' Int: 4
| |     `-IntegerLiteral 0x55cf2bc8d870 <col:45> 'int' 4
| |-EnumConstantDecl 0x55cf2bc8d940 <line:425:2, col:24> col:2 dst_ip6_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x55cf2bc8da50 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf2bc8d920 <col:24> 'int' Int: 0
| |     `-IntegerLiteral 0x55cf2bc8d900 <col:24> 'int' 0
| `-EnumConstantDecl 0x55cf2bc8d9d0 <col:27, col:47> col:27 dst_ip6_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
|   `-ImplicitCastExpr 0x55cf2bc8da68 <col:47> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55cf2bc8d9b0 <col:47> 'int' Int: 16
|       `-IntegerLiteral 0x55cf2bc8d990 <col:47> 'int' 16
|-CXXMethodDecl 0x55cf2bc8dac8 <line:431:5, col:36> col:22 dst_ip_anno 'IPAddress () const' inline
|-CXXMethodDecl 0x55cf2bc8dc38 <line:436:5, col:75> col:45 set_dst_ip_anno 'void (IPAddress)'
| |-ParmVarDecl 0x55cf2bc8db78 <col:61, col:71> col:71 addr 'IPAddress'
| |-NoInlineAttr 0x55cf2bc8dce0 <col:20>
| `-OptimizeNoneAttr 0x55cf2bc8dd38 <col:30>
|-CXXMethodDecl 0x55cf2bc8dd88 <line:441:5, col:36> col:11 anno 'void *()'
| `-CompoundStmt 0x55cf2bca1710 <col:18, col:36>
|   `-ReturnStmt 0x55cf2bca1700 <col:20, col:33>
|     `-ImplicitCastExpr 0x55cf2bca16e8 <col:27, col:33> 'void *' <BitCast>
|       `-CXXMemberCallExpr 0x55cf2bca16c8 <col:27, col:33> 'Packet::Anno *'
|         `-MemberExpr 0x55cf2bca1698 <col:27> '<bound member function type>' ->xanno 0x55cf2bc8bde8
|           `-CXXThisExpr 0x55cf2bca1688 <col:27> 'Packet *' implicit this
|-CXXMethodDecl 0x55cf2bc8de80 <line:444:5, col:48> col:17 anno 'const void *() const'
| `-CompoundStmt 0x55cf2bca1820 <col:30, col:48>
|   `-ReturnStmt 0x55cf2bca1810 <col:32, col:45>
|     `-ImplicitCastExpr 0x55cf2bca17f8 <col:39, col:45> 'const void *' <BitCast>
|       `-CXXMemberCallExpr 0x55cf2bca17d8 <col:39, col:45> 'const Packet::Anno *'
|         `-MemberExpr 0x55cf2bca17a8 <col:39> '<bound member function type>' ->xanno 0x55cf2bc8bc48
|           `-CXXThisExpr 0x55cf2bca1798 <col:39> 'const Packet *' implicit this
|-CXXMethodDecl 0x55cf2bc8df68 <line:447:5, col:50> col:14 used anno_u8 'uint8_t *()'
| `-CompoundStmt 0x55cf2bca19b8 <col:24, col:50>
|   `-ReturnStmt 0x55cf2bca19a8 <col:26, col:47>
|     `-UnaryOperator 0x55cf2bca1990 <col:33, col:47> 'uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55cf2bca1970 <col:34, col:47> 'uint8_t':'unsigned char' lvalue
|         |-ImplicitCastExpr 0x55cf2bca1958 <col:34, col:43> 'uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55cf2bca1908 <col:34, col:43> 'uint8_t [48]' lvalue ->u8 0x55cf2bc96c28
|         |   `-CXXMemberCallExpr 0x55cf2bca18e8 <col:34, col:40> 'Packet::Anno *'
|         |     `-MemberExpr 0x55cf2bca18b8 <col:34> '<bound member function type>' ->xanno 0x55cf2bc8bde8
|         |       `-CXXThisExpr 0x55cf2bca18a8 <col:34> 'Packet *' implicit this
|         `-IntegerLiteral 0x55cf2bca1938 <col:46> 'int' 0
|-CXXMethodDecl 0x55cf2bc8e070 <line:450:5, col:62> col:20 used anno_u8 'const uint8_t *() const'
| `-CompoundStmt 0x55cf2bca1b88 <col:36, col:62>
|   `-ReturnStmt 0x55cf2bca1b78 <col:38, col:59>
|     `-UnaryOperator 0x55cf2bca1b60 <col:45, col:59> 'const uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55cf2bca1b40 <col:46, col:59> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x55cf2bca1b28 <col:46, col:55> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55cf2bca1aa0 <col:46, col:55> 'uint8_t const[48]' lvalue ->u8 0x55cf2bc96c28
|         |   `-CXXMemberCallExpr 0x55cf2bca1a80 <col:46, col:52> 'const Packet::Anno *'
|         |     `-MemberExpr 0x55cf2bca1a50 <col:46> '<bound member function type>' ->xanno 0x55cf2bc8bc48
|         |       `-CXXThisExpr 0x55cf2bca1a40 <col:46> 'const Packet *' implicit this
|         `-IntegerLiteral 0x55cf2bca1ad0 <col:58> 'int' 0
|-CXXMethodDecl 0x55cf2bc8e188 <line:453:5, col:53> col:15 used anno_u32 'uint32_t *()'
| `-CompoundStmt 0x55cf2bca1d20 <col:26, col:53>
|   `-ReturnStmt 0x55cf2bca1d10 <col:28, col:50>
|     `-UnaryOperator 0x55cf2bca1cf8 <col:35, col:50> 'uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55cf2bca1cd8 <col:36, col:50> 'uint32_t':'unsigned int' lvalue
|         |-ImplicitCastExpr 0x55cf2bca1cc0 <col:36, col:45> 'uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55cf2bca1c70 <col:36, col:45> 'uint32_t [12]' lvalue ->u32 0x55cf2bc96f28
|         |   `-CXXMemberCallExpr 0x55cf2bca1c50 <col:36, col:42> 'Packet::Anno *'
|         |     `-MemberExpr 0x55cf2bca1c20 <col:36> '<bound member function type>' ->xanno 0x55cf2bc8bde8
|         |       `-CXXThisExpr 0x55cf2bca1c10 <col:36> 'Packet *' implicit this
|         `-IntegerLiteral 0x55cf2bca1ca0 <col:49> 'int' 0
|-CXXMethodDecl 0x55cf2bc8e2a8 <line:456:5, col:65> col:21 used anno_u32 'const uint32_t *() const'
| `-CompoundStmt 0x55cf2bca1ef8 <col:38, col:65>
|   `-ReturnStmt 0x55cf2bca1ee8 <col:40, col:62>
|     `-UnaryOperator 0x55cf2bca1ed0 <col:47, col:62> 'const uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55cf2bca1eb0 <col:48, col:62> 'const uint32_t':'const unsigned int' lvalue
|         |-ImplicitCastExpr 0x55cf2bca1e98 <col:48, col:57> 'const uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55cf2bca1e08 <col:48, col:57> 'uint32_t const[12]' lvalue ->u32 0x55cf2bc96f28
|         |   `-CXXMemberCallExpr 0x55cf2bca1de8 <col:48, col:54> 'const Packet::Anno *'
|         |     `-MemberExpr 0x55cf2bca1db8 <col:48> '<bound member function type>' ->xanno 0x55cf2bc8bc48
|         |       `-CXXThisExpr 0x55cf2bca1da8 <col:48> 'const Packet *' implicit this
|         `-IntegerLiteral 0x55cf2bca1e38 <col:61> 'int' 0
|-CXXMethodDecl 0x55cf2bc8e458 <line:460:5, line:463:5> line:460:13 used anno_u8 'uint8_t (int) const'
| |-ParmVarDecl 0x55cf2bc8e360 <col:21, col:25> col:25 used i 'int'
| `-CompoundStmt 0x55cf2bca25c8 <col:34, line:463:5>
|   |-ParenExpr 0x55cf2bca2410 <line:461:2, col:174> 'void'
|   | `-ConditionalOperator 0x55cf2bca23e0 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x55cf2bca2048 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55cf2bca2018 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55cf2bca1f68 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55cf2bca1f50 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55cf2bca1f10 <col:23> 'int' lvalue ParmVar 0x55cf2bc8e360 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55cf2bca1f30 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55cf2bca1ff8 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55cf2bca1fc8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55cf2bca1f88 <col:33> 'int' lvalue ParmVar 0x55cf2bc8e360 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x55cf2bca1fe0 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x55cf2bca1fa8 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55cf2bc8c030 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x55cf2bca20a8 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55cf2bca2088 <col:56> 'int' 0
|   |   `-CallExpr 0x55cf2bca2340 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x55cf2bca2328 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55cf2bca2308 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55cf2b7f8810 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55cf2bca2380 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55cf2bca2198 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x55cf2bca2398 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55cf2bca21c8 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55cf2bca23b0 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55cf2bca2200 <col:135> 'int' 461
|   |     `-ImplicitCastExpr 0x55cf2bca23c8 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55cf2bca22f0 <col:140, col:154> 'const char [35]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55cf2bca22d8 <col:154> 'const char [35]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55cf2bca2298 <col:154> 'const char [35]' lvalue "uint8_t Packet::anno_u8(int) const"
|   `-ReturnStmt 0x55cf2bca25b8 <line:462:2, col:22>
|     `-ImplicitCastExpr 0x55cf2bca25a0 <col:9, col:22> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-ArraySubscriptExpr 0x55cf2bca2580 <col:9, col:22> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x55cf2bca2550 <col:9, col:18> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55cf2bca2500 <col:9, col:18> 'uint8_t const[48]' lvalue ->u8 0x55cf2bc96c28
|         |   `-CXXMemberCallExpr 0x55cf2bca24e0 <col:9, col:15> 'const Packet::Anno *'
|         |     `-MemberExpr 0x55cf2bca24b0 <col:9> '<bound member function type>' ->xanno 0x55cf2bc8bc48
|         |       `-CXXThisExpr 0x55cf2bca24a0 <col:9> 'const Packet *' implicit this
|         `-ImplicitCastExpr 0x55cf2bca2568 <col:21> 'int' <LValueToRValue>
|           `-DeclRefExpr 0x55cf2bca2530 <col:21> 'int' lvalue ParmVar 0x55cf2bc8e360 'i' 'int'
|-CXXMethodDecl 0x55cf2bc8e6a8 <line:469:5, line:472:5> line:469:10 used set_anno_u8 'void (int, uint8_t)'
| |-ParmVarDecl 0x55cf2bc8e518 <col:22, col:26> col:26 used i 'int'
| |-ParmVarDecl 0x55cf2bc8e590 <col:29, col:37> col:37 used x 'uint8_t':'unsigned char'
| `-CompoundStmt 0x55cf2bca2c58 <col:40, line:472:5>
|   |-ParenExpr 0x55cf2bca2a70 <line:470:2, col:174> 'void'
|   | `-ConditionalOperator 0x55cf2bca2a40 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x55cf2bca2720 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55cf2bca26f0 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55cf2bca2640 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55cf2bca2628 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55cf2bca25e8 <col:23> 'int' lvalue ParmVar 0x55cf2bc8e518 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55cf2bca2608 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55cf2bca26d0 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55cf2bca26a0 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55cf2bca2660 <col:33> 'int' lvalue ParmVar 0x55cf2bc8e518 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x55cf2bca26b8 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x55cf2bca2680 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55cf2bc8c030 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x55cf2bca2780 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55cf2bca2760 <col:56> 'int' 0
|   |   `-CallExpr 0x55cf2bca29a0 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x55cf2bca2988 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55cf2bca2968 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55cf2b7f8810 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55cf2bca29e0 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55cf2bca27f0 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x55cf2bca29f8 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55cf2bca2820 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55cf2bca2a10 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55cf2bca2858 <col:135> 'int' 470
|   |     `-ImplicitCastExpr 0x55cf2bca2a28 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55cf2bca2950 <col:140, col:154> 'const char [39]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55cf2bca2938 <col:154> 'const char [39]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55cf2bca28f8 <col:154> 'const char [39]' lvalue "void Packet::set_anno_u8(int, uint8_t)"
|   `-BinaryOperator 0x55cf2bca2c38 <line:471:2, col:19> 'uint8_t':'unsigned char' lvalue '='
|     |-ArraySubscriptExpr 0x55cf2bca2be0 <col:2, col:15> 'uint8_t':'unsigned char' lvalue
|     | |-ImplicitCastExpr 0x55cf2bca2bb0 <col:2, col:11> 'uint8_t *' <ArrayToPointerDecay>
|     | | `-MemberExpr 0x55cf2bca2b60 <col:2, col:11> 'uint8_t [48]' lvalue ->u8 0x55cf2bc96c28
|     | |   `-CXXMemberCallExpr 0x55cf2bca2b40 <col:2, col:8> 'Packet::Anno *'
|     | |     `-MemberExpr 0x55cf2bca2b10 <col:2> '<bound member function type>' ->xanno 0x55cf2bc8bde8
|     | |       `-CXXThisExpr 0x55cf2bca2b00 <col:2> 'Packet *' implicit this
|     | `-ImplicitCastExpr 0x55cf2bca2bc8 <col:14> 'int' <LValueToRValue>
|     |   `-DeclRefExpr 0x55cf2bca2b90 <col:14> 'int' lvalue ParmVar 0x55cf2bc8e518 'i' 'int'
|     `-ImplicitCastExpr 0x55cf2bca2c20 <col:19> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-DeclRefExpr 0x55cf2bca2c00 <col:19> 'uint8_t':'unsigned char' lvalue ParmVar 0x55cf2bc8e590 'x' 'uint8_t':'unsigned char'
|-CXXMethodDecl 0x55cf2bc8e868 <line:479:5, line:485:5> line:479:14 used anno_u16 'uint16_t (int) const'
| |-ParmVarDecl 0x55cf2bc8e770 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x55cf2bca33d8 <col:36, line:485:5>
|   |-ParenExpr 0x55cf2bca3140 <line:480:2, col:182> 'void'
|   | `-ConditionalOperator 0x55cf2bca3110 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55cf2bca2df0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55cf2bca2dc0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55cf2bca2cd0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55cf2bca2cb8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55cf2bca2c78 <col:23> 'int' lvalue ParmVar 0x55cf2bc8e770 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55cf2bca2c98 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55cf2bca2da0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55cf2bca2d88 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55cf2bca2cf0 <col:33> 'int' lvalue ParmVar 0x55cf2bc8e770 'i' 'int'
|   |   |     `-BinaryOperator 0x55cf2bca2d68 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55cf2bca2d50 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55cf2bca2d10 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55cf2bc8c030 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55cf2bca2d30 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55cf2bca2e50 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55cf2bca2e30 <col:60> 'int' 0
|   |   `-CallExpr 0x55cf2bca3070 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55cf2bca3058 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55cf2bca3038 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55cf2b7f8810 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55cf2bca30b0 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55cf2bca2ec0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55cf2bca30c8 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55cf2bca2ef8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55cf2bca30e0 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55cf2bca2f30 <col:143> 'int' 480
|   |     `-ImplicitCastExpr 0x55cf2bca30f8 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55cf2bca3020 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55cf2bca3008 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55cf2bca2fc8 <col:162> 'const char [37]' lvalue "uint16_t Packet::anno_u16(int) const"
|   `-ReturnStmt 0x55cf2bca33c8 <line:484:2, col:75>
|     `-ImplicitCastExpr 0x55cf2bca33b0 <col:9, col:75> 'click_aliasable_uint16_t':'unsigned short' <LValueToRValue>
|       `-UnaryOperator 0x55cf2bca3398 <col:9, col:75> 'const click_aliasable_uint16_t':'const unsigned short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55cf2bca3368 <col:10, col:75> 'const click_aliasable_uint16_t *' reinterpret_cast<const click_aliasable_uint16_t *> <BitCast>
|           `-BinaryOperator 0x55cf2bca3308 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x55cf2bca32d8 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55cf2bca3250 <col:61, col:70> 'char const[48]' lvalue ->c 0x55cf2bc96b00
|             |   `-CXXMemberCallExpr 0x55cf2bca3230 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55cf2bca3200 <col:61> '<bound member function type>' ->xanno 0x55cf2bc8bc48
|             |       `-CXXThisExpr 0x55cf2bca31f0 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55cf2bca32f0 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55cf2bca3280 <col:74> 'int' lvalue ParmVar 0x55cf2bc8e770 'i' 'int'
|-CXXMethodDecl 0x55cf2bc8eab8 <line:494:5, line:500:5> line:494:10 used set_anno_u16 'void (int, uint16_t)'
| |-ParmVarDecl 0x55cf2bc8e928 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55cf2bc8e9a0 <col:30, col:39> col:39 used x 'uint16_t':'unsigned short'
| `-CompoundStmt 0x55cf2bca3b28 <col:42, line:500:5>
|   |-ParenExpr 0x55cf2bca38c0 <line:495:2, col:182> 'void'
|   | `-ConditionalOperator 0x55cf2bca3890 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55cf2bca3570 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55cf2bca3540 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55cf2bca3450 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55cf2bca3438 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55cf2bca33f8 <col:23> 'int' lvalue ParmVar 0x55cf2bc8e928 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55cf2bca3418 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55cf2bca3520 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55cf2bca3508 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55cf2bca3470 <col:33> 'int' lvalue ParmVar 0x55cf2bc8e928 'i' 'int'
|   |   |     `-BinaryOperator 0x55cf2bca34e8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55cf2bca34d0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55cf2bca3490 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55cf2bc8c030 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55cf2bca34b0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55cf2bca35d0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55cf2bca35b0 <col:60> 'int' 0
|   |   `-CallExpr 0x55cf2bca37f0 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55cf2bca37d8 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55cf2bca37b8 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55cf2b7f8810 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55cf2bca3830 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55cf2bca3640 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55cf2bca3848 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55cf2bca3678 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55cf2bca3860 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55cf2bca36b0 <col:143> 'int' 495
|   |     `-ImplicitCastExpr 0x55cf2bca3878 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55cf2bca37a0 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55cf2bca3788 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55cf2bca3748 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u16(int, uint16_t)"
|   `-BinaryOperator 0x55cf2bca3b08 <line:499:2, col:66> 'click_aliasable_uint16_t':'unsigned short' lvalue '='
|     |-UnaryOperator 0x55cf2bca3ab8 <col:2, col:62> 'click_aliasable_uint16_t':'unsigned short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55cf2bca3a88 <col:3, col:62> 'click_aliasable_uint16_t *' reinterpret_cast<click_aliasable_uint16_t *> <BitCast>
|     |   `-BinaryOperator 0x55cf2bca3a30 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55cf2bca3a00 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55cf2bca39b0 <col:48, col:57> 'char [48]' lvalue ->c 0x55cf2bc96b00
|     |     |   `-CXXMemberCallExpr 0x55cf2bca3990 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55cf2bca3960 <col:48> '<bound member function type>' ->xanno 0x55cf2bc8bde8
|     |     |       `-CXXThisExpr 0x55cf2bca3950 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55cf2bca3a18 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55cf2bca39e0 <col:61> 'int' lvalue ParmVar 0x55cf2bc8e928 'i' 'int'
|     `-ImplicitCastExpr 0x55cf2bca3af0 <col:66> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x55cf2bca3ad0 <col:66> 'uint16_t':'unsigned short' lvalue ParmVar 0x55cf2bc8e9a0 'x' 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x55cf2bc8ec78 <line:507:5, line:513:5> line:507:13 anno_s16 'int16_t (int) const'
| |-ParmVarDecl 0x55cf2bc8eb80 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x55cf2bca4288 <col:35, line:513:5>
|   |-ParenExpr 0x55cf2bca3f98 <line:508:2, col:182> 'void'
|   | `-ConditionalOperator 0x55cf2bca3f68 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55cf2bca3cc0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55cf2bca3c90 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55cf2bca3ba0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55cf2bca3b88 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55cf2bca3b48 <col:23> 'int' lvalue ParmVar 0x55cf2bc8eb80 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55cf2bca3b68 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55cf2bca3c70 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55cf2bca3c58 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55cf2bca3bc0 <col:33> 'int' lvalue ParmVar 0x55cf2bc8eb80 'i' 'int'
|   |   |     `-BinaryOperator 0x55cf2bca3c38 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55cf2bca3c20 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55cf2bca3be0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55cf2bc8c030 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55cf2bca3c00 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55cf2bca3d20 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55cf2bca3d00 <col:60> 'int' 0
|   |   `-CallExpr 0x55cf2bca3ec8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55cf2bca3eb0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55cf2bca3e90 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55cf2b7f8810 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55cf2bca3f08 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55cf2bca3d90 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55cf2bca3f20 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55cf2bca3dc8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55cf2bca3f38 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55cf2bca3e00 <col:143> 'int' 508
|   |     `-ImplicitCastExpr 0x55cf2bca3f50 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55cf2bca3e78 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55cf2bca3e60 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55cf2bca3e20 <col:162> 'const char [36]' lvalue "int16_t Packet::anno_s16(int) const"
|   `-ReturnStmt 0x55cf2bca4278 <line:512:2, col:74>
|     `-ImplicitCastExpr 0x55cf2bca4260 <col:9, col:74> 'click_aliasable_int16_t':'short' <LValueToRValue>
|       `-UnaryOperator 0x55cf2bca4248 <col:9, col:74> 'const click_aliasable_int16_t':'const short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55cf2bca4218 <col:10, col:74> 'const click_aliasable_int16_t *' reinterpret_cast<const click_aliasable_int16_t *> <BitCast>
|           `-BinaryOperator 0x55cf2bca4190 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x55cf2bca4160 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55cf2bca4110 <col:60, col:69> 'char const[48]' lvalue ->c 0x55cf2bc96b00
|             |   `-CXXMemberCallExpr 0x55cf2bca40f0 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55cf2bca40c0 <col:60> '<bound member function type>' ->xanno 0x55cf2bc8bc48
|             |       `-CXXThisExpr 0x55cf2bca40b0 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55cf2bca4178 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55cf2bca4140 <col:73> 'int' lvalue ParmVar 0x55cf2bc8eb80 'i' 'int'
|-CXXMethodDecl 0x55cf2bc8eec8 <line:522:5, line:528:5> line:522:10 set_anno_s16 'void (int, int16_t)'
| |-ParmVarDecl 0x55cf2bc8ed38 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55cf2bc8edb0 <col:30, col:38> col:38 used x 'int16_t':'short'
| `-CompoundStmt 0x55cf2bca49a8 <col:41, line:528:5>
|   |-ParenExpr 0x55cf2bca4730 <line:523:2, col:182> 'void'
|   | `-ConditionalOperator 0x55cf2bca4700 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55cf2bca4420 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55cf2bca43f0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55cf2bca4300 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55cf2bca42e8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55cf2bca42a8 <col:23> 'int' lvalue ParmVar 0x55cf2bc8ed38 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55cf2bca42c8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55cf2bca43d0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55cf2bca43b8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55cf2bca4320 <col:33> 'int' lvalue ParmVar 0x55cf2bc8ed38 'i' 'int'
|   |   |     `-BinaryOperator 0x55cf2bca4398 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55cf2bca4380 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55cf2bca4340 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55cf2bc8c030 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55cf2bca4360 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55cf2bca4480 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55cf2bca4460 <col:60> 'int' 0
|   |   `-CallExpr 0x55cf2bca4660 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55cf2bca4648 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55cf2bca4628 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55cf2b7f8810 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55cf2bca46a0 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55cf2bca44f0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55cf2bca46b8 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55cf2bca4528 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55cf2bca46d0 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55cf2bca4560 <col:143> 'int' 523
|   |     `-ImplicitCastExpr 0x55cf2bca46e8 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55cf2bca4610 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55cf2bca45f8 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55cf2bca45b8 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s16(int, int16_t)"
|   `-BinaryOperator 0x55cf2bca4988 <line:527:2, col:65> 'click_aliasable_int16_t':'short' lvalue '='
|     |-UnaryOperator 0x55cf2bca4938 <col:2, col:61> 'click_aliasable_int16_t':'short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55cf2bca4908 <col:3, col:61> 'click_aliasable_int16_t *' reinterpret_cast<click_aliasable_int16_t *> <BitCast>
|     |   `-BinaryOperator 0x55cf2bca48b0 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55cf2bca4870 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55cf2bca4820 <col:47, col:56> 'char [48]' lvalue ->c 0x55cf2bc96b00
|     |     |   `-CXXMemberCallExpr 0x55cf2bca4800 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55cf2bca47d0 <col:47> '<bound member function type>' ->xanno 0x55cf2bc8bde8
|     |     |       `-CXXThisExpr 0x55cf2bca47c0 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55cf2bca4888 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55cf2bca4850 <col:60> 'int' lvalue ParmVar 0x55cf2bc8ed38 'i' 'int'
|     `-ImplicitCastExpr 0x55cf2bca4970 <col:65> 'int16_t':'short' <LValueToRValue>
|       `-DeclRefExpr 0x55cf2bca4950 <col:65> 'int16_t':'short' lvalue ParmVar 0x55cf2bc8edb0 'x' 'int16_t':'short'
|-CXXMethodDecl 0x55cf2bc8f088 <line:535:5, line:541:5> line:535:14 used anno_u32 'uint32_t (int) const'
| |-ParmVarDecl 0x55cf2bc8ef90 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x55cf2bca5078 <col:36, line:541:5>
|   |-ParenExpr 0x55cf2bca4e18 <line:536:2, col:182> 'void'
|   | `-ConditionalOperator 0x55cf2bca4de8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55cf2bca4b40 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55cf2bca4b10 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55cf2bca4a20 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55cf2bca4a08 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55cf2bca49c8 <col:23> 'int' lvalue ParmVar 0x55cf2bc8ef90 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55cf2bca49e8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55cf2bca4af0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55cf2bca4ad8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55cf2bca4a40 <col:33> 'int' lvalue ParmVar 0x55cf2bc8ef90 'i' 'int'
|   |   |     `-BinaryOperator 0x55cf2bca4ab8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55cf2bca4aa0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55cf2bca4a60 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55cf2bc8c030 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55cf2bca4a80 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x55cf2bca4ba0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55cf2bca4b80 <col:60> 'int' 0
|   |   `-CallExpr 0x55cf2bca4d48 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55cf2bca4d30 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55cf2bca4d10 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55cf2b7f8810 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55cf2bca4d88 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55cf2bca4c10 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x55cf2bca4da0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55cf2bca4c48 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55cf2bca4db8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55cf2bca4c80 <col:143> 'int' 536
|   |     `-ImplicitCastExpr 0x55cf2bca4dd0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55cf2bca4cf8 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55cf2bca4ce0 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55cf2bca4ca0 <col:162> 'const char [37]' lvalue "uint32_t Packet::anno_u32(int) const"
|   `-ReturnStmt 0x55cf2bca5068 <line:540:2, col:75>
|     `-ImplicitCastExpr 0x55cf2bca5050 <col:9, col:75> 'click_aliasable_uint32_t':'unsigned int' <LValueToRValue>
|       `-UnaryOperator 0x55cf2bca5038 <col:9, col:75> 'const click_aliasable_uint32_t':'const unsigned int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55cf2bca5008 <col:10, col:75> 'const click_aliasable_uint32_t *' reinterpret_cast<const click_aliasable_uint32_t *> <BitCast>
|           `-BinaryOperator 0x55cf2bca4fb0 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x55cf2bca4f80 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55cf2bca4f30 <col:61, col:70> 'char const[48]' lvalue ->c 0x55cf2bc96b00
|             |   `-CXXMemberCallExpr 0x55cf2bca4f10 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55cf2bca4ee0 <col:61> '<bound member function type>' ->xanno 0x55cf2bc8bc48
|             |       `-CXXThisExpr 0x55cf2bca4ed0 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55cf2bca4f98 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55cf2bca4f60 <col:74> 'int' lvalue ParmVar 0x55cf2bc8ef90 'i' 'int'
|-CXXMethodDecl 0x55cf2bc8f258 <line:550:5, col:75> col:45 used set_anno_u32 'void (int, uint32_t)'
| |-ParmVarDecl 0x55cf2bc8f148 <col:58, col:62> col:62 i 'int'
| |-ParmVarDecl 0x55cf2bc8f1c0 <col:65, col:74> col:74 x 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55cf2bc8f308 <col:20>
| `-OptimizeNoneAttr 0x55cf2bc8f360 <col:30>
|-CXXMethodDecl 0x55cf2bc8f498 <line:556:5, line:562:5> line:556:13 used anno_s32 'int32_t (int) const'
| |-ParmVarDecl 0x55cf2bc8f3a0 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x55cf2bca5748 <col:35, line:562:5>
|   |-ParenExpr 0x55cf2bca54e8 <line:557:2, col:182> 'void'
|   | `-ConditionalOperator 0x55cf2bca54b8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55cf2bca5210 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55cf2bca51e0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55cf2bca50f0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55cf2bca50d8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55cf2bca5098 <col:23> 'int' lvalue ParmVar 0x55cf2bc8f3a0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55cf2bca50b8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55cf2bca51c0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55cf2bca51a8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55cf2bca5110 <col:33> 'int' lvalue ParmVar 0x55cf2bc8f3a0 'i' 'int'
|   |   |     `-BinaryOperator 0x55cf2bca5188 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55cf2bca5170 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55cf2bca5130 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55cf2bc8c030 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55cf2bca5150 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x55cf2bca5270 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55cf2bca5250 <col:60> 'int' 0
|   |   `-CallExpr 0x55cf2bca5418 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55cf2bca5400 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55cf2bca53e0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55cf2b7f8810 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55cf2bca5458 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55cf2bca52e0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x55cf2bca5470 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55cf2bca5318 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55cf2bca5488 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55cf2bca5350 <col:143> 'int' 557
|   |     `-ImplicitCastExpr 0x55cf2bca54a0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55cf2bca53c8 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55cf2bca53b0 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55cf2bca5370 <col:162> 'const char [36]' lvalue "int32_t Packet::anno_s32(int) const"
|   `-ReturnStmt 0x55cf2bca5738 <line:561:2, col:74>
|     `-ImplicitCastExpr 0x55cf2bca5720 <col:9, col:74> 'click_aliasable_int32_t':'int' <LValueToRValue>
|       `-UnaryOperator 0x55cf2bca5708 <col:9, col:74> 'const click_aliasable_int32_t':'const int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55cf2bca56d8 <col:10, col:74> 'const click_aliasable_int32_t *' reinterpret_cast<const click_aliasable_int32_t *> <BitCast>
|           `-BinaryOperator 0x55cf2bca5680 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x55cf2bca5650 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55cf2bca5600 <col:60, col:69> 'char const[48]' lvalue ->c 0x55cf2bc96b00
|             |   `-CXXMemberCallExpr 0x55cf2bca55e0 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55cf2bca55b0 <col:60> '<bound member function type>' ->xanno 0x55cf2bc8bc48
|             |       `-CXXThisExpr 0x55cf2bca55a0 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55cf2bca5668 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55cf2bca5630 <col:73> 'int' lvalue ParmVar 0x55cf2bc8f3a0 'i' 'int'
|-CXXMethodDecl 0x55cf2bc8f6a8 <line:571:5, line:577:5> line:571:10 used set_anno_s32 'void (int, int32_t)'
| |-ParmVarDecl 0x55cf2bc8f558 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55cf2bc8f5d0 <col:30, col:38> col:38 used x 'int32_t':'int'
| `-CompoundStmt 0x55cf2bca5e28 <col:41, line:577:5>
|   |-ParenExpr 0x55cf2bca5bb8 <line:572:2, col:182> 'void'
|   | `-ConditionalOperator 0x55cf2bca5b88 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55cf2bca58e0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55cf2bca58b0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55cf2bca57c0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55cf2bca57a8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55cf2bca5768 <col:23> 'int' lvalue ParmVar 0x55cf2bc8f558 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55cf2bca5788 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55cf2bca5890 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55cf2bca5878 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55cf2bca57e0 <col:33> 'int' lvalue ParmVar 0x55cf2bc8f558 'i' 'int'
|   |   |     `-BinaryOperator 0x55cf2bca5858 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55cf2bca5840 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55cf2bca5800 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55cf2bc8c030 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55cf2bca5820 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x55cf2bca5940 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55cf2bca5920 <col:60> 'int' 0
|   |   `-CallExpr 0x55cf2bca5ae8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55cf2bca5ad0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55cf2bca5ab0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55cf2b7f8810 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55cf2bca5b28 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55cf2bca59b0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x55cf2bca5b40 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55cf2bca59e8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55cf2bca5b58 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55cf2bca5a20 <col:143> 'int' 572
|   |     `-ImplicitCastExpr 0x55cf2bca5b70 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55cf2bca5a98 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55cf2bca5a80 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55cf2bca5a40 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s32(int, int32_t)"
|   `-BinaryOperator 0x55cf2bca5e08 <line:576:2, col:65> 'click_aliasable_int32_t':'int' lvalue '='
|     |-UnaryOperator 0x55cf2bca5db8 <col:2, col:61> 'click_aliasable_int32_t':'int' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55cf2bca5d88 <col:3, col:61> 'click_aliasable_int32_t *' reinterpret_cast<click_aliasable_int32_t *> <BitCast>
|     |   `-BinaryOperator 0x55cf2bca5d28 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55cf2bca5cf8 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55cf2bca5ca8 <col:47, col:56> 'char [48]' lvalue ->c 0x55cf2bc96b00
|     |     |   `-CXXMemberCallExpr 0x55cf2bca5c88 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55cf2bca5c58 <col:47> '<bound member function type>' ->xanno 0x55cf2bc8bde8
|     |     |       `-CXXThisExpr 0x55cf2bca5c48 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55cf2bca5d10 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55cf2bca5cd8 <col:60> 'int' lvalue ParmVar 0x55cf2bc8f558 'i' 'int'
|     `-ImplicitCastExpr 0x55cf2bca5df0 <col:65> 'int32_t':'int' <LValueToRValue>
|       `-DeclRefExpr 0x55cf2bca5dd0 <col:65> 'int32_t':'int' lvalue ParmVar 0x55cf2bc8f5d0 'x' 'int32_t':'int'
|-CXXMethodDecl 0x55cf2bc8f868 <line:585:5, line:591:5> line:585:14 used anno_u64 'uint64_t (int) const'
| |-ParmVarDecl 0x55cf2bc8f770 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x55cf2bca6558 <col:36, line:591:5>
|   |-ParenExpr 0x55cf2bca6298 <line:586:2, col:182> 'void'
|   | `-ConditionalOperator 0x55cf2bca6268 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55cf2bca5fc0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55cf2bca5f90 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55cf2bca5ea0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55cf2bca5e88 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55cf2bca5e48 <col:23> 'int' lvalue ParmVar 0x55cf2bc8f770 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55cf2bca5e68 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55cf2bca5f70 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55cf2bca5f58 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55cf2bca5ec0 <col:33> 'int' lvalue ParmVar 0x55cf2bc8f770 'i' 'int'
|   |   |     `-BinaryOperator 0x55cf2bca5f38 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55cf2bca5f20 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55cf2bca5ee0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55cf2bc8c030 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55cf2bca5f00 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x55cf2bca6020 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55cf2bca6000 <col:60> 'int' 0
|   |   `-CallExpr 0x55cf2bca61c8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55cf2bca61b0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55cf2bca6190 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55cf2b7f8810 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55cf2bca6208 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55cf2bca6090 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x55cf2bca6220 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55cf2bca60c8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55cf2bca6238 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55cf2bca6100 <col:143> 'int' 586
|   |     `-ImplicitCastExpr 0x55cf2bca6250 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55cf2bca6178 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55cf2bca6160 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55cf2bca6120 <col:162> 'const char [37]' lvalue "uint64_t Packet::anno_u64(int) const"
|   `-ReturnStmt 0x55cf2bca6548 <line:590:2, col:75>
|     `-ImplicitCastExpr 0x55cf2bca6530 <col:9, col:75> 'click_aliasable_uint64_t':'unsigned long' <LValueToRValue>
|       `-UnaryOperator 0x55cf2bca6518 <col:9, col:75> 'const click_aliasable_uint64_t':'const unsigned long' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55cf2bca64e8 <col:10, col:75> 'const click_aliasable_uint64_t *' reinterpret_cast<const click_aliasable_uint64_t *> <BitCast>
|           `-BinaryOperator 0x55cf2bca6460 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x55cf2bca6430 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55cf2bca63e0 <col:61, col:70> 'char const[48]' lvalue ->c 0x55cf2bc96b00
|             |   `-CXXMemberCallExpr 0x55cf2bca63c0 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55cf2bca6390 <col:61> '<bound member function type>' ->xanno 0x55cf2bc8bc48
|             |       `-CXXThisExpr 0x55cf2bca6380 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55cf2bca6448 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55cf2bca6410 <col:74> 'int' lvalue ParmVar 0x55cf2bc8f770 'i' 'int'
|-CXXMethodDecl 0x55cf2bc8fab8 <line:600:5, line:606:5> line:600:10 used set_anno_u64 'void (int, uint64_t)'
| |-ParmVarDecl 0x55cf2bc8f928 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55cf2bc8f9a0 <col:30, col:39> col:39 used x 'uint64_t':'unsigned long'
| `-CompoundStmt 0x55cf2bca6c38 <col:42, line:606:5>
|   |-ParenExpr 0x55cf2bca69c8 <line:601:2, col:182> 'void'
|   | `-ConditionalOperator 0x55cf2bca6998 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55cf2bca66f0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55cf2bca66c0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55cf2bca65d0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55cf2bca65b8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55cf2bca6578 <col:23> 'int' lvalue ParmVar 0x55cf2bc8f928 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55cf2bca6598 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55cf2bca66a0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55cf2bca6688 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55cf2bca65f0 <col:33> 'int' lvalue ParmVar 0x55cf2bc8f928 'i' 'int'
|   |   |     `-BinaryOperator 0x55cf2bca6668 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55cf2bca6650 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55cf2bca6610 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55cf2bc8c030 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55cf2bca6630 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x55cf2bca6750 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55cf2bca6730 <col:60> 'int' 0
|   |   `-CallExpr 0x55cf2bca68f8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55cf2bca68e0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55cf2bca68c0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55cf2b7f8810 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55cf2bca6938 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55cf2bca67c0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x55cf2bca6950 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55cf2bca67f8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55cf2bca6968 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55cf2bca6830 <col:143> 'int' 601
|   |     `-ImplicitCastExpr 0x55cf2bca6980 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55cf2bca68a8 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55cf2bca6890 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55cf2bca6850 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u64(int, uint64_t)"
|   `-BinaryOperator 0x55cf2bca6c18 <line:605:2, col:66> 'click_aliasable_uint64_t':'unsigned long' lvalue '='
|     |-UnaryOperator 0x55cf2bca6bc8 <col:2, col:62> 'click_aliasable_uint64_t':'unsigned long' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55cf2bca6b98 <col:3, col:62> 'click_aliasable_uint64_t *' reinterpret_cast<click_aliasable_uint64_t *> <BitCast>
|     |   `-BinaryOperator 0x55cf2bca6b38 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55cf2bca6b08 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55cf2bca6ab8 <col:48, col:57> 'char [48]' lvalue ->c 0x55cf2bc96b00
|     |     |   `-CXXMemberCallExpr 0x55cf2bca6a98 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55cf2bca6a68 <col:48> '<bound member function type>' ->xanno 0x55cf2bc8bde8
|     |     |       `-CXXThisExpr 0x55cf2bca6a58 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55cf2bca6b20 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55cf2bca6ae8 <col:61> 'int' lvalue ParmVar 0x55cf2bc8f928 'i' 'int'
|     `-ImplicitCastExpr 0x55cf2bca6c00 <col:66> 'uint64_t':'unsigned long' <LValueToRValue>
|       `-DeclRefExpr 0x55cf2bca6be0 <col:66> 'uint64_t':'unsigned long' lvalue ParmVar 0x55cf2bc8f9a0 'x' 'uint64_t':'unsigned long'
|-CXXMethodDecl 0x55cf2bc8fc50 <line:614:5, line:620:5> line:614:11 anno_ptr 'void *(int) const'
| |-ParmVarDecl 0x55cf2bc8fb80 <col:20, col:24> col:24 used i 'int'
| `-CompoundStmt 0x55cf2bca74a8 <col:33, line:620:5>
|   |-ParenExpr 0x55cf2bca7220 <line:615:2, col:220> 'void'
|   | `-ConditionalOperator 0x55cf2bca71f0 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x55cf2bca6e40 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55cf2bca6e10 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55cf2bca6cb0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55cf2bca6c98 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55cf2bca6c58 <col:23> 'int' lvalue ParmVar 0x55cf2bc8fb80 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55cf2bca6c78 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55cf2bca6df0 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x55cf2bca6dd8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55cf2bca6cd0 <col:33> 'int' lvalue ParmVar 0x55cf2bc8fb80 'i' 'int'
|   |   |     `-BinaryOperator 0x55cf2bca6db8 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55cf2bca6da0 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55cf2bca6cf0 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55cf2bc8c030 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x55cf2bca6d78 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x55cf2bca6d60 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x55cf2bca6d28 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x55cf2bca6ea0 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55cf2bca6e80 <col:79> 'int' 0
|   |   `-CallExpr 0x55cf2bca7150 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x55cf2bca7138 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55cf2bca7118 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55cf2b7f8810 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55cf2bca7190 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55cf2bca6f88 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x55cf2bca71a8 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55cf2bca6fd0 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55cf2bca71c0 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55cf2bca7008 <col:181> 'int' 615
|   |     `-ImplicitCastExpr 0x55cf2bca71d8 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55cf2bca7100 <col:186, col:200> 'const char [34]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55cf2bca70e8 <col:200> 'const char [34]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55cf2bca70a8 <col:200> 'const char [34]' lvalue "void *Packet::anno_ptr(int) const"
|   `-ReturnStmt 0x55cf2bca7498 <line:619:2, col:81>
|     `-ImplicitCastExpr 0x55cf2bca7480 <col:9, col:81> 'click_aliasable_void_pointer_t':'void *' <LValueToRValue>
|       `-UnaryOperator 0x55cf2bca7468 <col:9, col:81> 'const click_aliasable_void_pointer_t':'void *const' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55cf2bca7438 <col:10, col:81> 'const click_aliasable_void_pointer_t *' reinterpret_cast<const click_aliasable_void_pointer_t *> <BitCast>
|           `-BinaryOperator 0x55cf2bca73b0 <col:67, col:80> 'const char *' '+'
|             |-ImplicitCastExpr 0x55cf2bca7380 <col:67, col:76> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55cf2bca7330 <col:67, col:76> 'char const[48]' lvalue ->c 0x55cf2bc96b00
|             |   `-CXXMemberCallExpr 0x55cf2bca7310 <col:67, col:73> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55cf2bca72e0 <col:67> '<bound member function type>' ->xanno 0x55cf2bc8bc48
|             |       `-CXXThisExpr 0x55cf2bca72d0 <col:67> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55cf2bca7398 <col:80> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55cf2bca7360 <col:80> 'int' lvalue ParmVar 0x55cf2bc8fb80 'i' 'int'
|-CXXMethodDecl 0x55cf2bc8fe68 <line:629:5, line:635:5> line:629:10 set_anno_ptr 'void (int, const void *)'
| |-ParmVarDecl 0x55cf2bc8fd10 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55cf2bc8fd90 <col:30, col:42> col:42 used x 'const void *'
| `-CompoundStmt 0x55cf2bca7cd0 <col:45, line:635:5>
|   |-ParenExpr 0x55cf2bca7a18 <line:630:2, col:220> 'void'
|   | `-ConditionalOperator 0x55cf2bca79e8 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x55cf2bca76b0 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55cf2bca7680 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55cf2bca7520 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55cf2bca7508 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55cf2bca74c8 <col:23> 'int' lvalue ParmVar 0x55cf2bc8fd10 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55cf2bca74e8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55cf2bca7660 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x55cf2bca7648 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55cf2bca7540 <col:33> 'int' lvalue ParmVar 0x55cf2bc8fd10 'i' 'int'
|   |   |     `-BinaryOperator 0x55cf2bca7628 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55cf2bca7610 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55cf2bca7560 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55cf2bc8c030 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x55cf2bca75e8 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x55cf2bca75d0 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x55cf2bca7598 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x55cf2bca7710 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55cf2bca76f0 <col:79> 'int' 0
|   |   `-CallExpr 0x55cf2bca7948 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x55cf2bca7930 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55cf2bca7910 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55cf2b7f8810 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55cf2bca7988 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55cf2bca7780 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x55cf2bca79a0 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55cf2bca77c8 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55cf2bca79b8 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55cf2bca7800 <col:181> 'int' 630
|   |     `-ImplicitCastExpr 0x55cf2bca79d0 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55cf2bca78f8 <col:186, col:200> 'const char [45]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55cf2bca78e0 <col:200> 'const char [45]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55cf2bca7898 <col:200> 'const char [45]' lvalue "void Packet::set_anno_ptr(int, const void *)"
|   `-BinaryOperator 0x55cf2bca7cb0 <line:634:2, col:92> 'click_aliasable_void_pointer_t':'void *' lvalue '='
|     |-UnaryOperator 0x55cf2bca7c18 <col:2, col:68> 'click_aliasable_void_pointer_t':'void *' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55cf2bca7be8 <col:3, col:68> 'click_aliasable_void_pointer_t *' reinterpret_cast<click_aliasable_void_pointer_t *> <BitCast>
|     |   `-BinaryOperator 0x55cf2bca7b88 <col:54, col:67> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55cf2bca7b58 <col:54, col:63> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55cf2bca7b08 <col:54, col:63> 'char [48]' lvalue ->c 0x55cf2bc96b00
|     |     |   `-CXXMemberCallExpr 0x55cf2bca7ae8 <col:54, col:60> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55cf2bca7ab8 <col:54> '<bound member function type>' ->xanno 0x55cf2bc8bde8
|     |     |       `-CXXThisExpr 0x55cf2bca7aa8 <col:54> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55cf2bca7b70 <col:67> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55cf2bca7b38 <col:67> 'int' lvalue ParmVar 0x55cf2bc8fd10 'i' 'int'
|     `-CXXConstCastExpr 0x55cf2bca7c80 <col:72, col:92> 'void *' const_cast<void *> <NoOp>
|       `-ImplicitCastExpr 0x55cf2bca7c68 <col:91> 'const void *' <LValueToRValue> part_of_explicit_cast
|         `-DeclRefExpr 0x55cf2bca7c30 <col:91> 'const void *' lvalue ParmVar 0x55cf2bc8fd90 'x' 'const void *'
|-CXXMethodDecl 0x55cf2bc8ff38 <line:638:5, line:640:5> line:638:20 data_packet 'Packet *()' inline
| `-CompoundStmt 0x55cf2bca7d58 <col:34, line:640:5>
|   `-ReturnStmt 0x55cf2bca7d48 <line:639:9, col:16>
|     `-ImplicitCastExpr 0x55cf2bca7d30 <col:16> 'Packet *' <LValueToRValue>
|       `-MemberExpr 0x55cf2bca7d00 <col:16> 'Packet *' lvalue ->_data_packet 0x55cf2bc976b8
|         `-CXXThisExpr 0x55cf2bca7cf0 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x55cf2bc90078 <line:643:5, col:50> col:17 used clear_annotations 'void (bool)' inline
| `-ParmVarDecl 0x55cf2bc8ffe8 <col:35, col:46> col:40 all 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55cf2bca0e18 <col:46> 'bool' true
|-CXXMethodDecl 0x55cf2bc901f8 <line:644:5, col:48> col:17 copy_annotations 'void (const Packet *)' inline
| `-ParmVarDecl 0x55cf2bc90130 <col:34, col:47> col:48 'const Packet *'
|-EnumDecl 0x55cf2bc902a0 <line:648:5, line:660:5> line:648:5
| |-DeprecatedAttr 0x55cf2bc90a50 <line:660:22> "" ""
| |-EnumConstantDecl 0x55cf2bc903a0 <line:649:2, col:21> col:2 DEFAULT_HEADROOM 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55cf2bc90ac0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf2bc90380 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 28
| |     `-DeclRefExpr 0x55cf2bc90360 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x55cf2bc85500 'default_headroom' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x55cf2bc90430 <line:650:2, col:22> col:2 MIN_BUFFER_LENGTH 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55cf2bc90ad8 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf2bc90410 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 64
| |     `-DeclRefExpr 0x55cf2bc903f0 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x55cf2bc85590 'min_buffer_length' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x55cf2bc904c0 <line:651:2, col:21> col:2 referenced addr_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55cf2bc90af0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf2bc904a0 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x55cf2bc90480 <col:21> 'int' 0
| |-EnumConstantDecl 0x55cf2bc90550 <line:652:2, col:19> col:2 referenced addr_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55cf2bc90b08 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf2bc90530 <col:19> 'int' Int: 16
| |     `-IntegerLiteral 0x55cf2bc90510 <col:19> 'int' 16
| |-EnumConstantDecl 0x55cf2bc905e0 <line:653:2, col:21> col:2 referenced user_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55cf2bc90b20 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf2bc905c0 <col:21> 'int' Int: 16
| |     `-IntegerLiteral 0x55cf2bc905a0 <col:21> 'int' 16
| |-EnumConstantDecl 0x55cf2bc90670 <line:654:2, col:19> col:2 referenced user_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55cf2bc90b38 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf2bc90650 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x55cf2bc90630 <col:19> 'int' 32
| |-EnumConstantDecl 0x55cf2bc90700 <line:655:2, col:19> col:2 ADDR_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55cf2bc90b50 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf2bc906e0 <col:19> 'int' Int: 16
| |     `-DeclRefExpr 0x55cf2bc906c0 <col:19> 'int' EnumConstant 0x55cf2bc90550 'addr_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x55cf2bc90790 <line:656:2, col:19> col:2 referenced USER_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55cf2bc90b68 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf2bc90770 <col:19> 'int' Int: 32
| |     `-DeclRefExpr 0x55cf2bc90750 <col:19> 'int' EnumConstant 0x55cf2bc90670 'user_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x55cf2bc90860 <line:657:2, col:40> col:2 USER_ANNO_U16_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55cf2bc90b80 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf2bc90840 <col:23, col:40> 'int' Int: 16
| |     `-BinaryOperator 0x55cf2bc90820 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x55cf2bc907e0 <col:23> 'int' EnumConstant 0x55cf2bc90790 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x55cf2bc90800 <col:40> 'int' 2
| |-EnumConstantDecl 0x55cf2bc90930 <line:658:2, col:40> col:2 USER_ANNO_U32_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55cf2bc90b98 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf2bc90910 <col:23, col:40> 'int' Int: 8
| |     `-BinaryOperator 0x55cf2bc908f0 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x55cf2bc908b0 <col:23> 'int' EnumConstant 0x55cf2bc90790 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x55cf2bc908d0 <col:40> 'int' 4
| `-EnumConstantDecl 0x55cf2bc90a00 <line:659:2, col:40> col:2 USER_ANNO_U64_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|   `-ImplicitCastExpr 0x55cf2bc90bb0 <col:23, col:40> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55cf2bc909e0 <col:23, col:40> 'int' Int: 4
|       `-BinaryOperator 0x55cf2bc909c0 <col:23, col:40> 'int' '/'
|         |-DeclRefExpr 0x55cf2bc90980 <col:23> 'int' EnumConstant 0x55cf2bc90790 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|         `-IntegerLiteral 0x55cf2bc909a0 <col:40> 'int' 8
|-CXXMethodDecl 0x55cf2bc90bf0 <line:661:5, col:79> col:33 buffer_data 'const unsigned char *() const' inline
| `-DeprecatedAttr 0x55cf2bc90c90 <col:68> "" ""
|-CXXMethodDecl 0x55cf2bc90d28 <line:662:5, col:56> col:18 addr_anno 'void *()' inline
| `-DeprecatedAttr 0x55cf2bc90dc8 <col:45> "" ""
|-CXXMethodDecl 0x55cf2bc90e60 <line:663:5, col:68> col:24 addr_anno 'const void *() const' inline
| `-DeprecatedAttr 0x55cf2bc90f00 <col:57> "" ""
|-CXXMethodDecl 0x55cf2bc90f98 <line:664:5, col:56> col:18 user_anno 'void *()' inline
| `-DeprecatedAttr 0x55cf2bc91038 <col:45> "" ""
|-CXXMethodDecl 0x55cf2bc910d0 <line:665:5, col:68> col:24 user_anno 'const void *() const' inline
| `-DeprecatedAttr 0x55cf2bc91170 <col:57> "" ""
|-CXXMethodDecl 0x55cf2bc91200 <line:666:5, col:62> col:21 user_anno_u8 'uint8_t *()' inline
| `-DeprecatedAttr 0x55cf2bc912a0 <col:51> "" ""
|-CXXMethodDecl 0x55cf2bc91330 <line:667:5, col:74> col:27 user_anno_u8 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x55cf2bc913d0 <col:63> "" ""
|-CXXMethodDecl 0x55cf2bc91460 <line:668:5, col:64> col:22 user_anno_u32 'uint32_t *()' inline
| `-DeprecatedAttr 0x55cf2bc91500 <col:53> "" ""
|-CXXMethodDecl 0x55cf2bc91590 <line:669:5, col:76> col:28 user_anno_u32 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x55cf2bc91630 <col:65> "" ""
|-CXXMethodDecl 0x55cf2bc91748 <line:670:5, col:72> col:20 user_anno_u8 'uint8_t (int) const' inline
| |-ParmVarDecl 0x55cf2bc916b8 <col:33, col:37> col:37 i 'int'
| `-DeprecatedAttr 0x55cf2bc917f0 <col:61> "" ""
|-CXXMethodDecl 0x55cf2bc91988 <line:671:5, col:78> col:17 set_user_anno_u8 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x55cf2bc91878 <col:34, col:38> col:38 i 'int'
| |-ParmVarDecl 0x55cf2bc918f0 <col:41, col:49> col:49 v 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x55cf2bc91a38 <col:67> "" ""
|-CXXMethodDecl 0x55cf2bc91b50 <line:672:5, col:74> col:21 user_anno_u16 'uint16_t (int) const' inline
| |-ParmVarDecl 0x55cf2bc91ac0 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x55cf2bc91bf8 <col:63> "" ""
|-CXXMethodDecl 0x55cf2bc91d90 <line:673:5, col:80> col:17 set_user_anno_u16 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x55cf2bc91c80 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55cf2bc91cf8 <col:42, col:51> col:51 v 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x55cf2bc91e40 <col:69> "" ""
|-CXXMethodDecl 0x55cf2bc91f58 <line:674:5, col:74> col:21 user_anno_u32 'uint32_t (int) const' inline
| |-ParmVarDecl 0x55cf2bc91ec8 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x55cf2bc92000 <col:63> "" ""
|-CXXMethodDecl 0x55cf2bc946d8 <line:675:5, col:80> col:17 set_user_anno_u32 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x55cf2bc945c8 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55cf2bc94640 <col:42, col:51> col:51 v 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55cf2bc94788 <col:69> "" ""
|-CXXMethodDecl 0x55cf2bc948a0 <line:676:5, col:73> col:20 user_anno_s32 'int32_t (int) const' inline
| |-ParmVarDecl 0x55cf2bc94810 <col:34, col:38> col:38 i 'int'
| `-DeprecatedAttr 0x55cf2bc94948 <col:62> "" ""
|-CXXMethodDecl 0x55cf2bc94ae0 <line:677:5, col:79> col:17 set_user_anno_s32 'void (int, int32_t)' inline
| |-ParmVarDecl 0x55cf2bc949d0 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55cf2bc94a48 <col:42, col:50> col:50 v 'int32_t':'int'
| `-DeprecatedAttr 0x55cf2bc94b90 <col:68> "" ""
|-CXXMethodDecl 0x55cf2bc94ca8 <line:679:5, col:74> col:21 user_anno_u64 'uint64_t (int) const' inline
| |-ParmVarDecl 0x55cf2bc94c18 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x55cf2bc94d50 <col:63> "" ""
|-CXXMethodDecl 0x55cf2bc94ee8 <line:680:5, col:80> col:17 set_user_anno_u64 'void (int, uint64_t)' inline
| |-ParmVarDecl 0x55cf2bc94dd8 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55cf2bc94e50 <col:42, col:51> col:51 v 'uint64_t':'unsigned long'
| `-DeprecatedAttr 0x55cf2bc94f98 <col:69> "" ""
|-CXXMethodDecl 0x55cf2bc95028 <line:682:5, col:75> col:27 all_user_anno 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x55cf2bc950c8 <col:64> "" ""
|-CXXMethodDecl 0x55cf2bc95158 <line:683:5, col:63> col:21 all_user_anno 'uint8_t *()' inline
| `-DeprecatedAttr 0x55cf2bc951f8 <col:52> "" ""
|-CXXMethodDecl 0x55cf2bc95288 <line:684:5, col:78> col:28 all_user_anno_u 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x55cf2bc95328 <col:67> "" ""
|-CXXMethodDecl 0x55cf2bc953b8 <line:685:5, col:66> col:22 all_user_anno_u 'uint32_t *()' inline
| `-DeprecatedAttr 0x55cf2bc95458 <col:55> "" ""
|-CXXMethodDecl 0x55cf2bc95570 <line:686:5, col:69> col:20 user_anno_c 'uint8_t (int) const' inline
| |-ParmVarDecl 0x55cf2bc954e0 <col:32> col:35 'int'
| `-DeprecatedAttr 0x55cf2bc95618 <col:58> "" ""
|-CXXMethodDecl 0x55cf2bc957b0 <line:687:5, col:73> col:17 set_user_anno_c 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x55cf2bc956a0 <col:33> col:36 'int'
| |-ParmVarDecl 0x55cf2bc95718 <col:38> col:45 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x55cf2bc95860 <col:62> "" ""
|-CXXMethodDecl 0x55cf2bc95978 <line:688:5, col:69> col:20 user_anno_s 'int16_t (int) const' inline
| |-ParmVarDecl 0x55cf2bc958e8 <col:32> col:35 'int'
| `-DeprecatedAttr 0x55cf2bc95a20 <col:58> "" ""
|-CXXMethodDecl 0x55cf2bc95bb8 <line:689:5, col:73> col:17 set_user_anno_s 'void (int, int16_t)' inline
| |-ParmVarDecl 0x55cf2bc95aa8 <col:33> col:36 'int'
| |-ParmVarDecl 0x55cf2bc95b20 <col:38> col:45 'int16_t':'short'
| `-DeprecatedAttr 0x55cf2bc95c68 <col:62> "" ""
|-CXXMethodDecl 0x55cf2bc95d80 <line:690:5, col:71> col:21 user_anno_us 'uint16_t (int) const' inline
| |-ParmVarDecl 0x55cf2bc95cf0 <col:34> col:37 'int'
| `-DeprecatedAttr 0x55cf2bc95e28 <col:60> "" ""
|-CXXMethodDecl 0x55cf2bc95fc0 <line:691:5, col:75> col:17 set_user_anno_us 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x55cf2bc95eb0 <col:34> col:37 'int'
| |-ParmVarDecl 0x55cf2bc95f28 <col:39> col:47 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x55cf2bc96070 <col:64> "" ""
|-CXXMethodDecl 0x55cf2bc96188 <line:692:5, col:69> col:20 user_anno_i 'int32_t (int) const' inline
| |-ParmVarDecl 0x55cf2bc960f8 <col:32> col:35 'int'
| `-DeprecatedAttr 0x55cf2bc96230 <col:58> "" ""
|-CXXMethodDecl 0x55cf2bc963c8 <line:693:5, col:73> col:17 set_user_anno_i 'void (int, int32_t)' inline
| |-ParmVarDecl 0x55cf2bc962b8 <col:33> col:36 'int'
| |-ParmVarDecl 0x55cf2bc96330 <col:38> col:45 'int32_t':'int'
| `-DeprecatedAttr 0x55cf2bc96478 <col:62> "" ""
|-CXXMethodDecl 0x55cf2bc96590 <line:694:5, col:70> col:21 user_anno_u 'uint32_t (int) const' inline
| |-ParmVarDecl 0x55cf2bc96500 <col:33> col:36 'int'
| `-DeprecatedAttr 0x55cf2bc96638 <col:59> "" ""
|-CXXMethodDecl 0x55cf2bc967d0 <line:695:5, col:74> col:17 set_user_anno_u 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x55cf2bc966c0 <col:33> col:36 'int'
| |-ParmVarDecl 0x55cf2bc96738 <col:38> col:46 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55cf2bc96880 <col:63> "" ""
|-AccessSpecDecl 0x55cf2bc968f0 <line:698:3, col:10> col:3 private
|-CXXRecordDecl 0x55cf2bc96918 prev 0x55cf2bc8bb20 <line:702:5, line:711:5> line:702:11 referenced union Anno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55cf2bc96a10 <col:5, col:11> col:11 implicit union Anno
| |-FieldDecl 0x55cf2bc96b00 <line:703:2, col:18> col:7 referenced c 'char [48]'
| |-FieldDecl 0x55cf2bc96c28 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
| |-FieldDecl 0x55cf2bc96da8 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
| |-FieldDecl 0x55cf2bc96f28 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
| |-FieldDecl 0x55cf2bc970a8 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
| |-CXXConstructorDecl 0x55cf2bca7ed8 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55cf2bca8748 <col:11>
| |-CXXDestructorDecl 0x55cf2bca7fb0 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
| |-CXXConstructorDecl 0x55cf2bca80e8 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x55cf2bca80e8
| | `-ParmVarDecl 0x55cf2bca81f8 <col:11> col:11 'const Packet::Anno &'
| |-CXXConstructorDecl 0x55cf2bca8298 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55cf2bca8298
| | `-ParmVarDecl 0x55cf2bca83a8 <col:11> col:11 'Packet::Anno &&'
| |-CXXMethodDecl 0x55cf2bcab168 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55cf2bcab278 <col:11> col:11 'const Packet::Anno &'
| | `-CompoundStmt 0x55cf2bcab4f8 <col:11>
| |   `-ReturnStmt 0x55cf2bcab4e8 <col:11>
| |     `-UnaryOperator 0x55cf2bcab4d0 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x55cf2bcab4c0 <col:11> 'Packet::Anno *' this
| `-CXXMethodDecl 0x55cf2bcab2e8 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55cf2bcab2e8
|   `-ParmVarDecl 0x55cf2bcab3f8 <col:11> col:11 'Packet::Anno &&'
|-CXXRecordDecl 0x55cf2bc97110 <line:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55cf2bc97228 <col:5, col:12> col:12 implicit struct AllAnno
| |-FieldDecl 0x55cf2bc972c8 <line:717:2, col:7> col:7 cb 'Packet::Anno'
| |-FieldDecl 0x55cf2bc97330 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
| |-FieldDecl 0x55cf2bc97398 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
| |-FieldDecl 0x55cf2bc97400 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
| |-FieldDecl 0x55cf2bc97460 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
| |-FieldDecl 0x55cf2bc97520 <line:722:2, col:34> col:7 timestamp 'char [8]'
| |-FieldDecl 0x55cf2bc97580 <line:723:2, col:10> col:10 referenced next 'Packet *'
| |-FieldDecl 0x55cf2bc975e0 <line:724:2, col:10> col:10 referenced prev 'Packet *'
| |-CXXConstructorDecl 0x55cf2bca7de8 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| | |-CXXCtorInitializer Field 0x55cf2bc972c8 'cb' 'Packet::Anno'
| | | `-CXXConstructExpr 0x55cf2bca8758 <col:12> 'Packet::Anno' 'void () noexcept'
| | `-CompoundStmt 0x55cf2bca87b0 <col:12>
| |-CXXConstructorDecl 0x55cf2bca8418 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x55cf2bca8418
| | `-ParmVarDecl 0x55cf2bca8528 <col:12> col:12 'const Packet::AllAnno &'
| |-CXXConstructorDecl 0x55cf2bca85c8 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x55cf2bca85c8
| | `-ParmVarDecl 0x55cf2bca86d8 <col:12> col:12 'Packet::AllAnno &&'
| `-CXXDestructorDecl 0x55cf2bcaa850 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial
|-FieldDecl 0x55cf2bc97658 <line:731:5, col:21> col:21 referenced _use_count 'atomic_uint32_t'
|-FieldDecl 0x55cf2bc976b8 <line:732:5, col:13> col:13 referenced _data_packet 'Packet *'
|-FieldDecl 0x55cf2bc97720 <line:734:5, col:20> col:20 referenced _head 'unsigned char *'
|-FieldDecl 0x55cf2bc97788 <line:735:5, col:20> col:20 referenced _data 'unsigned char *'
|-FieldDecl 0x55cf2bc977f0 <line:736:5, col:20> col:20 referenced _tail 'unsigned char *'
|-FieldDecl 0x55cf2bc97858 <line:737:5, col:20> col:20 referenced _end 'unsigned char *'
|-FieldDecl 0x55cf2bc978b8 <line:741:5, col:13> col:13 referenced _aa 'Packet::AllAnno'
|-FieldDecl 0x55cf2bc97918 <line:746:5, col:28> col:28 referenced _destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-FieldDecl 0x55cf2bc97980 <line:747:5, col:11> col:11 referenced _destructor_argument 'void *'
|-CXXConstructorDecl 0x55cf2bc97a08 <line:751:5, line:755:5> line:751:12 used Packet 'void ()' inline
| |-CXXCtorInitializer Field 0x55cf2bc97658 '_use_count' 'atomic_uint32_t'
| | `-CXXConstructExpr 0x55cf2bca7d80 <col:12> 'atomic_uint32_t' 'void () noexcept'
| |-CXXCtorInitializer Field 0x55cf2bc978b8 '_aa' 'Packet::AllAnno'
| | `-CXXConstructExpr 0x55cf2bca87c0 <col:12> 'Packet::AllAnno' 'void () noexcept'
| `-CompoundStmt 0x55cf2bca8820 <col:21, line:755:5>
|-CXXConstructorDecl 0x55cf2bc97ba8 <line:756:5, col:27> col:5 Packet 'void (const Packet &)'
| `-ParmVarDecl 0x55cf2bc97ae8 <col:12, col:26> col:26 x 'const Packet &'
|-CXXDestructorDecl 0x55cf2bc97ca0 <line:757:5, col:13> col:5 used ~Packet 'void () noexcept'
|-CXXMethodDecl 0x55cf2bc97e88 <line:758:5, col:38> col:13 operator= 'Packet &(const Packet &)'
| `-ParmVarDecl 0x55cf2bc97d90 <col:23, col:37> col:37 x 'const Packet &'
|-CXXMethodDecl 0x55cf2bc98158 <line:761:5, col:74> col:10 alloc_data 'bool (uint32_t, uint32_t, uint32_t)'
| |-ParmVarDecl 0x55cf2bc97f40 <col:21, col:30> col:30 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55cf2bc97fb8 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55cf2bc98030 <col:57, col:66> col:66 tailroom 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55cf2bc98378 <line:768:5, col:95> col:17 shift_header_annotations 'void (const unsigned char *, int32_t)' inline
| |-ParmVarDecl 0x55cf2bc98228 <col:42, col:63> col:63 old_head 'const unsigned char *'
| `-ParmVarDecl 0x55cf2bc982a0 <col:73, col:81> col:81 extra_headroom 'int32_t':'int'
|-CXXMethodDecl 0x55cf2bca0958 <line:769:5, col:109> col:21 expensive_uniqueify 'WritablePacket *(int32_t, int32_t, bool)'
| |-ParmVarDecl 0x55cf2bc98438 <col:41, col:49> col:49 extra_headroom 'int32_t':'int'
| |-ParmVarDecl 0x55cf2bc984b0 <col:65, col:73> col:73 extra_tailroom 'int32_t':'int'
| `-ParmVarDecl 0x55cf2bc98528 <col:89, col:94> col:94 free_on_failure 'bool'
|-CXXMethodDecl 0x55cf2bca0ab0 <line:770:5, col:51> col:21 used expensive_push 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x55cf2bca0a20 <col:36, col:45> col:45 nbytes 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55cf2bca0bf8 <line:771:5, col:50> col:21 used expensive_put 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x55cf2bca0b68 <col:35, col:44> col:44 nbytes 'uint32_t':'unsigned int'
`-FriendDecl 0x55cf2bca0cf0 <line:773:5, col:18> col:12 'class WritablePacket':'WritablePacket'

Layout: <CGRecordLayout
  LLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  NonVirtualBaseLLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct TaskLink
         0 |   struct TaskLink * _prev
         8 |   struct TaskLink * _next
        16 |   unsigned int _pass
           | [sizeof=24, dsize=20, align=8,
           |  nvsize=20, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55cf2bd9e6a0 <../dummy_inc/click/task.hh:31:1, line:47:1> line:31:8 referenced struct TaskLink definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55cf2bd9e7b8 <col:1, col:8> col:8 implicit referenced struct TaskLink
|-FieldDecl 0x55cf2bd9e888 <line:33:5, col:15> col:15 referenced _prev 'TaskLink *'
|-FieldDecl 0x55cf2bd9e8e8 <line:34:5, col:15> col:15 referenced _next 'TaskLink *'
|-FieldDecl 0x55cf2bd9e950 <line:37:5, col:14> col:14 referenced _pass 'unsigned int'
|-CXXConstructorDecl 0x55cf2bd9e9d8 <line:39:5, line:46:5> line:39:5 used TaskLink 'void ()'
| `-CompoundStmt 0x55cf2bd9ec40 <col:16, line:46:5>
|   |-BinaryOperator 0x55cf2bd9eb88 <line:41:9, col:25> 'TaskLink *' lvalue '='
|   | |-MemberExpr 0x55cf2bd9eaa8 <col:9> 'TaskLink *' lvalue ->_prev 0x55cf2bd9e888
|   | | `-CXXThisExpr 0x55cf2bd9ea98 <col:9> 'TaskLink *' implicit this
|   | `-ImplicitCastExpr 0x55cf2bd9eb70 <col:17, col:25> 'TaskLink *' <LValueToRValue>
|   |   `-BinaryOperator 0x55cf2bd9eb50 <col:17, col:25> 'TaskLink *' lvalue '='
|   |     |-MemberExpr 0x55cf2bd9eae8 <col:17> 'TaskLink *' lvalue ->_next 0x55cf2bd9e8e8
|   |     | `-CXXThisExpr 0x55cf2bd9ead8 <col:17> 'TaskLink *' implicit this
|   |     `-ImplicitCastExpr 0x55cf2bd9eb38 <col:25> 'TaskLink *' <NullToPointer>
|   |       `-IntegerLiteral 0x55cf2bd9eb18 <col:25> 'int' 0
|   `-BinaryOperator 0x55cf2bd9ec20 <line:44:9, col:17> 'unsigned int' lvalue '='
|     |-MemberExpr 0x55cf2bd9ebb8 <col:9> 'unsigned int' lvalue ->_pass 0x55cf2bd9e950
|     | `-CXXThisExpr 0x55cf2bd9eba8 <col:9> 'TaskLink *' implicit this
|     `-ImplicitCastExpr 0x55cf2bd9ec08 <col:17> 'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x55cf2bd9ebe8 <col:17> 'int' 0
|-CXXConstructorDecl 0x55cf2be072c8 <line:31:8> col:8 implicit constexpr TaskLink 'void (const TaskLink &)' inline default trivial noexcept-unevaluated 0x55cf2be072c8
| `-ParmVarDecl 0x55cf2be073d8 <col:8> col:8 'const TaskLink &'
|-CXXConstructorDecl 0x55cf2be07478 <col:8> col:8 implicit constexpr TaskLink 'void (TaskLink &&)' inline default trivial noexcept-unevaluated 0x55cf2be07478
| `-ParmVarDecl 0x55cf2be07588 <col:8> col:8 'TaskLink &&'
|-CXXDestructorDecl 0x55cf2be07778 <col:8> col:8 implicit ~TaskLink 'void ()' inline default trivial noexcept-unevaluated 0x55cf2be07778
|-CXXMethodDecl 0x55cf2be07f78 <col:8> col:8 implicit operator= 'TaskLink &(const TaskLink &)' inline default trivial noexcept-unevaluated 0x55cf2be07f78
| `-ParmVarDecl 0x55cf2be08088 <col:8> col:8 'const TaskLink &'
`-CXXMethodDecl 0x55cf2be080f8 <col:8> col:8 implicit operator= 'TaskLink &(TaskLink &&)' inline default trivial noexcept-unevaluated 0x55cf2be080f8
  `-ParmVarDecl 0x55cf2be08208 <col:8> col:8 'TaskLink &&'

Layout: <CGRecordLayout
  LLVMType:%struct.TaskLink = type <{ %struct.TaskLink*, %struct.TaskLink*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%struct.TaskLink.base = type <{ %struct.TaskLink*, %struct.TaskLink*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9)
         0 |   int16_t home_thread_id
         2 |   uint8_t is_scheduled
         3 |   uint8_t is_strong_unscheduled
           | [sizeof=4, dsize=4, align=2,
           |  nvsize=4, nvalign=2]

*** Dumping AST Record Layout
         0 | union Task::Status
         0 |   struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9) 
         0 |     int16_t home_thread_id
         2 |     uint8_t is_scheduled
         3 |     uint8_t is_strong_unscheduled
         0 |   uint32_t status
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Task::Pending
         0 |   class Task * t
         0 |   uintptr_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Task
         0 |   struct TaskLink (base)
         0 |     struct TaskLink * _prev
         8 |     struct TaskLink * _next
        16 |     unsigned int _pass
        20 |   unsigned int _stride
        24 |   int _tickets
        28 |   union Task::Status _status
        28 |     struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9) 
        28 |       int16_t home_thread_id
        30 |       uint8_t is_scheduled
        31 |       uint8_t is_strong_unscheduled
        28 |     uint32_t status
        32 |   TaskCallback _hook
        40 |   void * _thunk
        48 |   class RouterThread * _thread
        56 |   class Element * _owner
        64 |   union Task::Pending _pending_nextptr
        64 |     class Task * t
        64 |     uintptr_t x
           | [sizeof=72, dsize=72, align=8,
           |  nvsize=72, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55cf2bda11a8 <../dummy_inc/click/task.hh:315:9, line:319:9> line:315:9 struct definition
|-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x55cf2bda12d8 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
|-FieldDecl 0x55cf2bda1338 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
|-FieldDecl 0x55cf2bda1398 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
|-CXXConstructorDecl 0x55cf2be114f8 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
|-CXXDestructorDecl 0x55cf2be115d0 <col:9> col:9 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x55cf2be115d0
|-CXXConstructorDecl 0x55cf2be11888 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x55cf2be11888
| `-ParmVarDecl 0x55cf2be11998 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
`-CXXConstructorDecl 0x55cf2be11a38 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x55cf2be11a38
  `-ParmVarDecl 0x55cf2be11b48 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'

Layout: <CGRecordLayout
  LLVMType:%struct.anon = type { i16, i8, i8 }
  NonVirtualBaseLLVMType:%struct.anon = type { i16, i8, i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55cf2bda1000 <../dummy_inc/click/task.hh:314:5, line:321:5> line:314:11 union Status definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x55cf2bda1118 <col:5, col:11> col:11 implicit union Status
|-CXXRecordDecl 0x55cf2bda11a8 <line:315:9, line:319:9> line:315:9 struct definition
| |-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x55cf2bda12d8 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
| |-FieldDecl 0x55cf2bda1338 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
| |-FieldDecl 0x55cf2bda1398 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
| |-CXXConstructorDecl 0x55cf2be114f8 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
| |-CXXDestructorDecl 0x55cf2be115d0 <col:9> col:9 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x55cf2be115d0
| |-CXXConstructorDecl 0x55cf2be11888 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x55cf2be11888
| | `-ParmVarDecl 0x55cf2be11998 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
| `-CXXConstructorDecl 0x55cf2be11a38 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x55cf2be11a38
|   `-ParmVarDecl 0x55cf2be11b48 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'
|-FieldDecl 0x55cf2bda1458 <col:9> col:9 implicit referenced 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
|-IndirectFieldDecl 0x55cf2bda14b8 <line:316:21> col:21 implicit home_thread_id 'int16_t':'short'
| |-Field 0x55cf2bda1458 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x55cf2bda12d8 'home_thread_id' 'int16_t':'short'
|-IndirectFieldDecl 0x55cf2bda1510 <line:317:21> col:21 implicit is_scheduled 'uint8_t':'unsigned char'
| |-Field 0x55cf2bda1458 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x55cf2bda1338 'is_scheduled' 'uint8_t':'unsigned char'
|-IndirectFieldDecl 0x55cf2bda1568 <line:318:21> col:21 implicit is_strong_unscheduled 'uint8_t':'unsigned char'
| |-Field 0x55cf2bda1458 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x55cf2bda1398 'is_strong_unscheduled' 'uint8_t':'unsigned char'
|-FieldDecl 0x55cf2bda15c0 <line:320:9, col:18> col:18 status 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55cf2be11400 <line:314:11> col:11 implicit used Status 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55cf2be11d68 <col:11>
|-CXXConstructorDecl 0x55cf2be116d8 <col:11> col:11 implicit constexpr Status 'void (const Task::Status &)' inline default trivial noexcept-unevaluated 0x55cf2be116d8
| `-ParmVarDecl 0x55cf2be117e8 <col:11> col:11 'const Task::Status &'
`-CXXConstructorDecl 0x55cf2be11be8 <col:11> col:11 implicit constexpr Status 'void (Task::Status &&)' inline default trivial noexcept-unevaluated 0x55cf2be11be8
  `-ParmVarDecl 0x55cf2be11cf8 <col:11> col:11 'Task::Status &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Task::Status" = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class Vector<struct TimerSet::heap_element>
         0 |   class vector_memory<class sized_array_memory<16> > vm_
         0 |     vector_memory<class sized_array_memory<16> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class Timer *>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class SimpleSpinlock (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class TimerSet
         0 |   class Timestamp _timer_expiry
         0 |     union Timestamp::rep_t _t
         0 |       int64_t x
         8 |   unsigned int _max_timer_stride
        12 |   unsigned int _timer_stride
        16 |   unsigned int _timer_count
        24 |   class Vector<struct TimerSet::heap_element> _timer_heap
        24 |     class vector_memory<class sized_array_memory<16> > vm_
        24 |       vector_memory<class sized_array_memory<16> >::type * l_
        32 |       vector_memory::size_type n_
        36 |       vector_memory::size_type capacity_
        40 |   class Vector<class Timer *> _timer_runchunk
        40 |     class vector_memory<class sized_array_memory<8> > vm_
        40 |       vector_memory<class sized_array_memory<8> >::type * l_
        48 |       vector_memory::size_type n_
        52 |       vector_memory::size_type capacity_
        56 |   class SimpleSpinlock _timer_lock (empty)
        64 |   class Timestamp _timer_check
        64 |     union Timestamp::rep_t _t
        64 |       int64_t x
        72 |   uint32_t _timer_check_reports
           | [sizeof=80, dsize=76, align=8,
           |  nvsize=76, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct pollfd>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<24> >
         0 |   vector_memory<class sized_array_memory<24> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct SelectSet::SelectorInfo>
         0 |   class vector_memory<class sized_array_memory<24> > vm_
         0 |     vector_memory<class sized_array_memory<24> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class SelectSet
         0 |   int [2] _wake_pipe
         8 |   volatile _Bool _wake_pipe_pending
        16 |   class Vector<struct pollfd> _pollfds
        16 |     class vector_memory<class sized_array_memory<8> > vm_
        16 |       vector_memory<class sized_array_memory<8> >::type * l_
        24 |       vector_memory::size_type n_
        28 |       vector_memory::size_type capacity_
        32 |   class Vector<struct SelectSet::SelectorInfo> _selinfo
        32 |     class vector_memory<class sized_array_memory<24> > vm_
        32 |       vector_memory<class sized_array_memory<24> >::type * l_
        40 |       vector_memory::size_type n_
        44 |       vector_memory::size_type capacity_
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | class Spinlock (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class SpinlockIRQ (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class RouterThread
         0 |   struct TaskLink _task_link
         0 |     struct TaskLink * _prev
         8 |     struct TaskLink * _next
        16 |     unsigned int _pass
        24 |   volatile _Bool _stop_flag
        32 |   class TimerSet _timers
        32 |     class Timestamp _timer_expiry
        32 |       union Timestamp::rep_t _t
        32 |         int64_t x
        40 |     unsigned int _max_timer_stride
        44 |     unsigned int _timer_stride
        48 |     unsigned int _timer_count
        56 |     class Vector<struct TimerSet::heap_element> _timer_heap
        56 |       class vector_memory<class sized_array_memory<16> > vm_
        56 |         vector_memory<class sized_array_memory<16> >::type * l_
        64 |         vector_memory::size_type n_
        68 |         vector_memory::size_type capacity_
        72 |     class Vector<class Timer *> _timer_runchunk
        72 |       class vector_memory<class sized_array_memory<8> > vm_
        72 |         vector_memory<class sized_array_memory<8> >::type * l_
        80 |         vector_memory::size_type n_
        84 |         vector_memory::size_type capacity_
        88 |     class SimpleSpinlock _timer_lock (empty)
        96 |     class Timestamp _timer_check
        96 |       union Timestamp::rep_t _t
        96 |         int64_t x
       104 |     uint32_t _timer_check_reports
       112 |   class SelectSet _selects
       112 |     int [2] _wake_pipe
       120 |     volatile _Bool _wake_pipe_pending
       128 |     class Vector<struct pollfd> _pollfds
       128 |       class vector_memory<class sized_array_memory<8> > vm_
       128 |         vector_memory<class sized_array_memory<8> >::type * l_
       136 |         vector_memory::size_type n_
       140 |         vector_memory::size_type capacity_
       144 |     class Vector<struct SelectSet::SelectorInfo> _selinfo
       144 |       class vector_memory<class sized_array_memory<24> > vm_
       144 |         vector_memory<class sized_array_memory<24> >::type * l_
       152 |         vector_memory::size_type n_
       156 |         vector_memory::size_type capacity_
       192 |   class Spinlock _task_lock (empty)
       196 |   class atomic_uint32_t _task_blocker
       196 |     uint32_t _val
       200 |   class atomic_uint32_t _task_blocker_waiting
       200 |     uint32_t _val
       208 |   union Task::Pending _pending_head
       208 |     class Task * t
       208 |     uintptr_t x
       216 |   class Task::Pending * _pending_tail
       224 |   class SpinlockIRQ _pending_lock (empty)
       256 |   class Master * _master
       264 |   int _id
       268 |   _Bool _driver_entered
       272 |   unsigned int _tasks_per_iter
       276 |   unsigned int _iters_per_os
           | [sizeof=320, dsize=280, align=64,
           |  nvsize=280, nvalign=64]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55cf2bc56bb0 prev 0x55cf2bc4d9f0 <../dummy_inc/click/timestamp.hh:539:5, line:566:5> line:539:11 referenced union rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55cf2bc56ca8 <col:5, col:11> col:11 implicit union rep_t
|-FieldDecl 0x55cf2bc56d48 <line:541:9, col:17> col:17 referenced x 'int64_t':'long'
|-CXXConstructorDecl 0x55cf2bc5db10 <line:539:11> col:11 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55cf2bc5def8 <col:11>
|-CXXConstructorDecl 0x55cf2bc5dbf0 <col:11> col:11 implicit used constexpr rep_t 'void (const Timestamp::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55cf2bc5dcd8 <col:11> col:11 'const Timestamp::rep_t &'
| `-CompoundStmt 0x55cf2bc5e640 <col:11>
|-CXXConstructorDecl 0x55cf2bc5dd78 <col:11> col:11 implicit used constexpr rep_t 'void (Timestamp::rep_t &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55cf2bc5de88 <col:11> col:11 'Timestamp::rep_t &&'
| `-CompoundStmt 0x55cf2bc5fe98 <col:11>
|-CXXDestructorDecl 0x55cf2bc5f1a8 <col:11> col:11 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55cf2b965c18 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(const Timestamp::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55cf2b965d28 <col:11> col:11 'const Timestamp::rep_t &'
| `-CompoundStmt 0x55cf2b9665f0 <col:11>
|   `-ReturnStmt 0x55cf2b9665e0 <col:11>
|     `-UnaryOperator 0x55cf2b9665c8 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55cf2b9665b8 <col:11> 'Timestamp::rep_t *' this
`-CXXMethodDecl 0x55cf2b965d98 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(Timestamp::rep_t &&) noexcept' inline default trivial
  |-ParmVarDecl 0x55cf2b965ea8 <col:11> col:11 'Timestamp::rep_t &&'
  `-CompoundStmt 0x55cf2bd9af50 <col:11>
    `-ReturnStmt 0x55cf2bd9af40 <col:11>
      `-UnaryOperator 0x55cf2bd9af28 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
        `-CXXThisExpr 0x55cf2bd9af18 <col:11> 'Timestamp::rep_t *' this

Layout: <CGRecordLayout
  LLVMType:%"union.Timestamp::rep_t" = type { i64 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55cf2bc4cba8 prev 0x55cf2bc4c8b8 <../dummy_inc/click/timestamp.hh:122:1, line:723:1> line:122:7 referenced class Timestamp definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55cf2bc4cca0 <col:1, col:7> col:7 implicit referenced class Timestamp
|-AccessSpecDecl 0x55cf2bc4cd30 <col:19, col:25> col:19 public
|-TypedefDecl 0x55cf2bc4cd68 <line:125:5, col:21> col:21 referenced seconds_type 'int32_t':'int'
| `-TypedefType 0x55cf2b8b1df0 'int32_t' sugar
|   |-Typedef 0x55cf2b7c2268 'int32_t'
|   `-TypedefType 0x55cf2b79b3b0 '__int32_t' sugar
|     |-Typedef 0x55cf2b79afc8 '__int32_t'
|     `-BuiltinType 0x55cf2b759370 'int'
|-TypedefDecl 0x55cf2bc4cdd0 <line:128:5, col:21> col:21 referenced value_type 'int64_t':'long'
| `-TypedefType 0x55cf2b8b1fb0 'int64_t' sugar
|   |-Typedef 0x55cf2b7c22d0 'int64_t'
|   `-TypedefType 0x55cf2b79b4d0 '__int64_t' sugar
|     |-Typedef 0x55cf2b79b0a8 '__int64_t'
|     `-BuiltinType 0x55cf2b759390 'long'
|-EnumDecl 0x55cf2bc4ce28 <line:133:5, line:140:5> line:133:5
| |-EnumConstantDecl 0x55cf2bc4cfa0 <line:134:9, col:38> col:9 max_seconds 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:133:5)'
| | `-ConstantExpr 0x55cf2bc4cf80 <col:23, col:38> 'Timestamp::seconds_type':'int' Int: 2147483647
| |   `-CStyleCastExpr 0x55cf2bc4cf58 <col:23, col:38> 'Timestamp::seconds_type':'int' <NoOp>
| |     `-ImplicitCastExpr 0x55cf2bc4cf40 <col:38> 'Timestamp::seconds_type':'int' <IntegralCast> part_of_explicit_cast
| |       `-IntegerLiteral 0x55cf2bc4cf10 <col:38> 'unsigned int' 2147483647
| `-EnumConstantDecl 0x55cf2bc4d098 <line:137:9, col:39> col:9 min_seconds 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:133:5)'
|   `-ConstantExpr 0x55cf2bc4d078 <col:23, col:39> 'Timestamp::seconds_type':'int' Int: -2147483648
|     `-CStyleCastExpr 0x55cf2bc4d050 <col:23, col:39> 'Timestamp::seconds_type':'int' <NoOp>
|       `-ImplicitCastExpr 0x55cf2bc4d038 <col:38, col:39> 'Timestamp::seconds_type':'int' <IntegralCast> part_of_explicit_cast
|         `-UnaryOperator 0x55cf2bc4d010 <col:38, col:39> 'unsigned int' prefix '-'
|           `-IntegerLiteral 0x55cf2bc4cff0 <col:39> 'unsigned int' 2147483648
|-EnumDecl 0x55cf2bc4d0e8 <line:142:5, line:162:5> line:142:5
| |-EnumConstantDecl 0x55cf2bc4d1f0 <line:143:9, col:24> col:9 referenced nsec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55cf2bc4d740 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf2bc4d1d0 <col:24> 'int' Int: 1000000000
| |     `-IntegerLiteral 0x55cf2bc4d1b0 <col:24> 'int' 1000000000
| |-EnumConstantDecl 0x55cf2bc4d280 <line:144:9, col:25> col:9 nsec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55cf2bc4d758 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf2bc4d260 <col:25> 'int' Int: 1000000
| |     `-IntegerLiteral 0x55cf2bc4d240 <col:25> 'int' 1000000
| |-EnumConstantDecl 0x55cf2bc4d310 <line:145:9, col:25> col:9 nsec_per_usec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55cf2bc4d770 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf2bc4d2f0 <col:25> 'int' Int: 1000
| |     `-IntegerLiteral 0x55cf2bc4d2d0 <col:25> 'int' 1000
| |-EnumConstantDecl 0x55cf2bc4d3a0 <line:146:9, col:24> col:9 referenced usec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55cf2bc4d788 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf2bc4d380 <col:24> 'int' Int: 1000000
| |     `-IntegerLiteral 0x55cf2bc4d360 <col:24> 'int' 1000000
| |-EnumConstantDecl 0x55cf2bc4d430 <line:147:9, col:25> col:9 usec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55cf2bc4d7a0 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf2bc4d410 <col:25> 'int' Int: 1000
| |     `-IntegerLiteral 0x55cf2bc4d3f0 <col:25> 'int' 1000
| |-EnumConstantDecl 0x55cf2bc4d4c0 <line:148:9, col:24> col:9 referenced msec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55cf2bc4d7b8 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf2bc4d4a0 <col:24> 'int' Int: 1000
| |     `-IntegerLiteral 0x55cf2bc4d480 <col:24> 'int' 1000
| |-EnumConstantDecl 0x55cf2bc4d550 <line:150:9, col:26> col:9 referenced subsec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55cf2bc4d7d0 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf2bc4d530 <col:26> 'int' Int: 1000000000
| |     `-DeclRefExpr 0x55cf2bc4d510 <col:26> 'int' EnumConstant 0x55cf2bc4d1f0 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| |-EnumConstantDecl 0x55cf2bc4d620 <line:157:9, col:44> col:9 referenced subsec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55cf2bc4d7e8 <col:27, col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf2bc4d600 <col:27, col:44> 'int' Int: 1000000
| |     `-BinaryOperator 0x55cf2bc4d5e0 <col:27, col:44> 'int' '/'
| |       |-DeclRefExpr 0x55cf2bc4d5a0 <col:27> 'int' EnumConstant 0x55cf2bc4d550 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| |       `-DeclRefExpr 0x55cf2bc4d5c0 <col:44> 'int' EnumConstant 0x55cf2bc4d4c0 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| `-EnumConstantDecl 0x55cf2bc4d6f0 <line:158:9, col:44> col:9 referenced subsec_per_usec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ImplicitCastExpr 0x55cf2bc4d800 <col:27, col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55cf2bc4d6d0 <col:27, col:44> 'int' Int: 1000
|       `-BinaryOperator 0x55cf2bc4d6b0 <col:27, col:44> 'int' '/'
|         |-DeclRefExpr 0x55cf2bc4d670 <col:27> 'int' EnumConstant 0x55cf2bc4d550 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|         `-DeclRefExpr 0x55cf2bc4d690 <col:44> 'int' EnumConstant 0x55cf2bc4d3a0 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-EnumDecl 0x55cf2bc4d818 <line:164:5, line:166:5> line:164:5
| `-EnumConstantDecl 0x55cf2bc4d920 <line:165:9, col:19> col:9 NSUBSEC 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:164:5)'
|   `-ImplicitCastExpr 0x55cf2bc4d970 <col:19> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55cf2bc4d900 <col:19> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' Int: 1000000000
|       `-DeclRefExpr 0x55cf2bc4d8e0 <col:19> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55cf2bc4d550 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-TypedefDecl 0x55cf2bc4d998 <line:168:5, col:32> col:32 referenced uninitialized_t 'uninitialized_type'
| `-RecordType 0x55cf2b8b1a20 'uninitialized_type'
|   `-CXXRecord 0x55cf2b8b1988 'uninitialized_type'
|-CXXRecordDecl 0x55cf2bc4d9f0 <line:170:5, col:11> col:11 referenced union rep_t
|-CXXConstructorDecl 0x55cf2bc4db00 <line:174:5, line:176:5> line:174:12 used Timestamp 'void ()' inline
| |-CXXCtorInitializer Field 0x55cf2bc57cf8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55cf2bc5df08 <col:12> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55cf2bc5e028 <col:24, line:176:5>
|   `-CXXMemberCallExpr 0x55cf2bc5dfe0 <line:175:9, col:20> 'void'
|     |-MemberExpr 0x55cf2bc5df70 <col:9> '<bound member function type>' ->assign 0x55cf2bc52748
|     | `-CXXThisExpr 0x55cf2bc5df60 <col:9> 'Timestamp *' implicit this
|     |-IntegerLiteral 0x55cf2bc5dfa0 <col:16> 'int' 0
|     `-ImplicitCastExpr 0x55cf2bc5e010 <col:19> 'uint32_t':'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x55cf2bc5dfc0 <col:19> 'int' 0
|-CXXConstructorDecl 0x55cf2bc4dd48 <line:187:5, line:189:5> line:187:21 Timestamp 'void (long, uint32_t)' inline
| |-ParmVarDecl 0x55cf2bc4dbc0 <col:31, col:36> col:36 used sec 'long'
| |-ParmVarDecl 0x55cf2bc4dc38 <col:41, col:59> col:50 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55cf2bc59840 <col:59> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55cf2bc59820 <col:59> 'int' 0
| |-CXXCtorInitializer Field 0x55cf2bc57cf8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55cf2bc5e040 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55cf2bc5e190 <col:62, line:189:5>
|   `-CXXMemberCallExpr 0x55cf2bc5e118 <line:188:9, col:27> 'void'
|     |-MemberExpr 0x55cf2bc5e0a8 <col:9> '<bound member function type>' ->assign 0x55cf2bc52748
|     | `-CXXThisExpr 0x55cf2bc5e098 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55cf2bc5e160 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x55cf2bc5e148 <col:16> 'long' <LValueToRValue>
|     |   `-DeclRefExpr 0x55cf2bc5e0d8 <col:16> 'long' lvalue ParmVar 0x55cf2bc4dbc0 'sec' 'long'
|     `-ImplicitCastExpr 0x55cf2bc5e178 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x55cf2bc5e0f8 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x55cf2bc4dc38 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55cf2bc4dfa8 <line:191:5, line:193:5> line:191:21 used Timestamp 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x55cf2bc4de18 <col:31, col:35> col:35 used sec 'int'
| |-ParmVarDecl 0x55cf2bc4de90 <col:40, col:58> col:49 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55cf2bc59878 <col:58> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55cf2bc59858 <col:58> 'int' 0
| |-CXXCtorInitializer Field 0x55cf2bc57cf8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55cf2bc5e1a8 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55cf2bc5e2e0 <col:61, line:193:5>
|   `-CXXMemberCallExpr 0x55cf2bc5e280 <line:192:9, col:27> 'void'
|     |-MemberExpr 0x55cf2bc5e210 <col:9> '<bound member function type>' ->assign 0x55cf2bc52748
|     | `-CXXThisExpr 0x55cf2bc5e200 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55cf2bc5e2b0 <col:16> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x55cf2bc5e240 <col:16> 'int' lvalue ParmVar 0x55cf2bc4de18 'sec' 'int'
|     `-ImplicitCastExpr 0x55cf2bc5e2c8 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x55cf2bc5e260 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x55cf2bc4de90 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55cf2bc4e208 <line:195:5, line:197:5> line:195:21 Timestamp 'void (unsigned long, uint32_t)' inline
| |-ParmVarDecl 0x55cf2bc4e078 <col:31, col:45> col:45 used sec 'unsigned long'
| |-ParmVarDecl 0x55cf2bc4e0f0 <col:50, col:68> col:59 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55cf2bc598b0 <col:68> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55cf2bc59890 <col:68> 'int' 0
| |-CXXCtorInitializer Field 0x55cf2bc57cf8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55cf2bc5e2f8 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55cf2bc5e448 <col:71, line:197:5>
|   `-CXXMemberCallExpr 0x55cf2bc5e3d0 <line:196:9, col:27> 'void'
|     |-MemberExpr 0x55cf2bc5e360 <col:9> '<bound member function type>' ->assign 0x55cf2bc52748
|     | `-CXXThisExpr 0x55cf2bc5e350 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55cf2bc5e418 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x55cf2bc5e400 <col:16> 'unsigned long' <LValueToRValue>
|     |   `-DeclRefExpr 0x55cf2bc5e390 <col:16> 'unsigned long' lvalue ParmVar 0x55cf2bc4e078 'sec' 'unsigned long'
|     `-ImplicitCastExpr 0x55cf2bc5e430 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x55cf2bc5e3b0 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x55cf2bc4e0f0 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55cf2bc4f3a0 <line:199:5, line:201:5> line:199:21 used Timestamp 'void (unsigned int, uint32_t)' inline
| |-ParmVarDecl 0x55cf2bc4e2d8 <col:31, col:40> col:40 used sec 'unsigned int'
| |-ParmVarDecl 0x55cf2bc4e350 <col:45, col:63> col:54 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55cf2bc598e8 <col:63> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55cf2bc598c8 <col:63> 'int' 0
| |-CXXCtorInitializer Field 0x55cf2bc57cf8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55cf2bc5e460 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55cf2bc5e5b0 <col:66, line:201:5>
|   `-CXXMemberCallExpr 0x55cf2bc5e538 <line:200:9, col:27> 'void'
|     |-MemberExpr 0x55cf2bc5e4c8 <col:9> '<bound member function type>' ->assign 0x55cf2bc52748
|     | `-CXXThisExpr 0x55cf2bc5e4b8 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55cf2bc5e580 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x55cf2bc5e568 <col:16> 'unsigned int' <LValueToRValue>
|     |   `-DeclRefExpr 0x55cf2bc5e4f8 <col:16> 'unsigned int' lvalue ParmVar 0x55cf2bc4e2d8 'sec' 'unsigned int'
|     `-ImplicitCastExpr 0x55cf2bc5e598 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x55cf2bc5e518 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x55cf2bc4e350 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55cf2bc4f500 <line:203:5, col:37> col:21 used Timestamp 'void (double)' inline
| `-ParmVarDecl 0x55cf2bc4f470 <col:31> col:37 'double'
|-CXXConstructorDecl 0x55cf2bc4f698 <line:206:5, col:46> col:12 Timestamp 'void (const struct timeval &)' inline
| `-ParmVarDecl 0x55cf2bc4f5d8 <col:22, col:44> col:44 tv 'const struct timeval &'
|-CXXConstructorDecl 0x55cf2bc4f8c8 <line:208:5, col:47> col:12 Timestamp 'void (const struct timespec &)' inline
| `-ParmVarDecl 0x55cf2bc4f7d0 <col:22, col:45> col:45 ts 'const struct timespec &'
|-CXXConstructorDecl 0x55cf2bc4fa78 <line:212:5, line:214:5> line:212:12 Timestamp 'void (const Timestamp::rep_t &)' inline
| |-ParmVarDecl 0x55cf2bc4f9b8 <col:22, col:35> col:35 used rep 'const Timestamp::rep_t &'
| |-CXXCtorInitializer Field 0x55cf2bc57cf8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55cf2bc5e650 <line:213:11, col:17> 'Timestamp::rep_t' 'void (const Timestamp::rep_t &) noexcept'
| |   `-DeclRefExpr 0x55cf2bc5e5c8 <col:14> 'const Timestamp::rep_t' lvalue ParmVar 0x55cf2bc4f9b8 'rep' 'const Timestamp::rep_t &'
| `-CompoundStmt 0x55cf2bc5e6b0 <col:19, line:214:5>
|-CXXConstructorDecl 0x55cf2bc4fc48 <line:217:5, line:219:5> line:217:12 used Timestamp 'void (const Timestamp::uninitialized_t &)' inline
| |-ParmVarDecl 0x55cf2bc4fb88 <col:22, col:45> col:45 used unused 'const Timestamp::uninitialized_t &'
| |-CXXCtorInitializer Field 0x55cf2bc57cf8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55cf2bc5e6c0 <col:12> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55cf2bc5e770 <col:53, line:219:5>
|   `-CStyleCastExpr 0x55cf2bc5e748 <line:218:9, col:16> 'void' <ToVoid>
|     `-DeclRefExpr 0x55cf2bc5e718 <col:16> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue ParmVar 0x55cf2bc4fb88 'unused' 'const Timestamp::uninitialized_t &'
|-TypedefDecl 0x55cf2bc4fe38 <line:221:5, col:64> col:39 referenced unspecified_bool_type 'Timestamp::seconds_type (Timestamp::*)() const'
| `-MemberPointerType 0x55cf2bc4fdb0 'Timestamp::seconds_type (Timestamp::*)() const'
|   |-RecordType 0x55cf2bc4c950 'Timestamp'
|   | `-CXXRecord 0x55cf2bc4cba8 'Timestamp'
|   `-ParenType 0x55cf2bc4fd50 'Timestamp::seconds_type () const' sugar
|     `-FunctionProtoType 0x55cf2bc4fd20 'Timestamp::seconds_type () const' const cdecl
|       `-TypedefType 0x55cf2bc4cef0 'Timestamp::seconds_type' sugar
|         |-Typedef 0x55cf2bc4cd68 'seconds_type'
|         `-TypedefType 0x55cf2b8b1df0 'int32_t' sugar
|           |-Typedef 0x55cf2b7c2268 'int32_t'
|           `-TypedefType 0x55cf2b79b3b0 '__int32_t' sugar
|             |-Typedef 0x55cf2b79afc8 '__int32_t'
|             `-BuiltinType 0x55cf2b759370 'int'
|-CXXConversionDecl 0x55cf2bc4ff78 <line:222:5, col:45> col:12 used operator int (Timestamp::*)() const 'Timestamp::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x55cf2bc50048 <line:225:5, line:231:5> line:225:17 is_negative 'bool () const' inline
| `-CompoundStmt 0x55cf2bc5e878 <col:37, line:231:5>
|   `-ReturnStmt 0x55cf2bc5e868 <line:227:9, col:23>
|     `-BinaryOperator 0x55cf2bc5e848 <col:16, col:23> 'bool' '<'
|       |-ImplicitCastExpr 0x55cf2bc5e818 <col:16, col:19> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x55cf2bc5e7c8 <col:16, col:19> 'const int64_t':'const long' lvalue .x 0x55cf2bc56d48
|       |   `-MemberExpr 0x55cf2bc5e798 <col:16> 'const Timestamp::rep_t' lvalue ->_t 0x55cf2bc57cf8
|       |     `-CXXThisExpr 0x55cf2bc5e788 <col:16> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x55cf2bc5e830 <col:23> 'long' <IntegralCast>
|         `-IntegerLiteral 0x55cf2bc5e7f8 <col:23> 'int' 0
|-CXXMethodDecl 0x55cf2bc50108 <line:233:5, col:31> col:25 used sec 'Timestamp::seconds_type () const' inline
|-CXXMethodDecl 0x55cf2bc501c8 <line:234:5, col:30> col:21 used subsec 'uint32_t () const' inline
|-CXXMethodDecl 0x55cf2bc50288 <line:235:5, col:28> col:21 msec 'uint32_t () const' inline
|-CXXMethodDecl 0x55cf2bc50348 <line:236:5, col:28> col:21 used usec 'uint32_t () const' inline
|-CXXMethodDecl 0x55cf2bc50408 <line:237:5, col:28> col:21 used nsec 'uint32_t () const' inline
|-CXXMethodDecl 0x55cf2bc50578 <line:239:5, col:41> col:17 set_sec 'void (Timestamp::seconds_type)' inline
| `-ParmVarDecl 0x55cf2bc504b8 <col:25, col:38> col:38 sec 'Timestamp::seconds_type':'int'
|-CXXMethodDecl 0x55cf2bc506c0 <line:240:5, col:43> col:17 set_subsec 'void (uint32_t)' inline
| `-ParmVarDecl 0x55cf2bc50630 <col:28, col:37> col:37 subsec 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55cf2bc50788 <line:242:5, col:65> col:25 msec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x55cf2bc50828 <col:54> "" ""
|-CXXMethodDecl 0x55cf2bc508b8 <line:243:5, col:65> col:25 usec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x55cf2bc50958 <col:54> "" ""
|-CXXMethodDecl 0x55cf2bc509e8 <line:244:5, col:65> col:25 nsec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x55cf2bc50a88 <col:54> "" ""
|-CXXMethodDecl 0x55cf2bc50b88 <line:250:5, col:37> col:27 used timeval 'struct timeval () const' inline
|-CXXMethodDecl 0x55cf2bc50c58 <line:251:5, col:42> col:27 timeval_ceil 'struct timeval () const' inline
|-CXXMethodDecl 0x55cf2bc50d88 <line:257:5, col:39> col:28 timespec 'struct timespec () const' inline
|-CXXMethodDecl 0x55cf2bc50e80 <line:262:5, col:31> col:19 used doubleval 'double () const' inline
|-CXXMethodDecl 0x55cf2bc50fb8 <line:265:5, line:271:5> line:265:23 msecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x55cf2bc5ea90 <col:39, line:271:5>
|   `-ReturnStmt 0x55cf2bc5ea80 <line:267:9, col:61>
|     `-CallExpr 0x55cf2bc5ea20 <col:16, col:61> 'Timestamp::value_type':'long'
|       |-ImplicitCastExpr 0x55cf2bc5ea08 <col:16> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55cf2bc5e890 <col:16> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x55cf2bc58028 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|       |-ImplicitCastExpr 0x55cf2bc5ea50 <col:26, col:29> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x55cf2bc5e8f0 <col:26, col:29> 'const int64_t':'const long' lvalue .x 0x55cf2bc56d48
|       |   `-MemberExpr 0x55cf2bc5e8c0 <col:26> 'const Timestamp::rep_t' lvalue ->_t 0x55cf2bc57cf8
|       |     `-CXXThisExpr 0x55cf2bc5e8b0 <col:26> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x55cf2bc5ea68 <col:32, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|         `-BinaryOperator 0x55cf2bc5e990 <col:32, col:49> 'int' '/'
|           |-ImplicitCastExpr 0x55cf2bc5e960 <col:32> 'int' <IntegralCast>
|           | `-DeclRefExpr 0x55cf2bc5e920 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55cf2bc4d550 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|           `-ImplicitCastExpr 0x55cf2bc5e978 <col:49> 'int' <IntegralCast>
|             `-DeclRefExpr 0x55cf2bc5e940 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55cf2bc4d4c0 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55cf2bc51078 <line:273:5, line:279:5> line:273:23 usecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x55cf2bc5ec50 <col:39, line:279:5>
|   `-ReturnStmt 0x55cf2bc5ec40 <line:275:9, col:61>
|     `-CallExpr 0x55cf2bc5ebe0 <col:16, col:61> 'Timestamp::value_type':'long'
|       |-ImplicitCastExpr 0x55cf2bc5ebc8 <col:16> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55cf2bc5eaa8 <col:16> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x55cf2bc58028 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|       |-ImplicitCastExpr 0x55cf2bc5ec10 <col:26, col:29> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x55cf2bc5eb08 <col:26, col:29> 'const int64_t':'const long' lvalue .x 0x55cf2bc56d48
|       |   `-MemberExpr 0x55cf2bc5ead8 <col:26> 'const Timestamp::rep_t' lvalue ->_t 0x55cf2bc57cf8
|       |     `-CXXThisExpr 0x55cf2bc5eac8 <col:26> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x55cf2bc5ec28 <col:32, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|         `-BinaryOperator 0x55cf2bc5eba8 <col:32, col:49> 'int' '/'
|           |-ImplicitCastExpr 0x55cf2bc5eb78 <col:32> 'int' <IntegralCast>
|           | `-DeclRefExpr 0x55cf2bc5eb38 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55cf2bc4d550 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|           `-ImplicitCastExpr 0x55cf2bc5eb90 <col:49> 'int' <IntegralCast>
|             `-DeclRefExpr 0x55cf2bc5eb58 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55cf2bc4d3a0 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55cf2bc51138 <line:281:5, line:287:5> line:281:23 nsecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x55cf2bc5ede8 <col:39, line:287:5>
|   `-ReturnStmt 0x55cf2bc5edd8 <line:283:9, col:53>
|     `-BinaryOperator 0x55cf2bc5edb8 <col:16, col:53> 'long' '*'
|       |-ImplicitCastExpr 0x55cf2bc5ed88 <col:16, col:19> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x55cf2bc5eca8 <col:16, col:19> 'const int64_t':'const long' lvalue .x 0x55cf2bc56d48
|       |   `-MemberExpr 0x55cf2bc5ec78 <col:16> 'const Timestamp::rep_t' lvalue ->_t 0x55cf2bc57cf8
|       |     `-CXXThisExpr 0x55cf2bc5ec68 <col:16> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x55cf2bc5eda0 <col:23, col:53> 'long' <IntegralCast>
|         `-ParenExpr 0x55cf2bc5ed68 <col:23, col:53> 'int'
|           `-BinaryOperator 0x55cf2bc5ed48 <col:24, col:39> 'int' '/'
|             |-ImplicitCastExpr 0x55cf2bc5ed18 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55cf2bc5ecd8 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55cf2bc4d1f0 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55cf2bc5ed30 <col:39> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55cf2bc5ecf8 <col:39> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55cf2bc4d550 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55cf2bc51228 <line:290:5, line:293:5> line:290:22 msec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x55cf2bc60080 <col:40, line:293:5>
|   |-DeclStmt 0x55cf2bc5ef30 <line:291:9, col:48>
|   | `-VarDecl 0x55cf2bc5ee10 <col:9, col:33> col:18 used x 'uint32_t':'unsigned int' cinit
|   |   `-BinaryOperator 0x55cf2bc5ef10 <col:22, col:33> 'unsigned int' '%'
|   |     |-CXXMemberCallExpr 0x55cf2bc5eeb8 <col:22, col:29> 'uint32_t':'unsigned int'
|   |     | `-MemberExpr 0x55cf2bc5ee88 <col:22> '<bound member function type>' ->subsec 0x55cf2bc501c8
|   |     |   `-CXXThisExpr 0x55cf2bc5ee78 <col:22> 'const Timestamp *' implicit this
|   |     `-ImplicitCastExpr 0x55cf2bc5eef8 <col:33> 'unsigned int' <IntegralCast>
|   |       `-DeclRefExpr 0x55cf2bc5eed8 <col:33> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55cf2bc4d620 'subsec_per_msec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x55cf2bc60070 <line:292:9, col:70>
|     `-ExprWithCleanups 0x55cf2bc60058 <col:16, col:70> 'Timestamp'
|       `-CXXConstructExpr 0x55cf2bc60028 <col:16, col:70> 'Timestamp' 'void (const Timestamp &) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55cf2bc60010 <col:16, col:70> 'const Timestamp' lvalue
|           `-ParenExpr 0x55cf2bc5fff0 <col:16, col:70> 'const Timestamp'
|             `-ConditionalOperator 0x55cf2bc5ffc0 <col:17, col:66> 'const Timestamp'
|               |-ImplicitCastExpr 0x55cf2bc5fd58 <col:17> 'bool' <IntegralToBoolean>
|               | `-ImplicitCastExpr 0x55cf2bc5fd40 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|               |   `-DeclRefExpr 0x55cf2bc5ef48 <col:17> 'uint32_t':'unsigned int' lvalue Var 0x55cf2bc5ee10 'x' 'uint32_t':'unsigned int'
|               |-CXXConstructExpr 0x55cf2bc5ff60 <col:21, col:61> 'const Timestamp' 'void (const Timestamp &) noexcept' elidable
|               | `-MaterializeTemporaryExpr 0x55cf2bc5ff48 <col:21, col:61> 'const Timestamp' lvalue
|               |   `-CXXConstructExpr 0x55cf2bc5ff18 <col:21, col:61> 'const Timestamp' 'void (Timestamp &&) noexcept' elidable
|               |     `-MaterializeTemporaryExpr 0x55cf2bc5fd70 <col:21, col:61> 'Timestamp' xvalue
|               |       `-CXXOperatorCallExpr 0x55cf2bc5fce0 <col:21, col:61> 'Timestamp'
|               |         |-ImplicitCastExpr 0x55cf2bc5fcc8 <col:27> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|               |         | `-DeclRefExpr 0x55cf2bc5fc78 <col:27> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55cf2bc4caf8 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|               |         |-CXXConstructExpr 0x55cf2bc5fc18 <col:21, col:22> 'Timestamp' 'void (const Timestamp &) noexcept'
|               |         | `-UnaryOperator 0x55cf2bc5ef78 <col:21, col:22> 'const Timestamp' lvalue prefix '*' cannot overflow
|               |         |   `-CXXThisExpr 0x55cf2bc5ef68 <col:22> 'const Timestamp *' this
|               |         `-MaterializeTemporaryExpr 0x55cf2bc5fc60 <col:29, col:61> 'const Timestamp' lvalue
|               |           `-ImplicitCastExpr 0x55cf2bc5fc48 <col:29, col:61> 'const Timestamp' <NoOp>
|               |             `-CXXTemporaryObjectExpr 0x55cf2bc5f438 <col:29, col:61> 'Timestamp' 'void (int, uint32_t)'
|               |               |-IntegerLiteral 0x55cf2bc5efa0 <col:39> 'int' 0
|               |               `-BinaryOperator 0x55cf2bc5f030 <col:42, col:60> 'unsigned int' '-'
|               |                 |-ImplicitCastExpr 0x55cf2bc5f000 <col:42> 'unsigned int' <IntegralCast>
|               |                 | `-DeclRefExpr 0x55cf2bc5efc0 <col:42> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55cf2bc4d620 'subsec_per_msec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|               |                 `-ImplicitCastExpr 0x55cf2bc5f018 <col:60> 'uint32_t':'unsigned int' <LValueToRValue>
|               |                   `-DeclRefExpr 0x55cf2bc5efe0 <col:60> 'uint32_t':'unsigned int' lvalue Var 0x55cf2bc5ee10 'x' 'uint32_t':'unsigned int'
|               `-CXXConstructExpr 0x55cf2bc5ff90 <col:65, col:66> 'const Timestamp' 'void (const Timestamp &) noexcept'
|                 `-UnaryOperator 0x55cf2bc5fd28 <col:65, col:66> 'const Timestamp' lvalue prefix '*' cannot overflow
|                   `-CXXThisExpr 0x55cf2bc5fd18 <col:66> 'const Timestamp *' this
|-CXXMethodDecl 0x55cf2bc512e8 <line:295:5, line:302:5> line:295:22 usec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x55cf2bc605d8 <col:40, line:302:5>
|   |-DeclStmt 0x55cf2bc601d0 <line:297:9, col:48>
|   | `-VarDecl 0x55cf2bc600b0 <col:9, col:33> col:18 used x 'uint32_t':'unsigned int' cinit
|   |   `-BinaryOperator 0x55cf2bc601b0 <col:22, col:33> 'unsigned int' '%'
|   |     |-CXXMemberCallExpr 0x55cf2bc60158 <col:22, col:29> 'uint32_t':'unsigned int'
|   |     | `-MemberExpr 0x55cf2bc60128 <col:22> '<bound member function type>' ->subsec 0x55cf2bc501c8
|   |     |   `-CXXThisExpr 0x55cf2bc60118 <col:22> 'const Timestamp *' implicit this
|   |     `-ImplicitCastExpr 0x55cf2bc60198 <col:33> 'unsigned int' <IntegralCast>
|   |       `-DeclRefExpr 0x55cf2bc60178 <col:33> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55cf2bc4d6f0 'subsec_per_usec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x55cf2bc605c8 <line:298:9, col:70>
|     `-ExprWithCleanups 0x55cf2bc605b0 <col:16, col:70> 'Timestamp'
|       `-CXXConstructExpr 0x55cf2bc60580 <col:16, col:70> 'Timestamp' 'void (const Timestamp &) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55cf2bc60568 <col:16, col:70> 'const Timestamp' lvalue
|           `-ParenExpr 0x55cf2bc60548 <col:16, col:70> 'const Timestamp'
|             `-ConditionalOperator 0x55cf2bc60518 <col:17, col:66> 'const Timestamp'
|               |-ImplicitCastExpr 0x55cf2bc60440 <col:17> 'bool' <IntegralToBoolean>
|               | `-ImplicitCastExpr 0x55cf2bc60428 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|               |   `-DeclRefExpr 0x55cf2bc601e8 <col:17> 'uint32_t':'unsigned int' lvalue Var 0x55cf2bc600b0 'x' 'uint32_t':'unsigned int'
|               |-CXXConstructExpr 0x55cf2bc604b8 <col:21, col:61> 'const Timestamp' 'void (const Timestamp &) noexcept' elidable
|               | `-MaterializeTemporaryExpr 0x55cf2bc604a0 <col:21, col:61> 'const Timestamp' lvalue
|               |   `-CXXConstructExpr 0x55cf2bc60470 <col:21, col:61> 'const Timestamp' 'void (Timestamp &&) noexcept' elidable
|               |     `-MaterializeTemporaryExpr 0x55cf2bc60458 <col:21, col:61> 'Timestamp' xvalue
|               |       `-CXXOperatorCallExpr 0x55cf2bc603c8 <col:21, col:61> 'Timestamp'
|               |         |-ImplicitCastExpr 0x55cf2bc603b0 <col:27> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|               |         | `-DeclRefExpr 0x55cf2bc60390 <col:27> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55cf2bc4caf8 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|               |         |-CXXConstructExpr 0x55cf2bc60330 <col:21, col:22> 'Timestamp' 'void (const Timestamp &) noexcept'
|               |         | `-UnaryOperator 0x55cf2bc60218 <col:21, col:22> 'const Timestamp' lvalue prefix '*' cannot overflow
|               |         |   `-CXXThisExpr 0x55cf2bc60208 <col:22> 'const Timestamp *' this
|               |         `-MaterializeTemporaryExpr 0x55cf2bc60378 <col:29, col:61> 'const Timestamp' lvalue
|               |           `-ImplicitCastExpr 0x55cf2bc60360 <col:29, col:61> 'const Timestamp' <NoOp>
|               |             `-CXXTemporaryObjectExpr 0x55cf2bc602f0 <col:29, col:61> 'Timestamp' 'void (int, uint32_t)'
|               |               |-IntegerLiteral 0x55cf2bc60240 <col:39> 'int' 0
|               |               `-BinaryOperator 0x55cf2bc602d0 <col:42, col:60> 'unsigned int' '-'
|               |                 |-ImplicitCastExpr 0x55cf2bc602a0 <col:42> 'unsigned int' <IntegralCast>
|               |                 | `-DeclRefExpr 0x55cf2bc60260 <col:42> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55cf2bc4d6f0 'subsec_per_usec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|               |                 `-ImplicitCastExpr 0x55cf2bc602b8 <col:60> 'uint32_t':'unsigned int' <LValueToRValue>
|               |                   `-DeclRefExpr 0x55cf2bc60280 <col:60> 'uint32_t':'unsigned int' lvalue Var 0x55cf2bc600b0 'x' 'uint32_t':'unsigned int'
|               `-CXXConstructExpr 0x55cf2bc604e8 <col:65, col:66> 'const Timestamp' 'void (const Timestamp &) noexcept'
|                 `-UnaryOperator 0x55cf2bc60410 <col:65, col:66> 'const Timestamp' lvalue prefix '*' cannot overflow
|                   `-CXXThisExpr 0x55cf2bc60400 <col:66> 'const Timestamp *' this
|-CXXMethodDecl 0x55cf2bc513a8 <line:304:5, line:306:5> line:304:22 nsec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x55cf2bc60660 <col:40, line:306:5>
|   `-ReturnStmt 0x55cf2bc60650 <line:305:9, col:17>
|     `-CXXConstructExpr 0x55cf2bc60620 <col:16, col:17> 'Timestamp' 'void (const Timestamp &) noexcept'
|       `-UnaryOperator 0x55cf2bc60608 <col:16, col:17> 'const Timestamp' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55cf2bc605f8 <col:17> 'const Timestamp *' this
|-CXXMethodDecl 0x55cf2bc51548 <line:310:5, col:65> col:29 make_jiffies 'Timestamp (click_jiffies_t)' static inline
| `-ParmVarDecl 0x55cf2bc51458 <col:42, col:58> col:58 jiffies 'click_jiffies_t':'unsigned int'
|-CXXMethodDecl 0x55cf2bc51718 <line:312:5, col:76> col:29 make_jiffies 'Timestamp (click_jiffies_difference_t)' static inline
| `-ParmVarDecl 0x55cf2bc51620 <col:42, col:69> col:69 jiffies 'click_jiffies_difference_t':'int'
|-CXXMethodDecl 0x55cf2bc51808 <line:314:5, col:38> col:28 jiffies 'click_jiffies_t () const' inline
|-CXXMethodDecl 0x55cf2bc51978 <line:318:5, line:320:5> line:318:29 make_sec 'Timestamp (Timestamp::seconds_type)' static inline
| |-ParmVarDecl 0x55cf2bc518b8 <col:38, col:51> col:51 used sec 'Timestamp::seconds_type':'int'
| `-CompoundStmt 0x55cf2bc607a8 <col:56, line:320:5>
|   `-ReturnStmt 0x55cf2bc60798 <line:319:9, col:32>
|     `-ExprWithCleanups 0x55cf2bc60780 <col:16, col:32> 'Timestamp'
|       `-CXXConstructExpr 0x55cf2bc60750 <col:16, col:32> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55cf2bc60738 <col:16, col:32> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55cf2bc606f8 <col:16, col:32> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x55cf2bc606c8 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x55cf2bc60688 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55cf2bc518b8 'sec' 'Timestamp::seconds_type':'int'
|             `-ImplicitCastExpr 0x55cf2bc606e0 <col:31> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x55cf2bc606a8 <col:31> 'int' 0
|-CXXMethodDecl 0x55cf2bc51bb8 <line:324:5, line:326:5> line:324:29 make_msec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x55cf2bc51a30 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55cf2bc51aa8 <col:57, col:66> col:66 used msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55cf2bc60978 <col:72, line:326:5>
|   `-ReturnStmt 0x55cf2bc60968 <line:325:9, col:51>
|     `-ExprWithCleanups 0x55cf2bc60950 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x55cf2bc60920 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55cf2bc60908 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55cf2bc608c8 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x55cf2bc608b0 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x55cf2bc607d0 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55cf2bc51a30 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x55cf2bc60870 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x55cf2bc60858 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x55cf2bc607f0 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x55cf2bc564a0 'msec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x55cf2bc60898 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x55cf2bc60810 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x55cf2bc51aa8 'msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55cf2bc51d68 <line:328:5, line:337:5> line:328:29 used make_msec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x55cf2bc51c78 <col:39, col:50> col:50 used msec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x55cf2bc61040 <col:56, line:337:5>
|   |-DeclStmt 0x55cf2bc60c78 <line:329:9, col:51>
|   | `-VarDecl 0x55cf2bc609a0 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x55cf2bc60c60 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x55cf2bc60c30 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x55cf2bc60c18 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x55cf2bc60c00 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x55cf2bc60bd0 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x55cf2bc60bb8 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x55cf2bc60ba0 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x55cf2bc60a90 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x55cf2bc60e30 <line:331:9, col:55> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x55cf2bc60ce0 <col:9, col:14> 'int64_t':'long' lvalue .x 0x55cf2bc56d48
|   | | `-MemberExpr 0x55cf2bc60cb0 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x55cf2bc57cf8
|   | |   `-DeclRefExpr 0x55cf2bc60c90 <col:9> 'Timestamp' lvalue Var 0x55cf2bc609a0 't' 'Timestamp'
|   | `-BinaryOperator 0x55cf2bc60e10 <col:18, col:55> 'long' '*'
|   |   |-ImplicitCastExpr 0x55cf2bc60de0 <col:18> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55cf2bc60d10 <col:18> 'Timestamp::value_type':'long' lvalue ParmVar 0x55cf2bc51c78 'msec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x55cf2bc60df8 <col:25, col:55> 'long' <IntegralCast>
|   |     `-ParenExpr 0x55cf2bc60dc0 <col:25, col:55> 'int'
|   |       `-BinaryOperator 0x55cf2bc60da0 <col:26, col:43> 'int' '/'
|   |         |-ImplicitCastExpr 0x55cf2bc60d70 <col:26> 'int' <IntegralCast>
|   |         | `-DeclRefExpr 0x55cf2bc60d30 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55cf2bc4d550 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |         `-ImplicitCastExpr 0x55cf2bc60d88 <col:43> 'int' <IntegralCast>
|   |           `-DeclRefExpr 0x55cf2bc60d50 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55cf2bc4d4c0 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x55cf2bc61028 <line:336:9, col:16>
|     `-CXXConstructExpr 0x55cf2bc60ff8 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x55cf2bc60fe0 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x55cf2bc60fc0 <col:16> 'Timestamp' lvalue Var 0x55cf2bc609a0 't' 'Timestamp'
|-CXXMethodDecl 0x55cf2bc51f30 <line:341:5, line:343:5> line:341:29 make_usec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x55cf2bc51e20 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55cf2bc51e98 <col:57, col:66> col:66 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55cf2bc611f8 <col:72, line:343:5>
|   `-ReturnStmt 0x55cf2bc611e8 <line:342:9, col:51>
|     `-ExprWithCleanups 0x55cf2bc611d0 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x55cf2bc611a0 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55cf2bc61188 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55cf2bc61148 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x55cf2bc61130 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x55cf2bc61078 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55cf2bc51e20 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x55cf2bc610f0 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x55cf2bc610d8 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x55cf2bc61098 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x55cf2bc565e8 'usec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x55cf2bc61118 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x55cf2bc610b8 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x55cf2bc51e98 'usec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55cf2bc52080 <line:345:5, line:354:5> line:345:29 used make_usec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x55cf2bc51ff0 <col:39, col:50> col:50 used usec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x55cf2bc61640 <col:56, line:354:5>
|   |-DeclStmt 0x55cf2bc613e8 <line:346:9, col:51>
|   | `-VarDecl 0x55cf2bc61220 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x55cf2bc613d0 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x55cf2bc613a0 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x55cf2bc61388 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x55cf2bc61370 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x55cf2bc61340 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x55cf2bc61328 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x55cf2bc61310 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x55cf2bc612e0 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x55cf2bc615a0 <line:348:9, col:55> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x55cf2bc61450 <col:9, col:14> 'int64_t':'long' lvalue .x 0x55cf2bc56d48
|   | | `-MemberExpr 0x55cf2bc61420 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x55cf2bc57cf8
|   | |   `-DeclRefExpr 0x55cf2bc61400 <col:9> 'Timestamp' lvalue Var 0x55cf2bc61220 't' 'Timestamp'
|   | `-BinaryOperator 0x55cf2bc61580 <col:18, col:55> 'long' '*'
|   |   |-ImplicitCastExpr 0x55cf2bc61550 <col:18> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55cf2bc61480 <col:18> 'Timestamp::value_type':'long' lvalue ParmVar 0x55cf2bc51ff0 'usec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x55cf2bc61568 <col:25, col:55> 'long' <IntegralCast>
|   |     `-ParenExpr 0x55cf2bc61530 <col:25, col:55> 'int'
|   |       `-BinaryOperator 0x55cf2bc61510 <col:26, col:43> 'int' '/'
|   |         |-ImplicitCastExpr 0x55cf2bc614e0 <col:26> 'int' <IntegralCast>
|   |         | `-DeclRefExpr 0x55cf2bc614a0 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55cf2bc4d550 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |         `-ImplicitCastExpr 0x55cf2bc614f8 <col:43> 'int' <IntegralCast>
|   |           `-DeclRefExpr 0x55cf2bc614c0 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55cf2bc4d3a0 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x55cf2bc61628 <line:353:9, col:16>
|     `-CXXConstructExpr 0x55cf2bc615f8 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x55cf2bc615e0 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x55cf2bc615c0 <col:16> 'Timestamp' lvalue Var 0x55cf2bc61220 't' 'Timestamp'
|-CXXMethodDecl 0x55cf2bc52248 <line:358:5, line:360:5> line:358:29 make_nsec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x55cf2bc52138 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55cf2bc521b0 <col:57, col:66> col:66 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55cf2bc617f8 <col:72, line:360:5>
|   `-ReturnStmt 0x55cf2bc617e8 <line:359:9, col:51>
|     `-ExprWithCleanups 0x55cf2bc617d0 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x55cf2bc617a0 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55cf2bc61788 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55cf2bc61748 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x55cf2bc61730 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x55cf2bc61678 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55cf2bc52138 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x55cf2bc616f0 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x55cf2bc616d8 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x55cf2bc61698 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x55cf2bc56730 'nsec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x55cf2bc61718 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x55cf2bc616b8 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x55cf2bc521b0 'nsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55cf2bc52398 <line:362:5, line:371:5> line:362:29 make_nsec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x55cf2bc52308 <col:39, col:50> col:50 used nsec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x55cf2bc6e168 <col:56, line:371:5>
|   |-DeclStmt 0x55cf2bc619e8 <line:363:9, col:51>
|   | `-VarDecl 0x55cf2bc61820 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x55cf2bc619d0 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x55cf2bc619a0 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x55cf2bc61988 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x55cf2bc61970 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x55cf2bc61940 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x55cf2bc61928 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x55cf2bc61910 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x55cf2bc618e0 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x55cf2bc6e0c8 <line:365:9, col:63> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x55cf2bc61a50 <col:9, col:14> 'int64_t':'long' lvalue .x 0x55cf2bc56d48
|   | | `-MemberExpr 0x55cf2bc61a20 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x55cf2bc57cf8
|   | |   `-DeclRefExpr 0x55cf2bc61a00 <col:9> 'Timestamp' lvalue Var 0x55cf2bc61820 't' 'Timestamp'
|   | `-CallExpr 0x55cf2bc6e068 <col:18, col:63> 'Timestamp::value_type':'long'
|   |   |-ImplicitCastExpr 0x55cf2bc6e050 <col:18> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x55cf2bc61a80 <col:18> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x55cf2bc58028 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|   |   |-ImplicitCastExpr 0x55cf2bc6e098 <col:28> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55cf2bc61aa0 <col:28> 'Timestamp::value_type':'long' lvalue ParmVar 0x55cf2bc52308 'nsec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x55cf2bc6e0b0 <col:34, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|   |     `-BinaryOperator 0x55cf2bc6e030 <col:34, col:49> 'int' '/'
|   |       |-ImplicitCastExpr 0x55cf2bc6e000 <col:34> 'int' <IntegralCast>
|   |       | `-DeclRefExpr 0x55cf2bc61ac0 <col:34> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55cf2bc4d1f0 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |       `-ImplicitCastExpr 0x55cf2bc6e018 <col:49> 'int' <IntegralCast>
|   |         `-DeclRefExpr 0x55cf2bc61ae0 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55cf2bc4d550 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x55cf2bc6e150 <line:370:9, col:16>
|     `-CXXConstructExpr 0x55cf2bc6e120 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x55cf2bc6e108 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x55cf2bc6e0e8 <col:16> 'Timestamp' lvalue Var 0x55cf2bc61820 't' 'Timestamp'
|-CXXMethodDecl 0x55cf2bc52488 <line:375:5, line:377:5> line:375:29 epsilon 'Timestamp ()' static inline
| `-CompoundStmt 0x55cf2bc6e2a8 <col:39, line:377:5>
|   `-ReturnStmt 0x55cf2bc6e298 <line:376:9, col:30>
|     `-ExprWithCleanups 0x55cf2bc6e280 <col:16, col:30> 'Timestamp'
|       `-CXXConstructExpr 0x55cf2bc6e250 <col:16, col:30> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55cf2bc6e238 <col:16, col:30> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55cf2bc6e1f8 <col:16, col:30> 'Timestamp' 'void (int, uint32_t)'
|             |-IntegerLiteral 0x55cf2bc6e1a0 <col:26> 'int' 0
|             `-ImplicitCastExpr 0x55cf2bc6e1e0 <col:29> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x55cf2bc6e1c0 <col:29> 'int' 1
|-CXXMethodDecl 0x55cf2bc52548 <line:380:5, line:382:5> line:380:17 clear 'void ()' inline
| `-CompoundStmt 0x55cf2bc6e388 <col:25, line:382:5>
|   `-CXXMemberCallExpr 0x55cf2bc6e340 <line:381:9, col:20> 'void'
|     |-MemberExpr 0x55cf2bc6e2d0 <col:9> '<bound member function type>' ->assign 0x55cf2bc52748
|     | `-CXXThisExpr 0x55cf2bc6e2c0 <col:9> 'Timestamp *' implicit this
|     |-IntegerLiteral 0x55cf2bc6e300 <col:16> 'int' 0
|     `-ImplicitCastExpr 0x55cf2bc6e370 <col:19> 'uint32_t':'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x55cf2bc6e320 <col:19> 'int' 0
|-CXXMethodDecl 0x55cf2bc52748 <line:388:5, line:395:5> line:388:17 used assign 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55cf2bc525f8 <col:24, col:37> col:37 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55cf2bc52670 <col:42, col:60> col:51 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55cf2bc59920 <col:60> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55cf2bc59900 <col:60> 'int' 0
| `-CompoundStmt 0x55cf2bc6e580 <col:63, line:395:5>
|   `-BinaryOperator 0x55cf2bc6e560 <line:390:9, col:49> 'int64_t':'long' lvalue '='
|     |-MemberExpr 0x55cf2bc6e3e0 <col:9, col:12> 'int64_t':'long' lvalue .x 0x55cf2bc56d48
|     | `-MemberExpr 0x55cf2bc6e3b0 <col:9> 'Timestamp::rep_t' lvalue ->_t 0x55cf2bc57cf8
|     |   `-CXXThisExpr 0x55cf2bc6e3a0 <col:9> 'Timestamp *' implicit this
|     `-BinaryOperator 0x55cf2bc6e540 <col:16, col:49> 'long' '+'
|       |-BinaryOperator 0x55cf2bc6e4d0 <col:16, col:32> 'long' '*'
|       | |-CStyleCastExpr 0x55cf2bc6e470 <col:16, col:26> 'int64_t':'long' <NoOp>
|       | | `-ImplicitCastExpr 0x55cf2bc6e458 <col:26> 'int64_t':'long' <IntegralCast> part_of_explicit_cast
|       | |   `-ImplicitCastExpr 0x55cf2bc6e440 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue> part_of_explicit_cast
|       | |     `-DeclRefExpr 0x55cf2bc6e410 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55cf2bc525f8 'sec' 'Timestamp::seconds_type':'int'
|       | `-ImplicitCastExpr 0x55cf2bc6e4b8 <col:32> 'long' <IntegralCast>
|       |   `-DeclRefExpr 0x55cf2bc6e498 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55cf2bc4d550 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|       `-ImplicitCastExpr 0x55cf2bc6e528 <col:49> 'long' <IntegralCast>
|         `-ImplicitCastExpr 0x55cf2bc6e510 <col:49> 'uint32_t':'unsigned int' <LValueToRValue>
|           `-DeclRefExpr 0x55cf2bc6e4f0 <col:49> 'uint32_t':'unsigned int' lvalue ParmVar 0x55cf2bc52670 'subsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55cf2bc52918 <line:397:5, line:399:5> line:397:17 used assign_usec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55cf2bc52808 <col:29, col:42> col:42 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55cf2bc52880 <col:47, col:56> col:56 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55cf2bc6e6d8 <col:62, line:399:5>
|   `-CXXMemberCallExpr 0x55cf2bc6e690 <line:398:9, col:41> 'void'
|     |-MemberExpr 0x55cf2bc6e5a8 <col:9> '<bound member function type>' ->assign 0x55cf2bc52748
|     | `-CXXThisExpr 0x55cf2bc6e598 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55cf2bc6e6c0 <col:16> 'Timestamp::seconds_type':'int' <LValueToRValue>
|     | `-DeclRefExpr 0x55cf2bc6e5d8 <col:16> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55cf2bc52808 'sec' 'Timestamp::seconds_type':'int'
|     `-CallExpr 0x55cf2bc6e650 <col:21, col:40> 'uint32_t':'unsigned int'
|       |-ImplicitCastExpr 0x55cf2bc6e638 <col:21> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55cf2bc6e5f8 <col:21> 'uint32_t (uint32_t)' lvalue CXXMethod 0x55cf2bc565e8 'usec_to_subsec' 'uint32_t (uint32_t)'
|       `-ImplicitCastExpr 0x55cf2bc6e678 <col:36> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55cf2bc6e618 <col:36> 'uint32_t':'unsigned int' lvalue ParmVar 0x55cf2bc52880 'usec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55cf2bc52ae8 <line:401:5, line:403:5> line:401:17 used assign_nsec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55cf2bc529d8 <col:29, col:42> col:42 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55cf2bc52a50 <col:47, col:56> col:56 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55cf2bc6e830 <col:62, line:403:5>
|   `-CXXMemberCallExpr 0x55cf2bc6e7e8 <line:402:9, col:41> 'void'
|     |-MemberExpr 0x55cf2bc6e700 <col:9> '<bound member function type>' ->assign 0x55cf2bc52748
|     | `-CXXThisExpr 0x55cf2bc6e6f0 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55cf2bc6e818 <col:16> 'Timestamp::seconds_type':'int' <LValueToRValue>
|     | `-DeclRefExpr 0x55cf2bc6e730 <col:16> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55cf2bc529d8 'sec' 'Timestamp::seconds_type':'int'
|     `-CallExpr 0x55cf2bc6e7a8 <col:21, col:40> 'uint32_t':'unsigned int'
|       |-ImplicitCastExpr 0x55cf2bc6e790 <col:21> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55cf2bc6e750 <col:21> 'uint32_t (uint32_t)' lvalue CXXMethod 0x55cf2bc56730 'nsec_to_subsec' 'uint32_t (uint32_t)'
|       `-ImplicitCastExpr 0x55cf2bc6e7d0 <col:36> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55cf2bc6e770 <col:36> 'uint32_t':'unsigned int' lvalue ParmVar 0x55cf2bc52a50 'nsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55cf2bc52cb8 <line:408:5, col:86> col:17 set 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55cf2bc52ba8 <col:21, col:34> col:34 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55cf2bc52c20 <col:39, col:57> col:48 subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55cf2bc59958 <col:57> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55cf2bc59938 <col:57> 'int' 0
| `-DeprecatedAttr 0x55cf2bc52d68 <col:75> "" ""
|-CXXMethodDecl 0x55cf2bc52ef8 <line:411:5, col:85> col:17 set_usec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55cf2bc52de8 <col:26, col:39> col:39 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55cf2bc52e60 <col:44, col:53> col:53 usec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55cf2bc52fa8 <col:74> "" ""
|-CXXMethodDecl 0x55cf2bc53138 <line:414:5, col:85> col:17 set_nsec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55cf2bc53028 <col:26, col:39> col:39 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55cf2bc530a0 <col:44, col:53> col:53 nsec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55cf2bc531e8 <col:74> "" ""
|-CXXMethodDecl 0x55cf2bc53278 <line:417:5, col:53> col:17 set_now 'void ()' inline
| `-DeprecatedAttr 0x55cf2bc53318 <col:42> "" ""
|-CXXMethodDecl 0x55cf2bc55b50 <line:420:5, col:53> col:9 set_timeval_ioctl 'int (int, int)'
| |-ParmVarDecl 0x55cf2bc55a30 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x55cf2bc55ab0 <col:35, col:39> col:39 ioctl_selector 'int'
|-CXXMethodDecl 0x55cf2bc55c20 <line:432:5, col:33> col:29 now 'Timestamp ()' static inline
|-CXXMethodDecl 0x55cf2bc55ce0 <line:438:5, col:56> col:45 used assign_now 'void ()'
| |-NoInlineAttr 0x55cf2bc55d80 <col:20>
| `-OptimizeNoneAttr 0x55cf2bc55dd8 <col:30>
|-CXXMethodDecl 0x55cf2bc55e20 <line:446:5, col:36> col:29 used recent 'Timestamp ()' static inline
|-CXXMethodDecl 0x55cf2bc55ee0 <line:452:5, col:31> col:17 used assign_recent 'void ()' inline
|-CXXMethodDecl 0x55cf2bc55fa0 <line:466:5, col:40> col:29 now_steady 'Timestamp ()' static inline
|-CXXMethodDecl 0x55cf2bc56060 <line:472:5, col:35> col:17 used assign_now_steady 'void ()' inline
|-CXXMethodDecl 0x55cf2bc56120 <line:481:5, col:43> col:29 used recent_steady 'Timestamp ()' static inline
|-CXXMethodDecl 0x55cf2bc561e0 <line:487:5, col:38> col:17 used assign_recent_steady 'void ()' inline
|-CXXMethodDecl 0x55cf2bc562a0 <line:496:5, col:22> col:12 unparse 'String () const'
|-CXXMethodDecl 0x55cf2bc56360 <line:501:5, col:31> col:12 unparse_interval 'String () const'
|-CXXMethodDecl 0x55cf2bc564a0 <line:510:5, line:512:5> line:510:28 used msec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55cf2bc56410 <col:43, col:52> col:52 used msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55cf2bc6e978 <col:58, line:512:5>
|   `-ReturnStmt 0x55cf2bc6e968 <line:511:9, col:53>
|     `-BinaryOperator 0x55cf2bc6e948 <col:16, col:53> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x55cf2bc6e918 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55cf2bc6e848 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55cf2bc56410 'msec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55cf2bc6e930 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55cf2bc6e8f8 <col:23, col:53> 'int'
|           `-BinaryOperator 0x55cf2bc6e8d8 <col:24, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x55cf2bc6e8a8 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55cf2bc6e868 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55cf2bc4d550 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55cf2bc6e8c0 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55cf2bc6e888 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55cf2bc4d4c0 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55cf2bc565e8 <line:514:5, line:516:5> line:514:28 used usec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55cf2bc56558 <col:43, col:52> col:52 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55cf2bc6eac0 <col:58, line:516:5>
|   `-ReturnStmt 0x55cf2bc6eab0 <line:515:9, col:53>
|     `-BinaryOperator 0x55cf2bc6ea90 <col:16, col:53> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x55cf2bc6ea60 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55cf2bc6e990 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55cf2bc56558 'usec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55cf2bc6ea78 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55cf2bc6ea40 <col:23, col:53> 'int'
|           `-BinaryOperator 0x55cf2bc6ea20 <col:24, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x55cf2bc6e9f0 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55cf2bc6e9b0 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55cf2bc4d550 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55cf2bc6ea08 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55cf2bc6e9d0 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55cf2bc4d3a0 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55cf2bc56730 <line:518:5, line:520:5> line:518:28 used nsec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55cf2bc566a0 <col:43, col:52> col:52 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55cf2bc6ec08 <col:58, line:520:5>
|   `-ReturnStmt 0x55cf2bc6ebf8 <line:519:9, col:53>
|     `-BinaryOperator 0x55cf2bc6ebd8 <col:16, col:53> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x55cf2bc6eba8 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55cf2bc6ead8 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55cf2bc566a0 'nsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55cf2bc6ebc0 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55cf2bc6eb88 <col:23, col:53> 'int'
|           `-BinaryOperator 0x55cf2bc6eb68 <col:24, col:39> 'int' '/'
|             |-ImplicitCastExpr 0x55cf2bc6eb38 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55cf2bc6eaf8 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55cf2bc4d1f0 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55cf2bc6eb50 <col:39> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55cf2bc6eb18 <col:39> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55cf2bc4d550 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55cf2bc56878 <line:522:5, line:524:5> line:522:28 used subsec_to_msec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55cf2bc567e8 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55cf2bc6ed50 <col:60, line:524:5>
|   `-ReturnStmt 0x55cf2bc6ed40 <line:523:9, col:55>
|     `-BinaryOperator 0x55cf2bc6ed20 <col:16, col:55> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x55cf2bc6ecf0 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55cf2bc6ec20 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55cf2bc567e8 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55cf2bc6ed08 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55cf2bc6ecd0 <col:25, col:55> 'int'
|           `-BinaryOperator 0x55cf2bc6ecb0 <col:26, col:43> 'int' '/'
|             |-ImplicitCastExpr 0x55cf2bc6ec80 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55cf2bc6ec40 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55cf2bc4d550 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55cf2bc6ec98 <col:43> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55cf2bc6ec60 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55cf2bc4d4c0 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55cf2bc569c0 <line:526:5, line:528:5> line:526:28 used subsec_to_usec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55cf2bc56930 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55cf2bc6ee98 <col:60, line:528:5>
|   `-ReturnStmt 0x55cf2bc6ee88 <line:527:9, col:55>
|     `-BinaryOperator 0x55cf2bc6ee68 <col:16, col:55> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x55cf2bc6ee38 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55cf2bc6ed68 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55cf2bc56930 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55cf2bc6ee50 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55cf2bc6ee18 <col:25, col:55> 'int'
|           `-BinaryOperator 0x55cf2bc6edf8 <col:26, col:43> 'int' '/'
|             |-ImplicitCastExpr 0x55cf2bc6edc8 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55cf2bc6ed88 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55cf2bc4d550 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55cf2bc6ede0 <col:43> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55cf2bc6eda8 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55cf2bc4d3a0 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55cf2bc56b08 <line:530:5, line:532:5> line:530:28 used subsec_to_nsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55cf2bc56a78 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55cf2bc6efe0 <col:60, line:532:5>
|   `-ReturnStmt 0x55cf2bc6efd0 <line:531:9, col:55>
|     `-BinaryOperator 0x55cf2bc6efb0 <col:16, col:55> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x55cf2bc6ef80 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55cf2bc6eeb0 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55cf2bc56a78 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55cf2bc6ef98 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55cf2bc6ef60 <col:25, col:55> 'int'
|           `-BinaryOperator 0x55cf2bc6ef40 <col:26, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x55cf2bc6ef10 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55cf2bc6eed0 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55cf2bc4d1f0 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55cf2bc6ef28 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55cf2bc6eef0 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55cf2bc4d550 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXRecordDecl 0x55cf2bc56bb0 prev 0x55cf2bc4d9f0 <line:539:5, line:566:5> line:539:11 referenced union rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55cf2bc56ca8 <col:5, col:11> col:11 implicit union rep_t
| |-FieldDecl 0x55cf2bc56d48 <line:541:9, col:17> col:17 referenced x 'int64_t':'long'
| |-CXXConstructorDecl 0x55cf2bc5db10 <line:539:11> col:11 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55cf2bc5def8 <col:11>
| |-CXXConstructorDecl 0x55cf2bc5dbf0 <col:11> col:11 implicit used constexpr rep_t 'void (const Timestamp::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55cf2bc5dcd8 <col:11> col:11 'const Timestamp::rep_t &'
| | `-CompoundStmt 0x55cf2bc5e640 <col:11>
| |-CXXConstructorDecl 0x55cf2bc5dd78 <col:11> col:11 implicit used constexpr rep_t 'void (Timestamp::rep_t &&) noexcept' inline default trivial
| | |-ParmVarDecl 0x55cf2bc5de88 <col:11> col:11 'Timestamp::rep_t &&'
| | `-CompoundStmt 0x55cf2bc5fe98 <col:11>
| |-CXXDestructorDecl 0x55cf2bc5f1a8 <col:11> col:11 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x55cf2b965c18 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(const Timestamp::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55cf2b965d28 <col:11> col:11 'const Timestamp::rep_t &'
| | `-CompoundStmt 0x55cf2b9665f0 <col:11>
| |   `-ReturnStmt 0x55cf2b9665e0 <col:11>
| |     `-UnaryOperator 0x55cf2b9665c8 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x55cf2b9665b8 <col:11> 'Timestamp::rep_t *' this
| `-CXXMethodDecl 0x55cf2b965d98 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(Timestamp::rep_t &&) noexcept' inline default trivial
|   |-ParmVarDecl 0x55cf2b965ea8 <col:11> col:11 'Timestamp::rep_t &&'
|   `-CompoundStmt 0x55cf2bd9af50 <col:11>
|     `-ReturnStmt 0x55cf2bd9af40 <col:11>
|       `-UnaryOperator 0x55cf2bd9af28 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55cf2bd9af18 <col:11> 'Timestamp::rep_t *' this
|-EnumDecl 0x55cf2bc56db0 <line:571:5, line:577:5> line:571:10 referenced warp_class_type
| |-EnumConstantDecl 0x55cf2bc56eb0 <line:572:9, col:21> col:9 warp_none 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x55cf2bc570b0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf2bc56e90 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x55cf2bc56e70 <col:21> 'int' 0
| |-EnumConstantDecl 0x55cf2bc56f40 <line:573:9, col:23> col:9 warp_linear 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x55cf2bc570c8 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf2bc56f20 <col:23> 'int' Int: 1
| |     `-IntegerLiteral 0x55cf2bc56f00 <col:23> 'int' 1
| |-EnumConstantDecl 0x55cf2bc56fd0 <line:574:9, col:23> col:9 referenced warp_nowait 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x55cf2bc570e0 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf2bc56fb0 <col:23> 'int' Int: 2
| |     `-IntegerLiteral 0x55cf2bc56f90 <col:23> 'int' 2
| `-EnumConstantDecl 0x55cf2bc57060 <line:576:9, col:27> col:9 warp_simulation 'Timestamp::warp_class_type'
|   `-ImplicitCastExpr 0x55cf2bc570f8 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55cf2bc57040 <col:27> 'int' Int: 3
|       `-IntegerLiteral 0x55cf2bc57020 <col:27> 'int' 3
|-CXXMethodDecl 0x55cf2bc57138 <line:581:5, col:34> col:23 warp_class 'int ()' static inline
|-CXXMethodDecl 0x55cf2bc57200 <line:588:5, col:37> col:26 warp_speed 'double ()' static inline
|-CXXMethodDecl 0x55cf2bc57408 <line:621:5, col:65> col:17 warp_set_class 'void (Timestamp::warp_class_type, double)' static
| |-ParmVarDecl 0x55cf2bc572b0 <col:32, col:48> col:48 w 'Timestamp::warp_class_type'
| `-ParmVarDecl 0x55cf2bc57330 <col:51, col:62> col:58 s 'double' cinit
|   `-FloatingLiteral 0x55cf2bc59970 <col:62> 'double' 1.000000e+00
|-CXXMethodDecl 0x55cf2bc57618 <line:628:5, col:82> col:17 warp_set_now 'void (const Timestamp &, const Timestamp &)' static
| |-ParmVarDecl 0x55cf2bc574c8 <col:30, col:47> col:47 t_system 'const Timestamp &'
| `-ParmVarDecl 0x55cf2bc57540 <col:57, col:74> col:74 t_steady 'const Timestamp &'
|-CXXMethodDecl 0x55cf2bc576e8 <line:632:5, col:40> col:22 warp_real_delay 'Timestamp () const' inline
|-CXXMethodDecl 0x55cf2bc577a8 <line:635:5, col:37> col:24 used warp_jumping 'bool ()' static inline
|-CXXMethodDecl 0x55cf2bc57918 <line:640:5, col:57> col:17 warp_jump_steady 'void (const Timestamp &)' static
| `-ParmVarDecl 0x55cf2bc57858 <col:34, col:51> col:51 expiry 'const Timestamp &'
|-CXXMethodDecl 0x55cf2bc579e0 <line:647:5, col:42> col:29 now_unwarped 'Timestamp ()' static inline
|-CXXMethodDecl 0x55cf2bc57aa0 <line:653:5, col:37> col:17 used assign_now_unwarped 'void ()' inline
|-CXXMethodDecl 0x55cf2bc57b60 <line:659:5, col:49> col:29 now_steady_unwarped 'Timestamp ()' static inline
|-CXXMethodDecl 0x55cf2bc57c20 <line:666:5, col:44> col:17 used assign_now_steady_unwarped 'void ()' inline
|-AccessSpecDecl 0x55cf2bc57cc0 <line:670:3, col:10> col:3 private
|-FieldDecl 0x55cf2bc57cf8 <line:672:5, col:11> col:11 referenced _t 'Timestamp::rep_t'
|-CXXMethodDecl 0x55cf2bc57d68 <line:674:5, line:684:5> line:674:17 used add_fix 'void ()' inline
| `-CompoundStmt 0x55cf2bc6eff8 <col:27, line:684:5>
|-CXXMethodDecl 0x55cf2bc57e28 <line:686:5, line:696:5> line:686:17 used sub_fix 'void ()' inline
| `-CompoundStmt 0x55cf2bc6f008 <col:27, line:696:5>
|-CXXMethodDecl 0x55cf2bc58028 <line:698:5, line:700:5> line:698:30 used value_div 'Timestamp::value_type (Timestamp::value_type, uint32_t)' static inline
| |-ParmVarDecl 0x55cf2bc57ed8 <col:40, col:51> col:51 used a 'Timestamp::value_type':'long'
| |-ParmVarDecl 0x55cf2bc57f50 <col:54, col:63> col:63 used b 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55cf2bc6f190 <col:66, line:700:5>
|   `-ReturnStmt 0x55cf2bc6f180 <line:699:9, col:31>
|     `-CallExpr 0x55cf2bc6f120 <col:16, col:31> 'int64_t':'long'
|       |-ImplicitCastExpr 0x55cf2bc6f108 <col:16> 'int64_t (*)(int64_t, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55cf2bc6f0b8 <col:16> 'int64_t (int64_t, uint32_t)' lvalue Function 0x55cf2bada3d8 'int_divide' 'int64_t (int64_t, uint32_t)'
|       |-ImplicitCastExpr 0x55cf2bc6f150 <col:27> 'Timestamp::value_type':'long' <LValueToRValue>
|       | `-DeclRefExpr 0x55cf2bc6f078 <col:27> 'Timestamp::value_type':'long' lvalue ParmVar 0x55cf2bc57ed8 'a' 'Timestamp::value_type':'long'
|       `-ImplicitCastExpr 0x55cf2bc6f168 <col:30> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55cf2bc6f098 <col:30> 'uint32_t':'unsigned int' lvalue ParmVar 0x55cf2bc57f50 'b' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55cf2bc58398 <line:702:5, line:707:5> line:702:24 value_div_mod 'void (int32_t &, int32_t &, Timestamp::value_type, uint32_t)' static inline
| |-ParmVarDecl 0x55cf2bc580e8 <col:38, col:47> col:47 used div 'int32_t &'
| |-ParmVarDecl 0x55cf2bc58160 <col:52, col:61> col:61 used rem 'int32_t &'
| |-ParmVarDecl 0x55cf2bc581d8 <line:703:38, col:49> col:49 used a 'Timestamp::value_type':'long'
| |-ParmVarDecl 0x55cf2bc58250 <col:52, col:61> col:61 used b 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55cf2bc6f4e0 <col:64, line:707:5>
|   |-DeclStmt 0x55cf2bc6f220 <line:704:9, col:24>
|   | `-VarDecl 0x55cf2bc6f1b8 <col:9, col:20> col:20 used quot 'Timestamp::value_type':'long'
|   |-BinaryOperator 0x55cf2bc6f430 <line:705:9, col:39> 'int32_t':'int' lvalue '='
|   | |-DeclRefExpr 0x55cf2bc6f238 <col:9> 'int32_t':'int' lvalue ParmVar 0x55cf2bc58160 'rem' 'int32_t &'
|   | `-ImplicitCastExpr 0x55cf2bc6f418 <col:15, col:39> 'int32_t':'int' <IntegralCast>
|   |   `-CallExpr 0x55cf2bc6f3b0 <col:15, col:39> 'uint32_t':'unsigned int'
|   |     |-ImplicitCastExpr 0x55cf2bc6f398 <col:15> 'uint32_t (*)(int64_t, uint32_t, int64_t &)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55cf2bc6f318 <col:15> 'uint32_t (int64_t, uint32_t, int64_t &)' lvalue Function 0x55cf2badf6a8 'int_remainder' 'uint32_t (int64_t, uint32_t, int64_t &)'
|   |     |-ImplicitCastExpr 0x55cf2bc6f3e8 <col:29> 'Timestamp::value_type':'long' <LValueToRValue>
|   |     | `-DeclRefExpr 0x55cf2bc6f2b8 <col:29> 'Timestamp::value_type':'long' lvalue ParmVar 0x55cf2bc581d8 'a' 'Timestamp::value_type':'long'
|   |     |-ImplicitCastExpr 0x55cf2bc6f400 <col:32> 'uint32_t':'unsigned int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x55cf2bc6f2d8 <col:32> 'uint32_t':'unsigned int' lvalue ParmVar 0x55cf2bc58250 'b' 'uint32_t':'unsigned int'
|   |     `-DeclRefExpr 0x55cf2bc6f2f8 <col:35> 'Timestamp::value_type':'long' lvalue Var 0x55cf2bc6f1b8 'quot' 'Timestamp::value_type':'long'
|   `-BinaryOperator 0x55cf2bc6f4c0 <line:706:9, col:15> 'int32_t':'int' lvalue '='
|     |-DeclRefExpr 0x55cf2bc6f450 <col:9> 'int32_t':'int' lvalue ParmVar 0x55cf2bc580e8 'div' 'int32_t &'
|     `-ImplicitCastExpr 0x55cf2bc6f4a8 <col:15> 'int32_t':'int' <IntegralCast>
|       `-ImplicitCastExpr 0x55cf2bc6f490 <col:15> 'Timestamp::value_type':'long' <LValueToRValue>
|         `-DeclRefExpr 0x55cf2bc6f470 <col:15> 'Timestamp::value_type':'long' lvalue Var 0x55cf2bc6f1b8 'quot' 'Timestamp::value_type':'long'
|-CXXMethodDecl 0x55cf2bc58638 <line:709:5, col:67> col:17 used assign_now 'void (bool, bool, bool)' inline
| |-ParmVarDecl 0x55cf2bc58468 <col:28, col:33> col:33 recent 'bool'
| |-ParmVarDecl 0x55cf2bc584e0 <col:41, col:46> col:46 steady 'bool'
| `-ParmVarDecl 0x55cf2bc58558 <col:54, col:59> col:59 unwarped 'bool'
|-CXXMethodDecl 0x55cf2bc588d8 <line:712:5, col:98> col:24 warp_adjust 'void (bool, const Timestamp &, const Timestamp &)' static inline
| |-ParmVarDecl 0x55cf2bc58700 <col:36, col:41> col:41 steady 'bool'
| |-ParmVarDecl 0x55cf2bc58778 <col:49, col:66> col:66 t_raw 'const Timestamp &'
| `-ParmVarDecl 0x55cf2bc587f0 <col:73, col:90> col:90 t_warped 'const Timestamp &'
|-CXXMethodDecl 0x55cf2bc58a68 <line:713:5, col:42> col:22 warped 'Timestamp (bool) const' inline
| `-ParmVarDecl 0x55cf2bc589a0 <col:29, col:34> col:34 steady 'bool'
|-CXXMethodDecl 0x55cf2bc58c68 <line:714:5, col:41> col:10 used warp 'void (bool, bool)'
| |-ParmVarDecl 0x55cf2bc58b20 <col:15, col:20> col:20 steady 'bool'
| `-ParmVarDecl 0x55cf2bc58b98 <col:28, col:33> col:33 from_now 'bool'
|-FriendDecl 0x55cf2bc58f38 <line:717:5, col:73> col:24
| `-FunctionDecl 0x55cf2bc58e78 parent 0x55cf2b759278 <col:5, col:73> col:24 used operator== 'bool (const Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x55cf2bc58d28 <col:35, col:52> col:52 a 'const Timestamp &'
|   `-ParmVarDecl 0x55cf2bc58da0 <col:55, col:72> col:72 b 'const Timestamp &'
|-FriendDecl 0x55cf2bc59158 <line:718:5, col:72> col:24
| `-FunctionDecl 0x55cf2bc59098 parent 0x55cf2b759278 <col:5, col:72> col:24 used operator< 'bool (const Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x55cf2bc58f88 <col:34, col:51> col:51 a 'const Timestamp &'
|   `-ParmVarDecl 0x55cf2bc59000 <col:54, col:71> col:71 b 'const Timestamp &'
|-FriendDecl 0x55cf2bc59320 <line:719:5, col:57> col:29
| `-FunctionDecl 0x55cf2bc59268 parent 0x55cf2b759278 <col:5, col:57> col:29 operator- 'Timestamp (const Timestamp &)' inline
|   `-ParmVarDecl 0x55cf2bc591a8 <col:39, col:56> col:56 b 'const Timestamp &'
|-FriendDecl 0x55cf2bc595a8 <line:720:5, col:73> col:30
| `-FunctionDecl 0x55cf2bc594e8 parent 0x55cf2b759278 <col:5, col:73> col:30 used operator+= 'Timestamp &(Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x55cf2bc59398 <col:41, col:52> col:52 a 'Timestamp &'
|   `-ParmVarDecl 0x55cf2bc59410 <col:55, col:72> col:72 b 'const Timestamp &'
|-FriendDecl 0x55cf2bc597c8 <line:721:5, col:73> col:30
| `-FunctionDecl 0x55cf2bc59708 parent 0x55cf2b759278 <col:5, col:73> col:30 used operator-= 'Timestamp &(Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x55cf2bc595f8 <col:41, col:52> col:52 a 'Timestamp &'
|   `-ParmVarDecl 0x55cf2bc59670 <col:55, col:72> col:72 b 'const Timestamp &'
|-CXXConstructorDecl 0x55cf2bc5f050 <line:122:7> col:7 implicit used constexpr Timestamp 'void (const Timestamp &) noexcept' inline default trivial
| |-ParmVarDecl 0x55cf2bc5f138 <col:7> col:7 used 'const Timestamp &'
| |-CXXCtorInitializer Field 0x55cf2bc57cf8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55cf2bc5fba8 <col:7> 'Timestamp::rep_t' 'void (const Timestamp::rep_t &) noexcept'
| |   `-MemberExpr 0x55cf2bc5fb60 <col:7> 'const Timestamp::rep_t' lvalue ._t 0x55cf2bc57cf8
| |     `-DeclRefExpr 0x55cf2bc5fb40 <col:7> 'const Timestamp' lvalue ParmVar 0x55cf2bc5f138 '' 'const Timestamp &'
| `-CompoundStmt 0x55cf2bc5fc08 <col:7>
|-CXXConstructorDecl 0x55cf2bc5f2b8 <col:7> col:7 implicit used constexpr Timestamp 'void (Timestamp &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55cf2bc5f3c8 <col:7> col:7 used 'Timestamp &&'
| |-CXXCtorInitializer Field 0x55cf2bc57cf8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55cf2bc5fea8 <col:7> 'Timestamp::rep_t' 'void (Timestamp::rep_t &&) noexcept'
| |   `-MemberExpr 0x55cf2bc5fe50 <col:7> 'Timestamp::rep_t' xvalue ._t 0x55cf2bc57cf8
| |     `-CXXStaticCastExpr 0x55cf2bc5fe20 <col:7> 'Timestamp' xvalue static_cast<class Timestamp &&> <NoOp>
| |       `-DeclRefExpr 0x55cf2bc5fdf0 <col:7> 'Timestamp' lvalue ParmVar 0x55cf2bc5f3c8 '' 'Timestamp &&'
| `-CompoundStmt 0x55cf2bc5ff08 <col:7>
|-CXXDestructorDecl 0x55cf2bc5f478 <col:7> col:7 implicit referenced ~Timestamp 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55cf2b965a68 <col:7> col:7 implicit used operator= 'Timestamp &(const Timestamp &) noexcept' inline default trivial
| |-ParmVarDecl 0x55cf2b965b78 <col:7> col:7 used 'const Timestamp &'
| `-CompoundStmt 0x55cf2b966668 <col:7>
|   |-CXXMemberCallExpr 0x55cf2b966608 <col:7> 'Timestamp::rep_t' lvalue
|   | |-MemberExpr 0x55cf2b966548 <col:7> '<bound member function type>' .operator= 0x55cf2b965c18
|   | | `-MemberExpr 0x55cf2b966458 <col:7> 'Timestamp::rep_t' lvalue ->_t 0x55cf2bc57cf8
|   | |   `-CXXThisExpr 0x55cf2b966448 <col:7> 'Timestamp *' this
|   | `-MemberExpr 0x55cf2b966518 <col:7> 'const Timestamp::rep_t' lvalue ._t 0x55cf2bc57cf8
|   |   `-DeclRefExpr 0x55cf2b9664f8 <col:7> 'const Timestamp' lvalue ParmVar 0x55cf2b965b78 '' 'const Timestamp &'
|   `-ReturnStmt 0x55cf2b966658 <col:7>
|     `-UnaryOperator 0x55cf2b966640 <col:7> 'Timestamp' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55cf2b966630 <col:7> 'Timestamp *' this
`-CXXMethodDecl 0x55cf2b965f18 <col:7> col:7 implicit used operator= 'Timestamp &(Timestamp &&) noexcept' inline default trivial
  |-ParmVarDecl 0x55cf2b966028 <col:7> col:7 used 'Timestamp &&'
  `-CompoundStmt 0x55cf2bd9afc8 <col:7>
    |-CXXMemberCallExpr 0x55cf2bd9af68 <col:7> 'Timestamp::rep_t' lvalue
    | |-MemberExpr 0x55cf2bd9aed0 <col:7> '<bound member function type>' .operator= 0x55cf2b965d98
    | | `-MemberExpr 0x55cf2bd9ada0 <col:7> 'Timestamp::rep_t' lvalue ->_t 0x55cf2bc57cf8
    | |   `-CXXThisExpr 0x55cf2bd9ad90 <col:7> 'Timestamp *' this
    | `-MemberExpr 0x55cf2bd9aea0 <col:7> 'Timestamp::rep_t' xvalue ._t 0x55cf2bc57cf8
    |   `-CXXStaticCastExpr 0x55cf2bd9ae70 <col:7> 'Timestamp' xvalue static_cast<class Timestamp &&> <NoOp>
    |     `-DeclRefExpr 0x55cf2bd9ae40 <col:7> 'Timestamp' lvalue ParmVar 0x55cf2b966028 '' 'Timestamp &&'
    `-ReturnStmt 0x55cf2bd9afb8 <col:7>
      `-UnaryOperator 0x55cf2bd9afa0 <col:7> 'Timestamp' lvalue prefix '*' cannot overflow
        `-CXXThisExpr 0x55cf2bd9af90 <col:7> 'Timestamp *' this

Layout: <CGRecordLayout
  LLVMType:%class.Timestamp = type { %"union.Timestamp::rep_t" }
  NonVirtualBaseLLVMType:%class.Timestamp = type { %"union.Timestamp::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55cf2bda55d8 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'TimerSet::heap_element'
|-CXXRecordDecl 0x55cf2bda57e8 prev 0x55cf2bda55d8 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55cf2bda6a30 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<heap_element>::type':'sized_array_memory<16>'
| `-ElaboratedType 0x55cf2bda69e0 'typename array_memory<heap_element>::type' sugar
|   `-TypedefType 0x55cf2bda69c0 'conditional<true, sized_array_memory<16>, typed_array_memory<TimerSet::heap_element> >::type' sugar
|     |-Typedef 0x55cf2bda6870 'type'
|     `-SubstTemplateTypeParmType 0x55cf2bda6690 'sized_array_memory<16>' sugar
|       |-TemplateTypeParmType 0x55cf2ba22420 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55cf2ba223c8 'T'
|       `-RecordType 0x55cf2bda61a0 'sized_array_memory<16>'
|         `-ClassTemplateSpecialization 0x55cf2bda60b8 'sized_array_memory'
|-FieldDecl 0x55cf2bdaa660 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<TimerSet::heap_element>::array_memory_type>':'vector_memory<sized_array_memory<16> >' mutable
|-AccessSpecDecl 0x55cf2bdaa6b0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55cf2bdaa6e8 <line:118:5, col:15> col:15 value_type 'TimerSet::heap_element':'TimerSet::heap_element'
| `-SubstTemplateTypeParmType 0x55cf2bda5880 'TimerSet::heap_element' sugar
|   |-TemplateTypeParmType 0x55cf2ba5a110 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55cf2ba5a0b8 'T'
|   `-RecordType 0x55cf2bda47e0 'TimerSet::heap_element'
|     `-CXXRecord 0x55cf2bda4750 'heap_element'
|-TypedefDecl 0x55cf2bdaa7a8 <line:119:5, col:16> col:16 reference 'TimerSet::heap_element &'
| `-LValueReferenceType 0x55cf2bdaa770 'TimerSet::heap_element &'
|   `-SubstTemplateTypeParmType 0x55cf2bda5880 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x55cf2ba5a110 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55cf2ba5a0b8 'T'
|     `-RecordType 0x55cf2bda47e0 'TimerSet::heap_element'
|       `-CXXRecord 0x55cf2bda4750 'heap_element'
|-TypedefDecl 0x55cf2bdaa838 <line:120:5, col:22> col:22 const_reference 'const TimerSet::heap_element &'
| `-LValueReferenceType 0x55cf2bdaa800 'const TimerSet::heap_element &'
|   `-QualType 0x55cf2bda5881 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x55cf2bda5880 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x55cf2ba5a110 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55cf2ba5a0b8 'T'
|       `-RecordType 0x55cf2bda47e0 'TimerSet::heap_element'
|         `-CXXRecord 0x55cf2bda4750 'heap_element'
|-TypedefDecl 0x55cf2bdaa8c8 <line:121:5, col:16> col:16 pointer 'TimerSet::heap_element *'
| `-PointerType 0x55cf2bdaa890 'TimerSet::heap_element *'
|   `-SubstTemplateTypeParmType 0x55cf2bda5880 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x55cf2ba5a110 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55cf2ba5a0b8 'T'
|     `-RecordType 0x55cf2bda47e0 'TimerSet::heap_element'
|       `-CXXRecord 0x55cf2bda4750 'heap_element'
|-TypedefDecl 0x55cf2bdaa988 <line:122:5, col:22> col:22 const_pointer 'const TimerSet::heap_element *'
| `-PointerType 0x55cf2bdaa950 'const TimerSet::heap_element *'
|   `-QualType 0x55cf2bda5881 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x55cf2bda5880 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x55cf2ba5a110 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55cf2ba5a0b8 'T'
|       `-RecordType 0x55cf2bda47e0 'TimerSet::heap_element'
|         `-CXXRecord 0x55cf2bda4750 'heap_element'
|-TypedefDecl 0x55cf2bdab5e0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<heap_element>::type':'const TimerSet::heap_element &'
| `-ElaboratedType 0x55cf2bdab590 'typename fast_argument<heap_element>::type' sugar
|   `-TypedefType 0x55cf2bdab570 'fast_argument<TimerSet::heap_element, true>::type' sugar
|     |-Typedef 0x55cf2bdab4a8 'type'
|     `-LValueReferenceType 0x55cf2bdab470 'const TimerSet::heap_element &'
|       `-QualType 0x55cf2bdab211 'const TimerSet::heap_element' const
|         `-SubstTemplateTypeParmType 0x55cf2bdab210 'TimerSet::heap_element' sugar
|           |-TemplateTypeParmType 0x55cf2ba2caf0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55cf2ba2ca98 'T'
|           `-RecordType 0x55cf2bda47e0 'TimerSet::heap_element'
|             `-CXXRecord 0x55cf2bda4750 'heap_element'
|-TypedefDecl 0x55cf2bdab648 <line:126:5, col:22> col:22 const_access_type 'const TimerSet::heap_element &'
| `-LValueReferenceType 0x55cf2bdaa800 'const TimerSet::heap_element &'
|   `-QualType 0x55cf2bda5881 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x55cf2bda5880 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x55cf2ba5a110 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55cf2ba5a0b8 'T'
|       `-RecordType 0x55cf2bda47e0 'TimerSet::heap_element'
|         `-CXXRecord 0x55cf2bda4750 'heap_element'
|-TypedefDecl 0x55cf2bdab6a0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55cf2b759370 'int'
|-TypedefDecl 0x55cf2bdab708 <line:130:5, col:16> col:16 iterator 'TimerSet::heap_element *'
| `-PointerType 0x55cf2bdaa890 'TimerSet::heap_element *'
|   `-SubstTemplateTypeParmType 0x55cf2bda5880 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x55cf2ba5a110 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55cf2ba5a0b8 'T'
|     `-RecordType 0x55cf2bda47e0 'TimerSet::heap_element'
|       `-CXXRecord 0x55cf2bda4750 'heap_element'
|-TypedefDecl 0x55cf2bdab770 <line:131:5, col:22> col:22 const_iterator 'const TimerSet::heap_element *'
| `-PointerType 0x55cf2bdaa950 'const TimerSet::heap_element *'
|   `-QualType 0x55cf2bda5881 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x55cf2bda5880 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x55cf2ba5a110 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55cf2ba5a0b8 'T'
|       `-RecordType 0x55cf2bda47e0 'TimerSet::heap_element'
|         `-CXXRecord 0x55cf2bda4750 'heap_element'
|-EnumDecl 0x55cf2bdab7c8 <line:134:5> col:5
| `-EnumConstantDecl 0x55cf2bdab8c0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<TimerSet::heap_element>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55cf2bdab8a0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55cf2ba5baa8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55cf2ba5ba80 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55cf2ba5ba60 <col:40> 'int' 1
|-CXXConstructorDecl 0x55cf2bdab948 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55cf2bdabbd8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x55cf2bdaba00 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55cf2bdabaa0 <col:41, col:61> col:61 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXConstructorDecl 0x55cf2bdabe98 <line:139:5, col:37> col:12 Vector 'void (const Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x55cf2bdabd80 <col:19, col:36> col:36 x 'const Vector<TimerSet::heap_element> &'
|-CXXConstructorDecl 0x55cf2bdac158 <line:141:5, col:32> col:12 Vector 'void (Vector<TimerSet::heap_element> &&)' inline
| `-ParmVarDecl 0x55cf2bdac040 <col:19, col:31> col:31 x 'Vector<TimerSet::heap_element> &&'
|-CXXMethodDecl 0x55cf2bdac4a0 <line:144:5, col:51> col:23 operator= 'Vector<TimerSet::heap_element> &(const Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x55cf2bdac380 <col:33, col:50> col:50 x 'const Vector<TimerSet::heap_element> &'
|-CXXMethodDecl 0x55cf2bdac7b0 <line:146:5, col:46> col:23 operator= 'Vector<TimerSet::heap_element> &(Vector<TimerSet::heap_element> &&)' inline
| `-ParmVarDecl 0x55cf2bdac690 <col:33, col:45> col:45 x 'Vector<TimerSet::heap_element> &&'
|-CXXMethodDecl 0x55cf2bdacaa0 <line:148:5, col:70> col:23 assign 'Vector<TimerSet::heap_element> &(Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x55cf2bdac8e8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55cf2bdac960 <col:43, col:69> col:63 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x55cf2bdacbf8 <line:150:5, col:55> col:49 begin 'Vector<TimerSet::heap_element>::iterator ()'
| |-NoInlineAttr 0x55cf2bdaccd8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55cf2bdacd30 <col:30> Inherited
|-CXXMethodDecl 0x55cf2bdacd78 <line:151:5, col:53> col:49 end 'Vector<TimerSet::heap_element>::iterator ()'
| |-NoInlineAttr 0x55cf2bdace28 <col:20> Inherited
| `-OptimizeNoneAttr 0x55cf2bdace80 <col:30> Inherited
|-CXXMethodDecl 0x55cf2bdacf48 <line:152:5, col:63> col:55 begin 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x55cf2bdacff8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55cf2bdad050 <col:30> Inherited
|-CXXMethodDecl 0x55cf2bdad098 <line:153:5, col:61> col:55 end 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x55cf2bdad148 <col:20> Inherited
| `-OptimizeNoneAttr 0x55cf2bdad1a0 <col:30> Inherited
|-CXXMethodDecl 0x55cf2bdad1e8 <line:154:5, col:64> col:55 cbegin 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x55cf2bdad298 <col:20> Inherited
| `-OptimizeNoneAttr 0x55cf2bdad2f0 <col:30> Inherited
|-CXXMethodDecl 0x55cf2bdad338 <line:155:5, col:62> col:55 cend 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x55cf2bdad3e8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55cf2bdad440 <col:30> Inherited
|-CXXMethodDecl 0x55cf2bdad468 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55cf2bdad518 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55cf2bdad5c8 <line:159:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x55cf2bdad788 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x55cf2bdad678 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55cf2bdad6f0 <col:37, col:63> col:57 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x55cf2bdad8d8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55cf2bdad848 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55cf2bdada88 <line:163:5, col:65> col:43 operator[] 'TimerSet::heap_element &(Vector::size_type)'
| |-ParmVarDecl 0x55cf2bdad990 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55cf2bdadb40 <col:20>
| `-OptimizeNoneAttr 0x55cf2bdadb98 <col:30>
|-CXXMethodDecl 0x55cf2bdadcb8 <line:164:5, col:73> col:49 operator[] 'const TimerSet::heap_element &(Vector::size_type) const'
| |-ParmVarDecl 0x55cf2bdadbc0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55cf2bdadd70 <col:20>
| `-OptimizeNoneAttr 0x55cf2bdaddc8 <col:30>
|-CXXMethodDecl 0x55cf2bdade80 <line:165:5, col:29> col:15 at 'TimerSet::heap_element &(Vector::size_type)' inline
| `-ParmVarDecl 0x55cf2bdaddf0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55cf2bdadfc8 <line:166:5, col:37> col:21 at 'const TimerSet::heap_element &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55cf2bdadf38 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55cf2bdae0f8 <line:167:5, col:21> col:15 front 'TimerSet::heap_element &()' inline
|-CXXMethodDecl 0x55cf2bdae228 <line:168:5, col:29> col:21 front 'const TimerSet::heap_element &() const' inline
|-CXXMethodDecl 0x55cf2bdae2f8 <line:169:5, col:20> col:15 back 'TimerSet::heap_element &()' inline
|-CXXMethodDecl 0x55cf2bdae3c8 <line:170:5, col:28> col:21 back 'const TimerSet::heap_element &() const' inline
|-CXXMethodDecl 0x55cf2bdaf558 <line:172:5, col:39> col:15 used unchecked_at 'TimerSet::heap_element &(Vector::size_type)' inline
| `-ParmVarDecl 0x55cf2bdae478 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55cf2bdaf6a0 <line:173:5, col:47> col:21 unchecked_at 'const TimerSet::heap_element &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55cf2bdaf610 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55cf2bdaf7e8 <line:174:5, col:59> col:15 at_u 'TimerSet::heap_element &(Vector::size_type)' inline
| |-ParmVarDecl 0x55cf2bdaf758 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55cf2bdaf8a0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55cf2bdaf9a0 <line:175:5, col:71> col:21 at_u 'const TimerSet::heap_element &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55cf2bdaf910 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55cf2bdafa58 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55cf2bdafb18 <line:177:5, col:20> col:15 data 'TimerSet::heap_element *()' inline
|-CXXMethodDecl 0x55cf2bdafc18 <line:178:5, col:28> col:21 data 'const TimerSet::heap_element *() const' inline
|-CXXMethodDecl 0x55cf2bdafdc8 <line:180:5, col:48> col:17 push_back 'void (Vector<TimerSet::heap_element>::value_argument_type)' inline
| `-ParmVarDecl 0x55cf2bdafcd8 <col:27, col:47> col:47 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-FunctionTemplateDecl 0x55cf2bdb0588 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55cf2bdafe80 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<TimerSet::heap_element>':'fast_argument<TimerSet::heap_element, true>'
| `-CXXMethodDecl 0x55cf2bdb04e8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (TimerSet::heap_element &&)' inline
|   `-ParmVarDecl 0x55cf2bdb03e8 <col:58, col:62> col:62 v 'TimerSet::heap_element &&'
|-CXXMethodDecl 0x55cf2bdb0668 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55cf2bdb07b8 <line:186:5, col:49> col:17 push_front 'void (Vector<TimerSet::heap_element>::value_argument_type)' inline
| `-ParmVarDecl 0x55cf2bdb0728 <col:28, col:48> col:48 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x55cf2bdb0870 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55cf2bdb0ab8 <line:189:5, col:62> col:21 insert 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x55cf2bdb0930 <col:28, col:37> col:37 it 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
| `-ParmVarDecl 0x55cf2bdb09a8 <col:41, col:61> col:61 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x55cf2bdb0c78 <line:190:5, col:38> col:21 erase 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator)' inline
| `-ParmVarDecl 0x55cf2bdb0b88 <col:27, col:36> col:36 it 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
|-CXXMethodDecl 0x55cf2bdb0ec8 <line:191:5, col:49> col:21 erase 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator, Vector<TimerSet::heap_element>::iterator)' inline
| |-ParmVarDecl 0x55cf2bdb0d40 <col:27, col:36> col:36 a 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
| `-ParmVarDecl 0x55cf2bdb0db8 <col:39, col:48> col:48 b 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
|-CXXMethodDecl 0x55cf2bdb0f88 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55cf2bdb11e8 <line:195:5, col:34> col:17 swap 'void (Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x55cf2bdb10f0 <col:22, col:33> col:33 x 'Vector<TimerSet::heap_element> &'
`-CXXDestructorDecl 0x55cf2bdb12b8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55cf2bdb12b8

Layout: <CGRecordLayout
  LLVMType:%class.Vector.13 = type { %class.vector_memory.9 }
  NonVirtualBaseLLVMType:%class.Vector.13 = type { %class.vector_memory.9 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55cf2bdb1400 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Timer *'
|-CXXRecordDecl 0x55cf2bdb1608 prev 0x55cf2bdb1400 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55cf2bdb2750 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<Timer *>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x55cf2bdb2700 'typename array_memory<Timer *>::type' sugar
|   `-TypedefType 0x55cf2bdb26e0 'conditional<true, sized_array_memory<8>, typed_array_memory<Timer *> >::type' sugar
|     |-Typedef 0x55cf2bdb2590 'type'
|     `-SubstTemplateTypeParmType 0x55cf2bdb23b0 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x55cf2ba22420 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55cf2ba223c8 'T'
|       `-RecordType 0x55cf2bdb1f00 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x55cf2bdb1e18 'sized_array_memory'
|-FieldDecl 0x55cf2bdb6380 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Timer *>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x55cf2bdb63d0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55cf2bdb6408 <line:118:5, col:15> col:15 value_type 'Timer *':'Timer *'
| `-SubstTemplateTypeParmType 0x55cf2bdb16a0 'Timer *' sugar
|   |-TemplateTypeParmType 0x55cf2ba5a110 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55cf2ba5a0b8 'T'
|   `-PointerType 0x55cf2bcbede0 'Timer *'
|     `-RecordType 0x55cf2bcbdf30 'Timer'
|       `-CXXRecord 0x55cf2bd947d8 'Timer'
|-TypedefDecl 0x55cf2bdb64c8 <line:119:5, col:16> col:16 reference 'Timer *&'
| `-LValueReferenceType 0x55cf2bdb6490 'Timer *&'
|   `-SubstTemplateTypeParmType 0x55cf2bdb16a0 'Timer *' sugar
|     |-TemplateTypeParmType 0x55cf2ba5a110 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55cf2ba5a0b8 'T'
|     `-PointerType 0x55cf2bcbede0 'Timer *'
|       `-RecordType 0x55cf2bcbdf30 'Timer'
|         `-CXXRecord 0x55cf2bd947d8 'Timer'
|-TypedefDecl 0x55cf2bdb6588 <line:120:5, col:22> col:22 const_reference 'Timer *const &'
| `-LValueReferenceType 0x55cf2bdb6550 'Timer *const &'
|   `-QualType 0x55cf2bdb16a1 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x55cf2bdb16a0 'Timer *' sugar
|       |-TemplateTypeParmType 0x55cf2ba5a110 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55cf2ba5a0b8 'T'
|       `-PointerType 0x55cf2bcbede0 'Timer *'
|         `-RecordType 0x55cf2bcbdf30 'Timer'
|           `-CXXRecord 0x55cf2bd947d8 'Timer'
|-TypedefDecl 0x55cf2bdb6648 <line:121:5, col:16> col:16 pointer 'Timer **'
| `-PointerType 0x55cf2bdb6610 'Timer **'
|   `-SubstTemplateTypeParmType 0x55cf2bdb16a0 'Timer *' sugar
|     |-TemplateTypeParmType 0x55cf2ba5a110 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55cf2ba5a0b8 'T'
|     `-PointerType 0x55cf2bcbede0 'Timer *'
|       `-RecordType 0x55cf2bcbdf30 'Timer'
|         `-CXXRecord 0x55cf2bd947d8 'Timer'
|-TypedefDecl 0x55cf2bdb6708 <line:122:5, col:22> col:22 const_pointer 'Timer *const *'
| `-PointerType 0x55cf2bdb66d0 'Timer *const *'
|   `-QualType 0x55cf2bdb16a1 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x55cf2bdb16a0 'Timer *' sugar
|       |-TemplateTypeParmType 0x55cf2ba5a110 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55cf2ba5a0b8 'T'
|       `-PointerType 0x55cf2bcbede0 'Timer *'
|         `-RecordType 0x55cf2bcbdf30 'Timer'
|           `-CXXRecord 0x55cf2bd947d8 'Timer'
|-TypedefDecl 0x55cf2bdb72e0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<Timer *>::type':'Timer *'
| `-ElaboratedType 0x55cf2bdb7290 'typename fast_argument<Timer *>::type' sugar
|   `-TypedefType 0x55cf2bdb7270 'fast_argument<Timer *, false>::type' sugar
|     |-Typedef 0x55cf2bdb7200 'type'
|     `-SubstTemplateTypeParmType 0x55cf2bdb6fc0 'Timer *' sugar
|       |-TemplateTypeParmType 0x55cf2ba2d220 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55cf2ba2d1d0 'T'
|       `-PointerType 0x55cf2bcbede0 'Timer *'
|         `-RecordType 0x55cf2bcbdf30 'Timer'
|           `-CXXRecord 0x55cf2bd947d8 'Timer'
|-TypedefDecl 0x55cf2bdb7348 <line:126:5, col:22> col:22 const_access_type 'Timer *const &'
| `-LValueReferenceType 0x55cf2bdb6550 'Timer *const &'
|   `-QualType 0x55cf2bdb16a1 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x55cf2bdb16a0 'Timer *' sugar
|       |-TemplateTypeParmType 0x55cf2ba5a110 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55cf2ba5a0b8 'T'
|       `-PointerType 0x55cf2bcbede0 'Timer *'
|         `-RecordType 0x55cf2bcbdf30 'Timer'
|           `-CXXRecord 0x55cf2bd947d8 'Timer'
|-TypedefDecl 0x55cf2bdb73a0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55cf2b759370 'int'
|-TypedefDecl 0x55cf2bdb7408 <line:130:5, col:16> col:16 iterator 'Timer **'
| `-PointerType 0x55cf2bdb6610 'Timer **'
|   `-SubstTemplateTypeParmType 0x55cf2bdb16a0 'Timer *' sugar
|     |-TemplateTypeParmType 0x55cf2ba5a110 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55cf2ba5a0b8 'T'
|     `-PointerType 0x55cf2bcbede0 'Timer *'
|       `-RecordType 0x55cf2bcbdf30 'Timer'
|         `-CXXRecord 0x55cf2bd947d8 'Timer'
|-TypedefDecl 0x55cf2bdb7470 <line:131:5, col:22> col:22 const_iterator 'Timer *const *'
| `-PointerType 0x55cf2bdb66d0 'Timer *const *'
|   `-QualType 0x55cf2bdb16a1 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x55cf2bdb16a0 'Timer *' sugar
|       |-TemplateTypeParmType 0x55cf2ba5a110 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55cf2ba5a0b8 'T'
|       `-PointerType 0x55cf2bcbede0 'Timer *'
|         `-RecordType 0x55cf2bcbdf30 'Timer'
|           `-CXXRecord 0x55cf2bd947d8 'Timer'
|-EnumDecl 0x55cf2bdb8930 <line:134:5> col:5
| `-EnumConstantDecl 0x55cf2bdb8a20 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Timer *>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55cf2bdb8a00 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55cf2ba5baa8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55cf2ba5ba80 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55cf2ba5ba60 <col:40> 'int' 1
|-CXXConstructorDecl 0x55cf2bdb8aa8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55cf2bdb8d38 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x55cf2bdb8b60 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55cf2bdb8c00 <col:41, col:61> col:61 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXConstructorDecl 0x55cf2bdb8ff8 <line:139:5, col:37> col:12 Vector 'void (const Vector<Timer *> &)' inline
| `-ParmVarDecl 0x55cf2bdb8ee0 <col:19, col:36> col:36 x 'const Vector<Timer *> &'
|-CXXConstructorDecl 0x55cf2bdb92b8 <line:141:5, col:32> col:12 Vector 'void (Vector<Timer *> &&)' inline
| `-ParmVarDecl 0x55cf2bdb91a0 <col:19, col:31> col:31 x 'Vector<Timer *> &&'
|-CXXMethodDecl 0x55cf2bdb9600 <line:144:5, col:51> col:23 operator= 'Vector<Timer *> &(const Vector<Timer *> &)' inline
| `-ParmVarDecl 0x55cf2bdb94e0 <col:33, col:50> col:50 x 'const Vector<Timer *> &'
|-CXXMethodDecl 0x55cf2bdb9910 <line:146:5, col:46> col:23 operator= 'Vector<Timer *> &(Vector<Timer *> &&)' inline
| `-ParmVarDecl 0x55cf2bdb97f0 <col:33, col:45> col:45 x 'Vector<Timer *> &&'
|-CXXMethodDecl 0x55cf2bdb9c00 <line:148:5, col:70> col:23 assign 'Vector<Timer *> &(Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x55cf2bdb9a48 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55cf2bdb9ac0 <col:43, col:69> col:63 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x55cf2bdb9d58 <line:150:5, col:55> col:49 begin 'Vector<Timer *>::iterator ()'
| |-NoInlineAttr 0x55cf2bdb9e38 <col:20> Inherited
| `-OptimizeNoneAttr 0x55cf2bdb9e90 <col:30> Inherited
|-CXXMethodDecl 0x55cf2bdb9ed8 <line:151:5, col:53> col:49 end 'Vector<Timer *>::iterator ()'
| |-NoInlineAttr 0x55cf2bdb9f88 <col:20> Inherited
| `-OptimizeNoneAttr 0x55cf2bdb9fe0 <col:30> Inherited
|-CXXMethodDecl 0x55cf2bdba0a8 <line:152:5, col:63> col:55 begin 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x55cf2bdba158 <col:20> Inherited
| `-OptimizeNoneAttr 0x55cf2bdba1b0 <col:30> Inherited
|-CXXMethodDecl 0x55cf2bdba1f8 <line:153:5, col:61> col:55 end 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x55cf2bdba2a8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55cf2bdba300 <col:30> Inherited
|-CXXMethodDecl 0x55cf2bdba348 <line:154:5, col:64> col:55 cbegin 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x55cf2bdba3f8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55cf2bdba450 <col:30> Inherited
|-CXXMethodDecl 0x55cf2bdba498 <line:155:5, col:62> col:55 cend 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x55cf2bdba548 <col:20> Inherited
| `-OptimizeNoneAttr 0x55cf2bdba5a0 <col:30> Inherited
|-CXXMethodDecl 0x55cf2bdba5c8 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55cf2bdba678 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55cf2bdba728 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55cf2bdba8e8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x55cf2bdba7d8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55cf2bdba850 <col:37, col:63> col:57 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x55cf2bdbaa38 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55cf2bdba9a8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55cf2bdbabe8 <line:163:5, col:65> col:43 operator[] 'Timer *&(Vector::size_type)'
| |-ParmVarDecl 0x55cf2bdbaaf0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55cf2bdbaca0 <col:20>
| `-OptimizeNoneAttr 0x55cf2bdbacf8 <col:30>
|-CXXMethodDecl 0x55cf2bdbae18 <line:164:5, col:73> col:49 operator[] 'Timer *const &(Vector::size_type) const'
| |-ParmVarDecl 0x55cf2bdbad20 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55cf2bdbaed0 <col:20>
| `-OptimizeNoneAttr 0x55cf2bdbaf28 <col:30>
|-CXXMethodDecl 0x55cf2bdbafe0 <line:165:5, col:29> col:15 at 'Timer *&(Vector::size_type)' inline
| `-ParmVarDecl 0x55cf2bdbaf50 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55cf2bdbb128 <line:166:5, col:37> col:21 at 'Timer *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55cf2bdbb098 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55cf2bdbb258 <line:167:5, col:21> col:15 front 'Timer *&()' inline
|-CXXMethodDecl 0x55cf2bdbb388 <line:168:5, col:29> col:21 front 'Timer *const &() const' inline
|-CXXMethodDecl 0x55cf2bdbb458 <line:169:5, col:20> col:15 back 'Timer *&()' inline
|-CXXMethodDecl 0x55cf2bdbb528 <line:170:5, col:28> col:21 back 'Timer *const &() const' inline
|-CXXMethodDecl 0x55cf2bdbb668 <line:172:5, col:39> col:15 unchecked_at 'Timer *&(Vector::size_type)' inline
| `-ParmVarDecl 0x55cf2bdbb5d8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55cf2bdbb7b0 <line:173:5, col:47> col:21 unchecked_at 'Timer *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55cf2bdbb720 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55cf2bdbb8f8 <line:174:5, col:59> col:15 at_u 'Timer *&(Vector::size_type)' inline
| |-ParmVarDecl 0x55cf2bdbb868 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55cf2bdbb9b0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55cf2bdbbab0 <line:175:5, col:71> col:21 at_u 'Timer *const &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55cf2bdbba20 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55cf2bdbbb68 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55cf2bdbbc28 <line:177:5, col:20> col:15 data 'Timer **()' inline
|-CXXMethodDecl 0x55cf2bdbbd28 <line:178:5, col:28> col:21 data 'Timer *const *() const' inline
|-CXXMethodDecl 0x55cf2bdbbea8 <line:180:5, col:48> col:17 push_back 'void (Vector<Timer *>::value_argument_type)' inline
| `-ParmVarDecl 0x55cf2bdbbde8 <col:27, col:47> col:47 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-FunctionTemplateDecl 0x55cf2bdbc668 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55cf2bdbbf60 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Timer *>':'fast_argument<Timer *, false>'
| `-CXXMethodDecl 0x55cf2bdbc5c8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Timer *&&)' inline
|   `-ParmVarDecl 0x55cf2bdbc4c8 <col:58, col:62> col:62 v 'Timer *&&'
|-CXXMethodDecl 0x55cf2bdbc748 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55cf2bdbc898 <line:186:5, col:49> col:17 push_front 'void (Vector<Timer *>::value_argument_type)' inline
| `-ParmVarDecl 0x55cf2bdbc808 <col:28, col:48> col:48 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x55cf2bdbc950 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55cf2bdbcb98 <line:189:5, col:62> col:21 insert 'Vector<Timer *>::iterator (Vector<Timer *>::iterator, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x55cf2bdbca10 <col:28, col:37> col:37 it 'Vector<Timer *>::iterator':'Timer **'
| `-ParmVarDecl 0x55cf2bdbca88 <col:41, col:61> col:61 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x55cf2bdbcd58 <line:190:5, col:38> col:21 erase 'Vector<Timer *>::iterator (Vector<Timer *>::iterator)' inline
| `-ParmVarDecl 0x55cf2bdbcc68 <col:27, col:36> col:36 it 'Vector<Timer *>::iterator':'Timer **'
|-CXXMethodDecl 0x55cf2bdbcfa8 <line:191:5, col:49> col:21 erase 'Vector<Timer *>::iterator (Vector<Timer *>::iterator, Vector<Timer *>::iterator)' inline
| |-ParmVarDecl 0x55cf2bdbce20 <col:27, col:36> col:36 a 'Vector<Timer *>::iterator':'Timer **'
| `-ParmVarDecl 0x55cf2bdbce98 <col:39, col:48> col:48 b 'Vector<Timer *>::iterator':'Timer **'
|-CXXMethodDecl 0x55cf2bdbd068 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55cf2bdbd2c8 <line:195:5, col:34> col:17 swap 'void (Vector<Timer *> &)' inline
| `-ParmVarDecl 0x55cf2bdbd1d0 <col:22, col:33> col:33 x 'Vector<Timer *> &'
`-CXXDestructorDecl 0x55cf2bdbd398 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55cf2bdbd398

Layout: <CGRecordLayout
  LLVMType:%class.Vector.14 = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector.14 = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55cf2bd91210 <../dummy_inc/click/sync.hh:194:1, line:211:1> line:194:7 referenced class SimpleSpinlock definition
|-DefinitionData empty standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55cf2bd91328 <col:1, col:7> col:7 implicit referenced class SimpleSpinlock
|-AccessSpecDecl 0x55cf2bd913b8 <col:24, col:30> col:24 public
|-CXXConstructorDecl 0x55cf2bd91440 <line:196:5, col:27> col:12 SimpleSpinlock 'void ()' inline
|-CXXDestructorDecl 0x55cf2bd91530 <line:197:5, col:28> col:12 ~SimpleSpinlock 'void () noexcept' inline
|-CXXMethodDecl 0x55cf2bd91630 <line:199:5, col:25> col:17 acquire 'void ()' inline
|-CXXMethodDecl 0x55cf2bd916f0 <line:200:5, col:25> col:17 release 'void ()' inline
|-CXXMethodDecl 0x55cf2bd917b0 <line:201:5, col:25> col:17 attempt 'bool ()' inline
|-CXXConstructorDecl 0x55cf2bd918d8 <line:194:7> col:7 implicit constexpr SimpleSpinlock 'void (const SimpleSpinlock &)' inline default trivial noexcept-unevaluated 0x55cf2bd918d8
| `-ParmVarDecl 0x55cf2bd919e8 <col:7> col:7 'const SimpleSpinlock &'
`-CXXMethodDecl 0x55cf2bdbe148 <col:7> col:7 implicit operator= 'SimpleSpinlock &(const SimpleSpinlock &)' inline default trivial noexcept-unevaluated 0x55cf2bdbe148
  `-ParmVarDecl 0x55cf2bdbe258 <col:7> col:7 'const SimpleSpinlock &'

Layout: <CGRecordLayout
  LLVMType:%class.SimpleSpinlock = type { i8 }
  NonVirtualBaseLLVMType:%class.SimpleSpinlock.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55cf2bda38d0 prev 0x55cf2bd98a58 <../dummy_inc/click/timerset.hh:12:1, line:90:1> line:12:7 referenced class TimerSet definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x55cf2bda39c8 <col:1, col:7> col:7 implicit referenced class TimerSet
|-AccessSpecDecl 0x55cf2bda3a58 <col:18, col:24> col:18 public
|-CXXConstructorDecl 0x55cf2bda3ae0 <line:14:5, col:14> col:5 TimerSet 'void ()'
|-CXXMethodDecl 0x55cf2bda3bd8 <line:16:5, col:67> col:15 timer_expiry_steady 'Timestamp () const'
| `-CompoundStmt 0x55cf2bdbe5c0 <col:43, col:67>
|   `-ReturnStmt 0x55cf2bdbe5b0 <col:45, col:52>
|     `-CXXConstructExpr 0x55cf2bdbe580 <col:52> 'Timestamp' 'void (const Timestamp &) noexcept'
|       `-MemberExpr 0x55cf2bdbe550 <col:52> 'const Timestamp' lvalue ->_timer_expiry 0x55cf2bda53c0
|         `-CXXThisExpr 0x55cf2bdbe540 <col:52> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x55cf2bda3c98 <line:17:5, col:53> col:22 timer_expiry_steady_adjusted 'Timestamp () const' inline
|-CXXMethodDecl 0x55cf2bda3ea0 <line:19:5, col:64> col:16 next_timer_delay 'int (bool, Timestamp &) const' inline
| |-ParmVarDecl 0x55cf2bda3d48 <col:33, col:38> col:38 more_tasks 'bool'
| `-ParmVarDecl 0x55cf2bda3dc0 <col:50, col:61> col:61 t 'Timestamp &'
|-CXXMethodDecl 0x55cf2bda3f98 <line:22:5, col:23> col:12 next_timer 'Timer *()'
|-CXXMethodDecl 0x55cf2bda4060 <line:24:5, col:67> col:14 max_timer_stride 'unsigned int () const'
| `-CompoundStmt 0x55cf2bdbe640 <col:39, col:67>
|   `-ReturnStmt 0x55cf2bdbe630 <col:41, col:48>
|     `-ImplicitCastExpr 0x55cf2bdbe618 <col:48> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x55cf2bdbe5e8 <col:48> 'const unsigned int' lvalue ->_max_timer_stride 0x55cf2bda54a8
|         `-CXXThisExpr 0x55cf2bdbe5d8 <col:48> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x55cf2bda4128 <line:25:5, col:59> col:14 timer_stride 'unsigned int () const'
| `-CompoundStmt 0x55cf2bdbe6c0 <col:35, col:59>
|   `-ReturnStmt 0x55cf2bdbe6b0 <col:37, col:44>
|     `-ImplicitCastExpr 0x55cf2bdbe698 <col:44> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x55cf2bdbe668 <col:44> 'const unsigned int' lvalue ->_timer_stride 0x55cf2bda5510
|         `-CXXThisExpr 0x55cf2bdbe658 <col:44> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x55cf2bda4270 <line:26:5, col:52> col:10 set_max_timer_stride 'void (unsigned int)'
| `-ParmVarDecl 0x55cf2bda41e0 <col:31, col:40> col:40 timer_stride 'unsigned int'
|-CXXMethodDecl 0x55cf2bda43b8 <line:28:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x55cf2bda4328 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x55cf2bda45b8 <line:30:5, col:57> col:10 run_timers 'void (RouterThread *, Master *)'
| |-ParmVarDecl 0x55cf2bda4470 <col:21, col:35> col:35 thread 'RouterThread *'
| `-ParmVarDecl 0x55cf2bda44e8 <col:43, col:51> col:51 master 'Master *'
|-CXXMethodDecl 0x55cf2bda4688 <line:32:5, col:23> col:17 fence 'void ()' inline
|-AccessSpecDecl 0x55cf2bda4728 <line:34:3, col:10> col:3 private
|-CXXRecordDecl 0x55cf2bda4750 <line:36:5, line:45:5> line:36:12 referenced struct heap_element definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55cf2bda4868 <col:5, col:12> col:12 implicit referenced struct heap_element
| |-FieldDecl 0x55cf2bda4908 <line:37:2, col:12> col:12 referenced expiry_s 'Timestamp'
| |-FieldDecl 0x55cf2bda4968 <line:38:2, col:9> col:9 referenced t 'Timer *'
| `-CXXConstructorDecl 0x55cf2bda4a98 <line:42:2, line:44:2> line:42:2 heap_element 'void (Timer *)'
|   |-ParmVarDecl 0x55cf2bda49c8 <col:15, col:22> col:22 used t_ 'Timer *'
|   |-CXXCtorInitializer Field 0x55cf2bda4908 'expiry_s' 'Timestamp'
|   | `-CXXConstructExpr 0x55cf2bdbe798 <line:43:8, col:36> 'Timestamp' 'void (const Timestamp &) noexcept'
|   |   `-CXXMemberCallExpr 0x55cf2bdbe740 <col:17, col:35> 'const Timestamp' lvalue
|   |     `-MemberExpr 0x55cf2bdbe710 <col:17, col:21> '<bound member function type>' ->expiry_steady 0x55cf2bd95eb8
|   |       `-ImplicitCastExpr 0x55cf2bdbe760 <col:17> 'const Timer *' <NoOp>
|   |         `-ImplicitCastExpr 0x55cf2bdbe6f8 <col:17> 'Timer *' <LValueToRValue>
|   |           `-DeclRefExpr 0x55cf2bdbe6d8 <col:17> 'Timer *' lvalue ParmVar 0x55cf2bda49c8 't_' 'Timer *'
|   |-CXXCtorInitializer Field 0x55cf2bda4968 't' 'Timer *'
|   | `-ImplicitCastExpr 0x55cf2bdbe830 <col:41> 'Timer *' <LValueToRValue>
|   |   `-DeclRefExpr 0x55cf2bdbe7f0 <col:41> 'Timer *' lvalue ParmVar 0x55cf2bda49c8 't_' 'Timer *'
|   `-CompoundStmt 0x55cf2bdbe880 <col:45, line:44:2>
|-CXXRecordDecl 0x55cf2bda4b60 <line:46:5, line:50:5> line:46:12 struct heap_less definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55cf2bda4c78 <col:5, col:12> col:12 implicit struct heap_less
| `-CXXMethodDecl 0x55cf2bda4ec8 <line:47:2, line:49:2> line:47:14 operator() 'bool (const TimerSet::heap_element &, const TimerSet::heap_element &)' inline
|   |-ParmVarDecl 0x55cf2bda4d48 <col:25, col:45> col:45 used a 'const TimerSet::heap_element &'
|   |-ParmVarDecl 0x55cf2bda4dc0 <col:48, col:68> col:68 used b 'const TimerSet::heap_element &'
|   `-CompoundStmt 0x55cf2bdbe9b0 <col:71, line:49:2>
|     `-ReturnStmt 0x55cf2bdbe9a0 <line:48:6, col:28>
|       `-CXXOperatorCallExpr 0x55cf2bdbe968 <col:13, col:28> 'bool'
|         |-ImplicitCastExpr 0x55cf2bdbe950 <col:24> 'bool (*)(const Timestamp &, const Timestamp &)' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x55cf2bdbe930 <col:24> 'bool (const Timestamp &, const Timestamp &)' lvalue Function 0x55cf2bc7c148 'operator<' 'bool (const Timestamp &, const Timestamp &)'
|         |-MemberExpr 0x55cf2bdbe8b0 <col:13, col:15> 'const Timestamp' lvalue .expiry_s 0x55cf2bda4908
|         | `-DeclRefExpr 0x55cf2bdbe890 <col:13> 'const TimerSet::heap_element' lvalue ParmVar 0x55cf2bda4d48 'a' 'const TimerSet::heap_element &'
|         `-MemberExpr 0x55cf2bdbe900 <col:26, col:28> 'const Timestamp' lvalue .expiry_s 0x55cf2bda4908
|           `-DeclRefExpr 0x55cf2bdbe8e0 <col:26> 'const TimerSet::heap_element' lvalue ParmVar 0x55cf2bda4dc0 'b' 'const TimerSet::heap_element &'
|-CXXRecordDecl 0x55cf2bda4f90 <line:51:5, line:55:5> line:51:12 struct heap_place definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55cf2bda50a8 <col:5, col:12> col:12 implicit struct heap_place
| `-CXXMethodDecl 0x55cf2bda52c8 <line:52:2, line:54:2> line:52:14 operator() 'void (TimerSet::heap_element *, TimerSet::heap_element *)' inline
|   |-ParmVarDecl 0x55cf2bda5148 <col:25, col:39> col:39 used begin 'TimerSet::heap_element *'
|   |-ParmVarDecl 0x55cf2bda51c0 <col:46, col:60> col:60 used t 'TimerSet::heap_element *'
|   `-CompoundStmt 0x55cf2bdbebb8 <col:63, line:54:2>
|     `-BinaryOperator 0x55cf2bdbeb98 <line:53:6, col:39> 'int' lvalue '='
|       |-MemberExpr 0x55cf2bdbea48 <col:6, col:12> 'int' lvalue ->_schedpos1 0x55cf2bd97ef8
|       | `-ImplicitCastExpr 0x55cf2bdbea30 <col:6, col:9> 'Timer *' <LValueToRValue>
|       |   `-MemberExpr 0x55cf2bdbea00 <col:6, col:9> 'Timer *' lvalue ->t 0x55cf2bda4968
|       |     `-ImplicitCastExpr 0x55cf2bdbe9e8 <col:6> 'TimerSet::heap_element *' <LValueToRValue>
|       |       `-DeclRefExpr 0x55cf2bdbe9c8 <col:6> 'TimerSet::heap_element *' lvalue ParmVar 0x55cf2bda51c0 't' 'TimerSet::heap_element *'
|       `-ImplicitCastExpr 0x55cf2bdbeb80 <col:25, col:39> 'int' <IntegralCast>
|         `-BinaryOperator 0x55cf2bdbeb60 <col:25, col:39> 'long' '+'
|           |-ParenExpr 0x55cf2bdbeb08 <col:25, col:35> 'long'
|           | `-BinaryOperator 0x55cf2bdbeae8 <col:26, col:30> 'long' '-'
|           |   |-ImplicitCastExpr 0x55cf2bdbeab8 <col:26> 'TimerSet::heap_element *' <LValueToRValue>
|           |   | `-DeclRefExpr 0x55cf2bdbea78 <col:26> 'TimerSet::heap_element *' lvalue ParmVar 0x55cf2bda51c0 't' 'TimerSet::heap_element *'
|           |   `-ImplicitCastExpr 0x55cf2bdbead0 <col:30> 'TimerSet::heap_element *' <LValueToRValue>
|           |     `-DeclRefExpr 0x55cf2bdbea98 <col:30> 'TimerSet::heap_element *' lvalue ParmVar 0x55cf2bda5148 'begin' 'TimerSet::heap_element *'
|           `-ImplicitCastExpr 0x55cf2bdbeb48 <col:39> 'long' <IntegralCast>
|             `-IntegerLiteral 0x55cf2bdbeb28 <col:39> 'int' 1
|-FieldDecl 0x55cf2bda53c0 <line:58:5, col:15> col:15 referenced _timer_expiry 'Timestamp'
| `-AlignedAttr 0x55cf2bda5430 <col:44, col:53> aligned
|   `-ConstantExpr 0x55cf2bda5410 <col:52> 'int' Int: 8
|     `-IntegerLiteral 0x55cf2bda5390 <col:52> 'int' 8
|-FieldDecl 0x55cf2bda54a8 <line:60:5, col:14> col:14 referenced _max_timer_stride 'unsigned int'
|-FieldDecl 0x55cf2bda5510 <line:61:5, col:14> col:14 referenced _timer_stride 'unsigned int'
|-FieldDecl 0x55cf2bda5578 <line:62:5, col:14> col:14 _timer_count 'unsigned int'
|-FieldDecl 0x55cf2bdb13a0 <line:63:5, col:26> col:26 referenced _timer_heap 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>'
|-FieldDecl 0x55cf2bdbd480 <line:64:5, col:21> col:21 _timer_runchunk 'Vector<Timer *>':'Vector<Timer *>'
|-FieldDecl 0x55cf2bdbd4e0 <line:65:5, col:20> col:20 _timer_lock 'SimpleSpinlock'
|-FieldDecl 0x55cf2bdbd540 <line:71:5, col:15> col:15 _timer_check 'Timestamp'
|-FieldDecl 0x55cf2bdbd5a0 <line:72:5, col:14> col:14 _timer_check_reports 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55cf2bdbd690 <line:74:5, col:38> col:17 run_one_timer 'void (Timer *)' inline
| `-ParmVarDecl 0x55cf2bdbd600 <col:31, col:37> col:38 'Timer *'
|-CXXMethodDecl 0x55cf2bdbd758 <line:76:5, line:81:5> line:76:10 set_timer_expiry 'void ()'
| `-CompoundStmt 0x55cf2bdbf010 <col:29, line:81:5>
|   `-IfStmt 0x55cf2bdbefe8 <line:77:2, line:80:32> has_else
|     |-ImplicitCastExpr 0x55cf2bdbeca0 <line:77:6, col:23> 'bool' <IntegralToBoolean>
|     | `-CXXMemberCallExpr 0x55cf2bdbec40 <col:6, col:23> 'Vector::size_type':'int'
|     |   `-MemberExpr 0x55cf2bdbec10 <col:6, col:18> '<bound member function type>' .size 0x55cf2bdad468
|     |     `-ImplicitCastExpr 0x55cf2bdbec88 <col:6> 'const Vector<TimerSet::heap_element>' lvalue <NoOp>
|     |       `-MemberExpr 0x55cf2bdbebe0 <col:6> 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>' lvalue ->_timer_heap 0x55cf2bdb13a0
|     |         `-CXXThisExpr 0x55cf2bdbebd0 <col:6> 'TimerSet *' implicit this
|     |-CXXOperatorCallExpr 0x55cf2bdbee90 <line:78:6, col:50> 'Timestamp' lvalue
|     | |-ImplicitCastExpr 0x55cf2bdbee78 <col:20> 'Timestamp &(*)(const Timestamp &) noexcept' <FunctionToPointerDecay>
|     | | `-DeclRefExpr 0x55cf2bdbee58 <col:20> 'Timestamp &(const Timestamp &) noexcept' lvalue CXXMethod 0x55cf2b965a68 'operator=' 'Timestamp &(const Timestamp &) noexcept'
|     | |-MemberExpr 0x55cf2bdbecc8 <col:6> 'Timestamp' lvalue ->_timer_expiry 0x55cf2bda53c0
|     | | `-CXXThisExpr 0x55cf2bdbecb8 <col:6> 'TimerSet *' implicit this
|     | `-ImplicitCastExpr 0x55cf2bdbee40 <col:22, col:50> 'const Timestamp' lvalue <NoOp>
|     |   `-MemberExpr 0x55cf2bdbee10 <col:22, col:50> 'Timestamp' lvalue .expiry_s 0x55cf2bda4908
|     |     `-CXXMemberCallExpr 0x55cf2bdbede8 <col:22, col:48> 'TimerSet::heap_element':'TimerSet::heap_element' lvalue
|     |       |-MemberExpr 0x55cf2bdbedb8 <col:22, col:34> '<bound member function type>' .unchecked_at 0x55cf2bdaf558
|     |       | `-MemberExpr 0x55cf2bdbed08 <col:22> 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>' lvalue ->_timer_heap 0x55cf2bdb13a0
|     |       |   `-CXXThisExpr 0x55cf2bdbecf8 <col:22> 'TimerSet *' implicit this
|     |       `-IntegerLiteral 0x55cf2bdbed98 <col:47> 'int' 0
|     `-ExprWithCleanups 0x55cf2bdbefd0 <line:80:6, col:32> 'Timestamp' lvalue
|       `-CXXOperatorCallExpr 0x55cf2bdbef98 <col:6, col:32> 'Timestamp' lvalue
|         |-ImplicitCastExpr 0x55cf2bdbef80 <col:20> 'Timestamp &(*)(Timestamp &&) noexcept' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x55cf2bdbef60 <col:20> 'Timestamp &(Timestamp &&) noexcept' lvalue CXXMethod 0x55cf2b965f18 'operator=' 'Timestamp &(Timestamp &&) noexcept'
|         |-MemberExpr 0x55cf2bdbeed8 <col:6> 'Timestamp' lvalue ->_timer_expiry 0x55cf2bda53c0
|         | `-CXXThisExpr 0x55cf2bdbeec8 <col:6> 'TimerSet *' implicit this
|         `-MaterializeTemporaryExpr 0x55cf2bdbef48 <col:22, col:32> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55cf2bdbef18 <col:22, col:32> 'Timestamp' 'void ()'
|-CXXMethodDecl 0x55cf2bdbd898 <line:82:5, col:37> col:10 check_timer_expiry 'void (Timer *)'
| `-ParmVarDecl 0x55cf2bdbd808 <col:29, col:36> col:36 t 'Timer *'
|-CXXMethodDecl 0x55cf2bdbd960 <line:84:5, col:29> col:17 used lock_timers 'void ()' inline
|-CXXMethodDecl 0x55cf2bdbda20 <line:85:5, col:37> col:17 attempt_lock_timers 'bool ()' inline
|-CXXMethodDecl 0x55cf2bdbdae0 <line:86:5, col:31> col:17 used unlock_timers 'void ()' inline
|-FriendDecl 0x55cf2bdbdbd0 <line:88:5, col:18> col:12 'class Timer':'Timer'
|-CXXConstructorDecl 0x55cf2bdbdc38 <line:12:7> col:7 implicit TimerSet 'void (const TimerSet &)' inline default noexcept-unevaluated 0x55cf2bdbdc38
| `-ParmVarDecl 0x55cf2bdbdd48 <col:7> col:7 'const TimerSet &'
|-CXXConstructorDecl 0x55cf2bdbdde8 <col:7> col:7 implicit TimerSet 'void (TimerSet &&)' inline default noexcept-unevaluated 0x55cf2bdbdde8
| `-ParmVarDecl 0x55cf2bdbdef8 <col:7> col:7 'TimerSet &&'
|-CXXMethodDecl 0x55cf2bdbdf98 <col:7> col:7 implicit operator= 'TimerSet &(const TimerSet &)' inline default noexcept-unevaluated 0x55cf2bdbdf98
| `-ParmVarDecl 0x55cf2bdbe0a8 <col:7> col:7 'const TimerSet &'
|-CXXMethodDecl 0x55cf2bdbe2c8 <col:7> col:7 implicit operator= 'TimerSet &(TimerSet &&)' inline default noexcept-unevaluated 0x55cf2bdbe2c8
| `-ParmVarDecl 0x55cf2bdbe3d8 <col:7> col:7 'TimerSet &&'
`-CXXDestructorDecl 0x55cf2bdbe460 <col:7> col:7 implicit ~TimerSet 'void ()' inline default noexcept-unevaluated 0x55cf2bdbe460

Layout: <CGRecordLayout
  LLVMType:%class.TimerSet = type <{ %class.Timestamp, i32, i32, i32, [4 x i8], %class.Vector.13, %class.Vector.14, %class.SimpleSpinlock, [7 x i8], %class.Timestamp, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.TimerSet.base = type <{ %class.Timestamp, i32, i32, i32, [4 x i8], %class.Vector.13, %class.Vector.14, %class.SimpleSpinlock, [7 x i8], %class.Timestamp, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55cf2bded168 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'pollfd'
|-CXXRecordDecl 0x55cf2bded378 prev 0x55cf2bded168 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55cf2bdee450 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<pollfd>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x55cf2bdee400 'typename array_memory<pollfd>::type' sugar
|   `-TypedefType 0x55cf2bdee3e0 'conditional<true, sized_array_memory<8>, typed_array_memory<pollfd> >::type' sugar
|     |-Typedef 0x55cf2bdee290 'type'
|     `-SubstTemplateTypeParmType 0x55cf2bdb23b0 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x55cf2ba22420 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55cf2ba223c8 'T'
|       `-RecordType 0x55cf2bdb1f00 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x55cf2bdb1e18 'sized_array_memory'
|-FieldDecl 0x55cf2bdee550 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<pollfd>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x55cf2bdee5a0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55cf2bdee5d8 <line:118:5, col:15> col:15 value_type 'pollfd':'pollfd'
| `-SubstTemplateTypeParmType 0x55cf2bded410 'pollfd' sugar
|   |-TemplateTypeParmType 0x55cf2ba5a110 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55cf2ba5a0b8 'T'
|   `-RecordType 0x55cf2bdeb220 'pollfd'
|     `-CXXRecord 0x55cf2bdeb190 'pollfd'
|-TypedefDecl 0x55cf2bdee698 <line:119:5, col:16> col:16 reference 'pollfd &'
| `-LValueReferenceType 0x55cf2bdee660 'pollfd &'
|   `-SubstTemplateTypeParmType 0x55cf2bded410 'pollfd' sugar
|     |-TemplateTypeParmType 0x55cf2ba5a110 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55cf2ba5a0b8 'T'
|     `-RecordType 0x55cf2bdeb220 'pollfd'
|       `-CXXRecord 0x55cf2bdeb190 'pollfd'
|-TypedefDecl 0x55cf2bdee758 <line:120:5, col:22> col:22 const_reference 'const pollfd &'
| `-LValueReferenceType 0x55cf2bdee720 'const pollfd &'
|   `-QualType 0x55cf2bded411 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x55cf2bded410 'pollfd' sugar
|       |-TemplateTypeParmType 0x55cf2ba5a110 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55cf2ba5a0b8 'T'
|       `-RecordType 0x55cf2bdeb220 'pollfd'
|         `-CXXRecord 0x55cf2bdeb190 'pollfd'
|-TypedefDecl 0x55cf2bdee7e8 <line:121:5, col:16> col:16 pointer 'pollfd *'
| `-PointerType 0x55cf2bdee7b0 'pollfd *'
|   `-SubstTemplateTypeParmType 0x55cf2bded410 'pollfd' sugar
|     |-TemplateTypeParmType 0x55cf2ba5a110 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55cf2ba5a0b8 'T'
|     `-RecordType 0x55cf2bdeb220 'pollfd'
|       `-CXXRecord 0x55cf2bdeb190 'pollfd'
|-TypedefDecl 0x55cf2bdee8a8 <line:122:5, col:22> col:22 const_pointer 'const pollfd *'
| `-PointerType 0x55cf2bdee870 'const pollfd *'
|   `-QualType 0x55cf2bded411 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x55cf2bded410 'pollfd' sugar
|       |-TemplateTypeParmType 0x55cf2ba5a110 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55cf2ba5a0b8 'T'
|       `-RecordType 0x55cf2bdeb220 'pollfd'
|         `-CXXRecord 0x55cf2bdeb190 'pollfd'
|-TypedefDecl 0x55cf2bdef480 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<pollfd>::type':'pollfd'
| `-ElaboratedType 0x55cf2bdef430 'typename fast_argument<pollfd>::type' sugar
|   `-TypedefType 0x55cf2bdef410 'fast_argument<pollfd, false>::type' sugar
|     |-Typedef 0x55cf2bdef3a0 'type'
|     `-SubstTemplateTypeParmType 0x55cf2bdef160 'pollfd' sugar
|       |-TemplateTypeParmType 0x55cf2ba2d220 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55cf2ba2d1d0 'T'
|       `-RecordType 0x55cf2bdeb220 'pollfd'
|         `-CXXRecord 0x55cf2bdeb190 'pollfd'
|-TypedefDecl 0x55cf2bdef4e8 <line:126:5, col:22> col:22 const_access_type 'const pollfd &'
| `-LValueReferenceType 0x55cf2bdee720 'const pollfd &'
|   `-QualType 0x55cf2bded411 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x55cf2bded410 'pollfd' sugar
|       |-TemplateTypeParmType 0x55cf2ba5a110 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55cf2ba5a0b8 'T'
|       `-RecordType 0x55cf2bdeb220 'pollfd'
|         `-CXXRecord 0x55cf2bdeb190 'pollfd'
|-TypedefDecl 0x55cf2bdef540 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55cf2b759370 'int'
|-TypedefDecl 0x55cf2bdef5a8 <line:130:5, col:16> col:16 iterator 'pollfd *'
| `-PointerType 0x55cf2bdee7b0 'pollfd *'
|   `-SubstTemplateTypeParmType 0x55cf2bded410 'pollfd' sugar
|     |-TemplateTypeParmType 0x55cf2ba5a110 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55cf2ba5a0b8 'T'
|     `-RecordType 0x55cf2bdeb220 'pollfd'
|       `-CXXRecord 0x55cf2bdeb190 'pollfd'
|-TypedefDecl 0x55cf2bdef610 <line:131:5, col:22> col:22 const_iterator 'const pollfd *'
| `-PointerType 0x55cf2bdee870 'const pollfd *'
|   `-QualType 0x55cf2bded411 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x55cf2bded410 'pollfd' sugar
|       |-TemplateTypeParmType 0x55cf2ba5a110 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55cf2ba5a0b8 'T'
|       `-RecordType 0x55cf2bdeb220 'pollfd'
|         `-CXXRecord 0x55cf2bdeb190 'pollfd'
|-EnumDecl 0x55cf2bdef668 <line:134:5> col:5
| `-EnumConstantDecl 0x55cf2bdef760 <col:12, col:40> col:12 RESERVE_GROW 'Vector<pollfd>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55cf2bdef740 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55cf2ba5baa8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55cf2ba5ba80 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55cf2ba5ba60 <col:40> 'int' 1
|-CXXConstructorDecl 0x55cf2bdef7e8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55cf2bdefa78 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x55cf2bdef8a0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55cf2bdef940 <col:41, col:61> col:61 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXConstructorDecl 0x55cf2bdefd38 <line:139:5, col:37> col:12 Vector 'void (const Vector<pollfd> &)' inline
| `-ParmVarDecl 0x55cf2bdefc20 <col:19, col:36> col:36 x 'const Vector<pollfd> &'
|-CXXConstructorDecl 0x55cf2bdefff8 <line:141:5, col:32> col:12 Vector 'void (Vector<pollfd> &&)' inline
| `-ParmVarDecl 0x55cf2bdefee0 <col:19, col:31> col:31 x 'Vector<pollfd> &&'
|-CXXMethodDecl 0x55cf2bdf0340 <line:144:5, col:51> col:23 operator= 'Vector<pollfd> &(const Vector<pollfd> &)' inline
| `-ParmVarDecl 0x55cf2bdf0220 <col:33, col:50> col:50 x 'const Vector<pollfd> &'
|-CXXMethodDecl 0x55cf2bdf0650 <line:146:5, col:46> col:23 operator= 'Vector<pollfd> &(Vector<pollfd> &&)' inline
| `-ParmVarDecl 0x55cf2bdf0530 <col:33, col:45> col:45 x 'Vector<pollfd> &&'
|-CXXMethodDecl 0x55cf2bdf0940 <line:148:5, col:70> col:23 assign 'Vector<pollfd> &(Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x55cf2bdf0788 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55cf2bdf0800 <col:43, col:69> col:63 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x55cf2bdf0a98 <line:150:5, col:55> col:49 begin 'Vector<pollfd>::iterator ()'
| |-NoInlineAttr 0x55cf2bdf0b78 <col:20> Inherited
| `-OptimizeNoneAttr 0x55cf2bdf0bd0 <col:30> Inherited
|-CXXMethodDecl 0x55cf2bdf0c18 <line:151:5, col:53> col:49 end 'Vector<pollfd>::iterator ()'
| |-NoInlineAttr 0x55cf2bdf0cc8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55cf2bdf0d20 <col:30> Inherited
|-CXXMethodDecl 0x55cf2bdf0de8 <line:152:5, col:63> col:55 begin 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x55cf2bdf0e98 <col:20> Inherited
| `-OptimizeNoneAttr 0x55cf2bdf0ef0 <col:30> Inherited
|-CXXMethodDecl 0x55cf2bdf0f38 <line:153:5, col:61> col:55 end 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x55cf2bdf0fe8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55cf2bdf1040 <col:30> Inherited
|-CXXMethodDecl 0x55cf2bdf1088 <line:154:5, col:64> col:55 cbegin 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x55cf2bdf1138 <col:20> Inherited
| `-OptimizeNoneAttr 0x55cf2bdf1190 <col:30> Inherited
|-CXXMethodDecl 0x55cf2bdf11d8 <line:155:5, col:62> col:55 cend 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x55cf2bdf1288 <col:20> Inherited
| `-OptimizeNoneAttr 0x55cf2bdf12e0 <col:30> Inherited
|-CXXMethodDecl 0x55cf2bdf1308 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55cf2bdf13b8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55cf2bdf1468 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55cf2bdf1628 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x55cf2bdf1518 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55cf2bdf1590 <col:37, col:63> col:57 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x55cf2bdf1778 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55cf2bdf16e8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55cf2bdf1928 <line:163:5, col:65> col:43 operator[] 'pollfd &(Vector::size_type)'
| |-ParmVarDecl 0x55cf2bdf1830 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55cf2bdf19e0 <col:20>
| `-OptimizeNoneAttr 0x55cf2bdf1a38 <col:30>
|-CXXMethodDecl 0x55cf2bdf1b58 <line:164:5, col:73> col:49 operator[] 'const pollfd &(Vector::size_type) const'
| |-ParmVarDecl 0x55cf2bdf1a60 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55cf2bdf1c10 <col:20>
| `-OptimizeNoneAttr 0x55cf2bdf1c68 <col:30>
|-CXXMethodDecl 0x55cf2bdf1d20 <line:165:5, col:29> col:15 at 'pollfd &(Vector::size_type)' inline
| `-ParmVarDecl 0x55cf2bdf1c90 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55cf2bdf1e68 <line:166:5, col:37> col:21 at 'const pollfd &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55cf2bdf1dd8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55cf2bdf1f98 <line:167:5, col:21> col:15 front 'pollfd &()' inline
|-CXXMethodDecl 0x55cf2bdf20c8 <line:168:5, col:29> col:21 front 'const pollfd &() const' inline
|-CXXMethodDecl 0x55cf2bdf2198 <line:169:5, col:20> col:15 back 'pollfd &()' inline
|-CXXMethodDecl 0x55cf2bdf2268 <line:170:5, col:28> col:21 back 'const pollfd &() const' inline
|-CXXMethodDecl 0x55cf2bdf23a8 <line:172:5, col:39> col:15 unchecked_at 'pollfd &(Vector::size_type)' inline
| `-ParmVarDecl 0x55cf2bdf2318 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55cf2bdf24f0 <line:173:5, col:47> col:21 unchecked_at 'const pollfd &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55cf2bdf2460 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55cf2bdf2638 <line:174:5, col:59> col:15 at_u 'pollfd &(Vector::size_type)' inline
| |-ParmVarDecl 0x55cf2bdf25a8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55cf2bdf26f0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55cf2bdf27f0 <line:175:5, col:71> col:21 at_u 'const pollfd &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55cf2bdf2760 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55cf2bdf28e0 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55cf2bdf2998 <line:177:5, col:20> col:15 data 'pollfd *()' inline
|-CXXMethodDecl 0x55cf2bdf2a98 <line:178:5, col:28> col:21 data 'const pollfd *() const' inline
|-CXXMethodDecl 0x55cf2bdf2c48 <line:180:5, col:48> col:17 push_back 'void (Vector<pollfd>::value_argument_type)' inline
| `-ParmVarDecl 0x55cf2bdf2b58 <col:27, col:47> col:47 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-FunctionTemplateDecl 0x55cf2bdf3408 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55cf2bdf2d00 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<pollfd>':'fast_argument<pollfd, false>'
| `-CXXMethodDecl 0x55cf2bdf3368 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (pollfd &&)' inline
|   `-ParmVarDecl 0x55cf2bdf3268 <col:58, col:62> col:62 v 'pollfd &&'
|-CXXMethodDecl 0x55cf2bdf34e8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55cf2bdf3638 <line:186:5, col:49> col:17 push_front 'void (Vector<pollfd>::value_argument_type)' inline
| `-ParmVarDecl 0x55cf2bdf35a8 <col:28, col:48> col:48 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x55cf2bdf36f0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55cf2bdf3938 <line:189:5, col:62> col:21 insert 'Vector<pollfd>::iterator (Vector<pollfd>::iterator, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x55cf2bdf37b0 <col:28, col:37> col:37 it 'Vector<pollfd>::iterator':'pollfd *'
| `-ParmVarDecl 0x55cf2bdf3828 <col:41, col:61> col:61 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x55cf2bdf3af8 <line:190:5, col:38> col:21 erase 'Vector<pollfd>::iterator (Vector<pollfd>::iterator)' inline
| `-ParmVarDecl 0x55cf2bdf3a08 <col:27, col:36> col:36 it 'Vector<pollfd>::iterator':'pollfd *'
|-CXXMethodDecl 0x55cf2bdf3d48 <line:191:5, col:49> col:21 erase 'Vector<pollfd>::iterator (Vector<pollfd>::iterator, Vector<pollfd>::iterator)' inline
| |-ParmVarDecl 0x55cf2bdf3bc0 <col:27, col:36> col:36 a 'Vector<pollfd>::iterator':'pollfd *'
| `-ParmVarDecl 0x55cf2bdf3c38 <col:39, col:48> col:48 b 'Vector<pollfd>::iterator':'pollfd *'
|-CXXMethodDecl 0x55cf2bdf3e08 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55cf2bdf4068 <line:195:5, col:34> col:17 swap 'void (Vector<pollfd> &)' inline
| `-ParmVarDecl 0x55cf2bdf3f70 <col:22, col:33> col:33 x 'Vector<pollfd> &'
`-CXXDestructorDecl 0x55cf2bdf4138 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55cf2bdf4138

Layout: <CGRecordLayout
  LLVMType:%class.Vector.15 = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector.15 = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55cf2bdf5620 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<24>'
|-CXXRecordDecl 0x55cf2bdf57f8 prev 0x55cf2bdf5620 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55cf2bdf5888 <col:46, col:52> col:46 public
|-TypedefDecl 0x55cf2bdf58b0 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55cf2b759370 'int'
|-TypedefDecl 0x55cf2bdf7480 <line:13:5, col:31> col:31 type 'typename sized_array_memory<24>::type':'char_array<24>'
| `-ElaboratedType 0x55cf2bdf7430 'typename sized_array_memory<24>::type' sugar
|   `-TypedefType 0x55cf2bdf5d60 'sized_array_memory<24>::type' sugar
|     |-Typedef 0x55cf2bdf5c60 'type'
|     `-TemplateSpecializationType 0x55cf2bdf5bf0 'char_array<24UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x55cf2bdf5ad0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 24
|       |   `-SubstNonTypeTemplateParmExpr 0x55cf2bdf5ab0 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x55cf2bdf5a90 <col:24> 'unsigned long' 24
|       `-RecordType 0x55cf2bdf5bd0 'char_array<24>'
|         `-ClassTemplateSpecialization 0x55cf2bdf5af0 'char_array'
|-TypedefDecl 0x55cf2bdf7538 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<24> >::type *'
| `-PointerType 0x55cf2bdf7500 'vector_memory<sized_array_memory<24> >::type *'
|   `-TypedefType 0x55cf2bdf74e0 'vector_memory<sized_array_memory<24> >::type' sugar
|     |-Typedef 0x55cf2bdf7480 'type'
|     `-ElaboratedType 0x55cf2bdf7430 'typename sized_array_memory<24>::type' sugar
|       `-TypedefType 0x55cf2bdf5d60 'sized_array_memory<24>::type' sugar
|         |-Typedef 0x55cf2bdf5c60 'type'
|         `-TemplateSpecializationType 0x55cf2bdf5bf0 'char_array<24UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x55cf2bdf5ad0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 24
|           |   `-SubstNonTypeTemplateParmExpr 0x55cf2bdf5ab0 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x55cf2bdf5a90 <col:24> 'unsigned long' 24
|           `-RecordType 0x55cf2bdf5bd0 'char_array<24>'
|             `-ClassTemplateSpecialization 0x55cf2bdf5af0 'char_array'
|-CXXMethodDecl 0x55cf2bdf76b8 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<24> >::type *) const' inline
| `-ParmVarDecl 0x55cf2bdf75c8 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXConstructorDecl 0x55cf2bdf77a8 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55cf2bdf7888 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x55cf2bdf7888
|-CXXMethodDecl 0x55cf2bdf7b58 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<24> > &)'
| `-ParmVarDecl 0x55cf2bdf7a60 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<24> > &'
|-CXXMethodDecl 0x55cf2bdf7d98 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x55cf2bdf7c10 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55cf2bdf7c88 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55cf2bdf7f68 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x55cf2bdf7e58 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55cf2bdf7ed0 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55cf2bdf80c8 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<24> >::iterator ()'
|-CXXMethodDecl 0x55cf2bdf8198 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<24> >::iterator ()'
|-CXXMethodDecl 0x55cf2bdf83e8 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<24> >::iterator (vector_memory<sized_array_memory<24> >::iterator, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x55cf2bdf8258 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
| `-ParmVarDecl 0x55cf2bdf82d0 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55cf2bdf8648 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<24> >::iterator (vector_memory<sized_array_memory<24> >::iterator, vector_memory<sized_array_memory<24> >::iterator)'
| |-ParmVarDecl 0x55cf2bdf84b8 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
| `-ParmVarDecl 0x55cf2bdf8530 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55cf2bdf8808 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<24> >::type *)' inline
| `-ParmVarDecl 0x55cf2bdf8718 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55cf2bdf89c8 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<24> >::type *)' inline
| `-ParmVarDecl 0x55cf2bdf88d0 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55cf2bdf8a80 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55cf2bdf8b30 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55cf2bdf8d68 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x55cf2bdf8be0 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55cf2bdf8c58 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55cf2bdf9008 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<24> > &)'
| `-ParmVarDecl 0x55cf2bdf8f10 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<24> > &'
|-FieldDecl 0x55cf2bdf90d0 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<24> >::type *'
|-FieldDecl 0x55cf2bdf9120 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55cf2bdf9170 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.17 = type { %struct.char_array.18*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.17 = type { %struct.char_array.18*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55cf2bdf4280 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'SelectSet::SelectorInfo'
|-CXXRecordDecl 0x55cf2bdf4488 prev 0x55cf2bdf4280 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55cf2bdf5590 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<SelectorInfo>::type':'sized_array_memory<24>'
| `-ElaboratedType 0x55cf2bdf5540 'typename array_memory<SelectorInfo>::type' sugar
|   `-TypedefType 0x55cf2bdf5520 'conditional<true, sized_array_memory<24>, typed_array_memory<SelectSet::SelectorInfo> >::type' sugar
|     |-Typedef 0x55cf2bdf53d0 'type'
|     `-SubstTemplateTypeParmType 0x55cf2bdf51f0 'sized_array_memory<24>' sugar
|       |-TemplateTypeParmType 0x55cf2ba22420 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55cf2ba223c8 'T'
|       `-RecordType 0x55cf2bd0ec40 'sized_array_memory<24>'
|         `-ClassTemplateSpecialization 0x55cf2bd0eb58 'sized_array_memory'
|-FieldDecl 0x55cf2bdf91c0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<SelectSet::SelectorInfo>::array_memory_type>':'vector_memory<sized_array_memory<24> >' mutable
|-AccessSpecDecl 0x55cf2bdf9210 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55cf2bdf9248 <line:118:5, col:15> col:15 value_type 'SelectSet::SelectorInfo':'SelectSet::SelectorInfo'
| `-SubstTemplateTypeParmType 0x55cf2bdf4520 'SelectSet::SelectorInfo' sugar
|   |-TemplateTypeParmType 0x55cf2ba5a110 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55cf2ba5a0b8 'T'
|   `-RecordType 0x55cf2bdeccd0 'SelectSet::SelectorInfo'
|     `-CXXRecord 0x55cf2bdecc40 'SelectorInfo'
|-TypedefDecl 0x55cf2bdf9308 <line:119:5, col:16> col:16 reference 'SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x55cf2bdf92d0 'SelectSet::SelectorInfo &'
|   `-SubstTemplateTypeParmType 0x55cf2bdf4520 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x55cf2ba5a110 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55cf2ba5a0b8 'T'
|     `-RecordType 0x55cf2bdeccd0 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x55cf2bdecc40 'SelectorInfo'
|-TypedefDecl 0x55cf2bdf93c8 <line:120:5, col:22> col:22 const_reference 'const SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x55cf2bdf9390 'const SelectSet::SelectorInfo &'
|   `-QualType 0x55cf2bdf4521 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x55cf2bdf4520 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x55cf2ba5a110 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55cf2ba5a0b8 'T'
|       `-RecordType 0x55cf2bdeccd0 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x55cf2bdecc40 'SelectorInfo'
|-TypedefDecl 0x55cf2bdf9458 <line:121:5, col:16> col:16 pointer 'SelectSet::SelectorInfo *'
| `-PointerType 0x55cf2bdf9420 'SelectSet::SelectorInfo *'
|   `-SubstTemplateTypeParmType 0x55cf2bdf4520 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x55cf2ba5a110 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55cf2ba5a0b8 'T'
|     `-RecordType 0x55cf2bdeccd0 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x55cf2bdecc40 'SelectorInfo'
|-TypedefDecl 0x55cf2bdf9518 <line:122:5, col:22> col:22 const_pointer 'const SelectSet::SelectorInfo *'
| `-PointerType 0x55cf2bdf94e0 'const SelectSet::SelectorInfo *'
|   `-QualType 0x55cf2bdf4521 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x55cf2bdf4520 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x55cf2ba5a110 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55cf2ba5a0b8 'T'
|       `-RecordType 0x55cf2bdeccd0 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x55cf2bdecc40 'SelectorInfo'
|-TypedefDecl 0x55cf2bdfa170 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<SelectorInfo>::type':'const SelectSet::SelectorInfo &'
| `-ElaboratedType 0x55cf2bdfa120 'typename fast_argument<SelectorInfo>::type' sugar
|   `-TypedefType 0x55cf2bdfa100 'fast_argument<SelectSet::SelectorInfo, true>::type' sugar
|     |-Typedef 0x55cf2bdfa038 'type'
|     `-LValueReferenceType 0x55cf2bdfa000 'const SelectSet::SelectorInfo &'
|       `-QualType 0x55cf2bdf9da1 'const SelectSet::SelectorInfo' const
|         `-SubstTemplateTypeParmType 0x55cf2bdf9da0 'SelectSet::SelectorInfo' sugar
|           |-TemplateTypeParmType 0x55cf2ba2caf0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55cf2ba2ca98 'T'
|           `-RecordType 0x55cf2bdeccd0 'SelectSet::SelectorInfo'
|             `-CXXRecord 0x55cf2bdecc40 'SelectorInfo'
|-TypedefDecl 0x55cf2bdfa1d8 <line:126:5, col:22> col:22 const_access_type 'const SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x55cf2bdf9390 'const SelectSet::SelectorInfo &'
|   `-QualType 0x55cf2bdf4521 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x55cf2bdf4520 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x55cf2ba5a110 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55cf2ba5a0b8 'T'
|       `-RecordType 0x55cf2bdeccd0 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x55cf2bdecc40 'SelectorInfo'
|-TypedefDecl 0x55cf2bdfa230 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55cf2b759370 'int'
|-TypedefDecl 0x55cf2bdfa298 <line:130:5, col:16> col:16 iterator 'SelectSet::SelectorInfo *'
| `-PointerType 0x55cf2bdf9420 'SelectSet::SelectorInfo *'
|   `-SubstTemplateTypeParmType 0x55cf2bdf4520 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x55cf2ba5a110 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55cf2ba5a0b8 'T'
|     `-RecordType 0x55cf2bdeccd0 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x55cf2bdecc40 'SelectorInfo'
|-TypedefDecl 0x55cf2bdfa300 <line:131:5, col:22> col:22 const_iterator 'const SelectSet::SelectorInfo *'
| `-PointerType 0x55cf2bdf94e0 'const SelectSet::SelectorInfo *'
|   `-QualType 0x55cf2bdf4521 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x55cf2bdf4520 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x55cf2ba5a110 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55cf2ba5a0b8 'T'
|       `-RecordType 0x55cf2bdeccd0 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x55cf2bdecc40 'SelectorInfo'
|-EnumDecl 0x55cf2bdfa358 <line:134:5> col:5
| `-EnumConstantDecl 0x55cf2bdfa450 <col:12, col:40> col:12 RESERVE_GROW 'Vector<SelectSet::SelectorInfo>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55cf2bdfa430 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55cf2ba5baa8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55cf2ba5ba80 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55cf2ba5ba60 <col:40> 'int' 1
|-CXXConstructorDecl 0x55cf2bdfa4d8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55cf2bdfa768 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x55cf2bdfa590 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55cf2bdfa630 <col:41, col:61> col:61 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXConstructorDecl 0x55cf2bdfaa38 <line:139:5, col:37> col:12 Vector 'void (const Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x55cf2bdfa928 <col:19, col:36> col:36 x 'const Vector<SelectSet::SelectorInfo> &'
|-CXXConstructorDecl 0x55cf2bdfacf8 <line:141:5, col:32> col:12 Vector 'void (Vector<SelectSet::SelectorInfo> &&)' inline
| `-ParmVarDecl 0x55cf2bdfabe0 <col:19, col:31> col:31 x 'Vector<SelectSet::SelectorInfo> &&'
|-CXXMethodDecl 0x55cf2bdfb040 <line:144:5, col:51> col:23 operator= 'Vector<SelectSet::SelectorInfo> &(const Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x55cf2bdfaf20 <col:33, col:50> col:50 x 'const Vector<SelectSet::SelectorInfo> &'
|-CXXMethodDecl 0x55cf2bdfb350 <line:146:5, col:46> col:23 operator= 'Vector<SelectSet::SelectorInfo> &(Vector<SelectSet::SelectorInfo> &&)' inline
| `-ParmVarDecl 0x55cf2bdfb230 <col:33, col:45> col:45 x 'Vector<SelectSet::SelectorInfo> &&'
|-CXXMethodDecl 0x55cf2bdfb640 <line:148:5, col:70> col:23 assign 'Vector<SelectSet::SelectorInfo> &(Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x55cf2bdfb488 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55cf2bdfb500 <col:43, col:69> col:63 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x55cf2bdfb798 <line:150:5, col:55> col:49 begin 'Vector<SelectSet::SelectorInfo>::iterator ()'
| |-NoInlineAttr 0x55cf2bdfb878 <col:20> Inherited
| `-OptimizeNoneAttr 0x55cf2bdfb8d0 <col:30> Inherited
|-CXXMethodDecl 0x55cf2bdfb918 <line:151:5, col:53> col:49 end 'Vector<SelectSet::SelectorInfo>::iterator ()'
| |-NoInlineAttr 0x55cf2bdfb9c8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55cf2bdfba20 <col:30> Inherited
|-CXXMethodDecl 0x55cf2bdfbae8 <line:152:5, col:63> col:55 begin 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x55cf2bdfbb98 <col:20> Inherited
| `-OptimizeNoneAttr 0x55cf2bdfbbf0 <col:30> Inherited
|-CXXMethodDecl 0x55cf2bdfbc38 <line:153:5, col:61> col:55 end 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x55cf2bdfbce8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55cf2bdfbd40 <col:30> Inherited
|-CXXMethodDecl 0x55cf2bdfbd88 <line:154:5, col:64> col:55 cbegin 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x55cf2bdfbe38 <col:20> Inherited
| `-OptimizeNoneAttr 0x55cf2bdfbe90 <col:30> Inherited
|-CXXMethodDecl 0x55cf2bdfbed8 <line:155:5, col:62> col:55 cend 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x55cf2bdfbf88 <col:20> Inherited
| `-OptimizeNoneAttr 0x55cf2bdfbfe0 <col:30> Inherited
|-CXXMethodDecl 0x55cf2bdfc008 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55cf2bdfc0b8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55cf2bdfc168 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55cf2bdfc328 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x55cf2bdfc218 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55cf2bdfc290 <col:37, col:63> col:57 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x55cf2bdfc478 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55cf2bdfc3e8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55cf2bdfc628 <line:163:5, col:65> col:43 operator[] 'SelectSet::SelectorInfo &(Vector::size_type)'
| |-ParmVarDecl 0x55cf2bdfc530 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55cf2bdfc6e0 <col:20>
| `-OptimizeNoneAttr 0x55cf2bdfc738 <col:30>
|-CXXMethodDecl 0x55cf2bdfc858 <line:164:5, col:73> col:49 operator[] 'const SelectSet::SelectorInfo &(Vector::size_type) const'
| |-ParmVarDecl 0x55cf2bdfc760 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55cf2bdfc910 <col:20>
| `-OptimizeNoneAttr 0x55cf2bdfc968 <col:30>
|-CXXMethodDecl 0x55cf2bdfca20 <line:165:5, col:29> col:15 at 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| `-ParmVarDecl 0x55cf2bdfc990 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55cf2bdfcb68 <line:166:5, col:37> col:21 at 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55cf2bdfcad8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55cf2bdfcc98 <line:167:5, col:21> col:15 front 'SelectSet::SelectorInfo &()' inline
|-CXXMethodDecl 0x55cf2bdfcdc8 <line:168:5, col:29> col:21 front 'const SelectSet::SelectorInfo &() const' inline
|-CXXMethodDecl 0x55cf2bdfce98 <line:169:5, col:20> col:15 back 'SelectSet::SelectorInfo &()' inline
|-CXXMethodDecl 0x55cf2bdfcf68 <line:170:5, col:28> col:21 back 'const SelectSet::SelectorInfo &() const' inline
|-CXXMethodDecl 0x55cf2bdfd0a8 <line:172:5, col:39> col:15 unchecked_at 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| `-ParmVarDecl 0x55cf2bdfd018 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55cf2bdfd1f0 <line:173:5, col:47> col:21 unchecked_at 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55cf2bdfd160 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55cf2bdfd338 <line:174:5, col:59> col:15 at_u 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| |-ParmVarDecl 0x55cf2bdfd2a8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55cf2bdfd3f0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55cf2bdfd4f0 <line:175:5, col:71> col:21 at_u 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55cf2bdfd460 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55cf2bdfd5a8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55cf2bdfd668 <line:177:5, col:20> col:15 data 'SelectSet::SelectorInfo *()' inline
|-CXXMethodDecl 0x55cf2bdfd768 <line:178:5, col:28> col:21 data 'const SelectSet::SelectorInfo *() const' inline
|-CXXMethodDecl 0x55cf2bdfd918 <line:180:5, col:48> col:17 push_back 'void (Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| `-ParmVarDecl 0x55cf2bdfd828 <col:27, col:47> col:47 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-FunctionTemplateDecl 0x55cf2bdfe0d8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55cf2bdfd9d0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<SelectSet::SelectorInfo>':'fast_argument<SelectSet::SelectorInfo, true>'
| `-CXXMethodDecl 0x55cf2bdfe038 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (SelectSet::SelectorInfo &&)' inline
|   `-ParmVarDecl 0x55cf2bdfdf38 <col:58, col:62> col:62 v 'SelectSet::SelectorInfo &&'
|-CXXMethodDecl 0x55cf2bdfe1b8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55cf2bdfe308 <line:186:5, col:49> col:17 push_front 'void (Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| `-ParmVarDecl 0x55cf2bdfe278 <col:28, col:48> col:48 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x55cf2bdfe3c0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55cf2bdfe608 <line:189:5, col:62> col:21 insert 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x55cf2bdfe480 <col:28, col:37> col:37 it 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
| `-ParmVarDecl 0x55cf2bdfe4f8 <col:41, col:61> col:61 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x55cf2bdfe7c8 <line:190:5, col:38> col:21 erase 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator)' inline
| `-ParmVarDecl 0x55cf2bdfe6d8 <col:27, col:36> col:36 it 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
|-CXXMethodDecl 0x55cf2bdfea18 <line:191:5, col:49> col:21 erase 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator, Vector<SelectSet::SelectorInfo>::iterator)' inline
| |-ParmVarDecl 0x55cf2bdfe890 <col:27, col:36> col:36 a 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
| `-ParmVarDecl 0x55cf2bdfe908 <col:39, col:48> col:48 b 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
|-CXXMethodDecl 0x55cf2bdfead8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55cf2bdfed38 <line:195:5, col:34> col:17 swap 'void (Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x55cf2bdfec40 <col:22, col:33> col:33 x 'Vector<SelectSet::SelectorInfo> &'
`-CXXDestructorDecl 0x55cf2bdfee08 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55cf2bdfee08

Layout: <CGRecordLayout
  LLVMType:%class.Vector.16 = type { %class.vector_memory.17 }
  NonVirtualBaseLLVMType:%class.Vector.16 = type { %class.vector_memory.17 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55cf2bdebe20 <../dummy_inc/click/selectset.hh:36:1, line:109:1> line:36:7 referenced class SelectSet definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55cf2bdebf38 <col:1, col:7> col:7 implicit referenced class SelectSet
|-AccessSpecDecl 0x55cf2bdebfc8 <col:19, col:25> col:19 public
|-CXXConstructorDecl 0x55cf2bdec050 <line:38:5, col:15> col:5 SelectSet 'void ()'
|-CXXDestructorDecl 0x55cf2bdec140 <line:39:5, col:16> col:5 ~SelectSet 'void ()' noexcept-unevaluated 0x55cf2bdec140
|-CXXMethodDecl 0x55cf2bdec240 <line:41:5, col:21> col:10 initialize 'void ()'
|-CXXMethodDecl 0x55cf2bdec4e0 <line:43:5, col:54> col:9 add_select 'int (int, Element *, int)'
| |-ParmVarDecl 0x55cf2bdec2f8 <col:20, col:24> col:24 fd 'int'
| |-ParmVarDecl 0x55cf2bdec370 <col:28, col:37> col:37 element 'Element *'
| `-ParmVarDecl 0x55cf2bdec3f0 <col:46, col:50> col:50 mask 'int'
|-CXXMethodDecl 0x55cf2bdec750 <line:44:5, col:57> col:9 remove_select 'int (int, Element *, int)'
| |-ParmVarDecl 0x55cf2bdec5b0 <col:23, col:27> col:27 fd 'int'
| |-ParmVarDecl 0x55cf2bdec628 <col:31, col:40> col:40 element 'Element *'
| `-ParmVarDecl 0x55cf2bdec6a8 <col:49, col:53> col:53 mask 'int'
|-CXXMethodDecl 0x55cf2bdec8a8 <line:46:5, col:42> col:10 run_selects 'void (RouterThread *)'
| `-ParmVarDecl 0x55cf2bdec818 <col:22, col:36> col:36 thread 'RouterThread *'
|-CXXMethodDecl 0x55cf2bdec970 <line:47:5, line:50:5> line:47:17 used wake_immediate 'void ()' inline
| `-CompoundStmt 0x55cf2be004b8 <col:34, line:50:5>
|   |-BinaryOperator 0x55cf2bdffe88 <line:48:2, col:23> 'volatile bool' lvalue '='
|   | |-MemberExpr 0x55cf2bdffe48 <col:2> 'volatile bool' lvalue ->_wake_pipe_pending 0x55cf2bded0f8
|   | | `-CXXThisExpr 0x55cf2bdffe38 <col:2> 'SelectSet *' implicit this
|   | `-CXXBoolLiteralExpr 0x55cf2bdffe78 <col:23> 'bool' true
|   `-CallExpr 0x55cf2be00490 <line:49:2, col:43> 'void'
|     |-ImplicitCastExpr 0x55cf2be00478 <col:2> 'void (*)(long)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x55cf2be003f8 <col:2> 'void (long)' lvalue Function 0x55cf2be002f8 'ignore_result' 'void (long)' (FunctionTemplate 0x55cf2ba1d3c8 'ignore_result')
|     `-CallExpr 0x55cf2be000a0 <col:16, col:42> 'ssize_t':'long'
|       |-ImplicitCastExpr 0x55cf2be00088 <col:16> 'ssize_t (*)(int, const void *, size_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55cf2be00008 <col:16> 'ssize_t (int, const void *, size_t)' lvalue Function 0x55cf2bdce3a8 'write' 'ssize_t (int, const void *, size_t)'
|       |-ImplicitCastExpr 0x55cf2be000d8 <col:22, col:34> 'int' <LValueToRValue>
|       | `-ArraySubscriptExpr 0x55cf2bdfffb0 <col:22, col:34> 'int' lvalue
|       |   |-ImplicitCastExpr 0x55cf2bdfff98 <col:22> 'int *' <ArrayToPointerDecay>
|       |   | `-MemberExpr 0x55cf2bdfff48 <col:22> 'int [2]' lvalue ->_wake_pipe 0x55cf2bded098
|       |   |   `-CXXThisExpr 0x55cf2bdfff38 <col:22> 'SelectSet *' implicit this
|       |   `-IntegerLiteral 0x55cf2bdfff78 <col:33> 'int' 1
|       |-ImplicitCastExpr 0x55cf2be00108 <col:37> 'const void *' <BitCast>
|       | `-ImplicitCastExpr 0x55cf2be000f0 <col:37> 'const char *' <ArrayToPointerDecay>
|       |   `-StringLiteral 0x55cf2bdfffd0 <col:37> 'const char [1]' lvalue ""
|       `-ImplicitCastExpr 0x55cf2be00120 <col:41> 'size_t':'unsigned long' <IntegralCast>
|         `-IntegerLiteral 0x55cf2bdfffe8 <col:41> 'int' 1
|-CXXMethodDecl 0x55cf2bdecab0 <line:52:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x55cf2bdeca20 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x55cf2bdecb78 <line:54:5, col:23> col:17 fence 'void ()' inline
|-AccessSpecDecl 0x55cf2bdecc18 <line:56:3, col:10> col:3 private
|-CXXRecordDecl 0x55cf2bdecc40 <line:58:5, line:66:5> line:58:12 referenced struct SelectorInfo definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55cf2bdecd58 <col:5, col:12> col:12 implicit referenced struct SelectorInfo
| |-FieldDecl 0x55cf2bdecdf8 <line:59:2, col:11> col:11 read 'Element *'
| |-FieldDecl 0x55cf2bdece58 <line:60:2, col:11> col:11 write 'Element *'
| |-FieldDecl 0x55cf2bdecec0 <line:61:2, col:6> col:6 pollfd 'int'
| `-CXXConstructorDecl 0x55cf2bdecf70 <line:62:2, line:65:2> line:62:2 SelectorInfo 'void ()'
|   |-CXXCtorInitializer Field 0x55cf2bdecdf8 'read' 'Element *'
|   | `-ImplicitCastExpr 0x55cf2be00518 <line:63:13> 'Element *' <NullToPointer>
|   |   `-IntegerLiteral 0x55cf2be004d8 <col:13> 'int' 0
|   |-CXXCtorInitializer Field 0x55cf2bdece58 'write' 'Element *'
|   | `-ImplicitCastExpr 0x55cf2be00598 <col:23> 'Element *' <NullToPointer>
|   |   `-IntegerLiteral 0x55cf2be00558 <col:23> 'int' 0
|   |-CXXCtorInitializer Field 0x55cf2bdecec0 'pollfd' 'int'
|   | `-UnaryOperator 0x55cf2be005f8 <col:34, col:35> 'int' prefix '-'
|   |   `-IntegerLiteral 0x55cf2be005d8 <col:35> 'int' 1
|   `-CompoundStmt 0x55cf2be00670 <line:64:2, line:65:2>
|-FieldDecl 0x55cf2bded098 <line:68:5, col:21> col:9 referenced _wake_pipe 'int [2]'
|-FieldDecl 0x55cf2bded0f8 <line:69:5, col:19> col:19 referenced _wake_pipe_pending 'volatile bool'
|-FieldDecl 0x55cf2bdf4220 <line:82:5, col:27> col:27 _pollfds 'Vector<struct pollfd>':'Vector<pollfd>'
|-FieldDecl 0x55cf2bdfeef0 <line:83:5, col:26> col:26 _selinfo 'Vector<SelectSet::SelectorInfo>':'Vector<SelectSet::SelectorInfo>'
|-CXXMethodDecl 0x55cf2bdff128 <line:89:5, col:63> col:10 register_select 'void (int, bool, bool)'
| |-ParmVarDecl 0x55cf2bdfef58 <col:26, col:30> col:30 fd 'int'
| |-ParmVarDecl 0x55cf2bdfefd0 <col:34, col:39> col:39 add_read 'bool'
| `-ParmVarDecl 0x55cf2bdff048 <col:49, col:54> col:54 add_write 'bool'
|-CXXMethodDecl 0x55cf2bdff310 <line:90:5, col:41> col:10 remove_pollfd 'void (int, int)'
| |-ParmVarDecl 0x55cf2bdff1f8 <col:24, col:28> col:28 pi 'int'
| `-ParmVarDecl 0x55cf2bdff278 <col:32, col:36> col:36 event 'int'
|-CXXMethodDecl 0x55cf2bdff558 <line:91:5, col:49> col:17 call_selected 'void (int, int) const' inline
| |-ParmVarDecl 0x55cf2bdff3d8 <col:31, col:35> col:35 fd 'int'
| `-ParmVarDecl 0x55cf2bdff458 <col:39, col:43> col:43 mask 'int'
|-CXXMethodDecl 0x55cf2bdff768 <line:92:5, col:63> col:17 post_select 'bool (RouterThread *, bool)' inline
| |-ParmVarDecl 0x55cf2bdff618 <col:29, col:43> col:43 thread 'RouterThread *'
| `-ParmVarDecl 0x55cf2bdff690 <col:51, col:56> col:56 acquire 'bool'
|-CXXMethodDecl 0x55cf2bdff8b8 <line:97:5, col:47> col:10 run_selects_poll 'void (RouterThread *)'
| `-ParmVarDecl 0x55cf2bdff828 <col:27, col:41> col:41 thread 'RouterThread *'
|-CXXMethodDecl 0x55cf2bdff980 <line:102:5, col:22> col:17 used lock 'void ()' inline
|-CXXMethodDecl 0x55cf2bdffa40 <line:103:5, col:24> col:17 used unlock 'void ()' inline
|-CXXConstructorDecl 0x55cf2bdffb08 <line:36:7> col:7 implicit SelectSet 'void (const SelectSet &)' inline default noexcept-unevaluated 0x55cf2bdffb08
| `-ParmVarDecl 0x55cf2bdffc18 <col:7> col:7 'const SelectSet &'
`-CXXMethodDecl 0x55cf2bdffcb8 <col:7> col:7 implicit operator= 'SelectSet &(const SelectSet &)' inline default noexcept-unevaluated 0x55cf2bdffcb8
  `-ParmVarDecl 0x55cf2bdffdc8 <col:7> col:7 'const SelectSet &'

Layout: <CGRecordLayout
  LLVMType:%class.SelectSet = type { [2 x i32], i8, %class.Vector.15, %class.Vector.16 }
  NonVirtualBaseLLVMType:%class.SelectSet = type { [2 x i32], i8, %class.Vector.15, %class.Vector.16 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55cf2bd90178 <../dummy_inc/click/sync.hh:46:1, line:64:1> line:46:7 referenced class Spinlock definition
|-DefinitionData empty standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55cf2bd90298 <col:1, col:7> col:7 implicit referenced class Spinlock
|-AccessSpecDecl 0x55cf2bd90328 <col:18, col:24> col:18 public
|-CXXConstructorDecl 0x55cf2bd903b0 <line:48:5, col:21> col:12 Spinlock 'void ()' inline
|-CXXDestructorDecl 0x55cf2bd904a0 <line:49:5, col:22> col:12 ~Spinlock 'void () noexcept' inline
|-CXXMethodDecl 0x55cf2bd905a0 <line:51:5, col:25> col:17 used acquire 'void ()' inline
|-CXXMethodDecl 0x55cf2bd90660 <line:52:5, col:25> col:17 used release 'void ()' inline
|-CXXMethodDecl 0x55cf2bd90720 <line:53:5, col:25> col:17 attempt 'bool ()' inline
|-CXXMethodDecl 0x55cf2bd90808 <line:54:5, col:26> col:17 nested 'bool () const' inline
|-CXXConstructorDecl 0x55cf2bd90928 <line:46:7> col:7 implicit constexpr Spinlock 'void (const Spinlock &)' inline default trivial noexcept-unevaluated 0x55cf2bd90928
| `-ParmVarDecl 0x55cf2bd90a38 <col:7> col:7 'const Spinlock &'
`-CXXMethodDecl 0x55cf2be082a8 <col:7> col:7 implicit operator= 'Spinlock &(const Spinlock &)' inline default trivial noexcept-unevaluated 0x55cf2be082a8
  `-ParmVarDecl 0x55cf2be083b8 <col:7> col:7 'const Spinlock &'

Layout: <CGRecordLayout
  LLVMType:%class.Spinlock = type { i8 }
  NonVirtualBaseLLVMType:%class.Spinlock.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55cf2bda1878 <../dummy_inc/click/task.hh:339:5, line:342:5> line:339:11 referenced union Pending definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55cf2bda1998 <col:5, col:11> col:11 implicit union Pending
|-FieldDecl 0x55cf2bda1a38 <line:340:9, col:15> col:15 t 'Task *'
|-FieldDecl 0x55cf2bda1a98 <line:341:9, col:19> col:19 referenced x 'uintptr_t':'unsigned long'
|-CXXConstructorDecl 0x55cf2be078a8 <line:339:11> col:11 implicit constexpr Pending 'void (const Task::Pending &)' inline default trivial noexcept-unevaluated 0x55cf2be078a8
| `-ParmVarDecl 0x55cf2be079b8 <col:11> col:11 'const Task::Pending &'
|-CXXConstructorDecl 0x55cf2be07a58 <col:11> col:11 implicit constexpr Pending 'void (Task::Pending &&)' inline default trivial noexcept-unevaluated 0x55cf2be07a58
| `-ParmVarDecl 0x55cf2be07b68 <col:11> col:11 'Task::Pending &&'
|-CXXDestructorDecl 0x55cf2be07bd8 <col:11> col:11 implicit ~Pending 'void ()' inline default trivial noexcept-unevaluated 0x55cf2be07bd8
|-CXXMethodDecl 0x55cf2be08458 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(const Task::Pending &)' inline default trivial noexcept-unevaluated 0x55cf2be08458
| `-ParmVarDecl 0x55cf2be08568 <col:11> col:11 'const Task::Pending &'
|-CXXMethodDecl 0x55cf2be085d8 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(Task::Pending &&)' inline default trivial noexcept-unevaluated 0x55cf2be085d8
| `-ParmVarDecl 0x55cf2be086e8 <col:11> col:11 'Task::Pending &&'
`-CXXConstructorDecl 0x55cf2be11dc8 <col:11> col:11 implicit used Pending 'void () noexcept' inline default trivial
  `-CompoundStmt 0x55cf2be11ea0 <col:11>

Layout: <CGRecordLayout
  LLVMType:%"union.Task::Pending" = type { %class.Task* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55cf2bd92070 <../dummy_inc/click/sync.hh:303:1, line:324:1> line:303:7 referenced class SpinlockIRQ definition
|-DefinitionData pass_in_registers empty standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55cf2bd92188 <col:1, col:7> col:7 implicit referenced class SpinlockIRQ
|-AccessSpecDecl 0x55cf2bd92218 <col:21, col:27> col:21 public
|-CXXConstructorDecl 0x55cf2bd922a0 <line:305:5, col:24> col:12 SpinlockIRQ 'void ()' inline
|-TypedefDecl 0x55cf2bd92360 <line:310:5, col:17> col:17 referenced flags_t 'int'
| `-BuiltinType 0x55cf2b759370 'int'
|-CXXMethodDecl 0x55cf2bd92428 <line:313:5, col:59> col:20 acquire 'SpinlockIRQ::flags_t ()' inline
| `-AlwaysInlineAttr 0x55cf2bd924c8 <col:45> always_inline
|-CXXMethodDecl 0x55cf2bd925f8 <line:314:5, col:63> col:17 release 'void (SpinlockIRQ::flags_t)' inline
| |-ParmVarDecl 0x55cf2bd92530 <col:25> col:32 'SpinlockIRQ::flags_t':'int'
| `-AlwaysInlineAttr 0x55cf2bd926a0 <col:49> always_inline
|-CXXConstructorDecl 0x55cf2bd92798 <line:303:7> col:7 implicit constexpr SpinlockIRQ 'void (const SpinlockIRQ &)' inline default trivial noexcept-unevaluated 0x55cf2bd92798
| `-ParmVarDecl 0x55cf2bd928a8 <col:7> col:7 'const SpinlockIRQ &'
|-CXXConstructorDecl 0x55cf2bd92948 <col:7> col:7 implicit constexpr SpinlockIRQ 'void (SpinlockIRQ &&)' inline default trivial noexcept-unevaluated 0x55cf2bd92948
| `-ParmVarDecl 0x55cf2bd92a58 <col:7> col:7 'SpinlockIRQ &&'
|-CXXDestructorDecl 0x55cf2be07cc0 <col:7> col:7 implicit ~SpinlockIRQ 'void ()' inline default trivial noexcept-unevaluated 0x55cf2be07cc0
|-CXXMethodDecl 0x55cf2be08788 <col:7> col:7 implicit operator= 'SpinlockIRQ &(const SpinlockIRQ &)' inline default trivial noexcept-unevaluated 0x55cf2be08788
| `-ParmVarDecl 0x55cf2be08898 <col:7> col:7 'const SpinlockIRQ &'
`-CXXMethodDecl 0x55cf2be08908 <col:7> col:7 implicit operator= 'SpinlockIRQ &(SpinlockIRQ &&)' inline default trivial noexcept-unevaluated 0x55cf2be08908
  `-ParmVarDecl 0x55cf2be08a18 <col:7> col:7 'SpinlockIRQ &&'

Layout: <CGRecordLayout
  LLVMType:%class.SpinlockIRQ = type { i8 }
  NonVirtualBaseLLVMType:%class.SpinlockIRQ.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55cf2be00ae0 prev 0x55cf2bdebd90 <../dummy_inc/click/routerthread.hh:28:1, line:248:1> line:28:7 referenced class RouterThread definition
|-DefinitionData has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-CXXRecordDecl 0x55cf2be00bd8 <col:1, col:7> col:7 implicit referenced class RouterThread
|-AccessSpecDecl 0x55cf2be00c68 <col:22, col:28> col:22 public
|-EnumDecl 0x55cf2be00c90 <line:30:5, col:58> col:5
| |-EnumConstantDecl 0x55cf2be00da8 <col:12, col:32> col:12 THREAD_QUIESCENT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:30:5)'
| | `-ConstantExpr 0x55cf2be00d88 <col:31, col:32> 'int' Int: -1
| |   `-UnaryOperator 0x55cf2be00d70 <col:31, col:32> 'int' prefix '-'
| |     `-IntegerLiteral 0x55cf2be00d50 <col:32> 'int' 1
| `-EnumConstantDecl 0x55cf2be00e50 <col:35, col:53> col:35 THREAD_UNKNOWN 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:30:5)'
|   `-ConstantExpr 0x55cf2be00e30 <col:52, col:53> 'int' Int: -1000
|     `-UnaryOperator 0x55cf2be00e18 <col:52, col:53> 'int' prefix '-'
|       `-IntegerLiteral 0x55cf2be00df8 <col:53> 'int' 1000
|-CXXMethodDecl 0x55cf2be00ef0 <line:32:5, col:28> col:16 thread_id 'int () const' inline
|-CXXMethodDecl 0x55cf2be00fb0 <line:34:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x55cf2be01098 <line:35:5, col:52> col:22 timer_set 'TimerSet &()' inline
| `-CompoundStmt 0x55cf2be08ad8 <col:34, col:52>
|   `-ReturnStmt 0x55cf2be08ac8 <col:36, col:43>
|     `-MemberExpr 0x55cf2be08a98 <col:43> 'TimerSet' lvalue ->_timers 0x55cf2be05da8
|       `-CXXThisExpr 0x55cf2be08a88 <col:43> 'RouterThread *' implicit this
|-CXXMethodDecl 0x55cf2be01188 <line:36:5, col:64> col:28 timer_set 'const TimerSet &() const' inline
| `-CompoundStmt 0x55cf2be08b40 <col:46, col:64>
|   `-ReturnStmt 0x55cf2be08b30 <col:48, col:55>
|     `-MemberExpr 0x55cf2be08b00 <col:55> 'const TimerSet' lvalue ->_timers 0x55cf2be05da8
|       `-CXXThisExpr 0x55cf2be08af0 <col:55> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x55cf2be01278 <line:38:5, col:55> col:23 select_set 'SelectSet &()' inline
| `-CompoundStmt 0x55cf2be08ba8 <col:36, col:55>
|   `-ReturnStmt 0x55cf2be08b98 <col:38, col:45>
|     `-MemberExpr 0x55cf2be08b68 <col:45> 'SelectSet' lvalue ->_selects 0x55cf2be05e08
|       `-CXXThisExpr 0x55cf2be08b58 <col:45> 'RouterThread *' implicit this
|-CXXMethodDecl 0x55cf2be01368 <line:39:5, col:67> col:29 select_set 'const SelectSet &() const' inline
| `-CompoundStmt 0x55cf2be08c10 <col:48, col:67>
|   `-ReturnStmt 0x55cf2be08c00 <col:50, col:57>
|     `-MemberExpr 0x55cf2be08bd0 <col:57> 'const SelectSet' lvalue ->_selects 0x55cf2be05e08
|       `-CXXThisExpr 0x55cf2be08bc0 <col:57> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x55cf2be01428 <line:43:5, col:26> col:17 active 'bool () const' inline
|-CXXMethodDecl 0x55cf2be01518 <line:44:5, col:31> col:18 task_begin 'Task *() const' inline
|-CXXMethodDecl 0x55cf2be01688 <line:45:5, col:40> col:18 task_next 'Task *(Task *) const' inline
| `-ParmVarDecl 0x55cf2be015c8 <col:28, col:34> col:34 task 'Task *'
|-CXXMethodDecl 0x55cf2be01750 <line:46:5, col:29> col:18 task_end 'Task *() const' inline
|-CXXMethodDecl 0x55cf2be01b98 <line:47:5, col:59> col:10 scheduled_tasks 'void (Router *, Vector<Task *> &)'
| |-ParmVarDecl 0x55cf2be01800 <col:26, col:34> col:34 router 'Router *'
| `-ParmVarDecl 0x55cf2be01a80 <col:42, col:58> col:58 x 'Vector<Task *> &'
|-CXXMethodDecl 0x55cf2be01c68 <line:49:5, col:28> col:17 lock_tasks 'void ()' inline
|-CXXMethodDecl 0x55cf2be01d28 <line:50:5, col:30> col:17 unlock_tasks 'void ()' inline
|-CXXMethodDecl 0x55cf2be01de8 <line:52:5, col:38> col:17 schedule_block_tasks 'void ()' inline
|-CXXMethodDecl 0x55cf2be01f28 <line:53:5, col:43> col:17 used block_tasks 'void (bool)' inline
| `-ParmVarDecl 0x55cf2be01e98 <col:29, col:34> col:34 scheduled 'bool'
|-CXXMethodDecl 0x55cf2be01ff0 <line:54:5, col:31> col:17 used unblock_tasks 'void ()' inline
|-CXXMethodDecl 0x55cf2be020b0 <line:56:5, col:29> col:17 stop_flag 'bool () const' inline
|-CXXMethodDecl 0x55cf2be02170 <line:58:5, col:35> col:17 mark_driver_entry 'void ()' inline
|-CXXMethodDecl 0x55cf2be02230 <line:59:5, col:17> col:10 driver 'void ()'
|-CXXMethodDecl 0x55cf2be02370 <line:61:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x55cf2be022e0 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x55cf2be02438 <line:77:5, col:22> col:17 used wake 'void ()' inline
|-CXXMethodDecl 0x55cf2be024f8 <line:80:5, col:29> col:17 run_signals 'void ()' inline
|-EnumDecl 0x55cf2be02598 <line:83:5, line:86:20> line:83:5
| |-EnumConstantDecl 0x55cf2be02660 <col:12> col:12 referenced S_PAUSED 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55cf2be026b0 <col:22> col:22 referenced S_BLOCKED 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55cf2be02700 <col:33> col:33 referenced S_TIMERWAIT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55cf2be02750 <line:84:12> col:12 S_LOCKSELECT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55cf2be027a0 <col:26> col:26 S_LOCKTASKS 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55cf2be027f0 <line:85:12> col:12 S_RUNTASK 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55cf2be02840 <col:23> col:23 S_RUNTIMER 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55cf2be02890 <col:35> col:35 S_RUNSIGNAL 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55cf2be05920 <col:48> col:48 S_RUNPENDING 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55cf2be05970 <col:62> col:62 S_RUNSELECT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| `-EnumConstantDecl 0x55cf2be059c0 <line:86:12> col:12 NSTATES 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
|-CXXMethodDecl 0x55cf2be05ab8 <line:87:5, col:43> col:17 used set_thread_state 'void (int)' inline
| `-ParmVarDecl 0x55cf2be05a28 <col:34, col:38> col:38 state 'int'
|-CXXMethodDecl 0x55cf2be05c08 <line:88:5, col:61> col:17 set_thread_state_for_blocking 'void (int)' inline
| `-ParmVarDecl 0x55cf2be05b78 <col:47, col:51> col:51 delay_type 'int'
|-AccessSpecDecl 0x55cf2be05cb0 <line:104:3, col:10> col:3 private
|-FieldDecl 0x55cf2be05ce8 <line:119:5, col:14> col:14 referenced _task_link 'TaskLink'
|-FieldDecl 0x55cf2be05d48 <line:120:5, col:19> col:19 referenced _stop_flag 'volatile bool'
|-FieldDecl 0x55cf2be05da8 <line:125:5, col:14> col:14 referenced _timers 'TimerSet'
|-FieldDecl 0x55cf2be05e08 <line:127:5, col:15> col:15 referenced _selects 'SelectSet'
|-FieldDecl 0x55cf2be05e88 <line:148:5, col:14> col:14 referenced _task_lock 'Spinlock'
| `-AlignedAttr 0x55cf2be05ef8 <col:40, col:50> aligned
|   `-ConstantExpr 0x55cf2be05ed8 <col:48> 'int' Int: 64
|     `-IntegerLiteral 0x55cf2be05e58 <col:48> 'int' 64
|-FieldDecl 0x55cf2be05f68 <line:149:5, col:21> col:21 referenced _task_blocker 'atomic_uint32_t'
|-FieldDecl 0x55cf2be05fc8 <line:150:5, col:21> col:21 referenced _task_blocker_waiting 'atomic_uint32_t'
|-FieldDecl 0x55cf2be060c0 <line:152:5, col:19> col:19 referenced _pending_head 'Task::Pending':'Task::Pending'
|-FieldDecl 0x55cf2be061d0 <line:153:5, col:20> col:20 _pending_tail 'Task::Pending *'
|-FieldDecl 0x55cf2be06230 <line:154:5, col:17> col:17 _pending_lock 'SpinlockIRQ'
|-FieldDecl 0x55cf2be062b0 <line:157:5, col:13> col:13 referenced _master 'Master *'
| `-AlignedAttr 0x55cf2be06320 <col:36, col:46> aligned
|   `-ConstantExpr 0x55cf2be06300 <col:44> 'int' Int: 64
|     `-IntegerLiteral 0x55cf2be06280 <col:44> 'int' 64
|-FieldDecl 0x55cf2be06398 <line:158:5, col:9> col:9 referenced _id 'int'
|-FieldDecl 0x55cf2be063f8 <line:159:5, col:10> col:10 referenced _driver_entered 'bool'
|-AccessSpecDecl 0x55cf2be06448 <line:170:3, col:9> col:3 public
|-FieldDecl 0x55cf2be06488 <line:171:5, col:14> col:14 _tasks_per_iter 'unsigned int'
|-FieldDecl 0x55cf2be064f0 <line:172:5, col:14> col:14 _iters_per_os 'unsigned int'
|-AccessSpecDecl 0x55cf2be06540 <line:173:3, col:10> col:3 private
|-CXXConstructorDecl 0x55cf2be066e8 <line:205:5, col:46> col:5 RouterThread 'void (Master *, int)'
| |-ParmVarDecl 0x55cf2be06578 <col:18, col:26> col:26 master 'Master *'
| `-ParmVarDecl 0x55cf2be065f8 <col:34, col:38> col:38 threadno 'int'
|-CXXDestructorDecl 0x55cf2be067e8 <line:206:5, col:19> col:5 ~RouterThread 'void ()' noexcept-unevaluated 0x55cf2be067e8
|-CXXMethodDecl 0x55cf2be068f0 <line:209:5, col:29> col:17 add_pending 'void ()' inline
|-CXXMethodDecl 0x55cf2be069b8 <line:211:5, line:217:5> line:211:21 pass 'unsigned int () const' inline
| `-CompoundStmt 0x55cf2be08d08 <col:34, line:217:5>
|   `-ReturnStmt 0x55cf2be08cf8 <line:215:9, col:34>
|     `-ImplicitCastExpr 0x55cf2be08ce0 <col:16, col:34> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x55cf2be08cb0 <col:16, col:34> 'unsigned int' lvalue ->_pass 0x55cf2bd9e950
|         `-ImplicitCastExpr 0x55cf2be08c98 <col:16, col:27> 'TaskLink *' <LValueToRValue>
|           `-MemberExpr 0x55cf2be08c68 <col:16, col:27> 'TaskLink *const' lvalue ._next 0x55cf2bd9e8e8
|             `-MemberExpr 0x55cf2be08c38 <col:16> 'const TaskLink' lvalue ->_task_link 0x55cf2be05ce8
|               `-CXXThisExpr 0x55cf2be08c28 <col:16> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x55cf2be06a78 <line:221:5, col:28> col:10 driver_lock_tasks 'void ()'
|-CXXMethodDecl 0x55cf2be06b38 <line:222:5, line:226:5> line:222:17 driver_unlock_tasks 'void ()' inline
| `-CompoundStmt 0x55cf2be09430 <col:39, line:226:5>
|   |-DeclStmt 0x55cf2be08f58 <line:223:9, col:68>
|   | `-VarDecl 0x55cf2be08d30 <col:9, col:67> col:18 used val 'uint32_t':'unsigned int' cinit
|   |   `-CXXMemberCallExpr 0x55cf2be08f10 <col:24, col:67> 'uint32_t':'unsigned int'
|   |     |-MemberExpr 0x55cf2be08ee0 <col:24, col:38> '<bound member function type>' .compare_swap 0x55cf2ba83d20
|   |     | `-MemberExpr 0x55cf2be08da8 <col:24> 'atomic_uint32_t' lvalue ->_task_blocker 0x55cf2be05f68
|   |     |   `-CXXThisExpr 0x55cf2be08d98 <col:24> 'RouterThread *' implicit this
|   |     |-CStyleCastExpr 0x55cf2be08e98 <col:51, col:63> 'uint32_t':'unsigned int' <NoOp>
|   |     | `-ImplicitCastExpr 0x55cf2be08e80 <col:62, col:63> 'uint32_t':'unsigned int' <IntegralCast> part_of_explicit_cast
|   |     |   `-UnaryOperator 0x55cf2be08e58 <col:62, col:63> 'int' prefix '-'
|   |     |     `-IntegerLiteral 0x55cf2be08e38 <col:63> 'int' 1
|   |     `-ImplicitCastExpr 0x55cf2be08f40 <col:66> 'uint32_t':'unsigned int' <IntegralCast>
|   |       `-IntegerLiteral 0x55cf2be08ec0 <col:66> 'int' 0
|   |-CStyleCastExpr 0x55cf2be08fa0 <line:224:9, col:16> 'void' <ToVoid>
|   | `-DeclRefExpr 0x55cf2be08f70 <col:16> 'uint32_t':'unsigned int' lvalue Var 0x55cf2be08d30 'val' 'uint32_t':'unsigned int'
|   `-ParenExpr 0x55cf2be09410 <line:225:9, col:181> 'void'
|     `-ConditionalOperator 0x55cf2be093e0 <col:10, col:180> 'void'
|       |-CXXStaticCastExpr 0x55cf2be090b8 <col:10, col:50> 'bool' static_cast<_Bool> <NoOp>
|       | `-BinaryOperator 0x55cf2be09088 <col:30, col:49> 'bool' '=='
|       |   |-ImplicitCastExpr 0x55cf2be09070 <col:30> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-DeclRefExpr 0x55cf2be08fc8 <col:30> 'uint32_t':'unsigned int' lvalue Var 0x55cf2be08d30 'val' 'uint32_t':'unsigned int'
|       |   `-CStyleCastExpr 0x55cf2be09048 <col:37, col:49> 'uint32_t':'unsigned int' <NoOp>
|       |     `-ImplicitCastExpr 0x55cf2be09030 <col:48, col:49> 'uint32_t':'unsigned int' <IntegralCast> part_of_explicit_cast
|       |       `-UnaryOperator 0x55cf2be09008 <col:48, col:49> 'int' prefix '-'
|       |         `-IntegerLiteral 0x55cf2be08fe8 <col:49> 'int' 1
|       |-CXXFunctionalCastExpr 0x55cf2be09118 <col:54, col:61> 'void' functional cast to void <ToVoid>
|       | `-IntegerLiteral 0x55cf2be090f8 <col:60> 'int' 0
|       `-CallExpr 0x55cf2be09340 <col:65, col:180> 'void'
|         |-ImplicitCastExpr 0x55cf2be09328 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x55cf2be09308 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55cf2b7f8810 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|         |-ImplicitCastExpr 0x55cf2be09380 <col:80> 'const char *' <ArrayToPointerDecay>
|         | `-StringLiteral 0x55cf2be09208 <col:80> 'const char [21]' lvalue "val == (uint32_t) -1"
|         |-ImplicitCastExpr 0x55cf2be09398 <col:104> 'const char *' <ArrayToPointerDecay>
|         | `-StringLiteral 0x55cf2be09238 <col:104> 'const char [35]' lvalue "../dummy_inc/click/routerthread.hh"
|         |-ImplicitCastExpr 0x55cf2be093b0 <col:142> 'unsigned int' <IntegralCast>
|         | `-IntegerLiteral 0x55cf2be09278 <col:142> 'int' 225
|         `-ImplicitCastExpr 0x55cf2be093c8 <col:147, col:161> 'const char *' <ArrayToPointerDecay>
|           `-UnaryOperator 0x55cf2be092f0 <col:147, col:161> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|             `-PredefinedExpr 0x55cf2be092d8 <col:161> 'const char [41]' lvalue __PRETTY_FUNCTION__
|               `-StringLiteral 0x55cf2be09298 <col:161> 'const char [41]' lvalue "void RouterThread::driver_unlock_tasks()"
|-CXXMethodDecl 0x55cf2be06c80 <line:228:5, col:37> col:17 run_tasks 'void (int)' inline
| `-ParmVarDecl 0x55cf2be06bf0 <col:27, col:31> col:31 ntasks 'int'
|-CXXMethodDecl 0x55cf2be06d48 <line:229:5, col:33> col:17 process_pending 'void ()' inline
|-CXXMethodDecl 0x55cf2be06e08 <line:230:5, col:24> col:17 run_os 'void ()' inline
|-CXXMethodDecl 0x55cf2be06ec8 <line:238:5, col:45> col:24 used running_in_interrupt 'bool ()' static inline
|-CXXMethodDecl 0x55cf2be06f88 <line:239:5, col:45> col:17 used current_thread_is_running 'bool () const' inline
|-CXXMethodDecl 0x55cf2be07048 <line:240:5, col:53> col:17 current_thread_is_running_cleanup 'bool () const' inline
|-FriendDecl 0x55cf2be07140 <line:242:5, col:18> col:12 'class Task':'Task'
|-FriendDecl 0x55cf2be071a0 <line:243:5, col:18> col:12 'class Master':'Master'
|-FriendDecl 0x55cf2be07230 <line:245:5, col:18> col:12 'class SelectSet':'SelectSet'
|-CXXConstructorDecl 0x55cf2be075f8 <line:28:7> col:7 implicit RouterThread 'void (const RouterThread &)' inline default noexcept-unevaluated 0x55cf2be075f8
| `-ParmVarDecl 0x55cf2be07708 <col:7> col:7 'const RouterThread &'
`-CXXMethodDecl 0x55cf2be07dc8 <col:7> col:7 implicit operator= 'RouterThread &(const RouterThread &)' inline default noexcept-unevaluated 0x55cf2be07dc8
  `-ParmVarDecl 0x55cf2be07ed8 <col:7> col:7 'const RouterThread &'

Layout: <CGRecordLayout
  LLVMType:%class.RouterThread = type { %struct.TaskLink, i8, [7 x i8], %class.TimerSet, %class.SelectSet, [32 x i8], %class.Spinlock, %class.atomic_uint32_t, %class.atomic_uint32_t, %"union.Task::Pending", %"union.Task::Pending"*, %class.SpinlockIRQ, [31 x i8], %class.Master*, i32, i8, i32, i32, [40 x i8] }
  NonVirtualBaseLLVMType:%class.RouterThread.base = type { %struct.TaskLink, i8, [7 x i8], %class.TimerSet, %class.SelectSet, [32 x i8], %class.Spinlock, %class.atomic_uint32_t, %class.atomic_uint32_t, %"union.Task::Pending", %"union.Task::Pending"*, %class.SpinlockIRQ, [31 x i8], %class.Master*, i32, i8, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55cf2bd9ec60 prev 0x55cf2bcbddf0 <../dummy_inc/click/task.hh:49:1, line:371:1> line:49:7 referenced class Task definition
|-DefinitionData has_user_declared_ctor can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-private 'TaskLink'
|-CXXRecordDecl 0x55cf2bd9ed98 <col:1, col:7> col:7 implicit referenced class Task
|-AccessSpecDecl 0x55cf2bd9ee28 <col:33, col:39> col:33 public
|-EnumDecl 0x55cf2bd9ee50 <line:52:5, col:50> col:5
| |-EnumConstantDecl 0x55cf2bd9ef90 <col:12, col:26> col:12 referenced STRIDE1 'Task::(anonymous enum at ../dummy_inc/click/task.hh:52:5)'
| | `-ConstantExpr 0x55cf2bd9ef70 <col:22, col:26> 'unsigned int' Int: 65536
| |   `-BinaryOperator 0x55cf2bd9ef50 <col:22, col:26> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x55cf2bd9ef10 <col:22> 'unsigned int' 1
| |     `-IntegerLiteral 0x55cf2bd9ef30 <col:26> 'int' 16
| `-EnumConstantDecl 0x55cf2bd9f060 <col:30, col:47> col:30 referenced MAX_STRIDE 'Task::(anonymous enum at ../dummy_inc/click/task.hh:52:5)'
|   `-ConstantExpr 0x55cf2bd9f040 <col:43, col:47> 'unsigned int' Int: 2147483648
|     `-BinaryOperator 0x55cf2bd9f020 <col:43, col:47> 'unsigned int' '<<'
|       |-IntegerLiteral 0x55cf2bd9efe0 <col:43> 'unsigned int' 1
|       `-IntegerLiteral 0x55cf2bd9f000 <col:47> 'int' 31
|-EnumDecl 0x55cf2bd9f0b0 <line:53:5, col:57> col:5
| |-EnumConstantDecl 0x55cf2bd9f1f0 <col:12, col:29> col:12 referenced MAX_TICKETS 'Task::(anonymous enum at ../dummy_inc/click/task.hh:53:5)'
| | `-ImplicitCastExpr 0x55cf2bd9f310 <col:26, col:29> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf2bd9f1d0 <col:26, col:29> 'int' Int: 32768
| |     `-BinaryOperator 0x55cf2bd9f1b0 <col:26, col:29> 'int' '<<'
| |       |-IntegerLiteral 0x55cf2bd9f170 <col:26> 'int' 1
| |       `-IntegerLiteral 0x55cf2bd9f190 <col:29> 'int' 15
| `-EnumConstantDecl 0x55cf2bd9f2c0 <col:33, col:54> col:33 DEFAULT_TICKETS 'Task::(anonymous enum at ../dummy_inc/click/task.hh:53:5)'
|   `-ImplicitCastExpr 0x55cf2bd9f328 <col:51, col:54> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55cf2bd9f2a0 <col:51, col:54> 'int' Int: 1024
|       `-BinaryOperator 0x55cf2bd9f280 <col:51, col:54> 'int' '<<'
|         |-IntegerLiteral 0x55cf2bd9f240 <col:51> 'int' 1
|         `-IntegerLiteral 0x55cf2bd9f260 <col:54> 'int' 10
|-CXXConstructorDecl 0x55cf2bd9f4f8 <line:75:5, col:48> col:12 Task 'void (TaskCallback, void *)' inline
| |-ParmVarDecl 0x55cf2bd9f350 <col:17, col:30> col:30 f 'TaskCallback':'bool (*)(Task *, void *)'
| `-ParmVarDecl 0x55cf2bd9f3d0 <col:33, col:39> col:39 user_data 'void *'
|-CXXConstructorDecl 0x55cf2bd9f650 <line:86:5, col:27> col:12 Task 'void (Element *)' inline
| `-ParmVarDecl 0x55cf2bd9f5c0 <col:17, col:26> col:26 e 'Element *'
|-CXXDestructorDecl 0x55cf2bd9f748 <line:91:5, col:11> col:5 ~Task 'void ()' noexcept-unevaluated 0x55cf2bd9f748
|-CXXMethodDecl 0x55cf2bd9f8d8 <line:98:5, line:100:5> line:98:25 callback 'TaskCallback () const' inline
| `-CompoundStmt 0x55cf2bda29d8 <col:42, line:100:5>
|   `-ReturnStmt 0x55cf2bda29c8 <line:99:9, col:16>
|     `-ImplicitCastExpr 0x55cf2bda29b0 <col:16> 'TaskCallback':'bool (*)(Task *, void *)' <LValueToRValue>
|       `-MemberExpr 0x55cf2bda2980 <col:16> 'const TaskCallback':'bool (*const)(Task *, void *)' lvalue ->_hook 0x55cf2bda1700
|         `-CXXThisExpr 0x55cf2bda2970 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x55cf2bd9f9a0 <line:103:5, line:105:5> line:103:18 user_data 'void *() const' inline
| `-CompoundStmt 0x55cf2bda2a58 <col:36, line:105:5>
|   `-ReturnStmt 0x55cf2bda2a48 <line:104:9, col:16>
|     `-ImplicitCastExpr 0x55cf2bda2a30 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x55cf2bda2a00 <col:16> 'void *const' lvalue ->_thunk 0x55cf2bda1768
|         `-CXXThisExpr 0x55cf2bda29f0 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x55cf2bd9fa60 <line:108:5, line:110:5> line:108:21 element 'Element *() const' inline
| `-CompoundStmt 0x55cf2bda2ad8 <col:37, line:110:5>
|   `-ReturnStmt 0x55cf2bda2ac8 <line:109:9, col:16>
|     `-ImplicitCastExpr 0x55cf2bda2ab0 <col:16> 'Element *' <LValueToRValue>
|       `-MemberExpr 0x55cf2bda2a80 <col:16> 'Element *const' lvalue ->_owner 0x55cf2bda1828
|         `-CXXThisExpr 0x55cf2bda2a70 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x55cf2bd9fb20 <line:114:5, col:31> col:17 initialized 'bool () const' inline
|-CXXMethodDecl 0x55cf2bd9fbe8 <line:123:5, col:33> col:16 home_thread_id 'int () const' inline
|-CXXMethodDecl 0x55cf2bd9fca8 <line:132:5, col:35> col:26 thread 'RouterThread *() const' inline
|-CXXMethodDecl 0x55cf2bd9fd68 <line:135:5, line:137:5> line:135:20 router 'Router *() const' inline
| `-CompoundStmt 0x55cf2bda2bc0 <col:35, line:137:5>
|   `-ReturnStmt 0x55cf2bda2bb0 <line:136:9, col:31>
|     `-CXXMemberCallExpr 0x55cf2bda2b78 <col:16, col:31> 'Router *'
|       `-MemberExpr 0x55cf2bda2b48 <col:16, col:24> '<bound member function type>' ->router 0x55cf2bcd0600
|         `-ImplicitCastExpr 0x55cf2bda2b98 <col:16> 'const Element *' <NoOp>
|           `-ImplicitCastExpr 0x55cf2bda2b30 <col:16> 'Element *' <LValueToRValue>
|             `-MemberExpr 0x55cf2bda2b00 <col:16> 'Element *const' lvalue ->_owner 0x55cf2bda1828
|               `-CXXThisExpr 0x55cf2bda2af0 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x55cf2bd9fe28 <line:140:5, col:22> col:13 master 'Master *() const'
|-CXXMethodDecl 0x55cf2bd9ffe8 <line:159:5, col:50> col:10 initialize 'void (Element *, bool)'
| |-ParmVarDecl 0x55cf2bd9fed8 <col:21, col:30> col:30 owner 'Element *'
| `-ParmVarDecl 0x55cf2bd9ff50 <col:37, col:42> col:42 schedule 'bool'
|-CXXMethodDecl 0x55cf2bda01f8 <line:169:5, col:50> col:10 initialize 'void (Router *, bool)'
| |-ParmVarDecl 0x55cf2bda00a8 <col:21, col:29> col:29 router 'Router *'
| `-ParmVarDecl 0x55cf2bda0120 <col:37, col:42> col:42 schedule 'bool'
|-CXXMethodDecl 0x55cf2bda02c8 <line:179:5, line:181:5> line:179:17 scheduled 'bool () const' inline
| `-CompoundStmt 0x55cf2bda2cd0 <col:35, line:181:5>
|   `-ReturnStmt 0x55cf2bda2cc0 <line:180:9, col:24>
|     `-ImplicitCastExpr 0x55cf2bda2ca8 <col:16, col:24> 'bool' <IntegralToBoolean>
|       `-ImplicitCastExpr 0x55cf2bda2c90 <col:16, col:24> 'uint8_t':'unsigned char' <LValueToRValue>
|         `-MemberExpr 0x55cf2bda2c60 <col:16, col:24> 'const uint8_t':'const unsigned char' lvalue .is_scheduled 0x55cf2bda1338
|           `-MemberExpr 0x55cf2bda2c18 <col:16, col:24> 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55cf2bda1458
|             `-MemberExpr 0x55cf2bda2be8 <col:16> 'const union Status':'const Task::Status' lvalue ->_status 0x55cf2bda1688
|               `-CXXThisExpr 0x55cf2bda2bd8 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x55cf2bda0388 <line:190:5, line:192:5> line:190:17 unschedule 'void ()' inline
| `-CompoundStmt 0x55cf2bda2de8 <col:30, line:192:5>
|   `-BinaryOperator 0x55cf2bda2dc8 <line:191:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x55cf2bda2d70 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x55cf2bda1338
|     | `-MemberExpr 0x55cf2bda2d28 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55cf2bda1458
|     |   `-MemberExpr 0x55cf2bda2cf8 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x55cf2bda1688
|     |     `-CXXThisExpr 0x55cf2bda2ce8 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x55cf2bda2db0 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x55cf2bda2da0 <col:32> 'bool' false
|-CXXMethodDecl 0x55cf2bda0448 <line:201:5, line:206:5> line:201:17 used reschedule 'void ()' inline
| `-CompoundStmt 0x55cf2bda3138 <col:30, line:206:5>
|   |-BinaryOperator 0x55cf2bda2ee0 <line:202:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x55cf2bda2e88 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x55cf2bda1338
|   | | `-MemberExpr 0x55cf2bda2e40 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55cf2bda1458
|   | |   `-MemberExpr 0x55cf2bda2e10 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x55cf2bda1688
|   | |     `-CXXThisExpr 0x55cf2bda2e00 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x55cf2bda2ec8 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x55cf2bda2eb8 <col:32> 'bool' true
|   |-CallExpr 0x55cf2bda2f80 <line:203:9, col:21> 'void'
|   | `-ImplicitCastExpr 0x55cf2bda2f68 <col:9> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55cf2bda2f48 <col:9> 'void ()' lvalue Function 0x55cf2bd8fd30 'click_fence' 'void ()'
|   `-IfStmt 0x55cf2bda3120 <line:204:9, line:205:32>
|     |-BinaryOperator 0x55cf2bda3060 <line:204:13, col:34> 'bool' '<'
|     | |-ImplicitCastExpr 0x55cf2bda3030 <col:13, col:30> 'uintptr_t':'unsigned long' <LValueToRValue>
|     | | `-MemberExpr 0x55cf2bda2fe0 <col:13, col:30> 'uintptr_t':'unsigned long' lvalue .x 0x55cf2bda1a98
|     | |   `-MemberExpr 0x55cf2bda2fb0 <col:13> 'Task::Pending' lvalue ->_pending_nextptr 0x55cf2bda1b10
|     | |     `-CXXThisExpr 0x55cf2bda2fa0 <col:13> 'Task *' implicit this
|     | `-ImplicitCastExpr 0x55cf2bda3048 <col:34> 'unsigned long' <IntegralCast>
|     |   `-IntegerLiteral 0x55cf2bda3010 <col:34> 'int' 2
|     `-CXXMemberCallExpr 0x55cf2bda30e0 <line:205:13, col:32> 'void'
|       |-MemberExpr 0x55cf2bda3090 <col:13> '<bound member function type>' ->complete_schedule 0x55cf2bda2510
|       | `-CXXThisExpr 0x55cf2bda3080 <col:13> 'Task *' implicit this
|       `-ImplicitCastExpr 0x55cf2bda3108 <col:31> 'RouterThread *' <NullToPointer>
|         `-IntegerLiteral 0x55cf2bda30c0 <col:31> 'int' 0
|-CXXMethodDecl 0x55cf2bda0508 <line:238:5, line:240:5> line:238:17 fast_reschedule 'void ()' inline
| `-CompoundStmt 0x55cf2bda3260 <col:35, line:240:5>
|   `-BinaryOperator 0x55cf2bda3240 <line:239:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x55cf2bda31e8 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x55cf2bda1338
|     | `-MemberExpr 0x55cf2bda31a0 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55cf2bda1458
|     |   `-MemberExpr 0x55cf2bda3170 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x55cf2bda1688
|     |     `-CXXThisExpr 0x55cf2bda3160 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x55cf2bda3228 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x55cf2bda3218 <col:32> 'bool' true
|-CXXMethodDecl 0x55cf2bda05c8 <line:250:5, line:253:5> line:250:17 strong_unschedule 'void ()' inline
| `-CompoundStmt 0x55cf2bda3478 <col:37, line:253:5>
|   |-BinaryOperator 0x55cf2bda3358 <line:251:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x55cf2bda3300 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x55cf2bda1338
|   | | `-MemberExpr 0x55cf2bda32b8 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55cf2bda1458
|   | |   `-MemberExpr 0x55cf2bda3288 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x55cf2bda1688
|   | |     `-CXXThisExpr 0x55cf2bda3278 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x55cf2bda3340 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x55cf2bda3330 <col:32> 'bool' false
|   `-BinaryOperator 0x55cf2bda3458 <line:252:9, col:41> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x55cf2bda3400 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_strong_unscheduled 0x55cf2bda1398
|     | `-MemberExpr 0x55cf2bda33b8 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55cf2bda1458
|     |   `-MemberExpr 0x55cf2bda3388 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x55cf2bda1688
|     |     `-CXXThisExpr 0x55cf2bda3378 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x55cf2bda3440 <col:41> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x55cf2bda3430 <col:41> 'bool' true
|-CXXMethodDecl 0x55cf2bda0688 <line:261:5, line:264:5> line:261:17 strong_reschedule 'void ()' inline
| `-CompoundStmt 0x55cf2bda35f8 <col:37, line:264:5>
|   |-BinaryOperator 0x55cf2bda3578 <line:262:9, col:41> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x55cf2bda3520 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_strong_unscheduled 0x55cf2bda1398
|   | | `-MemberExpr 0x55cf2bda34d8 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55cf2bda1458
|   | |   `-MemberExpr 0x55cf2bda34a8 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x55cf2bda1688
|   | |     `-CXXThisExpr 0x55cf2bda3498 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x55cf2bda3560 <col:41> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x55cf2bda3550 <col:41> 'bool' false
|   `-CXXMemberCallExpr 0x55cf2bda35d8 <line:263:9, col:20> 'void'
|     `-MemberExpr 0x55cf2bda35a8 <col:9> '<bound member function type>' ->reschedule 0x55cf2bda0448
|       `-CXXThisExpr 0x55cf2bda3598 <col:9> 'Task *' implicit this
|-CXXMethodDecl 0x55cf2bda07d0 <line:275:5, col:39> col:10 move_thread 'void (int)'
| `-ParmVarDecl 0x55cf2bda0740 <col:22, col:26> col:26 new_thread_id 'int'
|-CXXMethodDecl 0x55cf2bda08a0 <line:279:5, col:26> col:16 tickets 'int () const' inline
|-CXXMethodDecl 0x55cf2bda09e8 <line:280:5, col:34> col:17 used set_tickets 'void (int)' inline
| `-ParmVarDecl 0x55cf2bda0958 <col:29, col:33> col:33 n 'int'
|-CXXMethodDecl 0x55cf2bda0b38 <line:281:5, col:41> col:17 adjust_tickets 'void (int)' inline
| `-ParmVarDecl 0x55cf2bda0aa8 <col:32, col:36> col:36 delta 'int'
|-CXXMethodDecl 0x55cf2bda0c00 <line:284:5, col:22> col:17 fire 'bool ()' inline
|-CXXMethodDecl 0x55cf2bda0cc0 <line:299:5, col:64> col:25 hook 'TaskCallback () const' inline
| `-DeprecatedAttr 0x55cf2bda0d60 <col:53> "" ""
|-CXXMethodDecl 0x55cf2bda0df8 <line:300:5, col:58> col:18 thunk 'void *() const' inline
| `-DeprecatedAttr 0x55cf2bda0e98 <col:47> "" ""
|-AccessSpecDecl 0x55cf2bda0f08 <line:303:3, col:10> col:3 private
|-FieldDecl 0x55cf2bda0f48 <line:310:5, col:14> col:14 referenced _stride 'unsigned int'
|-FieldDecl 0x55cf2bda0fb0 <line:311:5, col:9> col:9 referenced _tickets 'int'
|-CXXRecordDecl 0x55cf2bda1000 <line:314:5, line:321:5> line:314:11 union Status definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55cf2bda1118 <col:5, col:11> col:11 implicit union Status
| |-CXXRecordDecl 0x55cf2bda11a8 <line:315:9, line:319:9> line:315:9 struct definition
| | |-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | | |-DefaultConstructor exists trivial
| | | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | | |-MoveConstructor exists simple trivial
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial
| | |-FieldDecl 0x55cf2bda12d8 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
| | |-FieldDecl 0x55cf2bda1338 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
| | |-FieldDecl 0x55cf2bda1398 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
| | |-CXXConstructorDecl 0x55cf2be114f8 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
| | |-CXXDestructorDecl 0x55cf2be115d0 <col:9> col:9 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x55cf2be115d0
| | |-CXXConstructorDecl 0x55cf2be11888 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x55cf2be11888
| | | `-ParmVarDecl 0x55cf2be11998 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
| | `-CXXConstructorDecl 0x55cf2be11a38 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x55cf2be11a38
| |   `-ParmVarDecl 0x55cf2be11b48 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'
| |-FieldDecl 0x55cf2bda1458 <col:9> col:9 implicit referenced 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| |-IndirectFieldDecl 0x55cf2bda14b8 <line:316:21> col:21 implicit home_thread_id 'int16_t':'short'
| | |-Field 0x55cf2bda1458 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x55cf2bda12d8 'home_thread_id' 'int16_t':'short'
| |-IndirectFieldDecl 0x55cf2bda1510 <line:317:21> col:21 implicit is_scheduled 'uint8_t':'unsigned char'
| | |-Field 0x55cf2bda1458 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x55cf2bda1338 'is_scheduled' 'uint8_t':'unsigned char'
| |-IndirectFieldDecl 0x55cf2bda1568 <line:318:21> col:21 implicit is_strong_unscheduled 'uint8_t':'unsigned char'
| | |-Field 0x55cf2bda1458 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x55cf2bda1398 'is_strong_unscheduled' 'uint8_t':'unsigned char'
| |-FieldDecl 0x55cf2bda15c0 <line:320:9, col:18> col:18 status 'uint32_t':'unsigned int'
| |-CXXConstructorDecl 0x55cf2be11400 <line:314:11> col:11 implicit used Status 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55cf2be11d68 <col:11>
| |-CXXConstructorDecl 0x55cf2be116d8 <col:11> col:11 implicit constexpr Status 'void (const Task::Status &)' inline default trivial noexcept-unevaluated 0x55cf2be116d8
| | `-ParmVarDecl 0x55cf2be117e8 <col:11> col:11 'const Task::Status &'
| `-CXXConstructorDecl 0x55cf2be11be8 <col:11> col:11 implicit constexpr Status 'void (Task::Status &&)' inline default trivial noexcept-unevaluated 0x55cf2be11be8
|   `-ParmVarDecl 0x55cf2be11cf8 <col:11> col:11 'Task::Status &&'
|-FieldDecl 0x55cf2bda1688 <col:5, line:321:7> col:7 referenced _status 'union Status':'Task::Status'
|-FieldDecl 0x55cf2bda1700 <line:323:5, col:18> col:18 referenced _hook 'TaskCallback':'bool (*)(Task *, void *)'
|-FieldDecl 0x55cf2bda1768 <line:324:5, col:11> col:11 referenced _thunk 'void *'
|-FieldDecl 0x55cf2bda17c8 <line:335:5, col:19> col:19 referenced _thread 'RouterThread *'
|-FieldDecl 0x55cf2bda1828 <line:337:5, col:14> col:14 referenced _owner 'Element *'
|-CXXRecordDecl 0x55cf2bda1878 <line:339:5, line:342:5> line:339:11 referenced union Pending definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55cf2bda1998 <col:5, col:11> col:11 implicit union Pending
| |-FieldDecl 0x55cf2bda1a38 <line:340:9, col:15> col:15 t 'Task *'
| |-FieldDecl 0x55cf2bda1a98 <line:341:9, col:19> col:19 referenced x 'uintptr_t':'unsigned long'
| |-CXXConstructorDecl 0x55cf2be078a8 <line:339:11> col:11 implicit constexpr Pending 'void (const Task::Pending &)' inline default trivial noexcept-unevaluated 0x55cf2be078a8
| | `-ParmVarDecl 0x55cf2be079b8 <col:11> col:11 'const Task::Pending &'
| |-CXXConstructorDecl 0x55cf2be07a58 <col:11> col:11 implicit constexpr Pending 'void (Task::Pending &&)' inline default trivial noexcept-unevaluated 0x55cf2be07a58
| | `-ParmVarDecl 0x55cf2be07b68 <col:11> col:11 'Task::Pending &&'
| |-CXXDestructorDecl 0x55cf2be07bd8 <col:11> col:11 implicit ~Pending 'void ()' inline default trivial noexcept-unevaluated 0x55cf2be07bd8
| |-CXXMethodDecl 0x55cf2be08458 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(const Task::Pending &)' inline default trivial noexcept-unevaluated 0x55cf2be08458
| | `-ParmVarDecl 0x55cf2be08568 <col:11> col:11 'const Task::Pending &'
| |-CXXMethodDecl 0x55cf2be085d8 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(Task::Pending &&)' inline default trivial noexcept-unevaluated 0x55cf2be085d8
| | `-ParmVarDecl 0x55cf2be086e8 <col:11> col:11 'Task::Pending &&'
| `-CXXConstructorDecl 0x55cf2be11dc8 <col:11> col:11 implicit used Pending 'void () noexcept' inline default trivial
|   `-CompoundStmt 0x55cf2be11ea0 <col:11>
|-FieldDecl 0x55cf2bda1b10 <line:343:5, col:13> col:13 referenced _pending_nextptr 'Task::Pending'
|-CXXConstructorDecl 0x55cf2bda1c58 <line:345:5, col:23> col:5 Task 'void (const Task &)'
| `-ParmVarDecl 0x55cf2bda1b98 <col:10, col:22> col:22 x 'const Task &'
|-CXXMethodDecl 0x55cf2bda1e08 <line:346:5, col:34> col:11 operator= 'Task &(const Task &)'
| `-ParmVarDecl 0x55cf2bda1d18 <col:21, col:33> col:33 x 'const Task &'
|-CXXMethodDecl 0x55cf2bda1ed0 <line:347:5, col:18> col:10 cleanup 'void ()'
|-CXXMethodDecl 0x55cf2bda1f90 <line:352:5, col:37> col:17 used on_scheduled_list 'bool () const' inline
|-CXXMethodDecl 0x55cf2bda2050 <line:353:5, line:355:5> line:353:17 on_pending_list 'bool () const' inline
| `-CompoundStmt 0x55cf2bda3708 <col:41, line:355:5>
|   `-ReturnStmt 0x55cf2bda36f8 <line:354:9, col:38>
|     `-BinaryOperator 0x55cf2bda36d8 <col:16, col:38> 'bool' '!='
|       |-ImplicitCastExpr 0x55cf2bda36a8 <col:16, col:33> 'uintptr_t':'unsigned long' <LValueToRValue>
|       | `-MemberExpr 0x55cf2bda3658 <col:16, col:33> 'const uintptr_t':'const unsigned long' lvalue .x 0x55cf2bda1a98
|       |   `-MemberExpr 0x55cf2bda3628 <col:16> 'const Task::Pending' lvalue ->_pending_nextptr 0x55cf2bda1b10
|       |     `-CXXThisExpr 0x55cf2bda3618 <col:16> 'const Task *' implicit this
|       `-ImplicitCastExpr 0x55cf2bda36c0 <col:38> 'unsigned long' <IntegralCast>
|         `-IntegerLiteral 0x55cf2bda3688 <col:38> 'int' 0
|-CXXMethodDecl 0x55cf2bda2110 <line:356:5, col:33> col:17 needs_cleanup 'bool () const' inline
|-CXXMethodDecl 0x55cf2bda2250 <line:361:5, col:33> col:10 add_pending 'void (bool)'
| `-ParmVarDecl 0x55cf2bda21c0 <col:22, col:27> col:27 always 'bool'
|-CXXMethodDecl 0x55cf2bda23c8 <line:362:5, col:46> col:10 process_pending 'void (RouterThread *)'
| `-ParmVarDecl 0x55cf2bda2308 <col:26, col:40> col:40 thread 'RouterThread *'
|-CXXMethodDecl 0x55cf2bda2510 <line:364:5, col:64> col:10 used complete_schedule 'void (RouterThread *)'
| `-ParmVarDecl 0x55cf2bda2480 <col:28, col:42> col:42 process_pending_thread 'RouterThread *'
|-CXXMethodDecl 0x55cf2bda25d8 <line:365:5, col:44> col:17 remove_from_scheduled_list 'void ()' inline
|-CXXMethodDecl 0x55cf2bda27a0 <line:367:5, col:55> col:17 error_hook 'bool (Task *, void *)' static
| |-ParmVarDecl 0x55cf2bda2688 <col:28, col:34> col:34 task 'Task *'
| `-ParmVarDecl 0x55cf2bda2708 <col:40, col:46> col:46 user_data 'void *'
|-FriendDecl 0x55cf2bda28a0 <line:369:5, col:18> col:12 'class RouterThread':'RouterThread'
`-FriendDecl 0x55cf2bda2930 <line:370:5, col:18> col:12 'class Master':'Master'

Layout: <CGRecordLayout
  LLVMType:%class.Task = type { %struct.TaskLink.base, i32, i32, %"union.Task::Status", i1 (%class.Task*, i8*)*, i8*, %class.RouterThread*, %class.Element*, %"union.Task::Pending" }
  NonVirtualBaseLLVMType:%class.Task = type { %struct.TaskLink.base, i32, i32, %"union.Task::Status", i1 (%class.Task*, i8*)*, i8*, %class.RouterThread*, %class.Element*, %"union.Task::Pending" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5)
         0 |   TimerCallback callback
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timer
         0 |   int _schedpos1
         8 |   class Timestamp _expiry_s
         8 |     union Timestamp::rep_t _t
         8 |       int64_t x
        16 |   union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5) _hook
        16 |     TimerCallback callback
        24 |   void * _thunk
        32 |   class Element * _owner
        40 |   class RouterThread * _thread
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55cf2bd97fa8 <../dummy_inc/click/timer.hh:343:5, line:345:5> line:343:5 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x55cf2bd980d8 <line:344:2, col:16> col:16 referenced callback 'TimerCallback':'void (*)(Timer *, void *)'
`-CXXDestructorDecl 0x55cf2bd98bc8 <line:343:5> col:5 implicit ~ 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%union.anon.19 = type { void (%class.Timer*, i8*)* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55cf2bd947d8 prev 0x55cf2bcbdea0 <../dummy_inc/click/timer.hh:14:1, line:358:1> line:14:7 class Timer definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55cf2bd948d0 <col:1, col:7> col:7 implicit referenced class Timer
|-AccessSpecDecl 0x55cf2bd94960 <col:15, col:21> col:15 public
|-CXXConstructorDecl 0x55cf2bd949c0 <line:22:5, col:11> col:5 Timer 'void ()'
|-CXXRecordDecl 0x55cf2bd94ae0 <line:24:5, line:25:5> line:24:12 referenced struct do_nothing_t definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| `-CXXRecordDecl 0x55cf2bd94bf8 <col:5, col:12> col:12 implicit struct do_nothing_t
|-CXXConstructorDecl 0x55cf2bd94d98 <line:32:5, col:37> col:5 Timer 'void (const Timer::do_nothing_t &)'
| `-ParmVarDecl 0x55cf2bd94cd8 <col:11, col:31> col:31 unused 'const Timer::do_nothing_t &'
|-CXXConstructorDecl 0x55cf2bd94fe8 <line:38:5, col:43> col:5 Timer 'void (TimerCallback, void *)'
| |-ParmVarDecl 0x55cf2bd94e58 <col:11, col:25> col:25 f 'TimerCallback':'void (*)(Timer *, void *)'
| `-ParmVarDecl 0x55cf2bd94ed8 <col:28, col:34> col:34 user_data 'void *'
|-CXXConstructorDecl 0x55cf2bd95178 <line:43:5, col:27> col:5 Timer 'void (Element *)'
| `-ParmVarDecl 0x55cf2bd950b0 <col:11, col:20> col:20 element 'Element *'
|-CXXConstructorDecl 0x55cf2bd952f8 <line:47:5, col:21> col:5 Timer 'void (Task *)'
| `-ParmVarDecl 0x55cf2bd95238 <col:11, col:17> col:17 task 'Task *'
|-CXXConstructorDecl 0x55cf2bd954a8 <line:52:5, col:25> col:5 Timer 'void (const Timer &)'
| `-ParmVarDecl 0x55cf2bd953e8 <col:11, col:24> col:24 x 'const Timer &'
|-CXXDestructorDecl 0x55cf2bd955a0 <line:55:5, line:58:5> line:55:12 ~Timer 'void () noexcept' inline
| `-CompoundStmt 0x55cf2bd98da0 <col:21, line:58:5>
|   `-IfStmt 0x55cf2bd98d88 <line:56:2, line:57:17>
|     |-CXXMemberCallExpr 0x55cf2bd98cf0 <line:56:6, col:16> 'bool'
|     | `-MemberExpr 0x55cf2bd98cc0 <col:6> '<bound member function type>' ->scheduled 0x55cf2bd95df8
|     |   `-ImplicitCastExpr 0x55cf2bd98d10 <col:6> 'const Timer *' <NoOp>
|     |     `-CXXThisExpr 0x55cf2bd98cb0 <col:6> 'Timer *' implicit this
|     `-CXXMemberCallExpr 0x55cf2bd98d68 <line:57:6, col:17> 'void'
|       `-MemberExpr 0x55cf2bd98d38 <col:6> '<bound member function type>' ->unschedule 0x55cf2bd97450
|         `-CXXThisExpr 0x55cf2bd98d28 <col:6> 'Timer *' implicit this
|-CXXMethodDecl 0x55cf2bd956a0 <line:62:5, line:65:5> line:62:17 used assign 'void ()' inline
| `-CompoundStmt 0x55cf2bd98f40 <col:26, line:65:5>
|   |-BinaryOperator 0x55cf2bd98e60 <line:63:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x55cf2bd98df8 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x55cf2bd980d8
|   | | `-MemberExpr 0x55cf2bd98dc8 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x55cf2bd98198
|   | |   `-CXXThisExpr 0x55cf2bd98db8 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x55cf2bd98e48 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55cf2bd98e28 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x55cf2bd985f8 'do_nothing_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x55cf2bd98f20 <line:64:2, col:20> 'void *' lvalue '='
|     |-MemberExpr 0x55cf2bd98e90 <col:2> 'void *' lvalue ->_thunk 0x55cf2bd98218
|     | `-CXXThisExpr 0x55cf2bd98e80 <col:2> 'Timer *' implicit this
|     `-CStyleCastExpr 0x55cf2bd98ef8 <col:11, col:20> 'void *' <IntegralToPointer>
|       `-IntegerLiteral 0x55cf2bd98ec0 <col:20> 'int' 1
|-CXXMethodDecl 0x55cf2bd957e0 <line:68:5, line:71:5> line:68:17 assign 'void (const Timer::do_nothing_t &)' inline
| |-ParmVarDecl 0x55cf2bd95750 <col:24, col:44> col:44 used unused 'const Timer::do_nothing_t &'
| `-CompoundStmt 0x55cf2bd990a0 <col:52, line:71:5>
|   |-CStyleCastExpr 0x55cf2bd98f90 <line:69:2, col:9> 'void' <ToVoid>
|   | `-DeclRefExpr 0x55cf2bd98f60 <col:9> 'const Timer::do_nothing_t' lvalue ParmVar 0x55cf2bd95750 'unused' 'const Timer::do_nothing_t &'
|   `-CXXMemberCallExpr 0x55cf2bd99080 <line:70:2, col:9> 'void'
|     `-MemberExpr 0x55cf2bd99050 <col:2> '<bound member function type>' ->assign 0x55cf2bd956a0
|       `-CXXThisExpr 0x55cf2bd99040 <col:2> 'Timer *' implicit this
|-CXXMethodDecl 0x55cf2bd959b0 <line:76:5, line:79:5> line:76:17 assign 'void (TimerCallback, void *)' inline
| |-ParmVarDecl 0x55cf2bd95898 <col:24, col:38> col:38 used f 'TimerCallback':'void (*)(Timer *, void *)'
| |-ParmVarDecl 0x55cf2bd95918 <col:41, col:47> col:47 used user_data 'void *'
| `-CompoundStmt 0x55cf2bd99220 <col:58, line:79:5>
|   |-BinaryOperator 0x55cf2bd99168 <line:77:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x55cf2bd99100 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x55cf2bd980d8
|   | | `-MemberExpr 0x55cf2bd990d0 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x55cf2bd98198
|   | |   `-CXXThisExpr 0x55cf2bd990c0 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x55cf2bd99150 <col:19> 'TimerCallback':'void (*)(Timer *, void *)' <LValueToRValue>
|   |   `-DeclRefExpr 0x55cf2bd99130 <col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue ParmVar 0x55cf2bd95898 'f' 'TimerCallback':'void (*)(Timer *, void *)'
|   `-BinaryOperator 0x55cf2bd99200 <line:78:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x55cf2bd99198 <col:2> 'void *' lvalue ->_thunk 0x55cf2bd98218
|     | `-CXXThisExpr 0x55cf2bd99188 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x55cf2bd991e8 <col:11> 'void *' <LValueToRValue>
|       `-DeclRefExpr 0x55cf2bd991c8 <col:11> 'void *' lvalue ParmVar 0x55cf2bd95918 'user_data' 'void *'
|-CXXMethodDecl 0x55cf2bd95b00 <line:84:5, line:87:5> line:84:10 assign 'void (Element *)'
| |-ParmVarDecl 0x55cf2bd95a70 <col:17, col:26> col:26 used element 'Element *'
| `-CompoundStmt 0x55cf2bd993b8 <col:35, line:87:5>
|   |-BinaryOperator 0x55cf2bd992e8 <line:85:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x55cf2bd99280 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x55cf2bd980d8
|   | | `-MemberExpr 0x55cf2bd99250 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x55cf2bd98198
|   | |   `-CXXThisExpr 0x55cf2bd99240 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x55cf2bd992d0 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55cf2bd992b0 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x55cf2bd987d0 'element_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x55cf2bd99398 <line:86:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x55cf2bd99318 <col:2> 'void *' lvalue ->_thunk 0x55cf2bd98218
|     | `-CXXThisExpr 0x55cf2bd99308 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x55cf2bd99380 <col:11> 'void *' <BitCast>
|       `-ImplicitCastExpr 0x55cf2bd99368 <col:11> 'Element *' <LValueToRValue>
|         `-DeclRefExpr 0x55cf2bd99348 <col:11> 'Element *' lvalue ParmVar 0x55cf2bd95a70 'element' 'Element *'
|-CXXMethodDecl 0x55cf2bd95c48 <line:91:5, line:94:5> line:91:10 assign 'void (Task *)'
| |-ParmVarDecl 0x55cf2bd95bb8 <col:17, col:23> col:23 used task 'Task *'
| `-CompoundStmt 0x55cf2bd99550 <col:29, line:94:5>
|   |-BinaryOperator 0x55cf2bd99480 <line:92:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x55cf2bd99418 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x55cf2bd980d8
|   | | `-MemberExpr 0x55cf2bd993e8 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x55cf2bd98198
|   | |   `-CXXThisExpr 0x55cf2bd993d8 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x55cf2bd99468 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55cf2bd99448 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x55cf2bd989a8 'task_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x55cf2bd99530 <line:93:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x55cf2bd994b0 <col:2> 'void *' lvalue ->_thunk 0x55cf2bd98218
|     | `-CXXThisExpr 0x55cf2bd994a0 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x55cf2bd99518 <col:11> 'void *' <BitCast>
|       `-ImplicitCastExpr 0x55cf2bd99500 <col:11> 'Task *' <LValueToRValue>
|         `-DeclRefExpr 0x55cf2bd994e0 <col:11> 'Task *' lvalue ParmVar 0x55cf2bd95bb8 'task' 'Task *'
|-CXXMethodDecl 0x55cf2bd95d38 <line:98:5, line:100:5> line:98:17 initialized 'bool () const' inline
| `-CompoundStmt 0x55cf2bd99630 <col:37, line:100:5>
|   `-ReturnStmt 0x55cf2bd99620 <line:99:2, col:19>
|     `-BinaryOperator 0x55cf2bd99600 <col:9, col:19> 'bool' '!='
|       |-ImplicitCastExpr 0x55cf2bd995d0 <col:9> 'Element *' <LValueToRValue>
|       | `-MemberExpr 0x55cf2bd99580 <col:9> 'Element *const' lvalue ->_owner 0x55cf2bd98278
|       |   `-CXXThisExpr 0x55cf2bd99570 <col:9> 'const Timer *' implicit this
|       `-ImplicitCastExpr 0x55cf2bd995e8 <col:19> 'Element *' <NullToPointer>
|         `-IntegerLiteral 0x55cf2bd995b0 <col:19> 'int' 0
|-CXXMethodDecl 0x55cf2bd95df8 <line:103:5, line:105:5> line:103:17 used scheduled 'bool () const' inline
| `-CompoundStmt 0x55cf2bd996f0 <col:35, line:105:5>
|   `-ReturnStmt 0x55cf2bd996e0 <line:104:2, col:23>
|     `-BinaryOperator 0x55cf2bd996c0 <col:9, col:23> 'bool' '!='
|       |-ImplicitCastExpr 0x55cf2bd996a8 <col:9> 'int' <LValueToRValue>
|       | `-MemberExpr 0x55cf2bd99658 <col:9> 'const int' lvalue ->_schedpos1 0x55cf2bd97ef8
|       |   `-CXXThisExpr 0x55cf2bd99648 <col:9> 'const Timer *' implicit this
|       `-IntegerLiteral 0x55cf2bd99688 <col:23> 'int' 0
|-CXXMethodDecl 0x55cf2bd95eb8 <line:116:5, line:118:5> line:116:29 used expiry_steady 'const Timestamp &() const' inline
| `-CompoundStmt 0x55cf2bd99758 <col:51, line:118:5>
|   `-ReturnStmt 0x55cf2bd99748 <line:117:2, col:9>
|     `-MemberExpr 0x55cf2bd99718 <col:9> 'const Timestamp' lvalue ->_expiry_s 0x55cf2bd97f58
|       `-CXXThisExpr 0x55cf2bd99708 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x55cf2bd95f78 <line:131:5, line:136:5> line:131:22 expiry 'Timestamp () const' inline
| `-CompoundStmt 0x55cf2bd99cb0 <col:37, line:136:5>
|   `-IfStmt 0x55cf2bd99c88 <line:132:2, line:135:13> has_else
|     |-ImplicitCastExpr 0x55cf2bd99818 <line:132:6> 'bool' <MemberPointerToBoolean>
|     | `-ImplicitCastExpr 0x55cf2bd99800 <col:6> 'Timestamp::unspecified_bool_type':'Timestamp::seconds_type (Timestamp::*)() const' <UserDefinedConversion>
|     |   `-CXXMemberCallExpr 0x55cf2bd997e0 <col:6> 'Timestamp::unspecified_bool_type':'Timestamp::seconds_type (Timestamp::*)() const'
|     |     `-MemberExpr 0x55cf2bd997b0 <col:6> '<bound member function type>' .operator int (Timestamp::*)() const 0x55cf2bc4ff78
|     |       `-MemberExpr 0x55cf2bd99780 <col:6> 'const Timestamp' lvalue ->_expiry_s 0x55cf2bd97f58
|     |         `-CXXThisExpr 0x55cf2bd99770 <col:6> 'const Timer *' implicit this
|     |-ReturnStmt 0x55cf2bd99bf8 <line:133:6, col:72>
|     | `-ExprWithCleanups 0x55cf2bd99be0 <col:13, col:72> 'Timestamp'
|     |   `-CXXConstructExpr 0x55cf2bd99bb0 <col:13, col:72> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|     |     `-MaterializeTemporaryExpr 0x55cf2bd99b98 <col:13, col:72> 'Timestamp' xvalue
|     |       `-CXXOperatorCallExpr 0x55cf2bd99b60 <col:13, col:72> 'Timestamp'
|     |         |-ImplicitCastExpr 0x55cf2bd99b48 <col:45> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|     |         | `-DeclRefExpr 0x55cf2bd99b28 <col:45> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55cf2bc7e750 'operator-' 'Timestamp (Timestamp, const Timestamp &)'
|     |         |-CXXConstructExpr 0x55cf2bd99ac8 <col:13, col:43> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|     |         | `-MaterializeTemporaryExpr 0x55cf2bd99ab0 <col:13, col:43> 'Timestamp' xvalue
|     |         |   `-CXXOperatorCallExpr 0x55cf2bd999d8 <col:13, col:43> 'Timestamp'
|     |         |     |-ImplicitCastExpr 0x55cf2bd999c0 <col:23> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|     |         |     | `-DeclRefExpr 0x55cf2bd999a0 <col:23> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55cf2bc7e410 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|     |         |     |-CXXConstructExpr 0x55cf2bd99940 <col:13> 'Timestamp' 'void (const Timestamp &) noexcept'
|     |         |     | `-MemberExpr 0x55cf2bd99840 <col:13> 'const Timestamp' lvalue ->_expiry_s 0x55cf2bd97f58
|     |         |     |   `-CXXThisExpr 0x55cf2bd99830 <col:13> 'const Timer *' implicit this
|     |         |     `-MaterializeTemporaryExpr 0x55cf2bd99988 <col:25, col:43> 'const Timestamp' lvalue
|     |         |       `-ImplicitCastExpr 0x55cf2bd99970 <col:25, col:43> 'const Timestamp' <NoOp>
|     |         |         `-CallExpr 0x55cf2bd99920 <col:25, col:43> 'Timestamp'
|     |         |           `-ImplicitCastExpr 0x55cf2bd99908 <col:25, col:36> 'Timestamp (*)()' <FunctionToPointerDecay>
|     |         |             `-DeclRefExpr 0x55cf2bd998a8 <col:25, col:36> 'Timestamp ()' lvalue CXXMethod 0x55cf2bc71a70 'recent' 'Timestamp ()'
|     |         `-MaterializeTemporaryExpr 0x55cf2bd99b10 <col:47, col:72> 'const Timestamp' lvalue
|     |           `-ImplicitCastExpr 0x55cf2bd99af8 <col:47, col:72> 'const Timestamp' <NoOp>
|     |             `-CallExpr 0x55cf2bd99a90 <col:47, col:72> 'Timestamp'
|     |               `-ImplicitCastExpr 0x55cf2bd99a78 <col:47, col:58> 'Timestamp (*)()' <FunctionToPointerDecay>
|     |                 `-DeclRefExpr 0x55cf2bd99a48 <col:47, col:58> 'Timestamp ()' lvalue CXXMethod 0x55cf2baccfc0 'recent_steady' 'Timestamp ()'
|     `-ReturnStmt 0x55cf2bd99c78 <line:135:6, col:13>
|       `-CXXConstructExpr 0x55cf2bd99c48 <col:13> 'Timestamp' 'void (const Timestamp &) noexcept'
|         `-MemberExpr 0x55cf2bd99c18 <col:13> 'const Timestamp' lvalue ->_expiry_s 0x55cf2bd97f58
|           `-CXXThisExpr 0x55cf2bd99c08 <col:13> 'const Timer *' implicit this
|-CXXMethodDecl 0x55cf2bd96038 <line:139:5, line:141:5> line:139:20 router 'Router *() const' inline
| `-CompoundStmt 0x55cf2bd99d98 <col:35, line:141:5>
|   `-ReturnStmt 0x55cf2bd99d88 <line:140:2, col:24>
|     `-CXXMemberCallExpr 0x55cf2bd99d50 <col:9, col:24> 'Router *'
|       `-MemberExpr 0x55cf2bd99d20 <col:9, col:17> '<bound member function type>' ->router 0x55cf2bcd0600
|         `-ImplicitCastExpr 0x55cf2bd99d70 <col:9> 'const Element *' <NoOp>
|           `-ImplicitCastExpr 0x55cf2bd99d08 <col:9> 'Element *' <LValueToRValue>
|             `-MemberExpr 0x55cf2bd99cd8 <col:9> 'Element *const' lvalue ->_owner 0x55cf2bd98278
|               `-CXXThisExpr 0x55cf2bd99cc8 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x55cf2bd960f8 <line:144:5, line:146:5> line:144:21 element 'Element *() const' inline
| `-CompoundStmt 0x55cf2bd99e18 <col:37, line:146:5>
|   `-ReturnStmt 0x55cf2bd99e08 <line:145:2, col:9>
|     `-ImplicitCastExpr 0x55cf2bd99df0 <col:9> 'Element *' <LValueToRValue>
|       `-MemberExpr 0x55cf2bd99dc0 <col:9> 'Element *const' lvalue ->_owner 0x55cf2bd98278
|         `-CXXThisExpr 0x55cf2bd99db0 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x55cf2bd961b8 <line:149:5, line:151:5> line:149:26 thread 'RouterThread *() const' inline
| `-CompoundStmt 0x55cf2bd99e98 <col:41, line:151:5>
|   `-ReturnStmt 0x55cf2bd99e88 <line:150:2, col:9>
|     `-ImplicitCastExpr 0x55cf2bd99e70 <col:9> 'RouterThread *' <LValueToRValue>
|       `-MemberExpr 0x55cf2bd99e40 <col:9> 'RouterThread *const' lvalue ->_thread 0x55cf2bd982d8
|         `-CXXThisExpr 0x55cf2bd99e30 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x55cf2bd96280 <line:154:5, col:26> col:9 home_thread_id 'int () const'
|-CXXMethodDecl 0x55cf2bd96478 <line:171:5, col:55> col:10 initialize 'void (Element *, bool)'
| |-ParmVarDecl 0x55cf2bd96330 <col:21, col:30> col:30 owner 'Element *'
| `-ParmVarDecl 0x55cf2bd963a8 <col:37, col:50> col:42 quiet 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55cf2bd98bb8 <col:50> 'bool' false
|-CXXMethodDecl 0x55cf2bd965f8 <line:181:5, col:35> col:10 initialize 'void (Router *)'
| `-ParmVarDecl 0x55cf2bd96538 <col:21, col:29> col:29 router 'Router *'
|-CXXMethodDecl 0x55cf2bd96740 <line:191:5, col:57> col:10 used schedule_at_steady 'void (const Timestamp &)'
| `-ParmVarDecl 0x55cf2bd966b0 <col:29, col:46> col:46 when_steady 'const Timestamp &'
|-CXXMethodDecl 0x55cf2bd96888 <line:197:5, col:59> col:10 reschedule_at_steady 'void (const Timestamp &)'
| `-ParmVarDecl 0x55cf2bd967f8 <col:31, col:48> col:48 when_steady 'const Timestamp &'
|-CXXMethodDecl 0x55cf2bd969d0 <line:210:5, col:50> col:17 used schedule_at 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x55cf2bd96940 <col:29, col:46> col:46 when 'const Timestamp &'
|-CXXMethodDecl 0x55cf2bd96b18 <line:216:5, col:52> col:17 reschedule_at 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x55cf2bd96a88 <col:31, col:48> col:48 when 'const Timestamp &'
|-CXXMethodDecl 0x55cf2bd96be0 <line:221:5, line:223:5> line:221:17 schedule_now 'void ()' inline
| `-CompoundStmt 0x55cf2bd9a000 <col:32, line:223:5>
|   `-ExprWithCleanups 0x55cf2bd99fe8 <line:222:2, col:47> 'void'
|     `-CXXMemberCallExpr 0x55cf2bd99f90 <col:2, col:47> 'void'
|       |-MemberExpr 0x55cf2bd99ec0 <col:2> '<bound member function type>' ->schedule_at_steady 0x55cf2bd96740
|       | `-CXXThisExpr 0x55cf2bd99eb0 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55cf2bd99fd0 <col:21, col:46> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55cf2bd99fb8 <col:21, col:46> 'const Timestamp' <NoOp>
|           `-CallExpr 0x55cf2bd99f70 <col:21, col:46> 'Timestamp'
|             `-ImplicitCastExpr 0x55cf2bd99f58 <col:21, col:32> 'Timestamp (*)()' <FunctionToPointerDecay>
|               `-DeclRefExpr 0x55cf2bd99f28 <col:21, col:32> 'Timestamp ()' lvalue CXXMethod 0x55cf2baccfc0 'recent_steady' 'Timestamp ()'
|-CXXMethodDecl 0x55cf2bd96d20 <line:233:5, col:47> col:10 used schedule_after 'void (const Timestamp &)'
| `-ParmVarDecl 0x55cf2bd96c90 <col:25, col:42> col:42 delta 'const Timestamp &'
|-CXXMethodDecl 0x55cf2bd96e68 <line:239:5, line:241:5> line:239:17 used schedule_after_sec 'void (uint32_t)' inline
| |-ParmVarDecl 0x55cf2bd96dd8 <col:36, col:45> col:45 used delta_sec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55cf2bd9a188 <col:56, line:241:5>
|   `-ExprWithCleanups 0x55cf2bd9a170 <line:240:2, col:40> 'void'
|     `-CXXMemberCallExpr 0x55cf2bd9a118 <col:2, col:40> 'void'
|       |-MemberExpr 0x55cf2bd9a028 <col:2> '<bound member function type>' ->schedule_after 0x55cf2bd96d20
|       | `-CXXThisExpr 0x55cf2bd9a018 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55cf2bd9a158 <col:17, col:39> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55cf2bd9a140 <col:17, col:39> 'const Timestamp' <NoOp>
|           `-CXXTemporaryObjectExpr 0x55cf2bd9a0d8 <col:17, col:39> 'Timestamp' 'void (unsigned int, uint32_t)'
|             |-ImplicitCastExpr 0x55cf2bd9a0a8 <col:27> 'uint32_t':'unsigned int' <LValueToRValue>
|             | `-DeclRefExpr 0x55cf2bd9a068 <col:27> 'uint32_t':'unsigned int' lvalue ParmVar 0x55cf2bd96dd8 'delta_sec' 'uint32_t':'unsigned int'
|             `-ImplicitCastExpr 0x55cf2bd9a0c0 <col:38> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x55cf2bd9a088 <col:38> 'int' 0
|-CXXMethodDecl 0x55cf2bd96fb0 <line:247:5, line:249:5> line:247:17 used schedule_after_msec 'void (uint32_t)' inline
| |-ParmVarDecl 0x55cf2bd96f20 <col:37, col:46> col:46 used delta_msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55cf2bd9a3f8 <col:58, line:249:5>
|   `-ExprWithCleanups 0x55cf2bd9a3e0 <line:248:2, col:49> 'void'
|     `-CXXMemberCallExpr 0x55cf2bd9a388 <col:2, col:49> 'void'
|       |-MemberExpr 0x55cf2bd9a1b0 <col:2> '<bound member function type>' ->schedule_after 0x55cf2bd96d20
|       | `-CXXThisExpr 0x55cf2bd9a1a0 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55cf2bd9a3c8 <col:17, col:48> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55cf2bd9a3b0 <col:17, col:48> 'const Timestamp' <NoOp>
|           `-CallExpr 0x55cf2bd9a330 <col:17, col:48> 'Timestamp'
|             |-ImplicitCastExpr 0x55cf2bd9a318 <col:17, col:28> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x55cf2bd9a288 <col:17, col:28> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x55cf2bc51d68 'make_msec' 'Timestamp (Timestamp::value_type)'
|             `-ImplicitCastExpr 0x55cf2bd9a370 <col:38> 'Timestamp::value_type':'long' <IntegralCast>
|               `-ImplicitCastExpr 0x55cf2bd9a358 <col:38> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x55cf2bd9a268 <col:38> 'uint32_t':'unsigned int' lvalue ParmVar 0x55cf2bd96f20 'delta_msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55cf2bd970f8 <line:259:5, line:261:5> line:259:17 reschedule_after 'void (const Timestamp &)' inline
| |-ParmVarDecl 0x55cf2bd97068 <col:34, col:51> col:51 used delta 'const Timestamp &'
| `-CompoundStmt 0x55cf2bd9a5d8 <col:58, line:261:5>
|   `-ExprWithCleanups 0x55cf2bd9a5c0 <line:260:2, col:38> 'void'
|     `-CXXMemberCallExpr 0x55cf2bd9a568 <col:2, col:38> 'void'
|       |-MemberExpr 0x55cf2bd9a420 <col:2> '<bound member function type>' ->schedule_at_steady 0x55cf2bd96740
|       | `-CXXThisExpr 0x55cf2bd9a410 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55cf2bd9a5a8 <col:21, col:33> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55cf2bd9a590 <col:21, col:33> 'const Timestamp' <NoOp>
|           `-CXXOperatorCallExpr 0x55cf2bd9a530 <col:21, col:33> 'Timestamp'
|             |-ImplicitCastExpr 0x55cf2bd9a518 <col:31> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x55cf2bd9a4f8 <col:31> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55cf2bc7e410 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|             |-CXXConstructExpr 0x55cf2bd9a4c8 <col:21> 'Timestamp' 'void (const Timestamp &) noexcept'
|             | `-ImplicitCastExpr 0x55cf2bd9a4b0 <col:21> 'const Timestamp' lvalue <NoOp>
|             |   `-MemberExpr 0x55cf2bd9a460 <col:21> 'Timestamp' lvalue ->_expiry_s 0x55cf2bd97f58
|             |     `-CXXThisExpr 0x55cf2bd9a450 <col:21> 'Timer *' implicit this
|             `-DeclRefExpr 0x55cf2bd9a490 <col:33> 'const Timestamp' lvalue ParmVar 0x55cf2bd97068 'delta' 'const Timestamp &'
|-CXXMethodDecl 0x55cf2bd97240 <line:268:5, line:270:5> line:268:17 used reschedule_after_sec 'void (uint32_t)' inline
| |-ParmVarDecl 0x55cf2bd971b0 <col:38, col:47> col:47 used delta_sec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55cf2bd9a8b0 <col:58, line:270:5>
|   `-ExprWithCleanups 0x55cf2bd9a898 <line:269:2, col:79> 'void'
|     `-CXXMemberCallExpr 0x55cf2bd9a840 <col:2, col:79> 'void'
|       |-MemberExpr 0x55cf2bd9a600 <col:2> '<bound member function type>' ->schedule_at_steady 0x55cf2bd96740
|       | `-CXXThisExpr 0x55cf2bd9a5f0 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55cf2bd9a880 <col:21, col:78> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55cf2bd9a868 <col:21, col:78> 'const Timestamp' <NoOp>
|           `-CXXTemporaryObjectExpr 0x55cf2bd9a800 <col:21, col:78> 'Timestamp' 'void (unsigned int, uint32_t)'
|             |-BinaryOperator 0x55cf2bd9a738 <col:31, col:49> 'unsigned int' '+'
|             | |-ImplicitCastExpr 0x55cf2bd9a720 <col:31, col:45> 'unsigned int' <IntegralCast>
|             | | `-CXXMemberCallExpr 0x55cf2bd9a6b0 <col:31, col:45> 'Timestamp::seconds_type':'int'
|             | |   `-MemberExpr 0x55cf2bd9a680 <col:31, col:41> '<bound member function type>' .sec 0x55cf2baceab8
|             | |     `-ImplicitCastExpr 0x55cf2bd9a6d0 <col:31> 'const Timestamp' lvalue <NoOp>
|             | |       `-MemberExpr 0x55cf2bd9a650 <col:31> 'Timestamp' lvalue ->_expiry_s 0x55cf2bd97f58
|             | |         `-CXXThisExpr 0x55cf2bd9a640 <col:31> 'Timer *' implicit this
|             | `-ImplicitCastExpr 0x55cf2bd9a708 <col:49> 'uint32_t':'unsigned int' <LValueToRValue>
|             |   `-DeclRefExpr 0x55cf2bd9a6e8 <col:49> 'uint32_t':'unsigned int' lvalue ParmVar 0x55cf2bd971b0 'delta_sec' 'uint32_t':'unsigned int'
|             `-CXXMemberCallExpr 0x55cf2bd9a7c8 <col:60, col:77> 'uint32_t':'unsigned int'
|               `-MemberExpr 0x55cf2bd9a798 <col:60, col:70> '<bound member function type>' .subsec 0x55cf2bacf1b0
|                 `-ImplicitCastExpr 0x55cf2bd9a7e8 <col:60> 'const Timestamp' lvalue <NoOp>
|                   `-MemberExpr 0x55cf2bd9a768 <col:60> 'Timestamp' lvalue ->_expiry_s 0x55cf2bd97f58
|                     `-CXXThisExpr 0x55cf2bd9a758 <col:60> 'Timer *' implicit this
|-CXXMethodDecl 0x55cf2bd97388 <line:277:5, line:279:5> line:277:17 used reschedule_after_msec 'void (uint32_t)' inline
| |-ParmVarDecl 0x55cf2bd972f8 <col:39, col:48> col:48 used delta_msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55cf2bd9abe8 <col:60, line:279:5>
|   `-ExprWithCleanups 0x55cf2bd9abd0 <line:278:2, col:65> 'void'
|     `-CXXMemberCallExpr 0x55cf2bd9ab78 <col:2, col:65> 'void'
|       |-MemberExpr 0x55cf2bd9a8d8 <col:2> '<bound member function type>' ->schedule_at_steady 0x55cf2bd96740
|       | `-CXXThisExpr 0x55cf2bd9a8c8 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55cf2bd9abb8 <col:21, col:64> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55cf2bd9aba0 <col:21, col:64> 'const Timestamp' <NoOp>
|           `-CXXOperatorCallExpr 0x55cf2bd9ab40 <col:21, col:64> 'Timestamp'
|             |-ImplicitCastExpr 0x55cf2bd9ab28 <col:31> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x55cf2bd9ab08 <col:31> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55cf2bc7e410 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|             |-CXXConstructExpr 0x55cf2bd9aaa8 <col:21> 'Timestamp' 'void (const Timestamp &) noexcept'
|             | `-ImplicitCastExpr 0x55cf2bd9aa90 <col:21> 'const Timestamp' lvalue <NoOp>
|             |   `-MemberExpr 0x55cf2bd9a918 <col:21> 'Timestamp' lvalue ->_expiry_s 0x55cf2bd97f58
|             |     `-CXXThisExpr 0x55cf2bd9a908 <col:21> 'Timer *' implicit this
|             `-MaterializeTemporaryExpr 0x55cf2bd9aaf0 <col:33, col:64> 'const Timestamp' lvalue
|               `-ImplicitCastExpr 0x55cf2bd9aad8 <col:33, col:64> 'const Timestamp' <NoOp>
|                 `-CallExpr 0x55cf2bd9aa38 <col:33, col:64> 'Timestamp'
|                   |-ImplicitCastExpr 0x55cf2bd9aa20 <col:33, col:44> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|                   | `-DeclRefExpr 0x55cf2bd9a9f0 <col:33, col:44> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x55cf2bc51d68 'make_msec' 'Timestamp (Timestamp::value_type)'
|                   `-ImplicitCastExpr 0x55cf2bd9aa78 <col:54> 'Timestamp::value_type':'long' <IntegralCast>
|                     `-ImplicitCastExpr 0x55cf2bd9aa60 <col:54> 'uint32_t':'unsigned int' <LValueToRValue>
|                       `-DeclRefExpr 0x55cf2bd9a9d0 <col:54> 'uint32_t':'unsigned int' lvalue ParmVar 0x55cf2bd972f8 'delta_msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55cf2bd97450 <line:285:5, col:21> col:10 used unschedule 'void ()'
|-CXXMethodDecl 0x55cf2bd97510 <line:288:5, line:291:5> line:288:17 clear 'void ()' inline
| `-CompoundStmt 0x55cf2bd9b0b0 <col:25, line:291:5>
|   |-CXXMemberCallExpr 0x55cf2bd9ac40 <line:289:2, col:13> 'void'
|   | `-MemberExpr 0x55cf2bd9ac10 <col:2> '<bound member function type>' ->unschedule 0x55cf2bd97450
|   |   `-CXXThisExpr 0x55cf2bd9ac00 <col:2> 'Timer *' implicit this
|   `-ExprWithCleanups 0x55cf2bd9b098 <line:290:2, col:24> 'Timestamp' lvalue
|     `-CXXOperatorCallExpr 0x55cf2bd9b060 <col:2, col:24> 'Timestamp' lvalue
|       |-ImplicitCastExpr 0x55cf2bd9b048 <col:12> 'Timestamp &(*)(Timestamp &&) noexcept' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55cf2bd9acf8 <col:12> 'Timestamp &(Timestamp &&) noexcept' lvalue CXXMethod 0x55cf2b965f18 'operator=' 'Timestamp &(Timestamp &&) noexcept'
|       |-MemberExpr 0x55cf2bd9ac70 <col:2> 'Timestamp' lvalue ->_expiry_s 0x55cf2bd97f58
|       | `-CXXThisExpr 0x55cf2bd9ac60 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55cf2bd9ace0 <col:14, col:24> 'Timestamp' xvalue
|         `-CXXTemporaryObjectExpr 0x55cf2bd9acb0 <col:14, col:24> 'Timestamp' 'void ()'
|-CXXMethodDecl 0x55cf2bd975d0 <line:304:5, line:310:5> line:304:29 used adjustment 'Timestamp ()' static inline
| `-CompoundStmt 0x55cf2bd9b408 <col:42, line:310:5>
|   |-IfStmt 0x55cf2bd9b250 <line:306:2, line:307:23>
|   | |-CallExpr 0x55cf2bd9b180 <line:306:6, col:30> 'bool'
|   | | `-ImplicitCastExpr 0x55cf2bd9b168 <col:6, col:17> 'bool (*)()' <FunctionToPointerDecay>
|   | |   `-DeclRefExpr 0x55cf2bd9b108 <col:6, col:17> 'bool ()' lvalue CXXMethod 0x55cf2bc6fee0 'warp_jumping' 'bool ()'
|   | `-ReturnStmt 0x55cf2bd9b240 <line:307:6, col:23>
|   |   `-ExprWithCleanups 0x55cf2bd9b228 <col:13, col:23> 'Timestamp'
|   |     `-CXXConstructExpr 0x55cf2bd9b1f8 <col:13, col:23> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x55cf2bd9b1e0 <col:13, col:23> 'Timestamp' xvalue
|   |         `-CXXTemporaryObjectExpr 0x55cf2bd9b1b0 <col:13, col:23> 'Timestamp' 'void ()'
|   `-ReturnStmt 0x55cf2bd9b3f8 <line:309:2, col:33>
|     `-ExprWithCleanups 0x55cf2bd9b3e0 <col:9, col:33> 'Timestamp'
|       `-CXXConstructExpr 0x55cf2bd9b3b0 <col:9, col:33> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55cf2bd9b398 <col:9, col:33> 'Timestamp' xvalue
|           `-CallExpr 0x55cf2bd9b358 <col:9, col:33> 'Timestamp'
|             |-ImplicitCastExpr 0x55cf2bd9b340 <col:9, col:20> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x55cf2bd9b310 <col:9, col:20> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x55cf2bc52080 'make_usec' 'Timestamp (Timestamp::value_type)'
|             `-ImplicitCastExpr 0x55cf2bd9b380 <col:30> 'Timestamp::value_type':'long' <IntegralCast>
|               `-IntegerLiteral 0x55cf2bd9b2f0 <col:30> 'int' 500
|-CXXMethodDecl 0x55cf2bd97710 <line:317:5, col:80> col:17 schedule_after_s 'void (uint32_t)' inline
| |-ParmVarDecl 0x55cf2bd97680 <col:34, col:43> col:43 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55cf2bd977b8 <col:69> "" ""
|-CXXMethodDecl 0x55cf2bd978c8 <line:323:5, col:81> col:17 schedule_after_ms 'void (uint32_t)' inline
| |-ParmVarDecl 0x55cf2bd97838 <col:35, col:44> col:44 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55cf2bd97970 <col:70> "" ""
|-CXXMethodDecl 0x55cf2bd97a80 <line:329:5, col:82> col:17 reschedule_after_s 'void (uint32_t)' inline
| |-ParmVarDecl 0x55cf2bd979f0 <col:36, col:45> col:45 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55cf2bd97b28 <col:71> "" ""
|-CXXMethodDecl 0x55cf2bd97c38 <line:335:5, col:83> col:17 reschedule_after_ms 'void (uint32_t)' inline
| |-ParmVarDecl 0x55cf2bd97ba8 <col:37, col:46> col:46 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55cf2bd97ce0 <col:72> "" ""
|-EnumDecl 0x55cf2bd97d50 <line:337:5, col:27> col:5
| `-EnumConstantDecl 0x55cf2bd97e50 <col:12, col:25> col:12 behind_sec 'Timer::(anonymous enum at ../dummy_inc/click/timer.hh:337:5)'
|   `-ImplicitCastExpr 0x55cf2bd97ea0 <col:25> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55cf2bd97e30 <col:25> 'int' Int: 1
|       `-IntegerLiteral 0x55cf2bd97e10 <col:25> 'int' 1
|-AccessSpecDecl 0x55cf2bd97eb8 <line:339:3, col:10> col:3 private
|-FieldDecl 0x55cf2bd97ef8 <line:341:5, col:9> col:9 referenced _schedpos1 'int'
|-FieldDecl 0x55cf2bd97f58 <line:342:5, col:15> col:15 referenced _expiry_s 'Timestamp'
|-CXXRecordDecl 0x55cf2bd97fa8 <line:343:5, line:345:5> line:343:5 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x55cf2bd980d8 <line:344:2, col:16> col:16 referenced callback 'TimerCallback':'void (*)(Timer *, void *)'
| `-CXXDestructorDecl 0x55cf2bd98bc8 <line:343:5> col:5 implicit ~ 'void () noexcept' inline default trivial
|-FieldDecl 0x55cf2bd98198 <col:5, line:345:7> col:7 referenced _hook 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)'
|-FieldDecl 0x55cf2bd98218 <line:346:5, col:11> col:11 referenced _thunk 'void *'
|-FieldDecl 0x55cf2bd98278 <line:347:5, col:14> col:14 referenced _owner 'Element *'
|-FieldDecl 0x55cf2bd982d8 <line:348:5, col:19> col:19 referenced _thread 'RouterThread *'
|-CXXMethodDecl 0x55cf2bd98428 <line:350:5, col:36> col:12 operator= 'Timer &(const Timer &)'
| `-ParmVarDecl 0x55cf2bd98338 <col:22, col:35> col:35 x 'const Timer &'
|-CXXMethodDecl 0x55cf2bd985f8 <line:352:5, col:58> col:17 used do_nothing_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x55cf2bd984e0 <col:33, col:40> col:40 t 'Timer *'
| `-ParmVarDecl 0x55cf2bd98560 <col:43, col:49> col:49 user_data 'void *'
|-CXXMethodDecl 0x55cf2bd987d0 <line:353:5, col:55> col:17 used element_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x55cf2bd986b8 <col:30, col:37> col:37 t 'Timer *'
| `-ParmVarDecl 0x55cf2bd98738 <col:40, col:46> col:46 user_data 'void *'
|-CXXMethodDecl 0x55cf2bd989a8 <line:354:5, col:52> col:17 used task_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x55cf2bd98890 <col:27, col:34> col:34 t 'Timer *'
| `-ParmVarDecl 0x55cf2bd98910 <col:37, col:43> col:43 user_data 'void *'
`-FriendDecl 0x55cf2bd98b78 <line:356:5, col:18> col:12 'class TimerSet':'TimerSet'

Layout: <CGRecordLayout
  LLVMType:%class.Timer = type { i32, %class.Timestamp, %union.anon.19, i8*, %class.Element*, %class.RouterThread* }
  NonVirtualBaseLLVMType:%class.Timer = type { i32, %class.Timestamp, %union.anon.19, i8*, %class.Element*, %class.RouterThread* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct char_array<16>
         0 |   char [16] x
           | [sizeof=16, dsize=16, align=1,
           |  nvsize=16, nvalign=1]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55cf2bda6f90 <../dummy_inc/click/type_traits.hh:165:1, line:167:1> line:165:28 struct char_array definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-TemplateArgument integral 16
|-PackedAttr 0x55cf2bed9798 <line:167:18>
|-CXXRecordDecl 0x55cf2bed9858 prev 0x55cf2bda6f90 <line:165:21, col:28> col:28 implicit struct char_array
`-FieldDecl 0x55cf2bed9968 <line:166:5, col:13> col:10 x 'char [16]'

Layout: <CGRecordLayout
  LLVMType:%struct.char_array.10 = type { [16 x i8] }
  NonVirtualBaseLLVMType:%struct.char_array.10 = type { [16 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct char_array<4>
         0 |   char [4] x
           | [sizeof=4, dsize=4, align=1,
           |  nvsize=4, nvalign=1]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55cf2bcd95f0 <../dummy_inc/click/type_traits.hh:165:1, line:167:1> line:165:28 struct char_array definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-TemplateArgument integral 4
|-PackedAttr 0x55cf2beda908 <line:167:18>
|-CXXRecordDecl 0x55cf2beda9c8 prev 0x55cf2bcd95f0 <line:165:21, col:28> col:28 implicit struct char_array
`-FieldDecl 0x55cf2bedaad8 <line:166:5, col:13> col:10 x 'char [4]'

Layout: <CGRecordLayout
  LLVMType:%struct.char_array.4 = type { [4 x i8] }
  NonVirtualBaseLLVMType:%struct.char_array.4 = type { [4 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>
