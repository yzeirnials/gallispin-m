
*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17)
         0 |   unsigned long long __wseq
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_internal_list
         0 |   struct __pthread_internal_list * __prev
         8 |   struct __pthread_internal_list * __next
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_mutex_s
         0 |   int __lock
         4 |   unsigned int __count
         8 |   int __owner
        12 |   unsigned int __nusers
        16 |   int __kind
        20 |   short __spins
        22 |   short __elision
        24 |   struct __pthread_internal_list __list
        24 |     struct __pthread_internal_list * __prev
        32 |     struct __pthread_internal_list * __next
           | [sizeof=40, dsize=40, align=8,
           |  nvsize=40, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17)
         0 |   unsigned long long __g1_start
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s
         0 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17) 
         0 |     unsigned long long __wseq
         0 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |       unsigned int __low
         4 |       unsigned int __high
         8 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17) 
         8 |     unsigned long long __g1_start
         8 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         8 |       unsigned int __low
        12 |       unsigned int __high
        16 |   unsigned int [2] __g_refs
        24 |   unsigned int [2] __g_size
        32 |   unsigned int __g1_orig_size
        36 |   unsigned int __wrefs
        40 |   unsigned int [2] __g_signals
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_rwlock_arch_t
         0 |   unsigned int __readers
         4 |   unsigned int __writers
         8 |   unsigned int __wrphase_futex
        12 |   unsigned int __writers_futex
        16 |   unsigned int __pad3
        20 |   unsigned int __pad4
        24 |   int __cur_writer
        28 |   int __shared
        32 |   signed char __rwelision
        33 |   unsigned char [7] __pad1
        40 |   unsigned long __pad2
        48 |   unsigned int __flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | lldiv_t
         0 |   long long quot
         8 |   long long rem
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct msghdr
         0 |   void * msg_name
         8 |   socklen_t msg_namelen
        16 |   struct iovec * msg_iov
        24 |   size_t msg_iovlen
        32 |   void * msg_control
        40 |   size_t msg_controllen
        48 |   int msg_flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | struct in_addr
         0 |   in_addr_t s_addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5)
         0 |   uint8_t [16] __u6_addr8
         0 |   uint16_t [8] __u6_addr16
         0 |   uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr
         0 |   sa_family_t sa_family
         2 |   char [14] sa_data
           | [sizeof=16, dsize=16, align=2,
           |  nvsize=16, nvalign=2]

*** Dumping AST Record Layout
         0 | struct in6_addr
         0 |   union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         0 |     uint8_t [16] __u6_addr8
         0 |     uint16_t [8] __u6_addr16
         0 |     uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr_storage
         0 |   sa_family_t ss_family
         2 |   char [118] __ss_padding
       120 |   unsigned long __ss_align
           | [sizeof=128, dsize=128, align=8,
           |  nvsize=128, nvalign=8]

*** Dumping AST Record Layout
         0 | struct sockaddr_in6
         0 |   sa_family_t sin6_family
         2 |   in_port_t sin6_port
         4 |   uint32_t sin6_flowinfo
         8 |   struct in6_addr sin6_addr
         8 |     union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         8 |       uint8_t [16] __u6_addr8
         8 |       uint16_t [8] __u6_addr16
         8 |       uint32_t [4] __u6_addr32
        24 |   uint32_t sin6_scope_id
           | [sizeof=28, dsize=28, align=4,
           |  nvsize=28, nvalign=4]

*** Dumping AST Record Layout
         0 | struct timeval
         0 |   __time_t tv_sec
         8 |   __suseconds_t tv_usec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::memo_t
         0 |   volatile uint32_t refcount
         4 |   uint32_t capacity
         8 |   volatile uint32_t dirty
        12 |   char [8] real_data
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping AST Record Layout
         0 | class IPAddress
         0 |   uint32_t _addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Timestamp::rep_t
         0 |   int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timestamp
         0 |   union Timestamp::rep_t _t
         0 |     int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct timespec
         0 |   __time_t tv_sec
         8 |   __syscall_slong_t tv_nsec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element::Port
         0 |   class Element * _e
         8 |   int _port
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping AST Record Layout
         0 | struct TimerSet::heap_element
         0 |   class Timestamp expiry_s
         0 |     union Timestamp::rep_t _t
         0 |       int64_t x
         8 |   class Timer * t
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct pollfd
         0 |   int fd
         4 |   short events
         6 |   short revents
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | struct SelectSet::SelectorInfo
         0 |   class Element * read
         8 |   class Element * write
        16 |   int pollfd
           | [sizeof=24, dsize=20, align=8,
           |  nvsize=20, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::rep_t
         0 |   const char * data
         8 |   int length
        16 |   struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class String
         0 |   struct String::rep_t _r
         0 |     const char * data
         8 |     int length
        16 |     struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Router::Port
         0 |   int idx
         4 |   int port
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | struct Router::element_landmark_t
         0 |   uint32_t first_landmarkid
         8 |   class String filename
         8 |     struct String::rep_t _r
         8 |       const char * data
        16 |       int length
        24 |       struct String::memo_t * memo
           | [sizeof=32, dsize=32, align=8,
           |  nvsize=32, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<4> >
         0 |   vector_memory<class sized_array_memory<4> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<int>
         0 |   class vector_memory<class sized_array_memory<4> > vm_
         0 |     vector_memory<class sized_array_memory<4> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Router::Connection
         0 |   struct Router::Port [2] p
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | class atomic_uint32_t
         0 |   uint32_t _val
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | struct StringAccum::rep_t
         0 |   unsigned char * s
         8 |   int len
        12 |   int cap
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element
         0 |   (Element vtable pointer)
         8 |   class Element::Port *[2] _ports
        24 |   class Element::Port [4] _inline_ports
        88 |   int [2] _nports
        96 |   class Router * _router
       104 |   int _eindex
           | [sizeof=112, dsize=108, align=8,
           |  nvsize=108, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563ee3103df8 prev 0x563ee30fb598 <../dummy_inc/click/element.hh:214:5, line:252:5> line:214:11 referenced class Port definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x563ee3103ef0 <col:5, col:11> col:11 implicit referenced class Port
|-AccessSpecDecl 0x563ee3103f80 <col:18, col:24> col:18 public
|-CXXMethodDecl 0x563ee3103ff8 <line:216:9, col:30> col:21 used active 'bool () const' inline
|-CXXMethodDecl 0x563ee31040b8 <line:217:9, col:35> col:25 element 'Element *() const' inline
|-CXXMethodDecl 0x563ee3104180 <line:218:9, col:27> col:20 port 'int () const' inline
|-CXXMethodDecl 0x563ee31042f8 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| |-ParmVarDecl 0x563ee3104230 <col:54, col:62> col:62 p 'Packet *'
| |-NoInlineAttr 0x563ee31043a0 <col:24>
| `-OptimizeNoneAttr 0x563ee31043f8 <col:34>
|-CXXMethodDecl 0x563ee3104440 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
|-CXXMethodDecl 0x563ee31046f8 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| |-ParmVarDecl 0x563ee31044f0 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x563ee3104568 <col:43, col:52> col:52 e 'Element *'
| `-ParmVarDecl 0x563ee31045e8 <col:55, col:59> col:59 port 'int'
|-AccessSpecDecl 0x563ee31047b0 <line:229:7, col:14> col:7 private
|-FieldDecl 0x563ee31047e8 <line:231:9, col:18> col:18 referenced _e 'Element *'
|-FieldDecl 0x563ee3104850 <line:232:9, col:13> col:13 referenced _port 'int'
|-CXXConstructorDecl 0x563ee31048d8 <line:247:9, col:21> col:16 Port 'void ()' inline
|-CXXMethodDecl 0x563ee3104bf8 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| |-ParmVarDecl 0x563ee3104990 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x563ee3104a08 <col:43, col:52> col:52 owner 'Element *'
| |-ParmVarDecl 0x563ee3104a80 <col:59, col:68> col:68 e 'Element *'
| `-ParmVarDecl 0x563ee3104b00 <col:71, col:75> col:75 port 'int'
|-FriendDecl 0x563ee3104d10 <line:250:9, col:22> col:16 'class Element':'Element'
|-CXXConstructorDecl 0x563ee310c688 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x563ee310c688
| `-ParmVarDecl 0x563ee310c798 <col:11> col:11 'const Element::Port &'
|-CXXConstructorDecl 0x563ee310c838 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x563ee310c838
| `-ParmVarDecl 0x563ee310c948 <col:11> col:11 'Element::Port &&'
`-CXXDestructorDecl 0x563ee3311320 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"class.Element::Port" = type <{ %class.Element*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%"class.Element::Port.base" = type <{ %class.Element*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<8> >
         0 |   vector_memory<class sized_array_memory<8> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class Element *>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class typed_array_memory<class String> >
         0 |   vector_memory<class typed_array_memory<class String> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class String>
         0 |   class vector_memory<class typed_array_memory<class String> > vm_
         0 |     vector_memory<class typed_array_memory<class String> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<unsigned int>
         0 |   class vector_memory<class sized_array_memory<4> > vm_
         0 |     vector_memory<class sized_array_memory<4> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class typed_array_memory<struct Router::element_landmark_t> >
         0 |   vector_memory<class typed_array_memory<struct Router::element_landmark_t> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct Router::element_landmark_t>
         0 |   class vector_memory<class typed_array_memory<struct Router::element_landmark_t> > vm_
         0 |     vector_memory<class typed_array_memory<struct Router::element_landmark_t> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<16> >
         0 |   vector_memory<class sized_array_memory<16> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct Router::Connection>
         0 |   class vector_memory<class sized_array_memory<16> > vm_
         0 |     vector_memory<class sized_array_memory<16> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<void *>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Router
         0 |   class Master * _master
         8 |   class atomic_uint32_t _runcount
         8 |     uint32_t _val
        12 |   volatile int _state
    16:0-0 |   _Bool _have_connections
    16:1-1 |   _Bool _conn_sorted
    16:2-2 |   _Bool _have_configuration
        20 |   volatile int _running
        24 |   class atomic_uint32_t _refcount
        24 |     uint32_t _val
        32 |   class Vector<class Element *> _elements
        32 |     class vector_memory<class sized_array_memory<8> > vm_
        32 |       vector_memory<class sized_array_memory<8> >::type * l_
        40 |       vector_memory::size_type n_
        44 |       vector_memory::size_type capacity_
        48 |   class Vector<class String> _element_names
        48 |     class vector_memory<class typed_array_memory<class String> > vm_
        48 |       vector_memory<class typed_array_memory<class String> >::type * l_
        56 |       vector_memory::size_type n_
        60 |       vector_memory::size_type capacity_
        64 |   class Vector<class String> _element_configurations
        64 |     class vector_memory<class typed_array_memory<class String> > vm_
        64 |       vector_memory<class typed_array_memory<class String> >::type * l_
        72 |       vector_memory::size_type n_
        76 |       vector_memory::size_type capacity_
        80 |   class Vector<unsigned int> _element_landmarkids
        80 |     class vector_memory<class sized_array_memory<4> > vm_
        80 |       vector_memory<class sized_array_memory<4> >::type * l_
        88 |       vector_memory::size_type n_
        92 |       vector_memory::size_type capacity_
        96 |   class Vector<int> _element_home_thread_ids
        96 |     class vector_memory<class sized_array_memory<4> > vm_
        96 |       vector_memory<class sized_array_memory<4> >::type * l_
       104 |       vector_memory::size_type n_
       108 |       vector_memory::size_type capacity_
       112 |   class Vector<struct Router::element_landmark_t> _element_landmarks
       112 |     class vector_memory<class typed_array_memory<struct Router::element_landmark_t> > vm_
       112 |       vector_memory<class typed_array_memory<struct Router::element_landmark_t> >::type * l_
       120 |       vector_memory::size_type n_
       124 |       vector_memory::size_type capacity_
       128 |   uint32_t _last_landmarkid
       136 |   class Vector<int> _element_name_sorter
       136 |     class vector_memory<class sized_array_memory<4> > vm_
       136 |       vector_memory<class sized_array_memory<4> >::type * l_
       144 |       vector_memory::size_type n_
       148 |       vector_memory::size_type capacity_
       152 |   Vector<int> [2] _element_gport_offset
       184 |   class Vector<int> _element_configure_order
       184 |     class vector_memory<class sized_array_memory<4> > vm_
       184 |       vector_memory<class sized_array_memory<4> >::type * l_
       192 |       vector_memory::size_type n_
       196 |       vector_memory::size_type capacity_
       200 |   class Vector<struct Router::Connection> _conn
       200 |     class vector_memory<class sized_array_memory<16> > vm_
       200 |       vector_memory<class sized_array_memory<16> >::type * l_
       208 |       vector_memory::size_type n_
       212 |       vector_memory::size_type capacity_
       216 |   class Vector<int> _conn_output_sorter
       216 |     class vector_memory<class sized_array_memory<4> > vm_
       216 |       vector_memory<class sized_array_memory<4> >::type * l_
       224 |       vector_memory::size_type n_
       228 |       vector_memory::size_type capacity_
       232 |   class Vector<class String> _requirements
       232 |     class vector_memory<class typed_array_memory<class String> > vm_
       232 |       vector_memory<class typed_array_memory<class String> >::type * l_
       240 |       vector_memory::size_type n_
       244 |       vector_memory::size_type capacity_
       248 |   class Vector<int> _ehandler_first_by_element
       248 |     class vector_memory<class sized_array_memory<4> > vm_
       248 |       vector_memory<class sized_array_memory<4> >::type * l_
       256 |       vector_memory::size_type n_
       260 |       vector_memory::size_type capacity_
       264 |   class Vector<int> _ehandler_to_handler
       264 |     class vector_memory<class sized_array_memory<4> > vm_
       264 |       vector_memory<class sized_array_memory<4> >::type * l_
       272 |       vector_memory::size_type n_
       276 |       vector_memory::size_type capacity_
       280 |   class Vector<int> _ehandler_next
       280 |     class vector_memory<class sized_array_memory<4> > vm_
       280 |       vector_memory<class sized_array_memory<4> >::type * l_
       288 |       vector_memory::size_type n_
       292 |       vector_memory::size_type capacity_
       296 |   class Vector<int> _handler_first_by_name
       296 |     class vector_memory<class sized_array_memory<4> > vm_
       296 |       vector_memory<class sized_array_memory<4> >::type * l_
       304 |       vector_memory::size_type n_
       308 |       vector_memory::size_type capacity_
       312 |   class Handler ** _handler_bufs
       320 |   int _nhandlers_bufs
       324 |   int _free_handler
       328 |   class Vector<class String> _attachment_names
       328 |     class vector_memory<class typed_array_memory<class String> > vm_
       328 |       vector_memory<class typed_array_memory<class String> >::type * l_
       336 |       vector_memory::size_type n_
       340 |       vector_memory::size_type capacity_
       344 |   class Vector<void *> _attachments
       344 |     class vector_memory<class sized_array_memory<8> > vm_
       344 |       vector_memory<class sized_array_memory<8> >::type * l_
       352 |       vector_memory::size_type n_
       356 |       vector_memory::size_type capacity_
       360 |   class Element * _root_element
       368 |   class String _configuration
       368 |     struct String::rep_t _r
       368 |       const char * data
       376 |       int length
       384 |       struct String::memo_t * memo
       392 |   struct Router::notifier_signals_t * _notifier_signals
       400 |   class HashMap_ArenaFactory * _arena_factory
       408 |   class Router * _hotswap_router
       416 |   class ThreadSched * _thread_sched
       424 |   class NameInfo * _name_info
       432 |   class Vector<int> _flow_code_override_eindex
       432 |     class vector_memory<class sized_array_memory<4> > vm_
       432 |       vector_memory<class sized_array_memory<4> >::type * l_
       440 |       vector_memory::size_type n_
       444 |       vector_memory::size_type capacity_
       448 |   class Vector<class String> _flow_code_override
       448 |     class vector_memory<class typed_array_memory<class String> > vm_
       448 |       vector_memory<class typed_array_memory<class String> >::type * l_
       456 |       vector_memory::size_type n_
       460 |       vector_memory::size_type capacity_
       464 |   class Router * _next_router
           | [sizeof=472, dsize=472, align=8,
           |  nvsize=472, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563ee2eb58c0 <../dummy_inc/click/atomic.hh:52:1, line:94:1> line:52:7 referenced class atomic_uint32_t definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x563ee2eb59d8 <col:1, col:7> col:7 implicit referenced class atomic_uint32_t
|-AccessSpecDecl 0x563ee2eb5a68 <col:25, col:31> col:25 public
|-CXXMethodDecl 0x563ee2eb5b38 <line:57:5, col:29> col:21 used value 'uint32_t () const' inline
|-CXXConversionDecl 0x563ee2eb5c20 <line:58:5, col:32> col:12 operator unsigned int 'uint32_t () const' inline
|-CXXMethodDecl 0x563ee2eb5e38 <line:60:5, col:49> col:29 used operator= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x563ee2eb5ce0 <col:39, col:48> col:48 x 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x563ee2eb5fe8 <line:62:5, col:53> col:29 operator+= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x563ee2eb5ef0 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x563ee2eb6130 <line:63:5, col:53> col:29 operator-= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x563ee2eb60a0 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x563ee2eb6278 <line:64:5, col:53> col:29 operator|= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x563ee2eb61e8 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x563ee2eb63c0 <line:65:5, col:53> col:29 operator&= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x563ee2eb6330 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x563ee2eb6488 <line:67:5, col:28> col:17 used operator++ 'void ()' inline
|-CXXMethodDecl 0x563ee2eb65d0 <line:68:5, col:31> col:17 used operator++ 'void (int)' inline
| `-ParmVarDecl 0x563ee2eb6540 <col:28> col:31 'int'
|-CXXMethodDecl 0x563ee2eb6698 <line:69:5, col:28> col:17 used operator-- 'void ()' inline
|-CXXMethodDecl 0x563ee2eb67e0 <line:70:5, col:31> col:17 operator-- 'void (int)' inline
| `-ParmVarDecl 0x563ee2eb6750 <col:28> col:31 'int'
|-CXXMethodDecl 0x563ee2eb6958 <line:72:5, col:42> col:21 swap 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x563ee2eb6898 <col:26, col:35> col:35 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x563ee2eb6aa0 <line:73:5, col:49> col:21 fetch_and_add 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x563ee2eb6a10 <col:35, col:44> col:44 delta 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x563ee2eb6b68 <line:74:5, col:30> col:17 dec_and_test 'bool ()' inline
|-CXXMethodDecl 0x563ee2eb6d28 <line:75:5, col:69> col:21 used compare_swap 'uint32_t (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x563ee2eb6c18 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x563ee2eb6c90 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x563ee2eb6f78 <line:76:5, col:97> col:17 compare_and_swap 'bool (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x563ee2eb6de8 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x563ee2eb6e60 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x563ee2eb7028 <col:86> "" ""
|-CXXMethodDecl 0x563ee2eb7298 <line:78:5, col:71> col:28 used swap 'uint32_t (volatile uint32_t &, uint32_t)' static inline
| |-ParmVarDecl 0x563ee2eb7108 <col:33, col:52> col:52 x 'volatile uint32_t &'
| `-ParmVarDecl 0x563ee2eb7180 <col:55, col:64> col:64 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x563ee2eb7448 <line:79:5, col:48> col:24 used inc 'void (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x563ee2eb7358 <col:28, col:47> col:47 x 'volatile uint32_t &'
|-CXXMethodDecl 0x563ee2eb75f8 <line:80:5, col:57> col:24 used dec_and_test 'bool (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x563ee2eb7500 <col:37, col:56> col:56 x 'volatile uint32_t &'
|-CXXMethodDecl 0x563ee2eb78c8 <line:81:5, col:98> col:28 compare_swap 'uint32_t (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x563ee2eb76b0 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x563ee2eb7728 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x563ee2eb77a0 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x563ee2eb7ba8 <line:82:5, col:126> col:24 compare_and_swap 'bool (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x563ee2eb7990 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x563ee2eb7a08 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x563ee2eb7a80 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x563ee2eb7c60 <col:115> "" ""
|-AccessSpecDecl 0x563ee2eb7cd0 <line:84:3, col:10> col:3 private
|-FieldDecl 0x563ee2eb7d08 <line:91:5, col:14> col:14 referenced _val 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x563ee2eb9220 <line:52:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x563ee2eb9220
| `-ParmVarDecl 0x563ee2eb9328 <col:7> col:7 'const atomic_uint32_t &'
|-CXXMethodDecl 0x563ee2eb93c8 <col:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x563ee2eb93c8
| `-ParmVarDecl 0x563ee2eb94d8 <col:7> col:7 'atomic_uint32_t &&'
|-CXXConstructorDecl 0x563ee2eeeb08 <col:7> col:7 implicit used atomic_uint32_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x563ee30e0900 <col:7>
|-CXXConstructorDecl 0x563ee2eeebe0 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x563ee2eeebe0
| `-ParmVarDecl 0x563ee2eeecf8 <col:7> col:7 'const atomic_uint32_t &'
|-CXXConstructorDecl 0x563ee2eeed68 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x563ee2eeed68
| `-ParmVarDecl 0x563ee2eeee78 <col:7> col:7 'atomic_uint32_t &&'
`-CXXDestructorDecl 0x563ee30e3300 <col:7> col:7 implicit referenced ~atomic_uint32_t 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.atomic_uint32_t = type { i32 }
  NonVirtualBaseLLVMType:%class.atomic_uint32_t = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x563ee317c400 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<8>'
|-CXXRecordDecl 0x563ee317c5d8 prev 0x563ee317c400 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x563ee317c668 <col:46, col:52> col:46 public
|-TypedefDecl 0x563ee317c690 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x563ee2b90370 'int'
|-TypedefDecl 0x563ee317e2c0 <line:13:5, col:31> col:31 type 'typename sized_array_memory<8>::type':'char_array<8>'
| `-ElaboratedType 0x563ee317e270 'typename sized_array_memory<8>::type' sugar
|   `-TypedefType 0x563ee317cb40 'sized_array_memory<8>::type' sugar
|     |-Typedef 0x563ee317ca40 'type'
|     `-TemplateSpecializationType 0x563ee317c9d0 'char_array<8UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x563ee317c8b0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 8
|       |   `-SubstNonTypeTemplateParmExpr 0x563ee317c890 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x563ee317c870 <col:24> 'unsigned long' 8
|       `-RecordType 0x563ee317c9b0 'char_array<8>'
|         `-ClassTemplateSpecialization 0x563ee317c8d0 'char_array'
|-TypedefDecl 0x563ee317e378 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<8> >::type *'
| `-PointerType 0x563ee317e340 'vector_memory<sized_array_memory<8> >::type *'
|   `-TypedefType 0x563ee317e320 'vector_memory<sized_array_memory<8> >::type' sugar
|     |-Typedef 0x563ee317e2c0 'type'
|     `-ElaboratedType 0x563ee317e270 'typename sized_array_memory<8>::type' sugar
|       `-TypedefType 0x563ee317cb40 'sized_array_memory<8>::type' sugar
|         |-Typedef 0x563ee317ca40 'type'
|         `-TemplateSpecializationType 0x563ee317c9d0 'char_array<8UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x563ee317c8b0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 8
|           |   `-SubstNonTypeTemplateParmExpr 0x563ee317c890 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x563ee317c870 <col:24> 'unsigned long' 8
|           `-RecordType 0x563ee317c9b0 'char_array<8>'
|             `-ClassTemplateSpecialization 0x563ee317c8d0 'char_array'
|-CXXMethodDecl 0x563ee317e4f8 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<8> >::type *) const' inline
| `-ParmVarDecl 0x563ee317e408 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXConstructorDecl 0x563ee317e5e8 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x563ee317e6c8 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x563ee317e6c8
|-CXXMethodDecl 0x563ee317e998 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<8> > &)'
| `-ParmVarDecl 0x563ee317e8a0 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<8> > &'
|-CXXMethodDecl 0x563ee317ebd8 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x563ee317ea50 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x563ee317eac8 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x563ee317eda8 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x563ee317ec98 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x563ee317ed10 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x563ee317ef08 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<8> >::iterator ()'
|-CXXMethodDecl 0x563ee317efd8 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<8> >::iterator ()'
|-CXXMethodDecl 0x563ee317f228 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<8> >::iterator (vector_memory<sized_array_memory<8> >::iterator, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x563ee317f098 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
| `-ParmVarDecl 0x563ee317f110 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x563ee317f488 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<8> >::iterator (vector_memory<sized_array_memory<8> >::iterator, vector_memory<sized_array_memory<8> >::iterator)'
| |-ParmVarDecl 0x563ee317f2f8 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
| `-ParmVarDecl 0x563ee317f370 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x563ee317f648 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<8> >::type *)' inline
| `-ParmVarDecl 0x563ee317f558 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x563ee317f808 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<8> >::type *)' inline
| `-ParmVarDecl 0x563ee317f710 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x563ee317f8c0 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x563ee317f970 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x563ee317fba8 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x563ee317fa20 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x563ee317fa98 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x563ee317fe48 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<8> > &)'
| `-ParmVarDecl 0x563ee317fd50 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<8> > &'
|-FieldDecl 0x563ee317ff10 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<8> >::type *'
|-FieldDecl 0x563ee317ff60 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x563ee317ffb0 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory = type { %struct.char_array*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory = type { %struct.char_array*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x563ee32ab598 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Element *'
|-CXXRecordDecl 0x563ee32ad758 prev 0x563ee32ab598 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x563ee32ae770 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<Element *>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x563ee32ae720 'typename array_memory<Element *>::type' sugar
|   `-TypedefType 0x563ee32ae700 'conditional<true, sized_array_memory<8>, typed_array_memory<Element *> >::type' sugar
|     |-Typedef 0x563ee32ae5b0 'type'
|     `-SubstTemplateTypeParmType 0x563ee317bfd0 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x563ee2e5b0f0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563ee2e5b098 'T'
|       `-RecordType 0x563ee317bb20 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x563ee317ba38 'sized_array_memory'
|-FieldDecl 0x563ee32ae870 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Element *>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x563ee32ae8c0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x563ee32ae8f8 <line:118:5, col:15> col:15 value_type 'Element *':'Element *'
| `-SubstTemplateTypeParmType 0x563ee32ad7f0 'Element *' sugar
|   |-TemplateTypeParmType 0x563ee2e92de0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x563ee2e92d88 'T'
|   `-PointerType 0x563ee30ed340 'Element *'
|     `-RecordType 0x563ee30ed0c0 'Element'
|       `-CXXRecord 0x563ee30f6e10 'Element'
|-TypedefDecl 0x563ee32ae988 <line:119:5, col:16> col:16 reference 'Element *&'
| `-LValueReferenceType 0x563ee32ae950 'Element *&'
|   `-SubstTemplateTypeParmType 0x563ee32ad7f0 'Element *' sugar
|     |-TemplateTypeParmType 0x563ee2e92de0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x563ee2e92d88 'T'
|     `-PointerType 0x563ee30ed340 'Element *'
|       `-RecordType 0x563ee30ed0c0 'Element'
|         `-CXXRecord 0x563ee30f6e10 'Element'
|-TypedefDecl 0x563ee32aea48 <line:120:5, col:22> col:22 const_reference 'Element *const &'
| `-LValueReferenceType 0x563ee32aea10 'Element *const &'
|   `-QualType 0x563ee32ad7f1 'Element *const' const
|     `-SubstTemplateTypeParmType 0x563ee32ad7f0 'Element *' sugar
|       |-TemplateTypeParmType 0x563ee2e92de0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563ee2e92d88 'T'
|       `-PointerType 0x563ee30ed340 'Element *'
|         `-RecordType 0x563ee30ed0c0 'Element'
|           `-CXXRecord 0x563ee30f6e10 'Element'
|-TypedefDecl 0x563ee32aead8 <line:121:5, col:16> col:16 pointer 'Element **'
| `-PointerType 0x563ee32aeaa0 'Element **'
|   `-SubstTemplateTypeParmType 0x563ee32ad7f0 'Element *' sugar
|     |-TemplateTypeParmType 0x563ee2e92de0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x563ee2e92d88 'T'
|     `-PointerType 0x563ee30ed340 'Element *'
|       `-RecordType 0x563ee30ed0c0 'Element'
|         `-CXXRecord 0x563ee30f6e10 'Element'
|-TypedefDecl 0x563ee32aeb98 <line:122:5, col:22> col:22 const_pointer 'Element *const *'
| `-PointerType 0x563ee32aeb60 'Element *const *'
|   `-QualType 0x563ee32ad7f1 'Element *const' const
|     `-SubstTemplateTypeParmType 0x563ee32ad7f0 'Element *' sugar
|       |-TemplateTypeParmType 0x563ee2e92de0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563ee2e92d88 'T'
|       `-PointerType 0x563ee30ed340 'Element *'
|         `-RecordType 0x563ee30ed0c0 'Element'
|           `-CXXRecord 0x563ee30f6e10 'Element'
|-TypedefDecl 0x563ee32af770 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<Element *>::type':'Element *'
| `-ElaboratedType 0x563ee32af720 'typename fast_argument<Element *>::type' sugar
|   `-TypedefType 0x563ee32af700 'fast_argument<Element *, false>::type' sugar
|     |-Typedef 0x563ee32af690 'type'
|     `-SubstTemplateTypeParmType 0x563ee32af450 'Element *' sugar
|       |-TemplateTypeParmType 0x563ee2e65ef0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563ee2e65ea0 'T'
|       `-PointerType 0x563ee30ed340 'Element *'
|         `-RecordType 0x563ee30ed0c0 'Element'
|           `-CXXRecord 0x563ee30f6e10 'Element'
|-TypedefDecl 0x563ee32af7d8 <line:126:5, col:22> col:22 const_access_type 'Element *const &'
| `-LValueReferenceType 0x563ee32aea10 'Element *const &'
|   `-QualType 0x563ee32ad7f1 'Element *const' const
|     `-SubstTemplateTypeParmType 0x563ee32ad7f0 'Element *' sugar
|       |-TemplateTypeParmType 0x563ee2e92de0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563ee2e92d88 'T'
|       `-PointerType 0x563ee30ed340 'Element *'
|         `-RecordType 0x563ee30ed0c0 'Element'
|           `-CXXRecord 0x563ee30f6e10 'Element'
|-TypedefDecl 0x563ee32af830 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x563ee2b90370 'int'
|-TypedefDecl 0x563ee32af898 <line:130:5, col:16> col:16 iterator 'Element **'
| `-PointerType 0x563ee32aeaa0 'Element **'
|   `-SubstTemplateTypeParmType 0x563ee32ad7f0 'Element *' sugar
|     |-TemplateTypeParmType 0x563ee2e92de0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x563ee2e92d88 'T'
|     `-PointerType 0x563ee30ed340 'Element *'
|       `-RecordType 0x563ee30ed0c0 'Element'
|         `-CXXRecord 0x563ee30f6e10 'Element'
|-TypedefDecl 0x563ee32af900 <line:131:5, col:22> col:22 const_iterator 'Element *const *'
| `-PointerType 0x563ee32aeb60 'Element *const *'
|   `-QualType 0x563ee32ad7f1 'Element *const' const
|     `-SubstTemplateTypeParmType 0x563ee32ad7f0 'Element *' sugar
|       |-TemplateTypeParmType 0x563ee2e92de0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563ee2e92d88 'T'
|       `-PointerType 0x563ee30ed340 'Element *'
|         `-RecordType 0x563ee30ed0c0 'Element'
|           `-CXXRecord 0x563ee30f6e10 'Element'
|-EnumDecl 0x563ee32af958 <line:134:5> col:5
| `-EnumConstantDecl 0x563ee32afa50 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Element *>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x563ee32afa30 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x563ee2e94468 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x563ee2e94440 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x563ee2e94420 <col:40> 'int' 1
|-CXXConstructorDecl 0x563ee32afad8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x563ee32afd68 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Element *>::value_argument_type)' inline
| |-ParmVarDecl 0x563ee32afb90 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x563ee32afc30 <col:41, col:61> col:61 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXConstructorDecl 0x563ee32afff8 <line:139:5, col:37> col:12 Vector 'void (const Vector<Element *> &)' inline
| `-ParmVarDecl 0x563ee32afee0 <col:19, col:36> col:36 x 'const Vector<Element *> &'
|-CXXConstructorDecl 0x563ee32b02b8 <line:141:5, col:32> col:12 Vector 'void (Vector<Element *> &&)' inline
| `-ParmVarDecl 0x563ee32b01a0 <col:19, col:31> col:31 x 'Vector<Element *> &&'
|-CXXMethodDecl 0x563ee32b05d0 <line:144:5, col:51> col:23 operator= 'Vector<Element *> &(const Vector<Element *> &)' inline
| `-ParmVarDecl 0x563ee32b04b0 <col:33, col:50> col:50 x 'const Vector<Element *> &'
|-CXXMethodDecl 0x563ee32b08e0 <line:146:5, col:46> col:23 operator= 'Vector<Element *> &(Vector<Element *> &&)' inline
| `-ParmVarDecl 0x563ee32b07c0 <col:33, col:45> col:45 x 'Vector<Element *> &&'
|-CXXMethodDecl 0x563ee32b0bd0 <line:148:5, col:70> col:23 assign 'Vector<Element *> &(Vector::size_type, Vector<Element *>::value_argument_type)' inline
| |-ParmVarDecl 0x563ee32b0a18 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x563ee32b0a90 <col:43, col:69> col:63 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXMethodDecl 0x563ee32b0d28 <line:150:5, col:55> col:49 begin 'Vector<Element *>::iterator ()'
| |-NoInlineAttr 0x563ee32b0e08 <col:20> Inherited
| `-OptimizeNoneAttr 0x563ee32b0e60 <col:30> Inherited
|-CXXMethodDecl 0x563ee32b0ea8 <line:151:5, col:53> col:49 end 'Vector<Element *>::iterator ()'
| |-NoInlineAttr 0x563ee32b0f58 <col:20> Inherited
| `-OptimizeNoneAttr 0x563ee32b0fb0 <col:30> Inherited
|-CXXMethodDecl 0x563ee32b1078 <line:152:5, col:63> col:55 begin 'Vector<Element *>::const_iterator () const'
| |-NoInlineAttr 0x563ee32b1128 <col:20> Inherited
| `-OptimizeNoneAttr 0x563ee32b1180 <col:30> Inherited
|-CXXMethodDecl 0x563ee32b11c8 <line:153:5, col:61> col:55 end 'Vector<Element *>::const_iterator () const'
| |-NoInlineAttr 0x563ee32b1278 <col:20> Inherited
| `-OptimizeNoneAttr 0x563ee32b12d0 <col:30> Inherited
|-CXXMethodDecl 0x563ee32b1318 <line:154:5, col:64> col:55 cbegin 'Vector<Element *>::const_iterator () const'
| |-NoInlineAttr 0x563ee32b13c8 <col:20> Inherited
| `-OptimizeNoneAttr 0x563ee32b1420 <col:30> Inherited
|-CXXMethodDecl 0x563ee32b1468 <line:155:5, col:62> col:55 cend 'Vector<Element *>::const_iterator () const'
| |-NoInlineAttr 0x563ee32b1518 <col:20> Inherited
| `-OptimizeNoneAttr 0x563ee32b1570 <col:30> Inherited
|-CXXMethodDecl 0x563ee32b1598 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x563ee32b1648 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x563ee32b16f8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x563ee32b18b8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Element *>::value_argument_type)' inline
| |-ParmVarDecl 0x563ee32b17a8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x563ee32b1820 <col:37, col:63> col:57 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXMethodDecl 0x563ee32b1a08 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x563ee32b1978 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x563ee32b1bb8 <line:163:5, col:65> col:43 operator[] 'Element *&(Vector::size_type)'
| |-ParmVarDecl 0x563ee32b1ac0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x563ee32b1c70 <col:20>
| `-OptimizeNoneAttr 0x563ee32b1cc8 <col:30>
|-CXXMethodDecl 0x563ee32b1de8 <line:164:5, col:73> col:49 operator[] 'Element *const &(Vector::size_type) const'
| |-ParmVarDecl 0x563ee32b1cf0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x563ee32b1ea0 <col:20>
| `-OptimizeNoneAttr 0x563ee32b1ef8 <col:30>
|-CXXMethodDecl 0x563ee32b1fb0 <line:165:5, col:29> col:15 at 'Element *&(Vector::size_type)' inline
| `-ParmVarDecl 0x563ee32b1f20 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x563ee32b20f8 <line:166:5, col:37> col:21 at 'Element *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x563ee32b2068 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x563ee32b2228 <line:167:5, col:21> col:15 front 'Element *&()' inline
|-CXXMethodDecl 0x563ee32b2358 <line:168:5, col:29> col:21 front 'Element *const &() const' inline
|-CXXMethodDecl 0x563ee32b2428 <line:169:5, col:20> col:15 back 'Element *&()' inline
|-CXXMethodDecl 0x563ee32b24f8 <line:170:5, col:28> col:21 back 'Element *const &() const' inline
|-CXXMethodDecl 0x563ee32b2638 <line:172:5, col:39> col:15 unchecked_at 'Element *&(Vector::size_type)' inline
| `-ParmVarDecl 0x563ee32b25a8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x563ee32b2780 <line:173:5, col:47> col:21 unchecked_at 'Element *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x563ee32b26f0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x563ee32b28c8 <line:174:5, col:59> col:15 at_u 'Element *&(Vector::size_type)' inline
| |-ParmVarDecl 0x563ee32b2838 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x563ee32b2980 <col:48> Inherited "" ""
|-CXXMethodDecl 0x563ee32b2a80 <line:175:5, col:71> col:21 at_u 'Element *const &(Vector::size_type) const' inline
| |-ParmVarDecl 0x563ee32b29f0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x563ee32b2b38 <col:60> Inherited "" ""
|-CXXMethodDecl 0x563ee32b2bf8 <line:177:5, col:20> col:15 data 'Element **()' inline
|-CXXMethodDecl 0x563ee32b2cf8 <line:178:5, col:28> col:21 data 'Element *const *() const' inline
|-CXXMethodDecl 0x563ee32b2e78 <line:180:5, col:48> col:17 push_back 'void (Vector<Element *>::value_argument_type)' inline
| `-ParmVarDecl 0x563ee32b2db8 <col:27, col:47> col:47 v 'Vector<Element *>::value_argument_type':'Element *'
|-FunctionTemplateDecl 0x563ee32b3638 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x563ee32b2f30 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Element *>':'fast_argument<Element *, false>'
| `-CXXMethodDecl 0x563ee32b3598 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Element *&&)' inline
|   `-ParmVarDecl 0x563ee32b3498 <col:58, col:62> col:62 v 'Element *&&'
|-CXXMethodDecl 0x563ee32b3718 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x563ee32b3868 <line:186:5, col:49> col:17 push_front 'void (Vector<Element *>::value_argument_type)' inline
| `-ParmVarDecl 0x563ee32b37d8 <col:28, col:48> col:48 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXMethodDecl 0x563ee32b3920 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x563ee32b3b68 <line:189:5, col:62> col:21 insert 'Vector<Element *>::iterator (Vector<Element *>::iterator, Vector<Element *>::value_argument_type)' inline
| |-ParmVarDecl 0x563ee32b39e0 <col:28, col:37> col:37 it 'Vector<Element *>::iterator':'Element **'
| `-ParmVarDecl 0x563ee32b3a58 <col:41, col:61> col:61 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXMethodDecl 0x563ee32b3d28 <line:190:5, col:38> col:21 erase 'Vector<Element *>::iterator (Vector<Element *>::iterator)' inline
| `-ParmVarDecl 0x563ee32b3c38 <col:27, col:36> col:36 it 'Vector<Element *>::iterator':'Element **'
|-CXXMethodDecl 0x563ee32b3f78 <line:191:5, col:49> col:21 erase 'Vector<Element *>::iterator (Vector<Element *>::iterator, Vector<Element *>::iterator)' inline
| |-ParmVarDecl 0x563ee32b3df0 <col:27, col:36> col:36 a 'Vector<Element *>::iterator':'Element **'
| `-ParmVarDecl 0x563ee32b3e68 <col:39, col:48> col:48 b 'Vector<Element *>::iterator':'Element **'
|-CXXMethodDecl 0x563ee32b4038 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x563ee32b4298 <line:195:5, col:34> col:17 swap 'void (Vector<Element *> &)' inline
| `-ParmVarDecl 0x563ee32b41a0 <col:22, col:33> col:33 x 'Vector<Element *> &'
`-CXXDestructorDecl 0x563ee32b4368 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x563ee32b4368

Layout: <CGRecordLayout
  LLVMType:%class.Vector = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563ee2ecacb0 <../dummy_inc/click/string.hh:189:5, line:198:5> line:189:12 referenced struct memo_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x563ee2ecadc8 <col:5, col:12> col:12 implicit struct memo_t
|-FieldDecl 0x563ee2ecae68 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
|-FieldDecl 0x563ee2ecaec8 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
|-FieldDecl 0x563ee2ecaf28 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
`-FieldDecl 0x563ee2ecafd8 <line:197:2, col:18> col:7 real_data 'char [8]'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  NonVirtualBaseLLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563ee2ecb2e0 <../dummy_inc/click/string.hh:204:5, line:208:5> line:204:12 referenced struct rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x563ee2ecb3f8 <col:5, col:12> col:12 implicit struct rep_t
|-FieldDecl 0x563ee2ecb4a0 <line:205:2, col:14> col:14 referenced data 'const char *'
|-FieldDecl 0x563ee2ecb508 <line:206:2, col:6> col:6 referenced length 'int'
|-FieldDecl 0x563ee2ecb598 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
|-CXXConstructorDecl 0x563ee2ed1630 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x563ee2ed1a68 <col:12>
|-CXXConstructorDecl 0x563ee2ed1738 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x563ee2ed1848 <col:12> col:12 used 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x563ee2ecb4a0 'data' 'const char *'
| | `-ImplicitCastExpr 0x563ee2ed3ff0 <col:12> 'const char *' <LValueToRValue>
| |   `-MemberExpr 0x563ee2ed3fc0 <col:12> 'const char *const' lvalue .data 0x563ee2ecb4a0
| |     `-DeclRefExpr 0x563ee2ed3fa0 <col:12> 'const String::rep_t' lvalue ParmVar 0x563ee2ed1848 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x563ee2ecb508 'length' 'int'
| | `-ImplicitCastExpr 0x563ee2ed4080 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x563ee2ed4050 <col:12> 'const int' lvalue .length 0x563ee2ecb508
| |     `-DeclRefExpr 0x563ee2ed4030 <col:12> 'const String::rep_t' lvalue ParmVar 0x563ee2ed1848 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x563ee2ecb598 'memo' 'String::memo_t *'
| | `-ImplicitCastExpr 0x563ee2ed4110 <col:12> 'String::memo_t *' <LValueToRValue>
| |   `-MemberExpr 0x563ee2ed40e0 <col:12> 'String::memo_t *const' lvalue .memo 0x563ee2ecb598
| |     `-DeclRefExpr 0x563ee2ed40c0 <col:12> 'const String::rep_t' lvalue ParmVar 0x563ee2ed1848 '' 'const String::rep_t &'
| `-CompoundStmt 0x563ee2ed4168 <col:12>
|-CXXConstructorDecl 0x563ee2ed18e8 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x563ee2ed18e8
| `-ParmVarDecl 0x563ee2ed19f8 <col:12> col:12 'String::rep_t &&'
|-CXXDestructorDecl 0x563ee2ed6f50 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x563ee2ee2968 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x563ee2ee2a78 <col:12> col:12 used 'const String::rep_t &'
| `-CompoundStmt 0x563ee2ee2f90 <col:12>
|   |-BinaryOperator 0x563ee2ee2da8 <col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x563ee2ee2d60 <col:12> 'const char *' lvalue ->data 0x563ee2ecb4a0
|   | | `-CXXThisExpr 0x563ee2ee2d50 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x563ee2ee2d90 <col:12> 'const char *' <LValueToRValue>
|   |   `-MemberExpr 0x563ee2ee2d20 <col:12> 'const char *const' lvalue .data 0x563ee2ecb4a0
|   |     `-DeclRefExpr 0x563ee2ee2d00 <col:12> 'const String::rep_t' lvalue ParmVar 0x563ee2ee2a78 '' 'const String::rep_t &'
|   |-BinaryOperator 0x563ee2ee2e70 <col:12> 'int' lvalue '='
|   | |-MemberExpr 0x563ee2ee2e28 <col:12> 'int' lvalue ->length 0x563ee2ecb508
|   | | `-CXXThisExpr 0x563ee2ee2e18 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x563ee2ee2e58 <col:12> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x563ee2ee2de8 <col:12> 'const int' lvalue .length 0x563ee2ecb508
|   |     `-DeclRefExpr 0x563ee2ee2dc8 <col:12> 'const String::rep_t' lvalue ParmVar 0x563ee2ee2a78 '' 'const String::rep_t &'
|   |-BinaryOperator 0x563ee2ee2f38 <col:12> 'String::memo_t *' lvalue '='
|   | |-MemberExpr 0x563ee2ee2ef0 <col:12> 'String::memo_t *' lvalue ->memo 0x563ee2ecb598
|   | | `-CXXThisExpr 0x563ee2ee2ee0 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x563ee2ee2f20 <col:12> 'String::memo_t *' <LValueToRValue>
|   |   `-MemberExpr 0x563ee2ee2eb0 <col:12> 'String::memo_t *const' lvalue .memo 0x563ee2ecb598
|   |     `-DeclRefExpr 0x563ee2ee2e90 <col:12> 'const String::rep_t' lvalue ParmVar 0x563ee2ee2a78 '' 'const String::rep_t &'
|   `-ReturnStmt 0x563ee2ee2f80 <col:12>
|     `-UnaryOperator 0x563ee2ee2f68 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x563ee2ee2f58 <col:12> 'String::rep_t *' this
`-CXXMethodDecl 0x563ee2ee2ae8 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x563ee2ee2ae8
  `-ParmVarDecl 0x563ee2ee2bf8 <col:12> col:12 'String::rep_t &&'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  NonVirtualBaseLLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563ee2ec2220 <../dummy_inc/click/string.hh:19:1, line:304:1> line:19:7 referenced class String definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x563ee2ec2338 <col:1, col:7> col:7 implicit referenced class String
|-AccessSpecDecl 0x563ee2ec23c8 <col:16, col:22> col:16 public
|-TypedefDecl 0x563ee2ec2408 <line:21:5, col:25> col:25 referenced const_iterator 'const char *'
| `-PointerType 0x563ee2b90dc0 'const char *'
|   `-QualType 0x563ee2b90311 'const char' const
|     `-BuiltinType 0x563ee2b90310 'char'
|-TypedefDecl 0x563ee2ec2490 <line:22:5, col:28> col:28 iterator 'String::const_iterator':'const char *'
| `-TypedefType 0x563ee2ec2460 'String::const_iterator' sugar
|   |-Typedef 0x563ee2ec2408 'const_iterator'
|   `-PointerType 0x563ee2b90dc0 'const char *'
|     `-QualType 0x563ee2b90311 'const char' const
|       `-BuiltinType 0x563ee2b90310 'char'
|-TypedefDecl 0x563ee2ec2600 <line:24:5, col:52> col:27 referenced unspecified_bool_type 'int (String::*)() const'
| `-MemberPointerType 0x563ee2ec2570 'int (String::*)() const'
|   |-RecordType 0x563ee2ec22b0 'String'
|   | `-CXXRecord 0x563ee2ec2220 'String'
|   `-ParenType 0x563ee2ec2510 'int () const' sugar
|     `-FunctionProtoType 0x563ee2e960a0 'int () const' const cdecl
|       `-BuiltinType 0x563ee2b90370 'int'
|-TypedefDecl 0x563ee2ec2668 <line:27:5, col:21> col:21 referenced intmax_t 'int64_t':'long'
| `-TypedefType 0x563ee2ceac80 'int64_t' sugar
|   |-Typedef 0x563ee2bf92d0 'int64_t'
|   `-TypedefType 0x563ee2bd24d0 '__int64_t' sugar
|     |-Typedef 0x563ee2bd20a8 '__int64_t'
|     `-BuiltinType 0x563ee2b90390 'long'
|-TypedefDecl 0x563ee2ec26d0 <line:28:5, col:22> col:22 referenced uintmax_t 'uint64_t':'unsigned long'
| `-TypedefType 0x563ee2ceaba0 'uint64_t' sugar
|   |-Typedef 0x563ee2bf9470 'uint64_t'
|   `-TypedefType 0x563ee2bd2560 '__uint64_t' sugar
|     |-Typedef 0x563ee2bd2118 '__uint64_t'
|     `-BuiltinType 0x563ee2b90430 'unsigned long'
|-TypedefDecl 0x563ee2ec2760 <line:36:5, col:22> col:22 int_large_t 'String::intmax_t':'long'
| `-TypedefType 0x563ee2ec2730 'String::intmax_t' sugar
|   |-Typedef 0x563ee2ec2668 'intmax_t'
|   `-TypedefType 0x563ee2ceac80 'int64_t' sugar
|     |-Typedef 0x563ee2bf92d0 'int64_t'
|     `-TypedefType 0x563ee2bd24d0 '__int64_t' sugar
|       |-Typedef 0x563ee2bd20a8 '__int64_t'
|       `-BuiltinType 0x563ee2b90390 'long'
|-TypedefDecl 0x563ee2ec27f0 <line:37:5, col:23> col:23 uint_large_t 'String::uintmax_t':'unsigned long'
| `-TypedefType 0x563ee2ec27c0 'String::uintmax_t' sugar
|   |-Typedef 0x563ee2ec26d0 'uintmax_t'
|   `-TypedefType 0x563ee2ceaba0 'uint64_t' sugar
|     |-Typedef 0x563ee2bf9470 'uint64_t'
|     `-TypedefType 0x563ee2bd2560 '__uint64_t' sugar
|       |-Typedef 0x563ee2bd2118 '__uint64_t'
|       `-BuiltinType 0x563ee2b90430 'unsigned long'
|-CXXConstructorDecl 0x563ee2ec28b0 <line:39:5, col:19> col:12 used String 'void ()' inline
|-CXXConstructorDecl 0x563ee2ec2a58 <line:40:5, col:34> col:12 used String 'void (const String &)' inline
| `-ParmVarDecl 0x563ee2ec2998 <col:19, col:33> col:33 x 'const String &'
|-CXXConstructorDecl 0x563ee2ec2c08 <line:42:5, col:29> col:12 used String 'void (String &&)' inline
| `-ParmVarDecl 0x563ee2ec2b48 <col:19, col:28> col:28 x 'String &&'
|-CXXConstructorDecl 0x563ee2ec2d60 <line:44:5, col:35> col:12 used String 'void (const char *)' inline
| `-ParmVarDecl 0x563ee2ec2cd0 <col:19, col:31> col:31 cstr 'const char *'
|-CXXConstructorDecl 0x563ee2ec2f78 <line:45:5, col:41> col:12 String 'void (const char *, int)' inline
| |-ParmVarDecl 0x563ee2ec2e28 <col:19, col:31> col:31 s 'const char *'
| `-ParmVarDecl 0x563ee2ec2ea8 <col:34, col:38> col:38 len 'int'
|-CXXConstructorDecl 0x563ee2ec3198 <line:46:5, col:50> col:12 String 'void (const unsigned char *, int)' inline
| |-ParmVarDecl 0x563ee2ec3048 <col:19, col:40> col:40 s 'const unsigned char *'
| `-ParmVarDecl 0x563ee2ec30c8 <col:43, col:47> col:47 len 'int'
|-CXXConstructorDecl 0x563ee2ec33b8 <line:47:5, col:54> col:12 used String 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x563ee2ec3268 <col:19, col:31> col:31 first 'const char *'
| `-ParmVarDecl 0x563ee2ec32e8 <col:38, col:50> col:50 last 'const char *'
|-CXXConstructorDecl 0x563ee2ec35d8 <line:48:5, col:72> col:12 String 'void (const unsigned char *, const unsigned char *)' inline
| |-ParmVarDecl 0x563ee2ec3488 <col:19, col:40> col:40 first 'const unsigned char *'
| `-ParmVarDecl 0x563ee2ec3508 <col:47, col:68> col:68 last 'const unsigned char *'
|-CXXConstructorDecl 0x563ee2ec3768 <line:49:5, col:34> col:21 used String 'void (bool)' inline
| `-ParmVarDecl 0x563ee2ec36a0 <col:28, col:33> col:33 x 'bool'
|-CXXConstructorDecl 0x563ee2ec38e8 <line:50:5, col:34> col:21 String 'void (char)' inline
| `-ParmVarDecl 0x563ee2ec3828 <col:28, col:33> col:33 c 'char'
|-CXXConstructorDecl 0x563ee2ec3a78 <line:51:5, col:43> col:21 String 'void (unsigned char)' inline
| `-ParmVarDecl 0x563ee2ec39b0 <col:28, col:42> col:42 c 'unsigned char'
|-CXXConstructorDecl 0x563ee2ec3bd0 <line:52:5, col:26> col:14 String 'void (int)'
| `-ParmVarDecl 0x563ee2ec3b40 <col:21, col:25> col:25 x 'int'
|-CXXConstructorDecl 0x563ee2ec3d28 <line:53:5, col:31> col:14 String 'void (unsigned int)'
| `-ParmVarDecl 0x563ee2ec3c98 <col:21, col:30> col:30 x 'unsigned int'
|-CXXConstructorDecl 0x563ee2ec3e80 <line:54:5, col:27> col:14 String 'void (long)'
| `-ParmVarDecl 0x563ee2ec3df0 <col:21, col:26> col:26 x 'long'
|-CXXConstructorDecl 0x563ee2ec4008 <line:55:5, col:36> col:14 String 'void (unsigned long)'
| `-ParmVarDecl 0x563ee2ec3f48 <col:21, col:35> col:35 x 'unsigned long'
|-CXXConstructorDecl 0x563ee2ec4198 <line:57:5, col:32> col:14 String 'void (long long)'
| `-ParmVarDecl 0x563ee2ec40d0 <col:21, col:31> col:31 x 'long long'
|-CXXConstructorDecl 0x563ee2ec4328 <line:58:5, col:41> col:14 String 'void (unsigned long long)'
| `-ParmVarDecl 0x563ee2ec4260 <col:21, col:40> col:40 x 'unsigned long long'
|-CXXConstructorDecl 0x563ee2ec44b8 <line:65:5, col:29> col:14 String 'void (double)'
| `-ParmVarDecl 0x563ee2ec43f0 <col:21, col:28> col:28 x 'double'
|-CXXDestructorDecl 0x563ee2ec45b0 <line:67:5, col:20> col:12 used ~String 'void () noexcept' inline
|-CXXMethodDecl 0x563ee2ec46d8 <line:69:5, col:44> col:33 make_empty 'const String &()' static inline
|-CXXMethodDecl 0x563ee2ec4858 <line:70:5, col:52> col:26 used make_uninitialized 'String (int)' static inline
| `-ParmVarDecl 0x563ee2ec4790 <col:45, col:49> col:49 len 'int'
|-CXXMethodDecl 0x563ee2ec49a8 <line:71:5, col:74> col:26 make_garbage 'String (int)' static inline
| |-ParmVarDecl 0x563ee2ec4918 <col:39, col:43> col:43 len 'int'
| `-DeprecatedAttr 0x563ee2ec4a60 <col:63> "" ""
|-CXXMethodDecl 0x563ee2ec4ba8 <line:72:5, col:54> col:26 make_stable 'String (const char *)' static inline
| `-ParmVarDecl 0x563ee2ec4ae8 <col:38, col:50> col:50 cstr 'const char *'
|-CXXMethodDecl 0x563ee2ec4db8 <line:73:5, col:60> col:26 make_stable 'String (const char *, int)' static inline
| |-ParmVarDecl 0x563ee2ec4c68 <col:38, col:50> col:50 s 'const char *'
| `-ParmVarDecl 0x563ee2ec4ce8 <col:53, col:57> col:57 len 'int'
|-CXXMethodDecl 0x563ee2ec4fd8 <line:74:5, col:73> col:26 make_stable 'String (const char *, const char *)' static inline
| |-ParmVarDecl 0x563ee2ec4e80 <col:38, col:50> col:50 first 'const char *'
| `-ParmVarDecl 0x563ee2ec4f00 <col:57, col:69> col:69 last 'const char *'
|-CXXMethodDecl 0x563ee2ec52b8 <line:75:5, col:80> col:19 make_numeric 'String (String::intmax_t, int, bool)' static
| |-ParmVarDecl 0x563ee2ec5098 <col:32, col:41> col:41 x 'String::intmax_t':'long'
| |-ParmVarDecl 0x563ee2ec5118 <col:44, col:55> col:48 base 'int' cinit
| | `-IntegerLiteral 0x563ee2ed1100 <col:55> 'int' 10
| `-ParmVarDecl 0x563ee2ec5190 <col:59, col:76> col:64 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x563ee2ed1120 <col:76> 'bool' true
|-CXXMethodDecl 0x563ee2ec5598 <line:76:5, col:81> col:19 make_numeric 'String (String::uintmax_t, int, bool)' static
| |-ParmVarDecl 0x563ee2ec5380 <col:32, col:42> col:42 x 'String::uintmax_t':'unsigned long'
| |-ParmVarDecl 0x563ee2ec5400 <col:45, col:56> col:49 base 'int' cinit
| | `-IntegerLiteral 0x563ee2ed1130 <col:56> 'int' 10
| `-ParmVarDecl 0x563ee2ec5478 <col:60, col:77> col:65 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x563ee2ed1150 <col:77> 'bool' true
|-CXXMethodDecl 0x563ee2ec56a0 <line:78:5, col:31> col:24 used data 'const char *() const' inline
|-CXXMethodDecl 0x563ee2ec5768 <line:79:5, col:25> col:16 used length 'int () const' inline
|-CXXMethodDecl 0x563ee2ec5830 <line:81:5, col:60> col:52 c_str 'const char *() const'
| |-NoInlineAttr 0x563ee2ec58d0 <col:20>
| `-OptimizeNoneAttr 0x563ee2ec5928 <col:30>
|-CXXConversionDecl 0x563ee2ec5a18 <line:83:5, col:45> col:12 used operator int (String::*)() const 'String::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x563ee2ec5ae8 <line:84:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x563ee2ec5ba8 <line:85:5, col:29> col:17 operator! 'bool () const' inline
|-CXXMethodDecl 0x563ee2ec5c98 <line:87:5, col:35> col:27 used begin 'String::const_iterator () const' inline
|-CXXMethodDecl 0x563ee2ec5d58 <line:88:5, col:33> col:27 used end 'String::const_iterator () const' inline
|-CXXMethodDecl 0x563ee2ec5ed8 <line:90:5, col:35> col:17 used operator[] 'char (int) const' inline
| `-ParmVarDecl 0x563ee2ec5e10 <col:28, col:32> col:32 i 'int'
|-CXXMethodDecl 0x563ee2ec6028 <line:91:5, col:27> col:17 at 'char (int) const' inline
| `-ParmVarDecl 0x563ee2ec5f98 <col:20, col:24> col:24 i 'int'
|-CXXMethodDecl 0x563ee2ec6118 <line:92:5, col:25> col:17 front 'char () const' inline
|-CXXMethodDecl 0x563ee2ec61d8 <line:93:5, col:24> col:17 back 'char () const' inline
|-CXXMethodDecl 0x563ee2ec6428 <line:95:5, col:64> col:21 used hashcode 'uint32_t (const char *, const char *)' static
| |-ParmVarDecl 0x563ee2ec6290 <col:30, col:42> col:42 begin 'const char *'
| `-ParmVarDecl 0x563ee2ec6310 <col:49, col:61> col:61 end 'const char *'
|-CXXMethodDecl 0x563ee2ec6688 <line:96:5, line:97:33> line:96:28 hashcode 'uint32_t (const unsigned char *, const unsigned char *)' static inline
| |-ParmVarDecl 0x563ee2ec64f0 <col:37, col:58> col:58 begin 'const unsigned char *'
| `-ParmVarDecl 0x563ee2ec6570 <line:97:9, col:30> col:30 end 'const unsigned char *'
|-CXXMethodDecl 0x563ee2ec6758 <line:98:5, col:32> col:21 hashcode 'uint32_t () const' inline
|-CXXMethodDecl 0x563ee2ec6968 <line:100:5, col:65> col:19 substring 'String (const char *, const char *) const' inline
| |-ParmVarDecl 0x563ee2ec6810 <col:29, col:41> col:41 begin 'const char *'
| `-ParmVarDecl 0x563ee2ec6890 <col:48, col:60> col:60 end 'const char *'
|-CXXMethodDecl 0x563ee2ec6b88 <line:101:5, col:40> col:12 used substring 'String (int, int) const'
| |-ParmVarDecl 0x563ee2ec6a30 <col:22, col:26> col:26 pos 'int'
| `-ParmVarDecl 0x563ee2ec6ab0 <col:31, col:35> col:35 len 'int'
|-CXXMethodDecl 0x563ee2ec6d18 <line:102:5, col:38> col:19 substring 'String (int) const' inline
| `-ParmVarDecl 0x563ee2ec6c50 <col:29, col:33> col:33 pos 'int'
|-CXXMethodDecl 0x563ee2ec6e08 <line:103:5, col:25> col:12 trim_space 'String () const'
|-CXXMethodDecl 0x563ee2ec6f78 <line:105:5, col:41> col:17 equals 'bool (const String &) const' inline
| `-ParmVarDecl 0x563ee2ec6eb8 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x563ee2ec7188 <line:106:5, col:48> col:17 used equals 'bool (const char *, int) const' inline
| |-ParmVarDecl 0x563ee2ec7038 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x563ee2ec70b8 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x563ee2ec73a0 <line:107:5, col:63> col:23 used compare 'int (const String &, const String &)' static inline
| |-ParmVarDecl 0x563ee2ec7248 <col:31, col:45> col:45 a 'const String &'
| `-ParmVarDecl 0x563ee2ec72c0 <col:48, col:62> col:62 b 'const String &'
|-CXXMethodDecl 0x563ee2ec7530 <line:108:5, col:41> col:16 used compare 'int (const String &) const' inline
| `-ParmVarDecl 0x563ee2ec7460 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x563ee2ec7750 <line:109:5, col:41> col:9 used compare 'int (const char *, int) const'
| |-ParmVarDecl 0x563ee2ec75f0 <col:17, col:29> col:29 s 'const char *'
| `-ParmVarDecl 0x563ee2ec7670 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x563ee2ec78a0 <line:110:5, col:46> col:17 starts_with 'bool (const String &) const' inline
| `-ParmVarDecl 0x563ee2ec7810 <col:29, col:43> col:43 x 'const String &'
|-CXXMethodDecl 0x563ee2ec7a78 <line:111:5, col:46> col:10 used starts_with 'bool (const char *, int) const'
| |-ParmVarDecl 0x563ee2ec7960 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x563ee2ec79e0 <col:37, col:41> col:41 len 'int'
|-CXXMethodDecl 0x563ee2ec7bc8 <line:112:5, col:44> col:10 glob_match 'bool (const String &) const'
| `-ParmVarDecl 0x563ee2ec7b38 <col:21, col:35> col:35 pattern 'const String &'
|-CXXMethodDecl 0x563ee2ec7de0 <line:125:5, col:42> col:9 find_left 'int (char, int) const'
| |-ParmVarDecl 0x563ee2ec7c80 <col:19, col:24> col:24 c 'char'
| `-ParmVarDecl 0x563ee2ec7d00 <col:27, col:39> col:31 start 'int' cinit
|   `-IntegerLiteral 0x563ee2ed1160 <col:39> 'int' 0
|-CXXMethodDecl 0x563ee2ec8000 <line:126:5, col:51> col:9 find_left 'int (const String &, int) const'
| |-ParmVarDecl 0x563ee2ec7ea0 <col:19, col:33> col:33 x 'const String &'
| `-ParmVarDecl 0x563ee2ec7f20 <col:36, col:48> col:40 start 'int' cinit
|   `-IntegerLiteral 0x563ee2ed1180 <col:48> 'int' 0
|-CXXMethodDecl 0x563ee2ec81e0 <line:127:5, col:52> col:9 find_right 'int (char, int) const'
| |-ParmVarDecl 0x563ee2ec80c0 <col:20, col:25> col:25 c 'char'
| `-ParmVarDecl 0x563ee2ec8140 <col:28, col:40> col:32 start 'int' cinit
|   `-IntegerLiteral 0x563ee2ed11a0 <col:40> 'int' 2147483647
|-CXXMethodDecl 0x563ee2ec82b0 <line:129:5, col:20> col:12 lower 'String () const'
|-CXXMethodDecl 0x563ee2ec8370 <line:130:5, col:20> col:12 upper 'String () const'
|-CXXMethodDecl 0x563ee2ec8430 <line:131:5, col:24> col:12 printable 'String () const'
|-CXXMethodDecl 0x563ee2ec84f0 <line:132:5, col:25> col:12 quoted_hex 'String () const'
|-CXXMethodDecl 0x563ee2ec85b0 <line:133:5, col:26> col:12 encode_json 'String () const'
|-CXXMethodDecl 0x563ee2ec8758 <line:135:5, col:45> col:20 used operator= 'String &(const String &)' inline
| `-ParmVarDecl 0x563ee2ec8660 <col:30, col:44> col:44 x 'const String &'
|-CXXMethodDecl 0x563ee2ec88d8 <line:137:5, col:40> col:20 used operator= 'String &(String &&)' inline
| `-ParmVarDecl 0x563ee2ec8810 <col:30, col:39> col:39 x 'String &&'
|-CXXMethodDecl 0x563ee2ec8ab0 <line:139:5, col:46> col:20 operator= 'String &(const char *)' inline
| `-ParmVarDecl 0x563ee2ec8998 <col:30, col:42> col:42 cstr 'const char *'
|-CXXMethodDecl 0x563ee2ec8c28 <line:141:5, col:31> col:17 swap 'void (String &)' inline
| `-ParmVarDecl 0x563ee2ec8b68 <col:22, col:30> col:30 x 'String &'
|-CXXMethodDecl 0x563ee2ec8d70 <line:143:5, col:39> col:17 append 'void (const String &)' inline
| `-ParmVarDecl 0x563ee2ec8ce0 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x563ee2ec8ec0 <line:144:5, col:40> col:17 used append 'void (const char *)' inline
| `-ParmVarDecl 0x563ee2ec8e30 <col:24, col:36> col:36 cstr 'const char *'
|-CXXMethodDecl 0x563ee2ec9098 <line:145:5, col:46> col:17 used append 'void (const char *, int)' inline
| |-ParmVarDecl 0x563ee2ec8f80 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x563ee2ec9000 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x563ee2ec9278 <line:146:5, col:59> col:17 append 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x563ee2ec9160 <col:24, col:36> col:36 first 'const char *'
| `-ParmVarDecl 0x563ee2ec91e0 <col:43, col:55> col:55 last 'const char *'
|-CXXMethodDecl 0x563ee2ec93c8 <line:147:5, col:30> col:17 append 'void (char)' inline
| `-ParmVarDecl 0x563ee2ec9338 <col:24, col:29> col:29 c 'char'
|-CXXMethodDecl 0x563ee2ec95d8 <line:148:5, col:36> col:10 append_fill 'void (int, int)'
| |-ParmVarDecl 0x563ee2ec9488 <col:22, col:26> col:26 c 'int'
| `-ParmVarDecl 0x563ee2ec9508 <col:29, col:33> col:33 len 'int'
|-CXXMethodDecl 0x563ee2ec9738 <line:149:5, col:39> col:11 used append_uninitialized 'char *(int)'
| `-ParmVarDecl 0x563ee2ec96a0 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x563ee2ec9890 <line:150:5, col:68> col:18 append_garbage 'char *(int)' inline
| |-ParmVarDecl 0x563ee2ec97f8 <col:33, col:37> col:37 len 'int'
| `-DeprecatedAttr 0x563ee2ec9938 <col:57> "" ""
|-CXXMethodDecl 0x563ee2ec9a48 <line:152:5, col:46> col:20 used operator+= 'String &(const String &)' inline
| `-ParmVarDecl 0x563ee2ec99b8 <col:31, col:45> col:45 x 'const String &'
|-CXXMethodDecl 0x563ee2ec9b98 <line:153:5, col:47> col:20 operator+= 'String &(const char *)' inline
| `-ParmVarDecl 0x563ee2ec9b08 <col:31, col:43> col:43 cstr 'const char *'
|-CXXMethodDecl 0x563ee2ec9d18 <line:154:5, col:37> col:20 operator+= 'String &(char)' inline
| `-ParmVarDecl 0x563ee2ec9c50 <col:31, col:36> col:36 c 'char'
|-CXXMethodDecl 0x563ee2ec9de0 <line:160:5, col:29> col:17 is_shared 'bool () const' inline
|-CXXMethodDecl 0x563ee2ec9ea0 <line:161:5, col:29> col:17 is_stable 'bool () const' inline
|-CXXMethodDecl 0x563ee2ec9f60 <line:163:5, col:60> col:19 unique 'String () const' inline
| `-DeprecatedAttr 0x563ee2eca000 <col:49> "" ""
|-CXXMethodDecl 0x563ee2eca090 <line:164:5, col:30> col:19 used unshared 'String () const' inline
|-CXXMethodDecl 0x563ee2eca150 <line:165:5, col:29> col:19 compact 'String () const' inline
|-CXXMethodDecl 0x563ee2eca240 <line:167:5, col:24> col:11 mutable_data 'char *()'
|-CXXMethodDecl 0x563ee2eca308 <line:168:5, col:25> col:11 mutable_c_str 'char *()'
|-CXXMethodDecl 0x563ee2eca3c8 <line:170:5, col:52> col:33 make_out_of_memory 'const String &()' static inline
|-CXXMethodDecl 0x563ee2eca488 <line:171:5, col:33> col:17 out_of_memory 'bool () const' inline
|-CXXMethodDecl 0x563ee2eca580 <line:172:5, col:50> col:31 out_of_memory_data 'const char *()' static inline
|-CXXMethodDecl 0x563ee2eca648 <line:173:5, col:44> col:23 out_of_memory_length 'int ()' static inline
|-CXXMethodDecl 0x563ee2eca710 <line:174:5, col:42> col:31 used empty_data 'const char *()' static inline
|-CXXMethodDecl 0x563ee2eca8e8 <line:180:5, col:81> col:31 skip_utf8_char 'const char *(const char *, const char *)' static inline
| |-ParmVarDecl 0x563ee2eca7c8 <col:46, col:58> col:58 first 'const char *'
| `-ParmVarDecl 0x563ee2eca848 <col:65, col:77> col:77 last 'const char *'
|-CXXMethodDecl 0x563ee2ecab10 <line:181:5, line:182:38> line:181:33 used skip_utf8_char 'const unsigned char *(const unsigned char *, const unsigned char *)' static
| |-ParmVarDecl 0x563ee2eca9b0 <col:48, col:69> col:69 first 'const unsigned char *'
| `-ParmVarDecl 0x563ee2ecaa30 <line:182:13, col:34> col:34 last 'const unsigned char *'
|-VarDecl 0x563ee2ecac20 <line:184:5, col:35> col:23 used bool_data 'const char [11]' static
|-AccessSpecDecl 0x563ee2ecac88 <line:186:3, col:10> col:3 private
|-CXXRecordDecl 0x563ee2ecacb0 <line:189:5, line:198:5> line:189:12 referenced struct memo_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x563ee2ecadc8 <col:5, col:12> col:12 implicit struct memo_t
| |-FieldDecl 0x563ee2ecae68 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
| |-FieldDecl 0x563ee2ecaec8 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
| |-FieldDecl 0x563ee2ecaf28 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
| `-FieldDecl 0x563ee2ecafd8 <line:197:2, col:18> col:7 real_data 'char [8]'
|-EnumDecl 0x563ee2ecb040 <line:200:5, line:202:5> line:200:5
| `-EnumConstantDecl 0x563ee2ecb278 <line:201:2, col:32> col:2 referenced MEMO_SPACE 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)'
|   `-ImplicitCastExpr 0x563ee2ecb2c8 <col:15, col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x563ee2ecb258 <col:15, col:32> 'unsigned long' Int: 12
|       `-BinaryOperator 0x563ee2ecb168 <col:15, col:32> 'unsigned long' '-'
|         |-UnaryExprOrTypeTraitExpr 0x563ee2ecb110 <col:15, col:28> 'unsigned long' sizeof 'String::memo_t'
|         `-ImplicitCastExpr 0x563ee2ecb150 <col:32> 'unsigned long' <IntegralCast>
|           `-IntegerLiteral 0x563ee2ecb130 <col:32> 'int' 8
|-CXXRecordDecl 0x563ee2ecb2e0 <line:204:5, line:208:5> line:204:12 referenced struct rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x563ee2ecb3f8 <col:5, col:12> col:12 implicit struct rep_t
| |-FieldDecl 0x563ee2ecb4a0 <line:205:2, col:14> col:14 referenced data 'const char *'
| |-FieldDecl 0x563ee2ecb508 <line:206:2, col:6> col:6 referenced length 'int'
| |-FieldDecl 0x563ee2ecb598 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
| |-CXXConstructorDecl 0x563ee2ed1630 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x563ee2ed1a68 <col:12>
| |-CXXConstructorDecl 0x563ee2ed1738 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x563ee2ed1848 <col:12> col:12 used 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x563ee2ecb4a0 'data' 'const char *'
| | | `-ImplicitCastExpr 0x563ee2ed3ff0 <col:12> 'const char *' <LValueToRValue>
| | |   `-MemberExpr 0x563ee2ed3fc0 <col:12> 'const char *const' lvalue .data 0x563ee2ecb4a0
| | |     `-DeclRefExpr 0x563ee2ed3fa0 <col:12> 'const String::rep_t' lvalue ParmVar 0x563ee2ed1848 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x563ee2ecb508 'length' 'int'
| | | `-ImplicitCastExpr 0x563ee2ed4080 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x563ee2ed4050 <col:12> 'const int' lvalue .length 0x563ee2ecb508
| | |     `-DeclRefExpr 0x563ee2ed4030 <col:12> 'const String::rep_t' lvalue ParmVar 0x563ee2ed1848 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x563ee2ecb598 'memo' 'String::memo_t *'
| | | `-ImplicitCastExpr 0x563ee2ed4110 <col:12> 'String::memo_t *' <LValueToRValue>
| | |   `-MemberExpr 0x563ee2ed40e0 <col:12> 'String::memo_t *const' lvalue .memo 0x563ee2ecb598
| | |     `-DeclRefExpr 0x563ee2ed40c0 <col:12> 'const String::rep_t' lvalue ParmVar 0x563ee2ed1848 '' 'const String::rep_t &'
| | `-CompoundStmt 0x563ee2ed4168 <col:12>
| |-CXXConstructorDecl 0x563ee2ed18e8 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x563ee2ed18e8
| | `-ParmVarDecl 0x563ee2ed19f8 <col:12> col:12 'String::rep_t &&'
| |-CXXDestructorDecl 0x563ee2ed6f50 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x563ee2ee2968 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x563ee2ee2a78 <col:12> col:12 used 'const String::rep_t &'
| | `-CompoundStmt 0x563ee2ee2f90 <col:12>
| |   |-BinaryOperator 0x563ee2ee2da8 <col:12> 'const char *' lvalue '='
| |   | |-MemberExpr 0x563ee2ee2d60 <col:12> 'const char *' lvalue ->data 0x563ee2ecb4a0
| |   | | `-CXXThisExpr 0x563ee2ee2d50 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x563ee2ee2d90 <col:12> 'const char *' <LValueToRValue>
| |   |   `-MemberExpr 0x563ee2ee2d20 <col:12> 'const char *const' lvalue .data 0x563ee2ecb4a0
| |   |     `-DeclRefExpr 0x563ee2ee2d00 <col:12> 'const String::rep_t' lvalue ParmVar 0x563ee2ee2a78 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x563ee2ee2e70 <col:12> 'int' lvalue '='
| |   | |-MemberExpr 0x563ee2ee2e28 <col:12> 'int' lvalue ->length 0x563ee2ecb508
| |   | | `-CXXThisExpr 0x563ee2ee2e18 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x563ee2ee2e58 <col:12> 'int' <LValueToRValue>
| |   |   `-MemberExpr 0x563ee2ee2de8 <col:12> 'const int' lvalue .length 0x563ee2ecb508
| |   |     `-DeclRefExpr 0x563ee2ee2dc8 <col:12> 'const String::rep_t' lvalue ParmVar 0x563ee2ee2a78 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x563ee2ee2f38 <col:12> 'String::memo_t *' lvalue '='
| |   | |-MemberExpr 0x563ee2ee2ef0 <col:12> 'String::memo_t *' lvalue ->memo 0x563ee2ecb598
| |   | | `-CXXThisExpr 0x563ee2ee2ee0 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x563ee2ee2f20 <col:12> 'String::memo_t *' <LValueToRValue>
| |   |   `-MemberExpr 0x563ee2ee2eb0 <col:12> 'String::memo_t *const' lvalue .memo 0x563ee2ecb598
| |   |     `-DeclRefExpr 0x563ee2ee2e90 <col:12> 'const String::rep_t' lvalue ParmVar 0x563ee2ee2a78 '' 'const String::rep_t &'
| |   `-ReturnStmt 0x563ee2ee2f80 <col:12>
| |     `-UnaryOperator 0x563ee2ee2f68 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x563ee2ee2f58 <col:12> 'String::rep_t *' this
| `-CXXMethodDecl 0x563ee2ee2ae8 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x563ee2ee2ae8
|   `-ParmVarDecl 0x563ee2ee2bf8 <col:12> col:12 'String::rep_t &&'
|-FieldDecl 0x563ee2ecb610 <line:211:5, col:19> col:19 referenced _r 'String::rep_t' mutable
|-CXXMethodDecl 0x563ee2ecb858 <line:256:5, line:261:5> line:256:17 used assign_memo 'void (const char *, int, String::memo_t *) const' inline
| |-ParmVarDecl 0x563ee2ecb678 <col:29, col:41> col:41 used data 'const char *'
| |-ParmVarDecl 0x563ee2ecb6f8 <col:47, col:51> col:51 used length 'int'
| |-ParmVarDecl 0x563ee2ecb770 <col:59, col:67> col:67 used memo 'String::memo_t *'
| `-CompoundStmt 0x563ee2ed15f0 <col:79, line:261:5>
|   |-BinaryOperator 0x563ee2ed1268 <line:257:2, col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x563ee2ed1200 <col:2, col:5> 'const char *' lvalue .data 0x563ee2ecb4a0
|   | | `-MemberExpr 0x563ee2ed11d0 <col:2> 'String::rep_t' lvalue ->_r 0x563ee2ecb610
|   | |   `-CXXThisExpr 0x563ee2ed11c0 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x563ee2ed1250 <col:12> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x563ee2ed1230 <col:12> 'const char *' lvalue ParmVar 0x563ee2ecb678 'data' 'const char *'
|   |-BinaryOperator 0x563ee2ed1330 <line:258:2, col:14> 'int' lvalue '='
|   | |-MemberExpr 0x563ee2ed12c8 <col:2, col:5> 'int' lvalue .length 0x563ee2ecb508
|   | | `-MemberExpr 0x563ee2ed1298 <col:2> 'String::rep_t' lvalue ->_r 0x563ee2ecb610
|   | |   `-CXXThisExpr 0x563ee2ed1288 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x563ee2ed1318 <col:14> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x563ee2ed12f8 <col:14> 'int' lvalue ParmVar 0x563ee2ecb6f8 'length' 'int'
|   `-IfStmt 0x563ee2ed15d8 <line:259:2, line:260:41>
|     |-ImplicitCastExpr 0x563ee2ed1450 <line:259:6, col:21> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x563ee2ed1438 <col:6, col:21> 'String::memo_t *' <LValueToRValue>
|     |   `-ParenExpr 0x563ee2ed1418 <col:6, col:21> 'String::memo_t *' lvalue
|     |     `-BinaryOperator 0x563ee2ed13f8 <col:7, col:17> 'String::memo_t *' lvalue '='
|     |       |-MemberExpr 0x563ee2ed1390 <col:7, col:10> 'String::memo_t *' lvalue .memo 0x563ee2ecb598
|     |       | `-MemberExpr 0x563ee2ed1360 <col:7> 'String::rep_t' lvalue ->_r 0x563ee2ecb610
|     |       |   `-CXXThisExpr 0x563ee2ed1350 <col:7> 'const String *' implicit this
|     |       `-ImplicitCastExpr 0x563ee2ed13e0 <col:17> 'String::memo_t *' <LValueToRValue>
|     |         `-DeclRefExpr 0x563ee2ed13c0 <col:17> 'String::memo_t *' lvalue ParmVar 0x563ee2ecb770 'memo' 'String::memo_t *'
|     `-CallExpr 0x563ee2ed15b0 <line:260:6, col:41> 'void'
|       |-ImplicitCastExpr 0x563ee2ed1598 <col:6, col:23> 'void (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x563ee2ed14a0 <col:6, col:23> 'void (volatile uint32_t &)' lvalue CXXMethod 0x563ee2eba288 'inc' 'void (volatile uint32_t &)'
|       `-MemberExpr 0x563ee2ed1508 <col:27, col:33> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x563ee2ecae68
|         `-ImplicitCastExpr 0x563ee2ed14f0 <col:27> 'String::memo_t *' <LValueToRValue>
|           `-DeclRefExpr 0x563ee2ed14d0 <col:27> 'String::memo_t *' lvalue ParmVar 0x563ee2ecb770 'memo' 'String::memo_t *'
|-CXXConstructorDecl 0x563ee2ecbb08 <line:263:5, line:265:5> line:263:12 used String 'void (const char *, int, String::memo_t *)' inline
| |-ParmVarDecl 0x563ee2ecb928 <col:19, col:31> col:31 used data 'const char *'
| |-ParmVarDecl 0x563ee2ecb9a8 <col:37, col:41> col:41 used length 'int'
| |-ParmVarDecl 0x563ee2ecba20 <col:49, col:57> col:57 used memo 'String::memo_t *'
| |-CXXCtorInitializer Field 0x563ee2ecb610 '_r' 'String::rep_t'
| | `-CXXConstructExpr 0x563ee2ed1a78 <col:12> 'String::rep_t' 'void () noexcept'
| `-CompoundStmt 0x563ee2ed1c08 <col:63, line:265:5>
|   `-CXXMemberCallExpr 0x563ee2ed1b70 <line:264:2, col:32> 'void'
|     |-MemberExpr 0x563ee2ed1ae0 <col:2> '<bound member function type>' ->assign_memo 0x563ee2ecb858
|     | `-ImplicitCastExpr 0x563ee2ed1ba8 <col:2> 'const String *' <NoOp>
|     |   `-CXXThisExpr 0x563ee2ed1ad0 <col:2> 'String *' implicit this
|     |-ImplicitCastExpr 0x563ee2ed1bc0 <col:14> 'const char *' <LValueToRValue>
|     | `-DeclRefExpr 0x563ee2ed1b10 <col:14> 'const char *' lvalue ParmVar 0x563ee2ecb928 'data' 'const char *'
|     |-ImplicitCastExpr 0x563ee2ed1bd8 <col:20> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x563ee2ed1b30 <col:20> 'int' lvalue ParmVar 0x563ee2ecb9a8 'length' 'int'
|     `-ImplicitCastExpr 0x563ee2ed1bf0 <col:28> 'String::memo_t *' <LValueToRValue>
|       `-DeclRefExpr 0x563ee2ed1b50 <col:28> 'String::memo_t *' lvalue ParmVar 0x563ee2ecba20 'memo' 'String::memo_t *'
|-CXXMethodDecl 0x563ee2ecbc98 <line:267:5, line:269:5> line:267:17 used assign 'void (const String &) const' inline
| |-ParmVarDecl 0x563ee2ecbbd8 <col:24, col:38> col:38 used x 'const String &'
| `-CompoundStmt 0x563ee2ed1e60 <col:47, line:269:5>
|   `-CXXMemberCallExpr 0x563ee2ed1de0 <line:268:2, col:47> 'void'
|     |-MemberExpr 0x563ee2ed1c30 <col:2> '<bound member function type>' ->assign_memo 0x563ee2ecb858
|     | `-CXXThisExpr 0x563ee2ed1c20 <col:2> 'const String *' implicit this
|     |-ImplicitCastExpr 0x563ee2ed1e18 <col:14, col:19> 'const char *' <LValueToRValue>
|     | `-MemberExpr 0x563ee2ed1cb0 <col:14, col:19> 'const char *' lvalue .data 0x563ee2ecb4a0
|     |   `-MemberExpr 0x563ee2ed1c80 <col:14, col:16> 'String::rep_t' lvalue ._r 0x563ee2ecb610
|     |     `-DeclRefExpr 0x563ee2ed1c60 <col:14> 'const String' lvalue ParmVar 0x563ee2ecbbd8 'x' 'const String &'
|     |-ImplicitCastExpr 0x563ee2ed1e30 <col:25, col:30> 'int' <LValueToRValue>
|     | `-MemberExpr 0x563ee2ed1d30 <col:25, col:30> 'int' lvalue .length 0x563ee2ecb508
|     |   `-MemberExpr 0x563ee2ed1d00 <col:25, col:27> 'String::rep_t' lvalue ._r 0x563ee2ecb610
|     |     `-DeclRefExpr 0x563ee2ed1ce0 <col:25> 'const String' lvalue ParmVar 0x563ee2ecbbd8 'x' 'const String &'
|     `-ImplicitCastExpr 0x563ee2ed1e48 <col:38, col:43> 'String::memo_t *' <LValueToRValue>
|       `-MemberExpr 0x563ee2ed1db0 <col:38, col:43> 'String::memo_t *' lvalue .memo 0x563ee2ecb598
|         `-MemberExpr 0x563ee2ed1d80 <col:38, col:40> 'String::rep_t' lvalue ._r 0x563ee2ecb610
|           `-DeclRefExpr 0x563ee2ed1d60 <col:38> 'const String' lvalue ParmVar 0x563ee2ecbbd8 'x' 'const String &'
|-CXXMethodDecl 0x563ee2ecbd60 <line:271:5, line:278:5> line:271:17 used deref 'void () const' inline
| `-CompoundStmt 0x563ee2ed2820 <col:31, line:278:5>
|   `-IfStmt 0x563ee2ed2808 <line:272:2, line:277:2>
|     |-ImplicitCastExpr 0x563ee2ed1f00 <line:272:6, col:9> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x563ee2ed1ee8 <col:6, col:9> 'String::memo_t *' <LValueToRValue>
|     |   `-MemberExpr 0x563ee2ed1eb8 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x563ee2ecb598
|     |     `-MemberExpr 0x563ee2ed1e88 <col:6> 'String::rep_t' lvalue ->_r 0x563ee2ecb610
|     |       `-CXXThisExpr 0x563ee2ed1e78 <col:6> 'const String *' implicit this
|     `-CompoundStmt 0x563ee2ed27e0 <col:15, line:277:2>
|       |-ParenExpr 0x563ee2ed23b0 <line:273:6, col:166> 'void'
|       | `-ConditionalOperator 0x563ee2ed2380 <col:7, col:165> 'void'
|       |   |-CXXStaticCastExpr 0x563ee2ed2010 <col:7, col:44> 'bool' static_cast<_Bool> <NoOp>
|       |   | `-ImplicitCastExpr 0x563ee2ed1ff8 <col:27, col:36> 'bool' <IntegralToBoolean> part_of_explicit_cast
|       |   |   `-ImplicitCastExpr 0x563ee2ed1fe0 <col:27, col:36> 'uint32_t':'unsigned int' <LValueToRValue> part_of_explicit_cast
|       |   |     `-MemberExpr 0x563ee2ed1fa0 <col:27, col:36> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x563ee2ecae68
|       |   |       `-ImplicitCastExpr 0x563ee2ed1f88 <col:27, col:30> 'String::memo_t *' <LValueToRValue>
|       |   |         `-MemberExpr 0x563ee2ed1f58 <col:27, col:30> 'String::memo_t *' lvalue .memo 0x563ee2ecb598
|       |   |           `-MemberExpr 0x563ee2ed1f28 <col:27> 'String::rep_t' lvalue ->_r 0x563ee2ecb610
|       |   |             `-CXXThisExpr 0x563ee2ed1f18 <col:27> 'const String *' implicit this
|       |   |-CXXFunctionalCastExpr 0x563ee2ed2070 <col:48, col:55> 'void' functional cast to void <ToVoid>
|       |   | `-IntegerLiteral 0x563ee2ed2050 <col:54> 'int' 0
|       |   `-CallExpr 0x563ee2ed22e0 <col:59, col:165> 'void'
|       |     |-ImplicitCastExpr 0x563ee2ed22c8 <col:59> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x563ee2ed2248 <col:59> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x563ee2c314e0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|       |     |-ImplicitCastExpr 0x563ee2ed2320 <col:74> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x563ee2ed2158 <col:74> 'const char [18]' lvalue "_r.memo->refcount"
|       |     |-ImplicitCastExpr 0x563ee2ed2338 <col:95> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x563ee2ed2188 <col:95> 'const char [29]' lvalue "../dummy_inc/click/string.hh"
|       |     |-ImplicitCastExpr 0x563ee2ed2350 <col:127> 'unsigned int' <IntegralCast>
|       |     | `-IntegerLiteral 0x563ee2ed21c0 <col:127> 'int' 273
|       |     `-ImplicitCastExpr 0x563ee2ed2368 <col:132, col:146> 'const char *' <ArrayToPointerDecay>
|       |       `-UnaryOperator 0x563ee2ed2230 <col:132, col:146> 'const char [27]' lvalue prefix '__extension__' cannot overflow
|       |         `-PredefinedExpr 0x563ee2ed2218 <col:146> 'const char [27]' lvalue __PRETTY_FUNCTION__
|       |           `-StringLiteral 0x563ee2ed21e0 <col:146> 'const char [27]' lvalue "void String::deref() const"
|       |-IfStmt 0x563ee2ed2700 <line:274:6, line:275:22>
|       | |-CallExpr 0x563ee2ed25c0 <line:274:10, col:57> 'bool'
|       | | |-ImplicitCastExpr 0x563ee2ed25a8 <col:10, col:27> 'bool (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | | | `-DeclRefExpr 0x563ee2ed2520 <col:10, col:27> 'bool (volatile uint32_t &)' lvalue CXXMethod 0x563ee2ebb6d0 'dec_and_test' 'bool (volatile uint32_t &)'
|       | | `-MemberExpr 0x563ee2ed24f0 <col:40, col:49> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x563ee2ecae68
|       | |   `-ImplicitCastExpr 0x563ee2ed24d8 <col:40, col:43> 'String::memo_t *' <LValueToRValue>
|       | |     `-MemberExpr 0x563ee2ed24a8 <col:40, col:43> 'String::memo_t *' lvalue .memo 0x563ee2ecb598
|       | |       `-MemberExpr 0x563ee2ed2478 <col:40> 'String::rep_t' lvalue ->_r 0x563ee2ecb610
|       | |         `-CXXThisExpr 0x563ee2ed2468 <col:40> 'const String *' implicit this
|       | `-CallExpr 0x563ee2ed26c0 <line:275:3, col:22> 'void'
|       |   |-ImplicitCastExpr 0x563ee2ed26a8 <col:3> 'void (*)(String::memo_t *)' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x563ee2ed25e8 <col:3> 'void (String::memo_t *)' lvalue CXXMethod 0x563ee2ed0540 'delete_memo' 'void (String::memo_t *)'
|       |   `-ImplicitCastExpr 0x563ee2ed26e8 <col:15, col:18> 'String::memo_t *' <LValueToRValue>
|       |     `-MemberExpr 0x563ee2ed2648 <col:15, col:18> 'String::memo_t *' lvalue .memo 0x563ee2ecb598
|       |       `-MemberExpr 0x563ee2ed2618 <col:15> 'String::rep_t' lvalue ->_r 0x563ee2ecb610
|       |         `-CXXThisExpr 0x563ee2ed2608 <col:15> 'const String *' implicit this
|       `-BinaryOperator 0x563ee2ed27c0 <line:276:6, col:16> 'String::memo_t *' lvalue '='
|         |-MemberExpr 0x563ee2ed2758 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x563ee2ecb598
|         | `-MemberExpr 0x563ee2ed2728 <col:6> 'String::rep_t' lvalue ->_r 0x563ee2ecb610
|         |   `-CXXThisExpr 0x563ee2ed2718 <col:6> 'const String *' implicit this
|         `-ImplicitCastExpr 0x563ee2ed27a8 <col:16> 'String::memo_t *' <NullToPointer>
|           `-IntegerLiteral 0x563ee2ed2788 <col:16> 'int' 0
|-CXXMethodDecl 0x563ee2ecbff8 <line:280:5, col:56> col:10 used assign 'void (const char *, int, bool)'
| |-ParmVarDecl 0x563ee2ecbe18 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x563ee2ecbe98 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x563ee2ecbf10 <col:41, col:46> col:46 need_deref 'bool'
|-CXXMethodDecl 0x563ee2ecc0d0 <line:281:5, col:31> col:10 assign_out_of_memory 'void ()'
|-CXXMethodDecl 0x563ee2ecc320 <line:282:5, col:53> col:10 used append 'void (const char *, int, String::memo_t *)'
| |-ParmVarDecl 0x563ee2ecc188 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x563ee2ecc208 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x563ee2ecc280 <col:41, col:49> col:49 memo 'String::memo_t *'
|-CXXMethodDecl 0x563ee2ecc508 <line:283:5, col:58> col:19 used hard_make_stable 'String (const char *, int)' static
| |-ParmVarDecl 0x563ee2ecc3f0 <col:36, col:48> col:48 s 'const char *'
| `-ParmVarDecl 0x563ee2ecc470 <col:51, col:55> col:55 len 'int'
|-CXXMethodDecl 0x563ee2ecc608 <line:284:5, line:286:5> line:284:27 used absent_memo 'String::memo_t *()' static inline
| `-CompoundStmt 0x563ee2ed28f8 <col:41, line:286:5>
|   `-ReturnStmt 0x563ee2ed28e8 <line:285:2, col:48>
|     `-CXXReinterpretCastExpr 0x563ee2ed28b8 <col:9, col:48> 'String::memo_t *' reinterpret_cast<struct String::memo_t *> <IntegralToPointer>
|       `-CXXFunctionalCastExpr 0x563ee2ed2880 <col:36, col:47> 'uintptr_t':'unsigned long' functional cast to uintptr_t <NoOp>
|         `-ImplicitCastExpr 0x563ee2ed2868 <col:46> 'uintptr_t':'unsigned long' <IntegralCast> part_of_explicit_cast
|           `-IntegerLiteral 0x563ee2ed2848 <col:46> 'int' 1
|-CXXMethodDecl 0x563ee2ecc8a8 <line:287:5, col:68> col:20 create_memo 'String::memo_t *(char *, int, int)' static
| |-ParmVarDecl 0x563ee2ecc6c0 <col:32, col:38> col:38 space 'char *'
| |-ParmVarDecl 0x563ee2ecc740 <col:45, col:49> col:49 dirty 'int'
| `-ParmVarDecl 0x563ee2ecc7c0 <col:56, col:60> col:60 capacity 'int'
|-CXXMethodDecl 0x563ee2ed0540 <line:288:5, col:41> col:17 used delete_memo 'void (String::memo_t *)' static
| `-ParmVarDecl 0x563ee2ecc970 <col:29, col:37> col:37 memo 'String::memo_t *'
|-CXXMethodDecl 0x563ee2ed0610 <line:289:5, col:30> col:17 hard_c_str 'const char *() const'
|-CXXMethodDecl 0x563ee2ed07e0 <line:290:5, col:46> col:10 used hard_equals 'bool (const char *, int) const'
| |-ParmVarDecl 0x563ee2ed06c8 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x563ee2ed0748 <col:37, col:41> col:41 len 'int'
|-VarDecl 0x563ee2ed08a0 <line:292:5, col:23> col:23 used null_data 'const char' static
|-VarDecl 0x563ee2ed0968 <line:293:5, col:34> col:23 used oom_data 'const char [15]' static
|-VarDecl 0x563ee2ed0a68 <line:294:5, col:34> col:23 int_data 'const char [20]' static
|-VarDecl 0x563ee2ed0ae0 <line:295:5, col:24> col:24 used null_string_rep 'const String::rep_t' static
|-VarDecl 0x563ee2ed0b58 <line:296:5, col:24> col:24 used oom_string_rep 'const String::rep_t' static
|-EnumDecl 0x563ee2ed0bc0 <line:297:5, col:25> col:5
| `-EnumConstantDecl 0x563ee2ed0cc0 <col:12, col:22> col:12 referenced oom_len 'String::(anonymous enum at ../dummy_inc/click/string.hh:297:5)'
|   `-ImplicitCastExpr 0x563ee2ed0d10 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x563ee2ed0ca0 <col:22> 'int' Int: 14
|       `-IntegerLiteral 0x563ee2ed0c80 <col:22> 'int' 14
|-CXXMethodDecl 0x563ee2ed0f28 <line:299:5, col:46> col:19 make_claim 'String (char *, int, int)' static
| |-ParmVarDecl 0x563ee2ed0d40 <col:30, col:35> col:36 'char *'
| |-ParmVarDecl 0x563ee2ed0dc0 <col:38> col:41 'int'
| `-ParmVarDecl 0x563ee2ed0e40 <col:43> col:46 'int'
|-FriendDecl 0x563ee2ed1030 <line:301:5, col:19> col:12 'struct rep_t':'String::rep_t'
`-FriendDecl 0x563ee2ed10c0 <line:302:5, col:18> col:12 'class StringAccum':'StringAccum'

Layout: <CGRecordLayout
  LLVMType:%class.String = type { %"struct.String::rep_t" }
  NonVirtualBaseLLVMType:%class.String = type { %"struct.String::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x563ee3213880 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'typed_array_memory<String>'
|-CXXRecordDecl 0x563ee3213a58 prev 0x563ee3213880 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x563ee3213ae8 <col:46, col:52> col:46 public
|-TypedefDecl 0x563ee3213b10 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x563ee2b90370 'int'
|-TypedefDecl 0x563ee32164a0 <line:13:5, col:31> col:31 type 'typename typed_array_memory<String>::type':'String'
| `-ElaboratedType 0x563ee3216450 'typename typed_array_memory<String>::type' sugar
|   `-TypedefType 0x563ee3216430 'typed_array_memory<String>::type' sugar
|     |-Typedef 0x563ee3213d28 'type'
|     `-SubstTemplateTypeParmType 0x563ee3213cf0 'String' sugar
|       |-TemplateTypeParmType 0x563ee2e85ac0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563ee2e85a70 'T'
|       `-RecordType 0x563ee2ec22b0 'String'
|         `-CXXRecord 0x563ee2ec2220 'String'
|-TypedefDecl 0x563ee3216558 <line:14:5, col:19> col:19 iterator 'vector_memory<typed_array_memory<String> >::type *'
| `-PointerType 0x563ee3216520 'vector_memory<typed_array_memory<String> >::type *'
|   `-TypedefType 0x563ee3216500 'vector_memory<typed_array_memory<String> >::type' sugar
|     |-Typedef 0x563ee32164a0 'type'
|     `-ElaboratedType 0x563ee3216450 'typename typed_array_memory<String>::type' sugar
|       `-TypedefType 0x563ee3216430 'typed_array_memory<String>::type' sugar
|         |-Typedef 0x563ee3213d28 'type'
|         `-SubstTemplateTypeParmType 0x563ee3213cf0 'String' sugar
|           |-TemplateTypeParmType 0x563ee2e85ac0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x563ee2e85a70 'T'
|           `-RecordType 0x563ee2ec22b0 'String'
|             `-CXXRecord 0x563ee2ec2220 'String'
|-CXXMethodDecl 0x563ee32166d8 <line:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<typed_array_memory<String> >::type *) const' inline
| `-ParmVarDecl 0x563ee32165e8 <col:36, col:48> col:48 argp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXConstructorDecl 0x563ee32167c8 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x563ee32168a8 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x563ee32168a8
|-CXXMethodDecl 0x563ee3216b78 <line:25:5, col:43> col:10 assign 'void (const vector_memory<typed_array_memory<String> > &)'
| `-ParmVarDecl 0x563ee3216a80 <col:17, col:42> col:42 x 'const vector_memory<typed_array_memory<String> > &'
|-CXXMethodDecl 0x563ee3216db8 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x563ee3216c30 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x563ee3216ca8 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x563ee3216f88 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x563ee3216e78 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x563ee3216ef0 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x563ee32170e8 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<typed_array_memory<String> >::iterator ()'
|-CXXMethodDecl 0x563ee32171b8 <line:31:5, line:33:5> line:31:14 end 'vector_memory<typed_array_memory<String> >::iterator ()'
|-CXXMethodDecl 0x563ee3217408 <line:34:5, col:48> col:14 insert 'vector_memory<typed_array_memory<String> >::iterator (vector_memory<typed_array_memory<String> >::iterator, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x563ee3217278 <col:21, col:30> col:30 it 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
| `-ParmVarDecl 0x563ee32172f0 <col:34, col:46> col:46 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x563ee3217668 <line:35:5, col:42> col:14 erase 'vector_memory<typed_array_memory<String> >::iterator (vector_memory<typed_array_memory<String> >::iterator, vector_memory<typed_array_memory<String> >::iterator)'
| |-ParmVarDecl 0x563ee32174d8 <col:20, col:29> col:29 a 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
| `-ParmVarDecl 0x563ee3217550 <col:32, col:41> col:41 b 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x563ee3217828 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<typed_array_memory<String> >::type *)' inline
| `-ParmVarDecl 0x563ee3217738 <col:27, col:39> col:39 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x563ee32179e8 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<typed_array_memory<String> >::type *)' inline
| `-ParmVarDecl 0x563ee32178f0 <col:37, col:43> col:43 vp 'vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x563ee3217aa0 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x563ee3217b50 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x563ee3217d88 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x563ee3217c00 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x563ee3217c78 <col:45, col:57> col:57 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x563ee3218028 <line:66:5, col:35> col:10 swap 'void (vector_memory<typed_array_memory<String> > &)'
| `-ParmVarDecl 0x563ee3217f30 <col:15, col:34> col:34 x 'vector_memory<typed_array_memory<String> > &'
|-FieldDecl 0x563ee32180f0 <line:68:5, col:11> col:11 l_ 'vector_memory<typed_array_memory<String> >::type *'
|-FieldDecl 0x563ee3218140 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x563ee3218190 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.1 = type { %class.String*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.1 = type { %class.String*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x563ee30f9a50 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'String'
|-CXXRecordDecl 0x563ee3212628 prev 0x563ee30f9a50 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x563ee32137f0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<String>::type':'typed_array_memory<String>'
| `-ElaboratedType 0x563ee32137a0 'typename array_memory<String>::type' sugar
|   `-TypedefType 0x563ee3213780 'conditional<false, sized_array_memory<24>, typed_array_memory<String> >::type' sugar
|     |-Typedef 0x563ee3213630 'type'
|     `-SubstTemplateTypeParmType 0x563ee32134c0 'typed_array_memory<String>' sugar
|       |-TemplateTypeParmType 0x563ee2e5b870 'F' dependent depth 0 index 1
|       | `-TemplateTypeParm 0x563ee2e5b818 'F'
|       `-RecordType 0x563ee3213120 'typed_array_memory<String>'
|         `-ClassTemplateSpecialization 0x563ee3213040 'typed_array_memory'
|-FieldDecl 0x563ee32181e0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<String>::array_memory_type>':'vector_memory<typed_array_memory<String> >' mutable
|-AccessSpecDecl 0x563ee3218230 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x563ee3218268 <line:118:5, col:15> col:15 value_type 'String':'String'
| `-SubstTemplateTypeParmType 0x563ee32126c0 'String' sugar
|   |-TemplateTypeParmType 0x563ee2e92de0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x563ee2e92d88 'T'
|   `-RecordType 0x563ee2ec22b0 'String'
|     `-CXXRecord 0x563ee2ec2220 'String'
|-TypedefDecl 0x563ee32182f8 <line:119:5, col:16> col:16 reference 'String &'
| `-LValueReferenceType 0x563ee32182c0 'String &'
|   `-SubstTemplateTypeParmType 0x563ee32126c0 'String' sugar
|     |-TemplateTypeParmType 0x563ee2e92de0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x563ee2e92d88 'T'
|     `-RecordType 0x563ee2ec22b0 'String'
|       `-CXXRecord 0x563ee2ec2220 'String'
|-TypedefDecl 0x563ee3218388 <line:120:5, col:22> col:22 const_reference 'const String &'
| `-LValueReferenceType 0x563ee3218350 'const String &'
|   `-QualType 0x563ee32126c1 'const String' const
|     `-SubstTemplateTypeParmType 0x563ee32126c0 'String' sugar
|       |-TemplateTypeParmType 0x563ee2e92de0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563ee2e92d88 'T'
|       `-RecordType 0x563ee2ec22b0 'String'
|         `-CXXRecord 0x563ee2ec2220 'String'
|-TypedefDecl 0x563ee3218418 <line:121:5, col:16> col:16 pointer 'String *'
| `-PointerType 0x563ee32183e0 'String *'
|   `-SubstTemplateTypeParmType 0x563ee32126c0 'String' sugar
|     |-TemplateTypeParmType 0x563ee2e92de0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x563ee2e92d88 'T'
|     `-RecordType 0x563ee2ec22b0 'String'
|       `-CXXRecord 0x563ee2ec2220 'String'
|-TypedefDecl 0x563ee32184a8 <line:122:5, col:22> col:22 const_pointer 'const String *'
| `-PointerType 0x563ee3218470 'const String *'
|   `-QualType 0x563ee32126c1 'const String' const
|     `-SubstTemplateTypeParmType 0x563ee32126c0 'String' sugar
|       |-TemplateTypeParmType 0x563ee2e92de0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563ee2e92d88 'T'
|       `-RecordType 0x563ee2ec22b0 'String'
|         `-CXXRecord 0x563ee2ec2220 'String'
|-TypedefDecl 0x563ee3219100 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<String>::type':'const String &'
| `-ElaboratedType 0x563ee32190b0 'typename fast_argument<String>::type' sugar
|   `-TypedefType 0x563ee3219090 'fast_argument<String, true>::type' sugar
|     |-Typedef 0x563ee3218fc8 'type'
|     `-LValueReferenceType 0x563ee3218f90 'const String &'
|       `-QualType 0x563ee3218d31 'const String' const
|         `-SubstTemplateTypeParmType 0x563ee3218d30 'String' sugar
|           |-TemplateTypeParmType 0x563ee2e657c0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x563ee2e65768 'T'
|           `-RecordType 0x563ee2ec22b0 'String'
|             `-CXXRecord 0x563ee2ec2220 'String'
|-TypedefDecl 0x563ee3219168 <line:126:5, col:22> col:22 const_access_type 'const String &'
| `-LValueReferenceType 0x563ee3218350 'const String &'
|   `-QualType 0x563ee32126c1 'const String' const
|     `-SubstTemplateTypeParmType 0x563ee32126c0 'String' sugar
|       |-TemplateTypeParmType 0x563ee2e92de0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563ee2e92d88 'T'
|       `-RecordType 0x563ee2ec22b0 'String'
|         `-CXXRecord 0x563ee2ec2220 'String'
|-TypedefDecl 0x563ee32191c0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x563ee2b90370 'int'
|-TypedefDecl 0x563ee3219228 <line:130:5, col:16> col:16 iterator 'String *'
| `-PointerType 0x563ee32183e0 'String *'
|   `-SubstTemplateTypeParmType 0x563ee32126c0 'String' sugar
|     |-TemplateTypeParmType 0x563ee2e92de0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x563ee2e92d88 'T'
|     `-RecordType 0x563ee2ec22b0 'String'
|       `-CXXRecord 0x563ee2ec2220 'String'
|-TypedefDecl 0x563ee3219290 <line:131:5, col:22> col:22 const_iterator 'const String *'
| `-PointerType 0x563ee3218470 'const String *'
|   `-QualType 0x563ee32126c1 'const String' const
|     `-SubstTemplateTypeParmType 0x563ee32126c0 'String' sugar
|       |-TemplateTypeParmType 0x563ee2e92de0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563ee2e92d88 'T'
|       `-RecordType 0x563ee2ec22b0 'String'
|         `-CXXRecord 0x563ee2ec2220 'String'
|-EnumDecl 0x563ee32192e8 <line:134:5> col:5
| `-EnumConstantDecl 0x563ee32193e0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<String>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x563ee32193c0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x563ee2e94468 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x563ee2e94440 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x563ee2e94420 <col:40> 'int' 1
|-CXXConstructorDecl 0x563ee3219468 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x563ee32196f8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x563ee3219520 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x563ee32195c0 <col:41, col:61> col:61 v 'Vector<String>::value_argument_type':'const String &'
|-CXXConstructorDecl 0x563ee3219988 <line:139:5, col:37> col:12 Vector 'void (const Vector<String> &)' inline
| `-ParmVarDecl 0x563ee3219870 <col:19, col:36> col:36 x 'const Vector<String> &'
|-CXXConstructorDecl 0x563ee3219c48 <line:141:5, col:32> col:12 Vector 'void (Vector<String> &&)' inline
| `-ParmVarDecl 0x563ee3219b30 <col:19, col:31> col:31 x 'Vector<String> &&'
|-CXXMethodDecl 0x563ee3219f60 <line:144:5, col:51> col:23 operator= 'Vector<String> &(const Vector<String> &)' inline
| `-ParmVarDecl 0x563ee3219e40 <col:33, col:50> col:50 x 'const Vector<String> &'
|-CXXMethodDecl 0x563ee321a270 <line:146:5, col:46> col:23 operator= 'Vector<String> &(Vector<String> &&)' inline
| `-ParmVarDecl 0x563ee321a150 <col:33, col:45> col:45 x 'Vector<String> &&'
|-CXXMethodDecl 0x563ee321a560 <line:148:5, col:70> col:23 assign 'Vector<String> &(Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x563ee321a3a8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x563ee321a420 <col:43, col:69> col:63 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x563ee321a688 <line:150:5, col:55> col:49 begin 'Vector<String>::iterator ()'
| |-NoInlineAttr 0x563ee321a738 <col:20> Inherited
| `-OptimizeNoneAttr 0x563ee321a790 <col:30> Inherited
|-CXXMethodDecl 0x563ee321a7d8 <line:151:5, col:53> col:49 end 'Vector<String>::iterator ()'
| |-NoInlineAttr 0x563ee321a888 <col:20> Inherited
| `-OptimizeNoneAttr 0x563ee321a8e0 <col:30> Inherited
|-CXXMethodDecl 0x563ee321a9a8 <line:152:5, col:63> col:55 used begin 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x563ee321aa58 <col:20> Inherited
| `-OptimizeNoneAttr 0x563ee321aab0 <col:30> Inherited
|-CXXMethodDecl 0x563ee321aaf8 <line:153:5, col:61> col:55 used end 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x563ee321aba8 <col:20> Inherited
| `-OptimizeNoneAttr 0x563ee321ac00 <col:30> Inherited
|-CXXMethodDecl 0x563ee321ac48 <line:154:5, col:64> col:55 cbegin 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x563ee321acf8 <col:20> Inherited
| `-OptimizeNoneAttr 0x563ee321ad50 <col:30> Inherited
|-CXXMethodDecl 0x563ee321ad98 <line:155:5, col:62> col:55 cend 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x563ee321ae48 <col:20> Inherited
| `-OptimizeNoneAttr 0x563ee321aea0 <col:30> Inherited
|-CXXMethodDecl 0x563ee321aec8 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x563ee321af78 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x563ee321b028 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x563ee321b1e8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x563ee321b0d8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x563ee321b150 <col:37, col:63> col:57 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x563ee321b338 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x563ee321b2a8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x563ee321b4e8 <line:163:5, col:65> col:43 operator[] 'String &(Vector::size_type)'
| |-ParmVarDecl 0x563ee321b3f0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x563ee321b5a0 <col:20>
| `-OptimizeNoneAttr 0x563ee321b5f8 <col:30>
|-CXXMethodDecl 0x563ee321b718 <line:164:5, col:73> col:49 operator[] 'const String &(Vector::size_type) const'
| |-ParmVarDecl 0x563ee321b620 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x563ee321b7d0 <col:20>
| `-OptimizeNoneAttr 0x563ee321b828 <col:30>
|-CXXMethodDecl 0x563ee321b8e0 <line:165:5, col:29> col:15 at 'String &(Vector::size_type)' inline
| `-ParmVarDecl 0x563ee321b850 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x563ee321ba28 <line:166:5, col:37> col:21 at 'const String &(Vector::size_type) const' inline
| `-ParmVarDecl 0x563ee321b998 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x563ee321bb58 <line:167:5, col:21> col:15 front 'String &()' inline
|-CXXMethodDecl 0x563ee321bc58 <line:168:5, col:29> col:21 front 'const String &() const' inline
|-CXXMethodDecl 0x563ee321bd28 <line:169:5, col:20> col:15 back 'String &()' inline
|-CXXMethodDecl 0x563ee321bdf8 <line:170:5, col:28> col:21 back 'const String &() const' inline
|-CXXMethodDecl 0x563ee321bf38 <line:172:5, col:39> col:15 unchecked_at 'String &(Vector::size_type)' inline
| `-ParmVarDecl 0x563ee321bea8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x563ee321c080 <line:173:5, col:47> col:21 unchecked_at 'const String &(Vector::size_type) const' inline
| `-ParmVarDecl 0x563ee321bff0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x563ee321c1c8 <line:174:5, col:59> col:15 at_u 'String &(Vector::size_type)' inline
| |-ParmVarDecl 0x563ee321c138 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x563ee321c280 <col:48> Inherited "" ""
|-CXXMethodDecl 0x563ee321c380 <line:175:5, col:71> col:21 at_u 'const String &(Vector::size_type) const' inline
| |-ParmVarDecl 0x563ee321c2f0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x563ee321c438 <col:60> Inherited "" ""
|-CXXMethodDecl 0x563ee321c4f8 <line:177:5, col:20> col:15 data 'String *()' inline
|-CXXMethodDecl 0x563ee321c5f8 <line:178:5, col:28> col:21 data 'const String *() const' inline
|-CXXMethodDecl 0x563ee321c778 <line:180:5, col:48> col:17 used push_back 'void (Vector<String>::value_argument_type)' inline
| `-ParmVarDecl 0x563ee321c6b8 <col:27, col:47> col:47 v 'Vector<String>::value_argument_type':'const String &'
|-FunctionTemplateDecl 0x563ee321cf08 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x563ee321c830 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<String>':'fast_argument<String, true>'
| `-CXXMethodDecl 0x563ee321ce68 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (String &&)' inline
|   `-ParmVarDecl 0x563ee321cd68 <col:58, col:62> col:62 v 'String &&'
|-CXXMethodDecl 0x563ee321cfe8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x563ee321dd90 <line:186:5, col:49> col:17 push_front 'void (Vector<String>::value_argument_type)' inline
| `-ParmVarDecl 0x563ee321dd00 <col:28, col:48> col:48 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x563ee321de48 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x563ee321e098 <line:189:5, col:62> col:21 insert 'Vector<String>::iterator (Vector<String>::iterator, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x563ee321df08 <col:28, col:37> col:37 it 'Vector<String>::iterator':'String *'
| `-ParmVarDecl 0x563ee321df80 <col:41, col:61> col:61 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x563ee321e228 <line:190:5, col:38> col:21 erase 'Vector<String>::iterator (Vector<String>::iterator)' inline
| `-ParmVarDecl 0x563ee321e168 <col:27, col:36> col:36 it 'Vector<String>::iterator':'String *'
|-CXXMethodDecl 0x563ee321e438 <line:191:5, col:49> col:21 erase 'Vector<String>::iterator (Vector<String>::iterator, Vector<String>::iterator)' inline
| |-ParmVarDecl 0x563ee321e2f0 <col:27, col:36> col:36 a 'Vector<String>::iterator':'String *'
| `-ParmVarDecl 0x563ee321e368 <col:39, col:48> col:48 b 'Vector<String>::iterator':'String *'
|-CXXMethodDecl 0x563ee321e4f8 <line:193:5, col:23> col:17 used clear 'void ()' inline
|-CXXMethodDecl 0x563ee321e758 <line:195:5, col:34> col:17 swap 'void (Vector<String> &)' inline
| `-ParmVarDecl 0x563ee321e660 <col:22, col:33> col:33 x 'Vector<String> &'
`-CXXDestructorDecl 0x563ee321e828 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x563ee321e828

Layout: <CGRecordLayout
  LLVMType:%class.Vector.0 = type { %class.vector_memory.1 }
  NonVirtualBaseLLVMType:%class.Vector.0 = type { %class.vector_memory.1 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x563ee32524a0 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<4>'
|-CXXRecordDecl 0x563ee3252678 prev 0x563ee32524a0 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x563ee3252708 <col:46, col:52> col:46 public
|-TypedefDecl 0x563ee3252730 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x563ee2b90370 'int'
|-TypedefDecl 0x563ee3260220 <line:13:5, col:31> col:31 type 'typename sized_array_memory<4>::type':'char_array<4>'
| `-ElaboratedType 0x563ee32601d0 'typename sized_array_memory<4>::type' sugar
|   `-TypedefType 0x563ee3252be0 'sized_array_memory<4>::type' sugar
|     |-Typedef 0x563ee3252ae0 'type'
|     `-TemplateSpecializationType 0x563ee3252a70 'char_array<4UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x563ee3252950 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 4
|       |   `-SubstNonTypeTemplateParmExpr 0x563ee3252930 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x563ee3252910 <col:24> 'unsigned long' 4
|       `-RecordType 0x563ee3252a50 'char_array<4>'
|         `-ClassTemplateSpecialization 0x563ee3252970 'char_array'
|-TypedefDecl 0x563ee32602d8 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<4> >::type *'
| `-PointerType 0x563ee32602a0 'vector_memory<sized_array_memory<4> >::type *'
|   `-TypedefType 0x563ee3260280 'vector_memory<sized_array_memory<4> >::type' sugar
|     |-Typedef 0x563ee3260220 'type'
|     `-ElaboratedType 0x563ee32601d0 'typename sized_array_memory<4>::type' sugar
|       `-TypedefType 0x563ee3252be0 'sized_array_memory<4>::type' sugar
|         |-Typedef 0x563ee3252ae0 'type'
|         `-TemplateSpecializationType 0x563ee3252a70 'char_array<4UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x563ee3252950 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 4
|           |   `-SubstNonTypeTemplateParmExpr 0x563ee3252930 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x563ee3252910 <col:24> 'unsigned long' 4
|           `-RecordType 0x563ee3252a50 'char_array<4>'
|             `-ClassTemplateSpecialization 0x563ee3252970 'char_array'
|-CXXMethodDecl 0x563ee3260458 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<4> >::type *) const' inline
| `-ParmVarDecl 0x563ee3260368 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXConstructorDecl 0x563ee3260548 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x563ee3260628 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x563ee3260628
|-CXXMethodDecl 0x563ee32608f8 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<4> > &)'
| `-ParmVarDecl 0x563ee3260800 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<4> > &'
|-CXXMethodDecl 0x563ee3260b38 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x563ee32609b0 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x563ee3260a28 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x563ee3260d08 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x563ee3260bf8 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x563ee3260c70 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x563ee3260e68 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<4> >::iterator ()'
|-CXXMethodDecl 0x563ee3260f38 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<4> >::iterator ()'
|-CXXMethodDecl 0x563ee3261188 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<4> >::iterator (vector_memory<sized_array_memory<4> >::iterator, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x563ee3260ff8 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<4> >::iterator':'vector_memory<sized_array_memory<4> >::type *'
| `-ParmVarDecl 0x563ee3261070 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x563ee32613e8 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<4> >::iterator (vector_memory<sized_array_memory<4> >::iterator, vector_memory<sized_array_memory<4> >::iterator)'
| |-ParmVarDecl 0x563ee3261258 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<4> >::iterator':'vector_memory<sized_array_memory<4> >::type *'
| `-ParmVarDecl 0x563ee32612d0 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<4> >::iterator':'vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x563ee32615a8 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<4> >::type *)' inline
| `-ParmVarDecl 0x563ee32614b8 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x563ee3261768 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<4> >::type *)' inline
| `-ParmVarDecl 0x563ee3261670 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x563ee3261820 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x563ee32618d0 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x563ee3261b08 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x563ee3261980 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x563ee32619f8 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x563ee3261da8 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<4> > &)'
| `-ParmVarDecl 0x563ee3261cb0 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<4> > &'
|-FieldDecl 0x563ee3261e70 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<4> >::type *'
|-FieldDecl 0x563ee3261ec0 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x563ee3261f10 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.3 = type { %struct.char_array.4*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.3 = type { %struct.char_array.4*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x563ee32b46b0 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'unsigned int'
|-CXXRecordDecl 0x563ee32b48b8 prev 0x563ee32b46b0 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x563ee32b5970 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<unsigned int>::type':'sized_array_memory<4>'
| `-ElaboratedType 0x563ee32b5920 'typename array_memory<unsigned int>::type' sugar
|   `-TypedefType 0x563ee32b5900 'conditional<true, sized_array_memory<4>, typed_array_memory<unsigned int> >::type' sugar
|     |-Typedef 0x563ee32b57b0 'type'
|     `-SubstTemplateTypeParmType 0x563ee3252070 'sized_array_memory<4>' sugar
|       |-TemplateTypeParmType 0x563ee2e5b0f0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563ee2e5b098 'T'
|       `-RecordType 0x563ee3251bc0 'sized_array_memory<4>'
|         `-ClassTemplateSpecialization 0x563ee3251ad8 'sized_array_memory'
|-FieldDecl 0x563ee32b5a70 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<unsigned int>::array_memory_type>':'vector_memory<sized_array_memory<4> >' mutable
|-AccessSpecDecl 0x563ee32b5ac0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x563ee32b5af8 <line:118:5, col:15> col:15 value_type 'unsigned int':'unsigned int'
| `-SubstTemplateTypeParmType 0x563ee32b4950 'unsigned int' sugar
|   |-TemplateTypeParmType 0x563ee2e92de0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x563ee2e92d88 'T'
|   `-BuiltinType 0x563ee2b90410 'unsigned int'
|-TypedefDecl 0x563ee32b5b88 <line:119:5, col:16> col:16 reference 'unsigned int &'
| `-LValueReferenceType 0x563ee32b5b50 'unsigned int &'
|   `-SubstTemplateTypeParmType 0x563ee32b4950 'unsigned int' sugar
|     |-TemplateTypeParmType 0x563ee2e92de0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x563ee2e92d88 'T'
|     `-BuiltinType 0x563ee2b90410 'unsigned int'
|-TypedefDecl 0x563ee32b5c48 <line:120:5, col:22> col:22 const_reference 'const unsigned int &'
| `-LValueReferenceType 0x563ee32b5c10 'const unsigned int &'
|   `-QualType 0x563ee32b4951 'const unsigned int' const
|     `-SubstTemplateTypeParmType 0x563ee32b4950 'unsigned int' sugar
|       |-TemplateTypeParmType 0x563ee2e92de0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563ee2e92d88 'T'
|       `-BuiltinType 0x563ee2b90410 'unsigned int'
|-TypedefDecl 0x563ee32b5cd8 <line:121:5, col:16> col:16 pointer 'unsigned int *'
| `-PointerType 0x563ee32b5ca0 'unsigned int *'
|   `-SubstTemplateTypeParmType 0x563ee32b4950 'unsigned int' sugar
|     |-TemplateTypeParmType 0x563ee2e92de0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x563ee2e92d88 'T'
|     `-BuiltinType 0x563ee2b90410 'unsigned int'
|-TypedefDecl 0x563ee32b5d68 <line:122:5, col:22> col:22 const_pointer 'const unsigned int *'
| `-PointerType 0x563ee32b5d30 'const unsigned int *'
|   `-QualType 0x563ee32b4951 'const unsigned int' const
|     `-SubstTemplateTypeParmType 0x563ee32b4950 'unsigned int' sugar
|       |-TemplateTypeParmType 0x563ee2e92de0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563ee2e92d88 'T'
|       `-BuiltinType 0x563ee2b90410 'unsigned int'
|-TypedefDecl 0x563ee32b6950 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<unsigned int>::type':'unsigned int'
| `-ElaboratedType 0x563ee32b6900 'typename fast_argument<unsigned int>::type' sugar
|   `-TypedefType 0x563ee32b68e0 'fast_argument<unsigned int, false>::type' sugar
|     |-Typedef 0x563ee32b6870 'type'
|     `-SubstTemplateTypeParmType 0x563ee32b6630 'unsigned int' sugar
|       |-TemplateTypeParmType 0x563ee2e65ef0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563ee2e65ea0 'T'
|       `-BuiltinType 0x563ee2b90410 'unsigned int'
|-TypedefDecl 0x563ee32b69b8 <line:126:5, col:22> col:22 const_access_type 'const unsigned int &'
| `-LValueReferenceType 0x563ee32b5c10 'const unsigned int &'
|   `-QualType 0x563ee32b4951 'const unsigned int' const
|     `-SubstTemplateTypeParmType 0x563ee32b4950 'unsigned int' sugar
|       |-TemplateTypeParmType 0x563ee2e92de0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563ee2e92d88 'T'
|       `-BuiltinType 0x563ee2b90410 'unsigned int'
|-TypedefDecl 0x563ee32b6a10 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x563ee2b90370 'int'
|-TypedefDecl 0x563ee32b6a78 <line:130:5, col:16> col:16 iterator 'unsigned int *'
| `-PointerType 0x563ee32b5ca0 'unsigned int *'
|   `-SubstTemplateTypeParmType 0x563ee32b4950 'unsigned int' sugar
|     |-TemplateTypeParmType 0x563ee2e92de0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x563ee2e92d88 'T'
|     `-BuiltinType 0x563ee2b90410 'unsigned int'
|-TypedefDecl 0x563ee32b6ae0 <line:131:5, col:22> col:22 const_iterator 'const unsigned int *'
| `-PointerType 0x563ee32b5d30 'const unsigned int *'
|   `-QualType 0x563ee32b4951 'const unsigned int' const
|     `-SubstTemplateTypeParmType 0x563ee32b4950 'unsigned int' sugar
|       |-TemplateTypeParmType 0x563ee2e92de0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563ee2e92d88 'T'
|       `-BuiltinType 0x563ee2b90410 'unsigned int'
|-EnumDecl 0x563ee32b6b38 <line:134:5> col:5
| `-EnumConstantDecl 0x563ee32b6c30 <col:12, col:40> col:12 RESERVE_GROW 'Vector<unsigned int>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x563ee32b6c10 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x563ee2e94468 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x563ee2e94440 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x563ee2e94420 <col:40> 'int' 1
|-CXXConstructorDecl 0x563ee32b6cb8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x563ee32b6f08 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<unsigned int>::value_argument_type)' inline
| |-ParmVarDecl 0x563ee32b6d70 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x563ee32b6e10 <col:41, col:61> col:61 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXConstructorDecl 0x563ee32b71c8 <line:139:5, col:37> col:12 Vector 'void (const Vector<unsigned int> &)' inline
| `-ParmVarDecl 0x563ee32b70b0 <col:19, col:36> col:36 x 'const Vector<unsigned int> &'
|-CXXConstructorDecl 0x563ee32b7488 <line:141:5, col:32> col:12 Vector 'void (Vector<unsigned int> &&)' inline
| `-ParmVarDecl 0x563ee32b7370 <col:19, col:31> col:31 x 'Vector<unsigned int> &&'
|-CXXMethodDecl 0x563ee32b77d0 <line:144:5, col:51> col:23 operator= 'Vector<unsigned int> &(const Vector<unsigned int> &)' inline
| `-ParmVarDecl 0x563ee32b76b0 <col:33, col:50> col:50 x 'const Vector<unsigned int> &'
|-CXXMethodDecl 0x563ee32b7ae0 <line:146:5, col:46> col:23 operator= 'Vector<unsigned int> &(Vector<unsigned int> &&)' inline
| `-ParmVarDecl 0x563ee32b79c0 <col:33, col:45> col:45 x 'Vector<unsigned int> &&'
|-CXXMethodDecl 0x563ee32b7dd0 <line:148:5, col:70> col:23 assign 'Vector<unsigned int> &(Vector::size_type, Vector<unsigned int>::value_argument_type)' inline
| |-ParmVarDecl 0x563ee32b7c18 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x563ee32b7c90 <col:43, col:69> col:63 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXMethodDecl 0x563ee32b7ef8 <line:150:5, col:55> col:49 begin 'Vector<unsigned int>::iterator ()'
| |-NoInlineAttr 0x563ee32b7fd8 <col:20> Inherited
| `-OptimizeNoneAttr 0x563ee32b8030 <col:30> Inherited
|-CXXMethodDecl 0x563ee32b8078 <line:151:5, col:53> col:49 end 'Vector<unsigned int>::iterator ()'
| |-NoInlineAttr 0x563ee32b8128 <col:20> Inherited
| `-OptimizeNoneAttr 0x563ee32b8180 <col:30> Inherited
|-CXXMethodDecl 0x563ee32b8218 <line:152:5, col:63> col:55 begin 'Vector<unsigned int>::const_iterator () const'
| |-NoInlineAttr 0x563ee32b82c8 <col:20> Inherited
| `-OptimizeNoneAttr 0x563ee32b8320 <col:30> Inherited
|-CXXMethodDecl 0x563ee32b8368 <line:153:5, col:61> col:55 end 'Vector<unsigned int>::const_iterator () const'
| |-NoInlineAttr 0x563ee32b8418 <col:20> Inherited
| `-OptimizeNoneAttr 0x563ee32b8470 <col:30> Inherited
|-CXXMethodDecl 0x563ee32b84b8 <line:154:5, col:64> col:55 cbegin 'Vector<unsigned int>::const_iterator () const'
| |-NoInlineAttr 0x563ee32b8568 <col:20> Inherited
| `-OptimizeNoneAttr 0x563ee32b85c0 <col:30> Inherited
|-CXXMethodDecl 0x563ee32b8608 <line:155:5, col:62> col:55 cend 'Vector<unsigned int>::const_iterator () const'
| |-NoInlineAttr 0x563ee32b86b8 <col:20> Inherited
| `-OptimizeNoneAttr 0x563ee32b8710 <col:30> Inherited
|-CXXMethodDecl 0x563ee32b8738 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x563ee32b87e8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x563ee32b8898 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x563ee32b8a58 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<unsigned int>::value_argument_type)' inline
| |-ParmVarDecl 0x563ee32b8948 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x563ee32b89c0 <col:37, col:63> col:57 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXMethodDecl 0x563ee32b8ba8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x563ee32b8b18 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x563ee32b8d58 <line:163:5, col:65> col:43 operator[] 'unsigned int &(Vector::size_type)'
| |-ParmVarDecl 0x563ee32b8c60 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x563ee32b8e10 <col:20>
| `-OptimizeNoneAttr 0x563ee32b8e68 <col:30>
|-CXXMethodDecl 0x563ee32b8f88 <line:164:5, col:73> col:49 operator[] 'const unsigned int &(Vector::size_type) const'
| |-ParmVarDecl 0x563ee32b8e90 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x563ee32b9040 <col:20>
| `-OptimizeNoneAttr 0x563ee32b9098 <col:30>
|-CXXMethodDecl 0x563ee32b9150 <line:165:5, col:29> col:15 at 'unsigned int &(Vector::size_type)' inline
| `-ParmVarDecl 0x563ee32b90c0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x563ee32b9298 <line:166:5, col:37> col:21 at 'const unsigned int &(Vector::size_type) const' inline
| `-ParmVarDecl 0x563ee32b9208 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x563ee32b93c8 <line:167:5, col:21> col:15 front 'unsigned int &()' inline
|-CXXMethodDecl 0x563ee32b94f8 <line:168:5, col:29> col:21 front 'const unsigned int &() const' inline
|-CXXMethodDecl 0x563ee32b95c8 <line:169:5, col:20> col:15 back 'unsigned int &()' inline
|-CXXMethodDecl 0x563ee32b9698 <line:170:5, col:28> col:21 back 'const unsigned int &() const' inline
|-CXXMethodDecl 0x563ee32b97d8 <line:172:5, col:39> col:15 unchecked_at 'unsigned int &(Vector::size_type)' inline
| `-ParmVarDecl 0x563ee32b9748 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x563ee32b9920 <line:173:5, col:47> col:21 unchecked_at 'const unsigned int &(Vector::size_type) const' inline
| `-ParmVarDecl 0x563ee32b9890 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x563ee32b9a68 <line:174:5, col:59> col:15 at_u 'unsigned int &(Vector::size_type)' inline
| |-ParmVarDecl 0x563ee32b99d8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x563ee32b9b20 <col:48> Inherited "" ""
|-CXXMethodDecl 0x563ee32b9c20 <line:175:5, col:71> col:21 at_u 'const unsigned int &(Vector::size_type) const' inline
| |-ParmVarDecl 0x563ee32b9b90 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x563ee32b9cd8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x563ee32b9d98 <line:177:5, col:20> col:15 data 'unsigned int *()' inline
|-CXXMethodDecl 0x563ee32b9e98 <line:178:5, col:28> col:21 data 'const unsigned int *() const' inline
|-CXXMethodDecl 0x563ee32ba018 <line:180:5, col:48> col:17 push_back 'void (Vector<unsigned int>::value_argument_type)' inline
| `-ParmVarDecl 0x563ee32b9f58 <col:27, col:47> col:47 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-FunctionTemplateDecl 0x563ee32ba7d8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x563ee32ba0d0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<unsigned int>':'fast_argument<unsigned int, false>'
| `-CXXMethodDecl 0x563ee32ba738 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (unsigned int &&)' inline
|   `-ParmVarDecl 0x563ee32ba638 <col:58, col:62> col:62 v 'unsigned int &&'
|-CXXMethodDecl 0x563ee32ba8b8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x563ee32baa08 <line:186:5, col:49> col:17 push_front 'void (Vector<unsigned int>::value_argument_type)' inline
| `-ParmVarDecl 0x563ee32ba978 <col:28, col:48> col:48 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXMethodDecl 0x563ee32baac0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x563ee32bad08 <line:189:5, col:62> col:21 insert 'Vector<unsigned int>::iterator (Vector<unsigned int>::iterator, Vector<unsigned int>::value_argument_type)' inline
| |-ParmVarDecl 0x563ee32bab80 <col:28, col:37> col:37 it 'Vector<unsigned int>::iterator':'unsigned int *'
| `-ParmVarDecl 0x563ee32babf8 <col:41, col:61> col:61 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXMethodDecl 0x563ee32baec8 <line:190:5, col:38> col:21 erase 'Vector<unsigned int>::iterator (Vector<unsigned int>::iterator)' inline
| `-ParmVarDecl 0x563ee32badd8 <col:27, col:36> col:36 it 'Vector<unsigned int>::iterator':'unsigned int *'
|-CXXMethodDecl 0x563ee32bb118 <line:191:5, col:49> col:21 erase 'Vector<unsigned int>::iterator (Vector<unsigned int>::iterator, Vector<unsigned int>::iterator)' inline
| |-ParmVarDecl 0x563ee32baf90 <col:27, col:36> col:36 a 'Vector<unsigned int>::iterator':'unsigned int *'
| `-ParmVarDecl 0x563ee32bb008 <col:39, col:48> col:48 b 'Vector<unsigned int>::iterator':'unsigned int *'
|-CXXMethodDecl 0x563ee32bb1d8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x563ee32bb438 <line:195:5, col:34> col:17 swap 'void (Vector<unsigned int> &)' inline
| `-ParmVarDecl 0x563ee32bb340 <col:22, col:33> col:33 x 'Vector<unsigned int> &'
`-CXXDestructorDecl 0x563ee32bb508 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x563ee32bb508

Layout: <CGRecordLayout
  LLVMType:%class.Vector.2 = type { %class.vector_memory.3 }
  NonVirtualBaseLLVMType:%class.Vector.2 = type { %class.vector_memory.3 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x563ee32510b8 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'int'
|-CXXRecordDecl 0x563ee32512c8 prev 0x563ee32510b8 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x563ee3252410 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<int>::type':'sized_array_memory<4>'
| `-ElaboratedType 0x563ee32523c0 'typename array_memory<int>::type' sugar
|   `-TypedefType 0x563ee32523a0 'conditional<true, sized_array_memory<4>, typed_array_memory<int> >::type' sugar
|     |-Typedef 0x563ee3252250 'type'
|     `-SubstTemplateTypeParmType 0x563ee3252070 'sized_array_memory<4>' sugar
|       |-TemplateTypeParmType 0x563ee2e5b0f0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563ee2e5b098 'T'
|       `-RecordType 0x563ee3251bc0 'sized_array_memory<4>'
|         `-ClassTemplateSpecialization 0x563ee3251ad8 'sized_array_memory'
|-FieldDecl 0x563ee3261f60 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<int>::array_memory_type>':'vector_memory<sized_array_memory<4> >' mutable
|-AccessSpecDecl 0x563ee3261fb0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x563ee3261fe8 <line:118:5, col:15> col:15 value_type 'int':'int'
| `-SubstTemplateTypeParmType 0x563ee3251360 'int' sugar
|   |-TemplateTypeParmType 0x563ee2e92de0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x563ee2e92d88 'T'
|   `-BuiltinType 0x563ee2b90370 'int'
|-TypedefDecl 0x563ee3262078 <line:119:5, col:16> col:16 reference 'int &'
| `-LValueReferenceType 0x563ee3262040 'int &'
|   `-SubstTemplateTypeParmType 0x563ee3251360 'int' sugar
|     |-TemplateTypeParmType 0x563ee2e92de0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x563ee2e92d88 'T'
|     `-BuiltinType 0x563ee2b90370 'int'
|-TypedefDecl 0x563ee3262138 <line:120:5, col:22> col:22 const_reference 'const int &'
| `-LValueReferenceType 0x563ee3262100 'const int &'
|   `-QualType 0x563ee3251361 'const int' const
|     `-SubstTemplateTypeParmType 0x563ee3251360 'int' sugar
|       |-TemplateTypeParmType 0x563ee2e92de0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563ee2e92d88 'T'
|       `-BuiltinType 0x563ee2b90370 'int'
|-TypedefDecl 0x563ee32621c8 <line:121:5, col:16> col:16 pointer 'int *'
| `-PointerType 0x563ee3262190 'int *'
|   `-SubstTemplateTypeParmType 0x563ee3251360 'int' sugar
|     |-TemplateTypeParmType 0x563ee2e92de0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x563ee2e92d88 'T'
|     `-BuiltinType 0x563ee2b90370 'int'
|-TypedefDecl 0x563ee3262258 <line:122:5, col:22> col:22 const_pointer 'const int *'
| `-PointerType 0x563ee3262220 'const int *'
|   `-QualType 0x563ee3251361 'const int' const
|     `-SubstTemplateTypeParmType 0x563ee3251360 'int' sugar
|       |-TemplateTypeParmType 0x563ee2e92de0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563ee2e92d88 'T'
|       `-BuiltinType 0x563ee2b90370 'int'
|-TypedefDecl 0x563ee3262e40 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<int>::type':'int'
| `-ElaboratedType 0x563ee3262df0 'typename fast_argument<int>::type' sugar
|   `-TypedefType 0x563ee3262dd0 'fast_argument<int, false>::type' sugar
|     |-Typedef 0x563ee3262d60 'type'
|     `-SubstTemplateTypeParmType 0x563ee3262b20 'int' sugar
|       |-TemplateTypeParmType 0x563ee2e65ef0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563ee2e65ea0 'T'
|       `-BuiltinType 0x563ee2b90370 'int'
|-TypedefDecl 0x563ee3262ea8 <line:126:5, col:22> col:22 const_access_type 'const int &'
| `-LValueReferenceType 0x563ee3262100 'const int &'
|   `-QualType 0x563ee3251361 'const int' const
|     `-SubstTemplateTypeParmType 0x563ee3251360 'int' sugar
|       |-TemplateTypeParmType 0x563ee2e92de0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563ee2e92d88 'T'
|       `-BuiltinType 0x563ee2b90370 'int'
|-TypedefDecl 0x563ee3262f00 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x563ee2b90370 'int'
|-TypedefDecl 0x563ee3262f68 <line:130:5, col:16> col:16 iterator 'int *'
| `-PointerType 0x563ee3262190 'int *'
|   `-SubstTemplateTypeParmType 0x563ee3251360 'int' sugar
|     |-TemplateTypeParmType 0x563ee2e92de0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x563ee2e92d88 'T'
|     `-BuiltinType 0x563ee2b90370 'int'
|-TypedefDecl 0x563ee3262fd0 <line:131:5, col:22> col:22 const_iterator 'const int *'
| `-PointerType 0x563ee3262220 'const int *'
|   `-QualType 0x563ee3251361 'const int' const
|     `-SubstTemplateTypeParmType 0x563ee3251360 'int' sugar
|       |-TemplateTypeParmType 0x563ee2e92de0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563ee2e92d88 'T'
|       `-BuiltinType 0x563ee2b90370 'int'
|-EnumDecl 0x563ee3263028 <line:134:5> col:5
| `-EnumConstantDecl 0x563ee3263120 <col:12, col:40> col:12 RESERVE_GROW 'Vector<int>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x563ee3263100 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x563ee2e94468 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x563ee2e94440 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x563ee2e94420 <col:40> 'int' 1
|-CXXConstructorDecl 0x563ee32631a8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x563ee32633f8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x563ee3263260 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x563ee3263300 <col:41, col:61> col:61 v 'Vector<int>::value_argument_type':'int'
|-CXXConstructorDecl 0x563ee32636b8 <line:139:5, col:37> col:12 Vector 'void (const Vector<int> &)' inline
| `-ParmVarDecl 0x563ee32635a0 <col:19, col:36> col:36 x 'const Vector<int> &'
|-CXXConstructorDecl 0x563ee3263978 <line:141:5, col:32> col:12 Vector 'void (Vector<int> &&)' inline
| `-ParmVarDecl 0x563ee3263860 <col:19, col:31> col:31 x 'Vector<int> &&'
|-CXXMethodDecl 0x563ee3263cc0 <line:144:5, col:51> col:23 operator= 'Vector<int> &(const Vector<int> &)' inline
| `-ParmVarDecl 0x563ee3263ba0 <col:33, col:50> col:50 x 'const Vector<int> &'
|-CXXMethodDecl 0x563ee3263fd0 <line:146:5, col:46> col:23 operator= 'Vector<int> &(Vector<int> &&)' inline
| `-ParmVarDecl 0x563ee3263eb0 <col:33, col:45> col:45 x 'Vector<int> &&'
|-CXXMethodDecl 0x563ee32642c0 <line:148:5, col:70> col:23 assign 'Vector<int> &(Vector::size_type, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x563ee3264108 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x563ee3264180 <col:43, col:69> col:63 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x563ee32643e8 <line:150:5, col:55> col:49 begin 'Vector<int>::iterator ()'
| |-NoInlineAttr 0x563ee32644c8 <col:20> Inherited
| `-OptimizeNoneAttr 0x563ee3264520 <col:30> Inherited
|-CXXMethodDecl 0x563ee3264568 <line:151:5, col:53> col:49 end 'Vector<int>::iterator ()'
| |-NoInlineAttr 0x563ee3264618 <col:20> Inherited
| `-OptimizeNoneAttr 0x563ee3264670 <col:30> Inherited
|-CXXMethodDecl 0x563ee3264738 <line:152:5, col:63> col:55 begin 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x563ee32647e8 <col:20> Inherited
| `-OptimizeNoneAttr 0x563ee3264840 <col:30> Inherited
|-CXXMethodDecl 0x563ee3264888 <line:153:5, col:61> col:55 end 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x563ee3264938 <col:20> Inherited
| `-OptimizeNoneAttr 0x563ee3264990 <col:30> Inherited
|-CXXMethodDecl 0x563ee32649d8 <line:154:5, col:64> col:55 cbegin 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x563ee3264a88 <col:20> Inherited
| `-OptimizeNoneAttr 0x563ee3264ae0 <col:30> Inherited
|-CXXMethodDecl 0x563ee3264b28 <line:155:5, col:62> col:55 cend 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x563ee3264bd8 <col:20> Inherited
| `-OptimizeNoneAttr 0x563ee3264c30 <col:30> Inherited
|-CXXMethodDecl 0x563ee3264c58 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x563ee3264d08 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x563ee3264db8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x563ee3264f78 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x563ee3264e68 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x563ee3264ee0 <col:37, col:63> col:57 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x563ee32650c8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x563ee3265038 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x563ee3265278 <line:163:5, col:65> col:43 used operator[] 'int &(Vector::size_type)'
| |-ParmVarDecl 0x563ee3265180 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x563ee3265330 <col:20>
| `-OptimizeNoneAttr 0x563ee3265388 <col:30>
|-CXXMethodDecl 0x563ee32654a8 <line:164:5, col:73> col:49 operator[] 'const int &(Vector::size_type) const'
| |-ParmVarDecl 0x563ee32653b0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x563ee3265560 <col:20>
| `-OptimizeNoneAttr 0x563ee32655b8 <col:30>
|-CXXMethodDecl 0x563ee3265670 <line:165:5, col:29> col:15 at 'int &(Vector::size_type)' inline
| `-ParmVarDecl 0x563ee32655e0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x563ee32657b8 <line:166:5, col:37> col:21 at 'const int &(Vector::size_type) const' inline
| `-ParmVarDecl 0x563ee3265728 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x563ee32658e8 <line:167:5, col:21> col:15 front 'int &()' inline
|-CXXMethodDecl 0x563ee3265a18 <line:168:5, col:29> col:21 front 'const int &() const' inline
|-CXXMethodDecl 0x563ee3265ae8 <line:169:5, col:20> col:15 back 'int &()' inline
|-CXXMethodDecl 0x563ee3265bb8 <line:170:5, col:28> col:21 used back 'const int &() const' inline
|-CXXMethodDecl 0x563ee3265cf8 <line:172:5, col:39> col:15 unchecked_at 'int &(Vector::size_type)' inline
| `-ParmVarDecl 0x563ee3265c68 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x563ee3265e40 <line:173:5, col:47> col:21 unchecked_at 'const int &(Vector::size_type) const' inline
| `-ParmVarDecl 0x563ee3265db0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x563ee3265f88 <line:174:5, col:59> col:15 at_u 'int &(Vector::size_type)' inline
| |-ParmVarDecl 0x563ee3265ef8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x563ee3266040 <col:48> Inherited "" ""
|-CXXMethodDecl 0x563ee3266140 <line:175:5, col:71> col:21 at_u 'const int &(Vector::size_type) const' inline
| |-ParmVarDecl 0x563ee32660b0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x563ee32661f8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x563ee32662b8 <line:177:5, col:20> col:15 data 'int *()' inline
|-CXXMethodDecl 0x563ee32663b8 <line:178:5, col:28> col:21 data 'const int *() const' inline
|-CXXMethodDecl 0x563ee3266538 <line:180:5, col:48> col:17 push_back 'void (Vector<int>::value_argument_type)' inline
| `-ParmVarDecl 0x563ee3266478 <col:27, col:47> col:47 v 'Vector<int>::value_argument_type':'int'
|-FunctionTemplateDecl 0x563ee3266cf8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x563ee32665f0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<int>':'fast_argument<int, false>'
| `-CXXMethodDecl 0x563ee3266c58 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (int &&)' inline
|   `-ParmVarDecl 0x563ee3266b58 <col:58, col:62> col:62 v 'int &&'
|-CXXMethodDecl 0x563ee3266dd8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x563ee3266f28 <line:186:5, col:49> col:17 push_front 'void (Vector<int>::value_argument_type)' inline
| `-ParmVarDecl 0x563ee3266e98 <col:28, col:48> col:48 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x563ee3266fe0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x563ee3267228 <line:189:5, col:62> col:21 insert 'Vector<int>::iterator (Vector<int>::iterator, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x563ee32670a0 <col:28, col:37> col:37 it 'Vector<int>::iterator':'int *'
| `-ParmVarDecl 0x563ee3267118 <col:41, col:61> col:61 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x563ee32673e8 <line:190:5, col:38> col:21 erase 'Vector<int>::iterator (Vector<int>::iterator)' inline
| `-ParmVarDecl 0x563ee32672f8 <col:27, col:36> col:36 it 'Vector<int>::iterator':'int *'
|-CXXMethodDecl 0x563ee3267638 <line:191:5, col:49> col:21 erase 'Vector<int>::iterator (Vector<int>::iterator, Vector<int>::iterator)' inline
| |-ParmVarDecl 0x563ee32674b0 <col:27, col:36> col:36 a 'Vector<int>::iterator':'int *'
| `-ParmVarDecl 0x563ee3267528 <col:39, col:48> col:48 b 'Vector<int>::iterator':'int *'
|-CXXMethodDecl 0x563ee32676f8 <line:193:5, col:23> col:17 used clear 'void ()' inline
|-CXXMethodDecl 0x563ee3267958 <line:195:5, col:34> col:17 swap 'void (Vector<int> &)' inline
| `-ParmVarDecl 0x563ee3267860 <col:22, col:33> col:33 x 'Vector<int> &'
`-CXXDestructorDecl 0x563ee3267a28 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x563ee3267a28

Layout: <CGRecordLayout
  LLVMType:%class.Vector.5 = type { %class.vector_memory.3 }
  NonVirtualBaseLLVMType:%class.Vector.5 = type { %class.vector_memory.3 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563ee32bb750 <../dummy_inc/click/router.hh:247:5, line:250:5> line:247:12 referenced struct element_landmark_t definition
|-DefinitionData aggregate standard_layout has_mutable_fields
| |-DefaultConstructor exists non_trivial needs_implicit
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x563ee32bb868 <col:5, col:12> col:12 implicit struct element_landmark_t
|-FieldDecl 0x563ee32bb908 <line:248:9, col:18> col:18 first_landmarkid 'uint32_t':'unsigned int'
|-FieldDecl 0x563ee32bb968 <line:249:9, col:16> col:16 filename 'String'
|-CXXConstructorDecl 0x563ee32bba00 <line:247:12> col:12 implicit element_landmark_t 'void (const Router::element_landmark_t &)' inline default noexcept-unevaluated 0x563ee32bba00
| `-ParmVarDecl 0x563ee32bbb18 <col:12> col:12 'const Router::element_landmark_t &'
|-CXXConstructorDecl 0x563ee32bbbb8 <col:12> col:12 implicit element_landmark_t 'void (Router::element_landmark_t &&)' inline default noexcept-unevaluated 0x563ee32bbbb8
| `-ParmVarDecl 0x563ee32bbcc8 <col:12> col:12 'Router::element_landmark_t &&'
|-CXXMethodDecl 0x563ee32bbd68 <col:12> col:12 implicit operator= 'Router::element_landmark_t &(const Router::element_landmark_t &)' inline default noexcept-unevaluated 0x563ee32bbd68
| `-ParmVarDecl 0x563ee32bbe78 <col:12> col:12 'const Router::element_landmark_t &'
|-CXXMethodDecl 0x563ee32bbee8 <col:12> col:12 implicit operator= 'Router::element_landmark_t &(Router::element_landmark_t &&)' inline default noexcept-unevaluated 0x563ee32bbee8
| `-ParmVarDecl 0x563ee32bbff8 <col:12> col:12 'Router::element_landmark_t &&'
`-CXXDestructorDecl 0x563ee32bc080 <col:12> col:12 implicit ~element_landmark_t 'void ()' inline default noexcept-unevaluated 0x563ee32bc080

Layout: <CGRecordLayout
  LLVMType:%"struct.Router::element_landmark_t" = type { i32, %class.String }
  NonVirtualBaseLLVMType:%"struct.Router::element_landmark_t" = type { i32, %class.String }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x563ee32be650 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'typed_array_memory<Router::element_landmark_t>'
|-CXXRecordDecl 0x563ee32be828 prev 0x563ee32be650 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x563ee32be8b8 <col:46, col:52> col:46 public
|-TypedefDecl 0x563ee32be8e0 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x563ee2b90370 'int'
|-TypedefDecl 0x563ee32c02a0 <line:13:5, col:31> col:31 type 'typename typed_array_memory<element_landmark_t>::type':'Router::element_landmark_t'
| `-ElaboratedType 0x563ee32c0250 'typename typed_array_memory<element_landmark_t>::type' sugar
|   `-TypedefType 0x563ee32c0230 'typed_array_memory<Router::element_landmark_t>::type' sugar
|     |-Typedef 0x563ee32beaf8 'type'
|     `-SubstTemplateTypeParmType 0x563ee32beac0 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x563ee2e85ac0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563ee2e85a70 'T'
|       `-RecordType 0x563ee32bb7e0 'Router::element_landmark_t'
|         `-CXXRecord 0x563ee32bb750 'element_landmark_t'
|-TypedefDecl 0x563ee32c0358 <line:14:5, col:19> col:19 iterator 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
| `-PointerType 0x563ee32c0320 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|   `-TypedefType 0x563ee32c0300 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type' sugar
|     |-Typedef 0x563ee32c02a0 'type'
|     `-ElaboratedType 0x563ee32c0250 'typename typed_array_memory<element_landmark_t>::type' sugar
|       `-TypedefType 0x563ee32c0230 'typed_array_memory<Router::element_landmark_t>::type' sugar
|         |-Typedef 0x563ee32beaf8 'type'
|         `-SubstTemplateTypeParmType 0x563ee32beac0 'Router::element_landmark_t' sugar
|           |-TemplateTypeParmType 0x563ee2e85ac0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x563ee2e85a70 'T'
|           `-RecordType 0x563ee32bb7e0 'Router::element_landmark_t'
|             `-CXXRecord 0x563ee32bb750 'element_landmark_t'
|-CXXMethodDecl 0x563ee32c04d8 <line:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *) const' inline
| `-ParmVarDecl 0x563ee32c03e8 <col:36, col:48> col:48 argp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXConstructorDecl 0x563ee32c05c8 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x563ee32c06a8 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x563ee32c06a8
|-CXXMethodDecl 0x563ee32c0978 <line:25:5, col:43> col:10 assign 'void (const vector_memory<typed_array_memory<Router::element_landmark_t> > &)'
| `-ParmVarDecl 0x563ee32c0880 <col:17, col:42> col:42 x 'const vector_memory<typed_array_memory<Router::element_landmark_t> > &'
|-CXXMethodDecl 0x563ee32c0bb8 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)'
| |-ParmVarDecl 0x563ee32c0a30 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x563ee32c0aa8 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x563ee32c0d88 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)'
| |-ParmVarDecl 0x563ee32c0c78 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x563ee32c0cf0 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x563ee32c0ee8 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator ()'
|-CXXMethodDecl 0x563ee32c0fb8 <line:31:5, line:33:5> line:31:14 end 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator ()'
|-CXXMethodDecl 0x563ee32c1208 <line:34:5, col:48> col:14 insert 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator (vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator, const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)'
| |-ParmVarDecl 0x563ee32c1078 <col:21, col:30> col:30 it 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator':'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
| `-ParmVarDecl 0x563ee32c10f0 <col:34, col:46> col:46 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x563ee32c1468 <line:35:5, col:42> col:14 erase 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator (vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator, vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator)'
| |-ParmVarDecl 0x563ee32c12d8 <col:20, col:29> col:29 a 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator':'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
| `-ParmVarDecl 0x563ee32c1350 <col:32, col:41> col:41 b 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator':'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x563ee32c1628 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)' inline
| `-ParmVarDecl 0x563ee32c1538 <col:27, col:39> col:39 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x563ee32c17e8 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)' inline
| `-ParmVarDecl 0x563ee32c16f0 <col:37, col:43> col:43 vp 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x563ee32c18a0 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x563ee32c1950 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x563ee32c1b88 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)'
| |-ParmVarDecl 0x563ee32c1a00 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x563ee32c1a78 <col:45, col:57> col:57 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x563ee32c1e28 <line:66:5, col:35> col:10 swap 'void (vector_memory<typed_array_memory<Router::element_landmark_t> > &)'
| `-ParmVarDecl 0x563ee32c1d30 <col:15, col:34> col:34 x 'vector_memory<typed_array_memory<Router::element_landmark_t> > &'
|-FieldDecl 0x563ee32c1ef0 <line:68:5, col:11> col:11 l_ 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-FieldDecl 0x563ee32c1f40 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x563ee32c1f90 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.7 = type { %"struct.Router::element_landmark_t"*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.7 = type { %"struct.Router::element_landmark_t"*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x563ee32bc170 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Router::element_landmark_t'
|-CXXRecordDecl 0x563ee32bc378 prev 0x563ee32bc170 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x563ee32be5c0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<element_landmark_t>::type':'typed_array_memory<Router::element_landmark_t>'
| `-ElaboratedType 0x563ee32be570 'typename array_memory<element_landmark_t>::type' sugar
|   `-TypedefType 0x563ee32be550 'conditional<false, sized_array_memory<32>, typed_array_memory<Router::element_landmark_t> >::type' sugar
|     |-Typedef 0x563ee32be400 'type'
|     `-SubstTemplateTypeParmType 0x563ee32be290 'typed_array_memory<Router::element_landmark_t>' sugar
|       |-TemplateTypeParmType 0x563ee2e5b870 'F' dependent depth 0 index 1
|       | `-TemplateTypeParm 0x563ee2e5b818 'F'
|       `-RecordType 0x563ee32bdef0 'typed_array_memory<Router::element_landmark_t>'
|         `-ClassTemplateSpecialization 0x563ee32bde10 'typed_array_memory'
|-FieldDecl 0x563ee32c1fe0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Router::element_landmark_t>::array_memory_type>':'vector_memory<typed_array_memory<Router::element_landmark_t> >' mutable
|-AccessSpecDecl 0x563ee32c2030 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x563ee32c2068 <line:118:5, col:15> col:15 value_type 'Router::element_landmark_t':'Router::element_landmark_t'
| `-SubstTemplateTypeParmType 0x563ee32bc410 'Router::element_landmark_t' sugar
|   |-TemplateTypeParmType 0x563ee2e92de0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x563ee2e92d88 'T'
|   `-RecordType 0x563ee32bb7e0 'Router::element_landmark_t'
|     `-CXXRecord 0x563ee32bb750 'element_landmark_t'
|-TypedefDecl 0x563ee32c20f8 <line:119:5, col:16> col:16 reference 'Router::element_landmark_t &'
| `-LValueReferenceType 0x563ee32c20c0 'Router::element_landmark_t &'
|   `-SubstTemplateTypeParmType 0x563ee32bc410 'Router::element_landmark_t' sugar
|     |-TemplateTypeParmType 0x563ee2e92de0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x563ee2e92d88 'T'
|     `-RecordType 0x563ee32bb7e0 'Router::element_landmark_t'
|       `-CXXRecord 0x563ee32bb750 'element_landmark_t'
|-TypedefDecl 0x563ee32c2188 <line:120:5, col:22> col:22 const_reference 'const Router::element_landmark_t &'
| `-LValueReferenceType 0x563ee32c2150 'const Router::element_landmark_t &'
|   `-QualType 0x563ee32bc411 'const Router::element_landmark_t' const
|     `-SubstTemplateTypeParmType 0x563ee32bc410 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x563ee2e92de0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563ee2e92d88 'T'
|       `-RecordType 0x563ee32bb7e0 'Router::element_landmark_t'
|         `-CXXRecord 0x563ee32bb750 'element_landmark_t'
|-TypedefDecl 0x563ee32c2218 <line:121:5, col:16> col:16 pointer 'Router::element_landmark_t *'
| `-PointerType 0x563ee32c21e0 'Router::element_landmark_t *'
|   `-SubstTemplateTypeParmType 0x563ee32bc410 'Router::element_landmark_t' sugar
|     |-TemplateTypeParmType 0x563ee2e92de0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x563ee2e92d88 'T'
|     `-RecordType 0x563ee32bb7e0 'Router::element_landmark_t'
|       `-CXXRecord 0x563ee32bb750 'element_landmark_t'
|-TypedefDecl 0x563ee32c22a8 <line:122:5, col:22> col:22 const_pointer 'const Router::element_landmark_t *'
| `-PointerType 0x563ee32c2270 'const Router::element_landmark_t *'
|   `-QualType 0x563ee32bc411 'const Router::element_landmark_t' const
|     `-SubstTemplateTypeParmType 0x563ee32bc410 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x563ee2e92de0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563ee2e92d88 'T'
|       `-RecordType 0x563ee32bb7e0 'Router::element_landmark_t'
|         `-CXXRecord 0x563ee32bb750 'element_landmark_t'
|-TypedefDecl 0x563ee32c2f00 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<element_landmark_t>::type':'const Router::element_landmark_t &'
| `-ElaboratedType 0x563ee32c2eb0 'typename fast_argument<element_landmark_t>::type' sugar
|   `-TypedefType 0x563ee32c2e90 'fast_argument<Router::element_landmark_t, true>::type' sugar
|     |-Typedef 0x563ee32c2dc8 'type'
|     `-LValueReferenceType 0x563ee32c2d90 'const Router::element_landmark_t &'
|       `-QualType 0x563ee32c2b31 'const Router::element_landmark_t' const
|         `-SubstTemplateTypeParmType 0x563ee32c2b30 'Router::element_landmark_t' sugar
|           |-TemplateTypeParmType 0x563ee2e657c0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x563ee2e65768 'T'
|           `-RecordType 0x563ee32bb7e0 'Router::element_landmark_t'
|             `-CXXRecord 0x563ee32bb750 'element_landmark_t'
|-TypedefDecl 0x563ee32c2f68 <line:126:5, col:22> col:22 const_access_type 'const Router::element_landmark_t &'
| `-LValueReferenceType 0x563ee32c2150 'const Router::element_landmark_t &'
|   `-QualType 0x563ee32bc411 'const Router::element_landmark_t' const
|     `-SubstTemplateTypeParmType 0x563ee32bc410 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x563ee2e92de0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563ee2e92d88 'T'
|       `-RecordType 0x563ee32bb7e0 'Router::element_landmark_t'
|         `-CXXRecord 0x563ee32bb750 'element_landmark_t'
|-TypedefDecl 0x563ee32c2fc0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x563ee2b90370 'int'
|-TypedefDecl 0x563ee32c3028 <line:130:5, col:16> col:16 iterator 'Router::element_landmark_t *'
| `-PointerType 0x563ee32c21e0 'Router::element_landmark_t *'
|   `-SubstTemplateTypeParmType 0x563ee32bc410 'Router::element_landmark_t' sugar
|     |-TemplateTypeParmType 0x563ee2e92de0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x563ee2e92d88 'T'
|     `-RecordType 0x563ee32bb7e0 'Router::element_landmark_t'
|       `-CXXRecord 0x563ee32bb750 'element_landmark_t'
|-TypedefDecl 0x563ee32c3090 <line:131:5, col:22> col:22 const_iterator 'const Router::element_landmark_t *'
| `-PointerType 0x563ee32c2270 'const Router::element_landmark_t *'
|   `-QualType 0x563ee32bc411 'const Router::element_landmark_t' const
|     `-SubstTemplateTypeParmType 0x563ee32bc410 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x563ee2e92de0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563ee2e92d88 'T'
|       `-RecordType 0x563ee32bb7e0 'Router::element_landmark_t'
|         `-CXXRecord 0x563ee32bb750 'element_landmark_t'
|-EnumDecl 0x563ee32c30e8 <line:134:5> col:5
| `-EnumConstantDecl 0x563ee32c31e0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Router::element_landmark_t>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x563ee32c31c0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x563ee2e94468 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x563ee2e94440 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x563ee2e94420 <col:40> 'int' 1
|-CXXConstructorDecl 0x563ee32c3268 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x563ee32c34f8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Router::element_landmark_t>::value_argument_type)' inline
| |-ParmVarDecl 0x563ee32c3320 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x563ee32c33c0 <col:41, col:61> col:61 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXConstructorDecl 0x563ee32c37b8 <line:139:5, col:37> col:12 Vector 'void (const Vector<Router::element_landmark_t> &)' inline
| `-ParmVarDecl 0x563ee32c36a0 <col:19, col:36> col:36 x 'const Vector<Router::element_landmark_t> &'
|-CXXConstructorDecl 0x563ee32c3a78 <line:141:5, col:32> col:12 Vector 'void (Vector<Router::element_landmark_t> &&)' inline
| `-ParmVarDecl 0x563ee32c3960 <col:19, col:31> col:31 x 'Vector<Router::element_landmark_t> &&'
|-CXXMethodDecl 0x563ee32c3dc0 <line:144:5, col:51> col:23 operator= 'Vector<Router::element_landmark_t> &(const Vector<Router::element_landmark_t> &)' inline
| `-ParmVarDecl 0x563ee32c3ca0 <col:33, col:50> col:50 x 'const Vector<Router::element_landmark_t> &'
|-CXXMethodDecl 0x563ee32c40d0 <line:146:5, col:46> col:23 operator= 'Vector<Router::element_landmark_t> &(Vector<Router::element_landmark_t> &&)' inline
| `-ParmVarDecl 0x563ee32c3fb0 <col:33, col:45> col:45 x 'Vector<Router::element_landmark_t> &&'
|-CXXMethodDecl 0x563ee32c43c0 <line:148:5, col:70> col:23 assign 'Vector<Router::element_landmark_t> &(Vector::size_type, Vector<Router::element_landmark_t>::value_argument_type)' inline
| |-ParmVarDecl 0x563ee32c4208 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x563ee32c4280 <col:43, col:69> col:63 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXMethodDecl 0x563ee32c44e8 <line:150:5, col:55> col:49 begin 'Vector<Router::element_landmark_t>::iterator ()'
| |-NoInlineAttr 0x563ee32c45c8 <col:20> Inherited
| `-OptimizeNoneAttr 0x563ee32c4620 <col:30> Inherited
|-CXXMethodDecl 0x563ee32c4668 <line:151:5, col:53> col:49 end 'Vector<Router::element_landmark_t>::iterator ()'
| |-NoInlineAttr 0x563ee32c4718 <col:20> Inherited
| `-OptimizeNoneAttr 0x563ee32c4770 <col:30> Inherited
|-CXXMethodDecl 0x563ee32c4838 <line:152:5, col:63> col:55 begin 'Vector<Router::element_landmark_t>::const_iterator () const'
| |-NoInlineAttr 0x563ee32c48e8 <col:20> Inherited
| `-OptimizeNoneAttr 0x563ee32c4940 <col:30> Inherited
|-CXXMethodDecl 0x563ee32c4988 <line:153:5, col:61> col:55 end 'Vector<Router::element_landmark_t>::const_iterator () const'
| |-NoInlineAttr 0x563ee32c4a38 <col:20> Inherited
| `-OptimizeNoneAttr 0x563ee32c4a90 <col:30> Inherited
|-CXXMethodDecl 0x563ee32c4ad8 <line:154:5, col:64> col:55 cbegin 'Vector<Router::element_landmark_t>::const_iterator () const'
| |-NoInlineAttr 0x563ee32c4b88 <col:20> Inherited
| `-OptimizeNoneAttr 0x563ee32c4be0 <col:30> Inherited
|-CXXMethodDecl 0x563ee32c4c28 <line:155:5, col:62> col:55 cend 'Vector<Router::element_landmark_t>::const_iterator () const'
| |-NoInlineAttr 0x563ee32c4cd8 <col:20> Inherited
| `-OptimizeNoneAttr 0x563ee32c4d30 <col:30> Inherited
|-CXXMethodDecl 0x563ee32c4d58 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x563ee32c4e08 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x563ee32c4eb8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x563ee32c5078 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Router::element_landmark_t>::value_argument_type)' inline
| |-ParmVarDecl 0x563ee32c4f68 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x563ee32c4fe0 <col:37, col:63> col:57 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXMethodDecl 0x563ee32c51c8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x563ee32c5138 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x563ee32c5378 <line:163:5, col:65> col:43 operator[] 'Router::element_landmark_t &(Vector::size_type)'
| |-ParmVarDecl 0x563ee32c5280 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x563ee32c5430 <col:20>
| `-OptimizeNoneAttr 0x563ee32c5488 <col:30>
|-CXXMethodDecl 0x563ee32c55a8 <line:164:5, col:73> col:49 operator[] 'const Router::element_landmark_t &(Vector::size_type) const'
| |-ParmVarDecl 0x563ee32c54b0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x563ee32c5660 <col:20>
| `-OptimizeNoneAttr 0x563ee32c56b8 <col:30>
|-CXXMethodDecl 0x563ee32c5770 <line:165:5, col:29> col:15 at 'Router::element_landmark_t &(Vector::size_type)' inline
| `-ParmVarDecl 0x563ee32c56e0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x563ee32c58b8 <line:166:5, col:37> col:21 at 'const Router::element_landmark_t &(Vector::size_type) const' inline
| `-ParmVarDecl 0x563ee32c5828 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x563ee32c59e8 <line:167:5, col:21> col:15 front 'Router::element_landmark_t &()' inline
|-CXXMethodDecl 0x563ee32c5b18 <line:168:5, col:29> col:21 front 'const Router::element_landmark_t &() const' inline
|-CXXMethodDecl 0x563ee32c5be8 <line:169:5, col:20> col:15 back 'Router::element_landmark_t &()' inline
|-CXXMethodDecl 0x563ee32c62e0 <line:170:5, col:28> col:21 back 'const Router::element_landmark_t &() const' inline
|-CXXMethodDecl 0x563ee32c6420 <line:172:5, col:39> col:15 unchecked_at 'Router::element_landmark_t &(Vector::size_type)' inline
| `-ParmVarDecl 0x563ee32c6390 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x563ee32c6568 <line:173:5, col:47> col:21 unchecked_at 'const Router::element_landmark_t &(Vector::size_type) const' inline
| `-ParmVarDecl 0x563ee32c64d8 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x563ee32c66b0 <line:174:5, col:59> col:15 at_u 'Router::element_landmark_t &(Vector::size_type)' inline
| |-ParmVarDecl 0x563ee32c6620 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x563ee32c6768 <col:48> Inherited "" ""
|-CXXMethodDecl 0x563ee32c6868 <line:175:5, col:71> col:21 at_u 'const Router::element_landmark_t &(Vector::size_type) const' inline
| |-ParmVarDecl 0x563ee32c67d8 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x563ee32c6920 <col:60> Inherited "" ""
|-CXXMethodDecl 0x563ee32c69d8 <line:177:5, col:20> col:15 data 'Router::element_landmark_t *()' inline
|-CXXMethodDecl 0x563ee32c6ad8 <line:178:5, col:28> col:21 data 'const Router::element_landmark_t *() const' inline
|-CXXMethodDecl 0x563ee32c6c58 <line:180:5, col:48> col:17 push_back 'void (Vector<Router::element_landmark_t>::value_argument_type)' inline
| `-ParmVarDecl 0x563ee32c6b98 <col:27, col:47> col:47 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-FunctionTemplateDecl 0x563ee32c73e8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x563ee32c6d10 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Router::element_landmark_t>':'fast_argument<Router::element_landmark_t, true>'
| `-CXXMethodDecl 0x563ee32c7348 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Router::element_landmark_t &&)' inline
|   `-ParmVarDecl 0x563ee32c7248 <col:58, col:62> col:62 v 'Router::element_landmark_t &&'
|-CXXMethodDecl 0x563ee32c74c8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x563ee32c7618 <line:186:5, col:49> col:17 push_front 'void (Vector<Router::element_landmark_t>::value_argument_type)' inline
| `-ParmVarDecl 0x563ee32c7588 <col:28, col:48> col:48 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXMethodDecl 0x563ee32c76d0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x563ee32c7918 <line:189:5, col:62> col:21 insert 'Vector<Router::element_landmark_t>::iterator (Vector<Router::element_landmark_t>::iterator, Vector<Router::element_landmark_t>::value_argument_type)' inline
| |-ParmVarDecl 0x563ee32c7790 <col:28, col:37> col:37 it 'Vector<Router::element_landmark_t>::iterator':'Router::element_landmark_t *'
| `-ParmVarDecl 0x563ee32c7808 <col:41, col:61> col:61 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXMethodDecl 0x563ee32c7aa8 <line:190:5, col:38> col:21 erase 'Vector<Router::element_landmark_t>::iterator (Vector<Router::element_landmark_t>::iterator)' inline
| `-ParmVarDecl 0x563ee32c79e8 <col:27, col:36> col:36 it 'Vector<Router::element_landmark_t>::iterator':'Router::element_landmark_t *'
|-CXXMethodDecl 0x563ee32c7cb8 <line:191:5, col:49> col:21 erase 'Vector<Router::element_landmark_t>::iterator (Vector<Router::element_landmark_t>::iterator, Vector<Router::element_landmark_t>::iterator)' inline
| |-ParmVarDecl 0x563ee32c7b70 <col:27, col:36> col:36 a 'Vector<Router::element_landmark_t>::iterator':'Router::element_landmark_t *'
| `-ParmVarDecl 0x563ee32c7be8 <col:39, col:48> col:48 b 'Vector<Router::element_landmark_t>::iterator':'Router::element_landmark_t *'
|-CXXMethodDecl 0x563ee32c7d78 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x563ee32c7fd8 <line:195:5, col:34> col:17 swap 'void (Vector<Router::element_landmark_t> &)' inline
| `-ParmVarDecl 0x563ee32c7ee0 <col:22, col:33> col:33 x 'Vector<Router::element_landmark_t> &'
`-CXXDestructorDecl 0x563ee32c80a8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x563ee32c80a8

Layout: <CGRecordLayout
  LLVMType:%class.Vector.6 = type { %class.vector_memory.7 }
  NonVirtualBaseLLVMType:%class.Vector.6 = type { %class.vector_memory.7 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x563ee31714d0 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<16>'
|-CXXRecordDecl 0x563ee31716a8 prev 0x563ee31714d0 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x563ee3171738 <col:46, col:52> col:46 public
|-TypedefDecl 0x563ee3171760 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x563ee2b90370 'int'
|-TypedefDecl 0x563ee3173330 <line:13:5, col:31> col:31 type 'typename sized_array_memory<16>::type':'char_array<16>'
| `-ElaboratedType 0x563ee31732e0 'typename sized_array_memory<16>::type' sugar
|   `-TypedefType 0x563ee3171c10 'sized_array_memory<16>::type' sugar
|     |-Typedef 0x563ee3171b10 'type'
|     `-TemplateSpecializationType 0x563ee3171aa0 'char_array<16UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x563ee3171980 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 16
|       |   `-SubstNonTypeTemplateParmExpr 0x563ee3171960 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x563ee3171940 <col:24> 'unsigned long' 16
|       `-RecordType 0x563ee3171a80 'char_array<16>'
|         `-ClassTemplateSpecialization 0x563ee31719a0 'char_array'
|-TypedefDecl 0x563ee31733e8 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<16> >::type *'
| `-PointerType 0x563ee31733b0 'vector_memory<sized_array_memory<16> >::type *'
|   `-TypedefType 0x563ee3173390 'vector_memory<sized_array_memory<16> >::type' sugar
|     |-Typedef 0x563ee3173330 'type'
|     `-ElaboratedType 0x563ee31732e0 'typename sized_array_memory<16>::type' sugar
|       `-TypedefType 0x563ee3171c10 'sized_array_memory<16>::type' sugar
|         |-Typedef 0x563ee3171b10 'type'
|         `-TemplateSpecializationType 0x563ee3171aa0 'char_array<16UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x563ee3171980 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 16
|           |   `-SubstNonTypeTemplateParmExpr 0x563ee3171960 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x563ee3171940 <col:24> 'unsigned long' 16
|           `-RecordType 0x563ee3171a80 'char_array<16>'
|             `-ClassTemplateSpecialization 0x563ee31719a0 'char_array'
|-CXXMethodDecl 0x563ee3173568 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<16> >::type *) const' inline
| `-ParmVarDecl 0x563ee3173478 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXConstructorDecl 0x563ee3173658 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x563ee3173738 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x563ee3173738
|-CXXMethodDecl 0x563ee3173a08 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<16> > &)'
| `-ParmVarDecl 0x563ee3173910 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<16> > &'
|-CXXMethodDecl 0x563ee3173c48 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x563ee3173ac0 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x563ee3173b38 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x563ee3173e18 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x563ee3173d08 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x563ee3173d80 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x563ee3173f78 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<16> >::iterator ()'
|-CXXMethodDecl 0x563ee3174048 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<16> >::iterator ()'
|-CXXMethodDecl 0x563ee3174298 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<16> >::iterator (vector_memory<sized_array_memory<16> >::iterator, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x563ee3174108 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
| `-ParmVarDecl 0x563ee3174180 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x563ee31744f8 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<16> >::iterator (vector_memory<sized_array_memory<16> >::iterator, vector_memory<sized_array_memory<16> >::iterator)'
| |-ParmVarDecl 0x563ee3174368 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
| `-ParmVarDecl 0x563ee31743e0 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x563ee31746b8 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<16> >::type *)' inline
| `-ParmVarDecl 0x563ee31745c8 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x563ee3174878 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<16> >::type *)' inline
| `-ParmVarDecl 0x563ee3174780 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x563ee3174930 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x563ee31749e0 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x563ee3174c18 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x563ee3174a90 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x563ee3174b08 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x563ee3174eb8 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<16> > &)'
| `-ParmVarDecl 0x563ee3174dc0 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<16> > &'
|-FieldDecl 0x563ee3174f80 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<16> >::type *'
|-FieldDecl 0x563ee3174fd0 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x563ee3175020 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.9 = type { %struct.char_array.10*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.9 = type { %struct.char_array.10*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x563ee32c87c0 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Router::Connection'
|-CXXRecordDecl 0x563ee32c89c8 prev 0x563ee32c87c0 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x563ee32c9a90 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<Connection>::type':'sized_array_memory<16>'
| `-ElaboratedType 0x563ee32c9a40 'typename array_memory<Connection>::type' sugar
|   `-TypedefType 0x563ee32c9a20 'conditional<true, sized_array_memory<16>, typed_array_memory<Router::Connection> >::type' sugar
|     |-Typedef 0x563ee32c98d0 'type'
|     `-SubstTemplateTypeParmType 0x563ee31710a0 'sized_array_memory<16>' sugar
|       |-TemplateTypeParmType 0x563ee2e5b0f0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563ee2e5b098 'T'
|       `-RecordType 0x563ee3170bf0 'sized_array_memory<16>'
|         `-ClassTemplateSpecialization 0x563ee3170b08 'sized_array_memory'
|-FieldDecl 0x563ee32c9b90 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Router::Connection>::array_memory_type>':'vector_memory<sized_array_memory<16> >' mutable
|-AccessSpecDecl 0x563ee32c9be0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x563ee32c9c18 <line:118:5, col:15> col:15 value_type 'Router::Connection':'Router::Connection'
| `-SubstTemplateTypeParmType 0x563ee32c8a60 'Router::Connection' sugar
|   |-TemplateTypeParmType 0x563ee2e92de0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x563ee2e92d88 'T'
|   `-RecordType 0x563ee2fad870 'Router::Connection'
|     `-CXXRecord 0x563ee2fad7e0 'Connection'
|-TypedefDecl 0x563ee32c9cd8 <line:119:5, col:16> col:16 reference 'Router::Connection &'
| `-LValueReferenceType 0x563ee32c9ca0 'Router::Connection &'
|   `-SubstTemplateTypeParmType 0x563ee32c8a60 'Router::Connection' sugar
|     |-TemplateTypeParmType 0x563ee2e92de0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x563ee2e92d88 'T'
|     `-RecordType 0x563ee2fad870 'Router::Connection'
|       `-CXXRecord 0x563ee2fad7e0 'Connection'
|-TypedefDecl 0x563ee32c9d68 <line:120:5, col:22> col:22 const_reference 'const Router::Connection &'
| `-LValueReferenceType 0x563ee32c9d30 'const Router::Connection &'
|   `-QualType 0x563ee32c8a61 'const Router::Connection' const
|     `-SubstTemplateTypeParmType 0x563ee32c8a60 'Router::Connection' sugar
|       |-TemplateTypeParmType 0x563ee2e92de0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563ee2e92d88 'T'
|       `-RecordType 0x563ee2fad870 'Router::Connection'
|         `-CXXRecord 0x563ee2fad7e0 'Connection'
|-TypedefDecl 0x563ee32c9df8 <line:121:5, col:16> col:16 pointer 'Router::Connection *'
| `-PointerType 0x563ee32c9dc0 'Router::Connection *'
|   `-SubstTemplateTypeParmType 0x563ee32c8a60 'Router::Connection' sugar
|     |-TemplateTypeParmType 0x563ee2e92de0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x563ee2e92d88 'T'
|     `-RecordType 0x563ee2fad870 'Router::Connection'
|       `-CXXRecord 0x563ee2fad7e0 'Connection'
|-TypedefDecl 0x563ee32c9e88 <line:122:5, col:22> col:22 const_pointer 'const Router::Connection *'
| `-PointerType 0x563ee32c9e50 'const Router::Connection *'
|   `-QualType 0x563ee32c8a61 'const Router::Connection' const
|     `-SubstTemplateTypeParmType 0x563ee32c8a60 'Router::Connection' sugar
|       |-TemplateTypeParmType 0x563ee2e92de0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563ee2e92d88 'T'
|       `-RecordType 0x563ee2fad870 'Router::Connection'
|         `-CXXRecord 0x563ee2fad7e0 'Connection'
|-TypedefDecl 0x563ee32caae0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<Connection>::type':'const Router::Connection &'
| `-ElaboratedType 0x563ee32caa90 'typename fast_argument<Connection>::type' sugar
|   `-TypedefType 0x563ee32caa70 'fast_argument<Router::Connection, true>::type' sugar
|     |-Typedef 0x563ee32ca9a8 'type'
|     `-LValueReferenceType 0x563ee32ca970 'const Router::Connection &'
|       `-QualType 0x563ee32ca711 'const Router::Connection' const
|         `-SubstTemplateTypeParmType 0x563ee32ca710 'Router::Connection' sugar
|           |-TemplateTypeParmType 0x563ee2e657c0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x563ee2e65768 'T'
|           `-RecordType 0x563ee2fad870 'Router::Connection'
|             `-CXXRecord 0x563ee2fad7e0 'Connection'
|-TypedefDecl 0x563ee32cab48 <line:126:5, col:22> col:22 const_access_type 'const Router::Connection &'
| `-LValueReferenceType 0x563ee32c9d30 'const Router::Connection &'
|   `-QualType 0x563ee32c8a61 'const Router::Connection' const
|     `-SubstTemplateTypeParmType 0x563ee32c8a60 'Router::Connection' sugar
|       |-TemplateTypeParmType 0x563ee2e92de0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563ee2e92d88 'T'
|       `-RecordType 0x563ee2fad870 'Router::Connection'
|         `-CXXRecord 0x563ee2fad7e0 'Connection'
|-TypedefDecl 0x563ee32caba0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x563ee2b90370 'int'
|-TypedefDecl 0x563ee32cac08 <line:130:5, col:16> col:16 iterator 'Router::Connection *'
| `-PointerType 0x563ee32c9dc0 'Router::Connection *'
|   `-SubstTemplateTypeParmType 0x563ee32c8a60 'Router::Connection' sugar
|     |-TemplateTypeParmType 0x563ee2e92de0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x563ee2e92d88 'T'
|     `-RecordType 0x563ee2fad870 'Router::Connection'
|       `-CXXRecord 0x563ee2fad7e0 'Connection'
|-TypedefDecl 0x563ee32cac70 <line:131:5, col:22> col:22 const_iterator 'const Router::Connection *'
| `-PointerType 0x563ee32c9e50 'const Router::Connection *'
|   `-QualType 0x563ee32c8a61 'const Router::Connection' const
|     `-SubstTemplateTypeParmType 0x563ee32c8a60 'Router::Connection' sugar
|       |-TemplateTypeParmType 0x563ee2e92de0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563ee2e92d88 'T'
|       `-RecordType 0x563ee2fad870 'Router::Connection'
|         `-CXXRecord 0x563ee2fad7e0 'Connection'
|-EnumDecl 0x563ee32cacc8 <line:134:5> col:5
| `-EnumConstantDecl 0x563ee32cadc0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Router::Connection>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x563ee32cada0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x563ee2e94468 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x563ee2e94440 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x563ee2e94420 <col:40> 'int' 1
|-CXXConstructorDecl 0x563ee32cae48 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x563ee32cb0d8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Router::Connection>::value_argument_type)' inline
| |-ParmVarDecl 0x563ee32caf00 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x563ee32cafa0 <col:41, col:61> col:61 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXConstructorDecl 0x563ee32cb398 <line:139:5, col:37> col:12 Vector 'void (const Vector<Router::Connection> &)' inline
| `-ParmVarDecl 0x563ee32cb280 <col:19, col:36> col:36 x 'const Vector<Router::Connection> &'
|-CXXConstructorDecl 0x563ee32cb658 <line:141:5, col:32> col:12 Vector 'void (Vector<Router::Connection> &&)' inline
| `-ParmVarDecl 0x563ee32cb540 <col:19, col:31> col:31 x 'Vector<Router::Connection> &&'
|-CXXMethodDecl 0x563ee32cb9a0 <line:144:5, col:51> col:23 operator= 'Vector<Router::Connection> &(const Vector<Router::Connection> &)' inline
| `-ParmVarDecl 0x563ee32cb880 <col:33, col:50> col:50 x 'const Vector<Router::Connection> &'
|-CXXMethodDecl 0x563ee32cbcb0 <line:146:5, col:46> col:23 operator= 'Vector<Router::Connection> &(Vector<Router::Connection> &&)' inline
| `-ParmVarDecl 0x563ee32cbb90 <col:33, col:45> col:45 x 'Vector<Router::Connection> &&'
|-CXXMethodDecl 0x563ee32cbfa0 <line:148:5, col:70> col:23 assign 'Vector<Router::Connection> &(Vector::size_type, Vector<Router::Connection>::value_argument_type)' inline
| |-ParmVarDecl 0x563ee32cbde8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x563ee32cbe60 <col:43, col:69> col:63 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXMethodDecl 0x563ee32cc0f8 <line:150:5, col:55> col:49 begin 'Vector<Router::Connection>::iterator ()'
| |-NoInlineAttr 0x563ee32cc1d8 <col:20> Inherited
| `-OptimizeNoneAttr 0x563ee32cc230 <col:30> Inherited
|-CXXMethodDecl 0x563ee32cc278 <line:151:5, col:53> col:49 end 'Vector<Router::Connection>::iterator ()'
| |-NoInlineAttr 0x563ee32cc328 <col:20> Inherited
| `-OptimizeNoneAttr 0x563ee32cc380 <col:30> Inherited
|-CXXMethodDecl 0x563ee32cc448 <line:152:5, col:63> col:55 begin 'Vector<Router::Connection>::const_iterator () const'
| |-NoInlineAttr 0x563ee32cc4f8 <col:20> Inherited
| `-OptimizeNoneAttr 0x563ee32cc550 <col:30> Inherited
|-CXXMethodDecl 0x563ee32cc598 <line:153:5, col:61> col:55 end 'Vector<Router::Connection>::const_iterator () const'
| |-NoInlineAttr 0x563ee32cc648 <col:20> Inherited
| `-OptimizeNoneAttr 0x563ee32cc6a0 <col:30> Inherited
|-CXXMethodDecl 0x563ee32cc6e8 <line:154:5, col:64> col:55 cbegin 'Vector<Router::Connection>::const_iterator () const'
| |-NoInlineAttr 0x563ee32cc798 <col:20> Inherited
| `-OptimizeNoneAttr 0x563ee32cc7f0 <col:30> Inherited
|-CXXMethodDecl 0x563ee32cc838 <line:155:5, col:62> col:55 cend 'Vector<Router::Connection>::const_iterator () const'
| |-NoInlineAttr 0x563ee32cc8e8 <col:20> Inherited
| `-OptimizeNoneAttr 0x563ee32cc940 <col:30> Inherited
|-CXXMethodDecl 0x563ee32cc968 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x563ee32cca18 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x563ee32ccac8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x563ee32ccc88 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Router::Connection>::value_argument_type)' inline
| |-ParmVarDecl 0x563ee32ccb78 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x563ee32ccbf0 <col:37, col:63> col:57 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXMethodDecl 0x563ee32ccdd8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x563ee32ccd48 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x563ee32ccf88 <line:163:5, col:65> col:43 operator[] 'Router::Connection &(Vector::size_type)'
| |-ParmVarDecl 0x563ee32cce90 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x563ee32cd040 <col:20>
| `-OptimizeNoneAttr 0x563ee32cd098 <col:30>
|-CXXMethodDecl 0x563ee32cd1b8 <line:164:5, col:73> col:49 operator[] 'const Router::Connection &(Vector::size_type) const'
| |-ParmVarDecl 0x563ee32cd0c0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x563ee32cd270 <col:20>
| `-OptimizeNoneAttr 0x563ee32cd2c8 <col:30>
|-CXXMethodDecl 0x563ee32cd380 <line:165:5, col:29> col:15 at 'Router::Connection &(Vector::size_type)' inline
| `-ParmVarDecl 0x563ee32cd2f0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x563ee32cd4c8 <line:166:5, col:37> col:21 at 'const Router::Connection &(Vector::size_type) const' inline
| `-ParmVarDecl 0x563ee32cd438 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x563ee32cd5f8 <line:167:5, col:21> col:15 front 'Router::Connection &()' inline
|-CXXMethodDecl 0x563ee32cd728 <line:168:5, col:29> col:21 front 'const Router::Connection &() const' inline
|-CXXMethodDecl 0x563ee32cd7f8 <line:169:5, col:20> col:15 back 'Router::Connection &()' inline
|-CXXMethodDecl 0x563ee32cd8c8 <line:170:5, col:28> col:21 back 'const Router::Connection &() const' inline
|-CXXMethodDecl 0x563ee32cda08 <line:172:5, col:39> col:15 unchecked_at 'Router::Connection &(Vector::size_type)' inline
| `-ParmVarDecl 0x563ee32cd978 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x563ee32cdb50 <line:173:5, col:47> col:21 unchecked_at 'const Router::Connection &(Vector::size_type) const' inline
| `-ParmVarDecl 0x563ee32cdac0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x563ee32cdc98 <line:174:5, col:59> col:15 at_u 'Router::Connection &(Vector::size_type)' inline
| |-ParmVarDecl 0x563ee32cdc08 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x563ee32cdd50 <col:48> Inherited "" ""
|-CXXMethodDecl 0x563ee32cde50 <line:175:5, col:71> col:21 at_u 'const Router::Connection &(Vector::size_type) const' inline
| |-ParmVarDecl 0x563ee32cddc0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x563ee32cdf08 <col:60> Inherited "" ""
|-CXXMethodDecl 0x563ee32cdfc8 <line:177:5, col:20> col:15 data 'Router::Connection *()' inline
|-CXXMethodDecl 0x563ee32ce0c8 <line:178:5, col:28> col:21 data 'const Router::Connection *() const' inline
|-CXXMethodDecl 0x563ee32cfb60 <line:180:5, col:48> col:17 push_back 'void (Vector<Router::Connection>::value_argument_type)' inline
| `-ParmVarDecl 0x563ee32ce188 <col:27, col:47> col:47 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-FunctionTemplateDecl 0x563ee32d0328 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x563ee32cfc18 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Router::Connection>':'fast_argument<Router::Connection, true>'
| `-CXXMethodDecl 0x563ee32d0288 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Router::Connection &&)' inline
|   `-ParmVarDecl 0x563ee32d0188 <col:58, col:62> col:62 v 'Router::Connection &&'
|-CXXMethodDecl 0x563ee32d0408 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x563ee32d0558 <line:186:5, col:49> col:17 push_front 'void (Vector<Router::Connection>::value_argument_type)' inline
| `-ParmVarDecl 0x563ee32d04c8 <col:28, col:48> col:48 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXMethodDecl 0x563ee32d0610 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x563ee32d0858 <line:189:5, col:62> col:21 insert 'Vector<Router::Connection>::iterator (Vector<Router::Connection>::iterator, Vector<Router::Connection>::value_argument_type)' inline
| |-ParmVarDecl 0x563ee32d06d0 <col:28, col:37> col:37 it 'Vector<Router::Connection>::iterator':'Router::Connection *'
| `-ParmVarDecl 0x563ee32d0748 <col:41, col:61> col:61 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXMethodDecl 0x563ee32d0a18 <line:190:5, col:38> col:21 erase 'Vector<Router::Connection>::iterator (Vector<Router::Connection>::iterator)' inline
| `-ParmVarDecl 0x563ee32d0928 <col:27, col:36> col:36 it 'Vector<Router::Connection>::iterator':'Router::Connection *'
|-CXXMethodDecl 0x563ee32d0c68 <line:191:5, col:49> col:21 erase 'Vector<Router::Connection>::iterator (Vector<Router::Connection>::iterator, Vector<Router::Connection>::iterator)' inline
| |-ParmVarDecl 0x563ee32d0ae0 <col:27, col:36> col:36 a 'Vector<Router::Connection>::iterator':'Router::Connection *'
| `-ParmVarDecl 0x563ee32d0b58 <col:39, col:48> col:48 b 'Vector<Router::Connection>::iterator':'Router::Connection *'
|-CXXMethodDecl 0x563ee32d0d28 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x563ee32d0f88 <line:195:5, col:34> col:17 swap 'void (Vector<Router::Connection> &)' inline
| `-ParmVarDecl 0x563ee32d0e90 <col:22, col:33> col:33 x 'Vector<Router::Connection> &'
`-CXXDestructorDecl 0x563ee32d1058 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x563ee32d1058

Layout: <CGRecordLayout
  LLVMType:%class.Vector.8 = type { %class.vector_memory.9 }
  NonVirtualBaseLLVMType:%class.Vector.8 = type { %class.vector_memory.9 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | union Handler::(anonymous at ../dummy_inc/click/handler.hh:290:5)
         0 |   HandlerCallback h
         0 |   ReadHandlerCallback r
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | union Handler::(anonymous at ../dummy_inc/click/handler.hh:294:5)
         0 |   HandlerCallback h
         0 |   WriteHandlerCallback w
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Handler
         0 |   class String _name
         0 |     struct String::rep_t _r
         0 |       const char * data
         8 |       int length
        16 |       struct String::memo_t * memo
        24 |   union Handler::(anonymous at ../dummy_inc/click/handler.hh:290:5) _read_hook
        24 |     HandlerCallback h
        24 |     ReadHandlerCallback r
        32 |   union Handler::(anonymous at ../dummy_inc/click/handler.hh:294:5) _write_hook
        32 |     HandlerCallback h
        32 |     WriteHandlerCallback w
        40 |   void * _read_user_data
        48 |   void * _write_user_data
        56 |   uint32_t _flags
        60 |   int _use_count
        64 |   int _next_by_name
           | [sizeof=72, dsize=68, align=8,
           |  nvsize=68, nvalign=8]

*** Dumping AST Record Layout
         0 | class ErrorHandler
         0 |   (ErrorHandler vtable pointer)
         8 |   int _nerrors
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563ee3299178 prev 0x563ee322a058 <../dummy_inc/click/error.hh:90:1, line:592:1> line:90:7 referenced class ErrorHandler definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x563ee3299270 <col:1, col:7> col:7 implicit referenced class ErrorHandler
|-AccessSpecDecl 0x563ee3299300 <col:22, col:28> col:22 public
|-EnumDecl 0x563ee3299328 <line:98:5, line:111:5> line:98:10 Level
| |-EnumConstantDecl 0x563ee3299448 <line:99:2, col:14> col:2 el_abort 'ErrorHandler::Level'
| | `-ConstantExpr 0x563ee3299428 <col:13, col:14> 'int' Int: -999
| |   `-UnaryOperator 0x563ee3299410 <col:13, col:14> 'int' prefix '-'
| |     `-IntegerLiteral 0x563ee32993f0 <col:14> 'int' 999
| |-EnumConstantDecl 0x563ee32994f0 <line:100:2, col:14> col:2 el_fatal 'ErrorHandler::Level'
| | `-ConstantExpr 0x563ee32994d0 <col:13, col:14> 'int' Int: -1
| |   `-UnaryOperator 0x563ee32994b8 <col:13, col:14> 'int' prefix '-'
| |     `-IntegerLiteral 0x563ee3299498 <col:14> 'int' 1
| |-EnumConstantDecl 0x563ee3299580 <line:102:2, col:17> col:2 el_emergency 'ErrorHandler::Level'
| | `-ConstantExpr 0x563ee3299560 <col:17> 'int' Int: 0
| |   `-IntegerLiteral 0x563ee3299540 <col:17> 'int' 0
| |-EnumConstantDecl 0x563ee3299610 <line:103:2, col:13> col:2 el_alert 'ErrorHandler::Level'
| | `-ConstantExpr 0x563ee32995f0 <col:13> 'int' Int: 1
| |   `-IntegerLiteral 0x563ee32995d0 <col:13> 'int' 1
| |-EnumConstantDecl 0x563ee32996a0 <line:104:2, col:16> col:2 el_critical 'ErrorHandler::Level'
| | `-ConstantExpr 0x563ee3299680 <col:16> 'int' Int: 2
| |   `-IntegerLiteral 0x563ee3299660 <col:16> 'int' 2
| |-EnumConstantDecl 0x563ee3299730 <line:105:2, col:13> col:2 referenced el_error 'ErrorHandler::Level'
| | `-ConstantExpr 0x563ee3299710 <col:13> 'int' Int: 3
| |   `-IntegerLiteral 0x563ee32996f0 <col:13> 'int' 3
| |-EnumConstantDecl 0x563ee32997c0 <line:106:2, col:15> col:2 el_warning 'ErrorHandler::Level'
| | `-ConstantExpr 0x563ee32997a0 <col:15> 'int' Int: 4
| |   `-IntegerLiteral 0x563ee3299780 <col:15> 'int' 4
| |-EnumConstantDecl 0x563ee3299850 <line:107:2, col:14> col:2 el_notice 'ErrorHandler::Level'
| | `-ConstantExpr 0x563ee3299830 <col:14> 'int' Int: 5
| |   `-IntegerLiteral 0x563ee3299810 <col:14> 'int' 5
| |-EnumConstantDecl 0x563ee32998e0 <line:109:2, col:12> col:2 el_info 'ErrorHandler::Level'
| | `-ConstantExpr 0x563ee32998c0 <col:12> 'int' Int: 6
| |   `-IntegerLiteral 0x563ee32998a0 <col:12> 'int' 6
| `-EnumConstantDecl 0x563ee3299970 <line:110:2, col:13> col:2 el_debug 'ErrorHandler::Level'
|   `-ConstantExpr 0x563ee3299950 <col:13> 'int' Int: 7
|     `-IntegerLiteral 0x563ee3299930 <col:13> 'int' 7
|-VarDecl 0x563ee32999e0 <line:114:5, col:31> col:23 e_abort 'const char []' static
|-VarDecl 0x563ee3299a68 <col:5, line:115:10> col:2 e_fatal 'const char []' static
|-VarDecl 0x563ee3299af0 <line:114:5, line:116:14> col:2 e_emergency 'const char []' static
|-VarDecl 0x563ee3299b78 <line:114:5, line:117:10> col:2 e_alert 'const char []' static
|-VarDecl 0x563ee3299c00 <line:114:5, line:118:13> col:2 e_critical 'const char []' static
|-VarDecl 0x563ee3299c88 <line:114:5, line:119:10> col:2 e_error 'const char []' static
|-VarDecl 0x563ee3299d10 <line:114:5, line:120:12> col:2 e_warning 'const char []' static
|-VarDecl 0x563ee3299d98 <line:114:5, line:121:22> col:2 e_warning_annotated 'const char []' static
|-VarDecl 0x563ee3299e20 <line:114:5, line:122:11> col:2 e_notice 'const char []' static
|-VarDecl 0x563ee3299ea8 <line:114:5, line:123:9> col:2 e_info 'const char []' static
|-VarDecl 0x563ee3299f30 <line:114:5, line:124:10> col:2 e_debug 'const char []' static
|-CXXConstructorDecl 0x563ee329a030 <line:127:5, line:129:5> line:127:5 used ErrorHandler 'void ()'
| |-CXXCtorInitializer Field 0x563ee329f368 '_nerrors' 'int'
| | `-IntegerLiteral 0x563ee329faf8 <line:128:13> 'int' 0
| `-CompoundStmt 0x563ee329fb68 <col:16, line:129:5>
|-CXXDestructorDecl 0x563ee329a120 <line:131:5, line:132:5> line:131:13 used ~ErrorHandler 'void () noexcept' virtual
| `-CompoundStmt 0x563ee329fb78 <col:29, line:132:5>
|-CXXMethodDecl 0x563ee329a2d8 <line:148:5, col:62> col:26 static_initialize 'ErrorHandler *(ErrorHandler *)' static
| `-ParmVarDecl 0x563ee329a210 <col:44, col:58> col:58 errh 'ErrorHandler *'
|-CXXMethodDecl 0x563ee329a3a0 <line:154:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x563ee329a488 <line:159:5, line:161:5> line:159:26 default_handler 'ErrorHandler *()' static
| `-CompoundStmt 0x563ee329fbd0 <col:44, line:161:5>
|   `-ReturnStmt 0x563ee329fbc0 <line:160:2, col:9>
|     `-ImplicitCastExpr 0x563ee329fba8 <col:9> 'ErrorHandler *' <LValueToRValue>
|       `-DeclRefExpr 0x563ee329fb88 <col:9> 'ErrorHandler *' lvalue Var 0x563ee329f3c8 'the_default_handler' 'ErrorHandler *'
|-CXXMethodDecl 0x563ee329a5c8 <line:168:5, col:55> col:17 set_default_handler 'void (ErrorHandler *)' static
| `-ParmVarDecl 0x563ee329a538 <col:37, col:51> col:51 errh 'ErrorHandler *'
|-CXXMethodDecl 0x563ee329a690 <line:171:5, line:173:5> line:171:26 silent_handler 'ErrorHandler *()' static
| `-CompoundStmt 0x563ee329fc30 <col:43, line:173:5>
|   `-ReturnStmt 0x563ee329fc20 <line:172:2, col:9>
|     `-ImplicitCastExpr 0x563ee329fc08 <col:9> 'ErrorHandler *' <LValueToRValue>
|       `-DeclRefExpr 0x563ee329fbe8 <col:9> 'ErrorHandler *' lvalue Var 0x563ee329f440 'the_silent_handler' 'ErrorHandler *'
|-VarDecl 0x563ee329a748 <line:176:5, col:22> col:22 ok_result 'const int' static
|-VarDecl 0x563ee329a7c8 <line:178:5, col:22> col:22 error_result 'const int' static
|-CXXMethodDecl 0x563ee329a8d8 <line:186:5, col:36> col:10 debug 'void (const char *, ...)'
| `-ParmVarDecl 0x563ee329a848 <col:16, col:28> col:28 fmt 'const char *'
|-CXXMethodDecl 0x563ee329aa28 <line:188:5, col:38> col:10 message 'void (const char *, ...)'
| `-ParmVarDecl 0x563ee329a998 <col:18, col:30> col:30 fmt 'const char *'
|-CXXMethodDecl 0x563ee329ab80 <line:193:5, col:37> col:9 warning 'int (const char *, ...)'
| `-ParmVarDecl 0x563ee329aae8 <col:17, col:29> col:29 fmt 'const char *'
|-CXXMethodDecl 0x563ee329acd8 <line:196:5, col:35> col:9 error 'int (const char *, ...)'
| `-ParmVarDecl 0x563ee329ac40 <col:15, col:27> col:27 fmt 'const char *'
|-CXXMethodDecl 0x563ee329ae30 <line:201:5, col:35> col:9 fatal 'int (const char *, ...)'
| `-ParmVarDecl 0x563ee329ad98 <col:15, col:27> col:27 fmt 'const char *'
|-CXXMethodDecl 0x563ee329b040 <line:204:5, col:61> col:10 ldebug 'void (const String &, const char *, ...)'
| |-ParmVarDecl 0x563ee329aee8 <col:17, col:31> col:31 landmark 'const String &'
| `-ParmVarDecl 0x563ee329af68 <col:41, col:53> col:53 fmt 'const char *'
|-CXXMethodDecl 0x563ee329b218 <line:206:5, col:63> col:10 lmessage 'void (const String &, const char *, ...)'
| |-ParmVarDecl 0x563ee329b100 <col:19, col:33> col:33 landmark 'const String &'
| `-ParmVarDecl 0x563ee329b180 <col:43, col:55> col:55 fmt 'const char *'
|-CXXMethodDecl 0x563ee329b438 <line:208:5, col:62> col:9 lwarning 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x563ee329b2d8 <col:18, col:32> col:32 landmark 'const String &'
| `-ParmVarDecl 0x563ee329b358 <col:42, col:54> col:54 fmt 'const char *'
|-CXXMethodDecl 0x563ee329b618 <line:210:5, col:60> col:9 lerror 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x563ee329b4f8 <col:16, col:30> col:30 landmark 'const String &'
| `-ParmVarDecl 0x563ee329b578 <col:40, col:52> col:52 fmt 'const char *'
|-CXXMethodDecl 0x563ee329b7f8 <line:212:5, col:60> col:9 lfatal 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x563ee329b6d8 <col:16, col:30> col:30 landmark 'const String &'
| `-ParmVarDecl 0x563ee329b758 <col:40, col:52> col:52 fmt 'const char *'
|-CXXMethodDecl 0x563ee329b980 <line:226:5, col:35> col:9 used xmessage 'int (const String &)'
| `-ParmVarDecl 0x563ee329b8b8 <col:18, col:32> col:32 str 'const String &'
|-CXXMethodDecl 0x563ee329bb50 <line:232:5, line:234:5> line:232:9 used xmessage 'int (const String &, const String &)'
| |-ParmVarDecl 0x563ee329ba38 <col:18, col:32> col:32 used anno 'const String &'
| |-ParmVarDecl 0x563ee329bab0 <col:38, col:52> col:52 used str 'const String &'
| `-CompoundStmt 0x563ee329fe88 <col:57, line:234:5>
|   `-ReturnStmt 0x563ee329fe78 <line:233:2, col:41>
|     `-ExprWithCleanups 0x563ee329fe60 <col:9, col:41> 'int'
|       `-CXXMemberCallExpr 0x563ee329fe08 <col:9, col:41> 'int'
|         |-MemberExpr 0x563ee329fdd8 <col:9> '<bound member function type>' ->xmessage 0x563ee329b980
|         | `-CXXThisExpr 0x563ee329fdc8 <col:9> 'ErrorHandler *' implicit this
|         `-MaterializeTemporaryExpr 0x563ee329fe48 <col:18, col:40> 'const String' lvalue
|           `-ImplicitCastExpr 0x563ee329fe30 <col:18, col:40> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x563ee329fda8 <col:18, col:40> 'String' (CXXTemporary 0x563ee329fda8)
|               `-CallExpr 0x563ee329fd70 <col:18, col:40> 'String'
|                 |-ImplicitCastExpr 0x563ee329fd58 <col:18> 'String (*)(const String &, const String &)' <FunctionToPointerDecay>
|                 | `-DeclRefExpr 0x563ee329fcd0 <col:18> 'String (const String &, const String &)' lvalue CXXMethod 0x563ee329db98 'combine_anno' 'String (const String &, const String &)'
|                 |-DeclRefExpr 0x563ee329fcf0 <col:31> 'const String' lvalue ParmVar 0x563ee329bab0 'str' 'const String &'
|                 `-DeclRefExpr 0x563ee329fd10 <col:36> 'const String' lvalue ParmVar 0x563ee329ba38 'anno' 'const String &'
|-CXXMethodDecl 0x563ee329be30 <line:241:5, line:243:5> line:241:9 xmessage 'int (const String &, const char *, __va_list_tag *)'
| |-ParmVarDecl 0x563ee329bc10 <col:18, col:32> col:32 used anno 'const String &'
| |-ParmVarDecl 0x563ee329bc90 <col:38, col:50> col:50 used fmt 'const char *'
| |-ParmVarDecl 0x563ee329bd08 <col:55, col:63> col:63 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x563ee32a0118 <col:68, line:243:5>
|   `-ReturnStmt 0x563ee32a0108 <line:242:2, col:41>
|     `-ExprWithCleanups 0x563ee32a00f0 <col:9, col:41> 'int'
|       `-CXXMemberCallExpr 0x563ee32a0090 <col:9, col:41> 'int'
|         |-MemberExpr 0x563ee32a0060 <col:9> '<bound member function type>' ->xmessage 0x563ee329bb50
|         | `-CXXThisExpr 0x563ee32a0050 <col:9> 'ErrorHandler *' implicit this
|         |-DeclRefExpr 0x563ee329ff28 <col:18> 'const String' lvalue ParmVar 0x563ee329bc10 'anno' 'const String &'
|         `-MaterializeTemporaryExpr 0x563ee32a00d8 <col:24, col:40> 'const String' lvalue
|           `-ImplicitCastExpr 0x563ee32a00c0 <col:24, col:40> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x563ee32a0030 <col:24, col:40> 'String' (CXXTemporary 0x563ee32a0030)
|               `-CXXMemberCallExpr 0x563ee329ffc8 <col:24, col:40> 'String'
|                 |-MemberExpr 0x563ee329ff58 <col:24> '<bound member function type>' ->vformat 0x563ee329d060
|                 | `-CXXThisExpr 0x563ee329ff48 <col:24> 'ErrorHandler *' implicit this
|                 |-ImplicitCastExpr 0x563ee329fff8 <col:32> 'const char *' <LValueToRValue>
|                 | `-DeclRefExpr 0x563ee329ff88 <col:32> 'const char *' lvalue ParmVar 0x563ee329bc90 'fmt' 'const char *'
|                 `-ImplicitCastExpr 0x563ee32a0010 <col:37> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                   `-DeclRefExpr 0x563ee329ffa8 <col:37> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x563ee329bd08 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x563ee329c0d0 <line:251:5, line:254:5> line:251:9 used xmessage 'int (const String &, const String &, const String &)'
| |-ParmVarDecl 0x563ee329bef8 <col:18, col:32> col:32 used landmark 'const String &'
| |-ParmVarDecl 0x563ee329bf70 <col:42, col:56> col:56 used anno 'const String &'
| |-ParmVarDecl 0x563ee329bfe8 <line:252:4, col:18> col:18 used str 'const String &'
| `-CompoundStmt 0x563ee32a0458 <col:23, line:254:5>
|   `-ReturnStmt 0x563ee32a0448 <line:253:2, col:71>
|     `-ExprWithCleanups 0x563ee32a0430 <col:9, col:71> 'int'
|       `-CXXMemberCallExpr 0x563ee32a03d0 <col:9, col:71> 'int'
|         |-MemberExpr 0x563ee32a03a0 <col:9> '<bound member function type>' ->xmessage 0x563ee329bb50
|         | `-CXXThisExpr 0x563ee32a0390 <col:9> 'ErrorHandler *' implicit this
|         |-MaterializeTemporaryExpr 0x563ee32a0418 <col:18, col:65> 'const String' lvalue
|         | `-ImplicitCastExpr 0x563ee32a0400 <col:18, col:65> 'const String' <NoOp>
|         |   `-CXXBindTemporaryExpr 0x563ee32a0350 <col:18, col:65> 'String' (CXXTemporary 0x563ee32a0350)
|         |     `-CallExpr 0x563ee32a02e8 <col:18, col:65> 'String'
|         |       |-ImplicitCastExpr 0x563ee32a02d0 <col:18> 'String (*)(const String &, const String &)' <FunctionToPointerDecay>
|         |       | `-DeclRefExpr 0x563ee32a01b8 <col:18> 'String (const String &, const String &)' lvalue CXXMethod 0x563ee329db98 'combine_anno' 'String (const String &, const String &)'
|         |       |-DeclRefExpr 0x563ee32a01d8 <col:31> 'const String' lvalue ParmVar 0x563ee329bf70 'anno' 'const String &'
|         |       `-MaterializeTemporaryExpr 0x563ee32a0330 <col:37, col:64> 'const String' lvalue
|         |         `-ImplicitCastExpr 0x563ee32a0318 <col:37, col:64> 'const String' <NoOp>
|         |           `-CXXBindTemporaryExpr 0x563ee32a02b0 <col:37, col:64> 'String' (CXXTemporary 0x563ee32a02b0)
|         |             `-CallExpr 0x563ee32a0280 <col:37, col:64> 'String'
|         |               |-ImplicitCastExpr 0x563ee32a0268 <col:37> 'String (*)(const String &)' <FunctionToPointerDecay>
|         |               | `-DeclRefExpr 0x563ee32a01f8 <col:37> 'String (const String &)' lvalue CXXMethod 0x563ee329e1e8 'make_landmark_anno' 'String (const String &)'
|         |               `-DeclRefExpr 0x563ee32a0218 <col:56> 'const String' lvalue ParmVar 0x563ee329bef8 'landmark' 'const String &'
|         `-DeclRefExpr 0x563ee32a0370 <col:68> 'const String' lvalue ParmVar 0x563ee329bfe8 'str' 'const String &'
|-CXXMethodDecl 0x563ee329c450 <line:264:5, line:267:5> line:264:9 xmessage 'int (const String &, const String &, const char *, __va_list_tag *)'
| |-ParmVarDecl 0x563ee329c198 <col:18, col:32> col:32 used landmark 'const String &'
| |-ParmVarDecl 0x563ee329c210 <col:42, col:56> col:56 used anno 'const String &'
| |-ParmVarDecl 0x563ee329c290 <line:265:4, col:16> col:16 used fmt 'const char *'
| |-ParmVarDecl 0x563ee329c308 <col:21, col:29> col:29 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x563ee32a0710 <col:34, line:267:5>
|   `-ReturnStmt 0x563ee32a0700 <line:266:2, col:51>
|     `-ExprWithCleanups 0x563ee32a06e8 <col:9, col:51> 'int'
|       `-CXXMemberCallExpr 0x563ee32a0680 <col:9, col:51> 'int'
|         |-MemberExpr 0x563ee32a0650 <col:9> '<bound member function type>' ->xmessage 0x563ee329c0d0
|         | `-CXXThisExpr 0x563ee32a0640 <col:9> 'ErrorHandler *' implicit this
|         |-DeclRefExpr 0x563ee32a04f8 <col:18> 'const String' lvalue ParmVar 0x563ee329c198 'landmark' 'const String &'
|         |-DeclRefExpr 0x563ee32a0518 <col:28> 'const String' lvalue ParmVar 0x563ee329c210 'anno' 'const String &'
|         `-MaterializeTemporaryExpr 0x563ee32a06d0 <col:34, col:50> 'const String' lvalue
|           `-ImplicitCastExpr 0x563ee32a06b8 <col:34, col:50> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x563ee32a0620 <col:34, col:50> 'String' (CXXTemporary 0x563ee32a0620)
|               `-CXXMemberCallExpr 0x563ee32a05b8 <col:34, col:50> 'String'
|                 |-MemberExpr 0x563ee32a0548 <col:34> '<bound member function type>' ->vformat 0x563ee329d060
|                 | `-CXXThisExpr 0x563ee32a0538 <col:34> 'ErrorHandler *' implicit this
|                 |-ImplicitCastExpr 0x563ee32a05e8 <col:42> 'const char *' <LValueToRValue>
|                 | `-DeclRefExpr 0x563ee32a0578 <col:42> 'const char *' lvalue ParmVar 0x563ee329c290 'fmt' 'const char *'
|                 `-ImplicitCastExpr 0x563ee32a0600 <col:47> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                   `-DeclRefExpr 0x563ee32a0598 <col:47> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x563ee329c308 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x563ee329c560 <line:286:5, line:288:5> line:286:9 nerrors 'int () const'
| `-CompoundStmt 0x563ee32a0790 <col:25, line:288:5>
|   `-ReturnStmt 0x563ee32a0780 <line:287:2, col:9>
|     `-ImplicitCastExpr 0x563ee32a0768 <col:9> 'int' <LValueToRValue>
|       `-MemberExpr 0x563ee32a0738 <col:9> 'const int' lvalue ->_nerrors 0x563ee329f368
|         `-CXXThisExpr 0x563ee32a0728 <col:9> 'const ErrorHandler *' implicit this
|-CXXMethodDecl 0x563ee329c770 <line:349:5, col:66> col:19 xformat 'String (int, const char *, ...)' static
| |-ParmVarDecl 0x563ee329c618 <col:27, col:31> col:31 default_flags 'int'
| `-ParmVarDecl 0x563ee329c698 <col:46, col:58> col:58 fmt 'const char *'
|-CXXMethodDecl 0x563ee329ca58 <line:351:5, col:75> col:19 used vxformat 'String (int, const char *, __va_list_tag *)' static
| |-ParmVarDecl 0x563ee329c838 <col:28, col:32> col:32 default_flags 'int'
| |-ParmVarDecl 0x563ee329c8b8 <col:47, col:59> col:59 fmt 'const char *'
| `-ParmVarDecl 0x563ee329c930 <col:64, col:72> col:72 val '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x563ee329cc40 <line:353:5, col:47> col:19 xformat 'String (const char *, ...)' static
| `-ParmVarDecl 0x563ee329cb28 <col:27, col:39> col:39 fmt 'const char *'
|-CXXMethodDecl 0x563ee329ce88 <line:355:5, line:357:5> line:355:19 vxformat 'String (const char *, __va_list_tag *)' static
| |-ParmVarDecl 0x563ee329cd00 <col:28, col:40> col:40 used fmt 'const char *'
| |-ParmVarDecl 0x563ee329cd78 <col:45, col:53> col:53 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x563ee32a09f0 <col:58, line:357:5>
|   `-ReturnStmt 0x563ee32a09e0 <line:356:2, col:29>
|     `-ExprWithCleanups 0x563ee32a09c8 <col:9, col:29> 'String'
|       `-CXXConstructExpr 0x563ee32a0998 <col:9, col:29> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x563ee32a0980 <col:9, col:29> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x563ee32a0960 <col:9, col:29> 'String' (CXXTemporary 0x563ee32a0960)
|             `-CallExpr 0x563ee32a08f0 <col:9, col:29> 'String'
|               |-ImplicitCastExpr 0x563ee32a08d8 <col:9> 'String (*)(int, const char *, __va_list_tag *)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x563ee32a0858 <col:9> 'String (int, const char *, __va_list_tag *)' lvalue CXXMethod 0x563ee329ca58 'vxformat' 'String (int, const char *, __va_list_tag *)'
|               |-IntegerLiteral 0x563ee32a07f8 <col:18> 'int' 0
|               |-ImplicitCastExpr 0x563ee32a0928 <col:21> 'const char *' <LValueToRValue>
|               | `-DeclRefExpr 0x563ee32a0818 <col:21> 'const char *' lvalue ParmVar 0x563ee329cd00 'fmt' 'const char *'
|               `-ImplicitCastExpr 0x563ee32a0940 <col:26> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                 `-DeclRefExpr 0x563ee32a0838 <col:26> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x563ee329cd78 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x563ee329d060 <line:369:5, col:56> col:20 used vformat 'String (const char *, __va_list_tag *)' virtual
| |-ParmVarDecl 0x563ee329cf50 <col:28, col:40> col:40 fmt 'const char *'
| `-ParmVarDecl 0x563ee329cfc8 <col:45, col:53> col:53 val '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x563ee329d1b8 <line:379:5, col:39> col:12 format 'String (const char *, ...)'
| `-ParmVarDecl 0x563ee329d128 <col:19, col:31> col:31 fmt 'const char *'
|-CXXMethodDecl 0x563ee329d300 <line:393:5, col:46> col:20 decorate 'String (const String &)' virtual
| `-ParmVarDecl 0x563ee329d270 <col:29, col:43> col:43 str 'const String &'
|-CXXMethodDecl 0x563ee329d5a0 <line:424:5, col:69> col:19 emit 'void *(const String &, void *, bool)' virtual
| |-ParmVarDecl 0x563ee329d3b8 <col:24, col:38> col:38 str 'const String &'
| |-ParmVarDecl 0x563ee329d438 <col:43, col:49> col:49 user_data 'void *'
| `-ParmVarDecl 0x563ee329d4b0 <col:60, col:65> col:65 more 'bool'
|-CXXMethodDecl 0x563ee329d700 <line:438:5, line:441:5> line:438:18 account 'void (int)' virtual
| |-ParmVarDecl 0x563ee329d670 <col:26, col:30> col:30 used level 'int'
| `-CompoundStmt 0x563ee32a0b08 <col:37, line:441:5>
|   `-IfStmt 0x563ee32a0af0 <line:439:2, line:440:8>
|     |-BinaryOperator 0x563ee32a0a78 <line:439:6, col:15> 'bool' '<='
|     | |-ImplicitCastExpr 0x563ee32a0a48 <col:6> 'int' <LValueToRValue>
|     | | `-DeclRefExpr 0x563ee32a0a08 <col:6> 'int' lvalue ParmVar 0x563ee329d670 'level' 'int'
|     | `-ImplicitCastExpr 0x563ee32a0a60 <col:15> 'int' <IntegralCast>
|     |   `-DeclRefExpr 0x563ee32a0a28 <col:15> 'ErrorHandler::Level' EnumConstant 0x563ee3299730 'el_error' 'ErrorHandler::Level'
|     `-UnaryOperator 0x563ee32a0ad8 <line:440:6, col:8> 'int' lvalue prefix '++'
|       `-MemberExpr 0x563ee32a0aa8 <col:8> 'int' lvalue ->_nerrors 0x563ee329f368
|         `-CXXThisExpr 0x563ee32a0a98 <col:8> 'ErrorHandler *' implicit this
|-CXXMethodDecl 0x563ee329d7c8 <line:446:5, line:448:5> line:446:18 clear 'void ()' virtual
| `-CompoundStmt 0x563ee32a0ba0 <col:26, line:448:5>
|   `-BinaryOperator 0x563ee32a0b80 <line:447:2, col:13> 'int' lvalue '='
|     |-MemberExpr 0x563ee32a0b30 <col:2> 'int' lvalue ->_nerrors 0x563ee329f368
|     | `-CXXThisExpr 0x563ee32a0b20 <col:2> 'ErrorHandler *' implicit this
|     `-IntegerLiteral 0x563ee32a0b60 <col:13> 'int' 0
|-CXXMethodDecl 0x563ee329d990 <line:466:5, col:66> col:19 used make_anno 'String (const char *, const String &)' static
| |-ParmVarDecl 0x563ee329d880 <col:29, col:41> col:41 name 'const char *'
| `-ParmVarDecl 0x563ee329d8f8 <col:47, col:61> col:61 value 'const String &'
|-CXXMethodDecl 0x563ee329db98 <line:482:5, col:69> col:19 used combine_anno 'String (const String &, const String &)' static
| |-ParmVarDecl 0x563ee329da50 <col:32, col:46> col:46 str 'const String &'
| `-ParmVarDecl 0x563ee329dac8 <col:51, col:65> col:65 anno 'const String &'
|-CXXMethodDecl 0x563ee329de48 <line:516:5, line:517:68> line:516:24 parse_anno 'const char *(const String &, const char *, const char *, ...)' static
| |-ParmVarDecl 0x563ee329dc58 <col:35, col:49> col:49 str 'const String &'
| |-ParmVarDecl 0x563ee329dcd8 <line:517:3, col:15> col:15 begin 'const char *'
| |-ParmVarDecl 0x563ee329dd58 <col:22, col:34> col:34 end 'const char *'
| `-SentinelAttr 0x563ee329df00 <col:59> 0 0
|-CXXMethodDecl 0x563ee329e098 <line:527:5, line:534:5> line:527:24 skip_anno 'const char *(const char *, const char *)' static
| |-ParmVarDecl 0x563ee329df78 <col:34, col:46> col:46 used begin 'const char *'
| |-ParmVarDecl 0x563ee329dff8 <col:53, col:65> col:65 used end 'const char *'
| `-CompoundStmt 0x563ee32a1210 <col:70, line:534:5>
|   |-DeclStmt 0x563ee32a0d10 <line:528:2, col:20>
|   | |-VarDecl 0x563ee32a0bc8 <col:2, col:9> col:9 used name 'String' callinit destroyed
|   | | `-CXXConstructExpr 0x563ee32a0c30 <col:9> 'String' 'void ()'
|   | `-VarDecl 0x563ee32a0c68 <col:2, col:15> col:15 used value 'String' callinit destroyed
|   |   `-CXXConstructExpr 0x563ee32a0cd0 <col:15> 'String' 'void ()'
|   |-DeclStmt 0x563ee32a0de0 <line:529:2, col:23>
|   | `-VarDecl 0x563ee32a0d40 <col:2, col:18> col:14 used x 'const char *' cinit
|   |   `-ImplicitCastExpr 0x563ee32a0dc8 <col:18> 'const char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x563ee32a0da8 <col:18> 'const char *' lvalue ParmVar 0x563ee329df78 'begin' 'const char *'
|   |-DoStmt 0x563ee32a11a8 <line:530:2, line:532:15>
|   | |-CompoundStmt 0x563ee32a10d8 <line:530:5, line:532:2>
|   | | `-ExprWithCleanups 0x563ee32a10c0 <line:531:6, col:58> 'const char *' lvalue
|   | |   `-BinaryOperator 0x563ee32a10a0 <col:6, col:58> 'const char *' lvalue '='
|   | |     |-DeclRefExpr 0x563ee32a0df8 <col:6> 'const char *' lvalue Var 0x563ee32a0d40 'x' 'const char *'
|   | |     `-CallExpr 0x563ee32a0ff0 <col:10, col:58> 'const char *'
|   | |       |-ImplicitCastExpr 0x563ee32a0fd8 <col:10> 'const char *(*)(const String &, const char *, const char *, String *, String *, bool)' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x563ee32a0f90 <col:10> 'const char *(const String &, const char *, const char *, String *, String *, bool)' lvalue CXXMethod 0x563ee329f840 'skip_anno' 'const char *(const String &, const char *, const char *, String *, String *, bool)'
|   | |       |-MaterializeTemporaryExpr 0x563ee32a1058 <col:20, col:27> 'const String' lvalue
|   | |       | `-ImplicitCastExpr 0x563ee32a1040 <col:20, col:27> 'const String' <NoOp>
|   | |       |   `-CXXBindTemporaryExpr 0x563ee32a0eb0 <col:20, col:27> 'String' (CXXTemporary 0x563ee32a0eb0)
|   | |       |     `-CXXTemporaryObjectExpr 0x563ee32a0e78 <col:20, col:27> 'String' 'void ()'
|   | |       |-ImplicitCastExpr 0x563ee32a1070 <col:30> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x563ee32a0ed0 <col:30> 'const char *' lvalue Var 0x563ee32a0d40 'x' 'const char *'
|   | |       |-ImplicitCastExpr 0x563ee32a1088 <col:33> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x563ee32a0ef0 <col:33> 'const char *' lvalue ParmVar 0x563ee329dff8 'end' 'const char *'
|   | |       |-UnaryOperator 0x563ee32a0f30 <col:38, col:39> 'String *' prefix '&' cannot overflow
|   | |       | `-DeclRefExpr 0x563ee32a0f10 <col:39> 'String' lvalue Var 0x563ee32a0bc8 'name' 'String'
|   | |       |-UnaryOperator 0x563ee32a0f68 <col:45, col:46> 'String *' prefix '&' cannot overflow
|   | |       | `-DeclRefExpr 0x563ee32a0f48 <col:46> 'String' lvalue Var 0x563ee32a0c68 'value' 'String'
|   | |       `-CXXBoolLiteralExpr 0x563ee32a0f80 <col:53> 'bool' false
|   | `-ImplicitCastExpr 0x563ee32a1190 <line:532:11> 'bool' <MemberPointerToBoolean>
|   |   `-ImplicitCastExpr 0x563ee32a1178 <col:11> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|   |     `-CXXMemberCallExpr 0x563ee32a1158 <col:11> 'String::unspecified_bool_type':'int (String::*)() const'
|   |       `-MemberExpr 0x563ee32a1128 <col:11> '<bound member function type>' .operator int (String::*)() const 0x563ee2ec5a18
|   |         `-ImplicitCastExpr 0x563ee32a1110 <col:11> 'const String' lvalue <NoOp>
|   |           `-DeclRefExpr 0x563ee32a10f0 <col:11> 'String' lvalue Var 0x563ee32a0bc8 'name' 'String'
|   `-ReturnStmt 0x563ee32a1200 <line:533:2, col:9>
|     `-ImplicitCastExpr 0x563ee32a11e8 <col:9> 'const char *' <LValueToRValue>
|       `-DeclRefExpr 0x563ee32a11c8 <col:9> 'const char *' lvalue Var 0x563ee32a0d40 'x' 'const char *'
|-CXXMethodDecl 0x563ee329e1e8 <line:543:5, line:550:5> line:543:19 used make_landmark_anno 'String (const String &)' static
| |-ParmVarDecl 0x563ee329e158 <col:38, col:52> col:52 used x 'const String &'
| `-CompoundStmt 0x563ee32a1818 <col:55, line:550:5>
|   `-IfStmt 0x563ee32a17f0 <line:544:2, line:549:20> has_else
|     |-BinaryOperator 0x563ee32a1450 <line:544:6, col:19> 'bool' '&&'
|     | |-ImplicitCastExpr 0x563ee32a1438 <col:6> 'bool' <MemberPointerToBoolean>
|     | | `-ImplicitCastExpr 0x563ee32a1420 <col:6> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|     | |   `-CXXMemberCallExpr 0x563ee32a1400 <col:6> 'String::unspecified_bool_type':'int (String::*)() const'
|     | |     `-MemberExpr 0x563ee32a13d0 <col:6> '<bound member function type>' .operator int (String::*)() const 0x563ee2ec5a18
|     | |       `-DeclRefExpr 0x563ee32a1270 <col:6> 'const String' lvalue ParmVar 0x563ee329e158 'x' 'const String &'
|     | `-BinaryOperator 0x563ee32a13b0 <col:11, col:19> 'bool' '=='
|     |   |-ImplicitCastExpr 0x563ee32a1380 <col:11, col:14> 'int' <IntegralCast>
|     |   | `-CXXOperatorCallExpr 0x563ee32a1330 <col:11, col:14> 'char'
|     |   |   |-ImplicitCastExpr 0x563ee32a1318 <col:12, col:14> 'char (*)(int) const' <FunctionToPointerDecay>
|     |   |   | `-DeclRefExpr 0x563ee32a12d0 <col:12, col:14> 'char (int) const' lvalue CXXMethod 0x563ee2edf250 'operator[]' 'char (int) const'
|     |   |   |-DeclRefExpr 0x563ee32a1290 <col:11> 'const String' lvalue ParmVar 0x563ee329e158 'x' 'const String &'
|     |   |   `-IntegerLiteral 0x563ee32a12b0 <col:13> 'int' 0
|     |   `-ImplicitCastExpr 0x563ee32a1398 <col:19> 'int' <IntegralCast>
|     |     `-CharacterLiteral 0x563ee32a1368 <col:19> 'char' 123
|     |-ReturnStmt 0x563ee32a14c0 <line:545:6, col:13>
|     | `-CXXConstructExpr 0x563ee32a1490 <col:13> 'String' 'void (const String &)'
|     |   `-DeclRefExpr 0x563ee32a1470 <col:13> 'const String' lvalue ParmVar 0x563ee329e158 'x' 'const String &'
|     `-IfStmt 0x563ee32a17c8 <line:546:7, line:549:20> has_else
|       |-ImplicitCastExpr 0x563ee32a1558 <line:546:11> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x563ee32a1540 <col:11> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x563ee32a1520 <col:11> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x563ee32a14f0 <col:11> '<bound member function type>' .operator int (String::*)() const 0x563ee2ec5a18
|       |       `-DeclRefExpr 0x563ee32a14d0 <col:11> 'const String' lvalue ParmVar 0x563ee329e158 'x' 'const String &'
|       |-ReturnStmt 0x563ee32a16e0 <line:547:6, col:29>
|       | `-ExprWithCleanups 0x563ee32a16c8 <col:13, col:29> 'String'
|       |   `-CXXConstructExpr 0x563ee32a1698 <col:13, col:29> 'String' 'void (String &&)' elidable
|       |     `-MaterializeTemporaryExpr 0x563ee32a1680 <col:13, col:29> 'String' xvalue
|       |       `-CXXBindTemporaryExpr 0x563ee32a1660 <col:13, col:29> 'String' (CXXTemporary 0x563ee32a1660)
|       |         `-CallExpr 0x563ee32a1610 <col:13, col:29> 'String'
|       |           |-ImplicitCastExpr 0x563ee32a15f8 <col:13> 'String (*)(const char *, const String &)' <FunctionToPointerDecay>
|       |           | `-DeclRefExpr 0x563ee32a1570 <col:13> 'String (const char *, const String &)' lvalue CXXMethod 0x563ee329d990 'make_anno' 'String (const char *, const String &)'
|       |           |-ImplicitCastExpr 0x563ee32a1640 <col:23> 'const char *' <ArrayToPointerDecay>
|       |           | `-StringLiteral 0x563ee32a1590 <col:23> 'const char [2]' lvalue "l"
|       |           `-DeclRefExpr 0x563ee32a15b0 <col:28> 'const String' lvalue ParmVar 0x563ee329e158 'x' 'const String &'
|       `-ReturnStmt 0x563ee32a17b8 <line:549:6, col:20>
|         `-ExprWithCleanups 0x563ee32a17a0 <col:13, col:20> 'String'
|           `-CXXConstructExpr 0x563ee32a1770 <col:13, col:20> 'String' 'void (String &&)' elidable
|             `-MaterializeTemporaryExpr 0x563ee32a1758 <col:13, col:20> 'String' xvalue
|               `-CXXBindTemporaryExpr 0x563ee32a1738 <col:13, col:20> 'String' (CXXTemporary 0x563ee32a1738)
|                 `-CXXTemporaryObjectExpr 0x563ee32a1700 <col:13, col:20> 'String' 'void ()'
|-CXXMethodDecl 0x563ee329e3b0 <line:559:5, col:76> col:19 clean_landmark 'String (const String &, bool)' static
| |-ParmVarDecl 0x563ee329e2a0 <col:34, col:48> col:48 landmark 'const String &'
| `-ParmVarDecl 0x563ee329e318 <col:58, col:71> col:63 colon 'bool' cinit
|   `-CXXBoolLiteralExpr 0x563ee329fae8 <col:71> 'bool' false
|-CXXRecordDecl 0x563ee329e460 <line:563:5, col:12> col:12 referenced struct Conversion
|-TypedefDecl 0x563ee329e758 <line:564:5, col:60> col:22 referenced ConversionFunction 'String (*)(int, __va_list_tag *)'
| `-PointerType 0x563ee329e6f0 'String (*)(int, __va_list_tag *)'
|   `-ParenType 0x563ee329e690 'String (int, __va_list_tag *)' sugar
|     `-FunctionProtoType 0x563ee329e650 'String (int, __va_list_tag *)' cdecl
|       |-RecordType 0x563ee2ec22b0 'String'
|       | `-CXXRecord 0x563ee2ec2220 'String'
|       |-BuiltinType 0x563ee2b90370 'int'
|       `-DecayedType 0x563ee322b0a0 '__va_list_tag *' sugar
|         |-TypedefType 0x563ee322b070 'va_list' sugar
|         | |-Typedef 0x563ee2db3360 'va_list'
|         | `-TypedefType 0x563ee2db3310 '__gnuc_va_list' sugar
|         |   |-Typedef 0x563ee2ceaf38 '__gnuc_va_list'
|         |   `-TypedefType 0x563ee2ceaea0 '__builtin_va_list' sugar
|         |     |-Typedef 0x563ee2bd1bd8 '__builtin_va_list'
|         |     `-ConstantArrayType 0x563ee2bd1b80 '__va_list_tag [1]' 1 
|         |       `-RecordType 0x563ee2b910c0 '__va_list_tag'
|         |         `-CXXRecord 0x563ee2b91028 '__va_list_tag'
|         `-PointerType 0x563ee2db8c00 '__va_list_tag *'
|           `-RecordType 0x563ee2b910c0 '__va_list_tag'
|             `-CXXRecord 0x563ee2b91028 '__va_list_tag'
|-EnumDecl 0x563ee329e7b0 <line:565:5, line:576:5> line:565:10 ConversionFlags
| |-EnumConstantDecl 0x563ee329e8b0 <line:566:2, col:16> col:2 cf_zero_pad 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x563ee329ee10 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563ee329e890 <col:16> 'int' Int: 1
| |     `-IntegerLiteral 0x563ee329e870 <col:16> 'int' 1
| |-EnumConstantDecl 0x563ee329e940 <line:567:2, col:21> col:2 cf_plus_positive 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x563ee329ee28 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563ee329e920 <col:21> 'int' Int: 2
| |     `-IntegerLiteral 0x563ee329e900 <col:21> 'int' 2
| |-EnumConstantDecl 0x563ee329e9d0 <line:568:2, col:22> col:2 cf_space_positive 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x563ee329ee40 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563ee329e9b0 <col:22> 'int' Int: 4
| |     `-IntegerLiteral 0x563ee329e990 <col:22> 'int' 4
| |-EnumConstantDecl 0x563ee329ea60 <line:569:2, col:17> col:2 cf_left_just 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x563ee329ee58 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563ee329ea40 <col:17> 'int' Int: 8
| |     `-IntegerLiteral 0x563ee329ea20 <col:17> 'int' 8
| |-EnumConstantDecl 0x563ee329eaf0 <line:570:2, col:22> col:2 cf_alternate_form 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x563ee329ee70 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563ee329ead0 <col:22> 'int' Int: 16
| |     `-IntegerLiteral 0x563ee329eab0 <col:22> 'int' 16
| |-EnumConstantDecl 0x563ee329eb80 <line:571:2, col:19> col:2 cf_singlequote 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x563ee329ee88 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563ee329eb60 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x563ee329eb40 <col:19> 'int' 32
| |-EnumConstantDecl 0x563ee329ec10 <line:572:2, col:17> col:2 cf_uppercase 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x563ee329eea0 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563ee329ebf0 <col:17> 'int' Int: 64
| |     `-IntegerLiteral 0x563ee329ebd0 <col:17> 'int' 64
| |-EnumConstantDecl 0x563ee329eca0 <line:573:2, col:14> col:2 cf_signed 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x563ee329eeb8 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563ee329ec80 <col:14> 'int' Int: 128
| |     `-IntegerLiteral 0x563ee329ec60 <col:14> 'int' 128
| |-EnumConstantDecl 0x563ee329ed30 <line:574:2, col:16> col:2 cf_negative 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x563ee329eed0 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563ee329ed10 <col:16> 'int' Int: 256
| |     `-IntegerLiteral 0x563ee329ecf0 <col:16> 'int' 256
| `-EnumConstantDecl 0x563ee329edc0 <line:575:2, col:12> col:2 cf_utf8 'ErrorHandler::ConversionFlags'
|   `-ImplicitCastExpr 0x563ee329eee8 <col:12> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x563ee329eda0 <col:12> 'int' Int: 1024
|       `-IntegerLiteral 0x563ee329ed80 <col:12> 'int' 1024
|-CXXMethodDecl 0x563ee329f0f8 <line:577:5, col:82> col:24 add_conversion 'ErrorHandler::Conversion *(const String &, ErrorHandler::ConversionFunction)' static
| |-ParmVarDecl 0x563ee329ef10 <col:39, col:53> col:53 name 'const String &'
| `-ParmVarDecl 0x563ee329efb0 <col:59, col:78> col:78 func 'ErrorHandler::ConversionFunction':'String (*)(int, __va_list_tag *)'
|-CXXMethodDecl 0x563ee329f280 <line:578:5, col:56> col:16 remove_conversion 'int (ErrorHandler::Conversion *)' static
| `-ParmVarDecl 0x563ee329f1b8 <col:34, col:46> col:46 conversion 'ErrorHandler::Conversion *'
|-AccessSpecDecl 0x563ee329f328 <line:580:3, col:10> col:3 private
|-FieldDecl 0x563ee329f368 <line:582:5, col:9> col:9 referenced _nerrors 'int'
|-VarDecl 0x563ee329f3c8 <line:584:5, col:26> col:26 used the_default_handler 'ErrorHandler *' static
|-VarDecl 0x563ee329f440 <line:585:5, col:26> col:26 used the_silent_handler 'ErrorHandler *' static
|-CXXMethodDecl 0x563ee329f840 <line:587:5, line:590:14> line:587:24 used skip_anno 'const char *(const String &, const char *, const char *, String *, String *, bool)' static
| |-ParmVarDecl 0x563ee329f4b8 <col:34, col:48> col:48 str 'const String &'
| |-ParmVarDecl 0x563ee329f538 <line:588:6, col:18> col:18 begin 'const char *'
| |-ParmVarDecl 0x563ee329f5b8 <col:25, col:37> col:37 end 'const char *'
| |-ParmVarDecl 0x563ee329f630 <line:589:6, col:14> col:14 name_result 'String *'
| |-ParmVarDecl 0x563ee329f6a8 <col:27, col:35> col:35 value_result 'String *'
| `-ParmVarDecl 0x563ee329f720 <line:590:6, col:11> col:11 raw 'bool'
|-CXXMethodDecl 0x563ee329f968 <line:90:7> col:7 implicit operator= 'ErrorHandler &(const ErrorHandler &)' inline default noexcept-unevaluated 0x563ee329f968
| `-ParmVarDecl 0x563ee329fa78 <col:7> col:7 'const ErrorHandler &'
`-CXXConstructorDecl 0x563ee32a1b78 <col:7> col:7 implicit constexpr ErrorHandler 'void (const ErrorHandler &)' inline default noexcept-unevaluated 0x563ee32a1b78
  `-ParmVarDecl 0x563ee32a1c88 <col:7> col:7 'const ErrorHandler &'

Layout: <CGRecordLayout
  LLVMType:%class.ErrorHandler = type <{ i32 (...)**, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.ErrorHandler.base = type <{ i32 (...)**, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563ee30f2370 <../dummy_inc/click/handler.hh:290:5, line:293:5> line:290:5 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x563ee30f24c0 <line:291:2, col:18> col:18 h 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
|-FieldDecl 0x563ee30f2540 <line:292:2, col:22> col:22 referenced r 'ReadHandlerCallback':'String (*)(Element *, void *)'
|-CXXConstructorDecl 0x563ee30f3338 <line:290:5> col:5 implicit constexpr  'void (const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &)' inline default trivial noexcept-unevaluated 0x563ee30f3338
| `-ParmVarDecl 0x563ee30f3448 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &'
|-CXXConstructorDecl 0x563ee30f34e8 <col:5> col:5 implicit constexpr  'void (Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&)' inline default trivial noexcept-unevaluated 0x563ee30f34e8
| `-ParmVarDecl 0x563ee30f35f8 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&'
|-CXXDestructorDecl 0x563ee30f3668 <col:5> col:5 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x563ee30f3668
|-CXXMethodDecl 0x563ee30f3f38 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &(const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &)' inline default trivial noexcept-unevaluated 0x563ee30f3f38
| `-ParmVarDecl 0x563ee30f4048 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &'
|-CXXMethodDecl 0x563ee30f40b8 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &(Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&)' inline default trivial noexcept-unevaluated 0x563ee30f40b8
| `-ParmVarDecl 0x563ee30f41c8 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&'
`-CXXConstructorDecl 0x563ee32e9fe0 <col:5> col:5 implicit used  'void () noexcept' inline default trivial
  `-CompoundStmt 0x563ee32ea0c0 <col:5>

Layout: <CGRecordLayout
  LLVMType:%union.anon = type { i32 (i32, %class.String*, %class.Element*, %class.Handler*, %class.ErrorHandler*)* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563ee30f2670 <../dummy_inc/click/handler.hh:294:5, line:297:5> line:294:5 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x563ee30f2798 <line:295:2, col:18> col:18 h 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
|-FieldDecl 0x563ee30f2820 <line:296:2, col:23> col:23 referenced w 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
|-CXXConstructorDecl 0x563ee30f3798 <line:294:5> col:5 implicit constexpr  'void (const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &)' inline default trivial noexcept-unevaluated 0x563ee30f3798
| `-ParmVarDecl 0x563ee30f38a8 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &'
|-CXXConstructorDecl 0x563ee30f3948 <col:5> col:5 implicit constexpr  'void (Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&)' inline default trivial noexcept-unevaluated 0x563ee30f3948
| `-ParmVarDecl 0x563ee30f3a58 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&'
|-CXXDestructorDecl 0x563ee30f3ac8 <col:5> col:5 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x563ee30f3ac8
|-CXXMethodDecl 0x563ee30f4268 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &(const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &)' inline default trivial noexcept-unevaluated 0x563ee30f4268
| `-ParmVarDecl 0x563ee30f4378 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &'
|-CXXMethodDecl 0x563ee30f43e8 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &(Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&)' inline default trivial noexcept-unevaluated 0x563ee30f43e8
| `-ParmVarDecl 0x563ee30f44f8 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&'
`-CXXConstructorDecl 0x563ee32ea120 <col:5> col:5 implicit used  'void () noexcept' inline default trivial
  `-CompoundStmt 0x563ee32ea200 <col:5>

Layout: <CGRecordLayout
  LLVMType:%union.anon.11 = type { i32 (i32, %class.String*, %class.Element*, %class.Handler*, %class.ErrorHandler*)* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563ee30edcf8 prev 0x563ee30ed190 <../dummy_inc/click/handler.hh:19:1, line:313:1> line:19:7 class Handler definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x563ee30eddf0 <col:1, col:7> col:7 implicit referenced class Handler
|-AccessSpecDecl 0x563ee30ede80 <col:17, col:23> col:17 public
|-EnumDecl 0x563ee30edea8 <line:21:5, line:59:5> line:21:10 Flags
| |-EnumConstantDecl 0x563ee30edfb0 <line:22:2, col:11> col:2 referenced f_read 'Handler::Flags'
| | `-ImplicitCastExpr 0x563ee30eed00 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563ee30edf90 <col:11> 'int' Int: 1
| |     `-IntegerLiteral 0x563ee30edf70 <col:11> 'int' 1
| |-EnumConstantDecl 0x563ee30ee040 <line:23:2, col:12> col:2 referenced f_write 'Handler::Flags'
| | `-ImplicitCastExpr 0x563ee30eed18 <col:12> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563ee30ee020 <col:12> 'int' Int: 2
| |     `-IntegerLiteral 0x563ee30ee000 <col:12> 'int' 2
| |-EnumConstantDecl 0x563ee30ee0d0 <line:24:2, col:17> col:2 referenced f_read_param 'Handler::Flags'
| | `-ImplicitCastExpr 0x563ee30eed30 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563ee30ee0b0 <col:17> 'int' Int: 4
| |     `-IntegerLiteral 0x563ee30ee090 <col:17> 'int' 4
| |-EnumConstantDecl 0x563ee30ee160 <line:25:2, col:16> col:2 referenced f_exclusive 'Handler::Flags'
| | `-ImplicitCastExpr 0x563ee30eed48 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563ee30ee140 <col:16> 'int' Int: 0
| |     `-IntegerLiteral 0x563ee30ee120 <col:16> 'int' 0
| |-EnumConstantDecl 0x563ee30ee1f0 <line:28:2, col:19> col:2 referenced f_nonexclusive 'Handler::Flags'
| | `-ImplicitCastExpr 0x563ee30eed60 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563ee30ee1d0 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x563ee30ee1b0 <col:19> 'int' 32
| |-EnumConstantDecl 0x563ee30ee280 <line:31:2, col:10> col:2 referenced f_raw 'Handler::Flags'
| | `-ImplicitCastExpr 0x563ee30eed78 <col:10> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563ee30ee260 <col:10> 'int' Int: 64
| |     `-IntegerLiteral 0x563ee30ee240 <col:10> 'int' 64
| |-EnumConstantDecl 0x563ee30ee310 <line:32:2, col:19> col:2 referenced f_read_private 'Handler::Flags'
| | `-ImplicitCastExpr 0x563ee30eed90 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563ee30ee2f0 <col:19> 'int' Int: 128
| |     `-IntegerLiteral 0x563ee30ee2d0 <col:19> 'int' 128
| |-EnumConstantDecl 0x563ee30ee3a0 <line:34:2, col:20> col:2 referenced f_write_private 'Handler::Flags'
| | `-ImplicitCastExpr 0x563ee30eeda8 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563ee30ee380 <col:20> 'int' Int: 256
| |     `-IntegerLiteral 0x563ee30ee360 <col:20> 'int' 256
| |-EnumConstantDecl 0x563ee30ee430 <line:36:2, col:17> col:2 referenced f_deprecated 'Handler::Flags'
| | `-ImplicitCastExpr 0x563ee30eedc0 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563ee30ee410 <col:17> 'int' Int: 512
| |     `-IntegerLiteral 0x563ee30ee3f0 <col:17> 'int' 512
| |-EnumConstantDecl 0x563ee30ee4c0 <line:38:2, col:15> col:2 referenced f_uncommon 'Handler::Flags'
| | `-ImplicitCastExpr 0x563ee30eedd8 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563ee30ee4a0 <col:15> 'int' Int: 1024
| |     `-IntegerLiteral 0x563ee30ee480 <col:15> 'int' 1024
| |-EnumConstantDecl 0x563ee30ee550 <line:40:2, col:11> col:2 referenced f_calm 'Handler::Flags'
| | `-ImplicitCastExpr 0x563ee30eedf0 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563ee30ee530 <col:11> 'int' Int: 2048
| |     `-IntegerLiteral 0x563ee30ee510 <col:11> 'int' 2048
| |-EnumConstantDecl 0x563ee30ee5e0 <line:41:2, col:16> col:2 referenced f_expensive 'Handler::Flags'
| | `-ImplicitCastExpr 0x563ee30eee08 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563ee30ee5c0 <col:16> 'int' Int: 4096
| |     `-IntegerLiteral 0x563ee30ee5a0 <col:16> 'int' 4096
| |-EnumConstantDecl 0x563ee30ee670 <line:42:2, col:13> col:2 referenced f_button 'Handler::Flags'
| | `-ImplicitCastExpr 0x563ee30eee20 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563ee30ee650 <col:13> 'int' Int: 8192
| |     `-IntegerLiteral 0x563ee30ee630 <col:13> 'int' 8192
| |-EnumConstantDecl 0x563ee30ee700 <line:43:2, col:15> col:2 referenced f_checkbox 'Handler::Flags'
| | `-ImplicitCastExpr 0x563ee30eee38 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563ee30ee6e0 <col:15> 'int' Int: 16384
| |     `-IntegerLiteral 0x563ee30ee6c0 <col:15> 'int' 16384
| |-EnumConstantDecl 0x563ee30ee7d0 <line:45:2, col:20> col:2 referenced f_driver0 'Handler::Flags'
| | `-ConstantExpr 0x563ee30ee7b0 <col:14, col:20> 'unsigned int' Int: 67108864
| |   `-BinaryOperator 0x563ee30ee790 <col:14, col:20> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x563ee30ee750 <col:14> 'unsigned int' 1
| |     `-IntegerLiteral 0x563ee30ee770 <col:20> 'int' 26
| |-EnumConstantDecl 0x563ee30ee8a0 <line:46:9, col:27> col:9 referenced f_driver1 'Handler::Flags'
| | `-ConstantExpr 0x563ee30ee880 <col:21, col:27> 'unsigned int' Int: 134217728
| |   `-BinaryOperator 0x563ee30ee860 <col:21, col:27> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x563ee30ee820 <col:21> 'unsigned int' 1
| |     `-IntegerLiteral 0x563ee30ee840 <col:27> 'int' 27
| |-EnumConstantDecl 0x563ee30ee930 <line:48:2, col:17> col:2 referenced f_user_shift 'Handler::Flags'
| | `-ImplicitCastExpr 0x563ee30eee50 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563ee30ee910 <col:17> 'int' Int: 28
| |     `-IntegerLiteral 0x563ee30ee8f0 <col:17> 'int' 28
| |-EnumConstantDecl 0x563ee30eea00 <line:49:2, col:18> col:2 referenced f_user0 'Handler::Flags'
| | `-ConstantExpr 0x563ee30ee9e0 <col:12, col:18> 'unsigned int' Int: 268435456
| |   `-BinaryOperator 0x563ee30ee9c0 <col:12, col:18> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x563ee30ee980 <col:12> 'unsigned int' 1
| |     `-DeclRefExpr 0x563ee30ee9a0 <col:18> 'int' EnumConstant 0x563ee30ee930 'f_user_shift' 'Handler::Flags'
| |-EnumConstantDecl 0x563ee30eea90 <line:54:2, col:25> col:2 referenced f_read_comprehensive 'Handler::Flags'
| | `-ImplicitCastExpr 0x563ee30eee68 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563ee30eea70 <col:25> 'int' Int: 8
| |     `-IntegerLiteral 0x563ee30eea50 <col:25> 'int' 8
| |-EnumConstantDecl 0x563ee30eeb20 <line:55:2, col:26> col:2 referenced f_write_comprehensive 'Handler::Flags'
| | `-ImplicitCastExpr 0x563ee30eee80 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563ee30eeb00 <col:26> 'int' Int: 16
| |     `-IntegerLiteral 0x563ee30eeae0 <col:26> 'int' 16
| `-EnumConstantDecl 0x563ee30eecb0 <line:56:2, col:71> col:2 referenced f_special 'Handler::Flags'
|   `-ImplicitCastExpr 0x563ee30eee98 <col:14, col:71> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x563ee30eec90 <col:14, col:71> 'int' Int: 31
|       `-BinaryOperator 0x563ee30eec70 <col:14, col:71> 'int' '|'
|         |-BinaryOperator 0x563ee30eec30 <col:14, col:48> 'int' '|'
|         | |-BinaryOperator 0x563ee30eebf0 <col:14, col:33> 'int' '|'
|         | | |-BinaryOperator 0x563ee30eebb0 <col:14, col:23> 'int' '|'
|         | | | |-DeclRefExpr 0x563ee30eeb70 <col:14> 'int' EnumConstant 0x563ee30edfb0 'f_read' 'Handler::Flags'
|         | | | `-DeclRefExpr 0x563ee30eeb90 <col:23> 'int' EnumConstant 0x563ee30ee040 'f_write' 'Handler::Flags'
|         | | `-DeclRefExpr 0x563ee30eebd0 <col:33> 'int' EnumConstant 0x563ee30ee0d0 'f_read_param' 'Handler::Flags'
|         | `-DeclRefExpr 0x563ee30eec10 <col:48> 'int' EnumConstant 0x563ee30eea90 'f_read_comprehensive' 'Handler::Flags'
|         `-DeclRefExpr 0x563ee30eec50 <col:71> 'int' EnumConstant 0x563ee30eeb20 'f_write_comprehensive' 'Handler::Flags'
|-CXXMethodDecl 0x563ee30eeef8 <line:62:5, line:64:5> line:62:26 name 'const String &() const' inline
| `-CompoundStmt 0x563ee30f4918 <col:39, line:64:5>
|   `-ReturnStmt 0x563ee30f4908 <line:63:2, col:9>
|     `-MemberExpr 0x563ee30f48d8 <col:9> 'const String' lvalue ->_name 0x563ee30f2320
|       `-CXXThisExpr 0x563ee30f48c8 <col:9> 'const Handler *' implicit this
|-CXXMethodDecl 0x563ee30eefb8 <line:69:5, line:71:5> line:69:21 flags 'uint32_t () const' inline
| `-CompoundStmt 0x563ee30f4998 <col:35, line:71:5>
|   `-ReturnStmt 0x563ee30f4988 <line:70:2, col:9>
|     `-ImplicitCastExpr 0x563ee30f4970 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x563ee30f4940 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x563ee30f2a30
|         `-CXXThisExpr 0x563ee30f4930 <col:9> 'const Handler *' implicit this
|-CXXMethodDecl 0x563ee30ef108 <line:75:5, line:77:5> line:75:18 user_data 'void *(int) const' inline
| |-ParmVarDecl 0x563ee30ef070 <col:28, col:32> col:32 used op 'int'
| `-CompoundStmt 0x563ee30f4b18 <col:42, line:77:5>
|   `-ReturnStmt 0x563ee30f4b08 <line:76:2, col:44>
|     `-ImplicitCastExpr 0x563ee30f4af0 <col:9, col:44> 'void *' <LValueToRValue>
|       `-ConditionalOperator 0x563ee30f4ac0 <col:9, col:44> 'void *const' lvalue
|         |-BinaryOperator 0x563ee30f4a20 <col:9, col:15> 'bool' '=='
|         | |-ImplicitCastExpr 0x563ee30f49f0 <col:9> 'int' <LValueToRValue>
|         | | `-DeclRefExpr 0x563ee30f49b0 <col:9> 'int' lvalue ParmVar 0x563ee30ef070 'op' 'int'
|         | `-ImplicitCastExpr 0x563ee30f4a08 <col:15> 'int' <IntegralCast>
|         |   `-DeclRefExpr 0x563ee30f49d0 <col:15> 'Handler::Flags' EnumConstant 0x563ee30ee040 'f_write' 'Handler::Flags'
|         |-MemberExpr 0x563ee30f4a50 <col:25> 'void *const' lvalue ->_write_user_data 0x563ee30f29d0
|         | `-CXXThisExpr 0x563ee30f4a40 <col:25> 'const Handler *' implicit this
|         `-MemberExpr 0x563ee30f4a90 <col:44> 'void *const' lvalue ->_read_user_data 0x563ee30f2968
|           `-CXXThisExpr 0x563ee30f4a80 <col:44> 'const Handler *' implicit this
|-CXXMethodDecl 0x563ee30ef1d8 <line:80:5, line:82:5> line:80:18 read_user_data 'void *() const' inline
| `-CompoundStmt 0x563ee30f4b98 <col:41, line:82:5>
|   `-ReturnStmt 0x563ee30f4b88 <line:81:2, col:9>
|     `-ImplicitCastExpr 0x563ee30f4b70 <col:9> 'void *' <LValueToRValue>
|       `-MemberExpr 0x563ee30f4b40 <col:9> 'void *const' lvalue ->_read_user_data 0x563ee30f2968
|         `-CXXThisExpr 0x563ee30f4b30 <col:9> 'const Handler *' implicit this
|-CXXMethodDecl 0x563ee30ef2a0 <line:85:5, line:87:5> line:85:18 write_user_data 'void *() const' inline
| `-CompoundStmt 0x563ee30f4c18 <col:42, line:87:5>
|   `-ReturnStmt 0x563ee30f4c08 <line:86:2, col:9>
|     `-ImplicitCastExpr 0x563ee30f4bf0 <col:9> 'void *' <LValueToRValue>
|       `-MemberExpr 0x563ee30f4bc0 <col:9> 'void *const' lvalue ->_write_user_data 0x563ee30f29d0
|         `-CXXThisExpr 0x563ee30f4bb0 <col:9> 'const Handler *' implicit this
|-CXXMethodDecl 0x563ee30ef368 <line:90:5, col:63> col:18 user_data1 'void *() const' inline
| `-DeprecatedAttr 0x563ee30ef408 <col:52> "" ""
|-CXXMethodDecl 0x563ee30ef4a0 <line:91:5, col:63> col:18 user_data2 'void *() const' inline
| `-DeprecatedAttr 0x563ee30ef540 <col:52> "" ""
|-CXXMethodDecl 0x563ee30ef5d0 <line:96:5, line:98:5> line:96:17 readable 'bool () const' inline
| `-CompoundStmt 0x563ee30f4d08 <col:34, line:98:5>
|   `-ReturnStmt 0x563ee30f4cf8 <line:97:2, col:18>
|     `-ImplicitCastExpr 0x563ee30f4ce0 <col:9, col:18> 'bool' <IntegralToBoolean>
|       `-BinaryOperator 0x563ee30f4cc0 <col:9, col:18> 'unsigned int' '&'
|         |-ImplicitCastExpr 0x563ee30f4c90 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-MemberExpr 0x563ee30f4c40 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x563ee30f2a30
|         |   `-CXXThisExpr 0x563ee30f4c30 <col:9> 'const Handler *' implicit this
|         `-ImplicitCastExpr 0x563ee30f4ca8 <col:18> 'unsigned int' <IntegralCast>
|           `-DeclRefExpr 0x563ee30f4c70 <col:18> 'Handler::Flags' EnumConstant 0x563ee30edfb0 'f_read' 'Handler::Flags'
|-CXXMethodDecl 0x563ee30ef690 <line:102:5, line:104:5> line:102:17 read_param 'bool () const' inline
| `-CompoundStmt 0x563ee30f4df8 <col:36, line:104:5>
|   `-ReturnStmt 0x563ee30f4de8 <line:103:2, col:18>
|     `-ImplicitCastExpr 0x563ee30f4dd0 <col:9, col:18> 'bool' <IntegralToBoolean>
|       `-BinaryOperator 0x563ee30f4db0 <col:9, col:18> 'unsigned int' '&'
|         |-ImplicitCastExpr 0x563ee30f4d80 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-MemberExpr 0x563ee30f4d30 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x563ee30f2a30
|         |   `-CXXThisExpr 0x563ee30f4d20 <col:9> 'const Handler *' implicit this
|         `-ImplicitCastExpr 0x563ee30f4d98 <col:18> 'unsigned int' <IntegralCast>
|           `-DeclRefExpr 0x563ee30f4d60 <col:18> 'Handler::Flags' EnumConstant 0x563ee30ee0d0 'f_read_param' 'Handler::Flags'
|-CXXMethodDecl 0x563ee30ef750 <line:111:5, line:113:5> line:111:17 used read_visible 'bool () const' inline
| `-CompoundStmt 0x563ee30f4fd8 <col:38, line:113:5>
|   `-ReturnStmt 0x563ee30f4fc8 <line:112:2, col:49>
|     `-BinaryOperator 0x563ee30f4fa8 <col:9, col:49> 'bool' '=='
|       |-ParenExpr 0x563ee30f4f50 <col:9, col:44> 'unsigned int'
|       | `-BinaryOperator 0x563ee30f4f30 <col:10, col:43> 'unsigned int' '&'
|       |   |-ImplicitCastExpr 0x563ee30f4f00 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-MemberExpr 0x563ee30f4e20 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x563ee30f2a30
|       |   |   `-CXXThisExpr 0x563ee30f4e10 <col:10> 'const Handler *' implicit this
|       |   `-ImplicitCastExpr 0x563ee30f4f18 <col:19, col:43> 'unsigned int' <IntegralCast>
|       |     `-ParenExpr 0x563ee30f4ee0 <col:19, col:43> 'int'
|       |       `-BinaryOperator 0x563ee30f4ec0 <col:20, col:29> 'int' '|'
|       |         |-ImplicitCastExpr 0x563ee30f4e90 <col:20> 'int' <IntegralCast>
|       |         | `-DeclRefExpr 0x563ee30f4e50 <col:20> 'Handler::Flags' EnumConstant 0x563ee30edfb0 'f_read' 'Handler::Flags'
|       |         `-ImplicitCastExpr 0x563ee30f4ea8 <col:29> 'int' <IntegralCast>
|       |           `-DeclRefExpr 0x563ee30f4e70 <col:29> 'Handler::Flags' EnumConstant 0x563ee30ee310 'f_read_private' 'Handler::Flags'
|       `-ImplicitCastExpr 0x563ee30f4f90 <col:49> 'unsigned int' <IntegralCast>
|         `-DeclRefExpr 0x563ee30f4f70 <col:49> 'Handler::Flags' EnumConstant 0x563ee30edfb0 'f_read' 'Handler::Flags'
|-CXXMethodDecl 0x563ee30ef810 <line:116:5, line:118:5> line:116:17 writable 'bool () const' inline
| `-CompoundStmt 0x563ee30f50c8 <col:34, line:118:5>
|   `-ReturnStmt 0x563ee30f50b8 <line:117:2, col:18>
|     `-ImplicitCastExpr 0x563ee30f50a0 <col:9, col:18> 'bool' <IntegralToBoolean>
|       `-BinaryOperator 0x563ee30f5080 <col:9, col:18> 'unsigned int' '&'
|         |-ImplicitCastExpr 0x563ee30f5050 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-MemberExpr 0x563ee30f5000 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x563ee30f2a30
|         |   `-CXXThisExpr 0x563ee30f4ff0 <col:9> 'const Handler *' implicit this
|         `-ImplicitCastExpr 0x563ee30f5068 <col:18> 'unsigned int' <IntegralCast>
|           `-DeclRefExpr 0x563ee30f5030 <col:18> 'Handler::Flags' EnumConstant 0x563ee30ee040 'f_write' 'Handler::Flags'
|-CXXMethodDecl 0x563ee30ef8d0 <line:125:5, line:127:5> line:125:17 used write_visible 'bool () const' inline
| `-CompoundStmt 0x563ee30f52a8 <col:39, line:127:5>
|   `-ReturnStmt 0x563ee30f5298 <line:126:2, col:51>
|     `-BinaryOperator 0x563ee30f5278 <col:9, col:51> 'bool' '=='
|       |-ParenExpr 0x563ee30f5220 <col:9, col:46> 'unsigned int'
|       | `-BinaryOperator 0x563ee30f5200 <col:10, col:45> 'unsigned int' '&'
|       |   |-ImplicitCastExpr 0x563ee30f51d0 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-MemberExpr 0x563ee30f50f0 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x563ee30f2a30
|       |   |   `-CXXThisExpr 0x563ee30f50e0 <col:10> 'const Handler *' implicit this
|       |   `-ImplicitCastExpr 0x563ee30f51e8 <col:19, col:45> 'unsigned int' <IntegralCast>
|       |     `-ParenExpr 0x563ee30f51b0 <col:19, col:45> 'int'
|       |       `-BinaryOperator 0x563ee30f5190 <col:20, col:30> 'int' '|'
|       |         |-ImplicitCastExpr 0x563ee30f5160 <col:20> 'int' <IntegralCast>
|       |         | `-DeclRefExpr 0x563ee30f5120 <col:20> 'Handler::Flags' EnumConstant 0x563ee30ee040 'f_write' 'Handler::Flags'
|       |         `-ImplicitCastExpr 0x563ee30f5178 <col:30> 'int' <IntegralCast>
|       |           `-DeclRefExpr 0x563ee30f5140 <col:30> 'Handler::Flags' EnumConstant 0x563ee30ee3a0 'f_write_private' 'Handler::Flags'
|       `-ImplicitCastExpr 0x563ee30f5260 <col:51> 'unsigned int' <IntegralCast>
|         `-DeclRefExpr 0x563ee30f5240 <col:51> 'Handler::Flags' EnumConstant 0x563ee30ee040 'f_write' 'Handler::Flags'
|-CXXMethodDecl 0x563ee30ef990 <line:130:5, line:132:5> line:130:17 visible 'bool () const' inline
| `-CompoundStmt 0x563ee30f53b0 <col:33, line:132:5>
|   `-ReturnStmt 0x563ee30f53a0 <line:131:2, col:41>
|     `-BinaryOperator 0x563ee30f5380 <col:9, col:41> 'bool' '||'
|       |-CXXMemberCallExpr 0x563ee30f5300 <col:9, col:22> 'bool'
|       | `-MemberExpr 0x563ee30f52d0 <col:9> '<bound member function type>' ->read_visible 0x563ee30ef750
|       |   `-CXXThisExpr 0x563ee30f52c0 <col:9> 'const Handler *' implicit this
|       `-CXXMemberCallExpr 0x563ee30f5360 <col:27, col:41> 'bool'
|         `-MemberExpr 0x563ee30f5330 <col:27> '<bound member function type>' ->write_visible 0x563ee30ef8d0
|           `-CXXThisExpr 0x563ee30f5320 <col:27> 'const Handler *' implicit this
|-CXXMethodDecl 0x563ee30efa50 <line:136:5, line:138:5> line:136:17 allow_concurrent_handlers 'bool () const' inline
| `-CompoundStmt 0x563ee30f54e8 <col:51, line:138:5>
|   `-ReturnStmt 0x563ee30f54d8 <line:137:9, col:40>
|     `-ImplicitCastExpr 0x563ee30f54c0 <col:16, col:40> 'bool' <IntegralToBoolean>
|       `-ParenExpr 0x563ee30f54a0 <col:16, col:40> 'unsigned int'
|         `-BinaryOperator 0x563ee30f5458 <col:17, col:26> 'unsigned int' '&'
|           |-ImplicitCastExpr 0x563ee30f5428 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|           | `-MemberExpr 0x563ee30f53d8 <col:17> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x563ee30f2a30
|           |   `-CXXThisExpr 0x563ee30f53c8 <col:17> 'const Handler *' implicit this
|           `-ImplicitCastExpr 0x563ee30f5440 <col:26> 'unsigned int' <IntegralCast>
|             `-DeclRefExpr 0x563ee30f5408 <col:26> 'Handler::Flags' EnumConstant 0x563ee30ee1f0 'f_nonexclusive' 'Handler::Flags'
|-CXXMethodDecl 0x563ee30efb10 <line:142:5, line:144:5> line:142:17 allow_concurrent_threads 'bool () const' inline
| `-CompoundStmt 0x563ee30f55f8 <col:50, line:144:5>
|   `-ReturnStmt 0x563ee30f55e8 <line:143:9, col:40>
|     `-ImplicitCastExpr 0x563ee30f55d0 <col:16, col:40> 'bool' <IntegralToBoolean>
|       `-ParenExpr 0x563ee30f55b0 <col:16, col:40> 'unsigned int'
|         `-BinaryOperator 0x563ee30f5590 <col:17, col:26> 'unsigned int' '&'
|           |-ImplicitCastExpr 0x563ee30f5560 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|           | `-MemberExpr 0x563ee30f5510 <col:17> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x563ee30f2a30
|           |   `-CXXThisExpr 0x563ee30f5500 <col:17> 'const Handler *' implicit this
|           `-ImplicitCastExpr 0x563ee30f5578 <col:26> 'unsigned int' <IntegralCast>
|             `-DeclRefExpr 0x563ee30f5540 <col:26> 'Handler::Flags' EnumConstant 0x563ee30ee1f0 'f_nonexclusive' 'Handler::Flags'
|-CXXMethodDecl 0x563ee30efbd0 <line:164:5, line:166:5> line:164:17 raw 'bool () const' inline
| `-CompoundStmt 0x563ee30f56e8 <col:29, line:166:5>
|   `-ReturnStmt 0x563ee30f56d8 <line:165:2, col:18>
|     `-ImplicitCastExpr 0x563ee30f56c0 <col:9, col:18> 'bool' <IntegralToBoolean>
|       `-BinaryOperator 0x563ee30f56a0 <col:9, col:18> 'unsigned int' '&'
|         |-ImplicitCastExpr 0x563ee30f5670 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-MemberExpr 0x563ee30f5620 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x563ee30f2a30
|         |   `-CXXThisExpr 0x563ee30f5610 <col:9> 'const Handler *' implicit this
|         `-ImplicitCastExpr 0x563ee30f5688 <col:18> 'unsigned int' <IntegralCast>
|           `-DeclRefExpr 0x563ee30f5650 <col:18> 'Handler::Flags' EnumConstant 0x563ee30ee280 'f_raw' 'Handler::Flags'
|-CXXMethodDecl 0x563ee30efe58 <line:177:5, col:75> col:12 used call_read 'String (Element *, const String &, ErrorHandler *) const'
| |-ParmVarDecl 0x563ee30efc80 <col:22, col:31> col:31 e 'Element *'
| |-ParmVarDecl 0x563ee30efcf8 <col:34, col:48> col:48 param 'const String &'
| `-ParmVarDecl 0x563ee30efd70 <col:55, col:69> col:69 errh 'ErrorHandler *'
|-CXXMethodDecl 0x563ee30f0068 <line:186:5, line:188:5> line:186:19 call_read 'String (Element *, ErrorHandler *) const' inline
| |-ParmVarDecl 0x563ee30eff20 <col:29, col:38> col:38 used e 'Element *'
| |-ParmVarDecl 0x563ee30eff98 <col:41, col:62> col:55 used errh 'ErrorHandler *' cinit
| | `-ImplicitCastExpr 0x563ee30f4800 <col:62> 'ErrorHandler *' <NullToPointer>
| |   `-IntegerLiteral 0x563ee30f47e0 <col:62> 'int' 0
| `-CompoundStmt 0x563ee30f5988 <col:71, line:188:5>
|   `-ReturnStmt 0x563ee30f5978 <line:187:2, col:36>
|     `-ExprWithCleanups 0x563ee30f5960 <col:9, col:36> 'String'
|       `-CXXConstructExpr 0x563ee30f5930 <col:9, col:36> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x563ee30f5918 <col:9, col:36> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x563ee30f58f8 <col:9, col:36> 'String' (CXXTemporary 0x563ee30f58f8)
|             `-CXXMemberCallExpr 0x563ee30f5858 <col:9, col:36> 'String'
|               |-MemberExpr 0x563ee30f5828 <col:9> '<bound member function type>' ->call_read 0x563ee30efe58
|               | `-CXXThisExpr 0x563ee30f5818 <col:9> 'const Handler *' implicit this
|               |-ImplicitCastExpr 0x563ee30f5890 <col:19> 'Element *' <LValueToRValue>
|               | `-DeclRefExpr 0x563ee30f5770 <col:19> 'Element *' lvalue ParmVar 0x563ee30eff20 'e' 'Element *'
|               |-MaterializeTemporaryExpr 0x563ee30f58c0 <col:22, col:29> 'const String' lvalue
|               | `-ImplicitCastExpr 0x563ee30f58a8 <col:22, col:29> 'const String' <NoOp>
|               |   `-CXXBindTemporaryExpr 0x563ee30f57d8 <col:22, col:29> 'String' (CXXTemporary 0x563ee30f57d8)
|               |     `-CXXTemporaryObjectExpr 0x563ee30f57a0 <col:22, col:29> 'String' 'void ()'
|               `-ImplicitCastExpr 0x563ee30f58d8 <col:32> 'ErrorHandler *' <LValueToRValue>
|                 `-DeclRefExpr 0x563ee30f57f8 <col:32> 'ErrorHandler *' lvalue ParmVar 0x563ee30eff98 'errh' 'ErrorHandler *'
|-CXXMethodDecl 0x563ee30f0300 <line:198:5, col:73> col:9 call_write 'int (const String &, Element *, ErrorHandler *) const'
| |-ParmVarDecl 0x563ee30f0128 <col:20, col:34> col:34 value 'const String &'
| |-ParmVarDecl 0x563ee30f01a0 <col:41, col:50> col:50 e 'Element *'
| `-ParmVarDecl 0x563ee30f0218 <col:53, col:67> col:67 errh 'ErrorHandler *'
|-CXXMethodDecl 0x563ee30f0488 <line:207:5, col:37> col:12 unparse_name 'String (Element *) const'
| `-ParmVarDecl 0x563ee30f03c8 <col:25, col:34> col:34 e 'Element *'
|-CXXMethodDecl 0x563ee30f06b8 <line:216:5, col:63> col:19 unparse_name 'String (Element *, const String &)' static
| |-ParmVarDecl 0x563ee30f0540 <col:32, col:41> col:41 e 'Element *'
| `-ParmVarDecl 0x563ee30f05b8 <col:44, col:58> col:58 hname 'const String &'
|-CXXMethodDecl 0x563ee30f07b8 <line:223:5, line:225:5> line:223:34 blank_handler 'const Handler *()' static inline
| `-CompoundStmt 0x563ee30f59e8 <col:50, line:225:5>
|   `-ReturnStmt 0x563ee30f59d8 <line:224:2, col:9>
|     `-ImplicitCastExpr 0x563ee30f59c0 <col:9> 'const Handler *' <LValueToRValue>
|       `-DeclRefExpr 0x563ee30f59a0 <col:9> 'const Handler *' lvalue Var 0x563ee30f2b60 'the_blank_handler' 'const Handler *'
|-EnumDecl 0x563ee30f0858 <line:229:5, line:251:5> line:229:5
| |-EnumConstantDecl 0x563ee30f0960 <line:230:2, col:11> col:2 h_read 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x563ee30f1500 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563ee30f0940 <col:11> 'Handler::Flags' Int: 1
| |     `-DeclRefExpr 0x563ee30f0920 <col:11> 'Handler::Flags' EnumConstant 0x563ee30edfb0 'f_read' 'Handler::Flags'
| |-EnumConstantDecl 0x563ee30f09f0 <line:231:2, col:12> col:2 h_write 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x563ee30f1518 <col:12> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563ee30f09d0 <col:12> 'Handler::Flags' Int: 2
| |     `-DeclRefExpr 0x563ee30f09b0 <col:12> 'Handler::Flags' EnumConstant 0x563ee30ee040 'f_write' 'Handler::Flags'
| |-EnumConstantDecl 0x563ee30f0a80 <line:232:2, col:17> col:2 h_read_param 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x563ee30f1530 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563ee30f0a60 <col:17> 'Handler::Flags' Int: 4
| |     `-DeclRefExpr 0x563ee30f0a40 <col:17> 'Handler::Flags' EnumConstant 0x563ee30ee0d0 'f_read_param' 'Handler::Flags'
| |-EnumConstantDecl 0x563ee30f0b10 <line:233:2, col:16> col:2 h_exclusive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x563ee30f1548 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563ee30f0af0 <col:16> 'Handler::Flags' Int: 0
| |     `-DeclRefExpr 0x563ee30f0ad0 <col:16> 'Handler::Flags' EnumConstant 0x563ee30ee160 'f_exclusive' 'Handler::Flags'
| |-EnumConstantDecl 0x563ee30f0ba0 <line:234:2, col:19> col:2 h_nonexclusive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x563ee30f1560 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563ee30f0b80 <col:19> 'Handler::Flags' Int: 32
| |     `-DeclRefExpr 0x563ee30f0b60 <col:19> 'Handler::Flags' EnumConstant 0x563ee30ee1f0 'f_nonexclusive' 'Handler::Flags'
| |-EnumConstantDecl 0x563ee30f0c30 <line:235:2, col:10> col:2 h_raw 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x563ee30f1578 <col:10> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563ee30f0c10 <col:10> 'Handler::Flags' Int: 64
| |     `-DeclRefExpr 0x563ee30f0bf0 <col:10> 'Handler::Flags' EnumConstant 0x563ee30ee280 'f_raw' 'Handler::Flags'
| |-EnumConstantDecl 0x563ee30f0cc0 <line:236:2, col:19> col:2 h_read_private 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x563ee30f1590 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563ee30f0ca0 <col:19> 'Handler::Flags' Int: 128
| |     `-DeclRefExpr 0x563ee30f0c80 <col:19> 'Handler::Flags' EnumConstant 0x563ee30ee310 'f_read_private' 'Handler::Flags'
| |-EnumConstantDecl 0x563ee30f0d50 <line:237:2, col:20> col:2 h_write_private 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x563ee30f15a8 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563ee30f0d30 <col:20> 'Handler::Flags' Int: 256
| |     `-DeclRefExpr 0x563ee30f0d10 <col:20> 'Handler::Flags' EnumConstant 0x563ee30ee3a0 'f_write_private' 'Handler::Flags'
| |-EnumConstantDecl 0x563ee30f0de0 <line:238:2, col:17> col:2 h_deprecated 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x563ee30f15c0 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563ee30f0dc0 <col:17> 'Handler::Flags' Int: 512
| |     `-DeclRefExpr 0x563ee30f0da0 <col:17> 'Handler::Flags' EnumConstant 0x563ee30ee430 'f_deprecated' 'Handler::Flags'
| |-EnumConstantDecl 0x563ee30f0e70 <line:239:2, col:15> col:2 h_uncommon 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x563ee30f15d8 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563ee30f0e50 <col:15> 'Handler::Flags' Int: 1024
| |     `-DeclRefExpr 0x563ee30f0e30 <col:15> 'Handler::Flags' EnumConstant 0x563ee30ee4c0 'f_uncommon' 'Handler::Flags'
| |-EnumConstantDecl 0x563ee30f0f00 <line:240:2, col:11> col:2 h_calm 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x563ee30f15f0 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563ee30f0ee0 <col:11> 'Handler::Flags' Int: 2048
| |     `-DeclRefExpr 0x563ee30f0ec0 <col:11> 'Handler::Flags' EnumConstant 0x563ee30ee550 'f_calm' 'Handler::Flags'
| |-EnumConstantDecl 0x563ee30f0f90 <line:241:2, col:16> col:2 h_expensive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x563ee30f1608 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563ee30f0f70 <col:16> 'Handler::Flags' Int: 4096
| |     `-DeclRefExpr 0x563ee30f0f50 <col:16> 'Handler::Flags' EnumConstant 0x563ee30ee5e0 'f_expensive' 'Handler::Flags'
| |-EnumConstantDecl 0x563ee30f1020 <line:242:2, col:13> col:2 h_button 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x563ee30f1620 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563ee30f1000 <col:13> 'Handler::Flags' Int: 8192
| |     `-DeclRefExpr 0x563ee30f0fe0 <col:13> 'Handler::Flags' EnumConstant 0x563ee30ee670 'f_button' 'Handler::Flags'
| |-EnumConstantDecl 0x563ee30f10b0 <line:243:2, col:15> col:2 h_checkbox 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x563ee30f1638 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563ee30f1090 <col:15> 'Handler::Flags' Int: 16384
| |     `-DeclRefExpr 0x563ee30f1070 <col:15> 'Handler::Flags' EnumConstant 0x563ee30ee700 'f_checkbox' 'Handler::Flags'
| |-EnumConstantDecl 0x563ee30f1140 <line:244:2, col:20> col:2 h_driver_flag_0 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x563ee30f1650 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563ee30f1120 <col:20> 'Handler::Flags' Int: 67108864
| |     `-DeclRefExpr 0x563ee30f1100 <col:20> 'Handler::Flags' EnumConstant 0x563ee30ee7d0 'f_driver0' 'Handler::Flags'
| |-EnumConstantDecl 0x563ee30f11d0 <line:245:9, col:27> col:9 h_driver_flag_1 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x563ee30f1668 <col:27> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563ee30f11b0 <col:27> 'Handler::Flags' Int: 134217728
| |     `-DeclRefExpr 0x563ee30f1190 <col:27> 'Handler::Flags' EnumConstant 0x563ee30ee8a0 'f_driver1' 'Handler::Flags'
| |-EnumConstantDecl 0x563ee30f1260 <line:246:2, col:22> col:2 h_user_flag_shift 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x563ee30f1680 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563ee30f1240 <col:22> 'Handler::Flags' Int: 28
| |     `-DeclRefExpr 0x563ee30f1220 <col:22> 'Handler::Flags' EnumConstant 0x563ee30ee930 'f_user_shift' 'Handler::Flags'
| |-EnumConstantDecl 0x563ee30f12f0 <line:247:2, col:18> col:2 h_user_flag_0 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x563ee30f1698 <col:18> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563ee30f12d0 <col:18> 'Handler::Flags' Int: 268435456
| |     `-DeclRefExpr 0x563ee30f12b0 <col:18> 'Handler::Flags' EnumConstant 0x563ee30eea00 'f_user0' 'Handler::Flags'
| |-EnumConstantDecl 0x563ee30f1380 <line:248:2, col:25> col:2 h_read_comprehensive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x563ee30f16b0 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563ee30f1360 <col:25> 'Handler::Flags' Int: 8
| |     `-DeclRefExpr 0x563ee30f1340 <col:25> 'Handler::Flags' EnumConstant 0x563ee30eea90 'f_read_comprehensive' 'Handler::Flags'
| |-EnumConstantDecl 0x563ee30f1410 <line:249:2, col:26> col:2 h_write_comprehensive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x563ee30f16c8 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563ee30f13f0 <col:26> 'Handler::Flags' Int: 16
| |     `-DeclRefExpr 0x563ee30f13d0 <col:26> 'Handler::Flags' EnumConstant 0x563ee30eeb20 'f_write_comprehensive' 'Handler::Flags'
| `-EnumConstantDecl 0x563ee30f14b0 <line:250:2, col:20> col:2 h_special_flags 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
|   `-ImplicitCastExpr 0x563ee30f16e0 <col:20> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x563ee30f1490 <col:20> 'Handler::Flags' Int: 31
|       `-DeclRefExpr 0x563ee30f1460 <col:20> 'Handler::Flags' EnumConstant 0x563ee30eecb0 'f_special' 'Handler::Flags'
|-EnumDecl 0x563ee30f16f8 <line:252:5, line:267:5> line:252:10 DeprecatedFlags
| |-EnumConstantDecl 0x563ee30f1800 <line:253:2, col:12> col:2 OP_READ 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x563ee30f1d60 <col:12> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563ee30f17e0 <col:12> 'Handler::Flags' Int: 1
| |     `-DeclRefExpr 0x563ee30f17c0 <col:12> 'Handler::Flags' EnumConstant 0x563ee30edfb0 'f_read' 'Handler::Flags'
| |-EnumConstantDecl 0x563ee30f1890 <line:254:2, col:13> col:2 OP_WRITE 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x563ee30f1d78 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563ee30f1870 <col:13> 'Handler::Flags' Int: 2
| |     `-DeclRefExpr 0x563ee30f1850 <col:13> 'Handler::Flags' EnumConstant 0x563ee30ee040 'f_write' 'Handler::Flags'
| |-EnumConstantDecl 0x563ee30f1920 <line:255:2, col:15> col:2 READ_PARAM 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x563ee30f1d90 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563ee30f1900 <col:15> 'Handler::Flags' Int: 4
| |     `-DeclRefExpr 0x563ee30f18e0 <col:15> 'Handler::Flags' EnumConstant 0x563ee30ee0d0 'f_read_param' 'Handler::Flags'
| |-EnumConstantDecl 0x563ee30f19b0 <line:256:2, col:8> col:2 RAW 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x563ee30f1da8 <col:8> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563ee30f1990 <col:8> 'Handler::Flags' Int: 64
| |     `-DeclRefExpr 0x563ee30f1970 <col:8> 'Handler::Flags' EnumConstant 0x563ee30ee280 'f_raw' 'Handler::Flags'
| |-EnumConstantDecl 0x563ee30f1a40 <line:261:2, col:9> col:2 CALM 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x563ee30f1dc0 <col:9> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563ee30f1a20 <col:9> 'Handler::Flags' Int: 2048
| |     `-DeclRefExpr 0x563ee30f1a00 <col:9> 'Handler::Flags' EnumConstant 0x563ee30ee550 'f_calm' 'Handler::Flags'
| |-EnumConstantDecl 0x563ee30f1ad0 <line:262:2, col:14> col:2 EXPENSIVE 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x563ee30f1dd8 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563ee30f1ab0 <col:14> 'Handler::Flags' Int: 4096
| |     `-DeclRefExpr 0x563ee30f1a90 <col:14> 'Handler::Flags' EnumConstant 0x563ee30ee5e0 'f_expensive' 'Handler::Flags'
| |-EnumConstantDecl 0x563ee30f1b60 <line:263:2, col:11> col:2 BUTTON 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x563ee30f1df0 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563ee30f1b40 <col:11> 'Handler::Flags' Int: 8192
| |     `-DeclRefExpr 0x563ee30f1b20 <col:11> 'Handler::Flags' EnumConstant 0x563ee30ee670 'f_button' 'Handler::Flags'
| |-EnumConstantDecl 0x563ee30f1bf0 <line:264:2, col:13> col:2 CHECKBOX 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x563ee30f1e08 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563ee30f1bd0 <col:13> 'Handler::Flags' Int: 16384
| |     `-DeclRefExpr 0x563ee30f1bb0 <col:13> 'Handler::Flags' EnumConstant 0x563ee30ee700 'f_checkbox' 'Handler::Flags'
| |-EnumConstantDecl 0x563ee30f1c80 <line:265:2, col:20> col:2 USER_FLAG_SHIFT 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x563ee30f1e20 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563ee30f1c60 <col:20> 'Handler::Flags' Int: 28
| |     `-DeclRefExpr 0x563ee30f1c40 <col:20> 'Handler::Flags' EnumConstant 0x563ee30ee930 'f_user_shift' 'Handler::Flags'
| `-EnumConstantDecl 0x563ee30f1d10 <line:266:2, col:16> col:2 USER_FLAG_0 'Handler::DeprecatedFlags'
|   `-ImplicitCastExpr 0x563ee30f1e38 <col:16> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x563ee30f1cf0 <col:16> 'Handler::Flags' Int: 268435456
|       `-DeclRefExpr 0x563ee30f1cd0 <col:16> 'Handler::Flags' EnumConstant 0x563ee30eea00 'f_user0' 'Handler::Flags'
|-EnumDecl 0x563ee30f1e50 <line:268:5, line:271:5> line:268:5
| |-DeprecatedAttr 0x563ee30f1f10 <col:25> "" ""
| |-EnumConstantDecl 0x563ee30f1fc0 <line:269:2, col:14> col:2 EXCLUSIVE 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:268:5)'
| | `-ImplicitCastExpr 0x563ee30f20a0 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563ee30f1fa0 <col:14> 'Handler::Flags' Int: 0
| |     `-DeclRefExpr 0x563ee30f1f80 <col:14> 'Handler::Flags' EnumConstant 0x563ee30ee160 'f_exclusive' 'Handler::Flags'
| `-EnumConstantDecl 0x563ee30f2050 <line:270:2, col:17> col:2 NONEXCLUSIVE 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:268:5)'
|   `-ImplicitCastExpr 0x563ee30f20b8 <col:17> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x563ee30f2030 <col:17> 'Handler::Flags' Int: 32
|       `-DeclRefExpr 0x563ee30f2010 <col:17> 'Handler::Flags' EnumConstant 0x563ee30ee1f0 'f_nonexclusive' 'Handler::Flags'
|-CXXMethodDecl 0x563ee30f2238 <line:281:5, line:284:5> line:281:19 __call_read 'String (Element *, void *) const' inline
| |-ParmVarDecl 0x563ee30f20e0 <col:31, col:40> col:40 used e 'Element *'
| |-ParmVarDecl 0x563ee30f2160 <col:43, col:49> col:49 used new_user_data 'void *'
| `-CompoundStmt 0x563ee30f60a8 <col:70, line:284:5>
|   |-ParenExpr 0x563ee30f5ec8 <line:282:2, col:233> 'void'
|   | `-ConditionalOperator 0x563ee30f5e98 <col:3, col:232> 'void'
|   |   |-CXXStaticCastExpr 0x563ee30f5bc8 <col:3, col:75> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x563ee30f5b98 <col:23, col:69> 'bool' '=='
|   |   |   |-ParenExpr 0x563ee30f5b40 <col:23, col:64> 'unsigned int'
|   |   |   | `-BinaryOperator 0x563ee30f5b20 <col:24, col:63> 'unsigned int' '&'
|   |   |   |   |-ImplicitCastExpr 0x563ee30f5af0 <col:24> 'uint32_t':'unsigned int' <LValueToRValue>
|   |   |   |   | `-MemberExpr 0x563ee30f5a10 <col:24> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x563ee30f2a30
|   |   |   |   |   `-CXXThisExpr 0x563ee30f5a00 <col:24> 'const Handler *' implicit this
|   |   |   |   `-ImplicitCastExpr 0x563ee30f5b08 <col:33, col:63> 'unsigned int' <IntegralCast>
|   |   |   |     `-ParenExpr 0x563ee30f5ad0 <col:33, col:63> 'int'
|   |   |   |       `-BinaryOperator 0x563ee30f5ab0 <col:34, col:43> 'int' '|'
|   |   |   |         |-ImplicitCastExpr 0x563ee30f5a80 <col:34> 'int' <IntegralCast>
|   |   |   |         | `-DeclRefExpr 0x563ee30f5a40 <col:34> 'Handler::Flags' EnumConstant 0x563ee30edfb0 'f_read' 'Handler::Flags'
|   |   |   |         `-ImplicitCastExpr 0x563ee30f5a98 <col:43> 'int' <IntegralCast>
|   |   |   |           `-DeclRefExpr 0x563ee30f5a60 <col:43> 'Handler::Flags' EnumConstant 0x563ee30eea90 'f_read_comprehensive' 'Handler::Flags'
|   |   |   `-ImplicitCastExpr 0x563ee30f5b80 <col:69> 'unsigned int' <IntegralCast>
|   |   |     `-DeclRefExpr 0x563ee30f5b60 <col:69> 'Handler::Flags' EnumConstant 0x563ee30edfb0 'f_read' 'Handler::Flags'
|   |   |-CXXFunctionalCastExpr 0x563ee30f5c28 <col:79, col:86> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x563ee30f5c08 <col:85> 'int' 0
|   |   `-CallExpr 0x563ee30f5df8 <col:90, col:232> 'void'
|   |     |-ImplicitCastExpr 0x563ee30f5de0 <col:90> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x563ee30f5dc0 <col:90> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x563ee2c314e0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x563ee30f5e38 <col:105> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563ee30f5c98 <col:105> 'const char [53]' lvalue "(_flags & (f_read | f_read_comprehensive)) == f_read"
|   |     |-ImplicitCastExpr 0x563ee30f5e50 <col:161> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563ee30f5ce8 <col:161> 'const char [30]' lvalue "../dummy_inc/click/handler.hh"
|   |     |-ImplicitCastExpr 0x563ee30f5e68 <col:194> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x563ee30f5d20 <col:194> 'int' 282
|   |     `-ImplicitCastExpr 0x563ee30f5e80 <col:199, col:213> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x563ee30f5da8 <col:199, col:213> 'const char [53]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x563ee30f5d90 <col:213> 'const char [53]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x563ee30f5d40 <col:213> 'const char [53]' lvalue "String Handler::__call_read(Element *, void *) const"
|   `-ReturnStmt 0x563ee30f6098 <line:283:2, col:38>
|     `-ExprWithCleanups 0x563ee30f6080 <col:9, col:38> 'String'
|       `-CXXConstructExpr 0x563ee30f6050 <col:9, col:38> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x563ee30f6038 <col:9, col:38> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x563ee30f6018 <col:9, col:38> 'String' (CXXTemporary 0x563ee30f6018)
|             `-CallExpr 0x563ee30f5fb0 <col:9, col:38> 'String'
|               |-ImplicitCastExpr 0x563ee30f5f98 <col:9, col:20> 'ReadHandlerCallback':'String (*)(Element *, void *)' <LValueToRValue>
|               | `-MemberExpr 0x563ee30f5f28 <col:9, col:20> 'const ReadHandlerCallback':'String (*const)(Element *, void *)' lvalue .r 0x563ee30f2540
|               |   `-MemberExpr 0x563ee30f5ef8 <col:9> 'const union (anonymous union at ../dummy_inc/click/handler.hh:290:5)':'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5)' lvalue ->_read_hook 0x563ee30f2608
|               |     `-CXXThisExpr 0x563ee30f5ee8 <col:9> 'const Handler *' implicit this
|               |-ImplicitCastExpr 0x563ee30f5fe0 <col:22> 'Element *' <LValueToRValue>
|               | `-DeclRefExpr 0x563ee30f5f58 <col:22> 'Element *' lvalue ParmVar 0x563ee30f20e0 'e' 'Element *'
|               `-ImplicitCastExpr 0x563ee30f5ff8 <col:25> 'void *' <LValueToRValue>
|                 `-DeclRefExpr 0x563ee30f5f78 <col:25> 'void *' lvalue ParmVar 0x563ee30f2160 'new_user_data' 'void *'
|-AccessSpecDecl 0x563ee30f22e8 <line:287:3, col:10> col:3 private
|-FieldDecl 0x563ee30f2320 <line:289:5, col:12> col:12 referenced _name 'String'
|-CXXRecordDecl 0x563ee30f2370 <line:290:5, line:293:5> line:290:5 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x563ee30f24c0 <line:291:2, col:18> col:18 h 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-FieldDecl 0x563ee30f2540 <line:292:2, col:22> col:22 referenced r 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-CXXConstructorDecl 0x563ee30f3338 <line:290:5> col:5 implicit constexpr  'void (const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &)' inline default trivial noexcept-unevaluated 0x563ee30f3338
| | `-ParmVarDecl 0x563ee30f3448 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &'
| |-CXXConstructorDecl 0x563ee30f34e8 <col:5> col:5 implicit constexpr  'void (Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&)' inline default trivial noexcept-unevaluated 0x563ee30f34e8
| | `-ParmVarDecl 0x563ee30f35f8 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&'
| |-CXXDestructorDecl 0x563ee30f3668 <col:5> col:5 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x563ee30f3668
| |-CXXMethodDecl 0x563ee30f3f38 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &(const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &)' inline default trivial noexcept-unevaluated 0x563ee30f3f38
| | `-ParmVarDecl 0x563ee30f4048 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &'
| |-CXXMethodDecl 0x563ee30f40b8 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &(Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&)' inline default trivial noexcept-unevaluated 0x563ee30f40b8
| | `-ParmVarDecl 0x563ee30f41c8 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&'
| `-CXXConstructorDecl 0x563ee32e9fe0 <col:5> col:5 implicit used  'void () noexcept' inline default trivial
|   `-CompoundStmt 0x563ee32ea0c0 <col:5>
|-FieldDecl 0x563ee30f2608 <col:5, line:293:7> col:7 referenced _read_hook 'union (anonymous union at ../dummy_inc/click/handler.hh:290:5)':'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5)'
|-CXXRecordDecl 0x563ee30f2670 <line:294:5, line:297:5> line:294:5 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x563ee30f2798 <line:295:2, col:18> col:18 h 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-FieldDecl 0x563ee30f2820 <line:296:2, col:23> col:23 referenced w 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-CXXConstructorDecl 0x563ee30f3798 <line:294:5> col:5 implicit constexpr  'void (const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &)' inline default trivial noexcept-unevaluated 0x563ee30f3798
| | `-ParmVarDecl 0x563ee30f38a8 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &'
| |-CXXConstructorDecl 0x563ee30f3948 <col:5> col:5 implicit constexpr  'void (Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&)' inline default trivial noexcept-unevaluated 0x563ee30f3948
| | `-ParmVarDecl 0x563ee30f3a58 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&'
| |-CXXDestructorDecl 0x563ee30f3ac8 <col:5> col:5 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x563ee30f3ac8
| |-CXXMethodDecl 0x563ee30f4268 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &(const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &)' inline default trivial noexcept-unevaluated 0x563ee30f4268
| | `-ParmVarDecl 0x563ee30f4378 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &'
| |-CXXMethodDecl 0x563ee30f43e8 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &(Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&)' inline default trivial noexcept-unevaluated 0x563ee30f43e8
| | `-ParmVarDecl 0x563ee30f44f8 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&'
| `-CXXConstructorDecl 0x563ee32ea120 <col:5> col:5 implicit used  'void () noexcept' inline default trivial
|   `-CompoundStmt 0x563ee32ea200 <col:5>
|-FieldDecl 0x563ee30f28e8 <col:5, line:297:7> col:7 referenced _write_hook 'union (anonymous union at ../dummy_inc/click/handler.hh:294:5)':'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5)'
|-FieldDecl 0x563ee30f2968 <line:298:5, col:11> col:11 referenced _read_user_data 'void *'
|-FieldDecl 0x563ee30f29d0 <line:299:5, col:11> col:11 referenced _write_user_data 'void *'
|-FieldDecl 0x563ee30f2a30 <line:300:5, col:14> col:14 referenced _flags 'uint32_t':'unsigned int'
|-FieldDecl 0x563ee30f2a98 <line:301:5, col:9> col:9 _use_count 'int'
|-FieldDecl 0x563ee30f2b00 <line:302:5, col:9> col:9 _next_by_name 'int'
|-VarDecl 0x563ee30f2b60 <line:304:5, col:27> col:27 used the_blank_handler 'const Handler *' static
|-CXXConstructorDecl 0x563ee30f2c80 <line:306:5, col:38> col:5 Handler 'void (const String &)'
| `-ParmVarDecl 0x563ee30f2bd8 <col:13, col:37> col:28 'const String &' cinit
|   `-ExprWithCleanups 0x563ee30f48b0 <col:30, col:37> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x563ee30f4898 <col:30, col:37> 'const String' lvalue
|       `-ImplicitCastExpr 0x563ee30f4880 <col:30, col:37> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x563ee30f4860 <col:30, col:37> 'String' (CXXTemporary 0x563ee30f4860)
|           `-CXXTemporaryObjectExpr 0x563ee30f4828 <col:30, col:37> 'String' 'void ()'
|-CXXMethodDecl 0x563ee30f2e28 <line:308:5, col:41> col:17 combine 'void (const Handler &)' inline
| `-ParmVarDecl 0x563ee30f2d68 <col:25, col:40> col:40 x 'const Handler &'
|-CXXMethodDecl 0x563ee30f2fa8 <line:309:5, col:46> col:17 compatible 'bool (const Handler &) const' inline
| `-ParmVarDecl 0x563ee30f2ee0 <col:28, col:43> col:43 x 'const Handler &'
|-FriendDecl 0x563ee30f3168 <line:311:5, col:18> col:12 'class Router':'Router'
|-CXXConstructorDecl 0x563ee30f31a8 <line:19:7> col:7 implicit Handler 'void (const Handler &)' inline default noexcept-unevaluated 0x563ee30f31a8
| `-ParmVarDecl 0x563ee30f3288 <col:7> col:7 'const Handler &'
|-CXXConstructorDecl 0x563ee30f3bd8 <col:7> col:7 implicit Handler 'void (Handler &&)' inline default noexcept-unevaluated 0x563ee30f3bd8
| `-ParmVarDecl 0x563ee30f3ce8 <col:7> col:7 'Handler &&'
|-CXXMethodDecl 0x563ee30f3d88 <col:7> col:7 implicit operator= 'Handler &(const Handler &)' inline default noexcept-unevaluated 0x563ee30f3d88
| `-ParmVarDecl 0x563ee30f3e98 <col:7> col:7 'const Handler &'
|-CXXMethodDecl 0x563ee30f4568 <col:7> col:7 implicit operator= 'Handler &(Handler &&)' inline default noexcept-unevaluated 0x563ee30f4568
| `-ParmVarDecl 0x563ee30f4678 <col:7> col:7 'Handler &&'
`-CXXDestructorDecl 0x563ee30f4700 <col:7> col:7 implicit ~Handler 'void ()' inline default noexcept-unevaluated 0x563ee30f4700

Layout: <CGRecordLayout
  LLVMType:%class.Handler = type <{ %class.String, %union.anon, %union.anon.11, i8*, i8*, i32, i32, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Handler.base = type <{ %class.String, %union.anon, %union.anon.11, i8*, i8*, i32, i32, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x563ee32d1bc8 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'void *'
|-CXXRecordDecl 0x563ee32d1dd8 prev 0x563ee32d1bc8 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x563ee32d2df0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<void *>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x563ee32d2da0 'typename array_memory<void *>::type' sugar
|   `-TypedefType 0x563ee32d2d80 'conditional<true, sized_array_memory<8>, typed_array_memory<void *> >::type' sugar
|     |-Typedef 0x563ee32d2c30 'type'
|     `-SubstTemplateTypeParmType 0x563ee317bfd0 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x563ee2e5b0f0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563ee2e5b098 'T'
|       `-RecordType 0x563ee317bb20 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x563ee317ba38 'sized_array_memory'
|-FieldDecl 0x563ee32d2ef0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<void *>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x563ee32d2f40 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x563ee32d2f78 <line:118:5, col:15> col:15 value_type 'void *':'void *'
| `-SubstTemplateTypeParmType 0x563ee32d1e70 'void *' sugar
|   |-TemplateTypeParmType 0x563ee2e92de0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x563ee2e92d88 'T'
|   `-PointerType 0x563ee2b90ad0 'void *'
|     `-BuiltinType 0x563ee2b902d0 'void'
|-TypedefDecl 0x563ee32d3008 <line:119:5, col:16> col:16 reference 'void *&'
| `-LValueReferenceType 0x563ee32d2fd0 'void *&'
|   `-SubstTemplateTypeParmType 0x563ee32d1e70 'void *' sugar
|     |-TemplateTypeParmType 0x563ee2e92de0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x563ee2e92d88 'T'
|     `-PointerType 0x563ee2b90ad0 'void *'
|       `-BuiltinType 0x563ee2b902d0 'void'
|-TypedefDecl 0x563ee32d30c8 <line:120:5, col:22> col:22 const_reference 'void *const &'
| `-LValueReferenceType 0x563ee32d3090 'void *const &'
|   `-QualType 0x563ee32d1e71 'void *const' const
|     `-SubstTemplateTypeParmType 0x563ee32d1e70 'void *' sugar
|       |-TemplateTypeParmType 0x563ee2e92de0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563ee2e92d88 'T'
|       `-PointerType 0x563ee2b90ad0 'void *'
|         `-BuiltinType 0x563ee2b902d0 'void'
|-TypedefDecl 0x563ee32d3158 <line:121:5, col:16> col:16 pointer 'void **'
| `-PointerType 0x563ee32d3120 'void **'
|   `-SubstTemplateTypeParmType 0x563ee32d1e70 'void *' sugar
|     |-TemplateTypeParmType 0x563ee2e92de0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x563ee2e92d88 'T'
|     `-PointerType 0x563ee2b90ad0 'void *'
|       `-BuiltinType 0x563ee2b902d0 'void'
|-TypedefDecl 0x563ee32d31e8 <line:122:5, col:22> col:22 const_pointer 'void *const *'
| `-PointerType 0x563ee32d31b0 'void *const *'
|   `-QualType 0x563ee32d1e71 'void *const' const
|     `-SubstTemplateTypeParmType 0x563ee32d1e70 'void *' sugar
|       |-TemplateTypeParmType 0x563ee2e92de0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563ee2e92d88 'T'
|       `-PointerType 0x563ee2b90ad0 'void *'
|         `-BuiltinType 0x563ee2b902d0 'void'
|-TypedefDecl 0x563ee32d3dd0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<void *>::type':'void *'
| `-ElaboratedType 0x563ee32d3d80 'typename fast_argument<void *>::type' sugar
|   `-TypedefType 0x563ee32d3d60 'fast_argument<void *, false>::type' sugar
|     |-Typedef 0x563ee32d3cf0 'type'
|     `-SubstTemplateTypeParmType 0x563ee32d3ab0 'void *' sugar
|       |-TemplateTypeParmType 0x563ee2e65ef0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563ee2e65ea0 'T'
|       `-PointerType 0x563ee2b90ad0 'void *'
|         `-BuiltinType 0x563ee2b902d0 'void'
|-TypedefDecl 0x563ee32d3e38 <line:126:5, col:22> col:22 const_access_type 'void *const &'
| `-LValueReferenceType 0x563ee32d3090 'void *const &'
|   `-QualType 0x563ee32d1e71 'void *const' const
|     `-SubstTemplateTypeParmType 0x563ee32d1e70 'void *' sugar
|       |-TemplateTypeParmType 0x563ee2e92de0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563ee2e92d88 'T'
|       `-PointerType 0x563ee2b90ad0 'void *'
|         `-BuiltinType 0x563ee2b902d0 'void'
|-TypedefDecl 0x563ee32d3e90 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x563ee2b90370 'int'
|-TypedefDecl 0x563ee32d3ef8 <line:130:5, col:16> col:16 iterator 'void **'
| `-PointerType 0x563ee32d3120 'void **'
|   `-SubstTemplateTypeParmType 0x563ee32d1e70 'void *' sugar
|     |-TemplateTypeParmType 0x563ee2e92de0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x563ee2e92d88 'T'
|     `-PointerType 0x563ee2b90ad0 'void *'
|       `-BuiltinType 0x563ee2b902d0 'void'
|-TypedefDecl 0x563ee32d3f60 <line:131:5, col:22> col:22 const_iterator 'void *const *'
| `-PointerType 0x563ee32d31b0 'void *const *'
|   `-QualType 0x563ee32d1e71 'void *const' const
|     `-SubstTemplateTypeParmType 0x563ee32d1e70 'void *' sugar
|       |-TemplateTypeParmType 0x563ee2e92de0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563ee2e92d88 'T'
|       `-PointerType 0x563ee2b90ad0 'void *'
|         `-BuiltinType 0x563ee2b902d0 'void'
|-EnumDecl 0x563ee32d3fb8 <line:134:5> col:5
| `-EnumConstantDecl 0x563ee32d40b0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<void *>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x563ee32d4090 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x563ee2e94468 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x563ee2e94440 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x563ee2e94420 <col:40> 'int' 1
|-CXXConstructorDecl 0x563ee32d4138 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x563ee32d4388 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<void *>::value_argument_type)' inline
| |-ParmVarDecl 0x563ee32d41f0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x563ee32d4290 <col:41, col:61> col:61 v 'Vector<void *>::value_argument_type':'void *'
|-CXXConstructorDecl 0x563ee32d4648 <line:139:5, col:37> col:12 Vector 'void (const Vector<void *> &)' inline
| `-ParmVarDecl 0x563ee32d4530 <col:19, col:36> col:36 x 'const Vector<void *> &'
|-CXXConstructorDecl 0x563ee32d4908 <line:141:5, col:32> col:12 Vector 'void (Vector<void *> &&)' inline
| `-ParmVarDecl 0x563ee32d47f0 <col:19, col:31> col:31 x 'Vector<void *> &&'
|-CXXMethodDecl 0x563ee32d4c50 <line:144:5, col:51> col:23 operator= 'Vector<void *> &(const Vector<void *> &)' inline
| `-ParmVarDecl 0x563ee32d4b30 <col:33, col:50> col:50 x 'const Vector<void *> &'
|-CXXMethodDecl 0x563ee32d4f60 <line:146:5, col:46> col:23 operator= 'Vector<void *> &(Vector<void *> &&)' inline
| `-ParmVarDecl 0x563ee32d4e40 <col:33, col:45> col:45 x 'Vector<void *> &&'
|-CXXMethodDecl 0x563ee32d5250 <line:148:5, col:70> col:23 assign 'Vector<void *> &(Vector::size_type, Vector<void *>::value_argument_type)' inline
| |-ParmVarDecl 0x563ee32d5098 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x563ee32d5110 <col:43, col:69> col:63 v 'Vector<void *>::value_argument_type':'void *'
|-CXXMethodDecl 0x563ee32d53a8 <line:150:5, col:55> col:49 begin 'Vector<void *>::iterator ()'
| |-NoInlineAttr 0x563ee32d5488 <col:20> Inherited
| `-OptimizeNoneAttr 0x563ee32d54e0 <col:30> Inherited
|-CXXMethodDecl 0x563ee32d5528 <line:151:5, col:53> col:49 end 'Vector<void *>::iterator ()'
| |-NoInlineAttr 0x563ee32d55d8 <col:20> Inherited
| `-OptimizeNoneAttr 0x563ee32d5630 <col:30> Inherited
|-CXXMethodDecl 0x563ee32d56f8 <line:152:5, col:63> col:55 begin 'Vector<void *>::const_iterator () const'
| |-NoInlineAttr 0x563ee32d57a8 <col:20> Inherited
| `-OptimizeNoneAttr 0x563ee32d5800 <col:30> Inherited
|-CXXMethodDecl 0x563ee32d5848 <line:153:5, col:61> col:55 end 'Vector<void *>::const_iterator () const'
| |-NoInlineAttr 0x563ee32d58f8 <col:20> Inherited
| `-OptimizeNoneAttr 0x563ee32d5950 <col:30> Inherited
|-CXXMethodDecl 0x563ee32d5998 <line:154:5, col:64> col:55 cbegin 'Vector<void *>::const_iterator () const'
| |-NoInlineAttr 0x563ee32d5a48 <col:20> Inherited
| `-OptimizeNoneAttr 0x563ee32d5aa0 <col:30> Inherited
|-CXXMethodDecl 0x563ee32d5ae8 <line:155:5, col:62> col:55 cend 'Vector<void *>::const_iterator () const'
| |-NoInlineAttr 0x563ee32d5b98 <col:20> Inherited
| `-OptimizeNoneAttr 0x563ee32d5bf0 <col:30> Inherited
|-CXXMethodDecl 0x563ee32d5c18 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x563ee32d5cc8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x563ee32d5d78 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x563ee32d5f38 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<void *>::value_argument_type)' inline
| |-ParmVarDecl 0x563ee32d5e28 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x563ee32d5ea0 <col:37, col:63> col:57 v 'Vector<void *>::value_argument_type':'void *'
|-CXXMethodDecl 0x563ee32d6088 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x563ee32d5ff8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x563ee32d6238 <line:163:5, col:65> col:43 operator[] 'void *&(Vector::size_type)'
| |-ParmVarDecl 0x563ee32d6140 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x563ee32d62f0 <col:20>
| `-OptimizeNoneAttr 0x563ee32d6348 <col:30>
|-CXXMethodDecl 0x563ee32d6468 <line:164:5, col:73> col:49 operator[] 'void *const &(Vector::size_type) const'
| |-ParmVarDecl 0x563ee32d6370 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x563ee32d6520 <col:20>
| `-OptimizeNoneAttr 0x563ee32d6578 <col:30>
|-CXXMethodDecl 0x563ee32d6630 <line:165:5, col:29> col:15 at 'void *&(Vector::size_type)' inline
| `-ParmVarDecl 0x563ee32d65a0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x563ee32d6778 <line:166:5, col:37> col:21 at 'void *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x563ee32d66e8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x563ee32d68a8 <line:167:5, col:21> col:15 front 'void *&()' inline
|-CXXMethodDecl 0x563ee32d69d8 <line:168:5, col:29> col:21 front 'void *const &() const' inline
|-CXXMethodDecl 0x563ee32d6aa8 <line:169:5, col:20> col:15 back 'void *&()' inline
|-CXXMethodDecl 0x563ee32d6b78 <line:170:5, col:28> col:21 back 'void *const &() const' inline
|-CXXMethodDecl 0x563ee32d6cb8 <line:172:5, col:39> col:15 unchecked_at 'void *&(Vector::size_type)' inline
| `-ParmVarDecl 0x563ee32d6c28 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x563ee32d6e00 <line:173:5, col:47> col:21 unchecked_at 'void *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x563ee32d6d70 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x563ee32d6f48 <line:174:5, col:59> col:15 at_u 'void *&(Vector::size_type)' inline
| |-ParmVarDecl 0x563ee32d6eb8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x563ee32d7000 <col:48> Inherited "" ""
|-CXXMethodDecl 0x563ee32d7100 <line:175:5, col:71> col:21 at_u 'void *const &(Vector::size_type) const' inline
| |-ParmVarDecl 0x563ee32d7070 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x563ee32d71b8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x563ee32d7278 <line:177:5, col:20> col:15 data 'void **()' inline
|-CXXMethodDecl 0x563ee32d7378 <line:178:5, col:28> col:21 data 'void *const *() const' inline
|-CXXMethodDecl 0x563ee32d74f8 <line:180:5, col:48> col:17 push_back 'void (Vector<void *>::value_argument_type)' inline
| `-ParmVarDecl 0x563ee32d7438 <col:27, col:47> col:47 v 'Vector<void *>::value_argument_type':'void *'
|-FunctionTemplateDecl 0x563ee32d9088 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x563ee32d75b0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<void *>':'fast_argument<void *, false>'
| `-CXXMethodDecl 0x563ee32d8fe8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (void *&&)' inline
|   `-ParmVarDecl 0x563ee32d8ee0 <col:58, col:62> col:62 v 'void *&&'
|-CXXMethodDecl 0x563ee32d9168 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x563ee32d92b8 <line:186:5, col:49> col:17 push_front 'void (Vector<void *>::value_argument_type)' inline
| `-ParmVarDecl 0x563ee32d9228 <col:28, col:48> col:48 v 'Vector<void *>::value_argument_type':'void *'
|-CXXMethodDecl 0x563ee32d9370 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x563ee32d95b8 <line:189:5, col:62> col:21 insert 'Vector<void *>::iterator (Vector<void *>::iterator, Vector<void *>::value_argument_type)' inline
| |-ParmVarDecl 0x563ee32d9430 <col:28, col:37> col:37 it 'Vector<void *>::iterator':'void **'
| `-ParmVarDecl 0x563ee32d94a8 <col:41, col:61> col:61 v 'Vector<void *>::value_argument_type':'void *'
|-CXXMethodDecl 0x563ee32d9778 <line:190:5, col:38> col:21 erase 'Vector<void *>::iterator (Vector<void *>::iterator)' inline
| `-ParmVarDecl 0x563ee32d9688 <col:27, col:36> col:36 it 'Vector<void *>::iterator':'void **'
|-CXXMethodDecl 0x563ee32d99c8 <line:191:5, col:49> col:21 erase 'Vector<void *>::iterator (Vector<void *>::iterator, Vector<void *>::iterator)' inline
| |-ParmVarDecl 0x563ee32d9840 <col:27, col:36> col:36 a 'Vector<void *>::iterator':'void **'
| `-ParmVarDecl 0x563ee32d98b8 <col:39, col:48> col:48 b 'Vector<void *>::iterator':'void **'
|-CXXMethodDecl 0x563ee32d9a88 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x563ee32d9ce8 <line:195:5, col:34> col:17 swap 'void (Vector<void *> &)' inline
| `-ParmVarDecl 0x563ee32d9bf0 <col:22, col:33> col:33 x 'Vector<void *> &'
`-CXXDestructorDecl 0x563ee32d9db8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x563ee32d9db8

Layout: <CGRecordLayout
  LLVMType:%class.Vector.12 = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector.12 = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct Router::notifier_signals_t
         0 |   class String name
         0 |     struct String::rep_t _r
         0 |       const char * data
         8 |       int length
        16 |       struct String::memo_t * memo
        24 |   int nsig
        28 |   class atomic_uint32_t [128] sig
       544 |   struct Router::notifier_signals_t * next
           | [sizeof=552, dsize=552, align=8,
           |  nvsize=552, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563ee32d9fb0 <../dummy_inc/click/router.hh:280:5, line:290:5> line:280:12 referenced struct notifier_signals_t definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x563ee32da0c8 <col:5, col:12> col:12 implicit referenced struct notifier_signals_t
|-EnumDecl 0x563ee32da158 <line:281:9, col:32> col:9
| `-EnumConstantDecl 0x563ee32da260 <col:16, col:27> col:16 referenced capacity 'Router::notifier_signals_t::(anonymous enum at ../dummy_inc/click/router.hh:281:9)'
|   `-ImplicitCastExpr 0x563ee32da2b0 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x563ee32da240 <col:27> 'int' Int: 4096
|       `-IntegerLiteral 0x563ee32da220 <col:27> 'int' 4096
|-FieldDecl 0x563ee32da2d8 <line:282:9, col:16> col:16 name 'String'
|-FieldDecl 0x563ee32da340 <line:283:9, col:13> col:13 nsig 'int'
|-FieldDecl 0x563ee32da538 <line:284:9, col:42> col:25 referenced sig 'atomic_uint32_t [128]'
|-FieldDecl 0x563ee32da5c8 <line:285:9, col:29> col:29 next 'Router::notifier_signals_t *'
|-CXXConstructorDecl 0x563ee32da788 <line:286:9, line:289:9> line:286:9 notifier_signals_t 'void (const String &, Router::notifier_signals_t *)'
| |-ParmVarDecl 0x563ee32da628 <col:28, col:42> col:42 used n 'const String &'
| |-ParmVarDecl 0x563ee32da6a0 <col:45, col:65> col:65 used nx 'Router::notifier_signals_t *'
| |-CXXCtorInitializer Field 0x563ee32da2d8 'name' 'String'
| | `-CXXConstructExpr 0x563ee32e4fc8 <line:287:15, col:21> 'String' 'void (const String &)'
| |   `-DeclRefExpr 0x563ee32e4f88 <col:20> 'const String' lvalue ParmVar 0x563ee32da628 'n' 'const String &'
| |-CXXCtorInitializer Field 0x563ee32da340 'nsig' 'int'
| | `-IntegerLiteral 0x563ee32e5020 <col:29> 'int' 0
| |-CXXCtorInitializer Field 0x563ee32da538 'sig' 'atomic_uint32_t [128]'
| | `-CXXConstructExpr 0x563ee32e5108 <line:286:9> 'atomic_uint32_t [128]' 'void () noexcept'
| |-CXXCtorInitializer Field 0x563ee32da5c8 'next' 'Router::notifier_signals_t *'
| | `-ImplicitCastExpr 0x563ee32e50c8 <line:287:38> 'Router::notifier_signals_t *' <LValueToRValue>
| |   `-DeclRefExpr 0x563ee32e5088 <col:38> 'Router::notifier_signals_t *' lvalue ParmVar 0x563ee32da6a0 'nx' 'Router::notifier_signals_t *'
| `-CompoundStmt 0x563ee32e5398 <col:42, line:289:9>
|   `-CallExpr 0x563ee32e5348 <line:288:13, col:43> 'void *'
|     |-ImplicitCastExpr 0x563ee32e5330 <col:13> 'void *(*)(void *, int, size_t) throw()' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x563ee32e5310 <col:13> 'void *(void *, int, size_t) throw()' lvalue Function 0x563ee2df57a8 'memset' 'void *(void *, int, size_t) throw()'
|     |-ImplicitCastExpr 0x563ee32e5380 <col:20, col:26> 'void *' <BitCast>
|     | `-UnaryOperator 0x563ee32e5258 <col:20, col:26> 'atomic_uint32_t *' prefix '&' cannot overflow
|     |   `-ArraySubscriptExpr 0x563ee32e5238 <col:21, col:26> 'atomic_uint32_t' lvalue
|     |     |-ImplicitCastExpr 0x563ee32e5220 <col:21> 'atomic_uint32_t *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x563ee32e51d0 <col:21> 'atomic_uint32_t [128]' lvalue ->sig 0x563ee32da538
|     |     |   `-CXXThisExpr 0x563ee32e51c0 <col:21> 'Router::notifier_signals_t *' implicit this
|     |     `-IntegerLiteral 0x563ee32e5200 <col:25> 'int' 0
|     |-IntegerLiteral 0x563ee32e5270 <col:29> 'int' 0
|     `-UnaryExprOrTypeTraitExpr 0x563ee32e52f0 <col:32, col:42> 'unsigned long' sizeof
|       `-ParenExpr 0x563ee32e52d0 <col:38, col:42> 'atomic_uint32_t [128]' lvalue
|         `-MemberExpr 0x563ee32e52a0 <col:39> 'atomic_uint32_t [128]' lvalue ->sig 0x563ee32da538 non_odr_use_unevaluated
|           `-CXXThisExpr 0x563ee32e5290 <col:39> 'Router::notifier_signals_t *' implicit this
|-CXXConstructorDecl 0x563ee32da868 <line:280:12> col:12 implicit notifier_signals_t 'void (const Router::notifier_signals_t &)' inline default noexcept-unevaluated 0x563ee32da868
| `-ParmVarDecl 0x563ee32da978 <col:12> col:12 'const Router::notifier_signals_t &'
|-CXXConstructorDecl 0x563ee32daa18 <col:12> col:12 implicit notifier_signals_t 'void (Router::notifier_signals_t &&)' inline default noexcept-unevaluated 0x563ee32daa18
| `-ParmVarDecl 0x563ee32dab28 <col:12> col:12 'Router::notifier_signals_t &&'
|-CXXMethodDecl 0x563ee32dabc8 <col:12> col:12 implicit operator= 'Router::notifier_signals_t &(const Router::notifier_signals_t &)' inline default noexcept-unevaluated 0x563ee32dabc8
| `-ParmVarDecl 0x563ee32dacd8 <col:12> col:12 'const Router::notifier_signals_t &'
|-CXXMethodDecl 0x563ee32dad48 <col:12> col:12 implicit operator= 'Router::notifier_signals_t &(Router::notifier_signals_t &&)' inline default noexcept-unevaluated 0x563ee32dad48
| `-ParmVarDecl 0x563ee32dae58 <col:12> col:12 'Router::notifier_signals_t &&'
`-CXXDestructorDecl 0x563ee32daee0 <col:12> col:12 implicit ~notifier_signals_t 'void ()' inline default noexcept-unevaluated 0x563ee32daee0

Layout: <CGRecordLayout
  LLVMType:%"struct.Router::notifier_signals_t" = type { %class.String, i32, [128 x %class.atomic_uint32_t], %"struct.Router::notifier_signals_t"* }
  NonVirtualBaseLLVMType:%"struct.Router::notifier_signals_t" = type { %class.String, i32, [128 x %class.atomic_uint32_t], %"struct.Router::notifier_signals_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class ThreadSched
         0 |   (ThreadSched vtable pointer)
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563ee32a9a98 <../dummy_inc/click/standard/threadsched.hh:6:1, line:15:1> line:6:7 class ThreadSched definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple non_trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x563ee32a9bb8 <col:1, col:7> col:7 implicit referenced class ThreadSched
|-AccessSpecDecl 0x563ee32a9c48 <col:21, col:27> col:21 public
|-EnumDecl 0x563ee32a9c70 <line:8:5, col:58> col:5
| |-EnumConstantDecl 0x563ee32a9d88 <col:12, col:32> col:12 THREAD_QUIESCENT 'ThreadSched::(anonymous enum at ../dummy_inc/click/standard/threadsched.hh:8:5)'
| | `-ConstantExpr 0x563ee32a9d68 <col:31, col:32> 'int' Int: -1
| |   `-UnaryOperator 0x563ee32a9d50 <col:31, col:32> 'int' prefix '-'
| |     `-IntegerLiteral 0x563ee32a9d30 <col:32> 'int' 1
| `-EnumConstantDecl 0x563ee32a9e30 <col:35, col:53> col:35 THREAD_UNKNOWN 'ThreadSched::(anonymous enum at ../dummy_inc/click/standard/threadsched.hh:8:5)'
|   `-ConstantExpr 0x563ee32a9e10 <col:52, col:53> 'int' Int: -1000
|     `-UnaryOperator 0x563ee32a9df8 <col:52, col:53> 'int' prefix '-'
|       `-IntegerLiteral 0x563ee32a9dd8 <col:53> 'int' 1000
|-CXXConstructorDecl 0x563ee32a9ee0 <line:10:5, col:21> col:5 ThreadSched 'void ()'
| `-CompoundStmt 0x563ee32aa418 <col:19, col:21>
|-CXXDestructorDecl 0x563ee32a9fd0 <line:11:5, col:30> col:13 ~ThreadSched 'void () noexcept' virtual
| `-CompoundStmt 0x563ee32aa428 <col:28, col:30>
|-CXXMethodDecl 0x563ee32aa190 <line:13:5, col:56> col:17 initial_home_thread_id 'int (const Element *)' virtual
| `-ParmVarDecl 0x563ee32aa0c0 <col:40, col:55> col:55 e 'const Element *'
`-CXXMethodDecl 0x563ee32aa298 <line:6:7> col:7 implicit operator= 'ThreadSched &(const ThreadSched &)' inline default noexcept-unevaluated 0x563ee32aa298
  `-ParmVarDecl 0x563ee32aa3a8 <col:7> col:7 'const ThreadSched &'

Layout: <CGRecordLayout
  LLVMType:%class.ThreadSched = type { i32 (...)** }
  NonVirtualBaseLLVMType:%class.ThreadSched = type { i32 (...)** }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563ee32aa9d0 prev 0x563ee31f3668 <../dummy_inc/click/router.hh:23:1, line:352:1> line:23:7 referenced class Router definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-CXXRecordDecl 0x563ee32aaac8 <col:1, col:7> col:7 implicit referenced class Router
|-AccessSpecDecl 0x563ee32aab58 <col:16, col:22> col:16 public
|-CXXMethodDecl 0x563ee32aabc8 <line:28:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x563ee32aac88 <line:31:5, col:31> col:17 used initialized 'bool () const' inline
|-CXXMethodDecl 0x563ee32aad48 <line:32:5, col:34> col:17 handlers_ready 'bool () const' inline
|-CXXMethodDecl 0x563ee32aae08 <line:33:5, col:27> col:17 running 'bool () const' inline
|-CXXMethodDecl 0x563ee32aaec8 <line:34:5, col:25> col:17 dying 'bool () const' inline
|-EnumDecl 0x563ee32aaf68 <line:37:5, col:44> col:5
| `-EnumConstantDecl 0x563ee32ab0c8 <col:12, col:42> col:12 STOP_RUNCOUNT 'Router::(anonymous enum at ../dummy_inc/click/router.hh:37:5)'
|   `-ConstantExpr 0x563ee32ab0a8 <col:28, col:42> 'int' Int: -2147483648
|     `-BinaryOperator 0x563ee32ab088 <col:28, col:42> 'int' '-'
|       |-UnaryOperator 0x563ee32ab050 <col:28, col:29> 'int' prefix '-'
|       | `-IntegerLiteral 0x563ee32ab030 <col:29> 'int' 2147483647
|       `-IntegerLiteral 0x563ee32ab068 <col:42> 'int' 1
|-CXXMethodDecl 0x563ee32ab168 <line:38:5, col:31> col:20 runcount 'int32_t () const' inline
|-CXXMethodDecl 0x563ee32ab2d8 <line:39:5, col:39> col:10 used adjust_runcount 'void (int32_t)'
| `-ParmVarDecl 0x563ee32ab218 <col:26, col:34> col:34 delta 'int32_t':'int'
|-CXXMethodDecl 0x563ee32ab420 <line:40:5, col:33> col:10 set_runcount 'void (int32_t)'
| `-ParmVarDecl 0x563ee32ab390 <col:23, col:31> col:31 rc 'int32_t':'int'
|-CXXMethodDecl 0x563ee32ab4e8 <line:41:5, col:36> col:17 please_stop_driver 'void ()' inline
|-CXXMethodDecl 0x563ee32ab810 <line:44:5, col:47> col:36 elements 'const Vector<Element *> &() const' inline
|-CXXMethodDecl 0x563ee32ab8d8 <line:45:5, col:28> col:16 nelements 'int () const' inline
|-CXXMethodDecl 0x563ee32aba58 <line:46:5, col:36> col:21 element 'Element *(int) const' inline
| `-ParmVarDecl 0x563ee32ab990 <col:29, col:33> col:33 i 'int'
|-CXXMethodDecl 0x563ee32abb20 <line:47:5, col:36> col:21 root_element 'Element *() const' inline
|-CXXMethodDecl 0x563ee32abd28 <line:48:5, col:56> col:21 used element 'Element *(const Router *, int)' static
| |-ParmVarDecl 0x563ee32abbd0 <col:29, col:43> col:43 router 'const Router *'
| `-ParmVarDecl 0x563ee32abc50 <col:51, col:55> col:55 i 'int'
|-CXXMethodDecl 0x563ee32abe80 <line:50:5, col:32> col:19 ename 'const String &(int) const'
| `-ParmVarDecl 0x563ee32abdf0 <col:25, col:29> col:29 i 'int'
|-CXXMethodDecl 0x563ee32abfd0 <line:51:5, col:33> col:12 ename_context 'String (int) const'
| `-ParmVarDecl 0x563ee32abf40 <col:26, col:30> col:30 i 'int'
|-CXXMethodDecl 0x563ee32ac120 <line:52:5, col:29> col:12 elandmark 'String (int) const'
| `-ParmVarDecl 0x563ee32ac090 <col:22, col:26> col:26 i 'int'
|-CXXMethodDecl 0x563ee32ac270 <line:53:5, col:41> col:19 econfiguration 'const String &(int) const'
| `-ParmVarDecl 0x563ee32ac1e0 <col:34, col:38> col:38 i 'int'
|-CXXMethodDecl 0x563ee32ac440 <line:54:5, col:54> col:10 set_econfiguration 'void (int, const String &)'
| |-ParmVarDecl 0x563ee32ac330 <col:29, col:33> col:33 i 'int'
| `-ParmVarDecl 0x563ee32ac3a8 <col:36, col:50> col:50 conf 'const String &'
|-CXXMethodDecl 0x563ee32ac648 <line:56:5, col:63> col:14 find 'Element *(const String &, ErrorHandler *) const'
| |-ParmVarDecl 0x563ee32ac500 <col:19, col:33> col:33 name 'const String &'
| `-ParmVarDecl 0x563ee32ac578 <col:39, col:60> col:53 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x563ee32de780 <col:60> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x563ee32de760 <col:60> 'int' 0
|-CXXMethodDecl 0x563ee32ac8d8 <line:57:5, col:79> col:14 used find 'Element *(const String &, String, ErrorHandler *) const'
| |-ParmVarDecl 0x563ee32ac708 <col:19, col:33> col:33 name 'const String &'
| |-ParmVarDecl 0x563ee32ac780 <col:39, col:46> col:46 context 'String' destroyed
| `-ParmVarDecl 0x563ee32ac7f8 <col:55, col:76> col:69 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x563ee32de7b8 <col:76> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x563ee32de798 <col:76> 'int' 0
|-CXXMethodDecl 0x563ee32acb78 <line:58:5, col:87> col:14 find 'Element *(const String &, const Element *, ErrorHandler *) const'
| |-ParmVarDecl 0x563ee32ac9a0 <col:19, col:33> col:33 name 'const String &'
| |-ParmVarDecl 0x563ee32aca18 <col:39, col:54> col:54 context 'const Element *'
| `-ParmVarDecl 0x563ee32aca90 <col:63, col:84> col:77 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x563ee32de7f0 <col:84> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x563ee32de7d0 <col:84> 'int' 0
|-CXXMethodDecl 0x563ee2fa69d0 <line:60:5, col:76> col:9 used visit 'int (Element *, bool, int, RouterVisitor *) const'
| |-ParmVarDecl 0x563ee2fa6740 <col:15, col:24> col:24 e 'Element *'
| |-ParmVarDecl 0x563ee2fa67b8 <col:27, col:32> col:32 isoutput 'bool'
| |-ParmVarDecl 0x563ee2fa6838 <col:42, col:46> col:46 port 'int'
| `-ParmVarDecl 0x563ee2fa68d8 <col:52, col:67> col:67 visitor 'RouterVisitor *'
|-CXXMethodDecl 0x563ee2fa6c80 <line:61:5, col:72> col:9 visit_downstream 'int (Element *, int, RouterVisitor *) const'
| |-ParmVarDecl 0x563ee2fa6aa0 <col:26, col:35> col:35 e 'Element *'
| |-ParmVarDecl 0x563ee2fa6b20 <col:38, col:42> col:42 port 'int'
| `-ParmVarDecl 0x563ee2fa6b98 <col:48, col:63> col:63 visitor 'RouterVisitor *'
|-CXXMethodDecl 0x563ee2fa6ee8 <line:62:5, col:70> col:9 visit_upstream 'int (Element *, int, RouterVisitor *) const'
| |-ParmVarDecl 0x563ee2fa6d48 <col:24, col:33> col:33 e 'Element *'
| |-ParmVarDecl 0x563ee2fa6dc8 <col:36, col:40> col:40 port 'int'
| `-ParmVarDecl 0x563ee2fa6e40 <col:46, col:61> col:61 visitor 'RouterVisitor *'
|-CXXMethodDecl 0x563ee2fa73a0 <line:64:5, col:126> col:9 downstream_elements 'int (Element *, int, ElementFilter *, Vector<Element *> &)'
| |-ParmVarDecl 0x563ee2fa6fb0 <col:29, col:38> col:38 e 'Element *'
| |-ParmVarDecl 0x563ee2fa7030 <col:41, col:45> col:45 port 'int'
| |-ParmVarDecl 0x563ee2fa70d8 <col:51, col:66> col:66 filter 'ElementFilter *'
| |-ParmVarDecl 0x563ee2fa7250 <col:74, col:92> col:92 result 'Vector<Element *> &'
| `-DeprecatedAttr 0x563ee2fa7460 <col:115> "" ""
|-CXXMethodDecl 0x563ee2fa7820 <line:65:5, col:124> col:9 upstream_elements 'int (Element *, int, ElementFilter *, Vector<Element *> &)'
| |-ParmVarDecl 0x563ee2fa74e0 <col:27, col:36> col:36 e 'Element *'
| |-ParmVarDecl 0x563ee2fa7560 <col:39, col:43> col:43 port 'int'
| |-ParmVarDecl 0x563ee2fa75d8 <col:49, col:64> col:64 filter 'ElementFilter *'
| |-ParmVarDecl 0x563ee2fa7720 <col:72, col:90> col:90 result 'Vector<Element *> &'
| `-DeprecatedAttr 0x563ee2fa78e0 <col:113> "" ""
|-CXXMethodDecl 0x563ee2fa7a30 <line:67:5, col:55> col:24 flow_code_override 'const char *(int) const' inline
| `-ParmVarDecl 0x563ee2fa7968 <col:43, col:47> col:47 eindex 'int'
|-CXXMethodDecl 0x563ee2fa7c00 <line:68:5, col:68> col:10 set_flow_code_override 'void (int, const String &)'
| |-ParmVarDecl 0x563ee2fa7af0 <col:33, col:37> col:37 eindex 'int'
| `-ParmVarDecl 0x563ee2fa7b68 <col:45, col:59> col:59 flow_code 'const String &'
|-CXXMethodDecl 0x563ee2fa7e08 <line:72:5, col:72> col:27 handler 'const Handler *(const Element *, const String &)' static
| |-ParmVarDecl 0x563ee2fa7cc0 <col:35, col:50> col:50 e 'const Element *'
| `-ParmVarDecl 0x563ee2fa7d38 <col:53, col:67> col:67 hname 'const String &'
|-CXXMethodDecl 0x563ee2fa8208 <line:73:5, col:138> col:17 add_read_handler 'void (const Element *, const String &, ReadHandlerCallback, void *, uint32_t)' static
| |-ParmVarDecl 0x563ee2fa7ec8 <col:34, col:49> col:49 e 'const Element *'
| |-ParmVarDecl 0x563ee2fa7f40 <col:52, col:66> col:66 hname 'const String &'
| |-ParmVarDecl 0x563ee2fa7fb8 <col:73, col:93> col:93 callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x563ee2fa8038 <col:103, col:109> col:109 user_data 'void *'
| `-ParmVarDecl 0x563ee2fa80b0 <col:120, col:137> col:129 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x563ee32de828 <col:137> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x563ee32de808 <col:137> 'int' 0
|-CXXMethodDecl 0x563ee2fa8618 <line:74:5, col:140> col:17 add_write_handler 'void (const Element *, const String &, WriteHandlerCallback, void *, uint32_t)' static
| |-ParmVarDecl 0x563ee2fa82e0 <col:35, col:50> col:50 e 'const Element *'
| |-ParmVarDecl 0x563ee2fa8358 <col:53, col:67> col:67 hname 'const String &'
| |-ParmVarDecl 0x563ee2fa83d0 <col:74, col:95> col:95 callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x563ee2fa8450 <col:105, col:111> col:111 user_data 'void *'
| `-ParmVarDecl 0x563ee2fa84c8 <col:122, col:139> col:131 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x563ee32de860 <col:139> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x563ee32de840 <col:139> 'int' 0
|-CXXMethodDecl 0x563ee2fa8ac8 <line:75:5, col:161> col:17 set_handler 'void (const Element *, const String &, uint32_t, HandlerCallback, void *, void *)' static
| |-ParmVarDecl 0x563ee2fa86f0 <col:29, col:44> col:44 e 'const Element *'
| |-ParmVarDecl 0x563ee2fa8768 <col:47, col:61> col:61 hname 'const String &'
| |-ParmVarDecl 0x563ee2fa87e0 <col:68, col:77> col:77 flags 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x563ee2fa8858 <col:84, col:100> col:100 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x563ee2fa88d8 <col:110, col:133> col:116 read_user_data 'void *' cinit
| | `-ImplicitCastExpr 0x563ee32de898 <col:133> 'void *' <NullToPointer>
| |   `-IntegerLiteral 0x563ee32de878 <col:133> 'int' 0
| `-ParmVarDecl 0x563ee2fa8958 <col:136, col:160> col:142 write_user_data 'void *' cinit
|   `-ImplicitCastExpr 0x563ee32de8d0 <col:160> 'void *' <NullToPointer>
|     `-IntegerLiteral 0x563ee32de8b0 <col:160> 'int' 0
|-CXXMethodDecl 0x563ee2fa8e60 <line:76:5, col:117> col:16 set_handler_flags 'int (const Element *, const String &, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x563ee2fa8ba8 <col:34, col:49> col:49 e 'const Element *'
| |-ParmVarDecl 0x563ee2fa8c20 <col:52, col:66> col:66 hname 'const String &'
| |-ParmVarDecl 0x563ee2fa8c98 <col:73, col:82> col:82 set_flags 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x563ee2fa8d10 <col:93, col:116> col:102 clear_flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x563ee32de908 <col:116> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x563ee32de8e8 <col:116> 'int' 0
|-EnumDecl 0x563ee2fa8f20 <line:78:5, col:46> col:5
| `-EnumConstantDecl 0x563ee2fa9020 <col:12, col:35> col:12 FIRST_GLOBAL_HANDLER 'Router::(anonymous enum at ../dummy_inc/click/router.hh:78:5)'
|   `-ImplicitCastExpr 0x563ee2fa9070 <col:35> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x563ee2fa9000 <col:35> 'int' Int: 1073741824
|       `-IntegerLiteral 0x563ee2fa8fe0 <col:35> 'int' 1073741824
|-CXXMethodDecl 0x563ee2fa91f0 <line:79:5, col:60> col:16 hindex 'int (const Element *, const String &)' static
| |-ParmVarDecl 0x563ee2fa9098 <col:23, col:38> col:38 e 'const Element *'
| `-ParmVarDecl 0x563ee2fa9110 <col:41, col:55> col:55 hname 'const String &'
|-CXXMethodDecl 0x563ee2fa9408 <line:80:5, col:67> col:27 handler 'const Handler *(const Router *, int)' static
| |-ParmVarDecl 0x563ee2fa92b0 <col:35, col:49> col:49 router 'const Router *'
| `-ParmVarDecl 0x563ee2fa9330 <col:57, col:61> col:61 hindex 'int'
|-CXXMethodDecl 0x563ee2fa9738 <line:81:5, col:71> col:17 element_hindexes 'void (const Element *, Vector<int> &)' static
| |-ParmVarDecl 0x563ee2fa94c8 <col:34, col:49> col:49 e 'const Element *'
| `-ParmVarDecl 0x563ee2fa9620 <col:52, col:65> col:65 result 'Vector<int> &'
|-CXXMethodDecl 0x563ee2fa98c0 <line:84:5, col:43> col:11 attachment 'void *(const String &) const'
| `-ParmVarDecl 0x563ee2fa97f8 <col:22, col:36> col:36 aname 'const String &'
|-CXXMethodDecl 0x563ee2fa9a40 <line:85:5, col:48> col:12 force_attachment 'void *&(const String &)'
| `-ParmVarDecl 0x563ee2fa9978 <col:29, col:43> col:43 aname 'const String &'
|-CXXMethodDecl 0x563ee2fa9c50 <line:86:5, col:58> col:11 set_attachment 'void *(const String &, void *)'
| |-ParmVarDecl 0x563ee2fa9af8 <col:26, col:40> col:40 aname 'const String &'
| `-ParmVarDecl 0x563ee2fa9b78 <col:47, col:53> col:53 value 'void *'
|-CXXMethodDecl 0x563ee2fa9dd8 <line:88:5, col:63> col:19 chatter_channel 'ErrorHandler *(const String &) const'
| `-ParmVarDecl 0x563ee2fa9d10 <col:35, col:49> col:49 channel_name 'const String &'
|-CXXMethodDecl 0x563ee2fa9ef8 <line:89:5, col:43> col:27 arena_factory 'HashMap_ArenaFactory *() const'
|-CXXMethodDecl 0x563ee2fa9fe8 <line:91:5, col:40> col:25 thread_sched 'ThreadSched *() const' inline
|-CXXMethodDecl 0x563ee2faa158 <line:92:5, col:56> col:17 set_thread_sched 'void (ThreadSched *)' inline
| `-ParmVarDecl 0x563ee2faa098 <col:34, col:47> col:47 scheduler 'ThreadSched *'
|-CXXMethodDecl 0x563ee2faa2e0 <line:93:5, col:49> col:16 home_thread_id 'int (const Element *) const' inline
| `-ParmVarDecl 0x563ee2faa210 <col:31, col:46> col:46 e 'const Element *'
|-CXXMethodDecl 0x563ee2faa4e8 <line:94:5, col:69> col:17 set_home_thread_id 'void (const Element *, int)' inline
| |-ParmVarDecl 0x563ee2faa398 <col:36, col:51> col:51 e 'const Element *'
| `-ParmVarDecl 0x563ee2faa418 <col:54, col:58> col:58 home_thread 'int'
|-CXXMethodDecl 0x563ee2faa618 <line:98:5, col:34> col:22 name_info 'NameInfo *() const' inline
|-CXXMethodDecl 0x563ee2faa708 <line:99:5, col:31> col:15 force_name_info 'NameInfo *()'
|-CXXMethodDecl 0x563ee2faa7c8 <line:103:5, col:35> col:12 configuration_string 'String () const'
|-CXXMethodDecl 0x563ee2faa9c8 <line:104:5, col:68> col:10 unparse 'void (StringAccum &, const String &) const'
| |-ParmVarDecl 0x563ee2faa878 <col:18, col:31> col:31 sa 'StringAccum &'
| `-ParmVarDecl 0x563ee2faa8f0 <col:35, col:65> col:49 indent 'const String &' cinit
|   `-ExprWithCleanups 0x563ee32de9b8 <col:58, col:65> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x563ee32de9a0 <col:58, col:65> 'const String' lvalue
|       `-ImplicitCastExpr 0x563ee32de988 <col:58, col:65> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x563ee32de968 <col:58, col:65> 'String' (CXXTemporary 0x563ee32de968)
|           `-CXXTemporaryObjectExpr 0x563ee32de930 <col:58, col:65> 'String' 'void ()'
|-CXXMethodDecl 0x563ee2faab98 <line:105:5, col:81> col:10 unparse_requirements 'void (StringAccum &, const String &) const'
| |-ParmVarDecl 0x563ee2faaa88 <col:31, col:44> col:44 sa 'StringAccum &'
| `-ParmVarDecl 0x563ee2faab00 <col:48, col:78> col:62 indent 'const String &' cinit
|   `-ExprWithCleanups 0x563ee32dea68 <col:71, col:78> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x563ee32dea50 <col:71, col:78> 'const String' lvalue
|       `-ImplicitCastExpr 0x563ee32dea38 <col:71, col:78> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x563ee32dea18 <col:71, col:78> 'String' (CXXTemporary 0x563ee32dea18)
|           `-CXXTemporaryObjectExpr 0x563ee32de9e0 <col:71, col:78> 'String' 'void ()'
|-CXXMethodDecl 0x563ee2faad68 <line:106:5, col:81> col:10 unparse_declarations 'void (StringAccum &, const String &) const'
| |-ParmVarDecl 0x563ee2faac58 <col:31, col:44> col:44 sa 'StringAccum &'
| `-ParmVarDecl 0x563ee2faacd0 <col:48, col:78> col:62 indent 'const String &' cinit
|   `-ExprWithCleanups 0x563ee32deb18 <col:71, col:78> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x563ee32deb00 <col:71, col:78> 'const String' lvalue
|       `-ImplicitCastExpr 0x563ee32deae8 <col:71, col:78> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x563ee32deac8 <col:71, col:78> 'String' (CXXTemporary 0x563ee32deac8)
|           `-CXXTemporaryObjectExpr 0x563ee32dea90 <col:71, col:78> 'String' 'void ()'
|-CXXMethodDecl 0x563ee2faaf38 <line:107:5, col:80> col:10 unparse_connections 'void (StringAccum &, const String &) const'
| |-ParmVarDecl 0x563ee2faae28 <col:30, col:43> col:43 sa 'StringAccum &'
| `-ParmVarDecl 0x563ee2faaea0 <col:47, col:77> col:61 indent 'const String &' cinit
|   `-ExprWithCleanups 0x563ee32debc8 <col:70, col:77> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x563ee32debb0 <col:70, col:77> 'const String' lvalue
|       `-ImplicitCastExpr 0x563ee32deb98 <col:70, col:77> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x563ee32deb78 <col:70, col:77> 'String' (CXXTemporary 0x563ee32deb78)
|           `-CXXTemporaryObjectExpr 0x563ee32deb40 <col:70, col:77> 'String' 'void ()'
|-CXXMethodDecl 0x563ee2fab0b8 <line:109:5, col:51> col:12 element_ports_string 'String (const Element *) const'
| `-ParmVarDecl 0x563ee2faaff8 <col:33, col:48> col:48 e 'const Element *'
|-CXXConstructorDecl 0x563ee2fab2d8 <line:115:5, col:55> col:5 Router 'void (const String &, Master *)'
| |-ParmVarDecl 0x563ee2fab170 <col:12, col:26> col:26 configuration 'const String &'
| `-ParmVarDecl 0x563ee2fab1e8 <col:41, col:49> col:49 master 'Master *'
|-CXXDestructorDecl 0x563ee2fab3d8 <line:116:5, col:13> col:5 ~Router 'void ()' noexcept-unevaluated 0x563ee2fab3d8
|-CXXMethodDecl 0x563ee2fab4e0 <line:118:5, col:35> col:17 static_initialize 'void ()' static
|-CXXMethodDecl 0x563ee2fab5a0 <line:119:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x563ee2fab660 <line:121:5, col:21> col:17 use 'void ()' inline
|-CXXMethodDecl 0x563ee2fab720 <line:122:5, col:16> col:10 unuse 'void ()'
|-CXXMethodDecl 0x563ee2fab918 <line:124:5, col:65> col:10 add_requirement 'void (const String &, const String &)'
| |-ParmVarDecl 0x563ee2fab7d0 <col:26, col:40> col:40 type 'const String &'
| `-ParmVarDecl 0x563ee2fab848 <col:46, col:60> col:60 value 'const String &'
|-CXXMethodDecl 0x563ee2fabcd0 <line:125:5, col:112> col:9 add_element 'int (Element *, const String &, const String &, const String &, unsigned int)'
| |-ParmVarDecl 0x563ee2fab9d8 <col:21, col:30> col:30 e 'Element *'
| |-ParmVarDecl 0x563ee2faba50 <col:33, col:47> col:47 name 'const String &'
| |-ParmVarDecl 0x563ee2fabac8 <col:53, col:67> col:67 conf 'const String &'
| |-ParmVarDecl 0x563ee2fabb40 <col:73, col:87> col:87 filename 'const String &'
| `-ParmVarDecl 0x563ee2fabbc0 <col:97, col:106> col:106 lineno 'unsigned int'
|-CXXMethodDecl 0x563ee2fac030 <line:126:5, col:76> col:9 add_connection 'int (int, int, int, int)'
| |-ParmVarDecl 0x563ee2fabdb0 <col:24, col:28> col:28 from_idx 'int'
| |-ParmVarDecl 0x563ee2fabe30 <col:38, col:42> col:42 from_port 'int'
| |-ParmVarDecl 0x563ee2fabeb0 <col:53, col:57> col:57 to_idx 'int'
| `-ParmVarDecl 0x563ee2fabf30 <col:65, col:69> col:69 to_port 'int'
|-CXXMethodDecl 0x563ee2fac110 <line:131:5, col:37> col:20 hotswap_router 'Router *() const' inline
|-CXXMethodDecl 0x563ee2fac250 <line:132:5, col:43> col:10 set_hotswap_router 'void (Router *)'
| `-ParmVarDecl 0x563ee2fac1c0 <col:29, col:37> col:37 router 'Router *'
|-CXXMethodDecl 0x563ee2fac3a0 <line:134:5, col:38> col:9 initialize 'int (ErrorHandler *)'
| `-ParmVarDecl 0x563ee2fac308 <col:20, col:34> col:34 errh 'ErrorHandler *'
|-CXXMethodDecl 0x563ee2fac5a8 <line:135:5, col:54> col:10 used activate 'void (bool, ErrorHandler *)'
| |-ParmVarDecl 0x563ee2fac458 <col:19, col:24> col:24 foreground 'bool'
| `-ParmVarDecl 0x563ee2fac4d0 <col:36, col:50> col:50 errh 'ErrorHandler *'
|-CXXMethodDecl 0x563ee2fac6f8 <line:136:5, col:44> col:17 activate 'void (ErrorHandler *)' inline
| `-ParmVarDecl 0x563ee2fac668 <col:26, col:40> col:40 errh 'ErrorHandler *'
|-CXXMethodDecl 0x563ee2fac840 <line:137:5, col:47> col:17 set_foreground 'void (bool)' inline
| `-ParmVarDecl 0x563ee2fac7b0 <col:32, col:37> col:37 foreground 'bool'
|-CXXMethodDecl 0x563ee2faca80 <line:139:5, col:69> col:9 new_notifier_signal 'int (const char *, NotifierSignal &)'
| |-ParmVarDecl 0x563ee2fac900 <col:29, col:41> col:41 name 'const char *'
| `-ParmVarDecl 0x563ee2fac9a8 <col:47, col:63> col:63 signal 'NotifierSignal &'
|-CXXMethodDecl 0x563ee2facc08 <line:140:5, col:64> col:12 notifier_signal_name 'String (const atomic_uint32_t *) const'
| `-ParmVarDecl 0x563ee2facb40 <col:33, col:56> col:56 signal 'const atomic_uint32_t *'
|-CXXRecordDecl 0x563ee2faccb0 <line:145:5, line:167:5> line:145:12 referenced struct Port definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x563ee2facdc8 <col:5, col:12> col:12 implicit referenced struct Port
| |-FieldDecl 0x563ee2face70 <line:146:9, col:13> col:13 referenced idx 'int'
| |-FieldDecl 0x563ee2faced8 <line:147:9, col:13> col:13 referenced port 'int'
| |-CXXConstructorDecl 0x563ee2facf90 <line:149:9, line:150:9> line:149:9 used Port 'void ()'
| | `-CompoundStmt 0x563ee32debf0 <col:16, line:150:9>
| |-CXXConstructorDecl 0x563ee2fad168 <line:151:9, line:153:9> line:151:9 used Port 'void (int, int)'
| | |-ParmVarDecl 0x563ee2fad050 <col:14, col:18> col:18 used i 'int'
| | |-ParmVarDecl 0x563ee2fad0d0 <col:21, col:25> col:25 used p 'int'
| | |-CXXCtorInitializer Field 0x563ee2face70 'idx' 'int'
| | | `-ImplicitCastExpr 0x563ee32dec40 <line:152:19> 'int' <LValueToRValue>
| | |   `-DeclRefExpr 0x563ee32dec00 <col:19> 'int' lvalue ParmVar 0x563ee2fad050 'i' 'int'
| | |-CXXCtorInitializer Field 0x563ee2faced8 'port' 'int'
| | | `-ImplicitCastExpr 0x563ee32decc0 <col:28> 'int' <LValueToRValue>
| | |   `-DeclRefExpr 0x563ee32dec80 <col:28> 'int' lvalue ParmVar 0x563ee2fad0d0 'p' 'int'
| | `-CompoundStmt 0x563ee32ded10 <col:31, line:153:9>
| |-CXXMethodDecl 0x563ee2fad348 <line:155:9, line:157:9> line:155:14 used operator== 'bool (const Router::Port &) const'
| | |-ParmVarDecl 0x563ee2fad258 <col:25, col:37> col:37 used x 'const Router::Port &'
| | `-CompoundStmt 0x563ee32def10 <col:46, line:157:9>
| |   `-ReturnStmt 0x563ee32def00 <line:156:13, col:46>
| |     `-BinaryOperator 0x563ee32deee0 <col:20, col:46> 'bool' '&&'
| |       |-BinaryOperator 0x563ee32dede0 <col:20, col:29> 'bool' '=='
| |       | |-ImplicitCastExpr 0x563ee32dedb0 <col:20> 'int' <LValueToRValue>
| |       | | `-MemberExpr 0x563ee32ded30 <col:20> 'const int' lvalue ->idx 0x563ee2face70
| |       | |   `-CXXThisExpr 0x563ee32ded20 <col:20> 'const Router::Port *' implicit this
| |       | `-ImplicitCastExpr 0x563ee32dedc8 <col:27, col:29> 'int' <LValueToRValue>
| |       |   `-MemberExpr 0x563ee32ded80 <col:27, col:29> 'const int' lvalue .idx 0x563ee2face70
| |       |     `-DeclRefExpr 0x563ee32ded60 <col:27> 'const Router::Port' lvalue ParmVar 0x563ee2fad258 'x' 'const Router::Port &'
| |       `-BinaryOperator 0x563ee32deec0 <col:36, col:46> 'bool' '=='
| |         |-ImplicitCastExpr 0x563ee32dee90 <col:36> 'int' <LValueToRValue>
| |         | `-MemberExpr 0x563ee32dee10 <col:36> 'const int' lvalue ->port 0x563ee2faced8
| |         |   `-CXXThisExpr 0x563ee32dee00 <col:36> 'const Router::Port *' implicit this
| |         `-ImplicitCastExpr 0x563ee32deea8 <col:44, col:46> 'int' <LValueToRValue>
| |           `-MemberExpr 0x563ee32dee60 <col:44, col:46> 'const int' lvalue .port 0x563ee2faced8
| |             `-DeclRefExpr 0x563ee32dee40 <col:44> 'const Router::Port' lvalue ParmVar 0x563ee2fad258 'x' 'const Router::Port &'
| |-CXXMethodDecl 0x563ee2fad490 <line:158:9, line:160:9> line:158:14 operator!= 'bool (const Router::Port &) const'
| | |-ParmVarDecl 0x563ee2fad400 <col:25, col:37> col:37 used x 'const Router::Port &'
| | `-CompoundStmt 0x563ee32df118 <col:46, line:160:9>
| |   `-ReturnStmt 0x563ee32df108 <line:159:13, col:46>
| |     `-BinaryOperator 0x563ee32df0e8 <col:20, col:46> 'bool' '||'
| |       |-BinaryOperator 0x563ee32defe8 <col:20, col:29> 'bool' '!='
| |       | |-ImplicitCastExpr 0x563ee32defb8 <col:20> 'int' <LValueToRValue>
| |       | | `-MemberExpr 0x563ee32def38 <col:20> 'const int' lvalue ->idx 0x563ee2face70
| |       | |   `-CXXThisExpr 0x563ee32def28 <col:20> 'const Router::Port *' implicit this
| |       | `-ImplicitCastExpr 0x563ee32defd0 <col:27, col:29> 'int' <LValueToRValue>
| |       |   `-MemberExpr 0x563ee32def88 <col:27, col:29> 'const int' lvalue .idx 0x563ee2face70
| |       |     `-DeclRefExpr 0x563ee32def68 <col:27> 'const Router::Port' lvalue ParmVar 0x563ee2fad400 'x' 'const Router::Port &'
| |       `-BinaryOperator 0x563ee32df0c8 <col:36, col:46> 'bool' '!='
| |         |-ImplicitCastExpr 0x563ee32df098 <col:36> 'int' <LValueToRValue>
| |         | `-MemberExpr 0x563ee32df018 <col:36> 'const int' lvalue ->port 0x563ee2faced8
| |         |   `-CXXThisExpr 0x563ee32df008 <col:36> 'const Router::Port *' implicit this
| |         `-ImplicitCastExpr 0x563ee32df0b0 <col:44, col:46> 'int' <LValueToRValue>
| |           `-MemberExpr 0x563ee32df068 <col:44, col:46> 'const int' lvalue .port 0x563ee2faced8
| |             `-DeclRefExpr 0x563ee32df048 <col:44> 'const Router::Port' lvalue ParmVar 0x563ee2fad400 'x' 'const Router::Port &'
| |-CXXMethodDecl 0x563ee2fad5d8 <line:161:9, line:163:9> line:161:14 used operator< 'bool (const Router::Port &) const'
| | |-ParmVarDecl 0x563ee2fad548 <col:24, col:36> col:36 used x 'const Router::Port &'
| | `-CompoundStmt 0x563ee32df440 <col:45, line:163:9>
| |   `-ReturnStmt 0x563ee32df430 <line:162:13, col:65>
| |     `-BinaryOperator 0x563ee32df410 <col:20, col:65> 'bool' '||'
| |       |-BinaryOperator 0x563ee32df1f0 <col:20, col:28> 'bool' '<'
| |       | |-ImplicitCastExpr 0x563ee32df1c0 <col:20> 'int' <LValueToRValue>
| |       | | `-MemberExpr 0x563ee32df140 <col:20> 'const int' lvalue ->idx 0x563ee2face70
| |       | |   `-CXXThisExpr 0x563ee32df130 <col:20> 'const Router::Port *' implicit this
| |       | `-ImplicitCastExpr 0x563ee32df1d8 <col:26, col:28> 'int' <LValueToRValue>
| |       |   `-MemberExpr 0x563ee32df190 <col:26, col:28> 'const int' lvalue .idx 0x563ee2face70
| |       |     `-DeclRefExpr 0x563ee32df170 <col:26> 'const Router::Port' lvalue ParmVar 0x563ee2fad548 'x' 'const Router::Port &'
| |       `-ParenExpr 0x563ee32df3f0 <col:35, col:65> 'bool'
| |         `-BinaryOperator 0x563ee32df3d0 <col:36, col:61> 'bool' '&&'
| |           |-BinaryOperator 0x563ee32df2d0 <col:36, col:45> 'bool' '=='
| |           | |-ImplicitCastExpr 0x563ee32df2a0 <col:36> 'int' <LValueToRValue>
| |           | | `-MemberExpr 0x563ee32df220 <col:36> 'const int' lvalue ->idx 0x563ee2face70
| |           | |   `-CXXThisExpr 0x563ee32df210 <col:36> 'const Router::Port *' implicit this
| |           | `-ImplicitCastExpr 0x563ee32df2b8 <col:43, col:45> 'int' <LValueToRValue>
| |           |   `-MemberExpr 0x563ee32df270 <col:43, col:45> 'const int' lvalue .idx 0x563ee2face70
| |           |     `-DeclRefExpr 0x563ee32df250 <col:43> 'const Router::Port' lvalue ParmVar 0x563ee2fad548 'x' 'const Router::Port &'
| |           `-BinaryOperator 0x563ee32df3b0 <col:52, col:61> 'bool' '<'
| |             |-ImplicitCastExpr 0x563ee32df380 <col:52> 'int' <LValueToRValue>
| |             | `-MemberExpr 0x563ee32df300 <col:52> 'const int' lvalue ->port 0x563ee2faced8
| |             |   `-CXXThisExpr 0x563ee32df2f0 <col:52> 'const Router::Port *' implicit this
| |             `-ImplicitCastExpr 0x563ee32df398 <col:59, col:61> 'int' <LValueToRValue>
| |               `-MemberExpr 0x563ee32df350 <col:59, col:61> 'const int' lvalue .port 0x563ee2faced8
| |                 `-DeclRefExpr 0x563ee32df330 <col:59> 'const Router::Port' lvalue ParmVar 0x563ee2fad548 'x' 'const Router::Port &'
| |-CXXMethodDecl 0x563ee2fad720 <line:164:9, line:166:9> line:164:14 operator<= 'bool (const Router::Port &) const'
| | |-ParmVarDecl 0x563ee2fad690 <col:25, col:37> col:37 used x 'const Router::Port &'
| | `-CompoundStmt 0x563ee32df768 <col:46, line:166:9>
| |   `-ReturnStmt 0x563ee32df758 <line:165:13, col:66>
| |     `-BinaryOperator 0x563ee32df738 <col:20, col:66> 'bool' '||'
| |       |-BinaryOperator 0x563ee32df518 <col:20, col:28> 'bool' '<'
| |       | |-ImplicitCastExpr 0x563ee32df4e8 <col:20> 'int' <LValueToRValue>
| |       | | `-MemberExpr 0x563ee32df468 <col:20> 'const int' lvalue ->idx 0x563ee2face70
| |       | |   `-CXXThisExpr 0x563ee32df458 <col:20> 'const Router::Port *' implicit this
| |       | `-ImplicitCastExpr 0x563ee32df500 <col:26, col:28> 'int' <LValueToRValue>
| |       |   `-MemberExpr 0x563ee32df4b8 <col:26, col:28> 'const int' lvalue .idx 0x563ee2face70
| |       |     `-DeclRefExpr 0x563ee32df498 <col:26> 'const Router::Port' lvalue ParmVar 0x563ee2fad690 'x' 'const Router::Port &'
| |       `-ParenExpr 0x563ee32df718 <col:35, col:66> 'bool'
| |         `-BinaryOperator 0x563ee32df6f8 <col:36, col:62> 'bool' '&&'
| |           |-BinaryOperator 0x563ee32df5f8 <col:36, col:45> 'bool' '=='
| |           | |-ImplicitCastExpr 0x563ee32df5c8 <col:36> 'int' <LValueToRValue>
| |           | | `-MemberExpr 0x563ee32df548 <col:36> 'const int' lvalue ->idx 0x563ee2face70
| |           | |   `-CXXThisExpr 0x563ee32df538 <col:36> 'const Router::Port *' implicit this
| |           | `-ImplicitCastExpr 0x563ee32df5e0 <col:43, col:45> 'int' <LValueToRValue>
| |           |   `-MemberExpr 0x563ee32df598 <col:43, col:45> 'const int' lvalue .idx 0x563ee2face70
| |           |     `-DeclRefExpr 0x563ee32df578 <col:43> 'const Router::Port' lvalue ParmVar 0x563ee2fad690 'x' 'const Router::Port &'
| |           `-BinaryOperator 0x563ee32df6d8 <col:52, col:62> 'bool' '<='
| |             |-ImplicitCastExpr 0x563ee32df6a8 <col:52> 'int' <LValueToRValue>
| |             | `-MemberExpr 0x563ee32df628 <col:52> 'const int' lvalue ->port 0x563ee2faced8
| |             |   `-CXXThisExpr 0x563ee32df618 <col:52> 'const Router::Port *' implicit this
| |             `-ImplicitCastExpr 0x563ee32df6c0 <col:60, col:62> 'int' <LValueToRValue>
| |               `-MemberExpr 0x563ee32df678 <col:60, col:62> 'const int' lvalue .port 0x563ee2faced8
| |                 `-DeclRefExpr 0x563ee32df658 <col:60> 'const Router::Port' lvalue ParmVar 0x563ee2fad690 'x' 'const Router::Port &'
| |-CXXConstructorDecl 0x563ee32df780 <line:145:12> col:12 implicit constexpr Port 'void (const Router::Port &)' inline default trivial noexcept-unevaluated 0x563ee32df780
| | `-ParmVarDecl 0x563ee32df898 <col:12> col:12 'const Router::Port &'
| |-CXXConstructorDecl 0x563ee32df938 <col:12> col:12 implicit constexpr Port 'void (Router::Port &&)' inline default trivial noexcept-unevaluated 0x563ee32df938
| | `-ParmVarDecl 0x563ee32dfa48 <col:12> col:12 'Router::Port &&'
| |-CXXDestructorDecl 0x563ee32dfae0 <col:12> col:12 implicit referenced ~Port 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x563ee32dfdb0 <col:12> col:12 implicit operator= 'Router::Port &(const Router::Port &)' inline default trivial noexcept-unevaluated 0x563ee32dfdb0
| | `-ParmVarDecl 0x563ee32dfeb8 <col:12> col:12 'const Router::Port &'
| `-CXXMethodDecl 0x563ee32dff28 <col:12> col:12 implicit used operator= 'Router::Port &(Router::Port &&) noexcept' inline default trivial
|   |-ParmVarDecl 0x563ee32e0038 <col:12> col:12 used 'Router::Port &&'
|   `-CompoundStmt 0x563ee32e0358 <col:12>
|     |-BinaryOperator 0x563ee32e01f8 <col:12> 'int' lvalue '='
|     | |-MemberExpr 0x563ee32e01b0 <col:12> 'int' lvalue ->idx 0x563ee2face70
|     | | `-CXXThisExpr 0x563ee32e01a0 <col:12> 'Router::Port *' this
|     | `-ImplicitCastExpr 0x563ee32e01e0 <col:12> 'int' <LValueToRValue>
|     |   `-MemberExpr 0x563ee32e0170 <col:12> 'int' xvalue .idx 0x563ee2face70
|     |     `-CXXStaticCastExpr 0x563ee32e0140 <col:12> 'Router::Port' xvalue static_cast<struct Router::Port &&> <NoOp>
|     |       `-DeclRefExpr 0x563ee32e0110 <col:12> 'Router::Port' lvalue ParmVar 0x563ee32e0038 '' 'Router::Port &&'
|     |-BinaryOperator 0x563ee32e0300 <col:12> 'int' lvalue '='
|     | |-MemberExpr 0x563ee32e02b8 <col:12> 'int' lvalue ->port 0x563ee2faced8
|     | | `-CXXThisExpr 0x563ee32e02a8 <col:12> 'Router::Port *' this
|     | `-ImplicitCastExpr 0x563ee32e02e8 <col:12> 'int' <LValueToRValue>
|     |   `-MemberExpr 0x563ee32e0278 <col:12> 'int' xvalue .port 0x563ee2faced8
|     |     `-CXXStaticCastExpr 0x563ee32e0248 <col:12> 'Router::Port' xvalue static_cast<struct Router::Port &&> <NoOp>
|     |       `-DeclRefExpr 0x563ee32e0218 <col:12> 'Router::Port' lvalue ParmVar 0x563ee32e0038 '' 'Router::Port &&'
|     `-ReturnStmt 0x563ee32e0348 <col:12>
|       `-UnaryOperator 0x563ee32e0330 <col:12> 'Router::Port' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x563ee32e0320 <col:12> 'Router::Port *' this
|-CXXRecordDecl 0x563ee2fad7e0 <line:169:5, line:194:5> line:169:12 referenced struct Connection definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x563ee2fad8f8 <col:5, col:12> col:12 implicit referenced struct Connection
| |-FieldDecl 0x563ee2fadae8 <line:170:9, col:17> col:14 referenced p 'Router::Port [2]'
| |-CXXConstructorDecl 0x563ee2fadba0 <line:172:9, line:173:9> line:172:9 Connection 'void ()'
| | |-CXXCtorInitializer Field 0x563ee2fadae8 'p' 'Router::Port [2]'
| | | `-CXXConstructExpr 0x563ee32dfab8 <col:9> 'Router::Port [2]' 'void ()'
| | `-CompoundStmt 0x563ee32dfbf0 <col:22, line:173:9>
| |-CXXConstructorDecl 0x563ee2faded8 <line:174:9, line:177:9> line:174:9 Connection 'void (int, int, int, int)'
| | |-ParmVarDecl 0x563ee2fadc60 <col:20, col:24> col:24 used from_idx 'int'
| | |-ParmVarDecl 0x563ee2fadce0 <col:34, col:38> col:38 used from_port 'int'
| | |-ParmVarDecl 0x563ee2fadd60 <col:49, col:53> col:53 used to_idx 'int'
| | |-ParmVarDecl 0x563ee2fadde0 <col:61, col:65> col:65 used to_port 'int'
| | |-CXXCtorInitializer Field 0x563ee2fadae8 'p' 'Router::Port [2]'
| | | `-CXXConstructExpr 0x563ee32dfc00 <col:9> 'Router::Port [2]' 'void ()'
| | `-CompoundStmt 0x563ee32e0638 <col:74, line:177:9>
| |   |-ExprWithCleanups 0x563ee32e0428 <line:175:13, col:40> 'Router::Port' lvalue
| |   | `-CXXOperatorCallExpr 0x563ee32e03f0 <col:13, col:40> 'Router::Port' lvalue
| |   |   |-ImplicitCastExpr 0x563ee32e03d8 <col:18> 'Router::Port &(*)(Router::Port &&) noexcept' <FunctionToPointerDecay>
| |   |   | `-DeclRefExpr 0x563ee32e00c0 <col:18> 'Router::Port &(Router::Port &&) noexcept' lvalue CXXMethod 0x563ee32dff28 'operator=' 'Router::Port &(Router::Port &&) noexcept'
| |   |   |-ArraySubscriptExpr 0x563ee32dfcd0 <col:13, col:16> 'Router::Port' lvalue
| |   |   | |-ImplicitCastExpr 0x563ee32dfcb8 <col:13> 'Router::Port *' <ArrayToPointerDecay>
| |   |   | | `-MemberExpr 0x563ee32dfc68 <col:13> 'Router::Port [2]' lvalue ->p 0x563ee2fadae8
| |   |   | |   `-CXXThisExpr 0x563ee32dfc58 <col:13> 'Router::Connection *' implicit this
| |   |   | `-IntegerLiteral 0x563ee32dfc98 <col:15> 'int' 0
| |   |   `-MaterializeTemporaryExpr 0x563ee32e00a8 <col:20, col:40> 'Router::Port' xvalue
| |   |     `-CXXTemporaryObjectExpr 0x563ee32dfd70 <col:20, col:40> 'Router::Port' 'void (int, int)'
| |   |       |-ImplicitCastExpr 0x563ee32dfd40 <col:25> 'int' <LValueToRValue>
| |   |       | `-DeclRefExpr 0x563ee32dfd00 <col:25> 'int' lvalue ParmVar 0x563ee2fadd60 'to_idx' 'int'
| |   |       `-ImplicitCastExpr 0x563ee32dfd58 <col:33> 'int' <LValueToRValue>
| |   |         `-DeclRefExpr 0x563ee32dfd20 <col:33> 'int' lvalue ParmVar 0x563ee2fadde0 'to_port' 'int'
| |   `-ExprWithCleanups 0x563ee32e0620 <line:176:13, col:44> 'Router::Port' lvalue
| |     `-CXXOperatorCallExpr 0x563ee32e05e8 <col:13, col:44> 'Router::Port' lvalue
| |       |-ImplicitCastExpr 0x563ee32e05d0 <col:18> 'Router::Port &(*)(Router::Port &&) noexcept' <FunctionToPointerDecay>
| |       | `-DeclRefExpr 0x563ee32e05b0 <col:18> 'Router::Port &(Router::Port &&) noexcept' lvalue CXXMethod 0x563ee32dff28 'operator=' 'Router::Port &(Router::Port &&) noexcept'
| |       |-ArraySubscriptExpr 0x563ee32e04b8 <col:13, col:16> 'Router::Port' lvalue
| |       | |-ImplicitCastExpr 0x563ee32e04a0 <col:13> 'Router::Port *' <ArrayToPointerDecay>
| |       | | `-MemberExpr 0x563ee32e0450 <col:13> 'Router::Port [2]' lvalue ->p 0x563ee2fadae8
| |       | |   `-CXXThisExpr 0x563ee32e0440 <col:13> 'Router::Connection *' implicit this
| |       | `-IntegerLiteral 0x563ee32e0480 <col:15> 'int' 1
| |       `-MaterializeTemporaryExpr 0x563ee32e0598 <col:20, col:44> 'Router::Port' xvalue
| |         `-CXXTemporaryObjectExpr 0x563ee32e0558 <col:20, col:44> 'Router::Port' 'void (int, int)'
| |           |-ImplicitCastExpr 0x563ee32e0528 <col:25> 'int' <LValueToRValue>
| |           | `-DeclRefExpr 0x563ee32e04e8 <col:25> 'int' lvalue ParmVar 0x563ee2fadc60 'from_idx' 'int'
| |           `-ImplicitCastExpr 0x563ee32e0540 <col:35> 'int' <LValueToRValue>
| |             `-DeclRefExpr 0x563ee32e0508 <col:35> 'int' lvalue ParmVar 0x563ee2fadce0 'from_port' 'int'
| |-CXXMethodDecl 0x563ee2fae0a8 <line:179:9, line:182:9> line:179:21 operator[] 'const Router::Port &(int) const'
| | |-ParmVarDecl 0x563ee2fadfb8 <col:32, col:36> col:36 used i 'int'
| | `-CompoundStmt 0x563ee32e0bf8 <col:45, line:182:9>
| |   |-ParenExpr 0x563ee32e0ad8 <line:180:13, col:169> 'void'
| |   | `-ConditionalOperator 0x563ee32e0aa8 <col:14, col:168> 'void'
| |   |   |-CXXStaticCastExpr 0x563ee32e0778 <col:14, col:49> 'bool' static_cast<_Bool> <NoOp>
| |   |   | `-BinaryOperator 0x563ee32e0748 <col:34, col:48> 'bool' '&&'
| |   |   |   |-BinaryOperator 0x563ee32e06b0 <col:34, col:39> 'bool' '>='
| |   |   |   | |-ImplicitCastExpr 0x563ee32e0698 <col:34> 'int' <LValueToRValue>
| |   |   |   | | `-DeclRefExpr 0x563ee32e0658 <col:34> 'int' lvalue ParmVar 0x563ee2fadfb8 'i' 'int'
| |   |   |   | `-IntegerLiteral 0x563ee32e0678 <col:39> 'int' 0
| |   |   |   `-BinaryOperator 0x563ee32e0728 <col:44, col:48> 'bool' '<'
| |   |   |     |-ImplicitCastExpr 0x563ee32e0710 <col:44> 'int' <LValueToRValue>
| |   |   |     | `-DeclRefExpr 0x563ee32e06d0 <col:44> 'int' lvalue ParmVar 0x563ee2fadfb8 'i' 'int'
| |   |   |     `-IntegerLiteral 0x563ee32e06f0 <col:48> 'int' 2
| |   |   |-CXXFunctionalCastExpr 0x563ee32e07d8 <col:53, col:60> 'void' functional cast to void <ToVoid>
| |   |   | `-IntegerLiteral 0x563ee32e07b8 <col:59> 'int' 0
| |   |   `-CallExpr 0x563ee32e0a08 <col:64, col:168> 'void'
| |   |     |-ImplicitCastExpr 0x563ee32e09f0 <col:64> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x563ee32e09d0 <col:64> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x563ee2c314e0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
| |   |     |-ImplicitCastExpr 0x563ee32e0a48 <col:79> 'const char *' <ArrayToPointerDecay>
| |   |     | `-StringLiteral 0x563ee32e0848 <col:79> 'const char [16]' lvalue "i >= 0 && i < 2"
| |   |     |-ImplicitCastExpr 0x563ee32e0a60 <col:98> 'const char *' <ArrayToPointerDecay>
| |   |     | `-StringLiteral 0x563ee32e0870 <col:98> 'const char [29]' lvalue "../dummy_inc/click/router.hh"
| |   |     |-ImplicitCastExpr 0x563ee32e0a78 <col:130> 'unsigned int' <IntegralCast>
| |   |     | `-IntegerLiteral 0x563ee32e08a8 <col:130> 'int' 180
| |   |     `-ImplicitCastExpr 0x563ee32e0a90 <col:135, col:149> 'const char *' <ArrayToPointerDecay>
| |   |       `-UnaryOperator 0x563ee32e09b8 <col:135, col:149> 'const char [62]' lvalue prefix '__extension__' cannot overflow
| |   |         `-PredefinedExpr 0x563ee32e09a0 <col:149> 'const char [62]' lvalue __PRETTY_FUNCTION__
| |   |           `-StringLiteral 0x563ee32e0948 <col:149> 'const char [62]' lvalue "const Router::Port &Router::Connection::operator[](int) const"
| |   `-ReturnStmt 0x563ee32e0be8 <line:181:13, col:23>
| |     `-ArraySubscriptExpr 0x563ee32e0bc8 <col:20, col:23> 'const Router::Port' lvalue
| |       |-ImplicitCastExpr 0x563ee32e0b98 <col:20> 'const Router::Port *' <ArrayToPointerDecay>
| |       | `-MemberExpr 0x563ee32e0b08 <col:20> 'Router::Port const[2]' lvalue ->p 0x563ee2fadae8
| |       |   `-CXXThisExpr 0x563ee32e0af8 <col:20> 'const Router::Connection *' implicit this
| |       `-ImplicitCastExpr 0x563ee32e0bb0 <col:22> 'int' <LValueToRValue>
| |         `-DeclRefExpr 0x563ee32e0b38 <col:22> 'int' lvalue ParmVar 0x563ee2fadfb8 'i' 'int'
| |-CXXMethodDecl 0x563ee2fae258 <line:183:9, line:186:9> line:183:15 operator[] 'Router::Port &(int)'
| | |-ParmVarDecl 0x563ee2fae168 <col:26, col:30> col:30 used i 'int'
| | `-CompoundStmt 0x563ee32e4600 <col:33, line:186:9>
| |   |-ParenExpr 0x563ee32e4520 <line:184:13, col:169> 'void'
| |   | `-ConditionalOperator 0x563ee32e44f0 <col:14, col:168> 'void'
| |   |   |-CXXStaticCastExpr 0x563ee32e0d38 <col:14, col:49> 'bool' static_cast<_Bool> <NoOp>
| |   |   | `-BinaryOperator 0x563ee32e0d08 <col:34, col:48> 'bool' '&&'
| |   |   |   |-BinaryOperator 0x563ee32e0c70 <col:34, col:39> 'bool' '>='
| |   |   |   | |-ImplicitCastExpr 0x563ee32e0c58 <col:34> 'int' <LValueToRValue>
| |   |   |   | | `-DeclRefExpr 0x563ee32e0c18 <col:34> 'int' lvalue ParmVar 0x563ee2fae168 'i' 'int'
| |   |   |   | `-IntegerLiteral 0x563ee32e0c38 <col:39> 'int' 0
| |   |   |   `-BinaryOperator 0x563ee32e0ce8 <col:44, col:48> 'bool' '<'
| |   |   |     |-ImplicitCastExpr 0x563ee32e0cd0 <col:44> 'int' <LValueToRValue>
| |   |   |     | `-DeclRefExpr 0x563ee32e0c90 <col:44> 'int' lvalue ParmVar 0x563ee2fae168 'i' 'int'
| |   |   |     `-IntegerLiteral 0x563ee32e0cb0 <col:48> 'int' 2
| |   |   |-CXXFunctionalCastExpr 0x563ee32e0d98 <col:53, col:60> 'void' functional cast to void <ToVoid>
| |   |   | `-IntegerLiteral 0x563ee32e0d78 <col:59> 'int' 0
| |   |   `-CallExpr 0x563ee32e4450 <col:64, col:168> 'void'
| |   |     |-ImplicitCastExpr 0x563ee32e4438 <col:64> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x563ee32e4418 <col:64> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x563ee2c314e0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
| |   |     |-ImplicitCastExpr 0x563ee32e4490 <col:79> 'const char *' <ArrayToPointerDecay>
| |   |     | `-StringLiteral 0x563ee32e0e08 <col:79> 'const char [16]' lvalue "i >= 0 && i < 2"
| |   |     |-ImplicitCastExpr 0x563ee32e44a8 <col:98> 'const char *' <ArrayToPointerDecay>
| |   |     | `-StringLiteral 0x563ee32e0e30 <col:98> 'const char [29]' lvalue "../dummy_inc/click/router.hh"
| |   |     |-ImplicitCastExpr 0x563ee32e44c0 <col:130> 'unsigned int' <IntegralCast>
| |   |     | `-IntegerLiteral 0x563ee32e0e68 <col:130> 'int' 184
| |   |     `-ImplicitCastExpr 0x563ee32e44d8 <col:135, col:149> 'const char *' <ArrayToPointerDecay>
| |   |       `-UnaryOperator 0x563ee32e4400 <col:135, col:149> 'const char [50]' lvalue prefix '__extension__' cannot overflow
| |   |         `-PredefinedExpr 0x563ee32e43e8 <col:149> 'const char [50]' lvalue __PRETTY_FUNCTION__
| |   |           `-StringLiteral 0x563ee32e4398 <col:149> 'const char [50]' lvalue "Router::Port &Router::Connection::operator[](int)"
| |   `-ReturnStmt 0x563ee32e45f0 <line:185:13, col:23>
| |     `-ArraySubscriptExpr 0x563ee32e45d0 <col:20, col:23> 'Router::Port' lvalue
| |       |-ImplicitCastExpr 0x563ee32e45a0 <col:20> 'Router::Port *' <ArrayToPointerDecay>
| |       | `-MemberExpr 0x563ee32e4550 <col:20> 'Router::Port [2]' lvalue ->p 0x563ee2fadae8
| |       |   `-CXXThisExpr 0x563ee32e4540 <col:20> 'Router::Connection *' implicit this
| |       `-ImplicitCastExpr 0x563ee32e45b8 <col:22> 'int' <LValueToRValue>
| |         `-DeclRefExpr 0x563ee32e4580 <col:22> 'int' lvalue ParmVar 0x563ee2fae168 'i' 'int'
| |-CXXMethodDecl 0x563ee2fae3f8 <line:188:9, line:190:9> line:188:14 operator== 'bool (const Router::Connection &) const'
| | |-ParmVarDecl 0x563ee2fae338 <col:25, col:43> col:43 used x 'const Router::Connection &'
| | `-CompoundStmt 0x563ee32e49d8 <col:52, line:190:9>
| |   `-ReturnStmt 0x563ee32e49c8 <line:189:13, col:51>
| |     `-BinaryOperator 0x563ee32e49a8 <col:20, col:51> 'bool' '&&'
| |       |-CXXOperatorCallExpr 0x563ee32e47c0 <col:20, col:33> 'bool'
| |       | |-ImplicitCastExpr 0x563ee32e47a8 <col:25> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
| |       | | `-DeclRefExpr 0x563ee32e4760 <col:25> 'bool (const Router::Port &) const' lvalue CXXMethod 0x563ee2fad348 'operator==' 'bool (const Router::Port &) const'
| |       | |-ArraySubscriptExpr 0x563ee32e4698 <col:20, col:23> 'const Router::Port' lvalue
| |       | | |-ImplicitCastExpr 0x563ee32e4680 <col:20> 'const Router::Port *' <ArrayToPointerDecay>
| |       | | | `-MemberExpr 0x563ee32e4630 <col:20> 'Router::Port const[2]' lvalue ->p 0x563ee2fadae8
| |       | | |   `-CXXThisExpr 0x563ee32e4620 <col:20> 'const Router::Connection *' implicit this
| |       | | `-IntegerLiteral 0x563ee32e4660 <col:22> 'int' 0
| |       | `-ArraySubscriptExpr 0x563ee32e4740 <col:28, col:33> 'const Router::Port' lvalue
| |       |   |-ImplicitCastExpr 0x563ee32e4728 <col:28, col:30> 'const Router::Port *' <ArrayToPointerDecay>
| |       |   | `-MemberExpr 0x563ee32e46d8 <col:28, col:30> 'Router::Port const[2]' lvalue .p 0x563ee2fadae8
| |       |   |   `-DeclRefExpr 0x563ee32e46b8 <col:28> 'const Router::Connection' lvalue ParmVar 0x563ee2fae338 'x' 'const Router::Connection &'
| |       |   `-IntegerLiteral 0x563ee32e4708 <col:32> 'int' 0
| |       `-CXXOperatorCallExpr 0x563ee32e4970 <col:38, col:51> 'bool'
| |         |-ImplicitCastExpr 0x563ee32e4958 <col:43> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
| |         | `-DeclRefExpr 0x563ee32e4938 <col:43> 'bool (const Router::Port &) const' lvalue CXXMethod 0x563ee2fad348 'operator==' 'bool (const Router::Port &) const'
| |         |-ArraySubscriptExpr 0x563ee32e4870 <col:38, col:41> 'const Router::Port' lvalue
| |         | |-ImplicitCastExpr 0x563ee32e4858 <col:38> 'const Router::Port *' <ArrayToPointerDecay>
| |         | | `-MemberExpr 0x563ee32e4808 <col:38> 'Router::Port const[2]' lvalue ->p 0x563ee2fadae8
| |         | |   `-CXXThisExpr 0x563ee32e47f8 <col:38> 'const Router::Connection *' implicit this
| |         | `-IntegerLiteral 0x563ee32e4838 <col:40> 'int' 1
| |         `-ArraySubscriptExpr 0x563ee32e4918 <col:46, col:51> 'const Router::Port' lvalue
| |           |-ImplicitCastExpr 0x563ee32e4900 <col:46, col:48> 'const Router::Port *' <ArrayToPointerDecay>
| |           | `-MemberExpr 0x563ee32e48b0 <col:46, col:48> 'Router::Port const[2]' lvalue .p 0x563ee2fadae8
| |           |   `-DeclRefExpr 0x563ee32e4890 <col:46> 'const Router::Connection' lvalue ParmVar 0x563ee2fae338 'x' 'const Router::Connection &'
| |           `-IntegerLiteral 0x563ee32e48e0 <col:50> 'int' 1
| `-CXXMethodDecl 0x563ee2fae540 <line:191:9, line:193:9> line:191:14 operator< 'bool (const Router::Connection &) const'
|   |-ParmVarDecl 0x563ee2fae4b0 <col:24, col:42> col:42 used x 'const Router::Connection &'
|   `-CompoundStmt 0x563ee32e4f70 <col:51, line:193:9>
|     `-ReturnStmt 0x563ee32e4f60 <line:192:13, col:69>
|       `-BinaryOperator 0x563ee32e4f40 <col:20, col:69> 'bool' '||'
|         |-CXXOperatorCallExpr 0x563ee32e4b68 <col:20, col:32> 'bool'
|         | |-ImplicitCastExpr 0x563ee32e4b50 <col:25> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
|         | | `-DeclRefExpr 0x563ee32e4b30 <col:25> 'bool (const Router::Port &) const' lvalue CXXMethod 0x563ee2fad5d8 'operator<' 'bool (const Router::Port &) const'
|         | |-ArraySubscriptExpr 0x563ee32e4a68 <col:20, col:23> 'const Router::Port' lvalue
|         | | |-ImplicitCastExpr 0x563ee32e4a50 <col:20> 'const Router::Port *' <ArrayToPointerDecay>
|         | | | `-MemberExpr 0x563ee32e4a00 <col:20> 'Router::Port const[2]' lvalue ->p 0x563ee2fadae8
|         | | |   `-CXXThisExpr 0x563ee32e49f0 <col:20> 'const Router::Connection *' implicit this
|         | | `-IntegerLiteral 0x563ee32e4a30 <col:22> 'int' 0
|         | `-ArraySubscriptExpr 0x563ee32e4b10 <col:27, col:32> 'const Router::Port' lvalue
|         |   |-ImplicitCastExpr 0x563ee32e4af8 <col:27, col:29> 'const Router::Port *' <ArrayToPointerDecay>
|         |   | `-MemberExpr 0x563ee32e4aa8 <col:27, col:29> 'Router::Port const[2]' lvalue .p 0x563ee2fadae8
|         |   |   `-DeclRefExpr 0x563ee32e4a88 <col:27> 'const Router::Connection' lvalue ParmVar 0x563ee2fae4b0 'x' 'const Router::Connection &'
|         |   `-IntegerLiteral 0x563ee32e4ad8 <col:31> 'int' 0
|         `-ParenExpr 0x563ee32e4f20 <col:37, col:69> 'bool'
|           `-BinaryOperator 0x563ee32e4f00 <col:38, col:68> 'bool' '&&'
|             |-CXXOperatorCallExpr 0x563ee32e4d18 <col:38, col:51> 'bool'
|             | |-ImplicitCastExpr 0x563ee32e4d00 <col:43> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
|             | | `-DeclRefExpr 0x563ee32e4ce0 <col:43> 'bool (const Router::Port &) const' lvalue CXXMethod 0x563ee2fad348 'operator==' 'bool (const Router::Port &) const'
|             | |-ArraySubscriptExpr 0x563ee32e4c18 <col:38, col:41> 'const Router::Port' lvalue
|             | | |-ImplicitCastExpr 0x563ee32e4c00 <col:38> 'const Router::Port *' <ArrayToPointerDecay>
|             | | | `-MemberExpr 0x563ee32e4bb0 <col:38> 'Router::Port const[2]' lvalue ->p 0x563ee2fadae8
|             | | |   `-CXXThisExpr 0x563ee32e4ba0 <col:38> 'const Router::Connection *' implicit this
|             | | `-IntegerLiteral 0x563ee32e4be0 <col:40> 'int' 0
|             | `-ArraySubscriptExpr 0x563ee32e4cc0 <col:46, col:51> 'const Router::Port' lvalue
|             |   |-ImplicitCastExpr 0x563ee32e4ca8 <col:46, col:48> 'const Router::Port *' <ArrayToPointerDecay>
|             |   | `-MemberExpr 0x563ee32e4c58 <col:46, col:48> 'Router::Port const[2]' lvalue .p 0x563ee2fadae8
|             |   |   `-DeclRefExpr 0x563ee32e4c38 <col:46> 'const Router::Connection' lvalue ParmVar 0x563ee2fae4b0 'x' 'const Router::Connection &'
|             |   `-IntegerLiteral 0x563ee32e4c88 <col:50> 'int' 0
|             `-CXXOperatorCallExpr 0x563ee32e4ec8 <col:56, col:68> 'bool'
|               |-ImplicitCastExpr 0x563ee32e4eb0 <col:61> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x563ee32e4e90 <col:61> 'bool (const Router::Port &) const' lvalue CXXMethod 0x563ee2fad5d8 'operator<' 'bool (const Router::Port &) const'
|               |-ArraySubscriptExpr 0x563ee32e4dc8 <col:56, col:59> 'const Router::Port' lvalue
|               | |-ImplicitCastExpr 0x563ee32e4db0 <col:56> 'const Router::Port *' <ArrayToPointerDecay>
|               | | `-MemberExpr 0x563ee32e4d60 <col:56> 'Router::Port const[2]' lvalue ->p 0x563ee2fadae8
|               | |   `-CXXThisExpr 0x563ee32e4d50 <col:56> 'const Router::Connection *' implicit this
|               | `-IntegerLiteral 0x563ee32e4d90 <col:58> 'int' 1
|               `-ArraySubscriptExpr 0x563ee32e4e70 <col:63, col:68> 'const Router::Port' lvalue
|                 |-ImplicitCastExpr 0x563ee32e4e58 <col:63, col:65> 'const Router::Port *' <ArrayToPointerDecay>
|                 | `-MemberExpr 0x563ee32e4e08 <col:63, col:65> 'Router::Port const[2]' lvalue .p 0x563ee2fadae8
|                 |   `-DeclRefExpr 0x563ee32e4de8 <col:63> 'const Router::Connection' lvalue ParmVar 0x563ee2fae4b0 'x' 'const Router::Connection &'
|                 `-IntegerLiteral 0x563ee32e4e38 <col:67> 'int' 1
|-AccessSpecDecl 0x563ee2fae600 <line:216:3, col:10> col:3 private
|-CXXRecordDecl 0x563ee2fae628 <line:218:5, col:11> col:11 class RouterContextErrh
|-EnumDecl 0x563ee32acc60 <line:220:5, line:223:5> line:220:5
| |-EnumConstantDecl 0x563ee32acd20 <line:221:9> col:9 ROUTER_NEW 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
| |-EnumConstantDecl 0x563ee32acd70 <col:21> col:21 referenced ROUTER_PRECONFIGURE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
| |-EnumConstantDecl 0x563ee32acdc0 <col:42> col:42 ROUTER_PREINITIALIZE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
| |-EnumConstantDecl 0x563ee32ace10 <line:222:9> col:9 referenced ROUTER_LIVE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
| `-EnumConstantDecl 0x563ee32ace60 <col:22> col:22 ROUTER_DEAD 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
|-EnumDecl 0x563ee32aceb0 <line:224:5, line:227:5> line:224:5
| |-EnumConstantDecl 0x563ee32acfc8 <line:225:9, col:25> col:9 referenced RUNNING_DEAD 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
| | `-ConstantExpr 0x563ee32acfa8 <col:24, col:25> 'int' Int: -2
| |   `-UnaryOperator 0x563ee32acf90 <col:24, col:25> 'int' prefix '-'
| |     `-IntegerLiteral 0x563ee32acf70 <col:25> 'int' 2
| |-EnumConstantDecl 0x563ee32ad070 <col:28, col:48> col:28 RUNNING_INACTIVE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
| | `-ConstantExpr 0x563ee32ad050 <col:47, col:48> 'int' Int: -1
| |   `-UnaryOperator 0x563ee32ad038 <col:47, col:48> 'int' prefix '-'
| |     `-IntegerLiteral 0x563ee32ad018 <col:48> 'int' 1
| |-EnumConstantDecl 0x563ee32ad100 <col:51, col:71> col:51 RUNNING_PREPARING 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
| | `-ConstantExpr 0x563ee32ad0e0 <col:71> 'int' Int: 0
| |   `-IntegerLiteral 0x563ee32ad0c0 <col:71> 'int' 0
| |-EnumConstantDecl 0x563ee32ad190 <line:226:9, col:30> col:9 referenced RUNNING_BACKGROUND 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
| | `-ConstantExpr 0x563ee32ad170 <col:30> 'int' Int: 1
| |   `-IntegerLiteral 0x563ee32ad150 <col:30> 'int' 1
| `-EnumConstantDecl 0x563ee32ad220 <col:33, col:50> col:33 referenced RUNNING_ACTIVE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
|   `-ConstantExpr 0x563ee32ad200 <col:50> 'int' Int: 2
|     `-IntegerLiteral 0x563ee32ad1e0 <col:50> 'int' 2
|-FieldDecl 0x563ee32ad280 <line:229:5, col:13> col:13 referenced _master 'Master *'
|-FieldDecl 0x563ee32ad2e0 <line:231:5, col:21> col:21 referenced _runcount 'atomic_uint32_t'
|-FieldDecl 0x563ee32ad348 <line:233:5, col:18> col:18 referenced _state 'volatile int'
|-FieldDecl 0x563ee32ad3e8 <line:234:5, col:30> col:10 _have_connections 'bool'
| `-ConstantExpr 0x563ee32ad3c8 <col:30> 'int' Int: 1
|   `-IntegerLiteral 0x563ee32ad398 <col:30> 'int' 1
|-FieldDecl 0x563ee32ad488 <line:235:5, col:33> col:18 _conn_sorted 'bool' mutable
| `-ConstantExpr 0x563ee32ad468 <col:33> 'int' Int: 1
|   `-IntegerLiteral 0x563ee32ad438 <col:33> 'int' 1
|-FieldDecl 0x563ee32ad528 <line:236:5, col:32> col:10 _have_configuration 'bool'
| `-ConstantExpr 0x563ee32ad508 <col:32> 'int' Int: 1
|   `-IntegerLiteral 0x563ee32ad4d8 <col:32> 'int' 1
|-FieldDecl 0x563ee32ad590 <line:237:5, col:18> col:18 referenced _running 'volatile int'
|-FieldDecl 0x563ee32ad5f0 <line:239:5, col:21> col:21 referenced _refcount 'atomic_uint32_t'
|-FieldDecl 0x563ee32b4450 <line:241:5, col:23> col:23 referenced _elements 'Vector<Element *>':'Vector<Element *>'
|-FieldDecl 0x563ee32b4550 <line:242:5, col:20> col:20 _element_names 'Vector<String>':'Vector<String>'
|-FieldDecl 0x563ee32b4650 <line:243:5, col:20> col:20 _element_configurations 'Vector<String>':'Vector<String>'
|-FieldDecl 0x563ee32bb5f0 <line:244:5, col:22> col:22 _element_landmarkids 'Vector<uint32_t>':'Vector<unsigned int>'
|-FieldDecl 0x563ee32bb700 <line:245:5, col:25> col:25 referenced _element_home_thread_ids 'Vector<int>':'Vector<int>' mutable
|-CXXRecordDecl 0x563ee32bb750 <line:247:5, line:250:5> line:247:12 referenced struct element_landmark_t definition
| |-DefinitionData aggregate standard_layout has_mutable_fields
| | |-DefaultConstructor exists non_trivial needs_implicit
| | |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveConstructor exists simple non_trivial needs_overload_resolution
| | |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveAssignment exists simple non_trivial needs_overload_resolution
| | `-Destructor simple non_trivial needs_overload_resolution
| |-CXXRecordDecl 0x563ee32bb868 <col:5, col:12> col:12 implicit struct element_landmark_t
| |-FieldDecl 0x563ee32bb908 <line:248:9, col:18> col:18 first_landmarkid 'uint32_t':'unsigned int'
| |-FieldDecl 0x563ee32bb968 <line:249:9, col:16> col:16 filename 'String'
| |-CXXConstructorDecl 0x563ee32bba00 <line:247:12> col:12 implicit element_landmark_t 'void (const Router::element_landmark_t &)' inline default noexcept-unevaluated 0x563ee32bba00
| | `-ParmVarDecl 0x563ee32bbb18 <col:12> col:12 'const Router::element_landmark_t &'
| |-CXXConstructorDecl 0x563ee32bbbb8 <col:12> col:12 implicit element_landmark_t 'void (Router::element_landmark_t &&)' inline default noexcept-unevaluated 0x563ee32bbbb8
| | `-ParmVarDecl 0x563ee32bbcc8 <col:12> col:12 'Router::element_landmark_t &&'
| |-CXXMethodDecl 0x563ee32bbd68 <col:12> col:12 implicit operator= 'Router::element_landmark_t &(const Router::element_landmark_t &)' inline default noexcept-unevaluated 0x563ee32bbd68
| | `-ParmVarDecl 0x563ee32bbe78 <col:12> col:12 'const Router::element_landmark_t &'
| |-CXXMethodDecl 0x563ee32bbee8 <col:12> col:12 implicit operator= 'Router::element_landmark_t &(Router::element_landmark_t &&)' inline default noexcept-unevaluated 0x563ee32bbee8
| | `-ParmVarDecl 0x563ee32bbff8 <col:12> col:12 'Router::element_landmark_t &&'
| `-CXXDestructorDecl 0x563ee32bc080 <col:12> col:12 implicit ~element_landmark_t 'void ()' inline default noexcept-unevaluated 0x563ee32bc080
|-FieldDecl 0x563ee32c8190 <line:251:5, col:32> col:32 _element_landmarks 'Vector<Router::element_landmark_t>':'Vector<Router::element_landmark_t>'
|-FieldDecl 0x563ee32c81f0 <line:252:5, col:14> col:14 _last_landmarkid 'uint32_t':'unsigned int'
|-FieldDecl 0x563ee32c8300 <line:254:5, col:25> col:25 _element_name_sorter 'Vector<int>':'Vector<int>' mutable
|-FieldDecl 0x563ee32c8658 <line:255:5, col:40> col:17 referenced _element_gport_offset 'Vector<int> [2]'
|-FieldDecl 0x563ee32c8760 <line:256:5, col:17> col:17 _element_configure_order 'Vector<int>':'Vector<int>'
|-FieldDecl 0x563ee32d1140 <line:258:5, col:32> col:32 _conn 'Vector<Router::Connection>':'Vector<Router::Connection>' mutable
|-FieldDecl 0x563ee32d1250 <line:259:5, col:25> col:25 _conn_output_sorter 'Vector<int>':'Vector<int>' mutable
|-FieldDecl 0x563ee32d1350 <line:261:5, col:20> col:20 _requirements 'Vector<String>':'Vector<String>'
|-FieldDecl 0x563ee32d1460 <line:263:5, col:17> col:17 _ehandler_first_by_element 'Vector<int>':'Vector<int>'
|-FieldDecl 0x563ee32d1570 <line:264:5, col:17> col:17 _ehandler_to_handler 'Vector<int>':'Vector<int>'
|-FieldDecl 0x563ee32d1680 <line:265:5, col:17> col:17 _ehandler_next 'Vector<int>':'Vector<int>'
|-FieldDecl 0x563ee32d1790 <line:267:5, col:17> col:17 _handler_first_by_name 'Vector<int>':'Vector<int>'
|-EnumDecl 0x563ee32d17e0 <line:269:5, col:33> col:5
| `-EnumConstantDecl 0x563ee32d18e0 <col:12, col:29> col:12 HANDLER_BUFSIZ 'Router::(anonymous enum at ../dummy_inc/click/router.hh:269:5)'
|   `-ImplicitCastExpr 0x563ee32d1930 <col:29> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x563ee32d18c0 <col:29> 'int' Int: 256
|       `-IntegerLiteral 0x563ee32d18a0 <col:29> 'int' 256
|-FieldDecl 0x563ee32d1990 <line:270:5, col:15> col:15 _handler_bufs 'Handler **'
|-FieldDecl 0x563ee32d19f8 <line:271:5, col:9> col:9 _nhandlers_bufs 'int'
|-FieldDecl 0x563ee32d1a60 <line:272:5, col:9> col:9 _free_handler 'int'
|-FieldDecl 0x563ee32d1b60 <line:274:5, col:20> col:20 _attachment_names 'Vector<String>':'Vector<String>'
|-FieldDecl 0x563ee32d9ea0 <line:275:5, col:19> col:19 _attachments 'Vector<void *>':'Vector<void *>'
|-FieldDecl 0x563ee32d9f00 <line:277:5, col:14> col:14 referenced _root_element 'Element *'
|-FieldDecl 0x563ee32d9f60 <line:278:5, col:12> col:12 _configuration 'String'
|-CXXRecordDecl 0x563ee32d9fb0 <line:280:5, line:290:5> line:280:12 referenced struct notifier_signals_t definition
| |-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| | |-DefaultConstructor
| | |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveConstructor exists simple non_trivial needs_overload_resolution
| | |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveAssignment exists simple non_trivial needs_overload_resolution
| | `-Destructor simple non_trivial needs_overload_resolution
| |-CXXRecordDecl 0x563ee32da0c8 <col:5, col:12> col:12 implicit referenced struct notifier_signals_t
| |-EnumDecl 0x563ee32da158 <line:281:9, col:32> col:9
| | `-EnumConstantDecl 0x563ee32da260 <col:16, col:27> col:16 referenced capacity 'Router::notifier_signals_t::(anonymous enum at ../dummy_inc/click/router.hh:281:9)'
| |   `-ImplicitCastExpr 0x563ee32da2b0 <col:27> 'unsigned int' <IntegralCast>
| |     `-ConstantExpr 0x563ee32da240 <col:27> 'int' Int: 4096
| |       `-IntegerLiteral 0x563ee32da220 <col:27> 'int' 4096
| |-FieldDecl 0x563ee32da2d8 <line:282:9, col:16> col:16 name 'String'
| |-FieldDecl 0x563ee32da340 <line:283:9, col:13> col:13 nsig 'int'
| |-FieldDecl 0x563ee32da538 <line:284:9, col:42> col:25 referenced sig 'atomic_uint32_t [128]'
| |-FieldDecl 0x563ee32da5c8 <line:285:9, col:29> col:29 next 'Router::notifier_signals_t *'
| |-CXXConstructorDecl 0x563ee32da788 <line:286:9, line:289:9> line:286:9 notifier_signals_t 'void (const String &, Router::notifier_signals_t *)'
| | |-ParmVarDecl 0x563ee32da628 <col:28, col:42> col:42 used n 'const String &'
| | |-ParmVarDecl 0x563ee32da6a0 <col:45, col:65> col:65 used nx 'Router::notifier_signals_t *'
| | |-CXXCtorInitializer Field 0x563ee32da2d8 'name' 'String'
| | | `-CXXConstructExpr 0x563ee32e4fc8 <line:287:15, col:21> 'String' 'void (const String &)'
| | |   `-DeclRefExpr 0x563ee32e4f88 <col:20> 'const String' lvalue ParmVar 0x563ee32da628 'n' 'const String &'
| | |-CXXCtorInitializer Field 0x563ee32da340 'nsig' 'int'
| | | `-IntegerLiteral 0x563ee32e5020 <col:29> 'int' 0
| | |-CXXCtorInitializer Field 0x563ee32da538 'sig' 'atomic_uint32_t [128]'
| | | `-CXXConstructExpr 0x563ee32e5108 <line:286:9> 'atomic_uint32_t [128]' 'void () noexcept'
| | |-CXXCtorInitializer Field 0x563ee32da5c8 'next' 'Router::notifier_signals_t *'
| | | `-ImplicitCastExpr 0x563ee32e50c8 <line:287:38> 'Router::notifier_signals_t *' <LValueToRValue>
| | |   `-DeclRefExpr 0x563ee32e5088 <col:38> 'Router::notifier_signals_t *' lvalue ParmVar 0x563ee32da6a0 'nx' 'Router::notifier_signals_t *'
| | `-CompoundStmt 0x563ee32e5398 <col:42, line:289:9>
| |   `-CallExpr 0x563ee32e5348 <line:288:13, col:43> 'void *'
| |     |-ImplicitCastExpr 0x563ee32e5330 <col:13> 'void *(*)(void *, int, size_t) throw()' <FunctionToPointerDecay>
| |     | `-DeclRefExpr 0x563ee32e5310 <col:13> 'void *(void *, int, size_t) throw()' lvalue Function 0x563ee2df57a8 'memset' 'void *(void *, int, size_t) throw()'
| |     |-ImplicitCastExpr 0x563ee32e5380 <col:20, col:26> 'void *' <BitCast>
| |     | `-UnaryOperator 0x563ee32e5258 <col:20, col:26> 'atomic_uint32_t *' prefix '&' cannot overflow
| |     |   `-ArraySubscriptExpr 0x563ee32e5238 <col:21, col:26> 'atomic_uint32_t' lvalue
| |     |     |-ImplicitCastExpr 0x563ee32e5220 <col:21> 'atomic_uint32_t *' <ArrayToPointerDecay>
| |     |     | `-MemberExpr 0x563ee32e51d0 <col:21> 'atomic_uint32_t [128]' lvalue ->sig 0x563ee32da538
| |     |     |   `-CXXThisExpr 0x563ee32e51c0 <col:21> 'Router::notifier_signals_t *' implicit this
| |     |     `-IntegerLiteral 0x563ee32e5200 <col:25> 'int' 0
| |     |-IntegerLiteral 0x563ee32e5270 <col:29> 'int' 0
| |     `-UnaryExprOrTypeTraitExpr 0x563ee32e52f0 <col:32, col:42> 'unsigned long' sizeof
| |       `-ParenExpr 0x563ee32e52d0 <col:38, col:42> 'atomic_uint32_t [128]' lvalue
| |         `-MemberExpr 0x563ee32e52a0 <col:39> 'atomic_uint32_t [128]' lvalue ->sig 0x563ee32da538 non_odr_use_unevaluated
| |           `-CXXThisExpr 0x563ee32e5290 <col:39> 'Router::notifier_signals_t *' implicit this
| |-CXXConstructorDecl 0x563ee32da868 <line:280:12> col:12 implicit notifier_signals_t 'void (const Router::notifier_signals_t &)' inline default noexcept-unevaluated 0x563ee32da868
| | `-ParmVarDecl 0x563ee32da978 <col:12> col:12 'const Router::notifier_signals_t &'
| |-CXXConstructorDecl 0x563ee32daa18 <col:12> col:12 implicit notifier_signals_t 'void (Router::notifier_signals_t &&)' inline default noexcept-unevaluated 0x563ee32daa18
| | `-ParmVarDecl 0x563ee32dab28 <col:12> col:12 'Router::notifier_signals_t &&'
| |-CXXMethodDecl 0x563ee32dabc8 <col:12> col:12 implicit operator= 'Router::notifier_signals_t &(const Router::notifier_signals_t &)' inline default noexcept-unevaluated 0x563ee32dabc8
| | `-ParmVarDecl 0x563ee32dacd8 <col:12> col:12 'const Router::notifier_signals_t &'
| |-CXXMethodDecl 0x563ee32dad48 <col:12> col:12 implicit operator= 'Router::notifier_signals_t &(Router::notifier_signals_t &&)' inline default noexcept-unevaluated 0x563ee32dad48
| | `-ParmVarDecl 0x563ee32dae58 <col:12> col:12 'Router::notifier_signals_t &&'
| `-CXXDestructorDecl 0x563ee32daee0 <col:12> col:12 implicit ~notifier_signals_t 'void ()' inline default noexcept-unevaluated 0x563ee32daee0
|-FieldDecl 0x563ee32dafd0 <line:291:5, col:25> col:25 _notifier_signals 'Router::notifier_signals_t *'
|-FieldDecl 0x563ee32db030 <line:292:5, col:27> col:27 referenced _arena_factory 'HashMap_ArenaFactory *'
|-FieldDecl 0x563ee32db090 <line:293:5, col:13> col:13 referenced _hotswap_router 'Router *'
|-FieldDecl 0x563ee32db0f0 <line:294:5, col:18> col:18 referenced _thread_sched 'ThreadSched *'
|-FieldDecl 0x563ee32db150 <line:295:5, col:23> col:23 referenced _name_info 'NameInfo *' mutable
|-FieldDecl 0x563ee32db260 <line:296:5, col:17> col:17 _flow_code_override_eindex 'Vector<int>':'Vector<int>'
|-FieldDecl 0x563ee32db360 <line:297:5, col:20> col:20 referenced _flow_code_override 'Vector<String>':'Vector<String>'
|-FieldDecl 0x563ee32db3c0 <line:299:5, col:13> col:13 _next_router 'Router *'
|-CXXConstructorDecl 0x563ee32db508 <line:305:5, col:25> col:5 Router 'void (const Router &)'
| `-ParmVarDecl 0x563ee32db448 <col:12, col:24> col:25 'const Router &'
|-CXXMethodDecl 0x563ee32db6b8 <line:306:5, col:36> col:13 operator= 'Router &(const Router &)'
| `-ParmVarDecl 0x563ee32db5c8 <col:23, col:35> col:36 'const Router &'
|-CXXMethodDecl 0x563ee32db800 <line:308:5, col:49> col:17 remove_connection 'Router::Connection *(Router::Connection *)'
| `-ParmVarDecl 0x563ee32db770 <col:35, col:47> col:47 cp 'Router::Connection *'
|-CXXMethodDecl 0x563ee32dbba8 <line:309:5, line:310:62> line:309:10 hookup_error 'void (const Router::Port &, bool, const char *, ErrorHandler *, bool)'
| |-ParmVarDecl 0x563ee32db8b8 <col:23, col:35> col:35 p 'const Router::Port &'
| |-ParmVarDecl 0x563ee32db930 <col:38, col:43> col:43 isoutput 'bool'
| |-ParmVarDecl 0x563ee32db9b0 <col:53, col:65> col:65 message 'const char *'
| |-ParmVarDecl 0x563ee32dba28 <line:310:23, col:37> col:37 errh 'ErrorHandler *'
| `-ParmVarDecl 0x563ee32dbaa0 <col:43, col:57> col:48 active 'bool' cinit
|   `-CXXBoolLiteralExpr 0x563ee32debe0 <col:57> 'bool' false
|-CXXMethodDecl 0x563ee32dbd18 <line:311:5, col:44> col:9 check_hookup_elements 'int (ErrorHandler *)'
| `-ParmVarDecl 0x563ee32dbc80 <col:31, col:43> col:44 'ErrorHandler *'
|-CXXMethodDecl 0x563ee32dbe68 <line:312:5, col:41> col:9 check_hookup_range 'int (ErrorHandler *)'
| `-ParmVarDecl 0x563ee32dbdd0 <col:28, col:40> col:41 'ErrorHandler *'
|-CXXMethodDecl 0x563ee32dbfb8 <line:313:5, col:48> col:9 check_hookup_completeness 'int (ErrorHandler *)'
| `-ParmVarDecl 0x563ee32dbf20 <col:35, col:47> col:48 'ErrorHandler *'
|-CXXMethodDecl 0x563ee32dc110 <line:315:5, col:48> col:17 used hard_flow_code_override 'const char *(int) const'
| `-ParmVarDecl 0x563ee32dc078 <col:41, col:45> col:45 e 'int'
|-CXXMethodDecl 0x563ee32dc430 <line:316:5, col:74> col:9 processing_error 'int (const Router::Connection &, bool, int, ErrorHandler *)'
| |-ParmVarDecl 0x563ee32dc1c8 <col:26, col:44> col:44 conn 'const Router::Connection &'
| |-ParmVarDecl 0x563ee32dc240 <col:50> col:54 'bool'
| |-ParmVarDecl 0x563ee32dc2c0 <col:56> col:59 'int'
| `-ParmVarDecl 0x563ee32dc338 <col:61, col:73> col:74 'ErrorHandler *'
|-CXXMethodDecl 0x563ee32dc598 <line:317:5, col:42> col:9 check_push_and_pull 'int (ErrorHandler *)'
| `-ParmVarDecl 0x563ee32dc500 <col:29, col:41> col:42 'ErrorHandler *'
|-CXXMethodDecl 0x563ee32dc660 <line:319:5, col:26> col:10 set_connections 'void ()'
|-CXXMethodDecl 0x563ee32dc720 <line:320:5, col:29> col:10 sort_connections 'void () const'
|-CXXMethodDecl 0x563ee32dc920 <line:321:5, col:64> col:9 connindex_lower_bound 'int (bool, const Router::Port &) const'
| |-ParmVarDecl 0x563ee32dc7d0 <col:31, col:36> col:36 isoutput 'bool'
| `-ParmVarDecl 0x563ee32dc848 <col:46, col:58> col:58 port 'const Router::Port &'
|-CXXMethodDecl 0x563ee32dc9f0 <line:323:5, col:22> col:10 make_gports 'void ()'
|-CXXMethodDecl 0x563ee32dcb38 <line:324:5, line:326:5> line:324:16 ngports 'int (bool) const' inline
| |-ParmVarDecl 0x563ee32dcaa0 <col:24, col:29> col:29 used isout 'bool'
| `-CompoundStmt 0x563ee32e55d0 <col:42, line:326:5>
|   `-ReturnStmt 0x563ee32e55c0 <line:325:9, col:50>
|     `-ImplicitCastExpr 0x563ee32e55a8 <col:16, col:50> 'int':'int' <LValueToRValue>
|       `-CXXMemberCallExpr 0x563ee32e5588 <col:16, col:50> 'const int':'const int' lvalue
|         `-MemberExpr 0x563ee32e5558 <col:16, col:45> '<bound member function type>' .back 0x563ee3265bb8
|           `-ArraySubscriptExpr 0x563ee32e54d8 <col:16, col:43> 'const Vector<int>':'const Vector<int>' lvalue
|             |-ImplicitCastExpr 0x563ee32e54a8 <col:16> 'const Vector<int> *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x563ee32e53c0 <col:16> 'Vector<int> const[2]' lvalue ->_element_gport_offset 0x563ee32c8658
|             |   `-CXXThisExpr 0x563ee32e53b0 <col:16> 'const Router *' implicit this
|             `-ImplicitCastExpr 0x563ee32e54c0 <col:38> 'bool' <LValueToRValue>
|               `-DeclRefExpr 0x563ee32e53f0 <col:38> 'bool' lvalue ParmVar 0x563ee32dcaa0 'isout' 'bool'
|-CXXMethodDecl 0x563ee32dcd08 <line:327:5, col:55> col:16 gport 'int (bool, const Router::Port &) const' inline
| |-ParmVarDecl 0x563ee32dcbf0 <col:22, col:27> col:27 isoutput 'bool'
| `-ParmVarDecl 0x563ee32dcc68 <col:37, col:49> col:49 port 'const Router::Port &'
|-CXXMethodDecl 0x563ee32dce60 <line:329:5, col:47> col:9 used hard_home_thread_id 'int (const Element *) const'
| `-ParmVarDecl 0x563ee32dcdc8 <col:29, col:44> col:44 e 'const Element *'
|-CXXMethodDecl 0x563ee32dd108 <line:331:5, col:67> col:9 element_lerror 'int (ErrorHandler *, Element *, const char *, ...) const'
| |-ParmVarDecl 0x563ee32dcf18 <col:24, col:36> col:37 'ErrorHandler *'
| |-ParmVarDecl 0x563ee32dcf90 <col:39, col:46> col:47 'Element *'
| `-ParmVarDecl 0x563ee32dd010 <col:49, col:59> col:60 'const char *'
|-CXXMethodDecl 0x563ee32dd2e0 <line:334:5, col:40> col:10 initialize_handlers 'void (bool, bool)'
| |-ParmVarDecl 0x563ee32dd1d0 <col:30> col:34 'bool'
| `-ParmVarDecl 0x563ee32dd248 <col:36> col:40 'bool'
|-CXXMethodDecl 0x563ee32dd468 <line:335:5, col:35> col:21 xhandler 'Handler *(int) const' inline
| `-ParmVarDecl 0x563ee32dd3a8 <col:30> col:33 'int'
|-CXXMethodDecl 0x563ee32dd700 <line:336:5, col:60> col:9 find_ehandler 'int (int, const String &, bool) const'
| |-ParmVarDecl 0x563ee32dd528 <col:23> col:26 'int'
| |-ParmVarDecl 0x563ee32dd5a0 <col:28, col:40> col:41 'const String &'
| `-ParmVarDecl 0x563ee32dd618 <col:43, col:48> col:48 allow_star 'bool'
|-CXXMethodDecl 0x563ee32dd918 <line:337:5, col:70> col:27 fetch_handler 'Handler (const Element *, const String &)' static inline
| |-ParmVarDecl 0x563ee32dd7c8 <col:41, col:54> col:55 'const Element *'
| `-ParmVarDecl 0x563ee32dd840 <col:57, col:69> col:70 'const String &'
|-CXXMethodDecl 0x563ee32ddb28 <line:338:5, col:52> col:10 store_local_handler 'void (int, Handler &)'
| |-ParmVarDecl 0x563ee32dd9e0 <col:30, col:34> col:34 eindex 'int'
| `-ParmVarDecl 0x563ee32dda58 <col:42, col:51> col:51 h 'Handler &'
|-CXXMethodDecl 0x563ee32ddca8 <line:339:5, col:48> col:17 store_global_handler 'void (Handler &)' static
| `-ParmVarDecl 0x563ee32ddbe8 <col:38, col:47> col:47 h 'Handler &'
|-CXXMethodDecl 0x563ee32ddea8 <line:340:5, col:72> col:24 store_handler 'void (const Element *, Handler &)' static inline
| |-ParmVarDecl 0x563ee32ddd60 <col:38, col:53> col:53 element 'const Element *'
| `-ParmVarDecl 0x563ee32dddd8 <col:62, col:71> col:71 h 'Handler &'
|-CXXMethodDecl 0x563ee32de080 <line:343:5, col:66> col:19 router_read_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x563ee32ddf68 <col:39, col:48> col:48 e 'Element *'
| `-ParmVarDecl 0x563ee32ddfe8 <col:51, col:57> col:57 user_data 'void *'
|-CXXMethodDecl 0x563ee32de360 <line:344:5, col:103> col:16 router_write_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x563ee32de140 <col:37, col:51> col:51 str 'const String &'
| |-ParmVarDecl 0x563ee32de1b8 <col:56, col:65> col:65 e 'Element *'
| |-ParmVarDecl 0x563ee32de238 <col:68, col:74> col:74 user_data 'void *'
| `-ParmVarDecl 0x563ee32de2b0 <col:85, col:99> col:99 errh 'ErrorHandler *'
|-FriendDecl 0x563ee32de440 <line:347:5, col:18> col:12 'class Master':'Master'
|-FriendDecl 0x563ee32de4a0 <line:348:5, col:18> col:12 'class Task':'Task'
`-FriendDecl 0x563ee32de720 <line:349:5, col:44> col:25
  `-CXXMethodDecl 0x563ee32de620 parent 0x563ee30f6e10 prev 0x563ee3106a38 <col:5, col:44> col:25 set_nports 'int (int, int)'
    |-ParmVarDecl 0x563ee32de500 <col:36> col:39 'int'
    `-ParmVarDecl 0x563ee32de580 <col:41> col:44 'int'

Layout: <CGRecordLayout
  LLVMType:%class.Router = type { %class.Master*, %class.atomic_uint32_t, i32, i8, i32, %class.atomic_uint32_t, %class.Vector, %class.Vector.0, %class.Vector.0, %class.Vector.2, %class.Vector.5, %class.Vector.6, i32, %class.Vector.5, [2 x %class.Vector.5], %class.Vector.5, %class.Vector.8, %class.Vector.5, %class.Vector.0, %class.Vector.5, %class.Vector.5, %class.Vector.5, %class.Vector.5, %class.Handler**, i32, i32, %class.Vector.0, %class.Vector.12, %class.Element*, %class.String, %"struct.Router::notifier_signals_t"*, %class.HashMap_ArenaFactory*, %class.Router*, %class.ThreadSched*, %class.NameInfo*, %class.Vector.5, %class.Vector.0, %class.Router* }
  NonVirtualBaseLLVMType:%class.Router = type { %class.Master*, %class.atomic_uint32_t, i32, i8, i32, %class.atomic_uint32_t, %class.Vector, %class.Vector.0, %class.Vector.0, %class.Vector.2, %class.Vector.5, %class.Vector.6, i32, %class.Vector.5, [2 x %class.Vector.5], %class.Vector.5, %class.Vector.8, %class.Vector.5, %class.Vector.0, %class.Vector.5, %class.Vector.5, %class.Vector.5, %class.Vector.5, %class.Handler**, i32, i32, %class.Vector.0, %class.Vector.12, %class.Element*, %class.String, %"struct.Router::notifier_signals_t"*, %class.HashMap_ArenaFactory*, %class.Router*, %class.ThreadSched*, %class.NameInfo*, %class.Vector.5, %class.Vector.0, %class.Router* }
  IsZeroInitializable:1
  BitFields:[
    <CGBitFieldInfo Offset:0 Size:1 IsSigned:0 StorageSize:8 StorageOffset:16>
    <CGBitFieldInfo Offset:1 Size:1 IsSigned:0 StorageSize:8 StorageOffset:16>
    <CGBitFieldInfo Offset:2 Size:1 IsSigned:0 StorageSize:8 StorageOffset:16>
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563ee30f6e10 prev 0x563ee30f6b90 <../dummy_inc/click/element.hh:29:1, line:319:1> line:29:7 referenced class Element definition
|-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x563ee30f6f08 <col:1, col:7> col:7 implicit referenced class Element
|-AccessSpecDecl 0x563ee30f6f98 <col:17, col:23> col:17 public
|-CXXConstructorDecl 0x563ee30f6ff8 <line:31:5, col:13> col:5 used Element 'void ()'
|-CXXDestructorDecl 0x563ee30f70e8 <line:32:5, col:22> col:13 used ~Element 'void () noexcept' virtual
|-VarDecl 0x563ee30f71e8 <line:33:5, col:16> col:16 nelements_allocated 'int' static
|-CXXMethodDecl 0x563ee30f73b8 <line:36:5, col:42> col:18 used push 'void (int, Packet *)' virtual
| |-ParmVarDecl 0x563ee30f7268 <col:23, col:27> col:27 port 'int'
| `-ParmVarDecl 0x563ee30f72e0 <col:33, col:41> col:41 p 'Packet *'
|-CXXMethodDecl 0x563ee30f7548 <line:37:5, col:70> col:21 used pull 'Packet *(int)' virtual
| |-ParmVarDecl 0x563ee30f7480 <col:26, col:30> col:30 port 'int'
| `-WarnUnusedResultAttr 0x563ee30f75f0 <col:51> warn_unused_result ""
|-CXXMethodDecl 0x563ee30f7728 <line:38:5, col:44> col:21 simple_action 'Packet *(Packet *)' virtual
| `-ParmVarDecl 0x563ee30f7660 <col:35, col:43> col:43 p 'Packet *'
|-CXXMethodDecl 0x563ee30f78c8 <line:40:5, col:37> col:18 used run_task 'bool (Task *)' virtual
| `-ParmVarDecl 0x563ee30f7808 <col:27, col:33> col:33 task 'Task *'
|-CXXMethodDecl 0x563ee30f7a68 <line:41:5, col:40> col:18 run_timer 'void (Timer *)' virtual
| `-ParmVarDecl 0x563ee30f79a8 <col:28, col:35> col:35 timer 'Timer *'
|-EnumDecl 0x563ee30f7b10 <line:43:5, col:46> col:5
| |-EnumConstantDecl 0x563ee30f7c10 <col:12, col:26> col:12 SELECT_READ 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
| | `-ImplicitCastExpr 0x563ee30f7cf0 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563ee30f7bf0 <col:26> 'int' Int: 1
| |     `-IntegerLiteral 0x563ee30f7bd0 <col:26> 'int' 1
| `-EnumConstantDecl 0x563ee30f7ca0 <col:29, col:44> col:29 SELECT_WRITE 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
|   `-ImplicitCastExpr 0x563ee30f7d08 <col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x563ee30f7c80 <col:44> 'int' Int: 2
|       `-IntegerLiteral 0x563ee30f7c60 <col:44> 'int' 2
|-CXXMethodDecl 0x563ee30f7e50 <line:44:5, col:43> col:18 selected 'void (int, int)' virtual
| |-ParmVarDecl 0x563ee30f7d38 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x563ee30f7db8 <col:35, col:39> col:39 mask 'int'
|-CXXMethodDecl 0x563ee30f7fa8 <line:45:5, col:33> col:18 selected 'void (int)' virtual
| `-ParmVarDecl 0x563ee30f7f18 <col:27, col:31> col:31 fd 'int'
|-CXXMethodDecl 0x563ee30f81e8 <line:48:5, col:86> col:45 checked_output_push 'void (int, Packet *) const'
| |-ParmVarDecl 0x563ee30f8068 <col:65, col:69> col:69 port 'int'
| |-ParmVarDecl 0x563ee30f80e0 <col:75, col:83> col:83 p 'Packet *'
| |-NoInlineAttr 0x563ee30f8298 <col:20>
| `-OptimizeNoneAttr 0x563ee30f82f0 <col:30>
|-CXXMethodDecl 0x563ee30f83f8 <line:49:5, col:77> col:48 checked_input_pull 'Packet *(int) const'
| |-ParmVarDecl 0x563ee30f8330 <col:67, col:71> col:71 port 'int'
| |-NoInlineAttr 0x563ee30f84a0 <col:20>
| `-OptimizeNoneAttr 0x563ee30f84f8 <col:30>
|-CXXMethodDecl 0x563ee30f8548 <line:52:5, col:46> col:25 class_name 'const char *() const' virtual pure
|-CXXMethodDecl 0x563ee30f8610 <line:54:5, col:38> col:25 port_count 'const char *() const' virtual
|-VarDecl 0x563ee30f8728 <line:55:5, col:33> col:23 PORTS_0_0 'const char []' static
|-VarDecl 0x563ee30f87b0 <line:56:5, col:33> col:23 used PORTS_0_1 'const char []' static
|-VarDecl 0x563ee30f8838 <line:57:5, col:33> col:23 PORTS_1_0 'const char []' static
|-VarDecl 0x563ee30f88c0 <line:58:5, col:33> col:23 PORTS_1_1 'const char []' static
|-VarDecl 0x563ee30f8948 <line:59:5, col:35> col:23 PORTS_1_1X2 'const char []' static
|-CXXMethodDecl 0x563ee30f89d8 <line:61:5, col:38> col:25 processing 'const char *() const' virtual
|-VarDecl 0x563ee30f8a98 <line:62:5, col:32> col:23 AGNOSTIC 'const char []' static
|-VarDecl 0x563ee30f8b20 <line:63:5, col:28> col:23 PUSH 'const char []' static
|-VarDecl 0x563ee30f8ba8 <line:64:5, col:28> col:23 PULL 'const char []' static
|-VarDecl 0x563ee30f8c30 <line:65:5, col:36> col:23 PUSH_TO_PULL 'const char []' static
|-VarDecl 0x563ee30f8cb8 <line:66:5, col:36> col:23 PULL_TO_PUSH 'const char []' static
|-VarDecl 0x563ee30f8d40 <line:67:5, col:39> col:23 PROCESSING_A_AH 'const char []' static
|-CXXMethodDecl 0x563ee30f8dd0 <line:69:5, col:37> col:25 flow_code 'const char *() const' virtual
|-VarDecl 0x563ee30f8e90 <line:70:5, col:37> col:23 COMPLETE_FLOW 'const char []' static
|-CXXMethodDecl 0x563ee30f8f20 <line:72:5, col:33> col:25 flags 'const char *() const' virtual
|-CXXMethodDecl 0x563ee30f9070 <line:73:5, col:30> col:9 flag_value 'int (int) const'
| `-ParmVarDecl 0x563ee30f8fd8 <col:20, col:24> col:24 flag 'int'
|-CXXMethodDecl 0x563ee30f9200 <line:75:5, col:40> col:19 cast 'void *(const char *)' virtual
| `-ParmVarDecl 0x563ee30f9130 <col:24, col:36> col:36 name 'const char *'
|-CXXMethodDecl 0x563ee30f94b0 <line:76:5, col:70> col:19 port_cast 'void *(bool, int, const char *)' virtual
| |-ParmVarDecl 0x563ee30f92b8 <col:29, col:34> col:34 isoutput 'bool'
| |-ParmVarDecl 0x563ee30f9338 <col:44, col:48> col:48 port 'int'
| `-ParmVarDecl 0x563ee30f93b8 <col:54, col:66> col:66 name 'const char *'
|-EnumDecl 0x563ee30f9568 <line:79:5, line:85:5> line:79:10 ConfigurePhase
| |-EnumConstantDecl 0x563ee30f9670 <line:80:9, col:33> col:9 CONFIGURE_PHASE_FIRST 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x563ee30f9900 <col:33> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563ee30f9650 <col:33> 'int' Int: 0
| |     `-IntegerLiteral 0x563ee30f9630 <col:33> 'int' 0
| |-EnumConstantDecl 0x563ee30f9700 <line:81:9, col:32> col:9 referenced CONFIGURE_PHASE_INFO 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x563ee30f9918 <col:32> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563ee30f96e0 <col:32> 'int' Int: 20
| |     `-IntegerLiteral 0x563ee30f96c0 <col:32> 'int' 20
| |-EnumConstantDecl 0x563ee30f9790 <line:82:9, col:38> col:9 CONFIGURE_PHASE_PRIVILEGED 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x563ee30f9930 <col:38> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563ee30f9770 <col:38> 'int' Int: 90
| |     `-IntegerLiteral 0x563ee30f9750 <col:38> 'int' 90
| |-EnumConstantDecl 0x563ee30f9820 <line:83:9, col:35> col:9 CONFIGURE_PHASE_DEFAULT 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x563ee30f9948 <col:35> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563ee30f9800 <col:35> 'int' Int: 100
| |     `-IntegerLiteral 0x563ee30f97e0 <col:35> 'int' 100
| `-EnumConstantDecl 0x563ee30f98b0 <line:84:9, col:32> col:9 CONFIGURE_PHASE_LAST 'Element::ConfigurePhase'
|   `-ImplicitCastExpr 0x563ee30f9960 <col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x563ee30f9890 <col:32> 'int' Int: 2000
|       `-IntegerLiteral 0x563ee30f9870 <col:32> 'int' 2000
|-CXXMethodDecl 0x563ee30f99a0 <line:86:5, col:35> col:17 configure_phase 'int () const' virtual
|-CXXMethodDecl 0x563ee30f9de0 <line:88:5, col:67> col:17 configure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x563ee30f9c50 <col:27, col:43> col:43 conf 'Vector<String> &'
| `-ParmVarDecl 0x563ee30f9cc8 <col:49, col:63> col:63 errh 'ErrorHandler *'
|-CXXMethodDecl 0x563ee30f9eb0 <line:90:5, col:31> col:18 add_handlers 'void ()' virtual
|-CXXMethodDecl 0x563ee30fa030 <line:92:5, col:46> col:17 initialize 'int (ErrorHandler *)' virtual
| `-ParmVarDecl 0x563ee30f9f60 <col:28, col:42> col:42 errh 'ErrorHandler *'
|-CXXMethodDecl 0x563ee30fa238 <line:94:5, col:69> col:18 take_state 'void (Element *, ErrorHandler *)' virtual
| |-ParmVarDecl 0x563ee30fa0e8 <col:29, col:38> col:38 old_element 'Element *'
| `-ParmVarDecl 0x563ee30fa160 <col:51, col:65> col:65 errh 'ErrorHandler *'
|-CXXMethodDecl 0x563ee30fa338 <line:95:5, col:40> col:22 hotswap_element 'Element *() const' virtual
|-EnumDecl 0x563ee30fa3d8 <line:97:5, line:106:5> line:97:10 referenced CleanupStage
| |-EnumConstantDecl 0x563ee30fa4a0 <line:98:9> col:9 referenced CLEANUP_NO_ROUTER 'Element::CleanupStage'
| |-EnumConstantDecl 0x563ee30fa530 <line:99:9, col:36> col:9 CLEANUP_BEFORE_CONFIGURE 'Element::CleanupStage'
| | `-ImplicitCastExpr 0x563ee30fa760 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563ee30fa510 <col:36> 'int' Int: 0
| |     `-DeclRefExpr 0x563ee30fa4f0 <col:36> 'int' EnumConstant 0x563ee30fa4a0 'CLEANUP_NO_ROUTER' 'Element::CleanupStage'
| |-EnumConstantDecl 0x563ee30fa580 <line:100:9> col:9 CLEANUP_CONFIGURE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x563ee30fa5d0 <line:101:9> col:9 CLEANUP_CONFIGURED 'Element::CleanupStage'
| |-EnumConstantDecl 0x563ee30fa620 <line:102:9> col:9 CLEANUP_INITIALIZE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x563ee30fa670 <line:103:9> col:9 CLEANUP_INITIALIZED 'Element::CleanupStage'
| |-EnumConstantDecl 0x563ee30fa6c0 <line:104:9> col:9 CLEANUP_ROUTER_INITIALIZED 'Element::CleanupStage'
| `-EnumConstantDecl 0x563ee30fa710 <line:105:9> col:9 CLEANUP_MANUAL 'Element::CleanupStage'
|-CXXMethodDecl 0x563ee30fa848 <line:107:5, col:44> col:18 cleanup 'void (Element::CleanupStage)' virtual
| `-ParmVarDecl 0x563ee30fa788 <col:26, col:39> col:39 stage 'Element::CleanupStage'
|-CXXMethodDecl 0x563ee30fa910 <line:109:5, col:42> col:24 static_initialize 'void ()' static inline
|-CXXMethodDecl 0x563ee30fa9d0 <line:110:5, col:39> col:24 static_cleanup 'void ()' static inline
|-CXXMethodDecl 0x563ee30faa90 <line:113:5, col:19> col:12 name 'String () const'
|-CXXMethodDecl 0x563ee30fab50 <line:114:5, col:34> col:20 declaration 'String () const' virtual
|-CXXMethodDecl 0x563ee30fac68 <line:116:5, col:29> col:20 used router 'Router *() const' inline
|-CXXMethodDecl 0x563ee30fad30 <line:117:5, col:25> col:16 used eindex 'int () const' inline
|-CXXMethodDecl 0x563ee30faeb0 <line:118:5, col:34> col:16 eindex 'int (Router *) const' inline
| `-ParmVarDecl 0x563ee30fade0 <col:23, col:31> col:31 r 'Router *'
|-CXXMethodDecl 0x563ee30fafd8 <line:121:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x563ee30fb1d8 <line:123:5, line:127:5> line:123:17 attach_router 'void (Router *, int)' inline
| |-ParmVarDecl 0x563ee30fb088 <col:31, col:39> col:39 used r 'Router *'
| |-ParmVarDecl 0x563ee30fb108 <col:42, col:46> col:46 used eindex 'int'
| `-CompoundStmt 0x563ee3108b28 <col:54, line:127:5>
|   |-ParenExpr 0x563ee31089d8 <line:124:9, col:152> 'void'
|   | `-ConditionalOperator 0x563ee31089a8 <col:10, col:151> 'void'
|   |   |-CXXStaticCastExpr 0x563ee3108698 <col:10, col:38> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x563ee3108670 <col:30, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-ImplicitCastExpr 0x563ee3108658 <col:31> 'bool' <PointerToBoolean>
|   |   |     `-ImplicitCastExpr 0x563ee3108640 <col:31> 'Router *' <LValueToRValue>
|   |   |       `-MemberExpr 0x563ee3108610 <col:31> 'Router *' lvalue ->_router 0x563ee31064f0
|   |   |         `-CXXThisExpr 0x563ee3108600 <col:31> 'Element *' implicit this
|   |   |-CXXFunctionalCastExpr 0x563ee31086f8 <col:42, col:49> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x563ee31086d8 <col:48> 'int' 0
|   |   `-CallExpr 0x563ee3108908 <col:53, col:151> 'void'
|   |     |-ImplicitCastExpr 0x563ee31088f0 <col:53> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x563ee31088d0 <col:53> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x563ee2c314e0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x563ee3108948 <col:68> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563ee3108768 <col:68> 'const char [9]' lvalue "!_router"
|   |     |-ImplicitCastExpr 0x563ee3108960 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563ee3108788 <col:80> 'const char [30]' lvalue "../dummy_inc/click/element.hh"
|   |     |-ImplicitCastExpr 0x563ee3108978 <col:113> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x563ee31087c0 <col:113> 'int' 124
|   |     `-ImplicitCastExpr 0x563ee3108990 <col:118, col:132> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x563ee31088b8 <col:118, col:132> 'const char [43]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x563ee31088a0 <col:132> 'const char [43]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x563ee3108858 <col:132> 'const char [43]' lvalue "void Element::attach_router(Router *, int)"
|   |-BinaryOperator 0x563ee3108a70 <line:125:9, col:19> 'Router *' lvalue '='
|   | |-MemberExpr 0x563ee3108a08 <col:9> 'Router *' lvalue ->_router 0x563ee31064f0
|   | | `-CXXThisExpr 0x563ee31089f8 <col:9> 'Element *' implicit this
|   | `-ImplicitCastExpr 0x563ee3108a58 <col:19> 'Router *' <LValueToRValue>
|   |   `-DeclRefExpr 0x563ee3108a38 <col:19> 'Router *' lvalue ParmVar 0x563ee30fb088 'r' 'Router *'
|   `-BinaryOperator 0x563ee3108b08 <line:126:9, col:19> 'int' lvalue '='
|     |-MemberExpr 0x563ee3108aa0 <col:9> 'int' lvalue ->_eindex 0x563ee3106558
|     | `-CXXThisExpr 0x563ee3108a90 <col:9> 'Element *' implicit this
|     `-ImplicitCastExpr 0x563ee3108af0 <col:19> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x563ee3108ad0 <col:19> 'int' lvalue ParmVar 0x563ee30fb108 'eindex' 'int'
|-CXXMethodDecl 0x563ee30fb360 <line:130:5, col:38> col:16 used nports 'int (bool) const' inline
| `-ParmVarDecl 0x563ee30fb298 <col:23, col:28> col:28 isoutput 'bool'
|-CXXMethodDecl 0x563ee30fb430 <line:131:5, col:26> col:16 used ninputs 'int () const' inline
|-CXXMethodDecl 0x563ee30fb4f8 <line:132:5, col:27> col:16 used noutputs 'int () const' inline
|-CXXRecordDecl 0x563ee30fb598 <line:134:5, col:11> col:11 referenced class Port
|-CXXMethodDecl 0x563ee30fb7e8 <line:135:5, col:82> col:52 used port 'const Element::Port &(bool, int) const'
| |-ParmVarDecl 0x563ee30fb660 <col:57, col:62> col:62 isoutput 'bool'
| |-ParmVarDecl 0x563ee30fb6e0 <col:72, col:76> col:76 port 'int'
| |-NoInlineAttr 0x563ee30fb898 <col:20>
| `-OptimizeNoneAttr 0x563ee30fb8f0 <col:30>
|-CXXMethodDecl 0x563ee30fb9f8 <line:136:5, col:68> col:52 input 'const Element::Port &(int) const'
| |-ParmVarDecl 0x563ee30fb930 <col:58, col:62> col:62 port 'int'
| |-NoInlineAttr 0x563ee30fbaa0 <col:20>
| `-OptimizeNoneAttr 0x563ee30fbaf8 <col:30>
|-CXXMethodDecl 0x563ee30fbbc8 <line:137:5, col:69> col:52 output 'const Element::Port &(int) const'
| |-ParmVarDecl 0x563ee30fbb38 <col:59, col:63> col:63 port 'int'
| |-NoInlineAttr 0x563ee30fbc70 <col:20>
| `-OptimizeNoneAttr 0x563ee30fbcc8 <col:30>
|-CXXMethodDecl 0x563ee30fbe58 <line:139:5, col:54> col:17 used port_active 'bool (bool, int) const' inline
| |-ParmVarDecl 0x563ee30fbd00 <col:29, col:34> col:34 isoutput 'bool'
| `-ParmVarDecl 0x563ee30fbd80 <col:44, col:48> col:48 port 'int'
|-CXXMethodDecl 0x563ee30fbfe8 <line:140:5, col:41> col:17 input_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x563ee30fbf20 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x563ee30fc138 <line:141:5, col:41> col:17 input_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x563ee30fc0a8 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x563ee30fc288 <line:142:5, col:42> col:17 output_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x563ee30fc1f8 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x563ee30fc3d8 <line:143:5, col:42> col:17 output_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x563ee30fc348 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x563ee30fc698 <line:144:5, col:57> col:10 port_flow 'void (bool, int, Bitvector *) const'
| |-ParmVarDecl 0x563ee30fc490 <col:20, col:25> col:25 isoutput 'bool'
| |-ParmVarDecl 0x563ee30fc510 <col:35, col:39> col:39 port 'int'
| `-ParmVarDecl 0x563ee30fc5b8 <col:45, col:54> col:55 'Bitvector *'
|-CXXMethodDecl 0x563ee30fc770 <line:147:5, col:28> col:12 configuration 'String () const'
|-CXXMethodDecl 0x563ee30fc830 <line:149:5, col:41> col:18 can_live_reconfigure 'bool () const' virtual
|-CXXMethodDecl 0x563ee30fcb00 <line:150:5, col:64> col:17 live_reconfigure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x563ee30fc9b0 <col:34, col:48> col:49 'Vector<String> &'
| `-ParmVarDecl 0x563ee30fca28 <col:51, col:63> col:64 'ErrorHandler *'
|-CXXMethodDecl 0x563ee30fcc28 <line:152:5, col:33> col:19 home_thread 'RouterThread *() const'
|-CXXMethodDecl 0x563ee30fce00 <line:156:5, col:36> col:9 add_select 'int (int, int)'
| |-ParmVarDecl 0x563ee30fcce0 <col:20, col:24> col:24 fd 'int'
| `-ParmVarDecl 0x563ee30fcd60 <col:28, col:32> col:32 mask 'int'
|-CXXMethodDecl 0x563ee30fcfe8 <line:157:5, col:39> col:9 remove_select 'int (int, int)'
| |-ParmVarDecl 0x563ee30fcec8 <col:23, col:27> col:27 fd 'int'
| `-ParmVarDecl 0x563ee30fcf48 <col:31, col:35> col:35 mask 'int'
|-CXXMethodDecl 0x563ee30fd358 <line:161:5, col:127> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x563ee30fd0a8 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x563ee30fd120 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x563ee30fd1a0 <col:82, col:106> col:94 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x563ee3108110 <col:106> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x563ee31080f0 <col:106> 'int' 0
| `-ParmVarDecl 0x563ee30fd218 <col:109, col:126> col:118 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x563ee3108148 <col:126> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x563ee3108128 <col:126> 'int' 0
|-CXXMethodDecl 0x563ee30fd6f8 <line:162:5, col:115> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x563ee30fd428 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x563ee30fd4c0 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x563ee30fd540 <col:82, col:86> col:86 user_data 'int'
| `-ParmVarDecl 0x563ee30fd5b8 <col:97, col:114> col:106 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x563ee3108180 <col:114> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x563ee3108160 <col:114> 'int' 0
|-CXXMethodDecl 0x563ee30fda88 <line:163:5, col:117> col:10 add_read_handler 'void (const char *, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x563ee30fd7d0 <col:27, col:39> col:39 name 'const char *'
| |-ParmVarDecl 0x563ee30fd848 <col:45, col:65> col:65 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x563ee30fd8c8 <col:80, col:96> col:84 user_data 'int' cinit
| | `-IntegerLiteral 0x563ee3108198 <col:96> 'int' 0
| `-ParmVarDecl 0x563ee30fd940 <col:99, col:116> col:108 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x563ee31081d8 <col:116> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x563ee31081b8 <col:116> 'int' 0
|-CXXMethodDecl 0x563ee30fde08 <line:164:5, col:130> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x563ee30fdb58 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x563ee30fdbd0 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x563ee30fdc50 <col:85, col:109> col:97 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x563ee3108210 <col:109> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x563ee31081f0 <col:109> 'int' 0
| `-ParmVarDecl 0x563ee30fdcc8 <col:112, col:129> col:121 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x563ee3108248 <col:129> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x563ee3108228 <col:129> 'int' 0
|-CXXMethodDecl 0x563ee30fe188 <line:165:5, col:118> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x563ee30fded8 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x563ee30fdf50 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x563ee30fdfd0 <col:85, col:89> col:89 user_data 'int'
| `-ParmVarDecl 0x563ee30fe048 <col:100, col:117> col:109 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x563ee3108280 <col:117> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x563ee3108260 <col:117> 'int' 0
|-CXXMethodDecl 0x563ee30fe518 <line:166:5, col:120> col:10 add_write_handler 'void (const char *, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x563ee30fe260 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x563ee30fe2d8 <col:46, col:67> col:67 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x563ee30fe358 <col:83, col:99> col:87 user_data 'int' cinit
| | `-IntegerLiteral 0x563ee3108298 <col:99> 'int' 0
| `-ParmVarDecl 0x563ee30fe3d0 <col:102, col:119> col:111 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x563ee31082d8 <col:119> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x563ee31082b8 <col:119> 'int' 0
|-CXXMethodDecl 0x563ee30fe938 <line:167:5, col:142> col:10 set_handler 'void (const String &, int, HandlerCallback, const void *, const void *)'
| |-ParmVarDecl 0x563ee30fe5e8 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x563ee30fe668 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x563ee30fe6e0 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x563ee30fe760 <col:79, col:108> col:91 read_user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x563ee3108310 <col:108> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x563ee31082f0 <col:108> 'int' 0
| `-ParmVarDecl 0x563ee30fe7e0 <col:111, col:141> col:123 write_user_data 'const void *' cinit
|   `-ImplicitCastExpr 0x563ee3108348 <col:141> 'const void *' <NullToPointer>
|     `-IntegerLiteral 0x563ee3108328 <col:141> 'int' 0
|-CXXMethodDecl 0x563ee30fed58 <line:168:5, col:122> col:10 set_handler 'void (const String &, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x563ee30fea10 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x563ee30fea90 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x563ee30feb08 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x563ee30feb88 <col:79, col:83> col:83 read_user_data 'int'
| `-ParmVarDecl 0x563ee30fec08 <col:99, col:121> col:103 write_user_data 'int' cinit
|   `-IntegerLiteral 0x563ee3108360 <col:121> 'int' 0
|-CXXMethodDecl 0x563ee30ff188 <line:169:5, col:124> col:10 set_handler 'void (const char *, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x563ee30fee38 <col:22, col:34> col:34 name 'const char *'
| |-ParmVarDecl 0x563ee30feeb8 <col:40, col:44> col:44 flags 'int'
| |-ParmVarDecl 0x563ee30fef30 <col:51, col:67> col:67 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x563ee30fefb0 <col:77, col:98> col:81 read_user_data 'int' cinit
| | `-IntegerLiteral 0x563ee3108380 <col:98> 'int' 0
| `-ParmVarDecl 0x563ee30ff030 <col:101, col:123> col:105 write_user_data 'int' cinit
|   `-IntegerLiteral 0x563ee31083a0 <col:123> 'int' 0
|-CXXMethodDecl 0x563ee30ff450 <line:170:5, col:81> col:9 set_handler_flags 'int (const String &, int, int)'
| |-ParmVarDecl 0x563ee30ff260 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x563ee30ff2e0 <col:47, col:51> col:51 set_flags 'int'
| `-ParmVarDecl 0x563ee30ff360 <col:62, col:80> col:66 clear_flags 'int' cinit
|   `-IntegerLiteral 0x563ee31083c0 <col:80> 'int' 0
|-EnumDecl 0x563ee30ff508 <line:171:5, line:175:36> line:171:5
| |-EnumConstantDecl 0x563ee30ff610 <col:12, col:42> col:12 TASKHANDLER_WRITE_SCHEDULED 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x563ee30ff8a0 <col:42> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563ee30ff5f0 <col:42> 'int' Int: 1
| |     `-IntegerLiteral 0x563ee30ff5d0 <col:42> 'int' 1
| |-EnumConstantDecl 0x563ee30ff6a0 <line:172:12, col:40> col:12 TASKHANDLER_WRITE_TICKETS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x563ee30ff8b8 <col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563ee30ff680 <col:40> 'int' Int: 2
| |     `-IntegerLiteral 0x563ee30ff660 <col:40> 'int' 2
| |-EnumConstantDecl 0x563ee30ff730 <line:173:12, col:44> col:12 TASKHANDLER_WRITE_HOME_THREAD 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x563ee30ff8d0 <col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563ee30ff710 <col:44> 'int' Int: 4
| |     `-IntegerLiteral 0x563ee30ff6f0 <col:44> 'int' 4
| |-EnumConstantDecl 0x563ee30ff7c0 <line:174:12, col:36> col:12 TASKHANDLER_WRITE_ALL 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x563ee30ff8e8 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563ee30ff7a0 <col:36> 'int' Int: 7
| |     `-IntegerLiteral 0x563ee30ff780 <col:36> 'int' 7
| `-EnumConstantDecl 0x563ee30ff850 <line:175:12, col:34> col:12 referenced TASKHANDLER_DEFAULT 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|   `-ImplicitCastExpr 0x563ee30ff900 <col:34> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x563ee30ff830 <col:34> 'int' Int: 6
|       `-IntegerLiteral 0x563ee30ff810 <col:34> 'int' 6
|-CXXMethodDecl 0x563ee30ffbb8 <line:176:5, col:106> col:10 used add_task_handlers 'void (Task *, NotifierSignal *, int, const String &)'
| |-ParmVarDecl 0x563ee30ff928 <col:28, col:34> col:34 task 'Task *'
| |-ParmVarDecl 0x563ee30ff9c8 <col:40, col:56> col:56 signal 'NotifierSignal *'
| |-ParmVarDecl 0x563ee30ffa48 <col:64, col:68> col:68 flags 'int'
| `-ParmVarDecl 0x563ee30ffac0 <col:75, col:105> col:89 prefix 'const String &' cinit
|   `-ExprWithCleanups 0x563ee3108478 <col:98, col:105> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x563ee3108460 <col:98, col:105> 'const String' lvalue
|       `-ImplicitCastExpr 0x563ee3108448 <col:98, col:105> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x563ee3108428 <col:98, col:105> 'String' (CXXTemporary 0x563ee3108428)
|           `-CXXTemporaryObjectExpr 0x563ee31083f0 <col:98, col:105> 'String' 'void ()'
|-CXXMethodDecl 0x563ee30ffe58 <line:177:5, line:179:5> line:177:17 add_task_handlers 'void (Task *, NotifierSignal *, const String &)' inline
| |-ParmVarDecl 0x563ee30ffc88 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x563ee30ffd00 <col:47, col:63> col:63 used signal 'NotifierSignal *'
| |-ParmVarDecl 0x563ee30ffd78 <col:71, col:101> col:85 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x563ee3108528 <col:94, col:101> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x563ee3108510 <col:94, col:101> 'const String' lvalue
| |     `-ImplicitCastExpr 0x563ee31084f8 <col:94, col:101> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x563ee31084d8 <col:94, col:101> 'String' (CXXTemporary 0x563ee31084d8)
| |         `-CXXTemporaryObjectExpr 0x563ee31084a0 <col:94, col:101> 'String' 'void ()'
| `-CompoundStmt 0x563ee3108d10 <col:104, line:179:5>
|   `-CXXMemberCallExpr 0x563ee3108c88 <line:178:9, col:68> 'void'
|     |-MemberExpr 0x563ee3108c58 <col:9> '<bound member function type>' ->add_task_handlers 0x563ee30ffbb8
|     | `-CXXThisExpr 0x563ee3108c48 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x563ee3108cc8 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x563ee3108bc8 <col:27> 'Task *' lvalue ParmVar 0x563ee30ffc88 'task' 'Task *'
|     |-ImplicitCastExpr 0x563ee3108ce0 <col:33> 'NotifierSignal *' <LValueToRValue>
|     | `-DeclRefExpr 0x563ee3108be8 <col:33> 'NotifierSignal *' lvalue ParmVar 0x563ee30ffd00 'signal' 'NotifierSignal *'
|     |-ImplicitCastExpr 0x563ee3108cf8 <col:41> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x563ee3108c08 <col:41> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x563ee30ff850 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x563ee3108c28 <col:62> 'const String' lvalue ParmVar 0x563ee30ffd78 'prefix' 'const String &'
|-CXXMethodDecl 0x563ee3100068 <line:180:5, line:182:5> line:180:17 add_task_handlers 'void (Task *, const String &)' inline
| |-ParmVarDecl 0x563ee30fff20 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x563ee30fff98 <col:47, col:77> col:61 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x563ee31085d8 <col:70, col:77> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x563ee31085c0 <col:70, col:77> 'const String' lvalue
| |     `-ImplicitCastExpr 0x563ee31085a8 <col:70, col:77> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x563ee3108588 <col:70, col:77> 'String' (CXXTemporary 0x563ee3108588)
| |         `-CXXTemporaryObjectExpr 0x563ee3108550 <col:70, col:77> 'String' 'void ()'
| `-CompoundStmt 0x563ee3108ee8 <col:80, line:182:5>
|   `-CXXMemberCallExpr 0x563ee3108e60 <line:181:9, col:63> 'void'
|     |-MemberExpr 0x563ee3108e30 <col:9> '<bound member function type>' ->add_task_handlers 0x563ee30ffbb8
|     | `-CXXThisExpr 0x563ee3108e20 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x563ee3108ea0 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x563ee3108da0 <col:27> 'Task *' lvalue ParmVar 0x563ee30fff20 'task' 'Task *'
|     |-ImplicitCastExpr 0x563ee3108eb8 <col:33> 'NotifierSignal *' <NullToPointer>
|     | `-IntegerLiteral 0x563ee3108dc0 <col:33> 'int' 0
|     |-ImplicitCastExpr 0x563ee3108ed0 <col:36> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x563ee3108de0 <col:36> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x563ee30ff850 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x563ee3108e00 <col:57> 'const String' lvalue ParmVar 0x563ee30fff98 'prefix' 'const String &'
|-CXXMethodDecl 0x563ee3100348 <line:184:5, col:70> col:10 add_data_handlers 'void (const char *, int, uint8_t *)'
| |-ParmVarDecl 0x563ee3100130 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x563ee31001b0 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x563ee3100228 <col:57, col:66> col:66 data 'uint8_t *'
|-CXXMethodDecl 0x563ee31005f8 <line:185:5, col:67> col:10 add_data_handlers 'void (const char *, int, bool *)'
| |-ParmVarDecl 0x563ee3100418 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x563ee3100498 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x563ee3100518 <col:57, col:63> col:63 data 'bool *'
|-CXXMethodDecl 0x563ee31008e8 <line:186:5, col:71> col:10 add_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x563ee31006c8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x563ee3100748 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x563ee31007c0 <col:57, col:67> col:67 data 'uint16_t *'
|-CXXMethodDecl 0x563ee3100b98 <line:187:5, col:66> col:10 add_data_handlers 'void (const char *, int, int *)'
| |-ParmVarDecl 0x563ee31009b8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x563ee3100a38 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x563ee3100ab8 <col:57, col:62> col:62 data 'int *'
|-CXXMethodDecl 0x563ee3100e48 <line:188:5, col:71> col:10 add_data_handlers 'void (const char *, int, unsigned int *)'
| |-ParmVarDecl 0x563ee3100c68 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x563ee3100ce8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x563ee3100d68 <col:57, col:67> col:67 data 'unsigned int *'
|-CXXMethodDecl 0x563ee31010f8 <line:189:5, col:78> col:10 add_data_handlers 'void (const char *, int, atomic_uint32_t *)'
| |-ParmVarDecl 0x563ee3100f18 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x563ee3100f98 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x563ee3101010 <col:57, col:74> col:74 data 'atomic_uint32_t *'
|-CXXMethodDecl 0x563ee31013a8 <line:190:5, col:67> col:10 add_data_handlers 'void (const char *, int, long *)'
| |-ParmVarDecl 0x563ee31011c8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x563ee3101248 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x563ee31012c8 <col:57, col:63> col:63 data 'long *'
|-CXXMethodDecl 0x563ee31016b8 <line:191:5, col:76> col:10 add_data_handlers 'void (const char *, int, unsigned long *)'
| |-ParmVarDecl 0x563ee31014d0 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x563ee3101550 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x563ee31015d0 <col:57, col:72> col:72 data 'unsigned long *'
|-CXXMethodDecl 0x563ee3101998 <line:193:5, col:72> col:10 add_data_handlers 'void (const char *, int, long long *)'
| |-ParmVarDecl 0x563ee3101788 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x563ee3101808 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x563ee31018b0 <col:57, col:68> col:68 data 'long long *'
|-CXXMethodDecl 0x563ee3101c78 <line:194:5, col:81> col:10 add_data_handlers 'void (const char *, int, unsigned long long *)'
| |-ParmVarDecl 0x563ee3101a68 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x563ee3101ae8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x563ee3101b90 <col:57, col:77> col:77 data 'unsigned long long *'
|-CXXMethodDecl 0x563ee3101ee0 <line:196:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x563ee3101d48 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x563ee3101dc8 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x563ee3101e40 <col:67, col:77> col:77 data 'uint16_t *'
|-CXXMethodDecl 0x563ee3102188 <line:197:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint32_t *)'
| |-ParmVarDecl 0x563ee3101fb0 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x563ee3102030 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x563ee31020a8 <col:67, col:77> col:77 data 'uint32_t *'
|-CXXMethodDecl 0x563ee3102438 <line:199:5, col:69> col:10 add_data_handlers 'void (const char *, int, double *)'
| |-ParmVarDecl 0x563ee3102258 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x563ee31022d8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x563ee3102358 <col:57, col:65> col:65 data 'double *'
|-CXXMethodDecl 0x563ee31026e8 <line:201:5, col:69> col:10 add_data_handlers 'void (const char *, int, String *)'
| |-ParmVarDecl 0x563ee3102508 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x563ee3102588 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x563ee3102600 <col:57, col:65> col:65 data 'String *'
|-CXXMethodDecl 0x563ee3102998 <line:202:5, col:72> col:10 add_data_handlers 'void (const char *, int, IPAddress *)'
| |-ParmVarDecl 0x563ee31027b8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x563ee3102838 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x563ee31028b0 <col:57, col:68> col:68 data 'IPAddress *'
|-CXXMethodDecl 0x563ee3102c68 <line:203:5, col:75> col:10 add_data_handlers 'void (const char *, int, EtherAddress *)'
| |-ParmVarDecl 0x563ee3102a68 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x563ee3102ae8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x563ee3102b88 <col:57, col:71> col:71 data 'EtherAddress *'
|-CXXMethodDecl 0x563ee3102f98 <line:204:5, col:98> col:10 add_data_handlers 'void (const char *, int, Timestamp *, bool)'
| |-ParmVarDecl 0x563ee3102d38 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x563ee3102db8 <col:46, col:50> col:50 flags 'int'
| |-ParmVarDecl 0x563ee3102e30 <col:57, col:68> col:68 data 'Timestamp *'
| `-ParmVarDecl 0x563ee3102ea8 <col:74, col:93> col:79 is_interval 'bool' cinit
|   `-CXXBoolLiteralExpr 0x563ee31085f0 <col:93> 'bool' false
|-CXXMethodDecl 0x563ee3103180 <line:206:5, col:58> col:19 read_positional_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x563ee3103068 <col:43, col:50> col:51 'Element *'
| `-ParmVarDecl 0x563ee31030e8 <col:53, col:57> col:58 'void *'
|-CXXMethodDecl 0x563ee3103358 <line:207:5, col:55> col:19 read_keyword_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x563ee3103240 <col:40, col:47> col:48 'Element *'
| `-ParmVarDecl 0x563ee31032c0 <col:50, col:54> col:55 'void *'
|-CXXMethodDecl 0x563ee3103638 <line:208:5, col:92> col:16 reconfigure_positional_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x563ee3103418 <col:47, col:59> col:60 'const String &'
| |-ParmVarDecl 0x563ee3103490 <col:62, col:69> col:70 'Element *'
| |-ParmVarDecl 0x563ee3103510 <col:72, col:76> col:77 'void *'
| `-ParmVarDecl 0x563ee3103588 <col:79, col:91> col:92 'ErrorHandler *'
|-CXXMethodDecl 0x563ee3103928 <line:209:5, col:89> col:16 reconfigure_keyword_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x563ee3103708 <col:44, col:56> col:57 'const String &'
| |-ParmVarDecl 0x563ee3103780 <col:59, col:66> col:67 'Element *'
| |-ParmVarDecl 0x563ee3103800 <col:69, col:73> col:74 'void *'
| `-ParmVarDecl 0x563ee3103878 <col:76, col:88> col:89 'ErrorHandler *'
|-CXXMethodDecl 0x563ee3103b60 <line:211:5, col:50> col:17 llrpc 'int (unsigned int, void *)' virtual
| |-ParmVarDecl 0x563ee3103a00 <col:23, col:32> col:32 command 'unsigned int'
| `-ParmVarDecl 0x563ee3103a80 <col:41, col:47> col:47 arg 'void *'
|-CXXMethodDecl 0x563ee3103d48 <line:212:5, col:48> col:9 local_llrpc 'int (unsigned int, void *)'
| |-ParmVarDecl 0x563ee3103c28 <col:21, col:30> col:30 command 'unsigned int'
| `-ParmVarDecl 0x563ee3103ca8 <col:39, col:45> col:45 arg 'void *'
|-CXXRecordDecl 0x563ee3103df8 prev 0x563ee30fb598 <line:214:5, line:252:5> line:214:11 referenced class Port definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x563ee3103ef0 <col:5, col:11> col:11 implicit referenced class Port
| |-AccessSpecDecl 0x563ee3103f80 <col:18, col:24> col:18 public
| |-CXXMethodDecl 0x563ee3103ff8 <line:216:9, col:30> col:21 used active 'bool () const' inline
| |-CXXMethodDecl 0x563ee31040b8 <line:217:9, col:35> col:25 element 'Element *() const' inline
| |-CXXMethodDecl 0x563ee3104180 <line:218:9, col:27> col:20 port 'int () const' inline
| |-CXXMethodDecl 0x563ee31042f8 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| | |-ParmVarDecl 0x563ee3104230 <col:54, col:62> col:62 p 'Packet *'
| | |-NoInlineAttr 0x563ee31043a0 <col:24>
| | `-OptimizeNoneAttr 0x563ee31043f8 <col:34>
| |-CXXMethodDecl 0x563ee3104440 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
| |-CXXMethodDecl 0x563ee31046f8 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| | |-ParmVarDecl 0x563ee31044f0 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x563ee3104568 <col:43, col:52> col:52 e 'Element *'
| | `-ParmVarDecl 0x563ee31045e8 <col:55, col:59> col:59 port 'int'
| |-AccessSpecDecl 0x563ee31047b0 <line:229:7, col:14> col:7 private
| |-FieldDecl 0x563ee31047e8 <line:231:9, col:18> col:18 referenced _e 'Element *'
| |-FieldDecl 0x563ee3104850 <line:232:9, col:13> col:13 referenced _port 'int'
| |-CXXConstructorDecl 0x563ee31048d8 <line:247:9, col:21> col:16 Port 'void ()' inline
| |-CXXMethodDecl 0x563ee3104bf8 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| | |-ParmVarDecl 0x563ee3104990 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x563ee3104a08 <col:43, col:52> col:52 owner 'Element *'
| | |-ParmVarDecl 0x563ee3104a80 <col:59, col:68> col:68 e 'Element *'
| | `-ParmVarDecl 0x563ee3104b00 <col:71, col:75> col:75 port 'int'
| |-FriendDecl 0x563ee3104d10 <line:250:9, col:22> col:16 'class Element':'Element'
| |-CXXConstructorDecl 0x563ee310c688 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x563ee310c688
| | `-ParmVarDecl 0x563ee310c798 <col:11> col:11 'const Element::Port &'
| |-CXXConstructorDecl 0x563ee310c838 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x563ee310c838
| | `-ParmVarDecl 0x563ee310c948 <col:11> col:11 'Element::Port &&'
| `-CXXDestructorDecl 0x563ee3311320 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x563ee3104d88 <line:256:5, col:49> col:12 id 'String () const'
| `-DeprecatedAttr 0x563ee3104e28 <col:38> "" ""
|-CXXMethodDecl 0x563ee3104eb8 <line:257:5, col:55> col:12 landmark 'String () const'
| `-DeprecatedAttr 0x563ee3104f58 <col:44> "" ""
|-AccessSpecDecl 0x563ee3104fc8 <line:260:3, col:10> col:3 private
|-EnumDecl 0x563ee3104ff0 <line:262:5, col:29> col:5
| `-EnumConstantDecl 0x563ee31050f0 <col:12, col:27> col:12 referenced INLINE_PORTS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:262:5)'
|   `-ImplicitCastExpr 0x563ee3105140 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x563ee31050d0 <col:27> 'int' Int: 4
|       `-IntegerLiteral 0x563ee31050b0 <col:27> 'int' 4
|-FieldDecl 0x563ee31051f8 <line:264:5, col:19> col:11 referenced _ports 'Element::Port *[2]'
|-FieldDecl 0x563ee31053a8 <line:265:5, col:36> col:10 _inline_ports 'Element::Port [4]'
|-FieldDecl 0x563ee3105460 <line:267:5, col:18> col:9 referenced _nports 'int [2]'
|-FieldDecl 0x563ee31064f0 <line:269:5, col:13> col:13 referenced _router 'Router *'
|-FieldDecl 0x563ee3106558 <line:270:5, col:9> col:9 referenced _eindex 'int'
|-CXXConstructorDecl 0x563ee31066a8 <line:292:5, col:28> col:5 Element 'void (const Element &)'
| `-ParmVarDecl 0x563ee31065e8 <col:13, col:27> col:28 'const Element &'
|-CXXMethodDecl 0x563ee3106858 <line:293:5, col:39> col:14 operator= 'Element &(const Element &)'
| `-ParmVarDecl 0x563ee3106768 <col:24, col:38> col:39 'const Element &'
|-CXXMethodDecl 0x563ee3106a38 <line:296:5, col:28> col:9 set_nports 'int (int, int)'
| |-ParmVarDecl 0x563ee3106918 <col:20> col:23 'int'
| `-ParmVarDecl 0x563ee3106998 <col:25> col:28 'int'
|-CXXMethodDecl 0x563ee3106ce0 <line:297:5, col:47> col:9 notify_nports 'int (int, int, ErrorHandler *)'
| |-ParmVarDecl 0x563ee3106b00 <col:23> col:26 'int'
| |-ParmVarDecl 0x563ee3106b80 <col:28> col:31 'int'
| `-ParmVarDecl 0x563ee3106bf8 <col:33, col:46> col:47 'ErrorHandler *'
|-EnumDecl 0x563ee3106d98 <line:298:5, col:47> col:10 Processing
| |-EnumConstantDecl 0x563ee3106e60 <col:23> col:23 VAGNOSTIC 'Element::Processing'
| |-EnumConstantDecl 0x563ee3106eb0 <col:34> col:34 VPUSH 'Element::Processing'
| `-EnumConstantDecl 0x563ee3106f00 <col:41> col:41 VPULL 'Element::Processing'
|-CXXMethodDecl 0x563ee31070e0 <line:299:5, col:71> col:16 next_processing_code 'int (const char *&, ErrorHandler *)' static
| |-ParmVarDecl 0x563ee3106f90 <col:37, col:50> col:50 p 'const char *&'
| `-ParmVarDecl 0x563ee3107008 <col:53, col:67> col:67 errh 'ErrorHandler *'
|-CXXMethodDecl 0x563ee3107388 <line:300:5, col:80> col:10 processing_vector 'void (int *, int *, ErrorHandler *) const'
| |-ParmVarDecl 0x563ee31071a8 <col:28, col:33> col:33 input_codes 'int *'
| |-ParmVarDecl 0x563ee3107228 <col:46, col:51> col:51 output_codes 'int *'
| `-ParmVarDecl 0x563ee31072a0 <col:65, col:77> col:78 'ErrorHandler *'
|-CXXMethodDecl 0x563ee31075a8 <line:302:5, col:74> col:10 initialize_ports 'void (const int *, const int *)'
| |-ParmVarDecl 0x563ee3107458 <col:27, col:38> col:38 input_codes 'const int *'
| `-ParmVarDecl 0x563ee31074d8 <col:51, col:62> col:62 output_codes 'const int *'
|-CXXMethodDecl 0x563ee31078e0 <line:303:5, col:60> col:9 connect_port 'int (bool, int, Element *, int)'
| |-ParmVarDecl 0x563ee3107668 <col:22, col:27> col:27 isoutput 'bool'
| |-ParmVarDecl 0x563ee31076e8 <col:37, col:41> col:41 port 'int'
| |-ParmVarDecl 0x563ee3107760 <col:47, col:54> col:55 'Element *'
| `-ParmVarDecl 0x563ee31077e0 <col:57> col:60 'int'
|-CXXMethodDecl 0x563ee3107ac8 <line:305:5, col:68> col:19 read_handlers_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x563ee31079b0 <col:41, col:50> col:50 e 'Element *'
| `-ParmVarDecl 0x563ee3107a30 <col:53, col:59> col:59 user_data 'void *'
|-CXXMethodDecl 0x563ee3107c18 <line:306:5, col:51> col:10 add_default_handlers 'void (bool)'
| `-ParmVarDecl 0x563ee3107b88 <col:31, col:36> col:36 writable_config 'bool'
|-CXXMethodDecl 0x563ee3107f98 <line:307:5, col:100> col:17 add_data_handlers 'void (const char *, int, HandlerCallback, void *)' inline
| |-ParmVarDecl 0x563ee3107cd8 <col:35, col:47> col:47 name 'const char *'
| |-ParmVarDecl 0x563ee3107d58 <col:53, col:57> col:57 flags 'int'
| |-ParmVarDecl 0x563ee3107dd0 <col:64, col:80> col:80 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| `-ParmVarDecl 0x563ee3107e50 <col:90, col:96> col:96 data 'void *'
`-FriendDecl 0x563ee31080b0 <line:309:5, col:18> col:12 'class Router':'Router'

Layout: <CGRecordLayout
  LLVMType:%class.Element = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Element.base = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class TokenBucketJiffyParameters<unsigned int> (empty)
           | [sizeof=1, dsize=1, align=1,
           |  nvsize=1, nvalign=1]

*** Dumping AST Record Layout
         0 | class TokenRateX<class TokenBucketJiffyParameters<unsigned int> >
         0 |   class TokenBucketJiffyParameters<unsigned int> (base) (empty)
         0 |   TokenRateX<class TokenBucketJiffyParameters<unsigned int> >::token_type _tokens_per_tick
         4 |   TokenRateX<class TokenBucketJiffyParameters<unsigned int> >::token_type _token_scale
         8 |   TokenRateX<class TokenBucketJiffyParameters<unsigned int> >::ticks_type _time_until_full
           | [sizeof=12, dsize=12, align=4,
           |  nvsize=12, nvalign=4]

*** Dumping AST Record Layout
         0 | class TokenCounterX<class TokenRateX<class TokenBucketJiffyParameters<unsigned int> > >
         0 |   TokenCounterX<class TokenRateX<class TokenBucketJiffyParameters<unsigned int> > >::token_type _tokens
         4 |   TokenCounterX<class TokenRateX<class TokenBucketJiffyParameters<unsigned int> > >::time_point_type _time_point
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | class TokenBucketX<class TokenBucketJiffyParameters<unsigned int> >
         0 |   class TokenRateX<class TokenBucketJiffyParameters<unsigned int> > _rate
         0 |     class TokenBucketJiffyParameters<unsigned int> (base) (empty)
         0 |     TokenRateX<class TokenBucketJiffyParameters<unsigned int> >::token_type _tokens_per_tick
         4 |     TokenRateX<class TokenBucketJiffyParameters<unsigned int> >::token_type _token_scale
         8 |     TokenRateX<class TokenBucketJiffyParameters<unsigned int> >::ticks_type _time_until_full
        12 |   class TokenCounterX<class TokenRateX<class TokenBucketJiffyParameters<unsigned int> > > _bucket
        12 |     TokenCounterX<class TokenRateX<class TokenBucketJiffyParameters<unsigned int> > >::token_type _tokens
        16 |     TokenCounterX<class TokenRateX<class TokenBucketJiffyParameters<unsigned int> > >::time_point_type _time_point
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping AST Record Layout
         0 | struct TaskLink
         0 |   struct TaskLink * _prev
         8 |   struct TaskLink * _next
        16 |   unsigned int _pass
           | [sizeof=24, dsize=20, align=8,
           |  nvsize=20, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9)
         0 |   int16_t home_thread_id
         2 |   uint8_t is_scheduled
         3 |   uint8_t is_strong_unscheduled
           | [sizeof=4, dsize=4, align=2,
           |  nvsize=4, nvalign=2]

*** Dumping AST Record Layout
         0 | union Task::Status
         0 |   struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9) 
         0 |     int16_t home_thread_id
         2 |     uint8_t is_scheduled
         3 |     uint8_t is_strong_unscheduled
         0 |   uint32_t status
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Task::Pending
         0 |   class Task * t
         0 |   uintptr_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Task
         0 |   struct TaskLink (base)
         0 |     struct TaskLink * _prev
         8 |     struct TaskLink * _next
        16 |     unsigned int _pass
        20 |   unsigned int _stride
        24 |   int _tickets
        28 |   union Task::Status _status
        28 |     struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9) 
        28 |       int16_t home_thread_id
        30 |       uint8_t is_scheduled
        31 |       uint8_t is_strong_unscheduled
        28 |     uint32_t status
        32 |   TaskCallback _hook
        40 |   void * _thunk
        48 |   class RouterThread * _thread
        56 |   class Element * _owner
        64 |   union Task::Pending _pending_nextptr
        64 |     class Task * t
        64 |     uintptr_t x
           | [sizeof=72, dsize=72, align=8,
           |  nvsize=72, nvalign=8]

*** Dumping AST Record Layout
         0 | union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5)
         0 |   TimerCallback callback
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timer
         0 |   int _schedpos1
         8 |   class Timestamp _expiry_s
         8 |     union Timestamp::rep_t _t
         8 |       int64_t x
        16 |   union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5) _hook
        16 |     TimerCallback callback
        24 |   void * _thunk
        32 |   class Element * _owner
        40 |   class RouterThread * _thread
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | class RatedSource
         0 |   class Element (primary base)
         0 |     (Element vtable pointer)
         8 |     class Element::Port *[2] _ports
        24 |     class Element::Port [4] _inline_ports
        88 |     int [2] _nports
        96 |     class Router * _router
       104 |     int _eindex
       108 |   class TokenBucketX<class TokenBucketJiffyParameters<unsigned int> > _tb
       108 |     class TokenRateX<class TokenBucketJiffyParameters<unsigned int> > _rate
       108 |       class TokenBucketJiffyParameters<unsigned int> (base) (empty)
       108 |       TokenRateX<class TokenBucketJiffyParameters<unsigned int> >::token_type _tokens_per_tick
       112 |       TokenRateX<class TokenBucketJiffyParameters<unsigned int> >::token_type _token_scale
       116 |       TokenRateX<class TokenBucketJiffyParameters<unsigned int> >::ticks_type _time_until_full
       120 |     class TokenCounterX<class TokenRateX<class TokenBucketJiffyParameters<unsigned int> > > _bucket
       120 |       TokenCounterX<class TokenRateX<class TokenBucketJiffyParameters<unsigned int> > >::token_type _tokens
       124 |       TokenCounterX<class TokenRateX<class TokenBucketJiffyParameters<unsigned int> > >::time_point_type _time_point
       128 |   unsigned int _count
       132 |   unsigned int _limit
       136 |   int _datasize
       140 |   _Bool _active
       141 |   _Bool _stop
       144 |   class Packet * _packet
       152 |   class Task _task
       152 |     struct TaskLink (base)
       152 |       struct TaskLink * _prev
       160 |       struct TaskLink * _next
       168 |       unsigned int _pass
       172 |     unsigned int _stride
       176 |     int _tickets
       180 |     union Task::Status _status
       180 |       struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9) 
       180 |         int16_t home_thread_id
       182 |         uint8_t is_scheduled
       183 |         uint8_t is_strong_unscheduled
       180 |       uint32_t status
       184 |     TaskCallback _hook
       192 |     void * _thunk
       200 |     class RouterThread * _thread
       208 |     class Element * _owner
       216 |     union Task::Pending _pending_nextptr
       216 |       class Task * t
       216 |       uintptr_t x
       224 |   class Timer _timer
       224 |     int _schedpos1
       232 |     class Timestamp _expiry_s
       232 |       union Timestamp::rep_t _t
       232 |         int64_t x
       240 |     union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5) _hook
       240 |       TimerCallback callback
       248 |     void * _thunk
       256 |     class Element * _owner
       264 |     class RouterThread * _thread
       272 |   class String _data
       272 |     struct String::rep_t _r
       272 |       const char * data
       280 |       int length
       288 |       struct String::memo_t * memo
           | [sizeof=296, dsize=296, align=8,
           |  nvsize=296, nvalign=8]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x563ee3145470 <../dummy_inc/click/tokenbucket.hh:628:1, line:686:1> line:629:7 class TokenBucketJiffyParameters definition
|-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-TemplateArgument type 'unsigned int'
|-CXXRecordDecl 0x563ee31e86e0 prev 0x563ee3145470 <col:1, col:7> col:7 implicit class TokenBucketJiffyParameters
|-AccessSpecDecl 0x563ee31e8770 <col:36, col:42> col:36 public
|-TypedefDecl 0x563ee31e87d8 <line:632:5, col:15> col:15 referenced token_type 'unsigned int':'unsigned int'
| `-SubstTemplateTypeParmType 0x563ee31e87a0 'unsigned int' sugar
|   |-TemplateTypeParmType 0x563ee313cf70 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x563ee313cf18 'T'
|   `-BuiltinType 0x563ee2b90410 'unsigned int'
|-TypedefDecl 0x563ee31e8830 <line:635:5, col:29> col:29 referenced time_point_type 'click_jiffies_t':'unsigned int'
| `-TypedefType 0x563ee2e4a440 'click_jiffies_t' sugar
|   |-Typedef 0x563ee2e4a378 'click_jiffies_t'
|   `-BuiltinType 0x563ee2b90410 'unsigned int'
|-TypedefDecl 0x563ee31e8888 <line:638:5, col:40> col:40 referenced duration_type 'click_jiffies_difference_t':'int'
| `-TypedefType 0x563ee308a180 'click_jiffies_difference_t' sugar
|   |-Typedef 0x563ee2e4a3e8 'click_jiffies_difference_t'
|   `-BuiltinType 0x563ee2b90370 'int'
|-CXXMethodDecl 0x563ee31e88e0 <line:642:5, line:644:5> line:642:28 now 'TokenBucketJiffyParameters::time_point_type ()' static
|-CXXMethodDecl 0x563ee31e8a78 <line:646:5, line:648:5> line:646:28 time_point 'TokenBucketJiffyParameters<unsigned int>::time_point_type (TokenBucketJiffyParameters::time_point_type)' static
| `-ParmVarDecl 0x563ee31e89b0 <col:39, col:55> col:55 t 'TokenBucketJiffyParameters::time_point_type':'unsigned int'
|-CXXMethodDecl 0x563ee31e8c88 <line:656:5, line:662:5> line:656:26 time_monotonic_difference 'TokenBucketJiffyParameters<unsigned int>::duration_type (TokenBucketJiffyParameters::time_point_type, TokenBucketJiffyParameters::time_point_type)' static
| |-ParmVarDecl 0x563ee31e8b50 <col:52, col:68> col:68 a 'TokenBucketJiffyParameters::time_point_type':'unsigned int'
| `-ParmVarDecl 0x563ee31e8bb8 <col:71, col:87> col:87 b 'TokenBucketJiffyParameters::time_point_type':'unsigned int'
|-CXXMethodDecl 0x563ee31e8e48 <line:665:5, line:667:5> line:665:17 time_less 'bool (TokenBucketJiffyParameters::time_point_type, TokenBucketJiffyParameters::time_point_type)' static
| |-ParmVarDecl 0x563ee31e8d48 <col:27, col:43> col:43 a 'TokenBucketJiffyParameters::time_point_type':'unsigned int'
| `-ParmVarDecl 0x563ee31e8db0 <col:46, col:62> col:62 b 'TokenBucketJiffyParameters::time_point_type':'unsigned int'
|-CXXMethodDecl 0x563ee31e8f08 <line:672:5, line:674:5> line:672:21 frequency 'unsigned int ()' static
|-CXXMethodDecl 0x563ee31e9048 <line:677:5, line:679:5> line:677:22 timestamp 'Timestamp (TokenBucketJiffyParameters::time_point_type)' static
| `-ParmVarDecl 0x563ee31e8fb8 <col:32, col:48> col:48 x 'TokenBucketJiffyParameters::time_point_type':'unsigned int'
|-CXXMethodDecl 0x563ee31e9190 <line:682:5, line:684:5> line:682:22 timestamp 'Timestamp (TokenBucketJiffyParameters::duration_type)' static
| `-ParmVarDecl 0x563ee31e9100 <col:32, col:46> col:46 x 'TokenBucketJiffyParameters::duration_type':'int'
|-CXXDestructorDecl 0x563ee31f3080 <line:629:7> col:7 implicit ~TokenBucketJiffyParameters 'void ()' inline default trivial noexcept-unevaluated 0x563ee31f3080
|-CXXConstructorDecl 0x563ee33104a8 <col:7> col:7 implicit constexpr TokenBucketJiffyParameters 'void (const TokenBucketJiffyParameters<unsigned int> &)' inline default trivial noexcept-unevaluated 0x563ee33104a8
| `-ParmVarDecl 0x563ee33105b8 <col:7> col:7 'const TokenBucketJiffyParameters<unsigned int> &'
`-CXXConstructorDecl 0x563ee3310658 <col:7> col:7 implicit constexpr TokenBucketJiffyParameters 'void (TokenBucketJiffyParameters<unsigned int> &&)' inline default trivial noexcept-unevaluated 0x563ee3310658
  `-ParmVarDecl 0x563ee3310768 <col:7> col:7 'TokenBucketJiffyParameters<unsigned int> &&'

Layout: <CGRecordLayout
  LLVMType:%class.TokenBucketJiffyParameters = type { i8 }
  NonVirtualBaseLLVMType:%class.TokenBucketJiffyParameters = type { i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x563ee3145610 <../dummy_inc/click/tokenbucket.hh:57:1, line:191:1> line:58:7 class TokenRateX definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-public 'TokenBucketJiffyParameters<unsigned int>':'TokenBucketJiffyParameters<unsigned int>'
|-TemplateArgument type 'TokenBucketJiffyParameters<unsigned int>'
|-CXXRecordDecl 0x563ee31e9290 prev 0x563ee3145610 <col:1, col:7> col:7 implicit class TokenRateX
|-AccessSpecDecl 0x563ee31e9320 <col:31, col:37> col:31 public
|-TypedefDecl 0x563ee31e9358 <line:61:5, col:15> col:15 parameter_type 'TokenBucketJiffyParameters<unsigned int>':'TokenBucketJiffyParameters<unsigned int>'
| `-SubstTemplateTypeParmType 0x563ee31e8640 'TokenBucketJiffyParameters<unsigned int>' sugar
|   |-TemplateTypeParmType 0x563ee3127090 'P' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x563ee3127038 'P'
|   `-RecordType 0x563ee3145550 'TokenBucketJiffyParameters<unsigned int>'
|     `-ClassTemplateSpecialization 0x563ee3145470 'TokenBucketJiffyParameters'
|-TypedefDecl 0x563ee31e9460 <line:64:5, col:36> col:36 referenced token_type 'typename TokenBucketJiffyParameters<unsigned int>::token_type':'unsigned int'
| `-ElaboratedType 0x563ee31e9410 'typename TokenBucketJiffyParameters<unsigned int>::token_type' sugar
|   `-TypedefType 0x563ee31e93f0 'TokenBucketJiffyParameters<unsigned int>::token_type' sugar
|     |-Typedef 0x563ee31e87d8 'token_type'
|     `-SubstTemplateTypeParmType 0x563ee31e87a0 'unsigned int' sugar
|       |-TemplateTypeParmType 0x563ee313cf70 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563ee313cf18 'T'
|       `-BuiltinType 0x563ee2b90410 'unsigned int'
|-TypedefDecl 0x563ee31e9530 <line:67:5, col:41> col:41 referenced time_point_type 'typename TokenBucketJiffyParameters<unsigned int>::time_point_type':'unsigned int'
| `-ElaboratedType 0x563ee31e94e0 'typename TokenBucketJiffyParameters<unsigned int>::time_point_type' sugar
|   `-TypedefType 0x563ee31e8990 'TokenBucketJiffyParameters<unsigned int>::time_point_type' sugar
|     |-Typedef 0x563ee31e8830 'time_point_type'
|     `-TypedefType 0x563ee2e4a440 'click_jiffies_t' sugar
|       |-Typedef 0x563ee2e4a378 'click_jiffies_t'
|       `-BuiltinType 0x563ee2b90410 'unsigned int'
|-TypedefDecl 0x563ee31e9ac0 <line:70:5, col:69> col:69 referenced ticks_type 'typename make_unsigned<typename TokenBucketJiffyParameters<unsigned int>::duration_type>::type':'unsigned int'
| `-ElaboratedType 0x563ee31e9a70 'typename make_unsigned<typename TokenBucketJiffyParameters<unsigned int>::duration_type>::type' sugar
|   `-TypedefType 0x563ee31e9a50 'make_unsigned<int>::type' sugar
|     |-Typedef 0x563ee31e99e0 'type'
|     `-ElaboratedType 0x563ee31e9990 'typename integer_traits<int>::unsigned_type' sugar
|       `-TypedefType 0x563ee31e9970 'integer_traits<int>::unsigned_type' sugar
|         |-Typedef 0x563ee2e718c0 'unsigned_type'
|         `-BuiltinType 0x563ee2b90410 'unsigned int'
|-EnumDecl 0x563ee31e9b18 <line:72:5> col:5
| `-EnumConstantDecl 0x563ee31e9c80 <line:73:2, col:29> col:2 referenced max_tokens 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::(anonymous enum at ../dummy_inc/click/tokenbucket.hh:72:5)'
|   `-ConstantExpr 0x563ee31e9c60 <col:15, col:29> 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::token_type':'unsigned int' Int: 4294967295
|     `-CStyleCastExpr 0x563ee31e9c38 <col:15, col:29> 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::token_type':'unsigned int' <NoOp>
|       `-ImplicitCastExpr 0x563ee31e9c20 <col:28, col:29> 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::token_type':'unsigned int' <IntegralCast> part_of_explicit_cast
|         `-UnaryOperator 0x563ee31281a0 <col:28, col:29> 'int' prefix '-'
|           `-IntegerLiteral 0x563ee3128180 <col:29> 'int' 1
|-CXXConstructorDecl 0x563ee31e9d08 <line:77:5, line:79:5> line:77:5 TokenRateX 'void ()'
|-CXXConstructorDecl 0x563ee31e9e70 <line:83:5, line:85:5> line:83:14 TokenRateX 'void (bool)'
| `-ParmVarDecl 0x563ee31e9dc0 <col:25, col:30> col:30 unlimited 'bool'
|-CXXConstructorDecl 0x563ee31ea0a8 <line:94:5, line:96:5> line:94:5 TokenRateX 'void (TokenRateX<TokenBucketJiffyParameters<unsigned int> >::token_type, TokenRateX<TokenBucketJiffyParameters<unsigned int> >::token_type)'
| |-ParmVarDecl 0x563ee31e9f40 <col:16, col:27> col:27 rate 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::token_type':'unsigned int'
| `-ParmVarDecl 0x563ee31e9fb8 <col:33, col:44> col:44 capacity 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::token_type':'unsigned int'
|-CXXMethodDecl 0x563ee31ea200 <line:100:5, col:46> col:17 assign 'void (bool)' inline
| `-ParmVarDecl 0x563ee31ea170 <col:24, col:41> col:29 unlimited 'bool'
|-CXXMethodDecl 0x563ee31ea3d8 <line:108:5, col:60> col:17 assign 'void (TokenRateX<TokenBucketJiffyParameters<unsigned int> >::token_type, TokenRateX<TokenBucketJiffyParameters<unsigned int> >::token_type)' inline
| |-ParmVarDecl 0x563ee31ea2c8 <col:24, col:35> col:35 rate 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::token_type':'unsigned int'
| `-ParmVarDecl 0x563ee31ea340 <col:41, col:52> col:52 capacity 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::token_type':'unsigned int'
|-CXXMethodDecl 0x563ee31ea498 <line:111:5, line:113:5> line:111:10 unlimited 'bool () const'
|-CXXMethodDecl 0x563ee31ea548 <line:116:5, line:118:5> line:116:10 idle 'bool () const'
|-CXXMethodDecl 0x563ee31ea648 <line:124:5, col:23> col:16 rate 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::token_type () const'
|-CXXMethodDecl 0x563ee31ea718 <line:130:5, line:132:5> line:130:16 capacity 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::token_type () const'
|-CXXMethodDecl 0x563ee31ea7e8 <line:135:5, line:137:5> line:135:16 tokens_per_tick 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::token_type () const'
|-CXXMethodDecl 0x563ee31ea8b8 <line:140:5, line:142:5> line:140:16 token_scale 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::token_type () const'
|-CXXMethodDecl 0x563ee31ea9d8 <line:148:5, line:150:5> line:148:16 time_until_full 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::ticks_type () const'
|-CXXMethodDecl 0x563ee31eaaf8 <line:155:5, line:157:5> line:155:21 now 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::time_point_type () const'
|-FunctionTemplateDecl 0x563ee31eade8 <line:163:5, line:166:5> line:164:21 time_point
| |-TemplateTypeParmDecl 0x563ee31eaba8 <line:163:15, col:24> col:24 typename depth 0 index 0 U
| `-CXXMethodDecl 0x563ee31ead48 <line:164:5, line:166:5> line:164:21 time_point 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::time_point_type (U) const'
|   `-ParmVarDecl 0x563ee31eac58 <col:32, col:34> col:34 time 'U'
|-CXXMethodDecl 0x563ee31eb068 <line:174:5, line:176:5> line:174:16 time_monotonic_difference 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::ticks_type (TokenRateX<TokenBucketJiffyParameters<unsigned int> >::time_point_type, TokenRateX<TokenBucketJiffyParameters<unsigned int> >::time_point_type) const'
| |-ParmVarDecl 0x563ee31eaed8 <col:42, col:58> col:58 a 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::time_point_type':'unsigned int'
| `-ParmVarDecl 0x563ee31eaf50 <col:61, col:77> col:77 b 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::time_point_type':'unsigned int'
|-TypedefDecl 0x563ee31eb138 <line:180:5, col:29> col:29 epoch_type 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::time_point_type':'unsigned int'
| |-TypedefType 0x563ee31eaa90 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::time_point_type' sugar
| | |-Typedef 0x563ee31e9530 'time_point_type'
| | `-ElaboratedType 0x563ee31e94e0 'typename TokenBucketJiffyParameters<unsigned int>::time_point_type' sugar
| |   `-TypedefType 0x563ee31e8990 'TokenBucketJiffyParameters<unsigned int>::time_point_type' sugar
| |     |-Typedef 0x563ee31e8830 'time_point_type'
| |     `-TypedefType 0x563ee2e4a440 'click_jiffies_t' sugar
| |       |-Typedef 0x563ee2e4a378 'click_jiffies_t'
| |       `-BuiltinType 0x563ee2b90410 'unsigned int'
| `-DeprecatedAttr 0x563ee31eb190 <col:55> "" ""
|-CXXMethodDecl 0x563ee31eb220 <line:181:5, col:74> col:23 tokens_per_epoch 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::token_type () const' inline
| `-DeprecatedAttr 0x563ee31eb2f8 <col:63> Inherited "" ""
|-CXXMethodDecl 0x563ee31eb388 <line:182:5, col:75> col:23 epochs_until_full 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::ticks_type () const' inline
| `-DeprecatedAttr 0x563ee31eb438 <col:64> Inherited "" ""
|-AccessSpecDecl 0x563ee31eb4a8 <line:185:2, col:9> col:2 private
|-FieldDecl 0x563ee31eb4e0 <line:187:5, col:16> col:16 _tokens_per_tick 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::token_type':'unsigned int'
|-FieldDecl 0x563ee31eb540 <line:188:5, col:16> col:16 _token_scale 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::token_type':'unsigned int'
|-FieldDecl 0x563ee31eb5a0 <line:189:5, col:16> col:16 _time_until_full 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::ticks_type':'unsigned int'
|-CXXDestructorDecl 0x563ee31f2fa0 <line:58:7> col:7 implicit ~TokenRateX 'void ()' inline default trivial noexcept-unevaluated 0x563ee31f2fa0
|-CXXConstructorDecl 0x563ee33107d8 <col:7> col:7 implicit constexpr TokenRateX 'void (const TokenRateX<TokenBucketJiffyParameters<unsigned int> > &)' inline default trivial noexcept-unevaluated 0x563ee33107d8
| `-ParmVarDecl 0x563ee33108b8 <col:7> col:7 'const TokenRateX<TokenBucketJiffyParameters<unsigned int> > &'
`-CXXConstructorDecl 0x563ee3310958 <col:7> col:7 implicit constexpr TokenRateX 'void (TokenRateX<TokenBucketJiffyParameters<unsigned int> > &&)' inline default trivial noexcept-unevaluated 0x563ee3310958
  `-ParmVarDecl 0x563ee3310a68 <col:7> col:7 'TokenRateX<TokenBucketJiffyParameters<unsigned int> > &&'

Layout: <CGRecordLayout
  LLVMType:%class.TokenRateX = type { i32, i32, i32 }
  NonVirtualBaseLLVMType:%class.TokenRateX = type { i32, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x563ee3145840 <../dummy_inc/click/tokenbucket.hh:325:1, line:577:1> line:326:7 class TokenCounterX definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-TemplateArgument type 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >'
|-CXXRecordDecl 0x563ee31ee7c8 prev 0x563ee3145840 <col:1, col:7> col:7 implicit class TokenCounterX
|-AccessSpecDecl 0x563ee31ee858 <col:23, col:29> col:23 public
|-TypedefDecl 0x563ee31ee8b8 <line:329:5, col:15> col:15 rate_type 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >':'TokenRateX<TokenBucketJiffyParameters<unsigned int> >'
| `-SubstTemplateTypeParmType 0x563ee31ee880 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >' sugar
|   |-TemplateTypeParmType 0x563ee3133d90 'R' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x563ee3133d40 'R'
|   `-RecordType 0x563ee31456f0 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >'
|     `-ClassTemplateSpecialization 0x563ee3145610 'TokenRateX'
|-TypedefDecl 0x563ee31ee9b0 <line:332:5, col:36> col:36 token_type 'typename TokenRateX<TokenBucketJiffyParameters<unsigned int> >::token_type':'unsigned int'
| `-ElaboratedType 0x563ee31ee960 'typename TokenRateX<TokenBucketJiffyParameters<unsigned int> >::token_type' sugar
|   `-TypedefType 0x563ee31e9bf0 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::token_type' sugar
|     |-Typedef 0x563ee31e9460 'token_type'
|     `-ElaboratedType 0x563ee31e9410 'typename TokenBucketJiffyParameters<unsigned int>::token_type' sugar
|       `-TypedefType 0x563ee31e93f0 'TokenBucketJiffyParameters<unsigned int>::token_type' sugar
|         |-Typedef 0x563ee31e87d8 'token_type'
|         `-SubstTemplateTypeParmType 0x563ee31e87a0 'unsigned int' sugar
|           |-TemplateTypeParmType 0x563ee313cf70 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x563ee313cf18 'T'
|           `-BuiltinType 0x563ee2b90410 'unsigned int'
|-TypedefDecl 0x563ee31eea80 <line:335:5, col:41> col:41 time_point_type 'typename TokenRateX<TokenBucketJiffyParameters<unsigned int> >::time_point_type':'unsigned int'
| `-ElaboratedType 0x563ee31eea30 'typename TokenRateX<TokenBucketJiffyParameters<unsigned int> >::time_point_type' sugar
|   `-TypedefType 0x563ee31eaa90 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::time_point_type' sugar
|     |-Typedef 0x563ee31e9530 'time_point_type'
|     `-ElaboratedType 0x563ee31e94e0 'typename TokenBucketJiffyParameters<unsigned int>::time_point_type' sugar
|       `-TypedefType 0x563ee31e8990 'TokenBucketJiffyParameters<unsigned int>::time_point_type' sugar
|         |-Typedef 0x563ee31e8830 'time_point_type'
|         `-TypedefType 0x563ee2e4a440 'click_jiffies_t' sugar
|           |-Typedef 0x563ee2e4a378 'click_jiffies_t'
|           `-BuiltinType 0x563ee2b90410 'unsigned int'
|-TypedefDecl 0x563ee31eeb50 <line:338:5, col:36> col:36 ticks_type 'typename TokenRateX<TokenBucketJiffyParameters<unsigned int> >::ticks_type':'unsigned int'
| `-ElaboratedType 0x563ee31eeb00 'typename TokenRateX<TokenBucketJiffyParameters<unsigned int> >::ticks_type' sugar
|   `-TypedefType 0x563ee31ea970 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::ticks_type' sugar
|     |-Typedef 0x563ee31e9ac0 'ticks_type'
|     `-ElaboratedType 0x563ee31e9a70 'typename make_unsigned<typename TokenBucketJiffyParameters<unsigned int>::duration_type>::type' sugar
|       `-TypedefType 0x563ee31e9a50 'make_unsigned<int>::type' sugar
|         |-Typedef 0x563ee31e99e0 'type'
|         `-ElaboratedType 0x563ee31e9990 'typename integer_traits<int>::unsigned_type' sugar
|           `-TypedefType 0x563ee31e9970 'integer_traits<int>::unsigned_type' sugar
|             |-Typedef 0x563ee2e718c0 'unsigned_type'
|             `-BuiltinType 0x563ee2b90410 'unsigned int'
|-EnumDecl 0x563ee31eeba8 <line:340:5> col:5
| `-EnumConstantDecl 0x563ee31eecf0 <line:341:2, col:18> col:2 max_tokens 'TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::(anonymous enum at ../dummy_inc/click/tokenbucket.hh:340:5)'
|   `-ImplicitCastExpr 0x563ee31eed40 <col:15, col:18> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x563ee31eecd0 <col:15, col:18> 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::(anonymous enum at ../dummy_inc/click/tokenbucket.hh:72:5)' Int: 4294967295
|       `-DeclRefExpr 0x563ee31eeca0 <col:15, col:18> 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::(anonymous enum at ../dummy_inc/click/tokenbucket.hh:72:5)' EnumConstant 0x563ee31e9c80 'max_tokens' 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::(anonymous enum at ../dummy_inc/click/tokenbucket.hh:72:5)'
|-CXXConstructorDecl 0x563ee31eed90 <line:347:5, line:349:5> line:347:5 TokenCounterX 'void ()'
|-CXXConstructorDecl 0x563ee31eeef8 <line:356:5, line:358:5> line:356:14 TokenCounterX 'void (bool)'
| `-ParmVarDecl 0x563ee31eee48 <col:28, col:33> col:33 full 'bool'
|-CXXMethodDecl 0x563ee31ef128 <line:365:5, line:367:5> line:365:16 size 'TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::token_type (const TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::rate_type &) const'
| `-ParmVarDecl 0x563ee31ef038 <col:21, col:38> col:38 rate 'const TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::rate_type &'
|-CXXMethodDecl 0x563ee31ef228 <line:373:5, line:375:5> line:373:16 fraction 'TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::token_type () const'
|-CXXMethodDecl 0x563ee31ef2d8 <line:378:5, line:380:5> line:378:10 empty 'bool () const'
|-CXXMethodDecl 0x563ee31ef388 <line:383:5, line:385:5> line:383:10 full 'bool () const'
|-CXXMethodDecl 0x563ee31ef5d8 <line:393:5, line:395:5> line:393:10 contains 'bool (const TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::rate_type &, TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::token_type) const'
| |-ParmVarDecl 0x563ee31ef448 <col:19, col:36> col:36 rate 'const TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::rate_type &'
| `-ParmVarDecl 0x563ee31ef4c0 <col:42, col:53> col:53 t 'TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::token_type':'unsigned int'
|-CXXMethodDecl 0x563ee31ef768 <line:399:5, line:401:5> line:399:10 contains_fraction 'bool (TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::token_type) const'
| `-ParmVarDecl 0x563ee31ef6a8 <col:28, col:39> col:39 f 'TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::token_type':'unsigned int'
|-CXXMethodDecl 0x563ee31ef820 <line:406:5, line:408:5> line:406:10 clear 'void ()'
|-CXXMethodDecl 0x563ee31ef8d0 <line:413:5, line:415:5> line:413:10 set_full 'void ()'
|-CXXMethodDecl 0x563ee31efb18 <line:422:5, line:425:5> line:422:10 set 'void (const TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::rate_type &, TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::token_type)'
| |-ParmVarDecl 0x563ee31ef990 <col:14, col:31> col:31 rate 'const TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::rate_type &'
| `-ParmVarDecl 0x563ee31efa08 <col:37, col:48> col:48 t 'TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::token_type':'unsigned int'
|-CXXMethodDecl 0x563ee31efca8 <line:429:5, line:431:5> line:429:10 set_fraction 'void (TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::token_type)'
| `-ParmVarDecl 0x563ee31efbe8 <col:23, col:34> col:34 f 'TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::token_type':'unsigned int'
|-CXXMethodDecl 0x563ee31efef8 <line:443:5, line:453:5> line:443:10 adjust 'void (const TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::rate_type &, const TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::rate_type &)'
| |-ParmVarDecl 0x563ee31efd70 <col:17, col:34> col:34 old_rate 'const TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::rate_type &'
| `-ParmVarDecl 0x563ee31efde8 <col:44, col:61> col:61 new_rate 'const TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::rate_type &'
|-CXXMethodDecl 0x563ee31f00b8 <line:464:5, col:38> col:10 refill 'void (const TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::rate_type &)'
| `-ParmVarDecl 0x563ee31effc8 <col:17, col:34> col:34 rate 'const TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::rate_type &'
|-CXXMethodDecl 0x563ee31f02f8 <line:469:5, col:60> col:10 refill 'void (const TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::rate_type &, TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::time_point_type)'
| |-ParmVarDecl 0x563ee31f0180 <col:17, col:34> col:34 rate 'const TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::rate_type &'
| `-ParmVarDecl 0x563ee31f0220 <col:40, col:56> col:56 time 'TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::time_point_type':'unsigned int'
|-FunctionTemplateDecl 0x563ee31f0698 <line:474:5, col:68> col:32 refill
| |-TemplateTypeParmDecl 0x563ee31f03b8 <col:15, col:24> col:24 typename depth 0 index 0 U
| `-CXXMethodDecl 0x563ee31f05f8 <col:27, col:68> col:32 refill 'void (const TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::rate_type &, U)'
|   |-ParmVarDecl 0x563ee31f0468 <col:39, col:56> col:56 rate 'const TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::rate_type &'
|   `-ParmVarDecl 0x563ee31f04e0 <col:62, col:64> col:64 time 'U'
|-CXXMethodDecl 0x563ee31f0858 <line:482:5, line:484:5> line:482:10 set_time_point 'void (TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::time_point_type)'
| `-ParmVarDecl 0x563ee31f0790 <col:25, col:41> col:41 time 'TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::time_point_type':'unsigned int'
|-CXXMethodDecl 0x563ee31f0a30 <line:492:5, line:495:5> line:492:10 remove 'void (const TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::rate_type &, TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::token_type)'
| |-ParmVarDecl 0x563ee31f0920 <col:17, col:34> col:34 rate 'const TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::rate_type &'
| `-ParmVarDecl 0x563ee31f0998 <col:40, col:51> col:51 t 'TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::token_type':'unsigned int'
|-CXXMethodDecl 0x563ee31f0c88 <line:505:5, line:507:5> line:505:10 remove_if 'bool (const TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::rate_type &, TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::token_type)'
| |-ParmVarDecl 0x563ee31f0b00 <col:20, col:37> col:37 rate 'const TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::rate_type &'
| `-ParmVarDecl 0x563ee31f0b78 <col:43, col:54> col:54 t 'TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::token_type':'unsigned int'
|-CXXMethodDecl 0x563ee31f0de8 <line:513:5, line:515:5> line:513:10 remove_fraction 'void (TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::token_type)'
| `-ParmVarDecl 0x563ee31f0d58 <col:26, col:37> col:37 f 'TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::token_type':'unsigned int'
|-CXXMethodDecl 0x563ee31f0f78 <line:523:5, line:529:5> line:523:10 remove_fraction_if 'bool (TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::token_type)'
| `-ParmVarDecl 0x563ee31f0eb0 <col:29, col:40> col:40 f 'TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::token_type':'unsigned int'
|-CXXMethodDecl 0x563ee31f11a8 <line:539:5, line:545:5> line:539:16 time_until_contains 'TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::ticks_type (const TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::rate_type &, TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::token_type) const'
| |-ParmVarDecl 0x563ee31f1060 <col:36, col:53> col:53 rate 'const TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::rate_type &'
| `-ParmVarDecl 0x563ee31f10d8 <line:540:8, col:19> col:19 t 'TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::token_type':'unsigned int'
|-CXXMethodDecl 0x563ee31f1388 <line:554:5, line:562:5> line:554:16 time_until_contains_fraction 'TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::ticks_type (const TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::rate_type &, TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::token_type) const'
| |-ParmVarDecl 0x563ee31f1278 <col:45, col:62> col:62 rate 'const TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::rate_type &'
| `-ParmVarDecl 0x563ee31f12f0 <line:555:10, col:21> col:21 f 'TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::token_type':'unsigned int'
|-CXXMethodDecl 0x563ee31f1568 <line:566:5, col:114> col:23 epochs_until_contains 'TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::ticks_type (const TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::rate_type &, TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::token_type) const' inline
| |-ParmVarDecl 0x563ee31f1458 <col:45, col:62> col:62 rate 'const TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::rate_type &'
| |-ParmVarDecl 0x563ee31f14d0 <col:68, col:79> col:79 t 'TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::token_type':'unsigned int'
| `-DeprecatedAttr 0x563ee31f1658 <col:103> Inherited "" ""
|-CXXMethodDecl 0x563ee31f17e8 <line:567:5, col:123> col:23 epochs_until_contains_fraction 'TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::ticks_type (const TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::rate_type &, TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::token_type) const' inline
| |-ParmVarDecl 0x563ee31f16d8 <col:54, col:71> col:71 rate 'const TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::rate_type &'
| |-ParmVarDecl 0x563ee31f1750 <col:77, col:88> col:88 f 'TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::token_type':'unsigned int'
| `-DeprecatedAttr 0x563ee31f18a8 <col:112> Inherited "" ""
|-AccessSpecDecl 0x563ee31f1918 <line:570:3, col:10> col:3 private
|-FieldDecl 0x563ee31f1950 <line:572:5, col:16> col:16 _tokens 'TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::token_type':'unsigned int'
|-FieldDecl 0x563ee31f19b0 <line:573:5, col:21> col:21 _time_point 'TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::time_point_type':'unsigned int'
|-TypedefDecl 0x563ee31f1d10 <line:575:5, col:85> col:85 cvt_type 'TokenRateConverter<TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::rate_type, has_fast_int_multiply<token_type>::value>':'TokenRateConverter<TokenRateX<TokenBucketJiffyParameters<unsigned int> >, true>'
| `-TemplateSpecializationType 0x563ee31f1c70 'TokenRateConverter<TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::rate_type, has_fast_int_multiply<token_type>::value>' sugar TokenRateConverter
|   |-TemplateArgument type 'TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::rate_type':'TokenRateX<TokenBucketJiffyParameters<unsigned int> >'
|   |-TemplateArgument expr
|   | `-ConstantExpr 0x563ee31f1b30 <col:43, col:78> 'bool':'bool' Int: 1
|   |   `-ImplicitCastExpr 0x563ee31f1b18 <col:43, col:78> 'bool':'bool' <LValueToRValue>
|   |     `-DeclRefExpr 0x563ee31f1ae8 <col:43, col:78> 'const bool':'const bool' lvalue Var 0x563ee31707c8 'value' 'const bool':'const bool' non_odr_use_constant
|   `-RecordType 0x563ee31f1c50 'TokenRateConverter<TokenRateX<TokenBucketJiffyParameters<unsigned int> >, true>'
|     `-ClassTemplateSpecialization 0x563ee31f1b50 'TokenRateConverter'
|-CXXDestructorDecl 0x563ee31f3160 <line:326:7> col:7 implicit ~TokenCounterX 'void ()' inline default trivial noexcept-unevaluated 0x563ee31f3160
|-CXXConstructorDecl 0x563ee3310b08 <col:7> col:7 implicit constexpr TokenCounterX 'void (const TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > > &)' inline default trivial noexcept-unevaluated 0x563ee3310b08
| `-ParmVarDecl 0x563ee3310c18 <col:7> col:7 'const TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > > &'
`-CXXConstructorDecl 0x563ee3310cb8 <col:7> col:7 implicit constexpr TokenCounterX 'void (TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > > &&)' inline default trivial noexcept-unevaluated 0x563ee3310cb8
  `-ParmVarDecl 0x563ee3310dc8 <col:7> col:7 'TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > > &&'

Layout: <CGRecordLayout
  LLVMType:%class.TokenCounterX = type { i32, i32 }
  NonVirtualBaseLLVMType:%class.TokenCounterX = type { i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x563ee3145af0 <../dummy_inc/click/tokenbucket.hh:700:1, line:980:1> line:701:7 class TokenBucketX definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-TemplateArgument type 'TokenBucketJiffyParameters<unsigned int>'
|-CXXRecordDecl 0x563ee31e8278 prev 0x563ee3145af0 <col:1, col:7> col:7 implicit class TokenBucketX
|-AccessSpecDecl 0x563ee31e8308 <col:22, col:28> col:22 public
|-TypedefDecl 0x563ee31e8368 <line:704:5, col:15> col:15 parameter_type 'TokenBucketJiffyParameters<unsigned int>':'TokenBucketJiffyParameters<unsigned int>'
| `-SubstTemplateTypeParmType 0x563ee31e8330 'TokenBucketJiffyParameters<unsigned int>' sugar
|   |-TemplateTypeParmType 0x563ee313eae0 'P' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x563ee313ea88 'P'
|   `-RecordType 0x563ee3145550 'TokenBucketJiffyParameters<unsigned int>'
|     `-ClassTemplateSpecialization 0x563ee3145470 'TokenBucketJiffyParameters'
|-TypedefDecl 0x563ee31e8440 <line:707:5, col:27> col:27 rate_type 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >':'TokenRateX<TokenBucketJiffyParameters<unsigned int> >'
| `-TemplateSpecializationType 0x563ee31e83d0 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >' sugar TokenRateX
|   |-TemplateArgument type 'TokenBucketJiffyParameters<unsigned int>':'TokenBucketJiffyParameters<unsigned int>'
|   `-RecordType 0x563ee31456f0 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >'
|     `-ClassTemplateSpecialization 0x563ee3145610 'TokenRateX'
|-TypedefDecl 0x563ee31e8540 <line:710:5, col:38> col:38 counter_type 'TokenCounterX<TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::rate_type>':'TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >'
| `-TemplateSpecializationType 0x563ee31e84d0 'TokenCounterX<TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::rate_type>' sugar TokenCounterX
|   |-TemplateArgument type 'TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::rate_type':'TokenRateX<TokenBucketJiffyParameters<unsigned int> >'
|   `-RecordType 0x563ee3145920 'TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >'
|     `-ClassTemplateSpecialization 0x563ee3145840 'TokenCounterX'
|-TypedefDecl 0x563ee31eb660 <line:713:5, col:44> col:44 token_type 'typename rate_type::token_type':'unsigned int'
| `-ElaboratedType 0x563ee31eb610 'typename rate_type::token_type' sugar
|   `-TypedefType 0x563ee31e9bf0 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::token_type' sugar
|     |-Typedef 0x563ee31e9460 'token_type'
|     `-ElaboratedType 0x563ee31e9410 'typename TokenBucketJiffyParameters<unsigned int>::token_type' sugar
|       `-TypedefType 0x563ee31e93f0 'TokenBucketJiffyParameters<unsigned int>::token_type' sugar
|         |-Typedef 0x563ee31e87d8 'token_type'
|         `-SubstTemplateTypeParmType 0x563ee31e87a0 'unsigned int' sugar
|           |-TemplateTypeParmType 0x563ee313cf70 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x563ee313cf18 'T'
|           `-BuiltinType 0x563ee2b90410 'unsigned int'
|-TypedefDecl 0x563ee31eb730 <line:716:5, col:49> col:49 time_point_type 'typename rate_type::time_point_type':'unsigned int'
| `-ElaboratedType 0x563ee31eb6e0 'typename rate_type::time_point_type' sugar
|   `-TypedefType 0x563ee31eaa90 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::time_point_type' sugar
|     |-Typedef 0x563ee31e9530 'time_point_type'
|     `-ElaboratedType 0x563ee31e94e0 'typename TokenBucketJiffyParameters<unsigned int>::time_point_type' sugar
|       `-TypedefType 0x563ee31e8990 'TokenBucketJiffyParameters<unsigned int>::time_point_type' sugar
|         |-Typedef 0x563ee31e8830 'time_point_type'
|         `-TypedefType 0x563ee2e4a440 'click_jiffies_t' sugar
|           |-Typedef 0x563ee2e4a378 'click_jiffies_t'
|           `-BuiltinType 0x563ee2b90410 'unsigned int'
|-TypedefDecl 0x563ee31eb800 <line:719:5, col:44> col:44 ticks_type 'typename rate_type::ticks_type':'unsigned int'
| `-ElaboratedType 0x563ee31eb7b0 'typename rate_type::ticks_type' sugar
|   `-TypedefType 0x563ee31ea970 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::ticks_type' sugar
|     |-Typedef 0x563ee31e9ac0 'ticks_type'
|     `-ElaboratedType 0x563ee31e9a70 'typename make_unsigned<typename TokenBucketJiffyParameters<unsigned int>::duration_type>::type' sugar
|       `-TypedefType 0x563ee31e9a50 'make_unsigned<int>::type' sugar
|         |-Typedef 0x563ee31e99e0 'type'
|         `-ElaboratedType 0x563ee31e9990 'typename integer_traits<int>::unsigned_type' sugar
|           `-TypedefType 0x563ee31e9970 'integer_traits<int>::unsigned_type' sugar
|             |-Typedef 0x563ee2e718c0 'unsigned_type'
|             `-BuiltinType 0x563ee2b90410 'unsigned int'
|-EnumDecl 0x563ee31eb858 <line:721:5> col:5
| `-EnumConstantDecl 0x563ee31eb9a0 <line:722:2, col:26> col:2 max_tokens 'TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::(anonymous enum at ../dummy_inc/click/tokenbucket.hh:721:5)'
|   `-ImplicitCastExpr 0x563ee31eb9f0 <col:15, col:26> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x563ee31eb980 <col:15, col:26> 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::(anonymous enum at ../dummy_inc/click/tokenbucket.hh:72:5)' Int: 4294967295
|       `-DeclRefExpr 0x563ee31eb950 <col:15, col:26> 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::(anonymous enum at ../dummy_inc/click/tokenbucket.hh:72:5)' EnumConstant 0x563ee31e9c80 'max_tokens' 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::(anonymous enum at ../dummy_inc/click/tokenbucket.hh:72:5)'
|-CXXConstructorDecl 0x563ee31eba40 <line:728:5, line:729:5> line:728:5 used TokenBucketX 'void ()'
|-CXXConstructorDecl 0x563ee31ebba8 <line:735:5, line:737:5> line:735:14 TokenBucketX 'void (bool)'
| `-ParmVarDecl 0x563ee31ebaf8 <col:27, col:32> col:32 unlimited 'bool'
|-CXXConstructorDecl 0x563ee31ebe08 <line:748:5, line:750:5> line:748:5 TokenBucketX 'void (TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type, TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type)'
| |-ParmVarDecl 0x563ee31ebca0 <col:18, col:29> col:29 rate 'TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type':'unsigned int'
| `-ParmVarDecl 0x563ee31ebd18 <col:35, col:46> col:46 capacity 'TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type':'unsigned int'
|-CXXMethodDecl 0x563ee31ebf60 <line:754:5, line:756:5> line:754:10 assign 'void (bool)'
| `-ParmVarDecl 0x563ee31ebed0 <col:17, col:34> col:22 unlimited 'bool'
|-CXXMethodDecl 0x563ee31ec138 <line:771:5, line:773:5> line:771:10 assign 'void (TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type, TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type)'
| |-ParmVarDecl 0x563ee31ec028 <col:17, col:28> col:28 rate 'TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type':'unsigned int'
| `-ParmVarDecl 0x563ee31ec0a0 <col:34, col:45> col:45 capacity 'TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type':'unsigned int'
|-CXXMethodDecl 0x563ee31ec318 <line:784:5, line:788:5> line:784:10 assign_adjust 'void (TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type, TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type)'
| |-ParmVarDecl 0x563ee31ec208 <col:24, col:35> col:35 rate 'TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type':'unsigned int'
| `-ParmVarDecl 0x563ee31ec280 <col:41, col:52> col:52 capacity 'TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type':'unsigned int'
|-CXXMethodDecl 0x563ee31ec3d8 <line:791:5, line:793:5> line:791:10 unlimited 'bool () const'
|-CXXMethodDecl 0x563ee31ec488 <line:796:5, line:798:5> line:796:10 idle 'bool () const'
|-CXXMethodDecl 0x563ee31ec588 <line:804:5, line:806:5> line:804:16 rate 'TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type () const'
|-CXXMethodDecl 0x563ee31ec658 <line:812:5, line:814:5> line:812:16 capacity 'TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type () const'
|-CXXMethodDecl 0x563ee31ec728 <line:820:5, line:822:5> line:820:16 size 'TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type () const'
|-CXXMethodDecl 0x563ee31ec7f8 <line:828:5, line:830:5> line:828:16 fraction 'TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type () const'
|-CXXMethodDecl 0x563ee31ec8a8 <line:833:5, line:835:5> line:833:10 empty 'bool () const'
|-CXXMethodDecl 0x563ee31ec958 <line:838:5, line:840:5> line:838:10 full 'bool () const'
|-CXXMethodDecl 0x563ee31ecb08 <line:846:5, line:848:5> line:846:10 contains 'bool (TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type) const'
| `-ParmVarDecl 0x563ee31eca18 <col:19, col:30> col:30 t 'TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type':'unsigned int'
|-CXXMethodDecl 0x563ee31ecc60 <line:852:5, line:854:5> line:852:10 contains_fraction 'bool (TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type) const'
| `-ParmVarDecl 0x563ee31ecbd0 <col:28, col:39> col:39 f 'TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type':'unsigned int'
|-CXXMethodDecl 0x563ee31ecd18 <line:859:5, line:861:5> line:859:10 clear 'void ()'
|-CXXMethodDecl 0x563ee31ecdc8 <line:866:5, line:868:5> line:866:10 set_full 'void ()'
|-CXXMethodDecl 0x563ee31ecf48 <line:874:5, line:876:5> line:874:10 set 'void (TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type)'
| `-ParmVarDecl 0x563ee31ece88 <col:14, col:25> col:25 t 'TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type':'unsigned int'
|-CXXMethodDecl 0x563ee31ed0a0 <line:880:5, line:882:5> line:880:10 set_fraction 'void (TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type)'
| `-ParmVarDecl 0x563ee31ed010 <col:23, col:34> col:34 f 'TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type':'unsigned int'
|-CXXMethodDecl 0x563ee31ed158 <line:892:5, line:894:5> line:892:10 refill 'void ()'
|-CXXMethodDecl 0x563ee31ed308 <line:897:5, line:899:5> line:897:10 refill 'void (TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::time_point_type)'
| `-ParmVarDecl 0x563ee31ed240 <col:17, col:33> col:33 time 'TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::time_point_type':'unsigned int'
|-FunctionTemplateDecl 0x563ee31ed5c8 <line:902:5, line:904:5> line:902:32 refill
| |-TemplateTypeParmDecl 0x563ee31ed3c0 <col:15, col:24> col:24 typename depth 0 index 0 U
| `-CXXMethodDecl 0x563ee31ed528 <col:27, line:904:5> line:902:32 refill 'void (U)'
|   `-ParmVarDecl 0x563ee31ed468 <col:39, col:41> col:41 time 'U'
|-CXXMethodDecl 0x563ee31ed748 <line:911:5, line:913:5> line:911:10 set_time_point 'void (TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::time_point_type)'
| `-ParmVarDecl 0x563ee31ed6b8 <col:25, col:41> col:41 time 'TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::time_point_type':'unsigned int'
|-CXXMethodDecl 0x563ee31ed8a0 <line:920:5, line:922:5> line:920:10 remove 'void (TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type)'
| `-ParmVarDecl 0x563ee31ed810 <col:17, col:28> col:28 t 'TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type':'unsigned int'
|-CXXMethodDecl 0x563ee31eda28 <line:931:5, line:933:5> line:931:10 remove_if 'bool (TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type)'
| `-ParmVarDecl 0x563ee31ed968 <col:20, col:31> col:31 t 'TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type':'unsigned int'
|-CXXMethodDecl 0x563ee31edb80 <line:939:5, line:941:5> line:939:10 remove_fraction 'void (TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type)'
| `-ParmVarDecl 0x563ee31edaf0 <col:26, col:37> col:37 f 'TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type':'unsigned int'
|-CXXMethodDecl 0x563ee31edcd8 <line:949:5, line:951:5> line:949:10 remove_fraction_if 'bool (TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type)'
| `-ParmVarDecl 0x563ee31edc48 <col:29, col:40> col:40 f 'TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type':'unsigned int'
|-CXXMethodDecl 0x563ee31edeb8 <line:957:5, line:959:5> line:957:16 time_until_contains 'TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::ticks_type (TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type) const'
| `-ParmVarDecl 0x563ee31eddc0 <col:36, col:47> col:47 t 'TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type':'unsigned int'
|-CXXMethodDecl 0x563ee31ee048 <line:965:5, line:967:5> line:965:16 time_until_contains_fraction 'TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::ticks_type (TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::ticks_type) const'
| `-ParmVarDecl 0x563ee31edf80 <col:45, col:56> col:56 f 'TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::ticks_type':'unsigned int'
|-CXXMethodDecl 0x563ee31ee2f8 <line:971:5, col:114> col:23 epochs_until_contains 'TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::ticks_type (const TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::rate_type &, TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type) const' inline
| |-ParmVarDecl 0x563ee31ee168 <col:45, col:62> col:62 rate 'const TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::rate_type &'
| |-ParmVarDecl 0x563ee31ee1e0 <col:68, col:79> col:79 t 'TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type':'unsigned int'
| `-DeprecatedAttr 0x563ee31ee3e8 <col:103> Inherited "" ""
|-CXXMethodDecl 0x563ee31ee578 <line:972:5, col:123> col:23 epochs_until_contains_fraction 'TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::ticks_type (const TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::rate_type &, TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type) const' inline
| |-ParmVarDecl 0x563ee31ee468 <col:54, col:71> col:71 rate 'const TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::rate_type &'
| |-ParmVarDecl 0x563ee31ee4e0 <col:77, col:88> col:88 f 'TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type':'unsigned int'
| `-DeprecatedAttr 0x563ee31ee638 <col:112> Inherited "" ""
|-AccessSpecDecl 0x563ee31ee6a8 <line:975:3, col:10> col:3 private
|-FieldDecl 0x563ee31ee6e0 <line:977:5, col:15> col:15 _rate 'TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::rate_type':'TokenRateX<TokenBucketJiffyParameters<unsigned int> >'
|-FieldDecl 0x563ee31f1d80 <line:978:5, col:18> col:18 _bucket 'TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::counter_type':'TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >'
|-CXXDestructorDecl 0x563ee31f2ec0 <line:701:7> col:7 implicit ~TokenBucketX 'void ()' inline default trivial noexcept-unevaluated 0x563ee31f2ec0
|-CXXConstructorDecl 0x563ee3310e38 <col:7> col:7 implicit constexpr TokenBucketX 'void (const TokenBucketX<TokenBucketJiffyParameters<unsigned int> > &)' inline default trivial noexcept-unevaluated 0x563ee3310e38
| `-ParmVarDecl 0x563ee3310f48 <col:7> col:7 'const TokenBucketX<TokenBucketJiffyParameters<unsigned int> > &'
`-CXXConstructorDecl 0x563ee3310fe8 <col:7> col:7 implicit constexpr TokenBucketX 'void (TokenBucketX<TokenBucketJiffyParameters<unsigned int> > &&)' inline default trivial noexcept-unevaluated 0x563ee3310fe8
  `-ParmVarDecl 0x563ee33110f8 <col:7> col:7 'TokenBucketX<TokenBucketJiffyParameters<unsigned int> > &&'

Layout: <CGRecordLayout
  LLVMType:%class.TokenBucketX = type { %class.TokenRateX, %class.TokenCounterX }
  NonVirtualBaseLLVMType:%class.TokenBucketX = type { %class.TokenRateX, %class.TokenCounterX }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | union Packet::Anno
         0 |   char [48] c
         0 |   uint8_t [48] u8
         0 |   uint16_t [24] u16
         0 |   uint32_t [12] u32
         0 |   uint64_t [6] u64
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Packet::AllAnno
         0 |   union Packet::Anno cb
         0 |     char [48] c
         0 |     uint8_t [48] u8
         0 |     uint16_t [24] u16
         0 |     uint32_t [12] u32
         0 |     uint64_t [6] u64
        48 |   unsigned char * mac
        56 |   unsigned char * nh
        64 |   unsigned char * h
        72 |   enum Packet::PacketType pkt_type
        76 |   char [8] timestamp
        88 |   class Packet * next
        96 |   class Packet * prev
           | [sizeof=104, dsize=104, align=8,
           |  nvsize=104, nvalign=8]

*** Dumping AST Record Layout
         0 | class Packet
         0 |   class atomic_uint32_t _use_count
         0 |     uint32_t _val
         8 |   class Packet * _data_packet
        16 |   unsigned char * _head
        24 |   unsigned char * _data
        32 |   unsigned char * _tail
        40 |   unsigned char * _end
        48 |   struct Packet::AllAnno _aa
        48 |     union Packet::Anno cb
        48 |       char [48] c
        48 |       uint8_t [48] u8
        48 |       uint16_t [24] u16
        48 |       uint32_t [12] u32
        48 |       uint64_t [6] u64
        96 |     unsigned char * mac
       104 |     unsigned char * nh
       112 |     unsigned char * h
       120 |     enum Packet::PacketType pkt_type
       124 |     char [8] timestamp
       136 |     class Packet * next
       144 |     class Packet * prev
       152 |   Packet::buffer_destructor_type _destructor
       160 |   void * _destructor_argument
           | [sizeof=168, dsize=168, align=8,
           |  nvsize=168, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563ee30cf4a8 prev 0x563ee30c46b0 <../dummy_inc/click/packet.hh:702:5, line:711:5> line:702:11 referenced union Anno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x563ee30cf5a0 <col:5, col:11> col:11 implicit union Anno
|-FieldDecl 0x563ee30cf690 <line:703:2, col:18> col:7 referenced c 'char [48]'
|-FieldDecl 0x563ee30cf7b8 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
|-FieldDecl 0x563ee30cf938 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
|-FieldDecl 0x563ee30cfab8 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
|-FieldDecl 0x563ee30cfc38 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
|-CXXConstructorDecl 0x563ee30e0a68 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| `-CompoundStmt 0x563ee30e12d8 <col:11>
|-CXXDestructorDecl 0x563ee30e0b40 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x563ee30e0c78 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x563ee30e0c78
| `-ParmVarDecl 0x563ee30e0d88 <col:11> col:11 'const Packet::Anno &'
|-CXXConstructorDecl 0x563ee30e0e28 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x563ee30e0e28
| `-ParmVarDecl 0x563ee30e0f38 <col:11> col:11 'Packet::Anno &&'
|-CXXMethodDecl 0x563ee30e3cf8 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| |-ParmVarDecl 0x563ee30e3e08 <col:11> col:11 'const Packet::Anno &'
| `-CompoundStmt 0x563ee30e4088 <col:11>
|   `-ReturnStmt 0x563ee30e4078 <col:11>
|     `-UnaryOperator 0x563ee30e4060 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x563ee30e4050 <col:11> 'Packet::Anno *' this
`-CXXMethodDecl 0x563ee30e3e78 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x563ee30e3e78
  `-ParmVarDecl 0x563ee30e3f88 <col:11> col:11 'Packet::Anno &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Packet::Anno" = type { [6 x i64] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563ee30cfca0 <../dummy_inc/click/packet.hh:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x563ee30cfdb8 <col:5, col:12> col:12 implicit struct AllAnno
|-FieldDecl 0x563ee30cfe58 <line:717:2, col:7> col:7 cb 'Packet::Anno'
|-FieldDecl 0x563ee30cfec0 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
|-FieldDecl 0x563ee30cff28 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
|-FieldDecl 0x563ee30cff90 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
|-FieldDecl 0x563ee30cfff0 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
|-FieldDecl 0x563ee30d00b0 <line:722:2, col:34> col:7 timestamp 'char [8]'
|-FieldDecl 0x563ee30d0110 <line:723:2, col:10> col:10 referenced next 'Packet *'
|-FieldDecl 0x563ee30d0170 <line:724:2, col:10> col:10 referenced prev 'Packet *'
|-CXXConstructorDecl 0x563ee30e0978 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| |-CXXCtorInitializer Field 0x563ee30cfe58 'cb' 'Packet::Anno'
| | `-CXXConstructExpr 0x563ee30e12e8 <col:12> 'Packet::Anno' 'void () noexcept'
| `-CompoundStmt 0x563ee30e1340 <col:12>
|-CXXConstructorDecl 0x563ee30e0fa8 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x563ee30e0fa8
| `-ParmVarDecl 0x563ee30e10b8 <col:12> col:12 'const Packet::AllAnno &'
|-CXXConstructorDecl 0x563ee30e1158 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x563ee30e1158
| `-ParmVarDecl 0x563ee30e1268 <col:12> col:12 'Packet::AllAnno &&'
`-CXXDestructorDecl 0x563ee30e33e0 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  NonVirtualBaseLLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563ee30bddc0 <../dummy_inc/click/packet.hh:35:1, line:775:1> line:35:7 referenced class Packet definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x563ee30bded8 <col:1, col:7> col:7 implicit referenced class Packet
|-AccessSpecDecl 0x563ee30bdf68 <col:16, col:22> col:16 public
|-EnumDecl 0x563ee30bdf90 <line:41:5, line:50:5> line:41:5
| |-EnumConstantDecl 0x563ee30be090 <line:45:2, col:21> col:2 referenced default_headroom 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| | `-ImplicitCastExpr 0x563ee30be170 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563ee30be070 <col:21> 'int' Int: 28
| |     `-IntegerLiteral 0x563ee30be050 <col:21> 'int' 28
| `-EnumConstantDecl 0x563ee30be120 <line:48:2, col:22> col:2 referenced min_buffer_length 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
|   `-ImplicitCastExpr 0x563ee30be188 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x563ee30be100 <col:22> 'int' Int: 64
|       `-IntegerLiteral 0x563ee30be0e0 <col:22> 'int' 64
|-CXXMethodDecl 0x563ee30be4c8 <line:52:5, line:53:75> line:52:28 used make 'WritablePacket *(uint32_t, const void *, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x563ee30be1b0 <col:33, col:42> col:42 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x563ee30be230 <col:52, col:64> col:64 data 'const void *'
| |-ParmVarDecl 0x563ee30be2a8 <line:53:5, col:14> col:14 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x563ee30be320 <col:22, col:31> col:31 tailroom 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x563ee30be588 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x563ee30be788 <line:54:5, col:109> col:35 make 'WritablePacket *(const void *, uint32_t)' static inline
| |-ParmVarDecl 0x563ee30be600 <col:40, col:52> col:52 data 'const void *'
| |-ParmVarDecl 0x563ee30be678 <col:58, col:67> col:67 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x563ee30be838 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x563ee30be998 <line:55:5, col:91> col:35 make 'WritablePacket *(uint32_t)' static inline
| |-ParmVarDecl 0x563ee30be8a8 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x563ee30bea40 <col:72> warn_unused_result ""
|-TypedefDecl 0x563ee30beda0 <line:65:5, col:89> col:20 referenced buffer_destructor_type 'void (*)(unsigned char *, size_t, void *)'
| `-PointerType 0x563ee30bed30 'void (*)(unsigned char *, size_t, void *)'
|   `-ParenType 0x563ee30becd0 'void (unsigned char *, size_t, void *)' sugar
|     `-FunctionProtoType 0x563ee30bec90 'void (unsigned char *, size_t, void *)' cdecl
|       |-BuiltinType 0x563ee2b902d0 'void'
|       |-PointerType 0x563ee2e3e160 'unsigned char *'
|       | `-BuiltinType 0x563ee2b903d0 'unsigned char'
|       |-TypedefType 0x563ee2c3a6d0 'size_t' sugar
|       | |-Typedef 0x563ee2c00b20 'size_t'
|       | `-BuiltinType 0x563ee2b90430 'unsigned long'
|       `-PointerType 0x563ee2b90ad0 'void *'
|         `-BuiltinType 0x563ee2b902d0 'void'
|-CXXMethodDecl 0x563ee30bf218 <line:66:5, line:68:131> line:66:28 make 'WritablePacket *(unsigned char *, uint32_t, Packet::buffer_destructor_type, void *, int, int)' static
| |-ParmVarDecl 0x563ee30bee10 <col:33, col:48> col:48 data 'unsigned char *'
| |-ParmVarDecl 0x563ee30bee88 <col:54, col:63> col:63 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x563ee30bef20 <line:67:5, col:28> col:28 buffer_destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| |-ParmVarDecl 0x563ee30befa0 <line:68:33, col:58> col:39 argument 'void *' cinit
| | `-CStyleCastExpr 0x563ee30d9910 <col:50, col:58> 'void *' <NoOp>
| |   `-ImplicitCastExpr 0x563ee30d98f8 <col:58> 'void *' <NullToPointer> part_of_explicit_cast
| |     `-IntegerLiteral 0x563ee30d98c0 <col:58> 'int' 0
| |-ParmVarDecl 0x563ee30bf020 <col:61, col:76> col:65 headroom 'int' cinit
| | `-IntegerLiteral 0x563ee30d9938 <col:76> 'int' 0
| |-ParmVarDecl 0x563ee30bf0a0 <col:79, col:94> col:83 tailroom 'int' cinit
| | `-IntegerLiteral 0x563ee30d9958 <col:94> 'int' 0
| `-WarnUnusedResultAttr 0x563ee30bf2e8 <col:112> warn_unused_result ""
|-CXXMethodDecl 0x563ee30bf368 <line:71:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x563ee30bf428 <line:73:5, col:50> col:45 used kill 'void ()'
| |-NoInlineAttr 0x563ee30bf4c8 <col:20>
| `-OptimizeNoneAttr 0x563ee30bf520 <col:30>
|-CXXMethodDecl 0x563ee30bf598 <line:75:5, col:54> col:45 used shared 'bool () const'
| |-NoInlineAttr 0x563ee30bf638 <col:20>
| `-OptimizeNoneAttr 0x563ee30bf690 <col:30>
|-CXXMethodDecl 0x563ee30bf708 <line:76:5, col:55> col:13 clone 'Packet *()'
| `-WarnUnusedResultAttr 0x563ee30bf7a8 <col:36> warn_unused_result ""
|-CXXMethodDecl 0x563ee30bf858 <line:77:5, col:102> col:56 uniqueify 'WritablePacket *()'
| |-NoInlineAttr 0x563ee30bf8f8 <col:20>
| |-OptimizeNoneAttr 0x563ee30bf950 <col:30>
| `-WarnUnusedResultAttr 0x563ee30bf978 <col:83> warn_unused_result ""
|-CXXMethodDecl 0x563ee30bf9d0 <line:79:5, col:68> col:61 used data 'const unsigned char *() const'
| |-NoInlineAttr 0x563ee30bfa70 <col:20>
| `-OptimizeNoneAttr 0x563ee30bfac8 <col:30>
|-CXXMethodDecl 0x563ee30bfb18 <line:80:5, col:72> col:61 used end_data 'const unsigned char *() const'
| |-NoInlineAttr 0x563ee30bfbb8 <col:20>
| `-OptimizeNoneAttr 0x563ee30bfc10 <col:30>
|-CXXMethodDecl 0x563ee30bfc58 <line:81:5, col:58> col:49 length 'uint32_t () const'
| |-NoInlineAttr 0x563ee30bfcf8 <col:20>
| `-OptimizeNoneAttr 0x563ee30bfd50 <col:30>
|-CXXMethodDecl 0x563ee30bfd98 <line:82:5, col:32> col:21 used headroom 'uint32_t () const' inline
|-CXXMethodDecl 0x563ee30bfe58 <line:83:5, col:32> col:21 used tailroom 'uint32_t () const' inline
|-CXXMethodDecl 0x563ee30bff20 <line:84:5, col:42> col:33 used buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x563ee30bffe8 <line:85:5, col:46> col:33 used end_buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x563ee30c00a8 <line:86:5, col:37> col:21 used buffer_length 'uint32_t () const' inline
|-CXXMethodDecl 0x563ee30c01c8 <line:97:5, line:99:5> line:97:28 buffer_destructor 'Packet::buffer_destructor_type () const'
| `-CompoundStmt 0x563ee30d9a20 <col:54, line:99:5>
|   `-ReturnStmt 0x563ee30d9a10 <line:98:2, col:9>
|     `-ImplicitCastExpr 0x563ee30d99f8 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-MemberExpr 0x563ee30d99c8 <col:9> 'const Packet::buffer_destructor_type':'void (*const)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x563ee30d04a8
|         `-CXXThisExpr 0x563ee30d99b8 <col:9> 'const Packet *' implicit this
|-CXXMethodDecl 0x563ee30c0368 <line:101:5, line:103:5> line:101:10 set_buffer_destructor 'void (Packet::buffer_destructor_type)'
| |-ParmVarDecl 0x563ee30c0278 <col:32, col:55> col:55 used destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| `-CompoundStmt 0x563ee30d9ad0 <col:67, line:103:5>
|   `-BinaryOperator 0x563ee30d9ab0 <line:102:9, col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x563ee30d9a48 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x563ee30d04a8
|     | `-CXXThisExpr 0x563ee30d9a38 <col:9> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x563ee30d9a98 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-DeclRefExpr 0x563ee30d9a78 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ParmVar 0x563ee30c0278 'destructor' 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-CXXMethodDecl 0x563ee30c0460 <line:105:5, line:107:5> line:105:11 destructor_argument 'void *()'
| `-CompoundStmt 0x563ee30d9b50 <col:33, line:107:5>
|   `-ReturnStmt 0x563ee30d9b40 <line:106:9, col:16>
|     `-ImplicitCastExpr 0x563ee30d9b28 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x563ee30d9af8 <col:16> 'void *' lvalue ->_destructor_argument 0x563ee30d0510
|         `-CXXThisExpr 0x563ee30d9ae8 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x563ee30c0520 <line:109:5, line:113:5> line:109:10 reset_buffer 'void ()'
| `-CompoundStmt 0x563ee30da180 <col:25, line:113:5>
|   |-ParenExpr 0x563ee30d9ec8 <line:110:2, col:146> 'void'
|   | `-ConditionalOperator 0x563ee30d9e98 <col:3, col:145> 'void'
|   |   |-CXXStaticCastExpr 0x563ee30d9c08 <col:3, col:32> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x563ee30d9be0 <col:23, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-CXXMemberCallExpr 0x563ee30d9ba8 <col:24, col:31> 'bool'
|   |   |     `-MemberExpr 0x563ee30d9b78 <col:24> '<bound member function type>' ->shared 0x563ee30bf598
|   |   |       `-ImplicitCastExpr 0x563ee30d9bc8 <col:24> 'const Packet *' <NoOp>
|   |   |         `-CXXThisExpr 0x563ee30d9b68 <col:24> 'Packet *' implicit this
|   |   |-CXXFunctionalCastExpr 0x563ee30d9c68 <col:36, col:43> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x563ee30d9c48 <col:42> 'int' 0
|   |   `-CallExpr 0x563ee30d9df8 <col:47, col:145> 'void'
|   |     |-ImplicitCastExpr 0x563ee30d9de0 <col:47> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x563ee30d9dc0 <col:47> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x563ee2c314e0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x563ee30d9e38 <col:62> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563ee30d9cd8 <col:62> 'const char [10]' lvalue "!shared()"
|   |     |-ImplicitCastExpr 0x563ee30d9e50 <col:75> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563ee30d9d00 <col:75> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x563ee30d9e68 <col:107> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x563ee30d9d38 <col:107> 'int' 110
|   |     `-ImplicitCastExpr 0x563ee30d9e80 <col:112, col:126> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x563ee30d9da8 <col:112, col:126> 'const char [28]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x563ee30d9d90 <col:126> 'const char [28]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x563ee30d9d58 <col:126> 'const char [28]' lvalue "void Packet::reset_buffer()"
|   |-BinaryOperator 0x563ee30da0c8 <line:111:2, col:33> 'unsigned char *' lvalue '='
|   | |-MemberExpr 0x563ee30d9ef8 <col:2> 'unsigned char *' lvalue ->_head 0x563ee30d02b0
|   | | `-CXXThisExpr 0x563ee30d9ee8 <col:2> 'Packet *' implicit this
|   | `-ImplicitCastExpr 0x563ee30da0b0 <col:10, col:33> 'unsigned char *' <LValueToRValue>
|   |   `-BinaryOperator 0x563ee30da090 <col:10, col:33> 'unsigned char *' lvalue '='
|   |     |-MemberExpr 0x563ee30d9f38 <col:10> 'unsigned char *' lvalue ->_data 0x563ee30d0318
|   |     | `-CXXThisExpr 0x563ee30d9f28 <col:10> 'Packet *' implicit this
|   |     `-ImplicitCastExpr 0x563ee30da078 <col:18, col:33> 'unsigned char *' <LValueToRValue>
|   |       `-BinaryOperator 0x563ee30da058 <col:18, col:33> 'unsigned char *' lvalue '='
|   |         |-MemberExpr 0x563ee30d9f78 <col:18> 'unsigned char *' lvalue ->_tail 0x563ee30d0380
|   |         | `-CXXThisExpr 0x563ee30d9f68 <col:18> 'Packet *' implicit this
|   |         `-ImplicitCastExpr 0x563ee30da040 <col:26, col:33> 'unsigned char *' <LValueToRValue>
|   |           `-BinaryOperator 0x563ee30da020 <col:26, col:33> 'unsigned char *' lvalue '='
|   |             |-MemberExpr 0x563ee30d9fb8 <col:26> 'unsigned char *' lvalue ->_end 0x563ee30d03e8
|   |             | `-CXXThisExpr 0x563ee30d9fa8 <col:26> 'Packet *' implicit this
|   |             `-ImplicitCastExpr 0x563ee30da008 <col:33> 'unsigned char *' <NullToPointer>
|   |               `-IntegerLiteral 0x563ee30d9fe8 <col:33> 'int' 0
|   `-BinaryOperator 0x563ee30da160 <line:112:2, col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x563ee30da0f8 <col:2> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x563ee30d04a8
|     | `-CXXThisExpr 0x563ee30da0e8 <col:2> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x563ee30da148 <col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <NullToPointer>
|       `-IntegerLiteral 0x563ee30da128 <col:16> 'int' 0
|-CXXMethodDecl 0x563ee30c0660 <line:141:5, col:109> col:56 push 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x563ee30c05d0 <col:61, col:70> col:70 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x563ee30c0708 <col:20>
| |-OptimizeNoneAttr 0x563ee30c0760 <col:30>
| `-WarnUnusedResultAttr 0x563ee30c0788 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x563ee30c0858 <line:152:5, col:120> col:56 push_mac_header 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x563ee30c07c8 <col:72, col:81> col:81 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x563ee30c0900 <col:20>
| |-OptimizeNoneAttr 0x563ee30c0958 <col:30>
| `-WarnUnusedResultAttr 0x563ee30c0980 <col:101> warn_unused_result ""
|-CXXMethodDecl 0x563ee30c0ab8 <line:171:5, col:76> col:13 nonunique_push 'Packet *(uint32_t)'
| |-ParmVarDecl 0x563ee30c09c0 <col:28, col:37> col:37 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x563ee30c0b60 <col:57> warn_unused_result ""
|-CXXMethodDecl 0x563ee30c0c60 <line:187:5, col:62> col:45 pull 'void (uint32_t)'
| |-ParmVarDecl 0x563ee30c0bd0 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x563ee30c0d08 <col:20>
| `-OptimizeNoneAttr 0x563ee30c0d60 <col:30>
|-CXXMethodDecl 0x563ee30c0e28 <line:213:5, col:73> col:21 put 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x563ee30c0d98 <col:25, col:34> col:34 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x563ee30c0ed0 <col:54> warn_unused_result ""
|-CXXMethodDecl 0x563ee30c0fd0 <line:230:5, col:75> col:13 nonunique_put 'Packet *(uint32_t)'
| |-ParmVarDecl 0x563ee30c0f40 <col:27, col:36> col:36 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x563ee30c1078 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x563ee30c1178 <line:245:5, col:62> col:45 take 'void (uint32_t)'
| |-ParmVarDecl 0x563ee30c10e8 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x563ee30c1220 <col:20>
| `-OptimizeNoneAttr 0x563ee30c1278 <col:30>
|-CXXMethodDecl 0x563ee30c1408 <line:269:5, col:99> col:13 shift_data 'Packet *(int, bool)'
| |-ParmVarDecl 0x563ee30c12b8 <col:24, col:28> col:28 offset 'int'
| |-ParmVarDecl 0x563ee30c1330 <col:36, col:59> col:41 free_on_failure 'bool' cinit
| | `-CXXBoolLiteralExpr 0x563ee30d9978 <col:59> 'bool' true
| `-WarnUnusedResultAttr 0x563ee30c14b8 <col:80> warn_unused_result ""
|-CXXMethodDecl 0x563ee30c16b8 <line:271:5, col:71> col:17 shrink_data 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x563ee30c1530 <col:29, col:50> col:50 data 'const unsigned char *'
| `-ParmVarDecl 0x563ee30c15a8 <col:56, col:65> col:65 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x563ee30c18c8 <line:272:5, col:78> col:17 change_headroom_and_length 'void (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x563ee30c1778 <col:44, col:53> col:53 headroom 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x563ee30c17f0 <col:63, col:72> col:72 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x563ee30c1ad8 <line:274:5, col:40> col:10 copy 'bool (Packet *, int)'
| |-ParmVarDecl 0x563ee30c1988 <col:15, col:23> col:23 p 'Packet *'
| `-ParmVarDecl 0x563ee30c1a08 <col:26, col:39> col:30 headroom 'int' cinit
|   `-IntegerLiteral 0x563ee30d9988 <col:39> 'int' 0
|-CXXMethodDecl 0x563ee30c1ba8 <line:279:5, col:34> col:17 has_mac_header 'bool () const' inline
|-CXXMethodDecl 0x563ee30c1c70 <line:280:5, col:46> col:33 used mac_header 'const unsigned char *() const' inline
|-CXXMethodDecl 0x563ee30c1d38 <line:281:5, col:36> col:16 mac_header_offset 'int () const' inline
|-CXXMethodDecl 0x563ee30c1df8 <line:282:5, col:41> col:21 mac_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x563ee30c1ec0 <line:283:5, col:29> col:16 mac_length 'int () const' inline
|-CXXMethodDecl 0x563ee30c2008 <line:284:5, col:54> col:17 set_mac_header 'void (const unsigned char *)' inline
| `-ParmVarDecl 0x563ee30c1f78 <col:32, col:53> col:53 p 'const unsigned char *'
|-CXXMethodDecl 0x563ee30c21d8 <line:285:5, col:68> col:17 used set_mac_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x563ee30c20c8 <col:32, col:53> col:53 p 'const unsigned char *'
| `-ParmVarDecl 0x563ee30c2140 <col:56, col:65> col:65 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x563ee30c22a8 <line:286:5, col:34> col:17 clear_mac_header 'void ()' inline
|-CXXMethodDecl 0x563ee30c2368 <line:288:5, col:66> col:45 has_network_header 'bool () const'
| |-NoInlineAttr 0x563ee30c2408 <col:20>
| `-OptimizeNoneAttr 0x563ee30c2460 <col:30>
|-CXXMethodDecl 0x563ee30c24b0 <line:289:5, col:78> col:61 used network_header 'const unsigned char *() const'
| |-NoInlineAttr 0x563ee30c2550 <col:20>
| `-OptimizeNoneAttr 0x563ee30c25a8 <col:30>
|-CXXMethodDecl 0x563ee30c25f8 <line:290:5, col:40> col:16 used network_header_offset 'int () const' inline
|-CXXMethodDecl 0x563ee30c26b8 <line:291:5, col:45> col:21 used network_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x563ee30c2780 <line:292:5, col:61> col:44 network_length 'int () const'
| |-NoInlineAttr 0x563ee30c2820 <col:20>
| `-OptimizeNoneAttr 0x563ee30c2878 <col:30>
|-CXXMethodDecl 0x563ee30c29c8 <line:293:5, col:72> col:17 set_network_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x563ee30c28b8 <col:36, col:57> col:57 p 'const unsigned char *'
| `-ParmVarDecl 0x563ee30c2930 <col:60, col:69> col:69 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x563ee30c2b18 <line:294:5, col:55> col:17 set_network_header_length 'void (uint32_t)' inline
| `-ParmVarDecl 0x563ee30c2a88 <col:43, col:52> col:52 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x563ee30c2bf0 <line:295:5, col:38> col:17 clear_network_header 'void ()' inline
|-CXXMethodDecl 0x563ee30c2cb0 <line:297:5, col:68> col:45 has_transport_header 'bool () const'
| |-NoInlineAttr 0x563ee30c2d50 <col:20>
| `-OptimizeNoneAttr 0x563ee30c2da8 <col:30>
|-CXXMethodDecl 0x563ee30c2df8 <line:298:5, col:80> col:61 used transport_header 'const unsigned char *() const'
| |-NoInlineAttr 0x563ee30c2e98 <col:20>
| `-OptimizeNoneAttr 0x563ee30c2ef0 <col:30>
|-CXXMethodDecl 0x563ee30c2f40 <line:299:5, col:42> col:16 transport_header_offset 'int () const' inline
|-CXXMethodDecl 0x563ee30c3008 <line:300:5, col:63> col:44 transport_length 'int () const'
| |-NoInlineAttr 0x563ee30c30a8 <col:20>
| `-OptimizeNoneAttr 0x563ee30c3100 <col:30>
|-CXXMethodDecl 0x563ee30c3148 <line:301:5, col:40> col:17 clear_transport_header 'void ()' inline
|-CXXMethodDecl 0x563ee30c3268 <line:304:5, col:46> col:31 ether_header 'const click_ether *() const' inline
|-CXXMethodDecl 0x563ee30c33d8 <line:305:5, col:57> col:17 set_ether_header 'void (const click_ether *)' inline
| `-ParmVarDecl 0x563ee30c3318 <col:34, col:53> col:53 ethh 'const click_ether *'
|-CXXMethodDecl 0x563ee30c34c8 <line:307:5, col:68> col:56 ip_header 'const click_ip *() const'
| |-NoInlineAttr 0x563ee30c3568 <col:20>
| `-OptimizeNoneAttr 0x563ee30c35c0 <col:30>
|-CXXMethodDecl 0x563ee30c3610 <line:308:5, col:35> col:16 ip_header_offset 'int () const' inline
|-CXXMethodDecl 0x563ee30c36d0 <line:309:5, col:40> col:21 ip_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x563ee30c3908 <line:310:5, col:92> col:45 set_ip_header 'void (const click_ip *, uint32_t)'
| |-ParmVarDecl 0x563ee30c3780 <col:59, col:75> col:75 iph 'const click_ip *'
| |-ParmVarDecl 0x563ee30c37f8 <col:80, col:89> col:89 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x563ee30c39b8 <col:20>
| `-OptimizeNoneAttr 0x563ee30c3a10 <col:30>
|-CXXMethodDecl 0x563ee30c3ab8 <line:312:5, col:70> col:57 ip6_header 'const click_ip6 *() const'
| |-NoInlineAttr 0x563ee30c3b58 <col:20>
| `-OptimizeNoneAttr 0x563ee30c3bb0 <col:30>
|-CXXMethodDecl 0x563ee30c3c00 <line:313:5, col:64> col:44 ip6_header_offset 'int () const'
| |-NoInlineAttr 0x563ee30c3ca0 <col:20>
| `-OptimizeNoneAttr 0x563ee30c3cf8 <col:30>
|-CXXMethodDecl 0x563ee30c3d40 <line:314:5, col:69> col:49 ip6_header_length 'uint32_t () const'
| |-NoInlineAttr 0x563ee30c3de0 <col:20>
| `-OptimizeNoneAttr 0x563ee30c3e38 <col:30>
|-CXXMethodDecl 0x563ee30c3f38 <line:315:5, col:81> col:45 set_ip6_header 'void (const click_ip6 *)'
| |-ParmVarDecl 0x563ee30c3e70 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-NoInlineAttr 0x563ee30c3fe0 <col:20>
| `-OptimizeNoneAttr 0x563ee30c4038 <col:30>
|-CXXMethodDecl 0x563ee30c41f8 <line:316:5, col:95> col:45 set_ip6_header 'void (const click_ip6 *, uint32_t)'
| |-ParmVarDecl 0x563ee30c4070 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-ParmVarDecl 0x563ee30c40e8 <col:83, col:92> col:92 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x563ee30c42a8 <col:20>
| `-OptimizeNoneAttr 0x563ee30c4300 <col:30>
|-CXXMethodDecl 0x563ee30c43a8 <line:318:5, col:44> col:30 used icmp_header 'const click_icmp *() const' inline
|-CXXMethodDecl 0x563ee30c44c8 <line:319:5, col:42> col:29 used tcp_header 'const click_tcp *() const' inline
|-CXXMethodDecl 0x563ee30c45e8 <line:320:5, col:42> col:29 used udp_header 'const click_udp *() const' inline
|-AccessSpecDecl 0x563ee30c4688 <line:333:3, col:10> col:3 private
|-CXXRecordDecl 0x563ee30c46b0 <line:335:5, col:11> col:11 referenced union Anno
|-CXXMethodDecl 0x563ee30c47d8 <line:340:5, col:60> col:52 used xanno 'const Packet::Anno *() const'
| |-NoInlineAttr 0x563ee30c4878 <col:20>
| `-OptimizeNoneAttr 0x563ee30c48d0 <col:30>
|-CXXMethodDecl 0x563ee30c4978 <line:341:5, col:52> col:46 used xanno 'Packet::Anno *()'
| |-NoInlineAttr 0x563ee30c4a18 <col:20>
| `-OptimizeNoneAttr 0x563ee30c4a70 <col:30>
|-AccessSpecDecl 0x563ee30c4a98 <line:344:3, col:9> col:3 public
|-EnumDecl 0x563ee30c4ac0 <line:349:5, line:351:5> line:349:5
| `-EnumConstantDecl 0x563ee30c4bc0 <line:350:2, col:14> col:2 referenced anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   `-ImplicitCastExpr 0x563ee30c4c10 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x563ee30c4ba0 <col:14> 'int' Int: 48
|       `-IntegerLiteral 0x563ee30c4b80 <col:14> 'int' 48
|-CXXMethodDecl 0x563ee30c4c78 <line:354:5, col:74> col:57 used timestamp_anno 'const Timestamp &() const'
| |-NoInlineAttr 0x563ee30c4d18 <col:20>
| `-OptimizeNoneAttr 0x563ee30c4d70 <col:30>
|-CXXMethodDecl 0x563ee30c4de8 <line:356:5, col:66> col:51 used timestamp_anno 'Timestamp &()'
| |-NoInlineAttr 0x563ee30c4e88 <col:20>
| `-OptimizeNoneAttr 0x563ee30c4ee0 <col:30>
|-CXXMethodDecl 0x563ee30c4fa8 <line:359:5, col:54> col:17 used set_timestamp_anno 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x563ee30c4f18 <col:36, col:53> col:53 t 'const Timestamp &'
|-CXXMethodDecl 0x563ee30c5148 <line:362:5, col:38> col:24 used device_anno 'net_device *() const' inline
|-CXXMethodDecl 0x563ee30c52e8 <line:364:5, col:48> col:17 used set_device_anno 'void (net_device *)' inline
| `-ParmVarDecl 0x563ee30c51f8 <col:33, col:45> col:45 dev 'net_device *'
|-EnumDecl 0x563ee30c5390 <line:368:5, line:381:5> line:368:10 referenced PacketType
| |-EnumConstantDecl 0x563ee30c5490 <line:369:2, col:9> col:2 HOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x563ee30c5840 <col:9> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563ee30c5470 <col:9> 'int' Int: 0
| |     `-IntegerLiteral 0x563ee30c5450 <col:9> 'int' 0
| |-EnumConstantDecl 0x563ee30c5520 <line:370:2, col:14> col:2 BROADCAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x563ee30c5858 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563ee30c5500 <col:14> 'int' Int: 1
| |     `-IntegerLiteral 0x563ee30c54e0 <col:14> 'int' 1
| |-EnumConstantDecl 0x563ee30c55b0 <line:372:2, col:14> col:2 MULTICAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x563ee30c5870 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563ee30c5590 <col:14> 'int' Int: 2
| |     `-IntegerLiteral 0x563ee30c5570 <col:14> 'int' 2
| |-EnumConstantDecl 0x563ee30c5640 <line:374:2, col:14> col:2 OTHERHOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x563ee30c5888 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563ee30c5620 <col:14> 'int' Int: 3
| |     `-IntegerLiteral 0x563ee30c5600 <col:14> 'int' 3
| |-EnumConstantDecl 0x563ee30c56d0 <line:377:2, col:13> col:2 OUTGOING 'Packet::PacketType'
| | `-ImplicitCastExpr 0x563ee30c58a0 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563ee30c56b0 <col:13> 'int' Int: 4
| |     `-IntegerLiteral 0x563ee30c5690 <col:13> 'int' 4
| |-EnumConstantDecl 0x563ee30c5760 <line:379:2, col:13> col:2 LOOPBACK 'Packet::PacketType'
| | `-ImplicitCastExpr 0x563ee30c58b8 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563ee30c5740 <col:13> 'int' Int: 5
| |     `-IntegerLiteral 0x563ee30c5720 <col:13> 'int' 5
| `-EnumConstantDecl 0x563ee30c57f0 <line:380:2, col:14> col:2 FASTROUTE 'Packet::PacketType'
|   `-ImplicitCastExpr 0x563ee30c58d0 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x563ee30c57d0 <col:14> 'int' Int: 6
|       `-IntegerLiteral 0x563ee30c57b0 <col:14> 'int' 6
|-CXXMethodDecl 0x563ee30c5938 <line:383:5, col:70> col:51 used packet_type_anno 'Packet::PacketType () const'
| |-NoInlineAttr 0x563ee30c59d8 <col:20>
| `-OptimizeNoneAttr 0x563ee30c5a30 <col:30>
|-CXXMethodDecl 0x563ee30c5b28 <line:385:5, col:78> col:45 used set_packet_type_anno 'void (Packet::PacketType)'
| |-ParmVarDecl 0x563ee30c5a68 <col:66, col:77> col:77 t 'Packet::PacketType'
| |-NoInlineAttr 0x563ee30c5bd0 <col:20>
| `-OptimizeNoneAttr 0x563ee30c5c28 <col:30>
|-CXXMethodDecl 0x563ee30c5c98 <line:410:5, col:27> col:20 next 'Packet *() const' inline
|-CXXMethodDecl 0x563ee30c5dc0 <line:412:5, col:26> col:21 next 'Packet *&()' inline
|-CXXMethodDecl 0x563ee30c5f38 <line:414:5, col:35> col:17 set_next 'void (Packet *)' inline
| `-ParmVarDecl 0x563ee30c5e70 <col:26, col:34> col:34 p 'Packet *'
|-CXXMethodDecl 0x563ee30c6000 <line:417:5, col:27> col:20 prev 'Packet *() const' inline
|-CXXMethodDecl 0x563ee30c60c8 <line:419:5, col:26> col:21 prev 'Packet *&()' inline
|-CXXMethodDecl 0x563ee30c6208 <line:421:5, col:35> col:17 set_prev 'void (Packet *)' inline
| `-ParmVarDecl 0x563ee30c6178 <col:26, col:34> col:34 p 'Packet *'
|-EnumDecl 0x563ee30c62b0 <line:423:5, line:426:5> line:423:5
| |-EnumConstantDecl 0x563ee30c63b0 <line:424:2, col:23> col:2 referenced dst_ip_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x563ee30c65b0 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563ee30c6390 <col:23> 'int' Int: 0
| |     `-IntegerLiteral 0x563ee30c6370 <col:23> 'int' 0
| |-EnumConstantDecl 0x563ee30c6440 <col:26, col:45> col:26 dst_ip_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x563ee30c65c8 <col:45> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563ee30c6420 <col:45> 'int' Int: 4
| |     `-IntegerLiteral 0x563ee30c6400 <col:45> 'int' 4
| |-EnumConstantDecl 0x563ee30c64d0 <line:425:2, col:24> col:2 dst_ip6_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x563ee30c65e0 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563ee30c64b0 <col:24> 'int' Int: 0
| |     `-IntegerLiteral 0x563ee30c6490 <col:24> 'int' 0
| `-EnumConstantDecl 0x563ee30c6560 <col:27, col:47> col:27 dst_ip6_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
|   `-ImplicitCastExpr 0x563ee30c65f8 <col:47> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x563ee30c6540 <col:47> 'int' Int: 16
|       `-IntegerLiteral 0x563ee30c6520 <col:47> 'int' 16
|-CXXMethodDecl 0x563ee30c6658 <line:431:5, col:36> col:22 dst_ip_anno 'IPAddress () const' inline
|-CXXMethodDecl 0x563ee30c67c8 <line:436:5, col:75> col:45 set_dst_ip_anno 'void (IPAddress)'
| |-ParmVarDecl 0x563ee30c6708 <col:61, col:71> col:71 addr 'IPAddress'
| |-NoInlineAttr 0x563ee30c6870 <col:20>
| `-OptimizeNoneAttr 0x563ee30c68c8 <col:30>
|-CXXMethodDecl 0x563ee30c6918 <line:441:5, col:36> col:11 anno 'void *()'
| `-CompoundStmt 0x563ee30da2a0 <col:18, col:36>
|   `-ReturnStmt 0x563ee30da290 <col:20, col:33>
|     `-ImplicitCastExpr 0x563ee30da278 <col:27, col:33> 'void *' <BitCast>
|       `-CXXMemberCallExpr 0x563ee30da258 <col:27, col:33> 'Packet::Anno *'
|         `-MemberExpr 0x563ee30da228 <col:27> '<bound member function type>' ->xanno 0x563ee30c4978
|           `-CXXThisExpr 0x563ee30da218 <col:27> 'Packet *' implicit this
|-CXXMethodDecl 0x563ee30c6a10 <line:444:5, col:48> col:17 anno 'const void *() const'
| `-CompoundStmt 0x563ee30da3b0 <col:30, col:48>
|   `-ReturnStmt 0x563ee30da3a0 <col:32, col:45>
|     `-ImplicitCastExpr 0x563ee30da388 <col:39, col:45> 'const void *' <BitCast>
|       `-CXXMemberCallExpr 0x563ee30da368 <col:39, col:45> 'const Packet::Anno *'
|         `-MemberExpr 0x563ee30da338 <col:39> '<bound member function type>' ->xanno 0x563ee30c47d8
|           `-CXXThisExpr 0x563ee30da328 <col:39> 'const Packet *' implicit this
|-CXXMethodDecl 0x563ee30c6af8 <line:447:5, col:50> col:14 used anno_u8 'uint8_t *()'
| `-CompoundStmt 0x563ee30da548 <col:24, col:50>
|   `-ReturnStmt 0x563ee30da538 <col:26, col:47>
|     `-UnaryOperator 0x563ee30da520 <col:33, col:47> 'uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x563ee30da500 <col:34, col:47> 'uint8_t':'unsigned char' lvalue
|         |-ImplicitCastExpr 0x563ee30da4e8 <col:34, col:43> 'uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x563ee30da498 <col:34, col:43> 'uint8_t [48]' lvalue ->u8 0x563ee30cf7b8
|         |   `-CXXMemberCallExpr 0x563ee30da478 <col:34, col:40> 'Packet::Anno *'
|         |     `-MemberExpr 0x563ee30da448 <col:34> '<bound member function type>' ->xanno 0x563ee30c4978
|         |       `-CXXThisExpr 0x563ee30da438 <col:34> 'Packet *' implicit this
|         `-IntegerLiteral 0x563ee30da4c8 <col:46> 'int' 0
|-CXXMethodDecl 0x563ee30c6c00 <line:450:5, col:62> col:20 used anno_u8 'const uint8_t *() const'
| `-CompoundStmt 0x563ee30da718 <col:36, col:62>
|   `-ReturnStmt 0x563ee30da708 <col:38, col:59>
|     `-UnaryOperator 0x563ee30da6f0 <col:45, col:59> 'const uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x563ee30da6d0 <col:46, col:59> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x563ee30da6b8 <col:46, col:55> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x563ee30da630 <col:46, col:55> 'uint8_t const[48]' lvalue ->u8 0x563ee30cf7b8
|         |   `-CXXMemberCallExpr 0x563ee30da610 <col:46, col:52> 'const Packet::Anno *'
|         |     `-MemberExpr 0x563ee30da5e0 <col:46> '<bound member function type>' ->xanno 0x563ee30c47d8
|         |       `-CXXThisExpr 0x563ee30da5d0 <col:46> 'const Packet *' implicit this
|         `-IntegerLiteral 0x563ee30da660 <col:58> 'int' 0
|-CXXMethodDecl 0x563ee30c6d18 <line:453:5, col:53> col:15 used anno_u32 'uint32_t *()'
| `-CompoundStmt 0x563ee30da8b0 <col:26, col:53>
|   `-ReturnStmt 0x563ee30da8a0 <col:28, col:50>
|     `-UnaryOperator 0x563ee30da888 <col:35, col:50> 'uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x563ee30da868 <col:36, col:50> 'uint32_t':'unsigned int' lvalue
|         |-ImplicitCastExpr 0x563ee30da850 <col:36, col:45> 'uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x563ee30da800 <col:36, col:45> 'uint32_t [12]' lvalue ->u32 0x563ee30cfab8
|         |   `-CXXMemberCallExpr 0x563ee30da7e0 <col:36, col:42> 'Packet::Anno *'
|         |     `-MemberExpr 0x563ee30da7b0 <col:36> '<bound member function type>' ->xanno 0x563ee30c4978
|         |       `-CXXThisExpr 0x563ee30da7a0 <col:36> 'Packet *' implicit this
|         `-IntegerLiteral 0x563ee30da830 <col:49> 'int' 0
|-CXXMethodDecl 0x563ee30c6e38 <line:456:5, col:65> col:21 used anno_u32 'const uint32_t *() const'
| `-CompoundStmt 0x563ee30daa88 <col:38, col:65>
|   `-ReturnStmt 0x563ee30daa78 <col:40, col:62>
|     `-UnaryOperator 0x563ee30daa60 <col:47, col:62> 'const uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x563ee30daa40 <col:48, col:62> 'const uint32_t':'const unsigned int' lvalue
|         |-ImplicitCastExpr 0x563ee30daa28 <col:48, col:57> 'const uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x563ee30da998 <col:48, col:57> 'uint32_t const[12]' lvalue ->u32 0x563ee30cfab8
|         |   `-CXXMemberCallExpr 0x563ee30da978 <col:48, col:54> 'const Packet::Anno *'
|         |     `-MemberExpr 0x563ee30da948 <col:48> '<bound member function type>' ->xanno 0x563ee30c47d8
|         |       `-CXXThisExpr 0x563ee30da938 <col:48> 'const Packet *' implicit this
|         `-IntegerLiteral 0x563ee30da9c8 <col:61> 'int' 0
|-CXXMethodDecl 0x563ee30c6fe8 <line:460:5, line:463:5> line:460:13 used anno_u8 'uint8_t (int) const'
| |-ParmVarDecl 0x563ee30c6ef0 <col:21, col:25> col:25 used i 'int'
| `-CompoundStmt 0x563ee30db158 <col:34, line:463:5>
|   |-ParenExpr 0x563ee30dafa0 <line:461:2, col:174> 'void'
|   | `-ConditionalOperator 0x563ee30daf70 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x563ee30dabd8 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x563ee30daba8 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x563ee30daaf8 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x563ee30daae0 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x563ee30daaa0 <col:23> 'int' lvalue ParmVar 0x563ee30c6ef0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x563ee30daac0 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x563ee30dab88 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x563ee30dab58 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x563ee30dab18 <col:33> 'int' lvalue ParmVar 0x563ee30c6ef0 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x563ee30dab70 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x563ee30dab38 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x563ee30c4bc0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x563ee30dac38 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x563ee30dac18 <col:56> 'int' 0
|   |   `-CallExpr 0x563ee30daed0 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x563ee30daeb8 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x563ee30dae98 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x563ee2c314e0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x563ee30daf10 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563ee30dad28 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x563ee30daf28 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563ee30dad58 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x563ee30daf40 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x563ee30dad90 <col:135> 'int' 461
|   |     `-ImplicitCastExpr 0x563ee30daf58 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x563ee30dae80 <col:140, col:154> 'const char [35]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x563ee30dae68 <col:154> 'const char [35]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x563ee30dae28 <col:154> 'const char [35]' lvalue "uint8_t Packet::anno_u8(int) const"
|   `-ReturnStmt 0x563ee30db148 <line:462:2, col:22>
|     `-ImplicitCastExpr 0x563ee30db130 <col:9, col:22> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-ArraySubscriptExpr 0x563ee30db110 <col:9, col:22> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x563ee30db0e0 <col:9, col:18> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x563ee30db090 <col:9, col:18> 'uint8_t const[48]' lvalue ->u8 0x563ee30cf7b8
|         |   `-CXXMemberCallExpr 0x563ee30db070 <col:9, col:15> 'const Packet::Anno *'
|         |     `-MemberExpr 0x563ee30db040 <col:9> '<bound member function type>' ->xanno 0x563ee30c47d8
|         |       `-CXXThisExpr 0x563ee30db030 <col:9> 'const Packet *' implicit this
|         `-ImplicitCastExpr 0x563ee30db0f8 <col:21> 'int' <LValueToRValue>
|           `-DeclRefExpr 0x563ee30db0c0 <col:21> 'int' lvalue ParmVar 0x563ee30c6ef0 'i' 'int'
|-CXXMethodDecl 0x563ee30c7238 <line:469:5, line:472:5> line:469:10 used set_anno_u8 'void (int, uint8_t)'
| |-ParmVarDecl 0x563ee30c70a8 <col:22, col:26> col:26 used i 'int'
| |-ParmVarDecl 0x563ee30c7120 <col:29, col:37> col:37 used x 'uint8_t':'unsigned char'
| `-CompoundStmt 0x563ee30db7e8 <col:40, line:472:5>
|   |-ParenExpr 0x563ee30db600 <line:470:2, col:174> 'void'
|   | `-ConditionalOperator 0x563ee30db5d0 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x563ee30db2b0 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x563ee30db280 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x563ee30db1d0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x563ee30db1b8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x563ee30db178 <col:23> 'int' lvalue ParmVar 0x563ee30c70a8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x563ee30db198 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x563ee30db260 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x563ee30db230 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x563ee30db1f0 <col:33> 'int' lvalue ParmVar 0x563ee30c70a8 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x563ee30db248 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x563ee30db210 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x563ee30c4bc0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x563ee30db310 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x563ee30db2f0 <col:56> 'int' 0
|   |   `-CallExpr 0x563ee30db530 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x563ee30db518 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x563ee30db4f8 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x563ee2c314e0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x563ee30db570 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563ee30db380 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x563ee30db588 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563ee30db3b0 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x563ee30db5a0 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x563ee30db3e8 <col:135> 'int' 470
|   |     `-ImplicitCastExpr 0x563ee30db5b8 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x563ee30db4e0 <col:140, col:154> 'const char [39]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x563ee30db4c8 <col:154> 'const char [39]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x563ee30db488 <col:154> 'const char [39]' lvalue "void Packet::set_anno_u8(int, uint8_t)"
|   `-BinaryOperator 0x563ee30db7c8 <line:471:2, col:19> 'uint8_t':'unsigned char' lvalue '='
|     |-ArraySubscriptExpr 0x563ee30db770 <col:2, col:15> 'uint8_t':'unsigned char' lvalue
|     | |-ImplicitCastExpr 0x563ee30db740 <col:2, col:11> 'uint8_t *' <ArrayToPointerDecay>
|     | | `-MemberExpr 0x563ee30db6f0 <col:2, col:11> 'uint8_t [48]' lvalue ->u8 0x563ee30cf7b8
|     | |   `-CXXMemberCallExpr 0x563ee30db6d0 <col:2, col:8> 'Packet::Anno *'
|     | |     `-MemberExpr 0x563ee30db6a0 <col:2> '<bound member function type>' ->xanno 0x563ee30c4978
|     | |       `-CXXThisExpr 0x563ee30db690 <col:2> 'Packet *' implicit this
|     | `-ImplicitCastExpr 0x563ee30db758 <col:14> 'int' <LValueToRValue>
|     |   `-DeclRefExpr 0x563ee30db720 <col:14> 'int' lvalue ParmVar 0x563ee30c70a8 'i' 'int'
|     `-ImplicitCastExpr 0x563ee30db7b0 <col:19> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-DeclRefExpr 0x563ee30db790 <col:19> 'uint8_t':'unsigned char' lvalue ParmVar 0x563ee30c7120 'x' 'uint8_t':'unsigned char'
|-CXXMethodDecl 0x563ee30c73f8 <line:479:5, line:485:5> line:479:14 used anno_u16 'uint16_t (int) const'
| |-ParmVarDecl 0x563ee30c7300 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x563ee30dbf68 <col:36, line:485:5>
|   |-ParenExpr 0x563ee30dbcd0 <line:480:2, col:182> 'void'
|   | `-ConditionalOperator 0x563ee30dbca0 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x563ee30db980 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x563ee30db950 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x563ee30db860 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x563ee30db848 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x563ee30db808 <col:23> 'int' lvalue ParmVar 0x563ee30c7300 'i' 'int'
|   |   |   | `-IntegerLiteral 0x563ee30db828 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x563ee30db930 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x563ee30db918 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x563ee30db880 <col:33> 'int' lvalue ParmVar 0x563ee30c7300 'i' 'int'
|   |   |     `-BinaryOperator 0x563ee30db8f8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x563ee30db8e0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x563ee30db8a0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x563ee30c4bc0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x563ee30db8c0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x563ee30db9e0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x563ee30db9c0 <col:60> 'int' 0
|   |   `-CallExpr 0x563ee30dbc00 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x563ee30dbbe8 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x563ee30dbbc8 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x563ee2c314e0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x563ee30dbc40 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563ee30dba50 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x563ee30dbc58 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563ee30dba88 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x563ee30dbc70 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x563ee30dbac0 <col:143> 'int' 480
|   |     `-ImplicitCastExpr 0x563ee30dbc88 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x563ee30dbbb0 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x563ee30dbb98 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x563ee30dbb58 <col:162> 'const char [37]' lvalue "uint16_t Packet::anno_u16(int) const"
|   `-ReturnStmt 0x563ee30dbf58 <line:484:2, col:75>
|     `-ImplicitCastExpr 0x563ee30dbf40 <col:9, col:75> 'click_aliasable_uint16_t':'unsigned short' <LValueToRValue>
|       `-UnaryOperator 0x563ee30dbf28 <col:9, col:75> 'const click_aliasable_uint16_t':'const unsigned short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x563ee30dbef8 <col:10, col:75> 'const click_aliasable_uint16_t *' reinterpret_cast<const click_aliasable_uint16_t *> <BitCast>
|           `-BinaryOperator 0x563ee30dbe98 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x563ee30dbe68 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x563ee30dbde0 <col:61, col:70> 'char const[48]' lvalue ->c 0x563ee30cf690
|             |   `-CXXMemberCallExpr 0x563ee30dbdc0 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x563ee30dbd90 <col:61> '<bound member function type>' ->xanno 0x563ee30c47d8
|             |       `-CXXThisExpr 0x563ee30dbd80 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x563ee30dbe80 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x563ee30dbe10 <col:74> 'int' lvalue ParmVar 0x563ee30c7300 'i' 'int'
|-CXXMethodDecl 0x563ee30c7648 <line:494:5, line:500:5> line:494:10 used set_anno_u16 'void (int, uint16_t)'
| |-ParmVarDecl 0x563ee30c74b8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x563ee30c7530 <col:30, col:39> col:39 used x 'uint16_t':'unsigned short'
| `-CompoundStmt 0x563ee30dc6b8 <col:42, line:500:5>
|   |-ParenExpr 0x563ee30dc450 <line:495:2, col:182> 'void'
|   | `-ConditionalOperator 0x563ee30dc420 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x563ee30dc100 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x563ee30dc0d0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x563ee30dbfe0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x563ee30dbfc8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x563ee30dbf88 <col:23> 'int' lvalue ParmVar 0x563ee30c74b8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x563ee30dbfa8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x563ee30dc0b0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x563ee30dc098 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x563ee30dc000 <col:33> 'int' lvalue ParmVar 0x563ee30c74b8 'i' 'int'
|   |   |     `-BinaryOperator 0x563ee30dc078 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x563ee30dc060 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x563ee30dc020 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x563ee30c4bc0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x563ee30dc040 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x563ee30dc160 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x563ee30dc140 <col:60> 'int' 0
|   |   `-CallExpr 0x563ee30dc380 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x563ee30dc368 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x563ee30dc348 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x563ee2c314e0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x563ee30dc3c0 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563ee30dc1d0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x563ee30dc3d8 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563ee30dc208 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x563ee30dc3f0 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x563ee30dc240 <col:143> 'int' 495
|   |     `-ImplicitCastExpr 0x563ee30dc408 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x563ee30dc330 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x563ee30dc318 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x563ee30dc2d8 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u16(int, uint16_t)"
|   `-BinaryOperator 0x563ee30dc698 <line:499:2, col:66> 'click_aliasable_uint16_t':'unsigned short' lvalue '='
|     |-UnaryOperator 0x563ee30dc648 <col:2, col:62> 'click_aliasable_uint16_t':'unsigned short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x563ee30dc618 <col:3, col:62> 'click_aliasable_uint16_t *' reinterpret_cast<click_aliasable_uint16_t *> <BitCast>
|     |   `-BinaryOperator 0x563ee30dc5c0 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x563ee30dc590 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x563ee30dc540 <col:48, col:57> 'char [48]' lvalue ->c 0x563ee30cf690
|     |     |   `-CXXMemberCallExpr 0x563ee30dc520 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x563ee30dc4f0 <col:48> '<bound member function type>' ->xanno 0x563ee30c4978
|     |     |       `-CXXThisExpr 0x563ee30dc4e0 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x563ee30dc5a8 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x563ee30dc570 <col:61> 'int' lvalue ParmVar 0x563ee30c74b8 'i' 'int'
|     `-ImplicitCastExpr 0x563ee30dc680 <col:66> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x563ee30dc660 <col:66> 'uint16_t':'unsigned short' lvalue ParmVar 0x563ee30c7530 'x' 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x563ee30c7808 <line:507:5, line:513:5> line:507:13 anno_s16 'int16_t (int) const'
| |-ParmVarDecl 0x563ee30c7710 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x563ee30dce18 <col:35, line:513:5>
|   |-ParenExpr 0x563ee30dcb28 <line:508:2, col:182> 'void'
|   | `-ConditionalOperator 0x563ee30dcaf8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x563ee30dc850 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x563ee30dc820 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x563ee30dc730 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x563ee30dc718 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x563ee30dc6d8 <col:23> 'int' lvalue ParmVar 0x563ee30c7710 'i' 'int'
|   |   |   | `-IntegerLiteral 0x563ee30dc6f8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x563ee30dc800 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x563ee30dc7e8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x563ee30dc750 <col:33> 'int' lvalue ParmVar 0x563ee30c7710 'i' 'int'
|   |   |     `-BinaryOperator 0x563ee30dc7c8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x563ee30dc7b0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x563ee30dc770 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x563ee30c4bc0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x563ee30dc790 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x563ee30dc8b0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x563ee30dc890 <col:60> 'int' 0
|   |   `-CallExpr 0x563ee30dca58 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x563ee30dca40 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x563ee30dca20 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x563ee2c314e0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x563ee30dca98 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563ee30dc920 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x563ee30dcab0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563ee30dc958 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x563ee30dcac8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x563ee30dc990 <col:143> 'int' 508
|   |     `-ImplicitCastExpr 0x563ee30dcae0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x563ee30dca08 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x563ee30dc9f0 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x563ee30dc9b0 <col:162> 'const char [36]' lvalue "int16_t Packet::anno_s16(int) const"
|   `-ReturnStmt 0x563ee30dce08 <line:512:2, col:74>
|     `-ImplicitCastExpr 0x563ee30dcdf0 <col:9, col:74> 'click_aliasable_int16_t':'short' <LValueToRValue>
|       `-UnaryOperator 0x563ee30dcdd8 <col:9, col:74> 'const click_aliasable_int16_t':'const short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x563ee30dcda8 <col:10, col:74> 'const click_aliasable_int16_t *' reinterpret_cast<const click_aliasable_int16_t *> <BitCast>
|           `-BinaryOperator 0x563ee30dcd20 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x563ee30dccf0 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x563ee30dcca0 <col:60, col:69> 'char const[48]' lvalue ->c 0x563ee30cf690
|             |   `-CXXMemberCallExpr 0x563ee30dcc80 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x563ee30dcc50 <col:60> '<bound member function type>' ->xanno 0x563ee30c47d8
|             |       `-CXXThisExpr 0x563ee30dcc40 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x563ee30dcd08 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x563ee30dccd0 <col:73> 'int' lvalue ParmVar 0x563ee30c7710 'i' 'int'
|-CXXMethodDecl 0x563ee30c7a58 <line:522:5, line:528:5> line:522:10 set_anno_s16 'void (int, int16_t)'
| |-ParmVarDecl 0x563ee30c78c8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x563ee30c7940 <col:30, col:38> col:38 used x 'int16_t':'short'
| `-CompoundStmt 0x563ee30dd538 <col:41, line:528:5>
|   |-ParenExpr 0x563ee30dd2c0 <line:523:2, col:182> 'void'
|   | `-ConditionalOperator 0x563ee30dd290 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x563ee30dcfb0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x563ee30dcf80 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x563ee30dce90 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x563ee30dce78 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x563ee30dce38 <col:23> 'int' lvalue ParmVar 0x563ee30c78c8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x563ee30dce58 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x563ee30dcf60 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x563ee30dcf48 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x563ee30dceb0 <col:33> 'int' lvalue ParmVar 0x563ee30c78c8 'i' 'int'
|   |   |     `-BinaryOperator 0x563ee30dcf28 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x563ee30dcf10 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x563ee30dced0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x563ee30c4bc0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x563ee30dcef0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x563ee30dd010 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x563ee30dcff0 <col:60> 'int' 0
|   |   `-CallExpr 0x563ee30dd1f0 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x563ee30dd1d8 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x563ee30dd1b8 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x563ee2c314e0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x563ee30dd230 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563ee30dd080 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x563ee30dd248 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563ee30dd0b8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x563ee30dd260 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x563ee30dd0f0 <col:143> 'int' 523
|   |     `-ImplicitCastExpr 0x563ee30dd278 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x563ee30dd1a0 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x563ee30dd188 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x563ee30dd148 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s16(int, int16_t)"
|   `-BinaryOperator 0x563ee30dd518 <line:527:2, col:65> 'click_aliasable_int16_t':'short' lvalue '='
|     |-UnaryOperator 0x563ee30dd4c8 <col:2, col:61> 'click_aliasable_int16_t':'short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x563ee30dd498 <col:3, col:61> 'click_aliasable_int16_t *' reinterpret_cast<click_aliasable_int16_t *> <BitCast>
|     |   `-BinaryOperator 0x563ee30dd440 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x563ee30dd400 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x563ee30dd3b0 <col:47, col:56> 'char [48]' lvalue ->c 0x563ee30cf690
|     |     |   `-CXXMemberCallExpr 0x563ee30dd390 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x563ee30dd360 <col:47> '<bound member function type>' ->xanno 0x563ee30c4978
|     |     |       `-CXXThisExpr 0x563ee30dd350 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x563ee30dd418 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x563ee30dd3e0 <col:60> 'int' lvalue ParmVar 0x563ee30c78c8 'i' 'int'
|     `-ImplicitCastExpr 0x563ee30dd500 <col:65> 'int16_t':'short' <LValueToRValue>
|       `-DeclRefExpr 0x563ee30dd4e0 <col:65> 'int16_t':'short' lvalue ParmVar 0x563ee30c7940 'x' 'int16_t':'short'
|-CXXMethodDecl 0x563ee30c7c18 <line:535:5, line:541:5> line:535:14 used anno_u32 'uint32_t (int) const'
| |-ParmVarDecl 0x563ee30c7b20 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x563ee30ddc08 <col:36, line:541:5>
|   |-ParenExpr 0x563ee30dd9a8 <line:536:2, col:182> 'void'
|   | `-ConditionalOperator 0x563ee30dd978 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x563ee30dd6d0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x563ee30dd6a0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x563ee30dd5b0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x563ee30dd598 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x563ee30dd558 <col:23> 'int' lvalue ParmVar 0x563ee30c7b20 'i' 'int'
|   |   |   | `-IntegerLiteral 0x563ee30dd578 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x563ee30dd680 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x563ee30dd668 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x563ee30dd5d0 <col:33> 'int' lvalue ParmVar 0x563ee30c7b20 'i' 'int'
|   |   |     `-BinaryOperator 0x563ee30dd648 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x563ee30dd630 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x563ee30dd5f0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x563ee30c4bc0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x563ee30dd610 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x563ee30dd730 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x563ee30dd710 <col:60> 'int' 0
|   |   `-CallExpr 0x563ee30dd8d8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x563ee30dd8c0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x563ee30dd8a0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x563ee2c314e0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x563ee30dd918 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563ee30dd7a0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x563ee30dd930 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563ee30dd7d8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x563ee30dd948 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x563ee30dd810 <col:143> 'int' 536
|   |     `-ImplicitCastExpr 0x563ee30dd960 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x563ee30dd888 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x563ee30dd870 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x563ee30dd830 <col:162> 'const char [37]' lvalue "uint32_t Packet::anno_u32(int) const"
|   `-ReturnStmt 0x563ee30ddbf8 <line:540:2, col:75>
|     `-ImplicitCastExpr 0x563ee30ddbe0 <col:9, col:75> 'click_aliasable_uint32_t':'unsigned int' <LValueToRValue>
|       `-UnaryOperator 0x563ee30ddbc8 <col:9, col:75> 'const click_aliasable_uint32_t':'const unsigned int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x563ee30ddb98 <col:10, col:75> 'const click_aliasable_uint32_t *' reinterpret_cast<const click_aliasable_uint32_t *> <BitCast>
|           `-BinaryOperator 0x563ee30ddb40 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x563ee30ddb10 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x563ee30ddac0 <col:61, col:70> 'char const[48]' lvalue ->c 0x563ee30cf690
|             |   `-CXXMemberCallExpr 0x563ee30ddaa0 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x563ee30dda70 <col:61> '<bound member function type>' ->xanno 0x563ee30c47d8
|             |       `-CXXThisExpr 0x563ee30dda60 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x563ee30ddb28 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x563ee30ddaf0 <col:74> 'int' lvalue ParmVar 0x563ee30c7b20 'i' 'int'
|-CXXMethodDecl 0x563ee30c7de8 <line:550:5, col:75> col:45 used set_anno_u32 'void (int, uint32_t)'
| |-ParmVarDecl 0x563ee30c7cd8 <col:58, col:62> col:62 i 'int'
| |-ParmVarDecl 0x563ee30c7d50 <col:65, col:74> col:74 x 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x563ee30c7e98 <col:20>
| `-OptimizeNoneAttr 0x563ee30c7ef0 <col:30>
|-CXXMethodDecl 0x563ee30c8028 <line:556:5, line:562:5> line:556:13 used anno_s32 'int32_t (int) const'
| |-ParmVarDecl 0x563ee30c7f30 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x563ee30de2d8 <col:35, line:562:5>
|   |-ParenExpr 0x563ee30de078 <line:557:2, col:182> 'void'
|   | `-ConditionalOperator 0x563ee30de048 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x563ee30ddda0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x563ee30ddd70 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x563ee30ddc80 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x563ee30ddc68 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x563ee30ddc28 <col:23> 'int' lvalue ParmVar 0x563ee30c7f30 'i' 'int'
|   |   |   | `-IntegerLiteral 0x563ee30ddc48 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x563ee30ddd50 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x563ee30ddd38 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x563ee30ddca0 <col:33> 'int' lvalue ParmVar 0x563ee30c7f30 'i' 'int'
|   |   |     `-BinaryOperator 0x563ee30ddd18 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x563ee30ddd00 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x563ee30ddcc0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x563ee30c4bc0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x563ee30ddce0 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x563ee30dde00 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x563ee30ddde0 <col:60> 'int' 0
|   |   `-CallExpr 0x563ee30ddfa8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x563ee30ddf90 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x563ee30ddf70 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x563ee2c314e0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x563ee30ddfe8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563ee30dde70 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x563ee30de000 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563ee30ddea8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x563ee30de018 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x563ee30ddee0 <col:143> 'int' 557
|   |     `-ImplicitCastExpr 0x563ee30de030 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x563ee30ddf58 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x563ee30ddf40 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x563ee30ddf00 <col:162> 'const char [36]' lvalue "int32_t Packet::anno_s32(int) const"
|   `-ReturnStmt 0x563ee30de2c8 <line:561:2, col:74>
|     `-ImplicitCastExpr 0x563ee30de2b0 <col:9, col:74> 'click_aliasable_int32_t':'int' <LValueToRValue>
|       `-UnaryOperator 0x563ee30de298 <col:9, col:74> 'const click_aliasable_int32_t':'const int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x563ee30de268 <col:10, col:74> 'const click_aliasable_int32_t *' reinterpret_cast<const click_aliasable_int32_t *> <BitCast>
|           `-BinaryOperator 0x563ee30de210 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x563ee30de1e0 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x563ee30de190 <col:60, col:69> 'char const[48]' lvalue ->c 0x563ee30cf690
|             |   `-CXXMemberCallExpr 0x563ee30de170 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x563ee30de140 <col:60> '<bound member function type>' ->xanno 0x563ee30c47d8
|             |       `-CXXThisExpr 0x563ee30de130 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x563ee30de1f8 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x563ee30de1c0 <col:73> 'int' lvalue ParmVar 0x563ee30c7f30 'i' 'int'
|-CXXMethodDecl 0x563ee30c8238 <line:571:5, line:577:5> line:571:10 used set_anno_s32 'void (int, int32_t)'
| |-ParmVarDecl 0x563ee30c80e8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x563ee30c8160 <col:30, col:38> col:38 used x 'int32_t':'int'
| `-CompoundStmt 0x563ee30de9b8 <col:41, line:577:5>
|   |-ParenExpr 0x563ee30de748 <line:572:2, col:182> 'void'
|   | `-ConditionalOperator 0x563ee30de718 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x563ee30de470 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x563ee30de440 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x563ee30de350 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x563ee30de338 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x563ee30de2f8 <col:23> 'int' lvalue ParmVar 0x563ee30c80e8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x563ee30de318 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x563ee30de420 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x563ee30de408 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x563ee30de370 <col:33> 'int' lvalue ParmVar 0x563ee30c80e8 'i' 'int'
|   |   |     `-BinaryOperator 0x563ee30de3e8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x563ee30de3d0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x563ee30de390 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x563ee30c4bc0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x563ee30de3b0 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x563ee30de4d0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x563ee30de4b0 <col:60> 'int' 0
|   |   `-CallExpr 0x563ee30de678 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x563ee30de660 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x563ee30de640 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x563ee2c314e0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x563ee30de6b8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563ee30de540 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x563ee30de6d0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563ee30de578 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x563ee30de6e8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x563ee30de5b0 <col:143> 'int' 572
|   |     `-ImplicitCastExpr 0x563ee30de700 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x563ee30de628 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x563ee30de610 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x563ee30de5d0 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s32(int, int32_t)"
|   `-BinaryOperator 0x563ee30de998 <line:576:2, col:65> 'click_aliasable_int32_t':'int' lvalue '='
|     |-UnaryOperator 0x563ee30de948 <col:2, col:61> 'click_aliasable_int32_t':'int' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x563ee30de918 <col:3, col:61> 'click_aliasable_int32_t *' reinterpret_cast<click_aliasable_int32_t *> <BitCast>
|     |   `-BinaryOperator 0x563ee30de8b8 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x563ee30de888 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x563ee30de838 <col:47, col:56> 'char [48]' lvalue ->c 0x563ee30cf690
|     |     |   `-CXXMemberCallExpr 0x563ee30de818 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x563ee30de7e8 <col:47> '<bound member function type>' ->xanno 0x563ee30c4978
|     |     |       `-CXXThisExpr 0x563ee30de7d8 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x563ee30de8a0 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x563ee30de868 <col:60> 'int' lvalue ParmVar 0x563ee30c80e8 'i' 'int'
|     `-ImplicitCastExpr 0x563ee30de980 <col:65> 'int32_t':'int' <LValueToRValue>
|       `-DeclRefExpr 0x563ee30de960 <col:65> 'int32_t':'int' lvalue ParmVar 0x563ee30c8160 'x' 'int32_t':'int'
|-CXXMethodDecl 0x563ee30c83f8 <line:585:5, line:591:5> line:585:14 used anno_u64 'uint64_t (int) const'
| |-ParmVarDecl 0x563ee30c8300 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x563ee30df0e8 <col:36, line:591:5>
|   |-ParenExpr 0x563ee30dee28 <line:586:2, col:182> 'void'
|   | `-ConditionalOperator 0x563ee30dedf8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x563ee30deb50 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x563ee30deb20 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x563ee30dea30 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x563ee30dea18 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x563ee30de9d8 <col:23> 'int' lvalue ParmVar 0x563ee30c8300 'i' 'int'
|   |   |   | `-IntegerLiteral 0x563ee30de9f8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x563ee30deb00 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x563ee30deae8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x563ee30dea50 <col:33> 'int' lvalue ParmVar 0x563ee30c8300 'i' 'int'
|   |   |     `-BinaryOperator 0x563ee30deac8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x563ee30deab0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x563ee30dea70 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x563ee30c4bc0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x563ee30dea90 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x563ee30debb0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x563ee30deb90 <col:60> 'int' 0
|   |   `-CallExpr 0x563ee30ded58 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x563ee30ded40 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x563ee30ded20 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x563ee2c314e0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x563ee30ded98 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563ee30dec20 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x563ee30dedb0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563ee30dec58 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x563ee30dedc8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x563ee30dec90 <col:143> 'int' 586
|   |     `-ImplicitCastExpr 0x563ee30dede0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x563ee30ded08 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x563ee30decf0 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x563ee30decb0 <col:162> 'const char [37]' lvalue "uint64_t Packet::anno_u64(int) const"
|   `-ReturnStmt 0x563ee30df0d8 <line:590:2, col:75>
|     `-ImplicitCastExpr 0x563ee30df0c0 <col:9, col:75> 'click_aliasable_uint64_t':'unsigned long' <LValueToRValue>
|       `-UnaryOperator 0x563ee30df0a8 <col:9, col:75> 'const click_aliasable_uint64_t':'const unsigned long' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x563ee30df078 <col:10, col:75> 'const click_aliasable_uint64_t *' reinterpret_cast<const click_aliasable_uint64_t *> <BitCast>
|           `-BinaryOperator 0x563ee30deff0 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x563ee30defc0 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x563ee30def70 <col:61, col:70> 'char const[48]' lvalue ->c 0x563ee30cf690
|             |   `-CXXMemberCallExpr 0x563ee30def50 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x563ee30def20 <col:61> '<bound member function type>' ->xanno 0x563ee30c47d8
|             |       `-CXXThisExpr 0x563ee30def10 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x563ee30defd8 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x563ee30defa0 <col:74> 'int' lvalue ParmVar 0x563ee30c8300 'i' 'int'
|-CXXMethodDecl 0x563ee30c8648 <line:600:5, line:606:5> line:600:10 used set_anno_u64 'void (int, uint64_t)'
| |-ParmVarDecl 0x563ee30c84b8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x563ee30c8530 <col:30, col:39> col:39 used x 'uint64_t':'unsigned long'
| `-CompoundStmt 0x563ee30df7c8 <col:42, line:606:5>
|   |-ParenExpr 0x563ee30df558 <line:601:2, col:182> 'void'
|   | `-ConditionalOperator 0x563ee30df528 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x563ee30df280 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x563ee30df250 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x563ee30df160 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x563ee30df148 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x563ee30df108 <col:23> 'int' lvalue ParmVar 0x563ee30c84b8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x563ee30df128 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x563ee30df230 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x563ee30df218 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x563ee30df180 <col:33> 'int' lvalue ParmVar 0x563ee30c84b8 'i' 'int'
|   |   |     `-BinaryOperator 0x563ee30df1f8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x563ee30df1e0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x563ee30df1a0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x563ee30c4bc0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x563ee30df1c0 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x563ee30df2e0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x563ee30df2c0 <col:60> 'int' 0
|   |   `-CallExpr 0x563ee30df488 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x563ee30df470 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x563ee30df450 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x563ee2c314e0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x563ee30df4c8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563ee30df350 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x563ee30df4e0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563ee30df388 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x563ee30df4f8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x563ee30df3c0 <col:143> 'int' 601
|   |     `-ImplicitCastExpr 0x563ee30df510 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x563ee30df438 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x563ee30df420 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x563ee30df3e0 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u64(int, uint64_t)"
|   `-BinaryOperator 0x563ee30df7a8 <line:605:2, col:66> 'click_aliasable_uint64_t':'unsigned long' lvalue '='
|     |-UnaryOperator 0x563ee30df758 <col:2, col:62> 'click_aliasable_uint64_t':'unsigned long' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x563ee30df728 <col:3, col:62> 'click_aliasable_uint64_t *' reinterpret_cast<click_aliasable_uint64_t *> <BitCast>
|     |   `-BinaryOperator 0x563ee30df6c8 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x563ee30df698 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x563ee30df648 <col:48, col:57> 'char [48]' lvalue ->c 0x563ee30cf690
|     |     |   `-CXXMemberCallExpr 0x563ee30df628 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x563ee30df5f8 <col:48> '<bound member function type>' ->xanno 0x563ee30c4978
|     |     |       `-CXXThisExpr 0x563ee30df5e8 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x563ee30df6b0 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x563ee30df678 <col:61> 'int' lvalue ParmVar 0x563ee30c84b8 'i' 'int'
|     `-ImplicitCastExpr 0x563ee30df790 <col:66> 'uint64_t':'unsigned long' <LValueToRValue>
|       `-DeclRefExpr 0x563ee30df770 <col:66> 'uint64_t':'unsigned long' lvalue ParmVar 0x563ee30c8530 'x' 'uint64_t':'unsigned long'
|-CXXMethodDecl 0x563ee30c87e0 <line:614:5, line:620:5> line:614:11 anno_ptr 'void *(int) const'
| |-ParmVarDecl 0x563ee30c8710 <col:20, col:24> col:24 used i 'int'
| `-CompoundStmt 0x563ee30e0038 <col:33, line:620:5>
|   |-ParenExpr 0x563ee30dfdb0 <line:615:2, col:220> 'void'
|   | `-ConditionalOperator 0x563ee30dfd80 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x563ee30df9d0 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x563ee30df9a0 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x563ee30df840 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x563ee30df828 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x563ee30df7e8 <col:23> 'int' lvalue ParmVar 0x563ee30c8710 'i' 'int'
|   |   |   | `-IntegerLiteral 0x563ee30df808 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x563ee30df980 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x563ee30df968 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x563ee30df860 <col:33> 'int' lvalue ParmVar 0x563ee30c8710 'i' 'int'
|   |   |     `-BinaryOperator 0x563ee30df948 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x563ee30df930 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x563ee30df880 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x563ee30c4bc0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x563ee30df908 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x563ee30df8f0 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x563ee30df8b8 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x563ee30dfa30 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x563ee30dfa10 <col:79> 'int' 0
|   |   `-CallExpr 0x563ee30dfce0 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x563ee30dfcc8 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x563ee30dfca8 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x563ee2c314e0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x563ee30dfd20 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563ee30dfb18 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x563ee30dfd38 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563ee30dfb60 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x563ee30dfd50 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x563ee30dfb98 <col:181> 'int' 615
|   |     `-ImplicitCastExpr 0x563ee30dfd68 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x563ee30dfc90 <col:186, col:200> 'const char [34]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x563ee30dfc78 <col:200> 'const char [34]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x563ee30dfc38 <col:200> 'const char [34]' lvalue "void *Packet::anno_ptr(int) const"
|   `-ReturnStmt 0x563ee30e0028 <line:619:2, col:81>
|     `-ImplicitCastExpr 0x563ee30e0010 <col:9, col:81> 'click_aliasable_void_pointer_t':'void *' <LValueToRValue>
|       `-UnaryOperator 0x563ee30dfff8 <col:9, col:81> 'const click_aliasable_void_pointer_t':'void *const' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x563ee30dffc8 <col:10, col:81> 'const click_aliasable_void_pointer_t *' reinterpret_cast<const click_aliasable_void_pointer_t *> <BitCast>
|           `-BinaryOperator 0x563ee30dff40 <col:67, col:80> 'const char *' '+'
|             |-ImplicitCastExpr 0x563ee30dff10 <col:67, col:76> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x563ee30dfec0 <col:67, col:76> 'char const[48]' lvalue ->c 0x563ee30cf690
|             |   `-CXXMemberCallExpr 0x563ee30dfea0 <col:67, col:73> 'const Packet::Anno *'
|             |     `-MemberExpr 0x563ee30dfe70 <col:67> '<bound member function type>' ->xanno 0x563ee30c47d8
|             |       `-CXXThisExpr 0x563ee30dfe60 <col:67> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x563ee30dff28 <col:80> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x563ee30dfef0 <col:80> 'int' lvalue ParmVar 0x563ee30c8710 'i' 'int'
|-CXXMethodDecl 0x563ee30c89f8 <line:629:5, line:635:5> line:629:10 set_anno_ptr 'void (int, const void *)'
| |-ParmVarDecl 0x563ee30c88a0 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x563ee30c8920 <col:30, col:42> col:42 used x 'const void *'
| `-CompoundStmt 0x563ee30e0860 <col:45, line:635:5>
|   |-ParenExpr 0x563ee30e05a8 <line:630:2, col:220> 'void'
|   | `-ConditionalOperator 0x563ee30e0578 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x563ee30e0240 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x563ee30e0210 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x563ee30e00b0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x563ee30e0098 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x563ee30e0058 <col:23> 'int' lvalue ParmVar 0x563ee30c88a0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x563ee30e0078 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x563ee30e01f0 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x563ee30e01d8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x563ee30e00d0 <col:33> 'int' lvalue ParmVar 0x563ee30c88a0 'i' 'int'
|   |   |     `-BinaryOperator 0x563ee30e01b8 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x563ee30e01a0 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x563ee30e00f0 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x563ee30c4bc0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x563ee30e0178 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x563ee30e0160 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x563ee30e0128 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x563ee30e02a0 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x563ee30e0280 <col:79> 'int' 0
|   |   `-CallExpr 0x563ee30e04d8 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x563ee30e04c0 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x563ee30e04a0 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x563ee2c314e0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x563ee30e0518 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563ee30e0310 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x563ee30e0530 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563ee30e0358 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x563ee30e0548 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x563ee30e0390 <col:181> 'int' 630
|   |     `-ImplicitCastExpr 0x563ee30e0560 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x563ee30e0488 <col:186, col:200> 'const char [45]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x563ee30e0470 <col:200> 'const char [45]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x563ee30e0428 <col:200> 'const char [45]' lvalue "void Packet::set_anno_ptr(int, const void *)"
|   `-BinaryOperator 0x563ee30e0840 <line:634:2, col:92> 'click_aliasable_void_pointer_t':'void *' lvalue '='
|     |-UnaryOperator 0x563ee30e07a8 <col:2, col:68> 'click_aliasable_void_pointer_t':'void *' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x563ee30e0778 <col:3, col:68> 'click_aliasable_void_pointer_t *' reinterpret_cast<click_aliasable_void_pointer_t *> <BitCast>
|     |   `-BinaryOperator 0x563ee30e0718 <col:54, col:67> 'char *' '+'
|     |     |-ImplicitCastExpr 0x563ee30e06e8 <col:54, col:63> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x563ee30e0698 <col:54, col:63> 'char [48]' lvalue ->c 0x563ee30cf690
|     |     |   `-CXXMemberCallExpr 0x563ee30e0678 <col:54, col:60> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x563ee30e0648 <col:54> '<bound member function type>' ->xanno 0x563ee30c4978
|     |     |       `-CXXThisExpr 0x563ee30e0638 <col:54> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x563ee30e0700 <col:67> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x563ee30e06c8 <col:67> 'int' lvalue ParmVar 0x563ee30c88a0 'i' 'int'
|     `-CXXConstCastExpr 0x563ee30e0810 <col:72, col:92> 'void *' const_cast<void *> <NoOp>
|       `-ImplicitCastExpr 0x563ee30e07f8 <col:91> 'const void *' <LValueToRValue> part_of_explicit_cast
|         `-DeclRefExpr 0x563ee30e07c0 <col:91> 'const void *' lvalue ParmVar 0x563ee30c8920 'x' 'const void *'
|-CXXMethodDecl 0x563ee30c8ac8 <line:638:5, line:640:5> line:638:20 data_packet 'Packet *()' inline
| `-CompoundStmt 0x563ee30e08e8 <col:34, line:640:5>
|   `-ReturnStmt 0x563ee30e08d8 <line:639:9, col:16>
|     `-ImplicitCastExpr 0x563ee30e08c0 <col:16> 'Packet *' <LValueToRValue>
|       `-MemberExpr 0x563ee30e0890 <col:16> 'Packet *' lvalue ->_data_packet 0x563ee30d0248
|         `-CXXThisExpr 0x563ee30e0880 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x563ee30c8c08 <line:643:5, col:50> col:17 used clear_annotations 'void (bool)' inline
| `-ParmVarDecl 0x563ee30c8b78 <col:35, col:46> col:40 all 'bool' cinit
|   `-CXXBoolLiteralExpr 0x563ee30d99a8 <col:46> 'bool' true
|-CXXMethodDecl 0x563ee30c8d88 <line:644:5, col:48> col:17 copy_annotations 'void (const Packet *)' inline
| `-ParmVarDecl 0x563ee30c8cc0 <col:34, col:47> col:48 'const Packet *'
|-EnumDecl 0x563ee30c8e30 <line:648:5, line:660:5> line:648:5
| |-DeprecatedAttr 0x563ee30c95e0 <line:660:22> "" ""
| |-EnumConstantDecl 0x563ee30c8f30 <line:649:2, col:21> col:2 DEFAULT_HEADROOM 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x563ee30c9650 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563ee30c8f10 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 28
| |     `-DeclRefExpr 0x563ee30c8ef0 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x563ee30be090 'default_headroom' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x563ee30c8fc0 <line:650:2, col:22> col:2 MIN_BUFFER_LENGTH 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x563ee30c9668 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563ee30c8fa0 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 64
| |     `-DeclRefExpr 0x563ee30c8f80 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x563ee30be120 'min_buffer_length' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x563ee30c9050 <line:651:2, col:21> col:2 referenced addr_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x563ee30c9680 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563ee30c9030 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x563ee30c9010 <col:21> 'int' 0
| |-EnumConstantDecl 0x563ee30c90e0 <line:652:2, col:19> col:2 referenced addr_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x563ee30c9698 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563ee30c90c0 <col:19> 'int' Int: 16
| |     `-IntegerLiteral 0x563ee30c90a0 <col:19> 'int' 16
| |-EnumConstantDecl 0x563ee30c9170 <line:653:2, col:21> col:2 referenced user_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x563ee30c96b0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563ee30c9150 <col:21> 'int' Int: 16
| |     `-IntegerLiteral 0x563ee30c9130 <col:21> 'int' 16
| |-EnumConstantDecl 0x563ee30c9200 <line:654:2, col:19> col:2 referenced user_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x563ee30c96c8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563ee30c91e0 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x563ee30c91c0 <col:19> 'int' 32
| |-EnumConstantDecl 0x563ee30c9290 <line:655:2, col:19> col:2 ADDR_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x563ee30c96e0 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563ee30c9270 <col:19> 'int' Int: 16
| |     `-DeclRefExpr 0x563ee30c9250 <col:19> 'int' EnumConstant 0x563ee30c90e0 'addr_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x563ee30c9320 <line:656:2, col:19> col:2 referenced USER_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x563ee30c96f8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563ee30c9300 <col:19> 'int' Int: 32
| |     `-DeclRefExpr 0x563ee30c92e0 <col:19> 'int' EnumConstant 0x563ee30c9200 'user_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x563ee30c93f0 <line:657:2, col:40> col:2 USER_ANNO_U16_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x563ee30c9710 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563ee30c93d0 <col:23, col:40> 'int' Int: 16
| |     `-BinaryOperator 0x563ee30c93b0 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x563ee30c9370 <col:23> 'int' EnumConstant 0x563ee30c9320 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x563ee30c9390 <col:40> 'int' 2
| |-EnumConstantDecl 0x563ee30c94c0 <line:658:2, col:40> col:2 USER_ANNO_U32_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x563ee30c9728 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563ee30c94a0 <col:23, col:40> 'int' Int: 8
| |     `-BinaryOperator 0x563ee30c9480 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x563ee30c9440 <col:23> 'int' EnumConstant 0x563ee30c9320 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x563ee30c9460 <col:40> 'int' 4
| `-EnumConstantDecl 0x563ee30c9590 <line:659:2, col:40> col:2 USER_ANNO_U64_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|   `-ImplicitCastExpr 0x563ee30c9740 <col:23, col:40> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x563ee30c9570 <col:23, col:40> 'int' Int: 4
|       `-BinaryOperator 0x563ee30c9550 <col:23, col:40> 'int' '/'
|         |-DeclRefExpr 0x563ee30c9510 <col:23> 'int' EnumConstant 0x563ee30c9320 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|         `-IntegerLiteral 0x563ee30c9530 <col:40> 'int' 8
|-CXXMethodDecl 0x563ee30c9780 <line:661:5, col:79> col:33 buffer_data 'const unsigned char *() const' inline
| `-DeprecatedAttr 0x563ee30c9820 <col:68> "" ""
|-CXXMethodDecl 0x563ee30c98b8 <line:662:5, col:56> col:18 addr_anno 'void *()' inline
| `-DeprecatedAttr 0x563ee30c9958 <col:45> "" ""
|-CXXMethodDecl 0x563ee30c99f0 <line:663:5, col:68> col:24 addr_anno 'const void *() const' inline
| `-DeprecatedAttr 0x563ee30c9a90 <col:57> "" ""
|-CXXMethodDecl 0x563ee30c9b28 <line:664:5, col:56> col:18 user_anno 'void *()' inline
| `-DeprecatedAttr 0x563ee30c9bc8 <col:45> "" ""
|-CXXMethodDecl 0x563ee30c9c60 <line:665:5, col:68> col:24 user_anno 'const void *() const' inline
| `-DeprecatedAttr 0x563ee30c9d00 <col:57> "" ""
|-CXXMethodDecl 0x563ee30c9d90 <line:666:5, col:62> col:21 user_anno_u8 'uint8_t *()' inline
| `-DeprecatedAttr 0x563ee30c9e30 <col:51> "" ""
|-CXXMethodDecl 0x563ee30c9ec0 <line:667:5, col:74> col:27 user_anno_u8 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x563ee30c9f60 <col:63> "" ""
|-CXXMethodDecl 0x563ee30c9ff0 <line:668:5, col:64> col:22 user_anno_u32 'uint32_t *()' inline
| `-DeprecatedAttr 0x563ee30ca090 <col:53> "" ""
|-CXXMethodDecl 0x563ee30ca120 <line:669:5, col:76> col:28 user_anno_u32 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x563ee30ca1c0 <col:65> "" ""
|-CXXMethodDecl 0x563ee30ca2d8 <line:670:5, col:72> col:20 user_anno_u8 'uint8_t (int) const' inline
| |-ParmVarDecl 0x563ee30ca248 <col:33, col:37> col:37 i 'int'
| `-DeprecatedAttr 0x563ee30ca380 <col:61> "" ""
|-CXXMethodDecl 0x563ee30ca518 <line:671:5, col:78> col:17 set_user_anno_u8 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x563ee30ca408 <col:34, col:38> col:38 i 'int'
| |-ParmVarDecl 0x563ee30ca480 <col:41, col:49> col:49 v 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x563ee30ca5c8 <col:67> "" ""
|-CXXMethodDecl 0x563ee30ca6e0 <line:672:5, col:74> col:21 user_anno_u16 'uint16_t (int) const' inline
| |-ParmVarDecl 0x563ee30ca650 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x563ee30ca788 <col:63> "" ""
|-CXXMethodDecl 0x563ee30ca920 <line:673:5, col:80> col:17 set_user_anno_u16 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x563ee30ca810 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x563ee30ca888 <col:42, col:51> col:51 v 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x563ee30ca9d0 <col:69> "" ""
|-CXXMethodDecl 0x563ee30caae8 <line:674:5, col:74> col:21 user_anno_u32 'uint32_t (int) const' inline
| |-ParmVarDecl 0x563ee30caa58 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x563ee30cab90 <col:63> "" ""
|-CXXMethodDecl 0x563ee30cd268 <line:675:5, col:80> col:17 set_user_anno_u32 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x563ee30cd158 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x563ee30cd1d0 <col:42, col:51> col:51 v 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x563ee30cd318 <col:69> "" ""
|-CXXMethodDecl 0x563ee30cd430 <line:676:5, col:73> col:20 user_anno_s32 'int32_t (int) const' inline
| |-ParmVarDecl 0x563ee30cd3a0 <col:34, col:38> col:38 i 'int'
| `-DeprecatedAttr 0x563ee30cd4d8 <col:62> "" ""
|-CXXMethodDecl 0x563ee30cd670 <line:677:5, col:79> col:17 set_user_anno_s32 'void (int, int32_t)' inline
| |-ParmVarDecl 0x563ee30cd560 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x563ee30cd5d8 <col:42, col:50> col:50 v 'int32_t':'int'
| `-DeprecatedAttr 0x563ee30cd720 <col:68> "" ""
|-CXXMethodDecl 0x563ee30cd838 <line:679:5, col:74> col:21 user_anno_u64 'uint64_t (int) const' inline
| |-ParmVarDecl 0x563ee30cd7a8 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x563ee30cd8e0 <col:63> "" ""
|-CXXMethodDecl 0x563ee30cda78 <line:680:5, col:80> col:17 set_user_anno_u64 'void (int, uint64_t)' inline
| |-ParmVarDecl 0x563ee30cd968 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x563ee30cd9e0 <col:42, col:51> col:51 v 'uint64_t':'unsigned long'
| `-DeprecatedAttr 0x563ee30cdb28 <col:69> "" ""
|-CXXMethodDecl 0x563ee30cdbb8 <line:682:5, col:75> col:27 all_user_anno 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x563ee30cdc58 <col:64> "" ""
|-CXXMethodDecl 0x563ee30cdce8 <line:683:5, col:63> col:21 all_user_anno 'uint8_t *()' inline
| `-DeprecatedAttr 0x563ee30cdd88 <col:52> "" ""
|-CXXMethodDecl 0x563ee30cde18 <line:684:5, col:78> col:28 all_user_anno_u 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x563ee30cdeb8 <col:67> "" ""
|-CXXMethodDecl 0x563ee30cdf48 <line:685:5, col:66> col:22 all_user_anno_u 'uint32_t *()' inline
| `-DeprecatedAttr 0x563ee30cdfe8 <col:55> "" ""
|-CXXMethodDecl 0x563ee30ce100 <line:686:5, col:69> col:20 user_anno_c 'uint8_t (int) const' inline
| |-ParmVarDecl 0x563ee30ce070 <col:32> col:35 'int'
| `-DeprecatedAttr 0x563ee30ce1a8 <col:58> "" ""
|-CXXMethodDecl 0x563ee30ce340 <line:687:5, col:73> col:17 set_user_anno_c 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x563ee30ce230 <col:33> col:36 'int'
| |-ParmVarDecl 0x563ee30ce2a8 <col:38> col:45 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x563ee30ce3f0 <col:62> "" ""
|-CXXMethodDecl 0x563ee30ce508 <line:688:5, col:69> col:20 user_anno_s 'int16_t (int) const' inline
| |-ParmVarDecl 0x563ee30ce478 <col:32> col:35 'int'
| `-DeprecatedAttr 0x563ee30ce5b0 <col:58> "" ""
|-CXXMethodDecl 0x563ee30ce748 <line:689:5, col:73> col:17 set_user_anno_s 'void (int, int16_t)' inline
| |-ParmVarDecl 0x563ee30ce638 <col:33> col:36 'int'
| |-ParmVarDecl 0x563ee30ce6b0 <col:38> col:45 'int16_t':'short'
| `-DeprecatedAttr 0x563ee30ce7f8 <col:62> "" ""
|-CXXMethodDecl 0x563ee30ce910 <line:690:5, col:71> col:21 user_anno_us 'uint16_t (int) const' inline
| |-ParmVarDecl 0x563ee30ce880 <col:34> col:37 'int'
| `-DeprecatedAttr 0x563ee30ce9b8 <col:60> "" ""
|-CXXMethodDecl 0x563ee30ceb50 <line:691:5, col:75> col:17 set_user_anno_us 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x563ee30cea40 <col:34> col:37 'int'
| |-ParmVarDecl 0x563ee30ceab8 <col:39> col:47 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x563ee30cec00 <col:64> "" ""
|-CXXMethodDecl 0x563ee30ced18 <line:692:5, col:69> col:20 user_anno_i 'int32_t (int) const' inline
| |-ParmVarDecl 0x563ee30cec88 <col:32> col:35 'int'
| `-DeprecatedAttr 0x563ee30cedc0 <col:58> "" ""
|-CXXMethodDecl 0x563ee30cef58 <line:693:5, col:73> col:17 set_user_anno_i 'void (int, int32_t)' inline
| |-ParmVarDecl 0x563ee30cee48 <col:33> col:36 'int'
| |-ParmVarDecl 0x563ee30ceec0 <col:38> col:45 'int32_t':'int'
| `-DeprecatedAttr 0x563ee30cf008 <col:62> "" ""
|-CXXMethodDecl 0x563ee30cf120 <line:694:5, col:70> col:21 user_anno_u 'uint32_t (int) const' inline
| |-ParmVarDecl 0x563ee30cf090 <col:33> col:36 'int'
| `-DeprecatedAttr 0x563ee30cf1c8 <col:59> "" ""
|-CXXMethodDecl 0x563ee30cf360 <line:695:5, col:74> col:17 set_user_anno_u 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x563ee30cf250 <col:33> col:36 'int'
| |-ParmVarDecl 0x563ee30cf2c8 <col:38> col:46 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x563ee30cf410 <col:63> "" ""
|-AccessSpecDecl 0x563ee30cf480 <line:698:3, col:10> col:3 private
|-CXXRecordDecl 0x563ee30cf4a8 prev 0x563ee30c46b0 <line:702:5, line:711:5> line:702:11 referenced union Anno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x563ee30cf5a0 <col:5, col:11> col:11 implicit union Anno
| |-FieldDecl 0x563ee30cf690 <line:703:2, col:18> col:7 referenced c 'char [48]'
| |-FieldDecl 0x563ee30cf7b8 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
| |-FieldDecl 0x563ee30cf938 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
| |-FieldDecl 0x563ee30cfab8 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
| |-FieldDecl 0x563ee30cfc38 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
| |-CXXConstructorDecl 0x563ee30e0a68 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x563ee30e12d8 <col:11>
| |-CXXDestructorDecl 0x563ee30e0b40 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
| |-CXXConstructorDecl 0x563ee30e0c78 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x563ee30e0c78
| | `-ParmVarDecl 0x563ee30e0d88 <col:11> col:11 'const Packet::Anno &'
| |-CXXConstructorDecl 0x563ee30e0e28 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x563ee30e0e28
| | `-ParmVarDecl 0x563ee30e0f38 <col:11> col:11 'Packet::Anno &&'
| |-CXXMethodDecl 0x563ee30e3cf8 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| | |-ParmVarDecl 0x563ee30e3e08 <col:11> col:11 'const Packet::Anno &'
| | `-CompoundStmt 0x563ee30e4088 <col:11>
| |   `-ReturnStmt 0x563ee30e4078 <col:11>
| |     `-UnaryOperator 0x563ee30e4060 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x563ee30e4050 <col:11> 'Packet::Anno *' this
| `-CXXMethodDecl 0x563ee30e3e78 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x563ee30e3e78
|   `-ParmVarDecl 0x563ee30e3f88 <col:11> col:11 'Packet::Anno &&'
|-CXXRecordDecl 0x563ee30cfca0 <line:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x563ee30cfdb8 <col:5, col:12> col:12 implicit struct AllAnno
| |-FieldDecl 0x563ee30cfe58 <line:717:2, col:7> col:7 cb 'Packet::Anno'
| |-FieldDecl 0x563ee30cfec0 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
| |-FieldDecl 0x563ee30cff28 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
| |-FieldDecl 0x563ee30cff90 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
| |-FieldDecl 0x563ee30cfff0 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
| |-FieldDecl 0x563ee30d00b0 <line:722:2, col:34> col:7 timestamp 'char [8]'
| |-FieldDecl 0x563ee30d0110 <line:723:2, col:10> col:10 referenced next 'Packet *'
| |-FieldDecl 0x563ee30d0170 <line:724:2, col:10> col:10 referenced prev 'Packet *'
| |-CXXConstructorDecl 0x563ee30e0978 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| | |-CXXCtorInitializer Field 0x563ee30cfe58 'cb' 'Packet::Anno'
| | | `-CXXConstructExpr 0x563ee30e12e8 <col:12> 'Packet::Anno' 'void () noexcept'
| | `-CompoundStmt 0x563ee30e1340 <col:12>
| |-CXXConstructorDecl 0x563ee30e0fa8 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x563ee30e0fa8
| | `-ParmVarDecl 0x563ee30e10b8 <col:12> col:12 'const Packet::AllAnno &'
| |-CXXConstructorDecl 0x563ee30e1158 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x563ee30e1158
| | `-ParmVarDecl 0x563ee30e1268 <col:12> col:12 'Packet::AllAnno &&'
| `-CXXDestructorDecl 0x563ee30e33e0 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial
|-FieldDecl 0x563ee30d01e8 <line:731:5, col:21> col:21 referenced _use_count 'atomic_uint32_t'
|-FieldDecl 0x563ee30d0248 <line:732:5, col:13> col:13 referenced _data_packet 'Packet *'
|-FieldDecl 0x563ee30d02b0 <line:734:5, col:20> col:20 referenced _head 'unsigned char *'
|-FieldDecl 0x563ee30d0318 <line:735:5, col:20> col:20 referenced _data 'unsigned char *'
|-FieldDecl 0x563ee30d0380 <line:736:5, col:20> col:20 referenced _tail 'unsigned char *'
|-FieldDecl 0x563ee30d03e8 <line:737:5, col:20> col:20 referenced _end 'unsigned char *'
|-FieldDecl 0x563ee30d0448 <line:741:5, col:13> col:13 referenced _aa 'Packet::AllAnno'
|-FieldDecl 0x563ee30d04a8 <line:746:5, col:28> col:28 referenced _destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-FieldDecl 0x563ee30d0510 <line:747:5, col:11> col:11 referenced _destructor_argument 'void *'
|-CXXConstructorDecl 0x563ee30d0598 <line:751:5, line:755:5> line:751:12 used Packet 'void ()' inline
| |-CXXCtorInitializer Field 0x563ee30d01e8 '_use_count' 'atomic_uint32_t'
| | `-CXXConstructExpr 0x563ee30e0910 <col:12> 'atomic_uint32_t' 'void () noexcept'
| |-CXXCtorInitializer Field 0x563ee30d0448 '_aa' 'Packet::AllAnno'
| | `-CXXConstructExpr 0x563ee30e1350 <col:12> 'Packet::AllAnno' 'void () noexcept'
| `-CompoundStmt 0x563ee30e13b0 <col:21, line:755:5>
|-CXXConstructorDecl 0x563ee30d0738 <line:756:5, col:27> col:5 Packet 'void (const Packet &)'
| `-ParmVarDecl 0x563ee30d0678 <col:12, col:26> col:26 x 'const Packet &'
|-CXXDestructorDecl 0x563ee30d0830 <line:757:5, col:13> col:5 used ~Packet 'void () noexcept'
|-CXXMethodDecl 0x563ee30d0a18 <line:758:5, col:38> col:13 operator= 'Packet &(const Packet &)'
| `-ParmVarDecl 0x563ee30d0920 <col:23, col:37> col:37 x 'const Packet &'
|-CXXMethodDecl 0x563ee30d0ce8 <line:761:5, col:74> col:10 alloc_data 'bool (uint32_t, uint32_t, uint32_t)'
| |-ParmVarDecl 0x563ee30d0ad0 <col:21, col:30> col:30 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x563ee30d0b48 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x563ee30d0bc0 <col:57, col:66> col:66 tailroom 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x563ee30d0f08 <line:768:5, col:95> col:17 shift_header_annotations 'void (const unsigned char *, int32_t)' inline
| |-ParmVarDecl 0x563ee30d0db8 <col:42, col:63> col:63 old_head 'const unsigned char *'
| `-ParmVarDecl 0x563ee30d0e30 <col:73, col:81> col:81 extra_headroom 'int32_t':'int'
|-CXXMethodDecl 0x563ee30d94e8 <line:769:5, col:109> col:21 expensive_uniqueify 'WritablePacket *(int32_t, int32_t, bool)'
| |-ParmVarDecl 0x563ee30d0fc8 <col:41, col:49> col:49 extra_headroom 'int32_t':'int'
| |-ParmVarDecl 0x563ee30d1040 <col:65, col:73> col:73 extra_tailroom 'int32_t':'int'
| `-ParmVarDecl 0x563ee30d10b8 <col:89, col:94> col:94 free_on_failure 'bool'
|-CXXMethodDecl 0x563ee30d9640 <line:770:5, col:51> col:21 used expensive_push 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x563ee30d95b0 <col:36, col:45> col:45 nbytes 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x563ee30d9788 <line:771:5, col:50> col:21 used expensive_put 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x563ee30d96f8 <col:35, col:44> col:44 nbytes 'uint32_t':'unsigned int'
`-FriendDecl 0x563ee30d9880 <line:773:5, col:18> col:12 'class WritablePacket':'WritablePacket'

Layout: <CGRecordLayout
  LLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  NonVirtualBaseLLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563ee3078f60 <../dummy_inc/click/task.hh:31:1, line:47:1> line:31:8 referenced struct TaskLink definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x563ee3079078 <col:1, col:8> col:8 implicit referenced struct TaskLink
|-FieldDecl 0x563ee3079148 <line:33:5, col:15> col:15 referenced _prev 'TaskLink *'
|-FieldDecl 0x563ee30791a8 <line:34:5, col:15> col:15 referenced _next 'TaskLink *'
|-FieldDecl 0x563ee3079210 <line:37:5, col:14> col:14 referenced _pass 'unsigned int'
|-CXXConstructorDecl 0x563ee3079298 <line:39:5, line:46:5> line:39:5 used TaskLink 'void ()'
| `-CompoundStmt 0x563ee3079500 <col:16, line:46:5>
|   |-BinaryOperator 0x563ee3079448 <line:41:9, col:25> 'TaskLink *' lvalue '='
|   | |-MemberExpr 0x563ee3079368 <col:9> 'TaskLink *' lvalue ->_prev 0x563ee3079148
|   | | `-CXXThisExpr 0x563ee3079358 <col:9> 'TaskLink *' implicit this
|   | `-ImplicitCastExpr 0x563ee3079430 <col:17, col:25> 'TaskLink *' <LValueToRValue>
|   |   `-BinaryOperator 0x563ee3079410 <col:17, col:25> 'TaskLink *' lvalue '='
|   |     |-MemberExpr 0x563ee30793a8 <col:17> 'TaskLink *' lvalue ->_next 0x563ee30791a8
|   |     | `-CXXThisExpr 0x563ee3079398 <col:17> 'TaskLink *' implicit this
|   |     `-ImplicitCastExpr 0x563ee30793f8 <col:25> 'TaskLink *' <NullToPointer>
|   |       `-IntegerLiteral 0x563ee30793d8 <col:25> 'int' 0
|   `-BinaryOperator 0x563ee30794e0 <line:44:9, col:17> 'unsigned int' lvalue '='
|     |-MemberExpr 0x563ee3079478 <col:9> 'unsigned int' lvalue ->_pass 0x563ee3079210
|     | `-CXXThisExpr 0x563ee3079468 <col:9> 'TaskLink *' implicit this
|     `-ImplicitCastExpr 0x563ee30794c8 <col:17> 'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x563ee30794a8 <col:17> 'int' 0
|-CXXConstructorDecl 0x563ee31dba68 <line:31:8> col:8 implicit constexpr TaskLink 'void (const TaskLink &)' inline default trivial noexcept-unevaluated 0x563ee31dba68
| `-ParmVarDecl 0x563ee31dbb78 <col:8> col:8 'const TaskLink &'
|-CXXConstructorDecl 0x563ee31dbc18 <col:8> col:8 implicit constexpr TaskLink 'void (TaskLink &&)' inline default trivial noexcept-unevaluated 0x563ee31dbc18
| `-ParmVarDecl 0x563ee31dbd28 <col:8> col:8 'TaskLink &&'
|-CXXDestructorDecl 0x563ee31dbf18 <col:8> col:8 implicit ~TaskLink 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x563ee31dc718 <col:8> col:8 implicit operator= 'TaskLink &(const TaskLink &)' inline default trivial noexcept-unevaluated 0x563ee31dc718
| `-ParmVarDecl 0x563ee31dc828 <col:8> col:8 'const TaskLink &'
`-CXXMethodDecl 0x563ee31dc898 <col:8> col:8 implicit operator= 'TaskLink &(TaskLink &&)' inline default trivial noexcept-unevaluated 0x563ee31dc898
  `-ParmVarDecl 0x563ee31dc9a8 <col:8> col:8 'TaskLink &&'

Layout: <CGRecordLayout
  LLVMType:%struct.TaskLink = type <{ %struct.TaskLink*, %struct.TaskLink*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%struct.TaskLink.base = type <{ %struct.TaskLink*, %struct.TaskLink*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563ee307bad8 <../dummy_inc/click/task.hh:315:9, line:319:9> line:315:9 struct definition
|-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x563ee307bc08 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
|-FieldDecl 0x563ee307bc68 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
|-FieldDecl 0x563ee307bcc8 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
|-CXXConstructorDecl 0x563ee31e2c48 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
|-CXXDestructorDecl 0x563ee31e2d20 <col:9> col:9 implicit ~ 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x563ee31e2fd8 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x563ee31e2fd8
| `-ParmVarDecl 0x563ee31e30e8 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
`-CXXConstructorDecl 0x563ee31e3188 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x563ee31e3188
  `-ParmVarDecl 0x563ee31e3298 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'

Layout: <CGRecordLayout
  LLVMType:%struct.anon = type { i16, i8, i8 }
  NonVirtualBaseLLVMType:%struct.anon = type { i16, i8, i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563ee307b930 <../dummy_inc/click/task.hh:314:5, line:321:5> line:314:11 union Status definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x563ee307ba48 <col:5, col:11> col:11 implicit union Status
|-CXXRecordDecl 0x563ee307bad8 <line:315:9, line:319:9> line:315:9 struct definition
| |-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x563ee307bc08 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
| |-FieldDecl 0x563ee307bc68 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
| |-FieldDecl 0x563ee307bcc8 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
| |-CXXConstructorDecl 0x563ee31e2c48 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
| |-CXXDestructorDecl 0x563ee31e2d20 <col:9> col:9 implicit ~ 'void () noexcept' inline default trivial
| |-CXXConstructorDecl 0x563ee31e2fd8 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x563ee31e2fd8
| | `-ParmVarDecl 0x563ee31e30e8 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
| `-CXXConstructorDecl 0x563ee31e3188 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x563ee31e3188
|   `-ParmVarDecl 0x563ee31e3298 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'
|-FieldDecl 0x563ee307bd88 <col:9> col:9 implicit referenced 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
|-IndirectFieldDecl 0x563ee307bde8 <line:316:21> col:21 implicit home_thread_id 'int16_t':'short'
| |-Field 0x563ee307bd88 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x563ee307bc08 'home_thread_id' 'int16_t':'short'
|-IndirectFieldDecl 0x563ee307be40 <line:317:21> col:21 implicit is_scheduled 'uint8_t':'unsigned char'
| |-Field 0x563ee307bd88 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x563ee307bc68 'is_scheduled' 'uint8_t':'unsigned char'
|-IndirectFieldDecl 0x563ee307be98 <line:318:21> col:21 implicit is_strong_unscheduled 'uint8_t':'unsigned char'
| |-Field 0x563ee307bd88 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x563ee307bcc8 'is_strong_unscheduled' 'uint8_t':'unsigned char'
|-FieldDecl 0x563ee307bef0 <line:320:9, col:18> col:18 status 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x563ee31e2b58 <line:314:11> col:11 implicit used Status 'void () noexcept' inline default trivial
| `-CompoundStmt 0x563ee31e34b8 <col:11>
|-CXXConstructorDecl 0x563ee31e2e28 <col:11> col:11 implicit constexpr Status 'void (const Task::Status &)' inline default trivial noexcept-unevaluated 0x563ee31e2e28
| `-ParmVarDecl 0x563ee31e2f38 <col:11> col:11 'const Task::Status &'
|-CXXConstructorDecl 0x563ee31e3338 <col:11> col:11 implicit constexpr Status 'void (Task::Status &&)' inline default trivial noexcept-unevaluated 0x563ee31e3338
| `-ParmVarDecl 0x563ee31e3448 <col:11> col:11 'Task::Status &&'
`-CXXDestructorDecl 0x563ee3311238 <col:11> col:11 implicit ~Status 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"union.Task::Status" = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class Vector<struct TimerSet::heap_element>
         0 |   class vector_memory<class sized_array_memory<16> > vm_
         0 |     vector_memory<class sized_array_memory<16> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class Timer *>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class SimpleSpinlock (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class TimerSet
         0 |   class Timestamp _timer_expiry
         0 |     union Timestamp::rep_t _t
         0 |       int64_t x
         8 |   unsigned int _max_timer_stride
        12 |   unsigned int _timer_stride
        16 |   unsigned int _timer_count
        24 |   class Vector<struct TimerSet::heap_element> _timer_heap
        24 |     class vector_memory<class sized_array_memory<16> > vm_
        24 |       vector_memory<class sized_array_memory<16> >::type * l_
        32 |       vector_memory::size_type n_
        36 |       vector_memory::size_type capacity_
        40 |   class Vector<class Timer *> _timer_runchunk
        40 |     class vector_memory<class sized_array_memory<8> > vm_
        40 |       vector_memory<class sized_array_memory<8> >::type * l_
        48 |       vector_memory::size_type n_
        52 |       vector_memory::size_type capacity_
        56 |   class SimpleSpinlock _timer_lock (empty)
        64 |   class Timestamp _timer_check
        64 |     union Timestamp::rep_t _t
        64 |       int64_t x
        72 |   uint32_t _timer_check_reports
           | [sizeof=80, dsize=76, align=8,
           |  nvsize=76, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct pollfd>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<24> >
         0 |   vector_memory<class sized_array_memory<24> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct SelectSet::SelectorInfo>
         0 |   class vector_memory<class sized_array_memory<24> > vm_
         0 |     vector_memory<class sized_array_memory<24> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class SelectSet
         0 |   int [2] _wake_pipe
         8 |   volatile _Bool _wake_pipe_pending
        16 |   class Vector<struct pollfd> _pollfds
        16 |     class vector_memory<class sized_array_memory<8> > vm_
        16 |       vector_memory<class sized_array_memory<8> >::type * l_
        24 |       vector_memory::size_type n_
        28 |       vector_memory::size_type capacity_
        32 |   class Vector<struct SelectSet::SelectorInfo> _selinfo
        32 |     class vector_memory<class sized_array_memory<24> > vm_
        32 |       vector_memory<class sized_array_memory<24> >::type * l_
        40 |       vector_memory::size_type n_
        44 |       vector_memory::size_type capacity_
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | class Spinlock (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class SpinlockIRQ (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class RouterThread
         0 |   struct TaskLink _task_link
         0 |     struct TaskLink * _prev
         8 |     struct TaskLink * _next
        16 |     unsigned int _pass
        24 |   volatile _Bool _stop_flag
        32 |   class TimerSet _timers
        32 |     class Timestamp _timer_expiry
        32 |       union Timestamp::rep_t _t
        32 |         int64_t x
        40 |     unsigned int _max_timer_stride
        44 |     unsigned int _timer_stride
        48 |     unsigned int _timer_count
        56 |     class Vector<struct TimerSet::heap_element> _timer_heap
        56 |       class vector_memory<class sized_array_memory<16> > vm_
        56 |         vector_memory<class sized_array_memory<16> >::type * l_
        64 |         vector_memory::size_type n_
        68 |         vector_memory::size_type capacity_
        72 |     class Vector<class Timer *> _timer_runchunk
        72 |       class vector_memory<class sized_array_memory<8> > vm_
        72 |         vector_memory<class sized_array_memory<8> >::type * l_
        80 |         vector_memory::size_type n_
        84 |         vector_memory::size_type capacity_
        88 |     class SimpleSpinlock _timer_lock (empty)
        96 |     class Timestamp _timer_check
        96 |       union Timestamp::rep_t _t
        96 |         int64_t x
       104 |     uint32_t _timer_check_reports
       112 |   class SelectSet _selects
       112 |     int [2] _wake_pipe
       120 |     volatile _Bool _wake_pipe_pending
       128 |     class Vector<struct pollfd> _pollfds
       128 |       class vector_memory<class sized_array_memory<8> > vm_
       128 |         vector_memory<class sized_array_memory<8> >::type * l_
       136 |         vector_memory::size_type n_
       140 |         vector_memory::size_type capacity_
       144 |     class Vector<struct SelectSet::SelectorInfo> _selinfo
       144 |       class vector_memory<class sized_array_memory<24> > vm_
       144 |         vector_memory<class sized_array_memory<24> >::type * l_
       152 |         vector_memory::size_type n_
       156 |         vector_memory::size_type capacity_
       192 |   class Spinlock _task_lock (empty)
       196 |   class atomic_uint32_t _task_blocker
       196 |     uint32_t _val
       200 |   class atomic_uint32_t _task_blocker_waiting
       200 |     uint32_t _val
       208 |   union Task::Pending _pending_head
       208 |     class Task * t
       208 |     uintptr_t x
       216 |   class Task::Pending * _pending_tail
       224 |   class SpinlockIRQ _pending_lock (empty)
       256 |   class Master * _master
       264 |   int _id
       268 |   _Bool _driver_entered
       272 |   unsigned int _tasks_per_iter
       276 |   unsigned int _iters_per_os
           | [sizeof=320, dsize=280, align=64,
           |  nvsize=280, nvalign=64]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563ee308f740 prev 0x563ee3086580 <../dummy_inc/click/timestamp.hh:539:5, line:566:5> line:539:11 referenced union rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x563ee308f838 <col:5, col:11> col:11 implicit union rep_t
|-FieldDecl 0x563ee308f8d8 <line:541:9, col:17> col:17 referenced x 'int64_t':'long'
|-CXXConstructorDecl 0x563ee30966a0 <line:539:11> col:11 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x563ee3096a88 <col:11>
|-CXXConstructorDecl 0x563ee3096780 <col:11> col:11 implicit used constexpr rep_t 'void (const Timestamp::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x563ee3096868 <col:11> col:11 'const Timestamp::rep_t &'
| `-CompoundStmt 0x563ee30971d0 <col:11>
|-CXXConstructorDecl 0x563ee3096908 <col:11> col:11 implicit used constexpr rep_t 'void (Timestamp::rep_t &&) noexcept' inline default trivial
| |-ParmVarDecl 0x563ee3096a18 <col:11> col:11 'Timestamp::rep_t &&'
| `-CompoundStmt 0x563ee3098a28 <col:11>
|-CXXDestructorDecl 0x563ee3097d38 <col:11> col:11 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x563ee2d9e8e8 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(const Timestamp::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x563ee2d9e9f8 <col:11> col:11 'const Timestamp::rep_t &'
| `-CompoundStmt 0x563ee2d9f2c0 <col:11>
|   `-ReturnStmt 0x563ee2d9f2b0 <col:11>
|     `-UnaryOperator 0x563ee2d9f298 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x563ee2d9f288 <col:11> 'Timestamp::rep_t *' this
`-CXXMethodDecl 0x563ee2d9ea68 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(Timestamp::rep_t &&) noexcept' inline default trivial
  |-ParmVarDecl 0x563ee2d9eb78 <col:11> col:11 'Timestamp::rep_t &&'
  `-CompoundStmt 0x563ee3166830 <col:11>
    `-ReturnStmt 0x563ee3166820 <col:11>
      `-UnaryOperator 0x563ee3166808 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
        `-CXXThisExpr 0x563ee31667f8 <col:11> 'Timestamp::rep_t *' this

Layout: <CGRecordLayout
  LLVMType:%"union.Timestamp::rep_t" = type { i64 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563ee3085738 prev 0x563ee3085448 <../dummy_inc/click/timestamp.hh:122:1, line:723:1> line:122:7 referenced class Timestamp definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x563ee3085830 <col:1, col:7> col:7 implicit referenced class Timestamp
|-AccessSpecDecl 0x563ee30858c0 <col:19, col:25> col:19 public
|-TypedefDecl 0x563ee30858f8 <line:125:5, col:21> col:21 referenced seconds_type 'int32_t':'int'
| `-TypedefType 0x563ee2ceaac0 'int32_t' sugar
|   |-Typedef 0x563ee2bf9268 'int32_t'
|   `-TypedefType 0x563ee2bd23b0 '__int32_t' sugar
|     |-Typedef 0x563ee2bd1fc8 '__int32_t'
|     `-BuiltinType 0x563ee2b90370 'int'
|-TypedefDecl 0x563ee3085960 <line:128:5, col:21> col:21 referenced value_type 'int64_t':'long'
| `-TypedefType 0x563ee2ceac80 'int64_t' sugar
|   |-Typedef 0x563ee2bf92d0 'int64_t'
|   `-TypedefType 0x563ee2bd24d0 '__int64_t' sugar
|     |-Typedef 0x563ee2bd20a8 '__int64_t'
|     `-BuiltinType 0x563ee2b90390 'long'
|-EnumDecl 0x563ee30859b8 <line:133:5, line:140:5> line:133:5
| |-EnumConstantDecl 0x563ee3085b30 <line:134:9, col:38> col:9 max_seconds 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:133:5)'
| | `-ConstantExpr 0x563ee3085b10 <col:23, col:38> 'Timestamp::seconds_type':'int' Int: 2147483647
| |   `-CStyleCastExpr 0x563ee3085ae8 <col:23, col:38> 'Timestamp::seconds_type':'int' <NoOp>
| |     `-ImplicitCastExpr 0x563ee3085ad0 <col:38> 'Timestamp::seconds_type':'int' <IntegralCast> part_of_explicit_cast
| |       `-IntegerLiteral 0x563ee3085aa0 <col:38> 'unsigned int' 2147483647
| `-EnumConstantDecl 0x563ee3085c28 <line:137:9, col:39> col:9 min_seconds 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:133:5)'
|   `-ConstantExpr 0x563ee3085c08 <col:23, col:39> 'Timestamp::seconds_type':'int' Int: -2147483648
|     `-CStyleCastExpr 0x563ee3085be0 <col:23, col:39> 'Timestamp::seconds_type':'int' <NoOp>
|       `-ImplicitCastExpr 0x563ee3085bc8 <col:38, col:39> 'Timestamp::seconds_type':'int' <IntegralCast> part_of_explicit_cast
|         `-UnaryOperator 0x563ee3085ba0 <col:38, col:39> 'unsigned int' prefix '-'
|           `-IntegerLiteral 0x563ee3085b80 <col:39> 'unsigned int' 2147483648
|-EnumDecl 0x563ee3085c78 <line:142:5, line:162:5> line:142:5
| |-EnumConstantDecl 0x563ee3085d80 <line:143:9, col:24> col:9 referenced nsec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x563ee30862d0 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563ee3085d60 <col:24> 'int' Int: 1000000000
| |     `-IntegerLiteral 0x563ee3085d40 <col:24> 'int' 1000000000
| |-EnumConstantDecl 0x563ee3085e10 <line:144:9, col:25> col:9 nsec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x563ee30862e8 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563ee3085df0 <col:25> 'int' Int: 1000000
| |     `-IntegerLiteral 0x563ee3085dd0 <col:25> 'int' 1000000
| |-EnumConstantDecl 0x563ee3085ea0 <line:145:9, col:25> col:9 nsec_per_usec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x563ee3086300 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563ee3085e80 <col:25> 'int' Int: 1000
| |     `-IntegerLiteral 0x563ee3085e60 <col:25> 'int' 1000
| |-EnumConstantDecl 0x563ee3085f30 <line:146:9, col:24> col:9 referenced usec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x563ee3086318 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563ee3085f10 <col:24> 'int' Int: 1000000
| |     `-IntegerLiteral 0x563ee3085ef0 <col:24> 'int' 1000000
| |-EnumConstantDecl 0x563ee3085fc0 <line:147:9, col:25> col:9 usec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x563ee3086330 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563ee3085fa0 <col:25> 'int' Int: 1000
| |     `-IntegerLiteral 0x563ee3085f80 <col:25> 'int' 1000
| |-EnumConstantDecl 0x563ee3086050 <line:148:9, col:24> col:9 referenced msec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x563ee3086348 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563ee3086030 <col:24> 'int' Int: 1000
| |     `-IntegerLiteral 0x563ee3086010 <col:24> 'int' 1000
| |-EnumConstantDecl 0x563ee30860e0 <line:150:9, col:26> col:9 referenced subsec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x563ee3086360 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563ee30860c0 <col:26> 'int' Int: 1000000000
| |     `-DeclRefExpr 0x563ee30860a0 <col:26> 'int' EnumConstant 0x563ee3085d80 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| |-EnumConstantDecl 0x563ee30861b0 <line:157:9, col:44> col:9 referenced subsec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x563ee3086378 <col:27, col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563ee3086190 <col:27, col:44> 'int' Int: 1000000
| |     `-BinaryOperator 0x563ee3086170 <col:27, col:44> 'int' '/'
| |       |-DeclRefExpr 0x563ee3086130 <col:27> 'int' EnumConstant 0x563ee30860e0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| |       `-DeclRefExpr 0x563ee3086150 <col:44> 'int' EnumConstant 0x563ee3086050 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| `-EnumConstantDecl 0x563ee3086280 <line:158:9, col:44> col:9 referenced subsec_per_usec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ImplicitCastExpr 0x563ee3086390 <col:27, col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x563ee3086260 <col:27, col:44> 'int' Int: 1000
|       `-BinaryOperator 0x563ee3086240 <col:27, col:44> 'int' '/'
|         |-DeclRefExpr 0x563ee3086200 <col:27> 'int' EnumConstant 0x563ee30860e0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|         `-DeclRefExpr 0x563ee3086220 <col:44> 'int' EnumConstant 0x563ee3085f30 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-EnumDecl 0x563ee30863a8 <line:164:5, line:166:5> line:164:5
| `-EnumConstantDecl 0x563ee30864b0 <line:165:9, col:19> col:9 NSUBSEC 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:164:5)'
|   `-ImplicitCastExpr 0x563ee3086500 <col:19> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x563ee3086490 <col:19> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' Int: 1000000000
|       `-DeclRefExpr 0x563ee3086470 <col:19> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x563ee30860e0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-TypedefDecl 0x563ee3086528 <line:168:5, col:32> col:32 referenced uninitialized_t 'uninitialized_type'
| `-RecordType 0x563ee2cea6f0 'uninitialized_type'
|   `-CXXRecord 0x563ee2cea658 'uninitialized_type'
|-CXXRecordDecl 0x563ee3086580 <line:170:5, col:11> col:11 referenced union rep_t
|-CXXConstructorDecl 0x563ee3086690 <line:174:5, line:176:5> line:174:12 used Timestamp 'void ()' inline
| |-CXXCtorInitializer Field 0x563ee3090888 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x563ee3096a98 <col:12> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x563ee3096bb8 <col:24, line:176:5>
|   `-CXXMemberCallExpr 0x563ee3096b70 <line:175:9, col:20> 'void'
|     |-MemberExpr 0x563ee3096b00 <col:9> '<bound member function type>' ->assign 0x563ee308b2d8
|     | `-CXXThisExpr 0x563ee3096af0 <col:9> 'Timestamp *' implicit this
|     |-IntegerLiteral 0x563ee3096b30 <col:16> 'int' 0
|     `-ImplicitCastExpr 0x563ee3096ba0 <col:19> 'uint32_t':'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x563ee3096b50 <col:19> 'int' 0
|-CXXConstructorDecl 0x563ee30868d8 <line:187:5, line:189:5> line:187:21 Timestamp 'void (long, uint32_t)' inline
| |-ParmVarDecl 0x563ee3086750 <col:31, col:36> col:36 used sec 'long'
| |-ParmVarDecl 0x563ee30867c8 <col:41, col:59> col:50 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x563ee30923d0 <col:59> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x563ee30923b0 <col:59> 'int' 0
| |-CXXCtorInitializer Field 0x563ee3090888 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x563ee3096bd0 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x563ee3096d20 <col:62, line:189:5>
|   `-CXXMemberCallExpr 0x563ee3096ca8 <line:188:9, col:27> 'void'
|     |-MemberExpr 0x563ee3096c38 <col:9> '<bound member function type>' ->assign 0x563ee308b2d8
|     | `-CXXThisExpr 0x563ee3096c28 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x563ee3096cf0 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x563ee3096cd8 <col:16> 'long' <LValueToRValue>
|     |   `-DeclRefExpr 0x563ee3096c68 <col:16> 'long' lvalue ParmVar 0x563ee3086750 'sec' 'long'
|     `-ImplicitCastExpr 0x563ee3096d08 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x563ee3096c88 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x563ee30867c8 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x563ee3086b38 <line:191:5, line:193:5> line:191:21 used Timestamp 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x563ee30869a8 <col:31, col:35> col:35 used sec 'int'
| |-ParmVarDecl 0x563ee3086a20 <col:40, col:58> col:49 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x563ee3092408 <col:58> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x563ee30923e8 <col:58> 'int' 0
| |-CXXCtorInitializer Field 0x563ee3090888 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x563ee3096d38 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x563ee3096e70 <col:61, line:193:5>
|   `-CXXMemberCallExpr 0x563ee3096e10 <line:192:9, col:27> 'void'
|     |-MemberExpr 0x563ee3096da0 <col:9> '<bound member function type>' ->assign 0x563ee308b2d8
|     | `-CXXThisExpr 0x563ee3096d90 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x563ee3096e40 <col:16> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x563ee3096dd0 <col:16> 'int' lvalue ParmVar 0x563ee30869a8 'sec' 'int'
|     `-ImplicitCastExpr 0x563ee3096e58 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x563ee3096df0 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x563ee3086a20 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x563ee3086d98 <line:195:5, line:197:5> line:195:21 Timestamp 'void (unsigned long, uint32_t)' inline
| |-ParmVarDecl 0x563ee3086c08 <col:31, col:45> col:45 used sec 'unsigned long'
| |-ParmVarDecl 0x563ee3086c80 <col:50, col:68> col:59 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x563ee3092440 <col:68> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x563ee3092420 <col:68> 'int' 0
| |-CXXCtorInitializer Field 0x563ee3090888 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x563ee3096e88 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x563ee3096fd8 <col:71, line:197:5>
|   `-CXXMemberCallExpr 0x563ee3096f60 <line:196:9, col:27> 'void'
|     |-MemberExpr 0x563ee3096ef0 <col:9> '<bound member function type>' ->assign 0x563ee308b2d8
|     | `-CXXThisExpr 0x563ee3096ee0 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x563ee3096fa8 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x563ee3096f90 <col:16> 'unsigned long' <LValueToRValue>
|     |   `-DeclRefExpr 0x563ee3096f20 <col:16> 'unsigned long' lvalue ParmVar 0x563ee3086c08 'sec' 'unsigned long'
|     `-ImplicitCastExpr 0x563ee3096fc0 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x563ee3096f40 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x563ee3086c80 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x563ee3087f30 <line:199:5, line:201:5> line:199:21 used Timestamp 'void (unsigned int, uint32_t)' inline
| |-ParmVarDecl 0x563ee3086e68 <col:31, col:40> col:40 used sec 'unsigned int'
| |-ParmVarDecl 0x563ee3086ee0 <col:45, col:63> col:54 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x563ee3092478 <col:63> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x563ee3092458 <col:63> 'int' 0
| |-CXXCtorInitializer Field 0x563ee3090888 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x563ee3096ff0 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x563ee3097140 <col:66, line:201:5>
|   `-CXXMemberCallExpr 0x563ee30970c8 <line:200:9, col:27> 'void'
|     |-MemberExpr 0x563ee3097058 <col:9> '<bound member function type>' ->assign 0x563ee308b2d8
|     | `-CXXThisExpr 0x563ee3097048 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x563ee3097110 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x563ee30970f8 <col:16> 'unsigned int' <LValueToRValue>
|     |   `-DeclRefExpr 0x563ee3097088 <col:16> 'unsigned int' lvalue ParmVar 0x563ee3086e68 'sec' 'unsigned int'
|     `-ImplicitCastExpr 0x563ee3097128 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x563ee30970a8 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x563ee3086ee0 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x563ee3088090 <line:203:5, col:37> col:21 used Timestamp 'void (double)' inline
| `-ParmVarDecl 0x563ee3088000 <col:31> col:37 'double'
|-CXXConstructorDecl 0x563ee3088228 <line:206:5, col:46> col:12 Timestamp 'void (const struct timeval &)' inline
| `-ParmVarDecl 0x563ee3088168 <col:22, col:44> col:44 tv 'const struct timeval &'
|-CXXConstructorDecl 0x563ee3088458 <line:208:5, col:47> col:12 Timestamp 'void (const struct timespec &)' inline
| `-ParmVarDecl 0x563ee3088360 <col:22, col:45> col:45 ts 'const struct timespec &'
|-CXXConstructorDecl 0x563ee3088608 <line:212:5, line:214:5> line:212:12 Timestamp 'void (const Timestamp::rep_t &)' inline
| |-ParmVarDecl 0x563ee3088548 <col:22, col:35> col:35 used rep 'const Timestamp::rep_t &'
| |-CXXCtorInitializer Field 0x563ee3090888 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x563ee30971e0 <line:213:11, col:17> 'Timestamp::rep_t' 'void (const Timestamp::rep_t &) noexcept'
| |   `-DeclRefExpr 0x563ee3097158 <col:14> 'const Timestamp::rep_t' lvalue ParmVar 0x563ee3088548 'rep' 'const Timestamp::rep_t &'
| `-CompoundStmt 0x563ee3097240 <col:19, line:214:5>
|-CXXConstructorDecl 0x563ee30887d8 <line:217:5, line:219:5> line:217:12 used Timestamp 'void (const Timestamp::uninitialized_t &)' inline
| |-ParmVarDecl 0x563ee3088718 <col:22, col:45> col:45 used unused 'const Timestamp::uninitialized_t &'
| |-CXXCtorInitializer Field 0x563ee3090888 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x563ee3097250 <col:12> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x563ee3097300 <col:53, line:219:5>
|   `-CStyleCastExpr 0x563ee30972d8 <line:218:9, col:16> 'void' <ToVoid>
|     `-DeclRefExpr 0x563ee30972a8 <col:16> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue ParmVar 0x563ee3088718 'unused' 'const Timestamp::uninitialized_t &'
|-TypedefDecl 0x563ee30889c8 <line:221:5, col:64> col:39 referenced unspecified_bool_type 'Timestamp::seconds_type (Timestamp::*)() const'
| `-MemberPointerType 0x563ee3088940 'Timestamp::seconds_type (Timestamp::*)() const'
|   |-RecordType 0x563ee30854e0 'Timestamp'
|   | `-CXXRecord 0x563ee3085738 'Timestamp'
|   `-ParenType 0x563ee30888e0 'Timestamp::seconds_type () const' sugar
|     `-FunctionProtoType 0x563ee30888b0 'Timestamp::seconds_type () const' const cdecl
|       `-TypedefType 0x563ee3085a80 'Timestamp::seconds_type' sugar
|         |-Typedef 0x563ee30858f8 'seconds_type'
|         `-TypedefType 0x563ee2ceaac0 'int32_t' sugar
|           |-Typedef 0x563ee2bf9268 'int32_t'
|           `-TypedefType 0x563ee2bd23b0 '__int32_t' sugar
|             |-Typedef 0x563ee2bd1fc8 '__int32_t'
|             `-BuiltinType 0x563ee2b90370 'int'
|-CXXConversionDecl 0x563ee3088b08 <line:222:5, col:45> col:12 used operator int (Timestamp::*)() const 'Timestamp::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x563ee3088bd8 <line:225:5, line:231:5> line:225:17 is_negative 'bool () const' inline
| `-CompoundStmt 0x563ee3097408 <col:37, line:231:5>
|   `-ReturnStmt 0x563ee30973f8 <line:227:9, col:23>
|     `-BinaryOperator 0x563ee30973d8 <col:16, col:23> 'bool' '<'
|       |-ImplicitCastExpr 0x563ee30973a8 <col:16, col:19> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x563ee3097358 <col:16, col:19> 'const int64_t':'const long' lvalue .x 0x563ee308f8d8
|       |   `-MemberExpr 0x563ee3097328 <col:16> 'const Timestamp::rep_t' lvalue ->_t 0x563ee3090888
|       |     `-CXXThisExpr 0x563ee3097318 <col:16> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x563ee30973c0 <col:23> 'long' <IntegralCast>
|         `-IntegerLiteral 0x563ee3097388 <col:23> 'int' 0
|-CXXMethodDecl 0x563ee3088c98 <line:233:5, col:31> col:25 used sec 'Timestamp::seconds_type () const' inline
|-CXXMethodDecl 0x563ee3088d58 <line:234:5, col:30> col:21 used subsec 'uint32_t () const' inline
|-CXXMethodDecl 0x563ee3088e18 <line:235:5, col:28> col:21 msec 'uint32_t () const' inline
|-CXXMethodDecl 0x563ee3088ed8 <line:236:5, col:28> col:21 used usec 'uint32_t () const' inline
|-CXXMethodDecl 0x563ee3088f98 <line:237:5, col:28> col:21 used nsec 'uint32_t () const' inline
|-CXXMethodDecl 0x563ee3089108 <line:239:5, col:41> col:17 set_sec 'void (Timestamp::seconds_type)' inline
| `-ParmVarDecl 0x563ee3089048 <col:25, col:38> col:38 sec 'Timestamp::seconds_type':'int'
|-CXXMethodDecl 0x563ee3089250 <line:240:5, col:43> col:17 set_subsec 'void (uint32_t)' inline
| `-ParmVarDecl 0x563ee30891c0 <col:28, col:37> col:37 subsec 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x563ee3089318 <line:242:5, col:65> col:25 msec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x563ee30893b8 <col:54> "" ""
|-CXXMethodDecl 0x563ee3089448 <line:243:5, col:65> col:25 usec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x563ee30894e8 <col:54> "" ""
|-CXXMethodDecl 0x563ee3089578 <line:244:5, col:65> col:25 nsec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x563ee3089618 <col:54> "" ""
|-CXXMethodDecl 0x563ee3089718 <line:250:5, col:37> col:27 used timeval 'struct timeval () const' inline
|-CXXMethodDecl 0x563ee30897e8 <line:251:5, col:42> col:27 timeval_ceil 'struct timeval () const' inline
|-CXXMethodDecl 0x563ee3089918 <line:257:5, col:39> col:28 timespec 'struct timespec () const' inline
|-CXXMethodDecl 0x563ee3089a10 <line:262:5, col:31> col:19 used doubleval 'double () const' inline
|-CXXMethodDecl 0x563ee3089b48 <line:265:5, line:271:5> line:265:23 msecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x563ee3097620 <col:39, line:271:5>
|   `-ReturnStmt 0x563ee3097610 <line:267:9, col:61>
|     `-CallExpr 0x563ee30975b0 <col:16, col:61> 'Timestamp::value_type':'long'
|       |-ImplicitCastExpr 0x563ee3097598 <col:16> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x563ee3097420 <col:16> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x563ee3090bb8 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|       |-ImplicitCastExpr 0x563ee30975e0 <col:26, col:29> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x563ee3097480 <col:26, col:29> 'const int64_t':'const long' lvalue .x 0x563ee308f8d8
|       |   `-MemberExpr 0x563ee3097450 <col:26> 'const Timestamp::rep_t' lvalue ->_t 0x563ee3090888
|       |     `-CXXThisExpr 0x563ee3097440 <col:26> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x563ee30975f8 <col:32, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|         `-BinaryOperator 0x563ee3097520 <col:32, col:49> 'int' '/'
|           |-ImplicitCastExpr 0x563ee30974f0 <col:32> 'int' <IntegralCast>
|           | `-DeclRefExpr 0x563ee30974b0 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x563ee30860e0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|           `-ImplicitCastExpr 0x563ee3097508 <col:49> 'int' <IntegralCast>
|             `-DeclRefExpr 0x563ee30974d0 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x563ee3086050 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x563ee3089c08 <line:273:5, line:279:5> line:273:23 usecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x563ee30977e0 <col:39, line:279:5>
|   `-ReturnStmt 0x563ee30977d0 <line:275:9, col:61>
|     `-CallExpr 0x563ee3097770 <col:16, col:61> 'Timestamp::value_type':'long'
|       |-ImplicitCastExpr 0x563ee3097758 <col:16> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x563ee3097638 <col:16> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x563ee3090bb8 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|       |-ImplicitCastExpr 0x563ee30977a0 <col:26, col:29> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x563ee3097698 <col:26, col:29> 'const int64_t':'const long' lvalue .x 0x563ee308f8d8
|       |   `-MemberExpr 0x563ee3097668 <col:26> 'const Timestamp::rep_t' lvalue ->_t 0x563ee3090888
|       |     `-CXXThisExpr 0x563ee3097658 <col:26> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x563ee30977b8 <col:32, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|         `-BinaryOperator 0x563ee3097738 <col:32, col:49> 'int' '/'
|           |-ImplicitCastExpr 0x563ee3097708 <col:32> 'int' <IntegralCast>
|           | `-DeclRefExpr 0x563ee30976c8 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x563ee30860e0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|           `-ImplicitCastExpr 0x563ee3097720 <col:49> 'int' <IntegralCast>
|             `-DeclRefExpr 0x563ee30976e8 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x563ee3085f30 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x563ee3089cc8 <line:281:5, line:287:5> line:281:23 nsecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x563ee3097978 <col:39, line:287:5>
|   `-ReturnStmt 0x563ee3097968 <line:283:9, col:53>
|     `-BinaryOperator 0x563ee3097948 <col:16, col:53> 'long' '*'
|       |-ImplicitCastExpr 0x563ee3097918 <col:16, col:19> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x563ee3097838 <col:16, col:19> 'const int64_t':'const long' lvalue .x 0x563ee308f8d8
|       |   `-MemberExpr 0x563ee3097808 <col:16> 'const Timestamp::rep_t' lvalue ->_t 0x563ee3090888
|       |     `-CXXThisExpr 0x563ee30977f8 <col:16> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x563ee3097930 <col:23, col:53> 'long' <IntegralCast>
|         `-ParenExpr 0x563ee30978f8 <col:23, col:53> 'int'
|           `-BinaryOperator 0x563ee30978d8 <col:24, col:39> 'int' '/'
|             |-ImplicitCastExpr 0x563ee30978a8 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x563ee3097868 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x563ee3085d80 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x563ee30978c0 <col:39> 'int' <IntegralCast>
|               `-DeclRefExpr 0x563ee3097888 <col:39> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x563ee30860e0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x563ee3089db8 <line:290:5, line:293:5> line:290:22 msec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x563ee3098c10 <col:40, line:293:5>
|   |-DeclStmt 0x563ee3097ac0 <line:291:9, col:48>
|   | `-VarDecl 0x563ee30979a0 <col:9, col:33> col:18 used x 'uint32_t':'unsigned int' cinit
|   |   `-BinaryOperator 0x563ee3097aa0 <col:22, col:33> 'unsigned int' '%'
|   |     |-CXXMemberCallExpr 0x563ee3097a48 <col:22, col:29> 'uint32_t':'unsigned int'
|   |     | `-MemberExpr 0x563ee3097a18 <col:22> '<bound member function type>' ->subsec 0x563ee3088d58
|   |     |   `-CXXThisExpr 0x563ee3097a08 <col:22> 'const Timestamp *' implicit this
|   |     `-ImplicitCastExpr 0x563ee3097a88 <col:33> 'unsigned int' <IntegralCast>
|   |       `-DeclRefExpr 0x563ee3097a68 <col:33> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x563ee30861b0 'subsec_per_msec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x563ee3098c00 <line:292:9, col:70>
|     `-ExprWithCleanups 0x563ee3098be8 <col:16, col:70> 'Timestamp'
|       `-CXXConstructExpr 0x563ee3098bb8 <col:16, col:70> 'Timestamp' 'void (const Timestamp &) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x563ee3098ba0 <col:16, col:70> 'const Timestamp' lvalue
|           `-ParenExpr 0x563ee3098b80 <col:16, col:70> 'const Timestamp'
|             `-ConditionalOperator 0x563ee3098b50 <col:17, col:66> 'const Timestamp'
|               |-ImplicitCastExpr 0x563ee30988e8 <col:17> 'bool' <IntegralToBoolean>
|               | `-ImplicitCastExpr 0x563ee30988d0 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|               |   `-DeclRefExpr 0x563ee3097ad8 <col:17> 'uint32_t':'unsigned int' lvalue Var 0x563ee30979a0 'x' 'uint32_t':'unsigned int'
|               |-CXXConstructExpr 0x563ee3098af0 <col:21, col:61> 'const Timestamp' 'void (const Timestamp &) noexcept' elidable
|               | `-MaterializeTemporaryExpr 0x563ee3098ad8 <col:21, col:61> 'const Timestamp' lvalue
|               |   `-CXXConstructExpr 0x563ee3098aa8 <col:21, col:61> 'const Timestamp' 'void (Timestamp &&) noexcept' elidable
|               |     `-MaterializeTemporaryExpr 0x563ee3098900 <col:21, col:61> 'Timestamp' xvalue
|               |       `-CXXOperatorCallExpr 0x563ee3098870 <col:21, col:61> 'Timestamp'
|               |         |-ImplicitCastExpr 0x563ee3098858 <col:27> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|               |         | `-DeclRefExpr 0x563ee3098808 <col:27> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x563ee3085688 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|               |         |-CXXConstructExpr 0x563ee30987a8 <col:21, col:22> 'Timestamp' 'void (const Timestamp &) noexcept'
|               |         | `-UnaryOperator 0x563ee3097b08 <col:21, col:22> 'const Timestamp' lvalue prefix '*' cannot overflow
|               |         |   `-CXXThisExpr 0x563ee3097af8 <col:22> 'const Timestamp *' this
|               |         `-MaterializeTemporaryExpr 0x563ee30987f0 <col:29, col:61> 'const Timestamp' lvalue
|               |           `-ImplicitCastExpr 0x563ee30987d8 <col:29, col:61> 'const Timestamp' <NoOp>
|               |             `-CXXTemporaryObjectExpr 0x563ee3097fc8 <col:29, col:61> 'Timestamp' 'void (int, uint32_t)'
|               |               |-IntegerLiteral 0x563ee3097b30 <col:39> 'int' 0
|               |               `-BinaryOperator 0x563ee3097bc0 <col:42, col:60> 'unsigned int' '-'
|               |                 |-ImplicitCastExpr 0x563ee3097b90 <col:42> 'unsigned int' <IntegralCast>
|               |                 | `-DeclRefExpr 0x563ee3097b50 <col:42> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x563ee30861b0 'subsec_per_msec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|               |                 `-ImplicitCastExpr 0x563ee3097ba8 <col:60> 'uint32_t':'unsigned int' <LValueToRValue>
|               |                   `-DeclRefExpr 0x563ee3097b70 <col:60> 'uint32_t':'unsigned int' lvalue Var 0x563ee30979a0 'x' 'uint32_t':'unsigned int'
|               `-CXXConstructExpr 0x563ee3098b20 <col:65, col:66> 'const Timestamp' 'void (const Timestamp &) noexcept'
|                 `-UnaryOperator 0x563ee30988b8 <col:65, col:66> 'const Timestamp' lvalue prefix '*' cannot overflow
|                   `-CXXThisExpr 0x563ee30988a8 <col:66> 'const Timestamp *' this
|-CXXMethodDecl 0x563ee3089e78 <line:295:5, line:302:5> line:295:22 usec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x563ee3099168 <col:40, line:302:5>
|   |-DeclStmt 0x563ee3098d60 <line:297:9, col:48>
|   | `-VarDecl 0x563ee3098c40 <col:9, col:33> col:18 used x 'uint32_t':'unsigned int' cinit
|   |   `-BinaryOperator 0x563ee3098d40 <col:22, col:33> 'unsigned int' '%'
|   |     |-CXXMemberCallExpr 0x563ee3098ce8 <col:22, col:29> 'uint32_t':'unsigned int'
|   |     | `-MemberExpr 0x563ee3098cb8 <col:22> '<bound member function type>' ->subsec 0x563ee3088d58
|   |     |   `-CXXThisExpr 0x563ee3098ca8 <col:22> 'const Timestamp *' implicit this
|   |     `-ImplicitCastExpr 0x563ee3098d28 <col:33> 'unsigned int' <IntegralCast>
|   |       `-DeclRefExpr 0x563ee3098d08 <col:33> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x563ee3086280 'subsec_per_usec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x563ee3099158 <line:298:9, col:70>
|     `-ExprWithCleanups 0x563ee3099140 <col:16, col:70> 'Timestamp'
|       `-CXXConstructExpr 0x563ee3099110 <col:16, col:70> 'Timestamp' 'void (const Timestamp &) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x563ee30990f8 <col:16, col:70> 'const Timestamp' lvalue
|           `-ParenExpr 0x563ee30990d8 <col:16, col:70> 'const Timestamp'
|             `-ConditionalOperator 0x563ee30990a8 <col:17, col:66> 'const Timestamp'
|               |-ImplicitCastExpr 0x563ee3098fd0 <col:17> 'bool' <IntegralToBoolean>
|               | `-ImplicitCastExpr 0x563ee3098fb8 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|               |   `-DeclRefExpr 0x563ee3098d78 <col:17> 'uint32_t':'unsigned int' lvalue Var 0x563ee3098c40 'x' 'uint32_t':'unsigned int'
|               |-CXXConstructExpr 0x563ee3099048 <col:21, col:61> 'const Timestamp' 'void (const Timestamp &) noexcept' elidable
|               | `-MaterializeTemporaryExpr 0x563ee3099030 <col:21, col:61> 'const Timestamp' lvalue
|               |   `-CXXConstructExpr 0x563ee3099000 <col:21, col:61> 'const Timestamp' 'void (Timestamp &&) noexcept' elidable
|               |     `-MaterializeTemporaryExpr 0x563ee3098fe8 <col:21, col:61> 'Timestamp' xvalue
|               |       `-CXXOperatorCallExpr 0x563ee3098f58 <col:21, col:61> 'Timestamp'
|               |         |-ImplicitCastExpr 0x563ee3098f40 <col:27> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|               |         | `-DeclRefExpr 0x563ee3098f20 <col:27> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x563ee3085688 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|               |         |-CXXConstructExpr 0x563ee3098ec0 <col:21, col:22> 'Timestamp' 'void (const Timestamp &) noexcept'
|               |         | `-UnaryOperator 0x563ee3098da8 <col:21, col:22> 'const Timestamp' lvalue prefix '*' cannot overflow
|               |         |   `-CXXThisExpr 0x563ee3098d98 <col:22> 'const Timestamp *' this
|               |         `-MaterializeTemporaryExpr 0x563ee3098f08 <col:29, col:61> 'const Timestamp' lvalue
|               |           `-ImplicitCastExpr 0x563ee3098ef0 <col:29, col:61> 'const Timestamp' <NoOp>
|               |             `-CXXTemporaryObjectExpr 0x563ee3098e80 <col:29, col:61> 'Timestamp' 'void (int, uint32_t)'
|               |               |-IntegerLiteral 0x563ee3098dd0 <col:39> 'int' 0
|               |               `-BinaryOperator 0x563ee3098e60 <col:42, col:60> 'unsigned int' '-'
|               |                 |-ImplicitCastExpr 0x563ee3098e30 <col:42> 'unsigned int' <IntegralCast>
|               |                 | `-DeclRefExpr 0x563ee3098df0 <col:42> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x563ee3086280 'subsec_per_usec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|               |                 `-ImplicitCastExpr 0x563ee3098e48 <col:60> 'uint32_t':'unsigned int' <LValueToRValue>
|               |                   `-DeclRefExpr 0x563ee3098e10 <col:60> 'uint32_t':'unsigned int' lvalue Var 0x563ee3098c40 'x' 'uint32_t':'unsigned int'
|               `-CXXConstructExpr 0x563ee3099078 <col:65, col:66> 'const Timestamp' 'void (const Timestamp &) noexcept'
|                 `-UnaryOperator 0x563ee3098fa0 <col:65, col:66> 'const Timestamp' lvalue prefix '*' cannot overflow
|                   `-CXXThisExpr 0x563ee3098f90 <col:66> 'const Timestamp *' this
|-CXXMethodDecl 0x563ee3089f38 <line:304:5, line:306:5> line:304:22 nsec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x563ee30991f0 <col:40, line:306:5>
|   `-ReturnStmt 0x563ee30991e0 <line:305:9, col:17>
|     `-CXXConstructExpr 0x563ee30991b0 <col:16, col:17> 'Timestamp' 'void (const Timestamp &) noexcept'
|       `-UnaryOperator 0x563ee3099198 <col:16, col:17> 'const Timestamp' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x563ee3099188 <col:17> 'const Timestamp *' this
|-CXXMethodDecl 0x563ee308a0d8 <line:310:5, col:65> col:29 make_jiffies 'Timestamp (click_jiffies_t)' static inline
| `-ParmVarDecl 0x563ee3089fe8 <col:42, col:58> col:58 jiffies 'click_jiffies_t':'unsigned int'
|-CXXMethodDecl 0x563ee308a2a8 <line:312:5, col:76> col:29 make_jiffies 'Timestamp (click_jiffies_difference_t)' static inline
| `-ParmVarDecl 0x563ee308a1b0 <col:42, col:69> col:69 jiffies 'click_jiffies_difference_t':'int'
|-CXXMethodDecl 0x563ee308a398 <line:314:5, col:38> col:28 jiffies 'click_jiffies_t () const' inline
|-CXXMethodDecl 0x563ee308a508 <line:318:5, line:320:5> line:318:29 make_sec 'Timestamp (Timestamp::seconds_type)' static inline
| |-ParmVarDecl 0x563ee308a448 <col:38, col:51> col:51 used sec 'Timestamp::seconds_type':'int'
| `-CompoundStmt 0x563ee3099338 <col:56, line:320:5>
|   `-ReturnStmt 0x563ee3099328 <line:319:9, col:32>
|     `-ExprWithCleanups 0x563ee3099310 <col:16, col:32> 'Timestamp'
|       `-CXXConstructExpr 0x563ee30992e0 <col:16, col:32> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x563ee30992c8 <col:16, col:32> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x563ee3099288 <col:16, col:32> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x563ee3099258 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x563ee3099218 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x563ee308a448 'sec' 'Timestamp::seconds_type':'int'
|             `-ImplicitCastExpr 0x563ee3099270 <col:31> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x563ee3099238 <col:31> 'int' 0
|-CXXMethodDecl 0x563ee308a748 <line:324:5, line:326:5> line:324:29 make_msec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x563ee308a5c0 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x563ee308a638 <col:57, col:66> col:66 used msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x563ee3099508 <col:72, line:326:5>
|   `-ReturnStmt 0x563ee30994f8 <line:325:9, col:51>
|     `-ExprWithCleanups 0x563ee30994e0 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x563ee30994b0 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x563ee3099498 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x563ee3099458 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x563ee3099440 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x563ee3099360 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x563ee308a5c0 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x563ee3099400 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x563ee30993e8 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x563ee3099380 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x563ee308f030 'msec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x563ee3099428 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x563ee30993a0 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x563ee308a638 'msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x563ee308a8f8 <line:328:5, line:337:5> line:328:29 used make_msec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x563ee308a808 <col:39, col:50> col:50 used msec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x563ee3099bd0 <col:56, line:337:5>
|   |-DeclStmt 0x563ee3099808 <line:329:9, col:51>
|   | `-VarDecl 0x563ee3099530 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x563ee30997f0 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x563ee30997c0 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x563ee30997a8 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x563ee3099790 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x563ee3099760 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x563ee3099748 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x563ee3099730 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x563ee3099620 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x563ee30999c0 <line:331:9, col:55> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x563ee3099870 <col:9, col:14> 'int64_t':'long' lvalue .x 0x563ee308f8d8
|   | | `-MemberExpr 0x563ee3099840 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x563ee3090888
|   | |   `-DeclRefExpr 0x563ee3099820 <col:9> 'Timestamp' lvalue Var 0x563ee3099530 't' 'Timestamp'
|   | `-BinaryOperator 0x563ee30999a0 <col:18, col:55> 'long' '*'
|   |   |-ImplicitCastExpr 0x563ee3099970 <col:18> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x563ee30998a0 <col:18> 'Timestamp::value_type':'long' lvalue ParmVar 0x563ee308a808 'msec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x563ee3099988 <col:25, col:55> 'long' <IntegralCast>
|   |     `-ParenExpr 0x563ee3099950 <col:25, col:55> 'int'
|   |       `-BinaryOperator 0x563ee3099930 <col:26, col:43> 'int' '/'
|   |         |-ImplicitCastExpr 0x563ee3099900 <col:26> 'int' <IntegralCast>
|   |         | `-DeclRefExpr 0x563ee30998c0 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x563ee30860e0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |         `-ImplicitCastExpr 0x563ee3099918 <col:43> 'int' <IntegralCast>
|   |           `-DeclRefExpr 0x563ee30998e0 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x563ee3086050 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x563ee3099bb8 <line:336:9, col:16>
|     `-CXXConstructExpr 0x563ee3099b88 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x563ee3099b70 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x563ee3099b50 <col:16> 'Timestamp' lvalue Var 0x563ee3099530 't' 'Timestamp'
|-CXXMethodDecl 0x563ee308aac0 <line:341:5, line:343:5> line:341:29 make_usec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x563ee308a9b0 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x563ee308aa28 <col:57, col:66> col:66 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x563ee3099d88 <col:72, line:343:5>
|   `-ReturnStmt 0x563ee3099d78 <line:342:9, col:51>
|     `-ExprWithCleanups 0x563ee3099d60 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x563ee3099d30 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x563ee3099d18 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x563ee3099cd8 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x563ee3099cc0 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x563ee3099c08 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x563ee308a9b0 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x563ee3099c80 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x563ee3099c68 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x563ee3099c28 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x563ee308f178 'usec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x563ee3099ca8 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x563ee3099c48 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x563ee308aa28 'usec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x563ee308ac10 <line:345:5, line:354:5> line:345:29 used make_usec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x563ee308ab80 <col:39, col:50> col:50 used usec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x563ee309a1d0 <col:56, line:354:5>
|   |-DeclStmt 0x563ee3099f78 <line:346:9, col:51>
|   | `-VarDecl 0x563ee3099db0 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x563ee3099f60 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x563ee3099f30 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x563ee3099f18 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x563ee3099f00 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x563ee3099ed0 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x563ee3099eb8 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x563ee3099ea0 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x563ee3099e70 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x563ee309a130 <line:348:9, col:55> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x563ee3099fe0 <col:9, col:14> 'int64_t':'long' lvalue .x 0x563ee308f8d8
|   | | `-MemberExpr 0x563ee3099fb0 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x563ee3090888
|   | |   `-DeclRefExpr 0x563ee3099f90 <col:9> 'Timestamp' lvalue Var 0x563ee3099db0 't' 'Timestamp'
|   | `-BinaryOperator 0x563ee309a110 <col:18, col:55> 'long' '*'
|   |   |-ImplicitCastExpr 0x563ee309a0e0 <col:18> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x563ee309a010 <col:18> 'Timestamp::value_type':'long' lvalue ParmVar 0x563ee308ab80 'usec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x563ee309a0f8 <col:25, col:55> 'long' <IntegralCast>
|   |     `-ParenExpr 0x563ee309a0c0 <col:25, col:55> 'int'
|   |       `-BinaryOperator 0x563ee309a0a0 <col:26, col:43> 'int' '/'
|   |         |-ImplicitCastExpr 0x563ee309a070 <col:26> 'int' <IntegralCast>
|   |         | `-DeclRefExpr 0x563ee309a030 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x563ee30860e0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |         `-ImplicitCastExpr 0x563ee309a088 <col:43> 'int' <IntegralCast>
|   |           `-DeclRefExpr 0x563ee309a050 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x563ee3085f30 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x563ee309a1b8 <line:353:9, col:16>
|     `-CXXConstructExpr 0x563ee309a188 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x563ee309a170 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x563ee309a150 <col:16> 'Timestamp' lvalue Var 0x563ee3099db0 't' 'Timestamp'
|-CXXMethodDecl 0x563ee308add8 <line:358:5, line:360:5> line:358:29 make_nsec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x563ee308acc8 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x563ee308ad40 <col:57, col:66> col:66 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x563ee309a388 <col:72, line:360:5>
|   `-ReturnStmt 0x563ee309a378 <line:359:9, col:51>
|     `-ExprWithCleanups 0x563ee309a360 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x563ee309a330 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x563ee309a318 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x563ee309a2d8 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x563ee309a2c0 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x563ee309a208 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x563ee308acc8 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x563ee309a280 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x563ee309a268 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x563ee309a228 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x563ee308f2c0 'nsec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x563ee309a2a8 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x563ee309a248 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x563ee308ad40 'nsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x563ee308af28 <line:362:5, line:371:5> line:362:29 make_nsec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x563ee308ae98 <col:39, col:50> col:50 used nsec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x563ee30a6cf8 <col:56, line:371:5>
|   |-DeclStmt 0x563ee309a578 <line:363:9, col:51>
|   | `-VarDecl 0x563ee309a3b0 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x563ee309a560 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x563ee309a530 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x563ee309a518 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x563ee309a500 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x563ee309a4d0 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x563ee309a4b8 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x563ee309a4a0 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x563ee309a470 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x563ee30a6c58 <line:365:9, col:63> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x563ee309a5e0 <col:9, col:14> 'int64_t':'long' lvalue .x 0x563ee308f8d8
|   | | `-MemberExpr 0x563ee309a5b0 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x563ee3090888
|   | |   `-DeclRefExpr 0x563ee309a590 <col:9> 'Timestamp' lvalue Var 0x563ee309a3b0 't' 'Timestamp'
|   | `-CallExpr 0x563ee30a6bf8 <col:18, col:63> 'Timestamp::value_type':'long'
|   |   |-ImplicitCastExpr 0x563ee30a6be0 <col:18> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x563ee309a610 <col:18> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x563ee3090bb8 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|   |   |-ImplicitCastExpr 0x563ee30a6c28 <col:28> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x563ee309a630 <col:28> 'Timestamp::value_type':'long' lvalue ParmVar 0x563ee308ae98 'nsec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x563ee30a6c40 <col:34, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|   |     `-BinaryOperator 0x563ee30a6bc0 <col:34, col:49> 'int' '/'
|   |       |-ImplicitCastExpr 0x563ee30a6b90 <col:34> 'int' <IntegralCast>
|   |       | `-DeclRefExpr 0x563ee309a650 <col:34> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x563ee3085d80 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |       `-ImplicitCastExpr 0x563ee30a6ba8 <col:49> 'int' <IntegralCast>
|   |         `-DeclRefExpr 0x563ee309a670 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x563ee30860e0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x563ee30a6ce0 <line:370:9, col:16>
|     `-CXXConstructExpr 0x563ee30a6cb0 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x563ee30a6c98 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x563ee30a6c78 <col:16> 'Timestamp' lvalue Var 0x563ee309a3b0 't' 'Timestamp'
|-CXXMethodDecl 0x563ee308b018 <line:375:5, line:377:5> line:375:29 epsilon 'Timestamp ()' static inline
| `-CompoundStmt 0x563ee30a6e38 <col:39, line:377:5>
|   `-ReturnStmt 0x563ee30a6e28 <line:376:9, col:30>
|     `-ExprWithCleanups 0x563ee30a6e10 <col:16, col:30> 'Timestamp'
|       `-CXXConstructExpr 0x563ee30a6de0 <col:16, col:30> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x563ee30a6dc8 <col:16, col:30> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x563ee30a6d88 <col:16, col:30> 'Timestamp' 'void (int, uint32_t)'
|             |-IntegerLiteral 0x563ee30a6d30 <col:26> 'int' 0
|             `-ImplicitCastExpr 0x563ee30a6d70 <col:29> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x563ee30a6d50 <col:29> 'int' 1
|-CXXMethodDecl 0x563ee308b0d8 <line:380:5, line:382:5> line:380:17 clear 'void ()' inline
| `-CompoundStmt 0x563ee30a6f18 <col:25, line:382:5>
|   `-CXXMemberCallExpr 0x563ee30a6ed0 <line:381:9, col:20> 'void'
|     |-MemberExpr 0x563ee30a6e60 <col:9> '<bound member function type>' ->assign 0x563ee308b2d8
|     | `-CXXThisExpr 0x563ee30a6e50 <col:9> 'Timestamp *' implicit this
|     |-IntegerLiteral 0x563ee30a6e90 <col:16> 'int' 0
|     `-ImplicitCastExpr 0x563ee30a6f00 <col:19> 'uint32_t':'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x563ee30a6eb0 <col:19> 'int' 0
|-CXXMethodDecl 0x563ee308b2d8 <line:388:5, line:395:5> line:388:17 used assign 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x563ee308b188 <col:24, col:37> col:37 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x563ee308b200 <col:42, col:60> col:51 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x563ee30924b0 <col:60> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x563ee3092490 <col:60> 'int' 0
| `-CompoundStmt 0x563ee30a7110 <col:63, line:395:5>
|   `-BinaryOperator 0x563ee30a70f0 <line:390:9, col:49> 'int64_t':'long' lvalue '='
|     |-MemberExpr 0x563ee30a6f70 <col:9, col:12> 'int64_t':'long' lvalue .x 0x563ee308f8d8
|     | `-MemberExpr 0x563ee30a6f40 <col:9> 'Timestamp::rep_t' lvalue ->_t 0x563ee3090888
|     |   `-CXXThisExpr 0x563ee30a6f30 <col:9> 'Timestamp *' implicit this
|     `-BinaryOperator 0x563ee30a70d0 <col:16, col:49> 'long' '+'
|       |-BinaryOperator 0x563ee30a7060 <col:16, col:32> 'long' '*'
|       | |-CStyleCastExpr 0x563ee30a7000 <col:16, col:26> 'int64_t':'long' <NoOp>
|       | | `-ImplicitCastExpr 0x563ee30a6fe8 <col:26> 'int64_t':'long' <IntegralCast> part_of_explicit_cast
|       | |   `-ImplicitCastExpr 0x563ee30a6fd0 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue> part_of_explicit_cast
|       | |     `-DeclRefExpr 0x563ee30a6fa0 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x563ee308b188 'sec' 'Timestamp::seconds_type':'int'
|       | `-ImplicitCastExpr 0x563ee30a7048 <col:32> 'long' <IntegralCast>
|       |   `-DeclRefExpr 0x563ee30a7028 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x563ee30860e0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|       `-ImplicitCastExpr 0x563ee30a70b8 <col:49> 'long' <IntegralCast>
|         `-ImplicitCastExpr 0x563ee30a70a0 <col:49> 'uint32_t':'unsigned int' <LValueToRValue>
|           `-DeclRefExpr 0x563ee30a7080 <col:49> 'uint32_t':'unsigned int' lvalue ParmVar 0x563ee308b200 'subsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x563ee308b4a8 <line:397:5, line:399:5> line:397:17 used assign_usec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x563ee308b398 <col:29, col:42> col:42 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x563ee308b410 <col:47, col:56> col:56 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x563ee30a7268 <col:62, line:399:5>
|   `-CXXMemberCallExpr 0x563ee30a7220 <line:398:9, col:41> 'void'
|     |-MemberExpr 0x563ee30a7138 <col:9> '<bound member function type>' ->assign 0x563ee308b2d8
|     | `-CXXThisExpr 0x563ee30a7128 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x563ee30a7250 <col:16> 'Timestamp::seconds_type':'int' <LValueToRValue>
|     | `-DeclRefExpr 0x563ee30a7168 <col:16> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x563ee308b398 'sec' 'Timestamp::seconds_type':'int'
|     `-CallExpr 0x563ee30a71e0 <col:21, col:40> 'uint32_t':'unsigned int'
|       |-ImplicitCastExpr 0x563ee30a71c8 <col:21> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x563ee30a7188 <col:21> 'uint32_t (uint32_t)' lvalue CXXMethod 0x563ee308f178 'usec_to_subsec' 'uint32_t (uint32_t)'
|       `-ImplicitCastExpr 0x563ee30a7208 <col:36> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x563ee30a71a8 <col:36> 'uint32_t':'unsigned int' lvalue ParmVar 0x563ee308b410 'usec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x563ee308b678 <line:401:5, line:403:5> line:401:17 used assign_nsec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x563ee308b568 <col:29, col:42> col:42 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x563ee308b5e0 <col:47, col:56> col:56 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x563ee30a73c0 <col:62, line:403:5>
|   `-CXXMemberCallExpr 0x563ee30a7378 <line:402:9, col:41> 'void'
|     |-MemberExpr 0x563ee30a7290 <col:9> '<bound member function type>' ->assign 0x563ee308b2d8
|     | `-CXXThisExpr 0x563ee30a7280 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x563ee30a73a8 <col:16> 'Timestamp::seconds_type':'int' <LValueToRValue>
|     | `-DeclRefExpr 0x563ee30a72c0 <col:16> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x563ee308b568 'sec' 'Timestamp::seconds_type':'int'
|     `-CallExpr 0x563ee30a7338 <col:21, col:40> 'uint32_t':'unsigned int'
|       |-ImplicitCastExpr 0x563ee30a7320 <col:21> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x563ee30a72e0 <col:21> 'uint32_t (uint32_t)' lvalue CXXMethod 0x563ee308f2c0 'nsec_to_subsec' 'uint32_t (uint32_t)'
|       `-ImplicitCastExpr 0x563ee30a7360 <col:36> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x563ee30a7300 <col:36> 'uint32_t':'unsigned int' lvalue ParmVar 0x563ee308b5e0 'nsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x563ee308b848 <line:408:5, col:86> col:17 set 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x563ee308b738 <col:21, col:34> col:34 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x563ee308b7b0 <col:39, col:57> col:48 subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x563ee30924e8 <col:57> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x563ee30924c8 <col:57> 'int' 0
| `-DeprecatedAttr 0x563ee308b8f8 <col:75> "" ""
|-CXXMethodDecl 0x563ee308ba88 <line:411:5, col:85> col:17 set_usec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x563ee308b978 <col:26, col:39> col:39 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x563ee308b9f0 <col:44, col:53> col:53 usec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x563ee308bb38 <col:74> "" ""
|-CXXMethodDecl 0x563ee308bcc8 <line:414:5, col:85> col:17 set_nsec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x563ee308bbb8 <col:26, col:39> col:39 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x563ee308bc30 <col:44, col:53> col:53 nsec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x563ee308bd78 <col:74> "" ""
|-CXXMethodDecl 0x563ee308be08 <line:417:5, col:53> col:17 set_now 'void ()' inline
| `-DeprecatedAttr 0x563ee308bea8 <col:42> "" ""
|-CXXMethodDecl 0x563ee308e6e0 <line:420:5, col:53> col:9 set_timeval_ioctl 'int (int, int)'
| |-ParmVarDecl 0x563ee308e5c0 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x563ee308e640 <col:35, col:39> col:39 ioctl_selector 'int'
|-CXXMethodDecl 0x563ee308e7b0 <line:432:5, col:33> col:29 now 'Timestamp ()' static inline
|-CXXMethodDecl 0x563ee308e870 <line:438:5, col:56> col:45 used assign_now 'void ()'
| |-NoInlineAttr 0x563ee308e910 <col:20>
| `-OptimizeNoneAttr 0x563ee308e968 <col:30>
|-CXXMethodDecl 0x563ee308e9b0 <line:446:5, col:36> col:29 used recent 'Timestamp ()' static inline
|-CXXMethodDecl 0x563ee308ea70 <line:452:5, col:31> col:17 used assign_recent 'void ()' inline
|-CXXMethodDecl 0x563ee308eb30 <line:466:5, col:40> col:29 now_steady 'Timestamp ()' static inline
|-CXXMethodDecl 0x563ee308ebf0 <line:472:5, col:35> col:17 used assign_now_steady 'void ()' inline
|-CXXMethodDecl 0x563ee308ecb0 <line:481:5, col:43> col:29 used recent_steady 'Timestamp ()' static inline
|-CXXMethodDecl 0x563ee308ed70 <line:487:5, col:38> col:17 used assign_recent_steady 'void ()' inline
|-CXXMethodDecl 0x563ee308ee30 <line:496:5, col:22> col:12 unparse 'String () const'
|-CXXMethodDecl 0x563ee308eef0 <line:501:5, col:31> col:12 unparse_interval 'String () const'
|-CXXMethodDecl 0x563ee308f030 <line:510:5, line:512:5> line:510:28 used msec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x563ee308efa0 <col:43, col:52> col:52 used msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x563ee30a7508 <col:58, line:512:5>
|   `-ReturnStmt 0x563ee30a74f8 <line:511:9, col:53>
|     `-BinaryOperator 0x563ee30a74d8 <col:16, col:53> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x563ee30a74a8 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x563ee30a73d8 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x563ee308efa0 'msec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x563ee30a74c0 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x563ee30a7488 <col:23, col:53> 'int'
|           `-BinaryOperator 0x563ee30a7468 <col:24, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x563ee30a7438 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x563ee30a73f8 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x563ee30860e0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x563ee30a7450 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x563ee30a7418 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x563ee3086050 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x563ee308f178 <line:514:5, line:516:5> line:514:28 used usec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x563ee308f0e8 <col:43, col:52> col:52 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x563ee30a7650 <col:58, line:516:5>
|   `-ReturnStmt 0x563ee30a7640 <line:515:9, col:53>
|     `-BinaryOperator 0x563ee30a7620 <col:16, col:53> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x563ee30a75f0 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x563ee30a7520 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x563ee308f0e8 'usec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x563ee30a7608 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x563ee30a75d0 <col:23, col:53> 'int'
|           `-BinaryOperator 0x563ee30a75b0 <col:24, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x563ee30a7580 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x563ee30a7540 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x563ee30860e0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x563ee30a7598 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x563ee30a7560 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x563ee3085f30 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x563ee308f2c0 <line:518:5, line:520:5> line:518:28 used nsec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x563ee308f230 <col:43, col:52> col:52 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x563ee30a7798 <col:58, line:520:5>
|   `-ReturnStmt 0x563ee30a7788 <line:519:9, col:53>
|     `-BinaryOperator 0x563ee30a7768 <col:16, col:53> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x563ee30a7738 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x563ee30a7668 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x563ee308f230 'nsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x563ee30a7750 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x563ee30a7718 <col:23, col:53> 'int'
|           `-BinaryOperator 0x563ee30a76f8 <col:24, col:39> 'int' '/'
|             |-ImplicitCastExpr 0x563ee30a76c8 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x563ee30a7688 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x563ee3085d80 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x563ee30a76e0 <col:39> 'int' <IntegralCast>
|               `-DeclRefExpr 0x563ee30a76a8 <col:39> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x563ee30860e0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x563ee308f408 <line:522:5, line:524:5> line:522:28 used subsec_to_msec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x563ee308f378 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x563ee30a78e0 <col:60, line:524:5>
|   `-ReturnStmt 0x563ee30a78d0 <line:523:9, col:55>
|     `-BinaryOperator 0x563ee30a78b0 <col:16, col:55> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x563ee30a7880 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x563ee30a77b0 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x563ee308f378 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x563ee30a7898 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x563ee30a7860 <col:25, col:55> 'int'
|           `-BinaryOperator 0x563ee30a7840 <col:26, col:43> 'int' '/'
|             |-ImplicitCastExpr 0x563ee30a7810 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x563ee30a77d0 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x563ee30860e0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x563ee30a7828 <col:43> 'int' <IntegralCast>
|               `-DeclRefExpr 0x563ee30a77f0 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x563ee3086050 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x563ee308f550 <line:526:5, line:528:5> line:526:28 used subsec_to_usec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x563ee308f4c0 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x563ee30a7a28 <col:60, line:528:5>
|   `-ReturnStmt 0x563ee30a7a18 <line:527:9, col:55>
|     `-BinaryOperator 0x563ee30a79f8 <col:16, col:55> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x563ee30a79c8 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x563ee30a78f8 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x563ee308f4c0 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x563ee30a79e0 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x563ee30a79a8 <col:25, col:55> 'int'
|           `-BinaryOperator 0x563ee30a7988 <col:26, col:43> 'int' '/'
|             |-ImplicitCastExpr 0x563ee30a7958 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x563ee30a7918 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x563ee30860e0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x563ee30a7970 <col:43> 'int' <IntegralCast>
|               `-DeclRefExpr 0x563ee30a7938 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x563ee3085f30 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x563ee308f698 <line:530:5, line:532:5> line:530:28 used subsec_to_nsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x563ee308f608 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x563ee30a7b70 <col:60, line:532:5>
|   `-ReturnStmt 0x563ee30a7b60 <line:531:9, col:55>
|     `-BinaryOperator 0x563ee30a7b40 <col:16, col:55> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x563ee30a7b10 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x563ee30a7a40 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x563ee308f608 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x563ee30a7b28 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x563ee30a7af0 <col:25, col:55> 'int'
|           `-BinaryOperator 0x563ee30a7ad0 <col:26, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x563ee30a7aa0 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x563ee30a7a60 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x563ee3085d80 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x563ee30a7ab8 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x563ee30a7a80 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x563ee30860e0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXRecordDecl 0x563ee308f740 prev 0x563ee3086580 <line:539:5, line:566:5> line:539:11 referenced union rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x563ee308f838 <col:5, col:11> col:11 implicit union rep_t
| |-FieldDecl 0x563ee308f8d8 <line:541:9, col:17> col:17 referenced x 'int64_t':'long'
| |-CXXConstructorDecl 0x563ee30966a0 <line:539:11> col:11 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x563ee3096a88 <col:11>
| |-CXXConstructorDecl 0x563ee3096780 <col:11> col:11 implicit used constexpr rep_t 'void (const Timestamp::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x563ee3096868 <col:11> col:11 'const Timestamp::rep_t &'
| | `-CompoundStmt 0x563ee30971d0 <col:11>
| |-CXXConstructorDecl 0x563ee3096908 <col:11> col:11 implicit used constexpr rep_t 'void (Timestamp::rep_t &&) noexcept' inline default trivial
| | |-ParmVarDecl 0x563ee3096a18 <col:11> col:11 'Timestamp::rep_t &&'
| | `-CompoundStmt 0x563ee3098a28 <col:11>
| |-CXXDestructorDecl 0x563ee3097d38 <col:11> col:11 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x563ee2d9e8e8 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(const Timestamp::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x563ee2d9e9f8 <col:11> col:11 'const Timestamp::rep_t &'
| | `-CompoundStmt 0x563ee2d9f2c0 <col:11>
| |   `-ReturnStmt 0x563ee2d9f2b0 <col:11>
| |     `-UnaryOperator 0x563ee2d9f298 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x563ee2d9f288 <col:11> 'Timestamp::rep_t *' this
| `-CXXMethodDecl 0x563ee2d9ea68 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(Timestamp::rep_t &&) noexcept' inline default trivial
|   |-ParmVarDecl 0x563ee2d9eb78 <col:11> col:11 'Timestamp::rep_t &&'
|   `-CompoundStmt 0x563ee3166830 <col:11>
|     `-ReturnStmt 0x563ee3166820 <col:11>
|       `-UnaryOperator 0x563ee3166808 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x563ee31667f8 <col:11> 'Timestamp::rep_t *' this
|-EnumDecl 0x563ee308f940 <line:571:5, line:577:5> line:571:10 referenced warp_class_type
| |-EnumConstantDecl 0x563ee308fa40 <line:572:9, col:21> col:9 warp_none 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x563ee308fc40 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563ee308fa20 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x563ee308fa00 <col:21> 'int' 0
| |-EnumConstantDecl 0x563ee308fad0 <line:573:9, col:23> col:9 warp_linear 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x563ee308fc58 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563ee308fab0 <col:23> 'int' Int: 1
| |     `-IntegerLiteral 0x563ee308fa90 <col:23> 'int' 1
| |-EnumConstantDecl 0x563ee308fb60 <line:574:9, col:23> col:9 referenced warp_nowait 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x563ee308fc70 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563ee308fb40 <col:23> 'int' Int: 2
| |     `-IntegerLiteral 0x563ee308fb20 <col:23> 'int' 2
| `-EnumConstantDecl 0x563ee308fbf0 <line:576:9, col:27> col:9 warp_simulation 'Timestamp::warp_class_type'
|   `-ImplicitCastExpr 0x563ee308fc88 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x563ee308fbd0 <col:27> 'int' Int: 3
|       `-IntegerLiteral 0x563ee308fbb0 <col:27> 'int' 3
|-CXXMethodDecl 0x563ee308fcc8 <line:581:5, col:34> col:23 warp_class 'int ()' static inline
|-CXXMethodDecl 0x563ee308fd90 <line:588:5, col:37> col:26 warp_speed 'double ()' static inline
|-CXXMethodDecl 0x563ee308ff98 <line:621:5, col:65> col:17 warp_set_class 'void (Timestamp::warp_class_type, double)' static
| |-ParmVarDecl 0x563ee308fe40 <col:32, col:48> col:48 w 'Timestamp::warp_class_type'
| `-ParmVarDecl 0x563ee308fec0 <col:51, col:62> col:58 s 'double' cinit
|   `-FloatingLiteral 0x563ee3092500 <col:62> 'double' 1.000000e+00
|-CXXMethodDecl 0x563ee30901a8 <line:628:5, col:82> col:17 warp_set_now 'void (const Timestamp &, const Timestamp &)' static
| |-ParmVarDecl 0x563ee3090058 <col:30, col:47> col:47 t_system 'const Timestamp &'
| `-ParmVarDecl 0x563ee30900d0 <col:57, col:74> col:74 t_steady 'const Timestamp &'
|-CXXMethodDecl 0x563ee3090278 <line:632:5, col:40> col:22 warp_real_delay 'Timestamp () const' inline
|-CXXMethodDecl 0x563ee3090338 <line:635:5, col:37> col:24 used warp_jumping 'bool ()' static inline
|-CXXMethodDecl 0x563ee30904a8 <line:640:5, col:57> col:17 warp_jump_steady 'void (const Timestamp &)' static
| `-ParmVarDecl 0x563ee30903e8 <col:34, col:51> col:51 expiry 'const Timestamp &'
|-CXXMethodDecl 0x563ee3090570 <line:647:5, col:42> col:29 now_unwarped 'Timestamp ()' static inline
|-CXXMethodDecl 0x563ee3090630 <line:653:5, col:37> col:17 used assign_now_unwarped 'void ()' inline
|-CXXMethodDecl 0x563ee30906f0 <line:659:5, col:49> col:29 now_steady_unwarped 'Timestamp ()' static inline
|-CXXMethodDecl 0x563ee30907b0 <line:666:5, col:44> col:17 used assign_now_steady_unwarped 'void ()' inline
|-AccessSpecDecl 0x563ee3090850 <line:670:3, col:10> col:3 private
|-FieldDecl 0x563ee3090888 <line:672:5, col:11> col:11 referenced _t 'Timestamp::rep_t'
|-CXXMethodDecl 0x563ee30908f8 <line:674:5, line:684:5> line:674:17 used add_fix 'void ()' inline
| `-CompoundStmt 0x563ee30a7b88 <col:27, line:684:5>
|-CXXMethodDecl 0x563ee30909b8 <line:686:5, line:696:5> line:686:17 used sub_fix 'void ()' inline
| `-CompoundStmt 0x563ee30a7b98 <col:27, line:696:5>
|-CXXMethodDecl 0x563ee3090bb8 <line:698:5, line:700:5> line:698:30 used value_div 'Timestamp::value_type (Timestamp::value_type, uint32_t)' static inline
| |-ParmVarDecl 0x563ee3090a68 <col:40, col:51> col:51 used a 'Timestamp::value_type':'long'
| |-ParmVarDecl 0x563ee3090ae0 <col:54, col:63> col:63 used b 'uint32_t':'unsigned int'
| `-CompoundStmt 0x563ee30a7d20 <col:66, line:700:5>
|   `-ReturnStmt 0x563ee30a7d10 <line:699:9, col:31>
|     `-CallExpr 0x563ee30a7cb0 <col:16, col:31> 'int64_t':'long'
|       |-ImplicitCastExpr 0x563ee30a7c98 <col:16> 'int64_t (*)(int64_t, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x563ee30a7c48 <col:16> 'int64_t (int64_t, uint32_t)' lvalue Function 0x563ee2f12f68 'int_divide' 'int64_t (int64_t, uint32_t)'
|       |-ImplicitCastExpr 0x563ee30a7ce0 <col:27> 'Timestamp::value_type':'long' <LValueToRValue>
|       | `-DeclRefExpr 0x563ee30a7c08 <col:27> 'Timestamp::value_type':'long' lvalue ParmVar 0x563ee3090a68 'a' 'Timestamp::value_type':'long'
|       `-ImplicitCastExpr 0x563ee30a7cf8 <col:30> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x563ee30a7c28 <col:30> 'uint32_t':'unsigned int' lvalue ParmVar 0x563ee3090ae0 'b' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x563ee3090f28 <line:702:5, line:707:5> line:702:24 value_div_mod 'void (int32_t &, int32_t &, Timestamp::value_type, uint32_t)' static inline
| |-ParmVarDecl 0x563ee3090c78 <col:38, col:47> col:47 used div 'int32_t &'
| |-ParmVarDecl 0x563ee3090cf0 <col:52, col:61> col:61 used rem 'int32_t &'
| |-ParmVarDecl 0x563ee3090d68 <line:703:38, col:49> col:49 used a 'Timestamp::value_type':'long'
| |-ParmVarDecl 0x563ee3090de0 <col:52, col:61> col:61 used b 'uint32_t':'unsigned int'
| `-CompoundStmt 0x563ee30a8070 <col:64, line:707:5>
|   |-DeclStmt 0x563ee30a7db0 <line:704:9, col:24>
|   | `-VarDecl 0x563ee30a7d48 <col:9, col:20> col:20 used quot 'Timestamp::value_type':'long'
|   |-BinaryOperator 0x563ee30a7fc0 <line:705:9, col:39> 'int32_t':'int' lvalue '='
|   | |-DeclRefExpr 0x563ee30a7dc8 <col:9> 'int32_t':'int' lvalue ParmVar 0x563ee3090cf0 'rem' 'int32_t &'
|   | `-ImplicitCastExpr 0x563ee30a7fa8 <col:15, col:39> 'int32_t':'int' <IntegralCast>
|   |   `-CallExpr 0x563ee30a7f40 <col:15, col:39> 'uint32_t':'unsigned int'
|   |     |-ImplicitCastExpr 0x563ee30a7f28 <col:15> 'uint32_t (*)(int64_t, uint32_t, int64_t &)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x563ee30a7ea8 <col:15> 'uint32_t (int64_t, uint32_t, int64_t &)' lvalue Function 0x563ee2f18238 'int_remainder' 'uint32_t (int64_t, uint32_t, int64_t &)'
|   |     |-ImplicitCastExpr 0x563ee30a7f78 <col:29> 'Timestamp::value_type':'long' <LValueToRValue>
|   |     | `-DeclRefExpr 0x563ee30a7e48 <col:29> 'Timestamp::value_type':'long' lvalue ParmVar 0x563ee3090d68 'a' 'Timestamp::value_type':'long'
|   |     |-ImplicitCastExpr 0x563ee30a7f90 <col:32> 'uint32_t':'unsigned int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x563ee30a7e68 <col:32> 'uint32_t':'unsigned int' lvalue ParmVar 0x563ee3090de0 'b' 'uint32_t':'unsigned int'
|   |     `-DeclRefExpr 0x563ee30a7e88 <col:35> 'Timestamp::value_type':'long' lvalue Var 0x563ee30a7d48 'quot' 'Timestamp::value_type':'long'
|   `-BinaryOperator 0x563ee30a8050 <line:706:9, col:15> 'int32_t':'int' lvalue '='
|     |-DeclRefExpr 0x563ee30a7fe0 <col:9> 'int32_t':'int' lvalue ParmVar 0x563ee3090c78 'div' 'int32_t &'
|     `-ImplicitCastExpr 0x563ee30a8038 <col:15> 'int32_t':'int' <IntegralCast>
|       `-ImplicitCastExpr 0x563ee30a8020 <col:15> 'Timestamp::value_type':'long' <LValueToRValue>
|         `-DeclRefExpr 0x563ee30a8000 <col:15> 'Timestamp::value_type':'long' lvalue Var 0x563ee30a7d48 'quot' 'Timestamp::value_type':'long'
|-CXXMethodDecl 0x563ee30911c8 <line:709:5, col:67> col:17 used assign_now 'void (bool, bool, bool)' inline
| |-ParmVarDecl 0x563ee3090ff8 <col:28, col:33> col:33 recent 'bool'
| |-ParmVarDecl 0x563ee3091070 <col:41, col:46> col:46 steady 'bool'
| `-ParmVarDecl 0x563ee30910e8 <col:54, col:59> col:59 unwarped 'bool'
|-CXXMethodDecl 0x563ee3091468 <line:712:5, col:98> col:24 warp_adjust 'void (bool, const Timestamp &, const Timestamp &)' static inline
| |-ParmVarDecl 0x563ee3091290 <col:36, col:41> col:41 steady 'bool'
| |-ParmVarDecl 0x563ee3091308 <col:49, col:66> col:66 t_raw 'const Timestamp &'
| `-ParmVarDecl 0x563ee3091380 <col:73, col:90> col:90 t_warped 'const Timestamp &'
|-CXXMethodDecl 0x563ee30915f8 <line:713:5, col:42> col:22 warped 'Timestamp (bool) const' inline
| `-ParmVarDecl 0x563ee3091530 <col:29, col:34> col:34 steady 'bool'
|-CXXMethodDecl 0x563ee30917f8 <line:714:5, col:41> col:10 used warp 'void (bool, bool)'
| |-ParmVarDecl 0x563ee30916b0 <col:15, col:20> col:20 steady 'bool'
| `-ParmVarDecl 0x563ee3091728 <col:28, col:33> col:33 from_now 'bool'
|-FriendDecl 0x563ee3091ac8 <line:717:5, col:73> col:24
| `-FunctionDecl 0x563ee3091a08 parent 0x563ee2b90278 <col:5, col:73> col:24 used operator== 'bool (const Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x563ee30918b8 <col:35, col:52> col:52 a 'const Timestamp &'
|   `-ParmVarDecl 0x563ee3091930 <col:55, col:72> col:72 b 'const Timestamp &'
|-FriendDecl 0x563ee3091ce8 <line:718:5, col:72> col:24
| `-FunctionDecl 0x563ee3091c28 parent 0x563ee2b90278 <col:5, col:72> col:24 used operator< 'bool (const Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x563ee3091b18 <col:34, col:51> col:51 a 'const Timestamp &'
|   `-ParmVarDecl 0x563ee3091b90 <col:54, col:71> col:71 b 'const Timestamp &'
|-FriendDecl 0x563ee3091eb0 <line:719:5, col:57> col:29
| `-FunctionDecl 0x563ee3091df8 parent 0x563ee2b90278 <col:5, col:57> col:29 operator- 'Timestamp (const Timestamp &)' inline
|   `-ParmVarDecl 0x563ee3091d38 <col:39, col:56> col:56 b 'const Timestamp &'
|-FriendDecl 0x563ee3092138 <line:720:5, col:73> col:30
| `-FunctionDecl 0x563ee3092078 parent 0x563ee2b90278 <col:5, col:73> col:30 used operator+= 'Timestamp &(Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x563ee3091f28 <col:41, col:52> col:52 a 'Timestamp &'
|   `-ParmVarDecl 0x563ee3091fa0 <col:55, col:72> col:72 b 'const Timestamp &'
|-FriendDecl 0x563ee3092358 <line:721:5, col:73> col:30
| `-FunctionDecl 0x563ee3092298 parent 0x563ee2b90278 <col:5, col:73> col:30 used operator-= 'Timestamp &(Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x563ee3092188 <col:41, col:52> col:52 a 'Timestamp &'
|   `-ParmVarDecl 0x563ee3092200 <col:55, col:72> col:72 b 'const Timestamp &'
|-CXXConstructorDecl 0x563ee3097be0 <line:122:7> col:7 implicit used constexpr Timestamp 'void (const Timestamp &) noexcept' inline default trivial
| |-ParmVarDecl 0x563ee3097cc8 <col:7> col:7 used 'const Timestamp &'
| |-CXXCtorInitializer Field 0x563ee3090888 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x563ee3098738 <col:7> 'Timestamp::rep_t' 'void (const Timestamp::rep_t &) noexcept'
| |   `-MemberExpr 0x563ee30986f0 <col:7> 'const Timestamp::rep_t' lvalue ._t 0x563ee3090888
| |     `-DeclRefExpr 0x563ee30986d0 <col:7> 'const Timestamp' lvalue ParmVar 0x563ee3097cc8 '' 'const Timestamp &'
| `-CompoundStmt 0x563ee3098798 <col:7>
|-CXXConstructorDecl 0x563ee3097e48 <col:7> col:7 implicit used constexpr Timestamp 'void (Timestamp &&) noexcept' inline default trivial
| |-ParmVarDecl 0x563ee3097f58 <col:7> col:7 used 'Timestamp &&'
| |-CXXCtorInitializer Field 0x563ee3090888 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x563ee3098a38 <col:7> 'Timestamp::rep_t' 'void (Timestamp::rep_t &&) noexcept'
| |   `-MemberExpr 0x563ee30989e0 <col:7> 'Timestamp::rep_t' xvalue ._t 0x563ee3090888
| |     `-CXXStaticCastExpr 0x563ee30989b0 <col:7> 'Timestamp' xvalue static_cast<class Timestamp &&> <NoOp>
| |       `-DeclRefExpr 0x563ee3098980 <col:7> 'Timestamp' lvalue ParmVar 0x563ee3097f58 '' 'Timestamp &&'
| `-CompoundStmt 0x563ee3098a98 <col:7>
|-CXXDestructorDecl 0x563ee3098008 <col:7> col:7 implicit referenced ~Timestamp 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x563ee2d9e738 <col:7> col:7 implicit used operator= 'Timestamp &(const Timestamp &) noexcept' inline default trivial
| |-ParmVarDecl 0x563ee2d9e848 <col:7> col:7 used 'const Timestamp &'
| `-CompoundStmt 0x563ee2d9f338 <col:7>
|   |-CXXMemberCallExpr 0x563ee2d9f2d8 <col:7> 'Timestamp::rep_t' lvalue
|   | |-MemberExpr 0x563ee2d9f218 <col:7> '<bound member function type>' .operator= 0x563ee2d9e8e8
|   | | `-MemberExpr 0x563ee2d9f128 <col:7> 'Timestamp::rep_t' lvalue ->_t 0x563ee3090888
|   | |   `-CXXThisExpr 0x563ee2d9f118 <col:7> 'Timestamp *' this
|   | `-MemberExpr 0x563ee2d9f1e8 <col:7> 'const Timestamp::rep_t' lvalue ._t 0x563ee3090888
|   |   `-DeclRefExpr 0x563ee2d9f1c8 <col:7> 'const Timestamp' lvalue ParmVar 0x563ee2d9e848 '' 'const Timestamp &'
|   `-ReturnStmt 0x563ee2d9f328 <col:7>
|     `-UnaryOperator 0x563ee2d9f310 <col:7> 'Timestamp' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x563ee2d9f300 <col:7> 'Timestamp *' this
`-CXXMethodDecl 0x563ee2d9ebe8 <col:7> col:7 implicit used operator= 'Timestamp &(Timestamp &&) noexcept' inline default trivial
  |-ParmVarDecl 0x563ee2d9ecf8 <col:7> col:7 used 'Timestamp &&'
  `-CompoundStmt 0x563ee31668a8 <col:7>
    |-CXXMemberCallExpr 0x563ee3166848 <col:7> 'Timestamp::rep_t' lvalue
    | |-MemberExpr 0x563ee31667b0 <col:7> '<bound member function type>' .operator= 0x563ee2d9ea68
    | | `-MemberExpr 0x563ee3166680 <col:7> 'Timestamp::rep_t' lvalue ->_t 0x563ee3090888
    | |   `-CXXThisExpr 0x563ee3166670 <col:7> 'Timestamp *' this
    | `-MemberExpr 0x563ee3166780 <col:7> 'Timestamp::rep_t' xvalue ._t 0x563ee3090888
    |   `-CXXStaticCastExpr 0x563ee3166750 <col:7> 'Timestamp' xvalue static_cast<class Timestamp &&> <NoOp>
    |     `-DeclRefExpr 0x563ee3166720 <col:7> 'Timestamp' lvalue ParmVar 0x563ee2d9ecf8 '' 'Timestamp &&'
    `-ReturnStmt 0x563ee3166898 <col:7>
      `-UnaryOperator 0x563ee3166880 <col:7> 'Timestamp' lvalue prefix '*' cannot overflow
        `-CXXThisExpr 0x563ee3166870 <col:7> 'Timestamp *' this

Layout: <CGRecordLayout
  LLVMType:%class.Timestamp = type { %"union.Timestamp::rep_t" }
  NonVirtualBaseLLVMType:%class.Timestamp = type { %"union.Timestamp::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x563ee316fde8 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'TimerSet::heap_element'
|-CXXRecordDecl 0x563ee316fff8 prev 0x563ee316fde8 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x563ee3171440 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<heap_element>::type':'sized_array_memory<16>'
| `-ElaboratedType 0x563ee31713f0 'typename array_memory<heap_element>::type' sugar
|   `-TypedefType 0x563ee31713d0 'conditional<true, sized_array_memory<16>, typed_array_memory<TimerSet::heap_element> >::type' sugar
|     |-Typedef 0x563ee3171280 'type'
|     `-SubstTemplateTypeParmType 0x563ee31710a0 'sized_array_memory<16>' sugar
|       |-TemplateTypeParmType 0x563ee2e5b0f0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563ee2e5b098 'T'
|       `-RecordType 0x563ee3170bf0 'sized_array_memory<16>'
|         `-ClassTemplateSpecialization 0x563ee3170b08 'sized_array_memory'
|-FieldDecl 0x563ee3175070 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<TimerSet::heap_element>::array_memory_type>':'vector_memory<sized_array_memory<16> >' mutable
|-AccessSpecDecl 0x563ee31750c0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x563ee31750f8 <line:118:5, col:15> col:15 value_type 'TimerSet::heap_element':'TimerSet::heap_element'
| `-SubstTemplateTypeParmType 0x563ee3170090 'TimerSet::heap_element' sugar
|   |-TemplateTypeParmType 0x563ee2e92de0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x563ee2e92d88 'T'
|   `-RecordType 0x563ee316eff0 'TimerSet::heap_element'
|     `-CXXRecord 0x563ee316ef60 'heap_element'
|-TypedefDecl 0x563ee31751b8 <line:119:5, col:16> col:16 reference 'TimerSet::heap_element &'
| `-LValueReferenceType 0x563ee3175180 'TimerSet::heap_element &'
|   `-SubstTemplateTypeParmType 0x563ee3170090 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x563ee2e92de0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x563ee2e92d88 'T'
|     `-RecordType 0x563ee316eff0 'TimerSet::heap_element'
|       `-CXXRecord 0x563ee316ef60 'heap_element'
|-TypedefDecl 0x563ee3175248 <line:120:5, col:22> col:22 const_reference 'const TimerSet::heap_element &'
| `-LValueReferenceType 0x563ee3175210 'const TimerSet::heap_element &'
|   `-QualType 0x563ee3170091 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x563ee3170090 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x563ee2e92de0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563ee2e92d88 'T'
|       `-RecordType 0x563ee316eff0 'TimerSet::heap_element'
|         `-CXXRecord 0x563ee316ef60 'heap_element'
|-TypedefDecl 0x563ee31752d8 <line:121:5, col:16> col:16 pointer 'TimerSet::heap_element *'
| `-PointerType 0x563ee31752a0 'TimerSet::heap_element *'
|   `-SubstTemplateTypeParmType 0x563ee3170090 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x563ee2e92de0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x563ee2e92d88 'T'
|     `-RecordType 0x563ee316eff0 'TimerSet::heap_element'
|       `-CXXRecord 0x563ee316ef60 'heap_element'
|-TypedefDecl 0x563ee3175398 <line:122:5, col:22> col:22 const_pointer 'const TimerSet::heap_element *'
| `-PointerType 0x563ee3175360 'const TimerSet::heap_element *'
|   `-QualType 0x563ee3170091 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x563ee3170090 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x563ee2e92de0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563ee2e92d88 'T'
|       `-RecordType 0x563ee316eff0 'TimerSet::heap_element'
|         `-CXXRecord 0x563ee316ef60 'heap_element'
|-TypedefDecl 0x563ee3176220 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<heap_element>::type':'const TimerSet::heap_element &'
| `-ElaboratedType 0x563ee31761d0 'typename fast_argument<heap_element>::type' sugar
|   `-TypedefType 0x563ee31761b0 'fast_argument<TimerSet::heap_element, true>::type' sugar
|     |-Typedef 0x563ee31760e8 'type'
|     `-LValueReferenceType 0x563ee31760b0 'const TimerSet::heap_element &'
|       `-QualType 0x563ee3175e51 'const TimerSet::heap_element' const
|         `-SubstTemplateTypeParmType 0x563ee3175e50 'TimerSet::heap_element' sugar
|           |-TemplateTypeParmType 0x563ee2e657c0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x563ee2e65768 'T'
|           `-RecordType 0x563ee316eff0 'TimerSet::heap_element'
|             `-CXXRecord 0x563ee316ef60 'heap_element'
|-TypedefDecl 0x563ee3176288 <line:126:5, col:22> col:22 const_access_type 'const TimerSet::heap_element &'
| `-LValueReferenceType 0x563ee3175210 'const TimerSet::heap_element &'
|   `-QualType 0x563ee3170091 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x563ee3170090 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x563ee2e92de0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563ee2e92d88 'T'
|       `-RecordType 0x563ee316eff0 'TimerSet::heap_element'
|         `-CXXRecord 0x563ee316ef60 'heap_element'
|-TypedefDecl 0x563ee31762e0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x563ee2b90370 'int'
|-TypedefDecl 0x563ee3176348 <line:130:5, col:16> col:16 iterator 'TimerSet::heap_element *'
| `-PointerType 0x563ee31752a0 'TimerSet::heap_element *'
|   `-SubstTemplateTypeParmType 0x563ee3170090 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x563ee2e92de0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x563ee2e92d88 'T'
|     `-RecordType 0x563ee316eff0 'TimerSet::heap_element'
|       `-CXXRecord 0x563ee316ef60 'heap_element'
|-TypedefDecl 0x563ee31763b0 <line:131:5, col:22> col:22 const_iterator 'const TimerSet::heap_element *'
| `-PointerType 0x563ee3175360 'const TimerSet::heap_element *'
|   `-QualType 0x563ee3170091 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x563ee3170090 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x563ee2e92de0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563ee2e92d88 'T'
|       `-RecordType 0x563ee316eff0 'TimerSet::heap_element'
|         `-CXXRecord 0x563ee316ef60 'heap_element'
|-EnumDecl 0x563ee3176408 <line:134:5> col:5
| `-EnumConstantDecl 0x563ee3176500 <col:12, col:40> col:12 RESERVE_GROW 'Vector<TimerSet::heap_element>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x563ee31764e0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x563ee2e94468 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x563ee2e94440 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x563ee2e94420 <col:40> 'int' 1
|-CXXConstructorDecl 0x563ee3176588 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x563ee3176818 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x563ee3176640 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x563ee31766e0 <col:41, col:61> col:61 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXConstructorDecl 0x563ee3176ad8 <line:139:5, col:37> col:12 Vector 'void (const Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x563ee31769c0 <col:19, col:36> col:36 x 'const Vector<TimerSet::heap_element> &'
|-CXXConstructorDecl 0x563ee3176d98 <line:141:5, col:32> col:12 Vector 'void (Vector<TimerSet::heap_element> &&)' inline
| `-ParmVarDecl 0x563ee3176c80 <col:19, col:31> col:31 x 'Vector<TimerSet::heap_element> &&'
|-CXXMethodDecl 0x563ee31770e0 <line:144:5, col:51> col:23 operator= 'Vector<TimerSet::heap_element> &(const Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x563ee3176fc0 <col:33, col:50> col:50 x 'const Vector<TimerSet::heap_element> &'
|-CXXMethodDecl 0x563ee31773f0 <line:146:5, col:46> col:23 operator= 'Vector<TimerSet::heap_element> &(Vector<TimerSet::heap_element> &&)' inline
| `-ParmVarDecl 0x563ee31772d0 <col:33, col:45> col:45 x 'Vector<TimerSet::heap_element> &&'
|-CXXMethodDecl 0x563ee31776e0 <line:148:5, col:70> col:23 assign 'Vector<TimerSet::heap_element> &(Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x563ee3177528 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x563ee31775a0 <col:43, col:69> col:63 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x563ee3177838 <line:150:5, col:55> col:49 begin 'Vector<TimerSet::heap_element>::iterator ()'
| |-NoInlineAttr 0x563ee3177918 <col:20> Inherited
| `-OptimizeNoneAttr 0x563ee3177970 <col:30> Inherited
|-CXXMethodDecl 0x563ee31779b8 <line:151:5, col:53> col:49 end 'Vector<TimerSet::heap_element>::iterator ()'
| |-NoInlineAttr 0x563ee3177a68 <col:20> Inherited
| `-OptimizeNoneAttr 0x563ee3177ac0 <col:30> Inherited
|-CXXMethodDecl 0x563ee3177b88 <line:152:5, col:63> col:55 begin 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x563ee3177c38 <col:20> Inherited
| `-OptimizeNoneAttr 0x563ee3177c90 <col:30> Inherited
|-CXXMethodDecl 0x563ee3177cd8 <line:153:5, col:61> col:55 end 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x563ee3177d88 <col:20> Inherited
| `-OptimizeNoneAttr 0x563ee3177de0 <col:30> Inherited
|-CXXMethodDecl 0x563ee3177e28 <line:154:5, col:64> col:55 cbegin 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x563ee3177ed8 <col:20> Inherited
| `-OptimizeNoneAttr 0x563ee3177f30 <col:30> Inherited
|-CXXMethodDecl 0x563ee3177f78 <line:155:5, col:62> col:55 cend 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x563ee3178028 <col:20> Inherited
| `-OptimizeNoneAttr 0x563ee3178080 <col:30> Inherited
|-CXXMethodDecl 0x563ee31780a8 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x563ee3178158 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x563ee3178208 <line:159:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x563ee31783c8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x563ee31782b8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x563ee3178330 <col:37, col:63> col:57 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x563ee3178518 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x563ee3178488 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x563ee31786c8 <line:163:5, col:65> col:43 operator[] 'TimerSet::heap_element &(Vector::size_type)'
| |-ParmVarDecl 0x563ee31785d0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x563ee3178780 <col:20>
| `-OptimizeNoneAttr 0x563ee31787d8 <col:30>
|-CXXMethodDecl 0x563ee31788f8 <line:164:5, col:73> col:49 operator[] 'const TimerSet::heap_element &(Vector::size_type) const'
| |-ParmVarDecl 0x563ee3178800 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x563ee31789b0 <col:20>
| `-OptimizeNoneAttr 0x563ee3178a08 <col:30>
|-CXXMethodDecl 0x563ee3178ac0 <line:165:5, col:29> col:15 at 'TimerSet::heap_element &(Vector::size_type)' inline
| `-ParmVarDecl 0x563ee3178a30 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x563ee3178c08 <line:166:5, col:37> col:21 at 'const TimerSet::heap_element &(Vector::size_type) const' inline
| `-ParmVarDecl 0x563ee3178b78 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x563ee3178d38 <line:167:5, col:21> col:15 front 'TimerSet::heap_element &()' inline
|-CXXMethodDecl 0x563ee3178e68 <line:168:5, col:29> col:21 front 'const TimerSet::heap_element &() const' inline
|-CXXMethodDecl 0x563ee3178f38 <line:169:5, col:20> col:15 back 'TimerSet::heap_element &()' inline
|-CXXMethodDecl 0x563ee3179008 <line:170:5, col:28> col:21 back 'const TimerSet::heap_element &() const' inline
|-CXXMethodDecl 0x563ee3179148 <line:172:5, col:39> col:15 used unchecked_at 'TimerSet::heap_element &(Vector::size_type)' inline
| `-ParmVarDecl 0x563ee31790b8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x563ee3179290 <line:173:5, col:47> col:21 unchecked_at 'const TimerSet::heap_element &(Vector::size_type) const' inline
| `-ParmVarDecl 0x563ee3179200 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x563ee31793d8 <line:174:5, col:59> col:15 at_u 'TimerSet::heap_element &(Vector::size_type)' inline
| |-ParmVarDecl 0x563ee3179348 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x563ee3179490 <col:48> Inherited "" ""
|-CXXMethodDecl 0x563ee3179590 <line:175:5, col:71> col:21 at_u 'const TimerSet::heap_element &(Vector::size_type) const' inline
| |-ParmVarDecl 0x563ee3179500 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x563ee3179648 <col:60> Inherited "" ""
|-CXXMethodDecl 0x563ee3179708 <line:177:5, col:20> col:15 data 'TimerSet::heap_element *()' inline
|-CXXMethodDecl 0x563ee3179808 <line:178:5, col:28> col:21 data 'const TimerSet::heap_element *() const' inline
|-CXXMethodDecl 0x563ee31799b8 <line:180:5, col:48> col:17 push_back 'void (Vector<TimerSet::heap_element>::value_argument_type)' inline
| `-ParmVarDecl 0x563ee31798c8 <col:27, col:47> col:47 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-FunctionTemplateDecl 0x563ee317a1a8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x563ee3179a70 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<TimerSet::heap_element>':'fast_argument<TimerSet::heap_element, true>'
| `-CXXMethodDecl 0x563ee317a108 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (TimerSet::heap_element &&)' inline
|   `-ParmVarDecl 0x563ee317a008 <col:58, col:62> col:62 v 'TimerSet::heap_element &&'
|-CXXMethodDecl 0x563ee317a288 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x563ee317a3d8 <line:186:5, col:49> col:17 push_front 'void (Vector<TimerSet::heap_element>::value_argument_type)' inline
| `-ParmVarDecl 0x563ee317a348 <col:28, col:48> col:48 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x563ee317a490 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x563ee317a6d8 <line:189:5, col:62> col:21 insert 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x563ee317a550 <col:28, col:37> col:37 it 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
| `-ParmVarDecl 0x563ee317a5c8 <col:41, col:61> col:61 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x563ee317a898 <line:190:5, col:38> col:21 erase 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator)' inline
| `-ParmVarDecl 0x563ee317a7a8 <col:27, col:36> col:36 it 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
|-CXXMethodDecl 0x563ee317aae8 <line:191:5, col:49> col:21 erase 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator, Vector<TimerSet::heap_element>::iterator)' inline
| |-ParmVarDecl 0x563ee317a960 <col:27, col:36> col:36 a 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
| `-ParmVarDecl 0x563ee317a9d8 <col:39, col:48> col:48 b 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
|-CXXMethodDecl 0x563ee317aba8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x563ee317ae08 <line:195:5, col:34> col:17 swap 'void (Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x563ee317ad10 <col:22, col:33> col:33 x 'Vector<TimerSet::heap_element> &'
`-CXXDestructorDecl 0x563ee317aed8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x563ee317aed8

Layout: <CGRecordLayout
  LLVMType:%class.Vector.13 = type { %class.vector_memory.9 }
  NonVirtualBaseLLVMType:%class.Vector.13 = type { %class.vector_memory.9 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x563ee317b020 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Timer *'
|-CXXRecordDecl 0x563ee317b228 prev 0x563ee317b020 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x563ee317c370 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<Timer *>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x563ee317c320 'typename array_memory<Timer *>::type' sugar
|   `-TypedefType 0x563ee317c300 'conditional<true, sized_array_memory<8>, typed_array_memory<Timer *> >::type' sugar
|     |-Typedef 0x563ee317c1b0 'type'
|     `-SubstTemplateTypeParmType 0x563ee317bfd0 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x563ee2e5b0f0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563ee2e5b098 'T'
|       `-RecordType 0x563ee317bb20 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x563ee317ba38 'sized_array_memory'
|-FieldDecl 0x563ee3180000 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Timer *>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x563ee3180050 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x563ee3180088 <line:118:5, col:15> col:15 value_type 'Timer *':'Timer *'
| `-SubstTemplateTypeParmType 0x563ee317b2c0 'Timer *' sugar
|   |-TemplateTypeParmType 0x563ee2e92de0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x563ee2e92d88 'T'
|   `-PointerType 0x563ee30f7970 'Timer *'
|     `-RecordType 0x563ee30f6ac0 'Timer'
|       `-CXXRecord 0x563ee3160188 'Timer'
|-TypedefDecl 0x563ee3180148 <line:119:5, col:16> col:16 reference 'Timer *&'
| `-LValueReferenceType 0x563ee3180110 'Timer *&'
|   `-SubstTemplateTypeParmType 0x563ee317b2c0 'Timer *' sugar
|     |-TemplateTypeParmType 0x563ee2e92de0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x563ee2e92d88 'T'
|     `-PointerType 0x563ee30f7970 'Timer *'
|       `-RecordType 0x563ee30f6ac0 'Timer'
|         `-CXXRecord 0x563ee3160188 'Timer'
|-TypedefDecl 0x563ee3180208 <line:120:5, col:22> col:22 const_reference 'Timer *const &'
| `-LValueReferenceType 0x563ee31801d0 'Timer *const &'
|   `-QualType 0x563ee317b2c1 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x563ee317b2c0 'Timer *' sugar
|       |-TemplateTypeParmType 0x563ee2e92de0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563ee2e92d88 'T'
|       `-PointerType 0x563ee30f7970 'Timer *'
|         `-RecordType 0x563ee30f6ac0 'Timer'
|           `-CXXRecord 0x563ee3160188 'Timer'
|-TypedefDecl 0x563ee31802c8 <line:121:5, col:16> col:16 pointer 'Timer **'
| `-PointerType 0x563ee3180290 'Timer **'
|   `-SubstTemplateTypeParmType 0x563ee317b2c0 'Timer *' sugar
|     |-TemplateTypeParmType 0x563ee2e92de0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x563ee2e92d88 'T'
|     `-PointerType 0x563ee30f7970 'Timer *'
|       `-RecordType 0x563ee30f6ac0 'Timer'
|         `-CXXRecord 0x563ee3160188 'Timer'
|-TypedefDecl 0x563ee3180388 <line:122:5, col:22> col:22 const_pointer 'Timer *const *'
| `-PointerType 0x563ee3180350 'Timer *const *'
|   `-QualType 0x563ee317b2c1 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x563ee317b2c0 'Timer *' sugar
|       |-TemplateTypeParmType 0x563ee2e92de0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563ee2e92d88 'T'
|       `-PointerType 0x563ee30f7970 'Timer *'
|         `-RecordType 0x563ee30f6ac0 'Timer'
|           `-CXXRecord 0x563ee3160188 'Timer'
|-TypedefDecl 0x563ee3180f60 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<Timer *>::type':'Timer *'
| `-ElaboratedType 0x563ee3180f10 'typename fast_argument<Timer *>::type' sugar
|   `-TypedefType 0x563ee3180ef0 'fast_argument<Timer *, false>::type' sugar
|     |-Typedef 0x563ee3180e80 'type'
|     `-SubstTemplateTypeParmType 0x563ee3180c40 'Timer *' sugar
|       |-TemplateTypeParmType 0x563ee2e65ef0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563ee2e65ea0 'T'
|       `-PointerType 0x563ee30f7970 'Timer *'
|         `-RecordType 0x563ee30f6ac0 'Timer'
|           `-CXXRecord 0x563ee3160188 'Timer'
|-TypedefDecl 0x563ee3180fc8 <line:126:5, col:22> col:22 const_access_type 'Timer *const &'
| `-LValueReferenceType 0x563ee31801d0 'Timer *const &'
|   `-QualType 0x563ee317b2c1 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x563ee317b2c0 'Timer *' sugar
|       |-TemplateTypeParmType 0x563ee2e92de0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563ee2e92d88 'T'
|       `-PointerType 0x563ee30f7970 'Timer *'
|         `-RecordType 0x563ee30f6ac0 'Timer'
|           `-CXXRecord 0x563ee3160188 'Timer'
|-TypedefDecl 0x563ee3181020 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x563ee2b90370 'int'
|-TypedefDecl 0x563ee3181088 <line:130:5, col:16> col:16 iterator 'Timer **'
| `-PointerType 0x563ee3180290 'Timer **'
|   `-SubstTemplateTypeParmType 0x563ee317b2c0 'Timer *' sugar
|     |-TemplateTypeParmType 0x563ee2e92de0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x563ee2e92d88 'T'
|     `-PointerType 0x563ee30f7970 'Timer *'
|       `-RecordType 0x563ee30f6ac0 'Timer'
|         `-CXXRecord 0x563ee3160188 'Timer'
|-TypedefDecl 0x563ee31810f0 <line:131:5, col:22> col:22 const_iterator 'Timer *const *'
| `-PointerType 0x563ee3180350 'Timer *const *'
|   `-QualType 0x563ee317b2c1 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x563ee317b2c0 'Timer *' sugar
|       |-TemplateTypeParmType 0x563ee2e92de0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563ee2e92d88 'T'
|       `-PointerType 0x563ee30f7970 'Timer *'
|         `-RecordType 0x563ee30f6ac0 'Timer'
|           `-CXXRecord 0x563ee3160188 'Timer'
|-EnumDecl 0x563ee3181148 <line:134:5> col:5
| `-EnumConstantDecl 0x563ee3181240 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Timer *>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x563ee3181220 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x563ee2e94468 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x563ee2e94440 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x563ee2e94420 <col:40> 'int' 1
|-CXXConstructorDecl 0x563ee31812c8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x563ee3181558 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x563ee3181380 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x563ee3181420 <col:41, col:61> col:61 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXConstructorDecl 0x563ee3181818 <line:139:5, col:37> col:12 Vector 'void (const Vector<Timer *> &)' inline
| `-ParmVarDecl 0x563ee3181700 <col:19, col:36> col:36 x 'const Vector<Timer *> &'
|-CXXConstructorDecl 0x563ee3181ad8 <line:141:5, col:32> col:12 Vector 'void (Vector<Timer *> &&)' inline
| `-ParmVarDecl 0x563ee31819c0 <col:19, col:31> col:31 x 'Vector<Timer *> &&'
|-CXXMethodDecl 0x563ee3181e20 <line:144:5, col:51> col:23 operator= 'Vector<Timer *> &(const Vector<Timer *> &)' inline
| `-ParmVarDecl 0x563ee3181d00 <col:33, col:50> col:50 x 'const Vector<Timer *> &'
|-CXXMethodDecl 0x563ee3182130 <line:146:5, col:46> col:23 operator= 'Vector<Timer *> &(Vector<Timer *> &&)' inline
| `-ParmVarDecl 0x563ee3182010 <col:33, col:45> col:45 x 'Vector<Timer *> &&'
|-CXXMethodDecl 0x563ee3182420 <line:148:5, col:70> col:23 assign 'Vector<Timer *> &(Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x563ee3182268 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x563ee31822e0 <col:43, col:69> col:63 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x563ee3182578 <line:150:5, col:55> col:49 begin 'Vector<Timer *>::iterator ()'
| |-NoInlineAttr 0x563ee3182658 <col:20> Inherited
| `-OptimizeNoneAttr 0x563ee31826b0 <col:30> Inherited
|-CXXMethodDecl 0x563ee31826f8 <line:151:5, col:53> col:49 end 'Vector<Timer *>::iterator ()'
| |-NoInlineAttr 0x563ee31827a8 <col:20> Inherited
| `-OptimizeNoneAttr 0x563ee3182800 <col:30> Inherited
|-CXXMethodDecl 0x563ee31828c8 <line:152:5, col:63> col:55 begin 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x563ee3182978 <col:20> Inherited
| `-OptimizeNoneAttr 0x563ee31829d0 <col:30> Inherited
|-CXXMethodDecl 0x563ee3182a18 <line:153:5, col:61> col:55 end 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x563ee3182ac8 <col:20> Inherited
| `-OptimizeNoneAttr 0x563ee3182b20 <col:30> Inherited
|-CXXMethodDecl 0x563ee3182b68 <line:154:5, col:64> col:55 cbegin 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x563ee3182c18 <col:20> Inherited
| `-OptimizeNoneAttr 0x563ee3182c70 <col:30> Inherited
|-CXXMethodDecl 0x563ee3182cb8 <line:155:5, col:62> col:55 cend 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x563ee3182d68 <col:20> Inherited
| `-OptimizeNoneAttr 0x563ee3182dc0 <col:30> Inherited
|-CXXMethodDecl 0x563ee3182de8 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x563ee3182e98 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x563ee3182f48 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x563ee3183108 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x563ee3182ff8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x563ee3183070 <col:37, col:63> col:57 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x563ee3183258 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x563ee31831c8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x563ee3183408 <line:163:5, col:65> col:43 operator[] 'Timer *&(Vector::size_type)'
| |-ParmVarDecl 0x563ee3183310 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x563ee31834c0 <col:20>
| `-OptimizeNoneAttr 0x563ee3183518 <col:30>
|-CXXMethodDecl 0x563ee3183638 <line:164:5, col:73> col:49 operator[] 'Timer *const &(Vector::size_type) const'
| |-ParmVarDecl 0x563ee3183540 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x563ee31836f0 <col:20>
| `-OptimizeNoneAttr 0x563ee3183748 <col:30>
|-CXXMethodDecl 0x563ee3183800 <line:165:5, col:29> col:15 at 'Timer *&(Vector::size_type)' inline
| `-ParmVarDecl 0x563ee3183770 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x563ee3183948 <line:166:5, col:37> col:21 at 'Timer *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x563ee31838b8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x563ee3183a78 <line:167:5, col:21> col:15 front 'Timer *&()' inline
|-CXXMethodDecl 0x563ee3183ba8 <line:168:5, col:29> col:21 front 'Timer *const &() const' inline
|-CXXMethodDecl 0x563ee3183c78 <line:169:5, col:20> col:15 back 'Timer *&()' inline
|-CXXMethodDecl 0x563ee3183d48 <line:170:5, col:28> col:21 back 'Timer *const &() const' inline
|-CXXMethodDecl 0x563ee3183e88 <line:172:5, col:39> col:15 unchecked_at 'Timer *&(Vector::size_type)' inline
| `-ParmVarDecl 0x563ee3183df8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x563ee3183fd0 <line:173:5, col:47> col:21 unchecked_at 'Timer *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x563ee3183f40 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x563ee3184118 <line:174:5, col:59> col:15 at_u 'Timer *&(Vector::size_type)' inline
| |-ParmVarDecl 0x563ee3184088 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x563ee31841d0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x563ee31842d0 <line:175:5, col:71> col:21 at_u 'Timer *const &(Vector::size_type) const' inline
| |-ParmVarDecl 0x563ee3184240 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x563ee3184388 <col:60> Inherited "" ""
|-CXXMethodDecl 0x563ee3184448 <line:177:5, col:20> col:15 data 'Timer **()' inline
|-CXXMethodDecl 0x563ee3184548 <line:178:5, col:28> col:21 data 'Timer *const *() const' inline
|-CXXMethodDecl 0x563ee31846c8 <line:180:5, col:48> col:17 push_back 'void (Vector<Timer *>::value_argument_type)' inline
| `-ParmVarDecl 0x563ee3184608 <col:27, col:47> col:47 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-FunctionTemplateDecl 0x563ee3184e88 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x563ee3184780 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Timer *>':'fast_argument<Timer *, false>'
| `-CXXMethodDecl 0x563ee3184de8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Timer *&&)' inline
|   `-ParmVarDecl 0x563ee3184ce8 <col:58, col:62> col:62 v 'Timer *&&'
|-CXXMethodDecl 0x563ee3184f68 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x563ee31850b8 <line:186:5, col:49> col:17 push_front 'void (Vector<Timer *>::value_argument_type)' inline
| `-ParmVarDecl 0x563ee3185028 <col:28, col:48> col:48 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x563ee3185170 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x563ee31853b8 <line:189:5, col:62> col:21 insert 'Vector<Timer *>::iterator (Vector<Timer *>::iterator, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x563ee3185230 <col:28, col:37> col:37 it 'Vector<Timer *>::iterator':'Timer **'
| `-ParmVarDecl 0x563ee31852a8 <col:41, col:61> col:61 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x563ee3185578 <line:190:5, col:38> col:21 erase 'Vector<Timer *>::iterator (Vector<Timer *>::iterator)' inline
| `-ParmVarDecl 0x563ee3185488 <col:27, col:36> col:36 it 'Vector<Timer *>::iterator':'Timer **'
|-CXXMethodDecl 0x563ee31857c8 <line:191:5, col:49> col:21 erase 'Vector<Timer *>::iterator (Vector<Timer *>::iterator, Vector<Timer *>::iterator)' inline
| |-ParmVarDecl 0x563ee3185640 <col:27, col:36> col:36 a 'Vector<Timer *>::iterator':'Timer **'
| `-ParmVarDecl 0x563ee31856b8 <col:39, col:48> col:48 b 'Vector<Timer *>::iterator':'Timer **'
|-CXXMethodDecl 0x563ee3185888 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x563ee3185ae8 <line:195:5, col:34> col:17 swap 'void (Vector<Timer *> &)' inline
| `-ParmVarDecl 0x563ee31859f0 <col:22, col:33> col:33 x 'Vector<Timer *> &'
`-CXXDestructorDecl 0x563ee3185c60 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x563ee3185c60

Layout: <CGRecordLayout
  LLVMType:%class.Vector.14 = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector.14 = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563ee3147510 <../dummy_inc/click/sync.hh:194:1, line:211:1> line:194:7 referenced class SimpleSpinlock definition
|-DefinitionData empty standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x563ee3147628 <col:1, col:7> col:7 implicit referenced class SimpleSpinlock
|-AccessSpecDecl 0x563ee31476b8 <col:24, col:30> col:24 public
|-CXXConstructorDecl 0x563ee3147740 <line:196:5, col:27> col:12 SimpleSpinlock 'void ()' inline
|-CXXDestructorDecl 0x563ee3147830 <line:197:5, col:28> col:12 ~SimpleSpinlock 'void () noexcept' inline
|-CXXMethodDecl 0x563ee3147930 <line:199:5, col:25> col:17 acquire 'void ()' inline
|-CXXMethodDecl 0x563ee31479f0 <line:200:5, col:25> col:17 release 'void ()' inline
|-CXXMethodDecl 0x563ee3147ab0 <line:201:5, col:25> col:17 attempt 'bool ()' inline
|-CXXConstructorDecl 0x563ee3147bd8 <line:194:7> col:7 implicit constexpr SimpleSpinlock 'void (const SimpleSpinlock &)' inline default trivial noexcept-unevaluated 0x563ee3147bd8
| `-ParmVarDecl 0x563ee3076028 <col:7> col:7 'const SimpleSpinlock &'
`-CXXMethodDecl 0x563ee3186a08 <col:7> col:7 implicit operator= 'SimpleSpinlock &(const SimpleSpinlock &)' inline default trivial noexcept-unevaluated 0x563ee3186a08
  `-ParmVarDecl 0x563ee3186b18 <col:7> col:7 'const SimpleSpinlock &'

Layout: <CGRecordLayout
  LLVMType:%class.SimpleSpinlock = type { i8 }
  NonVirtualBaseLLVMType:%class.SimpleSpinlock.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563ee316e0d8 prev 0x563ee3164338 <../dummy_inc/click/timerset.hh:12:1, line:90:1> line:12:7 referenced class TimerSet definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x563ee316e1d0 <col:1, col:7> col:7 implicit referenced class TimerSet
|-AccessSpecDecl 0x563ee316e260 <col:18, col:24> col:18 public
|-CXXConstructorDecl 0x563ee316e2f0 <line:14:5, col:14> col:5 TimerSet 'void ()'
|-CXXMethodDecl 0x563ee316e3e8 <line:16:5, col:67> col:15 timer_expiry_steady 'Timestamp () const'
| `-CompoundStmt 0x563ee3186e80 <col:43, col:67>
|   `-ReturnStmt 0x563ee3186e70 <col:45, col:52>
|     `-CXXConstructExpr 0x563ee3186e40 <col:52> 'Timestamp' 'void (const Timestamp &) noexcept'
|       `-MemberExpr 0x563ee3186e10 <col:52> 'const Timestamp' lvalue ->_timer_expiry 0x563ee316fbd0
|         `-CXXThisExpr 0x563ee3186e00 <col:52> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x563ee316e4a8 <line:17:5, col:53> col:22 timer_expiry_steady_adjusted 'Timestamp () const' inline
|-CXXMethodDecl 0x563ee316e6b0 <line:19:5, col:64> col:16 next_timer_delay 'int (bool, Timestamp &) const' inline
| |-ParmVarDecl 0x563ee316e558 <col:33, col:38> col:38 more_tasks 'bool'
| `-ParmVarDecl 0x563ee316e5d0 <col:50, col:61> col:61 t 'Timestamp &'
|-CXXMethodDecl 0x563ee316e7a8 <line:22:5, col:23> col:12 next_timer 'Timer *()'
|-CXXMethodDecl 0x563ee316e870 <line:24:5, col:67> col:14 max_timer_stride 'unsigned int () const'
| `-CompoundStmt 0x563ee3186f00 <col:39, col:67>
|   `-ReturnStmt 0x563ee3186ef0 <col:41, col:48>
|     `-ImplicitCastExpr 0x563ee3186ed8 <col:48> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x563ee3186ea8 <col:48> 'const unsigned int' lvalue ->_max_timer_stride 0x563ee316fcb8
|         `-CXXThisExpr 0x563ee3186e98 <col:48> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x563ee316e938 <line:25:5, col:59> col:14 timer_stride 'unsigned int () const'
| `-CompoundStmt 0x563ee3186f80 <col:35, col:59>
|   `-ReturnStmt 0x563ee3186f70 <col:37, col:44>
|     `-ImplicitCastExpr 0x563ee3186f58 <col:44> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x563ee3186f28 <col:44> 'const unsigned int' lvalue ->_timer_stride 0x563ee316fd20
|         `-CXXThisExpr 0x563ee3186f18 <col:44> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x563ee316ea80 <line:26:5, col:52> col:10 set_max_timer_stride 'void (unsigned int)'
| `-ParmVarDecl 0x563ee316e9f0 <col:31, col:40> col:40 timer_stride 'unsigned int'
|-CXXMethodDecl 0x563ee316ebc8 <line:28:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x563ee316eb38 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x563ee316edc8 <line:30:5, col:57> col:10 run_timers 'void (RouterThread *, Master *)'
| |-ParmVarDecl 0x563ee316ec80 <col:21, col:35> col:35 thread 'RouterThread *'
| `-ParmVarDecl 0x563ee316ecf8 <col:43, col:51> col:51 master 'Master *'
|-CXXMethodDecl 0x563ee316ee98 <line:32:5, col:23> col:17 fence 'void ()' inline
|-AccessSpecDecl 0x563ee316ef38 <line:34:3, col:10> col:3 private
|-CXXRecordDecl 0x563ee316ef60 <line:36:5, line:45:5> line:36:12 referenced struct heap_element definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x563ee316f078 <col:5, col:12> col:12 implicit referenced struct heap_element
| |-FieldDecl 0x563ee316f118 <line:37:2, col:12> col:12 referenced expiry_s 'Timestamp'
| |-FieldDecl 0x563ee316f178 <line:38:2, col:9> col:9 referenced t 'Timer *'
| `-CXXConstructorDecl 0x563ee316f2a8 <line:42:2, line:44:2> line:42:2 heap_element 'void (Timer *)'
|   |-ParmVarDecl 0x563ee316f1d8 <col:15, col:22> col:22 used t_ 'Timer *'
|   |-CXXCtorInitializer Field 0x563ee316f118 'expiry_s' 'Timestamp'
|   | `-CXXConstructExpr 0x563ee3187058 <line:43:8, col:36> 'Timestamp' 'void (const Timestamp &) noexcept'
|   |   `-CXXMemberCallExpr 0x563ee3187000 <col:17, col:35> 'const Timestamp' lvalue
|   |     `-MemberExpr 0x563ee3186fd0 <col:17, col:21> '<bound member function type>' ->expiry_steady 0x563ee31617c8
|   |       `-ImplicitCastExpr 0x563ee3187020 <col:17> 'const Timer *' <NoOp>
|   |         `-ImplicitCastExpr 0x563ee3186fb8 <col:17> 'Timer *' <LValueToRValue>
|   |           `-DeclRefExpr 0x563ee3186f98 <col:17> 'Timer *' lvalue ParmVar 0x563ee316f1d8 't_' 'Timer *'
|   |-CXXCtorInitializer Field 0x563ee316f178 't' 'Timer *'
|   | `-ImplicitCastExpr 0x563ee31870f0 <col:41> 'Timer *' <LValueToRValue>
|   |   `-DeclRefExpr 0x563ee31870b0 <col:41> 'Timer *' lvalue ParmVar 0x563ee316f1d8 't_' 'Timer *'
|   `-CompoundStmt 0x563ee3187140 <col:45, line:44:2>
|-CXXRecordDecl 0x563ee316f370 <line:46:5, line:50:5> line:46:12 struct heap_less definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x563ee316f488 <col:5, col:12> col:12 implicit struct heap_less
| `-CXXMethodDecl 0x563ee316f6d8 <line:47:2, line:49:2> line:47:14 operator() 'bool (const TimerSet::heap_element &, const TimerSet::heap_element &)' inline
|   |-ParmVarDecl 0x563ee316f558 <col:25, col:45> col:45 used a 'const TimerSet::heap_element &'
|   |-ParmVarDecl 0x563ee316f5d0 <col:48, col:68> col:68 used b 'const TimerSet::heap_element &'
|   `-CompoundStmt 0x563ee3187270 <col:71, line:49:2>
|     `-ReturnStmt 0x563ee3187260 <line:48:6, col:28>
|       `-CXXOperatorCallExpr 0x563ee3187228 <col:13, col:28> 'bool'
|         |-ImplicitCastExpr 0x563ee3187210 <col:24> 'bool (*)(const Timestamp &, const Timestamp &)' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x563ee31871f0 <col:24> 'bool (const Timestamp &, const Timestamp &)' lvalue Function 0x563ee30b4cd8 'operator<' 'bool (const Timestamp &, const Timestamp &)'
|         |-MemberExpr 0x563ee3187170 <col:13, col:15> 'const Timestamp' lvalue .expiry_s 0x563ee316f118
|         | `-DeclRefExpr 0x563ee3187150 <col:13> 'const TimerSet::heap_element' lvalue ParmVar 0x563ee316f558 'a' 'const TimerSet::heap_element &'
|         `-MemberExpr 0x563ee31871c0 <col:26, col:28> 'const Timestamp' lvalue .expiry_s 0x563ee316f118
|           `-DeclRefExpr 0x563ee31871a0 <col:26> 'const TimerSet::heap_element' lvalue ParmVar 0x563ee316f5d0 'b' 'const TimerSet::heap_element &'
|-CXXRecordDecl 0x563ee316f7a0 <line:51:5, line:55:5> line:51:12 struct heap_place definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x563ee316f8b8 <col:5, col:12> col:12 implicit struct heap_place
| `-CXXMethodDecl 0x563ee316fad8 <line:52:2, line:54:2> line:52:14 operator() 'void (TimerSet::heap_element *, TimerSet::heap_element *)' inline
|   |-ParmVarDecl 0x563ee316f958 <col:25, col:39> col:39 used begin 'TimerSet::heap_element *'
|   |-ParmVarDecl 0x563ee316f9d0 <col:46, col:60> col:60 used t 'TimerSet::heap_element *'
|   `-CompoundStmt 0x563ee3187478 <col:63, line:54:2>
|     `-BinaryOperator 0x563ee3187458 <line:53:6, col:39> 'int' lvalue '='
|       |-MemberExpr 0x563ee3187308 <col:6, col:12> 'int' lvalue ->_schedpos1 0x563ee31637d8
|       | `-ImplicitCastExpr 0x563ee31872f0 <col:6, col:9> 'Timer *' <LValueToRValue>
|       |   `-MemberExpr 0x563ee31872c0 <col:6, col:9> 'Timer *' lvalue ->t 0x563ee316f178
|       |     `-ImplicitCastExpr 0x563ee31872a8 <col:6> 'TimerSet::heap_element *' <LValueToRValue>
|       |       `-DeclRefExpr 0x563ee3187288 <col:6> 'TimerSet::heap_element *' lvalue ParmVar 0x563ee316f9d0 't' 'TimerSet::heap_element *'
|       `-ImplicitCastExpr 0x563ee3187440 <col:25, col:39> 'int' <IntegralCast>
|         `-BinaryOperator 0x563ee3187420 <col:25, col:39> 'long' '+'
|           |-ParenExpr 0x563ee31873c8 <col:25, col:35> 'long'
|           | `-BinaryOperator 0x563ee31873a8 <col:26, col:30> 'long' '-'
|           |   |-ImplicitCastExpr 0x563ee3187378 <col:26> 'TimerSet::heap_element *' <LValueToRValue>
|           |   | `-DeclRefExpr 0x563ee3187338 <col:26> 'TimerSet::heap_element *' lvalue ParmVar 0x563ee316f9d0 't' 'TimerSet::heap_element *'
|           |   `-ImplicitCastExpr 0x563ee3187390 <col:30> 'TimerSet::heap_element *' <LValueToRValue>
|           |     `-DeclRefExpr 0x563ee3187358 <col:30> 'TimerSet::heap_element *' lvalue ParmVar 0x563ee316f958 'begin' 'TimerSet::heap_element *'
|           `-ImplicitCastExpr 0x563ee3187408 <col:39> 'long' <IntegralCast>
|             `-IntegerLiteral 0x563ee31873e8 <col:39> 'int' 1
|-FieldDecl 0x563ee316fbd0 <line:58:5, col:15> col:15 referenced _timer_expiry 'Timestamp'
| `-AlignedAttr 0x563ee316fc40 <col:44, col:53> aligned
|   `-ConstantExpr 0x563ee316fc20 <col:52> 'int' Int: 8
|     `-IntegerLiteral 0x563ee316fba0 <col:52> 'int' 8
|-FieldDecl 0x563ee316fcb8 <line:60:5, col:14> col:14 referenced _max_timer_stride 'unsigned int'
|-FieldDecl 0x563ee316fd20 <line:61:5, col:14> col:14 referenced _timer_stride 'unsigned int'
|-FieldDecl 0x563ee316fd88 <line:62:5, col:14> col:14 _timer_count 'unsigned int'
|-FieldDecl 0x563ee317afc0 <line:63:5, col:26> col:26 referenced _timer_heap 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>'
|-FieldDecl 0x563ee3185d40 <line:64:5, col:21> col:21 _timer_runchunk 'Vector<Timer *>':'Vector<Timer *>'
|-FieldDecl 0x563ee3185da0 <line:65:5, col:20> col:20 _timer_lock 'SimpleSpinlock'
|-FieldDecl 0x563ee3185e00 <line:71:5, col:15> col:15 _timer_check 'Timestamp'
|-FieldDecl 0x563ee3185e60 <line:72:5, col:14> col:14 _timer_check_reports 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x563ee3185f50 <line:74:5, col:38> col:17 run_one_timer 'void (Timer *)' inline
| `-ParmVarDecl 0x563ee3185ec0 <col:31, col:37> col:38 'Timer *'
|-CXXMethodDecl 0x563ee3186018 <line:76:5, line:81:5> line:76:10 set_timer_expiry 'void ()'
| `-CompoundStmt 0x563ee31878d0 <col:29, line:81:5>
|   `-IfStmt 0x563ee31878a8 <line:77:2, line:80:32> has_else
|     |-ImplicitCastExpr 0x563ee3187560 <line:77:6, col:23> 'bool' <IntegralToBoolean>
|     | `-CXXMemberCallExpr 0x563ee3187500 <col:6, col:23> 'Vector::size_type':'int'
|     |   `-MemberExpr 0x563ee31874d0 <col:6, col:18> '<bound member function type>' .size 0x563ee31780a8
|     |     `-ImplicitCastExpr 0x563ee3187548 <col:6> 'const Vector<TimerSet::heap_element>' lvalue <NoOp>
|     |       `-MemberExpr 0x563ee31874a0 <col:6> 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>' lvalue ->_timer_heap 0x563ee317afc0
|     |         `-CXXThisExpr 0x563ee3187490 <col:6> 'TimerSet *' implicit this
|     |-CXXOperatorCallExpr 0x563ee3187750 <line:78:6, col:50> 'Timestamp' lvalue
|     | |-ImplicitCastExpr 0x563ee3187738 <col:20> 'Timestamp &(*)(const Timestamp &) noexcept' <FunctionToPointerDecay>
|     | | `-DeclRefExpr 0x563ee3187718 <col:20> 'Timestamp &(const Timestamp &) noexcept' lvalue CXXMethod 0x563ee2d9e738 'operator=' 'Timestamp &(const Timestamp &) noexcept'
|     | |-MemberExpr 0x563ee3187588 <col:6> 'Timestamp' lvalue ->_timer_expiry 0x563ee316fbd0
|     | | `-CXXThisExpr 0x563ee3187578 <col:6> 'TimerSet *' implicit this
|     | `-ImplicitCastExpr 0x563ee3187700 <col:22, col:50> 'const Timestamp' lvalue <NoOp>
|     |   `-MemberExpr 0x563ee31876d0 <col:22, col:50> 'Timestamp' lvalue .expiry_s 0x563ee316f118
|     |     `-CXXMemberCallExpr 0x563ee31876a8 <col:22, col:48> 'TimerSet::heap_element':'TimerSet::heap_element' lvalue
|     |       |-MemberExpr 0x563ee3187678 <col:22, col:34> '<bound member function type>' .unchecked_at 0x563ee3179148
|     |       | `-MemberExpr 0x563ee31875c8 <col:22> 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>' lvalue ->_timer_heap 0x563ee317afc0
|     |       |   `-CXXThisExpr 0x563ee31875b8 <col:22> 'TimerSet *' implicit this
|     |       `-IntegerLiteral 0x563ee3187658 <col:47> 'int' 0
|     `-ExprWithCleanups 0x563ee3187890 <line:80:6, col:32> 'Timestamp' lvalue
|       `-CXXOperatorCallExpr 0x563ee3187858 <col:6, col:32> 'Timestamp' lvalue
|         |-ImplicitCastExpr 0x563ee3187840 <col:20> 'Timestamp &(*)(Timestamp &&) noexcept' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x563ee3187820 <col:20> 'Timestamp &(Timestamp &&) noexcept' lvalue CXXMethod 0x563ee2d9ebe8 'operator=' 'Timestamp &(Timestamp &&) noexcept'
|         |-MemberExpr 0x563ee3187798 <col:6> 'Timestamp' lvalue ->_timer_expiry 0x563ee316fbd0
|         | `-CXXThisExpr 0x563ee3187788 <col:6> 'TimerSet *' implicit this
|         `-MaterializeTemporaryExpr 0x563ee3187808 <col:22, col:32> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x563ee31877d8 <col:22, col:32> 'Timestamp' 'void ()'
|-CXXMethodDecl 0x563ee3186158 <line:82:5, col:37> col:10 check_timer_expiry 'void (Timer *)'
| `-ParmVarDecl 0x563ee31860c8 <col:29, col:36> col:36 t 'Timer *'
|-CXXMethodDecl 0x563ee3186220 <line:84:5, col:29> col:17 used lock_timers 'void ()' inline
|-CXXMethodDecl 0x563ee31862e0 <line:85:5, col:37> col:17 attempt_lock_timers 'bool ()' inline
|-CXXMethodDecl 0x563ee31863a0 <line:86:5, col:31> col:17 used unlock_timers 'void ()' inline
|-FriendDecl 0x563ee3186490 <line:88:5, col:18> col:12 'class Timer':'Timer'
|-CXXConstructorDecl 0x563ee31864f8 <line:12:7> col:7 implicit TimerSet 'void (const TimerSet &)' inline default noexcept-unevaluated 0x563ee31864f8
| `-ParmVarDecl 0x563ee3186608 <col:7> col:7 'const TimerSet &'
|-CXXConstructorDecl 0x563ee31866a8 <col:7> col:7 implicit TimerSet 'void (TimerSet &&)' inline default noexcept-unevaluated 0x563ee31866a8
| `-ParmVarDecl 0x563ee31867b8 <col:7> col:7 'TimerSet &&'
|-CXXMethodDecl 0x563ee3186858 <col:7> col:7 implicit operator= 'TimerSet &(const TimerSet &)' inline default noexcept-unevaluated 0x563ee3186858
| `-ParmVarDecl 0x563ee3186968 <col:7> col:7 'const TimerSet &'
|-CXXMethodDecl 0x563ee3186b88 <col:7> col:7 implicit operator= 'TimerSet &(TimerSet &&)' inline default noexcept-unevaluated 0x563ee3186b88
| `-ParmVarDecl 0x563ee3186c98 <col:7> col:7 'TimerSet &&'
`-CXXDestructorDecl 0x563ee3186d20 <col:7> col:7 implicit ~TimerSet 'void ()' inline default noexcept-unevaluated 0x563ee3186d20

Layout: <CGRecordLayout
  LLVMType:%class.TimerSet = type <{ %class.Timestamp, i32, i32, i32, [4 x i8], %class.Vector.13, %class.Vector.14, %class.SimpleSpinlock, [7 x i8], %class.Timestamp, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.TimerSet.base = type <{ %class.Timestamp, i32, i32, i32, [4 x i8], %class.Vector.13, %class.Vector.14, %class.SimpleSpinlock, [7 x i8], %class.Timestamp, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x563ee31c4758 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'pollfd'
|-CXXRecordDecl 0x563ee31c4968 prev 0x563ee31c4758 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x563ee31c5a40 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<pollfd>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x563ee31c59f0 'typename array_memory<pollfd>::type' sugar
|   `-TypedefType 0x563ee31c59d0 'conditional<true, sized_array_memory<8>, typed_array_memory<pollfd> >::type' sugar
|     |-Typedef 0x563ee31c5880 'type'
|     `-SubstTemplateTypeParmType 0x563ee317bfd0 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x563ee2e5b0f0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563ee2e5b098 'T'
|       `-RecordType 0x563ee317bb20 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x563ee317ba38 'sized_array_memory'
|-FieldDecl 0x563ee31c5b40 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<pollfd>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x563ee31c5b90 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x563ee31c5bc8 <line:118:5, col:15> col:15 value_type 'pollfd':'pollfd'
| `-SubstTemplateTypeParmType 0x563ee31c4a00 'pollfd' sugar
|   |-TemplateTypeParmType 0x563ee2e92de0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x563ee2e92d88 'T'
|   `-RecordType 0x563ee31c2810 'pollfd'
|     `-CXXRecord 0x563ee31c2780 'pollfd'
|-TypedefDecl 0x563ee31c5c88 <line:119:5, col:16> col:16 reference 'pollfd &'
| `-LValueReferenceType 0x563ee31c5c50 'pollfd &'
|   `-SubstTemplateTypeParmType 0x563ee31c4a00 'pollfd' sugar
|     |-TemplateTypeParmType 0x563ee2e92de0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x563ee2e92d88 'T'
|     `-RecordType 0x563ee31c2810 'pollfd'
|       `-CXXRecord 0x563ee31c2780 'pollfd'
|-TypedefDecl 0x563ee31c5d48 <line:120:5, col:22> col:22 const_reference 'const pollfd &'
| `-LValueReferenceType 0x563ee31c5d10 'const pollfd &'
|   `-QualType 0x563ee31c4a01 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x563ee31c4a00 'pollfd' sugar
|       |-TemplateTypeParmType 0x563ee2e92de0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563ee2e92d88 'T'
|       `-RecordType 0x563ee31c2810 'pollfd'
|         `-CXXRecord 0x563ee31c2780 'pollfd'
|-TypedefDecl 0x563ee31c5dd8 <line:121:5, col:16> col:16 pointer 'pollfd *'
| `-PointerType 0x563ee31c5da0 'pollfd *'
|   `-SubstTemplateTypeParmType 0x563ee31c4a00 'pollfd' sugar
|     |-TemplateTypeParmType 0x563ee2e92de0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x563ee2e92d88 'T'
|     `-RecordType 0x563ee31c2810 'pollfd'
|       `-CXXRecord 0x563ee31c2780 'pollfd'
|-TypedefDecl 0x563ee31c5e98 <line:122:5, col:22> col:22 const_pointer 'const pollfd *'
| `-PointerType 0x563ee31c5e60 'const pollfd *'
|   `-QualType 0x563ee31c4a01 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x563ee31c4a00 'pollfd' sugar
|       |-TemplateTypeParmType 0x563ee2e92de0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563ee2e92d88 'T'
|       `-RecordType 0x563ee31c2810 'pollfd'
|         `-CXXRecord 0x563ee31c2780 'pollfd'
|-TypedefDecl 0x563ee31c6aa0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<pollfd>::type':'pollfd'
| `-ElaboratedType 0x563ee31c6a50 'typename fast_argument<pollfd>::type' sugar
|   `-TypedefType 0x563ee31c6a30 'fast_argument<pollfd, false>::type' sugar
|     |-Typedef 0x563ee31c69c0 'type'
|     `-SubstTemplateTypeParmType 0x563ee31c6750 'pollfd' sugar
|       |-TemplateTypeParmType 0x563ee2e65ef0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563ee2e65ea0 'T'
|       `-RecordType 0x563ee31c2810 'pollfd'
|         `-CXXRecord 0x563ee31c2780 'pollfd'
|-TypedefDecl 0x563ee31c6b08 <line:126:5, col:22> col:22 const_access_type 'const pollfd &'
| `-LValueReferenceType 0x563ee31c5d10 'const pollfd &'
|   `-QualType 0x563ee31c4a01 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x563ee31c4a00 'pollfd' sugar
|       |-TemplateTypeParmType 0x563ee2e92de0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563ee2e92d88 'T'
|       `-RecordType 0x563ee31c2810 'pollfd'
|         `-CXXRecord 0x563ee31c2780 'pollfd'
|-TypedefDecl 0x563ee31c6b60 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x563ee2b90370 'int'
|-TypedefDecl 0x563ee31c6bc8 <line:130:5, col:16> col:16 iterator 'pollfd *'
| `-PointerType 0x563ee31c5da0 'pollfd *'
|   `-SubstTemplateTypeParmType 0x563ee31c4a00 'pollfd' sugar
|     |-TemplateTypeParmType 0x563ee2e92de0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x563ee2e92d88 'T'
|     `-RecordType 0x563ee31c2810 'pollfd'
|       `-CXXRecord 0x563ee31c2780 'pollfd'
|-TypedefDecl 0x563ee31c6c30 <line:131:5, col:22> col:22 const_iterator 'const pollfd *'
| `-PointerType 0x563ee31c5e60 'const pollfd *'
|   `-QualType 0x563ee31c4a01 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x563ee31c4a00 'pollfd' sugar
|       |-TemplateTypeParmType 0x563ee2e92de0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563ee2e92d88 'T'
|       `-RecordType 0x563ee31c2810 'pollfd'
|         `-CXXRecord 0x563ee31c2780 'pollfd'
|-EnumDecl 0x563ee31c6c88 <line:134:5> col:5
| `-EnumConstantDecl 0x563ee31c6d80 <col:12, col:40> col:12 RESERVE_GROW 'Vector<pollfd>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x563ee31c6d60 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x563ee2e94468 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x563ee2e94440 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x563ee2e94420 <col:40> 'int' 1
|-CXXConstructorDecl 0x563ee31c6e08 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x563ee31c7098 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x563ee31c6ec0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x563ee31c6f60 <col:41, col:61> col:61 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXConstructorDecl 0x563ee31c7358 <line:139:5, col:37> col:12 Vector 'void (const Vector<pollfd> &)' inline
| `-ParmVarDecl 0x563ee31c7240 <col:19, col:36> col:36 x 'const Vector<pollfd> &'
|-CXXConstructorDecl 0x563ee31c7618 <line:141:5, col:32> col:12 Vector 'void (Vector<pollfd> &&)' inline
| `-ParmVarDecl 0x563ee31c7500 <col:19, col:31> col:31 x 'Vector<pollfd> &&'
|-CXXMethodDecl 0x563ee31c7960 <line:144:5, col:51> col:23 operator= 'Vector<pollfd> &(const Vector<pollfd> &)' inline
| `-ParmVarDecl 0x563ee31c7840 <col:33, col:50> col:50 x 'const Vector<pollfd> &'
|-CXXMethodDecl 0x563ee31c7c70 <line:146:5, col:46> col:23 operator= 'Vector<pollfd> &(Vector<pollfd> &&)' inline
| `-ParmVarDecl 0x563ee31c7b50 <col:33, col:45> col:45 x 'Vector<pollfd> &&'
|-CXXMethodDecl 0x563ee31c7f60 <line:148:5, col:70> col:23 assign 'Vector<pollfd> &(Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x563ee31c7da8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x563ee31c7e20 <col:43, col:69> col:63 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x563ee31c80b8 <line:150:5, col:55> col:49 begin 'Vector<pollfd>::iterator ()'
| |-NoInlineAttr 0x563ee31c8198 <col:20> Inherited
| `-OptimizeNoneAttr 0x563ee31c81f0 <col:30> Inherited
|-CXXMethodDecl 0x563ee31c8238 <line:151:5, col:53> col:49 end 'Vector<pollfd>::iterator ()'
| |-NoInlineAttr 0x563ee31c82e8 <col:20> Inherited
| `-OptimizeNoneAttr 0x563ee31c8340 <col:30> Inherited
|-CXXMethodDecl 0x563ee31c8408 <line:152:5, col:63> col:55 begin 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x563ee31c84b8 <col:20> Inherited
| `-OptimizeNoneAttr 0x563ee31c8510 <col:30> Inherited
|-CXXMethodDecl 0x563ee31c8558 <line:153:5, col:61> col:55 end 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x563ee31c8608 <col:20> Inherited
| `-OptimizeNoneAttr 0x563ee31c8660 <col:30> Inherited
|-CXXMethodDecl 0x563ee31c86a8 <line:154:5, col:64> col:55 cbegin 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x563ee31c8758 <col:20> Inherited
| `-OptimizeNoneAttr 0x563ee31c87b0 <col:30> Inherited
|-CXXMethodDecl 0x563ee31c87f8 <line:155:5, col:62> col:55 cend 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x563ee31c88a8 <col:20> Inherited
| `-OptimizeNoneAttr 0x563ee31c8900 <col:30> Inherited
|-CXXMethodDecl 0x563ee31c8928 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x563ee31c89d8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x563ee31c8a88 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x563ee31c8c48 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x563ee31c8b38 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x563ee31c8bb0 <col:37, col:63> col:57 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x563ee31c8d98 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x563ee31c8d08 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x563ee31c8f48 <line:163:5, col:65> col:43 operator[] 'pollfd &(Vector::size_type)'
| |-ParmVarDecl 0x563ee31c8e50 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x563ee31c9000 <col:20>
| `-OptimizeNoneAttr 0x563ee31c9058 <col:30>
|-CXXMethodDecl 0x563ee31c9178 <line:164:5, col:73> col:49 operator[] 'const pollfd &(Vector::size_type) const'
| |-ParmVarDecl 0x563ee31c9080 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x563ee31c9230 <col:20>
| `-OptimizeNoneAttr 0x563ee31c9288 <col:30>
|-CXXMethodDecl 0x563ee31c9340 <line:165:5, col:29> col:15 at 'pollfd &(Vector::size_type)' inline
| `-ParmVarDecl 0x563ee31c92b0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x563ee31c9488 <line:166:5, col:37> col:21 at 'const pollfd &(Vector::size_type) const' inline
| `-ParmVarDecl 0x563ee31c93f8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x563ee31c95b8 <line:167:5, col:21> col:15 front 'pollfd &()' inline
|-CXXMethodDecl 0x563ee31c96e8 <line:168:5, col:29> col:21 front 'const pollfd &() const' inline
|-CXXMethodDecl 0x563ee31c97b8 <line:169:5, col:20> col:15 back 'pollfd &()' inline
|-CXXMethodDecl 0x563ee31c9888 <line:170:5, col:28> col:21 back 'const pollfd &() const' inline
|-CXXMethodDecl 0x563ee31c99c8 <line:172:5, col:39> col:15 unchecked_at 'pollfd &(Vector::size_type)' inline
| `-ParmVarDecl 0x563ee31c9938 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x563ee31c9b10 <line:173:5, col:47> col:21 unchecked_at 'const pollfd &(Vector::size_type) const' inline
| `-ParmVarDecl 0x563ee31c9a80 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x563ee31c9c58 <line:174:5, col:59> col:15 at_u 'pollfd &(Vector::size_type)' inline
| |-ParmVarDecl 0x563ee31c9bc8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x563ee31c9d10 <col:48> Inherited "" ""
|-CXXMethodDecl 0x563ee31c9e10 <line:175:5, col:71> col:21 at_u 'const pollfd &(Vector::size_type) const' inline
| |-ParmVarDecl 0x563ee31c9d80 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x563ee31c9ec8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x563ee31c9f88 <line:177:5, col:20> col:15 data 'pollfd *()' inline
|-CXXMethodDecl 0x563ee31ca088 <line:178:5, col:28> col:21 data 'const pollfd *() const' inline
|-CXXMethodDecl 0x563ee31ca238 <line:180:5, col:48> col:17 push_back 'void (Vector<pollfd>::value_argument_type)' inline
| `-ParmVarDecl 0x563ee31ca148 <col:27, col:47> col:47 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-FunctionTemplateDecl 0x563ee31ca9f8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x563ee31ca2f0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<pollfd>':'fast_argument<pollfd, false>'
| `-CXXMethodDecl 0x563ee31ca958 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (pollfd &&)' inline
|   `-ParmVarDecl 0x563ee31ca858 <col:58, col:62> col:62 v 'pollfd &&'
|-CXXMethodDecl 0x563ee31caad8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x563ee31cac28 <line:186:5, col:49> col:17 push_front 'void (Vector<pollfd>::value_argument_type)' inline
| `-ParmVarDecl 0x563ee31cab98 <col:28, col:48> col:48 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x563ee31cace0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x563ee31caf28 <line:189:5, col:62> col:21 insert 'Vector<pollfd>::iterator (Vector<pollfd>::iterator, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x563ee31cada0 <col:28, col:37> col:37 it 'Vector<pollfd>::iterator':'pollfd *'
| `-ParmVarDecl 0x563ee31cae18 <col:41, col:61> col:61 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x563ee31cb0e8 <line:190:5, col:38> col:21 erase 'Vector<pollfd>::iterator (Vector<pollfd>::iterator)' inline
| `-ParmVarDecl 0x563ee31caff8 <col:27, col:36> col:36 it 'Vector<pollfd>::iterator':'pollfd *'
|-CXXMethodDecl 0x563ee31cb338 <line:191:5, col:49> col:21 erase 'Vector<pollfd>::iterator (Vector<pollfd>::iterator, Vector<pollfd>::iterator)' inline
| |-ParmVarDecl 0x563ee31cb1b0 <col:27, col:36> col:36 a 'Vector<pollfd>::iterator':'pollfd *'
| `-ParmVarDecl 0x563ee31cb228 <col:39, col:48> col:48 b 'Vector<pollfd>::iterator':'pollfd *'
|-CXXMethodDecl 0x563ee31cb3f8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x563ee31cb658 <line:195:5, col:34> col:17 swap 'void (Vector<pollfd> &)' inline
| `-ParmVarDecl 0x563ee31cb560 <col:22, col:33> col:33 x 'Vector<pollfd> &'
`-CXXDestructorDecl 0x563ee31cb728 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x563ee31cb728

Layout: <CGRecordLayout
  LLVMType:%class.Vector.15 = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector.15 = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x563ee31ccd10 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<24>'
|-CXXRecordDecl 0x563ee31ccee8 prev 0x563ee31ccd10 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x563ee31ccf78 <col:46, col:52> col:46 public
|-TypedefDecl 0x563ee31ccfa0 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x563ee2b90370 'int'
|-TypedefDecl 0x563ee31cebe0 <line:13:5, col:31> col:31 type 'typename sized_array_memory<24>::type':'char_array<24>'
| `-ElaboratedType 0x563ee31ceb90 'typename sized_array_memory<24>::type' sugar
|   `-TypedefType 0x563ee31cd450 'sized_array_memory<24>::type' sugar
|     |-Typedef 0x563ee31cd350 'type'
|     `-TemplateSpecializationType 0x563ee31cd2e0 'char_array<24UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x563ee31cd1c0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 24
|       |   `-SubstNonTypeTemplateParmExpr 0x563ee31cd1a0 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x563ee31cd180 <col:24> 'unsigned long' 24
|       `-RecordType 0x563ee31cd2c0 'char_array<24>'
|         `-ClassTemplateSpecialization 0x563ee31cd1e0 'char_array'
|-TypedefDecl 0x563ee31cec98 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<24> >::type *'
| `-PointerType 0x563ee31cec60 'vector_memory<sized_array_memory<24> >::type *'
|   `-TypedefType 0x563ee31cec40 'vector_memory<sized_array_memory<24> >::type' sugar
|     |-Typedef 0x563ee31cebe0 'type'
|     `-ElaboratedType 0x563ee31ceb90 'typename sized_array_memory<24>::type' sugar
|       `-TypedefType 0x563ee31cd450 'sized_array_memory<24>::type' sugar
|         |-Typedef 0x563ee31cd350 'type'
|         `-TemplateSpecializationType 0x563ee31cd2e0 'char_array<24UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x563ee31cd1c0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 24
|           |   `-SubstNonTypeTemplateParmExpr 0x563ee31cd1a0 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x563ee31cd180 <col:24> 'unsigned long' 24
|           `-RecordType 0x563ee31cd2c0 'char_array<24>'
|             `-ClassTemplateSpecialization 0x563ee31cd1e0 'char_array'
|-CXXMethodDecl 0x563ee31cee18 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<24> >::type *) const' inline
| `-ParmVarDecl 0x563ee31ced28 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXConstructorDecl 0x563ee31cef08 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x563ee31cefe8 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x563ee31cefe8
|-CXXMethodDecl 0x563ee31cf2b8 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<24> > &)'
| `-ParmVarDecl 0x563ee31cf1c0 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<24> > &'
|-CXXMethodDecl 0x563ee31cf4f8 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x563ee31cf370 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x563ee31cf3e8 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x563ee31cf6c8 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x563ee31cf5b8 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x563ee31cf630 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x563ee31cf828 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<24> >::iterator ()'
|-CXXMethodDecl 0x563ee31cf8f8 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<24> >::iterator ()'
|-CXXMethodDecl 0x563ee31cfb48 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<24> >::iterator (vector_memory<sized_array_memory<24> >::iterator, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x563ee31cf9b8 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
| `-ParmVarDecl 0x563ee31cfa30 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x563ee31cfda8 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<24> >::iterator (vector_memory<sized_array_memory<24> >::iterator, vector_memory<sized_array_memory<24> >::iterator)'
| |-ParmVarDecl 0x563ee31cfc18 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
| `-ParmVarDecl 0x563ee31cfc90 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x563ee31cff68 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<24> >::type *)' inline
| `-ParmVarDecl 0x563ee31cfe78 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x563ee31d0128 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<24> >::type *)' inline
| `-ParmVarDecl 0x563ee31d0030 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x563ee31d01e0 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x563ee31d0290 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x563ee31d04c8 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x563ee31d0340 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x563ee31d03b8 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x563ee31d0768 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<24> > &)'
| `-ParmVarDecl 0x563ee31d0670 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<24> > &'
|-FieldDecl 0x563ee31d0830 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<24> >::type *'
|-FieldDecl 0x563ee31d0880 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x563ee31d08d0 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.17 = type { %struct.char_array.18*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.17 = type { %struct.char_array.18*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x563ee31cb870 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'SelectSet::SelectorInfo'
|-CXXRecordDecl 0x563ee31cba78 prev 0x563ee31cb870 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x563ee31ccc80 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<SelectorInfo>::type':'sized_array_memory<24>'
| `-ElaboratedType 0x563ee31ccc30 'typename array_memory<SelectorInfo>::type' sugar
|   `-TypedefType 0x563ee31ccc10 'conditional<true, sized_array_memory<24>, typed_array_memory<SelectSet::SelectorInfo> >::type' sugar
|     |-Typedef 0x563ee31ccac0 'type'
|     `-SubstTemplateTypeParmType 0x563ee31cc8e0 'sized_array_memory<24>' sugar
|       |-TemplateTypeParmType 0x563ee2e5b0f0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563ee2e5b098 'T'
|       `-RecordType 0x563ee31cc430 'sized_array_memory<24>'
|         `-ClassTemplateSpecialization 0x563ee31cc350 'sized_array_memory'
|-FieldDecl 0x563ee31d0920 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<SelectSet::SelectorInfo>::array_memory_type>':'vector_memory<sized_array_memory<24> >' mutable
|-AccessSpecDecl 0x563ee31d0970 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x563ee31d09a8 <line:118:5, col:15> col:15 value_type 'SelectSet::SelectorInfo':'SelectSet::SelectorInfo'
| `-SubstTemplateTypeParmType 0x563ee31cbb10 'SelectSet::SelectorInfo' sugar
|   |-TemplateTypeParmType 0x563ee2e92de0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x563ee2e92d88 'T'
|   `-RecordType 0x563ee31c42c0 'SelectSet::SelectorInfo'
|     `-CXXRecord 0x563ee31c4230 'SelectorInfo'
|-TypedefDecl 0x563ee31d0a68 <line:119:5, col:16> col:16 reference 'SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x563ee31d0a30 'SelectSet::SelectorInfo &'
|   `-SubstTemplateTypeParmType 0x563ee31cbb10 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x563ee2e92de0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x563ee2e92d88 'T'
|     `-RecordType 0x563ee31c42c0 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x563ee31c4230 'SelectorInfo'
|-TypedefDecl 0x563ee31d0b28 <line:120:5, col:22> col:22 const_reference 'const SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x563ee31d0af0 'const SelectSet::SelectorInfo &'
|   `-QualType 0x563ee31cbb11 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x563ee31cbb10 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x563ee2e92de0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563ee2e92d88 'T'
|       `-RecordType 0x563ee31c42c0 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x563ee31c4230 'SelectorInfo'
|-TypedefDecl 0x563ee31d0bb8 <line:121:5, col:16> col:16 pointer 'SelectSet::SelectorInfo *'
| `-PointerType 0x563ee31d0b80 'SelectSet::SelectorInfo *'
|   `-SubstTemplateTypeParmType 0x563ee31cbb10 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x563ee2e92de0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x563ee2e92d88 'T'
|     `-RecordType 0x563ee31c42c0 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x563ee31c4230 'SelectorInfo'
|-TypedefDecl 0x563ee31d0c78 <line:122:5, col:22> col:22 const_pointer 'const SelectSet::SelectorInfo *'
| `-PointerType 0x563ee31d0c40 'const SelectSet::SelectorInfo *'
|   `-QualType 0x563ee31cbb11 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x563ee31cbb10 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x563ee2e92de0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563ee2e92d88 'T'
|       `-RecordType 0x563ee31c42c0 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x563ee31c4230 'SelectorInfo'
|-TypedefDecl 0x563ee31d18d0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<SelectorInfo>::type':'const SelectSet::SelectorInfo &'
| `-ElaboratedType 0x563ee31d1880 'typename fast_argument<SelectorInfo>::type' sugar
|   `-TypedefType 0x563ee31d1860 'fast_argument<SelectSet::SelectorInfo, true>::type' sugar
|     |-Typedef 0x563ee31d1798 'type'
|     `-LValueReferenceType 0x563ee31d1760 'const SelectSet::SelectorInfo &'
|       `-QualType 0x563ee31d1501 'const SelectSet::SelectorInfo' const
|         `-SubstTemplateTypeParmType 0x563ee31d1500 'SelectSet::SelectorInfo' sugar
|           |-TemplateTypeParmType 0x563ee2e657c0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x563ee2e65768 'T'
|           `-RecordType 0x563ee31c42c0 'SelectSet::SelectorInfo'
|             `-CXXRecord 0x563ee31c4230 'SelectorInfo'
|-TypedefDecl 0x563ee31d1938 <line:126:5, col:22> col:22 const_access_type 'const SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x563ee31d0af0 'const SelectSet::SelectorInfo &'
|   `-QualType 0x563ee31cbb11 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x563ee31cbb10 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x563ee2e92de0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563ee2e92d88 'T'
|       `-RecordType 0x563ee31c42c0 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x563ee31c4230 'SelectorInfo'
|-TypedefDecl 0x563ee31d1990 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x563ee2b90370 'int'
|-TypedefDecl 0x563ee31d19f8 <line:130:5, col:16> col:16 iterator 'SelectSet::SelectorInfo *'
| `-PointerType 0x563ee31d0b80 'SelectSet::SelectorInfo *'
|   `-SubstTemplateTypeParmType 0x563ee31cbb10 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x563ee2e92de0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x563ee2e92d88 'T'
|     `-RecordType 0x563ee31c42c0 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x563ee31c4230 'SelectorInfo'
|-TypedefDecl 0x563ee31d1a60 <line:131:5, col:22> col:22 const_iterator 'const SelectSet::SelectorInfo *'
| `-PointerType 0x563ee31d0c40 'const SelectSet::SelectorInfo *'
|   `-QualType 0x563ee31cbb11 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x563ee31cbb10 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x563ee2e92de0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563ee2e92d88 'T'
|       `-RecordType 0x563ee31c42c0 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x563ee31c4230 'SelectorInfo'
|-EnumDecl 0x563ee31d1ab8 <line:134:5> col:5
| `-EnumConstantDecl 0x563ee31d1bb0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<SelectSet::SelectorInfo>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x563ee31d1b90 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x563ee2e94468 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x563ee2e94440 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x563ee2e94420 <col:40> 'int' 1
|-CXXConstructorDecl 0x563ee31d1c38 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x563ee31d1ec8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x563ee31d1cf0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x563ee31d1d90 <col:41, col:61> col:61 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXConstructorDecl 0x563ee31d2188 <line:139:5, col:37> col:12 Vector 'void (const Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x563ee31d2070 <col:19, col:36> col:36 x 'const Vector<SelectSet::SelectorInfo> &'
|-CXXConstructorDecl 0x563ee31d2448 <line:141:5, col:32> col:12 Vector 'void (Vector<SelectSet::SelectorInfo> &&)' inline
| `-ParmVarDecl 0x563ee31d2330 <col:19, col:31> col:31 x 'Vector<SelectSet::SelectorInfo> &&'
|-CXXMethodDecl 0x563ee31d2790 <line:144:5, col:51> col:23 operator= 'Vector<SelectSet::SelectorInfo> &(const Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x563ee31d2670 <col:33, col:50> col:50 x 'const Vector<SelectSet::SelectorInfo> &'
|-CXXMethodDecl 0x563ee31d2aa0 <line:146:5, col:46> col:23 operator= 'Vector<SelectSet::SelectorInfo> &(Vector<SelectSet::SelectorInfo> &&)' inline
| `-ParmVarDecl 0x563ee31d2980 <col:33, col:45> col:45 x 'Vector<SelectSet::SelectorInfo> &&'
|-CXXMethodDecl 0x563ee31d2d90 <line:148:5, col:70> col:23 assign 'Vector<SelectSet::SelectorInfo> &(Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x563ee31d2bd8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x563ee31d2c50 <col:43, col:69> col:63 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x563ee31d2ee8 <line:150:5, col:55> col:49 begin 'Vector<SelectSet::SelectorInfo>::iterator ()'
| |-NoInlineAttr 0x563ee31d2fc8 <col:20> Inherited
| `-OptimizeNoneAttr 0x563ee31d3020 <col:30> Inherited
|-CXXMethodDecl 0x563ee31d3068 <line:151:5, col:53> col:49 end 'Vector<SelectSet::SelectorInfo>::iterator ()'
| |-NoInlineAttr 0x563ee31d3118 <col:20> Inherited
| `-OptimizeNoneAttr 0x563ee31d3170 <col:30> Inherited
|-CXXMethodDecl 0x563ee31d3238 <line:152:5, col:63> col:55 begin 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x563ee31d32e8 <col:20> Inherited
| `-OptimizeNoneAttr 0x563ee31d3340 <col:30> Inherited
|-CXXMethodDecl 0x563ee31d3388 <line:153:5, col:61> col:55 end 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x563ee31d3438 <col:20> Inherited
| `-OptimizeNoneAttr 0x563ee31d3490 <col:30> Inherited
|-CXXMethodDecl 0x563ee31d34d8 <line:154:5, col:64> col:55 cbegin 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x563ee31d3588 <col:20> Inherited
| `-OptimizeNoneAttr 0x563ee31d35e0 <col:30> Inherited
|-CXXMethodDecl 0x563ee31d3628 <line:155:5, col:62> col:55 cend 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x563ee31d36d8 <col:20> Inherited
| `-OptimizeNoneAttr 0x563ee31d3730 <col:30> Inherited
|-CXXMethodDecl 0x563ee31d3758 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x563ee31d3808 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x563ee31d38b8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x563ee31d3a78 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x563ee31d3968 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x563ee31d39e0 <col:37, col:63> col:57 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x563ee31d3bc8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x563ee31d3b38 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x563ee31d3d78 <line:163:5, col:65> col:43 operator[] 'SelectSet::SelectorInfo &(Vector::size_type)'
| |-ParmVarDecl 0x563ee31d3c80 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x563ee31d3e30 <col:20>
| `-OptimizeNoneAttr 0x563ee31d3e88 <col:30>
|-CXXMethodDecl 0x563ee31d3fa8 <line:164:5, col:73> col:49 operator[] 'const SelectSet::SelectorInfo &(Vector::size_type) const'
| |-ParmVarDecl 0x563ee31d3eb0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x563ee31d4060 <col:20>
| `-OptimizeNoneAttr 0x563ee31d40b8 <col:30>
|-CXXMethodDecl 0x563ee31d4170 <line:165:5, col:29> col:15 at 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| `-ParmVarDecl 0x563ee31d40e0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x563ee31d42b8 <line:166:5, col:37> col:21 at 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| `-ParmVarDecl 0x563ee31d4228 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x563ee31d43e8 <line:167:5, col:21> col:15 front 'SelectSet::SelectorInfo &()' inline
|-CXXMethodDecl 0x563ee31d4518 <line:168:5, col:29> col:21 front 'const SelectSet::SelectorInfo &() const' inline
|-CXXMethodDecl 0x563ee31d45e8 <line:169:5, col:20> col:15 back 'SelectSet::SelectorInfo &()' inline
|-CXXMethodDecl 0x563ee31d46b8 <line:170:5, col:28> col:21 back 'const SelectSet::SelectorInfo &() const' inline
|-CXXMethodDecl 0x563ee31d47f8 <line:172:5, col:39> col:15 unchecked_at 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| `-ParmVarDecl 0x563ee31d4768 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x563ee31d4940 <line:173:5, col:47> col:21 unchecked_at 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| `-ParmVarDecl 0x563ee31d48b0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x563ee31d4a88 <line:174:5, col:59> col:15 at_u 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| |-ParmVarDecl 0x563ee31d49f8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x563ee31d4b40 <col:48> Inherited "" ""
|-CXXMethodDecl 0x563ee31d4c40 <line:175:5, col:71> col:21 at_u 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| |-ParmVarDecl 0x563ee31d4bb0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x563ee31d4cf8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x563ee31d4db8 <line:177:5, col:20> col:15 data 'SelectSet::SelectorInfo *()' inline
|-CXXMethodDecl 0x563ee31d4eb8 <line:178:5, col:28> col:21 data 'const SelectSet::SelectorInfo *() const' inline
|-CXXMethodDecl 0x563ee31d5068 <line:180:5, col:48> col:17 push_back 'void (Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| `-ParmVarDecl 0x563ee31d4f78 <col:27, col:47> col:47 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-FunctionTemplateDecl 0x563ee31d5828 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x563ee31d5120 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<SelectSet::SelectorInfo>':'fast_argument<SelectSet::SelectorInfo, true>'
| `-CXXMethodDecl 0x563ee31d5788 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (SelectSet::SelectorInfo &&)' inline
|   `-ParmVarDecl 0x563ee31d5688 <col:58, col:62> col:62 v 'SelectSet::SelectorInfo &&'
|-CXXMethodDecl 0x563ee31d5908 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x563ee31d5a58 <line:186:5, col:49> col:17 push_front 'void (Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| `-ParmVarDecl 0x563ee31d59c8 <col:28, col:48> col:48 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x563ee31d5b10 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x563ee31d5d58 <line:189:5, col:62> col:21 insert 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x563ee31d5bd0 <col:28, col:37> col:37 it 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
| `-ParmVarDecl 0x563ee31d5c48 <col:41, col:61> col:61 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x563ee31d5f18 <line:190:5, col:38> col:21 erase 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator)' inline
| `-ParmVarDecl 0x563ee31d5e28 <col:27, col:36> col:36 it 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
|-CXXMethodDecl 0x563ee31d6168 <line:191:5, col:49> col:21 erase 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator, Vector<SelectSet::SelectorInfo>::iterator)' inline
| |-ParmVarDecl 0x563ee31d5fe0 <col:27, col:36> col:36 a 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
| `-ParmVarDecl 0x563ee31d6058 <col:39, col:48> col:48 b 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
|-CXXMethodDecl 0x563ee31d6228 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x563ee31d6488 <line:195:5, col:34> col:17 swap 'void (Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x563ee31d6390 <col:22, col:33> col:33 x 'Vector<SelectSet::SelectorInfo> &'
`-CXXDestructorDecl 0x563ee31d6558 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x563ee31d6558

Layout: <CGRecordLayout
  LLVMType:%class.Vector.16 = type { %class.vector_memory.17 }
  NonVirtualBaseLLVMType:%class.Vector.16 = type { %class.vector_memory.17 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563ee31c3410 <../dummy_inc/click/selectset.hh:36:1, line:109:1> line:36:7 referenced class SelectSet definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x563ee31c3528 <col:1, col:7> col:7 implicit referenced class SelectSet
|-AccessSpecDecl 0x563ee31c35b8 <col:19, col:25> col:19 public
|-CXXConstructorDecl 0x563ee31c3640 <line:38:5, col:15> col:5 SelectSet 'void ()'
|-CXXDestructorDecl 0x563ee31c3730 <line:39:5, col:16> col:5 ~SelectSet 'void ()' noexcept-unevaluated 0x563ee31c3730
|-CXXMethodDecl 0x563ee31c3830 <line:41:5, col:21> col:10 initialize 'void ()'
|-CXXMethodDecl 0x563ee31c3ad0 <line:43:5, col:54> col:9 add_select 'int (int, Element *, int)'
| |-ParmVarDecl 0x563ee31c38e8 <col:20, col:24> col:24 fd 'int'
| |-ParmVarDecl 0x563ee31c3960 <col:28, col:37> col:37 element 'Element *'
| `-ParmVarDecl 0x563ee31c39e0 <col:46, col:50> col:50 mask 'int'
|-CXXMethodDecl 0x563ee31c3d40 <line:44:5, col:57> col:9 remove_select 'int (int, Element *, int)'
| |-ParmVarDecl 0x563ee31c3ba0 <col:23, col:27> col:27 fd 'int'
| |-ParmVarDecl 0x563ee31c3c18 <col:31, col:40> col:40 element 'Element *'
| `-ParmVarDecl 0x563ee31c3c98 <col:49, col:53> col:53 mask 'int'
|-CXXMethodDecl 0x563ee31c3e98 <line:46:5, col:42> col:10 run_selects 'void (RouterThread *)'
| `-ParmVarDecl 0x563ee31c3e08 <col:22, col:36> col:36 thread 'RouterThread *'
|-CXXMethodDecl 0x563ee31c3f60 <line:47:5, line:50:5> line:47:17 used wake_immediate 'void ()' inline
| `-CompoundStmt 0x563ee31d7c98 <col:34, line:50:5>
|   |-BinaryOperator 0x563ee31d7668 <line:48:2, col:23> 'volatile bool' lvalue '='
|   | |-MemberExpr 0x563ee31d7628 <col:2> 'volatile bool' lvalue ->_wake_pipe_pending 0x563ee31c46e8
|   | | `-CXXThisExpr 0x563ee31d7618 <col:2> 'SelectSet *' implicit this
|   | `-CXXBoolLiteralExpr 0x563ee31d7658 <col:23> 'bool' true
|   `-CallExpr 0x563ee31d7c70 <line:49:2, col:43> 'void'
|     |-ImplicitCastExpr 0x563ee31d7c58 <col:2> 'void (*)(long)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x563ee31d7bd8 <col:2> 'void (long)' lvalue Function 0x563ee31d7ad8 'ignore_result' 'void (long)' (FunctionTemplate 0x563ee2e56098 'ignore_result')
|     `-CallExpr 0x563ee31d7880 <col:16, col:42> 'ssize_t':'long'
|       |-ImplicitCastExpr 0x563ee31d7868 <col:16> 'ssize_t (*)(int, const void *, size_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x563ee31d77e8 <col:16> 'ssize_t (int, const void *, size_t)' lvalue Function 0x563ee318a8f8 'write' 'ssize_t (int, const void *, size_t)'
|       |-ImplicitCastExpr 0x563ee31d78b8 <col:22, col:34> 'int' <LValueToRValue>
|       | `-ArraySubscriptExpr 0x563ee31d7790 <col:22, col:34> 'int' lvalue
|       |   |-ImplicitCastExpr 0x563ee31d7778 <col:22> 'int *' <ArrayToPointerDecay>
|       |   | `-MemberExpr 0x563ee31d7728 <col:22> 'int [2]' lvalue ->_wake_pipe 0x563ee31c4688
|       |   |   `-CXXThisExpr 0x563ee31d7718 <col:22> 'SelectSet *' implicit this
|       |   `-IntegerLiteral 0x563ee31d7758 <col:33> 'int' 1
|       |-ImplicitCastExpr 0x563ee31d78e8 <col:37> 'const void *' <BitCast>
|       | `-ImplicitCastExpr 0x563ee31d78d0 <col:37> 'const char *' <ArrayToPointerDecay>
|       |   `-StringLiteral 0x563ee31d77b0 <col:37> 'const char [1]' lvalue ""
|       `-ImplicitCastExpr 0x563ee31d7900 <col:41> 'size_t':'unsigned long' <IntegralCast>
|         `-IntegerLiteral 0x563ee31d77c8 <col:41> 'int' 1
|-CXXMethodDecl 0x563ee31c40a0 <line:52:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x563ee31c4010 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x563ee31c4168 <line:54:5, col:23> col:17 fence 'void ()' inline
|-AccessSpecDecl 0x563ee31c4208 <line:56:3, col:10> col:3 private
|-CXXRecordDecl 0x563ee31c4230 <line:58:5, line:66:5> line:58:12 referenced struct SelectorInfo definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x563ee31c4348 <col:5, col:12> col:12 implicit referenced struct SelectorInfo
| |-FieldDecl 0x563ee31c43e8 <line:59:2, col:11> col:11 read 'Element *'
| |-FieldDecl 0x563ee31c4448 <line:60:2, col:11> col:11 write 'Element *'
| |-FieldDecl 0x563ee31c44b0 <line:61:2, col:6> col:6 pollfd 'int'
| `-CXXConstructorDecl 0x563ee31c4560 <line:62:2, line:65:2> line:62:2 SelectorInfo 'void ()'
|   |-CXXCtorInitializer Field 0x563ee31c43e8 'read' 'Element *'
|   | `-ImplicitCastExpr 0x563ee31d7cf8 <line:63:13> 'Element *' <NullToPointer>
|   |   `-IntegerLiteral 0x563ee31d7cb8 <col:13> 'int' 0
|   |-CXXCtorInitializer Field 0x563ee31c4448 'write' 'Element *'
|   | `-ImplicitCastExpr 0x563ee31d7d78 <col:23> 'Element *' <NullToPointer>
|   |   `-IntegerLiteral 0x563ee31d7d38 <col:23> 'int' 0
|   |-CXXCtorInitializer Field 0x563ee31c44b0 'pollfd' 'int'
|   | `-UnaryOperator 0x563ee31d7dd8 <col:34, col:35> 'int' prefix '-'
|   |   `-IntegerLiteral 0x563ee31d7db8 <col:35> 'int' 1
|   `-CompoundStmt 0x563ee31d7e50 <line:64:2, line:65:2>
|-FieldDecl 0x563ee31c4688 <line:68:5, col:21> col:9 referenced _wake_pipe 'int [2]'
|-FieldDecl 0x563ee31c46e8 <line:69:5, col:19> col:19 referenced _wake_pipe_pending 'volatile bool'
|-FieldDecl 0x563ee31cb810 <line:82:5, col:27> col:27 _pollfds 'Vector<struct pollfd>':'Vector<pollfd>'
|-FieldDecl 0x563ee31d6640 <line:83:5, col:26> col:26 _selinfo 'Vector<SelectSet::SelectorInfo>':'Vector<SelectSet::SelectorInfo>'
|-CXXMethodDecl 0x563ee31d6900 <line:89:5, col:63> col:10 register_select 'void (int, bool, bool)'
| |-ParmVarDecl 0x563ee31d66a8 <col:26, col:30> col:30 fd 'int'
| |-ParmVarDecl 0x563ee31d6720 <col:34, col:39> col:39 add_read 'bool'
| `-ParmVarDecl 0x563ee31d6798 <col:49, col:54> col:54 add_write 'bool'
|-CXXMethodDecl 0x563ee31d6ae8 <line:90:5, col:41> col:10 remove_pollfd 'void (int, int)'
| |-ParmVarDecl 0x563ee31d69d0 <col:24, col:28> col:28 pi 'int'
| `-ParmVarDecl 0x563ee31d6a50 <col:32, col:36> col:36 event 'int'
|-CXXMethodDecl 0x563ee31d6d38 <line:91:5, col:49> col:17 call_selected 'void (int, int) const' inline
| |-ParmVarDecl 0x563ee31d6bb0 <col:31, col:35> col:35 fd 'int'
| `-ParmVarDecl 0x563ee31d6c30 <col:39, col:43> col:43 mask 'int'
|-CXXMethodDecl 0x563ee31d6f48 <line:92:5, col:63> col:17 post_select 'bool (RouterThread *, bool)' inline
| |-ParmVarDecl 0x563ee31d6df8 <col:29, col:43> col:43 thread 'RouterThread *'
| `-ParmVarDecl 0x563ee31d6e70 <col:51, col:56> col:56 acquire 'bool'
|-CXXMethodDecl 0x563ee31d7098 <line:97:5, col:47> col:10 run_selects_poll 'void (RouterThread *)'
| `-ParmVarDecl 0x563ee31d7008 <col:27, col:41> col:41 thread 'RouterThread *'
|-CXXMethodDecl 0x563ee31d7160 <line:102:5, col:22> col:17 used lock 'void ()' inline
|-CXXMethodDecl 0x563ee31d7220 <line:103:5, col:24> col:17 used unlock 'void ()' inline
|-CXXConstructorDecl 0x563ee31d72e8 <line:36:7> col:7 implicit SelectSet 'void (const SelectSet &)' inline default noexcept-unevaluated 0x563ee31d72e8
| `-ParmVarDecl 0x563ee31d73f8 <col:7> col:7 'const SelectSet &'
`-CXXMethodDecl 0x563ee31d7498 <col:7> col:7 implicit operator= 'SelectSet &(const SelectSet &)' inline default noexcept-unevaluated 0x563ee31d7498
  `-ParmVarDecl 0x563ee31d75a8 <col:7> col:7 'const SelectSet &'

Layout: <CGRecordLayout
  LLVMType:%class.SelectSet = type { [2 x i32], i8, %class.Vector.15, %class.Vector.16 }
  NonVirtualBaseLLVMType:%class.SelectSet = type { [2 x i32], i8, %class.Vector.15, %class.Vector.16 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563ee3146478 <../dummy_inc/click/sync.hh:46:1, line:64:1> line:46:7 referenced class Spinlock definition
|-DefinitionData empty standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x563ee3146598 <col:1, col:7> col:7 implicit referenced class Spinlock
|-AccessSpecDecl 0x563ee3146628 <col:18, col:24> col:18 public
|-CXXConstructorDecl 0x563ee31466b0 <line:48:5, col:21> col:12 Spinlock 'void ()' inline
|-CXXDestructorDecl 0x563ee31467a0 <line:49:5, col:22> col:12 ~Spinlock 'void () noexcept' inline
|-CXXMethodDecl 0x563ee31468a0 <line:51:5, col:25> col:17 used acquire 'void ()' inline
|-CXXMethodDecl 0x563ee3146960 <line:52:5, col:25> col:17 used release 'void ()' inline
|-CXXMethodDecl 0x563ee3146a20 <line:53:5, col:25> col:17 attempt 'bool ()' inline
|-CXXMethodDecl 0x563ee3146b08 <line:54:5, col:26> col:17 nested 'bool () const' inline
|-CXXConstructorDecl 0x563ee3146c28 <line:46:7> col:7 implicit constexpr Spinlock 'void (const Spinlock &)' inline default trivial noexcept-unevaluated 0x563ee3146c28
| `-ParmVarDecl 0x563ee3146d38 <col:7> col:7 'const Spinlock &'
`-CXXMethodDecl 0x563ee31dca48 <col:7> col:7 implicit operator= 'Spinlock &(const Spinlock &)' inline default trivial noexcept-unevaluated 0x563ee31dca48
  `-ParmVarDecl 0x563ee31dcb58 <col:7> col:7 'const Spinlock &'

Layout: <CGRecordLayout
  LLVMType:%class.Spinlock = type { i8 }
  NonVirtualBaseLLVMType:%class.Spinlock.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563ee307c1a8 <../dummy_inc/click/task.hh:339:5, line:342:5> line:339:11 referenced union Pending definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x563ee307c2c8 <col:5, col:11> col:11 implicit union Pending
|-FieldDecl 0x563ee307c368 <line:340:9, col:15> col:15 t 'Task *'
|-FieldDecl 0x563ee307c3c8 <line:341:9, col:19> col:19 referenced x 'uintptr_t':'unsigned long'
|-CXXConstructorDecl 0x563ee31dc048 <line:339:11> col:11 implicit constexpr Pending 'void (const Task::Pending &)' inline default trivial noexcept-unevaluated 0x563ee31dc048
| `-ParmVarDecl 0x563ee31dc158 <col:11> col:11 'const Task::Pending &'
|-CXXConstructorDecl 0x563ee31dc1f8 <col:11> col:11 implicit constexpr Pending 'void (Task::Pending &&)' inline default trivial noexcept-unevaluated 0x563ee31dc1f8
| `-ParmVarDecl 0x563ee31dc308 <col:11> col:11 'Task::Pending &&'
|-CXXDestructorDecl 0x563ee31dc378 <col:11> col:11 implicit ~Pending 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x563ee31dcbf8 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(const Task::Pending &)' inline default trivial noexcept-unevaluated 0x563ee31dcbf8
| `-ParmVarDecl 0x563ee31dcd08 <col:11> col:11 'const Task::Pending &'
|-CXXMethodDecl 0x563ee31dcd78 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(Task::Pending &&)' inline default trivial noexcept-unevaluated 0x563ee31dcd78
| `-ParmVarDecl 0x563ee31dce88 <col:11> col:11 'Task::Pending &&'
`-CXXConstructorDecl 0x563ee31e3518 <col:11> col:11 implicit used Pending 'void () noexcept' inline default trivial
  `-CompoundStmt 0x563ee31e35f0 <col:11>

Layout: <CGRecordLayout
  LLVMType:%"union.Task::Pending" = type { %class.Task* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563ee30766b0 <../dummy_inc/click/sync.hh:303:1, line:324:1> line:303:7 referenced class SpinlockIRQ definition
|-DefinitionData pass_in_registers empty standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x563ee30767c8 <col:1, col:7> col:7 implicit referenced class SpinlockIRQ
|-AccessSpecDecl 0x563ee3076858 <col:21, col:27> col:21 public
|-CXXConstructorDecl 0x563ee30768e0 <line:305:5, col:24> col:12 SpinlockIRQ 'void ()' inline
|-TypedefDecl 0x563ee30769a0 <line:310:5, col:17> col:17 referenced flags_t 'int'
| `-BuiltinType 0x563ee2b90370 'int'
|-CXXMethodDecl 0x563ee3076a68 <line:313:5, col:59> col:20 acquire 'SpinlockIRQ::flags_t ()' inline
| `-AlwaysInlineAttr 0x563ee3076b08 <col:45> always_inline
|-CXXMethodDecl 0x563ee3076c38 <line:314:5, col:63> col:17 release 'void (SpinlockIRQ::flags_t)' inline
| |-ParmVarDecl 0x563ee3076b70 <col:25> col:32 'SpinlockIRQ::flags_t':'int'
| `-AlwaysInlineAttr 0x563ee3076ce0 <col:49> always_inline
|-CXXConstructorDecl 0x563ee3076dd8 <line:303:7> col:7 implicit constexpr SpinlockIRQ 'void (const SpinlockIRQ &)' inline default trivial noexcept-unevaluated 0x563ee3076dd8
| `-ParmVarDecl 0x563ee3076ee8 <col:7> col:7 'const SpinlockIRQ &'
|-CXXConstructorDecl 0x563ee3076f88 <col:7> col:7 implicit constexpr SpinlockIRQ 'void (SpinlockIRQ &&)' inline default trivial noexcept-unevaluated 0x563ee3076f88
| `-ParmVarDecl 0x563ee3077098 <col:7> col:7 'SpinlockIRQ &&'
|-CXXDestructorDecl 0x563ee31dc460 <col:7> col:7 implicit ~SpinlockIRQ 'void ()' inline default trivial noexcept-unevaluated 0x563ee31dc460
|-CXXMethodDecl 0x563ee31dcf28 <col:7> col:7 implicit operator= 'SpinlockIRQ &(const SpinlockIRQ &)' inline default trivial noexcept-unevaluated 0x563ee31dcf28
| `-ParmVarDecl 0x563ee31dd038 <col:7> col:7 'const SpinlockIRQ &'
`-CXXMethodDecl 0x563ee31dd0a8 <col:7> col:7 implicit operator= 'SpinlockIRQ &(SpinlockIRQ &&)' inline default trivial noexcept-unevaluated 0x563ee31dd0a8
  `-ParmVarDecl 0x563ee31dd1b8 <col:7> col:7 'SpinlockIRQ &&'

Layout: <CGRecordLayout
  LLVMType:%class.SpinlockIRQ = type { i8 }
  NonVirtualBaseLLVMType:%class.SpinlockIRQ.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563ee31d82c0 prev 0x563ee31c3380 <../dummy_inc/click/routerthread.hh:28:1, line:248:1> line:28:7 referenced class RouterThread definition
|-DefinitionData has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-CXXRecordDecl 0x563ee31d83b8 <col:1, col:7> col:7 implicit referenced class RouterThread
|-AccessSpecDecl 0x563ee31d8448 <col:22, col:28> col:22 public
|-EnumDecl 0x563ee31d8470 <line:30:5, col:58> col:5
| |-EnumConstantDecl 0x563ee31d8588 <col:12, col:32> col:12 THREAD_QUIESCENT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:30:5)'
| | `-ConstantExpr 0x563ee31d8568 <col:31, col:32> 'int' Int: -1
| |   `-UnaryOperator 0x563ee31d8550 <col:31, col:32> 'int' prefix '-'
| |     `-IntegerLiteral 0x563ee31d8530 <col:32> 'int' 1
| `-EnumConstantDecl 0x563ee31d8630 <col:35, col:53> col:35 THREAD_UNKNOWN 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:30:5)'
|   `-ConstantExpr 0x563ee31d8610 <col:52, col:53> 'int' Int: -1000
|     `-UnaryOperator 0x563ee31d85f8 <col:52, col:53> 'int' prefix '-'
|       `-IntegerLiteral 0x563ee31d85d8 <col:53> 'int' 1000
|-CXXMethodDecl 0x563ee31d86d0 <line:32:5, col:28> col:16 thread_id 'int () const' inline
|-CXXMethodDecl 0x563ee31d8790 <line:34:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x563ee31d8878 <line:35:5, col:52> col:22 timer_set 'TimerSet &()' inline
| `-CompoundStmt 0x563ee31dd278 <col:34, col:52>
|   `-ReturnStmt 0x563ee31dd268 <col:36, col:43>
|     `-MemberExpr 0x563ee31dd238 <col:43> 'TimerSet' lvalue ->_timers 0x563ee31da548
|       `-CXXThisExpr 0x563ee31dd228 <col:43> 'RouterThread *' implicit this
|-CXXMethodDecl 0x563ee31d8968 <line:36:5, col:64> col:28 timer_set 'const TimerSet &() const' inline
| `-CompoundStmt 0x563ee31dd2e0 <col:46, col:64>
|   `-ReturnStmt 0x563ee31dd2d0 <col:48, col:55>
|     `-MemberExpr 0x563ee31dd2a0 <col:55> 'const TimerSet' lvalue ->_timers 0x563ee31da548
|       `-CXXThisExpr 0x563ee31dd290 <col:55> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x563ee31d8a58 <line:38:5, col:55> col:23 select_set 'SelectSet &()' inline
| `-CompoundStmt 0x563ee31dd348 <col:36, col:55>
|   `-ReturnStmt 0x563ee31dd338 <col:38, col:45>
|     `-MemberExpr 0x563ee31dd308 <col:45> 'SelectSet' lvalue ->_selects 0x563ee31da5a8
|       `-CXXThisExpr 0x563ee31dd2f8 <col:45> 'RouterThread *' implicit this
|-CXXMethodDecl 0x563ee31d8b48 <line:39:5, col:67> col:29 select_set 'const SelectSet &() const' inline
| `-CompoundStmt 0x563ee31dd3b0 <col:48, col:67>
|   `-ReturnStmt 0x563ee31dd3a0 <col:50, col:57>
|     `-MemberExpr 0x563ee31dd370 <col:57> 'const SelectSet' lvalue ->_selects 0x563ee31da5a8
|       `-CXXThisExpr 0x563ee31dd360 <col:57> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x563ee31d8c08 <line:43:5, col:26> col:17 active 'bool () const' inline
|-CXXMethodDecl 0x563ee31d8cf8 <line:44:5, col:31> col:18 task_begin 'Task *() const' inline
|-CXXMethodDecl 0x563ee31d8e68 <line:45:5, col:40> col:18 task_next 'Task *(Task *) const' inline
| `-ParmVarDecl 0x563ee31d8da8 <col:28, col:34> col:34 task 'Task *'
|-CXXMethodDecl 0x563ee31d8f30 <line:46:5, col:29> col:18 task_end 'Task *() const' inline
|-CXXMethodDecl 0x563ee31d9378 <line:47:5, col:59> col:10 scheduled_tasks 'void (Router *, Vector<Task *> &)'
| |-ParmVarDecl 0x563ee31d8fe0 <col:26, col:34> col:34 router 'Router *'
| `-ParmVarDecl 0x563ee31d9260 <col:42, col:58> col:58 x 'Vector<Task *> &'
|-CXXMethodDecl 0x563ee31d9448 <line:49:5, col:28> col:17 lock_tasks 'void ()' inline
|-CXXMethodDecl 0x563ee31d9508 <line:50:5, col:30> col:17 unlock_tasks 'void ()' inline
|-CXXMethodDecl 0x563ee31d95c8 <line:52:5, col:38> col:17 schedule_block_tasks 'void ()' inline
|-CXXMethodDecl 0x563ee31d9708 <line:53:5, col:43> col:17 used block_tasks 'void (bool)' inline
| `-ParmVarDecl 0x563ee31d9678 <col:29, col:34> col:34 scheduled 'bool'
|-CXXMethodDecl 0x563ee31d97d0 <line:54:5, col:31> col:17 used unblock_tasks 'void ()' inline
|-CXXMethodDecl 0x563ee31d9890 <line:56:5, col:29> col:17 stop_flag 'bool () const' inline
|-CXXMethodDecl 0x563ee31d9950 <line:58:5, col:35> col:17 mark_driver_entry 'void ()' inline
|-CXXMethodDecl 0x563ee31d9a10 <line:59:5, col:17> col:10 driver 'void ()'
|-CXXMethodDecl 0x563ee31d9b50 <line:61:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x563ee31d9ac0 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x563ee31d9c18 <line:77:5, col:22> col:17 used wake 'void ()' inline
|-CXXMethodDecl 0x563ee31d9cd8 <line:80:5, col:29> col:17 run_signals 'void ()' inline
|-EnumDecl 0x563ee31d9d78 <line:83:5, line:86:20> line:83:5
| |-EnumConstantDecl 0x563ee31d9e40 <col:12> col:12 referenced S_PAUSED 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x563ee31d9e90 <col:22> col:22 referenced S_BLOCKED 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x563ee31d9ee0 <col:33> col:33 referenced S_TIMERWAIT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x563ee31d9f30 <line:84:12> col:12 S_LOCKSELECT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x563ee31d9f80 <col:26> col:26 S_LOCKTASKS 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x563ee31d9fd0 <line:85:12> col:12 S_RUNTASK 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x563ee31da020 <col:23> col:23 S_RUNTIMER 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x563ee31da070 <col:35> col:35 S_RUNSIGNAL 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x563ee31da0c0 <col:48> col:48 S_RUNPENDING 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x563ee31da110 <col:62> col:62 S_RUNSELECT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| `-EnumConstantDecl 0x563ee31da160 <line:86:12> col:12 NSTATES 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
|-CXXMethodDecl 0x563ee31da258 <line:87:5, col:43> col:17 used set_thread_state 'void (int)' inline
| `-ParmVarDecl 0x563ee31da1c8 <col:34, col:38> col:38 state 'int'
|-CXXMethodDecl 0x563ee31da3a8 <line:88:5, col:61> col:17 set_thread_state_for_blocking 'void (int)' inline
| `-ParmVarDecl 0x563ee31da318 <col:47, col:51> col:51 delay_type 'int'
|-AccessSpecDecl 0x563ee31da450 <line:104:3, col:10> col:3 private
|-FieldDecl 0x563ee31da488 <line:119:5, col:14> col:14 referenced _task_link 'TaskLink'
|-FieldDecl 0x563ee31da4e8 <line:120:5, col:19> col:19 referenced _stop_flag 'volatile bool'
|-FieldDecl 0x563ee31da548 <line:125:5, col:14> col:14 referenced _timers 'TimerSet'
|-FieldDecl 0x563ee31da5a8 <line:127:5, col:15> col:15 referenced _selects 'SelectSet'
|-FieldDecl 0x563ee31da628 <line:148:5, col:14> col:14 referenced _task_lock 'Spinlock'
| `-AlignedAttr 0x563ee31da698 <col:40, col:50> aligned
|   `-ConstantExpr 0x563ee31da678 <col:48> 'int' Int: 64
|     `-IntegerLiteral 0x563ee31da5f8 <col:48> 'int' 64
|-FieldDecl 0x563ee31da708 <line:149:5, col:21> col:21 referenced _task_blocker 'atomic_uint32_t'
|-FieldDecl 0x563ee31da768 <line:150:5, col:21> col:21 referenced _task_blocker_waiting 'atomic_uint32_t'
|-FieldDecl 0x563ee31da860 <line:152:5, col:19> col:19 referenced _pending_head 'Task::Pending':'Task::Pending'
|-FieldDecl 0x563ee31da970 <line:153:5, col:20> col:20 _pending_tail 'Task::Pending *'
|-FieldDecl 0x563ee31da9d0 <line:154:5, col:17> col:17 _pending_lock 'SpinlockIRQ'
|-FieldDecl 0x563ee31daa50 <line:157:5, col:13> col:13 referenced _master 'Master *'
| `-AlignedAttr 0x563ee31daac0 <col:36, col:46> aligned
|   `-ConstantExpr 0x563ee31daaa0 <col:44> 'int' Int: 64
|     `-IntegerLiteral 0x563ee31daa20 <col:44> 'int' 64
|-FieldDecl 0x563ee31dab38 <line:158:5, col:9> col:9 referenced _id 'int'
|-FieldDecl 0x563ee31dab98 <line:159:5, col:10> col:10 referenced _driver_entered 'bool'
|-AccessSpecDecl 0x563ee31dabe8 <line:170:3, col:9> col:3 public
|-FieldDecl 0x563ee31dac28 <line:171:5, col:14> col:14 _tasks_per_iter 'unsigned int'
|-FieldDecl 0x563ee31dac90 <line:172:5, col:14> col:14 _iters_per_os 'unsigned int'
|-AccessSpecDecl 0x563ee31dace0 <line:173:3, col:10> col:3 private
|-CXXConstructorDecl 0x563ee31dae88 <line:205:5, col:46> col:5 RouterThread 'void (Master *, int)'
| |-ParmVarDecl 0x563ee31dad18 <col:18, col:26> col:26 master 'Master *'
| `-ParmVarDecl 0x563ee31dad98 <col:34, col:38> col:38 threadno 'int'
|-CXXDestructorDecl 0x563ee31daf88 <line:206:5, col:19> col:5 ~RouterThread 'void ()' noexcept-unevaluated 0x563ee31daf88
|-CXXMethodDecl 0x563ee31db090 <line:209:5, col:29> col:17 add_pending 'void ()' inline
|-CXXMethodDecl 0x563ee31db158 <line:211:5, line:217:5> line:211:21 pass 'unsigned int () const' inline
| `-CompoundStmt 0x563ee31dd4a8 <col:34, line:217:5>
|   `-ReturnStmt 0x563ee31dd498 <line:215:9, col:34>
|     `-ImplicitCastExpr 0x563ee31dd480 <col:16, col:34> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x563ee31dd450 <col:16, col:34> 'unsigned int' lvalue ->_pass 0x563ee3079210
|         `-ImplicitCastExpr 0x563ee31dd438 <col:16, col:27> 'TaskLink *' <LValueToRValue>
|           `-MemberExpr 0x563ee31dd408 <col:16, col:27> 'TaskLink *const' lvalue ._next 0x563ee30791a8
|             `-MemberExpr 0x563ee31dd3d8 <col:16> 'const TaskLink' lvalue ->_task_link 0x563ee31da488
|               `-CXXThisExpr 0x563ee31dd3c8 <col:16> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x563ee31db218 <line:221:5, col:28> col:10 driver_lock_tasks 'void ()'
|-CXXMethodDecl 0x563ee31db2d8 <line:222:5, line:226:5> line:222:17 driver_unlock_tasks 'void ()' inline
| `-CompoundStmt 0x563ee31ddbd0 <col:39, line:226:5>
|   |-DeclStmt 0x563ee31dd6f8 <line:223:9, col:68>
|   | `-VarDecl 0x563ee31dd4d0 <col:9, col:67> col:18 used val 'uint32_t':'unsigned int' cinit
|   |   `-CXXMemberCallExpr 0x563ee31dd6b0 <col:24, col:67> 'uint32_t':'unsigned int'
|   |     |-MemberExpr 0x563ee31dd680 <col:24, col:38> '<bound member function type>' .compare_swap 0x563ee2ebc6e0
|   |     | `-MemberExpr 0x563ee31dd548 <col:24> 'atomic_uint32_t' lvalue ->_task_blocker 0x563ee31da708
|   |     |   `-CXXThisExpr 0x563ee31dd538 <col:24> 'RouterThread *' implicit this
|   |     |-CStyleCastExpr 0x563ee31dd638 <col:51, col:63> 'uint32_t':'unsigned int' <NoOp>
|   |     | `-ImplicitCastExpr 0x563ee31dd620 <col:62, col:63> 'uint32_t':'unsigned int' <IntegralCast> part_of_explicit_cast
|   |     |   `-UnaryOperator 0x563ee31dd5f8 <col:62, col:63> 'int' prefix '-'
|   |     |     `-IntegerLiteral 0x563ee31dd5d8 <col:63> 'int' 1
|   |     `-ImplicitCastExpr 0x563ee31dd6e0 <col:66> 'uint32_t':'unsigned int' <IntegralCast>
|   |       `-IntegerLiteral 0x563ee31dd660 <col:66> 'int' 0
|   |-CStyleCastExpr 0x563ee31dd740 <line:224:9, col:16> 'void' <ToVoid>
|   | `-DeclRefExpr 0x563ee31dd710 <col:16> 'uint32_t':'unsigned int' lvalue Var 0x563ee31dd4d0 'val' 'uint32_t':'unsigned int'
|   `-ParenExpr 0x563ee31ddbb0 <line:225:9, col:181> 'void'
|     `-ConditionalOperator 0x563ee31ddb80 <col:10, col:180> 'void'
|       |-CXXStaticCastExpr 0x563ee31dd858 <col:10, col:50> 'bool' static_cast<_Bool> <NoOp>
|       | `-BinaryOperator 0x563ee31dd828 <col:30, col:49> 'bool' '=='
|       |   |-ImplicitCastExpr 0x563ee31dd810 <col:30> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-DeclRefExpr 0x563ee31dd768 <col:30> 'uint32_t':'unsigned int' lvalue Var 0x563ee31dd4d0 'val' 'uint32_t':'unsigned int'
|       |   `-CStyleCastExpr 0x563ee31dd7e8 <col:37, col:49> 'uint32_t':'unsigned int' <NoOp>
|       |     `-ImplicitCastExpr 0x563ee31dd7d0 <col:48, col:49> 'uint32_t':'unsigned int' <IntegralCast> part_of_explicit_cast
|       |       `-UnaryOperator 0x563ee31dd7a8 <col:48, col:49> 'int' prefix '-'
|       |         `-IntegerLiteral 0x563ee31dd788 <col:49> 'int' 1
|       |-CXXFunctionalCastExpr 0x563ee31dd8b8 <col:54, col:61> 'void' functional cast to void <ToVoid>
|       | `-IntegerLiteral 0x563ee31dd898 <col:60> 'int' 0
|       `-CallExpr 0x563ee31ddae0 <col:65, col:180> 'void'
|         |-ImplicitCastExpr 0x563ee31ddac8 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x563ee31ddaa8 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x563ee2c314e0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|         |-ImplicitCastExpr 0x563ee31ddb20 <col:80> 'const char *' <ArrayToPointerDecay>
|         | `-StringLiteral 0x563ee31dd9a8 <col:80> 'const char [21]' lvalue "val == (uint32_t) -1"
|         |-ImplicitCastExpr 0x563ee31ddb38 <col:104> 'const char *' <ArrayToPointerDecay>
|         | `-StringLiteral 0x563ee31dd9d8 <col:104> 'const char [35]' lvalue "../dummy_inc/click/routerthread.hh"
|         |-ImplicitCastExpr 0x563ee31ddb50 <col:142> 'unsigned int' <IntegralCast>
|         | `-IntegerLiteral 0x563ee31dda18 <col:142> 'int' 225
|         `-ImplicitCastExpr 0x563ee31ddb68 <col:147, col:161> 'const char *' <ArrayToPointerDecay>
|           `-UnaryOperator 0x563ee31dda90 <col:147, col:161> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|             `-PredefinedExpr 0x563ee31dda78 <col:161> 'const char [41]' lvalue __PRETTY_FUNCTION__
|               `-StringLiteral 0x563ee31dda38 <col:161> 'const char [41]' lvalue "void RouterThread::driver_unlock_tasks()"
|-CXXMethodDecl 0x563ee31db420 <line:228:5, col:37> col:17 run_tasks 'void (int)' inline
| `-ParmVarDecl 0x563ee31db390 <col:27, col:31> col:31 ntasks 'int'
|-CXXMethodDecl 0x563ee31db4e8 <line:229:5, col:33> col:17 process_pending 'void ()' inline
|-CXXMethodDecl 0x563ee31db5a8 <line:230:5, col:24> col:17 run_os 'void ()' inline
|-CXXMethodDecl 0x563ee31db668 <line:238:5, col:45> col:24 used running_in_interrupt 'bool ()' static inline
|-CXXMethodDecl 0x563ee31db728 <line:239:5, col:45> col:17 used current_thread_is_running 'bool () const' inline
|-CXXMethodDecl 0x563ee31db7e8 <line:240:5, col:53> col:17 current_thread_is_running_cleanup 'bool () const' inline
|-FriendDecl 0x563ee31db8e0 <line:242:5, col:18> col:12 'class Task':'Task'
|-FriendDecl 0x563ee31db940 <line:243:5, col:18> col:12 'class Master':'Master'
|-FriendDecl 0x563ee31db9d0 <line:245:5, col:18> col:12 'class SelectSet':'SelectSet'
|-CXXConstructorDecl 0x563ee31dbd98 <line:28:7> col:7 implicit RouterThread 'void (const RouterThread &)' inline default noexcept-unevaluated 0x563ee31dbd98
| `-ParmVarDecl 0x563ee31dbea8 <col:7> col:7 'const RouterThread &'
`-CXXMethodDecl 0x563ee31dc568 <col:7> col:7 implicit operator= 'RouterThread &(const RouterThread &)' inline default noexcept-unevaluated 0x563ee31dc568
  `-ParmVarDecl 0x563ee31dc678 <col:7> col:7 'const RouterThread &'

Layout: <CGRecordLayout
  LLVMType:%class.RouterThread = type { %struct.TaskLink, i8, [7 x i8], %class.TimerSet, %class.SelectSet, [32 x i8], %class.Spinlock, %class.atomic_uint32_t, %class.atomic_uint32_t, %"union.Task::Pending", %"union.Task::Pending"*, %class.SpinlockIRQ, [31 x i8], %class.Master*, i32, i8, i32, i32, [40 x i8] }
  NonVirtualBaseLLVMType:%class.RouterThread.base = type { %struct.TaskLink, i8, [7 x i8], %class.TimerSet, %class.SelectSet, [32 x i8], %class.Spinlock, %class.atomic_uint32_t, %class.atomic_uint32_t, %"union.Task::Pending", %"union.Task::Pending"*, %class.SpinlockIRQ, [31 x i8], %class.Master*, i32, i8, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563ee3079520 prev 0x563ee30f6980 <../dummy_inc/click/task.hh:49:1, line:371:1> line:49:7 referenced class Task definition
|-DefinitionData has_user_declared_ctor can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-private 'TaskLink'
|-CXXRecordDecl 0x563ee3079658 <col:1, col:7> col:7 implicit referenced class Task
|-AccessSpecDecl 0x563ee30796e8 <col:33, col:39> col:33 public
|-EnumDecl 0x563ee3079710 <line:52:5, col:50> col:5
| |-EnumConstantDecl 0x563ee3079850 <col:12, col:26> col:12 referenced STRIDE1 'Task::(anonymous enum at ../dummy_inc/click/task.hh:52:5)'
| | `-ConstantExpr 0x563ee3079830 <col:22, col:26> 'unsigned int' Int: 65536
| |   `-BinaryOperator 0x563ee3079810 <col:22, col:26> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x563ee30797d0 <col:22> 'unsigned int' 1
| |     `-IntegerLiteral 0x563ee30797f0 <col:26> 'int' 16
| `-EnumConstantDecl 0x563ee3079920 <col:30, col:47> col:30 referenced MAX_STRIDE 'Task::(anonymous enum at ../dummy_inc/click/task.hh:52:5)'
|   `-ConstantExpr 0x563ee3079900 <col:43, col:47> 'unsigned int' Int: 2147483648
|     `-BinaryOperator 0x563ee30798e0 <col:43, col:47> 'unsigned int' '<<'
|       |-IntegerLiteral 0x563ee30798a0 <col:43> 'unsigned int' 1
|       `-IntegerLiteral 0x563ee30798c0 <col:47> 'int' 31
|-EnumDecl 0x563ee3079970 <line:53:5, col:57> col:5
| |-EnumConstantDecl 0x563ee3079ab0 <col:12, col:29> col:12 referenced MAX_TICKETS 'Task::(anonymous enum at ../dummy_inc/click/task.hh:53:5)'
| | `-ImplicitCastExpr 0x563ee3079bd0 <col:26, col:29> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563ee3079a90 <col:26, col:29> 'int' Int: 32768
| |     `-BinaryOperator 0x563ee3079a70 <col:26, col:29> 'int' '<<'
| |       |-IntegerLiteral 0x563ee3079a30 <col:26> 'int' 1
| |       `-IntegerLiteral 0x563ee3079a50 <col:29> 'int' 15
| `-EnumConstantDecl 0x563ee3079b80 <col:33, col:54> col:33 DEFAULT_TICKETS 'Task::(anonymous enum at ../dummy_inc/click/task.hh:53:5)'
|   `-ImplicitCastExpr 0x563ee3079be8 <col:51, col:54> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x563ee3079b60 <col:51, col:54> 'int' Int: 1024
|       `-BinaryOperator 0x563ee3079b40 <col:51, col:54> 'int' '<<'
|         |-IntegerLiteral 0x563ee3079b00 <col:51> 'int' 1
|         `-IntegerLiteral 0x563ee3079b20 <col:54> 'int' 10
|-CXXConstructorDecl 0x563ee3079db8 <line:75:5, col:48> col:12 Task 'void (TaskCallback, void *)' inline
| |-ParmVarDecl 0x563ee3079c10 <col:17, col:30> col:30 f 'TaskCallback':'bool (*)(Task *, void *)'
| `-ParmVarDecl 0x563ee3079c90 <col:33, col:39> col:39 user_data 'void *'
|-CXXConstructorDecl 0x563ee3079f48 <line:86:5, col:27> col:12 used Task 'void (Element *)' inline
| `-ParmVarDecl 0x563ee3079e80 <col:17, col:26> col:26 e 'Element *'
|-CXXDestructorDecl 0x563ee307a040 <line:91:5, col:11> col:5 used ~Task 'void () noexcept'
|-CXXMethodDecl 0x563ee307a1c8 <line:98:5, line:100:5> line:98:25 callback 'TaskCallback () const' inline
| `-CompoundStmt 0x563ee307d308 <col:42, line:100:5>
|   `-ReturnStmt 0x563ee307d2f8 <line:99:9, col:16>
|     `-ImplicitCastExpr 0x563ee307d2e0 <col:16> 'TaskCallback':'bool (*)(Task *, void *)' <LValueToRValue>
|       `-MemberExpr 0x563ee307d2b0 <col:16> 'const TaskCallback':'bool (*const)(Task *, void *)' lvalue ->_hook 0x563ee307c030
|         `-CXXThisExpr 0x563ee307d2a0 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x563ee307a290 <line:103:5, line:105:5> line:103:18 user_data 'void *() const' inline
| `-CompoundStmt 0x563ee307d388 <col:36, line:105:5>
|   `-ReturnStmt 0x563ee307d378 <line:104:9, col:16>
|     `-ImplicitCastExpr 0x563ee307d360 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x563ee307d330 <col:16> 'void *const' lvalue ->_thunk 0x563ee307c098
|         `-CXXThisExpr 0x563ee307d320 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x563ee307a350 <line:108:5, line:110:5> line:108:21 element 'Element *() const' inline
| `-CompoundStmt 0x563ee307d408 <col:37, line:110:5>
|   `-ReturnStmt 0x563ee307d3f8 <line:109:9, col:16>
|     `-ImplicitCastExpr 0x563ee307d3e0 <col:16> 'Element *' <LValueToRValue>
|       `-MemberExpr 0x563ee307d3b0 <col:16> 'Element *const' lvalue ->_owner 0x563ee307c158
|         `-CXXThisExpr 0x563ee307d3a0 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x563ee307a410 <line:114:5, col:31> col:17 initialized 'bool () const' inline
|-CXXMethodDecl 0x563ee307a4d8 <line:123:5, col:33> col:16 home_thread_id 'int () const' inline
|-CXXMethodDecl 0x563ee307a598 <line:132:5, col:35> col:26 thread 'RouterThread *() const' inline
|-CXXMethodDecl 0x563ee307a658 <line:135:5, line:137:5> line:135:20 router 'Router *() const' inline
| `-CompoundStmt 0x563ee307d4f0 <col:35, line:137:5>
|   `-ReturnStmt 0x563ee307d4e0 <line:136:9, col:31>
|     `-CXXMemberCallExpr 0x563ee307d4a8 <col:16, col:31> 'Router *'
|       `-MemberExpr 0x563ee307d478 <col:16, col:24> '<bound member function type>' ->router 0x563ee3109190
|         `-ImplicitCastExpr 0x563ee307d4c8 <col:16> 'const Element *' <NoOp>
|           `-ImplicitCastExpr 0x563ee307d460 <col:16> 'Element *' <LValueToRValue>
|             `-MemberExpr 0x563ee307d430 <col:16> 'Element *const' lvalue ->_owner 0x563ee307c158
|               `-CXXThisExpr 0x563ee307d420 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x563ee307a718 <line:140:5, col:22> col:13 master 'Master *() const'
|-CXXMethodDecl 0x563ee307a918 <line:159:5, col:50> col:10 initialize 'void (Element *, bool)'
| |-ParmVarDecl 0x563ee307a7c8 <col:21, col:30> col:30 owner 'Element *'
| `-ParmVarDecl 0x563ee307a840 <col:37, col:42> col:42 schedule 'bool'
|-CXXMethodDecl 0x563ee307ab28 <line:169:5, col:50> col:10 initialize 'void (Router *, bool)'
| |-ParmVarDecl 0x563ee307a9d8 <col:21, col:29> col:29 router 'Router *'
| `-ParmVarDecl 0x563ee307aa50 <col:37, col:42> col:42 schedule 'bool'
|-CXXMethodDecl 0x563ee307abf8 <line:179:5, line:181:5> line:179:17 scheduled 'bool () const' inline
| `-CompoundStmt 0x563ee307d600 <col:35, line:181:5>
|   `-ReturnStmt 0x563ee307d5f0 <line:180:9, col:24>
|     `-ImplicitCastExpr 0x563ee307d5d8 <col:16, col:24> 'bool' <IntegralToBoolean>
|       `-ImplicitCastExpr 0x563ee307d5c0 <col:16, col:24> 'uint8_t':'unsigned char' <LValueToRValue>
|         `-MemberExpr 0x563ee307d590 <col:16, col:24> 'const uint8_t':'const unsigned char' lvalue .is_scheduled 0x563ee307bc68
|           `-MemberExpr 0x563ee307d548 <col:16, col:24> 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x563ee307bd88
|             `-MemberExpr 0x563ee307d518 <col:16> 'const union Status':'const Task::Status' lvalue ->_status 0x563ee307bfb8
|               `-CXXThisExpr 0x563ee307d508 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x563ee307acb8 <line:190:5, line:192:5> line:190:17 unschedule 'void ()' inline
| `-CompoundStmt 0x563ee307d718 <col:30, line:192:5>
|   `-BinaryOperator 0x563ee307d6f8 <line:191:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x563ee307d6a0 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x563ee307bc68
|     | `-MemberExpr 0x563ee307d658 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x563ee307bd88
|     |   `-MemberExpr 0x563ee307d628 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x563ee307bfb8
|     |     `-CXXThisExpr 0x563ee307d618 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x563ee307d6e0 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x563ee307d6d0 <col:32> 'bool' false
|-CXXMethodDecl 0x563ee307ad78 <line:201:5, line:206:5> line:201:17 used reschedule 'void ()' inline
| `-CompoundStmt 0x563ee307da68 <col:30, line:206:5>
|   |-BinaryOperator 0x563ee307d810 <line:202:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x563ee307d7b8 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x563ee307bc68
|   | | `-MemberExpr 0x563ee307d770 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x563ee307bd88
|   | |   `-MemberExpr 0x563ee307d740 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x563ee307bfb8
|   | |     `-CXXThisExpr 0x563ee307d730 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x563ee307d7f8 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x563ee307d7e8 <col:32> 'bool' true
|   |-CallExpr 0x563ee307d8b0 <line:203:9, col:21> 'void'
|   | `-ImplicitCastExpr 0x563ee307d898 <col:9> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563ee307d878 <col:9> 'void ()' lvalue Function 0x563ee3146030 'click_fence' 'void ()'
|   `-IfStmt 0x563ee307da50 <line:204:9, line:205:32>
|     |-BinaryOperator 0x563ee307d990 <line:204:13, col:34> 'bool' '<'
|     | |-ImplicitCastExpr 0x563ee307d960 <col:13, col:30> 'uintptr_t':'unsigned long' <LValueToRValue>
|     | | `-MemberExpr 0x563ee307d910 <col:13, col:30> 'uintptr_t':'unsigned long' lvalue .x 0x563ee307c3c8
|     | |   `-MemberExpr 0x563ee307d8e0 <col:13> 'Task::Pending' lvalue ->_pending_nextptr 0x563ee307c440
|     | |     `-CXXThisExpr 0x563ee307d8d0 <col:13> 'Task *' implicit this
|     | `-ImplicitCastExpr 0x563ee307d978 <col:34> 'unsigned long' <IntegralCast>
|     |   `-IntegerLiteral 0x563ee307d940 <col:34> 'int' 2
|     `-CXXMemberCallExpr 0x563ee307da10 <line:205:13, col:32> 'void'
|       |-MemberExpr 0x563ee307d9c0 <col:13> '<bound member function type>' ->complete_schedule 0x563ee307ce40
|       | `-CXXThisExpr 0x563ee307d9b0 <col:13> 'Task *' implicit this
|       `-ImplicitCastExpr 0x563ee307da38 <col:31> 'RouterThread *' <NullToPointer>
|         `-IntegerLiteral 0x563ee307d9f0 <col:31> 'int' 0
|-CXXMethodDecl 0x563ee307ae38 <line:238:5, line:240:5> line:238:17 fast_reschedule 'void ()' inline
| `-CompoundStmt 0x563ee307db90 <col:35, line:240:5>
|   `-BinaryOperator 0x563ee307db70 <line:239:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x563ee307db18 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x563ee307bc68
|     | `-MemberExpr 0x563ee307dad0 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x563ee307bd88
|     |   `-MemberExpr 0x563ee307daa0 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x563ee307bfb8
|     |     `-CXXThisExpr 0x563ee307da90 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x563ee307db58 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x563ee307db48 <col:32> 'bool' true
|-CXXMethodDecl 0x563ee307aef8 <line:250:5, line:253:5> line:250:17 strong_unschedule 'void ()' inline
| `-CompoundStmt 0x563ee307dda8 <col:37, line:253:5>
|   |-BinaryOperator 0x563ee307dc88 <line:251:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x563ee307dc30 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x563ee307bc68
|   | | `-MemberExpr 0x563ee307dbe8 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x563ee307bd88
|   | |   `-MemberExpr 0x563ee307dbb8 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x563ee307bfb8
|   | |     `-CXXThisExpr 0x563ee307dba8 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x563ee307dc70 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x563ee307dc60 <col:32> 'bool' false
|   `-BinaryOperator 0x563ee307dd88 <line:252:9, col:41> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x563ee307dd30 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_strong_unscheduled 0x563ee307bcc8
|     | `-MemberExpr 0x563ee307dce8 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x563ee307bd88
|     |   `-MemberExpr 0x563ee307dcb8 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x563ee307bfb8
|     |     `-CXXThisExpr 0x563ee307dca8 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x563ee307dd70 <col:41> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x563ee307dd60 <col:41> 'bool' true
|-CXXMethodDecl 0x563ee307afb8 <line:261:5, line:264:5> line:261:17 strong_reschedule 'void ()' inline
| `-CompoundStmt 0x563ee307df28 <col:37, line:264:5>
|   |-BinaryOperator 0x563ee307dea8 <line:262:9, col:41> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x563ee307de50 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_strong_unscheduled 0x563ee307bcc8
|   | | `-MemberExpr 0x563ee307de08 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x563ee307bd88
|   | |   `-MemberExpr 0x563ee307ddd8 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x563ee307bfb8
|   | |     `-CXXThisExpr 0x563ee307ddc8 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x563ee307de90 <col:41> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x563ee307de80 <col:41> 'bool' false
|   `-CXXMemberCallExpr 0x563ee307df08 <line:263:9, col:20> 'void'
|     `-MemberExpr 0x563ee307ded8 <col:9> '<bound member function type>' ->reschedule 0x563ee307ad78
|       `-CXXThisExpr 0x563ee307dec8 <col:9> 'Task *' implicit this
|-CXXMethodDecl 0x563ee307b100 <line:275:5, col:39> col:10 move_thread 'void (int)'
| `-ParmVarDecl 0x563ee307b070 <col:22, col:26> col:26 new_thread_id 'int'
|-CXXMethodDecl 0x563ee307b1d0 <line:279:5, col:26> col:16 tickets 'int () const' inline
|-CXXMethodDecl 0x563ee307b318 <line:280:5, col:34> col:17 used set_tickets 'void (int)' inline
| `-ParmVarDecl 0x563ee307b288 <col:29, col:33> col:33 n 'int'
|-CXXMethodDecl 0x563ee307b468 <line:281:5, col:41> col:17 adjust_tickets 'void (int)' inline
| `-ParmVarDecl 0x563ee307b3d8 <col:32, col:36> col:36 delta 'int'
|-CXXMethodDecl 0x563ee307b530 <line:284:5, col:22> col:17 fire 'bool ()' inline
|-CXXMethodDecl 0x563ee307b5f0 <line:299:5, col:64> col:25 hook 'TaskCallback () const' inline
| `-DeprecatedAttr 0x563ee307b690 <col:53> "" ""
|-CXXMethodDecl 0x563ee307b728 <line:300:5, col:58> col:18 thunk 'void *() const' inline
| `-DeprecatedAttr 0x563ee307b7c8 <col:47> "" ""
|-AccessSpecDecl 0x563ee307b838 <line:303:3, col:10> col:3 private
|-FieldDecl 0x563ee307b878 <line:310:5, col:14> col:14 referenced _stride 'unsigned int'
|-FieldDecl 0x563ee307b8e0 <line:311:5, col:9> col:9 referenced _tickets 'int'
|-CXXRecordDecl 0x563ee307b930 <line:314:5, line:321:5> line:314:11 union Status definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x563ee307ba48 <col:5, col:11> col:11 implicit union Status
| |-CXXRecordDecl 0x563ee307bad8 <line:315:9, line:319:9> line:315:9 struct definition
| | |-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | | |-DefaultConstructor exists trivial
| | | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | | |-MoveConstructor exists simple trivial
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial
| | |-FieldDecl 0x563ee307bc08 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
| | |-FieldDecl 0x563ee307bc68 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
| | |-FieldDecl 0x563ee307bcc8 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
| | |-CXXConstructorDecl 0x563ee31e2c48 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
| | |-CXXDestructorDecl 0x563ee31e2d20 <col:9> col:9 implicit ~ 'void () noexcept' inline default trivial
| | |-CXXConstructorDecl 0x563ee31e2fd8 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x563ee31e2fd8
| | | `-ParmVarDecl 0x563ee31e30e8 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
| | `-CXXConstructorDecl 0x563ee31e3188 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x563ee31e3188
| |   `-ParmVarDecl 0x563ee31e3298 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'
| |-FieldDecl 0x563ee307bd88 <col:9> col:9 implicit referenced 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| |-IndirectFieldDecl 0x563ee307bde8 <line:316:21> col:21 implicit home_thread_id 'int16_t':'short'
| | |-Field 0x563ee307bd88 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x563ee307bc08 'home_thread_id' 'int16_t':'short'
| |-IndirectFieldDecl 0x563ee307be40 <line:317:21> col:21 implicit is_scheduled 'uint8_t':'unsigned char'
| | |-Field 0x563ee307bd88 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x563ee307bc68 'is_scheduled' 'uint8_t':'unsigned char'
| |-IndirectFieldDecl 0x563ee307be98 <line:318:21> col:21 implicit is_strong_unscheduled 'uint8_t':'unsigned char'
| | |-Field 0x563ee307bd88 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x563ee307bcc8 'is_strong_unscheduled' 'uint8_t':'unsigned char'
| |-FieldDecl 0x563ee307bef0 <line:320:9, col:18> col:18 status 'uint32_t':'unsigned int'
| |-CXXConstructorDecl 0x563ee31e2b58 <line:314:11> col:11 implicit used Status 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x563ee31e34b8 <col:11>
| |-CXXConstructorDecl 0x563ee31e2e28 <col:11> col:11 implicit constexpr Status 'void (const Task::Status &)' inline default trivial noexcept-unevaluated 0x563ee31e2e28
| | `-ParmVarDecl 0x563ee31e2f38 <col:11> col:11 'const Task::Status &'
| |-CXXConstructorDecl 0x563ee31e3338 <col:11> col:11 implicit constexpr Status 'void (Task::Status &&)' inline default trivial noexcept-unevaluated 0x563ee31e3338
| | `-ParmVarDecl 0x563ee31e3448 <col:11> col:11 'Task::Status &&'
| `-CXXDestructorDecl 0x563ee3311238 <col:11> col:11 implicit ~Status 'void () noexcept' inline default trivial
|-FieldDecl 0x563ee307bfb8 <col:5, line:321:7> col:7 referenced _status 'union Status':'Task::Status'
|-FieldDecl 0x563ee307c030 <line:323:5, col:18> col:18 referenced _hook 'TaskCallback':'bool (*)(Task *, void *)'
|-FieldDecl 0x563ee307c098 <line:324:5, col:11> col:11 referenced _thunk 'void *'
|-FieldDecl 0x563ee307c0f8 <line:335:5, col:19> col:19 referenced _thread 'RouterThread *'
|-FieldDecl 0x563ee307c158 <line:337:5, col:14> col:14 referenced _owner 'Element *'
|-CXXRecordDecl 0x563ee307c1a8 <line:339:5, line:342:5> line:339:11 referenced union Pending definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x563ee307c2c8 <col:5, col:11> col:11 implicit union Pending
| |-FieldDecl 0x563ee307c368 <line:340:9, col:15> col:15 t 'Task *'
| |-FieldDecl 0x563ee307c3c8 <line:341:9, col:19> col:19 referenced x 'uintptr_t':'unsigned long'
| |-CXXConstructorDecl 0x563ee31dc048 <line:339:11> col:11 implicit constexpr Pending 'void (const Task::Pending &)' inline default trivial noexcept-unevaluated 0x563ee31dc048
| | `-ParmVarDecl 0x563ee31dc158 <col:11> col:11 'const Task::Pending &'
| |-CXXConstructorDecl 0x563ee31dc1f8 <col:11> col:11 implicit constexpr Pending 'void (Task::Pending &&)' inline default trivial noexcept-unevaluated 0x563ee31dc1f8
| | `-ParmVarDecl 0x563ee31dc308 <col:11> col:11 'Task::Pending &&'
| |-CXXDestructorDecl 0x563ee31dc378 <col:11> col:11 implicit ~Pending 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x563ee31dcbf8 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(const Task::Pending &)' inline default trivial noexcept-unevaluated 0x563ee31dcbf8
| | `-ParmVarDecl 0x563ee31dcd08 <col:11> col:11 'const Task::Pending &'
| |-CXXMethodDecl 0x563ee31dcd78 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(Task::Pending &&)' inline default trivial noexcept-unevaluated 0x563ee31dcd78
| | `-ParmVarDecl 0x563ee31dce88 <col:11> col:11 'Task::Pending &&'
| `-CXXConstructorDecl 0x563ee31e3518 <col:11> col:11 implicit used Pending 'void () noexcept' inline default trivial
|   `-CompoundStmt 0x563ee31e35f0 <col:11>
|-FieldDecl 0x563ee307c440 <line:343:5, col:13> col:13 referenced _pending_nextptr 'Task::Pending'
|-CXXConstructorDecl 0x563ee307c588 <line:345:5, col:23> col:5 Task 'void (const Task &)'
| `-ParmVarDecl 0x563ee307c4c8 <col:10, col:22> col:22 x 'const Task &'
|-CXXMethodDecl 0x563ee307c738 <line:346:5, col:34> col:11 operator= 'Task &(const Task &)'
| `-ParmVarDecl 0x563ee307c648 <col:21, col:33> col:33 x 'const Task &'
|-CXXMethodDecl 0x563ee307c800 <line:347:5, col:18> col:10 cleanup 'void ()'
|-CXXMethodDecl 0x563ee307c8c0 <line:352:5, col:37> col:17 used on_scheduled_list 'bool () const' inline
|-CXXMethodDecl 0x563ee307c980 <line:353:5, line:355:5> line:353:17 on_pending_list 'bool () const' inline
| `-CompoundStmt 0x563ee315fd90 <col:41, line:355:5>
|   `-ReturnStmt 0x563ee315fd80 <line:354:9, col:38>
|     `-BinaryOperator 0x563ee315fd60 <col:16, col:38> 'bool' '!='
|       |-ImplicitCastExpr 0x563ee315fd30 <col:16, col:33> 'uintptr_t':'unsigned long' <LValueToRValue>
|       | `-MemberExpr 0x563ee307df88 <col:16, col:33> 'const uintptr_t':'const unsigned long' lvalue .x 0x563ee307c3c8
|       |   `-MemberExpr 0x563ee307df58 <col:16> 'const Task::Pending' lvalue ->_pending_nextptr 0x563ee307c440
|       |     `-CXXThisExpr 0x563ee307df48 <col:16> 'const Task *' implicit this
|       `-ImplicitCastExpr 0x563ee315fd48 <col:38> 'unsigned long' <IntegralCast>
|         `-IntegerLiteral 0x563ee315fd10 <col:38> 'int' 0
|-CXXMethodDecl 0x563ee307ca40 <line:356:5, col:33> col:17 needs_cleanup 'bool () const' inline
|-CXXMethodDecl 0x563ee307cb80 <line:361:5, col:33> col:10 add_pending 'void (bool)'
| `-ParmVarDecl 0x563ee307caf0 <col:22, col:27> col:27 always 'bool'
|-CXXMethodDecl 0x563ee307ccf8 <line:362:5, col:46> col:10 process_pending 'void (RouterThread *)'
| `-ParmVarDecl 0x563ee307cc38 <col:26, col:40> col:40 thread 'RouterThread *'
|-CXXMethodDecl 0x563ee307ce40 <line:364:5, col:64> col:10 used complete_schedule 'void (RouterThread *)'
| `-ParmVarDecl 0x563ee307cdb0 <col:28, col:42> col:42 process_pending_thread 'RouterThread *'
|-CXXMethodDecl 0x563ee307cf08 <line:365:5, col:44> col:17 remove_from_scheduled_list 'void ()' inline
|-CXXMethodDecl 0x563ee307d0d0 <line:367:5, col:55> col:17 error_hook 'bool (Task *, void *)' static
| |-ParmVarDecl 0x563ee307cfb8 <col:28, col:34> col:34 task 'Task *'
| `-ParmVarDecl 0x563ee307d038 <col:40, col:46> col:46 user_data 'void *'
|-FriendDecl 0x563ee307d1d0 <line:369:5, col:18> col:12 'class RouterThread':'RouterThread'
`-FriendDecl 0x563ee307d260 <line:370:5, col:18> col:12 'class Master':'Master'

Layout: <CGRecordLayout
  LLVMType:%class.Task = type { %struct.TaskLink.base, i32, i32, %"union.Task::Status", i1 (%class.Task*, i8*)*, i8*, %class.RouterThread*, %class.Element*, %"union.Task::Pending" }
  NonVirtualBaseLLVMType:%class.Task = type { %struct.TaskLink.base, i32, i32, %"union.Task::Status", i1 (%class.Task*, i8*)*, i8*, %class.RouterThread*, %class.Element*, %"union.Task::Pending" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563ee3163888 <../dummy_inc/click/timer.hh:343:5, line:345:5> line:343:5 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x563ee31639b8 <line:344:2, col:16> col:16 referenced callback 'TimerCallback':'void (*)(Timer *, void *)'
`-CXXDestructorDecl 0x563ee31644a8 <line:343:5> col:5 implicit ~ 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%union.anon.19 = type { void (%class.Timer*, i8*)* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563ee3160188 prev 0x563ee30f6a30 <../dummy_inc/click/timer.hh:14:1, line:358:1> line:14:7 class Timer definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x563ee3160280 <col:1, col:7> col:7 implicit referenced class Timer
|-AccessSpecDecl 0x563ee3160310 <col:15, col:21> col:15 public
|-CXXConstructorDecl 0x563ee3160370 <line:22:5, col:11> col:5 Timer 'void ()'
|-CXXRecordDecl 0x563ee3160418 <line:24:5, line:25:5> line:24:12 referenced struct do_nothing_t definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x563ee3160538 <col:5, col:12> col:12 implicit struct do_nothing_t
| |-CXXConstructorDecl 0x563ee330ffa8 <col:12> col:12 implicit constexpr do_nothing_t 'void ()' inline default trivial noexcept-unevaluated 0x563ee330ffa8
| |-CXXConstructorDecl 0x563ee3310080 <col:12> col:12 implicit constexpr do_nothing_t 'void (const Timer::do_nothing_t &)' inline default trivial noexcept-unevaluated 0x563ee3310080
| | `-ParmVarDecl 0x563ee3310168 <col:12> col:12 'const Timer::do_nothing_t &'
| `-CXXConstructorDecl 0x563ee3310208 <col:12> col:12 implicit constexpr do_nothing_t 'void (Timer::do_nothing_t &&)' inline default trivial noexcept-unevaluated 0x563ee3310208
|   `-ParmVarDecl 0x563ee3310318 <col:12> col:12 'Timer::do_nothing_t &&'
|-CXXConstructorDecl 0x563ee31606d8 <line:32:5, col:37> col:5 Timer 'void (const Timer::do_nothing_t &)'
| `-ParmVarDecl 0x563ee3160618 <col:11, col:31> col:31 unused 'const Timer::do_nothing_t &'
|-CXXConstructorDecl 0x563ee3160928 <line:38:5, col:43> col:5 Timer 'void (TimerCallback, void *)'
| |-ParmVarDecl 0x563ee3160798 <col:11, col:25> col:25 f 'TimerCallback':'void (*)(Timer *, void *)'
| `-ParmVarDecl 0x563ee3160818 <col:28, col:34> col:34 user_data 'void *'
|-CXXConstructorDecl 0x563ee3160a80 <line:43:5, col:27> col:5 Timer 'void (Element *)'
| `-ParmVarDecl 0x563ee31609f0 <col:11, col:20> col:20 element 'Element *'
|-CXXConstructorDecl 0x563ee3160c08 <line:47:5, col:21> col:5 used Timer 'void (Task *)'
| `-ParmVarDecl 0x563ee3160b40 <col:11, col:17> col:17 task 'Task *'
|-CXXConstructorDecl 0x563ee3160db8 <line:52:5, col:25> col:5 Timer 'void (const Timer &)'
| `-ParmVarDecl 0x563ee3160cf8 <col:11, col:24> col:24 x 'const Timer &'
|-CXXDestructorDecl 0x563ee3160eb0 <line:55:5, line:58:5> line:55:12 used ~Timer 'void () noexcept' inline
| `-CompoundStmt 0x563ee3164680 <col:21, line:58:5>
|   `-IfStmt 0x563ee3164668 <line:56:2, line:57:17>
|     |-CXXMemberCallExpr 0x563ee31645d0 <line:56:6, col:16> 'bool'
|     | `-MemberExpr 0x563ee31645a0 <col:6> '<bound member function type>' ->scheduled 0x563ee3161708
|     |   `-ImplicitCastExpr 0x563ee31645f0 <col:6> 'const Timer *' <NoOp>
|     |     `-CXXThisExpr 0x563ee3164590 <col:6> 'Timer *' implicit this
|     `-CXXMemberCallExpr 0x563ee3164648 <line:57:6, col:17> 'void'
|       `-MemberExpr 0x563ee3164618 <col:6> '<bound member function type>' ->unschedule 0x563ee3162d30
|         `-CXXThisExpr 0x563ee3164608 <col:6> 'Timer *' implicit this
|-CXXMethodDecl 0x563ee3160fb0 <line:62:5, line:65:5> line:62:17 used assign 'void ()' inline
| `-CompoundStmt 0x563ee3164820 <col:26, line:65:5>
|   |-BinaryOperator 0x563ee3164740 <line:63:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x563ee31646d8 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x563ee31639b8
|   | | `-MemberExpr 0x563ee31646a8 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x563ee3163a78
|   | |   `-CXXThisExpr 0x563ee3164698 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x563ee3164728 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563ee3164708 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x563ee3163ed8 'do_nothing_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x563ee3164800 <line:64:2, col:20> 'void *' lvalue '='
|     |-MemberExpr 0x563ee3164770 <col:2> 'void *' lvalue ->_thunk 0x563ee3163af8
|     | `-CXXThisExpr 0x563ee3164760 <col:2> 'Timer *' implicit this
|     `-CStyleCastExpr 0x563ee31647d8 <col:11, col:20> 'void *' <IntegralToPointer>
|       `-IntegerLiteral 0x563ee31647a0 <col:20> 'int' 1
|-CXXMethodDecl 0x563ee31610f0 <line:68:5, line:71:5> line:68:17 assign 'void (const Timer::do_nothing_t &)' inline
| |-ParmVarDecl 0x563ee3161060 <col:24, col:44> col:44 used unused 'const Timer::do_nothing_t &'
| `-CompoundStmt 0x563ee3164980 <col:52, line:71:5>
|   |-CStyleCastExpr 0x563ee3164870 <line:69:2, col:9> 'void' <ToVoid>
|   | `-DeclRefExpr 0x563ee3164840 <col:9> 'const Timer::do_nothing_t' lvalue ParmVar 0x563ee3161060 'unused' 'const Timer::do_nothing_t &'
|   `-CXXMemberCallExpr 0x563ee3164960 <line:70:2, col:9> 'void'
|     `-MemberExpr 0x563ee3164930 <col:2> '<bound member function type>' ->assign 0x563ee3160fb0
|       `-CXXThisExpr 0x563ee3164920 <col:2> 'Timer *' implicit this
|-CXXMethodDecl 0x563ee31612c0 <line:76:5, line:79:5> line:76:17 assign 'void (TimerCallback, void *)' inline
| |-ParmVarDecl 0x563ee31611a8 <col:24, col:38> col:38 used f 'TimerCallback':'void (*)(Timer *, void *)'
| |-ParmVarDecl 0x563ee3161228 <col:41, col:47> col:47 used user_data 'void *'
| `-CompoundStmt 0x563ee3164b00 <col:58, line:79:5>
|   |-BinaryOperator 0x563ee3164a48 <line:77:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x563ee31649e0 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x563ee31639b8
|   | | `-MemberExpr 0x563ee31649b0 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x563ee3163a78
|   | |   `-CXXThisExpr 0x563ee31649a0 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x563ee3164a30 <col:19> 'TimerCallback':'void (*)(Timer *, void *)' <LValueToRValue>
|   |   `-DeclRefExpr 0x563ee3164a10 <col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue ParmVar 0x563ee31611a8 'f' 'TimerCallback':'void (*)(Timer *, void *)'
|   `-BinaryOperator 0x563ee3164ae0 <line:78:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x563ee3164a78 <col:2> 'void *' lvalue ->_thunk 0x563ee3163af8
|     | `-CXXThisExpr 0x563ee3164a68 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x563ee3164ac8 <col:11> 'void *' <LValueToRValue>
|       `-DeclRefExpr 0x563ee3164aa8 <col:11> 'void *' lvalue ParmVar 0x563ee3161228 'user_data' 'void *'
|-CXXMethodDecl 0x563ee3161410 <line:84:5, line:87:5> line:84:10 assign 'void (Element *)'
| |-ParmVarDecl 0x563ee3161380 <col:17, col:26> col:26 used element 'Element *'
| `-CompoundStmt 0x563ee3164c98 <col:35, line:87:5>
|   |-BinaryOperator 0x563ee3164bc8 <line:85:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x563ee3164b60 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x563ee31639b8
|   | | `-MemberExpr 0x563ee3164b30 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x563ee3163a78
|   | |   `-CXXThisExpr 0x563ee3164b20 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x563ee3164bb0 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563ee3164b90 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x563ee31640b0 'element_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x563ee3164c78 <line:86:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x563ee3164bf8 <col:2> 'void *' lvalue ->_thunk 0x563ee3163af8
|     | `-CXXThisExpr 0x563ee3164be8 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x563ee3164c60 <col:11> 'void *' <BitCast>
|       `-ImplicitCastExpr 0x563ee3164c48 <col:11> 'Element *' <LValueToRValue>
|         `-DeclRefExpr 0x563ee3164c28 <col:11> 'Element *' lvalue ParmVar 0x563ee3161380 'element' 'Element *'
|-CXXMethodDecl 0x563ee3161558 <line:91:5, line:94:5> line:91:10 assign 'void (Task *)'
| |-ParmVarDecl 0x563ee31614c8 <col:17, col:23> col:23 used task 'Task *'
| `-CompoundStmt 0x563ee3164e30 <col:29, line:94:5>
|   |-BinaryOperator 0x563ee3164d60 <line:92:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x563ee3164cf8 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x563ee31639b8
|   | | `-MemberExpr 0x563ee3164cc8 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x563ee3163a78
|   | |   `-CXXThisExpr 0x563ee3164cb8 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x563ee3164d48 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563ee3164d28 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x563ee3164288 'task_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x563ee3164e10 <line:93:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x563ee3164d90 <col:2> 'void *' lvalue ->_thunk 0x563ee3163af8
|     | `-CXXThisExpr 0x563ee3164d80 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x563ee3164df8 <col:11> 'void *' <BitCast>
|       `-ImplicitCastExpr 0x563ee3164de0 <col:11> 'Task *' <LValueToRValue>
|         `-DeclRefExpr 0x563ee3164dc0 <col:11> 'Task *' lvalue ParmVar 0x563ee31614c8 'task' 'Task *'
|-CXXMethodDecl 0x563ee3161648 <line:98:5, line:100:5> line:98:17 initialized 'bool () const' inline
| `-CompoundStmt 0x563ee3164f10 <col:37, line:100:5>
|   `-ReturnStmt 0x563ee3164f00 <line:99:2, col:19>
|     `-BinaryOperator 0x563ee3164ee0 <col:9, col:19> 'bool' '!='
|       |-ImplicitCastExpr 0x563ee3164eb0 <col:9> 'Element *' <LValueToRValue>
|       | `-MemberExpr 0x563ee3164e60 <col:9> 'Element *const' lvalue ->_owner 0x563ee3163b58
|       |   `-CXXThisExpr 0x563ee3164e50 <col:9> 'const Timer *' implicit this
|       `-ImplicitCastExpr 0x563ee3164ec8 <col:19> 'Element *' <NullToPointer>
|         `-IntegerLiteral 0x563ee3164e90 <col:19> 'int' 0
|-CXXMethodDecl 0x563ee3161708 <line:103:5, line:105:5> line:103:17 used scheduled 'bool () const' inline
| `-CompoundStmt 0x563ee3164fd0 <col:35, line:105:5>
|   `-ReturnStmt 0x563ee3164fc0 <line:104:2, col:23>
|     `-BinaryOperator 0x563ee3164fa0 <col:9, col:23> 'bool' '!='
|       |-ImplicitCastExpr 0x563ee3164f88 <col:9> 'int' <LValueToRValue>
|       | `-MemberExpr 0x563ee3164f38 <col:9> 'const int' lvalue ->_schedpos1 0x563ee31637d8
|       |   `-CXXThisExpr 0x563ee3164f28 <col:9> 'const Timer *' implicit this
|       `-IntegerLiteral 0x563ee3164f68 <col:23> 'int' 0
|-CXXMethodDecl 0x563ee31617c8 <line:116:5, line:118:5> line:116:29 used expiry_steady 'const Timestamp &() const' inline
| `-CompoundStmt 0x563ee3165038 <col:51, line:118:5>
|   `-ReturnStmt 0x563ee3165028 <line:117:2, col:9>
|     `-MemberExpr 0x563ee3164ff8 <col:9> 'const Timestamp' lvalue ->_expiry_s 0x563ee3163838
|       `-CXXThisExpr 0x563ee3164fe8 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x563ee3161888 <line:131:5, line:136:5> line:131:22 expiry 'Timestamp () const' inline
| `-CompoundStmt 0x563ee3165590 <col:37, line:136:5>
|   `-IfStmt 0x563ee3165568 <line:132:2, line:135:13> has_else
|     |-ImplicitCastExpr 0x563ee31650f8 <line:132:6> 'bool' <MemberPointerToBoolean>
|     | `-ImplicitCastExpr 0x563ee31650e0 <col:6> 'Timestamp::unspecified_bool_type':'Timestamp::seconds_type (Timestamp::*)() const' <UserDefinedConversion>
|     |   `-CXXMemberCallExpr 0x563ee31650c0 <col:6> 'Timestamp::unspecified_bool_type':'Timestamp::seconds_type (Timestamp::*)() const'
|     |     `-MemberExpr 0x563ee3165090 <col:6> '<bound member function type>' .operator int (Timestamp::*)() const 0x563ee3088b08
|     |       `-MemberExpr 0x563ee3165060 <col:6> 'const Timestamp' lvalue ->_expiry_s 0x563ee3163838
|     |         `-CXXThisExpr 0x563ee3165050 <col:6> 'const Timer *' implicit this
|     |-ReturnStmt 0x563ee31654d8 <line:133:6, col:72>
|     | `-ExprWithCleanups 0x563ee31654c0 <col:13, col:72> 'Timestamp'
|     |   `-CXXConstructExpr 0x563ee3165490 <col:13, col:72> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|     |     `-MaterializeTemporaryExpr 0x563ee3165478 <col:13, col:72> 'Timestamp' xvalue
|     |       `-CXXOperatorCallExpr 0x563ee3165440 <col:13, col:72> 'Timestamp'
|     |         |-ImplicitCastExpr 0x563ee3165428 <col:45> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|     |         | `-DeclRefExpr 0x563ee3165408 <col:45> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x563ee30b72e0 'operator-' 'Timestamp (Timestamp, const Timestamp &)'
|     |         |-CXXConstructExpr 0x563ee31653a8 <col:13, col:43> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|     |         | `-MaterializeTemporaryExpr 0x563ee3165390 <col:13, col:43> 'Timestamp' xvalue
|     |         |   `-CXXOperatorCallExpr 0x563ee31652b8 <col:13, col:43> 'Timestamp'
|     |         |     |-ImplicitCastExpr 0x563ee31652a0 <col:23> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|     |         |     | `-DeclRefExpr 0x563ee3165280 <col:23> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x563ee30b6fa0 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|     |         |     |-CXXConstructExpr 0x563ee3165220 <col:13> 'Timestamp' 'void (const Timestamp &) noexcept'
|     |         |     | `-MemberExpr 0x563ee3165120 <col:13> 'const Timestamp' lvalue ->_expiry_s 0x563ee3163838
|     |         |     |   `-CXXThisExpr 0x563ee3165110 <col:13> 'const Timer *' implicit this
|     |         |     `-MaterializeTemporaryExpr 0x563ee3165268 <col:25, col:43> 'const Timestamp' lvalue
|     |         |       `-ImplicitCastExpr 0x563ee3165250 <col:25, col:43> 'const Timestamp' <NoOp>
|     |         |         `-CallExpr 0x563ee3165200 <col:25, col:43> 'Timestamp'
|     |         |           `-ImplicitCastExpr 0x563ee31651e8 <col:25, col:36> 'Timestamp (*)()' <FunctionToPointerDecay>
|     |         |             `-DeclRefExpr 0x563ee3165188 <col:25, col:36> 'Timestamp ()' lvalue CXXMethod 0x563ee30aa600 'recent' 'Timestamp ()'
|     |         `-MaterializeTemporaryExpr 0x563ee31653f0 <col:47, col:72> 'const Timestamp' lvalue
|     |           `-ImplicitCastExpr 0x563ee31653d8 <col:47, col:72> 'const Timestamp' <NoOp>
|     |             `-CallExpr 0x563ee3165370 <col:47, col:72> 'Timestamp'
|     |               `-ImplicitCastExpr 0x563ee3165358 <col:47, col:58> 'Timestamp (*)()' <FunctionToPointerDecay>
|     |                 `-DeclRefExpr 0x563ee3165328 <col:47, col:58> 'Timestamp ()' lvalue CXXMethod 0x563ee2f05b50 'recent_steady' 'Timestamp ()'
|     `-ReturnStmt 0x563ee3165558 <line:135:6, col:13>
|       `-CXXConstructExpr 0x563ee3165528 <col:13> 'Timestamp' 'void (const Timestamp &) noexcept'
|         `-MemberExpr 0x563ee31654f8 <col:13> 'const Timestamp' lvalue ->_expiry_s 0x563ee3163838
|           `-CXXThisExpr 0x563ee31654e8 <col:13> 'const Timer *' implicit this
|-CXXMethodDecl 0x563ee3161948 <line:139:5, line:141:5> line:139:20 router 'Router *() const' inline
| `-CompoundStmt 0x563ee3165678 <col:35, line:141:5>
|   `-ReturnStmt 0x563ee3165668 <line:140:2, col:24>
|     `-CXXMemberCallExpr 0x563ee3165630 <col:9, col:24> 'Router *'
|       `-MemberExpr 0x563ee3165600 <col:9, col:17> '<bound member function type>' ->router 0x563ee3109190
|         `-ImplicitCastExpr 0x563ee3165650 <col:9> 'const Element *' <NoOp>
|           `-ImplicitCastExpr 0x563ee31655e8 <col:9> 'Element *' <LValueToRValue>
|             `-MemberExpr 0x563ee31655b8 <col:9> 'Element *const' lvalue ->_owner 0x563ee3163b58
|               `-CXXThisExpr 0x563ee31655a8 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x563ee3161a08 <line:144:5, line:146:5> line:144:21 element 'Element *() const' inline
| `-CompoundStmt 0x563ee31656f8 <col:37, line:146:5>
|   `-ReturnStmt 0x563ee31656e8 <line:145:2, col:9>
|     `-ImplicitCastExpr 0x563ee31656d0 <col:9> 'Element *' <LValueToRValue>
|       `-MemberExpr 0x563ee31656a0 <col:9> 'Element *const' lvalue ->_owner 0x563ee3163b58
|         `-CXXThisExpr 0x563ee3165690 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x563ee3161ac8 <line:149:5, line:151:5> line:149:26 thread 'RouterThread *() const' inline
| `-CompoundStmt 0x563ee3165778 <col:41, line:151:5>
|   `-ReturnStmt 0x563ee3165768 <line:150:2, col:9>
|     `-ImplicitCastExpr 0x563ee3165750 <col:9> 'RouterThread *' <LValueToRValue>
|       `-MemberExpr 0x563ee3165720 <col:9> 'RouterThread *const' lvalue ->_thread 0x563ee3163bb8
|         `-CXXThisExpr 0x563ee3165710 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x563ee3161b90 <line:154:5, col:26> col:9 home_thread_id 'int () const'
|-CXXMethodDecl 0x563ee3161d50 <line:171:5, col:55> col:10 initialize 'void (Element *, bool)'
| |-ParmVarDecl 0x563ee3161c40 <col:21, col:30> col:30 owner 'Element *'
| `-ParmVarDecl 0x563ee3161cb8 <col:37, col:50> col:42 quiet 'bool' cinit
|   `-CXXBoolLiteralExpr 0x563ee3164498 <col:50> 'bool' false
|-CXXMethodDecl 0x563ee3161ed8 <line:181:5, col:35> col:10 initialize 'void (Router *)'
| `-ParmVarDecl 0x563ee3161e10 <col:21, col:29> col:29 router 'Router *'
|-CXXMethodDecl 0x563ee3162020 <line:191:5, col:57> col:10 used schedule_at_steady 'void (const Timestamp &)'
| `-ParmVarDecl 0x563ee3161f90 <col:29, col:46> col:46 when_steady 'const Timestamp &'
|-CXXMethodDecl 0x563ee3162168 <line:197:5, col:59> col:10 reschedule_at_steady 'void (const Timestamp &)'
| `-ParmVarDecl 0x563ee31620d8 <col:31, col:48> col:48 when_steady 'const Timestamp &'
|-CXXMethodDecl 0x563ee31622b0 <line:210:5, col:50> col:17 used schedule_at 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x563ee3162220 <col:29, col:46> col:46 when 'const Timestamp &'
|-CXXMethodDecl 0x563ee31623f8 <line:216:5, col:52> col:17 reschedule_at 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x563ee3162368 <col:31, col:48> col:48 when 'const Timestamp &'
|-CXXMethodDecl 0x563ee31624c0 <line:221:5, line:223:5> line:221:17 schedule_now 'void ()' inline
| `-CompoundStmt 0x563ee31658e0 <col:32, line:223:5>
|   `-ExprWithCleanups 0x563ee31658c8 <line:222:2, col:47> 'void'
|     `-CXXMemberCallExpr 0x563ee3165870 <col:2, col:47> 'void'
|       |-MemberExpr 0x563ee31657a0 <col:2> '<bound member function type>' ->schedule_at_steady 0x563ee3162020
|       | `-CXXThisExpr 0x563ee3165790 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x563ee31658b0 <col:21, col:46> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x563ee3165898 <col:21, col:46> 'const Timestamp' <NoOp>
|           `-CallExpr 0x563ee3165850 <col:21, col:46> 'Timestamp'
|             `-ImplicitCastExpr 0x563ee3165838 <col:21, col:32> 'Timestamp (*)()' <FunctionToPointerDecay>
|               `-DeclRefExpr 0x563ee3165808 <col:21, col:32> 'Timestamp ()' lvalue CXXMethod 0x563ee2f05b50 'recent_steady' 'Timestamp ()'
|-CXXMethodDecl 0x563ee3162600 <line:233:5, col:47> col:10 used schedule_after 'void (const Timestamp &)'
| `-ParmVarDecl 0x563ee3162570 <col:25, col:42> col:42 delta 'const Timestamp &'
|-CXXMethodDecl 0x563ee3162748 <line:239:5, line:241:5> line:239:17 used schedule_after_sec 'void (uint32_t)' inline
| |-ParmVarDecl 0x563ee31626b8 <col:36, col:45> col:45 used delta_sec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x563ee3165a68 <col:56, line:241:5>
|   `-ExprWithCleanups 0x563ee3165a50 <line:240:2, col:40> 'void'
|     `-CXXMemberCallExpr 0x563ee31659f8 <col:2, col:40> 'void'
|       |-MemberExpr 0x563ee3165908 <col:2> '<bound member function type>' ->schedule_after 0x563ee3162600
|       | `-CXXThisExpr 0x563ee31658f8 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x563ee3165a38 <col:17, col:39> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x563ee3165a20 <col:17, col:39> 'const Timestamp' <NoOp>
|           `-CXXTemporaryObjectExpr 0x563ee31659b8 <col:17, col:39> 'Timestamp' 'void (unsigned int, uint32_t)'
|             |-ImplicitCastExpr 0x563ee3165988 <col:27> 'uint32_t':'unsigned int' <LValueToRValue>
|             | `-DeclRefExpr 0x563ee3165948 <col:27> 'uint32_t':'unsigned int' lvalue ParmVar 0x563ee31626b8 'delta_sec' 'uint32_t':'unsigned int'
|             `-ImplicitCastExpr 0x563ee31659a0 <col:38> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x563ee3165968 <col:38> 'int' 0
|-CXXMethodDecl 0x563ee3162890 <line:247:5, line:249:5> line:247:17 used schedule_after_msec 'void (uint32_t)' inline
| |-ParmVarDecl 0x563ee3162800 <col:37, col:46> col:46 used delta_msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x563ee3165cd8 <col:58, line:249:5>
|   `-ExprWithCleanups 0x563ee3165cc0 <line:248:2, col:49> 'void'
|     `-CXXMemberCallExpr 0x563ee3165c68 <col:2, col:49> 'void'
|       |-MemberExpr 0x563ee3165a90 <col:2> '<bound member function type>' ->schedule_after 0x563ee3162600
|       | `-CXXThisExpr 0x563ee3165a80 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x563ee3165ca8 <col:17, col:48> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x563ee3165c90 <col:17, col:48> 'const Timestamp' <NoOp>
|           `-CallExpr 0x563ee3165c10 <col:17, col:48> 'Timestamp'
|             |-ImplicitCastExpr 0x563ee3165bf8 <col:17, col:28> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x563ee3165b68 <col:17, col:28> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x563ee308a8f8 'make_msec' 'Timestamp (Timestamp::value_type)'
|             `-ImplicitCastExpr 0x563ee3165c50 <col:38> 'Timestamp::value_type':'long' <IntegralCast>
|               `-ImplicitCastExpr 0x563ee3165c38 <col:38> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x563ee3165b48 <col:38> 'uint32_t':'unsigned int' lvalue ParmVar 0x563ee3162800 'delta_msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x563ee31629d8 <line:259:5, line:261:5> line:259:17 reschedule_after 'void (const Timestamp &)' inline
| |-ParmVarDecl 0x563ee3162948 <col:34, col:51> col:51 used delta 'const Timestamp &'
| `-CompoundStmt 0x563ee3165eb8 <col:58, line:261:5>
|   `-ExprWithCleanups 0x563ee3165ea0 <line:260:2, col:38> 'void'
|     `-CXXMemberCallExpr 0x563ee3165e48 <col:2, col:38> 'void'
|       |-MemberExpr 0x563ee3165d00 <col:2> '<bound member function type>' ->schedule_at_steady 0x563ee3162020
|       | `-CXXThisExpr 0x563ee3165cf0 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x563ee3165e88 <col:21, col:33> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x563ee3165e70 <col:21, col:33> 'const Timestamp' <NoOp>
|           `-CXXOperatorCallExpr 0x563ee3165e10 <col:21, col:33> 'Timestamp'
|             |-ImplicitCastExpr 0x563ee3165df8 <col:31> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x563ee3165dd8 <col:31> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x563ee30b6fa0 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|             |-CXXConstructExpr 0x563ee3165da8 <col:21> 'Timestamp' 'void (const Timestamp &) noexcept'
|             | `-ImplicitCastExpr 0x563ee3165d90 <col:21> 'const Timestamp' lvalue <NoOp>
|             |   `-MemberExpr 0x563ee3165d40 <col:21> 'Timestamp' lvalue ->_expiry_s 0x563ee3163838
|             |     `-CXXThisExpr 0x563ee3165d30 <col:21> 'Timer *' implicit this
|             `-DeclRefExpr 0x563ee3165d70 <col:33> 'const Timestamp' lvalue ParmVar 0x563ee3162948 'delta' 'const Timestamp &'
|-CXXMethodDecl 0x563ee3162b20 <line:268:5, line:270:5> line:268:17 used reschedule_after_sec 'void (uint32_t)' inline
| |-ParmVarDecl 0x563ee3162a90 <col:38, col:47> col:47 used delta_sec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x563ee3166190 <col:58, line:270:5>
|   `-ExprWithCleanups 0x563ee3166178 <line:269:2, col:79> 'void'
|     `-CXXMemberCallExpr 0x563ee3166120 <col:2, col:79> 'void'
|       |-MemberExpr 0x563ee3165ee0 <col:2> '<bound member function type>' ->schedule_at_steady 0x563ee3162020
|       | `-CXXThisExpr 0x563ee3165ed0 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x563ee3166160 <col:21, col:78> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x563ee3166148 <col:21, col:78> 'const Timestamp' <NoOp>
|           `-CXXTemporaryObjectExpr 0x563ee31660e0 <col:21, col:78> 'Timestamp' 'void (unsigned int, uint32_t)'
|             |-BinaryOperator 0x563ee3166018 <col:31, col:49> 'unsigned int' '+'
|             | |-ImplicitCastExpr 0x563ee3166000 <col:31, col:45> 'unsigned int' <IntegralCast>
|             | | `-CXXMemberCallExpr 0x563ee3165f90 <col:31, col:45> 'Timestamp::seconds_type':'int'
|             | |   `-MemberExpr 0x563ee3165f60 <col:31, col:41> '<bound member function type>' .sec 0x563ee2f07648
|             | |     `-ImplicitCastExpr 0x563ee3165fb0 <col:31> 'const Timestamp' lvalue <NoOp>
|             | |       `-MemberExpr 0x563ee3165f30 <col:31> 'Timestamp' lvalue ->_expiry_s 0x563ee3163838
|             | |         `-CXXThisExpr 0x563ee3165f20 <col:31> 'Timer *' implicit this
|             | `-ImplicitCastExpr 0x563ee3165fe8 <col:49> 'uint32_t':'unsigned int' <LValueToRValue>
|             |   `-DeclRefExpr 0x563ee3165fc8 <col:49> 'uint32_t':'unsigned int' lvalue ParmVar 0x563ee3162a90 'delta_sec' 'uint32_t':'unsigned int'
|             `-CXXMemberCallExpr 0x563ee31660a8 <col:60, col:77> 'uint32_t':'unsigned int'
|               `-MemberExpr 0x563ee3166078 <col:60, col:70> '<bound member function type>' .subsec 0x563ee2f07d40
|                 `-ImplicitCastExpr 0x563ee31660c8 <col:60> 'const Timestamp' lvalue <NoOp>
|                   `-MemberExpr 0x563ee3166048 <col:60> 'Timestamp' lvalue ->_expiry_s 0x563ee3163838
|                     `-CXXThisExpr 0x563ee3166038 <col:60> 'Timer *' implicit this
|-CXXMethodDecl 0x563ee3162c68 <line:277:5, line:279:5> line:277:17 used reschedule_after_msec 'void (uint32_t)' inline
| |-ParmVarDecl 0x563ee3162bd8 <col:39, col:48> col:48 used delta_msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x563ee31664c8 <col:60, line:279:5>
|   `-ExprWithCleanups 0x563ee31664b0 <line:278:2, col:65> 'void'
|     `-CXXMemberCallExpr 0x563ee3166458 <col:2, col:65> 'void'
|       |-MemberExpr 0x563ee31661b8 <col:2> '<bound member function type>' ->schedule_at_steady 0x563ee3162020
|       | `-CXXThisExpr 0x563ee31661a8 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x563ee3166498 <col:21, col:64> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x563ee3166480 <col:21, col:64> 'const Timestamp' <NoOp>
|           `-CXXOperatorCallExpr 0x563ee3166420 <col:21, col:64> 'Timestamp'
|             |-ImplicitCastExpr 0x563ee3166408 <col:31> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x563ee31663e8 <col:31> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x563ee30b6fa0 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|             |-CXXConstructExpr 0x563ee3166388 <col:21> 'Timestamp' 'void (const Timestamp &) noexcept'
|             | `-ImplicitCastExpr 0x563ee3166370 <col:21> 'const Timestamp' lvalue <NoOp>
|             |   `-MemberExpr 0x563ee31661f8 <col:21> 'Timestamp' lvalue ->_expiry_s 0x563ee3163838
|             |     `-CXXThisExpr 0x563ee31661e8 <col:21> 'Timer *' implicit this
|             `-MaterializeTemporaryExpr 0x563ee31663d0 <col:33, col:64> 'const Timestamp' lvalue
|               `-ImplicitCastExpr 0x563ee31663b8 <col:33, col:64> 'const Timestamp' <NoOp>
|                 `-CallExpr 0x563ee3166318 <col:33, col:64> 'Timestamp'
|                   |-ImplicitCastExpr 0x563ee3166300 <col:33, col:44> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|                   | `-DeclRefExpr 0x563ee31662d0 <col:33, col:44> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x563ee308a8f8 'make_msec' 'Timestamp (Timestamp::value_type)'
|                   `-ImplicitCastExpr 0x563ee3166358 <col:54> 'Timestamp::value_type':'long' <IntegralCast>
|                     `-ImplicitCastExpr 0x563ee3166340 <col:54> 'uint32_t':'unsigned int' <LValueToRValue>
|                       `-DeclRefExpr 0x563ee31662b0 <col:54> 'uint32_t':'unsigned int' lvalue ParmVar 0x563ee3162bd8 'delta_msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x563ee3162d30 <line:285:5, col:21> col:10 used unschedule 'void ()'
|-CXXMethodDecl 0x563ee3162df0 <line:288:5, line:291:5> line:288:17 clear 'void ()' inline
| `-CompoundStmt 0x563ee3166990 <col:25, line:291:5>
|   |-CXXMemberCallExpr 0x563ee3166520 <line:289:2, col:13> 'void'
|   | `-MemberExpr 0x563ee31664f0 <col:2> '<bound member function type>' ->unschedule 0x563ee3162d30
|   |   `-CXXThisExpr 0x563ee31664e0 <col:2> 'Timer *' implicit this
|   `-ExprWithCleanups 0x563ee3166978 <line:290:2, col:24> 'Timestamp' lvalue
|     `-CXXOperatorCallExpr 0x563ee3166940 <col:2, col:24> 'Timestamp' lvalue
|       |-ImplicitCastExpr 0x563ee3166928 <col:12> 'Timestamp &(*)(Timestamp &&) noexcept' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x563ee31665d8 <col:12> 'Timestamp &(Timestamp &&) noexcept' lvalue CXXMethod 0x563ee2d9ebe8 'operator=' 'Timestamp &(Timestamp &&) noexcept'
|       |-MemberExpr 0x563ee3166550 <col:2> 'Timestamp' lvalue ->_expiry_s 0x563ee3163838
|       | `-CXXThisExpr 0x563ee3166540 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x563ee31665c0 <col:14, col:24> 'Timestamp' xvalue
|         `-CXXTemporaryObjectExpr 0x563ee3166590 <col:14, col:24> 'Timestamp' 'void ()'
|-CXXMethodDecl 0x563ee3162eb0 <line:304:5, line:310:5> line:304:29 used adjustment 'Timestamp ()' static inline
| `-CompoundStmt 0x563ee3166ce8 <col:42, line:310:5>
|   |-IfStmt 0x563ee3166b30 <line:306:2, line:307:23>
|   | |-CallExpr 0x563ee3166a60 <line:306:6, col:30> 'bool'
|   | | `-ImplicitCastExpr 0x563ee3166a48 <col:6, col:17> 'bool (*)()' <FunctionToPointerDecay>
|   | |   `-DeclRefExpr 0x563ee31669e8 <col:6, col:17> 'bool ()' lvalue CXXMethod 0x563ee30a8a70 'warp_jumping' 'bool ()'
|   | `-ReturnStmt 0x563ee3166b20 <line:307:6, col:23>
|   |   `-ExprWithCleanups 0x563ee3166b08 <col:13, col:23> 'Timestamp'
|   |     `-CXXConstructExpr 0x563ee3166ad8 <col:13, col:23> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x563ee3166ac0 <col:13, col:23> 'Timestamp' xvalue
|   |         `-CXXTemporaryObjectExpr 0x563ee3166a90 <col:13, col:23> 'Timestamp' 'void ()'
|   `-ReturnStmt 0x563ee3166cd8 <line:309:2, col:33>
|     `-ExprWithCleanups 0x563ee3166cc0 <col:9, col:33> 'Timestamp'
|       `-CXXConstructExpr 0x563ee3166c90 <col:9, col:33> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x563ee3166c78 <col:9, col:33> 'Timestamp' xvalue
|           `-CallExpr 0x563ee3166c38 <col:9, col:33> 'Timestamp'
|             |-ImplicitCastExpr 0x563ee3166c20 <col:9, col:20> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x563ee3166bf0 <col:9, col:20> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x563ee308ac10 'make_usec' 'Timestamp (Timestamp::value_type)'
|             `-ImplicitCastExpr 0x563ee3166c60 <col:30> 'Timestamp::value_type':'long' <IntegralCast>
|               `-IntegerLiteral 0x563ee3166bd0 <col:30> 'int' 500
|-CXXMethodDecl 0x563ee3162ff0 <line:317:5, col:80> col:17 schedule_after_s 'void (uint32_t)' inline
| |-ParmVarDecl 0x563ee3162f60 <col:34, col:43> col:43 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x563ee3163098 <col:69> "" ""
|-CXXMethodDecl 0x563ee31631a8 <line:323:5, col:81> col:17 schedule_after_ms 'void (uint32_t)' inline
| |-ParmVarDecl 0x563ee3163118 <col:35, col:44> col:44 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x563ee3163250 <col:70> "" ""
|-CXXMethodDecl 0x563ee3163360 <line:329:5, col:82> col:17 reschedule_after_s 'void (uint32_t)' inline
| |-ParmVarDecl 0x563ee31632d0 <col:36, col:45> col:45 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x563ee3163408 <col:71> "" ""
|-CXXMethodDecl 0x563ee3163518 <line:335:5, col:83> col:17 reschedule_after_ms 'void (uint32_t)' inline
| |-ParmVarDecl 0x563ee3163488 <col:37, col:46> col:46 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x563ee31635c0 <col:72> "" ""
|-EnumDecl 0x563ee3163630 <line:337:5, col:27> col:5
| `-EnumConstantDecl 0x563ee3163730 <col:12, col:25> col:12 behind_sec 'Timer::(anonymous enum at ../dummy_inc/click/timer.hh:337:5)'
|   `-ImplicitCastExpr 0x563ee3163780 <col:25> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x563ee3163710 <col:25> 'int' Int: 1
|       `-IntegerLiteral 0x563ee31636f0 <col:25> 'int' 1
|-AccessSpecDecl 0x563ee3163798 <line:339:3, col:10> col:3 private
|-FieldDecl 0x563ee31637d8 <line:341:5, col:9> col:9 referenced _schedpos1 'int'
|-FieldDecl 0x563ee3163838 <line:342:5, col:15> col:15 referenced _expiry_s 'Timestamp'
|-CXXRecordDecl 0x563ee3163888 <line:343:5, line:345:5> line:343:5 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x563ee31639b8 <line:344:2, col:16> col:16 referenced callback 'TimerCallback':'void (*)(Timer *, void *)'
| `-CXXDestructorDecl 0x563ee31644a8 <line:343:5> col:5 implicit ~ 'void () noexcept' inline default trivial
|-FieldDecl 0x563ee3163a78 <col:5, line:345:7> col:7 referenced _hook 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)'
|-FieldDecl 0x563ee3163af8 <line:346:5, col:11> col:11 referenced _thunk 'void *'
|-FieldDecl 0x563ee3163b58 <line:347:5, col:14> col:14 referenced _owner 'Element *'
|-FieldDecl 0x563ee3163bb8 <line:348:5, col:19> col:19 referenced _thread 'RouterThread *'
|-CXXMethodDecl 0x563ee3163d08 <line:350:5, col:36> col:12 operator= 'Timer &(const Timer &)'
| `-ParmVarDecl 0x563ee3163c18 <col:22, col:35> col:35 x 'const Timer &'
|-CXXMethodDecl 0x563ee3163ed8 <line:352:5, col:58> col:17 used do_nothing_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x563ee3163dc0 <col:33, col:40> col:40 t 'Timer *'
| `-ParmVarDecl 0x563ee3163e40 <col:43, col:49> col:49 user_data 'void *'
|-CXXMethodDecl 0x563ee31640b0 <line:353:5, col:55> col:17 used element_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x563ee3163f98 <col:30, col:37> col:37 t 'Timer *'
| `-ParmVarDecl 0x563ee3164018 <col:40, col:46> col:46 user_data 'void *'
|-CXXMethodDecl 0x563ee3164288 <line:354:5, col:52> col:17 used task_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x563ee3164170 <col:27, col:34> col:34 t 'Timer *'
| `-ParmVarDecl 0x563ee31641f0 <col:37, col:43> col:43 user_data 'void *'
`-FriendDecl 0x563ee3164458 <line:356:5, col:18> col:12 'class TimerSet':'TimerSet'

Layout: <CGRecordLayout
  LLVMType:%class.Timer = type { i32, %class.Timestamp, %union.anon.19, i8*, %class.Element*, %class.RouterThread* }
  NonVirtualBaseLLVMType:%class.Timer = type { i32, %class.Timestamp, %union.anon.19, i8*, %class.Element*, %class.RouterThread* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563ee31e7308 <../elements/standard/ratedsource.hh:90:1, line:125:1> line:90:7 class RatedSource definition
|-DefinitionData polymorphic has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-public 'Element'
|-CXXRecordDecl 0x563ee31e7468 <col:1, col:7> col:7 implicit referenced class RatedSource
|-AccessSpecDecl 0x563ee31e74f8 <col:38, col:44> col:38 public
|-CXXConstructorDecl 0x563ee31e7580 <line:92:5, col:17> col:5 RatedSource 'void ()'
|-CXXMethodDecl 0x563ee31e7680 <line:94:5, col:60> col:17 class_name 'const char *() const'
| |-Overrides: [ 0x563ee30f8548 Element::class_name 'const char *() const' ]
| `-CompoundStmt 0x563ee31f3290 <col:36, col:60>
|   `-ReturnStmt 0x563ee31f3280 <col:38, col:45>
|     `-ImplicitCastExpr 0x563ee31f3268 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x563ee31f3240 <col:45> 'const char [12]' lvalue "RatedSource"
|-CXXMethodDecl 0x563ee31e7748 <line:95:5, col:56> col:17 port_count 'const char *() const'
| |-Overrides: [ 0x563ee30f8610 Element::port_count 'const char *() const' ]
| `-CompoundStmt 0x563ee31f32f0 <col:36, col:56>
|   `-ReturnStmt 0x563ee31f32e0 <col:38, col:45>
|     `-ImplicitCastExpr 0x563ee31f32c8 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-DeclRefExpr 0x563ee31f32a8 <col:45> 'const char []' lvalue Var 0x563ee30f87b0 'PORTS_0_1' 'const char []'
|-CXXMethodDecl 0x563ee31e7808 <line:96:5, col:23> col:10 add_handlers 'void ()'
| `-Overrides: [ 0x563ee30f9eb0 Element::add_handlers 'void ()' ]
|-CXXMethodDecl 0x563ee31e7ae0 <line:98:5, col:59> col:9 configure 'int (Vector<String> &, ErrorHandler *)'
| |-Overrides: [ 0x563ee30f9de0 Element::configure 'int (Vector<String> &, ErrorHandler *)' ]
| |-ParmVarDecl 0x563ee31e7990 <col:19, col:35> col:35 conf 'Vector<String> &'
| `-ParmVarDecl 0x563ee31e7a08 <col:41, col:55> col:55 errh 'ErrorHandler *'
|-CXXMethodDecl 0x563ee31e7c38 <line:99:5, col:38> col:9 initialize 'int (ErrorHandler *)'
| |-Overrides: [ 0x563ee30fa030 Element::initialize 'int (ErrorHandler *)' ]
| `-ParmVarDecl 0x563ee31e7ba0 <col:20, col:34> col:34 errh 'ErrorHandler *'
|-CXXMethodDecl 0x563ee31e7d80 <line:100:5, col:30> col:10 cleanup 'void (Element::CleanupStage)'
| |-Overrides: [ 0x563ee30fa848 Element::cleanup 'void (Element::CleanupStage)' ]
| `-ParmVarDecl 0x563ee31e7cf0 <col:18> col:30 'Element::CleanupStage'
|-CXXMethodDecl 0x563ee31e7ec8 <line:102:5, col:29> col:10 run_task 'bool (Task *)'
| |-Overrides: [ 0x563ee30f78c8 Element::run_task 'bool (Task *)' ]
| `-ParmVarDecl 0x563ee31e7e38 <col:19, col:25> col:25 task 'Task *'
|-CXXMethodDecl 0x563ee31e8018 <line:103:5, col:21> col:13 pull 'Packet *(int)'
| |-Overrides: [ 0x563ee30f7548 Element::pull 'Packet *(int)' ]
| `-ParmVarDecl 0x563ee31e7f88 <col:18> col:21 'int'
|-AccessSpecDecl 0x563ee31e80c0 <line:105:3, col:12> col:3 protected
|-VarDecl 0x563ee31e8100 <line:107:5, col:38> col:27 NO_LIMIT 'const unsigned int' static cinit
| `-IntegerLiteral 0x563ee31e8168 <col:38> 'unsigned int' 4294967295
|-FieldDecl 0x563ee31f1de8 <line:109:5, col:17> col:17 _tb 'TokenBucket':'TokenBucketX<TokenBucketJiffyParameters<unsigned int> >'
|-FieldDecl 0x563ee31f1e50 <line:110:5, col:14> col:14 _count 'unsigned int'
|-FieldDecl 0x563ee31f1eb8 <line:111:5, col:14> col:14 _limit 'unsigned int'
|-FieldDecl 0x563ee31f1f20 <line:112:5, col:9> col:9 _datasize 'int'
|-FieldDecl 0x563ee31f1f80 <line:113:5, col:10> col:10 _active 'bool'
|-FieldDecl 0x563ee31f1fe0 <line:114:5, col:10> col:10 _stop 'bool'
|-FieldDecl 0x563ee31f2040 <line:115:5, col:13> col:13 _packet 'Packet *'
|-FieldDecl 0x563ee31f20a0 <line:116:5, col:10> col:10 referenced _task 'Task'
|-FieldDecl 0x563ee31f2100 <line:117:5, col:11> col:11 _timer 'Timer'
|-FieldDecl 0x563ee31f2160 <line:118:5, col:12> col:12 _data 'String'
|-CXXMethodDecl 0x563ee31f21d0 <line:120:5, col:23> col:10 setup_packet 'void ()'
|-CXXMethodDecl 0x563ee31f2398 <line:122:5, col:47> col:19 read_param 'String (Element *, void *)' static
| |-ParmVarDecl 0x563ee31f2280 <col:30, col:38> col:39 'Element *'
| `-ParmVarDecl 0x563ee31f2300 <col:41, col:46> col:47 'void *'
|-CXXMethodDecl 0x563ee31f2678 <line:123:5, col:78> col:16 change_param 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x563ee31f2458 <col:29, col:42> col:43 'const String &'
| |-ParmVarDecl 0x563ee31f24d0 <col:45, col:53> col:54 'Element *'
| |-ParmVarDecl 0x563ee31f2550 <col:56, col:61> col:62 'void *'
| `-ParmVarDecl 0x563ee31f25c8 <col:64, col:77> col:78 'ErrorHandler *'
|-CXXConstructorDecl 0x563ee31f2768 <line:90:7> col:7 implicit RatedSource 'void (const RatedSource &)' inline default_delete noexcept-unevaluated 0x563ee31f2768
| `-ParmVarDecl 0x563ee31f2878 <col:7> col:7 'const RatedSource &'
|-CXXConstructorDecl 0x563ee31f2918 <col:7> col:7 implicit RatedSource 'void (RatedSource &&)' inline default_delete noexcept-unevaluated 0x563ee31f2918
| `-ParmVarDecl 0x563ee31f2a28 <col:7> col:7 'RatedSource &&'
|-CXXMethodDecl 0x563ee31f2ac8 <col:7> col:7 implicit operator= 'RatedSource &(const RatedSource &)' inline default_delete noexcept-unevaluated 0x563ee31f2ac8
| `-ParmVarDecl 0x563ee31f2bd8 <col:7> col:7 'const RatedSource &'
|-CXXMethodDecl 0x563ee31f2c48 <col:7> col:7 implicit operator= 'RatedSource &(RatedSource &&)' inline default_delete noexcept-unevaluated 0x563ee31f2c48
| `-ParmVarDecl 0x563ee31f2d58 <col:7> col:7 'RatedSource &&'
`-CXXDestructorDecl 0x563ee31f2de0 <col:7> col:7 implicit ~RatedSource 'void ()' inline default noexcept-unevaluated 0x563ee31f2de0
  `-Overrides: [ 0x563ee30f70e8 Element::~Element 'void () noexcept' ]

Layout: <CGRecordLayout
  LLVMType:%class.RatedSource = type { %class.Element.base, %class.TokenBucketX, i32, i32, i32, i8, i8, %class.Packet*, %class.Task, %class.Timer, %class.String }
  NonVirtualBaseLLVMType:%class.RatedSource = type { %class.Element.base, %class.TokenBucketX, i32, i32, i32, i8, i8, %class.Packet*, %class.Task, %class.Timer, %class.String }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class ArgContext
         0 |   const class Element * _context
         8 |   class ErrorHandler * _errh
        16 |   const char * _arg_keyword
        24 |   _Bool _read_status
           | [sizeof=32, dsize=25, align=8,
           |  nvsize=25, nvalign=8]

*** Dumping AST Record Layout
         0 | class Args
         0 |   class ArgContext (base)
         0 |     const class Element * _context
         8 |     class ErrorHandler * _errh
        16 |     const char * _arg_keyword
        24 |     _Bool _read_status
        25 |   _Bool _my_conf
        26 |   _Bool _status
        27 |   uint8_t _simple_slotpos
        32 |   Vector<class String> * _conf
        40 |   class Vector<int> _kwpos
        40 |     class vector_memory<class sized_array_memory<4> > vm_
        40 |       vector_memory<class sized_array_memory<4> >::type * l_
        48 |       vector_memory::size_type n_
        52 |       vector_memory::size_type capacity_
        56 |   struct Args::Slot * _slots
        64 |   uint8_t [48] _simple_slotbuf
           | [sizeof=112, dsize=112, align=8,
           |  nvsize=112, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563ee322a0e8 prev 0x563ee30bc4f8 <../dummy_inc/click/args.hh:29:1, line:85:1> line:29:7 referenced class ArgContext definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x563ee322a1e0 <col:1, col:7> col:7 implicit referenced class ArgContext
|-AccessSpecDecl 0x563ee322a270 <col:20, col:26> col:20 public
|-CXXConstructorDecl 0x563ee322a3a8 <line:33:5, line:38:5> line:33:5 ArgContext 'void (ErrorHandler *)'
| |-ParmVarDecl 0x563ee322a2a8 <col:16, col:37> col:30 used errh 'ErrorHandler *' cinit
| | `-ImplicitCastExpr 0x563ee322b7d0 <col:37> 'ErrorHandler *' <NullToPointer>
| |   `-IntegerLiteral 0x563ee322b7b0 <col:37> 'int' 0
| |-CXXCtorInitializer Field 0x563ee322b348 '_errh' 'ErrorHandler *'
| | `-ImplicitCastExpr 0x563ee322b860 <line:34:17> 'ErrorHandler *' <LValueToRValue>
| |   `-DeclRefExpr 0x563ee322b820 <col:17> 'ErrorHandler *' lvalue ParmVar 0x563ee322a2a8 'errh' 'ErrorHandler *'
| |-CXXCtorInitializer Field 0x563ee322b3b0 '_arg_keyword' 'const char *'
| | `-ImplicitCastExpr 0x563ee322b8e0 <col:37> 'const char *' <NullToPointer>
| |   `-IntegerLiteral 0x563ee322b8a0 <col:37> 'int' 0
| |-CXXCtorInitializer Field 0x563ee322b410 '_read_status' 'bool'
| | `-CXXBoolLiteralExpr 0x563ee322b920 <col:54> 'bool' false
| `-CompoundStmt 0x563ee322ba28 <col:61, line:38:5>
|   `-BinaryOperator 0x563ee322ba08 <line:36:9, col:20> 'const Element *' lvalue '='
|     |-MemberExpr 0x563ee322b9a0 <col:9> 'const Element *' lvalue ->_context 0x563ee322b2e8
|     | `-CXXThisExpr 0x563ee322b990 <col:9> 'ArgContext *' implicit this
|     `-ImplicitCastExpr 0x563ee322b9f0 <col:20> 'const Element *' <NullToPointer>
|       `-IntegerLiteral 0x563ee322b9d0 <col:20> 'int' 0
|-CXXConstructorDecl 0x563ee322a5b8 <line:44:5, line:46:5> line:44:5 ArgContext 'void (const Element *, ErrorHandler *)'
| |-ParmVarDecl 0x563ee322a468 <col:16, col:31> col:31 used context 'const Element *'
| |-ParmVarDecl 0x563ee322a4e0 <col:40, col:61> col:54 used errh 'ErrorHandler *' cinit
| | `-ImplicitCastExpr 0x563ee322b808 <col:61> 'ErrorHandler *' <NullToPointer>
| |   `-IntegerLiteral 0x563ee322b7e8 <col:61> 'int' 0
| |-CXXCtorInitializer Field 0x563ee322b2e8 '_context' 'const Element *'
| | `-ImplicitCastExpr 0x563ee322ba80 <line:45:20> 'const Element *' <LValueToRValue>
| |   `-DeclRefExpr 0x563ee322ba40 <col:20> 'const Element *' lvalue ParmVar 0x563ee322a468 'context' 'const Element *'
| |-CXXCtorInitializer Field 0x563ee322b348 '_errh' 'ErrorHandler *'
| | `-ImplicitCastExpr 0x563ee322bb00 <col:36> 'ErrorHandler *' <LValueToRValue>
| |   `-DeclRefExpr 0x563ee322bac0 <col:36> 'ErrorHandler *' lvalue ParmVar 0x563ee322a4e0 'errh' 'ErrorHandler *'
| |-CXXCtorInitializer Field 0x563ee322b3b0 '_arg_keyword' 'const char *'
| | `-ImplicitCastExpr 0x563ee322bb80 <col:56> 'const char *' <NullToPointer>
| |   `-IntegerLiteral 0x563ee322bb40 <col:56> 'int' 0
| |-CXXCtorInitializer Field 0x563ee322b410 '_read_status' 'bool'
| | `-CXXBoolLiteralExpr 0x563ee322bbc0 <col:73> 'bool' false
| `-CompoundStmt 0x563ee322bc38 <col:80, line:46:5>
|-CXXMethodDecl 0x563ee322a6e8 <line:49:5, line:51:5> line:49:20 context 'const Element *() const'
| `-CompoundStmt 0x563ee322bcb0 <col:36, line:51:5>
|   `-ReturnStmt 0x563ee322bca0 <line:50:9, col:16>
|     `-ImplicitCastExpr 0x563ee322bc88 <col:16> 'const Element *' <LValueToRValue>
|       `-MemberExpr 0x563ee322bc58 <col:16> 'const Element *const' lvalue ->_context 0x563ee322b2e8
|         `-CXXThisExpr 0x563ee322bc48 <col:16> 'const ArgContext *' implicit this
|-CXXMethodDecl 0x563ee322a7d8 <line:55:5, line:57:5> line:55:19 errh 'ErrorHandler *() const'
| `-CompoundStmt 0x563ee322bd30 <col:32, line:57:5>
|   `-ReturnStmt 0x563ee322bd20 <line:56:9, col:16>
|     `-ImplicitCastExpr 0x563ee322bd08 <col:16> 'ErrorHandler *' <LValueToRValue>
|       `-MemberExpr 0x563ee322bcd8 <col:16> 'ErrorHandler *const' lvalue ->_errh 0x563ee322b348
|         `-CXXThisExpr 0x563ee322bcc8 <col:16> 'const ArgContext *' implicit this
|-CXXMethodDecl 0x563ee322a898 <line:62:5, col:27> col:12 error_prefix 'String () const'
|-CXXMethodDecl 0x563ee322aa20 <line:65:5, col:38> col:10 referenced error 'void (const char *, ...) const'
| `-ParmVarDecl 0x563ee322a950 <col:16, col:28> col:28 fmt 'const char *'
|-CXXMethodDecl 0x563ee322ab70 <line:68:5, col:40> col:10 warning 'void (const char *, ...) const'
| `-ParmVarDecl 0x563ee322aae0 <col:18, col:30> col:30 fmt 'const char *'
|-CXXMethodDecl 0x563ee322acc0 <line:71:5, col:40> col:10 message 'void (const char *, ...) const'
| `-ParmVarDecl 0x563ee322ac30 <col:18, col:30> col:30 fmt 'const char *'
|-CXXMethodDecl 0x563ee322aec8 <line:73:5, col:58> col:10 xmessage 'void (const String &, const String &) const'
| |-ParmVarDecl 0x563ee322ad78 <col:19, col:33> col:33 anno 'const String &'
| `-ParmVarDecl 0x563ee322adf0 <col:39, col:53> col:53 str 'const String &'
|-CXXMethodDecl 0x563ee322b1f8 <line:74:5, col:69> col:10 xmessage 'void (const String &, const char *, __va_list_tag *) const'
| |-ParmVarDecl 0x563ee322af88 <col:19, col:33> col:33 anno 'const String &'
| |-ParmVarDecl 0x563ee322b008 <col:39, col:51> col:51 fmt 'const char *'
| `-ParmVarDecl 0x563ee322b0d0 <col:56, col:64> col:64 val '__va_list_tag *':'__va_list_tag *'
|-AccessSpecDecl 0x563ee322b2b0 <line:76:3, col:12> col:3 protected
|-FieldDecl 0x563ee322b2e8 <line:79:5, col:20> col:20 referenced _context 'const Element *'
|-FieldDecl 0x563ee322b348 <line:81:5, col:19> col:19 referenced _errh 'ErrorHandler *'
|-FieldDecl 0x563ee322b3b0 <line:82:5, col:17> col:17 _arg_keyword 'const char *'
|-FieldDecl 0x563ee322b410 <line:83:5, col:18> col:18 referenced _read_status 'bool' mutable
|-CXXConstructorDecl 0x563ee322b460 <line:29:7> col:7 implicit constexpr ArgContext 'void (const ArgContext &)' inline default trivial noexcept-unevaluated 0x563ee322b460
| `-ParmVarDecl 0x563ee322b578 <col:7> col:7 'const ArgContext &'
|-CXXMethodDecl 0x563ee322b618 <col:7> col:7 implicit operator= 'ArgContext &(const ArgContext &)' inline default trivial noexcept-unevaluated 0x563ee322b618
| `-ParmVarDecl 0x563ee322b728 <col:7> col:7 'const ArgContext &'
`-CXXDestructorDecl 0x563ee33143d0 <col:7> col:7 implicit ~ArgContext 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.ArgContext = type <{ %class.Element*, %class.ErrorHandler*, i8*, i8, [7 x i8] }>
  NonVirtualBaseLLVMType:%class.ArgContext.base = type <{ %class.Element*, %class.ErrorHandler*, i8*, i8 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct Args::Slot
         0 |   (Slot vtable pointer)
         8 |   struct Args::Slot * _next
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563ee324f228 prev 0x563ee3233148 <../dummy_inc/click/args.hh:826:5, line:833:5> line:826:12 referenced struct Slot definition
|-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x563ee324f320 <col:5, col:12> col:12 implicit referenced struct Slot
|-CXXConstructorDecl 0x563ee324f410 <line:827:9, line:828:9> line:827:9 used Slot 'void ()'
| `-CompoundStmt 0x563ee3278e00 <col:16, line:828:9>
|-CXXDestructorDecl 0x563ee324f500 <line:829:9, line:830:9> line:829:17 used ~Slot 'void () noexcept' virtual
| `-CompoundStmt 0x563ee3278e10 <col:25, line:830:9>
|-CXXMethodDecl 0x563ee324f600 <line:831:9, col:32> col:22 store 'void ()' virtual pure
|-FieldDecl 0x563ee324f6b0 <line:832:9, col:15> col:15 _next 'Args::Slot *'
|-CXXMethodDecl 0x563ee324f758 <line:826:12> col:12 implicit operator= 'Args::Slot &(const Args::Slot &)' inline default noexcept-unevaluated 0x563ee324f758
| `-ParmVarDecl 0x563ee324f868 <col:12> col:12 'const Args::Slot &'
`-CXXConstructorDecl 0x563ee3250028 <col:12> col:12 implicit constexpr Slot 'void (const Args::Slot &)' inline default noexcept-unevaluated 0x563ee3250028
  `-ParmVarDecl 0x563ee3250138 <col:12> col:12 'const Args::Slot &'

Layout: <CGRecordLayout
  LLVMType:%"struct.Args::Slot" = type { i32 (...)**, %"struct.Args::Slot"* }
  NonVirtualBaseLLVMType:%"struct.Args::Slot" = type { i32 (...)**, %"struct.Args::Slot"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563ee3232f58 <../dummy_inc/click/args.hh:247:1, line:898:1> line:247:7 referenced class Args definition
|-DefinitionData has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared
|-public 'ArgContext'
|-CXXRecordDecl 0x563ee32330b8 <col:1, col:7> col:7 implicit referenced class Args
|-CXXRecordDecl 0x563ee3233148 <line:248:5, col:12> col:12 struct Slot
|-AccessSpecDecl 0x563ee3233200 <line:250:3, col:9> col:3 public
|-CXXConstructorDecl 0x563ee3233308 <line:254:5, col:32> col:5 Args 'void (ErrorHandler *)'
| `-ParmVarDecl 0x563ee3233238 <col:10, col:31> col:24 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x563ee3269898 <col:31> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x563ee3269878 <col:31> 'int' 0
|-CXXConstructorDecl 0x563ee3233628 <line:259:5, col:60> col:5 Args 'void (const Vector<String> &, ErrorHandler *)'
| |-ParmVarDecl 0x563ee32334a0 <col:10, col:32> col:32 conf 'const Vector<String> &'
| `-ParmVarDecl 0x563ee3233518 <col:38, col:59> col:52 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x563ee32698d0 <col:59> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x563ee32698b0 <col:59> 'int' 0
|-CXXConstructorDecl 0x563ee3233800 <line:265:5, col:56> col:5 Args 'void (const Element *, ErrorHandler *)'
| |-ParmVarDecl 0x563ee32336f0 <col:10, col:25> col:25 context 'const Element *'
| `-ParmVarDecl 0x563ee3233768 <col:34, col:55> col:48 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x563ee3269908 <col:55> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x563ee32698e8 <col:55> 'int' 0
|-CXXConstructorDecl 0x563ee3233bb8 <line:271:5, line:272:32> line:271:5 used Args 'void (const Vector<String> &, const Element *, ErrorHandler *)'
| |-ParmVarDecl 0x563ee32339a0 <col:10, col:32> col:32 conf 'const Vector<String> &'
| |-ParmVarDecl 0x563ee3233a18 <col:38, col:53> col:53 context 'const Element *'
| `-ParmVarDecl 0x563ee3233a90 <line:272:10, col:31> col:24 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x563ee3269940 <col:31> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x563ee3269920 <col:31> 'int' 0
|-CXXConstructorDecl 0x563ee3233d78 <line:279:5, col:23> col:5 Args 'void (const Args &)'
| `-ParmVarDecl 0x563ee3233cb8 <col:10, col:22> col:22 x 'const Args &'
|-CXXDestructorDecl 0x563ee3233e70 <line:281:5, col:11> col:5 used ~Args 'void () noexcept'
|-CXXMethodDecl 0x563ee3234058 <line:285:5, col:34> col:11 operator= 'Args &(const Args &)'
| `-ParmVarDecl 0x563ee3233f60 <col:21, col:33> col:33 x 'const Args &'
|-CXXMethodDecl 0x563ee3234148 <line:289:5, line:291:5> line:289:10 empty 'bool () const'
| `-CompoundStmt 0x563ee3269cf0 <col:24, line:291:5>
|   `-ReturnStmt 0x563ee3269ce0 <line:290:9, col:79>
|     `-BinaryOperator 0x563ee3269cc0 <col:16, col:79> 'bool' '&&'
|       |-BinaryOperator 0x563ee3269b98 <col:16, col:47> 'bool' '&&'
|       | |-ParenExpr 0x563ee3269af0 <col:16, col:41> 'bool'
|       | | `-BinaryOperator 0x563ee3269ad0 <col:17, col:40> 'bool' '||'
|       | |   |-UnaryOperator 0x563ee32699c8 <col:17, col:18> 'bool' prefix '!' cannot overflow
|       | |   | `-ImplicitCastExpr 0x563ee32699b0 <col:18> 'bool' <PointerToBoolean>
|       | |   |   `-ImplicitCastExpr 0x563ee3269998 <col:18> 'Vector<String> *' <LValueToRValue>
|       | |   |     `-MemberExpr 0x563ee3269968 <col:18> 'Vector<String> *const' lvalue ->_conf 0x563ee3251050
|       | |   |       `-CXXThisExpr 0x563ee3269958 <col:18> 'const Args *' implicit this
|       | |   `-UnaryOperator 0x563ee3269ab8 <col:27, col:40> 'bool' prefix '!' cannot overflow
|       | |     `-ImplicitCastExpr 0x563ee3269aa0 <col:28, col:40> 'bool' <IntegralToBoolean>
|       | |       `-CXXMemberCallExpr 0x563ee3269a68 <col:28, col:40> 'Vector::size_type':'int'
|       | |         `-MemberExpr 0x563ee3269a38 <col:28, col:35> '<bound member function type>' ->size 0x563ee321aec8
|       | |           `-ImplicitCastExpr 0x563ee3269a88 <col:28> 'const Vector<String> *' <NoOp>
|       | |             `-ImplicitCastExpr 0x563ee3269a20 <col:28> 'Vector<String> *' <LValueToRValue>
|       | |               `-MemberExpr 0x563ee32699f0 <col:28> 'Vector<String> *const' lvalue ->_conf 0x563ee3251050
|       | |                 `-CXXThisExpr 0x563ee32699e0 <col:28> 'const Args *' implicit this
|       | `-UnaryOperator 0x563ee3269b80 <col:46, col:47> 'bool' prefix '!' cannot overflow
|       |   `-ImplicitCastExpr 0x563ee3269b68 <col:47> 'bool' <PointerToBoolean>
|       |     `-ImplicitCastExpr 0x563ee3269b50 <col:47> 'Args::Slot *' <LValueToRValue>
|       |       `-MemberExpr 0x563ee3269b20 <col:47> 'Args::Slot *const' lvalue ->_slots 0x563ee3268420
|       |         `-CXXThisExpr 0x563ee3269b10 <col:47> 'const Args *' implicit this
|       `-BinaryOperator 0x563ee3269ca0 <col:57, col:79> 'bool' '=='
|         |-ImplicitCastExpr 0x563ee3269c88 <col:57, col:74> 'int' <IntegralCast>
|         | `-ImplicitCastExpr 0x563ee3269c70 <col:57, col:74> 'uint8_t':'unsigned char' <LValueToRValue>
|         |   `-ArraySubscriptExpr 0x563ee3269c30 <col:57, col:74> 'const uint8_t':'const unsigned char' lvalue
|         |     |-ImplicitCastExpr 0x563ee3269c18 <col:57> 'const uint8_t *' <ArrayToPointerDecay>
|         |     | `-MemberExpr 0x563ee3269bc8 <col:57> 'uint8_t const[48]' lvalue ->_simple_slotbuf 0x563ee32684d0
|         |     |   `-CXXThisExpr 0x563ee3269bb8 <col:57> 'const Args *' implicit this
|         |     `-IntegerLiteral 0x563ee3269bf8 <col:73> 'int' 0
|         `-IntegerLiteral 0x563ee3269c50 <col:79> 'int' 0
|-CXXMethodDecl 0x563ee3234208 <line:294:5, line:296:5> line:294:10 results_empty 'bool () const'
| `-CompoundStmt 0x563ee3269ec8 <col:32, line:296:5>
|   `-ReturnStmt 0x563ee3269eb8 <line:295:9, col:49>
|     `-BinaryOperator 0x563ee3269e98 <col:16, col:49> 'bool' '&&'
|       |-UnaryOperator 0x563ee3269d78 <col:16, col:17> 'bool' prefix '!' cannot overflow
|       | `-ImplicitCastExpr 0x563ee3269d60 <col:17> 'bool' <PointerToBoolean>
|       |   `-ImplicitCastExpr 0x563ee3269d48 <col:17> 'Args::Slot *' <LValueToRValue>
|       |     `-MemberExpr 0x563ee3269d18 <col:17> 'Args::Slot *const' lvalue ->_slots 0x563ee3268420
|       |       `-CXXThisExpr 0x563ee3269d08 <col:17> 'const Args *' implicit this
|       `-BinaryOperator 0x563ee3269e78 <col:27, col:49> 'bool' '=='
|         |-ImplicitCastExpr 0x563ee3269e60 <col:27, col:44> 'int' <IntegralCast>
|         | `-ImplicitCastExpr 0x563ee3269e48 <col:27, col:44> 'uint8_t':'unsigned char' <LValueToRValue>
|         |   `-ArraySubscriptExpr 0x563ee3269e08 <col:27, col:44> 'const uint8_t':'const unsigned char' lvalue
|         |     |-ImplicitCastExpr 0x563ee3269df0 <col:27> 'const uint8_t *' <ArrayToPointerDecay>
|         |     | `-MemberExpr 0x563ee3269da0 <col:27> 'uint8_t const[48]' lvalue ->_simple_slotbuf 0x563ee32684d0
|         |     |   `-CXXThisExpr 0x563ee3269d90 <col:27> 'const Args *' implicit this
|         |     `-IntegerLiteral 0x563ee3269dd0 <col:43> 'int' 0
|         `-IntegerLiteral 0x563ee3269e28 <col:49> 'int' 0
|-CXXMethodDecl 0x563ee32342f8 <line:301:5, line:306:5> line:301:11 clear 'Args &()'
| `-CompoundStmt 0x563ee326a0d8 <col:19, line:306:5>
|   |-IfStmt 0x563ee3269ff8 <line:302:9, line:303:26>
|   | |-ImplicitCastExpr 0x563ee3269f38 <line:302:13> 'bool' <PointerToBoolean>
|   | | `-ImplicitCastExpr 0x563ee3269f20 <col:13> 'Vector<String> *' <LValueToRValue>
|   | |   `-MemberExpr 0x563ee3269ef0 <col:13> 'Vector<String> *' lvalue ->_conf 0x563ee3251050
|   | |     `-CXXThisExpr 0x563ee3269ee0 <col:13> 'Args *' implicit this
|   | `-CXXMemberCallExpr 0x563ee3269fd8 <line:303:13, col:26> 'void'
|   |   `-MemberExpr 0x563ee3269fa8 <col:13, col:20> '<bound member function type>' ->clear 0x563ee321e4f8
|   |     `-ImplicitCastExpr 0x563ee3269f90 <col:13> 'Vector<String> *' <LValueToRValue>
|   |       `-MemberExpr 0x563ee3269f60 <col:13> 'Vector<String> *' lvalue ->_conf 0x563ee3251050
|   |         `-CXXThisExpr 0x563ee3269f50 <col:13> 'Args *' implicit this
|   |-CXXMemberCallExpr 0x563ee326a080 <line:304:9, col:22> 'void'
|   | `-MemberExpr 0x563ee326a050 <col:9, col:16> '<bound member function type>' .clear 0x563ee32676f8
|   |   `-MemberExpr 0x563ee326a020 <col:9> 'Vector<int>':'Vector<int>' lvalue ->_kwpos 0x563ee3267b10
|   |     `-CXXThisExpr 0x563ee326a010 <col:9> 'Args *' implicit this
|   `-ReturnStmt 0x563ee326a0c8 <line:305:9, col:17>
|     `-UnaryOperator 0x563ee326a0b0 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x563ee326a0a0 <col:17> 'Args *' this
|-CXXMethodDecl 0x563ee3234578 <line:313:5, col:36> col:11 bind 'Args &(Vector<String> &)'
| `-ParmVarDecl 0x563ee3234480 <col:16, col:32> col:32 conf 'Vector<String> &'
|-CXXMethodDecl 0x563ee32346f8 <line:317:5, col:38> col:11 push_back 'Args &(const String &)'
| `-ParmVarDecl 0x563ee3234630 <col:21, col:35> col:35 arg 'const String &'
|-FunctionTemplateDecl 0x563ee3234a78 <line:321:5, line:327:5> line:321:35 push_back
| |-TemplateTypeParmDecl 0x563ee32347a0 <col:14, col:23> col:23 referenced typename depth 0 index 0 Iter
| `-CXXMethodDecl 0x563ee32349d8 <col:29, line:327:5> line:321:35 push_back 'Args &(Iter, Iter)'
|   |-ParmVarDecl 0x563ee3234848 <col:45, col:50> col:50 referenced begin 'Iter'
|   |-ParmVarDecl 0x563ee32348c0 <col:57, col:62> col:62 referenced end 'Iter'
|   `-CompoundStmt 0x563ee326a3f8 <col:67, line:327:5>
|     |-WhileStmt 0x563ee326a3a8 <line:322:9, line:325:9>
|     | |-CXXOperatorCallExpr 0x563ee326a1c0 <line:322:16, col:25> '<dependent type>'
|     | | |-UnresolvedLookupExpr 0x563ee326a140 <col:22> '<overloaded function type>' lvalue (ADL) = 'operator!=' 0x563ee30b49c8 0x563ee2efdfa8 0x563ee2efdc80 0x563ee2eef460 0x563ee2eef110 0x563ee2eeea00 0x563ee2ec1370 0x563ee2e4d830
|     | | |-DeclRefExpr 0x563ee326a100 <col:16> 'Iter' lvalue ParmVar 0x563ee3234848 'begin' 'Iter'
|     | | `-DeclRefExpr 0x563ee326a120 <col:25> 'Iter' lvalue ParmVar 0x563ee32348c0 'end' 'Iter'
|     | `-CompoundStmt 0x563ee326a388 <col:30, line:325:9>
|     |   |-CallExpr 0x563ee326a328 <line:323:13, col:29> '<dependent type>'
|     |   | |-UnresolvedMemberExpr 0x563ee326a208 <col:13> '<bound member function type>' lvalue
|     |   | `-CXXOperatorCallExpr 0x563ee326a2f8 <col:23, col:24> '<dependent type>'
|     |   |   |-UnresolvedLookupExpr 0x563ee326a288 <col:23> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x563ee30b9b48 0x563ee30b9768 0x563ee30b9398 0x563ee30b8fb8 0x563ee30b8bd8 0x563ee30b8808
|     |   |   `-DeclRefExpr 0x563ee326a268 <col:24> 'Iter' lvalue ParmVar 0x563ee3234848 'begin' 'Iter'
|     |   `-UnaryOperator 0x563ee326a370 <line:324:13, col:15> '<dependent type>' prefix '++' cannot overflow
|     |     `-DeclRefExpr 0x563ee326a350 <col:15> 'Iter' lvalue ParmVar 0x563ee3234848 'begin' 'Iter'
|     `-ReturnStmt 0x563ee326a3e8 <line:326:9, col:17>
|       `-UnaryOperator 0x563ee326a3d0 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x563ee326a3c0 <col:17> 'Args *' this
|-CXXMethodDecl 0x563ee3234b80 <line:331:5, col:44> col:11 push_back_words 'Args &(const String &)'
| `-ParmVarDecl 0x563ee3234af0 <col:27, col:41> col:41 str 'const String &'
|-CXXMethodDecl 0x563ee3234cc8 <line:335:5, col:43> col:11 push_back_args 'Args &(const String &)'
| `-ParmVarDecl 0x563ee3234c38 <col:26, col:40> col:40 str 'const String &'
|-CXXMethodDecl 0x563ee3234d90 <line:350:5, line:353:5> line:350:11 reset 'Args &()'
| `-CompoundStmt 0x563ee326a4d8 <col:19, line:353:5>
|   |-CXXMemberCallExpr 0x563ee326a478 <line:351:9, col:21> 'void'
|   | |-MemberExpr 0x563ee326a428 <col:9> '<bound member function type>' ->reset_from 0x563ee3268848
|   | | `-CXXThisExpr 0x563ee326a418 <col:9> 'Args *' implicit this
|   | `-IntegerLiteral 0x563ee326a458 <col:20> 'int' 0
|   `-ReturnStmt 0x563ee326a4c8 <line:352:9, col:17>
|     `-UnaryOperator 0x563ee326a4b0 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x563ee326a4a0 <col:17> 'Args *' this
|-VarDecl 0x563ee3234e48 <line:356:5, col:38> col:26 referenced mandatory 'const int' static constexpr cinit
| `-IntegerLiteral 0x563ee3234eb0 <col:38> 'int' 1
|-VarDecl 0x563ee3234f40 <line:357:5, col:39> col:26 referenced positional 'const int' static constexpr cinit
| `-IntegerLiteral 0x563ee3234fa8 <col:39> 'int' 2
|-VarDecl 0x563ee3235038 <line:358:5, col:39> col:26 deprecated 'const int' static constexpr cinit
| `-IntegerLiteral 0x563ee32350a0 <col:39> 'int' 4
|-VarDecl 0x563ee3235130 <line:359:5, col:39> col:26 referenced firstmatch 'const int' static constexpr cinit
| `-IntegerLiteral 0x563ee3235198 <col:39> 'int' 8
|-FunctionTemplateDecl 0x563ee3235518 <line:368:5, line:371:5> line:369:11 read
| |-TemplateTypeParmDecl 0x563ee3235210 <line:368:15, col:24> col:24 referenced typename depth 0 index 0 T
| |-CXXMethodDecl 0x563ee3235478 <line:369:5, line:371:5> line:369:11 read 'Args &(const char *, T &)'
| | |-ParmVarDecl 0x563ee32352c0 <col:16, col:28> col:28 referenced keyword 'const char *'
| | |-ParmVarDecl 0x563ee3235368 <col:37, col:40> col:40 referenced x 'T &'
| | `-CompoundStmt 0x563ee326a630 <col:43, line:371:5>
| |   `-ReturnStmt 0x563ee326a620 <line:370:9, col:34>
| |     `-CallExpr 0x563ee326a5e8 <col:16, col:34> '<dependent type>'
| |       |-UnresolvedMemberExpr 0x563ee326a508 <col:16> '<bound member function type>' lvalue
| |       |-DeclRefExpr 0x563ee326a588 <col:21> 'const char *' lvalue ParmVar 0x563ee32352c0 'keyword' 'const char *'
| |       |-IntegerLiteral 0x563ee326a5a8 <col:30> 'int' 0
| |       `-DeclRefExpr 0x563ee326a5c8 <col:33> 'T' lvalue ParmVar 0x563ee3235368 'x' 'T &'
| |-CXXMethodDecl 0x563ee3315a98 <line:369:5, line:371:5> line:369:11 used read 'Args &(const char *, int &)'
| | |-TemplateArgument type 'int'
| | |-ParmVarDecl 0x563ee33158f0 <col:16, col:28> col:28 keyword 'const char *'
| | `-ParmVarDecl 0x563ee33159c8 <col:37, col:40> col:40 x 'int &'
| `-CXXMethodDecl 0x563ee3316058 <col:5, line:371:5> line:369:11 used read 'Args &(const char *, bool &)'
|   |-TemplateArgument type 'bool'
|   |-ParmVarDecl 0x563ee3315eb8 <col:16, col:28> col:28 keyword 'const char *'
|   `-ParmVarDecl 0x563ee3315f88 <col:37, col:40> col:40 x 'bool &'
|-FunctionTemplateDecl 0x563ee3235848 <line:372:5, line:375:5> line:373:11 read_m
| |-TemplateTypeParmDecl 0x563ee3235580 <line:372:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x563ee32357a8 <line:373:5, line:375:5> line:373:11 read_m 'Args &(const char *, T &)'
|   |-ParmVarDecl 0x563ee3235630 <col:18, col:30> col:30 referenced keyword 'const char *'
|   |-ParmVarDecl 0x563ee32356d8 <col:39, col:42> col:42 referenced x 'T &'
|   `-CompoundStmt 0x563ee326a780 <col:45, line:375:5>
|     `-ReturnStmt 0x563ee326a770 <line:374:9, col:42>
|       `-CallExpr 0x563ee326a738 <col:16, col:42> '<dependent type>'
|         |-UnresolvedMemberExpr 0x563ee326a658 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x563ee326a6d8 <col:21> 'const char *' lvalue ParmVar 0x563ee3235630 'keyword' 'const char *'
|         |-DeclRefExpr 0x563ee326a6f8 <col:30> 'const int' lvalue Var 0x563ee3234e48 'mandatory' 'const int'
|         `-DeclRefExpr 0x563ee326a718 <col:41> 'T' lvalue ParmVar 0x563ee32356d8 'x' 'T &'
|-FunctionTemplateDecl 0x563ee3235b78 <line:376:5, line:379:5> line:377:11 read_p
| |-TemplateTypeParmDecl 0x563ee32358b0 <line:376:15, col:24> col:24 referenced typename depth 0 index 0 T
| |-CXXMethodDecl 0x563ee3235ad8 <line:377:5, line:379:5> line:377:11 read_p 'Args &(const char *, T &)'
| | |-ParmVarDecl 0x563ee3235960 <col:18, col:30> col:30 referenced keyword 'const char *'
| | |-ParmVarDecl 0x563ee3235a08 <col:39, col:42> col:42 referenced x 'T &'
| | `-CompoundStmt 0x563ee326a8d0 <col:45, line:379:5>
| |   `-ReturnStmt 0x563ee326a8c0 <line:378:9, col:43>
| |     `-CallExpr 0x563ee326a888 <col:16, col:43> '<dependent type>'
| |       |-UnresolvedMemberExpr 0x563ee326a7a8 <col:16> '<bound member function type>' lvalue
| |       |-DeclRefExpr 0x563ee326a828 <col:21> 'const char *' lvalue ParmVar 0x563ee3235960 'keyword' 'const char *'
| |       |-DeclRefExpr 0x563ee326a848 <col:30> 'const int' lvalue Var 0x563ee3234f40 'positional' 'const int'
| |       `-DeclRefExpr 0x563ee326a868 <col:42> 'T' lvalue ParmVar 0x563ee3235a08 'x' 'T &'
| |-CXXMethodDecl 0x563ee33148b8 <line:377:5, line:379:5> line:377:11 used read_p 'Args &(const char *, String &)'
| | |-TemplateArgument type 'String'
| | |-ParmVarDecl 0x563ee33146d0 <col:18, col:30> col:30 keyword 'const char *'
| | `-ParmVarDecl 0x563ee33147a8 <col:39, col:42> col:42 x 'String &'
| |-CXXMethodDecl 0x563ee3314d18 <col:5, line:379:5> line:377:11 used read_p 'Args &(const char *, unsigned int &)'
| | |-TemplateArgument type 'unsigned int'
| | |-ParmVarDecl 0x563ee3314b38 <col:18, col:30> col:30 keyword 'const char *'
| | `-ParmVarDecl 0x563ee3314c08 <col:39, col:42> col:42 x 'unsigned int &'
| |-CXXMethodDecl 0x563ee3315178 <col:5, line:379:5> line:377:11 used read_p 'Args &(const char *, int &)'
| | |-TemplateArgument type 'int'
| | |-ParmVarDecl 0x563ee3314f98 <col:18, col:30> col:30 keyword 'const char *'
| | `-ParmVarDecl 0x563ee3315068 <col:39, col:42> col:42 x 'int &'
| `-CXXMethodDecl 0x563ee33155d8 <col:5, line:379:5> line:377:11 used read_p 'Args &(const char *, bool &)'
|   |-TemplateArgument type 'bool'
|   |-ParmVarDecl 0x563ee33153f0 <col:18, col:30> col:30 keyword 'const char *'
|   `-ParmVarDecl 0x563ee33154c8 <col:39, col:42> col:42 x 'bool &'
|-FunctionTemplateDecl 0x563ee3235ea8 <line:380:5, line:383:5> line:381:11 read_mp
| |-TemplateTypeParmDecl 0x563ee3235be0 <line:380:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x563ee3235e08 <line:381:5, line:383:5> line:381:11 read_mp 'Args &(const char *, T &)'
|   |-ParmVarDecl 0x563ee3235c90 <col:19, col:31> col:31 referenced keyword 'const char *'
|   |-ParmVarDecl 0x563ee3235d38 <col:40, col:43> col:43 referenced x 'T &'
|   `-CompoundStmt 0x563ee326aad0 <col:46, line:383:5>
|     `-ReturnStmt 0x563ee326aac0 <line:382:9, col:55>
|       `-CallExpr 0x563ee326aa88 <col:16, col:55> '<dependent type>'
|         |-UnresolvedMemberExpr 0x563ee326a8f8 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x563ee326a978 <col:21> 'const char *' lvalue ParmVar 0x563ee3235c90 'keyword' 'const char *'
|         |-BinaryOperator 0x563ee326aa48 <col:30, col:42> 'int' '|'
|         | |-ImplicitCastExpr 0x563ee326a9f8 <col:30> 'int' <LValueToRValue>
|         | | `-DeclRefExpr 0x563ee326a9d8 <col:30> 'const int' lvalue Var 0x563ee3234e48 'mandatory' 'const int' non_odr_use_constant
|         | `-ImplicitCastExpr 0x563ee326aa30 <col:42> 'int' <LValueToRValue>
|         |   `-DeclRefExpr 0x563ee326aa10 <col:42> 'const int' lvalue Var 0x563ee3234f40 'positional' 'const int' non_odr_use_constant
|         `-DeclRefExpr 0x563ee326aa68 <col:54> 'T' lvalue ParmVar 0x563ee3235d38 'x' 'T &'
|-FunctionTemplateDecl 0x563ee32362a8 <line:384:5, line:388:5> line:385:11 read
| |-TemplateTypeParmDecl 0x563ee3235f10 <line:384:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x563ee3236208 <line:385:5, line:388:5> line:385:11 read 'Args &(const char *, int, T &)'
|   |-ParmVarDecl 0x563ee3235fc0 <col:16, col:28> col:28 referenced keyword 'const char *'
|   |-ParmVarDecl 0x563ee3236040 <col:37, col:41> col:41 referenced flags 'int'
|   |-ParmVarDecl 0x563ee32360e8 <col:48, col:51> col:51 referenced x 'T &'
|   `-CompoundStmt 0x563ee326ac10 <col:54, line:388:5>
|     |-CallExpr 0x563ee326ab98 <line:386:9, col:47> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x563ee326aae8 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read' empty
|     | |-CXXThisExpr 0x563ee326ab28 <col:24> 'Args *' this
|     | |-DeclRefExpr 0x563ee326ab38 <col:30> 'const char *' lvalue ParmVar 0x563ee3235fc0 'keyword' 'const char *'
|     | |-DeclRefExpr 0x563ee326ab58 <col:39> 'int' lvalue ParmVar 0x563ee3236040 'flags' 'int'
|     | `-DeclRefExpr 0x563ee326ab78 <col:46> 'T' lvalue ParmVar 0x563ee32360e8 'x' 'T &'
|     `-ReturnStmt 0x563ee326ac00 <line:387:9, col:17>
|       `-UnaryOperator 0x563ee326abe8 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x563ee326abd8 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x563ee3236758 <line:400:5, line:403:5> line:401:11 read_or_set
| |-TemplateTypeParmDecl 0x563ee3236318 <line:400:15, col:24> col:24 referenced typename depth 0 index 0 T
| |-TemplateTypeParmDecl 0x563ee3236398 <col:27, col:36> col:36 referenced typename depth 0 index 1 V
| `-CXXMethodDecl 0x563ee32366b8 <line:401:5, line:403:5> line:401:11 read_or_set 'Args &(const char *, T &, const V &)'
|   |-ParmVarDecl 0x563ee3236458 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x563ee32364f8 <col:44, col:47> col:47 referenced x 'T &'
|   |-ParmVarDecl 0x563ee3236598 <col:50, col:59> col:59 referenced default_value 'const V &'
|   `-CompoundStmt 0x563ee326ad80 <col:74, line:403:5>
|     `-ReturnStmt 0x563ee326ad70 <line:402:9, col:56>
|       `-CallExpr 0x563ee326ad30 <col:16, col:56> '<dependent type>'
|         |-UnresolvedMemberExpr 0x563ee326ac40 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x563ee326acb0 <col:28> 'const char *' lvalue ParmVar 0x563ee3236458 'keyword' 'const char *'
|         |-IntegerLiteral 0x563ee326acd0 <col:37> 'int' 0
|         |-DeclRefExpr 0x563ee326acf0 <col:40> 'T' lvalue ParmVar 0x563ee32364f8 'x' 'T &'
|         `-DeclRefExpr 0x563ee326ad10 <col:43> 'const V' lvalue ParmVar 0x563ee3236598 'default_value' 'const V &'
|-FunctionTemplateDecl 0x563ee3236bc8 <line:404:5, line:407:5> line:405:11 read_or_set_p
| |-TemplateTypeParmDecl 0x563ee32367c8 <line:404:15, col:24> col:24 referenced typename depth 0 index 0 T
| |-TemplateTypeParmDecl 0x563ee3236848 <col:27, col:36> col:36 referenced typename depth 0 index 1 V
| `-CXXMethodDecl 0x563ee3236b28 <line:405:5, line:407:5> line:405:11 read_or_set_p 'Args &(const char *, T &, const V &)'
|   |-ParmVarDecl 0x563ee3236908 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x563ee32369a8 <col:46, col:49> col:49 referenced x 'T &'
|   |-ParmVarDecl 0x563ee3236a48 <col:52, col:61> col:61 referenced default_value 'const V &'
|   `-CompoundStmt 0x563ee326aee8 <col:76, line:407:5>
|     `-ReturnStmt 0x563ee326aed8 <line:406:9, col:65>
|       `-CallExpr 0x563ee326ae98 <col:16, col:65> '<dependent type>'
|         |-UnresolvedMemberExpr 0x563ee326ada8 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x563ee326ae18 <col:28> 'const char *' lvalue ParmVar 0x563ee3236908 'keyword' 'const char *'
|         |-DeclRefExpr 0x563ee326ae38 <col:37> 'const int' lvalue Var 0x563ee3234f40 'positional' 'const int'
|         |-DeclRefExpr 0x563ee326ae58 <col:49> 'T' lvalue ParmVar 0x563ee32369a8 'x' 'T &'
|         `-DeclRefExpr 0x563ee326ae78 <col:52> 'const V' lvalue ParmVar 0x563ee3236a48 'default_value' 'const V &'
|-FunctionTemplateDecl 0x563ee3237118 <line:408:5, line:412:5> line:409:11 read_or_set
| |-TemplateTypeParmDecl 0x563ee3236c38 <line:408:15, col:24> col:24 referenced typename depth 0 index 0 T
| |-TemplateTypeParmDecl 0x563ee3236cb8 <col:27, col:36> col:36 referenced typename depth 0 index 1 V
| `-CXXMethodDecl 0x563ee3237078 <line:409:5, line:412:5> line:409:11 read_or_set 'Args &(const char *, int, T &, const V &)'
|   |-ParmVarDecl 0x563ee3236d78 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x563ee3236df8 <col:44, col:48> col:48 referenced flags 'int'
|   |-ParmVarDecl 0x563ee3236e98 <col:55, col:58> col:58 referenced x 'T &'
|   |-ParmVarDecl 0x563ee3236f38 <col:61, col:70> col:70 referenced default_value 'const V &'
|   `-CompoundStmt 0x563ee326b050 <col:85, line:412:5>
|     |-CallExpr 0x563ee326afd0 <line:410:9, col:69> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x563ee326af00 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read_or_set' empty
|     | |-CXXThisExpr 0x563ee326af40 <col:31> 'Args *' this
|     | |-DeclRefExpr 0x563ee326af50 <col:37> 'const char *' lvalue ParmVar 0x563ee3236d78 'keyword' 'const char *'
|     | |-DeclRefExpr 0x563ee326af70 <col:46> 'int' lvalue ParmVar 0x563ee3236df8 'flags' 'int'
|     | |-DeclRefExpr 0x563ee326af90 <col:53> 'T' lvalue ParmVar 0x563ee3236e98 'x' 'T &'
|     | `-DeclRefExpr 0x563ee326afb0 <col:56> 'const V' lvalue ParmVar 0x563ee3236f38 'default_value' 'const V &'
|     `-ReturnStmt 0x563ee326b040 <line:411:9, col:17>
|       `-UnaryOperator 0x563ee326b028 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x563ee326b018 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x563ee32375a8 <line:422:5, line:425:5> line:423:11 read
| |-TemplateTypeParmDecl 0x563ee3237190 <line:422:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x563ee3237208 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| |-CXXMethodDecl 0x563ee3237508 <line:423:5, line:425:5> line:423:11 read 'Args &(const char *, P, T &)'
| | |-ParmVarDecl 0x563ee32372c8 <col:16, col:28> col:28 referenced keyword 'const char *'
| | |-ParmVarDecl 0x563ee3237340 <col:37, col:39> col:39 referenced parser 'P'
| | |-ParmVarDecl 0x563ee32373e8 <col:47, col:50> col:50 referenced x 'T &'
| | `-CompoundStmt 0x563ee326b1d0 <col:53, line:425:5>
| |   `-ReturnStmt 0x563ee326b1c0 <line:424:9, col:42>
| |     `-CallExpr 0x563ee326b180 <col:16, col:42> '<dependent type>'
| |       |-UnresolvedMemberExpr 0x563ee326b080 <col:16> '<bound member function type>' lvalue
| |       |-DeclRefExpr 0x563ee326b100 <col:21> 'const char *' lvalue ParmVar 0x563ee32372c8 'keyword' 'const char *'
| |       |-IntegerLiteral 0x563ee326b120 <col:30> 'int' 0
| |       |-DeclRefExpr 0x563ee326b140 <col:33> 'P' lvalue ParmVar 0x563ee3237340 'parser' 'P'
| |       `-DeclRefExpr 0x563ee326b160 <col:41> 'T' lvalue ParmVar 0x563ee32373e8 'x' 'T &'
| `-CXXMethodDecl 0x563ee333b6e8 <line:423:5, line:425:5> line:423:11 used read 'Args &(const char *, BandwidthArg, unsigned int &)'
|   |-TemplateArgument type 'BandwidthArg'
|   |-TemplateArgument type 'unsigned int'
|   |-ParmVarDecl 0x563ee333b450 <col:16, col:28> col:28 keyword 'const char *'
|   |-ParmVarDecl 0x563ee333b4f8 <col:37, col:39> col:39 parser 'BandwidthArg':'BandwidthArg'
|   `-ParmVarDecl 0x563ee333b5c8 <col:47, col:50> col:50 x 'unsigned int &'
|-FunctionTemplateDecl 0x563ee32379f8 <line:426:5, line:429:5> line:427:11 read_m
| |-TemplateTypeParmDecl 0x563ee3237618 <line:426:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x563ee3237698 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x563ee3237958 <line:427:5, line:429:5> line:427:11 read_m 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x563ee3237758 <col:18, col:30> col:30 referenced keyword 'const char *'
|   |-ParmVarDecl 0x563ee32377d0 <col:39, col:41> col:41 referenced parser 'P'
|   |-ParmVarDecl 0x563ee3237878 <col:49, col:52> col:52 referenced x 'T &'
|   `-CompoundStmt 0x563ee326b348 <col:55, line:429:5>
|     `-ReturnStmt 0x563ee326b338 <line:428:9, col:50>
|       `-CallExpr 0x563ee326b2f8 <col:16, col:50> '<dependent type>'
|         |-UnresolvedMemberExpr 0x563ee326b1f8 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x563ee326b278 <col:21> 'const char *' lvalue ParmVar 0x563ee3237758 'keyword' 'const char *'
|         |-DeclRefExpr 0x563ee326b298 <col:30> 'const int' lvalue Var 0x563ee3234e48 'mandatory' 'const int'
|         |-DeclRefExpr 0x563ee326b2b8 <col:41> 'P' lvalue ParmVar 0x563ee32377d0 'parser' 'P'
|         `-DeclRefExpr 0x563ee326b2d8 <col:49> 'T' lvalue ParmVar 0x563ee3237878 'x' 'T &'
|-FunctionTemplateDecl 0x563ee3237e48 <line:430:5, line:433:5> line:431:11 read_p
| |-TemplateTypeParmDecl 0x563ee3237a68 <line:430:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x563ee3237ae8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x563ee3237da8 <line:431:5, line:433:5> line:431:11 read_p 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x563ee3237ba8 <col:18, col:30> col:30 referenced keyword 'const char *'
|   |-ParmVarDecl 0x563ee3237c20 <col:39, col:41> col:41 referenced parser 'P'
|   |-ParmVarDecl 0x563ee3237cc8 <col:49, col:52> col:52 referenced x 'T &'
|   `-CompoundStmt 0x563ee326b4c0 <col:55, line:433:5>
|     `-ReturnStmt 0x563ee326b4b0 <line:432:9, col:51>
|       `-CallExpr 0x563ee326b470 <col:16, col:51> '<dependent type>'
|         |-UnresolvedMemberExpr 0x563ee326b370 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x563ee326b3f0 <col:21> 'const char *' lvalue ParmVar 0x563ee3237ba8 'keyword' 'const char *'
|         |-DeclRefExpr 0x563ee326b410 <col:30> 'const int' lvalue Var 0x563ee3234f40 'positional' 'const int'
|         |-DeclRefExpr 0x563ee326b430 <col:42> 'P' lvalue ParmVar 0x563ee3237c20 'parser' 'P'
|         `-DeclRefExpr 0x563ee326b450 <col:50> 'T' lvalue ParmVar 0x563ee3237cc8 'x' 'T &'
|-FunctionTemplateDecl 0x563ee3238298 <line:434:5, line:437:5> line:435:11 read_mp
| |-TemplateTypeParmDecl 0x563ee3237eb8 <line:434:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x563ee3237f38 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x563ee32381f8 <line:435:5, line:437:5> line:435:11 read_mp 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x563ee3237ff8 <col:19, col:31> col:31 referenced keyword 'const char *'
|   |-ParmVarDecl 0x563ee3238070 <col:40, col:42> col:42 referenced parser 'P'
|   |-ParmVarDecl 0x563ee3238118 <col:50, col:53> col:53 referenced x 'T &'
|   `-CompoundStmt 0x563ee326b6e8 <col:56, line:437:5>
|     `-ReturnStmt 0x563ee326b6d8 <line:436:9, col:63>
|       `-CallExpr 0x563ee326b698 <col:16, col:63> '<dependent type>'
|         |-UnresolvedMemberExpr 0x563ee326b4e8 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x563ee326b568 <col:21> 'const char *' lvalue ParmVar 0x563ee3237ff8 'keyword' 'const char *'
|         |-BinaryOperator 0x563ee326b638 <col:30, col:42> 'int' '|'
|         | |-ImplicitCastExpr 0x563ee326b5e8 <col:30> 'int' <LValueToRValue>
|         | | `-DeclRefExpr 0x563ee326b5c8 <col:30> 'const int' lvalue Var 0x563ee3234e48 'mandatory' 'const int' non_odr_use_constant
|         | `-ImplicitCastExpr 0x563ee326b620 <col:42> 'int' <LValueToRValue>
|         |   `-DeclRefExpr 0x563ee326b600 <col:42> 'const int' lvalue Var 0x563ee3234f40 'positional' 'const int' non_odr_use_constant
|         |-DeclRefExpr 0x563ee326b658 <col:54> 'P' lvalue ParmVar 0x563ee3238070 'parser' 'P'
|         `-DeclRefExpr 0x563ee326b678 <col:62> 'T' lvalue ParmVar 0x563ee3238118 'x' 'T &'
|-FunctionTemplateDecl 0x563ee32387c8 <line:438:5, line:442:5> line:439:11 read
| |-TemplateTypeParmDecl 0x563ee3238308 <line:438:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x563ee3238388 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x563ee3238728 <line:439:5, line:442:5> line:439:11 read 'Args &(const char *, int, P, T &)'
|   |-ParmVarDecl 0x563ee3238448 <col:16, col:28> col:28 referenced keyword 'const char *'
|   |-ParmVarDecl 0x563ee32384c8 <col:37, col:41> col:41 referenced flags 'int'
|   |-ParmVarDecl 0x563ee3238540 <col:48, col:50> col:50 referenced parser 'P'
|   |-ParmVarDecl 0x563ee32385e8 <col:58, col:61> col:61 referenced x 'T &'
|   `-CompoundStmt 0x563ee326b850 <col:64, line:442:5>
|     |-CallExpr 0x563ee326b7d0 <line:440:9, col:55> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x563ee326b700 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read' empty
|     | |-CXXThisExpr 0x563ee326b740 <col:24> 'Args *' this
|     | |-DeclRefExpr 0x563ee326b750 <col:30> 'const char *' lvalue ParmVar 0x563ee3238448 'keyword' 'const char *'
|     | |-DeclRefExpr 0x563ee326b770 <col:39> 'int' lvalue ParmVar 0x563ee32384c8 'flags' 'int'
|     | |-DeclRefExpr 0x563ee326b790 <col:46> 'P' lvalue ParmVar 0x563ee3238540 'parser' 'P'
|     | `-DeclRefExpr 0x563ee326b7b0 <col:54> 'T' lvalue ParmVar 0x563ee32385e8 'x' 'T &'
|     `-ReturnStmt 0x563ee326b840 <line:441:9, col:17>
|       `-UnaryOperator 0x563ee326b828 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x563ee326b818 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x563ee3238dc8 <line:455:5, line:458:5> line:456:11 read_or_set
| |-TemplateTypeParmDecl 0x563ee3238840 <line:455:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x563ee32388b8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| |-TemplateTypeParmDecl 0x563ee3238938 <col:39, col:48> col:48 referenced typename depth 0 index 2 V
| `-CXXMethodDecl 0x563ee3238d28 <line:456:5, line:458:5> line:456:11 read_or_set 'Args &(const char *, P, T &, const V &)'
|   |-ParmVarDecl 0x563ee3238a00 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x563ee3238a78 <col:44, col:46> col:46 referenced parser 'P'
|   |-ParmVarDecl 0x563ee3238b18 <col:54, col:57> col:57 referenced x 'T &'
|   |-ParmVarDecl 0x563ee3238be8 <col:60, col:69> col:69 referenced default_value 'const V &'
|   `-CompoundStmt 0x563ee326b9e8 <col:84, line:458:5>
|     `-ReturnStmt 0x563ee326b9d8 <line:457:9, col:64>
|       `-CallExpr 0x563ee326b990 <col:16, col:64> '<dependent type>'
|         |-UnresolvedMemberExpr 0x563ee326b880 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x563ee326b8f0 <col:28> 'const char *' lvalue ParmVar 0x563ee3238a00 'keyword' 'const char *'
|         |-IntegerLiteral 0x563ee326b910 <col:37> 'int' 0
|         |-DeclRefExpr 0x563ee326b930 <col:40> 'P' lvalue ParmVar 0x563ee3238a78 'parser' 'P'
|         |-DeclRefExpr 0x563ee326b950 <col:48> 'T' lvalue ParmVar 0x563ee3238b18 'x' 'T &'
|         `-DeclRefExpr 0x563ee326b970 <col:51> 'const V' lvalue ParmVar 0x563ee3238be8 'default_value' 'const V &'
|-FunctionTemplateDecl 0x563ee323ea38 <line:459:5, line:462:5> line:460:11 read_or_set_p
| |-TemplateTypeParmDecl 0x563ee323e530 <line:459:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x563ee323e5a8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| |-TemplateTypeParmDecl 0x563ee323e628 <col:39, col:48> col:48 referenced typename depth 0 index 2 V
| `-CXXMethodDecl 0x563ee323e998 <line:460:5, line:462:5> line:460:11 read_or_set_p 'Args &(const char *, P, T &, const V &)'
|   |-ParmVarDecl 0x563ee323e6f0 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x563ee323e768 <col:46, col:48> col:48 referenced parser 'P'
|   |-ParmVarDecl 0x563ee323e808 <col:56, col:59> col:59 referenced x 'T &'
|   |-ParmVarDecl 0x563ee323e8a8 <col:62, col:71> col:71 referenced default_value 'const V &'
|   `-CompoundStmt 0x563ee326bb78 <col:86, line:462:5>
|     `-ReturnStmt 0x563ee326bb68 <line:461:9, col:73>
|       `-CallExpr 0x563ee326bb20 <col:16, col:73> '<dependent type>'
|         |-UnresolvedMemberExpr 0x563ee326ba10 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x563ee326ba80 <col:28> 'const char *' lvalue ParmVar 0x563ee323e6f0 'keyword' 'const char *'
|         |-DeclRefExpr 0x563ee326baa0 <col:37> 'const int' lvalue Var 0x563ee3234f40 'positional' 'const int'
|         |-DeclRefExpr 0x563ee326bac0 <col:49> 'P' lvalue ParmVar 0x563ee323e768 'parser' 'P'
|         |-DeclRefExpr 0x563ee326bae0 <col:57> 'T' lvalue ParmVar 0x563ee323e808 'x' 'T &'
|         `-DeclRefExpr 0x563ee326bb00 <col:60> 'const V' lvalue ParmVar 0x563ee323e8a8 'default_value' 'const V &'
|-FunctionTemplateDecl 0x563ee323f098 <line:463:5, line:467:5> line:464:11 read_or_set
| |-TemplateTypeParmDecl 0x563ee323eab0 <line:463:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x563ee323eb28 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| |-TemplateTypeParmDecl 0x563ee323eba8 <col:39, col:48> col:48 referenced typename depth 0 index 2 V
| `-CXXMethodDecl 0x563ee323eff8 <line:464:5, line:467:5> line:464:11 read_or_set 'Args &(const char *, int, P, T &, const V &)'
|   |-ParmVarDecl 0x563ee323ec70 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x563ee323ecf0 <col:44, col:48> col:48 referenced flags 'int'
|   |-ParmVarDecl 0x563ee323ed68 <col:55, col:57> col:57 referenced parser 'P'
|   |-ParmVarDecl 0x563ee323ee08 <col:65, col:68> col:68 referenced x 'T &'
|   |-ParmVarDecl 0x563ee323eea8 <col:71, col:80> col:80 referenced default_value 'const V &'
|   `-CompoundStmt 0x563ee326bd08 <col:95, line:467:5>
|     |-CallExpr 0x563ee326bc80 <line:465:9, col:77> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x563ee326bb90 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read_or_set' empty
|     | |-CXXThisExpr 0x563ee326bbd0 <col:31> 'Args *' this
|     | |-DeclRefExpr 0x563ee326bbe0 <col:37> 'const char *' lvalue ParmVar 0x563ee323ec70 'keyword' 'const char *'
|     | |-DeclRefExpr 0x563ee326bc00 <col:46> 'int' lvalue ParmVar 0x563ee323ecf0 'flags' 'int'
|     | |-DeclRefExpr 0x563ee326bc20 <col:53> 'P' lvalue ParmVar 0x563ee323ed68 'parser' 'P'
|     | |-DeclRefExpr 0x563ee326bc40 <col:61> 'T' lvalue ParmVar 0x563ee323ee08 'x' 'T &'
|     | `-DeclRefExpr 0x563ee326bc60 <col:64> 'const V' lvalue ParmVar 0x563ee323eea8 'default_value' 'const V &'
|     `-ReturnStmt 0x563ee326bcf8 <line:466:9, col:17>
|       `-UnaryOperator 0x563ee326bce0 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x563ee326bcd0 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x563ee323f678 <line:478:5, line:481:5> line:479:11 read
| |-TemplateTypeParmDecl 0x563ee323f118 <line:478:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x563ee323f198 <col:26, col:35> col:35 referenced typename depth 0 index 1 T1
| |-TemplateTypeParmDecl 0x563ee323f218 <col:39, col:48> col:48 referenced typename depth 0 index 2 T2
| `-CXXMethodDecl 0x563ee323f5d8 <line:479:5, line:481:5> line:479:11 read 'Args &(const char *, P, T1 &, T2 &)'
|   |-ParmVarDecl 0x563ee323f2e0 <col:16, col:28> col:28 referenced keyword 'const char *'
|   |-ParmVarDecl 0x563ee323f358 <col:37, col:39> col:39 referenced parser 'P'
|   |-ParmVarDecl 0x563ee323f3f8 <col:47, col:51> col:51 referenced x1 'T1 &'
|   |-ParmVarDecl 0x563ee323f498 <col:55, col:59> col:59 referenced x2 'T2 &'
|   `-CompoundStmt 0x563ee326beb0 <col:63, line:481:5>
|     `-ReturnStmt 0x563ee326bea0 <line:480:9, col:47>
|       `-CallExpr 0x563ee326be58 <col:16, col:47> '<dependent type>'
|         |-UnresolvedMemberExpr 0x563ee326bd38 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x563ee326bdb8 <col:21> 'const char *' lvalue ParmVar 0x563ee323f2e0 'keyword' 'const char *'
|         |-IntegerLiteral 0x563ee326bdd8 <col:30> 'int' 0
|         |-DeclRefExpr 0x563ee326bdf8 <col:33> 'P' lvalue ParmVar 0x563ee323f358 'parser' 'P'
|         |-DeclRefExpr 0x563ee326be18 <col:41> 'T1' lvalue ParmVar 0x563ee323f3f8 'x1' 'T1 &'
|         `-DeclRefExpr 0x563ee326be38 <col:45> 'T2' lvalue ParmVar 0x563ee323f498 'x2' 'T2 &'
|-FunctionTemplateDecl 0x563ee323fbf8 <line:482:5, line:485:5> line:483:11 read_m
| |-TemplateTypeParmDecl 0x563ee323f6f0 <line:482:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x563ee323f768 <col:26, col:35> col:35 referenced typename depth 0 index 1 T1
| |-TemplateTypeParmDecl 0x563ee323f7e8 <col:39, col:48> col:48 referenced typename depth 0 index 2 T2
| `-CXXMethodDecl 0x563ee323fb58 <line:483:5, line:485:5> line:483:11 read_m 'Args &(const char *, P, T1 &, T2 &)'
|   |-ParmVarDecl 0x563ee323f8b0 <col:18, col:30> col:30 referenced keyword 'const char *'
|   |-ParmVarDecl 0x563ee323f928 <col:39, col:41> col:41 referenced parser 'P'
|   |-ParmVarDecl 0x563ee323f9c8 <col:49, col:53> col:53 referenced x1 'T1 &'
|   |-ParmVarDecl 0x563ee323fa68 <col:57, col:61> col:61 referenced x2 'T2 &'
|   `-CompoundStmt 0x563ee326c050 <col:65, line:485:5>
|     `-ReturnStmt 0x563ee326c040 <line:484:9, col:55>
|       `-CallExpr 0x563ee326bff8 <col:16, col:55> '<dependent type>'
|         |-UnresolvedMemberExpr 0x563ee326bed8 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x563ee326bf58 <col:21> 'const char *' lvalue ParmVar 0x563ee323f8b0 'keyword' 'const char *'
|         |-DeclRefExpr 0x563ee326bf78 <col:30> 'const int' lvalue Var 0x563ee3234e48 'mandatory' 'const int'
|         |-DeclRefExpr 0x563ee326bf98 <col:41> 'P' lvalue ParmVar 0x563ee323f928 'parser' 'P'
|         |-DeclRefExpr 0x563ee326bfb8 <col:49> 'T1' lvalue ParmVar 0x563ee323f9c8 'x1' 'T1 &'
|         `-DeclRefExpr 0x563ee326bfd8 <col:53> 'T2' lvalue ParmVar 0x563ee323fa68 'x2' 'T2 &'
|-FunctionTemplateDecl 0x563ee3240178 <line:486:5, line:489:5> line:487:11 read_p
| |-TemplateTypeParmDecl 0x563ee323fc70 <line:486:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x563ee323fce8 <col:26, col:35> col:35 referenced typename depth 0 index 1 T1
| |-TemplateTypeParmDecl 0x563ee323fd68 <col:39, col:48> col:48 referenced typename depth 0 index 2 T2
| `-CXXMethodDecl 0x563ee32400d8 <line:487:5, line:489:5> line:487:11 read_p 'Args &(const char *, P, T1 &, T2 &)'
|   |-ParmVarDecl 0x563ee323fe30 <col:18, col:30> col:30 referenced keyword 'const char *'
|   |-ParmVarDecl 0x563ee323fea8 <col:39, col:41> col:41 referenced parser 'P'
|   |-ParmVarDecl 0x563ee323ff48 <col:49, col:53> col:53 referenced x1 'T1 &'
|   |-ParmVarDecl 0x563ee323ffe8 <col:57, col:61> col:61 referenced x2 'T2 &'
|   `-CompoundStmt 0x563ee326c1f0 <col:65, line:489:5>
|     `-ReturnStmt 0x563ee326c1e0 <line:488:9, col:56>
|       `-CallExpr 0x563ee326c198 <col:16, col:56> '<dependent type>'
|         |-UnresolvedMemberExpr 0x563ee326c078 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x563ee326c0f8 <col:21> 'const char *' lvalue ParmVar 0x563ee323fe30 'keyword' 'const char *'
|         |-DeclRefExpr 0x563ee326c118 <col:30> 'const int' lvalue Var 0x563ee3234f40 'positional' 'const int'
|         |-DeclRefExpr 0x563ee326c138 <col:42> 'P' lvalue ParmVar 0x563ee323fea8 'parser' 'P'
|         |-DeclRefExpr 0x563ee326c158 <col:50> 'T1' lvalue ParmVar 0x563ee323ff48 'x1' 'T1 &'
|         `-DeclRefExpr 0x563ee326c178 <col:54> 'T2' lvalue ParmVar 0x563ee323ffe8 'x2' 'T2 &'
|-FunctionTemplateDecl 0x563ee32406f8 <line:490:5, line:493:5> line:491:11 read_mp
| |-TemplateTypeParmDecl 0x563ee32401f0 <line:490:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x563ee3240268 <col:26, col:35> col:35 referenced typename depth 0 index 1 T1
| |-TemplateTypeParmDecl 0x563ee32402e8 <col:39, col:48> col:48 referenced typename depth 0 index 2 T2
| `-CXXMethodDecl 0x563ee3240658 <line:491:5, line:493:5> line:491:11 read_mp 'Args &(const char *, P, T1 &, T2 &)'
|   |-ParmVarDecl 0x563ee32403b0 <col:19, col:31> col:31 referenced keyword 'const char *'
|   |-ParmVarDecl 0x563ee3240428 <col:40, col:42> col:42 referenced parser 'P'
|   |-ParmVarDecl 0x563ee32404c8 <col:50, col:54> col:54 referenced x1 'T1 &'
|   |-ParmVarDecl 0x563ee3240568 <col:58, col:62> col:62 referenced x2 'T2 &'
|   `-CompoundStmt 0x563ee326c440 <col:66, line:493:5>
|     `-ReturnStmt 0x563ee326c430 <line:492:9, col:68>
|       `-CallExpr 0x563ee326c3e8 <col:16, col:68> '<dependent type>'
|         |-UnresolvedMemberExpr 0x563ee326c218 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x563ee326c298 <col:21> 'const char *' lvalue ParmVar 0x563ee32403b0 'keyword' 'const char *'
|         |-BinaryOperator 0x563ee326c368 <col:30, col:42> 'int' '|'
|         | |-ImplicitCastExpr 0x563ee326c318 <col:30> 'int' <LValueToRValue>
|         | | `-DeclRefExpr 0x563ee326c2f8 <col:30> 'const int' lvalue Var 0x563ee3234e48 'mandatory' 'const int' non_odr_use_constant
|         | `-ImplicitCastExpr 0x563ee326c350 <col:42> 'int' <LValueToRValue>
|         |   `-DeclRefExpr 0x563ee326c330 <col:42> 'const int' lvalue Var 0x563ee3234f40 'positional' 'const int' non_odr_use_constant
|         |-DeclRefExpr 0x563ee326c388 <col:54> 'P' lvalue ParmVar 0x563ee3240428 'parser' 'P'
|         |-DeclRefExpr 0x563ee326c3a8 <col:62> 'T1' lvalue ParmVar 0x563ee32404c8 'x1' 'T1 &'
|         `-DeclRefExpr 0x563ee326c3c8 <col:66> 'T2' lvalue ParmVar 0x563ee3240568 'x2' 'T2 &'
|-FunctionTemplateDecl 0x563ee3240d58 <line:494:5, line:498:5> line:495:11 read
| |-TemplateTypeParmDecl 0x563ee3240770 <line:494:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x563ee32407e8 <col:26, col:35> col:35 referenced typename depth 0 index 1 T1
| |-TemplateTypeParmDecl 0x563ee3240868 <col:39, col:48> col:48 referenced typename depth 0 index 2 T2
| `-CXXMethodDecl 0x563ee3240cb8 <line:495:5, line:498:5> line:495:11 read 'Args &(const char *, int, P, T1 &, T2 &)'
|   |-ParmVarDecl 0x563ee3240930 <col:16, col:28> col:28 referenced keyword 'const char *'
|   |-ParmVarDecl 0x563ee32409b0 <col:37, col:41> col:41 referenced flags 'int'
|   |-ParmVarDecl 0x563ee3240a28 <col:48, col:50> col:50 referenced parser 'P'
|   |-ParmVarDecl 0x563ee3240ac8 <col:58, col:62> col:62 referenced x1 'T1 &'
|   |-ParmVarDecl 0x563ee3240b68 <col:66, col:70> col:70 referenced x2 'T2 &'
|   `-CompoundStmt 0x563ee326c5d0 <col:74, line:498:5>
|     |-CallExpr 0x563ee326c548 <line:496:9, col:60> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x563ee326c458 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read' empty
|     | |-CXXThisExpr 0x563ee326c498 <col:24> 'Args *' this
|     | |-DeclRefExpr 0x563ee326c4a8 <col:30> 'const char *' lvalue ParmVar 0x563ee3240930 'keyword' 'const char *'
|     | |-DeclRefExpr 0x563ee326c4c8 <col:39> 'int' lvalue ParmVar 0x563ee32409b0 'flags' 'int'
|     | |-DeclRefExpr 0x563ee326c4e8 <col:46> 'P' lvalue ParmVar 0x563ee3240a28 'parser' 'P'
|     | |-DeclRefExpr 0x563ee326c508 <col:54> 'T1' lvalue ParmVar 0x563ee3240ac8 'x1' 'T1 &'
|     | `-DeclRefExpr 0x563ee326c528 <col:58> 'T2' lvalue ParmVar 0x563ee3240b68 'x2' 'T2 &'
|     `-ReturnStmt 0x563ee326c5c0 <line:497:9, col:17>
|       `-UnaryOperator 0x563ee326c5a8 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x563ee326c598 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x563ee32410b8 <line:506:5, line:509:5> line:507:11 read_with
| |-TemplateTypeParmDecl 0x563ee3240dd8 <line:506:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x563ee3241018 <line:507:5, line:509:5> line:507:11 read_with 'Args &(const char *, P)'
|   |-ParmVarDecl 0x563ee3240e90 <col:21, col:33> col:33 referenced keyword 'const char *'
|   |-ParmVarDecl 0x563ee3240f08 <col:42, col:44> col:44 referenced parser 'P'
|   `-CompoundStmt 0x563ee326c718 <col:52, line:509:5>
|     `-ReturnStmt 0x563ee326c708 <line:508:9, col:44>
|       `-CallExpr 0x563ee326c6d0 <col:16, col:44> '<dependent type>'
|         |-UnresolvedMemberExpr 0x563ee326c600 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x563ee326c670 <col:26> 'const char *' lvalue ParmVar 0x563ee3240e90 'keyword' 'const char *'
|         |-IntegerLiteral 0x563ee326c690 <col:35> 'int' 0
|         `-DeclRefExpr 0x563ee326c6b0 <col:38> 'P' lvalue ParmVar 0x563ee3240f08 'parser' 'P'
|-FunctionTemplateDecl 0x563ee32413b8 <line:510:5, line:513:5> line:511:11 read_m_with
| |-TemplateTypeParmDecl 0x563ee3241120 <line:510:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x563ee3241318 <line:511:5, line:513:5> line:511:11 read_m_with 'Args &(const char *, P)'
|   |-ParmVarDecl 0x563ee32411d0 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x563ee3241248 <col:44, col:46> col:46 referenced parser 'P'
|   `-CompoundStmt 0x563ee326c858 <col:54, line:513:5>
|     `-ReturnStmt 0x563ee326c848 <line:512:9, col:52>
|       `-CallExpr 0x563ee326c810 <col:16, col:52> '<dependent type>'
|         |-UnresolvedMemberExpr 0x563ee326c740 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x563ee326c7b0 <col:26> 'const char *' lvalue ParmVar 0x563ee32411d0 'keyword' 'const char *'
|         |-DeclRefExpr 0x563ee326c7d0 <col:35> 'const int' lvalue Var 0x563ee3234e48 'mandatory' 'const int'
|         `-DeclRefExpr 0x563ee326c7f0 <col:46> 'P' lvalue ParmVar 0x563ee3241248 'parser' 'P'
|-FunctionTemplateDecl 0x563ee32416b8 <line:514:5, line:517:5> line:515:11 read_p_with
| |-TemplateTypeParmDecl 0x563ee3241420 <line:514:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x563ee3241618 <line:515:5, line:517:5> line:515:11 read_p_with 'Args &(const char *, P)'
|   |-ParmVarDecl 0x563ee32414d0 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x563ee3241548 <col:44, col:46> col:46 referenced parser 'P'
|   `-CompoundStmt 0x563ee326c998 <col:54, line:517:5>
|     `-ReturnStmt 0x563ee326c988 <line:516:9, col:53>
|       `-CallExpr 0x563ee326c950 <col:16, col:53> '<dependent type>'
|         |-UnresolvedMemberExpr 0x563ee326c880 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x563ee326c8f0 <col:26> 'const char *' lvalue ParmVar 0x563ee32414d0 'keyword' 'const char *'
|         |-DeclRefExpr 0x563ee326c910 <col:35> 'const int' lvalue Var 0x563ee3234f40 'positional' 'const int'
|         `-DeclRefExpr 0x563ee326c930 <col:47> 'P' lvalue ParmVar 0x563ee3241548 'parser' 'P'
|-FunctionTemplateDecl 0x563ee32419b8 <line:518:5, line:521:5> line:519:11 read_mp_with
| |-TemplateTypeParmDecl 0x563ee3241720 <line:518:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x563ee3241918 <line:519:5, line:521:5> line:519:11 read_mp_with 'Args &(const char *, P)'
|   |-ParmVarDecl 0x563ee32417d0 <col:24, col:36> col:36 referenced keyword 'const char *'
|   |-ParmVarDecl 0x563ee3241848 <col:45, col:47> col:47 referenced parser 'P'
|   `-CompoundStmt 0x563ee326cb88 <col:55, line:521:5>
|     `-ReturnStmt 0x563ee326cb78 <line:520:9, col:65>
|       `-CallExpr 0x563ee326cb40 <col:16, col:65> '<dependent type>'
|         |-UnresolvedMemberExpr 0x563ee326c9c0 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x563ee326ca30 <col:26> 'const char *' lvalue ParmVar 0x563ee32417d0 'keyword' 'const char *'
|         |-BinaryOperator 0x563ee326cb00 <col:35, col:47> 'int' '|'
|         | |-ImplicitCastExpr 0x563ee326cab0 <col:35> 'int' <LValueToRValue>
|         | | `-DeclRefExpr 0x563ee326ca90 <col:35> 'const int' lvalue Var 0x563ee3234e48 'mandatory' 'const int' non_odr_use_constant
|         | `-ImplicitCastExpr 0x563ee326cae8 <col:47> 'int' <LValueToRValue>
|         |   `-DeclRefExpr 0x563ee326cac8 <col:47> 'const int' lvalue Var 0x563ee3234f40 'positional' 'const int' non_odr_use_constant
|         `-DeclRefExpr 0x563ee326cb20 <col:59> 'P' lvalue ParmVar 0x563ee3241848 'parser' 'P'
|-FunctionTemplateDecl 0x563ee3241d88 <line:522:5, line:526:5> line:523:11 read_with
| |-TemplateTypeParmDecl 0x563ee3241a20 <line:522:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x563ee3241ce8 <line:523:5, line:526:5> line:523:11 read_with 'Args &(const char *, int, P)'
|   |-ParmVarDecl 0x563ee3241ad0 <col:21, col:33> col:33 referenced keyword 'const char *'
|   |-ParmVarDecl 0x563ee3241b50 <col:42, col:46> col:46 referenced flags 'int'
|   |-ParmVarDecl 0x563ee3241bc8 <col:53, col:55> col:55 referenced parser 'P'
|   `-CompoundStmt 0x563ee326ccc8 <col:63, line:526:5>
|     |-CallExpr 0x563ee326cc50 <line:524:9, col:57> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x563ee326cba0 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read_with' empty
|     | |-CXXThisExpr 0x563ee326cbe0 <col:29> 'Args *' this
|     | |-DeclRefExpr 0x563ee326cbf0 <col:35> 'const char *' lvalue ParmVar 0x563ee3241ad0 'keyword' 'const char *'
|     | |-DeclRefExpr 0x563ee326cc10 <col:44> 'int' lvalue ParmVar 0x563ee3241b50 'flags' 'int'
|     | `-DeclRefExpr 0x563ee326cc30 <col:51> 'P' lvalue ParmVar 0x563ee3241bc8 'parser' 'P'
|     `-ReturnStmt 0x563ee326ccb8 <line:525:9, col:17>
|       `-UnaryOperator 0x563ee326cca0 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x563ee326cc90 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x563ee32421d8 <line:538:5, line:541:5> line:539:11 read_with
| |-TemplateTypeParmDecl 0x563ee3241df8 <line:538:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x563ee3241e78 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x563ee3242138 <line:539:5, line:541:5> line:539:11 read_with 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x563ee3241f38 <col:21, col:33> col:33 referenced keyword 'const char *'
|   |-ParmVarDecl 0x563ee3241fb0 <col:42, col:44> col:44 referenced parser 'P'
|   |-ParmVarDecl 0x563ee3242058 <col:52, col:55> col:55 referenced x 'T &'
|   `-CompoundStmt 0x563ee326ce20 <col:58, line:541:5>
|     `-ReturnStmt 0x563ee326ce10 <line:540:9, col:39>
|       `-CallExpr 0x563ee326cdd8 <col:16, col:39> '<dependent type>'
|         |-UnresolvedMemberExpr 0x563ee326ccf8 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x563ee326cd78 <col:21> 'const char *' lvalue ParmVar 0x563ee3241f38 'keyword' 'const char *'
|         |-DeclRefExpr 0x563ee326cd98 <col:30> 'P' lvalue ParmVar 0x563ee3241fb0 'parser' 'P'
|         `-DeclRefExpr 0x563ee326cdb8 <col:38> 'T' lvalue ParmVar 0x563ee3242058 'x' 'T &'
|-FunctionTemplateDecl 0x563ee3242628 <line:542:5, line:545:5> line:543:11 read_m_with
| |-TemplateTypeParmDecl 0x563ee3242248 <line:542:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x563ee32422c8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x563ee3242588 <line:543:5, line:545:5> line:543:11 read_m_with 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x563ee3242388 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x563ee3242400 <col:44, col:46> col:46 referenced parser 'P'
|   |-ParmVarDecl 0x563ee32424a8 <col:54, col:57> col:57 referenced x 'T &'
|   `-CompoundStmt 0x563ee326cf58 <col:60, line:545:5>
|     `-ReturnStmt 0x563ee326cf48 <line:544:9, col:41>
|       `-CallExpr 0x563ee326cf10 <col:16, col:41> '<dependent type>'
|         |-UnresolvedMemberExpr 0x563ee326ce48 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x563ee326ceb0 <col:23> 'const char *' lvalue ParmVar 0x563ee3242388 'keyword' 'const char *'
|         |-DeclRefExpr 0x563ee326ced0 <col:32> 'P' lvalue ParmVar 0x563ee3242400 'parser' 'P'
|         `-DeclRefExpr 0x563ee326cef0 <col:40> 'T' lvalue ParmVar 0x563ee32424a8 'x' 'T &'
|-FunctionTemplateDecl 0x563ee3242a78 <line:546:5, line:549:5> line:547:11 read_p_with
| |-TemplateTypeParmDecl 0x563ee3242698 <line:546:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x563ee3242718 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x563ee32429d8 <line:547:5, line:549:5> line:547:11 read_p_with 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x563ee32427d8 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x563ee3242850 <col:44, col:46> col:46 referenced parser 'P'
|   |-ParmVarDecl 0x563ee32428f8 <col:54, col:57> col:57 referenced x 'T &'
|   `-CompoundStmt 0x563ee326d090 <col:60, line:549:5>
|     `-ReturnStmt 0x563ee326d080 <line:548:9, col:41>
|       `-CallExpr 0x563ee326d048 <col:16, col:41> '<dependent type>'
|         |-UnresolvedMemberExpr 0x563ee326cf80 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x563ee326cfe8 <col:23> 'const char *' lvalue ParmVar 0x563ee32427d8 'keyword' 'const char *'
|         |-DeclRefExpr 0x563ee326d008 <col:32> 'P' lvalue ParmVar 0x563ee3242850 'parser' 'P'
|         `-DeclRefExpr 0x563ee326d028 <col:40> 'T' lvalue ParmVar 0x563ee32428f8 'x' 'T &'
|-FunctionTemplateDecl 0x563ee3242ec8 <line:550:5, line:553:5> line:551:11 read_mp_with
| |-TemplateTypeParmDecl 0x563ee3242ae8 <line:550:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x563ee3242b68 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x563ee3242e28 <line:551:5, line:553:5> line:551:11 read_mp_with 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x563ee3242c28 <col:24, col:36> col:36 referenced keyword 'const char *'
|   |-ParmVarDecl 0x563ee3242ca0 <col:45, col:47> col:47 referenced parser 'P'
|   |-ParmVarDecl 0x563ee3242d48 <col:55, col:58> col:58 referenced x 'T &'
|   `-CompoundStmt 0x563ee326d1c8 <col:61, line:553:5>
|     `-ReturnStmt 0x563ee326d1b8 <line:552:9, col:42>
|       `-CallExpr 0x563ee326d180 <col:16, col:42> '<dependent type>'
|         |-UnresolvedMemberExpr 0x563ee326d0b8 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x563ee326d120 <col:24> 'const char *' lvalue ParmVar 0x563ee3242c28 'keyword' 'const char *'
|         |-DeclRefExpr 0x563ee326d140 <col:33> 'P' lvalue ParmVar 0x563ee3242ca0 'parser' 'P'
|         `-DeclRefExpr 0x563ee326d160 <col:41> 'T' lvalue ParmVar 0x563ee3242d48 'x' 'T &'
|-FunctionTemplateDecl 0x563ee32433a8 <line:554:5, line:557:5> line:555:11 read_with
| |-TemplateTypeParmDecl 0x563ee3242f38 <line:554:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x563ee3242fb8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x563ee3243308 <line:555:5, line:557:5> line:555:11 read_with 'Args &(const char *, int, P, T &)'
|   |-ParmVarDecl 0x563ee3243078 <col:21, col:33> col:33 referenced keyword 'const char *'
|   |-ParmVarDecl 0x563ee32430f8 <col:42, col:46> col:46 referenced flags 'int'
|   |-ParmVarDecl 0x563ee3243170 <col:53, col:55> col:55 referenced parser 'P'
|   |-ParmVarDecl 0x563ee3243218 <col:63, col:66> col:66 referenced x 'T &'
|   `-CompoundStmt 0x563ee326d340 <col:69, line:557:5>
|     `-ReturnStmt 0x563ee326d330 <line:556:9, col:46>
|       `-CallExpr 0x563ee326d2f0 <col:16, col:46> '<dependent type>'
|         |-UnresolvedMemberExpr 0x563ee326d1f0 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x563ee326d270 <col:21> 'const char *' lvalue ParmVar 0x563ee3243078 'keyword' 'const char *'
|         |-DeclRefExpr 0x563ee326d290 <col:30> 'int' lvalue ParmVar 0x563ee32430f8 'flags' 'int'
|         |-DeclRefExpr 0x563ee326d2b0 <col:37> 'P' lvalue ParmVar 0x563ee3243170 'parser' 'P'
|         `-DeclRefExpr 0x563ee326d2d0 <col:45> 'T' lvalue ParmVar 0x563ee3243218 'x' 'T &'
|-FunctionTemplateDecl 0x563ee32436b8 <line:568:5, line:571:5> line:569:11 read_all_with
| |-TemplateTypeParmDecl 0x563ee3243420 <line:568:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x563ee3243618 <line:569:5, line:571:5> line:569:11 read_all_with 'Args &(const char *, P)'
|   |-ParmVarDecl 0x563ee32434d0 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x563ee3243548 <col:46, col:48> col:48 referenced parser 'P'
|   `-CompoundStmt 0x563ee326d480 <col:56, line:571:5>
|     `-ReturnStmt 0x563ee326d470 <line:570:9, col:48>
|       `-CallExpr 0x563ee326d438 <col:16, col:48> '<dependent type>'
|         |-UnresolvedMemberExpr 0x563ee326d368 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x563ee326d3d8 <col:30> 'const char *' lvalue ParmVar 0x563ee32434d0 'keyword' 'const char *'
|         |-IntegerLiteral 0x563ee326d3f8 <col:39> 'int' 0
|         `-DeclRefExpr 0x563ee326d418 <col:42> 'P' lvalue ParmVar 0x563ee3243548 'parser' 'P'
|-FunctionTemplateDecl 0x563ee3243a48 <line:572:5, line:576:5> line:573:11 read_all_with
| |-TemplateTypeParmDecl 0x563ee3243720 <line:572:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x563ee32439a8 <line:573:5, line:576:5> line:573:11 read_all_with 'Args &(const char *, int, P)'
|   |-ParmVarDecl 0x563ee32437d0 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x563ee3243850 <col:46, col:50> col:50 referenced flags 'int'
|   |-ParmVarDecl 0x563ee32438c8 <col:57, col:59> col:59 referenced parser 'P'
|   `-CompoundStmt 0x563ee326d650 <col:67, line:576:5>
|     |-CallExpr 0x563ee326d5d8 <line:574:9, col:74> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x563ee326d498 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read_all_with' empty
|     | |-CXXThisExpr 0x563ee326d4d8 <col:33> 'Args *' this
|     | |-DeclRefExpr 0x563ee326d4e8 <col:39> 'const char *' lvalue ParmVar 0x563ee32437d0 'keyword' 'const char *'
|     | |-BinaryOperator 0x563ee326d598 <col:48, col:56> 'int' '|'
|     | | |-ImplicitCastExpr 0x563ee326d548 <col:48> 'int' <LValueToRValue>
|     | | | `-DeclRefExpr 0x563ee326d508 <col:48> 'int' lvalue ParmVar 0x563ee3243850 'flags' 'int'
|     | | `-ImplicitCastExpr 0x563ee326d580 <col:56> 'int' <LValueToRValue>
|     | |   `-DeclRefExpr 0x563ee326d560 <col:56> 'const int' lvalue Var 0x563ee3235130 'firstmatch' 'const int' non_odr_use_constant
|     | `-DeclRefExpr 0x563ee326d5b8 <col:68> 'P' lvalue ParmVar 0x563ee32438c8 'parser' 'P'
|     `-ReturnStmt 0x563ee326d640 <line:575:9, col:17>
|       `-UnaryOperator 0x563ee326d628 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x563ee326d618 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x563ee3243e98 <line:589:5, line:592:5> line:590:11 read_all_with
| |-TemplateTypeParmDecl 0x563ee3243ab8 <line:589:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x563ee3243b38 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x563ee3243df8 <line:590:5, line:592:5> line:590:11 read_all_with 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x563ee3243bf8 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x563ee3243c70 <col:46, col:48> col:48 referenced parser 'P'
|   |-ParmVarDecl 0x563ee3243d18 <col:56, col:59> col:59 referenced x 'T &'
|   `-CompoundStmt 0x563ee326d7c0 <col:62, line:592:5>
|     `-ReturnStmt 0x563ee326d7b0 <line:591:9, col:51>
|       `-CallExpr 0x563ee326d770 <col:16, col:51> '<dependent type>'
|         |-UnresolvedMemberExpr 0x563ee326d680 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x563ee326d6f0 <col:30> 'const char *' lvalue ParmVar 0x563ee3243bf8 'keyword' 'const char *'
|         |-IntegerLiteral 0x563ee326d710 <col:39> 'int' 0
|         |-DeclRefExpr 0x563ee326d730 <col:42> 'P' lvalue ParmVar 0x563ee3243c70 'parser' 'P'
|         `-DeclRefExpr 0x563ee326d750 <col:50> 'T' lvalue ParmVar 0x563ee3243d18 'x' 'T &'
|-FunctionTemplateDecl 0x563ee3244378 <line:593:5, line:597:5> line:594:11 read_all_with
| |-TemplateTypeParmDecl 0x563ee3243f08 <line:593:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x563ee3243f88 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x563ee32442d8 <line:594:5, line:597:5> line:594:11 read_all_with 'Args &(const char *, int, P, T &)'
|   |-ParmVarDecl 0x563ee3244048 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x563ee32440c8 <col:46, col:50> col:50 referenced flags 'int'
|   |-ParmVarDecl 0x563ee3244140 <col:57, col:59> col:59 referenced parser 'P'
|   |-ParmVarDecl 0x563ee32441e8 <col:67, col:70> col:70 referenced x 'T &'
|   `-CompoundStmt 0x563ee326d9b8 <col:73, line:597:5>
|     |-CallExpr 0x563ee326d938 <line:595:9, col:77> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x563ee326d7d8 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read_all_with' empty
|     | |-CXXThisExpr 0x563ee326d818 <col:33> 'Args *' this
|     | |-DeclRefExpr 0x563ee326d828 <col:39> 'const char *' lvalue ParmVar 0x563ee3244048 'keyword' 'const char *'
|     | |-BinaryOperator 0x563ee326d8d8 <col:48, col:56> 'int' '|'
|     | | |-ImplicitCastExpr 0x563ee326d888 <col:48> 'int' <LValueToRValue>
|     | | | `-DeclRefExpr 0x563ee326d848 <col:48> 'int' lvalue ParmVar 0x563ee32440c8 'flags' 'int'
|     | | `-ImplicitCastExpr 0x563ee326d8c0 <col:56> 'int' <LValueToRValue>
|     | |   `-DeclRefExpr 0x563ee326d8a0 <col:56> 'const int' lvalue Var 0x563ee3235130 'firstmatch' 'const int' non_odr_use_constant
|     | |-DeclRefExpr 0x563ee326d8f8 <col:68> 'P' lvalue ParmVar 0x563ee3244140 'parser' 'P'
|     | `-DeclRefExpr 0x563ee326d918 <col:76> 'T' lvalue ParmVar 0x563ee32441e8 'x' 'T &'
|     `-ReturnStmt 0x563ee326d9a8 <line:596:9, col:17>
|       `-UnaryOperator 0x563ee326d990 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x563ee326d980 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x563ee3244928 <line:611:5, line:614:5> line:612:11 read_all
| |-TemplateTypeParmDecl 0x563ee32443f0 <line:611:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x563ee3244468 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x563ee3244888 <line:612:5, line:614:5> line:612:11 read_all 'Args &(const char *, P, Vector<T> &)'
|   |-ParmVarDecl 0x563ee3244528 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x563ee32445a0 <col:41, col:43> col:43 referenced parser 'P'
|   |-ParmVarDecl 0x563ee3244760 <col:51, col:62> col:62 referenced x 'Vector<T> &'
|   `-CompoundStmt 0x563ee326db28 <col:65, line:614:5>
|     `-ReturnStmt 0x563ee326db18 <line:613:9, col:46>
|       `-CallExpr 0x563ee326dad8 <col:16, col:46> '<dependent type>'
|         |-UnresolvedMemberExpr 0x563ee326d9e8 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x563ee326da58 <col:25> 'const char *' lvalue ParmVar 0x563ee3244528 'keyword' 'const char *'
|         |-IntegerLiteral 0x563ee326da78 <col:34> 'int' 0
|         |-DeclRefExpr 0x563ee326da98 <col:37> 'P' lvalue ParmVar 0x563ee32445a0 'parser' 'P'
|         `-DeclRefExpr 0x563ee326dab8 <col:45> 'Vector<T>' lvalue ParmVar 0x563ee3244760 'x' 'Vector<T> &'
|-FunctionTemplateDecl 0x563ee3244d58 <line:615:5, line:618:5> line:616:11 read_all
| |-TemplateTypeParmDecl 0x563ee3244998 <line:615:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x563ee3244cb8 <line:616:5, line:618:5> line:616:11 read_all 'Args &(const char *, Vector<T> &)'
|   |-ParmVarDecl 0x563ee3244a50 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x563ee3244ba0 <col:41, col:52> col:52 referenced x 'Vector<T> &'
|   `-CompoundStmt 0x563ee326dd40 <col:55, line:618:5>
|     `-ReturnStmt 0x563ee326dd30 <line:617:9, col:55>
|       `-CallExpr 0x563ee326dcf0 <col:16, col:55> '<dependent type>'
|         |-UnresolvedMemberExpr 0x563ee326db50 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x563ee326dbc0 <col:25> 'const char *' lvalue ParmVar 0x563ee3244a50 'keyword' 'const char *'
|         |-IntegerLiteral 0x563ee326dbe0 <col:34> 'int' 0
|         |-CXXUnresolvedConstructExpr 0x563ee326dcb0 <col:37, col:51> 'DefaultArg<T>' 'DefaultArg<T>'
|         `-DeclRefExpr 0x563ee326dcd0 <col:54> 'Vector<T>' lvalue ParmVar 0x563ee3244ba0 'x' 'Vector<T> &'
|-FunctionTemplateDecl 0x563ee3245328 <line:619:5, line:623:5> line:620:11 read_all
| |-TemplateTypeParmDecl 0x563ee3244dc0 <line:619:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x563ee3244e38 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x563ee3245288 <line:620:5, line:623:5> line:620:11 read_all 'Args &(const char *, int, P, Vector<T> &)'
|   |-ParmVarDecl 0x563ee3244ef8 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x563ee3244f78 <col:41, col:45> col:45 referenced flags 'int'
|   |-ParmVarDecl 0x563ee3244ff0 <col:52, col:54> col:54 referenced parser 'P'
|   |-ParmVarDecl 0x563ee3245140 <col:62, col:73> col:73 referenced x 'Vector<T> &'
|   `-CompoundStmt 0x563ee326df38 <col:76, line:623:5>
|     |-CallExpr 0x563ee326deb8 <line:621:9, col:72> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x563ee326dd58 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read_all' empty
|     | |-CXXThisExpr 0x563ee326dd98 <col:28> 'Args *' this
|     | |-DeclRefExpr 0x563ee326dda8 <col:34> 'const char *' lvalue ParmVar 0x563ee3244ef8 'keyword' 'const char *'
|     | |-BinaryOperator 0x563ee326de58 <col:43, col:51> 'int' '|'
|     | | |-ImplicitCastExpr 0x563ee326de08 <col:43> 'int' <LValueToRValue>
|     | | | `-DeclRefExpr 0x563ee326ddc8 <col:43> 'int' lvalue ParmVar 0x563ee3244f78 'flags' 'int'
|     | | `-ImplicitCastExpr 0x563ee326de40 <col:51> 'int' <LValueToRValue>
|     | |   `-DeclRefExpr 0x563ee326de20 <col:51> 'const int' lvalue Var 0x563ee3235130 'firstmatch' 'const int' non_odr_use_constant
|     | |-DeclRefExpr 0x563ee326de78 <col:63> 'P' lvalue ParmVar 0x563ee3244ff0 'parser' 'P'
|     | `-DeclRefExpr 0x563ee326de98 <col:71> 'Vector<T>' lvalue ParmVar 0x563ee3245140 'x' 'Vector<T> &'
|     `-ReturnStmt 0x563ee326df28 <line:622:9, col:17>
|       `-UnaryOperator 0x563ee326df10 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x563ee326df00 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x563ee3245868 <line:624:5, line:627:5> line:625:11 read_all
| |-TemplateTypeParmDecl 0x563ee32453a0 <line:624:15, col:24> col:24 typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x563ee3245418 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x563ee32457c8 <line:625:5, line:627:5> line:625:11 read_all 'Args &(const char *, int, Vector<T> &)'
|   |-ParmVarDecl 0x563ee32454d8 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x563ee3245558 <col:41, col:45> col:45 referenced flags 'int'
|   |-ParmVarDecl 0x563ee32456a0 <col:52, col:63> col:63 referenced x 'Vector<T> &'
|   `-CompoundStmt 0x563ee326e1a0 <col:66, line:627:5>
|     `-ReturnStmt 0x563ee326e190 <line:626:9, col:59>
|       `-CallExpr 0x563ee326e150 <col:16, col:59> '<dependent type>'
|         |-UnresolvedMemberExpr 0x563ee326df68 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x563ee326dfd8 <col:25> 'const char *' lvalue ParmVar 0x563ee32454d8 'keyword' 'const char *'
|         |-DeclRefExpr 0x563ee326dff8 <col:34> 'int' lvalue ParmVar 0x563ee3245558 'flags' 'int'
|         |-CXXUnresolvedConstructExpr 0x563ee326e110 <col:41, col:55> 'DefaultArg<T>' 'DefaultArg<T>'
|         `-DeclRefExpr 0x563ee326e130 <col:58> 'Vector<T>' lvalue ParmVar 0x563ee32456a0 'x' 'Vector<T> &'
|-CXXMethodDecl 0x563ee32458f8 <line:631:5, line:633:5> line:631:10 status 'bool () const'
| `-CompoundStmt 0x563ee326e220 <col:25, line:633:5>
|   `-ReturnStmt 0x563ee326e210 <line:632:9, col:16>
|     `-ImplicitCastExpr 0x563ee326e1f8 <col:16> 'bool' <LValueToRValue>
|       `-MemberExpr 0x563ee326e1c8 <col:16> 'const bool' lvalue ->_status 0x563ee3250eb8
|         `-CXXThisExpr 0x563ee326e1b8 <col:16> 'const Args *' implicit this
|-CXXMethodDecl 0x563ee3245a78 <line:636:5, line:639:5> line:636:11 status 'Args &(bool &)'
| |-ParmVarDecl 0x563ee32459b0 <col:18, col:24> col:24 used x 'bool &'
| `-CompoundStmt 0x563ee326e308 <col:27, line:639:5>
|   |-BinaryOperator 0x563ee326e2b0 <line:637:9, col:13> 'bool' lvalue '='
|   | |-DeclRefExpr 0x563ee326e238 <col:9> 'bool' lvalue ParmVar 0x563ee32459b0 'x' 'bool &'
|   | `-ImplicitCastExpr 0x563ee326e298 <col:13> 'bool' <LValueToRValue>
|   |   `-MemberExpr 0x563ee326e268 <col:13> 'bool' lvalue ->_status 0x563ee3250eb8
|   |     `-CXXThisExpr 0x563ee326e258 <col:13> 'Args *' implicit this
|   `-ReturnStmt 0x563ee326e2f8 <line:638:9, col:17>
|     `-UnaryOperator 0x563ee326e2e0 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x563ee326e2d0 <col:17> 'Args *' this
|-CXXMethodDecl 0x563ee3245bf8 <line:641:5, line:644:5> line:641:17 status 'const Args &(bool &) const'
| |-ParmVarDecl 0x563ee3245b38 <col:24, col:30> col:30 used x 'bool &'
| `-CompoundStmt 0x563ee326e3f8 <col:39, line:644:5>
|   |-BinaryOperator 0x563ee326e3a0 <line:642:9, col:13> 'bool' lvalue '='
|   | |-DeclRefExpr 0x563ee326e328 <col:9> 'bool' lvalue ParmVar 0x563ee3245b38 'x' 'bool &'
|   | `-ImplicitCastExpr 0x563ee326e388 <col:13> 'bool' <LValueToRValue>
|   |   `-MemberExpr 0x563ee326e358 <col:13> 'const bool' lvalue ->_status 0x563ee3250eb8
|   |     `-CXXThisExpr 0x563ee326e348 <col:13> 'const Args *' implicit this
|   `-ReturnStmt 0x563ee326e3e8 <line:643:9, col:17>
|     `-UnaryOperator 0x563ee326e3d0 <col:16, col:17> 'const Args' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x563ee326e3c0 <col:17> 'const Args *' this
|-CXXMethodDecl 0x563ee3245cc0 <line:649:5, line:651:5> line:649:10 read_status 'bool () const'
| `-CompoundStmt 0x563ee326e4a0 <col:30, line:651:5>
|   `-ReturnStmt 0x563ee326e490 <line:650:9, col:16>
|     `-ImplicitCastExpr 0x563ee326e478 <col:16> 'bool' <LValueToRValue>
|       `-MemberExpr 0x563ee326e448 <col:16> 'bool' lvalue ->_read_status 0x563ee322b410
|         `-ImplicitCastExpr 0x563ee326e428 <col:16> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|           `-CXXThisExpr 0x563ee326e418 <col:16> 'const Args *' implicit this
|-CXXMethodDecl 0x563ee3245e08 <line:655:5, line:658:5> line:655:11 read_status 'Args &(bool &)'
| |-ParmVarDecl 0x563ee3245d78 <col:23, col:29> col:29 used x 'bool &'
| `-CompoundStmt 0x563ee326e5a8 <col:32, line:658:5>
|   |-BinaryOperator 0x563ee326e550 <line:656:9, col:13> 'bool' lvalue '='
|   | |-DeclRefExpr 0x563ee326e4b8 <col:9> 'bool' lvalue ParmVar 0x563ee3245d78 'x' 'bool &'
|   | `-ImplicitCastExpr 0x563ee326e538 <col:13> 'bool' <LValueToRValue>
|   |   `-MemberExpr 0x563ee326e508 <col:13> 'bool' lvalue ->_read_status 0x563ee322b410
|   |     `-ImplicitCastExpr 0x563ee326e4e8 <col:13> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|   |       `-CXXThisExpr 0x563ee326e4d8 <col:13> 'Args *' implicit this
|   `-ReturnStmt 0x563ee326e598 <line:657:9, col:17>
|     `-UnaryOperator 0x563ee326e580 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x563ee326e570 <col:17> 'Args *' this
|-CXXMethodDecl 0x563ee3245f58 <line:660:5, line:663:5> line:660:17 read_status 'const Args &(bool &) const'
| |-ParmVarDecl 0x563ee3245ec8 <col:29, col:35> col:35 used x 'bool &'
| `-CompoundStmt 0x563ee326e6b8 <col:44, line:663:5>
|   |-BinaryOperator 0x563ee326e660 <line:661:9, col:13> 'bool' lvalue '='
|   | |-DeclRefExpr 0x563ee326e5c8 <col:9> 'bool' lvalue ParmVar 0x563ee3245ec8 'x' 'bool &'
|   | `-ImplicitCastExpr 0x563ee326e648 <col:13> 'bool' <LValueToRValue>
|   |   `-MemberExpr 0x563ee326e618 <col:13> 'bool' lvalue ->_read_status 0x563ee322b410
|   |     `-ImplicitCastExpr 0x563ee326e5f8 <col:13> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|   |       `-CXXThisExpr 0x563ee326e5e8 <col:13> 'const Args *' implicit this
|   `-ReturnStmt 0x563ee326e6a8 <line:662:9, col:17>
|     `-UnaryOperator 0x563ee326e690 <col:16, col:17> 'const Args' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x563ee326e680 <col:17> 'const Args *' this
|-CXXMethodDecl 0x563ee3246020 <line:667:5, col:17> col:11 strip 'Args &()'
|-CXXMethodDecl 0x563ee32460e8 <line:675:5, col:17> col:9 execute 'int ()'
|-CXXMethodDecl 0x563ee32461b0 <line:684:5, col:17> col:9 consume 'int ()'
|-CXXMethodDecl 0x563ee3246278 <line:693:5, col:18> col:9 used complete 'int ()'
|-FunctionTemplateDecl 0x563ee324bd10 <line:700:5, line:706:5> line:701:8 slot
| |-TemplateTypeParmDecl 0x563ee3246318 <line:700:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x563ee324bc70 <line:701:5, line:706:5> line:701:8 slot 'T *(T &)'
|   |-ParmVarDecl 0x563ee32463f8 <col:13, col:16> col:16 referenced x 'T &'
|   `-CompoundStmt 0x563ee326ea70 <col:19, line:706:5>
|     `-IfStmt 0x563ee326ea48 <line:702:9, line:705:34> has_else
|       |-CXXDependentScopeMemberExpr 0x563ee326e7b8 <line:702:13, col:34> '<dependent type>' lvalue ->value
|       |-ReturnStmt 0x563ee326e978 <line:703:13, col:68>
|       | `-CXXReinterpretCastExpr 0x563ee326e948 <col:20, col:68> 'T *' reinterpret_cast<T *> <Dependent>
|       |   `-CallExpr 0x563ee326e908 <col:42, col:67> '<dependent type>'
|       |     |-MemberExpr 0x563ee326e810 <col:42> '<bound member function type>' ->simple_slot 0x563ee3269500
|       |     | `-CXXThisExpr 0x563ee326e800 <col:42> 'Args *' implicit this
|       |     |-CXXOperatorCallExpr 0x563ee326e8a8 <col:54, col:55> '<dependent type>'
|       |     | |-UnresolvedLookupExpr 0x563ee326e860 <col:54> '<overloaded function type>' lvalue (ADL) = 'operator&' 0x563ee2f02a48
|       |     | `-DeclRefExpr 0x563ee326e840 <col:55> 'T' lvalue ParmVar 0x563ee32463f8 'x' 'T &'
|       |     `-UnaryExprOrTypeTraitExpr 0x563ee326e8e8 <col:58, col:66> 'unsigned long' sizeof 'T'
|       `-ReturnStmt 0x563ee326ea38 <line:705:13, col:34>
|         `-CallExpr 0x563ee326ea10 <col:20, col:34> '<dependent type>'
|           |-UnresolvedMemberExpr 0x563ee326e998 <col:20> '<bound member function type>' lvalue
|           `-DeclRefExpr 0x563ee326e9f0 <col:33> 'T' lvalue ParmVar 0x563ee32463f8 'x' 'T &'
|-FunctionTemplateDecl 0x563ee324bfd8 <line:711:5, line:717:5> line:712:8 initialized_slot
| |-TemplateTypeParmDecl 0x563ee324bd70 <line:711:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x563ee324bf38 <line:712:5, line:717:5> line:712:8 initialized_slot 'T *(T &)'
|   |-ParmVarDecl 0x563ee324be48 <col:25, col:28> col:28 referenced x 'T &'
|   `-CompoundStmt 0x563ee326ee50 <col:31, line:717:5>
|     |-DeclStmt 0x563ee326ebb0 <line:713:9, col:23>
|     | `-VarDecl 0x563ee326ea98 <col:9, col:22> col:12 referenced s 'T *' nrvo cinit
|     |   `-CallExpr 0x563ee326eb88 <col:16, col:22> '<dependent type>'
|     |     |-UnresolvedMemberExpr 0x563ee326eb10 <col:16> '<bound member function type>' lvalue
|     |     `-DeclRefExpr 0x563ee326eb68 <col:21> 'T' lvalue ParmVar 0x563ee324be48 'x' 'T &'
|     |-IfStmt 0x563ee326ee00 <line:714:9, line:715:20>
|     | |-CXXDependentScopeMemberExpr 0x563ee326eca8 <line:714:13, col:34> '<dependent type>' lvalue ->value
|     | `-BinaryOperator 0x563ee326ede0 <line:715:13, col:20> '<dependent type>' '='
|     |   |-CXXOperatorCallExpr 0x563ee326ed80 <col:13, col:14> '<dependent type>'
|     |   | |-UnresolvedLookupExpr 0x563ee326ed10 <col:13> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x563ee30b9b48 0x563ee30b9768 0x563ee30b9398 0x563ee30b8fb8 0x563ee30b8bd8 0x563ee30b8808
|     |   | `-DeclRefExpr 0x563ee326ecf0 <col:14> 'T *' lvalue Var 0x563ee326ea98 's' 'T *'
|     |   `-CXXUnresolvedConstructExpr 0x563ee326edc0 <col:18, col:20> 'T' 'T'
|     `-ReturnStmt 0x563ee326ee38 <line:716:9, col:16>
|       `-DeclRefExpr 0x563ee326ee18 <col:16> 'T *' lvalue Var 0x563ee326ea98 's' 'T *'
|-FunctionTemplateDecl 0x563ee324c3e8 <line:721:5, line:726:5> line:722:11 set
| |-TemplateTypeParmDecl 0x563ee324c038 <line:721:15, col:24> col:24 referenced typename depth 0 index 0 T
| |-TemplateTypeParmDecl 0x563ee324c0b8 <col:27, col:36> col:36 referenced typename depth 0 index 1 V
| `-CXXMethodDecl 0x563ee324c348 <line:722:5, line:726:5> line:722:11 set 'Args &(T &, const V &)'
|   |-ParmVarDecl 0x563ee324c198 <col:15, col:18> col:18 referenced x 'T &'
|   |-ParmVarDecl 0x563ee324c238 <col:21, col:30> col:30 referenced value 'const V &'
|   `-CompoundStmt 0x563ee326f160 <col:37, line:726:5>
|     |-IfStmt 0x563ee326f0f0 <line:723:9, line:724:18> has_var
|     | |-DeclStmt 0x563ee326f110 <line:723:13, col:26>
|     | | `-VarDecl 0x563ee326eeb8 <col:13, col:26> col:16 referenced s 'T *' cinit
|     | |   `-CallExpr 0x563ee326efa8 <col:20, col:26> '<dependent type>'
|     | |     |-UnresolvedMemberExpr 0x563ee326ef30 <col:20> '<bound member function type>' lvalue
|     | |     `-DeclRefExpr 0x563ee326ef88 <col:25> 'T' lvalue ParmVar 0x563ee324c198 'x' 'T &'
|     | |-DeclRefExpr 0x563ee326efd0 <col:16> 'T *' lvalue Var 0x563ee326eeb8 's' 'T *'
|     | `-BinaryOperator 0x563ee326f0d0 <line:724:13, col:18> '<dependent type>' '='
|     |   |-CXXOperatorCallExpr 0x563ee326f080 <col:13, col:14> '<dependent type>'
|     |   | |-UnresolvedLookupExpr 0x563ee326f010 <col:13> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x563ee30b9b48 0x563ee30b9768 0x563ee30b9398 0x563ee30b8fb8 0x563ee30b8bd8 0x563ee30b8808
|     |   | `-DeclRefExpr 0x563ee326eff0 <col:14> 'T *' lvalue Var 0x563ee326eeb8 's' 'T *'
|     |   `-DeclRefExpr 0x563ee326f0b0 <col:18> 'const V' lvalue ParmVar 0x563ee324c238 'value' 'const V &'
|     `-ReturnStmt 0x563ee326f150 <line:725:9, col:17>
|       `-UnaryOperator 0x563ee326f138 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x563ee326f128 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x563ee324c7e8 <line:730:5, line:737:5> line:731:10 base_read
| |-TemplateTypeParmDecl 0x563ee324c450 <line:730:14, col:23> col:23 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x563ee324c748 <line:731:5, line:737:5> line:731:10 base_read 'void (const char *, int, T &)'
|   |-ParmVarDecl 0x563ee324c500 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x563ee324c580 <col:41, col:45> col:45 referenced flags 'int'
|   |-ParmVarDecl 0x563ee324c628 <col:52, col:55> col:55 referenced variable 'T &'
|   `-CompoundStmt 0x563ee326ff80 <col:65, line:737:5>
|     |-DeclStmt 0x563ee326f1f8 <line:732:9, col:26>
|     | `-VarDecl 0x563ee326f190 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     `-IfStmt 0x563ee326ff48 <line:733:9, line:736:9> has_var
|       |-DeclStmt 0x563ee326ff68 <line:733:13, col:58>
|       | `-VarDecl 0x563ee326f220 <col:13, col:58> col:20 referenced str 'String' cinit destroyed
|       |   `-ExprWithCleanups 0x563ee326f400 <col:26, col:58> 'String'
|       |     `-CXXConstructExpr 0x563ee326f3d0 <col:26, col:58> 'String' 'void (String &&)' elidable
|       |       `-MaterializeTemporaryExpr 0x563ee326f3b8 <col:26, col:58> 'String' xvalue
|       |         `-CXXBindTemporaryExpr 0x563ee326f398 <col:26, col:58> 'String' (CXXTemporary 0x563ee326f398)
|       |           `-CXXMemberCallExpr 0x563ee326f328 <col:26, col:58> 'String'
|       |             |-MemberExpr 0x563ee326f298 <col:26> '<bound member function type>' ->find 0x563ee3268b18
|       |             | `-CXXThisExpr 0x563ee326f288 <col:26> 'Args *' implicit this
|       |             |-ImplicitCastExpr 0x563ee326f360 <col:31> 'const char *' <LValueToRValue>
|       |             | `-DeclRefExpr 0x563ee326f2c8 <col:31> 'const char *' lvalue ParmVar 0x563ee324c500 'keyword' 'const char *'
|       |             |-ImplicitCastExpr 0x563ee326f378 <col:40> 'int' <LValueToRValue>
|       |             | `-DeclRefExpr 0x563ee326f2e8 <col:40> 'int' lvalue ParmVar 0x563ee324c580 'flags' 'int'
|       |             `-DeclRefExpr 0x563ee326f308 <col:47> 'Args::Slot *' lvalue Var 0x563ee326f190 'slot_status' 'Args::Slot *'
|       |-ImplicitCastExpr 0x563ee326f4b8 <col:20> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x563ee326f4a0 <col:20> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x563ee326f480 <col:20> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x563ee326f450 <col:20> '<bound member function type>' .operator int (String::*)() const 0x563ee2ec5a18
|       |       `-ImplicitCastExpr 0x563ee326f438 <col:20> 'const String' lvalue <NoOp>
|       |         `-DeclRefExpr 0x563ee326f418 <col:20> 'String' lvalue Var 0x563ee326f220 'str' 'String'
|       `-CompoundStmt 0x563ee326ff28 <col:61, line:736:9>
|         |-DeclStmt 0x563ee326f970 <line:734:13, col:76>
|         | `-VarDecl 0x563ee326f508 <col:13, col:75> col:16 referenced s 'T *' cinit
|         |   `-CallExpr 0x563ee326f940 <col:20, col:75> '<dependent type>'
|         |     |-CXXDependentScopeMemberExpr 0x563ee326f8b0 <col:20, col:55> '<dependent type>' lvalue ->slot
|         |     |-DeclRefExpr 0x563ee326f8f8 <col:60> 'T' lvalue ParmVar 0x563ee324c628 'variable' 'T &'
|         |     `-UnaryOperator 0x563ee326f928 <col:70, col:71> 'Args' lvalue prefix '*' cannot overflow
|         |       `-CXXThisExpr 0x563ee326f918 <col:71> 'Args *' this
|         `-CallExpr 0x563ee326fef8 <line:735:13, col:114> '<dependent type>'
|           |-MemberExpr 0x563ee326f998 <col:13> '<bound member function type>' ->postparse 0x563ee3268d28
|           | `-CXXThisExpr 0x563ee326f988 <col:13> 'Args *' implicit this
|           |-BinaryOperator 0x563ee326feb8 <col:23, col:100> '<dependent type>' '&&'
|           | |-DeclRefExpr 0x563ee326f9c8 <col:23> 'T *' lvalue Var 0x563ee326f508 's' 'T *'
|           | `-CallExpr 0x563ee326fe78 <col:28, col:100> '<dependent type>'
|           |   |-CXXDependentScopeMemberExpr 0x563ee326fc50 <col:28, col:63> '<dependent type>' lvalue ->parse
|           |   |-CXXUnresolvedConstructExpr 0x563ee326fd50 <col:69, col:83> 'DefaultArg<T>' 'DefaultArg<T>'
|           |   |-DeclRefExpr 0x563ee326fd70 <col:86> 'String' lvalue Var 0x563ee326f220 'str' 'String'
|           |   |-CXXOperatorCallExpr 0x563ee326fe20 <col:91, col:92> '<dependent type>'
|           |   | |-UnresolvedLookupExpr 0x563ee326fdb0 <col:91> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x563ee30b9b48 0x563ee30b9768 0x563ee30b9398 0x563ee30b8fb8 0x563ee30b8bd8 0x563ee30b8808
|           |   | `-DeclRefExpr 0x563ee326fd90 <col:92> 'T *' lvalue Var 0x563ee326f508 's' 'T *'
|           |   `-UnaryOperator 0x563ee326fe60 <col:95, col:96> 'Args' lvalue prefix '*' cannot overflow
|           |     `-CXXThisExpr 0x563ee326fe50 <col:96> 'Args *' this
|           `-DeclRefExpr 0x563ee326fed8 <col:103> 'Args::Slot *' lvalue Var 0x563ee326f190 'slot_status' 'Args::Slot *'
|-FunctionTemplateDecl 0x563ee324cd38 <line:739:5, line:745:5> line:740:10 base_read_or_set
| |-TemplateTypeParmDecl 0x563ee324c858 <line:739:14, col:23> col:23 referenced typename depth 0 index 0 T
| |-TemplateTypeParmDecl 0x563ee324c8d8 <col:26, col:35> col:35 referenced typename depth 0 index 1 V
| `-CXXMethodDecl 0x563ee324cc98 <line:740:5, line:745:5> line:740:10 base_read_or_set 'void (const char *, int, T &, const V &)'
|   |-ParmVarDecl 0x563ee324c998 <col:27, col:39> col:39 referenced keyword 'const char *'
|   |-ParmVarDecl 0x563ee324ca18 <col:48, col:52> col:52 referenced flags 'int'
|   |-ParmVarDecl 0x563ee324cab8 <col:59, col:62> col:62 referenced variable 'T &'
|   |-ParmVarDecl 0x563ee324cb58 <col:72, col:81> col:81 referenced value 'const V &'
|   `-CompoundStmt 0x563ee3273840 <col:88, line:745:5>
|     |-DeclStmt 0x563ee3270018 <line:741:9, col:26>
|     | `-VarDecl 0x563ee326ffb0 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     |-DeclStmt 0x563ee3270238 <line:742:9, col:55>
|     | `-VarDecl 0x563ee3270040 <col:9, col:54> col:16 referenced str 'String' cinit destroyed
|     |   `-ExprWithCleanups 0x563ee3270220 <col:22, col:54> 'String'
|     |     `-CXXConstructExpr 0x563ee32701f0 <col:22, col:54> 'String' 'void (String &&)' elidable
|     |       `-MaterializeTemporaryExpr 0x563ee32701d8 <col:22, col:54> 'String' xvalue
|     |         `-CXXBindTemporaryExpr 0x563ee32701b8 <col:22, col:54> 'String' (CXXTemporary 0x563ee32701b8)
|     |           `-CXXMemberCallExpr 0x563ee3270148 <col:22, col:54> 'String'
|     |             |-MemberExpr 0x563ee32700b8 <col:22> '<bound member function type>' ->find 0x563ee3268b18
|     |             | `-CXXThisExpr 0x563ee32700a8 <col:22> 'Args *' implicit this
|     |             |-ImplicitCastExpr 0x563ee3270180 <col:27> 'const char *' <LValueToRValue>
|     |             | `-DeclRefExpr 0x563ee32700e8 <col:27> 'const char *' lvalue ParmVar 0x563ee324c998 'keyword' 'const char *'
|     |             |-ImplicitCastExpr 0x563ee3270198 <col:36> 'int' <LValueToRValue>
|     |             | `-DeclRefExpr 0x563ee3270108 <col:36> 'int' lvalue ParmVar 0x563ee324ca18 'flags' 'int'
|     |             `-DeclRefExpr 0x563ee3270128 <col:43> 'Args::Slot *' lvalue Var 0x563ee326ffb0 'slot_status' 'Args::Slot *'
|     |-DeclStmt 0x563ee3273030 <line:743:9, col:72>
|     | `-VarDecl 0x563ee3270288 <col:9, col:71> col:12 referenced s 'T *' cinit
|     |   `-CallExpr 0x563ee3273000 <col:16, col:71> '<dependent type>'
|     |     |-CXXDependentScopeMemberExpr 0x563ee3272f70 <col:16, col:51> '<dependent type>' lvalue ->slot
|     |     |-DeclRefExpr 0x563ee3272fb8 <col:56> 'T' lvalue ParmVar 0x563ee324cab8 'variable' 'T &'
|     |     `-UnaryOperator 0x563ee3272fe8 <col:66, col:67> 'Args' lvalue prefix '*' cannot overflow
|     |       `-CXXThisExpr 0x563ee3272fd8 <col:67> 'Args *' this
|     `-CallExpr 0x563ee3273810 <line:744:9, col:139> '<dependent type>'
|       |-MemberExpr 0x563ee3273058 <col:9> '<bound member function type>' ->postparse 0x563ee3268d28
|       | `-CXXThisExpr 0x563ee3273048 <col:9> 'Args *' implicit this
|       |-BinaryOperator 0x563ee32737d0 <col:19, col:125> '<dependent type>' '&&'
|       | |-DeclRefExpr 0x563ee3273088 <col:19> 'T *' lvalue Var 0x563ee3270288 's' 'T *'
|       | `-ParenExpr 0x563ee32737b0 <col:24, col:125> '<dependent type>'
|       |   `-ConditionalOperator 0x563ee3273780 <col:25, col:124> '<dependent type>'
|       |     |-ImplicitCastExpr 0x563ee3273768 <col:25> 'bool' <MemberPointerToBoolean>
|       |     | `-ImplicitCastExpr 0x563ee3273750 <col:25> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |     |   `-CXXMemberCallExpr 0x563ee3273730 <col:25> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     |     `-MemberExpr 0x563ee3273700 <col:25> '<bound member function type>' .operator int (String::*)() const 0x563ee2ec5a18
|       |     |       `-ImplicitCastExpr 0x563ee32736e8 <col:25> 'const String' lvalue <NoOp>
|       |     |         `-DeclRefExpr 0x563ee32730a8 <col:25> 'String' lvalue Var 0x563ee3270040 'str' 'String'
|       |     |-CallExpr 0x563ee3273558 <col:31, col:103> '<dependent type>'
|       |     | |-CXXDependentScopeMemberExpr 0x563ee3273330 <col:31, col:66> '<dependent type>' lvalue ->parse
|       |     | |-CXXUnresolvedConstructExpr 0x563ee3273430 <col:72, col:86> 'DefaultArg<T>' 'DefaultArg<T>'
|       |     | |-DeclRefExpr 0x563ee3273450 <col:89> 'String' lvalue Var 0x563ee3270040 'str' 'String'
|       |     | |-CXXOperatorCallExpr 0x563ee3273500 <col:94, col:95> '<dependent type>'
|       |     | | |-UnresolvedLookupExpr 0x563ee3273490 <col:94> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x563ee30b9b48 0x563ee30b9768 0x563ee30b9398 0x563ee30b8fb8 0x563ee30b8bd8 0x563ee30b8808
|       |     | | `-DeclRefExpr 0x563ee3273470 <col:95> 'T *' lvalue Var 0x563ee3270288 's' 'T *'
|       |     | `-UnaryOperator 0x563ee3273540 <col:98, col:99> 'Args' lvalue prefix '*' cannot overflow
|       |     |   `-CXXThisExpr 0x563ee3273530 <col:99> 'Args *' this
|       |     `-ParenExpr 0x563ee32736c8 <col:107, col:124> '<dependent type>'
|       |       `-BinaryOperator 0x563ee32736a8 <col:108, col:120> '<dependent type>' ','
|       |         |-BinaryOperator 0x563ee3273678 <col:108, col:113> '<dependent type>' '='
|       |         | |-CXXOperatorCallExpr 0x563ee3273628 <col:108, col:109> '<dependent type>'
|       |         | | |-UnresolvedLookupExpr 0x563ee32735b8 <col:108> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x563ee30b9b48 0x563ee30b9768 0x563ee30b9398 0x563ee30b8fb8 0x563ee30b8bd8 0x563ee30b8808
|       |         | | `-DeclRefExpr 0x563ee3273598 <col:109> 'T *' lvalue Var 0x563ee3270288 's' 'T *'
|       |         | `-DeclRefExpr 0x563ee3273658 <col:113> 'const V' lvalue ParmVar 0x563ee324cb58 'value' 'const V &'
|       |         `-CXXBoolLiteralExpr 0x563ee3273698 <col:120> 'bool' true
|       `-DeclRefExpr 0x563ee32737f0 <col:128> 'Args::Slot *' lvalue Var 0x563ee326ffb0 'slot_status' 'Args::Slot *'
|-FunctionTemplateDecl 0x563ee324d268 <line:747:5, line:754:5> line:748:10 base_read
| |-TemplateTypeParmDecl 0x563ee324cdb0 <line:747:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x563ee324ce28 <col:26, col:35> col:35 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x563ee324d1c8 <line:748:5, line:754:5> line:748:10 base_read 'void (const char *, int, P, T &)'
|   |-ParmVarDecl 0x563ee324cee8 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x563ee324cf68 <col:41, col:45> col:45 referenced flags 'int'
|   |-ParmVarDecl 0x563ee324cfe0 <col:52, col:54> col:54 referenced parser 'P'
|   |-ParmVarDecl 0x563ee324d088 <col:62, col:65> col:65 referenced variable 'T &'
|   `-CompoundStmt 0x563ee3274438 <col:75, line:754:5>
|     |-DeclStmt 0x563ee32738e8 <line:749:9, col:26>
|     | `-VarDecl 0x563ee3273880 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     `-IfStmt 0x563ee3274400 <line:750:9, line:753:9> has_var
|       |-DeclStmt 0x563ee3274420 <line:750:13, col:58>
|       | `-VarDecl 0x563ee3273910 <col:13, col:58> col:20 referenced str 'String' cinit destroyed
|       |   `-ExprWithCleanups 0x563ee3273af0 <col:26, col:58> 'String'
|       |     `-CXXConstructExpr 0x563ee3273ac0 <col:26, col:58> 'String' 'void (String &&)' elidable
|       |       `-MaterializeTemporaryExpr 0x563ee3273aa8 <col:26, col:58> 'String' xvalue
|       |         `-CXXBindTemporaryExpr 0x563ee3273a88 <col:26, col:58> 'String' (CXXTemporary 0x563ee3273a88)
|       |           `-CXXMemberCallExpr 0x563ee3273a18 <col:26, col:58> 'String'
|       |             |-MemberExpr 0x563ee3273988 <col:26> '<bound member function type>' ->find 0x563ee3268b18
|       |             | `-CXXThisExpr 0x563ee3273978 <col:26> 'Args *' implicit this
|       |             |-ImplicitCastExpr 0x563ee3273a50 <col:31> 'const char *' <LValueToRValue>
|       |             | `-DeclRefExpr 0x563ee32739b8 <col:31> 'const char *' lvalue ParmVar 0x563ee324cee8 'keyword' 'const char *'
|       |             |-ImplicitCastExpr 0x563ee3273a68 <col:40> 'int' <LValueToRValue>
|       |             | `-DeclRefExpr 0x563ee32739d8 <col:40> 'int' lvalue ParmVar 0x563ee324cf68 'flags' 'int'
|       |             `-DeclRefExpr 0x563ee32739f8 <col:47> 'Args::Slot *' lvalue Var 0x563ee3273880 'slot_status' 'Args::Slot *'
|       |-ImplicitCastExpr 0x563ee3273ba8 <col:20> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x563ee3273b90 <col:20> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x563ee3273b70 <col:20> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x563ee3273b40 <col:20> '<bound member function type>' .operator int (String::*)() const 0x563ee2ec5a18
|       |       `-ImplicitCastExpr 0x563ee3273b28 <col:20> 'const String' lvalue <NoOp>
|       |         `-DeclRefExpr 0x563ee3273b08 <col:20> 'String' lvalue Var 0x563ee3273910 'str' 'String'
|       `-CompoundStmt 0x563ee32743e0 <col:61, line:753:9>
|         |-DeclStmt 0x563ee3273f80 <line:751:13, col:63>
|         | `-VarDecl 0x563ee3273bf8 <col:13, col:62> col:16 referenced s 'T *' cinit
|         |   `-CallExpr 0x563ee3273f50 <col:20, col:62> '<dependent type>'
|         |     |-CXXDependentScopeMemberExpr 0x563ee3273ec0 <col:20, col:42> '<dependent type>' lvalue ->slot
|         |     |-DeclRefExpr 0x563ee3273f08 <col:47> 'T' lvalue ParmVar 0x563ee324d088 'variable' 'T &'
|         |     `-UnaryOperator 0x563ee3273f38 <col:57, col:58> 'Args' lvalue prefix '*' cannot overflow
|         |       `-CXXThisExpr 0x563ee3273f28 <col:58> 'Args *' this
|         `-CallExpr 0x563ee32743b0 <line:752:13, col:92> '<dependent type>'
|           |-MemberExpr 0x563ee3273fa8 <col:13> '<bound member function type>' ->postparse 0x563ee3268d28
|           | `-CXXThisExpr 0x563ee3273f98 <col:13> 'Args *' implicit this
|           |-BinaryOperator 0x563ee3274370 <col:23, col:78> '<dependent type>' '&&'
|           | |-DeclRefExpr 0x563ee3273fd8 <col:23> 'T *' lvalue Var 0x563ee3273bf8 's' 'T *'
|           | `-CallExpr 0x563ee3274330 <col:28, col:78> '<dependent type>'
|           |   |-CXXDependentScopeMemberExpr 0x563ee32741c0 <col:28, col:50> '<dependent type>' lvalue ->parse
|           |   |-DeclRefExpr 0x563ee3274208 <col:56> 'P' lvalue ParmVar 0x563ee324cfe0 'parser' 'P'
|           |   |-DeclRefExpr 0x563ee3274228 <col:64> 'String' lvalue Var 0x563ee3273910 'str' 'String'
|           |   |-CXXOperatorCallExpr 0x563ee32742d8 <col:69, col:70> '<dependent type>'
|           |   | |-UnresolvedLookupExpr 0x563ee3274268 <col:69> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x563ee30b9b48 0x563ee30b9768 0x563ee30b9398 0x563ee30b8fb8 0x563ee30b8bd8 0x563ee30b8808
|           |   | `-DeclRefExpr 0x563ee3274248 <col:70> 'T *' lvalue Var 0x563ee3273bf8 's' 'T *'
|           |   `-UnaryOperator 0x563ee3274318 <col:73, col:74> 'Args' lvalue prefix '*' cannot overflow
|           |     `-CXXThisExpr 0x563ee3274308 <col:74> 'Args *' this
|           `-DeclRefExpr 0x563ee3274390 <col:81> 'Args::Slot *' lvalue Var 0x563ee3273880 'slot_status' 'Args::Slot *'
|-FunctionTemplateDecl 0x563ee324d8c8 <line:756:5, line:762:5> line:757:10 base_read_or_set
| |-TemplateTypeParmDecl 0x563ee324d2e0 <line:756:14, col:23> col:23 referenced typename depth 0 index 0 T
| |-TemplateTypeParmDecl 0x563ee324d358 <col:26, col:35> col:35 referenced typename depth 0 index 1 P
| |-TemplateTypeParmDecl 0x563ee324d3d8 <col:38, col:47> col:47 referenced typename depth 0 index 2 V
| `-CXXMethodDecl 0x563ee324d828 <line:757:5, line:762:5> line:757:10 base_read_or_set 'void (const char *, int, P, T &, const V &)'
|   |-ParmVarDecl 0x563ee324d4a0 <col:27, col:39> col:39 referenced keyword 'const char *'
|   |-ParmVarDecl 0x563ee324d520 <col:48, col:52> col:52 referenced flags 'int'
|   |-ParmVarDecl 0x563ee324d598 <col:59, col:61> col:61 referenced parser 'P'
|   |-ParmVarDecl 0x563ee324d638 <col:69, col:72> col:72 referenced variable 'T &'
|   |-ParmVarDecl 0x563ee324d6d8 <col:82, col:91> col:91 referenced value 'const V &'
|   `-CompoundStmt 0x563ee32751c8 <col:98, line:762:5>
|     |-DeclStmt 0x563ee32744d0 <line:758:9, col:26>
|     | `-VarDecl 0x563ee3274468 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     |-DeclStmt 0x563ee32746f0 <line:759:9, col:55>
|     | `-VarDecl 0x563ee32744f8 <col:9, col:54> col:16 referenced str 'String' cinit destroyed
|     |   `-ExprWithCleanups 0x563ee32746d8 <col:22, col:54> 'String'
|     |     `-CXXConstructExpr 0x563ee32746a8 <col:22, col:54> 'String' 'void (String &&)' elidable
|     |       `-MaterializeTemporaryExpr 0x563ee3274690 <col:22, col:54> 'String' xvalue
|     |         `-CXXBindTemporaryExpr 0x563ee3274670 <col:22, col:54> 'String' (CXXTemporary 0x563ee3274670)
|     |           `-CXXMemberCallExpr 0x563ee3274600 <col:22, col:54> 'String'
|     |             |-MemberExpr 0x563ee3274570 <col:22> '<bound member function type>' ->find 0x563ee3268b18
|     |             | `-CXXThisExpr 0x563ee3274560 <col:22> 'Args *' implicit this
|     |             |-ImplicitCastExpr 0x563ee3274638 <col:27> 'const char *' <LValueToRValue>
|     |             | `-DeclRefExpr 0x563ee32745a0 <col:27> 'const char *' lvalue ParmVar 0x563ee324d4a0 'keyword' 'const char *'
|     |             |-ImplicitCastExpr 0x563ee3274650 <col:36> 'int' <LValueToRValue>
|     |             | `-DeclRefExpr 0x563ee32745c0 <col:36> 'int' lvalue ParmVar 0x563ee324d520 'flags' 'int'
|     |             `-DeclRefExpr 0x563ee32745e0 <col:43> 'Args::Slot *' lvalue Var 0x563ee3274468 'slot_status' 'Args::Slot *'
|     |-DeclStmt 0x563ee3274b10 <line:760:9, col:59>
|     | `-VarDecl 0x563ee3274748 <col:9, col:58> col:12 referenced s 'T *' cinit
|     |   `-CallExpr 0x563ee3274ae0 <col:16, col:58> '<dependent type>'
|     |     |-CXXDependentScopeMemberExpr 0x563ee3274a50 <col:16, col:38> '<dependent type>' lvalue ->slot
|     |     |-DeclRefExpr 0x563ee3274a98 <col:43> 'T' lvalue ParmVar 0x563ee324d638 'variable' 'T &'
|     |     `-UnaryOperator 0x563ee3274ac8 <col:53, col:54> 'Args' lvalue prefix '*' cannot overflow
|     |       `-CXXThisExpr 0x563ee3274ab8 <col:54> 'Args *' this
|     `-CallExpr 0x563ee3275198 <line:761:9, col:117> '<dependent type>'
|       |-MemberExpr 0x563ee3274b38 <col:9> '<bound member function type>' ->postparse 0x563ee3268d28
|       | `-CXXThisExpr 0x563ee3274b28 <col:9> 'Args *' implicit this
|       |-BinaryOperator 0x563ee3275158 <col:19, col:103> '<dependent type>' '&&'
|       | |-DeclRefExpr 0x563ee3274b68 <col:19> 'T *' lvalue Var 0x563ee3274748 's' 'T *'
|       | `-ParenExpr 0x563ee3275138 <col:24, col:103> '<dependent type>'
|       |   `-ConditionalOperator 0x563ee3275108 <col:25, col:102> '<dependent type>'
|       |     |-ImplicitCastExpr 0x563ee32750f0 <col:25> 'bool' <MemberPointerToBoolean>
|       |     | `-ImplicitCastExpr 0x563ee32750d8 <col:25> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |     |   `-CXXMemberCallExpr 0x563ee32750b8 <col:25> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     |     `-MemberExpr 0x563ee3275088 <col:25> '<bound member function type>' .operator int (String::*)() const 0x563ee2ec5a18
|       |     |       `-ImplicitCastExpr 0x563ee3275070 <col:25> 'const String' lvalue <NoOp>
|       |     |         `-DeclRefExpr 0x563ee3274b88 <col:25> 'String' lvalue Var 0x563ee32744f8 'str' 'String'
|       |     |-CallExpr 0x563ee3274ee0 <col:31, col:81> '<dependent type>'
|       |     | |-CXXDependentScopeMemberExpr 0x563ee3274d70 <col:31, col:53> '<dependent type>' lvalue ->parse
|       |     | |-DeclRefExpr 0x563ee3274db8 <col:59> 'P' lvalue ParmVar 0x563ee324d598 'parser' 'P'
|       |     | |-DeclRefExpr 0x563ee3274dd8 <col:67> 'String' lvalue Var 0x563ee32744f8 'str' 'String'
|       |     | |-CXXOperatorCallExpr 0x563ee3274e88 <col:72, col:73> '<dependent type>'
|       |     | | |-UnresolvedLookupExpr 0x563ee3274e18 <col:72> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x563ee30b9b48 0x563ee30b9768 0x563ee30b9398 0x563ee30b8fb8 0x563ee30b8bd8 0x563ee30b8808
|       |     | | `-DeclRefExpr 0x563ee3274df8 <col:73> 'T *' lvalue Var 0x563ee3274748 's' 'T *'
|       |     | `-UnaryOperator 0x563ee3274ec8 <col:76, col:77> 'Args' lvalue prefix '*' cannot overflow
|       |     |   `-CXXThisExpr 0x563ee3274eb8 <col:77> 'Args *' this
|       |     `-ParenExpr 0x563ee3275050 <col:85, col:102> '<dependent type>'
|       |       `-BinaryOperator 0x563ee3275030 <col:86, col:98> '<dependent type>' ','
|       |         |-BinaryOperator 0x563ee3275000 <col:86, col:91> '<dependent type>' '='
|       |         | |-CXXOperatorCallExpr 0x563ee3274fb0 <col:86, col:87> '<dependent type>'
|       |         | | |-UnresolvedLookupExpr 0x563ee3274f40 <col:86> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x563ee30b9b48 0x563ee30b9768 0x563ee30b9398 0x563ee30b8fb8 0x563ee30b8bd8 0x563ee30b8808
|       |         | | `-DeclRefExpr 0x563ee3274f20 <col:87> 'T *' lvalue Var 0x563ee3274748 's' 'T *'
|       |         | `-DeclRefExpr 0x563ee3274fe0 <col:91> 'const V' lvalue ParmVar 0x563ee324d6d8 'value' 'const V &'
|       |         `-CXXBoolLiteralExpr 0x563ee3275020 <col:98> 'bool' true
|       `-DeclRefExpr 0x563ee3275178 <col:106> 'Args::Slot *' lvalue Var 0x563ee3274468 'slot_status' 'Args::Slot *'
|-FunctionTemplateDecl 0x563ee324df38 <line:764:5, line:773:5> line:765:10 base_read
| |-TemplateTypeParmDecl 0x563ee324d948 <line:764:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x563ee324d9c8 <col:26, col:35> col:35 referenced typename depth 0 index 1 T1
| |-TemplateTypeParmDecl 0x563ee324da48 <col:39, col:48> col:48 referenced typename depth 0 index 2 T2
| `-CXXMethodDecl 0x563ee324de98 <line:765:5, line:773:5> line:765:10 base_read 'void (const char *, int, P, T1 &, T2 &)'
|   |-ParmVarDecl 0x563ee324db10 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x563ee324db90 <col:41, col:45> col:45 referenced flags 'int'
|   |-ParmVarDecl 0x563ee324dc08 <line:766:20, col:22> col:22 referenced parser 'P'
|   |-ParmVarDecl 0x563ee324dca8 <col:30, col:34> col:34 referenced variable1 'T1 &'
|   |-ParmVarDecl 0x563ee324dd48 <col:45, col:49> col:49 referenced variable2 'T2 &'
|   `-CompoundStmt 0x563ee32761a8 <col:60, line:773:5>
|     |-DeclStmt 0x563ee3275270 <line:767:9, col:26>
|     | `-VarDecl 0x563ee3275208 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     `-IfStmt 0x563ee3276170 <line:768:9, line:772:9> has_var
|       |-DeclStmt 0x563ee3276190 <line:768:13, col:58>
|       | `-VarDecl 0x563ee3275298 <col:13, col:58> col:20 referenced str 'String' cinit destroyed
|       |   `-ExprWithCleanups 0x563ee3275478 <col:26, col:58> 'String'
|       |     `-CXXConstructExpr 0x563ee3275448 <col:26, col:58> 'String' 'void (String &&)' elidable
|       |       `-MaterializeTemporaryExpr 0x563ee3275430 <col:26, col:58> 'String' xvalue
|       |         `-CXXBindTemporaryExpr 0x563ee3275410 <col:26, col:58> 'String' (CXXTemporary 0x563ee3275410)
|       |           `-CXXMemberCallExpr 0x563ee32753a0 <col:26, col:58> 'String'
|       |             |-MemberExpr 0x563ee3275310 <col:26> '<bound member function type>' ->find 0x563ee3268b18
|       |             | `-CXXThisExpr 0x563ee3275300 <col:26> 'Args *' implicit this
|       |             |-ImplicitCastExpr 0x563ee32753d8 <col:31> 'const char *' <LValueToRValue>
|       |             | `-DeclRefExpr 0x563ee3275340 <col:31> 'const char *' lvalue ParmVar 0x563ee324db10 'keyword' 'const char *'
|       |             |-ImplicitCastExpr 0x563ee32753f0 <col:40> 'int' <LValueToRValue>
|       |             | `-DeclRefExpr 0x563ee3275360 <col:40> 'int' lvalue ParmVar 0x563ee324db90 'flags' 'int'
|       |             `-DeclRefExpr 0x563ee3275380 <col:47> 'Args::Slot *' lvalue Var 0x563ee3275208 'slot_status' 'Args::Slot *'
|       |-ImplicitCastExpr 0x563ee3275530 <col:20> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x563ee3275518 <col:20> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x563ee32754f8 <col:20> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x563ee32754c8 <col:20> '<bound member function type>' .operator int (String::*)() const 0x563ee2ec5a18
|       |       `-ImplicitCastExpr 0x563ee32754b0 <col:20> 'const String' lvalue <NoOp>
|       |         `-DeclRefExpr 0x563ee3275490 <col:20> 'String' lvalue Var 0x563ee3275298 'str' 'String'
|       `-CompoundStmt 0x563ee3276148 <col:61, line:772:9>
|         |-DeclStmt 0x563ee3275870 <line:769:13, col:66>
|         | `-VarDecl 0x563ee3275588 <col:13, col:65> col:17 referenced s1 'T1 *' cinit
|         |   `-CallExpr 0x563ee3275840 <col:22, col:65> '<dependent type>'
|         |     |-CXXDependentScopeMemberExpr 0x563ee32757b0 <col:22, col:44> '<dependent type>' lvalue ->slot
|         |     |-DeclRefExpr 0x563ee32757f8 <col:49> 'T1' lvalue ParmVar 0x563ee324dca8 'variable1' 'T1 &'
|         |     `-UnaryOperator 0x563ee3275828 <col:60, col:61> 'Args' lvalue prefix '*' cannot overflow
|         |       `-CXXThisExpr 0x563ee3275818 <col:61> 'Args *' this
|         |-DeclStmt 0x563ee3275be0 <line:770:13, col:66>
|         | `-VarDecl 0x563ee32758f8 <col:13, col:65> col:17 referenced s2 'T2 *' cinit
|         |   `-CallExpr 0x563ee3275bb0 <col:22, col:65> '<dependent type>'
|         |     |-CXXDependentScopeMemberExpr 0x563ee3275b20 <col:22, col:44> '<dependent type>' lvalue ->slot
|         |     |-DeclRefExpr 0x563ee3275b68 <col:49> 'T2' lvalue ParmVar 0x563ee324dd48 'variable2' 'T2 &'
|         |     `-UnaryOperator 0x563ee3275b98 <col:60, col:61> 'Args' lvalue prefix '*' cannot overflow
|         |       `-CXXThisExpr 0x563ee3275b88 <col:61> 'Args *' this
|         `-CallExpr 0x563ee3276118 <line:771:13, col:105> '<dependent type>'
|           |-MemberExpr 0x563ee3275c08 <col:13> '<bound member function type>' ->postparse 0x563ee3268d28
|           | `-CXXThisExpr 0x563ee3275bf8 <col:13> 'Args *' implicit this
|           |-BinaryOperator 0x563ee32760d8 <col:23, col:91> '<dependent type>' '&&'
|           | |-BinaryOperator 0x563ee3275c78 <col:23, col:29> '<dependent type>' '&&'
|           | | |-DeclRefExpr 0x563ee3275c38 <col:23> 'T1 *' lvalue Var 0x563ee3275588 's1' 'T1 *'
|           | | `-DeclRefExpr 0x563ee3275c58 <col:29> 'T2 *' lvalue Var 0x563ee32758f8 's2' 'T2 *'
|           | `-CallExpr 0x563ee3276090 <col:35, col:91> '<dependent type>'
|           |   |-CXXDependentScopeMemberExpr 0x563ee3275e60 <col:35, col:57> '<dependent type>' lvalue ->parse
|           |   |-DeclRefExpr 0x563ee3275ea8 <col:63> 'P' lvalue ParmVar 0x563ee324dc08 'parser' 'P'
|           |   |-DeclRefExpr 0x563ee3275ec8 <col:71> 'String' lvalue Var 0x563ee3275298 'str' 'String'
|           |   |-CXXOperatorCallExpr 0x563ee3275f78 <col:76, col:77> '<dependent type>'
|           |   | |-UnresolvedLookupExpr 0x563ee3275f08 <col:76> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x563ee30b9b48 0x563ee30b9768 0x563ee30b9398 0x563ee30b8fb8 0x563ee30b8bd8 0x563ee30b8808
|           |   | `-DeclRefExpr 0x563ee3275ee8 <col:77> 'T1 *' lvalue Var 0x563ee3275588 's1' 'T1 *'
|           |   |-CXXOperatorCallExpr 0x563ee3276038 <col:81, col:82> '<dependent type>'
|           |   | |-UnresolvedLookupExpr 0x563ee3275fc8 <col:81> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x563ee30b9b48 0x563ee30b9768 0x563ee30b9398 0x563ee30b8fb8 0x563ee30b8bd8 0x563ee30b8808
|           |   | `-DeclRefExpr 0x563ee3275fa8 <col:82> 'T2 *' lvalue Var 0x563ee32758f8 's2' 'T2 *'
|           |   `-UnaryOperator 0x563ee3276078 <col:86, col:87> 'Args' lvalue prefix '*' cannot overflow
|           |     `-CXXThisExpr 0x563ee3276068 <col:87> 'Args *' this
|           `-DeclRefExpr 0x563ee32760f8 <col:94> 'Args::Slot *' lvalue Var 0x563ee3275208 'slot_status' 'Args::Slot *'
|-FunctionTemplateDecl 0x563ee324e328 <line:775:5, line:780:5> line:776:10 base_read_with
| |-TemplateTypeParmDecl 0x563ee324dfb8 <line:775:14, col:23> col:23 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x563ee324e288 <line:776:5, line:780:5> line:776:10 base_read_with 'void (const char *, int, P)'
|   |-ParmVarDecl 0x563ee324e070 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x563ee324e0f0 <col:46, col:50> col:50 referenced flags 'int'
|   |-ParmVarDecl 0x563ee324e168 <col:57, col:59> col:59 referenced parser 'P'
|   `-CompoundStmt 0x563ee32766c0 <col:67, line:780:5>
|     |-DeclStmt 0x563ee3276240 <line:777:9, col:26>
|     | `-VarDecl 0x563ee32761d8 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     `-IfStmt 0x563ee3276688 <line:778:9, line:779:60> has_var
|       |-DeclStmt 0x563ee32766a8 <line:778:13, col:58>
|       | `-VarDecl 0x563ee3276268 <col:13, col:58> col:20 referenced str 'String' cinit destroyed
|       |   `-ExprWithCleanups 0x563ee3276448 <col:26, col:58> 'String'
|       |     `-CXXConstructExpr 0x563ee3276418 <col:26, col:58> 'String' 'void (String &&)' elidable
|       |       `-MaterializeTemporaryExpr 0x563ee3276400 <col:26, col:58> 'String' xvalue
|       |         `-CXXBindTemporaryExpr 0x563ee32763e0 <col:26, col:58> 'String' (CXXTemporary 0x563ee32763e0)
|       |           `-CXXMemberCallExpr 0x563ee3276370 <col:26, col:58> 'String'
|       |             |-MemberExpr 0x563ee32762e0 <col:26> '<bound member function type>' ->find 0x563ee3268b18
|       |             | `-CXXThisExpr 0x563ee32762d0 <col:26> 'Args *' implicit this
|       |             |-ImplicitCastExpr 0x563ee32763a8 <col:31> 'const char *' <LValueToRValue>
|       |             | `-DeclRefExpr 0x563ee3276310 <col:31> 'const char *' lvalue ParmVar 0x563ee324e070 'keyword' 'const char *'
|       |             |-ImplicitCastExpr 0x563ee32763c0 <col:40> 'int' <LValueToRValue>
|       |             | `-DeclRefExpr 0x563ee3276330 <col:40> 'int' lvalue ParmVar 0x563ee324e0f0 'flags' 'int'
|       |             `-DeclRefExpr 0x563ee3276350 <col:47> 'Args::Slot *' lvalue Var 0x563ee32761d8 'slot_status' 'Args::Slot *'
|       |-ImplicitCastExpr 0x563ee3276500 <col:20> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x563ee32764e8 <col:20> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x563ee32764c8 <col:20> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x563ee3276498 <col:20> '<bound member function type>' .operator int (String::*)() const 0x563ee2ec5a18
|       |       `-ImplicitCastExpr 0x563ee3276480 <col:20> 'const String' lvalue <NoOp>
|       |         `-DeclRefExpr 0x563ee3276460 <col:20> 'String' lvalue Var 0x563ee3276268 'str' 'String'
|       `-CallExpr 0x563ee3276658 <line:779:13, col:60> '<dependent type>'
|         |-MemberExpr 0x563ee3276528 <col:13> '<bound member function type>' ->postparse 0x563ee3268d28
|         | `-CXXThisExpr 0x563ee3276518 <col:13> 'Args *' implicit this
|         |-CallExpr 0x563ee3276608 <col:23, col:46> '<dependent type>'
|         | |-CXXDependentScopeMemberExpr 0x563ee3276578 <col:23, col:30> '<dependent type>' lvalue .parse
|         | | `-DeclRefExpr 0x563ee3276558 <col:23> 'P' lvalue ParmVar 0x563ee324e168 'parser' 'P'
|         | |-DeclRefExpr 0x563ee32765c0 <col:36> 'String' lvalue Var 0x563ee3276268 'str' 'String'
|         | `-UnaryOperator 0x563ee32765f0 <col:41, col:42> 'Args' lvalue prefix '*' cannot overflow
|         |   `-CXXThisExpr 0x563ee32765e0 <col:42> 'Args *' this
|         `-DeclRefExpr 0x563ee3276638 <col:49> 'Args::Slot *' lvalue Var 0x563ee32761d8 'slot_status' 'Args::Slot *'
|-FunctionTemplateDecl 0x563ee324e6c8 <line:782:5, line:792:5> line:783:10 base_read_all_with
| |-TemplateTypeParmDecl 0x563ee324e398 <line:782:14, col:23> col:23 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x563ee324e628 <line:783:5, line:792:5> line:783:10 base_read_all_with 'void (const char *, int, P)'
|   |-ParmVarDecl 0x563ee324e450 <col:29, col:41> col:41 referenced keyword 'const char *'
|   |-ParmVarDecl 0x563ee324e4d0 <col:50, col:54> col:54 referenced flags 'int'
|   |-ParmVarDecl 0x563ee324e548 <col:61, col:63> col:63 referenced parser 'P'
|   `-CompoundStmt 0x563ee3277030 <col:71, line:792:5>
|     |-DeclStmt 0x563ee3276758 <line:784:9, col:26>
|     | `-VarDecl 0x563ee32766f0 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     |-DeclStmt 0x563ee3276828 <line:785:9, col:29>
|     | `-VarDecl 0x563ee3276788 <col:9, col:28> col:13 referenced read_status 'int' cinit
|     |   `-UnaryOperator 0x563ee3276810 <col:27, col:28> 'int' prefix '-'
|     |     `-IntegerLiteral 0x563ee32767f0 <col:28> 'int' 1
|     |-WhileStmt 0x563ee3276ee0 <line:786:9, line:790:9> has_var
|     | |-DeclStmt 0x563ee3276f00 <line:786:16, col:61>
|     | | `-VarDecl 0x563ee3276850 <col:16, col:61> col:23 referenced str 'String' cinit destroyed
|     | |   `-ExprWithCleanups 0x563ee3276a30 <col:29, col:61> 'String'
|     | |     `-CXXConstructExpr 0x563ee3276a00 <col:29, col:61> 'String' 'void (String &&)' elidable
|     | |       `-MaterializeTemporaryExpr 0x563ee32769e8 <col:29, col:61> 'String' xvalue
|     | |         `-CXXBindTemporaryExpr 0x563ee32769c8 <col:29, col:61> 'String' (CXXTemporary 0x563ee32769c8)
|     | |           `-CXXMemberCallExpr 0x563ee3276958 <col:29, col:61> 'String'
|     | |             |-MemberExpr 0x563ee32768c8 <col:29> '<bound member function type>' ->find 0x563ee3268b18
|     | |             | `-CXXThisExpr 0x563ee32768b8 <col:29> 'Args *' implicit this
|     | |             |-ImplicitCastExpr 0x563ee3276990 <col:34> 'const char *' <LValueToRValue>
|     | |             | `-DeclRefExpr 0x563ee32768f8 <col:34> 'const char *' lvalue ParmVar 0x563ee324e450 'keyword' 'const char *'
|     | |             |-ImplicitCastExpr 0x563ee32769a8 <col:43> 'int' <LValueToRValue>
|     | |             | `-DeclRefExpr 0x563ee3276918 <col:43> 'int' lvalue ParmVar 0x563ee324e4d0 'flags' 'int'
|     | |             `-DeclRefExpr 0x563ee3276938 <col:50> 'Args::Slot *' lvalue Var 0x563ee32766f0 'slot_status' 'Args::Slot *'
|     | |-ImplicitCastExpr 0x563ee3276ae8 <col:23> 'bool' <MemberPointerToBoolean>
|     | | `-ImplicitCastExpr 0x563ee3276ad0 <col:23> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|     | |   `-CXXMemberCallExpr 0x563ee3276ab0 <col:23> 'String::unspecified_bool_type':'int (String::*)() const'
|     | |     `-MemberExpr 0x563ee3276a80 <col:23> '<bound member function type>' .operator int (String::*)() const 0x563ee2ec5a18
|     | |       `-ImplicitCastExpr 0x563ee3276a68 <col:23> 'const String' lvalue <NoOp>
|     | |         `-DeclRefExpr 0x563ee3276a48 <col:23> 'String' lvalue Var 0x563ee3276850 'str' 'String'
|     | `-CompoundStmt 0x563ee3276eb8 <col:64, line:790:9>
|     |   |-CallExpr 0x563ee3276c40 <line:787:13, col:60> '<dependent type>'
|     |   | |-MemberExpr 0x563ee3276b10 <col:13> '<bound member function type>' ->postparse 0x563ee3268d28
|     |   | | `-CXXThisExpr 0x563ee3276b00 <col:13> 'Args *' implicit this
|     |   | |-CallExpr 0x563ee3276bf0 <col:23, col:46> '<dependent type>'
|     |   | | |-CXXDependentScopeMemberExpr 0x563ee3276b60 <col:23, col:30> '<dependent type>' lvalue .parse
|     |   | | | `-DeclRefExpr 0x563ee3276b40 <col:23> 'P' lvalue ParmVar 0x563ee324e548 'parser' 'P'
|     |   | | |-DeclRefExpr 0x563ee3276ba8 <col:36> 'String' lvalue Var 0x563ee3276850 'str' 'String'
|     |   | | `-UnaryOperator 0x563ee3276bd8 <col:41, col:42> 'Args' lvalue prefix '*' cannot overflow
|     |   | |   `-CXXThisExpr 0x563ee3276bc8 <col:42> 'Args *' this
|     |   | `-DeclRefExpr 0x563ee3276c20 <col:49> 'Args::Slot *' lvalue Var 0x563ee32766f0 'slot_status' 'Args::Slot *'
|     |   |-BinaryOperator 0x563ee3276dd8 <line:788:13, col:49> 'int' lvalue '='
|     |   | |-DeclRefExpr 0x563ee3276c70 <col:13> 'int' lvalue Var 0x563ee3276788 'read_status' 'int'
|     |   | `-ImplicitCastExpr 0x563ee3276dc0 <col:27, col:49> 'int' <IntegralCast>
|     |   |   `-BinaryOperator 0x563ee3276da0 <col:27, col:49> 'bool' '&&'
|     |   |     |-ParenExpr 0x563ee3276d08 <col:27, col:44> 'bool'
|     |   |     | `-BinaryOperator 0x563ee3276ce8 <col:28, col:43> 'bool' '!='
|     |   |     |   |-ImplicitCastExpr 0x563ee3276cd0 <col:28> 'int' <LValueToRValue>
|     |   |     |   | `-DeclRefExpr 0x563ee3276c90 <col:28> 'int' lvalue Var 0x563ee3276788 'read_status' 'int'
|     |   |     |   `-IntegerLiteral 0x563ee3276cb0 <col:43> 'int' 0
|     |   |     `-ImplicitCastExpr 0x563ee3276d88 <col:49> 'bool' <LValueToRValue>
|     |   |       `-MemberExpr 0x563ee3276d58 <col:49> 'bool' lvalue ->_read_status 0x563ee322b410
|     |   |         `-ImplicitCastExpr 0x563ee3276d38 <col:49> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|     |   |           `-CXXThisExpr 0x563ee3276d28 <col:49> 'Args *' implicit this
|     |   `-CompoundAssignOperator 0x563ee3276e88 <line:789:13, col:23> 'int' lvalue '&=' ComputeLHSTy='int' ComputeResultTy='int'
|     |     |-DeclRefExpr 0x563ee3276df8 <col:13> 'int' lvalue ParmVar 0x563ee324e4d0 'flags' 'int'
|     |     `-UnaryOperator 0x563ee3276e70 <col:22, col:23> 'int' prefix '~' cannot overflow
|     |       `-ImplicitCastExpr 0x563ee3276e58 <col:23> 'int' <LValueToRValue>
|     |         `-DeclRefExpr 0x563ee3276e38 <col:23> 'const int' lvalue Var 0x563ee3234e48 'mandatory' 'const int' non_odr_use_constant
|     `-BinaryOperator 0x563ee3277010 <line:791:9, col:41> 'bool' lvalue '='
|       |-MemberExpr 0x563ee3276f48 <col:9> 'bool' lvalue ->_read_status 0x563ee322b410
|       | `-ImplicitCastExpr 0x563ee3276f28 <col:9> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|       |   `-CXXThisExpr 0x563ee3276f18 <col:9> 'Args *' implicit this
|       `-ParenExpr 0x563ee3276ff0 <col:24, col:41> 'bool'
|         `-BinaryOperator 0x563ee3276fd0 <col:25, col:40> 'bool' '=='
|           |-ImplicitCastExpr 0x563ee3276fb8 <col:25> 'int' <LValueToRValue>
|           | `-DeclRefExpr 0x563ee3276f78 <col:25> 'int' lvalue Var 0x563ee3276788 'read_status' 'int'
|           `-IntegerLiteral 0x563ee3276f98 <col:40> 'int' 1
|-FunctionTemplateDecl 0x563ee324eba8 <line:794:5, line:805:5> line:795:10 base_read_all_with
| |-TemplateTypeParmDecl 0x563ee324e738 <line:794:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x563ee324e7b8 <col:26, col:35> col:35 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x563ee324eb08 <line:795:5, line:805:5> line:795:10 base_read_all_with 'void (const char *, int, P, T &)'
|   |-ParmVarDecl 0x563ee324e878 <col:29, col:41> col:41 referenced keyword 'const char *'
|   |-ParmVarDecl 0x563ee324e8f8 <col:50, col:54> col:54 referenced flags 'int'
|   |-ParmVarDecl 0x563ee324e970 <col:61, col:63> col:63 referenced parser 'P'
|   |-ParmVarDecl 0x563ee324ea18 <col:71, col:74> col:74 referenced variable 'T &'
|   `-CompoundStmt 0x563ee3277fc0 <col:84, line:805:5>
|     |-DeclStmt 0x563ee32770d8 <line:796:9, col:26>
|     | `-VarDecl 0x563ee3277070 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     |-DeclStmt 0x563ee32771a8 <line:797:9, col:29>
|     | `-VarDecl 0x563ee3277108 <col:9, col:28> col:13 referenced read_status 'int' cinit
|     |   `-UnaryOperator 0x563ee3277190 <col:27, col:28> 'int' prefix '-'
|     |     `-IntegerLiteral 0x563ee3277170 <col:28> 'int' 1
|     |-DeclStmt 0x563ee32774e0 <line:798:9, col:71>
|     | `-VarDecl 0x563ee32771f8 <col:9, col:70> col:12 referenced s 'T *' cinit
|     |   `-CallExpr 0x563ee32774b0 <col:16, col:70> '<dependent type>'
|     |     |-CXXDependentScopeMemberExpr 0x563ee3277420 <col:16, col:38> '<dependent type>' lvalue ->initialized_slot
|     |     |-DeclRefExpr 0x563ee3277468 <col:55> 'T' lvalue ParmVar 0x563ee324ea18 'variable' 'T &'
|     |     `-UnaryOperator 0x563ee3277498 <col:65, col:66> 'Args' lvalue prefix '*' cannot overflow
|     |       `-CXXThisExpr 0x563ee3277488 <col:66> 'Args *' this
|     |-WhileStmt 0x563ee3277e70 <line:799:9, line:803:9> has_var
|     | |-DeclStmt 0x563ee3277e90 <line:799:16, col:61>
|     | | `-VarDecl 0x563ee3277508 <col:16, col:61> col:23 referenced str 'String' cinit destroyed
|     | |   `-ExprWithCleanups 0x563ee32776e8 <col:29, col:61> 'String'
|     | |     `-CXXConstructExpr 0x563ee32776b8 <col:29, col:61> 'String' 'void (String &&)' elidable
|     | |       `-MaterializeTemporaryExpr 0x563ee32776a0 <col:29, col:61> 'String' xvalue
|     | |         `-CXXBindTemporaryExpr 0x563ee3277680 <col:29, col:61> 'String' (CXXTemporary 0x563ee3277680)
|     | |           `-CXXMemberCallExpr 0x563ee3277610 <col:29, col:61> 'String'
|     | |             |-MemberExpr 0x563ee3277580 <col:29> '<bound member function type>' ->find 0x563ee3268b18
|     | |             | `-CXXThisExpr 0x563ee3277570 <col:29> 'Args *' implicit this
|     | |             |-ImplicitCastExpr 0x563ee3277648 <col:34> 'const char *' <LValueToRValue>
|     | |             | `-DeclRefExpr 0x563ee32775b0 <col:34> 'const char *' lvalue ParmVar 0x563ee324e878 'keyword' 'const char *'
|     | |             |-ImplicitCastExpr 0x563ee3277660 <col:43> 'int' <LValueToRValue>
|     | |             | `-DeclRefExpr 0x563ee32775d0 <col:43> 'int' lvalue ParmVar 0x563ee324e8f8 'flags' 'int'
|     | |             `-DeclRefExpr 0x563ee32775f0 <col:50> 'Args::Slot *' lvalue Var 0x563ee3277070 'slot_status' 'Args::Slot *'
|     | |-ImplicitCastExpr 0x563ee32777a0 <col:23> 'bool' <MemberPointerToBoolean>
|     | | `-ImplicitCastExpr 0x563ee3277788 <col:23> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|     | |   `-CXXMemberCallExpr 0x563ee3277768 <col:23> 'String::unspecified_bool_type':'int (String::*)() const'
|     | |     `-MemberExpr 0x563ee3277738 <col:23> '<bound member function type>' .operator int (String::*)() const 0x563ee2ec5a18
|     | |       `-ImplicitCastExpr 0x563ee3277720 <col:23> 'const String' lvalue <NoOp>
|     | |         `-DeclRefExpr 0x563ee3277700 <col:23> 'String' lvalue Var 0x563ee3277508 'str' 'String'
|     | `-CompoundStmt 0x563ee3277e48 <col:64, line:803:9>
|     |   |-CallExpr 0x563ee3277bd0 <line:800:13, col:92> '<dependent type>'
|     |   | |-MemberExpr 0x563ee32777c8 <col:13> '<bound member function type>' ->postparse 0x563ee3268d28
|     |   | | `-CXXThisExpr 0x563ee32777b8 <col:13> 'Args *' implicit this
|     |   | |-BinaryOperator 0x563ee3277b90 <col:23, col:78> '<dependent type>' '&&'
|     |   | | |-DeclRefExpr 0x563ee32777f8 <col:23> 'T *' lvalue Var 0x563ee32771f8 's' 'T *'
|     |   | | `-CallExpr 0x563ee3277b50 <col:28, col:78> '<dependent type>'
|     |   | |   |-CXXDependentScopeMemberExpr 0x563ee32779e0 <col:28, col:50> '<dependent type>' lvalue ->parse
|     |   | |   |-DeclRefExpr 0x563ee3277a28 <col:56> 'P' lvalue ParmVar 0x563ee324e970 'parser' 'P'
|     |   | |   |-DeclRefExpr 0x563ee3277a48 <col:64> 'String' lvalue Var 0x563ee3277508 'str' 'String'
|     |   | |   |-CXXOperatorCallExpr 0x563ee3277af8 <col:69, col:70> '<dependent type>'
|     |   | |   | |-UnresolvedLookupExpr 0x563ee3277a88 <col:69> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x563ee30b9b48 0x563ee30b9768 0x563ee30b9398 0x563ee30b8fb8 0x563ee30b8bd8 0x563ee30b8808
|     |   | |   | `-DeclRefExpr 0x563ee3277a68 <col:70> 'T *' lvalue Var 0x563ee32771f8 's' 'T *'
|     |   | |   `-UnaryOperator 0x563ee3277b38 <col:73, col:74> 'Args' lvalue prefix '*' cannot overflow
|     |   | |     `-CXXThisExpr 0x563ee3277b28 <col:74> 'Args *' this
|     |   | `-DeclRefExpr 0x563ee3277bb0 <col:81> 'Args::Slot *' lvalue Var 0x563ee3277070 'slot_status' 'Args::Slot *'
|     |   |-BinaryOperator 0x563ee3277d68 <line:801:13, col:49> 'int' lvalue '='
|     |   | |-DeclRefExpr 0x563ee3277c00 <col:13> 'int' lvalue Var 0x563ee3277108 'read_status' 'int'
|     |   | `-ImplicitCastExpr 0x563ee3277d50 <col:27, col:49> 'int' <IntegralCast>
|     |   |   `-BinaryOperator 0x563ee3277d30 <col:27, col:49> 'bool' '&&'
|     |   |     |-ParenExpr 0x563ee3277c98 <col:27, col:44> 'bool'
|     |   |     | `-BinaryOperator 0x563ee3277c78 <col:28, col:43> 'bool' '!='
|     |   |     |   |-ImplicitCastExpr 0x563ee3277c60 <col:28> 'int' <LValueToRValue>
|     |   |     |   | `-DeclRefExpr 0x563ee3277c20 <col:28> 'int' lvalue Var 0x563ee3277108 'read_status' 'int'
|     |   |     |   `-IntegerLiteral 0x563ee3277c40 <col:43> 'int' 0
|     |   |     `-ImplicitCastExpr 0x563ee3277d18 <col:49> 'bool' <LValueToRValue>
|     |   |       `-MemberExpr 0x563ee3277ce8 <col:49> 'bool' lvalue ->_read_status 0x563ee322b410
|     |   |         `-ImplicitCastExpr 0x563ee3277cc8 <col:49> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|     |   |           `-CXXThisExpr 0x563ee3277cb8 <col:49> 'Args *' implicit this
|     |   `-CompoundAssignOperator 0x563ee3277e18 <line:802:13, col:23> 'int' lvalue '&=' ComputeLHSTy='int' ComputeResultTy='int'
|     |     |-DeclRefExpr 0x563ee3277d88 <col:13> 'int' lvalue ParmVar 0x563ee324e8f8 'flags' 'int'
|     |     `-UnaryOperator 0x563ee3277e00 <col:22, col:23> 'int' prefix '~' cannot overflow
|     |       `-ImplicitCastExpr 0x563ee3277de8 <col:23> 'int' <LValueToRValue>
|     |         `-DeclRefExpr 0x563ee3277dc8 <col:23> 'const int' lvalue Var 0x563ee3234e48 'mandatory' 'const int' non_odr_use_constant
|     `-BinaryOperator 0x563ee3277fa0 <line:804:9, col:41> 'bool' lvalue '='
|       |-MemberExpr 0x563ee3277ed8 <col:9> 'bool' lvalue ->_read_status 0x563ee322b410
|       | `-ImplicitCastExpr 0x563ee3277eb8 <col:9> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|       |   `-CXXThisExpr 0x563ee3277ea8 <col:9> 'Args *' implicit this
|       `-ParenExpr 0x563ee3277f80 <col:24, col:41> 'bool'
|         `-BinaryOperator 0x563ee3277f60 <col:25, col:40> 'bool' '=='
|           |-ImplicitCastExpr 0x563ee3277f48 <col:25> 'int' <LValueToRValue>
|           | `-DeclRefExpr 0x563ee3277f08 <col:25> 'int' lvalue Var 0x563ee3277108 'read_status' 'int'
|           `-IntegerLiteral 0x563ee3277f28 <col:40> 'int' 1
|-FunctionTemplateDecl 0x563ee324f188 <line:807:5, line:821:5> line:808:10 base_read_all
| |-TemplateTypeParmDecl 0x563ee324ec20 <line:807:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x563ee324ec98 <col:26, col:35> col:35 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x563ee324f0e8 <line:808:5, line:821:5> line:808:10 base_read_all 'void (const char *, int, P, Vector<T> &)'
|   |-ParmVarDecl 0x563ee324ed58 <col:24, col:36> col:36 referenced keyword 'const char *'
|   |-ParmVarDecl 0x563ee324edd8 <col:45, col:49> col:49 referenced flags 'int'
|   |-ParmVarDecl 0x563ee324ee50 <col:56, col:58> col:58 referenced parser 'P'
|   |-ParmVarDecl 0x563ee324efa0 <col:66, col:77> col:77 referenced variable 'Vector<T> &'
|   `-CompoundStmt 0x563ee3278dc8 <col:87, line:821:5>
|     |-DeclStmt 0x563ee3278070 <line:809:9, col:26>
|     | `-VarDecl 0x563ee3278008 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     |-DeclStmt 0x563ee3278140 <line:810:9, col:29>
|     | `-VarDecl 0x563ee32780a0 <col:9, col:28> col:13 referenced read_status 'int' cinit
|     |   `-UnaryOperator 0x563ee3278128 <col:27, col:28> 'int' prefix '-'
|     |     `-IntegerLiteral 0x563ee3278108 <col:28> 'int' 1
|     |-DeclStmt 0x563ee3278388 <line:811:9, col:38>
|     | `-VarDecl 0x563ee3278270 <col:9, col:37> col:20 referenced s 'Vector<T> *' cinit
|     |   `-CallExpr 0x563ee3278360 <col:24, col:37> '<dependent type>'
|     |     |-UnresolvedMemberExpr 0x563ee32782e8 <col:24> '<bound member function type>' lvalue
|     |     `-DeclRefExpr 0x563ee3278340 <col:29> 'Vector<T>' lvalue ParmVar 0x563ee324efa0 'variable' 'Vector<T> &'
|     |-WhileStmt 0x563ee3278c78 <line:812:9, line:819:9> has_var
|     | |-DeclStmt 0x563ee3278c98 <line:812:16, col:61>
|     | | `-VarDecl 0x563ee32783b0 <col:16, col:61> col:23 referenced str 'String' cinit destroyed
|     | |   `-ExprWithCleanups 0x563ee3278590 <col:29, col:61> 'String'
|     | |     `-CXXConstructExpr 0x563ee3278560 <col:29, col:61> 'String' 'void (String &&)' elidable
|     | |       `-MaterializeTemporaryExpr 0x563ee3278548 <col:29, col:61> 'String' xvalue
|     | |         `-CXXBindTemporaryExpr 0x563ee3278528 <col:29, col:61> 'String' (CXXTemporary 0x563ee3278528)
|     | |           `-CXXMemberCallExpr 0x563ee32784b8 <col:29, col:61> 'String'
|     | |             |-MemberExpr 0x563ee3278428 <col:29> '<bound member function type>' ->find 0x563ee3268b18
|     | |             | `-CXXThisExpr 0x563ee3278418 <col:29> 'Args *' implicit this
|     | |             |-ImplicitCastExpr 0x563ee32784f0 <col:34> 'const char *' <LValueToRValue>
|     | |             | `-DeclRefExpr 0x563ee3278458 <col:34> 'const char *' lvalue ParmVar 0x563ee324ed58 'keyword' 'const char *'
|     | |             |-ImplicitCastExpr 0x563ee3278508 <col:43> 'int' <LValueToRValue>
|     | |             | `-DeclRefExpr 0x563ee3278478 <col:43> 'int' lvalue ParmVar 0x563ee324edd8 'flags' 'int'
|     | |             `-DeclRefExpr 0x563ee3278498 <col:50> 'Args::Slot *' lvalue Var 0x563ee3278008 'slot_status' 'Args::Slot *'
|     | |-ImplicitCastExpr 0x563ee3278648 <col:23> 'bool' <MemberPointerToBoolean>
|     | | `-ImplicitCastExpr 0x563ee3278630 <col:23> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|     | |   `-CXXMemberCallExpr 0x563ee3278610 <col:23> 'String::unspecified_bool_type':'int (String::*)() const'
|     | |     `-MemberExpr 0x563ee32785e0 <col:23> '<bound member function type>' .operator int (String::*)() const 0x563ee2ec5a18
|     | |       `-ImplicitCastExpr 0x563ee32785c8 <col:23> 'const String' lvalue <NoOp>
|     | |         `-DeclRefExpr 0x563ee32785a8 <col:23> 'String' lvalue Var 0x563ee32783b0 'str' 'String'
|     | `-CompoundStmt 0x563ee3278c40 <col:64, line:819:9>
|     |   |-DeclStmt 0x563ee3278708 <line:813:13, col:23>
|     |   | `-VarDecl 0x563ee3278670 <col:13, col:22> col:15 referenced sx 'T' cinit
|     |   |   `-CXXUnresolvedConstructExpr 0x563ee32786e8 <col:20, col:22> 'T' 'T'
|     |   |-CallExpr 0x563ee3278888 <line:814:13, col:64> '<dependent type>'
|     |   | |-MemberExpr 0x563ee3278730 <col:13> '<bound member function type>' ->postparse 0x563ee3268d28
|     |   | | `-CXXThisExpr 0x563ee3278720 <col:13> 'Args *' implicit this
|     |   | |-CallExpr 0x563ee3278830 <col:23, col:50> '<dependent type>'
|     |   | | |-CXXDependentScopeMemberExpr 0x563ee3278780 <col:23, col:30> '<dependent type>' lvalue .parse
|     |   | | | `-DeclRefExpr 0x563ee3278760 <col:23> 'P' lvalue ParmVar 0x563ee324ee50 'parser' 'P'
|     |   | | |-DeclRefExpr 0x563ee32787c8 <col:36> 'String' lvalue Var 0x563ee32783b0 'str' 'String'
|     |   | | |-DeclRefExpr 0x563ee32787e8 <col:41> 'T' lvalue Var 0x563ee3278670 'sx' 'T'
|     |   | | `-UnaryOperator 0x563ee3278818 <col:45, col:46> 'Args' lvalue prefix '*' cannot overflow
|     |   | |   `-CXXThisExpr 0x563ee3278808 <col:46> 'Args *' this
|     |   | `-DeclRefExpr 0x563ee3278868 <col:53> 'Args::Slot *' lvalue Var 0x563ee3278008 'slot_status' 'Args::Slot *'
|     |   |-IfStmt 0x563ee32789e0 <line:815:13, line:816:32>
|     |   | |-ImplicitCastExpr 0x563ee3278918 <line:815:17> 'bool' <LValueToRValue>
|     |   | | `-MemberExpr 0x563ee32788e8 <col:17> 'bool' lvalue ->_read_status 0x563ee322b410
|     |   | |   `-ImplicitCastExpr 0x563ee32788c8 <col:17> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|     |   | |     `-CXXThisExpr 0x563ee32788b8 <col:17> 'Args *' implicit this
|     |   | `-CallExpr 0x563ee32789b8 <line:816:17, col:32> '<dependent type>'
|     |   |   |-CXXDependentScopeMemberExpr 0x563ee3278950 <col:17, col:20> '<dependent type>' lvalue ->push_back
|     |   |   | `-DeclRefExpr 0x563ee3278930 <col:17> 'Vector<T> *' lvalue Var 0x563ee3278270 's' 'Vector<T> *'
|     |   |   `-DeclRefExpr 0x563ee3278998 <col:30> 'T' lvalue Var 0x563ee3278670 'sx' 'T'
|     |   |-BinaryOperator 0x563ee3278b60 <line:817:13, col:49> 'int' lvalue '='
|     |   | |-DeclRefExpr 0x563ee32789f8 <col:13> 'int' lvalue Var 0x563ee32780a0 'read_status' 'int'
|     |   | `-ImplicitCastExpr 0x563ee3278b48 <col:27, col:49> 'int' <IntegralCast>
|     |   |   `-BinaryOperator 0x563ee3278b28 <col:27, col:49> 'bool' '&&'
|     |   |     |-ParenExpr 0x563ee3278a90 <col:27, col:44> 'bool'
|     |   |     | `-BinaryOperator 0x563ee3278a70 <col:28, col:43> 'bool' '!='
|     |   |     |   |-ImplicitCastExpr 0x563ee3278a58 <col:28> 'int' <LValueToRValue>
|     |   |     |   | `-DeclRefExpr 0x563ee3278a18 <col:28> 'int' lvalue Var 0x563ee32780a0 'read_status' 'int'
|     |   |     |   `-IntegerLiteral 0x563ee3278a38 <col:43> 'int' 0
|     |   |     `-ImplicitCastExpr 0x563ee3278b10 <col:49> 'bool' <LValueToRValue>
|     |   |       `-MemberExpr 0x563ee3278ae0 <col:49> 'bool' lvalue ->_read_status 0x563ee322b410
|     |   |         `-ImplicitCastExpr 0x563ee3278ac0 <col:49> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|     |   |           `-CXXThisExpr 0x563ee3278ab0 <col:49> 'Args *' implicit this
|     |   `-CompoundAssignOperator 0x563ee3278c10 <line:818:13, col:23> 'int' lvalue '&=' ComputeLHSTy='int' ComputeResultTy='int'
|     |     |-DeclRefExpr 0x563ee3278b80 <col:13> 'int' lvalue ParmVar 0x563ee324edd8 'flags' 'int'
|     |     `-UnaryOperator 0x563ee3278bf8 <col:22, col:23> 'int' prefix '~' cannot overflow
|     |       `-ImplicitCastExpr 0x563ee3278be0 <col:23> 'int' <LValueToRValue>
|     |         `-DeclRefExpr 0x563ee3278bc0 <col:23> 'const int' lvalue Var 0x563ee3234e48 'mandatory' 'const int' non_odr_use_constant
|     `-BinaryOperator 0x563ee3278da8 <line:820:9, col:41> 'bool' lvalue '='
|       |-MemberExpr 0x563ee3278ce0 <col:9> 'bool' lvalue ->_read_status 0x563ee322b410
|       | `-ImplicitCastExpr 0x563ee3278cc0 <col:9> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|       |   `-CXXThisExpr 0x563ee3278cb0 <col:9> 'Args *' implicit this
|       `-ParenExpr 0x563ee3278d88 <col:24, col:41> 'bool'
|         `-BinaryOperator 0x563ee3278d68 <col:25, col:40> 'bool' '=='
|           |-ImplicitCastExpr 0x563ee3278d50 <col:25> 'int' <LValueToRValue>
|           | `-DeclRefExpr 0x563ee3278d10 <col:25> 'int' lvalue Var 0x563ee32780a0 'read_status' 'int'
|           `-IntegerLiteral 0x563ee3278d30 <col:40> 'int' 1
|-AccessSpecDecl 0x563ee324f200 <line:824:3, col:10> col:3 private
|-CXXRecordDecl 0x563ee324f228 prev 0x563ee3233148 <line:826:5, line:833:5> line:826:12 referenced struct Slot definition
| |-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple non_trivial has_const_param implicit_has_const_param
| | |-MoveConstructor
| | |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| | |-MoveAssignment
| | `-Destructor non_trivial user_declared
| |-CXXRecordDecl 0x563ee324f320 <col:5, col:12> col:12 implicit referenced struct Slot
| |-CXXConstructorDecl 0x563ee324f410 <line:827:9, line:828:9> line:827:9 used Slot 'void ()'
| | `-CompoundStmt 0x563ee3278e00 <col:16, line:828:9>
| |-CXXDestructorDecl 0x563ee324f500 <line:829:9, line:830:9> line:829:17 used ~Slot 'void () noexcept' virtual
| | `-CompoundStmt 0x563ee3278e10 <col:25, line:830:9>
| |-CXXMethodDecl 0x563ee324f600 <line:831:9, col:32> col:22 store 'void ()' virtual pure
| |-FieldDecl 0x563ee324f6b0 <line:832:9, col:15> col:15 _next 'Args::Slot *'
| |-CXXMethodDecl 0x563ee324f758 <line:826:12> col:12 implicit operator= 'Args::Slot &(const Args::Slot &)' inline default noexcept-unevaluated 0x563ee324f758
| | `-ParmVarDecl 0x563ee324f868 <col:12> col:12 'const Args::Slot &'
| `-CXXConstructorDecl 0x563ee3250028 <col:12> col:12 implicit constexpr Slot 'void (const Args::Slot &)' inline default noexcept-unevaluated 0x563ee3250028
|   `-ParmVarDecl 0x563ee3250138 <col:12> col:12 'const Args::Slot &'
|-CXXRecordDecl 0x563ee324f8d8 <line:835:5, line:848:5> line:835:12 struct BytesSlot definition
| |-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor
| | |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveConstructor needs_overload_resolution
| | |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| | |-MoveAssignment needs_overload_resolution
| | `-Destructor non_trivial user_declared needs_overload_resolution
| |-public 'Args::Slot'
| |-CXXRecordDecl 0x563ee324fa38 <col:5, col:12> col:12 implicit referenced struct BytesSlot
| |-CXXConstructorDecl 0x563ee324fc30 <line:836:9, line:838:9> line:836:9 BytesSlot 'void (void *, size_t)'
| | |-ParmVarDecl 0x563ee324fae0 <col:19, col:25> col:25 used ptr 'void *'
| | |-ParmVarDecl 0x563ee324fb58 <col:30, col:37> col:37 used size 'size_t':'unsigned long'
| | |-CXXCtorInitializer 'Args::Slot'
| | | `-CXXConstructExpr 0x563ee3278ff0 <col:9> 'Args::Slot' 'void ()'
| | |-CXXCtorInitializer Field 0x563ee324fee8 '_ptr' 'void *'
| | | `-ImplicitCastExpr 0x563ee3278e60 <line:837:20> 'void *' <LValueToRValue>
| | |   `-DeclRefExpr 0x563ee3278e20 <col:20> 'void *' lvalue ParmVar 0x563ee324fae0 'ptr' 'void *'
| | |-CXXCtorInitializer Field 0x563ee324ff50 '_slot' 'char *'
| | | `-CXXNewExpr 0x563ee3278ee8 <col:32, col:45> 'char *' array Function 0x563ee2ce8688 'operator new[]' 'void *(std::size_t)'
| | |   `-ImplicitCastExpr 0x563ee3278ed0 <col:41> 'size_t':'unsigned long' <LValueToRValue>
| | |     `-DeclRefExpr 0x563ee3278ea0 <col:41> 'size_t':'unsigned long' lvalue ParmVar 0x563ee324fb58 'size' 'size_t':'unsigned long'
| | |-CXXCtorInitializer Field 0x563ee324ffb0 '_size' 'size_t':'unsigned long'
| | | `-ImplicitCastExpr 0x563ee3278fb0 <col:55> 'size_t':'unsigned long' <LValueToRValue>
| | |   `-DeclRefExpr 0x563ee3278f70 <col:55> 'size_t':'unsigned long' lvalue ParmVar 0x563ee324fb58 'size' 'size_t':'unsigned long'
| | `-CompoundStmt 0x563ee3279070 <col:61, line:838:9>
| |-CXXDestructorDecl 0x563ee324fd30 <line:839:9, line:841:9> line:839:9 ~BytesSlot 'void () noexcept'
| | |-Overrides: [ 0x563ee324f500 Slot::~Slot 'void () noexcept' ]
| | `-CompoundStmt 0x563ee32790f8 <col:22, line:841:9>
| |   `-CXXDeleteExpr 0x563ee32790d8 <line:840:13, col:22> 'void' array Function 0x563ee2ce89e8 'operator delete[]' 'void (void *) noexcept'
| |     `-ImplicitCastExpr 0x563ee32790c0 <col:22> 'char *' <LValueToRValue>
| |       `-MemberExpr 0x563ee3279090 <col:22> 'char *' lvalue ->_slot 0x563ee324ff50
| |         `-CXXThisExpr 0x563ee3279080 <col:22> 'Args::BytesSlot *' implicit this
| |-CXXMethodDecl 0x563ee324fe30 <line:842:9, line:844:9> line:842:14 store 'void ()'
| | |-Overrides: [ 0x563ee324f600 Slot::store 'void ()' ]
| | `-CompoundStmt 0x563ee32792e8 <col:22, line:844:9>
| |   `-CallExpr 0x563ee3279250 <line:843:13, col:38> 'void *'
| |     |-ImplicitCastExpr 0x563ee3279238 <col:13> 'void *(*)(void *__restrict, const void *__restrict, size_t) throw()' <FunctionToPointerDecay>
| |     | `-DeclRefExpr 0x563ee3279218 <col:13> 'void *(void *__restrict, const void *__restrict, size_t) throw()' lvalue Function 0x563ee2df4468 'memcpy' 'void *(void *__restrict, const void *__restrict, size_t) throw()'
| |     |-ImplicitCastExpr 0x563ee3279288 <col:20> 'void *' <LValueToRValue>
| |     | `-MemberExpr 0x563ee3279168 <col:20> 'void *' lvalue ->_ptr 0x563ee324fee8
| |     |   `-CXXThisExpr 0x563ee3279158 <col:20> 'Args::BytesSlot *' implicit this
| |     |-ImplicitCastExpr 0x563ee32792b8 <col:26> 'const void *' <BitCast>
| |     | `-ImplicitCastExpr 0x563ee32792a0 <col:26> 'char *' <LValueToRValue>
| |     |   `-MemberExpr 0x563ee32791a8 <col:26> 'char *' lvalue ->_slot 0x563ee324ff50
| |     |     `-CXXThisExpr 0x563ee3279198 <col:26> 'Args::BytesSlot *' implicit this
| |     `-ImplicitCastExpr 0x563ee32792d0 <col:33> 'size_t':'unsigned long' <LValueToRValue>
| |       `-MemberExpr 0x563ee32791e8 <col:33> 'size_t':'unsigned long' lvalue ->_size 0x563ee324ffb0
| |         `-CXXThisExpr 0x563ee32791d8 <col:33> 'Args::BytesSlot *' implicit this
| |-FieldDecl 0x563ee324fee8 <line:845:9, col:15> col:15 referenced _ptr 'void *'
| |-FieldDecl 0x563ee324ff50 <line:846:9, col:15> col:15 referenced _slot 'char *'
| |-FieldDecl 0x563ee324ffb0 <line:847:9, col:16> col:16 referenced _size 'size_t':'unsigned long'
| |-CXXConstructorDecl 0x563ee32501a8 <line:835:12> col:12 implicit constexpr BytesSlot 'void (const Args::BytesSlot &)' inline default noexcept-unevaluated 0x563ee32501a8
| | `-ParmVarDecl 0x563ee32502b8 <col:12> col:12 'const Args::BytesSlot &'
| `-CXXMethodDecl 0x563ee3250358 <col:12> col:12 implicit operator= 'Args::BytesSlot &(const Args::BytesSlot &)' inline default noexcept-unevaluated 0x563ee3250358
|   `-ParmVarDecl 0x563ee3250468 <col:12> col:12 'const Args::BytesSlot &'
|-ClassTemplateDecl 0x563ee3250608 <line:850:5, line:860:5> line:851:12 SlotT
| |-TemplateTypeParmDecl 0x563ee32504d8 <line:850:14, col:23> col:23 referenced typename depth 0 index 0 T
| `-CXXRecordDecl 0x563ee3250578 <line:851:5, line:860:5> line:851:12 struct SlotT definition
|   |-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
|   | |-DefaultConstructor
|   | |-CopyConstructor simple non_trivial has_const_param needs_implicit needs_overload_resolution implicit_has_const_param
|   | |-MoveConstructor exists simple non_trivial needs_implicit needs_overload_resolution
|   | |-CopyAssignment non_trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple non_trivial needs_implicit needs_overload_resolution
|   | `-Destructor simple non_trivial needs_implicit needs_overload_resolution
|   |-public 'Args::Slot'
|   |-CXXRecordDecl 0x563ee32508a0 <col:5, col:12> col:12 implicit referenced struct SlotT
|   |-CXXConstructorDecl 0x563ee3250a98 <line:852:9, line:854:9> line:852:9 SlotT<T> 'void (T *)'
|   | |-ParmVarDecl 0x563ee3250968 <col:15, col:18> col:18 referenced ptr 'T *'
|   | |-CXXCtorInitializer Field 0x563ee3250c18 '_ptr' 'T *'
|   | | `-ParenListExpr 0x563ee3279320 <line:853:19, col:23> 'NULL TYPE'
|   | |   `-DeclRefExpr 0x563ee3279300 <col:20> 'T *' lvalue ParmVar 0x563ee3250968 'ptr' 'T *'
|   | `-CompoundStmt 0x563ee3279370 <col:25, line:854:9>
|   |-CXXMethodDecl 0x563ee3250b68 <line:855:9, line:857:9> line:855:14 store 'void ()'
|   | |-Overrides: [ 0x563ee324f600 Slot::store 'void ()' ]
|   | `-CompoundStmt 0x563ee3279520 <col:22, line:857:9>
|   |   `-CallExpr 0x563ee32794f0 <line:856:13, col:40> '<dependent type>'
|   |     |-UnresolvedLookupExpr 0x563ee3279380 <col:13> '<overloaded function type>' lvalue (ADL) = 'assign_consume' 0x563ee2eacb98 0x563ee2e56ec8
|   |     |-CXXOperatorCallExpr 0x563ee3279480 <col:28, col:29> '<dependent type>'
|   |     | |-UnresolvedLookupExpr 0x563ee3279410 <col:28> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x563ee30b9b48 0x563ee30b9768 0x563ee30b9398 0x563ee30b8fb8 0x563ee30b8bd8 0x563ee30b8808
|   |     | `-MemberExpr 0x563ee32793e0 <col:29> 'T *' lvalue ->_ptr 0x563ee3250c18
|   |     |   `-CXXThisExpr 0x563ee32793d0 <col:29> 'SlotT<T> *' implicit this
|   |     `-MemberExpr 0x563ee32794c0 <col:35> 'T' lvalue ->_slot 0x563ee3250c78
|   |       `-CXXThisExpr 0x563ee32794b0 <col:35> 'SlotT<T> *' implicit this
|   |-FieldDecl 0x563ee3250c18 <line:858:9, col:12> col:12 referenced _ptr 'T *'
|   `-FieldDecl 0x563ee3250c78 <line:859:9, col:11> col:11 referenced _slot 'T'
|-EnumDecl 0x563ee3250ce0 <line:862:5, line:868:5> line:862:5
| `-EnumConstantDecl 0x563ee3250de0 <line:866:9, col:31> col:9 referenced simple_slotbuf_size 'Args::(anonymous enum at ../dummy_inc/click/args.hh:862:5)'
|   `-ImplicitCastExpr 0x563ee3250e30 <col:31> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x563ee3250dc0 <col:31> 'int' Int: 48
|       `-IntegerLiteral 0x563ee3250da0 <col:31> 'int' 48
|-FieldDecl 0x563ee3250e58 <line:871:5, col:10> col:10 _my_conf 'bool'
|-FieldDecl 0x563ee3250eb8 <line:876:5, col:10> col:10 referenced _status 'bool'
|-FieldDecl 0x563ee3250f18 <line:877:5, col:13> col:13 _simple_slotpos 'uint8_t':'unsigned char'
|-FieldDecl 0x563ee3251050 <line:879:5, col:21> col:21 referenced _conf 'Vector<String> *'
|-FieldDecl 0x563ee3267b10 <line:880:5, col:17> col:17 referenced _kwpos 'Vector<int>':'Vector<int>'
|-FieldDecl 0x563ee3268420 <line:882:5, col:11> col:11 referenced _slots 'Args::Slot *'
|-FieldDecl 0x563ee32684d0 <line:883:5, col:48> col:13 referenced _simple_slotbuf 'uint8_t [48]'
|-CXXMethodDecl 0x563ee32686f8 <line:885:5, col:54> col:17 initialize 'void (const Vector<String> *)' inline
| `-ParmVarDecl 0x563ee3268600 <col:28, col:50> col:50 conf 'const Vector<String> *'
|-CXXMethodDecl 0x563ee3268848 <line:886:5, col:26> col:10 used reset_from 'void (int)'
| `-ParmVarDecl 0x563ee32687b8 <col:21, col:25> col:25 i 'int'
|-CXXMethodDecl 0x563ee3268b18 <line:888:5, col:67> col:12 referenced find 'String (const char *, int, Args::Slot *&)'
| |-ParmVarDecl 0x563ee3268908 <col:17, col:29> col:29 keyword 'const char *'
| |-ParmVarDecl 0x563ee3268988 <col:38, col:42> col:42 flags 'int'
| `-ParmVarDecl 0x563ee3268a30 <col:49, col:56> col:56 slot_status 'Args::Slot *&'
|-CXXMethodDecl 0x563ee3268d28 <line:889:5, col:46> col:10 referenced postparse 'void (bool, Args::Slot *)'
| |-ParmVarDecl 0x563ee3268be0 <col:20, col:25> col:25 ok 'bool'
| `-ParmVarDecl 0x563ee3268c58 <col:29, col:35> col:35 slot_status 'Args::Slot *'
|-CXXMethodDecl 0x563ee3268df8 <line:890:5, col:25> col:10 check_complete 'void ()'
|-CXXMethodDecl 0x563ee3268f48 <line:892:5, col:48> col:23 simple_slot_size 'int (int)' static inline
| `-ParmVarDecl 0x563ee3268eb0 <col:40, col:44> col:44 size 'int'
|-CXXMethodDecl 0x563ee32692d8 <line:893:5, line:894:62> line:893:17 simple_slot_info 'void (int, int, void *&, void **&)' inline
| |-ParmVarDecl 0x563ee3269008 <col:34, col:38> col:38 offset 'int'
| |-ParmVarDecl 0x563ee3269088 <col:46, col:50> col:50 size 'int'
| |-ParmVarDecl 0x563ee3269130 <line:894:34, col:41> col:41 slot 'void *&'
| `-ParmVarDecl 0x563ee32691e8 <col:47, col:55> col:55 pointer 'void **&'
|-CXXMethodDecl 0x563ee3269500 <line:895:5, col:46> col:11 referenced simple_slot 'void *(void *, size_t)'
| |-ParmVarDecl 0x563ee32693b0 <col:23, col:29> col:29 data 'void *'
| `-ParmVarDecl 0x563ee3269428 <col:35, col:42> col:42 size 'size_t':'unsigned long'
`-FunctionTemplateDecl 0x563ee3269818 <line:896:5, col:53> col:29 complex_slot
  |-TemplateTypeParmDecl 0x563ee32695b0 <col:14, col:23> col:23 referenced typename depth 0 index 0 T
  `-CXXMethodDecl 0x563ee3269778 <col:26, col:53> col:29 complex_slot 'T *(T &)'
    `-ParmVarDecl 0x563ee3269688 <col:42, col:45> col:45 variable 'T &'

Layout: <CGRecordLayout
  LLVMType:%class.Args = type { %class.ArgContext.base, i8, i8, i8, %class.Vector.0*, %class.Vector.5, %"struct.Args::Slot"*, [48 x i8] }
  NonVirtualBaseLLVMType:%class.Args = type { %class.ArgContext.base, i8, i8, i8, %class.Vector.0*, %class.Vector.5, %"struct.Args::Slot"*, [48 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class NumArg (empty)
           | [sizeof=1, dsize=1, align=1,
           |  nvsize=1, nvalign=1]

*** Dumping AST Record Layout
         0 | class BandwidthArg
         0 |   class NumArg (base) (empty)
         0 |   int status
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563ee3283a40 <../dummy_inc/click/args.hh:1013:1, line:1027:1> line:1013:7 referenced class NumArg definition
|-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |-DefaultConstructor exists trivial constexpr defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x563ee3283b58 <col:1, col:7> col:7 implicit class NumArg
|-AccessSpecDecl 0x563ee3283be8 <col:16, col:22> col:16 public
|-EnumDecl 0x563ee3283c10 <line:1014:5, line:1026:5> line:1014:5
| |-EnumConstantDecl 0x563ee3283d10 <line:1015:9, col:21> col:9 status_ok 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| | `-ImplicitCastExpr 0x563ee3283f60 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563ee3283cf0 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x563ee3283cd0 <col:21> 'int' 0
| |-EnumConstantDecl 0x563ee3283da0 <line:1016:9, col:24> col:9 referenced status_inval 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| | `-ImplicitCastExpr 0x563ee3283f78 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563ee3283d80 <col:24> 'int' Int: 22
| |     `-IntegerLiteral 0x563ee3283d60 <col:24> 'int' 22
| |-EnumConstantDecl 0x563ee3283e30 <line:1017:9, col:24> col:9 referenced status_range 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| | `-ImplicitCastExpr 0x563ee3283f90 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563ee3283e10 <col:24> 'int' Int: 34
| |     `-IntegerLiteral 0x563ee3283df0 <col:24> 'int' 34
| |-EnumConstantDecl 0x563ee3283ec0 <line:1019:9, col:25> col:9 status_notsup 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| | `-ImplicitCastExpr 0x563ee3283fa8 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563ee3283ea0 <col:25> 'int' Int: 95
| |     `-IntegerLiteral 0x563ee3283e80 <col:25> 'int' 95
| `-EnumConstantDecl 0x563ee3283f10 <line:1025:9> col:9 status_unitless 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
|-CXXConstructorDecl 0x563ee3285930 <line:1013:7> col:7 implicit used constexpr NumArg 'void () noexcept' inline default trivial
| `-CompoundStmt 0x563ee3285d68 <col:7>
|-CXXConstructorDecl 0x563ee3285a38 <col:7> col:7 implicit constexpr NumArg 'void (const NumArg &)' inline default trivial noexcept-unevaluated 0x563ee3285a38
| `-ParmVarDecl 0x563ee3285b48 <col:7> col:7 'const NumArg &'
|-CXXConstructorDecl 0x563ee3285be8 <col:7> col:7 implicit used constexpr NumArg 'void (NumArg &&) noexcept' inline default trivial
| |-ParmVarDecl 0x563ee3285cf8 <col:7> col:7 'NumArg &&'
| `-CompoundStmt 0x563ee333b9a0 <col:7>
`-CXXDestructorDecl 0x563ee3287e68 <col:7> col:7 implicit ~NumArg 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.NumArg = type { i8 }
  NonVirtualBaseLLVMType:%class.NumArg = type { i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563ee3292bf0 <../dummy_inc/click/args.hh:1284:1, line:1288:1> line:1284:7 referenced class BandwidthArg definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-public 'NumArg'
|-CXXRecordDecl 0x563ee3292d48 <col:1, col:7> col:7 implicit class BandwidthArg
|-AccessSpecDecl 0x563ee3292dd8 <col:38, col:44> col:38 public
|-CXXMethodDecl 0x563ee3292fd0 <line:1285:5, col:84> col:10 parse 'bool (const String &, uint32_t &, const ArgContext &)'
| |-ParmVarDecl 0x563ee3292e10 <col:16, col:30> col:30 str 'const String &'
| |-ParmVarDecl 0x563ee3292e88 <col:35, col:45> col:45 result 'uint32_t &'
| `-ParmVarDecl 0x563ee3292f00 <col:53, col:74> col:72 'const ArgContext &' cinit
|   `-DeclRefExpr 0x563ee3293250 <col:74> 'const ArgContext' lvalue Var 0x563ee3279548 'blank_args' 'const ArgContext'
|-CXXMethodDecl 0x563ee3293128 <line:1286:5, col:37> col:19 unparse 'String (uint32_t)' static
| `-ParmVarDecl 0x563ee3293098 <col:27, col:36> col:36 x 'uint32_t':'unsigned int'
|-FieldDecl 0x563ee32931e8 <line:1287:5, col:9> col:9 referenced status 'int'
|-CXXConstructorDecl 0x563ee33162c0 <line:1284:7> col:7 implicit referenced BandwidthArg 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x563ee333aee0 <col:7> col:7 implicit constexpr BandwidthArg 'void (const BandwidthArg &)' inline default trivial noexcept-unevaluated 0x563ee333aee0
| `-ParmVarDecl 0x563ee333aff8 <col:7> col:7 'const BandwidthArg &'
|-CXXConstructorDecl 0x563ee333b098 <col:7> col:7 implicit used constexpr BandwidthArg 'void (BandwidthArg &&) noexcept' inline default trivial
| |-ParmVarDecl 0x563ee333b1a8 <col:7> col:7 used 'BandwidthArg &&'
| |-CXXCtorInitializer 'NumArg'
| | `-CXXConstructExpr 0x563ee333b9b0 <col:7> 'NumArg' 'void (NumArg &&) noexcept'
| |   `-ImplicitCastExpr 0x563ee333b980 <col:7> 'NumArg' xvalue <UncheckedDerivedToBase (NumArg)>
| |     `-CXXStaticCastExpr 0x563ee333b950 <col:7> 'BandwidthArg' xvalue static_cast<class BandwidthArg &&> <NoOp>
| |       `-DeclRefExpr 0x563ee333b920 <col:7> 'BandwidthArg' lvalue ParmVar 0x563ee333b1a8 '' 'BandwidthArg &&'
| |-CXXCtorInitializer Field 0x563ee32931e8 'status' 'int'
| | `-ImplicitCastExpr 0x563ee333baa8 <col:7> 'int' <LValueToRValue>
| |   `-MemberExpr 0x563ee333ba78 <col:7> 'int' xvalue .status 0x563ee32931e8
| |     `-CXXStaticCastExpr 0x563ee333ba48 <col:7> 'BandwidthArg' xvalue static_cast<class BandwidthArg &&> <NoOp>
| |       `-DeclRefExpr 0x563ee333ba18 <col:7> 'BandwidthArg' lvalue ParmVar 0x563ee333b1a8 '' 'BandwidthArg &&'
| `-CompoundStmt 0x563ee333baf8 <col:7>
`-CXXDestructorDecl 0x563ee333b248 <col:7> col:7 implicit referenced ~BandwidthArg 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.BandwidthArg = type { i32 }
  NonVirtualBaseLLVMType:%class.BandwidthArg = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class WritablePacket
         0 |   class Packet (base)
         0 |     class atomic_uint32_t _use_count
         0 |       uint32_t _val
         8 |     class Packet * _data_packet
        16 |     unsigned char * _head
        24 |     unsigned char * _data
        32 |     unsigned char * _tail
        40 |     unsigned char * _end
        48 |     struct Packet::AllAnno _aa
        48 |       union Packet::Anno cb
        48 |         char [48] c
        48 |         uint8_t [48] u8
        48 |         uint16_t [24] u16
        48 |         uint32_t [12] u32
        48 |         uint64_t [6] u64
        96 |       unsigned char * mac
       104 |       unsigned char * nh
       112 |       unsigned char * h
       120 |       enum Packet::PacketType pkt_type
       124 |       char [8] timestamp
       136 |       class Packet * next
       144 |       class Packet * prev
       152 |     Packet::buffer_destructor_type _destructor
       160 |     void * _destructor_argument
           | [sizeof=168, dsize=168, align=8,
           |  nvsize=168, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563ee30e1450 prev 0x563ee30bdd10 <../dummy_inc/click/packet.hh:778:1, line:816:1> line:778:7 referenced class WritablePacket definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-public 'Packet'
|-CXXRecordDecl 0x563ee30e1588 <col:1, col:7> col:7 implicit referenced class WritablePacket
|-AccessSpecDecl 0x563ee30e1618 <col:40, col:46> col:40 public
|-CXXMethodDecl 0x563ee30e16c0 <line:780:5, col:62> col:55 data 'unsigned char *() const'
| |-NoInlineAttr 0x563ee30e1760 <col:20>
| `-OptimizeNoneAttr 0x563ee30e17b8 <col:30>
|-CXXMethodDecl 0x563ee30e1808 <line:781:5, col:66> col:55 end_data 'unsigned char *() const'
| |-NoInlineAttr 0x563ee30e18a8 <col:20>
| `-OptimizeNoneAttr 0x563ee30e1900 <col:30>
|-CXXMethodDecl 0x563ee30e1950 <line:782:5, col:36> col:27 buffer 'unsigned char *() const' inline
|-CXXMethodDecl 0x563ee30e1a18 <line:783:5, col:40> col:27 end_buffer 'unsigned char *() const' inline
|-CXXMethodDecl 0x563ee30e1ae0 <line:784:5, col:40> col:27 mac_header 'unsigned char *() const' inline
|-CXXMethodDecl 0x563ee30e1bf8 <line:785:5, col:40> col:25 ether_header 'click_ether *() const' inline
|-CXXMethodDecl 0x563ee30e1cc0 <line:786:5, col:72> col:55 network_header 'unsigned char *() const'
| |-NoInlineAttr 0x563ee30e1d60 <col:20>
| `-OptimizeNoneAttr 0x563ee30e1db8 <col:30>
|-CXXMethodDecl 0x563ee30e1e28 <line:787:5, col:62> col:50 ip_header 'click_ip *() const'
| |-NoInlineAttr 0x563ee30e1ec8 <col:20>
| `-OptimizeNoneAttr 0x563ee30e1f20 <col:30>
|-CXXMethodDecl 0x563ee30e1fc8 <line:788:5, col:64> col:51 ip6_header 'click_ip6 *() const'
| |-NoInlineAttr 0x563ee30e2068 <col:20>
| `-OptimizeNoneAttr 0x563ee30e20c0 <col:30>
|-CXXMethodDecl 0x563ee30e2110 <line:789:5, col:46> col:27 transport_header 'unsigned char *() const' inline
|-CXXMethodDecl 0x563ee30e2228 <line:790:5, col:38> col:24 icmp_header 'click_icmp *() const' inline
|-CXXMethodDecl 0x563ee30e2348 <line:791:5, col:36> col:23 tcp_header 'click_tcp *() const' inline
|-CXXMethodDecl 0x563ee30e2468 <line:792:5, col:36> col:23 udp_header 'click_udp *() const' inline
|-CXXMethodDecl 0x563ee30e2530 <line:795:5, col:73> col:27 buffer_data 'unsigned char *() const' inline
| `-DeprecatedAttr 0x563ee30e25d0 <col:62> "" ""
|-AccessSpecDecl 0x563ee30e2640 <line:798:2, col:9> col:2 private
|-CXXConstructorDecl 0x563ee30e26a0 <line:800:5, col:31> col:12 WritablePacket 'void ()' inline
| |-CXXCtorInitializer 'Packet'
| | `-CXXConstructExpr 0x563ee30e3298 <col:12> 'Packet' 'void ()'
| `-CompoundStmt 0x563ee30e34c0 <col:29, col:31>
|-CXXMethodDecl 0x563ee30e2768 <line:802:5, col:28> col:17 initialize 'void ()' inline
|-CXXConstructorDecl 0x563ee30e28a8 <line:804:5, col:35> col:5 WritablePacket 'void (const Packet &)'
| `-ParmVarDecl 0x563ee30e2818 <col:20, col:34> col:34 x 'const Packet &'
|-CXXDestructorDecl 0x563ee30e29a0 <line:805:5, col:25> col:5 ~WritablePacket 'void () noexcept'
| `-CompoundStmt 0x563ee30e34d0 <col:23, col:25>
|-CXXMethodDecl 0x563ee30e2b58 <line:808:5, col:56> col:28 pool_allocate 'WritablePacket *(bool)' static
| `-ParmVarDecl 0x563ee30e2a90 <col:42, col:47> col:47 with_data 'bool'
|-CXXMethodDecl 0x563ee30e2e28 <line:809:5, line:810:24> line:809:28 pool_allocate 'WritablePacket *(uint32_t, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x563ee30e2c10 <col:42, col:51> col:51 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x563ee30e2c88 <col:61, col:70> col:70 length 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x563ee30e2d00 <line:810:7, col:16> col:16 tailroom 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x563ee30e2fb8 <line:811:5, col:42> col:17 recycle 'void (WritablePacket *)' static
| `-ParmVarDecl 0x563ee30e2ef0 <col:25, col:41> col:41 p 'WritablePacket *'
|-FriendDecl 0x563ee30e30b0 <line:814:5, col:18> col:12 'class Packet':'Packet'
`-CXXConstructorDecl 0x563ee30e3118 <line:778:7> col:7 implicit WritablePacket 'void (const WritablePacket &)' inline default noexcept-unevaluated 0x563ee30e3118
  `-ParmVarDecl 0x563ee30e3228 <col:7> col:7 'const WritablePacket &'

Layout: <CGRecordLayout
  LLVMType:%class.WritablePacket = type { %class.Packet }
  NonVirtualBaseLLVMType:%class.WritablePacket = type { %class.Packet }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class StringAccum
         0 |   struct StringAccum::rep_t r_
         0 |     unsigned char * s
         8 |     int len
        12 |     int cap
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563ee30ad4f0 <../dummy_inc/click/straccum.hh:112:5, line:122:5> line:112:12 referenced struct rep_t definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x563ee30ad608 <col:5, col:12> col:12 implicit referenced struct rep_t
|-FieldDecl 0x563ee30ad6b0 <line:113:2, col:17> col:17 referenced s 'unsigned char *'
|-FieldDecl 0x563ee30ad718 <line:114:2, col:6> col:6 referenced len 'int'
|-FieldDecl 0x563ee30ad780 <line:115:2, col:6> col:6 referenced cap 'int'
|-CXXConstructorDecl 0x563ee30ad830 <line:116:2, line:119:2> line:116:2 used rep_t 'void ()'
| |-CXXCtorInitializer Field 0x563ee30ad6b0 's' 'unsigned char *'
| | `-CXXReinterpretCastExpr 0x563ee30ae6b0 <line:117:10, col:84> 'unsigned char *' reinterpret_cast<unsigned char *> <BitCast>
| |   `-CXXConstCastExpr 0x563ee30ae668 <col:44, col:83> 'char *' const_cast<char *> <NoOp>
| |     `-CallExpr 0x563ee30ae630 <col:63, col:82> 'const char *'
| |       `-ImplicitCastExpr 0x563ee30ae618 <col:63, col:71> 'const char *(*)()' <FunctionToPointerDecay>
| |         `-DeclRefExpr 0x563ee30ae5c0 <col:63, col:71> 'const char *()' lvalue CXXMethod 0x563ee2ee8500 'empty_data' 'const char *()'
| |-CXXCtorInitializer Field 0x563ee30ad718 'len' 'int'
| | `-IntegerLiteral 0x563ee30ae728 <line:118:12> 'int' 0
| |-CXXCtorInitializer Field 0x563ee30ad780 'cap' 'int'
| | `-IntegerLiteral 0x563ee30ae790 <col:20> 'int' 0
| `-CompoundStmt 0x563ee30ae810 <col:23, line:119:2>
|-CXXConstructorDecl 0x563ee30ad9a8 <line:120:2, line:121:2> line:120:11 rep_t 'void (uninitialized_type)'
| |-ParmVarDecl 0x563ee30ad8e8 <col:17> col:35 'uninitialized_type'
| `-CompoundStmt 0x563ee30ae820 <col:37, line:121:2>
|-CXXConstructorDecl 0x563ee30b0a38 <line:112:12> col:12 implicit used constexpr rep_t 'void (const StringAccum::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x563ee30b0b48 <col:12> col:12 used 'const StringAccum::rep_t &'
| |-CXXCtorInitializer Field 0x563ee30ad6b0 's' 'unsigned char *'
| | `-ImplicitCastExpr 0x563ee30b2480 <col:12> 'unsigned char *' <LValueToRValue>
| |   `-MemberExpr 0x563ee30b2450 <col:12> 'unsigned char *const' lvalue .s 0x563ee30ad6b0
| |     `-DeclRefExpr 0x563ee30b2430 <col:12> 'const StringAccum::rep_t' lvalue ParmVar 0x563ee30b0b48 '' 'const StringAccum::rep_t &'
| |-CXXCtorInitializer Field 0x563ee30ad718 'len' 'int'
| | `-ImplicitCastExpr 0x563ee30b2510 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x563ee30b24e0 <col:12> 'const int' lvalue .len 0x563ee30ad718
| |     `-DeclRefExpr 0x563ee30b24c0 <col:12> 'const StringAccum::rep_t' lvalue ParmVar 0x563ee30b0b48 '' 'const StringAccum::rep_t &'
| |-CXXCtorInitializer Field 0x563ee30ad780 'cap' 'int'
| | `-ImplicitCastExpr 0x563ee30b25a0 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x563ee30b2570 <col:12> 'const int' lvalue .cap 0x563ee30ad780
| |     `-DeclRefExpr 0x563ee30b2550 <col:12> 'const StringAccum::rep_t' lvalue ParmVar 0x563ee30b0b48 '' 'const StringAccum::rep_t &'
| `-CompoundStmt 0x563ee30b25f8 <col:12>
|-CXXConstructorDecl 0x563ee30b0be8 <col:12> col:12 implicit constexpr rep_t 'void (StringAccum::rep_t &&)' inline default trivial noexcept-unevaluated 0x563ee30b0be8
| `-ParmVarDecl 0x563ee30b0cf8 <col:12> col:12 'StringAccum::rep_t &&'
`-CXXDestructorDecl 0x563ee30b28b0 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"struct.StringAccum::rep_t" = type { i8*, i32, i32 }
  NonVirtualBaseLLVMType:%"struct.StringAccum::rep_t" = type { i8*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563ee32ea450 prev 0x563ee31f34b8 <../dummy_inc/click/straccum.hh:28:1, line:137:1> line:28:7 referenced class StringAccum definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x563ee32ea548 <col:1, col:7> col:7 implicit referenced class StringAccum
|-AccessSpecDecl 0x563ee32ea5d8 <col:21, col:27> col:21 public
|-TypedefDecl 0x563ee32ea618 <line:30:5, col:25> col:25 referenced const_iterator 'const char *'
| `-PointerType 0x563ee2b90dc0 'const char *'
|   `-QualType 0x563ee2b90311 'const char' const
|     `-BuiltinType 0x563ee2b90310 'char'
|-TypedefDecl 0x563ee32ea688 <line:31:5, col:19> col:19 referenced iterator 'char *'
| `-PointerType 0x563ee2b90f90 'char *'
|   `-BuiltinType 0x563ee2b90310 'char'
|-TypedefDecl 0x563ee32ea7c0 <line:33:5, col:57> col:32 referenced unspecified_bool_type 'int (StringAccum::*)() const'
| `-MemberPointerType 0x563ee32ea730 'int (StringAccum::*)() const'
|   |-RecordType 0x563ee2e52dc0 'StringAccum'
|   | `-CXXRecord 0x563ee32ea450 'StringAccum'
|   `-ParenType 0x563ee2ec2510 'int () const' sugar
|     `-FunctionProtoType 0x563ee2e960a0 'int () const' const cdecl
|       `-BuiltinType 0x563ee2b90370 'int'
|-CXXConstructorDecl 0x563ee32ea880 <line:35:5, col:24> col:12 used StringAccum 'void ()' inline
|-CXXConstructorDecl 0x563ee32ea9d0 <line:36:5, col:45> col:21 StringAccum 'void (int)' inline
| `-ParmVarDecl 0x563ee32ea940 <col:33, col:37> col:37 capacity 'int'
|-CXXConstructorDecl 0x563ee32eab20 <line:37:5, col:41> col:12 StringAccum 'void (const String &)' inline
| `-ParmVarDecl 0x563ee32eaa90 <col:24, col:38> col:38 str 'const String &'
|-CXXConstructorDecl 0x563ee32eacc8 <line:38:5, col:44> col:12 StringAccum 'void (const StringAccum &)' inline
| `-ParmVarDecl 0x563ee32eac08 <col:24, col:43> col:43 x 'const StringAccum &'
|-CXXConstructorDecl 0x563ee32eae78 <line:40:5, col:39> col:12 StringAccum 'void (StringAccum &&)' inline
| `-ParmVarDecl 0x563ee32eadb8 <col:24, col:38> col:38 x 'StringAccum &&'
|-CXXDestructorDecl 0x563ee32eaf70 <line:42:5, col:25> col:12 used ~StringAccum 'void () noexcept' inline
|-CXXMethodDecl 0x563ee32eb128 <line:44:5, col:55> col:25 operator= 'StringAccum &(const StringAccum &)' inline
| `-ParmVarDecl 0x563ee32eb060 <col:35, col:54> col:54 x 'const StringAccum &'
|-CXXMethodDecl 0x563ee32eb2a8 <line:46:5, col:50> col:25 operator= 'StringAccum &(StringAccum &&)' inline
| `-ParmVarDecl 0x563ee32eb1e0 <col:35, col:49> col:49 x 'StringAccum &&'
|-CXXMethodDecl 0x563ee32eb3a0 <line:49:5, col:31> col:24 used data 'const char *() const' inline
|-CXXMethodDecl 0x563ee32eb468 <line:50:5, col:23> col:18 used data 'char *()' inline
|-CXXMethodDecl 0x563ee32eb530 <line:51:5, col:25> col:16 used length 'int () const' inline
|-CXXMethodDecl 0x563ee32eb5f8 <line:52:5, col:27> col:16 used capacity 'int () const' inline
|-CXXMethodDecl 0x563ee32eb6c0 <line:54:5, col:23> col:17 c_str 'const char *()'
|-CXXConversionDecl 0x563ee32eb828 <line:56:5, col:45> col:12 operator int (StringAccum::*)() const 'StringAccum::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x563ee32eb8f8 <line:57:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x563ee32eb9b8 <line:58:5, col:29> col:17 operator! 'bool () const' inline
|-CXXMethodDecl 0x563ee32ebac8 <line:60:5, col:35> col:27 used begin 'StringAccum::const_iterator () const' inline
|-CXXMethodDecl 0x563ee32ebbd8 <line:61:5, col:27> col:21 begin 'StringAccum::iterator ()' inline
|-CXXMethodDecl 0x563ee32ebc98 <line:62:5, col:33> col:27 used end 'StringAccum::const_iterator () const' inline
|-CXXMethodDecl 0x563ee32ebd58 <line:63:5, col:25> col:21 end 'StringAccum::iterator ()' inline
|-CXXMethodDecl 0x563ee32ebea0 <line:65:5, col:35> col:17 operator[] 'char (int) const' inline
| `-ParmVarDecl 0x563ee32ebe10 <col:28, col:32> col:32 i 'int'
|-CXXMethodDecl 0x563ee32ec030 <line:66:5, col:34> col:18 operator[] 'char &(int)' inline
| `-ParmVarDecl 0x563ee32ebf60 <col:29, col:33> col:33 i 'int'
|-CXXMethodDecl 0x563ee32ec0f8 <line:67:5, col:25> col:17 front 'char () const' inline
|-CXXMethodDecl 0x563ee32ec1f0 <line:68:5, col:24> col:18 front 'char &()' inline
|-CXXMethodDecl 0x563ee32ec2b0 <line:69:5, col:24> col:17 back 'char () const' inline
|-CXXMethodDecl 0x563ee30aabc8 <line:70:5, col:23> col:18 back 'char &()' inline
|-CXXMethodDecl 0x563ee30aac88 <line:72:5, col:33> col:17 used out_of_memory 'bool () const' inline
|-CXXMethodDecl 0x563ee30aad48 <line:73:5, col:31> col:10 assign_out_of_memory 'void ()'
|-CXXMethodDecl 0x563ee30aae08 <line:75:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x563ee30aaf58 <line:76:5, col:31> col:18 reserve 'char *(int)' inline
| `-ParmVarDecl 0x563ee30aaec0 <col:26, col:30> col:30 n 'int'
|-CXXMethodDecl 0x563ee30ab0a8 <line:77:5, col:35> col:17 set_length 'void (int)' inline
| `-ParmVarDecl 0x563ee30ab018 <col:28, col:32> col:32 len 'int'
|-CXXMethodDecl 0x563ee30ab200 <line:78:5, col:23> col:9 resize 'int (int)'
| `-ParmVarDecl 0x563ee30ab168 <col:16, col:20> col:20 len 'int'
|-CXXMethodDecl 0x563ee30ab350 <line:79:5, col:40> col:17 used adjust_length 'void (int)' inline
| `-ParmVarDecl 0x563ee30ab2c0 <col:31, col:35> col:35 delta 'int'
|-CXXMethodDecl 0x563ee30ab570 <line:80:5, col:54> col:18 extend 'char *(int, int)' inline
| |-ParmVarDecl 0x563ee30ab410 <col:25, col:29> col:29 nadjust 'int'
| `-ParmVarDecl 0x563ee30ab490 <col:38, col:53> col:42 nreserve 'int' cinit
|   `-IntegerLiteral 0x563ee30ae4e8 <col:53> 'int' 0
|-CXXMethodDecl 0x563ee30ab6c8 <line:82:5, col:35> col:17 pop_back 'void (int)' inline
| `-ParmVarDecl 0x563ee30ab638 <col:26, col:34> col:30 n 'int' cinit
|   `-IntegerLiteral 0x563ee30ae508 <col:34> 'int' 1
|-CXXMethodDecl 0x563ee30ab810 <line:84:5, col:30> col:17 used append 'void (char)' inline
| `-ParmVarDecl 0x563ee30ab780 <col:24, col:29> col:29 c 'char'
|-CXXMethodDecl 0x563ee30ab960 <line:85:5, col:39> col:17 used append 'void (unsigned char)' inline
| `-ParmVarDecl 0x563ee30ab8d0 <col:24, col:38> col:38 c 'unsigned char'
|-CXXMethodDecl 0x563ee30abab0 <line:86:5, col:35> col:17 append_utf8 'bool (int)' inline
| `-ParmVarDecl 0x563ee30aba20 <col:29, col:33> col:33 ch 'int'
|-CXXMethodDecl 0x563ee30abc00 <line:87:5, col:40> col:17 used append 'void (const char *)' inline
| `-ParmVarDecl 0x563ee30abb70 <col:24, col:36> col:36 cstr 'const char *'
|-CXXMethodDecl 0x563ee30abdd8 <line:88:5, col:46> col:17 used append 'void (const char *, int)' inline
| |-ParmVarDecl 0x563ee30abcc0 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x563ee30abd40 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x563ee30abfb8 <line:89:5, col:55> col:17 used append 'void (const unsigned char *, int)' inline
| |-ParmVarDecl 0x563ee30abea0 <col:24, col:45> col:45 s 'const unsigned char *'
| `-ParmVarDecl 0x563ee30abf20 <col:48, col:52> col:52 len 'int'
|-CXXMethodDecl 0x563ee30ac198 <line:90:5, col:59> col:17 used append 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x563ee30ac080 <col:24, col:36> col:36 first 'const char *'
| `-ParmVarDecl 0x563ee30ac100 <col:43, col:55> col:55 last 'const char *'
|-CXXMethodDecl 0x563ee30ac378 <line:91:5, col:77> col:17 append 'void (const unsigned char *, const unsigned char *)' inline
| |-ParmVarDecl 0x563ee30ac260 <col:24, col:45> col:45 first 'const unsigned char *'
| `-ParmVarDecl 0x563ee30ac2e0 <col:52, col:73> col:73 last 'const unsigned char *'
|-CXXMethodDecl 0x563ee30ac558 <line:92:5, col:36> col:10 append_fill 'void (int, int)'
| |-ParmVarDecl 0x563ee30ac440 <col:22, col:26> col:26 c 'int'
| `-ParmVarDecl 0x563ee30ac4c0 <col:29, col:33> col:33 len 'int'
|-CXXMethodDecl 0x563ee30ac8b8 <line:93:5, col:81> col:10 used append_numeric 'void (String::intmax_t, int, bool)'
| |-ParmVarDecl 0x563ee30ac6a0 <col:25, col:42> col:42 x 'String::intmax_t':'long'
| |-ParmVarDecl 0x563ee30ac720 <col:45, col:56> col:49 base 'int' cinit
| | `-IntegerLiteral 0x563ee30ae528 <col:56> 'int' 10
| `-ParmVarDecl 0x563ee30ac798 <col:60, col:77> col:65 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x563ee30ae548 <col:77> 'bool' true
|-CXXMethodDecl 0x563ee30acc18 <line:94:5, col:82> col:10 used append_numeric 'void (String::uintmax_t, int, bool)'
| |-ParmVarDecl 0x563ee30aca00 <col:25, col:43> col:43 x 'String::uintmax_t':'unsigned long'
| |-ParmVarDecl 0x563ee30aca80 <col:46, col:57> col:50 base 'int' cinit
| | `-IntegerLiteral 0x563ee30ae558 <col:57> 'int' 10
| `-ParmVarDecl 0x563ee30acaf8 <col:61, col:78> col:66 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x563ee30ae578 <col:78> 'bool' true
|-CXXMethodDecl 0x563ee30ace40 <line:96:5, col:57> col:18 snprintf 'StringAccum &(int, const char *, ...)'
| |-ParmVarDecl 0x563ee30acce8 <col:27, col:31> col:31 n 'int'
| `-ParmVarDecl 0x563ee30acd68 <col:34, col:46> col:46 format 'const char *'
|-CXXMethodDecl 0x563ee30acf38 <line:98:5, col:24> col:12 take_string 'String ()'
|-CXXMethodDecl 0x563ee30ad0a8 <line:100:5, col:29> col:10 used swap 'void (StringAccum &)'
| `-ParmVarDecl 0x563ee30acfe8 <col:15, col:28> col:28 x 'StringAccum &'
|-CXXMethodDecl 0x563ee30ad1f8 <line:104:5, col:62> col:17 forward 'void (int)' inline
| |-ParmVarDecl 0x563ee30ad168 <col:25, col:29> col:29 delta 'int'
| `-DeprecatedAttr 0x563ee30ad2a0 <col:51> "" ""
|-AccessSpecDecl 0x563ee30ad310 <line:106:3, col:10> col:3 private
|-EnumDecl 0x563ee30ad338 <line:108:5, line:110:5> line:108:5
| `-EnumConstantDecl 0x563ee30ad488 <line:109:2, col:23> col:2 referenced MEMO_SPACE 'StringAccum::(anonymous enum at ../dummy_inc/click/straccum.hh:108:5)'
|   `-ImplicitCastExpr 0x563ee30ad4d8 <col:15, col:23> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x563ee30ad468 <col:15, col:23> 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)' Int: 12
|       `-DeclRefExpr 0x563ee30ad438 <col:15, col:23> 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)' EnumConstant 0x563ee2ecb278 'MEMO_SPACE' 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)'
|-CXXRecordDecl 0x563ee30ad4f0 <line:112:5, line:122:5> line:112:12 referenced struct rep_t definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x563ee30ad608 <col:5, col:12> col:12 implicit referenced struct rep_t
| |-FieldDecl 0x563ee30ad6b0 <line:113:2, col:17> col:17 referenced s 'unsigned char *'
| |-FieldDecl 0x563ee30ad718 <line:114:2, col:6> col:6 referenced len 'int'
| |-FieldDecl 0x563ee30ad780 <line:115:2, col:6> col:6 referenced cap 'int'
| |-CXXConstructorDecl 0x563ee30ad830 <line:116:2, line:119:2> line:116:2 used rep_t 'void ()'
| | |-CXXCtorInitializer Field 0x563ee30ad6b0 's' 'unsigned char *'
| | | `-CXXReinterpretCastExpr 0x563ee30ae6b0 <line:117:10, col:84> 'unsigned char *' reinterpret_cast<unsigned char *> <BitCast>
| | |   `-CXXConstCastExpr 0x563ee30ae668 <col:44, col:83> 'char *' const_cast<char *> <NoOp>
| | |     `-CallExpr 0x563ee30ae630 <col:63, col:82> 'const char *'
| | |       `-ImplicitCastExpr 0x563ee30ae618 <col:63, col:71> 'const char *(*)()' <FunctionToPointerDecay>
| | |         `-DeclRefExpr 0x563ee30ae5c0 <col:63, col:71> 'const char *()' lvalue CXXMethod 0x563ee2ee8500 'empty_data' 'const char *()'
| | |-CXXCtorInitializer Field 0x563ee30ad718 'len' 'int'
| | | `-IntegerLiteral 0x563ee30ae728 <line:118:12> 'int' 0
| | |-CXXCtorInitializer Field 0x563ee30ad780 'cap' 'int'
| | | `-IntegerLiteral 0x563ee30ae790 <col:20> 'int' 0
| | `-CompoundStmt 0x563ee30ae810 <col:23, line:119:2>
| |-CXXConstructorDecl 0x563ee30ad9a8 <line:120:2, line:121:2> line:120:11 rep_t 'void (uninitialized_type)'
| | |-ParmVarDecl 0x563ee30ad8e8 <col:17> col:35 'uninitialized_type'
| | `-CompoundStmt 0x563ee30ae820 <col:37, line:121:2>
| |-CXXConstructorDecl 0x563ee30b0a38 <line:112:12> col:12 implicit used constexpr rep_t 'void (const StringAccum::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x563ee30b0b48 <col:12> col:12 used 'const StringAccum::rep_t &'
| | |-CXXCtorInitializer Field 0x563ee30ad6b0 's' 'unsigned char *'
| | | `-ImplicitCastExpr 0x563ee30b2480 <col:12> 'unsigned char *' <LValueToRValue>
| | |   `-MemberExpr 0x563ee30b2450 <col:12> 'unsigned char *const' lvalue .s 0x563ee30ad6b0
| | |     `-DeclRefExpr 0x563ee30b2430 <col:12> 'const StringAccum::rep_t' lvalue ParmVar 0x563ee30b0b48 '' 'const StringAccum::rep_t &'
| | |-CXXCtorInitializer Field 0x563ee30ad718 'len' 'int'
| | | `-ImplicitCastExpr 0x563ee30b2510 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x563ee30b24e0 <col:12> 'const int' lvalue .len 0x563ee30ad718
| | |     `-DeclRefExpr 0x563ee30b24c0 <col:12> 'const StringAccum::rep_t' lvalue ParmVar 0x563ee30b0b48 '' 'const StringAccum::rep_t &'
| | |-CXXCtorInitializer Field 0x563ee30ad780 'cap' 'int'
| | | `-ImplicitCastExpr 0x563ee30b25a0 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x563ee30b2570 <col:12> 'const int' lvalue .cap 0x563ee30ad780
| | |     `-DeclRefExpr 0x563ee30b2550 <col:12> 'const StringAccum::rep_t' lvalue ParmVar 0x563ee30b0b48 '' 'const StringAccum::rep_t &'
| | `-CompoundStmt 0x563ee30b25f8 <col:12>
| |-CXXConstructorDecl 0x563ee30b0be8 <col:12> col:12 implicit constexpr rep_t 'void (StringAccum::rep_t &&)' inline default trivial noexcept-unevaluated 0x563ee30b0be8
| | `-ParmVarDecl 0x563ee30b0cf8 <col:12> col:12 'StringAccum::rep_t &&'
| `-CXXDestructorDecl 0x563ee30b28b0 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
|-FieldDecl 0x563ee30ada80 <line:124:5, col:11> col:11 referenced r_ 'StringAccum::rep_t'
|-CXXMethodDecl 0x563ee30adb80 <line:126:5, col:19> col:11 used grow 'char *(int)'
| `-ParmVarDecl 0x563ee30adae8 <col:16> col:19 'int'
|-CXXMethodDecl 0x563ee30add60 <line:127:5, col:48> col:11 used hard_extend 'char *(int, int)'
| |-ParmVarDecl 0x563ee30adc40 <col:23, col:27> col:27 nadjust 'int'
| `-ParmVarDecl 0x563ee30adcc0 <col:36, col:40> col:40 nreserve 'int'
|-CXXMethodDecl 0x563ee30adf40 <line:128:5, col:44> col:10 used hard_append 'void (const char *, int)'
| |-ParmVarDecl 0x563ee30ade28 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x563ee30adea8 <col:37, col:41> col:41 len 'int'
|-CXXMethodDecl 0x563ee30ae098 <line:129:5, col:43> col:10 used hard_append_cstr 'void (const char *)'
| `-ParmVarDecl 0x563ee30ae008 <col:27, col:39> col:39 cstr 'const char *'
|-CXXMethodDecl 0x563ee30ae1e8 <line:130:5, col:33> col:10 used append_utf8_hard 'bool (int)'
| `-ParmVarDecl 0x563ee30ae158 <col:27, col:31> col:31 ch 'int'
`-FriendDecl 0x563ee30ae4a8 <line:132:5, col:70> col:25
  `-FunctionDecl 0x563ee30ae3e8 parent 0x563ee2b90278 <col:5, col:70> col:25 used operator<< 'StringAccum &(StringAccum &, const String &)'
    |-ParmVarDecl 0x563ee30ae2a0 <col:36, col:49> col:49 sa 'StringAccum &'
    `-ParmVarDecl 0x563ee30ae318 <col:53, col:67> col:67 str 'const String &'

Layout: <CGRecordLayout
  LLVMType:%class.StringAccum = type { %"struct.StringAccum::rep_t" }
  NonVirtualBaseLLVMType:%class.StringAccum = type { %"struct.StringAccum::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class BoolArg (empty)
           | [sizeof=1, dsize=1, align=1,
           |  nvsize=1, nvalign=1]

*** Dumping AST Record Layout
         0 | class IntArg
         0 |   class NumArg (base) (empty)
         0 |   int base
         4 |   int status
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563ee3283fd8 <../dummy_inc/click/args.hh:1040:1, line:1095:1> line:1040:7 referenced class IntArg definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-public 'NumArg'
|-CXXRecordDecl 0x563ee3284138 <col:1, col:7> col:7 implicit referenced class IntArg
|-AccessSpecDecl 0x563ee32841c8 <col:32, col:38> col:32 public
|-TypedefDecl 0x563ee3284200 <line:1042:5, col:22> col:22 referenced limb_type 'uint32_t':'unsigned int'
| `-TypedefType 0x563ee2cea9e0 'uint32_t' sugar
|   |-Typedef 0x563ee2bf9408 'uint32_t'
|   `-TypedefType 0x563ee2bd2440 '__uint32_t' sugar
|     |-Typedef 0x563ee2bd2038 '__uint32_t'
|     `-BuiltinType 0x563ee2b90410 'unsigned int'
|-CXXConstructorDecl 0x563ee3284348 <line:1044:5, line:1046:5> line:1044:5 used IntArg 'void (int)'
| |-ParmVarDecl 0x563ee3284270 <col:12, col:20> col:16 used b 'int' cinit
| | `-IntegerLiteral 0x563ee3285838 <col:20> 'int' 0
| |-CXXCtorInitializer 'NumArg'
| | `-CXXConstructExpr 0x563ee3285d78 <col:5> 'NumArg' 'void () noexcept'
| |-CXXCtorInitializer Field 0x563ee32850f0 'base' 'int'
| | `-ImplicitCastExpr 0x563ee32858d8 <line:1045:16> 'int' <LValueToRValue>
| |   `-DeclRefExpr 0x563ee3285898 <col:16> 'int' lvalue ParmVar 0x563ee3284270 'b' 'int'
| `-CompoundStmt 0x563ee3285de8 <col:19, line:1046:5>
|-CXXMethodDecl 0x563ee3284840 <line:1048:5, line:1050:50> line:1048:17 parse 'const char *(const char *, const char *, bool, int, IntArg::limb_type *, int)'
| |-ParmVarDecl 0x563ee3284410 <col:23, col:35> col:35 begin 'const char *'
| |-ParmVarDecl 0x563ee3284490 <col:42, col:54> col:54 end 'const char *'
| |-ParmVarDecl 0x563ee3284508 <line:1049:23, col:28> col:28 is_signed 'bool'
| |-ParmVarDecl 0x563ee3284588 <col:39, col:43> col:43 size 'int'
| |-ParmVarDecl 0x563ee3284648 <line:1050:23, col:34> col:34 value 'IntArg::limb_type *'
| `-ParmVarDecl 0x563ee32846c8 <col:41, col:45> col:45 nlimb 'int'
|-FunctionTemplateDecl 0x563ee3284cb0 <line:1052:5, line:1067:5> line:1053:10 parse_saturating
| |-TemplateTypeParmDecl 0x563ee3284910 <line:1052:14, col:23> col:23 referenced typename depth 0 index 0 V
| `-CXXMethodDecl 0x563ee3284c10 <line:1053:5, line:1067:5> line:1053:10 parse_saturating 'bool (const String &, V &, const ArgContext &)'
|   |-ParmVarDecl 0x563ee32849b8 <col:27, col:41> col:41 referenced str 'const String &'
|   |-ParmVarDecl 0x563ee3284a58 <col:46, col:49> col:49 referenced result 'V &'
|   |-ParmVarDecl 0x563ee3284ad0 <col:57, col:82> col:75 referenced args 'const ArgContext &' cinit
|   | `-DeclRefExpr 0x563ee3285858 <col:82> 'const ArgContext' lvalue Var 0x563ee3279548 'blank_args' 'const ArgContext'
|   `-CompoundStmt 0x563ee3286d18 <col:94, line:1067:5>
|     |-DeclStmt 0x563ee3285f78 <line:1054:9, col:64>
|     | `-VarDecl 0x563ee3285e08 <col:9, col:55> col:24 referenced is_signed 'const bool' constexpr cinit
|     |   `-CXXDependentScopeMemberExpr 0x563ee3285f30 <col:36, col:55> '<dependent type>' lvalue ->is_signed
|     |-DeclStmt 0x563ee3286198 <line:1055:9, col:91>
|     | `-VarDecl 0x563ee3285fa8 <col:9, col:90> col:23 referenced nlimb 'const int' constexpr cinit
|     |   `-CXXFunctionalCastExpr 0x563ee3286170 <col:31, col:90> 'int' functional cast to int <Dependent>
|     |     `-BinaryOperator 0x563ee3286150 <col:35, col:89> 'unsigned long' '/'
|     |       |-ParenExpr 0x563ee3286100 <col:35, col:69> 'unsigned long'
|     |       | `-BinaryOperator 0x563ee32860e0 <col:36, col:68> 'unsigned long' '-'
|     |       |   |-BinaryOperator 0x563ee3286088 <col:36, col:64> 'unsigned long' '+'
|     |       |   | |-UnaryExprOrTypeTraitExpr 0x563ee3286038 <col:36, col:44> 'unsigned long' sizeof 'V'
|     |       |   | `-UnaryExprOrTypeTraitExpr 0x563ee3286068 <col:48, col:64> 'unsigned long' sizeof 'IntArg::limb_type':'unsigned int'
|     |       |   `-ImplicitCastExpr 0x563ee32860c8 <col:68> 'unsigned long' <IntegralCast>
|     |       |     `-IntegerLiteral 0x563ee32860a8 <col:68> 'int' 1
|     |       `-UnaryExprOrTypeTraitExpr 0x563ee3286130 <col:73, col:89> 'unsigned long' sizeof 'IntArg::limb_type':'unsigned int'
|     |-DeclStmt 0x563ee32862f8 <line:1056:9, col:27>
|     | `-VarDecl 0x563ee3286290 <col:9, col:26> col:19 referenced x 'IntArg::limb_type [nlimb]'
|     |-IfStmt 0x563ee3286740 <line:1057:9, line:1059:22>
|     | |-CXXOperatorCallExpr 0x563ee3286670 <line:1057:13, line:1058:24> '<dependent type>'
|     | | |-UnresolvedLookupExpr 0x563ee32865f0 <col:13> '<overloaded function type>' lvalue (ADL) = 'operator!=' 0x563ee30b49c8 0x563ee2efdfa8 0x563ee2efdc80 0x563ee2eef460 0x563ee2eef110 0x563ee2eeea00 0x563ee2ec1370 0x563ee2e4d830
|     | | |-CallExpr 0x563ee3286530 <line:1057:13, col:78> '<dependent type>'
|     | | | |-UnresolvedMemberExpr 0x563ee3286320 <col:13> '<bound member function type>' lvalue
|     | | | |-CXXMemberCallExpr 0x563ee32863d0 <col:19, col:29> 'String::const_iterator':'const char *'
|     | | | | `-MemberExpr 0x563ee32863a0 <col:19, col:23> '<bound member function type>' .begin 0x563ee2ede668
|     | | | |   `-DeclRefExpr 0x563ee3286380 <col:19> 'const String' lvalue ParmVar 0x563ee32849b8 'str' 'const String &'
|     | | | |-CXXMemberCallExpr 0x563ee3286440 <col:32, col:40> 'String::const_iterator':'const char *'
|     | | | | `-MemberExpr 0x563ee3286410 <col:32, col:36> '<bound member function type>' .end 0x563ee2ede880
|     | | | |   `-DeclRefExpr 0x563ee32863f0 <col:32> 'const String' lvalue ParmVar 0x563ee32849b8 'str' 'const String &'
|     | | | |-DeclRefExpr 0x563ee3286460 <col:43> 'const bool' lvalue Var 0x563ee3285e08 'is_signed' 'const bool'
|     | | | |-CXXFunctionalCastExpr 0x563ee32864c8 <col:54, col:67> 'int' functional cast to int <Dependent>
|     | | | | `-UnaryExprOrTypeTraitExpr 0x563ee32864a8 <col:58, col:66> 'unsigned long' sizeof 'V'
|     | | | |-DeclRefExpr 0x563ee32864f0 <col:70> 'IntArg::limb_type [nlimb]' lvalue Var 0x563ee3286290 'x' 'IntArg::limb_type [nlimb]'
|     | | | `-DeclRefExpr 0x563ee3286510 <col:73> 'const int' lvalue Var 0x563ee3285fa8 'nlimb' 'const int'
|     | | `-CXXMemberCallExpr 0x563ee32865d0 <line:1058:16, col:24> 'String::const_iterator':'const char *'
|     | |   `-MemberExpr 0x563ee32865a0 <col:16, col:20> '<bound member function type>' .end 0x563ee2ede880
|     | |     `-DeclRefExpr 0x563ee3286580 <col:16> 'const String' lvalue ParmVar 0x563ee32849b8 'str' 'const String &'
|     | `-BinaryOperator 0x563ee3286720 <line:1059:13, col:22> 'int' lvalue '='
|     |   |-MemberExpr 0x563ee32866b8 <col:13> 'int' lvalue ->status 0x563ee3285158
|     |   | `-CXXThisExpr 0x563ee32866a8 <col:13> 'IntArg *' implicit this
|     |   `-ImplicitCastExpr 0x563ee3286708 <col:22> 'int' <IntegralCast>
|     |     `-DeclRefExpr 0x563ee32866e8 <col:22> 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)' EnumConstant 0x563ee3283da0 'status_inval' 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
|     |-IfStmt 0x563ee3286990 <line:1060:9, line:1063:9>
|     | |-BinaryOperator 0x563ee3286878 <line:1060:13, col:33> 'bool' '&&'
|     | | |-ImplicitCastExpr 0x563ee3286860 <col:13> 'bool' <IntegralToBoolean>
|     | | | `-ImplicitCastExpr 0x563ee3286848 <col:13> 'int' <LValueToRValue>
|     | | |   `-MemberExpr 0x563ee3286768 <col:13> 'int' lvalue ->status 0x563ee3285158
|     | | |     `-CXXThisExpr 0x563ee3286758 <col:13> 'IntArg *' implicit this
|     | | `-BinaryOperator 0x563ee3286828 <col:23, col:33> 'bool' '!='
|     | |   |-ImplicitCastExpr 0x563ee32867f8 <col:23> 'int' <LValueToRValue>
|     | |   | `-MemberExpr 0x563ee32867a8 <col:23> 'int' lvalue ->status 0x563ee3285158
|     | |   |   `-CXXThisExpr 0x563ee3286798 <col:23> 'IntArg *' implicit this
|     | |   `-ImplicitCastExpr 0x563ee3286810 <col:33> 'int' <IntegralCast>
|     | |     `-DeclRefExpr 0x563ee32867d8 <col:33> 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)' EnumConstant 0x563ee3283e30 'status_range' 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
|     | `-CompoundStmt 0x563ee3286970 <col:47, line:1063:9>
|     |   |-CXXMemberCallExpr 0x563ee3286910 <line:1061:13, col:40> 'void'
|     |   | |-MemberExpr 0x563ee32868b8 <col:13, col:18> '<bound member function type>' .error 0x563ee322aa20
|     |   | | `-DeclRefExpr 0x563ee3286898 <col:13> 'const ArgContext' lvalue ParmVar 0x563ee3284ad0 'args' 'const ArgContext &'
|     |   | `-ImplicitCastExpr 0x563ee3286938 <col:24> 'const char *' <ArrayToPointerDecay>
|     |   |   `-StringLiteral 0x563ee32868e8 <col:24> 'const char [15]' lvalue "invalid number"
|     |   `-ReturnStmt 0x563ee3286960 <line:1062:13, col:20>
|     |     `-CXXBoolLiteralExpr 0x563ee3286950 <col:20> 'bool' false
|     |-DeclStmt 0x563ee3286b68 <line:1064:9, col:64>
|     | `-TypedefDecl 0x563ee3286b10 <col:9, col:49> col:49 referenced unsigned_v_type 'typename make_unsigned<V>::type'
|     |   `-DependentNameType 0x563ee3286aa0 'typename make_unsigned<V>::type' dependent
|     |-CallExpr 0x563ee3286cc8 <line:1065:9, col:71> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x563ee3286b80 <col:9> '<overloaded function type>' lvalue (ADL) = 'extract_integer' 0x563ee2e817f8
|     | |-DeclRefExpr 0x563ee3286bc8 <col:25> 'IntArg::limb_type [nlimb]' lvalue Var 0x563ee3286290 'x' 'IntArg::limb_type [nlimb]'
|     | `-CXXReinterpretCastExpr 0x563ee3286c98 <col:28, col:70> 'unsigned_v_type':'typename make_unsigned<V>::type' lvalue reinterpret_cast<unsigned_v_type &> <Dependent>
|     |   `-DeclRefExpr 0x563ee3286c10 <col:64> 'V' lvalue ParmVar 0x563ee3284a58 'result' 'V &'
|     `-ReturnStmt 0x563ee3286d08 <line:1066:9, col:16>
|       `-CXXBoolLiteralExpr 0x563ee3286cf8 <col:16> 'bool' true
|-FunctionTemplateDecl 0x563ee3285068 <line:1069:5, line:1083:5> line:1070:10 parse
| |-TemplateTypeParmDecl 0x563ee3284d20 <line:1069:14, col:23> col:23 referenced typename depth 0 index 0 V
| |-CXXMethodDecl 0x563ee3284fc8 <line:1070:5, line:1083:5> line:1070:10 parse 'bool (const String &, V &, const ArgContext &)'
| | |-ParmVarDecl 0x563ee3284dc8 <col:16, col:30> col:30 referenced str 'const String &'
| | |-ParmVarDecl 0x563ee3284e68 <col:35, col:38> col:38 referenced result 'V &'
| | |-ParmVarDecl 0x563ee3284ee0 <col:46, col:71> col:64 referenced args 'const ArgContext &' cinit
| | | `-DeclRefExpr 0x563ee3285878 <col:71> 'const ArgContext' lvalue Var 0x563ee3279548 'blank_args' 'const ArgContext'
| | `-CompoundStmt 0x563ee3287488 <col:83, line:1083:5>
| |   |-DeclStmt 0x563ee3286de0 <line:1071:9, col:12>
| |   | `-VarDecl 0x563ee3286d78 <col:9, col:11> col:11 referenced x 'V'
| |   `-IfStmt 0x563ee3287460 <line:1072:9, line:1082:9> has_else
| |     |-BinaryOperator 0x563ee3287070 <line:1072:13, line:1073:49> '<dependent type>' '||'
| |     | |-UnaryOperator 0x563ee3286ef8 <line:1072:13, col:43> '<dependent type>' prefix '!' cannot overflow
| |     | | `-CallExpr 0x563ee3286ec0 <col:14, col:43> '<dependent type>'
| |     | |   |-UnresolvedMemberExpr 0x563ee3286e08 <col:14> '<bound member function type>' lvalue
| |     | |   |-DeclRefExpr 0x563ee3286e60 <col:31> 'const String' lvalue ParmVar 0x563ee3284dc8 'str' 'const String &'
| |     | |   |-DeclRefExpr 0x563ee3286e80 <col:36> 'V' lvalue Var 0x563ee3286d78 'x' 'V'
| |     | |   `-DeclRefExpr 0x563ee3286ea0 <col:39> 'const ArgContext' lvalue ParmVar 0x563ee3284ee0 'args' 'const ArgContext &'
| |     | `-ParenExpr 0x563ee3287050 <line:1073:16, col:49> 'bool'
| |     |   `-BinaryOperator 0x563ee3287030 <col:17, col:37> 'bool' '&&'
| |     |     |-ImplicitCastExpr 0x563ee3287018 <col:17> 'bool' <IntegralToBoolean>
| |     |     | `-ImplicitCastExpr 0x563ee3287000 <col:17> 'int' <LValueToRValue>
| |     |     |   `-MemberExpr 0x563ee3286f20 <col:17> 'int' lvalue ->status 0x563ee3285158
| |     |     |     `-CXXThisExpr 0x563ee3286f10 <col:17> 'IntArg *' implicit this
| |     |     `-BinaryOperator 0x563ee3286fe0 <col:27, col:37> 'bool' '!='
| |     |       |-ImplicitCastExpr 0x563ee3286fb0 <col:27> 'int' <LValueToRValue>
| |     |       | `-MemberExpr 0x563ee3286f60 <col:27> 'int' lvalue ->status 0x563ee3285158
| |     |       |   `-CXXThisExpr 0x563ee3286f50 <col:27> 'IntArg *' implicit this
| |     |       `-ImplicitCastExpr 0x563ee3286fc8 <col:37> 'int' <IntegralCast>
| |     |         `-DeclRefExpr 0x563ee3286f90 <col:37> 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)' EnumConstant 0x563ee3283e30 'status_range' 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| |     |-ReturnStmt 0x563ee32870a0 <line:1074:13, col:20>
| |     | `-CXXBoolLiteralExpr 0x563ee3287090 <col:20> 'bool' false
| |     `-IfStmt 0x563ee3287438 <line:1075:14, line:1082:9> has_else
| |       |-BinaryOperator 0x563ee3287140 <line:1075:18, col:28> 'bool' '=='
| |       | |-ImplicitCastExpr 0x563ee3287110 <col:18> 'int' <LValueToRValue>
| |       | | `-MemberExpr 0x563ee32870c0 <col:18> 'int' lvalue ->status 0x563ee3285158
| |       | |   `-CXXThisExpr 0x563ee32870b0 <col:18> 'IntArg *' implicit this
| |       | `-ImplicitCastExpr 0x563ee3287128 <col:28> 'int' <IntegralCast>
| |       |   `-DeclRefExpr 0x563ee32870f0 <col:28> 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)' EnumConstant 0x563ee3283e30 'status_range' 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| |       |-CompoundStmt 0x563ee3287378 <col:42, line:1079:9>
| |       | |-CallExpr 0x563ee3287320 <line:1076:13, line:1077:45> '<dependent type>'
| |       | | |-MemberExpr 0x563ee3287170 <line:1076:13> '<bound member function type>' ->range_error 0x563ee3285768
| |       | | | `-CXXThisExpr 0x563ee3287160 <col:13> 'IntArg *' implicit this
| |       | | |-DeclRefExpr 0x563ee32871a0 <col:25> 'const ArgContext' lvalue ParmVar 0x563ee3284ee0 'args' 'const ArgContext &'
| |       | | |-CXXDependentScopeMemberExpr 0x563ee3287280 <col:31, col:50> '<dependent type>' lvalue ->is_signed
| |       | | `-CXXUnresolvedConstructExpr 0x563ee32872f8 <line:1077:25, col:44> 'click_int_large_t':'long long' 'click_int_large_t':'long long'
| |       | |   `-DeclRefExpr 0x563ee32872d8 <col:43> 'V' lvalue Var 0x563ee3286d78 'x' 'V'
| |       | `-ReturnStmt 0x563ee3287368 <line:1078:13, col:20>
| |       |   `-CXXBoolLiteralExpr 0x563ee3287358 <col:20> 'bool' false
| |       `-CompoundStmt 0x563ee3287418 <line:1079:16, line:1082:9>
| |         |-BinaryOperator 0x563ee32873d8 <line:1080:13, col:22> '<dependent type>' '='
| |         | |-DeclRefExpr 0x563ee3287398 <col:13> 'V' lvalue ParmVar 0x563ee3284e68 'result' 'V &'
| |         | `-DeclRefExpr 0x563ee32873b8 <col:22> 'V' lvalue Var 0x563ee3286d78 'x' 'V'
| |         `-ReturnStmt 0x563ee3287408 <line:1081:13, col:20>
| |           `-CXXBoolLiteralExpr 0x563ee32873f8 <col:20> 'bool' true
| |-CXXMethodDecl 0x563ee3372c88 <line:1070:5, line:1083:5> line:1070:10 used parse 'bool (const String &, unsigned int &, const ArgContext &)'
| | |-TemplateArgument type 'unsigned int'
| | |-ParmVarDecl 0x563ee3372a68 <col:16, col:30> col:30 str 'const String &'
| | |-ParmVarDecl 0x563ee3372b38 <col:35, col:38> col:38 result 'unsigned int &'
| | `-ParmVarDecl 0x563ee3372ba0 <col:46, col:71> col:64 args 'const ArgContext &' cinit
| |   `-DeclRefExpr 0x563ee3285878 <col:71> 'const ArgContext' lvalue Var 0x563ee3279548 'blank_args' 'const ArgContext'
| `-CXXMethodDecl 0x563ee33736b8 <col:5, line:1083:5> line:1070:10 used parse 'bool (const String &, int &, const ArgContext &)'
|   |-TemplateArgument type 'int'
|   |-ParmVarDecl 0x563ee3373498 <col:16, col:30> col:30 str 'const String &'
|   |-ParmVarDecl 0x563ee3373568 <col:35, col:38> col:38 result 'int &'
|   `-ParmVarDecl 0x563ee33735d0 <col:46, col:71> col:64 args 'const ArgContext &' cinit
|     `-DeclRefExpr 0x563ee3285878 <col:71> 'const ArgContext' lvalue Var 0x563ee3279548 'blank_args' 'const ArgContext'
|-FieldDecl 0x563ee32850f0 <line:1085:5, col:9> col:9 base 'int'
|-FieldDecl 0x563ee3285158 <line:1086:5, col:9> col:9 referenced status 'int'
|-AccessSpecDecl 0x563ee32851a8 <line:1088:3, col:12> col:3 protected
|-CXXMethodDecl 0x563ee3285460 <line:1090:5, line:1091:51> line:1090:24 span 'const char *(const char *, const char *, bool, int &)' static
| |-ParmVarDecl 0x563ee32851e8 <col:29, col:41> col:41 begin 'const char *'
| |-ParmVarDecl 0x563ee3285268 <col:48, col:60> col:60 end 'const char *'
| |-ParmVarDecl 0x563ee32852e0 <line:1091:29, col:34> col:34 is_signed 'bool'
| `-ParmVarDecl 0x563ee3285360 <col:45, col:50> col:50 b 'int &'
|-CXXMethodDecl 0x563ee3285768 <line:1092:5, line:1093:45> line:1092:10 referenced range_error 'void (const ArgContext &, bool, click_int_large_t)'
| |-ParmVarDecl 0x563ee3285530 <col:22, col:40> col:40 args 'const ArgContext &'
| |-ParmVarDecl 0x563ee32855a8 <col:46, col:51> col:51 is_signed 'bool'
| `-ParmVarDecl 0x563ee3285640 <line:1093:22, col:40> col:40 value 'click_int_large_t':'long long'
|-CXXConstructorDecl 0x563ee3287ce8 <line:1040:7> col:7 implicit constexpr IntArg 'void (const IntArg &)' inline default trivial noexcept-unevaluated 0x563ee3287ce8
| `-ParmVarDecl 0x563ee3287df8 <col:7> col:7 'const IntArg &'
|-CXXConstructorDecl 0x563ee3287f78 <col:7> col:7 implicit constexpr IntArg 'void (IntArg &&)' inline default trivial noexcept-unevaluated 0x563ee3287f78
| `-ParmVarDecl 0x563ee3288088 <col:7> col:7 'IntArg &&'
`-CXXDestructorDecl 0x563ee3372808 <col:7> col:7 implicit referenced ~IntArg 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.IntArg = type { i32, i32 }
  NonVirtualBaseLLVMType:%class.IntArg = type { i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563ee3291650 <../dummy_inc/click/args.hh:1257:1, line:1262:1> line:1257:7 referenced class BoolArg definition
|-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |-DefaultConstructor exists trivial constexpr defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x563ee3291768 <col:1, col:7> col:7 implicit class BoolArg
|-AccessSpecDecl 0x563ee32917f8 <col:17, col:23> col:17 public
|-CXXMethodDecl 0x563ee3291a38 <line:1258:5, col:91> col:17 used parse 'bool (const String &, bool &, const ArgContext &)' static
| |-ParmVarDecl 0x563ee3291830 <col:23, col:37> col:37 str 'const String &'
| |-ParmVarDecl 0x563ee32918b0 <col:42, col:48> col:48 result 'bool &'
| `-ParmVarDecl 0x563ee3291928 <col:56, col:81> col:74 args 'const ArgContext &' cinit
|   `-DeclRefExpr 0x563ee3291c50 <col:81> 'const ArgContext' lvalue Var 0x563ee3279548 'blank_args' 'const ArgContext'
|-CXXMethodDecl 0x563ee3291b90 <line:1259:5, line:1261:5> line:1259:19 unparse 'String (bool)' static
| |-ParmVarDecl 0x563ee3291b00 <col:27, col:32> col:32 used x 'bool'
| `-CompoundStmt 0x563ee3291da8 <col:35, line:1261:5>
|   `-ReturnStmt 0x563ee3291d98 <line:1260:9, col:24>
|     `-ExprWithCleanups 0x563ee3291d80 <col:16, col:24> 'String'
|       `-CXXConstructExpr 0x563ee3291d50 <col:16, col:24> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x563ee3291d38 <col:16, col:24> 'String' xvalue
|           `-CXXFunctionalCastExpr 0x563ee3291d10 <col:16, col:24> 'String' functional cast to class String <ConstructorConversion>
|             `-CXXBindTemporaryExpr 0x563ee3291cf0 <col:16, col:24> 'String' (CXXTemporary 0x563ee3291cf0)
|               `-CXXConstructExpr 0x563ee3291cb8 <col:16, col:24> 'String' 'void (bool)'
|                 `-ImplicitCastExpr 0x563ee3291ca0 <col:23> 'bool' <LValueToRValue>
|                   `-DeclRefExpr 0x563ee3291c80 <col:23> 'bool' lvalue ParmVar 0x563ee3291b00 'x' 'bool'
|-CXXConstructorDecl 0x563ee3373d38 <line:1257:7> col:7 implicit referenced constexpr BoolArg 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x563ee3373e38 <col:7> col:7 implicit constexpr BoolArg 'void (const BoolArg &)' inline default trivial noexcept-unevaluated 0x563ee3373e38
| `-ParmVarDecl 0x563ee3373f48 <col:7> col:7 'const BoolArg &'
|-CXXConstructorDecl 0x563ee3373fe8 <col:7> col:7 implicit constexpr BoolArg 'void (BoolArg &&)' inline default trivial noexcept-unevaluated 0x563ee3373fe8
| `-ParmVarDecl 0x563ee33740f8 <col:7> col:7 'BoolArg &&'
`-CXXDestructorDecl 0x563ee3374198 <col:7> col:7 implicit referenced ~BoolArg 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.BoolArg = type { i8 }
  NonVirtualBaseLLVMType:%class.BoolArg = type { i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct char_array<16>
         0 |   char [16] x
           | [sizeof=16, dsize=16, align=1,
           |  nvsize=16, nvalign=1]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x563ee31719a0 <../dummy_inc/click/type_traits.hh:165:1, line:167:1> line:165:28 struct char_array definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-TemplateArgument integral 16
|-PackedAttr 0x563ee3378208 <line:167:18>
|-CXXRecordDecl 0x563ee33782c8 prev 0x563ee31719a0 <line:165:21, col:28> col:28 implicit struct char_array
`-FieldDecl 0x563ee33783d8 <line:166:5, col:13> col:10 x 'char [16]'

Layout: <CGRecordLayout
  LLVMType:%struct.char_array.10 = type { [16 x i8] }
  NonVirtualBaseLLVMType:%struct.char_array.10 = type { [16 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct Args::SlotT<class String>
         0 |   struct Args::Slot (primary base)
         0 |     (Slot vtable pointer)
         8 |     struct Args::Slot * _next
        16 |   class String * _ptr
        24 |   class String _slot
        24 |     struct String::rep_t _r
        24 |       const char * data
        32 |       int length
        40 |       struct String::memo_t * memo
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Args::SlotT<unsigned int>
         0 |   struct Args::Slot (primary base)
         0 |     (Slot vtable pointer)
         8 |     struct Args::Slot * _next
        16 |   unsigned int * _ptr
        24 |   unsigned int _slot
           | [sizeof=32, dsize=28, align=8,
           |  nvsize=28, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Args::SlotT<int>
         0 |   struct Args::Slot (primary base)
         0 |     (Slot vtable pointer)
         8 |     struct Args::Slot * _next
        16 |   int * _ptr
        24 |   int _slot
           | [sizeof=32, dsize=28, align=8,
           |  nvsize=28, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Args::SlotT<_Bool>
         0 |   struct Args::Slot (primary base)
         0 |     (Slot vtable pointer)
         8 |     struct Args::Slot * _next
        16 |   _Bool * _ptr
        24 |   _Bool _slot
           | [sizeof=32, dsize=25, align=8,
           |  nvsize=25, nvalign=8]

*** Dumping AST Record Layout
         0 | struct uninitialized_type (empty)
           | [sizeof=1, dsize=1, align=1,
           |  nvsize=1, nvalign=1]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563ee2cea658 <../dummy_inc/click/config.h:317:1, line:318:1> line:317:8 referenced struct uninitialized_type definition
|-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |-DefaultConstructor exists trivial constexpr defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x563ee2cea778 <col:1, col:8> col:8 implicit struct uninitialized_type
|-CXXConstructorDecl 0x563ee2efc5f0 <col:8> col:8 implicit referenced constexpr uninitialized_type 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x563ee2efc6d0 <col:8> col:8 implicit constexpr uninitialized_type 'void (const uninitialized_type &)' inline default trivial noexcept-unevaluated 0x563ee2efc6d0
| `-ParmVarDecl 0x563ee2efc7b8 <col:8> col:8 'const uninitialized_type &'
|-CXXConstructorDecl 0x563ee2efc858 <col:8> col:8 implicit constexpr uninitialized_type 'void (uninitialized_type &&)' inline default trivial noexcept-unevaluated 0x563ee2efc858
| `-ParmVarDecl 0x563ee2efc968 <col:8> col:8 'uninitialized_type &&'
`-CXXDestructorDecl 0x563ee3099650 <col:8> col:8 implicit referenced ~uninitialized_type 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%struct.uninitialized_type = type { i8 }
  NonVirtualBaseLLVMType:%struct.uninitialized_type = type { i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class StringArg (empty)
           | [sizeof=1, dsize=1, align=1,
           |  nvsize=1, nvalign=1]

*** Dumping AST Record Layout
         0 | struct DefaultArg<class String> (empty)
         0 |   class StringArg (base) (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=1, nvalign=1]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563ee32959a8 <../dummy_inc/click/args.hh:1345:1, line:1349:1> line:1345:7 referenced class StringArg definition
|-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |-DefaultConstructor exists trivial constexpr defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x563ee3295ac8 <col:1, col:7> col:7 implicit class StringArg
|-AccessSpecDecl 0x563ee3295b58 <col:19, col:25> col:19 public
|-CXXMethodDecl 0x563ee3295d50 <line:1346:5, line:1348:5> line:1346:17 used parse 'bool (const String &, String &, const ArgContext &)' static
| |-ParmVarDecl 0x563ee3295b90 <col:23, col:37> col:37 used str 'const String &'
| |-ParmVarDecl 0x563ee3295c08 <col:42, col:50> col:50 used result 'String &'
| |-ParmVarDecl 0x563ee3295c80 <col:58, col:79> col:77 'const ArgContext &' cinit
| | `-DeclRefExpr 0x563ee3295e20 <col:79> 'const ArgContext' lvalue Var 0x563ee3279548 'blank_args' 'const ArgContext'
| `-CompoundStmt 0x563ee3295fc0 <col:91, line:1348:5>
|   `-ReturnStmt 0x563ee3295fb0 <line:1347:9, col:41>
|     `-CallExpr 0x563ee3295f60 <col:16, col:41> 'bool'
|       |-ImplicitCastExpr 0x563ee3295f48 <col:16> 'bool (*)(const String &, String *, String *)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x563ee3295f00 <col:16> 'bool (const String &, String *, String *)' lvalue Function 0x563ee32958f0 'cp_string' 'bool (const String &, String *, String *)'
|       |-DeclRefExpr 0x563ee3295e88 <col:26> 'const String' lvalue ParmVar 0x563ee3295b90 'str' 'const String &'
|       |-UnaryOperator 0x563ee3295ec8 <col:31, col:32> 'String *' prefix '&' cannot overflow
|       | `-DeclRefExpr 0x563ee3295ea8 <col:32> 'String' lvalue ParmVar 0x563ee3295c08 'result' 'String &'
|       `-ImplicitCastExpr 0x563ee3295f98 <col:40> 'String *' <NullToPointer>
|         `-IntegerLiteral 0x563ee3295ee0 <col:40> 'int' 0
|-CXXConstructorDecl 0x563ee33a37e8 <line:1345:7> col:7 implicit constexpr StringArg 'void () noexcept' inline default trivial
|-CXXDestructorDecl 0x563ee33a38c0 <col:7> col:7 implicit ~StringArg 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x563ee33a39f8 <col:7> col:7 implicit constexpr StringArg 'void (const StringArg &)' inline default trivial noexcept-unevaluated 0x563ee33a39f8
| `-ParmVarDecl 0x563ee33a3b08 <col:7> col:7 'const StringArg &'
`-CXXConstructorDecl 0x563ee33a3ba8 <col:7> col:7 implicit used constexpr StringArg 'void (StringArg &&) noexcept' inline default trivial
  |-ParmVarDecl 0x563ee33a3cb8 <col:7> col:7 'StringArg &&'
  `-CompoundStmt 0x563ee33a4910 <col:7>

Layout: <CGRecordLayout
  LLVMType:%class.StringArg = type { i8 }
  NonVirtualBaseLLVMType:%class.StringArg = type { i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x563ee3296000 <../dummy_inc/click/args.hh:1351:1, col:58> col:19 struct DefaultArg definition
|-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |-DefaultConstructor exists trivial constexpr defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-public 'StringArg'
|-TemplateArgument type 'String'
|-CXXRecordDecl 0x563ee3296258 <col:12, col:19> col:19 implicit struct DefaultArg
|-CXXConstructorDecl 0x563ee33a36f8 <col:19> col:19 implicit referenced constexpr DefaultArg 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x563ee33a3d28 <col:19> col:19 implicit constexpr DefaultArg 'void (const DefaultArg<String> &)' inline default trivial noexcept-unevaluated 0x563ee33a3d28
| `-ParmVarDecl 0x563ee33a3e38 <col:19> col:19 'const DefaultArg<String> &'
|-CXXConstructorDecl 0x563ee33a3ed8 <col:19> col:19 implicit used constexpr DefaultArg 'void (DefaultArg<String> &&) noexcept' inline default trivial
| |-ParmVarDecl 0x563ee33a3fe8 <col:19> col:19 used 'DefaultArg<String> &&'
| |-CXXCtorInitializer 'StringArg'
| | `-CXXConstructExpr 0x563ee33a4920 <col:19> 'StringArg' 'void (StringArg &&) noexcept'
| |   `-ImplicitCastExpr 0x563ee33a48f0 <col:19> 'StringArg' xvalue <UncheckedDerivedToBase (StringArg)>
| |     `-CXXStaticCastExpr 0x563ee33a48c0 <col:19> 'DefaultArg<String>' xvalue static_cast<struct DefaultArg<class String> &&> <NoOp>
| |       `-DeclRefExpr 0x563ee33a4890 <col:19> 'DefaultArg<String>' lvalue ParmVar 0x563ee33a3fe8 '' 'DefaultArg<String> &&'
| `-CompoundStmt 0x563ee33a4990 <col:19>
`-CXXDestructorDecl 0x563ee33a4088 <col:19> col:19 implicit referenced ~DefaultArg 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%struct.DefaultArg = type { i8 }
  NonVirtualBaseLLVMType:%struct.DefaultArg = type { i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x563ee33a5658 <../dummy_inc/click/args.hh:850:5, line:860:5> line:851:12 struct SlotT definition
|-DefinitionData polymorphic has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-public 'Args::Slot'
|-TemplateArgument type 'String'
|-CXXRecordDecl 0x563ee33a5a58 prev 0x563ee33a5658 <col:5, col:12> col:12 implicit struct SlotT
|-CXXConstructorDecl 0x563ee33a5c50 <line:852:9, line:854:9> line:852:9 used SlotT 'void (String *)'
| |-ParmVarDecl 0x563ee33a5b58 <col:15, col:18> col:18 used ptr 'String *'
| |-CXXCtorInitializer 'Args::Slot'
| | `-CXXConstructExpr 0x563ee33a6b98 <col:9> 'Args::Slot' 'void ()'
| |-CXXCtorInitializer Field 0x563ee33a5dd0 '_ptr' 'String *'
| | `-ImplicitCastExpr 0x563ee33a6b58 <line:853:20> 'String *' <LValueToRValue>
| |   `-DeclRefExpr 0x563ee33a6b18 <col:20> 'String *' lvalue ParmVar 0x563ee33a5b58 'ptr' 'String *'
| |-CXXCtorInitializer Field 0x563ee33a5e30 '_slot' 'String':'String'
| | `-CXXConstructExpr 0x563ee33a6bf8 <line:852:9> 'String':'String' 'void ()'
| `-CompoundStmt 0x563ee3279370 <line:853:25, line:854:9>
|-CXXMethodDecl 0x563ee33a5d10 <line:855:9, line:857:9> line:855:14 used store 'void ()'
| |-Overrides: [ 0x563ee324f600 Slot::store 'void ()' ]
| `-CompoundStmt 0x563ee33a7338 <col:22, line:857:9>
|   `-CallExpr 0x563ee33a72f0 <line:856:13, col:40> 'void'
|     |-ImplicitCastExpr 0x563ee33a72d8 <col:13> 'void (*)(String &, const String &)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x563ee33a7258 <col:13> 'void (String &, const String &)' lvalue Function 0x563ee33a7138 'assign_consume' 'void (String &, const String &)' (FunctionTemplate 0x563ee2e56ec8 'assign_consume')
|     |-UnaryOperator 0x563ee33a6d88 <col:28, col:29> 'String':'String' lvalue prefix '*' cannot overflow
|     | `-ImplicitCastExpr 0x563ee33a6d70 <col:29> 'String *' <LValueToRValue>
|     |   `-MemberExpr 0x563ee33a6d40 <col:29> 'String *' lvalue ->_ptr 0x563ee33a5dd0
|     |     `-CXXThisExpr 0x563ee33a6d30 <col:29> 'Args::SlotT<String> *' implicit this
|     `-ImplicitCastExpr 0x563ee33a7320 <col:35> 'const String':'const String' lvalue <NoOp>
|       `-MemberExpr 0x563ee33a6db0 <col:35> 'String':'String' lvalue ->_slot 0x563ee33a5e30
|         `-CXXThisExpr 0x563ee33a6da0 <col:35> 'Args::SlotT<String> *' implicit this
|-FieldDecl 0x563ee33a5dd0 <line:858:9, col:12> col:12 referenced _ptr 'String *'
|-FieldDecl 0x563ee33a5e30 <line:859:9, col:11> col:11 referenced _slot 'String':'String'
|-CXXConstructorDecl 0x563ee33a5ea8 <line:851:12> col:12 implicit SlotT 'void (const Args::SlotT<String> &)' inline default noexcept-unevaluated 0x563ee33a5ea8
| `-ParmVarDecl 0x563ee33a5fb8 <col:12> col:12 'const Args::SlotT<String> &'
|-CXXConstructorDecl 0x563ee33a6058 <col:12> col:12 implicit SlotT 'void (Args::SlotT<String> &&)' inline default noexcept-unevaluated 0x563ee33a6058
| `-ParmVarDecl 0x563ee33a6168 <col:12> col:12 'Args::SlotT<String> &&'
|-CXXMethodDecl 0x563ee33a6208 <col:12> col:12 implicit operator= 'Args::SlotT<String> &(const Args::SlotT<String> &)' inline default noexcept-unevaluated 0x563ee33a6208
| `-ParmVarDecl 0x563ee33a6318 <col:12> col:12 'const Args::SlotT<String> &'
|-CXXMethodDecl 0x563ee33a6388 <col:12> col:12 implicit operator= 'Args::SlotT<String> &(Args::SlotT<String> &&)' inline default noexcept-unevaluated 0x563ee33a6388
| `-ParmVarDecl 0x563ee33a6498 <col:12> col:12 'Args::SlotT<String> &&'
`-CXXDestructorDecl 0x563ee33a6520 <col:12> col:12 implicit used ~SlotT 'void () noexcept' inline default
  |-Overrides: [ 0x563ee324f500 Slot::~Slot 'void () noexcept' ]
  `-CompoundStmt 0x563ee33a6c60 <col:12>

Layout: <CGRecordLayout
  LLVMType:%"struct.Args::SlotT" = type { %"struct.Args::Slot", %class.String*, %class.String }
  NonVirtualBaseLLVMType:%"struct.Args::SlotT" = type { %"struct.Args::Slot", %class.String*, %class.String }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct DefaultArg<unsigned int>
         0 |   class IntArg (base)
         0 |     class NumArg (base) (empty)
         0 |     int base
         4 |     int status
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x563ee328c280 <../dummy_inc/click/args.hh:1182:1, col:61> col:19 struct DefaultArg definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable can_const_default_init
| |-DefaultConstructor exists non_trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-public 'IntArg'
|-TemplateArgument type 'unsigned int'
|-CXXRecordDecl 0x563ee328c4d8 <col:12, col:19> col:19 implicit struct DefaultArg
|-CXXConstructorDecl 0x563ee33b0448 <col:19> col:19 implicit used DefaultArg 'void () noexcept(false)' inline default
| |-CXXCtorInitializer 'IntArg'
| | `-CXXConstructExpr 0x563ee33b08e0 <col:19> 'IntArg' 'void (int)'
| |   `-CXXDefaultArgExpr 0x563ee33b08c0 <<invalid sloc>> 'int'
| `-CompoundStmt 0x563ee33b0950 <col:19>
|-CXXConstructorDecl 0x563ee33b0548 <col:19> col:19 implicit constexpr DefaultArg 'void (const DefaultArg<unsigned int> &)' inline default trivial noexcept-unevaluated 0x563ee33b0548
| `-ParmVarDecl 0x563ee33b0658 <col:19> col:19 'const DefaultArg<unsigned int> &'
|-CXXConstructorDecl 0x563ee33b06f8 <col:19> col:19 implicit used constexpr DefaultArg 'void (DefaultArg<unsigned int> &&) noexcept' inline default trivial
| |-ParmVarDecl 0x563ee33b0808 <col:19> col:19 used 'DefaultArg<unsigned int> &&'
| |-CXXCtorInitializer 'IntArg'
| | `-CXXConstructExpr 0x563ee33b14d0 <col:19> 'IntArg' 'void (IntArg &&) noexcept'
| |   `-ImplicitCastExpr 0x563ee33b1200 <col:19> 'IntArg' xvalue <UncheckedDerivedToBase (IntArg)>
| |     `-CXXStaticCastExpr 0x563ee33b11d0 <col:19> 'DefaultArg<unsigned int>' xvalue static_cast<struct DefaultArg<unsigned int> &&> <NoOp>
| |       `-DeclRefExpr 0x563ee33b11a0 <col:19> 'DefaultArg<unsigned int>' lvalue ParmVar 0x563ee33b0808 '' 'DefaultArg<unsigned int> &&'
| `-CompoundStmt 0x563ee33b1540 <col:19>
`-CXXDestructorDecl 0x563ee33b0990 <col:19> col:19 implicit referenced ~DefaultArg 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%struct.DefaultArg.20 = type { %class.IntArg }
  NonVirtualBaseLLVMType:%struct.DefaultArg.20 = type { %class.IntArg }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct DefaultArg<int>
         0 |   class IntArg (base)
         0 |     class NumArg (base) (empty)
         0 |     int base
         4 |     int status
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x563ee328c5b0 <../dummy_inc/click/args.hh:1183:1, col:52> col:19 struct DefaultArg definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable can_const_default_init
| |-DefaultConstructor exists non_trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-public 'IntArg'
|-TemplateArgument type 'int'
|-CXXRecordDecl 0x563ee328c808 <col:12, col:19> col:19 implicit struct DefaultArg
|-CXXConstructorDecl 0x563ee33bb5f8 <col:19> col:19 implicit used DefaultArg 'void () noexcept(false)' inline default
| |-CXXCtorInitializer 'IntArg'
| | `-CXXConstructExpr 0x563ee33bba90 <col:19> 'IntArg' 'void (int)'
| |   `-CXXDefaultArgExpr 0x563ee33bba70 <<invalid sloc>> 'int'
| `-CompoundStmt 0x563ee33bbb00 <col:19>
|-CXXConstructorDecl 0x563ee33bb6f8 <col:19> col:19 implicit constexpr DefaultArg 'void (const DefaultArg<int> &)' inline default trivial noexcept-unevaluated 0x563ee33bb6f8
| `-ParmVarDecl 0x563ee33bb808 <col:19> col:19 'const DefaultArg<int> &'
|-CXXConstructorDecl 0x563ee33bb8a8 <col:19> col:19 implicit used constexpr DefaultArg 'void (DefaultArg<int> &&) noexcept' inline default trivial
| |-ParmVarDecl 0x563ee33bb9b8 <col:19> col:19 used 'DefaultArg<int> &&'
| |-CXXCtorInitializer 'IntArg'
| | `-CXXConstructExpr 0x563ee33bc3a0 <col:19> 'IntArg' 'void (IntArg &&) noexcept'
| |   `-ImplicitCastExpr 0x563ee33bc380 <col:19> 'IntArg' xvalue <UncheckedDerivedToBase (IntArg)>
| |     `-CXXStaticCastExpr 0x563ee33bc350 <col:19> 'DefaultArg<int>' xvalue static_cast<struct DefaultArg<int> &&> <NoOp>
| |       `-DeclRefExpr 0x563ee33bc320 <col:19> 'DefaultArg<int>' lvalue ParmVar 0x563ee33bb9b8 '' 'DefaultArg<int> &&'
| `-CompoundStmt 0x563ee33bc410 <col:19>
`-CXXDestructorDecl 0x563ee33bbb40 <col:19> col:19 implicit referenced ~DefaultArg 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%struct.DefaultArg.21 = type { %class.IntArg }
  NonVirtualBaseLLVMType:%struct.DefaultArg.21 = type { %class.IntArg }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct DefaultArg<_Bool> (empty)
         0 |   class BoolArg (base) (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=1, nvalign=1]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x563ee3291de8 <../dummy_inc/click/args.hh:1264:1, col:54> col:19 struct DefaultArg definition
|-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |-DefaultConstructor exists trivial constexpr defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-public 'BoolArg'
|-TemplateArgument type 'bool'
|-CXXRecordDecl 0x563ee3292048 <col:12, col:19> col:19 implicit struct DefaultArg
|-CXXConstructorDecl 0x563ee33c60c8 <col:19> col:19 implicit referenced constexpr DefaultArg 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x563ee33c61c8 <col:19> col:19 implicit constexpr DefaultArg 'void (const DefaultArg<bool> &)' inline default trivial noexcept-unevaluated 0x563ee33c61c8
| `-ParmVarDecl 0x563ee33c62d8 <col:19> col:19 'const DefaultArg<bool> &'
|-CXXConstructorDecl 0x563ee33c6378 <col:19> col:19 implicit used constexpr DefaultArg 'void (DefaultArg<bool> &&) noexcept' inline default trivial
| |-ParmVarDecl 0x563ee33c6488 <col:19> col:19 used 'DefaultArg<bool> &&'
| |-CXXCtorInitializer 'BoolArg'
| | `-CXXConstructExpr 0x563ee33c6dc0 <col:19> 'BoolArg' 'void (BoolArg &&) noexcept'
| |   `-ImplicitCastExpr 0x563ee33c6d90 <col:19> 'BoolArg' xvalue <UncheckedDerivedToBase (BoolArg)>
| |     `-CXXStaticCastExpr 0x563ee33c6d60 <col:19> 'DefaultArg<bool>' xvalue static_cast<struct DefaultArg<_Bool> &&> <NoOp>
| |       `-DeclRefExpr 0x563ee33c6d30 <col:19> 'DefaultArg<bool>' lvalue ParmVar 0x563ee33c6488 '' 'DefaultArg<bool> &&'
| `-CompoundStmt 0x563ee33c6e30 <col:19>
`-CXXDestructorDecl 0x563ee33c6528 <col:19> col:19 implicit referenced ~DefaultArg 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%struct.DefaultArg.22 = type { i8 }
  NonVirtualBaseLLVMType:%struct.DefaultArg.22 = type { i8 }
  IsZeroInitializable:1
  BitFields:[
]>
