
*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17)
         0 |   unsigned long long __wseq
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_internal_list
         0 |   struct __pthread_internal_list * __prev
         8 |   struct __pthread_internal_list * __next
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_mutex_s
         0 |   int __lock
         4 |   unsigned int __count
         8 |   int __owner
        12 |   unsigned int __nusers
        16 |   int __kind
        20 |   short __spins
        22 |   short __elision
        24 |   struct __pthread_internal_list __list
        24 |     struct __pthread_internal_list * __prev
        32 |     struct __pthread_internal_list * __next
           | [sizeof=40, dsize=40, align=8,
           |  nvsize=40, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17)
         0 |   unsigned long long __g1_start
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s
         0 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17) 
         0 |     unsigned long long __wseq
         0 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |       unsigned int __low
         4 |       unsigned int __high
         8 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17) 
         8 |     unsigned long long __g1_start
         8 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         8 |       unsigned int __low
        12 |       unsigned int __high
        16 |   unsigned int [2] __g_refs
        24 |   unsigned int [2] __g_size
        32 |   unsigned int __g1_orig_size
        36 |   unsigned int __wrefs
        40 |   unsigned int [2] __g_signals
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_rwlock_arch_t
         0 |   unsigned int __readers
         4 |   unsigned int __writers
         8 |   unsigned int __wrphase_futex
        12 |   unsigned int __writers_futex
        16 |   unsigned int __pad3
        20 |   unsigned int __pad4
        24 |   int __cur_writer
        28 |   int __shared
        32 |   signed char __rwelision
        33 |   unsigned char [7] __pad1
        40 |   unsigned long __pad2
        48 |   unsigned int __flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | lldiv_t
         0 |   long long quot
         8 |   long long rem
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct msghdr
         0 |   void * msg_name
         8 |   socklen_t msg_namelen
        16 |   struct iovec * msg_iov
        24 |   size_t msg_iovlen
        32 |   void * msg_control
        40 |   size_t msg_controllen
        48 |   int msg_flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | struct in_addr
         0 |   in_addr_t s_addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5)
         0 |   uint8_t [16] __u6_addr8
         0 |   uint16_t [8] __u6_addr16
         0 |   uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr
         0 |   sa_family_t sa_family
         2 |   char [14] sa_data
           | [sizeof=16, dsize=16, align=2,
           |  nvsize=16, nvalign=2]

*** Dumping AST Record Layout
         0 | struct in6_addr
         0 |   union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         0 |     uint8_t [16] __u6_addr8
         0 |     uint16_t [8] __u6_addr16
         0 |     uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr_storage
         0 |   sa_family_t ss_family
         2 |   char [118] __ss_padding
       120 |   unsigned long __ss_align
           | [sizeof=128, dsize=128, align=8,
           |  nvsize=128, nvalign=8]

*** Dumping AST Record Layout
         0 | struct sockaddr_in6
         0 |   sa_family_t sin6_family
         2 |   in_port_t sin6_port
         4 |   uint32_t sin6_flowinfo
         8 |   struct in6_addr sin6_addr
         8 |     union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         8 |       uint8_t [16] __u6_addr8
         8 |       uint16_t [8] __u6_addr16
         8 |       uint32_t [4] __u6_addr32
        24 |   uint32_t sin6_scope_id
           | [sizeof=28, dsize=28, align=4,
           |  nvsize=28, nvalign=4]

*** Dumping AST Record Layout
         0 | struct timeval
         0 |   __time_t tv_sec
         8 |   __suseconds_t tv_usec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::memo_t
         0 |   volatile uint32_t refcount
         4 |   uint32_t capacity
         8 |   volatile uint32_t dirty
        12 |   char [8] real_data
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping AST Record Layout
         0 | class IPAddress
         0 |   uint32_t _addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Timestamp::rep_t
         0 |   int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timestamp
         0 |   union Timestamp::rep_t _t
         0 |     int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct timespec
         0 |   __time_t tv_sec
         8 |   __syscall_slong_t tv_nsec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element::Port
         0 |   class Element * _e
         8 |   int _port
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping AST Record Layout
         0 | struct TimerSet::heap_element
         0 |   class Timestamp expiry_s
         0 |     union Timestamp::rep_t _t
         0 |       int64_t x
         8 |   class Timer * t
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct pollfd
         0 |   int fd
         4 |   short events
         6 |   short revents
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | struct SelectSet::SelectorInfo
         0 |   class Element * read
         8 |   class Element * write
        16 |   int pollfd
           | [sizeof=24, dsize=20, align=8,
           |  nvsize=20, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::rep_t
         0 |   const char * data
         8 |   int length
        16 |   struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class String
         0 |   struct String::rep_t _r
         0 |     const char * data
         8 |     int length
        16 |     struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | struct StringAccum::rep_t
         0 |   unsigned char * s
         8 |   int len
        12 |   int cap
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element
         0 |   (Element vtable pointer)
         8 |   class Element::Port *[2] _ports
        24 |   class Element::Port [4] _inline_ports
        88 |   int [2] _nports
        96 |   class Router * _router
       104 |   int _eindex
           | [sizeof=112, dsize=108, align=8,
           |  nvsize=108, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x556663129b68 prev 0x556663121308 <../dummy_inc/click/element.hh:214:5, line:252:5> line:214:11 referenced class Port definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x556663129c60 <col:5, col:11> col:11 implicit referenced class Port
|-AccessSpecDecl 0x556663129cf0 <col:18, col:24> col:18 public
|-CXXMethodDecl 0x556663129d68 <line:216:9, col:30> col:21 used active 'bool () const' inline
|-CXXMethodDecl 0x556663129e28 <line:217:9, col:35> col:25 element 'Element *() const' inline
|-CXXMethodDecl 0x556663129ef0 <line:218:9, col:27> col:20 port 'int () const' inline
|-CXXMethodDecl 0x55666312a068 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| |-ParmVarDecl 0x556663129fa0 <col:54, col:62> col:62 p 'Packet *'
| |-NoInlineAttr 0x55666312a110 <col:24>
| `-OptimizeNoneAttr 0x55666312a168 <col:34>
|-CXXMethodDecl 0x55666312a1b0 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
|-CXXMethodDecl 0x55666312a468 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| |-ParmVarDecl 0x55666312a260 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x55666312a2d8 <col:43, col:52> col:52 e 'Element *'
| `-ParmVarDecl 0x55666312a358 <col:55, col:59> col:59 port 'int'
|-AccessSpecDecl 0x55666312a520 <line:229:7, col:14> col:7 private
|-FieldDecl 0x55666312a558 <line:231:9, col:18> col:18 referenced _e 'Element *'
|-FieldDecl 0x55666312a5c0 <line:232:9, col:13> col:13 referenced _port 'int'
|-CXXConstructorDecl 0x55666312a648 <line:247:9, col:21> col:16 Port 'void ()' inline
|-CXXMethodDecl 0x55666312a968 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| |-ParmVarDecl 0x55666312a700 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x55666312a778 <col:43, col:52> col:52 owner 'Element *'
| |-ParmVarDecl 0x55666312a7f0 <col:59, col:68> col:68 e 'Element *'
| `-ParmVarDecl 0x55666312a870 <col:71, col:75> col:75 port 'int'
|-FriendDecl 0x55666312aa80 <line:250:9, col:22> col:16 'class Element':'Element'
|-CXXConstructorDecl 0x5566631323f8 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x5566631323f8
| `-ParmVarDecl 0x556663132508 <col:11> col:11 'const Element::Port &'
|-CXXConstructorDecl 0x5566631325a8 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x5566631325a8
| `-ParmVarDecl 0x5566631326b8 <col:11> col:11 'Element::Port &&'
`-CXXDestructorDecl 0x5566632d4620 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"class.Element::Port" = type <{ %class.Element*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%"class.Element::Port.base" = type <{ %class.Element*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55666311cb80 prev 0x55666311c900 <../dummy_inc/click/element.hh:29:1, line:319:1> line:29:7 referenced class Element definition
|-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55666311cc78 <col:1, col:7> col:7 implicit referenced class Element
|-AccessSpecDecl 0x55666311cd08 <col:17, col:23> col:17 public
|-CXXConstructorDecl 0x55666311cd68 <line:31:5, col:13> col:5 used Element 'void ()'
|-CXXDestructorDecl 0x55666311ce58 <line:32:5, col:22> col:13 used ~Element 'void () noexcept' virtual
|-VarDecl 0x55666311cf58 <line:33:5, col:16> col:16 nelements_allocated 'int' static
|-CXXMethodDecl 0x55666311d128 <line:36:5, col:42> col:18 used push 'void (int, Packet *)' virtual
| |-ParmVarDecl 0x55666311cfd8 <col:23, col:27> col:27 port 'int'
| `-ParmVarDecl 0x55666311d050 <col:33, col:41> col:41 p 'Packet *'
|-CXXMethodDecl 0x55666311d2b8 <line:37:5, col:70> col:21 used pull 'Packet *(int)' virtual
| |-ParmVarDecl 0x55666311d1f0 <col:26, col:30> col:30 port 'int'
| `-WarnUnusedResultAttr 0x55666311d360 <col:51> warn_unused_result ""
|-CXXMethodDecl 0x55666311d498 <line:38:5, col:44> col:21 simple_action 'Packet *(Packet *)' virtual
| `-ParmVarDecl 0x55666311d3d0 <col:35, col:43> col:43 p 'Packet *'
|-CXXMethodDecl 0x55666311d638 <line:40:5, col:37> col:18 used run_task 'bool (Task *)' virtual
| `-ParmVarDecl 0x55666311d578 <col:27, col:33> col:33 task 'Task *'
|-CXXMethodDecl 0x55666311d7d8 <line:41:5, col:40> col:18 run_timer 'void (Timer *)' virtual
| `-ParmVarDecl 0x55666311d718 <col:28, col:35> col:35 timer 'Timer *'
|-EnumDecl 0x55666311d880 <line:43:5, col:46> col:5
| |-EnumConstantDecl 0x55666311d980 <col:12, col:26> col:12 SELECT_READ 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
| | `-ImplicitCastExpr 0x55666311da60 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55666311d960 <col:26> 'int' Int: 1
| |     `-IntegerLiteral 0x55666311d940 <col:26> 'int' 1
| `-EnumConstantDecl 0x55666311da10 <col:29, col:44> col:29 SELECT_WRITE 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
|   `-ImplicitCastExpr 0x55666311da78 <col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55666311d9f0 <col:44> 'int' Int: 2
|       `-IntegerLiteral 0x55666311d9d0 <col:44> 'int' 2
|-CXXMethodDecl 0x55666311dbc0 <line:44:5, col:43> col:18 selected 'void (int, int)' virtual
| |-ParmVarDecl 0x55666311daa8 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x55666311db28 <col:35, col:39> col:39 mask 'int'
|-CXXMethodDecl 0x55666311dd18 <line:45:5, col:33> col:18 selected 'void (int)' virtual
| `-ParmVarDecl 0x55666311dc88 <col:27, col:31> col:31 fd 'int'
|-CXXMethodDecl 0x55666311df58 <line:48:5, col:86> col:45 checked_output_push 'void (int, Packet *) const'
| |-ParmVarDecl 0x55666311ddd8 <col:65, col:69> col:69 port 'int'
| |-ParmVarDecl 0x55666311de50 <col:75, col:83> col:83 p 'Packet *'
| |-NoInlineAttr 0x55666311e008 <col:20>
| `-OptimizeNoneAttr 0x55666311e060 <col:30>
|-CXXMethodDecl 0x55666311e168 <line:49:5, col:77> col:48 checked_input_pull 'Packet *(int) const'
| |-ParmVarDecl 0x55666311e0a0 <col:67, col:71> col:71 port 'int'
| |-NoInlineAttr 0x55666311e210 <col:20>
| `-OptimizeNoneAttr 0x55666311e268 <col:30>
|-CXXMethodDecl 0x55666311e2b8 <line:52:5, col:46> col:25 class_name 'const char *() const' virtual pure
|-CXXMethodDecl 0x55666311e380 <line:54:5, col:38> col:25 port_count 'const char *() const' virtual
|-VarDecl 0x55666311e498 <line:55:5, col:33> col:23 PORTS_0_0 'const char []' static
|-VarDecl 0x55666311e520 <line:56:5, col:33> col:23 PORTS_0_1 'const char []' static
|-VarDecl 0x55666311e5a8 <line:57:5, col:33> col:23 PORTS_1_0 'const char []' static
|-VarDecl 0x55666311e630 <line:58:5, col:33> col:23 PORTS_1_1 'const char []' static
|-VarDecl 0x55666311e6b8 <line:59:5, col:35> col:23 PORTS_1_1X2 'const char []' static
|-CXXMethodDecl 0x55666311e748 <line:61:5, col:38> col:25 processing 'const char *() const' virtual
|-VarDecl 0x55666311e808 <line:62:5, col:32> col:23 AGNOSTIC 'const char []' static
|-VarDecl 0x55666311e890 <line:63:5, col:28> col:23 PUSH 'const char []' static
|-VarDecl 0x55666311e918 <line:64:5, col:28> col:23 used PULL 'const char []' static
|-VarDecl 0x55666311e9a0 <line:65:5, col:36> col:23 PUSH_TO_PULL 'const char []' static
|-VarDecl 0x55666311ea28 <line:66:5, col:36> col:23 PULL_TO_PUSH 'const char []' static
|-VarDecl 0x55666311eab0 <line:67:5, col:39> col:23 PROCESSING_A_AH 'const char []' static
|-CXXMethodDecl 0x55666311eb40 <line:69:5, col:37> col:25 flow_code 'const char *() const' virtual
|-VarDecl 0x55666311ec00 <line:70:5, col:37> col:23 COMPLETE_FLOW 'const char []' static
|-CXXMethodDecl 0x55666311ec90 <line:72:5, col:33> col:25 flags 'const char *() const' virtual
|-CXXMethodDecl 0x55666311ede0 <line:73:5, col:30> col:9 flag_value 'int (int) const'
| `-ParmVarDecl 0x55666311ed48 <col:20, col:24> col:24 flag 'int'
|-CXXMethodDecl 0x55666311ef70 <line:75:5, col:40> col:19 cast 'void *(const char *)' virtual
| `-ParmVarDecl 0x55666311eea0 <col:24, col:36> col:36 name 'const char *'
|-CXXMethodDecl 0x55666311f220 <line:76:5, col:70> col:19 port_cast 'void *(bool, int, const char *)' virtual
| |-ParmVarDecl 0x55666311f028 <col:29, col:34> col:34 isoutput 'bool'
| |-ParmVarDecl 0x55666311f0a8 <col:44, col:48> col:48 port 'int'
| `-ParmVarDecl 0x55666311f128 <col:54, col:66> col:66 name 'const char *'
|-EnumDecl 0x55666311f2d8 <line:79:5, line:85:5> line:79:10 ConfigurePhase
| |-EnumConstantDecl 0x55666311f3e0 <line:80:9, col:33> col:9 CONFIGURE_PHASE_FIRST 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55666311f670 <col:33> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55666311f3c0 <col:33> 'int' Int: 0
| |     `-IntegerLiteral 0x55666311f3a0 <col:33> 'int' 0
| |-EnumConstantDecl 0x55666311f470 <line:81:9, col:32> col:9 CONFIGURE_PHASE_INFO 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55666311f688 <col:32> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55666311f450 <col:32> 'int' Int: 20
| |     `-IntegerLiteral 0x55666311f430 <col:32> 'int' 20
| |-EnumConstantDecl 0x55666311f500 <line:82:9, col:38> col:9 CONFIGURE_PHASE_PRIVILEGED 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55666311f6a0 <col:38> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55666311f4e0 <col:38> 'int' Int: 90
| |     `-IntegerLiteral 0x55666311f4c0 <col:38> 'int' 90
| |-EnumConstantDecl 0x55666311f590 <line:83:9, col:35> col:9 CONFIGURE_PHASE_DEFAULT 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55666311f6b8 <col:35> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55666311f570 <col:35> 'int' Int: 100
| |     `-IntegerLiteral 0x55666311f550 <col:35> 'int' 100
| `-EnumConstantDecl 0x55666311f620 <line:84:9, col:32> col:9 CONFIGURE_PHASE_LAST 'Element::ConfigurePhase'
|   `-ImplicitCastExpr 0x55666311f6d0 <col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55666311f600 <col:32> 'int' Int: 2000
|       `-IntegerLiteral 0x55666311f5e0 <col:32> 'int' 2000
|-CXXMethodDecl 0x55666311f710 <line:86:5, col:35> col:17 configure_phase 'int () const' virtual
|-CXXMethodDecl 0x55666311fb50 <line:88:5, col:67> col:17 configure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x55666311f9c0 <col:27, col:43> col:43 conf 'Vector<String> &'
| `-ParmVarDecl 0x55666311fa38 <col:49, col:63> col:63 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55666311fc20 <line:90:5, col:31> col:18 add_handlers 'void ()' virtual
|-CXXMethodDecl 0x55666311fda0 <line:92:5, col:46> col:17 initialize 'int (ErrorHandler *)' virtual
| `-ParmVarDecl 0x55666311fcd0 <col:28, col:42> col:42 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55666311ffa8 <line:94:5, col:69> col:18 take_state 'void (Element *, ErrorHandler *)' virtual
| |-ParmVarDecl 0x55666311fe58 <col:29, col:38> col:38 old_element 'Element *'
| `-ParmVarDecl 0x55666311fed0 <col:51, col:65> col:65 errh 'ErrorHandler *'
|-CXXMethodDecl 0x5566631200a8 <line:95:5, col:40> col:22 hotswap_element 'Element *() const' virtual
|-EnumDecl 0x556663120148 <line:97:5, line:106:5> line:97:10 referenced CleanupStage
| |-EnumConstantDecl 0x556663120210 <line:98:9> col:9 referenced CLEANUP_NO_ROUTER 'Element::CleanupStage'
| |-EnumConstantDecl 0x5566631202a0 <line:99:9, col:36> col:9 CLEANUP_BEFORE_CONFIGURE 'Element::CleanupStage'
| | `-ImplicitCastExpr 0x5566631204d0 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x556663120280 <col:36> 'int' Int: 0
| |     `-DeclRefExpr 0x556663120260 <col:36> 'int' EnumConstant 0x556663120210 'CLEANUP_NO_ROUTER' 'Element::CleanupStage'
| |-EnumConstantDecl 0x5566631202f0 <line:100:9> col:9 CLEANUP_CONFIGURE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x556663120340 <line:101:9> col:9 CLEANUP_CONFIGURED 'Element::CleanupStage'
| |-EnumConstantDecl 0x556663120390 <line:102:9> col:9 CLEANUP_INITIALIZE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x5566631203e0 <line:103:9> col:9 CLEANUP_INITIALIZED 'Element::CleanupStage'
| |-EnumConstantDecl 0x556663120430 <line:104:9> col:9 CLEANUP_ROUTER_INITIALIZED 'Element::CleanupStage'
| `-EnumConstantDecl 0x556663120480 <line:105:9> col:9 CLEANUP_MANUAL 'Element::CleanupStage'
|-CXXMethodDecl 0x5566631205b8 <line:107:5, col:44> col:18 cleanup 'void (Element::CleanupStage)' virtual
| `-ParmVarDecl 0x5566631204f8 <col:26, col:39> col:39 stage 'Element::CleanupStage'
|-CXXMethodDecl 0x556663120680 <line:109:5, col:42> col:24 static_initialize 'void ()' static inline
|-CXXMethodDecl 0x556663120740 <line:110:5, col:39> col:24 static_cleanup 'void ()' static inline
|-CXXMethodDecl 0x556663120800 <line:113:5, col:19> col:12 name 'String () const'
|-CXXMethodDecl 0x5566631208c0 <line:114:5, col:34> col:20 declaration 'String () const' virtual
|-CXXMethodDecl 0x5566631209d8 <line:116:5, col:29> col:20 used router 'Router *() const' inline
|-CXXMethodDecl 0x556663120aa0 <line:117:5, col:25> col:16 eindex 'int () const' inline
|-CXXMethodDecl 0x556663120c20 <line:118:5, col:34> col:16 eindex 'int (Router *) const' inline
| `-ParmVarDecl 0x556663120b50 <col:23, col:31> col:31 r 'Router *'
|-CXXMethodDecl 0x556663120d48 <line:121:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x556663120f48 <line:123:5, line:127:5> line:123:17 attach_router 'void (Router *, int)' inline
| |-ParmVarDecl 0x556663120df8 <col:31, col:39> col:39 used r 'Router *'
| |-ParmVarDecl 0x556663120e78 <col:42, col:46> col:46 used eindex 'int'
| `-CompoundStmt 0x55666312e898 <col:54, line:127:5>
|   |-ParenExpr 0x55666312e748 <line:124:9, col:152> 'void'
|   | `-ConditionalOperator 0x55666312e718 <col:10, col:151> 'void'
|   |   |-CXXStaticCastExpr 0x55666312e408 <col:10, col:38> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x55666312e3e0 <col:30, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-ImplicitCastExpr 0x55666312e3c8 <col:31> 'bool' <PointerToBoolean>
|   |   |     `-ImplicitCastExpr 0x55666312e3b0 <col:31> 'Router *' <LValueToRValue>
|   |   |       `-MemberExpr 0x55666312e380 <col:31> 'Router *' lvalue ->_router 0x55666312c260
|   |   |         `-CXXThisExpr 0x55666312e370 <col:31> 'Element *' implicit this
|   |   |-CXXFunctionalCastExpr 0x55666312e468 <col:42, col:49> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55666312e448 <col:48> 'int' 0
|   |   `-CallExpr 0x55666312e678 <col:53, col:151> 'void'
|   |     |-ImplicitCastExpr 0x55666312e660 <col:53> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55666312e640 <col:53> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x556662c57250 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55666312e6b8 <col:68> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55666312e4d8 <col:68> 'const char [9]' lvalue "!_router"
|   |     |-ImplicitCastExpr 0x55666312e6d0 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55666312e4f8 <col:80> 'const char [30]' lvalue "../dummy_inc/click/element.hh"
|   |     |-ImplicitCastExpr 0x55666312e6e8 <col:113> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55666312e530 <col:113> 'int' 124
|   |     `-ImplicitCastExpr 0x55666312e700 <col:118, col:132> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55666312e628 <col:118, col:132> 'const char [43]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55666312e610 <col:132> 'const char [43]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55666312e5c8 <col:132> 'const char [43]' lvalue "void Element::attach_router(Router *, int)"
|   |-BinaryOperator 0x55666312e7e0 <line:125:9, col:19> 'Router *' lvalue '='
|   | |-MemberExpr 0x55666312e778 <col:9> 'Router *' lvalue ->_router 0x55666312c260
|   | | `-CXXThisExpr 0x55666312e768 <col:9> 'Element *' implicit this
|   | `-ImplicitCastExpr 0x55666312e7c8 <col:19> 'Router *' <LValueToRValue>
|   |   `-DeclRefExpr 0x55666312e7a8 <col:19> 'Router *' lvalue ParmVar 0x556663120df8 'r' 'Router *'
|   `-BinaryOperator 0x55666312e878 <line:126:9, col:19> 'int' lvalue '='
|     |-MemberExpr 0x55666312e810 <col:9> 'int' lvalue ->_eindex 0x55666312c2c8
|     | `-CXXThisExpr 0x55666312e800 <col:9> 'Element *' implicit this
|     `-ImplicitCastExpr 0x55666312e860 <col:19> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x55666312e840 <col:19> 'int' lvalue ParmVar 0x556663120e78 'eindex' 'int'
|-CXXMethodDecl 0x5566631210d0 <line:130:5, col:38> col:16 used nports 'int (bool) const' inline
| `-ParmVarDecl 0x556663121008 <col:23, col:28> col:28 isoutput 'bool'
|-CXXMethodDecl 0x5566631211a0 <line:131:5, col:26> col:16 used ninputs 'int () const' inline
|-CXXMethodDecl 0x556663121268 <line:132:5, col:27> col:16 used noutputs 'int () const' inline
|-CXXRecordDecl 0x556663121308 <line:134:5, col:11> col:11 referenced class Port
|-CXXMethodDecl 0x556663121558 <line:135:5, col:82> col:52 used port 'const Element::Port &(bool, int) const'
| |-ParmVarDecl 0x5566631213d0 <col:57, col:62> col:62 isoutput 'bool'
| |-ParmVarDecl 0x556663121450 <col:72, col:76> col:76 port 'int'
| |-NoInlineAttr 0x556663121608 <col:20>
| `-OptimizeNoneAttr 0x556663121660 <col:30>
|-CXXMethodDecl 0x556663121768 <line:136:5, col:68> col:52 input 'const Element::Port &(int) const'
| |-ParmVarDecl 0x5566631216a0 <col:58, col:62> col:62 port 'int'
| |-NoInlineAttr 0x556663121810 <col:20>
| `-OptimizeNoneAttr 0x556663121868 <col:30>
|-CXXMethodDecl 0x556663121938 <line:137:5, col:69> col:52 output 'const Element::Port &(int) const'
| |-ParmVarDecl 0x5566631218a8 <col:59, col:63> col:63 port 'int'
| |-NoInlineAttr 0x5566631219e0 <col:20>
| `-OptimizeNoneAttr 0x556663121a38 <col:30>
|-CXXMethodDecl 0x556663121bc8 <line:139:5, col:54> col:17 used port_active 'bool (bool, int) const' inline
| |-ParmVarDecl 0x556663121a70 <col:29, col:34> col:34 isoutput 'bool'
| `-ParmVarDecl 0x556663121af0 <col:44, col:48> col:48 port 'int'
|-CXXMethodDecl 0x556663121d58 <line:140:5, col:41> col:17 input_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x556663121c90 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x556663121ea8 <line:141:5, col:41> col:17 used input_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x556663121e18 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x556663121ff8 <line:142:5, col:42> col:17 output_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x556663121f68 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x556663122148 <line:143:5, col:42> col:17 output_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x5566631220b8 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x556663122408 <line:144:5, col:57> col:10 port_flow 'void (bool, int, Bitvector *) const'
| |-ParmVarDecl 0x556663122200 <col:20, col:25> col:25 isoutput 'bool'
| |-ParmVarDecl 0x556663122280 <col:35, col:39> col:39 port 'int'
| `-ParmVarDecl 0x556663122328 <col:45, col:54> col:55 'Bitvector *'
|-CXXMethodDecl 0x5566631224e0 <line:147:5, col:28> col:12 configuration 'String () const'
|-CXXMethodDecl 0x5566631225a0 <line:149:5, col:41> col:18 can_live_reconfigure 'bool () const' virtual
|-CXXMethodDecl 0x556663122870 <line:150:5, col:64> col:17 live_reconfigure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x556663122720 <col:34, col:48> col:49 'Vector<String> &'
| `-ParmVarDecl 0x556663122798 <col:51, col:63> col:64 'ErrorHandler *'
|-CXXMethodDecl 0x556663122998 <line:152:5, col:33> col:19 home_thread 'RouterThread *() const'
|-CXXMethodDecl 0x556663122b70 <line:156:5, col:36> col:9 add_select 'int (int, int)'
| |-ParmVarDecl 0x556663122a50 <col:20, col:24> col:24 fd 'int'
| `-ParmVarDecl 0x556663122ad0 <col:28, col:32> col:32 mask 'int'
|-CXXMethodDecl 0x556663122d58 <line:157:5, col:39> col:9 remove_select 'int (int, int)'
| |-ParmVarDecl 0x556663122c38 <col:23, col:27> col:27 fd 'int'
| `-ParmVarDecl 0x556663122cb8 <col:31, col:35> col:35 mask 'int'
|-CXXMethodDecl 0x5566631230c8 <line:161:5, col:127> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x556663122e18 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x556663122e90 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x556663122f10 <col:82, col:106> col:94 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x55666312de80 <col:106> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x55666312de60 <col:106> 'int' 0
| `-ParmVarDecl 0x556663122f88 <col:109, col:126> col:118 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55666312deb8 <col:126> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55666312de98 <col:126> 'int' 0
|-CXXMethodDecl 0x556663123468 <line:162:5, col:115> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x556663123198 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x556663123230 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x5566631232b0 <col:82, col:86> col:86 user_data 'int'
| `-ParmVarDecl 0x556663123328 <col:97, col:114> col:106 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55666312def0 <col:114> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55666312ded0 <col:114> 'int' 0
|-CXXMethodDecl 0x5566631237f8 <line:163:5, col:117> col:10 add_read_handler 'void (const char *, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x556663123540 <col:27, col:39> col:39 name 'const char *'
| |-ParmVarDecl 0x5566631235b8 <col:45, col:65> col:65 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x556663123638 <col:80, col:96> col:84 user_data 'int' cinit
| | `-IntegerLiteral 0x55666312df08 <col:96> 'int' 0
| `-ParmVarDecl 0x5566631236b0 <col:99, col:116> col:108 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55666312df48 <col:116> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55666312df28 <col:116> 'int' 0
|-CXXMethodDecl 0x556663123b78 <line:164:5, col:130> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x5566631238c8 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x556663123940 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x5566631239c0 <col:85, col:109> col:97 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x55666312df80 <col:109> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x55666312df60 <col:109> 'int' 0
| `-ParmVarDecl 0x556663123a38 <col:112, col:129> col:121 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55666312dfb8 <col:129> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55666312df98 <col:129> 'int' 0
|-CXXMethodDecl 0x556663123ef8 <line:165:5, col:118> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x556663123c48 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x556663123cc0 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x556663123d40 <col:85, col:89> col:89 user_data 'int'
| `-ParmVarDecl 0x556663123db8 <col:100, col:117> col:109 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55666312dff0 <col:117> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55666312dfd0 <col:117> 'int' 0
|-CXXMethodDecl 0x556663124288 <line:166:5, col:120> col:10 add_write_handler 'void (const char *, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x556663123fd0 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x556663124048 <col:46, col:67> col:67 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x5566631240c8 <col:83, col:99> col:87 user_data 'int' cinit
| | `-IntegerLiteral 0x55666312e008 <col:99> 'int' 0
| `-ParmVarDecl 0x556663124140 <col:102, col:119> col:111 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55666312e048 <col:119> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55666312e028 <col:119> 'int' 0
|-CXXMethodDecl 0x5566631246a8 <line:167:5, col:142> col:10 set_handler 'void (const String &, int, HandlerCallback, const void *, const void *)'
| |-ParmVarDecl 0x556663124358 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x5566631243d8 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x556663124450 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x5566631244d0 <col:79, col:108> col:91 read_user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x55666312e080 <col:108> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x55666312e060 <col:108> 'int' 0
| `-ParmVarDecl 0x556663124550 <col:111, col:141> col:123 write_user_data 'const void *' cinit
|   `-ImplicitCastExpr 0x55666312e0b8 <col:141> 'const void *' <NullToPointer>
|     `-IntegerLiteral 0x55666312e098 <col:141> 'int' 0
|-CXXMethodDecl 0x556663124ac8 <line:168:5, col:122> col:10 set_handler 'void (const String &, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x556663124780 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x556663124800 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x556663124878 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x5566631248f8 <col:79, col:83> col:83 read_user_data 'int'
| `-ParmVarDecl 0x556663124978 <col:99, col:121> col:103 write_user_data 'int' cinit
|   `-IntegerLiteral 0x55666312e0d0 <col:121> 'int' 0
|-CXXMethodDecl 0x556663124ef8 <line:169:5, col:124> col:10 set_handler 'void (const char *, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x556663124ba8 <col:22, col:34> col:34 name 'const char *'
| |-ParmVarDecl 0x556663124c28 <col:40, col:44> col:44 flags 'int'
| |-ParmVarDecl 0x556663124ca0 <col:51, col:67> col:67 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x556663124d20 <col:77, col:98> col:81 read_user_data 'int' cinit
| | `-IntegerLiteral 0x55666312e0f0 <col:98> 'int' 0
| `-ParmVarDecl 0x556663124da0 <col:101, col:123> col:105 write_user_data 'int' cinit
|   `-IntegerLiteral 0x55666312e110 <col:123> 'int' 0
|-CXXMethodDecl 0x5566631251c0 <line:170:5, col:81> col:9 set_handler_flags 'int (const String &, int, int)'
| |-ParmVarDecl 0x556663124fd0 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x556663125050 <col:47, col:51> col:51 set_flags 'int'
| `-ParmVarDecl 0x5566631250d0 <col:62, col:80> col:66 clear_flags 'int' cinit
|   `-IntegerLiteral 0x55666312e130 <col:80> 'int' 0
|-EnumDecl 0x556663125278 <line:171:5, line:175:36> line:171:5
| |-EnumConstantDecl 0x556663125380 <col:12, col:42> col:12 TASKHANDLER_WRITE_SCHEDULED 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x556663125610 <col:42> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x556663125360 <col:42> 'int' Int: 1
| |     `-IntegerLiteral 0x556663125340 <col:42> 'int' 1
| |-EnumConstantDecl 0x556663125410 <line:172:12, col:40> col:12 TASKHANDLER_WRITE_TICKETS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x556663125628 <col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5566631253f0 <col:40> 'int' Int: 2
| |     `-IntegerLiteral 0x5566631253d0 <col:40> 'int' 2
| |-EnumConstantDecl 0x5566631254a0 <line:173:12, col:44> col:12 TASKHANDLER_WRITE_HOME_THREAD 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x556663125640 <col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x556663125480 <col:44> 'int' Int: 4
| |     `-IntegerLiteral 0x556663125460 <col:44> 'int' 4
| |-EnumConstantDecl 0x556663125530 <line:174:12, col:36> col:12 TASKHANDLER_WRITE_ALL 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x556663125658 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x556663125510 <col:36> 'int' Int: 7
| |     `-IntegerLiteral 0x5566631254f0 <col:36> 'int' 7
| `-EnumConstantDecl 0x5566631255c0 <line:175:12, col:34> col:12 referenced TASKHANDLER_DEFAULT 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|   `-ImplicitCastExpr 0x556663125670 <col:34> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5566631255a0 <col:34> 'int' Int: 6
|       `-IntegerLiteral 0x556663125580 <col:34> 'int' 6
|-CXXMethodDecl 0x556663125928 <line:176:5, col:106> col:10 used add_task_handlers 'void (Task *, NotifierSignal *, int, const String &)'
| |-ParmVarDecl 0x556663125698 <col:28, col:34> col:34 task 'Task *'
| |-ParmVarDecl 0x556663125738 <col:40, col:56> col:56 signal 'NotifierSignal *'
| |-ParmVarDecl 0x5566631257b8 <col:64, col:68> col:68 flags 'int'
| `-ParmVarDecl 0x556663125830 <col:75, col:105> col:89 prefix 'const String &' cinit
|   `-ExprWithCleanups 0x55666312e1e8 <col:98, col:105> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x55666312e1d0 <col:98, col:105> 'const String' lvalue
|       `-ImplicitCastExpr 0x55666312e1b8 <col:98, col:105> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x55666312e198 <col:98, col:105> 'String' (CXXTemporary 0x55666312e198)
|           `-CXXTemporaryObjectExpr 0x55666312e160 <col:98, col:105> 'String' 'void ()'
|-CXXMethodDecl 0x556663125bc8 <line:177:5, line:179:5> line:177:17 add_task_handlers 'void (Task *, NotifierSignal *, const String &)' inline
| |-ParmVarDecl 0x5566631259f8 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x556663125a70 <col:47, col:63> col:63 used signal 'NotifierSignal *'
| |-ParmVarDecl 0x556663125ae8 <col:71, col:101> col:85 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x55666312e298 <col:94, col:101> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x55666312e280 <col:94, col:101> 'const String' lvalue
| |     `-ImplicitCastExpr 0x55666312e268 <col:94, col:101> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x55666312e248 <col:94, col:101> 'String' (CXXTemporary 0x55666312e248)
| |         `-CXXTemporaryObjectExpr 0x55666312e210 <col:94, col:101> 'String' 'void ()'
| `-CompoundStmt 0x55666312ea80 <col:104, line:179:5>
|   `-CXXMemberCallExpr 0x55666312e9f8 <line:178:9, col:68> 'void'
|     |-MemberExpr 0x55666312e9c8 <col:9> '<bound member function type>' ->add_task_handlers 0x556663125928
|     | `-CXXThisExpr 0x55666312e9b8 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x55666312ea38 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x55666312e938 <col:27> 'Task *' lvalue ParmVar 0x5566631259f8 'task' 'Task *'
|     |-ImplicitCastExpr 0x55666312ea50 <col:33> 'NotifierSignal *' <LValueToRValue>
|     | `-DeclRefExpr 0x55666312e958 <col:33> 'NotifierSignal *' lvalue ParmVar 0x556663125a70 'signal' 'NotifierSignal *'
|     |-ImplicitCastExpr 0x55666312ea68 <col:41> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x55666312e978 <col:41> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x5566631255c0 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x55666312e998 <col:62> 'const String' lvalue ParmVar 0x556663125ae8 'prefix' 'const String &'
|-CXXMethodDecl 0x556663125dd8 <line:180:5, line:182:5> line:180:17 add_task_handlers 'void (Task *, const String &)' inline
| |-ParmVarDecl 0x556663125c90 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x556663125d08 <col:47, col:77> col:61 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x55666312e348 <col:70, col:77> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x55666312e330 <col:70, col:77> 'const String' lvalue
| |     `-ImplicitCastExpr 0x55666312e318 <col:70, col:77> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x55666312e2f8 <col:70, col:77> 'String' (CXXTemporary 0x55666312e2f8)
| |         `-CXXTemporaryObjectExpr 0x55666312e2c0 <col:70, col:77> 'String' 'void ()'
| `-CompoundStmt 0x55666312ec58 <col:80, line:182:5>
|   `-CXXMemberCallExpr 0x55666312ebd0 <line:181:9, col:63> 'void'
|     |-MemberExpr 0x55666312eba0 <col:9> '<bound member function type>' ->add_task_handlers 0x556663125928
|     | `-CXXThisExpr 0x55666312eb90 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x55666312ec10 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x55666312eb10 <col:27> 'Task *' lvalue ParmVar 0x556663125c90 'task' 'Task *'
|     |-ImplicitCastExpr 0x55666312ec28 <col:33> 'NotifierSignal *' <NullToPointer>
|     | `-IntegerLiteral 0x55666312eb30 <col:33> 'int' 0
|     |-ImplicitCastExpr 0x55666312ec40 <col:36> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x55666312eb50 <col:36> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x5566631255c0 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x55666312eb70 <col:57> 'const String' lvalue ParmVar 0x556663125d08 'prefix' 'const String &'
|-CXXMethodDecl 0x5566631260b8 <line:184:5, col:70> col:10 add_data_handlers 'void (const char *, int, uint8_t *)'
| |-ParmVarDecl 0x556663125ea0 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x556663125f20 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x556663125f98 <col:57, col:66> col:66 data 'uint8_t *'
|-CXXMethodDecl 0x556663126368 <line:185:5, col:67> col:10 add_data_handlers 'void (const char *, int, bool *)'
| |-ParmVarDecl 0x556663126188 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x556663126208 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x556663126288 <col:57, col:63> col:63 data 'bool *'
|-CXXMethodDecl 0x556663126658 <line:186:5, col:71> col:10 add_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x556663126438 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5566631264b8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x556663126530 <col:57, col:67> col:67 data 'uint16_t *'
|-CXXMethodDecl 0x556663126908 <line:187:5, col:66> col:10 add_data_handlers 'void (const char *, int, int *)'
| |-ParmVarDecl 0x556663126728 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5566631267a8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x556663126828 <col:57, col:62> col:62 data 'int *'
|-CXXMethodDecl 0x556663126bb8 <line:188:5, col:71> col:10 add_data_handlers 'void (const char *, int, unsigned int *)'
| |-ParmVarDecl 0x5566631269d8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x556663126a58 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x556663126ad8 <col:57, col:67> col:67 data 'unsigned int *'
|-CXXMethodDecl 0x556663126e68 <line:189:5, col:78> col:10 add_data_handlers 'void (const char *, int, atomic_uint32_t *)'
| |-ParmVarDecl 0x556663126c88 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x556663126d08 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x556663126d80 <col:57, col:74> col:74 data 'atomic_uint32_t *'
|-CXXMethodDecl 0x556663127118 <line:190:5, col:67> col:10 add_data_handlers 'void (const char *, int, long *)'
| |-ParmVarDecl 0x556663126f38 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x556663126fb8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x556663127038 <col:57, col:63> col:63 data 'long *'
|-CXXMethodDecl 0x556663127428 <line:191:5, col:76> col:10 add_data_handlers 'void (const char *, int, unsigned long *)'
| |-ParmVarDecl 0x556663127240 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5566631272c0 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x556663127340 <col:57, col:72> col:72 data 'unsigned long *'
|-CXXMethodDecl 0x556663127708 <line:193:5, col:72> col:10 add_data_handlers 'void (const char *, int, long long *)'
| |-ParmVarDecl 0x5566631274f8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x556663127578 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x556663127620 <col:57, col:68> col:68 data 'long long *'
|-CXXMethodDecl 0x5566631279e8 <line:194:5, col:81> col:10 add_data_handlers 'void (const char *, int, unsigned long long *)'
| |-ParmVarDecl 0x5566631277d8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x556663127858 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x556663127900 <col:57, col:77> col:77 data 'unsigned long long *'
|-CXXMethodDecl 0x556663127c50 <line:196:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x556663127ab8 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x556663127b38 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x556663127bb0 <col:67, col:77> col:77 data 'uint16_t *'
|-CXXMethodDecl 0x556663127ef8 <line:197:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint32_t *)'
| |-ParmVarDecl 0x556663127d20 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x556663127da0 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x556663127e18 <col:67, col:77> col:77 data 'uint32_t *'
|-CXXMethodDecl 0x5566631281a8 <line:199:5, col:69> col:10 add_data_handlers 'void (const char *, int, double *)'
| |-ParmVarDecl 0x556663127fc8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x556663128048 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5566631280c8 <col:57, col:65> col:65 data 'double *'
|-CXXMethodDecl 0x556663128458 <line:201:5, col:69> col:10 add_data_handlers 'void (const char *, int, String *)'
| |-ParmVarDecl 0x556663128278 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5566631282f8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x556663128370 <col:57, col:65> col:65 data 'String *'
|-CXXMethodDecl 0x556663128708 <line:202:5, col:72> col:10 add_data_handlers 'void (const char *, int, IPAddress *)'
| |-ParmVarDecl 0x556663128528 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5566631285a8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x556663128620 <col:57, col:68> col:68 data 'IPAddress *'
|-CXXMethodDecl 0x5566631289d8 <line:203:5, col:75> col:10 add_data_handlers 'void (const char *, int, EtherAddress *)'
| |-ParmVarDecl 0x5566631287d8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x556663128858 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5566631288f8 <col:57, col:71> col:71 data 'EtherAddress *'
|-CXXMethodDecl 0x556663128d08 <line:204:5, col:98> col:10 add_data_handlers 'void (const char *, int, Timestamp *, bool)'
| |-ParmVarDecl 0x556663128aa8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x556663128b28 <col:46, col:50> col:50 flags 'int'
| |-ParmVarDecl 0x556663128ba0 <col:57, col:68> col:68 data 'Timestamp *'
| `-ParmVarDecl 0x556663128c18 <col:74, col:93> col:79 is_interval 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55666312e360 <col:93> 'bool' false
|-CXXMethodDecl 0x556663128ef0 <line:206:5, col:58> col:19 read_positional_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x556663128dd8 <col:43, col:50> col:51 'Element *'
| `-ParmVarDecl 0x556663128e58 <col:53, col:57> col:58 'void *'
|-CXXMethodDecl 0x5566631290c8 <line:207:5, col:55> col:19 read_keyword_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x556663128fb0 <col:40, col:47> col:48 'Element *'
| `-ParmVarDecl 0x556663129030 <col:50, col:54> col:55 'void *'
|-CXXMethodDecl 0x5566631293a8 <line:208:5, col:92> col:16 reconfigure_positional_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x556663129188 <col:47, col:59> col:60 'const String &'
| |-ParmVarDecl 0x556663129200 <col:62, col:69> col:70 'Element *'
| |-ParmVarDecl 0x556663129280 <col:72, col:76> col:77 'void *'
| `-ParmVarDecl 0x5566631292f8 <col:79, col:91> col:92 'ErrorHandler *'
|-CXXMethodDecl 0x556663129698 <line:209:5, col:89> col:16 reconfigure_keyword_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x556663129478 <col:44, col:56> col:57 'const String &'
| |-ParmVarDecl 0x5566631294f0 <col:59, col:66> col:67 'Element *'
| |-ParmVarDecl 0x556663129570 <col:69, col:73> col:74 'void *'
| `-ParmVarDecl 0x5566631295e8 <col:76, col:88> col:89 'ErrorHandler *'
|-CXXMethodDecl 0x5566631298d0 <line:211:5, col:50> col:17 llrpc 'int (unsigned int, void *)' virtual
| |-ParmVarDecl 0x556663129770 <col:23, col:32> col:32 command 'unsigned int'
| `-ParmVarDecl 0x5566631297f0 <col:41, col:47> col:47 arg 'void *'
|-CXXMethodDecl 0x556663129ab8 <line:212:5, col:48> col:9 local_llrpc 'int (unsigned int, void *)'
| |-ParmVarDecl 0x556663129998 <col:21, col:30> col:30 command 'unsigned int'
| `-ParmVarDecl 0x556663129a18 <col:39, col:45> col:45 arg 'void *'
|-CXXRecordDecl 0x556663129b68 prev 0x556663121308 <line:214:5, line:252:5> line:214:11 referenced class Port definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x556663129c60 <col:5, col:11> col:11 implicit referenced class Port
| |-AccessSpecDecl 0x556663129cf0 <col:18, col:24> col:18 public
| |-CXXMethodDecl 0x556663129d68 <line:216:9, col:30> col:21 used active 'bool () const' inline
| |-CXXMethodDecl 0x556663129e28 <line:217:9, col:35> col:25 element 'Element *() const' inline
| |-CXXMethodDecl 0x556663129ef0 <line:218:9, col:27> col:20 port 'int () const' inline
| |-CXXMethodDecl 0x55666312a068 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| | |-ParmVarDecl 0x556663129fa0 <col:54, col:62> col:62 p 'Packet *'
| | |-NoInlineAttr 0x55666312a110 <col:24>
| | `-OptimizeNoneAttr 0x55666312a168 <col:34>
| |-CXXMethodDecl 0x55666312a1b0 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
| |-CXXMethodDecl 0x55666312a468 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| | |-ParmVarDecl 0x55666312a260 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x55666312a2d8 <col:43, col:52> col:52 e 'Element *'
| | `-ParmVarDecl 0x55666312a358 <col:55, col:59> col:59 port 'int'
| |-AccessSpecDecl 0x55666312a520 <line:229:7, col:14> col:7 private
| |-FieldDecl 0x55666312a558 <line:231:9, col:18> col:18 referenced _e 'Element *'
| |-FieldDecl 0x55666312a5c0 <line:232:9, col:13> col:13 referenced _port 'int'
| |-CXXConstructorDecl 0x55666312a648 <line:247:9, col:21> col:16 Port 'void ()' inline
| |-CXXMethodDecl 0x55666312a968 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| | |-ParmVarDecl 0x55666312a700 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x55666312a778 <col:43, col:52> col:52 owner 'Element *'
| | |-ParmVarDecl 0x55666312a7f0 <col:59, col:68> col:68 e 'Element *'
| | `-ParmVarDecl 0x55666312a870 <col:71, col:75> col:75 port 'int'
| |-FriendDecl 0x55666312aa80 <line:250:9, col:22> col:16 'class Element':'Element'
| |-CXXConstructorDecl 0x5566631323f8 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x5566631323f8
| | `-ParmVarDecl 0x556663132508 <col:11> col:11 'const Element::Port &'
| |-CXXConstructorDecl 0x5566631325a8 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x5566631325a8
| | `-ParmVarDecl 0x5566631326b8 <col:11> col:11 'Element::Port &&'
| `-CXXDestructorDecl 0x5566632d4620 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55666312aaf8 <line:256:5, col:49> col:12 id 'String () const'
| `-DeprecatedAttr 0x55666312ab98 <col:38> "" ""
|-CXXMethodDecl 0x55666312ac28 <line:257:5, col:55> col:12 landmark 'String () const'
| `-DeprecatedAttr 0x55666312acc8 <col:44> "" ""
|-AccessSpecDecl 0x55666312ad38 <line:260:3, col:10> col:3 private
|-EnumDecl 0x55666312ad60 <line:262:5, col:29> col:5
| `-EnumConstantDecl 0x55666312ae60 <col:12, col:27> col:12 referenced INLINE_PORTS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:262:5)'
|   `-ImplicitCastExpr 0x55666312aeb0 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55666312ae40 <col:27> 'int' Int: 4
|       `-IntegerLiteral 0x55666312ae20 <col:27> 'int' 4
|-FieldDecl 0x55666312af68 <line:264:5, col:19> col:11 referenced _ports 'Element::Port *[2]'
|-FieldDecl 0x55666312b118 <line:265:5, col:36> col:10 _inline_ports 'Element::Port [4]'
|-FieldDecl 0x55666312b1d0 <line:267:5, col:18> col:9 referenced _nports 'int [2]'
|-FieldDecl 0x55666312c260 <line:269:5, col:13> col:13 referenced _router 'Router *'
|-FieldDecl 0x55666312c2c8 <line:270:5, col:9> col:9 referenced _eindex 'int'
|-CXXConstructorDecl 0x55666312c418 <line:292:5, col:28> col:5 Element 'void (const Element &)'
| `-ParmVarDecl 0x55666312c358 <col:13, col:27> col:28 'const Element &'
|-CXXMethodDecl 0x55666312c5c8 <line:293:5, col:39> col:14 operator= 'Element &(const Element &)'
| `-ParmVarDecl 0x55666312c4d8 <col:24, col:38> col:39 'const Element &'
|-CXXMethodDecl 0x55666312c7a8 <line:296:5, col:28> col:9 set_nports 'int (int, int)'
| |-ParmVarDecl 0x55666312c688 <col:20> col:23 'int'
| `-ParmVarDecl 0x55666312c708 <col:25> col:28 'int'
|-CXXMethodDecl 0x55666312ca50 <line:297:5, col:47> col:9 notify_nports 'int (int, int, ErrorHandler *)'
| |-ParmVarDecl 0x55666312c870 <col:23> col:26 'int'
| |-ParmVarDecl 0x55666312c8f0 <col:28> col:31 'int'
| `-ParmVarDecl 0x55666312c968 <col:33, col:46> col:47 'ErrorHandler *'
|-EnumDecl 0x55666312cb08 <line:298:5, col:47> col:10 Processing
| |-EnumConstantDecl 0x55666312cbd0 <col:23> col:23 VAGNOSTIC 'Element::Processing'
| |-EnumConstantDecl 0x55666312cc20 <col:34> col:34 VPUSH 'Element::Processing'
| `-EnumConstantDecl 0x55666312cc70 <col:41> col:41 VPULL 'Element::Processing'
|-CXXMethodDecl 0x55666312ce50 <line:299:5, col:71> col:16 next_processing_code 'int (const char *&, ErrorHandler *)' static
| |-ParmVarDecl 0x55666312cd00 <col:37, col:50> col:50 p 'const char *&'
| `-ParmVarDecl 0x55666312cd78 <col:53, col:67> col:67 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55666312d0f8 <line:300:5, col:80> col:10 processing_vector 'void (int *, int *, ErrorHandler *) const'
| |-ParmVarDecl 0x55666312cf18 <col:28, col:33> col:33 input_codes 'int *'
| |-ParmVarDecl 0x55666312cf98 <col:46, col:51> col:51 output_codes 'int *'
| `-ParmVarDecl 0x55666312d010 <col:65, col:77> col:78 'ErrorHandler *'
|-CXXMethodDecl 0x55666312d318 <line:302:5, col:74> col:10 initialize_ports 'void (const int *, const int *)'
| |-ParmVarDecl 0x55666312d1c8 <col:27, col:38> col:38 input_codes 'const int *'
| `-ParmVarDecl 0x55666312d248 <col:51, col:62> col:62 output_codes 'const int *'
|-CXXMethodDecl 0x55666312d650 <line:303:5, col:60> col:9 connect_port 'int (bool, int, Element *, int)'
| |-ParmVarDecl 0x55666312d3d8 <col:22, col:27> col:27 isoutput 'bool'
| |-ParmVarDecl 0x55666312d458 <col:37, col:41> col:41 port 'int'
| |-ParmVarDecl 0x55666312d4d0 <col:47, col:54> col:55 'Element *'
| `-ParmVarDecl 0x55666312d550 <col:57> col:60 'int'
|-CXXMethodDecl 0x55666312d838 <line:305:5, col:68> col:19 read_handlers_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55666312d720 <col:41, col:50> col:50 e 'Element *'
| `-ParmVarDecl 0x55666312d7a0 <col:53, col:59> col:59 user_data 'void *'
|-CXXMethodDecl 0x55666312d988 <line:306:5, col:51> col:10 add_default_handlers 'void (bool)'
| `-ParmVarDecl 0x55666312d8f8 <col:31, col:36> col:36 writable_config 'bool'
|-CXXMethodDecl 0x55666312dd08 <line:307:5, col:100> col:17 add_data_handlers 'void (const char *, int, HandlerCallback, void *)' inline
| |-ParmVarDecl 0x55666312da48 <col:35, col:47> col:47 name 'const char *'
| |-ParmVarDecl 0x55666312dac8 <col:53, col:57> col:57 flags 'int'
| |-ParmVarDecl 0x55666312db40 <col:64, col:80> col:80 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| `-ParmVarDecl 0x55666312dbc0 <col:90, col:96> col:96 data 'void *'
`-FriendDecl 0x55666312de20 <line:309:5, col:18> col:12 'class Router':'Router'

Layout: <CGRecordLayout
  LLVMType:%class.Element = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Element.base = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class StrideSched
         0 |   class Element (primary base)
         0 |     (Element vtable pointer)
         8 |     class Element::Port *[2] _ports
        24 |     class Element::Port [4] _inline_ports
        88 |     int [2] _nports
        96 |     class Router * _router
       104 |     int _eindex
       112 |   struct StrideSched::Client * _all
       120 |   struct StrideSched::Client * _list
           | [sizeof=128, dsize=128, align=8,
           |  nvsize=128, nvalign=8]

*** Dumping AST Record Layout
         0 | union NotifierSignal::vmvalue
         0 |   class atomic_uint32_t * v1
         0 |   struct NotifierSignal::vmpair * vm
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class NotifierSignal
         0 |   union NotifierSignal::vmvalue _v
         0 |     class atomic_uint32_t * v1
         0 |     struct NotifierSignal::vmpair * vm
         8 |   uint32_t _mask
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping AST Record Layout
         0 | struct StrideSched::Client
         0 |   struct StrideSched::Client ** _pprev
         8 |   struct StrideSched::Client * _next
        16 |   unsigned int _pass
        20 |   unsigned int _stride
        24 |   int _tickets
        32 |   class NotifierSignal _signal
        32 |     union NotifierSignal::vmvalue _v
        32 |       class atomic_uint32_t * v1
        32 |       struct NotifierSignal::vmpair * vm
        40 |     uint32_t _mask
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | class atomic_uint32_t
         0 |   uint32_t _val
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x556662edb630 <../dummy_inc/click/atomic.hh:52:1, line:94:1> line:52:7 referenced class atomic_uint32_t definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x556662edb748 <col:1, col:7> col:7 implicit referenced class atomic_uint32_t
|-AccessSpecDecl 0x556662edb7d8 <col:25, col:31> col:25 public
|-CXXMethodDecl 0x556662edb8a8 <line:57:5, col:29> col:21 used value 'uint32_t () const' inline
|-CXXConversionDecl 0x556662edb990 <line:58:5, col:32> col:12 used operator unsigned int 'uint32_t () const' inline
|-CXXMethodDecl 0x556662edbba8 <line:60:5, col:49> col:29 used operator= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x556662edba50 <col:39, col:48> col:48 x 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x556662edbd58 <line:62:5, col:53> col:29 operator+= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x556662edbc60 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x556662edbea0 <line:63:5, col:53> col:29 operator-= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x556662edbe10 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x556662edbfe8 <line:64:5, col:53> col:29 operator|= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x556662edbf58 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x556662edc130 <line:65:5, col:53> col:29 operator&= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x556662edc0a0 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x556662edc1f8 <line:67:5, col:28> col:17 used operator++ 'void ()' inline
|-CXXMethodDecl 0x556662edc340 <line:68:5, col:31> col:17 operator++ 'void (int)' inline
| `-ParmVarDecl 0x556662edc2b0 <col:28> col:31 'int'
|-CXXMethodDecl 0x556662edc408 <line:69:5, col:28> col:17 used operator-- 'void ()' inline
|-CXXMethodDecl 0x556662edc550 <line:70:5, col:31> col:17 operator-- 'void (int)' inline
| `-ParmVarDecl 0x556662edc4c0 <col:28> col:31 'int'
|-CXXMethodDecl 0x556662edc6c8 <line:72:5, col:42> col:21 swap 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x556662edc608 <col:26, col:35> col:35 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x556662edc810 <line:73:5, col:49> col:21 fetch_and_add 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x556662edc780 <col:35, col:44> col:44 delta 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x556662edc8d8 <line:74:5, col:30> col:17 dec_and_test 'bool ()' inline
|-CXXMethodDecl 0x556662edca98 <line:75:5, col:69> col:21 used compare_swap 'uint32_t (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x556662edc988 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x556662edca00 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x556662edcce8 <line:76:5, col:97> col:17 compare_and_swap 'bool (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x556662edcb58 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x556662edcbd0 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x556662edcd98 <col:86> "" ""
|-CXXMethodDecl 0x556662edd008 <line:78:5, col:71> col:28 used swap 'uint32_t (volatile uint32_t &, uint32_t)' static inline
| |-ParmVarDecl 0x556662edce78 <col:33, col:52> col:52 x 'volatile uint32_t &'
| `-ParmVarDecl 0x556662edcef0 <col:55, col:64> col:64 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x556662edd1b8 <line:79:5, col:48> col:24 used inc 'void (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x556662edd0c8 <col:28, col:47> col:47 x 'volatile uint32_t &'
|-CXXMethodDecl 0x556662edd368 <line:80:5, col:57> col:24 used dec_and_test 'bool (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x556662edd270 <col:37, col:56> col:56 x 'volatile uint32_t &'
|-CXXMethodDecl 0x556662edd638 <line:81:5, col:98> col:28 compare_swap 'uint32_t (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x556662edd420 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x556662edd498 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x556662edd510 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x556662edd918 <line:82:5, col:126> col:24 compare_and_swap 'bool (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x556662edd700 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x556662edd778 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x556662edd7f0 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x556662edd9d0 <col:115> "" ""
|-AccessSpecDecl 0x556662edda40 <line:84:3, col:10> col:3 private
|-FieldDecl 0x556662edda78 <line:91:5, col:14> col:14 referenced _val 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x556662edef90 <line:52:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x556662edef90
| `-ParmVarDecl 0x556662edf098 <col:7> col:7 'const atomic_uint32_t &'
|-CXXMethodDecl 0x556662edf138 <col:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x556662edf138
| `-ParmVarDecl 0x556662edf248 <col:7> col:7 'atomic_uint32_t &&'
|-CXXConstructorDecl 0x556662f14878 <col:7> col:7 implicit used atomic_uint32_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x556663106670 <col:7>
|-CXXConstructorDecl 0x556662f14950 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x556662f14950
| `-ParmVarDecl 0x556662f14a68 <col:7> col:7 'const atomic_uint32_t &'
|-CXXConstructorDecl 0x556662f14ad8 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x556662f14ad8
| `-ParmVarDecl 0x556662f14be8 <col:7> col:7 'atomic_uint32_t &&'
`-CXXDestructorDecl 0x556663109070 <col:7> col:7 implicit ~atomic_uint32_t 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.atomic_uint32_t = type { i32 }
  NonVirtualBaseLLVMType:%class.atomic_uint32_t = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct NotifierSignal::vmpair
         0 |   class atomic_uint32_t * value
         8 |   uint32_t mask
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5566631d6278 <../dummy_inc/click/notifier.hh:50:5, line:53:5> line:50:12 referenced struct vmpair definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5566631d6398 <col:5, col:12> col:12 implicit struct vmpair
|-FieldDecl 0x5566631d6438 <line:51:2, col:19> col:19 referenced value 'atomic_uint32_t *'
|-FieldDecl 0x5566631d6498 <line:52:2, col:11> col:11 referenced mask 'uint32_t':'unsigned int'
`-CXXDestructorDecl 0x5566631df8e8 <line:50:12> col:12 implicit ~vmpair 'void ()' inline default trivial noexcept-unevaluated 0x5566631df8e8

Layout: <CGRecordLayout
  LLVMType:%"struct.NotifierSignal::vmpair" = type { %class.atomic_uint32_t*, i32 }
  NonVirtualBaseLLVMType:%"struct.NotifierSignal::vmpair" = type { %class.atomic_uint32_t*, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5566631d6500 <../dummy_inc/click/notifier.hh:54:5, line:57:5> line:54:11 referenced union vmvalue definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5566631d6618 <col:5, col:11> col:11 implicit union vmvalue
|-FieldDecl 0x5566631d66b8 <line:55:2, col:19> col:19 referenced v1 'atomic_uint32_t *'
|-FieldDecl 0x5566631d6748 <line:56:2, col:10> col:10 referenced vm 'NotifierSignal::vmpair *'
|-CXXConstructorDecl 0x5566631de480 <line:54:11> col:11 implicit used vmvalue 'void () noexcept' inline default trivial
| `-CompoundStmt 0x5566631de8b8 <col:11>
|-CXXConstructorDecl 0x5566631de588 <col:11> col:11 implicit constexpr vmvalue 'void (const NotifierSignal::vmvalue &)' inline default trivial noexcept-unevaluated 0x5566631de588
| `-ParmVarDecl 0x5566631de698 <col:11> col:11 'const NotifierSignal::vmvalue &'
|-CXXConstructorDecl 0x5566631de738 <col:11> col:11 implicit constexpr vmvalue 'void (NotifierSignal::vmvalue &&)' inline default trivial noexcept-unevaluated 0x5566631de738
| `-ParmVarDecl 0x5566631de848 <col:11> col:11 'NotifierSignal::vmvalue &&'
`-CXXDestructorDecl 0x5566631df5b0 <col:11> col:11 implicit ~vmvalue 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"union.NotifierSignal::vmvalue" = type { %class.atomic_uint32_t* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5566631d41b0 prev 0x55666311c850 <../dummy_inc/click/notifier.hh:12:1, line:71:1> line:12:7 referenced class NotifierSignal definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x5566631d42a8 <col:1, col:7> col:7 implicit referenced class NotifierSignal
|-AccessSpecDecl 0x5566631d4338 <line:13:3, col:9> col:3 public
|-TypedefDecl 0x5566631d4468 <line:14:5, col:61> col:36 referenced unspecified_bool_type 'bool (NotifierSignal::*)() const'
| `-MemberPointerType 0x5566631d43e0 'bool (NotifierSignal::*)() const'
|   |-RecordType 0x55666311c8e0 'NotifierSignal'
|   | `-CXXRecord 0x5566631d41b0 'NotifierSignal'
|   `-ParenType 0x5566631d4380 'bool () const' sugar
|     `-FunctionProtoType 0x556662c63180 'bool () const' const cdecl
|       `-BuiltinType 0x556662bb72f0 'bool'
|-CXXConstructorDecl 0x5566631d44f8 <line:16:5, col:27> col:12 used NotifierSignal 'void ()' inline
|-CXXConstructorDecl 0x5566631d4738 <line:17:5, col:64> col:12 used NotifierSignal 'void (atomic_uint32_t *, uint32_t)' inline
| |-ParmVarDecl 0x5566631d45b0 <col:27, col:44> col:44 value 'atomic_uint32_t *'
| `-ParmVarDecl 0x5566631d4628 <col:51, col:60> col:60 mask 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x5566631d48e8 <line:18:5, col:50> col:12 used NotifierSignal 'void (const NotifierSignal &)' inline
| `-ParmVarDecl 0x5566631d4828 <col:27, col:49> col:49 x 'const NotifierSignal &'
|-CXXDestructorDecl 0x5566631d49e0 <line:19:5, col:28> col:12 used ~NotifierSignal 'void () noexcept' inline
|-CXXMethodDecl 0x5566631d4b08 <line:21:5, col:46> col:34 idle_signal 'NotifierSignal ()' static inline
|-CXXMethodDecl 0x5566631d4bc8 <line:22:5, col:46> col:34 busy_signal 'NotifierSignal ()' static inline
|-CXXMethodDecl 0x5566631d4c88 <line:23:5, col:53> col:34 overderived_signal 'NotifierSignal ()' static inline
|-CXXMethodDecl 0x5566631d4d48 <line:24:5, col:55> col:34 used uninitialized_signal 'NotifierSignal ()' static inline
|-CXXMethodDecl 0x5566631d4e38 <line:26:5, col:26> col:17 used active 'bool () const' inline
|-CXXConversionDecl 0x5566631d4fa8 <line:27:5, col:45> col:12 operator bool (NotifierSignal::*)() const 'NotifierSignal::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x5566631d5128 <line:29:5, col:39> col:17 used set_active 'bool (bool)' inline
| `-ParmVarDecl 0x5566631d5068 <col:28, col:33> col:33 active 'bool'
|-CXXMethodDecl 0x5566631d51f0 <line:31:5, col:24> col:17 idle 'bool () const' inline
|-CXXMethodDecl 0x5566631d52b0 <line:32:5, col:24> col:17 busy 'bool () const' inline
|-CXXMethodDecl 0x5566631d5370 <line:33:5, col:31> col:17 overderived 'bool () const' inline
|-CXXMethodDecl 0x5566631d5430 <line:34:5, col:31> col:17 used initialized 'bool () const' inline
|-FriendDecl 0x5566631d56e8 <line:36:5, col:76> col:17
| `-FunctionDecl 0x5566631d5628 parent 0x556662bb7278 <col:5, col:76> col:17 used operator== 'bool (const NotifierSignal &, const NotifierSignal &)'
|   |-ParmVarDecl 0x5566631d54e0 <col:28, col:50> col:50 a 'const NotifierSignal &'
|   `-ParmVarDecl 0x5566631d5558 <col:53, col:75> col:75 b 'const NotifierSignal &'
|-FriendDecl 0x5566631d5908 <line:37:5, col:76> col:17
| `-FunctionDecl 0x5566631d5848 parent 0x556662bb7278 <col:5, col:76> col:17 operator!= 'bool (const NotifierSignal &, const NotifierSignal &)'
|   |-ParmVarDecl 0x5566631d5738 <col:28, col:50> col:50 a 'const NotifierSignal &'
|   `-ParmVarDecl 0x5566631d57b0 <col:53, col:75> col:75 b 'const NotifierSignal &'
|-CXXMethodDecl 0x5566631d5a48 <line:39:5, col:54> col:21 operator= 'NotifierSignal &(const NotifierSignal &)'
| `-ParmVarDecl 0x5566631d5958 <col:31, col:53> col:53 x 'const NotifierSignal &'
|-CXXMethodDecl 0x5566631d5b90 <line:40:5, col:55> col:21 used operator+= 'NotifierSignal &(const NotifierSignal &)'
| `-ParmVarDecl 0x5566631d5b00 <col:32, col:54> col:54 x 'const NotifierSignal &'
|-FriendDecl 0x5566631d5e58 <line:41:5, col:78> col:27
| `-FunctionDecl 0x5566631d5d98 parent 0x556662bb7278 <col:5, col:78> col:27 operator+ 'NotifierSignal (NotifierSignal, const NotifierSignal &)'
|   |-ParmVarDecl 0x5566631d5c48 <col:37, col:52> col:52 a 'NotifierSignal' destroyed
|   `-ParmVarDecl 0x5566631d5cc0 <col:55, col:77> col:77 b 'const NotifierSignal &'
|-CXXMethodDecl 0x5566631d5f68 <line:43:5, col:39> col:17 used swap 'void (NotifierSignal &)' inline
| `-ParmVarDecl 0x5566631d5ea8 <col:22, col:38> col:38 x 'NotifierSignal &'
|-CXXMethodDecl 0x5566631d60e8 <line:45:5, col:36> col:12 unparse 'String (Router *) const'
| `-ParmVarDecl 0x5566631d6020 <col:20, col:28> col:28 router 'Router *'
|-CXXMethodDecl 0x5566631d61b0 <line:47:5, col:35> col:17 static_initialize 'void ()' static
|-AccessSpecDecl 0x5566631d6250 <line:49:3, col:10> col:3 private
|-CXXRecordDecl 0x5566631d6278 <line:50:5, line:53:5> line:50:12 referenced struct vmpair definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x5566631d6398 <col:5, col:12> col:12 implicit struct vmpair
| |-FieldDecl 0x5566631d6438 <line:51:2, col:19> col:19 referenced value 'atomic_uint32_t *'
| |-FieldDecl 0x5566631d6498 <line:52:2, col:11> col:11 referenced mask 'uint32_t':'unsigned int'
| `-CXXDestructorDecl 0x5566631df8e8 <line:50:12> col:12 implicit ~vmpair 'void ()' inline default trivial noexcept-unevaluated 0x5566631df8e8
|-CXXRecordDecl 0x5566631d6500 <line:54:5, line:57:5> line:54:11 referenced union vmvalue definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x5566631d6618 <col:5, col:11> col:11 implicit union vmvalue
| |-FieldDecl 0x5566631d66b8 <line:55:2, col:19> col:19 referenced v1 'atomic_uint32_t *'
| |-FieldDecl 0x5566631d6748 <line:56:2, col:10> col:10 referenced vm 'NotifierSignal::vmpair *'
| |-CXXConstructorDecl 0x5566631de480 <line:54:11> col:11 implicit used vmvalue 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x5566631de8b8 <col:11>
| |-CXXConstructorDecl 0x5566631de588 <col:11> col:11 implicit constexpr vmvalue 'void (const NotifierSignal::vmvalue &)' inline default trivial noexcept-unevaluated 0x5566631de588
| | `-ParmVarDecl 0x5566631de698 <col:11> col:11 'const NotifierSignal::vmvalue &'
| |-CXXConstructorDecl 0x5566631de738 <col:11> col:11 implicit constexpr vmvalue 'void (NotifierSignal::vmvalue &&)' inline default trivial noexcept-unevaluated 0x5566631de738
| | `-ParmVarDecl 0x5566631de848 <col:11> col:11 'NotifierSignal::vmvalue &&'
| `-CXXDestructorDecl 0x5566631df5b0 <col:11> col:11 implicit ~vmvalue 'void () noexcept' inline default trivial
|-FieldDecl 0x5566631d67c0 <line:59:5, col:13> col:13 referenced _v 'NotifierSignal::vmvalue'
|-FieldDecl 0x5566631d6820 <line:60:5, col:14> col:14 referenced _mask 'uint32_t':'unsigned int'
|-EnumDecl 0x5566631d6870 <line:62:5, line:65:5> line:62:5
| |-EnumConstantDecl 0x5566631d6970 <line:63:2, col:14> col:2 referenced true_mask 'NotifierSignal::(anonymous enum at ../dummy_inc/click/notifier.hh:62:5)'
| | `-ImplicitCastExpr 0x5566631d6b70 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5566631d6950 <col:14> 'int' Int: 1
| |     `-IntegerLiteral 0x5566631d6930 <col:14> 'int' 1
| |-EnumConstantDecl 0x5566631d6a00 <col:17, col:30> col:17 referenced false_mask 'NotifierSignal::(anonymous enum at ../dummy_inc/click/notifier.hh:62:5)'
| | `-ImplicitCastExpr 0x5566631d6b88 <col:30> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5566631d69e0 <col:30> 'int' Int: 2
| |     `-IntegerLiteral 0x5566631d69c0 <col:30> 'int' 2
| |-EnumConstantDecl 0x5566631d6a90 <col:33, col:52> col:33 referenced overderived_mask 'NotifierSignal::(anonymous enum at ../dummy_inc/click/notifier.hh:62:5)'
| | `-ImplicitCastExpr 0x5566631d6ba0 <col:52> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5566631d6a70 <col:52> 'int' Int: 4
| |     `-IntegerLiteral 0x5566631d6a50 <col:52> 'int' 4
| `-EnumConstantDecl 0x5566631d6b20 <line:64:2, col:23> col:2 referenced uninitialized_mask 'NotifierSignal::(anonymous enum at ../dummy_inc/click/notifier.hh:62:5)'
|   `-ImplicitCastExpr 0x5566631d6bb8 <col:23> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5566631d6b00 <col:23> 'int' Int: 8
|       `-IntegerLiteral 0x5566631d6ae0 <col:23> 'int' 8
|-VarDecl 0x5566631d6be0 <line:66:5, col:28> col:28 used static_value 'atomic_uint32_t' static
|-CXXMethodDecl 0x5566631d6ce8 <line:68:5, col:48> col:10 used hard_assign_vm 'void (const NotifierSignal &)'
| `-ParmVarDecl 0x5566631d6c58 <col:25, col:47> col:47 x 'const NotifierSignal &'
|-CXXMethodDecl 0x5566631d6eb0 <line:69:5, col:63> col:10 hard_derive_one 'void (atomic_uint32_t *, uint32_t)'
| |-ParmVarDecl 0x5566631d6da0 <col:26, col:43> col:43 value 'atomic_uint32_t *'
| `-ParmVarDecl 0x5566631d6e18 <col:50, col:59> col:59 mask 'uint32_t':'unsigned int'
`-CXXMethodDecl 0x5566631d70e8 <line:70:5, col:61> col:17 used hard_equals 'bool (const NotifierSignal::vmpair *, const NotifierSignal::vmpair *)' static
  |-ParmVarDecl 0x5566631d6f98 <col:29, col:43> col:43 a 'const NotifierSignal::vmpair *'
  `-ParmVarDecl 0x5566631d7010 <col:46, col:60> col:60 b 'const NotifierSignal::vmpair *'

Layout: <CGRecordLayout
  LLVMType:%class.NotifierSignal = type <{ %"union.NotifierSignal::vmvalue", i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.NotifierSignal.base = type <{ %"union.NotifierSignal::vmvalue", i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5566631f4140 <../elements/standard/stridesched.hh:58:5, line:90:5> line:58:12 referenced struct Client definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x5566631f4258 <col:5, col:12> col:12 implicit referenced struct Client
|-FieldDecl 0x5566631f4360 <line:59:2, col:11> col:11 referenced _pprev 'StrideSched::Client **'
|-FieldDecl 0x5566631f43c0 <line:60:2, col:10> col:10 referenced _next 'StrideSched::Client *'
|-FieldDecl 0x5566631f4428 <line:61:2, col:11> col:11 referenced _pass 'unsigned int'
|-FieldDecl 0x5566631f4490 <line:62:2, col:11> col:11 referenced _stride 'unsigned int'
|-FieldDecl 0x5566631f44f8 <line:63:2, col:6> col:6 referenced _tickets 'int'
|-FieldDecl 0x5566631f4558 <line:64:2, col:17> col:17 _signal 'NotifierSignal'
|-CXXConstructorDecl 0x5566631f45e0 <line:66:2, line:68:2> line:66:2 Client 'void ()'
| |-CXXCtorInitializer Field 0x5566631f4360 '_pprev' 'StrideSched::Client **'
| | `-ImplicitCastExpr 0x5566631f5e40 <line:67:15> 'StrideSched::Client **' <NullToPointer>
| |   `-IntegerLiteral 0x5566631f5e00 <col:15> 'int' 0
| |-CXXCtorInitializer Field 0x5566631f43c0 '_next' 'StrideSched::Client *'
| | `-ImplicitCastExpr 0x5566631f5ec0 <col:25> 'StrideSched::Client *' <NullToPointer>
| |   `-IntegerLiteral 0x5566631f5e80 <col:25> 'int' 0
| |-CXXCtorInitializer Field 0x5566631f4428 '_pass' 'unsigned int'
| | `-ImplicitCastExpr 0x5566631f5f40 <col:35> 'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x5566631f5f00 <col:35> 'int' 0
| |-CXXCtorInitializer Field 0x5566631f4490 '_stride' 'unsigned int'
| | `-ImplicitCastExpr 0x5566631f5fc0 <col:47> 'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x5566631f5f80 <col:47> 'int' 0
| |-CXXCtorInitializer Field 0x5566631f44f8 '_tickets' 'int'
| | `-UnaryOperator 0x5566631f6020 <col:60, col:61> 'int' prefix '-'
| |   `-IntegerLiteral 0x5566631f6000 <col:61> 'int' 1
| |-CXXCtorInitializer Field 0x5566631f4558 '_signal' 'NotifierSignal'
| | `-CXXConstructExpr 0x5566631f6080 <line:66:2> 'NotifierSignal' 'void ()'
| `-CompoundStmt 0x5566631f6100 <line:67:64, line:68:2>
|-CXXMethodDecl 0x5566631f4730 <line:70:2, line:73:2> line:70:7 set_tickets 'void (int)'
| |-ParmVarDecl 0x5566631f46a0 <col:19, col:23> col:23 used t 'int'
| `-CompoundStmt 0x5566631f6350 <col:26, line:73:2>
|   |-BinaryOperator 0x5566631f6188 <line:71:6, col:17> 'int' lvalue '='
|   | |-MemberExpr 0x5566631f6120 <col:6> 'int' lvalue ->_tickets 0x5566631f44f8
|   | | `-CXXThisExpr 0x5566631f6110 <col:6> 'StrideSched::Client *' implicit this
|   | `-ImplicitCastExpr 0x5566631f6170 <col:17> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5566631f6150 <col:17> 'int' lvalue ParmVar 0x5566631f46a0 't' 'int'
|   `-BinaryOperator 0x5566631f6330 <line:72:6, col:34> 'unsigned int' lvalue '='
|     |-MemberExpr 0x5566631f61b8 <col:6> 'unsigned int' lvalue ->_stride 0x5566631f4490
|     | `-CXXThisExpr 0x5566631f61a8 <col:6> 'StrideSched::Client *' implicit this
|     `-ImplicitCastExpr 0x5566631f6318 <col:16, col:34> 'unsigned int' <IntegralCast>
|       `-ConditionalOperator 0x5566631f62e8 <col:16, col:34> 'int'
|         |-ImplicitCastExpr 0x5566631f62d0 <col:16> 'bool' <IntegralToBoolean>
|         | `-ImplicitCastExpr 0x5566631f62b8 <col:16> 'int' <LValueToRValue>
|         |   `-DeclRefExpr 0x5566631f61e8 <col:16> 'int' lvalue ParmVar 0x5566631f46a0 't' 'int'
|         |-BinaryOperator 0x5566631f6278 <col:20, col:30> 'int' '/'
|         | |-ImplicitCastExpr 0x5566631f6248 <col:20> 'int' <IntegralCast>
|         | | `-DeclRefExpr 0x5566631f6208 <col:20> 'StrideSched::(anonymous enum at ../elements/standard/stridesched.hh:50:5)' EnumConstant 0x5566631f3ae0 'STRIDE1' 'StrideSched::(anonymous enum at ../elements/standard/stridesched.hh:50:5)'
|         | `-ImplicitCastExpr 0x5566631f6260 <col:30> 'int' <LValueToRValue>
|         |   `-DeclRefExpr 0x5566631f6228 <col:30> 'int' lvalue ParmVar 0x5566631f46a0 't' 'int'
|         `-IntegerLiteral 0x5566631f6298 <col:34> 'int' 0
|-CXXMethodDecl 0x5566631f47f8 <line:74:2, line:76:2> line:74:7 stride 'void ()'
| `-CompoundStmt 0x5566631f6438 <col:16, line:76:2>
|   `-CompoundAssignOperator 0x5566631f6408 <line:75:6, col:15> 'unsigned int' lvalue '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|     |-MemberExpr 0x5566631f6380 <col:6> 'unsigned int' lvalue ->_pass 0x5566631f4428
|     | `-CXXThisExpr 0x5566631f6370 <col:6> 'StrideSched::Client *' implicit this
|     `-ImplicitCastExpr 0x5566631f63f0 <col:15> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x5566631f63c0 <col:15> 'unsigned int' lvalue ->_stride 0x5566631f4490
|         `-CXXThisExpr 0x5566631f63b0 <col:15> 'StrideSched::Client *' implicit this
|-CXXMethodDecl 0x5566631f4978 <line:78:2, line:85:2> line:78:7 insert 'void (StrideSched::Client **)'
| |-ParmVarDecl 0x5566631f48b0 <col:14, col:23> col:23 used list 'StrideSched::Client **'
| `-CompoundStmt 0x5566631f6b90 <col:29, line:85:2>
|   |-BinaryOperator 0x5566631f64c8 <line:79:6, col:15> 'StrideSched::Client **' lvalue '='
|   | |-MemberExpr 0x5566631f6460 <col:6> 'StrideSched::Client **' lvalue ->_pprev 0x5566631f4360
|   | | `-CXXThisExpr 0x5566631f6450 <col:6> 'StrideSched::Client *' implicit this
|   | `-ImplicitCastExpr 0x5566631f64b0 <col:15> 'StrideSched::Client **' <LValueToRValue>
|   |   `-DeclRefExpr 0x5566631f6490 <col:15> 'StrideSched::Client **' lvalue ParmVar 0x5566631f48b0 'list' 'StrideSched::Client **'
|   |-WhileStmt 0x5566631f6950 <line:80:6, line:81:20>
|   | |-BinaryOperator 0x5566631f6830 <line:80:13, col:66> 'bool' '&&'
|   | | |-ImplicitCastExpr 0x5566631f6818 <col:13, col:29> 'bool' <PointerToBoolean>
|   | | | `-ImplicitCastExpr 0x5566631f6800 <col:13, col:29> 'StrideSched::Client *' <LValueToRValue>
|   | | |   `-ParenExpr 0x5566631f65d0 <col:13, col:29> 'StrideSched::Client *' lvalue
|   | | |     `-BinaryOperator 0x5566631f65b0 <col:14, col:23> 'StrideSched::Client *' lvalue '='
|   | | |       |-MemberExpr 0x5566631f64f8 <col:14> 'StrideSched::Client *' lvalue ->_next 0x5566631f43c0
|   | | |       | `-CXXThisExpr 0x5566631f64e8 <col:14> 'StrideSched::Client *' implicit this
|   | | |       `-ImplicitCastExpr 0x5566631f6598 <col:22, col:23> 'StrideSched::Client *' <LValueToRValue>
|   | | |         `-UnaryOperator 0x5566631f6580 <col:22, col:23> 'StrideSched::Client *' lvalue prefix '*' cannot overflow
|   | | |           `-ImplicitCastExpr 0x5566631f6568 <col:23> 'StrideSched::Client **' <LValueToRValue>
|   | | |             `-MemberExpr 0x5566631f6538 <col:23> 'StrideSched::Client **' lvalue ->_pprev 0x5566631f4360
|   | | |               `-CXXThisExpr 0x5566631f6528 <col:23> 'StrideSched::Client *' implicit this
|   | | `-ParenExpr 0x5566631f67e0 <col:34, col:66> 'bool'
|   | |   `-BinaryOperator 0x5566631f67c0 <col:35, col:65> 'bool' '>'
|   | |     |-CStyleCastExpr 0x5566631f6778 <col:35, col:61> 'int' <NoOp>
|   | |     | `-ImplicitCastExpr 0x5566631f6760 <col:40, col:61> 'int' <IntegralCast> part_of_explicit_cast
|   | |     |   `-ParenExpr 0x5566631f6740 <col:40, col:61> 'unsigned int'
|   | |     |     `-BinaryOperator 0x5566631f66e8 <col:41, col:56> 'unsigned int' '-'
|   | |     |       |-ImplicitCastExpr 0x5566631f66b8 <col:41> 'unsigned int' <LValueToRValue>
|   | |     |       | `-MemberExpr 0x5566631f6600 <col:41> 'unsigned int' lvalue ->_pass 0x5566631f4428
|   | |     |       |   `-CXXThisExpr 0x5566631f65f0 <col:41> 'StrideSched::Client *' implicit this
|   | |     |       `-ImplicitCastExpr 0x5566631f66d0 <col:49, col:56> 'unsigned int' <LValueToRValue>
|   | |     |         `-MemberExpr 0x5566631f6688 <col:49, col:56> 'unsigned int' lvalue ->_pass 0x5566631f4428
|   | |     |           `-ImplicitCastExpr 0x5566631f6670 <col:49> 'StrideSched::Client *' <LValueToRValue>
|   | |     |             `-MemberExpr 0x5566631f6640 <col:49> 'StrideSched::Client *' lvalue ->_next 0x5566631f43c0
|   | |     |               `-CXXThisExpr 0x5566631f6630 <col:49> 'StrideSched::Client *' implicit this
|   | |     `-IntegerLiteral 0x5566631f67a0 <col:65> 'int' 0
|   | `-BinaryOperator 0x5566631f6930 <line:81:3, col:20> 'StrideSched::Client **' lvalue '='
|   |   |-MemberExpr 0x5566631f6860 <col:3> 'StrideSched::Client **' lvalue ->_pprev 0x5566631f4360
|   |   | `-CXXThisExpr 0x5566631f6850 <col:3> 'StrideSched::Client *' implicit this
|   |   `-UnaryOperator 0x5566631f6918 <col:12, col:20> 'StrideSched::Client **' prefix '&' cannot overflow
|   |     `-MemberExpr 0x5566631f68e8 <col:13, col:20> 'StrideSched::Client *' lvalue ->_next 0x5566631f43c0
|   |       `-ImplicitCastExpr 0x5566631f68d0 <col:13> 'StrideSched::Client *' <LValueToRValue>
|   |         `-MemberExpr 0x5566631f68a0 <col:13> 'StrideSched::Client *' lvalue ->_next 0x5566631f43c0
|   |           `-CXXThisExpr 0x5566631f6890 <col:13> 'StrideSched::Client *' implicit this
|   |-BinaryOperator 0x5566631f69e8 <line:82:6, col:16> 'StrideSched::Client *' lvalue '='
|   | |-UnaryOperator 0x5566631f69c0 <col:6, col:7> 'StrideSched::Client *' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x5566631f69a8 <col:7> 'StrideSched::Client **' <LValueToRValue>
|   | |   `-MemberExpr 0x5566631f6978 <col:7> 'StrideSched::Client **' lvalue ->_pprev 0x5566631f4360
|   | |     `-CXXThisExpr 0x5566631f6968 <col:7> 'StrideSched::Client *' implicit this
|   | `-CXXThisExpr 0x5566631f69d8 <col:16> 'StrideSched::Client *' this
|   `-IfStmt 0x5566631f6b78 <line:83:6, line:84:20>
|     |-ImplicitCastExpr 0x5566631f6a60 <line:83:10> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x5566631f6a48 <col:10> 'StrideSched::Client *' <LValueToRValue>
|     |   `-MemberExpr 0x5566631f6a18 <col:10> 'StrideSched::Client *' lvalue ->_next 0x5566631f43c0
|     |     `-CXXThisExpr 0x5566631f6a08 <col:10> 'StrideSched::Client *' implicit this
|     `-BinaryOperator 0x5566631f6b58 <line:84:3, col:20> 'StrideSched::Client **' lvalue '='
|       |-MemberExpr 0x5566631f6ad0 <col:3, col:10> 'StrideSched::Client **' lvalue ->_pprev 0x5566631f4360
|       | `-ImplicitCastExpr 0x5566631f6ab8 <col:3> 'StrideSched::Client *' <LValueToRValue>
|       |   `-MemberExpr 0x5566631f6a88 <col:3> 'StrideSched::Client *' lvalue ->_next 0x5566631f43c0
|       |     `-CXXThisExpr 0x5566631f6a78 <col:3> 'StrideSched::Client *' implicit this
|       `-UnaryOperator 0x5566631f6b40 <col:19, col:20> 'StrideSched::Client **' prefix '&' cannot overflow
|         `-MemberExpr 0x5566631f6b10 <col:20> 'StrideSched::Client *' lvalue ->_next 0x5566631f43c0
|           `-CXXThisExpr 0x5566631f6b00 <col:20> 'StrideSched::Client *' implicit this
|-CXXMethodDecl 0x5566631f4a40 <line:86:2, line:89:2> line:86:7 remove 'void ()'
| `-CompoundStmt 0x5566631ffff0 <col:16, line:89:2>
|   `-IfStmt 0x5566631fffd8 <line:87:6, line:88:19>
|     |-ImplicitCastExpr 0x5566631f6ce0 <line:87:10, col:26> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x5566631f6cc8 <col:10, col:26> 'StrideSched::Client *' <LValueToRValue>
|     |   `-ParenExpr 0x5566631f6ca8 <col:10, col:26> 'StrideSched::Client *' lvalue
|     |     `-BinaryOperator 0x5566631f6c88 <col:11, col:21> 'StrideSched::Client *' lvalue '='
|     |       |-UnaryOperator 0x5566631f6c18 <col:11, col:12> 'StrideSched::Client *' lvalue prefix '*' cannot overflow
|     |       | `-ImplicitCastExpr 0x5566631f6c00 <col:12> 'StrideSched::Client **' <LValueToRValue>
|     |       |   `-MemberExpr 0x5566631f6bd0 <col:12> 'StrideSched::Client **' lvalue ->_pprev 0x5566631f4360
|     |       |     `-CXXThisExpr 0x5566631f6bc0 <col:12> 'StrideSched::Client *' implicit this
|     |       `-ImplicitCastExpr 0x5566631f6c70 <col:21> 'StrideSched::Client *' <LValueToRValue>
|     |         `-MemberExpr 0x5566631f6c40 <col:21> 'StrideSched::Client *' lvalue ->_next 0x5566631f43c0
|     |           `-CXXThisExpr 0x5566631f6c30 <col:21> 'StrideSched::Client *' implicit this
|     `-BinaryOperator 0x5566631fffb8 <line:88:3, col:19> 'StrideSched::Client **' lvalue '='
|       |-MemberExpr 0x5566631fff30 <col:3, col:10> 'StrideSched::Client **' lvalue ->_pprev 0x5566631f4360
|       | `-ImplicitCastExpr 0x5566631f6d38 <col:3> 'StrideSched::Client *' <LValueToRValue>
|       |   `-MemberExpr 0x5566631f6d08 <col:3> 'StrideSched::Client *' lvalue ->_next 0x5566631f43c0
|       |     `-CXXThisExpr 0x5566631f6cf8 <col:3> 'StrideSched::Client *' implicit this
|       `-ImplicitCastExpr 0x5566631fffa0 <col:19> 'StrideSched::Client **' <LValueToRValue>
|         `-MemberExpr 0x5566631fff70 <col:19> 'StrideSched::Client **' lvalue ->_pprev 0x5566631f4360
|           `-CXXThisExpr 0x5566631fff60 <col:19> 'StrideSched::Client *' implicit this
|-CXXConstructorDecl 0x5566631f4b08 <line:58:12> col:12 implicit Client 'void (const StrideSched::Client &)' inline default noexcept-unevaluated 0x5566631f4b08
| `-ParmVarDecl 0x5566631f4c18 <col:12> col:12 'const StrideSched::Client &'
|-CXXConstructorDecl 0x5566631f4cb8 <col:12> col:12 implicit Client 'void (StrideSched::Client &&)' inline default noexcept-unevaluated 0x5566631f4cb8
| `-ParmVarDecl 0x5566631f4dc8 <col:12> col:12 'StrideSched::Client &&'
|-CXXMethodDecl 0x5566631f4e68 <col:12> col:12 implicit operator= 'StrideSched::Client &(StrideSched::Client &&)' inline default noexcept-unevaluated 0x5566631f4e68
| `-ParmVarDecl 0x5566631f4f78 <col:12> col:12 'StrideSched::Client &&'
`-CXXDestructorDecl 0x5566631f5000 <col:12> col:12 implicit ~Client 'void ()' inline default noexcept-unevaluated 0x5566631f5000

Layout: <CGRecordLayout
  LLVMType:%"struct.StrideSched::Client" = type { %"struct.StrideSched::Client"**, %"struct.StrideSched::Client"*, i32, i32, i32, [4 x i8], %class.NotifierSignal }
  NonVirtualBaseLLVMType:%"struct.StrideSched::Client" = type { %"struct.StrideSched::Client"**, %"struct.StrideSched::Client"*, i32, i32, i32, [4 x i8], %class.NotifierSignal }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5566631f2c28 <../elements/standard/stridesched.hh:35:1, line:100:1> line:35:7 class StrideSched definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-public 'Element'
|-CXXRecordDecl 0x5566631f2d88 <col:1, col:7> col:7 implicit referenced class StrideSched
|-AccessSpecDecl 0x5566631f2e18 <col:38, col:44> col:38 public
|-CXXConstructorDecl 0x5566631f2ea0 <line:37:5, col:17> col:5 StrideSched 'void ()'
|-CXXMethodDecl 0x5566631f2fa0 <line:39:5, col:60> col:17 class_name 'const char *() const'
| |-Overrides: [ 0x55666311e2b8 Element::class_name 'const char *() const' ]
| `-CompoundStmt 0x5566631f5c10 <col:36, col:60>
|   `-ReturnStmt 0x5566631f5c00 <col:38, col:45>
|     `-ImplicitCastExpr 0x5566631f5be8 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x5566631f5bc0 <col:45> 'const char [12]' lvalue "StrideSched"
|-CXXMethodDecl 0x5566631f3068 <line:40:5, col:53> col:17 port_count 'const char *() const'
| |-Overrides: [ 0x55666311e380 Element::port_count 'const char *() const' ]
| `-CompoundStmt 0x5566631f5cf0 <col:36, col:53>
|   `-ReturnStmt 0x5566631f5ce0 <col:38, col:45>
|     `-ImplicitCastExpr 0x5566631f5cc8 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x5566631f5ca8 <col:45> 'const char [5]' lvalue "1-/1"
|-CXXMethodDecl 0x5566631f3130 <line:41:5, col:51> col:17 processing 'const char *() const'
| |-Overrides: [ 0x55666311e748 Element::processing 'const char *() const' ]
| `-CompoundStmt 0x5566631f5d50 <col:36, col:51>
|   `-ReturnStmt 0x5566631f5d40 <col:38, col:45>
|     `-ImplicitCastExpr 0x5566631f5d28 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-DeclRefExpr 0x5566631f5d08 <col:45> 'const char []' lvalue Var 0x55666311e918 'PULL' 'const char []'
|-CXXMethodDecl 0x5566631f31f8 <line:42:5, col:46> col:17 flags 'const char *() const'
| |-Overrides: [ 0x55666311ec90 Element::flags 'const char *() const' ]
| `-CompoundStmt 0x5566631f5db0 <col:31, col:46>
|   `-ReturnStmt 0x5566631f5da0 <col:33, col:40>
|     `-ImplicitCastExpr 0x5566631f5d88 <col:40> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x5566631f5d68 <col:40> 'const char [3]' lvalue "S0"
|-CXXMethodDecl 0x5566631f34d0 <line:44:5, col:55> col:9 configure 'int (Vector<String> &, ErrorHandler *)'
| |-Overrides: [ 0x55666311fb50 Element::configure 'int (Vector<String> &, ErrorHandler *)' ]
| |-ParmVarDecl 0x5566631f3380 <col:19, col:35> col:35 conf 'Vector<String> &'
| `-ParmVarDecl 0x5566631f33f8 <col:41, col:54> col:55 'ErrorHandler *'
|-CXXMethodDecl 0x5566631f35a0 <line:45:5, col:54> col:10 can_live_reconfigure 'bool () const'
| |-Overrides: [ 0x5566631225a0 Element::can_live_reconfigure 'bool () const' ]
| `-CompoundStmt 0x5566631f5de8 <col:39, col:54>
|   `-ReturnStmt 0x5566631f5dd8 <col:41, col:48>
|     `-CXXBoolLiteralExpr 0x5566631f5dc8 <col:48> 'bool' true
|-CXXMethodDecl 0x5566631f36e8 <line:46:5, col:34> col:9 initialize 'int (ErrorHandler *)'
| |-Overrides: [ 0x55666311fda0 Element::initialize 'int (ErrorHandler *)' ]
| `-ParmVarDecl 0x5566631f3650 <col:20, col:33> col:34 'ErrorHandler *'
|-CXXMethodDecl 0x5566631f3830 <line:47:5, col:30> col:10 cleanup 'void (Element::CleanupStage)'
| |-Overrides: [ 0x5566631205b8 Element::cleanup 'void (Element::CleanupStage)' ]
| `-ParmVarDecl 0x5566631f37a0 <col:18> col:30 'Element::CleanupStage'
|-CXXMethodDecl 0x5566631f38f8 <line:48:5, col:23> col:10 add_handlers 'void ()'
| `-Overrides: [ 0x55666311fc20 Element::add_handlers 'void ()' ]
|-EnumDecl 0x5566631f3998 <line:50:5, col:51> col:5
| |-EnumConstantDecl 0x5566631f3ae0 <col:12, col:26> col:12 referenced STRIDE1 'StrideSched::(anonymous enum at ../elements/standard/stridesched.hh:50:5)'
| | `-ConstantExpr 0x5566631f3ac0 <col:22, col:26> 'unsigned int' Int: 65536
| |   `-BinaryOperator 0x5566631f3aa0 <col:22, col:26> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x5566631f3a60 <col:22> 'unsigned int' 1
| |     `-IntegerLiteral 0x5566631f3a80 <col:26> 'int' 16
| `-EnumConstantDecl 0x5566631f3bb0 <col:30, col:48> col:30 MAX_TICKETS 'StrideSched::(anonymous enum at ../elements/standard/stridesched.hh:50:5)'
|   `-ConstantExpr 0x5566631f3b90 <col:44, col:48> 'unsigned int' Int: 32768
|     `-BinaryOperator 0x5566631f3b70 <col:44, col:48> 'unsigned int' '<<'
|       |-IntegerLiteral 0x5566631f3b30 <col:44> 'unsigned int' 1
|       `-IntegerLiteral 0x5566631f3b50 <col:48> 'int' 15
|-CXXMethodDecl 0x5566631f3cb0 <line:51:5, col:22> col:9 tickets 'int (int) const'
| `-ParmVarDecl 0x5566631f3c18 <col:17> col:20 'int'
|-CXXMethodDecl 0x5566631f3f10 <line:52:5, col:45> col:9 set_tickets 'int (int, int, ErrorHandler *)'
| |-ParmVarDecl 0x5566631f3d70 <col:21> col:24 'int'
| |-ParmVarDecl 0x5566631f3df0 <col:26> col:29 'int'
| `-ParmVarDecl 0x5566631f3e68 <col:31, col:44> col:45 'ErrorHandler *'
|-CXXMethodDecl 0x5566631f4070 <line:54:5, col:26> col:13 pull 'Packet *(int)'
| |-Overrides: [ 0x55666311d2b8 Element::pull 'Packet *(int)' ]
| `-ParmVarDecl 0x5566631f3fe0 <col:18, col:22> col:22 port 'int'
|-AccessSpecDecl 0x5566631f4118 <line:56:3, col:12> col:3 protected
|-CXXRecordDecl 0x5566631f4140 <line:58:5, line:90:5> line:58:12 referenced struct Client definition
| |-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveConstructor exists simple non_trivial needs_overload_resolution
| | |-CopyAssignment non_trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple non_trivial needs_overload_resolution
| | `-Destructor simple non_trivial needs_overload_resolution
| |-CXXRecordDecl 0x5566631f4258 <col:5, col:12> col:12 implicit referenced struct Client
| |-FieldDecl 0x5566631f4360 <line:59:2, col:11> col:11 referenced _pprev 'StrideSched::Client **'
| |-FieldDecl 0x5566631f43c0 <line:60:2, col:10> col:10 referenced _next 'StrideSched::Client *'
| |-FieldDecl 0x5566631f4428 <line:61:2, col:11> col:11 referenced _pass 'unsigned int'
| |-FieldDecl 0x5566631f4490 <line:62:2, col:11> col:11 referenced _stride 'unsigned int'
| |-FieldDecl 0x5566631f44f8 <line:63:2, col:6> col:6 referenced _tickets 'int'
| |-FieldDecl 0x5566631f4558 <line:64:2, col:17> col:17 _signal 'NotifierSignal'
| |-CXXConstructorDecl 0x5566631f45e0 <line:66:2, line:68:2> line:66:2 Client 'void ()'
| | |-CXXCtorInitializer Field 0x5566631f4360 '_pprev' 'StrideSched::Client **'
| | | `-ImplicitCastExpr 0x5566631f5e40 <line:67:15> 'StrideSched::Client **' <NullToPointer>
| | |   `-IntegerLiteral 0x5566631f5e00 <col:15> 'int' 0
| | |-CXXCtorInitializer Field 0x5566631f43c0 '_next' 'StrideSched::Client *'
| | | `-ImplicitCastExpr 0x5566631f5ec0 <col:25> 'StrideSched::Client *' <NullToPointer>
| | |   `-IntegerLiteral 0x5566631f5e80 <col:25> 'int' 0
| | |-CXXCtorInitializer Field 0x5566631f4428 '_pass' 'unsigned int'
| | | `-ImplicitCastExpr 0x5566631f5f40 <col:35> 'unsigned int' <IntegralCast>
| | |   `-IntegerLiteral 0x5566631f5f00 <col:35> 'int' 0
| | |-CXXCtorInitializer Field 0x5566631f4490 '_stride' 'unsigned int'
| | | `-ImplicitCastExpr 0x5566631f5fc0 <col:47> 'unsigned int' <IntegralCast>
| | |   `-IntegerLiteral 0x5566631f5f80 <col:47> 'int' 0
| | |-CXXCtorInitializer Field 0x5566631f44f8 '_tickets' 'int'
| | | `-UnaryOperator 0x5566631f6020 <col:60, col:61> 'int' prefix '-'
| | |   `-IntegerLiteral 0x5566631f6000 <col:61> 'int' 1
| | |-CXXCtorInitializer Field 0x5566631f4558 '_signal' 'NotifierSignal'
| | | `-CXXConstructExpr 0x5566631f6080 <line:66:2> 'NotifierSignal' 'void ()'
| | `-CompoundStmt 0x5566631f6100 <line:67:64, line:68:2>
| |-CXXMethodDecl 0x5566631f4730 <line:70:2, line:73:2> line:70:7 set_tickets 'void (int)'
| | |-ParmVarDecl 0x5566631f46a0 <col:19, col:23> col:23 used t 'int'
| | `-CompoundStmt 0x5566631f6350 <col:26, line:73:2>
| |   |-BinaryOperator 0x5566631f6188 <line:71:6, col:17> 'int' lvalue '='
| |   | |-MemberExpr 0x5566631f6120 <col:6> 'int' lvalue ->_tickets 0x5566631f44f8
| |   | | `-CXXThisExpr 0x5566631f6110 <col:6> 'StrideSched::Client *' implicit this
| |   | `-ImplicitCastExpr 0x5566631f6170 <col:17> 'int' <LValueToRValue>
| |   |   `-DeclRefExpr 0x5566631f6150 <col:17> 'int' lvalue ParmVar 0x5566631f46a0 't' 'int'
| |   `-BinaryOperator 0x5566631f6330 <line:72:6, col:34> 'unsigned int' lvalue '='
| |     |-MemberExpr 0x5566631f61b8 <col:6> 'unsigned int' lvalue ->_stride 0x5566631f4490
| |     | `-CXXThisExpr 0x5566631f61a8 <col:6> 'StrideSched::Client *' implicit this
| |     `-ImplicitCastExpr 0x5566631f6318 <col:16, col:34> 'unsigned int' <IntegralCast>
| |       `-ConditionalOperator 0x5566631f62e8 <col:16, col:34> 'int'
| |         |-ImplicitCastExpr 0x5566631f62d0 <col:16> 'bool' <IntegralToBoolean>
| |         | `-ImplicitCastExpr 0x5566631f62b8 <col:16> 'int' <LValueToRValue>
| |         |   `-DeclRefExpr 0x5566631f61e8 <col:16> 'int' lvalue ParmVar 0x5566631f46a0 't' 'int'
| |         |-BinaryOperator 0x5566631f6278 <col:20, col:30> 'int' '/'
| |         | |-ImplicitCastExpr 0x5566631f6248 <col:20> 'int' <IntegralCast>
| |         | | `-DeclRefExpr 0x5566631f6208 <col:20> 'StrideSched::(anonymous enum at ../elements/standard/stridesched.hh:50:5)' EnumConstant 0x5566631f3ae0 'STRIDE1' 'StrideSched::(anonymous enum at ../elements/standard/stridesched.hh:50:5)'
| |         | `-ImplicitCastExpr 0x5566631f6260 <col:30> 'int' <LValueToRValue>
| |         |   `-DeclRefExpr 0x5566631f6228 <col:30> 'int' lvalue ParmVar 0x5566631f46a0 't' 'int'
| |         `-IntegerLiteral 0x5566631f6298 <col:34> 'int' 0
| |-CXXMethodDecl 0x5566631f47f8 <line:74:2, line:76:2> line:74:7 stride 'void ()'
| | `-CompoundStmt 0x5566631f6438 <col:16, line:76:2>
| |   `-CompoundAssignOperator 0x5566631f6408 <line:75:6, col:15> 'unsigned int' lvalue '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
| |     |-MemberExpr 0x5566631f6380 <col:6> 'unsigned int' lvalue ->_pass 0x5566631f4428
| |     | `-CXXThisExpr 0x5566631f6370 <col:6> 'StrideSched::Client *' implicit this
| |     `-ImplicitCastExpr 0x5566631f63f0 <col:15> 'unsigned int' <LValueToRValue>
| |       `-MemberExpr 0x5566631f63c0 <col:15> 'unsigned int' lvalue ->_stride 0x5566631f4490
| |         `-CXXThisExpr 0x5566631f63b0 <col:15> 'StrideSched::Client *' implicit this
| |-CXXMethodDecl 0x5566631f4978 <line:78:2, line:85:2> line:78:7 insert 'void (StrideSched::Client **)'
| | |-ParmVarDecl 0x5566631f48b0 <col:14, col:23> col:23 used list 'StrideSched::Client **'
| | `-CompoundStmt 0x5566631f6b90 <col:29, line:85:2>
| |   |-BinaryOperator 0x5566631f64c8 <line:79:6, col:15> 'StrideSched::Client **' lvalue '='
| |   | |-MemberExpr 0x5566631f6460 <col:6> 'StrideSched::Client **' lvalue ->_pprev 0x5566631f4360
| |   | | `-CXXThisExpr 0x5566631f6450 <col:6> 'StrideSched::Client *' implicit this
| |   | `-ImplicitCastExpr 0x5566631f64b0 <col:15> 'StrideSched::Client **' <LValueToRValue>
| |   |   `-DeclRefExpr 0x5566631f6490 <col:15> 'StrideSched::Client **' lvalue ParmVar 0x5566631f48b0 'list' 'StrideSched::Client **'
| |   |-WhileStmt 0x5566631f6950 <line:80:6, line:81:20>
| |   | |-BinaryOperator 0x5566631f6830 <line:80:13, col:66> 'bool' '&&'
| |   | | |-ImplicitCastExpr 0x5566631f6818 <col:13, col:29> 'bool' <PointerToBoolean>
| |   | | | `-ImplicitCastExpr 0x5566631f6800 <col:13, col:29> 'StrideSched::Client *' <LValueToRValue>
| |   | | |   `-ParenExpr 0x5566631f65d0 <col:13, col:29> 'StrideSched::Client *' lvalue
| |   | | |     `-BinaryOperator 0x5566631f65b0 <col:14, col:23> 'StrideSched::Client *' lvalue '='
| |   | | |       |-MemberExpr 0x5566631f64f8 <col:14> 'StrideSched::Client *' lvalue ->_next 0x5566631f43c0
| |   | | |       | `-CXXThisExpr 0x5566631f64e8 <col:14> 'StrideSched::Client *' implicit this
| |   | | |       `-ImplicitCastExpr 0x5566631f6598 <col:22, col:23> 'StrideSched::Client *' <LValueToRValue>
| |   | | |         `-UnaryOperator 0x5566631f6580 <col:22, col:23> 'StrideSched::Client *' lvalue prefix '*' cannot overflow
| |   | | |           `-ImplicitCastExpr 0x5566631f6568 <col:23> 'StrideSched::Client **' <LValueToRValue>
| |   | | |             `-MemberExpr 0x5566631f6538 <col:23> 'StrideSched::Client **' lvalue ->_pprev 0x5566631f4360
| |   | | |               `-CXXThisExpr 0x5566631f6528 <col:23> 'StrideSched::Client *' implicit this
| |   | | `-ParenExpr 0x5566631f67e0 <col:34, col:66> 'bool'
| |   | |   `-BinaryOperator 0x5566631f67c0 <col:35, col:65> 'bool' '>'
| |   | |     |-CStyleCastExpr 0x5566631f6778 <col:35, col:61> 'int' <NoOp>
| |   | |     | `-ImplicitCastExpr 0x5566631f6760 <col:40, col:61> 'int' <IntegralCast> part_of_explicit_cast
| |   | |     |   `-ParenExpr 0x5566631f6740 <col:40, col:61> 'unsigned int'
| |   | |     |     `-BinaryOperator 0x5566631f66e8 <col:41, col:56> 'unsigned int' '-'
| |   | |     |       |-ImplicitCastExpr 0x5566631f66b8 <col:41> 'unsigned int' <LValueToRValue>
| |   | |     |       | `-MemberExpr 0x5566631f6600 <col:41> 'unsigned int' lvalue ->_pass 0x5566631f4428
| |   | |     |       |   `-CXXThisExpr 0x5566631f65f0 <col:41> 'StrideSched::Client *' implicit this
| |   | |     |       `-ImplicitCastExpr 0x5566631f66d0 <col:49, col:56> 'unsigned int' <LValueToRValue>
| |   | |     |         `-MemberExpr 0x5566631f6688 <col:49, col:56> 'unsigned int' lvalue ->_pass 0x5566631f4428
| |   | |     |           `-ImplicitCastExpr 0x5566631f6670 <col:49> 'StrideSched::Client *' <LValueToRValue>
| |   | |     |             `-MemberExpr 0x5566631f6640 <col:49> 'StrideSched::Client *' lvalue ->_next 0x5566631f43c0
| |   | |     |               `-CXXThisExpr 0x5566631f6630 <col:49> 'StrideSched::Client *' implicit this
| |   | |     `-IntegerLiteral 0x5566631f67a0 <col:65> 'int' 0
| |   | `-BinaryOperator 0x5566631f6930 <line:81:3, col:20> 'StrideSched::Client **' lvalue '='
| |   |   |-MemberExpr 0x5566631f6860 <col:3> 'StrideSched::Client **' lvalue ->_pprev 0x5566631f4360
| |   |   | `-CXXThisExpr 0x5566631f6850 <col:3> 'StrideSched::Client *' implicit this
| |   |   `-UnaryOperator 0x5566631f6918 <col:12, col:20> 'StrideSched::Client **' prefix '&' cannot overflow
| |   |     `-MemberExpr 0x5566631f68e8 <col:13, col:20> 'StrideSched::Client *' lvalue ->_next 0x5566631f43c0
| |   |       `-ImplicitCastExpr 0x5566631f68d0 <col:13> 'StrideSched::Client *' <LValueToRValue>
| |   |         `-MemberExpr 0x5566631f68a0 <col:13> 'StrideSched::Client *' lvalue ->_next 0x5566631f43c0
| |   |           `-CXXThisExpr 0x5566631f6890 <col:13> 'StrideSched::Client *' implicit this
| |   |-BinaryOperator 0x5566631f69e8 <line:82:6, col:16> 'StrideSched::Client *' lvalue '='
| |   | |-UnaryOperator 0x5566631f69c0 <col:6, col:7> 'StrideSched::Client *' lvalue prefix '*' cannot overflow
| |   | | `-ImplicitCastExpr 0x5566631f69a8 <col:7> 'StrideSched::Client **' <LValueToRValue>
| |   | |   `-MemberExpr 0x5566631f6978 <col:7> 'StrideSched::Client **' lvalue ->_pprev 0x5566631f4360
| |   | |     `-CXXThisExpr 0x5566631f6968 <col:7> 'StrideSched::Client *' implicit this
| |   | `-CXXThisExpr 0x5566631f69d8 <col:16> 'StrideSched::Client *' this
| |   `-IfStmt 0x5566631f6b78 <line:83:6, line:84:20>
| |     |-ImplicitCastExpr 0x5566631f6a60 <line:83:10> 'bool' <PointerToBoolean>
| |     | `-ImplicitCastExpr 0x5566631f6a48 <col:10> 'StrideSched::Client *' <LValueToRValue>
| |     |   `-MemberExpr 0x5566631f6a18 <col:10> 'StrideSched::Client *' lvalue ->_next 0x5566631f43c0
| |     |     `-CXXThisExpr 0x5566631f6a08 <col:10> 'StrideSched::Client *' implicit this
| |     `-BinaryOperator 0x5566631f6b58 <line:84:3, col:20> 'StrideSched::Client **' lvalue '='
| |       |-MemberExpr 0x5566631f6ad0 <col:3, col:10> 'StrideSched::Client **' lvalue ->_pprev 0x5566631f4360
| |       | `-ImplicitCastExpr 0x5566631f6ab8 <col:3> 'StrideSched::Client *' <LValueToRValue>
| |       |   `-MemberExpr 0x5566631f6a88 <col:3> 'StrideSched::Client *' lvalue ->_next 0x5566631f43c0
| |       |     `-CXXThisExpr 0x5566631f6a78 <col:3> 'StrideSched::Client *' implicit this
| |       `-UnaryOperator 0x5566631f6b40 <col:19, col:20> 'StrideSched::Client **' prefix '&' cannot overflow
| |         `-MemberExpr 0x5566631f6b10 <col:20> 'StrideSched::Client *' lvalue ->_next 0x5566631f43c0
| |           `-CXXThisExpr 0x5566631f6b00 <col:20> 'StrideSched::Client *' implicit this
| |-CXXMethodDecl 0x5566631f4a40 <line:86:2, line:89:2> line:86:7 remove 'void ()'
| | `-CompoundStmt 0x5566631ffff0 <col:16, line:89:2>
| |   `-IfStmt 0x5566631fffd8 <line:87:6, line:88:19>
| |     |-ImplicitCastExpr 0x5566631f6ce0 <line:87:10, col:26> 'bool' <PointerToBoolean>
| |     | `-ImplicitCastExpr 0x5566631f6cc8 <col:10, col:26> 'StrideSched::Client *' <LValueToRValue>
| |     |   `-ParenExpr 0x5566631f6ca8 <col:10, col:26> 'StrideSched::Client *' lvalue
| |     |     `-BinaryOperator 0x5566631f6c88 <col:11, col:21> 'StrideSched::Client *' lvalue '='
| |     |       |-UnaryOperator 0x5566631f6c18 <col:11, col:12> 'StrideSched::Client *' lvalue prefix '*' cannot overflow
| |     |       | `-ImplicitCastExpr 0x5566631f6c00 <col:12> 'StrideSched::Client **' <LValueToRValue>
| |     |       |   `-MemberExpr 0x5566631f6bd0 <col:12> 'StrideSched::Client **' lvalue ->_pprev 0x5566631f4360
| |     |       |     `-CXXThisExpr 0x5566631f6bc0 <col:12> 'StrideSched::Client *' implicit this
| |     |       `-ImplicitCastExpr 0x5566631f6c70 <col:21> 'StrideSched::Client *' <LValueToRValue>
| |     |         `-MemberExpr 0x5566631f6c40 <col:21> 'StrideSched::Client *' lvalue ->_next 0x5566631f43c0
| |     |           `-CXXThisExpr 0x5566631f6c30 <col:21> 'StrideSched::Client *' implicit this
| |     `-BinaryOperator 0x5566631fffb8 <line:88:3, col:19> 'StrideSched::Client **' lvalue '='
| |       |-MemberExpr 0x5566631fff30 <col:3, col:10> 'StrideSched::Client **' lvalue ->_pprev 0x5566631f4360
| |       | `-ImplicitCastExpr 0x5566631f6d38 <col:3> 'StrideSched::Client *' <LValueToRValue>
| |       |   `-MemberExpr 0x5566631f6d08 <col:3> 'StrideSched::Client *' lvalue ->_next 0x5566631f43c0
| |       |     `-CXXThisExpr 0x5566631f6cf8 <col:3> 'StrideSched::Client *' implicit this
| |       `-ImplicitCastExpr 0x5566631fffa0 <col:19> 'StrideSched::Client **' <LValueToRValue>
| |         `-MemberExpr 0x5566631fff70 <col:19> 'StrideSched::Client **' lvalue ->_pprev 0x5566631f4360
| |           `-CXXThisExpr 0x5566631fff60 <col:19> 'StrideSched::Client *' implicit this
| |-CXXConstructorDecl 0x5566631f4b08 <line:58:12> col:12 implicit Client 'void (const StrideSched::Client &)' inline default noexcept-unevaluated 0x5566631f4b08
| | `-ParmVarDecl 0x5566631f4c18 <col:12> col:12 'const StrideSched::Client &'
| |-CXXConstructorDecl 0x5566631f4cb8 <col:12> col:12 implicit Client 'void (StrideSched::Client &&)' inline default noexcept-unevaluated 0x5566631f4cb8
| | `-ParmVarDecl 0x5566631f4dc8 <col:12> col:12 'StrideSched::Client &&'
| |-CXXMethodDecl 0x5566631f4e68 <col:12> col:12 implicit operator= 'StrideSched::Client &(StrideSched::Client &&)' inline default noexcept-unevaluated 0x5566631f4e68
| | `-ParmVarDecl 0x5566631f4f78 <col:12> col:12 'StrideSched::Client &&'
| `-CXXDestructorDecl 0x5566631f5000 <col:12> col:12 implicit ~Client 'void ()' inline default noexcept-unevaluated 0x5566631f5000
|-FieldDecl 0x5566631f50f0 <line:92:5, col:13> col:13 _all 'StrideSched::Client *'
|-FieldDecl 0x5566631f5150 <line:93:5, col:13> col:13 _list 'StrideSched::Client *'
|-CXXMethodDecl 0x5566631f51c8 <line:95:5, line:97:5> line:95:9 nclients 'int () const'
| `-CompoundStmt 0x5566632001f0 <col:26, line:97:5>
|   `-ReturnStmt 0x5566632001e0 <line:96:2, col:49>
|     `-ConditionalOperator 0x5566632001b0 <col:9, col:49> 'int'
|       |-CXXMemberCallExpr 0x556663200068 <col:9, col:24> 'bool'
|       | |-MemberExpr 0x556663200018 <col:9> '<bound member function type>' ->input_is_pull 0x556663131cc0
|       | | `-ImplicitCastExpr 0x556663200090 <col:9> 'const Element *' <UncheckedDerivedToBase (Element)>
|       | |   `-CXXThisExpr 0x556663200008 <col:9> 'const StrideSched *' implicit this
|       | `-IntegerLiteral 0x556663200048 <col:23> 'int' 0
|       |-CXXMemberCallExpr 0x5566632000f0 <col:28, col:36> 'int'
|       | `-MemberExpr 0x5566632000c0 <col:28> '<bound member function type>' ->ninputs 0x55666312f878
|       |   `-ImplicitCastExpr 0x556663200110 <col:28> 'const Element *' <UncheckedDerivedToBase (Element)>
|       |     `-CXXThisExpr 0x5566632000b0 <col:28> 'const StrideSched *' implicit this
|       `-CXXMemberCallExpr 0x556663200170 <col:40, col:49> 'int'
|         `-MemberExpr 0x556663200140 <col:40> '<bound member function type>' ->noutputs 0x55666312fa70
|           `-ImplicitCastExpr 0x556663200190 <col:40> 'const Element *' <UncheckedDerivedToBase (Element)>
|             `-CXXThisExpr 0x556663200130 <col:40> 'const StrideSched *' implicit this
|-CXXMethodDecl 0x5566631f5390 <line:98:5, col:49> col:19 read_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x5566631f5278 <col:32, col:40> col:41 'Element *'
| `-ParmVarDecl 0x5566631f52f8 <col:43, col:48> col:49 'void *'
|-CXXConstructorDecl 0x5566631f5468 <line:35:7> col:7 implicit StrideSched 'void (const StrideSched &)' inline default_delete noexcept-unevaluated 0x5566631f5468
| `-ParmVarDecl 0x5566631f5578 <col:7> col:7 'const StrideSched &'
|-CXXConstructorDecl 0x5566631f5618 <col:7> col:7 implicit StrideSched 'void (StrideSched &&)' inline default_delete noexcept-unevaluated 0x5566631f5618
| `-ParmVarDecl 0x5566631f5728 <col:7> col:7 'StrideSched &&'
|-CXXMethodDecl 0x5566631f57c8 <col:7> col:7 implicit operator= 'StrideSched &(const StrideSched &)' inline default_delete noexcept-unevaluated 0x5566631f57c8
| `-ParmVarDecl 0x5566631f58d8 <col:7> col:7 'const StrideSched &'
|-CXXMethodDecl 0x5566631f5948 <col:7> col:7 implicit operator= 'StrideSched &(StrideSched &&)' inline default_delete noexcept-unevaluated 0x5566631f5948
| `-ParmVarDecl 0x5566631f5a58 <col:7> col:7 'StrideSched &&'
`-CXXDestructorDecl 0x5566631f5ae0 <col:7> col:7 implicit ~StrideSched 'void ()' inline default noexcept-unevaluated 0x5566631f5ae0
  `-Overrides: [ 0x55666311ce58 Element::~Element 'void () noexcept' ]

Layout: <CGRecordLayout
  LLVMType:%class.StrideSched = type { %class.Element.base, %"struct.StrideSched::Client"*, %"struct.StrideSched::Client"* }
  NonVirtualBaseLLVMType:%class.StrideSched = type { %class.Element.base, %"struct.StrideSched::Client"*, %"struct.StrideSched::Client"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class vector_memory<class typed_array_memory<class String> >
         0 |   vector_memory<class typed_array_memory<class String> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class String>
         0 |   class vector_memory<class typed_array_memory<class String> > vm_
         0 |     vector_memory<class typed_array_memory<class String> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x556662ef0a20 <../dummy_inc/click/string.hh:189:5, line:198:5> line:189:12 referenced struct memo_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x556662ef0b38 <col:5, col:12> col:12 implicit struct memo_t
|-FieldDecl 0x556662ef0bd8 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
|-FieldDecl 0x556662ef0c38 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
|-FieldDecl 0x556662ef0c98 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
`-FieldDecl 0x556662ef0d48 <line:197:2, col:18> col:7 real_data 'char [8]'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  NonVirtualBaseLLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x556662ef1050 <../dummy_inc/click/string.hh:204:5, line:208:5> line:204:12 referenced struct rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x556662ef1168 <col:5, col:12> col:12 implicit struct rep_t
|-FieldDecl 0x556662ef1210 <line:205:2, col:14> col:14 referenced data 'const char *'
|-FieldDecl 0x556662ef1278 <line:206:2, col:6> col:6 referenced length 'int'
|-FieldDecl 0x556662ef1308 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
|-CXXConstructorDecl 0x556662ef73a0 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x556662ef77d8 <col:12>
|-CXXConstructorDecl 0x556662ef74a8 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x556662ef75b8 <col:12> col:12 used 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x556662ef1210 'data' 'const char *'
| | `-ImplicitCastExpr 0x556662ef9d60 <col:12> 'const char *' <LValueToRValue>
| |   `-MemberExpr 0x556662ef9d30 <col:12> 'const char *const' lvalue .data 0x556662ef1210
| |     `-DeclRefExpr 0x556662ef9d10 <col:12> 'const String::rep_t' lvalue ParmVar 0x556662ef75b8 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x556662ef1278 'length' 'int'
| | `-ImplicitCastExpr 0x556662ef9df0 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x556662ef9dc0 <col:12> 'const int' lvalue .length 0x556662ef1278
| |     `-DeclRefExpr 0x556662ef9da0 <col:12> 'const String::rep_t' lvalue ParmVar 0x556662ef75b8 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x556662ef1308 'memo' 'String::memo_t *'
| | `-ImplicitCastExpr 0x556662ef9e80 <col:12> 'String::memo_t *' <LValueToRValue>
| |   `-MemberExpr 0x556662ef9e50 <col:12> 'String::memo_t *const' lvalue .memo 0x556662ef1308
| |     `-DeclRefExpr 0x556662ef9e30 <col:12> 'const String::rep_t' lvalue ParmVar 0x556662ef75b8 '' 'const String::rep_t &'
| `-CompoundStmt 0x556662ef9ed8 <col:12>
|-CXXConstructorDecl 0x556662ef7658 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x556662ef7658
| `-ParmVarDecl 0x556662ef7768 <col:12> col:12 'String::rep_t &&'
|-CXXDestructorDecl 0x556662efccc0 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x556662f086d8 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x556662f087e8 <col:12> col:12 used 'const String::rep_t &'
| `-CompoundStmt 0x556662f08d00 <col:12>
|   |-BinaryOperator 0x556662f08b18 <col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x556662f08ad0 <col:12> 'const char *' lvalue ->data 0x556662ef1210
|   | | `-CXXThisExpr 0x556662f08ac0 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x556662f08b00 <col:12> 'const char *' <LValueToRValue>
|   |   `-MemberExpr 0x556662f08a90 <col:12> 'const char *const' lvalue .data 0x556662ef1210
|   |     `-DeclRefExpr 0x556662f08a70 <col:12> 'const String::rep_t' lvalue ParmVar 0x556662f087e8 '' 'const String::rep_t &'
|   |-BinaryOperator 0x556662f08be0 <col:12> 'int' lvalue '='
|   | |-MemberExpr 0x556662f08b98 <col:12> 'int' lvalue ->length 0x556662ef1278
|   | | `-CXXThisExpr 0x556662f08b88 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x556662f08bc8 <col:12> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x556662f08b58 <col:12> 'const int' lvalue .length 0x556662ef1278
|   |     `-DeclRefExpr 0x556662f08b38 <col:12> 'const String::rep_t' lvalue ParmVar 0x556662f087e8 '' 'const String::rep_t &'
|   |-BinaryOperator 0x556662f08ca8 <col:12> 'String::memo_t *' lvalue '='
|   | |-MemberExpr 0x556662f08c60 <col:12> 'String::memo_t *' lvalue ->memo 0x556662ef1308
|   | | `-CXXThisExpr 0x556662f08c50 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x556662f08c90 <col:12> 'String::memo_t *' <LValueToRValue>
|   |   `-MemberExpr 0x556662f08c20 <col:12> 'String::memo_t *const' lvalue .memo 0x556662ef1308
|   |     `-DeclRefExpr 0x556662f08c00 <col:12> 'const String::rep_t' lvalue ParmVar 0x556662f087e8 '' 'const String::rep_t &'
|   `-ReturnStmt 0x556662f08cf0 <col:12>
|     `-UnaryOperator 0x556662f08cd8 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x556662f08cc8 <col:12> 'String::rep_t *' this
`-CXXMethodDecl 0x556662f08858 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x556662f08858
  `-ParmVarDecl 0x556662f08968 <col:12> col:12 'String::rep_t &&'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  NonVirtualBaseLLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x556662ee7f90 <../dummy_inc/click/string.hh:19:1, line:304:1> line:19:7 referenced class String definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x556662ee80a8 <col:1, col:7> col:7 implicit referenced class String
|-AccessSpecDecl 0x556662ee8138 <col:16, col:22> col:16 public
|-TypedefDecl 0x556662ee8178 <line:21:5, col:25> col:25 referenced const_iterator 'const char *'
| `-PointerType 0x556662bb7dc0 'const char *'
|   `-QualType 0x556662bb7311 'const char' const
|     `-BuiltinType 0x556662bb7310 'char'
|-TypedefDecl 0x556662ee8200 <line:22:5, col:28> col:28 iterator 'String::const_iterator':'const char *'
| `-TypedefType 0x556662ee81d0 'String::const_iterator' sugar
|   |-Typedef 0x556662ee8178 'const_iterator'
|   `-PointerType 0x556662bb7dc0 'const char *'
|     `-QualType 0x556662bb7311 'const char' const
|       `-BuiltinType 0x556662bb7310 'char'
|-TypedefDecl 0x556662ee8370 <line:24:5, col:52> col:27 referenced unspecified_bool_type 'int (String::*)() const'
| `-MemberPointerType 0x556662ee82e0 'int (String::*)() const'
|   |-RecordType 0x556662ee8020 'String'
|   | `-CXXRecord 0x556662ee7f90 'String'
|   `-ParenType 0x556662ee8280 'int () const' sugar
|     `-FunctionProtoType 0x556662ebbe10 'int () const' const cdecl
|       `-BuiltinType 0x556662bb7370 'int'
|-TypedefDecl 0x556662ee83d8 <line:27:5, col:21> col:21 referenced intmax_t 'int64_t':'long'
| `-TypedefType 0x556662d109f0 'int64_t' sugar
|   |-Typedef 0x556662c202d0 'int64_t'
|   `-TypedefType 0x556662bf94d0 '__int64_t' sugar
|     |-Typedef 0x556662bf90a8 '__int64_t'
|     `-BuiltinType 0x556662bb7390 'long'
|-TypedefDecl 0x556662ee8440 <line:28:5, col:22> col:22 referenced uintmax_t 'uint64_t':'unsigned long'
| `-TypedefType 0x556662d10910 'uint64_t' sugar
|   |-Typedef 0x556662c20470 'uint64_t'
|   `-TypedefType 0x556662bf9560 '__uint64_t' sugar
|     |-Typedef 0x556662bf9118 '__uint64_t'
|     `-BuiltinType 0x556662bb7430 'unsigned long'
|-TypedefDecl 0x556662ee84d0 <line:36:5, col:22> col:22 int_large_t 'String::intmax_t':'long'
| `-TypedefType 0x556662ee84a0 'String::intmax_t' sugar
|   |-Typedef 0x556662ee83d8 'intmax_t'
|   `-TypedefType 0x556662d109f0 'int64_t' sugar
|     |-Typedef 0x556662c202d0 'int64_t'
|     `-TypedefType 0x556662bf94d0 '__int64_t' sugar
|       |-Typedef 0x556662bf90a8 '__int64_t'
|       `-BuiltinType 0x556662bb7390 'long'
|-TypedefDecl 0x556662ee8560 <line:37:5, col:23> col:23 uint_large_t 'String::uintmax_t':'unsigned long'
| `-TypedefType 0x556662ee8530 'String::uintmax_t' sugar
|   |-Typedef 0x556662ee8440 'uintmax_t'
|   `-TypedefType 0x556662d10910 'uint64_t' sugar
|     |-Typedef 0x556662c20470 'uint64_t'
|     `-TypedefType 0x556662bf9560 '__uint64_t' sugar
|       |-Typedef 0x556662bf9118 '__uint64_t'
|       `-BuiltinType 0x556662bb7430 'unsigned long'
|-CXXConstructorDecl 0x556662ee8620 <line:39:5, col:19> col:12 used String 'void ()' inline
|-CXXConstructorDecl 0x556662ee87c8 <line:40:5, col:34> col:12 used String 'void (const String &)' inline
| `-ParmVarDecl 0x556662ee8708 <col:19, col:33> col:33 x 'const String &'
|-CXXConstructorDecl 0x556662ee8978 <line:42:5, col:29> col:12 used String 'void (String &&)' inline
| `-ParmVarDecl 0x556662ee88b8 <col:19, col:28> col:28 x 'String &&'
|-CXXConstructorDecl 0x556662ee8ad0 <line:44:5, col:35> col:12 used String 'void (const char *)' inline
| `-ParmVarDecl 0x556662ee8a40 <col:19, col:31> col:31 cstr 'const char *'
|-CXXConstructorDecl 0x556662ee8ce8 <line:45:5, col:41> col:12 String 'void (const char *, int)' inline
| |-ParmVarDecl 0x556662ee8b98 <col:19, col:31> col:31 s 'const char *'
| `-ParmVarDecl 0x556662ee8c18 <col:34, col:38> col:38 len 'int'
|-CXXConstructorDecl 0x556662ee8f08 <line:46:5, col:50> col:12 String 'void (const unsigned char *, int)' inline
| |-ParmVarDecl 0x556662ee8db8 <col:19, col:40> col:40 s 'const unsigned char *'
| `-ParmVarDecl 0x556662ee8e38 <col:43, col:47> col:47 len 'int'
|-CXXConstructorDecl 0x556662ee9128 <line:47:5, col:54> col:12 used String 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x556662ee8fd8 <col:19, col:31> col:31 first 'const char *'
| `-ParmVarDecl 0x556662ee9058 <col:38, col:50> col:50 last 'const char *'
|-CXXConstructorDecl 0x556662ee9348 <line:48:5, col:72> col:12 String 'void (const unsigned char *, const unsigned char *)' inline
| |-ParmVarDecl 0x556662ee91f8 <col:19, col:40> col:40 first 'const unsigned char *'
| `-ParmVarDecl 0x556662ee9278 <col:47, col:68> col:68 last 'const unsigned char *'
|-CXXConstructorDecl 0x556662ee94d8 <line:49:5, col:34> col:21 used String 'void (bool)' inline
| `-ParmVarDecl 0x556662ee9410 <col:28, col:33> col:33 x 'bool'
|-CXXConstructorDecl 0x556662ee9658 <line:50:5, col:34> col:21 String 'void (char)' inline
| `-ParmVarDecl 0x556662ee9598 <col:28, col:33> col:33 c 'char'
|-CXXConstructorDecl 0x556662ee97e8 <line:51:5, col:43> col:21 String 'void (unsigned char)' inline
| `-ParmVarDecl 0x556662ee9720 <col:28, col:42> col:42 c 'unsigned char'
|-CXXConstructorDecl 0x556662ee9940 <line:52:5, col:26> col:14 String 'void (int)'
| `-ParmVarDecl 0x556662ee98b0 <col:21, col:25> col:25 x 'int'
|-CXXConstructorDecl 0x556662ee9a98 <line:53:5, col:31> col:14 String 'void (unsigned int)'
| `-ParmVarDecl 0x556662ee9a08 <col:21, col:30> col:30 x 'unsigned int'
|-CXXConstructorDecl 0x556662ee9bf0 <line:54:5, col:27> col:14 String 'void (long)'
| `-ParmVarDecl 0x556662ee9b60 <col:21, col:26> col:26 x 'long'
|-CXXConstructorDecl 0x556662ee9d78 <line:55:5, col:36> col:14 String 'void (unsigned long)'
| `-ParmVarDecl 0x556662ee9cb8 <col:21, col:35> col:35 x 'unsigned long'
|-CXXConstructorDecl 0x556662ee9f08 <line:57:5, col:32> col:14 String 'void (long long)'
| `-ParmVarDecl 0x556662ee9e40 <col:21, col:31> col:31 x 'long long'
|-CXXConstructorDecl 0x556662eea098 <line:58:5, col:41> col:14 String 'void (unsigned long long)'
| `-ParmVarDecl 0x556662ee9fd0 <col:21, col:40> col:40 x 'unsigned long long'
|-CXXConstructorDecl 0x556662eea228 <line:65:5, col:29> col:14 String 'void (double)'
| `-ParmVarDecl 0x556662eea160 <col:21, col:28> col:28 x 'double'
|-CXXDestructorDecl 0x556662eea320 <line:67:5, col:20> col:12 used ~String 'void () noexcept' inline
|-CXXMethodDecl 0x556662eea448 <line:69:5, col:44> col:33 make_empty 'const String &()' static inline
|-CXXMethodDecl 0x556662eea5c8 <line:70:5, col:52> col:26 used make_uninitialized 'String (int)' static inline
| `-ParmVarDecl 0x556662eea500 <col:45, col:49> col:49 len 'int'
|-CXXMethodDecl 0x556662eea718 <line:71:5, col:74> col:26 make_garbage 'String (int)' static inline
| |-ParmVarDecl 0x556662eea688 <col:39, col:43> col:43 len 'int'
| `-DeprecatedAttr 0x556662eea7d0 <col:63> "" ""
|-CXXMethodDecl 0x556662eea918 <line:72:5, col:54> col:26 make_stable 'String (const char *)' static inline
| `-ParmVarDecl 0x556662eea858 <col:38, col:50> col:50 cstr 'const char *'
|-CXXMethodDecl 0x556662eeab28 <line:73:5, col:60> col:26 make_stable 'String (const char *, int)' static inline
| |-ParmVarDecl 0x556662eea9d8 <col:38, col:50> col:50 s 'const char *'
| `-ParmVarDecl 0x556662eeaa58 <col:53, col:57> col:57 len 'int'
|-CXXMethodDecl 0x556662eead48 <line:74:5, col:73> col:26 make_stable 'String (const char *, const char *)' static inline
| |-ParmVarDecl 0x556662eeabf0 <col:38, col:50> col:50 first 'const char *'
| `-ParmVarDecl 0x556662eeac70 <col:57, col:69> col:69 last 'const char *'
|-CXXMethodDecl 0x556662eeb028 <line:75:5, col:80> col:19 make_numeric 'String (String::intmax_t, int, bool)' static
| |-ParmVarDecl 0x556662eeae08 <col:32, col:41> col:41 x 'String::intmax_t':'long'
| |-ParmVarDecl 0x556662eeae88 <col:44, col:55> col:48 base 'int' cinit
| | `-IntegerLiteral 0x556662ef6e70 <col:55> 'int' 10
| `-ParmVarDecl 0x556662eeaf00 <col:59, col:76> col:64 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x556662ef6e90 <col:76> 'bool' true
|-CXXMethodDecl 0x556662eeb308 <line:76:5, col:81> col:19 make_numeric 'String (String::uintmax_t, int, bool)' static
| |-ParmVarDecl 0x556662eeb0f0 <col:32, col:42> col:42 x 'String::uintmax_t':'unsigned long'
| |-ParmVarDecl 0x556662eeb170 <col:45, col:56> col:49 base 'int' cinit
| | `-IntegerLiteral 0x556662ef6ea0 <col:56> 'int' 10
| `-ParmVarDecl 0x556662eeb1e8 <col:60, col:77> col:65 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x556662ef6ec0 <col:77> 'bool' true
|-CXXMethodDecl 0x556662eeb410 <line:78:5, col:31> col:24 used data 'const char *() const' inline
|-CXXMethodDecl 0x556662eeb4d8 <line:79:5, col:25> col:16 used length 'int () const' inline
|-CXXMethodDecl 0x556662eeb5a0 <line:81:5, col:60> col:52 c_str 'const char *() const'
| |-NoInlineAttr 0x556662eeb640 <col:20>
| `-OptimizeNoneAttr 0x556662eeb698 <col:30>
|-CXXConversionDecl 0x556662eeb788 <line:83:5, col:45> col:12 used operator int (String::*)() const 'String::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x556662eeb858 <line:84:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x556662eeb918 <line:85:5, col:29> col:17 operator! 'bool () const' inline
|-CXXMethodDecl 0x556662eeba08 <line:87:5, col:35> col:27 used begin 'String::const_iterator () const' inline
|-CXXMethodDecl 0x556662eebac8 <line:88:5, col:33> col:27 used end 'String::const_iterator () const' inline
|-CXXMethodDecl 0x556662eebc48 <line:90:5, col:35> col:17 used operator[] 'char (int) const' inline
| `-ParmVarDecl 0x556662eebb80 <col:28, col:32> col:32 i 'int'
|-CXXMethodDecl 0x556662eebd98 <line:91:5, col:27> col:17 at 'char (int) const' inline
| `-ParmVarDecl 0x556662eebd08 <col:20, col:24> col:24 i 'int'
|-CXXMethodDecl 0x556662eebe88 <line:92:5, col:25> col:17 front 'char () const' inline
|-CXXMethodDecl 0x556662eebf48 <line:93:5, col:24> col:17 back 'char () const' inline
|-CXXMethodDecl 0x556662eec198 <line:95:5, col:64> col:21 used hashcode 'uint32_t (const char *, const char *)' static
| |-ParmVarDecl 0x556662eec000 <col:30, col:42> col:42 begin 'const char *'
| `-ParmVarDecl 0x556662eec080 <col:49, col:61> col:61 end 'const char *'
|-CXXMethodDecl 0x556662eec3f8 <line:96:5, line:97:33> line:96:28 hashcode 'uint32_t (const unsigned char *, const unsigned char *)' static inline
| |-ParmVarDecl 0x556662eec260 <col:37, col:58> col:58 begin 'const unsigned char *'
| `-ParmVarDecl 0x556662eec2e0 <line:97:9, col:30> col:30 end 'const unsigned char *'
|-CXXMethodDecl 0x556662eec4c8 <line:98:5, col:32> col:21 hashcode 'uint32_t () const' inline
|-CXXMethodDecl 0x556662eec6d8 <line:100:5, col:65> col:19 substring 'String (const char *, const char *) const' inline
| |-ParmVarDecl 0x556662eec580 <col:29, col:41> col:41 begin 'const char *'
| `-ParmVarDecl 0x556662eec600 <col:48, col:60> col:60 end 'const char *'
|-CXXMethodDecl 0x556662eec8f8 <line:101:5, col:40> col:12 used substring 'String (int, int) const'
| |-ParmVarDecl 0x556662eec7a0 <col:22, col:26> col:26 pos 'int'
| `-ParmVarDecl 0x556662eec820 <col:31, col:35> col:35 len 'int'
|-CXXMethodDecl 0x556662eeca88 <line:102:5, col:38> col:19 substring 'String (int) const' inline
| `-ParmVarDecl 0x556662eec9c0 <col:29, col:33> col:33 pos 'int'
|-CXXMethodDecl 0x556662eecb78 <line:103:5, col:25> col:12 trim_space 'String () const'
|-CXXMethodDecl 0x556662eecce8 <line:105:5, col:41> col:17 equals 'bool (const String &) const' inline
| `-ParmVarDecl 0x556662eecc28 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x556662eecef8 <line:106:5, col:48> col:17 used equals 'bool (const char *, int) const' inline
| |-ParmVarDecl 0x556662eecda8 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x556662eece28 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x556662eed110 <line:107:5, col:63> col:23 used compare 'int (const String &, const String &)' static inline
| |-ParmVarDecl 0x556662eecfb8 <col:31, col:45> col:45 a 'const String &'
| `-ParmVarDecl 0x556662eed030 <col:48, col:62> col:62 b 'const String &'
|-CXXMethodDecl 0x556662eed2a0 <line:108:5, col:41> col:16 used compare 'int (const String &) const' inline
| `-ParmVarDecl 0x556662eed1d0 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x556662eed4c0 <line:109:5, col:41> col:9 used compare 'int (const char *, int) const'
| |-ParmVarDecl 0x556662eed360 <col:17, col:29> col:29 s 'const char *'
| `-ParmVarDecl 0x556662eed3e0 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x556662eed610 <line:110:5, col:46> col:17 starts_with 'bool (const String &) const' inline
| `-ParmVarDecl 0x556662eed580 <col:29, col:43> col:43 x 'const String &'
|-CXXMethodDecl 0x556662eed7e8 <line:111:5, col:46> col:10 used starts_with 'bool (const char *, int) const'
| |-ParmVarDecl 0x556662eed6d0 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x556662eed750 <col:37, col:41> col:41 len 'int'
|-CXXMethodDecl 0x556662eed938 <line:112:5, col:44> col:10 glob_match 'bool (const String &) const'
| `-ParmVarDecl 0x556662eed8a8 <col:21, col:35> col:35 pattern 'const String &'
|-CXXMethodDecl 0x556662eedb50 <line:125:5, col:42> col:9 find_left 'int (char, int) const'
| |-ParmVarDecl 0x556662eed9f0 <col:19, col:24> col:24 c 'char'
| `-ParmVarDecl 0x556662eeda70 <col:27, col:39> col:31 start 'int' cinit
|   `-IntegerLiteral 0x556662ef6ed0 <col:39> 'int' 0
|-CXXMethodDecl 0x556662eedd70 <line:126:5, col:51> col:9 find_left 'int (const String &, int) const'
| |-ParmVarDecl 0x556662eedc10 <col:19, col:33> col:33 x 'const String &'
| `-ParmVarDecl 0x556662eedc90 <col:36, col:48> col:40 start 'int' cinit
|   `-IntegerLiteral 0x556662ef6ef0 <col:48> 'int' 0
|-CXXMethodDecl 0x556662eedf50 <line:127:5, col:52> col:9 find_right 'int (char, int) const'
| |-ParmVarDecl 0x556662eede30 <col:20, col:25> col:25 c 'char'
| `-ParmVarDecl 0x556662eedeb0 <col:28, col:40> col:32 start 'int' cinit
|   `-IntegerLiteral 0x556662ef6f10 <col:40> 'int' 2147483647
|-CXXMethodDecl 0x556662eee020 <line:129:5, col:20> col:12 lower 'String () const'
|-CXXMethodDecl 0x556662eee0e0 <line:130:5, col:20> col:12 upper 'String () const'
|-CXXMethodDecl 0x556662eee1a0 <line:131:5, col:24> col:12 printable 'String () const'
|-CXXMethodDecl 0x556662eee260 <line:132:5, col:25> col:12 quoted_hex 'String () const'
|-CXXMethodDecl 0x556662eee320 <line:133:5, col:26> col:12 encode_json 'String () const'
|-CXXMethodDecl 0x556662eee4c8 <line:135:5, col:45> col:20 used operator= 'String &(const String &)' inline
| `-ParmVarDecl 0x556662eee3d0 <col:30, col:44> col:44 x 'const String &'
|-CXXMethodDecl 0x556662eee648 <line:137:5, col:40> col:20 used operator= 'String &(String &&)' inline
| `-ParmVarDecl 0x556662eee580 <col:30, col:39> col:39 x 'String &&'
|-CXXMethodDecl 0x556662eee820 <line:139:5, col:46> col:20 operator= 'String &(const char *)' inline
| `-ParmVarDecl 0x556662eee708 <col:30, col:42> col:42 cstr 'const char *'
|-CXXMethodDecl 0x556662eee998 <line:141:5, col:31> col:17 swap 'void (String &)' inline
| `-ParmVarDecl 0x556662eee8d8 <col:22, col:30> col:30 x 'String &'
|-CXXMethodDecl 0x556662eeeae0 <line:143:5, col:39> col:17 append 'void (const String &)' inline
| `-ParmVarDecl 0x556662eeea50 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x556662eeec30 <line:144:5, col:40> col:17 used append 'void (const char *)' inline
| `-ParmVarDecl 0x556662eeeba0 <col:24, col:36> col:36 cstr 'const char *'
|-CXXMethodDecl 0x556662eeee08 <line:145:5, col:46> col:17 used append 'void (const char *, int)' inline
| |-ParmVarDecl 0x556662eeecf0 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x556662eeed70 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x556662eeefe8 <line:146:5, col:59> col:17 append 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x556662eeeed0 <col:24, col:36> col:36 first 'const char *'
| `-ParmVarDecl 0x556662eeef50 <col:43, col:55> col:55 last 'const char *'
|-CXXMethodDecl 0x556662eef138 <line:147:5, col:30> col:17 append 'void (char)' inline
| `-ParmVarDecl 0x556662eef0a8 <col:24, col:29> col:29 c 'char'
|-CXXMethodDecl 0x556662eef348 <line:148:5, col:36> col:10 append_fill 'void (int, int)'
| |-ParmVarDecl 0x556662eef1f8 <col:22, col:26> col:26 c 'int'
| `-ParmVarDecl 0x556662eef278 <col:29, col:33> col:33 len 'int'
|-CXXMethodDecl 0x556662eef4a8 <line:149:5, col:39> col:11 used append_uninitialized 'char *(int)'
| `-ParmVarDecl 0x556662eef410 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x556662eef600 <line:150:5, col:68> col:18 append_garbage 'char *(int)' inline
| |-ParmVarDecl 0x556662eef568 <col:33, col:37> col:37 len 'int'
| `-DeprecatedAttr 0x556662eef6a8 <col:57> "" ""
|-CXXMethodDecl 0x556662eef7b8 <line:152:5, col:46> col:20 used operator+= 'String &(const String &)' inline
| `-ParmVarDecl 0x556662eef728 <col:31, col:45> col:45 x 'const String &'
|-CXXMethodDecl 0x556662eef908 <line:153:5, col:47> col:20 operator+= 'String &(const char *)' inline
| `-ParmVarDecl 0x556662eef878 <col:31, col:43> col:43 cstr 'const char *'
|-CXXMethodDecl 0x556662eefa88 <line:154:5, col:37> col:20 operator+= 'String &(char)' inline
| `-ParmVarDecl 0x556662eef9c0 <col:31, col:36> col:36 c 'char'
|-CXXMethodDecl 0x556662eefb50 <line:160:5, col:29> col:17 is_shared 'bool () const' inline
|-CXXMethodDecl 0x556662eefc10 <line:161:5, col:29> col:17 is_stable 'bool () const' inline
|-CXXMethodDecl 0x556662eefcd0 <line:163:5, col:60> col:19 unique 'String () const' inline
| `-DeprecatedAttr 0x556662eefd70 <col:49> "" ""
|-CXXMethodDecl 0x556662eefe00 <line:164:5, col:30> col:19 used unshared 'String () const' inline
|-CXXMethodDecl 0x556662eefec0 <line:165:5, col:29> col:19 compact 'String () const' inline
|-CXXMethodDecl 0x556662eeffb0 <line:167:5, col:24> col:11 mutable_data 'char *()'
|-CXXMethodDecl 0x556662ef0078 <line:168:5, col:25> col:11 mutable_c_str 'char *()'
|-CXXMethodDecl 0x556662ef0138 <line:170:5, col:52> col:33 make_out_of_memory 'const String &()' static inline
|-CXXMethodDecl 0x556662ef01f8 <line:171:5, col:33> col:17 out_of_memory 'bool () const' inline
|-CXXMethodDecl 0x556662ef02f0 <line:172:5, col:50> col:31 out_of_memory_data 'const char *()' static inline
|-CXXMethodDecl 0x556662ef03b8 <line:173:5, col:44> col:23 out_of_memory_length 'int ()' static inline
|-CXXMethodDecl 0x556662ef0480 <line:174:5, col:42> col:31 used empty_data 'const char *()' static inline
|-CXXMethodDecl 0x556662ef0658 <line:180:5, col:81> col:31 skip_utf8_char 'const char *(const char *, const char *)' static inline
| |-ParmVarDecl 0x556662ef0538 <col:46, col:58> col:58 first 'const char *'
| `-ParmVarDecl 0x556662ef05b8 <col:65, col:77> col:77 last 'const char *'
|-CXXMethodDecl 0x556662ef0880 <line:181:5, line:182:38> line:181:33 used skip_utf8_char 'const unsigned char *(const unsigned char *, const unsigned char *)' static
| |-ParmVarDecl 0x556662ef0720 <col:48, col:69> col:69 first 'const unsigned char *'
| `-ParmVarDecl 0x556662ef07a0 <line:182:13, col:34> col:34 last 'const unsigned char *'
|-VarDecl 0x556662ef0990 <line:184:5, col:35> col:23 used bool_data 'const char [11]' static
|-AccessSpecDecl 0x556662ef09f8 <line:186:3, col:10> col:3 private
|-CXXRecordDecl 0x556662ef0a20 <line:189:5, line:198:5> line:189:12 referenced struct memo_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x556662ef0b38 <col:5, col:12> col:12 implicit struct memo_t
| |-FieldDecl 0x556662ef0bd8 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
| |-FieldDecl 0x556662ef0c38 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
| |-FieldDecl 0x556662ef0c98 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
| `-FieldDecl 0x556662ef0d48 <line:197:2, col:18> col:7 real_data 'char [8]'
|-EnumDecl 0x556662ef0db0 <line:200:5, line:202:5> line:200:5
| `-EnumConstantDecl 0x556662ef0fe8 <line:201:2, col:32> col:2 referenced MEMO_SPACE 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)'
|   `-ImplicitCastExpr 0x556662ef1038 <col:15, col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x556662ef0fc8 <col:15, col:32> 'unsigned long' Int: 12
|       `-BinaryOperator 0x556662ef0ed8 <col:15, col:32> 'unsigned long' '-'
|         |-UnaryExprOrTypeTraitExpr 0x556662ef0e80 <col:15, col:28> 'unsigned long' sizeof 'String::memo_t'
|         `-ImplicitCastExpr 0x556662ef0ec0 <col:32> 'unsigned long' <IntegralCast>
|           `-IntegerLiteral 0x556662ef0ea0 <col:32> 'int' 8
|-CXXRecordDecl 0x556662ef1050 <line:204:5, line:208:5> line:204:12 referenced struct rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x556662ef1168 <col:5, col:12> col:12 implicit struct rep_t
| |-FieldDecl 0x556662ef1210 <line:205:2, col:14> col:14 referenced data 'const char *'
| |-FieldDecl 0x556662ef1278 <line:206:2, col:6> col:6 referenced length 'int'
| |-FieldDecl 0x556662ef1308 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
| |-CXXConstructorDecl 0x556662ef73a0 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x556662ef77d8 <col:12>
| |-CXXConstructorDecl 0x556662ef74a8 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x556662ef75b8 <col:12> col:12 used 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x556662ef1210 'data' 'const char *'
| | | `-ImplicitCastExpr 0x556662ef9d60 <col:12> 'const char *' <LValueToRValue>
| | |   `-MemberExpr 0x556662ef9d30 <col:12> 'const char *const' lvalue .data 0x556662ef1210
| | |     `-DeclRefExpr 0x556662ef9d10 <col:12> 'const String::rep_t' lvalue ParmVar 0x556662ef75b8 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x556662ef1278 'length' 'int'
| | | `-ImplicitCastExpr 0x556662ef9df0 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x556662ef9dc0 <col:12> 'const int' lvalue .length 0x556662ef1278
| | |     `-DeclRefExpr 0x556662ef9da0 <col:12> 'const String::rep_t' lvalue ParmVar 0x556662ef75b8 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x556662ef1308 'memo' 'String::memo_t *'
| | | `-ImplicitCastExpr 0x556662ef9e80 <col:12> 'String::memo_t *' <LValueToRValue>
| | |   `-MemberExpr 0x556662ef9e50 <col:12> 'String::memo_t *const' lvalue .memo 0x556662ef1308
| | |     `-DeclRefExpr 0x556662ef9e30 <col:12> 'const String::rep_t' lvalue ParmVar 0x556662ef75b8 '' 'const String::rep_t &'
| | `-CompoundStmt 0x556662ef9ed8 <col:12>
| |-CXXConstructorDecl 0x556662ef7658 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x556662ef7658
| | `-ParmVarDecl 0x556662ef7768 <col:12> col:12 'String::rep_t &&'
| |-CXXDestructorDecl 0x556662efccc0 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x556662f086d8 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x556662f087e8 <col:12> col:12 used 'const String::rep_t &'
| | `-CompoundStmt 0x556662f08d00 <col:12>
| |   |-BinaryOperator 0x556662f08b18 <col:12> 'const char *' lvalue '='
| |   | |-MemberExpr 0x556662f08ad0 <col:12> 'const char *' lvalue ->data 0x556662ef1210
| |   | | `-CXXThisExpr 0x556662f08ac0 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x556662f08b00 <col:12> 'const char *' <LValueToRValue>
| |   |   `-MemberExpr 0x556662f08a90 <col:12> 'const char *const' lvalue .data 0x556662ef1210
| |   |     `-DeclRefExpr 0x556662f08a70 <col:12> 'const String::rep_t' lvalue ParmVar 0x556662f087e8 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x556662f08be0 <col:12> 'int' lvalue '='
| |   | |-MemberExpr 0x556662f08b98 <col:12> 'int' lvalue ->length 0x556662ef1278
| |   | | `-CXXThisExpr 0x556662f08b88 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x556662f08bc8 <col:12> 'int' <LValueToRValue>
| |   |   `-MemberExpr 0x556662f08b58 <col:12> 'const int' lvalue .length 0x556662ef1278
| |   |     `-DeclRefExpr 0x556662f08b38 <col:12> 'const String::rep_t' lvalue ParmVar 0x556662f087e8 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x556662f08ca8 <col:12> 'String::memo_t *' lvalue '='
| |   | |-MemberExpr 0x556662f08c60 <col:12> 'String::memo_t *' lvalue ->memo 0x556662ef1308
| |   | | `-CXXThisExpr 0x556662f08c50 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x556662f08c90 <col:12> 'String::memo_t *' <LValueToRValue>
| |   |   `-MemberExpr 0x556662f08c20 <col:12> 'String::memo_t *const' lvalue .memo 0x556662ef1308
| |   |     `-DeclRefExpr 0x556662f08c00 <col:12> 'const String::rep_t' lvalue ParmVar 0x556662f087e8 '' 'const String::rep_t &'
| |   `-ReturnStmt 0x556662f08cf0 <col:12>
| |     `-UnaryOperator 0x556662f08cd8 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x556662f08cc8 <col:12> 'String::rep_t *' this
| `-CXXMethodDecl 0x556662f08858 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x556662f08858
|   `-ParmVarDecl 0x556662f08968 <col:12> col:12 'String::rep_t &&'
|-FieldDecl 0x556662ef1380 <line:211:5, col:19> col:19 referenced _r 'String::rep_t' mutable
|-CXXMethodDecl 0x556662ef15c8 <line:256:5, line:261:5> line:256:17 used assign_memo 'void (const char *, int, String::memo_t *) const' inline
| |-ParmVarDecl 0x556662ef13e8 <col:29, col:41> col:41 used data 'const char *'
| |-ParmVarDecl 0x556662ef1468 <col:47, col:51> col:51 used length 'int'
| |-ParmVarDecl 0x556662ef14e0 <col:59, col:67> col:67 used memo 'String::memo_t *'
| `-CompoundStmt 0x556662ef7360 <col:79, line:261:5>
|   |-BinaryOperator 0x556662ef6fd8 <line:257:2, col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x556662ef6f70 <col:2, col:5> 'const char *' lvalue .data 0x556662ef1210
|   | | `-MemberExpr 0x556662ef6f40 <col:2> 'String::rep_t' lvalue ->_r 0x556662ef1380
|   | |   `-CXXThisExpr 0x556662ef6f30 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x556662ef6fc0 <col:12> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x556662ef6fa0 <col:12> 'const char *' lvalue ParmVar 0x556662ef13e8 'data' 'const char *'
|   |-BinaryOperator 0x556662ef70a0 <line:258:2, col:14> 'int' lvalue '='
|   | |-MemberExpr 0x556662ef7038 <col:2, col:5> 'int' lvalue .length 0x556662ef1278
|   | | `-MemberExpr 0x556662ef7008 <col:2> 'String::rep_t' lvalue ->_r 0x556662ef1380
|   | |   `-CXXThisExpr 0x556662ef6ff8 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x556662ef7088 <col:14> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x556662ef7068 <col:14> 'int' lvalue ParmVar 0x556662ef1468 'length' 'int'
|   `-IfStmt 0x556662ef7348 <line:259:2, line:260:41>
|     |-ImplicitCastExpr 0x556662ef71c0 <line:259:6, col:21> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x556662ef71a8 <col:6, col:21> 'String::memo_t *' <LValueToRValue>
|     |   `-ParenExpr 0x556662ef7188 <col:6, col:21> 'String::memo_t *' lvalue
|     |     `-BinaryOperator 0x556662ef7168 <col:7, col:17> 'String::memo_t *' lvalue '='
|     |       |-MemberExpr 0x556662ef7100 <col:7, col:10> 'String::memo_t *' lvalue .memo 0x556662ef1308
|     |       | `-MemberExpr 0x556662ef70d0 <col:7> 'String::rep_t' lvalue ->_r 0x556662ef1380
|     |       |   `-CXXThisExpr 0x556662ef70c0 <col:7> 'const String *' implicit this
|     |       `-ImplicitCastExpr 0x556662ef7150 <col:17> 'String::memo_t *' <LValueToRValue>
|     |         `-DeclRefExpr 0x556662ef7130 <col:17> 'String::memo_t *' lvalue ParmVar 0x556662ef14e0 'memo' 'String::memo_t *'
|     `-CallExpr 0x556662ef7320 <line:260:6, col:41> 'void'
|       |-ImplicitCastExpr 0x556662ef7308 <col:6, col:23> 'void (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x556662ef7210 <col:6, col:23> 'void (volatile uint32_t &)' lvalue CXXMethod 0x556662edfff8 'inc' 'void (volatile uint32_t &)'
|       `-MemberExpr 0x556662ef7278 <col:27, col:33> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x556662ef0bd8
|         `-ImplicitCastExpr 0x556662ef7260 <col:27> 'String::memo_t *' <LValueToRValue>
|           `-DeclRefExpr 0x556662ef7240 <col:27> 'String::memo_t *' lvalue ParmVar 0x556662ef14e0 'memo' 'String::memo_t *'
|-CXXConstructorDecl 0x556662ef1878 <line:263:5, line:265:5> line:263:12 used String 'void (const char *, int, String::memo_t *)' inline
| |-ParmVarDecl 0x556662ef1698 <col:19, col:31> col:31 used data 'const char *'
| |-ParmVarDecl 0x556662ef1718 <col:37, col:41> col:41 used length 'int'
| |-ParmVarDecl 0x556662ef1790 <col:49, col:57> col:57 used memo 'String::memo_t *'
| |-CXXCtorInitializer Field 0x556662ef1380 '_r' 'String::rep_t'
| | `-CXXConstructExpr 0x556662ef77e8 <col:12> 'String::rep_t' 'void () noexcept'
| `-CompoundStmt 0x556662ef7978 <col:63, line:265:5>
|   `-CXXMemberCallExpr 0x556662ef78e0 <line:264:2, col:32> 'void'
|     |-MemberExpr 0x556662ef7850 <col:2> '<bound member function type>' ->assign_memo 0x556662ef15c8
|     | `-ImplicitCastExpr 0x556662ef7918 <col:2> 'const String *' <NoOp>
|     |   `-CXXThisExpr 0x556662ef7840 <col:2> 'String *' implicit this
|     |-ImplicitCastExpr 0x556662ef7930 <col:14> 'const char *' <LValueToRValue>
|     | `-DeclRefExpr 0x556662ef7880 <col:14> 'const char *' lvalue ParmVar 0x556662ef1698 'data' 'const char *'
|     |-ImplicitCastExpr 0x556662ef7948 <col:20> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x556662ef78a0 <col:20> 'int' lvalue ParmVar 0x556662ef1718 'length' 'int'
|     `-ImplicitCastExpr 0x556662ef7960 <col:28> 'String::memo_t *' <LValueToRValue>
|       `-DeclRefExpr 0x556662ef78c0 <col:28> 'String::memo_t *' lvalue ParmVar 0x556662ef1790 'memo' 'String::memo_t *'
|-CXXMethodDecl 0x556662ef1a08 <line:267:5, line:269:5> line:267:17 used assign 'void (const String &) const' inline
| |-ParmVarDecl 0x556662ef1948 <col:24, col:38> col:38 used x 'const String &'
| `-CompoundStmt 0x556662ef7bd0 <col:47, line:269:5>
|   `-CXXMemberCallExpr 0x556662ef7b50 <line:268:2, col:47> 'void'
|     |-MemberExpr 0x556662ef79a0 <col:2> '<bound member function type>' ->assign_memo 0x556662ef15c8
|     | `-CXXThisExpr 0x556662ef7990 <col:2> 'const String *' implicit this
|     |-ImplicitCastExpr 0x556662ef7b88 <col:14, col:19> 'const char *' <LValueToRValue>
|     | `-MemberExpr 0x556662ef7a20 <col:14, col:19> 'const char *' lvalue .data 0x556662ef1210
|     |   `-MemberExpr 0x556662ef79f0 <col:14, col:16> 'String::rep_t' lvalue ._r 0x556662ef1380
|     |     `-DeclRefExpr 0x556662ef79d0 <col:14> 'const String' lvalue ParmVar 0x556662ef1948 'x' 'const String &'
|     |-ImplicitCastExpr 0x556662ef7ba0 <col:25, col:30> 'int' <LValueToRValue>
|     | `-MemberExpr 0x556662ef7aa0 <col:25, col:30> 'int' lvalue .length 0x556662ef1278
|     |   `-MemberExpr 0x556662ef7a70 <col:25, col:27> 'String::rep_t' lvalue ._r 0x556662ef1380
|     |     `-DeclRefExpr 0x556662ef7a50 <col:25> 'const String' lvalue ParmVar 0x556662ef1948 'x' 'const String &'
|     `-ImplicitCastExpr 0x556662ef7bb8 <col:38, col:43> 'String::memo_t *' <LValueToRValue>
|       `-MemberExpr 0x556662ef7b20 <col:38, col:43> 'String::memo_t *' lvalue .memo 0x556662ef1308
|         `-MemberExpr 0x556662ef7af0 <col:38, col:40> 'String::rep_t' lvalue ._r 0x556662ef1380
|           `-DeclRefExpr 0x556662ef7ad0 <col:38> 'const String' lvalue ParmVar 0x556662ef1948 'x' 'const String &'
|-CXXMethodDecl 0x556662ef1ad0 <line:271:5, line:278:5> line:271:17 used deref 'void () const' inline
| `-CompoundStmt 0x556662ef8590 <col:31, line:278:5>
|   `-IfStmt 0x556662ef8578 <line:272:2, line:277:2>
|     |-ImplicitCastExpr 0x556662ef7c70 <line:272:6, col:9> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x556662ef7c58 <col:6, col:9> 'String::memo_t *' <LValueToRValue>
|     |   `-MemberExpr 0x556662ef7c28 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x556662ef1308
|     |     `-MemberExpr 0x556662ef7bf8 <col:6> 'String::rep_t' lvalue ->_r 0x556662ef1380
|     |       `-CXXThisExpr 0x556662ef7be8 <col:6> 'const String *' implicit this
|     `-CompoundStmt 0x556662ef8550 <col:15, line:277:2>
|       |-ParenExpr 0x556662ef8120 <line:273:6, col:166> 'void'
|       | `-ConditionalOperator 0x556662ef80f0 <col:7, col:165> 'void'
|       |   |-CXXStaticCastExpr 0x556662ef7d80 <col:7, col:44> 'bool' static_cast<_Bool> <NoOp>
|       |   | `-ImplicitCastExpr 0x556662ef7d68 <col:27, col:36> 'bool' <IntegralToBoolean> part_of_explicit_cast
|       |   |   `-ImplicitCastExpr 0x556662ef7d50 <col:27, col:36> 'uint32_t':'unsigned int' <LValueToRValue> part_of_explicit_cast
|       |   |     `-MemberExpr 0x556662ef7d10 <col:27, col:36> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x556662ef0bd8
|       |   |       `-ImplicitCastExpr 0x556662ef7cf8 <col:27, col:30> 'String::memo_t *' <LValueToRValue>
|       |   |         `-MemberExpr 0x556662ef7cc8 <col:27, col:30> 'String::memo_t *' lvalue .memo 0x556662ef1308
|       |   |           `-MemberExpr 0x556662ef7c98 <col:27> 'String::rep_t' lvalue ->_r 0x556662ef1380
|       |   |             `-CXXThisExpr 0x556662ef7c88 <col:27> 'const String *' implicit this
|       |   |-CXXFunctionalCastExpr 0x556662ef7de0 <col:48, col:55> 'void' functional cast to void <ToVoid>
|       |   | `-IntegerLiteral 0x556662ef7dc0 <col:54> 'int' 0
|       |   `-CallExpr 0x556662ef8050 <col:59, col:165> 'void'
|       |     |-ImplicitCastExpr 0x556662ef8038 <col:59> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x556662ef7fb8 <col:59> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x556662c57250 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|       |     |-ImplicitCastExpr 0x556662ef8090 <col:74> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x556662ef7ec8 <col:74> 'const char [18]' lvalue "_r.memo->refcount"
|       |     |-ImplicitCastExpr 0x556662ef80a8 <col:95> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x556662ef7ef8 <col:95> 'const char [29]' lvalue "../dummy_inc/click/string.hh"
|       |     |-ImplicitCastExpr 0x556662ef80c0 <col:127> 'unsigned int' <IntegralCast>
|       |     | `-IntegerLiteral 0x556662ef7f30 <col:127> 'int' 273
|       |     `-ImplicitCastExpr 0x556662ef80d8 <col:132, col:146> 'const char *' <ArrayToPointerDecay>
|       |       `-UnaryOperator 0x556662ef7fa0 <col:132, col:146> 'const char [27]' lvalue prefix '__extension__' cannot overflow
|       |         `-PredefinedExpr 0x556662ef7f88 <col:146> 'const char [27]' lvalue __PRETTY_FUNCTION__
|       |           `-StringLiteral 0x556662ef7f50 <col:146> 'const char [27]' lvalue "void String::deref() const"
|       |-IfStmt 0x556662ef8470 <line:274:6, line:275:22>
|       | |-CallExpr 0x556662ef8330 <line:274:10, col:57> 'bool'
|       | | |-ImplicitCastExpr 0x556662ef8318 <col:10, col:27> 'bool (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | | | `-DeclRefExpr 0x556662ef8290 <col:10, col:27> 'bool (volatile uint32_t &)' lvalue CXXMethod 0x556662ee1440 'dec_and_test' 'bool (volatile uint32_t &)'
|       | | `-MemberExpr 0x556662ef8260 <col:40, col:49> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x556662ef0bd8
|       | |   `-ImplicitCastExpr 0x556662ef8248 <col:40, col:43> 'String::memo_t *' <LValueToRValue>
|       | |     `-MemberExpr 0x556662ef8218 <col:40, col:43> 'String::memo_t *' lvalue .memo 0x556662ef1308
|       | |       `-MemberExpr 0x556662ef81e8 <col:40> 'String::rep_t' lvalue ->_r 0x556662ef1380
|       | |         `-CXXThisExpr 0x556662ef81d8 <col:40> 'const String *' implicit this
|       | `-CallExpr 0x556662ef8430 <line:275:3, col:22> 'void'
|       |   |-ImplicitCastExpr 0x556662ef8418 <col:3> 'void (*)(String::memo_t *)' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x556662ef8358 <col:3> 'void (String::memo_t *)' lvalue CXXMethod 0x556662ef62b0 'delete_memo' 'void (String::memo_t *)'
|       |   `-ImplicitCastExpr 0x556662ef8458 <col:15, col:18> 'String::memo_t *' <LValueToRValue>
|       |     `-MemberExpr 0x556662ef83b8 <col:15, col:18> 'String::memo_t *' lvalue .memo 0x556662ef1308
|       |       `-MemberExpr 0x556662ef8388 <col:15> 'String::rep_t' lvalue ->_r 0x556662ef1380
|       |         `-CXXThisExpr 0x556662ef8378 <col:15> 'const String *' implicit this
|       `-BinaryOperator 0x556662ef8530 <line:276:6, col:16> 'String::memo_t *' lvalue '='
|         |-MemberExpr 0x556662ef84c8 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x556662ef1308
|         | `-MemberExpr 0x556662ef8498 <col:6> 'String::rep_t' lvalue ->_r 0x556662ef1380
|         |   `-CXXThisExpr 0x556662ef8488 <col:6> 'const String *' implicit this
|         `-ImplicitCastExpr 0x556662ef8518 <col:16> 'String::memo_t *' <NullToPointer>
|           `-IntegerLiteral 0x556662ef84f8 <col:16> 'int' 0
|-CXXMethodDecl 0x556662ef1d68 <line:280:5, col:56> col:10 used assign 'void (const char *, int, bool)'
| |-ParmVarDecl 0x556662ef1b88 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x556662ef1c08 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x556662ef1c80 <col:41, col:46> col:46 need_deref 'bool'
|-CXXMethodDecl 0x556662ef1e40 <line:281:5, col:31> col:10 assign_out_of_memory 'void ()'
|-CXXMethodDecl 0x556662ef2090 <line:282:5, col:53> col:10 used append 'void (const char *, int, String::memo_t *)'
| |-ParmVarDecl 0x556662ef1ef8 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x556662ef1f78 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x556662ef1ff0 <col:41, col:49> col:49 memo 'String::memo_t *'
|-CXXMethodDecl 0x556662ef2278 <line:283:5, col:58> col:19 used hard_make_stable 'String (const char *, int)' static
| |-ParmVarDecl 0x556662ef2160 <col:36, col:48> col:48 s 'const char *'
| `-ParmVarDecl 0x556662ef21e0 <col:51, col:55> col:55 len 'int'
|-CXXMethodDecl 0x556662ef2378 <line:284:5, line:286:5> line:284:27 used absent_memo 'String::memo_t *()' static inline
| `-CompoundStmt 0x556662ef8668 <col:41, line:286:5>
|   `-ReturnStmt 0x556662ef8658 <line:285:2, col:48>
|     `-CXXReinterpretCastExpr 0x556662ef8628 <col:9, col:48> 'String::memo_t *' reinterpret_cast<struct String::memo_t *> <IntegralToPointer>
|       `-CXXFunctionalCastExpr 0x556662ef85f0 <col:36, col:47> 'uintptr_t':'unsigned long' functional cast to uintptr_t <NoOp>
|         `-ImplicitCastExpr 0x556662ef85d8 <col:46> 'uintptr_t':'unsigned long' <IntegralCast> part_of_explicit_cast
|           `-IntegerLiteral 0x556662ef85b8 <col:46> 'int' 1
|-CXXMethodDecl 0x556662ef2618 <line:287:5, col:68> col:20 create_memo 'String::memo_t *(char *, int, int)' static
| |-ParmVarDecl 0x556662ef2430 <col:32, col:38> col:38 space 'char *'
| |-ParmVarDecl 0x556662ef24b0 <col:45, col:49> col:49 dirty 'int'
| `-ParmVarDecl 0x556662ef2530 <col:56, col:60> col:60 capacity 'int'
|-CXXMethodDecl 0x556662ef62b0 <line:288:5, col:41> col:17 used delete_memo 'void (String::memo_t *)' static
| `-ParmVarDecl 0x556662ef26e0 <col:29, col:37> col:37 memo 'String::memo_t *'
|-CXXMethodDecl 0x556662ef6380 <line:289:5, col:30> col:17 hard_c_str 'const char *() const'
|-CXXMethodDecl 0x556662ef6550 <line:290:5, col:46> col:10 used hard_equals 'bool (const char *, int) const'
| |-ParmVarDecl 0x556662ef6438 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x556662ef64b8 <col:37, col:41> col:41 len 'int'
|-VarDecl 0x556662ef6610 <line:292:5, col:23> col:23 used null_data 'const char' static
|-VarDecl 0x556662ef66d8 <line:293:5, col:34> col:23 used oom_data 'const char [15]' static
|-VarDecl 0x556662ef67d8 <line:294:5, col:34> col:23 int_data 'const char [20]' static
|-VarDecl 0x556662ef6850 <line:295:5, col:24> col:24 used null_string_rep 'const String::rep_t' static
|-VarDecl 0x556662ef68c8 <line:296:5, col:24> col:24 used oom_string_rep 'const String::rep_t' static
|-EnumDecl 0x556662ef6930 <line:297:5, col:25> col:5
| `-EnumConstantDecl 0x556662ef6a30 <col:12, col:22> col:12 referenced oom_len 'String::(anonymous enum at ../dummy_inc/click/string.hh:297:5)'
|   `-ImplicitCastExpr 0x556662ef6a80 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x556662ef6a10 <col:22> 'int' Int: 14
|       `-IntegerLiteral 0x556662ef69f0 <col:22> 'int' 14
|-CXXMethodDecl 0x556662ef6c98 <line:299:5, col:46> col:19 make_claim 'String (char *, int, int)' static
| |-ParmVarDecl 0x556662ef6ab0 <col:30, col:35> col:36 'char *'
| |-ParmVarDecl 0x556662ef6b30 <col:38> col:41 'int'
| `-ParmVarDecl 0x556662ef6bb0 <col:43> col:46 'int'
|-FriendDecl 0x556662ef6da0 <line:301:5, col:19> col:12 'struct rep_t':'String::rep_t'
`-FriendDecl 0x556662ef6e30 <line:302:5, col:18> col:12 'class StringAccum':'StringAccum'

Layout: <CGRecordLayout
  LLVMType:%class.String = type { %"struct.String::rep_t" }
  NonVirtualBaseLLVMType:%class.String = type { %"struct.String::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55666321b010 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'typed_array_memory<String>'
|-CXXRecordDecl 0x55666321b1e8 prev 0x55666321b010 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55666321b278 <col:46, col:52> col:46 public
|-TypedefDecl 0x55666321b2a0 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x556662bb7370 'int'
|-TypedefDecl 0x55666321cc00 <line:13:5, col:31> col:31 type 'typename typed_array_memory<String>::type':'String'
| `-ElaboratedType 0x55666321cbb0 'typename typed_array_memory<String>::type' sugar
|   `-TypedefType 0x55666321cb90 'typed_array_memory<String>::type' sugar
|     |-Typedef 0x55666321b4b8 'type'
|     `-SubstTemplateTypeParmType 0x55666321b480 'String' sugar
|       |-TemplateTypeParmType 0x556662eab830 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x556662eab7e0 'T'
|       `-RecordType 0x556662ee8020 'String'
|         `-CXXRecord 0x556662ee7f90 'String'
|-TypedefDecl 0x55666321ccb8 <line:14:5, col:19> col:19 iterator 'vector_memory<typed_array_memory<String> >::type *'
| `-PointerType 0x55666321cc80 'vector_memory<typed_array_memory<String> >::type *'
|   `-TypedefType 0x55666321cc60 'vector_memory<typed_array_memory<String> >::type' sugar
|     |-Typedef 0x55666321cc00 'type'
|     `-ElaboratedType 0x55666321cbb0 'typename typed_array_memory<String>::type' sugar
|       `-TypedefType 0x55666321cb90 'typed_array_memory<String>::type' sugar
|         |-Typedef 0x55666321b4b8 'type'
|         `-SubstTemplateTypeParmType 0x55666321b480 'String' sugar
|           |-TemplateTypeParmType 0x556662eab830 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x556662eab7e0 'T'
|           `-RecordType 0x556662ee8020 'String'
|             `-CXXRecord 0x556662ee7f90 'String'
|-CXXMethodDecl 0x55666321ce38 <line:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<typed_array_memory<String> >::type *) const' inline
| `-ParmVarDecl 0x55666321cd48 <col:36, col:48> col:48 argp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXConstructorDecl 0x55666321cf28 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55666321d008 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x55666321d008
|-CXXMethodDecl 0x55666321d2d8 <line:25:5, col:43> col:10 assign 'void (const vector_memory<typed_array_memory<String> > &)'
| `-ParmVarDecl 0x55666321d1e0 <col:17, col:42> col:42 x 'const vector_memory<typed_array_memory<String> > &'
|-CXXMethodDecl 0x55666321d518 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x55666321d390 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55666321d408 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55666321d6e8 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x55666321d5d8 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55666321d650 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55666321d848 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<typed_array_memory<String> >::iterator ()'
|-CXXMethodDecl 0x55666321d918 <line:31:5, line:33:5> line:31:14 end 'vector_memory<typed_array_memory<String> >::iterator ()'
|-CXXMethodDecl 0x55666321db68 <line:34:5, col:48> col:14 insert 'vector_memory<typed_array_memory<String> >::iterator (vector_memory<typed_array_memory<String> >::iterator, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x55666321d9d8 <col:21, col:30> col:30 it 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
| `-ParmVarDecl 0x55666321da50 <col:34, col:46> col:46 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55666321ddc8 <line:35:5, col:42> col:14 erase 'vector_memory<typed_array_memory<String> >::iterator (vector_memory<typed_array_memory<String> >::iterator, vector_memory<typed_array_memory<String> >::iterator)'
| |-ParmVarDecl 0x55666321dc38 <col:20, col:29> col:29 a 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
| `-ParmVarDecl 0x55666321dcb0 <col:32, col:41> col:41 b 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55666321df88 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<typed_array_memory<String> >::type *)' inline
| `-ParmVarDecl 0x55666321de98 <col:27, col:39> col:39 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55666321e148 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<typed_array_memory<String> >::type *)' inline
| `-ParmVarDecl 0x55666321e050 <col:37, col:43> col:43 vp 'vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55666321e200 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55666321e2b0 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55666321e4e8 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x55666321e360 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55666321e3d8 <col:45, col:57> col:57 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55666321e788 <line:66:5, col:35> col:10 swap 'void (vector_memory<typed_array_memory<String> > &)'
| `-ParmVarDecl 0x55666321e690 <col:15, col:34> col:34 x 'vector_memory<typed_array_memory<String> > &'
|-FieldDecl 0x55666321e850 <line:68:5, col:11> col:11 l_ 'vector_memory<typed_array_memory<String> >::type *'
|-FieldDecl 0x55666321e8a0 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55666321e8f0 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory = type { %class.String*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory = type { %class.String*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55666311f7c0 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'String'
|-CXXRecordDecl 0x556663219db8 prev 0x55666311f7c0 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55666321af80 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<String>::type':'typed_array_memory<String>'
| `-ElaboratedType 0x55666321af30 'typename array_memory<String>::type' sugar
|   `-TypedefType 0x55666321af10 'conditional<false, sized_array_memory<24>, typed_array_memory<String> >::type' sugar
|     |-Typedef 0x55666321adc0 'type'
|     `-SubstTemplateTypeParmType 0x55666321ac50 'typed_array_memory<String>' sugar
|       |-TemplateTypeParmType 0x556662e815e0 'F' dependent depth 0 index 1
|       | `-TemplateTypeParm 0x556662e81588 'F'
|       `-RecordType 0x55666321a8b0 'typed_array_memory<String>'
|         `-ClassTemplateSpecialization 0x55666321a7d0 'typed_array_memory'
|-FieldDecl 0x55666321e940 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<String>::array_memory_type>':'vector_memory<typed_array_memory<String> >' mutable
|-AccessSpecDecl 0x55666321e990 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55666321e9c8 <line:118:5, col:15> col:15 value_type 'String':'String'
| `-SubstTemplateTypeParmType 0x556663219e50 'String' sugar
|   |-TemplateTypeParmType 0x556662eb8b50 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x556662eb8af8 'T'
|   `-RecordType 0x556662ee8020 'String'
|     `-CXXRecord 0x556662ee7f90 'String'
|-TypedefDecl 0x55666321ea58 <line:119:5, col:16> col:16 reference 'String &'
| `-LValueReferenceType 0x55666321ea20 'String &'
|   `-SubstTemplateTypeParmType 0x556663219e50 'String' sugar
|     |-TemplateTypeParmType 0x556662eb8b50 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x556662eb8af8 'T'
|     `-RecordType 0x556662ee8020 'String'
|       `-CXXRecord 0x556662ee7f90 'String'
|-TypedefDecl 0x55666321eae8 <line:120:5, col:22> col:22 const_reference 'const String &'
| `-LValueReferenceType 0x55666321eab0 'const String &'
|   `-QualType 0x556663219e51 'const String' const
|     `-SubstTemplateTypeParmType 0x556663219e50 'String' sugar
|       |-TemplateTypeParmType 0x556662eb8b50 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x556662eb8af8 'T'
|       `-RecordType 0x556662ee8020 'String'
|         `-CXXRecord 0x556662ee7f90 'String'
|-TypedefDecl 0x55666321eb78 <line:121:5, col:16> col:16 pointer 'String *'
| `-PointerType 0x55666321eb40 'String *'
|   `-SubstTemplateTypeParmType 0x556663219e50 'String' sugar
|     |-TemplateTypeParmType 0x556662eb8b50 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x556662eb8af8 'T'
|     `-RecordType 0x556662ee8020 'String'
|       `-CXXRecord 0x556662ee7f90 'String'
|-TypedefDecl 0x55666321ec08 <line:122:5, col:22> col:22 const_pointer 'const String *'
| `-PointerType 0x55666321ebd0 'const String *'
|   `-QualType 0x556663219e51 'const String' const
|     `-SubstTemplateTypeParmType 0x556663219e50 'String' sugar
|       |-TemplateTypeParmType 0x556662eb8b50 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x556662eb8af8 'T'
|       `-RecordType 0x556662ee8020 'String'
|         `-CXXRecord 0x556662ee7f90 'String'
|-TypedefDecl 0x55666321f860 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<String>::type':'const String &'
| `-ElaboratedType 0x55666321f810 'typename fast_argument<String>::type' sugar
|   `-TypedefType 0x55666321f7f0 'fast_argument<String, true>::type' sugar
|     |-Typedef 0x55666321f728 'type'
|     `-LValueReferenceType 0x55666321f6f0 'const String &'
|       `-QualType 0x55666321f491 'const String' const
|         `-SubstTemplateTypeParmType 0x55666321f490 'String' sugar
|           |-TemplateTypeParmType 0x556662e8b530 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x556662e8b4d8 'T'
|           `-RecordType 0x556662ee8020 'String'
|             `-CXXRecord 0x556662ee7f90 'String'
|-TypedefDecl 0x55666321f8c8 <line:126:5, col:22> col:22 const_access_type 'const String &'
| `-LValueReferenceType 0x55666321eab0 'const String &'
|   `-QualType 0x556663219e51 'const String' const
|     `-SubstTemplateTypeParmType 0x556663219e50 'String' sugar
|       |-TemplateTypeParmType 0x556662eb8b50 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x556662eb8af8 'T'
|       `-RecordType 0x556662ee8020 'String'
|         `-CXXRecord 0x556662ee7f90 'String'
|-TypedefDecl 0x55666321f920 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x556662bb7370 'int'
|-TypedefDecl 0x55666321f988 <line:130:5, col:16> col:16 iterator 'String *'
| `-PointerType 0x55666321eb40 'String *'
|   `-SubstTemplateTypeParmType 0x556663219e50 'String' sugar
|     |-TemplateTypeParmType 0x556662eb8b50 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x556662eb8af8 'T'
|     `-RecordType 0x556662ee8020 'String'
|       `-CXXRecord 0x556662ee7f90 'String'
|-TypedefDecl 0x55666321f9f0 <line:131:5, col:22> col:22 const_iterator 'const String *'
| `-PointerType 0x55666321ebd0 'const String *'
|   `-QualType 0x556663219e51 'const String' const
|     `-SubstTemplateTypeParmType 0x556663219e50 'String' sugar
|       |-TemplateTypeParmType 0x556662eb8b50 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x556662eb8af8 'T'
|       `-RecordType 0x556662ee8020 'String'
|         `-CXXRecord 0x556662ee7f90 'String'
|-EnumDecl 0x55666321fa48 <line:134:5> col:5
| `-EnumConstantDecl 0x55666321fb40 <col:12, col:40> col:12 RESERVE_GROW 'Vector<String>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55666321fb20 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x556662eba1d8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x556662eba1b0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x556662eba190 <col:40> 'int' 1
|-CXXConstructorDecl 0x55666321fbc8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55666321fe58 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x55666321fc80 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55666321fd20 <col:41, col:61> col:61 v 'Vector<String>::value_argument_type':'const String &'
|-CXXConstructorDecl 0x556663220948 <line:139:5, col:37> col:12 Vector 'void (const Vector<String> &)' inline
| `-ParmVarDecl 0x556663220830 <col:19, col:36> col:36 x 'const Vector<String> &'
|-CXXConstructorDecl 0x556663220c08 <line:141:5, col:32> col:12 Vector 'void (Vector<String> &&)' inline
| `-ParmVarDecl 0x556663220af0 <col:19, col:31> col:31 x 'Vector<String> &&'
|-CXXMethodDecl 0x556663220f20 <line:144:5, col:51> col:23 operator= 'Vector<String> &(const Vector<String> &)' inline
| `-ParmVarDecl 0x556663220e00 <col:33, col:50> col:50 x 'const Vector<String> &'
|-CXXMethodDecl 0x556663221230 <line:146:5, col:46> col:23 operator= 'Vector<String> &(Vector<String> &&)' inline
| `-ParmVarDecl 0x556663221110 <col:33, col:45> col:45 x 'Vector<String> &&'
|-CXXMethodDecl 0x556663221520 <line:148:5, col:70> col:23 assign 'Vector<String> &(Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x556663221368 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5566632213e0 <col:43, col:69> col:63 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x556663221648 <line:150:5, col:55> col:49 begin 'Vector<String>::iterator ()'
| |-NoInlineAttr 0x5566632216f8 <col:20> Inherited
| `-OptimizeNoneAttr 0x556663221750 <col:30> Inherited
|-CXXMethodDecl 0x556663221798 <line:151:5, col:53> col:49 end 'Vector<String>::iterator ()'
| |-NoInlineAttr 0x556663221848 <col:20> Inherited
| `-OptimizeNoneAttr 0x5566632218a0 <col:30> Inherited
|-CXXMethodDecl 0x556663221968 <line:152:5, col:63> col:55 used begin 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x556663221a18 <col:20> Inherited
| `-OptimizeNoneAttr 0x556663221a70 <col:30> Inherited
|-CXXMethodDecl 0x556663221ab8 <line:153:5, col:61> col:55 used end 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x556663221b68 <col:20> Inherited
| `-OptimizeNoneAttr 0x556663221bc0 <col:30> Inherited
|-CXXMethodDecl 0x556663221c08 <line:154:5, col:64> col:55 cbegin 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x556663221cb8 <col:20> Inherited
| `-OptimizeNoneAttr 0x556663221d10 <col:30> Inherited
|-CXXMethodDecl 0x556663221d58 <line:155:5, col:62> col:55 cend 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x556663221e08 <col:20> Inherited
| `-OptimizeNoneAttr 0x556663221e60 <col:30> Inherited
|-CXXMethodDecl 0x556663221e88 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x556663221f38 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x556663221fe8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x5566632221a8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x556663222098 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x556663222110 <col:37, col:63> col:57 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x5566632222f8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x556663222268 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x5566632224a8 <line:163:5, col:65> col:43 used operator[] 'String &(Vector::size_type)'
| |-ParmVarDecl 0x5566632223b0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x556663222560 <col:20>
| `-OptimizeNoneAttr 0x5566632225b8 <col:30>
|-CXXMethodDecl 0x5566632226d8 <line:164:5, col:73> col:49 operator[] 'const String &(Vector::size_type) const'
| |-ParmVarDecl 0x5566632225e0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x556663222790 <col:20>
| `-OptimizeNoneAttr 0x5566632227e8 <col:30>
|-CXXMethodDecl 0x5566632228a0 <line:165:5, col:29> col:15 at 'String &(Vector::size_type)' inline
| `-ParmVarDecl 0x556663222810 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5566632229e8 <line:166:5, col:37> col:21 at 'const String &(Vector::size_type) const' inline
| `-ParmVarDecl 0x556663222958 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x556663222b18 <line:167:5, col:21> col:15 front 'String &()' inline
|-CXXMethodDecl 0x556663222c18 <line:168:5, col:29> col:21 front 'const String &() const' inline
|-CXXMethodDecl 0x556663222ce8 <line:169:5, col:20> col:15 back 'String &()' inline
|-CXXMethodDecl 0x556663222db8 <line:170:5, col:28> col:21 back 'const String &() const' inline
|-CXXMethodDecl 0x556663222ef8 <line:172:5, col:39> col:15 unchecked_at 'String &(Vector::size_type)' inline
| `-ParmVarDecl 0x556663222e68 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x556663223040 <line:173:5, col:47> col:21 unchecked_at 'const String &(Vector::size_type) const' inline
| `-ParmVarDecl 0x556663222fb0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x556663223188 <line:174:5, col:59> col:15 at_u 'String &(Vector::size_type)' inline
| |-ParmVarDecl 0x5566632230f8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x556663223240 <col:48> Inherited "" ""
|-CXXMethodDecl 0x556663223340 <line:175:5, col:71> col:21 at_u 'const String &(Vector::size_type) const' inline
| |-ParmVarDecl 0x5566632232b0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x5566632233f8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x5566632234b8 <line:177:5, col:20> col:15 data 'String *()' inline
|-CXXMethodDecl 0x5566632235b8 <line:178:5, col:28> col:21 data 'const String *() const' inline
|-CXXMethodDecl 0x556663223738 <line:180:5, col:48> col:17 used push_back 'void (Vector<String>::value_argument_type)' inline
| `-ParmVarDecl 0x556663223678 <col:27, col:47> col:47 v 'Vector<String>::value_argument_type':'const String &'
|-FunctionTemplateDecl 0x556663223ec8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x5566632237f0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<String>':'fast_argument<String, true>'
| `-CXXMethodDecl 0x556663223e28 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (String &&)' inline
|   `-ParmVarDecl 0x556663223d28 <col:58, col:62> col:62 v 'String &&'
|-CXXMethodDecl 0x556663223fa8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x5566632240f8 <line:186:5, col:49> col:17 push_front 'void (Vector<String>::value_argument_type)' inline
| `-ParmVarDecl 0x556663224068 <col:28, col:48> col:48 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x5566632241b0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x5566632243f8 <line:189:5, col:62> col:21 insert 'Vector<String>::iterator (Vector<String>::iterator, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x556663224270 <col:28, col:37> col:37 it 'Vector<String>::iterator':'String *'
| `-ParmVarDecl 0x5566632242e8 <col:41, col:61> col:61 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x556663224588 <line:190:5, col:38> col:21 erase 'Vector<String>::iterator (Vector<String>::iterator)' inline
| `-ParmVarDecl 0x5566632244c8 <col:27, col:36> col:36 it 'Vector<String>::iterator':'String *'
|-CXXMethodDecl 0x556663224798 <line:191:5, col:49> col:21 erase 'Vector<String>::iterator (Vector<String>::iterator, Vector<String>::iterator)' inline
| |-ParmVarDecl 0x556663224650 <col:27, col:36> col:36 a 'Vector<String>::iterator':'String *'
| `-ParmVarDecl 0x5566632246c8 <col:39, col:48> col:48 b 'Vector<String>::iterator':'String *'
|-CXXMethodDecl 0x556663224858 <line:193:5, col:23> col:17 used clear 'void ()' inline
|-CXXMethodDecl 0x556663224ab8 <line:195:5, col:34> col:17 swap 'void (Vector<String> &)' inline
| `-ParmVarDecl 0x5566632249c0 <col:22, col:33> col:33 x 'Vector<String> &'
`-CXXDestructorDecl 0x556663224b88 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x556663224b88

Layout: <CGRecordLayout
  LLVMType:%class.Vector = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class ErrorHandler
         0 |   (ErrorHandler vtable pointer)
         8 |   int _nerrors
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5566632c05b8 prev 0x55666322ff48 <../dummy_inc/click/error.hh:90:1, line:592:1> line:90:7 referenced class ErrorHandler definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x5566632c06b0 <col:1, col:7> col:7 implicit referenced class ErrorHandler
|-AccessSpecDecl 0x5566632c0740 <col:22, col:28> col:22 public
|-EnumDecl 0x5566632c0768 <line:98:5, line:111:5> line:98:10 Level
| |-EnumConstantDecl 0x5566632c0888 <line:99:2, col:14> col:2 el_abort 'ErrorHandler::Level'
| | `-ConstantExpr 0x5566632c0868 <col:13, col:14> 'int' Int: -999
| |   `-UnaryOperator 0x5566632c0850 <col:13, col:14> 'int' prefix '-'
| |     `-IntegerLiteral 0x5566632c0830 <col:14> 'int' 999
| |-EnumConstantDecl 0x5566632c0930 <line:100:2, col:14> col:2 el_fatal 'ErrorHandler::Level'
| | `-ConstantExpr 0x5566632c0910 <col:13, col:14> 'int' Int: -1
| |   `-UnaryOperator 0x5566632c08f8 <col:13, col:14> 'int' prefix '-'
| |     `-IntegerLiteral 0x5566632c08d8 <col:14> 'int' 1
| |-EnumConstantDecl 0x5566632c09c0 <line:102:2, col:17> col:2 el_emergency 'ErrorHandler::Level'
| | `-ConstantExpr 0x5566632c09a0 <col:17> 'int' Int: 0
| |   `-IntegerLiteral 0x5566632c0980 <col:17> 'int' 0
| |-EnumConstantDecl 0x5566632c0a50 <line:103:2, col:13> col:2 el_alert 'ErrorHandler::Level'
| | `-ConstantExpr 0x5566632c0a30 <col:13> 'int' Int: 1
| |   `-IntegerLiteral 0x5566632c0a10 <col:13> 'int' 1
| |-EnumConstantDecl 0x5566632c0ae0 <line:104:2, col:16> col:2 el_critical 'ErrorHandler::Level'
| | `-ConstantExpr 0x5566632c0ac0 <col:16> 'int' Int: 2
| |   `-IntegerLiteral 0x5566632c0aa0 <col:16> 'int' 2
| |-EnumConstantDecl 0x5566632c0b70 <line:105:2, col:13> col:2 referenced el_error 'ErrorHandler::Level'
| | `-ConstantExpr 0x5566632c0b50 <col:13> 'int' Int: 3
| |   `-IntegerLiteral 0x5566632c0b30 <col:13> 'int' 3
| |-EnumConstantDecl 0x5566632c0c00 <line:106:2, col:15> col:2 el_warning 'ErrorHandler::Level'
| | `-ConstantExpr 0x5566632c0be0 <col:15> 'int' Int: 4
| |   `-IntegerLiteral 0x5566632c0bc0 <col:15> 'int' 4
| |-EnumConstantDecl 0x5566632c0c90 <line:107:2, col:14> col:2 el_notice 'ErrorHandler::Level'
| | `-ConstantExpr 0x5566632c0c70 <col:14> 'int' Int: 5
| |   `-IntegerLiteral 0x5566632c0c50 <col:14> 'int' 5
| |-EnumConstantDecl 0x5566632c0d20 <line:109:2, col:12> col:2 el_info 'ErrorHandler::Level'
| | `-ConstantExpr 0x5566632c0d00 <col:12> 'int' Int: 6
| |   `-IntegerLiteral 0x5566632c0ce0 <col:12> 'int' 6
| `-EnumConstantDecl 0x5566632c0db0 <line:110:2, col:13> col:2 el_debug 'ErrorHandler::Level'
|   `-ConstantExpr 0x5566632c0d90 <col:13> 'int' Int: 7
|     `-IntegerLiteral 0x5566632c0d70 <col:13> 'int' 7
|-VarDecl 0x5566632c0e20 <line:114:5, col:31> col:23 e_abort 'const char []' static
|-VarDecl 0x5566632c0ea8 <col:5, line:115:10> col:2 e_fatal 'const char []' static
|-VarDecl 0x5566632c0f30 <line:114:5, line:116:14> col:2 e_emergency 'const char []' static
|-VarDecl 0x5566632c0fb8 <line:114:5, line:117:10> col:2 e_alert 'const char []' static
|-VarDecl 0x5566632c1040 <line:114:5, line:118:13> col:2 e_critical 'const char []' static
|-VarDecl 0x5566632c10c8 <line:114:5, line:119:10> col:2 e_error 'const char []' static
|-VarDecl 0x5566632c1150 <line:114:5, line:120:12> col:2 e_warning 'const char []' static
|-VarDecl 0x5566632c11d8 <line:114:5, line:121:22> col:2 e_warning_annotated 'const char []' static
|-VarDecl 0x5566632c1260 <line:114:5, line:122:11> col:2 e_notice 'const char []' static
|-VarDecl 0x5566632c12e8 <line:114:5, line:123:9> col:2 e_info 'const char []' static
|-VarDecl 0x5566632c1370 <line:114:5, line:124:10> col:2 e_debug 'const char []' static
|-CXXConstructorDecl 0x5566632c1470 <line:127:5, line:129:5> line:127:5 used ErrorHandler 'void ()'
| |-CXXCtorInitializer Field 0x5566632c6758 '_nerrors' 'int'
| | `-IntegerLiteral 0x5566632c6ee8 <line:128:13> 'int' 0
| `-CompoundStmt 0x5566632c6f58 <col:16, line:129:5>
|-CXXDestructorDecl 0x5566632c1560 <line:131:5, line:132:5> line:131:13 used ~ErrorHandler 'void () noexcept' virtual
| `-CompoundStmt 0x5566632c6f68 <col:29, line:132:5>
|-CXXMethodDecl 0x5566632c1718 <line:148:5, col:62> col:26 static_initialize 'ErrorHandler *(ErrorHandler *)' static
| `-ParmVarDecl 0x5566632c1650 <col:44, col:58> col:58 errh 'ErrorHandler *'
|-CXXMethodDecl 0x5566632c17e0 <line:154:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x5566632c18c8 <line:159:5, line:161:5> line:159:26 default_handler 'ErrorHandler *()' static
| `-CompoundStmt 0x5566632c6fc0 <col:44, line:161:5>
|   `-ReturnStmt 0x5566632c6fb0 <line:160:2, col:9>
|     `-ImplicitCastExpr 0x5566632c6f98 <col:9> 'ErrorHandler *' <LValueToRValue>
|       `-DeclRefExpr 0x5566632c6f78 <col:9> 'ErrorHandler *' lvalue Var 0x5566632c67b8 'the_default_handler' 'ErrorHandler *'
|-CXXMethodDecl 0x5566632c1a08 <line:168:5, col:55> col:17 set_default_handler 'void (ErrorHandler *)' static
| `-ParmVarDecl 0x5566632c1978 <col:37, col:51> col:51 errh 'ErrorHandler *'
|-CXXMethodDecl 0x5566632c1ad0 <line:171:5, line:173:5> line:171:26 silent_handler 'ErrorHandler *()' static
| `-CompoundStmt 0x5566632c7020 <col:43, line:173:5>
|   `-ReturnStmt 0x5566632c7010 <line:172:2, col:9>
|     `-ImplicitCastExpr 0x5566632c6ff8 <col:9> 'ErrorHandler *' <LValueToRValue>
|       `-DeclRefExpr 0x5566632c6fd8 <col:9> 'ErrorHandler *' lvalue Var 0x5566632c6830 'the_silent_handler' 'ErrorHandler *'
|-VarDecl 0x5566632c1b88 <line:176:5, col:22> col:22 ok_result 'const int' static
|-VarDecl 0x5566632c1c08 <line:178:5, col:22> col:22 error_result 'const int' static
|-CXXMethodDecl 0x5566632c1d18 <line:186:5, col:36> col:10 debug 'void (const char *, ...)'
| `-ParmVarDecl 0x5566632c1c88 <col:16, col:28> col:28 fmt 'const char *'
|-CXXMethodDecl 0x5566632c1e68 <line:188:5, col:38> col:10 message 'void (const char *, ...)'
| `-ParmVarDecl 0x5566632c1dd8 <col:18, col:30> col:30 fmt 'const char *'
|-CXXMethodDecl 0x5566632c1fc0 <line:193:5, col:37> col:9 used warning 'int (const char *, ...)'
| `-ParmVarDecl 0x5566632c1f28 <col:17, col:29> col:29 fmt 'const char *'
|-CXXMethodDecl 0x5566632c2118 <line:196:5, col:35> col:9 used error 'int (const char *, ...)'
| `-ParmVarDecl 0x5566632c2080 <col:15, col:27> col:27 fmt 'const char *'
|-CXXMethodDecl 0x5566632c2270 <line:201:5, col:35> col:9 fatal 'int (const char *, ...)'
| `-ParmVarDecl 0x5566632c21d8 <col:15, col:27> col:27 fmt 'const char *'
|-CXXMethodDecl 0x5566632c2480 <line:204:5, col:61> col:10 ldebug 'void (const String &, const char *, ...)'
| |-ParmVarDecl 0x5566632c2328 <col:17, col:31> col:31 landmark 'const String &'
| `-ParmVarDecl 0x5566632c23a8 <col:41, col:53> col:53 fmt 'const char *'
|-CXXMethodDecl 0x5566632c2658 <line:206:5, col:63> col:10 lmessage 'void (const String &, const char *, ...)'
| |-ParmVarDecl 0x5566632c2540 <col:19, col:33> col:33 landmark 'const String &'
| `-ParmVarDecl 0x5566632c25c0 <col:43, col:55> col:55 fmt 'const char *'
|-CXXMethodDecl 0x5566632c2878 <line:208:5, col:62> col:9 lwarning 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x5566632c2718 <col:18, col:32> col:32 landmark 'const String &'
| `-ParmVarDecl 0x5566632c2798 <col:42, col:54> col:54 fmt 'const char *'
|-CXXMethodDecl 0x5566632c2a58 <line:210:5, col:60> col:9 lerror 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x5566632c2938 <col:16, col:30> col:30 landmark 'const String &'
| `-ParmVarDecl 0x5566632c29b8 <col:40, col:52> col:52 fmt 'const char *'
|-CXXMethodDecl 0x5566632c2c38 <line:212:5, col:60> col:9 lfatal 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x5566632c2b18 <col:16, col:30> col:30 landmark 'const String &'
| `-ParmVarDecl 0x5566632c2b98 <col:40, col:52> col:52 fmt 'const char *'
|-CXXMethodDecl 0x5566632c2dc0 <line:226:5, col:35> col:9 used xmessage 'int (const String &)'
| `-ParmVarDecl 0x5566632c2cf8 <col:18, col:32> col:32 str 'const String &'
|-CXXMethodDecl 0x5566632c2f90 <line:232:5, line:234:5> line:232:9 used xmessage 'int (const String &, const String &)'
| |-ParmVarDecl 0x5566632c2e78 <col:18, col:32> col:32 used anno 'const String &'
| |-ParmVarDecl 0x5566632c2ef0 <col:38, col:52> col:52 used str 'const String &'
| `-CompoundStmt 0x5566632c7278 <col:57, line:234:5>
|   `-ReturnStmt 0x5566632c7268 <line:233:2, col:41>
|     `-ExprWithCleanups 0x5566632c7250 <col:9, col:41> 'int'
|       `-CXXMemberCallExpr 0x5566632c71f8 <col:9, col:41> 'int'
|         |-MemberExpr 0x5566632c71c8 <col:9> '<bound member function type>' ->xmessage 0x5566632c2dc0
|         | `-CXXThisExpr 0x5566632c71b8 <col:9> 'ErrorHandler *' implicit this
|         `-MaterializeTemporaryExpr 0x5566632c7238 <col:18, col:40> 'const String' lvalue
|           `-ImplicitCastExpr 0x5566632c7220 <col:18, col:40> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x5566632c7198 <col:18, col:40> 'String' (CXXTemporary 0x5566632c7198)
|               `-CallExpr 0x5566632c7160 <col:18, col:40> 'String'
|                 |-ImplicitCastExpr 0x5566632c7148 <col:18> 'String (*)(const String &, const String &)' <FunctionToPointerDecay>
|                 | `-DeclRefExpr 0x5566632c70c0 <col:18> 'String (const String &, const String &)' lvalue CXXMethod 0x5566632c4f88 'combine_anno' 'String (const String &, const String &)'
|                 |-DeclRefExpr 0x5566632c70e0 <col:31> 'const String' lvalue ParmVar 0x5566632c2ef0 'str' 'const String &'
|                 `-DeclRefExpr 0x5566632c7100 <col:36> 'const String' lvalue ParmVar 0x5566632c2e78 'anno' 'const String &'
|-CXXMethodDecl 0x5566632c3270 <line:241:5, line:243:5> line:241:9 xmessage 'int (const String &, const char *, __va_list_tag *)'
| |-ParmVarDecl 0x5566632c3050 <col:18, col:32> col:32 used anno 'const String &'
| |-ParmVarDecl 0x5566632c30d0 <col:38, col:50> col:50 used fmt 'const char *'
| |-ParmVarDecl 0x5566632c3148 <col:55, col:63> col:63 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x5566632c7508 <col:68, line:243:5>
|   `-ReturnStmt 0x5566632c74f8 <line:242:2, col:41>
|     `-ExprWithCleanups 0x5566632c74e0 <col:9, col:41> 'int'
|       `-CXXMemberCallExpr 0x5566632c7480 <col:9, col:41> 'int'
|         |-MemberExpr 0x5566632c7450 <col:9> '<bound member function type>' ->xmessage 0x5566632c2f90
|         | `-CXXThisExpr 0x5566632c7440 <col:9> 'ErrorHandler *' implicit this
|         |-DeclRefExpr 0x5566632c7318 <col:18> 'const String' lvalue ParmVar 0x5566632c3050 'anno' 'const String &'
|         `-MaterializeTemporaryExpr 0x5566632c74c8 <col:24, col:40> 'const String' lvalue
|           `-ImplicitCastExpr 0x5566632c74b0 <col:24, col:40> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x5566632c7420 <col:24, col:40> 'String' (CXXTemporary 0x5566632c7420)
|               `-CXXMemberCallExpr 0x5566632c73b8 <col:24, col:40> 'String'
|                 |-MemberExpr 0x5566632c7348 <col:24> '<bound member function type>' ->vformat 0x5566632c4450
|                 | `-CXXThisExpr 0x5566632c7338 <col:24> 'ErrorHandler *' implicit this
|                 |-ImplicitCastExpr 0x5566632c73e8 <col:32> 'const char *' <LValueToRValue>
|                 | `-DeclRefExpr 0x5566632c7378 <col:32> 'const char *' lvalue ParmVar 0x5566632c30d0 'fmt' 'const char *'
|                 `-ImplicitCastExpr 0x5566632c7400 <col:37> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                   `-DeclRefExpr 0x5566632c7398 <col:37> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x5566632c3148 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x5566632c3510 <line:251:5, line:254:5> line:251:9 used xmessage 'int (const String &, const String &, const String &)'
| |-ParmVarDecl 0x5566632c3338 <col:18, col:32> col:32 used landmark 'const String &'
| |-ParmVarDecl 0x5566632c33b0 <col:42, col:56> col:56 used anno 'const String &'
| |-ParmVarDecl 0x5566632c3428 <line:252:4, col:18> col:18 used str 'const String &'
| `-CompoundStmt 0x5566632c7848 <col:23, line:254:5>
|   `-ReturnStmt 0x5566632c7838 <line:253:2, col:71>
|     `-ExprWithCleanups 0x5566632c7820 <col:9, col:71> 'int'
|       `-CXXMemberCallExpr 0x5566632c77c0 <col:9, col:71> 'int'
|         |-MemberExpr 0x5566632c7790 <col:9> '<bound member function type>' ->xmessage 0x5566632c2f90
|         | `-CXXThisExpr 0x5566632c7780 <col:9> 'ErrorHandler *' implicit this
|         |-MaterializeTemporaryExpr 0x5566632c7808 <col:18, col:65> 'const String' lvalue
|         | `-ImplicitCastExpr 0x5566632c77f0 <col:18, col:65> 'const String' <NoOp>
|         |   `-CXXBindTemporaryExpr 0x5566632c7740 <col:18, col:65> 'String' (CXXTemporary 0x5566632c7740)
|         |     `-CallExpr 0x5566632c76d8 <col:18, col:65> 'String'
|         |       |-ImplicitCastExpr 0x5566632c76c0 <col:18> 'String (*)(const String &, const String &)' <FunctionToPointerDecay>
|         |       | `-DeclRefExpr 0x5566632c75a8 <col:18> 'String (const String &, const String &)' lvalue CXXMethod 0x5566632c4f88 'combine_anno' 'String (const String &, const String &)'
|         |       |-DeclRefExpr 0x5566632c75c8 <col:31> 'const String' lvalue ParmVar 0x5566632c33b0 'anno' 'const String &'
|         |       `-MaterializeTemporaryExpr 0x5566632c7720 <col:37, col:64> 'const String' lvalue
|         |         `-ImplicitCastExpr 0x5566632c7708 <col:37, col:64> 'const String' <NoOp>
|         |           `-CXXBindTemporaryExpr 0x5566632c76a0 <col:37, col:64> 'String' (CXXTemporary 0x5566632c76a0)
|         |             `-CallExpr 0x5566632c7670 <col:37, col:64> 'String'
|         |               |-ImplicitCastExpr 0x5566632c7658 <col:37> 'String (*)(const String &)' <FunctionToPointerDecay>
|         |               | `-DeclRefExpr 0x5566632c75e8 <col:37> 'String (const String &)' lvalue CXXMethod 0x5566632c55d8 'make_landmark_anno' 'String (const String &)'
|         |               `-DeclRefExpr 0x5566632c7608 <col:56> 'const String' lvalue ParmVar 0x5566632c3338 'landmark' 'const String &'
|         `-DeclRefExpr 0x5566632c7760 <col:68> 'const String' lvalue ParmVar 0x5566632c3428 'str' 'const String &'
|-CXXMethodDecl 0x5566632c3890 <line:264:5, line:267:5> line:264:9 xmessage 'int (const String &, const String &, const char *, __va_list_tag *)'
| |-ParmVarDecl 0x5566632c35d8 <col:18, col:32> col:32 used landmark 'const String &'
| |-ParmVarDecl 0x5566632c3650 <col:42, col:56> col:56 used anno 'const String &'
| |-ParmVarDecl 0x5566632c36d0 <line:265:4, col:16> col:16 used fmt 'const char *'
| |-ParmVarDecl 0x5566632c3748 <col:21, col:29> col:29 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x5566632c8b38 <col:34, line:267:5>
|   `-ReturnStmt 0x5566632c8b28 <line:266:2, col:51>
|     `-ExprWithCleanups 0x5566632c8b10 <col:9, col:51> 'int'
|       `-CXXMemberCallExpr 0x5566632c8aa8 <col:9, col:51> 'int'
|         |-MemberExpr 0x5566632c8a78 <col:9> '<bound member function type>' ->xmessage 0x5566632c3510
|         | `-CXXThisExpr 0x5566632c8a68 <col:9> 'ErrorHandler *' implicit this
|         |-DeclRefExpr 0x5566632c78e8 <col:18> 'const String' lvalue ParmVar 0x5566632c35d8 'landmark' 'const String &'
|         |-DeclRefExpr 0x5566632c7908 <col:28> 'const String' lvalue ParmVar 0x5566632c3650 'anno' 'const String &'
|         `-MaterializeTemporaryExpr 0x5566632c8af8 <col:34, col:50> 'const String' lvalue
|           `-ImplicitCastExpr 0x5566632c8ae0 <col:34, col:50> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x5566632c8a48 <col:34, col:50> 'String' (CXXTemporary 0x5566632c8a48)
|               `-CXXMemberCallExpr 0x5566632c89e0 <col:34, col:50> 'String'
|                 |-MemberExpr 0x5566632c7938 <col:34> '<bound member function type>' ->vformat 0x5566632c4450
|                 | `-CXXThisExpr 0x5566632c7928 <col:34> 'ErrorHandler *' implicit this
|                 |-ImplicitCastExpr 0x5566632c8a10 <col:42> 'const char *' <LValueToRValue>
|                 | `-DeclRefExpr 0x5566632c7968 <col:42> 'const char *' lvalue ParmVar 0x5566632c36d0 'fmt' 'const char *'
|                 `-ImplicitCastExpr 0x5566632c8a28 <col:47> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                   `-DeclRefExpr 0x5566632c89c0 <col:47> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x5566632c3748 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x5566632c39a0 <line:286:5, line:288:5> line:286:9 used nerrors 'int () const'
| `-CompoundStmt 0x5566632c8bb8 <col:25, line:288:5>
|   `-ReturnStmt 0x5566632c8ba8 <line:287:2, col:9>
|     `-ImplicitCastExpr 0x5566632c8b90 <col:9> 'int' <LValueToRValue>
|       `-MemberExpr 0x5566632c8b60 <col:9> 'const int' lvalue ->_nerrors 0x5566632c6758
|         `-CXXThisExpr 0x5566632c8b50 <col:9> 'const ErrorHandler *' implicit this
|-CXXMethodDecl 0x5566632c3bb0 <line:349:5, col:66> col:19 xformat 'String (int, const char *, ...)' static
| |-ParmVarDecl 0x5566632c3a58 <col:27, col:31> col:31 default_flags 'int'
| `-ParmVarDecl 0x5566632c3ad8 <col:46, col:58> col:58 fmt 'const char *'
|-CXXMethodDecl 0x5566632c3e98 <line:351:5, col:75> col:19 used vxformat 'String (int, const char *, __va_list_tag *)' static
| |-ParmVarDecl 0x5566632c3c78 <col:28, col:32> col:32 default_flags 'int'
| |-ParmVarDecl 0x5566632c3cf8 <col:47, col:59> col:59 fmt 'const char *'
| `-ParmVarDecl 0x5566632c3d70 <col:64, col:72> col:72 val '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x5566632c4030 <line:353:5, col:47> col:19 xformat 'String (const char *, ...)' static
| `-ParmVarDecl 0x5566632c3f68 <col:27, col:39> col:39 fmt 'const char *'
|-CXXMethodDecl 0x5566632c4278 <line:355:5, line:357:5> line:355:19 vxformat 'String (const char *, __va_list_tag *)' static
| |-ParmVarDecl 0x5566632c40f0 <col:28, col:40> col:40 used fmt 'const char *'
| |-ParmVarDecl 0x5566632c4168 <col:45, col:53> col:53 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x5566632c8e10 <col:58, line:357:5>
|   `-ReturnStmt 0x5566632c8e00 <line:356:2, col:29>
|     `-ExprWithCleanups 0x5566632c8de8 <col:9, col:29> 'String'
|       `-CXXConstructExpr 0x5566632c8db8 <col:9, col:29> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x5566632c8da0 <col:9, col:29> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x5566632c8d80 <col:9, col:29> 'String' (CXXTemporary 0x5566632c8d80)
|             `-CallExpr 0x5566632c8d10 <col:9, col:29> 'String'
|               |-ImplicitCastExpr 0x5566632c8cf8 <col:9> 'String (*)(int, const char *, __va_list_tag *)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x5566632c8c80 <col:9> 'String (int, const char *, __va_list_tag *)' lvalue CXXMethod 0x5566632c3e98 'vxformat' 'String (int, const char *, __va_list_tag *)'
|               |-IntegerLiteral 0x5566632c8c20 <col:18> 'int' 0
|               |-ImplicitCastExpr 0x5566632c8d48 <col:21> 'const char *' <LValueToRValue>
|               | `-DeclRefExpr 0x5566632c8c40 <col:21> 'const char *' lvalue ParmVar 0x5566632c40f0 'fmt' 'const char *'
|               `-ImplicitCastExpr 0x5566632c8d60 <col:26> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                 `-DeclRefExpr 0x5566632c8c60 <col:26> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x5566632c4168 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x5566632c4450 <line:369:5, col:56> col:20 used vformat 'String (const char *, __va_list_tag *)' virtual
| |-ParmVarDecl 0x5566632c4340 <col:28, col:40> col:40 fmt 'const char *'
| `-ParmVarDecl 0x5566632c43b8 <col:45, col:53> col:53 val '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x5566632c45a8 <line:379:5, col:39> col:12 format 'String (const char *, ...)'
| `-ParmVarDecl 0x5566632c4518 <col:19, col:31> col:31 fmt 'const char *'
|-CXXMethodDecl 0x5566632c46f0 <line:393:5, col:46> col:20 decorate 'String (const String &)' virtual
| `-ParmVarDecl 0x5566632c4660 <col:29, col:43> col:43 str 'const String &'
|-CXXMethodDecl 0x5566632c4990 <line:424:5, col:69> col:19 emit 'void *(const String &, void *, bool)' virtual
| |-ParmVarDecl 0x5566632c47a8 <col:24, col:38> col:38 str 'const String &'
| |-ParmVarDecl 0x5566632c4828 <col:43, col:49> col:49 user_data 'void *'
| `-ParmVarDecl 0x5566632c48a0 <col:60, col:65> col:65 more 'bool'
|-CXXMethodDecl 0x5566632c4af0 <line:438:5, line:441:5> line:438:18 account 'void (int)' virtual
| |-ParmVarDecl 0x5566632c4a60 <col:26, col:30> col:30 used level 'int'
| `-CompoundStmt 0x5566632c8f28 <col:37, line:441:5>
|   `-IfStmt 0x5566632c8f10 <line:439:2, line:440:8>
|     |-BinaryOperator 0x5566632c8e98 <line:439:6, col:15> 'bool' '<='
|     | |-ImplicitCastExpr 0x5566632c8e68 <col:6> 'int' <LValueToRValue>
|     | | `-DeclRefExpr 0x5566632c8e28 <col:6> 'int' lvalue ParmVar 0x5566632c4a60 'level' 'int'
|     | `-ImplicitCastExpr 0x5566632c8e80 <col:15> 'int' <IntegralCast>
|     |   `-DeclRefExpr 0x5566632c8e48 <col:15> 'ErrorHandler::Level' EnumConstant 0x5566632c0b70 'el_error' 'ErrorHandler::Level'
|     `-UnaryOperator 0x5566632c8ef8 <line:440:6, col:8> 'int' lvalue prefix '++'
|       `-MemberExpr 0x5566632c8ec8 <col:8> 'int' lvalue ->_nerrors 0x5566632c6758
|         `-CXXThisExpr 0x5566632c8eb8 <col:8> 'ErrorHandler *' implicit this
|-CXXMethodDecl 0x5566632c4bb8 <line:446:5, line:448:5> line:446:18 clear 'void ()' virtual
| `-CompoundStmt 0x5566632c8fc0 <col:26, line:448:5>
|   `-BinaryOperator 0x5566632c8fa0 <line:447:2, col:13> 'int' lvalue '='
|     |-MemberExpr 0x5566632c8f50 <col:2> 'int' lvalue ->_nerrors 0x5566632c6758
|     | `-CXXThisExpr 0x5566632c8f40 <col:2> 'ErrorHandler *' implicit this
|     `-IntegerLiteral 0x5566632c8f80 <col:13> 'int' 0
|-CXXMethodDecl 0x5566632c4d80 <line:466:5, col:66> col:19 used make_anno 'String (const char *, const String &)' static
| |-ParmVarDecl 0x5566632c4c70 <col:29, col:41> col:41 name 'const char *'
| `-ParmVarDecl 0x5566632c4ce8 <col:47, col:61> col:61 value 'const String &'
|-CXXMethodDecl 0x5566632c4f88 <line:482:5, col:69> col:19 used combine_anno 'String (const String &, const String &)' static
| |-ParmVarDecl 0x5566632c4e40 <col:32, col:46> col:46 str 'const String &'
| `-ParmVarDecl 0x5566632c4eb8 <col:51, col:65> col:65 anno 'const String &'
|-CXXMethodDecl 0x5566632c5238 <line:516:5, line:517:68> line:516:24 parse_anno 'const char *(const String &, const char *, const char *, ...)' static
| |-ParmVarDecl 0x5566632c5048 <col:35, col:49> col:49 str 'const String &'
| |-ParmVarDecl 0x5566632c50c8 <line:517:3, col:15> col:15 begin 'const char *'
| |-ParmVarDecl 0x5566632c5148 <col:22, col:34> col:34 end 'const char *'
| `-SentinelAttr 0x5566632c52f0 <col:59> 0 0
|-CXXMethodDecl 0x5566632c5488 <line:527:5, line:534:5> line:527:24 skip_anno 'const char *(const char *, const char *)' static
| |-ParmVarDecl 0x5566632c5368 <col:34, col:46> col:46 used begin 'const char *'
| |-ParmVarDecl 0x5566632c53e8 <col:53, col:65> col:65 used end 'const char *'
| `-CompoundStmt 0x5566632c9630 <col:70, line:534:5>
|   |-DeclStmt 0x5566632c9130 <line:528:2, col:20>
|   | |-VarDecl 0x5566632c8fe8 <col:2, col:9> col:9 used name 'String' callinit destroyed
|   | | `-CXXConstructExpr 0x5566632c9050 <col:9> 'String' 'void ()'
|   | `-VarDecl 0x5566632c9088 <col:2, col:15> col:15 used value 'String' callinit destroyed
|   |   `-CXXConstructExpr 0x5566632c90f0 <col:15> 'String' 'void ()'
|   |-DeclStmt 0x5566632c9200 <line:529:2, col:23>
|   | `-VarDecl 0x5566632c9160 <col:2, col:18> col:14 used x 'const char *' cinit
|   |   `-ImplicitCastExpr 0x5566632c91e8 <col:18> 'const char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x5566632c91c8 <col:18> 'const char *' lvalue ParmVar 0x5566632c5368 'begin' 'const char *'
|   |-DoStmt 0x5566632c95c8 <line:530:2, line:532:15>
|   | |-CompoundStmt 0x5566632c94f8 <line:530:5, line:532:2>
|   | | `-ExprWithCleanups 0x5566632c94e0 <line:531:6, col:58> 'const char *' lvalue
|   | |   `-BinaryOperator 0x5566632c94c0 <col:6, col:58> 'const char *' lvalue '='
|   | |     |-DeclRefExpr 0x5566632c9218 <col:6> 'const char *' lvalue Var 0x5566632c9160 'x' 'const char *'
|   | |     `-CallExpr 0x5566632c9410 <col:10, col:58> 'const char *'
|   | |       |-ImplicitCastExpr 0x5566632c93f8 <col:10> 'const char *(*)(const String &, const char *, const char *, String *, String *, bool)' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x5566632c93b0 <col:10> 'const char *(const String &, const char *, const char *, String *, String *, bool)' lvalue CXXMethod 0x5566632c6c30 'skip_anno' 'const char *(const String &, const char *, const char *, String *, String *, bool)'
|   | |       |-MaterializeTemporaryExpr 0x5566632c9478 <col:20, col:27> 'const String' lvalue
|   | |       | `-ImplicitCastExpr 0x5566632c9460 <col:20, col:27> 'const String' <NoOp>
|   | |       |   `-CXXBindTemporaryExpr 0x5566632c92d0 <col:20, col:27> 'String' (CXXTemporary 0x5566632c92d0)
|   | |       |     `-CXXTemporaryObjectExpr 0x5566632c9298 <col:20, col:27> 'String' 'void ()'
|   | |       |-ImplicitCastExpr 0x5566632c9490 <col:30> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x5566632c92f0 <col:30> 'const char *' lvalue Var 0x5566632c9160 'x' 'const char *'
|   | |       |-ImplicitCastExpr 0x5566632c94a8 <col:33> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x5566632c9310 <col:33> 'const char *' lvalue ParmVar 0x5566632c53e8 'end' 'const char *'
|   | |       |-UnaryOperator 0x5566632c9350 <col:38, col:39> 'String *' prefix '&' cannot overflow
|   | |       | `-DeclRefExpr 0x5566632c9330 <col:39> 'String' lvalue Var 0x5566632c8fe8 'name' 'String'
|   | |       |-UnaryOperator 0x5566632c9388 <col:45, col:46> 'String *' prefix '&' cannot overflow
|   | |       | `-DeclRefExpr 0x5566632c9368 <col:46> 'String' lvalue Var 0x5566632c9088 'value' 'String'
|   | |       `-CXXBoolLiteralExpr 0x5566632c93a0 <col:53> 'bool' false
|   | `-ImplicitCastExpr 0x5566632c95b0 <line:532:11> 'bool' <MemberPointerToBoolean>
|   |   `-ImplicitCastExpr 0x5566632c9598 <col:11> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|   |     `-CXXMemberCallExpr 0x5566632c9578 <col:11> 'String::unspecified_bool_type':'int (String::*)() const'
|   |       `-MemberExpr 0x5566632c9548 <col:11> '<bound member function type>' .operator int (String::*)() const 0x556662eeb788
|   |         `-ImplicitCastExpr 0x5566632c9530 <col:11> 'const String' lvalue <NoOp>
|   |           `-DeclRefExpr 0x5566632c9510 <col:11> 'String' lvalue Var 0x5566632c8fe8 'name' 'String'
|   `-ReturnStmt 0x5566632c9620 <line:533:2, col:9>
|     `-ImplicitCastExpr 0x5566632c9608 <col:9> 'const char *' <LValueToRValue>
|       `-DeclRefExpr 0x5566632c95e8 <col:9> 'const char *' lvalue Var 0x5566632c9160 'x' 'const char *'
|-CXXMethodDecl 0x5566632c55d8 <line:543:5, line:550:5> line:543:19 used make_landmark_anno 'String (const String &)' static
| |-ParmVarDecl 0x5566632c5548 <col:38, col:52> col:52 used x 'const String &'
| `-CompoundStmt 0x5566632c9c38 <col:55, line:550:5>
|   `-IfStmt 0x5566632c9c10 <line:544:2, line:549:20> has_else
|     |-BinaryOperator 0x5566632c9870 <line:544:6, col:19> 'bool' '&&'
|     | |-ImplicitCastExpr 0x5566632c9858 <col:6> 'bool' <MemberPointerToBoolean>
|     | | `-ImplicitCastExpr 0x5566632c9840 <col:6> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|     | |   `-CXXMemberCallExpr 0x5566632c9820 <col:6> 'String::unspecified_bool_type':'int (String::*)() const'
|     | |     `-MemberExpr 0x5566632c97f0 <col:6> '<bound member function type>' .operator int (String::*)() const 0x556662eeb788
|     | |       `-DeclRefExpr 0x5566632c9690 <col:6> 'const String' lvalue ParmVar 0x5566632c5548 'x' 'const String &'
|     | `-BinaryOperator 0x5566632c97d0 <col:11, col:19> 'bool' '=='
|     |   |-ImplicitCastExpr 0x5566632c97a0 <col:11, col:14> 'int' <IntegralCast>
|     |   | `-CXXOperatorCallExpr 0x5566632c9750 <col:11, col:14> 'char'
|     |   |   |-ImplicitCastExpr 0x5566632c9738 <col:12, col:14> 'char (*)(int) const' <FunctionToPointerDecay>
|     |   |   | `-DeclRefExpr 0x5566632c96f0 <col:12, col:14> 'char (int) const' lvalue CXXMethod 0x556662f04fc0 'operator[]' 'char (int) const'
|     |   |   |-DeclRefExpr 0x5566632c96b0 <col:11> 'const String' lvalue ParmVar 0x5566632c5548 'x' 'const String &'
|     |   |   `-IntegerLiteral 0x5566632c96d0 <col:13> 'int' 0
|     |   `-ImplicitCastExpr 0x5566632c97b8 <col:19> 'int' <IntegralCast>
|     |     `-CharacterLiteral 0x5566632c9788 <col:19> 'char' 123
|     |-ReturnStmt 0x5566632c98e0 <line:545:6, col:13>
|     | `-CXXConstructExpr 0x5566632c98b0 <col:13> 'String' 'void (const String &)'
|     |   `-DeclRefExpr 0x5566632c9890 <col:13> 'const String' lvalue ParmVar 0x5566632c5548 'x' 'const String &'
|     `-IfStmt 0x5566632c9be8 <line:546:7, line:549:20> has_else
|       |-ImplicitCastExpr 0x5566632c9978 <line:546:11> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x5566632c9960 <col:11> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x5566632c9940 <col:11> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x5566632c9910 <col:11> '<bound member function type>' .operator int (String::*)() const 0x556662eeb788
|       |       `-DeclRefExpr 0x5566632c98f0 <col:11> 'const String' lvalue ParmVar 0x5566632c5548 'x' 'const String &'
|       |-ReturnStmt 0x5566632c9b00 <line:547:6, col:29>
|       | `-ExprWithCleanups 0x5566632c9ae8 <col:13, col:29> 'String'
|       |   `-CXXConstructExpr 0x5566632c9ab8 <col:13, col:29> 'String' 'void (String &&)' elidable
|       |     `-MaterializeTemporaryExpr 0x5566632c9aa0 <col:13, col:29> 'String' xvalue
|       |       `-CXXBindTemporaryExpr 0x5566632c9a80 <col:13, col:29> 'String' (CXXTemporary 0x5566632c9a80)
|       |         `-CallExpr 0x5566632c9a30 <col:13, col:29> 'String'
|       |           |-ImplicitCastExpr 0x5566632c9a18 <col:13> 'String (*)(const char *, const String &)' <FunctionToPointerDecay>
|       |           | `-DeclRefExpr 0x5566632c9990 <col:13> 'String (const char *, const String &)' lvalue CXXMethod 0x5566632c4d80 'make_anno' 'String (const char *, const String &)'
|       |           |-ImplicitCastExpr 0x5566632c9a60 <col:23> 'const char *' <ArrayToPointerDecay>
|       |           | `-StringLiteral 0x5566632c99b0 <col:23> 'const char [2]' lvalue "l"
|       |           `-DeclRefExpr 0x5566632c99d0 <col:28> 'const String' lvalue ParmVar 0x5566632c5548 'x' 'const String &'
|       `-ReturnStmt 0x5566632c9bd8 <line:549:6, col:20>
|         `-ExprWithCleanups 0x5566632c9bc0 <col:13, col:20> 'String'
|           `-CXXConstructExpr 0x5566632c9b90 <col:13, col:20> 'String' 'void (String &&)' elidable
|             `-MaterializeTemporaryExpr 0x5566632c9b78 <col:13, col:20> 'String' xvalue
|               `-CXXBindTemporaryExpr 0x5566632c9b58 <col:13, col:20> 'String' (CXXTemporary 0x5566632c9b58)
|                 `-CXXTemporaryObjectExpr 0x5566632c9b20 <col:13, col:20> 'String' 'void ()'
|-CXXMethodDecl 0x5566632c57a0 <line:559:5, col:76> col:19 clean_landmark 'String (const String &, bool)' static
| |-ParmVarDecl 0x5566632c5690 <col:34, col:48> col:48 landmark 'const String &'
| `-ParmVarDecl 0x5566632c5708 <col:58, col:71> col:63 colon 'bool' cinit
|   `-CXXBoolLiteralExpr 0x5566632c6ed8 <col:71> 'bool' false
|-CXXRecordDecl 0x5566632c5850 <line:563:5, col:12> col:12 referenced struct Conversion
|-TypedefDecl 0x5566632c5b48 <line:564:5, col:60> col:22 referenced ConversionFunction 'String (*)(int, __va_list_tag *)'
| `-PointerType 0x5566632c5ae0 'String (*)(int, __va_list_tag *)'
|   `-ParenType 0x5566632c5a80 'String (int, __va_list_tag *)' sugar
|     `-FunctionProtoType 0x5566632c5a40 'String (int, __va_list_tag *)' cdecl
|       |-RecordType 0x556662ee8020 'String'
|       | `-CXXRecord 0x556662ee7f90 'String'
|       |-BuiltinType 0x556662bb7370 'int'
|       `-DecayedType 0x556663230f90 '__va_list_tag *' sugar
|         |-TypedefType 0x556663230f60 'va_list' sugar
|         | |-Typedef 0x556662dd90d0 'va_list'
|         | `-TypedefType 0x556662dd9080 '__gnuc_va_list' sugar
|         |   |-Typedef 0x556662d10ca8 '__gnuc_va_list'
|         |   `-TypedefType 0x556662d10c10 '__builtin_va_list' sugar
|         |     |-Typedef 0x556662bf8bd8 '__builtin_va_list'
|         |     `-ConstantArrayType 0x556662bf8b80 '__va_list_tag [1]' 1 
|         |       `-RecordType 0x556662bb80c0 '__va_list_tag'
|         |         `-CXXRecord 0x556662bb8028 '__va_list_tag'
|         `-PointerType 0x556662dde970 '__va_list_tag *'
|           `-RecordType 0x556662bb80c0 '__va_list_tag'
|             `-CXXRecord 0x556662bb8028 '__va_list_tag'
|-EnumDecl 0x5566632c5ba0 <line:565:5, line:576:5> line:565:10 ConversionFlags
| |-EnumConstantDecl 0x5566632c5ca0 <line:566:2, col:16> col:2 cf_zero_pad 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x5566632c6200 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5566632c5c80 <col:16> 'int' Int: 1
| |     `-IntegerLiteral 0x5566632c5c60 <col:16> 'int' 1
| |-EnumConstantDecl 0x5566632c5d30 <line:567:2, col:21> col:2 cf_plus_positive 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x5566632c6218 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5566632c5d10 <col:21> 'int' Int: 2
| |     `-IntegerLiteral 0x5566632c5cf0 <col:21> 'int' 2
| |-EnumConstantDecl 0x5566632c5dc0 <line:568:2, col:22> col:2 cf_space_positive 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x5566632c6230 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5566632c5da0 <col:22> 'int' Int: 4
| |     `-IntegerLiteral 0x5566632c5d80 <col:22> 'int' 4
| |-EnumConstantDecl 0x5566632c5e50 <line:569:2, col:17> col:2 cf_left_just 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x5566632c6248 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5566632c5e30 <col:17> 'int' Int: 8
| |     `-IntegerLiteral 0x5566632c5e10 <col:17> 'int' 8
| |-EnumConstantDecl 0x5566632c5ee0 <line:570:2, col:22> col:2 cf_alternate_form 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x5566632c6260 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5566632c5ec0 <col:22> 'int' Int: 16
| |     `-IntegerLiteral 0x5566632c5ea0 <col:22> 'int' 16
| |-EnumConstantDecl 0x5566632c5f70 <line:571:2, col:19> col:2 cf_singlequote 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x5566632c6278 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5566632c5f50 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x5566632c5f30 <col:19> 'int' 32
| |-EnumConstantDecl 0x5566632c6000 <line:572:2, col:17> col:2 cf_uppercase 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x5566632c6290 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5566632c5fe0 <col:17> 'int' Int: 64
| |     `-IntegerLiteral 0x5566632c5fc0 <col:17> 'int' 64
| |-EnumConstantDecl 0x5566632c6090 <line:573:2, col:14> col:2 cf_signed 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x5566632c62a8 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5566632c6070 <col:14> 'int' Int: 128
| |     `-IntegerLiteral 0x5566632c6050 <col:14> 'int' 128
| |-EnumConstantDecl 0x5566632c6120 <line:574:2, col:16> col:2 cf_negative 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x5566632c62c0 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5566632c6100 <col:16> 'int' Int: 256
| |     `-IntegerLiteral 0x5566632c60e0 <col:16> 'int' 256
| `-EnumConstantDecl 0x5566632c61b0 <line:575:2, col:12> col:2 cf_utf8 'ErrorHandler::ConversionFlags'
|   `-ImplicitCastExpr 0x5566632c62d8 <col:12> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5566632c6190 <col:12> 'int' Int: 1024
|       `-IntegerLiteral 0x5566632c6170 <col:12> 'int' 1024
|-CXXMethodDecl 0x5566632c64e8 <line:577:5, col:82> col:24 add_conversion 'ErrorHandler::Conversion *(const String &, ErrorHandler::ConversionFunction)' static
| |-ParmVarDecl 0x5566632c6300 <col:39, col:53> col:53 name 'const String &'
| `-ParmVarDecl 0x5566632c63a0 <col:59, col:78> col:78 func 'ErrorHandler::ConversionFunction':'String (*)(int, __va_list_tag *)'
|-CXXMethodDecl 0x5566632c6670 <line:578:5, col:56> col:16 remove_conversion 'int (ErrorHandler::Conversion *)' static
| `-ParmVarDecl 0x5566632c65a8 <col:34, col:46> col:46 conversion 'ErrorHandler::Conversion *'
|-AccessSpecDecl 0x5566632c6718 <line:580:3, col:10> col:3 private
|-FieldDecl 0x5566632c6758 <line:582:5, col:9> col:9 referenced _nerrors 'int'
|-VarDecl 0x5566632c67b8 <line:584:5, col:26> col:26 used the_default_handler 'ErrorHandler *' static
|-VarDecl 0x5566632c6830 <line:585:5, col:26> col:26 used the_silent_handler 'ErrorHandler *' static
|-CXXMethodDecl 0x5566632c6c30 <line:587:5, line:590:14> line:587:24 used skip_anno 'const char *(const String &, const char *, const char *, String *, String *, bool)' static
| |-ParmVarDecl 0x5566632c68a8 <col:34, col:48> col:48 str 'const String &'
| |-ParmVarDecl 0x5566632c6928 <line:588:6, col:18> col:18 begin 'const char *'
| |-ParmVarDecl 0x5566632c69a8 <col:25, col:37> col:37 end 'const char *'
| |-ParmVarDecl 0x5566632c6a20 <line:589:6, col:14> col:14 name_result 'String *'
| |-ParmVarDecl 0x5566632c6a98 <col:27, col:35> col:35 value_result 'String *'
| `-ParmVarDecl 0x5566632c6b10 <line:590:6, col:11> col:11 raw 'bool'
|-CXXMethodDecl 0x5566632c6d58 <line:90:7> col:7 implicit operator= 'ErrorHandler &(const ErrorHandler &)' inline default noexcept-unevaluated 0x5566632c6d58
| `-ParmVarDecl 0x5566632c6e68 <col:7> col:7 'const ErrorHandler &'
`-CXXConstructorDecl 0x5566632c9f98 <col:7> col:7 implicit constexpr ErrorHandler 'void (const ErrorHandler &)' inline default noexcept-unevaluated 0x5566632c9f98
  `-ParmVarDecl 0x5566632ca0a8 <col:7> col:7 'const ErrorHandler &'

Layout: <CGRecordLayout
  LLVMType:%class.ErrorHandler = type <{ i32 (...)**, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.ErrorHandler.base = type <{ i32 (...)**, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class NumArg (empty)
           | [sizeof=1, dsize=1, align=1,
           |  nvsize=1, nvalign=1]

*** Dumping AST Record Layout
         0 | class IntArg
         0 |   class NumArg (base) (empty)
         0 |   int base
         4 |   int status
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55666328a0a0 <../dummy_inc/click/args.hh:1013:1, line:1027:1> line:1013:7 referenced class NumArg definition
|-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |-DefaultConstructor exists trivial constexpr defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55666328a1b8 <col:1, col:7> col:7 implicit class NumArg
|-AccessSpecDecl 0x55666328a248 <col:16, col:22> col:16 public
|-EnumDecl 0x55666328a270 <line:1014:5, line:1026:5> line:1014:5
| |-EnumConstantDecl 0x55666328a370 <line:1015:9, col:21> col:9 status_ok 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| | `-ImplicitCastExpr 0x55666328a5c0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55666328a350 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x55666328a330 <col:21> 'int' 0
| |-EnumConstantDecl 0x55666328a400 <line:1016:9, col:24> col:9 referenced status_inval 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| | `-ImplicitCastExpr 0x55666328a5d8 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55666328a3e0 <col:24> 'int' Int: 22
| |     `-IntegerLiteral 0x55666328a3c0 <col:24> 'int' 22
| |-EnumConstantDecl 0x55666328a490 <line:1017:9, col:24> col:9 referenced status_range 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| | `-ImplicitCastExpr 0x55666328a5f0 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55666328a470 <col:24> 'int' Int: 34
| |     `-IntegerLiteral 0x55666328a450 <col:24> 'int' 34
| |-EnumConstantDecl 0x55666328a520 <line:1019:9, col:25> col:9 status_notsup 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| | `-ImplicitCastExpr 0x55666328a608 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55666328a500 <col:25> 'int' Int: 95
| |     `-IntegerLiteral 0x55666328a4e0 <col:25> 'int' 95
| `-EnumConstantDecl 0x55666328a570 <line:1025:9> col:9 status_unitless 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
|-CXXConstructorDecl 0x55666328bf80 <line:1013:7> col:7 implicit used constexpr NumArg 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55666328c3b8 <col:7>
|-CXXConstructorDecl 0x55666328c088 <col:7> col:7 implicit constexpr NumArg 'void (const NumArg &)' inline default trivial noexcept-unevaluated 0x55666328c088
| `-ParmVarDecl 0x55666328c198 <col:7> col:7 'const NumArg &'
|-CXXConstructorDecl 0x55666328c238 <col:7> col:7 implicit constexpr NumArg 'void (NumArg &&)' inline default trivial noexcept-unevaluated 0x55666328c238
| `-ParmVarDecl 0x55666328c348 <col:7> col:7 'NumArg &&'
`-CXXDestructorDecl 0x55666328e4b8 <col:7> col:7 implicit ~NumArg 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.NumArg = type { i8 }
  NonVirtualBaseLLVMType:%class.NumArg = type { i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55666328a638 <../dummy_inc/click/args.hh:1040:1, line:1095:1> line:1040:7 referenced class IntArg definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-public 'NumArg'
|-CXXRecordDecl 0x55666328a798 <col:1, col:7> col:7 implicit referenced class IntArg
|-AccessSpecDecl 0x55666328a828 <col:32, col:38> col:32 public
|-TypedefDecl 0x55666328a860 <line:1042:5, col:22> col:22 referenced limb_type 'uint32_t':'unsigned int'
| `-TypedefType 0x556662d10750 'uint32_t' sugar
|   |-Typedef 0x556662c20408 'uint32_t'
|   `-TypedefType 0x556662bf9440 '__uint32_t' sugar
|     |-Typedef 0x556662bf9038 '__uint32_t'
|     `-BuiltinType 0x556662bb7410 'unsigned int'
|-CXXConstructorDecl 0x55666328a9a8 <line:1044:5, line:1046:5> line:1044:5 used IntArg 'void (int)'
| |-ParmVarDecl 0x55666328a8d0 <col:12, col:20> col:16 used b 'int' cinit
| | `-IntegerLiteral 0x55666328be88 <col:20> 'int' 0
| |-CXXCtorInitializer 'NumArg'
| | `-CXXConstructExpr 0x55666328c3c8 <col:5> 'NumArg' 'void () noexcept'
| |-CXXCtorInitializer Field 0x55666328b740 'base' 'int'
| | `-ImplicitCastExpr 0x55666328bf28 <line:1045:16> 'int' <LValueToRValue>
| |   `-DeclRefExpr 0x55666328bee8 <col:16> 'int' lvalue ParmVar 0x55666328a8d0 'b' 'int'
| `-CompoundStmt 0x55666328c438 <col:19, line:1046:5>
|-CXXMethodDecl 0x55666328aea0 <line:1048:5, line:1050:50> line:1048:17 parse 'const char *(const char *, const char *, bool, int, IntArg::limb_type *, int)'
| |-ParmVarDecl 0x55666328aa70 <col:23, col:35> col:35 begin 'const char *'
| |-ParmVarDecl 0x55666328aaf0 <col:42, col:54> col:54 end 'const char *'
| |-ParmVarDecl 0x55666328ab68 <line:1049:23, col:28> col:28 is_signed 'bool'
| |-ParmVarDecl 0x55666328abe8 <col:39, col:43> col:43 size 'int'
| |-ParmVarDecl 0x55666328aca8 <line:1050:23, col:34> col:34 value 'IntArg::limb_type *'
| `-ParmVarDecl 0x55666328ad28 <col:41, col:45> col:45 nlimb 'int'
|-FunctionTemplateDecl 0x55666328b2f8 <line:1052:5, line:1067:5> line:1053:10 parse_saturating
| |-TemplateTypeParmDecl 0x55666328af70 <line:1052:14, col:23> col:23 referenced typename depth 0 index 0 V
| `-CXXMethodDecl 0x55666328b258 <line:1053:5, line:1067:5> line:1053:10 parse_saturating 'bool (const String &, V &, const ArgContext &)'
|   |-ParmVarDecl 0x55666328b018 <col:27, col:41> col:41 referenced str 'const String &'
|   |-ParmVarDecl 0x55666328b0b8 <col:46, col:49> col:49 referenced result 'V &'
|   |-ParmVarDecl 0x55666328b130 <col:57, col:82> col:75 referenced args 'const ArgContext &' cinit
|   | `-DeclRefExpr 0x55666328bea8 <col:82> 'const ArgContext' lvalue Var 0x556663281968 'blank_args' 'const ArgContext'
|   `-CompoundStmt 0x55666328d368 <col:94, line:1067:5>
|     |-DeclStmt 0x55666328c5c8 <line:1054:9, col:64>
|     | `-VarDecl 0x55666328c458 <col:9, col:55> col:24 referenced is_signed 'const bool' constexpr cinit
|     |   `-CXXDependentScopeMemberExpr 0x55666328c580 <col:36, col:55> '<dependent type>' lvalue ->is_signed
|     |-DeclStmt 0x55666328c7e8 <line:1055:9, col:91>
|     | `-VarDecl 0x55666328c5f8 <col:9, col:90> col:23 referenced nlimb 'const int' constexpr cinit
|     |   `-CXXFunctionalCastExpr 0x55666328c7c0 <col:31, col:90> 'int' functional cast to int <Dependent>
|     |     `-BinaryOperator 0x55666328c7a0 <col:35, col:89> 'unsigned long' '/'
|     |       |-ParenExpr 0x55666328c750 <col:35, col:69> 'unsigned long'
|     |       | `-BinaryOperator 0x55666328c730 <col:36, col:68> 'unsigned long' '-'
|     |       |   |-BinaryOperator 0x55666328c6d8 <col:36, col:64> 'unsigned long' '+'
|     |       |   | |-UnaryExprOrTypeTraitExpr 0x55666328c688 <col:36, col:44> 'unsigned long' sizeof 'V'
|     |       |   | `-UnaryExprOrTypeTraitExpr 0x55666328c6b8 <col:48, col:64> 'unsigned long' sizeof 'IntArg::limb_type':'unsigned int'
|     |       |   `-ImplicitCastExpr 0x55666328c718 <col:68> 'unsigned long' <IntegralCast>
|     |       |     `-IntegerLiteral 0x55666328c6f8 <col:68> 'int' 1
|     |       `-UnaryExprOrTypeTraitExpr 0x55666328c780 <col:73, col:89> 'unsigned long' sizeof 'IntArg::limb_type':'unsigned int'
|     |-DeclStmt 0x55666328c948 <line:1056:9, col:27>
|     | `-VarDecl 0x55666328c8e0 <col:9, col:26> col:19 referenced x 'IntArg::limb_type [nlimb]'
|     |-IfStmt 0x55666328cd98 <line:1057:9, line:1059:22>
|     | |-CXXOperatorCallExpr 0x55666328ccc8 <line:1057:13, line:1058:24> '<dependent type>'
|     | | |-UnresolvedLookupExpr 0x55666328cc40 <col:13> '<overloaded function type>' lvalue (ADL) = 'operator!=' 0x5566631e84b0 0x5566630da738 0x556662f23d18 0x556662f239f0 0x556662f151d0 0x556662f14e80 0x556662f14770 0x556662ee70e0 0x556662e735a0
|     | | |-CallExpr 0x55666328cb80 <line:1057:13, col:78> '<dependent type>'
|     | | | |-UnresolvedMemberExpr 0x55666328c970 <col:13> '<bound member function type>' lvalue
|     | | | |-CXXMemberCallExpr 0x55666328ca20 <col:19, col:29> 'String::const_iterator':'const char *'
|     | | | | `-MemberExpr 0x55666328c9f0 <col:19, col:23> '<bound member function type>' .begin 0x556662f043d8
|     | | | |   `-DeclRefExpr 0x55666328c9d0 <col:19> 'const String' lvalue ParmVar 0x55666328b018 'str' 'const String &'
|     | | | |-CXXMemberCallExpr 0x55666328ca90 <col:32, col:40> 'String::const_iterator':'const char *'
|     | | | | `-MemberExpr 0x55666328ca60 <col:32, col:36> '<bound member function type>' .end 0x556662f045f0
|     | | | |   `-DeclRefExpr 0x55666328ca40 <col:32> 'const String' lvalue ParmVar 0x55666328b018 'str' 'const String &'
|     | | | |-DeclRefExpr 0x55666328cab0 <col:43> 'const bool' lvalue Var 0x55666328c458 'is_signed' 'const bool'
|     | | | |-CXXFunctionalCastExpr 0x55666328cb18 <col:54, col:67> 'int' functional cast to int <Dependent>
|     | | | | `-UnaryExprOrTypeTraitExpr 0x55666328caf8 <col:58, col:66> 'unsigned long' sizeof 'V'
|     | | | |-DeclRefExpr 0x55666328cb40 <col:70> 'IntArg::limb_type [nlimb]' lvalue Var 0x55666328c8e0 'x' 'IntArg::limb_type [nlimb]'
|     | | | `-DeclRefExpr 0x55666328cb60 <col:73> 'const int' lvalue Var 0x55666328c5f8 'nlimb' 'const int'
|     | | `-CXXMemberCallExpr 0x55666328cc20 <line:1058:16, col:24> 'String::const_iterator':'const char *'
|     | |   `-MemberExpr 0x55666328cbf0 <col:16, col:20> '<bound member function type>' .end 0x556662f045f0
|     | |     `-DeclRefExpr 0x55666328cbd0 <col:16> 'const String' lvalue ParmVar 0x55666328b018 'str' 'const String &'
|     | `-BinaryOperator 0x55666328cd78 <line:1059:13, col:22> 'int' lvalue '='
|     |   |-MemberExpr 0x55666328cd10 <col:13> 'int' lvalue ->status 0x55666328b7a8
|     |   | `-CXXThisExpr 0x55666328cd00 <col:13> 'IntArg *' implicit this
|     |   `-ImplicitCastExpr 0x55666328cd60 <col:22> 'int' <IntegralCast>
|     |     `-DeclRefExpr 0x55666328cd40 <col:22> 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)' EnumConstant 0x55666328a400 'status_inval' 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
|     |-IfStmt 0x55666328cfe8 <line:1060:9, line:1063:9>
|     | |-BinaryOperator 0x55666328ced0 <line:1060:13, col:33> 'bool' '&&'
|     | | |-ImplicitCastExpr 0x55666328ceb8 <col:13> 'bool' <IntegralToBoolean>
|     | | | `-ImplicitCastExpr 0x55666328cea0 <col:13> 'int' <LValueToRValue>
|     | | |   `-MemberExpr 0x55666328cdc0 <col:13> 'int' lvalue ->status 0x55666328b7a8
|     | | |     `-CXXThisExpr 0x55666328cdb0 <col:13> 'IntArg *' implicit this
|     | | `-BinaryOperator 0x55666328ce80 <col:23, col:33> 'bool' '!='
|     | |   |-ImplicitCastExpr 0x55666328ce50 <col:23> 'int' <LValueToRValue>
|     | |   | `-MemberExpr 0x55666328ce00 <col:23> 'int' lvalue ->status 0x55666328b7a8
|     | |   |   `-CXXThisExpr 0x55666328cdf0 <col:23> 'IntArg *' implicit this
|     | |   `-ImplicitCastExpr 0x55666328ce68 <col:33> 'int' <IntegralCast>
|     | |     `-DeclRefExpr 0x55666328ce30 <col:33> 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)' EnumConstant 0x55666328a490 'status_range' 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
|     | `-CompoundStmt 0x55666328cfc8 <col:47, line:1063:9>
|     |   |-CXXMemberCallExpr 0x55666328cf68 <line:1061:13, col:40> 'void'
|     |   | |-MemberExpr 0x55666328cf10 <col:13, col:18> '<bound member function type>' .error 0x556663230910
|     |   | | `-DeclRefExpr 0x55666328cef0 <col:13> 'const ArgContext' lvalue ParmVar 0x55666328b130 'args' 'const ArgContext &'
|     |   | `-ImplicitCastExpr 0x55666328cf90 <col:24> 'const char *' <ArrayToPointerDecay>
|     |   |   `-StringLiteral 0x55666328cf40 <col:24> 'const char [15]' lvalue "invalid number"
|     |   `-ReturnStmt 0x55666328cfb8 <line:1062:13, col:20>
|     |     `-CXXBoolLiteralExpr 0x55666328cfa8 <col:20> 'bool' false
|     |-DeclStmt 0x55666328d1b8 <line:1064:9, col:64>
|     | `-TypedefDecl 0x55666328d160 <col:9, col:49> col:49 referenced unsigned_v_type 'typename make_unsigned<V>::type'
|     |   `-DependentNameType 0x55666328d0f0 'typename make_unsigned<V>::type' dependent
|     |-CallExpr 0x55666328d318 <line:1065:9, col:71> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x55666328d1d0 <col:9> '<overloaded function type>' lvalue (ADL) = 'extract_integer' 0x556662ea7568
|     | |-DeclRefExpr 0x55666328d218 <col:25> 'IntArg::limb_type [nlimb]' lvalue Var 0x55666328c8e0 'x' 'IntArg::limb_type [nlimb]'
|     | `-CXXReinterpretCastExpr 0x55666328d2e8 <col:28, col:70> 'unsigned_v_type':'typename make_unsigned<V>::type' lvalue reinterpret_cast<unsigned_v_type &> <Dependent>
|     |   `-DeclRefExpr 0x55666328d260 <col:64> 'V' lvalue ParmVar 0x55666328b0b8 'result' 'V &'
|     `-ReturnStmt 0x55666328d358 <line:1066:9, col:16>
|       `-CXXBoolLiteralExpr 0x55666328d348 <col:16> 'bool' true
|-FunctionTemplateDecl 0x55666328b6b8 <line:1069:5, line:1083:5> line:1070:10 parse
| |-TemplateTypeParmDecl 0x55666328b368 <line:1069:14, col:23> col:23 referenced typename depth 0 index 0 V
| |-CXXMethodDecl 0x55666328b618 <line:1070:5, line:1083:5> line:1070:10 parse 'bool (const String &, V &, const ArgContext &)'
| | |-ParmVarDecl 0x55666328b418 <col:16, col:30> col:30 referenced str 'const String &'
| | |-ParmVarDecl 0x55666328b4b8 <col:35, col:38> col:38 referenced result 'V &'
| | |-ParmVarDecl 0x55666328b530 <col:46, col:71> col:64 referenced args 'const ArgContext &' cinit
| | | `-DeclRefExpr 0x55666328bec8 <col:71> 'const ArgContext' lvalue Var 0x556663281968 'blank_args' 'const ArgContext'
| | `-CompoundStmt 0x55666328dad8 <col:83, line:1083:5>
| |   |-DeclStmt 0x55666328d430 <line:1071:9, col:12>
| |   | `-VarDecl 0x55666328d3c8 <col:9, col:11> col:11 referenced x 'V'
| |   `-IfStmt 0x55666328dab0 <line:1072:9, line:1082:9> has_else
| |     |-BinaryOperator 0x55666328d6c0 <line:1072:13, line:1073:49> '<dependent type>' '||'
| |     | |-UnaryOperator 0x55666328d548 <line:1072:13, col:43> '<dependent type>' prefix '!' cannot overflow
| |     | | `-CallExpr 0x55666328d510 <col:14, col:43> '<dependent type>'
| |     | |   |-UnresolvedMemberExpr 0x55666328d458 <col:14> '<bound member function type>' lvalue
| |     | |   |-DeclRefExpr 0x55666328d4b0 <col:31> 'const String' lvalue ParmVar 0x55666328b418 'str' 'const String &'
| |     | |   |-DeclRefExpr 0x55666328d4d0 <col:36> 'V' lvalue Var 0x55666328d3c8 'x' 'V'
| |     | |   `-DeclRefExpr 0x55666328d4f0 <col:39> 'const ArgContext' lvalue ParmVar 0x55666328b530 'args' 'const ArgContext &'
| |     | `-ParenExpr 0x55666328d6a0 <line:1073:16, col:49> 'bool'
| |     |   `-BinaryOperator 0x55666328d680 <col:17, col:37> 'bool' '&&'
| |     |     |-ImplicitCastExpr 0x55666328d668 <col:17> 'bool' <IntegralToBoolean>
| |     |     | `-ImplicitCastExpr 0x55666328d650 <col:17> 'int' <LValueToRValue>
| |     |     |   `-MemberExpr 0x55666328d570 <col:17> 'int' lvalue ->status 0x55666328b7a8
| |     |     |     `-CXXThisExpr 0x55666328d560 <col:17> 'IntArg *' implicit this
| |     |     `-BinaryOperator 0x55666328d630 <col:27, col:37> 'bool' '!='
| |     |       |-ImplicitCastExpr 0x55666328d600 <col:27> 'int' <LValueToRValue>
| |     |       | `-MemberExpr 0x55666328d5b0 <col:27> 'int' lvalue ->status 0x55666328b7a8
| |     |       |   `-CXXThisExpr 0x55666328d5a0 <col:27> 'IntArg *' implicit this
| |     |       `-ImplicitCastExpr 0x55666328d618 <col:37> 'int' <IntegralCast>
| |     |         `-DeclRefExpr 0x55666328d5e0 <col:37> 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)' EnumConstant 0x55666328a490 'status_range' 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| |     |-ReturnStmt 0x55666328d6f0 <line:1074:13, col:20>
| |     | `-CXXBoolLiteralExpr 0x55666328d6e0 <col:20> 'bool' false
| |     `-IfStmt 0x55666328da88 <line:1075:14, line:1082:9> has_else
| |       |-BinaryOperator 0x55666328d790 <line:1075:18, col:28> 'bool' '=='
| |       | |-ImplicitCastExpr 0x55666328d760 <col:18> 'int' <LValueToRValue>
| |       | | `-MemberExpr 0x55666328d710 <col:18> 'int' lvalue ->status 0x55666328b7a8
| |       | |   `-CXXThisExpr 0x55666328d700 <col:18> 'IntArg *' implicit this
| |       | `-ImplicitCastExpr 0x55666328d778 <col:28> 'int' <IntegralCast>
| |       |   `-DeclRefExpr 0x55666328d740 <col:28> 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)' EnumConstant 0x55666328a490 'status_range' 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| |       |-CompoundStmt 0x55666328d9c8 <col:42, line:1079:9>
| |       | |-CallExpr 0x55666328d970 <line:1076:13, line:1077:45> '<dependent type>'
| |       | | |-MemberExpr 0x55666328d7c0 <line:1076:13> '<bound member function type>' ->range_error 0x55666328bdb8
| |       | | | `-CXXThisExpr 0x55666328d7b0 <col:13> 'IntArg *' implicit this
| |       | | |-DeclRefExpr 0x55666328d7f0 <col:25> 'const ArgContext' lvalue ParmVar 0x55666328b530 'args' 'const ArgContext &'
| |       | | |-CXXDependentScopeMemberExpr 0x55666328d8d0 <col:31, col:50> '<dependent type>' lvalue ->is_signed
| |       | | `-CXXUnresolvedConstructExpr 0x55666328d948 <line:1077:25, col:44> 'click_int_large_t':'long long' 'click_int_large_t':'long long'
| |       | |   `-DeclRefExpr 0x55666328d928 <col:43> 'V' lvalue Var 0x55666328d3c8 'x' 'V'
| |       | `-ReturnStmt 0x55666328d9b8 <line:1078:13, col:20>
| |       |   `-CXXBoolLiteralExpr 0x55666328d9a8 <col:20> 'bool' false
| |       `-CompoundStmt 0x55666328da68 <line:1079:16, line:1082:9>
| |         |-BinaryOperator 0x55666328da28 <line:1080:13, col:22> '<dependent type>' '='
| |         | |-DeclRefExpr 0x55666328d9e8 <col:13> 'V' lvalue ParmVar 0x55666328b4b8 'result' 'V &'
| |         | `-DeclRefExpr 0x55666328da08 <col:22> 'V' lvalue Var 0x55666328d3c8 'x' 'V'
| |         `-ReturnStmt 0x55666328da58 <line:1081:13, col:20>
| |           `-CXXBoolLiteralExpr 0x55666328da48 <col:20> 'bool' true
| `-CXXMethodDecl 0x5566632d61a8 <line:1070:5, line:1083:5> line:1070:10 used parse 'bool (const String &, int &, const ArgContext &)'
|   |-TemplateArgument type 'int'
|   |-ParmVarDecl 0x5566632d5f88 <col:16, col:30> col:30 str 'const String &'
|   |-ParmVarDecl 0x5566632d6058 <col:35, col:38> col:38 result 'int &'
|   `-ParmVarDecl 0x5566632d60c0 <col:46, col:71> col:64 args 'const ArgContext &' cinit
|     `-DeclRefExpr 0x55666328bec8 <col:71> 'const ArgContext' lvalue Var 0x556663281968 'blank_args' 'const ArgContext'
|-FieldDecl 0x55666328b740 <line:1085:5, col:9> col:9 base 'int'
|-FieldDecl 0x55666328b7a8 <line:1086:5, col:9> col:9 referenced status 'int'
|-AccessSpecDecl 0x55666328b7f8 <line:1088:3, col:12> col:3 protected
|-CXXMethodDecl 0x55666328bab0 <line:1090:5, line:1091:51> line:1090:24 span 'const char *(const char *, const char *, bool, int &)' static
| |-ParmVarDecl 0x55666328b838 <col:29, col:41> col:41 begin 'const char *'
| |-ParmVarDecl 0x55666328b8b8 <col:48, col:60> col:60 end 'const char *'
| |-ParmVarDecl 0x55666328b930 <line:1091:29, col:34> col:34 is_signed 'bool'
| `-ParmVarDecl 0x55666328b9b0 <col:45, col:50> col:50 b 'int &'
|-CXXMethodDecl 0x55666328bdb8 <line:1092:5, line:1093:45> line:1092:10 referenced range_error 'void (const ArgContext &, bool, click_int_large_t)'
| |-ParmVarDecl 0x55666328bb80 <col:22, col:40> col:40 args 'const ArgContext &'
| |-ParmVarDecl 0x55666328bbf8 <col:46, col:51> col:51 is_signed 'bool'
| `-ParmVarDecl 0x55666328bc90 <line:1093:22, col:40> col:40 value 'click_int_large_t':'long long'
|-CXXConstructorDecl 0x55666328e338 <line:1040:7> col:7 implicit constexpr IntArg 'void (const IntArg &)' inline default trivial noexcept-unevaluated 0x55666328e338
| `-ParmVarDecl 0x55666328e448 <col:7> col:7 'const IntArg &'
|-CXXConstructorDecl 0x55666328e5c8 <col:7> col:7 implicit constexpr IntArg 'void (IntArg &&)' inline default trivial noexcept-unevaluated 0x55666328e5c8
| `-ParmVarDecl 0x55666328e6d8 <col:7> col:7 'IntArg &&'
`-CXXDestructorDecl 0x5566632d5c30 <col:7> col:7 implicit referenced ~IntArg 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.IntArg = type { i32, i32 }
  NonVirtualBaseLLVMType:%class.IntArg = type { i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class ArgContext
         0 |   const class Element * _context
         8 |   class ErrorHandler * _errh
        16 |   const char * _arg_keyword
        24 |   _Bool _read_status
           | [sizeof=32, dsize=25, align=8,
           |  nvsize=25, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55666322ffd8 prev 0x5566630e2268 <../dummy_inc/click/args.hh:29:1, line:85:1> line:29:7 referenced class ArgContext definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x5566632300d0 <col:1, col:7> col:7 implicit referenced class ArgContext
|-AccessSpecDecl 0x556663230160 <col:20, col:26> col:20 public
|-CXXConstructorDecl 0x556663230298 <line:33:5, line:38:5> line:33:5 ArgContext 'void (ErrorHandler *)'
| |-ParmVarDecl 0x556663230198 <col:16, col:37> col:30 used errh 'ErrorHandler *' cinit
| | `-ImplicitCastExpr 0x5566632324c0 <col:37> 'ErrorHandler *' <NullToPointer>
| |   `-IntegerLiteral 0x5566632324a0 <col:37> 'int' 0
| |-CXXCtorInitializer Field 0x556663232038 '_errh' 'ErrorHandler *'
| | `-ImplicitCastExpr 0x556663232550 <line:34:17> 'ErrorHandler *' <LValueToRValue>
| |   `-DeclRefExpr 0x556663232510 <col:17> 'ErrorHandler *' lvalue ParmVar 0x556663230198 'errh' 'ErrorHandler *'
| |-CXXCtorInitializer Field 0x5566632320a0 '_arg_keyword' 'const char *'
| | `-ImplicitCastExpr 0x5566632325d0 <col:37> 'const char *' <NullToPointer>
| |   `-IntegerLiteral 0x556663232590 <col:37> 'int' 0
| |-CXXCtorInitializer Field 0x556663232100 '_read_status' 'bool'
| | `-CXXBoolLiteralExpr 0x556663232610 <col:54> 'bool' false
| `-CompoundStmt 0x556663232718 <col:61, line:38:5>
|   `-BinaryOperator 0x5566632326f8 <line:36:9, col:20> 'const Element *' lvalue '='
|     |-MemberExpr 0x556663232690 <col:9> 'const Element *' lvalue ->_context 0x556663231fd8
|     | `-CXXThisExpr 0x556663232680 <col:9> 'ArgContext *' implicit this
|     `-ImplicitCastExpr 0x5566632326e0 <col:20> 'const Element *' <NullToPointer>
|       `-IntegerLiteral 0x5566632326c0 <col:20> 'int' 0
|-CXXConstructorDecl 0x5566632304a8 <line:44:5, line:46:5> line:44:5 ArgContext 'void (const Element *, ErrorHandler *)'
| |-ParmVarDecl 0x556663230358 <col:16, col:31> col:31 used context 'const Element *'
| |-ParmVarDecl 0x5566632303d0 <col:40, col:61> col:54 used errh 'ErrorHandler *' cinit
| | `-ImplicitCastExpr 0x5566632324f8 <col:61> 'ErrorHandler *' <NullToPointer>
| |   `-IntegerLiteral 0x5566632324d8 <col:61> 'int' 0
| |-CXXCtorInitializer Field 0x556663231fd8 '_context' 'const Element *'
| | `-ImplicitCastExpr 0x556663232770 <line:45:20> 'const Element *' <LValueToRValue>
| |   `-DeclRefExpr 0x556663232730 <col:20> 'const Element *' lvalue ParmVar 0x556663230358 'context' 'const Element *'
| |-CXXCtorInitializer Field 0x556663232038 '_errh' 'ErrorHandler *'
| | `-ImplicitCastExpr 0x5566632327f0 <col:36> 'ErrorHandler *' <LValueToRValue>
| |   `-DeclRefExpr 0x5566632327b0 <col:36> 'ErrorHandler *' lvalue ParmVar 0x5566632303d0 'errh' 'ErrorHandler *'
| |-CXXCtorInitializer Field 0x5566632320a0 '_arg_keyword' 'const char *'
| | `-ImplicitCastExpr 0x556663232870 <col:56> 'const char *' <NullToPointer>
| |   `-IntegerLiteral 0x556663232830 <col:56> 'int' 0
| |-CXXCtorInitializer Field 0x556663232100 '_read_status' 'bool'
| | `-CXXBoolLiteralExpr 0x5566632328b0 <col:73> 'bool' false
| `-CompoundStmt 0x556663232928 <col:80, line:46:5>
|-CXXMethodDecl 0x5566632305d8 <line:49:5, line:51:5> line:49:20 context 'const Element *() const'
| `-CompoundStmt 0x5566632329a0 <col:36, line:51:5>
|   `-ReturnStmt 0x556663232990 <line:50:9, col:16>
|     `-ImplicitCastExpr 0x556663232978 <col:16> 'const Element *' <LValueToRValue>
|       `-MemberExpr 0x556663232948 <col:16> 'const Element *const' lvalue ->_context 0x556663231fd8
|         `-CXXThisExpr 0x556663232938 <col:16> 'const ArgContext *' implicit this
|-CXXMethodDecl 0x5566632306c8 <line:55:5, line:57:5> line:55:19 errh 'ErrorHandler *() const'
| `-CompoundStmt 0x556663232a20 <col:32, line:57:5>
|   `-ReturnStmt 0x556663232a10 <line:56:9, col:16>
|     `-ImplicitCastExpr 0x5566632329f8 <col:16> 'ErrorHandler *' <LValueToRValue>
|       `-MemberExpr 0x5566632329c8 <col:16> 'ErrorHandler *const' lvalue ->_errh 0x556663232038
|         `-CXXThisExpr 0x5566632329b8 <col:16> 'const ArgContext *' implicit this
|-CXXMethodDecl 0x556663230788 <line:62:5, col:27> col:12 error_prefix 'String () const'
|-CXXMethodDecl 0x556663230910 <line:65:5, col:38> col:10 referenced error 'void (const char *, ...) const'
| `-ParmVarDecl 0x556663230840 <col:16, col:28> col:28 fmt 'const char *'
|-CXXMethodDecl 0x556663230a60 <line:68:5, col:40> col:10 warning 'void (const char *, ...) const'
| `-ParmVarDecl 0x5566632309d0 <col:18, col:30> col:30 fmt 'const char *'
|-CXXMethodDecl 0x556663230bb0 <line:71:5, col:40> col:10 message 'void (const char *, ...) const'
| `-ParmVarDecl 0x556663230b20 <col:18, col:30> col:30 fmt 'const char *'
|-CXXMethodDecl 0x556663230db8 <line:73:5, col:58> col:10 xmessage 'void (const String &, const String &) const'
| |-ParmVarDecl 0x556663230c68 <col:19, col:33> col:33 anno 'const String &'
| `-ParmVarDecl 0x556663230ce0 <col:39, col:53> col:53 str 'const String &'
|-CXXMethodDecl 0x556663231ee8 <line:74:5, col:69> col:10 xmessage 'void (const String &, const char *, __va_list_tag *) const'
| |-ParmVarDecl 0x556663230e78 <col:19, col:33> col:33 anno 'const String &'
| |-ParmVarDecl 0x556663230ef8 <col:39, col:51> col:51 fmt 'const char *'
| `-ParmVarDecl 0x556663231dc0 <col:56, col:64> col:64 val '__va_list_tag *':'__va_list_tag *'
|-AccessSpecDecl 0x556663231fa0 <line:76:3, col:12> col:3 protected
|-FieldDecl 0x556663231fd8 <line:79:5, col:20> col:20 referenced _context 'const Element *'
|-FieldDecl 0x556663232038 <line:81:5, col:19> col:19 referenced _errh 'ErrorHandler *'
|-FieldDecl 0x5566632320a0 <line:82:5, col:17> col:17 _arg_keyword 'const char *'
|-FieldDecl 0x556663232100 <line:83:5, col:18> col:18 referenced _read_status 'bool' mutable
|-CXXConstructorDecl 0x556663232150 <line:29:7> col:7 implicit constexpr ArgContext 'void (const ArgContext &)' inline default trivial noexcept-unevaluated 0x556663232150
| `-ParmVarDecl 0x556663232268 <col:7> col:7 'const ArgContext &'
`-CXXMethodDecl 0x556663232308 <col:7> col:7 implicit operator= 'ArgContext &(const ArgContext &)' inline default trivial noexcept-unevaluated 0x556663232308
  `-ParmVarDecl 0x556663232418 <col:7> col:7 'const ArgContext &'

Layout: <CGRecordLayout
  LLVMType:%class.ArgContext = type <{ %class.Element*, %class.ErrorHandler*, i8*, i8, [7 x i8] }>
  NonVirtualBaseLLVMType:%class.ArgContext.base = type <{ %class.Element*, %class.ErrorHandler*, i8*, i8 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | union Packet::Anno
         0 |   char [48] c
         0 |   uint8_t [48] u8
         0 |   uint16_t [24] u16
         0 |   uint32_t [12] u32
         0 |   uint64_t [6] u64
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Packet::AllAnno
         0 |   union Packet::Anno cb
         0 |     char [48] c
         0 |     uint8_t [48] u8
         0 |     uint16_t [24] u16
         0 |     uint32_t [12] u32
         0 |     uint64_t [6] u64
        48 |   unsigned char * mac
        56 |   unsigned char * nh
        64 |   unsigned char * h
        72 |   enum Packet::PacketType pkt_type
        76 |   char [8] timestamp
        88 |   class Packet * next
        96 |   class Packet * prev
           | [sizeof=104, dsize=104, align=8,
           |  nvsize=104, nvalign=8]

*** Dumping AST Record Layout
         0 | class Packet
         0 |   class atomic_uint32_t _use_count
         0 |     uint32_t _val
         8 |   class Packet * _data_packet
        16 |   unsigned char * _head
        24 |   unsigned char * _data
        32 |   unsigned char * _tail
        40 |   unsigned char * _end
        48 |   struct Packet::AllAnno _aa
        48 |     union Packet::Anno cb
        48 |       char [48] c
        48 |       uint8_t [48] u8
        48 |       uint16_t [24] u16
        48 |       uint32_t [12] u32
        48 |       uint64_t [6] u64
        96 |     unsigned char * mac
       104 |     unsigned char * nh
       112 |     unsigned char * h
       120 |     enum Packet::PacketType pkt_type
       124 |     char [8] timestamp
       136 |     class Packet * next
       144 |     class Packet * prev
       152 |   Packet::buffer_destructor_type _destructor
       160 |   void * _destructor_argument
           | [sizeof=168, dsize=168, align=8,
           |  nvsize=168, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5566630f5218 prev 0x5566630ea420 <../dummy_inc/click/packet.hh:702:5, line:711:5> line:702:11 referenced union Anno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5566630f5310 <col:5, col:11> col:11 implicit union Anno
|-FieldDecl 0x5566630f5400 <line:703:2, col:18> col:7 referenced c 'char [48]'
|-FieldDecl 0x5566630f5528 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
|-FieldDecl 0x5566630f56a8 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
|-FieldDecl 0x5566630f5828 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
|-FieldDecl 0x5566630f59a8 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
|-CXXConstructorDecl 0x5566631067d8 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| `-CompoundStmt 0x556663107048 <col:11>
|-CXXDestructorDecl 0x5566631068b0 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x5566631069e8 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x5566631069e8
| `-ParmVarDecl 0x556663106af8 <col:11> col:11 'const Packet::Anno &'
|-CXXConstructorDecl 0x556663106b98 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x556663106b98
| `-ParmVarDecl 0x556663106ca8 <col:11> col:11 'Packet::Anno &&'
|-CXXMethodDecl 0x556663109a68 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| |-ParmVarDecl 0x556663109b78 <col:11> col:11 'const Packet::Anno &'
| `-CompoundStmt 0x556663109df8 <col:11>
|   `-ReturnStmt 0x556663109de8 <col:11>
|     `-UnaryOperator 0x556663109dd0 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x556663109dc0 <col:11> 'Packet::Anno *' this
`-CXXMethodDecl 0x556663109be8 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x556663109be8
  `-ParmVarDecl 0x556663109cf8 <col:11> col:11 'Packet::Anno &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Packet::Anno" = type { [6 x i64] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5566630f5a10 <../dummy_inc/click/packet.hh:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5566630f5b28 <col:5, col:12> col:12 implicit struct AllAnno
|-FieldDecl 0x5566630f5bc8 <line:717:2, col:7> col:7 cb 'Packet::Anno'
|-FieldDecl 0x5566630f5c30 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
|-FieldDecl 0x5566630f5c98 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
|-FieldDecl 0x5566630f5d00 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
|-FieldDecl 0x5566630f5d60 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
|-FieldDecl 0x5566630f5e20 <line:722:2, col:34> col:7 timestamp 'char [8]'
|-FieldDecl 0x5566630f5e80 <line:723:2, col:10> col:10 referenced next 'Packet *'
|-FieldDecl 0x5566630f5ee0 <line:724:2, col:10> col:10 referenced prev 'Packet *'
|-CXXConstructorDecl 0x5566631066e8 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| |-CXXCtorInitializer Field 0x5566630f5bc8 'cb' 'Packet::Anno'
| | `-CXXConstructExpr 0x556663107058 <col:12> 'Packet::Anno' 'void () noexcept'
| `-CompoundStmt 0x5566631070b0 <col:12>
|-CXXConstructorDecl 0x556663106d18 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x556663106d18
| `-ParmVarDecl 0x556663106e28 <col:12> col:12 'const Packet::AllAnno &'
|-CXXConstructorDecl 0x556663106ec8 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x556663106ec8
| `-ParmVarDecl 0x556663106fd8 <col:12> col:12 'Packet::AllAnno &&'
`-CXXDestructorDecl 0x556663109150 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  NonVirtualBaseLLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5566630e3b30 <../dummy_inc/click/packet.hh:35:1, line:775:1> line:35:7 referenced class Packet definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x5566630e3c48 <col:1, col:7> col:7 implicit referenced class Packet
|-AccessSpecDecl 0x5566630e3cd8 <col:16, col:22> col:16 public
|-EnumDecl 0x5566630e3d00 <line:41:5, line:50:5> line:41:5
| |-EnumConstantDecl 0x5566630e3e00 <line:45:2, col:21> col:2 referenced default_headroom 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| | `-ImplicitCastExpr 0x5566630e3ee0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5566630e3de0 <col:21> 'int' Int: 28
| |     `-IntegerLiteral 0x5566630e3dc0 <col:21> 'int' 28
| `-EnumConstantDecl 0x5566630e3e90 <line:48:2, col:22> col:2 referenced min_buffer_length 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
|   `-ImplicitCastExpr 0x5566630e3ef8 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5566630e3e70 <col:22> 'int' Int: 64
|       `-IntegerLiteral 0x5566630e3e50 <col:22> 'int' 64
|-CXXMethodDecl 0x5566630e4238 <line:52:5, line:53:75> line:52:28 used make 'WritablePacket *(uint32_t, const void *, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x5566630e3f20 <col:33, col:42> col:42 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x5566630e3fa0 <col:52, col:64> col:64 data 'const void *'
| |-ParmVarDecl 0x5566630e4018 <line:53:5, col:14> col:14 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x5566630e4090 <col:22, col:31> col:31 tailroom 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x5566630e42f8 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x5566630e44f8 <line:54:5, col:109> col:35 make 'WritablePacket *(const void *, uint32_t)' static inline
| |-ParmVarDecl 0x5566630e4370 <col:40, col:52> col:52 data 'const void *'
| |-ParmVarDecl 0x5566630e43e8 <col:58, col:67> col:67 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x5566630e45a8 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x5566630e4708 <line:55:5, col:91> col:35 make 'WritablePacket *(uint32_t)' static inline
| |-ParmVarDecl 0x5566630e4618 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x5566630e47b0 <col:72> warn_unused_result ""
|-TypedefDecl 0x5566630e4b10 <line:65:5, col:89> col:20 referenced buffer_destructor_type 'void (*)(unsigned char *, size_t, void *)'
| `-PointerType 0x5566630e4aa0 'void (*)(unsigned char *, size_t, void *)'
|   `-ParenType 0x5566630e4a40 'void (unsigned char *, size_t, void *)' sugar
|     `-FunctionProtoType 0x5566630e4a00 'void (unsigned char *, size_t, void *)' cdecl
|       |-BuiltinType 0x556662bb72d0 'void'
|       |-PointerType 0x556662e63ed0 'unsigned char *'
|       | `-BuiltinType 0x556662bb73d0 'unsigned char'
|       |-TypedefType 0x556662c60440 'size_t' sugar
|       | |-Typedef 0x556662c27b20 'size_t'
|       | `-BuiltinType 0x556662bb7430 'unsigned long'
|       `-PointerType 0x556662bb7ad0 'void *'
|         `-BuiltinType 0x556662bb72d0 'void'
|-CXXMethodDecl 0x5566630e4f88 <line:66:5, line:68:131> line:66:28 make 'WritablePacket *(unsigned char *, uint32_t, Packet::buffer_destructor_type, void *, int, int)' static
| |-ParmVarDecl 0x5566630e4b80 <col:33, col:48> col:48 data 'unsigned char *'
| |-ParmVarDecl 0x5566630e4bf8 <col:54, col:63> col:63 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x5566630e4c90 <line:67:5, col:28> col:28 buffer_destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| |-ParmVarDecl 0x5566630e4d10 <line:68:33, col:58> col:39 argument 'void *' cinit
| | `-CStyleCastExpr 0x5566630ff680 <col:50, col:58> 'void *' <NoOp>
| |   `-ImplicitCastExpr 0x5566630ff668 <col:58> 'void *' <NullToPointer> part_of_explicit_cast
| |     `-IntegerLiteral 0x5566630ff630 <col:58> 'int' 0
| |-ParmVarDecl 0x5566630e4d90 <col:61, col:76> col:65 headroom 'int' cinit
| | `-IntegerLiteral 0x5566630ff6a8 <col:76> 'int' 0
| |-ParmVarDecl 0x5566630e4e10 <col:79, col:94> col:83 tailroom 'int' cinit
| | `-IntegerLiteral 0x5566630ff6c8 <col:94> 'int' 0
| `-WarnUnusedResultAttr 0x5566630e5058 <col:112> warn_unused_result ""
|-CXXMethodDecl 0x5566630e50d8 <line:71:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x5566630e5198 <line:73:5, col:50> col:45 used kill 'void ()'
| |-NoInlineAttr 0x5566630e5238 <col:20>
| `-OptimizeNoneAttr 0x5566630e5290 <col:30>
|-CXXMethodDecl 0x5566630e5308 <line:75:5, col:54> col:45 used shared 'bool () const'
| |-NoInlineAttr 0x5566630e53a8 <col:20>
| `-OptimizeNoneAttr 0x5566630e5400 <col:30>
|-CXXMethodDecl 0x5566630e5478 <line:76:5, col:55> col:13 clone 'Packet *()'
| `-WarnUnusedResultAttr 0x5566630e5518 <col:36> warn_unused_result ""
|-CXXMethodDecl 0x5566630e55c8 <line:77:5, col:102> col:56 uniqueify 'WritablePacket *()'
| |-NoInlineAttr 0x5566630e5668 <col:20>
| |-OptimizeNoneAttr 0x5566630e56c0 <col:30>
| `-WarnUnusedResultAttr 0x5566630e56e8 <col:83> warn_unused_result ""
|-CXXMethodDecl 0x5566630e5740 <line:79:5, col:68> col:61 used data 'const unsigned char *() const'
| |-NoInlineAttr 0x5566630e57e0 <col:20>
| `-OptimizeNoneAttr 0x5566630e5838 <col:30>
|-CXXMethodDecl 0x5566630e5888 <line:80:5, col:72> col:61 used end_data 'const unsigned char *() const'
| |-NoInlineAttr 0x5566630e5928 <col:20>
| `-OptimizeNoneAttr 0x5566630e5980 <col:30>
|-CXXMethodDecl 0x5566630e59c8 <line:81:5, col:58> col:49 length 'uint32_t () const'
| |-NoInlineAttr 0x5566630e5a68 <col:20>
| `-OptimizeNoneAttr 0x5566630e5ac0 <col:30>
|-CXXMethodDecl 0x5566630e5b08 <line:82:5, col:32> col:21 used headroom 'uint32_t () const' inline
|-CXXMethodDecl 0x5566630e5bc8 <line:83:5, col:32> col:21 used tailroom 'uint32_t () const' inline
|-CXXMethodDecl 0x5566630e5c90 <line:84:5, col:42> col:33 used buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x5566630e5d58 <line:85:5, col:46> col:33 used end_buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x5566630e5e18 <line:86:5, col:37> col:21 used buffer_length 'uint32_t () const' inline
|-CXXMethodDecl 0x5566630e5f38 <line:97:5, line:99:5> line:97:28 buffer_destructor 'Packet::buffer_destructor_type () const'
| `-CompoundStmt 0x5566630ff790 <col:54, line:99:5>
|   `-ReturnStmt 0x5566630ff780 <line:98:2, col:9>
|     `-ImplicitCastExpr 0x5566630ff768 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-MemberExpr 0x5566630ff738 <col:9> 'const Packet::buffer_destructor_type':'void (*const)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x5566630f6218
|         `-CXXThisExpr 0x5566630ff728 <col:9> 'const Packet *' implicit this
|-CXXMethodDecl 0x5566630e60d8 <line:101:5, line:103:5> line:101:10 set_buffer_destructor 'void (Packet::buffer_destructor_type)'
| |-ParmVarDecl 0x5566630e5fe8 <col:32, col:55> col:55 used destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| `-CompoundStmt 0x5566630ff840 <col:67, line:103:5>
|   `-BinaryOperator 0x5566630ff820 <line:102:9, col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x5566630ff7b8 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x5566630f6218
|     | `-CXXThisExpr 0x5566630ff7a8 <col:9> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x5566630ff808 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-DeclRefExpr 0x5566630ff7e8 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ParmVar 0x5566630e5fe8 'destructor' 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-CXXMethodDecl 0x5566630e61d0 <line:105:5, line:107:5> line:105:11 destructor_argument 'void *()'
| `-CompoundStmt 0x5566630ff8c0 <col:33, line:107:5>
|   `-ReturnStmt 0x5566630ff8b0 <line:106:9, col:16>
|     `-ImplicitCastExpr 0x5566630ff898 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x5566630ff868 <col:16> 'void *' lvalue ->_destructor_argument 0x5566630f6280
|         `-CXXThisExpr 0x5566630ff858 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x5566630e6290 <line:109:5, line:113:5> line:109:10 reset_buffer 'void ()'
| `-CompoundStmt 0x5566630ffef0 <col:25, line:113:5>
|   |-ParenExpr 0x5566630ffc38 <line:110:2, col:146> 'void'
|   | `-ConditionalOperator 0x5566630ffc08 <col:3, col:145> 'void'
|   |   |-CXXStaticCastExpr 0x5566630ff978 <col:3, col:32> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x5566630ff950 <col:23, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-CXXMemberCallExpr 0x5566630ff918 <col:24, col:31> 'bool'
|   |   |     `-MemberExpr 0x5566630ff8e8 <col:24> '<bound member function type>' ->shared 0x5566630e5308
|   |   |       `-ImplicitCastExpr 0x5566630ff938 <col:24> 'const Packet *' <NoOp>
|   |   |         `-CXXThisExpr 0x5566630ff8d8 <col:24> 'Packet *' implicit this
|   |   |-CXXFunctionalCastExpr 0x5566630ff9d8 <col:36, col:43> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5566630ff9b8 <col:42> 'int' 0
|   |   `-CallExpr 0x5566630ffb68 <col:47, col:145> 'void'
|   |     |-ImplicitCastExpr 0x5566630ffb50 <col:47> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5566630ffb30 <col:47> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x556662c57250 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5566630ffba8 <col:62> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5566630ffa48 <col:62> 'const char [10]' lvalue "!shared()"
|   |     |-ImplicitCastExpr 0x5566630ffbc0 <col:75> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5566630ffa70 <col:75> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5566630ffbd8 <col:107> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5566630ffaa8 <col:107> 'int' 110
|   |     `-ImplicitCastExpr 0x5566630ffbf0 <col:112, col:126> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5566630ffb18 <col:112, col:126> 'const char [28]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5566630ffb00 <col:126> 'const char [28]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5566630ffac8 <col:126> 'const char [28]' lvalue "void Packet::reset_buffer()"
|   |-BinaryOperator 0x5566630ffe38 <line:111:2, col:33> 'unsigned char *' lvalue '='
|   | |-MemberExpr 0x5566630ffc68 <col:2> 'unsigned char *' lvalue ->_head 0x5566630f6020
|   | | `-CXXThisExpr 0x5566630ffc58 <col:2> 'Packet *' implicit this
|   | `-ImplicitCastExpr 0x5566630ffe20 <col:10, col:33> 'unsigned char *' <LValueToRValue>
|   |   `-BinaryOperator 0x5566630ffe00 <col:10, col:33> 'unsigned char *' lvalue '='
|   |     |-MemberExpr 0x5566630ffca8 <col:10> 'unsigned char *' lvalue ->_data 0x5566630f6088
|   |     | `-CXXThisExpr 0x5566630ffc98 <col:10> 'Packet *' implicit this
|   |     `-ImplicitCastExpr 0x5566630ffde8 <col:18, col:33> 'unsigned char *' <LValueToRValue>
|   |       `-BinaryOperator 0x5566630ffdc8 <col:18, col:33> 'unsigned char *' lvalue '='
|   |         |-MemberExpr 0x5566630ffce8 <col:18> 'unsigned char *' lvalue ->_tail 0x5566630f60f0
|   |         | `-CXXThisExpr 0x5566630ffcd8 <col:18> 'Packet *' implicit this
|   |         `-ImplicitCastExpr 0x5566630ffdb0 <col:26, col:33> 'unsigned char *' <LValueToRValue>
|   |           `-BinaryOperator 0x5566630ffd90 <col:26, col:33> 'unsigned char *' lvalue '='
|   |             |-MemberExpr 0x5566630ffd28 <col:26> 'unsigned char *' lvalue ->_end 0x5566630f6158
|   |             | `-CXXThisExpr 0x5566630ffd18 <col:26> 'Packet *' implicit this
|   |             `-ImplicitCastExpr 0x5566630ffd78 <col:33> 'unsigned char *' <NullToPointer>
|   |               `-IntegerLiteral 0x5566630ffd58 <col:33> 'int' 0
|   `-BinaryOperator 0x5566630ffed0 <line:112:2, col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x5566630ffe68 <col:2> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x5566630f6218
|     | `-CXXThisExpr 0x5566630ffe58 <col:2> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x5566630ffeb8 <col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <NullToPointer>
|       `-IntegerLiteral 0x5566630ffe98 <col:16> 'int' 0
|-CXXMethodDecl 0x5566630e63d0 <line:141:5, col:109> col:56 push 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x5566630e6340 <col:61, col:70> col:70 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x5566630e6478 <col:20>
| |-OptimizeNoneAttr 0x5566630e64d0 <col:30>
| `-WarnUnusedResultAttr 0x5566630e64f8 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x5566630e65c8 <line:152:5, col:120> col:56 push_mac_header 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x5566630e6538 <col:72, col:81> col:81 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x5566630e6670 <col:20>
| |-OptimizeNoneAttr 0x5566630e66c8 <col:30>
| `-WarnUnusedResultAttr 0x5566630e66f0 <col:101> warn_unused_result ""
|-CXXMethodDecl 0x5566630e6828 <line:171:5, col:76> col:13 nonunique_push 'Packet *(uint32_t)'
| |-ParmVarDecl 0x5566630e6730 <col:28, col:37> col:37 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x5566630e68d0 <col:57> warn_unused_result ""
|-CXXMethodDecl 0x5566630e69d0 <line:187:5, col:62> col:45 pull 'void (uint32_t)'
| |-ParmVarDecl 0x5566630e6940 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x5566630e6a78 <col:20>
| `-OptimizeNoneAttr 0x5566630e6ad0 <col:30>
|-CXXMethodDecl 0x5566630e6b98 <line:213:5, col:73> col:21 put 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x5566630e6b08 <col:25, col:34> col:34 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x5566630e6c40 <col:54> warn_unused_result ""
|-CXXMethodDecl 0x5566630e6d40 <line:230:5, col:75> col:13 nonunique_put 'Packet *(uint32_t)'
| |-ParmVarDecl 0x5566630e6cb0 <col:27, col:36> col:36 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x5566630e6de8 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x5566630e6ee8 <line:245:5, col:62> col:45 take 'void (uint32_t)'
| |-ParmVarDecl 0x5566630e6e58 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x5566630e6f90 <col:20>
| `-OptimizeNoneAttr 0x5566630e6fe8 <col:30>
|-CXXMethodDecl 0x5566630e7178 <line:269:5, col:99> col:13 shift_data 'Packet *(int, bool)'
| |-ParmVarDecl 0x5566630e7028 <col:24, col:28> col:28 offset 'int'
| |-ParmVarDecl 0x5566630e70a0 <col:36, col:59> col:41 free_on_failure 'bool' cinit
| | `-CXXBoolLiteralExpr 0x5566630ff6e8 <col:59> 'bool' true
| `-WarnUnusedResultAttr 0x5566630e7228 <col:80> warn_unused_result ""
|-CXXMethodDecl 0x5566630e7428 <line:271:5, col:71> col:17 shrink_data 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x5566630e72a0 <col:29, col:50> col:50 data 'const unsigned char *'
| `-ParmVarDecl 0x5566630e7318 <col:56, col:65> col:65 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5566630e7638 <line:272:5, col:78> col:17 change_headroom_and_length 'void (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x5566630e74e8 <col:44, col:53> col:53 headroom 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x5566630e7560 <col:63, col:72> col:72 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5566630e7848 <line:274:5, col:40> col:10 copy 'bool (Packet *, int)'
| |-ParmVarDecl 0x5566630e76f8 <col:15, col:23> col:23 p 'Packet *'
| `-ParmVarDecl 0x5566630e7778 <col:26, col:39> col:30 headroom 'int' cinit
|   `-IntegerLiteral 0x5566630ff6f8 <col:39> 'int' 0
|-CXXMethodDecl 0x5566630e7918 <line:279:5, col:34> col:17 has_mac_header 'bool () const' inline
|-CXXMethodDecl 0x5566630e79e0 <line:280:5, col:46> col:33 used mac_header 'const unsigned char *() const' inline
|-CXXMethodDecl 0x5566630e7aa8 <line:281:5, col:36> col:16 mac_header_offset 'int () const' inline
|-CXXMethodDecl 0x5566630e7b68 <line:282:5, col:41> col:21 mac_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x5566630e7c30 <line:283:5, col:29> col:16 mac_length 'int () const' inline
|-CXXMethodDecl 0x5566630e7d78 <line:284:5, col:54> col:17 set_mac_header 'void (const unsigned char *)' inline
| `-ParmVarDecl 0x5566630e7ce8 <col:32, col:53> col:53 p 'const unsigned char *'
|-CXXMethodDecl 0x5566630e7f48 <line:285:5, col:68> col:17 used set_mac_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x5566630e7e38 <col:32, col:53> col:53 p 'const unsigned char *'
| `-ParmVarDecl 0x5566630e7eb0 <col:56, col:65> col:65 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5566630e8018 <line:286:5, col:34> col:17 clear_mac_header 'void ()' inline
|-CXXMethodDecl 0x5566630e80d8 <line:288:5, col:66> col:45 has_network_header 'bool () const'
| |-NoInlineAttr 0x5566630e8178 <col:20>
| `-OptimizeNoneAttr 0x5566630e81d0 <col:30>
|-CXXMethodDecl 0x5566630e8220 <line:289:5, col:78> col:61 used network_header 'const unsigned char *() const'
| |-NoInlineAttr 0x5566630e82c0 <col:20>
| `-OptimizeNoneAttr 0x5566630e8318 <col:30>
|-CXXMethodDecl 0x5566630e8368 <line:290:5, col:40> col:16 used network_header_offset 'int () const' inline
|-CXXMethodDecl 0x5566630e8428 <line:291:5, col:45> col:21 used network_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x5566630e84f0 <line:292:5, col:61> col:44 network_length 'int () const'
| |-NoInlineAttr 0x5566630e8590 <col:20>
| `-OptimizeNoneAttr 0x5566630e85e8 <col:30>
|-CXXMethodDecl 0x5566630e8738 <line:293:5, col:72> col:17 set_network_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x5566630e8628 <col:36, col:57> col:57 p 'const unsigned char *'
| `-ParmVarDecl 0x5566630e86a0 <col:60, col:69> col:69 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5566630e8888 <line:294:5, col:55> col:17 set_network_header_length 'void (uint32_t)' inline
| `-ParmVarDecl 0x5566630e87f8 <col:43, col:52> col:52 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5566630e8960 <line:295:5, col:38> col:17 clear_network_header 'void ()' inline
|-CXXMethodDecl 0x5566630e8a20 <line:297:5, col:68> col:45 has_transport_header 'bool () const'
| |-NoInlineAttr 0x5566630e8ac0 <col:20>
| `-OptimizeNoneAttr 0x5566630e8b18 <col:30>
|-CXXMethodDecl 0x5566630e8b68 <line:298:5, col:80> col:61 used transport_header 'const unsigned char *() const'
| |-NoInlineAttr 0x5566630e8c08 <col:20>
| `-OptimizeNoneAttr 0x5566630e8c60 <col:30>
|-CXXMethodDecl 0x5566630e8cb0 <line:299:5, col:42> col:16 transport_header_offset 'int () const' inline
|-CXXMethodDecl 0x5566630e8d78 <line:300:5, col:63> col:44 transport_length 'int () const'
| |-NoInlineAttr 0x5566630e8e18 <col:20>
| `-OptimizeNoneAttr 0x5566630e8e70 <col:30>
|-CXXMethodDecl 0x5566630e8eb8 <line:301:5, col:40> col:17 clear_transport_header 'void ()' inline
|-CXXMethodDecl 0x5566630e8fd8 <line:304:5, col:46> col:31 ether_header 'const click_ether *() const' inline
|-CXXMethodDecl 0x5566630e9148 <line:305:5, col:57> col:17 set_ether_header 'void (const click_ether *)' inline
| `-ParmVarDecl 0x5566630e9088 <col:34, col:53> col:53 ethh 'const click_ether *'
|-CXXMethodDecl 0x5566630e9238 <line:307:5, col:68> col:56 ip_header 'const click_ip *() const'
| |-NoInlineAttr 0x5566630e92d8 <col:20>
| `-OptimizeNoneAttr 0x5566630e9330 <col:30>
|-CXXMethodDecl 0x5566630e9380 <line:308:5, col:35> col:16 ip_header_offset 'int () const' inline
|-CXXMethodDecl 0x5566630e9440 <line:309:5, col:40> col:21 ip_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x5566630e9678 <line:310:5, col:92> col:45 set_ip_header 'void (const click_ip *, uint32_t)'
| |-ParmVarDecl 0x5566630e94f0 <col:59, col:75> col:75 iph 'const click_ip *'
| |-ParmVarDecl 0x5566630e9568 <col:80, col:89> col:89 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x5566630e9728 <col:20>
| `-OptimizeNoneAttr 0x5566630e9780 <col:30>
|-CXXMethodDecl 0x5566630e9828 <line:312:5, col:70> col:57 ip6_header 'const click_ip6 *() const'
| |-NoInlineAttr 0x5566630e98c8 <col:20>
| `-OptimizeNoneAttr 0x5566630e9920 <col:30>
|-CXXMethodDecl 0x5566630e9970 <line:313:5, col:64> col:44 ip6_header_offset 'int () const'
| |-NoInlineAttr 0x5566630e9a10 <col:20>
| `-OptimizeNoneAttr 0x5566630e9a68 <col:30>
|-CXXMethodDecl 0x5566630e9ab0 <line:314:5, col:69> col:49 ip6_header_length 'uint32_t () const'
| |-NoInlineAttr 0x5566630e9b50 <col:20>
| `-OptimizeNoneAttr 0x5566630e9ba8 <col:30>
|-CXXMethodDecl 0x5566630e9ca8 <line:315:5, col:81> col:45 set_ip6_header 'void (const click_ip6 *)'
| |-ParmVarDecl 0x5566630e9be0 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-NoInlineAttr 0x5566630e9d50 <col:20>
| `-OptimizeNoneAttr 0x5566630e9da8 <col:30>
|-CXXMethodDecl 0x5566630e9f68 <line:316:5, col:95> col:45 set_ip6_header 'void (const click_ip6 *, uint32_t)'
| |-ParmVarDecl 0x5566630e9de0 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-ParmVarDecl 0x5566630e9e58 <col:83, col:92> col:92 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x5566630ea018 <col:20>
| `-OptimizeNoneAttr 0x5566630ea070 <col:30>
|-CXXMethodDecl 0x5566630ea118 <line:318:5, col:44> col:30 used icmp_header 'const click_icmp *() const' inline
|-CXXMethodDecl 0x5566630ea238 <line:319:5, col:42> col:29 used tcp_header 'const click_tcp *() const' inline
|-CXXMethodDecl 0x5566630ea358 <line:320:5, col:42> col:29 used udp_header 'const click_udp *() const' inline
|-AccessSpecDecl 0x5566630ea3f8 <line:333:3, col:10> col:3 private
|-CXXRecordDecl 0x5566630ea420 <line:335:5, col:11> col:11 referenced union Anno
|-CXXMethodDecl 0x5566630ea548 <line:340:5, col:60> col:52 used xanno 'const Packet::Anno *() const'
| |-NoInlineAttr 0x5566630ea5e8 <col:20>
| `-OptimizeNoneAttr 0x5566630ea640 <col:30>
|-CXXMethodDecl 0x5566630ea6e8 <line:341:5, col:52> col:46 used xanno 'Packet::Anno *()'
| |-NoInlineAttr 0x5566630ea788 <col:20>
| `-OptimizeNoneAttr 0x5566630ea7e0 <col:30>
|-AccessSpecDecl 0x5566630ea808 <line:344:3, col:9> col:3 public
|-EnumDecl 0x5566630ea830 <line:349:5, line:351:5> line:349:5
| `-EnumConstantDecl 0x5566630ea930 <line:350:2, col:14> col:2 referenced anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   `-ImplicitCastExpr 0x5566630ea980 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5566630ea910 <col:14> 'int' Int: 48
|       `-IntegerLiteral 0x5566630ea8f0 <col:14> 'int' 48
|-CXXMethodDecl 0x5566630ea9e8 <line:354:5, col:74> col:57 used timestamp_anno 'const Timestamp &() const'
| |-NoInlineAttr 0x5566630eaa88 <col:20>
| `-OptimizeNoneAttr 0x5566630eaae0 <col:30>
|-CXXMethodDecl 0x5566630eab58 <line:356:5, col:66> col:51 used timestamp_anno 'Timestamp &()'
| |-NoInlineAttr 0x5566630eabf8 <col:20>
| `-OptimizeNoneAttr 0x5566630eac50 <col:30>
|-CXXMethodDecl 0x5566630ead18 <line:359:5, col:54> col:17 used set_timestamp_anno 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x5566630eac88 <col:36, col:53> col:53 t 'const Timestamp &'
|-CXXMethodDecl 0x5566630eaeb8 <line:362:5, col:38> col:24 used device_anno 'net_device *() const' inline
|-CXXMethodDecl 0x5566630eb058 <line:364:5, col:48> col:17 used set_device_anno 'void (net_device *)' inline
| `-ParmVarDecl 0x5566630eaf68 <col:33, col:45> col:45 dev 'net_device *'
|-EnumDecl 0x5566630eb100 <line:368:5, line:381:5> line:368:10 referenced PacketType
| |-EnumConstantDecl 0x5566630eb200 <line:369:2, col:9> col:2 HOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x5566630eb5b0 <col:9> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5566630eb1e0 <col:9> 'int' Int: 0
| |     `-IntegerLiteral 0x5566630eb1c0 <col:9> 'int' 0
| |-EnumConstantDecl 0x5566630eb290 <line:370:2, col:14> col:2 BROADCAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x5566630eb5c8 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5566630eb270 <col:14> 'int' Int: 1
| |     `-IntegerLiteral 0x5566630eb250 <col:14> 'int' 1
| |-EnumConstantDecl 0x5566630eb320 <line:372:2, col:14> col:2 MULTICAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x5566630eb5e0 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5566630eb300 <col:14> 'int' Int: 2
| |     `-IntegerLiteral 0x5566630eb2e0 <col:14> 'int' 2
| |-EnumConstantDecl 0x5566630eb3b0 <line:374:2, col:14> col:2 OTHERHOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x5566630eb5f8 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5566630eb390 <col:14> 'int' Int: 3
| |     `-IntegerLiteral 0x5566630eb370 <col:14> 'int' 3
| |-EnumConstantDecl 0x5566630eb440 <line:377:2, col:13> col:2 OUTGOING 'Packet::PacketType'
| | `-ImplicitCastExpr 0x5566630eb610 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5566630eb420 <col:13> 'int' Int: 4
| |     `-IntegerLiteral 0x5566630eb400 <col:13> 'int' 4
| |-EnumConstantDecl 0x5566630eb4d0 <line:379:2, col:13> col:2 LOOPBACK 'Packet::PacketType'
| | `-ImplicitCastExpr 0x5566630eb628 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5566630eb4b0 <col:13> 'int' Int: 5
| |     `-IntegerLiteral 0x5566630eb490 <col:13> 'int' 5
| `-EnumConstantDecl 0x5566630eb560 <line:380:2, col:14> col:2 FASTROUTE 'Packet::PacketType'
|   `-ImplicitCastExpr 0x5566630eb640 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5566630eb540 <col:14> 'int' Int: 6
|       `-IntegerLiteral 0x5566630eb520 <col:14> 'int' 6
|-CXXMethodDecl 0x5566630eb6a8 <line:383:5, col:70> col:51 used packet_type_anno 'Packet::PacketType () const'
| |-NoInlineAttr 0x5566630eb748 <col:20>
| `-OptimizeNoneAttr 0x5566630eb7a0 <col:30>
|-CXXMethodDecl 0x5566630eb898 <line:385:5, col:78> col:45 used set_packet_type_anno 'void (Packet::PacketType)'
| |-ParmVarDecl 0x5566630eb7d8 <col:66, col:77> col:77 t 'Packet::PacketType'
| |-NoInlineAttr 0x5566630eb940 <col:20>
| `-OptimizeNoneAttr 0x5566630eb998 <col:30>
|-CXXMethodDecl 0x5566630eba08 <line:410:5, col:27> col:20 next 'Packet *() const' inline
|-CXXMethodDecl 0x5566630ebb30 <line:412:5, col:26> col:21 next 'Packet *&()' inline
|-CXXMethodDecl 0x5566630ebca8 <line:414:5, col:35> col:17 set_next 'void (Packet *)' inline
| `-ParmVarDecl 0x5566630ebbe0 <col:26, col:34> col:34 p 'Packet *'
|-CXXMethodDecl 0x5566630ebd70 <line:417:5, col:27> col:20 prev 'Packet *() const' inline
|-CXXMethodDecl 0x5566630ebe38 <line:419:5, col:26> col:21 prev 'Packet *&()' inline
|-CXXMethodDecl 0x5566630ebf78 <line:421:5, col:35> col:17 set_prev 'void (Packet *)' inline
| `-ParmVarDecl 0x5566630ebee8 <col:26, col:34> col:34 p 'Packet *'
|-EnumDecl 0x5566630ec020 <line:423:5, line:426:5> line:423:5
| |-EnumConstantDecl 0x5566630ec120 <line:424:2, col:23> col:2 referenced dst_ip_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x5566630ec320 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5566630ec100 <col:23> 'int' Int: 0
| |     `-IntegerLiteral 0x5566630ec0e0 <col:23> 'int' 0
| |-EnumConstantDecl 0x5566630ec1b0 <col:26, col:45> col:26 dst_ip_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x5566630ec338 <col:45> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5566630ec190 <col:45> 'int' Int: 4
| |     `-IntegerLiteral 0x5566630ec170 <col:45> 'int' 4
| |-EnumConstantDecl 0x5566630ec240 <line:425:2, col:24> col:2 dst_ip6_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x5566630ec350 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5566630ec220 <col:24> 'int' Int: 0
| |     `-IntegerLiteral 0x5566630ec200 <col:24> 'int' 0
| `-EnumConstantDecl 0x5566630ec2d0 <col:27, col:47> col:27 dst_ip6_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
|   `-ImplicitCastExpr 0x5566630ec368 <col:47> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5566630ec2b0 <col:47> 'int' Int: 16
|       `-IntegerLiteral 0x5566630ec290 <col:47> 'int' 16
|-CXXMethodDecl 0x5566630ec3c8 <line:431:5, col:36> col:22 dst_ip_anno 'IPAddress () const' inline
|-CXXMethodDecl 0x5566630ec538 <line:436:5, col:75> col:45 set_dst_ip_anno 'void (IPAddress)'
| |-ParmVarDecl 0x5566630ec478 <col:61, col:71> col:71 addr 'IPAddress'
| |-NoInlineAttr 0x5566630ec5e0 <col:20>
| `-OptimizeNoneAttr 0x5566630ec638 <col:30>
|-CXXMethodDecl 0x5566630ec688 <line:441:5, col:36> col:11 anno 'void *()'
| `-CompoundStmt 0x556663100010 <col:18, col:36>
|   `-ReturnStmt 0x556663100000 <col:20, col:33>
|     `-ImplicitCastExpr 0x5566630fffe8 <col:27, col:33> 'void *' <BitCast>
|       `-CXXMemberCallExpr 0x5566630fffc8 <col:27, col:33> 'Packet::Anno *'
|         `-MemberExpr 0x5566630fff98 <col:27> '<bound member function type>' ->xanno 0x5566630ea6e8
|           `-CXXThisExpr 0x5566630fff88 <col:27> 'Packet *' implicit this
|-CXXMethodDecl 0x5566630ec780 <line:444:5, col:48> col:17 anno 'const void *() const'
| `-CompoundStmt 0x556663100120 <col:30, col:48>
|   `-ReturnStmt 0x556663100110 <col:32, col:45>
|     `-ImplicitCastExpr 0x5566631000f8 <col:39, col:45> 'const void *' <BitCast>
|       `-CXXMemberCallExpr 0x5566631000d8 <col:39, col:45> 'const Packet::Anno *'
|         `-MemberExpr 0x5566631000a8 <col:39> '<bound member function type>' ->xanno 0x5566630ea548
|           `-CXXThisExpr 0x556663100098 <col:39> 'const Packet *' implicit this
|-CXXMethodDecl 0x5566630ec868 <line:447:5, col:50> col:14 used anno_u8 'uint8_t *()'
| `-CompoundStmt 0x5566631002b8 <col:24, col:50>
|   `-ReturnStmt 0x5566631002a8 <col:26, col:47>
|     `-UnaryOperator 0x556663100290 <col:33, col:47> 'uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x556663100270 <col:34, col:47> 'uint8_t':'unsigned char' lvalue
|         |-ImplicitCastExpr 0x556663100258 <col:34, col:43> 'uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x556663100208 <col:34, col:43> 'uint8_t [48]' lvalue ->u8 0x5566630f5528
|         |   `-CXXMemberCallExpr 0x5566631001e8 <col:34, col:40> 'Packet::Anno *'
|         |     `-MemberExpr 0x5566631001b8 <col:34> '<bound member function type>' ->xanno 0x5566630ea6e8
|         |       `-CXXThisExpr 0x5566631001a8 <col:34> 'Packet *' implicit this
|         `-IntegerLiteral 0x556663100238 <col:46> 'int' 0
|-CXXMethodDecl 0x5566630ec970 <line:450:5, col:62> col:20 used anno_u8 'const uint8_t *() const'
| `-CompoundStmt 0x556663100488 <col:36, col:62>
|   `-ReturnStmt 0x556663100478 <col:38, col:59>
|     `-UnaryOperator 0x556663100460 <col:45, col:59> 'const uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x556663100440 <col:46, col:59> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x556663100428 <col:46, col:55> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x5566631003a0 <col:46, col:55> 'uint8_t const[48]' lvalue ->u8 0x5566630f5528
|         |   `-CXXMemberCallExpr 0x556663100380 <col:46, col:52> 'const Packet::Anno *'
|         |     `-MemberExpr 0x556663100350 <col:46> '<bound member function type>' ->xanno 0x5566630ea548
|         |       `-CXXThisExpr 0x556663100340 <col:46> 'const Packet *' implicit this
|         `-IntegerLiteral 0x5566631003d0 <col:58> 'int' 0
|-CXXMethodDecl 0x5566630eca88 <line:453:5, col:53> col:15 used anno_u32 'uint32_t *()'
| `-CompoundStmt 0x556663100620 <col:26, col:53>
|   `-ReturnStmt 0x556663100610 <col:28, col:50>
|     `-UnaryOperator 0x5566631005f8 <col:35, col:50> 'uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x5566631005d8 <col:36, col:50> 'uint32_t':'unsigned int' lvalue
|         |-ImplicitCastExpr 0x5566631005c0 <col:36, col:45> 'uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x556663100570 <col:36, col:45> 'uint32_t [12]' lvalue ->u32 0x5566630f5828
|         |   `-CXXMemberCallExpr 0x556663100550 <col:36, col:42> 'Packet::Anno *'
|         |     `-MemberExpr 0x556663100520 <col:36> '<bound member function type>' ->xanno 0x5566630ea6e8
|         |       `-CXXThisExpr 0x556663100510 <col:36> 'Packet *' implicit this
|         `-IntegerLiteral 0x5566631005a0 <col:49> 'int' 0
|-CXXMethodDecl 0x5566630ecba8 <line:456:5, col:65> col:21 used anno_u32 'const uint32_t *() const'
| `-CompoundStmt 0x5566631007f8 <col:38, col:65>
|   `-ReturnStmt 0x5566631007e8 <col:40, col:62>
|     `-UnaryOperator 0x5566631007d0 <col:47, col:62> 'const uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x5566631007b0 <col:48, col:62> 'const uint32_t':'const unsigned int' lvalue
|         |-ImplicitCastExpr 0x556663100798 <col:48, col:57> 'const uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x556663100708 <col:48, col:57> 'uint32_t const[12]' lvalue ->u32 0x5566630f5828
|         |   `-CXXMemberCallExpr 0x5566631006e8 <col:48, col:54> 'const Packet::Anno *'
|         |     `-MemberExpr 0x5566631006b8 <col:48> '<bound member function type>' ->xanno 0x5566630ea548
|         |       `-CXXThisExpr 0x5566631006a8 <col:48> 'const Packet *' implicit this
|         `-IntegerLiteral 0x556663100738 <col:61> 'int' 0
|-CXXMethodDecl 0x5566630ecd58 <line:460:5, line:463:5> line:460:13 used anno_u8 'uint8_t (int) const'
| |-ParmVarDecl 0x5566630ecc60 <col:21, col:25> col:25 used i 'int'
| `-CompoundStmt 0x556663100ec8 <col:34, line:463:5>
|   |-ParenExpr 0x556663100d10 <line:461:2, col:174> 'void'
|   | `-ConditionalOperator 0x556663100ce0 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x556663100948 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x556663100918 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x556663100868 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x556663100850 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x556663100810 <col:23> 'int' lvalue ParmVar 0x5566630ecc60 'i' 'int'
|   |   |   | `-IntegerLiteral 0x556663100830 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5566631008f8 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5566631008c8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x556663100888 <col:33> 'int' lvalue ParmVar 0x5566630ecc60 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x5566631008e0 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x5566631008a8 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5566630ea930 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x5566631009a8 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x556663100988 <col:56> 'int' 0
|   |   `-CallExpr 0x556663100c40 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x556663100c28 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x556663100c08 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x556662c57250 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x556663100c80 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x556663100a98 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x556663100c98 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x556663100ac8 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x556663100cb0 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x556663100b00 <col:135> 'int' 461
|   |     `-ImplicitCastExpr 0x556663100cc8 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x556663100bf0 <col:140, col:154> 'const char [35]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x556663100bd8 <col:154> 'const char [35]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x556663100b98 <col:154> 'const char [35]' lvalue "uint8_t Packet::anno_u8(int) const"
|   `-ReturnStmt 0x556663100eb8 <line:462:2, col:22>
|     `-ImplicitCastExpr 0x556663100ea0 <col:9, col:22> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-ArraySubscriptExpr 0x556663100e80 <col:9, col:22> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x556663100e50 <col:9, col:18> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x556663100e00 <col:9, col:18> 'uint8_t const[48]' lvalue ->u8 0x5566630f5528
|         |   `-CXXMemberCallExpr 0x556663100de0 <col:9, col:15> 'const Packet::Anno *'
|         |     `-MemberExpr 0x556663100db0 <col:9> '<bound member function type>' ->xanno 0x5566630ea548
|         |       `-CXXThisExpr 0x556663100da0 <col:9> 'const Packet *' implicit this
|         `-ImplicitCastExpr 0x556663100e68 <col:21> 'int' <LValueToRValue>
|           `-DeclRefExpr 0x556663100e30 <col:21> 'int' lvalue ParmVar 0x5566630ecc60 'i' 'int'
|-CXXMethodDecl 0x5566630ecfa8 <line:469:5, line:472:5> line:469:10 used set_anno_u8 'void (int, uint8_t)'
| |-ParmVarDecl 0x5566630ece18 <col:22, col:26> col:26 used i 'int'
| |-ParmVarDecl 0x5566630ece90 <col:29, col:37> col:37 used x 'uint8_t':'unsigned char'
| `-CompoundStmt 0x556663101558 <col:40, line:472:5>
|   |-ParenExpr 0x556663101370 <line:470:2, col:174> 'void'
|   | `-ConditionalOperator 0x556663101340 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x556663101020 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x556663100ff0 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x556663100f40 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x556663100f28 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x556663100ee8 <col:23> 'int' lvalue ParmVar 0x5566630ece18 'i' 'int'
|   |   |   | `-IntegerLiteral 0x556663100f08 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x556663100fd0 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x556663100fa0 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x556663100f60 <col:33> 'int' lvalue ParmVar 0x5566630ece18 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x556663100fb8 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x556663100f80 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5566630ea930 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x556663101080 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x556663101060 <col:56> 'int' 0
|   |   `-CallExpr 0x5566631012a0 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x556663101288 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x556663101268 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x556662c57250 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5566631012e0 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5566631010f0 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x5566631012f8 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x556663101120 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x556663101310 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x556663101158 <col:135> 'int' 470
|   |     `-ImplicitCastExpr 0x556663101328 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x556663101250 <col:140, col:154> 'const char [39]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x556663101238 <col:154> 'const char [39]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5566631011f8 <col:154> 'const char [39]' lvalue "void Packet::set_anno_u8(int, uint8_t)"
|   `-BinaryOperator 0x556663101538 <line:471:2, col:19> 'uint8_t':'unsigned char' lvalue '='
|     |-ArraySubscriptExpr 0x5566631014e0 <col:2, col:15> 'uint8_t':'unsigned char' lvalue
|     | |-ImplicitCastExpr 0x5566631014b0 <col:2, col:11> 'uint8_t *' <ArrayToPointerDecay>
|     | | `-MemberExpr 0x556663101460 <col:2, col:11> 'uint8_t [48]' lvalue ->u8 0x5566630f5528
|     | |   `-CXXMemberCallExpr 0x556663101440 <col:2, col:8> 'Packet::Anno *'
|     | |     `-MemberExpr 0x556663101410 <col:2> '<bound member function type>' ->xanno 0x5566630ea6e8
|     | |       `-CXXThisExpr 0x556663101400 <col:2> 'Packet *' implicit this
|     | `-ImplicitCastExpr 0x5566631014c8 <col:14> 'int' <LValueToRValue>
|     |   `-DeclRefExpr 0x556663101490 <col:14> 'int' lvalue ParmVar 0x5566630ece18 'i' 'int'
|     `-ImplicitCastExpr 0x556663101520 <col:19> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-DeclRefExpr 0x556663101500 <col:19> 'uint8_t':'unsigned char' lvalue ParmVar 0x5566630ece90 'x' 'uint8_t':'unsigned char'
|-CXXMethodDecl 0x5566630ed168 <line:479:5, line:485:5> line:479:14 used anno_u16 'uint16_t (int) const'
| |-ParmVarDecl 0x5566630ed070 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x556663101cd8 <col:36, line:485:5>
|   |-ParenExpr 0x556663101a40 <line:480:2, col:182> 'void'
|   | `-ConditionalOperator 0x556663101a10 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5566631016f0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5566631016c0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5566631015d0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5566631015b8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x556663101578 <col:23> 'int' lvalue ParmVar 0x5566630ed070 'i' 'int'
|   |   |   | `-IntegerLiteral 0x556663101598 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5566631016a0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x556663101688 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5566631015f0 <col:33> 'int' lvalue ParmVar 0x5566630ed070 'i' 'int'
|   |   |     `-BinaryOperator 0x556663101668 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x556663101650 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x556663101610 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5566630ea930 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x556663101630 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x556663101750 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x556663101730 <col:60> 'int' 0
|   |   `-CallExpr 0x556663101970 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x556663101958 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x556663101938 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x556662c57250 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5566631019b0 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5566631017c0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x5566631019c8 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5566631017f8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5566631019e0 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x556663101830 <col:143> 'int' 480
|   |     `-ImplicitCastExpr 0x5566631019f8 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x556663101920 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x556663101908 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5566631018c8 <col:162> 'const char [37]' lvalue "uint16_t Packet::anno_u16(int) const"
|   `-ReturnStmt 0x556663101cc8 <line:484:2, col:75>
|     `-ImplicitCastExpr 0x556663101cb0 <col:9, col:75> 'click_aliasable_uint16_t':'unsigned short' <LValueToRValue>
|       `-UnaryOperator 0x556663101c98 <col:9, col:75> 'const click_aliasable_uint16_t':'const unsigned short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x556663101c68 <col:10, col:75> 'const click_aliasable_uint16_t *' reinterpret_cast<const click_aliasable_uint16_t *> <BitCast>
|           `-BinaryOperator 0x556663101c08 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x556663101bd8 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x556663101b50 <col:61, col:70> 'char const[48]' lvalue ->c 0x5566630f5400
|             |   `-CXXMemberCallExpr 0x556663101b30 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x556663101b00 <col:61> '<bound member function type>' ->xanno 0x5566630ea548
|             |       `-CXXThisExpr 0x556663101af0 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x556663101bf0 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x556663101b80 <col:74> 'int' lvalue ParmVar 0x5566630ed070 'i' 'int'
|-CXXMethodDecl 0x5566630ed3b8 <line:494:5, line:500:5> line:494:10 used set_anno_u16 'void (int, uint16_t)'
| |-ParmVarDecl 0x5566630ed228 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x5566630ed2a0 <col:30, col:39> col:39 used x 'uint16_t':'unsigned short'
| `-CompoundStmt 0x556663102428 <col:42, line:500:5>
|   |-ParenExpr 0x5566631021c0 <line:495:2, col:182> 'void'
|   | `-ConditionalOperator 0x556663102190 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x556663101e70 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x556663101e40 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x556663101d50 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x556663101d38 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x556663101cf8 <col:23> 'int' lvalue ParmVar 0x5566630ed228 'i' 'int'
|   |   |   | `-IntegerLiteral 0x556663101d18 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x556663101e20 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x556663101e08 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x556663101d70 <col:33> 'int' lvalue ParmVar 0x5566630ed228 'i' 'int'
|   |   |     `-BinaryOperator 0x556663101de8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x556663101dd0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x556663101d90 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5566630ea930 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x556663101db0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x556663101ed0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x556663101eb0 <col:60> 'int' 0
|   |   `-CallExpr 0x5566631020f0 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5566631020d8 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5566631020b8 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x556662c57250 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x556663102130 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x556663101f40 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x556663102148 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x556663101f78 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x556663102160 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x556663101fb0 <col:143> 'int' 495
|   |     `-ImplicitCastExpr 0x556663102178 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5566631020a0 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x556663102088 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x556663102048 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u16(int, uint16_t)"
|   `-BinaryOperator 0x556663102408 <line:499:2, col:66> 'click_aliasable_uint16_t':'unsigned short' lvalue '='
|     |-UnaryOperator 0x5566631023b8 <col:2, col:62> 'click_aliasable_uint16_t':'unsigned short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x556663102388 <col:3, col:62> 'click_aliasable_uint16_t *' reinterpret_cast<click_aliasable_uint16_t *> <BitCast>
|     |   `-BinaryOperator 0x556663102330 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x556663102300 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x5566631022b0 <col:48, col:57> 'char [48]' lvalue ->c 0x5566630f5400
|     |     |   `-CXXMemberCallExpr 0x556663102290 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x556663102260 <col:48> '<bound member function type>' ->xanno 0x5566630ea6e8
|     |     |       `-CXXThisExpr 0x556663102250 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x556663102318 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x5566631022e0 <col:61> 'int' lvalue ParmVar 0x5566630ed228 'i' 'int'
|     `-ImplicitCastExpr 0x5566631023f0 <col:66> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x5566631023d0 <col:66> 'uint16_t':'unsigned short' lvalue ParmVar 0x5566630ed2a0 'x' 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x5566630ed578 <line:507:5, line:513:5> line:507:13 anno_s16 'int16_t (int) const'
| |-ParmVarDecl 0x5566630ed480 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x556663102b88 <col:35, line:513:5>
|   |-ParenExpr 0x556663102898 <line:508:2, col:182> 'void'
|   | `-ConditionalOperator 0x556663102868 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5566631025c0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x556663102590 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5566631024a0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x556663102488 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x556663102448 <col:23> 'int' lvalue ParmVar 0x5566630ed480 'i' 'int'
|   |   |   | `-IntegerLiteral 0x556663102468 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x556663102570 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x556663102558 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5566631024c0 <col:33> 'int' lvalue ParmVar 0x5566630ed480 'i' 'int'
|   |   |     `-BinaryOperator 0x556663102538 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x556663102520 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5566631024e0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5566630ea930 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x556663102500 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x556663102620 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x556663102600 <col:60> 'int' 0
|   |   `-CallExpr 0x5566631027c8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5566631027b0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x556663102790 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x556662c57250 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x556663102808 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x556663102690 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x556663102820 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5566631026c8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x556663102838 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x556663102700 <col:143> 'int' 508
|   |     `-ImplicitCastExpr 0x556663102850 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x556663102778 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x556663102760 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x556663102720 <col:162> 'const char [36]' lvalue "int16_t Packet::anno_s16(int) const"
|   `-ReturnStmt 0x556663102b78 <line:512:2, col:74>
|     `-ImplicitCastExpr 0x556663102b60 <col:9, col:74> 'click_aliasable_int16_t':'short' <LValueToRValue>
|       `-UnaryOperator 0x556663102b48 <col:9, col:74> 'const click_aliasable_int16_t':'const short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x556663102b18 <col:10, col:74> 'const click_aliasable_int16_t *' reinterpret_cast<const click_aliasable_int16_t *> <BitCast>
|           `-BinaryOperator 0x556663102a90 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x556663102a60 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x556663102a10 <col:60, col:69> 'char const[48]' lvalue ->c 0x5566630f5400
|             |   `-CXXMemberCallExpr 0x5566631029f0 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x5566631029c0 <col:60> '<bound member function type>' ->xanno 0x5566630ea548
|             |       `-CXXThisExpr 0x5566631029b0 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x556663102a78 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x556663102a40 <col:73> 'int' lvalue ParmVar 0x5566630ed480 'i' 'int'
|-CXXMethodDecl 0x5566630ed7c8 <line:522:5, line:528:5> line:522:10 set_anno_s16 'void (int, int16_t)'
| |-ParmVarDecl 0x5566630ed638 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x5566630ed6b0 <col:30, col:38> col:38 used x 'int16_t':'short'
| `-CompoundStmt 0x5566631032a8 <col:41, line:528:5>
|   |-ParenExpr 0x556663103030 <line:523:2, col:182> 'void'
|   | `-ConditionalOperator 0x556663103000 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x556663102d20 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x556663102cf0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x556663102c00 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x556663102be8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x556663102ba8 <col:23> 'int' lvalue ParmVar 0x5566630ed638 'i' 'int'
|   |   |   | `-IntegerLiteral 0x556663102bc8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x556663102cd0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x556663102cb8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x556663102c20 <col:33> 'int' lvalue ParmVar 0x5566630ed638 'i' 'int'
|   |   |     `-BinaryOperator 0x556663102c98 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x556663102c80 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x556663102c40 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5566630ea930 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x556663102c60 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x556663102d80 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x556663102d60 <col:60> 'int' 0
|   |   `-CallExpr 0x556663102f60 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x556663102f48 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x556663102f28 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x556662c57250 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x556663102fa0 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x556663102df0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x556663102fb8 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x556663102e28 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x556663102fd0 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x556663102e60 <col:143> 'int' 523
|   |     `-ImplicitCastExpr 0x556663102fe8 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x556663102f10 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x556663102ef8 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x556663102eb8 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s16(int, int16_t)"
|   `-BinaryOperator 0x556663103288 <line:527:2, col:65> 'click_aliasable_int16_t':'short' lvalue '='
|     |-UnaryOperator 0x556663103238 <col:2, col:61> 'click_aliasable_int16_t':'short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x556663103208 <col:3, col:61> 'click_aliasable_int16_t *' reinterpret_cast<click_aliasable_int16_t *> <BitCast>
|     |   `-BinaryOperator 0x5566631031b0 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x556663103170 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x556663103120 <col:47, col:56> 'char [48]' lvalue ->c 0x5566630f5400
|     |     |   `-CXXMemberCallExpr 0x556663103100 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x5566631030d0 <col:47> '<bound member function type>' ->xanno 0x5566630ea6e8
|     |     |       `-CXXThisExpr 0x5566631030c0 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x556663103188 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x556663103150 <col:60> 'int' lvalue ParmVar 0x5566630ed638 'i' 'int'
|     `-ImplicitCastExpr 0x556663103270 <col:65> 'int16_t':'short' <LValueToRValue>
|       `-DeclRefExpr 0x556663103250 <col:65> 'int16_t':'short' lvalue ParmVar 0x5566630ed6b0 'x' 'int16_t':'short'
|-CXXMethodDecl 0x5566630ed988 <line:535:5, line:541:5> line:535:14 used anno_u32 'uint32_t (int) const'
| |-ParmVarDecl 0x5566630ed890 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x556663103978 <col:36, line:541:5>
|   |-ParenExpr 0x556663103718 <line:536:2, col:182> 'void'
|   | `-ConditionalOperator 0x5566631036e8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x556663103440 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x556663103410 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x556663103320 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x556663103308 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5566631032c8 <col:23> 'int' lvalue ParmVar 0x5566630ed890 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5566631032e8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5566631033f0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5566631033d8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x556663103340 <col:33> 'int' lvalue ParmVar 0x5566630ed890 'i' 'int'
|   |   |     `-BinaryOperator 0x5566631033b8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5566631033a0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x556663103360 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5566630ea930 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x556663103380 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x5566631034a0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x556663103480 <col:60> 'int' 0
|   |   `-CallExpr 0x556663103648 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x556663103630 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x556663103610 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x556662c57250 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x556663103688 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x556663103510 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x5566631036a0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x556663103548 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5566631036b8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x556663103580 <col:143> 'int' 536
|   |     `-ImplicitCastExpr 0x5566631036d0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5566631035f8 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5566631035e0 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5566631035a0 <col:162> 'const char [37]' lvalue "uint32_t Packet::anno_u32(int) const"
|   `-ReturnStmt 0x556663103968 <line:540:2, col:75>
|     `-ImplicitCastExpr 0x556663103950 <col:9, col:75> 'click_aliasable_uint32_t':'unsigned int' <LValueToRValue>
|       `-UnaryOperator 0x556663103938 <col:9, col:75> 'const click_aliasable_uint32_t':'const unsigned int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x556663103908 <col:10, col:75> 'const click_aliasable_uint32_t *' reinterpret_cast<const click_aliasable_uint32_t *> <BitCast>
|           `-BinaryOperator 0x5566631038b0 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x556663103880 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x556663103830 <col:61, col:70> 'char const[48]' lvalue ->c 0x5566630f5400
|             |   `-CXXMemberCallExpr 0x556663103810 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x5566631037e0 <col:61> '<bound member function type>' ->xanno 0x5566630ea548
|             |       `-CXXThisExpr 0x5566631037d0 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x556663103898 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x556663103860 <col:74> 'int' lvalue ParmVar 0x5566630ed890 'i' 'int'
|-CXXMethodDecl 0x5566630edb58 <line:550:5, col:75> col:45 used set_anno_u32 'void (int, uint32_t)'
| |-ParmVarDecl 0x5566630eda48 <col:58, col:62> col:62 i 'int'
| |-ParmVarDecl 0x5566630edac0 <col:65, col:74> col:74 x 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x5566630edc08 <col:20>
| `-OptimizeNoneAttr 0x5566630edc60 <col:30>
|-CXXMethodDecl 0x5566630edd98 <line:556:5, line:562:5> line:556:13 used anno_s32 'int32_t (int) const'
| |-ParmVarDecl 0x5566630edca0 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x556663104048 <col:35, line:562:5>
|   |-ParenExpr 0x556663103de8 <line:557:2, col:182> 'void'
|   | `-ConditionalOperator 0x556663103db8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x556663103b10 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x556663103ae0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5566631039f0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5566631039d8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x556663103998 <col:23> 'int' lvalue ParmVar 0x5566630edca0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5566631039b8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x556663103ac0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x556663103aa8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x556663103a10 <col:33> 'int' lvalue ParmVar 0x5566630edca0 'i' 'int'
|   |   |     `-BinaryOperator 0x556663103a88 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x556663103a70 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x556663103a30 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5566630ea930 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x556663103a50 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x556663103b70 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x556663103b50 <col:60> 'int' 0
|   |   `-CallExpr 0x556663103d18 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x556663103d00 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x556663103ce0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x556662c57250 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x556663103d58 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x556663103be0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x556663103d70 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x556663103c18 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x556663103d88 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x556663103c50 <col:143> 'int' 557
|   |     `-ImplicitCastExpr 0x556663103da0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x556663103cc8 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x556663103cb0 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x556663103c70 <col:162> 'const char [36]' lvalue "int32_t Packet::anno_s32(int) const"
|   `-ReturnStmt 0x556663104038 <line:561:2, col:74>
|     `-ImplicitCastExpr 0x556663104020 <col:9, col:74> 'click_aliasable_int32_t':'int' <LValueToRValue>
|       `-UnaryOperator 0x556663104008 <col:9, col:74> 'const click_aliasable_int32_t':'const int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x556663103fd8 <col:10, col:74> 'const click_aliasable_int32_t *' reinterpret_cast<const click_aliasable_int32_t *> <BitCast>
|           `-BinaryOperator 0x556663103f80 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x556663103f50 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x556663103f00 <col:60, col:69> 'char const[48]' lvalue ->c 0x5566630f5400
|             |   `-CXXMemberCallExpr 0x556663103ee0 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x556663103eb0 <col:60> '<bound member function type>' ->xanno 0x5566630ea548
|             |       `-CXXThisExpr 0x556663103ea0 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x556663103f68 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x556663103f30 <col:73> 'int' lvalue ParmVar 0x5566630edca0 'i' 'int'
|-CXXMethodDecl 0x5566630edfa8 <line:571:5, line:577:5> line:571:10 used set_anno_s32 'void (int, int32_t)'
| |-ParmVarDecl 0x5566630ede58 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x5566630eded0 <col:30, col:38> col:38 used x 'int32_t':'int'
| `-CompoundStmt 0x556663104728 <col:41, line:577:5>
|   |-ParenExpr 0x5566631044b8 <line:572:2, col:182> 'void'
|   | `-ConditionalOperator 0x556663104488 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5566631041e0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5566631041b0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5566631040c0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5566631040a8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x556663104068 <col:23> 'int' lvalue ParmVar 0x5566630ede58 'i' 'int'
|   |   |   | `-IntegerLiteral 0x556663104088 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x556663104190 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x556663104178 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5566631040e0 <col:33> 'int' lvalue ParmVar 0x5566630ede58 'i' 'int'
|   |   |     `-BinaryOperator 0x556663104158 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x556663104140 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x556663104100 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5566630ea930 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x556663104120 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x556663104240 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x556663104220 <col:60> 'int' 0
|   |   `-CallExpr 0x5566631043e8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5566631043d0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5566631043b0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x556662c57250 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x556663104428 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5566631042b0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x556663104440 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5566631042e8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x556663104458 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x556663104320 <col:143> 'int' 572
|   |     `-ImplicitCastExpr 0x556663104470 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x556663104398 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x556663104380 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x556663104340 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s32(int, int32_t)"
|   `-BinaryOperator 0x556663104708 <line:576:2, col:65> 'click_aliasable_int32_t':'int' lvalue '='
|     |-UnaryOperator 0x5566631046b8 <col:2, col:61> 'click_aliasable_int32_t':'int' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x556663104688 <col:3, col:61> 'click_aliasable_int32_t *' reinterpret_cast<click_aliasable_int32_t *> <BitCast>
|     |   `-BinaryOperator 0x556663104628 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x5566631045f8 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x5566631045a8 <col:47, col:56> 'char [48]' lvalue ->c 0x5566630f5400
|     |     |   `-CXXMemberCallExpr 0x556663104588 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x556663104558 <col:47> '<bound member function type>' ->xanno 0x5566630ea6e8
|     |     |       `-CXXThisExpr 0x556663104548 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x556663104610 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x5566631045d8 <col:60> 'int' lvalue ParmVar 0x5566630ede58 'i' 'int'
|     `-ImplicitCastExpr 0x5566631046f0 <col:65> 'int32_t':'int' <LValueToRValue>
|       `-DeclRefExpr 0x5566631046d0 <col:65> 'int32_t':'int' lvalue ParmVar 0x5566630eded0 'x' 'int32_t':'int'
|-CXXMethodDecl 0x5566630ee168 <line:585:5, line:591:5> line:585:14 used anno_u64 'uint64_t (int) const'
| |-ParmVarDecl 0x5566630ee070 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x556663104e58 <col:36, line:591:5>
|   |-ParenExpr 0x556663104b98 <line:586:2, col:182> 'void'
|   | `-ConditionalOperator 0x556663104b68 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5566631048c0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x556663104890 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5566631047a0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x556663104788 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x556663104748 <col:23> 'int' lvalue ParmVar 0x5566630ee070 'i' 'int'
|   |   |   | `-IntegerLiteral 0x556663104768 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x556663104870 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x556663104858 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5566631047c0 <col:33> 'int' lvalue ParmVar 0x5566630ee070 'i' 'int'
|   |   |     `-BinaryOperator 0x556663104838 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x556663104820 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5566631047e0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5566630ea930 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x556663104800 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x556663104920 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x556663104900 <col:60> 'int' 0
|   |   `-CallExpr 0x556663104ac8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x556663104ab0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x556663104a90 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x556662c57250 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x556663104b08 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x556663104990 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x556663104b20 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5566631049c8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x556663104b38 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x556663104a00 <col:143> 'int' 586
|   |     `-ImplicitCastExpr 0x556663104b50 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x556663104a78 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x556663104a60 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x556663104a20 <col:162> 'const char [37]' lvalue "uint64_t Packet::anno_u64(int) const"
|   `-ReturnStmt 0x556663104e48 <line:590:2, col:75>
|     `-ImplicitCastExpr 0x556663104e30 <col:9, col:75> 'click_aliasable_uint64_t':'unsigned long' <LValueToRValue>
|       `-UnaryOperator 0x556663104e18 <col:9, col:75> 'const click_aliasable_uint64_t':'const unsigned long' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x556663104de8 <col:10, col:75> 'const click_aliasable_uint64_t *' reinterpret_cast<const click_aliasable_uint64_t *> <BitCast>
|           `-BinaryOperator 0x556663104d60 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x556663104d30 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x556663104ce0 <col:61, col:70> 'char const[48]' lvalue ->c 0x5566630f5400
|             |   `-CXXMemberCallExpr 0x556663104cc0 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x556663104c90 <col:61> '<bound member function type>' ->xanno 0x5566630ea548
|             |       `-CXXThisExpr 0x556663104c80 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x556663104d48 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x556663104d10 <col:74> 'int' lvalue ParmVar 0x5566630ee070 'i' 'int'
|-CXXMethodDecl 0x5566630ee3b8 <line:600:5, line:606:5> line:600:10 used set_anno_u64 'void (int, uint64_t)'
| |-ParmVarDecl 0x5566630ee228 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x5566630ee2a0 <col:30, col:39> col:39 used x 'uint64_t':'unsigned long'
| `-CompoundStmt 0x556663105538 <col:42, line:606:5>
|   |-ParenExpr 0x5566631052c8 <line:601:2, col:182> 'void'
|   | `-ConditionalOperator 0x556663105298 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x556663104ff0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x556663104fc0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x556663104ed0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x556663104eb8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x556663104e78 <col:23> 'int' lvalue ParmVar 0x5566630ee228 'i' 'int'
|   |   |   | `-IntegerLiteral 0x556663104e98 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x556663104fa0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x556663104f88 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x556663104ef0 <col:33> 'int' lvalue ParmVar 0x5566630ee228 'i' 'int'
|   |   |     `-BinaryOperator 0x556663104f68 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x556663104f50 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x556663104f10 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5566630ea930 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x556663104f30 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x556663105050 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x556663105030 <col:60> 'int' 0
|   |   `-CallExpr 0x5566631051f8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5566631051e0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5566631051c0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x556662c57250 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x556663105238 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5566631050c0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x556663105250 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5566631050f8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x556663105268 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x556663105130 <col:143> 'int' 601
|   |     `-ImplicitCastExpr 0x556663105280 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5566631051a8 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x556663105190 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x556663105150 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u64(int, uint64_t)"
|   `-BinaryOperator 0x556663105518 <line:605:2, col:66> 'click_aliasable_uint64_t':'unsigned long' lvalue '='
|     |-UnaryOperator 0x5566631054c8 <col:2, col:62> 'click_aliasable_uint64_t':'unsigned long' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x556663105498 <col:3, col:62> 'click_aliasable_uint64_t *' reinterpret_cast<click_aliasable_uint64_t *> <BitCast>
|     |   `-BinaryOperator 0x556663105438 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x556663105408 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x5566631053b8 <col:48, col:57> 'char [48]' lvalue ->c 0x5566630f5400
|     |     |   `-CXXMemberCallExpr 0x556663105398 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x556663105368 <col:48> '<bound member function type>' ->xanno 0x5566630ea6e8
|     |     |       `-CXXThisExpr 0x556663105358 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x556663105420 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x5566631053e8 <col:61> 'int' lvalue ParmVar 0x5566630ee228 'i' 'int'
|     `-ImplicitCastExpr 0x556663105500 <col:66> 'uint64_t':'unsigned long' <LValueToRValue>
|       `-DeclRefExpr 0x5566631054e0 <col:66> 'uint64_t':'unsigned long' lvalue ParmVar 0x5566630ee2a0 'x' 'uint64_t':'unsigned long'
|-CXXMethodDecl 0x5566630ee550 <line:614:5, line:620:5> line:614:11 anno_ptr 'void *(int) const'
| |-ParmVarDecl 0x5566630ee480 <col:20, col:24> col:24 used i 'int'
| `-CompoundStmt 0x556663105da8 <col:33, line:620:5>
|   |-ParenExpr 0x556663105b20 <line:615:2, col:220> 'void'
|   | `-ConditionalOperator 0x556663105af0 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x556663105740 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x556663105710 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5566631055b0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x556663105598 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x556663105558 <col:23> 'int' lvalue ParmVar 0x5566630ee480 'i' 'int'
|   |   |   | `-IntegerLiteral 0x556663105578 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5566631056f0 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x5566631056d8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5566631055d0 <col:33> 'int' lvalue ParmVar 0x5566630ee480 'i' 'int'
|   |   |     `-BinaryOperator 0x5566631056b8 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5566631056a0 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5566631055f0 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5566630ea930 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x556663105678 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x556663105660 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x556663105628 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x5566631057a0 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x556663105780 <col:79> 'int' 0
|   |   `-CallExpr 0x556663105a50 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x556663105a38 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x556663105a18 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x556662c57250 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x556663105a90 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x556663105888 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x556663105aa8 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5566631058d0 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x556663105ac0 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x556663105908 <col:181> 'int' 615
|   |     `-ImplicitCastExpr 0x556663105ad8 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x556663105a00 <col:186, col:200> 'const char [34]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5566631059e8 <col:200> 'const char [34]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5566631059a8 <col:200> 'const char [34]' lvalue "void *Packet::anno_ptr(int) const"
|   `-ReturnStmt 0x556663105d98 <line:619:2, col:81>
|     `-ImplicitCastExpr 0x556663105d80 <col:9, col:81> 'click_aliasable_void_pointer_t':'void *' <LValueToRValue>
|       `-UnaryOperator 0x556663105d68 <col:9, col:81> 'const click_aliasable_void_pointer_t':'void *const' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x556663105d38 <col:10, col:81> 'const click_aliasable_void_pointer_t *' reinterpret_cast<const click_aliasable_void_pointer_t *> <BitCast>
|           `-BinaryOperator 0x556663105cb0 <col:67, col:80> 'const char *' '+'
|             |-ImplicitCastExpr 0x556663105c80 <col:67, col:76> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x556663105c30 <col:67, col:76> 'char const[48]' lvalue ->c 0x5566630f5400
|             |   `-CXXMemberCallExpr 0x556663105c10 <col:67, col:73> 'const Packet::Anno *'
|             |     `-MemberExpr 0x556663105be0 <col:67> '<bound member function type>' ->xanno 0x5566630ea548
|             |       `-CXXThisExpr 0x556663105bd0 <col:67> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x556663105c98 <col:80> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x556663105c60 <col:80> 'int' lvalue ParmVar 0x5566630ee480 'i' 'int'
|-CXXMethodDecl 0x5566630ee768 <line:629:5, line:635:5> line:629:10 set_anno_ptr 'void (int, const void *)'
| |-ParmVarDecl 0x5566630ee610 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x5566630ee690 <col:30, col:42> col:42 used x 'const void *'
| `-CompoundStmt 0x5566631065d0 <col:45, line:635:5>
|   |-ParenExpr 0x556663106318 <line:630:2, col:220> 'void'
|   | `-ConditionalOperator 0x5566631062e8 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x556663105fb0 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x556663105f80 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x556663105e20 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x556663105e08 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x556663105dc8 <col:23> 'int' lvalue ParmVar 0x5566630ee610 'i' 'int'
|   |   |   | `-IntegerLiteral 0x556663105de8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x556663105f60 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x556663105f48 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x556663105e40 <col:33> 'int' lvalue ParmVar 0x5566630ee610 'i' 'int'
|   |   |     `-BinaryOperator 0x556663105f28 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x556663105f10 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x556663105e60 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5566630ea930 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x556663105ee8 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x556663105ed0 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x556663105e98 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x556663106010 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x556663105ff0 <col:79> 'int' 0
|   |   `-CallExpr 0x556663106248 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x556663106230 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x556663106210 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x556662c57250 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x556663106288 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x556663106080 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x5566631062a0 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5566631060c8 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5566631062b8 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x556663106100 <col:181> 'int' 630
|   |     `-ImplicitCastExpr 0x5566631062d0 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5566631061f8 <col:186, col:200> 'const char [45]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5566631061e0 <col:200> 'const char [45]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x556663106198 <col:200> 'const char [45]' lvalue "void Packet::set_anno_ptr(int, const void *)"
|   `-BinaryOperator 0x5566631065b0 <line:634:2, col:92> 'click_aliasable_void_pointer_t':'void *' lvalue '='
|     |-UnaryOperator 0x556663106518 <col:2, col:68> 'click_aliasable_void_pointer_t':'void *' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x5566631064e8 <col:3, col:68> 'click_aliasable_void_pointer_t *' reinterpret_cast<click_aliasable_void_pointer_t *> <BitCast>
|     |   `-BinaryOperator 0x556663106488 <col:54, col:67> 'char *' '+'
|     |     |-ImplicitCastExpr 0x556663106458 <col:54, col:63> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x556663106408 <col:54, col:63> 'char [48]' lvalue ->c 0x5566630f5400
|     |     |   `-CXXMemberCallExpr 0x5566631063e8 <col:54, col:60> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x5566631063b8 <col:54> '<bound member function type>' ->xanno 0x5566630ea6e8
|     |     |       `-CXXThisExpr 0x5566631063a8 <col:54> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x556663106470 <col:67> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x556663106438 <col:67> 'int' lvalue ParmVar 0x5566630ee610 'i' 'int'
|     `-CXXConstCastExpr 0x556663106580 <col:72, col:92> 'void *' const_cast<void *> <NoOp>
|       `-ImplicitCastExpr 0x556663106568 <col:91> 'const void *' <LValueToRValue> part_of_explicit_cast
|         `-DeclRefExpr 0x556663106530 <col:91> 'const void *' lvalue ParmVar 0x5566630ee690 'x' 'const void *'
|-CXXMethodDecl 0x5566630ee838 <line:638:5, line:640:5> line:638:20 data_packet 'Packet *()' inline
| `-CompoundStmt 0x556663106658 <col:34, line:640:5>
|   `-ReturnStmt 0x556663106648 <line:639:9, col:16>
|     `-ImplicitCastExpr 0x556663106630 <col:16> 'Packet *' <LValueToRValue>
|       `-MemberExpr 0x556663106600 <col:16> 'Packet *' lvalue ->_data_packet 0x5566630f5fb8
|         `-CXXThisExpr 0x5566631065f0 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x5566630ee978 <line:643:5, col:50> col:17 used clear_annotations 'void (bool)' inline
| `-ParmVarDecl 0x5566630ee8e8 <col:35, col:46> col:40 all 'bool' cinit
|   `-CXXBoolLiteralExpr 0x5566630ff718 <col:46> 'bool' true
|-CXXMethodDecl 0x5566630eeaf8 <line:644:5, col:48> col:17 copy_annotations 'void (const Packet *)' inline
| `-ParmVarDecl 0x5566630eea30 <col:34, col:47> col:48 'const Packet *'
|-EnumDecl 0x5566630eeba0 <line:648:5, line:660:5> line:648:5
| |-DeprecatedAttr 0x5566630ef350 <line:660:22> "" ""
| |-EnumConstantDecl 0x5566630eeca0 <line:649:2, col:21> col:2 DEFAULT_HEADROOM 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5566630ef3c0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5566630eec80 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 28
| |     `-DeclRefExpr 0x5566630eec60 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x5566630e3e00 'default_headroom' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x5566630eed30 <line:650:2, col:22> col:2 MIN_BUFFER_LENGTH 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5566630ef3d8 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5566630eed10 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 64
| |     `-DeclRefExpr 0x5566630eecf0 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x5566630e3e90 'min_buffer_length' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x5566630eedc0 <line:651:2, col:21> col:2 referenced addr_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5566630ef3f0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5566630eeda0 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x5566630eed80 <col:21> 'int' 0
| |-EnumConstantDecl 0x5566630eee50 <line:652:2, col:19> col:2 referenced addr_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5566630ef408 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5566630eee30 <col:19> 'int' Int: 16
| |     `-IntegerLiteral 0x5566630eee10 <col:19> 'int' 16
| |-EnumConstantDecl 0x5566630eeee0 <line:653:2, col:21> col:2 referenced user_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5566630ef420 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5566630eeec0 <col:21> 'int' Int: 16
| |     `-IntegerLiteral 0x5566630eeea0 <col:21> 'int' 16
| |-EnumConstantDecl 0x5566630eef70 <line:654:2, col:19> col:2 referenced user_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5566630ef438 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5566630eef50 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x5566630eef30 <col:19> 'int' 32
| |-EnumConstantDecl 0x5566630ef000 <line:655:2, col:19> col:2 ADDR_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5566630ef450 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5566630eefe0 <col:19> 'int' Int: 16
| |     `-DeclRefExpr 0x5566630eefc0 <col:19> 'int' EnumConstant 0x5566630eee50 'addr_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x5566630ef090 <line:656:2, col:19> col:2 referenced USER_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5566630ef468 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5566630ef070 <col:19> 'int' Int: 32
| |     `-DeclRefExpr 0x5566630ef050 <col:19> 'int' EnumConstant 0x5566630eef70 'user_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x5566630ef160 <line:657:2, col:40> col:2 USER_ANNO_U16_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5566630ef480 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5566630ef140 <col:23, col:40> 'int' Int: 16
| |     `-BinaryOperator 0x5566630ef120 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x5566630ef0e0 <col:23> 'int' EnumConstant 0x5566630ef090 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x5566630ef100 <col:40> 'int' 2
| |-EnumConstantDecl 0x5566630ef230 <line:658:2, col:40> col:2 USER_ANNO_U32_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5566630ef498 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5566630ef210 <col:23, col:40> 'int' Int: 8
| |     `-BinaryOperator 0x5566630ef1f0 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x5566630ef1b0 <col:23> 'int' EnumConstant 0x5566630ef090 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x5566630ef1d0 <col:40> 'int' 4
| `-EnumConstantDecl 0x5566630ef300 <line:659:2, col:40> col:2 USER_ANNO_U64_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|   `-ImplicitCastExpr 0x5566630ef4b0 <col:23, col:40> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5566630ef2e0 <col:23, col:40> 'int' Int: 4
|       `-BinaryOperator 0x5566630ef2c0 <col:23, col:40> 'int' '/'
|         |-DeclRefExpr 0x5566630ef280 <col:23> 'int' EnumConstant 0x5566630ef090 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|         `-IntegerLiteral 0x5566630ef2a0 <col:40> 'int' 8
|-CXXMethodDecl 0x5566630ef4f0 <line:661:5, col:79> col:33 buffer_data 'const unsigned char *() const' inline
| `-DeprecatedAttr 0x5566630ef590 <col:68> "" ""
|-CXXMethodDecl 0x5566630ef628 <line:662:5, col:56> col:18 addr_anno 'void *()' inline
| `-DeprecatedAttr 0x5566630ef6c8 <col:45> "" ""
|-CXXMethodDecl 0x5566630ef760 <line:663:5, col:68> col:24 addr_anno 'const void *() const' inline
| `-DeprecatedAttr 0x5566630ef800 <col:57> "" ""
|-CXXMethodDecl 0x5566630ef898 <line:664:5, col:56> col:18 user_anno 'void *()' inline
| `-DeprecatedAttr 0x5566630ef938 <col:45> "" ""
|-CXXMethodDecl 0x5566630ef9d0 <line:665:5, col:68> col:24 user_anno 'const void *() const' inline
| `-DeprecatedAttr 0x5566630efa70 <col:57> "" ""
|-CXXMethodDecl 0x5566630efb00 <line:666:5, col:62> col:21 user_anno_u8 'uint8_t *()' inline
| `-DeprecatedAttr 0x5566630efba0 <col:51> "" ""
|-CXXMethodDecl 0x5566630efc30 <line:667:5, col:74> col:27 user_anno_u8 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x5566630efcd0 <col:63> "" ""
|-CXXMethodDecl 0x5566630efd60 <line:668:5, col:64> col:22 user_anno_u32 'uint32_t *()' inline
| `-DeprecatedAttr 0x5566630efe00 <col:53> "" ""
|-CXXMethodDecl 0x5566630efe90 <line:669:5, col:76> col:28 user_anno_u32 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x5566630eff30 <col:65> "" ""
|-CXXMethodDecl 0x5566630f0048 <line:670:5, col:72> col:20 user_anno_u8 'uint8_t (int) const' inline
| |-ParmVarDecl 0x5566630effb8 <col:33, col:37> col:37 i 'int'
| `-DeprecatedAttr 0x5566630f00f0 <col:61> "" ""
|-CXXMethodDecl 0x5566630f0288 <line:671:5, col:78> col:17 set_user_anno_u8 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x5566630f0178 <col:34, col:38> col:38 i 'int'
| |-ParmVarDecl 0x5566630f01f0 <col:41, col:49> col:49 v 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x5566630f0338 <col:67> "" ""
|-CXXMethodDecl 0x5566630f0450 <line:672:5, col:74> col:21 user_anno_u16 'uint16_t (int) const' inline
| |-ParmVarDecl 0x5566630f03c0 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x5566630f04f8 <col:63> "" ""
|-CXXMethodDecl 0x5566630f0690 <line:673:5, col:80> col:17 set_user_anno_u16 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x5566630f0580 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x5566630f05f8 <col:42, col:51> col:51 v 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x5566630f0740 <col:69> "" ""
|-CXXMethodDecl 0x5566630f0858 <line:674:5, col:74> col:21 user_anno_u32 'uint32_t (int) const' inline
| |-ParmVarDecl 0x5566630f07c8 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x5566630f0900 <col:63> "" ""
|-CXXMethodDecl 0x5566630f2fd8 <line:675:5, col:80> col:17 set_user_anno_u32 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x5566630f2ec8 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x5566630f2f40 <col:42, col:51> col:51 v 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x5566630f3088 <col:69> "" ""
|-CXXMethodDecl 0x5566630f31a0 <line:676:5, col:73> col:20 user_anno_s32 'int32_t (int) const' inline
| |-ParmVarDecl 0x5566630f3110 <col:34, col:38> col:38 i 'int'
| `-DeprecatedAttr 0x5566630f3248 <col:62> "" ""
|-CXXMethodDecl 0x5566630f33e0 <line:677:5, col:79> col:17 set_user_anno_s32 'void (int, int32_t)' inline
| |-ParmVarDecl 0x5566630f32d0 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x5566630f3348 <col:42, col:50> col:50 v 'int32_t':'int'
| `-DeprecatedAttr 0x5566630f3490 <col:68> "" ""
|-CXXMethodDecl 0x5566630f35a8 <line:679:5, col:74> col:21 user_anno_u64 'uint64_t (int) const' inline
| |-ParmVarDecl 0x5566630f3518 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x5566630f3650 <col:63> "" ""
|-CXXMethodDecl 0x5566630f37e8 <line:680:5, col:80> col:17 set_user_anno_u64 'void (int, uint64_t)' inline
| |-ParmVarDecl 0x5566630f36d8 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x5566630f3750 <col:42, col:51> col:51 v 'uint64_t':'unsigned long'
| `-DeprecatedAttr 0x5566630f3898 <col:69> "" ""
|-CXXMethodDecl 0x5566630f3928 <line:682:5, col:75> col:27 all_user_anno 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x5566630f39c8 <col:64> "" ""
|-CXXMethodDecl 0x5566630f3a58 <line:683:5, col:63> col:21 all_user_anno 'uint8_t *()' inline
| `-DeprecatedAttr 0x5566630f3af8 <col:52> "" ""
|-CXXMethodDecl 0x5566630f3b88 <line:684:5, col:78> col:28 all_user_anno_u 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x5566630f3c28 <col:67> "" ""
|-CXXMethodDecl 0x5566630f3cb8 <line:685:5, col:66> col:22 all_user_anno_u 'uint32_t *()' inline
| `-DeprecatedAttr 0x5566630f3d58 <col:55> "" ""
|-CXXMethodDecl 0x5566630f3e70 <line:686:5, col:69> col:20 user_anno_c 'uint8_t (int) const' inline
| |-ParmVarDecl 0x5566630f3de0 <col:32> col:35 'int'
| `-DeprecatedAttr 0x5566630f3f18 <col:58> "" ""
|-CXXMethodDecl 0x5566630f40b0 <line:687:5, col:73> col:17 set_user_anno_c 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x5566630f3fa0 <col:33> col:36 'int'
| |-ParmVarDecl 0x5566630f4018 <col:38> col:45 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x5566630f4160 <col:62> "" ""
|-CXXMethodDecl 0x5566630f4278 <line:688:5, col:69> col:20 user_anno_s 'int16_t (int) const' inline
| |-ParmVarDecl 0x5566630f41e8 <col:32> col:35 'int'
| `-DeprecatedAttr 0x5566630f4320 <col:58> "" ""
|-CXXMethodDecl 0x5566630f44b8 <line:689:5, col:73> col:17 set_user_anno_s 'void (int, int16_t)' inline
| |-ParmVarDecl 0x5566630f43a8 <col:33> col:36 'int'
| |-ParmVarDecl 0x5566630f4420 <col:38> col:45 'int16_t':'short'
| `-DeprecatedAttr 0x5566630f4568 <col:62> "" ""
|-CXXMethodDecl 0x5566630f4680 <line:690:5, col:71> col:21 user_anno_us 'uint16_t (int) const' inline
| |-ParmVarDecl 0x5566630f45f0 <col:34> col:37 'int'
| `-DeprecatedAttr 0x5566630f4728 <col:60> "" ""
|-CXXMethodDecl 0x5566630f48c0 <line:691:5, col:75> col:17 set_user_anno_us 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x5566630f47b0 <col:34> col:37 'int'
| |-ParmVarDecl 0x5566630f4828 <col:39> col:47 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x5566630f4970 <col:64> "" ""
|-CXXMethodDecl 0x5566630f4a88 <line:692:5, col:69> col:20 user_anno_i 'int32_t (int) const' inline
| |-ParmVarDecl 0x5566630f49f8 <col:32> col:35 'int'
| `-DeprecatedAttr 0x5566630f4b30 <col:58> "" ""
|-CXXMethodDecl 0x5566630f4cc8 <line:693:5, col:73> col:17 set_user_anno_i 'void (int, int32_t)' inline
| |-ParmVarDecl 0x5566630f4bb8 <col:33> col:36 'int'
| |-ParmVarDecl 0x5566630f4c30 <col:38> col:45 'int32_t':'int'
| `-DeprecatedAttr 0x5566630f4d78 <col:62> "" ""
|-CXXMethodDecl 0x5566630f4e90 <line:694:5, col:70> col:21 user_anno_u 'uint32_t (int) const' inline
| |-ParmVarDecl 0x5566630f4e00 <col:33> col:36 'int'
| `-DeprecatedAttr 0x5566630f4f38 <col:59> "" ""
|-CXXMethodDecl 0x5566630f50d0 <line:695:5, col:74> col:17 set_user_anno_u 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x5566630f4fc0 <col:33> col:36 'int'
| |-ParmVarDecl 0x5566630f5038 <col:38> col:46 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x5566630f5180 <col:63> "" ""
|-AccessSpecDecl 0x5566630f51f0 <line:698:3, col:10> col:3 private
|-CXXRecordDecl 0x5566630f5218 prev 0x5566630ea420 <line:702:5, line:711:5> line:702:11 referenced union Anno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x5566630f5310 <col:5, col:11> col:11 implicit union Anno
| |-FieldDecl 0x5566630f5400 <line:703:2, col:18> col:7 referenced c 'char [48]'
| |-FieldDecl 0x5566630f5528 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
| |-FieldDecl 0x5566630f56a8 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
| |-FieldDecl 0x5566630f5828 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
| |-FieldDecl 0x5566630f59a8 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
| |-CXXConstructorDecl 0x5566631067d8 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x556663107048 <col:11>
| |-CXXDestructorDecl 0x5566631068b0 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
| |-CXXConstructorDecl 0x5566631069e8 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x5566631069e8
| | `-ParmVarDecl 0x556663106af8 <col:11> col:11 'const Packet::Anno &'
| |-CXXConstructorDecl 0x556663106b98 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x556663106b98
| | `-ParmVarDecl 0x556663106ca8 <col:11> col:11 'Packet::Anno &&'
| |-CXXMethodDecl 0x556663109a68 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| | |-ParmVarDecl 0x556663109b78 <col:11> col:11 'const Packet::Anno &'
| | `-CompoundStmt 0x556663109df8 <col:11>
| |   `-ReturnStmt 0x556663109de8 <col:11>
| |     `-UnaryOperator 0x556663109dd0 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x556663109dc0 <col:11> 'Packet::Anno *' this
| `-CXXMethodDecl 0x556663109be8 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x556663109be8
|   `-ParmVarDecl 0x556663109cf8 <col:11> col:11 'Packet::Anno &&'
|-CXXRecordDecl 0x5566630f5a10 <line:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x5566630f5b28 <col:5, col:12> col:12 implicit struct AllAnno
| |-FieldDecl 0x5566630f5bc8 <line:717:2, col:7> col:7 cb 'Packet::Anno'
| |-FieldDecl 0x5566630f5c30 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
| |-FieldDecl 0x5566630f5c98 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
| |-FieldDecl 0x5566630f5d00 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
| |-FieldDecl 0x5566630f5d60 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
| |-FieldDecl 0x5566630f5e20 <line:722:2, col:34> col:7 timestamp 'char [8]'
| |-FieldDecl 0x5566630f5e80 <line:723:2, col:10> col:10 referenced next 'Packet *'
| |-FieldDecl 0x5566630f5ee0 <line:724:2, col:10> col:10 referenced prev 'Packet *'
| |-CXXConstructorDecl 0x5566631066e8 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| | |-CXXCtorInitializer Field 0x5566630f5bc8 'cb' 'Packet::Anno'
| | | `-CXXConstructExpr 0x556663107058 <col:12> 'Packet::Anno' 'void () noexcept'
| | `-CompoundStmt 0x5566631070b0 <col:12>
| |-CXXConstructorDecl 0x556663106d18 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x556663106d18
| | `-ParmVarDecl 0x556663106e28 <col:12> col:12 'const Packet::AllAnno &'
| |-CXXConstructorDecl 0x556663106ec8 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x556663106ec8
| | `-ParmVarDecl 0x556663106fd8 <col:12> col:12 'Packet::AllAnno &&'
| `-CXXDestructorDecl 0x556663109150 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial
|-FieldDecl 0x5566630f5f58 <line:731:5, col:21> col:21 referenced _use_count 'atomic_uint32_t'
|-FieldDecl 0x5566630f5fb8 <line:732:5, col:13> col:13 referenced _data_packet 'Packet *'
|-FieldDecl 0x5566630f6020 <line:734:5, col:20> col:20 referenced _head 'unsigned char *'
|-FieldDecl 0x5566630f6088 <line:735:5, col:20> col:20 referenced _data 'unsigned char *'
|-FieldDecl 0x5566630f60f0 <line:736:5, col:20> col:20 referenced _tail 'unsigned char *'
|-FieldDecl 0x5566630f6158 <line:737:5, col:20> col:20 referenced _end 'unsigned char *'
|-FieldDecl 0x5566630f61b8 <line:741:5, col:13> col:13 referenced _aa 'Packet::AllAnno'
|-FieldDecl 0x5566630f6218 <line:746:5, col:28> col:28 referenced _destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-FieldDecl 0x5566630f6280 <line:747:5, col:11> col:11 referenced _destructor_argument 'void *'
|-CXXConstructorDecl 0x5566630f6308 <line:751:5, line:755:5> line:751:12 used Packet 'void ()' inline
| |-CXXCtorInitializer Field 0x5566630f5f58 '_use_count' 'atomic_uint32_t'
| | `-CXXConstructExpr 0x556663106680 <col:12> 'atomic_uint32_t' 'void () noexcept'
| |-CXXCtorInitializer Field 0x5566630f61b8 '_aa' 'Packet::AllAnno'
| | `-CXXConstructExpr 0x5566631070c0 <col:12> 'Packet::AllAnno' 'void () noexcept'
| `-CompoundStmt 0x556663107120 <col:21, line:755:5>
|-CXXConstructorDecl 0x5566630f64a8 <line:756:5, col:27> col:5 Packet 'void (const Packet &)'
| `-ParmVarDecl 0x5566630f63e8 <col:12, col:26> col:26 x 'const Packet &'
|-CXXDestructorDecl 0x5566630f65a0 <line:757:5, col:13> col:5 used ~Packet 'void () noexcept'
|-CXXMethodDecl 0x5566630f6788 <line:758:5, col:38> col:13 operator= 'Packet &(const Packet &)'
| `-ParmVarDecl 0x5566630f6690 <col:23, col:37> col:37 x 'const Packet &'
|-CXXMethodDecl 0x5566630f6a58 <line:761:5, col:74> col:10 alloc_data 'bool (uint32_t, uint32_t, uint32_t)'
| |-ParmVarDecl 0x5566630f6840 <col:21, col:30> col:30 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x5566630f68b8 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x5566630f6930 <col:57, col:66> col:66 tailroom 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5566630f6c78 <line:768:5, col:95> col:17 shift_header_annotations 'void (const unsigned char *, int32_t)' inline
| |-ParmVarDecl 0x5566630f6b28 <col:42, col:63> col:63 old_head 'const unsigned char *'
| `-ParmVarDecl 0x5566630f6ba0 <col:73, col:81> col:81 extra_headroom 'int32_t':'int'
|-CXXMethodDecl 0x5566630ff258 <line:769:5, col:109> col:21 expensive_uniqueify 'WritablePacket *(int32_t, int32_t, bool)'
| |-ParmVarDecl 0x5566630f6d38 <col:41, col:49> col:49 extra_headroom 'int32_t':'int'
| |-ParmVarDecl 0x5566630f6db0 <col:65, col:73> col:73 extra_tailroom 'int32_t':'int'
| `-ParmVarDecl 0x5566630f6e28 <col:89, col:94> col:94 free_on_failure 'bool'
|-CXXMethodDecl 0x5566630ff3b0 <line:770:5, col:51> col:21 used expensive_push 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x5566630ff320 <col:36, col:45> col:45 nbytes 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5566630ff4f8 <line:771:5, col:50> col:21 used expensive_put 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x5566630ff468 <col:35, col:44> col:44 nbytes 'uint32_t':'unsigned int'
`-FriendDecl 0x5566630ff5f0 <line:773:5, col:18> col:12 'class WritablePacket':'WritablePacket'

Layout: <CGRecordLayout
  LLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  NonVirtualBaseLLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class StringAccum
         0 |   struct StringAccum::rep_t r_
         0 |     unsigned char * s
         8 |     int len
        12 |     int cap
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5566632ac000 <../dummy_inc/click/straccum.hh:112:5, line:122:5> line:112:12 referenced struct rep_t definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5566632ac118 <col:5, col:12> col:12 implicit referenced struct rep_t
|-FieldDecl 0x5566632ac1c0 <line:113:2, col:17> col:17 referenced s 'unsigned char *'
|-FieldDecl 0x5566632ac228 <line:114:2, col:6> col:6 referenced len 'int'
|-FieldDecl 0x5566632ac290 <line:115:2, col:6> col:6 referenced cap 'int'
|-CXXConstructorDecl 0x5566632ac340 <line:116:2, line:119:2> line:116:2 used rep_t 'void ()'
| |-CXXCtorInitializer Field 0x5566632ac1c0 's' 'unsigned char *'
| | `-CXXReinterpretCastExpr 0x5566632ad1c0 <line:117:10, col:84> 'unsigned char *' reinterpret_cast<unsigned char *> <BitCast>
| |   `-CXXConstCastExpr 0x5566632ad178 <col:44, col:83> 'char *' const_cast<char *> <NoOp>
| |     `-CallExpr 0x5566632ad140 <col:63, col:82> 'const char *'
| |       `-ImplicitCastExpr 0x5566632ad128 <col:63, col:71> 'const char *(*)()' <FunctionToPointerDecay>
| |         `-DeclRefExpr 0x5566632ad0d0 <col:63, col:71> 'const char *()' lvalue CXXMethod 0x556662f0e270 'empty_data' 'const char *()'
| |-CXXCtorInitializer Field 0x5566632ac228 'len' 'int'
| | `-IntegerLiteral 0x5566632ad238 <line:118:12> 'int' 0
| |-CXXCtorInitializer Field 0x5566632ac290 'cap' 'int'
| | `-IntegerLiteral 0x5566632ad2a0 <col:20> 'int' 0
| `-CompoundStmt 0x5566632ad320 <col:23, line:119:2>
|-CXXConstructorDecl 0x5566632ac4b8 <line:120:2, line:121:2> line:120:11 rep_t 'void (uninitialized_type)'
| |-ParmVarDecl 0x5566632ac3f8 <col:17> col:35 'uninitialized_type'
| `-CompoundStmt 0x5566632ad330 <col:37, line:121:2>
|-CXXConstructorDecl 0x5566632af548 <line:112:12> col:12 implicit used constexpr rep_t 'void (const StringAccum::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x5566632af658 <col:12> col:12 used 'const StringAccum::rep_t &'
| |-CXXCtorInitializer Field 0x5566632ac1c0 's' 'unsigned char *'
| | `-ImplicitCastExpr 0x5566632b1000 <col:12> 'unsigned char *' <LValueToRValue>
| |   `-MemberExpr 0x5566632b0fd0 <col:12> 'unsigned char *const' lvalue .s 0x5566632ac1c0
| |     `-DeclRefExpr 0x5566632b0fb0 <col:12> 'const StringAccum::rep_t' lvalue ParmVar 0x5566632af658 '' 'const StringAccum::rep_t &'
| |-CXXCtorInitializer Field 0x5566632ac228 'len' 'int'
| | `-ImplicitCastExpr 0x5566632b1090 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x5566632b1060 <col:12> 'const int' lvalue .len 0x5566632ac228
| |     `-DeclRefExpr 0x5566632b1040 <col:12> 'const StringAccum::rep_t' lvalue ParmVar 0x5566632af658 '' 'const StringAccum::rep_t &'
| |-CXXCtorInitializer Field 0x5566632ac290 'cap' 'int'
| | `-ImplicitCastExpr 0x5566632b1120 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x5566632b10f0 <col:12> 'const int' lvalue .cap 0x5566632ac290
| |     `-DeclRefExpr 0x5566632b10d0 <col:12> 'const StringAccum::rep_t' lvalue ParmVar 0x5566632af658 '' 'const StringAccum::rep_t &'
| `-CompoundStmt 0x5566632b1178 <col:12>
|-CXXConstructorDecl 0x5566632af6f8 <col:12> col:12 implicit constexpr rep_t 'void (StringAccum::rep_t &&)' inline default trivial noexcept-unevaluated 0x5566632af6f8
| `-ParmVarDecl 0x5566632af808 <col:12> col:12 'StringAccum::rep_t &&'
`-CXXDestructorDecl 0x5566632b1430 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"struct.StringAccum::rep_t" = type { i8*, i32, i32 }
  NonVirtualBaseLLVMType:%"struct.StringAccum::rep_t" = type { i8*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5566630d8738 prev 0x5566632003b8 <../dummy_inc/click/straccum.hh:28:1, line:137:1> line:28:7 referenced class StringAccum definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x5566630d8830 <col:1, col:7> col:7 implicit referenced class StringAccum
|-AccessSpecDecl 0x5566630d88c0 <col:21, col:27> col:21 public
|-TypedefDecl 0x5566632a7970 <line:30:5, col:25> col:25 referenced const_iterator 'const char *'
| `-PointerType 0x556662bb7dc0 'const char *'
|   `-QualType 0x556662bb7311 'const char' const
|     `-BuiltinType 0x556662bb7310 'char'
|-TypedefDecl 0x5566632a79e0 <line:31:5, col:19> col:19 referenced iterator 'char *'
| `-PointerType 0x556662bb7f90 'char *'
|   `-BuiltinType 0x556662bb7310 'char'
|-TypedefDecl 0x5566632a7b20 <line:33:5, col:57> col:32 referenced unspecified_bool_type 'int (StringAccum::*)() const'
| `-MemberPointerType 0x5566632a7a90 'int (StringAccum::*)() const'
|   |-RecordType 0x556662e78b30 'StringAccum'
|   | `-CXXRecord 0x5566630d8738 'StringAccum'
|   `-ParenType 0x556662ee8280 'int () const' sugar
|     `-FunctionProtoType 0x556662ebbe10 'int () const' const cdecl
|       `-BuiltinType 0x556662bb7370 'int'
|-CXXConstructorDecl 0x5566632a7be0 <line:35:5, col:24> col:12 used StringAccum 'void ()' inline
|-CXXConstructorDecl 0x5566632a7d30 <line:36:5, col:45> col:21 StringAccum 'void (int)' inline
| `-ParmVarDecl 0x5566632a7ca0 <col:33, col:37> col:37 capacity 'int'
|-CXXConstructorDecl 0x5566632a7e80 <line:37:5, col:41> col:12 StringAccum 'void (const String &)' inline
| `-ParmVarDecl 0x5566632a7df0 <col:24, col:38> col:38 str 'const String &'
|-CXXConstructorDecl 0x5566632a8028 <line:38:5, col:44> col:12 StringAccum 'void (const StringAccum &)' inline
| `-ParmVarDecl 0x5566632a7f68 <col:24, col:43> col:43 x 'const StringAccum &'
|-CXXConstructorDecl 0x5566632a81d8 <line:40:5, col:39> col:12 StringAccum 'void (StringAccum &&)' inline
| `-ParmVarDecl 0x5566632a8118 <col:24, col:38> col:38 x 'StringAccum &&'
|-CXXDestructorDecl 0x5566632a82d0 <line:42:5, col:25> col:12 used ~StringAccum 'void () noexcept' inline
|-CXXMethodDecl 0x5566632a8488 <line:44:5, col:55> col:25 operator= 'StringAccum &(const StringAccum &)' inline
| `-ParmVarDecl 0x5566632a83c0 <col:35, col:54> col:54 x 'const StringAccum &'
|-CXXMethodDecl 0x5566632a8608 <line:46:5, col:50> col:25 operator= 'StringAccum &(StringAccum &&)' inline
| `-ParmVarDecl 0x5566632a8540 <col:35, col:49> col:49 x 'StringAccum &&'
|-CXXMethodDecl 0x5566632a8700 <line:49:5, col:31> col:24 used data 'const char *() const' inline
|-CXXMethodDecl 0x5566632a87c8 <line:50:5, col:23> col:18 data 'char *()' inline
|-CXXMethodDecl 0x5566632a8890 <line:51:5, col:25> col:16 used length 'int () const' inline
|-CXXMethodDecl 0x5566632a8958 <line:52:5, col:27> col:16 used capacity 'int () const' inline
|-CXXMethodDecl 0x5566632a8a20 <line:54:5, col:23> col:17 c_str 'const char *()'
|-CXXConversionDecl 0x5566632a8b88 <line:56:5, col:45> col:12 operator int (StringAccum::*)() const 'StringAccum::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x5566632a8c58 <line:57:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x5566632a8d18 <line:58:5, col:29> col:17 operator! 'bool () const' inline
|-CXXMethodDecl 0x5566632a8e28 <line:60:5, col:35> col:27 used begin 'StringAccum::const_iterator () const' inline
|-CXXMethodDecl 0x5566632a8f38 <line:61:5, col:27> col:21 begin 'StringAccum::iterator ()' inline
|-CXXMethodDecl 0x5566632a8ff8 <line:62:5, col:33> col:27 used end 'StringAccum::const_iterator () const' inline
|-CXXMethodDecl 0x5566632a90b8 <line:63:5, col:25> col:21 end 'StringAccum::iterator ()' inline
|-CXXMethodDecl 0x5566632a9200 <line:65:5, col:35> col:17 operator[] 'char (int) const' inline
| `-ParmVarDecl 0x5566632a9170 <col:28, col:32> col:32 i 'int'
|-CXXMethodDecl 0x5566632a9390 <line:66:5, col:34> col:18 operator[] 'char &(int)' inline
| `-ParmVarDecl 0x5566632a92c0 <col:29, col:33> col:33 i 'int'
|-CXXMethodDecl 0x5566632a9458 <line:67:5, col:25> col:17 front 'char () const' inline
|-CXXMethodDecl 0x5566632a9550 <line:68:5, col:24> col:18 front 'char &()' inline
|-CXXMethodDecl 0x5566632a9610 <line:69:5, col:24> col:17 back 'char () const' inline
|-CXXMethodDecl 0x5566632a96d8 <line:70:5, col:23> col:18 back 'char &()' inline
|-CXXMethodDecl 0x5566632a9798 <line:72:5, col:33> col:17 used out_of_memory 'bool () const' inline
|-CXXMethodDecl 0x5566632a9858 <line:73:5, col:31> col:10 assign_out_of_memory 'void ()'
|-CXXMethodDecl 0x5566632a9918 <line:75:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x5566632a9a68 <line:76:5, col:31> col:18 reserve 'char *(int)' inline
| `-ParmVarDecl 0x5566632a99d0 <col:26, col:30> col:30 n 'int'
|-CXXMethodDecl 0x5566632a9bb8 <line:77:5, col:35> col:17 set_length 'void (int)' inline
| `-ParmVarDecl 0x5566632a9b28 <col:28, col:32> col:32 len 'int'
|-CXXMethodDecl 0x5566632a9d10 <line:78:5, col:23> col:9 resize 'int (int)'
| `-ParmVarDecl 0x5566632a9c78 <col:16, col:20> col:20 len 'int'
|-CXXMethodDecl 0x5566632a9e60 <line:79:5, col:40> col:17 used adjust_length 'void (int)' inline
| `-ParmVarDecl 0x5566632a9dd0 <col:31, col:35> col:35 delta 'int'
|-CXXMethodDecl 0x5566632aa080 <line:80:5, col:54> col:18 extend 'char *(int, int)' inline
| |-ParmVarDecl 0x5566632a9f20 <col:25, col:29> col:29 nadjust 'int'
| `-ParmVarDecl 0x5566632a9fa0 <col:38, col:53> col:42 nreserve 'int' cinit
|   `-IntegerLiteral 0x5566632acff8 <col:53> 'int' 0
|-CXXMethodDecl 0x5566632aa1d8 <line:82:5, col:35> col:17 pop_back 'void (int)' inline
| `-ParmVarDecl 0x5566632aa148 <col:26, col:34> col:30 n 'int' cinit
|   `-IntegerLiteral 0x5566632ad018 <col:34> 'int' 1
|-CXXMethodDecl 0x5566632aa320 <line:84:5, col:30> col:17 used append 'void (char)' inline
| `-ParmVarDecl 0x5566632aa290 <col:24, col:29> col:29 c 'char'
|-CXXMethodDecl 0x5566632aa470 <line:85:5, col:39> col:17 used append 'void (unsigned char)' inline
| `-ParmVarDecl 0x5566632aa3e0 <col:24, col:38> col:38 c 'unsigned char'
|-CXXMethodDecl 0x5566632aa5c0 <line:86:5, col:35> col:17 append_utf8 'bool (int)' inline
| `-ParmVarDecl 0x5566632aa530 <col:29, col:33> col:33 ch 'int'
|-CXXMethodDecl 0x5566632aa710 <line:87:5, col:40> col:17 used append 'void (const char *)' inline
| `-ParmVarDecl 0x5566632aa680 <col:24, col:36> col:36 cstr 'const char *'
|-CXXMethodDecl 0x5566632aa8e8 <line:88:5, col:46> col:17 used append 'void (const char *, int)' inline
| |-ParmVarDecl 0x5566632aa7d0 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x5566632aa850 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x5566632aaac8 <line:89:5, col:55> col:17 used append 'void (const unsigned char *, int)' inline
| |-ParmVarDecl 0x5566632aa9b0 <col:24, col:45> col:45 s 'const unsigned char *'
| `-ParmVarDecl 0x5566632aaa30 <col:48, col:52> col:52 len 'int'
|-CXXMethodDecl 0x5566632aaca8 <line:90:5, col:59> col:17 used append 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x5566632aab90 <col:24, col:36> col:36 first 'const char *'
| `-ParmVarDecl 0x5566632aac10 <col:43, col:55> col:55 last 'const char *'
|-CXXMethodDecl 0x5566632aae88 <line:91:5, col:77> col:17 append 'void (const unsigned char *, const unsigned char *)' inline
| |-ParmVarDecl 0x5566632aad70 <col:24, col:45> col:45 first 'const unsigned char *'
| `-ParmVarDecl 0x5566632aadf0 <col:52, col:73> col:73 last 'const unsigned char *'
|-CXXMethodDecl 0x5566632ab068 <line:92:5, col:36> col:10 append_fill 'void (int, int)'
| |-ParmVarDecl 0x5566632aaf50 <col:22, col:26> col:26 c 'int'
| `-ParmVarDecl 0x5566632aafd0 <col:29, col:33> col:33 len 'int'
|-CXXMethodDecl 0x5566632ab3c8 <line:93:5, col:81> col:10 used append_numeric 'void (String::intmax_t, int, bool)'
| |-ParmVarDecl 0x5566632ab1b0 <col:25, col:42> col:42 x 'String::intmax_t':'long'
| |-ParmVarDecl 0x5566632ab230 <col:45, col:56> col:49 base 'int' cinit
| | `-IntegerLiteral 0x5566632ad038 <col:56> 'int' 10
| `-ParmVarDecl 0x5566632ab2a8 <col:60, col:77> col:65 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x5566632ad058 <col:77> 'bool' true
|-CXXMethodDecl 0x5566632ab728 <line:94:5, col:82> col:10 used append_numeric 'void (String::uintmax_t, int, bool)'
| |-ParmVarDecl 0x5566632ab510 <col:25, col:43> col:43 x 'String::uintmax_t':'unsigned long'
| |-ParmVarDecl 0x5566632ab590 <col:46, col:57> col:50 base 'int' cinit
| | `-IntegerLiteral 0x5566632ad068 <col:57> 'int' 10
| `-ParmVarDecl 0x5566632ab608 <col:61, col:78> col:66 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x5566632ad088 <col:78> 'bool' true
|-CXXMethodDecl 0x5566632ab950 <line:96:5, col:57> col:18 snprintf 'StringAccum &(int, const char *, ...)'
| |-ParmVarDecl 0x5566632ab7f8 <col:27, col:31> col:31 n 'int'
| `-ParmVarDecl 0x5566632ab878 <col:34, col:46> col:46 format 'const char *'
|-CXXMethodDecl 0x5566632aba48 <line:98:5, col:24> col:12 used take_string 'String ()'
|-CXXMethodDecl 0x5566632abbb8 <line:100:5, col:29> col:10 used swap 'void (StringAccum &)'
| `-ParmVarDecl 0x5566632abaf8 <col:15, col:28> col:28 x 'StringAccum &'
|-CXXMethodDecl 0x5566632abd08 <line:104:5, col:62> col:17 forward 'void (int)' inline
| |-ParmVarDecl 0x5566632abc78 <col:25, col:29> col:29 delta 'int'
| `-DeprecatedAttr 0x5566632abdb0 <col:51> "" ""
|-AccessSpecDecl 0x5566632abe20 <line:106:3, col:10> col:3 private
|-EnumDecl 0x5566632abe48 <line:108:5, line:110:5> line:108:5
| `-EnumConstantDecl 0x5566632abf98 <line:109:2, col:23> col:2 referenced MEMO_SPACE 'StringAccum::(anonymous enum at ../dummy_inc/click/straccum.hh:108:5)'
|   `-ImplicitCastExpr 0x5566632abfe8 <col:15, col:23> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5566632abf78 <col:15, col:23> 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)' Int: 12
|       `-DeclRefExpr 0x5566632abf48 <col:15, col:23> 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)' EnumConstant 0x556662ef0fe8 'MEMO_SPACE' 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)'
|-CXXRecordDecl 0x5566632ac000 <line:112:5, line:122:5> line:112:12 referenced struct rep_t definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x5566632ac118 <col:5, col:12> col:12 implicit referenced struct rep_t
| |-FieldDecl 0x5566632ac1c0 <line:113:2, col:17> col:17 referenced s 'unsigned char *'
| |-FieldDecl 0x5566632ac228 <line:114:2, col:6> col:6 referenced len 'int'
| |-FieldDecl 0x5566632ac290 <line:115:2, col:6> col:6 referenced cap 'int'
| |-CXXConstructorDecl 0x5566632ac340 <line:116:2, line:119:2> line:116:2 used rep_t 'void ()'
| | |-CXXCtorInitializer Field 0x5566632ac1c0 's' 'unsigned char *'
| | | `-CXXReinterpretCastExpr 0x5566632ad1c0 <line:117:10, col:84> 'unsigned char *' reinterpret_cast<unsigned char *> <BitCast>
| | |   `-CXXConstCastExpr 0x5566632ad178 <col:44, col:83> 'char *' const_cast<char *> <NoOp>
| | |     `-CallExpr 0x5566632ad140 <col:63, col:82> 'const char *'
| | |       `-ImplicitCastExpr 0x5566632ad128 <col:63, col:71> 'const char *(*)()' <FunctionToPointerDecay>
| | |         `-DeclRefExpr 0x5566632ad0d0 <col:63, col:71> 'const char *()' lvalue CXXMethod 0x556662f0e270 'empty_data' 'const char *()'
| | |-CXXCtorInitializer Field 0x5566632ac228 'len' 'int'
| | | `-IntegerLiteral 0x5566632ad238 <line:118:12> 'int' 0
| | |-CXXCtorInitializer Field 0x5566632ac290 'cap' 'int'
| | | `-IntegerLiteral 0x5566632ad2a0 <col:20> 'int' 0
| | `-CompoundStmt 0x5566632ad320 <col:23, line:119:2>
| |-CXXConstructorDecl 0x5566632ac4b8 <line:120:2, line:121:2> line:120:11 rep_t 'void (uninitialized_type)'
| | |-ParmVarDecl 0x5566632ac3f8 <col:17> col:35 'uninitialized_type'
| | `-CompoundStmt 0x5566632ad330 <col:37, line:121:2>
| |-CXXConstructorDecl 0x5566632af548 <line:112:12> col:12 implicit used constexpr rep_t 'void (const StringAccum::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x5566632af658 <col:12> col:12 used 'const StringAccum::rep_t &'
| | |-CXXCtorInitializer Field 0x5566632ac1c0 's' 'unsigned char *'
| | | `-ImplicitCastExpr 0x5566632b1000 <col:12> 'unsigned char *' <LValueToRValue>
| | |   `-MemberExpr 0x5566632b0fd0 <col:12> 'unsigned char *const' lvalue .s 0x5566632ac1c0
| | |     `-DeclRefExpr 0x5566632b0fb0 <col:12> 'const StringAccum::rep_t' lvalue ParmVar 0x5566632af658 '' 'const StringAccum::rep_t &'
| | |-CXXCtorInitializer Field 0x5566632ac228 'len' 'int'
| | | `-ImplicitCastExpr 0x5566632b1090 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x5566632b1060 <col:12> 'const int' lvalue .len 0x5566632ac228
| | |     `-DeclRefExpr 0x5566632b1040 <col:12> 'const StringAccum::rep_t' lvalue ParmVar 0x5566632af658 '' 'const StringAccum::rep_t &'
| | |-CXXCtorInitializer Field 0x5566632ac290 'cap' 'int'
| | | `-ImplicitCastExpr 0x5566632b1120 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x5566632b10f0 <col:12> 'const int' lvalue .cap 0x5566632ac290
| | |     `-DeclRefExpr 0x5566632b10d0 <col:12> 'const StringAccum::rep_t' lvalue ParmVar 0x5566632af658 '' 'const StringAccum::rep_t &'
| | `-CompoundStmt 0x5566632b1178 <col:12>
| |-CXXConstructorDecl 0x5566632af6f8 <col:12> col:12 implicit constexpr rep_t 'void (StringAccum::rep_t &&)' inline default trivial noexcept-unevaluated 0x5566632af6f8
| | `-ParmVarDecl 0x5566632af808 <col:12> col:12 'StringAccum::rep_t &&'
| `-CXXDestructorDecl 0x5566632b1430 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
|-FieldDecl 0x5566632ac590 <line:124:5, col:11> col:11 referenced r_ 'StringAccum::rep_t'
|-CXXMethodDecl 0x5566632ac690 <line:126:5, col:19> col:11 used grow 'char *(int)'
| `-ParmVarDecl 0x5566632ac5f8 <col:16> col:19 'int'
|-CXXMethodDecl 0x5566632ac870 <line:127:5, col:48> col:11 used hard_extend 'char *(int, int)'
| |-ParmVarDecl 0x5566632ac750 <col:23, col:27> col:27 nadjust 'int'
| `-ParmVarDecl 0x5566632ac7d0 <col:36, col:40> col:40 nreserve 'int'
|-CXXMethodDecl 0x5566632aca50 <line:128:5, col:44> col:10 used hard_append 'void (const char *, int)'
| |-ParmVarDecl 0x5566632ac938 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x5566632ac9b8 <col:37, col:41> col:41 len 'int'
|-CXXMethodDecl 0x5566632acba8 <line:129:5, col:43> col:10 used hard_append_cstr 'void (const char *)'
| `-ParmVarDecl 0x5566632acb18 <col:27, col:39> col:39 cstr 'const char *'
|-CXXMethodDecl 0x5566632accf8 <line:130:5, col:33> col:10 used append_utf8_hard 'bool (int)'
| `-ParmVarDecl 0x5566632acc68 <col:27, col:31> col:31 ch 'int'
`-FriendDecl 0x5566632acfb8 <line:132:5, col:70> col:25
  `-FunctionDecl 0x5566632acef8 parent 0x556662bb7278 <col:5, col:70> col:25 operator<< 'StringAccum &(StringAccum &, const String &)'
    |-ParmVarDecl 0x5566632acdb0 <col:36, col:49> col:49 sa 'StringAccum &'
    `-ParmVarDecl 0x5566632ace28 <col:53, col:67> col:67 str 'const String &'

Layout: <CGRecordLayout
  LLVMType:%class.StringAccum = type { %"struct.StringAccum::rep_t" }
  NonVirtualBaseLLVMType:%class.StringAccum = type { %"struct.StringAccum::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct TaskLink
         0 |   struct TaskLink * _prev
         8 |   struct TaskLink * _next
        16 |   unsigned int _pass
           | [sizeof=24, dsize=20, align=8,
           |  nvsize=20, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55666313a4a0 <../dummy_inc/click/task.hh:31:1, line:47:1> line:31:8 referenced struct TaskLink definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55666313a5b8 <col:1, col:8> col:8 implicit referenced struct TaskLink
|-FieldDecl 0x55666313a688 <line:33:5, col:15> col:15 referenced _prev 'TaskLink *'
|-FieldDecl 0x55666313a6e8 <line:34:5, col:15> col:15 referenced _next 'TaskLink *'
|-FieldDecl 0x55666313a750 <line:37:5, col:14> col:14 referenced _pass 'unsigned int'
|-CXXConstructorDecl 0x55666313a7d8 <line:39:5, line:46:5> line:39:5 used TaskLink 'void ()'
| `-CompoundStmt 0x55666313aa40 <col:16, line:46:5>
|   |-BinaryOperator 0x55666313a988 <line:41:9, col:25> 'TaskLink *' lvalue '='
|   | |-MemberExpr 0x55666313a8a8 <col:9> 'TaskLink *' lvalue ->_prev 0x55666313a688
|   | | `-CXXThisExpr 0x55666313a898 <col:9> 'TaskLink *' implicit this
|   | `-ImplicitCastExpr 0x55666313a970 <col:17, col:25> 'TaskLink *' <LValueToRValue>
|   |   `-BinaryOperator 0x55666313a950 <col:17, col:25> 'TaskLink *' lvalue '='
|   |     |-MemberExpr 0x55666313a8e8 <col:17> 'TaskLink *' lvalue ->_next 0x55666313a6e8
|   |     | `-CXXThisExpr 0x55666313a8d8 <col:17> 'TaskLink *' implicit this
|   |     `-ImplicitCastExpr 0x55666313a938 <col:25> 'TaskLink *' <NullToPointer>
|   |       `-IntegerLiteral 0x55666313a918 <col:25> 'int' 0
|   `-BinaryOperator 0x55666313aa20 <line:44:9, col:17> 'unsigned int' lvalue '='
|     |-MemberExpr 0x55666313a9b8 <col:9> 'unsigned int' lvalue ->_pass 0x55666313a750
|     | `-CXXThisExpr 0x55666313a9a8 <col:9> 'TaskLink *' implicit this
|     `-ImplicitCastExpr 0x55666313aa08 <col:17> 'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x55666313a9e8 <col:17> 'int' 0
|-CXXConstructorDecl 0x5566631c6f78 <line:31:8> col:8 implicit constexpr TaskLink 'void (const TaskLink &)' inline default trivial noexcept-unevaluated 0x5566631c6f78
| `-ParmVarDecl 0x5566631c7088 <col:8> col:8 'const TaskLink &'
|-CXXConstructorDecl 0x5566631c7128 <col:8> col:8 implicit constexpr TaskLink 'void (TaskLink &&)' inline default trivial noexcept-unevaluated 0x5566631c7128
| `-ParmVarDecl 0x5566631c7238 <col:8> col:8 'TaskLink &&'
|-CXXDestructorDecl 0x5566631c7428 <col:8> col:8 implicit ~TaskLink 'void ()' inline default trivial noexcept-unevaluated 0x5566631c7428
|-CXXMethodDecl 0x5566631c7c28 <col:8> col:8 implicit operator= 'TaskLink &(const TaskLink &)' inline default trivial noexcept-unevaluated 0x5566631c7c28
| `-ParmVarDecl 0x5566631c7d38 <col:8> col:8 'const TaskLink &'
`-CXXMethodDecl 0x5566631c7da8 <col:8> col:8 implicit operator= 'TaskLink &(TaskLink &&)' inline default trivial noexcept-unevaluated 0x5566631c7da8
  `-ParmVarDecl 0x5566631c7eb8 <col:8> col:8 'TaskLink &&'

Layout: <CGRecordLayout
  LLVMType:%struct.TaskLink = type <{ %struct.TaskLink*, %struct.TaskLink*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%struct.TaskLink.base = type <{ %struct.TaskLink*, %struct.TaskLink*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9)
         0 |   int16_t home_thread_id
         2 |   uint8_t is_scheduled
         3 |   uint8_t is_strong_unscheduled
           | [sizeof=4, dsize=4, align=2,
           |  nvsize=4, nvalign=2]

*** Dumping AST Record Layout
         0 | union Task::Status
         0 |   struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9) 
         0 |     int16_t home_thread_id
         2 |     uint8_t is_scheduled
         3 |     uint8_t is_strong_unscheduled
         0 |   uint32_t status
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Task::Pending
         0 |   class Task * t
         0 |   uintptr_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Task
         0 |   struct TaskLink (base)
         0 |     struct TaskLink * _prev
         8 |     struct TaskLink * _next
        16 |     unsigned int _pass
        20 |   unsigned int _stride
        24 |   int _tickets
        28 |   union Task::Status _status
        28 |     struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9) 
        28 |       int16_t home_thread_id
        30 |       uint8_t is_scheduled
        31 |       uint8_t is_strong_unscheduled
        28 |     uint32_t status
        32 |   TaskCallback _hook
        40 |   void * _thunk
        48 |   class RouterThread * _thread
        56 |   class Element * _owner
        64 |   union Task::Pending _pending_nextptr
        64 |     class Task * t
        64 |     uintptr_t x
           | [sizeof=72, dsize=72, align=8,
           |  nvsize=72, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55666309db68 <../dummy_inc/click/task.hh:315:9, line:319:9> line:315:9 struct definition
|-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x55666309dc98 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
|-FieldDecl 0x55666309dcf8 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
|-FieldDecl 0x55666309dd58 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
|-CXXConstructorDecl 0x5566631ce138 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
|-CXXDestructorDecl 0x5566631ce210 <col:9> col:9 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x5566631ce210
|-CXXConstructorDecl 0x5566631ce4c8 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x5566631ce4c8
| `-ParmVarDecl 0x5566631ce5d8 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
`-CXXConstructorDecl 0x5566631ce678 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x5566631ce678
  `-ParmVarDecl 0x5566631ce788 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'

Layout: <CGRecordLayout
  LLVMType:%struct.anon = type { i16, i8, i8 }
  NonVirtualBaseLLVMType:%struct.anon = type { i16, i8, i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55666309d9b8 <../dummy_inc/click/task.hh:314:5, line:321:5> line:314:11 union Status definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x55666309dad8 <col:5, col:11> col:11 implicit union Status
|-CXXRecordDecl 0x55666309db68 <line:315:9, line:319:9> line:315:9 struct definition
| |-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x55666309dc98 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
| |-FieldDecl 0x55666309dcf8 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
| |-FieldDecl 0x55666309dd58 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
| |-CXXConstructorDecl 0x5566631ce138 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
| |-CXXDestructorDecl 0x5566631ce210 <col:9> col:9 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x5566631ce210
| |-CXXConstructorDecl 0x5566631ce4c8 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x5566631ce4c8
| | `-ParmVarDecl 0x5566631ce5d8 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
| `-CXXConstructorDecl 0x5566631ce678 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x5566631ce678
|   `-ParmVarDecl 0x5566631ce788 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'
|-FieldDecl 0x55666309de18 <col:9> col:9 implicit referenced 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
|-IndirectFieldDecl 0x55666309de78 <line:316:21> col:21 implicit home_thread_id 'int16_t':'short'
| |-Field 0x55666309de18 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x55666309dc98 'home_thread_id' 'int16_t':'short'
|-IndirectFieldDecl 0x55666309ded0 <line:317:21> col:21 implicit is_scheduled 'uint8_t':'unsigned char'
| |-Field 0x55666309de18 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x55666309dcf8 'is_scheduled' 'uint8_t':'unsigned char'
|-IndirectFieldDecl 0x55666309df28 <line:318:21> col:21 implicit is_strong_unscheduled 'uint8_t':'unsigned char'
| |-Field 0x55666309de18 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x55666309dd58 'is_strong_unscheduled' 'uint8_t':'unsigned char'
|-FieldDecl 0x55666309df80 <line:320:9, col:18> col:18 status 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x5566631ce048 <line:314:11> col:11 implicit used Status 'void () noexcept' inline default trivial
| `-CompoundStmt 0x5566631ce9a8 <col:11>
|-CXXConstructorDecl 0x5566631ce318 <col:11> col:11 implicit constexpr Status 'void (const Task::Status &)' inline default trivial noexcept-unevaluated 0x5566631ce318
| `-ParmVarDecl 0x5566631ce428 <col:11> col:11 'const Task::Status &'
`-CXXConstructorDecl 0x5566631ce828 <col:11> col:11 implicit constexpr Status 'void (Task::Status &&)' inline default trivial noexcept-unevaluated 0x5566631ce828
  `-ParmVarDecl 0x5566631ce938 <col:11> col:11 'Task::Status &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Task::Status" = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<16> >
         0 |   vector_memory<class sized_array_memory<16> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct TimerSet::heap_element>
         0 |   class vector_memory<class sized_array_memory<16> > vm_
         0 |     vector_memory<class sized_array_memory<16> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<8> >
         0 |   vector_memory<class sized_array_memory<8> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class Timer *>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class SimpleSpinlock (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class TimerSet
         0 |   class Timestamp _timer_expiry
         0 |     union Timestamp::rep_t _t
         0 |       int64_t x
         8 |   unsigned int _max_timer_stride
        12 |   unsigned int _timer_stride
        16 |   unsigned int _timer_count
        24 |   class Vector<struct TimerSet::heap_element> _timer_heap
        24 |     class vector_memory<class sized_array_memory<16> > vm_
        24 |       vector_memory<class sized_array_memory<16> >::type * l_
        32 |       vector_memory::size_type n_
        36 |       vector_memory::size_type capacity_
        40 |   class Vector<class Timer *> _timer_runchunk
        40 |     class vector_memory<class sized_array_memory<8> > vm_
        40 |       vector_memory<class sized_array_memory<8> >::type * l_
        48 |       vector_memory::size_type n_
        52 |       vector_memory::size_type capacity_
        56 |   class SimpleSpinlock _timer_lock (empty)
        64 |   class Timestamp _timer_check
        64 |     union Timestamp::rep_t _t
        64 |       int64_t x
        72 |   uint32_t _timer_check_reports
           | [sizeof=80, dsize=76, align=8,
           |  nvsize=76, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct pollfd>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<24> >
         0 |   vector_memory<class sized_array_memory<24> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct SelectSet::SelectorInfo>
         0 |   class vector_memory<class sized_array_memory<24> > vm_
         0 |     vector_memory<class sized_array_memory<24> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class SelectSet
         0 |   int [2] _wake_pipe
         8 |   volatile _Bool _wake_pipe_pending
        16 |   class Vector<struct pollfd> _pollfds
        16 |     class vector_memory<class sized_array_memory<8> > vm_
        16 |       vector_memory<class sized_array_memory<8> >::type * l_
        24 |       vector_memory::size_type n_
        28 |       vector_memory::size_type capacity_
        32 |   class Vector<struct SelectSet::SelectorInfo> _selinfo
        32 |     class vector_memory<class sized_array_memory<24> > vm_
        32 |       vector_memory<class sized_array_memory<24> >::type * l_
        40 |       vector_memory::size_type n_
        44 |       vector_memory::size_type capacity_
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | class Spinlock (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class SpinlockIRQ (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class RouterThread
         0 |   struct TaskLink _task_link
         0 |     struct TaskLink * _prev
         8 |     struct TaskLink * _next
        16 |     unsigned int _pass
        24 |   volatile _Bool _stop_flag
        32 |   class TimerSet _timers
        32 |     class Timestamp _timer_expiry
        32 |       union Timestamp::rep_t _t
        32 |         int64_t x
        40 |     unsigned int _max_timer_stride
        44 |     unsigned int _timer_stride
        48 |     unsigned int _timer_count
        56 |     class Vector<struct TimerSet::heap_element> _timer_heap
        56 |       class vector_memory<class sized_array_memory<16> > vm_
        56 |         vector_memory<class sized_array_memory<16> >::type * l_
        64 |         vector_memory::size_type n_
        68 |         vector_memory::size_type capacity_
        72 |     class Vector<class Timer *> _timer_runchunk
        72 |       class vector_memory<class sized_array_memory<8> > vm_
        72 |         vector_memory<class sized_array_memory<8> >::type * l_
        80 |         vector_memory::size_type n_
        84 |         vector_memory::size_type capacity_
        88 |     class SimpleSpinlock _timer_lock (empty)
        96 |     class Timestamp _timer_check
        96 |       union Timestamp::rep_t _t
        96 |         int64_t x
       104 |     uint32_t _timer_check_reports
       112 |   class SelectSet _selects
       112 |     int [2] _wake_pipe
       120 |     volatile _Bool _wake_pipe_pending
       128 |     class Vector<struct pollfd> _pollfds
       128 |       class vector_memory<class sized_array_memory<8> > vm_
       128 |         vector_memory<class sized_array_memory<8> >::type * l_
       136 |         vector_memory::size_type n_
       140 |         vector_memory::size_type capacity_
       144 |     class Vector<struct SelectSet::SelectorInfo> _selinfo
       144 |       class vector_memory<class sized_array_memory<24> > vm_
       144 |         vector_memory<class sized_array_memory<24> >::type * l_
       152 |         vector_memory::size_type n_
       156 |         vector_memory::size_type capacity_
       192 |   class Spinlock _task_lock (empty)
       196 |   class atomic_uint32_t _task_blocker
       196 |     uint32_t _val
       200 |   class atomic_uint32_t _task_blocker_waiting
       200 |     uint32_t _val
       208 |   union Task::Pending _pending_head
       208 |     class Task * t
       208 |     uintptr_t x
       216 |   class Task::Pending * _pending_tail
       224 |   class SpinlockIRQ _pending_lock (empty)
       256 |   class Master * _master
       264 |   int _id
       268 |   _Bool _driver_entered
       272 |   unsigned int _tasks_per_iter
       276 |   unsigned int _iters_per_os
           | [sizeof=320, dsize=280, align=64,
           |  nvsize=280, nvalign=64]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5566630b54b0 prev 0x5566630ac2f0 <../dummy_inc/click/timestamp.hh:539:5, line:566:5> line:539:11 referenced union rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5566630b55a8 <col:5, col:11> col:11 implicit union rep_t
|-FieldDecl 0x5566630b5648 <line:541:9, col:17> col:17 referenced x 'int64_t':'long'
|-CXXConstructorDecl 0x5566630bc410 <line:539:11> col:11 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x5566630bc7f8 <col:11>
|-CXXConstructorDecl 0x5566630bc4f0 <col:11> col:11 implicit used constexpr rep_t 'void (const Timestamp::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x5566630bc5d8 <col:11> col:11 'const Timestamp::rep_t &'
| `-CompoundStmt 0x5566630bcf40 <col:11>
|-CXXConstructorDecl 0x5566630bc678 <col:11> col:11 implicit used constexpr rep_t 'void (Timestamp::rep_t &&) noexcept' inline default trivial
| |-ParmVarDecl 0x5566630bc788 <col:11> col:11 'Timestamp::rep_t &&'
| `-CompoundStmt 0x5566630be798 <col:11>
|-CXXDestructorDecl 0x5566630bdaa8 <col:11> col:11 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x556662dc4658 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(const Timestamp::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x556662dc4768 <col:11> col:11 'const Timestamp::rep_t &'
| `-CompoundStmt 0x556662dc5030 <col:11>
|   `-ReturnStmt 0x556662dc5020 <col:11>
|     `-UnaryOperator 0x556662dc5008 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x556662dc4ff8 <col:11> 'Timestamp::rep_t *' this
`-CXXMethodDecl 0x556662dc47d8 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(Timestamp::rep_t &&) noexcept' inline default trivial
  |-ParmVarDecl 0x556662dc48e8 <col:11> col:11 'Timestamp::rep_t &&'
  `-CompoundStmt 0x556663156ed0 <col:11>
    `-ReturnStmt 0x556663156ec0 <col:11>
      `-UnaryOperator 0x556663156ea8 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
        `-CXXThisExpr 0x556663156e98 <col:11> 'Timestamp::rep_t *' this

Layout: <CGRecordLayout
  LLVMType:%"union.Timestamp::rep_t" = type { i64 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5566630ab4a8 prev 0x5566630ab1b8 <../dummy_inc/click/timestamp.hh:122:1, line:723:1> line:122:7 referenced class Timestamp definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5566630ab5a0 <col:1, col:7> col:7 implicit referenced class Timestamp
|-AccessSpecDecl 0x5566630ab630 <col:19, col:25> col:19 public
|-TypedefDecl 0x5566630ab668 <line:125:5, col:21> col:21 referenced seconds_type 'int32_t':'int'
| `-TypedefType 0x556662d10830 'int32_t' sugar
|   |-Typedef 0x556662c20268 'int32_t'
|   `-TypedefType 0x556662bf93b0 '__int32_t' sugar
|     |-Typedef 0x556662bf8fc8 '__int32_t'
|     `-BuiltinType 0x556662bb7370 'int'
|-TypedefDecl 0x5566630ab6d0 <line:128:5, col:21> col:21 referenced value_type 'int64_t':'long'
| `-TypedefType 0x556662d109f0 'int64_t' sugar
|   |-Typedef 0x556662c202d0 'int64_t'
|   `-TypedefType 0x556662bf94d0 '__int64_t' sugar
|     |-Typedef 0x556662bf90a8 '__int64_t'
|     `-BuiltinType 0x556662bb7390 'long'
|-EnumDecl 0x5566630ab728 <line:133:5, line:140:5> line:133:5
| |-EnumConstantDecl 0x5566630ab8a0 <line:134:9, col:38> col:9 max_seconds 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:133:5)'
| | `-ConstantExpr 0x5566630ab880 <col:23, col:38> 'Timestamp::seconds_type':'int' Int: 2147483647
| |   `-CStyleCastExpr 0x5566630ab858 <col:23, col:38> 'Timestamp::seconds_type':'int' <NoOp>
| |     `-ImplicitCastExpr 0x5566630ab840 <col:38> 'Timestamp::seconds_type':'int' <IntegralCast> part_of_explicit_cast
| |       `-IntegerLiteral 0x5566630ab810 <col:38> 'unsigned int' 2147483647
| `-EnumConstantDecl 0x5566630ab998 <line:137:9, col:39> col:9 min_seconds 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:133:5)'
|   `-ConstantExpr 0x5566630ab978 <col:23, col:39> 'Timestamp::seconds_type':'int' Int: -2147483648
|     `-CStyleCastExpr 0x5566630ab950 <col:23, col:39> 'Timestamp::seconds_type':'int' <NoOp>
|       `-ImplicitCastExpr 0x5566630ab938 <col:38, col:39> 'Timestamp::seconds_type':'int' <IntegralCast> part_of_explicit_cast
|         `-UnaryOperator 0x5566630ab910 <col:38, col:39> 'unsigned int' prefix '-'
|           `-IntegerLiteral 0x5566630ab8f0 <col:39> 'unsigned int' 2147483648
|-EnumDecl 0x5566630ab9e8 <line:142:5, line:162:5> line:142:5
| |-EnumConstantDecl 0x5566630abaf0 <line:143:9, col:24> col:9 referenced nsec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x5566630ac040 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5566630abad0 <col:24> 'int' Int: 1000000000
| |     `-IntegerLiteral 0x5566630abab0 <col:24> 'int' 1000000000
| |-EnumConstantDecl 0x5566630abb80 <line:144:9, col:25> col:9 nsec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x5566630ac058 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5566630abb60 <col:25> 'int' Int: 1000000
| |     `-IntegerLiteral 0x5566630abb40 <col:25> 'int' 1000000
| |-EnumConstantDecl 0x5566630abc10 <line:145:9, col:25> col:9 nsec_per_usec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x5566630ac070 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5566630abbf0 <col:25> 'int' Int: 1000
| |     `-IntegerLiteral 0x5566630abbd0 <col:25> 'int' 1000
| |-EnumConstantDecl 0x5566630abca0 <line:146:9, col:24> col:9 referenced usec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x5566630ac088 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5566630abc80 <col:24> 'int' Int: 1000000
| |     `-IntegerLiteral 0x5566630abc60 <col:24> 'int' 1000000
| |-EnumConstantDecl 0x5566630abd30 <line:147:9, col:25> col:9 usec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x5566630ac0a0 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5566630abd10 <col:25> 'int' Int: 1000
| |     `-IntegerLiteral 0x5566630abcf0 <col:25> 'int' 1000
| |-EnumConstantDecl 0x5566630abdc0 <line:148:9, col:24> col:9 referenced msec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x5566630ac0b8 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5566630abda0 <col:24> 'int' Int: 1000
| |     `-IntegerLiteral 0x5566630abd80 <col:24> 'int' 1000
| |-EnumConstantDecl 0x5566630abe50 <line:150:9, col:26> col:9 referenced subsec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x5566630ac0d0 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5566630abe30 <col:26> 'int' Int: 1000000000
| |     `-DeclRefExpr 0x5566630abe10 <col:26> 'int' EnumConstant 0x5566630abaf0 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| |-EnumConstantDecl 0x5566630abf20 <line:157:9, col:44> col:9 referenced subsec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x5566630ac0e8 <col:27, col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5566630abf00 <col:27, col:44> 'int' Int: 1000000
| |     `-BinaryOperator 0x5566630abee0 <col:27, col:44> 'int' '/'
| |       |-DeclRefExpr 0x5566630abea0 <col:27> 'int' EnumConstant 0x5566630abe50 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| |       `-DeclRefExpr 0x5566630abec0 <col:44> 'int' EnumConstant 0x5566630abdc0 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| `-EnumConstantDecl 0x5566630abff0 <line:158:9, col:44> col:9 referenced subsec_per_usec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ImplicitCastExpr 0x5566630ac100 <col:27, col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5566630abfd0 <col:27, col:44> 'int' Int: 1000
|       `-BinaryOperator 0x5566630abfb0 <col:27, col:44> 'int' '/'
|         |-DeclRefExpr 0x5566630abf70 <col:27> 'int' EnumConstant 0x5566630abe50 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|         `-DeclRefExpr 0x5566630abf90 <col:44> 'int' EnumConstant 0x5566630abca0 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-EnumDecl 0x5566630ac118 <line:164:5, line:166:5> line:164:5
| `-EnumConstantDecl 0x5566630ac220 <line:165:9, col:19> col:9 NSUBSEC 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:164:5)'
|   `-ImplicitCastExpr 0x5566630ac270 <col:19> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5566630ac200 <col:19> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' Int: 1000000000
|       `-DeclRefExpr 0x5566630ac1e0 <col:19> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5566630abe50 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-TypedefDecl 0x5566630ac298 <line:168:5, col:32> col:32 referenced uninitialized_t 'uninitialized_type'
| `-RecordType 0x556662d10460 'uninitialized_type'
|   `-CXXRecord 0x556662d103c8 'uninitialized_type'
|-CXXRecordDecl 0x5566630ac2f0 <line:170:5, col:11> col:11 referenced union rep_t
|-CXXConstructorDecl 0x5566630ac400 <line:174:5, line:176:5> line:174:12 used Timestamp 'void ()' inline
| |-CXXCtorInitializer Field 0x5566630b65f8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x5566630bc808 <col:12> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x5566630bc928 <col:24, line:176:5>
|   `-CXXMemberCallExpr 0x5566630bc8e0 <line:175:9, col:20> 'void'
|     |-MemberExpr 0x5566630bc870 <col:9> '<bound member function type>' ->assign 0x5566630b1048
|     | `-CXXThisExpr 0x5566630bc860 <col:9> 'Timestamp *' implicit this
|     |-IntegerLiteral 0x5566630bc8a0 <col:16> 'int' 0
|     `-ImplicitCastExpr 0x5566630bc910 <col:19> 'uint32_t':'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x5566630bc8c0 <col:19> 'int' 0
|-CXXConstructorDecl 0x5566630ac648 <line:187:5, line:189:5> line:187:21 Timestamp 'void (long, uint32_t)' inline
| |-ParmVarDecl 0x5566630ac4c0 <col:31, col:36> col:36 used sec 'long'
| |-ParmVarDecl 0x5566630ac538 <col:41, col:59> col:50 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x5566630b8140 <col:59> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x5566630b8120 <col:59> 'int' 0
| |-CXXCtorInitializer Field 0x5566630b65f8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x5566630bc940 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x5566630bca90 <col:62, line:189:5>
|   `-CXXMemberCallExpr 0x5566630bca18 <line:188:9, col:27> 'void'
|     |-MemberExpr 0x5566630bc9a8 <col:9> '<bound member function type>' ->assign 0x5566630b1048
|     | `-CXXThisExpr 0x5566630bc998 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x5566630bca60 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x5566630bca48 <col:16> 'long' <LValueToRValue>
|     |   `-DeclRefExpr 0x5566630bc9d8 <col:16> 'long' lvalue ParmVar 0x5566630ac4c0 'sec' 'long'
|     `-ImplicitCastExpr 0x5566630bca78 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x5566630bc9f8 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x5566630ac538 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x5566630ac8a8 <line:191:5, line:193:5> line:191:21 used Timestamp 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x5566630ac718 <col:31, col:35> col:35 used sec 'int'
| |-ParmVarDecl 0x5566630ac790 <col:40, col:58> col:49 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x5566630b8178 <col:58> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x5566630b8158 <col:58> 'int' 0
| |-CXXCtorInitializer Field 0x5566630b65f8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x5566630bcaa8 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x5566630bcbe0 <col:61, line:193:5>
|   `-CXXMemberCallExpr 0x5566630bcb80 <line:192:9, col:27> 'void'
|     |-MemberExpr 0x5566630bcb10 <col:9> '<bound member function type>' ->assign 0x5566630b1048
|     | `-CXXThisExpr 0x5566630bcb00 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x5566630bcbb0 <col:16> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x5566630bcb40 <col:16> 'int' lvalue ParmVar 0x5566630ac718 'sec' 'int'
|     `-ImplicitCastExpr 0x5566630bcbc8 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x5566630bcb60 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x5566630ac790 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x5566630acb08 <line:195:5, line:197:5> line:195:21 Timestamp 'void (unsigned long, uint32_t)' inline
| |-ParmVarDecl 0x5566630ac978 <col:31, col:45> col:45 used sec 'unsigned long'
| |-ParmVarDecl 0x5566630ac9f0 <col:50, col:68> col:59 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x5566630b81b0 <col:68> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x5566630b8190 <col:68> 'int' 0
| |-CXXCtorInitializer Field 0x5566630b65f8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x5566630bcbf8 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x5566630bcd48 <col:71, line:197:5>
|   `-CXXMemberCallExpr 0x5566630bccd0 <line:196:9, col:27> 'void'
|     |-MemberExpr 0x5566630bcc60 <col:9> '<bound member function type>' ->assign 0x5566630b1048
|     | `-CXXThisExpr 0x5566630bcc50 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x5566630bcd18 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x5566630bcd00 <col:16> 'unsigned long' <LValueToRValue>
|     |   `-DeclRefExpr 0x5566630bcc90 <col:16> 'unsigned long' lvalue ParmVar 0x5566630ac978 'sec' 'unsigned long'
|     `-ImplicitCastExpr 0x5566630bcd30 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x5566630bccb0 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x5566630ac9f0 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x5566630adca0 <line:199:5, line:201:5> line:199:21 used Timestamp 'void (unsigned int, uint32_t)' inline
| |-ParmVarDecl 0x5566630acbd8 <col:31, col:40> col:40 used sec 'unsigned int'
| |-ParmVarDecl 0x5566630acc50 <col:45, col:63> col:54 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x5566630b81e8 <col:63> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x5566630b81c8 <col:63> 'int' 0
| |-CXXCtorInitializer Field 0x5566630b65f8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x5566630bcd60 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x5566630bceb0 <col:66, line:201:5>
|   `-CXXMemberCallExpr 0x5566630bce38 <line:200:9, col:27> 'void'
|     |-MemberExpr 0x5566630bcdc8 <col:9> '<bound member function type>' ->assign 0x5566630b1048
|     | `-CXXThisExpr 0x5566630bcdb8 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x5566630bce80 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x5566630bce68 <col:16> 'unsigned int' <LValueToRValue>
|     |   `-DeclRefExpr 0x5566630bcdf8 <col:16> 'unsigned int' lvalue ParmVar 0x5566630acbd8 'sec' 'unsigned int'
|     `-ImplicitCastExpr 0x5566630bce98 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x5566630bce18 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x5566630acc50 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x5566630ade00 <line:203:5, col:37> col:21 used Timestamp 'void (double)' inline
| `-ParmVarDecl 0x5566630add70 <col:31> col:37 'double'
|-CXXConstructorDecl 0x5566630adf98 <line:206:5, col:46> col:12 Timestamp 'void (const struct timeval &)' inline
| `-ParmVarDecl 0x5566630aded8 <col:22, col:44> col:44 tv 'const struct timeval &'
|-CXXConstructorDecl 0x5566630ae1c8 <line:208:5, col:47> col:12 Timestamp 'void (const struct timespec &)' inline
| `-ParmVarDecl 0x5566630ae0d0 <col:22, col:45> col:45 ts 'const struct timespec &'
|-CXXConstructorDecl 0x5566630ae378 <line:212:5, line:214:5> line:212:12 Timestamp 'void (const Timestamp::rep_t &)' inline
| |-ParmVarDecl 0x5566630ae2b8 <col:22, col:35> col:35 used rep 'const Timestamp::rep_t &'
| |-CXXCtorInitializer Field 0x5566630b65f8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x5566630bcf50 <line:213:11, col:17> 'Timestamp::rep_t' 'void (const Timestamp::rep_t &) noexcept'
| |   `-DeclRefExpr 0x5566630bcec8 <col:14> 'const Timestamp::rep_t' lvalue ParmVar 0x5566630ae2b8 'rep' 'const Timestamp::rep_t &'
| `-CompoundStmt 0x5566630bcfb0 <col:19, line:214:5>
|-CXXConstructorDecl 0x5566630ae548 <line:217:5, line:219:5> line:217:12 used Timestamp 'void (const Timestamp::uninitialized_t &)' inline
| |-ParmVarDecl 0x5566630ae488 <col:22, col:45> col:45 used unused 'const Timestamp::uninitialized_t &'
| |-CXXCtorInitializer Field 0x5566630b65f8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x5566630bcfc0 <col:12> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x5566630bd070 <col:53, line:219:5>
|   `-CStyleCastExpr 0x5566630bd048 <line:218:9, col:16> 'void' <ToVoid>
|     `-DeclRefExpr 0x5566630bd018 <col:16> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue ParmVar 0x5566630ae488 'unused' 'const Timestamp::uninitialized_t &'
|-TypedefDecl 0x5566630ae738 <line:221:5, col:64> col:39 referenced unspecified_bool_type 'Timestamp::seconds_type (Timestamp::*)() const'
| `-MemberPointerType 0x5566630ae6b0 'Timestamp::seconds_type (Timestamp::*)() const'
|   |-RecordType 0x5566630ab250 'Timestamp'
|   | `-CXXRecord 0x5566630ab4a8 'Timestamp'
|   `-ParenType 0x5566630ae650 'Timestamp::seconds_type () const' sugar
|     `-FunctionProtoType 0x5566630ae620 'Timestamp::seconds_type () const' const cdecl
|       `-TypedefType 0x5566630ab7f0 'Timestamp::seconds_type' sugar
|         |-Typedef 0x5566630ab668 'seconds_type'
|         `-TypedefType 0x556662d10830 'int32_t' sugar
|           |-Typedef 0x556662c20268 'int32_t'
|           `-TypedefType 0x556662bf93b0 '__int32_t' sugar
|             |-Typedef 0x556662bf8fc8 '__int32_t'
|             `-BuiltinType 0x556662bb7370 'int'
|-CXXConversionDecl 0x5566630ae878 <line:222:5, col:45> col:12 used operator int (Timestamp::*)() const 'Timestamp::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x5566630ae948 <line:225:5, line:231:5> line:225:17 is_negative 'bool () const' inline
| `-CompoundStmt 0x5566630bd178 <col:37, line:231:5>
|   `-ReturnStmt 0x5566630bd168 <line:227:9, col:23>
|     `-BinaryOperator 0x5566630bd148 <col:16, col:23> 'bool' '<'
|       |-ImplicitCastExpr 0x5566630bd118 <col:16, col:19> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x5566630bd0c8 <col:16, col:19> 'const int64_t':'const long' lvalue .x 0x5566630b5648
|       |   `-MemberExpr 0x5566630bd098 <col:16> 'const Timestamp::rep_t' lvalue ->_t 0x5566630b65f8
|       |     `-CXXThisExpr 0x5566630bd088 <col:16> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x5566630bd130 <col:23> 'long' <IntegralCast>
|         `-IntegerLiteral 0x5566630bd0f8 <col:23> 'int' 0
|-CXXMethodDecl 0x5566630aea08 <line:233:5, col:31> col:25 used sec 'Timestamp::seconds_type () const' inline
|-CXXMethodDecl 0x5566630aeac8 <line:234:5, col:30> col:21 used subsec 'uint32_t () const' inline
|-CXXMethodDecl 0x5566630aeb88 <line:235:5, col:28> col:21 msec 'uint32_t () const' inline
|-CXXMethodDecl 0x5566630aec48 <line:236:5, col:28> col:21 used usec 'uint32_t () const' inline
|-CXXMethodDecl 0x5566630aed08 <line:237:5, col:28> col:21 used nsec 'uint32_t () const' inline
|-CXXMethodDecl 0x5566630aee78 <line:239:5, col:41> col:17 set_sec 'void (Timestamp::seconds_type)' inline
| `-ParmVarDecl 0x5566630aedb8 <col:25, col:38> col:38 sec 'Timestamp::seconds_type':'int'
|-CXXMethodDecl 0x5566630aefc0 <line:240:5, col:43> col:17 set_subsec 'void (uint32_t)' inline
| `-ParmVarDecl 0x5566630aef30 <col:28, col:37> col:37 subsec 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5566630af088 <line:242:5, col:65> col:25 msec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x5566630af128 <col:54> "" ""
|-CXXMethodDecl 0x5566630af1b8 <line:243:5, col:65> col:25 usec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x5566630af258 <col:54> "" ""
|-CXXMethodDecl 0x5566630af2e8 <line:244:5, col:65> col:25 nsec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x5566630af388 <col:54> "" ""
|-CXXMethodDecl 0x5566630af488 <line:250:5, col:37> col:27 used timeval 'struct timeval () const' inline
|-CXXMethodDecl 0x5566630af558 <line:251:5, col:42> col:27 timeval_ceil 'struct timeval () const' inline
|-CXXMethodDecl 0x5566630af688 <line:257:5, col:39> col:28 timespec 'struct timespec () const' inline
|-CXXMethodDecl 0x5566630af780 <line:262:5, col:31> col:19 used doubleval 'double () const' inline
|-CXXMethodDecl 0x5566630af8b8 <line:265:5, line:271:5> line:265:23 msecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x5566630bd390 <col:39, line:271:5>
|   `-ReturnStmt 0x5566630bd380 <line:267:9, col:61>
|     `-CallExpr 0x5566630bd320 <col:16, col:61> 'Timestamp::value_type':'long'
|       |-ImplicitCastExpr 0x5566630bd308 <col:16> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x5566630bd190 <col:16> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x5566630b6928 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|       |-ImplicitCastExpr 0x5566630bd350 <col:26, col:29> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x5566630bd1f0 <col:26, col:29> 'const int64_t':'const long' lvalue .x 0x5566630b5648
|       |   `-MemberExpr 0x5566630bd1c0 <col:26> 'const Timestamp::rep_t' lvalue ->_t 0x5566630b65f8
|       |     `-CXXThisExpr 0x5566630bd1b0 <col:26> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x5566630bd368 <col:32, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|         `-BinaryOperator 0x5566630bd290 <col:32, col:49> 'int' '/'
|           |-ImplicitCastExpr 0x5566630bd260 <col:32> 'int' <IntegralCast>
|           | `-DeclRefExpr 0x5566630bd220 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5566630abe50 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|           `-ImplicitCastExpr 0x5566630bd278 <col:49> 'int' <IntegralCast>
|             `-DeclRefExpr 0x5566630bd240 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5566630abdc0 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x5566630af978 <line:273:5, line:279:5> line:273:23 usecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x5566630bd550 <col:39, line:279:5>
|   `-ReturnStmt 0x5566630bd540 <line:275:9, col:61>
|     `-CallExpr 0x5566630bd4e0 <col:16, col:61> 'Timestamp::value_type':'long'
|       |-ImplicitCastExpr 0x5566630bd4c8 <col:16> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x5566630bd3a8 <col:16> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x5566630b6928 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|       |-ImplicitCastExpr 0x5566630bd510 <col:26, col:29> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x5566630bd408 <col:26, col:29> 'const int64_t':'const long' lvalue .x 0x5566630b5648
|       |   `-MemberExpr 0x5566630bd3d8 <col:26> 'const Timestamp::rep_t' lvalue ->_t 0x5566630b65f8
|       |     `-CXXThisExpr 0x5566630bd3c8 <col:26> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x5566630bd528 <col:32, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|         `-BinaryOperator 0x5566630bd4a8 <col:32, col:49> 'int' '/'
|           |-ImplicitCastExpr 0x5566630bd478 <col:32> 'int' <IntegralCast>
|           | `-DeclRefExpr 0x5566630bd438 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5566630abe50 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|           `-ImplicitCastExpr 0x5566630bd490 <col:49> 'int' <IntegralCast>
|             `-DeclRefExpr 0x5566630bd458 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5566630abca0 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x5566630afa38 <line:281:5, line:287:5> line:281:23 nsecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x5566630bd6e8 <col:39, line:287:5>
|   `-ReturnStmt 0x5566630bd6d8 <line:283:9, col:53>
|     `-BinaryOperator 0x5566630bd6b8 <col:16, col:53> 'long' '*'
|       |-ImplicitCastExpr 0x5566630bd688 <col:16, col:19> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x5566630bd5a8 <col:16, col:19> 'const int64_t':'const long' lvalue .x 0x5566630b5648
|       |   `-MemberExpr 0x5566630bd578 <col:16> 'const Timestamp::rep_t' lvalue ->_t 0x5566630b65f8
|       |     `-CXXThisExpr 0x5566630bd568 <col:16> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x5566630bd6a0 <col:23, col:53> 'long' <IntegralCast>
|         `-ParenExpr 0x5566630bd668 <col:23, col:53> 'int'
|           `-BinaryOperator 0x5566630bd648 <col:24, col:39> 'int' '/'
|             |-ImplicitCastExpr 0x5566630bd618 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x5566630bd5d8 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5566630abaf0 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x5566630bd630 <col:39> 'int' <IntegralCast>
|               `-DeclRefExpr 0x5566630bd5f8 <col:39> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5566630abe50 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x5566630afb28 <line:290:5, line:293:5> line:290:22 msec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x5566630be980 <col:40, line:293:5>
|   |-DeclStmt 0x5566630bd830 <line:291:9, col:48>
|   | `-VarDecl 0x5566630bd710 <col:9, col:33> col:18 used x 'uint32_t':'unsigned int' cinit
|   |   `-BinaryOperator 0x5566630bd810 <col:22, col:33> 'unsigned int' '%'
|   |     |-CXXMemberCallExpr 0x5566630bd7b8 <col:22, col:29> 'uint32_t':'unsigned int'
|   |     | `-MemberExpr 0x5566630bd788 <col:22> '<bound member function type>' ->subsec 0x5566630aeac8
|   |     |   `-CXXThisExpr 0x5566630bd778 <col:22> 'const Timestamp *' implicit this
|   |     `-ImplicitCastExpr 0x5566630bd7f8 <col:33> 'unsigned int' <IntegralCast>
|   |       `-DeclRefExpr 0x5566630bd7d8 <col:33> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5566630abf20 'subsec_per_msec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x5566630be970 <line:292:9, col:70>
|     `-ExprWithCleanups 0x5566630be958 <col:16, col:70> 'Timestamp'
|       `-CXXConstructExpr 0x5566630be928 <col:16, col:70> 'Timestamp' 'void (const Timestamp &) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x5566630be910 <col:16, col:70> 'const Timestamp' lvalue
|           `-ParenExpr 0x5566630be8f0 <col:16, col:70> 'const Timestamp'
|             `-ConditionalOperator 0x5566630be8c0 <col:17, col:66> 'const Timestamp'
|               |-ImplicitCastExpr 0x5566630be658 <col:17> 'bool' <IntegralToBoolean>
|               | `-ImplicitCastExpr 0x5566630be640 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|               |   `-DeclRefExpr 0x5566630bd848 <col:17> 'uint32_t':'unsigned int' lvalue Var 0x5566630bd710 'x' 'uint32_t':'unsigned int'
|               |-CXXConstructExpr 0x5566630be860 <col:21, col:61> 'const Timestamp' 'void (const Timestamp &) noexcept' elidable
|               | `-MaterializeTemporaryExpr 0x5566630be848 <col:21, col:61> 'const Timestamp' lvalue
|               |   `-CXXConstructExpr 0x5566630be818 <col:21, col:61> 'const Timestamp' 'void (Timestamp &&) noexcept' elidable
|               |     `-MaterializeTemporaryExpr 0x5566630be670 <col:21, col:61> 'Timestamp' xvalue
|               |       `-CXXOperatorCallExpr 0x5566630be5e0 <col:21, col:61> 'Timestamp'
|               |         |-ImplicitCastExpr 0x5566630be5c8 <col:27> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|               |         | `-DeclRefExpr 0x5566630be578 <col:27> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x5566630ab3f8 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|               |         |-CXXConstructExpr 0x5566630be518 <col:21, col:22> 'Timestamp' 'void (const Timestamp &) noexcept'
|               |         | `-UnaryOperator 0x5566630bd878 <col:21, col:22> 'const Timestamp' lvalue prefix '*' cannot overflow
|               |         |   `-CXXThisExpr 0x5566630bd868 <col:22> 'const Timestamp *' this
|               |         `-MaterializeTemporaryExpr 0x5566630be560 <col:29, col:61> 'const Timestamp' lvalue
|               |           `-ImplicitCastExpr 0x5566630be548 <col:29, col:61> 'const Timestamp' <NoOp>
|               |             `-CXXTemporaryObjectExpr 0x5566630bdd38 <col:29, col:61> 'Timestamp' 'void (int, uint32_t)'
|               |               |-IntegerLiteral 0x5566630bd8a0 <col:39> 'int' 0
|               |               `-BinaryOperator 0x5566630bd930 <col:42, col:60> 'unsigned int' '-'
|               |                 |-ImplicitCastExpr 0x5566630bd900 <col:42> 'unsigned int' <IntegralCast>
|               |                 | `-DeclRefExpr 0x5566630bd8c0 <col:42> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5566630abf20 'subsec_per_msec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|               |                 `-ImplicitCastExpr 0x5566630bd918 <col:60> 'uint32_t':'unsigned int' <LValueToRValue>
|               |                   `-DeclRefExpr 0x5566630bd8e0 <col:60> 'uint32_t':'unsigned int' lvalue Var 0x5566630bd710 'x' 'uint32_t':'unsigned int'
|               `-CXXConstructExpr 0x5566630be890 <col:65, col:66> 'const Timestamp' 'void (const Timestamp &) noexcept'
|                 `-UnaryOperator 0x5566630be628 <col:65, col:66> 'const Timestamp' lvalue prefix '*' cannot overflow
|                   `-CXXThisExpr 0x5566630be618 <col:66> 'const Timestamp *' this
|-CXXMethodDecl 0x5566630afbe8 <line:295:5, line:302:5> line:295:22 usec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x5566630beed8 <col:40, line:302:5>
|   |-DeclStmt 0x5566630bead0 <line:297:9, col:48>
|   | `-VarDecl 0x5566630be9b0 <col:9, col:33> col:18 used x 'uint32_t':'unsigned int' cinit
|   |   `-BinaryOperator 0x5566630beab0 <col:22, col:33> 'unsigned int' '%'
|   |     |-CXXMemberCallExpr 0x5566630bea58 <col:22, col:29> 'uint32_t':'unsigned int'
|   |     | `-MemberExpr 0x5566630bea28 <col:22> '<bound member function type>' ->subsec 0x5566630aeac8
|   |     |   `-CXXThisExpr 0x5566630bea18 <col:22> 'const Timestamp *' implicit this
|   |     `-ImplicitCastExpr 0x5566630bea98 <col:33> 'unsigned int' <IntegralCast>
|   |       `-DeclRefExpr 0x5566630bea78 <col:33> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5566630abff0 'subsec_per_usec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x5566630beec8 <line:298:9, col:70>
|     `-ExprWithCleanups 0x5566630beeb0 <col:16, col:70> 'Timestamp'
|       `-CXXConstructExpr 0x5566630bee80 <col:16, col:70> 'Timestamp' 'void (const Timestamp &) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x5566630bee68 <col:16, col:70> 'const Timestamp' lvalue
|           `-ParenExpr 0x5566630bee48 <col:16, col:70> 'const Timestamp'
|             `-ConditionalOperator 0x5566630bee18 <col:17, col:66> 'const Timestamp'
|               |-ImplicitCastExpr 0x5566630bed40 <col:17> 'bool' <IntegralToBoolean>
|               | `-ImplicitCastExpr 0x5566630bed28 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|               |   `-DeclRefExpr 0x5566630beae8 <col:17> 'uint32_t':'unsigned int' lvalue Var 0x5566630be9b0 'x' 'uint32_t':'unsigned int'
|               |-CXXConstructExpr 0x5566630bedb8 <col:21, col:61> 'const Timestamp' 'void (const Timestamp &) noexcept' elidable
|               | `-MaterializeTemporaryExpr 0x5566630beda0 <col:21, col:61> 'const Timestamp' lvalue
|               |   `-CXXConstructExpr 0x5566630bed70 <col:21, col:61> 'const Timestamp' 'void (Timestamp &&) noexcept' elidable
|               |     `-MaterializeTemporaryExpr 0x5566630bed58 <col:21, col:61> 'Timestamp' xvalue
|               |       `-CXXOperatorCallExpr 0x5566630becc8 <col:21, col:61> 'Timestamp'
|               |         |-ImplicitCastExpr 0x5566630becb0 <col:27> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|               |         | `-DeclRefExpr 0x5566630bec90 <col:27> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x5566630ab3f8 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|               |         |-CXXConstructExpr 0x5566630bec30 <col:21, col:22> 'Timestamp' 'void (const Timestamp &) noexcept'
|               |         | `-UnaryOperator 0x5566630beb18 <col:21, col:22> 'const Timestamp' lvalue prefix '*' cannot overflow
|               |         |   `-CXXThisExpr 0x5566630beb08 <col:22> 'const Timestamp *' this
|               |         `-MaterializeTemporaryExpr 0x5566630bec78 <col:29, col:61> 'const Timestamp' lvalue
|               |           `-ImplicitCastExpr 0x5566630bec60 <col:29, col:61> 'const Timestamp' <NoOp>
|               |             `-CXXTemporaryObjectExpr 0x5566630bebf0 <col:29, col:61> 'Timestamp' 'void (int, uint32_t)'
|               |               |-IntegerLiteral 0x5566630beb40 <col:39> 'int' 0
|               |               `-BinaryOperator 0x5566630bebd0 <col:42, col:60> 'unsigned int' '-'
|               |                 |-ImplicitCastExpr 0x5566630beba0 <col:42> 'unsigned int' <IntegralCast>
|               |                 | `-DeclRefExpr 0x5566630beb60 <col:42> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5566630abff0 'subsec_per_usec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|               |                 `-ImplicitCastExpr 0x5566630bebb8 <col:60> 'uint32_t':'unsigned int' <LValueToRValue>
|               |                   `-DeclRefExpr 0x5566630beb80 <col:60> 'uint32_t':'unsigned int' lvalue Var 0x5566630be9b0 'x' 'uint32_t':'unsigned int'
|               `-CXXConstructExpr 0x5566630bede8 <col:65, col:66> 'const Timestamp' 'void (const Timestamp &) noexcept'
|                 `-UnaryOperator 0x5566630bed10 <col:65, col:66> 'const Timestamp' lvalue prefix '*' cannot overflow
|                   `-CXXThisExpr 0x5566630bed00 <col:66> 'const Timestamp *' this
|-CXXMethodDecl 0x5566630afca8 <line:304:5, line:306:5> line:304:22 nsec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x5566630bef60 <col:40, line:306:5>
|   `-ReturnStmt 0x5566630bef50 <line:305:9, col:17>
|     `-CXXConstructExpr 0x5566630bef20 <col:16, col:17> 'Timestamp' 'void (const Timestamp &) noexcept'
|       `-UnaryOperator 0x5566630bef08 <col:16, col:17> 'const Timestamp' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x5566630beef8 <col:17> 'const Timestamp *' this
|-CXXMethodDecl 0x5566630afe48 <line:310:5, col:65> col:29 make_jiffies 'Timestamp (click_jiffies_t)' static inline
| `-ParmVarDecl 0x5566630afd58 <col:42, col:58> col:58 jiffies 'click_jiffies_t':'unsigned int'
|-CXXMethodDecl 0x5566630b0018 <line:312:5, col:76> col:29 make_jiffies 'Timestamp (click_jiffies_difference_t)' static inline
| `-ParmVarDecl 0x5566630aff20 <col:42, col:69> col:69 jiffies 'click_jiffies_difference_t':'int'
|-CXXMethodDecl 0x5566630b0108 <line:314:5, col:38> col:28 jiffies 'click_jiffies_t () const' inline
|-CXXMethodDecl 0x5566630b0278 <line:318:5, line:320:5> line:318:29 make_sec 'Timestamp (Timestamp::seconds_type)' static inline
| |-ParmVarDecl 0x5566630b01b8 <col:38, col:51> col:51 used sec 'Timestamp::seconds_type':'int'
| `-CompoundStmt 0x5566630bf0a8 <col:56, line:320:5>
|   `-ReturnStmt 0x5566630bf098 <line:319:9, col:32>
|     `-ExprWithCleanups 0x5566630bf080 <col:16, col:32> 'Timestamp'
|       `-CXXConstructExpr 0x5566630bf050 <col:16, col:32> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x5566630bf038 <col:16, col:32> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x5566630beff8 <col:16, col:32> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x5566630befc8 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x5566630bef88 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x5566630b01b8 'sec' 'Timestamp::seconds_type':'int'
|             `-ImplicitCastExpr 0x5566630befe0 <col:31> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x5566630befa8 <col:31> 'int' 0
|-CXXMethodDecl 0x5566630b04b8 <line:324:5, line:326:5> line:324:29 make_msec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x5566630b0330 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x5566630b03a8 <col:57, col:66> col:66 used msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x5566630bf278 <col:72, line:326:5>
|   `-ReturnStmt 0x5566630bf268 <line:325:9, col:51>
|     `-ExprWithCleanups 0x5566630bf250 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x5566630bf220 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x5566630bf208 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x5566630bf1c8 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x5566630bf1b0 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x5566630bf0d0 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x5566630b0330 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x5566630bf170 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x5566630bf158 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x5566630bf0f0 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x5566630b4da0 'msec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x5566630bf198 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x5566630bf110 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x5566630b03a8 'msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5566630b0668 <line:328:5, line:337:5> line:328:29 used make_msec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x5566630b0578 <col:39, col:50> col:50 used msec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x5566630bf940 <col:56, line:337:5>
|   |-DeclStmt 0x5566630bf578 <line:329:9, col:51>
|   | `-VarDecl 0x5566630bf2a0 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x5566630bf560 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x5566630bf530 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x5566630bf518 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x5566630bf500 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x5566630bf4d0 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x5566630bf4b8 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x5566630bf4a0 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x5566630bf390 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x5566630bf730 <line:331:9, col:55> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x5566630bf5e0 <col:9, col:14> 'int64_t':'long' lvalue .x 0x5566630b5648
|   | | `-MemberExpr 0x5566630bf5b0 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x5566630b65f8
|   | |   `-DeclRefExpr 0x5566630bf590 <col:9> 'Timestamp' lvalue Var 0x5566630bf2a0 't' 'Timestamp'
|   | `-BinaryOperator 0x5566630bf710 <col:18, col:55> 'long' '*'
|   |   |-ImplicitCastExpr 0x5566630bf6e0 <col:18> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5566630bf610 <col:18> 'Timestamp::value_type':'long' lvalue ParmVar 0x5566630b0578 'msec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x5566630bf6f8 <col:25, col:55> 'long' <IntegralCast>
|   |     `-ParenExpr 0x5566630bf6c0 <col:25, col:55> 'int'
|   |       `-BinaryOperator 0x5566630bf6a0 <col:26, col:43> 'int' '/'
|   |         |-ImplicitCastExpr 0x5566630bf670 <col:26> 'int' <IntegralCast>
|   |         | `-DeclRefExpr 0x5566630bf630 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5566630abe50 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |         `-ImplicitCastExpr 0x5566630bf688 <col:43> 'int' <IntegralCast>
|   |           `-DeclRefExpr 0x5566630bf650 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5566630abdc0 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x5566630bf928 <line:336:9, col:16>
|     `-CXXConstructExpr 0x5566630bf8f8 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x5566630bf8e0 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x5566630bf8c0 <col:16> 'Timestamp' lvalue Var 0x5566630bf2a0 't' 'Timestamp'
|-CXXMethodDecl 0x5566630b0830 <line:341:5, line:343:5> line:341:29 make_usec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x5566630b0720 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x5566630b0798 <col:57, col:66> col:66 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x5566630bfaf8 <col:72, line:343:5>
|   `-ReturnStmt 0x5566630bfae8 <line:342:9, col:51>
|     `-ExprWithCleanups 0x5566630bfad0 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x5566630bfaa0 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x5566630bfa88 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x5566630bfa48 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x5566630bfa30 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x5566630bf978 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x5566630b0720 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x5566630bf9f0 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x5566630bf9d8 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x5566630bf998 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x5566630b4ee8 'usec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x5566630bfa18 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x5566630bf9b8 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x5566630b0798 'usec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5566630b0980 <line:345:5, line:354:5> line:345:29 used make_usec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x5566630b08f0 <col:39, col:50> col:50 used usec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x5566630bff40 <col:56, line:354:5>
|   |-DeclStmt 0x5566630bfce8 <line:346:9, col:51>
|   | `-VarDecl 0x5566630bfb20 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x5566630bfcd0 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x5566630bfca0 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x5566630bfc88 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x5566630bfc70 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x5566630bfc40 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x5566630bfc28 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x5566630bfc10 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x5566630bfbe0 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x5566630bfea0 <line:348:9, col:55> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x5566630bfd50 <col:9, col:14> 'int64_t':'long' lvalue .x 0x5566630b5648
|   | | `-MemberExpr 0x5566630bfd20 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x5566630b65f8
|   | |   `-DeclRefExpr 0x5566630bfd00 <col:9> 'Timestamp' lvalue Var 0x5566630bfb20 't' 'Timestamp'
|   | `-BinaryOperator 0x5566630bfe80 <col:18, col:55> 'long' '*'
|   |   |-ImplicitCastExpr 0x5566630bfe50 <col:18> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5566630bfd80 <col:18> 'Timestamp::value_type':'long' lvalue ParmVar 0x5566630b08f0 'usec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x5566630bfe68 <col:25, col:55> 'long' <IntegralCast>
|   |     `-ParenExpr 0x5566630bfe30 <col:25, col:55> 'int'
|   |       `-BinaryOperator 0x5566630bfe10 <col:26, col:43> 'int' '/'
|   |         |-ImplicitCastExpr 0x5566630bfde0 <col:26> 'int' <IntegralCast>
|   |         | `-DeclRefExpr 0x5566630bfda0 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5566630abe50 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |         `-ImplicitCastExpr 0x5566630bfdf8 <col:43> 'int' <IntegralCast>
|   |           `-DeclRefExpr 0x5566630bfdc0 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5566630abca0 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x5566630bff28 <line:353:9, col:16>
|     `-CXXConstructExpr 0x5566630bfef8 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x5566630bfee0 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x5566630bfec0 <col:16> 'Timestamp' lvalue Var 0x5566630bfb20 't' 'Timestamp'
|-CXXMethodDecl 0x5566630b0b48 <line:358:5, line:360:5> line:358:29 make_nsec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x5566630b0a38 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x5566630b0ab0 <col:57, col:66> col:66 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x5566630c00f8 <col:72, line:360:5>
|   `-ReturnStmt 0x5566630c00e8 <line:359:9, col:51>
|     `-ExprWithCleanups 0x5566630c00d0 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x5566630c00a0 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x5566630c0088 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x5566630c0048 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x5566630c0030 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x5566630bff78 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x5566630b0a38 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x5566630bfff0 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x5566630bffd8 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x5566630bff98 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x5566630b5030 'nsec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x5566630c0018 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x5566630bffb8 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x5566630b0ab0 'nsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5566630b0c98 <line:362:5, line:371:5> line:362:29 make_nsec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x5566630b0c08 <col:39, col:50> col:50 used nsec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x5566630cca68 <col:56, line:371:5>
|   |-DeclStmt 0x5566630c02e8 <line:363:9, col:51>
|   | `-VarDecl 0x5566630c0120 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x5566630c02d0 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x5566630c02a0 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x5566630c0288 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x5566630c0270 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x5566630c0240 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x5566630c0228 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x5566630c0210 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x5566630c01e0 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x5566630cc9c8 <line:365:9, col:63> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x5566630c0350 <col:9, col:14> 'int64_t':'long' lvalue .x 0x5566630b5648
|   | | `-MemberExpr 0x5566630c0320 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x5566630b65f8
|   | |   `-DeclRefExpr 0x5566630c0300 <col:9> 'Timestamp' lvalue Var 0x5566630c0120 't' 'Timestamp'
|   | `-CallExpr 0x5566630cc968 <col:18, col:63> 'Timestamp::value_type':'long'
|   |   |-ImplicitCastExpr 0x5566630cc950 <col:18> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x5566630c0380 <col:18> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x5566630b6928 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|   |   |-ImplicitCastExpr 0x5566630cc998 <col:28> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5566630c03a0 <col:28> 'Timestamp::value_type':'long' lvalue ParmVar 0x5566630b0c08 'nsec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x5566630cc9b0 <col:34, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|   |     `-BinaryOperator 0x5566630cc930 <col:34, col:49> 'int' '/'
|   |       |-ImplicitCastExpr 0x5566630cc900 <col:34> 'int' <IntegralCast>
|   |       | `-DeclRefExpr 0x5566630c03c0 <col:34> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5566630abaf0 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |       `-ImplicitCastExpr 0x5566630cc918 <col:49> 'int' <IntegralCast>
|   |         `-DeclRefExpr 0x5566630c03e0 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5566630abe50 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x5566630cca50 <line:370:9, col:16>
|     `-CXXConstructExpr 0x5566630cca20 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x5566630cca08 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x5566630cc9e8 <col:16> 'Timestamp' lvalue Var 0x5566630c0120 't' 'Timestamp'
|-CXXMethodDecl 0x5566630b0d88 <line:375:5, line:377:5> line:375:29 epsilon 'Timestamp ()' static inline
| `-CompoundStmt 0x5566630ccba8 <col:39, line:377:5>
|   `-ReturnStmt 0x5566630ccb98 <line:376:9, col:30>
|     `-ExprWithCleanups 0x5566630ccb80 <col:16, col:30> 'Timestamp'
|       `-CXXConstructExpr 0x5566630ccb50 <col:16, col:30> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x5566630ccb38 <col:16, col:30> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x5566630ccaf8 <col:16, col:30> 'Timestamp' 'void (int, uint32_t)'
|             |-IntegerLiteral 0x5566630ccaa0 <col:26> 'int' 0
|             `-ImplicitCastExpr 0x5566630ccae0 <col:29> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x5566630ccac0 <col:29> 'int' 1
|-CXXMethodDecl 0x5566630b0e48 <line:380:5, line:382:5> line:380:17 clear 'void ()' inline
| `-CompoundStmt 0x5566630ccc88 <col:25, line:382:5>
|   `-CXXMemberCallExpr 0x5566630ccc40 <line:381:9, col:20> 'void'
|     |-MemberExpr 0x5566630ccbd0 <col:9> '<bound member function type>' ->assign 0x5566630b1048
|     | `-CXXThisExpr 0x5566630ccbc0 <col:9> 'Timestamp *' implicit this
|     |-IntegerLiteral 0x5566630ccc00 <col:16> 'int' 0
|     `-ImplicitCastExpr 0x5566630ccc70 <col:19> 'uint32_t':'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x5566630ccc20 <col:19> 'int' 0
|-CXXMethodDecl 0x5566630b1048 <line:388:5, line:395:5> line:388:17 used assign 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x5566630b0ef8 <col:24, col:37> col:37 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x5566630b0f70 <col:42, col:60> col:51 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x5566630b8220 <col:60> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x5566630b8200 <col:60> 'int' 0
| `-CompoundStmt 0x5566630cce80 <col:63, line:395:5>
|   `-BinaryOperator 0x5566630cce60 <line:390:9, col:49> 'int64_t':'long' lvalue '='
|     |-MemberExpr 0x5566630ccce0 <col:9, col:12> 'int64_t':'long' lvalue .x 0x5566630b5648
|     | `-MemberExpr 0x5566630cccb0 <col:9> 'Timestamp::rep_t' lvalue ->_t 0x5566630b65f8
|     |   `-CXXThisExpr 0x5566630ccca0 <col:9> 'Timestamp *' implicit this
|     `-BinaryOperator 0x5566630cce40 <col:16, col:49> 'long' '+'
|       |-BinaryOperator 0x5566630ccdd0 <col:16, col:32> 'long' '*'
|       | |-CStyleCastExpr 0x5566630ccd70 <col:16, col:26> 'int64_t':'long' <NoOp>
|       | | `-ImplicitCastExpr 0x5566630ccd58 <col:26> 'int64_t':'long' <IntegralCast> part_of_explicit_cast
|       | |   `-ImplicitCastExpr 0x5566630ccd40 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue> part_of_explicit_cast
|       | |     `-DeclRefExpr 0x5566630ccd10 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x5566630b0ef8 'sec' 'Timestamp::seconds_type':'int'
|       | `-ImplicitCastExpr 0x5566630ccdb8 <col:32> 'long' <IntegralCast>
|       |   `-DeclRefExpr 0x5566630ccd98 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5566630abe50 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|       `-ImplicitCastExpr 0x5566630cce28 <col:49> 'long' <IntegralCast>
|         `-ImplicitCastExpr 0x5566630cce10 <col:49> 'uint32_t':'unsigned int' <LValueToRValue>
|           `-DeclRefExpr 0x5566630ccdf0 <col:49> 'uint32_t':'unsigned int' lvalue ParmVar 0x5566630b0f70 'subsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5566630b1218 <line:397:5, line:399:5> line:397:17 used assign_usec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x5566630b1108 <col:29, col:42> col:42 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x5566630b1180 <col:47, col:56> col:56 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x5566630ccfd8 <col:62, line:399:5>
|   `-CXXMemberCallExpr 0x5566630ccf90 <line:398:9, col:41> 'void'
|     |-MemberExpr 0x5566630ccea8 <col:9> '<bound member function type>' ->assign 0x5566630b1048
|     | `-CXXThisExpr 0x5566630cce98 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x5566630ccfc0 <col:16> 'Timestamp::seconds_type':'int' <LValueToRValue>
|     | `-DeclRefExpr 0x5566630cced8 <col:16> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x5566630b1108 'sec' 'Timestamp::seconds_type':'int'
|     `-CallExpr 0x5566630ccf50 <col:21, col:40> 'uint32_t':'unsigned int'
|       |-ImplicitCastExpr 0x5566630ccf38 <col:21> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x5566630ccef8 <col:21> 'uint32_t (uint32_t)' lvalue CXXMethod 0x5566630b4ee8 'usec_to_subsec' 'uint32_t (uint32_t)'
|       `-ImplicitCastExpr 0x5566630ccf78 <col:36> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x5566630ccf18 <col:36> 'uint32_t':'unsigned int' lvalue ParmVar 0x5566630b1180 'usec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5566630b13e8 <line:401:5, line:403:5> line:401:17 used assign_nsec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x5566630b12d8 <col:29, col:42> col:42 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x5566630b1350 <col:47, col:56> col:56 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x5566630cd130 <col:62, line:403:5>
|   `-CXXMemberCallExpr 0x5566630cd0e8 <line:402:9, col:41> 'void'
|     |-MemberExpr 0x5566630cd000 <col:9> '<bound member function type>' ->assign 0x5566630b1048
|     | `-CXXThisExpr 0x5566630ccff0 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x5566630cd118 <col:16> 'Timestamp::seconds_type':'int' <LValueToRValue>
|     | `-DeclRefExpr 0x5566630cd030 <col:16> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x5566630b12d8 'sec' 'Timestamp::seconds_type':'int'
|     `-CallExpr 0x5566630cd0a8 <col:21, col:40> 'uint32_t':'unsigned int'
|       |-ImplicitCastExpr 0x5566630cd090 <col:21> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x5566630cd050 <col:21> 'uint32_t (uint32_t)' lvalue CXXMethod 0x5566630b5030 'nsec_to_subsec' 'uint32_t (uint32_t)'
|       `-ImplicitCastExpr 0x5566630cd0d0 <col:36> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x5566630cd070 <col:36> 'uint32_t':'unsigned int' lvalue ParmVar 0x5566630b1350 'nsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5566630b15b8 <line:408:5, col:86> col:17 set 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x5566630b14a8 <col:21, col:34> col:34 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x5566630b1520 <col:39, col:57> col:48 subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x5566630b8258 <col:57> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x5566630b8238 <col:57> 'int' 0
| `-DeprecatedAttr 0x5566630b1668 <col:75> "" ""
|-CXXMethodDecl 0x5566630b17f8 <line:411:5, col:85> col:17 set_usec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x5566630b16e8 <col:26, col:39> col:39 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x5566630b1760 <col:44, col:53> col:53 usec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x5566630b18a8 <col:74> "" ""
|-CXXMethodDecl 0x5566630b1a38 <line:414:5, col:85> col:17 set_nsec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x5566630b1928 <col:26, col:39> col:39 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x5566630b19a0 <col:44, col:53> col:53 nsec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x5566630b1ae8 <col:74> "" ""
|-CXXMethodDecl 0x5566630b1b78 <line:417:5, col:53> col:17 set_now 'void ()' inline
| `-DeprecatedAttr 0x5566630b1c18 <col:42> "" ""
|-CXXMethodDecl 0x5566630b4450 <line:420:5, col:53> col:9 set_timeval_ioctl 'int (int, int)'
| |-ParmVarDecl 0x5566630b4330 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x5566630b43b0 <col:35, col:39> col:39 ioctl_selector 'int'
|-CXXMethodDecl 0x5566630b4520 <line:432:5, col:33> col:29 now 'Timestamp ()' static inline
|-CXXMethodDecl 0x5566630b45e0 <line:438:5, col:56> col:45 used assign_now 'void ()'
| |-NoInlineAttr 0x5566630b4680 <col:20>
| `-OptimizeNoneAttr 0x5566630b46d8 <col:30>
|-CXXMethodDecl 0x5566630b4720 <line:446:5, col:36> col:29 used recent 'Timestamp ()' static inline
|-CXXMethodDecl 0x5566630b47e0 <line:452:5, col:31> col:17 used assign_recent 'void ()' inline
|-CXXMethodDecl 0x5566630b48a0 <line:466:5, col:40> col:29 now_steady 'Timestamp ()' static inline
|-CXXMethodDecl 0x5566630b4960 <line:472:5, col:35> col:17 used assign_now_steady 'void ()' inline
|-CXXMethodDecl 0x5566630b4a20 <line:481:5, col:43> col:29 used recent_steady 'Timestamp ()' static inline
|-CXXMethodDecl 0x5566630b4ae0 <line:487:5, col:38> col:17 used assign_recent_steady 'void ()' inline
|-CXXMethodDecl 0x5566630b4ba0 <line:496:5, col:22> col:12 unparse 'String () const'
|-CXXMethodDecl 0x5566630b4c60 <line:501:5, col:31> col:12 unparse_interval 'String () const'
|-CXXMethodDecl 0x5566630b4da0 <line:510:5, line:512:5> line:510:28 used msec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x5566630b4d10 <col:43, col:52> col:52 used msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x5566630cd278 <col:58, line:512:5>
|   `-ReturnStmt 0x5566630cd268 <line:511:9, col:53>
|     `-BinaryOperator 0x5566630cd248 <col:16, col:53> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x5566630cd218 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x5566630cd148 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x5566630b4d10 'msec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x5566630cd230 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x5566630cd1f8 <col:23, col:53> 'int'
|           `-BinaryOperator 0x5566630cd1d8 <col:24, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x5566630cd1a8 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x5566630cd168 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5566630abe50 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x5566630cd1c0 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x5566630cd188 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5566630abdc0 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x5566630b4ee8 <line:514:5, line:516:5> line:514:28 used usec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x5566630b4e58 <col:43, col:52> col:52 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x5566630cd3c0 <col:58, line:516:5>
|   `-ReturnStmt 0x5566630cd3b0 <line:515:9, col:53>
|     `-BinaryOperator 0x5566630cd390 <col:16, col:53> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x5566630cd360 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x5566630cd290 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x5566630b4e58 'usec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x5566630cd378 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x5566630cd340 <col:23, col:53> 'int'
|           `-BinaryOperator 0x5566630cd320 <col:24, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x5566630cd2f0 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x5566630cd2b0 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5566630abe50 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x5566630cd308 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x5566630cd2d0 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5566630abca0 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x5566630b5030 <line:518:5, line:520:5> line:518:28 used nsec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x5566630b4fa0 <col:43, col:52> col:52 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x5566630cd508 <col:58, line:520:5>
|   `-ReturnStmt 0x5566630cd4f8 <line:519:9, col:53>
|     `-BinaryOperator 0x5566630cd4d8 <col:16, col:53> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x5566630cd4a8 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x5566630cd3d8 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x5566630b4fa0 'nsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x5566630cd4c0 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x5566630cd488 <col:23, col:53> 'int'
|           `-BinaryOperator 0x5566630cd468 <col:24, col:39> 'int' '/'
|             |-ImplicitCastExpr 0x5566630cd438 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x5566630cd3f8 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5566630abaf0 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x5566630cd450 <col:39> 'int' <IntegralCast>
|               `-DeclRefExpr 0x5566630cd418 <col:39> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5566630abe50 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x5566630b5178 <line:522:5, line:524:5> line:522:28 used subsec_to_msec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x5566630b50e8 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x5566630cd650 <col:60, line:524:5>
|   `-ReturnStmt 0x5566630cd640 <line:523:9, col:55>
|     `-BinaryOperator 0x5566630cd620 <col:16, col:55> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x5566630cd5f0 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x5566630cd520 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x5566630b50e8 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x5566630cd608 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x5566630cd5d0 <col:25, col:55> 'int'
|           `-BinaryOperator 0x5566630cd5b0 <col:26, col:43> 'int' '/'
|             |-ImplicitCastExpr 0x5566630cd580 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x5566630cd540 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5566630abe50 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x5566630cd598 <col:43> 'int' <IntegralCast>
|               `-DeclRefExpr 0x5566630cd560 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5566630abdc0 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x5566630b52c0 <line:526:5, line:528:5> line:526:28 used subsec_to_usec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x5566630b5230 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x5566630cd798 <col:60, line:528:5>
|   `-ReturnStmt 0x5566630cd788 <line:527:9, col:55>
|     `-BinaryOperator 0x5566630cd768 <col:16, col:55> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x5566630cd738 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x5566630cd668 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x5566630b5230 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x5566630cd750 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x5566630cd718 <col:25, col:55> 'int'
|           `-BinaryOperator 0x5566630cd6f8 <col:26, col:43> 'int' '/'
|             |-ImplicitCastExpr 0x5566630cd6c8 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x5566630cd688 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5566630abe50 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x5566630cd6e0 <col:43> 'int' <IntegralCast>
|               `-DeclRefExpr 0x5566630cd6a8 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5566630abca0 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x5566630b5408 <line:530:5, line:532:5> line:530:28 used subsec_to_nsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x5566630b5378 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x5566630cd8e0 <col:60, line:532:5>
|   `-ReturnStmt 0x5566630cd8d0 <line:531:9, col:55>
|     `-BinaryOperator 0x5566630cd8b0 <col:16, col:55> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x5566630cd880 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x5566630cd7b0 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x5566630b5378 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x5566630cd898 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x5566630cd860 <col:25, col:55> 'int'
|           `-BinaryOperator 0x5566630cd840 <col:26, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x5566630cd810 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x5566630cd7d0 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5566630abaf0 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x5566630cd828 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x5566630cd7f0 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5566630abe50 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXRecordDecl 0x5566630b54b0 prev 0x5566630ac2f0 <line:539:5, line:566:5> line:539:11 referenced union rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x5566630b55a8 <col:5, col:11> col:11 implicit union rep_t
| |-FieldDecl 0x5566630b5648 <line:541:9, col:17> col:17 referenced x 'int64_t':'long'
| |-CXXConstructorDecl 0x5566630bc410 <line:539:11> col:11 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x5566630bc7f8 <col:11>
| |-CXXConstructorDecl 0x5566630bc4f0 <col:11> col:11 implicit used constexpr rep_t 'void (const Timestamp::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x5566630bc5d8 <col:11> col:11 'const Timestamp::rep_t &'
| | `-CompoundStmt 0x5566630bcf40 <col:11>
| |-CXXConstructorDecl 0x5566630bc678 <col:11> col:11 implicit used constexpr rep_t 'void (Timestamp::rep_t &&) noexcept' inline default trivial
| | |-ParmVarDecl 0x5566630bc788 <col:11> col:11 'Timestamp::rep_t &&'
| | `-CompoundStmt 0x5566630be798 <col:11>
| |-CXXDestructorDecl 0x5566630bdaa8 <col:11> col:11 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x556662dc4658 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(const Timestamp::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x556662dc4768 <col:11> col:11 'const Timestamp::rep_t &'
| | `-CompoundStmt 0x556662dc5030 <col:11>
| |   `-ReturnStmt 0x556662dc5020 <col:11>
| |     `-UnaryOperator 0x556662dc5008 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x556662dc4ff8 <col:11> 'Timestamp::rep_t *' this
| `-CXXMethodDecl 0x556662dc47d8 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(Timestamp::rep_t &&) noexcept' inline default trivial
|   |-ParmVarDecl 0x556662dc48e8 <col:11> col:11 'Timestamp::rep_t &&'
|   `-CompoundStmt 0x556663156ed0 <col:11>
|     `-ReturnStmt 0x556663156ec0 <col:11>
|       `-UnaryOperator 0x556663156ea8 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x556663156e98 <col:11> 'Timestamp::rep_t *' this
|-EnumDecl 0x5566630b56b0 <line:571:5, line:577:5> line:571:10 referenced warp_class_type
| |-EnumConstantDecl 0x5566630b57b0 <line:572:9, col:21> col:9 warp_none 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x5566630b59b0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5566630b5790 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x5566630b5770 <col:21> 'int' 0
| |-EnumConstantDecl 0x5566630b5840 <line:573:9, col:23> col:9 warp_linear 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x5566630b59c8 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5566630b5820 <col:23> 'int' Int: 1
| |     `-IntegerLiteral 0x5566630b5800 <col:23> 'int' 1
| |-EnumConstantDecl 0x5566630b58d0 <line:574:9, col:23> col:9 referenced warp_nowait 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x5566630b59e0 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5566630b58b0 <col:23> 'int' Int: 2
| |     `-IntegerLiteral 0x5566630b5890 <col:23> 'int' 2
| `-EnumConstantDecl 0x5566630b5960 <line:576:9, col:27> col:9 warp_simulation 'Timestamp::warp_class_type'
|   `-ImplicitCastExpr 0x5566630b59f8 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5566630b5940 <col:27> 'int' Int: 3
|       `-IntegerLiteral 0x5566630b5920 <col:27> 'int' 3
|-CXXMethodDecl 0x5566630b5a38 <line:581:5, col:34> col:23 warp_class 'int ()' static inline
|-CXXMethodDecl 0x5566630b5b00 <line:588:5, col:37> col:26 warp_speed 'double ()' static inline
|-CXXMethodDecl 0x5566630b5d08 <line:621:5, col:65> col:17 warp_set_class 'void (Timestamp::warp_class_type, double)' static
| |-ParmVarDecl 0x5566630b5bb0 <col:32, col:48> col:48 w 'Timestamp::warp_class_type'
| `-ParmVarDecl 0x5566630b5c30 <col:51, col:62> col:58 s 'double' cinit
|   `-FloatingLiteral 0x5566630b8270 <col:62> 'double' 1.000000e+00
|-CXXMethodDecl 0x5566630b5f18 <line:628:5, col:82> col:17 warp_set_now 'void (const Timestamp &, const Timestamp &)' static
| |-ParmVarDecl 0x5566630b5dc8 <col:30, col:47> col:47 t_system 'const Timestamp &'
| `-ParmVarDecl 0x5566630b5e40 <col:57, col:74> col:74 t_steady 'const Timestamp &'
|-CXXMethodDecl 0x5566630b5fe8 <line:632:5, col:40> col:22 warp_real_delay 'Timestamp () const' inline
|-CXXMethodDecl 0x5566630b60a8 <line:635:5, col:37> col:24 used warp_jumping 'bool ()' static inline
|-CXXMethodDecl 0x5566630b6218 <line:640:5, col:57> col:17 warp_jump_steady 'void (const Timestamp &)' static
| `-ParmVarDecl 0x5566630b6158 <col:34, col:51> col:51 expiry 'const Timestamp &'
|-CXXMethodDecl 0x5566630b62e0 <line:647:5, col:42> col:29 now_unwarped 'Timestamp ()' static inline
|-CXXMethodDecl 0x5566630b63a0 <line:653:5, col:37> col:17 used assign_now_unwarped 'void ()' inline
|-CXXMethodDecl 0x5566630b6460 <line:659:5, col:49> col:29 now_steady_unwarped 'Timestamp ()' static inline
|-CXXMethodDecl 0x5566630b6520 <line:666:5, col:44> col:17 used assign_now_steady_unwarped 'void ()' inline
|-AccessSpecDecl 0x5566630b65c0 <line:670:3, col:10> col:3 private
|-FieldDecl 0x5566630b65f8 <line:672:5, col:11> col:11 referenced _t 'Timestamp::rep_t'
|-CXXMethodDecl 0x5566630b6668 <line:674:5, line:684:5> line:674:17 used add_fix 'void ()' inline
| `-CompoundStmt 0x5566630cd8f8 <col:27, line:684:5>
|-CXXMethodDecl 0x5566630b6728 <line:686:5, line:696:5> line:686:17 used sub_fix 'void ()' inline
| `-CompoundStmt 0x5566630cd908 <col:27, line:696:5>
|-CXXMethodDecl 0x5566630b6928 <line:698:5, line:700:5> line:698:30 used value_div 'Timestamp::value_type (Timestamp::value_type, uint32_t)' static inline
| |-ParmVarDecl 0x5566630b67d8 <col:40, col:51> col:51 used a 'Timestamp::value_type':'long'
| |-ParmVarDecl 0x5566630b6850 <col:54, col:63> col:63 used b 'uint32_t':'unsigned int'
| `-CompoundStmt 0x5566630cda90 <col:66, line:700:5>
|   `-ReturnStmt 0x5566630cda80 <line:699:9, col:31>
|     `-CallExpr 0x5566630cda20 <col:16, col:31> 'int64_t':'long'
|       |-ImplicitCastExpr 0x5566630cda08 <col:16> 'int64_t (*)(int64_t, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x5566630cd9b8 <col:16> 'int64_t (int64_t, uint32_t)' lvalue Function 0x556662f38cd8 'int_divide' 'int64_t (int64_t, uint32_t)'
|       |-ImplicitCastExpr 0x5566630cda50 <col:27> 'Timestamp::value_type':'long' <LValueToRValue>
|       | `-DeclRefExpr 0x5566630cd978 <col:27> 'Timestamp::value_type':'long' lvalue ParmVar 0x5566630b67d8 'a' 'Timestamp::value_type':'long'
|       `-ImplicitCastExpr 0x5566630cda68 <col:30> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x5566630cd998 <col:30> 'uint32_t':'unsigned int' lvalue ParmVar 0x5566630b6850 'b' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5566630b6c98 <line:702:5, line:707:5> line:702:24 value_div_mod 'void (int32_t &, int32_t &, Timestamp::value_type, uint32_t)' static inline
| |-ParmVarDecl 0x5566630b69e8 <col:38, col:47> col:47 used div 'int32_t &'
| |-ParmVarDecl 0x5566630b6a60 <col:52, col:61> col:61 used rem 'int32_t &'
| |-ParmVarDecl 0x5566630b6ad8 <line:703:38, col:49> col:49 used a 'Timestamp::value_type':'long'
| |-ParmVarDecl 0x5566630b6b50 <col:52, col:61> col:61 used b 'uint32_t':'unsigned int'
| `-CompoundStmt 0x5566630cdde0 <col:64, line:707:5>
|   |-DeclStmt 0x5566630cdb20 <line:704:9, col:24>
|   | `-VarDecl 0x5566630cdab8 <col:9, col:20> col:20 used quot 'Timestamp::value_type':'long'
|   |-BinaryOperator 0x5566630cdd30 <line:705:9, col:39> 'int32_t':'int' lvalue '='
|   | |-DeclRefExpr 0x5566630cdb38 <col:9> 'int32_t':'int' lvalue ParmVar 0x5566630b6a60 'rem' 'int32_t &'
|   | `-ImplicitCastExpr 0x5566630cdd18 <col:15, col:39> 'int32_t':'int' <IntegralCast>
|   |   `-CallExpr 0x5566630cdcb0 <col:15, col:39> 'uint32_t':'unsigned int'
|   |     |-ImplicitCastExpr 0x5566630cdc98 <col:15> 'uint32_t (*)(int64_t, uint32_t, int64_t &)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5566630cdc18 <col:15> 'uint32_t (int64_t, uint32_t, int64_t &)' lvalue Function 0x556662f3dfa8 'int_remainder' 'uint32_t (int64_t, uint32_t, int64_t &)'
|   |     |-ImplicitCastExpr 0x5566630cdce8 <col:29> 'Timestamp::value_type':'long' <LValueToRValue>
|   |     | `-DeclRefExpr 0x5566630cdbb8 <col:29> 'Timestamp::value_type':'long' lvalue ParmVar 0x5566630b6ad8 'a' 'Timestamp::value_type':'long'
|   |     |-ImplicitCastExpr 0x5566630cdd00 <col:32> 'uint32_t':'unsigned int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x5566630cdbd8 <col:32> 'uint32_t':'unsigned int' lvalue ParmVar 0x5566630b6b50 'b' 'uint32_t':'unsigned int'
|   |     `-DeclRefExpr 0x5566630cdbf8 <col:35> 'Timestamp::value_type':'long' lvalue Var 0x5566630cdab8 'quot' 'Timestamp::value_type':'long'
|   `-BinaryOperator 0x5566630cddc0 <line:706:9, col:15> 'int32_t':'int' lvalue '='
|     |-DeclRefExpr 0x5566630cdd50 <col:9> 'int32_t':'int' lvalue ParmVar 0x5566630b69e8 'div' 'int32_t &'
|     `-ImplicitCastExpr 0x5566630cdda8 <col:15> 'int32_t':'int' <IntegralCast>
|       `-ImplicitCastExpr 0x5566630cdd90 <col:15> 'Timestamp::value_type':'long' <LValueToRValue>
|         `-DeclRefExpr 0x5566630cdd70 <col:15> 'Timestamp::value_type':'long' lvalue Var 0x5566630cdab8 'quot' 'Timestamp::value_type':'long'
|-CXXMethodDecl 0x5566630b6f38 <line:709:5, col:67> col:17 used assign_now 'void (bool, bool, bool)' inline
| |-ParmVarDecl 0x5566630b6d68 <col:28, col:33> col:33 recent 'bool'
| |-ParmVarDecl 0x5566630b6de0 <col:41, col:46> col:46 steady 'bool'
| `-ParmVarDecl 0x5566630b6e58 <col:54, col:59> col:59 unwarped 'bool'
|-CXXMethodDecl 0x5566630b71d8 <line:712:5, col:98> col:24 warp_adjust 'void (bool, const Timestamp &, const Timestamp &)' static inline
| |-ParmVarDecl 0x5566630b7000 <col:36, col:41> col:41 steady 'bool'
| |-ParmVarDecl 0x5566630b7078 <col:49, col:66> col:66 t_raw 'const Timestamp &'
| `-ParmVarDecl 0x5566630b70f0 <col:73, col:90> col:90 t_warped 'const Timestamp &'
|-CXXMethodDecl 0x5566630b7368 <line:713:5, col:42> col:22 warped 'Timestamp (bool) const' inline
| `-ParmVarDecl 0x5566630b72a0 <col:29, col:34> col:34 steady 'bool'
|-CXXMethodDecl 0x5566630b7568 <line:714:5, col:41> col:10 used warp 'void (bool, bool)'
| |-ParmVarDecl 0x5566630b7420 <col:15, col:20> col:20 steady 'bool'
| `-ParmVarDecl 0x5566630b7498 <col:28, col:33> col:33 from_now 'bool'
|-FriendDecl 0x5566630b7838 <line:717:5, col:73> col:24
| `-FunctionDecl 0x5566630b7778 parent 0x556662bb7278 <col:5, col:73> col:24 used operator== 'bool (const Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x5566630b7628 <col:35, col:52> col:52 a 'const Timestamp &'
|   `-ParmVarDecl 0x5566630b76a0 <col:55, col:72> col:72 b 'const Timestamp &'
|-FriendDecl 0x5566630b7a58 <line:718:5, col:72> col:24
| `-FunctionDecl 0x5566630b7998 parent 0x556662bb7278 <col:5, col:72> col:24 used operator< 'bool (const Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x5566630b7888 <col:34, col:51> col:51 a 'const Timestamp &'
|   `-ParmVarDecl 0x5566630b7900 <col:54, col:71> col:71 b 'const Timestamp &'
|-FriendDecl 0x5566630b7c20 <line:719:5, col:57> col:29
| `-FunctionDecl 0x5566630b7b68 parent 0x556662bb7278 <col:5, col:57> col:29 operator- 'Timestamp (const Timestamp &)' inline
|   `-ParmVarDecl 0x5566630b7aa8 <col:39, col:56> col:56 b 'const Timestamp &'
|-FriendDecl 0x5566630b7ea8 <line:720:5, col:73> col:30
| `-FunctionDecl 0x5566630b7de8 parent 0x556662bb7278 <col:5, col:73> col:30 used operator+= 'Timestamp &(Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x5566630b7c98 <col:41, col:52> col:52 a 'Timestamp &'
|   `-ParmVarDecl 0x5566630b7d10 <col:55, col:72> col:72 b 'const Timestamp &'
|-FriendDecl 0x5566630b80c8 <line:721:5, col:73> col:30
| `-FunctionDecl 0x5566630b8008 parent 0x556662bb7278 <col:5, col:73> col:30 used operator-= 'Timestamp &(Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x5566630b7ef8 <col:41, col:52> col:52 a 'Timestamp &'
|   `-ParmVarDecl 0x5566630b7f70 <col:55, col:72> col:72 b 'const Timestamp &'
|-CXXConstructorDecl 0x5566630bd950 <line:122:7> col:7 implicit used constexpr Timestamp 'void (const Timestamp &) noexcept' inline default trivial
| |-ParmVarDecl 0x5566630bda38 <col:7> col:7 used 'const Timestamp &'
| |-CXXCtorInitializer Field 0x5566630b65f8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x5566630be4a8 <col:7> 'Timestamp::rep_t' 'void (const Timestamp::rep_t &) noexcept'
| |   `-MemberExpr 0x5566630be460 <col:7> 'const Timestamp::rep_t' lvalue ._t 0x5566630b65f8
| |     `-DeclRefExpr 0x5566630be440 <col:7> 'const Timestamp' lvalue ParmVar 0x5566630bda38 '' 'const Timestamp &'
| `-CompoundStmt 0x5566630be508 <col:7>
|-CXXConstructorDecl 0x5566630bdbb8 <col:7> col:7 implicit used constexpr Timestamp 'void (Timestamp &&) noexcept' inline default trivial
| |-ParmVarDecl 0x5566630bdcc8 <col:7> col:7 used 'Timestamp &&'
| |-CXXCtorInitializer Field 0x5566630b65f8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x5566630be7a8 <col:7> 'Timestamp::rep_t' 'void (Timestamp::rep_t &&) noexcept'
| |   `-MemberExpr 0x5566630be750 <col:7> 'Timestamp::rep_t' xvalue ._t 0x5566630b65f8
| |     `-CXXStaticCastExpr 0x5566630be720 <col:7> 'Timestamp' xvalue static_cast<class Timestamp &&> <NoOp>
| |       `-DeclRefExpr 0x5566630be6f0 <col:7> 'Timestamp' lvalue ParmVar 0x5566630bdcc8 '' 'Timestamp &&'
| `-CompoundStmt 0x5566630be808 <col:7>
|-CXXDestructorDecl 0x5566630bdd78 <col:7> col:7 implicit referenced ~Timestamp 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x556662dc44a8 <col:7> col:7 implicit used operator= 'Timestamp &(const Timestamp &) noexcept' inline default trivial
| |-ParmVarDecl 0x556662dc45b8 <col:7> col:7 used 'const Timestamp &'
| `-CompoundStmt 0x556662dc50a8 <col:7>
|   |-CXXMemberCallExpr 0x556662dc5048 <col:7> 'Timestamp::rep_t' lvalue
|   | |-MemberExpr 0x556662dc4f88 <col:7> '<bound member function type>' .operator= 0x556662dc4658
|   | | `-MemberExpr 0x556662dc4e98 <col:7> 'Timestamp::rep_t' lvalue ->_t 0x5566630b65f8
|   | |   `-CXXThisExpr 0x556662dc4e88 <col:7> 'Timestamp *' this
|   | `-MemberExpr 0x556662dc4f58 <col:7> 'const Timestamp::rep_t' lvalue ._t 0x5566630b65f8
|   |   `-DeclRefExpr 0x556662dc4f38 <col:7> 'const Timestamp' lvalue ParmVar 0x556662dc45b8 '' 'const Timestamp &'
|   `-ReturnStmt 0x556662dc5098 <col:7>
|     `-UnaryOperator 0x556662dc5080 <col:7> 'Timestamp' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x556662dc5070 <col:7> 'Timestamp *' this
`-CXXMethodDecl 0x556662dc4958 <col:7> col:7 implicit used operator= 'Timestamp &(Timestamp &&) noexcept' inline default trivial
  |-ParmVarDecl 0x556662dc4a68 <col:7> col:7 used 'Timestamp &&'
  `-CompoundStmt 0x556663156f48 <col:7>
    |-CXXMemberCallExpr 0x556663156ee8 <col:7> 'Timestamp::rep_t' lvalue
    | |-MemberExpr 0x556663156e50 <col:7> '<bound member function type>' .operator= 0x556662dc47d8
    | | `-MemberExpr 0x556663156d20 <col:7> 'Timestamp::rep_t' lvalue ->_t 0x5566630b65f8
    | |   `-CXXThisExpr 0x556663156d10 <col:7> 'Timestamp *' this
    | `-MemberExpr 0x556663156e20 <col:7> 'Timestamp::rep_t' xvalue ._t 0x5566630b65f8
    |   `-CXXStaticCastExpr 0x556663156df0 <col:7> 'Timestamp' xvalue static_cast<class Timestamp &&> <NoOp>
    |     `-DeclRefExpr 0x556663156dc0 <col:7> 'Timestamp' lvalue ParmVar 0x556662dc4a68 '' 'Timestamp &&'
    `-ReturnStmt 0x556663156f38 <col:7>
      `-UnaryOperator 0x556663156f20 <col:7> 'Timestamp' lvalue prefix '*' cannot overflow
        `-CXXThisExpr 0x556663156f10 <col:7> 'Timestamp *' this

Layout: <CGRecordLayout
  LLVMType:%class.Timestamp = type { %"union.Timestamp::rep_t" }
  NonVirtualBaseLLVMType:%class.Timestamp = type { %"union.Timestamp::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55666315bc40 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<16>'
|-CXXRecordDecl 0x55666315be18 prev 0x55666315bc40 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55666315bea8 <col:46, col:52> col:46 public
|-TypedefDecl 0x55666315bed0 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x556662bb7370 'int'
|-TypedefDecl 0x5566631618d0 <line:13:5, col:31> col:31 type 'typename sized_array_memory<16>::type':'char_array<16>'
| `-ElaboratedType 0x556663161880 'typename sized_array_memory<16>::type' sugar
|   `-TypedefType 0x55666315c380 'sized_array_memory<16>::type' sugar
|     |-Typedef 0x55666315c280 'type'
|     `-TemplateSpecializationType 0x55666315c210 'char_array<16UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x55666315c0f0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 16
|       |   `-SubstNonTypeTemplateParmExpr 0x55666315c0d0 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x55666315c0b0 <col:24> 'unsigned long' 16
|       `-RecordType 0x55666315c1f0 'char_array<16>'
|         `-ClassTemplateSpecialization 0x55666315c110 'char_array'
|-TypedefDecl 0x556663161988 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<16> >::type *'
| `-PointerType 0x556663161950 'vector_memory<sized_array_memory<16> >::type *'
|   `-TypedefType 0x556663161930 'vector_memory<sized_array_memory<16> >::type' sugar
|     |-Typedef 0x5566631618d0 'type'
|     `-ElaboratedType 0x556663161880 'typename sized_array_memory<16>::type' sugar
|       `-TypedefType 0x55666315c380 'sized_array_memory<16>::type' sugar
|         |-Typedef 0x55666315c280 'type'
|         `-TemplateSpecializationType 0x55666315c210 'char_array<16UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x55666315c0f0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 16
|           |   `-SubstNonTypeTemplateParmExpr 0x55666315c0d0 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x55666315c0b0 <col:24> 'unsigned long' 16
|           `-RecordType 0x55666315c1f0 'char_array<16>'
|             `-ClassTemplateSpecialization 0x55666315c110 'char_array'
|-CXXMethodDecl 0x556663161b08 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<16> >::type *) const' inline
| `-ParmVarDecl 0x556663161a18 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXConstructorDecl 0x556663161bf8 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x556663161cd8 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x556663161cd8
|-CXXMethodDecl 0x556663161fa8 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<16> > &)'
| `-ParmVarDecl 0x556663161eb0 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<16> > &'
|-CXXMethodDecl 0x5566631621e8 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x556663162060 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x5566631620d8 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x5566631623b8 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x5566631622a8 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x556663162320 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x556663162518 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<16> >::iterator ()'
|-CXXMethodDecl 0x5566631625e8 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<16> >::iterator ()'
|-CXXMethodDecl 0x556663162838 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<16> >::iterator (vector_memory<sized_array_memory<16> >::iterator, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x5566631626a8 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
| `-ParmVarDecl 0x556663162720 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x556663162a98 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<16> >::iterator (vector_memory<sized_array_memory<16> >::iterator, vector_memory<sized_array_memory<16> >::iterator)'
| |-ParmVarDecl 0x556663162908 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
| `-ParmVarDecl 0x556663162980 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x556663162c58 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<16> >::type *)' inline
| `-ParmVarDecl 0x556663162b68 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x556663162e18 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<16> >::type *)' inline
| `-ParmVarDecl 0x556663162d20 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x556663162ed0 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x556663162f80 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x5566631631b8 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x556663163030 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x5566631630a8 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x556663163458 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<16> > &)'
| `-ParmVarDecl 0x556663163360 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<16> > &'
|-FieldDecl 0x556663163520 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<16> >::type *'
|-FieldDecl 0x556663163570 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x5566631635c0 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.1 = type { %struct.char_array*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.1 = type { %struct.char_array*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55666315a558 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'TimerSet::heap_element'
|-CXXRecordDecl 0x55666315a768 prev 0x55666315a558 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55666315bbb0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<heap_element>::type':'sized_array_memory<16>'
| `-ElaboratedType 0x55666315bb60 'typename array_memory<heap_element>::type' sugar
|   `-TypedefType 0x55666315bb40 'conditional<true, sized_array_memory<16>, typed_array_memory<TimerSet::heap_element> >::type' sugar
|     |-Typedef 0x55666315b9f0 'type'
|     `-SubstTemplateTypeParmType 0x55666315b810 'sized_array_memory<16>' sugar
|       |-TemplateTypeParmType 0x556662e80e60 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x556662e80e08 'T'
|       `-RecordType 0x55666315b360 'sized_array_memory<16>'
|         `-ClassTemplateSpecialization 0x55666315b278 'sized_array_memory'
|-FieldDecl 0x556663163610 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<TimerSet::heap_element>::array_memory_type>':'vector_memory<sized_array_memory<16> >' mutable
|-AccessSpecDecl 0x556663163660 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x556663163698 <line:118:5, col:15> col:15 value_type 'TimerSet::heap_element':'TimerSet::heap_element'
| `-SubstTemplateTypeParmType 0x55666315a800 'TimerSet::heap_element' sugar
|   |-TemplateTypeParmType 0x556662eb8b50 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x556662eb8af8 'T'
|   `-RecordType 0x556663159760 'TimerSet::heap_element'
|     `-CXXRecord 0x5566631596d0 'heap_element'
|-TypedefDecl 0x556663163758 <line:119:5, col:16> col:16 reference 'TimerSet::heap_element &'
| `-LValueReferenceType 0x556663163720 'TimerSet::heap_element &'
|   `-SubstTemplateTypeParmType 0x55666315a800 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x556662eb8b50 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x556662eb8af8 'T'
|     `-RecordType 0x556663159760 'TimerSet::heap_element'
|       `-CXXRecord 0x5566631596d0 'heap_element'
|-TypedefDecl 0x5566631637e8 <line:120:5, col:22> col:22 const_reference 'const TimerSet::heap_element &'
| `-LValueReferenceType 0x5566631637b0 'const TimerSet::heap_element &'
|   `-QualType 0x55666315a801 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x55666315a800 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x556662eb8b50 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x556662eb8af8 'T'
|       `-RecordType 0x556663159760 'TimerSet::heap_element'
|         `-CXXRecord 0x5566631596d0 'heap_element'
|-TypedefDecl 0x556663163878 <line:121:5, col:16> col:16 pointer 'TimerSet::heap_element *'
| `-PointerType 0x556663163840 'TimerSet::heap_element *'
|   `-SubstTemplateTypeParmType 0x55666315a800 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x556662eb8b50 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x556662eb8af8 'T'
|     `-RecordType 0x556663159760 'TimerSet::heap_element'
|       `-CXXRecord 0x5566631596d0 'heap_element'
|-TypedefDecl 0x556663163938 <line:122:5, col:22> col:22 const_pointer 'const TimerSet::heap_element *'
| `-PointerType 0x556663163900 'const TimerSet::heap_element *'
|   `-QualType 0x55666315a801 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x55666315a800 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x556662eb8b50 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x556662eb8af8 'T'
|       `-RecordType 0x556663159760 'TimerSet::heap_element'
|         `-CXXRecord 0x5566631596d0 'heap_element'
|-TypedefDecl 0x5566631647a0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<heap_element>::type':'const TimerSet::heap_element &'
| `-ElaboratedType 0x556663164750 'typename fast_argument<heap_element>::type' sugar
|   `-TypedefType 0x556663164730 'fast_argument<TimerSet::heap_element, true>::type' sugar
|     |-Typedef 0x556663164668 'type'
|     `-LValueReferenceType 0x556663164630 'const TimerSet::heap_element &'
|       `-QualType 0x5566631643d1 'const TimerSet::heap_element' const
|         `-SubstTemplateTypeParmType 0x5566631643d0 'TimerSet::heap_element' sugar
|           |-TemplateTypeParmType 0x556662e8b530 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x556662e8b4d8 'T'
|           `-RecordType 0x556663159760 'TimerSet::heap_element'
|             `-CXXRecord 0x5566631596d0 'heap_element'
|-TypedefDecl 0x556663164808 <line:126:5, col:22> col:22 const_access_type 'const TimerSet::heap_element &'
| `-LValueReferenceType 0x5566631637b0 'const TimerSet::heap_element &'
|   `-QualType 0x55666315a801 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x55666315a800 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x556662eb8b50 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x556662eb8af8 'T'
|       `-RecordType 0x556663159760 'TimerSet::heap_element'
|         `-CXXRecord 0x5566631596d0 'heap_element'
|-TypedefDecl 0x556663164860 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x556662bb7370 'int'
|-TypedefDecl 0x5566631648c8 <line:130:5, col:16> col:16 iterator 'TimerSet::heap_element *'
| `-PointerType 0x556663163840 'TimerSet::heap_element *'
|   `-SubstTemplateTypeParmType 0x55666315a800 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x556662eb8b50 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x556662eb8af8 'T'
|     `-RecordType 0x556663159760 'TimerSet::heap_element'
|       `-CXXRecord 0x5566631596d0 'heap_element'
|-TypedefDecl 0x556663164930 <line:131:5, col:22> col:22 const_iterator 'const TimerSet::heap_element *'
| `-PointerType 0x556663163900 'const TimerSet::heap_element *'
|   `-QualType 0x55666315a801 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x55666315a800 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x556662eb8b50 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x556662eb8af8 'T'
|       `-RecordType 0x556663159760 'TimerSet::heap_element'
|         `-CXXRecord 0x5566631596d0 'heap_element'
|-EnumDecl 0x556663164988 <line:134:5> col:5
| `-EnumConstantDecl 0x556663164a80 <col:12, col:40> col:12 RESERVE_GROW 'Vector<TimerSet::heap_element>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x556663164a60 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x556662eba1d8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x556662eba1b0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x556662eba190 <col:40> 'int' 1
|-CXXConstructorDecl 0x556663164b08 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x556663164d98 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x556663164bc0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x556663164c60 <col:41, col:61> col:61 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXConstructorDecl 0x556663165058 <line:139:5, col:37> col:12 Vector 'void (const Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x556663164f40 <col:19, col:36> col:36 x 'const Vector<TimerSet::heap_element> &'
|-CXXConstructorDecl 0x556663165318 <line:141:5, col:32> col:12 Vector 'void (Vector<TimerSet::heap_element> &&)' inline
| `-ParmVarDecl 0x556663165200 <col:19, col:31> col:31 x 'Vector<TimerSet::heap_element> &&'
|-CXXMethodDecl 0x556663165660 <line:144:5, col:51> col:23 operator= 'Vector<TimerSet::heap_element> &(const Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x556663165540 <col:33, col:50> col:50 x 'const Vector<TimerSet::heap_element> &'
|-CXXMethodDecl 0x556663165970 <line:146:5, col:46> col:23 operator= 'Vector<TimerSet::heap_element> &(Vector<TimerSet::heap_element> &&)' inline
| `-ParmVarDecl 0x556663165850 <col:33, col:45> col:45 x 'Vector<TimerSet::heap_element> &&'
|-CXXMethodDecl 0x556663165c60 <line:148:5, col:70> col:23 assign 'Vector<TimerSet::heap_element> &(Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x556663165aa8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x556663165b20 <col:43, col:69> col:63 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x556663165db8 <line:150:5, col:55> col:49 begin 'Vector<TimerSet::heap_element>::iterator ()'
| |-NoInlineAttr 0x556663165e98 <col:20> Inherited
| `-OptimizeNoneAttr 0x556663165ef0 <col:30> Inherited
|-CXXMethodDecl 0x556663165f38 <line:151:5, col:53> col:49 end 'Vector<TimerSet::heap_element>::iterator ()'
| |-NoInlineAttr 0x556663165fe8 <col:20> Inherited
| `-OptimizeNoneAttr 0x556663166040 <col:30> Inherited
|-CXXMethodDecl 0x556663166108 <line:152:5, col:63> col:55 begin 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x5566631661b8 <col:20> Inherited
| `-OptimizeNoneAttr 0x556663166210 <col:30> Inherited
|-CXXMethodDecl 0x556663166258 <line:153:5, col:61> col:55 end 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x556663166308 <col:20> Inherited
| `-OptimizeNoneAttr 0x556663166360 <col:30> Inherited
|-CXXMethodDecl 0x5566631663a8 <line:154:5, col:64> col:55 cbegin 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x556663166458 <col:20> Inherited
| `-OptimizeNoneAttr 0x5566631664b0 <col:30> Inherited
|-CXXMethodDecl 0x5566631664f8 <line:155:5, col:62> col:55 cend 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x5566631665a8 <col:20> Inherited
| `-OptimizeNoneAttr 0x556663166600 <col:30> Inherited
|-CXXMethodDecl 0x556663166628 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x5566631666d8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x556663166788 <line:159:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x556663166948 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x556663166838 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5566631668b0 <col:37, col:63> col:57 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x556663166a98 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x556663166a08 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x556663166c48 <line:163:5, col:65> col:43 operator[] 'TimerSet::heap_element &(Vector::size_type)'
| |-ParmVarDecl 0x556663166b50 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x556663166d00 <col:20>
| `-OptimizeNoneAttr 0x556663166d58 <col:30>
|-CXXMethodDecl 0x556663166e78 <line:164:5, col:73> col:49 operator[] 'const TimerSet::heap_element &(Vector::size_type) const'
| |-ParmVarDecl 0x556663166d80 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x556663166f30 <col:20>
| `-OptimizeNoneAttr 0x556663166f88 <col:30>
|-CXXMethodDecl 0x556663167040 <line:165:5, col:29> col:15 at 'TimerSet::heap_element &(Vector::size_type)' inline
| `-ParmVarDecl 0x556663166fb0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x556663167188 <line:166:5, col:37> col:21 at 'const TimerSet::heap_element &(Vector::size_type) const' inline
| `-ParmVarDecl 0x5566631670f8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5566631672b8 <line:167:5, col:21> col:15 front 'TimerSet::heap_element &()' inline
|-CXXMethodDecl 0x5566631673e8 <line:168:5, col:29> col:21 front 'const TimerSet::heap_element &() const' inline
|-CXXMethodDecl 0x5566631674b8 <line:169:5, col:20> col:15 back 'TimerSet::heap_element &()' inline
|-CXXMethodDecl 0x556663167588 <line:170:5, col:28> col:21 back 'const TimerSet::heap_element &() const' inline
|-CXXMethodDecl 0x5566631676c8 <line:172:5, col:39> col:15 used unchecked_at 'TimerSet::heap_element &(Vector::size_type)' inline
| `-ParmVarDecl 0x556663167638 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x556663167810 <line:173:5, col:47> col:21 unchecked_at 'const TimerSet::heap_element &(Vector::size_type) const' inline
| `-ParmVarDecl 0x556663167780 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x556663167958 <line:174:5, col:59> col:15 at_u 'TimerSet::heap_element &(Vector::size_type)' inline
| |-ParmVarDecl 0x5566631678c8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x556663167a10 <col:48> Inherited "" ""
|-CXXMethodDecl 0x556663167b10 <line:175:5, col:71> col:21 at_u 'const TimerSet::heap_element &(Vector::size_type) const' inline
| |-ParmVarDecl 0x556663167a80 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x556663167bc8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x556663167c88 <line:177:5, col:20> col:15 data 'TimerSet::heap_element *()' inline
|-CXXMethodDecl 0x556663167d88 <line:178:5, col:28> col:21 data 'const TimerSet::heap_element *() const' inline
|-CXXMethodDecl 0x556663167f38 <line:180:5, col:48> col:17 push_back 'void (Vector<TimerSet::heap_element>::value_argument_type)' inline
| `-ParmVarDecl 0x556663167e48 <col:27, col:47> col:47 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-FunctionTemplateDecl 0x556663168728 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x556663167ff0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<TimerSet::heap_element>':'fast_argument<TimerSet::heap_element, true>'
| `-CXXMethodDecl 0x556663168688 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (TimerSet::heap_element &&)' inline
|   `-ParmVarDecl 0x556663168588 <col:58, col:62> col:62 v 'TimerSet::heap_element &&'
|-CXXMethodDecl 0x556663168808 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x556663168958 <line:186:5, col:49> col:17 push_front 'void (Vector<TimerSet::heap_element>::value_argument_type)' inline
| `-ParmVarDecl 0x5566631688c8 <col:28, col:48> col:48 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x556663168a10 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x556663168c58 <line:189:5, col:62> col:21 insert 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x556663168ad0 <col:28, col:37> col:37 it 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
| `-ParmVarDecl 0x556663168b48 <col:41, col:61> col:61 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x556663168eb0 <line:190:5, col:38> col:21 erase 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator)' inline
| `-ParmVarDecl 0x556663168d28 <col:27, col:36> col:36 it 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
|-CXXMethodDecl 0x556663169108 <line:191:5, col:49> col:21 erase 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator, Vector<TimerSet::heap_element>::iterator)' inline
| |-ParmVarDecl 0x556663168f78 <col:27, col:36> col:36 a 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
| `-ParmVarDecl 0x556663168ff0 <col:39, col:48> col:48 b 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
|-CXXMethodDecl 0x5566631691c8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x556663169428 <line:195:5, col:34> col:17 swap 'void (Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x556663169330 <col:22, col:33> col:33 x 'Vector<TimerSet::heap_element> &'
`-CXXDestructorDecl 0x5566631694f8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x5566631694f8

Layout: <CGRecordLayout
  LLVMType:%class.Vector.0 = type { %class.vector_memory.1 }
  NonVirtualBaseLLVMType:%class.Vector.0 = type { %class.vector_memory.1 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55666316aa20 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<8>'
|-CXXRecordDecl 0x55666316abf8 prev 0x55666316aa20 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55666316ac88 <col:46, col:52> col:46 public
|-TypedefDecl 0x55666316acb0 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x556662bb7370 'int'
|-TypedefDecl 0x55666316c880 <line:13:5, col:31> col:31 type 'typename sized_array_memory<8>::type':'char_array<8>'
| `-ElaboratedType 0x55666316c830 'typename sized_array_memory<8>::type' sugar
|   `-TypedefType 0x55666316b160 'sized_array_memory<8>::type' sugar
|     |-Typedef 0x55666316b060 'type'
|     `-TemplateSpecializationType 0x55666316aff0 'char_array<8UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x55666316aed0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 8
|       |   `-SubstNonTypeTemplateParmExpr 0x55666316aeb0 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x55666316ae90 <col:24> 'unsigned long' 8
|       `-RecordType 0x55666316afd0 'char_array<8>'
|         `-ClassTemplateSpecialization 0x55666316aef0 'char_array'
|-TypedefDecl 0x55666316c938 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<8> >::type *'
| `-PointerType 0x55666316c900 'vector_memory<sized_array_memory<8> >::type *'
|   `-TypedefType 0x55666316c8e0 'vector_memory<sized_array_memory<8> >::type' sugar
|     |-Typedef 0x55666316c880 'type'
|     `-ElaboratedType 0x55666316c830 'typename sized_array_memory<8>::type' sugar
|       `-TypedefType 0x55666316b160 'sized_array_memory<8>::type' sugar
|         |-Typedef 0x55666316b060 'type'
|         `-TemplateSpecializationType 0x55666316aff0 'char_array<8UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x55666316aed0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 8
|           |   `-SubstNonTypeTemplateParmExpr 0x55666316aeb0 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x55666316ae90 <col:24> 'unsigned long' 8
|           `-RecordType 0x55666316afd0 'char_array<8>'
|             `-ClassTemplateSpecialization 0x55666316aef0 'char_array'
|-CXXMethodDecl 0x55666316cab8 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<8> >::type *) const' inline
| `-ParmVarDecl 0x55666316c9c8 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXConstructorDecl 0x55666316cba8 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55666316cc88 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x55666316cc88
|-CXXMethodDecl 0x55666316cf58 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<8> > &)'
| `-ParmVarDecl 0x55666316ce60 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<8> > &'
|-CXXMethodDecl 0x55666316d198 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x55666316d010 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55666316d088 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55666316d368 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x55666316d258 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55666316d2d0 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55666316d4c8 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<8> >::iterator ()'
|-CXXMethodDecl 0x55666316d598 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<8> >::iterator ()'
|-CXXMethodDecl 0x55666316d7e8 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<8> >::iterator (vector_memory<sized_array_memory<8> >::iterator, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x55666316d658 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
| `-ParmVarDecl 0x55666316d6d0 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55666316da48 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<8> >::iterator (vector_memory<sized_array_memory<8> >::iterator, vector_memory<sized_array_memory<8> >::iterator)'
| |-ParmVarDecl 0x55666316d8b8 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
| `-ParmVarDecl 0x55666316d930 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55666316dc08 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<8> >::type *)' inline
| `-ParmVarDecl 0x55666316db18 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55666316ddc8 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<8> >::type *)' inline
| `-ParmVarDecl 0x55666316dcd0 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55666316de80 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55666316df30 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55666316e168 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x55666316dfe0 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55666316e058 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55666316e408 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<8> > &)'
| `-ParmVarDecl 0x55666316e310 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<8> > &'
|-FieldDecl 0x55666316e4d0 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<8> >::type *'
|-FieldDecl 0x55666316e520 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55666316e570 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.3 = type { %struct.char_array.4*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.3 = type { %struct.char_array.4*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x556663169640 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Timer *'
|-CXXRecordDecl 0x556663169848 prev 0x556663169640 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55666316a990 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<Timer *>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x55666316a940 'typename array_memory<Timer *>::type' sugar
|   `-TypedefType 0x55666316a920 'conditional<true, sized_array_memory<8>, typed_array_memory<Timer *> >::type' sugar
|     |-Typedef 0x55666316a7d0 'type'
|     `-SubstTemplateTypeParmType 0x55666316a5f0 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x556662e80e60 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x556662e80e08 'T'
|       `-RecordType 0x55666316a140 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x55666316a058 'sized_array_memory'
|-FieldDecl 0x55666316e5c0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Timer *>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x55666316e610 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55666316e648 <line:118:5, col:15> col:15 value_type 'Timer *':'Timer *'
| `-SubstTemplateTypeParmType 0x5566631698e0 'Timer *' sugar
|   |-TemplateTypeParmType 0x556662eb8b50 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x556662eb8af8 'T'
|   `-PointerType 0x55666311d6e0 'Timer *'
|     `-RecordType 0x55666311c830 'Timer'
|       `-CXXRecord 0x5566630a04c8 'Timer'
|-TypedefDecl 0x55666316e708 <line:119:5, col:16> col:16 reference 'Timer *&'
| `-LValueReferenceType 0x55666316e6d0 'Timer *&'
|   `-SubstTemplateTypeParmType 0x5566631698e0 'Timer *' sugar
|     |-TemplateTypeParmType 0x556662eb8b50 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x556662eb8af8 'T'
|     `-PointerType 0x55666311d6e0 'Timer *'
|       `-RecordType 0x55666311c830 'Timer'
|         `-CXXRecord 0x5566630a04c8 'Timer'
|-TypedefDecl 0x55666316e7c8 <line:120:5, col:22> col:22 const_reference 'Timer *const &'
| `-LValueReferenceType 0x55666316e790 'Timer *const &'
|   `-QualType 0x5566631698e1 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x5566631698e0 'Timer *' sugar
|       |-TemplateTypeParmType 0x556662eb8b50 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x556662eb8af8 'T'
|       `-PointerType 0x55666311d6e0 'Timer *'
|         `-RecordType 0x55666311c830 'Timer'
|           `-CXXRecord 0x5566630a04c8 'Timer'
|-TypedefDecl 0x55666316e888 <line:121:5, col:16> col:16 pointer 'Timer **'
| `-PointerType 0x55666316e850 'Timer **'
|   `-SubstTemplateTypeParmType 0x5566631698e0 'Timer *' sugar
|     |-TemplateTypeParmType 0x556662eb8b50 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x556662eb8af8 'T'
|     `-PointerType 0x55666311d6e0 'Timer *'
|       `-RecordType 0x55666311c830 'Timer'
|         `-CXXRecord 0x5566630a04c8 'Timer'
|-TypedefDecl 0x55666316e948 <line:122:5, col:22> col:22 const_pointer 'Timer *const *'
| `-PointerType 0x55666316e910 'Timer *const *'
|   `-QualType 0x5566631698e1 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x5566631698e0 'Timer *' sugar
|       |-TemplateTypeParmType 0x556662eb8b50 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x556662eb8af8 'T'
|       `-PointerType 0x55666311d6e0 'Timer *'
|         `-RecordType 0x55666311c830 'Timer'
|           `-CXXRecord 0x5566630a04c8 'Timer'
|-TypedefDecl 0x55666316f520 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<Timer *>::type':'Timer *'
| `-ElaboratedType 0x55666316f4d0 'typename fast_argument<Timer *>::type' sugar
|   `-TypedefType 0x55666316f4b0 'fast_argument<Timer *, false>::type' sugar
|     |-Typedef 0x55666316f440 'type'
|     `-SubstTemplateTypeParmType 0x55666316f200 'Timer *' sugar
|       |-TemplateTypeParmType 0x556662e8bc60 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x556662e8bc10 'T'
|       `-PointerType 0x55666311d6e0 'Timer *'
|         `-RecordType 0x55666311c830 'Timer'
|           `-CXXRecord 0x5566630a04c8 'Timer'
|-TypedefDecl 0x55666316f588 <line:126:5, col:22> col:22 const_access_type 'Timer *const &'
| `-LValueReferenceType 0x55666316e790 'Timer *const &'
|   `-QualType 0x5566631698e1 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x5566631698e0 'Timer *' sugar
|       |-TemplateTypeParmType 0x556662eb8b50 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x556662eb8af8 'T'
|       `-PointerType 0x55666311d6e0 'Timer *'
|         `-RecordType 0x55666311c830 'Timer'
|           `-CXXRecord 0x5566630a04c8 'Timer'
|-TypedefDecl 0x55666316f5e0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x556662bb7370 'int'
|-TypedefDecl 0x55666316f648 <line:130:5, col:16> col:16 iterator 'Timer **'
| `-PointerType 0x55666316e850 'Timer **'
|   `-SubstTemplateTypeParmType 0x5566631698e0 'Timer *' sugar
|     |-TemplateTypeParmType 0x556662eb8b50 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x556662eb8af8 'T'
|     `-PointerType 0x55666311d6e0 'Timer *'
|       `-RecordType 0x55666311c830 'Timer'
|         `-CXXRecord 0x5566630a04c8 'Timer'
|-TypedefDecl 0x55666316f6b0 <line:131:5, col:22> col:22 const_iterator 'Timer *const *'
| `-PointerType 0x55666316e910 'Timer *const *'
|   `-QualType 0x5566631698e1 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x5566631698e0 'Timer *' sugar
|       |-TemplateTypeParmType 0x556662eb8b50 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x556662eb8af8 'T'
|       `-PointerType 0x55666311d6e0 'Timer *'
|         `-RecordType 0x55666311c830 'Timer'
|           `-CXXRecord 0x5566630a04c8 'Timer'
|-EnumDecl 0x55666316f708 <line:134:5> col:5
| `-EnumConstantDecl 0x55666316f800 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Timer *>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55666316f7e0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x556662eba1d8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x556662eba1b0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x556662eba190 <col:40> 'int' 1
|-CXXConstructorDecl 0x55666316f888 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55666316fb18 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x55666316f940 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55666316f9e0 <col:41, col:61> col:61 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXConstructorDecl 0x55666316fdd8 <line:139:5, col:37> col:12 Vector 'void (const Vector<Timer *> &)' inline
| `-ParmVarDecl 0x55666316fcc0 <col:19, col:36> col:36 x 'const Vector<Timer *> &'
|-CXXConstructorDecl 0x556663170098 <line:141:5, col:32> col:12 Vector 'void (Vector<Timer *> &&)' inline
| `-ParmVarDecl 0x55666316ff80 <col:19, col:31> col:31 x 'Vector<Timer *> &&'
|-CXXMethodDecl 0x5566631703e0 <line:144:5, col:51> col:23 operator= 'Vector<Timer *> &(const Vector<Timer *> &)' inline
| `-ParmVarDecl 0x5566631702c0 <col:33, col:50> col:50 x 'const Vector<Timer *> &'
|-CXXMethodDecl 0x5566631706f0 <line:146:5, col:46> col:23 operator= 'Vector<Timer *> &(Vector<Timer *> &&)' inline
| `-ParmVarDecl 0x5566631705d0 <col:33, col:45> col:45 x 'Vector<Timer *> &&'
|-CXXMethodDecl 0x5566631709e0 <line:148:5, col:70> col:23 assign 'Vector<Timer *> &(Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x556663170828 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5566631708a0 <col:43, col:69> col:63 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x556663170b38 <line:150:5, col:55> col:49 begin 'Vector<Timer *>::iterator ()'
| |-NoInlineAttr 0x556663170c18 <col:20> Inherited
| `-OptimizeNoneAttr 0x556663170c70 <col:30> Inherited
|-CXXMethodDecl 0x556663170cb8 <line:151:5, col:53> col:49 end 'Vector<Timer *>::iterator ()'
| |-NoInlineAttr 0x556663170d68 <col:20> Inherited
| `-OptimizeNoneAttr 0x556663170dc0 <col:30> Inherited
|-CXXMethodDecl 0x556663174ed0 <line:152:5, col:63> col:55 begin 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x556663174f80 <col:20> Inherited
| `-OptimizeNoneAttr 0x556663174fd8 <col:30> Inherited
|-CXXMethodDecl 0x556663175020 <line:153:5, col:61> col:55 end 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x5566631750d0 <col:20> Inherited
| `-OptimizeNoneAttr 0x556663175128 <col:30> Inherited
|-CXXMethodDecl 0x556663175170 <line:154:5, col:64> col:55 cbegin 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x556663175220 <col:20> Inherited
| `-OptimizeNoneAttr 0x556663175278 <col:30> Inherited
|-CXXMethodDecl 0x5566631752c0 <line:155:5, col:62> col:55 cend 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x556663175370 <col:20> Inherited
| `-OptimizeNoneAttr 0x5566631753c8 <col:30> Inherited
|-CXXMethodDecl 0x5566631753f0 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x5566631754a0 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x556663175550 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x556663175710 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x556663175600 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x556663175678 <col:37, col:63> col:57 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x556663175860 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x5566631757d0 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x556663175a08 <line:163:5, col:65> col:43 operator[] 'Timer *&(Vector::size_type)'
| |-ParmVarDecl 0x556663175918 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x556663175ac0 <col:20>
| `-OptimizeNoneAttr 0x556663175b18 <col:30>
|-CXXMethodDecl 0x556663175c38 <line:164:5, col:73> col:49 operator[] 'Timer *const &(Vector::size_type) const'
| |-ParmVarDecl 0x556663175b40 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x556663175cf0 <col:20>
| `-OptimizeNoneAttr 0x556663175d48 <col:30>
|-CXXMethodDecl 0x556663175e00 <line:165:5, col:29> col:15 at 'Timer *&(Vector::size_type)' inline
| `-ParmVarDecl 0x556663175d70 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x556663175f48 <line:166:5, col:37> col:21 at 'Timer *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x556663175eb8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x556663176078 <line:167:5, col:21> col:15 front 'Timer *&()' inline
|-CXXMethodDecl 0x5566631761a8 <line:168:5, col:29> col:21 front 'Timer *const &() const' inline
|-CXXMethodDecl 0x556663176278 <line:169:5, col:20> col:15 back 'Timer *&()' inline
|-CXXMethodDecl 0x556663176348 <line:170:5, col:28> col:21 back 'Timer *const &() const' inline
|-CXXMethodDecl 0x556663176488 <line:172:5, col:39> col:15 unchecked_at 'Timer *&(Vector::size_type)' inline
| `-ParmVarDecl 0x5566631763f8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5566631765d0 <line:173:5, col:47> col:21 unchecked_at 'Timer *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x556663176540 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x556663176718 <line:174:5, col:59> col:15 at_u 'Timer *&(Vector::size_type)' inline
| |-ParmVarDecl 0x556663176688 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x5566631767d0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x5566631768d0 <line:175:5, col:71> col:21 at_u 'Timer *const &(Vector::size_type) const' inline
| |-ParmVarDecl 0x556663176840 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x556663176988 <col:60> Inherited "" ""
|-CXXMethodDecl 0x556663176a48 <line:177:5, col:20> col:15 data 'Timer **()' inline
|-CXXMethodDecl 0x556663176b48 <line:178:5, col:28> col:21 data 'Timer *const *() const' inline
|-CXXMethodDecl 0x556663176cc8 <line:180:5, col:48> col:17 push_back 'void (Vector<Timer *>::value_argument_type)' inline
| `-ParmVarDecl 0x556663176c08 <col:27, col:47> col:47 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-FunctionTemplateDecl 0x556663177488 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x556663176d80 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Timer *>':'fast_argument<Timer *, false>'
| `-CXXMethodDecl 0x5566631773e8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Timer *&&)' inline
|   `-ParmVarDecl 0x5566631772e8 <col:58, col:62> col:62 v 'Timer *&&'
|-CXXMethodDecl 0x556663177568 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x5566631776b8 <line:186:5, col:49> col:17 push_front 'void (Vector<Timer *>::value_argument_type)' inline
| `-ParmVarDecl 0x556663177628 <col:28, col:48> col:48 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x556663177770 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x5566631779b8 <line:189:5, col:62> col:21 insert 'Vector<Timer *>::iterator (Vector<Timer *>::iterator, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x556663177830 <col:28, col:37> col:37 it 'Vector<Timer *>::iterator':'Timer **'
| `-ParmVarDecl 0x5566631778a8 <col:41, col:61> col:61 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x556663177b78 <line:190:5, col:38> col:21 erase 'Vector<Timer *>::iterator (Vector<Timer *>::iterator)' inline
| `-ParmVarDecl 0x556663177a88 <col:27, col:36> col:36 it 'Vector<Timer *>::iterator':'Timer **'
|-CXXMethodDecl 0x556663177dc8 <line:191:5, col:49> col:21 erase 'Vector<Timer *>::iterator (Vector<Timer *>::iterator, Vector<Timer *>::iterator)' inline
| |-ParmVarDecl 0x556663177c40 <col:27, col:36> col:36 a 'Vector<Timer *>::iterator':'Timer **'
| `-ParmVarDecl 0x556663177cb8 <col:39, col:48> col:48 b 'Vector<Timer *>::iterator':'Timer **'
|-CXXMethodDecl 0x556663177e88 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x5566631780e8 <line:195:5, col:34> col:17 swap 'void (Vector<Timer *> &)' inline
| `-ParmVarDecl 0x556663177ff0 <col:22, col:33> col:33 x 'Vector<Timer *> &'
`-CXXDestructorDecl 0x5566631781b8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x5566631781b8

Layout: <CGRecordLayout
  LLVMType:%class.Vector.2 = type { %class.vector_memory.3 }
  NonVirtualBaseLLVMType:%class.Vector.2 = type { %class.vector_memory.3 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x556663136d90 <../dummy_inc/click/sync.hh:194:1, line:211:1> line:194:7 referenced class SimpleSpinlock definition
|-DefinitionData empty standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x556663136ea8 <col:1, col:7> col:7 implicit referenced class SimpleSpinlock
|-AccessSpecDecl 0x556663136f38 <col:24, col:30> col:24 public
|-CXXConstructorDecl 0x556663136fc0 <line:196:5, col:27> col:12 SimpleSpinlock 'void ()' inline
|-CXXDestructorDecl 0x5566631370b0 <line:197:5, col:28> col:12 ~SimpleSpinlock 'void () noexcept' inline
|-CXXMethodDecl 0x5566631371b0 <line:199:5, col:25> col:17 acquire 'void ()' inline
|-CXXMethodDecl 0x556663137270 <line:200:5, col:25> col:17 release 'void ()' inline
|-CXXMethodDecl 0x556663137330 <line:201:5, col:25> col:17 attempt 'bool ()' inline
|-CXXConstructorDecl 0x556663137458 <line:194:7> col:7 implicit constexpr SimpleSpinlock 'void (const SimpleSpinlock &)' inline default trivial noexcept-unevaluated 0x556663137458
| `-ParmVarDecl 0x556663137568 <col:7> col:7 'const SimpleSpinlock &'
`-CXXMethodDecl 0x556663178f68 <col:7> col:7 implicit operator= 'SimpleSpinlock &(const SimpleSpinlock &)' inline default trivial noexcept-unevaluated 0x556663178f68
  `-ParmVarDecl 0x556663179078 <col:7> col:7 'const SimpleSpinlock &'

Layout: <CGRecordLayout
  LLVMType:%class.SimpleSpinlock = type { i8 }
  NonVirtualBaseLLVMType:%class.SimpleSpinlock.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x556663158850 prev 0x5566630a4678 <../dummy_inc/click/timerset.hh:12:1, line:90:1> line:12:7 referenced class TimerSet definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x556663158948 <col:1, col:7> col:7 implicit referenced class TimerSet
|-AccessSpecDecl 0x5566631589d8 <col:18, col:24> col:18 public
|-CXXConstructorDecl 0x556663158a60 <line:14:5, col:14> col:5 TimerSet 'void ()'
|-CXXMethodDecl 0x556663158b58 <line:16:5, col:67> col:15 timer_expiry_steady 'Timestamp () const'
| `-CompoundStmt 0x5566631793e0 <col:43, col:67>
|   `-ReturnStmt 0x5566631793d0 <col:45, col:52>
|     `-CXXConstructExpr 0x5566631793a0 <col:52> 'Timestamp' 'void (const Timestamp &) noexcept'
|       `-MemberExpr 0x556663179370 <col:52> 'const Timestamp' lvalue ->_timer_expiry 0x55666315a340
|         `-CXXThisExpr 0x556663179360 <col:52> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x556663158c18 <line:17:5, col:53> col:22 timer_expiry_steady_adjusted 'Timestamp () const' inline
|-CXXMethodDecl 0x556663158e20 <line:19:5, col:64> col:16 next_timer_delay 'int (bool, Timestamp &) const' inline
| |-ParmVarDecl 0x556663158cc8 <col:33, col:38> col:38 more_tasks 'bool'
| `-ParmVarDecl 0x556663158d40 <col:50, col:61> col:61 t 'Timestamp &'
|-CXXMethodDecl 0x556663158f18 <line:22:5, col:23> col:12 next_timer 'Timer *()'
|-CXXMethodDecl 0x556663158fe0 <line:24:5, col:67> col:14 max_timer_stride 'unsigned int () const'
| `-CompoundStmt 0x556663179460 <col:39, col:67>
|   `-ReturnStmt 0x556663179450 <col:41, col:48>
|     `-ImplicitCastExpr 0x556663179438 <col:48> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x556663179408 <col:48> 'const unsigned int' lvalue ->_max_timer_stride 0x55666315a428
|         `-CXXThisExpr 0x5566631793f8 <col:48> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x5566631590a8 <line:25:5, col:59> col:14 timer_stride 'unsigned int () const'
| `-CompoundStmt 0x5566631794e0 <col:35, col:59>
|   `-ReturnStmt 0x5566631794d0 <col:37, col:44>
|     `-ImplicitCastExpr 0x5566631794b8 <col:44> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x556663179488 <col:44> 'const unsigned int' lvalue ->_timer_stride 0x55666315a490
|         `-CXXThisExpr 0x556663179478 <col:44> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x5566631591f0 <line:26:5, col:52> col:10 set_max_timer_stride 'void (unsigned int)'
| `-ParmVarDecl 0x556663159160 <col:31, col:40> col:40 timer_stride 'unsigned int'
|-CXXMethodDecl 0x556663159338 <line:28:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x5566631592a8 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x556663159538 <line:30:5, col:57> col:10 run_timers 'void (RouterThread *, Master *)'
| |-ParmVarDecl 0x5566631593f0 <col:21, col:35> col:35 thread 'RouterThread *'
| `-ParmVarDecl 0x556663159468 <col:43, col:51> col:51 master 'Master *'
|-CXXMethodDecl 0x556663159608 <line:32:5, col:23> col:17 fence 'void ()' inline
|-AccessSpecDecl 0x5566631596a8 <line:34:3, col:10> col:3 private
|-CXXRecordDecl 0x5566631596d0 <line:36:5, line:45:5> line:36:12 referenced struct heap_element definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x5566631597e8 <col:5, col:12> col:12 implicit referenced struct heap_element
| |-FieldDecl 0x556663159888 <line:37:2, col:12> col:12 referenced expiry_s 'Timestamp'
| |-FieldDecl 0x5566631598e8 <line:38:2, col:9> col:9 referenced t 'Timer *'
| `-CXXConstructorDecl 0x556663159a18 <line:42:2, line:44:2> line:42:2 heap_element 'void (Timer *)'
|   |-ParmVarDecl 0x556663159948 <col:15, col:22> col:22 used t_ 'Timer *'
|   |-CXXCtorInitializer Field 0x556663159888 'expiry_s' 'Timestamp'
|   | `-CXXConstructExpr 0x5566631795b8 <line:43:8, col:36> 'Timestamp' 'void (const Timestamp &) noexcept'
|   |   `-CXXMemberCallExpr 0x556663179560 <col:17, col:35> 'const Timestamp' lvalue
|   |     `-MemberExpr 0x556663179530 <col:17, col:21> '<bound member function type>' ->expiry_steady 0x5566630a1b08
|   |       `-ImplicitCastExpr 0x556663179580 <col:17> 'const Timer *' <NoOp>
|   |         `-ImplicitCastExpr 0x556663179518 <col:17> 'Timer *' <LValueToRValue>
|   |           `-DeclRefExpr 0x5566631794f8 <col:17> 'Timer *' lvalue ParmVar 0x556663159948 't_' 'Timer *'
|   |-CXXCtorInitializer Field 0x5566631598e8 't' 'Timer *'
|   | `-ImplicitCastExpr 0x556663179650 <col:41> 'Timer *' <LValueToRValue>
|   |   `-DeclRefExpr 0x556663179610 <col:41> 'Timer *' lvalue ParmVar 0x556663159948 't_' 'Timer *'
|   `-CompoundStmt 0x5566631796a0 <col:45, line:44:2>
|-CXXRecordDecl 0x556663159ae0 <line:46:5, line:50:5> line:46:12 struct heap_less definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x556663159bf8 <col:5, col:12> col:12 implicit struct heap_less
| `-CXXMethodDecl 0x556663159e48 <line:47:2, line:49:2> line:47:14 operator() 'bool (const TimerSet::heap_element &, const TimerSet::heap_element &)' inline
|   |-ParmVarDecl 0x556663159cc8 <col:25, col:45> col:45 used a 'const TimerSet::heap_element &'
|   |-ParmVarDecl 0x556663159d40 <col:48, col:68> col:68 used b 'const TimerSet::heap_element &'
|   `-CompoundStmt 0x5566631797d0 <col:71, line:49:2>
|     `-ReturnStmt 0x5566631797c0 <line:48:6, col:28>
|       `-CXXOperatorCallExpr 0x556663179788 <col:13, col:28> 'bool'
|         |-ImplicitCastExpr 0x556663179770 <col:24> 'bool (*)(const Timestamp &, const Timestamp &)' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x556663179750 <col:24> 'bool (const Timestamp &, const Timestamp &)' lvalue Function 0x5566630daa48 'operator<' 'bool (const Timestamp &, const Timestamp &)'
|         |-MemberExpr 0x5566631796d0 <col:13, col:15> 'const Timestamp' lvalue .expiry_s 0x556663159888
|         | `-DeclRefExpr 0x5566631796b0 <col:13> 'const TimerSet::heap_element' lvalue ParmVar 0x556663159cc8 'a' 'const TimerSet::heap_element &'
|         `-MemberExpr 0x556663179720 <col:26, col:28> 'const Timestamp' lvalue .expiry_s 0x556663159888
|           `-DeclRefExpr 0x556663179700 <col:26> 'const TimerSet::heap_element' lvalue ParmVar 0x556663159d40 'b' 'const TimerSet::heap_element &'
|-CXXRecordDecl 0x556663159f10 <line:51:5, line:55:5> line:51:12 struct heap_place definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55666315a028 <col:5, col:12> col:12 implicit struct heap_place
| `-CXXMethodDecl 0x55666315a248 <line:52:2, line:54:2> line:52:14 operator() 'void (TimerSet::heap_element *, TimerSet::heap_element *)' inline
|   |-ParmVarDecl 0x55666315a0c8 <col:25, col:39> col:39 used begin 'TimerSet::heap_element *'
|   |-ParmVarDecl 0x55666315a140 <col:46, col:60> col:60 used t 'TimerSet::heap_element *'
|   `-CompoundStmt 0x5566631799d8 <col:63, line:54:2>
|     `-BinaryOperator 0x5566631799b8 <line:53:6, col:39> 'int' lvalue '='
|       |-MemberExpr 0x556663179868 <col:6, col:12> 'int' lvalue ->_schedpos1 0x5566630a3b18
|       | `-ImplicitCastExpr 0x556663179850 <col:6, col:9> 'Timer *' <LValueToRValue>
|       |   `-MemberExpr 0x556663179820 <col:6, col:9> 'Timer *' lvalue ->t 0x5566631598e8
|       |     `-ImplicitCastExpr 0x556663179808 <col:6> 'TimerSet::heap_element *' <LValueToRValue>
|       |       `-DeclRefExpr 0x5566631797e8 <col:6> 'TimerSet::heap_element *' lvalue ParmVar 0x55666315a140 't' 'TimerSet::heap_element *'
|       `-ImplicitCastExpr 0x5566631799a0 <col:25, col:39> 'int' <IntegralCast>
|         `-BinaryOperator 0x556663179980 <col:25, col:39> 'long' '+'
|           |-ParenExpr 0x556663179928 <col:25, col:35> 'long'
|           | `-BinaryOperator 0x556663179908 <col:26, col:30> 'long' '-'
|           |   |-ImplicitCastExpr 0x5566631798d8 <col:26> 'TimerSet::heap_element *' <LValueToRValue>
|           |   | `-DeclRefExpr 0x556663179898 <col:26> 'TimerSet::heap_element *' lvalue ParmVar 0x55666315a140 't' 'TimerSet::heap_element *'
|           |   `-ImplicitCastExpr 0x5566631798f0 <col:30> 'TimerSet::heap_element *' <LValueToRValue>
|           |     `-DeclRefExpr 0x5566631798b8 <col:30> 'TimerSet::heap_element *' lvalue ParmVar 0x55666315a0c8 'begin' 'TimerSet::heap_element *'
|           `-ImplicitCastExpr 0x556663179968 <col:39> 'long' <IntegralCast>
|             `-IntegerLiteral 0x556663179948 <col:39> 'int' 1
|-FieldDecl 0x55666315a340 <line:58:5, col:15> col:15 referenced _timer_expiry 'Timestamp'
| `-AlignedAttr 0x55666315a3b0 <col:44, col:53> aligned
|   `-ConstantExpr 0x55666315a390 <col:52> 'int' Int: 8
|     `-IntegerLiteral 0x55666315a310 <col:52> 'int' 8
|-FieldDecl 0x55666315a428 <line:60:5, col:14> col:14 referenced _max_timer_stride 'unsigned int'
|-FieldDecl 0x55666315a490 <line:61:5, col:14> col:14 referenced _timer_stride 'unsigned int'
|-FieldDecl 0x55666315a4f8 <line:62:5, col:14> col:14 _timer_count 'unsigned int'
|-FieldDecl 0x5566631695e0 <line:63:5, col:26> col:26 referenced _timer_heap 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>'
|-FieldDecl 0x5566631782a0 <line:64:5, col:21> col:21 _timer_runchunk 'Vector<Timer *>':'Vector<Timer *>'
|-FieldDecl 0x556663178300 <line:65:5, col:20> col:20 _timer_lock 'SimpleSpinlock'
|-FieldDecl 0x556663178360 <line:71:5, col:15> col:15 _timer_check 'Timestamp'
|-FieldDecl 0x5566631783c0 <line:72:5, col:14> col:14 _timer_check_reports 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5566631784b0 <line:74:5, col:38> col:17 run_one_timer 'void (Timer *)' inline
| `-ParmVarDecl 0x556663178420 <col:31, col:37> col:38 'Timer *'
|-CXXMethodDecl 0x556663178578 <line:76:5, line:81:5> line:76:10 set_timer_expiry 'void ()'
| `-CompoundStmt 0x556663179e30 <col:29, line:81:5>
|   `-IfStmt 0x556663179e08 <line:77:2, line:80:32> has_else
|     |-ImplicitCastExpr 0x556663179ac0 <line:77:6, col:23> 'bool' <IntegralToBoolean>
|     | `-CXXMemberCallExpr 0x556663179a60 <col:6, col:23> 'Vector::size_type':'int'
|     |   `-MemberExpr 0x556663179a30 <col:6, col:18> '<bound member function type>' .size 0x556663166628
|     |     `-ImplicitCastExpr 0x556663179aa8 <col:6> 'const Vector<TimerSet::heap_element>' lvalue <NoOp>
|     |       `-MemberExpr 0x556663179a00 <col:6> 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>' lvalue ->_timer_heap 0x5566631695e0
|     |         `-CXXThisExpr 0x5566631799f0 <col:6> 'TimerSet *' implicit this
|     |-CXXOperatorCallExpr 0x556663179cb0 <line:78:6, col:50> 'Timestamp' lvalue
|     | |-ImplicitCastExpr 0x556663179c98 <col:20> 'Timestamp &(*)(const Timestamp &) noexcept' <FunctionToPointerDecay>
|     | | `-DeclRefExpr 0x556663179c78 <col:20> 'Timestamp &(const Timestamp &) noexcept' lvalue CXXMethod 0x556662dc44a8 'operator=' 'Timestamp &(const Timestamp &) noexcept'
|     | |-MemberExpr 0x556663179ae8 <col:6> 'Timestamp' lvalue ->_timer_expiry 0x55666315a340
|     | | `-CXXThisExpr 0x556663179ad8 <col:6> 'TimerSet *' implicit this
|     | `-ImplicitCastExpr 0x556663179c60 <col:22, col:50> 'const Timestamp' lvalue <NoOp>
|     |   `-MemberExpr 0x556663179c30 <col:22, col:50> 'Timestamp' lvalue .expiry_s 0x556663159888
|     |     `-CXXMemberCallExpr 0x556663179c08 <col:22, col:48> 'TimerSet::heap_element':'TimerSet::heap_element' lvalue
|     |       |-MemberExpr 0x556663179bd8 <col:22, col:34> '<bound member function type>' .unchecked_at 0x5566631676c8
|     |       | `-MemberExpr 0x556663179b28 <col:22> 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>' lvalue ->_timer_heap 0x5566631695e0
|     |       |   `-CXXThisExpr 0x556663179b18 <col:22> 'TimerSet *' implicit this
|     |       `-IntegerLiteral 0x556663179bb8 <col:47> 'int' 0
|     `-ExprWithCleanups 0x556663179df0 <line:80:6, col:32> 'Timestamp' lvalue
|       `-CXXOperatorCallExpr 0x556663179db8 <col:6, col:32> 'Timestamp' lvalue
|         |-ImplicitCastExpr 0x556663179da0 <col:20> 'Timestamp &(*)(Timestamp &&) noexcept' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x556663179d80 <col:20> 'Timestamp &(Timestamp &&) noexcept' lvalue CXXMethod 0x556662dc4958 'operator=' 'Timestamp &(Timestamp &&) noexcept'
|         |-MemberExpr 0x556663179cf8 <col:6> 'Timestamp' lvalue ->_timer_expiry 0x55666315a340
|         | `-CXXThisExpr 0x556663179ce8 <col:6> 'TimerSet *' implicit this
|         `-MaterializeTemporaryExpr 0x556663179d68 <col:22, col:32> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x556663179d38 <col:22, col:32> 'Timestamp' 'void ()'
|-CXXMethodDecl 0x5566631786b8 <line:82:5, col:37> col:10 check_timer_expiry 'void (Timer *)'
| `-ParmVarDecl 0x556663178628 <col:29, col:36> col:36 t 'Timer *'
|-CXXMethodDecl 0x556663178780 <line:84:5, col:29> col:17 used lock_timers 'void ()' inline
|-CXXMethodDecl 0x556663178840 <line:85:5, col:37> col:17 attempt_lock_timers 'bool ()' inline
|-CXXMethodDecl 0x556663178900 <line:86:5, col:31> col:17 used unlock_timers 'void ()' inline
|-FriendDecl 0x5566631789f0 <line:88:5, col:18> col:12 'class Timer':'Timer'
|-CXXConstructorDecl 0x556663178a58 <line:12:7> col:7 implicit TimerSet 'void (const TimerSet &)' inline default noexcept-unevaluated 0x556663178a58
| `-ParmVarDecl 0x556663178b68 <col:7> col:7 'const TimerSet &'
|-CXXConstructorDecl 0x556663178c08 <col:7> col:7 implicit TimerSet 'void (TimerSet &&)' inline default noexcept-unevaluated 0x556663178c08
| `-ParmVarDecl 0x556663178d18 <col:7> col:7 'TimerSet &&'
|-CXXMethodDecl 0x556663178db8 <col:7> col:7 implicit operator= 'TimerSet &(const TimerSet &)' inline default noexcept-unevaluated 0x556663178db8
| `-ParmVarDecl 0x556663178ec8 <col:7> col:7 'const TimerSet &'
|-CXXMethodDecl 0x5566631790e8 <col:7> col:7 implicit operator= 'TimerSet &(TimerSet &&)' inline default noexcept-unevaluated 0x5566631790e8
| `-ParmVarDecl 0x5566631791f8 <col:7> col:7 'TimerSet &&'
`-CXXDestructorDecl 0x556663179280 <col:7> col:7 implicit ~TimerSet 'void ()' inline default noexcept-unevaluated 0x556663179280

Layout: <CGRecordLayout
  LLVMType:%class.TimerSet = type <{ %class.Timestamp, i32, i32, i32, [4 x i8], %class.Vector.0, %class.Vector.2, %class.SimpleSpinlock, [7 x i8], %class.Timestamp, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.TimerSet.base = type <{ %class.Timestamp, i32, i32, i32, [4 x i8], %class.Vector.0, %class.Vector.2, %class.SimpleSpinlock, [7 x i8], %class.Timestamp, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x5566631afcc8 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'pollfd'
|-CXXRecordDecl 0x5566631afed8 prev 0x5566631afcc8 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x5566631b0fb0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<pollfd>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x5566631b0f60 'typename array_memory<pollfd>::type' sugar
|   `-TypedefType 0x5566631b0f40 'conditional<true, sized_array_memory<8>, typed_array_memory<pollfd> >::type' sugar
|     |-Typedef 0x5566631b0df0 'type'
|     `-SubstTemplateTypeParmType 0x55666316a5f0 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x556662e80e60 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x556662e80e08 'T'
|       `-RecordType 0x55666316a140 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x55666316a058 'sized_array_memory'
|-FieldDecl 0x5566631b10b0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<pollfd>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x5566631b1100 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x5566631b1138 <line:118:5, col:15> col:15 value_type 'pollfd':'pollfd'
| `-SubstTemplateTypeParmType 0x5566631aff70 'pollfd' sugar
|   |-TemplateTypeParmType 0x556662eb8b50 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x556662eb8af8 'T'
|   `-RecordType 0x5566631a3d40 'pollfd'
|     `-CXXRecord 0x5566631a3cb0 'pollfd'
|-TypedefDecl 0x5566631b11f8 <line:119:5, col:16> col:16 reference 'pollfd &'
| `-LValueReferenceType 0x5566631b11c0 'pollfd &'
|   `-SubstTemplateTypeParmType 0x5566631aff70 'pollfd' sugar
|     |-TemplateTypeParmType 0x556662eb8b50 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x556662eb8af8 'T'
|     `-RecordType 0x5566631a3d40 'pollfd'
|       `-CXXRecord 0x5566631a3cb0 'pollfd'
|-TypedefDecl 0x5566631b12b8 <line:120:5, col:22> col:22 const_reference 'const pollfd &'
| `-LValueReferenceType 0x5566631b1280 'const pollfd &'
|   `-QualType 0x5566631aff71 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x5566631aff70 'pollfd' sugar
|       |-TemplateTypeParmType 0x556662eb8b50 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x556662eb8af8 'T'
|       `-RecordType 0x5566631a3d40 'pollfd'
|         `-CXXRecord 0x5566631a3cb0 'pollfd'
|-TypedefDecl 0x5566631b1348 <line:121:5, col:16> col:16 pointer 'pollfd *'
| `-PointerType 0x5566631b1310 'pollfd *'
|   `-SubstTemplateTypeParmType 0x5566631aff70 'pollfd' sugar
|     |-TemplateTypeParmType 0x556662eb8b50 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x556662eb8af8 'T'
|     `-RecordType 0x5566631a3d40 'pollfd'
|       `-CXXRecord 0x5566631a3cb0 'pollfd'
|-TypedefDecl 0x5566631b1408 <line:122:5, col:22> col:22 const_pointer 'const pollfd *'
| `-PointerType 0x5566631b13d0 'const pollfd *'
|   `-QualType 0x5566631aff71 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x5566631aff70 'pollfd' sugar
|       |-TemplateTypeParmType 0x556662eb8b50 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x556662eb8af8 'T'
|       `-RecordType 0x5566631a3d40 'pollfd'
|         `-CXXRecord 0x5566631a3cb0 'pollfd'
|-TypedefDecl 0x5566631b1fe0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<pollfd>::type':'pollfd'
| `-ElaboratedType 0x5566631b1f90 'typename fast_argument<pollfd>::type' sugar
|   `-TypedefType 0x5566631b1f70 'fast_argument<pollfd, false>::type' sugar
|     |-Typedef 0x5566631b1f00 'type'
|     `-SubstTemplateTypeParmType 0x5566631b1cc0 'pollfd' sugar
|       |-TemplateTypeParmType 0x556662e8bc60 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x556662e8bc10 'T'
|       `-RecordType 0x5566631a3d40 'pollfd'
|         `-CXXRecord 0x5566631a3cb0 'pollfd'
|-TypedefDecl 0x5566631b2048 <line:126:5, col:22> col:22 const_access_type 'const pollfd &'
| `-LValueReferenceType 0x5566631b1280 'const pollfd &'
|   `-QualType 0x5566631aff71 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x5566631aff70 'pollfd' sugar
|       |-TemplateTypeParmType 0x556662eb8b50 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x556662eb8af8 'T'
|       `-RecordType 0x5566631a3d40 'pollfd'
|         `-CXXRecord 0x5566631a3cb0 'pollfd'
|-TypedefDecl 0x5566631b20a0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x556662bb7370 'int'
|-TypedefDecl 0x5566631b2108 <line:130:5, col:16> col:16 iterator 'pollfd *'
| `-PointerType 0x5566631b1310 'pollfd *'
|   `-SubstTemplateTypeParmType 0x5566631aff70 'pollfd' sugar
|     |-TemplateTypeParmType 0x556662eb8b50 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x556662eb8af8 'T'
|     `-RecordType 0x5566631a3d40 'pollfd'
|       `-CXXRecord 0x5566631a3cb0 'pollfd'
|-TypedefDecl 0x5566631b2170 <line:131:5, col:22> col:22 const_iterator 'const pollfd *'
| `-PointerType 0x5566631b13d0 'const pollfd *'
|   `-QualType 0x5566631aff71 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x5566631aff70 'pollfd' sugar
|       |-TemplateTypeParmType 0x556662eb8b50 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x556662eb8af8 'T'
|       `-RecordType 0x5566631a3d40 'pollfd'
|         `-CXXRecord 0x5566631a3cb0 'pollfd'
|-EnumDecl 0x5566631b21c8 <line:134:5> col:5
| `-EnumConstantDecl 0x5566631b22c0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<pollfd>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x5566631b22a0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x556662eba1d8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x556662eba1b0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x556662eba190 <col:40> 'int' 1
|-CXXConstructorDecl 0x5566631b2348 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x5566631b25d8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x5566631b2400 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5566631b24a0 <col:41, col:61> col:61 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXConstructorDecl 0x5566631b2898 <line:139:5, col:37> col:12 Vector 'void (const Vector<pollfd> &)' inline
| `-ParmVarDecl 0x5566631b2780 <col:19, col:36> col:36 x 'const Vector<pollfd> &'
|-CXXConstructorDecl 0x5566631b2b58 <line:141:5, col:32> col:12 Vector 'void (Vector<pollfd> &&)' inline
| `-ParmVarDecl 0x5566631b2a40 <col:19, col:31> col:31 x 'Vector<pollfd> &&'
|-CXXMethodDecl 0x5566631b2ea0 <line:144:5, col:51> col:23 operator= 'Vector<pollfd> &(const Vector<pollfd> &)' inline
| `-ParmVarDecl 0x5566631b2d80 <col:33, col:50> col:50 x 'const Vector<pollfd> &'
|-CXXMethodDecl 0x5566631b31b0 <line:146:5, col:46> col:23 operator= 'Vector<pollfd> &(Vector<pollfd> &&)' inline
| `-ParmVarDecl 0x5566631b3090 <col:33, col:45> col:45 x 'Vector<pollfd> &&'
|-CXXMethodDecl 0x5566631b34a0 <line:148:5, col:70> col:23 assign 'Vector<pollfd> &(Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x5566631b32e8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5566631b3360 <col:43, col:69> col:63 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x5566631b35f8 <line:150:5, col:55> col:49 begin 'Vector<pollfd>::iterator ()'
| |-NoInlineAttr 0x5566631b36d8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5566631b3730 <col:30> Inherited
|-CXXMethodDecl 0x5566631b3778 <line:151:5, col:53> col:49 end 'Vector<pollfd>::iterator ()'
| |-NoInlineAttr 0x5566631b3828 <col:20> Inherited
| `-OptimizeNoneAttr 0x5566631b3880 <col:30> Inherited
|-CXXMethodDecl 0x5566631b3948 <line:152:5, col:63> col:55 begin 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x5566631b39f8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5566631b3a50 <col:30> Inherited
|-CXXMethodDecl 0x5566631b3a98 <line:153:5, col:61> col:55 end 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x5566631b3b48 <col:20> Inherited
| `-OptimizeNoneAttr 0x5566631b3ba0 <col:30> Inherited
|-CXXMethodDecl 0x5566631b3be8 <line:154:5, col:64> col:55 cbegin 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x5566631b3c98 <col:20> Inherited
| `-OptimizeNoneAttr 0x5566631b3cf0 <col:30> Inherited
|-CXXMethodDecl 0x5566631b3d38 <line:155:5, col:62> col:55 cend 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x5566631b3de8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5566631b3e40 <col:30> Inherited
|-CXXMethodDecl 0x5566631b3e68 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x5566631b3f18 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x5566631b3fc8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x5566631b4188 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x5566631b4078 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5566631b40f0 <col:37, col:63> col:57 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x5566631b42d8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x5566631b4248 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x5566631b4488 <line:163:5, col:65> col:43 operator[] 'pollfd &(Vector::size_type)'
| |-ParmVarDecl 0x5566631b4390 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x5566631b4540 <col:20>
| `-OptimizeNoneAttr 0x5566631b4598 <col:30>
|-CXXMethodDecl 0x5566631b46b8 <line:164:5, col:73> col:49 operator[] 'const pollfd &(Vector::size_type) const'
| |-ParmVarDecl 0x5566631b45c0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x5566631b4770 <col:20>
| `-OptimizeNoneAttr 0x5566631b47c8 <col:30>
|-CXXMethodDecl 0x5566631b4880 <line:165:5, col:29> col:15 at 'pollfd &(Vector::size_type)' inline
| `-ParmVarDecl 0x5566631b47f0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5566631b49c8 <line:166:5, col:37> col:21 at 'const pollfd &(Vector::size_type) const' inline
| `-ParmVarDecl 0x5566631b4938 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5566631b4af8 <line:167:5, col:21> col:15 front 'pollfd &()' inline
|-CXXMethodDecl 0x5566631b4c28 <line:168:5, col:29> col:21 front 'const pollfd &() const' inline
|-CXXMethodDecl 0x5566631b4cf8 <line:169:5, col:20> col:15 back 'pollfd &()' inline
|-CXXMethodDecl 0x5566631b4dc8 <line:170:5, col:28> col:21 back 'const pollfd &() const' inline
|-CXXMethodDecl 0x5566631b4f08 <line:172:5, col:39> col:15 unchecked_at 'pollfd &(Vector::size_type)' inline
| `-ParmVarDecl 0x5566631b4e78 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5566631b5050 <line:173:5, col:47> col:21 unchecked_at 'const pollfd &(Vector::size_type) const' inline
| `-ParmVarDecl 0x5566631b4fc0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5566631b5198 <line:174:5, col:59> col:15 at_u 'pollfd &(Vector::size_type)' inline
| |-ParmVarDecl 0x5566631b5108 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x5566631b5250 <col:48> Inherited "" ""
|-CXXMethodDecl 0x5566631b5350 <line:175:5, col:71> col:21 at_u 'const pollfd &(Vector::size_type) const' inline
| |-ParmVarDecl 0x5566631b52c0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x5566631b5408 <col:60> Inherited "" ""
|-CXXMethodDecl 0x5566631b54c8 <line:177:5, col:20> col:15 data 'pollfd *()' inline
|-CXXMethodDecl 0x5566631b55c8 <line:178:5, col:28> col:21 data 'const pollfd *() const' inline
|-CXXMethodDecl 0x5566631b5778 <line:180:5, col:48> col:17 push_back 'void (Vector<pollfd>::value_argument_type)' inline
| `-ParmVarDecl 0x5566631b5688 <col:27, col:47> col:47 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-FunctionTemplateDecl 0x5566631b5f38 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x5566631b5830 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<pollfd>':'fast_argument<pollfd, false>'
| `-CXXMethodDecl 0x5566631b5e98 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (pollfd &&)' inline
|   `-ParmVarDecl 0x5566631b5d98 <col:58, col:62> col:62 v 'pollfd &&'
|-CXXMethodDecl 0x5566631b6018 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x5566631b6168 <line:186:5, col:49> col:17 push_front 'void (Vector<pollfd>::value_argument_type)' inline
| `-ParmVarDecl 0x5566631b60d8 <col:28, col:48> col:48 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x5566631b6220 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x5566631b6468 <line:189:5, col:62> col:21 insert 'Vector<pollfd>::iterator (Vector<pollfd>::iterator, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x5566631b62e0 <col:28, col:37> col:37 it 'Vector<pollfd>::iterator':'pollfd *'
| `-ParmVarDecl 0x5566631b6358 <col:41, col:61> col:61 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x5566631b6628 <line:190:5, col:38> col:21 erase 'Vector<pollfd>::iterator (Vector<pollfd>::iterator)' inline
| `-ParmVarDecl 0x5566631b6538 <col:27, col:36> col:36 it 'Vector<pollfd>::iterator':'pollfd *'
|-CXXMethodDecl 0x5566631b6878 <line:191:5, col:49> col:21 erase 'Vector<pollfd>::iterator (Vector<pollfd>::iterator, Vector<pollfd>::iterator)' inline
| |-ParmVarDecl 0x5566631b66f0 <col:27, col:36> col:36 a 'Vector<pollfd>::iterator':'pollfd *'
| `-ParmVarDecl 0x5566631b6768 <col:39, col:48> col:48 b 'Vector<pollfd>::iterator':'pollfd *'
|-CXXMethodDecl 0x5566631b6938 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x5566631b6bb8 <line:195:5, col:34> col:17 swap 'void (Vector<pollfd> &)' inline
| `-ParmVarDecl 0x5566631b6aa0 <col:22, col:33> col:33 x 'Vector<pollfd> &'
`-CXXDestructorDecl 0x5566631b6c88 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x5566631b6c88

Layout: <CGRecordLayout
  LLVMType:%class.Vector.5 = type { %class.vector_memory.3 }
  NonVirtualBaseLLVMType:%class.Vector.5 = type { %class.vector_memory.3 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x5566631b8270 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<24>'
|-CXXRecordDecl 0x5566631b8448 prev 0x5566631b8270 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x5566631b84d8 <col:46, col:52> col:46 public
|-TypedefDecl 0x5566631b8500 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x556662bb7370 'int'
|-TypedefDecl 0x5566631ba0d0 <line:13:5, col:31> col:31 type 'typename sized_array_memory<24>::type':'char_array<24>'
| `-ElaboratedType 0x5566631ba080 'typename sized_array_memory<24>::type' sugar
|   `-TypedefType 0x5566631b89b0 'sized_array_memory<24>::type' sugar
|     |-Typedef 0x5566631b88b0 'type'
|     `-TemplateSpecializationType 0x5566631b8840 'char_array<24UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x5566631b8720 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 24
|       |   `-SubstNonTypeTemplateParmExpr 0x5566631b8700 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x5566631b86e0 <col:24> 'unsigned long' 24
|       `-RecordType 0x5566631b8820 'char_array<24>'
|         `-ClassTemplateSpecialization 0x5566631b8740 'char_array'
|-TypedefDecl 0x5566631ba188 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<24> >::type *'
| `-PointerType 0x5566631ba150 'vector_memory<sized_array_memory<24> >::type *'
|   `-TypedefType 0x5566631ba130 'vector_memory<sized_array_memory<24> >::type' sugar
|     |-Typedef 0x5566631ba0d0 'type'
|     `-ElaboratedType 0x5566631ba080 'typename sized_array_memory<24>::type' sugar
|       `-TypedefType 0x5566631b89b0 'sized_array_memory<24>::type' sugar
|         |-Typedef 0x5566631b88b0 'type'
|         `-TemplateSpecializationType 0x5566631b8840 'char_array<24UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x5566631b8720 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 24
|           |   `-SubstNonTypeTemplateParmExpr 0x5566631b8700 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x5566631b86e0 <col:24> 'unsigned long' 24
|           `-RecordType 0x5566631b8820 'char_array<24>'
|             `-ClassTemplateSpecialization 0x5566631b8740 'char_array'
|-CXXMethodDecl 0x5566631ba308 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<24> >::type *) const' inline
| `-ParmVarDecl 0x5566631ba218 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXConstructorDecl 0x5566631ba3f8 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x5566631ba4d8 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x5566631ba4d8
|-CXXMethodDecl 0x5566631ba7a8 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<24> > &)'
| `-ParmVarDecl 0x5566631ba6b0 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<24> > &'
|-CXXMethodDecl 0x5566631ba9e8 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x5566631ba860 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x5566631ba8d8 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x5566631babb8 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x5566631baaa8 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x5566631bab20 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x5566631bad18 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<24> >::iterator ()'
|-CXXMethodDecl 0x5566631bade8 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<24> >::iterator ()'
|-CXXMethodDecl 0x5566631bb038 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<24> >::iterator (vector_memory<sized_array_memory<24> >::iterator, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x5566631baea8 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
| `-ParmVarDecl 0x5566631baf20 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x5566631bb298 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<24> >::iterator (vector_memory<sized_array_memory<24> >::iterator, vector_memory<sized_array_memory<24> >::iterator)'
| |-ParmVarDecl 0x5566631bb108 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
| `-ParmVarDecl 0x5566631bb180 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x5566631bb458 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<24> >::type *)' inline
| `-ParmVarDecl 0x5566631bb368 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x5566631bb618 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<24> >::type *)' inline
| `-ParmVarDecl 0x5566631bb520 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x5566631bb6d0 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x5566631bb780 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x5566631bb9b8 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x5566631bb830 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x5566631bb8a8 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x5566631bbc58 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<24> > &)'
| `-ParmVarDecl 0x5566631bbb60 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<24> > &'
|-FieldDecl 0x5566631bbd20 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<24> >::type *'
|-FieldDecl 0x5566631bbd70 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x5566631bbdc0 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.7 = type { %struct.char_array.8*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.7 = type { %struct.char_array.8*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x5566631b6dd0 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'SelectSet::SelectorInfo'
|-CXXRecordDecl 0x5566631b6fd8 prev 0x5566631b6dd0 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x5566631b81e0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<SelectorInfo>::type':'sized_array_memory<24>'
| `-ElaboratedType 0x5566631b8190 'typename array_memory<SelectorInfo>::type' sugar
|   `-TypedefType 0x5566631b8170 'conditional<true, sized_array_memory<24>, typed_array_memory<SelectSet::SelectorInfo> >::type' sugar
|     |-Typedef 0x5566631b8020 'type'
|     `-SubstTemplateTypeParmType 0x5566631b7e40 'sized_array_memory<24>' sugar
|       |-TemplateTypeParmType 0x556662e80e60 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x556662e80e08 'T'
|       `-RecordType 0x5566631b7990 'sized_array_memory<24>'
|         `-ClassTemplateSpecialization 0x5566631b78b0 'sized_array_memory'
|-FieldDecl 0x5566631bbe10 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<SelectSet::SelectorInfo>::array_memory_type>':'vector_memory<sized_array_memory<24> >' mutable
|-AccessSpecDecl 0x5566631bbe60 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x5566631bbe98 <line:118:5, col:15> col:15 value_type 'SelectSet::SelectorInfo':'SelectSet::SelectorInfo'
| `-SubstTemplateTypeParmType 0x5566631b7070 'SelectSet::SelectorInfo' sugar
|   |-TemplateTypeParmType 0x556662eb8b50 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x556662eb8af8 'T'
|   `-RecordType 0x5566631af830 'SelectSet::SelectorInfo'
|     `-CXXRecord 0x5566631af7a0 'SelectorInfo'
|-TypedefDecl 0x5566631bbf58 <line:119:5, col:16> col:16 reference 'SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x5566631bbf20 'SelectSet::SelectorInfo &'
|   `-SubstTemplateTypeParmType 0x5566631b7070 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x556662eb8b50 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x556662eb8af8 'T'
|     `-RecordType 0x5566631af830 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x5566631af7a0 'SelectorInfo'
|-TypedefDecl 0x5566631bc018 <line:120:5, col:22> col:22 const_reference 'const SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x5566631bbfe0 'const SelectSet::SelectorInfo &'
|   `-QualType 0x5566631b7071 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x5566631b7070 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x556662eb8b50 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x556662eb8af8 'T'
|       `-RecordType 0x5566631af830 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x5566631af7a0 'SelectorInfo'
|-TypedefDecl 0x5566631bc0a8 <line:121:5, col:16> col:16 pointer 'SelectSet::SelectorInfo *'
| `-PointerType 0x5566631bc070 'SelectSet::SelectorInfo *'
|   `-SubstTemplateTypeParmType 0x5566631b7070 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x556662eb8b50 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x556662eb8af8 'T'
|     `-RecordType 0x5566631af830 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x5566631af7a0 'SelectorInfo'
|-TypedefDecl 0x5566631bc168 <line:122:5, col:22> col:22 const_pointer 'const SelectSet::SelectorInfo *'
| `-PointerType 0x5566631bc130 'const SelectSet::SelectorInfo *'
|   `-QualType 0x5566631b7071 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x5566631b7070 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x556662eb8b50 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x556662eb8af8 'T'
|       `-RecordType 0x5566631af830 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x5566631af7a0 'SelectorInfo'
|-TypedefDecl 0x5566631bcdc0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<SelectorInfo>::type':'const SelectSet::SelectorInfo &'
| `-ElaboratedType 0x5566631bcd70 'typename fast_argument<SelectorInfo>::type' sugar
|   `-TypedefType 0x5566631bcd50 'fast_argument<SelectSet::SelectorInfo, true>::type' sugar
|     |-Typedef 0x5566631bcc88 'type'
|     `-LValueReferenceType 0x5566631bcc50 'const SelectSet::SelectorInfo &'
|       `-QualType 0x5566631bc9f1 'const SelectSet::SelectorInfo' const
|         `-SubstTemplateTypeParmType 0x5566631bc9f0 'SelectSet::SelectorInfo' sugar
|           |-TemplateTypeParmType 0x556662e8b530 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x556662e8b4d8 'T'
|           `-RecordType 0x5566631af830 'SelectSet::SelectorInfo'
|             `-CXXRecord 0x5566631af7a0 'SelectorInfo'
|-TypedefDecl 0x5566631bce28 <line:126:5, col:22> col:22 const_access_type 'const SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x5566631bbfe0 'const SelectSet::SelectorInfo &'
|   `-QualType 0x5566631b7071 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x5566631b7070 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x556662eb8b50 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x556662eb8af8 'T'
|       `-RecordType 0x5566631af830 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x5566631af7a0 'SelectorInfo'
|-TypedefDecl 0x5566631bce80 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x556662bb7370 'int'
|-TypedefDecl 0x5566631bcee8 <line:130:5, col:16> col:16 iterator 'SelectSet::SelectorInfo *'
| `-PointerType 0x5566631bc070 'SelectSet::SelectorInfo *'
|   `-SubstTemplateTypeParmType 0x5566631b7070 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x556662eb8b50 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x556662eb8af8 'T'
|     `-RecordType 0x5566631af830 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x5566631af7a0 'SelectorInfo'
|-TypedefDecl 0x5566631bcf50 <line:131:5, col:22> col:22 const_iterator 'const SelectSet::SelectorInfo *'
| `-PointerType 0x5566631bc130 'const SelectSet::SelectorInfo *'
|   `-QualType 0x5566631b7071 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x5566631b7070 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x556662eb8b50 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x556662eb8af8 'T'
|       `-RecordType 0x5566631af830 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x5566631af7a0 'SelectorInfo'
|-EnumDecl 0x5566631bcfa8 <line:134:5> col:5
| `-EnumConstantDecl 0x5566631bd0a0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<SelectSet::SelectorInfo>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x5566631bd080 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x556662eba1d8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x556662eba1b0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x556662eba190 <col:40> 'int' 1
|-CXXConstructorDecl 0x5566631bd128 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x5566631bd3b8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x5566631bd1e0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5566631bd280 <col:41, col:61> col:61 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXConstructorDecl 0x5566631bd678 <line:139:5, col:37> col:12 Vector 'void (const Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x5566631bd560 <col:19, col:36> col:36 x 'const Vector<SelectSet::SelectorInfo> &'
|-CXXConstructorDecl 0x5566631bd938 <line:141:5, col:32> col:12 Vector 'void (Vector<SelectSet::SelectorInfo> &&)' inline
| `-ParmVarDecl 0x5566631bd820 <col:19, col:31> col:31 x 'Vector<SelectSet::SelectorInfo> &&'
|-CXXMethodDecl 0x5566631bdc80 <line:144:5, col:51> col:23 operator= 'Vector<SelectSet::SelectorInfo> &(const Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x5566631bdb60 <col:33, col:50> col:50 x 'const Vector<SelectSet::SelectorInfo> &'
|-CXXMethodDecl 0x5566631bdf90 <line:146:5, col:46> col:23 operator= 'Vector<SelectSet::SelectorInfo> &(Vector<SelectSet::SelectorInfo> &&)' inline
| `-ParmVarDecl 0x5566631bde70 <col:33, col:45> col:45 x 'Vector<SelectSet::SelectorInfo> &&'
|-CXXMethodDecl 0x5566631be280 <line:148:5, col:70> col:23 assign 'Vector<SelectSet::SelectorInfo> &(Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x5566631be0c8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5566631be140 <col:43, col:69> col:63 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x5566631be3d8 <line:150:5, col:55> col:49 begin 'Vector<SelectSet::SelectorInfo>::iterator ()'
| |-NoInlineAttr 0x5566631be4b8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5566631be510 <col:30> Inherited
|-CXXMethodDecl 0x5566631be558 <line:151:5, col:53> col:49 end 'Vector<SelectSet::SelectorInfo>::iterator ()'
| |-NoInlineAttr 0x5566631be608 <col:20> Inherited
| `-OptimizeNoneAttr 0x5566631be660 <col:30> Inherited
|-CXXMethodDecl 0x5566631be728 <line:152:5, col:63> col:55 begin 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x5566631be7d8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5566631be830 <col:30> Inherited
|-CXXMethodDecl 0x5566631be878 <line:153:5, col:61> col:55 end 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x5566631be928 <col:20> Inherited
| `-OptimizeNoneAttr 0x5566631be980 <col:30> Inherited
|-CXXMethodDecl 0x5566631be9c8 <line:154:5, col:64> col:55 cbegin 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x5566631bea78 <col:20> Inherited
| `-OptimizeNoneAttr 0x5566631bead0 <col:30> Inherited
|-CXXMethodDecl 0x5566631beb70 <line:155:5, col:62> col:55 cend 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x5566631bec20 <col:20> Inherited
| `-OptimizeNoneAttr 0x5566631bec78 <col:30> Inherited
|-CXXMethodDecl 0x5566631beca0 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x5566631bed50 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x5566631bee00 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x5566631befc0 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x5566631beeb0 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5566631bef28 <col:37, col:63> col:57 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x5566631bf110 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x5566631bf080 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x5566631bf2b8 <line:163:5, col:65> col:43 operator[] 'SelectSet::SelectorInfo &(Vector::size_type)'
| |-ParmVarDecl 0x5566631bf1c8 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x5566631bf370 <col:20>
| `-OptimizeNoneAttr 0x5566631bf3c8 <col:30>
|-CXXMethodDecl 0x5566631bf4e8 <line:164:5, col:73> col:49 operator[] 'const SelectSet::SelectorInfo &(Vector::size_type) const'
| |-ParmVarDecl 0x5566631bf3f0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x5566631bf5a0 <col:20>
| `-OptimizeNoneAttr 0x5566631bf5f8 <col:30>
|-CXXMethodDecl 0x5566631bf6b0 <line:165:5, col:29> col:15 at 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| `-ParmVarDecl 0x5566631bf620 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5566631bf7f8 <line:166:5, col:37> col:21 at 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| `-ParmVarDecl 0x5566631bf768 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5566631bf928 <line:167:5, col:21> col:15 front 'SelectSet::SelectorInfo &()' inline
|-CXXMethodDecl 0x5566631bfa58 <line:168:5, col:29> col:21 front 'const SelectSet::SelectorInfo &() const' inline
|-CXXMethodDecl 0x5566631bfb28 <line:169:5, col:20> col:15 back 'SelectSet::SelectorInfo &()' inline
|-CXXMethodDecl 0x5566631bfbf8 <line:170:5, col:28> col:21 back 'const SelectSet::SelectorInfo &() const' inline
|-CXXMethodDecl 0x5566631bfd38 <line:172:5, col:39> col:15 unchecked_at 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| `-ParmVarDecl 0x5566631bfca8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5566631bfe80 <line:173:5, col:47> col:21 unchecked_at 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| `-ParmVarDecl 0x5566631bfdf0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5566631bffc8 <line:174:5, col:59> col:15 at_u 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| |-ParmVarDecl 0x5566631bff38 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x5566631c0080 <col:48> Inherited "" ""
|-CXXMethodDecl 0x5566631c0180 <line:175:5, col:71> col:21 at_u 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| |-ParmVarDecl 0x5566631c00f0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x5566631c0238 <col:60> Inherited "" ""
|-CXXMethodDecl 0x5566631c02f8 <line:177:5, col:20> col:15 data 'SelectSet::SelectorInfo *()' inline
|-CXXMethodDecl 0x5566631c03f8 <line:178:5, col:28> col:21 data 'const SelectSet::SelectorInfo *() const' inline
|-CXXMethodDecl 0x5566631c05a8 <line:180:5, col:48> col:17 push_back 'void (Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| `-ParmVarDecl 0x5566631c04b8 <col:27, col:47> col:47 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-FunctionTemplateDecl 0x5566631c0d68 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x5566631c0660 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<SelectSet::SelectorInfo>':'fast_argument<SelectSet::SelectorInfo, true>'
| `-CXXMethodDecl 0x5566631c0cc8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (SelectSet::SelectorInfo &&)' inline
|   `-ParmVarDecl 0x5566631c0bc8 <col:58, col:62> col:62 v 'SelectSet::SelectorInfo &&'
|-CXXMethodDecl 0x5566631c0e48 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x5566631c0f98 <line:186:5, col:49> col:17 push_front 'void (Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| `-ParmVarDecl 0x5566631c0f08 <col:28, col:48> col:48 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x5566631c1050 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x5566631c1298 <line:189:5, col:62> col:21 insert 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x5566631c1110 <col:28, col:37> col:37 it 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
| `-ParmVarDecl 0x5566631c1188 <col:41, col:61> col:61 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x5566631c1458 <line:190:5, col:38> col:21 erase 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator)' inline
| `-ParmVarDecl 0x5566631c1368 <col:27, col:36> col:36 it 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
|-CXXMethodDecl 0x5566631c16a8 <line:191:5, col:49> col:21 erase 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator, Vector<SelectSet::SelectorInfo>::iterator)' inline
| |-ParmVarDecl 0x5566631c1520 <col:27, col:36> col:36 a 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
| `-ParmVarDecl 0x5566631c1598 <col:39, col:48> col:48 b 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
|-CXXMethodDecl 0x5566631c1768 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x5566631c19c8 <line:195:5, col:34> col:17 swap 'void (Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x5566631c18d0 <col:22, col:33> col:33 x 'Vector<SelectSet::SelectorInfo> &'
`-CXXDestructorDecl 0x5566631c1a98 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x5566631c1a98

Layout: <CGRecordLayout
  LLVMType:%class.Vector.6 = type { %class.vector_memory.7 }
  NonVirtualBaseLLVMType:%class.Vector.6 = type { %class.vector_memory.7 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5566631a4940 <../dummy_inc/click/selectset.hh:36:1, line:109:1> line:36:7 referenced class SelectSet definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x5566631a4a58 <col:1, col:7> col:7 implicit referenced class SelectSet
|-AccessSpecDecl 0x5566631a4ae8 <col:19, col:25> col:19 public
|-CXXConstructorDecl 0x5566631aebb0 <line:38:5, col:15> col:5 SelectSet 'void ()'
|-CXXDestructorDecl 0x5566631aeca0 <line:39:5, col:16> col:5 ~SelectSet 'void ()' noexcept-unevaluated 0x5566631aeca0
|-CXXMethodDecl 0x5566631aeda0 <line:41:5, col:21> col:10 initialize 'void ()'
|-CXXMethodDecl 0x5566631af040 <line:43:5, col:54> col:9 add_select 'int (int, Element *, int)'
| |-ParmVarDecl 0x5566631aee58 <col:20, col:24> col:24 fd 'int'
| |-ParmVarDecl 0x5566631aeed0 <col:28, col:37> col:37 element 'Element *'
| `-ParmVarDecl 0x5566631aef50 <col:46, col:50> col:50 mask 'int'
|-CXXMethodDecl 0x5566631af2b0 <line:44:5, col:57> col:9 remove_select 'int (int, Element *, int)'
| |-ParmVarDecl 0x5566631af110 <col:23, col:27> col:27 fd 'int'
| |-ParmVarDecl 0x5566631af188 <col:31, col:40> col:40 element 'Element *'
| `-ParmVarDecl 0x5566631af208 <col:49, col:53> col:53 mask 'int'
|-CXXMethodDecl 0x5566631af408 <line:46:5, col:42> col:10 run_selects 'void (RouterThread *)'
| `-ParmVarDecl 0x5566631af378 <col:22, col:36> col:36 thread 'RouterThread *'
|-CXXMethodDecl 0x5566631af4d0 <line:47:5, line:50:5> line:47:17 used wake_immediate 'void ()' inline
| `-CompoundStmt 0x5566631c3148 <col:34, line:50:5>
|   |-BinaryOperator 0x5566631c2b18 <line:48:2, col:23> 'volatile bool' lvalue '='
|   | |-MemberExpr 0x5566631c2ad8 <col:2> 'volatile bool' lvalue ->_wake_pipe_pending 0x5566631afc58
|   | | `-CXXThisExpr 0x5566631c2ac8 <col:2> 'SelectSet *' implicit this
|   | `-CXXBoolLiteralExpr 0x5566631c2b08 <col:23> 'bool' true
|   `-CallExpr 0x5566631c3120 <line:49:2, col:43> 'void'
|     |-ImplicitCastExpr 0x5566631c3108 <col:2> 'void (*)(long)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x5566631c3088 <col:2> 'void (long)' lvalue Function 0x5566631c2f88 'ignore_result' 'void (long)' (FunctionTemplate 0x556662e7be08 'ignore_result')
|     `-CallExpr 0x5566631c2d30 <col:16, col:42> 'ssize_t':'long'
|       |-ImplicitCastExpr 0x5566631c2d18 <col:16> 'ssize_t (*)(int, const void *, size_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x5566631c2c98 <col:16> 'ssize_t (int, const void *, size_t)' lvalue Function 0x55666317cee0 'write' 'ssize_t (int, const void *, size_t)'
|       |-ImplicitCastExpr 0x5566631c2d68 <col:22, col:34> 'int' <LValueToRValue>
|       | `-ArraySubscriptExpr 0x5566631c2c40 <col:22, col:34> 'int' lvalue
|       |   |-ImplicitCastExpr 0x5566631c2c28 <col:22> 'int *' <ArrayToPointerDecay>
|       |   | `-MemberExpr 0x5566631c2bd8 <col:22> 'int [2]' lvalue ->_wake_pipe 0x5566631afbf8
|       |   |   `-CXXThisExpr 0x5566631c2bc8 <col:22> 'SelectSet *' implicit this
|       |   `-IntegerLiteral 0x5566631c2c08 <col:33> 'int' 1
|       |-ImplicitCastExpr 0x5566631c2d98 <col:37> 'const void *' <BitCast>
|       | `-ImplicitCastExpr 0x5566631c2d80 <col:37> 'const char *' <ArrayToPointerDecay>
|       |   `-StringLiteral 0x5566631c2c60 <col:37> 'const char [1]' lvalue ""
|       `-ImplicitCastExpr 0x5566631c2db0 <col:41> 'size_t':'unsigned long' <IntegralCast>
|         `-IntegerLiteral 0x5566631c2c78 <col:41> 'int' 1
|-CXXMethodDecl 0x5566631af610 <line:52:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x5566631af580 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x5566631af6d8 <line:54:5, col:23> col:17 fence 'void ()' inline
|-AccessSpecDecl 0x5566631af778 <line:56:3, col:10> col:3 private
|-CXXRecordDecl 0x5566631af7a0 <line:58:5, line:66:5> line:58:12 referenced struct SelectorInfo definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x5566631af8b8 <col:5, col:12> col:12 implicit referenced struct SelectorInfo
| |-FieldDecl 0x5566631af958 <line:59:2, col:11> col:11 read 'Element *'
| |-FieldDecl 0x5566631af9b8 <line:60:2, col:11> col:11 write 'Element *'
| |-FieldDecl 0x5566631afa20 <line:61:2, col:6> col:6 pollfd 'int'
| `-CXXConstructorDecl 0x5566631afad0 <line:62:2, line:65:2> line:62:2 SelectorInfo 'void ()'
|   |-CXXCtorInitializer Field 0x5566631af958 'read' 'Element *'
|   | `-ImplicitCastExpr 0x5566631c31a8 <line:63:13> 'Element *' <NullToPointer>
|   |   `-IntegerLiteral 0x5566631c3168 <col:13> 'int' 0
|   |-CXXCtorInitializer Field 0x5566631af9b8 'write' 'Element *'
|   | `-ImplicitCastExpr 0x5566631c3228 <col:23> 'Element *' <NullToPointer>
|   |   `-IntegerLiteral 0x5566631c31e8 <col:23> 'int' 0
|   |-CXXCtorInitializer Field 0x5566631afa20 'pollfd' 'int'
|   | `-UnaryOperator 0x5566631c3288 <col:34, col:35> 'int' prefix '-'
|   |   `-IntegerLiteral 0x5566631c3268 <col:35> 'int' 1
|   `-CompoundStmt 0x5566631c3300 <line:64:2, line:65:2>
|-FieldDecl 0x5566631afbf8 <line:68:5, col:21> col:9 referenced _wake_pipe 'int [2]'
|-FieldDecl 0x5566631afc58 <line:69:5, col:19> col:19 referenced _wake_pipe_pending 'volatile bool'
|-FieldDecl 0x5566631b6d70 <line:82:5, col:27> col:27 _pollfds 'Vector<struct pollfd>':'Vector<pollfd>'
|-FieldDecl 0x5566631c1b80 <line:83:5, col:26> col:26 _selinfo 'Vector<SelectSet::SelectorInfo>':'Vector<SelectSet::SelectorInfo>'
|-CXXMethodDecl 0x5566631c1db8 <line:89:5, col:63> col:10 register_select 'void (int, bool, bool)'
| |-ParmVarDecl 0x5566631c1be8 <col:26, col:30> col:30 fd 'int'
| |-ParmVarDecl 0x5566631c1c60 <col:34, col:39> col:39 add_read 'bool'
| `-ParmVarDecl 0x5566631c1cd8 <col:49, col:54> col:54 add_write 'bool'
|-CXXMethodDecl 0x5566631c1fa0 <line:90:5, col:41> col:10 remove_pollfd 'void (int, int)'
| |-ParmVarDecl 0x5566631c1e88 <col:24, col:28> col:28 pi 'int'
| `-ParmVarDecl 0x5566631c1f08 <col:32, col:36> col:36 event 'int'
|-CXXMethodDecl 0x5566631c21e8 <line:91:5, col:49> col:17 call_selected 'void (int, int) const' inline
| |-ParmVarDecl 0x5566631c2068 <col:31, col:35> col:35 fd 'int'
| `-ParmVarDecl 0x5566631c20e8 <col:39, col:43> col:43 mask 'int'
|-CXXMethodDecl 0x5566631c23f8 <line:92:5, col:63> col:17 post_select 'bool (RouterThread *, bool)' inline
| |-ParmVarDecl 0x5566631c22a8 <col:29, col:43> col:43 thread 'RouterThread *'
| `-ParmVarDecl 0x5566631c2320 <col:51, col:56> col:56 acquire 'bool'
|-CXXMethodDecl 0x5566631c2548 <line:97:5, col:47> col:10 run_selects_poll 'void (RouterThread *)'
| `-ParmVarDecl 0x5566631c24b8 <col:27, col:41> col:41 thread 'RouterThread *'
|-CXXMethodDecl 0x5566631c2610 <line:102:5, col:22> col:17 used lock 'void ()' inline
|-CXXMethodDecl 0x5566631c26d0 <line:103:5, col:24> col:17 used unlock 'void ()' inline
|-CXXConstructorDecl 0x5566631c2798 <line:36:7> col:7 implicit SelectSet 'void (const SelectSet &)' inline default noexcept-unevaluated 0x5566631c2798
| `-ParmVarDecl 0x5566631c28a8 <col:7> col:7 'const SelectSet &'
`-CXXMethodDecl 0x5566631c2948 <col:7> col:7 implicit operator= 'SelectSet &(const SelectSet &)' inline default noexcept-unevaluated 0x5566631c2948
  `-ParmVarDecl 0x5566631c2a58 <col:7> col:7 'const SelectSet &'

Layout: <CGRecordLayout
  LLVMType:%class.SelectSet = type { [2 x i32], i8, %class.Vector.5, %class.Vector.6 }
  NonVirtualBaseLLVMType:%class.SelectSet = type { [2 x i32], i8, %class.Vector.5, %class.Vector.6 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x556663135cf8 <../dummy_inc/click/sync.hh:46:1, line:64:1> line:46:7 referenced class Spinlock definition
|-DefinitionData empty standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x556663135e18 <col:1, col:7> col:7 implicit referenced class Spinlock
|-AccessSpecDecl 0x556663135ea8 <col:18, col:24> col:18 public
|-CXXConstructorDecl 0x556663135f30 <line:48:5, col:21> col:12 Spinlock 'void ()' inline
|-CXXDestructorDecl 0x556663136020 <line:49:5, col:22> col:12 ~Spinlock 'void () noexcept' inline
|-CXXMethodDecl 0x556663136120 <line:51:5, col:25> col:17 used acquire 'void ()' inline
|-CXXMethodDecl 0x5566631361e0 <line:52:5, col:25> col:17 used release 'void ()' inline
|-CXXMethodDecl 0x5566631362a0 <line:53:5, col:25> col:17 attempt 'bool ()' inline
|-CXXMethodDecl 0x556663136388 <line:54:5, col:26> col:17 nested 'bool () const' inline
|-CXXConstructorDecl 0x5566631364a8 <line:46:7> col:7 implicit constexpr Spinlock 'void (const Spinlock &)' inline default trivial noexcept-unevaluated 0x5566631364a8
| `-ParmVarDecl 0x5566631365b8 <col:7> col:7 'const Spinlock &'
`-CXXMethodDecl 0x5566631c7f58 <col:7> col:7 implicit operator= 'Spinlock &(const Spinlock &)' inline default trivial noexcept-unevaluated 0x5566631c7f58
  `-ParmVarDecl 0x5566631c8068 <col:7> col:7 'const Spinlock &'

Layout: <CGRecordLayout
  LLVMType:%class.Spinlock = type { i8 }
  NonVirtualBaseLLVMType:%class.Spinlock.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55666309e238 <../dummy_inc/click/task.hh:339:5, line:342:5> line:339:11 referenced union Pending definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55666309e358 <col:5, col:11> col:11 implicit union Pending
|-FieldDecl 0x55666309e3f8 <line:340:9, col:15> col:15 t 'Task *'
|-FieldDecl 0x55666309e458 <line:341:9, col:19> col:19 referenced x 'uintptr_t':'unsigned long'
|-CXXConstructorDecl 0x5566631c7558 <line:339:11> col:11 implicit constexpr Pending 'void (const Task::Pending &)' inline default trivial noexcept-unevaluated 0x5566631c7558
| `-ParmVarDecl 0x5566631c7668 <col:11> col:11 'const Task::Pending &'
|-CXXConstructorDecl 0x5566631c7708 <col:11> col:11 implicit constexpr Pending 'void (Task::Pending &&)' inline default trivial noexcept-unevaluated 0x5566631c7708
| `-ParmVarDecl 0x5566631c7818 <col:11> col:11 'Task::Pending &&'
|-CXXDestructorDecl 0x5566631c7888 <col:11> col:11 implicit ~Pending 'void ()' inline default trivial noexcept-unevaluated 0x5566631c7888
|-CXXMethodDecl 0x5566631c8108 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(const Task::Pending &)' inline default trivial noexcept-unevaluated 0x5566631c8108
| `-ParmVarDecl 0x5566631c8218 <col:11> col:11 'const Task::Pending &'
|-CXXMethodDecl 0x5566631c8288 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(Task::Pending &&)' inline default trivial noexcept-unevaluated 0x5566631c8288
| `-ParmVarDecl 0x5566631c8398 <col:11> col:11 'Task::Pending &&'
`-CXXConstructorDecl 0x5566631cea08 <col:11> col:11 implicit used Pending 'void () noexcept' inline default trivial
  `-CompoundStmt 0x5566631ceae0 <col:11>

Layout: <CGRecordLayout
  LLVMType:%"union.Task::Pending" = type { %class.Task* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x556663137bf0 <../dummy_inc/click/sync.hh:303:1, line:324:1> line:303:7 referenced class SpinlockIRQ definition
|-DefinitionData pass_in_registers empty standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x556663137d08 <col:1, col:7> col:7 implicit referenced class SpinlockIRQ
|-AccessSpecDecl 0x556663137d98 <col:21, col:27> col:21 public
|-CXXConstructorDecl 0x556663137e20 <line:305:5, col:24> col:12 SpinlockIRQ 'void ()' inline
|-TypedefDecl 0x556663137ee0 <line:310:5, col:17> col:17 referenced flags_t 'int'
| `-BuiltinType 0x556662bb7370 'int'
|-CXXMethodDecl 0x556663137fa8 <line:313:5, col:59> col:20 acquire 'SpinlockIRQ::flags_t ()' inline
| `-AlwaysInlineAttr 0x556663138048 <col:45> always_inline
|-CXXMethodDecl 0x556663138178 <line:314:5, col:63> col:17 release 'void (SpinlockIRQ::flags_t)' inline
| |-ParmVarDecl 0x5566631380b0 <col:25> col:32 'SpinlockIRQ::flags_t':'int'
| `-AlwaysInlineAttr 0x556663138220 <col:49> always_inline
|-CXXConstructorDecl 0x556663138318 <line:303:7> col:7 implicit constexpr SpinlockIRQ 'void (const SpinlockIRQ &)' inline default trivial noexcept-unevaluated 0x556663138318
| `-ParmVarDecl 0x556663138428 <col:7> col:7 'const SpinlockIRQ &'
|-CXXConstructorDecl 0x5566631384c8 <col:7> col:7 implicit constexpr SpinlockIRQ 'void (SpinlockIRQ &&)' inline default trivial noexcept-unevaluated 0x5566631384c8
| `-ParmVarDecl 0x5566631385d8 <col:7> col:7 'SpinlockIRQ &&'
|-CXXDestructorDecl 0x5566631c7970 <col:7> col:7 implicit ~SpinlockIRQ 'void ()' inline default trivial noexcept-unevaluated 0x5566631c7970
|-CXXMethodDecl 0x5566631c8438 <col:7> col:7 implicit operator= 'SpinlockIRQ &(const SpinlockIRQ &)' inline default trivial noexcept-unevaluated 0x5566631c8438
| `-ParmVarDecl 0x5566631c8548 <col:7> col:7 'const SpinlockIRQ &'
`-CXXMethodDecl 0x5566631c85b8 <col:7> col:7 implicit operator= 'SpinlockIRQ &(SpinlockIRQ &&)' inline default trivial noexcept-unevaluated 0x5566631c85b8
  `-ParmVarDecl 0x5566631c86c8 <col:7> col:7 'SpinlockIRQ &&'

Layout: <CGRecordLayout
  LLVMType:%class.SpinlockIRQ = type { i8 }
  NonVirtualBaseLLVMType:%class.SpinlockIRQ.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5566631c3770 prev 0x5566631a48b0 <../dummy_inc/click/routerthread.hh:28:1, line:248:1> line:28:7 referenced class RouterThread definition
|-DefinitionData has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-CXXRecordDecl 0x5566631c3868 <col:1, col:7> col:7 implicit referenced class RouterThread
|-AccessSpecDecl 0x5566631c38f8 <col:22, col:28> col:22 public
|-EnumDecl 0x5566631c3920 <line:30:5, col:58> col:5
| |-EnumConstantDecl 0x5566631c3a38 <col:12, col:32> col:12 THREAD_QUIESCENT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:30:5)'
| | `-ConstantExpr 0x5566631c3a18 <col:31, col:32> 'int' Int: -1
| |   `-UnaryOperator 0x5566631c3a00 <col:31, col:32> 'int' prefix '-'
| |     `-IntegerLiteral 0x5566631c39e0 <col:32> 'int' 1
| `-EnumConstantDecl 0x5566631c3ae0 <col:35, col:53> col:35 THREAD_UNKNOWN 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:30:5)'
|   `-ConstantExpr 0x5566631c3ac0 <col:52, col:53> 'int' Int: -1000
|     `-UnaryOperator 0x5566631c3aa8 <col:52, col:53> 'int' prefix '-'
|       `-IntegerLiteral 0x5566631c3a88 <col:53> 'int' 1000
|-CXXMethodDecl 0x5566631c3b80 <line:32:5, col:28> col:16 thread_id 'int () const' inline
|-CXXMethodDecl 0x5566631c3c40 <line:34:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x5566631c3d28 <line:35:5, col:52> col:22 timer_set 'TimerSet &()' inline
| `-CompoundStmt 0x5566631c8788 <col:34, col:52>
|   `-ReturnStmt 0x5566631c8778 <col:36, col:43>
|     `-MemberExpr 0x5566631c8748 <col:43> 'TimerSet' lvalue ->_timers 0x5566631c59f8
|       `-CXXThisExpr 0x5566631c8738 <col:43> 'RouterThread *' implicit this
|-CXXMethodDecl 0x5566631c3e18 <line:36:5, col:64> col:28 timer_set 'const TimerSet &() const' inline
| `-CompoundStmt 0x5566631c87f0 <col:46, col:64>
|   `-ReturnStmt 0x5566631c87e0 <col:48, col:55>
|     `-MemberExpr 0x5566631c87b0 <col:55> 'const TimerSet' lvalue ->_timers 0x5566631c59f8
|       `-CXXThisExpr 0x5566631c87a0 <col:55> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x5566631c3f08 <line:38:5, col:55> col:23 select_set 'SelectSet &()' inline
| `-CompoundStmt 0x5566631c8858 <col:36, col:55>
|   `-ReturnStmt 0x5566631c8848 <col:38, col:45>
|     `-MemberExpr 0x5566631c8818 <col:45> 'SelectSet' lvalue ->_selects 0x5566631c5a58
|       `-CXXThisExpr 0x5566631c8808 <col:45> 'RouterThread *' implicit this
|-CXXMethodDecl 0x5566631c3ff8 <line:39:5, col:67> col:29 select_set 'const SelectSet &() const' inline
| `-CompoundStmt 0x5566631c88c0 <col:48, col:67>
|   `-ReturnStmt 0x5566631c88b0 <col:50, col:57>
|     `-MemberExpr 0x5566631c8880 <col:57> 'const SelectSet' lvalue ->_selects 0x5566631c5a58
|       `-CXXThisExpr 0x5566631c8870 <col:57> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x5566631c40b8 <line:43:5, col:26> col:17 active 'bool () const' inline
|-CXXMethodDecl 0x5566631c41a8 <line:44:5, col:31> col:18 task_begin 'Task *() const' inline
|-CXXMethodDecl 0x5566631c4318 <line:45:5, col:40> col:18 task_next 'Task *(Task *) const' inline
| `-ParmVarDecl 0x5566631c4258 <col:28, col:34> col:34 task 'Task *'
|-CXXMethodDecl 0x5566631c43e0 <line:46:5, col:29> col:18 task_end 'Task *() const' inline
|-CXXMethodDecl 0x5566631c4828 <line:47:5, col:59> col:10 scheduled_tasks 'void (Router *, Vector<Task *> &)'
| |-ParmVarDecl 0x5566631c4490 <col:26, col:34> col:34 router 'Router *'
| `-ParmVarDecl 0x5566631c4710 <col:42, col:58> col:58 x 'Vector<Task *> &'
|-CXXMethodDecl 0x5566631c48f8 <line:49:5, col:28> col:17 lock_tasks 'void ()' inline
|-CXXMethodDecl 0x5566631c49b8 <line:50:5, col:30> col:17 unlock_tasks 'void ()' inline
|-CXXMethodDecl 0x5566631c4a78 <line:52:5, col:38> col:17 schedule_block_tasks 'void ()' inline
|-CXXMethodDecl 0x5566631c4bb8 <line:53:5, col:43> col:17 used block_tasks 'void (bool)' inline
| `-ParmVarDecl 0x5566631c4b28 <col:29, col:34> col:34 scheduled 'bool'
|-CXXMethodDecl 0x5566631c4c80 <line:54:5, col:31> col:17 used unblock_tasks 'void ()' inline
|-CXXMethodDecl 0x5566631c4d40 <line:56:5, col:29> col:17 stop_flag 'bool () const' inline
|-CXXMethodDecl 0x5566631c4e00 <line:58:5, col:35> col:17 mark_driver_entry 'void ()' inline
|-CXXMethodDecl 0x5566631c4ec0 <line:59:5, col:17> col:10 driver 'void ()'
|-CXXMethodDecl 0x5566631c5000 <line:61:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x5566631c4f70 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x5566631c50c8 <line:77:5, col:22> col:17 used wake 'void ()' inline
|-CXXMethodDecl 0x5566631c5188 <line:80:5, col:29> col:17 run_signals 'void ()' inline
|-EnumDecl 0x5566631c5228 <line:83:5, line:86:20> line:83:5
| |-EnumConstantDecl 0x5566631c52f0 <col:12> col:12 referenced S_PAUSED 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x5566631c5340 <col:22> col:22 referenced S_BLOCKED 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x5566631c5390 <col:33> col:33 referenced S_TIMERWAIT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x5566631c53e0 <line:84:12> col:12 S_LOCKSELECT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x5566631c5430 <col:26> col:26 S_LOCKTASKS 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x5566631c5480 <line:85:12> col:12 S_RUNTASK 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x5566631c54d0 <col:23> col:23 S_RUNTIMER 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x5566631c5520 <col:35> col:35 S_RUNSIGNAL 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x5566631c5570 <col:48> col:48 S_RUNPENDING 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x5566631c55c0 <col:62> col:62 S_RUNSELECT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| `-EnumConstantDecl 0x5566631c5610 <line:86:12> col:12 NSTATES 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
|-CXXMethodDecl 0x5566631c5708 <line:87:5, col:43> col:17 used set_thread_state 'void (int)' inline
| `-ParmVarDecl 0x5566631c5678 <col:34, col:38> col:38 state 'int'
|-CXXMethodDecl 0x5566631c5858 <line:88:5, col:61> col:17 set_thread_state_for_blocking 'void (int)' inline
| `-ParmVarDecl 0x5566631c57c8 <col:47, col:51> col:51 delay_type 'int'
|-AccessSpecDecl 0x5566631c5900 <line:104:3, col:10> col:3 private
|-FieldDecl 0x5566631c5938 <line:119:5, col:14> col:14 referenced _task_link 'TaskLink'
|-FieldDecl 0x5566631c5998 <line:120:5, col:19> col:19 referenced _stop_flag 'volatile bool'
|-FieldDecl 0x5566631c59f8 <line:125:5, col:14> col:14 referenced _timers 'TimerSet'
|-FieldDecl 0x5566631c5a58 <line:127:5, col:15> col:15 referenced _selects 'SelectSet'
|-FieldDecl 0x5566631c5ad8 <line:148:5, col:14> col:14 referenced _task_lock 'Spinlock'
| `-AlignedAttr 0x5566631c5b48 <col:40, col:50> aligned
|   `-ConstantExpr 0x5566631c5b28 <col:48> 'int' Int: 64
|     `-IntegerLiteral 0x5566631c5aa8 <col:48> 'int' 64
|-FieldDecl 0x5566631c5bb8 <line:149:5, col:21> col:21 referenced _task_blocker 'atomic_uint32_t'
|-FieldDecl 0x5566631c5c18 <line:150:5, col:21> col:21 referenced _task_blocker_waiting 'atomic_uint32_t'
|-FieldDecl 0x5566631c5d10 <line:152:5, col:19> col:19 referenced _pending_head 'Task::Pending':'Task::Pending'
|-FieldDecl 0x5566631c5e20 <line:153:5, col:20> col:20 _pending_tail 'Task::Pending *'
|-FieldDecl 0x5566631c5e80 <line:154:5, col:17> col:17 _pending_lock 'SpinlockIRQ'
|-FieldDecl 0x5566631c5f00 <line:157:5, col:13> col:13 referenced _master 'Master *'
| `-AlignedAttr 0x5566631c5f70 <col:36, col:46> aligned
|   `-ConstantExpr 0x5566631c5f50 <col:44> 'int' Int: 64
|     `-IntegerLiteral 0x5566631c5ed0 <col:44> 'int' 64
|-FieldDecl 0x5566631c5fe8 <line:158:5, col:9> col:9 referenced _id 'int'
|-FieldDecl 0x5566631c6048 <line:159:5, col:10> col:10 referenced _driver_entered 'bool'
|-AccessSpecDecl 0x5566631c6098 <line:170:3, col:9> col:3 public
|-FieldDecl 0x5566631c60d8 <line:171:5, col:14> col:14 _tasks_per_iter 'unsigned int'
|-FieldDecl 0x5566631c6140 <line:172:5, col:14> col:14 _iters_per_os 'unsigned int'
|-AccessSpecDecl 0x5566631c6190 <line:173:3, col:10> col:3 private
|-CXXConstructorDecl 0x5566631c6338 <line:205:5, col:46> col:5 RouterThread 'void (Master *, int)'
| |-ParmVarDecl 0x5566631c61c8 <col:18, col:26> col:26 master 'Master *'
| `-ParmVarDecl 0x5566631c6248 <col:34, col:38> col:38 threadno 'int'
|-CXXDestructorDecl 0x5566631c6438 <line:206:5, col:19> col:5 ~RouterThread 'void ()' noexcept-unevaluated 0x5566631c6438
|-CXXMethodDecl 0x5566631c6540 <line:209:5, col:29> col:17 add_pending 'void ()' inline
|-CXXMethodDecl 0x5566631c6608 <line:211:5, line:217:5> line:211:21 pass 'unsigned int () const' inline
| `-CompoundStmt 0x5566631c89b8 <col:34, line:217:5>
|   `-ReturnStmt 0x5566631c89a8 <line:215:9, col:34>
|     `-ImplicitCastExpr 0x5566631c8990 <col:16, col:34> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x5566631c8960 <col:16, col:34> 'unsigned int' lvalue ->_pass 0x55666313a750
|         `-ImplicitCastExpr 0x5566631c8948 <col:16, col:27> 'TaskLink *' <LValueToRValue>
|           `-MemberExpr 0x5566631c8918 <col:16, col:27> 'TaskLink *const' lvalue ._next 0x55666313a6e8
|             `-MemberExpr 0x5566631c88e8 <col:16> 'const TaskLink' lvalue ->_task_link 0x5566631c5938
|               `-CXXThisExpr 0x5566631c88d8 <col:16> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x5566631c66c8 <line:221:5, col:28> col:10 driver_lock_tasks 'void ()'
|-CXXMethodDecl 0x5566631c6788 <line:222:5, line:226:5> line:222:17 driver_unlock_tasks 'void ()' inline
| `-CompoundStmt 0x5566631c90e0 <col:39, line:226:5>
|   |-DeclStmt 0x5566631c8c08 <line:223:9, col:68>
|   | `-VarDecl 0x5566631c89e0 <col:9, col:67> col:18 used val 'uint32_t':'unsigned int' cinit
|   |   `-CXXMemberCallExpr 0x5566631c8bc0 <col:24, col:67> 'uint32_t':'unsigned int'
|   |     |-MemberExpr 0x5566631c8b90 <col:24, col:38> '<bound member function type>' .compare_swap 0x556662ee2450
|   |     | `-MemberExpr 0x5566631c8a58 <col:24> 'atomic_uint32_t' lvalue ->_task_blocker 0x5566631c5bb8
|   |     |   `-CXXThisExpr 0x5566631c8a48 <col:24> 'RouterThread *' implicit this
|   |     |-CStyleCastExpr 0x5566631c8b48 <col:51, col:63> 'uint32_t':'unsigned int' <NoOp>
|   |     | `-ImplicitCastExpr 0x5566631c8b30 <col:62, col:63> 'uint32_t':'unsigned int' <IntegralCast> part_of_explicit_cast
|   |     |   `-UnaryOperator 0x5566631c8b08 <col:62, col:63> 'int' prefix '-'
|   |     |     `-IntegerLiteral 0x5566631c8ae8 <col:63> 'int' 1
|   |     `-ImplicitCastExpr 0x5566631c8bf0 <col:66> 'uint32_t':'unsigned int' <IntegralCast>
|   |       `-IntegerLiteral 0x5566631c8b70 <col:66> 'int' 0
|   |-CStyleCastExpr 0x5566631c8c50 <line:224:9, col:16> 'void' <ToVoid>
|   | `-DeclRefExpr 0x5566631c8c20 <col:16> 'uint32_t':'unsigned int' lvalue Var 0x5566631c89e0 'val' 'uint32_t':'unsigned int'
|   `-ParenExpr 0x5566631c90c0 <line:225:9, col:181> 'void'
|     `-ConditionalOperator 0x5566631c9090 <col:10, col:180> 'void'
|       |-CXXStaticCastExpr 0x5566631c8d68 <col:10, col:50> 'bool' static_cast<_Bool> <NoOp>
|       | `-BinaryOperator 0x5566631c8d38 <col:30, col:49> 'bool' '=='
|       |   |-ImplicitCastExpr 0x5566631c8d20 <col:30> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-DeclRefExpr 0x5566631c8c78 <col:30> 'uint32_t':'unsigned int' lvalue Var 0x5566631c89e0 'val' 'uint32_t':'unsigned int'
|       |   `-CStyleCastExpr 0x5566631c8cf8 <col:37, col:49> 'uint32_t':'unsigned int' <NoOp>
|       |     `-ImplicitCastExpr 0x5566631c8ce0 <col:48, col:49> 'uint32_t':'unsigned int' <IntegralCast> part_of_explicit_cast
|       |       `-UnaryOperator 0x5566631c8cb8 <col:48, col:49> 'int' prefix '-'
|       |         `-IntegerLiteral 0x5566631c8c98 <col:49> 'int' 1
|       |-CXXFunctionalCastExpr 0x5566631c8dc8 <col:54, col:61> 'void' functional cast to void <ToVoid>
|       | `-IntegerLiteral 0x5566631c8da8 <col:60> 'int' 0
|       `-CallExpr 0x5566631c8ff0 <col:65, col:180> 'void'
|         |-ImplicitCastExpr 0x5566631c8fd8 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x5566631c8fb8 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x556662c57250 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|         |-ImplicitCastExpr 0x5566631c9030 <col:80> 'const char *' <ArrayToPointerDecay>
|         | `-StringLiteral 0x5566631c8eb8 <col:80> 'const char [21]' lvalue "val == (uint32_t) -1"
|         |-ImplicitCastExpr 0x5566631c9048 <col:104> 'const char *' <ArrayToPointerDecay>
|         | `-StringLiteral 0x5566631c8ee8 <col:104> 'const char [35]' lvalue "../dummy_inc/click/routerthread.hh"
|         |-ImplicitCastExpr 0x5566631c9060 <col:142> 'unsigned int' <IntegralCast>
|         | `-IntegerLiteral 0x5566631c8f28 <col:142> 'int' 225
|         `-ImplicitCastExpr 0x5566631c9078 <col:147, col:161> 'const char *' <ArrayToPointerDecay>
|           `-UnaryOperator 0x5566631c8fa0 <col:147, col:161> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|             `-PredefinedExpr 0x5566631c8f88 <col:161> 'const char [41]' lvalue __PRETTY_FUNCTION__
|               `-StringLiteral 0x5566631c8f48 <col:161> 'const char [41]' lvalue "void RouterThread::driver_unlock_tasks()"
|-CXXMethodDecl 0x5566631c68d0 <line:228:5, col:37> col:17 run_tasks 'void (int)' inline
| `-ParmVarDecl 0x5566631c6840 <col:27, col:31> col:31 ntasks 'int'
|-CXXMethodDecl 0x5566631c6998 <line:229:5, col:33> col:17 process_pending 'void ()' inline
|-CXXMethodDecl 0x5566631c6a58 <line:230:5, col:24> col:17 run_os 'void ()' inline
|-CXXMethodDecl 0x5566631c6b80 <line:238:5, col:45> col:24 used running_in_interrupt 'bool ()' static inline
|-CXXMethodDecl 0x5566631c6c40 <line:239:5, col:45> col:17 used current_thread_is_running 'bool () const' inline
|-CXXMethodDecl 0x5566631c6d00 <line:240:5, col:53> col:17 current_thread_is_running_cleanup 'bool () const' inline
|-FriendDecl 0x5566631c6df0 <line:242:5, col:18> col:12 'class Task':'Task'
|-FriendDecl 0x5566631c6e50 <line:243:5, col:18> col:12 'class Master':'Master'
|-FriendDecl 0x5566631c6ee0 <line:245:5, col:18> col:12 'class SelectSet':'SelectSet'
|-CXXConstructorDecl 0x5566631c72a8 <line:28:7> col:7 implicit RouterThread 'void (const RouterThread &)' inline default noexcept-unevaluated 0x5566631c72a8
| `-ParmVarDecl 0x5566631c73b8 <col:7> col:7 'const RouterThread &'
`-CXXMethodDecl 0x5566631c7a78 <col:7> col:7 implicit operator= 'RouterThread &(const RouterThread &)' inline default noexcept-unevaluated 0x5566631c7a78
  `-ParmVarDecl 0x5566631c7b88 <col:7> col:7 'const RouterThread &'

Layout: <CGRecordLayout
  LLVMType:%class.RouterThread = type { %struct.TaskLink, i8, [7 x i8], %class.TimerSet, %class.SelectSet, [32 x i8], %class.Spinlock, %class.atomic_uint32_t, %class.atomic_uint32_t, %"union.Task::Pending", %"union.Task::Pending"*, %class.SpinlockIRQ, [31 x i8], %class.Master*, i32, i8, i32, i32, [40 x i8] }
  NonVirtualBaseLLVMType:%class.RouterThread.base = type { %struct.TaskLink, i8, [7 x i8], %class.TimerSet, %class.SelectSet, [32 x i8], %class.Spinlock, %class.atomic_uint32_t, %class.atomic_uint32_t, %"union.Task::Pending", %"union.Task::Pending"*, %class.SpinlockIRQ, [31 x i8], %class.Master*, i32, i8, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55666313aa60 prev 0x55666311c6f0 <../dummy_inc/click/task.hh:49:1, line:371:1> line:49:7 referenced class Task definition
|-DefinitionData has_user_declared_ctor can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-private 'TaskLink'
|-CXXRecordDecl 0x55666313ab98 <col:1, col:7> col:7 implicit referenced class Task
|-AccessSpecDecl 0x55666313ac28 <col:33, col:39> col:33 public
|-EnumDecl 0x55666313ac50 <line:52:5, col:50> col:5
| |-EnumConstantDecl 0x55666313ad90 <col:12, col:26> col:12 referenced STRIDE1 'Task::(anonymous enum at ../dummy_inc/click/task.hh:52:5)'
| | `-ConstantExpr 0x55666313ad70 <col:22, col:26> 'unsigned int' Int: 65536
| |   `-BinaryOperator 0x55666313ad50 <col:22, col:26> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x55666313ad10 <col:22> 'unsigned int' 1
| |     `-IntegerLiteral 0x55666313ad30 <col:26> 'int' 16
| `-EnumConstantDecl 0x55666313ae60 <col:30, col:47> col:30 referenced MAX_STRIDE 'Task::(anonymous enum at ../dummy_inc/click/task.hh:52:5)'
|   `-ConstantExpr 0x55666313ae40 <col:43, col:47> 'unsigned int' Int: 2147483648
|     `-BinaryOperator 0x55666313ae20 <col:43, col:47> 'unsigned int' '<<'
|       |-IntegerLiteral 0x55666313ade0 <col:43> 'unsigned int' 1
|       `-IntegerLiteral 0x55666313ae00 <col:47> 'int' 31
|-EnumDecl 0x55666313aeb0 <line:53:5, col:57> col:5
| |-EnumConstantDecl 0x55666313aff0 <col:12, col:29> col:12 referenced MAX_TICKETS 'Task::(anonymous enum at ../dummy_inc/click/task.hh:53:5)'
| | `-ImplicitCastExpr 0x55666313b110 <col:26, col:29> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55666313afd0 <col:26, col:29> 'int' Int: 32768
| |     `-BinaryOperator 0x55666313afb0 <col:26, col:29> 'int' '<<'
| |       |-IntegerLiteral 0x55666313af70 <col:26> 'int' 1
| |       `-IntegerLiteral 0x55666313af90 <col:29> 'int' 15
| `-EnumConstantDecl 0x55666313b0c0 <col:33, col:54> col:33 DEFAULT_TICKETS 'Task::(anonymous enum at ../dummy_inc/click/task.hh:53:5)'
|   `-ImplicitCastExpr 0x55666313b128 <col:51, col:54> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55666313b0a0 <col:51, col:54> 'int' Int: 1024
|       `-BinaryOperator 0x55666313b080 <col:51, col:54> 'int' '<<'
|         |-IntegerLiteral 0x55666313b040 <col:51> 'int' 1
|         `-IntegerLiteral 0x55666313b060 <col:54> 'int' 10
|-CXXConstructorDecl 0x55666313b2f8 <line:75:5, col:48> col:12 Task 'void (TaskCallback, void *)' inline
| |-ParmVarDecl 0x55666313b150 <col:17, col:30> col:30 f 'TaskCallback':'bool (*)(Task *, void *)'
| `-ParmVarDecl 0x55666313b1d0 <col:33, col:39> col:39 user_data 'void *'
|-CXXConstructorDecl 0x55666313b488 <line:86:5, col:27> col:12 Task 'void (Element *)' inline
| `-ParmVarDecl 0x55666313b3c0 <col:17, col:26> col:26 e 'Element *'
|-CXXDestructorDecl 0x55666313b580 <line:91:5, col:11> col:5 ~Task 'void ()' noexcept-unevaluated 0x55666313b580
|-CXXMethodDecl 0x55666313b708 <line:98:5, line:100:5> line:98:25 callback 'TaskCallback () const' inline
| `-CompoundStmt 0x55666309f398 <col:42, line:100:5>
|   `-ReturnStmt 0x55666309f388 <line:99:9, col:16>
|     `-ImplicitCastExpr 0x55666309f370 <col:16> 'TaskCallback':'bool (*)(Task *, void *)' <LValueToRValue>
|       `-MemberExpr 0x55666309f340 <col:16> 'const TaskCallback':'bool (*const)(Task *, void *)' lvalue ->_hook 0x55666309e0c0
|         `-CXXThisExpr 0x55666309f330 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x55666313b7d0 <line:103:5, line:105:5> line:103:18 user_data 'void *() const' inline
| `-CompoundStmt 0x55666309f418 <col:36, line:105:5>
|   `-ReturnStmt 0x55666309f408 <line:104:9, col:16>
|     `-ImplicitCastExpr 0x55666309f3f0 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x55666309f3c0 <col:16> 'void *const' lvalue ->_thunk 0x55666309e128
|         `-CXXThisExpr 0x55666309f3b0 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x55666313b890 <line:108:5, line:110:5> line:108:21 element 'Element *() const' inline
| `-CompoundStmt 0x55666309f498 <col:37, line:110:5>
|   `-ReturnStmt 0x55666309f488 <line:109:9, col:16>
|     `-ImplicitCastExpr 0x55666309f470 <col:16> 'Element *' <LValueToRValue>
|       `-MemberExpr 0x55666309f440 <col:16> 'Element *const' lvalue ->_owner 0x55666309e1e8
|         `-CXXThisExpr 0x55666309f430 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x55666313b950 <line:114:5, col:31> col:17 initialized 'bool () const' inline
|-CXXMethodDecl 0x55666313ba18 <line:123:5, col:33> col:16 home_thread_id 'int () const' inline
|-CXXMethodDecl 0x55666313bad8 <line:132:5, col:35> col:26 thread 'RouterThread *() const' inline
|-CXXMethodDecl 0x55666313bb98 <line:135:5, line:137:5> line:135:20 router 'Router *() const' inline
| `-CompoundStmt 0x55666309f580 <col:35, line:137:5>
|   `-ReturnStmt 0x55666309f570 <line:136:9, col:31>
|     `-CXXMemberCallExpr 0x55666309f538 <col:16, col:31> 'Router *'
|       `-MemberExpr 0x55666309f508 <col:16, col:24> '<bound member function type>' ->router 0x55666312ef00
|         `-ImplicitCastExpr 0x55666309f558 <col:16> 'const Element *' <NoOp>
|           `-ImplicitCastExpr 0x55666309f4f0 <col:16> 'Element *' <LValueToRValue>
|             `-MemberExpr 0x55666309f4c0 <col:16> 'Element *const' lvalue ->_owner 0x55666309e1e8
|               `-CXXThisExpr 0x55666309f4b0 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x55666313bc58 <line:140:5, col:22> col:13 master 'Master *() const'
|-CXXMethodDecl 0x55666313be58 <line:159:5, col:50> col:10 initialize 'void (Element *, bool)'
| |-ParmVarDecl 0x55666313bd08 <col:21, col:30> col:30 owner 'Element *'
| `-ParmVarDecl 0x55666313bd80 <col:37, col:42> col:42 schedule 'bool'
|-CXXMethodDecl 0x55666313c068 <line:169:5, col:50> col:10 initialize 'void (Router *, bool)'
| |-ParmVarDecl 0x55666313bf18 <col:21, col:29> col:29 router 'Router *'
| `-ParmVarDecl 0x55666313bf90 <col:37, col:42> col:42 schedule 'bool'
|-CXXMethodDecl 0x55666313c138 <line:179:5, line:181:5> line:179:17 scheduled 'bool () const' inline
| `-CompoundStmt 0x55666309f690 <col:35, line:181:5>
|   `-ReturnStmt 0x55666309f680 <line:180:9, col:24>
|     `-ImplicitCastExpr 0x55666309f668 <col:16, col:24> 'bool' <IntegralToBoolean>
|       `-ImplicitCastExpr 0x55666309f650 <col:16, col:24> 'uint8_t':'unsigned char' <LValueToRValue>
|         `-MemberExpr 0x55666309f620 <col:16, col:24> 'const uint8_t':'const unsigned char' lvalue .is_scheduled 0x55666309dcf8
|           `-MemberExpr 0x55666309f5d8 <col:16, col:24> 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55666309de18
|             `-MemberExpr 0x55666309f5a8 <col:16> 'const union Status':'const Task::Status' lvalue ->_status 0x55666309e048
|               `-CXXThisExpr 0x55666309f598 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x55666309cd40 <line:190:5, line:192:5> line:190:17 unschedule 'void ()' inline
| `-CompoundStmt 0x55666309f7a8 <col:30, line:192:5>
|   `-BinaryOperator 0x55666309f788 <line:191:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x55666309f730 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x55666309dcf8
|     | `-MemberExpr 0x55666309f6e8 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55666309de18
|     |   `-MemberExpr 0x55666309f6b8 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x55666309e048
|     |     `-CXXThisExpr 0x55666309f6a8 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x55666309f770 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x55666309f760 <col:32> 'bool' false
|-CXXMethodDecl 0x55666309ce00 <line:201:5, line:206:5> line:201:17 used reschedule 'void ()' inline
| `-CompoundStmt 0x55666309faf8 <col:30, line:206:5>
|   |-BinaryOperator 0x55666309f8a0 <line:202:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x55666309f848 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x55666309dcf8
|   | | `-MemberExpr 0x55666309f800 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55666309de18
|   | |   `-MemberExpr 0x55666309f7d0 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x55666309e048
|   | |     `-CXXThisExpr 0x55666309f7c0 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x55666309f888 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x55666309f878 <col:32> 'bool' true
|   |-CallExpr 0x55666309f940 <line:203:9, col:21> 'void'
|   | `-ImplicitCastExpr 0x55666309f928 <col:9> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55666309f908 <col:9> 'void ()' lvalue Function 0x5566631358b0 'click_fence' 'void ()'
|   `-IfStmt 0x55666309fae0 <line:204:9, line:205:32>
|     |-BinaryOperator 0x55666309fa20 <line:204:13, col:34> 'bool' '<'
|     | |-ImplicitCastExpr 0x55666309f9f0 <col:13, col:30> 'uintptr_t':'unsigned long' <LValueToRValue>
|     | | `-MemberExpr 0x55666309f9a0 <col:13, col:30> 'uintptr_t':'unsigned long' lvalue .x 0x55666309e458
|     | |   `-MemberExpr 0x55666309f970 <col:13> 'Task::Pending' lvalue ->_pending_nextptr 0x55666309e4d0
|     | |     `-CXXThisExpr 0x55666309f960 <col:13> 'Task *' implicit this
|     | `-ImplicitCastExpr 0x55666309fa08 <col:34> 'unsigned long' <IntegralCast>
|     |   `-IntegerLiteral 0x55666309f9d0 <col:34> 'int' 2
|     `-CXXMemberCallExpr 0x55666309faa0 <line:205:13, col:32> 'void'
|       |-MemberExpr 0x55666309fa50 <col:13> '<bound member function type>' ->complete_schedule 0x55666309eed0
|       | `-CXXThisExpr 0x55666309fa40 <col:13> 'Task *' implicit this
|       `-ImplicitCastExpr 0x55666309fac8 <col:31> 'RouterThread *' <NullToPointer>
|         `-IntegerLiteral 0x55666309fa80 <col:31> 'int' 0
|-CXXMethodDecl 0x55666309cec0 <line:238:5, line:240:5> line:238:17 fast_reschedule 'void ()' inline
| `-CompoundStmt 0x55666309fc20 <col:35, line:240:5>
|   `-BinaryOperator 0x55666309fc00 <line:239:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x55666309fba8 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x55666309dcf8
|     | `-MemberExpr 0x55666309fb60 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55666309de18
|     |   `-MemberExpr 0x55666309fb30 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x55666309e048
|     |     `-CXXThisExpr 0x55666309fb20 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x55666309fbe8 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x55666309fbd8 <col:32> 'bool' true
|-CXXMethodDecl 0x55666309cf80 <line:250:5, line:253:5> line:250:17 strong_unschedule 'void ()' inline
| `-CompoundStmt 0x55666309fe38 <col:37, line:253:5>
|   |-BinaryOperator 0x55666309fd18 <line:251:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x55666309fcc0 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x55666309dcf8
|   | | `-MemberExpr 0x55666309fc78 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55666309de18
|   | |   `-MemberExpr 0x55666309fc48 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x55666309e048
|   | |     `-CXXThisExpr 0x55666309fc38 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x55666309fd00 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x55666309fcf0 <col:32> 'bool' false
|   `-BinaryOperator 0x55666309fe18 <line:252:9, col:41> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x55666309fdc0 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_strong_unscheduled 0x55666309dd58
|     | `-MemberExpr 0x55666309fd78 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55666309de18
|     |   `-MemberExpr 0x55666309fd48 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x55666309e048
|     |     `-CXXThisExpr 0x55666309fd38 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x55666309fe00 <col:41> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x55666309fdf0 <col:41> 'bool' true
|-CXXMethodDecl 0x55666309d040 <line:261:5, line:264:5> line:261:17 strong_reschedule 'void ()' inline
| `-CompoundStmt 0x55666309ffb8 <col:37, line:264:5>
|   |-BinaryOperator 0x55666309ff38 <line:262:9, col:41> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x55666309fee0 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_strong_unscheduled 0x55666309dd58
|   | | `-MemberExpr 0x55666309fe98 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55666309de18
|   | |   `-MemberExpr 0x55666309fe68 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x55666309e048
|   | |     `-CXXThisExpr 0x55666309fe58 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x55666309ff20 <col:41> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x55666309ff10 <col:41> 'bool' false
|   `-CXXMemberCallExpr 0x55666309ff98 <line:263:9, col:20> 'void'
|     `-MemberExpr 0x55666309ff68 <col:9> '<bound member function type>' ->reschedule 0x55666309ce00
|       `-CXXThisExpr 0x55666309ff58 <col:9> 'Task *' implicit this
|-CXXMethodDecl 0x55666309d188 <line:275:5, col:39> col:10 move_thread 'void (int)'
| `-ParmVarDecl 0x55666309d0f8 <col:22, col:26> col:26 new_thread_id 'int'
|-CXXMethodDecl 0x55666309d258 <line:279:5, col:26> col:16 tickets 'int () const' inline
|-CXXMethodDecl 0x55666309d3a0 <line:280:5, col:34> col:17 used set_tickets 'void (int)' inline
| `-ParmVarDecl 0x55666309d310 <col:29, col:33> col:33 n 'int'
|-CXXMethodDecl 0x55666309d4f0 <line:281:5, col:41> col:17 adjust_tickets 'void (int)' inline
| `-ParmVarDecl 0x55666309d460 <col:32, col:36> col:36 delta 'int'
|-CXXMethodDecl 0x55666309d5b8 <line:284:5, col:22> col:17 fire 'bool ()' inline
|-CXXMethodDecl 0x55666309d678 <line:299:5, col:64> col:25 hook 'TaskCallback () const' inline
| `-DeprecatedAttr 0x55666309d718 <col:53> "" ""
|-CXXMethodDecl 0x55666309d7b0 <line:300:5, col:58> col:18 thunk 'void *() const' inline
| `-DeprecatedAttr 0x55666309d850 <col:47> "" ""
|-AccessSpecDecl 0x55666309d8c0 <line:303:3, col:10> col:3 private
|-FieldDecl 0x55666309d900 <line:310:5, col:14> col:14 referenced _stride 'unsigned int'
|-FieldDecl 0x55666309d968 <line:311:5, col:9> col:9 referenced _tickets 'int'
|-CXXRecordDecl 0x55666309d9b8 <line:314:5, line:321:5> line:314:11 union Status definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55666309dad8 <col:5, col:11> col:11 implicit union Status
| |-CXXRecordDecl 0x55666309db68 <line:315:9, line:319:9> line:315:9 struct definition
| | |-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | | |-DefaultConstructor exists trivial
| | | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | | |-MoveConstructor exists simple trivial
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial
| | |-FieldDecl 0x55666309dc98 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
| | |-FieldDecl 0x55666309dcf8 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
| | |-FieldDecl 0x55666309dd58 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
| | |-CXXConstructorDecl 0x5566631ce138 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
| | |-CXXDestructorDecl 0x5566631ce210 <col:9> col:9 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x5566631ce210
| | |-CXXConstructorDecl 0x5566631ce4c8 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x5566631ce4c8
| | | `-ParmVarDecl 0x5566631ce5d8 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
| | `-CXXConstructorDecl 0x5566631ce678 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x5566631ce678
| |   `-ParmVarDecl 0x5566631ce788 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'
| |-FieldDecl 0x55666309de18 <col:9> col:9 implicit referenced 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| |-IndirectFieldDecl 0x55666309de78 <line:316:21> col:21 implicit home_thread_id 'int16_t':'short'
| | |-Field 0x55666309de18 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x55666309dc98 'home_thread_id' 'int16_t':'short'
| |-IndirectFieldDecl 0x55666309ded0 <line:317:21> col:21 implicit is_scheduled 'uint8_t':'unsigned char'
| | |-Field 0x55666309de18 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x55666309dcf8 'is_scheduled' 'uint8_t':'unsigned char'
| |-IndirectFieldDecl 0x55666309df28 <line:318:21> col:21 implicit is_strong_unscheduled 'uint8_t':'unsigned char'
| | |-Field 0x55666309de18 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x55666309dd58 'is_strong_unscheduled' 'uint8_t':'unsigned char'
| |-FieldDecl 0x55666309df80 <line:320:9, col:18> col:18 status 'uint32_t':'unsigned int'
| |-CXXConstructorDecl 0x5566631ce048 <line:314:11> col:11 implicit used Status 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x5566631ce9a8 <col:11>
| |-CXXConstructorDecl 0x5566631ce318 <col:11> col:11 implicit constexpr Status 'void (const Task::Status &)' inline default trivial noexcept-unevaluated 0x5566631ce318
| | `-ParmVarDecl 0x5566631ce428 <col:11> col:11 'const Task::Status &'
| `-CXXConstructorDecl 0x5566631ce828 <col:11> col:11 implicit constexpr Status 'void (Task::Status &&)' inline default trivial noexcept-unevaluated 0x5566631ce828
|   `-ParmVarDecl 0x5566631ce938 <col:11> col:11 'Task::Status &&'
|-FieldDecl 0x55666309e048 <col:5, line:321:7> col:7 referenced _status 'union Status':'Task::Status'
|-FieldDecl 0x55666309e0c0 <line:323:5, col:18> col:18 referenced _hook 'TaskCallback':'bool (*)(Task *, void *)'
|-FieldDecl 0x55666309e128 <line:324:5, col:11> col:11 referenced _thunk 'void *'
|-FieldDecl 0x55666309e188 <line:335:5, col:19> col:19 referenced _thread 'RouterThread *'
|-FieldDecl 0x55666309e1e8 <line:337:5, col:14> col:14 referenced _owner 'Element *'
|-CXXRecordDecl 0x55666309e238 <line:339:5, line:342:5> line:339:11 referenced union Pending definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55666309e358 <col:5, col:11> col:11 implicit union Pending
| |-FieldDecl 0x55666309e3f8 <line:340:9, col:15> col:15 t 'Task *'
| |-FieldDecl 0x55666309e458 <line:341:9, col:19> col:19 referenced x 'uintptr_t':'unsigned long'
| |-CXXConstructorDecl 0x5566631c7558 <line:339:11> col:11 implicit constexpr Pending 'void (const Task::Pending &)' inline default trivial noexcept-unevaluated 0x5566631c7558
| | `-ParmVarDecl 0x5566631c7668 <col:11> col:11 'const Task::Pending &'
| |-CXXConstructorDecl 0x5566631c7708 <col:11> col:11 implicit constexpr Pending 'void (Task::Pending &&)' inline default trivial noexcept-unevaluated 0x5566631c7708
| | `-ParmVarDecl 0x5566631c7818 <col:11> col:11 'Task::Pending &&'
| |-CXXDestructorDecl 0x5566631c7888 <col:11> col:11 implicit ~Pending 'void ()' inline default trivial noexcept-unevaluated 0x5566631c7888
| |-CXXMethodDecl 0x5566631c8108 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(const Task::Pending &)' inline default trivial noexcept-unevaluated 0x5566631c8108
| | `-ParmVarDecl 0x5566631c8218 <col:11> col:11 'const Task::Pending &'
| |-CXXMethodDecl 0x5566631c8288 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(Task::Pending &&)' inline default trivial noexcept-unevaluated 0x5566631c8288
| | `-ParmVarDecl 0x5566631c8398 <col:11> col:11 'Task::Pending &&'
| `-CXXConstructorDecl 0x5566631cea08 <col:11> col:11 implicit used Pending 'void () noexcept' inline default trivial
|   `-CompoundStmt 0x5566631ceae0 <col:11>
|-FieldDecl 0x55666309e4d0 <line:343:5, col:13> col:13 referenced _pending_nextptr 'Task::Pending'
|-CXXConstructorDecl 0x55666309e618 <line:345:5, col:23> col:5 Task 'void (const Task &)'
| `-ParmVarDecl 0x55666309e558 <col:10, col:22> col:22 x 'const Task &'
|-CXXMethodDecl 0x55666309e7c8 <line:346:5, col:34> col:11 operator= 'Task &(const Task &)'
| `-ParmVarDecl 0x55666309e6d8 <col:21, col:33> col:33 x 'const Task &'
|-CXXMethodDecl 0x55666309e890 <line:347:5, col:18> col:10 cleanup 'void ()'
|-CXXMethodDecl 0x55666309e950 <line:352:5, col:37> col:17 used on_scheduled_list 'bool () const' inline
|-CXXMethodDecl 0x55666309ea10 <line:353:5, line:355:5> line:353:17 on_pending_list 'bool () const' inline
| `-CompoundStmt 0x5566630a00c8 <col:41, line:355:5>
|   `-ReturnStmt 0x5566630a00b8 <line:354:9, col:38>
|     `-BinaryOperator 0x5566630a0098 <col:16, col:38> 'bool' '!='
|       |-ImplicitCastExpr 0x5566630a0068 <col:16, col:33> 'uintptr_t':'unsigned long' <LValueToRValue>
|       | `-MemberExpr 0x5566630a0018 <col:16, col:33> 'const uintptr_t':'const unsigned long' lvalue .x 0x55666309e458
|       |   `-MemberExpr 0x55666309ffe8 <col:16> 'const Task::Pending' lvalue ->_pending_nextptr 0x55666309e4d0
|       |     `-CXXThisExpr 0x55666309ffd8 <col:16> 'const Task *' implicit this
|       `-ImplicitCastExpr 0x5566630a0080 <col:38> 'unsigned long' <IntegralCast>
|         `-IntegerLiteral 0x5566630a0048 <col:38> 'int' 0
|-CXXMethodDecl 0x55666309ead0 <line:356:5, col:33> col:17 needs_cleanup 'bool () const' inline
|-CXXMethodDecl 0x55666309ec10 <line:361:5, col:33> col:10 add_pending 'void (bool)'
| `-ParmVarDecl 0x55666309eb80 <col:22, col:27> col:27 always 'bool'
|-CXXMethodDecl 0x55666309ed88 <line:362:5, col:46> col:10 process_pending 'void (RouterThread *)'
| `-ParmVarDecl 0x55666309ecc8 <col:26, col:40> col:40 thread 'RouterThread *'
|-CXXMethodDecl 0x55666309eed0 <line:364:5, col:64> col:10 used complete_schedule 'void (RouterThread *)'
| `-ParmVarDecl 0x55666309ee40 <col:28, col:42> col:42 process_pending_thread 'RouterThread *'
|-CXXMethodDecl 0x55666309ef98 <line:365:5, col:44> col:17 remove_from_scheduled_list 'void ()' inline
|-CXXMethodDecl 0x55666309f160 <line:367:5, col:55> col:17 error_hook 'bool (Task *, void *)' static
| |-ParmVarDecl 0x55666309f048 <col:28, col:34> col:34 task 'Task *'
| `-ParmVarDecl 0x55666309f0c8 <col:40, col:46> col:46 user_data 'void *'
|-FriendDecl 0x55666309f260 <line:369:5, col:18> col:12 'class RouterThread':'RouterThread'
`-FriendDecl 0x55666309f2f0 <line:370:5, col:18> col:12 'class Master':'Master'

Layout: <CGRecordLayout
  LLVMType:%class.Task = type { %struct.TaskLink.base, i32, i32, %"union.Task::Status", i1 (%class.Task*, i8*)*, i8*, %class.RouterThread*, %class.Element*, %"union.Task::Pending" }
  NonVirtualBaseLLVMType:%class.Task = type { %struct.TaskLink.base, i32, i32, %"union.Task::Status", i1 (%class.Task*, i8*)*, i8*, %class.RouterThread*, %class.Element*, %"union.Task::Pending" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5)
         0 |   TimerCallback callback
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timer
         0 |   int _schedpos1
         8 |   class Timestamp _expiry_s
         8 |     union Timestamp::rep_t _t
         8 |       int64_t x
        16 |   union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5) _hook
        16 |     TimerCallback callback
        24 |   void * _thunk
        32 |   class Element * _owner
        40 |   class RouterThread * _thread
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5566630a3bc8 <../dummy_inc/click/timer.hh:343:5, line:345:5> line:343:5 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x5566630a3cf8 <line:344:2, col:16> col:16 referenced callback 'TimerCallback':'void (*)(Timer *, void *)'
`-CXXDestructorDecl 0x5566630a47e8 <line:343:5> col:5 implicit ~ 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%union.anon = type { void (%class.Timer*, i8*)* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5566630a04c8 prev 0x55666311c7a0 <../dummy_inc/click/timer.hh:14:1, line:358:1> line:14:7 class Timer definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x5566630a05c0 <col:1, col:7> col:7 implicit referenced class Timer
|-AccessSpecDecl 0x5566630a0650 <col:15, col:21> col:15 public
|-CXXConstructorDecl 0x5566630a06b0 <line:22:5, col:11> col:5 Timer 'void ()'
|-CXXRecordDecl 0x5566630a0758 <line:24:5, line:25:5> line:24:12 referenced struct do_nothing_t definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| `-CXXRecordDecl 0x5566630a0878 <col:5, col:12> col:12 implicit struct do_nothing_t
|-CXXConstructorDecl 0x5566630a0a18 <line:32:5, col:37> col:5 Timer 'void (const Timer::do_nothing_t &)'
| `-ParmVarDecl 0x5566630a0958 <col:11, col:31> col:31 unused 'const Timer::do_nothing_t &'
|-CXXConstructorDecl 0x5566630a0c68 <line:38:5, col:43> col:5 Timer 'void (TimerCallback, void *)'
| |-ParmVarDecl 0x5566630a0ad8 <col:11, col:25> col:25 f 'TimerCallback':'void (*)(Timer *, void *)'
| `-ParmVarDecl 0x5566630a0b58 <col:28, col:34> col:34 user_data 'void *'
|-CXXConstructorDecl 0x5566630a0dc0 <line:43:5, col:27> col:5 Timer 'void (Element *)'
| `-ParmVarDecl 0x5566630a0d30 <col:11, col:20> col:20 element 'Element *'
|-CXXConstructorDecl 0x5566630a0f48 <line:47:5, col:21> col:5 Timer 'void (Task *)'
| `-ParmVarDecl 0x5566630a0e80 <col:11, col:17> col:17 task 'Task *'
|-CXXConstructorDecl 0x5566630a10f8 <line:52:5, col:25> col:5 Timer 'void (const Timer &)'
| `-ParmVarDecl 0x5566630a1038 <col:11, col:24> col:24 x 'const Timer &'
|-CXXDestructorDecl 0x5566630a11f0 <line:55:5, line:58:5> line:55:12 ~Timer 'void () noexcept' inline
| `-CompoundStmt 0x5566630a49c0 <col:21, line:58:5>
|   `-IfStmt 0x5566630a49a8 <line:56:2, line:57:17>
|     |-CXXMemberCallExpr 0x5566630a4910 <line:56:6, col:16> 'bool'
|     | `-MemberExpr 0x5566630a48e0 <col:6> '<bound member function type>' ->scheduled 0x5566630a1a48
|     |   `-ImplicitCastExpr 0x5566630a4930 <col:6> 'const Timer *' <NoOp>
|     |     `-CXXThisExpr 0x5566630a48d0 <col:6> 'Timer *' implicit this
|     `-CXXMemberCallExpr 0x5566630a4988 <line:57:6, col:17> 'void'
|       `-MemberExpr 0x5566630a4958 <col:6> '<bound member function type>' ->unschedule 0x5566630a3070
|         `-CXXThisExpr 0x5566630a4948 <col:6> 'Timer *' implicit this
|-CXXMethodDecl 0x5566630a12f0 <line:62:5, line:65:5> line:62:17 used assign 'void ()' inline
| `-CompoundStmt 0x5566630a4b60 <col:26, line:65:5>
|   |-BinaryOperator 0x5566630a4a80 <line:63:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x5566630a4a18 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x5566630a3cf8
|   | | `-MemberExpr 0x5566630a49e8 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x5566630a3db8
|   | |   `-CXXThisExpr 0x5566630a49d8 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x5566630a4a68 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5566630a4a48 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x5566630a4218 'do_nothing_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x5566630a4b40 <line:64:2, col:20> 'void *' lvalue '='
|     |-MemberExpr 0x5566630a4ab0 <col:2> 'void *' lvalue ->_thunk 0x5566630a3e38
|     | `-CXXThisExpr 0x5566630a4aa0 <col:2> 'Timer *' implicit this
|     `-CStyleCastExpr 0x5566630a4b18 <col:11, col:20> 'void *' <IntegralToPointer>
|       `-IntegerLiteral 0x5566630a4ae0 <col:20> 'int' 1
|-CXXMethodDecl 0x5566630a1430 <line:68:5, line:71:5> line:68:17 assign 'void (const Timer::do_nothing_t &)' inline
| |-ParmVarDecl 0x5566630a13a0 <col:24, col:44> col:44 used unused 'const Timer::do_nothing_t &'
| `-CompoundStmt 0x5566630a4cc0 <col:52, line:71:5>
|   |-CStyleCastExpr 0x5566630a4bb0 <line:69:2, col:9> 'void' <ToVoid>
|   | `-DeclRefExpr 0x5566630a4b80 <col:9> 'const Timer::do_nothing_t' lvalue ParmVar 0x5566630a13a0 'unused' 'const Timer::do_nothing_t &'
|   `-CXXMemberCallExpr 0x5566630a4ca0 <line:70:2, col:9> 'void'
|     `-MemberExpr 0x5566630a4c70 <col:2> '<bound member function type>' ->assign 0x5566630a12f0
|       `-CXXThisExpr 0x5566630a4c60 <col:2> 'Timer *' implicit this
|-CXXMethodDecl 0x5566630a1600 <line:76:5, line:79:5> line:76:17 assign 'void (TimerCallback, void *)' inline
| |-ParmVarDecl 0x5566630a14e8 <col:24, col:38> col:38 used f 'TimerCallback':'void (*)(Timer *, void *)'
| |-ParmVarDecl 0x5566630a1568 <col:41, col:47> col:47 used user_data 'void *'
| `-CompoundStmt 0x5566631551a0 <col:58, line:79:5>
|   |-BinaryOperator 0x5566631550e8 <line:77:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x556663155080 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x5566630a3cf8
|   | | `-MemberExpr 0x5566630a4cf0 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x5566630a3db8
|   | |   `-CXXThisExpr 0x5566630a4ce0 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x5566631550d0 <col:19> 'TimerCallback':'void (*)(Timer *, void *)' <LValueToRValue>
|   |   `-DeclRefExpr 0x5566631550b0 <col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue ParmVar 0x5566630a14e8 'f' 'TimerCallback':'void (*)(Timer *, void *)'
|   `-BinaryOperator 0x556663155180 <line:78:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x556663155118 <col:2> 'void *' lvalue ->_thunk 0x5566630a3e38
|     | `-CXXThisExpr 0x556663155108 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x556663155168 <col:11> 'void *' <LValueToRValue>
|       `-DeclRefExpr 0x556663155148 <col:11> 'void *' lvalue ParmVar 0x5566630a1568 'user_data' 'void *'
|-CXXMethodDecl 0x5566630a1750 <line:84:5, line:87:5> line:84:10 assign 'void (Element *)'
| |-ParmVarDecl 0x5566630a16c0 <col:17, col:26> col:26 used element 'Element *'
| `-CompoundStmt 0x556663155338 <col:35, line:87:5>
|   |-BinaryOperator 0x556663155268 <line:85:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x556663155200 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x5566630a3cf8
|   | | `-MemberExpr 0x5566631551d0 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x5566630a3db8
|   | |   `-CXXThisExpr 0x5566631551c0 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x556663155250 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556663155230 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x5566630a43f0 'element_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x556663155318 <line:86:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x556663155298 <col:2> 'void *' lvalue ->_thunk 0x5566630a3e38
|     | `-CXXThisExpr 0x556663155288 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x556663155300 <col:11> 'void *' <BitCast>
|       `-ImplicitCastExpr 0x5566631552e8 <col:11> 'Element *' <LValueToRValue>
|         `-DeclRefExpr 0x5566631552c8 <col:11> 'Element *' lvalue ParmVar 0x5566630a16c0 'element' 'Element *'
|-CXXMethodDecl 0x5566630a1898 <line:91:5, line:94:5> line:91:10 assign 'void (Task *)'
| |-ParmVarDecl 0x5566630a1808 <col:17, col:23> col:23 used task 'Task *'
| `-CompoundStmt 0x5566631554d0 <col:29, line:94:5>
|   |-BinaryOperator 0x556663155400 <line:92:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x556663155398 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x5566630a3cf8
|   | | `-MemberExpr 0x556663155368 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x5566630a3db8
|   | |   `-CXXThisExpr 0x556663155358 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x5566631553e8 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5566631553c8 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x5566630a45c8 'task_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x5566631554b0 <line:93:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x556663155430 <col:2> 'void *' lvalue ->_thunk 0x5566630a3e38
|     | `-CXXThisExpr 0x556663155420 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x556663155498 <col:11> 'void *' <BitCast>
|       `-ImplicitCastExpr 0x556663155480 <col:11> 'Task *' <LValueToRValue>
|         `-DeclRefExpr 0x556663155460 <col:11> 'Task *' lvalue ParmVar 0x5566630a1808 'task' 'Task *'
|-CXXMethodDecl 0x5566630a1988 <line:98:5, line:100:5> line:98:17 initialized 'bool () const' inline
| `-CompoundStmt 0x5566631555b0 <col:37, line:100:5>
|   `-ReturnStmt 0x5566631555a0 <line:99:2, col:19>
|     `-BinaryOperator 0x556663155580 <col:9, col:19> 'bool' '!='
|       |-ImplicitCastExpr 0x556663155550 <col:9> 'Element *' <LValueToRValue>
|       | `-MemberExpr 0x556663155500 <col:9> 'Element *const' lvalue ->_owner 0x5566630a3e98
|       |   `-CXXThisExpr 0x5566631554f0 <col:9> 'const Timer *' implicit this
|       `-ImplicitCastExpr 0x556663155568 <col:19> 'Element *' <NullToPointer>
|         `-IntegerLiteral 0x556663155530 <col:19> 'int' 0
|-CXXMethodDecl 0x5566630a1a48 <line:103:5, line:105:5> line:103:17 used scheduled 'bool () const' inline
| `-CompoundStmt 0x556663155670 <col:35, line:105:5>
|   `-ReturnStmt 0x556663155660 <line:104:2, col:23>
|     `-BinaryOperator 0x556663155640 <col:9, col:23> 'bool' '!='
|       |-ImplicitCastExpr 0x556663155628 <col:9> 'int' <LValueToRValue>
|       | `-MemberExpr 0x5566631555d8 <col:9> 'const int' lvalue ->_schedpos1 0x5566630a3b18
|       |   `-CXXThisExpr 0x5566631555c8 <col:9> 'const Timer *' implicit this
|       `-IntegerLiteral 0x556663155608 <col:23> 'int' 0
|-CXXMethodDecl 0x5566630a1b08 <line:116:5, line:118:5> line:116:29 used expiry_steady 'const Timestamp &() const' inline
| `-CompoundStmt 0x5566631556d8 <col:51, line:118:5>
|   `-ReturnStmt 0x5566631556c8 <line:117:2, col:9>
|     `-MemberExpr 0x556663155698 <col:9> 'const Timestamp' lvalue ->_expiry_s 0x5566630a3b78
|       `-CXXThisExpr 0x556663155688 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x5566630a1bc8 <line:131:5, line:136:5> line:131:22 expiry 'Timestamp () const' inline
| `-CompoundStmt 0x556663155c30 <col:37, line:136:5>
|   `-IfStmt 0x556663155c08 <line:132:2, line:135:13> has_else
|     |-ImplicitCastExpr 0x556663155798 <line:132:6> 'bool' <MemberPointerToBoolean>
|     | `-ImplicitCastExpr 0x556663155780 <col:6> 'Timestamp::unspecified_bool_type':'Timestamp::seconds_type (Timestamp::*)() const' <UserDefinedConversion>
|     |   `-CXXMemberCallExpr 0x556663155760 <col:6> 'Timestamp::unspecified_bool_type':'Timestamp::seconds_type (Timestamp::*)() const'
|     |     `-MemberExpr 0x556663155730 <col:6> '<bound member function type>' .operator int (Timestamp::*)() const 0x5566630ae878
|     |       `-MemberExpr 0x556663155700 <col:6> 'const Timestamp' lvalue ->_expiry_s 0x5566630a3b78
|     |         `-CXXThisExpr 0x5566631556f0 <col:6> 'const Timer *' implicit this
|     |-ReturnStmt 0x556663155b78 <line:133:6, col:72>
|     | `-ExprWithCleanups 0x556663155b60 <col:13, col:72> 'Timestamp'
|     |   `-CXXConstructExpr 0x556663155b30 <col:13, col:72> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|     |     `-MaterializeTemporaryExpr 0x556663155b18 <col:13, col:72> 'Timestamp' xvalue
|     |       `-CXXOperatorCallExpr 0x556663155ae0 <col:13, col:72> 'Timestamp'
|     |         |-ImplicitCastExpr 0x556663155ac8 <col:45> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|     |         | `-DeclRefExpr 0x556663155aa8 <col:45> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x5566630dd050 'operator-' 'Timestamp (Timestamp, const Timestamp &)'
|     |         |-CXXConstructExpr 0x556663155a48 <col:13, col:43> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|     |         | `-MaterializeTemporaryExpr 0x556663155a30 <col:13, col:43> 'Timestamp' xvalue
|     |         |   `-CXXOperatorCallExpr 0x556663155958 <col:13, col:43> 'Timestamp'
|     |         |     |-ImplicitCastExpr 0x556663155940 <col:23> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|     |         |     | `-DeclRefExpr 0x556663155920 <col:23> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x5566630dcd10 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|     |         |     |-CXXConstructExpr 0x5566631558c0 <col:13> 'Timestamp' 'void (const Timestamp &) noexcept'
|     |         |     | `-MemberExpr 0x5566631557c0 <col:13> 'const Timestamp' lvalue ->_expiry_s 0x5566630a3b78
|     |         |     |   `-CXXThisExpr 0x5566631557b0 <col:13> 'const Timer *' implicit this
|     |         |     `-MaterializeTemporaryExpr 0x556663155908 <col:25, col:43> 'const Timestamp' lvalue
|     |         |       `-ImplicitCastExpr 0x5566631558f0 <col:25, col:43> 'const Timestamp' <NoOp>
|     |         |         `-CallExpr 0x5566631558a0 <col:25, col:43> 'Timestamp'
|     |         |           `-ImplicitCastExpr 0x556663155888 <col:25, col:36> 'Timestamp (*)()' <FunctionToPointerDecay>
|     |         |             `-DeclRefExpr 0x556663155828 <col:25, col:36> 'Timestamp ()' lvalue CXXMethod 0x5566630d0370 'recent' 'Timestamp ()'
|     |         `-MaterializeTemporaryExpr 0x556663155a90 <col:47, col:72> 'const Timestamp' lvalue
|     |           `-ImplicitCastExpr 0x556663155a78 <col:47, col:72> 'const Timestamp' <NoOp>
|     |             `-CallExpr 0x556663155a10 <col:47, col:72> 'Timestamp'
|     |               `-ImplicitCastExpr 0x5566631559f8 <col:47, col:58> 'Timestamp (*)()' <FunctionToPointerDecay>
|     |                 `-DeclRefExpr 0x5566631559c8 <col:47, col:58> 'Timestamp ()' lvalue CXXMethod 0x556662f2b8c0 'recent_steady' 'Timestamp ()'
|     `-ReturnStmt 0x556663155bf8 <line:135:6, col:13>
|       `-CXXConstructExpr 0x556663155bc8 <col:13> 'Timestamp' 'void (const Timestamp &) noexcept'
|         `-MemberExpr 0x556663155b98 <col:13> 'const Timestamp' lvalue ->_expiry_s 0x5566630a3b78
|           `-CXXThisExpr 0x556663155b88 <col:13> 'const Timer *' implicit this
|-CXXMethodDecl 0x5566630a1c88 <line:139:5, line:141:5> line:139:20 router 'Router *() const' inline
| `-CompoundStmt 0x556663155d18 <col:35, line:141:5>
|   `-ReturnStmt 0x556663155d08 <line:140:2, col:24>
|     `-CXXMemberCallExpr 0x556663155cd0 <col:9, col:24> 'Router *'
|       `-MemberExpr 0x556663155ca0 <col:9, col:17> '<bound member function type>' ->router 0x55666312ef00
|         `-ImplicitCastExpr 0x556663155cf0 <col:9> 'const Element *' <NoOp>
|           `-ImplicitCastExpr 0x556663155c88 <col:9> 'Element *' <LValueToRValue>
|             `-MemberExpr 0x556663155c58 <col:9> 'Element *const' lvalue ->_owner 0x5566630a3e98
|               `-CXXThisExpr 0x556663155c48 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x5566630a1d48 <line:144:5, line:146:5> line:144:21 element 'Element *() const' inline
| `-CompoundStmt 0x556663155d98 <col:37, line:146:5>
|   `-ReturnStmt 0x556663155d88 <line:145:2, col:9>
|     `-ImplicitCastExpr 0x556663155d70 <col:9> 'Element *' <LValueToRValue>
|       `-MemberExpr 0x556663155d40 <col:9> 'Element *const' lvalue ->_owner 0x5566630a3e98
|         `-CXXThisExpr 0x556663155d30 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x5566630a1e08 <line:149:5, line:151:5> line:149:26 thread 'RouterThread *() const' inline
| `-CompoundStmt 0x556663155e18 <col:41, line:151:5>
|   `-ReturnStmt 0x556663155e08 <line:150:2, col:9>
|     `-ImplicitCastExpr 0x556663155df0 <col:9> 'RouterThread *' <LValueToRValue>
|       `-MemberExpr 0x556663155dc0 <col:9> 'RouterThread *const' lvalue ->_thread 0x5566630a3ef8
|         `-CXXThisExpr 0x556663155db0 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x5566630a1ed0 <line:154:5, col:26> col:9 home_thread_id 'int () const'
|-CXXMethodDecl 0x5566630a2090 <line:171:5, col:55> col:10 initialize 'void (Element *, bool)'
| |-ParmVarDecl 0x5566630a1f80 <col:21, col:30> col:30 owner 'Element *'
| `-ParmVarDecl 0x5566630a1ff8 <col:37, col:50> col:42 quiet 'bool' cinit
|   `-CXXBoolLiteralExpr 0x5566630a47d8 <col:50> 'bool' false
|-CXXMethodDecl 0x5566630a2218 <line:181:5, col:35> col:10 initialize 'void (Router *)'
| `-ParmVarDecl 0x5566630a2150 <col:21, col:29> col:29 router 'Router *'
|-CXXMethodDecl 0x5566630a2360 <line:191:5, col:57> col:10 used schedule_at_steady 'void (const Timestamp &)'
| `-ParmVarDecl 0x5566630a22d0 <col:29, col:46> col:46 when_steady 'const Timestamp &'
|-CXXMethodDecl 0x5566630a24a8 <line:197:5, col:59> col:10 reschedule_at_steady 'void (const Timestamp &)'
| `-ParmVarDecl 0x5566630a2418 <col:31, col:48> col:48 when_steady 'const Timestamp &'
|-CXXMethodDecl 0x5566630a25f0 <line:210:5, col:50> col:17 used schedule_at 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x5566630a2560 <col:29, col:46> col:46 when 'const Timestamp &'
|-CXXMethodDecl 0x5566630a2738 <line:216:5, col:52> col:17 reschedule_at 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x5566630a26a8 <col:31, col:48> col:48 when 'const Timestamp &'
|-CXXMethodDecl 0x5566630a2800 <line:221:5, line:223:5> line:221:17 schedule_now 'void ()' inline
| `-CompoundStmt 0x556663155f80 <col:32, line:223:5>
|   `-ExprWithCleanups 0x556663155f68 <line:222:2, col:47> 'void'
|     `-CXXMemberCallExpr 0x556663155f10 <col:2, col:47> 'void'
|       |-MemberExpr 0x556663155e40 <col:2> '<bound member function type>' ->schedule_at_steady 0x5566630a2360
|       | `-CXXThisExpr 0x556663155e30 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x556663155f50 <col:21, col:46> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x556663155f38 <col:21, col:46> 'const Timestamp' <NoOp>
|           `-CallExpr 0x556663155ef0 <col:21, col:46> 'Timestamp'
|             `-ImplicitCastExpr 0x556663155ed8 <col:21, col:32> 'Timestamp (*)()' <FunctionToPointerDecay>
|               `-DeclRefExpr 0x556663155ea8 <col:21, col:32> 'Timestamp ()' lvalue CXXMethod 0x556662f2b8c0 'recent_steady' 'Timestamp ()'
|-CXXMethodDecl 0x5566630a2940 <line:233:5, col:47> col:10 used schedule_after 'void (const Timestamp &)'
| `-ParmVarDecl 0x5566630a28b0 <col:25, col:42> col:42 delta 'const Timestamp &'
|-CXXMethodDecl 0x5566630a2a88 <line:239:5, line:241:5> line:239:17 used schedule_after_sec 'void (uint32_t)' inline
| |-ParmVarDecl 0x5566630a29f8 <col:36, col:45> col:45 used delta_sec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x556663156108 <col:56, line:241:5>
|   `-ExprWithCleanups 0x5566631560f0 <line:240:2, col:40> 'void'
|     `-CXXMemberCallExpr 0x556663156098 <col:2, col:40> 'void'
|       |-MemberExpr 0x556663155fa8 <col:2> '<bound member function type>' ->schedule_after 0x5566630a2940
|       | `-CXXThisExpr 0x556663155f98 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x5566631560d8 <col:17, col:39> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x5566631560c0 <col:17, col:39> 'const Timestamp' <NoOp>
|           `-CXXTemporaryObjectExpr 0x556663156058 <col:17, col:39> 'Timestamp' 'void (unsigned int, uint32_t)'
|             |-ImplicitCastExpr 0x556663156028 <col:27> 'uint32_t':'unsigned int' <LValueToRValue>
|             | `-DeclRefExpr 0x556663155fe8 <col:27> 'uint32_t':'unsigned int' lvalue ParmVar 0x5566630a29f8 'delta_sec' 'uint32_t':'unsigned int'
|             `-ImplicitCastExpr 0x556663156040 <col:38> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x556663156008 <col:38> 'int' 0
|-CXXMethodDecl 0x5566630a2bd0 <line:247:5, line:249:5> line:247:17 used schedule_after_msec 'void (uint32_t)' inline
| |-ParmVarDecl 0x5566630a2b40 <col:37, col:46> col:46 used delta_msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x556663156378 <col:58, line:249:5>
|   `-ExprWithCleanups 0x556663156360 <line:248:2, col:49> 'void'
|     `-CXXMemberCallExpr 0x556663156308 <col:2, col:49> 'void'
|       |-MemberExpr 0x556663156130 <col:2> '<bound member function type>' ->schedule_after 0x5566630a2940
|       | `-CXXThisExpr 0x556663156120 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x556663156348 <col:17, col:48> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x556663156330 <col:17, col:48> 'const Timestamp' <NoOp>
|           `-CallExpr 0x5566631562b0 <col:17, col:48> 'Timestamp'
|             |-ImplicitCastExpr 0x556663156298 <col:17, col:28> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x556663156208 <col:17, col:28> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x5566630b0668 'make_msec' 'Timestamp (Timestamp::value_type)'
|             `-ImplicitCastExpr 0x5566631562f0 <col:38> 'Timestamp::value_type':'long' <IntegralCast>
|               `-ImplicitCastExpr 0x5566631562d8 <col:38> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x5566631561e8 <col:38> 'uint32_t':'unsigned int' lvalue ParmVar 0x5566630a2b40 'delta_msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5566630a2d18 <line:259:5, line:261:5> line:259:17 reschedule_after 'void (const Timestamp &)' inline
| |-ParmVarDecl 0x5566630a2c88 <col:34, col:51> col:51 used delta 'const Timestamp &'
| `-CompoundStmt 0x556663156558 <col:58, line:261:5>
|   `-ExprWithCleanups 0x556663156540 <line:260:2, col:38> 'void'
|     `-CXXMemberCallExpr 0x5566631564e8 <col:2, col:38> 'void'
|       |-MemberExpr 0x5566631563a0 <col:2> '<bound member function type>' ->schedule_at_steady 0x5566630a2360
|       | `-CXXThisExpr 0x556663156390 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x556663156528 <col:21, col:33> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x556663156510 <col:21, col:33> 'const Timestamp' <NoOp>
|           `-CXXOperatorCallExpr 0x5566631564b0 <col:21, col:33> 'Timestamp'
|             |-ImplicitCastExpr 0x556663156498 <col:31> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x556663156478 <col:31> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x5566630dcd10 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|             |-CXXConstructExpr 0x556663156448 <col:21> 'Timestamp' 'void (const Timestamp &) noexcept'
|             | `-ImplicitCastExpr 0x556663156430 <col:21> 'const Timestamp' lvalue <NoOp>
|             |   `-MemberExpr 0x5566631563e0 <col:21> 'Timestamp' lvalue ->_expiry_s 0x5566630a3b78
|             |     `-CXXThisExpr 0x5566631563d0 <col:21> 'Timer *' implicit this
|             `-DeclRefExpr 0x556663156410 <col:33> 'const Timestamp' lvalue ParmVar 0x5566630a2c88 'delta' 'const Timestamp &'
|-CXXMethodDecl 0x5566630a2e60 <line:268:5, line:270:5> line:268:17 used reschedule_after_sec 'void (uint32_t)' inline
| |-ParmVarDecl 0x5566630a2dd0 <col:38, col:47> col:47 used delta_sec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x556663156830 <col:58, line:270:5>
|   `-ExprWithCleanups 0x556663156818 <line:269:2, col:79> 'void'
|     `-CXXMemberCallExpr 0x5566631567c0 <col:2, col:79> 'void'
|       |-MemberExpr 0x556663156580 <col:2> '<bound member function type>' ->schedule_at_steady 0x5566630a2360
|       | `-CXXThisExpr 0x556663156570 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x556663156800 <col:21, col:78> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x5566631567e8 <col:21, col:78> 'const Timestamp' <NoOp>
|           `-CXXTemporaryObjectExpr 0x556663156780 <col:21, col:78> 'Timestamp' 'void (unsigned int, uint32_t)'
|             |-BinaryOperator 0x5566631566b8 <col:31, col:49> 'unsigned int' '+'
|             | |-ImplicitCastExpr 0x5566631566a0 <col:31, col:45> 'unsigned int' <IntegralCast>
|             | | `-CXXMemberCallExpr 0x556663156630 <col:31, col:45> 'Timestamp::seconds_type':'int'
|             | |   `-MemberExpr 0x556663156600 <col:31, col:41> '<bound member function type>' .sec 0x556662f2d3b8
|             | |     `-ImplicitCastExpr 0x556663156650 <col:31> 'const Timestamp' lvalue <NoOp>
|             | |       `-MemberExpr 0x5566631565d0 <col:31> 'Timestamp' lvalue ->_expiry_s 0x5566630a3b78
|             | |         `-CXXThisExpr 0x5566631565c0 <col:31> 'Timer *' implicit this
|             | `-ImplicitCastExpr 0x556663156688 <col:49> 'uint32_t':'unsigned int' <LValueToRValue>
|             |   `-DeclRefExpr 0x556663156668 <col:49> 'uint32_t':'unsigned int' lvalue ParmVar 0x5566630a2dd0 'delta_sec' 'uint32_t':'unsigned int'
|             `-CXXMemberCallExpr 0x556663156748 <col:60, col:77> 'uint32_t':'unsigned int'
|               `-MemberExpr 0x556663156718 <col:60, col:70> '<bound member function type>' .subsec 0x556662f2dab0
|                 `-ImplicitCastExpr 0x556663156768 <col:60> 'const Timestamp' lvalue <NoOp>
|                   `-MemberExpr 0x5566631566e8 <col:60> 'Timestamp' lvalue ->_expiry_s 0x5566630a3b78
|                     `-CXXThisExpr 0x5566631566d8 <col:60> 'Timer *' implicit this
|-CXXMethodDecl 0x5566630a2fa8 <line:277:5, line:279:5> line:277:17 used reschedule_after_msec 'void (uint32_t)' inline
| |-ParmVarDecl 0x5566630a2f18 <col:39, col:48> col:48 used delta_msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x556663156b68 <col:60, line:279:5>
|   `-ExprWithCleanups 0x556663156b50 <line:278:2, col:65> 'void'
|     `-CXXMemberCallExpr 0x556663156af8 <col:2, col:65> 'void'
|       |-MemberExpr 0x556663156858 <col:2> '<bound member function type>' ->schedule_at_steady 0x5566630a2360
|       | `-CXXThisExpr 0x556663156848 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x556663156b38 <col:21, col:64> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x556663156b20 <col:21, col:64> 'const Timestamp' <NoOp>
|           `-CXXOperatorCallExpr 0x556663156ac0 <col:21, col:64> 'Timestamp'
|             |-ImplicitCastExpr 0x556663156aa8 <col:31> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x556663156a88 <col:31> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x5566630dcd10 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|             |-CXXConstructExpr 0x556663156a28 <col:21> 'Timestamp' 'void (const Timestamp &) noexcept'
|             | `-ImplicitCastExpr 0x556663156a10 <col:21> 'const Timestamp' lvalue <NoOp>
|             |   `-MemberExpr 0x556663156898 <col:21> 'Timestamp' lvalue ->_expiry_s 0x5566630a3b78
|             |     `-CXXThisExpr 0x556663156888 <col:21> 'Timer *' implicit this
|             `-MaterializeTemporaryExpr 0x556663156a70 <col:33, col:64> 'const Timestamp' lvalue
|               `-ImplicitCastExpr 0x556663156a58 <col:33, col:64> 'const Timestamp' <NoOp>
|                 `-CallExpr 0x5566631569b8 <col:33, col:64> 'Timestamp'
|                   |-ImplicitCastExpr 0x5566631569a0 <col:33, col:44> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|                   | `-DeclRefExpr 0x556663156970 <col:33, col:44> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x5566630b0668 'make_msec' 'Timestamp (Timestamp::value_type)'
|                   `-ImplicitCastExpr 0x5566631569f8 <col:54> 'Timestamp::value_type':'long' <IntegralCast>
|                     `-ImplicitCastExpr 0x5566631569e0 <col:54> 'uint32_t':'unsigned int' <LValueToRValue>
|                       `-DeclRefExpr 0x556663156950 <col:54> 'uint32_t':'unsigned int' lvalue ParmVar 0x5566630a2f18 'delta_msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5566630a3070 <line:285:5, col:21> col:10 used unschedule 'void ()'
|-CXXMethodDecl 0x5566630a3130 <line:288:5, line:291:5> line:288:17 clear 'void ()' inline
| `-CompoundStmt 0x556663157030 <col:25, line:291:5>
|   |-CXXMemberCallExpr 0x556663156bc0 <line:289:2, col:13> 'void'
|   | `-MemberExpr 0x556663156b90 <col:2> '<bound member function type>' ->unschedule 0x5566630a3070
|   |   `-CXXThisExpr 0x556663156b80 <col:2> 'Timer *' implicit this
|   `-ExprWithCleanups 0x556663157018 <line:290:2, col:24> 'Timestamp' lvalue
|     `-CXXOperatorCallExpr 0x556663156fe0 <col:2, col:24> 'Timestamp' lvalue
|       |-ImplicitCastExpr 0x556663156fc8 <col:12> 'Timestamp &(*)(Timestamp &&) noexcept' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x556663156c78 <col:12> 'Timestamp &(Timestamp &&) noexcept' lvalue CXXMethod 0x556662dc4958 'operator=' 'Timestamp &(Timestamp &&) noexcept'
|       |-MemberExpr 0x556663156bf0 <col:2> 'Timestamp' lvalue ->_expiry_s 0x5566630a3b78
|       | `-CXXThisExpr 0x556663156be0 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x556663156c60 <col:14, col:24> 'Timestamp' xvalue
|         `-CXXTemporaryObjectExpr 0x556663156c30 <col:14, col:24> 'Timestamp' 'void ()'
|-CXXMethodDecl 0x5566630a31f0 <line:304:5, line:310:5> line:304:29 used adjustment 'Timestamp ()' static inline
| `-CompoundStmt 0x556663157388 <col:42, line:310:5>
|   |-IfStmt 0x5566631571d0 <line:306:2, line:307:23>
|   | |-CallExpr 0x556663157100 <line:306:6, col:30> 'bool'
|   | | `-ImplicitCastExpr 0x5566631570e8 <col:6, col:17> 'bool (*)()' <FunctionToPointerDecay>
|   | |   `-DeclRefExpr 0x556663157088 <col:6, col:17> 'bool ()' lvalue CXXMethod 0x5566630ce7e0 'warp_jumping' 'bool ()'
|   | `-ReturnStmt 0x5566631571c0 <line:307:6, col:23>
|   |   `-ExprWithCleanups 0x5566631571a8 <col:13, col:23> 'Timestamp'
|   |     `-CXXConstructExpr 0x556663157178 <col:13, col:23> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x556663157160 <col:13, col:23> 'Timestamp' xvalue
|   |         `-CXXTemporaryObjectExpr 0x556663157130 <col:13, col:23> 'Timestamp' 'void ()'
|   `-ReturnStmt 0x556663157378 <line:309:2, col:33>
|     `-ExprWithCleanups 0x556663157360 <col:9, col:33> 'Timestamp'
|       `-CXXConstructExpr 0x556663157330 <col:9, col:33> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x556663157318 <col:9, col:33> 'Timestamp' xvalue
|           `-CallExpr 0x5566631572d8 <col:9, col:33> 'Timestamp'
|             |-ImplicitCastExpr 0x5566631572c0 <col:9, col:20> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x556663157290 <col:9, col:20> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x5566630b0980 'make_usec' 'Timestamp (Timestamp::value_type)'
|             `-ImplicitCastExpr 0x556663157300 <col:30> 'Timestamp::value_type':'long' <IntegralCast>
|               `-IntegerLiteral 0x556663157270 <col:30> 'int' 500
|-CXXMethodDecl 0x5566630a3330 <line:317:5, col:80> col:17 schedule_after_s 'void (uint32_t)' inline
| |-ParmVarDecl 0x5566630a32a0 <col:34, col:43> col:43 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x5566630a33d8 <col:69> "" ""
|-CXXMethodDecl 0x5566630a34e8 <line:323:5, col:81> col:17 schedule_after_ms 'void (uint32_t)' inline
| |-ParmVarDecl 0x5566630a3458 <col:35, col:44> col:44 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x5566630a3590 <col:70> "" ""
|-CXXMethodDecl 0x5566630a36a0 <line:329:5, col:82> col:17 reschedule_after_s 'void (uint32_t)' inline
| |-ParmVarDecl 0x5566630a3610 <col:36, col:45> col:45 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x5566630a3748 <col:71> "" ""
|-CXXMethodDecl 0x5566630a3858 <line:335:5, col:83> col:17 reschedule_after_ms 'void (uint32_t)' inline
| |-ParmVarDecl 0x5566630a37c8 <col:37, col:46> col:46 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x5566630a3900 <col:72> "" ""
|-EnumDecl 0x5566630a3970 <line:337:5, col:27> col:5
| `-EnumConstantDecl 0x5566630a3a70 <col:12, col:25> col:12 behind_sec 'Timer::(anonymous enum at ../dummy_inc/click/timer.hh:337:5)'
|   `-ImplicitCastExpr 0x5566630a3ac0 <col:25> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5566630a3a50 <col:25> 'int' Int: 1
|       `-IntegerLiteral 0x5566630a3a30 <col:25> 'int' 1
|-AccessSpecDecl 0x5566630a3ad8 <line:339:3, col:10> col:3 private
|-FieldDecl 0x5566630a3b18 <line:341:5, col:9> col:9 referenced _schedpos1 'int'
|-FieldDecl 0x5566630a3b78 <line:342:5, col:15> col:15 referenced _expiry_s 'Timestamp'
|-CXXRecordDecl 0x5566630a3bc8 <line:343:5, line:345:5> line:343:5 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x5566630a3cf8 <line:344:2, col:16> col:16 referenced callback 'TimerCallback':'void (*)(Timer *, void *)'
| `-CXXDestructorDecl 0x5566630a47e8 <line:343:5> col:5 implicit ~ 'void () noexcept' inline default trivial
|-FieldDecl 0x5566630a3db8 <col:5, line:345:7> col:7 referenced _hook 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)'
|-FieldDecl 0x5566630a3e38 <line:346:5, col:11> col:11 referenced _thunk 'void *'
|-FieldDecl 0x5566630a3e98 <line:347:5, col:14> col:14 referenced _owner 'Element *'
|-FieldDecl 0x5566630a3ef8 <line:348:5, col:19> col:19 referenced _thread 'RouterThread *'
|-CXXMethodDecl 0x5566630a4048 <line:350:5, col:36> col:12 operator= 'Timer &(const Timer &)'
| `-ParmVarDecl 0x5566630a3f58 <col:22, col:35> col:35 x 'const Timer &'
|-CXXMethodDecl 0x5566630a4218 <line:352:5, col:58> col:17 used do_nothing_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x5566630a4100 <col:33, col:40> col:40 t 'Timer *'
| `-ParmVarDecl 0x5566630a4180 <col:43, col:49> col:49 user_data 'void *'
|-CXXMethodDecl 0x5566630a43f0 <line:353:5, col:55> col:17 used element_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x5566630a42d8 <col:30, col:37> col:37 t 'Timer *'
| `-ParmVarDecl 0x5566630a4358 <col:40, col:46> col:46 user_data 'void *'
|-CXXMethodDecl 0x5566630a45c8 <line:354:5, col:52> col:17 used task_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x5566630a44b0 <col:27, col:34> col:34 t 'Timer *'
| `-ParmVarDecl 0x5566630a4530 <col:37, col:43> col:43 user_data 'void *'
`-FriendDecl 0x5566630a4798 <line:356:5, col:18> col:12 'class TimerSet':'TimerSet'

Layout: <CGRecordLayout
  LLVMType:%class.Timer = type { i32, %class.Timestamp, %union.anon, i8*, %class.Element*, %class.RouterThread* }
  NonVirtualBaseLLVMType:%class.Timer = type { i32, %class.Timestamp, %union.anon, i8*, %class.Element*, %class.RouterThread* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct char_array<16>
         0 |   char [16] x
           | [sizeof=16, dsize=16, align=1,
           |  nvsize=16, nvalign=1]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55666315c110 <../dummy_inc/click/type_traits.hh:165:1, line:167:1> line:165:28 struct char_array definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-TemplateArgument integral 16
|-PackedAttr 0x55666330cc98 <line:167:18>
|-CXXRecordDecl 0x55666330cd58 prev 0x55666315c110 <line:165:21, col:28> col:28 implicit struct char_array
`-FieldDecl 0x55666330ce68 <line:166:5, col:13> col:10 x 'char [16]'

Layout: <CGRecordLayout
  LLVMType:%struct.char_array = type { [16 x i8] }
  NonVirtualBaseLLVMType:%struct.char_array = type { [16 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class Notifier
         0 |   (Notifier vtable pointer)
         8 |   class NotifierSignal _signal
         8 |     union NotifierSignal::vmvalue _v
         8 |       class atomic_uint32_t * v1
         8 |       struct NotifierSignal::vmpair * vm
        16 |     uint32_t _mask
        24 |   enum Notifier::SearchOp _search_op
           | [sizeof=32, dsize=28, align=8,
           |  nvsize=28, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5566631d7198 <../dummy_inc/click/notifier.hh:73:1, line:130:1> line:73:7 referenced class Notifier definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-CXXRecordDecl 0x5566631d72b8 <col:1, col:7> col:7 implicit referenced class Notifier
|-AccessSpecDecl 0x5566631d7348 <col:18, col:24> col:18 public
|-EnumDecl 0x5566631d7370 <line:75:5, col:76> col:10 referenced SearchOp
| |-EnumConstantDecl 0x5566631d7470 <col:21, col:35> col:21 referenced SEARCH_STOP 'Notifier::SearchOp'
| | `-ImplicitCastExpr 0x5566631d7560 <col:35> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5566631d7450 <col:35> 'int' Int: 0
| |     `-IntegerLiteral 0x5566631d7430 <col:35> 'int' 0
| |-EnumConstantDecl 0x5566631d74c0 <col:38> col:38 SEARCH_CONTINUE 'Notifier::SearchOp'
| `-EnumConstantDecl 0x5566631d7510 <col:55> col:55 SEARCH_CONTINUE_WAKE 'Notifier::SearchOp'
|-TypedefDecl 0x5566631d77a8 <line:76:5, col:53> col:20 referenced callback_type 'void (*)(void *, Notifier *)'
| `-PointerType 0x5566631d7740 'void (*)(void *, Notifier *)'
|   `-ParenType 0x5566631d76e0 'void (void *, Notifier *)' sugar
|     `-FunctionProtoType 0x5566631d76a0 'void (void *, Notifier *)' cdecl
|       |-BuiltinType 0x556662bb72d0 'void'
|       |-PointerType 0x556662bb7ad0 'void *'
|       | `-BuiltinType 0x556662bb72d0 'void'
|       `-PointerType 0x5566631d7600 'Notifier *'
|         `-RecordType 0x5566631d7230 'Notifier'
|           `-CXXRecord 0x5566631d7198 'Notifier'
|-CXXConstructorDecl 0x5566631d78e8 <line:78:5, col:46> col:12 Notifier 'void (Notifier::SearchOp)' inline
| `-ParmVarDecl 0x5566631d7810 <col:21, col:35> col:30 op 'Notifier::SearchOp' cinit
|   `-DeclRefExpr 0x5566631dc688 <col:35> 'Notifier::SearchOp' EnumConstant 0x5566631d7470 'SEARCH_STOP' 'Notifier::SearchOp'
|-CXXConstructorDecl 0x5566631d7af8 <line:79:5, col:76> col:12 Notifier 'void (const NotifierSignal &, Notifier::SearchOp)' inline
| |-ParmVarDecl 0x5566631d79a8 <col:21, col:43> col:43 signal 'const NotifierSignal &'
| `-ParmVarDecl 0x5566631d7a20 <col:51, col:65> col:60 op 'Notifier::SearchOp' cinit
|   `-DeclRefExpr 0x5566631dc6a8 <col:65> 'Notifier::SearchOp' EnumConstant 0x5566631d7470 'SEARCH_STOP' 'Notifier::SearchOp'
|-CXXDestructorDecl 0x5566631d7bf8 <line:80:5, col:23> col:13 ~Notifier 'void () noexcept' virtual
|-CXXMethodDecl 0x5566631d7d28 <line:83:5, line:85:5> line:83:17 initialized 'bool () const' inline
| `-CompoundStmt 0x5566631dc768 <col:37, line:85:5>
|   `-ReturnStmt 0x5566631dc758 <line:84:2, col:29>
|     `-CXXMemberCallExpr 0x5566631dc738 <col:9, col:29> 'bool'
|       `-MemberExpr 0x5566631dc708 <col:9, col:17> '<bound member function type>' .initialized 0x5566631d5430
|         `-MemberExpr 0x5566631dc6d8 <col:9> 'const NotifierSignal' lvalue ->_signal 0x5566631dc0a8
|           `-CXXThisExpr 0x5566631dc6c8 <col:9> 'const Notifier *' implicit this
|-CXXMethodDecl 0x5566631d7f30 <line:87:5, col:52> col:9 initialize 'int (const char *, Router *)'
| |-ParmVarDecl 0x5566631d7de0 <col:20, col:32> col:32 name 'const char *'
| `-ParmVarDecl 0x5566631d7e58 <col:38, col:46> col:46 router 'Router *'
|-CXXMethodDecl 0x5566631d8028 <line:89:5, col:43> col:34 signal 'const NotifierSignal &() const' inline
|-CXXMethodDecl 0x5566631d8118 <line:90:5, col:33> col:21 search_op 'Notifier::SearchOp () const' inline
|-CXXMethodDecl 0x5566631d81d8 <line:92:5, col:26> col:17 active 'bool () const' inline
|-CXXMethodDecl 0x5566631d8318 <line:94:5, col:39> col:17 used set_active 'bool (bool)' inline
| `-ParmVarDecl 0x5566631d8288 <col:28, col:33> col:33 active 'bool'
|-CXXMethodDecl 0x5566631d83e0 <line:95:5, col:22> col:17 wake 'void ()' inline
|-CXXMethodDecl 0x5566631d92b0 <line:96:5, col:23> col:17 sleep 'void ()' inline
|-CXXMethodDecl 0x5566631d9520 <line:98:5, col:71> col:17 used add_activate_callback 'int (Notifier::callback_type, void *)' virtual
| |-ParmVarDecl 0x5566631d9380 <col:39, col:53> col:53 f 'Notifier::callback_type':'void (*)(void *, Notifier *)'
| `-ParmVarDecl 0x5566631d9400 <col:56, col:62> col:62 user_data 'void *'
|-CXXMethodDecl 0x5566631d9778 <line:99:5, col:75> col:18 used remove_activate_callback 'void (Notifier::callback_type, void *)' virtual
| |-ParmVarDecl 0x5566631d95e0 <col:43, col:57> col:57 f 'Notifier::callback_type':'void (*)(void *, Notifier *)'
| `-ParmVarDecl 0x5566631d9660 <col:60, col:66> col:66 user_data 'void *'
|-CXXMethodDecl 0x5566631d9900 <line:100:5, col:39> col:16 add_listener 'int (Task *)' inline
| `-ParmVarDecl 0x5566631d9838 <col:29, col:35> col:35 task 'Task *'
|-CXXMethodDecl 0x5566631d9a48 <line:101:5, col:43> col:17 remove_listener 'void (Task *)' inline
| `-ParmVarDecl 0x5566631d99b8 <col:33, col:39> col:39 task 'Task *'
|-CXXMethodDecl 0x5566631d9bd0 <line:102:5, col:59> col:16 add_dependent_signal 'int (NotifierSignal *)' inline
| `-ParmVarDecl 0x5566631d9b00 <col:37, col:53> col:53 signal 'NotifierSignal *'
|-CXXMethodDecl 0x5566631d9d48 <line:103:5, col:63> col:17 remove_dependent_signal 'void (NotifierSignal *)' inline
| `-ParmVarDecl 0x5566631d9c88 <col:41, col:57> col:57 signal 'NotifierSignal *'
|-VarDecl 0x5566631d9e10 <line:105:5, col:38> col:23 EMPTY_NOTIFIER 'const char []' static
|-VarDecl 0x5566631d9e98 <line:106:5, col:37> col:23 FULL_NOTIFIER 'const char []' static
|-CXXMethodDecl 0x5566631da068 <line:108:5, col:76> col:34 used upstream_empty_signal 'NotifierSignal (Element *, int)' static inline
| |-ParmVarDecl 0x5566631d9f10 <col:56, col:65> col:65 e 'Element *'
| `-ParmVarDecl 0x5566631d9f90 <col:68, col:72> col:72 port 'int'
|-CXXMethodDecl 0x5566631da308 <line:109:5, col:88> col:34 upstream_empty_signal 'NotifierSignal (Element *, int, Task *)' static inline
| |-ParmVarDecl 0x5566631da128 <col:56, col:65> col:65 e 'Element *'
| |-ParmVarDecl 0x5566631da1a8 <col:68, col:72> col:72 port 'int'
| `-ParmVarDecl 0x5566631da220 <col:78, col:84> col:84 task 'Task *'
|-CXXMethodDecl 0x5566631da5a8 <line:110:5, col:106> col:34 used upstream_empty_signal 'NotifierSignal (Element *, int, Notifier *)' static inline
| |-ParmVarDecl 0x5566631da3d0 <col:56, col:65> col:65 e 'Element *'
| |-ParmVarDecl 0x5566631da450 <col:68, col:72> col:72 port 'int'
| `-ParmVarDecl 0x5566631da4c8 <col:78, col:88> col:88 dependent_notifier 'Notifier *'
|-CXXMethodDecl 0x5566631da928 <line:111:5, col:103> col:27 used upstream_empty_signal 'NotifierSignal (Element *, int, Notifier::callback_type, void *)' static
| |-ParmVarDecl 0x5566631da670 <col:49, col:58> col:58 e 'Element *'
| |-ParmVarDecl 0x5566631da6f0 <col:61, col:65> col:65 port 'int'
| |-ParmVarDecl 0x5566631da768 <col:71, col:85> col:85 f 'Notifier::callback_type':'void (*)(void *, Notifier *)'
| `-ParmVarDecl 0x5566631da7e8 <col:88, col:94> col:94 user_data 'void *'
|-CXXMethodDecl 0x5566631dab10 <line:113:5, col:77> col:34 used downstream_full_signal 'NotifierSignal (Element *, int)' static inline
| |-ParmVarDecl 0x5566631da9f8 <col:57, col:66> col:66 e 'Element *'
| `-ParmVarDecl 0x5566631daa78 <col:69, col:73> col:73 port 'int'
|-CXXMethodDecl 0x5566631dad68 <line:114:5, col:89> col:34 downstream_full_signal 'NotifierSignal (Element *, int, Task *)' static inline
| |-ParmVarDecl 0x5566631dabd0 <col:57, col:66> col:66 e 'Element *'
| |-ParmVarDecl 0x5566631dac50 <col:69, col:73> col:73 port 'int'
| `-ParmVarDecl 0x5566631dacc8 <col:79, col:85> col:85 task 'Task *'
|-CXXMethodDecl 0x5566631dafc8 <line:115:5, col:107> col:34 used downstream_full_signal 'NotifierSignal (Element *, int, Notifier *)' static inline
| |-ParmVarDecl 0x5566631dae30 <col:57, col:66> col:66 e 'Element *'
| |-ParmVarDecl 0x5566631daeb0 <col:69, col:73> col:73 port 'int'
| `-ParmVarDecl 0x5566631daf28 <col:79, col:89> col:89 dependent_notifier 'Notifier *'
|-CXXMethodDecl 0x5566631db2b0 <line:116:5, col:104> col:27 used downstream_full_signal 'NotifierSignal (Element *, int, Notifier::callback_type, void *)' static
| |-ParmVarDecl 0x5566631db090 <col:50, col:59> col:59 e 'Element *'
| |-ParmVarDecl 0x5566631db110 <col:62, col:66> col:66 port 'int'
| |-ParmVarDecl 0x5566631db188 <col:72, col:86> col:86 f 'Notifier::callback_type':'void (*)(void *, Notifier *)'
| `-ParmVarDecl 0x5566631db208 <col:89, col:95> col:95 user_data 'void *'
|-CXXMethodDecl 0x5566631db568 <line:118:5, col:109> col:34 upstream_empty_signal 'NotifierSignal (Element *, int, int)' static inline
| |-ParmVarDecl 0x5566631db380 <col:56, col:65> col:65 e 'Element *'
| |-ParmVarDecl 0x5566631db400 <col:68, col:72> col:72 port 'int'
| |-ParmVarDecl 0x5566631db480 <col:78> col:81 'int'
| `-DeprecatedAttr 0x5566631db620 <col:98> "" ""
|-CXXMethodDecl 0x5566631db908 <line:119:5, col:121> col:34 upstream_empty_signal 'NotifierSignal (Element *, int, int, Notifier *)' static inline
| |-ParmVarDecl 0x5566631db6a0 <col:56, col:65> col:65 e 'Element *'
| |-ParmVarDecl 0x5566631db720 <col:68, col:72> col:72 port 'int'
| |-ParmVarDecl 0x5566631db7a0 <col:78> col:81 'int'
| |-ParmVarDecl 0x5566631db818 <col:83, col:92> col:93 'Notifier *'
| `-DeprecatedAttr 0x5566631db9c8 <col:110> "" ""
|-CXXMethodDecl 0x5566631dbbe8 <line:120:5, col:110> col:34 downstream_full_signal 'NotifierSignal (Element *, int, int)' static inline
| |-ParmVarDecl 0x5566631dba48 <col:57, col:66> col:66 e 'Element *'
| |-ParmVarDecl 0x5566631dbac8 <col:69, col:73> col:73 port 'int'
| |-ParmVarDecl 0x5566631dbb48 <col:79> col:82 'int'
| `-DeprecatedAttr 0x5566631dbca0 <col:99> "" ""
|-CXXMethodDecl 0x5566631dbf40 <line:121:5, col:122> col:34 downstream_full_signal 'NotifierSignal (Element *, int, int, Notifier *)' static inline
| |-ParmVarDecl 0x5566631dbd20 <col:57, col:66> col:66 e 'Element *'
| |-ParmVarDecl 0x5566631dbda0 <col:69, col:73> col:73 port 'int'
| |-ParmVarDecl 0x5566631dbe20 <col:79> col:82 'int'
| |-ParmVarDecl 0x5566631dbe98 <col:84, col:93> col:94 'Notifier *'
| `-DeprecatedAttr 0x5566631dc000 <col:111> "" ""
|-AccessSpecDecl 0x5566631dc070 <line:123:3, col:10> col:3 private
|-FieldDecl 0x5566631dc0a8 <line:125:5, col:20> col:20 referenced _signal 'NotifierSignal'
|-FieldDecl 0x5566631dc108 <line:126:5, col:14> col:14 referenced _search_op 'Notifier::SearchOp'
|-CXXMethodDecl 0x5566631dc280 <line:128:5, col:61> col:17 used dependent_signal_callback 'void (void *, Notifier *)' static
| |-ParmVarDecl 0x5566631dc170 <col:43, col:48> col:49 'void *'
| `-ParmVarDecl 0x5566631dc1e8 <col:51, col:60> col:61 'Notifier *'
|-CXXConstructorDecl 0x5566631dc358 <line:73:7> col:7 implicit Notifier 'void (const Notifier &)' inline default noexcept-unevaluated 0x5566631dc358
| `-ParmVarDecl 0x5566631dc468 <col:7> col:7 'const Notifier &'
`-CXXMethodDecl 0x5566631dc508 <col:7> col:7 implicit operator= 'Notifier &(const Notifier &)' inline default noexcept-unevaluated 0x5566631dc508
  `-ParmVarDecl 0x5566631dc618 <col:7> col:7 'const Notifier &'

Layout: <CGRecordLayout
  LLVMType:%class.Notifier = type <{ i32 (...)**, %class.NotifierSignal, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Notifier.base = type <{ i32 (...)**, %class.NotifierSignal, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>
