
*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17)
         0 |   unsigned long long __wseq
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_internal_list
         0 |   struct __pthread_internal_list * __prev
         8 |   struct __pthread_internal_list * __next
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_mutex_s
         0 |   int __lock
         4 |   unsigned int __count
         8 |   int __owner
        12 |   unsigned int __nusers
        16 |   int __kind
        20 |   short __spins
        22 |   short __elision
        24 |   struct __pthread_internal_list __list
        24 |     struct __pthread_internal_list * __prev
        32 |     struct __pthread_internal_list * __next
           | [sizeof=40, dsize=40, align=8,
           |  nvsize=40, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17)
         0 |   unsigned long long __g1_start
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s
         0 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17) 
         0 |     unsigned long long __wseq
         0 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |       unsigned int __low
         4 |       unsigned int __high
         8 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17) 
         8 |     unsigned long long __g1_start
         8 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         8 |       unsigned int __low
        12 |       unsigned int __high
        16 |   unsigned int [2] __g_refs
        24 |   unsigned int [2] __g_size
        32 |   unsigned int __g1_orig_size
        36 |   unsigned int __wrefs
        40 |   unsigned int [2] __g_signals
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_rwlock_arch_t
         0 |   unsigned int __readers
         4 |   unsigned int __writers
         8 |   unsigned int __wrphase_futex
        12 |   unsigned int __writers_futex
        16 |   unsigned int __pad3
        20 |   unsigned int __pad4
        24 |   int __cur_writer
        28 |   int __shared
        32 |   signed char __rwelision
        33 |   unsigned char [7] __pad1
        40 |   unsigned long __pad2
        48 |   unsigned int __flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | lldiv_t
         0 |   long long quot
         8 |   long long rem
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct msghdr
         0 |   void * msg_name
         8 |   socklen_t msg_namelen
        16 |   struct iovec * msg_iov
        24 |   size_t msg_iovlen
        32 |   void * msg_control
        40 |   size_t msg_controllen
        48 |   int msg_flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | struct in_addr
         0 |   in_addr_t s_addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5)
         0 |   uint8_t [16] __u6_addr8
         0 |   uint16_t [8] __u6_addr16
         0 |   uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr
         0 |   sa_family_t sa_family
         2 |   char [14] sa_data
           | [sizeof=16, dsize=16, align=2,
           |  nvsize=16, nvalign=2]

*** Dumping AST Record Layout
         0 | struct in6_addr
         0 |   union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         0 |     uint8_t [16] __u6_addr8
         0 |     uint16_t [8] __u6_addr16
         0 |     uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr_storage
         0 |   sa_family_t ss_family
         2 |   char [118] __ss_padding
       120 |   unsigned long __ss_align
           | [sizeof=128, dsize=128, align=8,
           |  nvsize=128, nvalign=8]

*** Dumping AST Record Layout
         0 | struct sockaddr_in6
         0 |   sa_family_t sin6_family
         2 |   in_port_t sin6_port
         4 |   uint32_t sin6_flowinfo
         8 |   struct in6_addr sin6_addr
         8 |     union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         8 |       uint8_t [16] __u6_addr8
         8 |       uint16_t [8] __u6_addr16
         8 |       uint32_t [4] __u6_addr32
        24 |   uint32_t sin6_scope_id
           | [sizeof=28, dsize=28, align=4,
           |  nvsize=28, nvalign=4]

*** Dumping AST Record Layout
         0 | struct timeval
         0 |   __time_t tv_sec
         8 |   __suseconds_t tv_usec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::memo_t
         0 |   volatile uint32_t refcount
         4 |   uint32_t capacity
         8 |   volatile uint32_t dirty
        12 |   char [8] real_data
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping AST Record Layout
         0 | class IPAddress
         0 |   uint32_t _addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Timestamp::rep_t
         0 |   int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timestamp
         0 |   union Timestamp::rep_t _t
         0 |     int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct timespec
         0 |   __time_t tv_sec
         8 |   __syscall_slong_t tv_nsec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element::Port
         0 |   class Element * _e
         8 |   int _port
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element
         0 |   (Element vtable pointer)
         8 |   class Element::Port *[2] _ports
        24 |   class Element::Port [4] _inline_ports
        88 |   int [2] _nports
        96 |   class Router * _router
       104 |   int _eindex
           | [sizeof=112, dsize=108, align=8,
           |  nvsize=108, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5615b8bb5848 prev 0x5615b8bacfe8 <../dummy_inc/click/element.hh:214:5, line:252:5> line:214:11 referenced class Port definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5615b8bb5940 <col:5, col:11> col:11 implicit referenced class Port
|-AccessSpecDecl 0x5615b8bb59d0 <col:18, col:24> col:18 public
|-CXXMethodDecl 0x5615b8bb5a48 <line:216:9, col:30> col:21 used active 'bool () const' inline
|-CXXMethodDecl 0x5615b8bb5b08 <line:217:9, col:35> col:25 element 'Element *() const' inline
|-CXXMethodDecl 0x5615b8bb5bd0 <line:218:9, col:27> col:20 port 'int () const' inline
|-CXXMethodDecl 0x5615b8bb5d48 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| |-ParmVarDecl 0x5615b8bb5c80 <col:54, col:62> col:62 p 'Packet *'
| |-NoInlineAttr 0x5615b8bb5df0 <col:24>
| `-OptimizeNoneAttr 0x5615b8bb5e48 <col:34>
|-CXXMethodDecl 0x5615b8bb5e90 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
|-CXXMethodDecl 0x5615b8bb6148 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| |-ParmVarDecl 0x5615b8bb5f40 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x5615b8bb5fb8 <col:43, col:52> col:52 e 'Element *'
| `-ParmVarDecl 0x5615b8bb6038 <col:55, col:59> col:59 port 'int'
|-AccessSpecDecl 0x5615b8bb6200 <line:229:7, col:14> col:7 private
|-FieldDecl 0x5615b8bb6238 <line:231:9, col:18> col:18 referenced _e 'Element *'
|-FieldDecl 0x5615b8bb62a0 <line:232:9, col:13> col:13 referenced _port 'int'
|-CXXConstructorDecl 0x5615b8bb6328 <line:247:9, col:21> col:16 Port 'void ()' inline
|-CXXMethodDecl 0x5615b8bb6648 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| |-ParmVarDecl 0x5615b8bb63e0 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x5615b8bb6458 <col:43, col:52> col:52 owner 'Element *'
| |-ParmVarDecl 0x5615b8bb64d0 <col:59, col:68> col:68 e 'Element *'
| `-ParmVarDecl 0x5615b8bb6550 <col:71, col:75> col:75 port 'int'
|-FriendDecl 0x5615b8bb6760 <line:250:9, col:22> col:16 'class Element':'Element'
|-CXXConstructorDecl 0x5615b8bbe0d8 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x5615b8bbe0d8
| `-ParmVarDecl 0x5615b8bbe1e8 <col:11> col:11 'const Element::Port &'
|-CXXConstructorDecl 0x5615b8bbe288 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x5615b8bbe288
| `-ParmVarDecl 0x5615b8bbe398 <col:11> col:11 'Element::Port &&'
`-CXXDestructorDecl 0x5615b8bc2808 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"class.Element::Port" = type <{ %class.Element*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%"class.Element::Port.base" = type <{ %class.Element*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5615b8ba8860 prev 0x5615b8ba85e0 <../dummy_inc/click/element.hh:29:1, line:319:1> line:29:7 referenced class Element definition
|-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x5615b8ba8958 <col:1, col:7> col:7 implicit referenced class Element
|-AccessSpecDecl 0x5615b8ba89e8 <col:17, col:23> col:17 public
|-CXXConstructorDecl 0x5615b8ba8a48 <line:31:5, col:13> col:5 used Element 'void ()'
|-CXXDestructorDecl 0x5615b8ba8b38 <line:32:5, col:22> col:13 used ~Element 'void () noexcept' virtual
|-VarDecl 0x5615b8ba8c38 <line:33:5, col:16> col:16 nelements_allocated 'int' static
|-CXXMethodDecl 0x5615b8ba8e08 <line:36:5, col:42> col:18 used push 'void (int, Packet *)' virtual
| |-ParmVarDecl 0x5615b8ba8cb8 <col:23, col:27> col:27 port 'int'
| `-ParmVarDecl 0x5615b8ba8d30 <col:33, col:41> col:41 p 'Packet *'
|-CXXMethodDecl 0x5615b8ba8f98 <line:37:5, col:70> col:21 used pull 'Packet *(int)' virtual
| |-ParmVarDecl 0x5615b8ba8ed0 <col:26, col:30> col:30 port 'int'
| `-WarnUnusedResultAttr 0x5615b8ba9040 <col:51> warn_unused_result ""
|-CXXMethodDecl 0x5615b8ba9178 <line:38:5, col:44> col:21 simple_action 'Packet *(Packet *)' virtual
| `-ParmVarDecl 0x5615b8ba90b0 <col:35, col:43> col:43 p 'Packet *'
|-CXXMethodDecl 0x5615b8ba9318 <line:40:5, col:37> col:18 run_task 'bool (Task *)' virtual
| `-ParmVarDecl 0x5615b8ba9258 <col:27, col:33> col:33 task 'Task *'
|-CXXMethodDecl 0x5615b8ba94b8 <line:41:5, col:40> col:18 run_timer 'void (Timer *)' virtual
| `-ParmVarDecl 0x5615b8ba93f8 <col:28, col:35> col:35 timer 'Timer *'
|-EnumDecl 0x5615b8ba9560 <line:43:5, col:46> col:5
| |-EnumConstantDecl 0x5615b8ba9660 <col:12, col:26> col:12 SELECT_READ 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
| | `-ImplicitCastExpr 0x5615b8ba9740 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5615b8ba9640 <col:26> 'int' Int: 1
| |     `-IntegerLiteral 0x5615b8ba9620 <col:26> 'int' 1
| `-EnumConstantDecl 0x5615b8ba96f0 <col:29, col:44> col:29 SELECT_WRITE 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
|   `-ImplicitCastExpr 0x5615b8ba9758 <col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5615b8ba96d0 <col:44> 'int' Int: 2
|       `-IntegerLiteral 0x5615b8ba96b0 <col:44> 'int' 2
|-CXXMethodDecl 0x5615b8ba98a0 <line:44:5, col:43> col:18 selected 'void (int, int)' virtual
| |-ParmVarDecl 0x5615b8ba9788 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x5615b8ba9808 <col:35, col:39> col:39 mask 'int'
|-CXXMethodDecl 0x5615b8ba99f8 <line:45:5, col:33> col:18 selected 'void (int)' virtual
| `-ParmVarDecl 0x5615b8ba9968 <col:27, col:31> col:31 fd 'int'
|-CXXMethodDecl 0x5615b8ba9c38 <line:48:5, col:86> col:45 checked_output_push 'void (int, Packet *) const'
| |-ParmVarDecl 0x5615b8ba9ab8 <col:65, col:69> col:69 port 'int'
| |-ParmVarDecl 0x5615b8ba9b30 <col:75, col:83> col:83 p 'Packet *'
| |-NoInlineAttr 0x5615b8ba9ce8 <col:20>
| `-OptimizeNoneAttr 0x5615b8ba9d40 <col:30>
|-CXXMethodDecl 0x5615b8ba9e48 <line:49:5, col:77> col:48 checked_input_pull 'Packet *(int) const'
| |-ParmVarDecl 0x5615b8ba9d80 <col:67, col:71> col:71 port 'int'
| |-NoInlineAttr 0x5615b8ba9ef0 <col:20>
| `-OptimizeNoneAttr 0x5615b8ba9f48 <col:30>
|-CXXMethodDecl 0x5615b8ba9f98 <line:52:5, col:46> col:25 class_name 'const char *() const' virtual pure
|-CXXMethodDecl 0x5615b8baa060 <line:54:5, col:38> col:25 port_count 'const char *() const' virtual
|-VarDecl 0x5615b8baa178 <line:55:5, col:33> col:23 PORTS_0_0 'const char []' static
|-VarDecl 0x5615b8baa200 <line:56:5, col:33> col:23 PORTS_0_1 'const char []' static
|-VarDecl 0x5615b8baa288 <line:57:5, col:33> col:23 PORTS_1_0 'const char []' static
|-VarDecl 0x5615b8baa310 <line:58:5, col:33> col:23 PORTS_1_1 'const char []' static
|-VarDecl 0x5615b8baa398 <line:59:5, col:35> col:23 used PORTS_1_1X2 'const char []' static
|-CXXMethodDecl 0x5615b8baa428 <line:61:5, col:38> col:25 processing 'const char *() const' virtual
|-VarDecl 0x5615b8baa4e8 <line:62:5, col:32> col:23 AGNOSTIC 'const char []' static
|-VarDecl 0x5615b8baa570 <line:63:5, col:28> col:23 PUSH 'const char []' static
|-VarDecl 0x5615b8baa5f8 <line:64:5, col:28> col:23 PULL 'const char []' static
|-VarDecl 0x5615b8baa680 <line:65:5, col:36> col:23 PUSH_TO_PULL 'const char []' static
|-VarDecl 0x5615b8baa708 <line:66:5, col:36> col:23 PULL_TO_PUSH 'const char []' static
|-VarDecl 0x5615b8baa790 <line:67:5, col:39> col:23 used PROCESSING_A_AH 'const char []' static
|-CXXMethodDecl 0x5615b8baa820 <line:69:5, col:37> col:25 flow_code 'const char *() const' virtual
|-VarDecl 0x5615b8baa8e0 <line:70:5, col:37> col:23 COMPLETE_FLOW 'const char []' static
|-CXXMethodDecl 0x5615b8baa970 <line:72:5, col:33> col:25 flags 'const char *() const' virtual
|-CXXMethodDecl 0x5615b8baaac0 <line:73:5, col:30> col:9 flag_value 'int (int) const'
| `-ParmVarDecl 0x5615b8baaa28 <col:20, col:24> col:24 flag 'int'
|-CXXMethodDecl 0x5615b8baac50 <line:75:5, col:40> col:19 cast 'void *(const char *)' virtual
| `-ParmVarDecl 0x5615b8baab80 <col:24, col:36> col:36 name 'const char *'
|-CXXMethodDecl 0x5615b8baaf00 <line:76:5, col:70> col:19 port_cast 'void *(bool, int, const char *)' virtual
| |-ParmVarDecl 0x5615b8baad08 <col:29, col:34> col:34 isoutput 'bool'
| |-ParmVarDecl 0x5615b8baad88 <col:44, col:48> col:48 port 'int'
| `-ParmVarDecl 0x5615b8baae08 <col:54, col:66> col:66 name 'const char *'
|-EnumDecl 0x5615b8baafb8 <line:79:5, line:85:5> line:79:10 ConfigurePhase
| |-EnumConstantDecl 0x5615b8bab0c0 <line:80:9, col:33> col:9 CONFIGURE_PHASE_FIRST 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x5615b8bab350 <col:33> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5615b8bab0a0 <col:33> 'int' Int: 0
| |     `-IntegerLiteral 0x5615b8bab080 <col:33> 'int' 0
| |-EnumConstantDecl 0x5615b8bab150 <line:81:9, col:32> col:9 CONFIGURE_PHASE_INFO 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x5615b8bab368 <col:32> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5615b8bab130 <col:32> 'int' Int: 20
| |     `-IntegerLiteral 0x5615b8bab110 <col:32> 'int' 20
| |-EnumConstantDecl 0x5615b8bab1e0 <line:82:9, col:38> col:9 CONFIGURE_PHASE_PRIVILEGED 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x5615b8bab380 <col:38> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5615b8bab1c0 <col:38> 'int' Int: 90
| |     `-IntegerLiteral 0x5615b8bab1a0 <col:38> 'int' 90
| |-EnumConstantDecl 0x5615b8bab270 <line:83:9, col:35> col:9 CONFIGURE_PHASE_DEFAULT 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x5615b8bab398 <col:35> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5615b8bab250 <col:35> 'int' Int: 100
| |     `-IntegerLiteral 0x5615b8bab230 <col:35> 'int' 100
| `-EnumConstantDecl 0x5615b8bab300 <line:84:9, col:32> col:9 CONFIGURE_PHASE_LAST 'Element::ConfigurePhase'
|   `-ImplicitCastExpr 0x5615b8bab3b0 <col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5615b8bab2e0 <col:32> 'int' Int: 2000
|       `-IntegerLiteral 0x5615b8bab2c0 <col:32> 'int' 2000
|-CXXMethodDecl 0x5615b8bab3f0 <line:86:5, col:35> col:17 configure_phase 'int () const' virtual
|-CXXMethodDecl 0x5615b8bab830 <line:88:5, col:67> col:17 configure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x5615b8bab6a0 <col:27, col:43> col:43 conf 'Vector<String> &'
| `-ParmVarDecl 0x5615b8bab718 <col:49, col:63> col:63 errh 'ErrorHandler *'
|-CXXMethodDecl 0x5615b8bab900 <line:90:5, col:31> col:18 add_handlers 'void ()' virtual
|-CXXMethodDecl 0x5615b8baba80 <line:92:5, col:46> col:17 initialize 'int (ErrorHandler *)' virtual
| `-ParmVarDecl 0x5615b8bab9b0 <col:28, col:42> col:42 errh 'ErrorHandler *'
|-CXXMethodDecl 0x5615b8babc88 <line:94:5, col:69> col:18 take_state 'void (Element *, ErrorHandler *)' virtual
| |-ParmVarDecl 0x5615b8babb38 <col:29, col:38> col:38 old_element 'Element *'
| `-ParmVarDecl 0x5615b8babbb0 <col:51, col:65> col:65 errh 'ErrorHandler *'
|-CXXMethodDecl 0x5615b8babd88 <line:95:5, col:40> col:22 hotswap_element 'Element *() const' virtual
|-EnumDecl 0x5615b8babe28 <line:97:5, line:106:5> line:97:10 referenced CleanupStage
| |-EnumConstantDecl 0x5615b8babef0 <line:98:9> col:9 referenced CLEANUP_NO_ROUTER 'Element::CleanupStage'
| |-EnumConstantDecl 0x5615b8babf80 <line:99:9, col:36> col:9 CLEANUP_BEFORE_CONFIGURE 'Element::CleanupStage'
| | `-ImplicitCastExpr 0x5615b8bac1b0 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5615b8babf60 <col:36> 'int' Int: 0
| |     `-DeclRefExpr 0x5615b8babf40 <col:36> 'int' EnumConstant 0x5615b8babef0 'CLEANUP_NO_ROUTER' 'Element::CleanupStage'
| |-EnumConstantDecl 0x5615b8babfd0 <line:100:9> col:9 CLEANUP_CONFIGURE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x5615b8bac020 <line:101:9> col:9 CLEANUP_CONFIGURED 'Element::CleanupStage'
| |-EnumConstantDecl 0x5615b8bac070 <line:102:9> col:9 CLEANUP_INITIALIZE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x5615b8bac0c0 <line:103:9> col:9 CLEANUP_INITIALIZED 'Element::CleanupStage'
| |-EnumConstantDecl 0x5615b8bac110 <line:104:9> col:9 CLEANUP_ROUTER_INITIALIZED 'Element::CleanupStage'
| `-EnumConstantDecl 0x5615b8bac160 <line:105:9> col:9 CLEANUP_MANUAL 'Element::CleanupStage'
|-CXXMethodDecl 0x5615b8bac298 <line:107:5, col:44> col:18 cleanup 'void (Element::CleanupStage)' virtual
| `-ParmVarDecl 0x5615b8bac1d8 <col:26, col:39> col:39 stage 'Element::CleanupStage'
|-CXXMethodDecl 0x5615b8bac360 <line:109:5, col:42> col:24 static_initialize 'void ()' static inline
|-CXXMethodDecl 0x5615b8bac420 <line:110:5, col:39> col:24 static_cleanup 'void ()' static inline
|-CXXMethodDecl 0x5615b8bac4e0 <line:113:5, col:19> col:12 name 'String () const'
|-CXXMethodDecl 0x5615b8bac5a0 <line:114:5, col:34> col:20 declaration 'String () const' virtual
|-CXXMethodDecl 0x5615b8bac6b8 <line:116:5, col:29> col:20 used router 'Router *() const' inline
|-CXXMethodDecl 0x5615b8bac780 <line:117:5, col:25> col:16 eindex 'int () const' inline
|-CXXMethodDecl 0x5615b8bac900 <line:118:5, col:34> col:16 eindex 'int (Router *) const' inline
| `-ParmVarDecl 0x5615b8bac830 <col:23, col:31> col:31 r 'Router *'
|-CXXMethodDecl 0x5615b8baca28 <line:121:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x5615b8bacc28 <line:123:5, line:127:5> line:123:17 attach_router 'void (Router *, int)' inline
| |-ParmVarDecl 0x5615b8bacad8 <col:31, col:39> col:39 used r 'Router *'
| |-ParmVarDecl 0x5615b8bacb58 <col:42, col:46> col:46 used eindex 'int'
| `-CompoundStmt 0x5615b8bba578 <col:54, line:127:5>
|   |-ParenExpr 0x5615b8bba428 <line:124:9, col:152> 'void'
|   | `-ConditionalOperator 0x5615b8bba3f8 <col:10, col:151> 'void'
|   |   |-CXXStaticCastExpr 0x5615b8bba0e8 <col:10, col:38> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x5615b8bba0c0 <col:30, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-ImplicitCastExpr 0x5615b8bba0a8 <col:31> 'bool' <PointerToBoolean>
|   |   |     `-ImplicitCastExpr 0x5615b8bba090 <col:31> 'Router *' <LValueToRValue>
|   |   |       `-MemberExpr 0x5615b8bba060 <col:31> 'Router *' lvalue ->_router 0x5615b8bb7f40
|   |   |         `-CXXThisExpr 0x5615b8bba050 <col:31> 'Element *' implicit this
|   |   |-CXXFunctionalCastExpr 0x5615b8bba148 <col:42, col:49> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5615b8bba128 <col:48> 'int' 0
|   |   `-CallExpr 0x5615b8bba358 <col:53, col:151> 'void'
|   |     |-ImplicitCastExpr 0x5615b8bba340 <col:53> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5615b8bba320 <col:53> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5615b86e2f60 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5615b8bba398 <col:68> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5615b8bba1b8 <col:68> 'const char [9]' lvalue "!_router"
|   |     |-ImplicitCastExpr 0x5615b8bba3b0 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5615b8bba1d8 <col:80> 'const char [30]' lvalue "../dummy_inc/click/element.hh"
|   |     |-ImplicitCastExpr 0x5615b8bba3c8 <col:113> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5615b8bba210 <col:113> 'int' 124
|   |     `-ImplicitCastExpr 0x5615b8bba3e0 <col:118, col:132> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5615b8bba308 <col:118, col:132> 'const char [43]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5615b8bba2f0 <col:132> 'const char [43]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5615b8bba2a8 <col:132> 'const char [43]' lvalue "void Element::attach_router(Router *, int)"
|   |-BinaryOperator 0x5615b8bba4c0 <line:125:9, col:19> 'Router *' lvalue '='
|   | |-MemberExpr 0x5615b8bba458 <col:9> 'Router *' lvalue ->_router 0x5615b8bb7f40
|   | | `-CXXThisExpr 0x5615b8bba448 <col:9> 'Element *' implicit this
|   | `-ImplicitCastExpr 0x5615b8bba4a8 <col:19> 'Router *' <LValueToRValue>
|   |   `-DeclRefExpr 0x5615b8bba488 <col:19> 'Router *' lvalue ParmVar 0x5615b8bacad8 'r' 'Router *'
|   `-BinaryOperator 0x5615b8bba558 <line:126:9, col:19> 'int' lvalue '='
|     |-MemberExpr 0x5615b8bba4f0 <col:9> 'int' lvalue ->_eindex 0x5615b8bb7fa8
|     | `-CXXThisExpr 0x5615b8bba4e0 <col:9> 'Element *' implicit this
|     `-ImplicitCastExpr 0x5615b8bba540 <col:19> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x5615b8bba520 <col:19> 'int' lvalue ParmVar 0x5615b8bacb58 'eindex' 'int'
|-CXXMethodDecl 0x5615b8bacdb0 <line:130:5, col:38> col:16 used nports 'int (bool) const' inline
| `-ParmVarDecl 0x5615b8bacce8 <col:23, col:28> col:28 isoutput 'bool'
|-CXXMethodDecl 0x5615b8bace80 <line:131:5, col:26> col:16 used ninputs 'int () const' inline
|-CXXMethodDecl 0x5615b8bacf48 <line:132:5, col:27> col:16 used noutputs 'int () const' inline
|-CXXRecordDecl 0x5615b8bacfe8 <line:134:5, col:11> col:11 referenced class Port
|-CXXMethodDecl 0x5615b8bad238 <line:135:5, col:82> col:52 used port 'const Element::Port &(bool, int) const'
| |-ParmVarDecl 0x5615b8bad0b0 <col:57, col:62> col:62 isoutput 'bool'
| |-ParmVarDecl 0x5615b8bad130 <col:72, col:76> col:76 port 'int'
| |-NoInlineAttr 0x5615b8bad2e8 <col:20>
| `-OptimizeNoneAttr 0x5615b8bad340 <col:30>
|-CXXMethodDecl 0x5615b8bad448 <line:136:5, col:68> col:52 input 'const Element::Port &(int) const'
| |-ParmVarDecl 0x5615b8bad380 <col:58, col:62> col:62 port 'int'
| |-NoInlineAttr 0x5615b8bad4f0 <col:20>
| `-OptimizeNoneAttr 0x5615b8bad548 <col:30>
|-CXXMethodDecl 0x5615b8bad618 <line:137:5, col:69> col:52 output 'const Element::Port &(int) const'
| |-ParmVarDecl 0x5615b8bad588 <col:59, col:63> col:63 port 'int'
| |-NoInlineAttr 0x5615b8bad6c0 <col:20>
| `-OptimizeNoneAttr 0x5615b8bad718 <col:30>
|-CXXMethodDecl 0x5615b8bad8a8 <line:139:5, col:54> col:17 used port_active 'bool (bool, int) const' inline
| |-ParmVarDecl 0x5615b8bad750 <col:29, col:34> col:34 isoutput 'bool'
| `-ParmVarDecl 0x5615b8bad7d0 <col:44, col:48> col:48 port 'int'
|-CXXMethodDecl 0x5615b8bada38 <line:140:5, col:41> col:17 input_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x5615b8bad970 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x5615b8badb88 <line:141:5, col:41> col:17 input_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x5615b8badaf8 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x5615b8badcd8 <line:142:5, col:42> col:17 output_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x5615b8badc48 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x5615b8bade28 <line:143:5, col:42> col:17 output_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x5615b8badd98 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x5615b8bae0e8 <line:144:5, col:57> col:10 port_flow 'void (bool, int, Bitvector *) const'
| |-ParmVarDecl 0x5615b8badee0 <col:20, col:25> col:25 isoutput 'bool'
| |-ParmVarDecl 0x5615b8badf60 <col:35, col:39> col:39 port 'int'
| `-ParmVarDecl 0x5615b8bae008 <col:45, col:54> col:55 'Bitvector *'
|-CXXMethodDecl 0x5615b8bae1c0 <line:147:5, col:28> col:12 configuration 'String () const'
|-CXXMethodDecl 0x5615b8bae280 <line:149:5, col:41> col:18 can_live_reconfigure 'bool () const' virtual
|-CXXMethodDecl 0x5615b8bae550 <line:150:5, col:64> col:17 live_reconfigure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x5615b8bae400 <col:34, col:48> col:49 'Vector<String> &'
| `-ParmVarDecl 0x5615b8bae478 <col:51, col:63> col:64 'ErrorHandler *'
|-CXXMethodDecl 0x5615b8bae678 <line:152:5, col:33> col:19 home_thread 'RouterThread *() const'
|-CXXMethodDecl 0x5615b8bae850 <line:156:5, col:36> col:9 add_select 'int (int, int)'
| |-ParmVarDecl 0x5615b8bae730 <col:20, col:24> col:24 fd 'int'
| `-ParmVarDecl 0x5615b8bae7b0 <col:28, col:32> col:32 mask 'int'
|-CXXMethodDecl 0x5615b8baea38 <line:157:5, col:39> col:9 remove_select 'int (int, int)'
| |-ParmVarDecl 0x5615b8bae918 <col:23, col:27> col:27 fd 'int'
| `-ParmVarDecl 0x5615b8bae998 <col:31, col:35> col:35 mask 'int'
|-CXXMethodDecl 0x5615b8baeda8 <line:161:5, col:127> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x5615b8baeaf8 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x5615b8baeb70 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x5615b8baebf0 <col:82, col:106> col:94 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x5615b8bb9b60 <col:106> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x5615b8bb9b40 <col:106> 'int' 0
| `-ParmVarDecl 0x5615b8baec68 <col:109, col:126> col:118 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x5615b8bb9b98 <col:126> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x5615b8bb9b78 <col:126> 'int' 0
|-CXXMethodDecl 0x5615b8baf148 <line:162:5, col:115> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x5615b8baee78 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x5615b8baef10 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x5615b8baef90 <col:82, col:86> col:86 user_data 'int'
| `-ParmVarDecl 0x5615b8baf008 <col:97, col:114> col:106 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x5615b8bb9bd0 <col:114> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x5615b8bb9bb0 <col:114> 'int' 0
|-CXXMethodDecl 0x5615b8baf4d8 <line:163:5, col:117> col:10 add_read_handler 'void (const char *, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x5615b8baf220 <col:27, col:39> col:39 name 'const char *'
| |-ParmVarDecl 0x5615b8baf298 <col:45, col:65> col:65 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x5615b8baf318 <col:80, col:96> col:84 user_data 'int' cinit
| | `-IntegerLiteral 0x5615b8bb9be8 <col:96> 'int' 0
| `-ParmVarDecl 0x5615b8baf390 <col:99, col:116> col:108 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x5615b8bb9c28 <col:116> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x5615b8bb9c08 <col:116> 'int' 0
|-CXXMethodDecl 0x5615b8baf858 <line:164:5, col:130> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x5615b8baf5a8 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x5615b8baf620 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x5615b8baf6a0 <col:85, col:109> col:97 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x5615b8bb9c60 <col:109> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x5615b8bb9c40 <col:109> 'int' 0
| `-ParmVarDecl 0x5615b8baf718 <col:112, col:129> col:121 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x5615b8bb9c98 <col:129> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x5615b8bb9c78 <col:129> 'int' 0
|-CXXMethodDecl 0x5615b8bafbd8 <line:165:5, col:118> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x5615b8baf928 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x5615b8baf9a0 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x5615b8bafa20 <col:85, col:89> col:89 user_data 'int'
| `-ParmVarDecl 0x5615b8bafa98 <col:100, col:117> col:109 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x5615b8bb9cd0 <col:117> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x5615b8bb9cb0 <col:117> 'int' 0
|-CXXMethodDecl 0x5615b8baff68 <line:166:5, col:120> col:10 add_write_handler 'void (const char *, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x5615b8bafcb0 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5615b8bafd28 <col:46, col:67> col:67 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x5615b8bafda8 <col:83, col:99> col:87 user_data 'int' cinit
| | `-IntegerLiteral 0x5615b8bb9ce8 <col:99> 'int' 0
| `-ParmVarDecl 0x5615b8bafe20 <col:102, col:119> col:111 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x5615b8bb9d28 <col:119> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x5615b8bb9d08 <col:119> 'int' 0
|-CXXMethodDecl 0x5615b8bb0388 <line:167:5, col:142> col:10 set_handler 'void (const String &, int, HandlerCallback, const void *, const void *)'
| |-ParmVarDecl 0x5615b8bb0038 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x5615b8bb00b8 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x5615b8bb0130 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x5615b8bb01b0 <col:79, col:108> col:91 read_user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x5615b8bb9d60 <col:108> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x5615b8bb9d40 <col:108> 'int' 0
| `-ParmVarDecl 0x5615b8bb0230 <col:111, col:141> col:123 write_user_data 'const void *' cinit
|   `-ImplicitCastExpr 0x5615b8bb9d98 <col:141> 'const void *' <NullToPointer>
|     `-IntegerLiteral 0x5615b8bb9d78 <col:141> 'int' 0
|-CXXMethodDecl 0x5615b8bb07a8 <line:168:5, col:122> col:10 set_handler 'void (const String &, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x5615b8bb0460 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x5615b8bb04e0 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x5615b8bb0558 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x5615b8bb05d8 <col:79, col:83> col:83 read_user_data 'int'
| `-ParmVarDecl 0x5615b8bb0658 <col:99, col:121> col:103 write_user_data 'int' cinit
|   `-IntegerLiteral 0x5615b8bb9db0 <col:121> 'int' 0
|-CXXMethodDecl 0x5615b8bb0bd8 <line:169:5, col:124> col:10 set_handler 'void (const char *, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x5615b8bb0888 <col:22, col:34> col:34 name 'const char *'
| |-ParmVarDecl 0x5615b8bb0908 <col:40, col:44> col:44 flags 'int'
| |-ParmVarDecl 0x5615b8bb0980 <col:51, col:67> col:67 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x5615b8bb0a00 <col:77, col:98> col:81 read_user_data 'int' cinit
| | `-IntegerLiteral 0x5615b8bb9dd0 <col:98> 'int' 0
| `-ParmVarDecl 0x5615b8bb0a80 <col:101, col:123> col:105 write_user_data 'int' cinit
|   `-IntegerLiteral 0x5615b8bb9df0 <col:123> 'int' 0
|-CXXMethodDecl 0x5615b8bb0ea0 <line:170:5, col:81> col:9 set_handler_flags 'int (const String &, int, int)'
| |-ParmVarDecl 0x5615b8bb0cb0 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x5615b8bb0d30 <col:47, col:51> col:51 set_flags 'int'
| `-ParmVarDecl 0x5615b8bb0db0 <col:62, col:80> col:66 clear_flags 'int' cinit
|   `-IntegerLiteral 0x5615b8bb9e10 <col:80> 'int' 0
|-EnumDecl 0x5615b8bb0f58 <line:171:5, line:175:36> line:171:5
| |-EnumConstantDecl 0x5615b8bb1060 <col:12, col:42> col:12 TASKHANDLER_WRITE_SCHEDULED 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x5615b8bb12f0 <col:42> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5615b8bb1040 <col:42> 'int' Int: 1
| |     `-IntegerLiteral 0x5615b8bb1020 <col:42> 'int' 1
| |-EnumConstantDecl 0x5615b8bb10f0 <line:172:12, col:40> col:12 TASKHANDLER_WRITE_TICKETS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x5615b8bb1308 <col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5615b8bb10d0 <col:40> 'int' Int: 2
| |     `-IntegerLiteral 0x5615b8bb10b0 <col:40> 'int' 2
| |-EnumConstantDecl 0x5615b8bb1180 <line:173:12, col:44> col:12 TASKHANDLER_WRITE_HOME_THREAD 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x5615b8bb1320 <col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5615b8bb1160 <col:44> 'int' Int: 4
| |     `-IntegerLiteral 0x5615b8bb1140 <col:44> 'int' 4
| |-EnumConstantDecl 0x5615b8bb1210 <line:174:12, col:36> col:12 TASKHANDLER_WRITE_ALL 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x5615b8bb1338 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5615b8bb11f0 <col:36> 'int' Int: 7
| |     `-IntegerLiteral 0x5615b8bb11d0 <col:36> 'int' 7
| `-EnumConstantDecl 0x5615b8bb12a0 <line:175:12, col:34> col:12 referenced TASKHANDLER_DEFAULT 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|   `-ImplicitCastExpr 0x5615b8bb1350 <col:34> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5615b8bb1280 <col:34> 'int' Int: 6
|       `-IntegerLiteral 0x5615b8bb1260 <col:34> 'int' 6
|-CXXMethodDecl 0x5615b8bb1608 <line:176:5, col:106> col:10 used add_task_handlers 'void (Task *, NotifierSignal *, int, const String &)'
| |-ParmVarDecl 0x5615b8bb1378 <col:28, col:34> col:34 task 'Task *'
| |-ParmVarDecl 0x5615b8bb1418 <col:40, col:56> col:56 signal 'NotifierSignal *'
| |-ParmVarDecl 0x5615b8bb1498 <col:64, col:68> col:68 flags 'int'
| `-ParmVarDecl 0x5615b8bb1510 <col:75, col:105> col:89 prefix 'const String &' cinit
|   `-ExprWithCleanups 0x5615b8bb9ec8 <col:98, col:105> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x5615b8bb9eb0 <col:98, col:105> 'const String' lvalue
|       `-ImplicitCastExpr 0x5615b8bb9e98 <col:98, col:105> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x5615b8bb9e78 <col:98, col:105> 'String' (CXXTemporary 0x5615b8bb9e78)
|           `-CXXTemporaryObjectExpr 0x5615b8bb9e40 <col:98, col:105> 'String' 'void ()'
|-CXXMethodDecl 0x5615b8bb18a8 <line:177:5, line:179:5> line:177:17 add_task_handlers 'void (Task *, NotifierSignal *, const String &)' inline
| |-ParmVarDecl 0x5615b8bb16d8 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x5615b8bb1750 <col:47, col:63> col:63 used signal 'NotifierSignal *'
| |-ParmVarDecl 0x5615b8bb17c8 <col:71, col:101> col:85 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x5615b8bb9f78 <col:94, col:101> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x5615b8bb9f60 <col:94, col:101> 'const String' lvalue
| |     `-ImplicitCastExpr 0x5615b8bb9f48 <col:94, col:101> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x5615b8bb9f28 <col:94, col:101> 'String' (CXXTemporary 0x5615b8bb9f28)
| |         `-CXXTemporaryObjectExpr 0x5615b8bb9ef0 <col:94, col:101> 'String' 'void ()'
| `-CompoundStmt 0x5615b8bba760 <col:104, line:179:5>
|   `-CXXMemberCallExpr 0x5615b8bba6d8 <line:178:9, col:68> 'void'
|     |-MemberExpr 0x5615b8bba6a8 <col:9> '<bound member function type>' ->add_task_handlers 0x5615b8bb1608
|     | `-CXXThisExpr 0x5615b8bba698 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x5615b8bba718 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x5615b8bba618 <col:27> 'Task *' lvalue ParmVar 0x5615b8bb16d8 'task' 'Task *'
|     |-ImplicitCastExpr 0x5615b8bba730 <col:33> 'NotifierSignal *' <LValueToRValue>
|     | `-DeclRefExpr 0x5615b8bba638 <col:33> 'NotifierSignal *' lvalue ParmVar 0x5615b8bb1750 'signal' 'NotifierSignal *'
|     |-ImplicitCastExpr 0x5615b8bba748 <col:41> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x5615b8bba658 <col:41> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x5615b8bb12a0 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x5615b8bba678 <col:62> 'const String' lvalue ParmVar 0x5615b8bb17c8 'prefix' 'const String &'
|-CXXMethodDecl 0x5615b8bb1ab8 <line:180:5, line:182:5> line:180:17 add_task_handlers 'void (Task *, const String &)' inline
| |-ParmVarDecl 0x5615b8bb1970 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x5615b8bb19e8 <col:47, col:77> col:61 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x5615b8bba028 <col:70, col:77> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x5615b8bba010 <col:70, col:77> 'const String' lvalue
| |     `-ImplicitCastExpr 0x5615b8bb9ff8 <col:70, col:77> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x5615b8bb9fd8 <col:70, col:77> 'String' (CXXTemporary 0x5615b8bb9fd8)
| |         `-CXXTemporaryObjectExpr 0x5615b8bb9fa0 <col:70, col:77> 'String' 'void ()'
| `-CompoundStmt 0x5615b8bba938 <col:80, line:182:5>
|   `-CXXMemberCallExpr 0x5615b8bba8b0 <line:181:9, col:63> 'void'
|     |-MemberExpr 0x5615b8bba880 <col:9> '<bound member function type>' ->add_task_handlers 0x5615b8bb1608
|     | `-CXXThisExpr 0x5615b8bba870 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x5615b8bba8f0 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x5615b8bba7f0 <col:27> 'Task *' lvalue ParmVar 0x5615b8bb1970 'task' 'Task *'
|     |-ImplicitCastExpr 0x5615b8bba908 <col:33> 'NotifierSignal *' <NullToPointer>
|     | `-IntegerLiteral 0x5615b8bba810 <col:33> 'int' 0
|     |-ImplicitCastExpr 0x5615b8bba920 <col:36> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x5615b8bba830 <col:36> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x5615b8bb12a0 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x5615b8bba850 <col:57> 'const String' lvalue ParmVar 0x5615b8bb19e8 'prefix' 'const String &'
|-CXXMethodDecl 0x5615b8bb1d98 <line:184:5, col:70> col:10 add_data_handlers 'void (const char *, int, uint8_t *)'
| |-ParmVarDecl 0x5615b8bb1b80 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5615b8bb1c00 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5615b8bb1c78 <col:57, col:66> col:66 data 'uint8_t *'
|-CXXMethodDecl 0x5615b8bb2048 <line:185:5, col:67> col:10 add_data_handlers 'void (const char *, int, bool *)'
| |-ParmVarDecl 0x5615b8bb1e68 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5615b8bb1ee8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5615b8bb1f68 <col:57, col:63> col:63 data 'bool *'
|-CXXMethodDecl 0x5615b8bb2338 <line:186:5, col:71> col:10 add_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x5615b8bb2118 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5615b8bb2198 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5615b8bb2210 <col:57, col:67> col:67 data 'uint16_t *'
|-CXXMethodDecl 0x5615b8bb25e8 <line:187:5, col:66> col:10 add_data_handlers 'void (const char *, int, int *)'
| |-ParmVarDecl 0x5615b8bb2408 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5615b8bb2488 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5615b8bb2508 <col:57, col:62> col:62 data 'int *'
|-CXXMethodDecl 0x5615b8bb2898 <line:188:5, col:71> col:10 add_data_handlers 'void (const char *, int, unsigned int *)'
| |-ParmVarDecl 0x5615b8bb26b8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5615b8bb2738 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5615b8bb27b8 <col:57, col:67> col:67 data 'unsigned int *'
|-CXXMethodDecl 0x5615b8bb2b48 <line:189:5, col:78> col:10 add_data_handlers 'void (const char *, int, atomic_uint32_t *)'
| |-ParmVarDecl 0x5615b8bb2968 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5615b8bb29e8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5615b8bb2a60 <col:57, col:74> col:74 data 'atomic_uint32_t *'
|-CXXMethodDecl 0x5615b8bb2df8 <line:190:5, col:67> col:10 add_data_handlers 'void (const char *, int, long *)'
| |-ParmVarDecl 0x5615b8bb2c18 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5615b8bb2c98 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5615b8bb2d18 <col:57, col:63> col:63 data 'long *'
|-CXXMethodDecl 0x5615b8bb3108 <line:191:5, col:76> col:10 add_data_handlers 'void (const char *, int, unsigned long *)'
| |-ParmVarDecl 0x5615b8bb2f20 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5615b8bb2fa0 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5615b8bb3020 <col:57, col:72> col:72 data 'unsigned long *'
|-CXXMethodDecl 0x5615b8bb33e8 <line:193:5, col:72> col:10 add_data_handlers 'void (const char *, int, long long *)'
| |-ParmVarDecl 0x5615b8bb31d8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5615b8bb3258 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5615b8bb3300 <col:57, col:68> col:68 data 'long long *'
|-CXXMethodDecl 0x5615b8bb36c8 <line:194:5, col:81> col:10 add_data_handlers 'void (const char *, int, unsigned long long *)'
| |-ParmVarDecl 0x5615b8bb34b8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5615b8bb3538 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5615b8bb35e0 <col:57, col:77> col:77 data 'unsigned long long *'
|-CXXMethodDecl 0x5615b8bb3930 <line:196:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x5615b8bb3798 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x5615b8bb3818 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x5615b8bb3890 <col:67, col:77> col:77 data 'uint16_t *'
|-CXXMethodDecl 0x5615b8bb3bd8 <line:197:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint32_t *)'
| |-ParmVarDecl 0x5615b8bb3a00 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x5615b8bb3a80 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x5615b8bb3af8 <col:67, col:77> col:77 data 'uint32_t *'
|-CXXMethodDecl 0x5615b8bb3e88 <line:199:5, col:69> col:10 add_data_handlers 'void (const char *, int, double *)'
| |-ParmVarDecl 0x5615b8bb3ca8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5615b8bb3d28 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5615b8bb3da8 <col:57, col:65> col:65 data 'double *'
|-CXXMethodDecl 0x5615b8bb4138 <line:201:5, col:69> col:10 add_data_handlers 'void (const char *, int, String *)'
| |-ParmVarDecl 0x5615b8bb3f58 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5615b8bb3fd8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5615b8bb4050 <col:57, col:65> col:65 data 'String *'
|-CXXMethodDecl 0x5615b8bb43e8 <line:202:5, col:72> col:10 add_data_handlers 'void (const char *, int, IPAddress *)'
| |-ParmVarDecl 0x5615b8bb4208 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5615b8bb4288 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5615b8bb4300 <col:57, col:68> col:68 data 'IPAddress *'
|-CXXMethodDecl 0x5615b8bb46b8 <line:203:5, col:75> col:10 add_data_handlers 'void (const char *, int, EtherAddress *)'
| |-ParmVarDecl 0x5615b8bb44b8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5615b8bb4538 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5615b8bb45d8 <col:57, col:71> col:71 data 'EtherAddress *'
|-CXXMethodDecl 0x5615b8bb49e8 <line:204:5, col:98> col:10 add_data_handlers 'void (const char *, int, Timestamp *, bool)'
| |-ParmVarDecl 0x5615b8bb4788 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5615b8bb4808 <col:46, col:50> col:50 flags 'int'
| |-ParmVarDecl 0x5615b8bb4880 <col:57, col:68> col:68 data 'Timestamp *'
| `-ParmVarDecl 0x5615b8bb48f8 <col:74, col:93> col:79 is_interval 'bool' cinit
|   `-CXXBoolLiteralExpr 0x5615b8bba040 <col:93> 'bool' false
|-CXXMethodDecl 0x5615b8bb4bd0 <line:206:5, col:58> col:19 read_positional_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x5615b8bb4ab8 <col:43, col:50> col:51 'Element *'
| `-ParmVarDecl 0x5615b8bb4b38 <col:53, col:57> col:58 'void *'
|-CXXMethodDecl 0x5615b8bb4da8 <line:207:5, col:55> col:19 read_keyword_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x5615b8bb4c90 <col:40, col:47> col:48 'Element *'
| `-ParmVarDecl 0x5615b8bb4d10 <col:50, col:54> col:55 'void *'
|-CXXMethodDecl 0x5615b8bb5088 <line:208:5, col:92> col:16 reconfigure_positional_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x5615b8bb4e68 <col:47, col:59> col:60 'const String &'
| |-ParmVarDecl 0x5615b8bb4ee0 <col:62, col:69> col:70 'Element *'
| |-ParmVarDecl 0x5615b8bb4f60 <col:72, col:76> col:77 'void *'
| `-ParmVarDecl 0x5615b8bb4fd8 <col:79, col:91> col:92 'ErrorHandler *'
|-CXXMethodDecl 0x5615b8bb5378 <line:209:5, col:89> col:16 reconfigure_keyword_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x5615b8bb5158 <col:44, col:56> col:57 'const String &'
| |-ParmVarDecl 0x5615b8bb51d0 <col:59, col:66> col:67 'Element *'
| |-ParmVarDecl 0x5615b8bb5250 <col:69, col:73> col:74 'void *'
| `-ParmVarDecl 0x5615b8bb52c8 <col:76, col:88> col:89 'ErrorHandler *'
|-CXXMethodDecl 0x5615b8bb55b0 <line:211:5, col:50> col:17 llrpc 'int (unsigned int, void *)' virtual
| |-ParmVarDecl 0x5615b8bb5450 <col:23, col:32> col:32 command 'unsigned int'
| `-ParmVarDecl 0x5615b8bb54d0 <col:41, col:47> col:47 arg 'void *'
|-CXXMethodDecl 0x5615b8bb5798 <line:212:5, col:48> col:9 local_llrpc 'int (unsigned int, void *)'
| |-ParmVarDecl 0x5615b8bb5678 <col:21, col:30> col:30 command 'unsigned int'
| `-ParmVarDecl 0x5615b8bb56f8 <col:39, col:45> col:45 arg 'void *'
|-CXXRecordDecl 0x5615b8bb5848 prev 0x5615b8bacfe8 <line:214:5, line:252:5> line:214:11 referenced class Port definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x5615b8bb5940 <col:5, col:11> col:11 implicit referenced class Port
| |-AccessSpecDecl 0x5615b8bb59d0 <col:18, col:24> col:18 public
| |-CXXMethodDecl 0x5615b8bb5a48 <line:216:9, col:30> col:21 used active 'bool () const' inline
| |-CXXMethodDecl 0x5615b8bb5b08 <line:217:9, col:35> col:25 element 'Element *() const' inline
| |-CXXMethodDecl 0x5615b8bb5bd0 <line:218:9, col:27> col:20 port 'int () const' inline
| |-CXXMethodDecl 0x5615b8bb5d48 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| | |-ParmVarDecl 0x5615b8bb5c80 <col:54, col:62> col:62 p 'Packet *'
| | |-NoInlineAttr 0x5615b8bb5df0 <col:24>
| | `-OptimizeNoneAttr 0x5615b8bb5e48 <col:34>
| |-CXXMethodDecl 0x5615b8bb5e90 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
| |-CXXMethodDecl 0x5615b8bb6148 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| | |-ParmVarDecl 0x5615b8bb5f40 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x5615b8bb5fb8 <col:43, col:52> col:52 e 'Element *'
| | `-ParmVarDecl 0x5615b8bb6038 <col:55, col:59> col:59 port 'int'
| |-AccessSpecDecl 0x5615b8bb6200 <line:229:7, col:14> col:7 private
| |-FieldDecl 0x5615b8bb6238 <line:231:9, col:18> col:18 referenced _e 'Element *'
| |-FieldDecl 0x5615b8bb62a0 <line:232:9, col:13> col:13 referenced _port 'int'
| |-CXXConstructorDecl 0x5615b8bb6328 <line:247:9, col:21> col:16 Port 'void ()' inline
| |-CXXMethodDecl 0x5615b8bb6648 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| | |-ParmVarDecl 0x5615b8bb63e0 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x5615b8bb6458 <col:43, col:52> col:52 owner 'Element *'
| | |-ParmVarDecl 0x5615b8bb64d0 <col:59, col:68> col:68 e 'Element *'
| | `-ParmVarDecl 0x5615b8bb6550 <col:71, col:75> col:75 port 'int'
| |-FriendDecl 0x5615b8bb6760 <line:250:9, col:22> col:16 'class Element':'Element'
| |-CXXConstructorDecl 0x5615b8bbe0d8 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x5615b8bbe0d8
| | `-ParmVarDecl 0x5615b8bbe1e8 <col:11> col:11 'const Element::Port &'
| |-CXXConstructorDecl 0x5615b8bbe288 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x5615b8bbe288
| | `-ParmVarDecl 0x5615b8bbe398 <col:11> col:11 'Element::Port &&'
| `-CXXDestructorDecl 0x5615b8bc2808 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x5615b8bb67d8 <line:256:5, col:49> col:12 id 'String () const'
| `-DeprecatedAttr 0x5615b8bb6878 <col:38> "" ""
|-CXXMethodDecl 0x5615b8bb6908 <line:257:5, col:55> col:12 landmark 'String () const'
| `-DeprecatedAttr 0x5615b8bb69a8 <col:44> "" ""
|-AccessSpecDecl 0x5615b8bb6a18 <line:260:3, col:10> col:3 private
|-EnumDecl 0x5615b8bb6a40 <line:262:5, col:29> col:5
| `-EnumConstantDecl 0x5615b8bb6b40 <col:12, col:27> col:12 referenced INLINE_PORTS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:262:5)'
|   `-ImplicitCastExpr 0x5615b8bb6b90 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5615b8bb6b20 <col:27> 'int' Int: 4
|       `-IntegerLiteral 0x5615b8bb6b00 <col:27> 'int' 4
|-FieldDecl 0x5615b8bb6c48 <line:264:5, col:19> col:11 referenced _ports 'Element::Port *[2]'
|-FieldDecl 0x5615b8bb6df8 <line:265:5, col:36> col:10 _inline_ports 'Element::Port [4]'
|-FieldDecl 0x5615b8bb6eb0 <line:267:5, col:18> col:9 referenced _nports 'int [2]'
|-FieldDecl 0x5615b8bb7f40 <line:269:5, col:13> col:13 referenced _router 'Router *'
|-FieldDecl 0x5615b8bb7fa8 <line:270:5, col:9> col:9 referenced _eindex 'int'
|-CXXConstructorDecl 0x5615b8bb80f8 <line:292:5, col:28> col:5 Element 'void (const Element &)'
| `-ParmVarDecl 0x5615b8bb8038 <col:13, col:27> col:28 'const Element &'
|-CXXMethodDecl 0x5615b8bb82a8 <line:293:5, col:39> col:14 operator= 'Element &(const Element &)'
| `-ParmVarDecl 0x5615b8bb81b8 <col:24, col:38> col:39 'const Element &'
|-CXXMethodDecl 0x5615b8bb8488 <line:296:5, col:28> col:9 set_nports 'int (int, int)'
| |-ParmVarDecl 0x5615b8bb8368 <col:20> col:23 'int'
| `-ParmVarDecl 0x5615b8bb83e8 <col:25> col:28 'int'
|-CXXMethodDecl 0x5615b8bb8730 <line:297:5, col:47> col:9 notify_nports 'int (int, int, ErrorHandler *)'
| |-ParmVarDecl 0x5615b8bb8550 <col:23> col:26 'int'
| |-ParmVarDecl 0x5615b8bb85d0 <col:28> col:31 'int'
| `-ParmVarDecl 0x5615b8bb8648 <col:33, col:46> col:47 'ErrorHandler *'
|-EnumDecl 0x5615b8bb87e8 <line:298:5, col:47> col:10 Processing
| |-EnumConstantDecl 0x5615b8bb88b0 <col:23> col:23 VAGNOSTIC 'Element::Processing'
| |-EnumConstantDecl 0x5615b8bb8900 <col:34> col:34 VPUSH 'Element::Processing'
| `-EnumConstantDecl 0x5615b8bb8950 <col:41> col:41 VPULL 'Element::Processing'
|-CXXMethodDecl 0x5615b8bb8b30 <line:299:5, col:71> col:16 next_processing_code 'int (const char *&, ErrorHandler *)' static
| |-ParmVarDecl 0x5615b8bb89e0 <col:37, col:50> col:50 p 'const char *&'
| `-ParmVarDecl 0x5615b8bb8a58 <col:53, col:67> col:67 errh 'ErrorHandler *'
|-CXXMethodDecl 0x5615b8bb8dd8 <line:300:5, col:80> col:10 processing_vector 'void (int *, int *, ErrorHandler *) const'
| |-ParmVarDecl 0x5615b8bb8bf8 <col:28, col:33> col:33 input_codes 'int *'
| |-ParmVarDecl 0x5615b8bb8c78 <col:46, col:51> col:51 output_codes 'int *'
| `-ParmVarDecl 0x5615b8bb8cf0 <col:65, col:77> col:78 'ErrorHandler *'
|-CXXMethodDecl 0x5615b8bb8ff8 <line:302:5, col:74> col:10 initialize_ports 'void (const int *, const int *)'
| |-ParmVarDecl 0x5615b8bb8ea8 <col:27, col:38> col:38 input_codes 'const int *'
| `-ParmVarDecl 0x5615b8bb8f28 <col:51, col:62> col:62 output_codes 'const int *'
|-CXXMethodDecl 0x5615b8bb9330 <line:303:5, col:60> col:9 connect_port 'int (bool, int, Element *, int)'
| |-ParmVarDecl 0x5615b8bb90b8 <col:22, col:27> col:27 isoutput 'bool'
| |-ParmVarDecl 0x5615b8bb9138 <col:37, col:41> col:41 port 'int'
| |-ParmVarDecl 0x5615b8bb91b0 <col:47, col:54> col:55 'Element *'
| `-ParmVarDecl 0x5615b8bb9230 <col:57> col:60 'int'
|-CXXMethodDecl 0x5615b8bb9518 <line:305:5, col:68> col:19 read_handlers_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x5615b8bb9400 <col:41, col:50> col:50 e 'Element *'
| `-ParmVarDecl 0x5615b8bb9480 <col:53, col:59> col:59 user_data 'void *'
|-CXXMethodDecl 0x5615b8bb9668 <line:306:5, col:51> col:10 add_default_handlers 'void (bool)'
| `-ParmVarDecl 0x5615b8bb95d8 <col:31, col:36> col:36 writable_config 'bool'
|-CXXMethodDecl 0x5615b8bb99e8 <line:307:5, col:100> col:17 add_data_handlers 'void (const char *, int, HandlerCallback, void *)' inline
| |-ParmVarDecl 0x5615b8bb9728 <col:35, col:47> col:47 name 'const char *'
| |-ParmVarDecl 0x5615b8bb97a8 <col:53, col:57> col:57 flags 'int'
| |-ParmVarDecl 0x5615b8bb9820 <col:64, col:80> col:80 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| `-ParmVarDecl 0x5615b8bb98a0 <col:90, col:96> col:96 data 'void *'
`-FriendDecl 0x5615b8bb9b00 <line:309:5, col:18> col:12 'class Router':'Router'

Layout: <CGRecordLayout
  LLVMType:%class.Element = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Element.base = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class atomic_uint32_t
         0 |   uint32_t _val
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | class DropBroadcasts
         0 |   class Element (primary base)
         0 |     (Element vtable pointer)
         8 |     class Element::Port *[2] _ports
        24 |     class Element::Port [4] _inline_ports
        88 |     int [2] _nports
        96 |     class Router * _router
       104 |     int _eindex
       108 |   class atomic_uint32_t _drops
       108 |     uint32_t _val
           | [sizeof=112, dsize=112, align=8,
           |  nvsize=112, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5615b8967310 <../dummy_inc/click/atomic.hh:52:1, line:94:1> line:52:7 referenced class atomic_uint32_t definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5615b8967428 <col:1, col:7> col:7 implicit referenced class atomic_uint32_t
|-AccessSpecDecl 0x5615b89674b8 <col:25, col:31> col:25 public
|-CXXMethodDecl 0x5615b8967588 <line:57:5, col:29> col:21 used value 'uint32_t () const' inline
|-CXXConversionDecl 0x5615b8967670 <line:58:5, col:32> col:12 used operator unsigned int 'uint32_t () const' inline
|-CXXMethodDecl 0x5615b8967888 <line:60:5, col:49> col:29 used operator= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x5615b8967730 <col:39, col:48> col:48 x 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5615b8967a38 <line:62:5, col:53> col:29 operator+= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x5615b8967940 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x5615b8967b80 <line:63:5, col:53> col:29 operator-= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x5615b8967af0 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x5615b8967cc8 <line:64:5, col:53> col:29 operator|= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x5615b8967c38 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5615b8967e10 <line:65:5, col:53> col:29 operator&= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x5615b8967d80 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5615b8967ed8 <line:67:5, col:28> col:17 operator++ 'void ()' inline
|-CXXMethodDecl 0x5615b8968020 <line:68:5, col:31> col:17 operator++ 'void (int)' inline
| `-ParmVarDecl 0x5615b8967f90 <col:28> col:31 'int'
|-CXXMethodDecl 0x5615b89680e8 <line:69:5, col:28> col:17 operator-- 'void ()' inline
|-CXXMethodDecl 0x5615b8968230 <line:70:5, col:31> col:17 operator-- 'void (int)' inline
| `-ParmVarDecl 0x5615b89681a0 <col:28> col:31 'int'
|-CXXMethodDecl 0x5615b89683a8 <line:72:5, col:42> col:21 swap 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x5615b89682e8 <col:26, col:35> col:35 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5615b89684f0 <line:73:5, col:49> col:21 fetch_and_add 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x5615b8968460 <col:35, col:44> col:44 delta 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5615b89685b8 <line:74:5, col:30> col:17 dec_and_test 'bool ()' inline
|-CXXMethodDecl 0x5615b8968778 <line:75:5, col:69> col:21 compare_swap 'uint32_t (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x5615b8968668 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x5615b89686e0 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5615b89689c8 <line:76:5, col:97> col:17 compare_and_swap 'bool (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x5615b8968838 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x5615b89688b0 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x5615b8968a78 <col:86> "" ""
|-CXXMethodDecl 0x5615b8968ce8 <line:78:5, col:71> col:28 used swap 'uint32_t (volatile uint32_t &, uint32_t)' static inline
| |-ParmVarDecl 0x5615b8968b58 <col:33, col:52> col:52 x 'volatile uint32_t &'
| `-ParmVarDecl 0x5615b8968bd0 <col:55, col:64> col:64 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5615b8968e98 <line:79:5, col:48> col:24 used inc 'void (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x5615b8968da8 <col:28, col:47> col:47 x 'volatile uint32_t &'
|-CXXMethodDecl 0x5615b8969048 <line:80:5, col:57> col:24 used dec_and_test 'bool (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x5615b8968f50 <col:37, col:56> col:56 x 'volatile uint32_t &'
|-CXXMethodDecl 0x5615b8969318 <line:81:5, col:98> col:28 compare_swap 'uint32_t (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x5615b8969100 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x5615b8969178 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x5615b89691f0 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5615b89695f8 <line:82:5, col:126> col:24 compare_and_swap 'bool (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x5615b89693e0 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x5615b8969458 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x5615b89694d0 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x5615b89696b0 <col:115> "" ""
|-AccessSpecDecl 0x5615b8969720 <line:84:3, col:10> col:3 private
|-FieldDecl 0x5615b8969758 <line:91:5, col:14> col:14 referenced _val 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5615b896ac70 <line:52:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x5615b896ac70
| `-ParmVarDecl 0x5615b896ad78 <col:7> col:7 'const atomic_uint32_t &'
|-CXXMethodDecl 0x5615b896ae18 <col:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x5615b896ae18
| `-ParmVarDecl 0x5615b896af28 <col:7> col:7 'atomic_uint32_t &&'
|-CXXConstructorDecl 0x5615b89a0558 <col:7> col:7 implicit used atomic_uint32_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x5615b8b92350 <col:7>
|-CXXConstructorDecl 0x5615b89a0630 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x5615b89a0630
| `-ParmVarDecl 0x5615b89a0748 <col:7> col:7 'const atomic_uint32_t &'
|-CXXConstructorDecl 0x5615b89a07b8 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x5615b89a07b8
| `-ParmVarDecl 0x5615b89a08c8 <col:7> col:7 'atomic_uint32_t &&'
`-CXXDestructorDecl 0x5615b8b94d50 <col:7> col:7 implicit ~atomic_uint32_t 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.atomic_uint32_t = type { i32 }
  NonVirtualBaseLLVMType:%class.atomic_uint32_t = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5615b8bc1248 <../elements/standard/dropbroadcasts.hh:20:1, line:37:1> line:20:7 class DropBroadcasts definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-public 'Element'
|-CXXRecordDecl 0x5615b8bc13a8 <col:1, col:7> col:7 implicit referenced class DropBroadcasts
|-AccessSpecDecl 0x5615b8bc1438 <line:21:2, col:8> col:2 public
|-CXXConstructorDecl 0x5615b8bc14c0 <line:23:3, col:18> col:3 DropBroadcasts 'void ()'
|-CXXMethodDecl 0x5615b8bc15c0 <line:25:3, col:61> col:15 class_name 'const char *() const'
| |-Overrides: [ 0x5615b8ba9f98 Element::class_name 'const char *() const' ]
| `-CompoundStmt 0x5615b8bc2460 <col:34, col:61>
|   `-ReturnStmt 0x5615b8bc2450 <col:36, col:43>
|     `-ImplicitCastExpr 0x5615b8bc2438 <col:43> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x5615b8bc2410 <col:43> 'const char [15]' lvalue "DropBroadcasts"
|-CXXMethodDecl 0x5615b8bc1688 <line:26:3, col:56> col:15 port_count 'const char *() const'
| |-Overrides: [ 0x5615b8baa060 Element::port_count 'const char *() const' ]
| `-CompoundStmt 0x5615b8bc24c0 <col:34, col:56>
|   `-ReturnStmt 0x5615b8bc24b0 <col:36, col:43>
|     `-ImplicitCastExpr 0x5615b8bc2498 <col:43> 'const char *' <ArrayToPointerDecay>
|       `-DeclRefExpr 0x5615b8bc2478 <col:43> 'const char []' lvalue Var 0x5615b8baa398 'PORTS_1_1X2' 'const char []'
|-CXXMethodDecl 0x5615b8bc1750 <line:27:3, col:60> col:15 processing 'const char *() const'
| |-Overrides: [ 0x5615b8baa428 Element::processing 'const char *() const' ]
| `-CompoundStmt 0x5615b8bc2520 <col:34, col:60>
|   `-ReturnStmt 0x5615b8bc2510 <col:36, col:43>
|     `-ImplicitCastExpr 0x5615b8bc24f8 <col:43> 'const char *' <ArrayToPointerDecay>
|       `-DeclRefExpr 0x5615b8bc24d8 <col:43> 'const char []' lvalue Var 0x5615b8baa790 'PROCESSING_A_AH' 'const char []'
|-CXXMethodDecl 0x5615b8bc1810 <line:28:3, col:21> col:8 add_handlers 'void ()'
| `-Overrides: [ 0x5615b8bab900 Element::add_handlers 'void ()' ]
|-CXXMethodDecl 0x5615b8bc18d0 <line:30:3, col:43> col:12 drops 'uint32_t () const'
| `-CompoundStmt 0x5615b8bc25f0 <col:26, col:43>
|   `-ReturnStmt 0x5615b8bc25e0 <col:28, col:35>
|     `-ImplicitCastExpr 0x5615b8bc25c8 <col:35> 'uint32_t':'unsigned int' <UserDefinedConversion>
|       `-CXXMemberCallExpr 0x5615b8bc25a8 <col:35> 'uint32_t':'unsigned int'
|         `-MemberExpr 0x5615b8bc2578 <col:35> '<bound member function type>' .operator unsigned int 0x5615b8967670
|           `-MemberExpr 0x5615b8bc2548 <col:35> 'const atomic_uint32_t' lvalue ->_drops 0x5615b8bc1c38
|             `-CXXThisExpr 0x5615b8bc2538 <col:35> 'const DropBroadcasts *' implicit this
|-CXXMethodDecl 0x5615b8bc1a10 <line:32:3, col:24> col:8 drop_it 'void (Packet *)'
| `-ParmVarDecl 0x5615b8bc1980 <col:16, col:23> col:24 'Packet *'
|-CXXMethodDecl 0x5615b8bc1b58 <line:33:3, col:33> col:11 simple_action 'Packet *(Packet *)'
| |-Overrides: [ 0x5615b8ba9178 Element::simple_action 'Packet *(Packet *)' ]
| `-ParmVarDecl 0x5615b8bc1ac8 <col:25, col:32> col:33 'Packet *'
|-AccessSpecDecl 0x5615b8bc1c00 <line:35:1, col:8> col:1 private
|-FieldDecl 0x5615b8bc1c38 <line:36:3, col:19> col:19 referenced _drops 'atomic_uint32_t'
|-CXXConstructorDecl 0x5615b8bc1cb8 <line:20:7> col:7 implicit DropBroadcasts 'void (const DropBroadcasts &)' inline default_delete noexcept-unevaluated 0x5615b8bc1cb8
| `-ParmVarDecl 0x5615b8bc1dc8 <col:7> col:7 'const DropBroadcasts &'
|-CXXConstructorDecl 0x5615b8bc1e68 <col:7> col:7 implicit DropBroadcasts 'void (DropBroadcasts &&)' inline default_delete noexcept-unevaluated 0x5615b8bc1e68
| `-ParmVarDecl 0x5615b8bc1f78 <col:7> col:7 'DropBroadcasts &&'
|-CXXMethodDecl 0x5615b8bc2018 <col:7> col:7 implicit operator= 'DropBroadcasts &(const DropBroadcasts &)' inline default_delete noexcept-unevaluated 0x5615b8bc2018
| `-ParmVarDecl 0x5615b8bc2128 <col:7> col:7 'const DropBroadcasts &'
|-CXXMethodDecl 0x5615b8bc2198 <col:7> col:7 implicit operator= 'DropBroadcasts &(DropBroadcasts &&)' inline default_delete noexcept-unevaluated 0x5615b8bc2198
| `-ParmVarDecl 0x5615b8bc22a8 <col:7> col:7 'DropBroadcasts &&'
`-CXXDestructorDecl 0x5615b8bc2330 <col:7> col:7 implicit ~DropBroadcasts 'void ()' inline default noexcept-unevaluated 0x5615b8bc2330
  `-Overrides: [ 0x5615b8ba8b38 Element::~Element 'void () noexcept' ]

Layout: <CGRecordLayout
  LLVMType:%class.DropBroadcasts = type { %class.Element.base, %class.atomic_uint32_t }
  NonVirtualBaseLLVMType:%class.DropBroadcasts = type { %class.Element.base, %class.atomic_uint32_t }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | union Packet::Anno
         0 |   char [48] c
         0 |   uint8_t [48] u8
         0 |   uint16_t [24] u16
         0 |   uint32_t [12] u32
         0 |   uint64_t [6] u64
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Packet::AllAnno
         0 |   union Packet::Anno cb
         0 |     char [48] c
         0 |     uint8_t [48] u8
         0 |     uint16_t [24] u16
         0 |     uint32_t [12] u32
         0 |     uint64_t [6] u64
        48 |   unsigned char * mac
        56 |   unsigned char * nh
        64 |   unsigned char * h
        72 |   enum Packet::PacketType pkt_type
        76 |   char [8] timestamp
        88 |   class Packet * next
        96 |   class Packet * prev
           | [sizeof=104, dsize=104, align=8,
           |  nvsize=104, nvalign=8]

*** Dumping AST Record Layout
         0 | class Packet
         0 |   class atomic_uint32_t _use_count
         0 |     uint32_t _val
         8 |   class Packet * _data_packet
        16 |   unsigned char * _head
        24 |   unsigned char * _data
        32 |   unsigned char * _tail
        40 |   unsigned char * _end
        48 |   struct Packet::AllAnno _aa
        48 |     union Packet::Anno cb
        48 |       char [48] c
        48 |       uint8_t [48] u8
        48 |       uint16_t [24] u16
        48 |       uint32_t [12] u32
        48 |       uint64_t [6] u64
        96 |     unsigned char * mac
       104 |     unsigned char * nh
       112 |     unsigned char * h
       120 |     enum Packet::PacketType pkt_type
       124 |     char [8] timestamp
       136 |     class Packet * next
       144 |     class Packet * prev
       152 |   Packet::buffer_destructor_type _destructor
       160 |   void * _destructor_argument
           | [sizeof=168, dsize=168, align=8,
           |  nvsize=168, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5615b8b80ef8 prev 0x5615b8b76100 <../dummy_inc/click/packet.hh:702:5, line:711:5> line:702:11 referenced union Anno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5615b8b80ff0 <col:5, col:11> col:11 implicit union Anno
|-FieldDecl 0x5615b8b810e0 <line:703:2, col:18> col:7 referenced c 'char [48]'
|-FieldDecl 0x5615b8b81208 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
|-FieldDecl 0x5615b8b81388 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
|-FieldDecl 0x5615b8b81508 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
|-FieldDecl 0x5615b8b81688 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
|-CXXConstructorDecl 0x5615b8b924b8 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| `-CompoundStmt 0x5615b8b92d28 <col:11>
|-CXXDestructorDecl 0x5615b8b92590 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x5615b8b926c8 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x5615b8b926c8
| `-ParmVarDecl 0x5615b8b927d8 <col:11> col:11 'const Packet::Anno &'
|-CXXConstructorDecl 0x5615b8b92878 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x5615b8b92878
| `-ParmVarDecl 0x5615b8b92988 <col:11> col:11 'Packet::Anno &&'
|-CXXMethodDecl 0x5615b8b95748 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| |-ParmVarDecl 0x5615b8b95858 <col:11> col:11 'const Packet::Anno &'
| `-CompoundStmt 0x5615b8b95ad8 <col:11>
|   `-ReturnStmt 0x5615b8b95ac8 <col:11>
|     `-UnaryOperator 0x5615b8b95ab0 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x5615b8b95aa0 <col:11> 'Packet::Anno *' this
`-CXXMethodDecl 0x5615b8b958c8 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x5615b8b958c8
  `-ParmVarDecl 0x5615b8b959d8 <col:11> col:11 'Packet::Anno &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Packet::Anno" = type { [6 x i64] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5615b8b816f0 <../dummy_inc/click/packet.hh:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5615b8b81808 <col:5, col:12> col:12 implicit struct AllAnno
|-FieldDecl 0x5615b8b818a8 <line:717:2, col:7> col:7 cb 'Packet::Anno'
|-FieldDecl 0x5615b8b81910 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
|-FieldDecl 0x5615b8b81978 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
|-FieldDecl 0x5615b8b819e0 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
|-FieldDecl 0x5615b8b81a40 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
|-FieldDecl 0x5615b8b81b00 <line:722:2, col:34> col:7 timestamp 'char [8]'
|-FieldDecl 0x5615b8b81b60 <line:723:2, col:10> col:10 referenced next 'Packet *'
|-FieldDecl 0x5615b8b81bc0 <line:724:2, col:10> col:10 referenced prev 'Packet *'
|-CXXConstructorDecl 0x5615b8b923c8 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| |-CXXCtorInitializer Field 0x5615b8b818a8 'cb' 'Packet::Anno'
| | `-CXXConstructExpr 0x5615b8b92d38 <col:12> 'Packet::Anno' 'void () noexcept'
| `-CompoundStmt 0x5615b8b92d90 <col:12>
|-CXXConstructorDecl 0x5615b8b929f8 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x5615b8b929f8
| `-ParmVarDecl 0x5615b8b92b08 <col:12> col:12 'const Packet::AllAnno &'
|-CXXConstructorDecl 0x5615b8b92ba8 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x5615b8b92ba8
| `-ParmVarDecl 0x5615b8b92cb8 <col:12> col:12 'Packet::AllAnno &&'
`-CXXDestructorDecl 0x5615b8b94e30 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  NonVirtualBaseLLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5615b8b6f810 <../dummy_inc/click/packet.hh:35:1, line:775:1> line:35:7 referenced class Packet definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x5615b8b6f928 <col:1, col:7> col:7 implicit referenced class Packet
|-AccessSpecDecl 0x5615b8b6f9b8 <col:16, col:22> col:16 public
|-EnumDecl 0x5615b8b6f9e0 <line:41:5, line:50:5> line:41:5
| |-EnumConstantDecl 0x5615b8b6fae0 <line:45:2, col:21> col:2 referenced default_headroom 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| | `-ImplicitCastExpr 0x5615b8b6fbc0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5615b8b6fac0 <col:21> 'int' Int: 28
| |     `-IntegerLiteral 0x5615b8b6faa0 <col:21> 'int' 28
| `-EnumConstantDecl 0x5615b8b6fb70 <line:48:2, col:22> col:2 referenced min_buffer_length 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
|   `-ImplicitCastExpr 0x5615b8b6fbd8 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5615b8b6fb50 <col:22> 'int' Int: 64
|       `-IntegerLiteral 0x5615b8b6fb30 <col:22> 'int' 64
|-CXXMethodDecl 0x5615b8b6ff18 <line:52:5, line:53:75> line:52:28 used make 'WritablePacket *(uint32_t, const void *, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x5615b8b6fc00 <col:33, col:42> col:42 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x5615b8b6fc80 <col:52, col:64> col:64 data 'const void *'
| |-ParmVarDecl 0x5615b8b6fcf8 <line:53:5, col:14> col:14 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x5615b8b6fd70 <col:22, col:31> col:31 tailroom 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x5615b8b6ffd8 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x5615b8b701d8 <line:54:5, col:109> col:35 make 'WritablePacket *(const void *, uint32_t)' static inline
| |-ParmVarDecl 0x5615b8b70050 <col:40, col:52> col:52 data 'const void *'
| |-ParmVarDecl 0x5615b8b700c8 <col:58, col:67> col:67 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x5615b8b70288 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x5615b8b703e8 <line:55:5, col:91> col:35 make 'WritablePacket *(uint32_t)' static inline
| |-ParmVarDecl 0x5615b8b702f8 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x5615b8b70490 <col:72> warn_unused_result ""
|-TypedefDecl 0x5615b8b707f0 <line:65:5, col:89> col:20 referenced buffer_destructor_type 'void (*)(unsigned char *, size_t, void *)'
| `-PointerType 0x5615b8b70780 'void (*)(unsigned char *, size_t, void *)'
|   `-ParenType 0x5615b8b70720 'void (unsigned char *, size_t, void *)' sugar
|     `-FunctionProtoType 0x5615b8b706e0 'void (unsigned char *, size_t, void *)' cdecl
|       |-BuiltinType 0x5615b8649310 'void'
|       |-PointerType 0x5615b88efbb0 'unsigned char *'
|       | `-BuiltinType 0x5615b8649410 'unsigned char'
|       |-TypedefType 0x5615b86ec1a0 'size_t' sugar
|       | |-Typedef 0x5615b86b9af0 'size_t'
|       | `-BuiltinType 0x5615b8649470 'unsigned long'
|       `-PointerType 0x5615b8649b10 'void *'
|         `-BuiltinType 0x5615b8649310 'void'
|-CXXMethodDecl 0x5615b8b70c68 <line:66:5, line:68:131> line:66:28 make 'WritablePacket *(unsigned char *, uint32_t, Packet::buffer_destructor_type, void *, int, int)' static
| |-ParmVarDecl 0x5615b8b70860 <col:33, col:48> col:48 data 'unsigned char *'
| |-ParmVarDecl 0x5615b8b708d8 <col:54, col:63> col:63 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x5615b8b70970 <line:67:5, col:28> col:28 buffer_destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| |-ParmVarDecl 0x5615b8b709f0 <line:68:33, col:58> col:39 argument 'void *' cinit
| | `-CStyleCastExpr 0x5615b8b8b360 <col:50, col:58> 'void *' <NoOp>
| |   `-ImplicitCastExpr 0x5615b8b8b348 <col:58> 'void *' <NullToPointer> part_of_explicit_cast
| |     `-IntegerLiteral 0x5615b8b8b310 <col:58> 'int' 0
| |-ParmVarDecl 0x5615b8b70a70 <col:61, col:76> col:65 headroom 'int' cinit
| | `-IntegerLiteral 0x5615b8b8b388 <col:76> 'int' 0
| |-ParmVarDecl 0x5615b8b70af0 <col:79, col:94> col:83 tailroom 'int' cinit
| | `-IntegerLiteral 0x5615b8b8b3a8 <col:94> 'int' 0
| `-WarnUnusedResultAttr 0x5615b8b70d38 <col:112> warn_unused_result ""
|-CXXMethodDecl 0x5615b8b70db8 <line:71:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x5615b8b70e78 <line:73:5, col:50> col:45 used kill 'void ()'
| |-NoInlineAttr 0x5615b8b70f18 <col:20>
| `-OptimizeNoneAttr 0x5615b8b70f70 <col:30>
|-CXXMethodDecl 0x5615b8b70fe8 <line:75:5, col:54> col:45 used shared 'bool () const'
| |-NoInlineAttr 0x5615b8b71088 <col:20>
| `-OptimizeNoneAttr 0x5615b8b710e0 <col:30>
|-CXXMethodDecl 0x5615b8b71158 <line:76:5, col:55> col:13 clone 'Packet *()'
| `-WarnUnusedResultAttr 0x5615b8b711f8 <col:36> warn_unused_result ""
|-CXXMethodDecl 0x5615b8b712a8 <line:77:5, col:102> col:56 uniqueify 'WritablePacket *()'
| |-NoInlineAttr 0x5615b8b71348 <col:20>
| |-OptimizeNoneAttr 0x5615b8b713a0 <col:30>
| `-WarnUnusedResultAttr 0x5615b8b713c8 <col:83> warn_unused_result ""
|-CXXMethodDecl 0x5615b8b71420 <line:79:5, col:68> col:61 used data 'const unsigned char *() const'
| |-NoInlineAttr 0x5615b8b714c0 <col:20>
| `-OptimizeNoneAttr 0x5615b8b71518 <col:30>
|-CXXMethodDecl 0x5615b8b71568 <line:80:5, col:72> col:61 used end_data 'const unsigned char *() const'
| |-NoInlineAttr 0x5615b8b71608 <col:20>
| `-OptimizeNoneAttr 0x5615b8b71660 <col:30>
|-CXXMethodDecl 0x5615b8b716a8 <line:81:5, col:58> col:49 length 'uint32_t () const'
| |-NoInlineAttr 0x5615b8b71748 <col:20>
| `-OptimizeNoneAttr 0x5615b8b717a0 <col:30>
|-CXXMethodDecl 0x5615b8b717e8 <line:82:5, col:32> col:21 used headroom 'uint32_t () const' inline
|-CXXMethodDecl 0x5615b8b718a8 <line:83:5, col:32> col:21 used tailroom 'uint32_t () const' inline
|-CXXMethodDecl 0x5615b8b71970 <line:84:5, col:42> col:33 used buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x5615b8b71a38 <line:85:5, col:46> col:33 used end_buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x5615b8b71af8 <line:86:5, col:37> col:21 used buffer_length 'uint32_t () const' inline
|-CXXMethodDecl 0x5615b8b71c18 <line:97:5, line:99:5> line:97:28 buffer_destructor 'Packet::buffer_destructor_type () const'
| `-CompoundStmt 0x5615b8b8b470 <col:54, line:99:5>
|   `-ReturnStmt 0x5615b8b8b460 <line:98:2, col:9>
|     `-ImplicitCastExpr 0x5615b8b8b448 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-MemberExpr 0x5615b8b8b418 <col:9> 'const Packet::buffer_destructor_type':'void (*const)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x5615b8b81ef8
|         `-CXXThisExpr 0x5615b8b8b408 <col:9> 'const Packet *' implicit this
|-CXXMethodDecl 0x5615b8b71db8 <line:101:5, line:103:5> line:101:10 set_buffer_destructor 'void (Packet::buffer_destructor_type)'
| |-ParmVarDecl 0x5615b8b71cc8 <col:32, col:55> col:55 used destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| `-CompoundStmt 0x5615b8b8b520 <col:67, line:103:5>
|   `-BinaryOperator 0x5615b8b8b500 <line:102:9, col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x5615b8b8b498 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x5615b8b81ef8
|     | `-CXXThisExpr 0x5615b8b8b488 <col:9> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x5615b8b8b4e8 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-DeclRefExpr 0x5615b8b8b4c8 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ParmVar 0x5615b8b71cc8 'destructor' 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-CXXMethodDecl 0x5615b8b71eb0 <line:105:5, line:107:5> line:105:11 destructor_argument 'void *()'
| `-CompoundStmt 0x5615b8b8b5a0 <col:33, line:107:5>
|   `-ReturnStmt 0x5615b8b8b590 <line:106:9, col:16>
|     `-ImplicitCastExpr 0x5615b8b8b578 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x5615b8b8b548 <col:16> 'void *' lvalue ->_destructor_argument 0x5615b8b81f60
|         `-CXXThisExpr 0x5615b8b8b538 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x5615b8b71f70 <line:109:5, line:113:5> line:109:10 reset_buffer 'void ()'
| `-CompoundStmt 0x5615b8b8bbd0 <col:25, line:113:5>
|   |-ParenExpr 0x5615b8b8b918 <line:110:2, col:146> 'void'
|   | `-ConditionalOperator 0x5615b8b8b8e8 <col:3, col:145> 'void'
|   |   |-CXXStaticCastExpr 0x5615b8b8b658 <col:3, col:32> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x5615b8b8b630 <col:23, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-CXXMemberCallExpr 0x5615b8b8b5f8 <col:24, col:31> 'bool'
|   |   |     `-MemberExpr 0x5615b8b8b5c8 <col:24> '<bound member function type>' ->shared 0x5615b8b70fe8
|   |   |       `-ImplicitCastExpr 0x5615b8b8b618 <col:24> 'const Packet *' <NoOp>
|   |   |         `-CXXThisExpr 0x5615b8b8b5b8 <col:24> 'Packet *' implicit this
|   |   |-CXXFunctionalCastExpr 0x5615b8b8b6b8 <col:36, col:43> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5615b8b8b698 <col:42> 'int' 0
|   |   `-CallExpr 0x5615b8b8b848 <col:47, col:145> 'void'
|   |     |-ImplicitCastExpr 0x5615b8b8b830 <col:47> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5615b8b8b810 <col:47> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5615b86e2f60 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5615b8b8b888 <col:62> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5615b8b8b728 <col:62> 'const char [10]' lvalue "!shared()"
|   |     |-ImplicitCastExpr 0x5615b8b8b8a0 <col:75> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5615b8b8b750 <col:75> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5615b8b8b8b8 <col:107> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5615b8b8b788 <col:107> 'int' 110
|   |     `-ImplicitCastExpr 0x5615b8b8b8d0 <col:112, col:126> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5615b8b8b7f8 <col:112, col:126> 'const char [28]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5615b8b8b7e0 <col:126> 'const char [28]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5615b8b8b7a8 <col:126> 'const char [28]' lvalue "void Packet::reset_buffer()"
|   |-BinaryOperator 0x5615b8b8bb18 <line:111:2, col:33> 'unsigned char *' lvalue '='
|   | |-MemberExpr 0x5615b8b8b948 <col:2> 'unsigned char *' lvalue ->_head 0x5615b8b81d00
|   | | `-CXXThisExpr 0x5615b8b8b938 <col:2> 'Packet *' implicit this
|   | `-ImplicitCastExpr 0x5615b8b8bb00 <col:10, col:33> 'unsigned char *' <LValueToRValue>
|   |   `-BinaryOperator 0x5615b8b8bae0 <col:10, col:33> 'unsigned char *' lvalue '='
|   |     |-MemberExpr 0x5615b8b8b988 <col:10> 'unsigned char *' lvalue ->_data 0x5615b8b81d68
|   |     | `-CXXThisExpr 0x5615b8b8b978 <col:10> 'Packet *' implicit this
|   |     `-ImplicitCastExpr 0x5615b8b8bac8 <col:18, col:33> 'unsigned char *' <LValueToRValue>
|   |       `-BinaryOperator 0x5615b8b8baa8 <col:18, col:33> 'unsigned char *' lvalue '='
|   |         |-MemberExpr 0x5615b8b8b9c8 <col:18> 'unsigned char *' lvalue ->_tail 0x5615b8b81dd0
|   |         | `-CXXThisExpr 0x5615b8b8b9b8 <col:18> 'Packet *' implicit this
|   |         `-ImplicitCastExpr 0x5615b8b8ba90 <col:26, col:33> 'unsigned char *' <LValueToRValue>
|   |           `-BinaryOperator 0x5615b8b8ba70 <col:26, col:33> 'unsigned char *' lvalue '='
|   |             |-MemberExpr 0x5615b8b8ba08 <col:26> 'unsigned char *' lvalue ->_end 0x5615b8b81e38
|   |             | `-CXXThisExpr 0x5615b8b8b9f8 <col:26> 'Packet *' implicit this
|   |             `-ImplicitCastExpr 0x5615b8b8ba58 <col:33> 'unsigned char *' <NullToPointer>
|   |               `-IntegerLiteral 0x5615b8b8ba38 <col:33> 'int' 0
|   `-BinaryOperator 0x5615b8b8bbb0 <line:112:2, col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x5615b8b8bb48 <col:2> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x5615b8b81ef8
|     | `-CXXThisExpr 0x5615b8b8bb38 <col:2> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x5615b8b8bb98 <col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <NullToPointer>
|       `-IntegerLiteral 0x5615b8b8bb78 <col:16> 'int' 0
|-CXXMethodDecl 0x5615b8b720b0 <line:141:5, col:109> col:56 push 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x5615b8b72020 <col:61, col:70> col:70 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x5615b8b72158 <col:20>
| |-OptimizeNoneAttr 0x5615b8b721b0 <col:30>
| `-WarnUnusedResultAttr 0x5615b8b721d8 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x5615b8b722a8 <line:152:5, col:120> col:56 push_mac_header 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x5615b8b72218 <col:72, col:81> col:81 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x5615b8b72350 <col:20>
| |-OptimizeNoneAttr 0x5615b8b723a8 <col:30>
| `-WarnUnusedResultAttr 0x5615b8b723d0 <col:101> warn_unused_result ""
|-CXXMethodDecl 0x5615b8b72508 <line:171:5, col:76> col:13 nonunique_push 'Packet *(uint32_t)'
| |-ParmVarDecl 0x5615b8b72410 <col:28, col:37> col:37 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x5615b8b725b0 <col:57> warn_unused_result ""
|-CXXMethodDecl 0x5615b8b726b0 <line:187:5, col:62> col:45 pull 'void (uint32_t)'
| |-ParmVarDecl 0x5615b8b72620 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x5615b8b72758 <col:20>
| `-OptimizeNoneAttr 0x5615b8b727b0 <col:30>
|-CXXMethodDecl 0x5615b8b72878 <line:213:5, col:73> col:21 put 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x5615b8b727e8 <col:25, col:34> col:34 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x5615b8b72920 <col:54> warn_unused_result ""
|-CXXMethodDecl 0x5615b8b72a20 <line:230:5, col:75> col:13 nonunique_put 'Packet *(uint32_t)'
| |-ParmVarDecl 0x5615b8b72990 <col:27, col:36> col:36 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x5615b8b72ac8 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x5615b8b72bc8 <line:245:5, col:62> col:45 take 'void (uint32_t)'
| |-ParmVarDecl 0x5615b8b72b38 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x5615b8b72c70 <col:20>
| `-OptimizeNoneAttr 0x5615b8b72cc8 <col:30>
|-CXXMethodDecl 0x5615b8b72e58 <line:269:5, col:99> col:13 shift_data 'Packet *(int, bool)'
| |-ParmVarDecl 0x5615b8b72d08 <col:24, col:28> col:28 offset 'int'
| |-ParmVarDecl 0x5615b8b72d80 <col:36, col:59> col:41 free_on_failure 'bool' cinit
| | `-CXXBoolLiteralExpr 0x5615b8b8b3c8 <col:59> 'bool' true
| `-WarnUnusedResultAttr 0x5615b8b72f08 <col:80> warn_unused_result ""
|-CXXMethodDecl 0x5615b8b73108 <line:271:5, col:71> col:17 shrink_data 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x5615b8b72f80 <col:29, col:50> col:50 data 'const unsigned char *'
| `-ParmVarDecl 0x5615b8b72ff8 <col:56, col:65> col:65 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5615b8b73318 <line:272:5, col:78> col:17 change_headroom_and_length 'void (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x5615b8b731c8 <col:44, col:53> col:53 headroom 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x5615b8b73240 <col:63, col:72> col:72 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5615b8b73528 <line:274:5, col:40> col:10 copy 'bool (Packet *, int)'
| |-ParmVarDecl 0x5615b8b733d8 <col:15, col:23> col:23 p 'Packet *'
| `-ParmVarDecl 0x5615b8b73458 <col:26, col:39> col:30 headroom 'int' cinit
|   `-IntegerLiteral 0x5615b8b8b3d8 <col:39> 'int' 0
|-CXXMethodDecl 0x5615b8b735f8 <line:279:5, col:34> col:17 has_mac_header 'bool () const' inline
|-CXXMethodDecl 0x5615b8b736c0 <line:280:5, col:46> col:33 used mac_header 'const unsigned char *() const' inline
|-CXXMethodDecl 0x5615b8b73788 <line:281:5, col:36> col:16 mac_header_offset 'int () const' inline
|-CXXMethodDecl 0x5615b8b73848 <line:282:5, col:41> col:21 mac_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x5615b8b73910 <line:283:5, col:29> col:16 mac_length 'int () const' inline
|-CXXMethodDecl 0x5615b8b73a58 <line:284:5, col:54> col:17 set_mac_header 'void (const unsigned char *)' inline
| `-ParmVarDecl 0x5615b8b739c8 <col:32, col:53> col:53 p 'const unsigned char *'
|-CXXMethodDecl 0x5615b8b73c28 <line:285:5, col:68> col:17 used set_mac_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x5615b8b73b18 <col:32, col:53> col:53 p 'const unsigned char *'
| `-ParmVarDecl 0x5615b8b73b90 <col:56, col:65> col:65 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5615b8b73cf8 <line:286:5, col:34> col:17 clear_mac_header 'void ()' inline
|-CXXMethodDecl 0x5615b8b73db8 <line:288:5, col:66> col:45 has_network_header 'bool () const'
| |-NoInlineAttr 0x5615b8b73e58 <col:20>
| `-OptimizeNoneAttr 0x5615b8b73eb0 <col:30>
|-CXXMethodDecl 0x5615b8b73f00 <line:289:5, col:78> col:61 used network_header 'const unsigned char *() const'
| |-NoInlineAttr 0x5615b8b73fa0 <col:20>
| `-OptimizeNoneAttr 0x5615b8b73ff8 <col:30>
|-CXXMethodDecl 0x5615b8b74048 <line:290:5, col:40> col:16 used network_header_offset 'int () const' inline
|-CXXMethodDecl 0x5615b8b74108 <line:291:5, col:45> col:21 used network_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x5615b8b741d0 <line:292:5, col:61> col:44 network_length 'int () const'
| |-NoInlineAttr 0x5615b8b74270 <col:20>
| `-OptimizeNoneAttr 0x5615b8b742c8 <col:30>
|-CXXMethodDecl 0x5615b8b74418 <line:293:5, col:72> col:17 set_network_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x5615b8b74308 <col:36, col:57> col:57 p 'const unsigned char *'
| `-ParmVarDecl 0x5615b8b74380 <col:60, col:69> col:69 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5615b8b74568 <line:294:5, col:55> col:17 set_network_header_length 'void (uint32_t)' inline
| `-ParmVarDecl 0x5615b8b744d8 <col:43, col:52> col:52 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5615b8b74640 <line:295:5, col:38> col:17 clear_network_header 'void ()' inline
|-CXXMethodDecl 0x5615b8b74700 <line:297:5, col:68> col:45 has_transport_header 'bool () const'
| |-NoInlineAttr 0x5615b8b747a0 <col:20>
| `-OptimizeNoneAttr 0x5615b8b747f8 <col:30>
|-CXXMethodDecl 0x5615b8b74848 <line:298:5, col:80> col:61 used transport_header 'const unsigned char *() const'
| |-NoInlineAttr 0x5615b8b748e8 <col:20>
| `-OptimizeNoneAttr 0x5615b8b74940 <col:30>
|-CXXMethodDecl 0x5615b8b74990 <line:299:5, col:42> col:16 transport_header_offset 'int () const' inline
|-CXXMethodDecl 0x5615b8b74a58 <line:300:5, col:63> col:44 transport_length 'int () const'
| |-NoInlineAttr 0x5615b8b74af8 <col:20>
| `-OptimizeNoneAttr 0x5615b8b74b50 <col:30>
|-CXXMethodDecl 0x5615b8b74b98 <line:301:5, col:40> col:17 clear_transport_header 'void ()' inline
|-CXXMethodDecl 0x5615b8b74cb8 <line:304:5, col:46> col:31 ether_header 'const click_ether *() const' inline
|-CXXMethodDecl 0x5615b8b74e28 <line:305:5, col:57> col:17 set_ether_header 'void (const click_ether *)' inline
| `-ParmVarDecl 0x5615b8b74d68 <col:34, col:53> col:53 ethh 'const click_ether *'
|-CXXMethodDecl 0x5615b8b74f18 <line:307:5, col:68> col:56 ip_header 'const click_ip *() const'
| |-NoInlineAttr 0x5615b8b74fb8 <col:20>
| `-OptimizeNoneAttr 0x5615b8b75010 <col:30>
|-CXXMethodDecl 0x5615b8b75060 <line:308:5, col:35> col:16 ip_header_offset 'int () const' inline
|-CXXMethodDecl 0x5615b8b75120 <line:309:5, col:40> col:21 ip_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x5615b8b75358 <line:310:5, col:92> col:45 set_ip_header 'void (const click_ip *, uint32_t)'
| |-ParmVarDecl 0x5615b8b751d0 <col:59, col:75> col:75 iph 'const click_ip *'
| |-ParmVarDecl 0x5615b8b75248 <col:80, col:89> col:89 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x5615b8b75408 <col:20>
| `-OptimizeNoneAttr 0x5615b8b75460 <col:30>
|-CXXMethodDecl 0x5615b8b75508 <line:312:5, col:70> col:57 ip6_header 'const click_ip6 *() const'
| |-NoInlineAttr 0x5615b8b755a8 <col:20>
| `-OptimizeNoneAttr 0x5615b8b75600 <col:30>
|-CXXMethodDecl 0x5615b8b75650 <line:313:5, col:64> col:44 ip6_header_offset 'int () const'
| |-NoInlineAttr 0x5615b8b756f0 <col:20>
| `-OptimizeNoneAttr 0x5615b8b75748 <col:30>
|-CXXMethodDecl 0x5615b8b75790 <line:314:5, col:69> col:49 ip6_header_length 'uint32_t () const'
| |-NoInlineAttr 0x5615b8b75830 <col:20>
| `-OptimizeNoneAttr 0x5615b8b75888 <col:30>
|-CXXMethodDecl 0x5615b8b75988 <line:315:5, col:81> col:45 set_ip6_header 'void (const click_ip6 *)'
| |-ParmVarDecl 0x5615b8b758c0 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-NoInlineAttr 0x5615b8b75a30 <col:20>
| `-OptimizeNoneAttr 0x5615b8b75a88 <col:30>
|-CXXMethodDecl 0x5615b8b75c48 <line:316:5, col:95> col:45 set_ip6_header 'void (const click_ip6 *, uint32_t)'
| |-ParmVarDecl 0x5615b8b75ac0 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-ParmVarDecl 0x5615b8b75b38 <col:83, col:92> col:92 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x5615b8b75cf8 <col:20>
| `-OptimizeNoneAttr 0x5615b8b75d50 <col:30>
|-CXXMethodDecl 0x5615b8b75df8 <line:318:5, col:44> col:30 used icmp_header 'const click_icmp *() const' inline
|-CXXMethodDecl 0x5615b8b75f18 <line:319:5, col:42> col:29 used tcp_header 'const click_tcp *() const' inline
|-CXXMethodDecl 0x5615b8b76038 <line:320:5, col:42> col:29 used udp_header 'const click_udp *() const' inline
|-AccessSpecDecl 0x5615b8b760d8 <line:333:3, col:10> col:3 private
|-CXXRecordDecl 0x5615b8b76100 <line:335:5, col:11> col:11 referenced union Anno
|-CXXMethodDecl 0x5615b8b76228 <line:340:5, col:60> col:52 used xanno 'const Packet::Anno *() const'
| |-NoInlineAttr 0x5615b8b762c8 <col:20>
| `-OptimizeNoneAttr 0x5615b8b76320 <col:30>
|-CXXMethodDecl 0x5615b8b763c8 <line:341:5, col:52> col:46 used xanno 'Packet::Anno *()'
| |-NoInlineAttr 0x5615b8b76468 <col:20>
| `-OptimizeNoneAttr 0x5615b8b764c0 <col:30>
|-AccessSpecDecl 0x5615b8b764e8 <line:344:3, col:9> col:3 public
|-EnumDecl 0x5615b8b76510 <line:349:5, line:351:5> line:349:5
| `-EnumConstantDecl 0x5615b8b76610 <line:350:2, col:14> col:2 referenced anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   `-ImplicitCastExpr 0x5615b8b76660 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5615b8b765f0 <col:14> 'int' Int: 48
|       `-IntegerLiteral 0x5615b8b765d0 <col:14> 'int' 48
|-CXXMethodDecl 0x5615b8b766c8 <line:354:5, col:74> col:57 used timestamp_anno 'const Timestamp &() const'
| |-NoInlineAttr 0x5615b8b76768 <col:20>
| `-OptimizeNoneAttr 0x5615b8b767c0 <col:30>
|-CXXMethodDecl 0x5615b8b76838 <line:356:5, col:66> col:51 used timestamp_anno 'Timestamp &()'
| |-NoInlineAttr 0x5615b8b768d8 <col:20>
| `-OptimizeNoneAttr 0x5615b8b76930 <col:30>
|-CXXMethodDecl 0x5615b8b769f8 <line:359:5, col:54> col:17 used set_timestamp_anno 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x5615b8b76968 <col:36, col:53> col:53 t 'const Timestamp &'
|-CXXMethodDecl 0x5615b8b76b98 <line:362:5, col:38> col:24 used device_anno 'net_device *() const' inline
|-CXXMethodDecl 0x5615b8b76d38 <line:364:5, col:48> col:17 used set_device_anno 'void (net_device *)' inline
| `-ParmVarDecl 0x5615b8b76c48 <col:33, col:45> col:45 dev 'net_device *'
|-EnumDecl 0x5615b8b76de0 <line:368:5, line:381:5> line:368:10 referenced PacketType
| |-EnumConstantDecl 0x5615b8b76ee0 <line:369:2, col:9> col:2 HOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x5615b8b77290 <col:9> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5615b8b76ec0 <col:9> 'int' Int: 0
| |     `-IntegerLiteral 0x5615b8b76ea0 <col:9> 'int' 0
| |-EnumConstantDecl 0x5615b8b76f70 <line:370:2, col:14> col:2 BROADCAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x5615b8b772a8 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5615b8b76f50 <col:14> 'int' Int: 1
| |     `-IntegerLiteral 0x5615b8b76f30 <col:14> 'int' 1
| |-EnumConstantDecl 0x5615b8b77000 <line:372:2, col:14> col:2 MULTICAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x5615b8b772c0 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5615b8b76fe0 <col:14> 'int' Int: 2
| |     `-IntegerLiteral 0x5615b8b76fc0 <col:14> 'int' 2
| |-EnumConstantDecl 0x5615b8b77090 <line:374:2, col:14> col:2 OTHERHOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x5615b8b772d8 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5615b8b77070 <col:14> 'int' Int: 3
| |     `-IntegerLiteral 0x5615b8b77050 <col:14> 'int' 3
| |-EnumConstantDecl 0x5615b8b77120 <line:377:2, col:13> col:2 OUTGOING 'Packet::PacketType'
| | `-ImplicitCastExpr 0x5615b8b772f0 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5615b8b77100 <col:13> 'int' Int: 4
| |     `-IntegerLiteral 0x5615b8b770e0 <col:13> 'int' 4
| |-EnumConstantDecl 0x5615b8b771b0 <line:379:2, col:13> col:2 LOOPBACK 'Packet::PacketType'
| | `-ImplicitCastExpr 0x5615b8b77308 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5615b8b77190 <col:13> 'int' Int: 5
| |     `-IntegerLiteral 0x5615b8b77170 <col:13> 'int' 5
| `-EnumConstantDecl 0x5615b8b77240 <line:380:2, col:14> col:2 FASTROUTE 'Packet::PacketType'
|   `-ImplicitCastExpr 0x5615b8b77320 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5615b8b77220 <col:14> 'int' Int: 6
|       `-IntegerLiteral 0x5615b8b77200 <col:14> 'int' 6
|-CXXMethodDecl 0x5615b8b77388 <line:383:5, col:70> col:51 used packet_type_anno 'Packet::PacketType () const'
| |-NoInlineAttr 0x5615b8b77428 <col:20>
| `-OptimizeNoneAttr 0x5615b8b77480 <col:30>
|-CXXMethodDecl 0x5615b8b77578 <line:385:5, col:78> col:45 used set_packet_type_anno 'void (Packet::PacketType)'
| |-ParmVarDecl 0x5615b8b774b8 <col:66, col:77> col:77 t 'Packet::PacketType'
| |-NoInlineAttr 0x5615b8b77620 <col:20>
| `-OptimizeNoneAttr 0x5615b8b77678 <col:30>
|-CXXMethodDecl 0x5615b8b776e8 <line:410:5, col:27> col:20 next 'Packet *() const' inline
|-CXXMethodDecl 0x5615b8b77810 <line:412:5, col:26> col:21 next 'Packet *&()' inline
|-CXXMethodDecl 0x5615b8b77988 <line:414:5, col:35> col:17 set_next 'void (Packet *)' inline
| `-ParmVarDecl 0x5615b8b778c0 <col:26, col:34> col:34 p 'Packet *'
|-CXXMethodDecl 0x5615b8b77a50 <line:417:5, col:27> col:20 prev 'Packet *() const' inline
|-CXXMethodDecl 0x5615b8b77b18 <line:419:5, col:26> col:21 prev 'Packet *&()' inline
|-CXXMethodDecl 0x5615b8b77c58 <line:421:5, col:35> col:17 set_prev 'void (Packet *)' inline
| `-ParmVarDecl 0x5615b8b77bc8 <col:26, col:34> col:34 p 'Packet *'
|-EnumDecl 0x5615b8b77d00 <line:423:5, line:426:5> line:423:5
| |-EnumConstantDecl 0x5615b8b77e00 <line:424:2, col:23> col:2 referenced dst_ip_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x5615b8b78000 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5615b8b77de0 <col:23> 'int' Int: 0
| |     `-IntegerLiteral 0x5615b8b77dc0 <col:23> 'int' 0
| |-EnumConstantDecl 0x5615b8b77e90 <col:26, col:45> col:26 dst_ip_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x5615b8b78018 <col:45> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5615b8b77e70 <col:45> 'int' Int: 4
| |     `-IntegerLiteral 0x5615b8b77e50 <col:45> 'int' 4
| |-EnumConstantDecl 0x5615b8b77f20 <line:425:2, col:24> col:2 dst_ip6_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x5615b8b78030 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5615b8b77f00 <col:24> 'int' Int: 0
| |     `-IntegerLiteral 0x5615b8b77ee0 <col:24> 'int' 0
| `-EnumConstantDecl 0x5615b8b77fb0 <col:27, col:47> col:27 dst_ip6_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
|   `-ImplicitCastExpr 0x5615b8b78048 <col:47> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5615b8b77f90 <col:47> 'int' Int: 16
|       `-IntegerLiteral 0x5615b8b77f70 <col:47> 'int' 16
|-CXXMethodDecl 0x5615b8b780a8 <line:431:5, col:36> col:22 dst_ip_anno 'IPAddress () const' inline
|-CXXMethodDecl 0x5615b8b78218 <line:436:5, col:75> col:45 set_dst_ip_anno 'void (IPAddress)'
| |-ParmVarDecl 0x5615b8b78158 <col:61, col:71> col:71 addr 'IPAddress'
| |-NoInlineAttr 0x5615b8b782c0 <col:20>
| `-OptimizeNoneAttr 0x5615b8b78318 <col:30>
|-CXXMethodDecl 0x5615b8b78368 <line:441:5, col:36> col:11 anno 'void *()'
| `-CompoundStmt 0x5615b8b8bcf0 <col:18, col:36>
|   `-ReturnStmt 0x5615b8b8bce0 <col:20, col:33>
|     `-ImplicitCastExpr 0x5615b8b8bcc8 <col:27, col:33> 'void *' <BitCast>
|       `-CXXMemberCallExpr 0x5615b8b8bca8 <col:27, col:33> 'Packet::Anno *'
|         `-MemberExpr 0x5615b8b8bc78 <col:27> '<bound member function type>' ->xanno 0x5615b8b763c8
|           `-CXXThisExpr 0x5615b8b8bc68 <col:27> 'Packet *' implicit this
|-CXXMethodDecl 0x5615b8b78460 <line:444:5, col:48> col:17 anno 'const void *() const'
| `-CompoundStmt 0x5615b8b8be00 <col:30, col:48>
|   `-ReturnStmt 0x5615b8b8bdf0 <col:32, col:45>
|     `-ImplicitCastExpr 0x5615b8b8bdd8 <col:39, col:45> 'const void *' <BitCast>
|       `-CXXMemberCallExpr 0x5615b8b8bdb8 <col:39, col:45> 'const Packet::Anno *'
|         `-MemberExpr 0x5615b8b8bd88 <col:39> '<bound member function type>' ->xanno 0x5615b8b76228
|           `-CXXThisExpr 0x5615b8b8bd78 <col:39> 'const Packet *' implicit this
|-CXXMethodDecl 0x5615b8b78548 <line:447:5, col:50> col:14 used anno_u8 'uint8_t *()'
| `-CompoundStmt 0x5615b8b8bf98 <col:24, col:50>
|   `-ReturnStmt 0x5615b8b8bf88 <col:26, col:47>
|     `-UnaryOperator 0x5615b8b8bf70 <col:33, col:47> 'uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x5615b8b8bf50 <col:34, col:47> 'uint8_t':'unsigned char' lvalue
|         |-ImplicitCastExpr 0x5615b8b8bf38 <col:34, col:43> 'uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x5615b8b8bee8 <col:34, col:43> 'uint8_t [48]' lvalue ->u8 0x5615b8b81208
|         |   `-CXXMemberCallExpr 0x5615b8b8bec8 <col:34, col:40> 'Packet::Anno *'
|         |     `-MemberExpr 0x5615b8b8be98 <col:34> '<bound member function type>' ->xanno 0x5615b8b763c8
|         |       `-CXXThisExpr 0x5615b8b8be88 <col:34> 'Packet *' implicit this
|         `-IntegerLiteral 0x5615b8b8bf18 <col:46> 'int' 0
|-CXXMethodDecl 0x5615b8b78650 <line:450:5, col:62> col:20 used anno_u8 'const uint8_t *() const'
| `-CompoundStmt 0x5615b8b8c168 <col:36, col:62>
|   `-ReturnStmt 0x5615b8b8c158 <col:38, col:59>
|     `-UnaryOperator 0x5615b8b8c140 <col:45, col:59> 'const uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x5615b8b8c120 <col:46, col:59> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x5615b8b8c108 <col:46, col:55> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x5615b8b8c080 <col:46, col:55> 'uint8_t const[48]' lvalue ->u8 0x5615b8b81208
|         |   `-CXXMemberCallExpr 0x5615b8b8c060 <col:46, col:52> 'const Packet::Anno *'
|         |     `-MemberExpr 0x5615b8b8c030 <col:46> '<bound member function type>' ->xanno 0x5615b8b76228
|         |       `-CXXThisExpr 0x5615b8b8c020 <col:46> 'const Packet *' implicit this
|         `-IntegerLiteral 0x5615b8b8c0b0 <col:58> 'int' 0
|-CXXMethodDecl 0x5615b8b78768 <line:453:5, col:53> col:15 used anno_u32 'uint32_t *()'
| `-CompoundStmt 0x5615b8b8c300 <col:26, col:53>
|   `-ReturnStmt 0x5615b8b8c2f0 <col:28, col:50>
|     `-UnaryOperator 0x5615b8b8c2d8 <col:35, col:50> 'uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x5615b8b8c2b8 <col:36, col:50> 'uint32_t':'unsigned int' lvalue
|         |-ImplicitCastExpr 0x5615b8b8c2a0 <col:36, col:45> 'uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x5615b8b8c250 <col:36, col:45> 'uint32_t [12]' lvalue ->u32 0x5615b8b81508
|         |   `-CXXMemberCallExpr 0x5615b8b8c230 <col:36, col:42> 'Packet::Anno *'
|         |     `-MemberExpr 0x5615b8b8c200 <col:36> '<bound member function type>' ->xanno 0x5615b8b763c8
|         |       `-CXXThisExpr 0x5615b8b8c1f0 <col:36> 'Packet *' implicit this
|         `-IntegerLiteral 0x5615b8b8c280 <col:49> 'int' 0
|-CXXMethodDecl 0x5615b8b78888 <line:456:5, col:65> col:21 used anno_u32 'const uint32_t *() const'
| `-CompoundStmt 0x5615b8b8c4d8 <col:38, col:65>
|   `-ReturnStmt 0x5615b8b8c4c8 <col:40, col:62>
|     `-UnaryOperator 0x5615b8b8c4b0 <col:47, col:62> 'const uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x5615b8b8c490 <col:48, col:62> 'const uint32_t':'const unsigned int' lvalue
|         |-ImplicitCastExpr 0x5615b8b8c478 <col:48, col:57> 'const uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x5615b8b8c3e8 <col:48, col:57> 'uint32_t const[12]' lvalue ->u32 0x5615b8b81508
|         |   `-CXXMemberCallExpr 0x5615b8b8c3c8 <col:48, col:54> 'const Packet::Anno *'
|         |     `-MemberExpr 0x5615b8b8c398 <col:48> '<bound member function type>' ->xanno 0x5615b8b76228
|         |       `-CXXThisExpr 0x5615b8b8c388 <col:48> 'const Packet *' implicit this
|         `-IntegerLiteral 0x5615b8b8c418 <col:61> 'int' 0
|-CXXMethodDecl 0x5615b8b78a38 <line:460:5, line:463:5> line:460:13 used anno_u8 'uint8_t (int) const'
| |-ParmVarDecl 0x5615b8b78940 <col:21, col:25> col:25 used i 'int'
| `-CompoundStmt 0x5615b8b8cba8 <col:34, line:463:5>
|   |-ParenExpr 0x5615b8b8c9f0 <line:461:2, col:174> 'void'
|   | `-ConditionalOperator 0x5615b8b8c9c0 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x5615b8b8c628 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5615b8b8c5f8 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5615b8b8c548 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5615b8b8c530 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5615b8b8c4f0 <col:23> 'int' lvalue ParmVar 0x5615b8b78940 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5615b8b8c510 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5615b8b8c5d8 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5615b8b8c5a8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5615b8b8c568 <col:33> 'int' lvalue ParmVar 0x5615b8b78940 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x5615b8b8c5c0 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x5615b8b8c588 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5615b8b76610 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x5615b8b8c688 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5615b8b8c668 <col:56> 'int' 0
|   |   `-CallExpr 0x5615b8b8c920 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x5615b8b8c908 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5615b8b8c8e8 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5615b86e2f60 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5615b8b8c960 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5615b8b8c778 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x5615b8b8c978 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5615b8b8c7a8 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5615b8b8c990 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5615b8b8c7e0 <col:135> 'int' 461
|   |     `-ImplicitCastExpr 0x5615b8b8c9a8 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5615b8b8c8d0 <col:140, col:154> 'const char [35]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5615b8b8c8b8 <col:154> 'const char [35]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5615b8b8c878 <col:154> 'const char [35]' lvalue "uint8_t Packet::anno_u8(int) const"
|   `-ReturnStmt 0x5615b8b8cb98 <line:462:2, col:22>
|     `-ImplicitCastExpr 0x5615b8b8cb80 <col:9, col:22> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-ArraySubscriptExpr 0x5615b8b8cb60 <col:9, col:22> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x5615b8b8cb30 <col:9, col:18> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x5615b8b8cae0 <col:9, col:18> 'uint8_t const[48]' lvalue ->u8 0x5615b8b81208
|         |   `-CXXMemberCallExpr 0x5615b8b8cac0 <col:9, col:15> 'const Packet::Anno *'
|         |     `-MemberExpr 0x5615b8b8ca90 <col:9> '<bound member function type>' ->xanno 0x5615b8b76228
|         |       `-CXXThisExpr 0x5615b8b8ca80 <col:9> 'const Packet *' implicit this
|         `-ImplicitCastExpr 0x5615b8b8cb48 <col:21> 'int' <LValueToRValue>
|           `-DeclRefExpr 0x5615b8b8cb10 <col:21> 'int' lvalue ParmVar 0x5615b8b78940 'i' 'int'
|-CXXMethodDecl 0x5615b8b78c88 <line:469:5, line:472:5> line:469:10 used set_anno_u8 'void (int, uint8_t)'
| |-ParmVarDecl 0x5615b8b78af8 <col:22, col:26> col:26 used i 'int'
| |-ParmVarDecl 0x5615b8b78b70 <col:29, col:37> col:37 used x 'uint8_t':'unsigned char'
| `-CompoundStmt 0x5615b8b8d238 <col:40, line:472:5>
|   |-ParenExpr 0x5615b8b8d050 <line:470:2, col:174> 'void'
|   | `-ConditionalOperator 0x5615b8b8d020 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x5615b8b8cd00 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5615b8b8ccd0 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5615b8b8cc20 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5615b8b8cc08 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5615b8b8cbc8 <col:23> 'int' lvalue ParmVar 0x5615b8b78af8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5615b8b8cbe8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5615b8b8ccb0 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5615b8b8cc80 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5615b8b8cc40 <col:33> 'int' lvalue ParmVar 0x5615b8b78af8 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x5615b8b8cc98 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x5615b8b8cc60 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5615b8b76610 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x5615b8b8cd60 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5615b8b8cd40 <col:56> 'int' 0
|   |   `-CallExpr 0x5615b8b8cf80 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x5615b8b8cf68 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5615b8b8cf48 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5615b86e2f60 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5615b8b8cfc0 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5615b8b8cdd0 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x5615b8b8cfd8 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5615b8b8ce00 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5615b8b8cff0 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5615b8b8ce38 <col:135> 'int' 470
|   |     `-ImplicitCastExpr 0x5615b8b8d008 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5615b8b8cf30 <col:140, col:154> 'const char [39]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5615b8b8cf18 <col:154> 'const char [39]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5615b8b8ced8 <col:154> 'const char [39]' lvalue "void Packet::set_anno_u8(int, uint8_t)"
|   `-BinaryOperator 0x5615b8b8d218 <line:471:2, col:19> 'uint8_t':'unsigned char' lvalue '='
|     |-ArraySubscriptExpr 0x5615b8b8d1c0 <col:2, col:15> 'uint8_t':'unsigned char' lvalue
|     | |-ImplicitCastExpr 0x5615b8b8d190 <col:2, col:11> 'uint8_t *' <ArrayToPointerDecay>
|     | | `-MemberExpr 0x5615b8b8d140 <col:2, col:11> 'uint8_t [48]' lvalue ->u8 0x5615b8b81208
|     | |   `-CXXMemberCallExpr 0x5615b8b8d120 <col:2, col:8> 'Packet::Anno *'
|     | |     `-MemberExpr 0x5615b8b8d0f0 <col:2> '<bound member function type>' ->xanno 0x5615b8b763c8
|     | |       `-CXXThisExpr 0x5615b8b8d0e0 <col:2> 'Packet *' implicit this
|     | `-ImplicitCastExpr 0x5615b8b8d1a8 <col:14> 'int' <LValueToRValue>
|     |   `-DeclRefExpr 0x5615b8b8d170 <col:14> 'int' lvalue ParmVar 0x5615b8b78af8 'i' 'int'
|     `-ImplicitCastExpr 0x5615b8b8d200 <col:19> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-DeclRefExpr 0x5615b8b8d1e0 <col:19> 'uint8_t':'unsigned char' lvalue ParmVar 0x5615b8b78b70 'x' 'uint8_t':'unsigned char'
|-CXXMethodDecl 0x5615b8b78e48 <line:479:5, line:485:5> line:479:14 used anno_u16 'uint16_t (int) const'
| |-ParmVarDecl 0x5615b8b78d50 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x5615b8b8d9b8 <col:36, line:485:5>
|   |-ParenExpr 0x5615b8b8d720 <line:480:2, col:182> 'void'
|   | `-ConditionalOperator 0x5615b8b8d6f0 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5615b8b8d3d0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5615b8b8d3a0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5615b8b8d2b0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5615b8b8d298 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5615b8b8d258 <col:23> 'int' lvalue ParmVar 0x5615b8b78d50 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5615b8b8d278 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5615b8b8d380 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5615b8b8d368 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5615b8b8d2d0 <col:33> 'int' lvalue ParmVar 0x5615b8b78d50 'i' 'int'
|   |   |     `-BinaryOperator 0x5615b8b8d348 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5615b8b8d330 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5615b8b8d2f0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5615b8b76610 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5615b8b8d310 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x5615b8b8d430 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5615b8b8d410 <col:60> 'int' 0
|   |   `-CallExpr 0x5615b8b8d650 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5615b8b8d638 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5615b8b8d618 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5615b86e2f60 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5615b8b8d690 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5615b8b8d4a0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x5615b8b8d6a8 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5615b8b8d4d8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5615b8b8d6c0 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5615b8b8d510 <col:143> 'int' 480
|   |     `-ImplicitCastExpr 0x5615b8b8d6d8 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5615b8b8d600 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5615b8b8d5e8 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5615b8b8d5a8 <col:162> 'const char [37]' lvalue "uint16_t Packet::anno_u16(int) const"
|   `-ReturnStmt 0x5615b8b8d9a8 <line:484:2, col:75>
|     `-ImplicitCastExpr 0x5615b8b8d990 <col:9, col:75> 'click_aliasable_uint16_t':'unsigned short' <LValueToRValue>
|       `-UnaryOperator 0x5615b8b8d978 <col:9, col:75> 'const click_aliasable_uint16_t':'const unsigned short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x5615b8b8d948 <col:10, col:75> 'const click_aliasable_uint16_t *' reinterpret_cast<const click_aliasable_uint16_t *> <BitCast>
|           `-BinaryOperator 0x5615b8b8d8e8 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x5615b8b8d8b8 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x5615b8b8d830 <col:61, col:70> 'char const[48]' lvalue ->c 0x5615b8b810e0
|             |   `-CXXMemberCallExpr 0x5615b8b8d810 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x5615b8b8d7e0 <col:61> '<bound member function type>' ->xanno 0x5615b8b76228
|             |       `-CXXThisExpr 0x5615b8b8d7d0 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x5615b8b8d8d0 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x5615b8b8d860 <col:74> 'int' lvalue ParmVar 0x5615b8b78d50 'i' 'int'
|-CXXMethodDecl 0x5615b8b79098 <line:494:5, line:500:5> line:494:10 used set_anno_u16 'void (int, uint16_t)'
| |-ParmVarDecl 0x5615b8b78f08 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x5615b8b78f80 <col:30, col:39> col:39 used x 'uint16_t':'unsigned short'
| `-CompoundStmt 0x5615b8b8e108 <col:42, line:500:5>
|   |-ParenExpr 0x5615b8b8dea0 <line:495:2, col:182> 'void'
|   | `-ConditionalOperator 0x5615b8b8de70 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5615b8b8db50 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5615b8b8db20 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5615b8b8da30 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5615b8b8da18 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5615b8b8d9d8 <col:23> 'int' lvalue ParmVar 0x5615b8b78f08 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5615b8b8d9f8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5615b8b8db00 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5615b8b8dae8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5615b8b8da50 <col:33> 'int' lvalue ParmVar 0x5615b8b78f08 'i' 'int'
|   |   |     `-BinaryOperator 0x5615b8b8dac8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5615b8b8dab0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5615b8b8da70 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5615b8b76610 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5615b8b8da90 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x5615b8b8dbb0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5615b8b8db90 <col:60> 'int' 0
|   |   `-CallExpr 0x5615b8b8ddd0 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5615b8b8ddb8 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5615b8b8dd98 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5615b86e2f60 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5615b8b8de10 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5615b8b8dc20 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x5615b8b8de28 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5615b8b8dc58 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5615b8b8de40 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5615b8b8dc90 <col:143> 'int' 495
|   |     `-ImplicitCastExpr 0x5615b8b8de58 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5615b8b8dd80 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5615b8b8dd68 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5615b8b8dd28 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u16(int, uint16_t)"
|   `-BinaryOperator 0x5615b8b8e0e8 <line:499:2, col:66> 'click_aliasable_uint16_t':'unsigned short' lvalue '='
|     |-UnaryOperator 0x5615b8b8e098 <col:2, col:62> 'click_aliasable_uint16_t':'unsigned short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x5615b8b8e068 <col:3, col:62> 'click_aliasable_uint16_t *' reinterpret_cast<click_aliasable_uint16_t *> <BitCast>
|     |   `-BinaryOperator 0x5615b8b8e010 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x5615b8b8dfe0 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x5615b8b8df90 <col:48, col:57> 'char [48]' lvalue ->c 0x5615b8b810e0
|     |     |   `-CXXMemberCallExpr 0x5615b8b8df70 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x5615b8b8df40 <col:48> '<bound member function type>' ->xanno 0x5615b8b763c8
|     |     |       `-CXXThisExpr 0x5615b8b8df30 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x5615b8b8dff8 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x5615b8b8dfc0 <col:61> 'int' lvalue ParmVar 0x5615b8b78f08 'i' 'int'
|     `-ImplicitCastExpr 0x5615b8b8e0d0 <col:66> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x5615b8b8e0b0 <col:66> 'uint16_t':'unsigned short' lvalue ParmVar 0x5615b8b78f80 'x' 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x5615b8b79258 <line:507:5, line:513:5> line:507:13 anno_s16 'int16_t (int) const'
| |-ParmVarDecl 0x5615b8b79160 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x5615b8b8e868 <col:35, line:513:5>
|   |-ParenExpr 0x5615b8b8e578 <line:508:2, col:182> 'void'
|   | `-ConditionalOperator 0x5615b8b8e548 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5615b8b8e2a0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5615b8b8e270 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5615b8b8e180 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5615b8b8e168 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5615b8b8e128 <col:23> 'int' lvalue ParmVar 0x5615b8b79160 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5615b8b8e148 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5615b8b8e250 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5615b8b8e238 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5615b8b8e1a0 <col:33> 'int' lvalue ParmVar 0x5615b8b79160 'i' 'int'
|   |   |     `-BinaryOperator 0x5615b8b8e218 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5615b8b8e200 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5615b8b8e1c0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5615b8b76610 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5615b8b8e1e0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x5615b8b8e300 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5615b8b8e2e0 <col:60> 'int' 0
|   |   `-CallExpr 0x5615b8b8e4a8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5615b8b8e490 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5615b8b8e470 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5615b86e2f60 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5615b8b8e4e8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5615b8b8e370 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x5615b8b8e500 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5615b8b8e3a8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5615b8b8e518 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5615b8b8e3e0 <col:143> 'int' 508
|   |     `-ImplicitCastExpr 0x5615b8b8e530 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5615b8b8e458 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5615b8b8e440 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5615b8b8e400 <col:162> 'const char [36]' lvalue "int16_t Packet::anno_s16(int) const"
|   `-ReturnStmt 0x5615b8b8e858 <line:512:2, col:74>
|     `-ImplicitCastExpr 0x5615b8b8e840 <col:9, col:74> 'click_aliasable_int16_t':'short' <LValueToRValue>
|       `-UnaryOperator 0x5615b8b8e828 <col:9, col:74> 'const click_aliasable_int16_t':'const short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x5615b8b8e7f8 <col:10, col:74> 'const click_aliasable_int16_t *' reinterpret_cast<const click_aliasable_int16_t *> <BitCast>
|           `-BinaryOperator 0x5615b8b8e770 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x5615b8b8e740 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x5615b8b8e6f0 <col:60, col:69> 'char const[48]' lvalue ->c 0x5615b8b810e0
|             |   `-CXXMemberCallExpr 0x5615b8b8e6d0 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x5615b8b8e6a0 <col:60> '<bound member function type>' ->xanno 0x5615b8b76228
|             |       `-CXXThisExpr 0x5615b8b8e690 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x5615b8b8e758 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x5615b8b8e720 <col:73> 'int' lvalue ParmVar 0x5615b8b79160 'i' 'int'
|-CXXMethodDecl 0x5615b8b794a8 <line:522:5, line:528:5> line:522:10 set_anno_s16 'void (int, int16_t)'
| |-ParmVarDecl 0x5615b8b79318 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x5615b8b79390 <col:30, col:38> col:38 used x 'int16_t':'short'
| `-CompoundStmt 0x5615b8b8ef88 <col:41, line:528:5>
|   |-ParenExpr 0x5615b8b8ed10 <line:523:2, col:182> 'void'
|   | `-ConditionalOperator 0x5615b8b8ece0 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5615b8b8ea00 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5615b8b8e9d0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5615b8b8e8e0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5615b8b8e8c8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5615b8b8e888 <col:23> 'int' lvalue ParmVar 0x5615b8b79318 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5615b8b8e8a8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5615b8b8e9b0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5615b8b8e998 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5615b8b8e900 <col:33> 'int' lvalue ParmVar 0x5615b8b79318 'i' 'int'
|   |   |     `-BinaryOperator 0x5615b8b8e978 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5615b8b8e960 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5615b8b8e920 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5615b8b76610 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5615b8b8e940 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x5615b8b8ea60 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5615b8b8ea40 <col:60> 'int' 0
|   |   `-CallExpr 0x5615b8b8ec40 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5615b8b8ec28 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5615b8b8ec08 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5615b86e2f60 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5615b8b8ec80 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5615b8b8ead0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x5615b8b8ec98 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5615b8b8eb08 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5615b8b8ecb0 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5615b8b8eb40 <col:143> 'int' 523
|   |     `-ImplicitCastExpr 0x5615b8b8ecc8 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5615b8b8ebf0 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5615b8b8ebd8 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5615b8b8eb98 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s16(int, int16_t)"
|   `-BinaryOperator 0x5615b8b8ef68 <line:527:2, col:65> 'click_aliasable_int16_t':'short' lvalue '='
|     |-UnaryOperator 0x5615b8b8ef18 <col:2, col:61> 'click_aliasable_int16_t':'short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x5615b8b8eee8 <col:3, col:61> 'click_aliasable_int16_t *' reinterpret_cast<click_aliasable_int16_t *> <BitCast>
|     |   `-BinaryOperator 0x5615b8b8ee90 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x5615b8b8ee50 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x5615b8b8ee00 <col:47, col:56> 'char [48]' lvalue ->c 0x5615b8b810e0
|     |     |   `-CXXMemberCallExpr 0x5615b8b8ede0 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x5615b8b8edb0 <col:47> '<bound member function type>' ->xanno 0x5615b8b763c8
|     |     |       `-CXXThisExpr 0x5615b8b8eda0 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x5615b8b8ee68 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x5615b8b8ee30 <col:60> 'int' lvalue ParmVar 0x5615b8b79318 'i' 'int'
|     `-ImplicitCastExpr 0x5615b8b8ef50 <col:65> 'int16_t':'short' <LValueToRValue>
|       `-DeclRefExpr 0x5615b8b8ef30 <col:65> 'int16_t':'short' lvalue ParmVar 0x5615b8b79390 'x' 'int16_t':'short'
|-CXXMethodDecl 0x5615b8b79668 <line:535:5, line:541:5> line:535:14 used anno_u32 'uint32_t (int) const'
| |-ParmVarDecl 0x5615b8b79570 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x5615b8b8f658 <col:36, line:541:5>
|   |-ParenExpr 0x5615b8b8f3f8 <line:536:2, col:182> 'void'
|   | `-ConditionalOperator 0x5615b8b8f3c8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5615b8b8f120 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5615b8b8f0f0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5615b8b8f000 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5615b8b8efe8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5615b8b8efa8 <col:23> 'int' lvalue ParmVar 0x5615b8b79570 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5615b8b8efc8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5615b8b8f0d0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5615b8b8f0b8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5615b8b8f020 <col:33> 'int' lvalue ParmVar 0x5615b8b79570 'i' 'int'
|   |   |     `-BinaryOperator 0x5615b8b8f098 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5615b8b8f080 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5615b8b8f040 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5615b8b76610 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5615b8b8f060 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x5615b8b8f180 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5615b8b8f160 <col:60> 'int' 0
|   |   `-CallExpr 0x5615b8b8f328 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5615b8b8f310 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5615b8b8f2f0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5615b86e2f60 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5615b8b8f368 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5615b8b8f1f0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x5615b8b8f380 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5615b8b8f228 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5615b8b8f398 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5615b8b8f260 <col:143> 'int' 536
|   |     `-ImplicitCastExpr 0x5615b8b8f3b0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5615b8b8f2d8 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5615b8b8f2c0 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5615b8b8f280 <col:162> 'const char [37]' lvalue "uint32_t Packet::anno_u32(int) const"
|   `-ReturnStmt 0x5615b8b8f648 <line:540:2, col:75>
|     `-ImplicitCastExpr 0x5615b8b8f630 <col:9, col:75> 'click_aliasable_uint32_t':'unsigned int' <LValueToRValue>
|       `-UnaryOperator 0x5615b8b8f618 <col:9, col:75> 'const click_aliasable_uint32_t':'const unsigned int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x5615b8b8f5e8 <col:10, col:75> 'const click_aliasable_uint32_t *' reinterpret_cast<const click_aliasable_uint32_t *> <BitCast>
|           `-BinaryOperator 0x5615b8b8f590 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x5615b8b8f560 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x5615b8b8f510 <col:61, col:70> 'char const[48]' lvalue ->c 0x5615b8b810e0
|             |   `-CXXMemberCallExpr 0x5615b8b8f4f0 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x5615b8b8f4c0 <col:61> '<bound member function type>' ->xanno 0x5615b8b76228
|             |       `-CXXThisExpr 0x5615b8b8f4b0 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x5615b8b8f578 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x5615b8b8f540 <col:74> 'int' lvalue ParmVar 0x5615b8b79570 'i' 'int'
|-CXXMethodDecl 0x5615b8b79838 <line:550:5, col:75> col:45 used set_anno_u32 'void (int, uint32_t)'
| |-ParmVarDecl 0x5615b8b79728 <col:58, col:62> col:62 i 'int'
| |-ParmVarDecl 0x5615b8b797a0 <col:65, col:74> col:74 x 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x5615b8b798e8 <col:20>
| `-OptimizeNoneAttr 0x5615b8b79940 <col:30>
|-CXXMethodDecl 0x5615b8b79a78 <line:556:5, line:562:5> line:556:13 used anno_s32 'int32_t (int) const'
| |-ParmVarDecl 0x5615b8b79980 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x5615b8b8fd28 <col:35, line:562:5>
|   |-ParenExpr 0x5615b8b8fac8 <line:557:2, col:182> 'void'
|   | `-ConditionalOperator 0x5615b8b8fa98 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5615b8b8f7f0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5615b8b8f7c0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5615b8b8f6d0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5615b8b8f6b8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5615b8b8f678 <col:23> 'int' lvalue ParmVar 0x5615b8b79980 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5615b8b8f698 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5615b8b8f7a0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5615b8b8f788 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5615b8b8f6f0 <col:33> 'int' lvalue ParmVar 0x5615b8b79980 'i' 'int'
|   |   |     `-BinaryOperator 0x5615b8b8f768 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5615b8b8f750 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5615b8b8f710 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5615b8b76610 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5615b8b8f730 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x5615b8b8f850 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5615b8b8f830 <col:60> 'int' 0
|   |   `-CallExpr 0x5615b8b8f9f8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5615b8b8f9e0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5615b8b8f9c0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5615b86e2f60 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5615b8b8fa38 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5615b8b8f8c0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x5615b8b8fa50 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5615b8b8f8f8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5615b8b8fa68 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5615b8b8f930 <col:143> 'int' 557
|   |     `-ImplicitCastExpr 0x5615b8b8fa80 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5615b8b8f9a8 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5615b8b8f990 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5615b8b8f950 <col:162> 'const char [36]' lvalue "int32_t Packet::anno_s32(int) const"
|   `-ReturnStmt 0x5615b8b8fd18 <line:561:2, col:74>
|     `-ImplicitCastExpr 0x5615b8b8fd00 <col:9, col:74> 'click_aliasable_int32_t':'int' <LValueToRValue>
|       `-UnaryOperator 0x5615b8b8fce8 <col:9, col:74> 'const click_aliasable_int32_t':'const int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x5615b8b8fcb8 <col:10, col:74> 'const click_aliasable_int32_t *' reinterpret_cast<const click_aliasable_int32_t *> <BitCast>
|           `-BinaryOperator 0x5615b8b8fc60 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x5615b8b8fc30 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x5615b8b8fbe0 <col:60, col:69> 'char const[48]' lvalue ->c 0x5615b8b810e0
|             |   `-CXXMemberCallExpr 0x5615b8b8fbc0 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x5615b8b8fb90 <col:60> '<bound member function type>' ->xanno 0x5615b8b76228
|             |       `-CXXThisExpr 0x5615b8b8fb80 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x5615b8b8fc48 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x5615b8b8fc10 <col:73> 'int' lvalue ParmVar 0x5615b8b79980 'i' 'int'
|-CXXMethodDecl 0x5615b8b79c88 <line:571:5, line:577:5> line:571:10 used set_anno_s32 'void (int, int32_t)'
| |-ParmVarDecl 0x5615b8b79b38 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x5615b8b79bb0 <col:30, col:38> col:38 used x 'int32_t':'int'
| `-CompoundStmt 0x5615b8b90408 <col:41, line:577:5>
|   |-ParenExpr 0x5615b8b90198 <line:572:2, col:182> 'void'
|   | `-ConditionalOperator 0x5615b8b90168 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5615b8b8fec0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5615b8b8fe90 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5615b8b8fda0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5615b8b8fd88 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5615b8b8fd48 <col:23> 'int' lvalue ParmVar 0x5615b8b79b38 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5615b8b8fd68 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5615b8b8fe70 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5615b8b8fe58 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5615b8b8fdc0 <col:33> 'int' lvalue ParmVar 0x5615b8b79b38 'i' 'int'
|   |   |     `-BinaryOperator 0x5615b8b8fe38 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5615b8b8fe20 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5615b8b8fde0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5615b8b76610 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5615b8b8fe00 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x5615b8b8ff20 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5615b8b8ff00 <col:60> 'int' 0
|   |   `-CallExpr 0x5615b8b900c8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5615b8b900b0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5615b8b90090 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5615b86e2f60 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5615b8b90108 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5615b8b8ff90 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x5615b8b90120 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5615b8b8ffc8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5615b8b90138 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5615b8b90000 <col:143> 'int' 572
|   |     `-ImplicitCastExpr 0x5615b8b90150 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5615b8b90078 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5615b8b90060 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5615b8b90020 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s32(int, int32_t)"
|   `-BinaryOperator 0x5615b8b903e8 <line:576:2, col:65> 'click_aliasable_int32_t':'int' lvalue '='
|     |-UnaryOperator 0x5615b8b90398 <col:2, col:61> 'click_aliasable_int32_t':'int' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x5615b8b90368 <col:3, col:61> 'click_aliasable_int32_t *' reinterpret_cast<click_aliasable_int32_t *> <BitCast>
|     |   `-BinaryOperator 0x5615b8b90308 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x5615b8b902d8 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x5615b8b90288 <col:47, col:56> 'char [48]' lvalue ->c 0x5615b8b810e0
|     |     |   `-CXXMemberCallExpr 0x5615b8b90268 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x5615b8b90238 <col:47> '<bound member function type>' ->xanno 0x5615b8b763c8
|     |     |       `-CXXThisExpr 0x5615b8b90228 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x5615b8b902f0 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x5615b8b902b8 <col:60> 'int' lvalue ParmVar 0x5615b8b79b38 'i' 'int'
|     `-ImplicitCastExpr 0x5615b8b903d0 <col:65> 'int32_t':'int' <LValueToRValue>
|       `-DeclRefExpr 0x5615b8b903b0 <col:65> 'int32_t':'int' lvalue ParmVar 0x5615b8b79bb0 'x' 'int32_t':'int'
|-CXXMethodDecl 0x5615b8b79e48 <line:585:5, line:591:5> line:585:14 used anno_u64 'uint64_t (int) const'
| |-ParmVarDecl 0x5615b8b79d50 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x5615b8b90b38 <col:36, line:591:5>
|   |-ParenExpr 0x5615b8b90878 <line:586:2, col:182> 'void'
|   | `-ConditionalOperator 0x5615b8b90848 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5615b8b905a0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5615b8b90570 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5615b8b90480 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5615b8b90468 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5615b8b90428 <col:23> 'int' lvalue ParmVar 0x5615b8b79d50 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5615b8b90448 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5615b8b90550 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5615b8b90538 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5615b8b904a0 <col:33> 'int' lvalue ParmVar 0x5615b8b79d50 'i' 'int'
|   |   |     `-BinaryOperator 0x5615b8b90518 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5615b8b90500 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5615b8b904c0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5615b8b76610 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5615b8b904e0 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x5615b8b90600 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5615b8b905e0 <col:60> 'int' 0
|   |   `-CallExpr 0x5615b8b907a8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5615b8b90790 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5615b8b90770 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5615b86e2f60 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5615b8b907e8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5615b8b90670 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x5615b8b90800 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5615b8b906a8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5615b8b90818 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5615b8b906e0 <col:143> 'int' 586
|   |     `-ImplicitCastExpr 0x5615b8b90830 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5615b8b90758 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5615b8b90740 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5615b8b90700 <col:162> 'const char [37]' lvalue "uint64_t Packet::anno_u64(int) const"
|   `-ReturnStmt 0x5615b8b90b28 <line:590:2, col:75>
|     `-ImplicitCastExpr 0x5615b8b90b10 <col:9, col:75> 'click_aliasable_uint64_t':'unsigned long' <LValueToRValue>
|       `-UnaryOperator 0x5615b8b90af8 <col:9, col:75> 'const click_aliasable_uint64_t':'const unsigned long' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x5615b8b90ac8 <col:10, col:75> 'const click_aliasable_uint64_t *' reinterpret_cast<const click_aliasable_uint64_t *> <BitCast>
|           `-BinaryOperator 0x5615b8b90a40 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x5615b8b90a10 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x5615b8b909c0 <col:61, col:70> 'char const[48]' lvalue ->c 0x5615b8b810e0
|             |   `-CXXMemberCallExpr 0x5615b8b909a0 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x5615b8b90970 <col:61> '<bound member function type>' ->xanno 0x5615b8b76228
|             |       `-CXXThisExpr 0x5615b8b90960 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x5615b8b90a28 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x5615b8b909f0 <col:74> 'int' lvalue ParmVar 0x5615b8b79d50 'i' 'int'
|-CXXMethodDecl 0x5615b8b7a098 <line:600:5, line:606:5> line:600:10 used set_anno_u64 'void (int, uint64_t)'
| |-ParmVarDecl 0x5615b8b79f08 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x5615b8b79f80 <col:30, col:39> col:39 used x 'uint64_t':'unsigned long'
| `-CompoundStmt 0x5615b8b91218 <col:42, line:606:5>
|   |-ParenExpr 0x5615b8b90fa8 <line:601:2, col:182> 'void'
|   | `-ConditionalOperator 0x5615b8b90f78 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5615b8b90cd0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5615b8b90ca0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5615b8b90bb0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5615b8b90b98 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5615b8b90b58 <col:23> 'int' lvalue ParmVar 0x5615b8b79f08 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5615b8b90b78 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5615b8b90c80 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5615b8b90c68 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5615b8b90bd0 <col:33> 'int' lvalue ParmVar 0x5615b8b79f08 'i' 'int'
|   |   |     `-BinaryOperator 0x5615b8b90c48 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5615b8b90c30 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5615b8b90bf0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5615b8b76610 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5615b8b90c10 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x5615b8b90d30 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5615b8b90d10 <col:60> 'int' 0
|   |   `-CallExpr 0x5615b8b90ed8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5615b8b90ec0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5615b8b90ea0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5615b86e2f60 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5615b8b90f18 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5615b8b90da0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x5615b8b90f30 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5615b8b90dd8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5615b8b90f48 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5615b8b90e10 <col:143> 'int' 601
|   |     `-ImplicitCastExpr 0x5615b8b90f60 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5615b8b90e88 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5615b8b90e70 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5615b8b90e30 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u64(int, uint64_t)"
|   `-BinaryOperator 0x5615b8b911f8 <line:605:2, col:66> 'click_aliasable_uint64_t':'unsigned long' lvalue '='
|     |-UnaryOperator 0x5615b8b911a8 <col:2, col:62> 'click_aliasable_uint64_t':'unsigned long' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x5615b8b91178 <col:3, col:62> 'click_aliasable_uint64_t *' reinterpret_cast<click_aliasable_uint64_t *> <BitCast>
|     |   `-BinaryOperator 0x5615b8b91118 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x5615b8b910e8 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x5615b8b91098 <col:48, col:57> 'char [48]' lvalue ->c 0x5615b8b810e0
|     |     |   `-CXXMemberCallExpr 0x5615b8b91078 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x5615b8b91048 <col:48> '<bound member function type>' ->xanno 0x5615b8b763c8
|     |     |       `-CXXThisExpr 0x5615b8b91038 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x5615b8b91100 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x5615b8b910c8 <col:61> 'int' lvalue ParmVar 0x5615b8b79f08 'i' 'int'
|     `-ImplicitCastExpr 0x5615b8b911e0 <col:66> 'uint64_t':'unsigned long' <LValueToRValue>
|       `-DeclRefExpr 0x5615b8b911c0 <col:66> 'uint64_t':'unsigned long' lvalue ParmVar 0x5615b8b79f80 'x' 'uint64_t':'unsigned long'
|-CXXMethodDecl 0x5615b8b7a230 <line:614:5, line:620:5> line:614:11 anno_ptr 'void *(int) const'
| |-ParmVarDecl 0x5615b8b7a160 <col:20, col:24> col:24 used i 'int'
| `-CompoundStmt 0x5615b8b91a88 <col:33, line:620:5>
|   |-ParenExpr 0x5615b8b91800 <line:615:2, col:220> 'void'
|   | `-ConditionalOperator 0x5615b8b917d0 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x5615b8b91420 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5615b8b913f0 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5615b8b91290 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5615b8b91278 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5615b8b91238 <col:23> 'int' lvalue ParmVar 0x5615b8b7a160 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5615b8b91258 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5615b8b913d0 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x5615b8b913b8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5615b8b912b0 <col:33> 'int' lvalue ParmVar 0x5615b8b7a160 'i' 'int'
|   |   |     `-BinaryOperator 0x5615b8b91398 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5615b8b91380 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5615b8b912d0 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5615b8b76610 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x5615b8b91358 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x5615b8b91340 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x5615b8b91308 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x5615b8b91480 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5615b8b91460 <col:79> 'int' 0
|   |   `-CallExpr 0x5615b8b91730 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x5615b8b91718 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5615b8b916f8 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5615b86e2f60 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5615b8b91770 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5615b8b91568 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x5615b8b91788 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5615b8b915b0 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5615b8b917a0 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5615b8b915e8 <col:181> 'int' 615
|   |     `-ImplicitCastExpr 0x5615b8b917b8 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5615b8b916e0 <col:186, col:200> 'const char [34]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5615b8b916c8 <col:200> 'const char [34]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5615b8b91688 <col:200> 'const char [34]' lvalue "void *Packet::anno_ptr(int) const"
|   `-ReturnStmt 0x5615b8b91a78 <line:619:2, col:81>
|     `-ImplicitCastExpr 0x5615b8b91a60 <col:9, col:81> 'click_aliasable_void_pointer_t':'void *' <LValueToRValue>
|       `-UnaryOperator 0x5615b8b91a48 <col:9, col:81> 'const click_aliasable_void_pointer_t':'void *const' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x5615b8b91a18 <col:10, col:81> 'const click_aliasable_void_pointer_t *' reinterpret_cast<const click_aliasable_void_pointer_t *> <BitCast>
|           `-BinaryOperator 0x5615b8b91990 <col:67, col:80> 'const char *' '+'
|             |-ImplicitCastExpr 0x5615b8b91960 <col:67, col:76> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x5615b8b91910 <col:67, col:76> 'char const[48]' lvalue ->c 0x5615b8b810e0
|             |   `-CXXMemberCallExpr 0x5615b8b918f0 <col:67, col:73> 'const Packet::Anno *'
|             |     `-MemberExpr 0x5615b8b918c0 <col:67> '<bound member function type>' ->xanno 0x5615b8b76228
|             |       `-CXXThisExpr 0x5615b8b918b0 <col:67> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x5615b8b91978 <col:80> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x5615b8b91940 <col:80> 'int' lvalue ParmVar 0x5615b8b7a160 'i' 'int'
|-CXXMethodDecl 0x5615b8b7a448 <line:629:5, line:635:5> line:629:10 set_anno_ptr 'void (int, const void *)'
| |-ParmVarDecl 0x5615b8b7a2f0 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x5615b8b7a370 <col:30, col:42> col:42 used x 'const void *'
| `-CompoundStmt 0x5615b8b922b0 <col:45, line:635:5>
|   |-ParenExpr 0x5615b8b91ff8 <line:630:2, col:220> 'void'
|   | `-ConditionalOperator 0x5615b8b91fc8 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x5615b8b91c90 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5615b8b91c60 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5615b8b91b00 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5615b8b91ae8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5615b8b91aa8 <col:23> 'int' lvalue ParmVar 0x5615b8b7a2f0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5615b8b91ac8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5615b8b91c40 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x5615b8b91c28 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5615b8b91b20 <col:33> 'int' lvalue ParmVar 0x5615b8b7a2f0 'i' 'int'
|   |   |     `-BinaryOperator 0x5615b8b91c08 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5615b8b91bf0 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5615b8b91b40 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5615b8b76610 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x5615b8b91bc8 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x5615b8b91bb0 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x5615b8b91b78 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x5615b8b91cf0 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5615b8b91cd0 <col:79> 'int' 0
|   |   `-CallExpr 0x5615b8b91f28 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x5615b8b91f10 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5615b8b91ef0 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5615b86e2f60 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5615b8b91f68 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5615b8b91d60 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x5615b8b91f80 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5615b8b91da8 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5615b8b91f98 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5615b8b91de0 <col:181> 'int' 630
|   |     `-ImplicitCastExpr 0x5615b8b91fb0 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5615b8b91ed8 <col:186, col:200> 'const char [45]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5615b8b91ec0 <col:200> 'const char [45]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5615b8b91e78 <col:200> 'const char [45]' lvalue "void Packet::set_anno_ptr(int, const void *)"
|   `-BinaryOperator 0x5615b8b92290 <line:634:2, col:92> 'click_aliasable_void_pointer_t':'void *' lvalue '='
|     |-UnaryOperator 0x5615b8b921f8 <col:2, col:68> 'click_aliasable_void_pointer_t':'void *' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x5615b8b921c8 <col:3, col:68> 'click_aliasable_void_pointer_t *' reinterpret_cast<click_aliasable_void_pointer_t *> <BitCast>
|     |   `-BinaryOperator 0x5615b8b92168 <col:54, col:67> 'char *' '+'
|     |     |-ImplicitCastExpr 0x5615b8b92138 <col:54, col:63> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x5615b8b920e8 <col:54, col:63> 'char [48]' lvalue ->c 0x5615b8b810e0
|     |     |   `-CXXMemberCallExpr 0x5615b8b920c8 <col:54, col:60> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x5615b8b92098 <col:54> '<bound member function type>' ->xanno 0x5615b8b763c8
|     |     |       `-CXXThisExpr 0x5615b8b92088 <col:54> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x5615b8b92150 <col:67> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x5615b8b92118 <col:67> 'int' lvalue ParmVar 0x5615b8b7a2f0 'i' 'int'
|     `-CXXConstCastExpr 0x5615b8b92260 <col:72, col:92> 'void *' const_cast<void *> <NoOp>
|       `-ImplicitCastExpr 0x5615b8b92248 <col:91> 'const void *' <LValueToRValue> part_of_explicit_cast
|         `-DeclRefExpr 0x5615b8b92210 <col:91> 'const void *' lvalue ParmVar 0x5615b8b7a370 'x' 'const void *'
|-CXXMethodDecl 0x5615b8b7a518 <line:638:5, line:640:5> line:638:20 data_packet 'Packet *()' inline
| `-CompoundStmt 0x5615b8b92338 <col:34, line:640:5>
|   `-ReturnStmt 0x5615b8b92328 <line:639:9, col:16>
|     `-ImplicitCastExpr 0x5615b8b92310 <col:16> 'Packet *' <LValueToRValue>
|       `-MemberExpr 0x5615b8b922e0 <col:16> 'Packet *' lvalue ->_data_packet 0x5615b8b81c98
|         `-CXXThisExpr 0x5615b8b922d0 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x5615b8b7a658 <line:643:5, col:50> col:17 used clear_annotations 'void (bool)' inline
| `-ParmVarDecl 0x5615b8b7a5c8 <col:35, col:46> col:40 all 'bool' cinit
|   `-CXXBoolLiteralExpr 0x5615b8b8b3f8 <col:46> 'bool' true
|-CXXMethodDecl 0x5615b8b7a7d8 <line:644:5, col:48> col:17 copy_annotations 'void (const Packet *)' inline
| `-ParmVarDecl 0x5615b8b7a710 <col:34, col:47> col:48 'const Packet *'
|-EnumDecl 0x5615b8b7a880 <line:648:5, line:660:5> line:648:5
| |-DeprecatedAttr 0x5615b8b7b030 <line:660:22> "" ""
| |-EnumConstantDecl 0x5615b8b7a980 <line:649:2, col:21> col:2 DEFAULT_HEADROOM 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5615b8b7b0a0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5615b8b7a960 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 28
| |     `-DeclRefExpr 0x5615b8b7a940 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x5615b8b6fae0 'default_headroom' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x5615b8b7aa10 <line:650:2, col:22> col:2 MIN_BUFFER_LENGTH 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5615b8b7b0b8 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5615b8b7a9f0 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 64
| |     `-DeclRefExpr 0x5615b8b7a9d0 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x5615b8b6fb70 'min_buffer_length' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x5615b8b7aaa0 <line:651:2, col:21> col:2 referenced addr_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5615b8b7b0d0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5615b8b7aa80 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x5615b8b7aa60 <col:21> 'int' 0
| |-EnumConstantDecl 0x5615b8b7ab30 <line:652:2, col:19> col:2 referenced addr_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5615b8b7b0e8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5615b8b7ab10 <col:19> 'int' Int: 16
| |     `-IntegerLiteral 0x5615b8b7aaf0 <col:19> 'int' 16
| |-EnumConstantDecl 0x5615b8b7abc0 <line:653:2, col:21> col:2 referenced user_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5615b8b7b100 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5615b8b7aba0 <col:21> 'int' Int: 16
| |     `-IntegerLiteral 0x5615b8b7ab80 <col:21> 'int' 16
| |-EnumConstantDecl 0x5615b8b7ac50 <line:654:2, col:19> col:2 referenced user_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5615b8b7b118 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5615b8b7ac30 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x5615b8b7ac10 <col:19> 'int' 32
| |-EnumConstantDecl 0x5615b8b7ace0 <line:655:2, col:19> col:2 ADDR_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5615b8b7b130 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5615b8b7acc0 <col:19> 'int' Int: 16
| |     `-DeclRefExpr 0x5615b8b7aca0 <col:19> 'int' EnumConstant 0x5615b8b7ab30 'addr_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x5615b8b7ad70 <line:656:2, col:19> col:2 referenced USER_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5615b8b7b148 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5615b8b7ad50 <col:19> 'int' Int: 32
| |     `-DeclRefExpr 0x5615b8b7ad30 <col:19> 'int' EnumConstant 0x5615b8b7ac50 'user_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x5615b8b7ae40 <line:657:2, col:40> col:2 USER_ANNO_U16_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5615b8b7b160 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5615b8b7ae20 <col:23, col:40> 'int' Int: 16
| |     `-BinaryOperator 0x5615b8b7ae00 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x5615b8b7adc0 <col:23> 'int' EnumConstant 0x5615b8b7ad70 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x5615b8b7ade0 <col:40> 'int' 2
| |-EnumConstantDecl 0x5615b8b7af10 <line:658:2, col:40> col:2 USER_ANNO_U32_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5615b8b7b178 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5615b8b7aef0 <col:23, col:40> 'int' Int: 8
| |     `-BinaryOperator 0x5615b8b7aed0 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x5615b8b7ae90 <col:23> 'int' EnumConstant 0x5615b8b7ad70 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x5615b8b7aeb0 <col:40> 'int' 4
| `-EnumConstantDecl 0x5615b8b7afe0 <line:659:2, col:40> col:2 USER_ANNO_U64_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|   `-ImplicitCastExpr 0x5615b8b7b190 <col:23, col:40> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5615b8b7afc0 <col:23, col:40> 'int' Int: 4
|       `-BinaryOperator 0x5615b8b7afa0 <col:23, col:40> 'int' '/'
|         |-DeclRefExpr 0x5615b8b7af60 <col:23> 'int' EnumConstant 0x5615b8b7ad70 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|         `-IntegerLiteral 0x5615b8b7af80 <col:40> 'int' 8
|-CXXMethodDecl 0x5615b8b7b1d0 <line:661:5, col:79> col:33 buffer_data 'const unsigned char *() const' inline
| `-DeprecatedAttr 0x5615b8b7b270 <col:68> "" ""
|-CXXMethodDecl 0x5615b8b7b308 <line:662:5, col:56> col:18 addr_anno 'void *()' inline
| `-DeprecatedAttr 0x5615b8b7b3a8 <col:45> "" ""
|-CXXMethodDecl 0x5615b8b7b440 <line:663:5, col:68> col:24 addr_anno 'const void *() const' inline
| `-DeprecatedAttr 0x5615b8b7b4e0 <col:57> "" ""
|-CXXMethodDecl 0x5615b8b7b578 <line:664:5, col:56> col:18 user_anno 'void *()' inline
| `-DeprecatedAttr 0x5615b8b7b618 <col:45> "" ""
|-CXXMethodDecl 0x5615b8b7b6b0 <line:665:5, col:68> col:24 user_anno 'const void *() const' inline
| `-DeprecatedAttr 0x5615b8b7b750 <col:57> "" ""
|-CXXMethodDecl 0x5615b8b7b7e0 <line:666:5, col:62> col:21 user_anno_u8 'uint8_t *()' inline
| `-DeprecatedAttr 0x5615b8b7b880 <col:51> "" ""
|-CXXMethodDecl 0x5615b8b7b910 <line:667:5, col:74> col:27 user_anno_u8 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x5615b8b7b9b0 <col:63> "" ""
|-CXXMethodDecl 0x5615b8b7ba40 <line:668:5, col:64> col:22 user_anno_u32 'uint32_t *()' inline
| `-DeprecatedAttr 0x5615b8b7bae0 <col:53> "" ""
|-CXXMethodDecl 0x5615b8b7bb70 <line:669:5, col:76> col:28 user_anno_u32 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x5615b8b7bc10 <col:65> "" ""
|-CXXMethodDecl 0x5615b8b7bd28 <line:670:5, col:72> col:20 user_anno_u8 'uint8_t (int) const' inline
| |-ParmVarDecl 0x5615b8b7bc98 <col:33, col:37> col:37 i 'int'
| `-DeprecatedAttr 0x5615b8b7bdd0 <col:61> "" ""
|-CXXMethodDecl 0x5615b8b7bf68 <line:671:5, col:78> col:17 set_user_anno_u8 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x5615b8b7be58 <col:34, col:38> col:38 i 'int'
| |-ParmVarDecl 0x5615b8b7bed0 <col:41, col:49> col:49 v 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x5615b8b7c018 <col:67> "" ""
|-CXXMethodDecl 0x5615b8b7c130 <line:672:5, col:74> col:21 user_anno_u16 'uint16_t (int) const' inline
| |-ParmVarDecl 0x5615b8b7c0a0 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x5615b8b7c1d8 <col:63> "" ""
|-CXXMethodDecl 0x5615b8b7c370 <line:673:5, col:80> col:17 set_user_anno_u16 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x5615b8b7c260 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x5615b8b7c2d8 <col:42, col:51> col:51 v 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x5615b8b7c420 <col:69> "" ""
|-CXXMethodDecl 0x5615b8b7c538 <line:674:5, col:74> col:21 user_anno_u32 'uint32_t (int) const' inline
| |-ParmVarDecl 0x5615b8b7c4a8 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x5615b8b7c5e0 <col:63> "" ""
|-CXXMethodDecl 0x5615b8b7ecb8 <line:675:5, col:80> col:17 set_user_anno_u32 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x5615b8b7eba8 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x5615b8b7ec20 <col:42, col:51> col:51 v 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x5615b8b7ed68 <col:69> "" ""
|-CXXMethodDecl 0x5615b8b7ee80 <line:676:5, col:73> col:20 user_anno_s32 'int32_t (int) const' inline
| |-ParmVarDecl 0x5615b8b7edf0 <col:34, col:38> col:38 i 'int'
| `-DeprecatedAttr 0x5615b8b7ef28 <col:62> "" ""
|-CXXMethodDecl 0x5615b8b7f0c0 <line:677:5, col:79> col:17 set_user_anno_s32 'void (int, int32_t)' inline
| |-ParmVarDecl 0x5615b8b7efb0 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x5615b8b7f028 <col:42, col:50> col:50 v 'int32_t':'int'
| `-DeprecatedAttr 0x5615b8b7f170 <col:68> "" ""
|-CXXMethodDecl 0x5615b8b7f288 <line:679:5, col:74> col:21 user_anno_u64 'uint64_t (int) const' inline
| |-ParmVarDecl 0x5615b8b7f1f8 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x5615b8b7f330 <col:63> "" ""
|-CXXMethodDecl 0x5615b8b7f4c8 <line:680:5, col:80> col:17 set_user_anno_u64 'void (int, uint64_t)' inline
| |-ParmVarDecl 0x5615b8b7f3b8 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x5615b8b7f430 <col:42, col:51> col:51 v 'uint64_t':'unsigned long'
| `-DeprecatedAttr 0x5615b8b7f578 <col:69> "" ""
|-CXXMethodDecl 0x5615b8b7f608 <line:682:5, col:75> col:27 all_user_anno 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x5615b8b7f6a8 <col:64> "" ""
|-CXXMethodDecl 0x5615b8b7f738 <line:683:5, col:63> col:21 all_user_anno 'uint8_t *()' inline
| `-DeprecatedAttr 0x5615b8b7f7d8 <col:52> "" ""
|-CXXMethodDecl 0x5615b8b7f868 <line:684:5, col:78> col:28 all_user_anno_u 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x5615b8b7f908 <col:67> "" ""
|-CXXMethodDecl 0x5615b8b7f998 <line:685:5, col:66> col:22 all_user_anno_u 'uint32_t *()' inline
| `-DeprecatedAttr 0x5615b8b7fa38 <col:55> "" ""
|-CXXMethodDecl 0x5615b8b7fb50 <line:686:5, col:69> col:20 user_anno_c 'uint8_t (int) const' inline
| |-ParmVarDecl 0x5615b8b7fac0 <col:32> col:35 'int'
| `-DeprecatedAttr 0x5615b8b7fbf8 <col:58> "" ""
|-CXXMethodDecl 0x5615b8b7fd90 <line:687:5, col:73> col:17 set_user_anno_c 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x5615b8b7fc80 <col:33> col:36 'int'
| |-ParmVarDecl 0x5615b8b7fcf8 <col:38> col:45 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x5615b8b7fe40 <col:62> "" ""
|-CXXMethodDecl 0x5615b8b7ff58 <line:688:5, col:69> col:20 user_anno_s 'int16_t (int) const' inline
| |-ParmVarDecl 0x5615b8b7fec8 <col:32> col:35 'int'
| `-DeprecatedAttr 0x5615b8b80000 <col:58> "" ""
|-CXXMethodDecl 0x5615b8b80198 <line:689:5, col:73> col:17 set_user_anno_s 'void (int, int16_t)' inline
| |-ParmVarDecl 0x5615b8b80088 <col:33> col:36 'int'
| |-ParmVarDecl 0x5615b8b80100 <col:38> col:45 'int16_t':'short'
| `-DeprecatedAttr 0x5615b8b80248 <col:62> "" ""
|-CXXMethodDecl 0x5615b8b80360 <line:690:5, col:71> col:21 user_anno_us 'uint16_t (int) const' inline
| |-ParmVarDecl 0x5615b8b802d0 <col:34> col:37 'int'
| `-DeprecatedAttr 0x5615b8b80408 <col:60> "" ""
|-CXXMethodDecl 0x5615b8b805a0 <line:691:5, col:75> col:17 set_user_anno_us 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x5615b8b80490 <col:34> col:37 'int'
| |-ParmVarDecl 0x5615b8b80508 <col:39> col:47 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x5615b8b80650 <col:64> "" ""
|-CXXMethodDecl 0x5615b8b80768 <line:692:5, col:69> col:20 user_anno_i 'int32_t (int) const' inline
| |-ParmVarDecl 0x5615b8b806d8 <col:32> col:35 'int'
| `-DeprecatedAttr 0x5615b8b80810 <col:58> "" ""
|-CXXMethodDecl 0x5615b8b809a8 <line:693:5, col:73> col:17 set_user_anno_i 'void (int, int32_t)' inline
| |-ParmVarDecl 0x5615b8b80898 <col:33> col:36 'int'
| |-ParmVarDecl 0x5615b8b80910 <col:38> col:45 'int32_t':'int'
| `-DeprecatedAttr 0x5615b8b80a58 <col:62> "" ""
|-CXXMethodDecl 0x5615b8b80b70 <line:694:5, col:70> col:21 user_anno_u 'uint32_t (int) const' inline
| |-ParmVarDecl 0x5615b8b80ae0 <col:33> col:36 'int'
| `-DeprecatedAttr 0x5615b8b80c18 <col:59> "" ""
|-CXXMethodDecl 0x5615b8b80db0 <line:695:5, col:74> col:17 set_user_anno_u 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x5615b8b80ca0 <col:33> col:36 'int'
| |-ParmVarDecl 0x5615b8b80d18 <col:38> col:46 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x5615b8b80e60 <col:63> "" ""
|-AccessSpecDecl 0x5615b8b80ed0 <line:698:3, col:10> col:3 private
|-CXXRecordDecl 0x5615b8b80ef8 prev 0x5615b8b76100 <line:702:5, line:711:5> line:702:11 referenced union Anno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x5615b8b80ff0 <col:5, col:11> col:11 implicit union Anno
| |-FieldDecl 0x5615b8b810e0 <line:703:2, col:18> col:7 referenced c 'char [48]'
| |-FieldDecl 0x5615b8b81208 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
| |-FieldDecl 0x5615b8b81388 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
| |-FieldDecl 0x5615b8b81508 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
| |-FieldDecl 0x5615b8b81688 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
| |-CXXConstructorDecl 0x5615b8b924b8 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x5615b8b92d28 <col:11>
| |-CXXDestructorDecl 0x5615b8b92590 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
| |-CXXConstructorDecl 0x5615b8b926c8 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x5615b8b926c8
| | `-ParmVarDecl 0x5615b8b927d8 <col:11> col:11 'const Packet::Anno &'
| |-CXXConstructorDecl 0x5615b8b92878 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x5615b8b92878
| | `-ParmVarDecl 0x5615b8b92988 <col:11> col:11 'Packet::Anno &&'
| |-CXXMethodDecl 0x5615b8b95748 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| | |-ParmVarDecl 0x5615b8b95858 <col:11> col:11 'const Packet::Anno &'
| | `-CompoundStmt 0x5615b8b95ad8 <col:11>
| |   `-ReturnStmt 0x5615b8b95ac8 <col:11>
| |     `-UnaryOperator 0x5615b8b95ab0 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x5615b8b95aa0 <col:11> 'Packet::Anno *' this
| `-CXXMethodDecl 0x5615b8b958c8 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x5615b8b958c8
|   `-ParmVarDecl 0x5615b8b959d8 <col:11> col:11 'Packet::Anno &&'
|-CXXRecordDecl 0x5615b8b816f0 <line:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x5615b8b81808 <col:5, col:12> col:12 implicit struct AllAnno
| |-FieldDecl 0x5615b8b818a8 <line:717:2, col:7> col:7 cb 'Packet::Anno'
| |-FieldDecl 0x5615b8b81910 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
| |-FieldDecl 0x5615b8b81978 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
| |-FieldDecl 0x5615b8b819e0 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
| |-FieldDecl 0x5615b8b81a40 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
| |-FieldDecl 0x5615b8b81b00 <line:722:2, col:34> col:7 timestamp 'char [8]'
| |-FieldDecl 0x5615b8b81b60 <line:723:2, col:10> col:10 referenced next 'Packet *'
| |-FieldDecl 0x5615b8b81bc0 <line:724:2, col:10> col:10 referenced prev 'Packet *'
| |-CXXConstructorDecl 0x5615b8b923c8 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| | |-CXXCtorInitializer Field 0x5615b8b818a8 'cb' 'Packet::Anno'
| | | `-CXXConstructExpr 0x5615b8b92d38 <col:12> 'Packet::Anno' 'void () noexcept'
| | `-CompoundStmt 0x5615b8b92d90 <col:12>
| |-CXXConstructorDecl 0x5615b8b929f8 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x5615b8b929f8
| | `-ParmVarDecl 0x5615b8b92b08 <col:12> col:12 'const Packet::AllAnno &'
| |-CXXConstructorDecl 0x5615b8b92ba8 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x5615b8b92ba8
| | `-ParmVarDecl 0x5615b8b92cb8 <col:12> col:12 'Packet::AllAnno &&'
| `-CXXDestructorDecl 0x5615b8b94e30 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial
|-FieldDecl 0x5615b8b81c38 <line:731:5, col:21> col:21 referenced _use_count 'atomic_uint32_t'
|-FieldDecl 0x5615b8b81c98 <line:732:5, col:13> col:13 referenced _data_packet 'Packet *'
|-FieldDecl 0x5615b8b81d00 <line:734:5, col:20> col:20 referenced _head 'unsigned char *'
|-FieldDecl 0x5615b8b81d68 <line:735:5, col:20> col:20 referenced _data 'unsigned char *'
|-FieldDecl 0x5615b8b81dd0 <line:736:5, col:20> col:20 referenced _tail 'unsigned char *'
|-FieldDecl 0x5615b8b81e38 <line:737:5, col:20> col:20 referenced _end 'unsigned char *'
|-FieldDecl 0x5615b8b81e98 <line:741:5, col:13> col:13 referenced _aa 'Packet::AllAnno'
|-FieldDecl 0x5615b8b81ef8 <line:746:5, col:28> col:28 referenced _destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-FieldDecl 0x5615b8b81f60 <line:747:5, col:11> col:11 referenced _destructor_argument 'void *'
|-CXXConstructorDecl 0x5615b8b81fe8 <line:751:5, line:755:5> line:751:12 used Packet 'void ()' inline
| |-CXXCtorInitializer Field 0x5615b8b81c38 '_use_count' 'atomic_uint32_t'
| | `-CXXConstructExpr 0x5615b8b92360 <col:12> 'atomic_uint32_t' 'void () noexcept'
| |-CXXCtorInitializer Field 0x5615b8b81e98 '_aa' 'Packet::AllAnno'
| | `-CXXConstructExpr 0x5615b8b92da0 <col:12> 'Packet::AllAnno' 'void () noexcept'
| `-CompoundStmt 0x5615b8b92e00 <col:21, line:755:5>
|-CXXConstructorDecl 0x5615b8b82188 <line:756:5, col:27> col:5 Packet 'void (const Packet &)'
| `-ParmVarDecl 0x5615b8b820c8 <col:12, col:26> col:26 x 'const Packet &'
|-CXXDestructorDecl 0x5615b8b82280 <line:757:5, col:13> col:5 used ~Packet 'void () noexcept'
|-CXXMethodDecl 0x5615b8b82468 <line:758:5, col:38> col:13 operator= 'Packet &(const Packet &)'
| `-ParmVarDecl 0x5615b8b82370 <col:23, col:37> col:37 x 'const Packet &'
|-CXXMethodDecl 0x5615b8b82738 <line:761:5, col:74> col:10 alloc_data 'bool (uint32_t, uint32_t, uint32_t)'
| |-ParmVarDecl 0x5615b8b82520 <col:21, col:30> col:30 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x5615b8b82598 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x5615b8b82610 <col:57, col:66> col:66 tailroom 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5615b8b82958 <line:768:5, col:95> col:17 shift_header_annotations 'void (const unsigned char *, int32_t)' inline
| |-ParmVarDecl 0x5615b8b82808 <col:42, col:63> col:63 old_head 'const unsigned char *'
| `-ParmVarDecl 0x5615b8b82880 <col:73, col:81> col:81 extra_headroom 'int32_t':'int'
|-CXXMethodDecl 0x5615b8b8af38 <line:769:5, col:109> col:21 expensive_uniqueify 'WritablePacket *(int32_t, int32_t, bool)'
| |-ParmVarDecl 0x5615b8b82a18 <col:41, col:49> col:49 extra_headroom 'int32_t':'int'
| |-ParmVarDecl 0x5615b8b82a90 <col:65, col:73> col:73 extra_tailroom 'int32_t':'int'
| `-ParmVarDecl 0x5615b8b82b08 <col:89, col:94> col:94 free_on_failure 'bool'
|-CXXMethodDecl 0x5615b8b8b090 <line:770:5, col:51> col:21 used expensive_push 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x5615b8b8b000 <col:36, col:45> col:45 nbytes 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5615b8b8b1d8 <line:771:5, col:50> col:21 used expensive_put 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x5615b8b8b148 <col:35, col:44> col:44 nbytes 'uint32_t':'unsigned int'
`-FriendDecl 0x5615b8b8b2d0 <line:773:5, col:18> col:12 'class WritablePacket':'WritablePacket'

Layout: <CGRecordLayout
  LLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  NonVirtualBaseLLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct String::rep_t
         0 |   const char * data
         8 |   int length
        16 |   struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class String
         0 |   struct String::rep_t _r
         0 |     const char * data
         8 |     int length
        16 |     struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5615b897c700 <../dummy_inc/click/string.hh:189:5, line:198:5> line:189:12 referenced struct memo_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x5615b897c818 <col:5, col:12> col:12 implicit struct memo_t
|-FieldDecl 0x5615b897c8b8 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
|-FieldDecl 0x5615b897c918 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
|-FieldDecl 0x5615b897c978 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
`-FieldDecl 0x5615b897ca28 <line:197:2, col:18> col:7 real_data 'char [8]'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  NonVirtualBaseLLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5615b897cd30 <../dummy_inc/click/string.hh:204:5, line:208:5> line:204:12 referenced struct rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5615b897ce48 <col:5, col:12> col:12 implicit struct rep_t
|-FieldDecl 0x5615b897cef0 <line:205:2, col:14> col:14 referenced data 'const char *'
|-FieldDecl 0x5615b897cf58 <line:206:2, col:6> col:6 referenced length 'int'
|-FieldDecl 0x5615b897cfe8 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
|-CXXConstructorDecl 0x5615b8983080 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x5615b89834b8 <col:12>
|-CXXConstructorDecl 0x5615b8983188 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x5615b8983298 <col:12> col:12 used 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x5615b897cef0 'data' 'const char *'
| | `-ImplicitCastExpr 0x5615b8985a40 <col:12> 'const char *' <LValueToRValue>
| |   `-MemberExpr 0x5615b8985a10 <col:12> 'const char *const' lvalue .data 0x5615b897cef0
| |     `-DeclRefExpr 0x5615b89859f0 <col:12> 'const String::rep_t' lvalue ParmVar 0x5615b8983298 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x5615b897cf58 'length' 'int'
| | `-ImplicitCastExpr 0x5615b8985ad0 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x5615b8985aa0 <col:12> 'const int' lvalue .length 0x5615b897cf58
| |     `-DeclRefExpr 0x5615b8985a80 <col:12> 'const String::rep_t' lvalue ParmVar 0x5615b8983298 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x5615b897cfe8 'memo' 'String::memo_t *'
| | `-ImplicitCastExpr 0x5615b8985b60 <col:12> 'String::memo_t *' <LValueToRValue>
| |   `-MemberExpr 0x5615b8985b30 <col:12> 'String::memo_t *const' lvalue .memo 0x5615b897cfe8
| |     `-DeclRefExpr 0x5615b8985b10 <col:12> 'const String::rep_t' lvalue ParmVar 0x5615b8983298 '' 'const String::rep_t &'
| `-CompoundStmt 0x5615b8985bb8 <col:12>
|-CXXConstructorDecl 0x5615b8983338 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x5615b8983338
| `-ParmVarDecl 0x5615b8983448 <col:12> col:12 'String::rep_t &&'
|-CXXDestructorDecl 0x5615b89889a0 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x5615b89943b8 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x5615b89944c8 <col:12> col:12 used 'const String::rep_t &'
| `-CompoundStmt 0x5615b89949e0 <col:12>
|   |-BinaryOperator 0x5615b89947f8 <col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x5615b89947b0 <col:12> 'const char *' lvalue ->data 0x5615b897cef0
|   | | `-CXXThisExpr 0x5615b89947a0 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x5615b89947e0 <col:12> 'const char *' <LValueToRValue>
|   |   `-MemberExpr 0x5615b8994770 <col:12> 'const char *const' lvalue .data 0x5615b897cef0
|   |     `-DeclRefExpr 0x5615b8994750 <col:12> 'const String::rep_t' lvalue ParmVar 0x5615b89944c8 '' 'const String::rep_t &'
|   |-BinaryOperator 0x5615b89948c0 <col:12> 'int' lvalue '='
|   | |-MemberExpr 0x5615b8994878 <col:12> 'int' lvalue ->length 0x5615b897cf58
|   | | `-CXXThisExpr 0x5615b8994868 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x5615b89948a8 <col:12> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x5615b8994838 <col:12> 'const int' lvalue .length 0x5615b897cf58
|   |     `-DeclRefExpr 0x5615b8994818 <col:12> 'const String::rep_t' lvalue ParmVar 0x5615b89944c8 '' 'const String::rep_t &'
|   |-BinaryOperator 0x5615b8994988 <col:12> 'String::memo_t *' lvalue '='
|   | |-MemberExpr 0x5615b8994940 <col:12> 'String::memo_t *' lvalue ->memo 0x5615b897cfe8
|   | | `-CXXThisExpr 0x5615b8994930 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x5615b8994970 <col:12> 'String::memo_t *' <LValueToRValue>
|   |   `-MemberExpr 0x5615b8994900 <col:12> 'String::memo_t *const' lvalue .memo 0x5615b897cfe8
|   |     `-DeclRefExpr 0x5615b89948e0 <col:12> 'const String::rep_t' lvalue ParmVar 0x5615b89944c8 '' 'const String::rep_t &'
|   `-ReturnStmt 0x5615b89949d0 <col:12>
|     `-UnaryOperator 0x5615b89949b8 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x5615b89949a8 <col:12> 'String::rep_t *' this
`-CXXMethodDecl 0x5615b8994538 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x5615b8994538
  `-ParmVarDecl 0x5615b8994648 <col:12> col:12 'String::rep_t &&'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  NonVirtualBaseLLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5615b8973c70 <../dummy_inc/click/string.hh:19:1, line:304:1> line:19:7 referenced class String definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x5615b8973d88 <col:1, col:7> col:7 implicit referenced class String
|-AccessSpecDecl 0x5615b8973e18 <col:16, col:22> col:16 public
|-TypedefDecl 0x5615b8973e58 <line:21:5, col:25> col:25 referenced const_iterator 'const char *'
| `-PointerType 0x5615b8649e00 'const char *'
|   `-QualType 0x5615b8649351 'const char' const
|     `-BuiltinType 0x5615b8649350 'char'
|-TypedefDecl 0x5615b8973ee0 <line:22:5, col:28> col:28 iterator 'String::const_iterator':'const char *'
| `-TypedefType 0x5615b8973eb0 'String::const_iterator' sugar
|   |-Typedef 0x5615b8973e58 'const_iterator'
|   `-PointerType 0x5615b8649e00 'const char *'
|     `-QualType 0x5615b8649351 'const char' const
|       `-BuiltinType 0x5615b8649350 'char'
|-TypedefDecl 0x5615b8974050 <line:24:5, col:52> col:27 referenced unspecified_bool_type 'int (String::*)() const'
| `-MemberPointerType 0x5615b8973fc0 'int (String::*)() const'
|   |-RecordType 0x5615b8973d00 'String'
|   | `-CXXRecord 0x5615b8973c70 'String'
|   `-ParenType 0x5615b8973f60 'int () const' sugar
|     `-FunctionProtoType 0x5615b8947af0 'int () const' const cdecl
|       `-BuiltinType 0x5615b86493b0 'int'
|-TypedefDecl 0x5615b89740b8 <line:27:5, col:21> col:21 referenced intmax_t 'int64_t':'long'
| `-TypedefType 0x5615b879c6f0 'int64_t' sugar
|   |-Typedef 0x5615b86b22a0 'int64_t'
|   `-TypedefType 0x5615b868b510 '__int64_t' sugar
|     |-Typedef 0x5615b868b0e8 '__int64_t'
|     `-BuiltinType 0x5615b86493d0 'long'
|-TypedefDecl 0x5615b8974120 <line:28:5, col:22> col:22 referenced uintmax_t 'uint64_t':'unsigned long'
| `-TypedefType 0x5615b879c610 'uint64_t' sugar
|   |-Typedef 0x5615b86b2440 'uint64_t'
|   `-TypedefType 0x5615b868b5a0 '__uint64_t' sugar
|     |-Typedef 0x5615b868b158 '__uint64_t'
|     `-BuiltinType 0x5615b8649470 'unsigned long'
|-TypedefDecl 0x5615b89741b0 <line:36:5, col:22> col:22 int_large_t 'String::intmax_t':'long'
| `-TypedefType 0x5615b8974180 'String::intmax_t' sugar
|   |-Typedef 0x5615b89740b8 'intmax_t'
|   `-TypedefType 0x5615b879c6f0 'int64_t' sugar
|     |-Typedef 0x5615b86b22a0 'int64_t'
|     `-TypedefType 0x5615b868b510 '__int64_t' sugar
|       |-Typedef 0x5615b868b0e8 '__int64_t'
|       `-BuiltinType 0x5615b86493d0 'long'
|-TypedefDecl 0x5615b8974240 <line:37:5, col:23> col:23 uint_large_t 'String::uintmax_t':'unsigned long'
| `-TypedefType 0x5615b8974210 'String::uintmax_t' sugar
|   |-Typedef 0x5615b8974120 'uintmax_t'
|   `-TypedefType 0x5615b879c610 'uint64_t' sugar
|     |-Typedef 0x5615b86b2440 'uint64_t'
|     `-TypedefType 0x5615b868b5a0 '__uint64_t' sugar
|       |-Typedef 0x5615b868b158 '__uint64_t'
|       `-BuiltinType 0x5615b8649470 'unsigned long'
|-CXXConstructorDecl 0x5615b8974300 <line:39:5, col:19> col:12 used String 'void ()' inline
|-CXXConstructorDecl 0x5615b89744a8 <line:40:5, col:34> col:12 used String 'void (const String &)' inline
| `-ParmVarDecl 0x5615b89743e8 <col:19, col:33> col:33 x 'const String &'
|-CXXConstructorDecl 0x5615b8974658 <line:42:5, col:29> col:12 used String 'void (String &&)' inline
| `-ParmVarDecl 0x5615b8974598 <col:19, col:28> col:28 x 'String &&'
|-CXXConstructorDecl 0x5615b89747b0 <line:44:5, col:35> col:12 used String 'void (const char *)' inline
| `-ParmVarDecl 0x5615b8974720 <col:19, col:31> col:31 cstr 'const char *'
|-CXXConstructorDecl 0x5615b89749c8 <line:45:5, col:41> col:12 String 'void (const char *, int)' inline
| |-ParmVarDecl 0x5615b8974878 <col:19, col:31> col:31 s 'const char *'
| `-ParmVarDecl 0x5615b89748f8 <col:34, col:38> col:38 len 'int'
|-CXXConstructorDecl 0x5615b8974be8 <line:46:5, col:50> col:12 String 'void (const unsigned char *, int)' inline
| |-ParmVarDecl 0x5615b8974a98 <col:19, col:40> col:40 s 'const unsigned char *'
| `-ParmVarDecl 0x5615b8974b18 <col:43, col:47> col:47 len 'int'
|-CXXConstructorDecl 0x5615b8974e08 <line:47:5, col:54> col:12 used String 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x5615b8974cb8 <col:19, col:31> col:31 first 'const char *'
| `-ParmVarDecl 0x5615b8974d38 <col:38, col:50> col:50 last 'const char *'
|-CXXConstructorDecl 0x5615b8975028 <line:48:5, col:72> col:12 String 'void (const unsigned char *, const unsigned char *)' inline
| |-ParmVarDecl 0x5615b8974ed8 <col:19, col:40> col:40 first 'const unsigned char *'
| `-ParmVarDecl 0x5615b8974f58 <col:47, col:68> col:68 last 'const unsigned char *'
|-CXXConstructorDecl 0x5615b89751b8 <line:49:5, col:34> col:21 String 'void (bool)' inline
| `-ParmVarDecl 0x5615b89750f0 <col:28, col:33> col:33 x 'bool'
|-CXXConstructorDecl 0x5615b8975338 <line:50:5, col:34> col:21 String 'void (char)' inline
| `-ParmVarDecl 0x5615b8975278 <col:28, col:33> col:33 c 'char'
|-CXXConstructorDecl 0x5615b89754c8 <line:51:5, col:43> col:21 String 'void (unsigned char)' inline
| `-ParmVarDecl 0x5615b8975400 <col:28, col:42> col:42 c 'unsigned char'
|-CXXConstructorDecl 0x5615b8975620 <line:52:5, col:26> col:14 String 'void (int)'
| `-ParmVarDecl 0x5615b8975590 <col:21, col:25> col:25 x 'int'
|-CXXConstructorDecl 0x5615b8975778 <line:53:5, col:31> col:14 used String 'void (unsigned int)'
| `-ParmVarDecl 0x5615b89756e8 <col:21, col:30> col:30 x 'unsigned int'
|-CXXConstructorDecl 0x5615b89758d0 <line:54:5, col:27> col:14 String 'void (long)'
| `-ParmVarDecl 0x5615b8975840 <col:21, col:26> col:26 x 'long'
|-CXXConstructorDecl 0x5615b8975a58 <line:55:5, col:36> col:14 String 'void (unsigned long)'
| `-ParmVarDecl 0x5615b8975998 <col:21, col:35> col:35 x 'unsigned long'
|-CXXConstructorDecl 0x5615b8975be8 <line:57:5, col:32> col:14 String 'void (long long)'
| `-ParmVarDecl 0x5615b8975b20 <col:21, col:31> col:31 x 'long long'
|-CXXConstructorDecl 0x5615b8975d78 <line:58:5, col:41> col:14 String 'void (unsigned long long)'
| `-ParmVarDecl 0x5615b8975cb0 <col:21, col:40> col:40 x 'unsigned long long'
|-CXXConstructorDecl 0x5615b8975f08 <line:65:5, col:29> col:14 String 'void (double)'
| `-ParmVarDecl 0x5615b8975e40 <col:21, col:28> col:28 x 'double'
|-CXXDestructorDecl 0x5615b8976000 <line:67:5, col:20> col:12 used ~String 'void () noexcept' inline
|-CXXMethodDecl 0x5615b8976128 <line:69:5, col:44> col:33 make_empty 'const String &()' static inline
|-CXXMethodDecl 0x5615b89762a8 <line:70:5, col:52> col:26 used make_uninitialized 'String (int)' static inline
| `-ParmVarDecl 0x5615b89761e0 <col:45, col:49> col:49 len 'int'
|-CXXMethodDecl 0x5615b89763f8 <line:71:5, col:74> col:26 make_garbage 'String (int)' static inline
| |-ParmVarDecl 0x5615b8976368 <col:39, col:43> col:43 len 'int'
| `-DeprecatedAttr 0x5615b89764b0 <col:63> "" ""
|-CXXMethodDecl 0x5615b89765f8 <line:72:5, col:54> col:26 make_stable 'String (const char *)' static inline
| `-ParmVarDecl 0x5615b8976538 <col:38, col:50> col:50 cstr 'const char *'
|-CXXMethodDecl 0x5615b8976808 <line:73:5, col:60> col:26 make_stable 'String (const char *, int)' static inline
| |-ParmVarDecl 0x5615b89766b8 <col:38, col:50> col:50 s 'const char *'
| `-ParmVarDecl 0x5615b8976738 <col:53, col:57> col:57 len 'int'
|-CXXMethodDecl 0x5615b8976a28 <line:74:5, col:73> col:26 make_stable 'String (const char *, const char *)' static inline
| |-ParmVarDecl 0x5615b89768d0 <col:38, col:50> col:50 first 'const char *'
| `-ParmVarDecl 0x5615b8976950 <col:57, col:69> col:69 last 'const char *'
|-CXXMethodDecl 0x5615b8976d08 <line:75:5, col:80> col:19 make_numeric 'String (String::intmax_t, int, bool)' static
| |-ParmVarDecl 0x5615b8976ae8 <col:32, col:41> col:41 x 'String::intmax_t':'long'
| |-ParmVarDecl 0x5615b8976b68 <col:44, col:55> col:48 base 'int' cinit
| | `-IntegerLiteral 0x5615b8982b50 <col:55> 'int' 10
| `-ParmVarDecl 0x5615b8976be0 <col:59, col:76> col:64 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x5615b8982b70 <col:76> 'bool' true
|-CXXMethodDecl 0x5615b8976fe8 <line:76:5, col:81> col:19 make_numeric 'String (String::uintmax_t, int, bool)' static
| |-ParmVarDecl 0x5615b8976dd0 <col:32, col:42> col:42 x 'String::uintmax_t':'unsigned long'
| |-ParmVarDecl 0x5615b8976e50 <col:45, col:56> col:49 base 'int' cinit
| | `-IntegerLiteral 0x5615b8982b80 <col:56> 'int' 10
| `-ParmVarDecl 0x5615b8976ec8 <col:60, col:77> col:65 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x5615b8982ba0 <col:77> 'bool' true
|-CXXMethodDecl 0x5615b89770f0 <line:78:5, col:31> col:24 used data 'const char *() const' inline
|-CXXMethodDecl 0x5615b89771b8 <line:79:5, col:25> col:16 used length 'int () const' inline
|-CXXMethodDecl 0x5615b8977280 <line:81:5, col:60> col:52 c_str 'const char *() const'
| |-NoInlineAttr 0x5615b8977320 <col:20>
| `-OptimizeNoneAttr 0x5615b8977378 <col:30>
|-CXXConversionDecl 0x5615b8977468 <line:83:5, col:45> col:12 operator int (String::*)() const 'String::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x5615b8977538 <line:84:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x5615b89775f8 <line:85:5, col:29> col:17 operator! 'bool () const' inline
|-CXXMethodDecl 0x5615b89776e8 <line:87:5, col:35> col:27 used begin 'String::const_iterator () const' inline
|-CXXMethodDecl 0x5615b89777a8 <line:88:5, col:33> col:27 used end 'String::const_iterator () const' inline
|-CXXMethodDecl 0x5615b8977928 <line:90:5, col:35> col:17 operator[] 'char (int) const' inline
| `-ParmVarDecl 0x5615b8977860 <col:28, col:32> col:32 i 'int'
|-CXXMethodDecl 0x5615b8977a78 <line:91:5, col:27> col:17 at 'char (int) const' inline
| `-ParmVarDecl 0x5615b89779e8 <col:20, col:24> col:24 i 'int'
|-CXXMethodDecl 0x5615b8977b68 <line:92:5, col:25> col:17 front 'char () const' inline
|-CXXMethodDecl 0x5615b8977c28 <line:93:5, col:24> col:17 back 'char () const' inline
|-CXXMethodDecl 0x5615b8977e78 <line:95:5, col:64> col:21 used hashcode 'uint32_t (const char *, const char *)' static
| |-ParmVarDecl 0x5615b8977ce0 <col:30, col:42> col:42 begin 'const char *'
| `-ParmVarDecl 0x5615b8977d60 <col:49, col:61> col:61 end 'const char *'
|-CXXMethodDecl 0x5615b89780d8 <line:96:5, line:97:33> line:96:28 hashcode 'uint32_t (const unsigned char *, const unsigned char *)' static inline
| |-ParmVarDecl 0x5615b8977f40 <col:37, col:58> col:58 begin 'const unsigned char *'
| `-ParmVarDecl 0x5615b8977fc0 <line:97:9, col:30> col:30 end 'const unsigned char *'
|-CXXMethodDecl 0x5615b89781a8 <line:98:5, col:32> col:21 hashcode 'uint32_t () const' inline
|-CXXMethodDecl 0x5615b89783b8 <line:100:5, col:65> col:19 substring 'String (const char *, const char *) const' inline
| |-ParmVarDecl 0x5615b8978260 <col:29, col:41> col:41 begin 'const char *'
| `-ParmVarDecl 0x5615b89782e0 <col:48, col:60> col:60 end 'const char *'
|-CXXMethodDecl 0x5615b89785d8 <line:101:5, col:40> col:12 used substring 'String (int, int) const'
| |-ParmVarDecl 0x5615b8978480 <col:22, col:26> col:26 pos 'int'
| `-ParmVarDecl 0x5615b8978500 <col:31, col:35> col:35 len 'int'
|-CXXMethodDecl 0x5615b8978768 <line:102:5, col:38> col:19 substring 'String (int) const' inline
| `-ParmVarDecl 0x5615b89786a0 <col:29, col:33> col:33 pos 'int'
|-CXXMethodDecl 0x5615b8978858 <line:103:5, col:25> col:12 trim_space 'String () const'
|-CXXMethodDecl 0x5615b89789c8 <line:105:5, col:41> col:17 equals 'bool (const String &) const' inline
| `-ParmVarDecl 0x5615b8978908 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x5615b8978bd8 <line:106:5, col:48> col:17 used equals 'bool (const char *, int) const' inline
| |-ParmVarDecl 0x5615b8978a88 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x5615b8978b08 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x5615b8978df0 <line:107:5, col:63> col:23 used compare 'int (const String &, const String &)' static inline
| |-ParmVarDecl 0x5615b8978c98 <col:31, col:45> col:45 a 'const String &'
| `-ParmVarDecl 0x5615b8978d10 <col:48, col:62> col:62 b 'const String &'
|-CXXMethodDecl 0x5615b8978f80 <line:108:5, col:41> col:16 used compare 'int (const String &) const' inline
| `-ParmVarDecl 0x5615b8978eb0 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x5615b89791a0 <line:109:5, col:41> col:9 used compare 'int (const char *, int) const'
| |-ParmVarDecl 0x5615b8979040 <col:17, col:29> col:29 s 'const char *'
| `-ParmVarDecl 0x5615b89790c0 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x5615b89792f0 <line:110:5, col:46> col:17 starts_with 'bool (const String &) const' inline
| `-ParmVarDecl 0x5615b8979260 <col:29, col:43> col:43 x 'const String &'
|-CXXMethodDecl 0x5615b89794c8 <line:111:5, col:46> col:10 used starts_with 'bool (const char *, int) const'
| |-ParmVarDecl 0x5615b89793b0 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x5615b8979430 <col:37, col:41> col:41 len 'int'
|-CXXMethodDecl 0x5615b8979618 <line:112:5, col:44> col:10 glob_match 'bool (const String &) const'
| `-ParmVarDecl 0x5615b8979588 <col:21, col:35> col:35 pattern 'const String &'
|-CXXMethodDecl 0x5615b8979830 <line:125:5, col:42> col:9 find_left 'int (char, int) const'
| |-ParmVarDecl 0x5615b89796d0 <col:19, col:24> col:24 c 'char'
| `-ParmVarDecl 0x5615b8979750 <col:27, col:39> col:31 start 'int' cinit
|   `-IntegerLiteral 0x5615b8982bb0 <col:39> 'int' 0
|-CXXMethodDecl 0x5615b8979a50 <line:126:5, col:51> col:9 find_left 'int (const String &, int) const'
| |-ParmVarDecl 0x5615b89798f0 <col:19, col:33> col:33 x 'const String &'
| `-ParmVarDecl 0x5615b8979970 <col:36, col:48> col:40 start 'int' cinit
|   `-IntegerLiteral 0x5615b8982bd0 <col:48> 'int' 0
|-CXXMethodDecl 0x5615b8979c30 <line:127:5, col:52> col:9 find_right 'int (char, int) const'
| |-ParmVarDecl 0x5615b8979b10 <col:20, col:25> col:25 c 'char'
| `-ParmVarDecl 0x5615b8979b90 <col:28, col:40> col:32 start 'int' cinit
|   `-IntegerLiteral 0x5615b8982bf0 <col:40> 'int' 2147483647
|-CXXMethodDecl 0x5615b8979d00 <line:129:5, col:20> col:12 lower 'String () const'
|-CXXMethodDecl 0x5615b8979dc0 <line:130:5, col:20> col:12 upper 'String () const'
|-CXXMethodDecl 0x5615b8979e80 <line:131:5, col:24> col:12 printable 'String () const'
|-CXXMethodDecl 0x5615b8979f40 <line:132:5, col:25> col:12 quoted_hex 'String () const'
|-CXXMethodDecl 0x5615b897a000 <line:133:5, col:26> col:12 encode_json 'String () const'
|-CXXMethodDecl 0x5615b897a1a8 <line:135:5, col:45> col:20 operator= 'String &(const String &)' inline
| `-ParmVarDecl 0x5615b897a0b0 <col:30, col:44> col:44 x 'const String &'
|-CXXMethodDecl 0x5615b897a328 <line:137:5, col:40> col:20 operator= 'String &(String &&)' inline
| `-ParmVarDecl 0x5615b897a260 <col:30, col:39> col:39 x 'String &&'
|-CXXMethodDecl 0x5615b897a500 <line:139:5, col:46> col:20 operator= 'String &(const char *)' inline
| `-ParmVarDecl 0x5615b897a3e8 <col:30, col:42> col:42 cstr 'const char *'
|-CXXMethodDecl 0x5615b897a678 <line:141:5, col:31> col:17 swap 'void (String &)' inline
| `-ParmVarDecl 0x5615b897a5b8 <col:22, col:30> col:30 x 'String &'
|-CXXMethodDecl 0x5615b897a7c0 <line:143:5, col:39> col:17 append 'void (const String &)' inline
| `-ParmVarDecl 0x5615b897a730 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x5615b897a910 <line:144:5, col:40> col:17 used append 'void (const char *)' inline
| `-ParmVarDecl 0x5615b897a880 <col:24, col:36> col:36 cstr 'const char *'
|-CXXMethodDecl 0x5615b897aae8 <line:145:5, col:46> col:17 used append 'void (const char *, int)' inline
| |-ParmVarDecl 0x5615b897a9d0 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x5615b897aa50 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x5615b897acc8 <line:146:5, col:59> col:17 append 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x5615b897abb0 <col:24, col:36> col:36 first 'const char *'
| `-ParmVarDecl 0x5615b897ac30 <col:43, col:55> col:55 last 'const char *'
|-CXXMethodDecl 0x5615b897ae18 <line:147:5, col:30> col:17 append 'void (char)' inline
| `-ParmVarDecl 0x5615b897ad88 <col:24, col:29> col:29 c 'char'
|-CXXMethodDecl 0x5615b897b028 <line:148:5, col:36> col:10 append_fill 'void (int, int)'
| |-ParmVarDecl 0x5615b897aed8 <col:22, col:26> col:26 c 'int'
| `-ParmVarDecl 0x5615b897af58 <col:29, col:33> col:33 len 'int'
|-CXXMethodDecl 0x5615b897b188 <line:149:5, col:39> col:11 used append_uninitialized 'char *(int)'
| `-ParmVarDecl 0x5615b897b0f0 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x5615b897b2e0 <line:150:5, col:68> col:18 append_garbage 'char *(int)' inline
| |-ParmVarDecl 0x5615b897b248 <col:33, col:37> col:37 len 'int'
| `-DeprecatedAttr 0x5615b897b388 <col:57> "" ""
|-CXXMethodDecl 0x5615b897b498 <line:152:5, col:46> col:20 used operator+= 'String &(const String &)' inline
| `-ParmVarDecl 0x5615b897b408 <col:31, col:45> col:45 x 'const String &'
|-CXXMethodDecl 0x5615b897b5e8 <line:153:5, col:47> col:20 operator+= 'String &(const char *)' inline
| `-ParmVarDecl 0x5615b897b558 <col:31, col:43> col:43 cstr 'const char *'
|-CXXMethodDecl 0x5615b897b768 <line:154:5, col:37> col:20 operator+= 'String &(char)' inline
| `-ParmVarDecl 0x5615b897b6a0 <col:31, col:36> col:36 c 'char'
|-CXXMethodDecl 0x5615b897b830 <line:160:5, col:29> col:17 is_shared 'bool () const' inline
|-CXXMethodDecl 0x5615b897b8f0 <line:161:5, col:29> col:17 is_stable 'bool () const' inline
|-CXXMethodDecl 0x5615b897b9b0 <line:163:5, col:60> col:19 unique 'String () const' inline
| `-DeprecatedAttr 0x5615b897ba50 <col:49> "" ""
|-CXXMethodDecl 0x5615b897bae0 <line:164:5, col:30> col:19 used unshared 'String () const' inline
|-CXXMethodDecl 0x5615b897bba0 <line:165:5, col:29> col:19 compact 'String () const' inline
|-CXXMethodDecl 0x5615b897bc90 <line:167:5, col:24> col:11 mutable_data 'char *()'
|-CXXMethodDecl 0x5615b897bd58 <line:168:5, col:25> col:11 mutable_c_str 'char *()'
|-CXXMethodDecl 0x5615b897be18 <line:170:5, col:52> col:33 make_out_of_memory 'const String &()' static inline
|-CXXMethodDecl 0x5615b897bed8 <line:171:5, col:33> col:17 out_of_memory 'bool () const' inline
|-CXXMethodDecl 0x5615b897bfd0 <line:172:5, col:50> col:31 out_of_memory_data 'const char *()' static inline
|-CXXMethodDecl 0x5615b897c098 <line:173:5, col:44> col:23 out_of_memory_length 'int ()' static inline
|-CXXMethodDecl 0x5615b897c160 <line:174:5, col:42> col:31 empty_data 'const char *()' static inline
|-CXXMethodDecl 0x5615b897c338 <line:180:5, col:81> col:31 skip_utf8_char 'const char *(const char *, const char *)' static inline
| |-ParmVarDecl 0x5615b897c218 <col:46, col:58> col:58 first 'const char *'
| `-ParmVarDecl 0x5615b897c298 <col:65, col:77> col:77 last 'const char *'
|-CXXMethodDecl 0x5615b897c560 <line:181:5, line:182:38> line:181:33 used skip_utf8_char 'const unsigned char *(const unsigned char *, const unsigned char *)' static
| |-ParmVarDecl 0x5615b897c400 <col:48, col:69> col:69 first 'const unsigned char *'
| `-ParmVarDecl 0x5615b897c480 <line:182:13, col:34> col:34 last 'const unsigned char *'
|-VarDecl 0x5615b897c670 <line:184:5, col:35> col:23 used bool_data 'const char [11]' static
|-AccessSpecDecl 0x5615b897c6d8 <line:186:3, col:10> col:3 private
|-CXXRecordDecl 0x5615b897c700 <line:189:5, line:198:5> line:189:12 referenced struct memo_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x5615b897c818 <col:5, col:12> col:12 implicit struct memo_t
| |-FieldDecl 0x5615b897c8b8 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
| |-FieldDecl 0x5615b897c918 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
| |-FieldDecl 0x5615b897c978 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
| `-FieldDecl 0x5615b897ca28 <line:197:2, col:18> col:7 real_data 'char [8]'
|-EnumDecl 0x5615b897ca90 <line:200:5, line:202:5> line:200:5
| `-EnumConstantDecl 0x5615b897ccc8 <line:201:2, col:32> col:2 MEMO_SPACE 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)'
|   `-ImplicitCastExpr 0x5615b897cd18 <col:15, col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5615b897cca8 <col:15, col:32> 'unsigned long' Int: 12
|       `-BinaryOperator 0x5615b897cbb8 <col:15, col:32> 'unsigned long' '-'
|         |-UnaryExprOrTypeTraitExpr 0x5615b897cb60 <col:15, col:28> 'unsigned long' sizeof 'String::memo_t'
|         `-ImplicitCastExpr 0x5615b897cba0 <col:32> 'unsigned long' <IntegralCast>
|           `-IntegerLiteral 0x5615b897cb80 <col:32> 'int' 8
|-CXXRecordDecl 0x5615b897cd30 <line:204:5, line:208:5> line:204:12 referenced struct rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x5615b897ce48 <col:5, col:12> col:12 implicit struct rep_t
| |-FieldDecl 0x5615b897cef0 <line:205:2, col:14> col:14 referenced data 'const char *'
| |-FieldDecl 0x5615b897cf58 <line:206:2, col:6> col:6 referenced length 'int'
| |-FieldDecl 0x5615b897cfe8 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
| |-CXXConstructorDecl 0x5615b8983080 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x5615b89834b8 <col:12>
| |-CXXConstructorDecl 0x5615b8983188 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x5615b8983298 <col:12> col:12 used 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x5615b897cef0 'data' 'const char *'
| | | `-ImplicitCastExpr 0x5615b8985a40 <col:12> 'const char *' <LValueToRValue>
| | |   `-MemberExpr 0x5615b8985a10 <col:12> 'const char *const' lvalue .data 0x5615b897cef0
| | |     `-DeclRefExpr 0x5615b89859f0 <col:12> 'const String::rep_t' lvalue ParmVar 0x5615b8983298 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x5615b897cf58 'length' 'int'
| | | `-ImplicitCastExpr 0x5615b8985ad0 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x5615b8985aa0 <col:12> 'const int' lvalue .length 0x5615b897cf58
| | |     `-DeclRefExpr 0x5615b8985a80 <col:12> 'const String::rep_t' lvalue ParmVar 0x5615b8983298 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x5615b897cfe8 'memo' 'String::memo_t *'
| | | `-ImplicitCastExpr 0x5615b8985b60 <col:12> 'String::memo_t *' <LValueToRValue>
| | |   `-MemberExpr 0x5615b8985b30 <col:12> 'String::memo_t *const' lvalue .memo 0x5615b897cfe8
| | |     `-DeclRefExpr 0x5615b8985b10 <col:12> 'const String::rep_t' lvalue ParmVar 0x5615b8983298 '' 'const String::rep_t &'
| | `-CompoundStmt 0x5615b8985bb8 <col:12>
| |-CXXConstructorDecl 0x5615b8983338 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x5615b8983338
| | `-ParmVarDecl 0x5615b8983448 <col:12> col:12 'String::rep_t &&'
| |-CXXDestructorDecl 0x5615b89889a0 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x5615b89943b8 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x5615b89944c8 <col:12> col:12 used 'const String::rep_t &'
| | `-CompoundStmt 0x5615b89949e0 <col:12>
| |   |-BinaryOperator 0x5615b89947f8 <col:12> 'const char *' lvalue '='
| |   | |-MemberExpr 0x5615b89947b0 <col:12> 'const char *' lvalue ->data 0x5615b897cef0
| |   | | `-CXXThisExpr 0x5615b89947a0 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x5615b89947e0 <col:12> 'const char *' <LValueToRValue>
| |   |   `-MemberExpr 0x5615b8994770 <col:12> 'const char *const' lvalue .data 0x5615b897cef0
| |   |     `-DeclRefExpr 0x5615b8994750 <col:12> 'const String::rep_t' lvalue ParmVar 0x5615b89944c8 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x5615b89948c0 <col:12> 'int' lvalue '='
| |   | |-MemberExpr 0x5615b8994878 <col:12> 'int' lvalue ->length 0x5615b897cf58
| |   | | `-CXXThisExpr 0x5615b8994868 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x5615b89948a8 <col:12> 'int' <LValueToRValue>
| |   |   `-MemberExpr 0x5615b8994838 <col:12> 'const int' lvalue .length 0x5615b897cf58
| |   |     `-DeclRefExpr 0x5615b8994818 <col:12> 'const String::rep_t' lvalue ParmVar 0x5615b89944c8 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x5615b8994988 <col:12> 'String::memo_t *' lvalue '='
| |   | |-MemberExpr 0x5615b8994940 <col:12> 'String::memo_t *' lvalue ->memo 0x5615b897cfe8
| |   | | `-CXXThisExpr 0x5615b8994930 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x5615b8994970 <col:12> 'String::memo_t *' <LValueToRValue>
| |   |   `-MemberExpr 0x5615b8994900 <col:12> 'String::memo_t *const' lvalue .memo 0x5615b897cfe8
| |   |     `-DeclRefExpr 0x5615b89948e0 <col:12> 'const String::rep_t' lvalue ParmVar 0x5615b89944c8 '' 'const String::rep_t &'
| |   `-ReturnStmt 0x5615b89949d0 <col:12>
| |     `-UnaryOperator 0x5615b89949b8 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x5615b89949a8 <col:12> 'String::rep_t *' this
| `-CXXMethodDecl 0x5615b8994538 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x5615b8994538
|   `-ParmVarDecl 0x5615b8994648 <col:12> col:12 'String::rep_t &&'
|-FieldDecl 0x5615b897d060 <line:211:5, col:19> col:19 referenced _r 'String::rep_t' mutable
|-CXXMethodDecl 0x5615b897d2a8 <line:256:5, line:261:5> line:256:17 used assign_memo 'void (const char *, int, String::memo_t *) const' inline
| |-ParmVarDecl 0x5615b897d0c8 <col:29, col:41> col:41 used data 'const char *'
| |-ParmVarDecl 0x5615b897d148 <col:47, col:51> col:51 used length 'int'
| |-ParmVarDecl 0x5615b897d1c0 <col:59, col:67> col:67 used memo 'String::memo_t *'
| `-CompoundStmt 0x5615b8983040 <col:79, line:261:5>
|   |-BinaryOperator 0x5615b8982cb8 <line:257:2, col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x5615b8982c50 <col:2, col:5> 'const char *' lvalue .data 0x5615b897cef0
|   | | `-MemberExpr 0x5615b8982c20 <col:2> 'String::rep_t' lvalue ->_r 0x5615b897d060
|   | |   `-CXXThisExpr 0x5615b8982c10 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x5615b8982ca0 <col:12> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x5615b8982c80 <col:12> 'const char *' lvalue ParmVar 0x5615b897d0c8 'data' 'const char *'
|   |-BinaryOperator 0x5615b8982d80 <line:258:2, col:14> 'int' lvalue '='
|   | |-MemberExpr 0x5615b8982d18 <col:2, col:5> 'int' lvalue .length 0x5615b897cf58
|   | | `-MemberExpr 0x5615b8982ce8 <col:2> 'String::rep_t' lvalue ->_r 0x5615b897d060
|   | |   `-CXXThisExpr 0x5615b8982cd8 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x5615b8982d68 <col:14> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5615b8982d48 <col:14> 'int' lvalue ParmVar 0x5615b897d148 'length' 'int'
|   `-IfStmt 0x5615b8983028 <line:259:2, line:260:41>
|     |-ImplicitCastExpr 0x5615b8982ea0 <line:259:6, col:21> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x5615b8982e88 <col:6, col:21> 'String::memo_t *' <LValueToRValue>
|     |   `-ParenExpr 0x5615b8982e68 <col:6, col:21> 'String::memo_t *' lvalue
|     |     `-BinaryOperator 0x5615b8982e48 <col:7, col:17> 'String::memo_t *' lvalue '='
|     |       |-MemberExpr 0x5615b8982de0 <col:7, col:10> 'String::memo_t *' lvalue .memo 0x5615b897cfe8
|     |       | `-MemberExpr 0x5615b8982db0 <col:7> 'String::rep_t' lvalue ->_r 0x5615b897d060
|     |       |   `-CXXThisExpr 0x5615b8982da0 <col:7> 'const String *' implicit this
|     |       `-ImplicitCastExpr 0x5615b8982e30 <col:17> 'String::memo_t *' <LValueToRValue>
|     |         `-DeclRefExpr 0x5615b8982e10 <col:17> 'String::memo_t *' lvalue ParmVar 0x5615b897d1c0 'memo' 'String::memo_t *'
|     `-CallExpr 0x5615b8983000 <line:260:6, col:41> 'void'
|       |-ImplicitCastExpr 0x5615b8982fe8 <col:6, col:23> 'void (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x5615b8982ef0 <col:6, col:23> 'void (volatile uint32_t &)' lvalue CXXMethod 0x5615b896bcd8 'inc' 'void (volatile uint32_t &)'
|       `-MemberExpr 0x5615b8982f58 <col:27, col:33> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x5615b897c8b8
|         `-ImplicitCastExpr 0x5615b8982f40 <col:27> 'String::memo_t *' <LValueToRValue>
|           `-DeclRefExpr 0x5615b8982f20 <col:27> 'String::memo_t *' lvalue ParmVar 0x5615b897d1c0 'memo' 'String::memo_t *'
|-CXXConstructorDecl 0x5615b897d558 <line:263:5, line:265:5> line:263:12 used String 'void (const char *, int, String::memo_t *)' inline
| |-ParmVarDecl 0x5615b897d378 <col:19, col:31> col:31 used data 'const char *'
| |-ParmVarDecl 0x5615b897d3f8 <col:37, col:41> col:41 used length 'int'
| |-ParmVarDecl 0x5615b897d470 <col:49, col:57> col:57 used memo 'String::memo_t *'
| |-CXXCtorInitializer Field 0x5615b897d060 '_r' 'String::rep_t'
| | `-CXXConstructExpr 0x5615b89834c8 <col:12> 'String::rep_t' 'void () noexcept'
| `-CompoundStmt 0x5615b8983658 <col:63, line:265:5>
|   `-CXXMemberCallExpr 0x5615b89835c0 <line:264:2, col:32> 'void'
|     |-MemberExpr 0x5615b8983530 <col:2> '<bound member function type>' ->assign_memo 0x5615b897d2a8
|     | `-ImplicitCastExpr 0x5615b89835f8 <col:2> 'const String *' <NoOp>
|     |   `-CXXThisExpr 0x5615b8983520 <col:2> 'String *' implicit this
|     |-ImplicitCastExpr 0x5615b8983610 <col:14> 'const char *' <LValueToRValue>
|     | `-DeclRefExpr 0x5615b8983560 <col:14> 'const char *' lvalue ParmVar 0x5615b897d378 'data' 'const char *'
|     |-ImplicitCastExpr 0x5615b8983628 <col:20> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x5615b8983580 <col:20> 'int' lvalue ParmVar 0x5615b897d3f8 'length' 'int'
|     `-ImplicitCastExpr 0x5615b8983640 <col:28> 'String::memo_t *' <LValueToRValue>
|       `-DeclRefExpr 0x5615b89835a0 <col:28> 'String::memo_t *' lvalue ParmVar 0x5615b897d470 'memo' 'String::memo_t *'
|-CXXMethodDecl 0x5615b897d6e8 <line:267:5, line:269:5> line:267:17 used assign 'void (const String &) const' inline
| |-ParmVarDecl 0x5615b897d628 <col:24, col:38> col:38 used x 'const String &'
| `-CompoundStmt 0x5615b89838b0 <col:47, line:269:5>
|   `-CXXMemberCallExpr 0x5615b8983830 <line:268:2, col:47> 'void'
|     |-MemberExpr 0x5615b8983680 <col:2> '<bound member function type>' ->assign_memo 0x5615b897d2a8
|     | `-CXXThisExpr 0x5615b8983670 <col:2> 'const String *' implicit this
|     |-ImplicitCastExpr 0x5615b8983868 <col:14, col:19> 'const char *' <LValueToRValue>
|     | `-MemberExpr 0x5615b8983700 <col:14, col:19> 'const char *' lvalue .data 0x5615b897cef0
|     |   `-MemberExpr 0x5615b89836d0 <col:14, col:16> 'String::rep_t' lvalue ._r 0x5615b897d060
|     |     `-DeclRefExpr 0x5615b89836b0 <col:14> 'const String' lvalue ParmVar 0x5615b897d628 'x' 'const String &'
|     |-ImplicitCastExpr 0x5615b8983880 <col:25, col:30> 'int' <LValueToRValue>
|     | `-MemberExpr 0x5615b8983780 <col:25, col:30> 'int' lvalue .length 0x5615b897cf58
|     |   `-MemberExpr 0x5615b8983750 <col:25, col:27> 'String::rep_t' lvalue ._r 0x5615b897d060
|     |     `-DeclRefExpr 0x5615b8983730 <col:25> 'const String' lvalue ParmVar 0x5615b897d628 'x' 'const String &'
|     `-ImplicitCastExpr 0x5615b8983898 <col:38, col:43> 'String::memo_t *' <LValueToRValue>
|       `-MemberExpr 0x5615b8983800 <col:38, col:43> 'String::memo_t *' lvalue .memo 0x5615b897cfe8
|         `-MemberExpr 0x5615b89837d0 <col:38, col:40> 'String::rep_t' lvalue ._r 0x5615b897d060
|           `-DeclRefExpr 0x5615b89837b0 <col:38> 'const String' lvalue ParmVar 0x5615b897d628 'x' 'const String &'
|-CXXMethodDecl 0x5615b897d7b0 <line:271:5, line:278:5> line:271:17 used deref 'void () const' inline
| `-CompoundStmt 0x5615b8984270 <col:31, line:278:5>
|   `-IfStmt 0x5615b8984258 <line:272:2, line:277:2>
|     |-ImplicitCastExpr 0x5615b8983950 <line:272:6, col:9> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x5615b8983938 <col:6, col:9> 'String::memo_t *' <LValueToRValue>
|     |   `-MemberExpr 0x5615b8983908 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x5615b897cfe8
|     |     `-MemberExpr 0x5615b89838d8 <col:6> 'String::rep_t' lvalue ->_r 0x5615b897d060
|     |       `-CXXThisExpr 0x5615b89838c8 <col:6> 'const String *' implicit this
|     `-CompoundStmt 0x5615b8984230 <col:15, line:277:2>
|       |-ParenExpr 0x5615b8983e00 <line:273:6, col:166> 'void'
|       | `-ConditionalOperator 0x5615b8983dd0 <col:7, col:165> 'void'
|       |   |-CXXStaticCastExpr 0x5615b8983a60 <col:7, col:44> 'bool' static_cast<_Bool> <NoOp>
|       |   | `-ImplicitCastExpr 0x5615b8983a48 <col:27, col:36> 'bool' <IntegralToBoolean> part_of_explicit_cast
|       |   |   `-ImplicitCastExpr 0x5615b8983a30 <col:27, col:36> 'uint32_t':'unsigned int' <LValueToRValue> part_of_explicit_cast
|       |   |     `-MemberExpr 0x5615b89839f0 <col:27, col:36> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x5615b897c8b8
|       |   |       `-ImplicitCastExpr 0x5615b89839d8 <col:27, col:30> 'String::memo_t *' <LValueToRValue>
|       |   |         `-MemberExpr 0x5615b89839a8 <col:27, col:30> 'String::memo_t *' lvalue .memo 0x5615b897cfe8
|       |   |           `-MemberExpr 0x5615b8983978 <col:27> 'String::rep_t' lvalue ->_r 0x5615b897d060
|       |   |             `-CXXThisExpr 0x5615b8983968 <col:27> 'const String *' implicit this
|       |   |-CXXFunctionalCastExpr 0x5615b8983ac0 <col:48, col:55> 'void' functional cast to void <ToVoid>
|       |   | `-IntegerLiteral 0x5615b8983aa0 <col:54> 'int' 0
|       |   `-CallExpr 0x5615b8983d30 <col:59, col:165> 'void'
|       |     |-ImplicitCastExpr 0x5615b8983d18 <col:59> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x5615b8983c98 <col:59> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5615b86e2f60 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|       |     |-ImplicitCastExpr 0x5615b8983d70 <col:74> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x5615b8983ba8 <col:74> 'const char [18]' lvalue "_r.memo->refcount"
|       |     |-ImplicitCastExpr 0x5615b8983d88 <col:95> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x5615b8983bd8 <col:95> 'const char [29]' lvalue "../dummy_inc/click/string.hh"
|       |     |-ImplicitCastExpr 0x5615b8983da0 <col:127> 'unsigned int' <IntegralCast>
|       |     | `-IntegerLiteral 0x5615b8983c10 <col:127> 'int' 273
|       |     `-ImplicitCastExpr 0x5615b8983db8 <col:132, col:146> 'const char *' <ArrayToPointerDecay>
|       |       `-UnaryOperator 0x5615b8983c80 <col:132, col:146> 'const char [27]' lvalue prefix '__extension__' cannot overflow
|       |         `-PredefinedExpr 0x5615b8983c68 <col:146> 'const char [27]' lvalue __PRETTY_FUNCTION__
|       |           `-StringLiteral 0x5615b8983c30 <col:146> 'const char [27]' lvalue "void String::deref() const"
|       |-IfStmt 0x5615b8984150 <line:274:6, line:275:22>
|       | |-CallExpr 0x5615b8984010 <line:274:10, col:57> 'bool'
|       | | |-ImplicitCastExpr 0x5615b8983ff8 <col:10, col:27> 'bool (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | | | `-DeclRefExpr 0x5615b8983f70 <col:10, col:27> 'bool (volatile uint32_t &)' lvalue CXXMethod 0x5615b896d120 'dec_and_test' 'bool (volatile uint32_t &)'
|       | | `-MemberExpr 0x5615b8983f40 <col:40, col:49> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x5615b897c8b8
|       | |   `-ImplicitCastExpr 0x5615b8983f28 <col:40, col:43> 'String::memo_t *' <LValueToRValue>
|       | |     `-MemberExpr 0x5615b8983ef8 <col:40, col:43> 'String::memo_t *' lvalue .memo 0x5615b897cfe8
|       | |       `-MemberExpr 0x5615b8983ec8 <col:40> 'String::rep_t' lvalue ->_r 0x5615b897d060
|       | |         `-CXXThisExpr 0x5615b8983eb8 <col:40> 'const String *' implicit this
|       | `-CallExpr 0x5615b8984110 <line:275:3, col:22> 'void'
|       |   |-ImplicitCastExpr 0x5615b89840f8 <col:3> 'void (*)(String::memo_t *)' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x5615b8984038 <col:3> 'void (String::memo_t *)' lvalue CXXMethod 0x5615b8981f90 'delete_memo' 'void (String::memo_t *)'
|       |   `-ImplicitCastExpr 0x5615b8984138 <col:15, col:18> 'String::memo_t *' <LValueToRValue>
|       |     `-MemberExpr 0x5615b8984098 <col:15, col:18> 'String::memo_t *' lvalue .memo 0x5615b897cfe8
|       |       `-MemberExpr 0x5615b8984068 <col:15> 'String::rep_t' lvalue ->_r 0x5615b897d060
|       |         `-CXXThisExpr 0x5615b8984058 <col:15> 'const String *' implicit this
|       `-BinaryOperator 0x5615b8984210 <line:276:6, col:16> 'String::memo_t *' lvalue '='
|         |-MemberExpr 0x5615b89841a8 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x5615b897cfe8
|         | `-MemberExpr 0x5615b8984178 <col:6> 'String::rep_t' lvalue ->_r 0x5615b897d060
|         |   `-CXXThisExpr 0x5615b8984168 <col:6> 'const String *' implicit this
|         `-ImplicitCastExpr 0x5615b89841f8 <col:16> 'String::memo_t *' <NullToPointer>
|           `-IntegerLiteral 0x5615b89841d8 <col:16> 'int' 0
|-CXXMethodDecl 0x5615b897da48 <line:280:5, col:56> col:10 used assign 'void (const char *, int, bool)'
| |-ParmVarDecl 0x5615b897d868 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x5615b897d8e8 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x5615b897d960 <col:41, col:46> col:46 need_deref 'bool'
|-CXXMethodDecl 0x5615b897db20 <line:281:5, col:31> col:10 assign_out_of_memory 'void ()'
|-CXXMethodDecl 0x5615b897dd70 <line:282:5, col:53> col:10 used append 'void (const char *, int, String::memo_t *)'
| |-ParmVarDecl 0x5615b897dbd8 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x5615b897dc58 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x5615b897dcd0 <col:41, col:49> col:49 memo 'String::memo_t *'
|-CXXMethodDecl 0x5615b897df58 <line:283:5, col:58> col:19 used hard_make_stable 'String (const char *, int)' static
| |-ParmVarDecl 0x5615b897de40 <col:36, col:48> col:48 s 'const char *'
| `-ParmVarDecl 0x5615b897dec0 <col:51, col:55> col:55 len 'int'
|-CXXMethodDecl 0x5615b897e058 <line:284:5, line:286:5> line:284:27 used absent_memo 'String::memo_t *()' static inline
| `-CompoundStmt 0x5615b8984348 <col:41, line:286:5>
|   `-ReturnStmt 0x5615b8984338 <line:285:2, col:48>
|     `-CXXReinterpretCastExpr 0x5615b8984308 <col:9, col:48> 'String::memo_t *' reinterpret_cast<struct String::memo_t *> <IntegralToPointer>
|       `-CXXFunctionalCastExpr 0x5615b89842d0 <col:36, col:47> 'uintptr_t':'unsigned long' functional cast to uintptr_t <NoOp>
|         `-ImplicitCastExpr 0x5615b89842b8 <col:46> 'uintptr_t':'unsigned long' <IntegralCast> part_of_explicit_cast
|           `-IntegerLiteral 0x5615b8984298 <col:46> 'int' 1
|-CXXMethodDecl 0x5615b897e2f8 <line:287:5, col:68> col:20 create_memo 'String::memo_t *(char *, int, int)' static
| |-ParmVarDecl 0x5615b897e110 <col:32, col:38> col:38 space 'char *'
| |-ParmVarDecl 0x5615b897e190 <col:45, col:49> col:49 dirty 'int'
| `-ParmVarDecl 0x5615b897e210 <col:56, col:60> col:60 capacity 'int'
|-CXXMethodDecl 0x5615b8981f90 <line:288:5, col:41> col:17 used delete_memo 'void (String::memo_t *)' static
| `-ParmVarDecl 0x5615b897e3c0 <col:29, col:37> col:37 memo 'String::memo_t *'
|-CXXMethodDecl 0x5615b8982060 <line:289:5, col:30> col:17 hard_c_str 'const char *() const'
|-CXXMethodDecl 0x5615b8982230 <line:290:5, col:46> col:10 used hard_equals 'bool (const char *, int) const'
| |-ParmVarDecl 0x5615b8982118 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x5615b8982198 <col:37, col:41> col:41 len 'int'
|-VarDecl 0x5615b89822f0 <line:292:5, col:23> col:23 used null_data 'const char' static
|-VarDecl 0x5615b89823b8 <line:293:5, col:34> col:23 used oom_data 'const char [15]' static
|-VarDecl 0x5615b89824b8 <line:294:5, col:34> col:23 int_data 'const char [20]' static
|-VarDecl 0x5615b8982530 <line:295:5, col:24> col:24 used null_string_rep 'const String::rep_t' static
|-VarDecl 0x5615b89825a8 <line:296:5, col:24> col:24 used oom_string_rep 'const String::rep_t' static
|-EnumDecl 0x5615b8982610 <line:297:5, col:25> col:5
| `-EnumConstantDecl 0x5615b8982710 <col:12, col:22> col:12 referenced oom_len 'String::(anonymous enum at ../dummy_inc/click/string.hh:297:5)'
|   `-ImplicitCastExpr 0x5615b8982760 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5615b89826f0 <col:22> 'int' Int: 14
|       `-IntegerLiteral 0x5615b89826d0 <col:22> 'int' 14
|-CXXMethodDecl 0x5615b8982978 <line:299:5, col:46> col:19 make_claim 'String (char *, int, int)' static
| |-ParmVarDecl 0x5615b8982790 <col:30, col:35> col:36 'char *'
| |-ParmVarDecl 0x5615b8982810 <col:38> col:41 'int'
| `-ParmVarDecl 0x5615b8982890 <col:43> col:46 'int'
|-FriendDecl 0x5615b8982a80 <line:301:5, col:19> col:12 'struct rep_t':'String::rep_t'
`-FriendDecl 0x5615b8982b10 <line:302:5, col:18> col:12 'class StringAccum':'StringAccum'

Layout: <CGRecordLayout
  LLVMType:%class.String = type { %"struct.String::rep_t" }
  NonVirtualBaseLLVMType:%class.String = type { %"struct.String::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>
