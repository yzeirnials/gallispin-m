
*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17)
         0 |   unsigned long long __wseq
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_internal_list
         0 |   struct __pthread_internal_list * __prev
         8 |   struct __pthread_internal_list * __next
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_mutex_s
         0 |   int __lock
         4 |   unsigned int __count
         8 |   int __owner
        12 |   unsigned int __nusers
        16 |   int __kind
        20 |   short __spins
        22 |   short __elision
        24 |   struct __pthread_internal_list __list
        24 |     struct __pthread_internal_list * __prev
        32 |     struct __pthread_internal_list * __next
           | [sizeof=40, dsize=40, align=8,
           |  nvsize=40, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17)
         0 |   unsigned long long __g1_start
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s
         0 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17) 
         0 |     unsigned long long __wseq
         0 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |       unsigned int __low
         4 |       unsigned int __high
         8 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17) 
         8 |     unsigned long long __g1_start
         8 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         8 |       unsigned int __low
        12 |       unsigned int __high
        16 |   unsigned int [2] __g_refs
        24 |   unsigned int [2] __g_size
        32 |   unsigned int __g1_orig_size
        36 |   unsigned int __wrefs
        40 |   unsigned int [2] __g_signals
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_rwlock_arch_t
         0 |   unsigned int __readers
         4 |   unsigned int __writers
         8 |   unsigned int __wrphase_futex
        12 |   unsigned int __writers_futex
        16 |   unsigned int __pad3
        20 |   unsigned int __pad4
        24 |   int __cur_writer
        28 |   int __shared
        32 |   signed char __rwelision
        33 |   unsigned char [7] __pad1
        40 |   unsigned long __pad2
        48 |   unsigned int __flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | lldiv_t
         0 |   long long quot
         8 |   long long rem
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct msghdr
         0 |   void * msg_name
         8 |   socklen_t msg_namelen
        16 |   struct iovec * msg_iov
        24 |   size_t msg_iovlen
        32 |   void * msg_control
        40 |   size_t msg_controllen
        48 |   int msg_flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | struct in_addr
         0 |   in_addr_t s_addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5)
         0 |   uint8_t [16] __u6_addr8
         0 |   uint16_t [8] __u6_addr16
         0 |   uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr
         0 |   sa_family_t sa_family
         2 |   char [14] sa_data
           | [sizeof=16, dsize=16, align=2,
           |  nvsize=16, nvalign=2]

*** Dumping AST Record Layout
         0 | struct in6_addr
         0 |   union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         0 |     uint8_t [16] __u6_addr8
         0 |     uint16_t [8] __u6_addr16
         0 |     uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr_storage
         0 |   sa_family_t ss_family
         2 |   char [118] __ss_padding
       120 |   unsigned long __ss_align
           | [sizeof=128, dsize=128, align=8,
           |  nvsize=128, nvalign=8]

*** Dumping AST Record Layout
         0 | struct sockaddr_in6
         0 |   sa_family_t sin6_family
         2 |   in_port_t sin6_port
         4 |   uint32_t sin6_flowinfo
         8 |   struct in6_addr sin6_addr
         8 |     union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         8 |       uint8_t [16] __u6_addr8
         8 |       uint16_t [8] __u6_addr16
         8 |       uint32_t [4] __u6_addr32
        24 |   uint32_t sin6_scope_id
           | [sizeof=28, dsize=28, align=4,
           |  nvsize=28, nvalign=4]

*** Dumping AST Record Layout
         0 | struct timeval
         0 |   __time_t tv_sec
         8 |   __suseconds_t tv_usec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::memo_t
         0 |   volatile uint32_t refcount
         4 |   uint32_t capacity
         8 |   volatile uint32_t dirty
        12 |   char [8] real_data
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping AST Record Layout
         0 | class IPAddress
         0 |   uint32_t _addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Timestamp::rep_t
         0 |   int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timestamp
         0 |   union Timestamp::rep_t _t
         0 |     int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct timespec
         0 |   __time_t tv_sec
         8 |   __syscall_slong_t tv_nsec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element::Port
         0 |   class Element * _e
         8 |   int _port
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping AST Record Layout
         0 | struct TimerSet::heap_element
         0 |   class Timestamp expiry_s
         0 |     union Timestamp::rep_t _t
         0 |       int64_t x
         8 |   class Timer * t
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct pollfd
         0 |   int fd
         4 |   short events
         6 |   short revents
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | struct SelectSet::SelectorInfo
         0 |   class Element * read
         8 |   class Element * write
        16 |   int pollfd
           | [sizeof=24, dsize=20, align=8,
           |  nvsize=20, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element
         0 |   (Element vtable pointer)
         8 |   class Element::Port *[2] _ports
        24 |   class Element::Port [4] _inline_ports
        88 |   int [2] _nports
        96 |   class Router * _router
       104 |   int _eindex
           | [sizeof=112, dsize=108, align=8,
           |  nvsize=108, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558d61256608 prev 0x558d6124dda8 <../dummy_inc/click/element.hh:214:5, line:252:5> line:214:11 referenced class Port definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x558d61256700 <col:5, col:11> col:11 implicit referenced class Port
|-AccessSpecDecl 0x558d61256790 <col:18, col:24> col:18 public
|-CXXMethodDecl 0x558d61256808 <line:216:9, col:30> col:21 used active 'bool () const' inline
|-CXXMethodDecl 0x558d612568c8 <line:217:9, col:35> col:25 element 'Element *() const' inline
|-CXXMethodDecl 0x558d61256990 <line:218:9, col:27> col:20 port 'int () const' inline
|-CXXMethodDecl 0x558d61256b08 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| |-ParmVarDecl 0x558d61256a40 <col:54, col:62> col:62 p 'Packet *'
| |-NoInlineAttr 0x558d61256bb0 <col:24>
| `-OptimizeNoneAttr 0x558d61256c08 <col:34>
|-CXXMethodDecl 0x558d61256c50 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
|-CXXMethodDecl 0x558d61256f08 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| |-ParmVarDecl 0x558d61256d00 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x558d61256d78 <col:43, col:52> col:52 e 'Element *'
| `-ParmVarDecl 0x558d61256df8 <col:55, col:59> col:59 port 'int'
|-AccessSpecDecl 0x558d61256fc0 <line:229:7, col:14> col:7 private
|-FieldDecl 0x558d61256ff8 <line:231:9, col:18> col:18 referenced _e 'Element *'
|-FieldDecl 0x558d61257060 <line:232:9, col:13> col:13 referenced _port 'int'
|-CXXConstructorDecl 0x558d612570e8 <line:247:9, col:21> col:16 Port 'void ()' inline
|-CXXMethodDecl 0x558d61257408 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| |-ParmVarDecl 0x558d612571a0 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x558d61257218 <col:43, col:52> col:52 owner 'Element *'
| |-ParmVarDecl 0x558d61257290 <col:59, col:68> col:68 e 'Element *'
| `-ParmVarDecl 0x558d61257310 <col:71, col:75> col:75 port 'int'
|-FriendDecl 0x558d61257520 <line:250:9, col:22> col:16 'class Element':'Element'
|-CXXConstructorDecl 0x558d6125ee98 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x558d6125ee98
| `-ParmVarDecl 0x558d6125efa8 <col:11> col:11 'const Element::Port &'
|-CXXConstructorDecl 0x558d6125f048 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x558d6125f048
| `-ParmVarDecl 0x558d6125f158 <col:11> col:11 'Element::Port &&'
`-CXXDestructorDecl 0x558d6133ff98 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"class.Element::Port" = type <{ %class.Element*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%"class.Element::Port.base" = type <{ %class.Element*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558d61249620 prev 0x558d612493a0 <../dummy_inc/click/element.hh:29:1, line:319:1> line:29:7 referenced class Element definition
|-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x558d61249718 <col:1, col:7> col:7 implicit referenced class Element
|-AccessSpecDecl 0x558d612497a8 <col:17, col:23> col:17 public
|-CXXConstructorDecl 0x558d61249808 <line:31:5, col:13> col:5 Element 'void ()'
|-CXXDestructorDecl 0x558d612498f8 <line:32:5, col:22> col:13 used ~Element 'void () noexcept' virtual
|-VarDecl 0x558d612499f8 <line:33:5, col:16> col:16 nelements_allocated 'int' static
|-CXXMethodDecl 0x558d61249bc8 <line:36:5, col:42> col:18 used push 'void (int, Packet *)' virtual
| |-ParmVarDecl 0x558d61249a78 <col:23, col:27> col:27 port 'int'
| `-ParmVarDecl 0x558d61249af0 <col:33, col:41> col:41 p 'Packet *'
|-CXXMethodDecl 0x558d61249d58 <line:37:5, col:70> col:21 used pull 'Packet *(int)' virtual
| |-ParmVarDecl 0x558d61249c90 <col:26, col:30> col:30 port 'int'
| `-WarnUnusedResultAttr 0x558d61249e00 <col:51> warn_unused_result ""
|-CXXMethodDecl 0x558d61249f38 <line:38:5, col:44> col:21 simple_action 'Packet *(Packet *)' virtual
| `-ParmVarDecl 0x558d61249e70 <col:35, col:43> col:43 p 'Packet *'
|-CXXMethodDecl 0x558d6124a0d8 <line:40:5, col:37> col:18 used run_task 'bool (Task *)' virtual
| `-ParmVarDecl 0x558d6124a018 <col:27, col:33> col:33 task 'Task *'
|-CXXMethodDecl 0x558d6124a278 <line:41:5, col:40> col:18 run_timer 'void (Timer *)' virtual
| `-ParmVarDecl 0x558d6124a1b8 <col:28, col:35> col:35 timer 'Timer *'
|-EnumDecl 0x558d6124a320 <line:43:5, col:46> col:5
| |-EnumConstantDecl 0x558d6124a420 <col:12, col:26> col:12 SELECT_READ 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
| | `-ImplicitCastExpr 0x558d6124a500 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558d6124a400 <col:26> 'int' Int: 1
| |     `-IntegerLiteral 0x558d6124a3e0 <col:26> 'int' 1
| `-EnumConstantDecl 0x558d6124a4b0 <col:29, col:44> col:29 SELECT_WRITE 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
|   `-ImplicitCastExpr 0x558d6124a518 <col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x558d6124a490 <col:44> 'int' Int: 2
|       `-IntegerLiteral 0x558d6124a470 <col:44> 'int' 2
|-CXXMethodDecl 0x558d6124a660 <line:44:5, col:43> col:18 selected 'void (int, int)' virtual
| |-ParmVarDecl 0x558d6124a548 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x558d6124a5c8 <col:35, col:39> col:39 mask 'int'
|-CXXMethodDecl 0x558d6124a7b8 <line:45:5, col:33> col:18 selected 'void (int)' virtual
| `-ParmVarDecl 0x558d6124a728 <col:27, col:31> col:31 fd 'int'
|-CXXMethodDecl 0x558d6124a9f8 <line:48:5, col:86> col:45 used checked_output_push 'void (int, Packet *) const'
| |-ParmVarDecl 0x558d6124a878 <col:65, col:69> col:69 port 'int'
| |-ParmVarDecl 0x558d6124a8f0 <col:75, col:83> col:83 p 'Packet *'
| |-NoInlineAttr 0x558d6124aaa8 <col:20>
| `-OptimizeNoneAttr 0x558d6124ab00 <col:30>
|-CXXMethodDecl 0x558d6124ac08 <line:49:5, col:77> col:48 checked_input_pull 'Packet *(int) const'
| |-ParmVarDecl 0x558d6124ab40 <col:67, col:71> col:71 port 'int'
| |-NoInlineAttr 0x558d6124acb0 <col:20>
| `-OptimizeNoneAttr 0x558d6124ad08 <col:30>
|-CXXMethodDecl 0x558d6124ad58 <line:52:5, col:46> col:25 class_name 'const char *() const' virtual pure
|-CXXMethodDecl 0x558d6124ae20 <line:54:5, col:38> col:25 port_count 'const char *() const' virtual
|-VarDecl 0x558d6124af38 <line:55:5, col:33> col:23 PORTS_0_0 'const char []' static
|-VarDecl 0x558d6124afc0 <line:56:5, col:33> col:23 PORTS_0_1 'const char []' static
|-VarDecl 0x558d6124b048 <line:57:5, col:33> col:23 PORTS_1_0 'const char []' static
|-VarDecl 0x558d6124b0d0 <line:58:5, col:33> col:23 PORTS_1_1 'const char []' static
|-VarDecl 0x558d6124b158 <line:59:5, col:35> col:23 used PORTS_1_1X2 'const char []' static
|-CXXMethodDecl 0x558d6124b1e8 <line:61:5, col:38> col:25 processing 'const char *() const' virtual
|-VarDecl 0x558d6124b2a8 <line:62:5, col:32> col:23 AGNOSTIC 'const char []' static
|-VarDecl 0x558d6124b330 <line:63:5, col:28> col:23 PUSH 'const char []' static
|-VarDecl 0x558d6124b3b8 <line:64:5, col:28> col:23 PULL 'const char []' static
|-VarDecl 0x558d6124b440 <line:65:5, col:36> col:23 PUSH_TO_PULL 'const char []' static
|-VarDecl 0x558d6124b4c8 <line:66:5, col:36> col:23 PULL_TO_PUSH 'const char []' static
|-VarDecl 0x558d6124b550 <line:67:5, col:39> col:23 PROCESSING_A_AH 'const char []' static
|-CXXMethodDecl 0x558d6124b5e0 <line:69:5, col:37> col:25 flow_code 'const char *() const' virtual
|-VarDecl 0x558d6124b6a0 <line:70:5, col:37> col:23 COMPLETE_FLOW 'const char []' static
|-CXXMethodDecl 0x558d6124b730 <line:72:5, col:33> col:25 flags 'const char *() const' virtual
|-CXXMethodDecl 0x558d6124b880 <line:73:5, col:30> col:9 flag_value 'int (int) const'
| `-ParmVarDecl 0x558d6124b7e8 <col:20, col:24> col:24 flag 'int'
|-CXXMethodDecl 0x558d6124ba10 <line:75:5, col:40> col:19 cast 'void *(const char *)' virtual
| `-ParmVarDecl 0x558d6124b940 <col:24, col:36> col:36 name 'const char *'
|-CXXMethodDecl 0x558d6124bcc0 <line:76:5, col:70> col:19 port_cast 'void *(bool, int, const char *)' virtual
| |-ParmVarDecl 0x558d6124bac8 <col:29, col:34> col:34 isoutput 'bool'
| |-ParmVarDecl 0x558d6124bb48 <col:44, col:48> col:48 port 'int'
| `-ParmVarDecl 0x558d6124bbc8 <col:54, col:66> col:66 name 'const char *'
|-EnumDecl 0x558d6124bd78 <line:79:5, line:85:5> line:79:10 ConfigurePhase
| |-EnumConstantDecl 0x558d6124be80 <line:80:9, col:33> col:9 CONFIGURE_PHASE_FIRST 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x558d6124c110 <col:33> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558d6124be60 <col:33> 'int' Int: 0
| |     `-IntegerLiteral 0x558d6124be40 <col:33> 'int' 0
| |-EnumConstantDecl 0x558d6124bf10 <line:81:9, col:32> col:9 CONFIGURE_PHASE_INFO 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x558d6124c128 <col:32> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558d6124bef0 <col:32> 'int' Int: 20
| |     `-IntegerLiteral 0x558d6124bed0 <col:32> 'int' 20
| |-EnumConstantDecl 0x558d6124bfa0 <line:82:9, col:38> col:9 CONFIGURE_PHASE_PRIVILEGED 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x558d6124c140 <col:38> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558d6124bf80 <col:38> 'int' Int: 90
| |     `-IntegerLiteral 0x558d6124bf60 <col:38> 'int' 90
| |-EnumConstantDecl 0x558d6124c030 <line:83:9, col:35> col:9 CONFIGURE_PHASE_DEFAULT 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x558d6124c158 <col:35> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558d6124c010 <col:35> 'int' Int: 100
| |     `-IntegerLiteral 0x558d6124bff0 <col:35> 'int' 100
| `-EnumConstantDecl 0x558d6124c0c0 <line:84:9, col:32> col:9 CONFIGURE_PHASE_LAST 'Element::ConfigurePhase'
|   `-ImplicitCastExpr 0x558d6124c170 <col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x558d6124c0a0 <col:32> 'int' Int: 2000
|       `-IntegerLiteral 0x558d6124c080 <col:32> 'int' 2000
|-CXXMethodDecl 0x558d6124c1b0 <line:86:5, col:35> col:17 configure_phase 'int () const' virtual
|-CXXMethodDecl 0x558d6124c5f0 <line:88:5, col:67> col:17 configure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x558d6124c460 <col:27, col:43> col:43 conf 'Vector<String> &'
| `-ParmVarDecl 0x558d6124c4d8 <col:49, col:63> col:63 errh 'ErrorHandler *'
|-CXXMethodDecl 0x558d6124c6c0 <line:90:5, col:31> col:18 add_handlers 'void ()' virtual
|-CXXMethodDecl 0x558d6124c840 <line:92:5, col:46> col:17 initialize 'int (ErrorHandler *)' virtual
| `-ParmVarDecl 0x558d6124c770 <col:28, col:42> col:42 errh 'ErrorHandler *'
|-CXXMethodDecl 0x558d6124ca48 <line:94:5, col:69> col:18 take_state 'void (Element *, ErrorHandler *)' virtual
| |-ParmVarDecl 0x558d6124c8f8 <col:29, col:38> col:38 old_element 'Element *'
| `-ParmVarDecl 0x558d6124c970 <col:51, col:65> col:65 errh 'ErrorHandler *'
|-CXXMethodDecl 0x558d6124cb48 <line:95:5, col:40> col:22 hotswap_element 'Element *() const' virtual
|-EnumDecl 0x558d6124cbe8 <line:97:5, line:106:5> line:97:10 referenced CleanupStage
| |-EnumConstantDecl 0x558d6124ccb0 <line:98:9> col:9 referenced CLEANUP_NO_ROUTER 'Element::CleanupStage'
| |-EnumConstantDecl 0x558d6124cd40 <line:99:9, col:36> col:9 CLEANUP_BEFORE_CONFIGURE 'Element::CleanupStage'
| | `-ImplicitCastExpr 0x558d6124cf70 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558d6124cd20 <col:36> 'int' Int: 0
| |     `-DeclRefExpr 0x558d6124cd00 <col:36> 'int' EnumConstant 0x558d6124ccb0 'CLEANUP_NO_ROUTER' 'Element::CleanupStage'
| |-EnumConstantDecl 0x558d6124cd90 <line:100:9> col:9 CLEANUP_CONFIGURE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x558d6124cde0 <line:101:9> col:9 CLEANUP_CONFIGURED 'Element::CleanupStage'
| |-EnumConstantDecl 0x558d6124ce30 <line:102:9> col:9 CLEANUP_INITIALIZE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x558d6124ce80 <line:103:9> col:9 CLEANUP_INITIALIZED 'Element::CleanupStage'
| |-EnumConstantDecl 0x558d6124ced0 <line:104:9> col:9 CLEANUP_ROUTER_INITIALIZED 'Element::CleanupStage'
| `-EnumConstantDecl 0x558d6124cf20 <line:105:9> col:9 CLEANUP_MANUAL 'Element::CleanupStage'
|-CXXMethodDecl 0x558d6124d058 <line:107:5, col:44> col:18 cleanup 'void (Element::CleanupStage)' virtual
| `-ParmVarDecl 0x558d6124cf98 <col:26, col:39> col:39 stage 'Element::CleanupStage'
|-CXXMethodDecl 0x558d6124d120 <line:109:5, col:42> col:24 static_initialize 'void ()' static inline
|-CXXMethodDecl 0x558d6124d1e0 <line:110:5, col:39> col:24 static_cleanup 'void ()' static inline
|-CXXMethodDecl 0x558d6124d2a0 <line:113:5, col:19> col:12 name 'String () const'
|-CXXMethodDecl 0x558d6124d360 <line:114:5, col:34> col:20 declaration 'String () const' virtual
|-CXXMethodDecl 0x558d6124d478 <line:116:5, col:29> col:20 used router 'Router *() const' inline
|-CXXMethodDecl 0x558d6124d540 <line:117:5, col:25> col:16 eindex 'int () const' inline
|-CXXMethodDecl 0x558d6124d6c0 <line:118:5, col:34> col:16 eindex 'int (Router *) const' inline
| `-ParmVarDecl 0x558d6124d5f0 <col:23, col:31> col:31 r 'Router *'
|-CXXMethodDecl 0x558d6124d7e8 <line:121:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x558d6124d9e8 <line:123:5, line:127:5> line:123:17 attach_router 'void (Router *, int)' inline
| |-ParmVarDecl 0x558d6124d898 <col:31, col:39> col:39 used r 'Router *'
| |-ParmVarDecl 0x558d6124d918 <col:42, col:46> col:46 used eindex 'int'
| `-CompoundStmt 0x558d6125b338 <col:54, line:127:5>
|   |-ParenExpr 0x558d6125b1e8 <line:124:9, col:152> 'void'
|   | `-ConditionalOperator 0x558d6125b1b8 <col:10, col:151> 'void'
|   |   |-CXXStaticCastExpr 0x558d6125aea8 <col:10, col:38> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x558d6125ae80 <col:30, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-ImplicitCastExpr 0x558d6125ae68 <col:31> 'bool' <PointerToBoolean>
|   |   |     `-ImplicitCastExpr 0x558d6125ae50 <col:31> 'Router *' <LValueToRValue>
|   |   |       `-MemberExpr 0x558d6125ae20 <col:31> 'Router *' lvalue ->_router 0x558d61258d00
|   |   |         `-CXXThisExpr 0x558d6125ae10 <col:31> 'Element *' implicit this
|   |   |-CXXFunctionalCastExpr 0x558d6125af08 <col:42, col:49> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x558d6125aee8 <col:48> 'int' 0
|   |   `-CallExpr 0x558d6125b118 <col:53, col:151> 'void'
|   |     |-ImplicitCastExpr 0x558d6125b100 <col:53> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x558d6125b0e0 <col:53> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x558d60d83cf0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x558d6125b158 <col:68> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558d6125af78 <col:68> 'const char [9]' lvalue "!_router"
|   |     |-ImplicitCastExpr 0x558d6125b170 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558d6125af98 <col:80> 'const char [30]' lvalue "../dummy_inc/click/element.hh"
|   |     |-ImplicitCastExpr 0x558d6125b188 <col:113> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x558d6125afd0 <col:113> 'int' 124
|   |     `-ImplicitCastExpr 0x558d6125b1a0 <col:118, col:132> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x558d6125b0c8 <col:118, col:132> 'const char [43]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x558d6125b0b0 <col:132> 'const char [43]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x558d6125b068 <col:132> 'const char [43]' lvalue "void Element::attach_router(Router *, int)"
|   |-BinaryOperator 0x558d6125b280 <line:125:9, col:19> 'Router *' lvalue '='
|   | |-MemberExpr 0x558d6125b218 <col:9> 'Router *' lvalue ->_router 0x558d61258d00
|   | | `-CXXThisExpr 0x558d6125b208 <col:9> 'Element *' implicit this
|   | `-ImplicitCastExpr 0x558d6125b268 <col:19> 'Router *' <LValueToRValue>
|   |   `-DeclRefExpr 0x558d6125b248 <col:19> 'Router *' lvalue ParmVar 0x558d6124d898 'r' 'Router *'
|   `-BinaryOperator 0x558d6125b318 <line:126:9, col:19> 'int' lvalue '='
|     |-MemberExpr 0x558d6125b2b0 <col:9> 'int' lvalue ->_eindex 0x558d61258d68
|     | `-CXXThisExpr 0x558d6125b2a0 <col:9> 'Element *' implicit this
|     `-ImplicitCastExpr 0x558d6125b300 <col:19> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x558d6125b2e0 <col:19> 'int' lvalue ParmVar 0x558d6124d918 'eindex' 'int'
|-CXXMethodDecl 0x558d6124db70 <line:130:5, col:38> col:16 used nports 'int (bool) const' inline
| `-ParmVarDecl 0x558d6124daa8 <col:23, col:28> col:28 isoutput 'bool'
|-CXXMethodDecl 0x558d6124dc40 <line:131:5, col:26> col:16 used ninputs 'int () const' inline
|-CXXMethodDecl 0x558d6124dd08 <line:132:5, col:27> col:16 used noutputs 'int () const' inline
|-CXXRecordDecl 0x558d6124dda8 <line:134:5, col:11> col:11 referenced class Port
|-CXXMethodDecl 0x558d6124dff8 <line:135:5, col:82> col:52 used port 'const Element::Port &(bool, int) const'
| |-ParmVarDecl 0x558d6124de70 <col:57, col:62> col:62 isoutput 'bool'
| |-ParmVarDecl 0x558d6124def0 <col:72, col:76> col:76 port 'int'
| |-NoInlineAttr 0x558d6124e0a8 <col:20>
| `-OptimizeNoneAttr 0x558d6124e100 <col:30>
|-CXXMethodDecl 0x558d6124e208 <line:136:5, col:68> col:52 input 'const Element::Port &(int) const'
| |-ParmVarDecl 0x558d6124e140 <col:58, col:62> col:62 port 'int'
| |-NoInlineAttr 0x558d6124e2b0 <col:20>
| `-OptimizeNoneAttr 0x558d6124e308 <col:30>
|-CXXMethodDecl 0x558d6124e3d8 <line:137:5, col:69> col:52 output 'const Element::Port &(int) const'
| |-ParmVarDecl 0x558d6124e348 <col:59, col:63> col:63 port 'int'
| |-NoInlineAttr 0x558d6124e480 <col:20>
| `-OptimizeNoneAttr 0x558d6124e4d8 <col:30>
|-CXXMethodDecl 0x558d6124e668 <line:139:5, col:54> col:17 used port_active 'bool (bool, int) const' inline
| |-ParmVarDecl 0x558d6124e510 <col:29, col:34> col:34 isoutput 'bool'
| `-ParmVarDecl 0x558d6124e590 <col:44, col:48> col:48 port 'int'
|-CXXMethodDecl 0x558d6124e7f8 <line:140:5, col:41> col:17 input_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x558d6124e730 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x558d6124e948 <line:141:5, col:41> col:17 input_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x558d6124e8b8 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x558d6124ea98 <line:142:5, col:42> col:17 output_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x558d6124ea08 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x558d6124ebe8 <line:143:5, col:42> col:17 output_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x558d6124eb58 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x558d6124eea8 <line:144:5, col:57> col:10 port_flow 'void (bool, int, Bitvector *) const'
| |-ParmVarDecl 0x558d6124eca0 <col:20, col:25> col:25 isoutput 'bool'
| |-ParmVarDecl 0x558d6124ed20 <col:35, col:39> col:39 port 'int'
| `-ParmVarDecl 0x558d6124edc8 <col:45, col:54> col:55 'Bitvector *'
|-CXXMethodDecl 0x558d6124ef80 <line:147:5, col:28> col:12 configuration 'String () const'
|-CXXMethodDecl 0x558d6124f040 <line:149:5, col:41> col:18 can_live_reconfigure 'bool () const' virtual
|-CXXMethodDecl 0x558d6124f310 <line:150:5, col:64> col:17 live_reconfigure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x558d6124f1c0 <col:34, col:48> col:49 'Vector<String> &'
| `-ParmVarDecl 0x558d6124f238 <col:51, col:63> col:64 'ErrorHandler *'
|-CXXMethodDecl 0x558d6124f438 <line:152:5, col:33> col:19 home_thread 'RouterThread *() const'
|-CXXMethodDecl 0x558d6124f610 <line:156:5, col:36> col:9 add_select 'int (int, int)'
| |-ParmVarDecl 0x558d6124f4f0 <col:20, col:24> col:24 fd 'int'
| `-ParmVarDecl 0x558d6124f570 <col:28, col:32> col:32 mask 'int'
|-CXXMethodDecl 0x558d6124f7f8 <line:157:5, col:39> col:9 remove_select 'int (int, int)'
| |-ParmVarDecl 0x558d6124f6d8 <col:23, col:27> col:27 fd 'int'
| `-ParmVarDecl 0x558d6124f758 <col:31, col:35> col:35 mask 'int'
|-CXXMethodDecl 0x558d6124fb68 <line:161:5, col:127> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x558d6124f8b8 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x558d6124f930 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x558d6124f9b0 <col:82, col:106> col:94 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x558d6125a920 <col:106> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x558d6125a900 <col:106> 'int' 0
| `-ParmVarDecl 0x558d6124fa28 <col:109, col:126> col:118 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x558d6125a958 <col:126> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x558d6125a938 <col:126> 'int' 0
|-CXXMethodDecl 0x558d6124ff08 <line:162:5, col:115> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x558d6124fc38 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x558d6124fcd0 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x558d6124fd50 <col:82, col:86> col:86 user_data 'int'
| `-ParmVarDecl 0x558d6124fdc8 <col:97, col:114> col:106 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x558d6125a990 <col:114> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x558d6125a970 <col:114> 'int' 0
|-CXXMethodDecl 0x558d61250298 <line:163:5, col:117> col:10 add_read_handler 'void (const char *, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x558d6124ffe0 <col:27, col:39> col:39 name 'const char *'
| |-ParmVarDecl 0x558d61250058 <col:45, col:65> col:65 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x558d612500d8 <col:80, col:96> col:84 user_data 'int' cinit
| | `-IntegerLiteral 0x558d6125a9a8 <col:96> 'int' 0
| `-ParmVarDecl 0x558d61250150 <col:99, col:116> col:108 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x558d6125a9e8 <col:116> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x558d6125a9c8 <col:116> 'int' 0
|-CXXMethodDecl 0x558d61250618 <line:164:5, col:130> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x558d61250368 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x558d612503e0 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x558d61250460 <col:85, col:109> col:97 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x558d6125aa20 <col:109> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x558d6125aa00 <col:109> 'int' 0
| `-ParmVarDecl 0x558d612504d8 <col:112, col:129> col:121 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x558d6125aa58 <col:129> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x558d6125aa38 <col:129> 'int' 0
|-CXXMethodDecl 0x558d61250998 <line:165:5, col:118> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x558d612506e8 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x558d61250760 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x558d612507e0 <col:85, col:89> col:89 user_data 'int'
| `-ParmVarDecl 0x558d61250858 <col:100, col:117> col:109 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x558d6125aa90 <col:117> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x558d6125aa70 <col:117> 'int' 0
|-CXXMethodDecl 0x558d61250d28 <line:166:5, col:120> col:10 add_write_handler 'void (const char *, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x558d61250a70 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x558d61250ae8 <col:46, col:67> col:67 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x558d61250b68 <col:83, col:99> col:87 user_data 'int' cinit
| | `-IntegerLiteral 0x558d6125aaa8 <col:99> 'int' 0
| `-ParmVarDecl 0x558d61250be0 <col:102, col:119> col:111 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x558d6125aae8 <col:119> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x558d6125aac8 <col:119> 'int' 0
|-CXXMethodDecl 0x558d61251148 <line:167:5, col:142> col:10 set_handler 'void (const String &, int, HandlerCallback, const void *, const void *)'
| |-ParmVarDecl 0x558d61250df8 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x558d61250e78 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x558d61250ef0 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x558d61250f70 <col:79, col:108> col:91 read_user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x558d6125ab20 <col:108> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x558d6125ab00 <col:108> 'int' 0
| `-ParmVarDecl 0x558d61250ff0 <col:111, col:141> col:123 write_user_data 'const void *' cinit
|   `-ImplicitCastExpr 0x558d6125ab58 <col:141> 'const void *' <NullToPointer>
|     `-IntegerLiteral 0x558d6125ab38 <col:141> 'int' 0
|-CXXMethodDecl 0x558d61251568 <line:168:5, col:122> col:10 set_handler 'void (const String &, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x558d61251220 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x558d612512a0 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x558d61251318 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x558d61251398 <col:79, col:83> col:83 read_user_data 'int'
| `-ParmVarDecl 0x558d61251418 <col:99, col:121> col:103 write_user_data 'int' cinit
|   `-IntegerLiteral 0x558d6125ab70 <col:121> 'int' 0
|-CXXMethodDecl 0x558d61251998 <line:169:5, col:124> col:10 set_handler 'void (const char *, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x558d61251648 <col:22, col:34> col:34 name 'const char *'
| |-ParmVarDecl 0x558d612516c8 <col:40, col:44> col:44 flags 'int'
| |-ParmVarDecl 0x558d61251740 <col:51, col:67> col:67 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x558d612517c0 <col:77, col:98> col:81 read_user_data 'int' cinit
| | `-IntegerLiteral 0x558d6125ab90 <col:98> 'int' 0
| `-ParmVarDecl 0x558d61251840 <col:101, col:123> col:105 write_user_data 'int' cinit
|   `-IntegerLiteral 0x558d6125abb0 <col:123> 'int' 0
|-CXXMethodDecl 0x558d61251c60 <line:170:5, col:81> col:9 set_handler_flags 'int (const String &, int, int)'
| |-ParmVarDecl 0x558d61251a70 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x558d61251af0 <col:47, col:51> col:51 set_flags 'int'
| `-ParmVarDecl 0x558d61251b70 <col:62, col:80> col:66 clear_flags 'int' cinit
|   `-IntegerLiteral 0x558d6125abd0 <col:80> 'int' 0
|-EnumDecl 0x558d61251d18 <line:171:5, line:175:36> line:171:5
| |-EnumConstantDecl 0x558d61251e20 <col:12, col:42> col:12 TASKHANDLER_WRITE_SCHEDULED 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x558d612520b0 <col:42> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558d61251e00 <col:42> 'int' Int: 1
| |     `-IntegerLiteral 0x558d61251de0 <col:42> 'int' 1
| |-EnumConstantDecl 0x558d61251eb0 <line:172:12, col:40> col:12 TASKHANDLER_WRITE_TICKETS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x558d612520c8 <col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558d61251e90 <col:40> 'int' Int: 2
| |     `-IntegerLiteral 0x558d61251e70 <col:40> 'int' 2
| |-EnumConstantDecl 0x558d61251f40 <line:173:12, col:44> col:12 TASKHANDLER_WRITE_HOME_THREAD 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x558d612520e0 <col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558d61251f20 <col:44> 'int' Int: 4
| |     `-IntegerLiteral 0x558d61251f00 <col:44> 'int' 4
| |-EnumConstantDecl 0x558d61251fd0 <line:174:12, col:36> col:12 TASKHANDLER_WRITE_ALL 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x558d612520f8 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558d61251fb0 <col:36> 'int' Int: 7
| |     `-IntegerLiteral 0x558d61251f90 <col:36> 'int' 7
| `-EnumConstantDecl 0x558d61252060 <line:175:12, col:34> col:12 referenced TASKHANDLER_DEFAULT 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|   `-ImplicitCastExpr 0x558d61252110 <col:34> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x558d61252040 <col:34> 'int' Int: 6
|       `-IntegerLiteral 0x558d61252020 <col:34> 'int' 6
|-CXXMethodDecl 0x558d612523c8 <line:176:5, col:106> col:10 used add_task_handlers 'void (Task *, NotifierSignal *, int, const String &)'
| |-ParmVarDecl 0x558d61252138 <col:28, col:34> col:34 task 'Task *'
| |-ParmVarDecl 0x558d612521d8 <col:40, col:56> col:56 signal 'NotifierSignal *'
| |-ParmVarDecl 0x558d61252258 <col:64, col:68> col:68 flags 'int'
| `-ParmVarDecl 0x558d612522d0 <col:75, col:105> col:89 prefix 'const String &' cinit
|   `-ExprWithCleanups 0x558d6125ac88 <col:98, col:105> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x558d6125ac70 <col:98, col:105> 'const String' lvalue
|       `-ImplicitCastExpr 0x558d6125ac58 <col:98, col:105> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x558d6125ac38 <col:98, col:105> 'String' (CXXTemporary 0x558d6125ac38)
|           `-CXXTemporaryObjectExpr 0x558d6125ac00 <col:98, col:105> 'String' 'void ()'
|-CXXMethodDecl 0x558d61252668 <line:177:5, line:179:5> line:177:17 add_task_handlers 'void (Task *, NotifierSignal *, const String &)' inline
| |-ParmVarDecl 0x558d61252498 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x558d61252510 <col:47, col:63> col:63 used signal 'NotifierSignal *'
| |-ParmVarDecl 0x558d61252588 <col:71, col:101> col:85 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x558d6125ad38 <col:94, col:101> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x558d6125ad20 <col:94, col:101> 'const String' lvalue
| |     `-ImplicitCastExpr 0x558d6125ad08 <col:94, col:101> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x558d6125ace8 <col:94, col:101> 'String' (CXXTemporary 0x558d6125ace8)
| |         `-CXXTemporaryObjectExpr 0x558d6125acb0 <col:94, col:101> 'String' 'void ()'
| `-CompoundStmt 0x558d6125b520 <col:104, line:179:5>
|   `-CXXMemberCallExpr 0x558d6125b498 <line:178:9, col:68> 'void'
|     |-MemberExpr 0x558d6125b468 <col:9> '<bound member function type>' ->add_task_handlers 0x558d612523c8
|     | `-CXXThisExpr 0x558d6125b458 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x558d6125b4d8 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x558d6125b3d8 <col:27> 'Task *' lvalue ParmVar 0x558d61252498 'task' 'Task *'
|     |-ImplicitCastExpr 0x558d6125b4f0 <col:33> 'NotifierSignal *' <LValueToRValue>
|     | `-DeclRefExpr 0x558d6125b3f8 <col:33> 'NotifierSignal *' lvalue ParmVar 0x558d61252510 'signal' 'NotifierSignal *'
|     |-ImplicitCastExpr 0x558d6125b508 <col:41> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x558d6125b418 <col:41> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x558d61252060 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x558d6125b438 <col:62> 'const String' lvalue ParmVar 0x558d61252588 'prefix' 'const String &'
|-CXXMethodDecl 0x558d61252878 <line:180:5, line:182:5> line:180:17 add_task_handlers 'void (Task *, const String &)' inline
| |-ParmVarDecl 0x558d61252730 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x558d612527a8 <col:47, col:77> col:61 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x558d6125ade8 <col:70, col:77> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x558d6125add0 <col:70, col:77> 'const String' lvalue
| |     `-ImplicitCastExpr 0x558d6125adb8 <col:70, col:77> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x558d6125ad98 <col:70, col:77> 'String' (CXXTemporary 0x558d6125ad98)
| |         `-CXXTemporaryObjectExpr 0x558d6125ad60 <col:70, col:77> 'String' 'void ()'
| `-CompoundStmt 0x558d6125b6f8 <col:80, line:182:5>
|   `-CXXMemberCallExpr 0x558d6125b670 <line:181:9, col:63> 'void'
|     |-MemberExpr 0x558d6125b640 <col:9> '<bound member function type>' ->add_task_handlers 0x558d612523c8
|     | `-CXXThisExpr 0x558d6125b630 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x558d6125b6b0 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x558d6125b5b0 <col:27> 'Task *' lvalue ParmVar 0x558d61252730 'task' 'Task *'
|     |-ImplicitCastExpr 0x558d6125b6c8 <col:33> 'NotifierSignal *' <NullToPointer>
|     | `-IntegerLiteral 0x558d6125b5d0 <col:33> 'int' 0
|     |-ImplicitCastExpr 0x558d6125b6e0 <col:36> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x558d6125b5f0 <col:36> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x558d61252060 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x558d6125b610 <col:57> 'const String' lvalue ParmVar 0x558d612527a8 'prefix' 'const String &'
|-CXXMethodDecl 0x558d61252b58 <line:184:5, col:70> col:10 add_data_handlers 'void (const char *, int, uint8_t *)'
| |-ParmVarDecl 0x558d61252940 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x558d612529c0 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x558d61252a38 <col:57, col:66> col:66 data 'uint8_t *'
|-CXXMethodDecl 0x558d61252e08 <line:185:5, col:67> col:10 add_data_handlers 'void (const char *, int, bool *)'
| |-ParmVarDecl 0x558d61252c28 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x558d61252ca8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x558d61252d28 <col:57, col:63> col:63 data 'bool *'
|-CXXMethodDecl 0x558d612530f8 <line:186:5, col:71> col:10 add_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x558d61252ed8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x558d61252f58 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x558d61252fd0 <col:57, col:67> col:67 data 'uint16_t *'
|-CXXMethodDecl 0x558d612533a8 <line:187:5, col:66> col:10 add_data_handlers 'void (const char *, int, int *)'
| |-ParmVarDecl 0x558d612531c8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x558d61253248 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x558d612532c8 <col:57, col:62> col:62 data 'int *'
|-CXXMethodDecl 0x558d61253658 <line:188:5, col:71> col:10 add_data_handlers 'void (const char *, int, unsigned int *)'
| |-ParmVarDecl 0x558d61253478 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x558d612534f8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x558d61253578 <col:57, col:67> col:67 data 'unsigned int *'
|-CXXMethodDecl 0x558d61253908 <line:189:5, col:78> col:10 add_data_handlers 'void (const char *, int, atomic_uint32_t *)'
| |-ParmVarDecl 0x558d61253728 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x558d612537a8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x558d61253820 <col:57, col:74> col:74 data 'atomic_uint32_t *'
|-CXXMethodDecl 0x558d61253bb8 <line:190:5, col:67> col:10 add_data_handlers 'void (const char *, int, long *)'
| |-ParmVarDecl 0x558d612539d8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x558d61253a58 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x558d61253ad8 <col:57, col:63> col:63 data 'long *'
|-CXXMethodDecl 0x558d61253ec8 <line:191:5, col:76> col:10 add_data_handlers 'void (const char *, int, unsigned long *)'
| |-ParmVarDecl 0x558d61253ce0 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x558d61253d60 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x558d61253de0 <col:57, col:72> col:72 data 'unsigned long *'
|-CXXMethodDecl 0x558d612541a8 <line:193:5, col:72> col:10 add_data_handlers 'void (const char *, int, long long *)'
| |-ParmVarDecl 0x558d61253f98 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x558d61254018 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x558d612540c0 <col:57, col:68> col:68 data 'long long *'
|-CXXMethodDecl 0x558d61254488 <line:194:5, col:81> col:10 add_data_handlers 'void (const char *, int, unsigned long long *)'
| |-ParmVarDecl 0x558d61254278 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x558d612542f8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x558d612543a0 <col:57, col:77> col:77 data 'unsigned long long *'
|-CXXMethodDecl 0x558d612546f0 <line:196:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x558d61254558 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x558d612545d8 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x558d61254650 <col:67, col:77> col:77 data 'uint16_t *'
|-CXXMethodDecl 0x558d61254998 <line:197:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint32_t *)'
| |-ParmVarDecl 0x558d612547c0 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x558d61254840 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x558d612548b8 <col:67, col:77> col:77 data 'uint32_t *'
|-CXXMethodDecl 0x558d61254c48 <line:199:5, col:69> col:10 add_data_handlers 'void (const char *, int, double *)'
| |-ParmVarDecl 0x558d61254a68 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x558d61254ae8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x558d61254b68 <col:57, col:65> col:65 data 'double *'
|-CXXMethodDecl 0x558d61254ef8 <line:201:5, col:69> col:10 add_data_handlers 'void (const char *, int, String *)'
| |-ParmVarDecl 0x558d61254d18 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x558d61254d98 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x558d61254e10 <col:57, col:65> col:65 data 'String *'
|-CXXMethodDecl 0x558d612551a8 <line:202:5, col:72> col:10 add_data_handlers 'void (const char *, int, IPAddress *)'
| |-ParmVarDecl 0x558d61254fc8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x558d61255048 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x558d612550c0 <col:57, col:68> col:68 data 'IPAddress *'
|-CXXMethodDecl 0x558d61255478 <line:203:5, col:75> col:10 add_data_handlers 'void (const char *, int, EtherAddress *)'
| |-ParmVarDecl 0x558d61255278 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x558d612552f8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x558d61255398 <col:57, col:71> col:71 data 'EtherAddress *'
|-CXXMethodDecl 0x558d612557a8 <line:204:5, col:98> col:10 add_data_handlers 'void (const char *, int, Timestamp *, bool)'
| |-ParmVarDecl 0x558d61255548 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x558d612555c8 <col:46, col:50> col:50 flags 'int'
| |-ParmVarDecl 0x558d61255640 <col:57, col:68> col:68 data 'Timestamp *'
| `-ParmVarDecl 0x558d612556b8 <col:74, col:93> col:79 is_interval 'bool' cinit
|   `-CXXBoolLiteralExpr 0x558d6125ae00 <col:93> 'bool' false
|-CXXMethodDecl 0x558d61255990 <line:206:5, col:58> col:19 read_positional_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x558d61255878 <col:43, col:50> col:51 'Element *'
| `-ParmVarDecl 0x558d612558f8 <col:53, col:57> col:58 'void *'
|-CXXMethodDecl 0x558d61255b68 <line:207:5, col:55> col:19 read_keyword_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x558d61255a50 <col:40, col:47> col:48 'Element *'
| `-ParmVarDecl 0x558d61255ad0 <col:50, col:54> col:55 'void *'
|-CXXMethodDecl 0x558d61255e48 <line:208:5, col:92> col:16 reconfigure_positional_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x558d61255c28 <col:47, col:59> col:60 'const String &'
| |-ParmVarDecl 0x558d61255ca0 <col:62, col:69> col:70 'Element *'
| |-ParmVarDecl 0x558d61255d20 <col:72, col:76> col:77 'void *'
| `-ParmVarDecl 0x558d61255d98 <col:79, col:91> col:92 'ErrorHandler *'
|-CXXMethodDecl 0x558d61256138 <line:209:5, col:89> col:16 reconfigure_keyword_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x558d61255f18 <col:44, col:56> col:57 'const String &'
| |-ParmVarDecl 0x558d61255f90 <col:59, col:66> col:67 'Element *'
| |-ParmVarDecl 0x558d61256010 <col:69, col:73> col:74 'void *'
| `-ParmVarDecl 0x558d61256088 <col:76, col:88> col:89 'ErrorHandler *'
|-CXXMethodDecl 0x558d61256370 <line:211:5, col:50> col:17 llrpc 'int (unsigned int, void *)' virtual
| |-ParmVarDecl 0x558d61256210 <col:23, col:32> col:32 command 'unsigned int'
| `-ParmVarDecl 0x558d61256290 <col:41, col:47> col:47 arg 'void *'
|-CXXMethodDecl 0x558d61256558 <line:212:5, col:48> col:9 local_llrpc 'int (unsigned int, void *)'
| |-ParmVarDecl 0x558d61256438 <col:21, col:30> col:30 command 'unsigned int'
| `-ParmVarDecl 0x558d612564b8 <col:39, col:45> col:45 arg 'void *'
|-CXXRecordDecl 0x558d61256608 prev 0x558d6124dda8 <line:214:5, line:252:5> line:214:11 referenced class Port definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x558d61256700 <col:5, col:11> col:11 implicit referenced class Port
| |-AccessSpecDecl 0x558d61256790 <col:18, col:24> col:18 public
| |-CXXMethodDecl 0x558d61256808 <line:216:9, col:30> col:21 used active 'bool () const' inline
| |-CXXMethodDecl 0x558d612568c8 <line:217:9, col:35> col:25 element 'Element *() const' inline
| |-CXXMethodDecl 0x558d61256990 <line:218:9, col:27> col:20 port 'int () const' inline
| |-CXXMethodDecl 0x558d61256b08 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| | |-ParmVarDecl 0x558d61256a40 <col:54, col:62> col:62 p 'Packet *'
| | |-NoInlineAttr 0x558d61256bb0 <col:24>
| | `-OptimizeNoneAttr 0x558d61256c08 <col:34>
| |-CXXMethodDecl 0x558d61256c50 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
| |-CXXMethodDecl 0x558d61256f08 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| | |-ParmVarDecl 0x558d61256d00 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x558d61256d78 <col:43, col:52> col:52 e 'Element *'
| | `-ParmVarDecl 0x558d61256df8 <col:55, col:59> col:59 port 'int'
| |-AccessSpecDecl 0x558d61256fc0 <line:229:7, col:14> col:7 private
| |-FieldDecl 0x558d61256ff8 <line:231:9, col:18> col:18 referenced _e 'Element *'
| |-FieldDecl 0x558d61257060 <line:232:9, col:13> col:13 referenced _port 'int'
| |-CXXConstructorDecl 0x558d612570e8 <line:247:9, col:21> col:16 Port 'void ()' inline
| |-CXXMethodDecl 0x558d61257408 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| | |-ParmVarDecl 0x558d612571a0 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x558d61257218 <col:43, col:52> col:52 owner 'Element *'
| | |-ParmVarDecl 0x558d61257290 <col:59, col:68> col:68 e 'Element *'
| | `-ParmVarDecl 0x558d61257310 <col:71, col:75> col:75 port 'int'
| |-FriendDecl 0x558d61257520 <line:250:9, col:22> col:16 'class Element':'Element'
| |-CXXConstructorDecl 0x558d6125ee98 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x558d6125ee98
| | `-ParmVarDecl 0x558d6125efa8 <col:11> col:11 'const Element::Port &'
| |-CXXConstructorDecl 0x558d6125f048 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x558d6125f048
| | `-ParmVarDecl 0x558d6125f158 <col:11> col:11 'Element::Port &&'
| `-CXXDestructorDecl 0x558d6133ff98 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x558d61257598 <line:256:5, col:49> col:12 id 'String () const'
| `-DeprecatedAttr 0x558d61257638 <col:38> "" ""
|-CXXMethodDecl 0x558d612576c8 <line:257:5, col:55> col:12 landmark 'String () const'
| `-DeprecatedAttr 0x558d61257768 <col:44> "" ""
|-AccessSpecDecl 0x558d612577d8 <line:260:3, col:10> col:3 private
|-EnumDecl 0x558d61257800 <line:262:5, col:29> col:5
| `-EnumConstantDecl 0x558d61257900 <col:12, col:27> col:12 referenced INLINE_PORTS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:262:5)'
|   `-ImplicitCastExpr 0x558d61257950 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x558d612578e0 <col:27> 'int' Int: 4
|       `-IntegerLiteral 0x558d612578c0 <col:27> 'int' 4
|-FieldDecl 0x558d61257a08 <line:264:5, col:19> col:11 referenced _ports 'Element::Port *[2]'
|-FieldDecl 0x558d61257bb8 <line:265:5, col:36> col:10 _inline_ports 'Element::Port [4]'
|-FieldDecl 0x558d61257c70 <line:267:5, col:18> col:9 referenced _nports 'int [2]'
|-FieldDecl 0x558d61258d00 <line:269:5, col:13> col:13 referenced _router 'Router *'
|-FieldDecl 0x558d61258d68 <line:270:5, col:9> col:9 referenced _eindex 'int'
|-CXXConstructorDecl 0x558d61258eb8 <line:292:5, col:28> col:5 Element 'void (const Element &)'
| `-ParmVarDecl 0x558d61258df8 <col:13, col:27> col:28 'const Element &'
|-CXXMethodDecl 0x558d61259068 <line:293:5, col:39> col:14 operator= 'Element &(const Element &)'
| `-ParmVarDecl 0x558d61258f78 <col:24, col:38> col:39 'const Element &'
|-CXXMethodDecl 0x558d61259248 <line:296:5, col:28> col:9 set_nports 'int (int, int)'
| |-ParmVarDecl 0x558d61259128 <col:20> col:23 'int'
| `-ParmVarDecl 0x558d612591a8 <col:25> col:28 'int'
|-CXXMethodDecl 0x558d612594f0 <line:297:5, col:47> col:9 notify_nports 'int (int, int, ErrorHandler *)'
| |-ParmVarDecl 0x558d61259310 <col:23> col:26 'int'
| |-ParmVarDecl 0x558d61259390 <col:28> col:31 'int'
| `-ParmVarDecl 0x558d61259408 <col:33, col:46> col:47 'ErrorHandler *'
|-EnumDecl 0x558d612595a8 <line:298:5, col:47> col:10 Processing
| |-EnumConstantDecl 0x558d61259670 <col:23> col:23 VAGNOSTIC 'Element::Processing'
| |-EnumConstantDecl 0x558d612596c0 <col:34> col:34 VPUSH 'Element::Processing'
| `-EnumConstantDecl 0x558d61259710 <col:41> col:41 VPULL 'Element::Processing'
|-CXXMethodDecl 0x558d612598f0 <line:299:5, col:71> col:16 next_processing_code 'int (const char *&, ErrorHandler *)' static
| |-ParmVarDecl 0x558d612597a0 <col:37, col:50> col:50 p 'const char *&'
| `-ParmVarDecl 0x558d61259818 <col:53, col:67> col:67 errh 'ErrorHandler *'
|-CXXMethodDecl 0x558d61259b98 <line:300:5, col:80> col:10 processing_vector 'void (int *, int *, ErrorHandler *) const'
| |-ParmVarDecl 0x558d612599b8 <col:28, col:33> col:33 input_codes 'int *'
| |-ParmVarDecl 0x558d61259a38 <col:46, col:51> col:51 output_codes 'int *'
| `-ParmVarDecl 0x558d61259ab0 <col:65, col:77> col:78 'ErrorHandler *'
|-CXXMethodDecl 0x558d61259db8 <line:302:5, col:74> col:10 initialize_ports 'void (const int *, const int *)'
| |-ParmVarDecl 0x558d61259c68 <col:27, col:38> col:38 input_codes 'const int *'
| `-ParmVarDecl 0x558d61259ce8 <col:51, col:62> col:62 output_codes 'const int *'
|-CXXMethodDecl 0x558d6125a0f0 <line:303:5, col:60> col:9 connect_port 'int (bool, int, Element *, int)'
| |-ParmVarDecl 0x558d61259e78 <col:22, col:27> col:27 isoutput 'bool'
| |-ParmVarDecl 0x558d61259ef8 <col:37, col:41> col:41 port 'int'
| |-ParmVarDecl 0x558d61259f70 <col:47, col:54> col:55 'Element *'
| `-ParmVarDecl 0x558d61259ff0 <col:57> col:60 'int'
|-CXXMethodDecl 0x558d6125a2d8 <line:305:5, col:68> col:19 read_handlers_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x558d6125a1c0 <col:41, col:50> col:50 e 'Element *'
| `-ParmVarDecl 0x558d6125a240 <col:53, col:59> col:59 user_data 'void *'
|-CXXMethodDecl 0x558d6125a428 <line:306:5, col:51> col:10 add_default_handlers 'void (bool)'
| `-ParmVarDecl 0x558d6125a398 <col:31, col:36> col:36 writable_config 'bool'
|-CXXMethodDecl 0x558d6125a7a8 <line:307:5, col:100> col:17 add_data_handlers 'void (const char *, int, HandlerCallback, void *)' inline
| |-ParmVarDecl 0x558d6125a4e8 <col:35, col:47> col:47 name 'const char *'
| |-ParmVarDecl 0x558d6125a568 <col:53, col:57> col:57 flags 'int'
| |-ParmVarDecl 0x558d6125a5e0 <col:64, col:80> col:80 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| `-ParmVarDecl 0x558d6125a660 <col:90, col:96> col:96 data 'void *'
`-FriendDecl 0x558d6125a8c0 <line:309:5, col:18> col:12 'class Router':'Router'

Layout: <CGRecordLayout
  LLVMType:%class.Element = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Element.base = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class Storage
         0 |   Storage::index_type _capacity
         4 |   volatile Storage::index_type _head
         8 |   volatile Storage::index_type _tail
           | [sizeof=12, dsize=12, align=4,
           |  nvsize=12, nvalign=4]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558d6131f758 <../dummy_inc/click/standard/storage.hh:9:1, line:54:1> line:9:7 referenced class Storage definition
|-DefinitionData pass_in_registers trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x558d6131f878 <col:1, col:7> col:7 implicit referenced class Storage
|-AccessSpecDecl 0x558d6131f908 <col:17, col:23> col:17 public
|-TypedefDecl 0x558d6131f940 <line:11:5, col:22> col:22 referenced index_type 'uint32_t':'unsigned int'
| `-TypedefType 0x558d60e3d1f0 'uint32_t' sugar
|   |-Typedef 0x558d60d4f408 'uint32_t'
|   `-TypedefType 0x558d60d28440 '__uint32_t' sugar
|     |-Typedef 0x558d60d28038 '__uint32_t'
|     `-BuiltinType 0x558d60ce6410 'unsigned int'
|-TypedefDecl 0x558d6131f9a8 <line:12:5, col:21> col:21 referenced signed_index_type 'int32_t':'int'
| `-TypedefType 0x558d60e3d2d0 'int32_t' sugar
|   |-Typedef 0x558d60d4f268 'int32_t'
|   `-TypedefType 0x558d60d283b0 '__int32_t' sugar
|     |-Typedef 0x558d60d27fc8 '__int32_t'
|     `-BuiltinType 0x558d60ce6370 'int'
|-VarDecl 0x558d6131fa30 <line:13:5, col:59> col:29 referenced invalid_index 'const Storage::index_type':'const unsigned int' static cinit
| `-CStyleCastExpr 0x558d6131faf8 <col:45, col:59> 'Storage::index_type':'unsigned int' <NoOp>
|   `-ImplicitCastExpr 0x558d6131fae0 <col:58, col:59> 'Storage::index_type':'unsigned int' <IntegralCast> part_of_explicit_cast
|     `-UnaryOperator 0x558d6131fab8 <col:58, col:59> 'int' prefix '-'
|       `-IntegerLiteral 0x558d6131fa98 <col:59> 'int' 1
|-CXXConstructorDecl 0x558d6131fbe0 <line:15:5, col:38> col:5 Storage 'void ()'
| |-CXXCtorInitializer Field 0x558d61321430 '_head' 'volatile Storage::index_type':'volatile unsigned int'
| | `-ImplicitCastExpr 0x558d61321538 <col:23> 'volatile Storage::index_type':'volatile unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x558d613214f8 <col:23> 'int' 0
| |-CXXCtorInitializer Field 0x558d61321490 '_tail' 'volatile Storage::index_type':'volatile unsigned int'
| | `-ImplicitCastExpr 0x558d613215b8 <col:33> 'volatile Storage::index_type':'volatile unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x558d61321578 <col:33> 'int' 0
| `-CompoundStmt 0x558d61321608 <col:36, col:38>
|-CXXConversionDecl 0x558d6131fce8 <line:17:5, col:52> col:5 operator bool 'bool () const'
| `-CompoundStmt 0x558d613216f8 <col:27, col:52>
|   `-ReturnStmt 0x558d613216e8 <col:29, col:45>
|     `-BinaryOperator 0x558d613216c8 <col:36, col:45> 'bool' '!='
|       |-ImplicitCastExpr 0x558d61321698 <col:36> 'Storage::index_type':'unsigned int' <LValueToRValue>
|       | `-MemberExpr 0x558d61321628 <col:36> 'const volatile Storage::index_type':'const volatile unsigned int' lvalue ->_head 0x558d61321430
|       |   `-CXXThisExpr 0x558d61321618 <col:36> 'const Storage *' implicit this
|       `-ImplicitCastExpr 0x558d613216b0 <col:45> 'Storage::index_type':'unsigned int' <LValueToRValue>
|         `-MemberExpr 0x558d61321668 <col:45> 'const volatile Storage::index_type':'const volatile unsigned int' lvalue ->_tail 0x558d61321490
|           `-CXXThisExpr 0x558d61321658 <col:45> 'const Storage *' implicit this
|-CXXMethodDecl 0x558d6131fdb8 <line:18:5, col:49> col:10 empty 'bool () const'
| `-CompoundStmt 0x558d613217f0 <col:24, col:49>
|   `-ReturnStmt 0x558d613217e0 <col:26, col:42>
|     `-BinaryOperator 0x558d613217c0 <col:33, col:42> 'bool' '=='
|       |-ImplicitCastExpr 0x558d61321790 <col:33> 'Storage::index_type':'unsigned int' <LValueToRValue>
|       | `-MemberExpr 0x558d61321720 <col:33> 'const volatile Storage::index_type':'const volatile unsigned int' lvalue ->_head 0x558d61321430
|       |   `-CXXThisExpr 0x558d61321710 <col:33> 'const Storage *' implicit this
|       `-ImplicitCastExpr 0x558d613217a8 <col:42> 'Storage::index_type':'unsigned int' <LValueToRValue>
|         `-MemberExpr 0x558d61321760 <col:42> 'const volatile Storage::index_type':'const volatile unsigned int' lvalue ->_tail 0x558d61321490
|           `-CXXThisExpr 0x558d61321750 <col:42> 'const Storage *' implicit this
|-CXXMethodDecl 0x558d6131fe80 <line:19:5, col:16> col:9 size 'int () const'
|-CXXMethodDecl 0x558d613200c0 <line:20:5, col:48> col:9 used size 'int (Storage::index_type, Storage::index_type) const'
| |-ParmVarDecl 0x558d6131ff30 <col:14, col:25> col:25 head 'Storage::index_type':'unsigned int'
| `-ParmVarDecl 0x558d6131ffa8 <col:31, col:42> col:42 tail 'Storage::index_type':'unsigned int'
|-CXXMethodDecl 0x558d61320198 <line:21:5, col:46> col:9 used capacity 'int () const'
| `-CompoundStmt 0x558d61321888 <col:26, col:46>
|   `-ReturnStmt 0x558d61321878 <col:28, col:35>
|     `-ImplicitCastExpr 0x558d61321860 <col:35> 'int' <IntegralCast>
|       `-ImplicitCastExpr 0x558d61321848 <col:35> 'Storage::index_type':'unsigned int' <LValueToRValue>
|         `-MemberExpr 0x558d61321818 <col:35> 'const Storage::index_type':'const unsigned int' lvalue ->_capacity 0x558d613213a8
|           `-CXXThisExpr 0x558d61321808 <col:35> 'const Storage *' implicit this
|-CXXMethodDecl 0x558d61320288 <line:23:5, col:45> col:16 used head 'Storage::index_type () const'
| `-CompoundStmt 0x558d61321908 <col:29, col:45>
|   `-ReturnStmt 0x558d613218f8 <col:31, col:38>
|     `-ImplicitCastExpr 0x558d613218e0 <col:38> 'Storage::index_type':'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x558d613218b0 <col:38> 'const volatile Storage::index_type':'const volatile unsigned int' lvalue ->_head 0x558d61321430
|         `-CXXThisExpr 0x558d613218a0 <col:38> 'const Storage *' implicit this
|-CXXMethodDecl 0x558d61320348 <line:24:5, col:45> col:16 used tail 'Storage::index_type () const'
| `-CompoundStmt 0x558d61321988 <col:29, col:45>
|   `-ReturnStmt 0x558d61321978 <col:31, col:38>
|     `-ImplicitCastExpr 0x558d61321960 <col:38> 'Storage::index_type':'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x558d61321930 <col:38> 'const volatile Storage::index_type':'const volatile unsigned int' lvalue ->_tail 0x558d61321490
|         `-CXXThisExpr 0x558d61321920 <col:38> 'const Storage *' implicit this
|-CXXMethodDecl 0x558d613204e8 <line:26:5, line:28:5> line:26:16 used next_i 'Storage::index_type (Storage::index_type) const'
| |-ParmVarDecl 0x558d613203f8 <col:23, col:34> col:34 used i 'Storage::index_type':'unsigned int'
| `-CompoundStmt 0x558d61321b78 <col:43, line:28:5>
|   `-ReturnStmt 0x558d61321b68 <line:27:2, col:32>
|     `-ParenExpr 0x558d61321b48 <col:9, col:32> 'unsigned int'
|       `-ConditionalOperator 0x558d61321b18 <col:10, col:31> 'unsigned int'
|         |-BinaryOperator 0x558d61321a30 <col:10, col:13> 'bool' '!='
|         | |-ImplicitCastExpr 0x558d61321a00 <col:10> 'Storage::index_type':'unsigned int' <LValueToRValue>
|         | | `-DeclRefExpr 0x558d613219a0 <col:10> 'Storage::index_type':'unsigned int' lvalue ParmVar 0x558d613203f8 'i' 'Storage::index_type':'unsigned int'
|         | `-ImplicitCastExpr 0x558d61321a18 <col:13> 'Storage::index_type':'unsigned int' <LValueToRValue>
|         |   `-MemberExpr 0x558d613219d0 <col:13> 'const Storage::index_type':'const unsigned int' lvalue ->_capacity 0x558d613213a8
|         |     `-CXXThisExpr 0x558d613219c0 <col:13> 'const Storage *' implicit this
|         |-BinaryOperator 0x558d61321ac0 <col:25, col:27> 'unsigned int' '+'
|         | |-ImplicitCastExpr 0x558d61321a90 <col:25> 'Storage::index_type':'unsigned int' <LValueToRValue>
|         | | `-DeclRefExpr 0x558d61321a50 <col:25> 'Storage::index_type':'unsigned int' lvalue ParmVar 0x558d613203f8 'i' 'Storage::index_type':'unsigned int'
|         | `-ImplicitCastExpr 0x558d61321aa8 <col:27> 'unsigned int' <IntegralCast>
|         |   `-IntegerLiteral 0x558d61321a70 <col:27> 'int' 1
|         `-ImplicitCastExpr 0x558d61321b00 <col:31> 'unsigned int' <IntegralCast>
|           `-IntegerLiteral 0x558d61321ae0 <col:31> 'int' 0
|-CXXMethodDecl 0x558d61320630 <line:29:5, line:31:5> line:29:16 used prev_i 'Storage::index_type (Storage::index_type) const'
| |-ParmVarDecl 0x558d613205a0 <col:23, col:34> col:34 used i 'Storage::index_type':'unsigned int'
| `-CompoundStmt 0x558d61321d68 <col:43, line:31:5>
|   `-ReturnStmt 0x558d61321d58 <line:30:2, col:32>
|     `-ParenExpr 0x558d61321d38 <col:9, col:32> 'unsigned int'
|       `-ConditionalOperator 0x558d61321d08 <col:10, col:23> 'unsigned int'
|         |-BinaryOperator 0x558d61321c00 <col:10, col:13> 'bool' '!='
|         | |-ImplicitCastExpr 0x558d61321bd0 <col:10> 'Storage::index_type':'unsigned int' <LValueToRValue>
|         | | `-DeclRefExpr 0x558d61321b90 <col:10> 'Storage::index_type':'unsigned int' lvalue ParmVar 0x558d613205a0 'i' 'Storage::index_type':'unsigned int'
|         | `-ImplicitCastExpr 0x558d61321be8 <col:13> 'unsigned int' <IntegralCast>
|         |   `-IntegerLiteral 0x558d61321bb0 <col:13> 'int' 0
|         |-BinaryOperator 0x558d61321c90 <col:17, col:19> 'unsigned int' '-'
|         | |-ImplicitCastExpr 0x558d61321c60 <col:17> 'Storage::index_type':'unsigned int' <LValueToRValue>
|         | | `-DeclRefExpr 0x558d61321c20 <col:17> 'Storage::index_type':'unsigned int' lvalue ParmVar 0x558d613205a0 'i' 'Storage::index_type':'unsigned int'
|         | `-ImplicitCastExpr 0x558d61321c78 <col:19> 'unsigned int' <IntegralCast>
|         |   `-IntegerLiteral 0x558d61321c40 <col:19> 'int' 1
|         `-ImplicitCastExpr 0x558d61321cf0 <col:23> 'Storage::index_type':'unsigned int' <LValueToRValue>
|           `-MemberExpr 0x558d61321cc0 <col:23> 'const Storage::index_type':'const unsigned int' lvalue ->_capacity 0x558d613213a8
|             `-CXXThisExpr 0x558d61321cb0 <col:23> 'const Storage *' implicit this
|-CXXMethodDecl 0x558d613207a8 <line:34:5, col:54> col:10 set_capacity 'void (Storage::index_type)'
| |-ParmVarDecl 0x558d613206e8 <col:23, col:34> col:34 used c 'Storage::index_type':'unsigned int'
| `-CompoundStmt 0x558d61321e18 <col:37, col:54>
|   `-BinaryOperator 0x558d61321df8 <col:39, col:51> 'Storage::index_type':'unsigned int' lvalue '='
|     |-MemberExpr 0x558d61321d90 <col:39> 'Storage::index_type':'unsigned int' lvalue ->_capacity 0x558d613213a8
|     | `-CXXThisExpr 0x558d61321d80 <col:39> 'Storage *' implicit this
|     `-ImplicitCastExpr 0x558d61321de0 <col:51> 'Storage::index_type':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x558d61321dc0 <col:51> 'Storage::index_type':'unsigned int' lvalue ParmVar 0x558d613206e8 'c' 'Storage::index_type':'unsigned int'
|-CXXMethodDecl 0x558d613208f0 <line:35:5, col:38> col:17 used set_head 'void (Storage::index_type)' inline
| `-ParmVarDecl 0x558d61320860 <col:26, col:37> col:37 h 'Storage::index_type':'unsigned int'
|-CXXMethodDecl 0x558d61320a38 <line:36:5, col:38> col:17 used set_tail 'void (Storage::index_type)' inline
| `-ParmVarDecl 0x558d613209a8 <col:26, col:37> col:37 t 'Storage::index_type':'unsigned int'
|-CXXMethodDecl 0x558d61320b80 <line:37:5, col:46> col:17 used set_head_release 'void (Storage::index_type)' inline
| `-ParmVarDecl 0x558d61320af0 <col:34, col:45> col:45 h 'Storage::index_type':'unsigned int'
|-CXXMethodDecl 0x558d61320cc8 <line:38:5, col:46> col:17 set_tail_acquire 'void (Storage::index_type)' inline
| `-ParmVarDecl 0x558d61320c38 <col:34, col:45> col:45 t 'Storage::index_type':'unsigned int'
|-CXXMethodDecl 0x558d61320db8 <line:39:5, col:43> col:23 reserve_tail_atomic 'Storage::index_type ()' inline
|-CXXMethodDecl 0x558d61321058 <line:41:5, line:43:35> line:41:24 packet_memory_barrier 'void (Packet *volatile &, volatile Storage::index_type &)' static inline
| |-ParmVarDecl 0x558d61320ea0 <col:46, col:64> col:64 packet 'Packet *volatile &'
| |-ParmVarDecl 0x558d61320f48 <line:42:46, col:67> col:67 index 'volatile Storage::index_type &'
| `-DeprecatedAttr 0x558d61321108 <line:43:24> "" ""
|-CXXMethodDecl 0x558d61321258 <line:44:5, line:45:35> line:44:17 packet_memory_barrier 'void (Packet *volatile &)' inline
| |-ParmVarDecl 0x558d61321190 <col:39, col:57> col:57 packet 'Packet *volatile &'
| `-DeprecatedAttr 0x558d61321300 <line:45:24> "" ""
|-AccessSpecDecl 0x558d61321370 <line:47:3, col:12> col:3 protected
|-FieldDecl 0x558d613213a8 <line:48:5, col:16> col:16 referenced _capacity 'Storage::index_type':'unsigned int'
|-AccessSpecDecl 0x558d613213f8 <line:50:3, col:10> col:3 private
|-FieldDecl 0x558d61321430 <line:51:5, col:25> col:25 referenced _head 'volatile Storage::index_type':'volatile unsigned int'
|-FieldDecl 0x558d61321490 <line:52:5, col:25> col:25 referenced _tail 'volatile Storage::index_type':'volatile unsigned int'
`-CXXDestructorDecl 0x558d61329f90 <line:9:7> col:7 implicit ~Storage 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.Storage = type { i32, i32, i32 }
  NonVirtualBaseLLVMType:%class.Storage = type { i32, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class SimpleQueue
         0 |   class Element (primary base)
         0 |     (Element vtable pointer)
         8 |     class Element::Port *[2] _ports
        24 |     class Element::Port [4] _inline_ports
        88 |     int [2] _nports
        96 |     class Router * _router
       104 |     int _eindex
       108 |   class Storage (base)
       108 |     Storage::index_type _capacity
       112 |     volatile Storage::index_type _head
       116 |     volatile Storage::index_type _tail
       120 |   class Packet *volatile * _q
       128 |   volatile int _drops
       132 |   int _highwater_length
           | [sizeof=136, dsize=136, align=8,
           |  nvsize=136, nvalign=8]

*** Dumping AST Record Layout
         0 | class atomic_uint32_t
         0 |   uint32_t _val
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Packet::Anno
         0 |   char [48] c
         0 |   uint8_t [48] u8
         0 |   uint16_t [24] u16
         0 |   uint32_t [12] u32
         0 |   uint64_t [6] u64
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Packet::AllAnno
         0 |   union Packet::Anno cb
         0 |     char [48] c
         0 |     uint8_t [48] u8
         0 |     uint16_t [24] u16
         0 |     uint32_t [12] u32
         0 |     uint64_t [6] u64
        48 |   unsigned char * mac
        56 |   unsigned char * nh
        64 |   unsigned char * h
        72 |   enum Packet::PacketType pkt_type
        76 |   char [8] timestamp
        88 |   class Packet * next
        96 |   class Packet * prev
           | [sizeof=104, dsize=104, align=8,
           |  nvsize=104, nvalign=8]

*** Dumping AST Record Layout
         0 | class Packet
         0 |   class atomic_uint32_t _use_count
         0 |     uint32_t _val
         8 |   class Packet * _data_packet
        16 |   unsigned char * _head
        24 |   unsigned char * _data
        32 |   unsigned char * _tail
        40 |   unsigned char * _end
        48 |   struct Packet::AllAnno _aa
        48 |     union Packet::Anno cb
        48 |       char [48] c
        48 |       uint8_t [48] u8
        48 |       uint16_t [24] u16
        48 |       uint32_t [12] u32
        48 |       uint64_t [6] u64
        96 |     unsigned char * mac
       104 |     unsigned char * nh
       112 |     unsigned char * h
       120 |     enum Packet::PacketType pkt_type
       124 |     char [8] timestamp
       136 |     class Packet * next
       144 |     class Packet * prev
       152 |   Packet::buffer_destructor_type _destructor
       160 |   void * _destructor_argument
           | [sizeof=168, dsize=168, align=8,
           |  nvsize=168, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558d610080d0 <../dummy_inc/click/atomic.hh:52:1, line:94:1> line:52:7 referenced class atomic_uint32_t definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x558d610081e8 <col:1, col:7> col:7 implicit referenced class atomic_uint32_t
|-AccessSpecDecl 0x558d61008278 <col:25, col:31> col:25 public
|-CXXMethodDecl 0x558d61008348 <line:57:5, col:29> col:21 used value 'uint32_t () const' inline
|-CXXConversionDecl 0x558d61008430 <line:58:5, col:32> col:12 used operator unsigned int 'uint32_t () const' inline
|-CXXMethodDecl 0x558d61008648 <line:60:5, col:49> col:29 used operator= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x558d610084f0 <col:39, col:48> col:48 x 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558d610087f8 <line:62:5, col:53> col:29 operator+= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x558d61008700 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x558d61008940 <line:63:5, col:53> col:29 operator-= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x558d610088b0 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x558d61008a88 <line:64:5, col:53> col:29 operator|= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x558d610089f8 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558d61008bd0 <line:65:5, col:53> col:29 operator&= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x558d61008b40 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558d61008c98 <line:67:5, col:28> col:17 used operator++ 'void ()' inline
|-CXXMethodDecl 0x558d61008de0 <line:68:5, col:31> col:17 operator++ 'void (int)' inline
| `-ParmVarDecl 0x558d61008d50 <col:28> col:31 'int'
|-CXXMethodDecl 0x558d61008ea8 <line:69:5, col:28> col:17 used operator-- 'void ()' inline
|-CXXMethodDecl 0x558d61008ff0 <line:70:5, col:31> col:17 operator-- 'void (int)' inline
| `-ParmVarDecl 0x558d61008f60 <col:28> col:31 'int'
|-CXXMethodDecl 0x558d61009168 <line:72:5, col:42> col:21 swap 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x558d610090a8 <col:26, col:35> col:35 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558d610092b0 <line:73:5, col:49> col:21 fetch_and_add 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x558d61009220 <col:35, col:44> col:44 delta 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558d61009378 <line:74:5, col:30> col:17 dec_and_test 'bool ()' inline
|-CXXMethodDecl 0x558d61009538 <line:75:5, col:69> col:21 used compare_swap 'uint32_t (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x558d61009428 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x558d610094a0 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558d61009788 <line:76:5, col:97> col:17 compare_and_swap 'bool (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x558d610095f8 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x558d61009670 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x558d61009838 <col:86> "" ""
|-CXXMethodDecl 0x558d61009aa8 <line:78:5, col:71> col:28 used swap 'uint32_t (volatile uint32_t &, uint32_t)' static inline
| |-ParmVarDecl 0x558d61009918 <col:33, col:52> col:52 x 'volatile uint32_t &'
| `-ParmVarDecl 0x558d61009990 <col:55, col:64> col:64 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558d61009c58 <line:79:5, col:48> col:24 used inc 'void (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x558d61009b68 <col:28, col:47> col:47 x 'volatile uint32_t &'
|-CXXMethodDecl 0x558d61009e08 <line:80:5, col:57> col:24 used dec_and_test 'bool (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x558d61009d10 <col:37, col:56> col:56 x 'volatile uint32_t &'
|-CXXMethodDecl 0x558d6100a0d8 <line:81:5, col:98> col:28 used compare_swap 'uint32_t (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x558d61009ec0 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x558d61009f38 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x558d61009fb0 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558d6100a3b8 <line:82:5, col:126> col:24 compare_and_swap 'bool (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x558d6100a1a0 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x558d6100a218 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x558d6100a290 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x558d6100a470 <col:115> "" ""
|-AccessSpecDecl 0x558d6100a4e0 <line:84:3, col:10> col:3 private
|-FieldDecl 0x558d6100a518 <line:91:5, col:14> col:14 referenced _val 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558d6100ba30 <line:52:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x558d6100ba30
| `-ParmVarDecl 0x558d6100bb38 <col:7> col:7 'const atomic_uint32_t &'
|-CXXMethodDecl 0x558d6100bbd8 <col:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x558d6100bbd8
| `-ParmVarDecl 0x558d6100bce8 <col:7> col:7 'atomic_uint32_t &&'
|-CXXConstructorDecl 0x558d61041318 <col:7> col:7 implicit used atomic_uint32_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x558d61233110 <col:7>
|-CXXConstructorDecl 0x558d610413f0 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x558d610413f0
| `-ParmVarDecl 0x558d61041508 <col:7> col:7 'const atomic_uint32_t &'
|-CXXConstructorDecl 0x558d61041578 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x558d61041578
| `-ParmVarDecl 0x558d61041688 <col:7> col:7 'atomic_uint32_t &&'
`-CXXDestructorDecl 0x558d61235b10 <col:7> col:7 implicit ~atomic_uint32_t 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.atomic_uint32_t = type { i32 }
  NonVirtualBaseLLVMType:%class.atomic_uint32_t = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558d61221cb8 prev 0x558d61216ec0 <../dummy_inc/click/packet.hh:702:5, line:711:5> line:702:11 referenced union Anno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x558d61221db0 <col:5, col:11> col:11 implicit union Anno
|-FieldDecl 0x558d61221ea0 <line:703:2, col:18> col:7 referenced c 'char [48]'
|-FieldDecl 0x558d61221fc8 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
|-FieldDecl 0x558d61222148 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
|-FieldDecl 0x558d612222c8 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
|-FieldDecl 0x558d61222448 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
|-CXXConstructorDecl 0x558d61233278 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| `-CompoundStmt 0x558d61233ae8 <col:11>
|-CXXDestructorDecl 0x558d61233350 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x558d61233488 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x558d61233488
| `-ParmVarDecl 0x558d61233598 <col:11> col:11 'const Packet::Anno &'
|-CXXConstructorDecl 0x558d61233638 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x558d61233638
| `-ParmVarDecl 0x558d61233748 <col:11> col:11 'Packet::Anno &&'
|-CXXMethodDecl 0x558d61236508 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| |-ParmVarDecl 0x558d61236618 <col:11> col:11 'const Packet::Anno &'
| `-CompoundStmt 0x558d61236898 <col:11>
|   `-ReturnStmt 0x558d61236888 <col:11>
|     `-UnaryOperator 0x558d61236870 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x558d61236860 <col:11> 'Packet::Anno *' this
`-CXXMethodDecl 0x558d61236688 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x558d61236688
  `-ParmVarDecl 0x558d61236798 <col:11> col:11 'Packet::Anno &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Packet::Anno" = type { [6 x i64] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558d612224b0 <../dummy_inc/click/packet.hh:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x558d612225c8 <col:5, col:12> col:12 implicit struct AllAnno
|-FieldDecl 0x558d61222668 <line:717:2, col:7> col:7 cb 'Packet::Anno'
|-FieldDecl 0x558d612226d0 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
|-FieldDecl 0x558d61222738 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
|-FieldDecl 0x558d612227a0 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
|-FieldDecl 0x558d61222800 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
|-FieldDecl 0x558d612228c0 <line:722:2, col:34> col:7 timestamp 'char [8]'
|-FieldDecl 0x558d61222920 <line:723:2, col:10> col:10 referenced next 'Packet *'
|-FieldDecl 0x558d61222980 <line:724:2, col:10> col:10 referenced prev 'Packet *'
|-CXXConstructorDecl 0x558d61233188 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| |-CXXCtorInitializer Field 0x558d61222668 'cb' 'Packet::Anno'
| | `-CXXConstructExpr 0x558d61233af8 <col:12> 'Packet::Anno' 'void () noexcept'
| `-CompoundStmt 0x558d61233b50 <col:12>
|-CXXConstructorDecl 0x558d612337b8 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x558d612337b8
| `-ParmVarDecl 0x558d612338c8 <col:12> col:12 'const Packet::AllAnno &'
|-CXXConstructorDecl 0x558d61233968 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x558d61233968
| `-ParmVarDecl 0x558d61233a78 <col:12> col:12 'Packet::AllAnno &&'
`-CXXDestructorDecl 0x558d61235bf0 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  NonVirtualBaseLLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558d612105d0 <../dummy_inc/click/packet.hh:35:1, line:775:1> line:35:7 referenced class Packet definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x558d612106e8 <col:1, col:7> col:7 implicit referenced class Packet
|-AccessSpecDecl 0x558d61210778 <col:16, col:22> col:16 public
|-EnumDecl 0x558d612107a0 <line:41:5, line:50:5> line:41:5
| |-EnumConstantDecl 0x558d612108a0 <line:45:2, col:21> col:2 referenced default_headroom 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| | `-ImplicitCastExpr 0x558d61210980 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558d61210880 <col:21> 'int' Int: 28
| |     `-IntegerLiteral 0x558d61210860 <col:21> 'int' 28
| `-EnumConstantDecl 0x558d61210930 <line:48:2, col:22> col:2 referenced min_buffer_length 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
|   `-ImplicitCastExpr 0x558d61210998 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x558d61210910 <col:22> 'int' Int: 64
|       `-IntegerLiteral 0x558d612108f0 <col:22> 'int' 64
|-CXXMethodDecl 0x558d61210cd8 <line:52:5, line:53:75> line:52:28 used make 'WritablePacket *(uint32_t, const void *, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x558d612109c0 <col:33, col:42> col:42 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x558d61210a40 <col:52, col:64> col:64 data 'const void *'
| |-ParmVarDecl 0x558d61210ab8 <line:53:5, col:14> col:14 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x558d61210b30 <col:22, col:31> col:31 tailroom 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x558d61210d98 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x558d61210f98 <line:54:5, col:109> col:35 make 'WritablePacket *(const void *, uint32_t)' static inline
| |-ParmVarDecl 0x558d61210e10 <col:40, col:52> col:52 data 'const void *'
| |-ParmVarDecl 0x558d61210e88 <col:58, col:67> col:67 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x558d61211048 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x558d612111a8 <line:55:5, col:91> col:35 make 'WritablePacket *(uint32_t)' static inline
| |-ParmVarDecl 0x558d612110b8 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x558d61211250 <col:72> warn_unused_result ""
|-TypedefDecl 0x558d612115b0 <line:65:5, col:89> col:20 referenced buffer_destructor_type 'void (*)(unsigned char *, size_t, void *)'
| `-PointerType 0x558d61211540 'void (*)(unsigned char *, size_t, void *)'
|   `-ParenType 0x558d612114e0 'void (unsigned char *, size_t, void *)' sugar
|     `-FunctionProtoType 0x558d612114a0 'void (unsigned char *, size_t, void *)' cdecl
|       |-BuiltinType 0x558d60ce62d0 'void'
|       |-PointerType 0x558d60f90970 'unsigned char *'
|       | `-BuiltinType 0x558d60ce63d0 'unsigned char'
|       |-TypedefType 0x558d60d8cee0 'size_t' sugar
|       | |-Typedef 0x558d60d56b20 'size_t'
|       | `-BuiltinType 0x558d60ce6430 'unsigned long'
|       `-PointerType 0x558d60ce6ad0 'void *'
|         `-BuiltinType 0x558d60ce62d0 'void'
|-CXXMethodDecl 0x558d61211a28 <line:66:5, line:68:131> line:66:28 make 'WritablePacket *(unsigned char *, uint32_t, Packet::buffer_destructor_type, void *, int, int)' static
| |-ParmVarDecl 0x558d61211620 <col:33, col:48> col:48 data 'unsigned char *'
| |-ParmVarDecl 0x558d61211698 <col:54, col:63> col:63 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x558d61211730 <line:67:5, col:28> col:28 buffer_destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| |-ParmVarDecl 0x558d612117b0 <line:68:33, col:58> col:39 argument 'void *' cinit
| | `-CStyleCastExpr 0x558d6122c120 <col:50, col:58> 'void *' <NoOp>
| |   `-ImplicitCastExpr 0x558d6122c108 <col:58> 'void *' <NullToPointer> part_of_explicit_cast
| |     `-IntegerLiteral 0x558d6122c0d0 <col:58> 'int' 0
| |-ParmVarDecl 0x558d61211830 <col:61, col:76> col:65 headroom 'int' cinit
| | `-IntegerLiteral 0x558d6122c148 <col:76> 'int' 0
| |-ParmVarDecl 0x558d612118b0 <col:79, col:94> col:83 tailroom 'int' cinit
| | `-IntegerLiteral 0x558d6122c168 <col:94> 'int' 0
| `-WarnUnusedResultAttr 0x558d61211af8 <col:112> warn_unused_result ""
|-CXXMethodDecl 0x558d61211b78 <line:71:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x558d61211c38 <line:73:5, col:50> col:45 used kill 'void ()'
| |-NoInlineAttr 0x558d61211cd8 <col:20>
| `-OptimizeNoneAttr 0x558d61211d30 <col:30>
|-CXXMethodDecl 0x558d61211da8 <line:75:5, col:54> col:45 used shared 'bool () const'
| |-NoInlineAttr 0x558d61211e48 <col:20>
| `-OptimizeNoneAttr 0x558d61211ea0 <col:30>
|-CXXMethodDecl 0x558d61211f18 <line:76:5, col:55> col:13 clone 'Packet *()'
| `-WarnUnusedResultAttr 0x558d61211fb8 <col:36> warn_unused_result ""
|-CXXMethodDecl 0x558d61212068 <line:77:5, col:102> col:56 uniqueify 'WritablePacket *()'
| |-NoInlineAttr 0x558d61212108 <col:20>
| |-OptimizeNoneAttr 0x558d61212160 <col:30>
| `-WarnUnusedResultAttr 0x558d61212188 <col:83> warn_unused_result ""
|-CXXMethodDecl 0x558d612121e0 <line:79:5, col:68> col:61 used data 'const unsigned char *() const'
| |-NoInlineAttr 0x558d61212280 <col:20>
| `-OptimizeNoneAttr 0x558d612122d8 <col:30>
|-CXXMethodDecl 0x558d61212328 <line:80:5, col:72> col:61 used end_data 'const unsigned char *() const'
| |-NoInlineAttr 0x558d612123c8 <col:20>
| `-OptimizeNoneAttr 0x558d61212420 <col:30>
|-CXXMethodDecl 0x558d61212468 <line:81:5, col:58> col:49 length 'uint32_t () const'
| |-NoInlineAttr 0x558d61212508 <col:20>
| `-OptimizeNoneAttr 0x558d61212560 <col:30>
|-CXXMethodDecl 0x558d612125a8 <line:82:5, col:32> col:21 used headroom 'uint32_t () const' inline
|-CXXMethodDecl 0x558d61212668 <line:83:5, col:32> col:21 used tailroom 'uint32_t () const' inline
|-CXXMethodDecl 0x558d61212730 <line:84:5, col:42> col:33 used buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x558d612127f8 <line:85:5, col:46> col:33 used end_buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x558d612128b8 <line:86:5, col:37> col:21 used buffer_length 'uint32_t () const' inline
|-CXXMethodDecl 0x558d612129d8 <line:97:5, line:99:5> line:97:28 buffer_destructor 'Packet::buffer_destructor_type () const'
| `-CompoundStmt 0x558d6122c230 <col:54, line:99:5>
|   `-ReturnStmt 0x558d6122c220 <line:98:2, col:9>
|     `-ImplicitCastExpr 0x558d6122c208 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-MemberExpr 0x558d6122c1d8 <col:9> 'const Packet::buffer_destructor_type':'void (*const)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x558d61222cb8
|         `-CXXThisExpr 0x558d6122c1c8 <col:9> 'const Packet *' implicit this
|-CXXMethodDecl 0x558d61212b78 <line:101:5, line:103:5> line:101:10 set_buffer_destructor 'void (Packet::buffer_destructor_type)'
| |-ParmVarDecl 0x558d61212a88 <col:32, col:55> col:55 used destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| `-CompoundStmt 0x558d6122c2e0 <col:67, line:103:5>
|   `-BinaryOperator 0x558d6122c2c0 <line:102:9, col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x558d6122c258 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x558d61222cb8
|     | `-CXXThisExpr 0x558d6122c248 <col:9> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x558d6122c2a8 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-DeclRefExpr 0x558d6122c288 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ParmVar 0x558d61212a88 'destructor' 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-CXXMethodDecl 0x558d61212c70 <line:105:5, line:107:5> line:105:11 destructor_argument 'void *()'
| `-CompoundStmt 0x558d6122c360 <col:33, line:107:5>
|   `-ReturnStmt 0x558d6122c350 <line:106:9, col:16>
|     `-ImplicitCastExpr 0x558d6122c338 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x558d6122c308 <col:16> 'void *' lvalue ->_destructor_argument 0x558d61222d20
|         `-CXXThisExpr 0x558d6122c2f8 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x558d61212d30 <line:109:5, line:113:5> line:109:10 reset_buffer 'void ()'
| `-CompoundStmt 0x558d6122c990 <col:25, line:113:5>
|   |-ParenExpr 0x558d6122c6d8 <line:110:2, col:146> 'void'
|   | `-ConditionalOperator 0x558d6122c6a8 <col:3, col:145> 'void'
|   |   |-CXXStaticCastExpr 0x558d6122c418 <col:3, col:32> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x558d6122c3f0 <col:23, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-CXXMemberCallExpr 0x558d6122c3b8 <col:24, col:31> 'bool'
|   |   |     `-MemberExpr 0x558d6122c388 <col:24> '<bound member function type>' ->shared 0x558d61211da8
|   |   |       `-ImplicitCastExpr 0x558d6122c3d8 <col:24> 'const Packet *' <NoOp>
|   |   |         `-CXXThisExpr 0x558d6122c378 <col:24> 'Packet *' implicit this
|   |   |-CXXFunctionalCastExpr 0x558d6122c478 <col:36, col:43> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x558d6122c458 <col:42> 'int' 0
|   |   `-CallExpr 0x558d6122c608 <col:47, col:145> 'void'
|   |     |-ImplicitCastExpr 0x558d6122c5f0 <col:47> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x558d6122c5d0 <col:47> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x558d60d83cf0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x558d6122c648 <col:62> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558d6122c4e8 <col:62> 'const char [10]' lvalue "!shared()"
|   |     |-ImplicitCastExpr 0x558d6122c660 <col:75> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558d6122c510 <col:75> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x558d6122c678 <col:107> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x558d6122c548 <col:107> 'int' 110
|   |     `-ImplicitCastExpr 0x558d6122c690 <col:112, col:126> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x558d6122c5b8 <col:112, col:126> 'const char [28]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x558d6122c5a0 <col:126> 'const char [28]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x558d6122c568 <col:126> 'const char [28]' lvalue "void Packet::reset_buffer()"
|   |-BinaryOperator 0x558d6122c8d8 <line:111:2, col:33> 'unsigned char *' lvalue '='
|   | |-MemberExpr 0x558d6122c708 <col:2> 'unsigned char *' lvalue ->_head 0x558d61222ac0
|   | | `-CXXThisExpr 0x558d6122c6f8 <col:2> 'Packet *' implicit this
|   | `-ImplicitCastExpr 0x558d6122c8c0 <col:10, col:33> 'unsigned char *' <LValueToRValue>
|   |   `-BinaryOperator 0x558d6122c8a0 <col:10, col:33> 'unsigned char *' lvalue '='
|   |     |-MemberExpr 0x558d6122c748 <col:10> 'unsigned char *' lvalue ->_data 0x558d61222b28
|   |     | `-CXXThisExpr 0x558d6122c738 <col:10> 'Packet *' implicit this
|   |     `-ImplicitCastExpr 0x558d6122c888 <col:18, col:33> 'unsigned char *' <LValueToRValue>
|   |       `-BinaryOperator 0x558d6122c868 <col:18, col:33> 'unsigned char *' lvalue '='
|   |         |-MemberExpr 0x558d6122c788 <col:18> 'unsigned char *' lvalue ->_tail 0x558d61222b90
|   |         | `-CXXThisExpr 0x558d6122c778 <col:18> 'Packet *' implicit this
|   |         `-ImplicitCastExpr 0x558d6122c850 <col:26, col:33> 'unsigned char *' <LValueToRValue>
|   |           `-BinaryOperator 0x558d6122c830 <col:26, col:33> 'unsigned char *' lvalue '='
|   |             |-MemberExpr 0x558d6122c7c8 <col:26> 'unsigned char *' lvalue ->_end 0x558d61222bf8
|   |             | `-CXXThisExpr 0x558d6122c7b8 <col:26> 'Packet *' implicit this
|   |             `-ImplicitCastExpr 0x558d6122c818 <col:33> 'unsigned char *' <NullToPointer>
|   |               `-IntegerLiteral 0x558d6122c7f8 <col:33> 'int' 0
|   `-BinaryOperator 0x558d6122c970 <line:112:2, col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x558d6122c908 <col:2> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x558d61222cb8
|     | `-CXXThisExpr 0x558d6122c8f8 <col:2> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x558d6122c958 <col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <NullToPointer>
|       `-IntegerLiteral 0x558d6122c938 <col:16> 'int' 0
|-CXXMethodDecl 0x558d61212e70 <line:141:5, col:109> col:56 push 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x558d61212de0 <col:61, col:70> col:70 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x558d61212f18 <col:20>
| |-OptimizeNoneAttr 0x558d61212f70 <col:30>
| `-WarnUnusedResultAttr 0x558d61212f98 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x558d61213068 <line:152:5, col:120> col:56 push_mac_header 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x558d61212fd8 <col:72, col:81> col:81 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x558d61213110 <col:20>
| |-OptimizeNoneAttr 0x558d61213168 <col:30>
| `-WarnUnusedResultAttr 0x558d61213190 <col:101> warn_unused_result ""
|-CXXMethodDecl 0x558d612132c8 <line:171:5, col:76> col:13 nonunique_push 'Packet *(uint32_t)'
| |-ParmVarDecl 0x558d612131d0 <col:28, col:37> col:37 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x558d61213370 <col:57> warn_unused_result ""
|-CXXMethodDecl 0x558d61213470 <line:187:5, col:62> col:45 pull 'void (uint32_t)'
| |-ParmVarDecl 0x558d612133e0 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x558d61213518 <col:20>
| `-OptimizeNoneAttr 0x558d61213570 <col:30>
|-CXXMethodDecl 0x558d61213638 <line:213:5, col:73> col:21 put 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x558d612135a8 <col:25, col:34> col:34 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x558d612136e0 <col:54> warn_unused_result ""
|-CXXMethodDecl 0x558d612137e0 <line:230:5, col:75> col:13 nonunique_put 'Packet *(uint32_t)'
| |-ParmVarDecl 0x558d61213750 <col:27, col:36> col:36 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x558d61213888 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x558d61213988 <line:245:5, col:62> col:45 take 'void (uint32_t)'
| |-ParmVarDecl 0x558d612138f8 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x558d61213a30 <col:20>
| `-OptimizeNoneAttr 0x558d61213a88 <col:30>
|-CXXMethodDecl 0x558d61213c18 <line:269:5, col:99> col:13 shift_data 'Packet *(int, bool)'
| |-ParmVarDecl 0x558d61213ac8 <col:24, col:28> col:28 offset 'int'
| |-ParmVarDecl 0x558d61213b40 <col:36, col:59> col:41 free_on_failure 'bool' cinit
| | `-CXXBoolLiteralExpr 0x558d6122c188 <col:59> 'bool' true
| `-WarnUnusedResultAttr 0x558d61213cc8 <col:80> warn_unused_result ""
|-CXXMethodDecl 0x558d61213ec8 <line:271:5, col:71> col:17 shrink_data 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x558d61213d40 <col:29, col:50> col:50 data 'const unsigned char *'
| `-ParmVarDecl 0x558d61213db8 <col:56, col:65> col:65 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558d612140d8 <line:272:5, col:78> col:17 change_headroom_and_length 'void (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x558d61213f88 <col:44, col:53> col:53 headroom 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x558d61214000 <col:63, col:72> col:72 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558d612142e8 <line:274:5, col:40> col:10 copy 'bool (Packet *, int)'
| |-ParmVarDecl 0x558d61214198 <col:15, col:23> col:23 p 'Packet *'
| `-ParmVarDecl 0x558d61214218 <col:26, col:39> col:30 headroom 'int' cinit
|   `-IntegerLiteral 0x558d6122c198 <col:39> 'int' 0
|-CXXMethodDecl 0x558d612143b8 <line:279:5, col:34> col:17 has_mac_header 'bool () const' inline
|-CXXMethodDecl 0x558d61214480 <line:280:5, col:46> col:33 used mac_header 'const unsigned char *() const' inline
|-CXXMethodDecl 0x558d61214548 <line:281:5, col:36> col:16 mac_header_offset 'int () const' inline
|-CXXMethodDecl 0x558d61214608 <line:282:5, col:41> col:21 mac_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x558d612146d0 <line:283:5, col:29> col:16 mac_length 'int () const' inline
|-CXXMethodDecl 0x558d61214818 <line:284:5, col:54> col:17 set_mac_header 'void (const unsigned char *)' inline
| `-ParmVarDecl 0x558d61214788 <col:32, col:53> col:53 p 'const unsigned char *'
|-CXXMethodDecl 0x558d612149e8 <line:285:5, col:68> col:17 used set_mac_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x558d612148d8 <col:32, col:53> col:53 p 'const unsigned char *'
| `-ParmVarDecl 0x558d61214950 <col:56, col:65> col:65 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558d61214ab8 <line:286:5, col:34> col:17 clear_mac_header 'void ()' inline
|-CXXMethodDecl 0x558d61214b78 <line:288:5, col:66> col:45 has_network_header 'bool () const'
| |-NoInlineAttr 0x558d61214c18 <col:20>
| `-OptimizeNoneAttr 0x558d61214c70 <col:30>
|-CXXMethodDecl 0x558d61214cc0 <line:289:5, col:78> col:61 used network_header 'const unsigned char *() const'
| |-NoInlineAttr 0x558d61214d60 <col:20>
| `-OptimizeNoneAttr 0x558d61214db8 <col:30>
|-CXXMethodDecl 0x558d61214e08 <line:290:5, col:40> col:16 used network_header_offset 'int () const' inline
|-CXXMethodDecl 0x558d61214ec8 <line:291:5, col:45> col:21 used network_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x558d61214f90 <line:292:5, col:61> col:44 network_length 'int () const'
| |-NoInlineAttr 0x558d61215030 <col:20>
| `-OptimizeNoneAttr 0x558d61215088 <col:30>
|-CXXMethodDecl 0x558d612151d8 <line:293:5, col:72> col:17 set_network_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x558d612150c8 <col:36, col:57> col:57 p 'const unsigned char *'
| `-ParmVarDecl 0x558d61215140 <col:60, col:69> col:69 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558d61215328 <line:294:5, col:55> col:17 set_network_header_length 'void (uint32_t)' inline
| `-ParmVarDecl 0x558d61215298 <col:43, col:52> col:52 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558d61215400 <line:295:5, col:38> col:17 clear_network_header 'void ()' inline
|-CXXMethodDecl 0x558d612154c0 <line:297:5, col:68> col:45 has_transport_header 'bool () const'
| |-NoInlineAttr 0x558d61215560 <col:20>
| `-OptimizeNoneAttr 0x558d612155b8 <col:30>
|-CXXMethodDecl 0x558d61215608 <line:298:5, col:80> col:61 used transport_header 'const unsigned char *() const'
| |-NoInlineAttr 0x558d612156a8 <col:20>
| `-OptimizeNoneAttr 0x558d61215700 <col:30>
|-CXXMethodDecl 0x558d61215750 <line:299:5, col:42> col:16 transport_header_offset 'int () const' inline
|-CXXMethodDecl 0x558d61215818 <line:300:5, col:63> col:44 transport_length 'int () const'
| |-NoInlineAttr 0x558d612158b8 <col:20>
| `-OptimizeNoneAttr 0x558d61215910 <col:30>
|-CXXMethodDecl 0x558d61215958 <line:301:5, col:40> col:17 clear_transport_header 'void ()' inline
|-CXXMethodDecl 0x558d61215a78 <line:304:5, col:46> col:31 ether_header 'const click_ether *() const' inline
|-CXXMethodDecl 0x558d61215be8 <line:305:5, col:57> col:17 set_ether_header 'void (const click_ether *)' inline
| `-ParmVarDecl 0x558d61215b28 <col:34, col:53> col:53 ethh 'const click_ether *'
|-CXXMethodDecl 0x558d61215cd8 <line:307:5, col:68> col:56 ip_header 'const click_ip *() const'
| |-NoInlineAttr 0x558d61215d78 <col:20>
| `-OptimizeNoneAttr 0x558d61215dd0 <col:30>
|-CXXMethodDecl 0x558d61215e20 <line:308:5, col:35> col:16 ip_header_offset 'int () const' inline
|-CXXMethodDecl 0x558d61215ee0 <line:309:5, col:40> col:21 ip_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x558d61216118 <line:310:5, col:92> col:45 set_ip_header 'void (const click_ip *, uint32_t)'
| |-ParmVarDecl 0x558d61215f90 <col:59, col:75> col:75 iph 'const click_ip *'
| |-ParmVarDecl 0x558d61216008 <col:80, col:89> col:89 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x558d612161c8 <col:20>
| `-OptimizeNoneAttr 0x558d61216220 <col:30>
|-CXXMethodDecl 0x558d612162c8 <line:312:5, col:70> col:57 ip6_header 'const click_ip6 *() const'
| |-NoInlineAttr 0x558d61216368 <col:20>
| `-OptimizeNoneAttr 0x558d612163c0 <col:30>
|-CXXMethodDecl 0x558d61216410 <line:313:5, col:64> col:44 ip6_header_offset 'int () const'
| |-NoInlineAttr 0x558d612164b0 <col:20>
| `-OptimizeNoneAttr 0x558d61216508 <col:30>
|-CXXMethodDecl 0x558d61216550 <line:314:5, col:69> col:49 ip6_header_length 'uint32_t () const'
| |-NoInlineAttr 0x558d612165f0 <col:20>
| `-OptimizeNoneAttr 0x558d61216648 <col:30>
|-CXXMethodDecl 0x558d61216748 <line:315:5, col:81> col:45 set_ip6_header 'void (const click_ip6 *)'
| |-ParmVarDecl 0x558d61216680 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-NoInlineAttr 0x558d612167f0 <col:20>
| `-OptimizeNoneAttr 0x558d61216848 <col:30>
|-CXXMethodDecl 0x558d61216a08 <line:316:5, col:95> col:45 set_ip6_header 'void (const click_ip6 *, uint32_t)'
| |-ParmVarDecl 0x558d61216880 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-ParmVarDecl 0x558d612168f8 <col:83, col:92> col:92 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x558d61216ab8 <col:20>
| `-OptimizeNoneAttr 0x558d61216b10 <col:30>
|-CXXMethodDecl 0x558d61216bb8 <line:318:5, col:44> col:30 used icmp_header 'const click_icmp *() const' inline
|-CXXMethodDecl 0x558d61216cd8 <line:319:5, col:42> col:29 used tcp_header 'const click_tcp *() const' inline
|-CXXMethodDecl 0x558d61216df8 <line:320:5, col:42> col:29 used udp_header 'const click_udp *() const' inline
|-AccessSpecDecl 0x558d61216e98 <line:333:3, col:10> col:3 private
|-CXXRecordDecl 0x558d61216ec0 <line:335:5, col:11> col:11 referenced union Anno
|-CXXMethodDecl 0x558d61216fe8 <line:340:5, col:60> col:52 used xanno 'const Packet::Anno *() const'
| |-NoInlineAttr 0x558d61217088 <col:20>
| `-OptimizeNoneAttr 0x558d612170e0 <col:30>
|-CXXMethodDecl 0x558d61217188 <line:341:5, col:52> col:46 used xanno 'Packet::Anno *()'
| |-NoInlineAttr 0x558d61217228 <col:20>
| `-OptimizeNoneAttr 0x558d61217280 <col:30>
|-AccessSpecDecl 0x558d612172a8 <line:344:3, col:9> col:3 public
|-EnumDecl 0x558d612172d0 <line:349:5, line:351:5> line:349:5
| `-EnumConstantDecl 0x558d612173d0 <line:350:2, col:14> col:2 referenced anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   `-ImplicitCastExpr 0x558d61217420 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x558d612173b0 <col:14> 'int' Int: 48
|       `-IntegerLiteral 0x558d61217390 <col:14> 'int' 48
|-CXXMethodDecl 0x558d61217488 <line:354:5, col:74> col:57 used timestamp_anno 'const Timestamp &() const'
| |-NoInlineAttr 0x558d61217528 <col:20>
| `-OptimizeNoneAttr 0x558d61217580 <col:30>
|-CXXMethodDecl 0x558d612175f8 <line:356:5, col:66> col:51 used timestamp_anno 'Timestamp &()'
| |-NoInlineAttr 0x558d61217698 <col:20>
| `-OptimizeNoneAttr 0x558d612176f0 <col:30>
|-CXXMethodDecl 0x558d612177b8 <line:359:5, col:54> col:17 used set_timestamp_anno 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x558d61217728 <col:36, col:53> col:53 t 'const Timestamp &'
|-CXXMethodDecl 0x558d61217958 <line:362:5, col:38> col:24 used device_anno 'net_device *() const' inline
|-CXXMethodDecl 0x558d61217af8 <line:364:5, col:48> col:17 used set_device_anno 'void (net_device *)' inline
| `-ParmVarDecl 0x558d61217a08 <col:33, col:45> col:45 dev 'net_device *'
|-EnumDecl 0x558d61217ba0 <line:368:5, line:381:5> line:368:10 referenced PacketType
| |-EnumConstantDecl 0x558d61217ca0 <line:369:2, col:9> col:2 HOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x558d61218050 <col:9> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558d61217c80 <col:9> 'int' Int: 0
| |     `-IntegerLiteral 0x558d61217c60 <col:9> 'int' 0
| |-EnumConstantDecl 0x558d61217d30 <line:370:2, col:14> col:2 BROADCAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x558d61218068 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558d61217d10 <col:14> 'int' Int: 1
| |     `-IntegerLiteral 0x558d61217cf0 <col:14> 'int' 1
| |-EnumConstantDecl 0x558d61217dc0 <line:372:2, col:14> col:2 MULTICAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x558d61218080 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558d61217da0 <col:14> 'int' Int: 2
| |     `-IntegerLiteral 0x558d61217d80 <col:14> 'int' 2
| |-EnumConstantDecl 0x558d61217e50 <line:374:2, col:14> col:2 OTHERHOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x558d61218098 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558d61217e30 <col:14> 'int' Int: 3
| |     `-IntegerLiteral 0x558d61217e10 <col:14> 'int' 3
| |-EnumConstantDecl 0x558d61217ee0 <line:377:2, col:13> col:2 OUTGOING 'Packet::PacketType'
| | `-ImplicitCastExpr 0x558d612180b0 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558d61217ec0 <col:13> 'int' Int: 4
| |     `-IntegerLiteral 0x558d61217ea0 <col:13> 'int' 4
| |-EnumConstantDecl 0x558d61217f70 <line:379:2, col:13> col:2 LOOPBACK 'Packet::PacketType'
| | `-ImplicitCastExpr 0x558d612180c8 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558d61217f50 <col:13> 'int' Int: 5
| |     `-IntegerLiteral 0x558d61217f30 <col:13> 'int' 5
| `-EnumConstantDecl 0x558d61218000 <line:380:2, col:14> col:2 FASTROUTE 'Packet::PacketType'
|   `-ImplicitCastExpr 0x558d612180e0 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x558d61217fe0 <col:14> 'int' Int: 6
|       `-IntegerLiteral 0x558d61217fc0 <col:14> 'int' 6
|-CXXMethodDecl 0x558d61218148 <line:383:5, col:70> col:51 used packet_type_anno 'Packet::PacketType () const'
| |-NoInlineAttr 0x558d612181e8 <col:20>
| `-OptimizeNoneAttr 0x558d61218240 <col:30>
|-CXXMethodDecl 0x558d61218338 <line:385:5, col:78> col:45 used set_packet_type_anno 'void (Packet::PacketType)'
| |-ParmVarDecl 0x558d61218278 <col:66, col:77> col:77 t 'Packet::PacketType'
| |-NoInlineAttr 0x558d612183e0 <col:20>
| `-OptimizeNoneAttr 0x558d61218438 <col:30>
|-CXXMethodDecl 0x558d612184a8 <line:410:5, col:27> col:20 next 'Packet *() const' inline
|-CXXMethodDecl 0x558d612185d0 <line:412:5, col:26> col:21 next 'Packet *&()' inline
|-CXXMethodDecl 0x558d61218748 <line:414:5, col:35> col:17 set_next 'void (Packet *)' inline
| `-ParmVarDecl 0x558d61218680 <col:26, col:34> col:34 p 'Packet *'
|-CXXMethodDecl 0x558d61218810 <line:417:5, col:27> col:20 prev 'Packet *() const' inline
|-CXXMethodDecl 0x558d612188d8 <line:419:5, col:26> col:21 prev 'Packet *&()' inline
|-CXXMethodDecl 0x558d61218a18 <line:421:5, col:35> col:17 set_prev 'void (Packet *)' inline
| `-ParmVarDecl 0x558d61218988 <col:26, col:34> col:34 p 'Packet *'
|-EnumDecl 0x558d61218ac0 <line:423:5, line:426:5> line:423:5
| |-EnumConstantDecl 0x558d61218bc0 <line:424:2, col:23> col:2 referenced dst_ip_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x558d61218dc0 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558d61218ba0 <col:23> 'int' Int: 0
| |     `-IntegerLiteral 0x558d61218b80 <col:23> 'int' 0
| |-EnumConstantDecl 0x558d61218c50 <col:26, col:45> col:26 dst_ip_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x558d61218dd8 <col:45> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558d61218c30 <col:45> 'int' Int: 4
| |     `-IntegerLiteral 0x558d61218c10 <col:45> 'int' 4
| |-EnumConstantDecl 0x558d61218ce0 <line:425:2, col:24> col:2 dst_ip6_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x558d61218df0 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558d61218cc0 <col:24> 'int' Int: 0
| |     `-IntegerLiteral 0x558d61218ca0 <col:24> 'int' 0
| `-EnumConstantDecl 0x558d61218d70 <col:27, col:47> col:27 dst_ip6_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
|   `-ImplicitCastExpr 0x558d61218e08 <col:47> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x558d61218d50 <col:47> 'int' Int: 16
|       `-IntegerLiteral 0x558d61218d30 <col:47> 'int' 16
|-CXXMethodDecl 0x558d61218e68 <line:431:5, col:36> col:22 dst_ip_anno 'IPAddress () const' inline
|-CXXMethodDecl 0x558d61218fd8 <line:436:5, col:75> col:45 set_dst_ip_anno 'void (IPAddress)'
| |-ParmVarDecl 0x558d61218f18 <col:61, col:71> col:71 addr 'IPAddress'
| |-NoInlineAttr 0x558d61219080 <col:20>
| `-OptimizeNoneAttr 0x558d612190d8 <col:30>
|-CXXMethodDecl 0x558d61219128 <line:441:5, col:36> col:11 anno 'void *()'
| `-CompoundStmt 0x558d6122cab0 <col:18, col:36>
|   `-ReturnStmt 0x558d6122caa0 <col:20, col:33>
|     `-ImplicitCastExpr 0x558d6122ca88 <col:27, col:33> 'void *' <BitCast>
|       `-CXXMemberCallExpr 0x558d6122ca68 <col:27, col:33> 'Packet::Anno *'
|         `-MemberExpr 0x558d6122ca38 <col:27> '<bound member function type>' ->xanno 0x558d61217188
|           `-CXXThisExpr 0x558d6122ca28 <col:27> 'Packet *' implicit this
|-CXXMethodDecl 0x558d61219220 <line:444:5, col:48> col:17 anno 'const void *() const'
| `-CompoundStmt 0x558d6122cbc0 <col:30, col:48>
|   `-ReturnStmt 0x558d6122cbb0 <col:32, col:45>
|     `-ImplicitCastExpr 0x558d6122cb98 <col:39, col:45> 'const void *' <BitCast>
|       `-CXXMemberCallExpr 0x558d6122cb78 <col:39, col:45> 'const Packet::Anno *'
|         `-MemberExpr 0x558d6122cb48 <col:39> '<bound member function type>' ->xanno 0x558d61216fe8
|           `-CXXThisExpr 0x558d6122cb38 <col:39> 'const Packet *' implicit this
|-CXXMethodDecl 0x558d61219308 <line:447:5, col:50> col:14 used anno_u8 'uint8_t *()'
| `-CompoundStmt 0x558d6122cd58 <col:24, col:50>
|   `-ReturnStmt 0x558d6122cd48 <col:26, col:47>
|     `-UnaryOperator 0x558d6122cd30 <col:33, col:47> 'uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x558d6122cd10 <col:34, col:47> 'uint8_t':'unsigned char' lvalue
|         |-ImplicitCastExpr 0x558d6122ccf8 <col:34, col:43> 'uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x558d6122cca8 <col:34, col:43> 'uint8_t [48]' lvalue ->u8 0x558d61221fc8
|         |   `-CXXMemberCallExpr 0x558d6122cc88 <col:34, col:40> 'Packet::Anno *'
|         |     `-MemberExpr 0x558d6122cc58 <col:34> '<bound member function type>' ->xanno 0x558d61217188
|         |       `-CXXThisExpr 0x558d6122cc48 <col:34> 'Packet *' implicit this
|         `-IntegerLiteral 0x558d6122ccd8 <col:46> 'int' 0
|-CXXMethodDecl 0x558d61219410 <line:450:5, col:62> col:20 used anno_u8 'const uint8_t *() const'
| `-CompoundStmt 0x558d6122cf28 <col:36, col:62>
|   `-ReturnStmt 0x558d6122cf18 <col:38, col:59>
|     `-UnaryOperator 0x558d6122cf00 <col:45, col:59> 'const uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x558d6122cee0 <col:46, col:59> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x558d6122cec8 <col:46, col:55> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x558d6122ce40 <col:46, col:55> 'uint8_t const[48]' lvalue ->u8 0x558d61221fc8
|         |   `-CXXMemberCallExpr 0x558d6122ce20 <col:46, col:52> 'const Packet::Anno *'
|         |     `-MemberExpr 0x558d6122cdf0 <col:46> '<bound member function type>' ->xanno 0x558d61216fe8
|         |       `-CXXThisExpr 0x558d6122cde0 <col:46> 'const Packet *' implicit this
|         `-IntegerLiteral 0x558d6122ce70 <col:58> 'int' 0
|-CXXMethodDecl 0x558d61219528 <line:453:5, col:53> col:15 used anno_u32 'uint32_t *()'
| `-CompoundStmt 0x558d6122d0c0 <col:26, col:53>
|   `-ReturnStmt 0x558d6122d0b0 <col:28, col:50>
|     `-UnaryOperator 0x558d6122d098 <col:35, col:50> 'uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x558d6122d078 <col:36, col:50> 'uint32_t':'unsigned int' lvalue
|         |-ImplicitCastExpr 0x558d6122d060 <col:36, col:45> 'uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x558d6122d010 <col:36, col:45> 'uint32_t [12]' lvalue ->u32 0x558d612222c8
|         |   `-CXXMemberCallExpr 0x558d6122cff0 <col:36, col:42> 'Packet::Anno *'
|         |     `-MemberExpr 0x558d6122cfc0 <col:36> '<bound member function type>' ->xanno 0x558d61217188
|         |       `-CXXThisExpr 0x558d6122cfb0 <col:36> 'Packet *' implicit this
|         `-IntegerLiteral 0x558d6122d040 <col:49> 'int' 0
|-CXXMethodDecl 0x558d61219648 <line:456:5, col:65> col:21 used anno_u32 'const uint32_t *() const'
| `-CompoundStmt 0x558d6122d298 <col:38, col:65>
|   `-ReturnStmt 0x558d6122d288 <col:40, col:62>
|     `-UnaryOperator 0x558d6122d270 <col:47, col:62> 'const uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x558d6122d250 <col:48, col:62> 'const uint32_t':'const unsigned int' lvalue
|         |-ImplicitCastExpr 0x558d6122d238 <col:48, col:57> 'const uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x558d6122d1a8 <col:48, col:57> 'uint32_t const[12]' lvalue ->u32 0x558d612222c8
|         |   `-CXXMemberCallExpr 0x558d6122d188 <col:48, col:54> 'const Packet::Anno *'
|         |     `-MemberExpr 0x558d6122d158 <col:48> '<bound member function type>' ->xanno 0x558d61216fe8
|         |       `-CXXThisExpr 0x558d6122d148 <col:48> 'const Packet *' implicit this
|         `-IntegerLiteral 0x558d6122d1d8 <col:61> 'int' 0
|-CXXMethodDecl 0x558d612197f8 <line:460:5, line:463:5> line:460:13 used anno_u8 'uint8_t (int) const'
| |-ParmVarDecl 0x558d61219700 <col:21, col:25> col:25 used i 'int'
| `-CompoundStmt 0x558d6122d968 <col:34, line:463:5>
|   |-ParenExpr 0x558d6122d7b0 <line:461:2, col:174> 'void'
|   | `-ConditionalOperator 0x558d6122d780 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x558d6122d3e8 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x558d6122d3b8 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x558d6122d308 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x558d6122d2f0 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x558d6122d2b0 <col:23> 'int' lvalue ParmVar 0x558d61219700 'i' 'int'
|   |   |   | `-IntegerLiteral 0x558d6122d2d0 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x558d6122d398 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x558d6122d368 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x558d6122d328 <col:33> 'int' lvalue ParmVar 0x558d61219700 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x558d6122d380 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x558d6122d348 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x558d612173d0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x558d6122d448 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x558d6122d428 <col:56> 'int' 0
|   |   `-CallExpr 0x558d6122d6e0 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x558d6122d6c8 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x558d6122d6a8 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x558d60d83cf0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x558d6122d720 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558d6122d538 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x558d6122d738 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558d6122d568 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x558d6122d750 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x558d6122d5a0 <col:135> 'int' 461
|   |     `-ImplicitCastExpr 0x558d6122d768 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x558d6122d690 <col:140, col:154> 'const char [35]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x558d6122d678 <col:154> 'const char [35]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x558d6122d638 <col:154> 'const char [35]' lvalue "uint8_t Packet::anno_u8(int) const"
|   `-ReturnStmt 0x558d6122d958 <line:462:2, col:22>
|     `-ImplicitCastExpr 0x558d6122d940 <col:9, col:22> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-ArraySubscriptExpr 0x558d6122d920 <col:9, col:22> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x558d6122d8f0 <col:9, col:18> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x558d6122d8a0 <col:9, col:18> 'uint8_t const[48]' lvalue ->u8 0x558d61221fc8
|         |   `-CXXMemberCallExpr 0x558d6122d880 <col:9, col:15> 'const Packet::Anno *'
|         |     `-MemberExpr 0x558d6122d850 <col:9> '<bound member function type>' ->xanno 0x558d61216fe8
|         |       `-CXXThisExpr 0x558d6122d840 <col:9> 'const Packet *' implicit this
|         `-ImplicitCastExpr 0x558d6122d908 <col:21> 'int' <LValueToRValue>
|           `-DeclRefExpr 0x558d6122d8d0 <col:21> 'int' lvalue ParmVar 0x558d61219700 'i' 'int'
|-CXXMethodDecl 0x558d61219a48 <line:469:5, line:472:5> line:469:10 used set_anno_u8 'void (int, uint8_t)'
| |-ParmVarDecl 0x558d612198b8 <col:22, col:26> col:26 used i 'int'
| |-ParmVarDecl 0x558d61219930 <col:29, col:37> col:37 used x 'uint8_t':'unsigned char'
| `-CompoundStmt 0x558d6122dff8 <col:40, line:472:5>
|   |-ParenExpr 0x558d6122de10 <line:470:2, col:174> 'void'
|   | `-ConditionalOperator 0x558d6122dde0 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x558d6122dac0 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x558d6122da90 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x558d6122d9e0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x558d6122d9c8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x558d6122d988 <col:23> 'int' lvalue ParmVar 0x558d612198b8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x558d6122d9a8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x558d6122da70 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x558d6122da40 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x558d6122da00 <col:33> 'int' lvalue ParmVar 0x558d612198b8 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x558d6122da58 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x558d6122da20 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x558d612173d0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x558d6122db20 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x558d6122db00 <col:56> 'int' 0
|   |   `-CallExpr 0x558d6122dd40 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x558d6122dd28 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x558d6122dd08 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x558d60d83cf0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x558d6122dd80 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558d6122db90 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x558d6122dd98 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558d6122dbc0 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x558d6122ddb0 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x558d6122dbf8 <col:135> 'int' 470
|   |     `-ImplicitCastExpr 0x558d6122ddc8 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x558d6122dcf0 <col:140, col:154> 'const char [39]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x558d6122dcd8 <col:154> 'const char [39]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x558d6122dc98 <col:154> 'const char [39]' lvalue "void Packet::set_anno_u8(int, uint8_t)"
|   `-BinaryOperator 0x558d6122dfd8 <line:471:2, col:19> 'uint8_t':'unsigned char' lvalue '='
|     |-ArraySubscriptExpr 0x558d6122df80 <col:2, col:15> 'uint8_t':'unsigned char' lvalue
|     | |-ImplicitCastExpr 0x558d6122df50 <col:2, col:11> 'uint8_t *' <ArrayToPointerDecay>
|     | | `-MemberExpr 0x558d6122df00 <col:2, col:11> 'uint8_t [48]' lvalue ->u8 0x558d61221fc8
|     | |   `-CXXMemberCallExpr 0x558d6122dee0 <col:2, col:8> 'Packet::Anno *'
|     | |     `-MemberExpr 0x558d6122deb0 <col:2> '<bound member function type>' ->xanno 0x558d61217188
|     | |       `-CXXThisExpr 0x558d6122dea0 <col:2> 'Packet *' implicit this
|     | `-ImplicitCastExpr 0x558d6122df68 <col:14> 'int' <LValueToRValue>
|     |   `-DeclRefExpr 0x558d6122df30 <col:14> 'int' lvalue ParmVar 0x558d612198b8 'i' 'int'
|     `-ImplicitCastExpr 0x558d6122dfc0 <col:19> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-DeclRefExpr 0x558d6122dfa0 <col:19> 'uint8_t':'unsigned char' lvalue ParmVar 0x558d61219930 'x' 'uint8_t':'unsigned char'
|-CXXMethodDecl 0x558d61219c08 <line:479:5, line:485:5> line:479:14 used anno_u16 'uint16_t (int) const'
| |-ParmVarDecl 0x558d61219b10 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x558d6122e778 <col:36, line:485:5>
|   |-ParenExpr 0x558d6122e4e0 <line:480:2, col:182> 'void'
|   | `-ConditionalOperator 0x558d6122e4b0 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x558d6122e190 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x558d6122e160 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x558d6122e070 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x558d6122e058 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x558d6122e018 <col:23> 'int' lvalue ParmVar 0x558d61219b10 'i' 'int'
|   |   |   | `-IntegerLiteral 0x558d6122e038 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x558d6122e140 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x558d6122e128 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x558d6122e090 <col:33> 'int' lvalue ParmVar 0x558d61219b10 'i' 'int'
|   |   |     `-BinaryOperator 0x558d6122e108 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x558d6122e0f0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x558d6122e0b0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x558d612173d0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x558d6122e0d0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x558d6122e1f0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x558d6122e1d0 <col:60> 'int' 0
|   |   `-CallExpr 0x558d6122e410 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x558d6122e3f8 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x558d6122e3d8 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x558d60d83cf0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x558d6122e450 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558d6122e260 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x558d6122e468 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558d6122e298 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x558d6122e480 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x558d6122e2d0 <col:143> 'int' 480
|   |     `-ImplicitCastExpr 0x558d6122e498 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x558d6122e3c0 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x558d6122e3a8 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x558d6122e368 <col:162> 'const char [37]' lvalue "uint16_t Packet::anno_u16(int) const"
|   `-ReturnStmt 0x558d6122e768 <line:484:2, col:75>
|     `-ImplicitCastExpr 0x558d6122e750 <col:9, col:75> 'click_aliasable_uint16_t':'unsigned short' <LValueToRValue>
|       `-UnaryOperator 0x558d6122e738 <col:9, col:75> 'const click_aliasable_uint16_t':'const unsigned short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x558d6122e708 <col:10, col:75> 'const click_aliasable_uint16_t *' reinterpret_cast<const click_aliasable_uint16_t *> <BitCast>
|           `-BinaryOperator 0x558d6122e6a8 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x558d6122e678 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x558d6122e5f0 <col:61, col:70> 'char const[48]' lvalue ->c 0x558d61221ea0
|             |   `-CXXMemberCallExpr 0x558d6122e5d0 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x558d6122e5a0 <col:61> '<bound member function type>' ->xanno 0x558d61216fe8
|             |       `-CXXThisExpr 0x558d6122e590 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x558d6122e690 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x558d6122e620 <col:74> 'int' lvalue ParmVar 0x558d61219b10 'i' 'int'
|-CXXMethodDecl 0x558d61219e58 <line:494:5, line:500:5> line:494:10 used set_anno_u16 'void (int, uint16_t)'
| |-ParmVarDecl 0x558d61219cc8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x558d61219d40 <col:30, col:39> col:39 used x 'uint16_t':'unsigned short'
| `-CompoundStmt 0x558d6122eec8 <col:42, line:500:5>
|   |-ParenExpr 0x558d6122ec60 <line:495:2, col:182> 'void'
|   | `-ConditionalOperator 0x558d6122ec30 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x558d6122e910 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x558d6122e8e0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x558d6122e7f0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x558d6122e7d8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x558d6122e798 <col:23> 'int' lvalue ParmVar 0x558d61219cc8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x558d6122e7b8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x558d6122e8c0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x558d6122e8a8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x558d6122e810 <col:33> 'int' lvalue ParmVar 0x558d61219cc8 'i' 'int'
|   |   |     `-BinaryOperator 0x558d6122e888 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x558d6122e870 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x558d6122e830 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x558d612173d0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x558d6122e850 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x558d6122e970 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x558d6122e950 <col:60> 'int' 0
|   |   `-CallExpr 0x558d6122eb90 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x558d6122eb78 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x558d6122eb58 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x558d60d83cf0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x558d6122ebd0 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558d6122e9e0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x558d6122ebe8 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558d6122ea18 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x558d6122ec00 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x558d6122ea50 <col:143> 'int' 495
|   |     `-ImplicitCastExpr 0x558d6122ec18 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x558d6122eb40 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x558d6122eb28 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x558d6122eae8 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u16(int, uint16_t)"
|   `-BinaryOperator 0x558d6122eea8 <line:499:2, col:66> 'click_aliasable_uint16_t':'unsigned short' lvalue '='
|     |-UnaryOperator 0x558d6122ee58 <col:2, col:62> 'click_aliasable_uint16_t':'unsigned short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x558d6122ee28 <col:3, col:62> 'click_aliasable_uint16_t *' reinterpret_cast<click_aliasable_uint16_t *> <BitCast>
|     |   `-BinaryOperator 0x558d6122edd0 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x558d6122eda0 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x558d6122ed50 <col:48, col:57> 'char [48]' lvalue ->c 0x558d61221ea0
|     |     |   `-CXXMemberCallExpr 0x558d6122ed30 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x558d6122ed00 <col:48> '<bound member function type>' ->xanno 0x558d61217188
|     |     |       `-CXXThisExpr 0x558d6122ecf0 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x558d6122edb8 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x558d6122ed80 <col:61> 'int' lvalue ParmVar 0x558d61219cc8 'i' 'int'
|     `-ImplicitCastExpr 0x558d6122ee90 <col:66> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x558d6122ee70 <col:66> 'uint16_t':'unsigned short' lvalue ParmVar 0x558d61219d40 'x' 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x558d6121a018 <line:507:5, line:513:5> line:507:13 anno_s16 'int16_t (int) const'
| |-ParmVarDecl 0x558d61219f20 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x558d6122f628 <col:35, line:513:5>
|   |-ParenExpr 0x558d6122f338 <line:508:2, col:182> 'void'
|   | `-ConditionalOperator 0x558d6122f308 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x558d6122f060 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x558d6122f030 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x558d6122ef40 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x558d6122ef28 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x558d6122eee8 <col:23> 'int' lvalue ParmVar 0x558d61219f20 'i' 'int'
|   |   |   | `-IntegerLiteral 0x558d6122ef08 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x558d6122f010 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x558d6122eff8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x558d6122ef60 <col:33> 'int' lvalue ParmVar 0x558d61219f20 'i' 'int'
|   |   |     `-BinaryOperator 0x558d6122efd8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x558d6122efc0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x558d6122ef80 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x558d612173d0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x558d6122efa0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x558d6122f0c0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x558d6122f0a0 <col:60> 'int' 0
|   |   `-CallExpr 0x558d6122f268 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x558d6122f250 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x558d6122f230 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x558d60d83cf0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x558d6122f2a8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558d6122f130 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x558d6122f2c0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558d6122f168 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x558d6122f2d8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x558d6122f1a0 <col:143> 'int' 508
|   |     `-ImplicitCastExpr 0x558d6122f2f0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x558d6122f218 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x558d6122f200 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x558d6122f1c0 <col:162> 'const char [36]' lvalue "int16_t Packet::anno_s16(int) const"
|   `-ReturnStmt 0x558d6122f618 <line:512:2, col:74>
|     `-ImplicitCastExpr 0x558d6122f600 <col:9, col:74> 'click_aliasable_int16_t':'short' <LValueToRValue>
|       `-UnaryOperator 0x558d6122f5e8 <col:9, col:74> 'const click_aliasable_int16_t':'const short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x558d6122f5b8 <col:10, col:74> 'const click_aliasable_int16_t *' reinterpret_cast<const click_aliasable_int16_t *> <BitCast>
|           `-BinaryOperator 0x558d6122f530 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x558d6122f500 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x558d6122f4b0 <col:60, col:69> 'char const[48]' lvalue ->c 0x558d61221ea0
|             |   `-CXXMemberCallExpr 0x558d6122f490 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x558d6122f460 <col:60> '<bound member function type>' ->xanno 0x558d61216fe8
|             |       `-CXXThisExpr 0x558d6122f450 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x558d6122f518 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x558d6122f4e0 <col:73> 'int' lvalue ParmVar 0x558d61219f20 'i' 'int'
|-CXXMethodDecl 0x558d6121a268 <line:522:5, line:528:5> line:522:10 set_anno_s16 'void (int, int16_t)'
| |-ParmVarDecl 0x558d6121a0d8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x558d6121a150 <col:30, col:38> col:38 used x 'int16_t':'short'
| `-CompoundStmt 0x558d6122fd48 <col:41, line:528:5>
|   |-ParenExpr 0x558d6122fad0 <line:523:2, col:182> 'void'
|   | `-ConditionalOperator 0x558d6122faa0 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x558d6122f7c0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x558d6122f790 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x558d6122f6a0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x558d6122f688 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x558d6122f648 <col:23> 'int' lvalue ParmVar 0x558d6121a0d8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x558d6122f668 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x558d6122f770 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x558d6122f758 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x558d6122f6c0 <col:33> 'int' lvalue ParmVar 0x558d6121a0d8 'i' 'int'
|   |   |     `-BinaryOperator 0x558d6122f738 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x558d6122f720 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x558d6122f6e0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x558d612173d0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x558d6122f700 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x558d6122f820 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x558d6122f800 <col:60> 'int' 0
|   |   `-CallExpr 0x558d6122fa00 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x558d6122f9e8 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x558d6122f9c8 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x558d60d83cf0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x558d6122fa40 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558d6122f890 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x558d6122fa58 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558d6122f8c8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x558d6122fa70 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x558d6122f900 <col:143> 'int' 523
|   |     `-ImplicitCastExpr 0x558d6122fa88 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x558d6122f9b0 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x558d6122f998 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x558d6122f958 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s16(int, int16_t)"
|   `-BinaryOperator 0x558d6122fd28 <line:527:2, col:65> 'click_aliasable_int16_t':'short' lvalue '='
|     |-UnaryOperator 0x558d6122fcd8 <col:2, col:61> 'click_aliasable_int16_t':'short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x558d6122fca8 <col:3, col:61> 'click_aliasable_int16_t *' reinterpret_cast<click_aliasable_int16_t *> <BitCast>
|     |   `-BinaryOperator 0x558d6122fc50 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x558d6122fc10 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x558d6122fbc0 <col:47, col:56> 'char [48]' lvalue ->c 0x558d61221ea0
|     |     |   `-CXXMemberCallExpr 0x558d6122fba0 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x558d6122fb70 <col:47> '<bound member function type>' ->xanno 0x558d61217188
|     |     |       `-CXXThisExpr 0x558d6122fb60 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x558d6122fc28 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x558d6122fbf0 <col:60> 'int' lvalue ParmVar 0x558d6121a0d8 'i' 'int'
|     `-ImplicitCastExpr 0x558d6122fd10 <col:65> 'int16_t':'short' <LValueToRValue>
|       `-DeclRefExpr 0x558d6122fcf0 <col:65> 'int16_t':'short' lvalue ParmVar 0x558d6121a150 'x' 'int16_t':'short'
|-CXXMethodDecl 0x558d6121a428 <line:535:5, line:541:5> line:535:14 used anno_u32 'uint32_t (int) const'
| |-ParmVarDecl 0x558d6121a330 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x558d61230418 <col:36, line:541:5>
|   |-ParenExpr 0x558d612301b8 <line:536:2, col:182> 'void'
|   | `-ConditionalOperator 0x558d61230188 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x558d6122fee0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x558d6122feb0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x558d6122fdc0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x558d6122fda8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x558d6122fd68 <col:23> 'int' lvalue ParmVar 0x558d6121a330 'i' 'int'
|   |   |   | `-IntegerLiteral 0x558d6122fd88 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x558d6122fe90 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x558d6122fe78 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x558d6122fde0 <col:33> 'int' lvalue ParmVar 0x558d6121a330 'i' 'int'
|   |   |     `-BinaryOperator 0x558d6122fe58 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x558d6122fe40 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x558d6122fe00 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x558d612173d0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x558d6122fe20 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x558d6122ff40 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x558d6122ff20 <col:60> 'int' 0
|   |   `-CallExpr 0x558d612300e8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x558d612300d0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x558d612300b0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x558d60d83cf0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x558d61230128 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558d6122ffb0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x558d61230140 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558d6122ffe8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x558d61230158 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x558d61230020 <col:143> 'int' 536
|   |     `-ImplicitCastExpr 0x558d61230170 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x558d61230098 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x558d61230080 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x558d61230040 <col:162> 'const char [37]' lvalue "uint32_t Packet::anno_u32(int) const"
|   `-ReturnStmt 0x558d61230408 <line:540:2, col:75>
|     `-ImplicitCastExpr 0x558d612303f0 <col:9, col:75> 'click_aliasable_uint32_t':'unsigned int' <LValueToRValue>
|       `-UnaryOperator 0x558d612303d8 <col:9, col:75> 'const click_aliasable_uint32_t':'const unsigned int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x558d612303a8 <col:10, col:75> 'const click_aliasable_uint32_t *' reinterpret_cast<const click_aliasable_uint32_t *> <BitCast>
|           `-BinaryOperator 0x558d61230350 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x558d61230320 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x558d612302d0 <col:61, col:70> 'char const[48]' lvalue ->c 0x558d61221ea0
|             |   `-CXXMemberCallExpr 0x558d612302b0 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x558d61230280 <col:61> '<bound member function type>' ->xanno 0x558d61216fe8
|             |       `-CXXThisExpr 0x558d61230270 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x558d61230338 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x558d61230300 <col:74> 'int' lvalue ParmVar 0x558d6121a330 'i' 'int'
|-CXXMethodDecl 0x558d6121a5f8 <line:550:5, col:75> col:45 used set_anno_u32 'void (int, uint32_t)'
| |-ParmVarDecl 0x558d6121a4e8 <col:58, col:62> col:62 i 'int'
| |-ParmVarDecl 0x558d6121a560 <col:65, col:74> col:74 x 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x558d6121a6a8 <col:20>
| `-OptimizeNoneAttr 0x558d6121a700 <col:30>
|-CXXMethodDecl 0x558d6121a838 <line:556:5, line:562:5> line:556:13 used anno_s32 'int32_t (int) const'
| |-ParmVarDecl 0x558d6121a740 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x558d61230ae8 <col:35, line:562:5>
|   |-ParenExpr 0x558d61230888 <line:557:2, col:182> 'void'
|   | `-ConditionalOperator 0x558d61230858 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x558d612305b0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x558d61230580 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x558d61230490 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x558d61230478 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x558d61230438 <col:23> 'int' lvalue ParmVar 0x558d6121a740 'i' 'int'
|   |   |   | `-IntegerLiteral 0x558d61230458 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x558d61230560 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x558d61230548 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x558d612304b0 <col:33> 'int' lvalue ParmVar 0x558d6121a740 'i' 'int'
|   |   |     `-BinaryOperator 0x558d61230528 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x558d61230510 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x558d612304d0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x558d612173d0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x558d612304f0 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x558d61230610 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x558d612305f0 <col:60> 'int' 0
|   |   `-CallExpr 0x558d612307b8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x558d612307a0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x558d61230780 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x558d60d83cf0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x558d612307f8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558d61230680 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x558d61230810 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558d612306b8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x558d61230828 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x558d612306f0 <col:143> 'int' 557
|   |     `-ImplicitCastExpr 0x558d61230840 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x558d61230768 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x558d61230750 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x558d61230710 <col:162> 'const char [36]' lvalue "int32_t Packet::anno_s32(int) const"
|   `-ReturnStmt 0x558d61230ad8 <line:561:2, col:74>
|     `-ImplicitCastExpr 0x558d61230ac0 <col:9, col:74> 'click_aliasable_int32_t':'int' <LValueToRValue>
|       `-UnaryOperator 0x558d61230aa8 <col:9, col:74> 'const click_aliasable_int32_t':'const int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x558d61230a78 <col:10, col:74> 'const click_aliasable_int32_t *' reinterpret_cast<const click_aliasable_int32_t *> <BitCast>
|           `-BinaryOperator 0x558d61230a20 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x558d612309f0 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x558d612309a0 <col:60, col:69> 'char const[48]' lvalue ->c 0x558d61221ea0
|             |   `-CXXMemberCallExpr 0x558d61230980 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x558d61230950 <col:60> '<bound member function type>' ->xanno 0x558d61216fe8
|             |       `-CXXThisExpr 0x558d61230940 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x558d61230a08 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x558d612309d0 <col:73> 'int' lvalue ParmVar 0x558d6121a740 'i' 'int'
|-CXXMethodDecl 0x558d6121aa48 <line:571:5, line:577:5> line:571:10 used set_anno_s32 'void (int, int32_t)'
| |-ParmVarDecl 0x558d6121a8f8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x558d6121a970 <col:30, col:38> col:38 used x 'int32_t':'int'
| `-CompoundStmt 0x558d612311c8 <col:41, line:577:5>
|   |-ParenExpr 0x558d61230f58 <line:572:2, col:182> 'void'
|   | `-ConditionalOperator 0x558d61230f28 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x558d61230c80 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x558d61230c50 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x558d61230b60 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x558d61230b48 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x558d61230b08 <col:23> 'int' lvalue ParmVar 0x558d6121a8f8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x558d61230b28 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x558d61230c30 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x558d61230c18 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x558d61230b80 <col:33> 'int' lvalue ParmVar 0x558d6121a8f8 'i' 'int'
|   |   |     `-BinaryOperator 0x558d61230bf8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x558d61230be0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x558d61230ba0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x558d612173d0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x558d61230bc0 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x558d61230ce0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x558d61230cc0 <col:60> 'int' 0
|   |   `-CallExpr 0x558d61230e88 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x558d61230e70 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x558d61230e50 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x558d60d83cf0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x558d61230ec8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558d61230d50 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x558d61230ee0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558d61230d88 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x558d61230ef8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x558d61230dc0 <col:143> 'int' 572
|   |     `-ImplicitCastExpr 0x558d61230f10 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x558d61230e38 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x558d61230e20 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x558d61230de0 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s32(int, int32_t)"
|   `-BinaryOperator 0x558d612311a8 <line:576:2, col:65> 'click_aliasable_int32_t':'int' lvalue '='
|     |-UnaryOperator 0x558d61231158 <col:2, col:61> 'click_aliasable_int32_t':'int' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x558d61231128 <col:3, col:61> 'click_aliasable_int32_t *' reinterpret_cast<click_aliasable_int32_t *> <BitCast>
|     |   `-BinaryOperator 0x558d612310c8 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x558d61231098 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x558d61231048 <col:47, col:56> 'char [48]' lvalue ->c 0x558d61221ea0
|     |     |   `-CXXMemberCallExpr 0x558d61231028 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x558d61230ff8 <col:47> '<bound member function type>' ->xanno 0x558d61217188
|     |     |       `-CXXThisExpr 0x558d61230fe8 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x558d612310b0 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x558d61231078 <col:60> 'int' lvalue ParmVar 0x558d6121a8f8 'i' 'int'
|     `-ImplicitCastExpr 0x558d61231190 <col:65> 'int32_t':'int' <LValueToRValue>
|       `-DeclRefExpr 0x558d61231170 <col:65> 'int32_t':'int' lvalue ParmVar 0x558d6121a970 'x' 'int32_t':'int'
|-CXXMethodDecl 0x558d6121ac08 <line:585:5, line:591:5> line:585:14 used anno_u64 'uint64_t (int) const'
| |-ParmVarDecl 0x558d6121ab10 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x558d612318f8 <col:36, line:591:5>
|   |-ParenExpr 0x558d61231638 <line:586:2, col:182> 'void'
|   | `-ConditionalOperator 0x558d61231608 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x558d61231360 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x558d61231330 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x558d61231240 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x558d61231228 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x558d612311e8 <col:23> 'int' lvalue ParmVar 0x558d6121ab10 'i' 'int'
|   |   |   | `-IntegerLiteral 0x558d61231208 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x558d61231310 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x558d612312f8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x558d61231260 <col:33> 'int' lvalue ParmVar 0x558d6121ab10 'i' 'int'
|   |   |     `-BinaryOperator 0x558d612312d8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x558d612312c0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x558d61231280 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x558d612173d0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x558d612312a0 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x558d612313c0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x558d612313a0 <col:60> 'int' 0
|   |   `-CallExpr 0x558d61231568 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x558d61231550 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x558d61231530 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x558d60d83cf0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x558d612315a8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558d61231430 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x558d612315c0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558d61231468 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x558d612315d8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x558d612314a0 <col:143> 'int' 586
|   |     `-ImplicitCastExpr 0x558d612315f0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x558d61231518 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x558d61231500 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x558d612314c0 <col:162> 'const char [37]' lvalue "uint64_t Packet::anno_u64(int) const"
|   `-ReturnStmt 0x558d612318e8 <line:590:2, col:75>
|     `-ImplicitCastExpr 0x558d612318d0 <col:9, col:75> 'click_aliasable_uint64_t':'unsigned long' <LValueToRValue>
|       `-UnaryOperator 0x558d612318b8 <col:9, col:75> 'const click_aliasable_uint64_t':'const unsigned long' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x558d61231888 <col:10, col:75> 'const click_aliasable_uint64_t *' reinterpret_cast<const click_aliasable_uint64_t *> <BitCast>
|           `-BinaryOperator 0x558d61231800 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x558d612317d0 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x558d61231780 <col:61, col:70> 'char const[48]' lvalue ->c 0x558d61221ea0
|             |   `-CXXMemberCallExpr 0x558d61231760 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x558d61231730 <col:61> '<bound member function type>' ->xanno 0x558d61216fe8
|             |       `-CXXThisExpr 0x558d61231720 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x558d612317e8 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x558d612317b0 <col:74> 'int' lvalue ParmVar 0x558d6121ab10 'i' 'int'
|-CXXMethodDecl 0x558d6121ae58 <line:600:5, line:606:5> line:600:10 used set_anno_u64 'void (int, uint64_t)'
| |-ParmVarDecl 0x558d6121acc8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x558d6121ad40 <col:30, col:39> col:39 used x 'uint64_t':'unsigned long'
| `-CompoundStmt 0x558d61231fd8 <col:42, line:606:5>
|   |-ParenExpr 0x558d61231d68 <line:601:2, col:182> 'void'
|   | `-ConditionalOperator 0x558d61231d38 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x558d61231a90 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x558d61231a60 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x558d61231970 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x558d61231958 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x558d61231918 <col:23> 'int' lvalue ParmVar 0x558d6121acc8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x558d61231938 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x558d61231a40 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x558d61231a28 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x558d61231990 <col:33> 'int' lvalue ParmVar 0x558d6121acc8 'i' 'int'
|   |   |     `-BinaryOperator 0x558d61231a08 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x558d612319f0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x558d612319b0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x558d612173d0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x558d612319d0 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x558d61231af0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x558d61231ad0 <col:60> 'int' 0
|   |   `-CallExpr 0x558d61231c98 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x558d61231c80 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x558d61231c60 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x558d60d83cf0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x558d61231cd8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558d61231b60 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x558d61231cf0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558d61231b98 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x558d61231d08 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x558d61231bd0 <col:143> 'int' 601
|   |     `-ImplicitCastExpr 0x558d61231d20 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x558d61231c48 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x558d61231c30 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x558d61231bf0 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u64(int, uint64_t)"
|   `-BinaryOperator 0x558d61231fb8 <line:605:2, col:66> 'click_aliasable_uint64_t':'unsigned long' lvalue '='
|     |-UnaryOperator 0x558d61231f68 <col:2, col:62> 'click_aliasable_uint64_t':'unsigned long' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x558d61231f38 <col:3, col:62> 'click_aliasable_uint64_t *' reinterpret_cast<click_aliasable_uint64_t *> <BitCast>
|     |   `-BinaryOperator 0x558d61231ed8 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x558d61231ea8 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x558d61231e58 <col:48, col:57> 'char [48]' lvalue ->c 0x558d61221ea0
|     |     |   `-CXXMemberCallExpr 0x558d61231e38 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x558d61231e08 <col:48> '<bound member function type>' ->xanno 0x558d61217188
|     |     |       `-CXXThisExpr 0x558d61231df8 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x558d61231ec0 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x558d61231e88 <col:61> 'int' lvalue ParmVar 0x558d6121acc8 'i' 'int'
|     `-ImplicitCastExpr 0x558d61231fa0 <col:66> 'uint64_t':'unsigned long' <LValueToRValue>
|       `-DeclRefExpr 0x558d61231f80 <col:66> 'uint64_t':'unsigned long' lvalue ParmVar 0x558d6121ad40 'x' 'uint64_t':'unsigned long'
|-CXXMethodDecl 0x558d6121aff0 <line:614:5, line:620:5> line:614:11 anno_ptr 'void *(int) const'
| |-ParmVarDecl 0x558d6121af20 <col:20, col:24> col:24 used i 'int'
| `-CompoundStmt 0x558d61232848 <col:33, line:620:5>
|   |-ParenExpr 0x558d612325c0 <line:615:2, col:220> 'void'
|   | `-ConditionalOperator 0x558d61232590 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x558d612321e0 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x558d612321b0 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x558d61232050 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x558d61232038 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x558d61231ff8 <col:23> 'int' lvalue ParmVar 0x558d6121af20 'i' 'int'
|   |   |   | `-IntegerLiteral 0x558d61232018 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x558d61232190 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x558d61232178 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x558d61232070 <col:33> 'int' lvalue ParmVar 0x558d6121af20 'i' 'int'
|   |   |     `-BinaryOperator 0x558d61232158 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x558d61232140 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x558d61232090 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x558d612173d0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x558d61232118 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x558d61232100 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x558d612320c8 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x558d61232240 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x558d61232220 <col:79> 'int' 0
|   |   `-CallExpr 0x558d612324f0 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x558d612324d8 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x558d612324b8 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x558d60d83cf0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x558d61232530 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558d61232328 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x558d61232548 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558d61232370 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x558d61232560 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x558d612323a8 <col:181> 'int' 615
|   |     `-ImplicitCastExpr 0x558d61232578 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x558d612324a0 <col:186, col:200> 'const char [34]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x558d61232488 <col:200> 'const char [34]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x558d61232448 <col:200> 'const char [34]' lvalue "void *Packet::anno_ptr(int) const"
|   `-ReturnStmt 0x558d61232838 <line:619:2, col:81>
|     `-ImplicitCastExpr 0x558d61232820 <col:9, col:81> 'click_aliasable_void_pointer_t':'void *' <LValueToRValue>
|       `-UnaryOperator 0x558d61232808 <col:9, col:81> 'const click_aliasable_void_pointer_t':'void *const' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x558d612327d8 <col:10, col:81> 'const click_aliasable_void_pointer_t *' reinterpret_cast<const click_aliasable_void_pointer_t *> <BitCast>
|           `-BinaryOperator 0x558d61232750 <col:67, col:80> 'const char *' '+'
|             |-ImplicitCastExpr 0x558d61232720 <col:67, col:76> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x558d612326d0 <col:67, col:76> 'char const[48]' lvalue ->c 0x558d61221ea0
|             |   `-CXXMemberCallExpr 0x558d612326b0 <col:67, col:73> 'const Packet::Anno *'
|             |     `-MemberExpr 0x558d61232680 <col:67> '<bound member function type>' ->xanno 0x558d61216fe8
|             |       `-CXXThisExpr 0x558d61232670 <col:67> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x558d61232738 <col:80> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x558d61232700 <col:80> 'int' lvalue ParmVar 0x558d6121af20 'i' 'int'
|-CXXMethodDecl 0x558d6121b208 <line:629:5, line:635:5> line:629:10 set_anno_ptr 'void (int, const void *)'
| |-ParmVarDecl 0x558d6121b0b0 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x558d6121b130 <col:30, col:42> col:42 used x 'const void *'
| `-CompoundStmt 0x558d61233070 <col:45, line:635:5>
|   |-ParenExpr 0x558d61232db8 <line:630:2, col:220> 'void'
|   | `-ConditionalOperator 0x558d61232d88 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x558d61232a50 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x558d61232a20 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x558d612328c0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x558d612328a8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x558d61232868 <col:23> 'int' lvalue ParmVar 0x558d6121b0b0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x558d61232888 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x558d61232a00 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x558d612329e8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x558d612328e0 <col:33> 'int' lvalue ParmVar 0x558d6121b0b0 'i' 'int'
|   |   |     `-BinaryOperator 0x558d612329c8 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x558d612329b0 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x558d61232900 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x558d612173d0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x558d61232988 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x558d61232970 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x558d61232938 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x558d61232ab0 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x558d61232a90 <col:79> 'int' 0
|   |   `-CallExpr 0x558d61232ce8 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x558d61232cd0 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x558d61232cb0 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x558d60d83cf0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x558d61232d28 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558d61232b20 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x558d61232d40 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558d61232b68 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x558d61232d58 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x558d61232ba0 <col:181> 'int' 630
|   |     `-ImplicitCastExpr 0x558d61232d70 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x558d61232c98 <col:186, col:200> 'const char [45]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x558d61232c80 <col:200> 'const char [45]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x558d61232c38 <col:200> 'const char [45]' lvalue "void Packet::set_anno_ptr(int, const void *)"
|   `-BinaryOperator 0x558d61233050 <line:634:2, col:92> 'click_aliasable_void_pointer_t':'void *' lvalue '='
|     |-UnaryOperator 0x558d61232fb8 <col:2, col:68> 'click_aliasable_void_pointer_t':'void *' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x558d61232f88 <col:3, col:68> 'click_aliasable_void_pointer_t *' reinterpret_cast<click_aliasable_void_pointer_t *> <BitCast>
|     |   `-BinaryOperator 0x558d61232f28 <col:54, col:67> 'char *' '+'
|     |     |-ImplicitCastExpr 0x558d61232ef8 <col:54, col:63> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x558d61232ea8 <col:54, col:63> 'char [48]' lvalue ->c 0x558d61221ea0
|     |     |   `-CXXMemberCallExpr 0x558d61232e88 <col:54, col:60> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x558d61232e58 <col:54> '<bound member function type>' ->xanno 0x558d61217188
|     |     |       `-CXXThisExpr 0x558d61232e48 <col:54> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x558d61232f10 <col:67> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x558d61232ed8 <col:67> 'int' lvalue ParmVar 0x558d6121b0b0 'i' 'int'
|     `-CXXConstCastExpr 0x558d61233020 <col:72, col:92> 'void *' const_cast<void *> <NoOp>
|       `-ImplicitCastExpr 0x558d61233008 <col:91> 'const void *' <LValueToRValue> part_of_explicit_cast
|         `-DeclRefExpr 0x558d61232fd0 <col:91> 'const void *' lvalue ParmVar 0x558d6121b130 'x' 'const void *'
|-CXXMethodDecl 0x558d6121b2d8 <line:638:5, line:640:5> line:638:20 data_packet 'Packet *()' inline
| `-CompoundStmt 0x558d612330f8 <col:34, line:640:5>
|   `-ReturnStmt 0x558d612330e8 <line:639:9, col:16>
|     `-ImplicitCastExpr 0x558d612330d0 <col:16> 'Packet *' <LValueToRValue>
|       `-MemberExpr 0x558d612330a0 <col:16> 'Packet *' lvalue ->_data_packet 0x558d61222a58
|         `-CXXThisExpr 0x558d61233090 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x558d6121b418 <line:643:5, col:50> col:17 used clear_annotations 'void (bool)' inline
| `-ParmVarDecl 0x558d6121b388 <col:35, col:46> col:40 all 'bool' cinit
|   `-CXXBoolLiteralExpr 0x558d6122c1b8 <col:46> 'bool' true
|-CXXMethodDecl 0x558d6121b598 <line:644:5, col:48> col:17 copy_annotations 'void (const Packet *)' inline
| `-ParmVarDecl 0x558d6121b4d0 <col:34, col:47> col:48 'const Packet *'
|-EnumDecl 0x558d6121b640 <line:648:5, line:660:5> line:648:5
| |-DeprecatedAttr 0x558d6121bdf0 <line:660:22> "" ""
| |-EnumConstantDecl 0x558d6121b740 <line:649:2, col:21> col:2 DEFAULT_HEADROOM 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x558d6121be60 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558d6121b720 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 28
| |     `-DeclRefExpr 0x558d6121b700 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x558d612108a0 'default_headroom' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x558d6121b7d0 <line:650:2, col:22> col:2 MIN_BUFFER_LENGTH 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x558d6121be78 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558d6121b7b0 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 64
| |     `-DeclRefExpr 0x558d6121b790 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x558d61210930 'min_buffer_length' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x558d6121b860 <line:651:2, col:21> col:2 referenced addr_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x558d6121be90 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558d6121b840 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x558d6121b820 <col:21> 'int' 0
| |-EnumConstantDecl 0x558d6121b8f0 <line:652:2, col:19> col:2 referenced addr_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x558d6121bea8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558d6121b8d0 <col:19> 'int' Int: 16
| |     `-IntegerLiteral 0x558d6121b8b0 <col:19> 'int' 16
| |-EnumConstantDecl 0x558d6121b980 <line:653:2, col:21> col:2 referenced user_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x558d6121bec0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558d6121b960 <col:21> 'int' Int: 16
| |     `-IntegerLiteral 0x558d6121b940 <col:21> 'int' 16
| |-EnumConstantDecl 0x558d6121ba10 <line:654:2, col:19> col:2 referenced user_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x558d6121bed8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558d6121b9f0 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x558d6121b9d0 <col:19> 'int' 32
| |-EnumConstantDecl 0x558d6121baa0 <line:655:2, col:19> col:2 ADDR_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x558d6121bef0 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558d6121ba80 <col:19> 'int' Int: 16
| |     `-DeclRefExpr 0x558d6121ba60 <col:19> 'int' EnumConstant 0x558d6121b8f0 'addr_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x558d6121bb30 <line:656:2, col:19> col:2 referenced USER_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x558d6121bf08 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558d6121bb10 <col:19> 'int' Int: 32
| |     `-DeclRefExpr 0x558d6121baf0 <col:19> 'int' EnumConstant 0x558d6121ba10 'user_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x558d6121bc00 <line:657:2, col:40> col:2 USER_ANNO_U16_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x558d6121bf20 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558d6121bbe0 <col:23, col:40> 'int' Int: 16
| |     `-BinaryOperator 0x558d6121bbc0 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x558d6121bb80 <col:23> 'int' EnumConstant 0x558d6121bb30 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x558d6121bba0 <col:40> 'int' 2
| |-EnumConstantDecl 0x558d6121bcd0 <line:658:2, col:40> col:2 USER_ANNO_U32_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x558d6121bf38 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558d6121bcb0 <col:23, col:40> 'int' Int: 8
| |     `-BinaryOperator 0x558d6121bc90 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x558d6121bc50 <col:23> 'int' EnumConstant 0x558d6121bb30 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x558d6121bc70 <col:40> 'int' 4
| `-EnumConstantDecl 0x558d6121bda0 <line:659:2, col:40> col:2 USER_ANNO_U64_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|   `-ImplicitCastExpr 0x558d6121bf50 <col:23, col:40> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x558d6121bd80 <col:23, col:40> 'int' Int: 4
|       `-BinaryOperator 0x558d6121bd60 <col:23, col:40> 'int' '/'
|         |-DeclRefExpr 0x558d6121bd20 <col:23> 'int' EnumConstant 0x558d6121bb30 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|         `-IntegerLiteral 0x558d6121bd40 <col:40> 'int' 8
|-CXXMethodDecl 0x558d6121bf90 <line:661:5, col:79> col:33 buffer_data 'const unsigned char *() const' inline
| `-DeprecatedAttr 0x558d6121c030 <col:68> "" ""
|-CXXMethodDecl 0x558d6121c0c8 <line:662:5, col:56> col:18 addr_anno 'void *()' inline
| `-DeprecatedAttr 0x558d6121c168 <col:45> "" ""
|-CXXMethodDecl 0x558d6121c200 <line:663:5, col:68> col:24 addr_anno 'const void *() const' inline
| `-DeprecatedAttr 0x558d6121c2a0 <col:57> "" ""
|-CXXMethodDecl 0x558d6121c338 <line:664:5, col:56> col:18 user_anno 'void *()' inline
| `-DeprecatedAttr 0x558d6121c3d8 <col:45> "" ""
|-CXXMethodDecl 0x558d6121c470 <line:665:5, col:68> col:24 user_anno 'const void *() const' inline
| `-DeprecatedAttr 0x558d6121c510 <col:57> "" ""
|-CXXMethodDecl 0x558d6121c5a0 <line:666:5, col:62> col:21 user_anno_u8 'uint8_t *()' inline
| `-DeprecatedAttr 0x558d6121c640 <col:51> "" ""
|-CXXMethodDecl 0x558d6121c6d0 <line:667:5, col:74> col:27 user_anno_u8 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x558d6121c770 <col:63> "" ""
|-CXXMethodDecl 0x558d6121c800 <line:668:5, col:64> col:22 user_anno_u32 'uint32_t *()' inline
| `-DeprecatedAttr 0x558d6121c8a0 <col:53> "" ""
|-CXXMethodDecl 0x558d6121c930 <line:669:5, col:76> col:28 user_anno_u32 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x558d6121c9d0 <col:65> "" ""
|-CXXMethodDecl 0x558d6121cae8 <line:670:5, col:72> col:20 user_anno_u8 'uint8_t (int) const' inline
| |-ParmVarDecl 0x558d6121ca58 <col:33, col:37> col:37 i 'int'
| `-DeprecatedAttr 0x558d6121cb90 <col:61> "" ""
|-CXXMethodDecl 0x558d6121cd28 <line:671:5, col:78> col:17 set_user_anno_u8 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x558d6121cc18 <col:34, col:38> col:38 i 'int'
| |-ParmVarDecl 0x558d6121cc90 <col:41, col:49> col:49 v 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x558d6121cdd8 <col:67> "" ""
|-CXXMethodDecl 0x558d6121cef0 <line:672:5, col:74> col:21 user_anno_u16 'uint16_t (int) const' inline
| |-ParmVarDecl 0x558d6121ce60 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x558d6121cf98 <col:63> "" ""
|-CXXMethodDecl 0x558d6121d130 <line:673:5, col:80> col:17 set_user_anno_u16 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x558d6121d020 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x558d6121d098 <col:42, col:51> col:51 v 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x558d6121d1e0 <col:69> "" ""
|-CXXMethodDecl 0x558d6121d2f8 <line:674:5, col:74> col:21 user_anno_u32 'uint32_t (int) const' inline
| |-ParmVarDecl 0x558d6121d268 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x558d6121d3a0 <col:63> "" ""
|-CXXMethodDecl 0x558d6121fa78 <line:675:5, col:80> col:17 set_user_anno_u32 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x558d6121f968 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x558d6121f9e0 <col:42, col:51> col:51 v 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x558d6121fb28 <col:69> "" ""
|-CXXMethodDecl 0x558d6121fc40 <line:676:5, col:73> col:20 user_anno_s32 'int32_t (int) const' inline
| |-ParmVarDecl 0x558d6121fbb0 <col:34, col:38> col:38 i 'int'
| `-DeprecatedAttr 0x558d6121fce8 <col:62> "" ""
|-CXXMethodDecl 0x558d6121fe80 <line:677:5, col:79> col:17 set_user_anno_s32 'void (int, int32_t)' inline
| |-ParmVarDecl 0x558d6121fd70 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x558d6121fde8 <col:42, col:50> col:50 v 'int32_t':'int'
| `-DeprecatedAttr 0x558d6121ff30 <col:68> "" ""
|-CXXMethodDecl 0x558d61220048 <line:679:5, col:74> col:21 user_anno_u64 'uint64_t (int) const' inline
| |-ParmVarDecl 0x558d6121ffb8 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x558d612200f0 <col:63> "" ""
|-CXXMethodDecl 0x558d61220288 <line:680:5, col:80> col:17 set_user_anno_u64 'void (int, uint64_t)' inline
| |-ParmVarDecl 0x558d61220178 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x558d612201f0 <col:42, col:51> col:51 v 'uint64_t':'unsigned long'
| `-DeprecatedAttr 0x558d61220338 <col:69> "" ""
|-CXXMethodDecl 0x558d612203c8 <line:682:5, col:75> col:27 all_user_anno 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x558d61220468 <col:64> "" ""
|-CXXMethodDecl 0x558d612204f8 <line:683:5, col:63> col:21 all_user_anno 'uint8_t *()' inline
| `-DeprecatedAttr 0x558d61220598 <col:52> "" ""
|-CXXMethodDecl 0x558d61220628 <line:684:5, col:78> col:28 all_user_anno_u 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x558d612206c8 <col:67> "" ""
|-CXXMethodDecl 0x558d61220758 <line:685:5, col:66> col:22 all_user_anno_u 'uint32_t *()' inline
| `-DeprecatedAttr 0x558d612207f8 <col:55> "" ""
|-CXXMethodDecl 0x558d61220910 <line:686:5, col:69> col:20 user_anno_c 'uint8_t (int) const' inline
| |-ParmVarDecl 0x558d61220880 <col:32> col:35 'int'
| `-DeprecatedAttr 0x558d612209b8 <col:58> "" ""
|-CXXMethodDecl 0x558d61220b50 <line:687:5, col:73> col:17 set_user_anno_c 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x558d61220a40 <col:33> col:36 'int'
| |-ParmVarDecl 0x558d61220ab8 <col:38> col:45 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x558d61220c00 <col:62> "" ""
|-CXXMethodDecl 0x558d61220d18 <line:688:5, col:69> col:20 user_anno_s 'int16_t (int) const' inline
| |-ParmVarDecl 0x558d61220c88 <col:32> col:35 'int'
| `-DeprecatedAttr 0x558d61220dc0 <col:58> "" ""
|-CXXMethodDecl 0x558d61220f58 <line:689:5, col:73> col:17 set_user_anno_s 'void (int, int16_t)' inline
| |-ParmVarDecl 0x558d61220e48 <col:33> col:36 'int'
| |-ParmVarDecl 0x558d61220ec0 <col:38> col:45 'int16_t':'short'
| `-DeprecatedAttr 0x558d61221008 <col:62> "" ""
|-CXXMethodDecl 0x558d61221120 <line:690:5, col:71> col:21 user_anno_us 'uint16_t (int) const' inline
| |-ParmVarDecl 0x558d61221090 <col:34> col:37 'int'
| `-DeprecatedAttr 0x558d612211c8 <col:60> "" ""
|-CXXMethodDecl 0x558d61221360 <line:691:5, col:75> col:17 set_user_anno_us 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x558d61221250 <col:34> col:37 'int'
| |-ParmVarDecl 0x558d612212c8 <col:39> col:47 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x558d61221410 <col:64> "" ""
|-CXXMethodDecl 0x558d61221528 <line:692:5, col:69> col:20 user_anno_i 'int32_t (int) const' inline
| |-ParmVarDecl 0x558d61221498 <col:32> col:35 'int'
| `-DeprecatedAttr 0x558d612215d0 <col:58> "" ""
|-CXXMethodDecl 0x558d61221768 <line:693:5, col:73> col:17 set_user_anno_i 'void (int, int32_t)' inline
| |-ParmVarDecl 0x558d61221658 <col:33> col:36 'int'
| |-ParmVarDecl 0x558d612216d0 <col:38> col:45 'int32_t':'int'
| `-DeprecatedAttr 0x558d61221818 <col:62> "" ""
|-CXXMethodDecl 0x558d61221930 <line:694:5, col:70> col:21 user_anno_u 'uint32_t (int) const' inline
| |-ParmVarDecl 0x558d612218a0 <col:33> col:36 'int'
| `-DeprecatedAttr 0x558d612219d8 <col:59> "" ""
|-CXXMethodDecl 0x558d61221b70 <line:695:5, col:74> col:17 set_user_anno_u 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x558d61221a60 <col:33> col:36 'int'
| |-ParmVarDecl 0x558d61221ad8 <col:38> col:46 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x558d61221c20 <col:63> "" ""
|-AccessSpecDecl 0x558d61221c90 <line:698:3, col:10> col:3 private
|-CXXRecordDecl 0x558d61221cb8 prev 0x558d61216ec0 <line:702:5, line:711:5> line:702:11 referenced union Anno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x558d61221db0 <col:5, col:11> col:11 implicit union Anno
| |-FieldDecl 0x558d61221ea0 <line:703:2, col:18> col:7 referenced c 'char [48]'
| |-FieldDecl 0x558d61221fc8 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
| |-FieldDecl 0x558d61222148 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
| |-FieldDecl 0x558d612222c8 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
| |-FieldDecl 0x558d61222448 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
| |-CXXConstructorDecl 0x558d61233278 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x558d61233ae8 <col:11>
| |-CXXDestructorDecl 0x558d61233350 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
| |-CXXConstructorDecl 0x558d61233488 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x558d61233488
| | `-ParmVarDecl 0x558d61233598 <col:11> col:11 'const Packet::Anno &'
| |-CXXConstructorDecl 0x558d61233638 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x558d61233638
| | `-ParmVarDecl 0x558d61233748 <col:11> col:11 'Packet::Anno &&'
| |-CXXMethodDecl 0x558d61236508 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| | |-ParmVarDecl 0x558d61236618 <col:11> col:11 'const Packet::Anno &'
| | `-CompoundStmt 0x558d61236898 <col:11>
| |   `-ReturnStmt 0x558d61236888 <col:11>
| |     `-UnaryOperator 0x558d61236870 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x558d61236860 <col:11> 'Packet::Anno *' this
| `-CXXMethodDecl 0x558d61236688 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x558d61236688
|   `-ParmVarDecl 0x558d61236798 <col:11> col:11 'Packet::Anno &&'
|-CXXRecordDecl 0x558d612224b0 <line:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x558d612225c8 <col:5, col:12> col:12 implicit struct AllAnno
| |-FieldDecl 0x558d61222668 <line:717:2, col:7> col:7 cb 'Packet::Anno'
| |-FieldDecl 0x558d612226d0 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
| |-FieldDecl 0x558d61222738 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
| |-FieldDecl 0x558d612227a0 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
| |-FieldDecl 0x558d61222800 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
| |-FieldDecl 0x558d612228c0 <line:722:2, col:34> col:7 timestamp 'char [8]'
| |-FieldDecl 0x558d61222920 <line:723:2, col:10> col:10 referenced next 'Packet *'
| |-FieldDecl 0x558d61222980 <line:724:2, col:10> col:10 referenced prev 'Packet *'
| |-CXXConstructorDecl 0x558d61233188 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| | |-CXXCtorInitializer Field 0x558d61222668 'cb' 'Packet::Anno'
| | | `-CXXConstructExpr 0x558d61233af8 <col:12> 'Packet::Anno' 'void () noexcept'
| | `-CompoundStmt 0x558d61233b50 <col:12>
| |-CXXConstructorDecl 0x558d612337b8 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x558d612337b8
| | `-ParmVarDecl 0x558d612338c8 <col:12> col:12 'const Packet::AllAnno &'
| |-CXXConstructorDecl 0x558d61233968 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x558d61233968
| | `-ParmVarDecl 0x558d61233a78 <col:12> col:12 'Packet::AllAnno &&'
| `-CXXDestructorDecl 0x558d61235bf0 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial
|-FieldDecl 0x558d612229f8 <line:731:5, col:21> col:21 referenced _use_count 'atomic_uint32_t'
|-FieldDecl 0x558d61222a58 <line:732:5, col:13> col:13 referenced _data_packet 'Packet *'
|-FieldDecl 0x558d61222ac0 <line:734:5, col:20> col:20 referenced _head 'unsigned char *'
|-FieldDecl 0x558d61222b28 <line:735:5, col:20> col:20 referenced _data 'unsigned char *'
|-FieldDecl 0x558d61222b90 <line:736:5, col:20> col:20 referenced _tail 'unsigned char *'
|-FieldDecl 0x558d61222bf8 <line:737:5, col:20> col:20 referenced _end 'unsigned char *'
|-FieldDecl 0x558d61222c58 <line:741:5, col:13> col:13 referenced _aa 'Packet::AllAnno'
|-FieldDecl 0x558d61222cb8 <line:746:5, col:28> col:28 referenced _destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-FieldDecl 0x558d61222d20 <line:747:5, col:11> col:11 referenced _destructor_argument 'void *'
|-CXXConstructorDecl 0x558d61222da8 <line:751:5, line:755:5> line:751:12 used Packet 'void ()' inline
| |-CXXCtorInitializer Field 0x558d612229f8 '_use_count' 'atomic_uint32_t'
| | `-CXXConstructExpr 0x558d61233120 <col:12> 'atomic_uint32_t' 'void () noexcept'
| |-CXXCtorInitializer Field 0x558d61222c58 '_aa' 'Packet::AllAnno'
| | `-CXXConstructExpr 0x558d61233b60 <col:12> 'Packet::AllAnno' 'void () noexcept'
| `-CompoundStmt 0x558d61233bc0 <col:21, line:755:5>
|-CXXConstructorDecl 0x558d61222f48 <line:756:5, col:27> col:5 Packet 'void (const Packet &)'
| `-ParmVarDecl 0x558d61222e88 <col:12, col:26> col:26 x 'const Packet &'
|-CXXDestructorDecl 0x558d61223040 <line:757:5, col:13> col:5 used ~Packet 'void () noexcept'
|-CXXMethodDecl 0x558d61223228 <line:758:5, col:38> col:13 operator= 'Packet &(const Packet &)'
| `-ParmVarDecl 0x558d61223130 <col:23, col:37> col:37 x 'const Packet &'
|-CXXMethodDecl 0x558d612234f8 <line:761:5, col:74> col:10 alloc_data 'bool (uint32_t, uint32_t, uint32_t)'
| |-ParmVarDecl 0x558d612232e0 <col:21, col:30> col:30 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x558d61223358 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x558d612233d0 <col:57, col:66> col:66 tailroom 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558d61223718 <line:768:5, col:95> col:17 shift_header_annotations 'void (const unsigned char *, int32_t)' inline
| |-ParmVarDecl 0x558d612235c8 <col:42, col:63> col:63 old_head 'const unsigned char *'
| `-ParmVarDecl 0x558d61223640 <col:73, col:81> col:81 extra_headroom 'int32_t':'int'
|-CXXMethodDecl 0x558d6122bcf8 <line:769:5, col:109> col:21 expensive_uniqueify 'WritablePacket *(int32_t, int32_t, bool)'
| |-ParmVarDecl 0x558d612237d8 <col:41, col:49> col:49 extra_headroom 'int32_t':'int'
| |-ParmVarDecl 0x558d61223850 <col:65, col:73> col:73 extra_tailroom 'int32_t':'int'
| `-ParmVarDecl 0x558d612238c8 <col:89, col:94> col:94 free_on_failure 'bool'
|-CXXMethodDecl 0x558d6122be50 <line:770:5, col:51> col:21 used expensive_push 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x558d6122bdc0 <col:36, col:45> col:45 nbytes 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558d6122bf98 <line:771:5, col:50> col:21 used expensive_put 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x558d6122bf08 <col:35, col:44> col:44 nbytes 'uint32_t':'unsigned int'
`-FriendDecl 0x558d6122c090 <line:773:5, col:18> col:12 'class WritablePacket':'WritablePacket'

Layout: <CGRecordLayout
  LLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  NonVirtualBaseLLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558d613264b0 <../elements/standard/simplequeue.hh:65:1, line:114:1> line:65:7 referenced class SimpleQueue definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-public 'Element'
|-public 'Storage'
|-CXXRecordDecl 0x558d61326648 <col:1, col:7> col:7 implicit referenced class SimpleQueue
|-AccessSpecDecl 0x558d613266d8 <col:54, col:60> col:54 public
|-CXXConstructorDecl 0x558d61326760 <line:67:5, col:17> col:5 SimpleQueue 'void ()'
|-CXXMethodDecl 0x558d61326860 <line:69:5, col:40> col:9 drops 'int () const'
| `-CompoundStmt 0x558d6132a0d8 <col:23, col:40>
|   `-ReturnStmt 0x558d6132a0c8 <col:25, col:32>
|     `-ImplicitCastExpr 0x558d6132a0b0 <col:32> 'int' <LValueToRValue>
|       `-MemberExpr 0x558d6132a080 <col:32> 'const volatile int' lvalue ->_drops 0x558d61328d18
|         `-CXXThisExpr 0x558d6132a070 <col:32> 'const SimpleQueue *' implicit this
|-CXXMethodDecl 0x558d61326928 <line:70:5, col:62> col:9 highwater_length 'int () const'
| `-CompoundStmt 0x558d6132a158 <col:34, col:62>
|   `-ReturnStmt 0x558d6132a148 <col:36, col:43>
|     `-ImplicitCastExpr 0x558d6132a130 <col:43> 'int' <LValueToRValue>
|       `-MemberExpr 0x558d6132a100 <col:43> 'const int' lvalue ->_highwater_length 0x558d61328d80
|         `-CXXThisExpr 0x558d6132a0f0 <col:43> 'const SimpleQueue *' implicit this
|-CXXMethodDecl 0x558d61326a98 <line:72:5, col:28> col:17 enq 'bool (Packet *)' inline
| `-ParmVarDecl 0x558d613269d8 <col:21, col:27> col:28 'Packet *'
|-CXXMethodDecl 0x558d61326be0 <line:73:5, col:33> col:17 lifo_enq 'void (Packet *)' inline
| `-ParmVarDecl 0x558d61326b50 <col:26, col:32> col:33 'Packet *'
|-CXXMethodDecl 0x558d61326ca8 <line:74:5, col:24> col:20 deq 'Packet *()' inline
|-CXXMethodDecl 0x558d61326df0 <line:77:5, col:49> col:13 packet 'Packet *(int) const'
| |-ParmVarDecl 0x558d61326d60 <col:20, col:24> col:24 used i 'int'
| `-CompoundStmt 0x558d6132a248 <col:33, col:49>
|   `-ReturnStmt 0x558d6132a238 <col:35, col:46>
|     `-ImplicitCastExpr 0x558d6132a220 <col:42, col:46> 'Packet *' <LValueToRValue>
|       `-ArraySubscriptExpr 0x558d6132a200 <col:42, col:46> 'Packet *volatile' lvalue
|         |-ImplicitCastExpr 0x558d6132a1d0 <col:42> 'Packet *volatile *' <LValueToRValue>
|         | `-MemberExpr 0x558d6132a180 <col:42> 'Packet *volatile *const' lvalue ->_q 0x558d61328cb0
|         |   `-CXXThisExpr 0x558d6132a170 <col:42> 'const SimpleQueue *' implicit this
|         `-ImplicitCastExpr 0x558d6132a1e8 <col:45> 'int' <LValueToRValue>
|           `-DeclRefExpr 0x558d6132a1b0 <col:45> 'int' lvalue ParmVar 0x558d61326d60 'i' 'int'
|-CXXMethodDecl 0x558d61326eb8 <line:78:5, col:16> col:10 reset 'void ()'
|-FunctionTemplateDecl 0x558d61327198 <line:80:5, col:52> col:40 yank1
| |-TemplateTypeParmDecl 0x558d61326f58 <col:15, col:24> col:24 referenced typename depth 0 index 0 Filter
| `-CXXMethodDecl 0x558d613270f8 <col:32, col:52> col:40 yank1 'Packet *(Filter)'
|   `-ParmVarDecl 0x558d61327008 <col:46> col:52 'Filter'
|-FunctionTemplateDecl 0x558d61327408 <line:81:5, col:57> col:40 yank1_peek
| |-TemplateTypeParmDecl 0x558d613271f8 <col:15, col:24> col:24 referenced typename depth 0 index 0 Filter
| `-CXXMethodDecl 0x558d61327368 <col:32, col:57> col:40 yank1_peek 'Packet *(Filter)'
|   `-ParmVarDecl 0x558d613272a8 <col:51> col:57 'Filter'
|-FunctionTemplateDecl 0x558d61327950 <line:82:5, col:67> col:36 yank
| |-TemplateTypeParmDecl 0x558d61327468 <col:15, col:24> col:24 referenced typename depth 0 index 0 Filter
| `-CXXMethodDecl 0x558d613278b0 <col:32, col:67> col:36 yank 'int (Filter, Vector<Packet *> &)'
|   |-ParmVarDecl 0x558d61327518 <col:41> col:47 'Filter'
|   `-ParmVarDecl 0x558d61327790 <col:49, col:66> col:67 'Vector<Packet *> &'
|-CXXMethodDecl 0x558d613279e0 <line:84:5, col:60> col:17 class_name 'const char *() const'
| |-Overrides: [ 0x558d6124ad58 Element::class_name 'const char *() const' ]
| `-CompoundStmt 0x558d6132a2b0 <col:36, col:60>
|   `-ReturnStmt 0x558d6132a2a0 <col:38, col:45>
|     `-ImplicitCastExpr 0x558d6132a288 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x558d6132a260 <col:45> 'const char [12]' lvalue "SimpleQueue"
|-CXXMethodDecl 0x558d61327aa8 <line:85:5, col:58> col:17 port_count 'const char *() const'
| |-Overrides: [ 0x558d6124ae20 Element::port_count 'const char *() const' ]
| `-CompoundStmt 0x558d6132a310 <col:36, col:58>
|   `-ReturnStmt 0x558d6132a300 <col:38, col:45>
|     `-ImplicitCastExpr 0x558d6132a2e8 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-DeclRefExpr 0x558d6132a2c8 <col:45> 'const char []' lvalue Var 0x558d6124b158 'PORTS_1_1X2' 'const char []'
|-CXXMethodDecl 0x558d61327b70 <line:86:5, col:53> col:17 processing 'const char *() const'
| |-Overrides: [ 0x558d6124b1e8 Element::processing 'const char *() const' ]
| `-CompoundStmt 0x558d6132a3f0 <col:36, col:53>
|   `-ReturnStmt 0x558d6132a3e0 <col:38, col:45>
|     `-ImplicitCastExpr 0x558d6132a3c8 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x558d6132a3a8 <col:45> 'const char [5]' lvalue "h/lh"
|-CXXMethodDecl 0x558d61327cc0 <line:87:5, col:27> col:11 cast 'void *(const char *)'
| |-Overrides: [ 0x558d6124ba10 Element::cast 'void *(const char *)' ]
| `-ParmVarDecl 0x558d61327c28 <col:16, col:26> col:27 'const char *'
|-CXXMethodDecl 0x558d61327fa0 <line:89:5, col:49> col:9 configure 'int (Vector<String> &, ErrorHandler *)'
| |-Overrides: [ 0x558d6124c5f0 Element::configure 'int (Vector<String> &, ErrorHandler *)' ]
| |-ParmVarDecl 0x558d61327e50 <col:19, col:33> col:34 'Vector<String> &'
| `-ParmVarDecl 0x558d61327ec8 <col:36, col:48> col:49 'ErrorHandler *'
|-CXXMethodDecl 0x558d613280f8 <line:90:5, col:33> col:9 initialize 'int (ErrorHandler *)'
| |-Overrides: [ 0x558d6124c840 Element::initialize 'int (ErrorHandler *)' ]
| `-ParmVarDecl 0x558d61328060 <col:20, col:32> col:33 'ErrorHandler *'
|-CXXMethodDecl 0x558d61328240 <line:91:5, col:30> col:10 cleanup 'void (Element::CleanupStage)'
| |-Overrides: [ 0x558d6124d058 Element::cleanup 'void (Element::CleanupStage)' ]
| `-ParmVarDecl 0x558d613281b0 <col:18> col:30 'Element::CleanupStage'
|-CXXMethodDecl 0x558d61328308 <line:92:5, col:54> col:10 can_live_reconfigure 'bool () const'
| |-Overrides: [ 0x558d6124f040 Element::can_live_reconfigure 'bool () const' ]
| `-CompoundStmt 0x558d6132a428 <col:39, col:54>
|   `-ReturnStmt 0x558d6132a418 <col:41, col:48>
|     `-CXXBoolLiteralExpr 0x558d6132a408 <col:48> 'bool' true
|-CXXMethodDecl 0x558d613285e0 <line:93:5, col:56> col:9 live_reconfigure 'int (Vector<String> &, ErrorHandler *)'
| |-Overrides: [ 0x558d6124f310 Element::live_reconfigure 'int (Vector<String> &, ErrorHandler *)' ]
| |-ParmVarDecl 0x558d61328490 <col:26, col:40> col:41 'Vector<String> &'
| `-ParmVarDecl 0x558d61328508 <col:43, col:55> col:56 'ErrorHandler *'
|-CXXMethodDecl 0x558d613287b0 <line:94:5, col:44> col:10 take_state 'void (Element *, ErrorHandler *)'
| |-Overrides: [ 0x558d6124ca48 Element::take_state 'void (Element *, ErrorHandler *)' ]
| |-ParmVarDecl 0x558d613286a0 <col:21, col:28> col:29 'Element *'
| `-ParmVarDecl 0x558d61328718 <col:31, col:43> col:44 'ErrorHandler *'
|-CXXMethodDecl 0x558d61328880 <line:95:5, col:23> col:10 add_handlers 'void ()'
| `-Overrides: [ 0x558d6124c6c0 Element::add_handlers 'void ()' ]
|-CXXMethodDecl 0x558d61328a48 <line:97:5, col:32> col:10 push 'void (int, Packet *)'
| |-Overrides: [ 0x558d61249bc8 Element::push 'void (int, Packet *)' ]
| |-ParmVarDecl 0x558d61328938 <col:15, col:19> col:19 port 'int'
| `-ParmVarDecl 0x558d613289b0 <col:25, col:31> col:32 'Packet *'
|-CXXMethodDecl 0x558d61328ba0 <line:98:5, col:26> col:13 pull 'Packet *(int)'
| |-Overrides: [ 0x558d61249d58 Element::pull 'Packet *(int)' ]
| `-ParmVarDecl 0x558d61328b10 <col:18, col:22> col:22 port 'int'
|-AccessSpecDecl 0x558d61328c48 <line:100:3, col:12> col:3 protected
|-FieldDecl 0x558d61328cb0 <line:102:5, col:24> col:24 referenced _q 'Packet *volatile *'
|-FieldDecl 0x558d61328d18 <line:103:5, col:18> col:18 referenced _drops 'volatile int'
|-FieldDecl 0x558d61328d80 <line:104:5, col:9> col:9 referenced _highwater_length 'int'
|-FriendDecl 0x558d61328ee8 <line:106:5, col:18> col:12 'class MixedQueue':'MixedQueue'
|-FriendDecl 0x558d61329048 <line:107:5, col:18> col:12 'class TokenQueue':'TokenQueue'
|-FriendDecl 0x558d613291a8 <line:108:5, col:18> col:12 'class InOrderQueue':'InOrderQueue'
|-FriendDecl 0x558d61329308 <line:109:5, col:18> col:12 'class ECNQueue':'ECNQueue'
|-CXXMethodDecl 0x558d61329470 <line:111:5, col:47> col:19 read_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x558d61329358 <col:32, col:39> col:40 'Element *'
| `-ParmVarDecl 0x558d613293d8 <col:42, col:46> col:47 'void *'
|-CXXMethodDecl 0x558d61329750 <line:112:5, col:75> col:16 write_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x558d61329530 <col:30, col:42> col:43 'const String &'
| |-ParmVarDecl 0x558d613295a8 <col:45, col:52> col:53 'Element *'
| |-ParmVarDecl 0x558d61329628 <col:55, col:59> col:60 'void *'
| `-ParmVarDecl 0x558d613296a0 <col:62, col:74> col:75 'ErrorHandler *'
|-CXXConstructorDecl 0x558d61329838 <line:65:7> col:7 implicit SimpleQueue 'void (const SimpleQueue &)' inline default_delete noexcept-unevaluated 0x558d61329838
| `-ParmVarDecl 0x558d61329948 <col:7> col:7 'const SimpleQueue &'
|-CXXConstructorDecl 0x558d613299e8 <col:7> col:7 implicit SimpleQueue 'void (SimpleQueue &&)' inline default_delete noexcept-unevaluated 0x558d613299e8
| `-ParmVarDecl 0x558d61329af8 <col:7> col:7 'SimpleQueue &&'
|-CXXMethodDecl 0x558d61329b98 <col:7> col:7 implicit operator= 'SimpleQueue &(const SimpleQueue &)' inline default_delete noexcept-unevaluated 0x558d61329b98
| `-ParmVarDecl 0x558d61329ca8 <col:7> col:7 'const SimpleQueue &'
|-CXXMethodDecl 0x558d61329d18 <col:7> col:7 implicit operator= 'SimpleQueue &(SimpleQueue &&)' inline default_delete noexcept-unevaluated 0x558d61329d18
| `-ParmVarDecl 0x558d61329e28 <col:7> col:7 'SimpleQueue &&'
`-CXXDestructorDecl 0x558d61329eb0 <col:7> col:7 implicit used ~SimpleQueue 'void () noexcept' inline default
  |-Overrides: [ 0x558d612498f8 Element::~Element 'void () noexcept' ]
  `-CompoundStmt 0x558d61340080 <col:7>

Layout: <CGRecordLayout
  LLVMType:%class.SimpleQueue = type { %class.Element.base, %class.Storage, %class.Packet**, i32, i32 }
  NonVirtualBaseLLVMType:%class.SimpleQueue = type { %class.Element.base, %class.Storage, %class.Packet**, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | union NotifierSignal::vmvalue
         0 |   class atomic_uint32_t * v1
         0 |   struct NotifierSignal::vmpair * vm
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class NotifierSignal
         0 |   union NotifierSignal::vmvalue _v
         0 |     class atomic_uint32_t * v1
         0 |     struct NotifierSignal::vmpair * vm
         8 |   uint32_t _mask
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping AST Record Layout
         0 | class Notifier
         0 |   (Notifier vtable pointer)
         8 |   class NotifierSignal _signal
         8 |     union NotifierSignal::vmvalue _v
         8 |       class atomic_uint32_t * v1
         8 |       struct NotifierSignal::vmpair * vm
        16 |     uint32_t _mask
        24 |   enum Notifier::SearchOp _search_op
           | [sizeof=32, dsize=28, align=8,
           |  nvsize=28, nvalign=8]

*** Dumping AST Record Layout
         0 | class ActiveNotifier
         0 |   class Notifier (primary base)
         0 |     (Notifier vtable pointer)
         8 |     class NotifierSignal _signal
         8 |       union NotifierSignal::vmvalue _v
         8 |         class atomic_uint32_t * v1
         8 |         struct NotifierSignal::vmpair * vm
        16 |       uint32_t _mask
        24 |     enum Notifier::SearchOp _search_op
        32 |   class Task * _listener1
        40 |   ActiveNotifier::task_or_signal_t * _listeners
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | class NotifierQueue
         0 |   class SimpleQueue (primary base)
         0 |     class Element (primary base)
         0 |       (Element vtable pointer)
         8 |       class Element::Port *[2] _ports
        24 |       class Element::Port [4] _inline_ports
        88 |       int [2] _nports
        96 |       class Router * _router
       104 |       int _eindex
       108 |     class Storage (base)
       108 |       Storage::index_type _capacity
       112 |       volatile Storage::index_type _head
       116 |       volatile Storage::index_type _tail
       120 |     class Packet *volatile * _q
       128 |     volatile int _drops
       132 |     int _highwater_length
       136 |   int _sleepiness
       144 |   class ActiveNotifier _empty_note
       144 |     class Notifier (primary base)
       144 |       (Notifier vtable pointer)
       152 |       class NotifierSignal _signal
       152 |         union NotifierSignal::vmvalue _v
       152 |           class atomic_uint32_t * v1
       152 |           struct NotifierSignal::vmpair * vm
       160 |         uint32_t _mask
       168 |       enum Notifier::SearchOp _search_op
       176 |     class Task * _listener1
       184 |     ActiveNotifier::task_or_signal_t * _listeners
           | [sizeof=192, dsize=192, align=8,
           |  nvsize=192, nvalign=8]

*** Dumping AST Record Layout
         0 | struct NotifierSignal::vmpair
         0 |   class atomic_uint32_t * value
         8 |   uint32_t mask
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558d61302d18 <../dummy_inc/click/notifier.hh:50:5, line:53:5> line:50:12 referenced struct vmpair definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x558d61302e38 <col:5, col:12> col:12 implicit struct vmpair
|-FieldDecl 0x558d61302ed8 <line:51:2, col:19> col:19 referenced value 'atomic_uint32_t *'
|-FieldDecl 0x558d61302f38 <line:52:2, col:11> col:11 referenced mask 'uint32_t':'unsigned int'
`-CXXDestructorDecl 0x558d6130c388 <line:50:12> col:12 implicit ~vmpair 'void ()' inline default trivial noexcept-unevaluated 0x558d6130c388

Layout: <CGRecordLayout
  LLVMType:%"struct.NotifierSignal::vmpair" = type { %class.atomic_uint32_t*, i32 }
  NonVirtualBaseLLVMType:%"struct.NotifierSignal::vmpair" = type { %class.atomic_uint32_t*, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558d61302fa0 <../dummy_inc/click/notifier.hh:54:5, line:57:5> line:54:11 referenced union vmvalue definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x558d613030b8 <col:5, col:11> col:11 implicit union vmvalue
|-FieldDecl 0x558d61303158 <line:55:2, col:19> col:19 referenced v1 'atomic_uint32_t *'
|-FieldDecl 0x558d613031e8 <line:56:2, col:10> col:10 referenced vm 'NotifierSignal::vmpair *'
|-CXXConstructorDecl 0x558d6130af20 <line:54:11> col:11 implicit used vmvalue 'void () noexcept' inline default trivial
| `-CompoundStmt 0x558d6130b358 <col:11>
|-CXXConstructorDecl 0x558d6130b028 <col:11> col:11 implicit constexpr vmvalue 'void (const NotifierSignal::vmvalue &)' inline default trivial noexcept-unevaluated 0x558d6130b028
| `-ParmVarDecl 0x558d6130b138 <col:11> col:11 'const NotifierSignal::vmvalue &'
|-CXXConstructorDecl 0x558d6130b1d8 <col:11> col:11 implicit constexpr vmvalue 'void (NotifierSignal::vmvalue &&)' inline default trivial noexcept-unevaluated 0x558d6130b1d8
| `-ParmVarDecl 0x558d6130b2e8 <col:11> col:11 'NotifierSignal::vmvalue &&'
`-CXXDestructorDecl 0x558d6130c050 <col:11> col:11 implicit ~vmvalue 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"union.NotifierSignal::vmvalue" = type { %class.atomic_uint32_t* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558d61300c50 prev 0x558d612492f0 <../dummy_inc/click/notifier.hh:12:1, line:71:1> line:12:7 referenced class NotifierSignal definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x558d61300d48 <col:1, col:7> col:7 implicit referenced class NotifierSignal
|-AccessSpecDecl 0x558d61300dd8 <line:13:3, col:9> col:3 public
|-TypedefDecl 0x558d61300f08 <line:14:5, col:61> col:36 referenced unspecified_bool_type 'bool (NotifierSignal::*)() const'
| `-MemberPointerType 0x558d61300e80 'bool (NotifierSignal::*)() const'
|   |-RecordType 0x558d61249380 'NotifierSignal'
|   | `-CXXRecord 0x558d61300c50 'NotifierSignal'
|   `-ParenType 0x558d61300e20 'bool () const' sugar
|     `-FunctionProtoType 0x558d60d8fc20 'bool () const' const cdecl
|       `-BuiltinType 0x558d60ce62f0 'bool'
|-CXXConstructorDecl 0x558d61300f98 <line:16:5, col:27> col:12 NotifierSignal 'void ()' inline
|-CXXConstructorDecl 0x558d613011d8 <line:17:5, col:64> col:12 used NotifierSignal 'void (atomic_uint32_t *, uint32_t)' inline
| |-ParmVarDecl 0x558d61301050 <col:27, col:44> col:44 value 'atomic_uint32_t *'
| `-ParmVarDecl 0x558d613010c8 <col:51, col:60> col:60 mask 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x558d61301388 <line:18:5, col:50> col:12 used NotifierSignal 'void (const NotifierSignal &)' inline
| `-ParmVarDecl 0x558d613012c8 <col:27, col:49> col:49 x 'const NotifierSignal &'
|-CXXDestructorDecl 0x558d61301480 <line:19:5, col:28> col:12 used ~NotifierSignal 'void () noexcept' inline
|-CXXMethodDecl 0x558d613015a8 <line:21:5, col:46> col:34 idle_signal 'NotifierSignal ()' static inline
|-CXXMethodDecl 0x558d61301668 <line:22:5, col:46> col:34 busy_signal 'NotifierSignal ()' static inline
|-CXXMethodDecl 0x558d61301728 <line:23:5, col:53> col:34 overderived_signal 'NotifierSignal ()' static inline
|-CXXMethodDecl 0x558d613017e8 <line:24:5, col:55> col:34 used uninitialized_signal 'NotifierSignal ()' static inline
|-CXXMethodDecl 0x558d613018d8 <line:26:5, col:26> col:17 used active 'bool () const' inline
|-CXXConversionDecl 0x558d61301a48 <line:27:5, col:45> col:12 operator bool (NotifierSignal::*)() const 'NotifierSignal::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x558d61301bc8 <line:29:5, col:39> col:17 used set_active 'bool (bool)' inline
| `-ParmVarDecl 0x558d61301b08 <col:28, col:33> col:33 active 'bool'
|-CXXMethodDecl 0x558d61301c90 <line:31:5, col:24> col:17 idle 'bool () const' inline
|-CXXMethodDecl 0x558d61301d50 <line:32:5, col:24> col:17 busy 'bool () const' inline
|-CXXMethodDecl 0x558d61301e10 <line:33:5, col:31> col:17 overderived 'bool () const' inline
|-CXXMethodDecl 0x558d61301ed0 <line:34:5, col:31> col:17 used initialized 'bool () const' inline
|-FriendDecl 0x558d61302188 <line:36:5, col:76> col:17
| `-FunctionDecl 0x558d613020c8 parent 0x558d60ce6278 <col:5, col:76> col:17 used operator== 'bool (const NotifierSignal &, const NotifierSignal &)'
|   |-ParmVarDecl 0x558d61301f80 <col:28, col:50> col:50 a 'const NotifierSignal &'
|   `-ParmVarDecl 0x558d61301ff8 <col:53, col:75> col:75 b 'const NotifierSignal &'
|-FriendDecl 0x558d613023a8 <line:37:5, col:76> col:17
| `-FunctionDecl 0x558d613022e8 parent 0x558d60ce6278 <col:5, col:76> col:17 operator!= 'bool (const NotifierSignal &, const NotifierSignal &)'
|   |-ParmVarDecl 0x558d613021d8 <col:28, col:50> col:50 a 'const NotifierSignal &'
|   `-ParmVarDecl 0x558d61302250 <col:53, col:75> col:75 b 'const NotifierSignal &'
|-CXXMethodDecl 0x558d613024e8 <line:39:5, col:54> col:21 operator= 'NotifierSignal &(const NotifierSignal &)'
| `-ParmVarDecl 0x558d613023f8 <col:31, col:53> col:53 x 'const NotifierSignal &'
|-CXXMethodDecl 0x558d61302630 <line:40:5, col:55> col:21 used operator+= 'NotifierSignal &(const NotifierSignal &)'
| `-ParmVarDecl 0x558d613025a0 <col:32, col:54> col:54 x 'const NotifierSignal &'
|-FriendDecl 0x558d613028f8 <line:41:5, col:78> col:27
| `-FunctionDecl 0x558d61302838 parent 0x558d60ce6278 <col:5, col:78> col:27 operator+ 'NotifierSignal (NotifierSignal, const NotifierSignal &)'
|   |-ParmVarDecl 0x558d613026e8 <col:37, col:52> col:52 a 'NotifierSignal' destroyed
|   `-ParmVarDecl 0x558d61302760 <col:55, col:77> col:77 b 'const NotifierSignal &'
|-CXXMethodDecl 0x558d61302a08 <line:43:5, col:39> col:17 used swap 'void (NotifierSignal &)' inline
| `-ParmVarDecl 0x558d61302948 <col:22, col:38> col:38 x 'NotifierSignal &'
|-CXXMethodDecl 0x558d61302b88 <line:45:5, col:36> col:12 unparse 'String (Router *) const'
| `-ParmVarDecl 0x558d61302ac0 <col:20, col:28> col:28 router 'Router *'
|-CXXMethodDecl 0x558d61302c50 <line:47:5, col:35> col:17 static_initialize 'void ()' static
|-AccessSpecDecl 0x558d61302cf0 <line:49:3, col:10> col:3 private
|-CXXRecordDecl 0x558d61302d18 <line:50:5, line:53:5> line:50:12 referenced struct vmpair definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x558d61302e38 <col:5, col:12> col:12 implicit struct vmpair
| |-FieldDecl 0x558d61302ed8 <line:51:2, col:19> col:19 referenced value 'atomic_uint32_t *'
| |-FieldDecl 0x558d61302f38 <line:52:2, col:11> col:11 referenced mask 'uint32_t':'unsigned int'
| `-CXXDestructorDecl 0x558d6130c388 <line:50:12> col:12 implicit ~vmpair 'void ()' inline default trivial noexcept-unevaluated 0x558d6130c388
|-CXXRecordDecl 0x558d61302fa0 <line:54:5, line:57:5> line:54:11 referenced union vmvalue definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x558d613030b8 <col:5, col:11> col:11 implicit union vmvalue
| |-FieldDecl 0x558d61303158 <line:55:2, col:19> col:19 referenced v1 'atomic_uint32_t *'
| |-FieldDecl 0x558d613031e8 <line:56:2, col:10> col:10 referenced vm 'NotifierSignal::vmpair *'
| |-CXXConstructorDecl 0x558d6130af20 <line:54:11> col:11 implicit used vmvalue 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x558d6130b358 <col:11>
| |-CXXConstructorDecl 0x558d6130b028 <col:11> col:11 implicit constexpr vmvalue 'void (const NotifierSignal::vmvalue &)' inline default trivial noexcept-unevaluated 0x558d6130b028
| | `-ParmVarDecl 0x558d6130b138 <col:11> col:11 'const NotifierSignal::vmvalue &'
| |-CXXConstructorDecl 0x558d6130b1d8 <col:11> col:11 implicit constexpr vmvalue 'void (NotifierSignal::vmvalue &&)' inline default trivial noexcept-unevaluated 0x558d6130b1d8
| | `-ParmVarDecl 0x558d6130b2e8 <col:11> col:11 'NotifierSignal::vmvalue &&'
| `-CXXDestructorDecl 0x558d6130c050 <col:11> col:11 implicit ~vmvalue 'void () noexcept' inline default trivial
|-FieldDecl 0x558d61303260 <line:59:5, col:13> col:13 referenced _v 'NotifierSignal::vmvalue'
|-FieldDecl 0x558d613032c0 <line:60:5, col:14> col:14 referenced _mask 'uint32_t':'unsigned int'
|-EnumDecl 0x558d61303310 <line:62:5, line:65:5> line:62:5
| |-EnumConstantDecl 0x558d61303410 <line:63:2, col:14> col:2 referenced true_mask 'NotifierSignal::(anonymous enum at ../dummy_inc/click/notifier.hh:62:5)'
| | `-ImplicitCastExpr 0x558d61303610 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558d613033f0 <col:14> 'int' Int: 1
| |     `-IntegerLiteral 0x558d613033d0 <col:14> 'int' 1
| |-EnumConstantDecl 0x558d613034a0 <col:17, col:30> col:17 referenced false_mask 'NotifierSignal::(anonymous enum at ../dummy_inc/click/notifier.hh:62:5)'
| | `-ImplicitCastExpr 0x558d61303628 <col:30> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558d61303480 <col:30> 'int' Int: 2
| |     `-IntegerLiteral 0x558d61303460 <col:30> 'int' 2
| |-EnumConstantDecl 0x558d61303530 <col:33, col:52> col:33 referenced overderived_mask 'NotifierSignal::(anonymous enum at ../dummy_inc/click/notifier.hh:62:5)'
| | `-ImplicitCastExpr 0x558d61303640 <col:52> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558d61303510 <col:52> 'int' Int: 4
| |     `-IntegerLiteral 0x558d613034f0 <col:52> 'int' 4
| `-EnumConstantDecl 0x558d613035c0 <line:64:2, col:23> col:2 referenced uninitialized_mask 'NotifierSignal::(anonymous enum at ../dummy_inc/click/notifier.hh:62:5)'
|   `-ImplicitCastExpr 0x558d61303658 <col:23> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x558d613035a0 <col:23> 'int' Int: 8
|       `-IntegerLiteral 0x558d61303580 <col:23> 'int' 8
|-VarDecl 0x558d61303680 <line:66:5, col:28> col:28 used static_value 'atomic_uint32_t' static
|-CXXMethodDecl 0x558d61303788 <line:68:5, col:48> col:10 used hard_assign_vm 'void (const NotifierSignal &)'
| `-ParmVarDecl 0x558d613036f8 <col:25, col:47> col:47 x 'const NotifierSignal &'
|-CXXMethodDecl 0x558d61303950 <line:69:5, col:63> col:10 hard_derive_one 'void (atomic_uint32_t *, uint32_t)'
| |-ParmVarDecl 0x558d61303840 <col:26, col:43> col:43 value 'atomic_uint32_t *'
| `-ParmVarDecl 0x558d613038b8 <col:50, col:59> col:59 mask 'uint32_t':'unsigned int'
`-CXXMethodDecl 0x558d61303b88 <line:70:5, col:61> col:17 used hard_equals 'bool (const NotifierSignal::vmpair *, const NotifierSignal::vmpair *)' static
  |-ParmVarDecl 0x558d61303a38 <col:29, col:43> col:43 a 'const NotifierSignal::vmpair *'
  `-ParmVarDecl 0x558d61303ab0 <col:46, col:60> col:60 b 'const NotifierSignal::vmpair *'

Layout: <CGRecordLayout
  LLVMType:%class.NotifierSignal = type <{ %"union.NotifierSignal::vmvalue", i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.NotifierSignal.base = type <{ %"union.NotifierSignal::vmvalue", i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558d61303c38 <../dummy_inc/click/notifier.hh:73:1, line:130:1> line:73:7 referenced class Notifier definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-CXXRecordDecl 0x558d61303d58 <col:1, col:7> col:7 implicit referenced class Notifier
|-AccessSpecDecl 0x558d61303de8 <col:18, col:24> col:18 public
|-EnumDecl 0x558d61303e10 <line:75:5, col:76> col:10 referenced SearchOp
| |-EnumConstantDecl 0x558d61303f10 <col:21, col:35> col:21 referenced SEARCH_STOP 'Notifier::SearchOp'
| | `-ImplicitCastExpr 0x558d61304000 <col:35> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558d61303ef0 <col:35> 'int' Int: 0
| |     `-IntegerLiteral 0x558d61303ed0 <col:35> 'int' 0
| |-EnumConstantDecl 0x558d61303f60 <col:38> col:38 SEARCH_CONTINUE 'Notifier::SearchOp'
| `-EnumConstantDecl 0x558d61303fb0 <col:55> col:55 SEARCH_CONTINUE_WAKE 'Notifier::SearchOp'
|-TypedefDecl 0x558d61304248 <line:76:5, col:53> col:20 referenced callback_type 'void (*)(void *, Notifier *)'
| `-PointerType 0x558d613041e0 'void (*)(void *, Notifier *)'
|   `-ParenType 0x558d61304180 'void (void *, Notifier *)' sugar
|     `-FunctionProtoType 0x558d61304140 'void (void *, Notifier *)' cdecl
|       |-BuiltinType 0x558d60ce62d0 'void'
|       |-PointerType 0x558d60ce6ad0 'void *'
|       | `-BuiltinType 0x558d60ce62d0 'void'
|       `-PointerType 0x558d613040a0 'Notifier *'
|         `-RecordType 0x558d61303cd0 'Notifier'
|           `-CXXRecord 0x558d61303c38 'Notifier'
|-CXXConstructorDecl 0x558d61304388 <line:78:5, col:46> col:12 Notifier 'void (Notifier::SearchOp)' inline
| `-ParmVarDecl 0x558d613042b0 <col:21, col:35> col:30 op 'Notifier::SearchOp' cinit
|   `-DeclRefExpr 0x558d61309128 <col:35> 'Notifier::SearchOp' EnumConstant 0x558d61303f10 'SEARCH_STOP' 'Notifier::SearchOp'
|-CXXConstructorDecl 0x558d61304598 <line:79:5, col:76> col:12 Notifier 'void (const NotifierSignal &, Notifier::SearchOp)' inline
| |-ParmVarDecl 0x558d61304448 <col:21, col:43> col:43 signal 'const NotifierSignal &'
| `-ParmVarDecl 0x558d613044c0 <col:51, col:65> col:60 op 'Notifier::SearchOp' cinit
|   `-DeclRefExpr 0x558d61309148 <col:65> 'Notifier::SearchOp' EnumConstant 0x558d61303f10 'SEARCH_STOP' 'Notifier::SearchOp'
|-CXXDestructorDecl 0x558d61304698 <line:80:5, col:23> col:13 ~Notifier 'void () noexcept' virtual
|-CXXMethodDecl 0x558d613047c8 <line:83:5, line:85:5> line:83:17 initialized 'bool () const' inline
| `-CompoundStmt 0x558d61309208 <col:37, line:85:5>
|   `-ReturnStmt 0x558d613091f8 <line:84:2, col:29>
|     `-CXXMemberCallExpr 0x558d613091d8 <col:9, col:29> 'bool'
|       `-MemberExpr 0x558d613091a8 <col:9, col:17> '<bound member function type>' .initialized 0x558d61301ed0
|         `-MemberExpr 0x558d61309178 <col:9> 'const NotifierSignal' lvalue ->_signal 0x558d61308b48
|           `-CXXThisExpr 0x558d61309168 <col:9> 'const Notifier *' implicit this
|-CXXMethodDecl 0x558d613049d0 <line:87:5, col:52> col:9 initialize 'int (const char *, Router *)'
| |-ParmVarDecl 0x558d61304880 <col:20, col:32> col:32 name 'const char *'
| `-ParmVarDecl 0x558d613048f8 <col:38, col:46> col:46 router 'Router *'
|-CXXMethodDecl 0x558d61304ac8 <line:89:5, col:43> col:34 signal 'const NotifierSignal &() const' inline
|-CXXMethodDecl 0x558d61304bb8 <line:90:5, col:33> col:21 search_op 'Notifier::SearchOp () const' inline
|-CXXMethodDecl 0x558d61304c78 <line:92:5, col:26> col:17 active 'bool () const' inline
|-CXXMethodDecl 0x558d61304db8 <line:94:5, col:39> col:17 used set_active 'bool (bool)' inline
| `-ParmVarDecl 0x558d61304d28 <col:28, col:33> col:33 active 'bool'
|-CXXMethodDecl 0x558d61304e80 <line:95:5, col:22> col:17 wake 'void ()' inline
|-CXXMethodDecl 0x558d61305d50 <line:96:5, col:23> col:17 sleep 'void ()' inline
|-CXXMethodDecl 0x558d61305fc0 <line:98:5, col:71> col:17 used add_activate_callback 'int (Notifier::callback_type, void *)' virtual
| |-ParmVarDecl 0x558d61305e20 <col:39, col:53> col:53 f 'Notifier::callback_type':'void (*)(void *, Notifier *)'
| `-ParmVarDecl 0x558d61305ea0 <col:56, col:62> col:62 user_data 'void *'
|-CXXMethodDecl 0x558d61306218 <line:99:5, col:75> col:18 used remove_activate_callback 'void (Notifier::callback_type, void *)' virtual
| |-ParmVarDecl 0x558d61306080 <col:43, col:57> col:57 f 'Notifier::callback_type':'void (*)(void *, Notifier *)'
| `-ParmVarDecl 0x558d61306100 <col:60, col:66> col:66 user_data 'void *'
|-CXXMethodDecl 0x558d613063a0 <line:100:5, col:39> col:16 add_listener 'int (Task *)' inline
| `-ParmVarDecl 0x558d613062d8 <col:29, col:35> col:35 task 'Task *'
|-CXXMethodDecl 0x558d613064e8 <line:101:5, col:43> col:17 remove_listener 'void (Task *)' inline
| `-ParmVarDecl 0x558d61306458 <col:33, col:39> col:39 task 'Task *'
|-CXXMethodDecl 0x558d61306670 <line:102:5, col:59> col:16 add_dependent_signal 'int (NotifierSignal *)' inline
| `-ParmVarDecl 0x558d613065a0 <col:37, col:53> col:53 signal 'NotifierSignal *'
|-CXXMethodDecl 0x558d613067e8 <line:103:5, col:63> col:17 remove_dependent_signal 'void (NotifierSignal *)' inline
| `-ParmVarDecl 0x558d61306728 <col:41, col:57> col:57 signal 'NotifierSignal *'
|-VarDecl 0x558d613068b0 <line:105:5, col:38> col:23 EMPTY_NOTIFIER 'const char []' static
|-VarDecl 0x558d61306938 <line:106:5, col:37> col:23 FULL_NOTIFIER 'const char []' static
|-CXXMethodDecl 0x558d61306b08 <line:108:5, col:76> col:34 used upstream_empty_signal 'NotifierSignal (Element *, int)' static inline
| |-ParmVarDecl 0x558d613069b0 <col:56, col:65> col:65 e 'Element *'
| `-ParmVarDecl 0x558d61306a30 <col:68, col:72> col:72 port 'int'
|-CXXMethodDecl 0x558d61306da8 <line:109:5, col:88> col:34 upstream_empty_signal 'NotifierSignal (Element *, int, Task *)' static inline
| |-ParmVarDecl 0x558d61306bc8 <col:56, col:65> col:65 e 'Element *'
| |-ParmVarDecl 0x558d61306c48 <col:68, col:72> col:72 port 'int'
| `-ParmVarDecl 0x558d61306cc0 <col:78, col:84> col:84 task 'Task *'
|-CXXMethodDecl 0x558d61307048 <line:110:5, col:106> col:34 used upstream_empty_signal 'NotifierSignal (Element *, int, Notifier *)' static inline
| |-ParmVarDecl 0x558d61306e70 <col:56, col:65> col:65 e 'Element *'
| |-ParmVarDecl 0x558d61306ef0 <col:68, col:72> col:72 port 'int'
| `-ParmVarDecl 0x558d61306f68 <col:78, col:88> col:88 dependent_notifier 'Notifier *'
|-CXXMethodDecl 0x558d613073c8 <line:111:5, col:103> col:27 used upstream_empty_signal 'NotifierSignal (Element *, int, Notifier::callback_type, void *)' static
| |-ParmVarDecl 0x558d61307110 <col:49, col:58> col:58 e 'Element *'
| |-ParmVarDecl 0x558d61307190 <col:61, col:65> col:65 port 'int'
| |-ParmVarDecl 0x558d61307208 <col:71, col:85> col:85 f 'Notifier::callback_type':'void (*)(void *, Notifier *)'
| `-ParmVarDecl 0x558d61307288 <col:88, col:94> col:94 user_data 'void *'
|-CXXMethodDecl 0x558d613075b0 <line:113:5, col:77> col:34 used downstream_full_signal 'NotifierSignal (Element *, int)' static inline
| |-ParmVarDecl 0x558d61307498 <col:57, col:66> col:66 e 'Element *'
| `-ParmVarDecl 0x558d61307518 <col:69, col:73> col:73 port 'int'
|-CXXMethodDecl 0x558d61307808 <line:114:5, col:89> col:34 downstream_full_signal 'NotifierSignal (Element *, int, Task *)' static inline
| |-ParmVarDecl 0x558d61307670 <col:57, col:66> col:66 e 'Element *'
| |-ParmVarDecl 0x558d613076f0 <col:69, col:73> col:73 port 'int'
| `-ParmVarDecl 0x558d61307768 <col:79, col:85> col:85 task 'Task *'
|-CXXMethodDecl 0x558d61307a68 <line:115:5, col:107> col:34 used downstream_full_signal 'NotifierSignal (Element *, int, Notifier *)' static inline
| |-ParmVarDecl 0x558d613078d0 <col:57, col:66> col:66 e 'Element *'
| |-ParmVarDecl 0x558d61307950 <col:69, col:73> col:73 port 'int'
| `-ParmVarDecl 0x558d613079c8 <col:79, col:89> col:89 dependent_notifier 'Notifier *'
|-CXXMethodDecl 0x558d61307d50 <line:116:5, col:104> col:27 used downstream_full_signal 'NotifierSignal (Element *, int, Notifier::callback_type, void *)' static
| |-ParmVarDecl 0x558d61307b30 <col:50, col:59> col:59 e 'Element *'
| |-ParmVarDecl 0x558d61307bb0 <col:62, col:66> col:66 port 'int'
| |-ParmVarDecl 0x558d61307c28 <col:72, col:86> col:86 f 'Notifier::callback_type':'void (*)(void *, Notifier *)'
| `-ParmVarDecl 0x558d61307ca8 <col:89, col:95> col:95 user_data 'void *'
|-CXXMethodDecl 0x558d61308008 <line:118:5, col:109> col:34 upstream_empty_signal 'NotifierSignal (Element *, int, int)' static inline
| |-ParmVarDecl 0x558d61307e20 <col:56, col:65> col:65 e 'Element *'
| |-ParmVarDecl 0x558d61307ea0 <col:68, col:72> col:72 port 'int'
| |-ParmVarDecl 0x558d61307f20 <col:78> col:81 'int'
| `-DeprecatedAttr 0x558d613080c0 <col:98> "" ""
|-CXXMethodDecl 0x558d613083a8 <line:119:5, col:121> col:34 upstream_empty_signal 'NotifierSignal (Element *, int, int, Notifier *)' static inline
| |-ParmVarDecl 0x558d61308140 <col:56, col:65> col:65 e 'Element *'
| |-ParmVarDecl 0x558d613081c0 <col:68, col:72> col:72 port 'int'
| |-ParmVarDecl 0x558d61308240 <col:78> col:81 'int'
| |-ParmVarDecl 0x558d613082b8 <col:83, col:92> col:93 'Notifier *'
| `-DeprecatedAttr 0x558d61308468 <col:110> "" ""
|-CXXMethodDecl 0x558d61308688 <line:120:5, col:110> col:34 downstream_full_signal 'NotifierSignal (Element *, int, int)' static inline
| |-ParmVarDecl 0x558d613084e8 <col:57, col:66> col:66 e 'Element *'
| |-ParmVarDecl 0x558d61308568 <col:69, col:73> col:73 port 'int'
| |-ParmVarDecl 0x558d613085e8 <col:79> col:82 'int'
| `-DeprecatedAttr 0x558d61308740 <col:99> "" ""
|-CXXMethodDecl 0x558d613089e0 <line:121:5, col:122> col:34 downstream_full_signal 'NotifierSignal (Element *, int, int, Notifier *)' static inline
| |-ParmVarDecl 0x558d613087c0 <col:57, col:66> col:66 e 'Element *'
| |-ParmVarDecl 0x558d61308840 <col:69, col:73> col:73 port 'int'
| |-ParmVarDecl 0x558d613088c0 <col:79> col:82 'int'
| |-ParmVarDecl 0x558d61308938 <col:84, col:93> col:94 'Notifier *'
| `-DeprecatedAttr 0x558d61308aa0 <col:111> "" ""
|-AccessSpecDecl 0x558d61308b10 <line:123:3, col:10> col:3 private
|-FieldDecl 0x558d61308b48 <line:125:5, col:20> col:20 referenced _signal 'NotifierSignal'
|-FieldDecl 0x558d61308ba8 <line:126:5, col:14> col:14 referenced _search_op 'Notifier::SearchOp'
|-CXXMethodDecl 0x558d61308d20 <line:128:5, col:61> col:17 used dependent_signal_callback 'void (void *, Notifier *)' static
| |-ParmVarDecl 0x558d61308c10 <col:43, col:48> col:49 'void *'
| `-ParmVarDecl 0x558d61308c88 <col:51, col:60> col:61 'Notifier *'
|-CXXConstructorDecl 0x558d61308df8 <line:73:7> col:7 implicit Notifier 'void (const Notifier &)' inline default noexcept-unevaluated 0x558d61308df8
| `-ParmVarDecl 0x558d61308f08 <col:7> col:7 'const Notifier &'
`-CXXMethodDecl 0x558d61308fa8 <col:7> col:7 implicit operator= 'Notifier &(const Notifier &)' inline default noexcept-unevaluated 0x558d61308fa8
  `-ParmVarDecl 0x558d613090b8 <col:7> col:7 'const Notifier &'

Layout: <CGRecordLayout
  LLVMType:%class.Notifier = type <{ i32 (...)**, %class.NotifierSignal, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Notifier.base = type <{ i32 (...)**, %class.NotifierSignal, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct TaskLink
         0 |   struct TaskLink * _prev
         8 |   struct TaskLink * _next
        16 |   unsigned int _pass
           | [sizeof=24, dsize=20, align=8,
           |  nvsize=20, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558d61266f40 <../dummy_inc/click/task.hh:31:1, line:47:1> line:31:8 referenced struct TaskLink definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x558d61267058 <col:1, col:8> col:8 implicit referenced struct TaskLink
|-FieldDecl 0x558d61267128 <line:33:5, col:15> col:15 referenced _prev 'TaskLink *'
|-FieldDecl 0x558d61267188 <line:34:5, col:15> col:15 referenced _next 'TaskLink *'
|-FieldDecl 0x558d612671f0 <line:37:5, col:14> col:14 referenced _pass 'unsigned int'
|-CXXConstructorDecl 0x558d61267278 <line:39:5, line:46:5> line:39:5 used TaskLink 'void ()'
| `-CompoundStmt 0x558d612674e0 <col:16, line:46:5>
|   |-BinaryOperator 0x558d61267428 <line:41:9, col:25> 'TaskLink *' lvalue '='
|   | |-MemberExpr 0x558d61267348 <col:9> 'TaskLink *' lvalue ->_prev 0x558d61267128
|   | | `-CXXThisExpr 0x558d61267338 <col:9> 'TaskLink *' implicit this
|   | `-ImplicitCastExpr 0x558d61267410 <col:17, col:25> 'TaskLink *' <LValueToRValue>
|   |   `-BinaryOperator 0x558d612673f0 <col:17, col:25> 'TaskLink *' lvalue '='
|   |     |-MemberExpr 0x558d61267388 <col:17> 'TaskLink *' lvalue ->_next 0x558d61267188
|   |     | `-CXXThisExpr 0x558d61267378 <col:17> 'TaskLink *' implicit this
|   |     `-ImplicitCastExpr 0x558d612673d8 <col:25> 'TaskLink *' <NullToPointer>
|   |       `-IntegerLiteral 0x558d612673b8 <col:25> 'int' 0
|   `-BinaryOperator 0x558d612674c0 <line:44:9, col:17> 'unsigned int' lvalue '='
|     |-MemberExpr 0x558d61267458 <col:9> 'unsigned int' lvalue ->_pass 0x558d612671f0
|     | `-CXXThisExpr 0x558d61267448 <col:9> 'TaskLink *' implicit this
|     `-ImplicitCastExpr 0x558d612674a8 <col:17> 'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x558d61267488 <col:17> 'int' 0
|-CXXConstructorDecl 0x558d612f3a18 <line:31:8> col:8 implicit constexpr TaskLink 'void (const TaskLink &)' inline default trivial noexcept-unevaluated 0x558d612f3a18
| `-ParmVarDecl 0x558d612f3b28 <col:8> col:8 'const TaskLink &'
|-CXXConstructorDecl 0x558d612f3bc8 <col:8> col:8 implicit constexpr TaskLink 'void (TaskLink &&)' inline default trivial noexcept-unevaluated 0x558d612f3bc8
| `-ParmVarDecl 0x558d612f3cd8 <col:8> col:8 'TaskLink &&'
|-CXXDestructorDecl 0x558d612f3ec8 <col:8> col:8 implicit ~TaskLink 'void ()' inline default trivial noexcept-unevaluated 0x558d612f3ec8
|-CXXMethodDecl 0x558d612f46c8 <col:8> col:8 implicit operator= 'TaskLink &(const TaskLink &)' inline default trivial noexcept-unevaluated 0x558d612f46c8
| `-ParmVarDecl 0x558d612f47d8 <col:8> col:8 'const TaskLink &'
`-CXXMethodDecl 0x558d612f4848 <col:8> col:8 implicit operator= 'TaskLink &(TaskLink &&)' inline default trivial noexcept-unevaluated 0x558d612f4848
  `-ParmVarDecl 0x558d612f4958 <col:8> col:8 'TaskLink &&'

Layout: <CGRecordLayout
  LLVMType:%struct.TaskLink = type <{ %struct.TaskLink*, %struct.TaskLink*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%struct.TaskLink.base = type <{ %struct.TaskLink*, %struct.TaskLink*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9)
         0 |   int16_t home_thread_id
         2 |   uint8_t is_scheduled
         3 |   uint8_t is_strong_unscheduled
           | [sizeof=4, dsize=4, align=2,
           |  nvsize=4, nvalign=2]

*** Dumping AST Record Layout
         0 | union Task::Status
         0 |   struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9) 
         0 |     int16_t home_thread_id
         2 |     uint8_t is_scheduled
         3 |     uint8_t is_strong_unscheduled
         0 |   uint32_t status
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Task::Pending
         0 |   class Task * t
         0 |   uintptr_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Task
         0 |   struct TaskLink (base)
         0 |     struct TaskLink * _prev
         8 |     struct TaskLink * _next
        16 |     unsigned int _pass
        20 |   unsigned int _stride
        24 |   int _tickets
        28 |   union Task::Status _status
        28 |     struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9) 
        28 |       int16_t home_thread_id
        30 |       uint8_t is_scheduled
        31 |       uint8_t is_strong_unscheduled
        28 |     uint32_t status
        32 |   TaskCallback _hook
        40 |   void * _thunk
        48 |   class RouterThread * _thread
        56 |   class Element * _owner
        64 |   union Task::Pending _pending_nextptr
        64 |     class Task * t
        64 |     uintptr_t x
           | [sizeof=72, dsize=72, align=8,
           |  nvsize=72, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558d611ca608 <../dummy_inc/click/task.hh:315:9, line:319:9> line:315:9 struct definition
|-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x558d611ca738 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
|-FieldDecl 0x558d611ca798 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
|-FieldDecl 0x558d611ca7f8 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
|-CXXConstructorDecl 0x558d612fabd8 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
|-CXXDestructorDecl 0x558d612facb0 <col:9> col:9 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x558d612facb0
|-CXXConstructorDecl 0x558d612faf68 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x558d612faf68
| `-ParmVarDecl 0x558d612fb078 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
`-CXXConstructorDecl 0x558d612fb118 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x558d612fb118
  `-ParmVarDecl 0x558d612fb228 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'

Layout: <CGRecordLayout
  LLVMType:%struct.anon = type { i16, i8, i8 }
  NonVirtualBaseLLVMType:%struct.anon = type { i16, i8, i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558d611ca458 <../dummy_inc/click/task.hh:314:5, line:321:5> line:314:11 union Status definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x558d611ca578 <col:5, col:11> col:11 implicit union Status
|-CXXRecordDecl 0x558d611ca608 <line:315:9, line:319:9> line:315:9 struct definition
| |-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x558d611ca738 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
| |-FieldDecl 0x558d611ca798 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
| |-FieldDecl 0x558d611ca7f8 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
| |-CXXConstructorDecl 0x558d612fabd8 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
| |-CXXDestructorDecl 0x558d612facb0 <col:9> col:9 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x558d612facb0
| |-CXXConstructorDecl 0x558d612faf68 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x558d612faf68
| | `-ParmVarDecl 0x558d612fb078 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
| `-CXXConstructorDecl 0x558d612fb118 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x558d612fb118
|   `-ParmVarDecl 0x558d612fb228 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'
|-FieldDecl 0x558d611ca8b8 <col:9> col:9 implicit referenced 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
|-IndirectFieldDecl 0x558d611ca918 <line:316:21> col:21 implicit home_thread_id 'int16_t':'short'
| |-Field 0x558d611ca8b8 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x558d611ca738 'home_thread_id' 'int16_t':'short'
|-IndirectFieldDecl 0x558d611ca970 <line:317:21> col:21 implicit is_scheduled 'uint8_t':'unsigned char'
| |-Field 0x558d611ca8b8 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x558d611ca798 'is_scheduled' 'uint8_t':'unsigned char'
|-IndirectFieldDecl 0x558d611ca9c8 <line:318:21> col:21 implicit is_strong_unscheduled 'uint8_t':'unsigned char'
| |-Field 0x558d611ca8b8 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x558d611ca7f8 'is_strong_unscheduled' 'uint8_t':'unsigned char'
|-FieldDecl 0x558d611caa20 <line:320:9, col:18> col:18 status 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x558d612faae8 <line:314:11> col:11 implicit used Status 'void () noexcept' inline default trivial
| `-CompoundStmt 0x558d612fb448 <col:11>
|-CXXConstructorDecl 0x558d612fadb8 <col:11> col:11 implicit constexpr Status 'void (const Task::Status &)' inline default trivial noexcept-unevaluated 0x558d612fadb8
| `-ParmVarDecl 0x558d612faec8 <col:11> col:11 'const Task::Status &'
`-CXXConstructorDecl 0x558d612fb2c8 <col:11> col:11 implicit constexpr Status 'void (Task::Status &&)' inline default trivial noexcept-unevaluated 0x558d612fb2c8
  `-ParmVarDecl 0x558d612fb3d8 <col:11> col:11 'Task::Status &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Task::Status" = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<16> >
         0 |   vector_memory<class sized_array_memory<16> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct TimerSet::heap_element>
         0 |   class vector_memory<class sized_array_memory<16> > vm_
         0 |     vector_memory<class sized_array_memory<16> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<8> >
         0 |   vector_memory<class sized_array_memory<8> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class Timer *>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class SimpleSpinlock (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class TimerSet
         0 |   class Timestamp _timer_expiry
         0 |     union Timestamp::rep_t _t
         0 |       int64_t x
         8 |   unsigned int _max_timer_stride
        12 |   unsigned int _timer_stride
        16 |   unsigned int _timer_count
        24 |   class Vector<struct TimerSet::heap_element> _timer_heap
        24 |     class vector_memory<class sized_array_memory<16> > vm_
        24 |       vector_memory<class sized_array_memory<16> >::type * l_
        32 |       vector_memory::size_type n_
        36 |       vector_memory::size_type capacity_
        40 |   class Vector<class Timer *> _timer_runchunk
        40 |     class vector_memory<class sized_array_memory<8> > vm_
        40 |       vector_memory<class sized_array_memory<8> >::type * l_
        48 |       vector_memory::size_type n_
        52 |       vector_memory::size_type capacity_
        56 |   class SimpleSpinlock _timer_lock (empty)
        64 |   class Timestamp _timer_check
        64 |     union Timestamp::rep_t _t
        64 |       int64_t x
        72 |   uint32_t _timer_check_reports
           | [sizeof=80, dsize=76, align=8,
           |  nvsize=76, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct pollfd>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<24> >
         0 |   vector_memory<class sized_array_memory<24> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct SelectSet::SelectorInfo>
         0 |   class vector_memory<class sized_array_memory<24> > vm_
         0 |     vector_memory<class sized_array_memory<24> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class SelectSet
         0 |   int [2] _wake_pipe
         8 |   volatile _Bool _wake_pipe_pending
        16 |   class Vector<struct pollfd> _pollfds
        16 |     class vector_memory<class sized_array_memory<8> > vm_
        16 |       vector_memory<class sized_array_memory<8> >::type * l_
        24 |       vector_memory::size_type n_
        28 |       vector_memory::size_type capacity_
        32 |   class Vector<struct SelectSet::SelectorInfo> _selinfo
        32 |     class vector_memory<class sized_array_memory<24> > vm_
        32 |       vector_memory<class sized_array_memory<24> >::type * l_
        40 |       vector_memory::size_type n_
        44 |       vector_memory::size_type capacity_
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | class Spinlock (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class SpinlockIRQ (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class RouterThread
         0 |   struct TaskLink _task_link
         0 |     struct TaskLink * _prev
         8 |     struct TaskLink * _next
        16 |     unsigned int _pass
        24 |   volatile _Bool _stop_flag
        32 |   class TimerSet _timers
        32 |     class Timestamp _timer_expiry
        32 |       union Timestamp::rep_t _t
        32 |         int64_t x
        40 |     unsigned int _max_timer_stride
        44 |     unsigned int _timer_stride
        48 |     unsigned int _timer_count
        56 |     class Vector<struct TimerSet::heap_element> _timer_heap
        56 |       class vector_memory<class sized_array_memory<16> > vm_
        56 |         vector_memory<class sized_array_memory<16> >::type * l_
        64 |         vector_memory::size_type n_
        68 |         vector_memory::size_type capacity_
        72 |     class Vector<class Timer *> _timer_runchunk
        72 |       class vector_memory<class sized_array_memory<8> > vm_
        72 |         vector_memory<class sized_array_memory<8> >::type * l_
        80 |         vector_memory::size_type n_
        84 |         vector_memory::size_type capacity_
        88 |     class SimpleSpinlock _timer_lock (empty)
        96 |     class Timestamp _timer_check
        96 |       union Timestamp::rep_t _t
        96 |         int64_t x
       104 |     uint32_t _timer_check_reports
       112 |   class SelectSet _selects
       112 |     int [2] _wake_pipe
       120 |     volatile _Bool _wake_pipe_pending
       128 |     class Vector<struct pollfd> _pollfds
       128 |       class vector_memory<class sized_array_memory<8> > vm_
       128 |         vector_memory<class sized_array_memory<8> >::type * l_
       136 |         vector_memory::size_type n_
       140 |         vector_memory::size_type capacity_
       144 |     class Vector<struct SelectSet::SelectorInfo> _selinfo
       144 |       class vector_memory<class sized_array_memory<24> > vm_
       144 |         vector_memory<class sized_array_memory<24> >::type * l_
       152 |         vector_memory::size_type n_
       156 |         vector_memory::size_type capacity_
       192 |   class Spinlock _task_lock (empty)
       196 |   class atomic_uint32_t _task_blocker
       196 |     uint32_t _val
       200 |   class atomic_uint32_t _task_blocker_waiting
       200 |     uint32_t _val
       208 |   union Task::Pending _pending_head
       208 |     class Task * t
       208 |     uintptr_t x
       216 |   class Task::Pending * _pending_tail
       224 |   class SpinlockIRQ _pending_lock (empty)
       256 |   class Master * _master
       264 |   int _id
       268 |   _Bool _driver_entered
       272 |   unsigned int _tasks_per_iter
       276 |   unsigned int _iters_per_os
           | [sizeof=320, dsize=280, align=64,
           |  nvsize=280, nvalign=64]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558d611e1f50 prev 0x558d611d8d90 <../dummy_inc/click/timestamp.hh:539:5, line:566:5> line:539:11 referenced union rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x558d611e2048 <col:5, col:11> col:11 implicit union rep_t
|-FieldDecl 0x558d611e20e8 <line:541:9, col:17> col:17 referenced x 'int64_t':'long'
|-CXXConstructorDecl 0x558d611e8eb0 <line:539:11> col:11 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x558d611e9298 <col:11>
|-CXXConstructorDecl 0x558d611e8f90 <col:11> col:11 implicit used constexpr rep_t 'void (const Timestamp::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x558d611e9078 <col:11> col:11 'const Timestamp::rep_t &'
| `-CompoundStmt 0x558d611e99e0 <col:11>
|-CXXConstructorDecl 0x558d611e9118 <col:11> col:11 implicit used constexpr rep_t 'void (Timestamp::rep_t &&) noexcept' inline default trivial
| |-ParmVarDecl 0x558d611e9228 <col:11> col:11 'Timestamp::rep_t &&'
| `-CompoundStmt 0x558d611eb238 <col:11>
|-CXXDestructorDecl 0x558d611ea548 <col:11> col:11 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x558d60ef10f8 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(const Timestamp::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x558d60ef1208 <col:11> col:11 'const Timestamp::rep_t &'
| `-CompoundStmt 0x558d60ef1ad0 <col:11>
|   `-ReturnStmt 0x558d60ef1ac0 <col:11>
|     `-UnaryOperator 0x558d60ef1aa8 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x558d60ef1a98 <col:11> 'Timestamp::rep_t *' this
`-CXXMethodDecl 0x558d60ef1278 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(Timestamp::rep_t &&) noexcept' inline default trivial
  |-ParmVarDecl 0x558d60ef1388 <col:11> col:11 'Timestamp::rep_t &&'
  `-CompoundStmt 0x558d61283970 <col:11>
    `-ReturnStmt 0x558d61283960 <col:11>
      `-UnaryOperator 0x558d61283948 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
        `-CXXThisExpr 0x558d61283938 <col:11> 'Timestamp::rep_t *' this

Layout: <CGRecordLayout
  LLVMType:%"union.Timestamp::rep_t" = type { i64 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558d611d7f48 prev 0x558d611d7c58 <../dummy_inc/click/timestamp.hh:122:1, line:723:1> line:122:7 referenced class Timestamp definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x558d611d8040 <col:1, col:7> col:7 implicit referenced class Timestamp
|-AccessSpecDecl 0x558d611d80d0 <col:19, col:25> col:19 public
|-TypedefDecl 0x558d611d8108 <line:125:5, col:21> col:21 referenced seconds_type 'int32_t':'int'
| `-TypedefType 0x558d60e3d2d0 'int32_t' sugar
|   |-Typedef 0x558d60d4f268 'int32_t'
|   `-TypedefType 0x558d60d283b0 '__int32_t' sugar
|     |-Typedef 0x558d60d27fc8 '__int32_t'
|     `-BuiltinType 0x558d60ce6370 'int'
|-TypedefDecl 0x558d611d8170 <line:128:5, col:21> col:21 referenced value_type 'int64_t':'long'
| `-TypedefType 0x558d60e3d490 'int64_t' sugar
|   |-Typedef 0x558d60d4f2d0 'int64_t'
|   `-TypedefType 0x558d60d284d0 '__int64_t' sugar
|     |-Typedef 0x558d60d280a8 '__int64_t'
|     `-BuiltinType 0x558d60ce6390 'long'
|-EnumDecl 0x558d611d81c8 <line:133:5, line:140:5> line:133:5
| |-EnumConstantDecl 0x558d611d8340 <line:134:9, col:38> col:9 max_seconds 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:133:5)'
| | `-ConstantExpr 0x558d611d8320 <col:23, col:38> 'Timestamp::seconds_type':'int' Int: 2147483647
| |   `-CStyleCastExpr 0x558d611d82f8 <col:23, col:38> 'Timestamp::seconds_type':'int' <NoOp>
| |     `-ImplicitCastExpr 0x558d611d82e0 <col:38> 'Timestamp::seconds_type':'int' <IntegralCast> part_of_explicit_cast
| |       `-IntegerLiteral 0x558d611d82b0 <col:38> 'unsigned int' 2147483647
| `-EnumConstantDecl 0x558d611d8438 <line:137:9, col:39> col:9 min_seconds 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:133:5)'
|   `-ConstantExpr 0x558d611d8418 <col:23, col:39> 'Timestamp::seconds_type':'int' Int: -2147483648
|     `-CStyleCastExpr 0x558d611d83f0 <col:23, col:39> 'Timestamp::seconds_type':'int' <NoOp>
|       `-ImplicitCastExpr 0x558d611d83d8 <col:38, col:39> 'Timestamp::seconds_type':'int' <IntegralCast> part_of_explicit_cast
|         `-UnaryOperator 0x558d611d83b0 <col:38, col:39> 'unsigned int' prefix '-'
|           `-IntegerLiteral 0x558d611d8390 <col:39> 'unsigned int' 2147483648
|-EnumDecl 0x558d611d8488 <line:142:5, line:162:5> line:142:5
| |-EnumConstantDecl 0x558d611d8590 <line:143:9, col:24> col:9 referenced nsec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x558d611d8ae0 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558d611d8570 <col:24> 'int' Int: 1000000000
| |     `-IntegerLiteral 0x558d611d8550 <col:24> 'int' 1000000000
| |-EnumConstantDecl 0x558d611d8620 <line:144:9, col:25> col:9 nsec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x558d611d8af8 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558d611d8600 <col:25> 'int' Int: 1000000
| |     `-IntegerLiteral 0x558d611d85e0 <col:25> 'int' 1000000
| |-EnumConstantDecl 0x558d611d86b0 <line:145:9, col:25> col:9 nsec_per_usec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x558d611d8b10 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558d611d8690 <col:25> 'int' Int: 1000
| |     `-IntegerLiteral 0x558d611d8670 <col:25> 'int' 1000
| |-EnumConstantDecl 0x558d611d8740 <line:146:9, col:24> col:9 referenced usec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x558d611d8b28 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558d611d8720 <col:24> 'int' Int: 1000000
| |     `-IntegerLiteral 0x558d611d8700 <col:24> 'int' 1000000
| |-EnumConstantDecl 0x558d611d87d0 <line:147:9, col:25> col:9 usec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x558d611d8b40 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558d611d87b0 <col:25> 'int' Int: 1000
| |     `-IntegerLiteral 0x558d611d8790 <col:25> 'int' 1000
| |-EnumConstantDecl 0x558d611d8860 <line:148:9, col:24> col:9 referenced msec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x558d611d8b58 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558d611d8840 <col:24> 'int' Int: 1000
| |     `-IntegerLiteral 0x558d611d8820 <col:24> 'int' 1000
| |-EnumConstantDecl 0x558d611d88f0 <line:150:9, col:26> col:9 referenced subsec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x558d611d8b70 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558d611d88d0 <col:26> 'int' Int: 1000000000
| |     `-DeclRefExpr 0x558d611d88b0 <col:26> 'int' EnumConstant 0x558d611d8590 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| |-EnumConstantDecl 0x558d611d89c0 <line:157:9, col:44> col:9 referenced subsec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x558d611d8b88 <col:27, col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558d611d89a0 <col:27, col:44> 'int' Int: 1000000
| |     `-BinaryOperator 0x558d611d8980 <col:27, col:44> 'int' '/'
| |       |-DeclRefExpr 0x558d611d8940 <col:27> 'int' EnumConstant 0x558d611d88f0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| |       `-DeclRefExpr 0x558d611d8960 <col:44> 'int' EnumConstant 0x558d611d8860 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| `-EnumConstantDecl 0x558d611d8a90 <line:158:9, col:44> col:9 referenced subsec_per_usec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ImplicitCastExpr 0x558d611d8ba0 <col:27, col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x558d611d8a70 <col:27, col:44> 'int' Int: 1000
|       `-BinaryOperator 0x558d611d8a50 <col:27, col:44> 'int' '/'
|         |-DeclRefExpr 0x558d611d8a10 <col:27> 'int' EnumConstant 0x558d611d88f0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|         `-DeclRefExpr 0x558d611d8a30 <col:44> 'int' EnumConstant 0x558d611d8740 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-EnumDecl 0x558d611d8bb8 <line:164:5, line:166:5> line:164:5
| `-EnumConstantDecl 0x558d611d8cc0 <line:165:9, col:19> col:9 NSUBSEC 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:164:5)'
|   `-ImplicitCastExpr 0x558d611d8d10 <col:19> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x558d611d8ca0 <col:19> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' Int: 1000000000
|       `-DeclRefExpr 0x558d611d8c80 <col:19> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x558d611d88f0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-TypedefDecl 0x558d611d8d38 <line:168:5, col:32> col:32 referenced uninitialized_t 'uninitialized_type'
| `-RecordType 0x558d60e3cf00 'uninitialized_type'
|   `-CXXRecord 0x558d60e3ce68 'uninitialized_type'
|-CXXRecordDecl 0x558d611d8d90 <line:170:5, col:11> col:11 referenced union rep_t
|-CXXConstructorDecl 0x558d611d8ea0 <line:174:5, line:176:5> line:174:12 used Timestamp 'void ()' inline
| |-CXXCtorInitializer Field 0x558d611e3098 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x558d611e92a8 <col:12> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x558d611e93c8 <col:24, line:176:5>
|   `-CXXMemberCallExpr 0x558d611e9380 <line:175:9, col:20> 'void'
|     |-MemberExpr 0x558d611e9310 <col:9> '<bound member function type>' ->assign 0x558d611ddae8
|     | `-CXXThisExpr 0x558d611e9300 <col:9> 'Timestamp *' implicit this
|     |-IntegerLiteral 0x558d611e9340 <col:16> 'int' 0
|     `-ImplicitCastExpr 0x558d611e93b0 <col:19> 'uint32_t':'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x558d611e9360 <col:19> 'int' 0
|-CXXConstructorDecl 0x558d611d90e8 <line:187:5, line:189:5> line:187:21 Timestamp 'void (long, uint32_t)' inline
| |-ParmVarDecl 0x558d611d8f60 <col:31, col:36> col:36 used sec 'long'
| |-ParmVarDecl 0x558d611d8fd8 <col:41, col:59> col:50 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x558d611e4be0 <col:59> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x558d611e4bc0 <col:59> 'int' 0
| |-CXXCtorInitializer Field 0x558d611e3098 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x558d611e93e0 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x558d611e9530 <col:62, line:189:5>
|   `-CXXMemberCallExpr 0x558d611e94b8 <line:188:9, col:27> 'void'
|     |-MemberExpr 0x558d611e9448 <col:9> '<bound member function type>' ->assign 0x558d611ddae8
|     | `-CXXThisExpr 0x558d611e9438 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x558d611e9500 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x558d611e94e8 <col:16> 'long' <LValueToRValue>
|     |   `-DeclRefExpr 0x558d611e9478 <col:16> 'long' lvalue ParmVar 0x558d611d8f60 'sec' 'long'
|     `-ImplicitCastExpr 0x558d611e9518 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x558d611e9498 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x558d611d8fd8 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x558d611d9348 <line:191:5, line:193:5> line:191:21 used Timestamp 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x558d611d91b8 <col:31, col:35> col:35 used sec 'int'
| |-ParmVarDecl 0x558d611d9230 <col:40, col:58> col:49 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x558d611e4c18 <col:58> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x558d611e4bf8 <col:58> 'int' 0
| |-CXXCtorInitializer Field 0x558d611e3098 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x558d611e9548 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x558d611e9680 <col:61, line:193:5>
|   `-CXXMemberCallExpr 0x558d611e9620 <line:192:9, col:27> 'void'
|     |-MemberExpr 0x558d611e95b0 <col:9> '<bound member function type>' ->assign 0x558d611ddae8
|     | `-CXXThisExpr 0x558d611e95a0 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x558d611e9650 <col:16> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x558d611e95e0 <col:16> 'int' lvalue ParmVar 0x558d611d91b8 'sec' 'int'
|     `-ImplicitCastExpr 0x558d611e9668 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x558d611e9600 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x558d611d9230 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x558d611d95a8 <line:195:5, line:197:5> line:195:21 Timestamp 'void (unsigned long, uint32_t)' inline
| |-ParmVarDecl 0x558d611d9418 <col:31, col:45> col:45 used sec 'unsigned long'
| |-ParmVarDecl 0x558d611d9490 <col:50, col:68> col:59 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x558d611e4c50 <col:68> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x558d611e4c30 <col:68> 'int' 0
| |-CXXCtorInitializer Field 0x558d611e3098 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x558d611e9698 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x558d611e97e8 <col:71, line:197:5>
|   `-CXXMemberCallExpr 0x558d611e9770 <line:196:9, col:27> 'void'
|     |-MemberExpr 0x558d611e9700 <col:9> '<bound member function type>' ->assign 0x558d611ddae8
|     | `-CXXThisExpr 0x558d611e96f0 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x558d611e97b8 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x558d611e97a0 <col:16> 'unsigned long' <LValueToRValue>
|     |   `-DeclRefExpr 0x558d611e9730 <col:16> 'unsigned long' lvalue ParmVar 0x558d611d9418 'sec' 'unsigned long'
|     `-ImplicitCastExpr 0x558d611e97d0 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x558d611e9750 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x558d611d9490 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x558d611da740 <line:199:5, line:201:5> line:199:21 used Timestamp 'void (unsigned int, uint32_t)' inline
| |-ParmVarDecl 0x558d611d9678 <col:31, col:40> col:40 used sec 'unsigned int'
| |-ParmVarDecl 0x558d611d96f0 <col:45, col:63> col:54 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x558d611e4c88 <col:63> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x558d611e4c68 <col:63> 'int' 0
| |-CXXCtorInitializer Field 0x558d611e3098 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x558d611e9800 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x558d611e9950 <col:66, line:201:5>
|   `-CXXMemberCallExpr 0x558d611e98d8 <line:200:9, col:27> 'void'
|     |-MemberExpr 0x558d611e9868 <col:9> '<bound member function type>' ->assign 0x558d611ddae8
|     | `-CXXThisExpr 0x558d611e9858 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x558d611e9920 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x558d611e9908 <col:16> 'unsigned int' <LValueToRValue>
|     |   `-DeclRefExpr 0x558d611e9898 <col:16> 'unsigned int' lvalue ParmVar 0x558d611d9678 'sec' 'unsigned int'
|     `-ImplicitCastExpr 0x558d611e9938 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x558d611e98b8 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x558d611d96f0 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x558d611da8a0 <line:203:5, col:37> col:21 used Timestamp 'void (double)' inline
| `-ParmVarDecl 0x558d611da810 <col:31> col:37 'double'
|-CXXConstructorDecl 0x558d611daa38 <line:206:5, col:46> col:12 Timestamp 'void (const struct timeval &)' inline
| `-ParmVarDecl 0x558d611da978 <col:22, col:44> col:44 tv 'const struct timeval &'
|-CXXConstructorDecl 0x558d611dac68 <line:208:5, col:47> col:12 Timestamp 'void (const struct timespec &)' inline
| `-ParmVarDecl 0x558d611dab70 <col:22, col:45> col:45 ts 'const struct timespec &'
|-CXXConstructorDecl 0x558d611dae18 <line:212:5, line:214:5> line:212:12 Timestamp 'void (const Timestamp::rep_t &)' inline
| |-ParmVarDecl 0x558d611dad58 <col:22, col:35> col:35 used rep 'const Timestamp::rep_t &'
| |-CXXCtorInitializer Field 0x558d611e3098 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x558d611e99f0 <line:213:11, col:17> 'Timestamp::rep_t' 'void (const Timestamp::rep_t &) noexcept'
| |   `-DeclRefExpr 0x558d611e9968 <col:14> 'const Timestamp::rep_t' lvalue ParmVar 0x558d611dad58 'rep' 'const Timestamp::rep_t &'
| `-CompoundStmt 0x558d611e9a50 <col:19, line:214:5>
|-CXXConstructorDecl 0x558d611dafe8 <line:217:5, line:219:5> line:217:12 used Timestamp 'void (const Timestamp::uninitialized_t &)' inline
| |-ParmVarDecl 0x558d611daf28 <col:22, col:45> col:45 used unused 'const Timestamp::uninitialized_t &'
| |-CXXCtorInitializer Field 0x558d611e3098 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x558d611e9a60 <col:12> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x558d611e9b10 <col:53, line:219:5>
|   `-CStyleCastExpr 0x558d611e9ae8 <line:218:9, col:16> 'void' <ToVoid>
|     `-DeclRefExpr 0x558d611e9ab8 <col:16> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue ParmVar 0x558d611daf28 'unused' 'const Timestamp::uninitialized_t &'
|-TypedefDecl 0x558d611db1d8 <line:221:5, col:64> col:39 referenced unspecified_bool_type 'Timestamp::seconds_type (Timestamp::*)() const'
| `-MemberPointerType 0x558d611db150 'Timestamp::seconds_type (Timestamp::*)() const'
|   |-RecordType 0x558d611d7cf0 'Timestamp'
|   | `-CXXRecord 0x558d611d7f48 'Timestamp'
|   `-ParenType 0x558d611db0f0 'Timestamp::seconds_type () const' sugar
|     `-FunctionProtoType 0x558d611db0c0 'Timestamp::seconds_type () const' const cdecl
|       `-TypedefType 0x558d611d8290 'Timestamp::seconds_type' sugar
|         |-Typedef 0x558d611d8108 'seconds_type'
|         `-TypedefType 0x558d60e3d2d0 'int32_t' sugar
|           |-Typedef 0x558d60d4f268 'int32_t'
|           `-TypedefType 0x558d60d283b0 '__int32_t' sugar
|             |-Typedef 0x558d60d27fc8 '__int32_t'
|             `-BuiltinType 0x558d60ce6370 'int'
|-CXXConversionDecl 0x558d611db318 <line:222:5, col:45> col:12 used operator int (Timestamp::*)() const 'Timestamp::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x558d611db3e8 <line:225:5, line:231:5> line:225:17 is_negative 'bool () const' inline
| `-CompoundStmt 0x558d611e9c18 <col:37, line:231:5>
|   `-ReturnStmt 0x558d611e9c08 <line:227:9, col:23>
|     `-BinaryOperator 0x558d611e9be8 <col:16, col:23> 'bool' '<'
|       |-ImplicitCastExpr 0x558d611e9bb8 <col:16, col:19> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x558d611e9b68 <col:16, col:19> 'const int64_t':'const long' lvalue .x 0x558d611e20e8
|       |   `-MemberExpr 0x558d611e9b38 <col:16> 'const Timestamp::rep_t' lvalue ->_t 0x558d611e3098
|       |     `-CXXThisExpr 0x558d611e9b28 <col:16> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x558d611e9bd0 <col:23> 'long' <IntegralCast>
|         `-IntegerLiteral 0x558d611e9b98 <col:23> 'int' 0
|-CXXMethodDecl 0x558d611db4a8 <line:233:5, col:31> col:25 used sec 'Timestamp::seconds_type () const' inline
|-CXXMethodDecl 0x558d611db568 <line:234:5, col:30> col:21 used subsec 'uint32_t () const' inline
|-CXXMethodDecl 0x558d611db628 <line:235:5, col:28> col:21 msec 'uint32_t () const' inline
|-CXXMethodDecl 0x558d611db6e8 <line:236:5, col:28> col:21 used usec 'uint32_t () const' inline
|-CXXMethodDecl 0x558d611db7a8 <line:237:5, col:28> col:21 used nsec 'uint32_t () const' inline
|-CXXMethodDecl 0x558d611db918 <line:239:5, col:41> col:17 set_sec 'void (Timestamp::seconds_type)' inline
| `-ParmVarDecl 0x558d611db858 <col:25, col:38> col:38 sec 'Timestamp::seconds_type':'int'
|-CXXMethodDecl 0x558d611dba60 <line:240:5, col:43> col:17 set_subsec 'void (uint32_t)' inline
| `-ParmVarDecl 0x558d611db9d0 <col:28, col:37> col:37 subsec 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558d611dbb28 <line:242:5, col:65> col:25 msec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x558d611dbbc8 <col:54> "" ""
|-CXXMethodDecl 0x558d611dbc58 <line:243:5, col:65> col:25 usec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x558d611dbcf8 <col:54> "" ""
|-CXXMethodDecl 0x558d611dbd88 <line:244:5, col:65> col:25 nsec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x558d611dbe28 <col:54> "" ""
|-CXXMethodDecl 0x558d611dbf28 <line:250:5, col:37> col:27 used timeval 'struct timeval () const' inline
|-CXXMethodDecl 0x558d611dbff8 <line:251:5, col:42> col:27 timeval_ceil 'struct timeval () const' inline
|-CXXMethodDecl 0x558d611dc128 <line:257:5, col:39> col:28 timespec 'struct timespec () const' inline
|-CXXMethodDecl 0x558d611dc220 <line:262:5, col:31> col:19 used doubleval 'double () const' inline
|-CXXMethodDecl 0x558d611dc358 <line:265:5, line:271:5> line:265:23 msecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x558d611e9e30 <col:39, line:271:5>
|   `-ReturnStmt 0x558d611e9e20 <line:267:9, col:61>
|     `-CallExpr 0x558d611e9dc0 <col:16, col:61> 'Timestamp::value_type':'long'
|       |-ImplicitCastExpr 0x558d611e9da8 <col:16> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x558d611e9c30 <col:16> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x558d611e33c8 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|       |-ImplicitCastExpr 0x558d611e9df0 <col:26, col:29> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x558d611e9c90 <col:26, col:29> 'const int64_t':'const long' lvalue .x 0x558d611e20e8
|       |   `-MemberExpr 0x558d611e9c60 <col:26> 'const Timestamp::rep_t' lvalue ->_t 0x558d611e3098
|       |     `-CXXThisExpr 0x558d611e9c50 <col:26> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x558d611e9e08 <col:32, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|         `-BinaryOperator 0x558d611e9d30 <col:32, col:49> 'int' '/'
|           |-ImplicitCastExpr 0x558d611e9d00 <col:32> 'int' <IntegralCast>
|           | `-DeclRefExpr 0x558d611e9cc0 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x558d611d88f0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|           `-ImplicitCastExpr 0x558d611e9d18 <col:49> 'int' <IntegralCast>
|             `-DeclRefExpr 0x558d611e9ce0 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x558d611d8860 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x558d611dc418 <line:273:5, line:279:5> line:273:23 usecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x558d611e9ff0 <col:39, line:279:5>
|   `-ReturnStmt 0x558d611e9fe0 <line:275:9, col:61>
|     `-CallExpr 0x558d611e9f80 <col:16, col:61> 'Timestamp::value_type':'long'
|       |-ImplicitCastExpr 0x558d611e9f68 <col:16> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x558d611e9e48 <col:16> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x558d611e33c8 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|       |-ImplicitCastExpr 0x558d611e9fb0 <col:26, col:29> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x558d611e9ea8 <col:26, col:29> 'const int64_t':'const long' lvalue .x 0x558d611e20e8
|       |   `-MemberExpr 0x558d611e9e78 <col:26> 'const Timestamp::rep_t' lvalue ->_t 0x558d611e3098
|       |     `-CXXThisExpr 0x558d611e9e68 <col:26> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x558d611e9fc8 <col:32, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|         `-BinaryOperator 0x558d611e9f48 <col:32, col:49> 'int' '/'
|           |-ImplicitCastExpr 0x558d611e9f18 <col:32> 'int' <IntegralCast>
|           | `-DeclRefExpr 0x558d611e9ed8 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x558d611d88f0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|           `-ImplicitCastExpr 0x558d611e9f30 <col:49> 'int' <IntegralCast>
|             `-DeclRefExpr 0x558d611e9ef8 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x558d611d8740 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x558d611dc4d8 <line:281:5, line:287:5> line:281:23 nsecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x558d611ea188 <col:39, line:287:5>
|   `-ReturnStmt 0x558d611ea178 <line:283:9, col:53>
|     `-BinaryOperator 0x558d611ea158 <col:16, col:53> 'long' '*'
|       |-ImplicitCastExpr 0x558d611ea128 <col:16, col:19> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x558d611ea048 <col:16, col:19> 'const int64_t':'const long' lvalue .x 0x558d611e20e8
|       |   `-MemberExpr 0x558d611ea018 <col:16> 'const Timestamp::rep_t' lvalue ->_t 0x558d611e3098
|       |     `-CXXThisExpr 0x558d611ea008 <col:16> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x558d611ea140 <col:23, col:53> 'long' <IntegralCast>
|         `-ParenExpr 0x558d611ea108 <col:23, col:53> 'int'
|           `-BinaryOperator 0x558d611ea0e8 <col:24, col:39> 'int' '/'
|             |-ImplicitCastExpr 0x558d611ea0b8 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x558d611ea078 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x558d611d8590 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x558d611ea0d0 <col:39> 'int' <IntegralCast>
|               `-DeclRefExpr 0x558d611ea098 <col:39> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x558d611d88f0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x558d611dc5c8 <line:290:5, line:293:5> line:290:22 msec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x558d611eb420 <col:40, line:293:5>
|   |-DeclStmt 0x558d611ea2d0 <line:291:9, col:48>
|   | `-VarDecl 0x558d611ea1b0 <col:9, col:33> col:18 used x 'uint32_t':'unsigned int' cinit
|   |   `-BinaryOperator 0x558d611ea2b0 <col:22, col:33> 'unsigned int' '%'
|   |     |-CXXMemberCallExpr 0x558d611ea258 <col:22, col:29> 'uint32_t':'unsigned int'
|   |     | `-MemberExpr 0x558d611ea228 <col:22> '<bound member function type>' ->subsec 0x558d611db568
|   |     |   `-CXXThisExpr 0x558d611ea218 <col:22> 'const Timestamp *' implicit this
|   |     `-ImplicitCastExpr 0x558d611ea298 <col:33> 'unsigned int' <IntegralCast>
|   |       `-DeclRefExpr 0x558d611ea278 <col:33> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x558d611d89c0 'subsec_per_msec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x558d611eb410 <line:292:9, col:70>
|     `-ExprWithCleanups 0x558d611eb3f8 <col:16, col:70> 'Timestamp'
|       `-CXXConstructExpr 0x558d611eb3c8 <col:16, col:70> 'Timestamp' 'void (const Timestamp &) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x558d611eb3b0 <col:16, col:70> 'const Timestamp' lvalue
|           `-ParenExpr 0x558d611eb390 <col:16, col:70> 'const Timestamp'
|             `-ConditionalOperator 0x558d611eb360 <col:17, col:66> 'const Timestamp'
|               |-ImplicitCastExpr 0x558d611eb0f8 <col:17> 'bool' <IntegralToBoolean>
|               | `-ImplicitCastExpr 0x558d611eb0e0 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|               |   `-DeclRefExpr 0x558d611ea2e8 <col:17> 'uint32_t':'unsigned int' lvalue Var 0x558d611ea1b0 'x' 'uint32_t':'unsigned int'
|               |-CXXConstructExpr 0x558d611eb300 <col:21, col:61> 'const Timestamp' 'void (const Timestamp &) noexcept' elidable
|               | `-MaterializeTemporaryExpr 0x558d611eb2e8 <col:21, col:61> 'const Timestamp' lvalue
|               |   `-CXXConstructExpr 0x558d611eb2b8 <col:21, col:61> 'const Timestamp' 'void (Timestamp &&) noexcept' elidable
|               |     `-MaterializeTemporaryExpr 0x558d611eb110 <col:21, col:61> 'Timestamp' xvalue
|               |       `-CXXOperatorCallExpr 0x558d611eb080 <col:21, col:61> 'Timestamp'
|               |         |-ImplicitCastExpr 0x558d611eb068 <col:27> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|               |         | `-DeclRefExpr 0x558d611eb018 <col:27> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x558d611d7e98 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|               |         |-CXXConstructExpr 0x558d611eafb8 <col:21, col:22> 'Timestamp' 'void (const Timestamp &) noexcept'
|               |         | `-UnaryOperator 0x558d611ea318 <col:21, col:22> 'const Timestamp' lvalue prefix '*' cannot overflow
|               |         |   `-CXXThisExpr 0x558d611ea308 <col:22> 'const Timestamp *' this
|               |         `-MaterializeTemporaryExpr 0x558d611eb000 <col:29, col:61> 'const Timestamp' lvalue
|               |           `-ImplicitCastExpr 0x558d611eafe8 <col:29, col:61> 'const Timestamp' <NoOp>
|               |             `-CXXTemporaryObjectExpr 0x558d611ea7d8 <col:29, col:61> 'Timestamp' 'void (int, uint32_t)'
|               |               |-IntegerLiteral 0x558d611ea340 <col:39> 'int' 0
|               |               `-BinaryOperator 0x558d611ea3d0 <col:42, col:60> 'unsigned int' '-'
|               |                 |-ImplicitCastExpr 0x558d611ea3a0 <col:42> 'unsigned int' <IntegralCast>
|               |                 | `-DeclRefExpr 0x558d611ea360 <col:42> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x558d611d89c0 'subsec_per_msec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|               |                 `-ImplicitCastExpr 0x558d611ea3b8 <col:60> 'uint32_t':'unsigned int' <LValueToRValue>
|               |                   `-DeclRefExpr 0x558d611ea380 <col:60> 'uint32_t':'unsigned int' lvalue Var 0x558d611ea1b0 'x' 'uint32_t':'unsigned int'
|               `-CXXConstructExpr 0x558d611eb330 <col:65, col:66> 'const Timestamp' 'void (const Timestamp &) noexcept'
|                 `-UnaryOperator 0x558d611eb0c8 <col:65, col:66> 'const Timestamp' lvalue prefix '*' cannot overflow
|                   `-CXXThisExpr 0x558d611eb0b8 <col:66> 'const Timestamp *' this
|-CXXMethodDecl 0x558d611dc688 <line:295:5, line:302:5> line:295:22 usec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x558d611eb978 <col:40, line:302:5>
|   |-DeclStmt 0x558d611eb570 <line:297:9, col:48>
|   | `-VarDecl 0x558d611eb450 <col:9, col:33> col:18 used x 'uint32_t':'unsigned int' cinit
|   |   `-BinaryOperator 0x558d611eb550 <col:22, col:33> 'unsigned int' '%'
|   |     |-CXXMemberCallExpr 0x558d611eb4f8 <col:22, col:29> 'uint32_t':'unsigned int'
|   |     | `-MemberExpr 0x558d611eb4c8 <col:22> '<bound member function type>' ->subsec 0x558d611db568
|   |     |   `-CXXThisExpr 0x558d611eb4b8 <col:22> 'const Timestamp *' implicit this
|   |     `-ImplicitCastExpr 0x558d611eb538 <col:33> 'unsigned int' <IntegralCast>
|   |       `-DeclRefExpr 0x558d611eb518 <col:33> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x558d611d8a90 'subsec_per_usec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x558d611eb968 <line:298:9, col:70>
|     `-ExprWithCleanups 0x558d611eb950 <col:16, col:70> 'Timestamp'
|       `-CXXConstructExpr 0x558d611eb920 <col:16, col:70> 'Timestamp' 'void (const Timestamp &) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x558d611eb908 <col:16, col:70> 'const Timestamp' lvalue
|           `-ParenExpr 0x558d611eb8e8 <col:16, col:70> 'const Timestamp'
|             `-ConditionalOperator 0x558d611eb8b8 <col:17, col:66> 'const Timestamp'
|               |-ImplicitCastExpr 0x558d611eb7e0 <col:17> 'bool' <IntegralToBoolean>
|               | `-ImplicitCastExpr 0x558d611eb7c8 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|               |   `-DeclRefExpr 0x558d611eb588 <col:17> 'uint32_t':'unsigned int' lvalue Var 0x558d611eb450 'x' 'uint32_t':'unsigned int'
|               |-CXXConstructExpr 0x558d611eb858 <col:21, col:61> 'const Timestamp' 'void (const Timestamp &) noexcept' elidable
|               | `-MaterializeTemporaryExpr 0x558d611eb840 <col:21, col:61> 'const Timestamp' lvalue
|               |   `-CXXConstructExpr 0x558d611eb810 <col:21, col:61> 'const Timestamp' 'void (Timestamp &&) noexcept' elidable
|               |     `-MaterializeTemporaryExpr 0x558d611eb7f8 <col:21, col:61> 'Timestamp' xvalue
|               |       `-CXXOperatorCallExpr 0x558d611eb768 <col:21, col:61> 'Timestamp'
|               |         |-ImplicitCastExpr 0x558d611eb750 <col:27> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|               |         | `-DeclRefExpr 0x558d611eb730 <col:27> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x558d611d7e98 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|               |         |-CXXConstructExpr 0x558d611eb6d0 <col:21, col:22> 'Timestamp' 'void (const Timestamp &) noexcept'
|               |         | `-UnaryOperator 0x558d611eb5b8 <col:21, col:22> 'const Timestamp' lvalue prefix '*' cannot overflow
|               |         |   `-CXXThisExpr 0x558d611eb5a8 <col:22> 'const Timestamp *' this
|               |         `-MaterializeTemporaryExpr 0x558d611eb718 <col:29, col:61> 'const Timestamp' lvalue
|               |           `-ImplicitCastExpr 0x558d611eb700 <col:29, col:61> 'const Timestamp' <NoOp>
|               |             `-CXXTemporaryObjectExpr 0x558d611eb690 <col:29, col:61> 'Timestamp' 'void (int, uint32_t)'
|               |               |-IntegerLiteral 0x558d611eb5e0 <col:39> 'int' 0
|               |               `-BinaryOperator 0x558d611eb670 <col:42, col:60> 'unsigned int' '-'
|               |                 |-ImplicitCastExpr 0x558d611eb640 <col:42> 'unsigned int' <IntegralCast>
|               |                 | `-DeclRefExpr 0x558d611eb600 <col:42> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x558d611d8a90 'subsec_per_usec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|               |                 `-ImplicitCastExpr 0x558d611eb658 <col:60> 'uint32_t':'unsigned int' <LValueToRValue>
|               |                   `-DeclRefExpr 0x558d611eb620 <col:60> 'uint32_t':'unsigned int' lvalue Var 0x558d611eb450 'x' 'uint32_t':'unsigned int'
|               `-CXXConstructExpr 0x558d611eb888 <col:65, col:66> 'const Timestamp' 'void (const Timestamp &) noexcept'
|                 `-UnaryOperator 0x558d611eb7b0 <col:65, col:66> 'const Timestamp' lvalue prefix '*' cannot overflow
|                   `-CXXThisExpr 0x558d611eb7a0 <col:66> 'const Timestamp *' this
|-CXXMethodDecl 0x558d611dc748 <line:304:5, line:306:5> line:304:22 nsec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x558d611eba00 <col:40, line:306:5>
|   `-ReturnStmt 0x558d611eb9f0 <line:305:9, col:17>
|     `-CXXConstructExpr 0x558d611eb9c0 <col:16, col:17> 'Timestamp' 'void (const Timestamp &) noexcept'
|       `-UnaryOperator 0x558d611eb9a8 <col:16, col:17> 'const Timestamp' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x558d611eb998 <col:17> 'const Timestamp *' this
|-CXXMethodDecl 0x558d611dc8e8 <line:310:5, col:65> col:29 make_jiffies 'Timestamp (click_jiffies_t)' static inline
| `-ParmVarDecl 0x558d611dc7f8 <col:42, col:58> col:58 jiffies 'click_jiffies_t':'unsigned int'
|-CXXMethodDecl 0x558d611dcab8 <line:312:5, col:76> col:29 make_jiffies 'Timestamp (click_jiffies_difference_t)' static inline
| `-ParmVarDecl 0x558d611dc9c0 <col:42, col:69> col:69 jiffies 'click_jiffies_difference_t':'int'
|-CXXMethodDecl 0x558d611dcba8 <line:314:5, col:38> col:28 jiffies 'click_jiffies_t () const' inline
|-CXXMethodDecl 0x558d611dcd18 <line:318:5, line:320:5> line:318:29 make_sec 'Timestamp (Timestamp::seconds_type)' static inline
| |-ParmVarDecl 0x558d611dcc58 <col:38, col:51> col:51 used sec 'Timestamp::seconds_type':'int'
| `-CompoundStmt 0x558d611ebb48 <col:56, line:320:5>
|   `-ReturnStmt 0x558d611ebb38 <line:319:9, col:32>
|     `-ExprWithCleanups 0x558d611ebb20 <col:16, col:32> 'Timestamp'
|       `-CXXConstructExpr 0x558d611ebaf0 <col:16, col:32> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x558d611ebad8 <col:16, col:32> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x558d611eba98 <col:16, col:32> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x558d611eba68 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x558d611eba28 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x558d611dcc58 'sec' 'Timestamp::seconds_type':'int'
|             `-ImplicitCastExpr 0x558d611eba80 <col:31> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x558d611eba48 <col:31> 'int' 0
|-CXXMethodDecl 0x558d611dcf58 <line:324:5, line:326:5> line:324:29 make_msec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x558d611dcdd0 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x558d611dce48 <col:57, col:66> col:66 used msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x558d611ebd18 <col:72, line:326:5>
|   `-ReturnStmt 0x558d611ebd08 <line:325:9, col:51>
|     `-ExprWithCleanups 0x558d611ebcf0 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x558d611ebcc0 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x558d611ebca8 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x558d611ebc68 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x558d611ebc50 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x558d611ebb70 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x558d611dcdd0 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x558d611ebc10 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x558d611ebbf8 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x558d611ebb90 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x558d611e1840 'msec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x558d611ebc38 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x558d611ebbb0 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x558d611dce48 'msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558d611dd108 <line:328:5, line:337:5> line:328:29 used make_msec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x558d611dd018 <col:39, col:50> col:50 used msec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x558d611ec3e0 <col:56, line:337:5>
|   |-DeclStmt 0x558d611ec018 <line:329:9, col:51>
|   | `-VarDecl 0x558d611ebd40 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x558d611ec000 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x558d611ebfd0 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x558d611ebfb8 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x558d611ebfa0 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x558d611ebf70 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x558d611ebf58 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x558d611ebf40 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x558d611ebe30 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x558d611ec1d0 <line:331:9, col:55> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x558d611ec080 <col:9, col:14> 'int64_t':'long' lvalue .x 0x558d611e20e8
|   | | `-MemberExpr 0x558d611ec050 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x558d611e3098
|   | |   `-DeclRefExpr 0x558d611ec030 <col:9> 'Timestamp' lvalue Var 0x558d611ebd40 't' 'Timestamp'
|   | `-BinaryOperator 0x558d611ec1b0 <col:18, col:55> 'long' '*'
|   |   |-ImplicitCastExpr 0x558d611ec180 <col:18> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x558d611ec0b0 <col:18> 'Timestamp::value_type':'long' lvalue ParmVar 0x558d611dd018 'msec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x558d611ec198 <col:25, col:55> 'long' <IntegralCast>
|   |     `-ParenExpr 0x558d611ec160 <col:25, col:55> 'int'
|   |       `-BinaryOperator 0x558d611ec140 <col:26, col:43> 'int' '/'
|   |         |-ImplicitCastExpr 0x558d611ec110 <col:26> 'int' <IntegralCast>
|   |         | `-DeclRefExpr 0x558d611ec0d0 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x558d611d88f0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |         `-ImplicitCastExpr 0x558d611ec128 <col:43> 'int' <IntegralCast>
|   |           `-DeclRefExpr 0x558d611ec0f0 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x558d611d8860 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x558d611ec3c8 <line:336:9, col:16>
|     `-CXXConstructExpr 0x558d611ec398 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x558d611ec380 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x558d611ec360 <col:16> 'Timestamp' lvalue Var 0x558d611ebd40 't' 'Timestamp'
|-CXXMethodDecl 0x558d611dd2d0 <line:341:5, line:343:5> line:341:29 make_usec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x558d611dd1c0 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x558d611dd238 <col:57, col:66> col:66 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x558d611ec598 <col:72, line:343:5>
|   `-ReturnStmt 0x558d611ec588 <line:342:9, col:51>
|     `-ExprWithCleanups 0x558d611ec570 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x558d611ec540 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x558d611ec528 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x558d611ec4e8 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x558d611ec4d0 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x558d611ec418 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x558d611dd1c0 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x558d611ec490 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x558d611ec478 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x558d611ec438 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x558d611e1988 'usec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x558d611ec4b8 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x558d611ec458 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x558d611dd238 'usec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558d611dd420 <line:345:5, line:354:5> line:345:29 used make_usec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x558d611dd390 <col:39, col:50> col:50 used usec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x558d611ec9e0 <col:56, line:354:5>
|   |-DeclStmt 0x558d611ec788 <line:346:9, col:51>
|   | `-VarDecl 0x558d611ec5c0 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x558d611ec770 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x558d611ec740 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x558d611ec728 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x558d611ec710 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x558d611ec6e0 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x558d611ec6c8 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x558d611ec6b0 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x558d611ec680 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x558d611ec940 <line:348:9, col:55> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x558d611ec7f0 <col:9, col:14> 'int64_t':'long' lvalue .x 0x558d611e20e8
|   | | `-MemberExpr 0x558d611ec7c0 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x558d611e3098
|   | |   `-DeclRefExpr 0x558d611ec7a0 <col:9> 'Timestamp' lvalue Var 0x558d611ec5c0 't' 'Timestamp'
|   | `-BinaryOperator 0x558d611ec920 <col:18, col:55> 'long' '*'
|   |   |-ImplicitCastExpr 0x558d611ec8f0 <col:18> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x558d611ec820 <col:18> 'Timestamp::value_type':'long' lvalue ParmVar 0x558d611dd390 'usec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x558d611ec908 <col:25, col:55> 'long' <IntegralCast>
|   |     `-ParenExpr 0x558d611ec8d0 <col:25, col:55> 'int'
|   |       `-BinaryOperator 0x558d611ec8b0 <col:26, col:43> 'int' '/'
|   |         |-ImplicitCastExpr 0x558d611ec880 <col:26> 'int' <IntegralCast>
|   |         | `-DeclRefExpr 0x558d611ec840 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x558d611d88f0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |         `-ImplicitCastExpr 0x558d611ec898 <col:43> 'int' <IntegralCast>
|   |           `-DeclRefExpr 0x558d611ec860 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x558d611d8740 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x558d611ec9c8 <line:353:9, col:16>
|     `-CXXConstructExpr 0x558d611ec998 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x558d611ec980 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x558d611ec960 <col:16> 'Timestamp' lvalue Var 0x558d611ec5c0 't' 'Timestamp'
|-CXXMethodDecl 0x558d611dd5e8 <line:358:5, line:360:5> line:358:29 make_nsec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x558d611dd4d8 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x558d611dd550 <col:57, col:66> col:66 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x558d611ecb98 <col:72, line:360:5>
|   `-ReturnStmt 0x558d611ecb88 <line:359:9, col:51>
|     `-ExprWithCleanups 0x558d611ecb70 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x558d611ecb40 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x558d611ecb28 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x558d611ecae8 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x558d611ecad0 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x558d611eca18 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x558d611dd4d8 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x558d611eca90 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x558d611eca78 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x558d611eca38 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x558d611e1ad0 'nsec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x558d611ecab8 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x558d611eca58 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x558d611dd550 'nsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558d611dd738 <line:362:5, line:371:5> line:362:29 make_nsec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x558d611dd6a8 <col:39, col:50> col:50 used nsec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x558d611f9508 <col:56, line:371:5>
|   |-DeclStmt 0x558d611ecd88 <line:363:9, col:51>
|   | `-VarDecl 0x558d611ecbc0 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x558d611ecd70 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x558d611ecd40 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x558d611ecd28 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x558d611ecd10 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x558d611ecce0 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x558d611eccc8 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x558d611eccb0 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x558d611ecc80 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x558d611f9468 <line:365:9, col:63> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x558d611ecdf0 <col:9, col:14> 'int64_t':'long' lvalue .x 0x558d611e20e8
|   | | `-MemberExpr 0x558d611ecdc0 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x558d611e3098
|   | |   `-DeclRefExpr 0x558d611ecda0 <col:9> 'Timestamp' lvalue Var 0x558d611ecbc0 't' 'Timestamp'
|   | `-CallExpr 0x558d611f9408 <col:18, col:63> 'Timestamp::value_type':'long'
|   |   |-ImplicitCastExpr 0x558d611f93f0 <col:18> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x558d611ece20 <col:18> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x558d611e33c8 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|   |   |-ImplicitCastExpr 0x558d611f9438 <col:28> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x558d611ece40 <col:28> 'Timestamp::value_type':'long' lvalue ParmVar 0x558d611dd6a8 'nsec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x558d611f9450 <col:34, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|   |     `-BinaryOperator 0x558d611f93d0 <col:34, col:49> 'int' '/'
|   |       |-ImplicitCastExpr 0x558d611f93a0 <col:34> 'int' <IntegralCast>
|   |       | `-DeclRefExpr 0x558d611ece60 <col:34> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x558d611d8590 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |       `-ImplicitCastExpr 0x558d611f93b8 <col:49> 'int' <IntegralCast>
|   |         `-DeclRefExpr 0x558d611ece80 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x558d611d88f0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x558d611f94f0 <line:370:9, col:16>
|     `-CXXConstructExpr 0x558d611f94c0 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x558d611f94a8 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x558d611f9488 <col:16> 'Timestamp' lvalue Var 0x558d611ecbc0 't' 'Timestamp'
|-CXXMethodDecl 0x558d611dd828 <line:375:5, line:377:5> line:375:29 epsilon 'Timestamp ()' static inline
| `-CompoundStmt 0x558d611f9648 <col:39, line:377:5>
|   `-ReturnStmt 0x558d611f9638 <line:376:9, col:30>
|     `-ExprWithCleanups 0x558d611f9620 <col:16, col:30> 'Timestamp'
|       `-CXXConstructExpr 0x558d611f95f0 <col:16, col:30> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x558d611f95d8 <col:16, col:30> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x558d611f9598 <col:16, col:30> 'Timestamp' 'void (int, uint32_t)'
|             |-IntegerLiteral 0x558d611f9540 <col:26> 'int' 0
|             `-ImplicitCastExpr 0x558d611f9580 <col:29> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x558d611f9560 <col:29> 'int' 1
|-CXXMethodDecl 0x558d611dd8e8 <line:380:5, line:382:5> line:380:17 clear 'void ()' inline
| `-CompoundStmt 0x558d611f9728 <col:25, line:382:5>
|   `-CXXMemberCallExpr 0x558d611f96e0 <line:381:9, col:20> 'void'
|     |-MemberExpr 0x558d611f9670 <col:9> '<bound member function type>' ->assign 0x558d611ddae8
|     | `-CXXThisExpr 0x558d611f9660 <col:9> 'Timestamp *' implicit this
|     |-IntegerLiteral 0x558d611f96a0 <col:16> 'int' 0
|     `-ImplicitCastExpr 0x558d611f9710 <col:19> 'uint32_t':'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x558d611f96c0 <col:19> 'int' 0
|-CXXMethodDecl 0x558d611ddae8 <line:388:5, line:395:5> line:388:17 used assign 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x558d611dd998 <col:24, col:37> col:37 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x558d611dda10 <col:42, col:60> col:51 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x558d611e4cc0 <col:60> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x558d611e4ca0 <col:60> 'int' 0
| `-CompoundStmt 0x558d611f9920 <col:63, line:395:5>
|   `-BinaryOperator 0x558d611f9900 <line:390:9, col:49> 'int64_t':'long' lvalue '='
|     |-MemberExpr 0x558d611f9780 <col:9, col:12> 'int64_t':'long' lvalue .x 0x558d611e20e8
|     | `-MemberExpr 0x558d611f9750 <col:9> 'Timestamp::rep_t' lvalue ->_t 0x558d611e3098
|     |   `-CXXThisExpr 0x558d611f9740 <col:9> 'Timestamp *' implicit this
|     `-BinaryOperator 0x558d611f98e0 <col:16, col:49> 'long' '+'
|       |-BinaryOperator 0x558d611f9870 <col:16, col:32> 'long' '*'
|       | |-CStyleCastExpr 0x558d611f9810 <col:16, col:26> 'int64_t':'long' <NoOp>
|       | | `-ImplicitCastExpr 0x558d611f97f8 <col:26> 'int64_t':'long' <IntegralCast> part_of_explicit_cast
|       | |   `-ImplicitCastExpr 0x558d611f97e0 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue> part_of_explicit_cast
|       | |     `-DeclRefExpr 0x558d611f97b0 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x558d611dd998 'sec' 'Timestamp::seconds_type':'int'
|       | `-ImplicitCastExpr 0x558d611f9858 <col:32> 'long' <IntegralCast>
|       |   `-DeclRefExpr 0x558d611f9838 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x558d611d88f0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|       `-ImplicitCastExpr 0x558d611f98c8 <col:49> 'long' <IntegralCast>
|         `-ImplicitCastExpr 0x558d611f98b0 <col:49> 'uint32_t':'unsigned int' <LValueToRValue>
|           `-DeclRefExpr 0x558d611f9890 <col:49> 'uint32_t':'unsigned int' lvalue ParmVar 0x558d611dda10 'subsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558d611ddcb8 <line:397:5, line:399:5> line:397:17 used assign_usec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x558d611ddba8 <col:29, col:42> col:42 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x558d611ddc20 <col:47, col:56> col:56 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x558d611f9a78 <col:62, line:399:5>
|   `-CXXMemberCallExpr 0x558d611f9a30 <line:398:9, col:41> 'void'
|     |-MemberExpr 0x558d611f9948 <col:9> '<bound member function type>' ->assign 0x558d611ddae8
|     | `-CXXThisExpr 0x558d611f9938 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x558d611f9a60 <col:16> 'Timestamp::seconds_type':'int' <LValueToRValue>
|     | `-DeclRefExpr 0x558d611f9978 <col:16> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x558d611ddba8 'sec' 'Timestamp::seconds_type':'int'
|     `-CallExpr 0x558d611f99f0 <col:21, col:40> 'uint32_t':'unsigned int'
|       |-ImplicitCastExpr 0x558d611f99d8 <col:21> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x558d611f9998 <col:21> 'uint32_t (uint32_t)' lvalue CXXMethod 0x558d611e1988 'usec_to_subsec' 'uint32_t (uint32_t)'
|       `-ImplicitCastExpr 0x558d611f9a18 <col:36> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x558d611f99b8 <col:36> 'uint32_t':'unsigned int' lvalue ParmVar 0x558d611ddc20 'usec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558d611dde88 <line:401:5, line:403:5> line:401:17 used assign_nsec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x558d611ddd78 <col:29, col:42> col:42 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x558d611dddf0 <col:47, col:56> col:56 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x558d611f9bd0 <col:62, line:403:5>
|   `-CXXMemberCallExpr 0x558d611f9b88 <line:402:9, col:41> 'void'
|     |-MemberExpr 0x558d611f9aa0 <col:9> '<bound member function type>' ->assign 0x558d611ddae8
|     | `-CXXThisExpr 0x558d611f9a90 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x558d611f9bb8 <col:16> 'Timestamp::seconds_type':'int' <LValueToRValue>
|     | `-DeclRefExpr 0x558d611f9ad0 <col:16> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x558d611ddd78 'sec' 'Timestamp::seconds_type':'int'
|     `-CallExpr 0x558d611f9b48 <col:21, col:40> 'uint32_t':'unsigned int'
|       |-ImplicitCastExpr 0x558d611f9b30 <col:21> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x558d611f9af0 <col:21> 'uint32_t (uint32_t)' lvalue CXXMethod 0x558d611e1ad0 'nsec_to_subsec' 'uint32_t (uint32_t)'
|       `-ImplicitCastExpr 0x558d611f9b70 <col:36> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x558d611f9b10 <col:36> 'uint32_t':'unsigned int' lvalue ParmVar 0x558d611dddf0 'nsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558d611de058 <line:408:5, col:86> col:17 set 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x558d611ddf48 <col:21, col:34> col:34 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x558d611ddfc0 <col:39, col:57> col:48 subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x558d611e4cf8 <col:57> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x558d611e4cd8 <col:57> 'int' 0
| `-DeprecatedAttr 0x558d611de108 <col:75> "" ""
|-CXXMethodDecl 0x558d611de298 <line:411:5, col:85> col:17 set_usec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x558d611de188 <col:26, col:39> col:39 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x558d611de200 <col:44, col:53> col:53 usec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x558d611de348 <col:74> "" ""
|-CXXMethodDecl 0x558d611de4d8 <line:414:5, col:85> col:17 set_nsec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x558d611de3c8 <col:26, col:39> col:39 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x558d611de440 <col:44, col:53> col:53 nsec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x558d611de588 <col:74> "" ""
|-CXXMethodDecl 0x558d611de618 <line:417:5, col:53> col:17 set_now 'void ()' inline
| `-DeprecatedAttr 0x558d611de6b8 <col:42> "" ""
|-CXXMethodDecl 0x558d611e0ef0 <line:420:5, col:53> col:9 set_timeval_ioctl 'int (int, int)'
| |-ParmVarDecl 0x558d611e0dd0 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x558d611e0e50 <col:35, col:39> col:39 ioctl_selector 'int'
|-CXXMethodDecl 0x558d611e0fc0 <line:432:5, col:33> col:29 now 'Timestamp ()' static inline
|-CXXMethodDecl 0x558d611e1080 <line:438:5, col:56> col:45 used assign_now 'void ()'
| |-NoInlineAttr 0x558d611e1120 <col:20>
| `-OptimizeNoneAttr 0x558d611e1178 <col:30>
|-CXXMethodDecl 0x558d611e11c0 <line:446:5, col:36> col:29 used recent 'Timestamp ()' static inline
|-CXXMethodDecl 0x558d611e1280 <line:452:5, col:31> col:17 used assign_recent 'void ()' inline
|-CXXMethodDecl 0x558d611e1340 <line:466:5, col:40> col:29 now_steady 'Timestamp ()' static inline
|-CXXMethodDecl 0x558d611e1400 <line:472:5, col:35> col:17 used assign_now_steady 'void ()' inline
|-CXXMethodDecl 0x558d611e14c0 <line:481:5, col:43> col:29 used recent_steady 'Timestamp ()' static inline
|-CXXMethodDecl 0x558d611e1580 <line:487:5, col:38> col:17 used assign_recent_steady 'void ()' inline
|-CXXMethodDecl 0x558d611e1640 <line:496:5, col:22> col:12 unparse 'String () const'
|-CXXMethodDecl 0x558d611e1700 <line:501:5, col:31> col:12 unparse_interval 'String () const'
|-CXXMethodDecl 0x558d611e1840 <line:510:5, line:512:5> line:510:28 used msec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x558d611e17b0 <col:43, col:52> col:52 used msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x558d611f9d18 <col:58, line:512:5>
|   `-ReturnStmt 0x558d611f9d08 <line:511:9, col:53>
|     `-BinaryOperator 0x558d611f9ce8 <col:16, col:53> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x558d611f9cb8 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x558d611f9be8 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x558d611e17b0 'msec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x558d611f9cd0 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x558d611f9c98 <col:23, col:53> 'int'
|           `-BinaryOperator 0x558d611f9c78 <col:24, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x558d611f9c48 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x558d611f9c08 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x558d611d88f0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x558d611f9c60 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x558d611f9c28 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x558d611d8860 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x558d611e1988 <line:514:5, line:516:5> line:514:28 used usec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x558d611e18f8 <col:43, col:52> col:52 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x558d611f9e60 <col:58, line:516:5>
|   `-ReturnStmt 0x558d611f9e50 <line:515:9, col:53>
|     `-BinaryOperator 0x558d611f9e30 <col:16, col:53> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x558d611f9e00 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x558d611f9d30 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x558d611e18f8 'usec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x558d611f9e18 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x558d611f9de0 <col:23, col:53> 'int'
|           `-BinaryOperator 0x558d611f9dc0 <col:24, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x558d611f9d90 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x558d611f9d50 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x558d611d88f0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x558d611f9da8 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x558d611f9d70 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x558d611d8740 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x558d611e1ad0 <line:518:5, line:520:5> line:518:28 used nsec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x558d611e1a40 <col:43, col:52> col:52 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x558d611f9fa8 <col:58, line:520:5>
|   `-ReturnStmt 0x558d611f9f98 <line:519:9, col:53>
|     `-BinaryOperator 0x558d611f9f78 <col:16, col:53> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x558d611f9f48 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x558d611f9e78 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x558d611e1a40 'nsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x558d611f9f60 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x558d611f9f28 <col:23, col:53> 'int'
|           `-BinaryOperator 0x558d611f9f08 <col:24, col:39> 'int' '/'
|             |-ImplicitCastExpr 0x558d611f9ed8 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x558d611f9e98 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x558d611d8590 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x558d611f9ef0 <col:39> 'int' <IntegralCast>
|               `-DeclRefExpr 0x558d611f9eb8 <col:39> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x558d611d88f0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x558d611e1c18 <line:522:5, line:524:5> line:522:28 used subsec_to_msec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x558d611e1b88 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x558d611fa0f0 <col:60, line:524:5>
|   `-ReturnStmt 0x558d611fa0e0 <line:523:9, col:55>
|     `-BinaryOperator 0x558d611fa0c0 <col:16, col:55> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x558d611fa090 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x558d611f9fc0 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x558d611e1b88 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x558d611fa0a8 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x558d611fa070 <col:25, col:55> 'int'
|           `-BinaryOperator 0x558d611fa050 <col:26, col:43> 'int' '/'
|             |-ImplicitCastExpr 0x558d611fa020 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x558d611f9fe0 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x558d611d88f0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x558d611fa038 <col:43> 'int' <IntegralCast>
|               `-DeclRefExpr 0x558d611fa000 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x558d611d8860 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x558d611e1d60 <line:526:5, line:528:5> line:526:28 used subsec_to_usec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x558d611e1cd0 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x558d611fa238 <col:60, line:528:5>
|   `-ReturnStmt 0x558d611fa228 <line:527:9, col:55>
|     `-BinaryOperator 0x558d611fa208 <col:16, col:55> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x558d611fa1d8 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x558d611fa108 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x558d611e1cd0 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x558d611fa1f0 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x558d611fa1b8 <col:25, col:55> 'int'
|           `-BinaryOperator 0x558d611fa198 <col:26, col:43> 'int' '/'
|             |-ImplicitCastExpr 0x558d611fa168 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x558d611fa128 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x558d611d88f0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x558d611fa180 <col:43> 'int' <IntegralCast>
|               `-DeclRefExpr 0x558d611fa148 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x558d611d8740 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x558d611e1ea8 <line:530:5, line:532:5> line:530:28 used subsec_to_nsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x558d611e1e18 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x558d611fa380 <col:60, line:532:5>
|   `-ReturnStmt 0x558d611fa370 <line:531:9, col:55>
|     `-BinaryOperator 0x558d611fa350 <col:16, col:55> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x558d611fa320 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x558d611fa250 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x558d611e1e18 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x558d611fa338 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x558d611fa300 <col:25, col:55> 'int'
|           `-BinaryOperator 0x558d611fa2e0 <col:26, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x558d611fa2b0 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x558d611fa270 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x558d611d8590 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x558d611fa2c8 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x558d611fa290 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x558d611d88f0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXRecordDecl 0x558d611e1f50 prev 0x558d611d8d90 <line:539:5, line:566:5> line:539:11 referenced union rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x558d611e2048 <col:5, col:11> col:11 implicit union rep_t
| |-FieldDecl 0x558d611e20e8 <line:541:9, col:17> col:17 referenced x 'int64_t':'long'
| |-CXXConstructorDecl 0x558d611e8eb0 <line:539:11> col:11 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x558d611e9298 <col:11>
| |-CXXConstructorDecl 0x558d611e8f90 <col:11> col:11 implicit used constexpr rep_t 'void (const Timestamp::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x558d611e9078 <col:11> col:11 'const Timestamp::rep_t &'
| | `-CompoundStmt 0x558d611e99e0 <col:11>
| |-CXXConstructorDecl 0x558d611e9118 <col:11> col:11 implicit used constexpr rep_t 'void (Timestamp::rep_t &&) noexcept' inline default trivial
| | |-ParmVarDecl 0x558d611e9228 <col:11> col:11 'Timestamp::rep_t &&'
| | `-CompoundStmt 0x558d611eb238 <col:11>
| |-CXXDestructorDecl 0x558d611ea548 <col:11> col:11 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x558d60ef10f8 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(const Timestamp::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x558d60ef1208 <col:11> col:11 'const Timestamp::rep_t &'
| | `-CompoundStmt 0x558d60ef1ad0 <col:11>
| |   `-ReturnStmt 0x558d60ef1ac0 <col:11>
| |     `-UnaryOperator 0x558d60ef1aa8 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x558d60ef1a98 <col:11> 'Timestamp::rep_t *' this
| `-CXXMethodDecl 0x558d60ef1278 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(Timestamp::rep_t &&) noexcept' inline default trivial
|   |-ParmVarDecl 0x558d60ef1388 <col:11> col:11 'Timestamp::rep_t &&'
|   `-CompoundStmt 0x558d61283970 <col:11>
|     `-ReturnStmt 0x558d61283960 <col:11>
|       `-UnaryOperator 0x558d61283948 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x558d61283938 <col:11> 'Timestamp::rep_t *' this
|-EnumDecl 0x558d611e2150 <line:571:5, line:577:5> line:571:10 referenced warp_class_type
| |-EnumConstantDecl 0x558d611e2250 <line:572:9, col:21> col:9 warp_none 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x558d611e2450 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558d611e2230 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x558d611e2210 <col:21> 'int' 0
| |-EnumConstantDecl 0x558d611e22e0 <line:573:9, col:23> col:9 warp_linear 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x558d611e2468 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558d611e22c0 <col:23> 'int' Int: 1
| |     `-IntegerLiteral 0x558d611e22a0 <col:23> 'int' 1
| |-EnumConstantDecl 0x558d611e2370 <line:574:9, col:23> col:9 referenced warp_nowait 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x558d611e2480 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558d611e2350 <col:23> 'int' Int: 2
| |     `-IntegerLiteral 0x558d611e2330 <col:23> 'int' 2
| `-EnumConstantDecl 0x558d611e2400 <line:576:9, col:27> col:9 warp_simulation 'Timestamp::warp_class_type'
|   `-ImplicitCastExpr 0x558d611e2498 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x558d611e23e0 <col:27> 'int' Int: 3
|       `-IntegerLiteral 0x558d611e23c0 <col:27> 'int' 3
|-CXXMethodDecl 0x558d611e24d8 <line:581:5, col:34> col:23 warp_class 'int ()' static inline
|-CXXMethodDecl 0x558d611e25a0 <line:588:5, col:37> col:26 warp_speed 'double ()' static inline
|-CXXMethodDecl 0x558d611e27a8 <line:621:5, col:65> col:17 warp_set_class 'void (Timestamp::warp_class_type, double)' static
| |-ParmVarDecl 0x558d611e2650 <col:32, col:48> col:48 w 'Timestamp::warp_class_type'
| `-ParmVarDecl 0x558d611e26d0 <col:51, col:62> col:58 s 'double' cinit
|   `-FloatingLiteral 0x558d611e4d10 <col:62> 'double' 1.000000e+00
|-CXXMethodDecl 0x558d611e29b8 <line:628:5, col:82> col:17 warp_set_now 'void (const Timestamp &, const Timestamp &)' static
| |-ParmVarDecl 0x558d611e2868 <col:30, col:47> col:47 t_system 'const Timestamp &'
| `-ParmVarDecl 0x558d611e28e0 <col:57, col:74> col:74 t_steady 'const Timestamp &'
|-CXXMethodDecl 0x558d611e2a88 <line:632:5, col:40> col:22 warp_real_delay 'Timestamp () const' inline
|-CXXMethodDecl 0x558d611e2b48 <line:635:5, col:37> col:24 used warp_jumping 'bool ()' static inline
|-CXXMethodDecl 0x558d611e2cb8 <line:640:5, col:57> col:17 warp_jump_steady 'void (const Timestamp &)' static
| `-ParmVarDecl 0x558d611e2bf8 <col:34, col:51> col:51 expiry 'const Timestamp &'
|-CXXMethodDecl 0x558d611e2d80 <line:647:5, col:42> col:29 now_unwarped 'Timestamp ()' static inline
|-CXXMethodDecl 0x558d611e2e40 <line:653:5, col:37> col:17 used assign_now_unwarped 'void ()' inline
|-CXXMethodDecl 0x558d611e2f00 <line:659:5, col:49> col:29 now_steady_unwarped 'Timestamp ()' static inline
|-CXXMethodDecl 0x558d611e2fc0 <line:666:5, col:44> col:17 used assign_now_steady_unwarped 'void ()' inline
|-AccessSpecDecl 0x558d611e3060 <line:670:3, col:10> col:3 private
|-FieldDecl 0x558d611e3098 <line:672:5, col:11> col:11 referenced _t 'Timestamp::rep_t'
|-CXXMethodDecl 0x558d611e3108 <line:674:5, line:684:5> line:674:17 used add_fix 'void ()' inline
| `-CompoundStmt 0x558d611fa398 <col:27, line:684:5>
|-CXXMethodDecl 0x558d611e31c8 <line:686:5, line:696:5> line:686:17 used sub_fix 'void ()' inline
| `-CompoundStmt 0x558d611fa3a8 <col:27, line:696:5>
|-CXXMethodDecl 0x558d611e33c8 <line:698:5, line:700:5> line:698:30 used value_div 'Timestamp::value_type (Timestamp::value_type, uint32_t)' static inline
| |-ParmVarDecl 0x558d611e3278 <col:40, col:51> col:51 used a 'Timestamp::value_type':'long'
| |-ParmVarDecl 0x558d611e32f0 <col:54, col:63> col:63 used b 'uint32_t':'unsigned int'
| `-CompoundStmt 0x558d611fa530 <col:66, line:700:5>
|   `-ReturnStmt 0x558d611fa520 <line:699:9, col:31>
|     `-CallExpr 0x558d611fa4c0 <col:16, col:31> 'int64_t':'long'
|       |-ImplicitCastExpr 0x558d611fa4a8 <col:16> 'int64_t (*)(int64_t, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x558d611fa458 <col:16> 'int64_t (int64_t, uint32_t)' lvalue Function 0x558d61065778 'int_divide' 'int64_t (int64_t, uint32_t)'
|       |-ImplicitCastExpr 0x558d611fa4f0 <col:27> 'Timestamp::value_type':'long' <LValueToRValue>
|       | `-DeclRefExpr 0x558d611fa418 <col:27> 'Timestamp::value_type':'long' lvalue ParmVar 0x558d611e3278 'a' 'Timestamp::value_type':'long'
|       `-ImplicitCastExpr 0x558d611fa508 <col:30> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x558d611fa438 <col:30> 'uint32_t':'unsigned int' lvalue ParmVar 0x558d611e32f0 'b' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558d611e3738 <line:702:5, line:707:5> line:702:24 value_div_mod 'void (int32_t &, int32_t &, Timestamp::value_type, uint32_t)' static inline
| |-ParmVarDecl 0x558d611e3488 <col:38, col:47> col:47 used div 'int32_t &'
| |-ParmVarDecl 0x558d611e3500 <col:52, col:61> col:61 used rem 'int32_t &'
| |-ParmVarDecl 0x558d611e3578 <line:703:38, col:49> col:49 used a 'Timestamp::value_type':'long'
| |-ParmVarDecl 0x558d611e35f0 <col:52, col:61> col:61 used b 'uint32_t':'unsigned int'
| `-CompoundStmt 0x558d611fa880 <col:64, line:707:5>
|   |-DeclStmt 0x558d611fa5c0 <line:704:9, col:24>
|   | `-VarDecl 0x558d611fa558 <col:9, col:20> col:20 used quot 'Timestamp::value_type':'long'
|   |-BinaryOperator 0x558d611fa7d0 <line:705:9, col:39> 'int32_t':'int' lvalue '='
|   | |-DeclRefExpr 0x558d611fa5d8 <col:9> 'int32_t':'int' lvalue ParmVar 0x558d611e3500 'rem' 'int32_t &'
|   | `-ImplicitCastExpr 0x558d611fa7b8 <col:15, col:39> 'int32_t':'int' <IntegralCast>
|   |   `-CallExpr 0x558d611fa750 <col:15, col:39> 'uint32_t':'unsigned int'
|   |     |-ImplicitCastExpr 0x558d611fa738 <col:15> 'uint32_t (*)(int64_t, uint32_t, int64_t &)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x558d611fa6b8 <col:15> 'uint32_t (int64_t, uint32_t, int64_t &)' lvalue Function 0x558d6106aa48 'int_remainder' 'uint32_t (int64_t, uint32_t, int64_t &)'
|   |     |-ImplicitCastExpr 0x558d611fa788 <col:29> 'Timestamp::value_type':'long' <LValueToRValue>
|   |     | `-DeclRefExpr 0x558d611fa658 <col:29> 'Timestamp::value_type':'long' lvalue ParmVar 0x558d611e3578 'a' 'Timestamp::value_type':'long'
|   |     |-ImplicitCastExpr 0x558d611fa7a0 <col:32> 'uint32_t':'unsigned int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x558d611fa678 <col:32> 'uint32_t':'unsigned int' lvalue ParmVar 0x558d611e35f0 'b' 'uint32_t':'unsigned int'
|   |     `-DeclRefExpr 0x558d611fa698 <col:35> 'Timestamp::value_type':'long' lvalue Var 0x558d611fa558 'quot' 'Timestamp::value_type':'long'
|   `-BinaryOperator 0x558d611fa860 <line:706:9, col:15> 'int32_t':'int' lvalue '='
|     |-DeclRefExpr 0x558d611fa7f0 <col:9> 'int32_t':'int' lvalue ParmVar 0x558d611e3488 'div' 'int32_t &'
|     `-ImplicitCastExpr 0x558d611fa848 <col:15> 'int32_t':'int' <IntegralCast>
|       `-ImplicitCastExpr 0x558d611fa830 <col:15> 'Timestamp::value_type':'long' <LValueToRValue>
|         `-DeclRefExpr 0x558d611fa810 <col:15> 'Timestamp::value_type':'long' lvalue Var 0x558d611fa558 'quot' 'Timestamp::value_type':'long'
|-CXXMethodDecl 0x558d611e39d8 <line:709:5, col:67> col:17 used assign_now 'void (bool, bool, bool)' inline
| |-ParmVarDecl 0x558d611e3808 <col:28, col:33> col:33 recent 'bool'
| |-ParmVarDecl 0x558d611e3880 <col:41, col:46> col:46 steady 'bool'
| `-ParmVarDecl 0x558d611e38f8 <col:54, col:59> col:59 unwarped 'bool'
|-CXXMethodDecl 0x558d611e3c78 <line:712:5, col:98> col:24 warp_adjust 'void (bool, const Timestamp &, const Timestamp &)' static inline
| |-ParmVarDecl 0x558d611e3aa0 <col:36, col:41> col:41 steady 'bool'
| |-ParmVarDecl 0x558d611e3b18 <col:49, col:66> col:66 t_raw 'const Timestamp &'
| `-ParmVarDecl 0x558d611e3b90 <col:73, col:90> col:90 t_warped 'const Timestamp &'
|-CXXMethodDecl 0x558d611e3e08 <line:713:5, col:42> col:22 warped 'Timestamp (bool) const' inline
| `-ParmVarDecl 0x558d611e3d40 <col:29, col:34> col:34 steady 'bool'
|-CXXMethodDecl 0x558d611e4008 <line:714:5, col:41> col:10 used warp 'void (bool, bool)'
| |-ParmVarDecl 0x558d611e3ec0 <col:15, col:20> col:20 steady 'bool'
| `-ParmVarDecl 0x558d611e3f38 <col:28, col:33> col:33 from_now 'bool'
|-FriendDecl 0x558d611e42d8 <line:717:5, col:73> col:24
| `-FunctionDecl 0x558d611e4218 parent 0x558d60ce6278 <col:5, col:73> col:24 used operator== 'bool (const Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x558d611e40c8 <col:35, col:52> col:52 a 'const Timestamp &'
|   `-ParmVarDecl 0x558d611e4140 <col:55, col:72> col:72 b 'const Timestamp &'
|-FriendDecl 0x558d611e44f8 <line:718:5, col:72> col:24
| `-FunctionDecl 0x558d611e4438 parent 0x558d60ce6278 <col:5, col:72> col:24 used operator< 'bool (const Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x558d611e4328 <col:34, col:51> col:51 a 'const Timestamp &'
|   `-ParmVarDecl 0x558d611e43a0 <col:54, col:71> col:71 b 'const Timestamp &'
|-FriendDecl 0x558d611e46c0 <line:719:5, col:57> col:29
| `-FunctionDecl 0x558d611e4608 parent 0x558d60ce6278 <col:5, col:57> col:29 operator- 'Timestamp (const Timestamp &)' inline
|   `-ParmVarDecl 0x558d611e4548 <col:39, col:56> col:56 b 'const Timestamp &'
|-FriendDecl 0x558d611e4948 <line:720:5, col:73> col:30
| `-FunctionDecl 0x558d611e4888 parent 0x558d60ce6278 <col:5, col:73> col:30 used operator+= 'Timestamp &(Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x558d611e4738 <col:41, col:52> col:52 a 'Timestamp &'
|   `-ParmVarDecl 0x558d611e47b0 <col:55, col:72> col:72 b 'const Timestamp &'
|-FriendDecl 0x558d611e4b68 <line:721:5, col:73> col:30
| `-FunctionDecl 0x558d611e4aa8 parent 0x558d60ce6278 <col:5, col:73> col:30 used operator-= 'Timestamp &(Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x558d611e4998 <col:41, col:52> col:52 a 'Timestamp &'
|   `-ParmVarDecl 0x558d611e4a10 <col:55, col:72> col:72 b 'const Timestamp &'
|-CXXConstructorDecl 0x558d611ea3f0 <line:122:7> col:7 implicit used constexpr Timestamp 'void (const Timestamp &) noexcept' inline default trivial
| |-ParmVarDecl 0x558d611ea4d8 <col:7> col:7 used 'const Timestamp &'
| |-CXXCtorInitializer Field 0x558d611e3098 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x558d611eaf48 <col:7> 'Timestamp::rep_t' 'void (const Timestamp::rep_t &) noexcept'
| |   `-MemberExpr 0x558d611eaf00 <col:7> 'const Timestamp::rep_t' lvalue ._t 0x558d611e3098
| |     `-DeclRefExpr 0x558d611eaee0 <col:7> 'const Timestamp' lvalue ParmVar 0x558d611ea4d8 '' 'const Timestamp &'
| `-CompoundStmt 0x558d611eafa8 <col:7>
|-CXXConstructorDecl 0x558d611ea658 <col:7> col:7 implicit used constexpr Timestamp 'void (Timestamp &&) noexcept' inline default trivial
| |-ParmVarDecl 0x558d611ea768 <col:7> col:7 used 'Timestamp &&'
| |-CXXCtorInitializer Field 0x558d611e3098 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x558d611eb248 <col:7> 'Timestamp::rep_t' 'void (Timestamp::rep_t &&) noexcept'
| |   `-MemberExpr 0x558d611eb1f0 <col:7> 'Timestamp::rep_t' xvalue ._t 0x558d611e3098
| |     `-CXXStaticCastExpr 0x558d611eb1c0 <col:7> 'Timestamp' xvalue static_cast<class Timestamp &&> <NoOp>
| |       `-DeclRefExpr 0x558d611eb190 <col:7> 'Timestamp' lvalue ParmVar 0x558d611ea768 '' 'Timestamp &&'
| `-CompoundStmt 0x558d611eb2a8 <col:7>
|-CXXDestructorDecl 0x558d611ea818 <col:7> col:7 implicit referenced ~Timestamp 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x558d60ef0f48 <col:7> col:7 implicit used operator= 'Timestamp &(const Timestamp &) noexcept' inline default trivial
| |-ParmVarDecl 0x558d60ef1058 <col:7> col:7 used 'const Timestamp &'
| `-CompoundStmt 0x558d60ef1b48 <col:7>
|   |-CXXMemberCallExpr 0x558d60ef1ae8 <col:7> 'Timestamp::rep_t' lvalue
|   | |-MemberExpr 0x558d60ef1a28 <col:7> '<bound member function type>' .operator= 0x558d60ef10f8
|   | | `-MemberExpr 0x558d60ef1938 <col:7> 'Timestamp::rep_t' lvalue ->_t 0x558d611e3098
|   | |   `-CXXThisExpr 0x558d60ef1928 <col:7> 'Timestamp *' this
|   | `-MemberExpr 0x558d60ef19f8 <col:7> 'const Timestamp::rep_t' lvalue ._t 0x558d611e3098
|   |   `-DeclRefExpr 0x558d60ef19d8 <col:7> 'const Timestamp' lvalue ParmVar 0x558d60ef1058 '' 'const Timestamp &'
|   `-ReturnStmt 0x558d60ef1b38 <col:7>
|     `-UnaryOperator 0x558d60ef1b20 <col:7> 'Timestamp' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x558d60ef1b10 <col:7> 'Timestamp *' this
`-CXXMethodDecl 0x558d60ef13f8 <col:7> col:7 implicit used operator= 'Timestamp &(Timestamp &&) noexcept' inline default trivial
  |-ParmVarDecl 0x558d60ef1508 <col:7> col:7 used 'Timestamp &&'
  `-CompoundStmt 0x558d612839e8 <col:7>
    |-CXXMemberCallExpr 0x558d61283988 <col:7> 'Timestamp::rep_t' lvalue
    | |-MemberExpr 0x558d612838f0 <col:7> '<bound member function type>' .operator= 0x558d60ef1278
    | | `-MemberExpr 0x558d612837c0 <col:7> 'Timestamp::rep_t' lvalue ->_t 0x558d611e3098
    | |   `-CXXThisExpr 0x558d612837b0 <col:7> 'Timestamp *' this
    | `-MemberExpr 0x558d612838c0 <col:7> 'Timestamp::rep_t' xvalue ._t 0x558d611e3098
    |   `-CXXStaticCastExpr 0x558d61283890 <col:7> 'Timestamp' xvalue static_cast<class Timestamp &&> <NoOp>
    |     `-DeclRefExpr 0x558d61283860 <col:7> 'Timestamp' lvalue ParmVar 0x558d60ef1508 '' 'Timestamp &&'
    `-ReturnStmt 0x558d612839d8 <col:7>
      `-UnaryOperator 0x558d612839c0 <col:7> 'Timestamp' lvalue prefix '*' cannot overflow
        `-CXXThisExpr 0x558d612839b0 <col:7> 'Timestamp *' this

Layout: <CGRecordLayout
  LLVMType:%class.Timestamp = type { %"union.Timestamp::rep_t" }
  NonVirtualBaseLLVMType:%class.Timestamp = type { %"union.Timestamp::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x558d612886e0 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<16>'
|-CXXRecordDecl 0x558d612888b8 prev 0x558d612886e0 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x558d61288948 <col:46, col:52> col:46 public
|-TypedefDecl 0x558d61288970 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x558d60ce6370 'int'
|-TypedefDecl 0x558d6128e370 <line:13:5, col:31> col:31 type 'typename sized_array_memory<16>::type':'char_array<16>'
| `-ElaboratedType 0x558d6128e320 'typename sized_array_memory<16>::type' sugar
|   `-TypedefType 0x558d61288e20 'sized_array_memory<16>::type' sugar
|     |-Typedef 0x558d61288d20 'type'
|     `-TemplateSpecializationType 0x558d61288cb0 'char_array<16UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x558d61288b90 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 16
|       |   `-SubstNonTypeTemplateParmExpr 0x558d61288b70 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x558d61288b50 <col:24> 'unsigned long' 16
|       `-RecordType 0x558d61288c90 'char_array<16>'
|         `-ClassTemplateSpecialization 0x558d61288bb0 'char_array'
|-TypedefDecl 0x558d6128e428 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<16> >::type *'
| `-PointerType 0x558d6128e3f0 'vector_memory<sized_array_memory<16> >::type *'
|   `-TypedefType 0x558d6128e3d0 'vector_memory<sized_array_memory<16> >::type' sugar
|     |-Typedef 0x558d6128e370 'type'
|     `-ElaboratedType 0x558d6128e320 'typename sized_array_memory<16>::type' sugar
|       `-TypedefType 0x558d61288e20 'sized_array_memory<16>::type' sugar
|         |-Typedef 0x558d61288d20 'type'
|         `-TemplateSpecializationType 0x558d61288cb0 'char_array<16UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x558d61288b90 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 16
|           |   `-SubstNonTypeTemplateParmExpr 0x558d61288b70 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x558d61288b50 <col:24> 'unsigned long' 16
|           `-RecordType 0x558d61288c90 'char_array<16>'
|             `-ClassTemplateSpecialization 0x558d61288bb0 'char_array'
|-CXXMethodDecl 0x558d6128e5a8 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<16> >::type *) const' inline
| `-ParmVarDecl 0x558d6128e4b8 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXConstructorDecl 0x558d6128e698 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x558d6128e778 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x558d6128e778
|-CXXMethodDecl 0x558d6128ea48 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<16> > &)'
| `-ParmVarDecl 0x558d6128e950 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<16> > &'
|-CXXMethodDecl 0x558d6128ec88 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x558d6128eb00 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x558d6128eb78 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x558d6128ee58 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x558d6128ed48 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x558d6128edc0 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x558d6128efb8 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<16> >::iterator ()'
|-CXXMethodDecl 0x558d6128f088 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<16> >::iterator ()'
|-CXXMethodDecl 0x558d6128f2d8 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<16> >::iterator (vector_memory<sized_array_memory<16> >::iterator, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x558d6128f148 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
| `-ParmVarDecl 0x558d6128f1c0 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x558d6128f538 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<16> >::iterator (vector_memory<sized_array_memory<16> >::iterator, vector_memory<sized_array_memory<16> >::iterator)'
| |-ParmVarDecl 0x558d6128f3a8 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
| `-ParmVarDecl 0x558d6128f420 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x558d6128f6f8 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<16> >::type *)' inline
| `-ParmVarDecl 0x558d6128f608 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x558d6128f8b8 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<16> >::type *)' inline
| `-ParmVarDecl 0x558d6128f7c0 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x558d6128f970 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x558d6128fa20 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x558d6128fc58 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x558d6128fad0 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x558d6128fb48 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x558d6128fef8 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<16> > &)'
| `-ParmVarDecl 0x558d6128fe00 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<16> > &'
|-FieldDecl 0x558d6128ffc0 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<16> >::type *'
|-FieldDecl 0x558d61290010 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x558d61290060 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory = type { %struct.char_array*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory = type { %struct.char_array*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x558d61286ff8 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'TimerSet::heap_element'
|-CXXRecordDecl 0x558d61287208 prev 0x558d61286ff8 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x558d61288650 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<heap_element>::type':'sized_array_memory<16>'
| `-ElaboratedType 0x558d61288600 'typename array_memory<heap_element>::type' sugar
|   `-TypedefType 0x558d612885e0 'conditional<true, sized_array_memory<16>, typed_array_memory<TimerSet::heap_element> >::type' sugar
|     |-Typedef 0x558d61288490 'type'
|     `-SubstTemplateTypeParmType 0x558d612882b0 'sized_array_memory<16>' sugar
|       |-TemplateTypeParmType 0x558d60fad900 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558d60fad8a8 'T'
|       `-RecordType 0x558d61287e00 'sized_array_memory<16>'
|         `-ClassTemplateSpecialization 0x558d61287d18 'sized_array_memory'
|-FieldDecl 0x558d612900b0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<TimerSet::heap_element>::array_memory_type>':'vector_memory<sized_array_memory<16> >' mutable
|-AccessSpecDecl 0x558d61290100 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x558d61290138 <line:118:5, col:15> col:15 value_type 'TimerSet::heap_element':'TimerSet::heap_element'
| `-SubstTemplateTypeParmType 0x558d612872a0 'TimerSet::heap_element' sugar
|   |-TemplateTypeParmType 0x558d60fe55f0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x558d60fe5598 'T'
|   `-RecordType 0x558d61286200 'TimerSet::heap_element'
|     `-CXXRecord 0x558d61286170 'heap_element'
|-TypedefDecl 0x558d612901f8 <line:119:5, col:16> col:16 reference 'TimerSet::heap_element &'
| `-LValueReferenceType 0x558d612901c0 'TimerSet::heap_element &'
|   `-SubstTemplateTypeParmType 0x558d612872a0 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x558d60fe55f0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x558d60fe5598 'T'
|     `-RecordType 0x558d61286200 'TimerSet::heap_element'
|       `-CXXRecord 0x558d61286170 'heap_element'
|-TypedefDecl 0x558d61290288 <line:120:5, col:22> col:22 const_reference 'const TimerSet::heap_element &'
| `-LValueReferenceType 0x558d61290250 'const TimerSet::heap_element &'
|   `-QualType 0x558d612872a1 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x558d612872a0 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x558d60fe55f0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558d60fe5598 'T'
|       `-RecordType 0x558d61286200 'TimerSet::heap_element'
|         `-CXXRecord 0x558d61286170 'heap_element'
|-TypedefDecl 0x558d61290318 <line:121:5, col:16> col:16 pointer 'TimerSet::heap_element *'
| `-PointerType 0x558d612902e0 'TimerSet::heap_element *'
|   `-SubstTemplateTypeParmType 0x558d612872a0 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x558d60fe55f0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x558d60fe5598 'T'
|     `-RecordType 0x558d61286200 'TimerSet::heap_element'
|       `-CXXRecord 0x558d61286170 'heap_element'
|-TypedefDecl 0x558d612903d8 <line:122:5, col:22> col:22 const_pointer 'const TimerSet::heap_element *'
| `-PointerType 0x558d612903a0 'const TimerSet::heap_element *'
|   `-QualType 0x558d612872a1 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x558d612872a0 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x558d60fe55f0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558d60fe5598 'T'
|       `-RecordType 0x558d61286200 'TimerSet::heap_element'
|         `-CXXRecord 0x558d61286170 'heap_element'
|-TypedefDecl 0x558d61291240 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<heap_element>::type':'const TimerSet::heap_element &'
| `-ElaboratedType 0x558d612911f0 'typename fast_argument<heap_element>::type' sugar
|   `-TypedefType 0x558d612911d0 'fast_argument<TimerSet::heap_element, true>::type' sugar
|     |-Typedef 0x558d61291108 'type'
|     `-LValueReferenceType 0x558d612910d0 'const TimerSet::heap_element &'
|       `-QualType 0x558d61290e71 'const TimerSet::heap_element' const
|         `-SubstTemplateTypeParmType 0x558d61290e70 'TimerSet::heap_element' sugar
|           |-TemplateTypeParmType 0x558d60fb7fd0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x558d60fb7f78 'T'
|           `-RecordType 0x558d61286200 'TimerSet::heap_element'
|             `-CXXRecord 0x558d61286170 'heap_element'
|-TypedefDecl 0x558d612912a8 <line:126:5, col:22> col:22 const_access_type 'const TimerSet::heap_element &'
| `-LValueReferenceType 0x558d61290250 'const TimerSet::heap_element &'
|   `-QualType 0x558d612872a1 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x558d612872a0 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x558d60fe55f0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558d60fe5598 'T'
|       `-RecordType 0x558d61286200 'TimerSet::heap_element'
|         `-CXXRecord 0x558d61286170 'heap_element'
|-TypedefDecl 0x558d61291300 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x558d60ce6370 'int'
|-TypedefDecl 0x558d61291368 <line:130:5, col:16> col:16 iterator 'TimerSet::heap_element *'
| `-PointerType 0x558d612902e0 'TimerSet::heap_element *'
|   `-SubstTemplateTypeParmType 0x558d612872a0 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x558d60fe55f0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x558d60fe5598 'T'
|     `-RecordType 0x558d61286200 'TimerSet::heap_element'
|       `-CXXRecord 0x558d61286170 'heap_element'
|-TypedefDecl 0x558d612913d0 <line:131:5, col:22> col:22 const_iterator 'const TimerSet::heap_element *'
| `-PointerType 0x558d612903a0 'const TimerSet::heap_element *'
|   `-QualType 0x558d612872a1 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x558d612872a0 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x558d60fe55f0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558d60fe5598 'T'
|       `-RecordType 0x558d61286200 'TimerSet::heap_element'
|         `-CXXRecord 0x558d61286170 'heap_element'
|-EnumDecl 0x558d61291428 <line:134:5> col:5
| `-EnumConstantDecl 0x558d61291520 <col:12, col:40> col:12 RESERVE_GROW 'Vector<TimerSet::heap_element>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x558d61291500 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x558d60fe6c78 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x558d60fe6c50 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x558d60fe6c30 <col:40> 'int' 1
|-CXXConstructorDecl 0x558d612915a8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x558d61291838 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x558d61291660 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x558d61291700 <col:41, col:61> col:61 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXConstructorDecl 0x558d61291af8 <line:139:5, col:37> col:12 Vector 'void (const Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x558d612919e0 <col:19, col:36> col:36 x 'const Vector<TimerSet::heap_element> &'
|-CXXConstructorDecl 0x558d61291db8 <line:141:5, col:32> col:12 Vector 'void (Vector<TimerSet::heap_element> &&)' inline
| `-ParmVarDecl 0x558d61291ca0 <col:19, col:31> col:31 x 'Vector<TimerSet::heap_element> &&'
|-CXXMethodDecl 0x558d61292100 <line:144:5, col:51> col:23 operator= 'Vector<TimerSet::heap_element> &(const Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x558d61291fe0 <col:33, col:50> col:50 x 'const Vector<TimerSet::heap_element> &'
|-CXXMethodDecl 0x558d61292410 <line:146:5, col:46> col:23 operator= 'Vector<TimerSet::heap_element> &(Vector<TimerSet::heap_element> &&)' inline
| `-ParmVarDecl 0x558d612922f0 <col:33, col:45> col:45 x 'Vector<TimerSet::heap_element> &&'
|-CXXMethodDecl 0x558d61292700 <line:148:5, col:70> col:23 assign 'Vector<TimerSet::heap_element> &(Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x558d61292548 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x558d612925c0 <col:43, col:69> col:63 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x558d61292858 <line:150:5, col:55> col:49 begin 'Vector<TimerSet::heap_element>::iterator ()'
| |-NoInlineAttr 0x558d61292938 <col:20> Inherited
| `-OptimizeNoneAttr 0x558d61292990 <col:30> Inherited
|-CXXMethodDecl 0x558d612929d8 <line:151:5, col:53> col:49 end 'Vector<TimerSet::heap_element>::iterator ()'
| |-NoInlineAttr 0x558d61292a88 <col:20> Inherited
| `-OptimizeNoneAttr 0x558d61292ae0 <col:30> Inherited
|-CXXMethodDecl 0x558d61292ba8 <line:152:5, col:63> col:55 begin 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x558d61292c58 <col:20> Inherited
| `-OptimizeNoneAttr 0x558d61292cb0 <col:30> Inherited
|-CXXMethodDecl 0x558d61292cf8 <line:153:5, col:61> col:55 end 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x558d61292da8 <col:20> Inherited
| `-OptimizeNoneAttr 0x558d61292e00 <col:30> Inherited
|-CXXMethodDecl 0x558d61292e48 <line:154:5, col:64> col:55 cbegin 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x558d61292ef8 <col:20> Inherited
| `-OptimizeNoneAttr 0x558d61292f50 <col:30> Inherited
|-CXXMethodDecl 0x558d61292f98 <line:155:5, col:62> col:55 cend 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x558d61293048 <col:20> Inherited
| `-OptimizeNoneAttr 0x558d612930a0 <col:30> Inherited
|-CXXMethodDecl 0x558d612930c8 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x558d61293178 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x558d61293228 <line:159:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x558d612933e8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x558d612932d8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x558d61293350 <col:37, col:63> col:57 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x558d61293538 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x558d612934a8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x558d612936e8 <line:163:5, col:65> col:43 operator[] 'TimerSet::heap_element &(Vector::size_type)'
| |-ParmVarDecl 0x558d612935f0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x558d612937a0 <col:20>
| `-OptimizeNoneAttr 0x558d612937f8 <col:30>
|-CXXMethodDecl 0x558d61293918 <line:164:5, col:73> col:49 operator[] 'const TimerSet::heap_element &(Vector::size_type) const'
| |-ParmVarDecl 0x558d61293820 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x558d612939d0 <col:20>
| `-OptimizeNoneAttr 0x558d61293a28 <col:30>
|-CXXMethodDecl 0x558d61293ae0 <line:165:5, col:29> col:15 at 'TimerSet::heap_element &(Vector::size_type)' inline
| `-ParmVarDecl 0x558d61293a50 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x558d61293c28 <line:166:5, col:37> col:21 at 'const TimerSet::heap_element &(Vector::size_type) const' inline
| `-ParmVarDecl 0x558d61293b98 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x558d61293d58 <line:167:5, col:21> col:15 front 'TimerSet::heap_element &()' inline
|-CXXMethodDecl 0x558d61293e88 <line:168:5, col:29> col:21 front 'const TimerSet::heap_element &() const' inline
|-CXXMethodDecl 0x558d61293f58 <line:169:5, col:20> col:15 back 'TimerSet::heap_element &()' inline
|-CXXMethodDecl 0x558d61294028 <line:170:5, col:28> col:21 back 'const TimerSet::heap_element &() const' inline
|-CXXMethodDecl 0x558d61294168 <line:172:5, col:39> col:15 used unchecked_at 'TimerSet::heap_element &(Vector::size_type)' inline
| `-ParmVarDecl 0x558d612940d8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x558d612942b0 <line:173:5, col:47> col:21 unchecked_at 'const TimerSet::heap_element &(Vector::size_type) const' inline
| `-ParmVarDecl 0x558d61294220 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x558d612943f8 <line:174:5, col:59> col:15 at_u 'TimerSet::heap_element &(Vector::size_type)' inline
| |-ParmVarDecl 0x558d61294368 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x558d612944b0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x558d612945b0 <line:175:5, col:71> col:21 at_u 'const TimerSet::heap_element &(Vector::size_type) const' inline
| |-ParmVarDecl 0x558d61294520 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x558d61294668 <col:60> Inherited "" ""
|-CXXMethodDecl 0x558d61294728 <line:177:5, col:20> col:15 data 'TimerSet::heap_element *()' inline
|-CXXMethodDecl 0x558d61294828 <line:178:5, col:28> col:21 data 'const TimerSet::heap_element *() const' inline
|-CXXMethodDecl 0x558d612949d8 <line:180:5, col:48> col:17 push_back 'void (Vector<TimerSet::heap_element>::value_argument_type)' inline
| `-ParmVarDecl 0x558d612948e8 <col:27, col:47> col:47 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-FunctionTemplateDecl 0x558d612951c8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x558d61294a90 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<TimerSet::heap_element>':'fast_argument<TimerSet::heap_element, true>'
| `-CXXMethodDecl 0x558d61295128 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (TimerSet::heap_element &&)' inline
|   `-ParmVarDecl 0x558d61295028 <col:58, col:62> col:62 v 'TimerSet::heap_element &&'
|-CXXMethodDecl 0x558d612952a8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x558d612953f8 <line:186:5, col:49> col:17 push_front 'void (Vector<TimerSet::heap_element>::value_argument_type)' inline
| `-ParmVarDecl 0x558d61295368 <col:28, col:48> col:48 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x558d612954b0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x558d612956f8 <line:189:5, col:62> col:21 insert 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x558d61295570 <col:28, col:37> col:37 it 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
| `-ParmVarDecl 0x558d612955e8 <col:41, col:61> col:61 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x558d61295950 <line:190:5, col:38> col:21 erase 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator)' inline
| `-ParmVarDecl 0x558d612957c8 <col:27, col:36> col:36 it 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
|-CXXMethodDecl 0x558d61295ba8 <line:191:5, col:49> col:21 erase 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator, Vector<TimerSet::heap_element>::iterator)' inline
| |-ParmVarDecl 0x558d61295a18 <col:27, col:36> col:36 a 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
| `-ParmVarDecl 0x558d61295a90 <col:39, col:48> col:48 b 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
|-CXXMethodDecl 0x558d61295c68 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x558d61295ec8 <line:195:5, col:34> col:17 swap 'void (Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x558d61295dd0 <col:22, col:33> col:33 x 'Vector<TimerSet::heap_element> &'
`-CXXDestructorDecl 0x558d61295f98 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x558d61295f98

Layout: <CGRecordLayout
  LLVMType:%class.Vector = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x558d612974c0 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<8>'
|-CXXRecordDecl 0x558d61297698 prev 0x558d612974c0 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x558d61297728 <col:46, col:52> col:46 public
|-TypedefDecl 0x558d61297750 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x558d60ce6370 'int'
|-TypedefDecl 0x558d61299320 <line:13:5, col:31> col:31 type 'typename sized_array_memory<8>::type':'char_array<8>'
| `-ElaboratedType 0x558d612992d0 'typename sized_array_memory<8>::type' sugar
|   `-TypedefType 0x558d61297c00 'sized_array_memory<8>::type' sugar
|     |-Typedef 0x558d61297b00 'type'
|     `-TemplateSpecializationType 0x558d61297a90 'char_array<8UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x558d61297970 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 8
|       |   `-SubstNonTypeTemplateParmExpr 0x558d61297950 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x558d61297930 <col:24> 'unsigned long' 8
|       `-RecordType 0x558d61297a70 'char_array<8>'
|         `-ClassTemplateSpecialization 0x558d61297990 'char_array'
|-TypedefDecl 0x558d612993d8 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<8> >::type *'
| `-PointerType 0x558d612993a0 'vector_memory<sized_array_memory<8> >::type *'
|   `-TypedefType 0x558d61299380 'vector_memory<sized_array_memory<8> >::type' sugar
|     |-Typedef 0x558d61299320 'type'
|     `-ElaboratedType 0x558d612992d0 'typename sized_array_memory<8>::type' sugar
|       `-TypedefType 0x558d61297c00 'sized_array_memory<8>::type' sugar
|         |-Typedef 0x558d61297b00 'type'
|         `-TemplateSpecializationType 0x558d61297a90 'char_array<8UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x558d61297970 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 8
|           |   `-SubstNonTypeTemplateParmExpr 0x558d61297950 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x558d61297930 <col:24> 'unsigned long' 8
|           `-RecordType 0x558d61297a70 'char_array<8>'
|             `-ClassTemplateSpecialization 0x558d61297990 'char_array'
|-CXXMethodDecl 0x558d61299558 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<8> >::type *) const' inline
| `-ParmVarDecl 0x558d61299468 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXConstructorDecl 0x558d61299648 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x558d61299728 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x558d61299728
|-CXXMethodDecl 0x558d612999f8 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<8> > &)'
| `-ParmVarDecl 0x558d61299900 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<8> > &'
|-CXXMethodDecl 0x558d61299c38 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x558d61299ab0 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x558d61299b28 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x558d61299e08 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x558d61299cf8 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x558d61299d70 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x558d61299f68 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<8> >::iterator ()'
|-CXXMethodDecl 0x558d6129a038 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<8> >::iterator ()'
|-CXXMethodDecl 0x558d6129a288 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<8> >::iterator (vector_memory<sized_array_memory<8> >::iterator, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x558d6129a0f8 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
| `-ParmVarDecl 0x558d6129a170 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x558d6129a4e8 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<8> >::iterator (vector_memory<sized_array_memory<8> >::iterator, vector_memory<sized_array_memory<8> >::iterator)'
| |-ParmVarDecl 0x558d6129a358 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
| `-ParmVarDecl 0x558d6129a3d0 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x558d6129a6a8 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<8> >::type *)' inline
| `-ParmVarDecl 0x558d6129a5b8 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x558d6129a868 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<8> >::type *)' inline
| `-ParmVarDecl 0x558d6129a770 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x558d6129a920 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x558d6129a9d0 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x558d6129ac08 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x558d6129aa80 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x558d6129aaf8 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x558d6129aea8 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<8> > &)'
| `-ParmVarDecl 0x558d6129adb0 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<8> > &'
|-FieldDecl 0x558d6129af70 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<8> >::type *'
|-FieldDecl 0x558d6129afc0 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x558d6129b010 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.1 = type { %struct.char_array.2*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.1 = type { %struct.char_array.2*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x558d612960e0 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Timer *'
|-CXXRecordDecl 0x558d612962e8 prev 0x558d612960e0 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x558d61297430 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<Timer *>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x558d612973e0 'typename array_memory<Timer *>::type' sugar
|   `-TypedefType 0x558d612973c0 'conditional<true, sized_array_memory<8>, typed_array_memory<Timer *> >::type' sugar
|     |-Typedef 0x558d61297270 'type'
|     `-SubstTemplateTypeParmType 0x558d61297090 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x558d60fad900 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558d60fad8a8 'T'
|       `-RecordType 0x558d61296be0 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x558d61296af8 'sized_array_memory'
|-FieldDecl 0x558d6129b060 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Timer *>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x558d6129b0b0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x558d6129b0e8 <line:118:5, col:15> col:15 value_type 'Timer *':'Timer *'
| `-SubstTemplateTypeParmType 0x558d61296380 'Timer *' sugar
|   |-TemplateTypeParmType 0x558d60fe55f0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x558d60fe5598 'T'
|   `-PointerType 0x558d6124a180 'Timer *'
|     `-RecordType 0x558d612492d0 'Timer'
|       `-CXXRecord 0x558d611ccf68 'Timer'
|-TypedefDecl 0x558d6129b1a8 <line:119:5, col:16> col:16 reference 'Timer *&'
| `-LValueReferenceType 0x558d6129b170 'Timer *&'
|   `-SubstTemplateTypeParmType 0x558d61296380 'Timer *' sugar
|     |-TemplateTypeParmType 0x558d60fe55f0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x558d60fe5598 'T'
|     `-PointerType 0x558d6124a180 'Timer *'
|       `-RecordType 0x558d612492d0 'Timer'
|         `-CXXRecord 0x558d611ccf68 'Timer'
|-TypedefDecl 0x558d6129b268 <line:120:5, col:22> col:22 const_reference 'Timer *const &'
| `-LValueReferenceType 0x558d6129b230 'Timer *const &'
|   `-QualType 0x558d61296381 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x558d61296380 'Timer *' sugar
|       |-TemplateTypeParmType 0x558d60fe55f0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558d60fe5598 'T'
|       `-PointerType 0x558d6124a180 'Timer *'
|         `-RecordType 0x558d612492d0 'Timer'
|           `-CXXRecord 0x558d611ccf68 'Timer'
|-TypedefDecl 0x558d6129b328 <line:121:5, col:16> col:16 pointer 'Timer **'
| `-PointerType 0x558d6129b2f0 'Timer **'
|   `-SubstTemplateTypeParmType 0x558d61296380 'Timer *' sugar
|     |-TemplateTypeParmType 0x558d60fe55f0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x558d60fe5598 'T'
|     `-PointerType 0x558d6124a180 'Timer *'
|       `-RecordType 0x558d612492d0 'Timer'
|         `-CXXRecord 0x558d611ccf68 'Timer'
|-TypedefDecl 0x558d6129b3e8 <line:122:5, col:22> col:22 const_pointer 'Timer *const *'
| `-PointerType 0x558d6129b3b0 'Timer *const *'
|   `-QualType 0x558d61296381 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x558d61296380 'Timer *' sugar
|       |-TemplateTypeParmType 0x558d60fe55f0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558d60fe5598 'T'
|       `-PointerType 0x558d6124a180 'Timer *'
|         `-RecordType 0x558d612492d0 'Timer'
|           `-CXXRecord 0x558d611ccf68 'Timer'
|-TypedefDecl 0x558d6129bfc0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<Timer *>::type':'Timer *'
| `-ElaboratedType 0x558d6129bf70 'typename fast_argument<Timer *>::type' sugar
|   `-TypedefType 0x558d6129bf50 'fast_argument<Timer *, false>::type' sugar
|     |-Typedef 0x558d6129bee0 'type'
|     `-SubstTemplateTypeParmType 0x558d6129bca0 'Timer *' sugar
|       |-TemplateTypeParmType 0x558d60fb8700 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558d60fb86b0 'T'
|       `-PointerType 0x558d6124a180 'Timer *'
|         `-RecordType 0x558d612492d0 'Timer'
|           `-CXXRecord 0x558d611ccf68 'Timer'
|-TypedefDecl 0x558d6129c028 <line:126:5, col:22> col:22 const_access_type 'Timer *const &'
| `-LValueReferenceType 0x558d6129b230 'Timer *const &'
|   `-QualType 0x558d61296381 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x558d61296380 'Timer *' sugar
|       |-TemplateTypeParmType 0x558d60fe55f0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558d60fe5598 'T'
|       `-PointerType 0x558d6124a180 'Timer *'
|         `-RecordType 0x558d612492d0 'Timer'
|           `-CXXRecord 0x558d611ccf68 'Timer'
|-TypedefDecl 0x558d6129c080 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x558d60ce6370 'int'
|-TypedefDecl 0x558d6129c0e8 <line:130:5, col:16> col:16 iterator 'Timer **'
| `-PointerType 0x558d6129b2f0 'Timer **'
|   `-SubstTemplateTypeParmType 0x558d61296380 'Timer *' sugar
|     |-TemplateTypeParmType 0x558d60fe55f0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x558d60fe5598 'T'
|     `-PointerType 0x558d6124a180 'Timer *'
|       `-RecordType 0x558d612492d0 'Timer'
|         `-CXXRecord 0x558d611ccf68 'Timer'
|-TypedefDecl 0x558d6129c150 <line:131:5, col:22> col:22 const_iterator 'Timer *const *'
| `-PointerType 0x558d6129b3b0 'Timer *const *'
|   `-QualType 0x558d61296381 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x558d61296380 'Timer *' sugar
|       |-TemplateTypeParmType 0x558d60fe55f0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558d60fe5598 'T'
|       `-PointerType 0x558d6124a180 'Timer *'
|         `-RecordType 0x558d612492d0 'Timer'
|           `-CXXRecord 0x558d611ccf68 'Timer'
|-EnumDecl 0x558d6129c1a8 <line:134:5> col:5
| `-EnumConstantDecl 0x558d6129c2a0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Timer *>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x558d6129c280 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x558d60fe6c78 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x558d60fe6c50 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x558d60fe6c30 <col:40> 'int' 1
|-CXXConstructorDecl 0x558d6129c328 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x558d6129c5b8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x558d6129c3e0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x558d6129c480 <col:41, col:61> col:61 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXConstructorDecl 0x558d6129c878 <line:139:5, col:37> col:12 Vector 'void (const Vector<Timer *> &)' inline
| `-ParmVarDecl 0x558d6129c760 <col:19, col:36> col:36 x 'const Vector<Timer *> &'
|-CXXConstructorDecl 0x558d6129cb38 <line:141:5, col:32> col:12 Vector 'void (Vector<Timer *> &&)' inline
| `-ParmVarDecl 0x558d6129ca20 <col:19, col:31> col:31 x 'Vector<Timer *> &&'
|-CXXMethodDecl 0x558d6129ce80 <line:144:5, col:51> col:23 operator= 'Vector<Timer *> &(const Vector<Timer *> &)' inline
| `-ParmVarDecl 0x558d6129cd60 <col:33, col:50> col:50 x 'const Vector<Timer *> &'
|-CXXMethodDecl 0x558d6129d190 <line:146:5, col:46> col:23 operator= 'Vector<Timer *> &(Vector<Timer *> &&)' inline
| `-ParmVarDecl 0x558d6129d070 <col:33, col:45> col:45 x 'Vector<Timer *> &&'
|-CXXMethodDecl 0x558d6129d480 <line:148:5, col:70> col:23 assign 'Vector<Timer *> &(Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x558d6129d2c8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x558d6129d340 <col:43, col:69> col:63 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x558d6129d5d8 <line:150:5, col:55> col:49 begin 'Vector<Timer *>::iterator ()'
| |-NoInlineAttr 0x558d6129d6b8 <col:20> Inherited
| `-OptimizeNoneAttr 0x558d6129d710 <col:30> Inherited
|-CXXMethodDecl 0x558d6129d758 <line:151:5, col:53> col:49 end 'Vector<Timer *>::iterator ()'
| |-NoInlineAttr 0x558d6129d808 <col:20> Inherited
| `-OptimizeNoneAttr 0x558d6129d860 <col:30> Inherited
|-CXXMethodDecl 0x558d612a1970 <line:152:5, col:63> col:55 begin 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x558d612a1a20 <col:20> Inherited
| `-OptimizeNoneAttr 0x558d612a1a78 <col:30> Inherited
|-CXXMethodDecl 0x558d612a1ac0 <line:153:5, col:61> col:55 end 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x558d612a1b70 <col:20> Inherited
| `-OptimizeNoneAttr 0x558d612a1bc8 <col:30> Inherited
|-CXXMethodDecl 0x558d612a1c10 <line:154:5, col:64> col:55 cbegin 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x558d612a1cc0 <col:20> Inherited
| `-OptimizeNoneAttr 0x558d612a1d18 <col:30> Inherited
|-CXXMethodDecl 0x558d612a1d60 <line:155:5, col:62> col:55 cend 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x558d612a1e10 <col:20> Inherited
| `-OptimizeNoneAttr 0x558d612a1e68 <col:30> Inherited
|-CXXMethodDecl 0x558d612a1e90 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x558d612a1f40 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x558d612a1ff0 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x558d612a21b0 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x558d612a20a0 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x558d612a2118 <col:37, col:63> col:57 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x558d612a2300 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x558d612a2270 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x558d612a24a8 <line:163:5, col:65> col:43 operator[] 'Timer *&(Vector::size_type)'
| |-ParmVarDecl 0x558d612a23b8 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x558d612a2560 <col:20>
| `-OptimizeNoneAttr 0x558d612a25b8 <col:30>
|-CXXMethodDecl 0x558d612a26d8 <line:164:5, col:73> col:49 operator[] 'Timer *const &(Vector::size_type) const'
| |-ParmVarDecl 0x558d612a25e0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x558d612a2790 <col:20>
| `-OptimizeNoneAttr 0x558d612a27e8 <col:30>
|-CXXMethodDecl 0x558d612a28a0 <line:165:5, col:29> col:15 at 'Timer *&(Vector::size_type)' inline
| `-ParmVarDecl 0x558d612a2810 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x558d612a29e8 <line:166:5, col:37> col:21 at 'Timer *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x558d612a2958 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x558d612a2b18 <line:167:5, col:21> col:15 front 'Timer *&()' inline
|-CXXMethodDecl 0x558d612a2c48 <line:168:5, col:29> col:21 front 'Timer *const &() const' inline
|-CXXMethodDecl 0x558d612a2d18 <line:169:5, col:20> col:15 back 'Timer *&()' inline
|-CXXMethodDecl 0x558d612a2de8 <line:170:5, col:28> col:21 back 'Timer *const &() const' inline
|-CXXMethodDecl 0x558d612a2f28 <line:172:5, col:39> col:15 unchecked_at 'Timer *&(Vector::size_type)' inline
| `-ParmVarDecl 0x558d612a2e98 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x558d612a3070 <line:173:5, col:47> col:21 unchecked_at 'Timer *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x558d612a2fe0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x558d612a31b8 <line:174:5, col:59> col:15 at_u 'Timer *&(Vector::size_type)' inline
| |-ParmVarDecl 0x558d612a3128 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x558d612a3270 <col:48> Inherited "" ""
|-CXXMethodDecl 0x558d612a3370 <line:175:5, col:71> col:21 at_u 'Timer *const &(Vector::size_type) const' inline
| |-ParmVarDecl 0x558d612a32e0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x558d612a3428 <col:60> Inherited "" ""
|-CXXMethodDecl 0x558d612a34e8 <line:177:5, col:20> col:15 data 'Timer **()' inline
|-CXXMethodDecl 0x558d612a35e8 <line:178:5, col:28> col:21 data 'Timer *const *() const' inline
|-CXXMethodDecl 0x558d612a3768 <line:180:5, col:48> col:17 push_back 'void (Vector<Timer *>::value_argument_type)' inline
| `-ParmVarDecl 0x558d612a36a8 <col:27, col:47> col:47 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-FunctionTemplateDecl 0x558d612a3f28 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x558d612a3820 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Timer *>':'fast_argument<Timer *, false>'
| `-CXXMethodDecl 0x558d612a3e88 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Timer *&&)' inline
|   `-ParmVarDecl 0x558d612a3d88 <col:58, col:62> col:62 v 'Timer *&&'
|-CXXMethodDecl 0x558d612a4008 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x558d612a4158 <line:186:5, col:49> col:17 push_front 'void (Vector<Timer *>::value_argument_type)' inline
| `-ParmVarDecl 0x558d612a40c8 <col:28, col:48> col:48 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x558d612a4210 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x558d612a4458 <line:189:5, col:62> col:21 insert 'Vector<Timer *>::iterator (Vector<Timer *>::iterator, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x558d612a42d0 <col:28, col:37> col:37 it 'Vector<Timer *>::iterator':'Timer **'
| `-ParmVarDecl 0x558d612a4348 <col:41, col:61> col:61 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x558d612a4618 <line:190:5, col:38> col:21 erase 'Vector<Timer *>::iterator (Vector<Timer *>::iterator)' inline
| `-ParmVarDecl 0x558d612a4528 <col:27, col:36> col:36 it 'Vector<Timer *>::iterator':'Timer **'
|-CXXMethodDecl 0x558d612a4868 <line:191:5, col:49> col:21 erase 'Vector<Timer *>::iterator (Vector<Timer *>::iterator, Vector<Timer *>::iterator)' inline
| |-ParmVarDecl 0x558d612a46e0 <col:27, col:36> col:36 a 'Vector<Timer *>::iterator':'Timer **'
| `-ParmVarDecl 0x558d612a4758 <col:39, col:48> col:48 b 'Vector<Timer *>::iterator':'Timer **'
|-CXXMethodDecl 0x558d612a4928 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x558d612a4b88 <line:195:5, col:34> col:17 swap 'void (Vector<Timer *> &)' inline
| `-ParmVarDecl 0x558d612a4a90 <col:22, col:33> col:33 x 'Vector<Timer *> &'
`-CXXDestructorDecl 0x558d612a4c58 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x558d612a4c58

Layout: <CGRecordLayout
  LLVMType:%class.Vector.0 = type { %class.vector_memory.1 }
  NonVirtualBaseLLVMType:%class.Vector.0 = type { %class.vector_memory.1 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558d61263830 <../dummy_inc/click/sync.hh:194:1, line:211:1> line:194:7 referenced class SimpleSpinlock definition
|-DefinitionData empty standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x558d61263948 <col:1, col:7> col:7 implicit referenced class SimpleSpinlock
|-AccessSpecDecl 0x558d612639d8 <col:24, col:30> col:24 public
|-CXXConstructorDecl 0x558d61263a60 <line:196:5, col:27> col:12 SimpleSpinlock 'void ()' inline
|-CXXDestructorDecl 0x558d61263b50 <line:197:5, col:28> col:12 ~SimpleSpinlock 'void () noexcept' inline
|-CXXMethodDecl 0x558d61263c50 <line:199:5, col:25> col:17 acquire 'void ()' inline
|-CXXMethodDecl 0x558d61263d10 <line:200:5, col:25> col:17 release 'void ()' inline
|-CXXMethodDecl 0x558d61263dd0 <line:201:5, col:25> col:17 attempt 'bool ()' inline
|-CXXConstructorDecl 0x558d61263ef8 <line:194:7> col:7 implicit constexpr SimpleSpinlock 'void (const SimpleSpinlock &)' inline default trivial noexcept-unevaluated 0x558d61263ef8
| `-ParmVarDecl 0x558d61264008 <col:7> col:7 'const SimpleSpinlock &'
`-CXXMethodDecl 0x558d612a5a08 <col:7> col:7 implicit operator= 'SimpleSpinlock &(const SimpleSpinlock &)' inline default trivial noexcept-unevaluated 0x558d612a5a08
  `-ParmVarDecl 0x558d612a5b18 <col:7> col:7 'const SimpleSpinlock &'

Layout: <CGRecordLayout
  LLVMType:%class.SimpleSpinlock = type { i8 }
  NonVirtualBaseLLVMType:%class.SimpleSpinlock.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558d612852f0 prev 0x558d611d1118 <../dummy_inc/click/timerset.hh:12:1, line:90:1> line:12:7 referenced class TimerSet definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x558d612853e8 <col:1, col:7> col:7 implicit referenced class TimerSet
|-AccessSpecDecl 0x558d61285478 <col:18, col:24> col:18 public
|-CXXConstructorDecl 0x558d61285500 <line:14:5, col:14> col:5 TimerSet 'void ()'
|-CXXMethodDecl 0x558d612855f8 <line:16:5, col:67> col:15 timer_expiry_steady 'Timestamp () const'
| `-CompoundStmt 0x558d612a5e80 <col:43, col:67>
|   `-ReturnStmt 0x558d612a5e70 <col:45, col:52>
|     `-CXXConstructExpr 0x558d612a5e40 <col:52> 'Timestamp' 'void (const Timestamp &) noexcept'
|       `-MemberExpr 0x558d612a5e10 <col:52> 'const Timestamp' lvalue ->_timer_expiry 0x558d61286de0
|         `-CXXThisExpr 0x558d612a5e00 <col:52> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x558d612856b8 <line:17:5, col:53> col:22 timer_expiry_steady_adjusted 'Timestamp () const' inline
|-CXXMethodDecl 0x558d612858c0 <line:19:5, col:64> col:16 next_timer_delay 'int (bool, Timestamp &) const' inline
| |-ParmVarDecl 0x558d61285768 <col:33, col:38> col:38 more_tasks 'bool'
| `-ParmVarDecl 0x558d612857e0 <col:50, col:61> col:61 t 'Timestamp &'
|-CXXMethodDecl 0x558d612859b8 <line:22:5, col:23> col:12 next_timer 'Timer *()'
|-CXXMethodDecl 0x558d61285a80 <line:24:5, col:67> col:14 max_timer_stride 'unsigned int () const'
| `-CompoundStmt 0x558d612a5f00 <col:39, col:67>
|   `-ReturnStmt 0x558d612a5ef0 <col:41, col:48>
|     `-ImplicitCastExpr 0x558d612a5ed8 <col:48> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x558d612a5ea8 <col:48> 'const unsigned int' lvalue ->_max_timer_stride 0x558d61286ec8
|         `-CXXThisExpr 0x558d612a5e98 <col:48> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x558d61285b48 <line:25:5, col:59> col:14 timer_stride 'unsigned int () const'
| `-CompoundStmt 0x558d612a5f80 <col:35, col:59>
|   `-ReturnStmt 0x558d612a5f70 <col:37, col:44>
|     `-ImplicitCastExpr 0x558d612a5f58 <col:44> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x558d612a5f28 <col:44> 'const unsigned int' lvalue ->_timer_stride 0x558d61286f30
|         `-CXXThisExpr 0x558d612a5f18 <col:44> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x558d61285c90 <line:26:5, col:52> col:10 set_max_timer_stride 'void (unsigned int)'
| `-ParmVarDecl 0x558d61285c00 <col:31, col:40> col:40 timer_stride 'unsigned int'
|-CXXMethodDecl 0x558d61285dd8 <line:28:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x558d61285d48 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x558d61285fd8 <line:30:5, col:57> col:10 run_timers 'void (RouterThread *, Master *)'
| |-ParmVarDecl 0x558d61285e90 <col:21, col:35> col:35 thread 'RouterThread *'
| `-ParmVarDecl 0x558d61285f08 <col:43, col:51> col:51 master 'Master *'
|-CXXMethodDecl 0x558d612860a8 <line:32:5, col:23> col:17 fence 'void ()' inline
|-AccessSpecDecl 0x558d61286148 <line:34:3, col:10> col:3 private
|-CXXRecordDecl 0x558d61286170 <line:36:5, line:45:5> line:36:12 referenced struct heap_element definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x558d61286288 <col:5, col:12> col:12 implicit referenced struct heap_element
| |-FieldDecl 0x558d61286328 <line:37:2, col:12> col:12 referenced expiry_s 'Timestamp'
| |-FieldDecl 0x558d61286388 <line:38:2, col:9> col:9 referenced t 'Timer *'
| `-CXXConstructorDecl 0x558d612864b8 <line:42:2, line:44:2> line:42:2 heap_element 'void (Timer *)'
|   |-ParmVarDecl 0x558d612863e8 <col:15, col:22> col:22 used t_ 'Timer *'
|   |-CXXCtorInitializer Field 0x558d61286328 'expiry_s' 'Timestamp'
|   | `-CXXConstructExpr 0x558d612a6058 <line:43:8, col:36> 'Timestamp' 'void (const Timestamp &) noexcept'
|   |   `-CXXMemberCallExpr 0x558d612a6000 <col:17, col:35> 'const Timestamp' lvalue
|   |     `-MemberExpr 0x558d612a5fd0 <col:17, col:21> '<bound member function type>' ->expiry_steady 0x558d611ce5a8
|   |       `-ImplicitCastExpr 0x558d612a6020 <col:17> 'const Timer *' <NoOp>
|   |         `-ImplicitCastExpr 0x558d612a5fb8 <col:17> 'Timer *' <LValueToRValue>
|   |           `-DeclRefExpr 0x558d612a5f98 <col:17> 'Timer *' lvalue ParmVar 0x558d612863e8 't_' 'Timer *'
|   |-CXXCtorInitializer Field 0x558d61286388 't' 'Timer *'
|   | `-ImplicitCastExpr 0x558d612a60f0 <col:41> 'Timer *' <LValueToRValue>
|   |   `-DeclRefExpr 0x558d612a60b0 <col:41> 'Timer *' lvalue ParmVar 0x558d612863e8 't_' 'Timer *'
|   `-CompoundStmt 0x558d612a6140 <col:45, line:44:2>
|-CXXRecordDecl 0x558d61286580 <line:46:5, line:50:5> line:46:12 struct heap_less definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x558d61286698 <col:5, col:12> col:12 implicit struct heap_less
| `-CXXMethodDecl 0x558d612868e8 <line:47:2, line:49:2> line:47:14 operator() 'bool (const TimerSet::heap_element &, const TimerSet::heap_element &)' inline
|   |-ParmVarDecl 0x558d61286768 <col:25, col:45> col:45 used a 'const TimerSet::heap_element &'
|   |-ParmVarDecl 0x558d612867e0 <col:48, col:68> col:68 used b 'const TimerSet::heap_element &'
|   `-CompoundStmt 0x558d612a6270 <col:71, line:49:2>
|     `-ReturnStmt 0x558d612a6260 <line:48:6, col:28>
|       `-CXXOperatorCallExpr 0x558d612a6228 <col:13, col:28> 'bool'
|         |-ImplicitCastExpr 0x558d612a6210 <col:24> 'bool (*)(const Timestamp &, const Timestamp &)' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x558d612a61f0 <col:24> 'bool (const Timestamp &, const Timestamp &)' lvalue Function 0x558d612074e8 'operator<' 'bool (const Timestamp &, const Timestamp &)'
|         |-MemberExpr 0x558d612a6170 <col:13, col:15> 'const Timestamp' lvalue .expiry_s 0x558d61286328
|         | `-DeclRefExpr 0x558d612a6150 <col:13> 'const TimerSet::heap_element' lvalue ParmVar 0x558d61286768 'a' 'const TimerSet::heap_element &'
|         `-MemberExpr 0x558d612a61c0 <col:26, col:28> 'const Timestamp' lvalue .expiry_s 0x558d61286328
|           `-DeclRefExpr 0x558d612a61a0 <col:26> 'const TimerSet::heap_element' lvalue ParmVar 0x558d612867e0 'b' 'const TimerSet::heap_element &'
|-CXXRecordDecl 0x558d612869b0 <line:51:5, line:55:5> line:51:12 struct heap_place definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x558d61286ac8 <col:5, col:12> col:12 implicit struct heap_place
| `-CXXMethodDecl 0x558d61286ce8 <line:52:2, line:54:2> line:52:14 operator() 'void (TimerSet::heap_element *, TimerSet::heap_element *)' inline
|   |-ParmVarDecl 0x558d61286b68 <col:25, col:39> col:39 used begin 'TimerSet::heap_element *'
|   |-ParmVarDecl 0x558d61286be0 <col:46, col:60> col:60 used t 'TimerSet::heap_element *'
|   `-CompoundStmt 0x558d612a6478 <col:63, line:54:2>
|     `-BinaryOperator 0x558d612a6458 <line:53:6, col:39> 'int' lvalue '='
|       |-MemberExpr 0x558d612a6308 <col:6, col:12> 'int' lvalue ->_schedpos1 0x558d611d05b8
|       | `-ImplicitCastExpr 0x558d612a62f0 <col:6, col:9> 'Timer *' <LValueToRValue>
|       |   `-MemberExpr 0x558d612a62c0 <col:6, col:9> 'Timer *' lvalue ->t 0x558d61286388
|       |     `-ImplicitCastExpr 0x558d612a62a8 <col:6> 'TimerSet::heap_element *' <LValueToRValue>
|       |       `-DeclRefExpr 0x558d612a6288 <col:6> 'TimerSet::heap_element *' lvalue ParmVar 0x558d61286be0 't' 'TimerSet::heap_element *'
|       `-ImplicitCastExpr 0x558d612a6440 <col:25, col:39> 'int' <IntegralCast>
|         `-BinaryOperator 0x558d612a6420 <col:25, col:39> 'long' '+'
|           |-ParenExpr 0x558d612a63c8 <col:25, col:35> 'long'
|           | `-BinaryOperator 0x558d612a63a8 <col:26, col:30> 'long' '-'
|           |   |-ImplicitCastExpr 0x558d612a6378 <col:26> 'TimerSet::heap_element *' <LValueToRValue>
|           |   | `-DeclRefExpr 0x558d612a6338 <col:26> 'TimerSet::heap_element *' lvalue ParmVar 0x558d61286be0 't' 'TimerSet::heap_element *'
|           |   `-ImplicitCastExpr 0x558d612a6390 <col:30> 'TimerSet::heap_element *' <LValueToRValue>
|           |     `-DeclRefExpr 0x558d612a6358 <col:30> 'TimerSet::heap_element *' lvalue ParmVar 0x558d61286b68 'begin' 'TimerSet::heap_element *'
|           `-ImplicitCastExpr 0x558d612a6408 <col:39> 'long' <IntegralCast>
|             `-IntegerLiteral 0x558d612a63e8 <col:39> 'int' 1
|-FieldDecl 0x558d61286de0 <line:58:5, col:15> col:15 referenced _timer_expiry 'Timestamp'
| `-AlignedAttr 0x558d61286e50 <col:44, col:53> aligned
|   `-ConstantExpr 0x558d61286e30 <col:52> 'int' Int: 8
|     `-IntegerLiteral 0x558d61286db0 <col:52> 'int' 8
|-FieldDecl 0x558d61286ec8 <line:60:5, col:14> col:14 referenced _max_timer_stride 'unsigned int'
|-FieldDecl 0x558d61286f30 <line:61:5, col:14> col:14 referenced _timer_stride 'unsigned int'
|-FieldDecl 0x558d61286f98 <line:62:5, col:14> col:14 _timer_count 'unsigned int'
|-FieldDecl 0x558d61296080 <line:63:5, col:26> col:26 referenced _timer_heap 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>'
|-FieldDecl 0x558d612a4d40 <line:64:5, col:21> col:21 _timer_runchunk 'Vector<Timer *>':'Vector<Timer *>'
|-FieldDecl 0x558d612a4da0 <line:65:5, col:20> col:20 _timer_lock 'SimpleSpinlock'
|-FieldDecl 0x558d612a4e00 <line:71:5, col:15> col:15 _timer_check 'Timestamp'
|-FieldDecl 0x558d612a4e60 <line:72:5, col:14> col:14 _timer_check_reports 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558d612a4f50 <line:74:5, col:38> col:17 run_one_timer 'void (Timer *)' inline
| `-ParmVarDecl 0x558d612a4ec0 <col:31, col:37> col:38 'Timer *'
|-CXXMethodDecl 0x558d612a5018 <line:76:5, line:81:5> line:76:10 set_timer_expiry 'void ()'
| `-CompoundStmt 0x558d612a68d0 <col:29, line:81:5>
|   `-IfStmt 0x558d612a68a8 <line:77:2, line:80:32> has_else
|     |-ImplicitCastExpr 0x558d612a6560 <line:77:6, col:23> 'bool' <IntegralToBoolean>
|     | `-CXXMemberCallExpr 0x558d612a6500 <col:6, col:23> 'Vector::size_type':'int'
|     |   `-MemberExpr 0x558d612a64d0 <col:6, col:18> '<bound member function type>' .size 0x558d612930c8
|     |     `-ImplicitCastExpr 0x558d612a6548 <col:6> 'const Vector<TimerSet::heap_element>' lvalue <NoOp>
|     |       `-MemberExpr 0x558d612a64a0 <col:6> 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>' lvalue ->_timer_heap 0x558d61296080
|     |         `-CXXThisExpr 0x558d612a6490 <col:6> 'TimerSet *' implicit this
|     |-CXXOperatorCallExpr 0x558d612a6750 <line:78:6, col:50> 'Timestamp' lvalue
|     | |-ImplicitCastExpr 0x558d612a6738 <col:20> 'Timestamp &(*)(const Timestamp &) noexcept' <FunctionToPointerDecay>
|     | | `-DeclRefExpr 0x558d612a6718 <col:20> 'Timestamp &(const Timestamp &) noexcept' lvalue CXXMethod 0x558d60ef0f48 'operator=' 'Timestamp &(const Timestamp &) noexcept'
|     | |-MemberExpr 0x558d612a6588 <col:6> 'Timestamp' lvalue ->_timer_expiry 0x558d61286de0
|     | | `-CXXThisExpr 0x558d612a6578 <col:6> 'TimerSet *' implicit this
|     | `-ImplicitCastExpr 0x558d612a6700 <col:22, col:50> 'const Timestamp' lvalue <NoOp>
|     |   `-MemberExpr 0x558d612a66d0 <col:22, col:50> 'Timestamp' lvalue .expiry_s 0x558d61286328
|     |     `-CXXMemberCallExpr 0x558d612a66a8 <col:22, col:48> 'TimerSet::heap_element':'TimerSet::heap_element' lvalue
|     |       |-MemberExpr 0x558d612a6678 <col:22, col:34> '<bound member function type>' .unchecked_at 0x558d61294168
|     |       | `-MemberExpr 0x558d612a65c8 <col:22> 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>' lvalue ->_timer_heap 0x558d61296080
|     |       |   `-CXXThisExpr 0x558d612a65b8 <col:22> 'TimerSet *' implicit this
|     |       `-IntegerLiteral 0x558d612a6658 <col:47> 'int' 0
|     `-ExprWithCleanups 0x558d612a6890 <line:80:6, col:32> 'Timestamp' lvalue
|       `-CXXOperatorCallExpr 0x558d612a6858 <col:6, col:32> 'Timestamp' lvalue
|         |-ImplicitCastExpr 0x558d612a6840 <col:20> 'Timestamp &(*)(Timestamp &&) noexcept' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x558d612a6820 <col:20> 'Timestamp &(Timestamp &&) noexcept' lvalue CXXMethod 0x558d60ef13f8 'operator=' 'Timestamp &(Timestamp &&) noexcept'
|         |-MemberExpr 0x558d612a6798 <col:6> 'Timestamp' lvalue ->_timer_expiry 0x558d61286de0
|         | `-CXXThisExpr 0x558d612a6788 <col:6> 'TimerSet *' implicit this
|         `-MaterializeTemporaryExpr 0x558d612a6808 <col:22, col:32> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x558d612a67d8 <col:22, col:32> 'Timestamp' 'void ()'
|-CXXMethodDecl 0x558d612a5158 <line:82:5, col:37> col:10 check_timer_expiry 'void (Timer *)'
| `-ParmVarDecl 0x558d612a50c8 <col:29, col:36> col:36 t 'Timer *'
|-CXXMethodDecl 0x558d612a5220 <line:84:5, col:29> col:17 used lock_timers 'void ()' inline
|-CXXMethodDecl 0x558d612a52e0 <line:85:5, col:37> col:17 attempt_lock_timers 'bool ()' inline
|-CXXMethodDecl 0x558d612a53a0 <line:86:5, col:31> col:17 used unlock_timers 'void ()' inline
|-FriendDecl 0x558d612a5490 <line:88:5, col:18> col:12 'class Timer':'Timer'
|-CXXConstructorDecl 0x558d612a54f8 <line:12:7> col:7 implicit TimerSet 'void (const TimerSet &)' inline default noexcept-unevaluated 0x558d612a54f8
| `-ParmVarDecl 0x558d612a5608 <col:7> col:7 'const TimerSet &'
|-CXXConstructorDecl 0x558d612a56a8 <col:7> col:7 implicit TimerSet 'void (TimerSet &&)' inline default noexcept-unevaluated 0x558d612a56a8
| `-ParmVarDecl 0x558d612a57b8 <col:7> col:7 'TimerSet &&'
|-CXXMethodDecl 0x558d612a5858 <col:7> col:7 implicit operator= 'TimerSet &(const TimerSet &)' inline default noexcept-unevaluated 0x558d612a5858
| `-ParmVarDecl 0x558d612a5968 <col:7> col:7 'const TimerSet &'
|-CXXMethodDecl 0x558d612a5b88 <col:7> col:7 implicit operator= 'TimerSet &(TimerSet &&)' inline default noexcept-unevaluated 0x558d612a5b88
| `-ParmVarDecl 0x558d612a5c98 <col:7> col:7 'TimerSet &&'
`-CXXDestructorDecl 0x558d612a5d20 <col:7> col:7 implicit ~TimerSet 'void ()' inline default noexcept-unevaluated 0x558d612a5d20

Layout: <CGRecordLayout
  LLVMType:%class.TimerSet = type <{ %class.Timestamp, i32, i32, i32, [4 x i8], %class.Vector, %class.Vector.0, %class.SimpleSpinlock, [7 x i8], %class.Timestamp, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.TimerSet.base = type <{ %class.Timestamp, i32, i32, i32, [4 x i8], %class.Vector, %class.Vector.0, %class.SimpleSpinlock, [7 x i8], %class.Timestamp, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x558d612dc768 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'pollfd'
|-CXXRecordDecl 0x558d612dc978 prev 0x558d612dc768 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x558d612dda50 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<pollfd>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x558d612dda00 'typename array_memory<pollfd>::type' sugar
|   `-TypedefType 0x558d612dd9e0 'conditional<true, sized_array_memory<8>, typed_array_memory<pollfd> >::type' sugar
|     |-Typedef 0x558d612dd890 'type'
|     `-SubstTemplateTypeParmType 0x558d61297090 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x558d60fad900 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558d60fad8a8 'T'
|       `-RecordType 0x558d61296be0 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x558d61296af8 'sized_array_memory'
|-FieldDecl 0x558d612ddb50 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<pollfd>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x558d612ddba0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x558d612ddbd8 <line:118:5, col:15> col:15 value_type 'pollfd':'pollfd'
| `-SubstTemplateTypeParmType 0x558d612dca10 'pollfd' sugar
|   |-TemplateTypeParmType 0x558d60fe55f0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x558d60fe5598 'T'
|   `-RecordType 0x558d612d07e0 'pollfd'
|     `-CXXRecord 0x558d612d0750 'pollfd'
|-TypedefDecl 0x558d612ddc98 <line:119:5, col:16> col:16 reference 'pollfd &'
| `-LValueReferenceType 0x558d612ddc60 'pollfd &'
|   `-SubstTemplateTypeParmType 0x558d612dca10 'pollfd' sugar
|     |-TemplateTypeParmType 0x558d60fe55f0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x558d60fe5598 'T'
|     `-RecordType 0x558d612d07e0 'pollfd'
|       `-CXXRecord 0x558d612d0750 'pollfd'
|-TypedefDecl 0x558d612ddd58 <line:120:5, col:22> col:22 const_reference 'const pollfd &'
| `-LValueReferenceType 0x558d612ddd20 'const pollfd &'
|   `-QualType 0x558d612dca11 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x558d612dca10 'pollfd' sugar
|       |-TemplateTypeParmType 0x558d60fe55f0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558d60fe5598 'T'
|       `-RecordType 0x558d612d07e0 'pollfd'
|         `-CXXRecord 0x558d612d0750 'pollfd'
|-TypedefDecl 0x558d612ddde8 <line:121:5, col:16> col:16 pointer 'pollfd *'
| `-PointerType 0x558d612dddb0 'pollfd *'
|   `-SubstTemplateTypeParmType 0x558d612dca10 'pollfd' sugar
|     |-TemplateTypeParmType 0x558d60fe55f0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x558d60fe5598 'T'
|     `-RecordType 0x558d612d07e0 'pollfd'
|       `-CXXRecord 0x558d612d0750 'pollfd'
|-TypedefDecl 0x558d612ddea8 <line:122:5, col:22> col:22 const_pointer 'const pollfd *'
| `-PointerType 0x558d612dde70 'const pollfd *'
|   `-QualType 0x558d612dca11 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x558d612dca10 'pollfd' sugar
|       |-TemplateTypeParmType 0x558d60fe55f0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558d60fe5598 'T'
|       `-RecordType 0x558d612d07e0 'pollfd'
|         `-CXXRecord 0x558d612d0750 'pollfd'
|-TypedefDecl 0x558d612dea80 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<pollfd>::type':'pollfd'
| `-ElaboratedType 0x558d612dea30 'typename fast_argument<pollfd>::type' sugar
|   `-TypedefType 0x558d612dea10 'fast_argument<pollfd, false>::type' sugar
|     |-Typedef 0x558d612de9a0 'type'
|     `-SubstTemplateTypeParmType 0x558d612de760 'pollfd' sugar
|       |-TemplateTypeParmType 0x558d60fb8700 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558d60fb86b0 'T'
|       `-RecordType 0x558d612d07e0 'pollfd'
|         `-CXXRecord 0x558d612d0750 'pollfd'
|-TypedefDecl 0x558d612deae8 <line:126:5, col:22> col:22 const_access_type 'const pollfd &'
| `-LValueReferenceType 0x558d612ddd20 'const pollfd &'
|   `-QualType 0x558d612dca11 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x558d612dca10 'pollfd' sugar
|       |-TemplateTypeParmType 0x558d60fe55f0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558d60fe5598 'T'
|       `-RecordType 0x558d612d07e0 'pollfd'
|         `-CXXRecord 0x558d612d0750 'pollfd'
|-TypedefDecl 0x558d612deb40 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x558d60ce6370 'int'
|-TypedefDecl 0x558d612deba8 <line:130:5, col:16> col:16 iterator 'pollfd *'
| `-PointerType 0x558d612dddb0 'pollfd *'
|   `-SubstTemplateTypeParmType 0x558d612dca10 'pollfd' sugar
|     |-TemplateTypeParmType 0x558d60fe55f0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x558d60fe5598 'T'
|     `-RecordType 0x558d612d07e0 'pollfd'
|       `-CXXRecord 0x558d612d0750 'pollfd'
|-TypedefDecl 0x558d612dec10 <line:131:5, col:22> col:22 const_iterator 'const pollfd *'
| `-PointerType 0x558d612dde70 'const pollfd *'
|   `-QualType 0x558d612dca11 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x558d612dca10 'pollfd' sugar
|       |-TemplateTypeParmType 0x558d60fe55f0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558d60fe5598 'T'
|       `-RecordType 0x558d612d07e0 'pollfd'
|         `-CXXRecord 0x558d612d0750 'pollfd'
|-EnumDecl 0x558d612dec68 <line:134:5> col:5
| `-EnumConstantDecl 0x558d612ded60 <col:12, col:40> col:12 RESERVE_GROW 'Vector<pollfd>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x558d612ded40 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x558d60fe6c78 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x558d60fe6c50 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x558d60fe6c30 <col:40> 'int' 1
|-CXXConstructorDecl 0x558d612dede8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x558d612df078 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x558d612deea0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x558d612def40 <col:41, col:61> col:61 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXConstructorDecl 0x558d612df338 <line:139:5, col:37> col:12 Vector 'void (const Vector<pollfd> &)' inline
| `-ParmVarDecl 0x558d612df220 <col:19, col:36> col:36 x 'const Vector<pollfd> &'
|-CXXConstructorDecl 0x558d612df5f8 <line:141:5, col:32> col:12 Vector 'void (Vector<pollfd> &&)' inline
| `-ParmVarDecl 0x558d612df4e0 <col:19, col:31> col:31 x 'Vector<pollfd> &&'
|-CXXMethodDecl 0x558d612df940 <line:144:5, col:51> col:23 operator= 'Vector<pollfd> &(const Vector<pollfd> &)' inline
| `-ParmVarDecl 0x558d612df820 <col:33, col:50> col:50 x 'const Vector<pollfd> &'
|-CXXMethodDecl 0x558d612dfc50 <line:146:5, col:46> col:23 operator= 'Vector<pollfd> &(Vector<pollfd> &&)' inline
| `-ParmVarDecl 0x558d612dfb30 <col:33, col:45> col:45 x 'Vector<pollfd> &&'
|-CXXMethodDecl 0x558d612dff40 <line:148:5, col:70> col:23 assign 'Vector<pollfd> &(Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x558d612dfd88 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x558d612dfe00 <col:43, col:69> col:63 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x558d612e0098 <line:150:5, col:55> col:49 begin 'Vector<pollfd>::iterator ()'
| |-NoInlineAttr 0x558d612e0178 <col:20> Inherited
| `-OptimizeNoneAttr 0x558d612e01d0 <col:30> Inherited
|-CXXMethodDecl 0x558d612e0218 <line:151:5, col:53> col:49 end 'Vector<pollfd>::iterator ()'
| |-NoInlineAttr 0x558d612e02c8 <col:20> Inherited
| `-OptimizeNoneAttr 0x558d612e0320 <col:30> Inherited
|-CXXMethodDecl 0x558d612e03e8 <line:152:5, col:63> col:55 begin 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x558d612e0498 <col:20> Inherited
| `-OptimizeNoneAttr 0x558d612e04f0 <col:30> Inherited
|-CXXMethodDecl 0x558d612e0538 <line:153:5, col:61> col:55 end 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x558d612e05e8 <col:20> Inherited
| `-OptimizeNoneAttr 0x558d612e0640 <col:30> Inherited
|-CXXMethodDecl 0x558d612e0688 <line:154:5, col:64> col:55 cbegin 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x558d612e0738 <col:20> Inherited
| `-OptimizeNoneAttr 0x558d612e0790 <col:30> Inherited
|-CXXMethodDecl 0x558d612e07d8 <line:155:5, col:62> col:55 cend 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x558d612e0888 <col:20> Inherited
| `-OptimizeNoneAttr 0x558d612e08e0 <col:30> Inherited
|-CXXMethodDecl 0x558d612e0908 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x558d612e09b8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x558d612e0a68 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x558d612e0c28 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x558d612e0b18 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x558d612e0b90 <col:37, col:63> col:57 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x558d612e0d78 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x558d612e0ce8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x558d612e0f28 <line:163:5, col:65> col:43 operator[] 'pollfd &(Vector::size_type)'
| |-ParmVarDecl 0x558d612e0e30 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x558d612e0fe0 <col:20>
| `-OptimizeNoneAttr 0x558d612e1038 <col:30>
|-CXXMethodDecl 0x558d612e1158 <line:164:5, col:73> col:49 operator[] 'const pollfd &(Vector::size_type) const'
| |-ParmVarDecl 0x558d612e1060 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x558d612e1210 <col:20>
| `-OptimizeNoneAttr 0x558d612e1268 <col:30>
|-CXXMethodDecl 0x558d612e1320 <line:165:5, col:29> col:15 at 'pollfd &(Vector::size_type)' inline
| `-ParmVarDecl 0x558d612e1290 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x558d612e1468 <line:166:5, col:37> col:21 at 'const pollfd &(Vector::size_type) const' inline
| `-ParmVarDecl 0x558d612e13d8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x558d612e1598 <line:167:5, col:21> col:15 front 'pollfd &()' inline
|-CXXMethodDecl 0x558d612e16c8 <line:168:5, col:29> col:21 front 'const pollfd &() const' inline
|-CXXMethodDecl 0x558d612e1798 <line:169:5, col:20> col:15 back 'pollfd &()' inline
|-CXXMethodDecl 0x558d612e1868 <line:170:5, col:28> col:21 back 'const pollfd &() const' inline
|-CXXMethodDecl 0x558d612e19a8 <line:172:5, col:39> col:15 unchecked_at 'pollfd &(Vector::size_type)' inline
| `-ParmVarDecl 0x558d612e1918 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x558d612e1af0 <line:173:5, col:47> col:21 unchecked_at 'const pollfd &(Vector::size_type) const' inline
| `-ParmVarDecl 0x558d612e1a60 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x558d612e1c38 <line:174:5, col:59> col:15 at_u 'pollfd &(Vector::size_type)' inline
| |-ParmVarDecl 0x558d612e1ba8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x558d612e1cf0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x558d612e1df0 <line:175:5, col:71> col:21 at_u 'const pollfd &(Vector::size_type) const' inline
| |-ParmVarDecl 0x558d612e1d60 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x558d612e1ea8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x558d612e1f68 <line:177:5, col:20> col:15 data 'pollfd *()' inline
|-CXXMethodDecl 0x558d612e2068 <line:178:5, col:28> col:21 data 'const pollfd *() const' inline
|-CXXMethodDecl 0x558d612e2218 <line:180:5, col:48> col:17 push_back 'void (Vector<pollfd>::value_argument_type)' inline
| `-ParmVarDecl 0x558d612e2128 <col:27, col:47> col:47 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-FunctionTemplateDecl 0x558d612e29d8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x558d612e22d0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<pollfd>':'fast_argument<pollfd, false>'
| `-CXXMethodDecl 0x558d612e2938 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (pollfd &&)' inline
|   `-ParmVarDecl 0x558d612e2838 <col:58, col:62> col:62 v 'pollfd &&'
|-CXXMethodDecl 0x558d612e2ab8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x558d612e2c08 <line:186:5, col:49> col:17 push_front 'void (Vector<pollfd>::value_argument_type)' inline
| `-ParmVarDecl 0x558d612e2b78 <col:28, col:48> col:48 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x558d612e2cc0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x558d612e2f08 <line:189:5, col:62> col:21 insert 'Vector<pollfd>::iterator (Vector<pollfd>::iterator, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x558d612e2d80 <col:28, col:37> col:37 it 'Vector<pollfd>::iterator':'pollfd *'
| `-ParmVarDecl 0x558d612e2df8 <col:41, col:61> col:61 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x558d612e30c8 <line:190:5, col:38> col:21 erase 'Vector<pollfd>::iterator (Vector<pollfd>::iterator)' inline
| `-ParmVarDecl 0x558d612e2fd8 <col:27, col:36> col:36 it 'Vector<pollfd>::iterator':'pollfd *'
|-CXXMethodDecl 0x558d612e3318 <line:191:5, col:49> col:21 erase 'Vector<pollfd>::iterator (Vector<pollfd>::iterator, Vector<pollfd>::iterator)' inline
| |-ParmVarDecl 0x558d612e3190 <col:27, col:36> col:36 a 'Vector<pollfd>::iterator':'pollfd *'
| `-ParmVarDecl 0x558d612e3208 <col:39, col:48> col:48 b 'Vector<pollfd>::iterator':'pollfd *'
|-CXXMethodDecl 0x558d612e33d8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x558d612e3658 <line:195:5, col:34> col:17 swap 'void (Vector<pollfd> &)' inline
| `-ParmVarDecl 0x558d612e3540 <col:22, col:33> col:33 x 'Vector<pollfd> &'
`-CXXDestructorDecl 0x558d612e3728 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x558d612e3728

Layout: <CGRecordLayout
  LLVMType:%class.Vector.3 = type { %class.vector_memory.1 }
  NonVirtualBaseLLVMType:%class.Vector.3 = type { %class.vector_memory.1 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x558d612e4d10 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<24>'
|-CXXRecordDecl 0x558d612e4ee8 prev 0x558d612e4d10 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x558d612e4f78 <col:46, col:52> col:46 public
|-TypedefDecl 0x558d612e4fa0 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x558d60ce6370 'int'
|-TypedefDecl 0x558d612e6b70 <line:13:5, col:31> col:31 type 'typename sized_array_memory<24>::type':'char_array<24>'
| `-ElaboratedType 0x558d612e6b20 'typename sized_array_memory<24>::type' sugar
|   `-TypedefType 0x558d612e5450 'sized_array_memory<24>::type' sugar
|     |-Typedef 0x558d612e5350 'type'
|     `-TemplateSpecializationType 0x558d612e52e0 'char_array<24UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x558d612e51c0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 24
|       |   `-SubstNonTypeTemplateParmExpr 0x558d612e51a0 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x558d612e5180 <col:24> 'unsigned long' 24
|       `-RecordType 0x558d612e52c0 'char_array<24>'
|         `-ClassTemplateSpecialization 0x558d612e51e0 'char_array'
|-TypedefDecl 0x558d612e6c28 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<24> >::type *'
| `-PointerType 0x558d612e6bf0 'vector_memory<sized_array_memory<24> >::type *'
|   `-TypedefType 0x558d612e6bd0 'vector_memory<sized_array_memory<24> >::type' sugar
|     |-Typedef 0x558d612e6b70 'type'
|     `-ElaboratedType 0x558d612e6b20 'typename sized_array_memory<24>::type' sugar
|       `-TypedefType 0x558d612e5450 'sized_array_memory<24>::type' sugar
|         |-Typedef 0x558d612e5350 'type'
|         `-TemplateSpecializationType 0x558d612e52e0 'char_array<24UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x558d612e51c0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 24
|           |   `-SubstNonTypeTemplateParmExpr 0x558d612e51a0 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x558d612e5180 <col:24> 'unsigned long' 24
|           `-RecordType 0x558d612e52c0 'char_array<24>'
|             `-ClassTemplateSpecialization 0x558d612e51e0 'char_array'
|-CXXMethodDecl 0x558d612e6da8 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<24> >::type *) const' inline
| `-ParmVarDecl 0x558d612e6cb8 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXConstructorDecl 0x558d612e6e98 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x558d612e6f78 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x558d612e6f78
|-CXXMethodDecl 0x558d612e7248 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<24> > &)'
| `-ParmVarDecl 0x558d612e7150 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<24> > &'
|-CXXMethodDecl 0x558d612e7488 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x558d612e7300 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x558d612e7378 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x558d612e7658 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x558d612e7548 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x558d612e75c0 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x558d612e77b8 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<24> >::iterator ()'
|-CXXMethodDecl 0x558d612e7888 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<24> >::iterator ()'
|-CXXMethodDecl 0x558d612e7ad8 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<24> >::iterator (vector_memory<sized_array_memory<24> >::iterator, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x558d612e7948 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
| `-ParmVarDecl 0x558d612e79c0 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x558d612e7d38 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<24> >::iterator (vector_memory<sized_array_memory<24> >::iterator, vector_memory<sized_array_memory<24> >::iterator)'
| |-ParmVarDecl 0x558d612e7ba8 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
| `-ParmVarDecl 0x558d612e7c20 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x558d612e7ef8 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<24> >::type *)' inline
| `-ParmVarDecl 0x558d612e7e08 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x558d612e80b8 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<24> >::type *)' inline
| `-ParmVarDecl 0x558d612e7fc0 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x558d612e8170 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x558d612e8220 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x558d612e8458 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x558d612e82d0 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x558d612e8348 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x558d612e86f8 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<24> > &)'
| `-ParmVarDecl 0x558d612e8600 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<24> > &'
|-FieldDecl 0x558d612e87c0 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<24> >::type *'
|-FieldDecl 0x558d612e8810 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x558d612e8860 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.5 = type { %struct.char_array.6*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.5 = type { %struct.char_array.6*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x558d612e3870 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'SelectSet::SelectorInfo'
|-CXXRecordDecl 0x558d612e3a78 prev 0x558d612e3870 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x558d612e4c80 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<SelectorInfo>::type':'sized_array_memory<24>'
| `-ElaboratedType 0x558d612e4c30 'typename array_memory<SelectorInfo>::type' sugar
|   `-TypedefType 0x558d612e4c10 'conditional<true, sized_array_memory<24>, typed_array_memory<SelectSet::SelectorInfo> >::type' sugar
|     |-Typedef 0x558d612e4ac0 'type'
|     `-SubstTemplateTypeParmType 0x558d612e48e0 'sized_array_memory<24>' sugar
|       |-TemplateTypeParmType 0x558d60fad900 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558d60fad8a8 'T'
|       `-RecordType 0x558d612e4430 'sized_array_memory<24>'
|         `-ClassTemplateSpecialization 0x558d612e4350 'sized_array_memory'
|-FieldDecl 0x558d612e88b0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<SelectSet::SelectorInfo>::array_memory_type>':'vector_memory<sized_array_memory<24> >' mutable
|-AccessSpecDecl 0x558d612e8900 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x558d612e8938 <line:118:5, col:15> col:15 value_type 'SelectSet::SelectorInfo':'SelectSet::SelectorInfo'
| `-SubstTemplateTypeParmType 0x558d612e3b10 'SelectSet::SelectorInfo' sugar
|   |-TemplateTypeParmType 0x558d60fe55f0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x558d60fe5598 'T'
|   `-RecordType 0x558d612dc2d0 'SelectSet::SelectorInfo'
|     `-CXXRecord 0x558d612dc240 'SelectorInfo'
|-TypedefDecl 0x558d612e89f8 <line:119:5, col:16> col:16 reference 'SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x558d612e89c0 'SelectSet::SelectorInfo &'
|   `-SubstTemplateTypeParmType 0x558d612e3b10 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x558d60fe55f0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x558d60fe5598 'T'
|     `-RecordType 0x558d612dc2d0 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x558d612dc240 'SelectorInfo'
|-TypedefDecl 0x558d612e8ab8 <line:120:5, col:22> col:22 const_reference 'const SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x558d612e8a80 'const SelectSet::SelectorInfo &'
|   `-QualType 0x558d612e3b11 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x558d612e3b10 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x558d60fe55f0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558d60fe5598 'T'
|       `-RecordType 0x558d612dc2d0 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x558d612dc240 'SelectorInfo'
|-TypedefDecl 0x558d612e8b48 <line:121:5, col:16> col:16 pointer 'SelectSet::SelectorInfo *'
| `-PointerType 0x558d612e8b10 'SelectSet::SelectorInfo *'
|   `-SubstTemplateTypeParmType 0x558d612e3b10 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x558d60fe55f0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x558d60fe5598 'T'
|     `-RecordType 0x558d612dc2d0 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x558d612dc240 'SelectorInfo'
|-TypedefDecl 0x558d612e8c08 <line:122:5, col:22> col:22 const_pointer 'const SelectSet::SelectorInfo *'
| `-PointerType 0x558d612e8bd0 'const SelectSet::SelectorInfo *'
|   `-QualType 0x558d612e3b11 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x558d612e3b10 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x558d60fe55f0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558d60fe5598 'T'
|       `-RecordType 0x558d612dc2d0 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x558d612dc240 'SelectorInfo'
|-TypedefDecl 0x558d612e9860 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<SelectorInfo>::type':'const SelectSet::SelectorInfo &'
| `-ElaboratedType 0x558d612e9810 'typename fast_argument<SelectorInfo>::type' sugar
|   `-TypedefType 0x558d612e97f0 'fast_argument<SelectSet::SelectorInfo, true>::type' sugar
|     |-Typedef 0x558d612e9728 'type'
|     `-LValueReferenceType 0x558d612e96f0 'const SelectSet::SelectorInfo &'
|       `-QualType 0x558d612e9491 'const SelectSet::SelectorInfo' const
|         `-SubstTemplateTypeParmType 0x558d612e9490 'SelectSet::SelectorInfo' sugar
|           |-TemplateTypeParmType 0x558d60fb7fd0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x558d60fb7f78 'T'
|           `-RecordType 0x558d612dc2d0 'SelectSet::SelectorInfo'
|             `-CXXRecord 0x558d612dc240 'SelectorInfo'
|-TypedefDecl 0x558d612e98c8 <line:126:5, col:22> col:22 const_access_type 'const SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x558d612e8a80 'const SelectSet::SelectorInfo &'
|   `-QualType 0x558d612e3b11 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x558d612e3b10 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x558d60fe55f0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558d60fe5598 'T'
|       `-RecordType 0x558d612dc2d0 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x558d612dc240 'SelectorInfo'
|-TypedefDecl 0x558d612e9920 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x558d60ce6370 'int'
|-TypedefDecl 0x558d612e9988 <line:130:5, col:16> col:16 iterator 'SelectSet::SelectorInfo *'
| `-PointerType 0x558d612e8b10 'SelectSet::SelectorInfo *'
|   `-SubstTemplateTypeParmType 0x558d612e3b10 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x558d60fe55f0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x558d60fe5598 'T'
|     `-RecordType 0x558d612dc2d0 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x558d612dc240 'SelectorInfo'
|-TypedefDecl 0x558d612e99f0 <line:131:5, col:22> col:22 const_iterator 'const SelectSet::SelectorInfo *'
| `-PointerType 0x558d612e8bd0 'const SelectSet::SelectorInfo *'
|   `-QualType 0x558d612e3b11 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x558d612e3b10 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x558d60fe55f0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558d60fe5598 'T'
|       `-RecordType 0x558d612dc2d0 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x558d612dc240 'SelectorInfo'
|-EnumDecl 0x558d612e9a48 <line:134:5> col:5
| `-EnumConstantDecl 0x558d612e9b40 <col:12, col:40> col:12 RESERVE_GROW 'Vector<SelectSet::SelectorInfo>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x558d612e9b20 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x558d60fe6c78 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x558d60fe6c50 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x558d60fe6c30 <col:40> 'int' 1
|-CXXConstructorDecl 0x558d612e9bc8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x558d612e9e58 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x558d612e9c80 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x558d612e9d20 <col:41, col:61> col:61 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXConstructorDecl 0x558d612ea118 <line:139:5, col:37> col:12 Vector 'void (const Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x558d612ea000 <col:19, col:36> col:36 x 'const Vector<SelectSet::SelectorInfo> &'
|-CXXConstructorDecl 0x558d612ea3d8 <line:141:5, col:32> col:12 Vector 'void (Vector<SelectSet::SelectorInfo> &&)' inline
| `-ParmVarDecl 0x558d612ea2c0 <col:19, col:31> col:31 x 'Vector<SelectSet::SelectorInfo> &&'
|-CXXMethodDecl 0x558d612ea720 <line:144:5, col:51> col:23 operator= 'Vector<SelectSet::SelectorInfo> &(const Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x558d612ea600 <col:33, col:50> col:50 x 'const Vector<SelectSet::SelectorInfo> &'
|-CXXMethodDecl 0x558d612eaa30 <line:146:5, col:46> col:23 operator= 'Vector<SelectSet::SelectorInfo> &(Vector<SelectSet::SelectorInfo> &&)' inline
| `-ParmVarDecl 0x558d612ea910 <col:33, col:45> col:45 x 'Vector<SelectSet::SelectorInfo> &&'
|-CXXMethodDecl 0x558d612ead20 <line:148:5, col:70> col:23 assign 'Vector<SelectSet::SelectorInfo> &(Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x558d612eab68 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x558d612eabe0 <col:43, col:69> col:63 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x558d612eae78 <line:150:5, col:55> col:49 begin 'Vector<SelectSet::SelectorInfo>::iterator ()'
| |-NoInlineAttr 0x558d612eaf58 <col:20> Inherited
| `-OptimizeNoneAttr 0x558d612eafb0 <col:30> Inherited
|-CXXMethodDecl 0x558d612eaff8 <line:151:5, col:53> col:49 end 'Vector<SelectSet::SelectorInfo>::iterator ()'
| |-NoInlineAttr 0x558d612eb0a8 <col:20> Inherited
| `-OptimizeNoneAttr 0x558d612eb100 <col:30> Inherited
|-CXXMethodDecl 0x558d612eb1c8 <line:152:5, col:63> col:55 begin 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x558d612eb278 <col:20> Inherited
| `-OptimizeNoneAttr 0x558d612eb2d0 <col:30> Inherited
|-CXXMethodDecl 0x558d612eb318 <line:153:5, col:61> col:55 end 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x558d612eb3c8 <col:20> Inherited
| `-OptimizeNoneAttr 0x558d612eb420 <col:30> Inherited
|-CXXMethodDecl 0x558d612eb468 <line:154:5, col:64> col:55 cbegin 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x558d612eb518 <col:20> Inherited
| `-OptimizeNoneAttr 0x558d612eb570 <col:30> Inherited
|-CXXMethodDecl 0x558d612eb610 <line:155:5, col:62> col:55 cend 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x558d612eb6c0 <col:20> Inherited
| `-OptimizeNoneAttr 0x558d612eb718 <col:30> Inherited
|-CXXMethodDecl 0x558d612eb740 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x558d612eb7f0 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x558d612eb8a0 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x558d612eba60 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x558d612eb950 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x558d612eb9c8 <col:37, col:63> col:57 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x558d612ebbb0 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x558d612ebb20 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x558d612ebd58 <line:163:5, col:65> col:43 operator[] 'SelectSet::SelectorInfo &(Vector::size_type)'
| |-ParmVarDecl 0x558d612ebc68 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x558d612ebe10 <col:20>
| `-OptimizeNoneAttr 0x558d612ebe68 <col:30>
|-CXXMethodDecl 0x558d612ebf88 <line:164:5, col:73> col:49 operator[] 'const SelectSet::SelectorInfo &(Vector::size_type) const'
| |-ParmVarDecl 0x558d612ebe90 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x558d612ec040 <col:20>
| `-OptimizeNoneAttr 0x558d612ec098 <col:30>
|-CXXMethodDecl 0x558d612ec150 <line:165:5, col:29> col:15 at 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| `-ParmVarDecl 0x558d612ec0c0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x558d612ec298 <line:166:5, col:37> col:21 at 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| `-ParmVarDecl 0x558d612ec208 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x558d612ec3c8 <line:167:5, col:21> col:15 front 'SelectSet::SelectorInfo &()' inline
|-CXXMethodDecl 0x558d612ec4f8 <line:168:5, col:29> col:21 front 'const SelectSet::SelectorInfo &() const' inline
|-CXXMethodDecl 0x558d612ec5c8 <line:169:5, col:20> col:15 back 'SelectSet::SelectorInfo &()' inline
|-CXXMethodDecl 0x558d612ec698 <line:170:5, col:28> col:21 back 'const SelectSet::SelectorInfo &() const' inline
|-CXXMethodDecl 0x558d612ec7d8 <line:172:5, col:39> col:15 unchecked_at 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| `-ParmVarDecl 0x558d612ec748 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x558d612ec920 <line:173:5, col:47> col:21 unchecked_at 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| `-ParmVarDecl 0x558d612ec890 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x558d612eca68 <line:174:5, col:59> col:15 at_u 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| |-ParmVarDecl 0x558d612ec9d8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x558d612ecb20 <col:48> Inherited "" ""
|-CXXMethodDecl 0x558d612ecc20 <line:175:5, col:71> col:21 at_u 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| |-ParmVarDecl 0x558d612ecb90 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x558d612eccd8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x558d612ecd98 <line:177:5, col:20> col:15 data 'SelectSet::SelectorInfo *()' inline
|-CXXMethodDecl 0x558d612ece98 <line:178:5, col:28> col:21 data 'const SelectSet::SelectorInfo *() const' inline
|-CXXMethodDecl 0x558d612ed048 <line:180:5, col:48> col:17 push_back 'void (Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| `-ParmVarDecl 0x558d612ecf58 <col:27, col:47> col:47 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-FunctionTemplateDecl 0x558d612ed808 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x558d612ed100 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<SelectSet::SelectorInfo>':'fast_argument<SelectSet::SelectorInfo, true>'
| `-CXXMethodDecl 0x558d612ed768 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (SelectSet::SelectorInfo &&)' inline
|   `-ParmVarDecl 0x558d612ed668 <col:58, col:62> col:62 v 'SelectSet::SelectorInfo &&'
|-CXXMethodDecl 0x558d612ed8e8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x558d612eda38 <line:186:5, col:49> col:17 push_front 'void (Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| `-ParmVarDecl 0x558d612ed9a8 <col:28, col:48> col:48 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x558d612edaf0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x558d612edd38 <line:189:5, col:62> col:21 insert 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x558d612edbb0 <col:28, col:37> col:37 it 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
| `-ParmVarDecl 0x558d612edc28 <col:41, col:61> col:61 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x558d612edef8 <line:190:5, col:38> col:21 erase 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator)' inline
| `-ParmVarDecl 0x558d612ede08 <col:27, col:36> col:36 it 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
|-CXXMethodDecl 0x558d612ee148 <line:191:5, col:49> col:21 erase 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator, Vector<SelectSet::SelectorInfo>::iterator)' inline
| |-ParmVarDecl 0x558d612edfc0 <col:27, col:36> col:36 a 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
| `-ParmVarDecl 0x558d612ee038 <col:39, col:48> col:48 b 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
|-CXXMethodDecl 0x558d612ee208 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x558d612ee468 <line:195:5, col:34> col:17 swap 'void (Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x558d612ee370 <col:22, col:33> col:33 x 'Vector<SelectSet::SelectorInfo> &'
`-CXXDestructorDecl 0x558d612ee538 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x558d612ee538

Layout: <CGRecordLayout
  LLVMType:%class.Vector.4 = type { %class.vector_memory.5 }
  NonVirtualBaseLLVMType:%class.Vector.4 = type { %class.vector_memory.5 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558d612d13e0 <../dummy_inc/click/selectset.hh:36:1, line:109:1> line:36:7 referenced class SelectSet definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x558d612d14f8 <col:1, col:7> col:7 implicit referenced class SelectSet
|-AccessSpecDecl 0x558d612d1588 <col:19, col:25> col:19 public
|-CXXConstructorDecl 0x558d612db650 <line:38:5, col:15> col:5 SelectSet 'void ()'
|-CXXDestructorDecl 0x558d612db740 <line:39:5, col:16> col:5 ~SelectSet 'void ()' noexcept-unevaluated 0x558d612db740
|-CXXMethodDecl 0x558d612db840 <line:41:5, col:21> col:10 initialize 'void ()'
|-CXXMethodDecl 0x558d612dbae0 <line:43:5, col:54> col:9 add_select 'int (int, Element *, int)'
| |-ParmVarDecl 0x558d612db8f8 <col:20, col:24> col:24 fd 'int'
| |-ParmVarDecl 0x558d612db970 <col:28, col:37> col:37 element 'Element *'
| `-ParmVarDecl 0x558d612db9f0 <col:46, col:50> col:50 mask 'int'
|-CXXMethodDecl 0x558d612dbd50 <line:44:5, col:57> col:9 remove_select 'int (int, Element *, int)'
| |-ParmVarDecl 0x558d612dbbb0 <col:23, col:27> col:27 fd 'int'
| |-ParmVarDecl 0x558d612dbc28 <col:31, col:40> col:40 element 'Element *'
| `-ParmVarDecl 0x558d612dbca8 <col:49, col:53> col:53 mask 'int'
|-CXXMethodDecl 0x558d612dbea8 <line:46:5, col:42> col:10 run_selects 'void (RouterThread *)'
| `-ParmVarDecl 0x558d612dbe18 <col:22, col:36> col:36 thread 'RouterThread *'
|-CXXMethodDecl 0x558d612dbf70 <line:47:5, line:50:5> line:47:17 used wake_immediate 'void ()' inline
| `-CompoundStmt 0x558d612efbe8 <col:34, line:50:5>
|   |-BinaryOperator 0x558d612ef5b8 <line:48:2, col:23> 'volatile bool' lvalue '='
|   | |-MemberExpr 0x558d612ef578 <col:2> 'volatile bool' lvalue ->_wake_pipe_pending 0x558d612dc6f8
|   | | `-CXXThisExpr 0x558d612ef568 <col:2> 'SelectSet *' implicit this
|   | `-CXXBoolLiteralExpr 0x558d612ef5a8 <col:23> 'bool' true
|   `-CallExpr 0x558d612efbc0 <line:49:2, col:43> 'void'
|     |-ImplicitCastExpr 0x558d612efba8 <col:2> 'void (*)(long)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x558d612efb28 <col:2> 'void (long)' lvalue Function 0x558d612efa28 'ignore_result' 'void (long)' (FunctionTemplate 0x558d60fa88a8 'ignore_result')
|     `-CallExpr 0x558d612ef7d0 <col:16, col:42> 'ssize_t':'long'
|       |-ImplicitCastExpr 0x558d612ef7b8 <col:16> 'ssize_t (*)(int, const void *, size_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x558d612ef738 <col:16> 'ssize_t (int, const void *, size_t)' lvalue Function 0x558d612a9980 'write' 'ssize_t (int, const void *, size_t)'
|       |-ImplicitCastExpr 0x558d612ef808 <col:22, col:34> 'int' <LValueToRValue>
|       | `-ArraySubscriptExpr 0x558d612ef6e0 <col:22, col:34> 'int' lvalue
|       |   |-ImplicitCastExpr 0x558d612ef6c8 <col:22> 'int *' <ArrayToPointerDecay>
|       |   | `-MemberExpr 0x558d612ef678 <col:22> 'int [2]' lvalue ->_wake_pipe 0x558d612dc698
|       |   |   `-CXXThisExpr 0x558d612ef668 <col:22> 'SelectSet *' implicit this
|       |   `-IntegerLiteral 0x558d612ef6a8 <col:33> 'int' 1
|       |-ImplicitCastExpr 0x558d612ef838 <col:37> 'const void *' <BitCast>
|       | `-ImplicitCastExpr 0x558d612ef820 <col:37> 'const char *' <ArrayToPointerDecay>
|       |   `-StringLiteral 0x558d612ef700 <col:37> 'const char [1]' lvalue ""
|       `-ImplicitCastExpr 0x558d612ef850 <col:41> 'size_t':'unsigned long' <IntegralCast>
|         `-IntegerLiteral 0x558d612ef718 <col:41> 'int' 1
|-CXXMethodDecl 0x558d612dc0b0 <line:52:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x558d612dc020 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x558d612dc178 <line:54:5, col:23> col:17 fence 'void ()' inline
|-AccessSpecDecl 0x558d612dc218 <line:56:3, col:10> col:3 private
|-CXXRecordDecl 0x558d612dc240 <line:58:5, line:66:5> line:58:12 referenced struct SelectorInfo definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x558d612dc358 <col:5, col:12> col:12 implicit referenced struct SelectorInfo
| |-FieldDecl 0x558d612dc3f8 <line:59:2, col:11> col:11 read 'Element *'
| |-FieldDecl 0x558d612dc458 <line:60:2, col:11> col:11 write 'Element *'
| |-FieldDecl 0x558d612dc4c0 <line:61:2, col:6> col:6 pollfd 'int'
| `-CXXConstructorDecl 0x558d612dc570 <line:62:2, line:65:2> line:62:2 SelectorInfo 'void ()'
|   |-CXXCtorInitializer Field 0x558d612dc3f8 'read' 'Element *'
|   | `-ImplicitCastExpr 0x558d612efc48 <line:63:13> 'Element *' <NullToPointer>
|   |   `-IntegerLiteral 0x558d612efc08 <col:13> 'int' 0
|   |-CXXCtorInitializer Field 0x558d612dc458 'write' 'Element *'
|   | `-ImplicitCastExpr 0x558d612efcc8 <col:23> 'Element *' <NullToPointer>
|   |   `-IntegerLiteral 0x558d612efc88 <col:23> 'int' 0
|   |-CXXCtorInitializer Field 0x558d612dc4c0 'pollfd' 'int'
|   | `-UnaryOperator 0x558d612efd28 <col:34, col:35> 'int' prefix '-'
|   |   `-IntegerLiteral 0x558d612efd08 <col:35> 'int' 1
|   `-CompoundStmt 0x558d612efda0 <line:64:2, line:65:2>
|-FieldDecl 0x558d612dc698 <line:68:5, col:21> col:9 referenced _wake_pipe 'int [2]'
|-FieldDecl 0x558d612dc6f8 <line:69:5, col:19> col:19 referenced _wake_pipe_pending 'volatile bool'
|-FieldDecl 0x558d612e3810 <line:82:5, col:27> col:27 _pollfds 'Vector<struct pollfd>':'Vector<pollfd>'
|-FieldDecl 0x558d612ee620 <line:83:5, col:26> col:26 _selinfo 'Vector<SelectSet::SelectorInfo>':'Vector<SelectSet::SelectorInfo>'
|-CXXMethodDecl 0x558d612ee858 <line:89:5, col:63> col:10 register_select 'void (int, bool, bool)'
| |-ParmVarDecl 0x558d612ee688 <col:26, col:30> col:30 fd 'int'
| |-ParmVarDecl 0x558d612ee700 <col:34, col:39> col:39 add_read 'bool'
| `-ParmVarDecl 0x558d612ee778 <col:49, col:54> col:54 add_write 'bool'
|-CXXMethodDecl 0x558d612eea40 <line:90:5, col:41> col:10 remove_pollfd 'void (int, int)'
| |-ParmVarDecl 0x558d612ee928 <col:24, col:28> col:28 pi 'int'
| `-ParmVarDecl 0x558d612ee9a8 <col:32, col:36> col:36 event 'int'
|-CXXMethodDecl 0x558d612eec88 <line:91:5, col:49> col:17 call_selected 'void (int, int) const' inline
| |-ParmVarDecl 0x558d612eeb08 <col:31, col:35> col:35 fd 'int'
| `-ParmVarDecl 0x558d612eeb88 <col:39, col:43> col:43 mask 'int'
|-CXXMethodDecl 0x558d612eee98 <line:92:5, col:63> col:17 post_select 'bool (RouterThread *, bool)' inline
| |-ParmVarDecl 0x558d612eed48 <col:29, col:43> col:43 thread 'RouterThread *'
| `-ParmVarDecl 0x558d612eedc0 <col:51, col:56> col:56 acquire 'bool'
|-CXXMethodDecl 0x558d612eefe8 <line:97:5, col:47> col:10 run_selects_poll 'void (RouterThread *)'
| `-ParmVarDecl 0x558d612eef58 <col:27, col:41> col:41 thread 'RouterThread *'
|-CXXMethodDecl 0x558d612ef0b0 <line:102:5, col:22> col:17 used lock 'void ()' inline
|-CXXMethodDecl 0x558d612ef170 <line:103:5, col:24> col:17 used unlock 'void ()' inline
|-CXXConstructorDecl 0x558d612ef238 <line:36:7> col:7 implicit SelectSet 'void (const SelectSet &)' inline default noexcept-unevaluated 0x558d612ef238
| `-ParmVarDecl 0x558d612ef348 <col:7> col:7 'const SelectSet &'
`-CXXMethodDecl 0x558d612ef3e8 <col:7> col:7 implicit operator= 'SelectSet &(const SelectSet &)' inline default noexcept-unevaluated 0x558d612ef3e8
  `-ParmVarDecl 0x558d612ef4f8 <col:7> col:7 'const SelectSet &'

Layout: <CGRecordLayout
  LLVMType:%class.SelectSet = type { [2 x i32], i8, %class.Vector.3, %class.Vector.4 }
  NonVirtualBaseLLVMType:%class.SelectSet = type { [2 x i32], i8, %class.Vector.3, %class.Vector.4 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558d61262798 <../dummy_inc/click/sync.hh:46:1, line:64:1> line:46:7 referenced class Spinlock definition
|-DefinitionData empty standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x558d612628b8 <col:1, col:7> col:7 implicit referenced class Spinlock
|-AccessSpecDecl 0x558d61262948 <col:18, col:24> col:18 public
|-CXXConstructorDecl 0x558d612629d0 <line:48:5, col:21> col:12 Spinlock 'void ()' inline
|-CXXDestructorDecl 0x558d61262ac0 <line:49:5, col:22> col:12 ~Spinlock 'void () noexcept' inline
|-CXXMethodDecl 0x558d61262bc0 <line:51:5, col:25> col:17 used acquire 'void ()' inline
|-CXXMethodDecl 0x558d61262c80 <line:52:5, col:25> col:17 used release 'void ()' inline
|-CXXMethodDecl 0x558d61262d40 <line:53:5, col:25> col:17 attempt 'bool ()' inline
|-CXXMethodDecl 0x558d61262e28 <line:54:5, col:26> col:17 nested 'bool () const' inline
|-CXXConstructorDecl 0x558d61262f48 <line:46:7> col:7 implicit constexpr Spinlock 'void (const Spinlock &)' inline default trivial noexcept-unevaluated 0x558d61262f48
| `-ParmVarDecl 0x558d61263058 <col:7> col:7 'const Spinlock &'
`-CXXMethodDecl 0x558d612f49f8 <col:7> col:7 implicit operator= 'Spinlock &(const Spinlock &)' inline default trivial noexcept-unevaluated 0x558d612f49f8
  `-ParmVarDecl 0x558d612f4b08 <col:7> col:7 'const Spinlock &'

Layout: <CGRecordLayout
  LLVMType:%class.Spinlock = type { i8 }
  NonVirtualBaseLLVMType:%class.Spinlock.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558d611cacd8 <../dummy_inc/click/task.hh:339:5, line:342:5> line:339:11 referenced union Pending definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x558d611cadf8 <col:5, col:11> col:11 implicit union Pending
|-FieldDecl 0x558d611cae98 <line:340:9, col:15> col:15 t 'Task *'
|-FieldDecl 0x558d611caef8 <line:341:9, col:19> col:19 referenced x 'uintptr_t':'unsigned long'
|-CXXConstructorDecl 0x558d612f3ff8 <line:339:11> col:11 implicit constexpr Pending 'void (const Task::Pending &)' inline default trivial noexcept-unevaluated 0x558d612f3ff8
| `-ParmVarDecl 0x558d612f4108 <col:11> col:11 'const Task::Pending &'
|-CXXConstructorDecl 0x558d612f41a8 <col:11> col:11 implicit constexpr Pending 'void (Task::Pending &&)' inline default trivial noexcept-unevaluated 0x558d612f41a8
| `-ParmVarDecl 0x558d612f42b8 <col:11> col:11 'Task::Pending &&'
|-CXXDestructorDecl 0x558d612f4328 <col:11> col:11 implicit ~Pending 'void ()' inline default trivial noexcept-unevaluated 0x558d612f4328
|-CXXMethodDecl 0x558d612f4ba8 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(const Task::Pending &)' inline default trivial noexcept-unevaluated 0x558d612f4ba8
| `-ParmVarDecl 0x558d612f4cb8 <col:11> col:11 'const Task::Pending &'
|-CXXMethodDecl 0x558d612f4d28 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(Task::Pending &&)' inline default trivial noexcept-unevaluated 0x558d612f4d28
| `-ParmVarDecl 0x558d612f4e38 <col:11> col:11 'Task::Pending &&'
`-CXXConstructorDecl 0x558d612fb4a8 <col:11> col:11 implicit used Pending 'void () noexcept' inline default trivial
  `-CompoundStmt 0x558d612fb580 <col:11>

Layout: <CGRecordLayout
  LLVMType:%"union.Task::Pending" = type { %class.Task* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558d61264690 <../dummy_inc/click/sync.hh:303:1, line:324:1> line:303:7 referenced class SpinlockIRQ definition
|-DefinitionData pass_in_registers empty standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x558d612647a8 <col:1, col:7> col:7 implicit referenced class SpinlockIRQ
|-AccessSpecDecl 0x558d61264838 <col:21, col:27> col:21 public
|-CXXConstructorDecl 0x558d612648c0 <line:305:5, col:24> col:12 SpinlockIRQ 'void ()' inline
|-TypedefDecl 0x558d61264980 <line:310:5, col:17> col:17 referenced flags_t 'int'
| `-BuiltinType 0x558d60ce6370 'int'
|-CXXMethodDecl 0x558d61264a48 <line:313:5, col:59> col:20 acquire 'SpinlockIRQ::flags_t ()' inline
| `-AlwaysInlineAttr 0x558d61264ae8 <col:45> always_inline
|-CXXMethodDecl 0x558d61264c18 <line:314:5, col:63> col:17 release 'void (SpinlockIRQ::flags_t)' inline
| |-ParmVarDecl 0x558d61264b50 <col:25> col:32 'SpinlockIRQ::flags_t':'int'
| `-AlwaysInlineAttr 0x558d61264cc0 <col:49> always_inline
|-CXXConstructorDecl 0x558d61264db8 <line:303:7> col:7 implicit constexpr SpinlockIRQ 'void (const SpinlockIRQ &)' inline default trivial noexcept-unevaluated 0x558d61264db8
| `-ParmVarDecl 0x558d61264ec8 <col:7> col:7 'const SpinlockIRQ &'
|-CXXConstructorDecl 0x558d61264f68 <col:7> col:7 implicit constexpr SpinlockIRQ 'void (SpinlockIRQ &&)' inline default trivial noexcept-unevaluated 0x558d61264f68
| `-ParmVarDecl 0x558d61265078 <col:7> col:7 'SpinlockIRQ &&'
|-CXXDestructorDecl 0x558d612f4410 <col:7> col:7 implicit ~SpinlockIRQ 'void ()' inline default trivial noexcept-unevaluated 0x558d612f4410
|-CXXMethodDecl 0x558d612f4ed8 <col:7> col:7 implicit operator= 'SpinlockIRQ &(const SpinlockIRQ &)' inline default trivial noexcept-unevaluated 0x558d612f4ed8
| `-ParmVarDecl 0x558d612f4fe8 <col:7> col:7 'const SpinlockIRQ &'
`-CXXMethodDecl 0x558d612f5058 <col:7> col:7 implicit operator= 'SpinlockIRQ &(SpinlockIRQ &&)' inline default trivial noexcept-unevaluated 0x558d612f5058
  `-ParmVarDecl 0x558d612f5168 <col:7> col:7 'SpinlockIRQ &&'

Layout: <CGRecordLayout
  LLVMType:%class.SpinlockIRQ = type { i8 }
  NonVirtualBaseLLVMType:%class.SpinlockIRQ.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558d612f0210 prev 0x558d612d1350 <../dummy_inc/click/routerthread.hh:28:1, line:248:1> line:28:7 referenced class RouterThread definition
|-DefinitionData has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-CXXRecordDecl 0x558d612f0308 <col:1, col:7> col:7 implicit referenced class RouterThread
|-AccessSpecDecl 0x558d612f0398 <col:22, col:28> col:22 public
|-EnumDecl 0x558d612f03c0 <line:30:5, col:58> col:5
| |-EnumConstantDecl 0x558d612f04d8 <col:12, col:32> col:12 THREAD_QUIESCENT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:30:5)'
| | `-ConstantExpr 0x558d612f04b8 <col:31, col:32> 'int' Int: -1
| |   `-UnaryOperator 0x558d612f04a0 <col:31, col:32> 'int' prefix '-'
| |     `-IntegerLiteral 0x558d612f0480 <col:32> 'int' 1
| `-EnumConstantDecl 0x558d612f0580 <col:35, col:53> col:35 THREAD_UNKNOWN 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:30:5)'
|   `-ConstantExpr 0x558d612f0560 <col:52, col:53> 'int' Int: -1000
|     `-UnaryOperator 0x558d612f0548 <col:52, col:53> 'int' prefix '-'
|       `-IntegerLiteral 0x558d612f0528 <col:53> 'int' 1000
|-CXXMethodDecl 0x558d612f0620 <line:32:5, col:28> col:16 thread_id 'int () const' inline
|-CXXMethodDecl 0x558d612f06e0 <line:34:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x558d612f07c8 <line:35:5, col:52> col:22 timer_set 'TimerSet &()' inline
| `-CompoundStmt 0x558d612f5228 <col:34, col:52>
|   `-ReturnStmt 0x558d612f5218 <col:36, col:43>
|     `-MemberExpr 0x558d612f51e8 <col:43> 'TimerSet' lvalue ->_timers 0x558d612f2498
|       `-CXXThisExpr 0x558d612f51d8 <col:43> 'RouterThread *' implicit this
|-CXXMethodDecl 0x558d612f08b8 <line:36:5, col:64> col:28 timer_set 'const TimerSet &() const' inline
| `-CompoundStmt 0x558d612f5290 <col:46, col:64>
|   `-ReturnStmt 0x558d612f5280 <col:48, col:55>
|     `-MemberExpr 0x558d612f5250 <col:55> 'const TimerSet' lvalue ->_timers 0x558d612f2498
|       `-CXXThisExpr 0x558d612f5240 <col:55> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x558d612f09a8 <line:38:5, col:55> col:23 select_set 'SelectSet &()' inline
| `-CompoundStmt 0x558d612f52f8 <col:36, col:55>
|   `-ReturnStmt 0x558d612f52e8 <col:38, col:45>
|     `-MemberExpr 0x558d612f52b8 <col:45> 'SelectSet' lvalue ->_selects 0x558d612f24f8
|       `-CXXThisExpr 0x558d612f52a8 <col:45> 'RouterThread *' implicit this
|-CXXMethodDecl 0x558d612f0a98 <line:39:5, col:67> col:29 select_set 'const SelectSet &() const' inline
| `-CompoundStmt 0x558d612f5360 <col:48, col:67>
|   `-ReturnStmt 0x558d612f5350 <col:50, col:57>
|     `-MemberExpr 0x558d612f5320 <col:57> 'const SelectSet' lvalue ->_selects 0x558d612f24f8
|       `-CXXThisExpr 0x558d612f5310 <col:57> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x558d612f0b58 <line:43:5, col:26> col:17 active 'bool () const' inline
|-CXXMethodDecl 0x558d612f0c48 <line:44:5, col:31> col:18 task_begin 'Task *() const' inline
|-CXXMethodDecl 0x558d612f0db8 <line:45:5, col:40> col:18 task_next 'Task *(Task *) const' inline
| `-ParmVarDecl 0x558d612f0cf8 <col:28, col:34> col:34 task 'Task *'
|-CXXMethodDecl 0x558d612f0e80 <line:46:5, col:29> col:18 task_end 'Task *() const' inline
|-CXXMethodDecl 0x558d612f12c8 <line:47:5, col:59> col:10 scheduled_tasks 'void (Router *, Vector<Task *> &)'
| |-ParmVarDecl 0x558d612f0f30 <col:26, col:34> col:34 router 'Router *'
| `-ParmVarDecl 0x558d612f11b0 <col:42, col:58> col:58 x 'Vector<Task *> &'
|-CXXMethodDecl 0x558d612f1398 <line:49:5, col:28> col:17 lock_tasks 'void ()' inline
|-CXXMethodDecl 0x558d612f1458 <line:50:5, col:30> col:17 unlock_tasks 'void ()' inline
|-CXXMethodDecl 0x558d612f1518 <line:52:5, col:38> col:17 schedule_block_tasks 'void ()' inline
|-CXXMethodDecl 0x558d612f1658 <line:53:5, col:43> col:17 used block_tasks 'void (bool)' inline
| `-ParmVarDecl 0x558d612f15c8 <col:29, col:34> col:34 scheduled 'bool'
|-CXXMethodDecl 0x558d612f1720 <line:54:5, col:31> col:17 used unblock_tasks 'void ()' inline
|-CXXMethodDecl 0x558d612f17e0 <line:56:5, col:29> col:17 stop_flag 'bool () const' inline
|-CXXMethodDecl 0x558d612f18a0 <line:58:5, col:35> col:17 mark_driver_entry 'void ()' inline
|-CXXMethodDecl 0x558d612f1960 <line:59:5, col:17> col:10 driver 'void ()'
|-CXXMethodDecl 0x558d612f1aa0 <line:61:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x558d612f1a10 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x558d612f1b68 <line:77:5, col:22> col:17 used wake 'void ()' inline
|-CXXMethodDecl 0x558d612f1c28 <line:80:5, col:29> col:17 run_signals 'void ()' inline
|-EnumDecl 0x558d612f1cc8 <line:83:5, line:86:20> line:83:5
| |-EnumConstantDecl 0x558d612f1d90 <col:12> col:12 referenced S_PAUSED 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x558d612f1de0 <col:22> col:22 referenced S_BLOCKED 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x558d612f1e30 <col:33> col:33 referenced S_TIMERWAIT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x558d612f1e80 <line:84:12> col:12 S_LOCKSELECT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x558d612f1ed0 <col:26> col:26 S_LOCKTASKS 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x558d612f1f20 <line:85:12> col:12 S_RUNTASK 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x558d612f1f70 <col:23> col:23 S_RUNTIMER 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x558d612f1fc0 <col:35> col:35 S_RUNSIGNAL 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x558d612f2010 <col:48> col:48 S_RUNPENDING 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x558d612f2060 <col:62> col:62 S_RUNSELECT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| `-EnumConstantDecl 0x558d612f20b0 <line:86:12> col:12 NSTATES 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
|-CXXMethodDecl 0x558d612f21a8 <line:87:5, col:43> col:17 used set_thread_state 'void (int)' inline
| `-ParmVarDecl 0x558d612f2118 <col:34, col:38> col:38 state 'int'
|-CXXMethodDecl 0x558d612f22f8 <line:88:5, col:61> col:17 set_thread_state_for_blocking 'void (int)' inline
| `-ParmVarDecl 0x558d612f2268 <col:47, col:51> col:51 delay_type 'int'
|-AccessSpecDecl 0x558d612f23a0 <line:104:3, col:10> col:3 private
|-FieldDecl 0x558d612f23d8 <line:119:5, col:14> col:14 referenced _task_link 'TaskLink'
|-FieldDecl 0x558d612f2438 <line:120:5, col:19> col:19 referenced _stop_flag 'volatile bool'
|-FieldDecl 0x558d612f2498 <line:125:5, col:14> col:14 referenced _timers 'TimerSet'
|-FieldDecl 0x558d612f24f8 <line:127:5, col:15> col:15 referenced _selects 'SelectSet'
|-FieldDecl 0x558d612f2578 <line:148:5, col:14> col:14 referenced _task_lock 'Spinlock'
| `-AlignedAttr 0x558d612f25e8 <col:40, col:50> aligned
|   `-ConstantExpr 0x558d612f25c8 <col:48> 'int' Int: 64
|     `-IntegerLiteral 0x558d612f2548 <col:48> 'int' 64
|-FieldDecl 0x558d612f2658 <line:149:5, col:21> col:21 referenced _task_blocker 'atomic_uint32_t'
|-FieldDecl 0x558d612f26b8 <line:150:5, col:21> col:21 referenced _task_blocker_waiting 'atomic_uint32_t'
|-FieldDecl 0x558d612f27b0 <line:152:5, col:19> col:19 referenced _pending_head 'Task::Pending':'Task::Pending'
|-FieldDecl 0x558d612f28c0 <line:153:5, col:20> col:20 _pending_tail 'Task::Pending *'
|-FieldDecl 0x558d612f2920 <line:154:5, col:17> col:17 _pending_lock 'SpinlockIRQ'
|-FieldDecl 0x558d612f29a0 <line:157:5, col:13> col:13 referenced _master 'Master *'
| `-AlignedAttr 0x558d612f2a10 <col:36, col:46> aligned
|   `-ConstantExpr 0x558d612f29f0 <col:44> 'int' Int: 64
|     `-IntegerLiteral 0x558d612f2970 <col:44> 'int' 64
|-FieldDecl 0x558d612f2a88 <line:158:5, col:9> col:9 referenced _id 'int'
|-FieldDecl 0x558d612f2ae8 <line:159:5, col:10> col:10 referenced _driver_entered 'bool'
|-AccessSpecDecl 0x558d612f2b38 <line:170:3, col:9> col:3 public
|-FieldDecl 0x558d612f2b78 <line:171:5, col:14> col:14 _tasks_per_iter 'unsigned int'
|-FieldDecl 0x558d612f2be0 <line:172:5, col:14> col:14 _iters_per_os 'unsigned int'
|-AccessSpecDecl 0x558d612f2c30 <line:173:3, col:10> col:3 private
|-CXXConstructorDecl 0x558d612f2dd8 <line:205:5, col:46> col:5 RouterThread 'void (Master *, int)'
| |-ParmVarDecl 0x558d612f2c68 <col:18, col:26> col:26 master 'Master *'
| `-ParmVarDecl 0x558d612f2ce8 <col:34, col:38> col:38 threadno 'int'
|-CXXDestructorDecl 0x558d612f2ed8 <line:206:5, col:19> col:5 ~RouterThread 'void ()' noexcept-unevaluated 0x558d612f2ed8
|-CXXMethodDecl 0x558d612f2fe0 <line:209:5, col:29> col:17 add_pending 'void ()' inline
|-CXXMethodDecl 0x558d612f30a8 <line:211:5, line:217:5> line:211:21 pass 'unsigned int () const' inline
| `-CompoundStmt 0x558d612f5458 <col:34, line:217:5>
|   `-ReturnStmt 0x558d612f5448 <line:215:9, col:34>
|     `-ImplicitCastExpr 0x558d612f5430 <col:16, col:34> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x558d612f5400 <col:16, col:34> 'unsigned int' lvalue ->_pass 0x558d612671f0
|         `-ImplicitCastExpr 0x558d612f53e8 <col:16, col:27> 'TaskLink *' <LValueToRValue>
|           `-MemberExpr 0x558d612f53b8 <col:16, col:27> 'TaskLink *const' lvalue ._next 0x558d61267188
|             `-MemberExpr 0x558d612f5388 <col:16> 'const TaskLink' lvalue ->_task_link 0x558d612f23d8
|               `-CXXThisExpr 0x558d612f5378 <col:16> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x558d612f3168 <line:221:5, col:28> col:10 driver_lock_tasks 'void ()'
|-CXXMethodDecl 0x558d612f3228 <line:222:5, line:226:5> line:222:17 driver_unlock_tasks 'void ()' inline
| `-CompoundStmt 0x558d612f5b80 <col:39, line:226:5>
|   |-DeclStmt 0x558d612f56a8 <line:223:9, col:68>
|   | `-VarDecl 0x558d612f5480 <col:9, col:67> col:18 used val 'uint32_t':'unsigned int' cinit
|   |   `-CXXMemberCallExpr 0x558d612f5660 <col:24, col:67> 'uint32_t':'unsigned int'
|   |     |-MemberExpr 0x558d612f5630 <col:24, col:38> '<bound member function type>' .compare_swap 0x558d6100eef0
|   |     | `-MemberExpr 0x558d612f54f8 <col:24> 'atomic_uint32_t' lvalue ->_task_blocker 0x558d612f2658
|   |     |   `-CXXThisExpr 0x558d612f54e8 <col:24> 'RouterThread *' implicit this
|   |     |-CStyleCastExpr 0x558d612f55e8 <col:51, col:63> 'uint32_t':'unsigned int' <NoOp>
|   |     | `-ImplicitCastExpr 0x558d612f55d0 <col:62, col:63> 'uint32_t':'unsigned int' <IntegralCast> part_of_explicit_cast
|   |     |   `-UnaryOperator 0x558d612f55a8 <col:62, col:63> 'int' prefix '-'
|   |     |     `-IntegerLiteral 0x558d612f5588 <col:63> 'int' 1
|   |     `-ImplicitCastExpr 0x558d612f5690 <col:66> 'uint32_t':'unsigned int' <IntegralCast>
|   |       `-IntegerLiteral 0x558d612f5610 <col:66> 'int' 0
|   |-CStyleCastExpr 0x558d612f56f0 <line:224:9, col:16> 'void' <ToVoid>
|   | `-DeclRefExpr 0x558d612f56c0 <col:16> 'uint32_t':'unsigned int' lvalue Var 0x558d612f5480 'val' 'uint32_t':'unsigned int'
|   `-ParenExpr 0x558d612f5b60 <line:225:9, col:181> 'void'
|     `-ConditionalOperator 0x558d612f5b30 <col:10, col:180> 'void'
|       |-CXXStaticCastExpr 0x558d612f5808 <col:10, col:50> 'bool' static_cast<_Bool> <NoOp>
|       | `-BinaryOperator 0x558d612f57d8 <col:30, col:49> 'bool' '=='
|       |   |-ImplicitCastExpr 0x558d612f57c0 <col:30> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-DeclRefExpr 0x558d612f5718 <col:30> 'uint32_t':'unsigned int' lvalue Var 0x558d612f5480 'val' 'uint32_t':'unsigned int'
|       |   `-CStyleCastExpr 0x558d612f5798 <col:37, col:49> 'uint32_t':'unsigned int' <NoOp>
|       |     `-ImplicitCastExpr 0x558d612f5780 <col:48, col:49> 'uint32_t':'unsigned int' <IntegralCast> part_of_explicit_cast
|       |       `-UnaryOperator 0x558d612f5758 <col:48, col:49> 'int' prefix '-'
|       |         `-IntegerLiteral 0x558d612f5738 <col:49> 'int' 1
|       |-CXXFunctionalCastExpr 0x558d612f5868 <col:54, col:61> 'void' functional cast to void <ToVoid>
|       | `-IntegerLiteral 0x558d612f5848 <col:60> 'int' 0
|       `-CallExpr 0x558d612f5a90 <col:65, col:180> 'void'
|         |-ImplicitCastExpr 0x558d612f5a78 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x558d612f5a58 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x558d60d83cf0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|         |-ImplicitCastExpr 0x558d612f5ad0 <col:80> 'const char *' <ArrayToPointerDecay>
|         | `-StringLiteral 0x558d612f5958 <col:80> 'const char [21]' lvalue "val == (uint32_t) -1"
|         |-ImplicitCastExpr 0x558d612f5ae8 <col:104> 'const char *' <ArrayToPointerDecay>
|         | `-StringLiteral 0x558d612f5988 <col:104> 'const char [35]' lvalue "../dummy_inc/click/routerthread.hh"
|         |-ImplicitCastExpr 0x558d612f5b00 <col:142> 'unsigned int' <IntegralCast>
|         | `-IntegerLiteral 0x558d612f59c8 <col:142> 'int' 225
|         `-ImplicitCastExpr 0x558d612f5b18 <col:147, col:161> 'const char *' <ArrayToPointerDecay>
|           `-UnaryOperator 0x558d612f5a40 <col:147, col:161> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|             `-PredefinedExpr 0x558d612f5a28 <col:161> 'const char [41]' lvalue __PRETTY_FUNCTION__
|               `-StringLiteral 0x558d612f59e8 <col:161> 'const char [41]' lvalue "void RouterThread::driver_unlock_tasks()"
|-CXXMethodDecl 0x558d612f3370 <line:228:5, col:37> col:17 run_tasks 'void (int)' inline
| `-ParmVarDecl 0x558d612f32e0 <col:27, col:31> col:31 ntasks 'int'
|-CXXMethodDecl 0x558d612f3438 <line:229:5, col:33> col:17 process_pending 'void ()' inline
|-CXXMethodDecl 0x558d612f34f8 <line:230:5, col:24> col:17 run_os 'void ()' inline
|-CXXMethodDecl 0x558d612f3620 <line:238:5, col:45> col:24 used running_in_interrupt 'bool ()' static inline
|-CXXMethodDecl 0x558d612f36e0 <line:239:5, col:45> col:17 used current_thread_is_running 'bool () const' inline
|-CXXMethodDecl 0x558d612f37a0 <line:240:5, col:53> col:17 current_thread_is_running_cleanup 'bool () const' inline
|-FriendDecl 0x558d612f3890 <line:242:5, col:18> col:12 'class Task':'Task'
|-FriendDecl 0x558d612f38f0 <line:243:5, col:18> col:12 'class Master':'Master'
|-FriendDecl 0x558d612f3980 <line:245:5, col:18> col:12 'class SelectSet':'SelectSet'
|-CXXConstructorDecl 0x558d612f3d48 <line:28:7> col:7 implicit RouterThread 'void (const RouterThread &)' inline default noexcept-unevaluated 0x558d612f3d48
| `-ParmVarDecl 0x558d612f3e58 <col:7> col:7 'const RouterThread &'
`-CXXMethodDecl 0x558d612f4518 <col:7> col:7 implicit operator= 'RouterThread &(const RouterThread &)' inline default noexcept-unevaluated 0x558d612f4518
  `-ParmVarDecl 0x558d612f4628 <col:7> col:7 'const RouterThread &'

Layout: <CGRecordLayout
  LLVMType:%class.RouterThread = type { %struct.TaskLink, i8, [7 x i8], %class.TimerSet, %class.SelectSet, [32 x i8], %class.Spinlock, %class.atomic_uint32_t, %class.atomic_uint32_t, %"union.Task::Pending", %"union.Task::Pending"*, %class.SpinlockIRQ, [31 x i8], %class.Master*, i32, i8, i32, i32, [40 x i8] }
  NonVirtualBaseLLVMType:%class.RouterThread.base = type { %struct.TaskLink, i8, [7 x i8], %class.TimerSet, %class.SelectSet, [32 x i8], %class.Spinlock, %class.atomic_uint32_t, %class.atomic_uint32_t, %"union.Task::Pending", %"union.Task::Pending"*, %class.SpinlockIRQ, [31 x i8], %class.Master*, i32, i8, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558d61267500 prev 0x558d61249190 <../dummy_inc/click/task.hh:49:1, line:371:1> line:49:7 referenced class Task definition
|-DefinitionData has_user_declared_ctor can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-private 'TaskLink'
|-CXXRecordDecl 0x558d61267638 <col:1, col:7> col:7 implicit referenced class Task
|-AccessSpecDecl 0x558d612676c8 <col:33, col:39> col:33 public
|-EnumDecl 0x558d612676f0 <line:52:5, col:50> col:5
| |-EnumConstantDecl 0x558d61267830 <col:12, col:26> col:12 referenced STRIDE1 'Task::(anonymous enum at ../dummy_inc/click/task.hh:52:5)'
| | `-ConstantExpr 0x558d61267810 <col:22, col:26> 'unsigned int' Int: 65536
| |   `-BinaryOperator 0x558d612677f0 <col:22, col:26> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x558d612677b0 <col:22> 'unsigned int' 1
| |     `-IntegerLiteral 0x558d612677d0 <col:26> 'int' 16
| `-EnumConstantDecl 0x558d61267900 <col:30, col:47> col:30 referenced MAX_STRIDE 'Task::(anonymous enum at ../dummy_inc/click/task.hh:52:5)'
|   `-ConstantExpr 0x558d612678e0 <col:43, col:47> 'unsigned int' Int: 2147483648
|     `-BinaryOperator 0x558d612678c0 <col:43, col:47> 'unsigned int' '<<'
|       |-IntegerLiteral 0x558d61267880 <col:43> 'unsigned int' 1
|       `-IntegerLiteral 0x558d612678a0 <col:47> 'int' 31
|-EnumDecl 0x558d61267950 <line:53:5, col:57> col:5
| |-EnumConstantDecl 0x558d61267a90 <col:12, col:29> col:12 referenced MAX_TICKETS 'Task::(anonymous enum at ../dummy_inc/click/task.hh:53:5)'
| | `-ImplicitCastExpr 0x558d61267bb0 <col:26, col:29> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558d61267a70 <col:26, col:29> 'int' Int: 32768
| |     `-BinaryOperator 0x558d61267a50 <col:26, col:29> 'int' '<<'
| |       |-IntegerLiteral 0x558d61267a10 <col:26> 'int' 1
| |       `-IntegerLiteral 0x558d61267a30 <col:29> 'int' 15
| `-EnumConstantDecl 0x558d61267b60 <col:33, col:54> col:33 DEFAULT_TICKETS 'Task::(anonymous enum at ../dummy_inc/click/task.hh:53:5)'
|   `-ImplicitCastExpr 0x558d61267bc8 <col:51, col:54> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x558d61267b40 <col:51, col:54> 'int' Int: 1024
|       `-BinaryOperator 0x558d61267b20 <col:51, col:54> 'int' '<<'
|         |-IntegerLiteral 0x558d61267ae0 <col:51> 'int' 1
|         `-IntegerLiteral 0x558d61267b00 <col:54> 'int' 10
|-CXXConstructorDecl 0x558d61267d98 <line:75:5, col:48> col:12 Task 'void (TaskCallback, void *)' inline
| |-ParmVarDecl 0x558d61267bf0 <col:17, col:30> col:30 f 'TaskCallback':'bool (*)(Task *, void *)'
| `-ParmVarDecl 0x558d61267c70 <col:33, col:39> col:39 user_data 'void *'
|-CXXConstructorDecl 0x558d61267f28 <line:86:5, col:27> col:12 Task 'void (Element *)' inline
| `-ParmVarDecl 0x558d61267e60 <col:17, col:26> col:26 e 'Element *'
|-CXXDestructorDecl 0x558d61268020 <line:91:5, col:11> col:5 ~Task 'void ()' noexcept-unevaluated 0x558d61268020
|-CXXMethodDecl 0x558d612681a8 <line:98:5, line:100:5> line:98:25 callback 'TaskCallback () const' inline
| `-CompoundStmt 0x558d611cbe38 <col:42, line:100:5>
|   `-ReturnStmt 0x558d611cbe28 <line:99:9, col:16>
|     `-ImplicitCastExpr 0x558d611cbe10 <col:16> 'TaskCallback':'bool (*)(Task *, void *)' <LValueToRValue>
|       `-MemberExpr 0x558d611cbde0 <col:16> 'const TaskCallback':'bool (*const)(Task *, void *)' lvalue ->_hook 0x558d611cab60
|         `-CXXThisExpr 0x558d611cbdd0 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x558d61268270 <line:103:5, line:105:5> line:103:18 user_data 'void *() const' inline
| `-CompoundStmt 0x558d611cbeb8 <col:36, line:105:5>
|   `-ReturnStmt 0x558d611cbea8 <line:104:9, col:16>
|     `-ImplicitCastExpr 0x558d611cbe90 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x558d611cbe60 <col:16> 'void *const' lvalue ->_thunk 0x558d611cabc8
|         `-CXXThisExpr 0x558d611cbe50 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x558d61268330 <line:108:5, line:110:5> line:108:21 element 'Element *() const' inline
| `-CompoundStmt 0x558d611cbf38 <col:37, line:110:5>
|   `-ReturnStmt 0x558d611cbf28 <line:109:9, col:16>
|     `-ImplicitCastExpr 0x558d611cbf10 <col:16> 'Element *' <LValueToRValue>
|       `-MemberExpr 0x558d611cbee0 <col:16> 'Element *const' lvalue ->_owner 0x558d611cac88
|         `-CXXThisExpr 0x558d611cbed0 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x558d612683f0 <line:114:5, col:31> col:17 initialized 'bool () const' inline
|-CXXMethodDecl 0x558d612684b8 <line:123:5, col:33> col:16 home_thread_id 'int () const' inline
|-CXXMethodDecl 0x558d61268578 <line:132:5, col:35> col:26 thread 'RouterThread *() const' inline
|-CXXMethodDecl 0x558d61268638 <line:135:5, line:137:5> line:135:20 router 'Router *() const' inline
| `-CompoundStmt 0x558d611cc020 <col:35, line:137:5>
|   `-ReturnStmt 0x558d611cc010 <line:136:9, col:31>
|     `-CXXMemberCallExpr 0x558d611cbfd8 <col:16, col:31> 'Router *'
|       `-MemberExpr 0x558d611cbfa8 <col:16, col:24> '<bound member function type>' ->router 0x558d6125b9a0
|         `-ImplicitCastExpr 0x558d611cbff8 <col:16> 'const Element *' <NoOp>
|           `-ImplicitCastExpr 0x558d611cbf90 <col:16> 'Element *' <LValueToRValue>
|             `-MemberExpr 0x558d611cbf60 <col:16> 'Element *const' lvalue ->_owner 0x558d611cac88
|               `-CXXThisExpr 0x558d611cbf50 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x558d612686f8 <line:140:5, col:22> col:13 master 'Master *() const'
|-CXXMethodDecl 0x558d612688f8 <line:159:5, col:50> col:10 initialize 'void (Element *, bool)'
| |-ParmVarDecl 0x558d612687a8 <col:21, col:30> col:30 owner 'Element *'
| `-ParmVarDecl 0x558d61268820 <col:37, col:42> col:42 schedule 'bool'
|-CXXMethodDecl 0x558d61268b08 <line:169:5, col:50> col:10 initialize 'void (Router *, bool)'
| |-ParmVarDecl 0x558d612689b8 <col:21, col:29> col:29 router 'Router *'
| `-ParmVarDecl 0x558d61268a30 <col:37, col:42> col:42 schedule 'bool'
|-CXXMethodDecl 0x558d61268bd8 <line:179:5, line:181:5> line:179:17 scheduled 'bool () const' inline
| `-CompoundStmt 0x558d611cc130 <col:35, line:181:5>
|   `-ReturnStmt 0x558d611cc120 <line:180:9, col:24>
|     `-ImplicitCastExpr 0x558d611cc108 <col:16, col:24> 'bool' <IntegralToBoolean>
|       `-ImplicitCastExpr 0x558d611cc0f0 <col:16, col:24> 'uint8_t':'unsigned char' <LValueToRValue>
|         `-MemberExpr 0x558d611cc0c0 <col:16, col:24> 'const uint8_t':'const unsigned char' lvalue .is_scheduled 0x558d611ca798
|           `-MemberExpr 0x558d611cc078 <col:16, col:24> 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x558d611ca8b8
|             `-MemberExpr 0x558d611cc048 <col:16> 'const union Status':'const Task::Status' lvalue ->_status 0x558d611caae8
|               `-CXXThisExpr 0x558d611cc038 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x558d611c97e0 <line:190:5, line:192:5> line:190:17 unschedule 'void ()' inline
| `-CompoundStmt 0x558d611cc248 <col:30, line:192:5>
|   `-BinaryOperator 0x558d611cc228 <line:191:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x558d611cc1d0 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x558d611ca798
|     | `-MemberExpr 0x558d611cc188 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x558d611ca8b8
|     |   `-MemberExpr 0x558d611cc158 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x558d611caae8
|     |     `-CXXThisExpr 0x558d611cc148 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x558d611cc210 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x558d611cc200 <col:32> 'bool' false
|-CXXMethodDecl 0x558d611c98a0 <line:201:5, line:206:5> line:201:17 used reschedule 'void ()' inline
| `-CompoundStmt 0x558d611cc598 <col:30, line:206:5>
|   |-BinaryOperator 0x558d611cc340 <line:202:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x558d611cc2e8 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x558d611ca798
|   | | `-MemberExpr 0x558d611cc2a0 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x558d611ca8b8
|   | |   `-MemberExpr 0x558d611cc270 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x558d611caae8
|   | |     `-CXXThisExpr 0x558d611cc260 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x558d611cc328 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x558d611cc318 <col:32> 'bool' true
|   |-CallExpr 0x558d611cc3e0 <line:203:9, col:21> 'void'
|   | `-ImplicitCastExpr 0x558d611cc3c8 <col:9> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558d611cc3a8 <col:9> 'void ()' lvalue Function 0x558d61262350 'click_fence' 'void ()'
|   `-IfStmt 0x558d611cc580 <line:204:9, line:205:32>
|     |-BinaryOperator 0x558d611cc4c0 <line:204:13, col:34> 'bool' '<'
|     | |-ImplicitCastExpr 0x558d611cc490 <col:13, col:30> 'uintptr_t':'unsigned long' <LValueToRValue>
|     | | `-MemberExpr 0x558d611cc440 <col:13, col:30> 'uintptr_t':'unsigned long' lvalue .x 0x558d611caef8
|     | |   `-MemberExpr 0x558d611cc410 <col:13> 'Task::Pending' lvalue ->_pending_nextptr 0x558d611caf70
|     | |     `-CXXThisExpr 0x558d611cc400 <col:13> 'Task *' implicit this
|     | `-ImplicitCastExpr 0x558d611cc4a8 <col:34> 'unsigned long' <IntegralCast>
|     |   `-IntegerLiteral 0x558d611cc470 <col:34> 'int' 2
|     `-CXXMemberCallExpr 0x558d611cc540 <line:205:13, col:32> 'void'
|       |-MemberExpr 0x558d611cc4f0 <col:13> '<bound member function type>' ->complete_schedule 0x558d611cb970
|       | `-CXXThisExpr 0x558d611cc4e0 <col:13> 'Task *' implicit this
|       `-ImplicitCastExpr 0x558d611cc568 <col:31> 'RouterThread *' <NullToPointer>
|         `-IntegerLiteral 0x558d611cc520 <col:31> 'int' 0
|-CXXMethodDecl 0x558d611c9960 <line:238:5, line:240:5> line:238:17 fast_reschedule 'void ()' inline
| `-CompoundStmt 0x558d611cc6c0 <col:35, line:240:5>
|   `-BinaryOperator 0x558d611cc6a0 <line:239:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x558d611cc648 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x558d611ca798
|     | `-MemberExpr 0x558d611cc600 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x558d611ca8b8
|     |   `-MemberExpr 0x558d611cc5d0 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x558d611caae8
|     |     `-CXXThisExpr 0x558d611cc5c0 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x558d611cc688 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x558d611cc678 <col:32> 'bool' true
|-CXXMethodDecl 0x558d611c9a20 <line:250:5, line:253:5> line:250:17 strong_unschedule 'void ()' inline
| `-CompoundStmt 0x558d611cc8d8 <col:37, line:253:5>
|   |-BinaryOperator 0x558d611cc7b8 <line:251:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x558d611cc760 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x558d611ca798
|   | | `-MemberExpr 0x558d611cc718 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x558d611ca8b8
|   | |   `-MemberExpr 0x558d611cc6e8 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x558d611caae8
|   | |     `-CXXThisExpr 0x558d611cc6d8 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x558d611cc7a0 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x558d611cc790 <col:32> 'bool' false
|   `-BinaryOperator 0x558d611cc8b8 <line:252:9, col:41> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x558d611cc860 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_strong_unscheduled 0x558d611ca7f8
|     | `-MemberExpr 0x558d611cc818 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x558d611ca8b8
|     |   `-MemberExpr 0x558d611cc7e8 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x558d611caae8
|     |     `-CXXThisExpr 0x558d611cc7d8 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x558d611cc8a0 <col:41> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x558d611cc890 <col:41> 'bool' true
|-CXXMethodDecl 0x558d611c9ae0 <line:261:5, line:264:5> line:261:17 strong_reschedule 'void ()' inline
| `-CompoundStmt 0x558d611cca58 <col:37, line:264:5>
|   |-BinaryOperator 0x558d611cc9d8 <line:262:9, col:41> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x558d611cc980 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_strong_unscheduled 0x558d611ca7f8
|   | | `-MemberExpr 0x558d611cc938 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x558d611ca8b8
|   | |   `-MemberExpr 0x558d611cc908 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x558d611caae8
|   | |     `-CXXThisExpr 0x558d611cc8f8 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x558d611cc9c0 <col:41> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x558d611cc9b0 <col:41> 'bool' false
|   `-CXXMemberCallExpr 0x558d611cca38 <line:263:9, col:20> 'void'
|     `-MemberExpr 0x558d611cca08 <col:9> '<bound member function type>' ->reschedule 0x558d611c98a0
|       `-CXXThisExpr 0x558d611cc9f8 <col:9> 'Task *' implicit this
|-CXXMethodDecl 0x558d611c9c28 <line:275:5, col:39> col:10 move_thread 'void (int)'
| `-ParmVarDecl 0x558d611c9b98 <col:22, col:26> col:26 new_thread_id 'int'
|-CXXMethodDecl 0x558d611c9cf8 <line:279:5, col:26> col:16 tickets 'int () const' inline
|-CXXMethodDecl 0x558d611c9e40 <line:280:5, col:34> col:17 used set_tickets 'void (int)' inline
| `-ParmVarDecl 0x558d611c9db0 <col:29, col:33> col:33 n 'int'
|-CXXMethodDecl 0x558d611c9f90 <line:281:5, col:41> col:17 adjust_tickets 'void (int)' inline
| `-ParmVarDecl 0x558d611c9f00 <col:32, col:36> col:36 delta 'int'
|-CXXMethodDecl 0x558d611ca058 <line:284:5, col:22> col:17 fire 'bool ()' inline
|-CXXMethodDecl 0x558d611ca118 <line:299:5, col:64> col:25 hook 'TaskCallback () const' inline
| `-DeprecatedAttr 0x558d611ca1b8 <col:53> "" ""
|-CXXMethodDecl 0x558d611ca250 <line:300:5, col:58> col:18 thunk 'void *() const' inline
| `-DeprecatedAttr 0x558d611ca2f0 <col:47> "" ""
|-AccessSpecDecl 0x558d611ca360 <line:303:3, col:10> col:3 private
|-FieldDecl 0x558d611ca3a0 <line:310:5, col:14> col:14 referenced _stride 'unsigned int'
|-FieldDecl 0x558d611ca408 <line:311:5, col:9> col:9 referenced _tickets 'int'
|-CXXRecordDecl 0x558d611ca458 <line:314:5, line:321:5> line:314:11 union Status definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x558d611ca578 <col:5, col:11> col:11 implicit union Status
| |-CXXRecordDecl 0x558d611ca608 <line:315:9, line:319:9> line:315:9 struct definition
| | |-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | | |-DefaultConstructor exists trivial
| | | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | | |-MoveConstructor exists simple trivial
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial
| | |-FieldDecl 0x558d611ca738 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
| | |-FieldDecl 0x558d611ca798 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
| | |-FieldDecl 0x558d611ca7f8 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
| | |-CXXConstructorDecl 0x558d612fabd8 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
| | |-CXXDestructorDecl 0x558d612facb0 <col:9> col:9 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x558d612facb0
| | |-CXXConstructorDecl 0x558d612faf68 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x558d612faf68
| | | `-ParmVarDecl 0x558d612fb078 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
| | `-CXXConstructorDecl 0x558d612fb118 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x558d612fb118
| |   `-ParmVarDecl 0x558d612fb228 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'
| |-FieldDecl 0x558d611ca8b8 <col:9> col:9 implicit referenced 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| |-IndirectFieldDecl 0x558d611ca918 <line:316:21> col:21 implicit home_thread_id 'int16_t':'short'
| | |-Field 0x558d611ca8b8 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x558d611ca738 'home_thread_id' 'int16_t':'short'
| |-IndirectFieldDecl 0x558d611ca970 <line:317:21> col:21 implicit is_scheduled 'uint8_t':'unsigned char'
| | |-Field 0x558d611ca8b8 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x558d611ca798 'is_scheduled' 'uint8_t':'unsigned char'
| |-IndirectFieldDecl 0x558d611ca9c8 <line:318:21> col:21 implicit is_strong_unscheduled 'uint8_t':'unsigned char'
| | |-Field 0x558d611ca8b8 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x558d611ca7f8 'is_strong_unscheduled' 'uint8_t':'unsigned char'
| |-FieldDecl 0x558d611caa20 <line:320:9, col:18> col:18 status 'uint32_t':'unsigned int'
| |-CXXConstructorDecl 0x558d612faae8 <line:314:11> col:11 implicit used Status 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x558d612fb448 <col:11>
| |-CXXConstructorDecl 0x558d612fadb8 <col:11> col:11 implicit constexpr Status 'void (const Task::Status &)' inline default trivial noexcept-unevaluated 0x558d612fadb8
| | `-ParmVarDecl 0x558d612faec8 <col:11> col:11 'const Task::Status &'
| `-CXXConstructorDecl 0x558d612fb2c8 <col:11> col:11 implicit constexpr Status 'void (Task::Status &&)' inline default trivial noexcept-unevaluated 0x558d612fb2c8
|   `-ParmVarDecl 0x558d612fb3d8 <col:11> col:11 'Task::Status &&'
|-FieldDecl 0x558d611caae8 <col:5, line:321:7> col:7 referenced _status 'union Status':'Task::Status'
|-FieldDecl 0x558d611cab60 <line:323:5, col:18> col:18 referenced _hook 'TaskCallback':'bool (*)(Task *, void *)'
|-FieldDecl 0x558d611cabc8 <line:324:5, col:11> col:11 referenced _thunk 'void *'
|-FieldDecl 0x558d611cac28 <line:335:5, col:19> col:19 referenced _thread 'RouterThread *'
|-FieldDecl 0x558d611cac88 <line:337:5, col:14> col:14 referenced _owner 'Element *'
|-CXXRecordDecl 0x558d611cacd8 <line:339:5, line:342:5> line:339:11 referenced union Pending definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x558d611cadf8 <col:5, col:11> col:11 implicit union Pending
| |-FieldDecl 0x558d611cae98 <line:340:9, col:15> col:15 t 'Task *'
| |-FieldDecl 0x558d611caef8 <line:341:9, col:19> col:19 referenced x 'uintptr_t':'unsigned long'
| |-CXXConstructorDecl 0x558d612f3ff8 <line:339:11> col:11 implicit constexpr Pending 'void (const Task::Pending &)' inline default trivial noexcept-unevaluated 0x558d612f3ff8
| | `-ParmVarDecl 0x558d612f4108 <col:11> col:11 'const Task::Pending &'
| |-CXXConstructorDecl 0x558d612f41a8 <col:11> col:11 implicit constexpr Pending 'void (Task::Pending &&)' inline default trivial noexcept-unevaluated 0x558d612f41a8
| | `-ParmVarDecl 0x558d612f42b8 <col:11> col:11 'Task::Pending &&'
| |-CXXDestructorDecl 0x558d612f4328 <col:11> col:11 implicit ~Pending 'void ()' inline default trivial noexcept-unevaluated 0x558d612f4328
| |-CXXMethodDecl 0x558d612f4ba8 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(const Task::Pending &)' inline default trivial noexcept-unevaluated 0x558d612f4ba8
| | `-ParmVarDecl 0x558d612f4cb8 <col:11> col:11 'const Task::Pending &'
| |-CXXMethodDecl 0x558d612f4d28 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(Task::Pending &&)' inline default trivial noexcept-unevaluated 0x558d612f4d28
| | `-ParmVarDecl 0x558d612f4e38 <col:11> col:11 'Task::Pending &&'
| `-CXXConstructorDecl 0x558d612fb4a8 <col:11> col:11 implicit used Pending 'void () noexcept' inline default trivial
|   `-CompoundStmt 0x558d612fb580 <col:11>
|-FieldDecl 0x558d611caf70 <line:343:5, col:13> col:13 referenced _pending_nextptr 'Task::Pending'
|-CXXConstructorDecl 0x558d611cb0b8 <line:345:5, col:23> col:5 Task 'void (const Task &)'
| `-ParmVarDecl 0x558d611caff8 <col:10, col:22> col:22 x 'const Task &'
|-CXXMethodDecl 0x558d611cb268 <line:346:5, col:34> col:11 operator= 'Task &(const Task &)'
| `-ParmVarDecl 0x558d611cb178 <col:21, col:33> col:33 x 'const Task &'
|-CXXMethodDecl 0x558d611cb330 <line:347:5, col:18> col:10 cleanup 'void ()'
|-CXXMethodDecl 0x558d611cb3f0 <line:352:5, col:37> col:17 used on_scheduled_list 'bool () const' inline
|-CXXMethodDecl 0x558d611cb4b0 <line:353:5, line:355:5> line:353:17 on_pending_list 'bool () const' inline
| `-CompoundStmt 0x558d611ccb68 <col:41, line:355:5>
|   `-ReturnStmt 0x558d611ccb58 <line:354:9, col:38>
|     `-BinaryOperator 0x558d611ccb38 <col:16, col:38> 'bool' '!='
|       |-ImplicitCastExpr 0x558d611ccb08 <col:16, col:33> 'uintptr_t':'unsigned long' <LValueToRValue>
|       | `-MemberExpr 0x558d611ccab8 <col:16, col:33> 'const uintptr_t':'const unsigned long' lvalue .x 0x558d611caef8
|       |   `-MemberExpr 0x558d611cca88 <col:16> 'const Task::Pending' lvalue ->_pending_nextptr 0x558d611caf70
|       |     `-CXXThisExpr 0x558d611cca78 <col:16> 'const Task *' implicit this
|       `-ImplicitCastExpr 0x558d611ccb20 <col:38> 'unsigned long' <IntegralCast>
|         `-IntegerLiteral 0x558d611ccae8 <col:38> 'int' 0
|-CXXMethodDecl 0x558d611cb570 <line:356:5, col:33> col:17 needs_cleanup 'bool () const' inline
|-CXXMethodDecl 0x558d611cb6b0 <line:361:5, col:33> col:10 add_pending 'void (bool)'
| `-ParmVarDecl 0x558d611cb620 <col:22, col:27> col:27 always 'bool'
|-CXXMethodDecl 0x558d611cb828 <line:362:5, col:46> col:10 process_pending 'void (RouterThread *)'
| `-ParmVarDecl 0x558d611cb768 <col:26, col:40> col:40 thread 'RouterThread *'
|-CXXMethodDecl 0x558d611cb970 <line:364:5, col:64> col:10 used complete_schedule 'void (RouterThread *)'
| `-ParmVarDecl 0x558d611cb8e0 <col:28, col:42> col:42 process_pending_thread 'RouterThread *'
|-CXXMethodDecl 0x558d611cba38 <line:365:5, col:44> col:17 remove_from_scheduled_list 'void ()' inline
|-CXXMethodDecl 0x558d611cbc00 <line:367:5, col:55> col:17 error_hook 'bool (Task *, void *)' static
| |-ParmVarDecl 0x558d611cbae8 <col:28, col:34> col:34 task 'Task *'
| `-ParmVarDecl 0x558d611cbb68 <col:40, col:46> col:46 user_data 'void *'
|-FriendDecl 0x558d611cbd00 <line:369:5, col:18> col:12 'class RouterThread':'RouterThread'
`-FriendDecl 0x558d611cbd90 <line:370:5, col:18> col:12 'class Master':'Master'

Layout: <CGRecordLayout
  LLVMType:%class.Task = type { %struct.TaskLink.base, i32, i32, %"union.Task::Status", i1 (%class.Task*, i8*)*, i8*, %class.RouterThread*, %class.Element*, %"union.Task::Pending" }
  NonVirtualBaseLLVMType:%class.Task = type { %struct.TaskLink.base, i32, i32, %"union.Task::Status", i1 (%class.Task*, i8*)*, i8*, %class.RouterThread*, %class.Element*, %"union.Task::Pending" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | ActiveNotifier::task_or_signal_t
         0 |   class Task * t
         0 |   Notifier::callback_type f
         0 |   void * v
         0 |   uintptr_t p
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558d6130a148 <../dummy_inc/click/notifier.hh:151:13, line:156:5> line:151:13 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-FieldDecl 0x558d6130a278 <line:152:2, col:8> col:8 referenced t 'Task *'
|-FieldDecl 0x558d6130a2d8 <line:153:2, col:16> col:16 referenced f 'Notifier::callback_type':'void (*)(void *, Notifier *)'
|-FieldDecl 0x558d6130a340 <line:154:2, col:8> col:8 referenced v 'void *'
`-FieldDecl 0x558d6130a3a0 <line:155:2, col:12> col:12 referenced p 'uintptr_t':'unsigned long'

Layout: <CGRecordLayout
  LLVMType:%"union.ActiveNotifier::task_or_signal_t" = type { %class.Task* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558d61309220 <../dummy_inc/click/notifier.hh:132:1, line:167:1> line:132:7 referenced class ActiveNotifier definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-public 'Notifier'
|-CXXRecordDecl 0x558d61309378 <col:1, col:7> col:7 implicit referenced class ActiveNotifier
|-AccessSpecDecl 0x558d61309408 <col:42, col:48> col:42 public
|-CXXConstructorDecl 0x558d61309518 <line:134:5, col:45> col:5 used ActiveNotifier 'void (Notifier::SearchOp)'
| `-ParmVarDecl 0x558d61309440 <col:20, col:34> col:29 op 'Notifier::SearchOp' cinit
|   `-DeclRefExpr 0x558d6130ad30 <col:34> 'Notifier::SearchOp' EnumConstant 0x558d61303f10 'SEARCH_STOP' 'Notifier::SearchOp'
|-CXXDestructorDecl 0x558d61309610 <line:135:5, col:21> col:5 used ~ActiveNotifier 'void () noexcept'
| `-Overrides: [ 0x558d61304698 Notifier::~Notifier 'void () noexcept' ]
|-CXXMethodDecl 0x558d61309820 <line:137:5, col:55> col:9 add_activate_callback 'int (Notifier::callback_type, void *)'
| |-Overrides: [ 0x558d61305fc0 Notifier::add_activate_callback 'int (Notifier::callback_type, void *)' ]
| |-ParmVarDecl 0x558d61309700 <col:31, col:45> col:45 f 'Notifier::callback_type':'void (*)(void *, Notifier *)'
| `-ParmVarDecl 0x558d61309780 <col:48, col:54> col:54 v 'void *'
|-CXXMethodDecl 0x558d613099f8 <line:138:5, col:59> col:10 remove_activate_callback 'void (Notifier::callback_type, void *)'
| |-Overrides: [ 0x558d61306218 Notifier::remove_activate_callback 'void (Notifier::callback_type, void *)' ]
| |-ParmVarDecl 0x558d613098e0 <col:35, col:49> col:49 f 'Notifier::callback_type':'void (*)(void *, Notifier *)'
| `-ParmVarDecl 0x558d61309960 <col:52, col:58> col:58 v 'void *'
|-CXXMethodDecl 0x558d61309cb8 <line:139:5, col:70> col:10 listeners 'void (Vector<Task *> &) const'
| |-ParmVarDecl 0x558d61309b90 <col:20, col:35> col:35 v 'Vector<Task *> &'
| `-DeprecatedAttr 0x558d61309d60 <col:59> "" ""
|-CXXMethodDecl 0x558d61309ef0 <line:141:5, col:61> col:17 used set_active 'void (bool, bool)' inline
| |-ParmVarDecl 0x558d61309de0 <col:28, col:33> col:33 active 'bool'
| `-ParmVarDecl 0x558d61309e58 <col:41, col:57> col:46 schedule 'bool' cinit
|   `-CXXBoolLiteralExpr 0x558d6130ad50 <col:57> 'bool' true
|-CXXMethodDecl 0x558d61309fc0 <line:142:5, col:22> col:17 used wake 'void ()' inline
|-CXXMethodDecl 0x558d6130a080 <line:143:5, col:23> col:17 used sleep 'void ()' inline
|-AccessSpecDecl 0x558d6130a120 <line:149:3, col:10> col:3 private
|-CXXRecordDecl 0x558d6130a148 <line:151:13, line:156:5> line:151:13 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-FieldDecl 0x558d6130a278 <line:152:2, col:8> col:8 referenced t 'Task *'
| |-FieldDecl 0x558d6130a2d8 <line:153:2, col:16> col:16 referenced f 'Notifier::callback_type':'void (*)(void *, Notifier *)'
| |-FieldDecl 0x558d6130a340 <line:154:2, col:8> col:8 referenced v 'void *'
| `-FieldDecl 0x558d6130a3a0 <line:155:2, col:12> col:12 referenced p 'uintptr_t':'unsigned long'
|-TypedefDecl 0x558d6130a468 <line:151:5, line:156:7> col:7 referenced task_or_signal_t 'union task_or_signal_t':'ActiveNotifier::task_or_signal_t'
| `-ElaboratedType 0x558d6130a410 'union task_or_signal_t' sugar
|   `-RecordType 0x558d6130a1e0 'ActiveNotifier::task_or_signal_t'
|     `-CXXRecord 0x558d6130a148 ''
|-FieldDecl 0x558d6130a4e8 <line:158:5, col:11> col:11 referenced _listener1 'Task *'
|-FieldDecl 0x558d6130a5c8 <line:159:5, col:23> col:23 referenced _listeners 'ActiveNotifier::task_or_signal_t *'
|-CXXMethodDecl 0x558d6130a748 <line:161:5, col:46> col:9 listener_add 'int (Notifier::callback_type, void *)'
| |-ParmVarDecl 0x558d6130a628 <col:22, col:36> col:36 f 'Notifier::callback_type':'void (*)(void *, Notifier *)'
| `-ParmVarDecl 0x558d6130a6a8 <col:39, col:45> col:45 v 'void *'
|-CXXMethodDecl 0x558d6130a928 <line:162:5, col:49> col:9 listener_remove 'int (Notifier::callback_type, void *)'
| |-ParmVarDecl 0x558d6130a808 <col:25, col:39> col:39 f 'Notifier::callback_type':'void (*)(void *, Notifier *)'
| `-ParmVarDecl 0x558d6130a888 <col:42, col:48> col:48 v 'void *'
|-CXXConstructorDecl 0x558d6130aad8 <line:164:5, col:41> col:5 ActiveNotifier 'void (const ActiveNotifier &)'
| `-ParmVarDecl 0x558d6130aa18 <col:20, col:40> col:41 'const ActiveNotifier &'
`-CXXMethodDecl 0x558d6130ac88 <line:165:5, col:52> col:21 operator= 'ActiveNotifier &(const ActiveNotifier &)'
  `-ParmVarDecl 0x558d6130ab98 <col:31, col:51> col:52 'const ActiveNotifier &'

Layout: <CGRecordLayout
  LLVMType:%class.ActiveNotifier = type { %class.Notifier.base, %class.Task*, %"union.ActiveNotifier::task_or_signal_t"* }
  NonVirtualBaseLLVMType:%class.ActiveNotifier = type { %class.Notifier.base, %class.Task*, %"union.ActiveNotifier::task_or_signal_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558d6133a810 <../elements/standard/notifierqueue.hh:71:1, line:101:1> line:71:7 referenced class NotifierQueue definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-public 'SimpleQueue'
|-CXXRecordDecl 0x558d6133a968 <col:1, col:7> col:7 implicit referenced class NotifierQueue
|-AccessSpecDecl 0x558d6133a9f8 <col:44, col:50> col:44 public
|-CXXConstructorDecl 0x558d6133aa80 <line:73:5, col:19> col:5 used NotifierQueue 'void ()'
|-CXXMethodDecl 0x558d6133ab80 <line:75:5, col:62> col:17 class_name 'const char *() const'
| |-Overrides: [ 0x558d613279e0 SimpleQueue::class_name 'const char *() const' ]
| `-CompoundStmt 0x558d6133bff0 <col:36, col:62>
|   `-ReturnStmt 0x558d6133bfe0 <col:38, col:45>
|     `-ImplicitCastExpr 0x558d6133bfc8 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x558d6133bfa0 <col:45> 'const char [14]' lvalue "NotifierQueue"
|-CXXMethodDecl 0x558d6133acd0 <line:76:5, col:28> col:11 cast 'void *(const char *)'
| |-Overrides: [ 0x558d61327cc0 SimpleQueue::cast 'void *(const char *)' ]
| `-ParmVarDecl 0x558d6133ac38 <col:16, col:27> col:28 'const char *'
|-CXXMethodDecl 0x558d6133afb0 <line:78:5, col:55> col:9 configure 'int (Vector<String> &, ErrorHandler *)'
| |-Overrides: [ 0x558d61327fa0 SimpleQueue::configure 'int (Vector<String> &, ErrorHandler *)' ]
| |-ParmVarDecl 0x558d6133ae60 <col:19, col:35> col:35 conf 'Vector<String> &'
| `-ParmVarDecl 0x558d6133aed8 <col:41, col:54> col:55 'ErrorHandler *'
|-CXXMethodDecl 0x558d6133b188 <line:80:5, col:33> col:10 push 'void (int, Packet *)'
| |-Overrides: [ 0x558d61328a48 SimpleQueue::push 'void (int, Packet *)' ]
| |-ParmVarDecl 0x558d6133b078 <col:15, col:19> col:19 port 'int'
| `-ParmVarDecl 0x558d6133b0f0 <col:25, col:32> col:33 'Packet *'
|-CXXMethodDecl 0x558d6133b2e0 <line:81:5, col:26> col:13 pull 'Packet *(int)'
| |-Overrides: [ 0x558d61328ba0 SimpleQueue::pull 'Packet *(int)' ]
| `-ParmVarDecl 0x558d6133b250 <col:18, col:22> col:22 port 'int'
|-AccessSpecDecl 0x558d6133b388 <line:87:3, col:12> col:3 protected
|-EnumDecl 0x558d6133b3b0 <line:89:5, col:35> col:5
| `-EnumConstantDecl 0x558d6133b4b0 <col:12, col:33> col:12 referenced SLEEPINESS_TRIGGER 'NotifierQueue::(anonymous enum at ../elements/standard/notifierqueue.hh:89:5)'
|   `-ImplicitCastExpr 0x558d6133b500 <col:33> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x558d6133b490 <col:33> 'int' Int: 9
|       `-IntegerLiteral 0x558d6133b470 <col:33> 'int' 9
|-FieldDecl 0x558d6133b530 <line:90:5, col:9> col:9 referenced _sleepiness 'int'
|-FieldDecl 0x558d6133b590 <line:91:5, col:20> col:20 referenced _empty_note 'ActiveNotifier'
|-FriendDecl 0x558d6133b630 <line:93:5, col:18> col:12 'class MixedQueue':'MixedQueue'
|-FriendDecl 0x558d6133b6c0 <line:94:5, col:18> col:12 'class InOrderQueue':'InOrderQueue'
|-FriendDecl 0x558d6133b750 <line:95:5, col:18> col:12 'class ECNQueue':'ECNQueue'
|-FriendDecl 0x558d6133b7e0 <line:96:5, col:18> col:12 'class TokenQueue':'TokenQueue'
|-CXXConstructorDecl 0x558d6133b848 <line:71:7> col:7 implicit NotifierQueue 'void (const NotifierQueue &)' inline default_delete noexcept-unevaluated 0x558d6133b848
| `-ParmVarDecl 0x558d6133b958 <col:7> col:7 'const NotifierQueue &'
|-CXXConstructorDecl 0x558d6133b9f8 <col:7> col:7 implicit NotifierQueue 'void (NotifierQueue &&)' inline default_delete noexcept-unevaluated 0x558d6133b9f8
| `-ParmVarDecl 0x558d6133bb08 <col:7> col:7 'NotifierQueue &&'
|-CXXMethodDecl 0x558d6133bba8 <col:7> col:7 implicit operator= 'NotifierQueue &(const NotifierQueue &)' inline default_delete noexcept-unevaluated 0x558d6133bba8
| `-ParmVarDecl 0x558d6133bcb8 <col:7> col:7 'const NotifierQueue &'
|-CXXMethodDecl 0x558d6133bd28 <col:7> col:7 implicit operator= 'NotifierQueue &(NotifierQueue &&)' inline default_delete noexcept-unevaluated 0x558d6133bd28
| `-ParmVarDecl 0x558d6133be38 <col:7> col:7 'NotifierQueue &&'
`-CXXDestructorDecl 0x558d6133bec0 <col:7> col:7 implicit used ~NotifierQueue 'void () noexcept' inline default
  |-Overrides: [ 0x558d61329eb0 SimpleQueue::~SimpleQueue 'void () noexcept' ]
  `-CompoundStmt 0x558d61340090 <col:7>

Layout: <CGRecordLayout
  LLVMType:%class.NotifierQueue = type { %class.SimpleQueue, i32, %class.ActiveNotifier }
  NonVirtualBaseLLVMType:%class.NotifierQueue = type { %class.SimpleQueue, i32, %class.ActiveNotifier }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class FullNoteQueue
         0 |   class NotifierQueue (primary base)
         0 |     class SimpleQueue (primary base)
         0 |       class Element (primary base)
         0 |         (Element vtable pointer)
         8 |         class Element::Port *[2] _ports
        24 |         class Element::Port [4] _inline_ports
        88 |         int [2] _nports
        96 |         class Router * _router
       104 |         int _eindex
       108 |       class Storage (base)
       108 |         Storage::index_type _capacity
       112 |         volatile Storage::index_type _head
       116 |         volatile Storage::index_type _tail
       120 |       class Packet *volatile * _q
       128 |       volatile int _drops
       132 |       int _highwater_length
       136 |     int _sleepiness
       144 |     class ActiveNotifier _empty_note
       144 |       class Notifier (primary base)
       144 |         (Notifier vtable pointer)
       152 |         class NotifierSignal _signal
       152 |           union NotifierSignal::vmvalue _v
       152 |             class atomic_uint32_t * v1
       152 |             struct NotifierSignal::vmpair * vm
       160 |           uint32_t _mask
       168 |         enum Notifier::SearchOp _search_op
       176 |       class Task * _listener1
       184 |       ActiveNotifier::task_or_signal_t * _listeners
       192 |   class ActiveNotifier _full_note
       192 |     class Notifier (primary base)
       192 |       (Notifier vtable pointer)
       200 |       class NotifierSignal _signal
       200 |         union NotifierSignal::vmvalue _v
       200 |           class atomic_uint32_t * v1
       200 |           struct NotifierSignal::vmpair * vm
       208 |         uint32_t _mask
       216 |       enum Notifier::SearchOp _search_op
       224 |     class Task * _listener1
       232 |     ActiveNotifier::task_or_signal_t * _listeners
           | [sizeof=240, dsize=240, align=8,
           |  nvsize=240, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558d6133c008 <../elements/standard/fullnotequeue.hh:68:1, line:99:1> line:68:7 class FullNoteQueue definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-public 'NotifierQueue'
|-CXXRecordDecl 0x558d6133c168 <col:1, col:7> col:7 implicit referenced class FullNoteQueue
|-AccessSpecDecl 0x558d6133c1f8 <col:46, col:52> col:46 public
|-CXXConstructorDecl 0x558d6133c280 <line:70:5, col:19> col:5 FullNoteQueue 'void ()'
|-CXXMethodDecl 0x558d6133c380 <line:72:5, col:54> col:17 class_name 'const char *() const'
| |-Overrides: [ 0x558d6133ab80 NotifierQueue::class_name 'const char *() const' ]
| `-CompoundStmt 0x558d6133e018 <col:36, col:54>
|   `-ReturnStmt 0x558d6133e008 <col:38, col:45>
|     `-ImplicitCastExpr 0x558d6133dff0 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x558d6133dfd0 <col:45> 'const char [6]' lvalue "Queue"
|-CXXMethodDecl 0x558d6133c4d0 <line:73:5, col:28> col:11 cast 'void *(const char *)'
| |-Overrides: [ 0x558d6133acd0 NotifierQueue::cast 'void *(const char *)' ]
| `-ParmVarDecl 0x558d6133c438 <col:16, col:27> col:28 'const char *'
|-CXXMethodDecl 0x558d6133c7b0 <line:75:5, col:55> col:9 configure 'int (Vector<String> &, ErrorHandler *)'
| |-Overrides: [ 0x558d6133afb0 NotifierQueue::configure 'int (Vector<String> &, ErrorHandler *)' ]
| |-ParmVarDecl 0x558d6133c660 <col:19, col:35> col:35 conf 'Vector<String> &'
| `-ParmVarDecl 0x558d6133c6d8 <col:41, col:54> col:55 'ErrorHandler *'
|-CXXMethodDecl 0x558d6133ca90 <line:76:5, col:66> col:9 live_reconfigure 'int (Vector<String> &, ErrorHandler *)'
| |-Overrides: [ 0x558d613285e0 SimpleQueue::live_reconfigure 'int (Vector<String> &, ErrorHandler *)' ]
| |-ParmVarDecl 0x558d6133c940 <col:26, col:42> col:42 conf 'Vector<String> &'
| `-ParmVarDecl 0x558d6133c9b8 <col:48, col:62> col:62 errh 'ErrorHandler *'
|-CXXMethodDecl 0x558d6133cc68 <line:81:5, col:34> col:10 push 'void (int, Packet *)'
| |-Overrides: [ 0x558d6133b188 NotifierQueue::push 'void (int, Packet *)' ]
| |-ParmVarDecl 0x558d6133cb58 <col:15, col:19> col:19 port 'int'
| `-ParmVarDecl 0x558d6133cbd0 <col:25, col:33> col:33 p 'Packet *'
|-CXXMethodDecl 0x558d6133cdc0 <line:82:5, col:26> col:13 pull 'Packet *(int)'
| |-Overrides: [ 0x558d6133b2e0 NotifierQueue::pull 'Packet *(int)' ]
| `-ParmVarDecl 0x558d6133cd30 <col:18, col:22> col:22 port 'int'
|-AccessSpecDecl 0x558d6133ce68 <line:84:3, col:12> col:3 protected
|-FieldDecl 0x558d6133cea0 <line:86:5, col:20> col:20 referenced _full_note 'ActiveNotifier'
|-CXXMethodDecl 0x558d6133d298 <line:88:5, line:89:42> line:88:17 push_success 'void (Storage::index_type, Storage::index_type, Storage::index_type, Packet *)' inline
| |-ParmVarDecl 0x558d6133cf50 <col:30, col:50> col:50 h 'Storage::index_type':'unsigned int'
| |-ParmVarDecl 0x558d6133d018 <col:53, col:73> col:73 t 'Storage::index_type':'unsigned int'
| |-ParmVarDecl 0x558d6133d0e0 <line:89:9, col:29> col:29 nt 'Storage::index_type':'unsigned int'
| `-ParmVarDecl 0x558d6133d158 <col:33, col:41> col:41 p 'Packet *'
|-CXXMethodDecl 0x558d6133d3f8 <line:90:5, col:39> col:17 push_failure 'void (Packet *)' inline
| `-ParmVarDecl 0x558d6133d368 <col:30, col:38> col:38 p 'Packet *'
|-CXXMethodDecl 0x558d6133d6d8 <line:91:5, line:92:27> line:91:20 pull_success 'Packet *(Storage::index_type, Storage::index_type)' inline
| |-ParmVarDecl 0x558d6133d500 <col:33, col:53> col:53 h 'Storage::index_type':'unsigned int'
| `-ParmVarDecl 0x558d6133d5c8 <line:92:5, col:25> col:25 nh 'Storage::index_type':'unsigned int'
|-CXXMethodDecl 0x558d6133d7a8 <line:93:5, col:33> col:20 pull_failure 'Packet *()' inline
|-CXXConstructorDecl 0x558d6133d878 <line:68:7> col:7 implicit FullNoteQueue 'void (const FullNoteQueue &)' inline default_delete noexcept-unevaluated 0x558d6133d878
| `-ParmVarDecl 0x558d6133d988 <col:7> col:7 'const FullNoteQueue &'
|-CXXConstructorDecl 0x558d6133da28 <col:7> col:7 implicit FullNoteQueue 'void (FullNoteQueue &&)' inline default_delete noexcept-unevaluated 0x558d6133da28
| `-ParmVarDecl 0x558d6133db38 <col:7> col:7 'FullNoteQueue &&'
|-CXXMethodDecl 0x558d6133dbd8 <col:7> col:7 implicit operator= 'FullNoteQueue &(const FullNoteQueue &)' inline default_delete noexcept-unevaluated 0x558d6133dbd8
| `-ParmVarDecl 0x558d6133dce8 <col:7> col:7 'const FullNoteQueue &'
|-CXXMethodDecl 0x558d6133dd58 <col:7> col:7 implicit operator= 'FullNoteQueue &(FullNoteQueue &&)' inline default_delete noexcept-unevaluated 0x558d6133dd58
| `-ParmVarDecl 0x558d6133de68 <col:7> col:7 'FullNoteQueue &&'
`-CXXDestructorDecl 0x558d6133def0 <col:7> col:7 implicit ~FullNoteQueue 'void ()' inline default noexcept-unevaluated 0x558d6133def0
  `-Overrides: [ 0x558d6133bec0 NotifierQueue::~NotifierQueue 'void () noexcept' ]

Layout: <CGRecordLayout
  LLVMType:%class.FullNoteQueue = type { %class.NotifierQueue, %class.ActiveNotifier }
  NonVirtualBaseLLVMType:%class.FullNoteQueue = type { %class.NotifierQueue, %class.ActiveNotifier }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5)
         0 |   TimerCallback callback
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timer
         0 |   int _schedpos1
         8 |   class Timestamp _expiry_s
         8 |     union Timestamp::rep_t _t
         8 |       int64_t x
        16 |   union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5) _hook
        16 |     TimerCallback callback
        24 |   void * _thunk
        32 |   class Element * _owner
        40 |   class RouterThread * _thread
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558d611d0668 <../dummy_inc/click/timer.hh:343:5, line:345:5> line:343:5 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x558d611d0798 <line:344:2, col:16> col:16 referenced callback 'TimerCallback':'void (*)(Timer *, void *)'
`-CXXDestructorDecl 0x558d611d1288 <line:343:5> col:5 implicit ~ 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%union.anon = type { void (%class.Timer*, i8*)* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558d611ccf68 prev 0x558d61249240 <../dummy_inc/click/timer.hh:14:1, line:358:1> line:14:7 class Timer definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x558d611cd060 <col:1, col:7> col:7 implicit referenced class Timer
|-AccessSpecDecl 0x558d611cd0f0 <col:15, col:21> col:15 public
|-CXXConstructorDecl 0x558d611cd150 <line:22:5, col:11> col:5 Timer 'void ()'
|-CXXRecordDecl 0x558d611cd1f8 <line:24:5, line:25:5> line:24:12 referenced struct do_nothing_t definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| `-CXXRecordDecl 0x558d611cd318 <col:5, col:12> col:12 implicit struct do_nothing_t
|-CXXConstructorDecl 0x558d611cd4b8 <line:32:5, col:37> col:5 Timer 'void (const Timer::do_nothing_t &)'
| `-ParmVarDecl 0x558d611cd3f8 <col:11, col:31> col:31 unused 'const Timer::do_nothing_t &'
|-CXXConstructorDecl 0x558d611cd708 <line:38:5, col:43> col:5 Timer 'void (TimerCallback, void *)'
| |-ParmVarDecl 0x558d611cd578 <col:11, col:25> col:25 f 'TimerCallback':'void (*)(Timer *, void *)'
| `-ParmVarDecl 0x558d611cd5f8 <col:28, col:34> col:34 user_data 'void *'
|-CXXConstructorDecl 0x558d611cd860 <line:43:5, col:27> col:5 Timer 'void (Element *)'
| `-ParmVarDecl 0x558d611cd7d0 <col:11, col:20> col:20 element 'Element *'
|-CXXConstructorDecl 0x558d611cd9e8 <line:47:5, col:21> col:5 Timer 'void (Task *)'
| `-ParmVarDecl 0x558d611cd920 <col:11, col:17> col:17 task 'Task *'
|-CXXConstructorDecl 0x558d611cdb98 <line:52:5, col:25> col:5 Timer 'void (const Timer &)'
| `-ParmVarDecl 0x558d611cdad8 <col:11, col:24> col:24 x 'const Timer &'
|-CXXDestructorDecl 0x558d611cdc90 <line:55:5, line:58:5> line:55:12 ~Timer 'void () noexcept' inline
| `-CompoundStmt 0x558d611d1460 <col:21, line:58:5>
|   `-IfStmt 0x558d611d1448 <line:56:2, line:57:17>
|     |-CXXMemberCallExpr 0x558d611d13b0 <line:56:6, col:16> 'bool'
|     | `-MemberExpr 0x558d611d1380 <col:6> '<bound member function type>' ->scheduled 0x558d611ce4e8
|     |   `-ImplicitCastExpr 0x558d611d13d0 <col:6> 'const Timer *' <NoOp>
|     |     `-CXXThisExpr 0x558d611d1370 <col:6> 'Timer *' implicit this
|     `-CXXMemberCallExpr 0x558d611d1428 <line:57:6, col:17> 'void'
|       `-MemberExpr 0x558d611d13f8 <col:6> '<bound member function type>' ->unschedule 0x558d611cfb10
|         `-CXXThisExpr 0x558d611d13e8 <col:6> 'Timer *' implicit this
|-CXXMethodDecl 0x558d611cdd90 <line:62:5, line:65:5> line:62:17 used assign 'void ()' inline
| `-CompoundStmt 0x558d611d1600 <col:26, line:65:5>
|   |-BinaryOperator 0x558d611d1520 <line:63:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x558d611d14b8 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x558d611d0798
|   | | `-MemberExpr 0x558d611d1488 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x558d611d0858
|   | |   `-CXXThisExpr 0x558d611d1478 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x558d611d1508 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558d611d14e8 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x558d611d0cb8 'do_nothing_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x558d611d15e0 <line:64:2, col:20> 'void *' lvalue '='
|     |-MemberExpr 0x558d611d1550 <col:2> 'void *' lvalue ->_thunk 0x558d611d08d8
|     | `-CXXThisExpr 0x558d611d1540 <col:2> 'Timer *' implicit this
|     `-CStyleCastExpr 0x558d611d15b8 <col:11, col:20> 'void *' <IntegralToPointer>
|       `-IntegerLiteral 0x558d611d1580 <col:20> 'int' 1
|-CXXMethodDecl 0x558d611cded0 <line:68:5, line:71:5> line:68:17 assign 'void (const Timer::do_nothing_t &)' inline
| |-ParmVarDecl 0x558d611cde40 <col:24, col:44> col:44 used unused 'const Timer::do_nothing_t &'
| `-CompoundStmt 0x558d611d1760 <col:52, line:71:5>
|   |-CStyleCastExpr 0x558d611d1650 <line:69:2, col:9> 'void' <ToVoid>
|   | `-DeclRefExpr 0x558d611d1620 <col:9> 'const Timer::do_nothing_t' lvalue ParmVar 0x558d611cde40 'unused' 'const Timer::do_nothing_t &'
|   `-CXXMemberCallExpr 0x558d611d1740 <line:70:2, col:9> 'void'
|     `-MemberExpr 0x558d611d1710 <col:2> '<bound member function type>' ->assign 0x558d611cdd90
|       `-CXXThisExpr 0x558d611d1700 <col:2> 'Timer *' implicit this
|-CXXMethodDecl 0x558d611ce0a0 <line:76:5, line:79:5> line:76:17 assign 'void (TimerCallback, void *)' inline
| |-ParmVarDecl 0x558d611cdf88 <col:24, col:38> col:38 used f 'TimerCallback':'void (*)(Timer *, void *)'
| |-ParmVarDecl 0x558d611ce008 <col:41, col:47> col:47 used user_data 'void *'
| `-CompoundStmt 0x558d61281c40 <col:58, line:79:5>
|   |-BinaryOperator 0x558d61281b88 <line:77:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x558d61281b20 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x558d611d0798
|   | | `-MemberExpr 0x558d611d1790 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x558d611d0858
|   | |   `-CXXThisExpr 0x558d611d1780 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x558d61281b70 <col:19> 'TimerCallback':'void (*)(Timer *, void *)' <LValueToRValue>
|   |   `-DeclRefExpr 0x558d61281b50 <col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue ParmVar 0x558d611cdf88 'f' 'TimerCallback':'void (*)(Timer *, void *)'
|   `-BinaryOperator 0x558d61281c20 <line:78:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x558d61281bb8 <col:2> 'void *' lvalue ->_thunk 0x558d611d08d8
|     | `-CXXThisExpr 0x558d61281ba8 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x558d61281c08 <col:11> 'void *' <LValueToRValue>
|       `-DeclRefExpr 0x558d61281be8 <col:11> 'void *' lvalue ParmVar 0x558d611ce008 'user_data' 'void *'
|-CXXMethodDecl 0x558d611ce1f0 <line:84:5, line:87:5> line:84:10 assign 'void (Element *)'
| |-ParmVarDecl 0x558d611ce160 <col:17, col:26> col:26 used element 'Element *'
| `-CompoundStmt 0x558d61281dd8 <col:35, line:87:5>
|   |-BinaryOperator 0x558d61281d08 <line:85:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x558d61281ca0 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x558d611d0798
|   | | `-MemberExpr 0x558d61281c70 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x558d611d0858
|   | |   `-CXXThisExpr 0x558d61281c60 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x558d61281cf0 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558d61281cd0 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x558d611d0e90 'element_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x558d61281db8 <line:86:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x558d61281d38 <col:2> 'void *' lvalue ->_thunk 0x558d611d08d8
|     | `-CXXThisExpr 0x558d61281d28 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x558d61281da0 <col:11> 'void *' <BitCast>
|       `-ImplicitCastExpr 0x558d61281d88 <col:11> 'Element *' <LValueToRValue>
|         `-DeclRefExpr 0x558d61281d68 <col:11> 'Element *' lvalue ParmVar 0x558d611ce160 'element' 'Element *'
|-CXXMethodDecl 0x558d611ce338 <line:91:5, line:94:5> line:91:10 assign 'void (Task *)'
| |-ParmVarDecl 0x558d611ce2a8 <col:17, col:23> col:23 used task 'Task *'
| `-CompoundStmt 0x558d61281f70 <col:29, line:94:5>
|   |-BinaryOperator 0x558d61281ea0 <line:92:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x558d61281e38 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x558d611d0798
|   | | `-MemberExpr 0x558d61281e08 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x558d611d0858
|   | |   `-CXXThisExpr 0x558d61281df8 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x558d61281e88 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558d61281e68 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x558d611d1068 'task_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x558d61281f50 <line:93:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x558d61281ed0 <col:2> 'void *' lvalue ->_thunk 0x558d611d08d8
|     | `-CXXThisExpr 0x558d61281ec0 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x558d61281f38 <col:11> 'void *' <BitCast>
|       `-ImplicitCastExpr 0x558d61281f20 <col:11> 'Task *' <LValueToRValue>
|         `-DeclRefExpr 0x558d61281f00 <col:11> 'Task *' lvalue ParmVar 0x558d611ce2a8 'task' 'Task *'
|-CXXMethodDecl 0x558d611ce428 <line:98:5, line:100:5> line:98:17 initialized 'bool () const' inline
| `-CompoundStmt 0x558d61282050 <col:37, line:100:5>
|   `-ReturnStmt 0x558d61282040 <line:99:2, col:19>
|     `-BinaryOperator 0x558d61282020 <col:9, col:19> 'bool' '!='
|       |-ImplicitCastExpr 0x558d61281ff0 <col:9> 'Element *' <LValueToRValue>
|       | `-MemberExpr 0x558d61281fa0 <col:9> 'Element *const' lvalue ->_owner 0x558d611d0938
|       |   `-CXXThisExpr 0x558d61281f90 <col:9> 'const Timer *' implicit this
|       `-ImplicitCastExpr 0x558d61282008 <col:19> 'Element *' <NullToPointer>
|         `-IntegerLiteral 0x558d61281fd0 <col:19> 'int' 0
|-CXXMethodDecl 0x558d611ce4e8 <line:103:5, line:105:5> line:103:17 used scheduled 'bool () const' inline
| `-CompoundStmt 0x558d61282110 <col:35, line:105:5>
|   `-ReturnStmt 0x558d61282100 <line:104:2, col:23>
|     `-BinaryOperator 0x558d612820e0 <col:9, col:23> 'bool' '!='
|       |-ImplicitCastExpr 0x558d612820c8 <col:9> 'int' <LValueToRValue>
|       | `-MemberExpr 0x558d61282078 <col:9> 'const int' lvalue ->_schedpos1 0x558d611d05b8
|       |   `-CXXThisExpr 0x558d61282068 <col:9> 'const Timer *' implicit this
|       `-IntegerLiteral 0x558d612820a8 <col:23> 'int' 0
|-CXXMethodDecl 0x558d611ce5a8 <line:116:5, line:118:5> line:116:29 used expiry_steady 'const Timestamp &() const' inline
| `-CompoundStmt 0x558d61282178 <col:51, line:118:5>
|   `-ReturnStmt 0x558d61282168 <line:117:2, col:9>
|     `-MemberExpr 0x558d61282138 <col:9> 'const Timestamp' lvalue ->_expiry_s 0x558d611d0618
|       `-CXXThisExpr 0x558d61282128 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x558d611ce668 <line:131:5, line:136:5> line:131:22 expiry 'Timestamp () const' inline
| `-CompoundStmt 0x558d612826d0 <col:37, line:136:5>
|   `-IfStmt 0x558d612826a8 <line:132:2, line:135:13> has_else
|     |-ImplicitCastExpr 0x558d61282238 <line:132:6> 'bool' <MemberPointerToBoolean>
|     | `-ImplicitCastExpr 0x558d61282220 <col:6> 'Timestamp::unspecified_bool_type':'Timestamp::seconds_type (Timestamp::*)() const' <UserDefinedConversion>
|     |   `-CXXMemberCallExpr 0x558d61282200 <col:6> 'Timestamp::unspecified_bool_type':'Timestamp::seconds_type (Timestamp::*)() const'
|     |     `-MemberExpr 0x558d612821d0 <col:6> '<bound member function type>' .operator int (Timestamp::*)() const 0x558d611db318
|     |       `-MemberExpr 0x558d612821a0 <col:6> 'const Timestamp' lvalue ->_expiry_s 0x558d611d0618
|     |         `-CXXThisExpr 0x558d61282190 <col:6> 'const Timer *' implicit this
|     |-ReturnStmt 0x558d61282618 <line:133:6, col:72>
|     | `-ExprWithCleanups 0x558d61282600 <col:13, col:72> 'Timestamp'
|     |   `-CXXConstructExpr 0x558d612825d0 <col:13, col:72> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|     |     `-MaterializeTemporaryExpr 0x558d612825b8 <col:13, col:72> 'Timestamp' xvalue
|     |       `-CXXOperatorCallExpr 0x558d61282580 <col:13, col:72> 'Timestamp'
|     |         |-ImplicitCastExpr 0x558d61282568 <col:45> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|     |         | `-DeclRefExpr 0x558d61282548 <col:45> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x558d61209af0 'operator-' 'Timestamp (Timestamp, const Timestamp &)'
|     |         |-CXXConstructExpr 0x558d612824e8 <col:13, col:43> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|     |         | `-MaterializeTemporaryExpr 0x558d612824d0 <col:13, col:43> 'Timestamp' xvalue
|     |         |   `-CXXOperatorCallExpr 0x558d612823f8 <col:13, col:43> 'Timestamp'
|     |         |     |-ImplicitCastExpr 0x558d612823e0 <col:23> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|     |         |     | `-DeclRefExpr 0x558d612823c0 <col:23> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x558d612097b0 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|     |         |     |-CXXConstructExpr 0x558d61282360 <col:13> 'Timestamp' 'void (const Timestamp &) noexcept'
|     |         |     | `-MemberExpr 0x558d61282260 <col:13> 'const Timestamp' lvalue ->_expiry_s 0x558d611d0618
|     |         |     |   `-CXXThisExpr 0x558d61282250 <col:13> 'const Timer *' implicit this
|     |         |     `-MaterializeTemporaryExpr 0x558d612823a8 <col:25, col:43> 'const Timestamp' lvalue
|     |         |       `-ImplicitCastExpr 0x558d61282390 <col:25, col:43> 'const Timestamp' <NoOp>
|     |         |         `-CallExpr 0x558d61282340 <col:25, col:43> 'Timestamp'
|     |         |           `-ImplicitCastExpr 0x558d61282328 <col:25, col:36> 'Timestamp (*)()' <FunctionToPointerDecay>
|     |         |             `-DeclRefExpr 0x558d612822c8 <col:25, col:36> 'Timestamp ()' lvalue CXXMethod 0x558d611fce10 'recent' 'Timestamp ()'
|     |         `-MaterializeTemporaryExpr 0x558d61282530 <col:47, col:72> 'const Timestamp' lvalue
|     |           `-ImplicitCastExpr 0x558d61282518 <col:47, col:72> 'const Timestamp' <NoOp>
|     |             `-CallExpr 0x558d612824b0 <col:47, col:72> 'Timestamp'
|     |               `-ImplicitCastExpr 0x558d61282498 <col:47, col:58> 'Timestamp (*)()' <FunctionToPointerDecay>
|     |                 `-DeclRefExpr 0x558d61282468 <col:47, col:58> 'Timestamp ()' lvalue CXXMethod 0x558d61058360 'recent_steady' 'Timestamp ()'
|     `-ReturnStmt 0x558d61282698 <line:135:6, col:13>
|       `-CXXConstructExpr 0x558d61282668 <col:13> 'Timestamp' 'void (const Timestamp &) noexcept'
|         `-MemberExpr 0x558d61282638 <col:13> 'const Timestamp' lvalue ->_expiry_s 0x558d611d0618
|           `-CXXThisExpr 0x558d61282628 <col:13> 'const Timer *' implicit this
|-CXXMethodDecl 0x558d611ce728 <line:139:5, line:141:5> line:139:20 router 'Router *() const' inline
| `-CompoundStmt 0x558d612827b8 <col:35, line:141:5>
|   `-ReturnStmt 0x558d612827a8 <line:140:2, col:24>
|     `-CXXMemberCallExpr 0x558d61282770 <col:9, col:24> 'Router *'
|       `-MemberExpr 0x558d61282740 <col:9, col:17> '<bound member function type>' ->router 0x558d6125b9a0
|         `-ImplicitCastExpr 0x558d61282790 <col:9> 'const Element *' <NoOp>
|           `-ImplicitCastExpr 0x558d61282728 <col:9> 'Element *' <LValueToRValue>
|             `-MemberExpr 0x558d612826f8 <col:9> 'Element *const' lvalue ->_owner 0x558d611d0938
|               `-CXXThisExpr 0x558d612826e8 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x558d611ce7e8 <line:144:5, line:146:5> line:144:21 element 'Element *() const' inline
| `-CompoundStmt 0x558d61282838 <col:37, line:146:5>
|   `-ReturnStmt 0x558d61282828 <line:145:2, col:9>
|     `-ImplicitCastExpr 0x558d61282810 <col:9> 'Element *' <LValueToRValue>
|       `-MemberExpr 0x558d612827e0 <col:9> 'Element *const' lvalue ->_owner 0x558d611d0938
|         `-CXXThisExpr 0x558d612827d0 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x558d611ce8a8 <line:149:5, line:151:5> line:149:26 thread 'RouterThread *() const' inline
| `-CompoundStmt 0x558d612828b8 <col:41, line:151:5>
|   `-ReturnStmt 0x558d612828a8 <line:150:2, col:9>
|     `-ImplicitCastExpr 0x558d61282890 <col:9> 'RouterThread *' <LValueToRValue>
|       `-MemberExpr 0x558d61282860 <col:9> 'RouterThread *const' lvalue ->_thread 0x558d611d0998
|         `-CXXThisExpr 0x558d61282850 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x558d611ce970 <line:154:5, col:26> col:9 home_thread_id 'int () const'
|-CXXMethodDecl 0x558d611ceb30 <line:171:5, col:55> col:10 initialize 'void (Element *, bool)'
| |-ParmVarDecl 0x558d611cea20 <col:21, col:30> col:30 owner 'Element *'
| `-ParmVarDecl 0x558d611cea98 <col:37, col:50> col:42 quiet 'bool' cinit
|   `-CXXBoolLiteralExpr 0x558d611d1278 <col:50> 'bool' false
|-CXXMethodDecl 0x558d611cecb8 <line:181:5, col:35> col:10 initialize 'void (Router *)'
| `-ParmVarDecl 0x558d611cebf0 <col:21, col:29> col:29 router 'Router *'
|-CXXMethodDecl 0x558d611cee00 <line:191:5, col:57> col:10 used schedule_at_steady 'void (const Timestamp &)'
| `-ParmVarDecl 0x558d611ced70 <col:29, col:46> col:46 when_steady 'const Timestamp &'
|-CXXMethodDecl 0x558d611cef48 <line:197:5, col:59> col:10 reschedule_at_steady 'void (const Timestamp &)'
| `-ParmVarDecl 0x558d611ceeb8 <col:31, col:48> col:48 when_steady 'const Timestamp &'
|-CXXMethodDecl 0x558d611cf090 <line:210:5, col:50> col:17 used schedule_at 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x558d611cf000 <col:29, col:46> col:46 when 'const Timestamp &'
|-CXXMethodDecl 0x558d611cf1d8 <line:216:5, col:52> col:17 reschedule_at 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x558d611cf148 <col:31, col:48> col:48 when 'const Timestamp &'
|-CXXMethodDecl 0x558d611cf2a0 <line:221:5, line:223:5> line:221:17 schedule_now 'void ()' inline
| `-CompoundStmt 0x558d61282a20 <col:32, line:223:5>
|   `-ExprWithCleanups 0x558d61282a08 <line:222:2, col:47> 'void'
|     `-CXXMemberCallExpr 0x558d612829b0 <col:2, col:47> 'void'
|       |-MemberExpr 0x558d612828e0 <col:2> '<bound member function type>' ->schedule_at_steady 0x558d611cee00
|       | `-CXXThisExpr 0x558d612828d0 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x558d612829f0 <col:21, col:46> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x558d612829d8 <col:21, col:46> 'const Timestamp' <NoOp>
|           `-CallExpr 0x558d61282990 <col:21, col:46> 'Timestamp'
|             `-ImplicitCastExpr 0x558d61282978 <col:21, col:32> 'Timestamp (*)()' <FunctionToPointerDecay>
|               `-DeclRefExpr 0x558d61282948 <col:21, col:32> 'Timestamp ()' lvalue CXXMethod 0x558d61058360 'recent_steady' 'Timestamp ()'
|-CXXMethodDecl 0x558d611cf3e0 <line:233:5, col:47> col:10 used schedule_after 'void (const Timestamp &)'
| `-ParmVarDecl 0x558d611cf350 <col:25, col:42> col:42 delta 'const Timestamp &'
|-CXXMethodDecl 0x558d611cf528 <line:239:5, line:241:5> line:239:17 used schedule_after_sec 'void (uint32_t)' inline
| |-ParmVarDecl 0x558d611cf498 <col:36, col:45> col:45 used delta_sec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x558d61282ba8 <col:56, line:241:5>
|   `-ExprWithCleanups 0x558d61282b90 <line:240:2, col:40> 'void'
|     `-CXXMemberCallExpr 0x558d61282b38 <col:2, col:40> 'void'
|       |-MemberExpr 0x558d61282a48 <col:2> '<bound member function type>' ->schedule_after 0x558d611cf3e0
|       | `-CXXThisExpr 0x558d61282a38 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x558d61282b78 <col:17, col:39> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x558d61282b60 <col:17, col:39> 'const Timestamp' <NoOp>
|           `-CXXTemporaryObjectExpr 0x558d61282af8 <col:17, col:39> 'Timestamp' 'void (unsigned int, uint32_t)'
|             |-ImplicitCastExpr 0x558d61282ac8 <col:27> 'uint32_t':'unsigned int' <LValueToRValue>
|             | `-DeclRefExpr 0x558d61282a88 <col:27> 'uint32_t':'unsigned int' lvalue ParmVar 0x558d611cf498 'delta_sec' 'uint32_t':'unsigned int'
|             `-ImplicitCastExpr 0x558d61282ae0 <col:38> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x558d61282aa8 <col:38> 'int' 0
|-CXXMethodDecl 0x558d611cf670 <line:247:5, line:249:5> line:247:17 used schedule_after_msec 'void (uint32_t)' inline
| |-ParmVarDecl 0x558d611cf5e0 <col:37, col:46> col:46 used delta_msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x558d61282e18 <col:58, line:249:5>
|   `-ExprWithCleanups 0x558d61282e00 <line:248:2, col:49> 'void'
|     `-CXXMemberCallExpr 0x558d61282da8 <col:2, col:49> 'void'
|       |-MemberExpr 0x558d61282bd0 <col:2> '<bound member function type>' ->schedule_after 0x558d611cf3e0
|       | `-CXXThisExpr 0x558d61282bc0 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x558d61282de8 <col:17, col:48> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x558d61282dd0 <col:17, col:48> 'const Timestamp' <NoOp>
|           `-CallExpr 0x558d61282d50 <col:17, col:48> 'Timestamp'
|             |-ImplicitCastExpr 0x558d61282d38 <col:17, col:28> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x558d61282ca8 <col:17, col:28> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x558d611dd108 'make_msec' 'Timestamp (Timestamp::value_type)'
|             `-ImplicitCastExpr 0x558d61282d90 <col:38> 'Timestamp::value_type':'long' <IntegralCast>
|               `-ImplicitCastExpr 0x558d61282d78 <col:38> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x558d61282c88 <col:38> 'uint32_t':'unsigned int' lvalue ParmVar 0x558d611cf5e0 'delta_msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558d611cf7b8 <line:259:5, line:261:5> line:259:17 reschedule_after 'void (const Timestamp &)' inline
| |-ParmVarDecl 0x558d611cf728 <col:34, col:51> col:51 used delta 'const Timestamp &'
| `-CompoundStmt 0x558d61282ff8 <col:58, line:261:5>
|   `-ExprWithCleanups 0x558d61282fe0 <line:260:2, col:38> 'void'
|     `-CXXMemberCallExpr 0x558d61282f88 <col:2, col:38> 'void'
|       |-MemberExpr 0x558d61282e40 <col:2> '<bound member function type>' ->schedule_at_steady 0x558d611cee00
|       | `-CXXThisExpr 0x558d61282e30 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x558d61282fc8 <col:21, col:33> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x558d61282fb0 <col:21, col:33> 'const Timestamp' <NoOp>
|           `-CXXOperatorCallExpr 0x558d61282f50 <col:21, col:33> 'Timestamp'
|             |-ImplicitCastExpr 0x558d61282f38 <col:31> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x558d61282f18 <col:31> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x558d612097b0 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|             |-CXXConstructExpr 0x558d61282ee8 <col:21> 'Timestamp' 'void (const Timestamp &) noexcept'
|             | `-ImplicitCastExpr 0x558d61282ed0 <col:21> 'const Timestamp' lvalue <NoOp>
|             |   `-MemberExpr 0x558d61282e80 <col:21> 'Timestamp' lvalue ->_expiry_s 0x558d611d0618
|             |     `-CXXThisExpr 0x558d61282e70 <col:21> 'Timer *' implicit this
|             `-DeclRefExpr 0x558d61282eb0 <col:33> 'const Timestamp' lvalue ParmVar 0x558d611cf728 'delta' 'const Timestamp &'
|-CXXMethodDecl 0x558d611cf900 <line:268:5, line:270:5> line:268:17 used reschedule_after_sec 'void (uint32_t)' inline
| |-ParmVarDecl 0x558d611cf870 <col:38, col:47> col:47 used delta_sec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x558d612832d0 <col:58, line:270:5>
|   `-ExprWithCleanups 0x558d612832b8 <line:269:2, col:79> 'void'
|     `-CXXMemberCallExpr 0x558d61283260 <col:2, col:79> 'void'
|       |-MemberExpr 0x558d61283020 <col:2> '<bound member function type>' ->schedule_at_steady 0x558d611cee00
|       | `-CXXThisExpr 0x558d61283010 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x558d612832a0 <col:21, col:78> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x558d61283288 <col:21, col:78> 'const Timestamp' <NoOp>
|           `-CXXTemporaryObjectExpr 0x558d61283220 <col:21, col:78> 'Timestamp' 'void (unsigned int, uint32_t)'
|             |-BinaryOperator 0x558d61283158 <col:31, col:49> 'unsigned int' '+'
|             | |-ImplicitCastExpr 0x558d61283140 <col:31, col:45> 'unsigned int' <IntegralCast>
|             | | `-CXXMemberCallExpr 0x558d612830d0 <col:31, col:45> 'Timestamp::seconds_type':'int'
|             | |   `-MemberExpr 0x558d612830a0 <col:31, col:41> '<bound member function type>' .sec 0x558d61059e58
|             | |     `-ImplicitCastExpr 0x558d612830f0 <col:31> 'const Timestamp' lvalue <NoOp>
|             | |       `-MemberExpr 0x558d61283070 <col:31> 'Timestamp' lvalue ->_expiry_s 0x558d611d0618
|             | |         `-CXXThisExpr 0x558d61283060 <col:31> 'Timer *' implicit this
|             | `-ImplicitCastExpr 0x558d61283128 <col:49> 'uint32_t':'unsigned int' <LValueToRValue>
|             |   `-DeclRefExpr 0x558d61283108 <col:49> 'uint32_t':'unsigned int' lvalue ParmVar 0x558d611cf870 'delta_sec' 'uint32_t':'unsigned int'
|             `-CXXMemberCallExpr 0x558d612831e8 <col:60, col:77> 'uint32_t':'unsigned int'
|               `-MemberExpr 0x558d612831b8 <col:60, col:70> '<bound member function type>' .subsec 0x558d6105a550
|                 `-ImplicitCastExpr 0x558d61283208 <col:60> 'const Timestamp' lvalue <NoOp>
|                   `-MemberExpr 0x558d61283188 <col:60> 'Timestamp' lvalue ->_expiry_s 0x558d611d0618
|                     `-CXXThisExpr 0x558d61283178 <col:60> 'Timer *' implicit this
|-CXXMethodDecl 0x558d611cfa48 <line:277:5, line:279:5> line:277:17 used reschedule_after_msec 'void (uint32_t)' inline
| |-ParmVarDecl 0x558d611cf9b8 <col:39, col:48> col:48 used delta_msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x558d61283608 <col:60, line:279:5>
|   `-ExprWithCleanups 0x558d612835f0 <line:278:2, col:65> 'void'
|     `-CXXMemberCallExpr 0x558d61283598 <col:2, col:65> 'void'
|       |-MemberExpr 0x558d612832f8 <col:2> '<bound member function type>' ->schedule_at_steady 0x558d611cee00
|       | `-CXXThisExpr 0x558d612832e8 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x558d612835d8 <col:21, col:64> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x558d612835c0 <col:21, col:64> 'const Timestamp' <NoOp>
|           `-CXXOperatorCallExpr 0x558d61283560 <col:21, col:64> 'Timestamp'
|             |-ImplicitCastExpr 0x558d61283548 <col:31> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x558d61283528 <col:31> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x558d612097b0 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|             |-CXXConstructExpr 0x558d612834c8 <col:21> 'Timestamp' 'void (const Timestamp &) noexcept'
|             | `-ImplicitCastExpr 0x558d612834b0 <col:21> 'const Timestamp' lvalue <NoOp>
|             |   `-MemberExpr 0x558d61283338 <col:21> 'Timestamp' lvalue ->_expiry_s 0x558d611d0618
|             |     `-CXXThisExpr 0x558d61283328 <col:21> 'Timer *' implicit this
|             `-MaterializeTemporaryExpr 0x558d61283510 <col:33, col:64> 'const Timestamp' lvalue
|               `-ImplicitCastExpr 0x558d612834f8 <col:33, col:64> 'const Timestamp' <NoOp>
|                 `-CallExpr 0x558d61283458 <col:33, col:64> 'Timestamp'
|                   |-ImplicitCastExpr 0x558d61283440 <col:33, col:44> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|                   | `-DeclRefExpr 0x558d61283410 <col:33, col:44> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x558d611dd108 'make_msec' 'Timestamp (Timestamp::value_type)'
|                   `-ImplicitCastExpr 0x558d61283498 <col:54> 'Timestamp::value_type':'long' <IntegralCast>
|                     `-ImplicitCastExpr 0x558d61283480 <col:54> 'uint32_t':'unsigned int' <LValueToRValue>
|                       `-DeclRefExpr 0x558d612833f0 <col:54> 'uint32_t':'unsigned int' lvalue ParmVar 0x558d611cf9b8 'delta_msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558d611cfb10 <line:285:5, col:21> col:10 used unschedule 'void ()'
|-CXXMethodDecl 0x558d611cfbd0 <line:288:5, line:291:5> line:288:17 clear 'void ()' inline
| `-CompoundStmt 0x558d61283ad0 <col:25, line:291:5>
|   |-CXXMemberCallExpr 0x558d61283660 <line:289:2, col:13> 'void'
|   | `-MemberExpr 0x558d61283630 <col:2> '<bound member function type>' ->unschedule 0x558d611cfb10
|   |   `-CXXThisExpr 0x558d61283620 <col:2> 'Timer *' implicit this
|   `-ExprWithCleanups 0x558d61283ab8 <line:290:2, col:24> 'Timestamp' lvalue
|     `-CXXOperatorCallExpr 0x558d61283a80 <col:2, col:24> 'Timestamp' lvalue
|       |-ImplicitCastExpr 0x558d61283a68 <col:12> 'Timestamp &(*)(Timestamp &&) noexcept' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x558d61283718 <col:12> 'Timestamp &(Timestamp &&) noexcept' lvalue CXXMethod 0x558d60ef13f8 'operator=' 'Timestamp &(Timestamp &&) noexcept'
|       |-MemberExpr 0x558d61283690 <col:2> 'Timestamp' lvalue ->_expiry_s 0x558d611d0618
|       | `-CXXThisExpr 0x558d61283680 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x558d61283700 <col:14, col:24> 'Timestamp' xvalue
|         `-CXXTemporaryObjectExpr 0x558d612836d0 <col:14, col:24> 'Timestamp' 'void ()'
|-CXXMethodDecl 0x558d611cfc90 <line:304:5, line:310:5> line:304:29 used adjustment 'Timestamp ()' static inline
| `-CompoundStmt 0x558d61283e28 <col:42, line:310:5>
|   |-IfStmt 0x558d61283c70 <line:306:2, line:307:23>
|   | |-CallExpr 0x558d61283ba0 <line:306:6, col:30> 'bool'
|   | | `-ImplicitCastExpr 0x558d61283b88 <col:6, col:17> 'bool (*)()' <FunctionToPointerDecay>
|   | |   `-DeclRefExpr 0x558d61283b28 <col:6, col:17> 'bool ()' lvalue CXXMethod 0x558d611fb280 'warp_jumping' 'bool ()'
|   | `-ReturnStmt 0x558d61283c60 <line:307:6, col:23>
|   |   `-ExprWithCleanups 0x558d61283c48 <col:13, col:23> 'Timestamp'
|   |     `-CXXConstructExpr 0x558d61283c18 <col:13, col:23> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x558d61283c00 <col:13, col:23> 'Timestamp' xvalue
|   |         `-CXXTemporaryObjectExpr 0x558d61283bd0 <col:13, col:23> 'Timestamp' 'void ()'
|   `-ReturnStmt 0x558d61283e18 <line:309:2, col:33>
|     `-ExprWithCleanups 0x558d61283e00 <col:9, col:33> 'Timestamp'
|       `-CXXConstructExpr 0x558d61283dd0 <col:9, col:33> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x558d61283db8 <col:9, col:33> 'Timestamp' xvalue
|           `-CallExpr 0x558d61283d78 <col:9, col:33> 'Timestamp'
|             |-ImplicitCastExpr 0x558d61283d60 <col:9, col:20> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x558d61283d30 <col:9, col:20> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x558d611dd420 'make_usec' 'Timestamp (Timestamp::value_type)'
|             `-ImplicitCastExpr 0x558d61283da0 <col:30> 'Timestamp::value_type':'long' <IntegralCast>
|               `-IntegerLiteral 0x558d61283d10 <col:30> 'int' 500
|-CXXMethodDecl 0x558d611cfdd0 <line:317:5, col:80> col:17 schedule_after_s 'void (uint32_t)' inline
| |-ParmVarDecl 0x558d611cfd40 <col:34, col:43> col:43 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x558d611cfe78 <col:69> "" ""
|-CXXMethodDecl 0x558d611cff88 <line:323:5, col:81> col:17 schedule_after_ms 'void (uint32_t)' inline
| |-ParmVarDecl 0x558d611cfef8 <col:35, col:44> col:44 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x558d611d0030 <col:70> "" ""
|-CXXMethodDecl 0x558d611d0140 <line:329:5, col:82> col:17 reschedule_after_s 'void (uint32_t)' inline
| |-ParmVarDecl 0x558d611d00b0 <col:36, col:45> col:45 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x558d611d01e8 <col:71> "" ""
|-CXXMethodDecl 0x558d611d02f8 <line:335:5, col:83> col:17 reschedule_after_ms 'void (uint32_t)' inline
| |-ParmVarDecl 0x558d611d0268 <col:37, col:46> col:46 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x558d611d03a0 <col:72> "" ""
|-EnumDecl 0x558d611d0410 <line:337:5, col:27> col:5
| `-EnumConstantDecl 0x558d611d0510 <col:12, col:25> col:12 behind_sec 'Timer::(anonymous enum at ../dummy_inc/click/timer.hh:337:5)'
|   `-ImplicitCastExpr 0x558d611d0560 <col:25> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x558d611d04f0 <col:25> 'int' Int: 1
|       `-IntegerLiteral 0x558d611d04d0 <col:25> 'int' 1
|-AccessSpecDecl 0x558d611d0578 <line:339:3, col:10> col:3 private
|-FieldDecl 0x558d611d05b8 <line:341:5, col:9> col:9 referenced _schedpos1 'int'
|-FieldDecl 0x558d611d0618 <line:342:5, col:15> col:15 referenced _expiry_s 'Timestamp'
|-CXXRecordDecl 0x558d611d0668 <line:343:5, line:345:5> line:343:5 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x558d611d0798 <line:344:2, col:16> col:16 referenced callback 'TimerCallback':'void (*)(Timer *, void *)'
| `-CXXDestructorDecl 0x558d611d1288 <line:343:5> col:5 implicit ~ 'void () noexcept' inline default trivial
|-FieldDecl 0x558d611d0858 <col:5, line:345:7> col:7 referenced _hook 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)'
|-FieldDecl 0x558d611d08d8 <line:346:5, col:11> col:11 referenced _thunk 'void *'
|-FieldDecl 0x558d611d0938 <line:347:5, col:14> col:14 referenced _owner 'Element *'
|-FieldDecl 0x558d611d0998 <line:348:5, col:19> col:19 referenced _thread 'RouterThread *'
|-CXXMethodDecl 0x558d611d0ae8 <line:350:5, col:36> col:12 operator= 'Timer &(const Timer &)'
| `-ParmVarDecl 0x558d611d09f8 <col:22, col:35> col:35 x 'const Timer &'
|-CXXMethodDecl 0x558d611d0cb8 <line:352:5, col:58> col:17 used do_nothing_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x558d611d0ba0 <col:33, col:40> col:40 t 'Timer *'
| `-ParmVarDecl 0x558d611d0c20 <col:43, col:49> col:49 user_data 'void *'
|-CXXMethodDecl 0x558d611d0e90 <line:353:5, col:55> col:17 used element_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x558d611d0d78 <col:30, col:37> col:37 t 'Timer *'
| `-ParmVarDecl 0x558d611d0df8 <col:40, col:46> col:46 user_data 'void *'
|-CXXMethodDecl 0x558d611d1068 <line:354:5, col:52> col:17 used task_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x558d611d0f50 <col:27, col:34> col:34 t 'Timer *'
| `-ParmVarDecl 0x558d611d0fd0 <col:37, col:43> col:43 user_data 'void *'
`-FriendDecl 0x558d611d1238 <line:356:5, col:18> col:12 'class TimerSet':'TimerSet'

Layout: <CGRecordLayout
  LLVMType:%class.Timer = type { i32, %class.Timestamp, %union.anon, i8*, %class.Element*, %class.RouterThread* }
  NonVirtualBaseLLVMType:%class.Timer = type { i32, %class.Timestamp, %union.anon, i8*, %class.Element*, %class.RouterThread* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct String::rep_t
         0 |   const char * data
         8 |   int length
        16 |   struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class String
         0 |   struct String::rep_t _r
         0 |     const char * data
         8 |     int length
        16 |     struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558d6101d4c0 <../dummy_inc/click/string.hh:189:5, line:198:5> line:189:12 referenced struct memo_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x558d6101d5d8 <col:5, col:12> col:12 implicit struct memo_t
|-FieldDecl 0x558d6101d678 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
|-FieldDecl 0x558d6101d6d8 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
|-FieldDecl 0x558d6101d738 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
`-FieldDecl 0x558d6101d7e8 <line:197:2, col:18> col:7 real_data 'char [8]'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  NonVirtualBaseLLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558d6101daf0 <../dummy_inc/click/string.hh:204:5, line:208:5> line:204:12 referenced struct rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x558d6101dc08 <col:5, col:12> col:12 implicit struct rep_t
|-FieldDecl 0x558d6101dcb0 <line:205:2, col:14> col:14 referenced data 'const char *'
|-FieldDecl 0x558d6101dd18 <line:206:2, col:6> col:6 referenced length 'int'
|-FieldDecl 0x558d6101dda8 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
|-CXXConstructorDecl 0x558d61023e40 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x558d61024278 <col:12>
|-CXXConstructorDecl 0x558d61023f48 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x558d61024058 <col:12> col:12 used 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x558d6101dcb0 'data' 'const char *'
| | `-ImplicitCastExpr 0x558d61026800 <col:12> 'const char *' <LValueToRValue>
| |   `-MemberExpr 0x558d610267d0 <col:12> 'const char *const' lvalue .data 0x558d6101dcb0
| |     `-DeclRefExpr 0x558d610267b0 <col:12> 'const String::rep_t' lvalue ParmVar 0x558d61024058 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x558d6101dd18 'length' 'int'
| | `-ImplicitCastExpr 0x558d61026890 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x558d61026860 <col:12> 'const int' lvalue .length 0x558d6101dd18
| |     `-DeclRefExpr 0x558d61026840 <col:12> 'const String::rep_t' lvalue ParmVar 0x558d61024058 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x558d6101dda8 'memo' 'String::memo_t *'
| | `-ImplicitCastExpr 0x558d61026920 <col:12> 'String::memo_t *' <LValueToRValue>
| |   `-MemberExpr 0x558d610268f0 <col:12> 'String::memo_t *const' lvalue .memo 0x558d6101dda8
| |     `-DeclRefExpr 0x558d610268d0 <col:12> 'const String::rep_t' lvalue ParmVar 0x558d61024058 '' 'const String::rep_t &'
| `-CompoundStmt 0x558d61026978 <col:12>
|-CXXConstructorDecl 0x558d610240f8 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x558d610240f8
| `-ParmVarDecl 0x558d61024208 <col:12> col:12 'String::rep_t &&'
|-CXXDestructorDecl 0x558d61029760 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x558d61035178 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x558d61035288 <col:12> col:12 used 'const String::rep_t &'
| `-CompoundStmt 0x558d610357a0 <col:12>
|   |-BinaryOperator 0x558d610355b8 <col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x558d61035570 <col:12> 'const char *' lvalue ->data 0x558d6101dcb0
|   | | `-CXXThisExpr 0x558d61035560 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x558d610355a0 <col:12> 'const char *' <LValueToRValue>
|   |   `-MemberExpr 0x558d61035530 <col:12> 'const char *const' lvalue .data 0x558d6101dcb0
|   |     `-DeclRefExpr 0x558d61035510 <col:12> 'const String::rep_t' lvalue ParmVar 0x558d61035288 '' 'const String::rep_t &'
|   |-BinaryOperator 0x558d61035680 <col:12> 'int' lvalue '='
|   | |-MemberExpr 0x558d61035638 <col:12> 'int' lvalue ->length 0x558d6101dd18
|   | | `-CXXThisExpr 0x558d61035628 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x558d61035668 <col:12> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x558d610355f8 <col:12> 'const int' lvalue .length 0x558d6101dd18
|   |     `-DeclRefExpr 0x558d610355d8 <col:12> 'const String::rep_t' lvalue ParmVar 0x558d61035288 '' 'const String::rep_t &'
|   |-BinaryOperator 0x558d61035748 <col:12> 'String::memo_t *' lvalue '='
|   | |-MemberExpr 0x558d61035700 <col:12> 'String::memo_t *' lvalue ->memo 0x558d6101dda8
|   | | `-CXXThisExpr 0x558d610356f0 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x558d61035730 <col:12> 'String::memo_t *' <LValueToRValue>
|   |   `-MemberExpr 0x558d610356c0 <col:12> 'String::memo_t *const' lvalue .memo 0x558d6101dda8
|   |     `-DeclRefExpr 0x558d610356a0 <col:12> 'const String::rep_t' lvalue ParmVar 0x558d61035288 '' 'const String::rep_t &'
|   `-ReturnStmt 0x558d61035790 <col:12>
|     `-UnaryOperator 0x558d61035778 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x558d61035768 <col:12> 'String::rep_t *' this
`-CXXMethodDecl 0x558d610352f8 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x558d610352f8
  `-ParmVarDecl 0x558d61035408 <col:12> col:12 'String::rep_t &&'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  NonVirtualBaseLLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558d61014a30 <../dummy_inc/click/string.hh:19:1, line:304:1> line:19:7 referenced class String definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x558d61014b48 <col:1, col:7> col:7 implicit referenced class String
|-AccessSpecDecl 0x558d61014bd8 <col:16, col:22> col:16 public
|-TypedefDecl 0x558d61014c18 <line:21:5, col:25> col:25 referenced const_iterator 'const char *'
| `-PointerType 0x558d60ce6dc0 'const char *'
|   `-QualType 0x558d60ce6311 'const char' const
|     `-BuiltinType 0x558d60ce6310 'char'
|-TypedefDecl 0x558d61014ca0 <line:22:5, col:28> col:28 iterator 'String::const_iterator':'const char *'
| `-TypedefType 0x558d61014c70 'String::const_iterator' sugar
|   |-Typedef 0x558d61014c18 'const_iterator'
|   `-PointerType 0x558d60ce6dc0 'const char *'
|     `-QualType 0x558d60ce6311 'const char' const
|       `-BuiltinType 0x558d60ce6310 'char'
|-TypedefDecl 0x558d61014e10 <line:24:5, col:52> col:27 referenced unspecified_bool_type 'int (String::*)() const'
| `-MemberPointerType 0x558d61014d80 'int (String::*)() const'
|   |-RecordType 0x558d61014ac0 'String'
|   | `-CXXRecord 0x558d61014a30 'String'
|   `-ParenType 0x558d61014d20 'int () const' sugar
|     `-FunctionProtoType 0x558d60fe88b0 'int () const' const cdecl
|       `-BuiltinType 0x558d60ce6370 'int'
|-TypedefDecl 0x558d61014e78 <line:27:5, col:21> col:21 referenced intmax_t 'int64_t':'long'
| `-TypedefType 0x558d60e3d490 'int64_t' sugar
|   |-Typedef 0x558d60d4f2d0 'int64_t'
|   `-TypedefType 0x558d60d284d0 '__int64_t' sugar
|     |-Typedef 0x558d60d280a8 '__int64_t'
|     `-BuiltinType 0x558d60ce6390 'long'
|-TypedefDecl 0x558d61014ee0 <line:28:5, col:22> col:22 referenced uintmax_t 'uint64_t':'unsigned long'
| `-TypedefType 0x558d60e3d3b0 'uint64_t' sugar
|   |-Typedef 0x558d60d4f470 'uint64_t'
|   `-TypedefType 0x558d60d28560 '__uint64_t' sugar
|     |-Typedef 0x558d60d28118 '__uint64_t'
|     `-BuiltinType 0x558d60ce6430 'unsigned long'
|-TypedefDecl 0x558d61014f70 <line:36:5, col:22> col:22 int_large_t 'String::intmax_t':'long'
| `-TypedefType 0x558d61014f40 'String::intmax_t' sugar
|   |-Typedef 0x558d61014e78 'intmax_t'
|   `-TypedefType 0x558d60e3d490 'int64_t' sugar
|     |-Typedef 0x558d60d4f2d0 'int64_t'
|     `-TypedefType 0x558d60d284d0 '__int64_t' sugar
|       |-Typedef 0x558d60d280a8 '__int64_t'
|       `-BuiltinType 0x558d60ce6390 'long'
|-TypedefDecl 0x558d61015000 <line:37:5, col:23> col:23 uint_large_t 'String::uintmax_t':'unsigned long'
| `-TypedefType 0x558d61014fd0 'String::uintmax_t' sugar
|   |-Typedef 0x558d61014ee0 'uintmax_t'
|   `-TypedefType 0x558d60e3d3b0 'uint64_t' sugar
|     |-Typedef 0x558d60d4f470 'uint64_t'
|     `-TypedefType 0x558d60d28560 '__uint64_t' sugar
|       |-Typedef 0x558d60d28118 '__uint64_t'
|       `-BuiltinType 0x558d60ce6430 'unsigned long'
|-CXXConstructorDecl 0x558d610150c0 <line:39:5, col:19> col:12 used String 'void ()' inline
|-CXXConstructorDecl 0x558d61015268 <line:40:5, col:34> col:12 used String 'void (const String &)' inline
| `-ParmVarDecl 0x558d610151a8 <col:19, col:33> col:33 x 'const String &'
|-CXXConstructorDecl 0x558d61015418 <line:42:5, col:29> col:12 used String 'void (String &&)' inline
| `-ParmVarDecl 0x558d61015358 <col:19, col:28> col:28 x 'String &&'
|-CXXConstructorDecl 0x558d61015570 <line:44:5, col:35> col:12 used String 'void (const char *)' inline
| `-ParmVarDecl 0x558d610154e0 <col:19, col:31> col:31 cstr 'const char *'
|-CXXConstructorDecl 0x558d61015788 <line:45:5, col:41> col:12 String 'void (const char *, int)' inline
| |-ParmVarDecl 0x558d61015638 <col:19, col:31> col:31 s 'const char *'
| `-ParmVarDecl 0x558d610156b8 <col:34, col:38> col:38 len 'int'
|-CXXConstructorDecl 0x558d610159a8 <line:46:5, col:50> col:12 String 'void (const unsigned char *, int)' inline
| |-ParmVarDecl 0x558d61015858 <col:19, col:40> col:40 s 'const unsigned char *'
| `-ParmVarDecl 0x558d610158d8 <col:43, col:47> col:47 len 'int'
|-CXXConstructorDecl 0x558d61015bc8 <line:47:5, col:54> col:12 used String 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x558d61015a78 <col:19, col:31> col:31 first 'const char *'
| `-ParmVarDecl 0x558d61015af8 <col:38, col:50> col:50 last 'const char *'
|-CXXConstructorDecl 0x558d61015de8 <line:48:5, col:72> col:12 String 'void (const unsigned char *, const unsigned char *)' inline
| |-ParmVarDecl 0x558d61015c98 <col:19, col:40> col:40 first 'const unsigned char *'
| `-ParmVarDecl 0x558d61015d18 <col:47, col:68> col:68 last 'const unsigned char *'
|-CXXConstructorDecl 0x558d61015f78 <line:49:5, col:34> col:21 String 'void (bool)' inline
| `-ParmVarDecl 0x558d61015eb0 <col:28, col:33> col:33 x 'bool'
|-CXXConstructorDecl 0x558d610160f8 <line:50:5, col:34> col:21 String 'void (char)' inline
| `-ParmVarDecl 0x558d61016038 <col:28, col:33> col:33 c 'char'
|-CXXConstructorDecl 0x558d61016288 <line:51:5, col:43> col:21 String 'void (unsigned char)' inline
| `-ParmVarDecl 0x558d610161c0 <col:28, col:42> col:42 c 'unsigned char'
|-CXXConstructorDecl 0x558d610163e0 <line:52:5, col:26> col:14 String 'void (int)'
| `-ParmVarDecl 0x558d61016350 <col:21, col:25> col:25 x 'int'
|-CXXConstructorDecl 0x558d61016538 <line:53:5, col:31> col:14 String 'void (unsigned int)'
| `-ParmVarDecl 0x558d610164a8 <col:21, col:30> col:30 x 'unsigned int'
|-CXXConstructorDecl 0x558d61016690 <line:54:5, col:27> col:14 String 'void (long)'
| `-ParmVarDecl 0x558d61016600 <col:21, col:26> col:26 x 'long'
|-CXXConstructorDecl 0x558d61016818 <line:55:5, col:36> col:14 String 'void (unsigned long)'
| `-ParmVarDecl 0x558d61016758 <col:21, col:35> col:35 x 'unsigned long'
|-CXXConstructorDecl 0x558d610169a8 <line:57:5, col:32> col:14 String 'void (long long)'
| `-ParmVarDecl 0x558d610168e0 <col:21, col:31> col:31 x 'long long'
|-CXXConstructorDecl 0x558d61016b38 <line:58:5, col:41> col:14 String 'void (unsigned long long)'
| `-ParmVarDecl 0x558d61016a70 <col:21, col:40> col:40 x 'unsigned long long'
|-CXXConstructorDecl 0x558d61016cc8 <line:65:5, col:29> col:14 String 'void (double)'
| `-ParmVarDecl 0x558d61016c00 <col:21, col:28> col:28 x 'double'
|-CXXDestructorDecl 0x558d61016dc0 <line:67:5, col:20> col:12 used ~String 'void () noexcept' inline
|-CXXMethodDecl 0x558d61016ee8 <line:69:5, col:44> col:33 make_empty 'const String &()' static inline
|-CXXMethodDecl 0x558d61017068 <line:70:5, col:52> col:26 used make_uninitialized 'String (int)' static inline
| `-ParmVarDecl 0x558d61016fa0 <col:45, col:49> col:49 len 'int'
|-CXXMethodDecl 0x558d610171b8 <line:71:5, col:74> col:26 make_garbage 'String (int)' static inline
| |-ParmVarDecl 0x558d61017128 <col:39, col:43> col:43 len 'int'
| `-DeprecatedAttr 0x558d61017270 <col:63> "" ""
|-CXXMethodDecl 0x558d610173b8 <line:72:5, col:54> col:26 make_stable 'String (const char *)' static inline
| `-ParmVarDecl 0x558d610172f8 <col:38, col:50> col:50 cstr 'const char *'
|-CXXMethodDecl 0x558d610175c8 <line:73:5, col:60> col:26 make_stable 'String (const char *, int)' static inline
| |-ParmVarDecl 0x558d61017478 <col:38, col:50> col:50 s 'const char *'
| `-ParmVarDecl 0x558d610174f8 <col:53, col:57> col:57 len 'int'
|-CXXMethodDecl 0x558d610177e8 <line:74:5, col:73> col:26 make_stable 'String (const char *, const char *)' static inline
| |-ParmVarDecl 0x558d61017690 <col:38, col:50> col:50 first 'const char *'
| `-ParmVarDecl 0x558d61017710 <col:57, col:69> col:69 last 'const char *'
|-CXXMethodDecl 0x558d61017ac8 <line:75:5, col:80> col:19 make_numeric 'String (String::intmax_t, int, bool)' static
| |-ParmVarDecl 0x558d610178a8 <col:32, col:41> col:41 x 'String::intmax_t':'long'
| |-ParmVarDecl 0x558d61017928 <col:44, col:55> col:48 base 'int' cinit
| | `-IntegerLiteral 0x558d61023910 <col:55> 'int' 10
| `-ParmVarDecl 0x558d610179a0 <col:59, col:76> col:64 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x558d61023930 <col:76> 'bool' true
|-CXXMethodDecl 0x558d61017da8 <line:76:5, col:81> col:19 make_numeric 'String (String::uintmax_t, int, bool)' static
| |-ParmVarDecl 0x558d61017b90 <col:32, col:42> col:42 x 'String::uintmax_t':'unsigned long'
| |-ParmVarDecl 0x558d61017c10 <col:45, col:56> col:49 base 'int' cinit
| | `-IntegerLiteral 0x558d61023940 <col:56> 'int' 10
| `-ParmVarDecl 0x558d61017c88 <col:60, col:77> col:65 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x558d61023960 <col:77> 'bool' true
|-CXXMethodDecl 0x558d61017eb0 <line:78:5, col:31> col:24 used data 'const char *() const' inline
|-CXXMethodDecl 0x558d61017f78 <line:79:5, col:25> col:16 used length 'int () const' inline
|-CXXMethodDecl 0x558d61018040 <line:81:5, col:60> col:52 c_str 'const char *() const'
| |-NoInlineAttr 0x558d610180e0 <col:20>
| `-OptimizeNoneAttr 0x558d61018138 <col:30>
|-CXXConversionDecl 0x558d61018228 <line:83:5, col:45> col:12 operator int (String::*)() const 'String::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x558d610182f8 <line:84:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x558d610183b8 <line:85:5, col:29> col:17 operator! 'bool () const' inline
|-CXXMethodDecl 0x558d610184a8 <line:87:5, col:35> col:27 used begin 'String::const_iterator () const' inline
|-CXXMethodDecl 0x558d61018568 <line:88:5, col:33> col:27 used end 'String::const_iterator () const' inline
|-CXXMethodDecl 0x558d610186e8 <line:90:5, col:35> col:17 operator[] 'char (int) const' inline
| `-ParmVarDecl 0x558d61018620 <col:28, col:32> col:32 i 'int'
|-CXXMethodDecl 0x558d61018838 <line:91:5, col:27> col:17 at 'char (int) const' inline
| `-ParmVarDecl 0x558d610187a8 <col:20, col:24> col:24 i 'int'
|-CXXMethodDecl 0x558d61018928 <line:92:5, col:25> col:17 front 'char () const' inline
|-CXXMethodDecl 0x558d610189e8 <line:93:5, col:24> col:17 back 'char () const' inline
|-CXXMethodDecl 0x558d61018c38 <line:95:5, col:64> col:21 used hashcode 'uint32_t (const char *, const char *)' static
| |-ParmVarDecl 0x558d61018aa0 <col:30, col:42> col:42 begin 'const char *'
| `-ParmVarDecl 0x558d61018b20 <col:49, col:61> col:61 end 'const char *'
|-CXXMethodDecl 0x558d61018e98 <line:96:5, line:97:33> line:96:28 hashcode 'uint32_t (const unsigned char *, const unsigned char *)' static inline
| |-ParmVarDecl 0x558d61018d00 <col:37, col:58> col:58 begin 'const unsigned char *'
| `-ParmVarDecl 0x558d61018d80 <line:97:9, col:30> col:30 end 'const unsigned char *'
|-CXXMethodDecl 0x558d61018f68 <line:98:5, col:32> col:21 hashcode 'uint32_t () const' inline
|-CXXMethodDecl 0x558d61019178 <line:100:5, col:65> col:19 substring 'String (const char *, const char *) const' inline
| |-ParmVarDecl 0x558d61019020 <col:29, col:41> col:41 begin 'const char *'
| `-ParmVarDecl 0x558d610190a0 <col:48, col:60> col:60 end 'const char *'
|-CXXMethodDecl 0x558d61019398 <line:101:5, col:40> col:12 used substring 'String (int, int) const'
| |-ParmVarDecl 0x558d61019240 <col:22, col:26> col:26 pos 'int'
| `-ParmVarDecl 0x558d610192c0 <col:31, col:35> col:35 len 'int'
|-CXXMethodDecl 0x558d61019528 <line:102:5, col:38> col:19 substring 'String (int) const' inline
| `-ParmVarDecl 0x558d61019460 <col:29, col:33> col:33 pos 'int'
|-CXXMethodDecl 0x558d61019618 <line:103:5, col:25> col:12 trim_space 'String () const'
|-CXXMethodDecl 0x558d61019788 <line:105:5, col:41> col:17 equals 'bool (const String &) const' inline
| `-ParmVarDecl 0x558d610196c8 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x558d61019998 <line:106:5, col:48> col:17 used equals 'bool (const char *, int) const' inline
| |-ParmVarDecl 0x558d61019848 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x558d610198c8 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x558d61019bb0 <line:107:5, col:63> col:23 used compare 'int (const String &, const String &)' static inline
| |-ParmVarDecl 0x558d61019a58 <col:31, col:45> col:45 a 'const String &'
| `-ParmVarDecl 0x558d61019ad0 <col:48, col:62> col:62 b 'const String &'
|-CXXMethodDecl 0x558d61019d40 <line:108:5, col:41> col:16 used compare 'int (const String &) const' inline
| `-ParmVarDecl 0x558d61019c70 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x558d61019f60 <line:109:5, col:41> col:9 used compare 'int (const char *, int) const'
| |-ParmVarDecl 0x558d61019e00 <col:17, col:29> col:29 s 'const char *'
| `-ParmVarDecl 0x558d61019e80 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x558d6101a0b0 <line:110:5, col:46> col:17 starts_with 'bool (const String &) const' inline
| `-ParmVarDecl 0x558d6101a020 <col:29, col:43> col:43 x 'const String &'
|-CXXMethodDecl 0x558d6101a288 <line:111:5, col:46> col:10 used starts_with 'bool (const char *, int) const'
| |-ParmVarDecl 0x558d6101a170 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x558d6101a1f0 <col:37, col:41> col:41 len 'int'
|-CXXMethodDecl 0x558d6101a3d8 <line:112:5, col:44> col:10 glob_match 'bool (const String &) const'
| `-ParmVarDecl 0x558d6101a348 <col:21, col:35> col:35 pattern 'const String &'
|-CXXMethodDecl 0x558d6101a5f0 <line:125:5, col:42> col:9 find_left 'int (char, int) const'
| |-ParmVarDecl 0x558d6101a490 <col:19, col:24> col:24 c 'char'
| `-ParmVarDecl 0x558d6101a510 <col:27, col:39> col:31 start 'int' cinit
|   `-IntegerLiteral 0x558d61023970 <col:39> 'int' 0
|-CXXMethodDecl 0x558d6101a810 <line:126:5, col:51> col:9 find_left 'int (const String &, int) const'
| |-ParmVarDecl 0x558d6101a6b0 <col:19, col:33> col:33 x 'const String &'
| `-ParmVarDecl 0x558d6101a730 <col:36, col:48> col:40 start 'int' cinit
|   `-IntegerLiteral 0x558d61023990 <col:48> 'int' 0
|-CXXMethodDecl 0x558d6101a9f0 <line:127:5, col:52> col:9 find_right 'int (char, int) const'
| |-ParmVarDecl 0x558d6101a8d0 <col:20, col:25> col:25 c 'char'
| `-ParmVarDecl 0x558d6101a950 <col:28, col:40> col:32 start 'int' cinit
|   `-IntegerLiteral 0x558d610239b0 <col:40> 'int' 2147483647
|-CXXMethodDecl 0x558d6101aac0 <line:129:5, col:20> col:12 lower 'String () const'
|-CXXMethodDecl 0x558d6101ab80 <line:130:5, col:20> col:12 upper 'String () const'
|-CXXMethodDecl 0x558d6101ac40 <line:131:5, col:24> col:12 printable 'String () const'
|-CXXMethodDecl 0x558d6101ad00 <line:132:5, col:25> col:12 quoted_hex 'String () const'
|-CXXMethodDecl 0x558d6101adc0 <line:133:5, col:26> col:12 encode_json 'String () const'
|-CXXMethodDecl 0x558d6101af68 <line:135:5, col:45> col:20 operator= 'String &(const String &)' inline
| `-ParmVarDecl 0x558d6101ae70 <col:30, col:44> col:44 x 'const String &'
|-CXXMethodDecl 0x558d6101b0e8 <line:137:5, col:40> col:20 operator= 'String &(String &&)' inline
| `-ParmVarDecl 0x558d6101b020 <col:30, col:39> col:39 x 'String &&'
|-CXXMethodDecl 0x558d6101b2c0 <line:139:5, col:46> col:20 operator= 'String &(const char *)' inline
| `-ParmVarDecl 0x558d6101b1a8 <col:30, col:42> col:42 cstr 'const char *'
|-CXXMethodDecl 0x558d6101b438 <line:141:5, col:31> col:17 swap 'void (String &)' inline
| `-ParmVarDecl 0x558d6101b378 <col:22, col:30> col:30 x 'String &'
|-CXXMethodDecl 0x558d6101b580 <line:143:5, col:39> col:17 append 'void (const String &)' inline
| `-ParmVarDecl 0x558d6101b4f0 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x558d6101b6d0 <line:144:5, col:40> col:17 used append 'void (const char *)' inline
| `-ParmVarDecl 0x558d6101b640 <col:24, col:36> col:36 cstr 'const char *'
|-CXXMethodDecl 0x558d6101b8a8 <line:145:5, col:46> col:17 used append 'void (const char *, int)' inline
| |-ParmVarDecl 0x558d6101b790 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x558d6101b810 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x558d6101ba88 <line:146:5, col:59> col:17 append 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x558d6101b970 <col:24, col:36> col:36 first 'const char *'
| `-ParmVarDecl 0x558d6101b9f0 <col:43, col:55> col:55 last 'const char *'
|-CXXMethodDecl 0x558d6101bbd8 <line:147:5, col:30> col:17 append 'void (char)' inline
| `-ParmVarDecl 0x558d6101bb48 <col:24, col:29> col:29 c 'char'
|-CXXMethodDecl 0x558d6101bde8 <line:148:5, col:36> col:10 append_fill 'void (int, int)'
| |-ParmVarDecl 0x558d6101bc98 <col:22, col:26> col:26 c 'int'
| `-ParmVarDecl 0x558d6101bd18 <col:29, col:33> col:33 len 'int'
|-CXXMethodDecl 0x558d6101bf48 <line:149:5, col:39> col:11 used append_uninitialized 'char *(int)'
| `-ParmVarDecl 0x558d6101beb0 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x558d6101c0a0 <line:150:5, col:68> col:18 append_garbage 'char *(int)' inline
| |-ParmVarDecl 0x558d6101c008 <col:33, col:37> col:37 len 'int'
| `-DeprecatedAttr 0x558d6101c148 <col:57> "" ""
|-CXXMethodDecl 0x558d6101c258 <line:152:5, col:46> col:20 used operator+= 'String &(const String &)' inline
| `-ParmVarDecl 0x558d6101c1c8 <col:31, col:45> col:45 x 'const String &'
|-CXXMethodDecl 0x558d6101c3a8 <line:153:5, col:47> col:20 operator+= 'String &(const char *)' inline
| `-ParmVarDecl 0x558d6101c318 <col:31, col:43> col:43 cstr 'const char *'
|-CXXMethodDecl 0x558d6101c528 <line:154:5, col:37> col:20 operator+= 'String &(char)' inline
| `-ParmVarDecl 0x558d6101c460 <col:31, col:36> col:36 c 'char'
|-CXXMethodDecl 0x558d6101c5f0 <line:160:5, col:29> col:17 is_shared 'bool () const' inline
|-CXXMethodDecl 0x558d6101c6b0 <line:161:5, col:29> col:17 is_stable 'bool () const' inline
|-CXXMethodDecl 0x558d6101c770 <line:163:5, col:60> col:19 unique 'String () const' inline
| `-DeprecatedAttr 0x558d6101c810 <col:49> "" ""
|-CXXMethodDecl 0x558d6101c8a0 <line:164:5, col:30> col:19 used unshared 'String () const' inline
|-CXXMethodDecl 0x558d6101c960 <line:165:5, col:29> col:19 compact 'String () const' inline
|-CXXMethodDecl 0x558d6101ca50 <line:167:5, col:24> col:11 mutable_data 'char *()'
|-CXXMethodDecl 0x558d6101cb18 <line:168:5, col:25> col:11 mutable_c_str 'char *()'
|-CXXMethodDecl 0x558d6101cbd8 <line:170:5, col:52> col:33 make_out_of_memory 'const String &()' static inline
|-CXXMethodDecl 0x558d6101cc98 <line:171:5, col:33> col:17 out_of_memory 'bool () const' inline
|-CXXMethodDecl 0x558d6101cd90 <line:172:5, col:50> col:31 out_of_memory_data 'const char *()' static inline
|-CXXMethodDecl 0x558d6101ce58 <line:173:5, col:44> col:23 out_of_memory_length 'int ()' static inline
|-CXXMethodDecl 0x558d6101cf20 <line:174:5, col:42> col:31 empty_data 'const char *()' static inline
|-CXXMethodDecl 0x558d6101d0f8 <line:180:5, col:81> col:31 skip_utf8_char 'const char *(const char *, const char *)' static inline
| |-ParmVarDecl 0x558d6101cfd8 <col:46, col:58> col:58 first 'const char *'
| `-ParmVarDecl 0x558d6101d058 <col:65, col:77> col:77 last 'const char *'
|-CXXMethodDecl 0x558d6101d320 <line:181:5, line:182:38> line:181:33 used skip_utf8_char 'const unsigned char *(const unsigned char *, const unsigned char *)' static
| |-ParmVarDecl 0x558d6101d1c0 <col:48, col:69> col:69 first 'const unsigned char *'
| `-ParmVarDecl 0x558d6101d240 <line:182:13, col:34> col:34 last 'const unsigned char *'
|-VarDecl 0x558d6101d430 <line:184:5, col:35> col:23 used bool_data 'const char [11]' static
|-AccessSpecDecl 0x558d6101d498 <line:186:3, col:10> col:3 private
|-CXXRecordDecl 0x558d6101d4c0 <line:189:5, line:198:5> line:189:12 referenced struct memo_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x558d6101d5d8 <col:5, col:12> col:12 implicit struct memo_t
| |-FieldDecl 0x558d6101d678 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
| |-FieldDecl 0x558d6101d6d8 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
| |-FieldDecl 0x558d6101d738 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
| `-FieldDecl 0x558d6101d7e8 <line:197:2, col:18> col:7 real_data 'char [8]'
|-EnumDecl 0x558d6101d850 <line:200:5, line:202:5> line:200:5
| `-EnumConstantDecl 0x558d6101da88 <line:201:2, col:32> col:2 MEMO_SPACE 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)'
|   `-ImplicitCastExpr 0x558d6101dad8 <col:15, col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x558d6101da68 <col:15, col:32> 'unsigned long' Int: 12
|       `-BinaryOperator 0x558d6101d978 <col:15, col:32> 'unsigned long' '-'
|         |-UnaryExprOrTypeTraitExpr 0x558d6101d920 <col:15, col:28> 'unsigned long' sizeof 'String::memo_t'
|         `-ImplicitCastExpr 0x558d6101d960 <col:32> 'unsigned long' <IntegralCast>
|           `-IntegerLiteral 0x558d6101d940 <col:32> 'int' 8
|-CXXRecordDecl 0x558d6101daf0 <line:204:5, line:208:5> line:204:12 referenced struct rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x558d6101dc08 <col:5, col:12> col:12 implicit struct rep_t
| |-FieldDecl 0x558d6101dcb0 <line:205:2, col:14> col:14 referenced data 'const char *'
| |-FieldDecl 0x558d6101dd18 <line:206:2, col:6> col:6 referenced length 'int'
| |-FieldDecl 0x558d6101dda8 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
| |-CXXConstructorDecl 0x558d61023e40 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x558d61024278 <col:12>
| |-CXXConstructorDecl 0x558d61023f48 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x558d61024058 <col:12> col:12 used 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x558d6101dcb0 'data' 'const char *'
| | | `-ImplicitCastExpr 0x558d61026800 <col:12> 'const char *' <LValueToRValue>
| | |   `-MemberExpr 0x558d610267d0 <col:12> 'const char *const' lvalue .data 0x558d6101dcb0
| | |     `-DeclRefExpr 0x558d610267b0 <col:12> 'const String::rep_t' lvalue ParmVar 0x558d61024058 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x558d6101dd18 'length' 'int'
| | | `-ImplicitCastExpr 0x558d61026890 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x558d61026860 <col:12> 'const int' lvalue .length 0x558d6101dd18
| | |     `-DeclRefExpr 0x558d61026840 <col:12> 'const String::rep_t' lvalue ParmVar 0x558d61024058 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x558d6101dda8 'memo' 'String::memo_t *'
| | | `-ImplicitCastExpr 0x558d61026920 <col:12> 'String::memo_t *' <LValueToRValue>
| | |   `-MemberExpr 0x558d610268f0 <col:12> 'String::memo_t *const' lvalue .memo 0x558d6101dda8
| | |     `-DeclRefExpr 0x558d610268d0 <col:12> 'const String::rep_t' lvalue ParmVar 0x558d61024058 '' 'const String::rep_t &'
| | `-CompoundStmt 0x558d61026978 <col:12>
| |-CXXConstructorDecl 0x558d610240f8 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x558d610240f8
| | `-ParmVarDecl 0x558d61024208 <col:12> col:12 'String::rep_t &&'
| |-CXXDestructorDecl 0x558d61029760 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x558d61035178 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x558d61035288 <col:12> col:12 used 'const String::rep_t &'
| | `-CompoundStmt 0x558d610357a0 <col:12>
| |   |-BinaryOperator 0x558d610355b8 <col:12> 'const char *' lvalue '='
| |   | |-MemberExpr 0x558d61035570 <col:12> 'const char *' lvalue ->data 0x558d6101dcb0
| |   | | `-CXXThisExpr 0x558d61035560 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x558d610355a0 <col:12> 'const char *' <LValueToRValue>
| |   |   `-MemberExpr 0x558d61035530 <col:12> 'const char *const' lvalue .data 0x558d6101dcb0
| |   |     `-DeclRefExpr 0x558d61035510 <col:12> 'const String::rep_t' lvalue ParmVar 0x558d61035288 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x558d61035680 <col:12> 'int' lvalue '='
| |   | |-MemberExpr 0x558d61035638 <col:12> 'int' lvalue ->length 0x558d6101dd18
| |   | | `-CXXThisExpr 0x558d61035628 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x558d61035668 <col:12> 'int' <LValueToRValue>
| |   |   `-MemberExpr 0x558d610355f8 <col:12> 'const int' lvalue .length 0x558d6101dd18
| |   |     `-DeclRefExpr 0x558d610355d8 <col:12> 'const String::rep_t' lvalue ParmVar 0x558d61035288 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x558d61035748 <col:12> 'String::memo_t *' lvalue '='
| |   | |-MemberExpr 0x558d61035700 <col:12> 'String::memo_t *' lvalue ->memo 0x558d6101dda8
| |   | | `-CXXThisExpr 0x558d610356f0 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x558d61035730 <col:12> 'String::memo_t *' <LValueToRValue>
| |   |   `-MemberExpr 0x558d610356c0 <col:12> 'String::memo_t *const' lvalue .memo 0x558d6101dda8
| |   |     `-DeclRefExpr 0x558d610356a0 <col:12> 'const String::rep_t' lvalue ParmVar 0x558d61035288 '' 'const String::rep_t &'
| |   `-ReturnStmt 0x558d61035790 <col:12>
| |     `-UnaryOperator 0x558d61035778 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x558d61035768 <col:12> 'String::rep_t *' this
| `-CXXMethodDecl 0x558d610352f8 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x558d610352f8
|   `-ParmVarDecl 0x558d61035408 <col:12> col:12 'String::rep_t &&'
|-FieldDecl 0x558d6101de20 <line:211:5, col:19> col:19 referenced _r 'String::rep_t' mutable
|-CXXMethodDecl 0x558d6101e068 <line:256:5, line:261:5> line:256:17 used assign_memo 'void (const char *, int, String::memo_t *) const' inline
| |-ParmVarDecl 0x558d6101de88 <col:29, col:41> col:41 used data 'const char *'
| |-ParmVarDecl 0x558d6101df08 <col:47, col:51> col:51 used length 'int'
| |-ParmVarDecl 0x558d6101df80 <col:59, col:67> col:67 used memo 'String::memo_t *'
| `-CompoundStmt 0x558d61023e00 <col:79, line:261:5>
|   |-BinaryOperator 0x558d61023a78 <line:257:2, col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x558d61023a10 <col:2, col:5> 'const char *' lvalue .data 0x558d6101dcb0
|   | | `-MemberExpr 0x558d610239e0 <col:2> 'String::rep_t' lvalue ->_r 0x558d6101de20
|   | |   `-CXXThisExpr 0x558d610239d0 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x558d61023a60 <col:12> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x558d61023a40 <col:12> 'const char *' lvalue ParmVar 0x558d6101de88 'data' 'const char *'
|   |-BinaryOperator 0x558d61023b40 <line:258:2, col:14> 'int' lvalue '='
|   | |-MemberExpr 0x558d61023ad8 <col:2, col:5> 'int' lvalue .length 0x558d6101dd18
|   | | `-MemberExpr 0x558d61023aa8 <col:2> 'String::rep_t' lvalue ->_r 0x558d6101de20
|   | |   `-CXXThisExpr 0x558d61023a98 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x558d61023b28 <col:14> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x558d61023b08 <col:14> 'int' lvalue ParmVar 0x558d6101df08 'length' 'int'
|   `-IfStmt 0x558d61023de8 <line:259:2, line:260:41>
|     |-ImplicitCastExpr 0x558d61023c60 <line:259:6, col:21> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x558d61023c48 <col:6, col:21> 'String::memo_t *' <LValueToRValue>
|     |   `-ParenExpr 0x558d61023c28 <col:6, col:21> 'String::memo_t *' lvalue
|     |     `-BinaryOperator 0x558d61023c08 <col:7, col:17> 'String::memo_t *' lvalue '='
|     |       |-MemberExpr 0x558d61023ba0 <col:7, col:10> 'String::memo_t *' lvalue .memo 0x558d6101dda8
|     |       | `-MemberExpr 0x558d61023b70 <col:7> 'String::rep_t' lvalue ->_r 0x558d6101de20
|     |       |   `-CXXThisExpr 0x558d61023b60 <col:7> 'const String *' implicit this
|     |       `-ImplicitCastExpr 0x558d61023bf0 <col:17> 'String::memo_t *' <LValueToRValue>
|     |         `-DeclRefExpr 0x558d61023bd0 <col:17> 'String::memo_t *' lvalue ParmVar 0x558d6101df80 'memo' 'String::memo_t *'
|     `-CallExpr 0x558d61023dc0 <line:260:6, col:41> 'void'
|       |-ImplicitCastExpr 0x558d61023da8 <col:6, col:23> 'void (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x558d61023cb0 <col:6, col:23> 'void (volatile uint32_t &)' lvalue CXXMethod 0x558d6100ca98 'inc' 'void (volatile uint32_t &)'
|       `-MemberExpr 0x558d61023d18 <col:27, col:33> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x558d6101d678
|         `-ImplicitCastExpr 0x558d61023d00 <col:27> 'String::memo_t *' <LValueToRValue>
|           `-DeclRefExpr 0x558d61023ce0 <col:27> 'String::memo_t *' lvalue ParmVar 0x558d6101df80 'memo' 'String::memo_t *'
|-CXXConstructorDecl 0x558d6101e318 <line:263:5, line:265:5> line:263:12 used String 'void (const char *, int, String::memo_t *)' inline
| |-ParmVarDecl 0x558d6101e138 <col:19, col:31> col:31 used data 'const char *'
| |-ParmVarDecl 0x558d6101e1b8 <col:37, col:41> col:41 used length 'int'
| |-ParmVarDecl 0x558d6101e230 <col:49, col:57> col:57 used memo 'String::memo_t *'
| |-CXXCtorInitializer Field 0x558d6101de20 '_r' 'String::rep_t'
| | `-CXXConstructExpr 0x558d61024288 <col:12> 'String::rep_t' 'void () noexcept'
| `-CompoundStmt 0x558d61024418 <col:63, line:265:5>
|   `-CXXMemberCallExpr 0x558d61024380 <line:264:2, col:32> 'void'
|     |-MemberExpr 0x558d610242f0 <col:2> '<bound member function type>' ->assign_memo 0x558d6101e068
|     | `-ImplicitCastExpr 0x558d610243b8 <col:2> 'const String *' <NoOp>
|     |   `-CXXThisExpr 0x558d610242e0 <col:2> 'String *' implicit this
|     |-ImplicitCastExpr 0x558d610243d0 <col:14> 'const char *' <LValueToRValue>
|     | `-DeclRefExpr 0x558d61024320 <col:14> 'const char *' lvalue ParmVar 0x558d6101e138 'data' 'const char *'
|     |-ImplicitCastExpr 0x558d610243e8 <col:20> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x558d61024340 <col:20> 'int' lvalue ParmVar 0x558d6101e1b8 'length' 'int'
|     `-ImplicitCastExpr 0x558d61024400 <col:28> 'String::memo_t *' <LValueToRValue>
|       `-DeclRefExpr 0x558d61024360 <col:28> 'String::memo_t *' lvalue ParmVar 0x558d6101e230 'memo' 'String::memo_t *'
|-CXXMethodDecl 0x558d6101e4a8 <line:267:5, line:269:5> line:267:17 used assign 'void (const String &) const' inline
| |-ParmVarDecl 0x558d6101e3e8 <col:24, col:38> col:38 used x 'const String &'
| `-CompoundStmt 0x558d61024670 <col:47, line:269:5>
|   `-CXXMemberCallExpr 0x558d610245f0 <line:268:2, col:47> 'void'
|     |-MemberExpr 0x558d61024440 <col:2> '<bound member function type>' ->assign_memo 0x558d6101e068
|     | `-CXXThisExpr 0x558d61024430 <col:2> 'const String *' implicit this
|     |-ImplicitCastExpr 0x558d61024628 <col:14, col:19> 'const char *' <LValueToRValue>
|     | `-MemberExpr 0x558d610244c0 <col:14, col:19> 'const char *' lvalue .data 0x558d6101dcb0
|     |   `-MemberExpr 0x558d61024490 <col:14, col:16> 'String::rep_t' lvalue ._r 0x558d6101de20
|     |     `-DeclRefExpr 0x558d61024470 <col:14> 'const String' lvalue ParmVar 0x558d6101e3e8 'x' 'const String &'
|     |-ImplicitCastExpr 0x558d61024640 <col:25, col:30> 'int' <LValueToRValue>
|     | `-MemberExpr 0x558d61024540 <col:25, col:30> 'int' lvalue .length 0x558d6101dd18
|     |   `-MemberExpr 0x558d61024510 <col:25, col:27> 'String::rep_t' lvalue ._r 0x558d6101de20
|     |     `-DeclRefExpr 0x558d610244f0 <col:25> 'const String' lvalue ParmVar 0x558d6101e3e8 'x' 'const String &'
|     `-ImplicitCastExpr 0x558d61024658 <col:38, col:43> 'String::memo_t *' <LValueToRValue>
|       `-MemberExpr 0x558d610245c0 <col:38, col:43> 'String::memo_t *' lvalue .memo 0x558d6101dda8
|         `-MemberExpr 0x558d61024590 <col:38, col:40> 'String::rep_t' lvalue ._r 0x558d6101de20
|           `-DeclRefExpr 0x558d61024570 <col:38> 'const String' lvalue ParmVar 0x558d6101e3e8 'x' 'const String &'
|-CXXMethodDecl 0x558d6101e570 <line:271:5, line:278:5> line:271:17 used deref 'void () const' inline
| `-CompoundStmt 0x558d61025030 <col:31, line:278:5>
|   `-IfStmt 0x558d61025018 <line:272:2, line:277:2>
|     |-ImplicitCastExpr 0x558d61024710 <line:272:6, col:9> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x558d610246f8 <col:6, col:9> 'String::memo_t *' <LValueToRValue>
|     |   `-MemberExpr 0x558d610246c8 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x558d6101dda8
|     |     `-MemberExpr 0x558d61024698 <col:6> 'String::rep_t' lvalue ->_r 0x558d6101de20
|     |       `-CXXThisExpr 0x558d61024688 <col:6> 'const String *' implicit this
|     `-CompoundStmt 0x558d61024ff0 <col:15, line:277:2>
|       |-ParenExpr 0x558d61024bc0 <line:273:6, col:166> 'void'
|       | `-ConditionalOperator 0x558d61024b90 <col:7, col:165> 'void'
|       |   |-CXXStaticCastExpr 0x558d61024820 <col:7, col:44> 'bool' static_cast<_Bool> <NoOp>
|       |   | `-ImplicitCastExpr 0x558d61024808 <col:27, col:36> 'bool' <IntegralToBoolean> part_of_explicit_cast
|       |   |   `-ImplicitCastExpr 0x558d610247f0 <col:27, col:36> 'uint32_t':'unsigned int' <LValueToRValue> part_of_explicit_cast
|       |   |     `-MemberExpr 0x558d610247b0 <col:27, col:36> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x558d6101d678
|       |   |       `-ImplicitCastExpr 0x558d61024798 <col:27, col:30> 'String::memo_t *' <LValueToRValue>
|       |   |         `-MemberExpr 0x558d61024768 <col:27, col:30> 'String::memo_t *' lvalue .memo 0x558d6101dda8
|       |   |           `-MemberExpr 0x558d61024738 <col:27> 'String::rep_t' lvalue ->_r 0x558d6101de20
|       |   |             `-CXXThisExpr 0x558d61024728 <col:27> 'const String *' implicit this
|       |   |-CXXFunctionalCastExpr 0x558d61024880 <col:48, col:55> 'void' functional cast to void <ToVoid>
|       |   | `-IntegerLiteral 0x558d61024860 <col:54> 'int' 0
|       |   `-CallExpr 0x558d61024af0 <col:59, col:165> 'void'
|       |     |-ImplicitCastExpr 0x558d61024ad8 <col:59> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x558d61024a58 <col:59> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x558d60d83cf0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|       |     |-ImplicitCastExpr 0x558d61024b30 <col:74> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x558d61024968 <col:74> 'const char [18]' lvalue "_r.memo->refcount"
|       |     |-ImplicitCastExpr 0x558d61024b48 <col:95> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x558d61024998 <col:95> 'const char [29]' lvalue "../dummy_inc/click/string.hh"
|       |     |-ImplicitCastExpr 0x558d61024b60 <col:127> 'unsigned int' <IntegralCast>
|       |     | `-IntegerLiteral 0x558d610249d0 <col:127> 'int' 273
|       |     `-ImplicitCastExpr 0x558d61024b78 <col:132, col:146> 'const char *' <ArrayToPointerDecay>
|       |       `-UnaryOperator 0x558d61024a40 <col:132, col:146> 'const char [27]' lvalue prefix '__extension__' cannot overflow
|       |         `-PredefinedExpr 0x558d61024a28 <col:146> 'const char [27]' lvalue __PRETTY_FUNCTION__
|       |           `-StringLiteral 0x558d610249f0 <col:146> 'const char [27]' lvalue "void String::deref() const"
|       |-IfStmt 0x558d61024f10 <line:274:6, line:275:22>
|       | |-CallExpr 0x558d61024dd0 <line:274:10, col:57> 'bool'
|       | | |-ImplicitCastExpr 0x558d61024db8 <col:10, col:27> 'bool (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | | | `-DeclRefExpr 0x558d61024d30 <col:10, col:27> 'bool (volatile uint32_t &)' lvalue CXXMethod 0x558d6100dee0 'dec_and_test' 'bool (volatile uint32_t &)'
|       | | `-MemberExpr 0x558d61024d00 <col:40, col:49> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x558d6101d678
|       | |   `-ImplicitCastExpr 0x558d61024ce8 <col:40, col:43> 'String::memo_t *' <LValueToRValue>
|       | |     `-MemberExpr 0x558d61024cb8 <col:40, col:43> 'String::memo_t *' lvalue .memo 0x558d6101dda8
|       | |       `-MemberExpr 0x558d61024c88 <col:40> 'String::rep_t' lvalue ->_r 0x558d6101de20
|       | |         `-CXXThisExpr 0x558d61024c78 <col:40> 'const String *' implicit this
|       | `-CallExpr 0x558d61024ed0 <line:275:3, col:22> 'void'
|       |   |-ImplicitCastExpr 0x558d61024eb8 <col:3> 'void (*)(String::memo_t *)' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x558d61024df8 <col:3> 'void (String::memo_t *)' lvalue CXXMethod 0x558d61022d50 'delete_memo' 'void (String::memo_t *)'
|       |   `-ImplicitCastExpr 0x558d61024ef8 <col:15, col:18> 'String::memo_t *' <LValueToRValue>
|       |     `-MemberExpr 0x558d61024e58 <col:15, col:18> 'String::memo_t *' lvalue .memo 0x558d6101dda8
|       |       `-MemberExpr 0x558d61024e28 <col:15> 'String::rep_t' lvalue ->_r 0x558d6101de20
|       |         `-CXXThisExpr 0x558d61024e18 <col:15> 'const String *' implicit this
|       `-BinaryOperator 0x558d61024fd0 <line:276:6, col:16> 'String::memo_t *' lvalue '='
|         |-MemberExpr 0x558d61024f68 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x558d6101dda8
|         | `-MemberExpr 0x558d61024f38 <col:6> 'String::rep_t' lvalue ->_r 0x558d6101de20
|         |   `-CXXThisExpr 0x558d61024f28 <col:6> 'const String *' implicit this
|         `-ImplicitCastExpr 0x558d61024fb8 <col:16> 'String::memo_t *' <NullToPointer>
|           `-IntegerLiteral 0x558d61024f98 <col:16> 'int' 0
|-CXXMethodDecl 0x558d6101e808 <line:280:5, col:56> col:10 used assign 'void (const char *, int, bool)'
| |-ParmVarDecl 0x558d6101e628 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x558d6101e6a8 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x558d6101e720 <col:41, col:46> col:46 need_deref 'bool'
|-CXXMethodDecl 0x558d6101e8e0 <line:281:5, col:31> col:10 assign_out_of_memory 'void ()'
|-CXXMethodDecl 0x558d6101eb30 <line:282:5, col:53> col:10 used append 'void (const char *, int, String::memo_t *)'
| |-ParmVarDecl 0x558d6101e998 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x558d6101ea18 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x558d6101ea90 <col:41, col:49> col:49 memo 'String::memo_t *'
|-CXXMethodDecl 0x558d6101ed18 <line:283:5, col:58> col:19 used hard_make_stable 'String (const char *, int)' static
| |-ParmVarDecl 0x558d6101ec00 <col:36, col:48> col:48 s 'const char *'
| `-ParmVarDecl 0x558d6101ec80 <col:51, col:55> col:55 len 'int'
|-CXXMethodDecl 0x558d6101ee18 <line:284:5, line:286:5> line:284:27 used absent_memo 'String::memo_t *()' static inline
| `-CompoundStmt 0x558d61025108 <col:41, line:286:5>
|   `-ReturnStmt 0x558d610250f8 <line:285:2, col:48>
|     `-CXXReinterpretCastExpr 0x558d610250c8 <col:9, col:48> 'String::memo_t *' reinterpret_cast<struct String::memo_t *> <IntegralToPointer>
|       `-CXXFunctionalCastExpr 0x558d61025090 <col:36, col:47> 'uintptr_t':'unsigned long' functional cast to uintptr_t <NoOp>
|         `-ImplicitCastExpr 0x558d61025078 <col:46> 'uintptr_t':'unsigned long' <IntegralCast> part_of_explicit_cast
|           `-IntegerLiteral 0x558d61025058 <col:46> 'int' 1
|-CXXMethodDecl 0x558d6101f0b8 <line:287:5, col:68> col:20 create_memo 'String::memo_t *(char *, int, int)' static
| |-ParmVarDecl 0x558d6101eed0 <col:32, col:38> col:38 space 'char *'
| |-ParmVarDecl 0x558d6101ef50 <col:45, col:49> col:49 dirty 'int'
| `-ParmVarDecl 0x558d6101efd0 <col:56, col:60> col:60 capacity 'int'
|-CXXMethodDecl 0x558d61022d50 <line:288:5, col:41> col:17 used delete_memo 'void (String::memo_t *)' static
| `-ParmVarDecl 0x558d6101f180 <col:29, col:37> col:37 memo 'String::memo_t *'
|-CXXMethodDecl 0x558d61022e20 <line:289:5, col:30> col:17 hard_c_str 'const char *() const'
|-CXXMethodDecl 0x558d61022ff0 <line:290:5, col:46> col:10 used hard_equals 'bool (const char *, int) const'
| |-ParmVarDecl 0x558d61022ed8 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x558d61022f58 <col:37, col:41> col:41 len 'int'
|-VarDecl 0x558d610230b0 <line:292:5, col:23> col:23 used null_data 'const char' static
|-VarDecl 0x558d61023178 <line:293:5, col:34> col:23 used oom_data 'const char [15]' static
|-VarDecl 0x558d61023278 <line:294:5, col:34> col:23 int_data 'const char [20]' static
|-VarDecl 0x558d610232f0 <line:295:5, col:24> col:24 used null_string_rep 'const String::rep_t' static
|-VarDecl 0x558d61023368 <line:296:5, col:24> col:24 used oom_string_rep 'const String::rep_t' static
|-EnumDecl 0x558d610233d0 <line:297:5, col:25> col:5
| `-EnumConstantDecl 0x558d610234d0 <col:12, col:22> col:12 referenced oom_len 'String::(anonymous enum at ../dummy_inc/click/string.hh:297:5)'
|   `-ImplicitCastExpr 0x558d61023520 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x558d610234b0 <col:22> 'int' Int: 14
|       `-IntegerLiteral 0x558d61023490 <col:22> 'int' 14
|-CXXMethodDecl 0x558d61023738 <line:299:5, col:46> col:19 make_claim 'String (char *, int, int)' static
| |-ParmVarDecl 0x558d61023550 <col:30, col:35> col:36 'char *'
| |-ParmVarDecl 0x558d610235d0 <col:38> col:41 'int'
| `-ParmVarDecl 0x558d61023650 <col:43> col:46 'int'
|-FriendDecl 0x558d61023840 <line:301:5, col:19> col:12 'struct rep_t':'String::rep_t'
`-FriendDecl 0x558d610238d0 <line:302:5, col:18> col:12 'class StringAccum':'StringAccum'

Layout: <CGRecordLayout
  LLVMType:%class.String = type { %"struct.String::rep_t" }
  NonVirtualBaseLLVMType:%class.String = type { %"struct.String::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct char_array<16>
         0 |   char [16] x
           | [sizeof=16, dsize=16, align=1,
           |  nvsize=16, nvalign=1]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x558d61288bb0 <../dummy_inc/click/type_traits.hh:165:1, line:167:1> line:165:28 struct char_array definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-TemplateArgument integral 16
|-PackedAttr 0x558d6134c6d8 <line:167:18>
|-CXXRecordDecl 0x558d6134c798 prev 0x558d61288bb0 <line:165:21, col:28> col:28 implicit struct char_array
`-FieldDecl 0x558d6134c8a8 <line:166:5, col:13> col:10 x 'char [16]'

Layout: <CGRecordLayout
  LLVMType:%struct.char_array = type { [16 x i8] }
  NonVirtualBaseLLVMType:%struct.char_array = type { [16 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>
