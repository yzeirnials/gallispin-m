
*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17)
         0 |   unsigned long long __wseq
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_internal_list
         0 |   struct __pthread_internal_list * __prev
         8 |   struct __pthread_internal_list * __next
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_mutex_s
         0 |   int __lock
         4 |   unsigned int __count
         8 |   int __owner
        12 |   unsigned int __nusers
        16 |   int __kind
        20 |   short __spins
        22 |   short __elision
        24 |   struct __pthread_internal_list __list
        24 |     struct __pthread_internal_list * __prev
        32 |     struct __pthread_internal_list * __next
           | [sizeof=40, dsize=40, align=8,
           |  nvsize=40, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17)
         0 |   unsigned long long __g1_start
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s
         0 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17) 
         0 |     unsigned long long __wseq
         0 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |       unsigned int __low
         4 |       unsigned int __high
         8 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17) 
         8 |     unsigned long long __g1_start
         8 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         8 |       unsigned int __low
        12 |       unsigned int __high
        16 |   unsigned int [2] __g_refs
        24 |   unsigned int [2] __g_size
        32 |   unsigned int __g1_orig_size
        36 |   unsigned int __wrefs
        40 |   unsigned int [2] __g_signals
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_rwlock_arch_t
         0 |   unsigned int __readers
         4 |   unsigned int __writers
         8 |   unsigned int __wrphase_futex
        12 |   unsigned int __writers_futex
        16 |   unsigned int __pad3
        20 |   unsigned int __pad4
        24 |   int __cur_writer
        28 |   int __shared
        32 |   signed char __rwelision
        33 |   unsigned char [7] __pad1
        40 |   unsigned long __pad2
        48 |   unsigned int __flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | lldiv_t
         0 |   long long quot
         8 |   long long rem
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct msghdr
         0 |   void * msg_name
         8 |   socklen_t msg_namelen
        16 |   struct iovec * msg_iov
        24 |   size_t msg_iovlen
        32 |   void * msg_control
        40 |   size_t msg_controllen
        48 |   int msg_flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | struct in_addr
         0 |   in_addr_t s_addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5)
         0 |   uint8_t [16] __u6_addr8
         0 |   uint16_t [8] __u6_addr16
         0 |   uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr
         0 |   sa_family_t sa_family
         2 |   char [14] sa_data
           | [sizeof=16, dsize=16, align=2,
           |  nvsize=16, nvalign=2]

*** Dumping AST Record Layout
         0 | struct in6_addr
         0 |   union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         0 |     uint8_t [16] __u6_addr8
         0 |     uint16_t [8] __u6_addr16
         0 |     uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr_storage
         0 |   sa_family_t ss_family
         2 |   char [118] __ss_padding
       120 |   unsigned long __ss_align
           | [sizeof=128, dsize=128, align=8,
           |  nvsize=128, nvalign=8]

*** Dumping AST Record Layout
         0 | struct sockaddr_in6
         0 |   sa_family_t sin6_family
         2 |   in_port_t sin6_port
         4 |   uint32_t sin6_flowinfo
         8 |   struct in6_addr sin6_addr
         8 |     union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         8 |       uint8_t [16] __u6_addr8
         8 |       uint16_t [8] __u6_addr16
         8 |       uint32_t [4] __u6_addr32
        24 |   uint32_t sin6_scope_id
           | [sizeof=28, dsize=28, align=4,
           |  nvsize=28, nvalign=4]

*** Dumping AST Record Layout
         0 | struct timeval
         0 |   __time_t tv_sec
         8 |   __suseconds_t tv_usec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::memo_t
         0 |   volatile uint32_t refcount
         4 |   uint32_t capacity
         8 |   volatile uint32_t dirty
        12 |   char [8] real_data
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping AST Record Layout
         0 | class IPAddress
         0 |   uint32_t _addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Timestamp::rep_t
         0 |   int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timestamp
         0 |   union Timestamp::rep_t _t
         0 |     int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct timespec
         0 |   __time_t tv_sec
         8 |   __syscall_slong_t tv_nsec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element::Port
         0 |   class Element * _e
         8 |   int _port
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping AST Record Layout
         0 | struct TimerSet::heap_element
         0 |   class Timestamp expiry_s
         0 |     union Timestamp::rep_t _t
         0 |       int64_t x
         8 |   class Timer * t
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct pollfd
         0 |   int fd
         4 |   short events
         6 |   short revents
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | struct SelectSet::SelectorInfo
         0 |   class Element * read
         8 |   class Element * write
        16 |   int pollfd
           | [sizeof=24, dsize=20, align=8,
           |  nvsize=20, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::rep_t
         0 |   const char * data
         8 |   int length
        16 |   struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class String
         0 |   struct String::rep_t _r
         0 |     const char * data
         8 |     int length
        16 |     struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | struct StringAccum::rep_t
         0 |   unsigned char * s
         8 |   int len
        12 |   int cap
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element
         0 |   (Element vtable pointer)
         8 |   class Element::Port *[2] _ports
        24 |   class Element::Port [4] _inline_ports
        88 |   int [2] _nports
        96 |   class Router * _router
       104 |   int _eindex
           | [sizeof=112, dsize=108, align=8,
           |  nvsize=108, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55a7747e7bc8 prev 0x55a7747df368 <../dummy_inc/click/element.hh:214:5, line:252:5> line:214:11 referenced class Port definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55a7747e7cc0 <col:5, col:11> col:11 implicit referenced class Port
|-AccessSpecDecl 0x55a7747e7d50 <col:18, col:24> col:18 public
|-CXXMethodDecl 0x55a7747e7dc8 <line:216:9, col:30> col:21 used active 'bool () const' inline
|-CXXMethodDecl 0x55a7747e7e88 <line:217:9, col:35> col:25 element 'Element *() const' inline
|-CXXMethodDecl 0x55a7747e7f50 <line:218:9, col:27> col:20 port 'int () const' inline
|-CXXMethodDecl 0x55a7747e80c8 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| |-ParmVarDecl 0x55a7747e8000 <col:54, col:62> col:62 p 'Packet *'
| |-NoInlineAttr 0x55a7747e8170 <col:24>
| `-OptimizeNoneAttr 0x55a7747e81c8 <col:34>
|-CXXMethodDecl 0x55a7747e8210 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
|-CXXMethodDecl 0x55a7747e84c8 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| |-ParmVarDecl 0x55a7747e82c0 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x55a7747e8338 <col:43, col:52> col:52 e 'Element *'
| `-ParmVarDecl 0x55a7747e83b8 <col:55, col:59> col:59 port 'int'
|-AccessSpecDecl 0x55a7747e8580 <line:229:7, col:14> col:7 private
|-FieldDecl 0x55a7747e85b8 <line:231:9, col:18> col:18 referenced _e 'Element *'
|-FieldDecl 0x55a7747e8620 <line:232:9, col:13> col:13 referenced _port 'int'
|-CXXConstructorDecl 0x55a7747e86a8 <line:247:9, col:21> col:16 Port 'void ()' inline
|-CXXMethodDecl 0x55a7747e89c8 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| |-ParmVarDecl 0x55a7747e8760 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x55a7747e87d8 <col:43, col:52> col:52 owner 'Element *'
| |-ParmVarDecl 0x55a7747e8850 <col:59, col:68> col:68 e 'Element *'
| `-ParmVarDecl 0x55a7747e88d0 <col:71, col:75> col:75 port 'int'
|-FriendDecl 0x55a7747e8ae0 <line:250:9, col:22> col:16 'class Element':'Element'
|-CXXConstructorDecl 0x55a7747f0458 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x55a7747f0458
| `-ParmVarDecl 0x55a7747f0568 <col:11> col:11 'const Element::Port &'
|-CXXConstructorDecl 0x55a7747f0608 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x55a7747f0608
| `-ParmVarDecl 0x55a7747f0718 <col:11> col:11 'Element::Port &&'
`-CXXDestructorDecl 0x55a7749ea470 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"class.Element::Port" = type <{ %class.Element*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%"class.Element::Port.base" = type <{ %class.Element*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55a7747dabe0 prev 0x55a7747da960 <../dummy_inc/click/element.hh:29:1, line:319:1> line:29:7 referenced class Element definition
|-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55a7747dacd8 <col:1, col:7> col:7 implicit referenced class Element
|-AccessSpecDecl 0x55a7747dad68 <col:17, col:23> col:17 public
|-CXXConstructorDecl 0x55a7747dadc8 <line:31:5, col:13> col:5 used Element 'void ()'
|-CXXDestructorDecl 0x55a7747daeb8 <line:32:5, col:22> col:13 used ~Element 'void () noexcept' virtual
|-VarDecl 0x55a7747dafb8 <line:33:5, col:16> col:16 nelements_allocated 'int' static
|-CXXMethodDecl 0x55a7747db188 <line:36:5, col:42> col:18 used push 'void (int, Packet *)' virtual
| |-ParmVarDecl 0x55a7747db038 <col:23, col:27> col:27 port 'int'
| `-ParmVarDecl 0x55a7747db0b0 <col:33, col:41> col:41 p 'Packet *'
|-CXXMethodDecl 0x55a7747db318 <line:37:5, col:70> col:21 used pull 'Packet *(int)' virtual
| |-ParmVarDecl 0x55a7747db250 <col:26, col:30> col:30 port 'int'
| `-WarnUnusedResultAttr 0x55a7747db3c0 <col:51> warn_unused_result ""
|-CXXMethodDecl 0x55a7747db4f8 <line:38:5, col:44> col:21 simple_action 'Packet *(Packet *)' virtual
| `-ParmVarDecl 0x55a7747db430 <col:35, col:43> col:43 p 'Packet *'
|-CXXMethodDecl 0x55a7747db698 <line:40:5, col:37> col:18 used run_task 'bool (Task *)' virtual
| `-ParmVarDecl 0x55a7747db5d8 <col:27, col:33> col:33 task 'Task *'
|-CXXMethodDecl 0x55a7747db838 <line:41:5, col:40> col:18 run_timer 'void (Timer *)' virtual
| `-ParmVarDecl 0x55a7747db778 <col:28, col:35> col:35 timer 'Timer *'
|-EnumDecl 0x55a7747db8e0 <line:43:5, col:46> col:5
| |-EnumConstantDecl 0x55a7747db9e0 <col:12, col:26> col:12 SELECT_READ 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
| | `-ImplicitCastExpr 0x55a7747dbac0 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a7747db9c0 <col:26> 'int' Int: 1
| |     `-IntegerLiteral 0x55a7747db9a0 <col:26> 'int' 1
| `-EnumConstantDecl 0x55a7747dba70 <col:29, col:44> col:29 SELECT_WRITE 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
|   `-ImplicitCastExpr 0x55a7747dbad8 <col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55a7747dba50 <col:44> 'int' Int: 2
|       `-IntegerLiteral 0x55a7747dba30 <col:44> 'int' 2
|-CXXMethodDecl 0x55a7747dbc20 <line:44:5, col:43> col:18 selected 'void (int, int)' virtual
| |-ParmVarDecl 0x55a7747dbb08 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x55a7747dbb88 <col:35, col:39> col:39 mask 'int'
|-CXXMethodDecl 0x55a7747dbd78 <line:45:5, col:33> col:18 selected 'void (int)' virtual
| `-ParmVarDecl 0x55a7747dbce8 <col:27, col:31> col:31 fd 'int'
|-CXXMethodDecl 0x55a7747dbfb8 <line:48:5, col:86> col:45 checked_output_push 'void (int, Packet *) const'
| |-ParmVarDecl 0x55a7747dbe38 <col:65, col:69> col:69 port 'int'
| |-ParmVarDecl 0x55a7747dbeb0 <col:75, col:83> col:83 p 'Packet *'
| |-NoInlineAttr 0x55a7747dc068 <col:20>
| `-OptimizeNoneAttr 0x55a7747dc0c0 <col:30>
|-CXXMethodDecl 0x55a7747dc1c8 <line:49:5, col:77> col:48 checked_input_pull 'Packet *(int) const'
| |-ParmVarDecl 0x55a7747dc100 <col:67, col:71> col:71 port 'int'
| |-NoInlineAttr 0x55a7747dc270 <col:20>
| `-OptimizeNoneAttr 0x55a7747dc2c8 <col:30>
|-CXXMethodDecl 0x55a7747dc318 <line:52:5, col:46> col:25 class_name 'const char *() const' virtual pure
|-CXXMethodDecl 0x55a7747dc3e0 <line:54:5, col:38> col:25 port_count 'const char *() const' virtual
|-VarDecl 0x55a7747dc4f8 <line:55:5, col:33> col:23 PORTS_0_0 'const char []' static
|-VarDecl 0x55a7747dc580 <line:56:5, col:33> col:23 PORTS_0_1 'const char []' static
|-VarDecl 0x55a7747dc608 <line:57:5, col:33> col:23 PORTS_1_0 'const char []' static
|-VarDecl 0x55a7747dc690 <line:58:5, col:33> col:23 used PORTS_1_1 'const char []' static
|-VarDecl 0x55a7747dc718 <line:59:5, col:35> col:23 PORTS_1_1X2 'const char []' static
|-CXXMethodDecl 0x55a7747dc7a8 <line:61:5, col:38> col:25 processing 'const char *() const' virtual
|-VarDecl 0x55a7747dc868 <line:62:5, col:32> col:23 AGNOSTIC 'const char []' static
|-VarDecl 0x55a7747dc8f0 <line:63:5, col:28> col:23 PUSH 'const char []' static
|-VarDecl 0x55a7747dc978 <line:64:5, col:28> col:23 PULL 'const char []' static
|-VarDecl 0x55a7747dca00 <line:65:5, col:36> col:23 PUSH_TO_PULL 'const char []' static
|-VarDecl 0x55a7747dca88 <line:66:5, col:36> col:23 used PULL_TO_PUSH 'const char []' static
|-VarDecl 0x55a7747dcb10 <line:67:5, col:39> col:23 PROCESSING_A_AH 'const char []' static
|-CXXMethodDecl 0x55a7747dcba0 <line:69:5, col:37> col:25 flow_code 'const char *() const' virtual
|-VarDecl 0x55a7747dcc60 <line:70:5, col:37> col:23 COMPLETE_FLOW 'const char []' static
|-CXXMethodDecl 0x55a7747dccf0 <line:72:5, col:33> col:25 flags 'const char *() const' virtual
|-CXXMethodDecl 0x55a7747dce40 <line:73:5, col:30> col:9 flag_value 'int (int) const'
| `-ParmVarDecl 0x55a7747dcda8 <col:20, col:24> col:24 flag 'int'
|-CXXMethodDecl 0x55a7747dcfd0 <line:75:5, col:40> col:19 cast 'void *(const char *)' virtual
| `-ParmVarDecl 0x55a7747dcf00 <col:24, col:36> col:36 name 'const char *'
|-CXXMethodDecl 0x55a7747dd280 <line:76:5, col:70> col:19 port_cast 'void *(bool, int, const char *)' virtual
| |-ParmVarDecl 0x55a7747dd088 <col:29, col:34> col:34 isoutput 'bool'
| |-ParmVarDecl 0x55a7747dd108 <col:44, col:48> col:48 port 'int'
| `-ParmVarDecl 0x55a7747dd188 <col:54, col:66> col:66 name 'const char *'
|-EnumDecl 0x55a7747dd338 <line:79:5, line:85:5> line:79:10 ConfigurePhase
| |-EnumConstantDecl 0x55a7747dd440 <line:80:9, col:33> col:9 CONFIGURE_PHASE_FIRST 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55a7747dd6d0 <col:33> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a7747dd420 <col:33> 'int' Int: 0
| |     `-IntegerLiteral 0x55a7747dd400 <col:33> 'int' 0
| |-EnumConstantDecl 0x55a7747dd4d0 <line:81:9, col:32> col:9 referenced CONFIGURE_PHASE_INFO 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55a7747dd6e8 <col:32> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a7747dd4b0 <col:32> 'int' Int: 20
| |     `-IntegerLiteral 0x55a7747dd490 <col:32> 'int' 20
| |-EnumConstantDecl 0x55a7747dd560 <line:82:9, col:38> col:9 CONFIGURE_PHASE_PRIVILEGED 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55a7747dd700 <col:38> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a7747dd540 <col:38> 'int' Int: 90
| |     `-IntegerLiteral 0x55a7747dd520 <col:38> 'int' 90
| |-EnumConstantDecl 0x55a7747dd5f0 <line:83:9, col:35> col:9 CONFIGURE_PHASE_DEFAULT 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55a7747dd718 <col:35> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a7747dd5d0 <col:35> 'int' Int: 100
| |     `-IntegerLiteral 0x55a7747dd5b0 <col:35> 'int' 100
| `-EnumConstantDecl 0x55a7747dd680 <line:84:9, col:32> col:9 CONFIGURE_PHASE_LAST 'Element::ConfigurePhase'
|   `-ImplicitCastExpr 0x55a7747dd730 <col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55a7747dd660 <col:32> 'int' Int: 2000
|       `-IntegerLiteral 0x55a7747dd640 <col:32> 'int' 2000
|-CXXMethodDecl 0x55a7747dd770 <line:86:5, col:35> col:17 configure_phase 'int () const' virtual
|-CXXMethodDecl 0x55a7747ddbb0 <line:88:5, col:67> col:17 configure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x55a7747dda20 <col:27, col:43> col:43 conf 'Vector<String> &'
| `-ParmVarDecl 0x55a7747dda98 <col:49, col:63> col:63 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55a7747ddc80 <line:90:5, col:31> col:18 add_handlers 'void ()' virtual
|-CXXMethodDecl 0x55a7747dde00 <line:92:5, col:46> col:17 initialize 'int (ErrorHandler *)' virtual
| `-ParmVarDecl 0x55a7747ddd30 <col:28, col:42> col:42 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55a7747de008 <line:94:5, col:69> col:18 take_state 'void (Element *, ErrorHandler *)' virtual
| |-ParmVarDecl 0x55a7747ddeb8 <col:29, col:38> col:38 old_element 'Element *'
| `-ParmVarDecl 0x55a7747ddf30 <col:51, col:65> col:65 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55a7747de108 <line:95:5, col:40> col:22 hotswap_element 'Element *() const' virtual
|-EnumDecl 0x55a7747de1a8 <line:97:5, line:106:5> line:97:10 referenced CleanupStage
| |-EnumConstantDecl 0x55a7747de270 <line:98:9> col:9 referenced CLEANUP_NO_ROUTER 'Element::CleanupStage'
| |-EnumConstantDecl 0x55a7747de300 <line:99:9, col:36> col:9 CLEANUP_BEFORE_CONFIGURE 'Element::CleanupStage'
| | `-ImplicitCastExpr 0x55a7747de530 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a7747de2e0 <col:36> 'int' Int: 0
| |     `-DeclRefExpr 0x55a7747de2c0 <col:36> 'int' EnumConstant 0x55a7747de270 'CLEANUP_NO_ROUTER' 'Element::CleanupStage'
| |-EnumConstantDecl 0x55a7747de350 <line:100:9> col:9 CLEANUP_CONFIGURE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55a7747de3a0 <line:101:9> col:9 CLEANUP_CONFIGURED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55a7747de3f0 <line:102:9> col:9 CLEANUP_INITIALIZE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55a7747de440 <line:103:9> col:9 CLEANUP_INITIALIZED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55a7747de490 <line:104:9> col:9 CLEANUP_ROUTER_INITIALIZED 'Element::CleanupStage'
| `-EnumConstantDecl 0x55a7747de4e0 <line:105:9> col:9 CLEANUP_MANUAL 'Element::CleanupStage'
|-CXXMethodDecl 0x55a7747de618 <line:107:5, col:44> col:18 cleanup 'void (Element::CleanupStage)' virtual
| `-ParmVarDecl 0x55a7747de558 <col:26, col:39> col:39 stage 'Element::CleanupStage'
|-CXXMethodDecl 0x55a7747de6e0 <line:109:5, col:42> col:24 static_initialize 'void ()' static inline
|-CXXMethodDecl 0x55a7747de7a0 <line:110:5, col:39> col:24 static_cleanup 'void ()' static inline
|-CXXMethodDecl 0x55a7747de860 <line:113:5, col:19> col:12 name 'String () const'
|-CXXMethodDecl 0x55a7747de920 <line:114:5, col:34> col:20 declaration 'String () const' virtual
|-CXXMethodDecl 0x55a7747dea38 <line:116:5, col:29> col:20 used router 'Router *() const' inline
|-CXXMethodDecl 0x55a7747deb00 <line:117:5, col:25> col:16 eindex 'int () const' inline
|-CXXMethodDecl 0x55a7747dec80 <line:118:5, col:34> col:16 eindex 'int (Router *) const' inline
| `-ParmVarDecl 0x55a7747debb0 <col:23, col:31> col:31 r 'Router *'
|-CXXMethodDecl 0x55a7747deda8 <line:121:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x55a7747defa8 <line:123:5, line:127:5> line:123:17 attach_router 'void (Router *, int)' inline
| |-ParmVarDecl 0x55a7747dee58 <col:31, col:39> col:39 used r 'Router *'
| |-ParmVarDecl 0x55a7747deed8 <col:42, col:46> col:46 used eindex 'int'
| `-CompoundStmt 0x55a7747ec8f8 <col:54, line:127:5>
|   |-ParenExpr 0x55a7747ec7a8 <line:124:9, col:152> 'void'
|   | `-ConditionalOperator 0x55a7747ec778 <col:10, col:151> 'void'
|   |   |-CXXStaticCastExpr 0x55a7747ec468 <col:10, col:38> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x55a7747ec440 <col:30, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-ImplicitCastExpr 0x55a7747ec428 <col:31> 'bool' <PointerToBoolean>
|   |   |     `-ImplicitCastExpr 0x55a7747ec410 <col:31> 'Router *' <LValueToRValue>
|   |   |       `-MemberExpr 0x55a7747ec3e0 <col:31> 'Router *' lvalue ->_router 0x55a7747ea2c0
|   |   |         `-CXXThisExpr 0x55a7747ec3d0 <col:31> 'Element *' implicit this
|   |   |-CXXFunctionalCastExpr 0x55a7747ec4c8 <col:42, col:49> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55a7747ec4a8 <col:48> 'int' 0
|   |   `-CallExpr 0x55a7747ec6d8 <col:53, col:151> 'void'
|   |     |-ImplicitCastExpr 0x55a7747ec6c0 <col:53> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55a7747ec6a0 <col:53> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55a7743152d0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55a7747ec718 <col:68> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a7747ec538 <col:68> 'const char [9]' lvalue "!_router"
|   |     |-ImplicitCastExpr 0x55a7747ec730 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a7747ec558 <col:80> 'const char [30]' lvalue "../dummy_inc/click/element.hh"
|   |     |-ImplicitCastExpr 0x55a7747ec748 <col:113> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55a7747ec590 <col:113> 'int' 124
|   |     `-ImplicitCastExpr 0x55a7747ec760 <col:118, col:132> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55a7747ec688 <col:118, col:132> 'const char [43]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55a7747ec670 <col:132> 'const char [43]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55a7747ec628 <col:132> 'const char [43]' lvalue "void Element::attach_router(Router *, int)"
|   |-BinaryOperator 0x55a7747ec840 <line:125:9, col:19> 'Router *' lvalue '='
|   | |-MemberExpr 0x55a7747ec7d8 <col:9> 'Router *' lvalue ->_router 0x55a7747ea2c0
|   | | `-CXXThisExpr 0x55a7747ec7c8 <col:9> 'Element *' implicit this
|   | `-ImplicitCastExpr 0x55a7747ec828 <col:19> 'Router *' <LValueToRValue>
|   |   `-DeclRefExpr 0x55a7747ec808 <col:19> 'Router *' lvalue ParmVar 0x55a7747dee58 'r' 'Router *'
|   `-BinaryOperator 0x55a7747ec8d8 <line:126:9, col:19> 'int' lvalue '='
|     |-MemberExpr 0x55a7747ec870 <col:9> 'int' lvalue ->_eindex 0x55a7747ea328
|     | `-CXXThisExpr 0x55a7747ec860 <col:9> 'Element *' implicit this
|     `-ImplicitCastExpr 0x55a7747ec8c0 <col:19> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x55a7747ec8a0 <col:19> 'int' lvalue ParmVar 0x55a7747deed8 'eindex' 'int'
|-CXXMethodDecl 0x55a7747df130 <line:130:5, col:38> col:16 used nports 'int (bool) const' inline
| `-ParmVarDecl 0x55a7747df068 <col:23, col:28> col:28 isoutput 'bool'
|-CXXMethodDecl 0x55a7747df200 <line:131:5, col:26> col:16 used ninputs 'int () const' inline
|-CXXMethodDecl 0x55a7747df2c8 <line:132:5, col:27> col:16 used noutputs 'int () const' inline
|-CXXRecordDecl 0x55a7747df368 <line:134:5, col:11> col:11 referenced class Port
|-CXXMethodDecl 0x55a7747df5b8 <line:135:5, col:82> col:52 used port 'const Element::Port &(bool, int) const'
| |-ParmVarDecl 0x55a7747df430 <col:57, col:62> col:62 isoutput 'bool'
| |-ParmVarDecl 0x55a7747df4b0 <col:72, col:76> col:76 port 'int'
| |-NoInlineAttr 0x55a7747df668 <col:20>
| `-OptimizeNoneAttr 0x55a7747df6c0 <col:30>
|-CXXMethodDecl 0x55a7747df7c8 <line:136:5, col:68> col:52 input 'const Element::Port &(int) const'
| |-ParmVarDecl 0x55a7747df700 <col:58, col:62> col:62 port 'int'
| |-NoInlineAttr 0x55a7747df870 <col:20>
| `-OptimizeNoneAttr 0x55a7747df8c8 <col:30>
|-CXXMethodDecl 0x55a7747df998 <line:137:5, col:69> col:52 output 'const Element::Port &(int) const'
| |-ParmVarDecl 0x55a7747df908 <col:59, col:63> col:63 port 'int'
| |-NoInlineAttr 0x55a7747dfa40 <col:20>
| `-OptimizeNoneAttr 0x55a7747dfa98 <col:30>
|-CXXMethodDecl 0x55a7747dfc28 <line:139:5, col:54> col:17 used port_active 'bool (bool, int) const' inline
| |-ParmVarDecl 0x55a7747dfad0 <col:29, col:34> col:34 isoutput 'bool'
| `-ParmVarDecl 0x55a7747dfb50 <col:44, col:48> col:48 port 'int'
|-CXXMethodDecl 0x55a7747dfdb8 <line:140:5, col:41> col:17 input_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x55a7747dfcf0 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x55a7747dff08 <line:141:5, col:41> col:17 input_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x55a7747dfe78 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x55a7747e0058 <line:142:5, col:42> col:17 output_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x55a7747dffc8 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x55a7747e01a8 <line:143:5, col:42> col:17 output_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x55a7747e0118 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x55a7747e0468 <line:144:5, col:57> col:10 port_flow 'void (bool, int, Bitvector *) const'
| |-ParmVarDecl 0x55a7747e0260 <col:20, col:25> col:25 isoutput 'bool'
| |-ParmVarDecl 0x55a7747e02e0 <col:35, col:39> col:39 port 'int'
| `-ParmVarDecl 0x55a7747e0388 <col:45, col:54> col:55 'Bitvector *'
|-CXXMethodDecl 0x55a7747e0540 <line:147:5, col:28> col:12 configuration 'String () const'
|-CXXMethodDecl 0x55a7747e0600 <line:149:5, col:41> col:18 can_live_reconfigure 'bool () const' virtual
|-CXXMethodDecl 0x55a7747e08d0 <line:150:5, col:64> col:17 live_reconfigure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x55a7747e0780 <col:34, col:48> col:49 'Vector<String> &'
| `-ParmVarDecl 0x55a7747e07f8 <col:51, col:63> col:64 'ErrorHandler *'
|-CXXMethodDecl 0x55a7747e09f8 <line:152:5, col:33> col:19 home_thread 'RouterThread *() const'
|-CXXMethodDecl 0x55a7747e0bd0 <line:156:5, col:36> col:9 add_select 'int (int, int)'
| |-ParmVarDecl 0x55a7747e0ab0 <col:20, col:24> col:24 fd 'int'
| `-ParmVarDecl 0x55a7747e0b30 <col:28, col:32> col:32 mask 'int'
|-CXXMethodDecl 0x55a7747e0db8 <line:157:5, col:39> col:9 remove_select 'int (int, int)'
| |-ParmVarDecl 0x55a7747e0c98 <col:23, col:27> col:27 fd 'int'
| `-ParmVarDecl 0x55a7747e0d18 <col:31, col:35> col:35 mask 'int'
|-CXXMethodDecl 0x55a7747e1128 <line:161:5, col:127> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x55a7747e0e78 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x55a7747e0ef0 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55a7747e0f70 <col:82, col:106> col:94 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x55a7747ebee0 <col:106> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x55a7747ebec0 <col:106> 'int' 0
| `-ParmVarDecl 0x55a7747e0fe8 <col:109, col:126> col:118 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55a7747ebf18 <col:126> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55a7747ebef8 <col:126> 'int' 0
|-CXXMethodDecl 0x55a7747e14c8 <line:162:5, col:115> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55a7747e11f8 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x55a7747e1290 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55a7747e1310 <col:82, col:86> col:86 user_data 'int'
| `-ParmVarDecl 0x55a7747e1388 <col:97, col:114> col:106 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55a7747ebf50 <col:114> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55a7747ebf30 <col:114> 'int' 0
|-CXXMethodDecl 0x55a7747e1858 <line:163:5, col:117> col:10 add_read_handler 'void (const char *, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55a7747e15a0 <col:27, col:39> col:39 name 'const char *'
| |-ParmVarDecl 0x55a7747e1618 <col:45, col:65> col:65 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55a7747e1698 <col:80, col:96> col:84 user_data 'int' cinit
| | `-IntegerLiteral 0x55a7747ebf68 <col:96> 'int' 0
| `-ParmVarDecl 0x55a7747e1710 <col:99, col:116> col:108 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55a7747ebfa8 <col:116> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55a7747ebf88 <col:116> 'int' 0
|-CXXMethodDecl 0x55a7747e1bd8 <line:164:5, col:130> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x55a7747e1928 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x55a7747e19a0 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55a7747e1a20 <col:85, col:109> col:97 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x55a7747ebfe0 <col:109> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x55a7747ebfc0 <col:109> 'int' 0
| `-ParmVarDecl 0x55a7747e1a98 <col:112, col:129> col:121 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55a7747ec018 <col:129> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55a7747ebff8 <col:129> 'int' 0
|-CXXMethodDecl 0x55a7747e1f58 <line:165:5, col:118> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55a7747e1ca8 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x55a7747e1d20 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55a7747e1da0 <col:85, col:89> col:89 user_data 'int'
| `-ParmVarDecl 0x55a7747e1e18 <col:100, col:117> col:109 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55a7747ec050 <col:117> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55a7747ec030 <col:117> 'int' 0
|-CXXMethodDecl 0x55a7747e22e8 <line:166:5, col:120> col:10 add_write_handler 'void (const char *, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55a7747e2030 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55a7747e20a8 <col:46, col:67> col:67 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55a7747e2128 <col:83, col:99> col:87 user_data 'int' cinit
| | `-IntegerLiteral 0x55a7747ec068 <col:99> 'int' 0
| `-ParmVarDecl 0x55a7747e21a0 <col:102, col:119> col:111 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55a7747ec0a8 <col:119> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55a7747ec088 <col:119> 'int' 0
|-CXXMethodDecl 0x55a7747e2708 <line:167:5, col:142> col:10 set_handler 'void (const String &, int, HandlerCallback, const void *, const void *)'
| |-ParmVarDecl 0x55a7747e23b8 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x55a7747e2438 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x55a7747e24b0 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55a7747e2530 <col:79, col:108> col:91 read_user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x55a7747ec0e0 <col:108> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x55a7747ec0c0 <col:108> 'int' 0
| `-ParmVarDecl 0x55a7747e25b0 <col:111, col:141> col:123 write_user_data 'const void *' cinit
|   `-ImplicitCastExpr 0x55a7747ec118 <col:141> 'const void *' <NullToPointer>
|     `-IntegerLiteral 0x55a7747ec0f8 <col:141> 'int' 0
|-CXXMethodDecl 0x55a7747e2b28 <line:168:5, col:122> col:10 set_handler 'void (const String &, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x55a7747e27e0 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x55a7747e2860 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x55a7747e28d8 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55a7747e2958 <col:79, col:83> col:83 read_user_data 'int'
| `-ParmVarDecl 0x55a7747e29d8 <col:99, col:121> col:103 write_user_data 'int' cinit
|   `-IntegerLiteral 0x55a7747ec130 <col:121> 'int' 0
|-CXXMethodDecl 0x55a7747e2f58 <line:169:5, col:124> col:10 set_handler 'void (const char *, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x55a7747e2c08 <col:22, col:34> col:34 name 'const char *'
| |-ParmVarDecl 0x55a7747e2c88 <col:40, col:44> col:44 flags 'int'
| |-ParmVarDecl 0x55a7747e2d00 <col:51, col:67> col:67 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55a7747e2d80 <col:77, col:98> col:81 read_user_data 'int' cinit
| | `-IntegerLiteral 0x55a7747ec150 <col:98> 'int' 0
| `-ParmVarDecl 0x55a7747e2e00 <col:101, col:123> col:105 write_user_data 'int' cinit
|   `-IntegerLiteral 0x55a7747ec170 <col:123> 'int' 0
|-CXXMethodDecl 0x55a7747e3220 <line:170:5, col:81> col:9 set_handler_flags 'int (const String &, int, int)'
| |-ParmVarDecl 0x55a7747e3030 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x55a7747e30b0 <col:47, col:51> col:51 set_flags 'int'
| `-ParmVarDecl 0x55a7747e3130 <col:62, col:80> col:66 clear_flags 'int' cinit
|   `-IntegerLiteral 0x55a7747ec190 <col:80> 'int' 0
|-EnumDecl 0x55a7747e32d8 <line:171:5, line:175:36> line:171:5
| |-EnumConstantDecl 0x55a7747e33e0 <col:12, col:42> col:12 TASKHANDLER_WRITE_SCHEDULED 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55a7747e3670 <col:42> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a7747e33c0 <col:42> 'int' Int: 1
| |     `-IntegerLiteral 0x55a7747e33a0 <col:42> 'int' 1
| |-EnumConstantDecl 0x55a7747e3470 <line:172:12, col:40> col:12 TASKHANDLER_WRITE_TICKETS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55a7747e3688 <col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a7747e3450 <col:40> 'int' Int: 2
| |     `-IntegerLiteral 0x55a7747e3430 <col:40> 'int' 2
| |-EnumConstantDecl 0x55a7747e3500 <line:173:12, col:44> col:12 TASKHANDLER_WRITE_HOME_THREAD 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55a7747e36a0 <col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a7747e34e0 <col:44> 'int' Int: 4
| |     `-IntegerLiteral 0x55a7747e34c0 <col:44> 'int' 4
| |-EnumConstantDecl 0x55a7747e3590 <line:174:12, col:36> col:12 TASKHANDLER_WRITE_ALL 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55a7747e36b8 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a7747e3570 <col:36> 'int' Int: 7
| |     `-IntegerLiteral 0x55a7747e3550 <col:36> 'int' 7
| `-EnumConstantDecl 0x55a7747e3620 <line:175:12, col:34> col:12 referenced TASKHANDLER_DEFAULT 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|   `-ImplicitCastExpr 0x55a7747e36d0 <col:34> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55a7747e3600 <col:34> 'int' Int: 6
|       `-IntegerLiteral 0x55a7747e35e0 <col:34> 'int' 6
|-CXXMethodDecl 0x55a7747e3988 <line:176:5, col:106> col:10 used add_task_handlers 'void (Task *, NotifierSignal *, int, const String &)'
| |-ParmVarDecl 0x55a7747e36f8 <col:28, col:34> col:34 task 'Task *'
| |-ParmVarDecl 0x55a7747e3798 <col:40, col:56> col:56 signal 'NotifierSignal *'
| |-ParmVarDecl 0x55a7747e3818 <col:64, col:68> col:68 flags 'int'
| `-ParmVarDecl 0x55a7747e3890 <col:75, col:105> col:89 prefix 'const String &' cinit
|   `-ExprWithCleanups 0x55a7747ec248 <col:98, col:105> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x55a7747ec230 <col:98, col:105> 'const String' lvalue
|       `-ImplicitCastExpr 0x55a7747ec218 <col:98, col:105> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x55a7747ec1f8 <col:98, col:105> 'String' (CXXTemporary 0x55a7747ec1f8)
|           `-CXXTemporaryObjectExpr 0x55a7747ec1c0 <col:98, col:105> 'String' 'void ()'
|-CXXMethodDecl 0x55a7747e3c28 <line:177:5, line:179:5> line:177:17 add_task_handlers 'void (Task *, NotifierSignal *, const String &)' inline
| |-ParmVarDecl 0x55a7747e3a58 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x55a7747e3ad0 <col:47, col:63> col:63 used signal 'NotifierSignal *'
| |-ParmVarDecl 0x55a7747e3b48 <col:71, col:101> col:85 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x55a7747ec2f8 <col:94, col:101> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x55a7747ec2e0 <col:94, col:101> 'const String' lvalue
| |     `-ImplicitCastExpr 0x55a7747ec2c8 <col:94, col:101> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x55a7747ec2a8 <col:94, col:101> 'String' (CXXTemporary 0x55a7747ec2a8)
| |         `-CXXTemporaryObjectExpr 0x55a7747ec270 <col:94, col:101> 'String' 'void ()'
| `-CompoundStmt 0x55a7747ecae0 <col:104, line:179:5>
|   `-CXXMemberCallExpr 0x55a7747eca58 <line:178:9, col:68> 'void'
|     |-MemberExpr 0x55a7747eca28 <col:9> '<bound member function type>' ->add_task_handlers 0x55a7747e3988
|     | `-CXXThisExpr 0x55a7747eca18 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x55a7747eca98 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x55a7747ec998 <col:27> 'Task *' lvalue ParmVar 0x55a7747e3a58 'task' 'Task *'
|     |-ImplicitCastExpr 0x55a7747ecab0 <col:33> 'NotifierSignal *' <LValueToRValue>
|     | `-DeclRefExpr 0x55a7747ec9b8 <col:33> 'NotifierSignal *' lvalue ParmVar 0x55a7747e3ad0 'signal' 'NotifierSignal *'
|     |-ImplicitCastExpr 0x55a7747ecac8 <col:41> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x55a7747ec9d8 <col:41> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x55a7747e3620 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x55a7747ec9f8 <col:62> 'const String' lvalue ParmVar 0x55a7747e3b48 'prefix' 'const String &'
|-CXXMethodDecl 0x55a7747e3e38 <line:180:5, line:182:5> line:180:17 add_task_handlers 'void (Task *, const String &)' inline
| |-ParmVarDecl 0x55a7747e3cf0 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x55a7747e3d68 <col:47, col:77> col:61 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x55a7747ec3a8 <col:70, col:77> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x55a7747ec390 <col:70, col:77> 'const String' lvalue
| |     `-ImplicitCastExpr 0x55a7747ec378 <col:70, col:77> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x55a7747ec358 <col:70, col:77> 'String' (CXXTemporary 0x55a7747ec358)
| |         `-CXXTemporaryObjectExpr 0x55a7747ec320 <col:70, col:77> 'String' 'void ()'
| `-CompoundStmt 0x55a7747eccb8 <col:80, line:182:5>
|   `-CXXMemberCallExpr 0x55a7747ecc30 <line:181:9, col:63> 'void'
|     |-MemberExpr 0x55a7747ecc00 <col:9> '<bound member function type>' ->add_task_handlers 0x55a7747e3988
|     | `-CXXThisExpr 0x55a7747ecbf0 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x55a7747ecc70 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x55a7747ecb70 <col:27> 'Task *' lvalue ParmVar 0x55a7747e3cf0 'task' 'Task *'
|     |-ImplicitCastExpr 0x55a7747ecc88 <col:33> 'NotifierSignal *' <NullToPointer>
|     | `-IntegerLiteral 0x55a7747ecb90 <col:33> 'int' 0
|     |-ImplicitCastExpr 0x55a7747ecca0 <col:36> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x55a7747ecbb0 <col:36> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x55a7747e3620 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x55a7747ecbd0 <col:57> 'const String' lvalue ParmVar 0x55a7747e3d68 'prefix' 'const String &'
|-CXXMethodDecl 0x55a7747e4118 <line:184:5, col:70> col:10 add_data_handlers 'void (const char *, int, uint8_t *)'
| |-ParmVarDecl 0x55a7747e3f00 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55a7747e3f80 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55a7747e3ff8 <col:57, col:66> col:66 data 'uint8_t *'
|-CXXMethodDecl 0x55a7747e43c8 <line:185:5, col:67> col:10 add_data_handlers 'void (const char *, int, bool *)'
| |-ParmVarDecl 0x55a7747e41e8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55a7747e4268 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55a7747e42e8 <col:57, col:63> col:63 data 'bool *'
|-CXXMethodDecl 0x55a7747e46b8 <line:186:5, col:71> col:10 add_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x55a7747e4498 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55a7747e4518 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55a7747e4590 <col:57, col:67> col:67 data 'uint16_t *'
|-CXXMethodDecl 0x55a7747e4968 <line:187:5, col:66> col:10 add_data_handlers 'void (const char *, int, int *)'
| |-ParmVarDecl 0x55a7747e4788 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55a7747e4808 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55a7747e4888 <col:57, col:62> col:62 data 'int *'
|-CXXMethodDecl 0x55a7747e4c18 <line:188:5, col:71> col:10 add_data_handlers 'void (const char *, int, unsigned int *)'
| |-ParmVarDecl 0x55a7747e4a38 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55a7747e4ab8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55a7747e4b38 <col:57, col:67> col:67 data 'unsigned int *'
|-CXXMethodDecl 0x55a7747e4ec8 <line:189:5, col:78> col:10 add_data_handlers 'void (const char *, int, atomic_uint32_t *)'
| |-ParmVarDecl 0x55a7747e4ce8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55a7747e4d68 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55a7747e4de0 <col:57, col:74> col:74 data 'atomic_uint32_t *'
|-CXXMethodDecl 0x55a7747e5178 <line:190:5, col:67> col:10 add_data_handlers 'void (const char *, int, long *)'
| |-ParmVarDecl 0x55a7747e4f98 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55a7747e5018 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55a7747e5098 <col:57, col:63> col:63 data 'long *'
|-CXXMethodDecl 0x55a7747e5488 <line:191:5, col:76> col:10 add_data_handlers 'void (const char *, int, unsigned long *)'
| |-ParmVarDecl 0x55a7747e52a0 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55a7747e5320 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55a7747e53a0 <col:57, col:72> col:72 data 'unsigned long *'
|-CXXMethodDecl 0x55a7747e5768 <line:193:5, col:72> col:10 add_data_handlers 'void (const char *, int, long long *)'
| |-ParmVarDecl 0x55a7747e5558 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55a7747e55d8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55a7747e5680 <col:57, col:68> col:68 data 'long long *'
|-CXXMethodDecl 0x55a7747e5a48 <line:194:5, col:81> col:10 add_data_handlers 'void (const char *, int, unsigned long long *)'
| |-ParmVarDecl 0x55a7747e5838 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55a7747e58b8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55a7747e5960 <col:57, col:77> col:77 data 'unsigned long long *'
|-CXXMethodDecl 0x55a7747e5cb0 <line:196:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x55a7747e5b18 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x55a7747e5b98 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x55a7747e5c10 <col:67, col:77> col:77 data 'uint16_t *'
|-CXXMethodDecl 0x55a7747e5f58 <line:197:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint32_t *)'
| |-ParmVarDecl 0x55a7747e5d80 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x55a7747e5e00 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x55a7747e5e78 <col:67, col:77> col:77 data 'uint32_t *'
|-CXXMethodDecl 0x55a7747e6208 <line:199:5, col:69> col:10 add_data_handlers 'void (const char *, int, double *)'
| |-ParmVarDecl 0x55a7747e6028 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55a7747e60a8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55a7747e6128 <col:57, col:65> col:65 data 'double *'
|-CXXMethodDecl 0x55a7747e64b8 <line:201:5, col:69> col:10 add_data_handlers 'void (const char *, int, String *)'
| |-ParmVarDecl 0x55a7747e62d8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55a7747e6358 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55a7747e63d0 <col:57, col:65> col:65 data 'String *'
|-CXXMethodDecl 0x55a7747e6768 <line:202:5, col:72> col:10 add_data_handlers 'void (const char *, int, IPAddress *)'
| |-ParmVarDecl 0x55a7747e6588 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55a7747e6608 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55a7747e6680 <col:57, col:68> col:68 data 'IPAddress *'
|-CXXMethodDecl 0x55a7747e6a38 <line:203:5, col:75> col:10 add_data_handlers 'void (const char *, int, EtherAddress *)'
| |-ParmVarDecl 0x55a7747e6838 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55a7747e68b8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55a7747e6958 <col:57, col:71> col:71 data 'EtherAddress *'
|-CXXMethodDecl 0x55a7747e6d68 <line:204:5, col:98> col:10 add_data_handlers 'void (const char *, int, Timestamp *, bool)'
| |-ParmVarDecl 0x55a7747e6b08 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55a7747e6b88 <col:46, col:50> col:50 flags 'int'
| |-ParmVarDecl 0x55a7747e6c00 <col:57, col:68> col:68 data 'Timestamp *'
| `-ParmVarDecl 0x55a7747e6c78 <col:74, col:93> col:79 is_interval 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55a7747ec3c0 <col:93> 'bool' false
|-CXXMethodDecl 0x55a7747e6f50 <line:206:5, col:58> col:19 read_positional_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55a7747e6e38 <col:43, col:50> col:51 'Element *'
| `-ParmVarDecl 0x55a7747e6eb8 <col:53, col:57> col:58 'void *'
|-CXXMethodDecl 0x55a7747e7128 <line:207:5, col:55> col:19 read_keyword_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55a7747e7010 <col:40, col:47> col:48 'Element *'
| `-ParmVarDecl 0x55a7747e7090 <col:50, col:54> col:55 'void *'
|-CXXMethodDecl 0x55a7747e7408 <line:208:5, col:92> col:16 reconfigure_positional_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x55a7747e71e8 <col:47, col:59> col:60 'const String &'
| |-ParmVarDecl 0x55a7747e7260 <col:62, col:69> col:70 'Element *'
| |-ParmVarDecl 0x55a7747e72e0 <col:72, col:76> col:77 'void *'
| `-ParmVarDecl 0x55a7747e7358 <col:79, col:91> col:92 'ErrorHandler *'
|-CXXMethodDecl 0x55a7747e76f8 <line:209:5, col:89> col:16 reconfigure_keyword_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x55a7747e74d8 <col:44, col:56> col:57 'const String &'
| |-ParmVarDecl 0x55a7747e7550 <col:59, col:66> col:67 'Element *'
| |-ParmVarDecl 0x55a7747e75d0 <col:69, col:73> col:74 'void *'
| `-ParmVarDecl 0x55a7747e7648 <col:76, col:88> col:89 'ErrorHandler *'
|-CXXMethodDecl 0x55a7747e7930 <line:211:5, col:50> col:17 llrpc 'int (unsigned int, void *)' virtual
| |-ParmVarDecl 0x55a7747e77d0 <col:23, col:32> col:32 command 'unsigned int'
| `-ParmVarDecl 0x55a7747e7850 <col:41, col:47> col:47 arg 'void *'
|-CXXMethodDecl 0x55a7747e7b18 <line:212:5, col:48> col:9 local_llrpc 'int (unsigned int, void *)'
| |-ParmVarDecl 0x55a7747e79f8 <col:21, col:30> col:30 command 'unsigned int'
| `-ParmVarDecl 0x55a7747e7a78 <col:39, col:45> col:45 arg 'void *'
|-CXXRecordDecl 0x55a7747e7bc8 prev 0x55a7747df368 <line:214:5, line:252:5> line:214:11 referenced class Port definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55a7747e7cc0 <col:5, col:11> col:11 implicit referenced class Port
| |-AccessSpecDecl 0x55a7747e7d50 <col:18, col:24> col:18 public
| |-CXXMethodDecl 0x55a7747e7dc8 <line:216:9, col:30> col:21 used active 'bool () const' inline
| |-CXXMethodDecl 0x55a7747e7e88 <line:217:9, col:35> col:25 element 'Element *() const' inline
| |-CXXMethodDecl 0x55a7747e7f50 <line:218:9, col:27> col:20 port 'int () const' inline
| |-CXXMethodDecl 0x55a7747e80c8 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| | |-ParmVarDecl 0x55a7747e8000 <col:54, col:62> col:62 p 'Packet *'
| | |-NoInlineAttr 0x55a7747e8170 <col:24>
| | `-OptimizeNoneAttr 0x55a7747e81c8 <col:34>
| |-CXXMethodDecl 0x55a7747e8210 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
| |-CXXMethodDecl 0x55a7747e84c8 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| | |-ParmVarDecl 0x55a7747e82c0 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x55a7747e8338 <col:43, col:52> col:52 e 'Element *'
| | `-ParmVarDecl 0x55a7747e83b8 <col:55, col:59> col:59 port 'int'
| |-AccessSpecDecl 0x55a7747e8580 <line:229:7, col:14> col:7 private
| |-FieldDecl 0x55a7747e85b8 <line:231:9, col:18> col:18 referenced _e 'Element *'
| |-FieldDecl 0x55a7747e8620 <line:232:9, col:13> col:13 referenced _port 'int'
| |-CXXConstructorDecl 0x55a7747e86a8 <line:247:9, col:21> col:16 Port 'void ()' inline
| |-CXXMethodDecl 0x55a7747e89c8 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| | |-ParmVarDecl 0x55a7747e8760 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x55a7747e87d8 <col:43, col:52> col:52 owner 'Element *'
| | |-ParmVarDecl 0x55a7747e8850 <col:59, col:68> col:68 e 'Element *'
| | `-ParmVarDecl 0x55a7747e88d0 <col:71, col:75> col:75 port 'int'
| |-FriendDecl 0x55a7747e8ae0 <line:250:9, col:22> col:16 'class Element':'Element'
| |-CXXConstructorDecl 0x55a7747f0458 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x55a7747f0458
| | `-ParmVarDecl 0x55a7747f0568 <col:11> col:11 'const Element::Port &'
| |-CXXConstructorDecl 0x55a7747f0608 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x55a7747f0608
| | `-ParmVarDecl 0x55a7747f0718 <col:11> col:11 'Element::Port &&'
| `-CXXDestructorDecl 0x55a7749ea470 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55a7747e8b58 <line:256:5, col:49> col:12 id 'String () const'
| `-DeprecatedAttr 0x55a7747e8bf8 <col:38> "" ""
|-CXXMethodDecl 0x55a7747e8c88 <line:257:5, col:55> col:12 landmark 'String () const'
| `-DeprecatedAttr 0x55a7747e8d28 <col:44> "" ""
|-AccessSpecDecl 0x55a7747e8d98 <line:260:3, col:10> col:3 private
|-EnumDecl 0x55a7747e8dc0 <line:262:5, col:29> col:5
| `-EnumConstantDecl 0x55a7747e8ec0 <col:12, col:27> col:12 referenced INLINE_PORTS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:262:5)'
|   `-ImplicitCastExpr 0x55a7747e8f10 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55a7747e8ea0 <col:27> 'int' Int: 4
|       `-IntegerLiteral 0x55a7747e8e80 <col:27> 'int' 4
|-FieldDecl 0x55a7747e8fc8 <line:264:5, col:19> col:11 referenced _ports 'Element::Port *[2]'
|-FieldDecl 0x55a7747e9178 <line:265:5, col:36> col:10 _inline_ports 'Element::Port [4]'
|-FieldDecl 0x55a7747e9230 <line:267:5, col:18> col:9 referenced _nports 'int [2]'
|-FieldDecl 0x55a7747ea2c0 <line:269:5, col:13> col:13 referenced _router 'Router *'
|-FieldDecl 0x55a7747ea328 <line:270:5, col:9> col:9 referenced _eindex 'int'
|-CXXConstructorDecl 0x55a7747ea478 <line:292:5, col:28> col:5 Element 'void (const Element &)'
| `-ParmVarDecl 0x55a7747ea3b8 <col:13, col:27> col:28 'const Element &'
|-CXXMethodDecl 0x55a7747ea628 <line:293:5, col:39> col:14 operator= 'Element &(const Element &)'
| `-ParmVarDecl 0x55a7747ea538 <col:24, col:38> col:39 'const Element &'
|-CXXMethodDecl 0x55a7747ea808 <line:296:5, col:28> col:9 set_nports 'int (int, int)'
| |-ParmVarDecl 0x55a7747ea6e8 <col:20> col:23 'int'
| `-ParmVarDecl 0x55a7747ea768 <col:25> col:28 'int'
|-CXXMethodDecl 0x55a7747eaab0 <line:297:5, col:47> col:9 notify_nports 'int (int, int, ErrorHandler *)'
| |-ParmVarDecl 0x55a7747ea8d0 <col:23> col:26 'int'
| |-ParmVarDecl 0x55a7747ea950 <col:28> col:31 'int'
| `-ParmVarDecl 0x55a7747ea9c8 <col:33, col:46> col:47 'ErrorHandler *'
|-EnumDecl 0x55a7747eab68 <line:298:5, col:47> col:10 Processing
| |-EnumConstantDecl 0x55a7747eac30 <col:23> col:23 VAGNOSTIC 'Element::Processing'
| |-EnumConstantDecl 0x55a7747eac80 <col:34> col:34 VPUSH 'Element::Processing'
| `-EnumConstantDecl 0x55a7747eacd0 <col:41> col:41 VPULL 'Element::Processing'
|-CXXMethodDecl 0x55a7747eaeb0 <line:299:5, col:71> col:16 next_processing_code 'int (const char *&, ErrorHandler *)' static
| |-ParmVarDecl 0x55a7747ead60 <col:37, col:50> col:50 p 'const char *&'
| `-ParmVarDecl 0x55a7747eadd8 <col:53, col:67> col:67 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55a7747eb158 <line:300:5, col:80> col:10 processing_vector 'void (int *, int *, ErrorHandler *) const'
| |-ParmVarDecl 0x55a7747eaf78 <col:28, col:33> col:33 input_codes 'int *'
| |-ParmVarDecl 0x55a7747eaff8 <col:46, col:51> col:51 output_codes 'int *'
| `-ParmVarDecl 0x55a7747eb070 <col:65, col:77> col:78 'ErrorHandler *'
|-CXXMethodDecl 0x55a7747eb378 <line:302:5, col:74> col:10 initialize_ports 'void (const int *, const int *)'
| |-ParmVarDecl 0x55a7747eb228 <col:27, col:38> col:38 input_codes 'const int *'
| `-ParmVarDecl 0x55a7747eb2a8 <col:51, col:62> col:62 output_codes 'const int *'
|-CXXMethodDecl 0x55a7747eb6b0 <line:303:5, col:60> col:9 connect_port 'int (bool, int, Element *, int)'
| |-ParmVarDecl 0x55a7747eb438 <col:22, col:27> col:27 isoutput 'bool'
| |-ParmVarDecl 0x55a7747eb4b8 <col:37, col:41> col:41 port 'int'
| |-ParmVarDecl 0x55a7747eb530 <col:47, col:54> col:55 'Element *'
| `-ParmVarDecl 0x55a7747eb5b0 <col:57> col:60 'int'
|-CXXMethodDecl 0x55a7747eb898 <line:305:5, col:68> col:19 read_handlers_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55a7747eb780 <col:41, col:50> col:50 e 'Element *'
| `-ParmVarDecl 0x55a7747eb800 <col:53, col:59> col:59 user_data 'void *'
|-CXXMethodDecl 0x55a7747eb9e8 <line:306:5, col:51> col:10 add_default_handlers 'void (bool)'
| `-ParmVarDecl 0x55a7747eb958 <col:31, col:36> col:36 writable_config 'bool'
|-CXXMethodDecl 0x55a7747ebd68 <line:307:5, col:100> col:17 add_data_handlers 'void (const char *, int, HandlerCallback, void *)' inline
| |-ParmVarDecl 0x55a7747ebaa8 <col:35, col:47> col:47 name 'const char *'
| |-ParmVarDecl 0x55a7747ebb28 <col:53, col:57> col:57 flags 'int'
| |-ParmVarDecl 0x55a7747ebba0 <col:64, col:80> col:80 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| `-ParmVarDecl 0x55a7747ebc20 <col:90, col:96> col:96 data 'void *'
`-FriendDecl 0x55a7747ebe80 <line:309:5, col:18> col:12 'class Router':'Router'

Layout: <CGRecordLayout
  LLVMType:%class.Element = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Element.base = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class TokenBucketJiffyParameters<unsigned int> (empty)
           | [sizeof=1, dsize=1, align=1,
           |  nvsize=1, nvalign=1]

*** Dumping AST Record Layout
         0 | class TokenRateX<class TokenBucketJiffyParameters<unsigned int> >
         0 |   class TokenBucketJiffyParameters<unsigned int> (base) (empty)
         0 |   TokenRateX<class TokenBucketJiffyParameters<unsigned int> >::token_type _tokens_per_tick
         4 |   TokenRateX<class TokenBucketJiffyParameters<unsigned int> >::token_type _token_scale
         8 |   TokenRateX<class TokenBucketJiffyParameters<unsigned int> >::ticks_type _time_until_full
           | [sizeof=12, dsize=12, align=4,
           |  nvsize=12, nvalign=4]

*** Dumping AST Record Layout
         0 | class TokenCounterX<class TokenRateX<class TokenBucketJiffyParameters<unsigned int> > >
         0 |   TokenCounterX<class TokenRateX<class TokenBucketJiffyParameters<unsigned int> > >::token_type _tokens
         4 |   TokenCounterX<class TokenRateX<class TokenBucketJiffyParameters<unsigned int> > >::time_point_type _time_point
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | class TokenBucketX<class TokenBucketJiffyParameters<unsigned int> >
         0 |   class TokenRateX<class TokenBucketJiffyParameters<unsigned int> > _rate
         0 |     class TokenBucketJiffyParameters<unsigned int> (base) (empty)
         0 |     TokenRateX<class TokenBucketJiffyParameters<unsigned int> >::token_type _tokens_per_tick
         4 |     TokenRateX<class TokenBucketJiffyParameters<unsigned int> >::token_type _token_scale
         8 |     TokenRateX<class TokenBucketJiffyParameters<unsigned int> >::ticks_type _time_until_full
        12 |   class TokenCounterX<class TokenRateX<class TokenBucketJiffyParameters<unsigned int> > > _bucket
        12 |     TokenCounterX<class TokenRateX<class TokenBucketJiffyParameters<unsigned int> > >::token_type _tokens
        16 |     TokenCounterX<class TokenRateX<class TokenBucketJiffyParameters<unsigned int> > >::time_point_type _time_point
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping AST Record Layout
         0 | struct TaskLink
         0 |   struct TaskLink * _prev
         8 |   struct TaskLink * _next
        16 |   unsigned int _pass
           | [sizeof=24, dsize=20, align=8,
           |  nvsize=20, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9)
         0 |   int16_t home_thread_id
         2 |   uint8_t is_scheduled
         3 |   uint8_t is_strong_unscheduled
           | [sizeof=4, dsize=4, align=2,
           |  nvsize=4, nvalign=2]

*** Dumping AST Record Layout
         0 | union Task::Status
         0 |   struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9) 
         0 |     int16_t home_thread_id
         2 |     uint8_t is_scheduled
         3 |     uint8_t is_strong_unscheduled
         0 |   uint32_t status
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Task::Pending
         0 |   class Task * t
         0 |   uintptr_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Task
         0 |   struct TaskLink (base)
         0 |     struct TaskLink * _prev
         8 |     struct TaskLink * _next
        16 |     unsigned int _pass
        20 |   unsigned int _stride
        24 |   int _tickets
        28 |   union Task::Status _status
        28 |     struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9) 
        28 |       int16_t home_thread_id
        30 |       uint8_t is_scheduled
        31 |       uint8_t is_strong_unscheduled
        28 |     uint32_t status
        32 |   TaskCallback _hook
        40 |   void * _thunk
        48 |   class RouterThread * _thread
        56 |   class Element * _owner
        64 |   union Task::Pending _pending_nextptr
        64 |     class Task * t
        64 |     uintptr_t x
           | [sizeof=72, dsize=72, align=8,
           |  nvsize=72, nvalign=8]

*** Dumping AST Record Layout
         0 | union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5)
         0 |   TimerCallback callback
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timer
         0 |   int _schedpos1
         8 |   class Timestamp _expiry_s
         8 |     union Timestamp::rep_t _t
         8 |       int64_t x
        16 |   union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5) _hook
        16 |     TimerCallback callback
        24 |   void * _thunk
        32 |   class Element * _owner
        40 |   class RouterThread * _thread
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | union NotifierSignal::vmvalue
         0 |   class atomic_uint32_t * v1
         0 |   struct NotifierSignal::vmpair * vm
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class NotifierSignal
         0 |   union NotifierSignal::vmvalue _v
         0 |     class atomic_uint32_t * v1
         0 |     struct NotifierSignal::vmpair * vm
         8 |   uint32_t _mask
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping AST Record Layout
         0 | class RatedUnqueue
         0 |   class Element (primary base)
         0 |     (Element vtable pointer)
         8 |     class Element::Port *[2] _ports
        24 |     class Element::Port [4] _inline_ports
        88 |     int [2] _nports
        96 |     class Router * _router
       104 |     int _eindex
       108 |   class TokenBucketX<class TokenBucketJiffyParameters<unsigned int> > _tb
       108 |     class TokenRateX<class TokenBucketJiffyParameters<unsigned int> > _rate
       108 |       class TokenBucketJiffyParameters<unsigned int> (base) (empty)
       108 |       TokenRateX<class TokenBucketJiffyParameters<unsigned int> >::token_type _tokens_per_tick
       112 |       TokenRateX<class TokenBucketJiffyParameters<unsigned int> >::token_type _token_scale
       116 |       TokenRateX<class TokenBucketJiffyParameters<unsigned int> >::ticks_type _time_until_full
       120 |     class TokenCounterX<class TokenRateX<class TokenBucketJiffyParameters<unsigned int> > > _bucket
       120 |       TokenCounterX<class TokenRateX<class TokenBucketJiffyParameters<unsigned int> > >::token_type _tokens
       124 |       TokenCounterX<class TokenRateX<class TokenBucketJiffyParameters<unsigned int> > >::time_point_type _time_point
       128 |   class Task _task
       128 |     struct TaskLink (base)
       128 |       struct TaskLink * _prev
       136 |       struct TaskLink * _next
       144 |       unsigned int _pass
       148 |     unsigned int _stride
       152 |     int _tickets
       156 |     union Task::Status _status
       156 |       struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9) 
       156 |         int16_t home_thread_id
       158 |         uint8_t is_scheduled
       159 |         uint8_t is_strong_unscheduled
       156 |       uint32_t status
       160 |     TaskCallback _hook
       168 |     void * _thunk
       176 |     class RouterThread * _thread
       184 |     class Element * _owner
       192 |     union Task::Pending _pending_nextptr
       192 |       class Task * t
       192 |       uintptr_t x
       200 |   class Timer _timer
       200 |     int _schedpos1
       208 |     class Timestamp _expiry_s
       208 |       union Timestamp::rep_t _t
       208 |         int64_t x
       216 |     union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5) _hook
       216 |       TimerCallback callback
       224 |     void * _thunk
       232 |     class Element * _owner
       240 |     class RouterThread * _thread
       248 |   class NotifierSignal _signal
       248 |     union NotifierSignal::vmvalue _v
       248 |       class atomic_uint32_t * v1
       248 |       struct NotifierSignal::vmpair * vm
       256 |     uint32_t _mask
       264 |   uint32_t _runs
       268 |   uint32_t _pushes
       272 |   uint32_t _failed_pulls
       276 |   uint32_t _empty_runs
       280 |   _Bool _active
           | [sizeof=288, dsize=281, align=8,
           |  nvsize=281, nvalign=8]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55a774829240 <../dummy_inc/click/tokenbucket.hh:628:1, line:686:1> line:629:7 class TokenBucketJiffyParameters definition
|-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-TemplateArgument type 'unsigned int'
|-CXXRecordDecl 0x55a7748e9c80 prev 0x55a774829240 <col:1, col:7> col:7 implicit class TokenBucketJiffyParameters
|-AccessSpecDecl 0x55a7748e9d10 <col:36, col:42> col:36 public
|-TypedefDecl 0x55a7748e9d78 <line:632:5, col:15> col:15 referenced token_type 'unsigned int':'unsigned int'
| `-SubstTemplateTypeParmType 0x55a7748e9d40 'unsigned int' sugar
|   |-TemplateTypeParmType 0x55a774820d40 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55a774820ce8 'T'
|   `-BuiltinType 0x55a774274410 'unsigned int'
|-TypedefDecl 0x55a7748e9dd0 <line:635:5, col:29> col:29 referenced time_point_type 'click_jiffies_t':'unsigned int'
| `-TypedefType 0x55a77452e210 'click_jiffies_t' sugar
|   |-Typedef 0x55a77452e148 'click_jiffies_t'
|   `-BuiltinType 0x55a774274410 'unsigned int'
|-TypedefDecl 0x55a7748e9e28 <line:638:5, col:40> col:40 referenced duration_type 'click_jiffies_difference_t':'int'
| `-TypedefType 0x55a77476df50 'click_jiffies_difference_t' sugar
|   |-Typedef 0x55a77452e1b8 'click_jiffies_difference_t'
|   `-BuiltinType 0x55a774274370 'int'
|-CXXMethodDecl 0x55a7748e9e80 <line:642:5, line:644:5> line:642:28 now 'TokenBucketJiffyParameters::time_point_type ()' static
|-CXXMethodDecl 0x55a7748ea018 <line:646:5, line:648:5> line:646:28 time_point 'TokenBucketJiffyParameters<unsigned int>::time_point_type (TokenBucketJiffyParameters::time_point_type)' static
| `-ParmVarDecl 0x55a7748e9f50 <col:39, col:55> col:55 t 'TokenBucketJiffyParameters::time_point_type':'unsigned int'
|-CXXMethodDecl 0x55a7748ea228 <line:656:5, line:662:5> line:656:26 time_monotonic_difference 'TokenBucketJiffyParameters<unsigned int>::duration_type (TokenBucketJiffyParameters::time_point_type, TokenBucketJiffyParameters::time_point_type)' static
| |-ParmVarDecl 0x55a7748ea0f0 <col:52, col:68> col:68 a 'TokenBucketJiffyParameters::time_point_type':'unsigned int'
| `-ParmVarDecl 0x55a7748ea158 <col:71, col:87> col:87 b 'TokenBucketJiffyParameters::time_point_type':'unsigned int'
|-CXXMethodDecl 0x55a7748ea3e8 <line:665:5, line:667:5> line:665:17 time_less 'bool (TokenBucketJiffyParameters::time_point_type, TokenBucketJiffyParameters::time_point_type)' static
| |-ParmVarDecl 0x55a7748ea2e8 <col:27, col:43> col:43 a 'TokenBucketJiffyParameters::time_point_type':'unsigned int'
| `-ParmVarDecl 0x55a7748ea350 <col:46, col:62> col:62 b 'TokenBucketJiffyParameters::time_point_type':'unsigned int'
|-CXXMethodDecl 0x55a7748ea4a8 <line:672:5, line:674:5> line:672:21 frequency 'unsigned int ()' static
|-CXXMethodDecl 0x55a7748ea5e8 <line:677:5, line:679:5> line:677:22 timestamp 'Timestamp (TokenBucketJiffyParameters::time_point_type)' static
| `-ParmVarDecl 0x55a7748ea558 <col:32, col:48> col:48 x 'TokenBucketJiffyParameters::time_point_type':'unsigned int'
|-CXXMethodDecl 0x55a7748ea730 <line:682:5, line:684:5> line:682:22 timestamp 'Timestamp (TokenBucketJiffyParameters::duration_type)' static
| `-ParmVarDecl 0x55a7748ea6a0 <col:32, col:46> col:46 x 'TokenBucketJiffyParameters::duration_type':'int'
|-CXXDestructorDecl 0x55a7748f4960 <line:629:7> col:7 implicit ~TokenBucketJiffyParameters 'void ()' inline default trivial noexcept-unevaluated 0x55a7748f4960
|-CXXConstructorDecl 0x55a7749e95d8 <col:7> col:7 implicit constexpr TokenBucketJiffyParameters 'void (const TokenBucketJiffyParameters<unsigned int> &)' inline default trivial noexcept-unevaluated 0x55a7749e95d8
| `-ParmVarDecl 0x55a7749e96e8 <col:7> col:7 'const TokenBucketJiffyParameters<unsigned int> &'
`-CXXConstructorDecl 0x55a7749e9788 <col:7> col:7 implicit constexpr TokenBucketJiffyParameters 'void (TokenBucketJiffyParameters<unsigned int> &&)' inline default trivial noexcept-unevaluated 0x55a7749e9788
  `-ParmVarDecl 0x55a7749e9898 <col:7> col:7 'TokenBucketJiffyParameters<unsigned int> &&'

Layout: <CGRecordLayout
  LLVMType:%class.TokenBucketJiffyParameters = type { i8 }
  NonVirtualBaseLLVMType:%class.TokenBucketJiffyParameters = type { i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55a7748293e0 <../dummy_inc/click/tokenbucket.hh:57:1, line:191:1> line:58:7 class TokenRateX definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-public 'TokenBucketJiffyParameters<unsigned int>':'TokenBucketJiffyParameters<unsigned int>'
|-TemplateArgument type 'TokenBucketJiffyParameters<unsigned int>'
|-CXXRecordDecl 0x55a7748ea830 prev 0x55a7748293e0 <col:1, col:7> col:7 implicit class TokenRateX
|-AccessSpecDecl 0x55a7748ea8c0 <col:31, col:37> col:31 public
|-TypedefDecl 0x55a7748ea8f8 <line:61:5, col:15> col:15 parameter_type 'TokenBucketJiffyParameters<unsigned int>':'TokenBucketJiffyParameters<unsigned int>'
| `-SubstTemplateTypeParmType 0x55a7748e9be0 'TokenBucketJiffyParameters<unsigned int>' sugar
|   |-TemplateTypeParmType 0x55a77480ae60 'P' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55a77480ae08 'P'
|   `-RecordType 0x55a774829320 'TokenBucketJiffyParameters<unsigned int>'
|     `-ClassTemplateSpecialization 0x55a774829240 'TokenBucketJiffyParameters'
|-TypedefDecl 0x55a7748eaa00 <line:64:5, col:36> col:36 referenced token_type 'typename TokenBucketJiffyParameters<unsigned int>::token_type':'unsigned int'
| `-ElaboratedType 0x55a7748ea9b0 'typename TokenBucketJiffyParameters<unsigned int>::token_type' sugar
|   `-TypedefType 0x55a7748ea990 'TokenBucketJiffyParameters<unsigned int>::token_type' sugar
|     |-Typedef 0x55a7748e9d78 'token_type'
|     `-SubstTemplateTypeParmType 0x55a7748e9d40 'unsigned int' sugar
|       |-TemplateTypeParmType 0x55a774820d40 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55a774820ce8 'T'
|       `-BuiltinType 0x55a774274410 'unsigned int'
|-TypedefDecl 0x55a7748eaad0 <line:67:5, col:41> col:41 referenced time_point_type 'typename TokenBucketJiffyParameters<unsigned int>::time_point_type':'unsigned int'
| `-ElaboratedType 0x55a7748eaa80 'typename TokenBucketJiffyParameters<unsigned int>::time_point_type' sugar
|   `-TypedefType 0x55a7748e9f30 'TokenBucketJiffyParameters<unsigned int>::time_point_type' sugar
|     |-Typedef 0x55a7748e9dd0 'time_point_type'
|     `-TypedefType 0x55a77452e210 'click_jiffies_t' sugar
|       |-Typedef 0x55a77452e148 'click_jiffies_t'
|       `-BuiltinType 0x55a774274410 'unsigned int'
|-TypedefDecl 0x55a7748eb060 <line:70:5, col:69> col:69 referenced ticks_type 'typename make_unsigned<typename TokenBucketJiffyParameters<unsigned int>::duration_type>::type':'unsigned int'
| `-ElaboratedType 0x55a7748eb010 'typename make_unsigned<typename TokenBucketJiffyParameters<unsigned int>::duration_type>::type' sugar
|   `-TypedefType 0x55a7748eaff0 'make_unsigned<int>::type' sugar
|     |-Typedef 0x55a7748eaf80 'type'
|     `-ElaboratedType 0x55a7748eaf30 'typename integer_traits<int>::unsigned_type' sugar
|       `-TypedefType 0x55a7748eaf10 'integer_traits<int>::unsigned_type' sugar
|         |-Typedef 0x55a774555690 'unsigned_type'
|         `-BuiltinType 0x55a774274410 'unsigned int'
|-EnumDecl 0x55a7748eb0b8 <line:72:5> col:5
| `-EnumConstantDecl 0x55a7748eb220 <line:73:2, col:29> col:2 referenced max_tokens 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::(anonymous enum at ../dummy_inc/click/tokenbucket.hh:72:5)'
|   `-ConstantExpr 0x55a7748eb200 <col:15, col:29> 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::token_type':'unsigned int' Int: 4294967295
|     `-CStyleCastExpr 0x55a7748eb1d8 <col:15, col:29> 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::token_type':'unsigned int' <NoOp>
|       `-ImplicitCastExpr 0x55a7748eb1c0 <col:28, col:29> 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::token_type':'unsigned int' <IntegralCast> part_of_explicit_cast
|         `-UnaryOperator 0x55a77480bf70 <col:28, col:29> 'int' prefix '-'
|           `-IntegerLiteral 0x55a77480bf50 <col:29> 'int' 1
|-CXXConstructorDecl 0x55a7748eb2a8 <line:77:5, line:79:5> line:77:5 TokenRateX 'void ()'
|-CXXConstructorDecl 0x55a7748eb410 <line:83:5, line:85:5> line:83:14 TokenRateX 'void (bool)'
| `-ParmVarDecl 0x55a7748eb360 <col:25, col:30> col:30 unlimited 'bool'
|-CXXConstructorDecl 0x55a7748eb648 <line:94:5, line:96:5> line:94:5 TokenRateX 'void (TokenRateX<TokenBucketJiffyParameters<unsigned int> >::token_type, TokenRateX<TokenBucketJiffyParameters<unsigned int> >::token_type)'
| |-ParmVarDecl 0x55a7748eb4e0 <col:16, col:27> col:27 rate 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::token_type':'unsigned int'
| `-ParmVarDecl 0x55a7748eb558 <col:33, col:44> col:44 capacity 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::token_type':'unsigned int'
|-CXXMethodDecl 0x55a7748eb7a0 <line:100:5, col:46> col:17 assign 'void (bool)' inline
| `-ParmVarDecl 0x55a7748eb710 <col:24, col:41> col:29 unlimited 'bool'
|-CXXMethodDecl 0x55a7748eb978 <line:108:5, col:60> col:17 assign 'void (TokenRateX<TokenBucketJiffyParameters<unsigned int> >::token_type, TokenRateX<TokenBucketJiffyParameters<unsigned int> >::token_type)' inline
| |-ParmVarDecl 0x55a7748eb868 <col:24, col:35> col:35 rate 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::token_type':'unsigned int'
| `-ParmVarDecl 0x55a7748eb8e0 <col:41, col:52> col:52 capacity 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::token_type':'unsigned int'
|-CXXMethodDecl 0x55a7748eba38 <line:111:5, line:113:5> line:111:10 unlimited 'bool () const'
|-CXXMethodDecl 0x55a7748ebae8 <line:116:5, line:118:5> line:116:10 idle 'bool () const'
|-CXXMethodDecl 0x55a7748ebbe8 <line:124:5, col:23> col:16 rate 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::token_type () const'
|-CXXMethodDecl 0x55a7748ebcb8 <line:130:5, line:132:5> line:130:16 capacity 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::token_type () const'
|-CXXMethodDecl 0x55a7748ebd88 <line:135:5, line:137:5> line:135:16 tokens_per_tick 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::token_type () const'
|-CXXMethodDecl 0x55a7748ebe58 <line:140:5, line:142:5> line:140:16 token_scale 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::token_type () const'
|-CXXMethodDecl 0x55a7748ebf78 <line:148:5, line:150:5> line:148:16 time_until_full 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::ticks_type () const'
|-CXXMethodDecl 0x55a7748ec098 <line:155:5, line:157:5> line:155:21 now 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::time_point_type () const'
|-FunctionTemplateDecl 0x55a7748ec388 <line:163:5, line:166:5> line:164:21 time_point
| |-TemplateTypeParmDecl 0x55a7748ec148 <line:163:15, col:24> col:24 typename depth 0 index 0 U
| `-CXXMethodDecl 0x55a7748ec2e8 <line:164:5, line:166:5> line:164:21 time_point 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::time_point_type (U) const'
|   `-ParmVarDecl 0x55a7748ec1f8 <col:32, col:34> col:34 time 'U'
|-CXXMethodDecl 0x55a7748ec608 <line:174:5, line:176:5> line:174:16 time_monotonic_difference 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::ticks_type (TokenRateX<TokenBucketJiffyParameters<unsigned int> >::time_point_type, TokenRateX<TokenBucketJiffyParameters<unsigned int> >::time_point_type) const'
| |-ParmVarDecl 0x55a7748ec478 <col:42, col:58> col:58 a 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::time_point_type':'unsigned int'
| `-ParmVarDecl 0x55a7748ec4f0 <col:61, col:77> col:77 b 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::time_point_type':'unsigned int'
|-TypedefDecl 0x55a7748ec6d8 <line:180:5, col:29> col:29 epoch_type 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::time_point_type':'unsigned int'
| |-TypedefType 0x55a7748ec030 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::time_point_type' sugar
| | |-Typedef 0x55a7748eaad0 'time_point_type'
| | `-ElaboratedType 0x55a7748eaa80 'typename TokenBucketJiffyParameters<unsigned int>::time_point_type' sugar
| |   `-TypedefType 0x55a7748e9f30 'TokenBucketJiffyParameters<unsigned int>::time_point_type' sugar
| |     |-Typedef 0x55a7748e9dd0 'time_point_type'
| |     `-TypedefType 0x55a77452e210 'click_jiffies_t' sugar
| |       |-Typedef 0x55a77452e148 'click_jiffies_t'
| |       `-BuiltinType 0x55a774274410 'unsigned int'
| `-DeprecatedAttr 0x55a7748ec730 <col:55> "" ""
|-CXXMethodDecl 0x55a7748ec7c0 <line:181:5, col:74> col:23 tokens_per_epoch 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::token_type () const' inline
| `-DeprecatedAttr 0x55a7748ec898 <col:63> Inherited "" ""
|-CXXMethodDecl 0x55a7748ec928 <line:182:5, col:75> col:23 epochs_until_full 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::ticks_type () const' inline
| `-DeprecatedAttr 0x55a7748ec9d8 <col:64> Inherited "" ""
|-AccessSpecDecl 0x55a7748eca48 <line:185:2, col:9> col:2 private
|-FieldDecl 0x55a7748eca80 <line:187:5, col:16> col:16 _tokens_per_tick 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::token_type':'unsigned int'
|-FieldDecl 0x55a7748ecae0 <line:188:5, col:16> col:16 _token_scale 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::token_type':'unsigned int'
|-FieldDecl 0x55a7748ecb40 <line:189:5, col:16> col:16 _time_until_full 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::ticks_type':'unsigned int'
|-CXXDestructorDecl 0x55a7748f4880 <line:58:7> col:7 implicit ~TokenRateX 'void ()' inline default trivial noexcept-unevaluated 0x55a7748f4880
|-CXXConstructorDecl 0x55a7749e9908 <col:7> col:7 implicit constexpr TokenRateX 'void (const TokenRateX<TokenBucketJiffyParameters<unsigned int> > &)' inline default trivial noexcept-unevaluated 0x55a7749e9908
| `-ParmVarDecl 0x55a7749e99e8 <col:7> col:7 'const TokenRateX<TokenBucketJiffyParameters<unsigned int> > &'
`-CXXConstructorDecl 0x55a7749e9a88 <col:7> col:7 implicit constexpr TokenRateX 'void (TokenRateX<TokenBucketJiffyParameters<unsigned int> > &&)' inline default trivial noexcept-unevaluated 0x55a7749e9a88
  `-ParmVarDecl 0x55a7749e9b98 <col:7> col:7 'TokenRateX<TokenBucketJiffyParameters<unsigned int> > &&'

Layout: <CGRecordLayout
  LLVMType:%class.TokenRateX = type { i32, i32, i32 }
  NonVirtualBaseLLVMType:%class.TokenRateX = type { i32, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55a774829610 <../dummy_inc/click/tokenbucket.hh:325:1, line:577:1> line:326:7 class TokenCounterX definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-TemplateArgument type 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >'
|-CXXRecordDecl 0x55a7748f0378 prev 0x55a774829610 <col:1, col:7> col:7 implicit class TokenCounterX
|-AccessSpecDecl 0x55a7748f0408 <col:23, col:29> col:23 public
|-TypedefDecl 0x55a7748f0468 <line:329:5, col:15> col:15 rate_type 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >':'TokenRateX<TokenBucketJiffyParameters<unsigned int> >'
| `-SubstTemplateTypeParmType 0x55a7748f0430 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >' sugar
|   |-TemplateTypeParmType 0x55a774817b60 'R' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55a774817b10 'R'
|   `-RecordType 0x55a7748294c0 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >'
|     `-ClassTemplateSpecialization 0x55a7748293e0 'TokenRateX'
|-TypedefDecl 0x55a7748f0550 <line:332:5, col:36> col:36 token_type 'typename TokenRateX<TokenBucketJiffyParameters<unsigned int> >::token_type':'unsigned int'
| `-ElaboratedType 0x55a7748f0500 'typename TokenRateX<TokenBucketJiffyParameters<unsigned int> >::token_type' sugar
|   `-TypedefType 0x55a7748eb190 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::token_type' sugar
|     |-Typedef 0x55a7748eaa00 'token_type'
|     `-ElaboratedType 0x55a7748ea9b0 'typename TokenBucketJiffyParameters<unsigned int>::token_type' sugar
|       `-TypedefType 0x55a7748ea990 'TokenBucketJiffyParameters<unsigned int>::token_type' sugar
|         |-Typedef 0x55a7748e9d78 'token_type'
|         `-SubstTemplateTypeParmType 0x55a7748e9d40 'unsigned int' sugar
|           |-TemplateTypeParmType 0x55a774820d40 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55a774820ce8 'T'
|           `-BuiltinType 0x55a774274410 'unsigned int'
|-TypedefDecl 0x55a7748f0620 <line:335:5, col:41> col:41 time_point_type 'typename TokenRateX<TokenBucketJiffyParameters<unsigned int> >::time_point_type':'unsigned int'
| `-ElaboratedType 0x55a7748f05d0 'typename TokenRateX<TokenBucketJiffyParameters<unsigned int> >::time_point_type' sugar
|   `-TypedefType 0x55a7748ec030 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::time_point_type' sugar
|     |-Typedef 0x55a7748eaad0 'time_point_type'
|     `-ElaboratedType 0x55a7748eaa80 'typename TokenBucketJiffyParameters<unsigned int>::time_point_type' sugar
|       `-TypedefType 0x55a7748e9f30 'TokenBucketJiffyParameters<unsigned int>::time_point_type' sugar
|         |-Typedef 0x55a7748e9dd0 'time_point_type'
|         `-TypedefType 0x55a77452e210 'click_jiffies_t' sugar
|           |-Typedef 0x55a77452e148 'click_jiffies_t'
|           `-BuiltinType 0x55a774274410 'unsigned int'
|-TypedefDecl 0x55a7748f06f0 <line:338:5, col:36> col:36 ticks_type 'typename TokenRateX<TokenBucketJiffyParameters<unsigned int> >::ticks_type':'unsigned int'
| `-ElaboratedType 0x55a7748f06a0 'typename TokenRateX<TokenBucketJiffyParameters<unsigned int> >::ticks_type' sugar
|   `-TypedefType 0x55a7748ebf10 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::ticks_type' sugar
|     |-Typedef 0x55a7748eb060 'ticks_type'
|     `-ElaboratedType 0x55a7748eb010 'typename make_unsigned<typename TokenBucketJiffyParameters<unsigned int>::duration_type>::type' sugar
|       `-TypedefType 0x55a7748eaff0 'make_unsigned<int>::type' sugar
|         |-Typedef 0x55a7748eaf80 'type'
|         `-ElaboratedType 0x55a7748eaf30 'typename integer_traits<int>::unsigned_type' sugar
|           `-TypedefType 0x55a7748eaf10 'integer_traits<int>::unsigned_type' sugar
|             |-Typedef 0x55a774555690 'unsigned_type'
|             `-BuiltinType 0x55a774274410 'unsigned int'
|-EnumDecl 0x55a7748f0748 <line:340:5> col:5
| `-EnumConstantDecl 0x55a7748f0890 <line:341:2, col:18> col:2 max_tokens 'TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::(anonymous enum at ../dummy_inc/click/tokenbucket.hh:340:5)'
|   `-ImplicitCastExpr 0x55a7748f08e0 <col:15, col:18> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55a7748f0870 <col:15, col:18> 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::(anonymous enum at ../dummy_inc/click/tokenbucket.hh:72:5)' Int: 4294967295
|       `-DeclRefExpr 0x55a7748f0840 <col:15, col:18> 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::(anonymous enum at ../dummy_inc/click/tokenbucket.hh:72:5)' EnumConstant 0x55a7748eb220 'max_tokens' 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::(anonymous enum at ../dummy_inc/click/tokenbucket.hh:72:5)'
|-CXXConstructorDecl 0x55a7748f0930 <line:347:5, line:349:5> line:347:5 TokenCounterX 'void ()'
|-CXXConstructorDecl 0x55a7748f0a98 <line:356:5, line:358:5> line:356:14 TokenCounterX 'void (bool)'
| `-ParmVarDecl 0x55a7748f09e8 <col:28, col:33> col:33 full 'bool'
|-CXXMethodDecl 0x55a7748f0cc8 <line:365:5, line:367:5> line:365:16 size 'TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::token_type (const TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::rate_type &) const'
| `-ParmVarDecl 0x55a7748f0bd8 <col:21, col:38> col:38 rate 'const TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::rate_type &'
|-CXXMethodDecl 0x55a7748f0dc8 <line:373:5, line:375:5> line:373:16 fraction 'TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::token_type () const'
|-CXXMethodDecl 0x55a7748f0e78 <line:378:5, line:380:5> line:378:10 empty 'bool () const'
|-CXXMethodDecl 0x55a7748f0f28 <line:383:5, line:385:5> line:383:10 full 'bool () const'
|-CXXMethodDecl 0x55a7748f1178 <line:393:5, line:395:5> line:393:10 contains 'bool (const TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::rate_type &, TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::token_type) const'
| |-ParmVarDecl 0x55a7748f0fe8 <col:19, col:36> col:36 rate 'const TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::rate_type &'
| `-ParmVarDecl 0x55a7748f1060 <col:42, col:53> col:53 t 'TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::token_type':'unsigned int'
|-CXXMethodDecl 0x55a7748f1308 <line:399:5, line:401:5> line:399:10 contains_fraction 'bool (TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::token_type) const'
| `-ParmVarDecl 0x55a7748f1248 <col:28, col:39> col:39 f 'TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::token_type':'unsigned int'
|-CXXMethodDecl 0x55a7748f13c0 <line:406:5, line:408:5> line:406:10 clear 'void ()'
|-CXXMethodDecl 0x55a7748f1470 <line:413:5, line:415:5> line:413:10 set_full 'void ()'
|-CXXMethodDecl 0x55a7748f16b8 <line:422:5, line:425:5> line:422:10 set 'void (const TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::rate_type &, TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::token_type)'
| |-ParmVarDecl 0x55a7748f1530 <col:14, col:31> col:31 rate 'const TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::rate_type &'
| `-ParmVarDecl 0x55a7748f15a8 <col:37, col:48> col:48 t 'TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::token_type':'unsigned int'
|-CXXMethodDecl 0x55a7748f1848 <line:429:5, line:431:5> line:429:10 set_fraction 'void (TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::token_type)'
| `-ParmVarDecl 0x55a7748f1788 <col:23, col:34> col:34 f 'TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::token_type':'unsigned int'
|-CXXMethodDecl 0x55a7748f1a98 <line:443:5, line:453:5> line:443:10 adjust 'void (const TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::rate_type &, const TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::rate_type &)'
| |-ParmVarDecl 0x55a7748f1910 <col:17, col:34> col:34 old_rate 'const TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::rate_type &'
| `-ParmVarDecl 0x55a7748f1988 <col:44, col:61> col:61 new_rate 'const TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::rate_type &'
|-CXXMethodDecl 0x55a7748f1c58 <line:464:5, col:38> col:10 refill 'void (const TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::rate_type &)'
| `-ParmVarDecl 0x55a7748f1b68 <col:17, col:34> col:34 rate 'const TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::rate_type &'
|-CXXMethodDecl 0x55a7748f1e98 <line:469:5, col:60> col:10 refill 'void (const TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::rate_type &, TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::time_point_type)'
| |-ParmVarDecl 0x55a7748f1d20 <col:17, col:34> col:34 rate 'const TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::rate_type &'
| `-ParmVarDecl 0x55a7748f1dc0 <col:40, col:56> col:56 time 'TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::time_point_type':'unsigned int'
|-FunctionTemplateDecl 0x55a7748f2238 <line:474:5, col:68> col:32 refill
| |-TemplateTypeParmDecl 0x55a7748f1f58 <col:15, col:24> col:24 typename depth 0 index 0 U
| `-CXXMethodDecl 0x55a7748f2198 <col:27, col:68> col:32 refill 'void (const TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::rate_type &, U)'
|   |-ParmVarDecl 0x55a7748f2008 <col:39, col:56> col:56 rate 'const TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::rate_type &'
|   `-ParmVarDecl 0x55a7748f2080 <col:62, col:64> col:64 time 'U'
|-CXXMethodDecl 0x55a7748f23f8 <line:482:5, line:484:5> line:482:10 set_time_point 'void (TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::time_point_type)'
| `-ParmVarDecl 0x55a7748f2330 <col:25, col:41> col:41 time 'TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::time_point_type':'unsigned int'
|-CXXMethodDecl 0x55a7748f25d0 <line:492:5, line:495:5> line:492:10 remove 'void (const TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::rate_type &, TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::token_type)'
| |-ParmVarDecl 0x55a7748f24c0 <col:17, col:34> col:34 rate 'const TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::rate_type &'
| `-ParmVarDecl 0x55a7748f2538 <col:40, col:51> col:51 t 'TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::token_type':'unsigned int'
|-CXXMethodDecl 0x55a7748f2828 <line:505:5, line:507:5> line:505:10 remove_if 'bool (const TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::rate_type &, TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::token_type)'
| |-ParmVarDecl 0x55a7748f26a0 <col:20, col:37> col:37 rate 'const TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::rate_type &'
| `-ParmVarDecl 0x55a7748f2718 <col:43, col:54> col:54 t 'TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::token_type':'unsigned int'
|-CXXMethodDecl 0x55a7748f2988 <line:513:5, line:515:5> line:513:10 remove_fraction 'void (TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::token_type)'
| `-ParmVarDecl 0x55a7748f28f8 <col:26, col:37> col:37 f 'TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::token_type':'unsigned int'
|-CXXMethodDecl 0x55a7748f2b18 <line:523:5, line:529:5> line:523:10 remove_fraction_if 'bool (TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::token_type)'
| `-ParmVarDecl 0x55a7748f2a50 <col:29, col:40> col:40 f 'TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::token_type':'unsigned int'
|-CXXMethodDecl 0x55a7748f2d48 <line:539:5, line:545:5> line:539:16 time_until_contains 'TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::ticks_type (const TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::rate_type &, TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::token_type) const'
| |-ParmVarDecl 0x55a7748f2c00 <col:36, col:53> col:53 rate 'const TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::rate_type &'
| `-ParmVarDecl 0x55a7748f2c78 <line:540:8, col:19> col:19 t 'TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::token_type':'unsigned int'
|-CXXMethodDecl 0x55a7748f2f28 <line:554:5, line:562:5> line:554:16 time_until_contains_fraction 'TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::ticks_type (const TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::rate_type &, TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::token_type) const'
| |-ParmVarDecl 0x55a7748f2e18 <col:45, col:62> col:62 rate 'const TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::rate_type &'
| `-ParmVarDecl 0x55a7748f2e90 <line:555:10, col:21> col:21 f 'TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::token_type':'unsigned int'
|-CXXMethodDecl 0x55a7748f3108 <line:566:5, col:114> col:23 epochs_until_contains 'TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::ticks_type (const TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::rate_type &, TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::token_type) const' inline
| |-ParmVarDecl 0x55a7748f2ff8 <col:45, col:62> col:62 rate 'const TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::rate_type &'
| |-ParmVarDecl 0x55a7748f3070 <col:68, col:79> col:79 t 'TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::token_type':'unsigned int'
| `-DeprecatedAttr 0x55a7748f31f8 <col:103> Inherited "" ""
|-CXXMethodDecl 0x55a7748f3388 <line:567:5, col:123> col:23 epochs_until_contains_fraction 'TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::ticks_type (const TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::rate_type &, TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::token_type) const' inline
| |-ParmVarDecl 0x55a7748f3278 <col:54, col:71> col:71 rate 'const TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::rate_type &'
| |-ParmVarDecl 0x55a7748f32f0 <col:77, col:88> col:88 f 'TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::token_type':'unsigned int'
| `-DeprecatedAttr 0x55a7748f3448 <col:112> Inherited "" ""
|-AccessSpecDecl 0x55a7748f34b8 <line:570:3, col:10> col:3 private
|-FieldDecl 0x55a7748f34f0 <line:572:5, col:16> col:16 _tokens 'TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::token_type':'unsigned int'
|-FieldDecl 0x55a7748f3550 <line:573:5, col:21> col:21 _time_point 'TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::time_point_type':'unsigned int'
|-TypedefDecl 0x55a7748f38b0 <line:575:5, col:85> col:85 cvt_type 'TokenRateConverter<TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::rate_type, has_fast_int_multiply<token_type>::value>':'TokenRateConverter<TokenRateX<TokenBucketJiffyParameters<unsigned int> >, true>'
| `-TemplateSpecializationType 0x55a7748f3810 'TokenRateConverter<TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::rate_type, has_fast_int_multiply<token_type>::value>' sugar TokenRateConverter
|   |-TemplateArgument type 'TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::rate_type':'TokenRateX<TokenBucketJiffyParameters<unsigned int> >'
|   |-TemplateArgument expr
|   | `-ConstantExpr 0x55a7748f36d0 <col:43, col:78> 'bool':'bool' Int: 1
|   |   `-ImplicitCastExpr 0x55a7748f36b8 <col:43, col:78> 'bool':'bool' <LValueToRValue>
|   |     `-DeclRefExpr 0x55a7748f3688 <col:43, col:78> 'const bool':'const bool' lvalue Var 0x55a774854598 'value' 'const bool':'const bool' non_odr_use_constant
|   `-RecordType 0x55a7748f37f0 'TokenRateConverter<TokenRateX<TokenBucketJiffyParameters<unsigned int> >, true>'
|     `-ClassTemplateSpecialization 0x55a7748f36f0 'TokenRateConverter'
|-CXXDestructorDecl 0x55a7748f4a40 <line:326:7> col:7 implicit ~TokenCounterX 'void ()' inline default trivial noexcept-unevaluated 0x55a7748f4a40
|-CXXConstructorDecl 0x55a7749e9c38 <col:7> col:7 implicit constexpr TokenCounterX 'void (const TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > > &)' inline default trivial noexcept-unevaluated 0x55a7749e9c38
| `-ParmVarDecl 0x55a7749e9d48 <col:7> col:7 'const TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > > &'
`-CXXConstructorDecl 0x55a7749e9de8 <col:7> col:7 implicit constexpr TokenCounterX 'void (TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > > &&)' inline default trivial noexcept-unevaluated 0x55a7749e9de8
  `-ParmVarDecl 0x55a7749e9ef8 <col:7> col:7 'TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > > &&'

Layout: <CGRecordLayout
  LLVMType:%class.TokenCounterX = type { i32, i32 }
  NonVirtualBaseLLVMType:%class.TokenCounterX = type { i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55a7748298c0 <../dummy_inc/click/tokenbucket.hh:700:1, line:980:1> line:701:7 class TokenBucketX definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-TemplateArgument type 'TokenBucketJiffyParameters<unsigned int>'
|-CXXRecordDecl 0x55a7748e9810 prev 0x55a7748298c0 <col:1, col:7> col:7 implicit class TokenBucketX
|-AccessSpecDecl 0x55a7748e98a0 <col:22, col:28> col:22 public
|-TypedefDecl 0x55a7748e9908 <line:704:5, col:15> col:15 parameter_type 'TokenBucketJiffyParameters<unsigned int>':'TokenBucketJiffyParameters<unsigned int>'
| `-SubstTemplateTypeParmType 0x55a7748e98d0 'TokenBucketJiffyParameters<unsigned int>' sugar
|   |-TemplateTypeParmType 0x55a7748228b0 'P' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55a774822858 'P'
|   `-RecordType 0x55a774829320 'TokenBucketJiffyParameters<unsigned int>'
|     `-ClassTemplateSpecialization 0x55a774829240 'TokenBucketJiffyParameters'
|-TypedefDecl 0x55a7748e99e0 <line:707:5, col:27> col:27 rate_type 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >':'TokenRateX<TokenBucketJiffyParameters<unsigned int> >'
| `-TemplateSpecializationType 0x55a7748e9970 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >' sugar TokenRateX
|   |-TemplateArgument type 'TokenBucketJiffyParameters<unsigned int>':'TokenBucketJiffyParameters<unsigned int>'
|   `-RecordType 0x55a7748294c0 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >'
|     `-ClassTemplateSpecialization 0x55a7748293e0 'TokenRateX'
|-TypedefDecl 0x55a7748e9ae0 <line:710:5, col:38> col:38 counter_type 'TokenCounterX<TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::rate_type>':'TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >'
| `-TemplateSpecializationType 0x55a7748e9a70 'TokenCounterX<TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::rate_type>' sugar TokenCounterX
|   |-TemplateArgument type 'TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::rate_type':'TokenRateX<TokenBucketJiffyParameters<unsigned int> >'
|   `-RecordType 0x55a7748296f0 'TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >'
|     `-ClassTemplateSpecialization 0x55a774829610 'TokenCounterX'
|-TypedefDecl 0x55a7748ecc00 <line:713:5, col:44> col:44 token_type 'typename rate_type::token_type':'unsigned int'
| `-ElaboratedType 0x55a7748ecbb0 'typename rate_type::token_type' sugar
|   `-TypedefType 0x55a7748eb190 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::token_type' sugar
|     |-Typedef 0x55a7748eaa00 'token_type'
|     `-ElaboratedType 0x55a7748ea9b0 'typename TokenBucketJiffyParameters<unsigned int>::token_type' sugar
|       `-TypedefType 0x55a7748ea990 'TokenBucketJiffyParameters<unsigned int>::token_type' sugar
|         |-Typedef 0x55a7748e9d78 'token_type'
|         `-SubstTemplateTypeParmType 0x55a7748e9d40 'unsigned int' sugar
|           |-TemplateTypeParmType 0x55a774820d40 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55a774820ce8 'T'
|           `-BuiltinType 0x55a774274410 'unsigned int'
|-TypedefDecl 0x55a7748eccd0 <line:716:5, col:49> col:49 time_point_type 'typename rate_type::time_point_type':'unsigned int'
| `-ElaboratedType 0x55a7748ecc80 'typename rate_type::time_point_type' sugar
|   `-TypedefType 0x55a7748ec030 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::time_point_type' sugar
|     |-Typedef 0x55a7748eaad0 'time_point_type'
|     `-ElaboratedType 0x55a7748eaa80 'typename TokenBucketJiffyParameters<unsigned int>::time_point_type' sugar
|       `-TypedefType 0x55a7748e9f30 'TokenBucketJiffyParameters<unsigned int>::time_point_type' sugar
|         |-Typedef 0x55a7748e9dd0 'time_point_type'
|         `-TypedefType 0x55a77452e210 'click_jiffies_t' sugar
|           |-Typedef 0x55a77452e148 'click_jiffies_t'
|           `-BuiltinType 0x55a774274410 'unsigned int'
|-TypedefDecl 0x55a7748ecda0 <line:719:5, col:44> col:44 ticks_type 'typename rate_type::ticks_type':'unsigned int'
| `-ElaboratedType 0x55a7748ecd50 'typename rate_type::ticks_type' sugar
|   `-TypedefType 0x55a7748ebf10 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::ticks_type' sugar
|     |-Typedef 0x55a7748eb060 'ticks_type'
|     `-ElaboratedType 0x55a7748eb010 'typename make_unsigned<typename TokenBucketJiffyParameters<unsigned int>::duration_type>::type' sugar
|       `-TypedefType 0x55a7748eaff0 'make_unsigned<int>::type' sugar
|         |-Typedef 0x55a7748eaf80 'type'
|         `-ElaboratedType 0x55a7748eaf30 'typename integer_traits<int>::unsigned_type' sugar
|           `-TypedefType 0x55a7748eaf10 'integer_traits<int>::unsigned_type' sugar
|             |-Typedef 0x55a774555690 'unsigned_type'
|             `-BuiltinType 0x55a774274410 'unsigned int'
|-EnumDecl 0x55a7748ecdf8 <line:721:5> col:5
| `-EnumConstantDecl 0x55a7748ecf40 <line:722:2, col:26> col:2 max_tokens 'TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::(anonymous enum at ../dummy_inc/click/tokenbucket.hh:721:5)'
|   `-ImplicitCastExpr 0x55a7748ecf90 <col:15, col:26> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55a7748ecf20 <col:15, col:26> 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::(anonymous enum at ../dummy_inc/click/tokenbucket.hh:72:5)' Int: 4294967295
|       `-DeclRefExpr 0x55a7748ecef0 <col:15, col:26> 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::(anonymous enum at ../dummy_inc/click/tokenbucket.hh:72:5)' EnumConstant 0x55a7748eb220 'max_tokens' 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::(anonymous enum at ../dummy_inc/click/tokenbucket.hh:72:5)'
|-CXXConstructorDecl 0x55a7748ecfe0 <line:728:5, line:729:5> line:728:5 used TokenBucketX 'void ()'
|-CXXConstructorDecl 0x55a7748ed148 <line:735:5, line:737:5> line:735:14 TokenBucketX 'void (bool)'
| `-ParmVarDecl 0x55a7748ed098 <col:27, col:32> col:32 unlimited 'bool'
|-CXXConstructorDecl 0x55a7748ed3a8 <line:748:5, line:750:5> line:748:5 TokenBucketX 'void (TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type, TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type)'
| |-ParmVarDecl 0x55a7748ed240 <col:18, col:29> col:29 rate 'TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type':'unsigned int'
| `-ParmVarDecl 0x55a7748ed2b8 <col:35, col:46> col:46 capacity 'TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type':'unsigned int'
|-CXXMethodDecl 0x55a7748ed500 <line:754:5, line:756:5> line:754:10 assign 'void (bool)'
| `-ParmVarDecl 0x55a7748ed470 <col:17, col:34> col:22 unlimited 'bool'
|-CXXMethodDecl 0x55a7748ed6d8 <line:771:5, line:773:5> line:771:10 assign 'void (TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type, TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type)'
| |-ParmVarDecl 0x55a7748ed5c8 <col:17, col:28> col:28 rate 'TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type':'unsigned int'
| `-ParmVarDecl 0x55a7748ed640 <col:34, col:45> col:45 capacity 'TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type':'unsigned int'
|-CXXMethodDecl 0x55a7748ed8b8 <line:784:5, line:788:5> line:784:10 assign_adjust 'void (TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type, TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type)'
| |-ParmVarDecl 0x55a7748ed7a8 <col:24, col:35> col:35 rate 'TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type':'unsigned int'
| `-ParmVarDecl 0x55a7748ed820 <col:41, col:52> col:52 capacity 'TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type':'unsigned int'
|-CXXMethodDecl 0x55a7748ed978 <line:791:5, line:793:5> line:791:10 unlimited 'bool () const'
|-CXXMethodDecl 0x55a7748eda28 <line:796:5, line:798:5> line:796:10 idle 'bool () const'
|-CXXMethodDecl 0x55a7748edb28 <line:804:5, line:806:5> line:804:16 rate 'TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type () const'
|-CXXMethodDecl 0x55a7748edbf8 <line:812:5, line:814:5> line:812:16 capacity 'TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type () const'
|-CXXMethodDecl 0x55a7748edcc8 <line:820:5, line:822:5> line:820:16 size 'TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type () const'
|-CXXMethodDecl 0x55a7748edd98 <line:828:5, line:830:5> line:828:16 fraction 'TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type () const'
|-CXXMethodDecl 0x55a7748ede48 <line:833:5, line:835:5> line:833:10 empty 'bool () const'
|-CXXMethodDecl 0x55a7748edef8 <line:838:5, line:840:5> line:838:10 full 'bool () const'
|-CXXMethodDecl 0x55a7748ee0a8 <line:846:5, line:848:5> line:846:10 contains 'bool (TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type) const'
| `-ParmVarDecl 0x55a7748edfb8 <col:19, col:30> col:30 t 'TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type':'unsigned int'
|-CXXMethodDecl 0x55a7748ee200 <line:852:5, line:854:5> line:852:10 contains_fraction 'bool (TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type) const'
| `-ParmVarDecl 0x55a7748ee170 <col:28, col:39> col:39 f 'TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type':'unsigned int'
|-CXXMethodDecl 0x55a7748ee2b8 <line:859:5, line:861:5> line:859:10 clear 'void ()'
|-CXXMethodDecl 0x55a7748ee368 <line:866:5, line:868:5> line:866:10 set_full 'void ()'
|-CXXMethodDecl 0x55a7748ee4e8 <line:874:5, line:876:5> line:874:10 set 'void (TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type)'
| `-ParmVarDecl 0x55a7748ee428 <col:14, col:25> col:25 t 'TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type':'unsigned int'
|-CXXMethodDecl 0x55a7748ee640 <line:880:5, line:882:5> line:880:10 set_fraction 'void (TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type)'
| `-ParmVarDecl 0x55a7748ee5b0 <col:23, col:34> col:34 f 'TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type':'unsigned int'
|-CXXMethodDecl 0x55a7748ee6f8 <line:892:5, line:894:5> line:892:10 refill 'void ()'
|-CXXMethodDecl 0x55a7748ee8a8 <line:897:5, line:899:5> line:897:10 refill 'void (TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::time_point_type)'
| `-ParmVarDecl 0x55a7748ee7e0 <col:17, col:33> col:33 time 'TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::time_point_type':'unsigned int'
|-FunctionTemplateDecl 0x55a7748eeb68 <line:902:5, line:904:5> line:902:32 refill
| |-TemplateTypeParmDecl 0x55a7748ee960 <col:15, col:24> col:24 typename depth 0 index 0 U
| `-CXXMethodDecl 0x55a7748eeac8 <col:27, line:904:5> line:902:32 refill 'void (U)'
|   `-ParmVarDecl 0x55a7748eea08 <col:39, col:41> col:41 time 'U'
|-CXXMethodDecl 0x55a7748eece8 <line:911:5, line:913:5> line:911:10 set_time_point 'void (TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::time_point_type)'
| `-ParmVarDecl 0x55a7748eec58 <col:25, col:41> col:41 time 'TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::time_point_type':'unsigned int'
|-CXXMethodDecl 0x55a7748eee40 <line:920:5, line:922:5> line:920:10 remove 'void (TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type)'
| `-ParmVarDecl 0x55a7748eedb0 <col:17, col:28> col:28 t 'TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type':'unsigned int'
|-CXXMethodDecl 0x55a7748eefc8 <line:931:5, line:933:5> line:931:10 remove_if 'bool (TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type)'
| `-ParmVarDecl 0x55a7748eef08 <col:20, col:31> col:31 t 'TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type':'unsigned int'
|-CXXMethodDecl 0x55a7748ef120 <line:939:5, line:941:5> line:939:10 remove_fraction 'void (TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type)'
| `-ParmVarDecl 0x55a7748ef090 <col:26, col:37> col:37 f 'TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type':'unsigned int'
|-CXXMethodDecl 0x55a7748ef278 <line:949:5, line:951:5> line:949:10 remove_fraction_if 'bool (TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type)'
| `-ParmVarDecl 0x55a7748ef1e8 <col:29, col:40> col:40 f 'TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type':'unsigned int'
|-CXXMethodDecl 0x55a7748ef458 <line:957:5, line:959:5> line:957:16 time_until_contains 'TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::ticks_type (TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type) const'
| `-ParmVarDecl 0x55a7748ef360 <col:36, col:47> col:47 t 'TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type':'unsigned int'
|-CXXMethodDecl 0x55a7748ef5e8 <line:965:5, line:967:5> line:965:16 time_until_contains_fraction 'TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::ticks_type (TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::ticks_type) const'
| `-ParmVarDecl 0x55a7748ef520 <col:45, col:56> col:56 f 'TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::ticks_type':'unsigned int'
|-CXXMethodDecl 0x55a7748efed8 <line:971:5, col:114> col:23 epochs_until_contains 'TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::ticks_type (const TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::rate_type &, TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type) const' inline
| |-ParmVarDecl 0x55a7748ef708 <col:45, col:62> col:62 rate 'const TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::rate_type &'
| |-ParmVarDecl 0x55a7748ef780 <col:68, col:79> col:79 t 'TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type':'unsigned int'
| `-DeprecatedAttr 0x55a7748eff98 <col:103> Inherited "" ""
|-CXXMethodDecl 0x55a7748f0128 <line:972:5, col:123> col:23 epochs_until_contains_fraction 'TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::ticks_type (const TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::rate_type &, TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type) const' inline
| |-ParmVarDecl 0x55a7748f0018 <col:54, col:71> col:71 rate 'const TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::rate_type &'
| |-ParmVarDecl 0x55a7748f0090 <col:77, col:88> col:88 f 'TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type':'unsigned int'
| `-DeprecatedAttr 0x55a7748f01e8 <col:112> Inherited "" ""
|-AccessSpecDecl 0x55a7748f0258 <line:975:3, col:10> col:3 private
|-FieldDecl 0x55a7748f0290 <line:977:5, col:15> col:15 _rate 'TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::rate_type':'TokenRateX<TokenBucketJiffyParameters<unsigned int> >'
|-FieldDecl 0x55a7748f3920 <line:978:5, col:18> col:18 _bucket 'TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::counter_type':'TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >'
|-CXXDestructorDecl 0x55a7748f47a0 <line:701:7> col:7 implicit ~TokenBucketX 'void ()' inline default trivial noexcept-unevaluated 0x55a7748f47a0
|-CXXConstructorDecl 0x55a7749e9f68 <col:7> col:7 implicit constexpr TokenBucketX 'void (const TokenBucketX<TokenBucketJiffyParameters<unsigned int> > &)' inline default trivial noexcept-unevaluated 0x55a7749e9f68
| `-ParmVarDecl 0x55a7749ea078 <col:7> col:7 'const TokenBucketX<TokenBucketJiffyParameters<unsigned int> > &'
`-CXXConstructorDecl 0x55a7749ea118 <col:7> col:7 implicit constexpr TokenBucketX 'void (TokenBucketX<TokenBucketJiffyParameters<unsigned int> > &&)' inline default trivial noexcept-unevaluated 0x55a7749ea118
  `-ParmVarDecl 0x55a7749ea228 <col:7> col:7 'TokenBucketX<TokenBucketJiffyParameters<unsigned int> > &&'

Layout: <CGRecordLayout
  LLVMType:%class.TokenBucketX = type { %class.TokenRateX, %class.TokenCounterX }
  NonVirtualBaseLLVMType:%class.TokenBucketX = type { %class.TokenRateX, %class.TokenCounterX }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55a77475cd30 <../dummy_inc/click/task.hh:31:1, line:47:1> line:31:8 referenced struct TaskLink definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55a77475ce48 <col:1, col:8> col:8 implicit referenced struct TaskLink
|-FieldDecl 0x55a77475cf18 <line:33:5, col:15> col:15 referenced _prev 'TaskLink *'
|-FieldDecl 0x55a77475cf78 <line:34:5, col:15> col:15 referenced _next 'TaskLink *'
|-FieldDecl 0x55a77475cfe0 <line:37:5, col:14> col:14 referenced _pass 'unsigned int'
|-CXXConstructorDecl 0x55a77475d068 <line:39:5, line:46:5> line:39:5 used TaskLink 'void ()'
| `-CompoundStmt 0x55a77475d2d0 <col:16, line:46:5>
|   |-BinaryOperator 0x55a77475d218 <line:41:9, col:25> 'TaskLink *' lvalue '='
|   | |-MemberExpr 0x55a77475d138 <col:9> 'TaskLink *' lvalue ->_prev 0x55a77475cf18
|   | | `-CXXThisExpr 0x55a77475d128 <col:9> 'TaskLink *' implicit this
|   | `-ImplicitCastExpr 0x55a77475d200 <col:17, col:25> 'TaskLink *' <LValueToRValue>
|   |   `-BinaryOperator 0x55a77475d1e0 <col:17, col:25> 'TaskLink *' lvalue '='
|   |     |-MemberExpr 0x55a77475d178 <col:17> 'TaskLink *' lvalue ->_next 0x55a77475cf78
|   |     | `-CXXThisExpr 0x55a77475d168 <col:17> 'TaskLink *' implicit this
|   |     `-ImplicitCastExpr 0x55a77475d1c8 <col:25> 'TaskLink *' <NullToPointer>
|   |       `-IntegerLiteral 0x55a77475d1a8 <col:25> 'int' 0
|   `-BinaryOperator 0x55a77475d2b0 <line:44:9, col:17> 'unsigned int' lvalue '='
|     |-MemberExpr 0x55a77475d248 <col:9> 'unsigned int' lvalue ->_pass 0x55a77475cfe0
|     | `-CXXThisExpr 0x55a77475d238 <col:9> 'TaskLink *' implicit this
|     `-ImplicitCastExpr 0x55a77475d298 <col:17> 'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x55a77475d278 <col:17> 'int' 0
|-CXXConstructorDecl 0x55a7748bf838 <line:31:8> col:8 implicit constexpr TaskLink 'void (const TaskLink &)' inline default trivial noexcept-unevaluated 0x55a7748bf838
| `-ParmVarDecl 0x55a7748bf948 <col:8> col:8 'const TaskLink &'
|-CXXConstructorDecl 0x55a7748bf9e8 <col:8> col:8 implicit constexpr TaskLink 'void (TaskLink &&)' inline default trivial noexcept-unevaluated 0x55a7748bf9e8
| `-ParmVarDecl 0x55a7748bfaf8 <col:8> col:8 'TaskLink &&'
|-CXXDestructorDecl 0x55a7748bfce8 <col:8> col:8 implicit ~TaskLink 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55a7748c04e8 <col:8> col:8 implicit operator= 'TaskLink &(const TaskLink &)' inline default trivial noexcept-unevaluated 0x55a7748c04e8
| `-ParmVarDecl 0x55a7748c05f8 <col:8> col:8 'const TaskLink &'
`-CXXMethodDecl 0x55a7748c0668 <col:8> col:8 implicit operator= 'TaskLink &(TaskLink &&)' inline default trivial noexcept-unevaluated 0x55a7748c0668
  `-ParmVarDecl 0x55a7748c0778 <col:8> col:8 'TaskLink &&'

Layout: <CGRecordLayout
  LLVMType:%struct.TaskLink = type <{ %struct.TaskLink*, %struct.TaskLink*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%struct.TaskLink.base = type <{ %struct.TaskLink*, %struct.TaskLink*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55a77475f8a8 <../dummy_inc/click/task.hh:315:9, line:319:9> line:315:9 struct definition
|-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x55a77475f9d8 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
|-FieldDecl 0x55a77475fa38 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
|-FieldDecl 0x55a77475fa98 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
|-CXXConstructorDecl 0x55a7748c6a18 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
|-CXXDestructorDecl 0x55a7748c6af0 <col:9> col:9 implicit ~ 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x55a7748c6da8 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x55a7748c6da8
| `-ParmVarDecl 0x55a7748c6eb8 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
`-CXXConstructorDecl 0x55a7748c6f58 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x55a7748c6f58
  `-ParmVarDecl 0x55a7748c7068 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'

Layout: <CGRecordLayout
  LLVMType:%struct.anon = type { i16, i8, i8 }
  NonVirtualBaseLLVMType:%struct.anon = type { i16, i8, i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55a77475f700 <../dummy_inc/click/task.hh:314:5, line:321:5> line:314:11 union Status definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55a77475f818 <col:5, col:11> col:11 implicit union Status
|-CXXRecordDecl 0x55a77475f8a8 <line:315:9, line:319:9> line:315:9 struct definition
| |-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x55a77475f9d8 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
| |-FieldDecl 0x55a77475fa38 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
| |-FieldDecl 0x55a77475fa98 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
| |-CXXConstructorDecl 0x55a7748c6a18 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
| |-CXXDestructorDecl 0x55a7748c6af0 <col:9> col:9 implicit ~ 'void () noexcept' inline default trivial
| |-CXXConstructorDecl 0x55a7748c6da8 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x55a7748c6da8
| | `-ParmVarDecl 0x55a7748c6eb8 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
| `-CXXConstructorDecl 0x55a7748c6f58 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x55a7748c6f58
|   `-ParmVarDecl 0x55a7748c7068 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'
|-FieldDecl 0x55a77475fb58 <col:9> col:9 implicit referenced 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
|-IndirectFieldDecl 0x55a77475fbb8 <line:316:21> col:21 implicit home_thread_id 'int16_t':'short'
| |-Field 0x55a77475fb58 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x55a77475f9d8 'home_thread_id' 'int16_t':'short'
|-IndirectFieldDecl 0x55a77475fc10 <line:317:21> col:21 implicit is_scheduled 'uint8_t':'unsigned char'
| |-Field 0x55a77475fb58 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x55a77475fa38 'is_scheduled' 'uint8_t':'unsigned char'
|-IndirectFieldDecl 0x55a77475fc68 <line:318:21> col:21 implicit is_strong_unscheduled 'uint8_t':'unsigned char'
| |-Field 0x55a77475fb58 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x55a77475fa98 'is_strong_unscheduled' 'uint8_t':'unsigned char'
|-FieldDecl 0x55a77475fcc0 <line:320:9, col:18> col:18 status 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55a7748c6928 <line:314:11> col:11 implicit used Status 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55a7748c7288 <col:11>
|-CXXConstructorDecl 0x55a7748c6bf8 <col:11> col:11 implicit constexpr Status 'void (const Task::Status &)' inline default trivial noexcept-unevaluated 0x55a7748c6bf8
| `-ParmVarDecl 0x55a7748c6d08 <col:11> col:11 'const Task::Status &'
|-CXXConstructorDecl 0x55a7748c7108 <col:11> col:11 implicit constexpr Status 'void (Task::Status &&)' inline default trivial noexcept-unevaluated 0x55a7748c7108
| `-ParmVarDecl 0x55a7748c7218 <col:11> col:11 'Task::Status &&'
`-CXXDestructorDecl 0x55a7749ea388 <col:11> col:11 implicit ~Status 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"union.Task::Status" = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<16> >
         0 |   vector_memory<class sized_array_memory<16> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct TimerSet::heap_element>
         0 |   class vector_memory<class sized_array_memory<16> > vm_
         0 |     vector_memory<class sized_array_memory<16> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<8> >
         0 |   vector_memory<class sized_array_memory<8> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class Timer *>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class SimpleSpinlock (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class TimerSet
         0 |   class Timestamp _timer_expiry
         0 |     union Timestamp::rep_t _t
         0 |       int64_t x
         8 |   unsigned int _max_timer_stride
        12 |   unsigned int _timer_stride
        16 |   unsigned int _timer_count
        24 |   class Vector<struct TimerSet::heap_element> _timer_heap
        24 |     class vector_memory<class sized_array_memory<16> > vm_
        24 |       vector_memory<class sized_array_memory<16> >::type * l_
        32 |       vector_memory::size_type n_
        36 |       vector_memory::size_type capacity_
        40 |   class Vector<class Timer *> _timer_runchunk
        40 |     class vector_memory<class sized_array_memory<8> > vm_
        40 |       vector_memory<class sized_array_memory<8> >::type * l_
        48 |       vector_memory::size_type n_
        52 |       vector_memory::size_type capacity_
        56 |   class SimpleSpinlock _timer_lock (empty)
        64 |   class Timestamp _timer_check
        64 |     union Timestamp::rep_t _t
        64 |       int64_t x
        72 |   uint32_t _timer_check_reports
           | [sizeof=80, dsize=76, align=8,
           |  nvsize=76, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct pollfd>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<24> >
         0 |   vector_memory<class sized_array_memory<24> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct SelectSet::SelectorInfo>
         0 |   class vector_memory<class sized_array_memory<24> > vm_
         0 |     vector_memory<class sized_array_memory<24> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class SelectSet
         0 |   int [2] _wake_pipe
         8 |   volatile _Bool _wake_pipe_pending
        16 |   class Vector<struct pollfd> _pollfds
        16 |     class vector_memory<class sized_array_memory<8> > vm_
        16 |       vector_memory<class sized_array_memory<8> >::type * l_
        24 |       vector_memory::size_type n_
        28 |       vector_memory::size_type capacity_
        32 |   class Vector<struct SelectSet::SelectorInfo> _selinfo
        32 |     class vector_memory<class sized_array_memory<24> > vm_
        32 |       vector_memory<class sized_array_memory<24> >::type * l_
        40 |       vector_memory::size_type n_
        44 |       vector_memory::size_type capacity_
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | class Spinlock (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class atomic_uint32_t
         0 |   uint32_t _val
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | class SpinlockIRQ (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class RouterThread
         0 |   struct TaskLink _task_link
         0 |     struct TaskLink * _prev
         8 |     struct TaskLink * _next
        16 |     unsigned int _pass
        24 |   volatile _Bool _stop_flag
        32 |   class TimerSet _timers
        32 |     class Timestamp _timer_expiry
        32 |       union Timestamp::rep_t _t
        32 |         int64_t x
        40 |     unsigned int _max_timer_stride
        44 |     unsigned int _timer_stride
        48 |     unsigned int _timer_count
        56 |     class Vector<struct TimerSet::heap_element> _timer_heap
        56 |       class vector_memory<class sized_array_memory<16> > vm_
        56 |         vector_memory<class sized_array_memory<16> >::type * l_
        64 |         vector_memory::size_type n_
        68 |         vector_memory::size_type capacity_
        72 |     class Vector<class Timer *> _timer_runchunk
        72 |       class vector_memory<class sized_array_memory<8> > vm_
        72 |         vector_memory<class sized_array_memory<8> >::type * l_
        80 |         vector_memory::size_type n_
        84 |         vector_memory::size_type capacity_
        88 |     class SimpleSpinlock _timer_lock (empty)
        96 |     class Timestamp _timer_check
        96 |       union Timestamp::rep_t _t
        96 |         int64_t x
       104 |     uint32_t _timer_check_reports
       112 |   class SelectSet _selects
       112 |     int [2] _wake_pipe
       120 |     volatile _Bool _wake_pipe_pending
       128 |     class Vector<struct pollfd> _pollfds
       128 |       class vector_memory<class sized_array_memory<8> > vm_
       128 |         vector_memory<class sized_array_memory<8> >::type * l_
       136 |         vector_memory::size_type n_
       140 |         vector_memory::size_type capacity_
       144 |     class Vector<struct SelectSet::SelectorInfo> _selinfo
       144 |       class vector_memory<class sized_array_memory<24> > vm_
       144 |         vector_memory<class sized_array_memory<24> >::type * l_
       152 |         vector_memory::size_type n_
       156 |         vector_memory::size_type capacity_
       192 |   class Spinlock _task_lock (empty)
       196 |   class atomic_uint32_t _task_blocker
       196 |     uint32_t _val
       200 |   class atomic_uint32_t _task_blocker_waiting
       200 |     uint32_t _val
       208 |   union Task::Pending _pending_head
       208 |     class Task * t
       208 |     uintptr_t x
       216 |   class Task::Pending * _pending_tail
       224 |   class SpinlockIRQ _pending_lock (empty)
       256 |   class Master * _master
       264 |   int _id
       268 |   _Bool _driver_entered
       272 |   unsigned int _tasks_per_iter
       276 |   unsigned int _iters_per_os
           | [sizeof=320, dsize=280, align=64,
           |  nvsize=280, nvalign=64]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55a774773510 prev 0x55a77476a350 <../dummy_inc/click/timestamp.hh:539:5, line:566:5> line:539:11 referenced union rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55a774773608 <col:5, col:11> col:11 implicit union rep_t
|-FieldDecl 0x55a7747736a8 <line:541:9, col:17> col:17 referenced x 'int64_t':'long'
|-CXXConstructorDecl 0x55a77477a470 <line:539:11> col:11 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55a77477a858 <col:11>
|-CXXConstructorDecl 0x55a77477a550 <col:11> col:11 implicit used constexpr rep_t 'void (const Timestamp::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55a77477a638 <col:11> col:11 'const Timestamp::rep_t &'
| `-CompoundStmt 0x55a77477afa0 <col:11>
|-CXXConstructorDecl 0x55a77477a6d8 <col:11> col:11 implicit used constexpr rep_t 'void (Timestamp::rep_t &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55a77477a7e8 <col:11> col:11 'Timestamp::rep_t &&'
| `-CompoundStmt 0x55a77477c7f8 <col:11>
|-CXXDestructorDecl 0x55a77477bb08 <col:11> col:11 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55a7744826b8 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(const Timestamp::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55a7744827c8 <col:11> col:11 'const Timestamp::rep_t &'
| `-CompoundStmt 0x55a774483090 <col:11>
|   `-ReturnStmt 0x55a774483080 <col:11>
|     `-UnaryOperator 0x55a774483068 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55a774483058 <col:11> 'Timestamp::rep_t *' this
`-CXXMethodDecl 0x55a774482838 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(Timestamp::rep_t &&) noexcept' inline default trivial
  |-ParmVarDecl 0x55a774482948 <col:11> col:11 'Timestamp::rep_t &&'
  `-CompoundStmt 0x55a77484a600 <col:11>
    `-ReturnStmt 0x55a77484a5f0 <col:11>
      `-UnaryOperator 0x55a77484a5d8 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
        `-CXXThisExpr 0x55a77484a5c8 <col:11> 'Timestamp::rep_t *' this

Layout: <CGRecordLayout
  LLVMType:%"union.Timestamp::rep_t" = type { i64 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55a774769508 prev 0x55a774769218 <../dummy_inc/click/timestamp.hh:122:1, line:723:1> line:122:7 referenced class Timestamp definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55a774769600 <col:1, col:7> col:7 implicit referenced class Timestamp
|-AccessSpecDecl 0x55a774769690 <col:19, col:25> col:19 public
|-TypedefDecl 0x55a7747696c8 <line:125:5, col:21> col:21 referenced seconds_type 'int32_t':'int'
| `-TypedefType 0x55a7743ce8b0 'int32_t' sugar
|   |-Typedef 0x55a7742dd268 'int32_t'
|   `-TypedefType 0x55a7742b63b0 '__int32_t' sugar
|     |-Typedef 0x55a7742b5fc8 '__int32_t'
|     `-BuiltinType 0x55a774274370 'int'
|-TypedefDecl 0x55a774769730 <line:128:5, col:21> col:21 referenced value_type 'int64_t':'long'
| `-TypedefType 0x55a7743cea70 'int64_t' sugar
|   |-Typedef 0x55a7742dd2d0 'int64_t'
|   `-TypedefType 0x55a7742b64d0 '__int64_t' sugar
|     |-Typedef 0x55a7742b60a8 '__int64_t'
|     `-BuiltinType 0x55a774274390 'long'
|-EnumDecl 0x55a774769788 <line:133:5, line:140:5> line:133:5
| |-EnumConstantDecl 0x55a774769900 <line:134:9, col:38> col:9 max_seconds 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:133:5)'
| | `-ConstantExpr 0x55a7747698e0 <col:23, col:38> 'Timestamp::seconds_type':'int' Int: 2147483647
| |   `-CStyleCastExpr 0x55a7747698b8 <col:23, col:38> 'Timestamp::seconds_type':'int' <NoOp>
| |     `-ImplicitCastExpr 0x55a7747698a0 <col:38> 'Timestamp::seconds_type':'int' <IntegralCast> part_of_explicit_cast
| |       `-IntegerLiteral 0x55a774769870 <col:38> 'unsigned int' 2147483647
| `-EnumConstantDecl 0x55a7747699f8 <line:137:9, col:39> col:9 min_seconds 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:133:5)'
|   `-ConstantExpr 0x55a7747699d8 <col:23, col:39> 'Timestamp::seconds_type':'int' Int: -2147483648
|     `-CStyleCastExpr 0x55a7747699b0 <col:23, col:39> 'Timestamp::seconds_type':'int' <NoOp>
|       `-ImplicitCastExpr 0x55a774769998 <col:38, col:39> 'Timestamp::seconds_type':'int' <IntegralCast> part_of_explicit_cast
|         `-UnaryOperator 0x55a774769970 <col:38, col:39> 'unsigned int' prefix '-'
|           `-IntegerLiteral 0x55a774769950 <col:39> 'unsigned int' 2147483648
|-EnumDecl 0x55a774769a48 <line:142:5, line:162:5> line:142:5
| |-EnumConstantDecl 0x55a774769b50 <line:143:9, col:24> col:9 referenced nsec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55a77476a0a0 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a774769b30 <col:24> 'int' Int: 1000000000
| |     `-IntegerLiteral 0x55a774769b10 <col:24> 'int' 1000000000
| |-EnumConstantDecl 0x55a774769be0 <line:144:9, col:25> col:9 nsec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55a77476a0b8 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a774769bc0 <col:25> 'int' Int: 1000000
| |     `-IntegerLiteral 0x55a774769ba0 <col:25> 'int' 1000000
| |-EnumConstantDecl 0x55a774769c70 <line:145:9, col:25> col:9 nsec_per_usec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55a77476a0d0 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a774769c50 <col:25> 'int' Int: 1000
| |     `-IntegerLiteral 0x55a774769c30 <col:25> 'int' 1000
| |-EnumConstantDecl 0x55a774769d00 <line:146:9, col:24> col:9 referenced usec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55a77476a0e8 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a774769ce0 <col:24> 'int' Int: 1000000
| |     `-IntegerLiteral 0x55a774769cc0 <col:24> 'int' 1000000
| |-EnumConstantDecl 0x55a774769d90 <line:147:9, col:25> col:9 usec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55a77476a100 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a774769d70 <col:25> 'int' Int: 1000
| |     `-IntegerLiteral 0x55a774769d50 <col:25> 'int' 1000
| |-EnumConstantDecl 0x55a774769e20 <line:148:9, col:24> col:9 referenced msec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55a77476a118 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a774769e00 <col:24> 'int' Int: 1000
| |     `-IntegerLiteral 0x55a774769de0 <col:24> 'int' 1000
| |-EnumConstantDecl 0x55a774769eb0 <line:150:9, col:26> col:9 referenced subsec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55a77476a130 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a774769e90 <col:26> 'int' Int: 1000000000
| |     `-DeclRefExpr 0x55a774769e70 <col:26> 'int' EnumConstant 0x55a774769b50 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| |-EnumConstantDecl 0x55a774769f80 <line:157:9, col:44> col:9 referenced subsec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55a77476a148 <col:27, col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a774769f60 <col:27, col:44> 'int' Int: 1000000
| |     `-BinaryOperator 0x55a774769f40 <col:27, col:44> 'int' '/'
| |       |-DeclRefExpr 0x55a774769f00 <col:27> 'int' EnumConstant 0x55a774769eb0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| |       `-DeclRefExpr 0x55a774769f20 <col:44> 'int' EnumConstant 0x55a774769e20 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| `-EnumConstantDecl 0x55a77476a050 <line:158:9, col:44> col:9 referenced subsec_per_usec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ImplicitCastExpr 0x55a77476a160 <col:27, col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55a77476a030 <col:27, col:44> 'int' Int: 1000
|       `-BinaryOperator 0x55a77476a010 <col:27, col:44> 'int' '/'
|         |-DeclRefExpr 0x55a774769fd0 <col:27> 'int' EnumConstant 0x55a774769eb0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|         `-DeclRefExpr 0x55a774769ff0 <col:44> 'int' EnumConstant 0x55a774769d00 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-EnumDecl 0x55a77476a178 <line:164:5, line:166:5> line:164:5
| `-EnumConstantDecl 0x55a77476a280 <line:165:9, col:19> col:9 NSUBSEC 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:164:5)'
|   `-ImplicitCastExpr 0x55a77476a2d0 <col:19> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55a77476a260 <col:19> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' Int: 1000000000
|       `-DeclRefExpr 0x55a77476a240 <col:19> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55a774769eb0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-TypedefDecl 0x55a77476a2f8 <line:168:5, col:32> col:32 referenced uninitialized_t 'uninitialized_type'
| `-RecordType 0x55a7743ce4e0 'uninitialized_type'
|   `-CXXRecord 0x55a7743ce448 'uninitialized_type'
|-CXXRecordDecl 0x55a77476a350 <line:170:5, col:11> col:11 referenced union rep_t
|-CXXConstructorDecl 0x55a77476a460 <line:174:5, line:176:5> line:174:12 used Timestamp 'void ()' inline
| |-CXXCtorInitializer Field 0x55a774774658 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55a77477a868 <col:12> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55a77477a988 <col:24, line:176:5>
|   `-CXXMemberCallExpr 0x55a77477a940 <line:175:9, col:20> 'void'
|     |-MemberExpr 0x55a77477a8d0 <col:9> '<bound member function type>' ->assign 0x55a77476f0a8
|     | `-CXXThisExpr 0x55a77477a8c0 <col:9> 'Timestamp *' implicit this
|     |-IntegerLiteral 0x55a77477a900 <col:16> 'int' 0
|     `-ImplicitCastExpr 0x55a77477a970 <col:19> 'uint32_t':'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x55a77477a920 <col:19> 'int' 0
|-CXXConstructorDecl 0x55a77476a6a8 <line:187:5, line:189:5> line:187:21 Timestamp 'void (long, uint32_t)' inline
| |-ParmVarDecl 0x55a77476a520 <col:31, col:36> col:36 used sec 'long'
| |-ParmVarDecl 0x55a77476a598 <col:41, col:59> col:50 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55a7747761a0 <col:59> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55a774776180 <col:59> 'int' 0
| |-CXXCtorInitializer Field 0x55a774774658 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55a77477a9a0 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55a77477aaf0 <col:62, line:189:5>
|   `-CXXMemberCallExpr 0x55a77477aa78 <line:188:9, col:27> 'void'
|     |-MemberExpr 0x55a77477aa08 <col:9> '<bound member function type>' ->assign 0x55a77476f0a8
|     | `-CXXThisExpr 0x55a77477a9f8 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55a77477aac0 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x55a77477aaa8 <col:16> 'long' <LValueToRValue>
|     |   `-DeclRefExpr 0x55a77477aa38 <col:16> 'long' lvalue ParmVar 0x55a77476a520 'sec' 'long'
|     `-ImplicitCastExpr 0x55a77477aad8 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x55a77477aa58 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x55a77476a598 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55a77476a908 <line:191:5, line:193:5> line:191:21 used Timestamp 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x55a77476a778 <col:31, col:35> col:35 used sec 'int'
| |-ParmVarDecl 0x55a77476a7f0 <col:40, col:58> col:49 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55a7747761d8 <col:58> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55a7747761b8 <col:58> 'int' 0
| |-CXXCtorInitializer Field 0x55a774774658 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55a77477ab08 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55a77477ac40 <col:61, line:193:5>
|   `-CXXMemberCallExpr 0x55a77477abe0 <line:192:9, col:27> 'void'
|     |-MemberExpr 0x55a77477ab70 <col:9> '<bound member function type>' ->assign 0x55a77476f0a8
|     | `-CXXThisExpr 0x55a77477ab60 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55a77477ac10 <col:16> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x55a77477aba0 <col:16> 'int' lvalue ParmVar 0x55a77476a778 'sec' 'int'
|     `-ImplicitCastExpr 0x55a77477ac28 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x55a77477abc0 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x55a77476a7f0 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55a77476ab68 <line:195:5, line:197:5> line:195:21 Timestamp 'void (unsigned long, uint32_t)' inline
| |-ParmVarDecl 0x55a77476a9d8 <col:31, col:45> col:45 used sec 'unsigned long'
| |-ParmVarDecl 0x55a77476aa50 <col:50, col:68> col:59 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55a774776210 <col:68> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55a7747761f0 <col:68> 'int' 0
| |-CXXCtorInitializer Field 0x55a774774658 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55a77477ac58 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55a77477ada8 <col:71, line:197:5>
|   `-CXXMemberCallExpr 0x55a77477ad30 <line:196:9, col:27> 'void'
|     |-MemberExpr 0x55a77477acc0 <col:9> '<bound member function type>' ->assign 0x55a77476f0a8
|     | `-CXXThisExpr 0x55a77477acb0 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55a77477ad78 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x55a77477ad60 <col:16> 'unsigned long' <LValueToRValue>
|     |   `-DeclRefExpr 0x55a77477acf0 <col:16> 'unsigned long' lvalue ParmVar 0x55a77476a9d8 'sec' 'unsigned long'
|     `-ImplicitCastExpr 0x55a77477ad90 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x55a77477ad10 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x55a77476aa50 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55a77476bd00 <line:199:5, line:201:5> line:199:21 used Timestamp 'void (unsigned int, uint32_t)' inline
| |-ParmVarDecl 0x55a77476ac38 <col:31, col:40> col:40 used sec 'unsigned int'
| |-ParmVarDecl 0x55a77476acb0 <col:45, col:63> col:54 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55a774776248 <col:63> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55a774776228 <col:63> 'int' 0
| |-CXXCtorInitializer Field 0x55a774774658 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55a77477adc0 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55a77477af10 <col:66, line:201:5>
|   `-CXXMemberCallExpr 0x55a77477ae98 <line:200:9, col:27> 'void'
|     |-MemberExpr 0x55a77477ae28 <col:9> '<bound member function type>' ->assign 0x55a77476f0a8
|     | `-CXXThisExpr 0x55a77477ae18 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55a77477aee0 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x55a77477aec8 <col:16> 'unsigned int' <LValueToRValue>
|     |   `-DeclRefExpr 0x55a77477ae58 <col:16> 'unsigned int' lvalue ParmVar 0x55a77476ac38 'sec' 'unsigned int'
|     `-ImplicitCastExpr 0x55a77477aef8 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x55a77477ae78 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x55a77476acb0 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55a77476be60 <line:203:5, col:37> col:21 used Timestamp 'void (double)' inline
| `-ParmVarDecl 0x55a77476bdd0 <col:31> col:37 'double'
|-CXXConstructorDecl 0x55a77476bff8 <line:206:5, col:46> col:12 Timestamp 'void (const struct timeval &)' inline
| `-ParmVarDecl 0x55a77476bf38 <col:22, col:44> col:44 tv 'const struct timeval &'
|-CXXConstructorDecl 0x55a77476c228 <line:208:5, col:47> col:12 Timestamp 'void (const struct timespec &)' inline
| `-ParmVarDecl 0x55a77476c130 <col:22, col:45> col:45 ts 'const struct timespec &'
|-CXXConstructorDecl 0x55a77476c3d8 <line:212:5, line:214:5> line:212:12 Timestamp 'void (const Timestamp::rep_t &)' inline
| |-ParmVarDecl 0x55a77476c318 <col:22, col:35> col:35 used rep 'const Timestamp::rep_t &'
| |-CXXCtorInitializer Field 0x55a774774658 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55a77477afb0 <line:213:11, col:17> 'Timestamp::rep_t' 'void (const Timestamp::rep_t &) noexcept'
| |   `-DeclRefExpr 0x55a77477af28 <col:14> 'const Timestamp::rep_t' lvalue ParmVar 0x55a77476c318 'rep' 'const Timestamp::rep_t &'
| `-CompoundStmt 0x55a77477b010 <col:19, line:214:5>
|-CXXConstructorDecl 0x55a77476c5a8 <line:217:5, line:219:5> line:217:12 used Timestamp 'void (const Timestamp::uninitialized_t &)' inline
| |-ParmVarDecl 0x55a77476c4e8 <col:22, col:45> col:45 used unused 'const Timestamp::uninitialized_t &'
| |-CXXCtorInitializer Field 0x55a774774658 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55a77477b020 <col:12> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55a77477b0d0 <col:53, line:219:5>
|   `-CStyleCastExpr 0x55a77477b0a8 <line:218:9, col:16> 'void' <ToVoid>
|     `-DeclRefExpr 0x55a77477b078 <col:16> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue ParmVar 0x55a77476c4e8 'unused' 'const Timestamp::uninitialized_t &'
|-TypedefDecl 0x55a77476c798 <line:221:5, col:64> col:39 referenced unspecified_bool_type 'Timestamp::seconds_type (Timestamp::*)() const'
| `-MemberPointerType 0x55a77476c710 'Timestamp::seconds_type (Timestamp::*)() const'
|   |-RecordType 0x55a7747692b0 'Timestamp'
|   | `-CXXRecord 0x55a774769508 'Timestamp'
|   `-ParenType 0x55a77476c6b0 'Timestamp::seconds_type () const' sugar
|     `-FunctionProtoType 0x55a77476c680 'Timestamp::seconds_type () const' const cdecl
|       `-TypedefType 0x55a774769850 'Timestamp::seconds_type' sugar
|         |-Typedef 0x55a7747696c8 'seconds_type'
|         `-TypedefType 0x55a7743ce8b0 'int32_t' sugar
|           |-Typedef 0x55a7742dd268 'int32_t'
|           `-TypedefType 0x55a7742b63b0 '__int32_t' sugar
|             |-Typedef 0x55a7742b5fc8 '__int32_t'
|             `-BuiltinType 0x55a774274370 'int'
|-CXXConversionDecl 0x55a77476c8d8 <line:222:5, col:45> col:12 used operator int (Timestamp::*)() const 'Timestamp::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x55a77476c9a8 <line:225:5, line:231:5> line:225:17 is_negative 'bool () const' inline
| `-CompoundStmt 0x55a77477b1d8 <col:37, line:231:5>
|   `-ReturnStmt 0x55a77477b1c8 <line:227:9, col:23>
|     `-BinaryOperator 0x55a77477b1a8 <col:16, col:23> 'bool' '<'
|       |-ImplicitCastExpr 0x55a77477b178 <col:16, col:19> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x55a77477b128 <col:16, col:19> 'const int64_t':'const long' lvalue .x 0x55a7747736a8
|       |   `-MemberExpr 0x55a77477b0f8 <col:16> 'const Timestamp::rep_t' lvalue ->_t 0x55a774774658
|       |     `-CXXThisExpr 0x55a77477b0e8 <col:16> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x55a77477b190 <col:23> 'long' <IntegralCast>
|         `-IntegerLiteral 0x55a77477b158 <col:23> 'int' 0
|-CXXMethodDecl 0x55a77476ca68 <line:233:5, col:31> col:25 used sec 'Timestamp::seconds_type () const' inline
|-CXXMethodDecl 0x55a77476cb28 <line:234:5, col:30> col:21 used subsec 'uint32_t () const' inline
|-CXXMethodDecl 0x55a77476cbe8 <line:235:5, col:28> col:21 msec 'uint32_t () const' inline
|-CXXMethodDecl 0x55a77476cca8 <line:236:5, col:28> col:21 used usec 'uint32_t () const' inline
|-CXXMethodDecl 0x55a77476cd68 <line:237:5, col:28> col:21 used nsec 'uint32_t () const' inline
|-CXXMethodDecl 0x55a77476ced8 <line:239:5, col:41> col:17 set_sec 'void (Timestamp::seconds_type)' inline
| `-ParmVarDecl 0x55a77476ce18 <col:25, col:38> col:38 sec 'Timestamp::seconds_type':'int'
|-CXXMethodDecl 0x55a77476d020 <line:240:5, col:43> col:17 set_subsec 'void (uint32_t)' inline
| `-ParmVarDecl 0x55a77476cf90 <col:28, col:37> col:37 subsec 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55a77476d0e8 <line:242:5, col:65> col:25 msec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x55a77476d188 <col:54> "" ""
|-CXXMethodDecl 0x55a77476d218 <line:243:5, col:65> col:25 usec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x55a77476d2b8 <col:54> "" ""
|-CXXMethodDecl 0x55a77476d348 <line:244:5, col:65> col:25 nsec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x55a77476d3e8 <col:54> "" ""
|-CXXMethodDecl 0x55a77476d4e8 <line:250:5, col:37> col:27 used timeval 'struct timeval () const' inline
|-CXXMethodDecl 0x55a77476d5b8 <line:251:5, col:42> col:27 timeval_ceil 'struct timeval () const' inline
|-CXXMethodDecl 0x55a77476d6e8 <line:257:5, col:39> col:28 timespec 'struct timespec () const' inline
|-CXXMethodDecl 0x55a77476d7e0 <line:262:5, col:31> col:19 used doubleval 'double () const' inline
|-CXXMethodDecl 0x55a77476d918 <line:265:5, line:271:5> line:265:23 msecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x55a77477b3f0 <col:39, line:271:5>
|   `-ReturnStmt 0x55a77477b3e0 <line:267:9, col:61>
|     `-CallExpr 0x55a77477b380 <col:16, col:61> 'Timestamp::value_type':'long'
|       |-ImplicitCastExpr 0x55a77477b368 <col:16> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55a77477b1f0 <col:16> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x55a774774988 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|       |-ImplicitCastExpr 0x55a77477b3b0 <col:26, col:29> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x55a77477b250 <col:26, col:29> 'const int64_t':'const long' lvalue .x 0x55a7747736a8
|       |   `-MemberExpr 0x55a77477b220 <col:26> 'const Timestamp::rep_t' lvalue ->_t 0x55a774774658
|       |     `-CXXThisExpr 0x55a77477b210 <col:26> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x55a77477b3c8 <col:32, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|         `-BinaryOperator 0x55a77477b2f0 <col:32, col:49> 'int' '/'
|           |-ImplicitCastExpr 0x55a77477b2c0 <col:32> 'int' <IntegralCast>
|           | `-DeclRefExpr 0x55a77477b280 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55a774769eb0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|           `-ImplicitCastExpr 0x55a77477b2d8 <col:49> 'int' <IntegralCast>
|             `-DeclRefExpr 0x55a77477b2a0 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55a774769e20 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55a77476d9d8 <line:273:5, line:279:5> line:273:23 usecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x55a77477b5b0 <col:39, line:279:5>
|   `-ReturnStmt 0x55a77477b5a0 <line:275:9, col:61>
|     `-CallExpr 0x55a77477b540 <col:16, col:61> 'Timestamp::value_type':'long'
|       |-ImplicitCastExpr 0x55a77477b528 <col:16> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55a77477b408 <col:16> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x55a774774988 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|       |-ImplicitCastExpr 0x55a77477b570 <col:26, col:29> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x55a77477b468 <col:26, col:29> 'const int64_t':'const long' lvalue .x 0x55a7747736a8
|       |   `-MemberExpr 0x55a77477b438 <col:26> 'const Timestamp::rep_t' lvalue ->_t 0x55a774774658
|       |     `-CXXThisExpr 0x55a77477b428 <col:26> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x55a77477b588 <col:32, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|         `-BinaryOperator 0x55a77477b508 <col:32, col:49> 'int' '/'
|           |-ImplicitCastExpr 0x55a77477b4d8 <col:32> 'int' <IntegralCast>
|           | `-DeclRefExpr 0x55a77477b498 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55a774769eb0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|           `-ImplicitCastExpr 0x55a77477b4f0 <col:49> 'int' <IntegralCast>
|             `-DeclRefExpr 0x55a77477b4b8 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55a774769d00 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55a77476da98 <line:281:5, line:287:5> line:281:23 nsecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x55a77477b748 <col:39, line:287:5>
|   `-ReturnStmt 0x55a77477b738 <line:283:9, col:53>
|     `-BinaryOperator 0x55a77477b718 <col:16, col:53> 'long' '*'
|       |-ImplicitCastExpr 0x55a77477b6e8 <col:16, col:19> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x55a77477b608 <col:16, col:19> 'const int64_t':'const long' lvalue .x 0x55a7747736a8
|       |   `-MemberExpr 0x55a77477b5d8 <col:16> 'const Timestamp::rep_t' lvalue ->_t 0x55a774774658
|       |     `-CXXThisExpr 0x55a77477b5c8 <col:16> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x55a77477b700 <col:23, col:53> 'long' <IntegralCast>
|         `-ParenExpr 0x55a77477b6c8 <col:23, col:53> 'int'
|           `-BinaryOperator 0x55a77477b6a8 <col:24, col:39> 'int' '/'
|             |-ImplicitCastExpr 0x55a77477b678 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55a77477b638 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55a774769b50 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55a77477b690 <col:39> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55a77477b658 <col:39> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55a774769eb0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55a77476db88 <line:290:5, line:293:5> line:290:22 msec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x55a77477c9e0 <col:40, line:293:5>
|   |-DeclStmt 0x55a77477b890 <line:291:9, col:48>
|   | `-VarDecl 0x55a77477b770 <col:9, col:33> col:18 used x 'uint32_t':'unsigned int' cinit
|   |   `-BinaryOperator 0x55a77477b870 <col:22, col:33> 'unsigned int' '%'
|   |     |-CXXMemberCallExpr 0x55a77477b818 <col:22, col:29> 'uint32_t':'unsigned int'
|   |     | `-MemberExpr 0x55a77477b7e8 <col:22> '<bound member function type>' ->subsec 0x55a77476cb28
|   |     |   `-CXXThisExpr 0x55a77477b7d8 <col:22> 'const Timestamp *' implicit this
|   |     `-ImplicitCastExpr 0x55a77477b858 <col:33> 'unsigned int' <IntegralCast>
|   |       `-DeclRefExpr 0x55a77477b838 <col:33> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55a774769f80 'subsec_per_msec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x55a77477c9d0 <line:292:9, col:70>
|     `-ExprWithCleanups 0x55a77477c9b8 <col:16, col:70> 'Timestamp'
|       `-CXXConstructExpr 0x55a77477c988 <col:16, col:70> 'Timestamp' 'void (const Timestamp &) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55a77477c970 <col:16, col:70> 'const Timestamp' lvalue
|           `-ParenExpr 0x55a77477c950 <col:16, col:70> 'const Timestamp'
|             `-ConditionalOperator 0x55a77477c920 <col:17, col:66> 'const Timestamp'
|               |-ImplicitCastExpr 0x55a77477c6b8 <col:17> 'bool' <IntegralToBoolean>
|               | `-ImplicitCastExpr 0x55a77477c6a0 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|               |   `-DeclRefExpr 0x55a77477b8a8 <col:17> 'uint32_t':'unsigned int' lvalue Var 0x55a77477b770 'x' 'uint32_t':'unsigned int'
|               |-CXXConstructExpr 0x55a77477c8c0 <col:21, col:61> 'const Timestamp' 'void (const Timestamp &) noexcept' elidable
|               | `-MaterializeTemporaryExpr 0x55a77477c8a8 <col:21, col:61> 'const Timestamp' lvalue
|               |   `-CXXConstructExpr 0x55a77477c878 <col:21, col:61> 'const Timestamp' 'void (Timestamp &&) noexcept' elidable
|               |     `-MaterializeTemporaryExpr 0x55a77477c6d0 <col:21, col:61> 'Timestamp' xvalue
|               |       `-CXXOperatorCallExpr 0x55a77477c640 <col:21, col:61> 'Timestamp'
|               |         |-ImplicitCastExpr 0x55a77477c628 <col:27> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|               |         | `-DeclRefExpr 0x55a77477c5d8 <col:27> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55a774769458 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|               |         |-CXXConstructExpr 0x55a77477c578 <col:21, col:22> 'Timestamp' 'void (const Timestamp &) noexcept'
|               |         | `-UnaryOperator 0x55a77477b8d8 <col:21, col:22> 'const Timestamp' lvalue prefix '*' cannot overflow
|               |         |   `-CXXThisExpr 0x55a77477b8c8 <col:22> 'const Timestamp *' this
|               |         `-MaterializeTemporaryExpr 0x55a77477c5c0 <col:29, col:61> 'const Timestamp' lvalue
|               |           `-ImplicitCastExpr 0x55a77477c5a8 <col:29, col:61> 'const Timestamp' <NoOp>
|               |             `-CXXTemporaryObjectExpr 0x55a77477bd98 <col:29, col:61> 'Timestamp' 'void (int, uint32_t)'
|               |               |-IntegerLiteral 0x55a77477b900 <col:39> 'int' 0
|               |               `-BinaryOperator 0x55a77477b990 <col:42, col:60> 'unsigned int' '-'
|               |                 |-ImplicitCastExpr 0x55a77477b960 <col:42> 'unsigned int' <IntegralCast>
|               |                 | `-DeclRefExpr 0x55a77477b920 <col:42> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55a774769f80 'subsec_per_msec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|               |                 `-ImplicitCastExpr 0x55a77477b978 <col:60> 'uint32_t':'unsigned int' <LValueToRValue>
|               |                   `-DeclRefExpr 0x55a77477b940 <col:60> 'uint32_t':'unsigned int' lvalue Var 0x55a77477b770 'x' 'uint32_t':'unsigned int'
|               `-CXXConstructExpr 0x55a77477c8f0 <col:65, col:66> 'const Timestamp' 'void (const Timestamp &) noexcept'
|                 `-UnaryOperator 0x55a77477c688 <col:65, col:66> 'const Timestamp' lvalue prefix '*' cannot overflow
|                   `-CXXThisExpr 0x55a77477c678 <col:66> 'const Timestamp *' this
|-CXXMethodDecl 0x55a77476dc48 <line:295:5, line:302:5> line:295:22 usec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x55a77477cf38 <col:40, line:302:5>
|   |-DeclStmt 0x55a77477cb30 <line:297:9, col:48>
|   | `-VarDecl 0x55a77477ca10 <col:9, col:33> col:18 used x 'uint32_t':'unsigned int' cinit
|   |   `-BinaryOperator 0x55a77477cb10 <col:22, col:33> 'unsigned int' '%'
|   |     |-CXXMemberCallExpr 0x55a77477cab8 <col:22, col:29> 'uint32_t':'unsigned int'
|   |     | `-MemberExpr 0x55a77477ca88 <col:22> '<bound member function type>' ->subsec 0x55a77476cb28
|   |     |   `-CXXThisExpr 0x55a77477ca78 <col:22> 'const Timestamp *' implicit this
|   |     `-ImplicitCastExpr 0x55a77477caf8 <col:33> 'unsigned int' <IntegralCast>
|   |       `-DeclRefExpr 0x55a77477cad8 <col:33> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55a77476a050 'subsec_per_usec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x55a77477cf28 <line:298:9, col:70>
|     `-ExprWithCleanups 0x55a77477cf10 <col:16, col:70> 'Timestamp'
|       `-CXXConstructExpr 0x55a77477cee0 <col:16, col:70> 'Timestamp' 'void (const Timestamp &) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55a77477cec8 <col:16, col:70> 'const Timestamp' lvalue
|           `-ParenExpr 0x55a77477cea8 <col:16, col:70> 'const Timestamp'
|             `-ConditionalOperator 0x55a77477ce78 <col:17, col:66> 'const Timestamp'
|               |-ImplicitCastExpr 0x55a77477cda0 <col:17> 'bool' <IntegralToBoolean>
|               | `-ImplicitCastExpr 0x55a77477cd88 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|               |   `-DeclRefExpr 0x55a77477cb48 <col:17> 'uint32_t':'unsigned int' lvalue Var 0x55a77477ca10 'x' 'uint32_t':'unsigned int'
|               |-CXXConstructExpr 0x55a77477ce18 <col:21, col:61> 'const Timestamp' 'void (const Timestamp &) noexcept' elidable
|               | `-MaterializeTemporaryExpr 0x55a77477ce00 <col:21, col:61> 'const Timestamp' lvalue
|               |   `-CXXConstructExpr 0x55a77477cdd0 <col:21, col:61> 'const Timestamp' 'void (Timestamp &&) noexcept' elidable
|               |     `-MaterializeTemporaryExpr 0x55a77477cdb8 <col:21, col:61> 'Timestamp' xvalue
|               |       `-CXXOperatorCallExpr 0x55a77477cd28 <col:21, col:61> 'Timestamp'
|               |         |-ImplicitCastExpr 0x55a77477cd10 <col:27> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|               |         | `-DeclRefExpr 0x55a77477ccf0 <col:27> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55a774769458 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|               |         |-CXXConstructExpr 0x55a77477cc90 <col:21, col:22> 'Timestamp' 'void (const Timestamp &) noexcept'
|               |         | `-UnaryOperator 0x55a77477cb78 <col:21, col:22> 'const Timestamp' lvalue prefix '*' cannot overflow
|               |         |   `-CXXThisExpr 0x55a77477cb68 <col:22> 'const Timestamp *' this
|               |         `-MaterializeTemporaryExpr 0x55a77477ccd8 <col:29, col:61> 'const Timestamp' lvalue
|               |           `-ImplicitCastExpr 0x55a77477ccc0 <col:29, col:61> 'const Timestamp' <NoOp>
|               |             `-CXXTemporaryObjectExpr 0x55a77477cc50 <col:29, col:61> 'Timestamp' 'void (int, uint32_t)'
|               |               |-IntegerLiteral 0x55a77477cba0 <col:39> 'int' 0
|               |               `-BinaryOperator 0x55a77477cc30 <col:42, col:60> 'unsigned int' '-'
|               |                 |-ImplicitCastExpr 0x55a77477cc00 <col:42> 'unsigned int' <IntegralCast>
|               |                 | `-DeclRefExpr 0x55a77477cbc0 <col:42> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55a77476a050 'subsec_per_usec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|               |                 `-ImplicitCastExpr 0x55a77477cc18 <col:60> 'uint32_t':'unsigned int' <LValueToRValue>
|               |                   `-DeclRefExpr 0x55a77477cbe0 <col:60> 'uint32_t':'unsigned int' lvalue Var 0x55a77477ca10 'x' 'uint32_t':'unsigned int'
|               `-CXXConstructExpr 0x55a77477ce48 <col:65, col:66> 'const Timestamp' 'void (const Timestamp &) noexcept'
|                 `-UnaryOperator 0x55a77477cd70 <col:65, col:66> 'const Timestamp' lvalue prefix '*' cannot overflow
|                   `-CXXThisExpr 0x55a77477cd60 <col:66> 'const Timestamp *' this
|-CXXMethodDecl 0x55a77476dd08 <line:304:5, line:306:5> line:304:22 nsec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x55a77477cfc0 <col:40, line:306:5>
|   `-ReturnStmt 0x55a77477cfb0 <line:305:9, col:17>
|     `-CXXConstructExpr 0x55a77477cf80 <col:16, col:17> 'Timestamp' 'void (const Timestamp &) noexcept'
|       `-UnaryOperator 0x55a77477cf68 <col:16, col:17> 'const Timestamp' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55a77477cf58 <col:17> 'const Timestamp *' this
|-CXXMethodDecl 0x55a77476dea8 <line:310:5, col:65> col:29 make_jiffies 'Timestamp (click_jiffies_t)' static inline
| `-ParmVarDecl 0x55a77476ddb8 <col:42, col:58> col:58 jiffies 'click_jiffies_t':'unsigned int'
|-CXXMethodDecl 0x55a77476e078 <line:312:5, col:76> col:29 make_jiffies 'Timestamp (click_jiffies_difference_t)' static inline
| `-ParmVarDecl 0x55a77476df80 <col:42, col:69> col:69 jiffies 'click_jiffies_difference_t':'int'
|-CXXMethodDecl 0x55a77476e168 <line:314:5, col:38> col:28 jiffies 'click_jiffies_t () const' inline
|-CXXMethodDecl 0x55a77476e2d8 <line:318:5, line:320:5> line:318:29 make_sec 'Timestamp (Timestamp::seconds_type)' static inline
| |-ParmVarDecl 0x55a77476e218 <col:38, col:51> col:51 used sec 'Timestamp::seconds_type':'int'
| `-CompoundStmt 0x55a77477d108 <col:56, line:320:5>
|   `-ReturnStmt 0x55a77477d0f8 <line:319:9, col:32>
|     `-ExprWithCleanups 0x55a77477d0e0 <col:16, col:32> 'Timestamp'
|       `-CXXConstructExpr 0x55a77477d0b0 <col:16, col:32> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55a77477d098 <col:16, col:32> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55a77477d058 <col:16, col:32> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x55a77477d028 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x55a77477cfe8 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55a77476e218 'sec' 'Timestamp::seconds_type':'int'
|             `-ImplicitCastExpr 0x55a77477d040 <col:31> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x55a77477d008 <col:31> 'int' 0
|-CXXMethodDecl 0x55a77476e518 <line:324:5, line:326:5> line:324:29 make_msec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x55a77476e390 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55a77476e408 <col:57, col:66> col:66 used msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55a77477d2d8 <col:72, line:326:5>
|   `-ReturnStmt 0x55a77477d2c8 <line:325:9, col:51>
|     `-ExprWithCleanups 0x55a77477d2b0 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x55a77477d280 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55a77477d268 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55a77477d228 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x55a77477d210 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x55a77477d130 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55a77476e390 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x55a77477d1d0 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x55a77477d1b8 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x55a77477d150 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x55a774772e00 'msec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x55a77477d1f8 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x55a77477d170 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x55a77476e408 'msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55a77476e6c8 <line:328:5, line:337:5> line:328:29 used make_msec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x55a77476e5d8 <col:39, col:50> col:50 used msec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x55a77477d9a0 <col:56, line:337:5>
|   |-DeclStmt 0x55a77477d5d8 <line:329:9, col:51>
|   | `-VarDecl 0x55a77477d300 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x55a77477d5c0 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x55a77477d590 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x55a77477d578 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x55a77477d560 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x55a77477d530 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x55a77477d518 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x55a77477d500 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x55a77477d3f0 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x55a77477d790 <line:331:9, col:55> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x55a77477d640 <col:9, col:14> 'int64_t':'long' lvalue .x 0x55a7747736a8
|   | | `-MemberExpr 0x55a77477d610 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x55a774774658
|   | |   `-DeclRefExpr 0x55a77477d5f0 <col:9> 'Timestamp' lvalue Var 0x55a77477d300 't' 'Timestamp'
|   | `-BinaryOperator 0x55a77477d770 <col:18, col:55> 'long' '*'
|   |   |-ImplicitCastExpr 0x55a77477d740 <col:18> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55a77477d670 <col:18> 'Timestamp::value_type':'long' lvalue ParmVar 0x55a77476e5d8 'msec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x55a77477d758 <col:25, col:55> 'long' <IntegralCast>
|   |     `-ParenExpr 0x55a77477d720 <col:25, col:55> 'int'
|   |       `-BinaryOperator 0x55a77477d700 <col:26, col:43> 'int' '/'
|   |         |-ImplicitCastExpr 0x55a77477d6d0 <col:26> 'int' <IntegralCast>
|   |         | `-DeclRefExpr 0x55a77477d690 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55a774769eb0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |         `-ImplicitCastExpr 0x55a77477d6e8 <col:43> 'int' <IntegralCast>
|   |           `-DeclRefExpr 0x55a77477d6b0 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55a774769e20 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x55a77477d988 <line:336:9, col:16>
|     `-CXXConstructExpr 0x55a77477d958 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x55a77477d940 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x55a77477d920 <col:16> 'Timestamp' lvalue Var 0x55a77477d300 't' 'Timestamp'
|-CXXMethodDecl 0x55a77476e890 <line:341:5, line:343:5> line:341:29 make_usec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x55a77476e780 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55a77476e7f8 <col:57, col:66> col:66 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55a77477db58 <col:72, line:343:5>
|   `-ReturnStmt 0x55a77477db48 <line:342:9, col:51>
|     `-ExprWithCleanups 0x55a77477db30 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x55a77477db00 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55a77477dae8 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55a77477daa8 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x55a77477da90 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x55a77477d9d8 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55a77476e780 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x55a77477da50 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x55a77477da38 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x55a77477d9f8 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x55a774772f48 'usec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x55a77477da78 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x55a77477da18 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x55a77476e7f8 'usec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55a77476e9e0 <line:345:5, line:354:5> line:345:29 used make_usec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x55a77476e950 <col:39, col:50> col:50 used usec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x55a77477dfa0 <col:56, line:354:5>
|   |-DeclStmt 0x55a77477dd48 <line:346:9, col:51>
|   | `-VarDecl 0x55a77477db80 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x55a77477dd30 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x55a77477dd00 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x55a77477dce8 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x55a77477dcd0 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x55a77477dca0 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x55a77477dc88 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x55a77477dc70 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x55a77477dc40 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x55a77477df00 <line:348:9, col:55> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x55a77477ddb0 <col:9, col:14> 'int64_t':'long' lvalue .x 0x55a7747736a8
|   | | `-MemberExpr 0x55a77477dd80 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x55a774774658
|   | |   `-DeclRefExpr 0x55a77477dd60 <col:9> 'Timestamp' lvalue Var 0x55a77477db80 't' 'Timestamp'
|   | `-BinaryOperator 0x55a77477dee0 <col:18, col:55> 'long' '*'
|   |   |-ImplicitCastExpr 0x55a77477deb0 <col:18> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55a77477dde0 <col:18> 'Timestamp::value_type':'long' lvalue ParmVar 0x55a77476e950 'usec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x55a77477dec8 <col:25, col:55> 'long' <IntegralCast>
|   |     `-ParenExpr 0x55a77477de90 <col:25, col:55> 'int'
|   |       `-BinaryOperator 0x55a77477de70 <col:26, col:43> 'int' '/'
|   |         |-ImplicitCastExpr 0x55a77477de40 <col:26> 'int' <IntegralCast>
|   |         | `-DeclRefExpr 0x55a77477de00 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55a774769eb0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |         `-ImplicitCastExpr 0x55a77477de58 <col:43> 'int' <IntegralCast>
|   |           `-DeclRefExpr 0x55a77477de20 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55a774769d00 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x55a77477df88 <line:353:9, col:16>
|     `-CXXConstructExpr 0x55a77477df58 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x55a77477df40 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x55a77477df20 <col:16> 'Timestamp' lvalue Var 0x55a77477db80 't' 'Timestamp'
|-CXXMethodDecl 0x55a77476eba8 <line:358:5, line:360:5> line:358:29 make_nsec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x55a77476ea98 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55a77476eb10 <col:57, col:66> col:66 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55a77477e158 <col:72, line:360:5>
|   `-ReturnStmt 0x55a77477e148 <line:359:9, col:51>
|     `-ExprWithCleanups 0x55a77477e130 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x55a77477e100 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55a77477e0e8 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55a77477e0a8 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x55a77477e090 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x55a77477dfd8 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55a77476ea98 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x55a77477e050 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x55a77477e038 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x55a77477dff8 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x55a774773090 'nsec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x55a77477e078 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x55a77477e018 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x55a77476eb10 'nsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55a77476ecf8 <line:362:5, line:371:5> line:362:29 make_nsec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x55a77476ec68 <col:39, col:50> col:50 used nsec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x55a77478aac8 <col:56, line:371:5>
|   |-DeclStmt 0x55a77477e348 <line:363:9, col:51>
|   | `-VarDecl 0x55a77477e180 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x55a77477e330 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x55a77477e300 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x55a77477e2e8 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x55a77477e2d0 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x55a77477e2a0 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x55a77477e288 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x55a77477e270 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x55a77477e240 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x55a77478aa28 <line:365:9, col:63> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x55a77477e3b0 <col:9, col:14> 'int64_t':'long' lvalue .x 0x55a7747736a8
|   | | `-MemberExpr 0x55a77477e380 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x55a774774658
|   | |   `-DeclRefExpr 0x55a77477e360 <col:9> 'Timestamp' lvalue Var 0x55a77477e180 't' 'Timestamp'
|   | `-CallExpr 0x55a77478a9c8 <col:18, col:63> 'Timestamp::value_type':'long'
|   |   |-ImplicitCastExpr 0x55a77478a9b0 <col:18> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x55a77477e3e0 <col:18> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x55a774774988 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|   |   |-ImplicitCastExpr 0x55a77478a9f8 <col:28> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55a77477e400 <col:28> 'Timestamp::value_type':'long' lvalue ParmVar 0x55a77476ec68 'nsec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x55a77478aa10 <col:34, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|   |     `-BinaryOperator 0x55a77478a990 <col:34, col:49> 'int' '/'
|   |       |-ImplicitCastExpr 0x55a77478a960 <col:34> 'int' <IntegralCast>
|   |       | `-DeclRefExpr 0x55a77477e420 <col:34> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55a774769b50 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |       `-ImplicitCastExpr 0x55a77478a978 <col:49> 'int' <IntegralCast>
|   |         `-DeclRefExpr 0x55a77477e440 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55a774769eb0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x55a77478aab0 <line:370:9, col:16>
|     `-CXXConstructExpr 0x55a77478aa80 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x55a77478aa68 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x55a77478aa48 <col:16> 'Timestamp' lvalue Var 0x55a77477e180 't' 'Timestamp'
|-CXXMethodDecl 0x55a77476ede8 <line:375:5, line:377:5> line:375:29 epsilon 'Timestamp ()' static inline
| `-CompoundStmt 0x55a77478ac08 <col:39, line:377:5>
|   `-ReturnStmt 0x55a77478abf8 <line:376:9, col:30>
|     `-ExprWithCleanups 0x55a77478abe0 <col:16, col:30> 'Timestamp'
|       `-CXXConstructExpr 0x55a77478abb0 <col:16, col:30> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55a77478ab98 <col:16, col:30> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55a77478ab58 <col:16, col:30> 'Timestamp' 'void (int, uint32_t)'
|             |-IntegerLiteral 0x55a77478ab00 <col:26> 'int' 0
|             `-ImplicitCastExpr 0x55a77478ab40 <col:29> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x55a77478ab20 <col:29> 'int' 1
|-CXXMethodDecl 0x55a77476eea8 <line:380:5, line:382:5> line:380:17 clear 'void ()' inline
| `-CompoundStmt 0x55a77478ace8 <col:25, line:382:5>
|   `-CXXMemberCallExpr 0x55a77478aca0 <line:381:9, col:20> 'void'
|     |-MemberExpr 0x55a77478ac30 <col:9> '<bound member function type>' ->assign 0x55a77476f0a8
|     | `-CXXThisExpr 0x55a77478ac20 <col:9> 'Timestamp *' implicit this
|     |-IntegerLiteral 0x55a77478ac60 <col:16> 'int' 0
|     `-ImplicitCastExpr 0x55a77478acd0 <col:19> 'uint32_t':'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x55a77478ac80 <col:19> 'int' 0
|-CXXMethodDecl 0x55a77476f0a8 <line:388:5, line:395:5> line:388:17 used assign 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55a77476ef58 <col:24, col:37> col:37 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55a77476efd0 <col:42, col:60> col:51 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55a774776280 <col:60> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55a774776260 <col:60> 'int' 0
| `-CompoundStmt 0x55a77478aee0 <col:63, line:395:5>
|   `-BinaryOperator 0x55a77478aec0 <line:390:9, col:49> 'int64_t':'long' lvalue '='
|     |-MemberExpr 0x55a77478ad40 <col:9, col:12> 'int64_t':'long' lvalue .x 0x55a7747736a8
|     | `-MemberExpr 0x55a77478ad10 <col:9> 'Timestamp::rep_t' lvalue ->_t 0x55a774774658
|     |   `-CXXThisExpr 0x55a77478ad00 <col:9> 'Timestamp *' implicit this
|     `-BinaryOperator 0x55a77478aea0 <col:16, col:49> 'long' '+'
|       |-BinaryOperator 0x55a77478ae30 <col:16, col:32> 'long' '*'
|       | |-CStyleCastExpr 0x55a77478add0 <col:16, col:26> 'int64_t':'long' <NoOp>
|       | | `-ImplicitCastExpr 0x55a77478adb8 <col:26> 'int64_t':'long' <IntegralCast> part_of_explicit_cast
|       | |   `-ImplicitCastExpr 0x55a77478ada0 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue> part_of_explicit_cast
|       | |     `-DeclRefExpr 0x55a77478ad70 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55a77476ef58 'sec' 'Timestamp::seconds_type':'int'
|       | `-ImplicitCastExpr 0x55a77478ae18 <col:32> 'long' <IntegralCast>
|       |   `-DeclRefExpr 0x55a77478adf8 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55a774769eb0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|       `-ImplicitCastExpr 0x55a77478ae88 <col:49> 'long' <IntegralCast>
|         `-ImplicitCastExpr 0x55a77478ae70 <col:49> 'uint32_t':'unsigned int' <LValueToRValue>
|           `-DeclRefExpr 0x55a77478ae50 <col:49> 'uint32_t':'unsigned int' lvalue ParmVar 0x55a77476efd0 'subsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55a77476f278 <line:397:5, line:399:5> line:397:17 used assign_usec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55a77476f168 <col:29, col:42> col:42 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55a77476f1e0 <col:47, col:56> col:56 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55a77478b038 <col:62, line:399:5>
|   `-CXXMemberCallExpr 0x55a77478aff0 <line:398:9, col:41> 'void'
|     |-MemberExpr 0x55a77478af08 <col:9> '<bound member function type>' ->assign 0x55a77476f0a8
|     | `-CXXThisExpr 0x55a77478aef8 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55a77478b020 <col:16> 'Timestamp::seconds_type':'int' <LValueToRValue>
|     | `-DeclRefExpr 0x55a77478af38 <col:16> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55a77476f168 'sec' 'Timestamp::seconds_type':'int'
|     `-CallExpr 0x55a77478afb0 <col:21, col:40> 'uint32_t':'unsigned int'
|       |-ImplicitCastExpr 0x55a77478af98 <col:21> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55a77478af58 <col:21> 'uint32_t (uint32_t)' lvalue CXXMethod 0x55a774772f48 'usec_to_subsec' 'uint32_t (uint32_t)'
|       `-ImplicitCastExpr 0x55a77478afd8 <col:36> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55a77478af78 <col:36> 'uint32_t':'unsigned int' lvalue ParmVar 0x55a77476f1e0 'usec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55a77476f448 <line:401:5, line:403:5> line:401:17 used assign_nsec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55a77476f338 <col:29, col:42> col:42 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55a77476f3b0 <col:47, col:56> col:56 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55a77478b190 <col:62, line:403:5>
|   `-CXXMemberCallExpr 0x55a77478b148 <line:402:9, col:41> 'void'
|     |-MemberExpr 0x55a77478b060 <col:9> '<bound member function type>' ->assign 0x55a77476f0a8
|     | `-CXXThisExpr 0x55a77478b050 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55a77478b178 <col:16> 'Timestamp::seconds_type':'int' <LValueToRValue>
|     | `-DeclRefExpr 0x55a77478b090 <col:16> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55a77476f338 'sec' 'Timestamp::seconds_type':'int'
|     `-CallExpr 0x55a77478b108 <col:21, col:40> 'uint32_t':'unsigned int'
|       |-ImplicitCastExpr 0x55a77478b0f0 <col:21> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55a77478b0b0 <col:21> 'uint32_t (uint32_t)' lvalue CXXMethod 0x55a774773090 'nsec_to_subsec' 'uint32_t (uint32_t)'
|       `-ImplicitCastExpr 0x55a77478b130 <col:36> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55a77478b0d0 <col:36> 'uint32_t':'unsigned int' lvalue ParmVar 0x55a77476f3b0 'nsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55a77476f618 <line:408:5, col:86> col:17 set 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55a77476f508 <col:21, col:34> col:34 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55a77476f580 <col:39, col:57> col:48 subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55a7747762b8 <col:57> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55a774776298 <col:57> 'int' 0
| `-DeprecatedAttr 0x55a77476f6c8 <col:75> "" ""
|-CXXMethodDecl 0x55a77476f858 <line:411:5, col:85> col:17 set_usec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55a77476f748 <col:26, col:39> col:39 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55a77476f7c0 <col:44, col:53> col:53 usec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55a77476f908 <col:74> "" ""
|-CXXMethodDecl 0x55a77476fa98 <line:414:5, col:85> col:17 set_nsec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55a77476f988 <col:26, col:39> col:39 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55a77476fa00 <col:44, col:53> col:53 nsec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55a77476fb48 <col:74> "" ""
|-CXXMethodDecl 0x55a77476fbd8 <line:417:5, col:53> col:17 set_now 'void ()' inline
| `-DeprecatedAttr 0x55a77476fc78 <col:42> "" ""
|-CXXMethodDecl 0x55a7747724b0 <line:420:5, col:53> col:9 set_timeval_ioctl 'int (int, int)'
| |-ParmVarDecl 0x55a774772390 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x55a774772410 <col:35, col:39> col:39 ioctl_selector 'int'
|-CXXMethodDecl 0x55a774772580 <line:432:5, col:33> col:29 now 'Timestamp ()' static inline
|-CXXMethodDecl 0x55a774772640 <line:438:5, col:56> col:45 used assign_now 'void ()'
| |-NoInlineAttr 0x55a7747726e0 <col:20>
| `-OptimizeNoneAttr 0x55a774772738 <col:30>
|-CXXMethodDecl 0x55a774772780 <line:446:5, col:36> col:29 used recent 'Timestamp ()' static inline
|-CXXMethodDecl 0x55a774772840 <line:452:5, col:31> col:17 used assign_recent 'void ()' inline
|-CXXMethodDecl 0x55a774772900 <line:466:5, col:40> col:29 now_steady 'Timestamp ()' static inline
|-CXXMethodDecl 0x55a7747729c0 <line:472:5, col:35> col:17 used assign_now_steady 'void ()' inline
|-CXXMethodDecl 0x55a774772a80 <line:481:5, col:43> col:29 used recent_steady 'Timestamp ()' static inline
|-CXXMethodDecl 0x55a774772b40 <line:487:5, col:38> col:17 used assign_recent_steady 'void ()' inline
|-CXXMethodDecl 0x55a774772c00 <line:496:5, col:22> col:12 unparse 'String () const'
|-CXXMethodDecl 0x55a774772cc0 <line:501:5, col:31> col:12 unparse_interval 'String () const'
|-CXXMethodDecl 0x55a774772e00 <line:510:5, line:512:5> line:510:28 used msec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55a774772d70 <col:43, col:52> col:52 used msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55a77478b2d8 <col:58, line:512:5>
|   `-ReturnStmt 0x55a77478b2c8 <line:511:9, col:53>
|     `-BinaryOperator 0x55a77478b2a8 <col:16, col:53> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x55a77478b278 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55a77478b1a8 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55a774772d70 'msec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55a77478b290 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55a77478b258 <col:23, col:53> 'int'
|           `-BinaryOperator 0x55a77478b238 <col:24, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x55a77478b208 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55a77478b1c8 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55a774769eb0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55a77478b220 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55a77478b1e8 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55a774769e20 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55a774772f48 <line:514:5, line:516:5> line:514:28 used usec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55a774772eb8 <col:43, col:52> col:52 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55a77478b420 <col:58, line:516:5>
|   `-ReturnStmt 0x55a77478b410 <line:515:9, col:53>
|     `-BinaryOperator 0x55a77478b3f0 <col:16, col:53> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x55a77478b3c0 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55a77478b2f0 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55a774772eb8 'usec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55a77478b3d8 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55a77478b3a0 <col:23, col:53> 'int'
|           `-BinaryOperator 0x55a77478b380 <col:24, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x55a77478b350 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55a77478b310 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55a774769eb0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55a77478b368 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55a77478b330 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55a774769d00 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55a774773090 <line:518:5, line:520:5> line:518:28 used nsec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55a774773000 <col:43, col:52> col:52 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55a77478b568 <col:58, line:520:5>
|   `-ReturnStmt 0x55a77478b558 <line:519:9, col:53>
|     `-BinaryOperator 0x55a77478b538 <col:16, col:53> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x55a77478b508 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55a77478b438 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55a774773000 'nsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55a77478b520 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55a77478b4e8 <col:23, col:53> 'int'
|           `-BinaryOperator 0x55a77478b4c8 <col:24, col:39> 'int' '/'
|             |-ImplicitCastExpr 0x55a77478b498 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55a77478b458 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55a774769b50 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55a77478b4b0 <col:39> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55a77478b478 <col:39> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55a774769eb0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55a7747731d8 <line:522:5, line:524:5> line:522:28 used subsec_to_msec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55a774773148 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55a77478b6b0 <col:60, line:524:5>
|   `-ReturnStmt 0x55a77478b6a0 <line:523:9, col:55>
|     `-BinaryOperator 0x55a77478b680 <col:16, col:55> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x55a77478b650 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55a77478b580 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55a774773148 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55a77478b668 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55a77478b630 <col:25, col:55> 'int'
|           `-BinaryOperator 0x55a77478b610 <col:26, col:43> 'int' '/'
|             |-ImplicitCastExpr 0x55a77478b5e0 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55a77478b5a0 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55a774769eb0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55a77478b5f8 <col:43> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55a77478b5c0 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55a774769e20 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55a774773320 <line:526:5, line:528:5> line:526:28 used subsec_to_usec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55a774773290 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55a77478b7f8 <col:60, line:528:5>
|   `-ReturnStmt 0x55a77478b7e8 <line:527:9, col:55>
|     `-BinaryOperator 0x55a77478b7c8 <col:16, col:55> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x55a77478b798 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55a77478b6c8 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55a774773290 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55a77478b7b0 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55a77478b778 <col:25, col:55> 'int'
|           `-BinaryOperator 0x55a77478b758 <col:26, col:43> 'int' '/'
|             |-ImplicitCastExpr 0x55a77478b728 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55a77478b6e8 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55a774769eb0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55a77478b740 <col:43> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55a77478b708 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55a774769d00 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55a774773468 <line:530:5, line:532:5> line:530:28 used subsec_to_nsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55a7747733d8 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55a77478b940 <col:60, line:532:5>
|   `-ReturnStmt 0x55a77478b930 <line:531:9, col:55>
|     `-BinaryOperator 0x55a77478b910 <col:16, col:55> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x55a77478b8e0 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55a77478b810 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55a7747733d8 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55a77478b8f8 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55a77478b8c0 <col:25, col:55> 'int'
|           `-BinaryOperator 0x55a77478b8a0 <col:26, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x55a77478b870 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55a77478b830 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55a774769b50 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55a77478b888 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55a77478b850 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55a774769eb0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXRecordDecl 0x55a774773510 prev 0x55a77476a350 <line:539:5, line:566:5> line:539:11 referenced union rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55a774773608 <col:5, col:11> col:11 implicit union rep_t
| |-FieldDecl 0x55a7747736a8 <line:541:9, col:17> col:17 referenced x 'int64_t':'long'
| |-CXXConstructorDecl 0x55a77477a470 <line:539:11> col:11 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55a77477a858 <col:11>
| |-CXXConstructorDecl 0x55a77477a550 <col:11> col:11 implicit used constexpr rep_t 'void (const Timestamp::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55a77477a638 <col:11> col:11 'const Timestamp::rep_t &'
| | `-CompoundStmt 0x55a77477afa0 <col:11>
| |-CXXConstructorDecl 0x55a77477a6d8 <col:11> col:11 implicit used constexpr rep_t 'void (Timestamp::rep_t &&) noexcept' inline default trivial
| | |-ParmVarDecl 0x55a77477a7e8 <col:11> col:11 'Timestamp::rep_t &&'
| | `-CompoundStmt 0x55a77477c7f8 <col:11>
| |-CXXDestructorDecl 0x55a77477bb08 <col:11> col:11 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x55a7744826b8 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(const Timestamp::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55a7744827c8 <col:11> col:11 'const Timestamp::rep_t &'
| | `-CompoundStmt 0x55a774483090 <col:11>
| |   `-ReturnStmt 0x55a774483080 <col:11>
| |     `-UnaryOperator 0x55a774483068 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x55a774483058 <col:11> 'Timestamp::rep_t *' this
| `-CXXMethodDecl 0x55a774482838 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(Timestamp::rep_t &&) noexcept' inline default trivial
|   |-ParmVarDecl 0x55a774482948 <col:11> col:11 'Timestamp::rep_t &&'
|   `-CompoundStmt 0x55a77484a600 <col:11>
|     `-ReturnStmt 0x55a77484a5f0 <col:11>
|       `-UnaryOperator 0x55a77484a5d8 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55a77484a5c8 <col:11> 'Timestamp::rep_t *' this
|-EnumDecl 0x55a774773710 <line:571:5, line:577:5> line:571:10 referenced warp_class_type
| |-EnumConstantDecl 0x55a774773810 <line:572:9, col:21> col:9 warp_none 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x55a774773a10 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a7747737f0 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x55a7747737d0 <col:21> 'int' 0
| |-EnumConstantDecl 0x55a7747738a0 <line:573:9, col:23> col:9 warp_linear 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x55a774773a28 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a774773880 <col:23> 'int' Int: 1
| |     `-IntegerLiteral 0x55a774773860 <col:23> 'int' 1
| |-EnumConstantDecl 0x55a774773930 <line:574:9, col:23> col:9 referenced warp_nowait 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x55a774773a40 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a774773910 <col:23> 'int' Int: 2
| |     `-IntegerLiteral 0x55a7747738f0 <col:23> 'int' 2
| `-EnumConstantDecl 0x55a7747739c0 <line:576:9, col:27> col:9 warp_simulation 'Timestamp::warp_class_type'
|   `-ImplicitCastExpr 0x55a774773a58 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55a7747739a0 <col:27> 'int' Int: 3
|       `-IntegerLiteral 0x55a774773980 <col:27> 'int' 3
|-CXXMethodDecl 0x55a774773a98 <line:581:5, col:34> col:23 warp_class 'int ()' static inline
|-CXXMethodDecl 0x55a774773b60 <line:588:5, col:37> col:26 warp_speed 'double ()' static inline
|-CXXMethodDecl 0x55a774773d68 <line:621:5, col:65> col:17 warp_set_class 'void (Timestamp::warp_class_type, double)' static
| |-ParmVarDecl 0x55a774773c10 <col:32, col:48> col:48 w 'Timestamp::warp_class_type'
| `-ParmVarDecl 0x55a774773c90 <col:51, col:62> col:58 s 'double' cinit
|   `-FloatingLiteral 0x55a7747762d0 <col:62> 'double' 1.000000e+00
|-CXXMethodDecl 0x55a774773f78 <line:628:5, col:82> col:17 warp_set_now 'void (const Timestamp &, const Timestamp &)' static
| |-ParmVarDecl 0x55a774773e28 <col:30, col:47> col:47 t_system 'const Timestamp &'
| `-ParmVarDecl 0x55a774773ea0 <col:57, col:74> col:74 t_steady 'const Timestamp &'
|-CXXMethodDecl 0x55a774774048 <line:632:5, col:40> col:22 warp_real_delay 'Timestamp () const' inline
|-CXXMethodDecl 0x55a774774108 <line:635:5, col:37> col:24 used warp_jumping 'bool ()' static inline
|-CXXMethodDecl 0x55a774774278 <line:640:5, col:57> col:17 warp_jump_steady 'void (const Timestamp &)' static
| `-ParmVarDecl 0x55a7747741b8 <col:34, col:51> col:51 expiry 'const Timestamp &'
|-CXXMethodDecl 0x55a774774340 <line:647:5, col:42> col:29 now_unwarped 'Timestamp ()' static inline
|-CXXMethodDecl 0x55a774774400 <line:653:5, col:37> col:17 used assign_now_unwarped 'void ()' inline
|-CXXMethodDecl 0x55a7747744c0 <line:659:5, col:49> col:29 now_steady_unwarped 'Timestamp ()' static inline
|-CXXMethodDecl 0x55a774774580 <line:666:5, col:44> col:17 used assign_now_steady_unwarped 'void ()' inline
|-AccessSpecDecl 0x55a774774620 <line:670:3, col:10> col:3 private
|-FieldDecl 0x55a774774658 <line:672:5, col:11> col:11 referenced _t 'Timestamp::rep_t'
|-CXXMethodDecl 0x55a7747746c8 <line:674:5, line:684:5> line:674:17 used add_fix 'void ()' inline
| `-CompoundStmt 0x55a77478b958 <col:27, line:684:5>
|-CXXMethodDecl 0x55a774774788 <line:686:5, line:696:5> line:686:17 used sub_fix 'void ()' inline
| `-CompoundStmt 0x55a77478b968 <col:27, line:696:5>
|-CXXMethodDecl 0x55a774774988 <line:698:5, line:700:5> line:698:30 used value_div 'Timestamp::value_type (Timestamp::value_type, uint32_t)' static inline
| |-ParmVarDecl 0x55a774774838 <col:40, col:51> col:51 used a 'Timestamp::value_type':'long'
| |-ParmVarDecl 0x55a7747748b0 <col:54, col:63> col:63 used b 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55a77478baf0 <col:66, line:700:5>
|   `-ReturnStmt 0x55a77478bae0 <line:699:9, col:31>
|     `-CallExpr 0x55a77478ba80 <col:16, col:31> 'int64_t':'long'
|       |-ImplicitCastExpr 0x55a77478ba68 <col:16> 'int64_t (*)(int64_t, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55a77478ba18 <col:16> 'int64_t (int64_t, uint32_t)' lvalue Function 0x55a7745f6d38 'int_divide' 'int64_t (int64_t, uint32_t)'
|       |-ImplicitCastExpr 0x55a77478bab0 <col:27> 'Timestamp::value_type':'long' <LValueToRValue>
|       | `-DeclRefExpr 0x55a77478b9d8 <col:27> 'Timestamp::value_type':'long' lvalue ParmVar 0x55a774774838 'a' 'Timestamp::value_type':'long'
|       `-ImplicitCastExpr 0x55a77478bac8 <col:30> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55a77478b9f8 <col:30> 'uint32_t':'unsigned int' lvalue ParmVar 0x55a7747748b0 'b' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55a774774cf8 <line:702:5, line:707:5> line:702:24 value_div_mod 'void (int32_t &, int32_t &, Timestamp::value_type, uint32_t)' static inline
| |-ParmVarDecl 0x55a774774a48 <col:38, col:47> col:47 used div 'int32_t &'
| |-ParmVarDecl 0x55a774774ac0 <col:52, col:61> col:61 used rem 'int32_t &'
| |-ParmVarDecl 0x55a774774b38 <line:703:38, col:49> col:49 used a 'Timestamp::value_type':'long'
| |-ParmVarDecl 0x55a774774bb0 <col:52, col:61> col:61 used b 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55a77478be40 <col:64, line:707:5>
|   |-DeclStmt 0x55a77478bb80 <line:704:9, col:24>
|   | `-VarDecl 0x55a77478bb18 <col:9, col:20> col:20 used quot 'Timestamp::value_type':'long'
|   |-BinaryOperator 0x55a77478bd90 <line:705:9, col:39> 'int32_t':'int' lvalue '='
|   | |-DeclRefExpr 0x55a77478bb98 <col:9> 'int32_t':'int' lvalue ParmVar 0x55a774774ac0 'rem' 'int32_t &'
|   | `-ImplicitCastExpr 0x55a77478bd78 <col:15, col:39> 'int32_t':'int' <IntegralCast>
|   |   `-CallExpr 0x55a77478bd10 <col:15, col:39> 'uint32_t':'unsigned int'
|   |     |-ImplicitCastExpr 0x55a77478bcf8 <col:15> 'uint32_t (*)(int64_t, uint32_t, int64_t &)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55a77478bc78 <col:15> 'uint32_t (int64_t, uint32_t, int64_t &)' lvalue Function 0x55a7745fc008 'int_remainder' 'uint32_t (int64_t, uint32_t, int64_t &)'
|   |     |-ImplicitCastExpr 0x55a77478bd48 <col:29> 'Timestamp::value_type':'long' <LValueToRValue>
|   |     | `-DeclRefExpr 0x55a77478bc18 <col:29> 'Timestamp::value_type':'long' lvalue ParmVar 0x55a774774b38 'a' 'Timestamp::value_type':'long'
|   |     |-ImplicitCastExpr 0x55a77478bd60 <col:32> 'uint32_t':'unsigned int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x55a77478bc38 <col:32> 'uint32_t':'unsigned int' lvalue ParmVar 0x55a774774bb0 'b' 'uint32_t':'unsigned int'
|   |     `-DeclRefExpr 0x55a77478bc58 <col:35> 'Timestamp::value_type':'long' lvalue Var 0x55a77478bb18 'quot' 'Timestamp::value_type':'long'
|   `-BinaryOperator 0x55a77478be20 <line:706:9, col:15> 'int32_t':'int' lvalue '='
|     |-DeclRefExpr 0x55a77478bdb0 <col:9> 'int32_t':'int' lvalue ParmVar 0x55a774774a48 'div' 'int32_t &'
|     `-ImplicitCastExpr 0x55a77478be08 <col:15> 'int32_t':'int' <IntegralCast>
|       `-ImplicitCastExpr 0x55a77478bdf0 <col:15> 'Timestamp::value_type':'long' <LValueToRValue>
|         `-DeclRefExpr 0x55a77478bdd0 <col:15> 'Timestamp::value_type':'long' lvalue Var 0x55a77478bb18 'quot' 'Timestamp::value_type':'long'
|-CXXMethodDecl 0x55a774774f98 <line:709:5, col:67> col:17 used assign_now 'void (bool, bool, bool)' inline
| |-ParmVarDecl 0x55a774774dc8 <col:28, col:33> col:33 recent 'bool'
| |-ParmVarDecl 0x55a774774e40 <col:41, col:46> col:46 steady 'bool'
| `-ParmVarDecl 0x55a774774eb8 <col:54, col:59> col:59 unwarped 'bool'
|-CXXMethodDecl 0x55a774775238 <line:712:5, col:98> col:24 warp_adjust 'void (bool, const Timestamp &, const Timestamp &)' static inline
| |-ParmVarDecl 0x55a774775060 <col:36, col:41> col:41 steady 'bool'
| |-ParmVarDecl 0x55a7747750d8 <col:49, col:66> col:66 t_raw 'const Timestamp &'
| `-ParmVarDecl 0x55a774775150 <col:73, col:90> col:90 t_warped 'const Timestamp &'
|-CXXMethodDecl 0x55a7747753c8 <line:713:5, col:42> col:22 warped 'Timestamp (bool) const' inline
| `-ParmVarDecl 0x55a774775300 <col:29, col:34> col:34 steady 'bool'
|-CXXMethodDecl 0x55a7747755c8 <line:714:5, col:41> col:10 used warp 'void (bool, bool)'
| |-ParmVarDecl 0x55a774775480 <col:15, col:20> col:20 steady 'bool'
| `-ParmVarDecl 0x55a7747754f8 <col:28, col:33> col:33 from_now 'bool'
|-FriendDecl 0x55a774775898 <line:717:5, col:73> col:24
| `-FunctionDecl 0x55a7747757d8 parent 0x55a774274278 <col:5, col:73> col:24 used operator== 'bool (const Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x55a774775688 <col:35, col:52> col:52 a 'const Timestamp &'
|   `-ParmVarDecl 0x55a774775700 <col:55, col:72> col:72 b 'const Timestamp &'
|-FriendDecl 0x55a774775ab8 <line:718:5, col:72> col:24
| `-FunctionDecl 0x55a7747759f8 parent 0x55a774274278 <col:5, col:72> col:24 used operator< 'bool (const Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x55a7747758e8 <col:34, col:51> col:51 a 'const Timestamp &'
|   `-ParmVarDecl 0x55a774775960 <col:54, col:71> col:71 b 'const Timestamp &'
|-FriendDecl 0x55a774775c80 <line:719:5, col:57> col:29
| `-FunctionDecl 0x55a774775bc8 parent 0x55a774274278 <col:5, col:57> col:29 operator- 'Timestamp (const Timestamp &)' inline
|   `-ParmVarDecl 0x55a774775b08 <col:39, col:56> col:56 b 'const Timestamp &'
|-FriendDecl 0x55a774775f08 <line:720:5, col:73> col:30
| `-FunctionDecl 0x55a774775e48 parent 0x55a774274278 <col:5, col:73> col:30 used operator+= 'Timestamp &(Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x55a774775cf8 <col:41, col:52> col:52 a 'Timestamp &'
|   `-ParmVarDecl 0x55a774775d70 <col:55, col:72> col:72 b 'const Timestamp &'
|-FriendDecl 0x55a774776128 <line:721:5, col:73> col:30
| `-FunctionDecl 0x55a774776068 parent 0x55a774274278 <col:5, col:73> col:30 used operator-= 'Timestamp &(Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x55a774775f58 <col:41, col:52> col:52 a 'Timestamp &'
|   `-ParmVarDecl 0x55a774775fd0 <col:55, col:72> col:72 b 'const Timestamp &'
|-CXXConstructorDecl 0x55a77477b9b0 <line:122:7> col:7 implicit used constexpr Timestamp 'void (const Timestamp &) noexcept' inline default trivial
| |-ParmVarDecl 0x55a77477ba98 <col:7> col:7 used 'const Timestamp &'
| |-CXXCtorInitializer Field 0x55a774774658 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55a77477c508 <col:7> 'Timestamp::rep_t' 'void (const Timestamp::rep_t &) noexcept'
| |   `-MemberExpr 0x55a77477c4c0 <col:7> 'const Timestamp::rep_t' lvalue ._t 0x55a774774658
| |     `-DeclRefExpr 0x55a77477c4a0 <col:7> 'const Timestamp' lvalue ParmVar 0x55a77477ba98 '' 'const Timestamp &'
| `-CompoundStmt 0x55a77477c568 <col:7>
|-CXXConstructorDecl 0x55a77477bc18 <col:7> col:7 implicit used constexpr Timestamp 'void (Timestamp &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55a77477bd28 <col:7> col:7 used 'Timestamp &&'
| |-CXXCtorInitializer Field 0x55a774774658 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55a77477c808 <col:7> 'Timestamp::rep_t' 'void (Timestamp::rep_t &&) noexcept'
| |   `-MemberExpr 0x55a77477c7b0 <col:7> 'Timestamp::rep_t' xvalue ._t 0x55a774774658
| |     `-CXXStaticCastExpr 0x55a77477c780 <col:7> 'Timestamp' xvalue static_cast<class Timestamp &&> <NoOp>
| |       `-DeclRefExpr 0x55a77477c750 <col:7> 'Timestamp' lvalue ParmVar 0x55a77477bd28 '' 'Timestamp &&'
| `-CompoundStmt 0x55a77477c868 <col:7>
|-CXXDestructorDecl 0x55a77477bdd8 <col:7> col:7 implicit referenced ~Timestamp 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55a774482508 <col:7> col:7 implicit used operator= 'Timestamp &(const Timestamp &) noexcept' inline default trivial
| |-ParmVarDecl 0x55a774482618 <col:7> col:7 used 'const Timestamp &'
| `-CompoundStmt 0x55a774483108 <col:7>
|   |-CXXMemberCallExpr 0x55a7744830a8 <col:7> 'Timestamp::rep_t' lvalue
|   | |-MemberExpr 0x55a774482fe8 <col:7> '<bound member function type>' .operator= 0x55a7744826b8
|   | | `-MemberExpr 0x55a774482ef8 <col:7> 'Timestamp::rep_t' lvalue ->_t 0x55a774774658
|   | |   `-CXXThisExpr 0x55a774482ee8 <col:7> 'Timestamp *' this
|   | `-MemberExpr 0x55a774482fb8 <col:7> 'const Timestamp::rep_t' lvalue ._t 0x55a774774658
|   |   `-DeclRefExpr 0x55a774482f98 <col:7> 'const Timestamp' lvalue ParmVar 0x55a774482618 '' 'const Timestamp &'
|   `-ReturnStmt 0x55a7744830f8 <col:7>
|     `-UnaryOperator 0x55a7744830e0 <col:7> 'Timestamp' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55a7744830d0 <col:7> 'Timestamp *' this
`-CXXMethodDecl 0x55a7744829b8 <col:7> col:7 implicit used operator= 'Timestamp &(Timestamp &&) noexcept' inline default trivial
  |-ParmVarDecl 0x55a774482ac8 <col:7> col:7 used 'Timestamp &&'
  `-CompoundStmt 0x55a77484a678 <col:7>
    |-CXXMemberCallExpr 0x55a77484a618 <col:7> 'Timestamp::rep_t' lvalue
    | |-MemberExpr 0x55a77484a580 <col:7> '<bound member function type>' .operator= 0x55a774482838
    | | `-MemberExpr 0x55a77484a450 <col:7> 'Timestamp::rep_t' lvalue ->_t 0x55a774774658
    | |   `-CXXThisExpr 0x55a77484a440 <col:7> 'Timestamp *' this
    | `-MemberExpr 0x55a77484a550 <col:7> 'Timestamp::rep_t' xvalue ._t 0x55a774774658
    |   `-CXXStaticCastExpr 0x55a77484a520 <col:7> 'Timestamp' xvalue static_cast<class Timestamp &&> <NoOp>
    |     `-DeclRefExpr 0x55a77484a4f0 <col:7> 'Timestamp' lvalue ParmVar 0x55a774482ac8 '' 'Timestamp &&'
    `-ReturnStmt 0x55a77484a668 <col:7>
      `-UnaryOperator 0x55a77484a650 <col:7> 'Timestamp' lvalue prefix '*' cannot overflow
        `-CXXThisExpr 0x55a77484a640 <col:7> 'Timestamp *' this

Layout: <CGRecordLayout
  LLVMType:%class.Timestamp = type { %"union.Timestamp::rep_t" }
  NonVirtualBaseLLVMType:%class.Timestamp = type { %"union.Timestamp::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55a7748552a0 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<16>'
|-CXXRecordDecl 0x55a774855478 prev 0x55a7748552a0 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55a774855508 <col:46, col:52> col:46 public
|-TypedefDecl 0x55a774855530 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55a774274370 'int'
|-TypedefDecl 0x55a774857100 <line:13:5, col:31> col:31 type 'typename sized_array_memory<16>::type':'char_array<16>'
| `-ElaboratedType 0x55a7748570b0 'typename sized_array_memory<16>::type' sugar
|   `-TypedefType 0x55a7748559e0 'sized_array_memory<16>::type' sugar
|     |-Typedef 0x55a7748558e0 'type'
|     `-TemplateSpecializationType 0x55a774855870 'char_array<16UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x55a774855750 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 16
|       |   `-SubstNonTypeTemplateParmExpr 0x55a774855730 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x55a774855710 <col:24> 'unsigned long' 16
|       `-RecordType 0x55a774855850 'char_array<16>'
|         `-ClassTemplateSpecialization 0x55a774855770 'char_array'
|-TypedefDecl 0x55a7748571b8 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<16> >::type *'
| `-PointerType 0x55a774857180 'vector_memory<sized_array_memory<16> >::type *'
|   `-TypedefType 0x55a774857160 'vector_memory<sized_array_memory<16> >::type' sugar
|     |-Typedef 0x55a774857100 'type'
|     `-ElaboratedType 0x55a7748570b0 'typename sized_array_memory<16>::type' sugar
|       `-TypedefType 0x55a7748559e0 'sized_array_memory<16>::type' sugar
|         |-Typedef 0x55a7748558e0 'type'
|         `-TemplateSpecializationType 0x55a774855870 'char_array<16UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x55a774855750 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 16
|           |   `-SubstNonTypeTemplateParmExpr 0x55a774855730 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x55a774855710 <col:24> 'unsigned long' 16
|           `-RecordType 0x55a774855850 'char_array<16>'
|             `-ClassTemplateSpecialization 0x55a774855770 'char_array'
|-CXXMethodDecl 0x55a774857338 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<16> >::type *) const' inline
| `-ParmVarDecl 0x55a774857248 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXConstructorDecl 0x55a774857428 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55a774857508 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x55a774857508
|-CXXMethodDecl 0x55a7748577d8 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<16> > &)'
| `-ParmVarDecl 0x55a7748576e0 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<16> > &'
|-CXXMethodDecl 0x55a774857a18 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x55a774857890 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55a774857908 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55a774857be8 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x55a774857ad8 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55a774857b50 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55a774857d48 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<16> >::iterator ()'
|-CXXMethodDecl 0x55a774857e18 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<16> >::iterator ()'
|-CXXMethodDecl 0x55a774858068 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<16> >::iterator (vector_memory<sized_array_memory<16> >::iterator, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x55a774857ed8 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
| `-ParmVarDecl 0x55a774857f50 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55a7748582c8 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<16> >::iterator (vector_memory<sized_array_memory<16> >::iterator, vector_memory<sized_array_memory<16> >::iterator)'
| |-ParmVarDecl 0x55a774858138 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
| `-ParmVarDecl 0x55a7748581b0 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55a774858488 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<16> >::type *)' inline
| `-ParmVarDecl 0x55a774858398 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55a774858648 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<16> >::type *)' inline
| `-ParmVarDecl 0x55a774858550 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55a774858700 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55a7748587b0 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55a7748589e8 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x55a774858860 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55a7748588d8 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55a774858c88 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<16> > &)'
| `-ParmVarDecl 0x55a774858b90 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<16> > &'
|-FieldDecl 0x55a774858d50 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<16> >::type *'
|-FieldDecl 0x55a774858da0 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55a774858df0 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory = type { %struct.char_array*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory = type { %struct.char_array*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55a774853bb8 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'TimerSet::heap_element'
|-CXXRecordDecl 0x55a774853dc8 prev 0x55a774853bb8 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55a774855210 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<heap_element>::type':'sized_array_memory<16>'
| `-ElaboratedType 0x55a7748551c0 'typename array_memory<heap_element>::type' sugar
|   `-TypedefType 0x55a7748551a0 'conditional<true, sized_array_memory<16>, typed_array_memory<TimerSet::heap_element> >::type' sugar
|     |-Typedef 0x55a774855050 'type'
|     `-SubstTemplateTypeParmType 0x55a774854e70 'sized_array_memory<16>' sugar
|       |-TemplateTypeParmType 0x55a77453eec0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55a77453ee68 'T'
|       `-RecordType 0x55a7748549c0 'sized_array_memory<16>'
|         `-ClassTemplateSpecialization 0x55a7748548d8 'sized_array_memory'
|-FieldDecl 0x55a774858e40 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<TimerSet::heap_element>::array_memory_type>':'vector_memory<sized_array_memory<16> >' mutable
|-AccessSpecDecl 0x55a774858e90 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55a774858ec8 <line:118:5, col:15> col:15 value_type 'TimerSet::heap_element':'TimerSet::heap_element'
| `-SubstTemplateTypeParmType 0x55a774853e60 'TimerSet::heap_element' sugar
|   |-TemplateTypeParmType 0x55a774576bb0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55a774576b58 'T'
|   `-RecordType 0x55a774852dc0 'TimerSet::heap_element'
|     `-CXXRecord 0x55a774852d30 'heap_element'
|-TypedefDecl 0x55a774858f88 <line:119:5, col:16> col:16 reference 'TimerSet::heap_element &'
| `-LValueReferenceType 0x55a774858f50 'TimerSet::heap_element &'
|   `-SubstTemplateTypeParmType 0x55a774853e60 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x55a774576bb0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55a774576b58 'T'
|     `-RecordType 0x55a774852dc0 'TimerSet::heap_element'
|       `-CXXRecord 0x55a774852d30 'heap_element'
|-TypedefDecl 0x55a774859018 <line:120:5, col:22> col:22 const_reference 'const TimerSet::heap_element &'
| `-LValueReferenceType 0x55a774858fe0 'const TimerSet::heap_element &'
|   `-QualType 0x55a774853e61 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x55a774853e60 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x55a774576bb0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55a774576b58 'T'
|       `-RecordType 0x55a774852dc0 'TimerSet::heap_element'
|         `-CXXRecord 0x55a774852d30 'heap_element'
|-TypedefDecl 0x55a7748590a8 <line:121:5, col:16> col:16 pointer 'TimerSet::heap_element *'
| `-PointerType 0x55a774859070 'TimerSet::heap_element *'
|   `-SubstTemplateTypeParmType 0x55a774853e60 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x55a774576bb0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55a774576b58 'T'
|     `-RecordType 0x55a774852dc0 'TimerSet::heap_element'
|       `-CXXRecord 0x55a774852d30 'heap_element'
|-TypedefDecl 0x55a774859168 <line:122:5, col:22> col:22 const_pointer 'const TimerSet::heap_element *'
| `-PointerType 0x55a774859130 'const TimerSet::heap_element *'
|   `-QualType 0x55a774853e61 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x55a774853e60 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x55a774576bb0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55a774576b58 'T'
|       `-RecordType 0x55a774852dc0 'TimerSet::heap_element'
|         `-CXXRecord 0x55a774852d30 'heap_element'
|-TypedefDecl 0x55a774859ff0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<heap_element>::type':'const TimerSet::heap_element &'
| `-ElaboratedType 0x55a774859fa0 'typename fast_argument<heap_element>::type' sugar
|   `-TypedefType 0x55a774859f80 'fast_argument<TimerSet::heap_element, true>::type' sugar
|     |-Typedef 0x55a774859eb8 'type'
|     `-LValueReferenceType 0x55a774859e80 'const TimerSet::heap_element &'
|       `-QualType 0x55a774859c21 'const TimerSet::heap_element' const
|         `-SubstTemplateTypeParmType 0x55a774859c20 'TimerSet::heap_element' sugar
|           |-TemplateTypeParmType 0x55a774549590 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55a774549538 'T'
|           `-RecordType 0x55a774852dc0 'TimerSet::heap_element'
|             `-CXXRecord 0x55a774852d30 'heap_element'
|-TypedefDecl 0x55a77485a058 <line:126:5, col:22> col:22 const_access_type 'const TimerSet::heap_element &'
| `-LValueReferenceType 0x55a774858fe0 'const TimerSet::heap_element &'
|   `-QualType 0x55a774853e61 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x55a774853e60 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x55a774576bb0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55a774576b58 'T'
|       `-RecordType 0x55a774852dc0 'TimerSet::heap_element'
|         `-CXXRecord 0x55a774852d30 'heap_element'
|-TypedefDecl 0x55a77485a0b0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55a774274370 'int'
|-TypedefDecl 0x55a77485a118 <line:130:5, col:16> col:16 iterator 'TimerSet::heap_element *'
| `-PointerType 0x55a774859070 'TimerSet::heap_element *'
|   `-SubstTemplateTypeParmType 0x55a774853e60 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x55a774576bb0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55a774576b58 'T'
|     `-RecordType 0x55a774852dc0 'TimerSet::heap_element'
|       `-CXXRecord 0x55a774852d30 'heap_element'
|-TypedefDecl 0x55a77485a180 <line:131:5, col:22> col:22 const_iterator 'const TimerSet::heap_element *'
| `-PointerType 0x55a774859130 'const TimerSet::heap_element *'
|   `-QualType 0x55a774853e61 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x55a774853e60 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x55a774576bb0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55a774576b58 'T'
|       `-RecordType 0x55a774852dc0 'TimerSet::heap_element'
|         `-CXXRecord 0x55a774852d30 'heap_element'
|-EnumDecl 0x55a77485a1d8 <line:134:5> col:5
| `-EnumConstantDecl 0x55a77485a2d0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<TimerSet::heap_element>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55a77485a2b0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55a774578238 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55a774578210 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55a7745781f0 <col:40> 'int' 1
|-CXXConstructorDecl 0x55a77485a358 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55a77485a5e8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x55a77485a410 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55a77485a4b0 <col:41, col:61> col:61 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXConstructorDecl 0x55a77485a8a8 <line:139:5, col:37> col:12 Vector 'void (const Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x55a77485a790 <col:19, col:36> col:36 x 'const Vector<TimerSet::heap_element> &'
|-CXXConstructorDecl 0x55a77485ab68 <line:141:5, col:32> col:12 Vector 'void (Vector<TimerSet::heap_element> &&)' inline
| `-ParmVarDecl 0x55a77485aa50 <col:19, col:31> col:31 x 'Vector<TimerSet::heap_element> &&'
|-CXXMethodDecl 0x55a77485aeb0 <line:144:5, col:51> col:23 operator= 'Vector<TimerSet::heap_element> &(const Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x55a77485ad90 <col:33, col:50> col:50 x 'const Vector<TimerSet::heap_element> &'
|-CXXMethodDecl 0x55a77485b1c0 <line:146:5, col:46> col:23 operator= 'Vector<TimerSet::heap_element> &(Vector<TimerSet::heap_element> &&)' inline
| `-ParmVarDecl 0x55a77485b0a0 <col:33, col:45> col:45 x 'Vector<TimerSet::heap_element> &&'
|-CXXMethodDecl 0x55a77485b4b0 <line:148:5, col:70> col:23 assign 'Vector<TimerSet::heap_element> &(Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x55a77485b2f8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55a77485b370 <col:43, col:69> col:63 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x55a77485b608 <line:150:5, col:55> col:49 begin 'Vector<TimerSet::heap_element>::iterator ()'
| |-NoInlineAttr 0x55a77485b6e8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55a77485b740 <col:30> Inherited
|-CXXMethodDecl 0x55a77485b788 <line:151:5, col:53> col:49 end 'Vector<TimerSet::heap_element>::iterator ()'
| |-NoInlineAttr 0x55a77485b838 <col:20> Inherited
| `-OptimizeNoneAttr 0x55a77485b890 <col:30> Inherited
|-CXXMethodDecl 0x55a77485b958 <line:152:5, col:63> col:55 begin 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x55a77485ba08 <col:20> Inherited
| `-OptimizeNoneAttr 0x55a77485ba60 <col:30> Inherited
|-CXXMethodDecl 0x55a77485baa8 <line:153:5, col:61> col:55 end 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x55a77485bb58 <col:20> Inherited
| `-OptimizeNoneAttr 0x55a77485bbb0 <col:30> Inherited
|-CXXMethodDecl 0x55a77485bbf8 <line:154:5, col:64> col:55 cbegin 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x55a77485bca8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55a77485bd00 <col:30> Inherited
|-CXXMethodDecl 0x55a77485bd48 <line:155:5, col:62> col:55 cend 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x55a77485bdf8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55a77485be50 <col:30> Inherited
|-CXXMethodDecl 0x55a77485be78 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55a77485bf28 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55a77485bfd8 <line:159:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x55a77485c198 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x55a77485c088 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55a77485c100 <col:37, col:63> col:57 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x55a77485c2e8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55a77485c258 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55a77485c498 <line:163:5, col:65> col:43 operator[] 'TimerSet::heap_element &(Vector::size_type)'
| |-ParmVarDecl 0x55a77485c3a0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55a77485c550 <col:20>
| `-OptimizeNoneAttr 0x55a77485c5a8 <col:30>
|-CXXMethodDecl 0x55a77485c6c8 <line:164:5, col:73> col:49 operator[] 'const TimerSet::heap_element &(Vector::size_type) const'
| |-ParmVarDecl 0x55a77485c5d0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55a77485c780 <col:20>
| `-OptimizeNoneAttr 0x55a77485c7d8 <col:30>
|-CXXMethodDecl 0x55a77485c890 <line:165:5, col:29> col:15 at 'TimerSet::heap_element &(Vector::size_type)' inline
| `-ParmVarDecl 0x55a77485c800 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55a77485c9d8 <line:166:5, col:37> col:21 at 'const TimerSet::heap_element &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55a77485c948 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55a77485cb08 <line:167:5, col:21> col:15 front 'TimerSet::heap_element &()' inline
|-CXXMethodDecl 0x55a77485cc38 <line:168:5, col:29> col:21 front 'const TimerSet::heap_element &() const' inline
|-CXXMethodDecl 0x55a77485cd08 <line:169:5, col:20> col:15 back 'TimerSet::heap_element &()' inline
|-CXXMethodDecl 0x55a77485cdd8 <line:170:5, col:28> col:21 back 'const TimerSet::heap_element &() const' inline
|-CXXMethodDecl 0x55a77485cf18 <line:172:5, col:39> col:15 used unchecked_at 'TimerSet::heap_element &(Vector::size_type)' inline
| `-ParmVarDecl 0x55a77485ce88 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55a77485d060 <line:173:5, col:47> col:21 unchecked_at 'const TimerSet::heap_element &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55a77485cfd0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55a77485d1a8 <line:174:5, col:59> col:15 at_u 'TimerSet::heap_element &(Vector::size_type)' inline
| |-ParmVarDecl 0x55a77485d118 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55a77485d260 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55a77485d360 <line:175:5, col:71> col:21 at_u 'const TimerSet::heap_element &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55a77485d2d0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55a77485d418 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55a77485d4d8 <line:177:5, col:20> col:15 data 'TimerSet::heap_element *()' inline
|-CXXMethodDecl 0x55a77485d5d8 <line:178:5, col:28> col:21 data 'const TimerSet::heap_element *() const' inline
|-CXXMethodDecl 0x55a77485d788 <line:180:5, col:48> col:17 push_back 'void (Vector<TimerSet::heap_element>::value_argument_type)' inline
| `-ParmVarDecl 0x55a77485d698 <col:27, col:47> col:47 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-FunctionTemplateDecl 0x55a77485df78 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55a77485d840 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<TimerSet::heap_element>':'fast_argument<TimerSet::heap_element, true>'
| `-CXXMethodDecl 0x55a77485ded8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (TimerSet::heap_element &&)' inline
|   `-ParmVarDecl 0x55a77485ddd8 <col:58, col:62> col:62 v 'TimerSet::heap_element &&'
|-CXXMethodDecl 0x55a77485e058 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55a77485e1a8 <line:186:5, col:49> col:17 push_front 'void (Vector<TimerSet::heap_element>::value_argument_type)' inline
| `-ParmVarDecl 0x55a77485e118 <col:28, col:48> col:48 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x55a77485e260 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55a77485e4a8 <line:189:5, col:62> col:21 insert 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x55a77485e320 <col:28, col:37> col:37 it 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
| `-ParmVarDecl 0x55a77485e398 <col:41, col:61> col:61 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x55a77485e668 <line:190:5, col:38> col:21 erase 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator)' inline
| `-ParmVarDecl 0x55a77485e578 <col:27, col:36> col:36 it 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
|-CXXMethodDecl 0x55a77485e8b8 <line:191:5, col:49> col:21 erase 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator, Vector<TimerSet::heap_element>::iterator)' inline
| |-ParmVarDecl 0x55a77485e730 <col:27, col:36> col:36 a 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
| `-ParmVarDecl 0x55a77485e7a8 <col:39, col:48> col:48 b 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
|-CXXMethodDecl 0x55a77485e978 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55a77485ebd8 <line:195:5, col:34> col:17 swap 'void (Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x55a77485eae0 <col:22, col:33> col:33 x 'Vector<TimerSet::heap_element> &'
`-CXXDestructorDecl 0x55a77485eca8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55a77485eca8

Layout: <CGRecordLayout
  LLVMType:%class.Vector = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55a7748601d0 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<8>'
|-CXXRecordDecl 0x55a7748603a8 prev 0x55a7748601d0 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55a774860438 <col:46, col:52> col:46 public
|-TypedefDecl 0x55a774860460 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55a774274370 'int'
|-TypedefDecl 0x55a774862090 <line:13:5, col:31> col:31 type 'typename sized_array_memory<8>::type':'char_array<8>'
| `-ElaboratedType 0x55a774862040 'typename sized_array_memory<8>::type' sugar
|   `-TypedefType 0x55a774860910 'sized_array_memory<8>::type' sugar
|     |-Typedef 0x55a774860810 'type'
|     `-TemplateSpecializationType 0x55a7748607a0 'char_array<8UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x55a774860680 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 8
|       |   `-SubstNonTypeTemplateParmExpr 0x55a774860660 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x55a774860640 <col:24> 'unsigned long' 8
|       `-RecordType 0x55a774860780 'char_array<8>'
|         `-ClassTemplateSpecialization 0x55a7748606a0 'char_array'
|-TypedefDecl 0x55a774862148 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<8> >::type *'
| `-PointerType 0x55a774862110 'vector_memory<sized_array_memory<8> >::type *'
|   `-TypedefType 0x55a7748620f0 'vector_memory<sized_array_memory<8> >::type' sugar
|     |-Typedef 0x55a774862090 'type'
|     `-ElaboratedType 0x55a774862040 'typename sized_array_memory<8>::type' sugar
|       `-TypedefType 0x55a774860910 'sized_array_memory<8>::type' sugar
|         |-Typedef 0x55a774860810 'type'
|         `-TemplateSpecializationType 0x55a7748607a0 'char_array<8UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x55a774860680 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 8
|           |   `-SubstNonTypeTemplateParmExpr 0x55a774860660 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x55a774860640 <col:24> 'unsigned long' 8
|           `-RecordType 0x55a774860780 'char_array<8>'
|             `-ClassTemplateSpecialization 0x55a7748606a0 'char_array'
|-CXXMethodDecl 0x55a7748622c8 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<8> >::type *) const' inline
| `-ParmVarDecl 0x55a7748621d8 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXConstructorDecl 0x55a7748623b8 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55a774862498 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x55a774862498
|-CXXMethodDecl 0x55a774862768 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<8> > &)'
| `-ParmVarDecl 0x55a774862670 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<8> > &'
|-CXXMethodDecl 0x55a7748629a8 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x55a774862820 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55a774862898 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55a774862b78 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x55a774862a68 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55a774862ae0 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55a774862cd8 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<8> >::iterator ()'
|-CXXMethodDecl 0x55a774862da8 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<8> >::iterator ()'
|-CXXMethodDecl 0x55a774862ff8 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<8> >::iterator (vector_memory<sized_array_memory<8> >::iterator, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x55a774862e68 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
| `-ParmVarDecl 0x55a774862ee0 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55a774863258 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<8> >::iterator (vector_memory<sized_array_memory<8> >::iterator, vector_memory<sized_array_memory<8> >::iterator)'
| |-ParmVarDecl 0x55a7748630c8 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
| `-ParmVarDecl 0x55a774863140 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55a774863418 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<8> >::type *)' inline
| `-ParmVarDecl 0x55a774863328 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55a7748635d8 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<8> >::type *)' inline
| `-ParmVarDecl 0x55a7748634e0 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55a774863690 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55a774863740 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55a774863978 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x55a7748637f0 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55a774863868 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55a774863c18 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<8> > &)'
| `-ParmVarDecl 0x55a774863b20 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<8> > &'
|-FieldDecl 0x55a774863ce0 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<8> >::type *'
|-FieldDecl 0x55a774863d30 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55a774863d80 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.1 = type { %struct.char_array.2*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.1 = type { %struct.char_array.2*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55a77485edf0 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Timer *'
|-CXXRecordDecl 0x55a77485eff8 prev 0x55a77485edf0 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55a774860140 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<Timer *>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x55a7748600f0 'typename array_memory<Timer *>::type' sugar
|   `-TypedefType 0x55a7748600d0 'conditional<true, sized_array_memory<8>, typed_array_memory<Timer *> >::type' sugar
|     |-Typedef 0x55a77485ff80 'type'
|     `-SubstTemplateTypeParmType 0x55a77485fda0 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x55a77453eec0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55a77453ee68 'T'
|       `-RecordType 0x55a77485f8f0 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x55a77485f808 'sized_array_memory'
|-FieldDecl 0x55a774863dd0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Timer *>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x55a774863e20 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55a774863e58 <line:118:5, col:15> col:15 value_type 'Timer *':'Timer *'
| `-SubstTemplateTypeParmType 0x55a77485f090 'Timer *' sugar
|   |-TemplateTypeParmType 0x55a774576bb0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55a774576b58 'T'
|   `-PointerType 0x55a7747db740 'Timer *'
|     `-RecordType 0x55a7747da890 'Timer'
|       `-CXXRecord 0x55a774843f58 'Timer'
|-TypedefDecl 0x55a774863f18 <line:119:5, col:16> col:16 reference 'Timer *&'
| `-LValueReferenceType 0x55a774863ee0 'Timer *&'
|   `-SubstTemplateTypeParmType 0x55a77485f090 'Timer *' sugar
|     |-TemplateTypeParmType 0x55a774576bb0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55a774576b58 'T'
|     `-PointerType 0x55a7747db740 'Timer *'
|       `-RecordType 0x55a7747da890 'Timer'
|         `-CXXRecord 0x55a774843f58 'Timer'
|-TypedefDecl 0x55a774863fd8 <line:120:5, col:22> col:22 const_reference 'Timer *const &'
| `-LValueReferenceType 0x55a774863fa0 'Timer *const &'
|   `-QualType 0x55a77485f091 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x55a77485f090 'Timer *' sugar
|       |-TemplateTypeParmType 0x55a774576bb0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55a774576b58 'T'
|       `-PointerType 0x55a7747db740 'Timer *'
|         `-RecordType 0x55a7747da890 'Timer'
|           `-CXXRecord 0x55a774843f58 'Timer'
|-TypedefDecl 0x55a774864098 <line:121:5, col:16> col:16 pointer 'Timer **'
| `-PointerType 0x55a774864060 'Timer **'
|   `-SubstTemplateTypeParmType 0x55a77485f090 'Timer *' sugar
|     |-TemplateTypeParmType 0x55a774576bb0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55a774576b58 'T'
|     `-PointerType 0x55a7747db740 'Timer *'
|       `-RecordType 0x55a7747da890 'Timer'
|         `-CXXRecord 0x55a774843f58 'Timer'
|-TypedefDecl 0x55a774864158 <line:122:5, col:22> col:22 const_pointer 'Timer *const *'
| `-PointerType 0x55a774864120 'Timer *const *'
|   `-QualType 0x55a77485f091 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x55a77485f090 'Timer *' sugar
|       |-TemplateTypeParmType 0x55a774576bb0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55a774576b58 'T'
|       `-PointerType 0x55a7747db740 'Timer *'
|         `-RecordType 0x55a7747da890 'Timer'
|           `-CXXRecord 0x55a774843f58 'Timer'
|-TypedefDecl 0x55a774864d30 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<Timer *>::type':'Timer *'
| `-ElaboratedType 0x55a774864ce0 'typename fast_argument<Timer *>::type' sugar
|   `-TypedefType 0x55a774864cc0 'fast_argument<Timer *, false>::type' sugar
|     |-Typedef 0x55a774864c50 'type'
|     `-SubstTemplateTypeParmType 0x55a774864a10 'Timer *' sugar
|       |-TemplateTypeParmType 0x55a774549cc0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55a774549c70 'T'
|       `-PointerType 0x55a7747db740 'Timer *'
|         `-RecordType 0x55a7747da890 'Timer'
|           `-CXXRecord 0x55a774843f58 'Timer'
|-TypedefDecl 0x55a774864d98 <line:126:5, col:22> col:22 const_access_type 'Timer *const &'
| `-LValueReferenceType 0x55a774863fa0 'Timer *const &'
|   `-QualType 0x55a77485f091 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x55a77485f090 'Timer *' sugar
|       |-TemplateTypeParmType 0x55a774576bb0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55a774576b58 'T'
|       `-PointerType 0x55a7747db740 'Timer *'
|         `-RecordType 0x55a7747da890 'Timer'
|           `-CXXRecord 0x55a774843f58 'Timer'
|-TypedefDecl 0x55a774864df0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55a774274370 'int'
|-TypedefDecl 0x55a774864e58 <line:130:5, col:16> col:16 iterator 'Timer **'
| `-PointerType 0x55a774864060 'Timer **'
|   `-SubstTemplateTypeParmType 0x55a77485f090 'Timer *' sugar
|     |-TemplateTypeParmType 0x55a774576bb0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55a774576b58 'T'
|     `-PointerType 0x55a7747db740 'Timer *'
|       `-RecordType 0x55a7747da890 'Timer'
|         `-CXXRecord 0x55a774843f58 'Timer'
|-TypedefDecl 0x55a774864ec0 <line:131:5, col:22> col:22 const_iterator 'Timer *const *'
| `-PointerType 0x55a774864120 'Timer *const *'
|   `-QualType 0x55a77485f091 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x55a77485f090 'Timer *' sugar
|       |-TemplateTypeParmType 0x55a774576bb0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55a774576b58 'T'
|       `-PointerType 0x55a7747db740 'Timer *'
|         `-RecordType 0x55a7747da890 'Timer'
|           `-CXXRecord 0x55a774843f58 'Timer'
|-EnumDecl 0x55a774864f18 <line:134:5> col:5
| `-EnumConstantDecl 0x55a774865010 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Timer *>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55a774864ff0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55a774578238 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55a774578210 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55a7745781f0 <col:40> 'int' 1
|-CXXConstructorDecl 0x55a774865098 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55a774865328 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x55a774865150 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55a7748651f0 <col:41, col:61> col:61 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXConstructorDecl 0x55a7748655e8 <line:139:5, col:37> col:12 Vector 'void (const Vector<Timer *> &)' inline
| `-ParmVarDecl 0x55a7748654d0 <col:19, col:36> col:36 x 'const Vector<Timer *> &'
|-CXXConstructorDecl 0x55a7748658a8 <line:141:5, col:32> col:12 Vector 'void (Vector<Timer *> &&)' inline
| `-ParmVarDecl 0x55a774865790 <col:19, col:31> col:31 x 'Vector<Timer *> &&'
|-CXXMethodDecl 0x55a774865bf0 <line:144:5, col:51> col:23 operator= 'Vector<Timer *> &(const Vector<Timer *> &)' inline
| `-ParmVarDecl 0x55a774865ad0 <col:33, col:50> col:50 x 'const Vector<Timer *> &'
|-CXXMethodDecl 0x55a774865f00 <line:146:5, col:46> col:23 operator= 'Vector<Timer *> &(Vector<Timer *> &&)' inline
| `-ParmVarDecl 0x55a774865de0 <col:33, col:45> col:45 x 'Vector<Timer *> &&'
|-CXXMethodDecl 0x55a7748661f0 <line:148:5, col:70> col:23 assign 'Vector<Timer *> &(Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x55a774866038 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55a7748660b0 <col:43, col:69> col:63 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x55a774866348 <line:150:5, col:55> col:49 begin 'Vector<Timer *>::iterator ()'
| |-NoInlineAttr 0x55a774866428 <col:20> Inherited
| `-OptimizeNoneAttr 0x55a774866480 <col:30> Inherited
|-CXXMethodDecl 0x55a7748664c8 <line:151:5, col:53> col:49 end 'Vector<Timer *>::iterator ()'
| |-NoInlineAttr 0x55a774866578 <col:20> Inherited
| `-OptimizeNoneAttr 0x55a7748665d0 <col:30> Inherited
|-CXXMethodDecl 0x55a774866698 <line:152:5, col:63> col:55 begin 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x55a774866748 <col:20> Inherited
| `-OptimizeNoneAttr 0x55a7748667a0 <col:30> Inherited
|-CXXMethodDecl 0x55a7748667e8 <line:153:5, col:61> col:55 end 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x55a774866898 <col:20> Inherited
| `-OptimizeNoneAttr 0x55a7748668f0 <col:30> Inherited
|-CXXMethodDecl 0x55a774866938 <line:154:5, col:64> col:55 cbegin 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x55a7748669e8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55a774866a40 <col:30> Inherited
|-CXXMethodDecl 0x55a774866a88 <line:155:5, col:62> col:55 cend 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x55a774866b38 <col:20> Inherited
| `-OptimizeNoneAttr 0x55a774866b90 <col:30> Inherited
|-CXXMethodDecl 0x55a774866bb8 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55a774866c68 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55a774866d18 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55a774866ed8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x55a774866dc8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55a774866e40 <col:37, col:63> col:57 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x55a774867028 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55a774866f98 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55a7748671d8 <line:163:5, col:65> col:43 operator[] 'Timer *&(Vector::size_type)'
| |-ParmVarDecl 0x55a7748670e0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55a774867290 <col:20>
| `-OptimizeNoneAttr 0x55a7748672e8 <col:30>
|-CXXMethodDecl 0x55a774867408 <line:164:5, col:73> col:49 operator[] 'Timer *const &(Vector::size_type) const'
| |-ParmVarDecl 0x55a774867310 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55a7748674c0 <col:20>
| `-OptimizeNoneAttr 0x55a774867518 <col:30>
|-CXXMethodDecl 0x55a7748675d0 <line:165:5, col:29> col:15 at 'Timer *&(Vector::size_type)' inline
| `-ParmVarDecl 0x55a774867540 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55a774867718 <line:166:5, col:37> col:21 at 'Timer *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55a774867688 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55a774867848 <line:167:5, col:21> col:15 front 'Timer *&()' inline
|-CXXMethodDecl 0x55a774867978 <line:168:5, col:29> col:21 front 'Timer *const &() const' inline
|-CXXMethodDecl 0x55a774867a48 <line:169:5, col:20> col:15 back 'Timer *&()' inline
|-CXXMethodDecl 0x55a774867b18 <line:170:5, col:28> col:21 back 'Timer *const &() const' inline
|-CXXMethodDecl 0x55a774867c58 <line:172:5, col:39> col:15 unchecked_at 'Timer *&(Vector::size_type)' inline
| `-ParmVarDecl 0x55a774867bc8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55a774867da0 <line:173:5, col:47> col:21 unchecked_at 'Timer *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55a774867d10 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55a774867ee8 <line:174:5, col:59> col:15 at_u 'Timer *&(Vector::size_type)' inline
| |-ParmVarDecl 0x55a774867e58 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55a774867fa0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55a7748680a0 <line:175:5, col:71> col:21 at_u 'Timer *const &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55a774868010 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55a774868158 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55a774868218 <line:177:5, col:20> col:15 data 'Timer **()' inline
|-CXXMethodDecl 0x55a774868318 <line:178:5, col:28> col:21 data 'Timer *const *() const' inline
|-CXXMethodDecl 0x55a774868498 <line:180:5, col:48> col:17 push_back 'void (Vector<Timer *>::value_argument_type)' inline
| `-ParmVarDecl 0x55a7748683d8 <col:27, col:47> col:47 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-FunctionTemplateDecl 0x55a774868c58 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55a774868550 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Timer *>':'fast_argument<Timer *, false>'
| `-CXXMethodDecl 0x55a774868bb8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Timer *&&)' inline
|   `-ParmVarDecl 0x55a774868ab8 <col:58, col:62> col:62 v 'Timer *&&'
|-CXXMethodDecl 0x55a774868d38 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55a774868e88 <line:186:5, col:49> col:17 push_front 'void (Vector<Timer *>::value_argument_type)' inline
| `-ParmVarDecl 0x55a774868df8 <col:28, col:48> col:48 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x55a774868f40 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55a774869188 <line:189:5, col:62> col:21 insert 'Vector<Timer *>::iterator (Vector<Timer *>::iterator, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x55a774869000 <col:28, col:37> col:37 it 'Vector<Timer *>::iterator':'Timer **'
| `-ParmVarDecl 0x55a774869078 <col:41, col:61> col:61 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x55a774869348 <line:190:5, col:38> col:21 erase 'Vector<Timer *>::iterator (Vector<Timer *>::iterator)' inline
| `-ParmVarDecl 0x55a774869258 <col:27, col:36> col:36 it 'Vector<Timer *>::iterator':'Timer **'
|-CXXMethodDecl 0x55a774869598 <line:191:5, col:49> col:21 erase 'Vector<Timer *>::iterator (Vector<Timer *>::iterator, Vector<Timer *>::iterator)' inline
| |-ParmVarDecl 0x55a774869410 <col:27, col:36> col:36 a 'Vector<Timer *>::iterator':'Timer **'
| `-ParmVarDecl 0x55a774869488 <col:39, col:48> col:48 b 'Vector<Timer *>::iterator':'Timer **'
|-CXXMethodDecl 0x55a774869658 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55a7748698b8 <line:195:5, col:34> col:17 swap 'void (Vector<Timer *> &)' inline
| `-ParmVarDecl 0x55a7748697c0 <col:22, col:33> col:33 x 'Vector<Timer *> &'
`-CXXDestructorDecl 0x55a774869a30 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55a774869a30

Layout: <CGRecordLayout
  LLVMType:%class.Vector.0 = type { %class.vector_memory.1 }
  NonVirtualBaseLLVMType:%class.Vector.0 = type { %class.vector_memory.1 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55a77482b2e0 <../dummy_inc/click/sync.hh:194:1, line:211:1> line:194:7 referenced class SimpleSpinlock definition
|-DefinitionData empty standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55a77482b3f8 <col:1, col:7> col:7 implicit referenced class SimpleSpinlock
|-AccessSpecDecl 0x55a77482b488 <col:24, col:30> col:24 public
|-CXXConstructorDecl 0x55a77482b510 <line:196:5, col:27> col:12 SimpleSpinlock 'void ()' inline
|-CXXDestructorDecl 0x55a77482b600 <line:197:5, col:28> col:12 ~SimpleSpinlock 'void () noexcept' inline
|-CXXMethodDecl 0x55a77482b700 <line:199:5, col:25> col:17 acquire 'void ()' inline
|-CXXMethodDecl 0x55a77482b7c0 <line:200:5, col:25> col:17 release 'void ()' inline
|-CXXMethodDecl 0x55a77482b880 <line:201:5, col:25> col:17 attempt 'bool ()' inline
|-CXXConstructorDecl 0x55a77482b9a8 <line:194:7> col:7 implicit constexpr SimpleSpinlock 'void (const SimpleSpinlock &)' inline default trivial noexcept-unevaluated 0x55a77482b9a8
| `-ParmVarDecl 0x55a774759df8 <col:7> col:7 'const SimpleSpinlock &'
`-CXXMethodDecl 0x55a77486a7d8 <col:7> col:7 implicit operator= 'SimpleSpinlock &(const SimpleSpinlock &)' inline default trivial noexcept-unevaluated 0x55a77486a7d8
  `-ParmVarDecl 0x55a77486a8e8 <col:7> col:7 'const SimpleSpinlock &'

Layout: <CGRecordLayout
  LLVMType:%class.SimpleSpinlock = type { i8 }
  NonVirtualBaseLLVMType:%class.SimpleSpinlock.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55a774851ea8 prev 0x55a774848108 <../dummy_inc/click/timerset.hh:12:1, line:90:1> line:12:7 referenced class TimerSet definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x55a774851fa0 <col:1, col:7> col:7 implicit referenced class TimerSet
|-AccessSpecDecl 0x55a774852030 <col:18, col:24> col:18 public
|-CXXConstructorDecl 0x55a7748520c0 <line:14:5, col:14> col:5 TimerSet 'void ()'
|-CXXMethodDecl 0x55a7748521b8 <line:16:5, col:67> col:15 timer_expiry_steady 'Timestamp () const'
| `-CompoundStmt 0x55a77486ac50 <col:43, col:67>
|   `-ReturnStmt 0x55a77486ac40 <col:45, col:52>
|     `-CXXConstructExpr 0x55a77486ac10 <col:52> 'Timestamp' 'void (const Timestamp &) noexcept'
|       `-MemberExpr 0x55a77486abe0 <col:52> 'const Timestamp' lvalue ->_timer_expiry 0x55a7748539a0
|         `-CXXThisExpr 0x55a77486abd0 <col:52> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x55a774852278 <line:17:5, col:53> col:22 timer_expiry_steady_adjusted 'Timestamp () const' inline
|-CXXMethodDecl 0x55a774852480 <line:19:5, col:64> col:16 next_timer_delay 'int (bool, Timestamp &) const' inline
| |-ParmVarDecl 0x55a774852328 <col:33, col:38> col:38 more_tasks 'bool'
| `-ParmVarDecl 0x55a7748523a0 <col:50, col:61> col:61 t 'Timestamp &'
|-CXXMethodDecl 0x55a774852578 <line:22:5, col:23> col:12 next_timer 'Timer *()'
|-CXXMethodDecl 0x55a774852640 <line:24:5, col:67> col:14 max_timer_stride 'unsigned int () const'
| `-CompoundStmt 0x55a77486acd0 <col:39, col:67>
|   `-ReturnStmt 0x55a77486acc0 <col:41, col:48>
|     `-ImplicitCastExpr 0x55a77486aca8 <col:48> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x55a77486ac78 <col:48> 'const unsigned int' lvalue ->_max_timer_stride 0x55a774853a88
|         `-CXXThisExpr 0x55a77486ac68 <col:48> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x55a774852708 <line:25:5, col:59> col:14 timer_stride 'unsigned int () const'
| `-CompoundStmt 0x55a77486ad50 <col:35, col:59>
|   `-ReturnStmt 0x55a77486ad40 <col:37, col:44>
|     `-ImplicitCastExpr 0x55a77486ad28 <col:44> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x55a77486acf8 <col:44> 'const unsigned int' lvalue ->_timer_stride 0x55a774853af0
|         `-CXXThisExpr 0x55a77486ace8 <col:44> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x55a774852850 <line:26:5, col:52> col:10 set_max_timer_stride 'void (unsigned int)'
| `-ParmVarDecl 0x55a7748527c0 <col:31, col:40> col:40 timer_stride 'unsigned int'
|-CXXMethodDecl 0x55a774852998 <line:28:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x55a774852908 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x55a774852b98 <line:30:5, col:57> col:10 run_timers 'void (RouterThread *, Master *)'
| |-ParmVarDecl 0x55a774852a50 <col:21, col:35> col:35 thread 'RouterThread *'
| `-ParmVarDecl 0x55a774852ac8 <col:43, col:51> col:51 master 'Master *'
|-CXXMethodDecl 0x55a774852c68 <line:32:5, col:23> col:17 fence 'void ()' inline
|-AccessSpecDecl 0x55a774852d08 <line:34:3, col:10> col:3 private
|-CXXRecordDecl 0x55a774852d30 <line:36:5, line:45:5> line:36:12 referenced struct heap_element definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55a774852e48 <col:5, col:12> col:12 implicit referenced struct heap_element
| |-FieldDecl 0x55a774852ee8 <line:37:2, col:12> col:12 referenced expiry_s 'Timestamp'
| |-FieldDecl 0x55a774852f48 <line:38:2, col:9> col:9 referenced t 'Timer *'
| `-CXXConstructorDecl 0x55a774853078 <line:42:2, line:44:2> line:42:2 heap_element 'void (Timer *)'
|   |-ParmVarDecl 0x55a774852fa8 <col:15, col:22> col:22 used t_ 'Timer *'
|   |-CXXCtorInitializer Field 0x55a774852ee8 'expiry_s' 'Timestamp'
|   | `-CXXConstructExpr 0x55a77486ae28 <line:43:8, col:36> 'Timestamp' 'void (const Timestamp &) noexcept'
|   |   `-CXXMemberCallExpr 0x55a77486add0 <col:17, col:35> 'const Timestamp' lvalue
|   |     `-MemberExpr 0x55a77486ada0 <col:17, col:21> '<bound member function type>' ->expiry_steady 0x55a774845598
|   |       `-ImplicitCastExpr 0x55a77486adf0 <col:17> 'const Timer *' <NoOp>
|   |         `-ImplicitCastExpr 0x55a77486ad88 <col:17> 'Timer *' <LValueToRValue>
|   |           `-DeclRefExpr 0x55a77486ad68 <col:17> 'Timer *' lvalue ParmVar 0x55a774852fa8 't_' 'Timer *'
|   |-CXXCtorInitializer Field 0x55a774852f48 't' 'Timer *'
|   | `-ImplicitCastExpr 0x55a77486aec0 <col:41> 'Timer *' <LValueToRValue>
|   |   `-DeclRefExpr 0x55a77486ae80 <col:41> 'Timer *' lvalue ParmVar 0x55a774852fa8 't_' 'Timer *'
|   `-CompoundStmt 0x55a77486af10 <col:45, line:44:2>
|-CXXRecordDecl 0x55a774853140 <line:46:5, line:50:5> line:46:12 struct heap_less definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55a774853258 <col:5, col:12> col:12 implicit struct heap_less
| `-CXXMethodDecl 0x55a7748534a8 <line:47:2, line:49:2> line:47:14 operator() 'bool (const TimerSet::heap_element &, const TimerSet::heap_element &)' inline
|   |-ParmVarDecl 0x55a774853328 <col:25, col:45> col:45 used a 'const TimerSet::heap_element &'
|   |-ParmVarDecl 0x55a7748533a0 <col:48, col:68> col:68 used b 'const TimerSet::heap_element &'
|   `-CompoundStmt 0x55a77486b040 <col:71, line:49:2>
|     `-ReturnStmt 0x55a77486b030 <line:48:6, col:28>
|       `-CXXOperatorCallExpr 0x55a77486aff8 <col:13, col:28> 'bool'
|         |-ImplicitCastExpr 0x55a77486afe0 <col:24> 'bool (*)(const Timestamp &, const Timestamp &)' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x55a77486afc0 <col:24> 'bool (const Timestamp &, const Timestamp &)' lvalue Function 0x55a774798aa8 'operator<' 'bool (const Timestamp &, const Timestamp &)'
|         |-MemberExpr 0x55a77486af40 <col:13, col:15> 'const Timestamp' lvalue .expiry_s 0x55a774852ee8
|         | `-DeclRefExpr 0x55a77486af20 <col:13> 'const TimerSet::heap_element' lvalue ParmVar 0x55a774853328 'a' 'const TimerSet::heap_element &'
|         `-MemberExpr 0x55a77486af90 <col:26, col:28> 'const Timestamp' lvalue .expiry_s 0x55a774852ee8
|           `-DeclRefExpr 0x55a77486af70 <col:26> 'const TimerSet::heap_element' lvalue ParmVar 0x55a7748533a0 'b' 'const TimerSet::heap_element &'
|-CXXRecordDecl 0x55a774853570 <line:51:5, line:55:5> line:51:12 struct heap_place definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55a774853688 <col:5, col:12> col:12 implicit struct heap_place
| `-CXXMethodDecl 0x55a7748538a8 <line:52:2, line:54:2> line:52:14 operator() 'void (TimerSet::heap_element *, TimerSet::heap_element *)' inline
|   |-ParmVarDecl 0x55a774853728 <col:25, col:39> col:39 used begin 'TimerSet::heap_element *'
|   |-ParmVarDecl 0x55a7748537a0 <col:46, col:60> col:60 used t 'TimerSet::heap_element *'
|   `-CompoundStmt 0x55a77486b248 <col:63, line:54:2>
|     `-BinaryOperator 0x55a77486b228 <line:53:6, col:39> 'int' lvalue '='
|       |-MemberExpr 0x55a77486b0d8 <col:6, col:12> 'int' lvalue ->_schedpos1 0x55a7748475a8
|       | `-ImplicitCastExpr 0x55a77486b0c0 <col:6, col:9> 'Timer *' <LValueToRValue>
|       |   `-MemberExpr 0x55a77486b090 <col:6, col:9> 'Timer *' lvalue ->t 0x55a774852f48
|       |     `-ImplicitCastExpr 0x55a77486b078 <col:6> 'TimerSet::heap_element *' <LValueToRValue>
|       |       `-DeclRefExpr 0x55a77486b058 <col:6> 'TimerSet::heap_element *' lvalue ParmVar 0x55a7748537a0 't' 'TimerSet::heap_element *'
|       `-ImplicitCastExpr 0x55a77486b210 <col:25, col:39> 'int' <IntegralCast>
|         `-BinaryOperator 0x55a77486b1f0 <col:25, col:39> 'long' '+'
|           |-ParenExpr 0x55a77486b198 <col:25, col:35> 'long'
|           | `-BinaryOperator 0x55a77486b178 <col:26, col:30> 'long' '-'
|           |   |-ImplicitCastExpr 0x55a77486b148 <col:26> 'TimerSet::heap_element *' <LValueToRValue>
|           |   | `-DeclRefExpr 0x55a77486b108 <col:26> 'TimerSet::heap_element *' lvalue ParmVar 0x55a7748537a0 't' 'TimerSet::heap_element *'
|           |   `-ImplicitCastExpr 0x55a77486b160 <col:30> 'TimerSet::heap_element *' <LValueToRValue>
|           |     `-DeclRefExpr 0x55a77486b128 <col:30> 'TimerSet::heap_element *' lvalue ParmVar 0x55a774853728 'begin' 'TimerSet::heap_element *'
|           `-ImplicitCastExpr 0x55a77486b1d8 <col:39> 'long' <IntegralCast>
|             `-IntegerLiteral 0x55a77486b1b8 <col:39> 'int' 1
|-FieldDecl 0x55a7748539a0 <line:58:5, col:15> col:15 referenced _timer_expiry 'Timestamp'
| `-AlignedAttr 0x55a774853a10 <col:44, col:53> aligned
|   `-ConstantExpr 0x55a7748539f0 <col:52> 'int' Int: 8
|     `-IntegerLiteral 0x55a774853970 <col:52> 'int' 8
|-FieldDecl 0x55a774853a88 <line:60:5, col:14> col:14 referenced _max_timer_stride 'unsigned int'
|-FieldDecl 0x55a774853af0 <line:61:5, col:14> col:14 referenced _timer_stride 'unsigned int'
|-FieldDecl 0x55a774853b58 <line:62:5, col:14> col:14 _timer_count 'unsigned int'
|-FieldDecl 0x55a77485ed90 <line:63:5, col:26> col:26 referenced _timer_heap 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>'
|-FieldDecl 0x55a774869b10 <line:64:5, col:21> col:21 _timer_runchunk 'Vector<Timer *>':'Vector<Timer *>'
|-FieldDecl 0x55a774869b70 <line:65:5, col:20> col:20 _timer_lock 'SimpleSpinlock'
|-FieldDecl 0x55a774869bd0 <line:71:5, col:15> col:15 _timer_check 'Timestamp'
|-FieldDecl 0x55a774869c30 <line:72:5, col:14> col:14 _timer_check_reports 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55a774869d20 <line:74:5, col:38> col:17 run_one_timer 'void (Timer *)' inline
| `-ParmVarDecl 0x55a774869c90 <col:31, col:37> col:38 'Timer *'
|-CXXMethodDecl 0x55a774869de8 <line:76:5, line:81:5> line:76:10 set_timer_expiry 'void ()'
| `-CompoundStmt 0x55a77486b6a0 <col:29, line:81:5>
|   `-IfStmt 0x55a77486b678 <line:77:2, line:80:32> has_else
|     |-ImplicitCastExpr 0x55a77486b330 <line:77:6, col:23> 'bool' <IntegralToBoolean>
|     | `-CXXMemberCallExpr 0x55a77486b2d0 <col:6, col:23> 'Vector::size_type':'int'
|     |   `-MemberExpr 0x55a77486b2a0 <col:6, col:18> '<bound member function type>' .size 0x55a77485be78
|     |     `-ImplicitCastExpr 0x55a77486b318 <col:6> 'const Vector<TimerSet::heap_element>' lvalue <NoOp>
|     |       `-MemberExpr 0x55a77486b270 <col:6> 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>' lvalue ->_timer_heap 0x55a77485ed90
|     |         `-CXXThisExpr 0x55a77486b260 <col:6> 'TimerSet *' implicit this
|     |-CXXOperatorCallExpr 0x55a77486b520 <line:78:6, col:50> 'Timestamp' lvalue
|     | |-ImplicitCastExpr 0x55a77486b508 <col:20> 'Timestamp &(*)(const Timestamp &) noexcept' <FunctionToPointerDecay>
|     | | `-DeclRefExpr 0x55a77486b4e8 <col:20> 'Timestamp &(const Timestamp &) noexcept' lvalue CXXMethod 0x55a774482508 'operator=' 'Timestamp &(const Timestamp &) noexcept'
|     | |-MemberExpr 0x55a77486b358 <col:6> 'Timestamp' lvalue ->_timer_expiry 0x55a7748539a0
|     | | `-CXXThisExpr 0x55a77486b348 <col:6> 'TimerSet *' implicit this
|     | `-ImplicitCastExpr 0x55a77486b4d0 <col:22, col:50> 'const Timestamp' lvalue <NoOp>
|     |   `-MemberExpr 0x55a77486b4a0 <col:22, col:50> 'Timestamp' lvalue .expiry_s 0x55a774852ee8
|     |     `-CXXMemberCallExpr 0x55a77486b478 <col:22, col:48> 'TimerSet::heap_element':'TimerSet::heap_element' lvalue
|     |       |-MemberExpr 0x55a77486b448 <col:22, col:34> '<bound member function type>' .unchecked_at 0x55a77485cf18
|     |       | `-MemberExpr 0x55a77486b398 <col:22> 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>' lvalue ->_timer_heap 0x55a77485ed90
|     |       |   `-CXXThisExpr 0x55a77486b388 <col:22> 'TimerSet *' implicit this
|     |       `-IntegerLiteral 0x55a77486b428 <col:47> 'int' 0
|     `-ExprWithCleanups 0x55a77486b660 <line:80:6, col:32> 'Timestamp' lvalue
|       `-CXXOperatorCallExpr 0x55a77486b628 <col:6, col:32> 'Timestamp' lvalue
|         |-ImplicitCastExpr 0x55a77486b610 <col:20> 'Timestamp &(*)(Timestamp &&) noexcept' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x55a77486b5f0 <col:20> 'Timestamp &(Timestamp &&) noexcept' lvalue CXXMethod 0x55a7744829b8 'operator=' 'Timestamp &(Timestamp &&) noexcept'
|         |-MemberExpr 0x55a77486b568 <col:6> 'Timestamp' lvalue ->_timer_expiry 0x55a7748539a0
|         | `-CXXThisExpr 0x55a77486b558 <col:6> 'TimerSet *' implicit this
|         `-MaterializeTemporaryExpr 0x55a77486b5d8 <col:22, col:32> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55a77486b5a8 <col:22, col:32> 'Timestamp' 'void ()'
|-CXXMethodDecl 0x55a774869f28 <line:82:5, col:37> col:10 check_timer_expiry 'void (Timer *)'
| `-ParmVarDecl 0x55a774869e98 <col:29, col:36> col:36 t 'Timer *'
|-CXXMethodDecl 0x55a774869ff0 <line:84:5, col:29> col:17 used lock_timers 'void ()' inline
|-CXXMethodDecl 0x55a77486a0b0 <line:85:5, col:37> col:17 attempt_lock_timers 'bool ()' inline
|-CXXMethodDecl 0x55a77486a170 <line:86:5, col:31> col:17 used unlock_timers 'void ()' inline
|-FriendDecl 0x55a77486a260 <line:88:5, col:18> col:12 'class Timer':'Timer'
|-CXXConstructorDecl 0x55a77486a2c8 <line:12:7> col:7 implicit TimerSet 'void (const TimerSet &)' inline default noexcept-unevaluated 0x55a77486a2c8
| `-ParmVarDecl 0x55a77486a3d8 <col:7> col:7 'const TimerSet &'
|-CXXConstructorDecl 0x55a77486a478 <col:7> col:7 implicit TimerSet 'void (TimerSet &&)' inline default noexcept-unevaluated 0x55a77486a478
| `-ParmVarDecl 0x55a77486a588 <col:7> col:7 'TimerSet &&'
|-CXXMethodDecl 0x55a77486a628 <col:7> col:7 implicit operator= 'TimerSet &(const TimerSet &)' inline default noexcept-unevaluated 0x55a77486a628
| `-ParmVarDecl 0x55a77486a738 <col:7> col:7 'const TimerSet &'
|-CXXMethodDecl 0x55a77486a958 <col:7> col:7 implicit operator= 'TimerSet &(TimerSet &&)' inline default noexcept-unevaluated 0x55a77486a958
| `-ParmVarDecl 0x55a77486aa68 <col:7> col:7 'TimerSet &&'
`-CXXDestructorDecl 0x55a77486aaf0 <col:7> col:7 implicit ~TimerSet 'void ()' inline default noexcept-unevaluated 0x55a77486aaf0

Layout: <CGRecordLayout
  LLVMType:%class.TimerSet = type <{ %class.Timestamp, i32, i32, i32, [4 x i8], %class.Vector, %class.Vector.0, %class.SimpleSpinlock, [7 x i8], %class.Timestamp, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.TimerSet.base = type <{ %class.Timestamp, i32, i32, i32, [4 x i8], %class.Vector, %class.Vector.0, %class.SimpleSpinlock, [7 x i8], %class.Timestamp, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55a7748a8528 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'pollfd'
|-CXXRecordDecl 0x55a7748a8738 prev 0x55a7748a8528 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55a7748a9810 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<pollfd>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x55a7748a97c0 'typename array_memory<pollfd>::type' sugar
|   `-TypedefType 0x55a7748a97a0 'conditional<true, sized_array_memory<8>, typed_array_memory<pollfd> >::type' sugar
|     |-Typedef 0x55a7748a9650 'type'
|     `-SubstTemplateTypeParmType 0x55a77485fda0 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x55a77453eec0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55a77453ee68 'T'
|       `-RecordType 0x55a77485f8f0 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x55a77485f808 'sized_array_memory'
|-FieldDecl 0x55a7748a9910 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<pollfd>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x55a7748a9960 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55a7748a9998 <line:118:5, col:15> col:15 value_type 'pollfd':'pollfd'
| `-SubstTemplateTypeParmType 0x55a7748a87d0 'pollfd' sugar
|   |-TemplateTypeParmType 0x55a774576bb0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55a774576b58 'T'
|   `-RecordType 0x55a7748a65e0 'pollfd'
|     `-CXXRecord 0x55a7748a6550 'pollfd'
|-TypedefDecl 0x55a7748a9a58 <line:119:5, col:16> col:16 reference 'pollfd &'
| `-LValueReferenceType 0x55a7748a9a20 'pollfd &'
|   `-SubstTemplateTypeParmType 0x55a7748a87d0 'pollfd' sugar
|     |-TemplateTypeParmType 0x55a774576bb0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55a774576b58 'T'
|     `-RecordType 0x55a7748a65e0 'pollfd'
|       `-CXXRecord 0x55a7748a6550 'pollfd'
|-TypedefDecl 0x55a7748a9b18 <line:120:5, col:22> col:22 const_reference 'const pollfd &'
| `-LValueReferenceType 0x55a7748a9ae0 'const pollfd &'
|   `-QualType 0x55a7748a87d1 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x55a7748a87d0 'pollfd' sugar
|       |-TemplateTypeParmType 0x55a774576bb0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55a774576b58 'T'
|       `-RecordType 0x55a7748a65e0 'pollfd'
|         `-CXXRecord 0x55a7748a6550 'pollfd'
|-TypedefDecl 0x55a7748a9ba8 <line:121:5, col:16> col:16 pointer 'pollfd *'
| `-PointerType 0x55a7748a9b70 'pollfd *'
|   `-SubstTemplateTypeParmType 0x55a7748a87d0 'pollfd' sugar
|     |-TemplateTypeParmType 0x55a774576bb0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55a774576b58 'T'
|     `-RecordType 0x55a7748a65e0 'pollfd'
|       `-CXXRecord 0x55a7748a6550 'pollfd'
|-TypedefDecl 0x55a7748a9c68 <line:122:5, col:22> col:22 const_pointer 'const pollfd *'
| `-PointerType 0x55a7748a9c30 'const pollfd *'
|   `-QualType 0x55a7748a87d1 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x55a7748a87d0 'pollfd' sugar
|       |-TemplateTypeParmType 0x55a774576bb0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55a774576b58 'T'
|       `-RecordType 0x55a7748a65e0 'pollfd'
|         `-CXXRecord 0x55a7748a6550 'pollfd'
|-TypedefDecl 0x55a7748aa870 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<pollfd>::type':'pollfd'
| `-ElaboratedType 0x55a7748aa820 'typename fast_argument<pollfd>::type' sugar
|   `-TypedefType 0x55a7748aa800 'fast_argument<pollfd, false>::type' sugar
|     |-Typedef 0x55a7748aa790 'type'
|     `-SubstTemplateTypeParmType 0x55a7748aa520 'pollfd' sugar
|       |-TemplateTypeParmType 0x55a774549cc0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55a774549c70 'T'
|       `-RecordType 0x55a7748a65e0 'pollfd'
|         `-CXXRecord 0x55a7748a6550 'pollfd'
|-TypedefDecl 0x55a7748aa8d8 <line:126:5, col:22> col:22 const_access_type 'const pollfd &'
| `-LValueReferenceType 0x55a7748a9ae0 'const pollfd &'
|   `-QualType 0x55a7748a87d1 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x55a7748a87d0 'pollfd' sugar
|       |-TemplateTypeParmType 0x55a774576bb0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55a774576b58 'T'
|       `-RecordType 0x55a7748a65e0 'pollfd'
|         `-CXXRecord 0x55a7748a6550 'pollfd'
|-TypedefDecl 0x55a7748aa930 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55a774274370 'int'
|-TypedefDecl 0x55a7748aa998 <line:130:5, col:16> col:16 iterator 'pollfd *'
| `-PointerType 0x55a7748a9b70 'pollfd *'
|   `-SubstTemplateTypeParmType 0x55a7748a87d0 'pollfd' sugar
|     |-TemplateTypeParmType 0x55a774576bb0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55a774576b58 'T'
|     `-RecordType 0x55a7748a65e0 'pollfd'
|       `-CXXRecord 0x55a7748a6550 'pollfd'
|-TypedefDecl 0x55a7748aaa00 <line:131:5, col:22> col:22 const_iterator 'const pollfd *'
| `-PointerType 0x55a7748a9c30 'const pollfd *'
|   `-QualType 0x55a7748a87d1 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x55a7748a87d0 'pollfd' sugar
|       |-TemplateTypeParmType 0x55a774576bb0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55a774576b58 'T'
|       `-RecordType 0x55a7748a65e0 'pollfd'
|         `-CXXRecord 0x55a7748a6550 'pollfd'
|-EnumDecl 0x55a7748aaa58 <line:134:5> col:5
| `-EnumConstantDecl 0x55a7748aab50 <col:12, col:40> col:12 RESERVE_GROW 'Vector<pollfd>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55a7748aab30 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55a774578238 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55a774578210 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55a7745781f0 <col:40> 'int' 1
|-CXXConstructorDecl 0x55a7748aabd8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55a7748aae68 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x55a7748aac90 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55a7748aad30 <col:41, col:61> col:61 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXConstructorDecl 0x55a7748ab128 <line:139:5, col:37> col:12 Vector 'void (const Vector<pollfd> &)' inline
| `-ParmVarDecl 0x55a7748ab010 <col:19, col:36> col:36 x 'const Vector<pollfd> &'
|-CXXConstructorDecl 0x55a7748ab3e8 <line:141:5, col:32> col:12 Vector 'void (Vector<pollfd> &&)' inline
| `-ParmVarDecl 0x55a7748ab2d0 <col:19, col:31> col:31 x 'Vector<pollfd> &&'
|-CXXMethodDecl 0x55a7748ab730 <line:144:5, col:51> col:23 operator= 'Vector<pollfd> &(const Vector<pollfd> &)' inline
| `-ParmVarDecl 0x55a7748ab610 <col:33, col:50> col:50 x 'const Vector<pollfd> &'
|-CXXMethodDecl 0x55a7748aba40 <line:146:5, col:46> col:23 operator= 'Vector<pollfd> &(Vector<pollfd> &&)' inline
| `-ParmVarDecl 0x55a7748ab920 <col:33, col:45> col:45 x 'Vector<pollfd> &&'
|-CXXMethodDecl 0x55a7748abd30 <line:148:5, col:70> col:23 assign 'Vector<pollfd> &(Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x55a7748abb78 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55a7748abbf0 <col:43, col:69> col:63 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x55a7748abe88 <line:150:5, col:55> col:49 begin 'Vector<pollfd>::iterator ()'
| |-NoInlineAttr 0x55a7748abf68 <col:20> Inherited
| `-OptimizeNoneAttr 0x55a7748abfc0 <col:30> Inherited
|-CXXMethodDecl 0x55a7748ac008 <line:151:5, col:53> col:49 end 'Vector<pollfd>::iterator ()'
| |-NoInlineAttr 0x55a7748ac0b8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55a7748ac110 <col:30> Inherited
|-CXXMethodDecl 0x55a7748ac1d8 <line:152:5, col:63> col:55 begin 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x55a7748ac288 <col:20> Inherited
| `-OptimizeNoneAttr 0x55a7748ac2e0 <col:30> Inherited
|-CXXMethodDecl 0x55a7748ac328 <line:153:5, col:61> col:55 end 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x55a7748ac3d8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55a7748ac430 <col:30> Inherited
|-CXXMethodDecl 0x55a7748ac478 <line:154:5, col:64> col:55 cbegin 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x55a7748ac528 <col:20> Inherited
| `-OptimizeNoneAttr 0x55a7748ac580 <col:30> Inherited
|-CXXMethodDecl 0x55a7748ac5c8 <line:155:5, col:62> col:55 cend 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x55a7748ac678 <col:20> Inherited
| `-OptimizeNoneAttr 0x55a7748ac6d0 <col:30> Inherited
|-CXXMethodDecl 0x55a7748ac6f8 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55a7748ac7a8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55a7748ac858 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55a7748aca18 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x55a7748ac908 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55a7748ac980 <col:37, col:63> col:57 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x55a7748acb68 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55a7748acad8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55a7748acd18 <line:163:5, col:65> col:43 operator[] 'pollfd &(Vector::size_type)'
| |-ParmVarDecl 0x55a7748acc20 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55a7748acdd0 <col:20>
| `-OptimizeNoneAttr 0x55a7748ace28 <col:30>
|-CXXMethodDecl 0x55a7748acf48 <line:164:5, col:73> col:49 operator[] 'const pollfd &(Vector::size_type) const'
| |-ParmVarDecl 0x55a7748ace50 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55a7748ad000 <col:20>
| `-OptimizeNoneAttr 0x55a7748ad058 <col:30>
|-CXXMethodDecl 0x55a7748ad110 <line:165:5, col:29> col:15 at 'pollfd &(Vector::size_type)' inline
| `-ParmVarDecl 0x55a7748ad080 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55a7748ad258 <line:166:5, col:37> col:21 at 'const pollfd &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55a7748ad1c8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55a7748ad388 <line:167:5, col:21> col:15 front 'pollfd &()' inline
|-CXXMethodDecl 0x55a7748ad4b8 <line:168:5, col:29> col:21 front 'const pollfd &() const' inline
|-CXXMethodDecl 0x55a7748ad588 <line:169:5, col:20> col:15 back 'pollfd &()' inline
|-CXXMethodDecl 0x55a7748ad658 <line:170:5, col:28> col:21 back 'const pollfd &() const' inline
|-CXXMethodDecl 0x55a7748ad798 <line:172:5, col:39> col:15 unchecked_at 'pollfd &(Vector::size_type)' inline
| `-ParmVarDecl 0x55a7748ad708 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55a7748ad8e0 <line:173:5, col:47> col:21 unchecked_at 'const pollfd &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55a7748ad850 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55a7748ada28 <line:174:5, col:59> col:15 at_u 'pollfd &(Vector::size_type)' inline
| |-ParmVarDecl 0x55a7748ad998 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55a7748adae0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55a7748adbe0 <line:175:5, col:71> col:21 at_u 'const pollfd &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55a7748adb50 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55a7748adc98 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55a7748add58 <line:177:5, col:20> col:15 data 'pollfd *()' inline
|-CXXMethodDecl 0x55a7748ade58 <line:178:5, col:28> col:21 data 'const pollfd *() const' inline
|-CXXMethodDecl 0x55a7748ae008 <line:180:5, col:48> col:17 push_back 'void (Vector<pollfd>::value_argument_type)' inline
| `-ParmVarDecl 0x55a7748adf18 <col:27, col:47> col:47 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-FunctionTemplateDecl 0x55a7748ae7c8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55a7748ae0c0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<pollfd>':'fast_argument<pollfd, false>'
| `-CXXMethodDecl 0x55a7748ae728 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (pollfd &&)' inline
|   `-ParmVarDecl 0x55a7748ae628 <col:58, col:62> col:62 v 'pollfd &&'
|-CXXMethodDecl 0x55a7748ae8a8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55a7748ae9f8 <line:186:5, col:49> col:17 push_front 'void (Vector<pollfd>::value_argument_type)' inline
| `-ParmVarDecl 0x55a7748ae968 <col:28, col:48> col:48 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x55a7748aeab0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55a7748aecf8 <line:189:5, col:62> col:21 insert 'Vector<pollfd>::iterator (Vector<pollfd>::iterator, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x55a7748aeb70 <col:28, col:37> col:37 it 'Vector<pollfd>::iterator':'pollfd *'
| `-ParmVarDecl 0x55a7748aebe8 <col:41, col:61> col:61 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x55a7748aeeb8 <line:190:5, col:38> col:21 erase 'Vector<pollfd>::iterator (Vector<pollfd>::iterator)' inline
| `-ParmVarDecl 0x55a7748aedc8 <col:27, col:36> col:36 it 'Vector<pollfd>::iterator':'pollfd *'
|-CXXMethodDecl 0x55a7748af108 <line:191:5, col:49> col:21 erase 'Vector<pollfd>::iterator (Vector<pollfd>::iterator, Vector<pollfd>::iterator)' inline
| |-ParmVarDecl 0x55a7748aef80 <col:27, col:36> col:36 a 'Vector<pollfd>::iterator':'pollfd *'
| `-ParmVarDecl 0x55a7748aeff8 <col:39, col:48> col:48 b 'Vector<pollfd>::iterator':'pollfd *'
|-CXXMethodDecl 0x55a7748af1c8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55a7748af428 <line:195:5, col:34> col:17 swap 'void (Vector<pollfd> &)' inline
| `-ParmVarDecl 0x55a7748af330 <col:22, col:33> col:33 x 'Vector<pollfd> &'
`-CXXDestructorDecl 0x55a7748af4f8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55a7748af4f8

Layout: <CGRecordLayout
  LLVMType:%class.Vector.3 = type { %class.vector_memory.1 }
  NonVirtualBaseLLVMType:%class.Vector.3 = type { %class.vector_memory.1 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55a7748b0ae0 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<24>'
|-CXXRecordDecl 0x55a7748b0cb8 prev 0x55a7748b0ae0 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55a7748b0d48 <col:46, col:52> col:46 public
|-TypedefDecl 0x55a7748b0d70 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55a774274370 'int'
|-TypedefDecl 0x55a7748b29b0 <line:13:5, col:31> col:31 type 'typename sized_array_memory<24>::type':'char_array<24>'
| `-ElaboratedType 0x55a7748b2960 'typename sized_array_memory<24>::type' sugar
|   `-TypedefType 0x55a7748b1220 'sized_array_memory<24>::type' sugar
|     |-Typedef 0x55a7748b1120 'type'
|     `-TemplateSpecializationType 0x55a7748b10b0 'char_array<24UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x55a7748b0f90 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 24
|       |   `-SubstNonTypeTemplateParmExpr 0x55a7748b0f70 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x55a7748b0f50 <col:24> 'unsigned long' 24
|       `-RecordType 0x55a7748b1090 'char_array<24>'
|         `-ClassTemplateSpecialization 0x55a7748b0fb0 'char_array'
|-TypedefDecl 0x55a7748b2a68 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<24> >::type *'
| `-PointerType 0x55a7748b2a30 'vector_memory<sized_array_memory<24> >::type *'
|   `-TypedefType 0x55a7748b2a10 'vector_memory<sized_array_memory<24> >::type' sugar
|     |-Typedef 0x55a7748b29b0 'type'
|     `-ElaboratedType 0x55a7748b2960 'typename sized_array_memory<24>::type' sugar
|       `-TypedefType 0x55a7748b1220 'sized_array_memory<24>::type' sugar
|         |-Typedef 0x55a7748b1120 'type'
|         `-TemplateSpecializationType 0x55a7748b10b0 'char_array<24UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x55a7748b0f90 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 24
|           |   `-SubstNonTypeTemplateParmExpr 0x55a7748b0f70 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x55a7748b0f50 <col:24> 'unsigned long' 24
|           `-RecordType 0x55a7748b1090 'char_array<24>'
|             `-ClassTemplateSpecialization 0x55a7748b0fb0 'char_array'
|-CXXMethodDecl 0x55a7748b2be8 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<24> >::type *) const' inline
| `-ParmVarDecl 0x55a7748b2af8 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXConstructorDecl 0x55a7748b2cd8 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55a7748b2db8 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x55a7748b2db8
|-CXXMethodDecl 0x55a7748b3088 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<24> > &)'
| `-ParmVarDecl 0x55a7748b2f90 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<24> > &'
|-CXXMethodDecl 0x55a7748b32c8 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x55a7748b3140 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55a7748b31b8 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55a7748b3498 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x55a7748b3388 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55a7748b3400 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55a7748b35f8 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<24> >::iterator ()'
|-CXXMethodDecl 0x55a7748b36c8 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<24> >::iterator ()'
|-CXXMethodDecl 0x55a7748b3918 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<24> >::iterator (vector_memory<sized_array_memory<24> >::iterator, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x55a7748b3788 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
| `-ParmVarDecl 0x55a7748b3800 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55a7748b3b78 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<24> >::iterator (vector_memory<sized_array_memory<24> >::iterator, vector_memory<sized_array_memory<24> >::iterator)'
| |-ParmVarDecl 0x55a7748b39e8 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
| `-ParmVarDecl 0x55a7748b3a60 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55a7748b3d38 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<24> >::type *)' inline
| `-ParmVarDecl 0x55a7748b3c48 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55a7748b3ef8 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<24> >::type *)' inline
| `-ParmVarDecl 0x55a7748b3e00 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55a7748b3fb0 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55a7748b4060 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55a7748b4298 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x55a7748b4110 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55a7748b4188 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55a7748b4538 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<24> > &)'
| `-ParmVarDecl 0x55a7748b4440 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<24> > &'
|-FieldDecl 0x55a7748b4600 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<24> >::type *'
|-FieldDecl 0x55a7748b4650 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55a7748b46a0 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.5 = type { %struct.char_array.6*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.5 = type { %struct.char_array.6*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55a7748af640 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'SelectSet::SelectorInfo'
|-CXXRecordDecl 0x55a7748af848 prev 0x55a7748af640 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55a7748b0a50 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<SelectorInfo>::type':'sized_array_memory<24>'
| `-ElaboratedType 0x55a7748b0a00 'typename array_memory<SelectorInfo>::type' sugar
|   `-TypedefType 0x55a7748b09e0 'conditional<true, sized_array_memory<24>, typed_array_memory<SelectSet::SelectorInfo> >::type' sugar
|     |-Typedef 0x55a7748b0890 'type'
|     `-SubstTemplateTypeParmType 0x55a7748b06b0 'sized_array_memory<24>' sugar
|       |-TemplateTypeParmType 0x55a77453eec0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55a77453ee68 'T'
|       `-RecordType 0x55a7748b0200 'sized_array_memory<24>'
|         `-ClassTemplateSpecialization 0x55a7748b0120 'sized_array_memory'
|-FieldDecl 0x55a7748b46f0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<SelectSet::SelectorInfo>::array_memory_type>':'vector_memory<sized_array_memory<24> >' mutable
|-AccessSpecDecl 0x55a7748b4740 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55a7748b4778 <line:118:5, col:15> col:15 value_type 'SelectSet::SelectorInfo':'SelectSet::SelectorInfo'
| `-SubstTemplateTypeParmType 0x55a7748af8e0 'SelectSet::SelectorInfo' sugar
|   |-TemplateTypeParmType 0x55a774576bb0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55a774576b58 'T'
|   `-RecordType 0x55a7748a8090 'SelectSet::SelectorInfo'
|     `-CXXRecord 0x55a7748a8000 'SelectorInfo'
|-TypedefDecl 0x55a7748b4838 <line:119:5, col:16> col:16 reference 'SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x55a7748b4800 'SelectSet::SelectorInfo &'
|   `-SubstTemplateTypeParmType 0x55a7748af8e0 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x55a774576bb0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55a774576b58 'T'
|     `-RecordType 0x55a7748a8090 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x55a7748a8000 'SelectorInfo'
|-TypedefDecl 0x55a7748b48f8 <line:120:5, col:22> col:22 const_reference 'const SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x55a7748b48c0 'const SelectSet::SelectorInfo &'
|   `-QualType 0x55a7748af8e1 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x55a7748af8e0 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x55a774576bb0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55a774576b58 'T'
|       `-RecordType 0x55a7748a8090 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x55a7748a8000 'SelectorInfo'
|-TypedefDecl 0x55a7748b4988 <line:121:5, col:16> col:16 pointer 'SelectSet::SelectorInfo *'
| `-PointerType 0x55a7748b4950 'SelectSet::SelectorInfo *'
|   `-SubstTemplateTypeParmType 0x55a7748af8e0 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x55a774576bb0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55a774576b58 'T'
|     `-RecordType 0x55a7748a8090 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x55a7748a8000 'SelectorInfo'
|-TypedefDecl 0x55a7748b4a48 <line:122:5, col:22> col:22 const_pointer 'const SelectSet::SelectorInfo *'
| `-PointerType 0x55a7748b4a10 'const SelectSet::SelectorInfo *'
|   `-QualType 0x55a7748af8e1 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x55a7748af8e0 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x55a774576bb0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55a774576b58 'T'
|       `-RecordType 0x55a7748a8090 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x55a7748a8000 'SelectorInfo'
|-TypedefDecl 0x55a7748b56a0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<SelectorInfo>::type':'const SelectSet::SelectorInfo &'
| `-ElaboratedType 0x55a7748b5650 'typename fast_argument<SelectorInfo>::type' sugar
|   `-TypedefType 0x55a7748b5630 'fast_argument<SelectSet::SelectorInfo, true>::type' sugar
|     |-Typedef 0x55a7748b5568 'type'
|     `-LValueReferenceType 0x55a7748b5530 'const SelectSet::SelectorInfo &'
|       `-QualType 0x55a7748b52d1 'const SelectSet::SelectorInfo' const
|         `-SubstTemplateTypeParmType 0x55a7748b52d0 'SelectSet::SelectorInfo' sugar
|           |-TemplateTypeParmType 0x55a774549590 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55a774549538 'T'
|           `-RecordType 0x55a7748a8090 'SelectSet::SelectorInfo'
|             `-CXXRecord 0x55a7748a8000 'SelectorInfo'
|-TypedefDecl 0x55a7748b5708 <line:126:5, col:22> col:22 const_access_type 'const SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x55a7748b48c0 'const SelectSet::SelectorInfo &'
|   `-QualType 0x55a7748af8e1 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x55a7748af8e0 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x55a774576bb0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55a774576b58 'T'
|       `-RecordType 0x55a7748a8090 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x55a7748a8000 'SelectorInfo'
|-TypedefDecl 0x55a7748b5760 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55a774274370 'int'
|-TypedefDecl 0x55a7748b57c8 <line:130:5, col:16> col:16 iterator 'SelectSet::SelectorInfo *'
| `-PointerType 0x55a7748b4950 'SelectSet::SelectorInfo *'
|   `-SubstTemplateTypeParmType 0x55a7748af8e0 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x55a774576bb0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55a774576b58 'T'
|     `-RecordType 0x55a7748a8090 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x55a7748a8000 'SelectorInfo'
|-TypedefDecl 0x55a7748b5830 <line:131:5, col:22> col:22 const_iterator 'const SelectSet::SelectorInfo *'
| `-PointerType 0x55a7748b4a10 'const SelectSet::SelectorInfo *'
|   `-QualType 0x55a7748af8e1 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x55a7748af8e0 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x55a774576bb0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55a774576b58 'T'
|       `-RecordType 0x55a7748a8090 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x55a7748a8000 'SelectorInfo'
|-EnumDecl 0x55a7748b5888 <line:134:5> col:5
| `-EnumConstantDecl 0x55a7748b5980 <col:12, col:40> col:12 RESERVE_GROW 'Vector<SelectSet::SelectorInfo>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55a7748b5960 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55a774578238 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55a774578210 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55a7745781f0 <col:40> 'int' 1
|-CXXConstructorDecl 0x55a7748b5a08 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55a7748b5c98 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x55a7748b5ac0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55a7748b5b60 <col:41, col:61> col:61 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXConstructorDecl 0x55a7748b5f58 <line:139:5, col:37> col:12 Vector 'void (const Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x55a7748b5e40 <col:19, col:36> col:36 x 'const Vector<SelectSet::SelectorInfo> &'
|-CXXConstructorDecl 0x55a7748b6218 <line:141:5, col:32> col:12 Vector 'void (Vector<SelectSet::SelectorInfo> &&)' inline
| `-ParmVarDecl 0x55a7748b6100 <col:19, col:31> col:31 x 'Vector<SelectSet::SelectorInfo> &&'
|-CXXMethodDecl 0x55a7748b6560 <line:144:5, col:51> col:23 operator= 'Vector<SelectSet::SelectorInfo> &(const Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x55a7748b6440 <col:33, col:50> col:50 x 'const Vector<SelectSet::SelectorInfo> &'
|-CXXMethodDecl 0x55a7748b6870 <line:146:5, col:46> col:23 operator= 'Vector<SelectSet::SelectorInfo> &(Vector<SelectSet::SelectorInfo> &&)' inline
| `-ParmVarDecl 0x55a7748b6750 <col:33, col:45> col:45 x 'Vector<SelectSet::SelectorInfo> &&'
|-CXXMethodDecl 0x55a7748b6b60 <line:148:5, col:70> col:23 assign 'Vector<SelectSet::SelectorInfo> &(Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x55a7748b69a8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55a7748b6a20 <col:43, col:69> col:63 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x55a7748b6cb8 <line:150:5, col:55> col:49 begin 'Vector<SelectSet::SelectorInfo>::iterator ()'
| |-NoInlineAttr 0x55a7748b6d98 <col:20> Inherited
| `-OptimizeNoneAttr 0x55a7748b6df0 <col:30> Inherited
|-CXXMethodDecl 0x55a7748b6e38 <line:151:5, col:53> col:49 end 'Vector<SelectSet::SelectorInfo>::iterator ()'
| |-NoInlineAttr 0x55a7748b6ee8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55a7748b6f40 <col:30> Inherited
|-CXXMethodDecl 0x55a7748b7008 <line:152:5, col:63> col:55 begin 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x55a7748b70b8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55a7748b7110 <col:30> Inherited
|-CXXMethodDecl 0x55a7748b7158 <line:153:5, col:61> col:55 end 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x55a7748b7208 <col:20> Inherited
| `-OptimizeNoneAttr 0x55a7748b7260 <col:30> Inherited
|-CXXMethodDecl 0x55a7748b72a8 <line:154:5, col:64> col:55 cbegin 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x55a7748b7358 <col:20> Inherited
| `-OptimizeNoneAttr 0x55a7748b73b0 <col:30> Inherited
|-CXXMethodDecl 0x55a7748b73f8 <line:155:5, col:62> col:55 cend 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x55a7748b74a8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55a7748b7500 <col:30> Inherited
|-CXXMethodDecl 0x55a7748b7528 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55a7748b75d8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55a7748b7688 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55a7748b7848 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x55a7748b7738 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55a7748b77b0 <col:37, col:63> col:57 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x55a7748b7998 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55a7748b7908 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55a7748b7b48 <line:163:5, col:65> col:43 operator[] 'SelectSet::SelectorInfo &(Vector::size_type)'
| |-ParmVarDecl 0x55a7748b7a50 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55a7748b7c00 <col:20>
| `-OptimizeNoneAttr 0x55a7748b7c58 <col:30>
|-CXXMethodDecl 0x55a7748b7d78 <line:164:5, col:73> col:49 operator[] 'const SelectSet::SelectorInfo &(Vector::size_type) const'
| |-ParmVarDecl 0x55a7748b7c80 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55a7748b7e30 <col:20>
| `-OptimizeNoneAttr 0x55a7748b7e88 <col:30>
|-CXXMethodDecl 0x55a7748b7f40 <line:165:5, col:29> col:15 at 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| `-ParmVarDecl 0x55a7748b7eb0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55a7748b8088 <line:166:5, col:37> col:21 at 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55a7748b7ff8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55a7748b81b8 <line:167:5, col:21> col:15 front 'SelectSet::SelectorInfo &()' inline
|-CXXMethodDecl 0x55a7748b82e8 <line:168:5, col:29> col:21 front 'const SelectSet::SelectorInfo &() const' inline
|-CXXMethodDecl 0x55a7748b83b8 <line:169:5, col:20> col:15 back 'SelectSet::SelectorInfo &()' inline
|-CXXMethodDecl 0x55a7748b8488 <line:170:5, col:28> col:21 back 'const SelectSet::SelectorInfo &() const' inline
|-CXXMethodDecl 0x55a7748b85c8 <line:172:5, col:39> col:15 unchecked_at 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| `-ParmVarDecl 0x55a7748b8538 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55a7748b8710 <line:173:5, col:47> col:21 unchecked_at 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55a7748b8680 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55a7748b8858 <line:174:5, col:59> col:15 at_u 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| |-ParmVarDecl 0x55a7748b87c8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55a7748b8910 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55a7748b8a10 <line:175:5, col:71> col:21 at_u 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55a7748b8980 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55a7748b8ac8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55a7748b8b88 <line:177:5, col:20> col:15 data 'SelectSet::SelectorInfo *()' inline
|-CXXMethodDecl 0x55a7748b8c88 <line:178:5, col:28> col:21 data 'const SelectSet::SelectorInfo *() const' inline
|-CXXMethodDecl 0x55a7748b8e38 <line:180:5, col:48> col:17 push_back 'void (Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| `-ParmVarDecl 0x55a7748b8d48 <col:27, col:47> col:47 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-FunctionTemplateDecl 0x55a7748b95f8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55a7748b8ef0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<SelectSet::SelectorInfo>':'fast_argument<SelectSet::SelectorInfo, true>'
| `-CXXMethodDecl 0x55a7748b9558 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (SelectSet::SelectorInfo &&)' inline
|   `-ParmVarDecl 0x55a7748b9458 <col:58, col:62> col:62 v 'SelectSet::SelectorInfo &&'
|-CXXMethodDecl 0x55a7748b96d8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55a7748b9828 <line:186:5, col:49> col:17 push_front 'void (Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| `-ParmVarDecl 0x55a7748b9798 <col:28, col:48> col:48 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x55a7748b98e0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55a7748b9b28 <line:189:5, col:62> col:21 insert 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x55a7748b99a0 <col:28, col:37> col:37 it 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
| `-ParmVarDecl 0x55a7748b9a18 <col:41, col:61> col:61 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x55a7748b9ce8 <line:190:5, col:38> col:21 erase 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator)' inline
| `-ParmVarDecl 0x55a7748b9bf8 <col:27, col:36> col:36 it 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
|-CXXMethodDecl 0x55a7748b9f38 <line:191:5, col:49> col:21 erase 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator, Vector<SelectSet::SelectorInfo>::iterator)' inline
| |-ParmVarDecl 0x55a7748b9db0 <col:27, col:36> col:36 a 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
| `-ParmVarDecl 0x55a7748b9e28 <col:39, col:48> col:48 b 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
|-CXXMethodDecl 0x55a7748b9ff8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55a7748ba258 <line:195:5, col:34> col:17 swap 'void (Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x55a7748ba160 <col:22, col:33> col:33 x 'Vector<SelectSet::SelectorInfo> &'
`-CXXDestructorDecl 0x55a7748ba328 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55a7748ba328

Layout: <CGRecordLayout
  LLVMType:%class.Vector.4 = type { %class.vector_memory.5 }
  NonVirtualBaseLLVMType:%class.Vector.4 = type { %class.vector_memory.5 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55a7748a71e0 <../dummy_inc/click/selectset.hh:36:1, line:109:1> line:36:7 referenced class SelectSet definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55a7748a72f8 <col:1, col:7> col:7 implicit referenced class SelectSet
|-AccessSpecDecl 0x55a7748a7388 <col:19, col:25> col:19 public
|-CXXConstructorDecl 0x55a7748a7410 <line:38:5, col:15> col:5 SelectSet 'void ()'
|-CXXDestructorDecl 0x55a7748a7500 <line:39:5, col:16> col:5 ~SelectSet 'void ()' noexcept-unevaluated 0x55a7748a7500
|-CXXMethodDecl 0x55a7748a7600 <line:41:5, col:21> col:10 initialize 'void ()'
|-CXXMethodDecl 0x55a7748a78a0 <line:43:5, col:54> col:9 add_select 'int (int, Element *, int)'
| |-ParmVarDecl 0x55a7748a76b8 <col:20, col:24> col:24 fd 'int'
| |-ParmVarDecl 0x55a7748a7730 <col:28, col:37> col:37 element 'Element *'
| `-ParmVarDecl 0x55a7748a77b0 <col:46, col:50> col:50 mask 'int'
|-CXXMethodDecl 0x55a7748a7b10 <line:44:5, col:57> col:9 remove_select 'int (int, Element *, int)'
| |-ParmVarDecl 0x55a7748a7970 <col:23, col:27> col:27 fd 'int'
| |-ParmVarDecl 0x55a7748a79e8 <col:31, col:40> col:40 element 'Element *'
| `-ParmVarDecl 0x55a7748a7a68 <col:49, col:53> col:53 mask 'int'
|-CXXMethodDecl 0x55a7748a7c68 <line:46:5, col:42> col:10 run_selects 'void (RouterThread *)'
| `-ParmVarDecl 0x55a7748a7bd8 <col:22, col:36> col:36 thread 'RouterThread *'
|-CXXMethodDecl 0x55a7748a7d30 <line:47:5, line:50:5> line:47:17 used wake_immediate 'void ()' inline
| `-CompoundStmt 0x55a7748bba68 <col:34, line:50:5>
|   |-BinaryOperator 0x55a7748bb438 <line:48:2, col:23> 'volatile bool' lvalue '='
|   | |-MemberExpr 0x55a7748bb3f8 <col:2> 'volatile bool' lvalue ->_wake_pipe_pending 0x55a7748a84b8
|   | | `-CXXThisExpr 0x55a7748bb3e8 <col:2> 'SelectSet *' implicit this
|   | `-CXXBoolLiteralExpr 0x55a7748bb428 <col:23> 'bool' true
|   `-CallExpr 0x55a7748bba40 <line:49:2, col:43> 'void'
|     |-ImplicitCastExpr 0x55a7748bba28 <col:2> 'void (*)(long)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x55a7748bb9a8 <col:2> 'void (long)' lvalue Function 0x55a7748bb8a8 'ignore_result' 'void (long)' (FunctionTemplate 0x55a774539e68 'ignore_result')
|     `-CallExpr 0x55a7748bb650 <col:16, col:42> 'ssize_t':'long'
|       |-ImplicitCastExpr 0x55a7748bb638 <col:16> 'ssize_t (*)(int, const void *, size_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55a7748bb5b8 <col:16> 'ssize_t (int, const void *, size_t)' lvalue Function 0x55a77486e6c8 'write' 'ssize_t (int, const void *, size_t)'
|       |-ImplicitCastExpr 0x55a7748bb688 <col:22, col:34> 'int' <LValueToRValue>
|       | `-ArraySubscriptExpr 0x55a7748bb560 <col:22, col:34> 'int' lvalue
|       |   |-ImplicitCastExpr 0x55a7748bb548 <col:22> 'int *' <ArrayToPointerDecay>
|       |   | `-MemberExpr 0x55a7748bb4f8 <col:22> 'int [2]' lvalue ->_wake_pipe 0x55a7748a8458
|       |   |   `-CXXThisExpr 0x55a7748bb4e8 <col:22> 'SelectSet *' implicit this
|       |   `-IntegerLiteral 0x55a7748bb528 <col:33> 'int' 1
|       |-ImplicitCastExpr 0x55a7748bb6b8 <col:37> 'const void *' <BitCast>
|       | `-ImplicitCastExpr 0x55a7748bb6a0 <col:37> 'const char *' <ArrayToPointerDecay>
|       |   `-StringLiteral 0x55a7748bb580 <col:37> 'const char [1]' lvalue ""
|       `-ImplicitCastExpr 0x55a7748bb6d0 <col:41> 'size_t':'unsigned long' <IntegralCast>
|         `-IntegerLiteral 0x55a7748bb598 <col:41> 'int' 1
|-CXXMethodDecl 0x55a7748a7e70 <line:52:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x55a7748a7de0 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x55a7748a7f38 <line:54:5, col:23> col:17 fence 'void ()' inline
|-AccessSpecDecl 0x55a7748a7fd8 <line:56:3, col:10> col:3 private
|-CXXRecordDecl 0x55a7748a8000 <line:58:5, line:66:5> line:58:12 referenced struct SelectorInfo definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55a7748a8118 <col:5, col:12> col:12 implicit referenced struct SelectorInfo
| |-FieldDecl 0x55a7748a81b8 <line:59:2, col:11> col:11 read 'Element *'
| |-FieldDecl 0x55a7748a8218 <line:60:2, col:11> col:11 write 'Element *'
| |-FieldDecl 0x55a7748a8280 <line:61:2, col:6> col:6 pollfd 'int'
| `-CXXConstructorDecl 0x55a7748a8330 <line:62:2, line:65:2> line:62:2 SelectorInfo 'void ()'
|   |-CXXCtorInitializer Field 0x55a7748a81b8 'read' 'Element *'
|   | `-ImplicitCastExpr 0x55a7748bbac8 <line:63:13> 'Element *' <NullToPointer>
|   |   `-IntegerLiteral 0x55a7748bba88 <col:13> 'int' 0
|   |-CXXCtorInitializer Field 0x55a7748a8218 'write' 'Element *'
|   | `-ImplicitCastExpr 0x55a7748bbb48 <col:23> 'Element *' <NullToPointer>
|   |   `-IntegerLiteral 0x55a7748bbb08 <col:23> 'int' 0
|   |-CXXCtorInitializer Field 0x55a7748a8280 'pollfd' 'int'
|   | `-UnaryOperator 0x55a7748bbba8 <col:34, col:35> 'int' prefix '-'
|   |   `-IntegerLiteral 0x55a7748bbb88 <col:35> 'int' 1
|   `-CompoundStmt 0x55a7748bbc20 <line:64:2, line:65:2>
|-FieldDecl 0x55a7748a8458 <line:68:5, col:21> col:9 referenced _wake_pipe 'int [2]'
|-FieldDecl 0x55a7748a84b8 <line:69:5, col:19> col:19 referenced _wake_pipe_pending 'volatile bool'
|-FieldDecl 0x55a7748af5e0 <line:82:5, col:27> col:27 _pollfds 'Vector<struct pollfd>':'Vector<pollfd>'
|-FieldDecl 0x55a7748ba410 <line:83:5, col:26> col:26 _selinfo 'Vector<SelectSet::SelectorInfo>':'Vector<SelectSet::SelectorInfo>'
|-CXXMethodDecl 0x55a7748ba6d0 <line:89:5, col:63> col:10 register_select 'void (int, bool, bool)'
| |-ParmVarDecl 0x55a7748ba478 <col:26, col:30> col:30 fd 'int'
| |-ParmVarDecl 0x55a7748ba4f0 <col:34, col:39> col:39 add_read 'bool'
| `-ParmVarDecl 0x55a7748ba568 <col:49, col:54> col:54 add_write 'bool'
|-CXXMethodDecl 0x55a7748ba8b8 <line:90:5, col:41> col:10 remove_pollfd 'void (int, int)'
| |-ParmVarDecl 0x55a7748ba7a0 <col:24, col:28> col:28 pi 'int'
| `-ParmVarDecl 0x55a7748ba820 <col:32, col:36> col:36 event 'int'
|-CXXMethodDecl 0x55a7748bab08 <line:91:5, col:49> col:17 call_selected 'void (int, int) const' inline
| |-ParmVarDecl 0x55a7748ba980 <col:31, col:35> col:35 fd 'int'
| `-ParmVarDecl 0x55a7748baa00 <col:39, col:43> col:43 mask 'int'
|-CXXMethodDecl 0x55a7748bad18 <line:92:5, col:63> col:17 post_select 'bool (RouterThread *, bool)' inline
| |-ParmVarDecl 0x55a7748babc8 <col:29, col:43> col:43 thread 'RouterThread *'
| `-ParmVarDecl 0x55a7748bac40 <col:51, col:56> col:56 acquire 'bool'
|-CXXMethodDecl 0x55a7748bae68 <line:97:5, col:47> col:10 run_selects_poll 'void (RouterThread *)'
| `-ParmVarDecl 0x55a7748badd8 <col:27, col:41> col:41 thread 'RouterThread *'
|-CXXMethodDecl 0x55a7748baf30 <line:102:5, col:22> col:17 used lock 'void ()' inline
|-CXXMethodDecl 0x55a7748baff0 <line:103:5, col:24> col:17 used unlock 'void ()' inline
|-CXXConstructorDecl 0x55a7748bb0b8 <line:36:7> col:7 implicit SelectSet 'void (const SelectSet &)' inline default noexcept-unevaluated 0x55a7748bb0b8
| `-ParmVarDecl 0x55a7748bb1c8 <col:7> col:7 'const SelectSet &'
`-CXXMethodDecl 0x55a7748bb268 <col:7> col:7 implicit operator= 'SelectSet &(const SelectSet &)' inline default noexcept-unevaluated 0x55a7748bb268
  `-ParmVarDecl 0x55a7748bb378 <col:7> col:7 'const SelectSet &'

Layout: <CGRecordLayout
  LLVMType:%class.SelectSet = type { [2 x i32], i8, %class.Vector.3, %class.Vector.4 }
  NonVirtualBaseLLVMType:%class.SelectSet = type { [2 x i32], i8, %class.Vector.3, %class.Vector.4 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55a77482a248 <../dummy_inc/click/sync.hh:46:1, line:64:1> line:46:7 referenced class Spinlock definition
|-DefinitionData empty standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55a77482a368 <col:1, col:7> col:7 implicit referenced class Spinlock
|-AccessSpecDecl 0x55a77482a3f8 <col:18, col:24> col:18 public
|-CXXConstructorDecl 0x55a77482a480 <line:48:5, col:21> col:12 Spinlock 'void ()' inline
|-CXXDestructorDecl 0x55a77482a570 <line:49:5, col:22> col:12 ~Spinlock 'void () noexcept' inline
|-CXXMethodDecl 0x55a77482a670 <line:51:5, col:25> col:17 used acquire 'void ()' inline
|-CXXMethodDecl 0x55a77482a730 <line:52:5, col:25> col:17 used release 'void ()' inline
|-CXXMethodDecl 0x55a77482a7f0 <line:53:5, col:25> col:17 attempt 'bool ()' inline
|-CXXMethodDecl 0x55a77482a8d8 <line:54:5, col:26> col:17 nested 'bool () const' inline
|-CXXConstructorDecl 0x55a77482a9f8 <line:46:7> col:7 implicit constexpr Spinlock 'void (const Spinlock &)' inline default trivial noexcept-unevaluated 0x55a77482a9f8
| `-ParmVarDecl 0x55a77482ab08 <col:7> col:7 'const Spinlock &'
`-CXXMethodDecl 0x55a7748c0818 <col:7> col:7 implicit operator= 'Spinlock &(const Spinlock &)' inline default trivial noexcept-unevaluated 0x55a7748c0818
  `-ParmVarDecl 0x55a7748c0928 <col:7> col:7 'const Spinlock &'

Layout: <CGRecordLayout
  LLVMType:%class.Spinlock = type { i8 }
  NonVirtualBaseLLVMType:%class.Spinlock.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55a774599690 <../dummy_inc/click/atomic.hh:52:1, line:94:1> line:52:7 referenced class atomic_uint32_t definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55a7745997a8 <col:1, col:7> col:7 implicit referenced class atomic_uint32_t
|-AccessSpecDecl 0x55a774599838 <col:25, col:31> col:25 public
|-CXXMethodDecl 0x55a774599908 <line:57:5, col:29> col:21 used value 'uint32_t () const' inline
|-CXXConversionDecl 0x55a7745999f0 <line:58:5, col:32> col:12 used operator unsigned int 'uint32_t () const' inline
|-CXXMethodDecl 0x55a774599c08 <line:60:5, col:49> col:29 used operator= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x55a774599ab0 <col:39, col:48> col:48 x 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55a774599db8 <line:62:5, col:53> col:29 operator+= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x55a774599cc0 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x55a774599f00 <line:63:5, col:53> col:29 operator-= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x55a774599e70 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x55a77459a048 <line:64:5, col:53> col:29 operator|= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x55a774599fb8 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55a77459a190 <line:65:5, col:53> col:29 operator&= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x55a77459a100 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55a77459a258 <line:67:5, col:28> col:17 used operator++ 'void ()' inline
|-CXXMethodDecl 0x55a77459a3a0 <line:68:5, col:31> col:17 operator++ 'void (int)' inline
| `-ParmVarDecl 0x55a77459a310 <col:28> col:31 'int'
|-CXXMethodDecl 0x55a77459a468 <line:69:5, col:28> col:17 used operator-- 'void ()' inline
|-CXXMethodDecl 0x55a77459a5b0 <line:70:5, col:31> col:17 operator-- 'void (int)' inline
| `-ParmVarDecl 0x55a77459a520 <col:28> col:31 'int'
|-CXXMethodDecl 0x55a77459a728 <line:72:5, col:42> col:21 swap 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x55a77459a668 <col:26, col:35> col:35 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55a77459a870 <line:73:5, col:49> col:21 fetch_and_add 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x55a77459a7e0 <col:35, col:44> col:44 delta 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55a77459a938 <line:74:5, col:30> col:17 dec_and_test 'bool ()' inline
|-CXXMethodDecl 0x55a77459aaf8 <line:75:5, col:69> col:21 used compare_swap 'uint32_t (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x55a77459a9e8 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55a77459aa60 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55a77459ad48 <line:76:5, col:97> col:17 compare_and_swap 'bool (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x55a77459abb8 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55a77459ac30 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55a77459adf8 <col:86> "" ""
|-CXXMethodDecl 0x55a77459b068 <line:78:5, col:71> col:28 used swap 'uint32_t (volatile uint32_t &, uint32_t)' static inline
| |-ParmVarDecl 0x55a77459aed8 <col:33, col:52> col:52 x 'volatile uint32_t &'
| `-ParmVarDecl 0x55a77459af50 <col:55, col:64> col:64 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55a77459b218 <line:79:5, col:48> col:24 used inc 'void (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x55a77459b128 <col:28, col:47> col:47 x 'volatile uint32_t &'
|-CXXMethodDecl 0x55a77459b3c8 <line:80:5, col:57> col:24 used dec_and_test 'bool (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x55a77459b2d0 <col:37, col:56> col:56 x 'volatile uint32_t &'
|-CXXMethodDecl 0x55a77459b698 <line:81:5, col:98> col:28 compare_swap 'uint32_t (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x55a77459b480 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x55a77459b4f8 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55a77459b570 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55a77459b978 <line:82:5, col:126> col:24 compare_and_swap 'bool (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x55a77459b760 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x55a77459b7d8 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55a77459b850 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55a77459ba30 <col:115> "" ""
|-AccessSpecDecl 0x55a77459baa0 <line:84:3, col:10> col:3 private
|-FieldDecl 0x55a77459bad8 <line:91:5, col:14> col:14 referenced _val 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55a77459cff0 <line:52:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x55a77459cff0
| `-ParmVarDecl 0x55a77459d0f8 <col:7> col:7 'const atomic_uint32_t &'
|-CXXMethodDecl 0x55a77459d198 <col:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x55a77459d198
| `-ParmVarDecl 0x55a77459d2a8 <col:7> col:7 'atomic_uint32_t &&'
|-CXXConstructorDecl 0x55a7745d28d8 <col:7> col:7 implicit used atomic_uint32_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55a7747c46d0 <col:7>
|-CXXConstructorDecl 0x55a7745d29b0 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x55a7745d29b0
| `-ParmVarDecl 0x55a7745d2ac8 <col:7> col:7 'const atomic_uint32_t &'
|-CXXConstructorDecl 0x55a7745d2b38 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x55a7745d2b38
| `-ParmVarDecl 0x55a7745d2c48 <col:7> col:7 'atomic_uint32_t &&'
`-CXXDestructorDecl 0x55a7747c70d0 <col:7> col:7 implicit ~atomic_uint32_t 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.atomic_uint32_t = type { i32 }
  NonVirtualBaseLLVMType:%class.atomic_uint32_t = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55a77475ff78 <../dummy_inc/click/task.hh:339:5, line:342:5> line:339:11 referenced union Pending definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55a774760098 <col:5, col:11> col:11 implicit union Pending
|-FieldDecl 0x55a774760138 <line:340:9, col:15> col:15 t 'Task *'
|-FieldDecl 0x55a774760198 <line:341:9, col:19> col:19 referenced x 'uintptr_t':'unsigned long'
|-CXXConstructorDecl 0x55a7748bfe18 <line:339:11> col:11 implicit constexpr Pending 'void (const Task::Pending &)' inline default trivial noexcept-unevaluated 0x55a7748bfe18
| `-ParmVarDecl 0x55a7748bff28 <col:11> col:11 'const Task::Pending &'
|-CXXConstructorDecl 0x55a7748bffc8 <col:11> col:11 implicit constexpr Pending 'void (Task::Pending &&)' inline default trivial noexcept-unevaluated 0x55a7748bffc8
| `-ParmVarDecl 0x55a7748c00d8 <col:11> col:11 'Task::Pending &&'
|-CXXDestructorDecl 0x55a7748c0148 <col:11> col:11 implicit ~Pending 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55a7748c09c8 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(const Task::Pending &)' inline default trivial noexcept-unevaluated 0x55a7748c09c8
| `-ParmVarDecl 0x55a7748c0ad8 <col:11> col:11 'const Task::Pending &'
|-CXXMethodDecl 0x55a7748c0b48 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(Task::Pending &&)' inline default trivial noexcept-unevaluated 0x55a7748c0b48
| `-ParmVarDecl 0x55a7748c0c58 <col:11> col:11 'Task::Pending &&'
`-CXXConstructorDecl 0x55a7748c72e8 <col:11> col:11 implicit used Pending 'void () noexcept' inline default trivial
  `-CompoundStmt 0x55a7748c73c0 <col:11>

Layout: <CGRecordLayout
  LLVMType:%"union.Task::Pending" = type { %class.Task* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55a77475a480 <../dummy_inc/click/sync.hh:303:1, line:324:1> line:303:7 referenced class SpinlockIRQ definition
|-DefinitionData pass_in_registers empty standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55a77475a598 <col:1, col:7> col:7 implicit referenced class SpinlockIRQ
|-AccessSpecDecl 0x55a77475a628 <col:21, col:27> col:21 public
|-CXXConstructorDecl 0x55a77475a6b0 <line:305:5, col:24> col:12 SpinlockIRQ 'void ()' inline
|-TypedefDecl 0x55a77475a770 <line:310:5, col:17> col:17 referenced flags_t 'int'
| `-BuiltinType 0x55a774274370 'int'
|-CXXMethodDecl 0x55a77475a838 <line:313:5, col:59> col:20 acquire 'SpinlockIRQ::flags_t ()' inline
| `-AlwaysInlineAttr 0x55a77475a8d8 <col:45> always_inline
|-CXXMethodDecl 0x55a77475aa08 <line:314:5, col:63> col:17 release 'void (SpinlockIRQ::flags_t)' inline
| |-ParmVarDecl 0x55a77475a940 <col:25> col:32 'SpinlockIRQ::flags_t':'int'
| `-AlwaysInlineAttr 0x55a77475aab0 <col:49> always_inline
|-CXXConstructorDecl 0x55a77475aba8 <line:303:7> col:7 implicit constexpr SpinlockIRQ 'void (const SpinlockIRQ &)' inline default trivial noexcept-unevaluated 0x55a77475aba8
| `-ParmVarDecl 0x55a77475acb8 <col:7> col:7 'const SpinlockIRQ &'
|-CXXConstructorDecl 0x55a77475ad58 <col:7> col:7 implicit constexpr SpinlockIRQ 'void (SpinlockIRQ &&)' inline default trivial noexcept-unevaluated 0x55a77475ad58
| `-ParmVarDecl 0x55a77475ae68 <col:7> col:7 'SpinlockIRQ &&'
|-CXXDestructorDecl 0x55a7748c0230 <col:7> col:7 implicit ~SpinlockIRQ 'void ()' inline default trivial noexcept-unevaluated 0x55a7748c0230
|-CXXMethodDecl 0x55a7748c0cf8 <col:7> col:7 implicit operator= 'SpinlockIRQ &(const SpinlockIRQ &)' inline default trivial noexcept-unevaluated 0x55a7748c0cf8
| `-ParmVarDecl 0x55a7748c0e08 <col:7> col:7 'const SpinlockIRQ &'
`-CXXMethodDecl 0x55a7748c0e78 <col:7> col:7 implicit operator= 'SpinlockIRQ &(SpinlockIRQ &&)' inline default trivial noexcept-unevaluated 0x55a7748c0e78
  `-ParmVarDecl 0x55a7748c0f88 <col:7> col:7 'SpinlockIRQ &&'

Layout: <CGRecordLayout
  LLVMType:%class.SpinlockIRQ = type { i8 }
  NonVirtualBaseLLVMType:%class.SpinlockIRQ.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55a7748bc090 prev 0x55a7748a7150 <../dummy_inc/click/routerthread.hh:28:1, line:248:1> line:28:7 referenced class RouterThread definition
|-DefinitionData has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-CXXRecordDecl 0x55a7748bc188 <col:1, col:7> col:7 implicit referenced class RouterThread
|-AccessSpecDecl 0x55a7748bc218 <col:22, col:28> col:22 public
|-EnumDecl 0x55a7748bc240 <line:30:5, col:58> col:5
| |-EnumConstantDecl 0x55a7748bc358 <col:12, col:32> col:12 THREAD_QUIESCENT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:30:5)'
| | `-ConstantExpr 0x55a7748bc338 <col:31, col:32> 'int' Int: -1
| |   `-UnaryOperator 0x55a7748bc320 <col:31, col:32> 'int' prefix '-'
| |     `-IntegerLiteral 0x55a7748bc300 <col:32> 'int' 1
| `-EnumConstantDecl 0x55a7748bc400 <col:35, col:53> col:35 THREAD_UNKNOWN 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:30:5)'
|   `-ConstantExpr 0x55a7748bc3e0 <col:52, col:53> 'int' Int: -1000
|     `-UnaryOperator 0x55a7748bc3c8 <col:52, col:53> 'int' prefix '-'
|       `-IntegerLiteral 0x55a7748bc3a8 <col:53> 'int' 1000
|-CXXMethodDecl 0x55a7748bc4a0 <line:32:5, col:28> col:16 thread_id 'int () const' inline
|-CXXMethodDecl 0x55a7748bc560 <line:34:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x55a7748bc648 <line:35:5, col:52> col:22 timer_set 'TimerSet &()' inline
| `-CompoundStmt 0x55a7748c1048 <col:34, col:52>
|   `-ReturnStmt 0x55a7748c1038 <col:36, col:43>
|     `-MemberExpr 0x55a7748c1008 <col:43> 'TimerSet' lvalue ->_timers 0x55a7748be318
|       `-CXXThisExpr 0x55a7748c0ff8 <col:43> 'RouterThread *' implicit this
|-CXXMethodDecl 0x55a7748bc738 <line:36:5, col:64> col:28 timer_set 'const TimerSet &() const' inline
| `-CompoundStmt 0x55a7748c10b0 <col:46, col:64>
|   `-ReturnStmt 0x55a7748c10a0 <col:48, col:55>
|     `-MemberExpr 0x55a7748c1070 <col:55> 'const TimerSet' lvalue ->_timers 0x55a7748be318
|       `-CXXThisExpr 0x55a7748c1060 <col:55> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x55a7748bc828 <line:38:5, col:55> col:23 select_set 'SelectSet &()' inline
| `-CompoundStmt 0x55a7748c1118 <col:36, col:55>
|   `-ReturnStmt 0x55a7748c1108 <col:38, col:45>
|     `-MemberExpr 0x55a7748c10d8 <col:45> 'SelectSet' lvalue ->_selects 0x55a7748be378
|       `-CXXThisExpr 0x55a7748c10c8 <col:45> 'RouterThread *' implicit this
|-CXXMethodDecl 0x55a7748bc918 <line:39:5, col:67> col:29 select_set 'const SelectSet &() const' inline
| `-CompoundStmt 0x55a7748c1180 <col:48, col:67>
|   `-ReturnStmt 0x55a7748c1170 <col:50, col:57>
|     `-MemberExpr 0x55a7748c1140 <col:57> 'const SelectSet' lvalue ->_selects 0x55a7748be378
|       `-CXXThisExpr 0x55a7748c1130 <col:57> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x55a7748bc9d8 <line:43:5, col:26> col:17 active 'bool () const' inline
|-CXXMethodDecl 0x55a7748bcac8 <line:44:5, col:31> col:18 task_begin 'Task *() const' inline
|-CXXMethodDecl 0x55a7748bcc38 <line:45:5, col:40> col:18 task_next 'Task *(Task *) const' inline
| `-ParmVarDecl 0x55a7748bcb78 <col:28, col:34> col:34 task 'Task *'
|-CXXMethodDecl 0x55a7748bcd00 <line:46:5, col:29> col:18 task_end 'Task *() const' inline
|-CXXMethodDecl 0x55a7748bd148 <line:47:5, col:59> col:10 scheduled_tasks 'void (Router *, Vector<Task *> &)'
| |-ParmVarDecl 0x55a7748bcdb0 <col:26, col:34> col:34 router 'Router *'
| `-ParmVarDecl 0x55a7748bd030 <col:42, col:58> col:58 x 'Vector<Task *> &'
|-CXXMethodDecl 0x55a7748bd218 <line:49:5, col:28> col:17 lock_tasks 'void ()' inline
|-CXXMethodDecl 0x55a7748bd2d8 <line:50:5, col:30> col:17 unlock_tasks 'void ()' inline
|-CXXMethodDecl 0x55a7748bd398 <line:52:5, col:38> col:17 schedule_block_tasks 'void ()' inline
|-CXXMethodDecl 0x55a7748bd4d8 <line:53:5, col:43> col:17 used block_tasks 'void (bool)' inline
| `-ParmVarDecl 0x55a7748bd448 <col:29, col:34> col:34 scheduled 'bool'
|-CXXMethodDecl 0x55a7748bd5a0 <line:54:5, col:31> col:17 used unblock_tasks 'void ()' inline
|-CXXMethodDecl 0x55a7748bd660 <line:56:5, col:29> col:17 stop_flag 'bool () const' inline
|-CXXMethodDecl 0x55a7748bd720 <line:58:5, col:35> col:17 mark_driver_entry 'void ()' inline
|-CXXMethodDecl 0x55a7748bd7e0 <line:59:5, col:17> col:10 driver 'void ()'
|-CXXMethodDecl 0x55a7748bd920 <line:61:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x55a7748bd890 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x55a7748bd9e8 <line:77:5, col:22> col:17 used wake 'void ()' inline
|-CXXMethodDecl 0x55a7748bdaa8 <line:80:5, col:29> col:17 run_signals 'void ()' inline
|-EnumDecl 0x55a7748bdb48 <line:83:5, line:86:20> line:83:5
| |-EnumConstantDecl 0x55a7748bdc10 <col:12> col:12 referenced S_PAUSED 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55a7748bdc60 <col:22> col:22 referenced S_BLOCKED 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55a7748bdcb0 <col:33> col:33 referenced S_TIMERWAIT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55a7748bdd00 <line:84:12> col:12 S_LOCKSELECT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55a7748bdd50 <col:26> col:26 S_LOCKTASKS 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55a7748bdda0 <line:85:12> col:12 S_RUNTASK 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55a7748bddf0 <col:23> col:23 S_RUNTIMER 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55a7748bde40 <col:35> col:35 S_RUNSIGNAL 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55a7748bde90 <col:48> col:48 S_RUNPENDING 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55a7748bdee0 <col:62> col:62 S_RUNSELECT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| `-EnumConstantDecl 0x55a7748bdf30 <line:86:12> col:12 NSTATES 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
|-CXXMethodDecl 0x55a7748be028 <line:87:5, col:43> col:17 used set_thread_state 'void (int)' inline
| `-ParmVarDecl 0x55a7748bdf98 <col:34, col:38> col:38 state 'int'
|-CXXMethodDecl 0x55a7748be178 <line:88:5, col:61> col:17 set_thread_state_for_blocking 'void (int)' inline
| `-ParmVarDecl 0x55a7748be0e8 <col:47, col:51> col:51 delay_type 'int'
|-AccessSpecDecl 0x55a7748be220 <line:104:3, col:10> col:3 private
|-FieldDecl 0x55a7748be258 <line:119:5, col:14> col:14 referenced _task_link 'TaskLink'
|-FieldDecl 0x55a7748be2b8 <line:120:5, col:19> col:19 referenced _stop_flag 'volatile bool'
|-FieldDecl 0x55a7748be318 <line:125:5, col:14> col:14 referenced _timers 'TimerSet'
|-FieldDecl 0x55a7748be378 <line:127:5, col:15> col:15 referenced _selects 'SelectSet'
|-FieldDecl 0x55a7748be3f8 <line:148:5, col:14> col:14 referenced _task_lock 'Spinlock'
| `-AlignedAttr 0x55a7748be468 <col:40, col:50> aligned
|   `-ConstantExpr 0x55a7748be448 <col:48> 'int' Int: 64
|     `-IntegerLiteral 0x55a7748be3c8 <col:48> 'int' 64
|-FieldDecl 0x55a7748be4d8 <line:149:5, col:21> col:21 referenced _task_blocker 'atomic_uint32_t'
|-FieldDecl 0x55a7748be538 <line:150:5, col:21> col:21 referenced _task_blocker_waiting 'atomic_uint32_t'
|-FieldDecl 0x55a7748be630 <line:152:5, col:19> col:19 referenced _pending_head 'Task::Pending':'Task::Pending'
|-FieldDecl 0x55a7748be740 <line:153:5, col:20> col:20 _pending_tail 'Task::Pending *'
|-FieldDecl 0x55a7748be7a0 <line:154:5, col:17> col:17 _pending_lock 'SpinlockIRQ'
|-FieldDecl 0x55a7748be820 <line:157:5, col:13> col:13 referenced _master 'Master *'
| `-AlignedAttr 0x55a7748be890 <col:36, col:46> aligned
|   `-ConstantExpr 0x55a7748be870 <col:44> 'int' Int: 64
|     `-IntegerLiteral 0x55a7748be7f0 <col:44> 'int' 64
|-FieldDecl 0x55a7748be908 <line:158:5, col:9> col:9 referenced _id 'int'
|-FieldDecl 0x55a7748be968 <line:159:5, col:10> col:10 referenced _driver_entered 'bool'
|-AccessSpecDecl 0x55a7748be9b8 <line:170:3, col:9> col:3 public
|-FieldDecl 0x55a7748be9f8 <line:171:5, col:14> col:14 _tasks_per_iter 'unsigned int'
|-FieldDecl 0x55a7748bea60 <line:172:5, col:14> col:14 _iters_per_os 'unsigned int'
|-AccessSpecDecl 0x55a7748beab0 <line:173:3, col:10> col:3 private
|-CXXConstructorDecl 0x55a7748bec58 <line:205:5, col:46> col:5 RouterThread 'void (Master *, int)'
| |-ParmVarDecl 0x55a7748beae8 <col:18, col:26> col:26 master 'Master *'
| `-ParmVarDecl 0x55a7748beb68 <col:34, col:38> col:38 threadno 'int'
|-CXXDestructorDecl 0x55a7748bed58 <line:206:5, col:19> col:5 ~RouterThread 'void ()' noexcept-unevaluated 0x55a7748bed58
|-CXXMethodDecl 0x55a7748bee60 <line:209:5, col:29> col:17 add_pending 'void ()' inline
|-CXXMethodDecl 0x55a7748bef28 <line:211:5, line:217:5> line:211:21 pass 'unsigned int () const' inline
| `-CompoundStmt 0x55a7748c1278 <col:34, line:217:5>
|   `-ReturnStmt 0x55a7748c1268 <line:215:9, col:34>
|     `-ImplicitCastExpr 0x55a7748c1250 <col:16, col:34> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x55a7748c1220 <col:16, col:34> 'unsigned int' lvalue ->_pass 0x55a77475cfe0
|         `-ImplicitCastExpr 0x55a7748c1208 <col:16, col:27> 'TaskLink *' <LValueToRValue>
|           `-MemberExpr 0x55a7748c11d8 <col:16, col:27> 'TaskLink *const' lvalue ._next 0x55a77475cf78
|             `-MemberExpr 0x55a7748c11a8 <col:16> 'const TaskLink' lvalue ->_task_link 0x55a7748be258
|               `-CXXThisExpr 0x55a7748c1198 <col:16> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x55a7748befe8 <line:221:5, col:28> col:10 driver_lock_tasks 'void ()'
|-CXXMethodDecl 0x55a7748bf0a8 <line:222:5, line:226:5> line:222:17 driver_unlock_tasks 'void ()' inline
| `-CompoundStmt 0x55a7748c19a0 <col:39, line:226:5>
|   |-DeclStmt 0x55a7748c14c8 <line:223:9, col:68>
|   | `-VarDecl 0x55a7748c12a0 <col:9, col:67> col:18 used val 'uint32_t':'unsigned int' cinit
|   |   `-CXXMemberCallExpr 0x55a7748c1480 <col:24, col:67> 'uint32_t':'unsigned int'
|   |     |-MemberExpr 0x55a7748c1450 <col:24, col:38> '<bound member function type>' .compare_swap 0x55a7745a04b0
|   |     | `-MemberExpr 0x55a7748c1318 <col:24> 'atomic_uint32_t' lvalue ->_task_blocker 0x55a7748be4d8
|   |     |   `-CXXThisExpr 0x55a7748c1308 <col:24> 'RouterThread *' implicit this
|   |     |-CStyleCastExpr 0x55a7748c1408 <col:51, col:63> 'uint32_t':'unsigned int' <NoOp>
|   |     | `-ImplicitCastExpr 0x55a7748c13f0 <col:62, col:63> 'uint32_t':'unsigned int' <IntegralCast> part_of_explicit_cast
|   |     |   `-UnaryOperator 0x55a7748c13c8 <col:62, col:63> 'int' prefix '-'
|   |     |     `-IntegerLiteral 0x55a7748c13a8 <col:63> 'int' 1
|   |     `-ImplicitCastExpr 0x55a7748c14b0 <col:66> 'uint32_t':'unsigned int' <IntegralCast>
|   |       `-IntegerLiteral 0x55a7748c1430 <col:66> 'int' 0
|   |-CStyleCastExpr 0x55a7748c1510 <line:224:9, col:16> 'void' <ToVoid>
|   | `-DeclRefExpr 0x55a7748c14e0 <col:16> 'uint32_t':'unsigned int' lvalue Var 0x55a7748c12a0 'val' 'uint32_t':'unsigned int'
|   `-ParenExpr 0x55a7748c1980 <line:225:9, col:181> 'void'
|     `-ConditionalOperator 0x55a7748c1950 <col:10, col:180> 'void'
|       |-CXXStaticCastExpr 0x55a7748c1628 <col:10, col:50> 'bool' static_cast<_Bool> <NoOp>
|       | `-BinaryOperator 0x55a7748c15f8 <col:30, col:49> 'bool' '=='
|       |   |-ImplicitCastExpr 0x55a7748c15e0 <col:30> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-DeclRefExpr 0x55a7748c1538 <col:30> 'uint32_t':'unsigned int' lvalue Var 0x55a7748c12a0 'val' 'uint32_t':'unsigned int'
|       |   `-CStyleCastExpr 0x55a7748c15b8 <col:37, col:49> 'uint32_t':'unsigned int' <NoOp>
|       |     `-ImplicitCastExpr 0x55a7748c15a0 <col:48, col:49> 'uint32_t':'unsigned int' <IntegralCast> part_of_explicit_cast
|       |       `-UnaryOperator 0x55a7748c1578 <col:48, col:49> 'int' prefix '-'
|       |         `-IntegerLiteral 0x55a7748c1558 <col:49> 'int' 1
|       |-CXXFunctionalCastExpr 0x55a7748c1688 <col:54, col:61> 'void' functional cast to void <ToVoid>
|       | `-IntegerLiteral 0x55a7748c1668 <col:60> 'int' 0
|       `-CallExpr 0x55a7748c18b0 <col:65, col:180> 'void'
|         |-ImplicitCastExpr 0x55a7748c1898 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x55a7748c1878 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55a7743152d0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|         |-ImplicitCastExpr 0x55a7748c18f0 <col:80> 'const char *' <ArrayToPointerDecay>
|         | `-StringLiteral 0x55a7748c1778 <col:80> 'const char [21]' lvalue "val == (uint32_t) -1"
|         |-ImplicitCastExpr 0x55a7748c1908 <col:104> 'const char *' <ArrayToPointerDecay>
|         | `-StringLiteral 0x55a7748c17a8 <col:104> 'const char [35]' lvalue "../dummy_inc/click/routerthread.hh"
|         |-ImplicitCastExpr 0x55a7748c1920 <col:142> 'unsigned int' <IntegralCast>
|         | `-IntegerLiteral 0x55a7748c17e8 <col:142> 'int' 225
|         `-ImplicitCastExpr 0x55a7748c1938 <col:147, col:161> 'const char *' <ArrayToPointerDecay>
|           `-UnaryOperator 0x55a7748c1860 <col:147, col:161> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|             `-PredefinedExpr 0x55a7748c1848 <col:161> 'const char [41]' lvalue __PRETTY_FUNCTION__
|               `-StringLiteral 0x55a7748c1808 <col:161> 'const char [41]' lvalue "void RouterThread::driver_unlock_tasks()"
|-CXXMethodDecl 0x55a7748bf1f0 <line:228:5, col:37> col:17 run_tasks 'void (int)' inline
| `-ParmVarDecl 0x55a7748bf160 <col:27, col:31> col:31 ntasks 'int'
|-CXXMethodDecl 0x55a7748bf2b8 <line:229:5, col:33> col:17 process_pending 'void ()' inline
|-CXXMethodDecl 0x55a7748bf378 <line:230:5, col:24> col:17 run_os 'void ()' inline
|-CXXMethodDecl 0x55a7748bf438 <line:238:5, col:45> col:24 used running_in_interrupt 'bool ()' static inline
|-CXXMethodDecl 0x55a7748bf4f8 <line:239:5, col:45> col:17 used current_thread_is_running 'bool () const' inline
|-CXXMethodDecl 0x55a7748bf5b8 <line:240:5, col:53> col:17 current_thread_is_running_cleanup 'bool () const' inline
|-FriendDecl 0x55a7748bf6b0 <line:242:5, col:18> col:12 'class Task':'Task'
|-FriendDecl 0x55a7748bf710 <line:243:5, col:18> col:12 'class Master':'Master'
|-FriendDecl 0x55a7748bf7a0 <line:245:5, col:18> col:12 'class SelectSet':'SelectSet'
|-CXXConstructorDecl 0x55a7748bfb68 <line:28:7> col:7 implicit RouterThread 'void (const RouterThread &)' inline default noexcept-unevaluated 0x55a7748bfb68
| `-ParmVarDecl 0x55a7748bfc78 <col:7> col:7 'const RouterThread &'
`-CXXMethodDecl 0x55a7748c0338 <col:7> col:7 implicit operator= 'RouterThread &(const RouterThread &)' inline default noexcept-unevaluated 0x55a7748c0338
  `-ParmVarDecl 0x55a7748c0448 <col:7> col:7 'const RouterThread &'

Layout: <CGRecordLayout
  LLVMType:%class.RouterThread = type { %struct.TaskLink, i8, [7 x i8], %class.TimerSet, %class.SelectSet, [32 x i8], %class.Spinlock, %class.atomic_uint32_t, %class.atomic_uint32_t, %"union.Task::Pending", %"union.Task::Pending"*, %class.SpinlockIRQ, [31 x i8], %class.Master*, i32, i8, i32, i32, [40 x i8] }
  NonVirtualBaseLLVMType:%class.RouterThread.base = type { %struct.TaskLink, i8, [7 x i8], %class.TimerSet, %class.SelectSet, [32 x i8], %class.Spinlock, %class.atomic_uint32_t, %class.atomic_uint32_t, %"union.Task::Pending", %"union.Task::Pending"*, %class.SpinlockIRQ, [31 x i8], %class.Master*, i32, i8, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55a77475d2f0 prev 0x55a7747da750 <../dummy_inc/click/task.hh:49:1, line:371:1> line:49:7 referenced class Task definition
|-DefinitionData has_user_declared_ctor can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-private 'TaskLink'
|-CXXRecordDecl 0x55a77475d428 <col:1, col:7> col:7 implicit referenced class Task
|-AccessSpecDecl 0x55a77475d4b8 <col:33, col:39> col:33 public
|-EnumDecl 0x55a77475d4e0 <line:52:5, col:50> col:5
| |-EnumConstantDecl 0x55a77475d620 <col:12, col:26> col:12 referenced STRIDE1 'Task::(anonymous enum at ../dummy_inc/click/task.hh:52:5)'
| | `-ConstantExpr 0x55a77475d600 <col:22, col:26> 'unsigned int' Int: 65536
| |   `-BinaryOperator 0x55a77475d5e0 <col:22, col:26> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x55a77475d5a0 <col:22> 'unsigned int' 1
| |     `-IntegerLiteral 0x55a77475d5c0 <col:26> 'int' 16
| `-EnumConstantDecl 0x55a77475d6f0 <col:30, col:47> col:30 referenced MAX_STRIDE 'Task::(anonymous enum at ../dummy_inc/click/task.hh:52:5)'
|   `-ConstantExpr 0x55a77475d6d0 <col:43, col:47> 'unsigned int' Int: 2147483648
|     `-BinaryOperator 0x55a77475d6b0 <col:43, col:47> 'unsigned int' '<<'
|       |-IntegerLiteral 0x55a77475d670 <col:43> 'unsigned int' 1
|       `-IntegerLiteral 0x55a77475d690 <col:47> 'int' 31
|-EnumDecl 0x55a77475d740 <line:53:5, col:57> col:5
| |-EnumConstantDecl 0x55a77475d880 <col:12, col:29> col:12 referenced MAX_TICKETS 'Task::(anonymous enum at ../dummy_inc/click/task.hh:53:5)'
| | `-ImplicitCastExpr 0x55a77475d9a0 <col:26, col:29> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a77475d860 <col:26, col:29> 'int' Int: 32768
| |     `-BinaryOperator 0x55a77475d840 <col:26, col:29> 'int' '<<'
| |       |-IntegerLiteral 0x55a77475d800 <col:26> 'int' 1
| |       `-IntegerLiteral 0x55a77475d820 <col:29> 'int' 15
| `-EnumConstantDecl 0x55a77475d950 <col:33, col:54> col:33 DEFAULT_TICKETS 'Task::(anonymous enum at ../dummy_inc/click/task.hh:53:5)'
|   `-ImplicitCastExpr 0x55a77475d9b8 <col:51, col:54> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55a77475d930 <col:51, col:54> 'int' Int: 1024
|       `-BinaryOperator 0x55a77475d910 <col:51, col:54> 'int' '<<'
|         |-IntegerLiteral 0x55a77475d8d0 <col:51> 'int' 1
|         `-IntegerLiteral 0x55a77475d8f0 <col:54> 'int' 10
|-CXXConstructorDecl 0x55a77475db88 <line:75:5, col:48> col:12 Task 'void (TaskCallback, void *)' inline
| |-ParmVarDecl 0x55a77475d9e0 <col:17, col:30> col:30 f 'TaskCallback':'bool (*)(Task *, void *)'
| `-ParmVarDecl 0x55a77475da60 <col:33, col:39> col:39 user_data 'void *'
|-CXXConstructorDecl 0x55a77475dd18 <line:86:5, col:27> col:12 used Task 'void (Element *)' inline
| `-ParmVarDecl 0x55a77475dc50 <col:17, col:26> col:26 e 'Element *'
|-CXXDestructorDecl 0x55a77475de10 <line:91:5, col:11> col:5 used ~Task 'void () noexcept'
|-CXXMethodDecl 0x55a77475df98 <line:98:5, line:100:5> line:98:25 callback 'TaskCallback () const' inline
| `-CompoundStmt 0x55a7747610d8 <col:42, line:100:5>
|   `-ReturnStmt 0x55a7747610c8 <line:99:9, col:16>
|     `-ImplicitCastExpr 0x55a7747610b0 <col:16> 'TaskCallback':'bool (*)(Task *, void *)' <LValueToRValue>
|       `-MemberExpr 0x55a774761080 <col:16> 'const TaskCallback':'bool (*const)(Task *, void *)' lvalue ->_hook 0x55a77475fe00
|         `-CXXThisExpr 0x55a774761070 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x55a77475e060 <line:103:5, line:105:5> line:103:18 user_data 'void *() const' inline
| `-CompoundStmt 0x55a774761158 <col:36, line:105:5>
|   `-ReturnStmt 0x55a774761148 <line:104:9, col:16>
|     `-ImplicitCastExpr 0x55a774761130 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x55a774761100 <col:16> 'void *const' lvalue ->_thunk 0x55a77475fe68
|         `-CXXThisExpr 0x55a7747610f0 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x55a77475e120 <line:108:5, line:110:5> line:108:21 element 'Element *() const' inline
| `-CompoundStmt 0x55a7747611d8 <col:37, line:110:5>
|   `-ReturnStmt 0x55a7747611c8 <line:109:9, col:16>
|     `-ImplicitCastExpr 0x55a7747611b0 <col:16> 'Element *' <LValueToRValue>
|       `-MemberExpr 0x55a774761180 <col:16> 'Element *const' lvalue ->_owner 0x55a77475ff28
|         `-CXXThisExpr 0x55a774761170 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x55a77475e1e0 <line:114:5, col:31> col:17 initialized 'bool () const' inline
|-CXXMethodDecl 0x55a77475e2a8 <line:123:5, col:33> col:16 home_thread_id 'int () const' inline
|-CXXMethodDecl 0x55a77475e368 <line:132:5, col:35> col:26 thread 'RouterThread *() const' inline
|-CXXMethodDecl 0x55a77475e428 <line:135:5, line:137:5> line:135:20 router 'Router *() const' inline
| `-CompoundStmt 0x55a7747612c0 <col:35, line:137:5>
|   `-ReturnStmt 0x55a7747612b0 <line:136:9, col:31>
|     `-CXXMemberCallExpr 0x55a774761278 <col:16, col:31> 'Router *'
|       `-MemberExpr 0x55a774761248 <col:16, col:24> '<bound member function type>' ->router 0x55a7747ecf60
|         `-ImplicitCastExpr 0x55a774761298 <col:16> 'const Element *' <NoOp>
|           `-ImplicitCastExpr 0x55a774761230 <col:16> 'Element *' <LValueToRValue>
|             `-MemberExpr 0x55a774761200 <col:16> 'Element *const' lvalue ->_owner 0x55a77475ff28
|               `-CXXThisExpr 0x55a7747611f0 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x55a77475e4e8 <line:140:5, col:22> col:13 master 'Master *() const'
|-CXXMethodDecl 0x55a77475e6e8 <line:159:5, col:50> col:10 initialize 'void (Element *, bool)'
| |-ParmVarDecl 0x55a77475e598 <col:21, col:30> col:30 owner 'Element *'
| `-ParmVarDecl 0x55a77475e610 <col:37, col:42> col:42 schedule 'bool'
|-CXXMethodDecl 0x55a77475e8f8 <line:169:5, col:50> col:10 initialize 'void (Router *, bool)'
| |-ParmVarDecl 0x55a77475e7a8 <col:21, col:29> col:29 router 'Router *'
| `-ParmVarDecl 0x55a77475e820 <col:37, col:42> col:42 schedule 'bool'
|-CXXMethodDecl 0x55a77475e9c8 <line:179:5, line:181:5> line:179:17 scheduled 'bool () const' inline
| `-CompoundStmt 0x55a7747613d0 <col:35, line:181:5>
|   `-ReturnStmt 0x55a7747613c0 <line:180:9, col:24>
|     `-ImplicitCastExpr 0x55a7747613a8 <col:16, col:24> 'bool' <IntegralToBoolean>
|       `-ImplicitCastExpr 0x55a774761390 <col:16, col:24> 'uint8_t':'unsigned char' <LValueToRValue>
|         `-MemberExpr 0x55a774761360 <col:16, col:24> 'const uint8_t':'const unsigned char' lvalue .is_scheduled 0x55a77475fa38
|           `-MemberExpr 0x55a774761318 <col:16, col:24> 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55a77475fb58
|             `-MemberExpr 0x55a7747612e8 <col:16> 'const union Status':'const Task::Status' lvalue ->_status 0x55a77475fd88
|               `-CXXThisExpr 0x55a7747612d8 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x55a77475ea88 <line:190:5, line:192:5> line:190:17 unschedule 'void ()' inline
| `-CompoundStmt 0x55a7747614e8 <col:30, line:192:5>
|   `-BinaryOperator 0x55a7747614c8 <line:191:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x55a774761470 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x55a77475fa38
|     | `-MemberExpr 0x55a774761428 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55a77475fb58
|     |   `-MemberExpr 0x55a7747613f8 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x55a77475fd88
|     |     `-CXXThisExpr 0x55a7747613e8 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x55a7747614b0 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x55a7747614a0 <col:32> 'bool' false
|-CXXMethodDecl 0x55a77475eb48 <line:201:5, line:206:5> line:201:17 used reschedule 'void ()' inline
| `-CompoundStmt 0x55a774761838 <col:30, line:206:5>
|   |-BinaryOperator 0x55a7747615e0 <line:202:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x55a774761588 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x55a77475fa38
|   | | `-MemberExpr 0x55a774761540 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55a77475fb58
|   | |   `-MemberExpr 0x55a774761510 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x55a77475fd88
|   | |     `-CXXThisExpr 0x55a774761500 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x55a7747615c8 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x55a7747615b8 <col:32> 'bool' true
|   |-CallExpr 0x55a774761680 <line:203:9, col:21> 'void'
|   | `-ImplicitCastExpr 0x55a774761668 <col:9> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a774761648 <col:9> 'void ()' lvalue Function 0x55a774829e00 'click_fence' 'void ()'
|   `-IfStmt 0x55a774761820 <line:204:9, line:205:32>
|     |-BinaryOperator 0x55a774761760 <line:204:13, col:34> 'bool' '<'
|     | |-ImplicitCastExpr 0x55a774761730 <col:13, col:30> 'uintptr_t':'unsigned long' <LValueToRValue>
|     | | `-MemberExpr 0x55a7747616e0 <col:13, col:30> 'uintptr_t':'unsigned long' lvalue .x 0x55a774760198
|     | |   `-MemberExpr 0x55a7747616b0 <col:13> 'Task::Pending' lvalue ->_pending_nextptr 0x55a774760210
|     | |     `-CXXThisExpr 0x55a7747616a0 <col:13> 'Task *' implicit this
|     | `-ImplicitCastExpr 0x55a774761748 <col:34> 'unsigned long' <IntegralCast>
|     |   `-IntegerLiteral 0x55a774761710 <col:34> 'int' 2
|     `-CXXMemberCallExpr 0x55a7747617e0 <line:205:13, col:32> 'void'
|       |-MemberExpr 0x55a774761790 <col:13> '<bound member function type>' ->complete_schedule 0x55a774760c10
|       | `-CXXThisExpr 0x55a774761780 <col:13> 'Task *' implicit this
|       `-ImplicitCastExpr 0x55a774761808 <col:31> 'RouterThread *' <NullToPointer>
|         `-IntegerLiteral 0x55a7747617c0 <col:31> 'int' 0
|-CXXMethodDecl 0x55a77475ec08 <line:238:5, line:240:5> line:238:17 fast_reschedule 'void ()' inline
| `-CompoundStmt 0x55a774761960 <col:35, line:240:5>
|   `-BinaryOperator 0x55a774761940 <line:239:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x55a7747618e8 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x55a77475fa38
|     | `-MemberExpr 0x55a7747618a0 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55a77475fb58
|     |   `-MemberExpr 0x55a774761870 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x55a77475fd88
|     |     `-CXXThisExpr 0x55a774761860 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x55a774761928 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x55a774761918 <col:32> 'bool' true
|-CXXMethodDecl 0x55a77475ecc8 <line:250:5, line:253:5> line:250:17 strong_unschedule 'void ()' inline
| `-CompoundStmt 0x55a774761b78 <col:37, line:253:5>
|   |-BinaryOperator 0x55a774761a58 <line:251:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x55a774761a00 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x55a77475fa38
|   | | `-MemberExpr 0x55a7747619b8 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55a77475fb58
|   | |   `-MemberExpr 0x55a774761988 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x55a77475fd88
|   | |     `-CXXThisExpr 0x55a774761978 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x55a774761a40 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x55a774761a30 <col:32> 'bool' false
|   `-BinaryOperator 0x55a774761b58 <line:252:9, col:41> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x55a774761b00 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_strong_unscheduled 0x55a77475fa98
|     | `-MemberExpr 0x55a774761ab8 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55a77475fb58
|     |   `-MemberExpr 0x55a774761a88 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x55a77475fd88
|     |     `-CXXThisExpr 0x55a774761a78 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x55a774761b40 <col:41> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x55a774761b30 <col:41> 'bool' true
|-CXXMethodDecl 0x55a77475ed88 <line:261:5, line:264:5> line:261:17 strong_reschedule 'void ()' inline
| `-CompoundStmt 0x55a774761cf8 <col:37, line:264:5>
|   |-BinaryOperator 0x55a774761c78 <line:262:9, col:41> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x55a774761c20 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_strong_unscheduled 0x55a77475fa98
|   | | `-MemberExpr 0x55a774761bd8 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55a77475fb58
|   | |   `-MemberExpr 0x55a774761ba8 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x55a77475fd88
|   | |     `-CXXThisExpr 0x55a774761b98 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x55a774761c60 <col:41> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x55a774761c50 <col:41> 'bool' false
|   `-CXXMemberCallExpr 0x55a774761cd8 <line:263:9, col:20> 'void'
|     `-MemberExpr 0x55a774761ca8 <col:9> '<bound member function type>' ->reschedule 0x55a77475eb48
|       `-CXXThisExpr 0x55a774761c98 <col:9> 'Task *' implicit this
|-CXXMethodDecl 0x55a77475eed0 <line:275:5, col:39> col:10 move_thread 'void (int)'
| `-ParmVarDecl 0x55a77475ee40 <col:22, col:26> col:26 new_thread_id 'int'
|-CXXMethodDecl 0x55a77475efa0 <line:279:5, col:26> col:16 tickets 'int () const' inline
|-CXXMethodDecl 0x55a77475f0e8 <line:280:5, col:34> col:17 used set_tickets 'void (int)' inline
| `-ParmVarDecl 0x55a77475f058 <col:29, col:33> col:33 n 'int'
|-CXXMethodDecl 0x55a77475f238 <line:281:5, col:41> col:17 adjust_tickets 'void (int)' inline
| `-ParmVarDecl 0x55a77475f1a8 <col:32, col:36> col:36 delta 'int'
|-CXXMethodDecl 0x55a77475f300 <line:284:5, col:22> col:17 fire 'bool ()' inline
|-CXXMethodDecl 0x55a77475f3c0 <line:299:5, col:64> col:25 hook 'TaskCallback () const' inline
| `-DeprecatedAttr 0x55a77475f460 <col:53> "" ""
|-CXXMethodDecl 0x55a77475f4f8 <line:300:5, col:58> col:18 thunk 'void *() const' inline
| `-DeprecatedAttr 0x55a77475f598 <col:47> "" ""
|-AccessSpecDecl 0x55a77475f608 <line:303:3, col:10> col:3 private
|-FieldDecl 0x55a77475f648 <line:310:5, col:14> col:14 referenced _stride 'unsigned int'
|-FieldDecl 0x55a77475f6b0 <line:311:5, col:9> col:9 referenced _tickets 'int'
|-CXXRecordDecl 0x55a77475f700 <line:314:5, line:321:5> line:314:11 union Status definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55a77475f818 <col:5, col:11> col:11 implicit union Status
| |-CXXRecordDecl 0x55a77475f8a8 <line:315:9, line:319:9> line:315:9 struct definition
| | |-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | | |-DefaultConstructor exists trivial
| | | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | | |-MoveConstructor exists simple trivial
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial
| | |-FieldDecl 0x55a77475f9d8 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
| | |-FieldDecl 0x55a77475fa38 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
| | |-FieldDecl 0x55a77475fa98 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
| | |-CXXConstructorDecl 0x55a7748c6a18 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
| | |-CXXDestructorDecl 0x55a7748c6af0 <col:9> col:9 implicit ~ 'void () noexcept' inline default trivial
| | |-CXXConstructorDecl 0x55a7748c6da8 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x55a7748c6da8
| | | `-ParmVarDecl 0x55a7748c6eb8 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
| | `-CXXConstructorDecl 0x55a7748c6f58 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x55a7748c6f58
| |   `-ParmVarDecl 0x55a7748c7068 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'
| |-FieldDecl 0x55a77475fb58 <col:9> col:9 implicit referenced 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| |-IndirectFieldDecl 0x55a77475fbb8 <line:316:21> col:21 implicit home_thread_id 'int16_t':'short'
| | |-Field 0x55a77475fb58 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x55a77475f9d8 'home_thread_id' 'int16_t':'short'
| |-IndirectFieldDecl 0x55a77475fc10 <line:317:21> col:21 implicit is_scheduled 'uint8_t':'unsigned char'
| | |-Field 0x55a77475fb58 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x55a77475fa38 'is_scheduled' 'uint8_t':'unsigned char'
| |-IndirectFieldDecl 0x55a77475fc68 <line:318:21> col:21 implicit is_strong_unscheduled 'uint8_t':'unsigned char'
| | |-Field 0x55a77475fb58 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x55a77475fa98 'is_strong_unscheduled' 'uint8_t':'unsigned char'
| |-FieldDecl 0x55a77475fcc0 <line:320:9, col:18> col:18 status 'uint32_t':'unsigned int'
| |-CXXConstructorDecl 0x55a7748c6928 <line:314:11> col:11 implicit used Status 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55a7748c7288 <col:11>
| |-CXXConstructorDecl 0x55a7748c6bf8 <col:11> col:11 implicit constexpr Status 'void (const Task::Status &)' inline default trivial noexcept-unevaluated 0x55a7748c6bf8
| | `-ParmVarDecl 0x55a7748c6d08 <col:11> col:11 'const Task::Status &'
| |-CXXConstructorDecl 0x55a7748c7108 <col:11> col:11 implicit constexpr Status 'void (Task::Status &&)' inline default trivial noexcept-unevaluated 0x55a7748c7108
| | `-ParmVarDecl 0x55a7748c7218 <col:11> col:11 'Task::Status &&'
| `-CXXDestructorDecl 0x55a7749ea388 <col:11> col:11 implicit ~Status 'void () noexcept' inline default trivial
|-FieldDecl 0x55a77475fd88 <col:5, line:321:7> col:7 referenced _status 'union Status':'Task::Status'
|-FieldDecl 0x55a77475fe00 <line:323:5, col:18> col:18 referenced _hook 'TaskCallback':'bool (*)(Task *, void *)'
|-FieldDecl 0x55a77475fe68 <line:324:5, col:11> col:11 referenced _thunk 'void *'
|-FieldDecl 0x55a77475fec8 <line:335:5, col:19> col:19 referenced _thread 'RouterThread *'
|-FieldDecl 0x55a77475ff28 <line:337:5, col:14> col:14 referenced _owner 'Element *'
|-CXXRecordDecl 0x55a77475ff78 <line:339:5, line:342:5> line:339:11 referenced union Pending definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55a774760098 <col:5, col:11> col:11 implicit union Pending
| |-FieldDecl 0x55a774760138 <line:340:9, col:15> col:15 t 'Task *'
| |-FieldDecl 0x55a774760198 <line:341:9, col:19> col:19 referenced x 'uintptr_t':'unsigned long'
| |-CXXConstructorDecl 0x55a7748bfe18 <line:339:11> col:11 implicit constexpr Pending 'void (const Task::Pending &)' inline default trivial noexcept-unevaluated 0x55a7748bfe18
| | `-ParmVarDecl 0x55a7748bff28 <col:11> col:11 'const Task::Pending &'
| |-CXXConstructorDecl 0x55a7748bffc8 <col:11> col:11 implicit constexpr Pending 'void (Task::Pending &&)' inline default trivial noexcept-unevaluated 0x55a7748bffc8
| | `-ParmVarDecl 0x55a7748c00d8 <col:11> col:11 'Task::Pending &&'
| |-CXXDestructorDecl 0x55a7748c0148 <col:11> col:11 implicit ~Pending 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x55a7748c09c8 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(const Task::Pending &)' inline default trivial noexcept-unevaluated 0x55a7748c09c8
| | `-ParmVarDecl 0x55a7748c0ad8 <col:11> col:11 'const Task::Pending &'
| |-CXXMethodDecl 0x55a7748c0b48 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(Task::Pending &&)' inline default trivial noexcept-unevaluated 0x55a7748c0b48
| | `-ParmVarDecl 0x55a7748c0c58 <col:11> col:11 'Task::Pending &&'
| `-CXXConstructorDecl 0x55a7748c72e8 <col:11> col:11 implicit used Pending 'void () noexcept' inline default trivial
|   `-CompoundStmt 0x55a7748c73c0 <col:11>
|-FieldDecl 0x55a774760210 <line:343:5, col:13> col:13 referenced _pending_nextptr 'Task::Pending'
|-CXXConstructorDecl 0x55a774760358 <line:345:5, col:23> col:5 Task 'void (const Task &)'
| `-ParmVarDecl 0x55a774760298 <col:10, col:22> col:22 x 'const Task &'
|-CXXMethodDecl 0x55a774760508 <line:346:5, col:34> col:11 operator= 'Task &(const Task &)'
| `-ParmVarDecl 0x55a774760418 <col:21, col:33> col:33 x 'const Task &'
|-CXXMethodDecl 0x55a7747605d0 <line:347:5, col:18> col:10 cleanup 'void ()'
|-CXXMethodDecl 0x55a774760690 <line:352:5, col:37> col:17 used on_scheduled_list 'bool () const' inline
|-CXXMethodDecl 0x55a774760750 <line:353:5, line:355:5> line:353:17 on_pending_list 'bool () const' inline
| `-CompoundStmt 0x55a774843b60 <col:41, line:355:5>
|   `-ReturnStmt 0x55a774843b50 <line:354:9, col:38>
|     `-BinaryOperator 0x55a774843b30 <col:16, col:38> 'bool' '!='
|       |-ImplicitCastExpr 0x55a774843b00 <col:16, col:33> 'uintptr_t':'unsigned long' <LValueToRValue>
|       | `-MemberExpr 0x55a774761d58 <col:16, col:33> 'const uintptr_t':'const unsigned long' lvalue .x 0x55a774760198
|       |   `-MemberExpr 0x55a774761d28 <col:16> 'const Task::Pending' lvalue ->_pending_nextptr 0x55a774760210
|       |     `-CXXThisExpr 0x55a774761d18 <col:16> 'const Task *' implicit this
|       `-ImplicitCastExpr 0x55a774843b18 <col:38> 'unsigned long' <IntegralCast>
|         `-IntegerLiteral 0x55a774843ae0 <col:38> 'int' 0
|-CXXMethodDecl 0x55a774760810 <line:356:5, col:33> col:17 needs_cleanup 'bool () const' inline
|-CXXMethodDecl 0x55a774760950 <line:361:5, col:33> col:10 add_pending 'void (bool)'
| `-ParmVarDecl 0x55a7747608c0 <col:22, col:27> col:27 always 'bool'
|-CXXMethodDecl 0x55a774760ac8 <line:362:5, col:46> col:10 process_pending 'void (RouterThread *)'
| `-ParmVarDecl 0x55a774760a08 <col:26, col:40> col:40 thread 'RouterThread *'
|-CXXMethodDecl 0x55a774760c10 <line:364:5, col:64> col:10 used complete_schedule 'void (RouterThread *)'
| `-ParmVarDecl 0x55a774760b80 <col:28, col:42> col:42 process_pending_thread 'RouterThread *'
|-CXXMethodDecl 0x55a774760cd8 <line:365:5, col:44> col:17 remove_from_scheduled_list 'void ()' inline
|-CXXMethodDecl 0x55a774760ea0 <line:367:5, col:55> col:17 error_hook 'bool (Task *, void *)' static
| |-ParmVarDecl 0x55a774760d88 <col:28, col:34> col:34 task 'Task *'
| `-ParmVarDecl 0x55a774760e08 <col:40, col:46> col:46 user_data 'void *'
|-FriendDecl 0x55a774760fa0 <line:369:5, col:18> col:12 'class RouterThread':'RouterThread'
`-FriendDecl 0x55a774761030 <line:370:5, col:18> col:12 'class Master':'Master'

Layout: <CGRecordLayout
  LLVMType:%class.Task = type { %struct.TaskLink.base, i32, i32, %"union.Task::Status", i1 (%class.Task*, i8*)*, i8*, %class.RouterThread*, %class.Element*, %"union.Task::Pending" }
  NonVirtualBaseLLVMType:%class.Task = type { %struct.TaskLink.base, i32, i32, %"union.Task::Status", i1 (%class.Task*, i8*)*, i8*, %class.RouterThread*, %class.Element*, %"union.Task::Pending" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55a774847658 <../dummy_inc/click/timer.hh:343:5, line:345:5> line:343:5 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x55a774847788 <line:344:2, col:16> col:16 referenced callback 'TimerCallback':'void (*)(Timer *, void *)'
`-CXXDestructorDecl 0x55a774848278 <line:343:5> col:5 implicit ~ 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%union.anon = type { void (%class.Timer*, i8*)* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55a774843f58 prev 0x55a7747da800 <../dummy_inc/click/timer.hh:14:1, line:358:1> line:14:7 class Timer definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55a774844050 <col:1, col:7> col:7 implicit referenced class Timer
|-AccessSpecDecl 0x55a7748440e0 <col:15, col:21> col:15 public
|-CXXConstructorDecl 0x55a774844140 <line:22:5, col:11> col:5 Timer 'void ()'
|-CXXRecordDecl 0x55a7748441e8 <line:24:5, line:25:5> line:24:12 referenced struct do_nothing_t definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55a774844308 <col:5, col:12> col:12 implicit struct do_nothing_t
| |-CXXConstructorDecl 0x55a7749e8e70 <col:12> col:12 implicit constexpr do_nothing_t 'void ()' inline default trivial noexcept-unevaluated 0x55a7749e8e70
| |-CXXConstructorDecl 0x55a7749e8f50 <col:12> col:12 implicit constexpr do_nothing_t 'void (const Timer::do_nothing_t &)' inline default trivial noexcept-unevaluated 0x55a7749e8f50
| | `-ParmVarDecl 0x55a7749e9038 <col:12> col:12 'const Timer::do_nothing_t &'
| `-CXXConstructorDecl 0x55a7749e90d8 <col:12> col:12 implicit constexpr do_nothing_t 'void (Timer::do_nothing_t &&)' inline default trivial noexcept-unevaluated 0x55a7749e90d8
|   `-ParmVarDecl 0x55a7749e91e8 <col:12> col:12 'Timer::do_nothing_t &&'
|-CXXConstructorDecl 0x55a7748444a8 <line:32:5, col:37> col:5 Timer 'void (const Timer::do_nothing_t &)'
| `-ParmVarDecl 0x55a7748443e8 <col:11, col:31> col:31 unused 'const Timer::do_nothing_t &'
|-CXXConstructorDecl 0x55a7748446f8 <line:38:5, col:43> col:5 Timer 'void (TimerCallback, void *)'
| |-ParmVarDecl 0x55a774844568 <col:11, col:25> col:25 f 'TimerCallback':'void (*)(Timer *, void *)'
| `-ParmVarDecl 0x55a7748445e8 <col:28, col:34> col:34 user_data 'void *'
|-CXXConstructorDecl 0x55a774844850 <line:43:5, col:27> col:5 Timer 'void (Element *)'
| `-ParmVarDecl 0x55a7748447c0 <col:11, col:20> col:20 element 'Element *'
|-CXXConstructorDecl 0x55a7748449d8 <line:47:5, col:21> col:5 used Timer 'void (Task *)'
| `-ParmVarDecl 0x55a774844910 <col:11, col:17> col:17 task 'Task *'
|-CXXConstructorDecl 0x55a774844b88 <line:52:5, col:25> col:5 Timer 'void (const Timer &)'
| `-ParmVarDecl 0x55a774844ac8 <col:11, col:24> col:24 x 'const Timer &'
|-CXXDestructorDecl 0x55a774844c80 <line:55:5, line:58:5> line:55:12 used ~Timer 'void () noexcept' inline
| `-CompoundStmt 0x55a774848450 <col:21, line:58:5>
|   `-IfStmt 0x55a774848438 <line:56:2, line:57:17>
|     |-CXXMemberCallExpr 0x55a7748483a0 <line:56:6, col:16> 'bool'
|     | `-MemberExpr 0x55a774848370 <col:6> '<bound member function type>' ->scheduled 0x55a7748454d8
|     |   `-ImplicitCastExpr 0x55a7748483c0 <col:6> 'const Timer *' <NoOp>
|     |     `-CXXThisExpr 0x55a774848360 <col:6> 'Timer *' implicit this
|     `-CXXMemberCallExpr 0x55a774848418 <line:57:6, col:17> 'void'
|       `-MemberExpr 0x55a7748483e8 <col:6> '<bound member function type>' ->unschedule 0x55a774846b00
|         `-CXXThisExpr 0x55a7748483d8 <col:6> 'Timer *' implicit this
|-CXXMethodDecl 0x55a774844d80 <line:62:5, line:65:5> line:62:17 used assign 'void ()' inline
| `-CompoundStmt 0x55a7748485f0 <col:26, line:65:5>
|   |-BinaryOperator 0x55a774848510 <line:63:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x55a7748484a8 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x55a774847788
|   | | `-MemberExpr 0x55a774848478 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x55a774847848
|   | |   `-CXXThisExpr 0x55a774848468 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x55a7748484f8 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a7748484d8 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x55a774847ca8 'do_nothing_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x55a7748485d0 <line:64:2, col:20> 'void *' lvalue '='
|     |-MemberExpr 0x55a774848540 <col:2> 'void *' lvalue ->_thunk 0x55a7748478c8
|     | `-CXXThisExpr 0x55a774848530 <col:2> 'Timer *' implicit this
|     `-CStyleCastExpr 0x55a7748485a8 <col:11, col:20> 'void *' <IntegralToPointer>
|       `-IntegerLiteral 0x55a774848570 <col:20> 'int' 1
|-CXXMethodDecl 0x55a774844ec0 <line:68:5, line:71:5> line:68:17 assign 'void (const Timer::do_nothing_t &)' inline
| |-ParmVarDecl 0x55a774844e30 <col:24, col:44> col:44 used unused 'const Timer::do_nothing_t &'
| `-CompoundStmt 0x55a774848750 <col:52, line:71:5>
|   |-CStyleCastExpr 0x55a774848640 <line:69:2, col:9> 'void' <ToVoid>
|   | `-DeclRefExpr 0x55a774848610 <col:9> 'const Timer::do_nothing_t' lvalue ParmVar 0x55a774844e30 'unused' 'const Timer::do_nothing_t &'
|   `-CXXMemberCallExpr 0x55a774848730 <line:70:2, col:9> 'void'
|     `-MemberExpr 0x55a774848700 <col:2> '<bound member function type>' ->assign 0x55a774844d80
|       `-CXXThisExpr 0x55a7748486f0 <col:2> 'Timer *' implicit this
|-CXXMethodDecl 0x55a774845090 <line:76:5, line:79:5> line:76:17 assign 'void (TimerCallback, void *)' inline
| |-ParmVarDecl 0x55a774844f78 <col:24, col:38> col:38 used f 'TimerCallback':'void (*)(Timer *, void *)'
| |-ParmVarDecl 0x55a774844ff8 <col:41, col:47> col:47 used user_data 'void *'
| `-CompoundStmt 0x55a7748488d0 <col:58, line:79:5>
|   |-BinaryOperator 0x55a774848818 <line:77:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x55a7748487b0 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x55a774847788
|   | | `-MemberExpr 0x55a774848780 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x55a774847848
|   | |   `-CXXThisExpr 0x55a774848770 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x55a774848800 <col:19> 'TimerCallback':'void (*)(Timer *, void *)' <LValueToRValue>
|   |   `-DeclRefExpr 0x55a7748487e0 <col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue ParmVar 0x55a774844f78 'f' 'TimerCallback':'void (*)(Timer *, void *)'
|   `-BinaryOperator 0x55a7748488b0 <line:78:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x55a774848848 <col:2> 'void *' lvalue ->_thunk 0x55a7748478c8
|     | `-CXXThisExpr 0x55a774848838 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x55a774848898 <col:11> 'void *' <LValueToRValue>
|       `-DeclRefExpr 0x55a774848878 <col:11> 'void *' lvalue ParmVar 0x55a774844ff8 'user_data' 'void *'
|-CXXMethodDecl 0x55a7748451e0 <line:84:5, line:87:5> line:84:10 assign 'void (Element *)'
| |-ParmVarDecl 0x55a774845150 <col:17, col:26> col:26 used element 'Element *'
| `-CompoundStmt 0x55a774848a68 <col:35, line:87:5>
|   |-BinaryOperator 0x55a774848998 <line:85:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x55a774848930 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x55a774847788
|   | | `-MemberExpr 0x55a774848900 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x55a774847848
|   | |   `-CXXThisExpr 0x55a7748488f0 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x55a774848980 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a774848960 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x55a774847e80 'element_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x55a774848a48 <line:86:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x55a7748489c8 <col:2> 'void *' lvalue ->_thunk 0x55a7748478c8
|     | `-CXXThisExpr 0x55a7748489b8 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x55a774848a30 <col:11> 'void *' <BitCast>
|       `-ImplicitCastExpr 0x55a774848a18 <col:11> 'Element *' <LValueToRValue>
|         `-DeclRefExpr 0x55a7748489f8 <col:11> 'Element *' lvalue ParmVar 0x55a774845150 'element' 'Element *'
|-CXXMethodDecl 0x55a774845328 <line:91:5, line:94:5> line:91:10 assign 'void (Task *)'
| |-ParmVarDecl 0x55a774845298 <col:17, col:23> col:23 used task 'Task *'
| `-CompoundStmt 0x55a774848c00 <col:29, line:94:5>
|   |-BinaryOperator 0x55a774848b30 <line:92:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x55a774848ac8 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x55a774847788
|   | | `-MemberExpr 0x55a774848a98 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x55a774847848
|   | |   `-CXXThisExpr 0x55a774848a88 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x55a774848b18 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a774848af8 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x55a774848058 'task_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x55a774848be0 <line:93:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x55a774848b60 <col:2> 'void *' lvalue ->_thunk 0x55a7748478c8
|     | `-CXXThisExpr 0x55a774848b50 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x55a774848bc8 <col:11> 'void *' <BitCast>
|       `-ImplicitCastExpr 0x55a774848bb0 <col:11> 'Task *' <LValueToRValue>
|         `-DeclRefExpr 0x55a774848b90 <col:11> 'Task *' lvalue ParmVar 0x55a774845298 'task' 'Task *'
|-CXXMethodDecl 0x55a774845418 <line:98:5, line:100:5> line:98:17 initialized 'bool () const' inline
| `-CompoundStmt 0x55a774848ce0 <col:37, line:100:5>
|   `-ReturnStmt 0x55a774848cd0 <line:99:2, col:19>
|     `-BinaryOperator 0x55a774848cb0 <col:9, col:19> 'bool' '!='
|       |-ImplicitCastExpr 0x55a774848c80 <col:9> 'Element *' <LValueToRValue>
|       | `-MemberExpr 0x55a774848c30 <col:9> 'Element *const' lvalue ->_owner 0x55a774847928
|       |   `-CXXThisExpr 0x55a774848c20 <col:9> 'const Timer *' implicit this
|       `-ImplicitCastExpr 0x55a774848c98 <col:19> 'Element *' <NullToPointer>
|         `-IntegerLiteral 0x55a774848c60 <col:19> 'int' 0
|-CXXMethodDecl 0x55a7748454d8 <line:103:5, line:105:5> line:103:17 used scheduled 'bool () const' inline
| `-CompoundStmt 0x55a774848da0 <col:35, line:105:5>
|   `-ReturnStmt 0x55a774848d90 <line:104:2, col:23>
|     `-BinaryOperator 0x55a774848d70 <col:9, col:23> 'bool' '!='
|       |-ImplicitCastExpr 0x55a774848d58 <col:9> 'int' <LValueToRValue>
|       | `-MemberExpr 0x55a774848d08 <col:9> 'const int' lvalue ->_schedpos1 0x55a7748475a8
|       |   `-CXXThisExpr 0x55a774848cf8 <col:9> 'const Timer *' implicit this
|       `-IntegerLiteral 0x55a774848d38 <col:23> 'int' 0
|-CXXMethodDecl 0x55a774845598 <line:116:5, line:118:5> line:116:29 used expiry_steady 'const Timestamp &() const' inline
| `-CompoundStmt 0x55a774848e08 <col:51, line:118:5>
|   `-ReturnStmt 0x55a774848df8 <line:117:2, col:9>
|     `-MemberExpr 0x55a774848dc8 <col:9> 'const Timestamp' lvalue ->_expiry_s 0x55a774847608
|       `-CXXThisExpr 0x55a774848db8 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x55a774845658 <line:131:5, line:136:5> line:131:22 expiry 'Timestamp () const' inline
| `-CompoundStmt 0x55a774849360 <col:37, line:136:5>
|   `-IfStmt 0x55a774849338 <line:132:2, line:135:13> has_else
|     |-ImplicitCastExpr 0x55a774848ec8 <line:132:6> 'bool' <MemberPointerToBoolean>
|     | `-ImplicitCastExpr 0x55a774848eb0 <col:6> 'Timestamp::unspecified_bool_type':'Timestamp::seconds_type (Timestamp::*)() const' <UserDefinedConversion>
|     |   `-CXXMemberCallExpr 0x55a774848e90 <col:6> 'Timestamp::unspecified_bool_type':'Timestamp::seconds_type (Timestamp::*)() const'
|     |     `-MemberExpr 0x55a774848e60 <col:6> '<bound member function type>' .operator int (Timestamp::*)() const 0x55a77476c8d8
|     |       `-MemberExpr 0x55a774848e30 <col:6> 'const Timestamp' lvalue ->_expiry_s 0x55a774847608
|     |         `-CXXThisExpr 0x55a774848e20 <col:6> 'const Timer *' implicit this
|     |-ReturnStmt 0x55a7748492a8 <line:133:6, col:72>
|     | `-ExprWithCleanups 0x55a774849290 <col:13, col:72> 'Timestamp'
|     |   `-CXXConstructExpr 0x55a774849260 <col:13, col:72> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|     |     `-MaterializeTemporaryExpr 0x55a774849248 <col:13, col:72> 'Timestamp' xvalue
|     |       `-CXXOperatorCallExpr 0x55a774849210 <col:13, col:72> 'Timestamp'
|     |         |-ImplicitCastExpr 0x55a7748491f8 <col:45> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|     |         | `-DeclRefExpr 0x55a7748491d8 <col:45> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55a77479b0b0 'operator-' 'Timestamp (Timestamp, const Timestamp &)'
|     |         |-CXXConstructExpr 0x55a774849178 <col:13, col:43> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|     |         | `-MaterializeTemporaryExpr 0x55a774849160 <col:13, col:43> 'Timestamp' xvalue
|     |         |   `-CXXOperatorCallExpr 0x55a774849088 <col:13, col:43> 'Timestamp'
|     |         |     |-ImplicitCastExpr 0x55a774849070 <col:23> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|     |         |     | `-DeclRefExpr 0x55a774849050 <col:23> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55a77479ad70 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|     |         |     |-CXXConstructExpr 0x55a774848ff0 <col:13> 'Timestamp' 'void (const Timestamp &) noexcept'
|     |         |     | `-MemberExpr 0x55a774848ef0 <col:13> 'const Timestamp' lvalue ->_expiry_s 0x55a774847608
|     |         |     |   `-CXXThisExpr 0x55a774848ee0 <col:13> 'const Timer *' implicit this
|     |         |     `-MaterializeTemporaryExpr 0x55a774849038 <col:25, col:43> 'const Timestamp' lvalue
|     |         |       `-ImplicitCastExpr 0x55a774849020 <col:25, col:43> 'const Timestamp' <NoOp>
|     |         |         `-CallExpr 0x55a774848fd0 <col:25, col:43> 'Timestamp'
|     |         |           `-ImplicitCastExpr 0x55a774848fb8 <col:25, col:36> 'Timestamp (*)()' <FunctionToPointerDecay>
|     |         |             `-DeclRefExpr 0x55a774848f58 <col:25, col:36> 'Timestamp ()' lvalue CXXMethod 0x55a77478e3d0 'recent' 'Timestamp ()'
|     |         `-MaterializeTemporaryExpr 0x55a7748491c0 <col:47, col:72> 'const Timestamp' lvalue
|     |           `-ImplicitCastExpr 0x55a7748491a8 <col:47, col:72> 'const Timestamp' <NoOp>
|     |             `-CallExpr 0x55a774849140 <col:47, col:72> 'Timestamp'
|     |               `-ImplicitCastExpr 0x55a774849128 <col:47, col:58> 'Timestamp (*)()' <FunctionToPointerDecay>
|     |                 `-DeclRefExpr 0x55a7748490f8 <col:47, col:58> 'Timestamp ()' lvalue CXXMethod 0x55a7745e9920 'recent_steady' 'Timestamp ()'
|     `-ReturnStmt 0x55a774849328 <line:135:6, col:13>
|       `-CXXConstructExpr 0x55a7748492f8 <col:13> 'Timestamp' 'void (const Timestamp &) noexcept'
|         `-MemberExpr 0x55a7748492c8 <col:13> 'const Timestamp' lvalue ->_expiry_s 0x55a774847608
|           `-CXXThisExpr 0x55a7748492b8 <col:13> 'const Timer *' implicit this
|-CXXMethodDecl 0x55a774845718 <line:139:5, line:141:5> line:139:20 router 'Router *() const' inline
| `-CompoundStmt 0x55a774849448 <col:35, line:141:5>
|   `-ReturnStmt 0x55a774849438 <line:140:2, col:24>
|     `-CXXMemberCallExpr 0x55a774849400 <col:9, col:24> 'Router *'
|       `-MemberExpr 0x55a7748493d0 <col:9, col:17> '<bound member function type>' ->router 0x55a7747ecf60
|         `-ImplicitCastExpr 0x55a774849420 <col:9> 'const Element *' <NoOp>
|           `-ImplicitCastExpr 0x55a7748493b8 <col:9> 'Element *' <LValueToRValue>
|             `-MemberExpr 0x55a774849388 <col:9> 'Element *const' lvalue ->_owner 0x55a774847928
|               `-CXXThisExpr 0x55a774849378 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x55a7748457d8 <line:144:5, line:146:5> line:144:21 element 'Element *() const' inline
| `-CompoundStmt 0x55a7748494c8 <col:37, line:146:5>
|   `-ReturnStmt 0x55a7748494b8 <line:145:2, col:9>
|     `-ImplicitCastExpr 0x55a7748494a0 <col:9> 'Element *' <LValueToRValue>
|       `-MemberExpr 0x55a774849470 <col:9> 'Element *const' lvalue ->_owner 0x55a774847928
|         `-CXXThisExpr 0x55a774849460 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x55a774845898 <line:149:5, line:151:5> line:149:26 thread 'RouterThread *() const' inline
| `-CompoundStmt 0x55a774849548 <col:41, line:151:5>
|   `-ReturnStmt 0x55a774849538 <line:150:2, col:9>
|     `-ImplicitCastExpr 0x55a774849520 <col:9> 'RouterThread *' <LValueToRValue>
|       `-MemberExpr 0x55a7748494f0 <col:9> 'RouterThread *const' lvalue ->_thread 0x55a774847988
|         `-CXXThisExpr 0x55a7748494e0 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x55a774845960 <line:154:5, col:26> col:9 home_thread_id 'int () const'
|-CXXMethodDecl 0x55a774845b20 <line:171:5, col:55> col:10 initialize 'void (Element *, bool)'
| |-ParmVarDecl 0x55a774845a10 <col:21, col:30> col:30 owner 'Element *'
| `-ParmVarDecl 0x55a774845a88 <col:37, col:50> col:42 quiet 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55a774848268 <col:50> 'bool' false
|-CXXMethodDecl 0x55a774845ca8 <line:181:5, col:35> col:10 initialize 'void (Router *)'
| `-ParmVarDecl 0x55a774845be0 <col:21, col:29> col:29 router 'Router *'
|-CXXMethodDecl 0x55a774845df0 <line:191:5, col:57> col:10 used schedule_at_steady 'void (const Timestamp &)'
| `-ParmVarDecl 0x55a774845d60 <col:29, col:46> col:46 when_steady 'const Timestamp &'
|-CXXMethodDecl 0x55a774845f38 <line:197:5, col:59> col:10 reschedule_at_steady 'void (const Timestamp &)'
| `-ParmVarDecl 0x55a774845ea8 <col:31, col:48> col:48 when_steady 'const Timestamp &'
|-CXXMethodDecl 0x55a774846080 <line:210:5, col:50> col:17 used schedule_at 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x55a774845ff0 <col:29, col:46> col:46 when 'const Timestamp &'
|-CXXMethodDecl 0x55a7748461c8 <line:216:5, col:52> col:17 reschedule_at 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x55a774846138 <col:31, col:48> col:48 when 'const Timestamp &'
|-CXXMethodDecl 0x55a774846290 <line:221:5, line:223:5> line:221:17 schedule_now 'void ()' inline
| `-CompoundStmt 0x55a7748496b0 <col:32, line:223:5>
|   `-ExprWithCleanups 0x55a774849698 <line:222:2, col:47> 'void'
|     `-CXXMemberCallExpr 0x55a774849640 <col:2, col:47> 'void'
|       |-MemberExpr 0x55a774849570 <col:2> '<bound member function type>' ->schedule_at_steady 0x55a774845df0
|       | `-CXXThisExpr 0x55a774849560 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55a774849680 <col:21, col:46> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55a774849668 <col:21, col:46> 'const Timestamp' <NoOp>
|           `-CallExpr 0x55a774849620 <col:21, col:46> 'Timestamp'
|             `-ImplicitCastExpr 0x55a774849608 <col:21, col:32> 'Timestamp (*)()' <FunctionToPointerDecay>
|               `-DeclRefExpr 0x55a7748495d8 <col:21, col:32> 'Timestamp ()' lvalue CXXMethod 0x55a7745e9920 'recent_steady' 'Timestamp ()'
|-CXXMethodDecl 0x55a7748463d0 <line:233:5, col:47> col:10 used schedule_after 'void (const Timestamp &)'
| `-ParmVarDecl 0x55a774846340 <col:25, col:42> col:42 delta 'const Timestamp &'
|-CXXMethodDecl 0x55a774846518 <line:239:5, line:241:5> line:239:17 used schedule_after_sec 'void (uint32_t)' inline
| |-ParmVarDecl 0x55a774846488 <col:36, col:45> col:45 used delta_sec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55a774849838 <col:56, line:241:5>
|   `-ExprWithCleanups 0x55a774849820 <line:240:2, col:40> 'void'
|     `-CXXMemberCallExpr 0x55a7748497c8 <col:2, col:40> 'void'
|       |-MemberExpr 0x55a7748496d8 <col:2> '<bound member function type>' ->schedule_after 0x55a7748463d0
|       | `-CXXThisExpr 0x55a7748496c8 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55a774849808 <col:17, col:39> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55a7748497f0 <col:17, col:39> 'const Timestamp' <NoOp>
|           `-CXXTemporaryObjectExpr 0x55a774849788 <col:17, col:39> 'Timestamp' 'void (unsigned int, uint32_t)'
|             |-ImplicitCastExpr 0x55a774849758 <col:27> 'uint32_t':'unsigned int' <LValueToRValue>
|             | `-DeclRefExpr 0x55a774849718 <col:27> 'uint32_t':'unsigned int' lvalue ParmVar 0x55a774846488 'delta_sec' 'uint32_t':'unsigned int'
|             `-ImplicitCastExpr 0x55a774849770 <col:38> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x55a774849738 <col:38> 'int' 0
|-CXXMethodDecl 0x55a774846660 <line:247:5, line:249:5> line:247:17 used schedule_after_msec 'void (uint32_t)' inline
| |-ParmVarDecl 0x55a7748465d0 <col:37, col:46> col:46 used delta_msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55a774849aa8 <col:58, line:249:5>
|   `-ExprWithCleanups 0x55a774849a90 <line:248:2, col:49> 'void'
|     `-CXXMemberCallExpr 0x55a774849a38 <col:2, col:49> 'void'
|       |-MemberExpr 0x55a774849860 <col:2> '<bound member function type>' ->schedule_after 0x55a7748463d0
|       | `-CXXThisExpr 0x55a774849850 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55a774849a78 <col:17, col:48> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55a774849a60 <col:17, col:48> 'const Timestamp' <NoOp>
|           `-CallExpr 0x55a7748499e0 <col:17, col:48> 'Timestamp'
|             |-ImplicitCastExpr 0x55a7748499c8 <col:17, col:28> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x55a774849938 <col:17, col:28> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x55a77476e6c8 'make_msec' 'Timestamp (Timestamp::value_type)'
|             `-ImplicitCastExpr 0x55a774849a20 <col:38> 'Timestamp::value_type':'long' <IntegralCast>
|               `-ImplicitCastExpr 0x55a774849a08 <col:38> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x55a774849918 <col:38> 'uint32_t':'unsigned int' lvalue ParmVar 0x55a7748465d0 'delta_msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55a7748467a8 <line:259:5, line:261:5> line:259:17 reschedule_after 'void (const Timestamp &)' inline
| |-ParmVarDecl 0x55a774846718 <col:34, col:51> col:51 used delta 'const Timestamp &'
| `-CompoundStmt 0x55a774849c88 <col:58, line:261:5>
|   `-ExprWithCleanups 0x55a774849c70 <line:260:2, col:38> 'void'
|     `-CXXMemberCallExpr 0x55a774849c18 <col:2, col:38> 'void'
|       |-MemberExpr 0x55a774849ad0 <col:2> '<bound member function type>' ->schedule_at_steady 0x55a774845df0
|       | `-CXXThisExpr 0x55a774849ac0 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55a774849c58 <col:21, col:33> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55a774849c40 <col:21, col:33> 'const Timestamp' <NoOp>
|           `-CXXOperatorCallExpr 0x55a774849be0 <col:21, col:33> 'Timestamp'
|             |-ImplicitCastExpr 0x55a774849bc8 <col:31> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x55a774849ba8 <col:31> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55a77479ad70 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|             |-CXXConstructExpr 0x55a774849b78 <col:21> 'Timestamp' 'void (const Timestamp &) noexcept'
|             | `-ImplicitCastExpr 0x55a774849b60 <col:21> 'const Timestamp' lvalue <NoOp>
|             |   `-MemberExpr 0x55a774849b10 <col:21> 'Timestamp' lvalue ->_expiry_s 0x55a774847608
|             |     `-CXXThisExpr 0x55a774849b00 <col:21> 'Timer *' implicit this
|             `-DeclRefExpr 0x55a774849b40 <col:33> 'const Timestamp' lvalue ParmVar 0x55a774846718 'delta' 'const Timestamp &'
|-CXXMethodDecl 0x55a7748468f0 <line:268:5, line:270:5> line:268:17 used reschedule_after_sec 'void (uint32_t)' inline
| |-ParmVarDecl 0x55a774846860 <col:38, col:47> col:47 used delta_sec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55a774849f60 <col:58, line:270:5>
|   `-ExprWithCleanups 0x55a774849f48 <line:269:2, col:79> 'void'
|     `-CXXMemberCallExpr 0x55a774849ef0 <col:2, col:79> 'void'
|       |-MemberExpr 0x55a774849cb0 <col:2> '<bound member function type>' ->schedule_at_steady 0x55a774845df0
|       | `-CXXThisExpr 0x55a774849ca0 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55a774849f30 <col:21, col:78> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55a774849f18 <col:21, col:78> 'const Timestamp' <NoOp>
|           `-CXXTemporaryObjectExpr 0x55a774849eb0 <col:21, col:78> 'Timestamp' 'void (unsigned int, uint32_t)'
|             |-BinaryOperator 0x55a774849de8 <col:31, col:49> 'unsigned int' '+'
|             | |-ImplicitCastExpr 0x55a774849dd0 <col:31, col:45> 'unsigned int' <IntegralCast>
|             | | `-CXXMemberCallExpr 0x55a774849d60 <col:31, col:45> 'Timestamp::seconds_type':'int'
|             | |   `-MemberExpr 0x55a774849d30 <col:31, col:41> '<bound member function type>' .sec 0x55a7745eb418
|             | |     `-ImplicitCastExpr 0x55a774849d80 <col:31> 'const Timestamp' lvalue <NoOp>
|             | |       `-MemberExpr 0x55a774849d00 <col:31> 'Timestamp' lvalue ->_expiry_s 0x55a774847608
|             | |         `-CXXThisExpr 0x55a774849cf0 <col:31> 'Timer *' implicit this
|             | `-ImplicitCastExpr 0x55a774849db8 <col:49> 'uint32_t':'unsigned int' <LValueToRValue>
|             |   `-DeclRefExpr 0x55a774849d98 <col:49> 'uint32_t':'unsigned int' lvalue ParmVar 0x55a774846860 'delta_sec' 'uint32_t':'unsigned int'
|             `-CXXMemberCallExpr 0x55a774849e78 <col:60, col:77> 'uint32_t':'unsigned int'
|               `-MemberExpr 0x55a774849e48 <col:60, col:70> '<bound member function type>' .subsec 0x55a7745ebb10
|                 `-ImplicitCastExpr 0x55a774849e98 <col:60> 'const Timestamp' lvalue <NoOp>
|                   `-MemberExpr 0x55a774849e18 <col:60> 'Timestamp' lvalue ->_expiry_s 0x55a774847608
|                     `-CXXThisExpr 0x55a774849e08 <col:60> 'Timer *' implicit this
|-CXXMethodDecl 0x55a774846a38 <line:277:5, line:279:5> line:277:17 used reschedule_after_msec 'void (uint32_t)' inline
| |-ParmVarDecl 0x55a7748469a8 <col:39, col:48> col:48 used delta_msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55a77484a298 <col:60, line:279:5>
|   `-ExprWithCleanups 0x55a77484a280 <line:278:2, col:65> 'void'
|     `-CXXMemberCallExpr 0x55a77484a228 <col:2, col:65> 'void'
|       |-MemberExpr 0x55a774849f88 <col:2> '<bound member function type>' ->schedule_at_steady 0x55a774845df0
|       | `-CXXThisExpr 0x55a774849f78 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55a77484a268 <col:21, col:64> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55a77484a250 <col:21, col:64> 'const Timestamp' <NoOp>
|           `-CXXOperatorCallExpr 0x55a77484a1f0 <col:21, col:64> 'Timestamp'
|             |-ImplicitCastExpr 0x55a77484a1d8 <col:31> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x55a77484a1b8 <col:31> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55a77479ad70 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|             |-CXXConstructExpr 0x55a77484a158 <col:21> 'Timestamp' 'void (const Timestamp &) noexcept'
|             | `-ImplicitCastExpr 0x55a77484a140 <col:21> 'const Timestamp' lvalue <NoOp>
|             |   `-MemberExpr 0x55a774849fc8 <col:21> 'Timestamp' lvalue ->_expiry_s 0x55a774847608
|             |     `-CXXThisExpr 0x55a774849fb8 <col:21> 'Timer *' implicit this
|             `-MaterializeTemporaryExpr 0x55a77484a1a0 <col:33, col:64> 'const Timestamp' lvalue
|               `-ImplicitCastExpr 0x55a77484a188 <col:33, col:64> 'const Timestamp' <NoOp>
|                 `-CallExpr 0x55a77484a0e8 <col:33, col:64> 'Timestamp'
|                   |-ImplicitCastExpr 0x55a77484a0d0 <col:33, col:44> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|                   | `-DeclRefExpr 0x55a77484a0a0 <col:33, col:44> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x55a77476e6c8 'make_msec' 'Timestamp (Timestamp::value_type)'
|                   `-ImplicitCastExpr 0x55a77484a128 <col:54> 'Timestamp::value_type':'long' <IntegralCast>
|                     `-ImplicitCastExpr 0x55a77484a110 <col:54> 'uint32_t':'unsigned int' <LValueToRValue>
|                       `-DeclRefExpr 0x55a77484a080 <col:54> 'uint32_t':'unsigned int' lvalue ParmVar 0x55a7748469a8 'delta_msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55a774846b00 <line:285:5, col:21> col:10 used unschedule 'void ()'
|-CXXMethodDecl 0x55a774846bc0 <line:288:5, line:291:5> line:288:17 clear 'void ()' inline
| `-CompoundStmt 0x55a77484a760 <col:25, line:291:5>
|   |-CXXMemberCallExpr 0x55a77484a2f0 <line:289:2, col:13> 'void'
|   | `-MemberExpr 0x55a77484a2c0 <col:2> '<bound member function type>' ->unschedule 0x55a774846b00
|   |   `-CXXThisExpr 0x55a77484a2b0 <col:2> 'Timer *' implicit this
|   `-ExprWithCleanups 0x55a77484a748 <line:290:2, col:24> 'Timestamp' lvalue
|     `-CXXOperatorCallExpr 0x55a77484a710 <col:2, col:24> 'Timestamp' lvalue
|       |-ImplicitCastExpr 0x55a77484a6f8 <col:12> 'Timestamp &(*)(Timestamp &&) noexcept' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55a77484a3a8 <col:12> 'Timestamp &(Timestamp &&) noexcept' lvalue CXXMethod 0x55a7744829b8 'operator=' 'Timestamp &(Timestamp &&) noexcept'
|       |-MemberExpr 0x55a77484a320 <col:2> 'Timestamp' lvalue ->_expiry_s 0x55a774847608
|       | `-CXXThisExpr 0x55a77484a310 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55a77484a390 <col:14, col:24> 'Timestamp' xvalue
|         `-CXXTemporaryObjectExpr 0x55a77484a360 <col:14, col:24> 'Timestamp' 'void ()'
|-CXXMethodDecl 0x55a774846c80 <line:304:5, line:310:5> line:304:29 used adjustment 'Timestamp ()' static inline
| `-CompoundStmt 0x55a77484aab8 <col:42, line:310:5>
|   |-IfStmt 0x55a77484a900 <line:306:2, line:307:23>
|   | |-CallExpr 0x55a77484a830 <line:306:6, col:30> 'bool'
|   | | `-ImplicitCastExpr 0x55a77484a818 <col:6, col:17> 'bool (*)()' <FunctionToPointerDecay>
|   | |   `-DeclRefExpr 0x55a77484a7b8 <col:6, col:17> 'bool ()' lvalue CXXMethod 0x55a77478c840 'warp_jumping' 'bool ()'
|   | `-ReturnStmt 0x55a77484a8f0 <line:307:6, col:23>
|   |   `-ExprWithCleanups 0x55a77484a8d8 <col:13, col:23> 'Timestamp'
|   |     `-CXXConstructExpr 0x55a77484a8a8 <col:13, col:23> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x55a77484a890 <col:13, col:23> 'Timestamp' xvalue
|   |         `-CXXTemporaryObjectExpr 0x55a77484a860 <col:13, col:23> 'Timestamp' 'void ()'
|   `-ReturnStmt 0x55a77484aaa8 <line:309:2, col:33>
|     `-ExprWithCleanups 0x55a77484aa90 <col:9, col:33> 'Timestamp'
|       `-CXXConstructExpr 0x55a77484aa60 <col:9, col:33> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55a77484aa48 <col:9, col:33> 'Timestamp' xvalue
|           `-CallExpr 0x55a77484aa08 <col:9, col:33> 'Timestamp'
|             |-ImplicitCastExpr 0x55a77484a9f0 <col:9, col:20> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x55a77484a9c0 <col:9, col:20> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x55a77476e9e0 'make_usec' 'Timestamp (Timestamp::value_type)'
|             `-ImplicitCastExpr 0x55a77484aa30 <col:30> 'Timestamp::value_type':'long' <IntegralCast>
|               `-IntegerLiteral 0x55a77484a9a0 <col:30> 'int' 500
|-CXXMethodDecl 0x55a774846dc0 <line:317:5, col:80> col:17 schedule_after_s 'void (uint32_t)' inline
| |-ParmVarDecl 0x55a774846d30 <col:34, col:43> col:43 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55a774846e68 <col:69> "" ""
|-CXXMethodDecl 0x55a774846f78 <line:323:5, col:81> col:17 schedule_after_ms 'void (uint32_t)' inline
| |-ParmVarDecl 0x55a774846ee8 <col:35, col:44> col:44 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55a774847020 <col:70> "" ""
|-CXXMethodDecl 0x55a774847130 <line:329:5, col:82> col:17 reschedule_after_s 'void (uint32_t)' inline
| |-ParmVarDecl 0x55a7748470a0 <col:36, col:45> col:45 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55a7748471d8 <col:71> "" ""
|-CXXMethodDecl 0x55a7748472e8 <line:335:5, col:83> col:17 reschedule_after_ms 'void (uint32_t)' inline
| |-ParmVarDecl 0x55a774847258 <col:37, col:46> col:46 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55a774847390 <col:72> "" ""
|-EnumDecl 0x55a774847400 <line:337:5, col:27> col:5
| `-EnumConstantDecl 0x55a774847500 <col:12, col:25> col:12 behind_sec 'Timer::(anonymous enum at ../dummy_inc/click/timer.hh:337:5)'
|   `-ImplicitCastExpr 0x55a774847550 <col:25> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55a7748474e0 <col:25> 'int' Int: 1
|       `-IntegerLiteral 0x55a7748474c0 <col:25> 'int' 1
|-AccessSpecDecl 0x55a774847568 <line:339:3, col:10> col:3 private
|-FieldDecl 0x55a7748475a8 <line:341:5, col:9> col:9 referenced _schedpos1 'int'
|-FieldDecl 0x55a774847608 <line:342:5, col:15> col:15 referenced _expiry_s 'Timestamp'
|-CXXRecordDecl 0x55a774847658 <line:343:5, line:345:5> line:343:5 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x55a774847788 <line:344:2, col:16> col:16 referenced callback 'TimerCallback':'void (*)(Timer *, void *)'
| `-CXXDestructorDecl 0x55a774848278 <line:343:5> col:5 implicit ~ 'void () noexcept' inline default trivial
|-FieldDecl 0x55a774847848 <col:5, line:345:7> col:7 referenced _hook 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)'
|-FieldDecl 0x55a7748478c8 <line:346:5, col:11> col:11 referenced _thunk 'void *'
|-FieldDecl 0x55a774847928 <line:347:5, col:14> col:14 referenced _owner 'Element *'
|-FieldDecl 0x55a774847988 <line:348:5, col:19> col:19 referenced _thread 'RouterThread *'
|-CXXMethodDecl 0x55a774847ad8 <line:350:5, col:36> col:12 operator= 'Timer &(const Timer &)'
| `-ParmVarDecl 0x55a7748479e8 <col:22, col:35> col:35 x 'const Timer &'
|-CXXMethodDecl 0x55a774847ca8 <line:352:5, col:58> col:17 used do_nothing_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x55a774847b90 <col:33, col:40> col:40 t 'Timer *'
| `-ParmVarDecl 0x55a774847c10 <col:43, col:49> col:49 user_data 'void *'
|-CXXMethodDecl 0x55a774847e80 <line:353:5, col:55> col:17 used element_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x55a774847d68 <col:30, col:37> col:37 t 'Timer *'
| `-ParmVarDecl 0x55a774847de8 <col:40, col:46> col:46 user_data 'void *'
|-CXXMethodDecl 0x55a774848058 <line:354:5, col:52> col:17 used task_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x55a774847f40 <col:27, col:34> col:34 t 'Timer *'
| `-ParmVarDecl 0x55a774847fc0 <col:37, col:43> col:43 user_data 'void *'
`-FriendDecl 0x55a774848228 <line:356:5, col:18> col:12 'class TimerSet':'TimerSet'

Layout: <CGRecordLayout
  LLVMType:%class.Timer = type { i32, %class.Timestamp, %union.anon, i8*, %class.Element*, %class.RouterThread* }
  NonVirtualBaseLLVMType:%class.Timer = type { i32, %class.Timestamp, %union.anon, i8*, %class.Element*, %class.RouterThread* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct NotifierSignal::vmpair
         0 |   class atomic_uint32_t * value
         8 |   uint32_t mask
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55a7748cd1a8 <../dummy_inc/click/notifier.hh:50:5, line:53:5> line:50:12 referenced struct vmpair definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55a7748cd2c8 <col:5, col:12> col:12 implicit struct vmpair
|-FieldDecl 0x55a7748cd368 <line:51:2, col:19> col:19 referenced value 'atomic_uint32_t *'
|-FieldDecl 0x55a7748cd3c8 <line:52:2, col:11> col:11 referenced mask 'uint32_t':'unsigned int'
`-CXXDestructorDecl 0x55a7748d5a38 <line:50:12> col:12 implicit ~vmpair 'void ()' inline default trivial noexcept-unevaluated 0x55a7748d5a38

Layout: <CGRecordLayout
  LLVMType:%"struct.NotifierSignal::vmpair" = type { %class.atomic_uint32_t*, i32 }
  NonVirtualBaseLLVMType:%"struct.NotifierSignal::vmpair" = type { %class.atomic_uint32_t*, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55a7748cd430 <../dummy_inc/click/notifier.hh:54:5, line:57:5> line:54:11 referenced union vmvalue definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55a7748cd548 <col:5, col:11> col:11 implicit union vmvalue
|-FieldDecl 0x55a7748cd5e8 <line:55:2, col:19> col:19 referenced v1 'atomic_uint32_t *'
|-FieldDecl 0x55a7748cd678 <line:56:2, col:10> col:10 referenced vm 'NotifierSignal::vmpair *'
|-CXXConstructorDecl 0x55a7748d45d0 <line:54:11> col:11 implicit used vmvalue 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55a7748d4a08 <col:11>
|-CXXConstructorDecl 0x55a7748d46d8 <col:11> col:11 implicit constexpr vmvalue 'void (const NotifierSignal::vmvalue &)' inline default trivial noexcept-unevaluated 0x55a7748d46d8
| `-ParmVarDecl 0x55a7748d47e8 <col:11> col:11 'const NotifierSignal::vmvalue &'
|-CXXConstructorDecl 0x55a7748d4888 <col:11> col:11 implicit constexpr vmvalue 'void (NotifierSignal::vmvalue &&)' inline default trivial noexcept-unevaluated 0x55a7748d4888
| `-ParmVarDecl 0x55a7748d4998 <col:11> col:11 'NotifierSignal::vmvalue &&'
`-CXXDestructorDecl 0x55a7748d5700 <col:11> col:11 implicit ~vmvalue 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"union.NotifierSignal::vmvalue" = type { %class.atomic_uint32_t* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55a7748cb0d8 prev 0x55a7747da8b0 <../dummy_inc/click/notifier.hh:12:1, line:71:1> line:12:7 referenced class NotifierSignal definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55a7748cb1d0 <col:1, col:7> col:7 implicit referenced class NotifierSignal
|-AccessSpecDecl 0x55a7748cb260 <line:13:3, col:9> col:3 public
|-TypedefDecl 0x55a7748cb398 <line:14:5, col:61> col:36 referenced unspecified_bool_type 'bool (NotifierSignal::*)() const'
| `-MemberPointerType 0x55a7748cb310 'bool (NotifierSignal::*)() const'
|   |-RecordType 0x55a7747da940 'NotifierSignal'
|   | `-CXXRecord 0x55a7748cb0d8 'NotifierSignal'
|   `-ParenType 0x55a7748cb2b0 'bool () const' sugar
|     `-FunctionProtoType 0x55a774321200 'bool () const' const cdecl
|       `-BuiltinType 0x55a7742742f0 'bool'
|-CXXConstructorDecl 0x55a7748cb428 <line:16:5, col:27> col:12 used NotifierSignal 'void ()' inline
|-CXXConstructorDecl 0x55a7748cb668 <line:17:5, col:64> col:12 used NotifierSignal 'void (atomic_uint32_t *, uint32_t)' inline
| |-ParmVarDecl 0x55a7748cb4e0 <col:27, col:44> col:44 value 'atomic_uint32_t *'
| `-ParmVarDecl 0x55a7748cb558 <col:51, col:60> col:60 mask 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55a7748cb818 <line:18:5, col:50> col:12 used NotifierSignal 'void (const NotifierSignal &)' inline
| `-ParmVarDecl 0x55a7748cb758 <col:27, col:49> col:49 x 'const NotifierSignal &'
|-CXXDestructorDecl 0x55a7748cb910 <line:19:5, col:28> col:12 used ~NotifierSignal 'void () noexcept' inline
|-CXXMethodDecl 0x55a7748cba38 <line:21:5, col:46> col:34 idle_signal 'NotifierSignal ()' static inline
|-CXXMethodDecl 0x55a7748cbaf8 <line:22:5, col:46> col:34 busy_signal 'NotifierSignal ()' static inline
|-CXXMethodDecl 0x55a7748cbbb8 <line:23:5, col:53> col:34 overderived_signal 'NotifierSignal ()' static inline
|-CXXMethodDecl 0x55a7748cbc78 <line:24:5, col:55> col:34 used uninitialized_signal 'NotifierSignal ()' static inline
|-CXXMethodDecl 0x55a7748cbd68 <line:26:5, col:26> col:17 used active 'bool () const' inline
|-CXXConversionDecl 0x55a7748cbed8 <line:27:5, col:45> col:12 operator bool (NotifierSignal::*)() const 'NotifierSignal::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x55a7748cc058 <line:29:5, col:39> col:17 used set_active 'bool (bool)' inline
| `-ParmVarDecl 0x55a7748cbf98 <col:28, col:33> col:33 active 'bool'
|-CXXMethodDecl 0x55a7748cc120 <line:31:5, col:24> col:17 idle 'bool () const' inline
|-CXXMethodDecl 0x55a7748cc1e0 <line:32:5, col:24> col:17 busy 'bool () const' inline
|-CXXMethodDecl 0x55a7748cc2a0 <line:33:5, col:31> col:17 overderived 'bool () const' inline
|-CXXMethodDecl 0x55a7748cc360 <line:34:5, col:31> col:17 used initialized 'bool () const' inline
|-FriendDecl 0x55a7748cc618 <line:36:5, col:76> col:17
| `-FunctionDecl 0x55a7748cc558 parent 0x55a774274278 <col:5, col:76> col:17 used operator== 'bool (const NotifierSignal &, const NotifierSignal &)'
|   |-ParmVarDecl 0x55a7748cc410 <col:28, col:50> col:50 a 'const NotifierSignal &'
|   `-ParmVarDecl 0x55a7748cc488 <col:53, col:75> col:75 b 'const NotifierSignal &'
|-FriendDecl 0x55a7748cc838 <line:37:5, col:76> col:17
| `-FunctionDecl 0x55a7748cc778 parent 0x55a774274278 <col:5, col:76> col:17 operator!= 'bool (const NotifierSignal &, const NotifierSignal &)'
|   |-ParmVarDecl 0x55a7748cc668 <col:28, col:50> col:50 a 'const NotifierSignal &'
|   `-ParmVarDecl 0x55a7748cc6e0 <col:53, col:75> col:75 b 'const NotifierSignal &'
|-CXXMethodDecl 0x55a7748cc978 <line:39:5, col:54> col:21 operator= 'NotifierSignal &(const NotifierSignal &)'
| `-ParmVarDecl 0x55a7748cc888 <col:31, col:53> col:53 x 'const NotifierSignal &'
|-CXXMethodDecl 0x55a7748ccac0 <line:40:5, col:55> col:21 used operator+= 'NotifierSignal &(const NotifierSignal &)'
| `-ParmVarDecl 0x55a7748cca30 <col:32, col:54> col:54 x 'const NotifierSignal &'
|-FriendDecl 0x55a7748ccd88 <line:41:5, col:78> col:27
| `-FunctionDecl 0x55a7748cccc8 parent 0x55a774274278 <col:5, col:78> col:27 operator+ 'NotifierSignal (NotifierSignal, const NotifierSignal &)'
|   |-ParmVarDecl 0x55a7748ccb78 <col:37, col:52> col:52 a 'NotifierSignal' destroyed
|   `-ParmVarDecl 0x55a7748ccbf0 <col:55, col:77> col:77 b 'const NotifierSignal &'
|-CXXMethodDecl 0x55a7748cce98 <line:43:5, col:39> col:17 used swap 'void (NotifierSignal &)' inline
| `-ParmVarDecl 0x55a7748ccdd8 <col:22, col:38> col:38 x 'NotifierSignal &'
|-CXXMethodDecl 0x55a7748cd018 <line:45:5, col:36> col:12 unparse 'String (Router *) const'
| `-ParmVarDecl 0x55a7748ccf50 <col:20, col:28> col:28 router 'Router *'
|-CXXMethodDecl 0x55a7748cd0e0 <line:47:5, col:35> col:17 static_initialize 'void ()' static
|-AccessSpecDecl 0x55a7748cd180 <line:49:3, col:10> col:3 private
|-CXXRecordDecl 0x55a7748cd1a8 <line:50:5, line:53:5> line:50:12 referenced struct vmpair definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55a7748cd2c8 <col:5, col:12> col:12 implicit struct vmpair
| |-FieldDecl 0x55a7748cd368 <line:51:2, col:19> col:19 referenced value 'atomic_uint32_t *'
| |-FieldDecl 0x55a7748cd3c8 <line:52:2, col:11> col:11 referenced mask 'uint32_t':'unsigned int'
| `-CXXDestructorDecl 0x55a7748d5a38 <line:50:12> col:12 implicit ~vmpair 'void ()' inline default trivial noexcept-unevaluated 0x55a7748d5a38
|-CXXRecordDecl 0x55a7748cd430 <line:54:5, line:57:5> line:54:11 referenced union vmvalue definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55a7748cd548 <col:5, col:11> col:11 implicit union vmvalue
| |-FieldDecl 0x55a7748cd5e8 <line:55:2, col:19> col:19 referenced v1 'atomic_uint32_t *'
| |-FieldDecl 0x55a7748cd678 <line:56:2, col:10> col:10 referenced vm 'NotifierSignal::vmpair *'
| |-CXXConstructorDecl 0x55a7748d45d0 <line:54:11> col:11 implicit used vmvalue 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55a7748d4a08 <col:11>
| |-CXXConstructorDecl 0x55a7748d46d8 <col:11> col:11 implicit constexpr vmvalue 'void (const NotifierSignal::vmvalue &)' inline default trivial noexcept-unevaluated 0x55a7748d46d8
| | `-ParmVarDecl 0x55a7748d47e8 <col:11> col:11 'const NotifierSignal::vmvalue &'
| |-CXXConstructorDecl 0x55a7748d4888 <col:11> col:11 implicit constexpr vmvalue 'void (NotifierSignal::vmvalue &&)' inline default trivial noexcept-unevaluated 0x55a7748d4888
| | `-ParmVarDecl 0x55a7748d4998 <col:11> col:11 'NotifierSignal::vmvalue &&'
| `-CXXDestructorDecl 0x55a7748d5700 <col:11> col:11 implicit ~vmvalue 'void () noexcept' inline default trivial
|-FieldDecl 0x55a7748cd6f0 <line:59:5, col:13> col:13 referenced _v 'NotifierSignal::vmvalue'
|-FieldDecl 0x55a7748cd750 <line:60:5, col:14> col:14 referenced _mask 'uint32_t':'unsigned int'
|-EnumDecl 0x55a7748cd7a0 <line:62:5, line:65:5> line:62:5
| |-EnumConstantDecl 0x55a7748cd8a0 <line:63:2, col:14> col:2 referenced true_mask 'NotifierSignal::(anonymous enum at ../dummy_inc/click/notifier.hh:62:5)'
| | `-ImplicitCastExpr 0x55a7748cdaa0 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a7748cd880 <col:14> 'int' Int: 1
| |     `-IntegerLiteral 0x55a7748cd860 <col:14> 'int' 1
| |-EnumConstantDecl 0x55a7748cd930 <col:17, col:30> col:17 referenced false_mask 'NotifierSignal::(anonymous enum at ../dummy_inc/click/notifier.hh:62:5)'
| | `-ImplicitCastExpr 0x55a7748cdab8 <col:30> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a7748cd910 <col:30> 'int' Int: 2
| |     `-IntegerLiteral 0x55a7748cd8f0 <col:30> 'int' 2
| |-EnumConstantDecl 0x55a7748cd9c0 <col:33, col:52> col:33 referenced overderived_mask 'NotifierSignal::(anonymous enum at ../dummy_inc/click/notifier.hh:62:5)'
| | `-ImplicitCastExpr 0x55a7748cdad0 <col:52> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a7748cd9a0 <col:52> 'int' Int: 4
| |     `-IntegerLiteral 0x55a7748cd980 <col:52> 'int' 4
| `-EnumConstantDecl 0x55a7748cda50 <line:64:2, col:23> col:2 referenced uninitialized_mask 'NotifierSignal::(anonymous enum at ../dummy_inc/click/notifier.hh:62:5)'
|   `-ImplicitCastExpr 0x55a7748cdae8 <col:23> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55a7748cda30 <col:23> 'int' Int: 8
|       `-IntegerLiteral 0x55a7748cda10 <col:23> 'int' 8
|-VarDecl 0x55a7748cdb10 <line:66:5, col:28> col:28 used static_value 'atomic_uint32_t' static
|-CXXMethodDecl 0x55a7748cdc18 <line:68:5, col:48> col:10 used hard_assign_vm 'void (const NotifierSignal &)'
| `-ParmVarDecl 0x55a7748cdb88 <col:25, col:47> col:47 x 'const NotifierSignal &'
|-CXXMethodDecl 0x55a7748cdde0 <line:69:5, col:63> col:10 hard_derive_one 'void (atomic_uint32_t *, uint32_t)'
| |-ParmVarDecl 0x55a7748cdcd0 <col:26, col:43> col:43 value 'atomic_uint32_t *'
| `-ParmVarDecl 0x55a7748cdd48 <col:50, col:59> col:59 mask 'uint32_t':'unsigned int'
`-CXXMethodDecl 0x55a7748ce018 <line:70:5, col:61> col:17 used hard_equals 'bool (const NotifierSignal::vmpair *, const NotifierSignal::vmpair *)' static
  |-ParmVarDecl 0x55a7748cdec8 <col:29, col:43> col:43 a 'const NotifierSignal::vmpair *'
  `-ParmVarDecl 0x55a7748cdf40 <col:46, col:60> col:60 b 'const NotifierSignal::vmpair *'

Layout: <CGRecordLayout
  LLVMType:%class.NotifierSignal = type <{ %"union.NotifierSignal::vmvalue", i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.NotifierSignal.base = type <{ %"union.NotifierSignal::vmvalue", i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55a7748e8348 <../elements/standard/ratedunqueue.hh:45:1, line:80:1> line:45:7 class RatedUnqueue definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-public 'Element'
|-CXXRecordDecl 0x55a7748e84a8 <col:1, col:7> col:7 implicit referenced class RatedUnqueue
|-AccessSpecDecl 0x55a7748e8538 <col:39, col:45> col:39 public
|-CXXConstructorDecl 0x55a7748e85c0 <line:47:5, col:18> col:5 RatedUnqueue 'void ()'
|-CXXMethodDecl 0x55a7748e86c0 <line:49:5, col:61> col:17 used class_name 'const char *() const'
| |-Overrides: [ 0x55a7747dc318 Element::class_name 'const char *() const' ]
| `-CompoundStmt 0x55a7748f4b70 <col:36, col:61>
|   `-ReturnStmt 0x55a7748f4b60 <col:38, col:45>
|     `-ImplicitCastExpr 0x55a7748f4b48 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x55a7748f4b20 <col:45> 'const char [13]' lvalue "RatedUnqueue"
|-CXXMethodDecl 0x55a7748e8788 <line:50:5, col:56> col:17 port_count 'const char *() const'
| |-Overrides: [ 0x55a7747dc3e0 Element::port_count 'const char *() const' ]
| `-CompoundStmt 0x55a7748f4bd0 <col:36, col:56>
|   `-ReturnStmt 0x55a7748f4bc0 <col:38, col:45>
|     `-ImplicitCastExpr 0x55a7748f4ba8 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-DeclRefExpr 0x55a7748f4b88 <col:45> 'const char []' lvalue Var 0x55a7747dc690 'PORTS_1_1' 'const char []'
|-CXXMethodDecl 0x55a7748e8850 <line:51:5, col:59> col:17 processing 'const char *() const'
| |-Overrides: [ 0x55a7747dc7a8 Element::processing 'const char *() const' ]
| `-CompoundStmt 0x55a7748f4c30 <col:36, col:59>
|   `-ReturnStmt 0x55a7748f4c20 <col:38, col:45>
|     `-ImplicitCastExpr 0x55a7748f4c08 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-DeclRefExpr 0x55a7748f4be8 <col:45> 'const char []' lvalue Var 0x55a7747dca88 'PULL_TO_PUSH' 'const char []'
|-CXXMethodDecl 0x55a7748e8910 <line:52:5, col:64> col:10 is_bandwidth 'bool () const'
| `-CompoundStmt 0x55a7748f4d78 <col:31, col:64>
|   `-ReturnStmt 0x55a7748f4d68 <col:33, col:59>
|     `-BinaryOperator 0x55a7748f4d48 <col:40, col:59> 'bool' '=='
|       |-ImplicitCastExpr 0x55a7748f4d18 <col:40, col:54> 'int' <IntegralCast>
|       | `-ImplicitCastExpr 0x55a7748f4d00 <col:40, col:54> 'char' <LValueToRValue>
|       |   `-ArraySubscriptExpr 0x55a7748f4cc8 <col:40, col:54> 'const char' lvalue
|       |     |-CXXMemberCallExpr 0x55a7748f4c88 <col:40, col:51> 'const char *'
|       |     | `-MemberExpr 0x55a7748f4c58 <col:40> '<bound member function type>' ->class_name 0x55a7748e86c0
|       |     |   `-CXXThisExpr 0x55a7748f4c48 <col:40> 'const RatedUnqueue *' implicit this
|       |     `-IntegerLiteral 0x55a7748f4ca8 <col:53> 'int' 0
|       `-ImplicitCastExpr 0x55a7748f4d30 <col:59> 'int' <IntegralCast>
|         `-CharacterLiteral 0x55a7748f4ce8 <col:59> 'char' 66
|-CXXMethodDecl 0x55a7748e8be0 <line:54:5, col:51> col:9 configure 'int (Vector<String> &, ErrorHandler *)'
| |-Overrides: [ 0x55a7747ddbb0 Element::configure 'int (Vector<String> &, ErrorHandler *)' ]
| |-ParmVarDecl 0x55a7748e8a90 <col:19, col:34> col:35 'Vector<String> &'
| `-ParmVarDecl 0x55a7748e8b08 <col:37, col:50> col:51 'ErrorHandler *'
|-CXXMethodDecl 0x55a7748e9120 <line:55:5, col:123> col:16 configure_helper 'int (TokenBucket *, bool, Element *, Vector<String> &, ErrorHandler *)' static
| |-ParmVarDecl 0x55a7748e8d18 <col:33, col:46> col:46 tb 'TokenBucket *'
| |-ParmVarDecl 0x55a7748e8d90 <col:50, col:55> col:55 is_bandwidth 'bool'
| |-ParmVarDecl 0x55a7748e8e08 <col:69, col:78> col:78 elt 'Element *'
| |-ParmVarDecl 0x55a7748e8f50 <col:83, col:99> col:99 conf 'Vector<String> &'
| `-ParmVarDecl 0x55a7748e8fc8 <col:105, col:119> col:119 errh 'ErrorHandler *'
|-EnumDecl 0x55a7748e91e8 <line:56:5, col:41> col:5
| `-EnumConstantDecl 0x55a7748e92f0 <col:12, col:34> col:12 tb_bandwidth_thresh 'RatedUnqueue::(anonymous enum at ../elements/standard/ratedunqueue.hh:56:5)'
|   `-ImplicitCastExpr 0x55a7748e9340 <col:34> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55a7748e92d0 <col:34> 'int' Int: 131072
|       `-IntegerLiteral 0x55a7748e92b0 <col:34> 'int' 131072
|-CXXMethodDecl 0x55a7748e9378 <line:58:5, col:54> col:10 can_live_reconfigure 'bool () const'
| |-Overrides: [ 0x55a7747e0600 Element::can_live_reconfigure 'bool () const' ]
| `-CompoundStmt 0x55a7748f4db0 <col:39, col:54>
|   `-ReturnStmt 0x55a7748f4da0 <col:41, col:48>
|     `-CXXBoolLiteralExpr 0x55a7748f4d90 <col:48> 'bool' true
|-CXXMethodDecl 0x55a7748e94c0 <line:59:5, col:34> col:9 initialize 'int (ErrorHandler *)'
| |-Overrides: [ 0x55a7747dde00 Element::initialize 'int (ErrorHandler *)' ]
| `-ParmVarDecl 0x55a7748e9428 <col:20, col:33> col:34 'ErrorHandler *'
|-CXXMethodDecl 0x55a7748e9588 <line:60:5, col:23> col:10 add_handlers 'void ()'
| `-Overrides: [ 0x55a7747ddc80 Element::add_handlers 'void ()' ]
|-CXXMethodDecl 0x55a7748e96c8 <line:62:5, col:25> col:10 run_task 'bool (Task *)'
| |-Overrides: [ 0x55a7747db698 Element::run_task 'bool (Task *)' ]
| `-ParmVarDecl 0x55a7748e9638 <col:19, col:24> col:25 'Task *'
|-AccessSpecDecl 0x55a7748e9770 <line:64:3, col:12> col:3 protected
|-FieldDecl 0x55a7748f3988 <line:66:5, col:17> col:17 _tb 'TokenBucket':'TokenBucketX<TokenBucketJiffyParameters<unsigned int> >'
|-FieldDecl 0x55a7748f39e8 <line:67:5, col:10> col:10 referenced _task 'Task'
|-FieldDecl 0x55a7748f3a48 <line:68:5, col:11> col:11 _timer 'Timer'
|-FieldDecl 0x55a7748f3aa8 <line:69:5, col:20> col:20 _signal 'NotifierSignal'
|-FieldDecl 0x55a7748f3b08 <line:70:5, col:14> col:14 _runs 'uint32_t':'unsigned int'
|-FieldDecl 0x55a7748f3b68 <line:71:5, col:14> col:14 _pushes 'uint32_t':'unsigned int'
|-FieldDecl 0x55a7748f3bc8 <line:72:5, col:14> col:14 _failed_pulls 'uint32_t':'unsigned int'
|-FieldDecl 0x55a7748f3c28 <line:73:5, col:14> col:14 _empty_runs 'uint32_t':'unsigned int'
|-EnumDecl 0x55a7748f3c78 <line:75:5, col:28> col:5
| |-EnumConstantDecl 0x55a7748f3d40 <col:12> col:12 h_calls 'RatedUnqueue::(anonymous enum at ../elements/standard/ratedunqueue.hh:75:5)'
| `-EnumConstantDecl 0x55a7748f3d90 <col:21> col:21 h_rate 'RatedUnqueue::(anonymous enum at ../elements/standard/ratedunqueue.hh:75:5)'
|-CXXMethodDecl 0x55a7748f3f08 <line:77:5, col:55> col:19 read_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55a7748f3df0 <col:32, col:41> col:41 e 'Element *'
| `-ParmVarDecl 0x55a7748f3e70 <col:44, col:50> col:50 thunk 'void *'
|-FieldDecl 0x55a7748f3fc8 <line:79:5, col:10> col:10 _active 'bool'
|-CXXConstructorDecl 0x55a7748f4048 <line:45:7> col:7 implicit RatedUnqueue 'void (const RatedUnqueue &)' inline default_delete noexcept-unevaluated 0x55a7748f4048
| `-ParmVarDecl 0x55a7748f4158 <col:7> col:7 'const RatedUnqueue &'
|-CXXConstructorDecl 0x55a7748f41f8 <col:7> col:7 implicit RatedUnqueue 'void (RatedUnqueue &&)' inline default_delete noexcept-unevaluated 0x55a7748f41f8
| `-ParmVarDecl 0x55a7748f4308 <col:7> col:7 'RatedUnqueue &&'
|-CXXMethodDecl 0x55a7748f43a8 <col:7> col:7 implicit operator= 'RatedUnqueue &(const RatedUnqueue &)' inline default_delete noexcept-unevaluated 0x55a7748f43a8
| `-ParmVarDecl 0x55a7748f44b8 <col:7> col:7 'const RatedUnqueue &'
|-CXXMethodDecl 0x55a7748f4528 <col:7> col:7 implicit operator= 'RatedUnqueue &(RatedUnqueue &&)' inline default_delete noexcept-unevaluated 0x55a7748f4528
| `-ParmVarDecl 0x55a7748f4638 <col:7> col:7 'RatedUnqueue &&'
`-CXXDestructorDecl 0x55a7748f46c0 <col:7> col:7 implicit ~RatedUnqueue 'void ()' inline default noexcept-unevaluated 0x55a7748f46c0
  `-Overrides: [ 0x55a7747daeb8 Element::~Element 'void () noexcept' ]

Layout: <CGRecordLayout
  LLVMType:%class.RatedUnqueue = type <{ %class.Element.base, %class.TokenBucketX, %class.Task, %class.Timer, %class.NotifierSignal, i32, i32, i32, i32, i8, [7 x i8] }>
  NonVirtualBaseLLVMType:%class.RatedUnqueue.base = type <{ %class.Element.base, %class.TokenBucketX, %class.Task, %class.Timer, %class.NotifierSignal, i32, i32, i32, i32, i8 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class vector_memory<class typed_array_memory<class String> >
         0 |   vector_memory<class typed_array_memory<class String> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class String>
         0 |   class vector_memory<class typed_array_memory<class String> > vm_
         0 |     vector_memory<class typed_array_memory<class String> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55a7745aea80 <../dummy_inc/click/string.hh:189:5, line:198:5> line:189:12 referenced struct memo_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x55a7745aeb98 <col:5, col:12> col:12 implicit struct memo_t
|-FieldDecl 0x55a7745aec38 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
|-FieldDecl 0x55a7745aec98 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
|-FieldDecl 0x55a7745aecf8 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
`-FieldDecl 0x55a7745aeda8 <line:197:2, col:18> col:7 real_data 'char [8]'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  NonVirtualBaseLLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55a7745af0b0 <../dummy_inc/click/string.hh:204:5, line:208:5> line:204:12 referenced struct rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55a7745af1c8 <col:5, col:12> col:12 implicit struct rep_t
|-FieldDecl 0x55a7745af270 <line:205:2, col:14> col:14 referenced data 'const char *'
|-FieldDecl 0x55a7745af2d8 <line:206:2, col:6> col:6 referenced length 'int'
|-FieldDecl 0x55a7745af368 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
|-CXXConstructorDecl 0x55a7745b5400 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55a7745b5838 <col:12>
|-CXXConstructorDecl 0x55a7745b5508 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55a7745b5618 <col:12> col:12 used 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x55a7745af270 'data' 'const char *'
| | `-ImplicitCastExpr 0x55a7745b7dc0 <col:12> 'const char *' <LValueToRValue>
| |   `-MemberExpr 0x55a7745b7d90 <col:12> 'const char *const' lvalue .data 0x55a7745af270
| |     `-DeclRefExpr 0x55a7745b7d70 <col:12> 'const String::rep_t' lvalue ParmVar 0x55a7745b5618 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x55a7745af2d8 'length' 'int'
| | `-ImplicitCastExpr 0x55a7745b7e50 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x55a7745b7e20 <col:12> 'const int' lvalue .length 0x55a7745af2d8
| |     `-DeclRefExpr 0x55a7745b7e00 <col:12> 'const String::rep_t' lvalue ParmVar 0x55a7745b5618 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x55a7745af368 'memo' 'String::memo_t *'
| | `-ImplicitCastExpr 0x55a7745b7ee0 <col:12> 'String::memo_t *' <LValueToRValue>
| |   `-MemberExpr 0x55a7745b7eb0 <col:12> 'String::memo_t *const' lvalue .memo 0x55a7745af368
| |     `-DeclRefExpr 0x55a7745b7e90 <col:12> 'const String::rep_t' lvalue ParmVar 0x55a7745b5618 '' 'const String::rep_t &'
| `-CompoundStmt 0x55a7745b7f38 <col:12>
|-CXXConstructorDecl 0x55a7745b56b8 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55a7745b56b8
| `-ParmVarDecl 0x55a7745b57c8 <col:12> col:12 'String::rep_t &&'
|-CXXDestructorDecl 0x55a7745bad20 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55a7745c6738 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55a7745c6848 <col:12> col:12 used 'const String::rep_t &'
| `-CompoundStmt 0x55a7745c6d60 <col:12>
|   |-BinaryOperator 0x55a7745c6b78 <col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x55a7745c6b30 <col:12> 'const char *' lvalue ->data 0x55a7745af270
|   | | `-CXXThisExpr 0x55a7745c6b20 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x55a7745c6b60 <col:12> 'const char *' <LValueToRValue>
|   |   `-MemberExpr 0x55a7745c6af0 <col:12> 'const char *const' lvalue .data 0x55a7745af270
|   |     `-DeclRefExpr 0x55a7745c6ad0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55a7745c6848 '' 'const String::rep_t &'
|   |-BinaryOperator 0x55a7745c6c40 <col:12> 'int' lvalue '='
|   | |-MemberExpr 0x55a7745c6bf8 <col:12> 'int' lvalue ->length 0x55a7745af2d8
|   | | `-CXXThisExpr 0x55a7745c6be8 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x55a7745c6c28 <col:12> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x55a7745c6bb8 <col:12> 'const int' lvalue .length 0x55a7745af2d8
|   |     `-DeclRefExpr 0x55a7745c6b98 <col:12> 'const String::rep_t' lvalue ParmVar 0x55a7745c6848 '' 'const String::rep_t &'
|   |-BinaryOperator 0x55a7745c6d08 <col:12> 'String::memo_t *' lvalue '='
|   | |-MemberExpr 0x55a7745c6cc0 <col:12> 'String::memo_t *' lvalue ->memo 0x55a7745af368
|   | | `-CXXThisExpr 0x55a7745c6cb0 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x55a7745c6cf0 <col:12> 'String::memo_t *' <LValueToRValue>
|   |   `-MemberExpr 0x55a7745c6c80 <col:12> 'String::memo_t *const' lvalue .memo 0x55a7745af368
|   |     `-DeclRefExpr 0x55a7745c6c60 <col:12> 'const String::rep_t' lvalue ParmVar 0x55a7745c6848 '' 'const String::rep_t &'
|   `-ReturnStmt 0x55a7745c6d50 <col:12>
|     `-UnaryOperator 0x55a7745c6d38 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55a7745c6d28 <col:12> 'String::rep_t *' this
`-CXXMethodDecl 0x55a7745c68b8 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55a7745c68b8
  `-ParmVarDecl 0x55a7745c69c8 <col:12> col:12 'String::rep_t &&'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  NonVirtualBaseLLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55a7745a5ff0 <../dummy_inc/click/string.hh:19:1, line:304:1> line:19:7 referenced class String definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55a7745a6108 <col:1, col:7> col:7 implicit referenced class String
|-AccessSpecDecl 0x55a7745a6198 <col:16, col:22> col:16 public
|-TypedefDecl 0x55a7745a61d8 <line:21:5, col:25> col:25 referenced const_iterator 'const char *'
| `-PointerType 0x55a774274dc0 'const char *'
|   `-QualType 0x55a774274311 'const char' const
|     `-BuiltinType 0x55a774274310 'char'
|-TypedefDecl 0x55a7745a6260 <line:22:5, col:28> col:28 iterator 'String::const_iterator':'const char *'
| `-TypedefType 0x55a7745a6230 'String::const_iterator' sugar
|   |-Typedef 0x55a7745a61d8 'const_iterator'
|   `-PointerType 0x55a774274dc0 'const char *'
|     `-QualType 0x55a774274311 'const char' const
|       `-BuiltinType 0x55a774274310 'char'
|-TypedefDecl 0x55a7745a63d0 <line:24:5, col:52> col:27 referenced unspecified_bool_type 'int (String::*)() const'
| `-MemberPointerType 0x55a7745a6340 'int (String::*)() const'
|   |-RecordType 0x55a7745a6080 'String'
|   | `-CXXRecord 0x55a7745a5ff0 'String'
|   `-ParenType 0x55a7745a62e0 'int () const' sugar
|     `-FunctionProtoType 0x55a774579e70 'int () const' const cdecl
|       `-BuiltinType 0x55a774274370 'int'
|-TypedefDecl 0x55a7745a6438 <line:27:5, col:21> col:21 referenced intmax_t 'int64_t':'long'
| `-TypedefType 0x55a7743cea70 'int64_t' sugar
|   |-Typedef 0x55a7742dd2d0 'int64_t'
|   `-TypedefType 0x55a7742b64d0 '__int64_t' sugar
|     |-Typedef 0x55a7742b60a8 '__int64_t'
|     `-BuiltinType 0x55a774274390 'long'
|-TypedefDecl 0x55a7745a64a0 <line:28:5, col:22> col:22 referenced uintmax_t 'uint64_t':'unsigned long'
| `-TypedefType 0x55a7743ce990 'uint64_t' sugar
|   |-Typedef 0x55a7742dd470 'uint64_t'
|   `-TypedefType 0x55a7742b6560 '__uint64_t' sugar
|     |-Typedef 0x55a7742b6118 '__uint64_t'
|     `-BuiltinType 0x55a774274430 'unsigned long'
|-TypedefDecl 0x55a7745a6530 <line:36:5, col:22> col:22 int_large_t 'String::intmax_t':'long'
| `-TypedefType 0x55a7745a6500 'String::intmax_t' sugar
|   |-Typedef 0x55a7745a6438 'intmax_t'
|   `-TypedefType 0x55a7743cea70 'int64_t' sugar
|     |-Typedef 0x55a7742dd2d0 'int64_t'
|     `-TypedefType 0x55a7742b64d0 '__int64_t' sugar
|       |-Typedef 0x55a7742b60a8 '__int64_t'
|       `-BuiltinType 0x55a774274390 'long'
|-TypedefDecl 0x55a7745a65c0 <line:37:5, col:23> col:23 uint_large_t 'String::uintmax_t':'unsigned long'
| `-TypedefType 0x55a7745a6590 'String::uintmax_t' sugar
|   |-Typedef 0x55a7745a64a0 'uintmax_t'
|   `-TypedefType 0x55a7743ce990 'uint64_t' sugar
|     |-Typedef 0x55a7742dd470 'uint64_t'
|     `-TypedefType 0x55a7742b6560 '__uint64_t' sugar
|       |-Typedef 0x55a7742b6118 '__uint64_t'
|       `-BuiltinType 0x55a774274430 'unsigned long'
|-CXXConstructorDecl 0x55a7745a6680 <line:39:5, col:19> col:12 used String 'void ()' inline
|-CXXConstructorDecl 0x55a7745a6828 <line:40:5, col:34> col:12 used String 'void (const String &)' inline
| `-ParmVarDecl 0x55a7745a6768 <col:19, col:33> col:33 x 'const String &'
|-CXXConstructorDecl 0x55a7745a69d8 <line:42:5, col:29> col:12 used String 'void (String &&)' inline
| `-ParmVarDecl 0x55a7745a6918 <col:19, col:28> col:28 x 'String &&'
|-CXXConstructorDecl 0x55a7745a6b30 <line:44:5, col:35> col:12 used String 'void (const char *)' inline
| `-ParmVarDecl 0x55a7745a6aa0 <col:19, col:31> col:31 cstr 'const char *'
|-CXXConstructorDecl 0x55a7745a6d48 <line:45:5, col:41> col:12 String 'void (const char *, int)' inline
| |-ParmVarDecl 0x55a7745a6bf8 <col:19, col:31> col:31 s 'const char *'
| `-ParmVarDecl 0x55a7745a6c78 <col:34, col:38> col:38 len 'int'
|-CXXConstructorDecl 0x55a7745a6f68 <line:46:5, col:50> col:12 String 'void (const unsigned char *, int)' inline
| |-ParmVarDecl 0x55a7745a6e18 <col:19, col:40> col:40 s 'const unsigned char *'
| `-ParmVarDecl 0x55a7745a6e98 <col:43, col:47> col:47 len 'int'
|-CXXConstructorDecl 0x55a7745a7188 <line:47:5, col:54> col:12 used String 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x55a7745a7038 <col:19, col:31> col:31 first 'const char *'
| `-ParmVarDecl 0x55a7745a70b8 <col:38, col:50> col:50 last 'const char *'
|-CXXConstructorDecl 0x55a7745a73a8 <line:48:5, col:72> col:12 String 'void (const unsigned char *, const unsigned char *)' inline
| |-ParmVarDecl 0x55a7745a7258 <col:19, col:40> col:40 first 'const unsigned char *'
| `-ParmVarDecl 0x55a7745a72d8 <col:47, col:68> col:68 last 'const unsigned char *'
|-CXXConstructorDecl 0x55a7745a7538 <line:49:5, col:34> col:21 used String 'void (bool)' inline
| `-ParmVarDecl 0x55a7745a7470 <col:28, col:33> col:33 x 'bool'
|-CXXConstructorDecl 0x55a7745a76b8 <line:50:5, col:34> col:21 String 'void (char)' inline
| `-ParmVarDecl 0x55a7745a75f8 <col:28, col:33> col:33 c 'char'
|-CXXConstructorDecl 0x55a7745a7848 <line:51:5, col:43> col:21 String 'void (unsigned char)' inline
| `-ParmVarDecl 0x55a7745a7780 <col:28, col:42> col:42 c 'unsigned char'
|-CXXConstructorDecl 0x55a7745a79a0 <line:52:5, col:26> col:14 String 'void (int)'
| `-ParmVarDecl 0x55a7745a7910 <col:21, col:25> col:25 x 'int'
|-CXXConstructorDecl 0x55a7745a7af8 <line:53:5, col:31> col:14 String 'void (unsigned int)'
| `-ParmVarDecl 0x55a7745a7a68 <col:21, col:30> col:30 x 'unsigned int'
|-CXXConstructorDecl 0x55a7745a7c50 <line:54:5, col:27> col:14 String 'void (long)'
| `-ParmVarDecl 0x55a7745a7bc0 <col:21, col:26> col:26 x 'long'
|-CXXConstructorDecl 0x55a7745a7dd8 <line:55:5, col:36> col:14 String 'void (unsigned long)'
| `-ParmVarDecl 0x55a7745a7d18 <col:21, col:35> col:35 x 'unsigned long'
|-CXXConstructorDecl 0x55a7745a7f68 <line:57:5, col:32> col:14 String 'void (long long)'
| `-ParmVarDecl 0x55a7745a7ea0 <col:21, col:31> col:31 x 'long long'
|-CXXConstructorDecl 0x55a7745a80f8 <line:58:5, col:41> col:14 String 'void (unsigned long long)'
| `-ParmVarDecl 0x55a7745a8030 <col:21, col:40> col:40 x 'unsigned long long'
|-CXXConstructorDecl 0x55a7745a8288 <line:65:5, col:29> col:14 String 'void (double)'
| `-ParmVarDecl 0x55a7745a81c0 <col:21, col:28> col:28 x 'double'
|-CXXDestructorDecl 0x55a7745a8380 <line:67:5, col:20> col:12 used ~String 'void () noexcept' inline
|-CXXMethodDecl 0x55a7745a84a8 <line:69:5, col:44> col:33 make_empty 'const String &()' static inline
|-CXXMethodDecl 0x55a7745a8628 <line:70:5, col:52> col:26 used make_uninitialized 'String (int)' static inline
| `-ParmVarDecl 0x55a7745a8560 <col:45, col:49> col:49 len 'int'
|-CXXMethodDecl 0x55a7745a8778 <line:71:5, col:74> col:26 make_garbage 'String (int)' static inline
| |-ParmVarDecl 0x55a7745a86e8 <col:39, col:43> col:43 len 'int'
| `-DeprecatedAttr 0x55a7745a8830 <col:63> "" ""
|-CXXMethodDecl 0x55a7745a8978 <line:72:5, col:54> col:26 make_stable 'String (const char *)' static inline
| `-ParmVarDecl 0x55a7745a88b8 <col:38, col:50> col:50 cstr 'const char *'
|-CXXMethodDecl 0x55a7745a8b88 <line:73:5, col:60> col:26 make_stable 'String (const char *, int)' static inline
| |-ParmVarDecl 0x55a7745a8a38 <col:38, col:50> col:50 s 'const char *'
| `-ParmVarDecl 0x55a7745a8ab8 <col:53, col:57> col:57 len 'int'
|-CXXMethodDecl 0x55a7745a8da8 <line:74:5, col:73> col:26 make_stable 'String (const char *, const char *)' static inline
| |-ParmVarDecl 0x55a7745a8c50 <col:38, col:50> col:50 first 'const char *'
| `-ParmVarDecl 0x55a7745a8cd0 <col:57, col:69> col:69 last 'const char *'
|-CXXMethodDecl 0x55a7745a9088 <line:75:5, col:80> col:19 make_numeric 'String (String::intmax_t, int, bool)' static
| |-ParmVarDecl 0x55a7745a8e68 <col:32, col:41> col:41 x 'String::intmax_t':'long'
| |-ParmVarDecl 0x55a7745a8ee8 <col:44, col:55> col:48 base 'int' cinit
| | `-IntegerLiteral 0x55a7745b4ed0 <col:55> 'int' 10
| `-ParmVarDecl 0x55a7745a8f60 <col:59, col:76> col:64 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55a7745b4ef0 <col:76> 'bool' true
|-CXXMethodDecl 0x55a7745a9368 <line:76:5, col:81> col:19 make_numeric 'String (String::uintmax_t, int, bool)' static
| |-ParmVarDecl 0x55a7745a9150 <col:32, col:42> col:42 x 'String::uintmax_t':'unsigned long'
| |-ParmVarDecl 0x55a7745a91d0 <col:45, col:56> col:49 base 'int' cinit
| | `-IntegerLiteral 0x55a7745b4f00 <col:56> 'int' 10
| `-ParmVarDecl 0x55a7745a9248 <col:60, col:77> col:65 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55a7745b4f20 <col:77> 'bool' true
|-CXXMethodDecl 0x55a7745a9470 <line:78:5, col:31> col:24 used data 'const char *() const' inline
|-CXXMethodDecl 0x55a7745a9538 <line:79:5, col:25> col:16 used length 'int () const' inline
|-CXXMethodDecl 0x55a7745a9600 <line:81:5, col:60> col:52 c_str 'const char *() const'
| |-NoInlineAttr 0x55a7745a96a0 <col:20>
| `-OptimizeNoneAttr 0x55a7745a96f8 <col:30>
|-CXXConversionDecl 0x55a7745a97e8 <line:83:5, col:45> col:12 used operator int (String::*)() const 'String::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x55a7745a98b8 <line:84:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x55a7745a9978 <line:85:5, col:29> col:17 operator! 'bool () const' inline
|-CXXMethodDecl 0x55a7745a9a68 <line:87:5, col:35> col:27 used begin 'String::const_iterator () const' inline
|-CXXMethodDecl 0x55a7745a9b28 <line:88:5, col:33> col:27 used end 'String::const_iterator () const' inline
|-CXXMethodDecl 0x55a7745a9ca8 <line:90:5, col:35> col:17 used operator[] 'char (int) const' inline
| `-ParmVarDecl 0x55a7745a9be0 <col:28, col:32> col:32 i 'int'
|-CXXMethodDecl 0x55a7745a9df8 <line:91:5, col:27> col:17 at 'char (int) const' inline
| `-ParmVarDecl 0x55a7745a9d68 <col:20, col:24> col:24 i 'int'
|-CXXMethodDecl 0x55a7745a9ee8 <line:92:5, col:25> col:17 front 'char () const' inline
|-CXXMethodDecl 0x55a7745a9fa8 <line:93:5, col:24> col:17 back 'char () const' inline
|-CXXMethodDecl 0x55a7745aa1f8 <line:95:5, col:64> col:21 used hashcode 'uint32_t (const char *, const char *)' static
| |-ParmVarDecl 0x55a7745aa060 <col:30, col:42> col:42 begin 'const char *'
| `-ParmVarDecl 0x55a7745aa0e0 <col:49, col:61> col:61 end 'const char *'
|-CXXMethodDecl 0x55a7745aa458 <line:96:5, line:97:33> line:96:28 hashcode 'uint32_t (const unsigned char *, const unsigned char *)' static inline
| |-ParmVarDecl 0x55a7745aa2c0 <col:37, col:58> col:58 begin 'const unsigned char *'
| `-ParmVarDecl 0x55a7745aa340 <line:97:9, col:30> col:30 end 'const unsigned char *'
|-CXXMethodDecl 0x55a7745aa528 <line:98:5, col:32> col:21 hashcode 'uint32_t () const' inline
|-CXXMethodDecl 0x55a7745aa738 <line:100:5, col:65> col:19 substring 'String (const char *, const char *) const' inline
| |-ParmVarDecl 0x55a7745aa5e0 <col:29, col:41> col:41 begin 'const char *'
| `-ParmVarDecl 0x55a7745aa660 <col:48, col:60> col:60 end 'const char *'
|-CXXMethodDecl 0x55a7745aa958 <line:101:5, col:40> col:12 used substring 'String (int, int) const'
| |-ParmVarDecl 0x55a7745aa800 <col:22, col:26> col:26 pos 'int'
| `-ParmVarDecl 0x55a7745aa880 <col:31, col:35> col:35 len 'int'
|-CXXMethodDecl 0x55a7745aaae8 <line:102:5, col:38> col:19 substring 'String (int) const' inline
| `-ParmVarDecl 0x55a7745aaa20 <col:29, col:33> col:33 pos 'int'
|-CXXMethodDecl 0x55a7745aabd8 <line:103:5, col:25> col:12 trim_space 'String () const'
|-CXXMethodDecl 0x55a7745aad48 <line:105:5, col:41> col:17 equals 'bool (const String &) const' inline
| `-ParmVarDecl 0x55a7745aac88 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x55a7745aaf58 <line:106:5, col:48> col:17 used equals 'bool (const char *, int) const' inline
| |-ParmVarDecl 0x55a7745aae08 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x55a7745aae88 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x55a7745ab170 <line:107:5, col:63> col:23 used compare 'int (const String &, const String &)' static inline
| |-ParmVarDecl 0x55a7745ab018 <col:31, col:45> col:45 a 'const String &'
| `-ParmVarDecl 0x55a7745ab090 <col:48, col:62> col:62 b 'const String &'
|-CXXMethodDecl 0x55a7745ab300 <line:108:5, col:41> col:16 used compare 'int (const String &) const' inline
| `-ParmVarDecl 0x55a7745ab230 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x55a7745ab520 <line:109:5, col:41> col:9 used compare 'int (const char *, int) const'
| |-ParmVarDecl 0x55a7745ab3c0 <col:17, col:29> col:29 s 'const char *'
| `-ParmVarDecl 0x55a7745ab440 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x55a7745ab670 <line:110:5, col:46> col:17 starts_with 'bool (const String &) const' inline
| `-ParmVarDecl 0x55a7745ab5e0 <col:29, col:43> col:43 x 'const String &'
|-CXXMethodDecl 0x55a7745ab848 <line:111:5, col:46> col:10 used starts_with 'bool (const char *, int) const'
| |-ParmVarDecl 0x55a7745ab730 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x55a7745ab7b0 <col:37, col:41> col:41 len 'int'
|-CXXMethodDecl 0x55a7745ab998 <line:112:5, col:44> col:10 glob_match 'bool (const String &) const'
| `-ParmVarDecl 0x55a7745ab908 <col:21, col:35> col:35 pattern 'const String &'
|-CXXMethodDecl 0x55a7745abbb0 <line:125:5, col:42> col:9 find_left 'int (char, int) const'
| |-ParmVarDecl 0x55a7745aba50 <col:19, col:24> col:24 c 'char'
| `-ParmVarDecl 0x55a7745abad0 <col:27, col:39> col:31 start 'int' cinit
|   `-IntegerLiteral 0x55a7745b4f30 <col:39> 'int' 0
|-CXXMethodDecl 0x55a7745abdd0 <line:126:5, col:51> col:9 find_left 'int (const String &, int) const'
| |-ParmVarDecl 0x55a7745abc70 <col:19, col:33> col:33 x 'const String &'
| `-ParmVarDecl 0x55a7745abcf0 <col:36, col:48> col:40 start 'int' cinit
|   `-IntegerLiteral 0x55a7745b4f50 <col:48> 'int' 0
|-CXXMethodDecl 0x55a7745abfb0 <line:127:5, col:52> col:9 find_right 'int (char, int) const'
| |-ParmVarDecl 0x55a7745abe90 <col:20, col:25> col:25 c 'char'
| `-ParmVarDecl 0x55a7745abf10 <col:28, col:40> col:32 start 'int' cinit
|   `-IntegerLiteral 0x55a7745b4f70 <col:40> 'int' 2147483647
|-CXXMethodDecl 0x55a7745ac080 <line:129:5, col:20> col:12 lower 'String () const'
|-CXXMethodDecl 0x55a7745ac140 <line:130:5, col:20> col:12 upper 'String () const'
|-CXXMethodDecl 0x55a7745ac200 <line:131:5, col:24> col:12 printable 'String () const'
|-CXXMethodDecl 0x55a7745ac2c0 <line:132:5, col:25> col:12 quoted_hex 'String () const'
|-CXXMethodDecl 0x55a7745ac380 <line:133:5, col:26> col:12 encode_json 'String () const'
|-CXXMethodDecl 0x55a7745ac528 <line:135:5, col:45> col:20 used operator= 'String &(const String &)' inline
| `-ParmVarDecl 0x55a7745ac430 <col:30, col:44> col:44 x 'const String &'
|-CXXMethodDecl 0x55a7745ac6a8 <line:137:5, col:40> col:20 used operator= 'String &(String &&)' inline
| `-ParmVarDecl 0x55a7745ac5e0 <col:30, col:39> col:39 x 'String &&'
|-CXXMethodDecl 0x55a7745ac880 <line:139:5, col:46> col:20 operator= 'String &(const char *)' inline
| `-ParmVarDecl 0x55a7745ac768 <col:30, col:42> col:42 cstr 'const char *'
|-CXXMethodDecl 0x55a7745ac9f8 <line:141:5, col:31> col:17 swap 'void (String &)' inline
| `-ParmVarDecl 0x55a7745ac938 <col:22, col:30> col:30 x 'String &'
|-CXXMethodDecl 0x55a7745acb40 <line:143:5, col:39> col:17 append 'void (const String &)' inline
| `-ParmVarDecl 0x55a7745acab0 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x55a7745acc90 <line:144:5, col:40> col:17 used append 'void (const char *)' inline
| `-ParmVarDecl 0x55a7745acc00 <col:24, col:36> col:36 cstr 'const char *'
|-CXXMethodDecl 0x55a7745ace68 <line:145:5, col:46> col:17 used append 'void (const char *, int)' inline
| |-ParmVarDecl 0x55a7745acd50 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x55a7745acdd0 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x55a7745ad048 <line:146:5, col:59> col:17 append 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x55a7745acf30 <col:24, col:36> col:36 first 'const char *'
| `-ParmVarDecl 0x55a7745acfb0 <col:43, col:55> col:55 last 'const char *'
|-CXXMethodDecl 0x55a7745ad198 <line:147:5, col:30> col:17 append 'void (char)' inline
| `-ParmVarDecl 0x55a7745ad108 <col:24, col:29> col:29 c 'char'
|-CXXMethodDecl 0x55a7745ad3a8 <line:148:5, col:36> col:10 append_fill 'void (int, int)'
| |-ParmVarDecl 0x55a7745ad258 <col:22, col:26> col:26 c 'int'
| `-ParmVarDecl 0x55a7745ad2d8 <col:29, col:33> col:33 len 'int'
|-CXXMethodDecl 0x55a7745ad508 <line:149:5, col:39> col:11 used append_uninitialized 'char *(int)'
| `-ParmVarDecl 0x55a7745ad470 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x55a7745ad660 <line:150:5, col:68> col:18 append_garbage 'char *(int)' inline
| |-ParmVarDecl 0x55a7745ad5c8 <col:33, col:37> col:37 len 'int'
| `-DeprecatedAttr 0x55a7745ad708 <col:57> "" ""
|-CXXMethodDecl 0x55a7745ad818 <line:152:5, col:46> col:20 used operator+= 'String &(const String &)' inline
| `-ParmVarDecl 0x55a7745ad788 <col:31, col:45> col:45 x 'const String &'
|-CXXMethodDecl 0x55a7745ad968 <line:153:5, col:47> col:20 operator+= 'String &(const char *)' inline
| `-ParmVarDecl 0x55a7745ad8d8 <col:31, col:43> col:43 cstr 'const char *'
|-CXXMethodDecl 0x55a7745adae8 <line:154:5, col:37> col:20 operator+= 'String &(char)' inline
| `-ParmVarDecl 0x55a7745ada20 <col:31, col:36> col:36 c 'char'
|-CXXMethodDecl 0x55a7745adbb0 <line:160:5, col:29> col:17 is_shared 'bool () const' inline
|-CXXMethodDecl 0x55a7745adc70 <line:161:5, col:29> col:17 is_stable 'bool () const' inline
|-CXXMethodDecl 0x55a7745add30 <line:163:5, col:60> col:19 unique 'String () const' inline
| `-DeprecatedAttr 0x55a7745addd0 <col:49> "" ""
|-CXXMethodDecl 0x55a7745ade60 <line:164:5, col:30> col:19 used unshared 'String () const' inline
|-CXXMethodDecl 0x55a7745adf20 <line:165:5, col:29> col:19 compact 'String () const' inline
|-CXXMethodDecl 0x55a7745ae010 <line:167:5, col:24> col:11 mutable_data 'char *()'
|-CXXMethodDecl 0x55a7745ae0d8 <line:168:5, col:25> col:11 mutable_c_str 'char *()'
|-CXXMethodDecl 0x55a7745ae198 <line:170:5, col:52> col:33 make_out_of_memory 'const String &()' static inline
|-CXXMethodDecl 0x55a7745ae258 <line:171:5, col:33> col:17 out_of_memory 'bool () const' inline
|-CXXMethodDecl 0x55a7745ae350 <line:172:5, col:50> col:31 out_of_memory_data 'const char *()' static inline
|-CXXMethodDecl 0x55a7745ae418 <line:173:5, col:44> col:23 out_of_memory_length 'int ()' static inline
|-CXXMethodDecl 0x55a7745ae4e0 <line:174:5, col:42> col:31 used empty_data 'const char *()' static inline
|-CXXMethodDecl 0x55a7745ae6b8 <line:180:5, col:81> col:31 skip_utf8_char 'const char *(const char *, const char *)' static inline
| |-ParmVarDecl 0x55a7745ae598 <col:46, col:58> col:58 first 'const char *'
| `-ParmVarDecl 0x55a7745ae618 <col:65, col:77> col:77 last 'const char *'
|-CXXMethodDecl 0x55a7745ae8e0 <line:181:5, line:182:38> line:181:33 used skip_utf8_char 'const unsigned char *(const unsigned char *, const unsigned char *)' static
| |-ParmVarDecl 0x55a7745ae780 <col:48, col:69> col:69 first 'const unsigned char *'
| `-ParmVarDecl 0x55a7745ae800 <line:182:13, col:34> col:34 last 'const unsigned char *'
|-VarDecl 0x55a7745ae9f0 <line:184:5, col:35> col:23 used bool_data 'const char [11]' static
|-AccessSpecDecl 0x55a7745aea58 <line:186:3, col:10> col:3 private
|-CXXRecordDecl 0x55a7745aea80 <line:189:5, line:198:5> line:189:12 referenced struct memo_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55a7745aeb98 <col:5, col:12> col:12 implicit struct memo_t
| |-FieldDecl 0x55a7745aec38 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
| |-FieldDecl 0x55a7745aec98 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
| |-FieldDecl 0x55a7745aecf8 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
| `-FieldDecl 0x55a7745aeda8 <line:197:2, col:18> col:7 real_data 'char [8]'
|-EnumDecl 0x55a7745aee10 <line:200:5, line:202:5> line:200:5
| `-EnumConstantDecl 0x55a7745af048 <line:201:2, col:32> col:2 referenced MEMO_SPACE 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)'
|   `-ImplicitCastExpr 0x55a7745af098 <col:15, col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55a7745af028 <col:15, col:32> 'unsigned long' Int: 12
|       `-BinaryOperator 0x55a7745aef38 <col:15, col:32> 'unsigned long' '-'
|         |-UnaryExprOrTypeTraitExpr 0x55a7745aeee0 <col:15, col:28> 'unsigned long' sizeof 'String::memo_t'
|         `-ImplicitCastExpr 0x55a7745aef20 <col:32> 'unsigned long' <IntegralCast>
|           `-IntegerLiteral 0x55a7745aef00 <col:32> 'int' 8
|-CXXRecordDecl 0x55a7745af0b0 <line:204:5, line:208:5> line:204:12 referenced struct rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55a7745af1c8 <col:5, col:12> col:12 implicit struct rep_t
| |-FieldDecl 0x55a7745af270 <line:205:2, col:14> col:14 referenced data 'const char *'
| |-FieldDecl 0x55a7745af2d8 <line:206:2, col:6> col:6 referenced length 'int'
| |-FieldDecl 0x55a7745af368 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
| |-CXXConstructorDecl 0x55a7745b5400 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55a7745b5838 <col:12>
| |-CXXConstructorDecl 0x55a7745b5508 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55a7745b5618 <col:12> col:12 used 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x55a7745af270 'data' 'const char *'
| | | `-ImplicitCastExpr 0x55a7745b7dc0 <col:12> 'const char *' <LValueToRValue>
| | |   `-MemberExpr 0x55a7745b7d90 <col:12> 'const char *const' lvalue .data 0x55a7745af270
| | |     `-DeclRefExpr 0x55a7745b7d70 <col:12> 'const String::rep_t' lvalue ParmVar 0x55a7745b5618 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x55a7745af2d8 'length' 'int'
| | | `-ImplicitCastExpr 0x55a7745b7e50 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x55a7745b7e20 <col:12> 'const int' lvalue .length 0x55a7745af2d8
| | |     `-DeclRefExpr 0x55a7745b7e00 <col:12> 'const String::rep_t' lvalue ParmVar 0x55a7745b5618 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x55a7745af368 'memo' 'String::memo_t *'
| | | `-ImplicitCastExpr 0x55a7745b7ee0 <col:12> 'String::memo_t *' <LValueToRValue>
| | |   `-MemberExpr 0x55a7745b7eb0 <col:12> 'String::memo_t *const' lvalue .memo 0x55a7745af368
| | |     `-DeclRefExpr 0x55a7745b7e90 <col:12> 'const String::rep_t' lvalue ParmVar 0x55a7745b5618 '' 'const String::rep_t &'
| | `-CompoundStmt 0x55a7745b7f38 <col:12>
| |-CXXConstructorDecl 0x55a7745b56b8 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55a7745b56b8
| | `-ParmVarDecl 0x55a7745b57c8 <col:12> col:12 'String::rep_t &&'
| |-CXXDestructorDecl 0x55a7745bad20 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x55a7745c6738 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55a7745c6848 <col:12> col:12 used 'const String::rep_t &'
| | `-CompoundStmt 0x55a7745c6d60 <col:12>
| |   |-BinaryOperator 0x55a7745c6b78 <col:12> 'const char *' lvalue '='
| |   | |-MemberExpr 0x55a7745c6b30 <col:12> 'const char *' lvalue ->data 0x55a7745af270
| |   | | `-CXXThisExpr 0x55a7745c6b20 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x55a7745c6b60 <col:12> 'const char *' <LValueToRValue>
| |   |   `-MemberExpr 0x55a7745c6af0 <col:12> 'const char *const' lvalue .data 0x55a7745af270
| |   |     `-DeclRefExpr 0x55a7745c6ad0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55a7745c6848 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x55a7745c6c40 <col:12> 'int' lvalue '='
| |   | |-MemberExpr 0x55a7745c6bf8 <col:12> 'int' lvalue ->length 0x55a7745af2d8
| |   | | `-CXXThisExpr 0x55a7745c6be8 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x55a7745c6c28 <col:12> 'int' <LValueToRValue>
| |   |   `-MemberExpr 0x55a7745c6bb8 <col:12> 'const int' lvalue .length 0x55a7745af2d8
| |   |     `-DeclRefExpr 0x55a7745c6b98 <col:12> 'const String::rep_t' lvalue ParmVar 0x55a7745c6848 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x55a7745c6d08 <col:12> 'String::memo_t *' lvalue '='
| |   | |-MemberExpr 0x55a7745c6cc0 <col:12> 'String::memo_t *' lvalue ->memo 0x55a7745af368
| |   | | `-CXXThisExpr 0x55a7745c6cb0 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x55a7745c6cf0 <col:12> 'String::memo_t *' <LValueToRValue>
| |   |   `-MemberExpr 0x55a7745c6c80 <col:12> 'String::memo_t *const' lvalue .memo 0x55a7745af368
| |   |     `-DeclRefExpr 0x55a7745c6c60 <col:12> 'const String::rep_t' lvalue ParmVar 0x55a7745c6848 '' 'const String::rep_t &'
| |   `-ReturnStmt 0x55a7745c6d50 <col:12>
| |     `-UnaryOperator 0x55a7745c6d38 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x55a7745c6d28 <col:12> 'String::rep_t *' this
| `-CXXMethodDecl 0x55a7745c68b8 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55a7745c68b8
|   `-ParmVarDecl 0x55a7745c69c8 <col:12> col:12 'String::rep_t &&'
|-FieldDecl 0x55a7745af3e0 <line:211:5, col:19> col:19 referenced _r 'String::rep_t' mutable
|-CXXMethodDecl 0x55a7745af628 <line:256:5, line:261:5> line:256:17 used assign_memo 'void (const char *, int, String::memo_t *) const' inline
| |-ParmVarDecl 0x55a7745af448 <col:29, col:41> col:41 used data 'const char *'
| |-ParmVarDecl 0x55a7745af4c8 <col:47, col:51> col:51 used length 'int'
| |-ParmVarDecl 0x55a7745af540 <col:59, col:67> col:67 used memo 'String::memo_t *'
| `-CompoundStmt 0x55a7745b53c0 <col:79, line:261:5>
|   |-BinaryOperator 0x55a7745b5038 <line:257:2, col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x55a7745b4fd0 <col:2, col:5> 'const char *' lvalue .data 0x55a7745af270
|   | | `-MemberExpr 0x55a7745b4fa0 <col:2> 'String::rep_t' lvalue ->_r 0x55a7745af3e0
|   | |   `-CXXThisExpr 0x55a7745b4f90 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x55a7745b5020 <col:12> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x55a7745b5000 <col:12> 'const char *' lvalue ParmVar 0x55a7745af448 'data' 'const char *'
|   |-BinaryOperator 0x55a7745b5100 <line:258:2, col:14> 'int' lvalue '='
|   | |-MemberExpr 0x55a7745b5098 <col:2, col:5> 'int' lvalue .length 0x55a7745af2d8
|   | | `-MemberExpr 0x55a7745b5068 <col:2> 'String::rep_t' lvalue ->_r 0x55a7745af3e0
|   | |   `-CXXThisExpr 0x55a7745b5058 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x55a7745b50e8 <col:14> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55a7745b50c8 <col:14> 'int' lvalue ParmVar 0x55a7745af4c8 'length' 'int'
|   `-IfStmt 0x55a7745b53a8 <line:259:2, line:260:41>
|     |-ImplicitCastExpr 0x55a7745b5220 <line:259:6, col:21> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x55a7745b5208 <col:6, col:21> 'String::memo_t *' <LValueToRValue>
|     |   `-ParenExpr 0x55a7745b51e8 <col:6, col:21> 'String::memo_t *' lvalue
|     |     `-BinaryOperator 0x55a7745b51c8 <col:7, col:17> 'String::memo_t *' lvalue '='
|     |       |-MemberExpr 0x55a7745b5160 <col:7, col:10> 'String::memo_t *' lvalue .memo 0x55a7745af368
|     |       | `-MemberExpr 0x55a7745b5130 <col:7> 'String::rep_t' lvalue ->_r 0x55a7745af3e0
|     |       |   `-CXXThisExpr 0x55a7745b5120 <col:7> 'const String *' implicit this
|     |       `-ImplicitCastExpr 0x55a7745b51b0 <col:17> 'String::memo_t *' <LValueToRValue>
|     |         `-DeclRefExpr 0x55a7745b5190 <col:17> 'String::memo_t *' lvalue ParmVar 0x55a7745af540 'memo' 'String::memo_t *'
|     `-CallExpr 0x55a7745b5380 <line:260:6, col:41> 'void'
|       |-ImplicitCastExpr 0x55a7745b5368 <col:6, col:23> 'void (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55a7745b5270 <col:6, col:23> 'void (volatile uint32_t &)' lvalue CXXMethod 0x55a77459e058 'inc' 'void (volatile uint32_t &)'
|       `-MemberExpr 0x55a7745b52d8 <col:27, col:33> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x55a7745aec38
|         `-ImplicitCastExpr 0x55a7745b52c0 <col:27> 'String::memo_t *' <LValueToRValue>
|           `-DeclRefExpr 0x55a7745b52a0 <col:27> 'String::memo_t *' lvalue ParmVar 0x55a7745af540 'memo' 'String::memo_t *'
|-CXXConstructorDecl 0x55a7745af8d8 <line:263:5, line:265:5> line:263:12 used String 'void (const char *, int, String::memo_t *)' inline
| |-ParmVarDecl 0x55a7745af6f8 <col:19, col:31> col:31 used data 'const char *'
| |-ParmVarDecl 0x55a7745af778 <col:37, col:41> col:41 used length 'int'
| |-ParmVarDecl 0x55a7745af7f0 <col:49, col:57> col:57 used memo 'String::memo_t *'
| |-CXXCtorInitializer Field 0x55a7745af3e0 '_r' 'String::rep_t'
| | `-CXXConstructExpr 0x55a7745b5848 <col:12> 'String::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55a7745b59d8 <col:63, line:265:5>
|   `-CXXMemberCallExpr 0x55a7745b5940 <line:264:2, col:32> 'void'
|     |-MemberExpr 0x55a7745b58b0 <col:2> '<bound member function type>' ->assign_memo 0x55a7745af628
|     | `-ImplicitCastExpr 0x55a7745b5978 <col:2> 'const String *' <NoOp>
|     |   `-CXXThisExpr 0x55a7745b58a0 <col:2> 'String *' implicit this
|     |-ImplicitCastExpr 0x55a7745b5990 <col:14> 'const char *' <LValueToRValue>
|     | `-DeclRefExpr 0x55a7745b58e0 <col:14> 'const char *' lvalue ParmVar 0x55a7745af6f8 'data' 'const char *'
|     |-ImplicitCastExpr 0x55a7745b59a8 <col:20> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x55a7745b5900 <col:20> 'int' lvalue ParmVar 0x55a7745af778 'length' 'int'
|     `-ImplicitCastExpr 0x55a7745b59c0 <col:28> 'String::memo_t *' <LValueToRValue>
|       `-DeclRefExpr 0x55a7745b5920 <col:28> 'String::memo_t *' lvalue ParmVar 0x55a7745af7f0 'memo' 'String::memo_t *'
|-CXXMethodDecl 0x55a7745afa68 <line:267:5, line:269:5> line:267:17 used assign 'void (const String &) const' inline
| |-ParmVarDecl 0x55a7745af9a8 <col:24, col:38> col:38 used x 'const String &'
| `-CompoundStmt 0x55a7745b5c30 <col:47, line:269:5>
|   `-CXXMemberCallExpr 0x55a7745b5bb0 <line:268:2, col:47> 'void'
|     |-MemberExpr 0x55a7745b5a00 <col:2> '<bound member function type>' ->assign_memo 0x55a7745af628
|     | `-CXXThisExpr 0x55a7745b59f0 <col:2> 'const String *' implicit this
|     |-ImplicitCastExpr 0x55a7745b5be8 <col:14, col:19> 'const char *' <LValueToRValue>
|     | `-MemberExpr 0x55a7745b5a80 <col:14, col:19> 'const char *' lvalue .data 0x55a7745af270
|     |   `-MemberExpr 0x55a7745b5a50 <col:14, col:16> 'String::rep_t' lvalue ._r 0x55a7745af3e0
|     |     `-DeclRefExpr 0x55a7745b5a30 <col:14> 'const String' lvalue ParmVar 0x55a7745af9a8 'x' 'const String &'
|     |-ImplicitCastExpr 0x55a7745b5c00 <col:25, col:30> 'int' <LValueToRValue>
|     | `-MemberExpr 0x55a7745b5b00 <col:25, col:30> 'int' lvalue .length 0x55a7745af2d8
|     |   `-MemberExpr 0x55a7745b5ad0 <col:25, col:27> 'String::rep_t' lvalue ._r 0x55a7745af3e0
|     |     `-DeclRefExpr 0x55a7745b5ab0 <col:25> 'const String' lvalue ParmVar 0x55a7745af9a8 'x' 'const String &'
|     `-ImplicitCastExpr 0x55a7745b5c18 <col:38, col:43> 'String::memo_t *' <LValueToRValue>
|       `-MemberExpr 0x55a7745b5b80 <col:38, col:43> 'String::memo_t *' lvalue .memo 0x55a7745af368
|         `-MemberExpr 0x55a7745b5b50 <col:38, col:40> 'String::rep_t' lvalue ._r 0x55a7745af3e0
|           `-DeclRefExpr 0x55a7745b5b30 <col:38> 'const String' lvalue ParmVar 0x55a7745af9a8 'x' 'const String &'
|-CXXMethodDecl 0x55a7745afb30 <line:271:5, line:278:5> line:271:17 used deref 'void () const' inline
| `-CompoundStmt 0x55a7745b65f0 <col:31, line:278:5>
|   `-IfStmt 0x55a7745b65d8 <line:272:2, line:277:2>
|     |-ImplicitCastExpr 0x55a7745b5cd0 <line:272:6, col:9> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x55a7745b5cb8 <col:6, col:9> 'String::memo_t *' <LValueToRValue>
|     |   `-MemberExpr 0x55a7745b5c88 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x55a7745af368
|     |     `-MemberExpr 0x55a7745b5c58 <col:6> 'String::rep_t' lvalue ->_r 0x55a7745af3e0
|     |       `-CXXThisExpr 0x55a7745b5c48 <col:6> 'const String *' implicit this
|     `-CompoundStmt 0x55a7745b65b0 <col:15, line:277:2>
|       |-ParenExpr 0x55a7745b6180 <line:273:6, col:166> 'void'
|       | `-ConditionalOperator 0x55a7745b6150 <col:7, col:165> 'void'
|       |   |-CXXStaticCastExpr 0x55a7745b5de0 <col:7, col:44> 'bool' static_cast<_Bool> <NoOp>
|       |   | `-ImplicitCastExpr 0x55a7745b5dc8 <col:27, col:36> 'bool' <IntegralToBoolean> part_of_explicit_cast
|       |   |   `-ImplicitCastExpr 0x55a7745b5db0 <col:27, col:36> 'uint32_t':'unsigned int' <LValueToRValue> part_of_explicit_cast
|       |   |     `-MemberExpr 0x55a7745b5d70 <col:27, col:36> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x55a7745aec38
|       |   |       `-ImplicitCastExpr 0x55a7745b5d58 <col:27, col:30> 'String::memo_t *' <LValueToRValue>
|       |   |         `-MemberExpr 0x55a7745b5d28 <col:27, col:30> 'String::memo_t *' lvalue .memo 0x55a7745af368
|       |   |           `-MemberExpr 0x55a7745b5cf8 <col:27> 'String::rep_t' lvalue ->_r 0x55a7745af3e0
|       |   |             `-CXXThisExpr 0x55a7745b5ce8 <col:27> 'const String *' implicit this
|       |   |-CXXFunctionalCastExpr 0x55a7745b5e40 <col:48, col:55> 'void' functional cast to void <ToVoid>
|       |   | `-IntegerLiteral 0x55a7745b5e20 <col:54> 'int' 0
|       |   `-CallExpr 0x55a7745b60b0 <col:59, col:165> 'void'
|       |     |-ImplicitCastExpr 0x55a7745b6098 <col:59> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x55a7745b6018 <col:59> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55a7743152d0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|       |     |-ImplicitCastExpr 0x55a7745b60f0 <col:74> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x55a7745b5f28 <col:74> 'const char [18]' lvalue "_r.memo->refcount"
|       |     |-ImplicitCastExpr 0x55a7745b6108 <col:95> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x55a7745b5f58 <col:95> 'const char [29]' lvalue "../dummy_inc/click/string.hh"
|       |     |-ImplicitCastExpr 0x55a7745b6120 <col:127> 'unsigned int' <IntegralCast>
|       |     | `-IntegerLiteral 0x55a7745b5f90 <col:127> 'int' 273
|       |     `-ImplicitCastExpr 0x55a7745b6138 <col:132, col:146> 'const char *' <ArrayToPointerDecay>
|       |       `-UnaryOperator 0x55a7745b6000 <col:132, col:146> 'const char [27]' lvalue prefix '__extension__' cannot overflow
|       |         `-PredefinedExpr 0x55a7745b5fe8 <col:146> 'const char [27]' lvalue __PRETTY_FUNCTION__
|       |           `-StringLiteral 0x55a7745b5fb0 <col:146> 'const char [27]' lvalue "void String::deref() const"
|       |-IfStmt 0x55a7745b64d0 <line:274:6, line:275:22>
|       | |-CallExpr 0x55a7745b6390 <line:274:10, col:57> 'bool'
|       | | |-ImplicitCastExpr 0x55a7745b6378 <col:10, col:27> 'bool (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | | | `-DeclRefExpr 0x55a7745b62f0 <col:10, col:27> 'bool (volatile uint32_t &)' lvalue CXXMethod 0x55a77459f4a0 'dec_and_test' 'bool (volatile uint32_t &)'
|       | | `-MemberExpr 0x55a7745b62c0 <col:40, col:49> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x55a7745aec38
|       | |   `-ImplicitCastExpr 0x55a7745b62a8 <col:40, col:43> 'String::memo_t *' <LValueToRValue>
|       | |     `-MemberExpr 0x55a7745b6278 <col:40, col:43> 'String::memo_t *' lvalue .memo 0x55a7745af368
|       | |       `-MemberExpr 0x55a7745b6248 <col:40> 'String::rep_t' lvalue ->_r 0x55a7745af3e0
|       | |         `-CXXThisExpr 0x55a7745b6238 <col:40> 'const String *' implicit this
|       | `-CallExpr 0x55a7745b6490 <line:275:3, col:22> 'void'
|       |   |-ImplicitCastExpr 0x55a7745b6478 <col:3> 'void (*)(String::memo_t *)' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x55a7745b63b8 <col:3> 'void (String::memo_t *)' lvalue CXXMethod 0x55a7745b4310 'delete_memo' 'void (String::memo_t *)'
|       |   `-ImplicitCastExpr 0x55a7745b64b8 <col:15, col:18> 'String::memo_t *' <LValueToRValue>
|       |     `-MemberExpr 0x55a7745b6418 <col:15, col:18> 'String::memo_t *' lvalue .memo 0x55a7745af368
|       |       `-MemberExpr 0x55a7745b63e8 <col:15> 'String::rep_t' lvalue ->_r 0x55a7745af3e0
|       |         `-CXXThisExpr 0x55a7745b63d8 <col:15> 'const String *' implicit this
|       `-BinaryOperator 0x55a7745b6590 <line:276:6, col:16> 'String::memo_t *' lvalue '='
|         |-MemberExpr 0x55a7745b6528 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x55a7745af368
|         | `-MemberExpr 0x55a7745b64f8 <col:6> 'String::rep_t' lvalue ->_r 0x55a7745af3e0
|         |   `-CXXThisExpr 0x55a7745b64e8 <col:6> 'const String *' implicit this
|         `-ImplicitCastExpr 0x55a7745b6578 <col:16> 'String::memo_t *' <NullToPointer>
|           `-IntegerLiteral 0x55a7745b6558 <col:16> 'int' 0
|-CXXMethodDecl 0x55a7745afdc8 <line:280:5, col:56> col:10 used assign 'void (const char *, int, bool)'
| |-ParmVarDecl 0x55a7745afbe8 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x55a7745afc68 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x55a7745afce0 <col:41, col:46> col:46 need_deref 'bool'
|-CXXMethodDecl 0x55a7745afea0 <line:281:5, col:31> col:10 assign_out_of_memory 'void ()'
|-CXXMethodDecl 0x55a7745b00f0 <line:282:5, col:53> col:10 used append 'void (const char *, int, String::memo_t *)'
| |-ParmVarDecl 0x55a7745aff58 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x55a7745affd8 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x55a7745b0050 <col:41, col:49> col:49 memo 'String::memo_t *'
|-CXXMethodDecl 0x55a7745b02d8 <line:283:5, col:58> col:19 used hard_make_stable 'String (const char *, int)' static
| |-ParmVarDecl 0x55a7745b01c0 <col:36, col:48> col:48 s 'const char *'
| `-ParmVarDecl 0x55a7745b0240 <col:51, col:55> col:55 len 'int'
|-CXXMethodDecl 0x55a7745b03d8 <line:284:5, line:286:5> line:284:27 used absent_memo 'String::memo_t *()' static inline
| `-CompoundStmt 0x55a7745b66c8 <col:41, line:286:5>
|   `-ReturnStmt 0x55a7745b66b8 <line:285:2, col:48>
|     `-CXXReinterpretCastExpr 0x55a7745b6688 <col:9, col:48> 'String::memo_t *' reinterpret_cast<struct String::memo_t *> <IntegralToPointer>
|       `-CXXFunctionalCastExpr 0x55a7745b6650 <col:36, col:47> 'uintptr_t':'unsigned long' functional cast to uintptr_t <NoOp>
|         `-ImplicitCastExpr 0x55a7745b6638 <col:46> 'uintptr_t':'unsigned long' <IntegralCast> part_of_explicit_cast
|           `-IntegerLiteral 0x55a7745b6618 <col:46> 'int' 1
|-CXXMethodDecl 0x55a7745b0678 <line:287:5, col:68> col:20 create_memo 'String::memo_t *(char *, int, int)' static
| |-ParmVarDecl 0x55a7745b0490 <col:32, col:38> col:38 space 'char *'
| |-ParmVarDecl 0x55a7745b0510 <col:45, col:49> col:49 dirty 'int'
| `-ParmVarDecl 0x55a7745b0590 <col:56, col:60> col:60 capacity 'int'
|-CXXMethodDecl 0x55a7745b4310 <line:288:5, col:41> col:17 used delete_memo 'void (String::memo_t *)' static
| `-ParmVarDecl 0x55a7745b0740 <col:29, col:37> col:37 memo 'String::memo_t *'
|-CXXMethodDecl 0x55a7745b43e0 <line:289:5, col:30> col:17 hard_c_str 'const char *() const'
|-CXXMethodDecl 0x55a7745b45b0 <line:290:5, col:46> col:10 used hard_equals 'bool (const char *, int) const'
| |-ParmVarDecl 0x55a7745b4498 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x55a7745b4518 <col:37, col:41> col:41 len 'int'
|-VarDecl 0x55a7745b4670 <line:292:5, col:23> col:23 used null_data 'const char' static
|-VarDecl 0x55a7745b4738 <line:293:5, col:34> col:23 used oom_data 'const char [15]' static
|-VarDecl 0x55a7745b4838 <line:294:5, col:34> col:23 int_data 'const char [20]' static
|-VarDecl 0x55a7745b48b0 <line:295:5, col:24> col:24 used null_string_rep 'const String::rep_t' static
|-VarDecl 0x55a7745b4928 <line:296:5, col:24> col:24 used oom_string_rep 'const String::rep_t' static
|-EnumDecl 0x55a7745b4990 <line:297:5, col:25> col:5
| `-EnumConstantDecl 0x55a7745b4a90 <col:12, col:22> col:12 referenced oom_len 'String::(anonymous enum at ../dummy_inc/click/string.hh:297:5)'
|   `-ImplicitCastExpr 0x55a7745b4ae0 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55a7745b4a70 <col:22> 'int' Int: 14
|       `-IntegerLiteral 0x55a7745b4a50 <col:22> 'int' 14
|-CXXMethodDecl 0x55a7745b4cf8 <line:299:5, col:46> col:19 make_claim 'String (char *, int, int)' static
| |-ParmVarDecl 0x55a7745b4b10 <col:30, col:35> col:36 'char *'
| |-ParmVarDecl 0x55a7745b4b90 <col:38> col:41 'int'
| `-ParmVarDecl 0x55a7745b4c10 <col:43> col:46 'int'
|-FriendDecl 0x55a7745b4e00 <line:301:5, col:19> col:12 'struct rep_t':'String::rep_t'
`-FriendDecl 0x55a7745b4e90 <line:302:5, col:18> col:12 'class StringAccum':'StringAccum'

Layout: <CGRecordLayout
  LLVMType:%class.String = type { %"struct.String::rep_t" }
  NonVirtualBaseLLVMType:%class.String = type { %"struct.String::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55a7749170e0 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'typed_array_memory<String>'
|-CXXRecordDecl 0x55a774918320 prev 0x55a7749170e0 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55a7749183b0 <col:46, col:52> col:46 public
|-TypedefDecl 0x55a7749183d8 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55a774274370 'int'
|-TypedefDecl 0x55a774919d30 <line:13:5, col:31> col:31 type 'typename typed_array_memory<String>::type':'String'
| `-ElaboratedType 0x55a774919ce0 'typename typed_array_memory<String>::type' sugar
|   `-TypedefType 0x55a774919cc0 'typed_array_memory<String>::type' sugar
|     |-Typedef 0x55a7749185e8 'type'
|     `-SubstTemplateTypeParmType 0x55a7749185b0 'String' sugar
|       |-TemplateTypeParmType 0x55a774569890 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55a774569840 'T'
|       `-RecordType 0x55a7745a6080 'String'
|         `-CXXRecord 0x55a7745a5ff0 'String'
|-TypedefDecl 0x55a774919de8 <line:14:5, col:19> col:19 iterator 'vector_memory<typed_array_memory<String> >::type *'
| `-PointerType 0x55a774919db0 'vector_memory<typed_array_memory<String> >::type *'
|   `-TypedefType 0x55a774919d90 'vector_memory<typed_array_memory<String> >::type' sugar
|     |-Typedef 0x55a774919d30 'type'
|     `-ElaboratedType 0x55a774919ce0 'typename typed_array_memory<String>::type' sugar
|       `-TypedefType 0x55a774919cc0 'typed_array_memory<String>::type' sugar
|         |-Typedef 0x55a7749185e8 'type'
|         `-SubstTemplateTypeParmType 0x55a7749185b0 'String' sugar
|           |-TemplateTypeParmType 0x55a774569890 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55a774569840 'T'
|           `-RecordType 0x55a7745a6080 'String'
|             `-CXXRecord 0x55a7745a5ff0 'String'
|-CXXMethodDecl 0x55a774919f68 <line:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<typed_array_memory<String> >::type *) const' inline
| `-ParmVarDecl 0x55a774919e78 <col:36, col:48> col:48 argp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXConstructorDecl 0x55a77491a058 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55a77491a138 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x55a77491a138
|-CXXMethodDecl 0x55a77491a408 <line:25:5, col:43> col:10 assign 'void (const vector_memory<typed_array_memory<String> > &)'
| `-ParmVarDecl 0x55a77491a310 <col:17, col:42> col:42 x 'const vector_memory<typed_array_memory<String> > &'
|-CXXMethodDecl 0x55a77491a648 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x55a77491a4c0 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55a77491a538 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55a77491a818 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x55a77491a708 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55a77491a780 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55a77491a978 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<typed_array_memory<String> >::iterator ()'
|-CXXMethodDecl 0x55a77491aa48 <line:31:5, line:33:5> line:31:14 end 'vector_memory<typed_array_memory<String> >::iterator ()'
|-CXXMethodDecl 0x55a77491ac98 <line:34:5, col:48> col:14 insert 'vector_memory<typed_array_memory<String> >::iterator (vector_memory<typed_array_memory<String> >::iterator, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x55a77491ab08 <col:21, col:30> col:30 it 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
| `-ParmVarDecl 0x55a77491ab80 <col:34, col:46> col:46 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55a77491aef8 <line:35:5, col:42> col:14 erase 'vector_memory<typed_array_memory<String> >::iterator (vector_memory<typed_array_memory<String> >::iterator, vector_memory<typed_array_memory<String> >::iterator)'
| |-ParmVarDecl 0x55a77491ad68 <col:20, col:29> col:29 a 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
| `-ParmVarDecl 0x55a77491ade0 <col:32, col:41> col:41 b 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55a77491b0b8 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<typed_array_memory<String> >::type *)' inline
| `-ParmVarDecl 0x55a77491afc8 <col:27, col:39> col:39 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55a77491b278 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<typed_array_memory<String> >::type *)' inline
| `-ParmVarDecl 0x55a77491b180 <col:37, col:43> col:43 vp 'vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55a77491b330 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55a77491b3e0 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55a77491b618 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x55a77491b490 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55a77491b508 <col:45, col:57> col:57 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55a77491b8b8 <line:66:5, col:35> col:10 swap 'void (vector_memory<typed_array_memory<String> > &)'
| `-ParmVarDecl 0x55a77491b7c0 <col:15, col:34> col:34 x 'vector_memory<typed_array_memory<String> > &'
|-FieldDecl 0x55a77491b980 <line:68:5, col:11> col:11 l_ 'vector_memory<typed_array_memory<String> >::type *'
|-FieldDecl 0x55a77491b9d0 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55a77491ba20 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.8 = type { %class.String*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.8 = type { %class.String*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55a7747dd820 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'String'
|-CXXRecordDecl 0x55a774915e88 prev 0x55a7747dd820 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55a774917050 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<String>::type':'typed_array_memory<String>'
| `-ElaboratedType 0x55a774917000 'typename array_memory<String>::type' sugar
|   `-TypedefType 0x55a774916fe0 'conditional<false, sized_array_memory<24>, typed_array_memory<String> >::type' sugar
|     |-Typedef 0x55a774916e90 'type'
|     `-SubstTemplateTypeParmType 0x55a774916d20 'typed_array_memory<String>' sugar
|       |-TemplateTypeParmType 0x55a77453f640 'F' dependent depth 0 index 1
|       | `-TemplateTypeParm 0x55a77453f5e8 'F'
|       `-RecordType 0x55a774916980 'typed_array_memory<String>'
|         `-ClassTemplateSpecialization 0x55a7749168a0 'typed_array_memory'
|-FieldDecl 0x55a77491ba70 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<String>::array_memory_type>':'vector_memory<typed_array_memory<String> >' mutable
|-AccessSpecDecl 0x55a77491bac0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55a77491baf8 <line:118:5, col:15> col:15 value_type 'String':'String'
| `-SubstTemplateTypeParmType 0x55a774915f20 'String' sugar
|   |-TemplateTypeParmType 0x55a774576bb0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55a774576b58 'T'
|   `-RecordType 0x55a7745a6080 'String'
|     `-CXXRecord 0x55a7745a5ff0 'String'
|-TypedefDecl 0x55a77491bb88 <line:119:5, col:16> col:16 reference 'String &'
| `-LValueReferenceType 0x55a77491bb50 'String &'
|   `-SubstTemplateTypeParmType 0x55a774915f20 'String' sugar
|     |-TemplateTypeParmType 0x55a774576bb0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55a774576b58 'T'
|     `-RecordType 0x55a7745a6080 'String'
|       `-CXXRecord 0x55a7745a5ff0 'String'
|-TypedefDecl 0x55a77491bc18 <line:120:5, col:22> col:22 const_reference 'const String &'
| `-LValueReferenceType 0x55a77491bbe0 'const String &'
|   `-QualType 0x55a774915f21 'const String' const
|     `-SubstTemplateTypeParmType 0x55a774915f20 'String' sugar
|       |-TemplateTypeParmType 0x55a774576bb0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55a774576b58 'T'
|       `-RecordType 0x55a7745a6080 'String'
|         `-CXXRecord 0x55a7745a5ff0 'String'
|-TypedefDecl 0x55a77491bca8 <line:121:5, col:16> col:16 pointer 'String *'
| `-PointerType 0x55a77491bc70 'String *'
|   `-SubstTemplateTypeParmType 0x55a774915f20 'String' sugar
|     |-TemplateTypeParmType 0x55a774576bb0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55a774576b58 'T'
|     `-RecordType 0x55a7745a6080 'String'
|       `-CXXRecord 0x55a7745a5ff0 'String'
|-TypedefDecl 0x55a77491bd38 <line:122:5, col:22> col:22 const_pointer 'const String *'
| `-PointerType 0x55a77491bd00 'const String *'
|   `-QualType 0x55a774915f21 'const String' const
|     `-SubstTemplateTypeParmType 0x55a774915f20 'String' sugar
|       |-TemplateTypeParmType 0x55a774576bb0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55a774576b58 'T'
|       `-RecordType 0x55a7745a6080 'String'
|         `-CXXRecord 0x55a7745a5ff0 'String'
|-TypedefDecl 0x55a77491c990 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<String>::type':'const String &'
| `-ElaboratedType 0x55a77491c940 'typename fast_argument<String>::type' sugar
|   `-TypedefType 0x55a77491c920 'fast_argument<String, true>::type' sugar
|     |-Typedef 0x55a77491c858 'type'
|     `-LValueReferenceType 0x55a77491c820 'const String &'
|       `-QualType 0x55a77491c5c1 'const String' const
|         `-SubstTemplateTypeParmType 0x55a77491c5c0 'String' sugar
|           |-TemplateTypeParmType 0x55a774549590 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55a774549538 'T'
|           `-RecordType 0x55a7745a6080 'String'
|             `-CXXRecord 0x55a7745a5ff0 'String'
|-TypedefDecl 0x55a77491c9f8 <line:126:5, col:22> col:22 const_access_type 'const String &'
| `-LValueReferenceType 0x55a77491bbe0 'const String &'
|   `-QualType 0x55a774915f21 'const String' const
|     `-SubstTemplateTypeParmType 0x55a774915f20 'String' sugar
|       |-TemplateTypeParmType 0x55a774576bb0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55a774576b58 'T'
|       `-RecordType 0x55a7745a6080 'String'
|         `-CXXRecord 0x55a7745a5ff0 'String'
|-TypedefDecl 0x55a77491ca50 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55a774274370 'int'
|-TypedefDecl 0x55a77491cab8 <line:130:5, col:16> col:16 iterator 'String *'
| `-PointerType 0x55a77491bc70 'String *'
|   `-SubstTemplateTypeParmType 0x55a774915f20 'String' sugar
|     |-TemplateTypeParmType 0x55a774576bb0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55a774576b58 'T'
|     `-RecordType 0x55a7745a6080 'String'
|       `-CXXRecord 0x55a7745a5ff0 'String'
|-TypedefDecl 0x55a77491cb20 <line:131:5, col:22> col:22 const_iterator 'const String *'
| `-PointerType 0x55a77491bd00 'const String *'
|   `-QualType 0x55a774915f21 'const String' const
|     `-SubstTemplateTypeParmType 0x55a774915f20 'String' sugar
|       |-TemplateTypeParmType 0x55a774576bb0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55a774576b58 'T'
|       `-RecordType 0x55a7745a6080 'String'
|         `-CXXRecord 0x55a7745a5ff0 'String'
|-EnumDecl 0x55a77491cb78 <line:134:5> col:5
| `-EnumConstantDecl 0x55a77491cc70 <col:12, col:40> col:12 RESERVE_GROW 'Vector<String>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55a77491cc50 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55a774578238 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55a774578210 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55a7745781f0 <col:40> 'int' 1
|-CXXConstructorDecl 0x55a77491ccf8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55a77491cf88 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x55a77491cdb0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55a77491ce50 <col:41, col:61> col:61 v 'Vector<String>::value_argument_type':'const String &'
|-CXXConstructorDecl 0x55a77491d218 <line:139:5, col:37> col:12 Vector 'void (const Vector<String> &)' inline
| `-ParmVarDecl 0x55a77491d100 <col:19, col:36> col:36 x 'const Vector<String> &'
|-CXXConstructorDecl 0x55a77491d4d8 <line:141:5, col:32> col:12 Vector 'void (Vector<String> &&)' inline
| `-ParmVarDecl 0x55a77491d3c0 <col:19, col:31> col:31 x 'Vector<String> &&'
|-CXXMethodDecl 0x55a77491d7f0 <line:144:5, col:51> col:23 operator= 'Vector<String> &(const Vector<String> &)' inline
| `-ParmVarDecl 0x55a77491d6d0 <col:33, col:50> col:50 x 'const Vector<String> &'
|-CXXMethodDecl 0x55a77491db00 <line:146:5, col:46> col:23 operator= 'Vector<String> &(Vector<String> &&)' inline
| `-ParmVarDecl 0x55a77491d9e0 <col:33, col:45> col:45 x 'Vector<String> &&'
|-CXXMethodDecl 0x55a77491ddf0 <line:148:5, col:70> col:23 assign 'Vector<String> &(Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x55a77491dc38 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55a77491dcb0 <col:43, col:69> col:63 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x55a77491df18 <line:150:5, col:55> col:49 begin 'Vector<String>::iterator ()'
| |-NoInlineAttr 0x55a77491dfc8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55a77491e020 <col:30> Inherited
|-CXXMethodDecl 0x55a77491e068 <line:151:5, col:53> col:49 end 'Vector<String>::iterator ()'
| |-NoInlineAttr 0x55a77491e118 <col:20> Inherited
| `-OptimizeNoneAttr 0x55a77491e170 <col:30> Inherited
|-CXXMethodDecl 0x55a77491e238 <line:152:5, col:63> col:55 used begin 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x55a77491e2e8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55a77491e340 <col:30> Inherited
|-CXXMethodDecl 0x55a77491e388 <line:153:5, col:61> col:55 used end 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x55a77491e438 <col:20> Inherited
| `-OptimizeNoneAttr 0x55a77491e490 <col:30> Inherited
|-CXXMethodDecl 0x55a77491e4d8 <line:154:5, col:64> col:55 cbegin 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x55a77491e588 <col:20> Inherited
| `-OptimizeNoneAttr 0x55a77491e5e0 <col:30> Inherited
|-CXXMethodDecl 0x55a77491e628 <line:155:5, col:62> col:55 cend 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x55a77491e6d8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55a77491e730 <col:30> Inherited
|-CXXMethodDecl 0x55a77491e758 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55a77491e808 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55a77491e8b8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55a77491ea78 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x55a77491e968 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55a77491e9e0 <col:37, col:63> col:57 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x55a77491ebc8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55a77491eb38 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55a77491ed78 <line:163:5, col:65> col:43 operator[] 'String &(Vector::size_type)'
| |-ParmVarDecl 0x55a77491ec80 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55a77491ee30 <col:20>
| `-OptimizeNoneAttr 0x55a77491ee88 <col:30>
|-CXXMethodDecl 0x55a77491efa8 <line:164:5, col:73> col:49 operator[] 'const String &(Vector::size_type) const'
| |-ParmVarDecl 0x55a77491eeb0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55a77491f060 <col:20>
| `-OptimizeNoneAttr 0x55a77491f0b8 <col:30>
|-CXXMethodDecl 0x55a77491f170 <line:165:5, col:29> col:15 at 'String &(Vector::size_type)' inline
| `-ParmVarDecl 0x55a77491f0e0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55a77491f2b8 <line:166:5, col:37> col:21 at 'const String &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55a77491f228 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55a77491f3e8 <line:167:5, col:21> col:15 front 'String &()' inline
|-CXXMethodDecl 0x55a77491f4e8 <line:168:5, col:29> col:21 front 'const String &() const' inline
|-CXXMethodDecl 0x55a77491f5b8 <line:169:5, col:20> col:15 back 'String &()' inline
|-CXXMethodDecl 0x55a77491f688 <line:170:5, col:28> col:21 back 'const String &() const' inline
|-CXXMethodDecl 0x55a77491f7c8 <line:172:5, col:39> col:15 unchecked_at 'String &(Vector::size_type)' inline
| `-ParmVarDecl 0x55a77491f738 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55a77491f910 <line:173:5, col:47> col:21 unchecked_at 'const String &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55a77491f880 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55a77491fa58 <line:174:5, col:59> col:15 at_u 'String &(Vector::size_type)' inline
| |-ParmVarDecl 0x55a77491f9c8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55a77491fb10 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55a77491fc10 <line:175:5, col:71> col:21 at_u 'const String &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55a77491fb80 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55a77491fcc8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55a77491fd88 <line:177:5, col:20> col:15 data 'String *()' inline
|-CXXMethodDecl 0x55a77491fe88 <line:178:5, col:28> col:21 data 'const String *() const' inline
|-CXXMethodDecl 0x55a774920008 <line:180:5, col:48> col:17 used push_back 'void (Vector<String>::value_argument_type)' inline
| `-ParmVarDecl 0x55a77491ff48 <col:27, col:47> col:47 v 'Vector<String>::value_argument_type':'const String &'
|-FunctionTemplateDecl 0x55a774920fd8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55a7749200c0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<String>':'fast_argument<String, true>'
| `-CXXMethodDecl 0x55a774920f38 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (String &&)' inline
|   `-ParmVarDecl 0x55a774920e38 <col:58, col:62> col:62 v 'String &&'
|-CXXMethodDecl 0x55a7749210b8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55a774921208 <line:186:5, col:49> col:17 push_front 'void (Vector<String>::value_argument_type)' inline
| `-ParmVarDecl 0x55a774921178 <col:28, col:48> col:48 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x55a7749212c0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55a774921508 <line:189:5, col:62> col:21 insert 'Vector<String>::iterator (Vector<String>::iterator, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x55a774921380 <col:28, col:37> col:37 it 'Vector<String>::iterator':'String *'
| `-ParmVarDecl 0x55a7749213f8 <col:41, col:61> col:61 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x55a774921698 <line:190:5, col:38> col:21 erase 'Vector<String>::iterator (Vector<String>::iterator)' inline
| `-ParmVarDecl 0x55a7749215d8 <col:27, col:36> col:36 it 'Vector<String>::iterator':'String *'
|-CXXMethodDecl 0x55a7749218a8 <line:191:5, col:49> col:21 erase 'Vector<String>::iterator (Vector<String>::iterator, Vector<String>::iterator)' inline
| |-ParmVarDecl 0x55a774921760 <col:27, col:36> col:36 a 'Vector<String>::iterator':'String *'
| `-ParmVarDecl 0x55a7749217d8 <col:39, col:48> col:48 b 'Vector<String>::iterator':'String *'
|-CXXMethodDecl 0x55a774921968 <line:193:5, col:23> col:17 used clear 'void ()' inline
|-CXXMethodDecl 0x55a774921bc8 <line:195:5, col:34> col:17 swap 'void (Vector<String> &)' inline
| `-ParmVarDecl 0x55a774921ad0 <col:22, col:33> col:33 x 'Vector<String> &'
`-CXXDestructorDecl 0x55a774921c98 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55a774921c98

Layout: <CGRecordLayout
  LLVMType:%class.Vector.7 = type { %class.vector_memory.8 }
  NonVirtualBaseLLVMType:%class.Vector.7 = type { %class.vector_memory.8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class ErrorHandler
         0 |   (ErrorHandler vtable pointer)
         8 |   int _nerrors
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55a7747935a8 prev 0x55a77492d9c8 <../dummy_inc/click/error.hh:90:1, line:592:1> line:90:7 referenced class ErrorHandler definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55a7747936a0 <col:1, col:7> col:7 implicit referenced class ErrorHandler
|-AccessSpecDecl 0x55a774793730 <col:22, col:28> col:22 public
|-EnumDecl 0x55a774793758 <line:98:5, line:111:5> line:98:10 Level
| |-EnumConstantDecl 0x55a774793878 <line:99:2, col:14> col:2 el_abort 'ErrorHandler::Level'
| | `-ConstantExpr 0x55a774793858 <col:13, col:14> 'int' Int: -999
| |   `-UnaryOperator 0x55a774793840 <col:13, col:14> 'int' prefix '-'
| |     `-IntegerLiteral 0x55a774793820 <col:14> 'int' 999
| |-EnumConstantDecl 0x55a774793920 <line:100:2, col:14> col:2 el_fatal 'ErrorHandler::Level'
| | `-ConstantExpr 0x55a774793900 <col:13, col:14> 'int' Int: -1
| |   `-UnaryOperator 0x55a7747938e8 <col:13, col:14> 'int' prefix '-'
| |     `-IntegerLiteral 0x55a7747938c8 <col:14> 'int' 1
| |-EnumConstantDecl 0x55a7747939b0 <line:102:2, col:17> col:2 el_emergency 'ErrorHandler::Level'
| | `-ConstantExpr 0x55a774793990 <col:17> 'int' Int: 0
| |   `-IntegerLiteral 0x55a774793970 <col:17> 'int' 0
| |-EnumConstantDecl 0x55a774793a40 <line:103:2, col:13> col:2 el_alert 'ErrorHandler::Level'
| | `-ConstantExpr 0x55a774793a20 <col:13> 'int' Int: 1
| |   `-IntegerLiteral 0x55a774793a00 <col:13> 'int' 1
| |-EnumConstantDecl 0x55a774793ad0 <line:104:2, col:16> col:2 el_critical 'ErrorHandler::Level'
| | `-ConstantExpr 0x55a774793ab0 <col:16> 'int' Int: 2
| |   `-IntegerLiteral 0x55a774793a90 <col:16> 'int' 2
| |-EnumConstantDecl 0x55a774793b60 <line:105:2, col:13> col:2 referenced el_error 'ErrorHandler::Level'
| | `-ConstantExpr 0x55a774793b40 <col:13> 'int' Int: 3
| |   `-IntegerLiteral 0x55a774793b20 <col:13> 'int' 3
| |-EnumConstantDecl 0x55a774793bf0 <line:106:2, col:15> col:2 el_warning 'ErrorHandler::Level'
| | `-ConstantExpr 0x55a774793bd0 <col:15> 'int' Int: 4
| |   `-IntegerLiteral 0x55a774793bb0 <col:15> 'int' 4
| |-EnumConstantDecl 0x55a774793c80 <line:107:2, col:14> col:2 el_notice 'ErrorHandler::Level'
| | `-ConstantExpr 0x55a774793c60 <col:14> 'int' Int: 5
| |   `-IntegerLiteral 0x55a774793c40 <col:14> 'int' 5
| |-EnumConstantDecl 0x55a774793d10 <line:109:2, col:12> col:2 el_info 'ErrorHandler::Level'
| | `-ConstantExpr 0x55a774793cf0 <col:12> 'int' Int: 6
| |   `-IntegerLiteral 0x55a774793cd0 <col:12> 'int' 6
| `-EnumConstantDecl 0x55a774793da0 <line:110:2, col:13> col:2 el_debug 'ErrorHandler::Level'
|   `-ConstantExpr 0x55a774793d80 <col:13> 'int' Int: 7
|     `-IntegerLiteral 0x55a774793d60 <col:13> 'int' 7
|-VarDecl 0x55a774793e10 <line:114:5, col:31> col:23 e_abort 'const char []' static
|-VarDecl 0x55a774793e98 <col:5, line:115:10> col:2 e_fatal 'const char []' static
|-VarDecl 0x55a774793f20 <line:114:5, line:116:14> col:2 e_emergency 'const char []' static
|-VarDecl 0x55a774793fa8 <line:114:5, line:117:10> col:2 e_alert 'const char []' static
|-VarDecl 0x55a774794030 <line:114:5, line:118:13> col:2 e_critical 'const char []' static
|-VarDecl 0x55a7747940b8 <line:114:5, line:119:10> col:2 e_error 'const char []' static
|-VarDecl 0x55a774794140 <line:114:5, line:120:12> col:2 e_warning 'const char []' static
|-VarDecl 0x55a7747941c8 <line:114:5, line:121:22> col:2 e_warning_annotated 'const char []' static
|-VarDecl 0x55a774794250 <line:114:5, line:122:11> col:2 e_notice 'const char []' static
|-VarDecl 0x55a7747942d8 <line:114:5, line:123:9> col:2 e_info 'const char []' static
|-VarDecl 0x55a774794360 <line:114:5, line:124:10> col:2 e_debug 'const char []' static
|-CXXConstructorDecl 0x55a774794460 <line:127:5, line:129:5> line:127:5 used ErrorHandler 'void ()'
| |-CXXCtorInitializer Field 0x55a7749aad88 '_nerrors' 'int'
| | `-IntegerLiteral 0x55a7749ab518 <line:128:13> 'int' 0
| `-CompoundStmt 0x55a7749ab588 <col:16, line:129:5>
|-CXXDestructorDecl 0x55a774794550 <line:131:5, line:132:5> line:131:13 used ~ErrorHandler 'void () noexcept' virtual
| `-CompoundStmt 0x55a7749ab598 <col:29, line:132:5>
|-CXXMethodDecl 0x55a774794708 <line:148:5, col:62> col:26 static_initialize 'ErrorHandler *(ErrorHandler *)' static
| `-ParmVarDecl 0x55a774794640 <col:44, col:58> col:58 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55a7747947d0 <line:154:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x55a7747948b8 <line:159:5, line:161:5> line:159:26 default_handler 'ErrorHandler *()' static
| `-CompoundStmt 0x55a7749ab5f0 <col:44, line:161:5>
|   `-ReturnStmt 0x55a7749ab5e0 <line:160:2, col:9>
|     `-ImplicitCastExpr 0x55a7749ab5c8 <col:9> 'ErrorHandler *' <LValueToRValue>
|       `-DeclRefExpr 0x55a7749ab5a8 <col:9> 'ErrorHandler *' lvalue Var 0x55a7749aade8 'the_default_handler' 'ErrorHandler *'
|-CXXMethodDecl 0x55a7747949f8 <line:168:5, col:55> col:17 set_default_handler 'void (ErrorHandler *)' static
| `-ParmVarDecl 0x55a774794968 <col:37, col:51> col:51 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55a774794ac0 <line:171:5, line:173:5> line:171:26 silent_handler 'ErrorHandler *()' static
| `-CompoundStmt 0x55a7749ab650 <col:43, line:173:5>
|   `-ReturnStmt 0x55a7749ab640 <line:172:2, col:9>
|     `-ImplicitCastExpr 0x55a7749ab628 <col:9> 'ErrorHandler *' <LValueToRValue>
|       `-DeclRefExpr 0x55a7749ab608 <col:9> 'ErrorHandler *' lvalue Var 0x55a7749aae60 'the_silent_handler' 'ErrorHandler *'
|-VarDecl 0x55a774794b78 <line:176:5, col:22> col:22 ok_result 'const int' static
|-VarDecl 0x55a774794bf8 <line:178:5, col:22> col:22 error_result 'const int' static
|-CXXMethodDecl 0x55a774794d08 <line:186:5, col:36> col:10 debug 'void (const char *, ...)'
| `-ParmVarDecl 0x55a774794c78 <col:16, col:28> col:28 fmt 'const char *'
|-CXXMethodDecl 0x55a774794e58 <line:188:5, col:38> col:10 message 'void (const char *, ...)'
| `-ParmVarDecl 0x55a774794dc8 <col:18, col:30> col:30 fmt 'const char *'
|-CXXMethodDecl 0x55a774794fb0 <line:193:5, col:37> col:9 warning 'int (const char *, ...)'
| `-ParmVarDecl 0x55a774794f18 <col:17, col:29> col:29 fmt 'const char *'
|-CXXMethodDecl 0x55a774795108 <line:196:5, col:35> col:9 error 'int (const char *, ...)'
| `-ParmVarDecl 0x55a774795070 <col:15, col:27> col:27 fmt 'const char *'
|-CXXMethodDecl 0x55a774795260 <line:201:5, col:35> col:9 fatal 'int (const char *, ...)'
| `-ParmVarDecl 0x55a7747951c8 <col:15, col:27> col:27 fmt 'const char *'
|-CXXMethodDecl 0x55a774795470 <line:204:5, col:61> col:10 ldebug 'void (const String &, const char *, ...)'
| |-ParmVarDecl 0x55a774795318 <col:17, col:31> col:31 landmark 'const String &'
| `-ParmVarDecl 0x55a774795398 <col:41, col:53> col:53 fmt 'const char *'
|-CXXMethodDecl 0x55a774795648 <line:206:5, col:63> col:10 lmessage 'void (const String &, const char *, ...)'
| |-ParmVarDecl 0x55a774795530 <col:19, col:33> col:33 landmark 'const String &'
| `-ParmVarDecl 0x55a7747955b0 <col:43, col:55> col:55 fmt 'const char *'
|-CXXMethodDecl 0x55a774795868 <line:208:5, col:62> col:9 lwarning 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x55a774795708 <col:18, col:32> col:32 landmark 'const String &'
| `-ParmVarDecl 0x55a774795788 <col:42, col:54> col:54 fmt 'const char *'
|-CXXMethodDecl 0x55a774795a48 <line:210:5, col:60> col:9 lerror 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x55a774795928 <col:16, col:30> col:30 landmark 'const String &'
| `-ParmVarDecl 0x55a7747959a8 <col:40, col:52> col:52 fmt 'const char *'
|-CXXMethodDecl 0x55a774795c28 <line:212:5, col:60> col:9 lfatal 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x55a774795b08 <col:16, col:30> col:30 landmark 'const String &'
| `-ParmVarDecl 0x55a774795b88 <col:40, col:52> col:52 fmt 'const char *'
|-CXXMethodDecl 0x55a774795db0 <line:226:5, col:35> col:9 used xmessage 'int (const String &)'
| `-ParmVarDecl 0x55a774795ce8 <col:18, col:32> col:32 str 'const String &'
|-CXXMethodDecl 0x55a774795f80 <line:232:5, line:234:5> line:232:9 used xmessage 'int (const String &, const String &)'
| |-ParmVarDecl 0x55a774795e68 <col:18, col:32> col:32 used anno 'const String &'
| |-ParmVarDecl 0x55a774795ee0 <col:38, col:52> col:52 used str 'const String &'
| `-CompoundStmt 0x55a7749ab8a8 <col:57, line:234:5>
|   `-ReturnStmt 0x55a7749ab898 <line:233:2, col:41>
|     `-ExprWithCleanups 0x55a7749ab880 <col:9, col:41> 'int'
|       `-CXXMemberCallExpr 0x55a7749ab828 <col:9, col:41> 'int'
|         |-MemberExpr 0x55a7749ab7f8 <col:9> '<bound member function type>' ->xmessage 0x55a774795db0
|         | `-CXXThisExpr 0x55a7749ab7e8 <col:9> 'ErrorHandler *' implicit this
|         `-MaterializeTemporaryExpr 0x55a7749ab868 <col:18, col:40> 'const String' lvalue
|           `-ImplicitCastExpr 0x55a7749ab850 <col:18, col:40> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x55a7749ab7c8 <col:18, col:40> 'String' (CXXTemporary 0x55a7749ab7c8)
|               `-CallExpr 0x55a7749ab790 <col:18, col:40> 'String'
|                 |-ImplicitCastExpr 0x55a7749ab778 <col:18> 'String (*)(const String &, const String &)' <FunctionToPointerDecay>
|                 | `-DeclRefExpr 0x55a7749ab6f0 <col:18> 'String (const String &, const String &)' lvalue CXXMethod 0x55a7749a95b8 'combine_anno' 'String (const String &, const String &)'
|                 |-DeclRefExpr 0x55a7749ab710 <col:31> 'const String' lvalue ParmVar 0x55a774795ee0 'str' 'const String &'
|                 `-DeclRefExpr 0x55a7749ab730 <col:36> 'const String' lvalue ParmVar 0x55a774795e68 'anno' 'const String &'
|-CXXMethodDecl 0x55a774796260 <line:241:5, line:243:5> line:241:9 xmessage 'int (const String &, const char *, __va_list_tag *)'
| |-ParmVarDecl 0x55a774796040 <col:18, col:32> col:32 used anno 'const String &'
| |-ParmVarDecl 0x55a7747960c0 <col:38, col:50> col:50 used fmt 'const char *'
| |-ParmVarDecl 0x55a774796138 <col:55, col:63> col:63 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x55a7749abb38 <col:68, line:243:5>
|   `-ReturnStmt 0x55a7749abb28 <line:242:2, col:41>
|     `-ExprWithCleanups 0x55a7749abb10 <col:9, col:41> 'int'
|       `-CXXMemberCallExpr 0x55a7749abab0 <col:9, col:41> 'int'
|         |-MemberExpr 0x55a7749aba80 <col:9> '<bound member function type>' ->xmessage 0x55a774795f80
|         | `-CXXThisExpr 0x55a7749aba70 <col:9> 'ErrorHandler *' implicit this
|         |-DeclRefExpr 0x55a7749ab948 <col:18> 'const String' lvalue ParmVar 0x55a774796040 'anno' 'const String &'
|         `-MaterializeTemporaryExpr 0x55a7749abaf8 <col:24, col:40> 'const String' lvalue
|           `-ImplicitCastExpr 0x55a7749abae0 <col:24, col:40> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x55a7749aba50 <col:24, col:40> 'String' (CXXTemporary 0x55a7749aba50)
|               `-CXXMemberCallExpr 0x55a7749ab9e8 <col:24, col:40> 'String'
|                 |-MemberExpr 0x55a7749ab978 <col:24> '<bound member function type>' ->vformat 0x55a7749a8a80
|                 | `-CXXThisExpr 0x55a7749ab968 <col:24> 'ErrorHandler *' implicit this
|                 |-ImplicitCastExpr 0x55a7749aba18 <col:32> 'const char *' <LValueToRValue>
|                 | `-DeclRefExpr 0x55a7749ab9a8 <col:32> 'const char *' lvalue ParmVar 0x55a7747960c0 'fmt' 'const char *'
|                 `-ImplicitCastExpr 0x55a7749aba30 <col:37> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                   `-DeclRefExpr 0x55a7749ab9c8 <col:37> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x55a774796138 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55a774796500 <line:251:5, line:254:5> line:251:9 used xmessage 'int (const String &, const String &, const String &)'
| |-ParmVarDecl 0x55a774796328 <col:18, col:32> col:32 used landmark 'const String &'
| |-ParmVarDecl 0x55a7747963a0 <col:42, col:56> col:56 used anno 'const String &'
| |-ParmVarDecl 0x55a774796418 <line:252:4, col:18> col:18 used str 'const String &'
| `-CompoundStmt 0x55a7749abe78 <col:23, line:254:5>
|   `-ReturnStmt 0x55a7749abe68 <line:253:2, col:71>
|     `-ExprWithCleanups 0x55a7749abe50 <col:9, col:71> 'int'
|       `-CXXMemberCallExpr 0x55a7749abdf0 <col:9, col:71> 'int'
|         |-MemberExpr 0x55a7749abdc0 <col:9> '<bound member function type>' ->xmessage 0x55a774795f80
|         | `-CXXThisExpr 0x55a7749abdb0 <col:9> 'ErrorHandler *' implicit this
|         |-MaterializeTemporaryExpr 0x55a7749abe38 <col:18, col:65> 'const String' lvalue
|         | `-ImplicitCastExpr 0x55a7749abe20 <col:18, col:65> 'const String' <NoOp>
|         |   `-CXXBindTemporaryExpr 0x55a7749abd70 <col:18, col:65> 'String' (CXXTemporary 0x55a7749abd70)
|         |     `-CallExpr 0x55a7749abd08 <col:18, col:65> 'String'
|         |       |-ImplicitCastExpr 0x55a7749abcf0 <col:18> 'String (*)(const String &, const String &)' <FunctionToPointerDecay>
|         |       | `-DeclRefExpr 0x55a7749abbd8 <col:18> 'String (const String &, const String &)' lvalue CXXMethod 0x55a7749a95b8 'combine_anno' 'String (const String &, const String &)'
|         |       |-DeclRefExpr 0x55a7749abbf8 <col:31> 'const String' lvalue ParmVar 0x55a7747963a0 'anno' 'const String &'
|         |       `-MaterializeTemporaryExpr 0x55a7749abd50 <col:37, col:64> 'const String' lvalue
|         |         `-ImplicitCastExpr 0x55a7749abd38 <col:37, col:64> 'const String' <NoOp>
|         |           `-CXXBindTemporaryExpr 0x55a7749abcd0 <col:37, col:64> 'String' (CXXTemporary 0x55a7749abcd0)
|         |             `-CallExpr 0x55a7749abca0 <col:37, col:64> 'String'
|         |               |-ImplicitCastExpr 0x55a7749abc88 <col:37> 'String (*)(const String &)' <FunctionToPointerDecay>
|         |               | `-DeclRefExpr 0x55a7749abc18 <col:37> 'String (const String &)' lvalue CXXMethod 0x55a7749a9c08 'make_landmark_anno' 'String (const String &)'
|         |               `-DeclRefExpr 0x55a7749abc38 <col:56> 'const String' lvalue ParmVar 0x55a774796328 'landmark' 'const String &'
|         `-DeclRefExpr 0x55a7749abd90 <col:68> 'const String' lvalue ParmVar 0x55a774796418 'str' 'const String &'
|-CXXMethodDecl 0x55a774796880 <line:264:5, line:267:5> line:264:9 xmessage 'int (const String &, const String &, const char *, __va_list_tag *)'
| |-ParmVarDecl 0x55a7747965c8 <col:18, col:32> col:32 used landmark 'const String &'
| |-ParmVarDecl 0x55a774796640 <col:42, col:56> col:56 used anno 'const String &'
| |-ParmVarDecl 0x55a7747966c0 <line:265:4, col:16> col:16 used fmt 'const char *'
| |-ParmVarDecl 0x55a774796738 <col:21, col:29> col:29 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x55a7749ac130 <col:34, line:267:5>
|   `-ReturnStmt 0x55a7749ac120 <line:266:2, col:51>
|     `-ExprWithCleanups 0x55a7749ac108 <col:9, col:51> 'int'
|       `-CXXMemberCallExpr 0x55a7749ac0a0 <col:9, col:51> 'int'
|         |-MemberExpr 0x55a7749ac070 <col:9> '<bound member function type>' ->xmessage 0x55a774796500
|         | `-CXXThisExpr 0x55a7749ac060 <col:9> 'ErrorHandler *' implicit this
|         |-DeclRefExpr 0x55a7749abf18 <col:18> 'const String' lvalue ParmVar 0x55a7747965c8 'landmark' 'const String &'
|         |-DeclRefExpr 0x55a7749abf38 <col:28> 'const String' lvalue ParmVar 0x55a774796640 'anno' 'const String &'
|         `-MaterializeTemporaryExpr 0x55a7749ac0f0 <col:34, col:50> 'const String' lvalue
|           `-ImplicitCastExpr 0x55a7749ac0d8 <col:34, col:50> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x55a7749ac040 <col:34, col:50> 'String' (CXXTemporary 0x55a7749ac040)
|               `-CXXMemberCallExpr 0x55a7749abfd8 <col:34, col:50> 'String'
|                 |-MemberExpr 0x55a7749abf68 <col:34> '<bound member function type>' ->vformat 0x55a7749a8a80
|                 | `-CXXThisExpr 0x55a7749abf58 <col:34> 'ErrorHandler *' implicit this
|                 |-ImplicitCastExpr 0x55a7749ac008 <col:42> 'const char *' <LValueToRValue>
|                 | `-DeclRefExpr 0x55a7749abf98 <col:42> 'const char *' lvalue ParmVar 0x55a7747966c0 'fmt' 'const char *'
|                 `-ImplicitCastExpr 0x55a7749ac020 <col:47> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                   `-DeclRefExpr 0x55a7749abfb8 <col:47> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x55a774796738 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55a7749a7fc8 <line:286:5, line:288:5> line:286:9 nerrors 'int () const'
| `-CompoundStmt 0x55a7749ac1b0 <col:25, line:288:5>
|   `-ReturnStmt 0x55a7749ac1a0 <line:287:2, col:9>
|     `-ImplicitCastExpr 0x55a7749ac188 <col:9> 'int' <LValueToRValue>
|       `-MemberExpr 0x55a7749ac158 <col:9> 'const int' lvalue ->_nerrors 0x55a7749aad88
|         `-CXXThisExpr 0x55a7749ac148 <col:9> 'const ErrorHandler *' implicit this
|-CXXMethodDecl 0x55a7749a81e0 <line:349:5, col:66> col:19 xformat 'String (int, const char *, ...)' static
| |-ParmVarDecl 0x55a7749a8080 <col:27, col:31> col:31 default_flags 'int'
| `-ParmVarDecl 0x55a7749a8100 <col:46, col:58> col:58 fmt 'const char *'
|-CXXMethodDecl 0x55a7749a84c8 <line:351:5, col:75> col:19 used vxformat 'String (int, const char *, __va_list_tag *)' static
| |-ParmVarDecl 0x55a7749a82a8 <col:28, col:32> col:32 default_flags 'int'
| |-ParmVarDecl 0x55a7749a8328 <col:47, col:59> col:59 fmt 'const char *'
| `-ParmVarDecl 0x55a7749a83a0 <col:64, col:72> col:72 val '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55a7749a8660 <line:353:5, col:47> col:19 xformat 'String (const char *, ...)' static
| `-ParmVarDecl 0x55a7749a8598 <col:27, col:39> col:39 fmt 'const char *'
|-CXXMethodDecl 0x55a7749a88a8 <line:355:5, line:357:5> line:355:19 vxformat 'String (const char *, __va_list_tag *)' static
| |-ParmVarDecl 0x55a7749a8720 <col:28, col:40> col:40 used fmt 'const char *'
| |-ParmVarDecl 0x55a7749a8798 <col:45, col:53> col:53 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x55a7749ac410 <col:58, line:357:5>
|   `-ReturnStmt 0x55a7749ac400 <line:356:2, col:29>
|     `-ExprWithCleanups 0x55a7749ac3e8 <col:9, col:29> 'String'
|       `-CXXConstructExpr 0x55a7749ac3b8 <col:9, col:29> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x55a7749ac3a0 <col:9, col:29> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x55a7749ac380 <col:9, col:29> 'String' (CXXTemporary 0x55a7749ac380)
|             `-CallExpr 0x55a7749ac310 <col:9, col:29> 'String'
|               |-ImplicitCastExpr 0x55a7749ac2f8 <col:9> 'String (*)(int, const char *, __va_list_tag *)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x55a7749ac278 <col:9> 'String (int, const char *, __va_list_tag *)' lvalue CXXMethod 0x55a7749a84c8 'vxformat' 'String (int, const char *, __va_list_tag *)'
|               |-IntegerLiteral 0x55a7749ac218 <col:18> 'int' 0
|               |-ImplicitCastExpr 0x55a7749ac348 <col:21> 'const char *' <LValueToRValue>
|               | `-DeclRefExpr 0x55a7749ac238 <col:21> 'const char *' lvalue ParmVar 0x55a7749a8720 'fmt' 'const char *'
|               `-ImplicitCastExpr 0x55a7749ac360 <col:26> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                 `-DeclRefExpr 0x55a7749ac258 <col:26> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x55a7749a8798 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55a7749a8a80 <line:369:5, col:56> col:20 used vformat 'String (const char *, __va_list_tag *)' virtual
| |-ParmVarDecl 0x55a7749a8970 <col:28, col:40> col:40 fmt 'const char *'
| `-ParmVarDecl 0x55a7749a89e8 <col:45, col:53> col:53 val '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55a7749a8bd8 <line:379:5, col:39> col:12 format 'String (const char *, ...)'
| `-ParmVarDecl 0x55a7749a8b48 <col:19, col:31> col:31 fmt 'const char *'
|-CXXMethodDecl 0x55a7749a8d20 <line:393:5, col:46> col:20 decorate 'String (const String &)' virtual
| `-ParmVarDecl 0x55a7749a8c90 <col:29, col:43> col:43 str 'const String &'
|-CXXMethodDecl 0x55a7749a8fc0 <line:424:5, col:69> col:19 emit 'void *(const String &, void *, bool)' virtual
| |-ParmVarDecl 0x55a7749a8dd8 <col:24, col:38> col:38 str 'const String &'
| |-ParmVarDecl 0x55a7749a8e58 <col:43, col:49> col:49 user_data 'void *'
| `-ParmVarDecl 0x55a7749a8ed0 <col:60, col:65> col:65 more 'bool'
|-CXXMethodDecl 0x55a7749a9120 <line:438:5, line:441:5> line:438:18 account 'void (int)' virtual
| |-ParmVarDecl 0x55a7749a9090 <col:26, col:30> col:30 used level 'int'
| `-CompoundStmt 0x55a7749ac528 <col:37, line:441:5>
|   `-IfStmt 0x55a7749ac510 <line:439:2, line:440:8>
|     |-BinaryOperator 0x55a7749ac498 <line:439:6, col:15> 'bool' '<='
|     | |-ImplicitCastExpr 0x55a7749ac468 <col:6> 'int' <LValueToRValue>
|     | | `-DeclRefExpr 0x55a7749ac428 <col:6> 'int' lvalue ParmVar 0x55a7749a9090 'level' 'int'
|     | `-ImplicitCastExpr 0x55a7749ac480 <col:15> 'int' <IntegralCast>
|     |   `-DeclRefExpr 0x55a7749ac448 <col:15> 'ErrorHandler::Level' EnumConstant 0x55a774793b60 'el_error' 'ErrorHandler::Level'
|     `-UnaryOperator 0x55a7749ac4f8 <line:440:6, col:8> 'int' lvalue prefix '++'
|       `-MemberExpr 0x55a7749ac4c8 <col:8> 'int' lvalue ->_nerrors 0x55a7749aad88
|         `-CXXThisExpr 0x55a7749ac4b8 <col:8> 'ErrorHandler *' implicit this
|-CXXMethodDecl 0x55a7749a91e8 <line:446:5, line:448:5> line:446:18 clear 'void ()' virtual
| `-CompoundStmt 0x55a7749ac5c0 <col:26, line:448:5>
|   `-BinaryOperator 0x55a7749ac5a0 <line:447:2, col:13> 'int' lvalue '='
|     |-MemberExpr 0x55a7749ac550 <col:2> 'int' lvalue ->_nerrors 0x55a7749aad88
|     | `-CXXThisExpr 0x55a7749ac540 <col:2> 'ErrorHandler *' implicit this
|     `-IntegerLiteral 0x55a7749ac580 <col:13> 'int' 0
|-CXXMethodDecl 0x55a7749a93b0 <line:466:5, col:66> col:19 used make_anno 'String (const char *, const String &)' static
| |-ParmVarDecl 0x55a7749a92a0 <col:29, col:41> col:41 name 'const char *'
| `-ParmVarDecl 0x55a7749a9318 <col:47, col:61> col:61 value 'const String &'
|-CXXMethodDecl 0x55a7749a95b8 <line:482:5, col:69> col:19 used combine_anno 'String (const String &, const String &)' static
| |-ParmVarDecl 0x55a7749a9470 <col:32, col:46> col:46 str 'const String &'
| `-ParmVarDecl 0x55a7749a94e8 <col:51, col:65> col:65 anno 'const String &'
|-CXXMethodDecl 0x55a7749a9868 <line:516:5, line:517:68> line:516:24 parse_anno 'const char *(const String &, const char *, const char *, ...)' static
| |-ParmVarDecl 0x55a7749a9678 <col:35, col:49> col:49 str 'const String &'
| |-ParmVarDecl 0x55a7749a96f8 <line:517:3, col:15> col:15 begin 'const char *'
| |-ParmVarDecl 0x55a7749a9778 <col:22, col:34> col:34 end 'const char *'
| `-SentinelAttr 0x55a7749a9920 <col:59> 0 0
|-CXXMethodDecl 0x55a7749a9ab8 <line:527:5, line:534:5> line:527:24 skip_anno 'const char *(const char *, const char *)' static
| |-ParmVarDecl 0x55a7749a9998 <col:34, col:46> col:46 used begin 'const char *'
| |-ParmVarDecl 0x55a7749a9a18 <col:53, col:65> col:65 used end 'const char *'
| `-CompoundStmt 0x55a7749acc30 <col:70, line:534:5>
|   |-DeclStmt 0x55a7749ac730 <line:528:2, col:20>
|   | |-VarDecl 0x55a7749ac5e8 <col:2, col:9> col:9 used name 'String' callinit destroyed
|   | | `-CXXConstructExpr 0x55a7749ac650 <col:9> 'String' 'void ()'
|   | `-VarDecl 0x55a7749ac688 <col:2, col:15> col:15 used value 'String' callinit destroyed
|   |   `-CXXConstructExpr 0x55a7749ac6f0 <col:15> 'String' 'void ()'
|   |-DeclStmt 0x55a7749ac800 <line:529:2, col:23>
|   | `-VarDecl 0x55a7749ac760 <col:2, col:18> col:14 used x 'const char *' cinit
|   |   `-ImplicitCastExpr 0x55a7749ac7e8 <col:18> 'const char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x55a7749ac7c8 <col:18> 'const char *' lvalue ParmVar 0x55a7749a9998 'begin' 'const char *'
|   |-DoStmt 0x55a7749acbc8 <line:530:2, line:532:15>
|   | |-CompoundStmt 0x55a7749acaf8 <line:530:5, line:532:2>
|   | | `-ExprWithCleanups 0x55a7749acae0 <line:531:6, col:58> 'const char *' lvalue
|   | |   `-BinaryOperator 0x55a7749acac0 <col:6, col:58> 'const char *' lvalue '='
|   | |     |-DeclRefExpr 0x55a7749ac818 <col:6> 'const char *' lvalue Var 0x55a7749ac760 'x' 'const char *'
|   | |     `-CallExpr 0x55a7749aca10 <col:10, col:58> 'const char *'
|   | |       |-ImplicitCastExpr 0x55a7749ac9f8 <col:10> 'const char *(*)(const String &, const char *, const char *, String *, String *, bool)' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x55a7749ac9b0 <col:10> 'const char *(const String &, const char *, const char *, String *, String *, bool)' lvalue CXXMethod 0x55a7749ab260 'skip_anno' 'const char *(const String &, const char *, const char *, String *, String *, bool)'
|   | |       |-MaterializeTemporaryExpr 0x55a7749aca78 <col:20, col:27> 'const String' lvalue
|   | |       | `-ImplicitCastExpr 0x55a7749aca60 <col:20, col:27> 'const String' <NoOp>
|   | |       |   `-CXXBindTemporaryExpr 0x55a7749ac8d0 <col:20, col:27> 'String' (CXXTemporary 0x55a7749ac8d0)
|   | |       |     `-CXXTemporaryObjectExpr 0x55a7749ac898 <col:20, col:27> 'String' 'void ()'
|   | |       |-ImplicitCastExpr 0x55a7749aca90 <col:30> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x55a7749ac8f0 <col:30> 'const char *' lvalue Var 0x55a7749ac760 'x' 'const char *'
|   | |       |-ImplicitCastExpr 0x55a7749acaa8 <col:33> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x55a7749ac910 <col:33> 'const char *' lvalue ParmVar 0x55a7749a9a18 'end' 'const char *'
|   | |       |-UnaryOperator 0x55a7749ac950 <col:38, col:39> 'String *' prefix '&' cannot overflow
|   | |       | `-DeclRefExpr 0x55a7749ac930 <col:39> 'String' lvalue Var 0x55a7749ac5e8 'name' 'String'
|   | |       |-UnaryOperator 0x55a7749ac988 <col:45, col:46> 'String *' prefix '&' cannot overflow
|   | |       | `-DeclRefExpr 0x55a7749ac968 <col:46> 'String' lvalue Var 0x55a7749ac688 'value' 'String'
|   | |       `-CXXBoolLiteralExpr 0x55a7749ac9a0 <col:53> 'bool' false
|   | `-ImplicitCastExpr 0x55a7749acbb0 <line:532:11> 'bool' <MemberPointerToBoolean>
|   |   `-ImplicitCastExpr 0x55a7749acb98 <col:11> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|   |     `-CXXMemberCallExpr 0x55a7749acb78 <col:11> 'String::unspecified_bool_type':'int (String::*)() const'
|   |       `-MemberExpr 0x55a7749acb48 <col:11> '<bound member function type>' .operator int (String::*)() const 0x55a7745a97e8
|   |         `-ImplicitCastExpr 0x55a7749acb30 <col:11> 'const String' lvalue <NoOp>
|   |           `-DeclRefExpr 0x55a7749acb10 <col:11> 'String' lvalue Var 0x55a7749ac5e8 'name' 'String'
|   `-ReturnStmt 0x55a7749acc20 <line:533:2, col:9>
|     `-ImplicitCastExpr 0x55a7749acc08 <col:9> 'const char *' <LValueToRValue>
|       `-DeclRefExpr 0x55a7749acbe8 <col:9> 'const char *' lvalue Var 0x55a7749ac760 'x' 'const char *'
|-CXXMethodDecl 0x55a7749a9c08 <line:543:5, line:550:5> line:543:19 used make_landmark_anno 'String (const String &)' static
| |-ParmVarDecl 0x55a7749a9b78 <col:38, col:52> col:52 used x 'const String &'
| `-CompoundStmt 0x55a7749ad238 <col:55, line:550:5>
|   `-IfStmt 0x55a7749ad210 <line:544:2, line:549:20> has_else
|     |-BinaryOperator 0x55a7749ace70 <line:544:6, col:19> 'bool' '&&'
|     | |-ImplicitCastExpr 0x55a7749ace58 <col:6> 'bool' <MemberPointerToBoolean>
|     | | `-ImplicitCastExpr 0x55a7749ace40 <col:6> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|     | |   `-CXXMemberCallExpr 0x55a7749ace20 <col:6> 'String::unspecified_bool_type':'int (String::*)() const'
|     | |     `-MemberExpr 0x55a7749acdf0 <col:6> '<bound member function type>' .operator int (String::*)() const 0x55a7745a97e8
|     | |       `-DeclRefExpr 0x55a7749acc90 <col:6> 'const String' lvalue ParmVar 0x55a7749a9b78 'x' 'const String &'
|     | `-BinaryOperator 0x55a7749acdd0 <col:11, col:19> 'bool' '=='
|     |   |-ImplicitCastExpr 0x55a7749acda0 <col:11, col:14> 'int' <IntegralCast>
|     |   | `-CXXOperatorCallExpr 0x55a7749acd50 <col:11, col:14> 'char'
|     |   |   |-ImplicitCastExpr 0x55a7749acd38 <col:12, col:14> 'char (*)(int) const' <FunctionToPointerDecay>
|     |   |   | `-DeclRefExpr 0x55a7749accf0 <col:12, col:14> 'char (int) const' lvalue CXXMethod 0x55a7745c3020 'operator[]' 'char (int) const'
|     |   |   |-DeclRefExpr 0x55a7749accb0 <col:11> 'const String' lvalue ParmVar 0x55a7749a9b78 'x' 'const String &'
|     |   |   `-IntegerLiteral 0x55a7749accd0 <col:13> 'int' 0
|     |   `-ImplicitCastExpr 0x55a7749acdb8 <col:19> 'int' <IntegralCast>
|     |     `-CharacterLiteral 0x55a7749acd88 <col:19> 'char' 123
|     |-ReturnStmt 0x55a7749acee0 <line:545:6, col:13>
|     | `-CXXConstructExpr 0x55a7749aceb0 <col:13> 'String' 'void (const String &)'
|     |   `-DeclRefExpr 0x55a7749ace90 <col:13> 'const String' lvalue ParmVar 0x55a7749a9b78 'x' 'const String &'
|     `-IfStmt 0x55a7749ad1e8 <line:546:7, line:549:20> has_else
|       |-ImplicitCastExpr 0x55a7749acf78 <line:546:11> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x55a7749acf60 <col:11> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x55a7749acf40 <col:11> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x55a7749acf10 <col:11> '<bound member function type>' .operator int (String::*)() const 0x55a7745a97e8
|       |       `-DeclRefExpr 0x55a7749acef0 <col:11> 'const String' lvalue ParmVar 0x55a7749a9b78 'x' 'const String &'
|       |-ReturnStmt 0x55a7749ad100 <line:547:6, col:29>
|       | `-ExprWithCleanups 0x55a7749ad0e8 <col:13, col:29> 'String'
|       |   `-CXXConstructExpr 0x55a7749ad0b8 <col:13, col:29> 'String' 'void (String &&)' elidable
|       |     `-MaterializeTemporaryExpr 0x55a7749ad0a0 <col:13, col:29> 'String' xvalue
|       |       `-CXXBindTemporaryExpr 0x55a7749ad080 <col:13, col:29> 'String' (CXXTemporary 0x55a7749ad080)
|       |         `-CallExpr 0x55a7749ad030 <col:13, col:29> 'String'
|       |           |-ImplicitCastExpr 0x55a7749ad018 <col:13> 'String (*)(const char *, const String &)' <FunctionToPointerDecay>
|       |           | `-DeclRefExpr 0x55a7749acf90 <col:13> 'String (const char *, const String &)' lvalue CXXMethod 0x55a7749a93b0 'make_anno' 'String (const char *, const String &)'
|       |           |-ImplicitCastExpr 0x55a7749ad060 <col:23> 'const char *' <ArrayToPointerDecay>
|       |           | `-StringLiteral 0x55a7749acfb0 <col:23> 'const char [2]' lvalue "l"
|       |           `-DeclRefExpr 0x55a7749acfd0 <col:28> 'const String' lvalue ParmVar 0x55a7749a9b78 'x' 'const String &'
|       `-ReturnStmt 0x55a7749ad1d8 <line:549:6, col:20>
|         `-ExprWithCleanups 0x55a7749ad1c0 <col:13, col:20> 'String'
|           `-CXXConstructExpr 0x55a7749ad190 <col:13, col:20> 'String' 'void (String &&)' elidable
|             `-MaterializeTemporaryExpr 0x55a7749ad178 <col:13, col:20> 'String' xvalue
|               `-CXXBindTemporaryExpr 0x55a7749ad158 <col:13, col:20> 'String' (CXXTemporary 0x55a7749ad158)
|                 `-CXXTemporaryObjectExpr 0x55a7749ad120 <col:13, col:20> 'String' 'void ()'
|-CXXMethodDecl 0x55a7749a9dd0 <line:559:5, col:76> col:19 clean_landmark 'String (const String &, bool)' static
| |-ParmVarDecl 0x55a7749a9cc0 <col:34, col:48> col:48 landmark 'const String &'
| `-ParmVarDecl 0x55a7749a9d38 <col:58, col:71> col:63 colon 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55a7749ab508 <col:71> 'bool' false
|-CXXRecordDecl 0x55a7749a9e80 <line:563:5, col:12> col:12 referenced struct Conversion
|-TypedefDecl 0x55a7749aa178 <line:564:5, col:60> col:22 referenced ConversionFunction 'String (*)(int, __va_list_tag *)'
| `-PointerType 0x55a7749aa110 'String (*)(int, __va_list_tag *)'
|   `-ParenType 0x55a7749aa0b0 'String (int, __va_list_tag *)' sugar
|     `-FunctionProtoType 0x55a7749aa070 'String (int, __va_list_tag *)' cdecl
|       |-RecordType 0x55a7745a6080 'String'
|       | `-CXXRecord 0x55a7745a5ff0 'String'
|       |-BuiltinType 0x55a774274370 'int'
|       `-DecayedType 0x55a77492ea10 '__va_list_tag *' sugar
|         |-TypedefType 0x55a77492e9e0 'va_list' sugar
|         | |-Typedef 0x55a774497130 'va_list'
|         | `-TypedefType 0x55a7744970e0 '__gnuc_va_list' sugar
|         |   |-Typedef 0x55a7743ced28 '__gnuc_va_list'
|         |   `-TypedefType 0x55a7743cec90 '__builtin_va_list' sugar
|         |     |-Typedef 0x55a7742b5bd8 '__builtin_va_list'
|         |     `-ConstantArrayType 0x55a7742b5b80 '__va_list_tag [1]' 1 
|         |       `-RecordType 0x55a7742750c0 '__va_list_tag'
|         |         `-CXXRecord 0x55a774275028 '__va_list_tag'
|         `-PointerType 0x55a77449c9d0 '__va_list_tag *'
|           `-RecordType 0x55a7742750c0 '__va_list_tag'
|             `-CXXRecord 0x55a774275028 '__va_list_tag'
|-EnumDecl 0x55a7749aa1d0 <line:565:5, line:576:5> line:565:10 ConversionFlags
| |-EnumConstantDecl 0x55a7749aa2d0 <line:566:2, col:16> col:2 cf_zero_pad 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55a7749aa830 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a7749aa2b0 <col:16> 'int' Int: 1
| |     `-IntegerLiteral 0x55a7749aa290 <col:16> 'int' 1
| |-EnumConstantDecl 0x55a7749aa360 <line:567:2, col:21> col:2 cf_plus_positive 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55a7749aa848 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a7749aa340 <col:21> 'int' Int: 2
| |     `-IntegerLiteral 0x55a7749aa320 <col:21> 'int' 2
| |-EnumConstantDecl 0x55a7749aa3f0 <line:568:2, col:22> col:2 cf_space_positive 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55a7749aa860 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a7749aa3d0 <col:22> 'int' Int: 4
| |     `-IntegerLiteral 0x55a7749aa3b0 <col:22> 'int' 4
| |-EnumConstantDecl 0x55a7749aa480 <line:569:2, col:17> col:2 cf_left_just 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55a7749aa878 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a7749aa460 <col:17> 'int' Int: 8
| |     `-IntegerLiteral 0x55a7749aa440 <col:17> 'int' 8
| |-EnumConstantDecl 0x55a7749aa510 <line:570:2, col:22> col:2 cf_alternate_form 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55a7749aa890 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a7749aa4f0 <col:22> 'int' Int: 16
| |     `-IntegerLiteral 0x55a7749aa4d0 <col:22> 'int' 16
| |-EnumConstantDecl 0x55a7749aa5a0 <line:571:2, col:19> col:2 cf_singlequote 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55a7749aa8a8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a7749aa580 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x55a7749aa560 <col:19> 'int' 32
| |-EnumConstantDecl 0x55a7749aa630 <line:572:2, col:17> col:2 cf_uppercase 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55a7749aa8c0 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a7749aa610 <col:17> 'int' Int: 64
| |     `-IntegerLiteral 0x55a7749aa5f0 <col:17> 'int' 64
| |-EnumConstantDecl 0x55a7749aa6c0 <line:573:2, col:14> col:2 cf_signed 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55a7749aa8d8 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a7749aa6a0 <col:14> 'int' Int: 128
| |     `-IntegerLiteral 0x55a7749aa680 <col:14> 'int' 128
| |-EnumConstantDecl 0x55a7749aa750 <line:574:2, col:16> col:2 cf_negative 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55a7749aa8f0 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a7749aa730 <col:16> 'int' Int: 256
| |     `-IntegerLiteral 0x55a7749aa710 <col:16> 'int' 256
| `-EnumConstantDecl 0x55a7749aa7e0 <line:575:2, col:12> col:2 cf_utf8 'ErrorHandler::ConversionFlags'
|   `-ImplicitCastExpr 0x55a7749aa908 <col:12> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55a7749aa7c0 <col:12> 'int' Int: 1024
|       `-IntegerLiteral 0x55a7749aa7a0 <col:12> 'int' 1024
|-CXXMethodDecl 0x55a7749aab18 <line:577:5, col:82> col:24 add_conversion 'ErrorHandler::Conversion *(const String &, ErrorHandler::ConversionFunction)' static
| |-ParmVarDecl 0x55a7749aa930 <col:39, col:53> col:53 name 'const String &'
| `-ParmVarDecl 0x55a7749aa9d0 <col:59, col:78> col:78 func 'ErrorHandler::ConversionFunction':'String (*)(int, __va_list_tag *)'
|-CXXMethodDecl 0x55a7749aaca0 <line:578:5, col:56> col:16 remove_conversion 'int (ErrorHandler::Conversion *)' static
| `-ParmVarDecl 0x55a7749aabd8 <col:34, col:46> col:46 conversion 'ErrorHandler::Conversion *'
|-AccessSpecDecl 0x55a7749aad48 <line:580:3, col:10> col:3 private
|-FieldDecl 0x55a7749aad88 <line:582:5, col:9> col:9 referenced _nerrors 'int'
|-VarDecl 0x55a7749aade8 <line:584:5, col:26> col:26 used the_default_handler 'ErrorHandler *' static
|-VarDecl 0x55a7749aae60 <line:585:5, col:26> col:26 used the_silent_handler 'ErrorHandler *' static
|-CXXMethodDecl 0x55a7749ab260 <line:587:5, line:590:14> line:587:24 used skip_anno 'const char *(const String &, const char *, const char *, String *, String *, bool)' static
| |-ParmVarDecl 0x55a7749aaed8 <col:34, col:48> col:48 str 'const String &'
| |-ParmVarDecl 0x55a7749aaf58 <line:588:6, col:18> col:18 begin 'const char *'
| |-ParmVarDecl 0x55a7749aafd8 <col:25, col:37> col:37 end 'const char *'
| |-ParmVarDecl 0x55a7749ab050 <line:589:6, col:14> col:14 name_result 'String *'
| |-ParmVarDecl 0x55a7749ab0c8 <col:27, col:35> col:35 value_result 'String *'
| `-ParmVarDecl 0x55a7749ab140 <line:590:6, col:11> col:11 raw 'bool'
|-CXXMethodDecl 0x55a7749ab388 <line:90:7> col:7 implicit operator= 'ErrorHandler &(const ErrorHandler &)' inline default noexcept-unevaluated 0x55a7749ab388
| `-ParmVarDecl 0x55a7749ab498 <col:7> col:7 'const ErrorHandler &'
`-CXXConstructorDecl 0x55a7749ad598 <col:7> col:7 implicit constexpr ErrorHandler 'void (const ErrorHandler &)' inline default noexcept-unevaluated 0x55a7749ad598
  `-ParmVarDecl 0x55a7749ad6a8 <col:7> col:7 'const ErrorHandler &'

Layout: <CGRecordLayout
  LLVMType:%class.ErrorHandler = type <{ i32 (...)**, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.ErrorHandler.base = type <{ i32 (...)**, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class ArgContext
         0 |   const class Element * _context
         8 |   class ErrorHandler * _errh
        16 |   const char * _arg_keyword
        24 |   _Bool _read_status
           | [sizeof=32, dsize=25, align=8,
           |  nvsize=25, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<4> >
         0 |   vector_memory<class sized_array_memory<4> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<int>
         0 |   class vector_memory<class sized_array_memory<4> > vm_
         0 |     vector_memory<class sized_array_memory<4> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Args
         0 |   class ArgContext (base)
         0 |     const class Element * _context
         8 |     class ErrorHandler * _errh
        16 |     const char * _arg_keyword
        24 |     _Bool _read_status
        25 |   _Bool _my_conf
        26 |   _Bool _status
        27 |   uint8_t _simple_slotpos
        32 |   Vector<class String> * _conf
        40 |   class Vector<int> _kwpos
        40 |     class vector_memory<class sized_array_memory<4> > vm_
        40 |       vector_memory<class sized_array_memory<4> >::type * l_
        48 |       vector_memory::size_type n_
        52 |       vector_memory::size_type capacity_
        56 |   struct Args::Slot * _slots
        64 |   uint8_t [48] _simple_slotbuf
           | [sizeof=112, dsize=112, align=8,
           |  nvsize=112, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55a77492da58 prev 0x55a7747a02c8 <../dummy_inc/click/args.hh:29:1, line:85:1> line:29:7 referenced class ArgContext definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55a77492db50 <col:1, col:7> col:7 implicit referenced class ArgContext
|-AccessSpecDecl 0x55a77492dbe0 <col:20, col:26> col:20 public
|-CXXConstructorDecl 0x55a77492dd18 <line:33:5, line:38:5> line:33:5 ArgContext 'void (ErrorHandler *)'
| |-ParmVarDecl 0x55a77492dc18 <col:16, col:37> col:30 used errh 'ErrorHandler *' cinit
| | `-ImplicitCastExpr 0x55a77492f140 <col:37> 'ErrorHandler *' <NullToPointer>
| |   `-IntegerLiteral 0x55a77492f120 <col:37> 'int' 0
| |-CXXCtorInitializer Field 0x55a77492ecb8 '_errh' 'ErrorHandler *'
| | `-ImplicitCastExpr 0x55a77492f1d0 <line:34:17> 'ErrorHandler *' <LValueToRValue>
| |   `-DeclRefExpr 0x55a77492f190 <col:17> 'ErrorHandler *' lvalue ParmVar 0x55a77492dc18 'errh' 'ErrorHandler *'
| |-CXXCtorInitializer Field 0x55a77492ed20 '_arg_keyword' 'const char *'
| | `-ImplicitCastExpr 0x55a77492f250 <col:37> 'const char *' <NullToPointer>
| |   `-IntegerLiteral 0x55a77492f210 <col:37> 'int' 0
| |-CXXCtorInitializer Field 0x55a77492ed80 '_read_status' 'bool'
| | `-CXXBoolLiteralExpr 0x55a77492f290 <col:54> 'bool' false
| `-CompoundStmt 0x55a77492f398 <col:61, line:38:5>
|   `-BinaryOperator 0x55a77492f378 <line:36:9, col:20> 'const Element *' lvalue '='
|     |-MemberExpr 0x55a77492f310 <col:9> 'const Element *' lvalue ->_context 0x55a77492ec58
|     | `-CXXThisExpr 0x55a77492f300 <col:9> 'ArgContext *' implicit this
|     `-ImplicitCastExpr 0x55a77492f360 <col:20> 'const Element *' <NullToPointer>
|       `-IntegerLiteral 0x55a77492f340 <col:20> 'int' 0
|-CXXConstructorDecl 0x55a77492df28 <line:44:5, line:46:5> line:44:5 ArgContext 'void (const Element *, ErrorHandler *)'
| |-ParmVarDecl 0x55a77492ddd8 <col:16, col:31> col:31 used context 'const Element *'
| |-ParmVarDecl 0x55a77492de50 <col:40, col:61> col:54 used errh 'ErrorHandler *' cinit
| | `-ImplicitCastExpr 0x55a77492f178 <col:61> 'ErrorHandler *' <NullToPointer>
| |   `-IntegerLiteral 0x55a77492f158 <col:61> 'int' 0
| |-CXXCtorInitializer Field 0x55a77492ec58 '_context' 'const Element *'
| | `-ImplicitCastExpr 0x55a77492f3f0 <line:45:20> 'const Element *' <LValueToRValue>
| |   `-DeclRefExpr 0x55a77492f3b0 <col:20> 'const Element *' lvalue ParmVar 0x55a77492ddd8 'context' 'const Element *'
| |-CXXCtorInitializer Field 0x55a77492ecb8 '_errh' 'ErrorHandler *'
| | `-ImplicitCastExpr 0x55a77492f470 <col:36> 'ErrorHandler *' <LValueToRValue>
| |   `-DeclRefExpr 0x55a77492f430 <col:36> 'ErrorHandler *' lvalue ParmVar 0x55a77492de50 'errh' 'ErrorHandler *'
| |-CXXCtorInitializer Field 0x55a77492ed20 '_arg_keyword' 'const char *'
| | `-ImplicitCastExpr 0x55a77492f4f0 <col:56> 'const char *' <NullToPointer>
| |   `-IntegerLiteral 0x55a77492f4b0 <col:56> 'int' 0
| |-CXXCtorInitializer Field 0x55a77492ed80 '_read_status' 'bool'
| | `-CXXBoolLiteralExpr 0x55a77492f530 <col:73> 'bool' false
| `-CompoundStmt 0x55a77492f5a8 <col:80, line:46:5>
|-CXXMethodDecl 0x55a77492e058 <line:49:5, line:51:5> line:49:20 context 'const Element *() const'
| `-CompoundStmt 0x55a77492f620 <col:36, line:51:5>
|   `-ReturnStmt 0x55a77492f610 <line:50:9, col:16>
|     `-ImplicitCastExpr 0x55a77492f5f8 <col:16> 'const Element *' <LValueToRValue>
|       `-MemberExpr 0x55a77492f5c8 <col:16> 'const Element *const' lvalue ->_context 0x55a77492ec58
|         `-CXXThisExpr 0x55a77492f5b8 <col:16> 'const ArgContext *' implicit this
|-CXXMethodDecl 0x55a77492e148 <line:55:5, line:57:5> line:55:19 errh 'ErrorHandler *() const'
| `-CompoundStmt 0x55a77492f6a0 <col:32, line:57:5>
|   `-ReturnStmt 0x55a77492f690 <line:56:9, col:16>
|     `-ImplicitCastExpr 0x55a77492f678 <col:16> 'ErrorHandler *' <LValueToRValue>
|       `-MemberExpr 0x55a77492f648 <col:16> 'ErrorHandler *const' lvalue ->_errh 0x55a77492ecb8
|         `-CXXThisExpr 0x55a77492f638 <col:16> 'const ArgContext *' implicit this
|-CXXMethodDecl 0x55a77492e208 <line:62:5, col:27> col:12 error_prefix 'String () const'
|-CXXMethodDecl 0x55a77492e390 <line:65:5, col:38> col:10 referenced error 'void (const char *, ...) const'
| `-ParmVarDecl 0x55a77492e2c0 <col:16, col:28> col:28 fmt 'const char *'
|-CXXMethodDecl 0x55a77492e4e0 <line:68:5, col:40> col:10 warning 'void (const char *, ...) const'
| `-ParmVarDecl 0x55a77492e450 <col:18, col:30> col:30 fmt 'const char *'
|-CXXMethodDecl 0x55a77492e630 <line:71:5, col:40> col:10 message 'void (const char *, ...) const'
| `-ParmVarDecl 0x55a77492e5a0 <col:18, col:30> col:30 fmt 'const char *'
|-CXXMethodDecl 0x55a77492e838 <line:73:5, col:58> col:10 xmessage 'void (const String &, const String &) const'
| |-ParmVarDecl 0x55a77492e6e8 <col:19, col:33> col:33 anno 'const String &'
| `-ParmVarDecl 0x55a77492e760 <col:39, col:53> col:53 str 'const String &'
|-CXXMethodDecl 0x55a77492eb68 <line:74:5, col:69> col:10 xmessage 'void (const String &, const char *, __va_list_tag *) const'
| |-ParmVarDecl 0x55a77492e8f8 <col:19, col:33> col:33 anno 'const String &'
| |-ParmVarDecl 0x55a77492e978 <col:39, col:51> col:51 fmt 'const char *'
| `-ParmVarDecl 0x55a77492ea40 <col:56, col:64> col:64 val '__va_list_tag *':'__va_list_tag *'
|-AccessSpecDecl 0x55a77492ec20 <line:76:3, col:12> col:3 protected
|-FieldDecl 0x55a77492ec58 <line:79:5, col:20> col:20 referenced _context 'const Element *'
|-FieldDecl 0x55a77492ecb8 <line:81:5, col:19> col:19 referenced _errh 'ErrorHandler *'
|-FieldDecl 0x55a77492ed20 <line:82:5, col:17> col:17 _arg_keyword 'const char *'
|-FieldDecl 0x55a77492ed80 <line:83:5, col:18> col:18 referenced _read_status 'bool' mutable
|-CXXConstructorDecl 0x55a77492edd0 <line:29:7> col:7 implicit constexpr ArgContext 'void (const ArgContext &)' inline default trivial noexcept-unevaluated 0x55a77492edd0
| `-ParmVarDecl 0x55a77492eee8 <col:7> col:7 'const ArgContext &'
|-CXXMethodDecl 0x55a77492ef88 <col:7> col:7 implicit operator= 'ArgContext &(const ArgContext &)' inline default trivial noexcept-unevaluated 0x55a77492ef88
| `-ParmVarDecl 0x55a77492f098 <col:7> col:7 'const ArgContext &'
`-CXXDestructorDecl 0x55a7749ed170 <col:7> col:7 implicit ~ArgContext 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.ArgContext = type <{ %class.Element*, %class.ErrorHandler*, i8*, i8, [7 x i8] }>
  NonVirtualBaseLLVMType:%class.ArgContext.base = type <{ %class.Element*, %class.ErrorHandler*, i8*, i8 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55a774954b40 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<4>'
|-CXXRecordDecl 0x55a774954d18 prev 0x55a774954b40 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55a774954da8 <col:46, col:52> col:46 public
|-TypedefDecl 0x55a774954dd0 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55a774274370 'int'
|-TypedefDecl 0x55a774962bd0 <line:13:5, col:31> col:31 type 'typename sized_array_memory<4>::type':'char_array<4>'
| `-ElaboratedType 0x55a774962b80 'typename sized_array_memory<4>::type' sugar
|   `-TypedefType 0x55a774955280 'sized_array_memory<4>::type' sugar
|     |-Typedef 0x55a774955180 'type'
|     `-TemplateSpecializationType 0x55a774955110 'char_array<4UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x55a774954ff0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 4
|       |   `-SubstNonTypeTemplateParmExpr 0x55a774954fd0 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x55a774954fb0 <col:24> 'unsigned long' 4
|       `-RecordType 0x55a7749550f0 'char_array<4>'
|         `-ClassTemplateSpecialization 0x55a774955010 'char_array'
|-TypedefDecl 0x55a774962c88 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<4> >::type *'
| `-PointerType 0x55a774962c50 'vector_memory<sized_array_memory<4> >::type *'
|   `-TypedefType 0x55a774962c30 'vector_memory<sized_array_memory<4> >::type' sugar
|     |-Typedef 0x55a774962bd0 'type'
|     `-ElaboratedType 0x55a774962b80 'typename sized_array_memory<4>::type' sugar
|       `-TypedefType 0x55a774955280 'sized_array_memory<4>::type' sugar
|         |-Typedef 0x55a774955180 'type'
|         `-TemplateSpecializationType 0x55a774955110 'char_array<4UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x55a774954ff0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 4
|           |   `-SubstNonTypeTemplateParmExpr 0x55a774954fd0 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x55a774954fb0 <col:24> 'unsigned long' 4
|           `-RecordType 0x55a7749550f0 'char_array<4>'
|             `-ClassTemplateSpecialization 0x55a774955010 'char_array'
|-CXXMethodDecl 0x55a774962e08 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<4> >::type *) const' inline
| `-ParmVarDecl 0x55a774962d18 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXConstructorDecl 0x55a774962ef8 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55a774962fd8 <line:23:5, col:20> col:5 ~vector_memory 'void () noexcept'
|-CXXMethodDecl 0x55a7749632a8 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<4> > &)'
| `-ParmVarDecl 0x55a7749631b0 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<4> > &'
|-CXXMethodDecl 0x55a7749634e8 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x55a774963360 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55a7749633d8 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55a7749636b8 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x55a7749635a8 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55a774963620 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55a774963818 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<4> >::iterator ()'
|-CXXMethodDecl 0x55a7749638e8 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<4> >::iterator ()'
|-CXXMethodDecl 0x55a774963b38 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<4> >::iterator (vector_memory<sized_array_memory<4> >::iterator, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x55a7749639a8 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<4> >::iterator':'vector_memory<sized_array_memory<4> >::type *'
| `-ParmVarDecl 0x55a774963a20 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55a774963d98 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<4> >::iterator (vector_memory<sized_array_memory<4> >::iterator, vector_memory<sized_array_memory<4> >::iterator)'
| |-ParmVarDecl 0x55a774963c08 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<4> >::iterator':'vector_memory<sized_array_memory<4> >::type *'
| `-ParmVarDecl 0x55a774963c80 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<4> >::iterator':'vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55a774963f58 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<4> >::type *)' inline
| `-ParmVarDecl 0x55a774963e68 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55a774964118 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<4> >::type *)' inline
| `-ParmVarDecl 0x55a774964020 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55a7749641d0 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55a774964280 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55a7749644b8 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x55a774964330 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55a7749643a8 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55a774964758 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<4> > &)'
| `-ParmVarDecl 0x55a774964660 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<4> > &'
|-FieldDecl 0x55a774964820 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<4> >::type *'
|-FieldDecl 0x55a774964870 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55a7749648c0 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.10 = type { %struct.char_array.11*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.10 = type { %struct.char_array.11*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55a774953758 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'int'
|-CXXRecordDecl 0x55a774953968 prev 0x55a774953758 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55a774954ab0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<int>::type':'sized_array_memory<4>'
| `-ElaboratedType 0x55a774954a60 'typename array_memory<int>::type' sugar
|   `-TypedefType 0x55a774954a40 'conditional<true, sized_array_memory<4>, typed_array_memory<int> >::type' sugar
|     |-Typedef 0x55a7749548f0 'type'
|     `-SubstTemplateTypeParmType 0x55a774954710 'sized_array_memory<4>' sugar
|       |-TemplateTypeParmType 0x55a77453eec0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55a77453ee68 'T'
|       `-RecordType 0x55a774954260 'sized_array_memory<4>'
|         `-ClassTemplateSpecialization 0x55a774954178 'sized_array_memory'
|-FieldDecl 0x55a774964910 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<int>::array_memory_type>':'vector_memory<sized_array_memory<4> >' mutable
|-AccessSpecDecl 0x55a774964960 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55a774964998 <line:118:5, col:15> col:15 value_type 'int':'int'
| `-SubstTemplateTypeParmType 0x55a774953a00 'int' sugar
|   |-TemplateTypeParmType 0x55a774576bb0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55a774576b58 'T'
|   `-BuiltinType 0x55a774274370 'int'
|-TypedefDecl 0x55a774964a28 <line:119:5, col:16> col:16 reference 'int &'
| `-LValueReferenceType 0x55a7749649f0 'int &'
|   `-SubstTemplateTypeParmType 0x55a774953a00 'int' sugar
|     |-TemplateTypeParmType 0x55a774576bb0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55a774576b58 'T'
|     `-BuiltinType 0x55a774274370 'int'
|-TypedefDecl 0x55a774964ae8 <line:120:5, col:22> col:22 const_reference 'const int &'
| `-LValueReferenceType 0x55a774964ab0 'const int &'
|   `-QualType 0x55a774953a01 'const int' const
|     `-SubstTemplateTypeParmType 0x55a774953a00 'int' sugar
|       |-TemplateTypeParmType 0x55a774576bb0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55a774576b58 'T'
|       `-BuiltinType 0x55a774274370 'int'
|-TypedefDecl 0x55a774964b78 <line:121:5, col:16> col:16 pointer 'int *'
| `-PointerType 0x55a774964b40 'int *'
|   `-SubstTemplateTypeParmType 0x55a774953a00 'int' sugar
|     |-TemplateTypeParmType 0x55a774576bb0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55a774576b58 'T'
|     `-BuiltinType 0x55a774274370 'int'
|-TypedefDecl 0x55a774964c08 <line:122:5, col:22> col:22 const_pointer 'const int *'
| `-PointerType 0x55a774964bd0 'const int *'
|   `-QualType 0x55a774953a01 'const int' const
|     `-SubstTemplateTypeParmType 0x55a774953a00 'int' sugar
|       |-TemplateTypeParmType 0x55a774576bb0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55a774576b58 'T'
|       `-BuiltinType 0x55a774274370 'int'
|-TypedefDecl 0x55a7749657f0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<int>::type':'int'
| `-ElaboratedType 0x55a7749657a0 'typename fast_argument<int>::type' sugar
|   `-TypedefType 0x55a774965780 'fast_argument<int, false>::type' sugar
|     |-Typedef 0x55a774965710 'type'
|     `-SubstTemplateTypeParmType 0x55a7749654d0 'int' sugar
|       |-TemplateTypeParmType 0x55a774549cc0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55a774549c70 'T'
|       `-BuiltinType 0x55a774274370 'int'
|-TypedefDecl 0x55a774965858 <line:126:5, col:22> col:22 const_access_type 'const int &'
| `-LValueReferenceType 0x55a774964ab0 'const int &'
|   `-QualType 0x55a774953a01 'const int' const
|     `-SubstTemplateTypeParmType 0x55a774953a00 'int' sugar
|       |-TemplateTypeParmType 0x55a774576bb0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55a774576b58 'T'
|       `-BuiltinType 0x55a774274370 'int'
|-TypedefDecl 0x55a7749658b0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55a774274370 'int'
|-TypedefDecl 0x55a774965918 <line:130:5, col:16> col:16 iterator 'int *'
| `-PointerType 0x55a774964b40 'int *'
|   `-SubstTemplateTypeParmType 0x55a774953a00 'int' sugar
|     |-TemplateTypeParmType 0x55a774576bb0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55a774576b58 'T'
|     `-BuiltinType 0x55a774274370 'int'
|-TypedefDecl 0x55a774965980 <line:131:5, col:22> col:22 const_iterator 'const int *'
| `-PointerType 0x55a774964bd0 'const int *'
|   `-QualType 0x55a774953a01 'const int' const
|     `-SubstTemplateTypeParmType 0x55a774953a00 'int' sugar
|       |-TemplateTypeParmType 0x55a774576bb0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55a774576b58 'T'
|       `-BuiltinType 0x55a774274370 'int'
|-EnumDecl 0x55a7749659d8 <line:134:5> col:5
| `-EnumConstantDecl 0x55a774965ad0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<int>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55a774965ab0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55a774578238 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55a774578210 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55a7745781f0 <col:40> 'int' 1
|-CXXConstructorDecl 0x55a774965b58 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55a774965da8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x55a774965c10 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55a774965cb0 <col:41, col:61> col:61 v 'Vector<int>::value_argument_type':'int'
|-CXXConstructorDecl 0x55a774966068 <line:139:5, col:37> col:12 Vector 'void (const Vector<int> &)' inline
| `-ParmVarDecl 0x55a774965f50 <col:19, col:36> col:36 x 'const Vector<int> &'
|-CXXConstructorDecl 0x55a774966328 <line:141:5, col:32> col:12 Vector 'void (Vector<int> &&)' inline
| `-ParmVarDecl 0x55a774966210 <col:19, col:31> col:31 x 'Vector<int> &&'
|-CXXMethodDecl 0x55a774966670 <line:144:5, col:51> col:23 operator= 'Vector<int> &(const Vector<int> &)' inline
| `-ParmVarDecl 0x55a774966550 <col:33, col:50> col:50 x 'const Vector<int> &'
|-CXXMethodDecl 0x55a774966980 <line:146:5, col:46> col:23 operator= 'Vector<int> &(Vector<int> &&)' inline
| `-ParmVarDecl 0x55a774966860 <col:33, col:45> col:45 x 'Vector<int> &&'
|-CXXMethodDecl 0x55a774966c70 <line:148:5, col:70> col:23 assign 'Vector<int> &(Vector::size_type, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x55a774966ab8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55a774966b30 <col:43, col:69> col:63 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x55a774966d98 <line:150:5, col:55> col:49 begin 'Vector<int>::iterator ()'
| |-NoInlineAttr 0x55a774966e78 <col:20> Inherited
| `-OptimizeNoneAttr 0x55a774966ed0 <col:30> Inherited
|-CXXMethodDecl 0x55a774966f18 <line:151:5, col:53> col:49 end 'Vector<int>::iterator ()'
| |-NoInlineAttr 0x55a774966fc8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55a774967020 <col:30> Inherited
|-CXXMethodDecl 0x55a7749670e8 <line:152:5, col:63> col:55 begin 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x55a774967198 <col:20> Inherited
| `-OptimizeNoneAttr 0x55a7749671f0 <col:30> Inherited
|-CXXMethodDecl 0x55a774967238 <line:153:5, col:61> col:55 end 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x55a7749672e8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55a774967340 <col:30> Inherited
|-CXXMethodDecl 0x55a774967388 <line:154:5, col:64> col:55 cbegin 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x55a774967438 <col:20> Inherited
| `-OptimizeNoneAttr 0x55a774967490 <col:30> Inherited
|-CXXMethodDecl 0x55a7749674d8 <line:155:5, col:62> col:55 cend 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x55a774967588 <col:20> Inherited
| `-OptimizeNoneAttr 0x55a7749675e0 <col:30> Inherited
|-CXXMethodDecl 0x55a774967608 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55a7749676b8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55a774967768 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55a774967928 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x55a774967818 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55a774967890 <col:37, col:63> col:57 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x55a774967a78 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55a7749679e8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55a774967c28 <line:163:5, col:65> col:43 operator[] 'int &(Vector::size_type)'
| |-ParmVarDecl 0x55a774967b30 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55a774967ce0 <col:20>
| `-OptimizeNoneAttr 0x55a774967d38 <col:30>
|-CXXMethodDecl 0x55a774967e58 <line:164:5, col:73> col:49 operator[] 'const int &(Vector::size_type) const'
| |-ParmVarDecl 0x55a774967d60 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55a774967f10 <col:20>
| `-OptimizeNoneAttr 0x55a774967f68 <col:30>
|-CXXMethodDecl 0x55a774968020 <line:165:5, col:29> col:15 at 'int &(Vector::size_type)' inline
| `-ParmVarDecl 0x55a774967f90 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55a774968168 <line:166:5, col:37> col:21 at 'const int &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55a7749680d8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55a774968298 <line:167:5, col:21> col:15 front 'int &()' inline
|-CXXMethodDecl 0x55a7749683c8 <line:168:5, col:29> col:21 front 'const int &() const' inline
|-CXXMethodDecl 0x55a774968498 <line:169:5, col:20> col:15 back 'int &()' inline
|-CXXMethodDecl 0x55a774968568 <line:170:5, col:28> col:21 back 'const int &() const' inline
|-CXXMethodDecl 0x55a7749686a8 <line:172:5, col:39> col:15 unchecked_at 'int &(Vector::size_type)' inline
| `-ParmVarDecl 0x55a774968618 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55a7749687f0 <line:173:5, col:47> col:21 unchecked_at 'const int &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55a774968760 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55a774968938 <line:174:5, col:59> col:15 at_u 'int &(Vector::size_type)' inline
| |-ParmVarDecl 0x55a7749688a8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55a7749689f0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55a774968af0 <line:175:5, col:71> col:21 at_u 'const int &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55a774968a60 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55a774968ba8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55a774968c68 <line:177:5, col:20> col:15 data 'int *()' inline
|-CXXMethodDecl 0x55a774968d68 <line:178:5, col:28> col:21 data 'const int *() const' inline
|-CXXMethodDecl 0x55a774968ee8 <line:180:5, col:48> col:17 push_back 'void (Vector<int>::value_argument_type)' inline
| `-ParmVarDecl 0x55a774968e28 <col:27, col:47> col:47 v 'Vector<int>::value_argument_type':'int'
|-FunctionTemplateDecl 0x55a7749696a8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55a774968fa0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<int>':'fast_argument<int, false>'
| `-CXXMethodDecl 0x55a774969608 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (int &&)' inline
|   `-ParmVarDecl 0x55a774969508 <col:58, col:62> col:62 v 'int &&'
|-CXXMethodDecl 0x55a774969788 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55a7749698d8 <line:186:5, col:49> col:17 push_front 'void (Vector<int>::value_argument_type)' inline
| `-ParmVarDecl 0x55a774969848 <col:28, col:48> col:48 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x55a774969990 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55a774969bd8 <line:189:5, col:62> col:21 insert 'Vector<int>::iterator (Vector<int>::iterator, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x55a774969a50 <col:28, col:37> col:37 it 'Vector<int>::iterator':'int *'
| `-ParmVarDecl 0x55a774969ac8 <col:41, col:61> col:61 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x55a774969d98 <line:190:5, col:38> col:21 erase 'Vector<int>::iterator (Vector<int>::iterator)' inline
| `-ParmVarDecl 0x55a774969ca8 <col:27, col:36> col:36 it 'Vector<int>::iterator':'int *'
|-CXXMethodDecl 0x55a77496a878 <line:191:5, col:49> col:21 erase 'Vector<int>::iterator (Vector<int>::iterator, Vector<int>::iterator)' inline
| |-ParmVarDecl 0x55a77496a6f0 <col:27, col:36> col:36 a 'Vector<int>::iterator':'int *'
| `-ParmVarDecl 0x55a77496a768 <col:39, col:48> col:48 b 'Vector<int>::iterator':'int *'
|-CXXMethodDecl 0x55a77496a938 <line:193:5, col:23> col:17 used clear 'void ()' inline
|-CXXMethodDecl 0x55a77496ab98 <line:195:5, col:34> col:17 swap 'void (Vector<int> &)' inline
| `-ParmVarDecl 0x55a77496aaa0 <col:22, col:33> col:33 x 'Vector<int> &'
`-CXXDestructorDecl 0x55a77496ac68 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void () noexcept' inline default

Layout: <CGRecordLayout
  LLVMType:%class.Vector.9 = type { %class.vector_memory.10 }
  NonVirtualBaseLLVMType:%class.Vector.9 = type { %class.vector_memory.10 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct Args::Slot
         0 |   (Slot vtable pointer)
         8 |   struct Args::Slot * _next
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55a7749518c8 prev 0x55a774936918 <../dummy_inc/click/args.hh:826:5, line:833:5> line:826:12 referenced struct Slot definition
|-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55a7749519c0 <col:5, col:12> col:12 implicit referenced struct Slot
|-CXXConstructorDecl 0x55a774951ab0 <line:827:9, line:828:9> line:827:9 used Slot 'void ()'
| `-CompoundStmt 0x55a77497b6f0 <col:16, line:828:9>
|-CXXDestructorDecl 0x55a774951ba0 <line:829:9, line:830:9> line:829:17 used ~Slot 'void () noexcept' virtual
| `-CompoundStmt 0x55a77497b700 <col:25, line:830:9>
|-CXXMethodDecl 0x55a774951ca0 <line:831:9, col:32> col:22 store 'void ()' virtual pure
|-FieldDecl 0x55a774951d50 <line:832:9, col:15> col:15 _next 'Args::Slot *'
|-CXXMethodDecl 0x55a774951df8 <line:826:12> col:12 implicit operator= 'Args::Slot &(const Args::Slot &)' inline default noexcept-unevaluated 0x55a774951df8
| `-ParmVarDecl 0x55a774951f08 <col:12> col:12 'const Args::Slot &'
`-CXXConstructorDecl 0x55a7749526c8 <col:12> col:12 implicit constexpr Slot 'void (const Args::Slot &)' inline default noexcept-unevaluated 0x55a7749526c8
  `-ParmVarDecl 0x55a7749527d8 <col:12> col:12 'const Args::Slot &'

Layout: <CGRecordLayout
  LLVMType:%"struct.Args::Slot" = type { i32 (...)**, %"struct.Args::Slot"* }
  NonVirtualBaseLLVMType:%"struct.Args::Slot" = type { i32 (...)**, %"struct.Args::Slot"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55a774936728 <../dummy_inc/click/args.hh:247:1, line:898:1> line:247:7 referenced class Args definition
|-DefinitionData has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared
|-public 'ArgContext'
|-CXXRecordDecl 0x55a774936888 <col:1, col:7> col:7 implicit referenced class Args
|-CXXRecordDecl 0x55a774936918 <line:248:5, col:12> col:12 struct Slot
|-AccessSpecDecl 0x55a7749369d0 <line:250:3, col:9> col:3 public
|-CXXConstructorDecl 0x55a774936ad8 <line:254:5, col:32> col:5 Args 'void (ErrorHandler *)'
| `-ParmVarDecl 0x55a774936a08 <col:10, col:31> col:24 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x55a77496c228 <col:31> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x55a77496c208 <col:31> 'int' 0
|-CXXConstructorDecl 0x55a774936df8 <line:259:5, col:60> col:5 Args 'void (const Vector<String> &, ErrorHandler *)'
| |-ParmVarDecl 0x55a774936c70 <col:10, col:32> col:32 conf 'const Vector<String> &'
| `-ParmVarDecl 0x55a774936ce8 <col:38, col:59> col:52 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x55a77496c260 <col:59> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x55a77496c240 <col:59> 'int' 0
|-CXXConstructorDecl 0x55a774936fd0 <line:265:5, col:56> col:5 Args 'void (const Element *, ErrorHandler *)'
| |-ParmVarDecl 0x55a774936ec0 <col:10, col:25> col:25 context 'const Element *'
| `-ParmVarDecl 0x55a774936f38 <col:34, col:55> col:48 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x55a77496c298 <col:55> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x55a77496c278 <col:55> 'int' 0
|-CXXConstructorDecl 0x55a774937388 <line:271:5, line:272:32> line:271:5 used Args 'void (const Vector<String> &, const Element *, ErrorHandler *)'
| |-ParmVarDecl 0x55a774937170 <col:10, col:32> col:32 conf 'const Vector<String> &'
| |-ParmVarDecl 0x55a7749371e8 <col:38, col:53> col:53 context 'const Element *'
| `-ParmVarDecl 0x55a774937260 <line:272:10, col:31> col:24 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x55a77496c2d0 <col:31> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x55a77496c2b0 <col:31> 'int' 0
|-CXXConstructorDecl 0x55a774937548 <line:279:5, col:23> col:5 Args 'void (const Args &)'
| `-ParmVarDecl 0x55a774937488 <col:10, col:22> col:22 x 'const Args &'
|-CXXDestructorDecl 0x55a774937640 <line:281:5, col:11> col:5 used ~Args 'void () noexcept'
|-CXXMethodDecl 0x55a774937828 <line:285:5, col:34> col:11 operator= 'Args &(const Args &)'
| `-ParmVarDecl 0x55a774937730 <col:21, col:33> col:33 x 'const Args &'
|-CXXMethodDecl 0x55a774937918 <line:289:5, line:291:5> line:289:10 empty 'bool () const'
| `-CompoundStmt 0x55a77496c680 <col:24, line:291:5>
|   `-ReturnStmt 0x55a77496c670 <line:290:9, col:79>
|     `-BinaryOperator 0x55a77496c650 <col:16, col:79> 'bool' '&&'
|       |-BinaryOperator 0x55a77496c528 <col:16, col:47> 'bool' '&&'
|       | |-ParenExpr 0x55a77496c480 <col:16, col:41> 'bool'
|       | | `-BinaryOperator 0x55a77496c460 <col:17, col:40> 'bool' '||'
|       | |   |-UnaryOperator 0x55a77496c358 <col:17, col:18> 'bool' prefix '!' cannot overflow
|       | |   | `-ImplicitCastExpr 0x55a77496c340 <col:18> 'bool' <PointerToBoolean>
|       | |   |   `-ImplicitCastExpr 0x55a77496c328 <col:18> 'Vector<String> *' <LValueToRValue>
|       | |   |     `-MemberExpr 0x55a77496c2f8 <col:18> 'Vector<String> *const' lvalue ->_conf 0x55a7749536f0
|       | |   |       `-CXXThisExpr 0x55a77496c2e8 <col:18> 'const Args *' implicit this
|       | |   `-UnaryOperator 0x55a77496c448 <col:27, col:40> 'bool' prefix '!' cannot overflow
|       | |     `-ImplicitCastExpr 0x55a77496c430 <col:28, col:40> 'bool' <IntegralToBoolean>
|       | |       `-CXXMemberCallExpr 0x55a77496c3f8 <col:28, col:40> 'Vector::size_type':'int'
|       | |         `-MemberExpr 0x55a77496c3c8 <col:28, col:35> '<bound member function type>' ->size 0x55a77491e758
|       | |           `-ImplicitCastExpr 0x55a77496c418 <col:28> 'const Vector<String> *' <NoOp>
|       | |             `-ImplicitCastExpr 0x55a77496c3b0 <col:28> 'Vector<String> *' <LValueToRValue>
|       | |               `-MemberExpr 0x55a77496c380 <col:28> 'Vector<String> *const' lvalue ->_conf 0x55a7749536f0
|       | |                 `-CXXThisExpr 0x55a77496c370 <col:28> 'const Args *' implicit this
|       | `-UnaryOperator 0x55a77496c510 <col:46, col:47> 'bool' prefix '!' cannot overflow
|       |   `-ImplicitCastExpr 0x55a77496c4f8 <col:47> 'bool' <PointerToBoolean>
|       |     `-ImplicitCastExpr 0x55a77496c4e0 <col:47> 'Args::Slot *' <LValueToRValue>
|       |       `-MemberExpr 0x55a77496c4b0 <col:47> 'Args::Slot *const' lvalue ->_slots 0x55a77496adb0
|       |         `-CXXThisExpr 0x55a77496c4a0 <col:47> 'const Args *' implicit this
|       `-BinaryOperator 0x55a77496c630 <col:57, col:79> 'bool' '=='
|         |-ImplicitCastExpr 0x55a77496c618 <col:57, col:74> 'int' <IntegralCast>
|         | `-ImplicitCastExpr 0x55a77496c600 <col:57, col:74> 'uint8_t':'unsigned char' <LValueToRValue>
|         |   `-ArraySubscriptExpr 0x55a77496c5c0 <col:57, col:74> 'const uint8_t':'const unsigned char' lvalue
|         |     |-ImplicitCastExpr 0x55a77496c5a8 <col:57> 'const uint8_t *' <ArrayToPointerDecay>
|         |     | `-MemberExpr 0x55a77496c558 <col:57> 'uint8_t const[48]' lvalue ->_simple_slotbuf 0x55a77496ae60
|         |     |   `-CXXThisExpr 0x55a77496c548 <col:57> 'const Args *' implicit this
|         |     `-IntegerLiteral 0x55a77496c588 <col:73> 'int' 0
|         `-IntegerLiteral 0x55a77496c5e0 <col:79> 'int' 0
|-CXXMethodDecl 0x55a7749379d8 <line:294:5, line:296:5> line:294:10 results_empty 'bool () const'
| `-CompoundStmt 0x55a77496c858 <col:32, line:296:5>
|   `-ReturnStmt 0x55a77496c848 <line:295:9, col:49>
|     `-BinaryOperator 0x55a77496c828 <col:16, col:49> 'bool' '&&'
|       |-UnaryOperator 0x55a77496c708 <col:16, col:17> 'bool' prefix '!' cannot overflow
|       | `-ImplicitCastExpr 0x55a77496c6f0 <col:17> 'bool' <PointerToBoolean>
|       |   `-ImplicitCastExpr 0x55a77496c6d8 <col:17> 'Args::Slot *' <LValueToRValue>
|       |     `-MemberExpr 0x55a77496c6a8 <col:17> 'Args::Slot *const' lvalue ->_slots 0x55a77496adb0
|       |       `-CXXThisExpr 0x55a77496c698 <col:17> 'const Args *' implicit this
|       `-BinaryOperator 0x55a77496c808 <col:27, col:49> 'bool' '=='
|         |-ImplicitCastExpr 0x55a77496c7f0 <col:27, col:44> 'int' <IntegralCast>
|         | `-ImplicitCastExpr 0x55a77496c7d8 <col:27, col:44> 'uint8_t':'unsigned char' <LValueToRValue>
|         |   `-ArraySubscriptExpr 0x55a77496c798 <col:27, col:44> 'const uint8_t':'const unsigned char' lvalue
|         |     |-ImplicitCastExpr 0x55a77496c780 <col:27> 'const uint8_t *' <ArrayToPointerDecay>
|         |     | `-MemberExpr 0x55a77496c730 <col:27> 'uint8_t const[48]' lvalue ->_simple_slotbuf 0x55a77496ae60
|         |     |   `-CXXThisExpr 0x55a77496c720 <col:27> 'const Args *' implicit this
|         |     `-IntegerLiteral 0x55a77496c760 <col:43> 'int' 0
|         `-IntegerLiteral 0x55a77496c7b8 <col:49> 'int' 0
|-CXXMethodDecl 0x55a774937ac8 <line:301:5, line:306:5> line:301:11 clear 'Args &()'
| `-CompoundStmt 0x55a77496ca68 <col:19, line:306:5>
|   |-IfStmt 0x55a77496c988 <line:302:9, line:303:26>
|   | |-ImplicitCastExpr 0x55a77496c8c8 <line:302:13> 'bool' <PointerToBoolean>
|   | | `-ImplicitCastExpr 0x55a77496c8b0 <col:13> 'Vector<String> *' <LValueToRValue>
|   | |   `-MemberExpr 0x55a77496c880 <col:13> 'Vector<String> *' lvalue ->_conf 0x55a7749536f0
|   | |     `-CXXThisExpr 0x55a77496c870 <col:13> 'Args *' implicit this
|   | `-CXXMemberCallExpr 0x55a77496c968 <line:303:13, col:26> 'void'
|   |   `-MemberExpr 0x55a77496c938 <col:13, col:20> '<bound member function type>' ->clear 0x55a774921968
|   |     `-ImplicitCastExpr 0x55a77496c920 <col:13> 'Vector<String> *' <LValueToRValue>
|   |       `-MemberExpr 0x55a77496c8f0 <col:13> 'Vector<String> *' lvalue ->_conf 0x55a7749536f0
|   |         `-CXXThisExpr 0x55a77496c8e0 <col:13> 'Args *' implicit this
|   |-CXXMemberCallExpr 0x55a77496ca10 <line:304:9, col:22> 'void'
|   | `-MemberExpr 0x55a77496c9e0 <col:9, col:16> '<bound member function type>' .clear 0x55a77496a938
|   |   `-MemberExpr 0x55a77496c9b0 <col:9> 'Vector<int>':'Vector<int>' lvalue ->_kwpos 0x55a77496ad50
|   |     `-CXXThisExpr 0x55a77496c9a0 <col:9> 'Args *' implicit this
|   `-ReturnStmt 0x55a77496ca58 <line:305:9, col:17>
|     `-UnaryOperator 0x55a77496ca40 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55a77496ca30 <col:17> 'Args *' this
|-CXXMethodDecl 0x55a774937d48 <line:313:5, col:36> col:11 bind 'Args &(Vector<String> &)'
| `-ParmVarDecl 0x55a774937c50 <col:16, col:32> col:32 conf 'Vector<String> &'
|-CXXMethodDecl 0x55a774937ec8 <line:317:5, col:38> col:11 push_back 'Args &(const String &)'
| `-ParmVarDecl 0x55a774937e00 <col:21, col:35> col:35 arg 'const String &'
|-FunctionTemplateDecl 0x55a774938248 <line:321:5, line:327:5> line:321:35 push_back
| |-TemplateTypeParmDecl 0x55a774937f70 <col:14, col:23> col:23 referenced typename depth 0 index 0 Iter
| `-CXXMethodDecl 0x55a7749381a8 <col:29, line:327:5> line:321:35 push_back 'Args &(Iter, Iter)'
|   |-ParmVarDecl 0x55a774938018 <col:45, col:50> col:50 referenced begin 'Iter'
|   |-ParmVarDecl 0x55a774938090 <col:57, col:62> col:62 referenced end 'Iter'
|   `-CompoundStmt 0x55a77496cd90 <col:67, line:327:5>
|     |-WhileStmt 0x55a77496cd40 <line:322:9, line:325:9>
|     | |-CXXOperatorCallExpr 0x55a77496cb58 <line:322:16, col:25> '<dependent type>'
|     | | |-UnresolvedLookupExpr 0x55a77496cad0 <col:22> '<overloaded function type>' lvalue (ADL) = 'operator!=' 0x55a7748dd320 0x55a774798798 0x55a7745e1d78 0x55a7745e1a50 0x55a7745d3230 0x55a7745d2ee0 0x55a7745d27d0 0x55a7745a5140 0x55a774531600
|     | | |-DeclRefExpr 0x55a77496ca90 <col:16> 'Iter' lvalue ParmVar 0x55a774938018 'begin' 'Iter'
|     | | `-DeclRefExpr 0x55a77496cab0 <col:25> 'Iter' lvalue ParmVar 0x55a774938090 'end' 'Iter'
|     | `-CompoundStmt 0x55a77496cd20 <col:30, line:325:9>
|     |   |-CallExpr 0x55a77496ccc0 <line:323:13, col:29> '<dependent type>'
|     |   | |-UnresolvedMemberExpr 0x55a77496cba0 <col:13> '<bound member function type>' lvalue
|     |   | `-CXXOperatorCallExpr 0x55a77496cc90 <col:23, col:24> '<dependent type>'
|     |   |   |-UnresolvedLookupExpr 0x55a77496cc20 <col:23> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55a77479d918 0x55a77479d538 0x55a77479d168 0x55a77479cd88 0x55a77479c9a8 0x55a77479c5d8
|     |   |   `-DeclRefExpr 0x55a77496cc00 <col:24> 'Iter' lvalue ParmVar 0x55a774938018 'begin' 'Iter'
|     |   `-UnaryOperator 0x55a77496cd08 <line:324:13, col:15> '<dependent type>' prefix '++' cannot overflow
|     |     `-DeclRefExpr 0x55a77496cce8 <col:15> 'Iter' lvalue ParmVar 0x55a774938018 'begin' 'Iter'
|     `-ReturnStmt 0x55a77496cd80 <line:326:9, col:17>
|       `-UnaryOperator 0x55a77496cd68 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55a77496cd58 <col:17> 'Args *' this
|-CXXMethodDecl 0x55a774938350 <line:331:5, col:44> col:11 push_back_words 'Args &(const String &)'
| `-ParmVarDecl 0x55a7749382c0 <col:27, col:41> col:41 str 'const String &'
|-CXXMethodDecl 0x55a774938498 <line:335:5, col:43> col:11 push_back_args 'Args &(const String &)'
| `-ParmVarDecl 0x55a774938408 <col:26, col:40> col:40 str 'const String &'
|-CXXMethodDecl 0x55a774938560 <line:350:5, line:353:5> line:350:11 reset 'Args &()'
| `-CompoundStmt 0x55a77496ce70 <col:19, line:353:5>
|   |-CXXMemberCallExpr 0x55a77496ce10 <line:351:9, col:21> 'void'
|   | |-MemberExpr 0x55a77496cdc0 <col:9> '<bound member function type>' ->reset_from 0x55a77496b1d8
|   | | `-CXXThisExpr 0x55a77496cdb0 <col:9> 'Args *' implicit this
|   | `-IntegerLiteral 0x55a77496cdf0 <col:20> 'int' 0
|   `-ReturnStmt 0x55a77496ce60 <line:352:9, col:17>
|     `-UnaryOperator 0x55a77496ce48 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55a77496ce38 <col:17> 'Args *' this
|-VarDecl 0x55a774938618 <line:356:5, col:38> col:26 referenced mandatory 'const int' static constexpr cinit
| `-IntegerLiteral 0x55a774938680 <col:38> 'int' 1
|-VarDecl 0x55a774938710 <line:357:5, col:39> col:26 referenced positional 'const int' static constexpr cinit
| `-IntegerLiteral 0x55a774938778 <col:39> 'int' 2
|-VarDecl 0x55a774938808 <line:358:5, col:39> col:26 deprecated 'const int' static constexpr cinit
| `-IntegerLiteral 0x55a774938870 <col:39> 'int' 4
|-VarDecl 0x55a774938900 <line:359:5, col:39> col:26 referenced firstmatch 'const int' static constexpr cinit
| `-IntegerLiteral 0x55a774938968 <col:39> 'int' 8
|-FunctionTemplateDecl 0x55a774938ce8 <line:368:5, line:371:5> line:369:11 read
| |-TemplateTypeParmDecl 0x55a7749389e0 <line:368:15, col:24> col:24 referenced typename depth 0 index 0 T
| |-CXXMethodDecl 0x55a774938c48 <line:369:5, line:371:5> line:369:11 read 'Args &(const char *, T &)'
| | |-ParmVarDecl 0x55a774938a90 <col:16, col:28> col:28 referenced keyword 'const char *'
| | |-ParmVarDecl 0x55a774938b38 <col:37, col:40> col:40 referenced x 'T &'
| | `-CompoundStmt 0x55a77496cfc8 <col:43, line:371:5>
| |   `-ReturnStmt 0x55a77496cfb8 <line:370:9, col:34>
| |     `-CallExpr 0x55a77496cf80 <col:16, col:34> '<dependent type>'
| |       |-UnresolvedMemberExpr 0x55a77496cea0 <col:16> '<bound member function type>' lvalue
| |       |-DeclRefExpr 0x55a77496cf20 <col:21> 'const char *' lvalue ParmVar 0x55a774938a90 'keyword' 'const char *'
| |       |-IntegerLiteral 0x55a77496cf40 <col:30> 'int' 0
| |       `-DeclRefExpr 0x55a77496cf60 <col:33> 'T' lvalue ParmVar 0x55a774938b38 'x' 'T &'
| `-CXXMethodDecl 0x55a7749ef898 <line:369:5, line:371:5> line:369:11 used read 'Args &(const char *, unsigned int &)'
|   |-TemplateArgument type 'unsigned int'
|   |-ParmVarDecl 0x55a7749ef6f0 <col:16, col:28> col:28 keyword 'const char *'
|   `-ParmVarDecl 0x55a7749ef7c8 <col:37, col:40> col:40 x 'unsigned int &'
|-FunctionTemplateDecl 0x55a774939018 <line:372:5, line:375:5> line:373:11 read_m
| |-TemplateTypeParmDecl 0x55a774938d50 <line:372:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x55a774938f78 <line:373:5, line:375:5> line:373:11 read_m 'Args &(const char *, T &)'
|   |-ParmVarDecl 0x55a774938e00 <col:18, col:30> col:30 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55a774938ea8 <col:39, col:42> col:42 referenced x 'T &'
|   `-CompoundStmt 0x55a77496d118 <col:45, line:375:5>
|     `-ReturnStmt 0x55a77496d108 <line:374:9, col:42>
|       `-CallExpr 0x55a77496d0d0 <col:16, col:42> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55a77496cff0 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55a77496d070 <col:21> 'const char *' lvalue ParmVar 0x55a774938e00 'keyword' 'const char *'
|         |-DeclRefExpr 0x55a77496d090 <col:30> 'const int' lvalue Var 0x55a774938618 'mandatory' 'const int'
|         `-DeclRefExpr 0x55a77496d0b0 <col:41> 'T' lvalue ParmVar 0x55a774938ea8 'x' 'T &'
|-FunctionTemplateDecl 0x55a774939348 <line:376:5, line:379:5> line:377:11 read_p
| |-TemplateTypeParmDecl 0x55a774939080 <line:376:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x55a7749392a8 <line:377:5, line:379:5> line:377:11 read_p 'Args &(const char *, T &)'
|   |-ParmVarDecl 0x55a774939130 <col:18, col:30> col:30 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55a7749391d8 <col:39, col:42> col:42 referenced x 'T &'
|   `-CompoundStmt 0x55a77496d268 <col:45, line:379:5>
|     `-ReturnStmt 0x55a77496d258 <line:378:9, col:43>
|       `-CallExpr 0x55a77496d220 <col:16, col:43> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55a77496d140 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55a77496d1c0 <col:21> 'const char *' lvalue ParmVar 0x55a774939130 'keyword' 'const char *'
|         |-DeclRefExpr 0x55a77496d1e0 <col:30> 'const int' lvalue Var 0x55a774938710 'positional' 'const int'
|         `-DeclRefExpr 0x55a77496d200 <col:42> 'T' lvalue ParmVar 0x55a7749391d8 'x' 'T &'
|-FunctionTemplateDecl 0x55a774939678 <line:380:5, line:383:5> line:381:11 read_mp
| |-TemplateTypeParmDecl 0x55a7749393b0 <line:380:15, col:24> col:24 referenced typename depth 0 index 0 T
| |-CXXMethodDecl 0x55a7749395d8 <line:381:5, line:383:5> line:381:11 read_mp 'Args &(const char *, T &)'
| | |-ParmVarDecl 0x55a774939460 <col:19, col:31> col:31 referenced keyword 'const char *'
| | |-ParmVarDecl 0x55a774939508 <col:40, col:43> col:43 referenced x 'T &'
| | `-CompoundStmt 0x55a77496d468 <col:46, line:383:5>
| |   `-ReturnStmt 0x55a77496d458 <line:382:9, col:55>
| |     `-CallExpr 0x55a77496d420 <col:16, col:55> '<dependent type>'
| |       |-UnresolvedMemberExpr 0x55a77496d290 <col:16> '<bound member function type>' lvalue
| |       |-DeclRefExpr 0x55a77496d310 <col:21> 'const char *' lvalue ParmVar 0x55a774939460 'keyword' 'const char *'
| |       |-BinaryOperator 0x55a77496d3e0 <col:30, col:42> 'int' '|'
| |       | |-ImplicitCastExpr 0x55a77496d390 <col:30> 'int' <LValueToRValue>
| |       | | `-DeclRefExpr 0x55a77496d370 <col:30> 'const int' lvalue Var 0x55a774938618 'mandatory' 'const int' non_odr_use_constant
| |       | `-ImplicitCastExpr 0x55a77496d3c8 <col:42> 'int' <LValueToRValue>
| |       |   `-DeclRefExpr 0x55a77496d3a8 <col:42> 'const int' lvalue Var 0x55a774938710 'positional' 'const int' non_odr_use_constant
| |       `-DeclRefExpr 0x55a77496d400 <col:54> 'T' lvalue ParmVar 0x55a774939508 'x' 'T &'
| `-CXXMethodDecl 0x55a7749ee4a8 <line:381:5, line:383:5> line:381:11 used read_mp 'Args &(const char *, unsigned int &)'
|   |-TemplateArgument type 'unsigned int'
|   |-ParmVarDecl 0x55a7749ee2c8 <col:19, col:31> col:31 keyword 'const char *'
|   `-ParmVarDecl 0x55a7749ee398 <col:40, col:43> col:43 x 'unsigned int &'
|-FunctionTemplateDecl 0x55a774939a78 <line:384:5, line:388:5> line:385:11 read
| |-TemplateTypeParmDecl 0x55a7749396e0 <line:384:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x55a7749399d8 <line:385:5, line:388:5> line:385:11 read 'Args &(const char *, int, T &)'
|   |-ParmVarDecl 0x55a774939790 <col:16, col:28> col:28 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55a774939810 <col:37, col:41> col:41 referenced flags 'int'
|   |-ParmVarDecl 0x55a7749398b8 <col:48, col:51> col:51 referenced x 'T &'
|   `-CompoundStmt 0x55a77496d5a8 <col:54, line:388:5>
|     |-CallExpr 0x55a77496d530 <line:386:9, col:47> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x55a77496d480 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read' empty
|     | |-CXXThisExpr 0x55a77496d4c0 <col:24> 'Args *' this
|     | |-DeclRefExpr 0x55a77496d4d0 <col:30> 'const char *' lvalue ParmVar 0x55a774939790 'keyword' 'const char *'
|     | |-DeclRefExpr 0x55a77496d4f0 <col:39> 'int' lvalue ParmVar 0x55a774939810 'flags' 'int'
|     | `-DeclRefExpr 0x55a77496d510 <col:46> 'T' lvalue ParmVar 0x55a7749398b8 'x' 'T &'
|     `-ReturnStmt 0x55a77496d598 <line:387:9, col:17>
|       `-UnaryOperator 0x55a77496d580 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55a77496d570 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55a774939f28 <line:400:5, line:403:5> line:401:11 read_or_set
| |-TemplateTypeParmDecl 0x55a774939ae8 <line:400:15, col:24> col:24 referenced typename depth 0 index 0 T
| |-TemplateTypeParmDecl 0x55a774939b68 <col:27, col:36> col:36 referenced typename depth 0 index 1 V
| `-CXXMethodDecl 0x55a774939e88 <line:401:5, line:403:5> line:401:11 read_or_set 'Args &(const char *, T &, const V &)'
|   |-ParmVarDecl 0x55a774939c28 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55a774939cc8 <col:44, col:47> col:47 referenced x 'T &'
|   |-ParmVarDecl 0x55a774939d68 <col:50, col:59> col:59 referenced default_value 'const V &'
|   `-CompoundStmt 0x55a77496d718 <col:74, line:403:5>
|     `-ReturnStmt 0x55a77496d708 <line:402:9, col:56>
|       `-CallExpr 0x55a77496d6c8 <col:16, col:56> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55a77496d5d8 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55a77496d648 <col:28> 'const char *' lvalue ParmVar 0x55a774939c28 'keyword' 'const char *'
|         |-IntegerLiteral 0x55a77496d668 <col:37> 'int' 0
|         |-DeclRefExpr 0x55a77496d688 <col:40> 'T' lvalue ParmVar 0x55a774939cc8 'x' 'T &'
|         `-DeclRefExpr 0x55a77496d6a8 <col:43> 'const V' lvalue ParmVar 0x55a774939d68 'default_value' 'const V &'
|-FunctionTemplateDecl 0x55a77493a398 <line:404:5, line:407:5> line:405:11 read_or_set_p
| |-TemplateTypeParmDecl 0x55a774939f98 <line:404:15, col:24> col:24 referenced typename depth 0 index 0 T
| |-TemplateTypeParmDecl 0x55a77493a018 <col:27, col:36> col:36 referenced typename depth 0 index 1 V
| `-CXXMethodDecl 0x55a77493a2f8 <line:405:5, line:407:5> line:405:11 read_or_set_p 'Args &(const char *, T &, const V &)'
|   |-ParmVarDecl 0x55a77493a0d8 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55a77493a178 <col:46, col:49> col:49 referenced x 'T &'
|   |-ParmVarDecl 0x55a77493a218 <col:52, col:61> col:61 referenced default_value 'const V &'
|   `-CompoundStmt 0x55a77496d880 <col:76, line:407:5>
|     `-ReturnStmt 0x55a77496d870 <line:406:9, col:65>
|       `-CallExpr 0x55a77496d830 <col:16, col:65> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55a77496d740 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55a77496d7b0 <col:28> 'const char *' lvalue ParmVar 0x55a77493a0d8 'keyword' 'const char *'
|         |-DeclRefExpr 0x55a77496d7d0 <col:37> 'const int' lvalue Var 0x55a774938710 'positional' 'const int'
|         |-DeclRefExpr 0x55a77496d7f0 <col:49> 'T' lvalue ParmVar 0x55a77493a178 'x' 'T &'
|         `-DeclRefExpr 0x55a77496d810 <col:52> 'const V' lvalue ParmVar 0x55a77493a218 'default_value' 'const V &'
|-FunctionTemplateDecl 0x55a77493a8e8 <line:408:5, line:412:5> line:409:11 read_or_set
| |-TemplateTypeParmDecl 0x55a77493a408 <line:408:15, col:24> col:24 referenced typename depth 0 index 0 T
| |-TemplateTypeParmDecl 0x55a77493a488 <col:27, col:36> col:36 referenced typename depth 0 index 1 V
| `-CXXMethodDecl 0x55a77493a848 <line:409:5, line:412:5> line:409:11 read_or_set 'Args &(const char *, int, T &, const V &)'
|   |-ParmVarDecl 0x55a77493a548 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55a77493a5c8 <col:44, col:48> col:48 referenced flags 'int'
|   |-ParmVarDecl 0x55a77493a668 <col:55, col:58> col:58 referenced x 'T &'
|   |-ParmVarDecl 0x55a77493a708 <col:61, col:70> col:70 referenced default_value 'const V &'
|   `-CompoundStmt 0x55a77496d9e8 <col:85, line:412:5>
|     |-CallExpr 0x55a77496d968 <line:410:9, col:69> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x55a77496d898 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read_or_set' empty
|     | |-CXXThisExpr 0x55a77496d8d8 <col:31> 'Args *' this
|     | |-DeclRefExpr 0x55a77496d8e8 <col:37> 'const char *' lvalue ParmVar 0x55a77493a548 'keyword' 'const char *'
|     | |-DeclRefExpr 0x55a77496d908 <col:46> 'int' lvalue ParmVar 0x55a77493a5c8 'flags' 'int'
|     | |-DeclRefExpr 0x55a77496d928 <col:53> 'T' lvalue ParmVar 0x55a77493a668 'x' 'T &'
|     | `-DeclRefExpr 0x55a77496d948 <col:56> 'const V' lvalue ParmVar 0x55a77493a708 'default_value' 'const V &'
|     `-ReturnStmt 0x55a77496d9d8 <line:411:9, col:17>
|       `-UnaryOperator 0x55a77496d9c0 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55a77496d9b0 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55a77493ad78 <line:422:5, line:425:5> line:423:11 read
| |-TemplateTypeParmDecl 0x55a77493a960 <line:422:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55a77493a9d8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| |-CXXMethodDecl 0x55a77493acd8 <line:423:5, line:425:5> line:423:11 read 'Args &(const char *, P, T &)'
| | |-ParmVarDecl 0x55a77493aa98 <col:16, col:28> col:28 referenced keyword 'const char *'
| | |-ParmVarDecl 0x55a77493ab10 <col:37, col:39> col:39 referenced parser 'P'
| | |-ParmVarDecl 0x55a77493abb8 <col:47, col:50> col:50 referenced x 'T &'
| | `-CompoundStmt 0x55a77496db68 <col:53, line:425:5>
| |   `-ReturnStmt 0x55a77496db58 <line:424:9, col:42>
| |     `-CallExpr 0x55a77496db18 <col:16, col:42> '<dependent type>'
| |       |-UnresolvedMemberExpr 0x55a77496da18 <col:16> '<bound member function type>' lvalue
| |       |-DeclRefExpr 0x55a77496da98 <col:21> 'const char *' lvalue ParmVar 0x55a77493aa98 'keyword' 'const char *'
| |       |-IntegerLiteral 0x55a77496dab8 <col:30> 'int' 0
| |       |-DeclRefExpr 0x55a77496dad8 <col:33> 'P' lvalue ParmVar 0x55a77493ab10 'parser' 'P'
| |       `-DeclRefExpr 0x55a77496daf8 <col:41> 'T' lvalue ParmVar 0x55a77493abb8 'x' 'T &'
| `-CXXMethodDecl 0x55a7749eefa8 <line:423:5, line:425:5> line:423:11 used read 'Args &(const char *, SecondsArg, unsigned int &)'
|   |-TemplateArgument type 'SecondsArg'
|   |-TemplateArgument type 'unsigned int'
|   |-ParmVarDecl 0x55a7749eed18 <col:16, col:28> col:28 keyword 'const char *'
|   |-ParmVarDecl 0x55a7749eedb8 <col:37, col:39> col:39 parser 'SecondsArg':'SecondsArg'
|   `-ParmVarDecl 0x55a7749eee88 <col:47, col:50> col:50 x 'unsigned int &'
|-FunctionTemplateDecl 0x55a77493b1c8 <line:426:5, line:429:5> line:427:11 read_m
| |-TemplateTypeParmDecl 0x55a77493ade8 <line:426:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55a77493ae68 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55a77493b128 <line:427:5, line:429:5> line:427:11 read_m 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x55a77493af28 <col:18, col:30> col:30 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55a77493afa0 <col:39, col:41> col:41 referenced parser 'P'
|   |-ParmVarDecl 0x55a77493b048 <col:49, col:52> col:52 referenced x 'T &'
|   `-CompoundStmt 0x55a77496dce0 <col:55, line:429:5>
|     `-ReturnStmt 0x55a77496dcd0 <line:428:9, col:50>
|       `-CallExpr 0x55a77496dc90 <col:16, col:50> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55a77496db90 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55a77496dc10 <col:21> 'const char *' lvalue ParmVar 0x55a77493af28 'keyword' 'const char *'
|         |-DeclRefExpr 0x55a77496dc30 <col:30> 'const int' lvalue Var 0x55a774938618 'mandatory' 'const int'
|         |-DeclRefExpr 0x55a77496dc50 <col:41> 'P' lvalue ParmVar 0x55a77493afa0 'parser' 'P'
|         `-DeclRefExpr 0x55a77496dc70 <col:49> 'T' lvalue ParmVar 0x55a77493b048 'x' 'T &'
|-FunctionTemplateDecl 0x55a77493b618 <line:430:5, line:433:5> line:431:11 read_p
| |-TemplateTypeParmDecl 0x55a77493b238 <line:430:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55a77493b2b8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55a77493b578 <line:431:5, line:433:5> line:431:11 read_p 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x55a77493b378 <col:18, col:30> col:30 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55a77493b3f0 <col:39, col:41> col:41 referenced parser 'P'
|   |-ParmVarDecl 0x55a77493b498 <col:49, col:52> col:52 referenced x 'T &'
|   `-CompoundStmt 0x55a77496de58 <col:55, line:433:5>
|     `-ReturnStmt 0x55a77496de48 <line:432:9, col:51>
|       `-CallExpr 0x55a77496de08 <col:16, col:51> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55a77496dd08 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55a77496dd88 <col:21> 'const char *' lvalue ParmVar 0x55a77493b378 'keyword' 'const char *'
|         |-DeclRefExpr 0x55a77496dda8 <col:30> 'const int' lvalue Var 0x55a774938710 'positional' 'const int'
|         |-DeclRefExpr 0x55a77496ddc8 <col:42> 'P' lvalue ParmVar 0x55a77493b3f0 'parser' 'P'
|         `-DeclRefExpr 0x55a77496dde8 <col:50> 'T' lvalue ParmVar 0x55a77493b498 'x' 'T &'
|-FunctionTemplateDecl 0x55a77493ba68 <line:434:5, line:437:5> line:435:11 read_mp
| |-TemplateTypeParmDecl 0x55a77493b688 <line:434:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55a77493b708 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| |-CXXMethodDecl 0x55a77493b9c8 <line:435:5, line:437:5> line:435:11 read_mp 'Args &(const char *, P, T &)'
| | |-ParmVarDecl 0x55a77493b7c8 <col:19, col:31> col:31 referenced keyword 'const char *'
| | |-ParmVarDecl 0x55a77493b840 <col:40, col:42> col:42 referenced parser 'P'
| | |-ParmVarDecl 0x55a77493b8e8 <col:50, col:53> col:53 referenced x 'T &'
| | `-CompoundStmt 0x55a77496e080 <col:56, line:437:5>
| |   `-ReturnStmt 0x55a77496e070 <line:436:9, col:63>
| |     `-CallExpr 0x55a77496e030 <col:16, col:63> '<dependent type>'
| |       |-UnresolvedMemberExpr 0x55a77496de80 <col:16> '<bound member function type>' lvalue
| |       |-DeclRefExpr 0x55a77496df00 <col:21> 'const char *' lvalue ParmVar 0x55a77493b7c8 'keyword' 'const char *'
| |       |-BinaryOperator 0x55a77496dfd0 <col:30, col:42> 'int' '|'
| |       | |-ImplicitCastExpr 0x55a77496df80 <col:30> 'int' <LValueToRValue>
| |       | | `-DeclRefExpr 0x55a77496df60 <col:30> 'const int' lvalue Var 0x55a774938618 'mandatory' 'const int' non_odr_use_constant
| |       | `-ImplicitCastExpr 0x55a77496dfb8 <col:42> 'int' <LValueToRValue>
| |       |   `-DeclRefExpr 0x55a77496df98 <col:42> 'const int' lvalue Var 0x55a774938710 'positional' 'const int' non_odr_use_constant
| |       |-DeclRefExpr 0x55a77496dff0 <col:54> 'P' lvalue ParmVar 0x55a77493b840 'parser' 'P'
| |       `-DeclRefExpr 0x55a77496e010 <col:62> 'T' lvalue ParmVar 0x55a77493b8e8 'x' 'T &'
| `-CXXMethodDecl 0x55a7749edcd8 <line:435:5, line:437:5> line:435:11 used read_mp 'Args &(const char *, BandwidthArg, unsigned int &)'
|   |-TemplateArgument type 'BandwidthArg'
|   |-TemplateArgument type 'unsigned int'
|   |-ParmVarDecl 0x55a7749eda48 <col:19, col:31> col:31 keyword 'const char *'
|   |-ParmVarDecl 0x55a7749edae8 <col:40, col:42> col:42 parser 'BandwidthArg':'BandwidthArg'
|   `-ParmVarDecl 0x55a7749edbb8 <col:50, col:53> col:53 x 'unsigned int &'
|-FunctionTemplateDecl 0x55a77493bf98 <line:438:5, line:442:5> line:439:11 read
| |-TemplateTypeParmDecl 0x55a77493bad8 <line:438:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55a77493bb58 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55a77493bef8 <line:439:5, line:442:5> line:439:11 read 'Args &(const char *, int, P, T &)'
|   |-ParmVarDecl 0x55a77493bc18 <col:16, col:28> col:28 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55a77493bc98 <col:37, col:41> col:41 referenced flags 'int'
|   |-ParmVarDecl 0x55a77493bd10 <col:48, col:50> col:50 referenced parser 'P'
|   |-ParmVarDecl 0x55a77493bdb8 <col:58, col:61> col:61 referenced x 'T &'
|   `-CompoundStmt 0x55a77496e1e8 <col:64, line:442:5>
|     |-CallExpr 0x55a77496e168 <line:440:9, col:55> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x55a77496e098 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read' empty
|     | |-CXXThisExpr 0x55a77496e0d8 <col:24> 'Args *' this
|     | |-DeclRefExpr 0x55a77496e0e8 <col:30> 'const char *' lvalue ParmVar 0x55a77493bc18 'keyword' 'const char *'
|     | |-DeclRefExpr 0x55a77496e108 <col:39> 'int' lvalue ParmVar 0x55a77493bc98 'flags' 'int'
|     | |-DeclRefExpr 0x55a77496e128 <col:46> 'P' lvalue ParmVar 0x55a77493bd10 'parser' 'P'
|     | `-DeclRefExpr 0x55a77496e148 <col:54> 'T' lvalue ParmVar 0x55a77493bdb8 'x' 'T &'
|     `-ReturnStmt 0x55a77496e1d8 <line:441:9, col:17>
|       `-UnaryOperator 0x55a77496e1c0 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55a77496e1b0 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55a774940938 <line:455:5, line:458:5> line:456:11 read_or_set
| |-TemplateTypeParmDecl 0x55a7749403b0 <line:455:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55a774940428 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| |-TemplateTypeParmDecl 0x55a7749404a8 <col:39, col:48> col:48 referenced typename depth 0 index 2 V
| `-CXXMethodDecl 0x55a774940898 <line:456:5, line:458:5> line:456:11 read_or_set 'Args &(const char *, P, T &, const V &)'
|   |-ParmVarDecl 0x55a774940570 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55a7749405e8 <col:44, col:46> col:46 referenced parser 'P'
|   |-ParmVarDecl 0x55a774940688 <col:54, col:57> col:57 referenced x 'T &'
|   |-ParmVarDecl 0x55a774940758 <col:60, col:69> col:69 referenced default_value 'const V &'
|   `-CompoundStmt 0x55a77496e380 <col:84, line:458:5>
|     `-ReturnStmt 0x55a77496e370 <line:457:9, col:64>
|       `-CallExpr 0x55a77496e328 <col:16, col:64> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55a77496e218 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55a77496e288 <col:28> 'const char *' lvalue ParmVar 0x55a774940570 'keyword' 'const char *'
|         |-IntegerLiteral 0x55a77496e2a8 <col:37> 'int' 0
|         |-DeclRefExpr 0x55a77496e2c8 <col:40> 'P' lvalue ParmVar 0x55a7749405e8 'parser' 'P'
|         |-DeclRefExpr 0x55a77496e2e8 <col:48> 'T' lvalue ParmVar 0x55a774940688 'x' 'T &'
|         `-DeclRefExpr 0x55a77496e308 <col:51> 'const V' lvalue ParmVar 0x55a774940758 'default_value' 'const V &'
|-FunctionTemplateDecl 0x55a774940eb8 <line:459:5, line:462:5> line:460:11 read_or_set_p
| |-TemplateTypeParmDecl 0x55a7749409b0 <line:459:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55a774940a28 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| |-TemplateTypeParmDecl 0x55a774940aa8 <col:39, col:48> col:48 referenced typename depth 0 index 2 V
| `-CXXMethodDecl 0x55a774940e18 <line:460:5, line:462:5> line:460:11 read_or_set_p 'Args &(const char *, P, T &, const V &)'
|   |-ParmVarDecl 0x55a774940b70 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55a774940be8 <col:46, col:48> col:48 referenced parser 'P'
|   |-ParmVarDecl 0x55a774940c88 <col:56, col:59> col:59 referenced x 'T &'
|   |-ParmVarDecl 0x55a774940d28 <col:62, col:71> col:71 referenced default_value 'const V &'
|   `-CompoundStmt 0x55a77496e510 <col:86, line:462:5>
|     `-ReturnStmt 0x55a77496e500 <line:461:9, col:73>
|       `-CallExpr 0x55a77496e4b8 <col:16, col:73> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55a77496e3a8 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55a77496e418 <col:28> 'const char *' lvalue ParmVar 0x55a774940b70 'keyword' 'const char *'
|         |-DeclRefExpr 0x55a77496e438 <col:37> 'const int' lvalue Var 0x55a774938710 'positional' 'const int'
|         |-DeclRefExpr 0x55a77496e458 <col:49> 'P' lvalue ParmVar 0x55a774940be8 'parser' 'P'
|         |-DeclRefExpr 0x55a77496e478 <col:57> 'T' lvalue ParmVar 0x55a774940c88 'x' 'T &'
|         `-DeclRefExpr 0x55a77496e498 <col:60> 'const V' lvalue ParmVar 0x55a774940d28 'default_value' 'const V &'
|-FunctionTemplateDecl 0x55a774941518 <line:463:5, line:467:5> line:464:11 read_or_set
| |-TemplateTypeParmDecl 0x55a774940f30 <line:463:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55a774940fa8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| |-TemplateTypeParmDecl 0x55a774941028 <col:39, col:48> col:48 referenced typename depth 0 index 2 V
| `-CXXMethodDecl 0x55a774941478 <line:464:5, line:467:5> line:464:11 read_or_set 'Args &(const char *, int, P, T &, const V &)'
|   |-ParmVarDecl 0x55a7749410f0 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55a774941170 <col:44, col:48> col:48 referenced flags 'int'
|   |-ParmVarDecl 0x55a7749411e8 <col:55, col:57> col:57 referenced parser 'P'
|   |-ParmVarDecl 0x55a774941288 <col:65, col:68> col:68 referenced x 'T &'
|   |-ParmVarDecl 0x55a774941328 <col:71, col:80> col:80 referenced default_value 'const V &'
|   `-CompoundStmt 0x55a77496e6a0 <col:95, line:467:5>
|     |-CallExpr 0x55a77496e618 <line:465:9, col:77> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x55a77496e528 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read_or_set' empty
|     | |-CXXThisExpr 0x55a77496e568 <col:31> 'Args *' this
|     | |-DeclRefExpr 0x55a77496e578 <col:37> 'const char *' lvalue ParmVar 0x55a7749410f0 'keyword' 'const char *'
|     | |-DeclRefExpr 0x55a77496e598 <col:46> 'int' lvalue ParmVar 0x55a774941170 'flags' 'int'
|     | |-DeclRefExpr 0x55a77496e5b8 <col:53> 'P' lvalue ParmVar 0x55a7749411e8 'parser' 'P'
|     | |-DeclRefExpr 0x55a77496e5d8 <col:61> 'T' lvalue ParmVar 0x55a774941288 'x' 'T &'
|     | `-DeclRefExpr 0x55a77496e5f8 <col:64> 'const V' lvalue ParmVar 0x55a774941328 'default_value' 'const V &'
|     `-ReturnStmt 0x55a77496e690 <line:466:9, col:17>
|       `-UnaryOperator 0x55a77496e678 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55a77496e668 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55a774941af8 <line:478:5, line:481:5> line:479:11 read
| |-TemplateTypeParmDecl 0x55a774941598 <line:478:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55a774941618 <col:26, col:35> col:35 referenced typename depth 0 index 1 T1
| |-TemplateTypeParmDecl 0x55a774941698 <col:39, col:48> col:48 referenced typename depth 0 index 2 T2
| `-CXXMethodDecl 0x55a774941a58 <line:479:5, line:481:5> line:479:11 read 'Args &(const char *, P, T1 &, T2 &)'
|   |-ParmVarDecl 0x55a774941760 <col:16, col:28> col:28 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55a7749417d8 <col:37, col:39> col:39 referenced parser 'P'
|   |-ParmVarDecl 0x55a774941878 <col:47, col:51> col:51 referenced x1 'T1 &'
|   |-ParmVarDecl 0x55a774941918 <col:55, col:59> col:59 referenced x2 'T2 &'
|   `-CompoundStmt 0x55a77496e848 <col:63, line:481:5>
|     `-ReturnStmt 0x55a77496e838 <line:480:9, col:47>
|       `-CallExpr 0x55a77496e7f0 <col:16, col:47> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55a77496e6d0 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55a77496e750 <col:21> 'const char *' lvalue ParmVar 0x55a774941760 'keyword' 'const char *'
|         |-IntegerLiteral 0x55a77496e770 <col:30> 'int' 0
|         |-DeclRefExpr 0x55a77496e790 <col:33> 'P' lvalue ParmVar 0x55a7749417d8 'parser' 'P'
|         |-DeclRefExpr 0x55a77496e7b0 <col:41> 'T1' lvalue ParmVar 0x55a774941878 'x1' 'T1 &'
|         `-DeclRefExpr 0x55a77496e7d0 <col:45> 'T2' lvalue ParmVar 0x55a774941918 'x2' 'T2 &'
|-FunctionTemplateDecl 0x55a774942078 <line:482:5, line:485:5> line:483:11 read_m
| |-TemplateTypeParmDecl 0x55a774941b70 <line:482:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55a774941be8 <col:26, col:35> col:35 referenced typename depth 0 index 1 T1
| |-TemplateTypeParmDecl 0x55a774941c68 <col:39, col:48> col:48 referenced typename depth 0 index 2 T2
| `-CXXMethodDecl 0x55a774941fd8 <line:483:5, line:485:5> line:483:11 read_m 'Args &(const char *, P, T1 &, T2 &)'
|   |-ParmVarDecl 0x55a774941d30 <col:18, col:30> col:30 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55a774941da8 <col:39, col:41> col:41 referenced parser 'P'
|   |-ParmVarDecl 0x55a774941e48 <col:49, col:53> col:53 referenced x1 'T1 &'
|   |-ParmVarDecl 0x55a774941ee8 <col:57, col:61> col:61 referenced x2 'T2 &'
|   `-CompoundStmt 0x55a77496e9e8 <col:65, line:485:5>
|     `-ReturnStmt 0x55a77496e9d8 <line:484:9, col:55>
|       `-CallExpr 0x55a77496e990 <col:16, col:55> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55a77496e870 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55a77496e8f0 <col:21> 'const char *' lvalue ParmVar 0x55a774941d30 'keyword' 'const char *'
|         |-DeclRefExpr 0x55a77496e910 <col:30> 'const int' lvalue Var 0x55a774938618 'mandatory' 'const int'
|         |-DeclRefExpr 0x55a77496e930 <col:41> 'P' lvalue ParmVar 0x55a774941da8 'parser' 'P'
|         |-DeclRefExpr 0x55a77496e950 <col:49> 'T1' lvalue ParmVar 0x55a774941e48 'x1' 'T1 &'
|         `-DeclRefExpr 0x55a77496e970 <col:53> 'T2' lvalue ParmVar 0x55a774941ee8 'x2' 'T2 &'
|-FunctionTemplateDecl 0x55a7749425f8 <line:486:5, line:489:5> line:487:11 read_p
| |-TemplateTypeParmDecl 0x55a7749420f0 <line:486:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55a774942168 <col:26, col:35> col:35 referenced typename depth 0 index 1 T1
| |-TemplateTypeParmDecl 0x55a7749421e8 <col:39, col:48> col:48 referenced typename depth 0 index 2 T2
| `-CXXMethodDecl 0x55a774942558 <line:487:5, line:489:5> line:487:11 read_p 'Args &(const char *, P, T1 &, T2 &)'
|   |-ParmVarDecl 0x55a7749422b0 <col:18, col:30> col:30 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55a774942328 <col:39, col:41> col:41 referenced parser 'P'
|   |-ParmVarDecl 0x55a7749423c8 <col:49, col:53> col:53 referenced x1 'T1 &'
|   |-ParmVarDecl 0x55a774942468 <col:57, col:61> col:61 referenced x2 'T2 &'
|   `-CompoundStmt 0x55a77496eb88 <col:65, line:489:5>
|     `-ReturnStmt 0x55a77496eb78 <line:488:9, col:56>
|       `-CallExpr 0x55a77496eb30 <col:16, col:56> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55a77496ea10 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55a77496ea90 <col:21> 'const char *' lvalue ParmVar 0x55a7749422b0 'keyword' 'const char *'
|         |-DeclRefExpr 0x55a77496eab0 <col:30> 'const int' lvalue Var 0x55a774938710 'positional' 'const int'
|         |-DeclRefExpr 0x55a77496ead0 <col:42> 'P' lvalue ParmVar 0x55a774942328 'parser' 'P'
|         |-DeclRefExpr 0x55a77496eaf0 <col:50> 'T1' lvalue ParmVar 0x55a7749423c8 'x1' 'T1 &'
|         `-DeclRefExpr 0x55a77496eb10 <col:54> 'T2' lvalue ParmVar 0x55a774942468 'x2' 'T2 &'
|-FunctionTemplateDecl 0x55a774942b78 <line:490:5, line:493:5> line:491:11 read_mp
| |-TemplateTypeParmDecl 0x55a774942670 <line:490:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55a7749426e8 <col:26, col:35> col:35 referenced typename depth 0 index 1 T1
| |-TemplateTypeParmDecl 0x55a774942768 <col:39, col:48> col:48 referenced typename depth 0 index 2 T2
| `-CXXMethodDecl 0x55a774942ad8 <line:491:5, line:493:5> line:491:11 read_mp 'Args &(const char *, P, T1 &, T2 &)'
|   |-ParmVarDecl 0x55a774942830 <col:19, col:31> col:31 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55a7749428a8 <col:40, col:42> col:42 referenced parser 'P'
|   |-ParmVarDecl 0x55a774942948 <col:50, col:54> col:54 referenced x1 'T1 &'
|   |-ParmVarDecl 0x55a7749429e8 <col:58, col:62> col:62 referenced x2 'T2 &'
|   `-CompoundStmt 0x55a77496edd8 <col:66, line:493:5>
|     `-ReturnStmt 0x55a77496edc8 <line:492:9, col:68>
|       `-CallExpr 0x55a77496ed80 <col:16, col:68> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55a77496ebb0 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55a77496ec30 <col:21> 'const char *' lvalue ParmVar 0x55a774942830 'keyword' 'const char *'
|         |-BinaryOperator 0x55a77496ed00 <col:30, col:42> 'int' '|'
|         | |-ImplicitCastExpr 0x55a77496ecb0 <col:30> 'int' <LValueToRValue>
|         | | `-DeclRefExpr 0x55a77496ec90 <col:30> 'const int' lvalue Var 0x55a774938618 'mandatory' 'const int' non_odr_use_constant
|         | `-ImplicitCastExpr 0x55a77496ece8 <col:42> 'int' <LValueToRValue>
|         |   `-DeclRefExpr 0x55a77496ecc8 <col:42> 'const int' lvalue Var 0x55a774938710 'positional' 'const int' non_odr_use_constant
|         |-DeclRefExpr 0x55a77496ed20 <col:54> 'P' lvalue ParmVar 0x55a7749428a8 'parser' 'P'
|         |-DeclRefExpr 0x55a77496ed40 <col:62> 'T1' lvalue ParmVar 0x55a774942948 'x1' 'T1 &'
|         `-DeclRefExpr 0x55a77496ed60 <col:66> 'T2' lvalue ParmVar 0x55a7749429e8 'x2' 'T2 &'
|-FunctionTemplateDecl 0x55a7749431d8 <line:494:5, line:498:5> line:495:11 read
| |-TemplateTypeParmDecl 0x55a774942bf0 <line:494:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55a774942c68 <col:26, col:35> col:35 referenced typename depth 0 index 1 T1
| |-TemplateTypeParmDecl 0x55a774942ce8 <col:39, col:48> col:48 referenced typename depth 0 index 2 T2
| `-CXXMethodDecl 0x55a774943138 <line:495:5, line:498:5> line:495:11 read 'Args &(const char *, int, P, T1 &, T2 &)'
|   |-ParmVarDecl 0x55a774942db0 <col:16, col:28> col:28 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55a774942e30 <col:37, col:41> col:41 referenced flags 'int'
|   |-ParmVarDecl 0x55a774942ea8 <col:48, col:50> col:50 referenced parser 'P'
|   |-ParmVarDecl 0x55a774942f48 <col:58, col:62> col:62 referenced x1 'T1 &'
|   |-ParmVarDecl 0x55a774942fe8 <col:66, col:70> col:70 referenced x2 'T2 &'
|   `-CompoundStmt 0x55a77496ef68 <col:74, line:498:5>
|     |-CallExpr 0x55a77496eee0 <line:496:9, col:60> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x55a77496edf0 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read' empty
|     | |-CXXThisExpr 0x55a77496ee30 <col:24> 'Args *' this
|     | |-DeclRefExpr 0x55a77496ee40 <col:30> 'const char *' lvalue ParmVar 0x55a774942db0 'keyword' 'const char *'
|     | |-DeclRefExpr 0x55a77496ee60 <col:39> 'int' lvalue ParmVar 0x55a774942e30 'flags' 'int'
|     | |-DeclRefExpr 0x55a77496ee80 <col:46> 'P' lvalue ParmVar 0x55a774942ea8 'parser' 'P'
|     | |-DeclRefExpr 0x55a77496eea0 <col:54> 'T1' lvalue ParmVar 0x55a774942f48 'x1' 'T1 &'
|     | `-DeclRefExpr 0x55a77496eec0 <col:58> 'T2' lvalue ParmVar 0x55a774942fe8 'x2' 'T2 &'
|     `-ReturnStmt 0x55a77496ef58 <line:497:9, col:17>
|       `-UnaryOperator 0x55a77496ef40 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55a77496ef30 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55a774943538 <line:506:5, line:509:5> line:507:11 read_with
| |-TemplateTypeParmDecl 0x55a774943258 <line:506:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x55a774943498 <line:507:5, line:509:5> line:507:11 read_with 'Args &(const char *, P)'
|   |-ParmVarDecl 0x55a774943310 <col:21, col:33> col:33 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55a774943388 <col:42, col:44> col:44 referenced parser 'P'
|   `-CompoundStmt 0x55a77496f0b0 <col:52, line:509:5>
|     `-ReturnStmt 0x55a77496f0a0 <line:508:9, col:44>
|       `-CallExpr 0x55a77496f068 <col:16, col:44> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55a77496ef98 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55a77496f008 <col:26> 'const char *' lvalue ParmVar 0x55a774943310 'keyword' 'const char *'
|         |-IntegerLiteral 0x55a77496f028 <col:35> 'int' 0
|         `-DeclRefExpr 0x55a77496f048 <col:38> 'P' lvalue ParmVar 0x55a774943388 'parser' 'P'
|-FunctionTemplateDecl 0x55a774943838 <line:510:5, line:513:5> line:511:11 read_m_with
| |-TemplateTypeParmDecl 0x55a7749435a0 <line:510:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x55a774943798 <line:511:5, line:513:5> line:511:11 read_m_with 'Args &(const char *, P)'
|   |-ParmVarDecl 0x55a774943650 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55a7749436c8 <col:44, col:46> col:46 referenced parser 'P'
|   `-CompoundStmt 0x55a77496f1f0 <col:54, line:513:5>
|     `-ReturnStmt 0x55a77496f1e0 <line:512:9, col:52>
|       `-CallExpr 0x55a77496f1a8 <col:16, col:52> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55a77496f0d8 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55a77496f148 <col:26> 'const char *' lvalue ParmVar 0x55a774943650 'keyword' 'const char *'
|         |-DeclRefExpr 0x55a77496f168 <col:35> 'const int' lvalue Var 0x55a774938618 'mandatory' 'const int'
|         `-DeclRefExpr 0x55a77496f188 <col:46> 'P' lvalue ParmVar 0x55a7749436c8 'parser' 'P'
|-FunctionTemplateDecl 0x55a774943b38 <line:514:5, line:517:5> line:515:11 read_p_with
| |-TemplateTypeParmDecl 0x55a7749438a0 <line:514:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x55a774943a98 <line:515:5, line:517:5> line:515:11 read_p_with 'Args &(const char *, P)'
|   |-ParmVarDecl 0x55a774943950 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55a7749439c8 <col:44, col:46> col:46 referenced parser 'P'
|   `-CompoundStmt 0x55a77496f330 <col:54, line:517:5>
|     `-ReturnStmt 0x55a77496f320 <line:516:9, col:53>
|       `-CallExpr 0x55a77496f2e8 <col:16, col:53> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55a77496f218 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55a77496f288 <col:26> 'const char *' lvalue ParmVar 0x55a774943950 'keyword' 'const char *'
|         |-DeclRefExpr 0x55a77496f2a8 <col:35> 'const int' lvalue Var 0x55a774938710 'positional' 'const int'
|         `-DeclRefExpr 0x55a77496f2c8 <col:47> 'P' lvalue ParmVar 0x55a7749439c8 'parser' 'P'
|-FunctionTemplateDecl 0x55a774943e38 <line:518:5, line:521:5> line:519:11 read_mp_with
| |-TemplateTypeParmDecl 0x55a774943ba0 <line:518:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x55a774943d98 <line:519:5, line:521:5> line:519:11 read_mp_with 'Args &(const char *, P)'
|   |-ParmVarDecl 0x55a774943c50 <col:24, col:36> col:36 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55a774943cc8 <col:45, col:47> col:47 referenced parser 'P'
|   `-CompoundStmt 0x55a77496f520 <col:55, line:521:5>
|     `-ReturnStmt 0x55a77496f510 <line:520:9, col:65>
|       `-CallExpr 0x55a77496f4d8 <col:16, col:65> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55a77496f358 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55a77496f3c8 <col:26> 'const char *' lvalue ParmVar 0x55a774943c50 'keyword' 'const char *'
|         |-BinaryOperator 0x55a77496f498 <col:35, col:47> 'int' '|'
|         | |-ImplicitCastExpr 0x55a77496f448 <col:35> 'int' <LValueToRValue>
|         | | `-DeclRefExpr 0x55a77496f428 <col:35> 'const int' lvalue Var 0x55a774938618 'mandatory' 'const int' non_odr_use_constant
|         | `-ImplicitCastExpr 0x55a77496f480 <col:47> 'int' <LValueToRValue>
|         |   `-DeclRefExpr 0x55a77496f460 <col:47> 'const int' lvalue Var 0x55a774938710 'positional' 'const int' non_odr_use_constant
|         `-DeclRefExpr 0x55a77496f4b8 <col:59> 'P' lvalue ParmVar 0x55a774943cc8 'parser' 'P'
|-FunctionTemplateDecl 0x55a774944208 <line:522:5, line:526:5> line:523:11 read_with
| |-TemplateTypeParmDecl 0x55a774943ea0 <line:522:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x55a774944168 <line:523:5, line:526:5> line:523:11 read_with 'Args &(const char *, int, P)'
|   |-ParmVarDecl 0x55a774943f50 <col:21, col:33> col:33 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55a774943fd0 <col:42, col:46> col:46 referenced flags 'int'
|   |-ParmVarDecl 0x55a774944048 <col:53, col:55> col:55 referenced parser 'P'
|   `-CompoundStmt 0x55a77496f660 <col:63, line:526:5>
|     |-CallExpr 0x55a77496f5e8 <line:524:9, col:57> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x55a77496f538 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read_with' empty
|     | |-CXXThisExpr 0x55a77496f578 <col:29> 'Args *' this
|     | |-DeclRefExpr 0x55a77496f588 <col:35> 'const char *' lvalue ParmVar 0x55a774943f50 'keyword' 'const char *'
|     | |-DeclRefExpr 0x55a77496f5a8 <col:44> 'int' lvalue ParmVar 0x55a774943fd0 'flags' 'int'
|     | `-DeclRefExpr 0x55a77496f5c8 <col:51> 'P' lvalue ParmVar 0x55a774944048 'parser' 'P'
|     `-ReturnStmt 0x55a77496f650 <line:525:9, col:17>
|       `-UnaryOperator 0x55a77496f638 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55a77496f628 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55a774944658 <line:538:5, line:541:5> line:539:11 read_with
| |-TemplateTypeParmDecl 0x55a774944278 <line:538:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55a7749442f8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55a7749445b8 <line:539:5, line:541:5> line:539:11 read_with 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x55a7749443b8 <col:21, col:33> col:33 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55a774944430 <col:42, col:44> col:44 referenced parser 'P'
|   |-ParmVarDecl 0x55a7749444d8 <col:52, col:55> col:55 referenced x 'T &'
|   `-CompoundStmt 0x55a77496f7b8 <col:58, line:541:5>
|     `-ReturnStmt 0x55a77496f7a8 <line:540:9, col:39>
|       `-CallExpr 0x55a77496f770 <col:16, col:39> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55a77496f690 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55a77496f710 <col:21> 'const char *' lvalue ParmVar 0x55a7749443b8 'keyword' 'const char *'
|         |-DeclRefExpr 0x55a77496f730 <col:30> 'P' lvalue ParmVar 0x55a774944430 'parser' 'P'
|         `-DeclRefExpr 0x55a77496f750 <col:38> 'T' lvalue ParmVar 0x55a7749444d8 'x' 'T &'
|-FunctionTemplateDecl 0x55a774944aa8 <line:542:5, line:545:5> line:543:11 read_m_with
| |-TemplateTypeParmDecl 0x55a7749446c8 <line:542:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55a774944748 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55a774944a08 <line:543:5, line:545:5> line:543:11 read_m_with 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x55a774944808 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55a774944880 <col:44, col:46> col:46 referenced parser 'P'
|   |-ParmVarDecl 0x55a774944928 <col:54, col:57> col:57 referenced x 'T &'
|   `-CompoundStmt 0x55a77496f8f0 <col:60, line:545:5>
|     `-ReturnStmt 0x55a77496f8e0 <line:544:9, col:41>
|       `-CallExpr 0x55a77496f8a8 <col:16, col:41> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55a77496f7e0 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55a77496f848 <col:23> 'const char *' lvalue ParmVar 0x55a774944808 'keyword' 'const char *'
|         |-DeclRefExpr 0x55a77496f868 <col:32> 'P' lvalue ParmVar 0x55a774944880 'parser' 'P'
|         `-DeclRefExpr 0x55a77496f888 <col:40> 'T' lvalue ParmVar 0x55a774944928 'x' 'T &'
|-FunctionTemplateDecl 0x55a774944ef8 <line:546:5, line:549:5> line:547:11 read_p_with
| |-TemplateTypeParmDecl 0x55a774944b18 <line:546:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55a774944b98 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55a774944e58 <line:547:5, line:549:5> line:547:11 read_p_with 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x55a774944c58 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55a774944cd0 <col:44, col:46> col:46 referenced parser 'P'
|   |-ParmVarDecl 0x55a774944d78 <col:54, col:57> col:57 referenced x 'T &'
|   `-CompoundStmt 0x55a77496fa28 <col:60, line:549:5>
|     `-ReturnStmt 0x55a77496fa18 <line:548:9, col:41>
|       `-CallExpr 0x55a77496f9e0 <col:16, col:41> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55a77496f918 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55a77496f980 <col:23> 'const char *' lvalue ParmVar 0x55a774944c58 'keyword' 'const char *'
|         |-DeclRefExpr 0x55a77496f9a0 <col:32> 'P' lvalue ParmVar 0x55a774944cd0 'parser' 'P'
|         `-DeclRefExpr 0x55a77496f9c0 <col:40> 'T' lvalue ParmVar 0x55a774944d78 'x' 'T &'
|-FunctionTemplateDecl 0x55a774945348 <line:550:5, line:553:5> line:551:11 read_mp_with
| |-TemplateTypeParmDecl 0x55a774944f68 <line:550:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55a774944fe8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55a7749452a8 <line:551:5, line:553:5> line:551:11 read_mp_with 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x55a7749450a8 <col:24, col:36> col:36 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55a774945120 <col:45, col:47> col:47 referenced parser 'P'
|   |-ParmVarDecl 0x55a7749451c8 <col:55, col:58> col:58 referenced x 'T &'
|   `-CompoundStmt 0x55a77496fb60 <col:61, line:553:5>
|     `-ReturnStmt 0x55a77496fb50 <line:552:9, col:42>
|       `-CallExpr 0x55a77496fb18 <col:16, col:42> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55a77496fa50 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55a77496fab8 <col:24> 'const char *' lvalue ParmVar 0x55a7749450a8 'keyword' 'const char *'
|         |-DeclRefExpr 0x55a77496fad8 <col:33> 'P' lvalue ParmVar 0x55a774945120 'parser' 'P'
|         `-DeclRefExpr 0x55a77496faf8 <col:41> 'T' lvalue ParmVar 0x55a7749451c8 'x' 'T &'
|-FunctionTemplateDecl 0x55a774945828 <line:554:5, line:557:5> line:555:11 read_with
| |-TemplateTypeParmDecl 0x55a7749453b8 <line:554:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55a774945438 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55a774945788 <line:555:5, line:557:5> line:555:11 read_with 'Args &(const char *, int, P, T &)'
|   |-ParmVarDecl 0x55a7749454f8 <col:21, col:33> col:33 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55a774945578 <col:42, col:46> col:46 referenced flags 'int'
|   |-ParmVarDecl 0x55a7749455f0 <col:53, col:55> col:55 referenced parser 'P'
|   |-ParmVarDecl 0x55a774945698 <col:63, col:66> col:66 referenced x 'T &'
|   `-CompoundStmt 0x55a77496fcd8 <col:69, line:557:5>
|     `-ReturnStmt 0x55a77496fcc8 <line:556:9, col:46>
|       `-CallExpr 0x55a77496fc88 <col:16, col:46> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55a77496fb88 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55a77496fc08 <col:21> 'const char *' lvalue ParmVar 0x55a7749454f8 'keyword' 'const char *'
|         |-DeclRefExpr 0x55a77496fc28 <col:30> 'int' lvalue ParmVar 0x55a774945578 'flags' 'int'
|         |-DeclRefExpr 0x55a77496fc48 <col:37> 'P' lvalue ParmVar 0x55a7749455f0 'parser' 'P'
|         `-DeclRefExpr 0x55a77496fc68 <col:45> 'T' lvalue ParmVar 0x55a774945698 'x' 'T &'
|-FunctionTemplateDecl 0x55a774945b38 <line:568:5, line:571:5> line:569:11 read_all_with
| |-TemplateTypeParmDecl 0x55a7749458a0 <line:568:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x55a774945a98 <line:569:5, line:571:5> line:569:11 read_all_with 'Args &(const char *, P)'
|   |-ParmVarDecl 0x55a774945950 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55a7749459c8 <col:46, col:48> col:48 referenced parser 'P'
|   `-CompoundStmt 0x55a77496fe18 <col:56, line:571:5>
|     `-ReturnStmt 0x55a77496fe08 <line:570:9, col:48>
|       `-CallExpr 0x55a77496fdd0 <col:16, col:48> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55a77496fd00 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55a77496fd70 <col:30> 'const char *' lvalue ParmVar 0x55a774945950 'keyword' 'const char *'
|         |-IntegerLiteral 0x55a77496fd90 <col:39> 'int' 0
|         `-DeclRefExpr 0x55a77496fdb0 <col:42> 'P' lvalue ParmVar 0x55a7749459c8 'parser' 'P'
|-FunctionTemplateDecl 0x55a774945ec8 <line:572:5, line:576:5> line:573:11 read_all_with
| |-TemplateTypeParmDecl 0x55a774945ba0 <line:572:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x55a774945e28 <line:573:5, line:576:5> line:573:11 read_all_with 'Args &(const char *, int, P)'
|   |-ParmVarDecl 0x55a774945c50 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55a774945cd0 <col:46, col:50> col:50 referenced flags 'int'
|   |-ParmVarDecl 0x55a774945d48 <col:57, col:59> col:59 referenced parser 'P'
|   `-CompoundStmt 0x55a77496ffe8 <col:67, line:576:5>
|     |-CallExpr 0x55a77496ff70 <line:574:9, col:74> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x55a77496fe30 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read_all_with' empty
|     | |-CXXThisExpr 0x55a77496fe70 <col:33> 'Args *' this
|     | |-DeclRefExpr 0x55a77496fe80 <col:39> 'const char *' lvalue ParmVar 0x55a774945c50 'keyword' 'const char *'
|     | |-BinaryOperator 0x55a77496ff30 <col:48, col:56> 'int' '|'
|     | | |-ImplicitCastExpr 0x55a77496fee0 <col:48> 'int' <LValueToRValue>
|     | | | `-DeclRefExpr 0x55a77496fea0 <col:48> 'int' lvalue ParmVar 0x55a774945cd0 'flags' 'int'
|     | | `-ImplicitCastExpr 0x55a77496ff18 <col:56> 'int' <LValueToRValue>
|     | |   `-DeclRefExpr 0x55a77496fef8 <col:56> 'const int' lvalue Var 0x55a774938900 'firstmatch' 'const int' non_odr_use_constant
|     | `-DeclRefExpr 0x55a77496ff50 <col:68> 'P' lvalue ParmVar 0x55a774945d48 'parser' 'P'
|     `-ReturnStmt 0x55a77496ffd8 <line:575:9, col:17>
|       `-UnaryOperator 0x55a77496ffc0 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55a77496ffb0 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55a774946318 <line:589:5, line:592:5> line:590:11 read_all_with
| |-TemplateTypeParmDecl 0x55a774945f38 <line:589:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55a774945fb8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55a774946278 <line:590:5, line:592:5> line:590:11 read_all_with 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x55a774946078 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55a7749460f0 <col:46, col:48> col:48 referenced parser 'P'
|   |-ParmVarDecl 0x55a774946198 <col:56, col:59> col:59 referenced x 'T &'
|   `-CompoundStmt 0x55a774970158 <col:62, line:592:5>
|     `-ReturnStmt 0x55a774970148 <line:591:9, col:51>
|       `-CallExpr 0x55a774970108 <col:16, col:51> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55a774970018 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55a774970088 <col:30> 'const char *' lvalue ParmVar 0x55a774946078 'keyword' 'const char *'
|         |-IntegerLiteral 0x55a7749700a8 <col:39> 'int' 0
|         |-DeclRefExpr 0x55a7749700c8 <col:42> 'P' lvalue ParmVar 0x55a7749460f0 'parser' 'P'
|         `-DeclRefExpr 0x55a7749700e8 <col:50> 'T' lvalue ParmVar 0x55a774946198 'x' 'T &'
|-FunctionTemplateDecl 0x55a7749467f8 <line:593:5, line:597:5> line:594:11 read_all_with
| |-TemplateTypeParmDecl 0x55a774946388 <line:593:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55a774946408 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55a774946758 <line:594:5, line:597:5> line:594:11 read_all_with 'Args &(const char *, int, P, T &)'
|   |-ParmVarDecl 0x55a7749464c8 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55a774946548 <col:46, col:50> col:50 referenced flags 'int'
|   |-ParmVarDecl 0x55a7749465c0 <col:57, col:59> col:59 referenced parser 'P'
|   |-ParmVarDecl 0x55a774946668 <col:67, col:70> col:70 referenced x 'T &'
|   `-CompoundStmt 0x55a774970350 <col:73, line:597:5>
|     |-CallExpr 0x55a7749702d0 <line:595:9, col:77> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x55a774970170 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read_all_with' empty
|     | |-CXXThisExpr 0x55a7749701b0 <col:33> 'Args *' this
|     | |-DeclRefExpr 0x55a7749701c0 <col:39> 'const char *' lvalue ParmVar 0x55a7749464c8 'keyword' 'const char *'
|     | |-BinaryOperator 0x55a774970270 <col:48, col:56> 'int' '|'
|     | | |-ImplicitCastExpr 0x55a774970220 <col:48> 'int' <LValueToRValue>
|     | | | `-DeclRefExpr 0x55a7749701e0 <col:48> 'int' lvalue ParmVar 0x55a774946548 'flags' 'int'
|     | | `-ImplicitCastExpr 0x55a774970258 <col:56> 'int' <LValueToRValue>
|     | |   `-DeclRefExpr 0x55a774970238 <col:56> 'const int' lvalue Var 0x55a774938900 'firstmatch' 'const int' non_odr_use_constant
|     | |-DeclRefExpr 0x55a774970290 <col:68> 'P' lvalue ParmVar 0x55a7749465c0 'parser' 'P'
|     | `-DeclRefExpr 0x55a7749702b0 <col:76> 'T' lvalue ParmVar 0x55a774946668 'x' 'T &'
|     `-ReturnStmt 0x55a774970340 <line:596:9, col:17>
|       `-UnaryOperator 0x55a774970328 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55a774970318 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55a774946da8 <line:611:5, line:614:5> line:612:11 read_all
| |-TemplateTypeParmDecl 0x55a774946870 <line:611:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55a7749468e8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55a774946d08 <line:612:5, line:614:5> line:612:11 read_all 'Args &(const char *, P, Vector<T> &)'
|   |-ParmVarDecl 0x55a7749469a8 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55a774946a20 <col:41, col:43> col:43 referenced parser 'P'
|   |-ParmVarDecl 0x55a774946be0 <col:51, col:62> col:62 referenced x 'Vector<T> &'
|   `-CompoundStmt 0x55a7749704c0 <col:65, line:614:5>
|     `-ReturnStmt 0x55a7749704b0 <line:613:9, col:46>
|       `-CallExpr 0x55a774970470 <col:16, col:46> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55a774970380 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55a7749703f0 <col:25> 'const char *' lvalue ParmVar 0x55a7749469a8 'keyword' 'const char *'
|         |-IntegerLiteral 0x55a774970410 <col:34> 'int' 0
|         |-DeclRefExpr 0x55a774970430 <col:37> 'P' lvalue ParmVar 0x55a774946a20 'parser' 'P'
|         `-DeclRefExpr 0x55a774970450 <col:45> 'Vector<T>' lvalue ParmVar 0x55a774946be0 'x' 'Vector<T> &'
|-FunctionTemplateDecl 0x55a7749471d8 <line:615:5, line:618:5> line:616:11 read_all
| |-TemplateTypeParmDecl 0x55a774946e18 <line:615:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x55a774947138 <line:616:5, line:618:5> line:616:11 read_all 'Args &(const char *, Vector<T> &)'
|   |-ParmVarDecl 0x55a774946ed0 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55a774947020 <col:41, col:52> col:52 referenced x 'Vector<T> &'
|   `-CompoundStmt 0x55a7749706e0 <col:55, line:618:5>
|     `-ReturnStmt 0x55a7749706d0 <line:617:9, col:55>
|       `-CallExpr 0x55a774970690 <col:16, col:55> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55a7749704e8 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55a774970558 <col:25> 'const char *' lvalue ParmVar 0x55a774946ed0 'keyword' 'const char *'
|         |-IntegerLiteral 0x55a774970578 <col:34> 'int' 0
|         |-CXXUnresolvedConstructExpr 0x55a774970650 <col:37, col:51> 'DefaultArg<T>' 'DefaultArg<T>'
|         `-DeclRefExpr 0x55a774970670 <col:54> 'Vector<T>' lvalue ParmVar 0x55a774947020 'x' 'Vector<T> &'
|-FunctionTemplateDecl 0x55a7749477a8 <line:619:5, line:623:5> line:620:11 read_all
| |-TemplateTypeParmDecl 0x55a774947240 <line:619:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55a7749472b8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55a774947708 <line:620:5, line:623:5> line:620:11 read_all 'Args &(const char *, int, P, Vector<T> &)'
|   |-ParmVarDecl 0x55a774947378 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55a7749473f8 <col:41, col:45> col:45 referenced flags 'int'
|   |-ParmVarDecl 0x55a774947470 <col:52, col:54> col:54 referenced parser 'P'
|   |-ParmVarDecl 0x55a7749475c0 <col:62, col:73> col:73 referenced x 'Vector<T> &'
|   `-CompoundStmt 0x55a7749708d8 <col:76, line:623:5>
|     |-CallExpr 0x55a774970858 <line:621:9, col:72> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x55a7749706f8 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read_all' empty
|     | |-CXXThisExpr 0x55a774970738 <col:28> 'Args *' this
|     | |-DeclRefExpr 0x55a774970748 <col:34> 'const char *' lvalue ParmVar 0x55a774947378 'keyword' 'const char *'
|     | |-BinaryOperator 0x55a7749707f8 <col:43, col:51> 'int' '|'
|     | | |-ImplicitCastExpr 0x55a7749707a8 <col:43> 'int' <LValueToRValue>
|     | | | `-DeclRefExpr 0x55a774970768 <col:43> 'int' lvalue ParmVar 0x55a7749473f8 'flags' 'int'
|     | | `-ImplicitCastExpr 0x55a7749707e0 <col:51> 'int' <LValueToRValue>
|     | |   `-DeclRefExpr 0x55a7749707c0 <col:51> 'const int' lvalue Var 0x55a774938900 'firstmatch' 'const int' non_odr_use_constant
|     | |-DeclRefExpr 0x55a774970818 <col:63> 'P' lvalue ParmVar 0x55a774947470 'parser' 'P'
|     | `-DeclRefExpr 0x55a774970838 <col:71> 'Vector<T>' lvalue ParmVar 0x55a7749475c0 'x' 'Vector<T> &'
|     `-ReturnStmt 0x55a7749708c8 <line:622:9, col:17>
|       `-UnaryOperator 0x55a7749708b0 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55a7749708a0 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55a774947ce8 <line:624:5, line:627:5> line:625:11 read_all
| |-TemplateTypeParmDecl 0x55a774947820 <line:624:15, col:24> col:24 typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55a774947898 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55a774947c48 <line:625:5, line:627:5> line:625:11 read_all 'Args &(const char *, int, Vector<T> &)'
|   |-ParmVarDecl 0x55a774947958 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55a7749479d8 <col:41, col:45> col:45 referenced flags 'int'
|   |-ParmVarDecl 0x55a774947b20 <col:52, col:63> col:63 referenced x 'Vector<T> &'
|   `-CompoundStmt 0x55a774970b40 <col:66, line:627:5>
|     `-ReturnStmt 0x55a774970b30 <line:626:9, col:59>
|       `-CallExpr 0x55a774970af0 <col:16, col:59> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55a774970908 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55a774970978 <col:25> 'const char *' lvalue ParmVar 0x55a774947958 'keyword' 'const char *'
|         |-DeclRefExpr 0x55a774970998 <col:34> 'int' lvalue ParmVar 0x55a7749479d8 'flags' 'int'
|         |-CXXUnresolvedConstructExpr 0x55a774970ab0 <col:41, col:55> 'DefaultArg<T>' 'DefaultArg<T>'
|         `-DeclRefExpr 0x55a774970ad0 <col:58> 'Vector<T>' lvalue ParmVar 0x55a774947b20 'x' 'Vector<T> &'
|-CXXMethodDecl 0x55a774947d78 <line:631:5, line:633:5> line:631:10 status 'bool () const'
| `-CompoundStmt 0x55a774970bc0 <col:25, line:633:5>
|   `-ReturnStmt 0x55a774970bb0 <line:632:9, col:16>
|     `-ImplicitCastExpr 0x55a774970b98 <col:16> 'bool' <LValueToRValue>
|       `-MemberExpr 0x55a774970b68 <col:16> 'const bool' lvalue ->_status 0x55a774953558
|         `-CXXThisExpr 0x55a774970b58 <col:16> 'const Args *' implicit this
|-CXXMethodDecl 0x55a774947ef8 <line:636:5, line:639:5> line:636:11 status 'Args &(bool &)'
| |-ParmVarDecl 0x55a774947e30 <col:18, col:24> col:24 used x 'bool &'
| `-CompoundStmt 0x55a774970ca8 <col:27, line:639:5>
|   |-BinaryOperator 0x55a774970c50 <line:637:9, col:13> 'bool' lvalue '='
|   | |-DeclRefExpr 0x55a774970bd8 <col:9> 'bool' lvalue ParmVar 0x55a774947e30 'x' 'bool &'
|   | `-ImplicitCastExpr 0x55a774970c38 <col:13> 'bool' <LValueToRValue>
|   |   `-MemberExpr 0x55a774970c08 <col:13> 'bool' lvalue ->_status 0x55a774953558
|   |     `-CXXThisExpr 0x55a774970bf8 <col:13> 'Args *' implicit this
|   `-ReturnStmt 0x55a774970c98 <line:638:9, col:17>
|     `-UnaryOperator 0x55a774970c80 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55a774970c70 <col:17> 'Args *' this
|-CXXMethodDecl 0x55a774948078 <line:641:5, line:644:5> line:641:17 status 'const Args &(bool &) const'
| |-ParmVarDecl 0x55a774947fb8 <col:24, col:30> col:30 used x 'bool &'
| `-CompoundStmt 0x55a774970d98 <col:39, line:644:5>
|   |-BinaryOperator 0x55a774970d40 <line:642:9, col:13> 'bool' lvalue '='
|   | |-DeclRefExpr 0x55a774970cc8 <col:9> 'bool' lvalue ParmVar 0x55a774947fb8 'x' 'bool &'
|   | `-ImplicitCastExpr 0x55a774970d28 <col:13> 'bool' <LValueToRValue>
|   |   `-MemberExpr 0x55a774970cf8 <col:13> 'const bool' lvalue ->_status 0x55a774953558
|   |     `-CXXThisExpr 0x55a774970ce8 <col:13> 'const Args *' implicit this
|   `-ReturnStmt 0x55a774970d88 <line:643:9, col:17>
|     `-UnaryOperator 0x55a774970d70 <col:16, col:17> 'const Args' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55a774970d60 <col:17> 'const Args *' this
|-CXXMethodDecl 0x55a774948140 <line:649:5, line:651:5> line:649:10 read_status 'bool () const'
| `-CompoundStmt 0x55a774970e40 <col:30, line:651:5>
|   `-ReturnStmt 0x55a774970e30 <line:650:9, col:16>
|     `-ImplicitCastExpr 0x55a774970e18 <col:16> 'bool' <LValueToRValue>
|       `-MemberExpr 0x55a774970de8 <col:16> 'bool' lvalue ->_read_status 0x55a77492ed80
|         `-ImplicitCastExpr 0x55a774970dc8 <col:16> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|           `-CXXThisExpr 0x55a774970db8 <col:16> 'const Args *' implicit this
|-CXXMethodDecl 0x55a774948288 <line:655:5, line:658:5> line:655:11 used read_status 'Args &(bool &)'
| |-ParmVarDecl 0x55a7749481f8 <col:23, col:29> col:29 used x 'bool &'
| `-CompoundStmt 0x55a774970f48 <col:32, line:658:5>
|   |-BinaryOperator 0x55a774970ef0 <line:656:9, col:13> 'bool' lvalue '='
|   | |-DeclRefExpr 0x55a774970e58 <col:9> 'bool' lvalue ParmVar 0x55a7749481f8 'x' 'bool &'
|   | `-ImplicitCastExpr 0x55a774970ed8 <col:13> 'bool' <LValueToRValue>
|   |   `-MemberExpr 0x55a774970ea8 <col:13> 'bool' lvalue ->_read_status 0x55a77492ed80
|   |     `-ImplicitCastExpr 0x55a774970e88 <col:13> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|   |       `-CXXThisExpr 0x55a774970e78 <col:13> 'Args *' implicit this
|   `-ReturnStmt 0x55a774970f38 <line:657:9, col:17>
|     `-UnaryOperator 0x55a774970f20 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55a774970f10 <col:17> 'Args *' this
|-CXXMethodDecl 0x55a77494dd80 <line:660:5, line:663:5> line:660:17 read_status 'const Args &(bool &) const'
| |-ParmVarDecl 0x55a77494dcf0 <col:29, col:35> col:35 used x 'bool &'
| `-CompoundStmt 0x55a774971058 <col:44, line:663:5>
|   |-BinaryOperator 0x55a774971000 <line:661:9, col:13> 'bool' lvalue '='
|   | |-DeclRefExpr 0x55a774970f68 <col:9> 'bool' lvalue ParmVar 0x55a77494dcf0 'x' 'bool &'
|   | `-ImplicitCastExpr 0x55a774970fe8 <col:13> 'bool' <LValueToRValue>
|   |   `-MemberExpr 0x55a774970fb8 <col:13> 'bool' lvalue ->_read_status 0x55a77492ed80
|   |     `-ImplicitCastExpr 0x55a774970f98 <col:13> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|   |       `-CXXThisExpr 0x55a774970f88 <col:13> 'const Args *' implicit this
|   `-ReturnStmt 0x55a774971048 <line:662:9, col:17>
|     `-UnaryOperator 0x55a774971030 <col:16, col:17> 'const Args' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55a774971020 <col:17> 'const Args *' this
|-CXXMethodDecl 0x55a77494de48 <line:667:5, col:17> col:11 strip 'Args &()'
|-CXXMethodDecl 0x55a77494df10 <line:675:5, col:17> col:9 execute 'int ()'
|-CXXMethodDecl 0x55a77494dfd8 <line:684:5, col:17> col:9 consume 'int ()'
|-CXXMethodDecl 0x55a77494e0a0 <line:693:5, col:18> col:9 used complete 'int ()'
|-FunctionTemplateDecl 0x55a77494e3a8 <line:700:5, line:706:5> line:701:8 slot
| |-TemplateTypeParmDecl 0x55a77494e140 <line:700:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x55a77494e308 <line:701:5, line:706:5> line:701:8 slot 'T *(T &)'
|   |-ParmVarDecl 0x55a77494e218 <col:13, col:16> col:16 referenced x 'T &'
|   `-CompoundStmt 0x55a774971410 <col:19, line:706:5>
|     `-IfStmt 0x55a7749713e8 <line:702:9, line:705:34> has_else
|       |-CXXDependentScopeMemberExpr 0x55a774971158 <line:702:13, col:34> '<dependent type>' lvalue ->value
|       |-ReturnStmt 0x55a774971318 <line:703:13, col:68>
|       | `-CXXReinterpretCastExpr 0x55a7749712e8 <col:20, col:68> 'T *' reinterpret_cast<T *> <Dependent>
|       |   `-CallExpr 0x55a7749712a8 <col:42, col:67> '<dependent type>'
|       |     |-MemberExpr 0x55a7749711b0 <col:42> '<bound member function type>' ->simple_slot 0x55a77496be90
|       |     | `-CXXThisExpr 0x55a7749711a0 <col:42> 'Args *' implicit this
|       |     |-CXXOperatorCallExpr 0x55a774971248 <col:54, col:55> '<dependent type>'
|       |     | |-UnresolvedLookupExpr 0x55a774971200 <col:54> '<overloaded function type>' lvalue (ADL) = 'operator&' 0x55a7745e6818
|       |     | `-DeclRefExpr 0x55a7749711e0 <col:55> 'T' lvalue ParmVar 0x55a77494e218 'x' 'T &'
|       |     `-UnaryExprOrTypeTraitExpr 0x55a774971288 <col:58, col:66> 'unsigned long' sizeof 'T'
|       `-ReturnStmt 0x55a7749713d8 <line:705:13, col:34>
|         `-CallExpr 0x55a7749713b0 <col:20, col:34> '<dependent type>'
|           |-UnresolvedMemberExpr 0x55a774971338 <col:20> '<bound member function type>' lvalue
|           `-DeclRefExpr 0x55a774971390 <col:33> 'T' lvalue ParmVar 0x55a77494e218 'x' 'T &'
|-FunctionTemplateDecl 0x55a77494e678 <line:711:5, line:717:5> line:712:8 initialized_slot
| |-TemplateTypeParmDecl 0x55a77494e408 <line:711:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x55a77494e5d8 <line:712:5, line:717:5> line:712:8 initialized_slot 'T *(T &)'
|   |-ParmVarDecl 0x55a77494e4e8 <col:25, col:28> col:28 referenced x 'T &'
|   `-CompoundStmt 0x55a7749717f0 <col:31, line:717:5>
|     |-DeclStmt 0x55a774971550 <line:713:9, col:23>
|     | `-VarDecl 0x55a774971438 <col:9, col:22> col:12 referenced s 'T *' nrvo cinit
|     |   `-CallExpr 0x55a774971528 <col:16, col:22> '<dependent type>'
|     |     |-UnresolvedMemberExpr 0x55a7749714b0 <col:16> '<bound member function type>' lvalue
|     |     `-DeclRefExpr 0x55a774971508 <col:21> 'T' lvalue ParmVar 0x55a77494e4e8 'x' 'T &'
|     |-IfStmt 0x55a7749717a0 <line:714:9, line:715:20>
|     | |-CXXDependentScopeMemberExpr 0x55a774971648 <line:714:13, col:34> '<dependent type>' lvalue ->value
|     | `-BinaryOperator 0x55a774971780 <line:715:13, col:20> '<dependent type>' '='
|     |   |-CXXOperatorCallExpr 0x55a774971720 <col:13, col:14> '<dependent type>'
|     |   | |-UnresolvedLookupExpr 0x55a7749716b0 <col:13> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55a77479d918 0x55a77479d538 0x55a77479d168 0x55a77479cd88 0x55a77479c9a8 0x55a77479c5d8
|     |   | `-DeclRefExpr 0x55a774971690 <col:14> 'T *' lvalue Var 0x55a774971438 's' 'T *'
|     |   `-CXXUnresolvedConstructExpr 0x55a774971760 <col:18, col:20> 'T' 'T'
|     `-ReturnStmt 0x55a7749717d8 <line:716:9, col:16>
|       `-DeclRefExpr 0x55a7749717b8 <col:16> 'T *' lvalue Var 0x55a774971438 's' 'T *'
|-FunctionTemplateDecl 0x55a77494ea88 <line:721:5, line:726:5> line:722:11 set
| |-TemplateTypeParmDecl 0x55a77494e6d8 <line:721:15, col:24> col:24 referenced typename depth 0 index 0 T
| |-TemplateTypeParmDecl 0x55a77494e758 <col:27, col:36> col:36 referenced typename depth 0 index 1 V
| `-CXXMethodDecl 0x55a77494e9e8 <line:722:5, line:726:5> line:722:11 set 'Args &(T &, const V &)'
|   |-ParmVarDecl 0x55a77494e838 <col:15, col:18> col:18 referenced x 'T &'
|   |-ParmVarDecl 0x55a77494e8d8 <col:21, col:30> col:30 referenced value 'const V &'
|   `-CompoundStmt 0x55a774971b00 <col:37, line:726:5>
|     |-IfStmt 0x55a774971a90 <line:723:9, line:724:18> has_var
|     | |-DeclStmt 0x55a774971ab0 <line:723:13, col:26>
|     | | `-VarDecl 0x55a774971858 <col:13, col:26> col:16 referenced s 'T *' cinit
|     | |   `-CallExpr 0x55a774971948 <col:20, col:26> '<dependent type>'
|     | |     |-UnresolvedMemberExpr 0x55a7749718d0 <col:20> '<bound member function type>' lvalue
|     | |     `-DeclRefExpr 0x55a774971928 <col:25> 'T' lvalue ParmVar 0x55a77494e838 'x' 'T &'
|     | |-DeclRefExpr 0x55a774971970 <col:16> 'T *' lvalue Var 0x55a774971858 's' 'T *'
|     | `-BinaryOperator 0x55a774971a70 <line:724:13, col:18> '<dependent type>' '='
|     |   |-CXXOperatorCallExpr 0x55a774971a20 <col:13, col:14> '<dependent type>'
|     |   | |-UnresolvedLookupExpr 0x55a7749719b0 <col:13> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55a77479d918 0x55a77479d538 0x55a77479d168 0x55a77479cd88 0x55a77479c9a8 0x55a77479c5d8
|     |   | `-DeclRefExpr 0x55a774971990 <col:14> 'T *' lvalue Var 0x55a774971858 's' 'T *'
|     |   `-DeclRefExpr 0x55a774971a50 <col:18> 'const V' lvalue ParmVar 0x55a77494e8d8 'value' 'const V &'
|     `-ReturnStmt 0x55a774971af0 <line:725:9, col:17>
|       `-UnaryOperator 0x55a774971ad8 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55a774971ac8 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55a77494ee88 <line:730:5, line:737:5> line:731:10 base_read
| |-TemplateTypeParmDecl 0x55a77494eaf0 <line:730:14, col:23> col:23 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x55a77494ede8 <line:731:5, line:737:5> line:731:10 base_read 'void (const char *, int, T &)'
|   |-ParmVarDecl 0x55a77494eba0 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55a77494ec20 <col:41, col:45> col:45 referenced flags 'int'
|   |-ParmVarDecl 0x55a77494ecc8 <col:52, col:55> col:55 referenced variable 'T &'
|   `-CompoundStmt 0x55a774975290 <col:65, line:737:5>
|     |-DeclStmt 0x55a774971b98 <line:732:9, col:26>
|     | `-VarDecl 0x55a774971b30 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     `-IfStmt 0x55a774975258 <line:733:9, line:736:9> has_var
|       |-DeclStmt 0x55a774975278 <line:733:13, col:58>
|       | `-VarDecl 0x55a774971bc0 <col:13, col:58> col:20 referenced str 'String' cinit destroyed
|       |   `-ExprWithCleanups 0x55a774971da0 <col:26, col:58> 'String'
|       |     `-CXXConstructExpr 0x55a774971d70 <col:26, col:58> 'String' 'void (String &&)' elidable
|       |       `-MaterializeTemporaryExpr 0x55a774971d58 <col:26, col:58> 'String' xvalue
|       |         `-CXXBindTemporaryExpr 0x55a774971d38 <col:26, col:58> 'String' (CXXTemporary 0x55a774971d38)
|       |           `-CXXMemberCallExpr 0x55a774971cc8 <col:26, col:58> 'String'
|       |             |-MemberExpr 0x55a774971c38 <col:26> '<bound member function type>' ->find 0x55a77496b4a8
|       |             | `-CXXThisExpr 0x55a774971c28 <col:26> 'Args *' implicit this
|       |             |-ImplicitCastExpr 0x55a774971d00 <col:31> 'const char *' <LValueToRValue>
|       |             | `-DeclRefExpr 0x55a774971c68 <col:31> 'const char *' lvalue ParmVar 0x55a77494eba0 'keyword' 'const char *'
|       |             |-ImplicitCastExpr 0x55a774971d18 <col:40> 'int' <LValueToRValue>
|       |             | `-DeclRefExpr 0x55a774971c88 <col:40> 'int' lvalue ParmVar 0x55a77494ec20 'flags' 'int'
|       |             `-DeclRefExpr 0x55a774971ca8 <col:47> 'Args::Slot *' lvalue Var 0x55a774971b30 'slot_status' 'Args::Slot *'
|       |-ImplicitCastExpr 0x55a774971e58 <col:20> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x55a774971e40 <col:20> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x55a774971e20 <col:20> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x55a774971df0 <col:20> '<bound member function type>' .operator int (String::*)() const 0x55a7745a97e8
|       |       `-ImplicitCastExpr 0x55a774971dd8 <col:20> 'const String' lvalue <NoOp>
|       |         `-DeclRefExpr 0x55a774971db8 <col:20> 'String' lvalue Var 0x55a774971bc0 'str' 'String'
|       `-CompoundStmt 0x55a774975238 <col:61, line:736:9>
|         |-DeclStmt 0x55a774972310 <line:734:13, col:76>
|         | `-VarDecl 0x55a774971ea8 <col:13, col:75> col:16 referenced s 'T *' cinit
|         |   `-CallExpr 0x55a7749722e0 <col:20, col:75> '<dependent type>'
|         |     |-CXXDependentScopeMemberExpr 0x55a774972250 <col:20, col:55> '<dependent type>' lvalue ->slot
|         |     |-DeclRefExpr 0x55a774972298 <col:60> 'T' lvalue ParmVar 0x55a77494ecc8 'variable' 'T &'
|         |     `-UnaryOperator 0x55a7749722c8 <col:70, col:71> 'Args' lvalue prefix '*' cannot overflow
|         |       `-CXXThisExpr 0x55a7749722b8 <col:71> 'Args *' this
|         `-CallExpr 0x55a774975208 <line:735:13, col:114> '<dependent type>'
|           |-MemberExpr 0x55a774972338 <col:13> '<bound member function type>' ->postparse 0x55a77496b6b8
|           | `-CXXThisExpr 0x55a774972328 <col:13> 'Args *' implicit this
|           |-BinaryOperator 0x55a7749751c8 <col:23, col:100> '<dependent type>' '&&'
|           | |-DeclRefExpr 0x55a774972368 <col:23> 'T *' lvalue Var 0x55a774971ea8 's' 'T *'
|           | `-CallExpr 0x55a774975188 <col:28, col:100> '<dependent type>'
|           |   |-CXXDependentScopeMemberExpr 0x55a7749725f0 <col:28, col:63> '<dependent type>' lvalue ->parse
|           |   |-CXXUnresolvedConstructExpr 0x55a774975060 <col:69, col:83> 'DefaultArg<T>' 'DefaultArg<T>'
|           |   |-DeclRefExpr 0x55a774975080 <col:86> 'String' lvalue Var 0x55a774971bc0 'str' 'String'
|           |   |-CXXOperatorCallExpr 0x55a774975130 <col:91, col:92> '<dependent type>'
|           |   | |-UnresolvedLookupExpr 0x55a7749750c0 <col:91> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55a77479d918 0x55a77479d538 0x55a77479d168 0x55a77479cd88 0x55a77479c9a8 0x55a77479c5d8
|           |   | `-DeclRefExpr 0x55a7749750a0 <col:92> 'T *' lvalue Var 0x55a774971ea8 's' 'T *'
|           |   `-UnaryOperator 0x55a774975170 <col:95, col:96> 'Args' lvalue prefix '*' cannot overflow
|           |     `-CXXThisExpr 0x55a774975160 <col:96> 'Args *' this
|           `-DeclRefExpr 0x55a7749751e8 <col:103> 'Args::Slot *' lvalue Var 0x55a774971b30 'slot_status' 'Args::Slot *'
|-FunctionTemplateDecl 0x55a77494f3d8 <line:739:5, line:745:5> line:740:10 base_read_or_set
| |-TemplateTypeParmDecl 0x55a77494eef8 <line:739:14, col:23> col:23 referenced typename depth 0 index 0 T
| |-TemplateTypeParmDecl 0x55a77494ef78 <col:26, col:35> col:35 referenced typename depth 0 index 1 V
| `-CXXMethodDecl 0x55a77494f338 <line:740:5, line:745:5> line:740:10 base_read_or_set 'void (const char *, int, T &, const V &)'
|   |-ParmVarDecl 0x55a77494f038 <col:27, col:39> col:39 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55a77494f0b8 <col:48, col:52> col:52 referenced flags 'int'
|   |-ParmVarDecl 0x55a77494f158 <col:59, col:62> col:62 referenced variable 'T &'
|   |-ParmVarDecl 0x55a77494f1f8 <col:72, col:81> col:81 referenced value 'const V &'
|   `-CompoundStmt 0x55a774976130 <col:88, line:745:5>
|     |-DeclStmt 0x55a774975328 <line:741:9, col:26>
|     | `-VarDecl 0x55a7749752c0 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     |-DeclStmt 0x55a774975548 <line:742:9, col:55>
|     | `-VarDecl 0x55a774975350 <col:9, col:54> col:16 referenced str 'String' cinit destroyed
|     |   `-ExprWithCleanups 0x55a774975530 <col:22, col:54> 'String'
|     |     `-CXXConstructExpr 0x55a774975500 <col:22, col:54> 'String' 'void (String &&)' elidable
|     |       `-MaterializeTemporaryExpr 0x55a7749754e8 <col:22, col:54> 'String' xvalue
|     |         `-CXXBindTemporaryExpr 0x55a7749754c8 <col:22, col:54> 'String' (CXXTemporary 0x55a7749754c8)
|     |           `-CXXMemberCallExpr 0x55a774975458 <col:22, col:54> 'String'
|     |             |-MemberExpr 0x55a7749753c8 <col:22> '<bound member function type>' ->find 0x55a77496b4a8
|     |             | `-CXXThisExpr 0x55a7749753b8 <col:22> 'Args *' implicit this
|     |             |-ImplicitCastExpr 0x55a774975490 <col:27> 'const char *' <LValueToRValue>
|     |             | `-DeclRefExpr 0x55a7749753f8 <col:27> 'const char *' lvalue ParmVar 0x55a77494f038 'keyword' 'const char *'
|     |             |-ImplicitCastExpr 0x55a7749754a8 <col:36> 'int' <LValueToRValue>
|     |             | `-DeclRefExpr 0x55a774975418 <col:36> 'int' lvalue ParmVar 0x55a77494f0b8 'flags' 'int'
|     |             `-DeclRefExpr 0x55a774975438 <col:43> 'Args::Slot *' lvalue Var 0x55a7749752c0 'slot_status' 'Args::Slot *'
|     |-DeclStmt 0x55a774975920 <line:743:9, col:72>
|     | `-VarDecl 0x55a774975598 <col:9, col:71> col:12 referenced s 'T *' cinit
|     |   `-CallExpr 0x55a7749758f0 <col:16, col:71> '<dependent type>'
|     |     |-CXXDependentScopeMemberExpr 0x55a774975860 <col:16, col:51> '<dependent type>' lvalue ->slot
|     |     |-DeclRefExpr 0x55a7749758a8 <col:56> 'T' lvalue ParmVar 0x55a77494f158 'variable' 'T &'
|     |     `-UnaryOperator 0x55a7749758d8 <col:66, col:67> 'Args' lvalue prefix '*' cannot overflow
|     |       `-CXXThisExpr 0x55a7749758c8 <col:67> 'Args *' this
|     `-CallExpr 0x55a774976100 <line:744:9, col:139> '<dependent type>'
|       |-MemberExpr 0x55a774975948 <col:9> '<bound member function type>' ->postparse 0x55a77496b6b8
|       | `-CXXThisExpr 0x55a774975938 <col:9> 'Args *' implicit this
|       |-BinaryOperator 0x55a7749760c0 <col:19, col:125> '<dependent type>' '&&'
|       | |-DeclRefExpr 0x55a774975978 <col:19> 'T *' lvalue Var 0x55a774975598 's' 'T *'
|       | `-ParenExpr 0x55a7749760a0 <col:24, col:125> '<dependent type>'
|       |   `-ConditionalOperator 0x55a774976070 <col:25, col:124> '<dependent type>'
|       |     |-ImplicitCastExpr 0x55a774976058 <col:25> 'bool' <MemberPointerToBoolean>
|       |     | `-ImplicitCastExpr 0x55a774976040 <col:25> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |     |   `-CXXMemberCallExpr 0x55a774976020 <col:25> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     |     `-MemberExpr 0x55a774975ff0 <col:25> '<bound member function type>' .operator int (String::*)() const 0x55a7745a97e8
|       |     |       `-ImplicitCastExpr 0x55a774975fd8 <col:25> 'const String' lvalue <NoOp>
|       |     |         `-DeclRefExpr 0x55a774975998 <col:25> 'String' lvalue Var 0x55a774975350 'str' 'String'
|       |     |-CallExpr 0x55a774975e48 <col:31, col:103> '<dependent type>'
|       |     | |-CXXDependentScopeMemberExpr 0x55a774975c20 <col:31, col:66> '<dependent type>' lvalue ->parse
|       |     | |-CXXUnresolvedConstructExpr 0x55a774975d20 <col:72, col:86> 'DefaultArg<T>' 'DefaultArg<T>'
|       |     | |-DeclRefExpr 0x55a774975d40 <col:89> 'String' lvalue Var 0x55a774975350 'str' 'String'
|       |     | |-CXXOperatorCallExpr 0x55a774975df0 <col:94, col:95> '<dependent type>'
|       |     | | |-UnresolvedLookupExpr 0x55a774975d80 <col:94> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55a77479d918 0x55a77479d538 0x55a77479d168 0x55a77479cd88 0x55a77479c9a8 0x55a77479c5d8
|       |     | | `-DeclRefExpr 0x55a774975d60 <col:95> 'T *' lvalue Var 0x55a774975598 's' 'T *'
|       |     | `-UnaryOperator 0x55a774975e30 <col:98, col:99> 'Args' lvalue prefix '*' cannot overflow
|       |     |   `-CXXThisExpr 0x55a774975e20 <col:99> 'Args *' this
|       |     `-ParenExpr 0x55a774975fb8 <col:107, col:124> '<dependent type>'
|       |       `-BinaryOperator 0x55a774975f98 <col:108, col:120> '<dependent type>' ','
|       |         |-BinaryOperator 0x55a774975f68 <col:108, col:113> '<dependent type>' '='
|       |         | |-CXXOperatorCallExpr 0x55a774975f18 <col:108, col:109> '<dependent type>'
|       |         | | |-UnresolvedLookupExpr 0x55a774975ea8 <col:108> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55a77479d918 0x55a77479d538 0x55a77479d168 0x55a77479cd88 0x55a77479c9a8 0x55a77479c5d8
|       |         | | `-DeclRefExpr 0x55a774975e88 <col:109> 'T *' lvalue Var 0x55a774975598 's' 'T *'
|       |         | `-DeclRefExpr 0x55a774975f48 <col:113> 'const V' lvalue ParmVar 0x55a77494f1f8 'value' 'const V &'
|       |         `-CXXBoolLiteralExpr 0x55a774975f88 <col:120> 'bool' true
|       `-DeclRefExpr 0x55a7749760e0 <col:128> 'Args::Slot *' lvalue Var 0x55a7749752c0 'slot_status' 'Args::Slot *'
|-FunctionTemplateDecl 0x55a77494f908 <line:747:5, line:754:5> line:748:10 base_read
| |-TemplateTypeParmDecl 0x55a77494f450 <line:747:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55a77494f4c8 <col:26, col:35> col:35 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55a77494f868 <line:748:5, line:754:5> line:748:10 base_read 'void (const char *, int, P, T &)'
|   |-ParmVarDecl 0x55a77494f588 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55a77494f608 <col:41, col:45> col:45 referenced flags 'int'
|   |-ParmVarDecl 0x55a77494f680 <col:52, col:54> col:54 referenced parser 'P'
|   |-ParmVarDecl 0x55a77494f728 <col:62, col:65> col:65 referenced variable 'T &'
|   `-CompoundStmt 0x55a774976d28 <col:75, line:754:5>
|     |-DeclStmt 0x55a7749761d8 <line:749:9, col:26>
|     | `-VarDecl 0x55a774976170 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     `-IfStmt 0x55a774976cf0 <line:750:9, line:753:9> has_var
|       |-DeclStmt 0x55a774976d10 <line:750:13, col:58>
|       | `-VarDecl 0x55a774976200 <col:13, col:58> col:20 referenced str 'String' cinit destroyed
|       |   `-ExprWithCleanups 0x55a7749763e0 <col:26, col:58> 'String'
|       |     `-CXXConstructExpr 0x55a7749763b0 <col:26, col:58> 'String' 'void (String &&)' elidable
|       |       `-MaterializeTemporaryExpr 0x55a774976398 <col:26, col:58> 'String' xvalue
|       |         `-CXXBindTemporaryExpr 0x55a774976378 <col:26, col:58> 'String' (CXXTemporary 0x55a774976378)
|       |           `-CXXMemberCallExpr 0x55a774976308 <col:26, col:58> 'String'
|       |             |-MemberExpr 0x55a774976278 <col:26> '<bound member function type>' ->find 0x55a77496b4a8
|       |             | `-CXXThisExpr 0x55a774976268 <col:26> 'Args *' implicit this
|       |             |-ImplicitCastExpr 0x55a774976340 <col:31> 'const char *' <LValueToRValue>
|       |             | `-DeclRefExpr 0x55a7749762a8 <col:31> 'const char *' lvalue ParmVar 0x55a77494f588 'keyword' 'const char *'
|       |             |-ImplicitCastExpr 0x55a774976358 <col:40> 'int' <LValueToRValue>
|       |             | `-DeclRefExpr 0x55a7749762c8 <col:40> 'int' lvalue ParmVar 0x55a77494f608 'flags' 'int'
|       |             `-DeclRefExpr 0x55a7749762e8 <col:47> 'Args::Slot *' lvalue Var 0x55a774976170 'slot_status' 'Args::Slot *'
|       |-ImplicitCastExpr 0x55a774976498 <col:20> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x55a774976480 <col:20> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x55a774976460 <col:20> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x55a774976430 <col:20> '<bound member function type>' .operator int (String::*)() const 0x55a7745a97e8
|       |       `-ImplicitCastExpr 0x55a774976418 <col:20> 'const String' lvalue <NoOp>
|       |         `-DeclRefExpr 0x55a7749763f8 <col:20> 'String' lvalue Var 0x55a774976200 'str' 'String'
|       `-CompoundStmt 0x55a774976cd0 <col:61, line:753:9>
|         |-DeclStmt 0x55a774976870 <line:751:13, col:63>
|         | `-VarDecl 0x55a7749764e8 <col:13, col:62> col:16 referenced s 'T *' cinit
|         |   `-CallExpr 0x55a774976840 <col:20, col:62> '<dependent type>'
|         |     |-CXXDependentScopeMemberExpr 0x55a7749767b0 <col:20, col:42> '<dependent type>' lvalue ->slot
|         |     |-DeclRefExpr 0x55a7749767f8 <col:47> 'T' lvalue ParmVar 0x55a77494f728 'variable' 'T &'
|         |     `-UnaryOperator 0x55a774976828 <col:57, col:58> 'Args' lvalue prefix '*' cannot overflow
|         |       `-CXXThisExpr 0x55a774976818 <col:58> 'Args *' this
|         `-CallExpr 0x55a774976ca0 <line:752:13, col:92> '<dependent type>'
|           |-MemberExpr 0x55a774976898 <col:13> '<bound member function type>' ->postparse 0x55a77496b6b8
|           | `-CXXThisExpr 0x55a774976888 <col:13> 'Args *' implicit this
|           |-BinaryOperator 0x55a774976c60 <col:23, col:78> '<dependent type>' '&&'
|           | |-DeclRefExpr 0x55a7749768c8 <col:23> 'T *' lvalue Var 0x55a7749764e8 's' 'T *'
|           | `-CallExpr 0x55a774976c20 <col:28, col:78> '<dependent type>'
|           |   |-CXXDependentScopeMemberExpr 0x55a774976ab0 <col:28, col:50> '<dependent type>' lvalue ->parse
|           |   |-DeclRefExpr 0x55a774976af8 <col:56> 'P' lvalue ParmVar 0x55a77494f680 'parser' 'P'
|           |   |-DeclRefExpr 0x55a774976b18 <col:64> 'String' lvalue Var 0x55a774976200 'str' 'String'
|           |   |-CXXOperatorCallExpr 0x55a774976bc8 <col:69, col:70> '<dependent type>'
|           |   | |-UnresolvedLookupExpr 0x55a774976b58 <col:69> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55a77479d918 0x55a77479d538 0x55a77479d168 0x55a77479cd88 0x55a77479c9a8 0x55a77479c5d8
|           |   | `-DeclRefExpr 0x55a774976b38 <col:70> 'T *' lvalue Var 0x55a7749764e8 's' 'T *'
|           |   `-UnaryOperator 0x55a774976c08 <col:73, col:74> 'Args' lvalue prefix '*' cannot overflow
|           |     `-CXXThisExpr 0x55a774976bf8 <col:74> 'Args *' this
|           `-DeclRefExpr 0x55a774976c80 <col:81> 'Args::Slot *' lvalue Var 0x55a774976170 'slot_status' 'Args::Slot *'
|-FunctionTemplateDecl 0x55a77494ff68 <line:756:5, line:762:5> line:757:10 base_read_or_set
| |-TemplateTypeParmDecl 0x55a77494f980 <line:756:14, col:23> col:23 referenced typename depth 0 index 0 T
| |-TemplateTypeParmDecl 0x55a77494f9f8 <col:26, col:35> col:35 referenced typename depth 0 index 1 P
| |-TemplateTypeParmDecl 0x55a77494fa78 <col:38, col:47> col:47 referenced typename depth 0 index 2 V
| `-CXXMethodDecl 0x55a77494fec8 <line:757:5, line:762:5> line:757:10 base_read_or_set 'void (const char *, int, P, T &, const V &)'
|   |-ParmVarDecl 0x55a77494fb40 <col:27, col:39> col:39 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55a77494fbc0 <col:48, col:52> col:52 referenced flags 'int'
|   |-ParmVarDecl 0x55a77494fc38 <col:59, col:61> col:61 referenced parser 'P'
|   |-ParmVarDecl 0x55a77494fcd8 <col:69, col:72> col:72 referenced variable 'T &'
|   |-ParmVarDecl 0x55a77494fd78 <col:82, col:91> col:91 referenced value 'const V &'
|   `-CompoundStmt 0x55a774977ab8 <col:98, line:762:5>
|     |-DeclStmt 0x55a774976dc0 <line:758:9, col:26>
|     | `-VarDecl 0x55a774976d58 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     |-DeclStmt 0x55a774976fe0 <line:759:9, col:55>
|     | `-VarDecl 0x55a774976de8 <col:9, col:54> col:16 referenced str 'String' cinit destroyed
|     |   `-ExprWithCleanups 0x55a774976fc8 <col:22, col:54> 'String'
|     |     `-CXXConstructExpr 0x55a774976f98 <col:22, col:54> 'String' 'void (String &&)' elidable
|     |       `-MaterializeTemporaryExpr 0x55a774976f80 <col:22, col:54> 'String' xvalue
|     |         `-CXXBindTemporaryExpr 0x55a774976f60 <col:22, col:54> 'String' (CXXTemporary 0x55a774976f60)
|     |           `-CXXMemberCallExpr 0x55a774976ef0 <col:22, col:54> 'String'
|     |             |-MemberExpr 0x55a774976e60 <col:22> '<bound member function type>' ->find 0x55a77496b4a8
|     |             | `-CXXThisExpr 0x55a774976e50 <col:22> 'Args *' implicit this
|     |             |-ImplicitCastExpr 0x55a774976f28 <col:27> 'const char *' <LValueToRValue>
|     |             | `-DeclRefExpr 0x55a774976e90 <col:27> 'const char *' lvalue ParmVar 0x55a77494fb40 'keyword' 'const char *'
|     |             |-ImplicitCastExpr 0x55a774976f40 <col:36> 'int' <LValueToRValue>
|     |             | `-DeclRefExpr 0x55a774976eb0 <col:36> 'int' lvalue ParmVar 0x55a77494fbc0 'flags' 'int'
|     |             `-DeclRefExpr 0x55a774976ed0 <col:43> 'Args::Slot *' lvalue Var 0x55a774976d58 'slot_status' 'Args::Slot *'
|     |-DeclStmt 0x55a774977400 <line:760:9, col:59>
|     | `-VarDecl 0x55a774977038 <col:9, col:58> col:12 referenced s 'T *' cinit
|     |   `-CallExpr 0x55a7749773d0 <col:16, col:58> '<dependent type>'
|     |     |-CXXDependentScopeMemberExpr 0x55a774977340 <col:16, col:38> '<dependent type>' lvalue ->slot
|     |     |-DeclRefExpr 0x55a774977388 <col:43> 'T' lvalue ParmVar 0x55a77494fcd8 'variable' 'T &'
|     |     `-UnaryOperator 0x55a7749773b8 <col:53, col:54> 'Args' lvalue prefix '*' cannot overflow
|     |       `-CXXThisExpr 0x55a7749773a8 <col:54> 'Args *' this
|     `-CallExpr 0x55a774977a88 <line:761:9, col:117> '<dependent type>'
|       |-MemberExpr 0x55a774977428 <col:9> '<bound member function type>' ->postparse 0x55a77496b6b8
|       | `-CXXThisExpr 0x55a774977418 <col:9> 'Args *' implicit this
|       |-BinaryOperator 0x55a774977a48 <col:19, col:103> '<dependent type>' '&&'
|       | |-DeclRefExpr 0x55a774977458 <col:19> 'T *' lvalue Var 0x55a774977038 's' 'T *'
|       | `-ParenExpr 0x55a774977a28 <col:24, col:103> '<dependent type>'
|       |   `-ConditionalOperator 0x55a7749779f8 <col:25, col:102> '<dependent type>'
|       |     |-ImplicitCastExpr 0x55a7749779e0 <col:25> 'bool' <MemberPointerToBoolean>
|       |     | `-ImplicitCastExpr 0x55a7749779c8 <col:25> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |     |   `-CXXMemberCallExpr 0x55a7749779a8 <col:25> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     |     `-MemberExpr 0x55a774977978 <col:25> '<bound member function type>' .operator int (String::*)() const 0x55a7745a97e8
|       |     |       `-ImplicitCastExpr 0x55a774977960 <col:25> 'const String' lvalue <NoOp>
|       |     |         `-DeclRefExpr 0x55a774977478 <col:25> 'String' lvalue Var 0x55a774976de8 'str' 'String'
|       |     |-CallExpr 0x55a7749777d0 <col:31, col:81> '<dependent type>'
|       |     | |-CXXDependentScopeMemberExpr 0x55a774977660 <col:31, col:53> '<dependent type>' lvalue ->parse
|       |     | |-DeclRefExpr 0x55a7749776a8 <col:59> 'P' lvalue ParmVar 0x55a77494fc38 'parser' 'P'
|       |     | |-DeclRefExpr 0x55a7749776c8 <col:67> 'String' lvalue Var 0x55a774976de8 'str' 'String'
|       |     | |-CXXOperatorCallExpr 0x55a774977778 <col:72, col:73> '<dependent type>'
|       |     | | |-UnresolvedLookupExpr 0x55a774977708 <col:72> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55a77479d918 0x55a77479d538 0x55a77479d168 0x55a77479cd88 0x55a77479c9a8 0x55a77479c5d8
|       |     | | `-DeclRefExpr 0x55a7749776e8 <col:73> 'T *' lvalue Var 0x55a774977038 's' 'T *'
|       |     | `-UnaryOperator 0x55a7749777b8 <col:76, col:77> 'Args' lvalue prefix '*' cannot overflow
|       |     |   `-CXXThisExpr 0x55a7749777a8 <col:77> 'Args *' this
|       |     `-ParenExpr 0x55a774977940 <col:85, col:102> '<dependent type>'
|       |       `-BinaryOperator 0x55a774977920 <col:86, col:98> '<dependent type>' ','
|       |         |-BinaryOperator 0x55a7749778f0 <col:86, col:91> '<dependent type>' '='
|       |         | |-CXXOperatorCallExpr 0x55a7749778a0 <col:86, col:87> '<dependent type>'
|       |         | | |-UnresolvedLookupExpr 0x55a774977830 <col:86> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55a77479d918 0x55a77479d538 0x55a77479d168 0x55a77479cd88 0x55a77479c9a8 0x55a77479c5d8
|       |         | | `-DeclRefExpr 0x55a774977810 <col:87> 'T *' lvalue Var 0x55a774977038 's' 'T *'
|       |         | `-DeclRefExpr 0x55a7749778d0 <col:91> 'const V' lvalue ParmVar 0x55a77494fd78 'value' 'const V &'
|       |         `-CXXBoolLiteralExpr 0x55a774977910 <col:98> 'bool' true
|       `-DeclRefExpr 0x55a774977a68 <col:106> 'Args::Slot *' lvalue Var 0x55a774976d58 'slot_status' 'Args::Slot *'
|-FunctionTemplateDecl 0x55a7749505d8 <line:764:5, line:773:5> line:765:10 base_read
| |-TemplateTypeParmDecl 0x55a77494ffe8 <line:764:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55a774950068 <col:26, col:35> col:35 referenced typename depth 0 index 1 T1
| |-TemplateTypeParmDecl 0x55a7749500e8 <col:39, col:48> col:48 referenced typename depth 0 index 2 T2
| `-CXXMethodDecl 0x55a774950538 <line:765:5, line:773:5> line:765:10 base_read 'void (const char *, int, P, T1 &, T2 &)'
|   |-ParmVarDecl 0x55a7749501b0 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55a774950230 <col:41, col:45> col:45 referenced flags 'int'
|   |-ParmVarDecl 0x55a7749502a8 <line:766:20, col:22> col:22 referenced parser 'P'
|   |-ParmVarDecl 0x55a774950348 <col:30, col:34> col:34 referenced variable1 'T1 &'
|   |-ParmVarDecl 0x55a7749503e8 <col:45, col:49> col:49 referenced variable2 'T2 &'
|   `-CompoundStmt 0x55a774978a98 <col:60, line:773:5>
|     |-DeclStmt 0x55a774977b60 <line:767:9, col:26>
|     | `-VarDecl 0x55a774977af8 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     `-IfStmt 0x55a774978a60 <line:768:9, line:772:9> has_var
|       |-DeclStmt 0x55a774978a80 <line:768:13, col:58>
|       | `-VarDecl 0x55a774977b88 <col:13, col:58> col:20 referenced str 'String' cinit destroyed
|       |   `-ExprWithCleanups 0x55a774977d68 <col:26, col:58> 'String'
|       |     `-CXXConstructExpr 0x55a774977d38 <col:26, col:58> 'String' 'void (String &&)' elidable
|       |       `-MaterializeTemporaryExpr 0x55a774977d20 <col:26, col:58> 'String' xvalue
|       |         `-CXXBindTemporaryExpr 0x55a774977d00 <col:26, col:58> 'String' (CXXTemporary 0x55a774977d00)
|       |           `-CXXMemberCallExpr 0x55a774977c90 <col:26, col:58> 'String'
|       |             |-MemberExpr 0x55a774977c00 <col:26> '<bound member function type>' ->find 0x55a77496b4a8
|       |             | `-CXXThisExpr 0x55a774977bf0 <col:26> 'Args *' implicit this
|       |             |-ImplicitCastExpr 0x55a774977cc8 <col:31> 'const char *' <LValueToRValue>
|       |             | `-DeclRefExpr 0x55a774977c30 <col:31> 'const char *' lvalue ParmVar 0x55a7749501b0 'keyword' 'const char *'
|       |             |-ImplicitCastExpr 0x55a774977ce0 <col:40> 'int' <LValueToRValue>
|       |             | `-DeclRefExpr 0x55a774977c50 <col:40> 'int' lvalue ParmVar 0x55a774950230 'flags' 'int'
|       |             `-DeclRefExpr 0x55a774977c70 <col:47> 'Args::Slot *' lvalue Var 0x55a774977af8 'slot_status' 'Args::Slot *'
|       |-ImplicitCastExpr 0x55a774977e20 <col:20> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x55a774977e08 <col:20> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x55a774977de8 <col:20> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x55a774977db8 <col:20> '<bound member function type>' .operator int (String::*)() const 0x55a7745a97e8
|       |       `-ImplicitCastExpr 0x55a774977da0 <col:20> 'const String' lvalue <NoOp>
|       |         `-DeclRefExpr 0x55a774977d80 <col:20> 'String' lvalue Var 0x55a774977b88 'str' 'String'
|       `-CompoundStmt 0x55a774978a38 <col:61, line:772:9>
|         |-DeclStmt 0x55a774978160 <line:769:13, col:66>
|         | `-VarDecl 0x55a774977e78 <col:13, col:65> col:17 referenced s1 'T1 *' cinit
|         |   `-CallExpr 0x55a774978130 <col:22, col:65> '<dependent type>'
|         |     |-CXXDependentScopeMemberExpr 0x55a7749780a0 <col:22, col:44> '<dependent type>' lvalue ->slot
|         |     |-DeclRefExpr 0x55a7749780e8 <col:49> 'T1' lvalue ParmVar 0x55a774950348 'variable1' 'T1 &'
|         |     `-UnaryOperator 0x55a774978118 <col:60, col:61> 'Args' lvalue prefix '*' cannot overflow
|         |       `-CXXThisExpr 0x55a774978108 <col:61> 'Args *' this
|         |-DeclStmt 0x55a7749784d0 <line:770:13, col:66>
|         | `-VarDecl 0x55a7749781e8 <col:13, col:65> col:17 referenced s2 'T2 *' cinit
|         |   `-CallExpr 0x55a7749784a0 <col:22, col:65> '<dependent type>'
|         |     |-CXXDependentScopeMemberExpr 0x55a774978410 <col:22, col:44> '<dependent type>' lvalue ->slot
|         |     |-DeclRefExpr 0x55a774978458 <col:49> 'T2' lvalue ParmVar 0x55a7749503e8 'variable2' 'T2 &'
|         |     `-UnaryOperator 0x55a774978488 <col:60, col:61> 'Args' lvalue prefix '*' cannot overflow
|         |       `-CXXThisExpr 0x55a774978478 <col:61> 'Args *' this
|         `-CallExpr 0x55a774978a08 <line:771:13, col:105> '<dependent type>'
|           |-MemberExpr 0x55a7749784f8 <col:13> '<bound member function type>' ->postparse 0x55a77496b6b8
|           | `-CXXThisExpr 0x55a7749784e8 <col:13> 'Args *' implicit this
|           |-BinaryOperator 0x55a7749789c8 <col:23, col:91> '<dependent type>' '&&'
|           | |-BinaryOperator 0x55a774978568 <col:23, col:29> '<dependent type>' '&&'
|           | | |-DeclRefExpr 0x55a774978528 <col:23> 'T1 *' lvalue Var 0x55a774977e78 's1' 'T1 *'
|           | | `-DeclRefExpr 0x55a774978548 <col:29> 'T2 *' lvalue Var 0x55a7749781e8 's2' 'T2 *'
|           | `-CallExpr 0x55a774978980 <col:35, col:91> '<dependent type>'
|           |   |-CXXDependentScopeMemberExpr 0x55a774978750 <col:35, col:57> '<dependent type>' lvalue ->parse
|           |   |-DeclRefExpr 0x55a774978798 <col:63> 'P' lvalue ParmVar 0x55a7749502a8 'parser' 'P'
|           |   |-DeclRefExpr 0x55a7749787b8 <col:71> 'String' lvalue Var 0x55a774977b88 'str' 'String'
|           |   |-CXXOperatorCallExpr 0x55a774978868 <col:76, col:77> '<dependent type>'
|           |   | |-UnresolvedLookupExpr 0x55a7749787f8 <col:76> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55a77479d918 0x55a77479d538 0x55a77479d168 0x55a77479cd88 0x55a77479c9a8 0x55a77479c5d8
|           |   | `-DeclRefExpr 0x55a7749787d8 <col:77> 'T1 *' lvalue Var 0x55a774977e78 's1' 'T1 *'
|           |   |-CXXOperatorCallExpr 0x55a774978928 <col:81, col:82> '<dependent type>'
|           |   | |-UnresolvedLookupExpr 0x55a7749788b8 <col:81> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55a77479d918 0x55a77479d538 0x55a77479d168 0x55a77479cd88 0x55a77479c9a8 0x55a77479c5d8
|           |   | `-DeclRefExpr 0x55a774978898 <col:82> 'T2 *' lvalue Var 0x55a7749781e8 's2' 'T2 *'
|           |   `-UnaryOperator 0x55a774978968 <col:86, col:87> 'Args' lvalue prefix '*' cannot overflow
|           |     `-CXXThisExpr 0x55a774978958 <col:87> 'Args *' this
|           `-DeclRefExpr 0x55a7749789e8 <col:94> 'Args::Slot *' lvalue Var 0x55a774977af8 'slot_status' 'Args::Slot *'
|-FunctionTemplateDecl 0x55a7749509c8 <line:775:5, line:780:5> line:776:10 base_read_with
| |-TemplateTypeParmDecl 0x55a774950658 <line:775:14, col:23> col:23 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x55a774950928 <line:776:5, line:780:5> line:776:10 base_read_with 'void (const char *, int, P)'
|   |-ParmVarDecl 0x55a774950710 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55a774950790 <col:46, col:50> col:50 referenced flags 'int'
|   |-ParmVarDecl 0x55a774950808 <col:57, col:59> col:59 referenced parser 'P'
|   `-CompoundStmt 0x55a774978fb0 <col:67, line:780:5>
|     |-DeclStmt 0x55a774978b30 <line:777:9, col:26>
|     | `-VarDecl 0x55a774978ac8 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     `-IfStmt 0x55a774978f78 <line:778:9, line:779:60> has_var
|       |-DeclStmt 0x55a774978f98 <line:778:13, col:58>
|       | `-VarDecl 0x55a774978b58 <col:13, col:58> col:20 referenced str 'String' cinit destroyed
|       |   `-ExprWithCleanups 0x55a774978d38 <col:26, col:58> 'String'
|       |     `-CXXConstructExpr 0x55a774978d08 <col:26, col:58> 'String' 'void (String &&)' elidable
|       |       `-MaterializeTemporaryExpr 0x55a774978cf0 <col:26, col:58> 'String' xvalue
|       |         `-CXXBindTemporaryExpr 0x55a774978cd0 <col:26, col:58> 'String' (CXXTemporary 0x55a774978cd0)
|       |           `-CXXMemberCallExpr 0x55a774978c60 <col:26, col:58> 'String'
|       |             |-MemberExpr 0x55a774978bd0 <col:26> '<bound member function type>' ->find 0x55a77496b4a8
|       |             | `-CXXThisExpr 0x55a774978bc0 <col:26> 'Args *' implicit this
|       |             |-ImplicitCastExpr 0x55a774978c98 <col:31> 'const char *' <LValueToRValue>
|       |             | `-DeclRefExpr 0x55a774978c00 <col:31> 'const char *' lvalue ParmVar 0x55a774950710 'keyword' 'const char *'
|       |             |-ImplicitCastExpr 0x55a774978cb0 <col:40> 'int' <LValueToRValue>
|       |             | `-DeclRefExpr 0x55a774978c20 <col:40> 'int' lvalue ParmVar 0x55a774950790 'flags' 'int'
|       |             `-DeclRefExpr 0x55a774978c40 <col:47> 'Args::Slot *' lvalue Var 0x55a774978ac8 'slot_status' 'Args::Slot *'
|       |-ImplicitCastExpr 0x55a774978df0 <col:20> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x55a774978dd8 <col:20> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x55a774978db8 <col:20> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x55a774978d88 <col:20> '<bound member function type>' .operator int (String::*)() const 0x55a7745a97e8
|       |       `-ImplicitCastExpr 0x55a774978d70 <col:20> 'const String' lvalue <NoOp>
|       |         `-DeclRefExpr 0x55a774978d50 <col:20> 'String' lvalue Var 0x55a774978b58 'str' 'String'
|       `-CallExpr 0x55a774978f48 <line:779:13, col:60> '<dependent type>'
|         |-MemberExpr 0x55a774978e18 <col:13> '<bound member function type>' ->postparse 0x55a77496b6b8
|         | `-CXXThisExpr 0x55a774978e08 <col:13> 'Args *' implicit this
|         |-CallExpr 0x55a774978ef8 <col:23, col:46> '<dependent type>'
|         | |-CXXDependentScopeMemberExpr 0x55a774978e68 <col:23, col:30> '<dependent type>' lvalue .parse
|         | | `-DeclRefExpr 0x55a774978e48 <col:23> 'P' lvalue ParmVar 0x55a774950808 'parser' 'P'
|         | |-DeclRefExpr 0x55a774978eb0 <col:36> 'String' lvalue Var 0x55a774978b58 'str' 'String'
|         | `-UnaryOperator 0x55a774978ee0 <col:41, col:42> 'Args' lvalue prefix '*' cannot overflow
|         |   `-CXXThisExpr 0x55a774978ed0 <col:42> 'Args *' this
|         `-DeclRefExpr 0x55a774978f28 <col:49> 'Args::Slot *' lvalue Var 0x55a774978ac8 'slot_status' 'Args::Slot *'
|-FunctionTemplateDecl 0x55a774950d68 <line:782:5, line:792:5> line:783:10 base_read_all_with
| |-TemplateTypeParmDecl 0x55a774950a38 <line:782:14, col:23> col:23 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x55a774950cc8 <line:783:5, line:792:5> line:783:10 base_read_all_with 'void (const char *, int, P)'
|   |-ParmVarDecl 0x55a774950af0 <col:29, col:41> col:41 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55a774950b70 <col:50, col:54> col:54 referenced flags 'int'
|   |-ParmVarDecl 0x55a774950be8 <col:61, col:63> col:63 referenced parser 'P'
|   `-CompoundStmt 0x55a774979920 <col:71, line:792:5>
|     |-DeclStmt 0x55a774979048 <line:784:9, col:26>
|     | `-VarDecl 0x55a774978fe0 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     |-DeclStmt 0x55a774979118 <line:785:9, col:29>
|     | `-VarDecl 0x55a774979078 <col:9, col:28> col:13 referenced read_status 'int' cinit
|     |   `-UnaryOperator 0x55a774979100 <col:27, col:28> 'int' prefix '-'
|     |     `-IntegerLiteral 0x55a7749790e0 <col:28> 'int' 1
|     |-WhileStmt 0x55a7749797d0 <line:786:9, line:790:9> has_var
|     | |-DeclStmt 0x55a7749797f0 <line:786:16, col:61>
|     | | `-VarDecl 0x55a774979140 <col:16, col:61> col:23 referenced str 'String' cinit destroyed
|     | |   `-ExprWithCleanups 0x55a774979320 <col:29, col:61> 'String'
|     | |     `-CXXConstructExpr 0x55a7749792f0 <col:29, col:61> 'String' 'void (String &&)' elidable
|     | |       `-MaterializeTemporaryExpr 0x55a7749792d8 <col:29, col:61> 'String' xvalue
|     | |         `-CXXBindTemporaryExpr 0x55a7749792b8 <col:29, col:61> 'String' (CXXTemporary 0x55a7749792b8)
|     | |           `-CXXMemberCallExpr 0x55a774979248 <col:29, col:61> 'String'
|     | |             |-MemberExpr 0x55a7749791b8 <col:29> '<bound member function type>' ->find 0x55a77496b4a8
|     | |             | `-CXXThisExpr 0x55a7749791a8 <col:29> 'Args *' implicit this
|     | |             |-ImplicitCastExpr 0x55a774979280 <col:34> 'const char *' <LValueToRValue>
|     | |             | `-DeclRefExpr 0x55a7749791e8 <col:34> 'const char *' lvalue ParmVar 0x55a774950af0 'keyword' 'const char *'
|     | |             |-ImplicitCastExpr 0x55a774979298 <col:43> 'int' <LValueToRValue>
|     | |             | `-DeclRefExpr 0x55a774979208 <col:43> 'int' lvalue ParmVar 0x55a774950b70 'flags' 'int'
|     | |             `-DeclRefExpr 0x55a774979228 <col:50> 'Args::Slot *' lvalue Var 0x55a774978fe0 'slot_status' 'Args::Slot *'
|     | |-ImplicitCastExpr 0x55a7749793d8 <col:23> 'bool' <MemberPointerToBoolean>
|     | | `-ImplicitCastExpr 0x55a7749793c0 <col:23> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|     | |   `-CXXMemberCallExpr 0x55a7749793a0 <col:23> 'String::unspecified_bool_type':'int (String::*)() const'
|     | |     `-MemberExpr 0x55a774979370 <col:23> '<bound member function type>' .operator int (String::*)() const 0x55a7745a97e8
|     | |       `-ImplicitCastExpr 0x55a774979358 <col:23> 'const String' lvalue <NoOp>
|     | |         `-DeclRefExpr 0x55a774979338 <col:23> 'String' lvalue Var 0x55a774979140 'str' 'String'
|     | `-CompoundStmt 0x55a7749797a8 <col:64, line:790:9>
|     |   |-CallExpr 0x55a774979530 <line:787:13, col:60> '<dependent type>'
|     |   | |-MemberExpr 0x55a774979400 <col:13> '<bound member function type>' ->postparse 0x55a77496b6b8
|     |   | | `-CXXThisExpr 0x55a7749793f0 <col:13> 'Args *' implicit this
|     |   | |-CallExpr 0x55a7749794e0 <col:23, col:46> '<dependent type>'
|     |   | | |-CXXDependentScopeMemberExpr 0x55a774979450 <col:23, col:30> '<dependent type>' lvalue .parse
|     |   | | | `-DeclRefExpr 0x55a774979430 <col:23> 'P' lvalue ParmVar 0x55a774950be8 'parser' 'P'
|     |   | | |-DeclRefExpr 0x55a774979498 <col:36> 'String' lvalue Var 0x55a774979140 'str' 'String'
|     |   | | `-UnaryOperator 0x55a7749794c8 <col:41, col:42> 'Args' lvalue prefix '*' cannot overflow
|     |   | |   `-CXXThisExpr 0x55a7749794b8 <col:42> 'Args *' this
|     |   | `-DeclRefExpr 0x55a774979510 <col:49> 'Args::Slot *' lvalue Var 0x55a774978fe0 'slot_status' 'Args::Slot *'
|     |   |-BinaryOperator 0x55a7749796c8 <line:788:13, col:49> 'int' lvalue '='
|     |   | |-DeclRefExpr 0x55a774979560 <col:13> 'int' lvalue Var 0x55a774979078 'read_status' 'int'
|     |   | `-ImplicitCastExpr 0x55a7749796b0 <col:27, col:49> 'int' <IntegralCast>
|     |   |   `-BinaryOperator 0x55a774979690 <col:27, col:49> 'bool' '&&'
|     |   |     |-ParenExpr 0x55a7749795f8 <col:27, col:44> 'bool'
|     |   |     | `-BinaryOperator 0x55a7749795d8 <col:28, col:43> 'bool' '!='
|     |   |     |   |-ImplicitCastExpr 0x55a7749795c0 <col:28> 'int' <LValueToRValue>
|     |   |     |   | `-DeclRefExpr 0x55a774979580 <col:28> 'int' lvalue Var 0x55a774979078 'read_status' 'int'
|     |   |     |   `-IntegerLiteral 0x55a7749795a0 <col:43> 'int' 0
|     |   |     `-ImplicitCastExpr 0x55a774979678 <col:49> 'bool' <LValueToRValue>
|     |   |       `-MemberExpr 0x55a774979648 <col:49> 'bool' lvalue ->_read_status 0x55a77492ed80
|     |   |         `-ImplicitCastExpr 0x55a774979628 <col:49> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|     |   |           `-CXXThisExpr 0x55a774979618 <col:49> 'Args *' implicit this
|     |   `-CompoundAssignOperator 0x55a774979778 <line:789:13, col:23> 'int' lvalue '&=' ComputeLHSTy='int' ComputeResultTy='int'
|     |     |-DeclRefExpr 0x55a7749796e8 <col:13> 'int' lvalue ParmVar 0x55a774950b70 'flags' 'int'
|     |     `-UnaryOperator 0x55a774979760 <col:22, col:23> 'int' prefix '~' cannot overflow
|     |       `-ImplicitCastExpr 0x55a774979748 <col:23> 'int' <LValueToRValue>
|     |         `-DeclRefExpr 0x55a774979728 <col:23> 'const int' lvalue Var 0x55a774938618 'mandatory' 'const int' non_odr_use_constant
|     `-BinaryOperator 0x55a774979900 <line:791:9, col:41> 'bool' lvalue '='
|       |-MemberExpr 0x55a774979838 <col:9> 'bool' lvalue ->_read_status 0x55a77492ed80
|       | `-ImplicitCastExpr 0x55a774979818 <col:9> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|       |   `-CXXThisExpr 0x55a774979808 <col:9> 'Args *' implicit this
|       `-ParenExpr 0x55a7749798e0 <col:24, col:41> 'bool'
|         `-BinaryOperator 0x55a7749798c0 <col:25, col:40> 'bool' '=='
|           |-ImplicitCastExpr 0x55a7749798a8 <col:25> 'int' <LValueToRValue>
|           | `-DeclRefExpr 0x55a774979868 <col:25> 'int' lvalue Var 0x55a774979078 'read_status' 'int'
|           `-IntegerLiteral 0x55a774979888 <col:40> 'int' 1
|-FunctionTemplateDecl 0x55a774951248 <line:794:5, line:805:5> line:795:10 base_read_all_with
| |-TemplateTypeParmDecl 0x55a774950dd8 <line:794:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55a774950e58 <col:26, col:35> col:35 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55a7749511a8 <line:795:5, line:805:5> line:795:10 base_read_all_with 'void (const char *, int, P, T &)'
|   |-ParmVarDecl 0x55a774950f18 <col:29, col:41> col:41 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55a774950f98 <col:50, col:54> col:54 referenced flags 'int'
|   |-ParmVarDecl 0x55a774951010 <col:61, col:63> col:63 referenced parser 'P'
|   |-ParmVarDecl 0x55a7749510b8 <col:71, col:74> col:74 referenced variable 'T &'
|   `-CompoundStmt 0x55a77497a8b0 <col:84, line:805:5>
|     |-DeclStmt 0x55a7749799c8 <line:796:9, col:26>
|     | `-VarDecl 0x55a774979960 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     |-DeclStmt 0x55a774979a98 <line:797:9, col:29>
|     | `-VarDecl 0x55a7749799f8 <col:9, col:28> col:13 referenced read_status 'int' cinit
|     |   `-UnaryOperator 0x55a774979a80 <col:27, col:28> 'int' prefix '-'
|     |     `-IntegerLiteral 0x55a774979a60 <col:28> 'int' 1
|     |-DeclStmt 0x55a774979dd0 <line:798:9, col:71>
|     | `-VarDecl 0x55a774979ae8 <col:9, col:70> col:12 referenced s 'T *' cinit
|     |   `-CallExpr 0x55a774979da0 <col:16, col:70> '<dependent type>'
|     |     |-CXXDependentScopeMemberExpr 0x55a774979d10 <col:16, col:38> '<dependent type>' lvalue ->initialized_slot
|     |     |-DeclRefExpr 0x55a774979d58 <col:55> 'T' lvalue ParmVar 0x55a7749510b8 'variable' 'T &'
|     |     `-UnaryOperator 0x55a774979d88 <col:65, col:66> 'Args' lvalue prefix '*' cannot overflow
|     |       `-CXXThisExpr 0x55a774979d78 <col:66> 'Args *' this
|     |-WhileStmt 0x55a77497a760 <line:799:9, line:803:9> has_var
|     | |-DeclStmt 0x55a77497a780 <line:799:16, col:61>
|     | | `-VarDecl 0x55a774979df8 <col:16, col:61> col:23 referenced str 'String' cinit destroyed
|     | |   `-ExprWithCleanups 0x55a774979fd8 <col:29, col:61> 'String'
|     | |     `-CXXConstructExpr 0x55a774979fa8 <col:29, col:61> 'String' 'void (String &&)' elidable
|     | |       `-MaterializeTemporaryExpr 0x55a774979f90 <col:29, col:61> 'String' xvalue
|     | |         `-CXXBindTemporaryExpr 0x55a774979f70 <col:29, col:61> 'String' (CXXTemporary 0x55a774979f70)
|     | |           `-CXXMemberCallExpr 0x55a774979f00 <col:29, col:61> 'String'
|     | |             |-MemberExpr 0x55a774979e70 <col:29> '<bound member function type>' ->find 0x55a77496b4a8
|     | |             | `-CXXThisExpr 0x55a774979e60 <col:29> 'Args *' implicit this
|     | |             |-ImplicitCastExpr 0x55a774979f38 <col:34> 'const char *' <LValueToRValue>
|     | |             | `-DeclRefExpr 0x55a774979ea0 <col:34> 'const char *' lvalue ParmVar 0x55a774950f18 'keyword' 'const char *'
|     | |             |-ImplicitCastExpr 0x55a774979f50 <col:43> 'int' <LValueToRValue>
|     | |             | `-DeclRefExpr 0x55a774979ec0 <col:43> 'int' lvalue ParmVar 0x55a774950f98 'flags' 'int'
|     | |             `-DeclRefExpr 0x55a774979ee0 <col:50> 'Args::Slot *' lvalue Var 0x55a774979960 'slot_status' 'Args::Slot *'
|     | |-ImplicitCastExpr 0x55a77497a090 <col:23> 'bool' <MemberPointerToBoolean>
|     | | `-ImplicitCastExpr 0x55a77497a078 <col:23> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|     | |   `-CXXMemberCallExpr 0x55a77497a058 <col:23> 'String::unspecified_bool_type':'int (String::*)() const'
|     | |     `-MemberExpr 0x55a77497a028 <col:23> '<bound member function type>' .operator int (String::*)() const 0x55a7745a97e8
|     | |       `-ImplicitCastExpr 0x55a77497a010 <col:23> 'const String' lvalue <NoOp>
|     | |         `-DeclRefExpr 0x55a774979ff0 <col:23> 'String' lvalue Var 0x55a774979df8 'str' 'String'
|     | `-CompoundStmt 0x55a77497a738 <col:64, line:803:9>
|     |   |-CallExpr 0x55a77497a4c0 <line:800:13, col:92> '<dependent type>'
|     |   | |-MemberExpr 0x55a77497a0b8 <col:13> '<bound member function type>' ->postparse 0x55a77496b6b8
|     |   | | `-CXXThisExpr 0x55a77497a0a8 <col:13> 'Args *' implicit this
|     |   | |-BinaryOperator 0x55a77497a480 <col:23, col:78> '<dependent type>' '&&'
|     |   | | |-DeclRefExpr 0x55a77497a0e8 <col:23> 'T *' lvalue Var 0x55a774979ae8 's' 'T *'
|     |   | | `-CallExpr 0x55a77497a440 <col:28, col:78> '<dependent type>'
|     |   | |   |-CXXDependentScopeMemberExpr 0x55a77497a2d0 <col:28, col:50> '<dependent type>' lvalue ->parse
|     |   | |   |-DeclRefExpr 0x55a77497a318 <col:56> 'P' lvalue ParmVar 0x55a774951010 'parser' 'P'
|     |   | |   |-DeclRefExpr 0x55a77497a338 <col:64> 'String' lvalue Var 0x55a774979df8 'str' 'String'
|     |   | |   |-CXXOperatorCallExpr 0x55a77497a3e8 <col:69, col:70> '<dependent type>'
|     |   | |   | |-UnresolvedLookupExpr 0x55a77497a378 <col:69> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55a77479d918 0x55a77479d538 0x55a77479d168 0x55a77479cd88 0x55a77479c9a8 0x55a77479c5d8
|     |   | |   | `-DeclRefExpr 0x55a77497a358 <col:70> 'T *' lvalue Var 0x55a774979ae8 's' 'T *'
|     |   | |   `-UnaryOperator 0x55a77497a428 <col:73, col:74> 'Args' lvalue prefix '*' cannot overflow
|     |   | |     `-CXXThisExpr 0x55a77497a418 <col:74> 'Args *' this
|     |   | `-DeclRefExpr 0x55a77497a4a0 <col:81> 'Args::Slot *' lvalue Var 0x55a774979960 'slot_status' 'Args::Slot *'
|     |   |-BinaryOperator 0x55a77497a658 <line:801:13, col:49> 'int' lvalue '='
|     |   | |-DeclRefExpr 0x55a77497a4f0 <col:13> 'int' lvalue Var 0x55a7749799f8 'read_status' 'int'
|     |   | `-ImplicitCastExpr 0x55a77497a640 <col:27, col:49> 'int' <IntegralCast>
|     |   |   `-BinaryOperator 0x55a77497a620 <col:27, col:49> 'bool' '&&'
|     |   |     |-ParenExpr 0x55a77497a588 <col:27, col:44> 'bool'
|     |   |     | `-BinaryOperator 0x55a77497a568 <col:28, col:43> 'bool' '!='
|     |   |     |   |-ImplicitCastExpr 0x55a77497a550 <col:28> 'int' <LValueToRValue>
|     |   |     |   | `-DeclRefExpr 0x55a77497a510 <col:28> 'int' lvalue Var 0x55a7749799f8 'read_status' 'int'
|     |   |     |   `-IntegerLiteral 0x55a77497a530 <col:43> 'int' 0
|     |   |     `-ImplicitCastExpr 0x55a77497a608 <col:49> 'bool' <LValueToRValue>
|     |   |       `-MemberExpr 0x55a77497a5d8 <col:49> 'bool' lvalue ->_read_status 0x55a77492ed80
|     |   |         `-ImplicitCastExpr 0x55a77497a5b8 <col:49> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|     |   |           `-CXXThisExpr 0x55a77497a5a8 <col:49> 'Args *' implicit this
|     |   `-CompoundAssignOperator 0x55a77497a708 <line:802:13, col:23> 'int' lvalue '&=' ComputeLHSTy='int' ComputeResultTy='int'
|     |     |-DeclRefExpr 0x55a77497a678 <col:13> 'int' lvalue ParmVar 0x55a774950f98 'flags' 'int'
|     |     `-UnaryOperator 0x55a77497a6f0 <col:22, col:23> 'int' prefix '~' cannot overflow
|     |       `-ImplicitCastExpr 0x55a77497a6d8 <col:23> 'int' <LValueToRValue>
|     |         `-DeclRefExpr 0x55a77497a6b8 <col:23> 'const int' lvalue Var 0x55a774938618 'mandatory' 'const int' non_odr_use_constant
|     `-BinaryOperator 0x55a77497a890 <line:804:9, col:41> 'bool' lvalue '='
|       |-MemberExpr 0x55a77497a7c8 <col:9> 'bool' lvalue ->_read_status 0x55a77492ed80
|       | `-ImplicitCastExpr 0x55a77497a7a8 <col:9> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|       |   `-CXXThisExpr 0x55a77497a798 <col:9> 'Args *' implicit this
|       `-ParenExpr 0x55a77497a870 <col:24, col:41> 'bool'
|         `-BinaryOperator 0x55a77497a850 <col:25, col:40> 'bool' '=='
|           |-ImplicitCastExpr 0x55a77497a838 <col:25> 'int' <LValueToRValue>
|           | `-DeclRefExpr 0x55a77497a7f8 <col:25> 'int' lvalue Var 0x55a7749799f8 'read_status' 'int'
|           `-IntegerLiteral 0x55a77497a818 <col:40> 'int' 1
|-FunctionTemplateDecl 0x55a774951828 <line:807:5, line:821:5> line:808:10 base_read_all
| |-TemplateTypeParmDecl 0x55a7749512c0 <line:807:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55a774951338 <col:26, col:35> col:35 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55a774951788 <line:808:5, line:821:5> line:808:10 base_read_all 'void (const char *, int, P, Vector<T> &)'
|   |-ParmVarDecl 0x55a7749513f8 <col:24, col:36> col:36 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55a774951478 <col:45, col:49> col:49 referenced flags 'int'
|   |-ParmVarDecl 0x55a7749514f0 <col:56, col:58> col:58 referenced parser 'P'
|   |-ParmVarDecl 0x55a774951640 <col:66, col:77> col:77 referenced variable 'Vector<T> &'
|   `-CompoundStmt 0x55a77497b6b8 <col:87, line:821:5>
|     |-DeclStmt 0x55a77497a960 <line:809:9, col:26>
|     | `-VarDecl 0x55a77497a8f8 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     |-DeclStmt 0x55a77497aa30 <line:810:9, col:29>
|     | `-VarDecl 0x55a77497a990 <col:9, col:28> col:13 referenced read_status 'int' cinit
|     |   `-UnaryOperator 0x55a77497aa18 <col:27, col:28> 'int' prefix '-'
|     |     `-IntegerLiteral 0x55a77497a9f8 <col:28> 'int' 1
|     |-DeclStmt 0x55a77497ac78 <line:811:9, col:38>
|     | `-VarDecl 0x55a77497ab60 <col:9, col:37> col:20 referenced s 'Vector<T> *' cinit
|     |   `-CallExpr 0x55a77497ac50 <col:24, col:37> '<dependent type>'
|     |     |-UnresolvedMemberExpr 0x55a77497abd8 <col:24> '<bound member function type>' lvalue
|     |     `-DeclRefExpr 0x55a77497ac30 <col:29> 'Vector<T>' lvalue ParmVar 0x55a774951640 'variable' 'Vector<T> &'
|     |-WhileStmt 0x55a77497b568 <line:812:9, line:819:9> has_var
|     | |-DeclStmt 0x55a77497b588 <line:812:16, col:61>
|     | | `-VarDecl 0x55a77497aca0 <col:16, col:61> col:23 referenced str 'String' cinit destroyed
|     | |   `-ExprWithCleanups 0x55a77497ae80 <col:29, col:61> 'String'
|     | |     `-CXXConstructExpr 0x55a77497ae50 <col:29, col:61> 'String' 'void (String &&)' elidable
|     | |       `-MaterializeTemporaryExpr 0x55a77497ae38 <col:29, col:61> 'String' xvalue
|     | |         `-CXXBindTemporaryExpr 0x55a77497ae18 <col:29, col:61> 'String' (CXXTemporary 0x55a77497ae18)
|     | |           `-CXXMemberCallExpr 0x55a77497ada8 <col:29, col:61> 'String'
|     | |             |-MemberExpr 0x55a77497ad18 <col:29> '<bound member function type>' ->find 0x55a77496b4a8
|     | |             | `-CXXThisExpr 0x55a77497ad08 <col:29> 'Args *' implicit this
|     | |             |-ImplicitCastExpr 0x55a77497ade0 <col:34> 'const char *' <LValueToRValue>
|     | |             | `-DeclRefExpr 0x55a77497ad48 <col:34> 'const char *' lvalue ParmVar 0x55a7749513f8 'keyword' 'const char *'
|     | |             |-ImplicitCastExpr 0x55a77497adf8 <col:43> 'int' <LValueToRValue>
|     | |             | `-DeclRefExpr 0x55a77497ad68 <col:43> 'int' lvalue ParmVar 0x55a774951478 'flags' 'int'
|     | |             `-DeclRefExpr 0x55a77497ad88 <col:50> 'Args::Slot *' lvalue Var 0x55a77497a8f8 'slot_status' 'Args::Slot *'
|     | |-ImplicitCastExpr 0x55a77497af38 <col:23> 'bool' <MemberPointerToBoolean>
|     | | `-ImplicitCastExpr 0x55a77497af20 <col:23> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|     | |   `-CXXMemberCallExpr 0x55a77497af00 <col:23> 'String::unspecified_bool_type':'int (String::*)() const'
|     | |     `-MemberExpr 0x55a77497aed0 <col:23> '<bound member function type>' .operator int (String::*)() const 0x55a7745a97e8
|     | |       `-ImplicitCastExpr 0x55a77497aeb8 <col:23> 'const String' lvalue <NoOp>
|     | |         `-DeclRefExpr 0x55a77497ae98 <col:23> 'String' lvalue Var 0x55a77497aca0 'str' 'String'
|     | `-CompoundStmt 0x55a77497b530 <col:64, line:819:9>
|     |   |-DeclStmt 0x55a77497aff8 <line:813:13, col:23>
|     |   | `-VarDecl 0x55a77497af60 <col:13, col:22> col:15 referenced sx 'T' cinit
|     |   |   `-CXXUnresolvedConstructExpr 0x55a77497afd8 <col:20, col:22> 'T' 'T'
|     |   |-CallExpr 0x55a77497b178 <line:814:13, col:64> '<dependent type>'
|     |   | |-MemberExpr 0x55a77497b020 <col:13> '<bound member function type>' ->postparse 0x55a77496b6b8
|     |   | | `-CXXThisExpr 0x55a77497b010 <col:13> 'Args *' implicit this
|     |   | |-CallExpr 0x55a77497b120 <col:23, col:50> '<dependent type>'
|     |   | | |-CXXDependentScopeMemberExpr 0x55a77497b070 <col:23, col:30> '<dependent type>' lvalue .parse
|     |   | | | `-DeclRefExpr 0x55a77497b050 <col:23> 'P' lvalue ParmVar 0x55a7749514f0 'parser' 'P'
|     |   | | |-DeclRefExpr 0x55a77497b0b8 <col:36> 'String' lvalue Var 0x55a77497aca0 'str' 'String'
|     |   | | |-DeclRefExpr 0x55a77497b0d8 <col:41> 'T' lvalue Var 0x55a77497af60 'sx' 'T'
|     |   | | `-UnaryOperator 0x55a77497b108 <col:45, col:46> 'Args' lvalue prefix '*' cannot overflow
|     |   | |   `-CXXThisExpr 0x55a77497b0f8 <col:46> 'Args *' this
|     |   | `-DeclRefExpr 0x55a77497b158 <col:53> 'Args::Slot *' lvalue Var 0x55a77497a8f8 'slot_status' 'Args::Slot *'
|     |   |-IfStmt 0x55a77497b2d0 <line:815:13, line:816:32>
|     |   | |-ImplicitCastExpr 0x55a77497b208 <line:815:17> 'bool' <LValueToRValue>
|     |   | | `-MemberExpr 0x55a77497b1d8 <col:17> 'bool' lvalue ->_read_status 0x55a77492ed80
|     |   | |   `-ImplicitCastExpr 0x55a77497b1b8 <col:17> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|     |   | |     `-CXXThisExpr 0x55a77497b1a8 <col:17> 'Args *' implicit this
|     |   | `-CallExpr 0x55a77497b2a8 <line:816:17, col:32> '<dependent type>'
|     |   |   |-CXXDependentScopeMemberExpr 0x55a77497b240 <col:17, col:20> '<dependent type>' lvalue ->push_back
|     |   |   | `-DeclRefExpr 0x55a77497b220 <col:17> 'Vector<T> *' lvalue Var 0x55a77497ab60 's' 'Vector<T> *'
|     |   |   `-DeclRefExpr 0x55a77497b288 <col:30> 'T' lvalue Var 0x55a77497af60 'sx' 'T'
|     |   |-BinaryOperator 0x55a77497b450 <line:817:13, col:49> 'int' lvalue '='
|     |   | |-DeclRefExpr 0x55a77497b2e8 <col:13> 'int' lvalue Var 0x55a77497a990 'read_status' 'int'
|     |   | `-ImplicitCastExpr 0x55a77497b438 <col:27, col:49> 'int' <IntegralCast>
|     |   |   `-BinaryOperator 0x55a77497b418 <col:27, col:49> 'bool' '&&'
|     |   |     |-ParenExpr 0x55a77497b380 <col:27, col:44> 'bool'
|     |   |     | `-BinaryOperator 0x55a77497b360 <col:28, col:43> 'bool' '!='
|     |   |     |   |-ImplicitCastExpr 0x55a77497b348 <col:28> 'int' <LValueToRValue>
|     |   |     |   | `-DeclRefExpr 0x55a77497b308 <col:28> 'int' lvalue Var 0x55a77497a990 'read_status' 'int'
|     |   |     |   `-IntegerLiteral 0x55a77497b328 <col:43> 'int' 0
|     |   |     `-ImplicitCastExpr 0x55a77497b400 <col:49> 'bool' <LValueToRValue>
|     |   |       `-MemberExpr 0x55a77497b3d0 <col:49> 'bool' lvalue ->_read_status 0x55a77492ed80
|     |   |         `-ImplicitCastExpr 0x55a77497b3b0 <col:49> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|     |   |           `-CXXThisExpr 0x55a77497b3a0 <col:49> 'Args *' implicit this
|     |   `-CompoundAssignOperator 0x55a77497b500 <line:818:13, col:23> 'int' lvalue '&=' ComputeLHSTy='int' ComputeResultTy='int'
|     |     |-DeclRefExpr 0x55a77497b470 <col:13> 'int' lvalue ParmVar 0x55a774951478 'flags' 'int'
|     |     `-UnaryOperator 0x55a77497b4e8 <col:22, col:23> 'int' prefix '~' cannot overflow
|     |       `-ImplicitCastExpr 0x55a77497b4d0 <col:23> 'int' <LValueToRValue>
|     |         `-DeclRefExpr 0x55a77497b4b0 <col:23> 'const int' lvalue Var 0x55a774938618 'mandatory' 'const int' non_odr_use_constant
|     `-BinaryOperator 0x55a77497b698 <line:820:9, col:41> 'bool' lvalue '='
|       |-MemberExpr 0x55a77497b5d0 <col:9> 'bool' lvalue ->_read_status 0x55a77492ed80
|       | `-ImplicitCastExpr 0x55a77497b5b0 <col:9> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|       |   `-CXXThisExpr 0x55a77497b5a0 <col:9> 'Args *' implicit this
|       `-ParenExpr 0x55a77497b678 <col:24, col:41> 'bool'
|         `-BinaryOperator 0x55a77497b658 <col:25, col:40> 'bool' '=='
|           |-ImplicitCastExpr 0x55a77497b640 <col:25> 'int' <LValueToRValue>
|           | `-DeclRefExpr 0x55a77497b600 <col:25> 'int' lvalue Var 0x55a77497a990 'read_status' 'int'
|           `-IntegerLiteral 0x55a77497b620 <col:40> 'int' 1
|-AccessSpecDecl 0x55a7749518a0 <line:824:3, col:10> col:3 private
|-CXXRecordDecl 0x55a7749518c8 prev 0x55a774936918 <line:826:5, line:833:5> line:826:12 referenced struct Slot definition
| |-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple non_trivial has_const_param implicit_has_const_param
| | |-MoveConstructor
| | |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| | |-MoveAssignment
| | `-Destructor non_trivial user_declared
| |-CXXRecordDecl 0x55a7749519c0 <col:5, col:12> col:12 implicit referenced struct Slot
| |-CXXConstructorDecl 0x55a774951ab0 <line:827:9, line:828:9> line:827:9 used Slot 'void ()'
| | `-CompoundStmt 0x55a77497b6f0 <col:16, line:828:9>
| |-CXXDestructorDecl 0x55a774951ba0 <line:829:9, line:830:9> line:829:17 used ~Slot 'void () noexcept' virtual
| | `-CompoundStmt 0x55a77497b700 <col:25, line:830:9>
| |-CXXMethodDecl 0x55a774951ca0 <line:831:9, col:32> col:22 store 'void ()' virtual pure
| |-FieldDecl 0x55a774951d50 <line:832:9, col:15> col:15 _next 'Args::Slot *'
| |-CXXMethodDecl 0x55a774951df8 <line:826:12> col:12 implicit operator= 'Args::Slot &(const Args::Slot &)' inline default noexcept-unevaluated 0x55a774951df8
| | `-ParmVarDecl 0x55a774951f08 <col:12> col:12 'const Args::Slot &'
| `-CXXConstructorDecl 0x55a7749526c8 <col:12> col:12 implicit constexpr Slot 'void (const Args::Slot &)' inline default noexcept-unevaluated 0x55a7749526c8
|   `-ParmVarDecl 0x55a7749527d8 <col:12> col:12 'const Args::Slot &'
|-CXXRecordDecl 0x55a774951f78 <line:835:5, line:848:5> line:835:12 struct BytesSlot definition
| |-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor
| | |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveConstructor needs_overload_resolution
| | |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| | |-MoveAssignment needs_overload_resolution
| | `-Destructor non_trivial user_declared needs_overload_resolution
| |-public 'Args::Slot'
| |-CXXRecordDecl 0x55a7749520d8 <col:5, col:12> col:12 implicit referenced struct BytesSlot
| |-CXXConstructorDecl 0x55a7749522d0 <line:836:9, line:838:9> line:836:9 BytesSlot 'void (void *, size_t)'
| | |-ParmVarDecl 0x55a774952180 <col:19, col:25> col:25 used ptr 'void *'
| | |-ParmVarDecl 0x55a7749521f8 <col:30, col:37> col:37 used size 'size_t':'unsigned long'
| | |-CXXCtorInitializer 'Args::Slot'
| | | `-CXXConstructExpr 0x55a77497b8e0 <col:9> 'Args::Slot' 'void ()'
| | |-CXXCtorInitializer Field 0x55a774952588 '_ptr' 'void *'
| | | `-ImplicitCastExpr 0x55a77497b750 <line:837:20> 'void *' <LValueToRValue>
| | |   `-DeclRefExpr 0x55a77497b710 <col:20> 'void *' lvalue ParmVar 0x55a774952180 'ptr' 'void *'
| | |-CXXCtorInitializer Field 0x55a7749525f0 '_slot' 'char *'
| | | `-CXXNewExpr 0x55a77497b7d8 <col:32, col:45> 'char *' array Function 0x55a7743cc478 'operator new[]' 'void *(std::size_t)'
| | |   `-ImplicitCastExpr 0x55a77497b7c0 <col:41> 'size_t':'unsigned long' <LValueToRValue>
| | |     `-DeclRefExpr 0x55a77497b790 <col:41> 'size_t':'unsigned long' lvalue ParmVar 0x55a7749521f8 'size' 'size_t':'unsigned long'
| | |-CXXCtorInitializer Field 0x55a774952650 '_size' 'size_t':'unsigned long'
| | | `-ImplicitCastExpr 0x55a77497b8a0 <col:55> 'size_t':'unsigned long' <LValueToRValue>
| | |   `-DeclRefExpr 0x55a77497b860 <col:55> 'size_t':'unsigned long' lvalue ParmVar 0x55a7749521f8 'size' 'size_t':'unsigned long'
| | `-CompoundStmt 0x55a77497b960 <col:61, line:838:9>
| |-CXXDestructorDecl 0x55a7749523d0 <line:839:9, line:841:9> line:839:9 ~BytesSlot 'void () noexcept'
| | |-Overrides: [ 0x55a774951ba0 Slot::~Slot 'void () noexcept' ]
| | `-CompoundStmt 0x55a77497b9e8 <col:22, line:841:9>
| |   `-CXXDeleteExpr 0x55a77497b9c8 <line:840:13, col:22> 'void' array Function 0x55a7743cc7d8 'operator delete[]' 'void (void *) noexcept'
| |     `-ImplicitCastExpr 0x55a77497b9b0 <col:22> 'char *' <LValueToRValue>
| |       `-MemberExpr 0x55a77497b980 <col:22> 'char *' lvalue ->_slot 0x55a7749525f0
| |         `-CXXThisExpr 0x55a77497b970 <col:22> 'Args::BytesSlot *' implicit this
| |-CXXMethodDecl 0x55a7749524d0 <line:842:9, line:844:9> line:842:14 store 'void ()'
| | |-Overrides: [ 0x55a774951ca0 Slot::store 'void ()' ]
| | `-CompoundStmt 0x55a77497bbd8 <col:22, line:844:9>
| |   `-CallExpr 0x55a77497bb40 <line:843:13, col:38> 'void *'
| |     |-ImplicitCastExpr 0x55a77497bb28 <col:13> 'void *(*)(void *__restrict, const void *__restrict, size_t) throw()' <FunctionToPointerDecay>
| |     | `-DeclRefExpr 0x55a77497bb08 <col:13> 'void *(void *__restrict, const void *__restrict, size_t) throw()' lvalue Function 0x55a7744d8238 'memcpy' 'void *(void *__restrict, const void *__restrict, size_t) throw()'
| |     |-ImplicitCastExpr 0x55a77497bb78 <col:20> 'void *' <LValueToRValue>
| |     | `-MemberExpr 0x55a77497ba58 <col:20> 'void *' lvalue ->_ptr 0x55a774952588
| |     |   `-CXXThisExpr 0x55a77497ba48 <col:20> 'Args::BytesSlot *' implicit this
| |     |-ImplicitCastExpr 0x55a77497bba8 <col:26> 'const void *' <BitCast>
| |     | `-ImplicitCastExpr 0x55a77497bb90 <col:26> 'char *' <LValueToRValue>
| |     |   `-MemberExpr 0x55a77497ba98 <col:26> 'char *' lvalue ->_slot 0x55a7749525f0
| |     |     `-CXXThisExpr 0x55a77497ba88 <col:26> 'Args::BytesSlot *' implicit this
| |     `-ImplicitCastExpr 0x55a77497bbc0 <col:33> 'size_t':'unsigned long' <LValueToRValue>
| |       `-MemberExpr 0x55a77497bad8 <col:33> 'size_t':'unsigned long' lvalue ->_size 0x55a774952650
| |         `-CXXThisExpr 0x55a77497bac8 <col:33> 'Args::BytesSlot *' implicit this
| |-FieldDecl 0x55a774952588 <line:845:9, col:15> col:15 referenced _ptr 'void *'
| |-FieldDecl 0x55a7749525f0 <line:846:9, col:15> col:15 referenced _slot 'char *'
| |-FieldDecl 0x55a774952650 <line:847:9, col:16> col:16 referenced _size 'size_t':'unsigned long'
| |-CXXConstructorDecl 0x55a774952848 <line:835:12> col:12 implicit constexpr BytesSlot 'void (const Args::BytesSlot &)' inline default noexcept-unevaluated 0x55a774952848
| | `-ParmVarDecl 0x55a774952958 <col:12> col:12 'const Args::BytesSlot &'
| `-CXXMethodDecl 0x55a7749529f8 <col:12> col:12 implicit operator= 'Args::BytesSlot &(const Args::BytesSlot &)' inline default noexcept-unevaluated 0x55a7749529f8
|   `-ParmVarDecl 0x55a774952b08 <col:12> col:12 'const Args::BytesSlot &'
|-ClassTemplateDecl 0x55a774952ca8 <line:850:5, line:860:5> line:851:12 SlotT
| |-TemplateTypeParmDecl 0x55a774952b78 <line:850:14, col:23> col:23 referenced typename depth 0 index 0 T
| `-CXXRecordDecl 0x55a774952c18 <line:851:5, line:860:5> line:851:12 struct SlotT definition
|   |-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
|   | |-DefaultConstructor
|   | |-CopyConstructor simple non_trivial has_const_param needs_implicit needs_overload_resolution implicit_has_const_param
|   | |-MoveConstructor exists simple non_trivial needs_implicit needs_overload_resolution
|   | |-CopyAssignment non_trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple non_trivial needs_implicit needs_overload_resolution
|   | `-Destructor simple non_trivial needs_implicit needs_overload_resolution
|   |-public 'Args::Slot'
|   |-CXXRecordDecl 0x55a774952f40 <col:5, col:12> col:12 implicit referenced struct SlotT
|   |-CXXConstructorDecl 0x55a774953138 <line:852:9, line:854:9> line:852:9 SlotT<T> 'void (T *)'
|   | |-ParmVarDecl 0x55a774953008 <col:15, col:18> col:18 referenced ptr 'T *'
|   | |-CXXCtorInitializer Field 0x55a7749532b8 '_ptr' 'T *'
|   | | `-ParenListExpr 0x55a77497bc10 <line:853:19, col:23> 'NULL TYPE'
|   | |   `-DeclRefExpr 0x55a77497bbf0 <col:20> 'T *' lvalue ParmVar 0x55a774953008 'ptr' 'T *'
|   | `-CompoundStmt 0x55a77497bc60 <col:25, line:854:9>
|   |-CXXMethodDecl 0x55a774953208 <line:855:9, line:857:9> line:855:14 store 'void ()'
|   | |-Overrides: [ 0x55a774951ca0 Slot::store 'void ()' ]
|   | `-CompoundStmt 0x55a77497be10 <col:22, line:857:9>
|   |   `-CallExpr 0x55a77497bde0 <line:856:13, col:40> '<dependent type>'
|   |     |-UnresolvedLookupExpr 0x55a77497bc70 <col:13> '<overloaded function type>' lvalue (ADL) = 'assign_consume' 0x55a774590968 0x55a77453ac98
|   |     |-CXXOperatorCallExpr 0x55a77497bd70 <col:28, col:29> '<dependent type>'
|   |     | |-UnresolvedLookupExpr 0x55a77497bd00 <col:28> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55a77479d918 0x55a77479d538 0x55a77479d168 0x55a77479cd88 0x55a77479c9a8 0x55a77479c5d8
|   |     | `-MemberExpr 0x55a77497bcd0 <col:29> 'T *' lvalue ->_ptr 0x55a7749532b8
|   |     |   `-CXXThisExpr 0x55a77497bcc0 <col:29> 'SlotT<T> *' implicit this
|   |     `-MemberExpr 0x55a77497bdb0 <col:35> 'T' lvalue ->_slot 0x55a774953318
|   |       `-CXXThisExpr 0x55a77497bda0 <col:35> 'SlotT<T> *' implicit this
|   |-FieldDecl 0x55a7749532b8 <line:858:9, col:12> col:12 referenced _ptr 'T *'
|   `-FieldDecl 0x55a774953318 <line:859:9, col:11> col:11 referenced _slot 'T'
|-EnumDecl 0x55a774953380 <line:862:5, line:868:5> line:862:5
| `-EnumConstantDecl 0x55a774953480 <line:866:9, col:31> col:9 referenced simple_slotbuf_size 'Args::(anonymous enum at ../dummy_inc/click/args.hh:862:5)'
|   `-ImplicitCastExpr 0x55a7749534d0 <col:31> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55a774953460 <col:31> 'int' Int: 48
|       `-IntegerLiteral 0x55a774953440 <col:31> 'int' 48
|-FieldDecl 0x55a7749534f8 <line:871:5, col:10> col:10 _my_conf 'bool'
|-FieldDecl 0x55a774953558 <line:876:5, col:10> col:10 referenced _status 'bool'
|-FieldDecl 0x55a7749535b8 <line:877:5, col:13> col:13 _simple_slotpos 'uint8_t':'unsigned char'
|-FieldDecl 0x55a7749536f0 <line:879:5, col:21> col:21 referenced _conf 'Vector<String> *'
|-FieldDecl 0x55a77496ad50 <line:880:5, col:17> col:17 referenced _kwpos 'Vector<int>':'Vector<int>'
|-FieldDecl 0x55a77496adb0 <line:882:5, col:11> col:11 referenced _slots 'Args::Slot *'
|-FieldDecl 0x55a77496ae60 <line:883:5, col:48> col:13 referenced _simple_slotbuf 'uint8_t [48]'
|-CXXMethodDecl 0x55a77496b088 <line:885:5, col:54> col:17 initialize 'void (const Vector<String> *)' inline
| `-ParmVarDecl 0x55a77496af90 <col:28, col:50> col:50 conf 'const Vector<String> *'
|-CXXMethodDecl 0x55a77496b1d8 <line:886:5, col:26> col:10 used reset_from 'void (int)'
| `-ParmVarDecl 0x55a77496b148 <col:21, col:25> col:25 i 'int'
|-CXXMethodDecl 0x55a77496b4a8 <line:888:5, col:67> col:12 referenced find 'String (const char *, int, Args::Slot *&)'
| |-ParmVarDecl 0x55a77496b298 <col:17, col:29> col:29 keyword 'const char *'
| |-ParmVarDecl 0x55a77496b318 <col:38, col:42> col:42 flags 'int'
| `-ParmVarDecl 0x55a77496b3c0 <col:49, col:56> col:56 slot_status 'Args::Slot *&'
|-CXXMethodDecl 0x55a77496b6b8 <line:889:5, col:46> col:10 referenced postparse 'void (bool, Args::Slot *)'
| |-ParmVarDecl 0x55a77496b570 <col:20, col:25> col:25 ok 'bool'
| `-ParmVarDecl 0x55a77496b5e8 <col:29, col:35> col:35 slot_status 'Args::Slot *'
|-CXXMethodDecl 0x55a77496b788 <line:890:5, col:25> col:10 check_complete 'void ()'
|-CXXMethodDecl 0x55a77496b8d8 <line:892:5, col:48> col:23 simple_slot_size 'int (int)' static inline
| `-ParmVarDecl 0x55a77496b840 <col:40, col:44> col:44 size 'int'
|-CXXMethodDecl 0x55a77496bc68 <line:893:5, line:894:62> line:893:17 simple_slot_info 'void (int, int, void *&, void **&)' inline
| |-ParmVarDecl 0x55a77496b998 <col:34, col:38> col:38 offset 'int'
| |-ParmVarDecl 0x55a77496ba18 <col:46, col:50> col:50 size 'int'
| |-ParmVarDecl 0x55a77496bac0 <line:894:34, col:41> col:41 slot 'void *&'
| `-ParmVarDecl 0x55a77496bb78 <col:47, col:55> col:55 pointer 'void **&'
|-CXXMethodDecl 0x55a77496be90 <line:895:5, col:46> col:11 referenced simple_slot 'void *(void *, size_t)'
| |-ParmVarDecl 0x55a77496bd40 <col:23, col:29> col:29 data 'void *'
| `-ParmVarDecl 0x55a77496bdb8 <col:35, col:42> col:42 size 'size_t':'unsigned long'
`-FunctionTemplateDecl 0x55a77496c1a8 <line:896:5, col:53> col:29 complex_slot
  |-TemplateTypeParmDecl 0x55a77496bf40 <col:14, col:23> col:23 referenced typename depth 0 index 0 T
  `-CXXMethodDecl 0x55a77496c108 <col:26, col:53> col:29 complex_slot 'T *(T &)'
    `-ParmVarDecl 0x55a77496c018 <col:42, col:45> col:45 variable 'T &'

Layout: <CGRecordLayout
  LLVMType:%class.Args = type { %class.ArgContext.base, i8, i8, i8, %class.Vector.7*, %class.Vector.9, %"struct.Args::Slot"*, [48 x i8] }
  NonVirtualBaseLLVMType:%class.Args = type { %class.ArgContext.base, i8, i8, i8, %class.Vector.7*, %class.Vector.9, %"struct.Args::Slot"*, [48 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class NumArg (empty)
           | [sizeof=1, dsize=1, align=1,
           |  nvsize=1, nvalign=1]

*** Dumping AST Record Layout
         0 | class BandwidthArg
         0 |   class NumArg (base) (empty)
         0 |   int status
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55a774987460 <../dummy_inc/click/args.hh:1013:1, line:1027:1> line:1013:7 referenced class NumArg definition
|-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |-DefaultConstructor exists trivial constexpr defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55a774987578 <col:1, col:7> col:7 implicit class NumArg
|-AccessSpecDecl 0x55a774987608 <col:16, col:22> col:16 public
|-EnumDecl 0x55a774987630 <line:1014:5, line:1026:5> line:1014:5
| |-EnumConstantDecl 0x55a774987730 <line:1015:9, col:21> col:9 status_ok 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| | `-ImplicitCastExpr 0x55a774987980 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a774987710 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x55a7749876f0 <col:21> 'int' 0
| |-EnumConstantDecl 0x55a7749877c0 <line:1016:9, col:24> col:9 referenced status_inval 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| | `-ImplicitCastExpr 0x55a774987998 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a7749877a0 <col:24> 'int' Int: 22
| |     `-IntegerLiteral 0x55a774987780 <col:24> 'int' 22
| |-EnumConstantDecl 0x55a774987850 <line:1017:9, col:24> col:9 referenced status_range 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| | `-ImplicitCastExpr 0x55a7749879b0 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a774987830 <col:24> 'int' Int: 34
| |     `-IntegerLiteral 0x55a774987810 <col:24> 'int' 34
| |-EnumConstantDecl 0x55a7749878e0 <line:1019:9, col:25> col:9 status_notsup 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| | `-ImplicitCastExpr 0x55a7749879c8 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a7749878c0 <col:25> 'int' Int: 95
| |     `-IntegerLiteral 0x55a7749878a0 <col:25> 'int' 95
| `-EnumConstantDecl 0x55a774987930 <line:1025:9> col:9 status_unitless 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
|-CXXConstructorDecl 0x55a774989390 <line:1013:7> col:7 implicit used constexpr NumArg 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55a7749897c8 <col:7>
|-CXXConstructorDecl 0x55a774989498 <col:7> col:7 implicit constexpr NumArg 'void (const NumArg &)' inline default trivial noexcept-unevaluated 0x55a774989498
| `-ParmVarDecl 0x55a7749895a8 <col:7> col:7 'const NumArg &'
|-CXXConstructorDecl 0x55a774989648 <col:7> col:7 implicit used constexpr NumArg 'void (NumArg &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55a774989758 <col:7> col:7 'NumArg &&'
| `-CompoundStmt 0x55a7749edf90 <col:7>
`-CXXDestructorDecl 0x55a77498b8c8 <col:7> col:7 implicit ~NumArg 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.NumArg = type { i8 }
  NonVirtualBaseLLVMType:%class.NumArg = type { i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55a774996690 <../dummy_inc/click/args.hh:1284:1, line:1288:1> line:1284:7 referenced class BandwidthArg definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-public 'NumArg'
|-CXXRecordDecl 0x55a7749967e8 <col:1, col:7> col:7 implicit class BandwidthArg
|-AccessSpecDecl 0x55a774996878 <col:38, col:44> col:38 public
|-CXXMethodDecl 0x55a774996a70 <line:1285:5, col:84> col:10 parse 'bool (const String &, uint32_t &, const ArgContext &)'
| |-ParmVarDecl 0x55a7749968b0 <col:16, col:30> col:30 str 'const String &'
| |-ParmVarDecl 0x55a774996928 <col:35, col:45> col:45 result 'uint32_t &'
| `-ParmVarDecl 0x55a7749969a0 <col:53, col:74> col:72 'const ArgContext &' cinit
|   `-DeclRefExpr 0x55a774996cf0 <col:74> 'const ArgContext' lvalue Var 0x55a77497be38 'blank_args' 'const ArgContext'
|-CXXMethodDecl 0x55a774996bc8 <line:1286:5, col:37> col:19 unparse 'String (uint32_t)' static
| `-ParmVarDecl 0x55a774996b38 <col:27, col:36> col:36 x 'uint32_t':'unsigned int'
|-FieldDecl 0x55a774996c88 <line:1287:5, col:9> col:9 referenced status 'int'
|-CXXConstructorDecl 0x55a7749ed3f0 <line:1284:7> col:7 implicit referenced BandwidthArg 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x55a7749ed4f8 <col:7> col:7 implicit constexpr BandwidthArg 'void (const BandwidthArg &)' inline default trivial noexcept-unevaluated 0x55a7749ed4f8
| `-ParmVarDecl 0x55a7749ed608 <col:7> col:7 'const BandwidthArg &'
|-CXXConstructorDecl 0x55a7749ed6a8 <col:7> col:7 implicit used constexpr BandwidthArg 'void (BandwidthArg &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55a7749ed7b8 <col:7> col:7 used 'BandwidthArg &&'
| |-CXXCtorInitializer 'NumArg'
| | `-CXXConstructExpr 0x55a7749edfa0 <col:7> 'NumArg' 'void (NumArg &&) noexcept'
| |   `-ImplicitCastExpr 0x55a7749edf70 <col:7> 'NumArg' xvalue <UncheckedDerivedToBase (NumArg)>
| |     `-CXXStaticCastExpr 0x55a7749edf40 <col:7> 'BandwidthArg' xvalue static_cast<class BandwidthArg &&> <NoOp>
| |       `-DeclRefExpr 0x55a7749edf10 <col:7> 'BandwidthArg' lvalue ParmVar 0x55a7749ed7b8 '' 'BandwidthArg &&'
| |-CXXCtorInitializer Field 0x55a774996c88 'status' 'int'
| | `-ImplicitCastExpr 0x55a7749ee098 <col:7> 'int' <LValueToRValue>
| |   `-MemberExpr 0x55a7749ee068 <col:7> 'int' xvalue .status 0x55a774996c88
| |     `-CXXStaticCastExpr 0x55a7749ee038 <col:7> 'BandwidthArg' xvalue static_cast<class BandwidthArg &&> <NoOp>
| |       `-DeclRefExpr 0x55a7749ee008 <col:7> 'BandwidthArg' lvalue ParmVar 0x55a7749ed7b8 '' 'BandwidthArg &&'
| `-CompoundStmt 0x55a7749ee0e8 <col:7>
`-CXXDestructorDecl 0x55a7749ed858 <col:7> col:7 implicit referenced ~BandwidthArg 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.BandwidthArg = type { i32 }
  NonVirtualBaseLLVMType:%class.BandwidthArg = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class SecondsArg
         0 |   class NumArg (base) (empty)
         0 |   int fraction_digits
         4 |   int status
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55a774997438 <../dummy_inc/click/args.hh:1310:1, line:1321:1> line:1310:7 referenced class SecondsArg definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-public 'NumArg'
|-CXXRecordDecl 0x55a774997598 <col:1, col:7> col:7 implicit referenced class SecondsArg
|-AccessSpecDecl 0x55a774997628 <col:36, col:42> col:36 public
|-CXXConstructorDecl 0x55a774997738 <line:1311:5, line:1313:5> line:1311:5 used SecondsArg 'void (int)'
| |-ParmVarDecl 0x55a774997668 <col:16, col:24> col:20 used d 'int' cinit
| | `-IntegerLiteral 0x55a77478e9d8 <col:24> 'int' 0
| |-CXXCtorInitializer 'NumArg'
| | `-CXXConstructExpr 0x55a77478ead8 <col:5> 'NumArg' 'void () noexcept'
| |-CXXCtorInitializer Field 0x55a774997f10 'fraction_digits' 'int'
| | `-ImplicitCastExpr 0x55a77478ea98 <line:1312:27> 'int' <LValueToRValue>
| |   `-DeclRefExpr 0x55a77478ea58 <col:27> 'int' lvalue ParmVar 0x55a774997668 'd' 'int'
| `-CompoundStmt 0x55a77478eb48 <col:30, line:1313:5>
|-CXXMethodDecl 0x55a774997988 <line:1314:5, col:99> col:10 parse_saturating 'bool (const String &, uint32_t &, const ArgContext &)'
| |-ParmVarDecl 0x55a7749977f8 <col:27, col:41> col:41 str 'const String &'
| |-ParmVarDecl 0x55a774997870 <col:46, col:56> col:56 result 'uint32_t &'
| `-ParmVarDecl 0x55a7749978e8 <col:64, col:89> col:82 args 'const ArgContext &' cinit
|   `-DeclRefExpr 0x55a77478e9f8 <col:89> 'const ArgContext' lvalue Var 0x55a77497be38 'blank_args' 'const ArgContext'
|-CXXMethodDecl 0x55a774997be0 <line:1315:5, col:88> col:10 parse 'bool (const String &, uint32_t &, const ArgContext &)'
| |-ParmVarDecl 0x55a774997a50 <col:16, col:30> col:30 str 'const String &'
| |-ParmVarDecl 0x55a774997ac8 <col:35, col:45> col:45 result 'uint32_t &'
| `-ParmVarDecl 0x55a774997b40 <col:53, col:78> col:71 args 'const ArgContext &' cinit
|   `-DeclRefExpr 0x55a77478ea18 <col:78> 'const ArgContext' lvalue Var 0x55a77497be38 'blank_args' 'const ArgContext'
|-CXXMethodDecl 0x55a774997e40 <line:1317:5, col:86> col:10 parse 'bool (const String &, double &, const ArgContext &)'
| |-ParmVarDecl 0x55a774997ca8 <col:16, col:30> col:30 str 'const String &'
| |-ParmVarDecl 0x55a774997d28 <col:35, col:43> col:43 result 'double &'
| `-ParmVarDecl 0x55a774997da0 <col:51, col:76> col:69 args 'const ArgContext &' cinit
|   `-DeclRefExpr 0x55a77478ea38 <col:76> 'const ArgContext' lvalue Var 0x55a77497be38 'blank_args' 'const ArgContext'
|-FieldDecl 0x55a774997f10 <line:1319:5, col:9> col:9 referenced fraction_digits 'int'
|-FieldDecl 0x55a77478e970 <line:1320:5, col:9> col:9 referenced status 'int'
|-CXXConstructorDecl 0x55a7749ee788 <line:1310:7> col:7 implicit constexpr SecondsArg 'void (const SecondsArg &)' inline default trivial noexcept-unevaluated 0x55a7749ee788
| `-ParmVarDecl 0x55a7749ee898 <col:7> col:7 'const SecondsArg &'
|-CXXConstructorDecl 0x55a7749ee938 <col:7> col:7 implicit used constexpr SecondsArg 'void (SecondsArg &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55a7749eea48 <col:7> col:7 used 'SecondsArg &&'
| |-CXXCtorInitializer 'NumArg'
| | `-CXXConstructExpr 0x55a7749ef230 <col:7> 'NumArg' 'void (NumArg &&) noexcept'
| |   `-ImplicitCastExpr 0x55a7749ef210 <col:7> 'NumArg' xvalue <UncheckedDerivedToBase (NumArg)>
| |     `-CXXStaticCastExpr 0x55a7749ef1e0 <col:7> 'SecondsArg' xvalue static_cast<class SecondsArg &&> <NoOp>
| |       `-DeclRefExpr 0x55a7749ef1b0 <col:7> 'SecondsArg' lvalue ParmVar 0x55a7749eea48 '' 'SecondsArg &&'
| |-CXXCtorInitializer Field 0x55a774997f10 'fraction_digits' 'int'
| | `-ImplicitCastExpr 0x55a7749ef328 <col:7> 'int' <LValueToRValue>
| |   `-MemberExpr 0x55a7749ef2f8 <col:7> 'int' xvalue .fraction_digits 0x55a774997f10
| |     `-CXXStaticCastExpr 0x55a7749ef2c8 <col:7> 'SecondsArg' xvalue static_cast<class SecondsArg &&> <NoOp>
| |       `-DeclRefExpr 0x55a7749ef298 <col:7> 'SecondsArg' lvalue ParmVar 0x55a7749eea48 '' 'SecondsArg &&'
| |-CXXCtorInitializer Field 0x55a77478e970 'status' 'int'
| | `-ImplicitCastExpr 0x55a7749ef3f8 <col:7> 'int' <LValueToRValue>
| |   `-MemberExpr 0x55a7749ef3c8 <col:7> 'int' xvalue .status 0x55a77478e970
| |     `-CXXStaticCastExpr 0x55a7749ef398 <col:7> 'SecondsArg' xvalue static_cast<class SecondsArg &&> <NoOp>
| |       `-DeclRefExpr 0x55a7749ef368 <col:7> 'SecondsArg' lvalue ParmVar 0x55a7749eea48 '' 'SecondsArg &&'
| `-CompoundStmt 0x55a7749ef450 <col:7>
`-CXXDestructorDecl 0x55a7749eeae8 <col:7> col:7 implicit referenced ~SecondsArg 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.SecondsArg = type { i32, i32 }
  NonVirtualBaseLLVMType:%class.SecondsArg = type { i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | union Packet::Anno
         0 |   char [48] c
         0 |   uint8_t [48] u8
         0 |   uint16_t [24] u16
         0 |   uint32_t [12] u32
         0 |   uint64_t [6] u64
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Packet::AllAnno
         0 |   union Packet::Anno cb
         0 |     char [48] c
         0 |     uint8_t [48] u8
         0 |     uint16_t [24] u16
         0 |     uint32_t [12] u32
         0 |     uint64_t [6] u64
        48 |   unsigned char * mac
        56 |   unsigned char * nh
        64 |   unsigned char * h
        72 |   enum Packet::PacketType pkt_type
        76 |   char [8] timestamp
        88 |   class Packet * next
        96 |   class Packet * prev
           | [sizeof=104, dsize=104, align=8,
           |  nvsize=104, nvalign=8]

*** Dumping AST Record Layout
         0 | class Packet
         0 |   class atomic_uint32_t _use_count
         0 |     uint32_t _val
         8 |   class Packet * _data_packet
        16 |   unsigned char * _head
        24 |   unsigned char * _data
        32 |   unsigned char * _tail
        40 |   unsigned char * _end
        48 |   struct Packet::AllAnno _aa
        48 |     union Packet::Anno cb
        48 |       char [48] c
        48 |       uint8_t [48] u8
        48 |       uint16_t [24] u16
        48 |       uint32_t [12] u32
        48 |       uint64_t [6] u64
        96 |     unsigned char * mac
       104 |     unsigned char * nh
       112 |     unsigned char * h
       120 |     enum Packet::PacketType pkt_type
       124 |     char [8] timestamp
       136 |     class Packet * next
       144 |     class Packet * prev
       152 |   Packet::buffer_destructor_type _destructor
       160 |   void * _destructor_argument
           | [sizeof=168, dsize=168, align=8,
           |  nvsize=168, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55a7747b3278 prev 0x55a7747a8480 <../dummy_inc/click/packet.hh:702:5, line:711:5> line:702:11 referenced union Anno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55a7747b3370 <col:5, col:11> col:11 implicit union Anno
|-FieldDecl 0x55a7747b3460 <line:703:2, col:18> col:7 referenced c 'char [48]'
|-FieldDecl 0x55a7747b3588 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
|-FieldDecl 0x55a7747b3708 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
|-FieldDecl 0x55a7747b3888 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
|-FieldDecl 0x55a7747b3a08 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
|-CXXConstructorDecl 0x55a7747c4838 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55a7747c50a8 <col:11>
|-CXXDestructorDecl 0x55a7747c4910 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x55a7747c4a48 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x55a7747c4a48
| `-ParmVarDecl 0x55a7747c4b58 <col:11> col:11 'const Packet::Anno &'
|-CXXConstructorDecl 0x55a7747c4bf8 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55a7747c4bf8
| `-ParmVarDecl 0x55a7747c4d08 <col:11> col:11 'Packet::Anno &&'
|-CXXMethodDecl 0x55a7747c7ac8 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| |-ParmVarDecl 0x55a7747c7bd8 <col:11> col:11 'const Packet::Anno &'
| `-CompoundStmt 0x55a7747c7e58 <col:11>
|   `-ReturnStmt 0x55a7747c7e48 <col:11>
|     `-UnaryOperator 0x55a7747c7e30 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55a7747c7e20 <col:11> 'Packet::Anno *' this
`-CXXMethodDecl 0x55a7747c7c48 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55a7747c7c48
  `-ParmVarDecl 0x55a7747c7d58 <col:11> col:11 'Packet::Anno &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Packet::Anno" = type { [6 x i64] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55a7747b3a70 <../dummy_inc/click/packet.hh:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55a7747b3b88 <col:5, col:12> col:12 implicit struct AllAnno
|-FieldDecl 0x55a7747b3c28 <line:717:2, col:7> col:7 cb 'Packet::Anno'
|-FieldDecl 0x55a7747b3c90 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
|-FieldDecl 0x55a7747b3cf8 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
|-FieldDecl 0x55a7747b3d60 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
|-FieldDecl 0x55a7747b3dc0 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
|-FieldDecl 0x55a7747b3e80 <line:722:2, col:34> col:7 timestamp 'char [8]'
|-FieldDecl 0x55a7747b3ee0 <line:723:2, col:10> col:10 referenced next 'Packet *'
|-FieldDecl 0x55a7747b3f40 <line:724:2, col:10> col:10 referenced prev 'Packet *'
|-CXXConstructorDecl 0x55a7747c4748 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| |-CXXCtorInitializer Field 0x55a7747b3c28 'cb' 'Packet::Anno'
| | `-CXXConstructExpr 0x55a7747c50b8 <col:12> 'Packet::Anno' 'void () noexcept'
| `-CompoundStmt 0x55a7747c5110 <col:12>
|-CXXConstructorDecl 0x55a7747c4d78 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x55a7747c4d78
| `-ParmVarDecl 0x55a7747c4e88 <col:12> col:12 'const Packet::AllAnno &'
|-CXXConstructorDecl 0x55a7747c4f28 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x55a7747c4f28
| `-ParmVarDecl 0x55a7747c5038 <col:12> col:12 'Packet::AllAnno &&'
`-CXXDestructorDecl 0x55a7747c71b0 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  NonVirtualBaseLLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55a7747a1b90 <../dummy_inc/click/packet.hh:35:1, line:775:1> line:35:7 referenced class Packet definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55a7747a1ca8 <col:1, col:7> col:7 implicit referenced class Packet
|-AccessSpecDecl 0x55a7747a1d38 <col:16, col:22> col:16 public
|-EnumDecl 0x55a7747a1d60 <line:41:5, line:50:5> line:41:5
| |-EnumConstantDecl 0x55a7747a1e60 <line:45:2, col:21> col:2 referenced default_headroom 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| | `-ImplicitCastExpr 0x55a7747a1f40 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a7747a1e40 <col:21> 'int' Int: 28
| |     `-IntegerLiteral 0x55a7747a1e20 <col:21> 'int' 28
| `-EnumConstantDecl 0x55a7747a1ef0 <line:48:2, col:22> col:2 referenced min_buffer_length 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
|   `-ImplicitCastExpr 0x55a7747a1f58 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55a7747a1ed0 <col:22> 'int' Int: 64
|       `-IntegerLiteral 0x55a7747a1eb0 <col:22> 'int' 64
|-CXXMethodDecl 0x55a7747a2298 <line:52:5, line:53:75> line:52:28 used make 'WritablePacket *(uint32_t, const void *, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x55a7747a1f80 <col:33, col:42> col:42 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55a7747a2000 <col:52, col:64> col:64 data 'const void *'
| |-ParmVarDecl 0x55a7747a2078 <line:53:5, col:14> col:14 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55a7747a20f0 <col:22, col:31> col:31 tailroom 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55a7747a2358 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x55a7747a2558 <line:54:5, col:109> col:35 make 'WritablePacket *(const void *, uint32_t)' static inline
| |-ParmVarDecl 0x55a7747a23d0 <col:40, col:52> col:52 data 'const void *'
| |-ParmVarDecl 0x55a7747a2448 <col:58, col:67> col:67 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55a7747a2608 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x55a7747a2768 <line:55:5, col:91> col:35 make 'WritablePacket *(uint32_t)' static inline
| |-ParmVarDecl 0x55a7747a2678 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55a7747a2810 <col:72> warn_unused_result ""
|-TypedefDecl 0x55a7747a2b70 <line:65:5, col:89> col:20 referenced buffer_destructor_type 'void (*)(unsigned char *, size_t, void *)'
| `-PointerType 0x55a7747a2b00 'void (*)(unsigned char *, size_t, void *)'
|   `-ParenType 0x55a7747a2aa0 'void (unsigned char *, size_t, void *)' sugar
|     `-FunctionProtoType 0x55a7747a2a60 'void (unsigned char *, size_t, void *)' cdecl
|       |-BuiltinType 0x55a7742742d0 'void'
|       |-PointerType 0x55a774521f30 'unsigned char *'
|       | `-BuiltinType 0x55a7742743d0 'unsigned char'
|       |-TypedefType 0x55a77431e4c0 'size_t' sugar
|       | |-Typedef 0x55a7742e4b20 'size_t'
|       | `-BuiltinType 0x55a774274430 'unsigned long'
|       `-PointerType 0x55a774274ad0 'void *'
|         `-BuiltinType 0x55a7742742d0 'void'
|-CXXMethodDecl 0x55a7747a2fe8 <line:66:5, line:68:131> line:66:28 make 'WritablePacket *(unsigned char *, uint32_t, Packet::buffer_destructor_type, void *, int, int)' static
| |-ParmVarDecl 0x55a7747a2be0 <col:33, col:48> col:48 data 'unsigned char *'
| |-ParmVarDecl 0x55a7747a2c58 <col:54, col:63> col:63 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55a7747a2cf0 <line:67:5, col:28> col:28 buffer_destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| |-ParmVarDecl 0x55a7747a2d70 <line:68:33, col:58> col:39 argument 'void *' cinit
| | `-CStyleCastExpr 0x55a7747bd6e0 <col:50, col:58> 'void *' <NoOp>
| |   `-ImplicitCastExpr 0x55a7747bd6c8 <col:58> 'void *' <NullToPointer> part_of_explicit_cast
| |     `-IntegerLiteral 0x55a7747bd690 <col:58> 'int' 0
| |-ParmVarDecl 0x55a7747a2df0 <col:61, col:76> col:65 headroom 'int' cinit
| | `-IntegerLiteral 0x55a7747bd708 <col:76> 'int' 0
| |-ParmVarDecl 0x55a7747a2e70 <col:79, col:94> col:83 tailroom 'int' cinit
| | `-IntegerLiteral 0x55a7747bd728 <col:94> 'int' 0
| `-WarnUnusedResultAttr 0x55a7747a30b8 <col:112> warn_unused_result ""
|-CXXMethodDecl 0x55a7747a3138 <line:71:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x55a7747a31f8 <line:73:5, col:50> col:45 used kill 'void ()'
| |-NoInlineAttr 0x55a7747a3298 <col:20>
| `-OptimizeNoneAttr 0x55a7747a32f0 <col:30>
|-CXXMethodDecl 0x55a7747a3368 <line:75:5, col:54> col:45 used shared 'bool () const'
| |-NoInlineAttr 0x55a7747a3408 <col:20>
| `-OptimizeNoneAttr 0x55a7747a3460 <col:30>
|-CXXMethodDecl 0x55a7747a34d8 <line:76:5, col:55> col:13 clone 'Packet *()'
| `-WarnUnusedResultAttr 0x55a7747a3578 <col:36> warn_unused_result ""
|-CXXMethodDecl 0x55a7747a3628 <line:77:5, col:102> col:56 uniqueify 'WritablePacket *()'
| |-NoInlineAttr 0x55a7747a36c8 <col:20>
| |-OptimizeNoneAttr 0x55a7747a3720 <col:30>
| `-WarnUnusedResultAttr 0x55a7747a3748 <col:83> warn_unused_result ""
|-CXXMethodDecl 0x55a7747a37a0 <line:79:5, col:68> col:61 used data 'const unsigned char *() const'
| |-NoInlineAttr 0x55a7747a3840 <col:20>
| `-OptimizeNoneAttr 0x55a7747a3898 <col:30>
|-CXXMethodDecl 0x55a7747a38e8 <line:80:5, col:72> col:61 used end_data 'const unsigned char *() const'
| |-NoInlineAttr 0x55a7747a3988 <col:20>
| `-OptimizeNoneAttr 0x55a7747a39e0 <col:30>
|-CXXMethodDecl 0x55a7747a3a28 <line:81:5, col:58> col:49 length 'uint32_t () const'
| |-NoInlineAttr 0x55a7747a3ac8 <col:20>
| `-OptimizeNoneAttr 0x55a7747a3b20 <col:30>
|-CXXMethodDecl 0x55a7747a3b68 <line:82:5, col:32> col:21 used headroom 'uint32_t () const' inline
|-CXXMethodDecl 0x55a7747a3c28 <line:83:5, col:32> col:21 used tailroom 'uint32_t () const' inline
|-CXXMethodDecl 0x55a7747a3cf0 <line:84:5, col:42> col:33 used buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x55a7747a3db8 <line:85:5, col:46> col:33 used end_buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x55a7747a3e78 <line:86:5, col:37> col:21 used buffer_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55a7747a3f98 <line:97:5, line:99:5> line:97:28 buffer_destructor 'Packet::buffer_destructor_type () const'
| `-CompoundStmt 0x55a7747bd7f0 <col:54, line:99:5>
|   `-ReturnStmt 0x55a7747bd7e0 <line:98:2, col:9>
|     `-ImplicitCastExpr 0x55a7747bd7c8 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-MemberExpr 0x55a7747bd798 <col:9> 'const Packet::buffer_destructor_type':'void (*const)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x55a7747b4278
|         `-CXXThisExpr 0x55a7747bd788 <col:9> 'const Packet *' implicit this
|-CXXMethodDecl 0x55a7747a4138 <line:101:5, line:103:5> line:101:10 set_buffer_destructor 'void (Packet::buffer_destructor_type)'
| |-ParmVarDecl 0x55a7747a4048 <col:32, col:55> col:55 used destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| `-CompoundStmt 0x55a7747bd8a0 <col:67, line:103:5>
|   `-BinaryOperator 0x55a7747bd880 <line:102:9, col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x55a7747bd818 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x55a7747b4278
|     | `-CXXThisExpr 0x55a7747bd808 <col:9> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x55a7747bd868 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-DeclRefExpr 0x55a7747bd848 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ParmVar 0x55a7747a4048 'destructor' 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-CXXMethodDecl 0x55a7747a4230 <line:105:5, line:107:5> line:105:11 destructor_argument 'void *()'
| `-CompoundStmt 0x55a7747bd920 <col:33, line:107:5>
|   `-ReturnStmt 0x55a7747bd910 <line:106:9, col:16>
|     `-ImplicitCastExpr 0x55a7747bd8f8 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x55a7747bd8c8 <col:16> 'void *' lvalue ->_destructor_argument 0x55a7747b42e0
|         `-CXXThisExpr 0x55a7747bd8b8 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x55a7747a42f0 <line:109:5, line:113:5> line:109:10 reset_buffer 'void ()'
| `-CompoundStmt 0x55a7747bdf50 <col:25, line:113:5>
|   |-ParenExpr 0x55a7747bdc98 <line:110:2, col:146> 'void'
|   | `-ConditionalOperator 0x55a7747bdc68 <col:3, col:145> 'void'
|   |   |-CXXStaticCastExpr 0x55a7747bd9d8 <col:3, col:32> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x55a7747bd9b0 <col:23, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-CXXMemberCallExpr 0x55a7747bd978 <col:24, col:31> 'bool'
|   |   |     `-MemberExpr 0x55a7747bd948 <col:24> '<bound member function type>' ->shared 0x55a7747a3368
|   |   |       `-ImplicitCastExpr 0x55a7747bd998 <col:24> 'const Packet *' <NoOp>
|   |   |         `-CXXThisExpr 0x55a7747bd938 <col:24> 'Packet *' implicit this
|   |   |-CXXFunctionalCastExpr 0x55a7747bda38 <col:36, col:43> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55a7747bda18 <col:42> 'int' 0
|   |   `-CallExpr 0x55a7747bdbc8 <col:47, col:145> 'void'
|   |     |-ImplicitCastExpr 0x55a7747bdbb0 <col:47> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55a7747bdb90 <col:47> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55a7743152d0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55a7747bdc08 <col:62> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a7747bdaa8 <col:62> 'const char [10]' lvalue "!shared()"
|   |     |-ImplicitCastExpr 0x55a7747bdc20 <col:75> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a7747bdad0 <col:75> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55a7747bdc38 <col:107> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55a7747bdb08 <col:107> 'int' 110
|   |     `-ImplicitCastExpr 0x55a7747bdc50 <col:112, col:126> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55a7747bdb78 <col:112, col:126> 'const char [28]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55a7747bdb60 <col:126> 'const char [28]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55a7747bdb28 <col:126> 'const char [28]' lvalue "void Packet::reset_buffer()"
|   |-BinaryOperator 0x55a7747bde98 <line:111:2, col:33> 'unsigned char *' lvalue '='
|   | |-MemberExpr 0x55a7747bdcc8 <col:2> 'unsigned char *' lvalue ->_head 0x55a7747b4080
|   | | `-CXXThisExpr 0x55a7747bdcb8 <col:2> 'Packet *' implicit this
|   | `-ImplicitCastExpr 0x55a7747bde80 <col:10, col:33> 'unsigned char *' <LValueToRValue>
|   |   `-BinaryOperator 0x55a7747bde60 <col:10, col:33> 'unsigned char *' lvalue '='
|   |     |-MemberExpr 0x55a7747bdd08 <col:10> 'unsigned char *' lvalue ->_data 0x55a7747b40e8
|   |     | `-CXXThisExpr 0x55a7747bdcf8 <col:10> 'Packet *' implicit this
|   |     `-ImplicitCastExpr 0x55a7747bde48 <col:18, col:33> 'unsigned char *' <LValueToRValue>
|   |       `-BinaryOperator 0x55a7747bde28 <col:18, col:33> 'unsigned char *' lvalue '='
|   |         |-MemberExpr 0x55a7747bdd48 <col:18> 'unsigned char *' lvalue ->_tail 0x55a7747b4150
|   |         | `-CXXThisExpr 0x55a7747bdd38 <col:18> 'Packet *' implicit this
|   |         `-ImplicitCastExpr 0x55a7747bde10 <col:26, col:33> 'unsigned char *' <LValueToRValue>
|   |           `-BinaryOperator 0x55a7747bddf0 <col:26, col:33> 'unsigned char *' lvalue '='
|   |             |-MemberExpr 0x55a7747bdd88 <col:26> 'unsigned char *' lvalue ->_end 0x55a7747b41b8
|   |             | `-CXXThisExpr 0x55a7747bdd78 <col:26> 'Packet *' implicit this
|   |             `-ImplicitCastExpr 0x55a7747bddd8 <col:33> 'unsigned char *' <NullToPointer>
|   |               `-IntegerLiteral 0x55a7747bddb8 <col:33> 'int' 0
|   `-BinaryOperator 0x55a7747bdf30 <line:112:2, col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x55a7747bdec8 <col:2> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x55a7747b4278
|     | `-CXXThisExpr 0x55a7747bdeb8 <col:2> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x55a7747bdf18 <col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <NullToPointer>
|       `-IntegerLiteral 0x55a7747bdef8 <col:16> 'int' 0
|-CXXMethodDecl 0x55a7747a4430 <line:141:5, col:109> col:56 push 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x55a7747a43a0 <col:61, col:70> col:70 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55a7747a44d8 <col:20>
| |-OptimizeNoneAttr 0x55a7747a4530 <col:30>
| `-WarnUnusedResultAttr 0x55a7747a4558 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x55a7747a4628 <line:152:5, col:120> col:56 push_mac_header 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x55a7747a4598 <col:72, col:81> col:81 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55a7747a46d0 <col:20>
| |-OptimizeNoneAttr 0x55a7747a4728 <col:30>
| `-WarnUnusedResultAttr 0x55a7747a4750 <col:101> warn_unused_result ""
|-CXXMethodDecl 0x55a7747a4888 <line:171:5, col:76> col:13 nonunique_push 'Packet *(uint32_t)'
| |-ParmVarDecl 0x55a7747a4790 <col:28, col:37> col:37 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55a7747a4930 <col:57> warn_unused_result ""
|-CXXMethodDecl 0x55a7747a4a30 <line:187:5, col:62> col:45 pull 'void (uint32_t)'
| |-ParmVarDecl 0x55a7747a49a0 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55a7747a4ad8 <col:20>
| `-OptimizeNoneAttr 0x55a7747a4b30 <col:30>
|-CXXMethodDecl 0x55a7747a4bf8 <line:213:5, col:73> col:21 put 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x55a7747a4b68 <col:25, col:34> col:34 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55a7747a4ca0 <col:54> warn_unused_result ""
|-CXXMethodDecl 0x55a7747a4da0 <line:230:5, col:75> col:13 nonunique_put 'Packet *(uint32_t)'
| |-ParmVarDecl 0x55a7747a4d10 <col:27, col:36> col:36 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55a7747a4e48 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x55a7747a4f48 <line:245:5, col:62> col:45 take 'void (uint32_t)'
| |-ParmVarDecl 0x55a7747a4eb8 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55a7747a4ff0 <col:20>
| `-OptimizeNoneAttr 0x55a7747a5048 <col:30>
|-CXXMethodDecl 0x55a7747a51d8 <line:269:5, col:99> col:13 shift_data 'Packet *(int, bool)'
| |-ParmVarDecl 0x55a7747a5088 <col:24, col:28> col:28 offset 'int'
| |-ParmVarDecl 0x55a7747a5100 <col:36, col:59> col:41 free_on_failure 'bool' cinit
| | `-CXXBoolLiteralExpr 0x55a7747bd748 <col:59> 'bool' true
| `-WarnUnusedResultAttr 0x55a7747a5288 <col:80> warn_unused_result ""
|-CXXMethodDecl 0x55a7747a5488 <line:271:5, col:71> col:17 shrink_data 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x55a7747a5300 <col:29, col:50> col:50 data 'const unsigned char *'
| `-ParmVarDecl 0x55a7747a5378 <col:56, col:65> col:65 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55a7747a5698 <line:272:5, col:78> col:17 change_headroom_and_length 'void (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x55a7747a5548 <col:44, col:53> col:53 headroom 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55a7747a55c0 <col:63, col:72> col:72 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55a7747a58a8 <line:274:5, col:40> col:10 copy 'bool (Packet *, int)'
| |-ParmVarDecl 0x55a7747a5758 <col:15, col:23> col:23 p 'Packet *'
| `-ParmVarDecl 0x55a7747a57d8 <col:26, col:39> col:30 headroom 'int' cinit
|   `-IntegerLiteral 0x55a7747bd758 <col:39> 'int' 0
|-CXXMethodDecl 0x55a7747a5978 <line:279:5, col:34> col:17 has_mac_header 'bool () const' inline
|-CXXMethodDecl 0x55a7747a5a40 <line:280:5, col:46> col:33 used mac_header 'const unsigned char *() const' inline
|-CXXMethodDecl 0x55a7747a5b08 <line:281:5, col:36> col:16 mac_header_offset 'int () const' inline
|-CXXMethodDecl 0x55a7747a5bc8 <line:282:5, col:41> col:21 mac_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55a7747a5c90 <line:283:5, col:29> col:16 mac_length 'int () const' inline
|-CXXMethodDecl 0x55a7747a5dd8 <line:284:5, col:54> col:17 set_mac_header 'void (const unsigned char *)' inline
| `-ParmVarDecl 0x55a7747a5d48 <col:32, col:53> col:53 p 'const unsigned char *'
|-CXXMethodDecl 0x55a7747a5fa8 <line:285:5, col:68> col:17 used set_mac_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x55a7747a5e98 <col:32, col:53> col:53 p 'const unsigned char *'
| `-ParmVarDecl 0x55a7747a5f10 <col:56, col:65> col:65 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55a7747a6078 <line:286:5, col:34> col:17 clear_mac_header 'void ()' inline
|-CXXMethodDecl 0x55a7747a6138 <line:288:5, col:66> col:45 has_network_header 'bool () const'
| |-NoInlineAttr 0x55a7747a61d8 <col:20>
| `-OptimizeNoneAttr 0x55a7747a6230 <col:30>
|-CXXMethodDecl 0x55a7747a6280 <line:289:5, col:78> col:61 used network_header 'const unsigned char *() const'
| |-NoInlineAttr 0x55a7747a6320 <col:20>
| `-OptimizeNoneAttr 0x55a7747a6378 <col:30>
|-CXXMethodDecl 0x55a7747a63c8 <line:290:5, col:40> col:16 used network_header_offset 'int () const' inline
|-CXXMethodDecl 0x55a7747a6488 <line:291:5, col:45> col:21 used network_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55a7747a6550 <line:292:5, col:61> col:44 network_length 'int () const'
| |-NoInlineAttr 0x55a7747a65f0 <col:20>
| `-OptimizeNoneAttr 0x55a7747a6648 <col:30>
|-CXXMethodDecl 0x55a7747a6798 <line:293:5, col:72> col:17 set_network_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x55a7747a6688 <col:36, col:57> col:57 p 'const unsigned char *'
| `-ParmVarDecl 0x55a7747a6700 <col:60, col:69> col:69 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55a7747a68e8 <line:294:5, col:55> col:17 set_network_header_length 'void (uint32_t)' inline
| `-ParmVarDecl 0x55a7747a6858 <col:43, col:52> col:52 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55a7747a69c0 <line:295:5, col:38> col:17 clear_network_header 'void ()' inline
|-CXXMethodDecl 0x55a7747a6a80 <line:297:5, col:68> col:45 has_transport_header 'bool () const'
| |-NoInlineAttr 0x55a7747a6b20 <col:20>
| `-OptimizeNoneAttr 0x55a7747a6b78 <col:30>
|-CXXMethodDecl 0x55a7747a6bc8 <line:298:5, col:80> col:61 used transport_header 'const unsigned char *() const'
| |-NoInlineAttr 0x55a7747a6c68 <col:20>
| `-OptimizeNoneAttr 0x55a7747a6cc0 <col:30>
|-CXXMethodDecl 0x55a7747a6d10 <line:299:5, col:42> col:16 transport_header_offset 'int () const' inline
|-CXXMethodDecl 0x55a7747a6dd8 <line:300:5, col:63> col:44 transport_length 'int () const'
| |-NoInlineAttr 0x55a7747a6e78 <col:20>
| `-OptimizeNoneAttr 0x55a7747a6ed0 <col:30>
|-CXXMethodDecl 0x55a7747a6f18 <line:301:5, col:40> col:17 clear_transport_header 'void ()' inline
|-CXXMethodDecl 0x55a7747a7038 <line:304:5, col:46> col:31 ether_header 'const click_ether *() const' inline
|-CXXMethodDecl 0x55a7747a71a8 <line:305:5, col:57> col:17 set_ether_header 'void (const click_ether *)' inline
| `-ParmVarDecl 0x55a7747a70e8 <col:34, col:53> col:53 ethh 'const click_ether *'
|-CXXMethodDecl 0x55a7747a7298 <line:307:5, col:68> col:56 ip_header 'const click_ip *() const'
| |-NoInlineAttr 0x55a7747a7338 <col:20>
| `-OptimizeNoneAttr 0x55a7747a7390 <col:30>
|-CXXMethodDecl 0x55a7747a73e0 <line:308:5, col:35> col:16 ip_header_offset 'int () const' inline
|-CXXMethodDecl 0x55a7747a74a0 <line:309:5, col:40> col:21 ip_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55a7747a76d8 <line:310:5, col:92> col:45 set_ip_header 'void (const click_ip *, uint32_t)'
| |-ParmVarDecl 0x55a7747a7550 <col:59, col:75> col:75 iph 'const click_ip *'
| |-ParmVarDecl 0x55a7747a75c8 <col:80, col:89> col:89 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55a7747a7788 <col:20>
| `-OptimizeNoneAttr 0x55a7747a77e0 <col:30>
|-CXXMethodDecl 0x55a7747a7888 <line:312:5, col:70> col:57 ip6_header 'const click_ip6 *() const'
| |-NoInlineAttr 0x55a7747a7928 <col:20>
| `-OptimizeNoneAttr 0x55a7747a7980 <col:30>
|-CXXMethodDecl 0x55a7747a79d0 <line:313:5, col:64> col:44 ip6_header_offset 'int () const'
| |-NoInlineAttr 0x55a7747a7a70 <col:20>
| `-OptimizeNoneAttr 0x55a7747a7ac8 <col:30>
|-CXXMethodDecl 0x55a7747a7b10 <line:314:5, col:69> col:49 ip6_header_length 'uint32_t () const'
| |-NoInlineAttr 0x55a7747a7bb0 <col:20>
| `-OptimizeNoneAttr 0x55a7747a7c08 <col:30>
|-CXXMethodDecl 0x55a7747a7d08 <line:315:5, col:81> col:45 set_ip6_header 'void (const click_ip6 *)'
| |-ParmVarDecl 0x55a7747a7c40 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-NoInlineAttr 0x55a7747a7db0 <col:20>
| `-OptimizeNoneAttr 0x55a7747a7e08 <col:30>
|-CXXMethodDecl 0x55a7747a7fc8 <line:316:5, col:95> col:45 set_ip6_header 'void (const click_ip6 *, uint32_t)'
| |-ParmVarDecl 0x55a7747a7e40 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-ParmVarDecl 0x55a7747a7eb8 <col:83, col:92> col:92 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55a7747a8078 <col:20>
| `-OptimizeNoneAttr 0x55a7747a80d0 <col:30>
|-CXXMethodDecl 0x55a7747a8178 <line:318:5, col:44> col:30 used icmp_header 'const click_icmp *() const' inline
|-CXXMethodDecl 0x55a7747a8298 <line:319:5, col:42> col:29 used tcp_header 'const click_tcp *() const' inline
|-CXXMethodDecl 0x55a7747a83b8 <line:320:5, col:42> col:29 used udp_header 'const click_udp *() const' inline
|-AccessSpecDecl 0x55a7747a8458 <line:333:3, col:10> col:3 private
|-CXXRecordDecl 0x55a7747a8480 <line:335:5, col:11> col:11 referenced union Anno
|-CXXMethodDecl 0x55a7747a85a8 <line:340:5, col:60> col:52 used xanno 'const Packet::Anno *() const'
| |-NoInlineAttr 0x55a7747a8648 <col:20>
| `-OptimizeNoneAttr 0x55a7747a86a0 <col:30>
|-CXXMethodDecl 0x55a7747a8748 <line:341:5, col:52> col:46 used xanno 'Packet::Anno *()'
| |-NoInlineAttr 0x55a7747a87e8 <col:20>
| `-OptimizeNoneAttr 0x55a7747a8840 <col:30>
|-AccessSpecDecl 0x55a7747a8868 <line:344:3, col:9> col:3 public
|-EnumDecl 0x55a7747a8890 <line:349:5, line:351:5> line:349:5
| `-EnumConstantDecl 0x55a7747a8990 <line:350:2, col:14> col:2 referenced anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   `-ImplicitCastExpr 0x55a7747a89e0 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55a7747a8970 <col:14> 'int' Int: 48
|       `-IntegerLiteral 0x55a7747a8950 <col:14> 'int' 48
|-CXXMethodDecl 0x55a7747a8a48 <line:354:5, col:74> col:57 used timestamp_anno 'const Timestamp &() const'
| |-NoInlineAttr 0x55a7747a8ae8 <col:20>
| `-OptimizeNoneAttr 0x55a7747a8b40 <col:30>
|-CXXMethodDecl 0x55a7747a8bb8 <line:356:5, col:66> col:51 used timestamp_anno 'Timestamp &()'
| |-NoInlineAttr 0x55a7747a8c58 <col:20>
| `-OptimizeNoneAttr 0x55a7747a8cb0 <col:30>
|-CXXMethodDecl 0x55a7747a8d78 <line:359:5, col:54> col:17 used set_timestamp_anno 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x55a7747a8ce8 <col:36, col:53> col:53 t 'const Timestamp &'
|-CXXMethodDecl 0x55a7747a8f18 <line:362:5, col:38> col:24 used device_anno 'net_device *() const' inline
|-CXXMethodDecl 0x55a7747a90b8 <line:364:5, col:48> col:17 used set_device_anno 'void (net_device *)' inline
| `-ParmVarDecl 0x55a7747a8fc8 <col:33, col:45> col:45 dev 'net_device *'
|-EnumDecl 0x55a7747a9160 <line:368:5, line:381:5> line:368:10 referenced PacketType
| |-EnumConstantDecl 0x55a7747a9260 <line:369:2, col:9> col:2 HOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55a7747a9610 <col:9> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a7747a9240 <col:9> 'int' Int: 0
| |     `-IntegerLiteral 0x55a7747a9220 <col:9> 'int' 0
| |-EnumConstantDecl 0x55a7747a92f0 <line:370:2, col:14> col:2 BROADCAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55a7747a9628 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a7747a92d0 <col:14> 'int' Int: 1
| |     `-IntegerLiteral 0x55a7747a92b0 <col:14> 'int' 1
| |-EnumConstantDecl 0x55a7747a9380 <line:372:2, col:14> col:2 MULTICAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55a7747a9640 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a7747a9360 <col:14> 'int' Int: 2
| |     `-IntegerLiteral 0x55a7747a9340 <col:14> 'int' 2
| |-EnumConstantDecl 0x55a7747a9410 <line:374:2, col:14> col:2 OTHERHOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55a7747a9658 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a7747a93f0 <col:14> 'int' Int: 3
| |     `-IntegerLiteral 0x55a7747a93d0 <col:14> 'int' 3
| |-EnumConstantDecl 0x55a7747a94a0 <line:377:2, col:13> col:2 OUTGOING 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55a7747a9670 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a7747a9480 <col:13> 'int' Int: 4
| |     `-IntegerLiteral 0x55a7747a9460 <col:13> 'int' 4
| |-EnumConstantDecl 0x55a7747a9530 <line:379:2, col:13> col:2 LOOPBACK 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55a7747a9688 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a7747a9510 <col:13> 'int' Int: 5
| |     `-IntegerLiteral 0x55a7747a94f0 <col:13> 'int' 5
| `-EnumConstantDecl 0x55a7747a95c0 <line:380:2, col:14> col:2 FASTROUTE 'Packet::PacketType'
|   `-ImplicitCastExpr 0x55a7747a96a0 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55a7747a95a0 <col:14> 'int' Int: 6
|       `-IntegerLiteral 0x55a7747a9580 <col:14> 'int' 6
|-CXXMethodDecl 0x55a7747a9708 <line:383:5, col:70> col:51 used packet_type_anno 'Packet::PacketType () const'
| |-NoInlineAttr 0x55a7747a97a8 <col:20>
| `-OptimizeNoneAttr 0x55a7747a9800 <col:30>
|-CXXMethodDecl 0x55a7747a98f8 <line:385:5, col:78> col:45 used set_packet_type_anno 'void (Packet::PacketType)'
| |-ParmVarDecl 0x55a7747a9838 <col:66, col:77> col:77 t 'Packet::PacketType'
| |-NoInlineAttr 0x55a7747a99a0 <col:20>
| `-OptimizeNoneAttr 0x55a7747a99f8 <col:30>
|-CXXMethodDecl 0x55a7747a9a68 <line:410:5, col:27> col:20 next 'Packet *() const' inline
|-CXXMethodDecl 0x55a7747a9b90 <line:412:5, col:26> col:21 next 'Packet *&()' inline
|-CXXMethodDecl 0x55a7747a9d08 <line:414:5, col:35> col:17 set_next 'void (Packet *)' inline
| `-ParmVarDecl 0x55a7747a9c40 <col:26, col:34> col:34 p 'Packet *'
|-CXXMethodDecl 0x55a7747a9dd0 <line:417:5, col:27> col:20 prev 'Packet *() const' inline
|-CXXMethodDecl 0x55a7747a9e98 <line:419:5, col:26> col:21 prev 'Packet *&()' inline
|-CXXMethodDecl 0x55a7747a9fd8 <line:421:5, col:35> col:17 set_prev 'void (Packet *)' inline
| `-ParmVarDecl 0x55a7747a9f48 <col:26, col:34> col:34 p 'Packet *'
|-EnumDecl 0x55a7747aa080 <line:423:5, line:426:5> line:423:5
| |-EnumConstantDecl 0x55a7747aa180 <line:424:2, col:23> col:2 referenced dst_ip_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x55a7747aa380 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a7747aa160 <col:23> 'int' Int: 0
| |     `-IntegerLiteral 0x55a7747aa140 <col:23> 'int' 0
| |-EnumConstantDecl 0x55a7747aa210 <col:26, col:45> col:26 dst_ip_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x55a7747aa398 <col:45> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a7747aa1f0 <col:45> 'int' Int: 4
| |     `-IntegerLiteral 0x55a7747aa1d0 <col:45> 'int' 4
| |-EnumConstantDecl 0x55a7747aa2a0 <line:425:2, col:24> col:2 dst_ip6_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x55a7747aa3b0 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a7747aa280 <col:24> 'int' Int: 0
| |     `-IntegerLiteral 0x55a7747aa260 <col:24> 'int' 0
| `-EnumConstantDecl 0x55a7747aa330 <col:27, col:47> col:27 dst_ip6_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
|   `-ImplicitCastExpr 0x55a7747aa3c8 <col:47> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55a7747aa310 <col:47> 'int' Int: 16
|       `-IntegerLiteral 0x55a7747aa2f0 <col:47> 'int' 16
|-CXXMethodDecl 0x55a7747aa428 <line:431:5, col:36> col:22 dst_ip_anno 'IPAddress () const' inline
|-CXXMethodDecl 0x55a7747aa598 <line:436:5, col:75> col:45 set_dst_ip_anno 'void (IPAddress)'
| |-ParmVarDecl 0x55a7747aa4d8 <col:61, col:71> col:71 addr 'IPAddress'
| |-NoInlineAttr 0x55a7747aa640 <col:20>
| `-OptimizeNoneAttr 0x55a7747aa698 <col:30>
|-CXXMethodDecl 0x55a7747aa6e8 <line:441:5, col:36> col:11 anno 'void *()'
| `-CompoundStmt 0x55a7747be070 <col:18, col:36>
|   `-ReturnStmt 0x55a7747be060 <col:20, col:33>
|     `-ImplicitCastExpr 0x55a7747be048 <col:27, col:33> 'void *' <BitCast>
|       `-CXXMemberCallExpr 0x55a7747be028 <col:27, col:33> 'Packet::Anno *'
|         `-MemberExpr 0x55a7747bdff8 <col:27> '<bound member function type>' ->xanno 0x55a7747a8748
|           `-CXXThisExpr 0x55a7747bdfe8 <col:27> 'Packet *' implicit this
|-CXXMethodDecl 0x55a7747aa7e0 <line:444:5, col:48> col:17 anno 'const void *() const'
| `-CompoundStmt 0x55a7747be180 <col:30, col:48>
|   `-ReturnStmt 0x55a7747be170 <col:32, col:45>
|     `-ImplicitCastExpr 0x55a7747be158 <col:39, col:45> 'const void *' <BitCast>
|       `-CXXMemberCallExpr 0x55a7747be138 <col:39, col:45> 'const Packet::Anno *'
|         `-MemberExpr 0x55a7747be108 <col:39> '<bound member function type>' ->xanno 0x55a7747a85a8
|           `-CXXThisExpr 0x55a7747be0f8 <col:39> 'const Packet *' implicit this
|-CXXMethodDecl 0x55a7747aa8c8 <line:447:5, col:50> col:14 used anno_u8 'uint8_t *()'
| `-CompoundStmt 0x55a7747be318 <col:24, col:50>
|   `-ReturnStmt 0x55a7747be308 <col:26, col:47>
|     `-UnaryOperator 0x55a7747be2f0 <col:33, col:47> 'uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55a7747be2d0 <col:34, col:47> 'uint8_t':'unsigned char' lvalue
|         |-ImplicitCastExpr 0x55a7747be2b8 <col:34, col:43> 'uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55a7747be268 <col:34, col:43> 'uint8_t [48]' lvalue ->u8 0x55a7747b3588
|         |   `-CXXMemberCallExpr 0x55a7747be248 <col:34, col:40> 'Packet::Anno *'
|         |     `-MemberExpr 0x55a7747be218 <col:34> '<bound member function type>' ->xanno 0x55a7747a8748
|         |       `-CXXThisExpr 0x55a7747be208 <col:34> 'Packet *' implicit this
|         `-IntegerLiteral 0x55a7747be298 <col:46> 'int' 0
|-CXXMethodDecl 0x55a7747aa9d0 <line:450:5, col:62> col:20 used anno_u8 'const uint8_t *() const'
| `-CompoundStmt 0x55a7747be4e8 <col:36, col:62>
|   `-ReturnStmt 0x55a7747be4d8 <col:38, col:59>
|     `-UnaryOperator 0x55a7747be4c0 <col:45, col:59> 'const uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55a7747be4a0 <col:46, col:59> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x55a7747be488 <col:46, col:55> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55a7747be400 <col:46, col:55> 'uint8_t const[48]' lvalue ->u8 0x55a7747b3588
|         |   `-CXXMemberCallExpr 0x55a7747be3e0 <col:46, col:52> 'const Packet::Anno *'
|         |     `-MemberExpr 0x55a7747be3b0 <col:46> '<bound member function type>' ->xanno 0x55a7747a85a8
|         |       `-CXXThisExpr 0x55a7747be3a0 <col:46> 'const Packet *' implicit this
|         `-IntegerLiteral 0x55a7747be430 <col:58> 'int' 0
|-CXXMethodDecl 0x55a7747aaae8 <line:453:5, col:53> col:15 used anno_u32 'uint32_t *()'
| `-CompoundStmt 0x55a7747be680 <col:26, col:53>
|   `-ReturnStmt 0x55a7747be670 <col:28, col:50>
|     `-UnaryOperator 0x55a7747be658 <col:35, col:50> 'uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55a7747be638 <col:36, col:50> 'uint32_t':'unsigned int' lvalue
|         |-ImplicitCastExpr 0x55a7747be620 <col:36, col:45> 'uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55a7747be5d0 <col:36, col:45> 'uint32_t [12]' lvalue ->u32 0x55a7747b3888
|         |   `-CXXMemberCallExpr 0x55a7747be5b0 <col:36, col:42> 'Packet::Anno *'
|         |     `-MemberExpr 0x55a7747be580 <col:36> '<bound member function type>' ->xanno 0x55a7747a8748
|         |       `-CXXThisExpr 0x55a7747be570 <col:36> 'Packet *' implicit this
|         `-IntegerLiteral 0x55a7747be600 <col:49> 'int' 0
|-CXXMethodDecl 0x55a7747aac08 <line:456:5, col:65> col:21 used anno_u32 'const uint32_t *() const'
| `-CompoundStmt 0x55a7747be858 <col:38, col:65>
|   `-ReturnStmt 0x55a7747be848 <col:40, col:62>
|     `-UnaryOperator 0x55a7747be830 <col:47, col:62> 'const uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55a7747be810 <col:48, col:62> 'const uint32_t':'const unsigned int' lvalue
|         |-ImplicitCastExpr 0x55a7747be7f8 <col:48, col:57> 'const uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55a7747be768 <col:48, col:57> 'uint32_t const[12]' lvalue ->u32 0x55a7747b3888
|         |   `-CXXMemberCallExpr 0x55a7747be748 <col:48, col:54> 'const Packet::Anno *'
|         |     `-MemberExpr 0x55a7747be718 <col:48> '<bound member function type>' ->xanno 0x55a7747a85a8
|         |       `-CXXThisExpr 0x55a7747be708 <col:48> 'const Packet *' implicit this
|         `-IntegerLiteral 0x55a7747be798 <col:61> 'int' 0
|-CXXMethodDecl 0x55a7747aadb8 <line:460:5, line:463:5> line:460:13 used anno_u8 'uint8_t (int) const'
| |-ParmVarDecl 0x55a7747aacc0 <col:21, col:25> col:25 used i 'int'
| `-CompoundStmt 0x55a7747bef28 <col:34, line:463:5>
|   |-ParenExpr 0x55a7747bed70 <line:461:2, col:174> 'void'
|   | `-ConditionalOperator 0x55a7747bed40 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x55a7747be9a8 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55a7747be978 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55a7747be8c8 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55a7747be8b0 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55a7747be870 <col:23> 'int' lvalue ParmVar 0x55a7747aacc0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55a7747be890 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55a7747be958 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55a7747be928 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55a7747be8e8 <col:33> 'int' lvalue ParmVar 0x55a7747aacc0 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x55a7747be940 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x55a7747be908 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55a7747a8990 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x55a7747bea08 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55a7747be9e8 <col:56> 'int' 0
|   |   `-CallExpr 0x55a7747beca0 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x55a7747bec88 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55a7747bec68 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55a7743152d0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55a7747bece0 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a7747beaf8 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x55a7747becf8 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a7747beb28 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55a7747bed10 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55a7747beb60 <col:135> 'int' 461
|   |     `-ImplicitCastExpr 0x55a7747bed28 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55a7747bec50 <col:140, col:154> 'const char [35]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55a7747bec38 <col:154> 'const char [35]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55a7747bebf8 <col:154> 'const char [35]' lvalue "uint8_t Packet::anno_u8(int) const"
|   `-ReturnStmt 0x55a7747bef18 <line:462:2, col:22>
|     `-ImplicitCastExpr 0x55a7747bef00 <col:9, col:22> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-ArraySubscriptExpr 0x55a7747beee0 <col:9, col:22> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x55a7747beeb0 <col:9, col:18> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55a7747bee60 <col:9, col:18> 'uint8_t const[48]' lvalue ->u8 0x55a7747b3588
|         |   `-CXXMemberCallExpr 0x55a7747bee40 <col:9, col:15> 'const Packet::Anno *'
|         |     `-MemberExpr 0x55a7747bee10 <col:9> '<bound member function type>' ->xanno 0x55a7747a85a8
|         |       `-CXXThisExpr 0x55a7747bee00 <col:9> 'const Packet *' implicit this
|         `-ImplicitCastExpr 0x55a7747beec8 <col:21> 'int' <LValueToRValue>
|           `-DeclRefExpr 0x55a7747bee90 <col:21> 'int' lvalue ParmVar 0x55a7747aacc0 'i' 'int'
|-CXXMethodDecl 0x55a7747ab008 <line:469:5, line:472:5> line:469:10 used set_anno_u8 'void (int, uint8_t)'
| |-ParmVarDecl 0x55a7747aae78 <col:22, col:26> col:26 used i 'int'
| |-ParmVarDecl 0x55a7747aaef0 <col:29, col:37> col:37 used x 'uint8_t':'unsigned char'
| `-CompoundStmt 0x55a7747bf5b8 <col:40, line:472:5>
|   |-ParenExpr 0x55a7747bf3d0 <line:470:2, col:174> 'void'
|   | `-ConditionalOperator 0x55a7747bf3a0 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x55a7747bf080 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55a7747bf050 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55a7747befa0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55a7747bef88 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55a7747bef48 <col:23> 'int' lvalue ParmVar 0x55a7747aae78 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55a7747bef68 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55a7747bf030 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55a7747bf000 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55a7747befc0 <col:33> 'int' lvalue ParmVar 0x55a7747aae78 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x55a7747bf018 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x55a7747befe0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55a7747a8990 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x55a7747bf0e0 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55a7747bf0c0 <col:56> 'int' 0
|   |   `-CallExpr 0x55a7747bf300 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x55a7747bf2e8 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55a7747bf2c8 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55a7743152d0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55a7747bf340 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a7747bf150 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x55a7747bf358 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a7747bf180 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55a7747bf370 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55a7747bf1b8 <col:135> 'int' 470
|   |     `-ImplicitCastExpr 0x55a7747bf388 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55a7747bf2b0 <col:140, col:154> 'const char [39]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55a7747bf298 <col:154> 'const char [39]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55a7747bf258 <col:154> 'const char [39]' lvalue "void Packet::set_anno_u8(int, uint8_t)"
|   `-BinaryOperator 0x55a7747bf598 <line:471:2, col:19> 'uint8_t':'unsigned char' lvalue '='
|     |-ArraySubscriptExpr 0x55a7747bf540 <col:2, col:15> 'uint8_t':'unsigned char' lvalue
|     | |-ImplicitCastExpr 0x55a7747bf510 <col:2, col:11> 'uint8_t *' <ArrayToPointerDecay>
|     | | `-MemberExpr 0x55a7747bf4c0 <col:2, col:11> 'uint8_t [48]' lvalue ->u8 0x55a7747b3588
|     | |   `-CXXMemberCallExpr 0x55a7747bf4a0 <col:2, col:8> 'Packet::Anno *'
|     | |     `-MemberExpr 0x55a7747bf470 <col:2> '<bound member function type>' ->xanno 0x55a7747a8748
|     | |       `-CXXThisExpr 0x55a7747bf460 <col:2> 'Packet *' implicit this
|     | `-ImplicitCastExpr 0x55a7747bf528 <col:14> 'int' <LValueToRValue>
|     |   `-DeclRefExpr 0x55a7747bf4f0 <col:14> 'int' lvalue ParmVar 0x55a7747aae78 'i' 'int'
|     `-ImplicitCastExpr 0x55a7747bf580 <col:19> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-DeclRefExpr 0x55a7747bf560 <col:19> 'uint8_t':'unsigned char' lvalue ParmVar 0x55a7747aaef0 'x' 'uint8_t':'unsigned char'
|-CXXMethodDecl 0x55a7747ab1c8 <line:479:5, line:485:5> line:479:14 used anno_u16 'uint16_t (int) const'
| |-ParmVarDecl 0x55a7747ab0d0 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x55a7747bfd38 <col:36, line:485:5>
|   |-ParenExpr 0x55a7747bfaa0 <line:480:2, col:182> 'void'
|   | `-ConditionalOperator 0x55a7747bfa70 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55a7747bf750 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55a7747bf720 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55a7747bf630 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55a7747bf618 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55a7747bf5d8 <col:23> 'int' lvalue ParmVar 0x55a7747ab0d0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55a7747bf5f8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55a7747bf700 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55a7747bf6e8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55a7747bf650 <col:33> 'int' lvalue ParmVar 0x55a7747ab0d0 'i' 'int'
|   |   |     `-BinaryOperator 0x55a7747bf6c8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55a7747bf6b0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55a7747bf670 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55a7747a8990 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55a7747bf690 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55a7747bf7b0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55a7747bf790 <col:60> 'int' 0
|   |   `-CallExpr 0x55a7747bf9d0 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55a7747bf9b8 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55a7747bf998 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55a7743152d0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55a7747bfa10 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a7747bf820 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55a7747bfa28 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a7747bf858 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55a7747bfa40 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55a7747bf890 <col:143> 'int' 480
|   |     `-ImplicitCastExpr 0x55a7747bfa58 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55a7747bf980 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55a7747bf968 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55a7747bf928 <col:162> 'const char [37]' lvalue "uint16_t Packet::anno_u16(int) const"
|   `-ReturnStmt 0x55a7747bfd28 <line:484:2, col:75>
|     `-ImplicitCastExpr 0x55a7747bfd10 <col:9, col:75> 'click_aliasable_uint16_t':'unsigned short' <LValueToRValue>
|       `-UnaryOperator 0x55a7747bfcf8 <col:9, col:75> 'const click_aliasable_uint16_t':'const unsigned short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55a7747bfcc8 <col:10, col:75> 'const click_aliasable_uint16_t *' reinterpret_cast<const click_aliasable_uint16_t *> <BitCast>
|           `-BinaryOperator 0x55a7747bfc68 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x55a7747bfc38 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55a7747bfbb0 <col:61, col:70> 'char const[48]' lvalue ->c 0x55a7747b3460
|             |   `-CXXMemberCallExpr 0x55a7747bfb90 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55a7747bfb60 <col:61> '<bound member function type>' ->xanno 0x55a7747a85a8
|             |       `-CXXThisExpr 0x55a7747bfb50 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55a7747bfc50 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55a7747bfbe0 <col:74> 'int' lvalue ParmVar 0x55a7747ab0d0 'i' 'int'
|-CXXMethodDecl 0x55a7747ab418 <line:494:5, line:500:5> line:494:10 used set_anno_u16 'void (int, uint16_t)'
| |-ParmVarDecl 0x55a7747ab288 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55a7747ab300 <col:30, col:39> col:39 used x 'uint16_t':'unsigned short'
| `-CompoundStmt 0x55a7747c0488 <col:42, line:500:5>
|   |-ParenExpr 0x55a7747c0220 <line:495:2, col:182> 'void'
|   | `-ConditionalOperator 0x55a7747c01f0 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55a7747bfed0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55a7747bfea0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55a7747bfdb0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55a7747bfd98 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55a7747bfd58 <col:23> 'int' lvalue ParmVar 0x55a7747ab288 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55a7747bfd78 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55a7747bfe80 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55a7747bfe68 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55a7747bfdd0 <col:33> 'int' lvalue ParmVar 0x55a7747ab288 'i' 'int'
|   |   |     `-BinaryOperator 0x55a7747bfe48 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55a7747bfe30 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55a7747bfdf0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55a7747a8990 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55a7747bfe10 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55a7747bff30 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55a7747bff10 <col:60> 'int' 0
|   |   `-CallExpr 0x55a7747c0150 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55a7747c0138 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55a7747c0118 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55a7743152d0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55a7747c0190 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a7747bffa0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55a7747c01a8 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a7747bffd8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55a7747c01c0 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55a7747c0010 <col:143> 'int' 495
|   |     `-ImplicitCastExpr 0x55a7747c01d8 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55a7747c0100 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55a7747c00e8 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55a7747c00a8 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u16(int, uint16_t)"
|   `-BinaryOperator 0x55a7747c0468 <line:499:2, col:66> 'click_aliasable_uint16_t':'unsigned short' lvalue '='
|     |-UnaryOperator 0x55a7747c0418 <col:2, col:62> 'click_aliasable_uint16_t':'unsigned short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55a7747c03e8 <col:3, col:62> 'click_aliasable_uint16_t *' reinterpret_cast<click_aliasable_uint16_t *> <BitCast>
|     |   `-BinaryOperator 0x55a7747c0390 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55a7747c0360 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55a7747c0310 <col:48, col:57> 'char [48]' lvalue ->c 0x55a7747b3460
|     |     |   `-CXXMemberCallExpr 0x55a7747c02f0 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55a7747c02c0 <col:48> '<bound member function type>' ->xanno 0x55a7747a8748
|     |     |       `-CXXThisExpr 0x55a7747c02b0 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55a7747c0378 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55a7747c0340 <col:61> 'int' lvalue ParmVar 0x55a7747ab288 'i' 'int'
|     `-ImplicitCastExpr 0x55a7747c0450 <col:66> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x55a7747c0430 <col:66> 'uint16_t':'unsigned short' lvalue ParmVar 0x55a7747ab300 'x' 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x55a7747ab5d8 <line:507:5, line:513:5> line:507:13 anno_s16 'int16_t (int) const'
| |-ParmVarDecl 0x55a7747ab4e0 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x55a7747c0be8 <col:35, line:513:5>
|   |-ParenExpr 0x55a7747c08f8 <line:508:2, col:182> 'void'
|   | `-ConditionalOperator 0x55a7747c08c8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55a7747c0620 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55a7747c05f0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55a7747c0500 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55a7747c04e8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55a7747c04a8 <col:23> 'int' lvalue ParmVar 0x55a7747ab4e0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55a7747c04c8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55a7747c05d0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55a7747c05b8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55a7747c0520 <col:33> 'int' lvalue ParmVar 0x55a7747ab4e0 'i' 'int'
|   |   |     `-BinaryOperator 0x55a7747c0598 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55a7747c0580 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55a7747c0540 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55a7747a8990 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55a7747c0560 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55a7747c0680 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55a7747c0660 <col:60> 'int' 0
|   |   `-CallExpr 0x55a7747c0828 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55a7747c0810 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55a7747c07f0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55a7743152d0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55a7747c0868 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a7747c06f0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55a7747c0880 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a7747c0728 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55a7747c0898 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55a7747c0760 <col:143> 'int' 508
|   |     `-ImplicitCastExpr 0x55a7747c08b0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55a7747c07d8 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55a7747c07c0 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55a7747c0780 <col:162> 'const char [36]' lvalue "int16_t Packet::anno_s16(int) const"
|   `-ReturnStmt 0x55a7747c0bd8 <line:512:2, col:74>
|     `-ImplicitCastExpr 0x55a7747c0bc0 <col:9, col:74> 'click_aliasable_int16_t':'short' <LValueToRValue>
|       `-UnaryOperator 0x55a7747c0ba8 <col:9, col:74> 'const click_aliasable_int16_t':'const short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55a7747c0b78 <col:10, col:74> 'const click_aliasable_int16_t *' reinterpret_cast<const click_aliasable_int16_t *> <BitCast>
|           `-BinaryOperator 0x55a7747c0af0 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x55a7747c0ac0 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55a7747c0a70 <col:60, col:69> 'char const[48]' lvalue ->c 0x55a7747b3460
|             |   `-CXXMemberCallExpr 0x55a7747c0a50 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55a7747c0a20 <col:60> '<bound member function type>' ->xanno 0x55a7747a85a8
|             |       `-CXXThisExpr 0x55a7747c0a10 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55a7747c0ad8 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55a7747c0aa0 <col:73> 'int' lvalue ParmVar 0x55a7747ab4e0 'i' 'int'
|-CXXMethodDecl 0x55a7747ab828 <line:522:5, line:528:5> line:522:10 set_anno_s16 'void (int, int16_t)'
| |-ParmVarDecl 0x55a7747ab698 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55a7747ab710 <col:30, col:38> col:38 used x 'int16_t':'short'
| `-CompoundStmt 0x55a7747c1308 <col:41, line:528:5>
|   |-ParenExpr 0x55a7747c1090 <line:523:2, col:182> 'void'
|   | `-ConditionalOperator 0x55a7747c1060 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55a7747c0d80 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55a7747c0d50 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55a7747c0c60 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55a7747c0c48 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55a7747c0c08 <col:23> 'int' lvalue ParmVar 0x55a7747ab698 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55a7747c0c28 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55a7747c0d30 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55a7747c0d18 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55a7747c0c80 <col:33> 'int' lvalue ParmVar 0x55a7747ab698 'i' 'int'
|   |   |     `-BinaryOperator 0x55a7747c0cf8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55a7747c0ce0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55a7747c0ca0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55a7747a8990 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55a7747c0cc0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55a7747c0de0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55a7747c0dc0 <col:60> 'int' 0
|   |   `-CallExpr 0x55a7747c0fc0 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55a7747c0fa8 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55a7747c0f88 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55a7743152d0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55a7747c1000 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a7747c0e50 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55a7747c1018 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a7747c0e88 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55a7747c1030 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55a7747c0ec0 <col:143> 'int' 523
|   |     `-ImplicitCastExpr 0x55a7747c1048 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55a7747c0f70 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55a7747c0f58 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55a7747c0f18 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s16(int, int16_t)"
|   `-BinaryOperator 0x55a7747c12e8 <line:527:2, col:65> 'click_aliasable_int16_t':'short' lvalue '='
|     |-UnaryOperator 0x55a7747c1298 <col:2, col:61> 'click_aliasable_int16_t':'short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55a7747c1268 <col:3, col:61> 'click_aliasable_int16_t *' reinterpret_cast<click_aliasable_int16_t *> <BitCast>
|     |   `-BinaryOperator 0x55a7747c1210 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55a7747c11d0 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55a7747c1180 <col:47, col:56> 'char [48]' lvalue ->c 0x55a7747b3460
|     |     |   `-CXXMemberCallExpr 0x55a7747c1160 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55a7747c1130 <col:47> '<bound member function type>' ->xanno 0x55a7747a8748
|     |     |       `-CXXThisExpr 0x55a7747c1120 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55a7747c11e8 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55a7747c11b0 <col:60> 'int' lvalue ParmVar 0x55a7747ab698 'i' 'int'
|     `-ImplicitCastExpr 0x55a7747c12d0 <col:65> 'int16_t':'short' <LValueToRValue>
|       `-DeclRefExpr 0x55a7747c12b0 <col:65> 'int16_t':'short' lvalue ParmVar 0x55a7747ab710 'x' 'int16_t':'short'
|-CXXMethodDecl 0x55a7747ab9e8 <line:535:5, line:541:5> line:535:14 used anno_u32 'uint32_t (int) const'
| |-ParmVarDecl 0x55a7747ab8f0 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x55a7747c19d8 <col:36, line:541:5>
|   |-ParenExpr 0x55a7747c1778 <line:536:2, col:182> 'void'
|   | `-ConditionalOperator 0x55a7747c1748 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55a7747c14a0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55a7747c1470 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55a7747c1380 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55a7747c1368 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55a7747c1328 <col:23> 'int' lvalue ParmVar 0x55a7747ab8f0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55a7747c1348 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55a7747c1450 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55a7747c1438 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55a7747c13a0 <col:33> 'int' lvalue ParmVar 0x55a7747ab8f0 'i' 'int'
|   |   |     `-BinaryOperator 0x55a7747c1418 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55a7747c1400 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55a7747c13c0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55a7747a8990 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55a7747c13e0 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x55a7747c1500 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55a7747c14e0 <col:60> 'int' 0
|   |   `-CallExpr 0x55a7747c16a8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55a7747c1690 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55a7747c1670 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55a7743152d0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55a7747c16e8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a7747c1570 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x55a7747c1700 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a7747c15a8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55a7747c1718 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55a7747c15e0 <col:143> 'int' 536
|   |     `-ImplicitCastExpr 0x55a7747c1730 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55a7747c1658 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55a7747c1640 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55a7747c1600 <col:162> 'const char [37]' lvalue "uint32_t Packet::anno_u32(int) const"
|   `-ReturnStmt 0x55a7747c19c8 <line:540:2, col:75>
|     `-ImplicitCastExpr 0x55a7747c19b0 <col:9, col:75> 'click_aliasable_uint32_t':'unsigned int' <LValueToRValue>
|       `-UnaryOperator 0x55a7747c1998 <col:9, col:75> 'const click_aliasable_uint32_t':'const unsigned int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55a7747c1968 <col:10, col:75> 'const click_aliasable_uint32_t *' reinterpret_cast<const click_aliasable_uint32_t *> <BitCast>
|           `-BinaryOperator 0x55a7747c1910 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x55a7747c18e0 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55a7747c1890 <col:61, col:70> 'char const[48]' lvalue ->c 0x55a7747b3460
|             |   `-CXXMemberCallExpr 0x55a7747c1870 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55a7747c1840 <col:61> '<bound member function type>' ->xanno 0x55a7747a85a8
|             |       `-CXXThisExpr 0x55a7747c1830 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55a7747c18f8 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55a7747c18c0 <col:74> 'int' lvalue ParmVar 0x55a7747ab8f0 'i' 'int'
|-CXXMethodDecl 0x55a7747abbb8 <line:550:5, col:75> col:45 used set_anno_u32 'void (int, uint32_t)'
| |-ParmVarDecl 0x55a7747abaa8 <col:58, col:62> col:62 i 'int'
| |-ParmVarDecl 0x55a7747abb20 <col:65, col:74> col:74 x 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55a7747abc68 <col:20>
| `-OptimizeNoneAttr 0x55a7747abcc0 <col:30>
|-CXXMethodDecl 0x55a7747abdf8 <line:556:5, line:562:5> line:556:13 used anno_s32 'int32_t (int) const'
| |-ParmVarDecl 0x55a7747abd00 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x55a7747c20a8 <col:35, line:562:5>
|   |-ParenExpr 0x55a7747c1e48 <line:557:2, col:182> 'void'
|   | `-ConditionalOperator 0x55a7747c1e18 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55a7747c1b70 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55a7747c1b40 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55a7747c1a50 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55a7747c1a38 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55a7747c19f8 <col:23> 'int' lvalue ParmVar 0x55a7747abd00 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55a7747c1a18 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55a7747c1b20 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55a7747c1b08 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55a7747c1a70 <col:33> 'int' lvalue ParmVar 0x55a7747abd00 'i' 'int'
|   |   |     `-BinaryOperator 0x55a7747c1ae8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55a7747c1ad0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55a7747c1a90 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55a7747a8990 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55a7747c1ab0 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x55a7747c1bd0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55a7747c1bb0 <col:60> 'int' 0
|   |   `-CallExpr 0x55a7747c1d78 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55a7747c1d60 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55a7747c1d40 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55a7743152d0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55a7747c1db8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a7747c1c40 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x55a7747c1dd0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a7747c1c78 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55a7747c1de8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55a7747c1cb0 <col:143> 'int' 557
|   |     `-ImplicitCastExpr 0x55a7747c1e00 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55a7747c1d28 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55a7747c1d10 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55a7747c1cd0 <col:162> 'const char [36]' lvalue "int32_t Packet::anno_s32(int) const"
|   `-ReturnStmt 0x55a7747c2098 <line:561:2, col:74>
|     `-ImplicitCastExpr 0x55a7747c2080 <col:9, col:74> 'click_aliasable_int32_t':'int' <LValueToRValue>
|       `-UnaryOperator 0x55a7747c2068 <col:9, col:74> 'const click_aliasable_int32_t':'const int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55a7747c2038 <col:10, col:74> 'const click_aliasable_int32_t *' reinterpret_cast<const click_aliasable_int32_t *> <BitCast>
|           `-BinaryOperator 0x55a7747c1fe0 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x55a7747c1fb0 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55a7747c1f60 <col:60, col:69> 'char const[48]' lvalue ->c 0x55a7747b3460
|             |   `-CXXMemberCallExpr 0x55a7747c1f40 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55a7747c1f10 <col:60> '<bound member function type>' ->xanno 0x55a7747a85a8
|             |       `-CXXThisExpr 0x55a7747c1f00 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55a7747c1fc8 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55a7747c1f90 <col:73> 'int' lvalue ParmVar 0x55a7747abd00 'i' 'int'
|-CXXMethodDecl 0x55a7747ac008 <line:571:5, line:577:5> line:571:10 used set_anno_s32 'void (int, int32_t)'
| |-ParmVarDecl 0x55a7747abeb8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55a7747abf30 <col:30, col:38> col:38 used x 'int32_t':'int'
| `-CompoundStmt 0x55a7747c2788 <col:41, line:577:5>
|   |-ParenExpr 0x55a7747c2518 <line:572:2, col:182> 'void'
|   | `-ConditionalOperator 0x55a7747c24e8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55a7747c2240 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55a7747c2210 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55a7747c2120 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55a7747c2108 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55a7747c20c8 <col:23> 'int' lvalue ParmVar 0x55a7747abeb8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55a7747c20e8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55a7747c21f0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55a7747c21d8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55a7747c2140 <col:33> 'int' lvalue ParmVar 0x55a7747abeb8 'i' 'int'
|   |   |     `-BinaryOperator 0x55a7747c21b8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55a7747c21a0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55a7747c2160 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55a7747a8990 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55a7747c2180 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x55a7747c22a0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55a7747c2280 <col:60> 'int' 0
|   |   `-CallExpr 0x55a7747c2448 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55a7747c2430 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55a7747c2410 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55a7743152d0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55a7747c2488 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a7747c2310 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x55a7747c24a0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a7747c2348 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55a7747c24b8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55a7747c2380 <col:143> 'int' 572
|   |     `-ImplicitCastExpr 0x55a7747c24d0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55a7747c23f8 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55a7747c23e0 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55a7747c23a0 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s32(int, int32_t)"
|   `-BinaryOperator 0x55a7747c2768 <line:576:2, col:65> 'click_aliasable_int32_t':'int' lvalue '='
|     |-UnaryOperator 0x55a7747c2718 <col:2, col:61> 'click_aliasable_int32_t':'int' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55a7747c26e8 <col:3, col:61> 'click_aliasable_int32_t *' reinterpret_cast<click_aliasable_int32_t *> <BitCast>
|     |   `-BinaryOperator 0x55a7747c2688 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55a7747c2658 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55a7747c2608 <col:47, col:56> 'char [48]' lvalue ->c 0x55a7747b3460
|     |     |   `-CXXMemberCallExpr 0x55a7747c25e8 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55a7747c25b8 <col:47> '<bound member function type>' ->xanno 0x55a7747a8748
|     |     |       `-CXXThisExpr 0x55a7747c25a8 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55a7747c2670 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55a7747c2638 <col:60> 'int' lvalue ParmVar 0x55a7747abeb8 'i' 'int'
|     `-ImplicitCastExpr 0x55a7747c2750 <col:65> 'int32_t':'int' <LValueToRValue>
|       `-DeclRefExpr 0x55a7747c2730 <col:65> 'int32_t':'int' lvalue ParmVar 0x55a7747abf30 'x' 'int32_t':'int'
|-CXXMethodDecl 0x55a7747ac1c8 <line:585:5, line:591:5> line:585:14 used anno_u64 'uint64_t (int) const'
| |-ParmVarDecl 0x55a7747ac0d0 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x55a7747c2eb8 <col:36, line:591:5>
|   |-ParenExpr 0x55a7747c2bf8 <line:586:2, col:182> 'void'
|   | `-ConditionalOperator 0x55a7747c2bc8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55a7747c2920 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55a7747c28f0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55a7747c2800 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55a7747c27e8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55a7747c27a8 <col:23> 'int' lvalue ParmVar 0x55a7747ac0d0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55a7747c27c8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55a7747c28d0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55a7747c28b8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55a7747c2820 <col:33> 'int' lvalue ParmVar 0x55a7747ac0d0 'i' 'int'
|   |   |     `-BinaryOperator 0x55a7747c2898 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55a7747c2880 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55a7747c2840 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55a7747a8990 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55a7747c2860 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x55a7747c2980 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55a7747c2960 <col:60> 'int' 0
|   |   `-CallExpr 0x55a7747c2b28 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55a7747c2b10 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55a7747c2af0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55a7743152d0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55a7747c2b68 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a7747c29f0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x55a7747c2b80 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a7747c2a28 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55a7747c2b98 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55a7747c2a60 <col:143> 'int' 586
|   |     `-ImplicitCastExpr 0x55a7747c2bb0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55a7747c2ad8 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55a7747c2ac0 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55a7747c2a80 <col:162> 'const char [37]' lvalue "uint64_t Packet::anno_u64(int) const"
|   `-ReturnStmt 0x55a7747c2ea8 <line:590:2, col:75>
|     `-ImplicitCastExpr 0x55a7747c2e90 <col:9, col:75> 'click_aliasable_uint64_t':'unsigned long' <LValueToRValue>
|       `-UnaryOperator 0x55a7747c2e78 <col:9, col:75> 'const click_aliasable_uint64_t':'const unsigned long' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55a7747c2e48 <col:10, col:75> 'const click_aliasable_uint64_t *' reinterpret_cast<const click_aliasable_uint64_t *> <BitCast>
|           `-BinaryOperator 0x55a7747c2dc0 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x55a7747c2d90 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55a7747c2d40 <col:61, col:70> 'char const[48]' lvalue ->c 0x55a7747b3460
|             |   `-CXXMemberCallExpr 0x55a7747c2d20 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55a7747c2cf0 <col:61> '<bound member function type>' ->xanno 0x55a7747a85a8
|             |       `-CXXThisExpr 0x55a7747c2ce0 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55a7747c2da8 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55a7747c2d70 <col:74> 'int' lvalue ParmVar 0x55a7747ac0d0 'i' 'int'
|-CXXMethodDecl 0x55a7747ac418 <line:600:5, line:606:5> line:600:10 used set_anno_u64 'void (int, uint64_t)'
| |-ParmVarDecl 0x55a7747ac288 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55a7747ac300 <col:30, col:39> col:39 used x 'uint64_t':'unsigned long'
| `-CompoundStmt 0x55a7747c3598 <col:42, line:606:5>
|   |-ParenExpr 0x55a7747c3328 <line:601:2, col:182> 'void'
|   | `-ConditionalOperator 0x55a7747c32f8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55a7747c3050 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55a7747c3020 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55a7747c2f30 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55a7747c2f18 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55a7747c2ed8 <col:23> 'int' lvalue ParmVar 0x55a7747ac288 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55a7747c2ef8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55a7747c3000 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55a7747c2fe8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55a7747c2f50 <col:33> 'int' lvalue ParmVar 0x55a7747ac288 'i' 'int'
|   |   |     `-BinaryOperator 0x55a7747c2fc8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55a7747c2fb0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55a7747c2f70 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55a7747a8990 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55a7747c2f90 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x55a7747c30b0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55a7747c3090 <col:60> 'int' 0
|   |   `-CallExpr 0x55a7747c3258 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55a7747c3240 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55a7747c3220 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55a7743152d0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55a7747c3298 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a7747c3120 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x55a7747c32b0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a7747c3158 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55a7747c32c8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55a7747c3190 <col:143> 'int' 601
|   |     `-ImplicitCastExpr 0x55a7747c32e0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55a7747c3208 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55a7747c31f0 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55a7747c31b0 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u64(int, uint64_t)"
|   `-BinaryOperator 0x55a7747c3578 <line:605:2, col:66> 'click_aliasable_uint64_t':'unsigned long' lvalue '='
|     |-UnaryOperator 0x55a7747c3528 <col:2, col:62> 'click_aliasable_uint64_t':'unsigned long' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55a7747c34f8 <col:3, col:62> 'click_aliasable_uint64_t *' reinterpret_cast<click_aliasable_uint64_t *> <BitCast>
|     |   `-BinaryOperator 0x55a7747c3498 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55a7747c3468 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55a7747c3418 <col:48, col:57> 'char [48]' lvalue ->c 0x55a7747b3460
|     |     |   `-CXXMemberCallExpr 0x55a7747c33f8 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55a7747c33c8 <col:48> '<bound member function type>' ->xanno 0x55a7747a8748
|     |     |       `-CXXThisExpr 0x55a7747c33b8 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55a7747c3480 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55a7747c3448 <col:61> 'int' lvalue ParmVar 0x55a7747ac288 'i' 'int'
|     `-ImplicitCastExpr 0x55a7747c3560 <col:66> 'uint64_t':'unsigned long' <LValueToRValue>
|       `-DeclRefExpr 0x55a7747c3540 <col:66> 'uint64_t':'unsigned long' lvalue ParmVar 0x55a7747ac300 'x' 'uint64_t':'unsigned long'
|-CXXMethodDecl 0x55a7747ac5b0 <line:614:5, line:620:5> line:614:11 anno_ptr 'void *(int) const'
| |-ParmVarDecl 0x55a7747ac4e0 <col:20, col:24> col:24 used i 'int'
| `-CompoundStmt 0x55a7747c3e08 <col:33, line:620:5>
|   |-ParenExpr 0x55a7747c3b80 <line:615:2, col:220> 'void'
|   | `-ConditionalOperator 0x55a7747c3b50 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x55a7747c37a0 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55a7747c3770 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55a7747c3610 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55a7747c35f8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55a7747c35b8 <col:23> 'int' lvalue ParmVar 0x55a7747ac4e0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55a7747c35d8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55a7747c3750 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x55a7747c3738 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55a7747c3630 <col:33> 'int' lvalue ParmVar 0x55a7747ac4e0 'i' 'int'
|   |   |     `-BinaryOperator 0x55a7747c3718 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55a7747c3700 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55a7747c3650 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55a7747a8990 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x55a7747c36d8 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x55a7747c36c0 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x55a7747c3688 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x55a7747c3800 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55a7747c37e0 <col:79> 'int' 0
|   |   `-CallExpr 0x55a7747c3ab0 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x55a7747c3a98 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55a7747c3a78 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55a7743152d0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55a7747c3af0 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a7747c38e8 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x55a7747c3b08 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a7747c3930 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55a7747c3b20 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55a7747c3968 <col:181> 'int' 615
|   |     `-ImplicitCastExpr 0x55a7747c3b38 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55a7747c3a60 <col:186, col:200> 'const char [34]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55a7747c3a48 <col:200> 'const char [34]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55a7747c3a08 <col:200> 'const char [34]' lvalue "void *Packet::anno_ptr(int) const"
|   `-ReturnStmt 0x55a7747c3df8 <line:619:2, col:81>
|     `-ImplicitCastExpr 0x55a7747c3de0 <col:9, col:81> 'click_aliasable_void_pointer_t':'void *' <LValueToRValue>
|       `-UnaryOperator 0x55a7747c3dc8 <col:9, col:81> 'const click_aliasable_void_pointer_t':'void *const' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55a7747c3d98 <col:10, col:81> 'const click_aliasable_void_pointer_t *' reinterpret_cast<const click_aliasable_void_pointer_t *> <BitCast>
|           `-BinaryOperator 0x55a7747c3d10 <col:67, col:80> 'const char *' '+'
|             |-ImplicitCastExpr 0x55a7747c3ce0 <col:67, col:76> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55a7747c3c90 <col:67, col:76> 'char const[48]' lvalue ->c 0x55a7747b3460
|             |   `-CXXMemberCallExpr 0x55a7747c3c70 <col:67, col:73> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55a7747c3c40 <col:67> '<bound member function type>' ->xanno 0x55a7747a85a8
|             |       `-CXXThisExpr 0x55a7747c3c30 <col:67> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55a7747c3cf8 <col:80> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55a7747c3cc0 <col:80> 'int' lvalue ParmVar 0x55a7747ac4e0 'i' 'int'
|-CXXMethodDecl 0x55a7747ac7c8 <line:629:5, line:635:5> line:629:10 set_anno_ptr 'void (int, const void *)'
| |-ParmVarDecl 0x55a7747ac670 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55a7747ac6f0 <col:30, col:42> col:42 used x 'const void *'
| `-CompoundStmt 0x55a7747c4630 <col:45, line:635:5>
|   |-ParenExpr 0x55a7747c4378 <line:630:2, col:220> 'void'
|   | `-ConditionalOperator 0x55a7747c4348 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x55a7747c4010 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55a7747c3fe0 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55a7747c3e80 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55a7747c3e68 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55a7747c3e28 <col:23> 'int' lvalue ParmVar 0x55a7747ac670 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55a7747c3e48 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55a7747c3fc0 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x55a7747c3fa8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55a7747c3ea0 <col:33> 'int' lvalue ParmVar 0x55a7747ac670 'i' 'int'
|   |   |     `-BinaryOperator 0x55a7747c3f88 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55a7747c3f70 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55a7747c3ec0 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55a7747a8990 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x55a7747c3f48 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x55a7747c3f30 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x55a7747c3ef8 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x55a7747c4070 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55a7747c4050 <col:79> 'int' 0
|   |   `-CallExpr 0x55a7747c42a8 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x55a7747c4290 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55a7747c4270 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55a7743152d0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55a7747c42e8 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a7747c40e0 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x55a7747c4300 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a7747c4128 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55a7747c4318 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55a7747c4160 <col:181> 'int' 630
|   |     `-ImplicitCastExpr 0x55a7747c4330 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55a7747c4258 <col:186, col:200> 'const char [45]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55a7747c4240 <col:200> 'const char [45]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55a7747c41f8 <col:200> 'const char [45]' lvalue "void Packet::set_anno_ptr(int, const void *)"
|   `-BinaryOperator 0x55a7747c4610 <line:634:2, col:92> 'click_aliasable_void_pointer_t':'void *' lvalue '='
|     |-UnaryOperator 0x55a7747c4578 <col:2, col:68> 'click_aliasable_void_pointer_t':'void *' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55a7747c4548 <col:3, col:68> 'click_aliasable_void_pointer_t *' reinterpret_cast<click_aliasable_void_pointer_t *> <BitCast>
|     |   `-BinaryOperator 0x55a7747c44e8 <col:54, col:67> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55a7747c44b8 <col:54, col:63> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55a7747c4468 <col:54, col:63> 'char [48]' lvalue ->c 0x55a7747b3460
|     |     |   `-CXXMemberCallExpr 0x55a7747c4448 <col:54, col:60> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55a7747c4418 <col:54> '<bound member function type>' ->xanno 0x55a7747a8748
|     |     |       `-CXXThisExpr 0x55a7747c4408 <col:54> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55a7747c44d0 <col:67> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55a7747c4498 <col:67> 'int' lvalue ParmVar 0x55a7747ac670 'i' 'int'
|     `-CXXConstCastExpr 0x55a7747c45e0 <col:72, col:92> 'void *' const_cast<void *> <NoOp>
|       `-ImplicitCastExpr 0x55a7747c45c8 <col:91> 'const void *' <LValueToRValue> part_of_explicit_cast
|         `-DeclRefExpr 0x55a7747c4590 <col:91> 'const void *' lvalue ParmVar 0x55a7747ac6f0 'x' 'const void *'
|-CXXMethodDecl 0x55a7747ac898 <line:638:5, line:640:5> line:638:20 data_packet 'Packet *()' inline
| `-CompoundStmt 0x55a7747c46b8 <col:34, line:640:5>
|   `-ReturnStmt 0x55a7747c46a8 <line:639:9, col:16>
|     `-ImplicitCastExpr 0x55a7747c4690 <col:16> 'Packet *' <LValueToRValue>
|       `-MemberExpr 0x55a7747c4660 <col:16> 'Packet *' lvalue ->_data_packet 0x55a7747b4018
|         `-CXXThisExpr 0x55a7747c4650 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x55a7747ac9d8 <line:643:5, col:50> col:17 used clear_annotations 'void (bool)' inline
| `-ParmVarDecl 0x55a7747ac948 <col:35, col:46> col:40 all 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55a7747bd778 <col:46> 'bool' true
|-CXXMethodDecl 0x55a7747acb58 <line:644:5, col:48> col:17 copy_annotations 'void (const Packet *)' inline
| `-ParmVarDecl 0x55a7747aca90 <col:34, col:47> col:48 'const Packet *'
|-EnumDecl 0x55a7747acc00 <line:648:5, line:660:5> line:648:5
| |-DeprecatedAttr 0x55a7747ad3b0 <line:660:22> "" ""
| |-EnumConstantDecl 0x55a7747acd00 <line:649:2, col:21> col:2 DEFAULT_HEADROOM 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55a7747ad420 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a7747acce0 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 28
| |     `-DeclRefExpr 0x55a7747accc0 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x55a7747a1e60 'default_headroom' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x55a7747acd90 <line:650:2, col:22> col:2 MIN_BUFFER_LENGTH 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55a7747ad438 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a7747acd70 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 64
| |     `-DeclRefExpr 0x55a7747acd50 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x55a7747a1ef0 'min_buffer_length' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x55a7747ace20 <line:651:2, col:21> col:2 referenced addr_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55a7747ad450 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a7747ace00 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x55a7747acde0 <col:21> 'int' 0
| |-EnumConstantDecl 0x55a7747aceb0 <line:652:2, col:19> col:2 referenced addr_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55a7747ad468 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a7747ace90 <col:19> 'int' Int: 16
| |     `-IntegerLiteral 0x55a7747ace70 <col:19> 'int' 16
| |-EnumConstantDecl 0x55a7747acf40 <line:653:2, col:21> col:2 referenced user_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55a7747ad480 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a7747acf20 <col:21> 'int' Int: 16
| |     `-IntegerLiteral 0x55a7747acf00 <col:21> 'int' 16
| |-EnumConstantDecl 0x55a7747acfd0 <line:654:2, col:19> col:2 referenced user_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55a7747ad498 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a7747acfb0 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x55a7747acf90 <col:19> 'int' 32
| |-EnumConstantDecl 0x55a7747ad060 <line:655:2, col:19> col:2 ADDR_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55a7747ad4b0 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a7747ad040 <col:19> 'int' Int: 16
| |     `-DeclRefExpr 0x55a7747ad020 <col:19> 'int' EnumConstant 0x55a7747aceb0 'addr_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x55a7747ad0f0 <line:656:2, col:19> col:2 referenced USER_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55a7747ad4c8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a7747ad0d0 <col:19> 'int' Int: 32
| |     `-DeclRefExpr 0x55a7747ad0b0 <col:19> 'int' EnumConstant 0x55a7747acfd0 'user_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x55a7747ad1c0 <line:657:2, col:40> col:2 USER_ANNO_U16_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55a7747ad4e0 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a7747ad1a0 <col:23, col:40> 'int' Int: 16
| |     `-BinaryOperator 0x55a7747ad180 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x55a7747ad140 <col:23> 'int' EnumConstant 0x55a7747ad0f0 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x55a7747ad160 <col:40> 'int' 2
| |-EnumConstantDecl 0x55a7747ad290 <line:658:2, col:40> col:2 USER_ANNO_U32_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55a7747ad4f8 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a7747ad270 <col:23, col:40> 'int' Int: 8
| |     `-BinaryOperator 0x55a7747ad250 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x55a7747ad210 <col:23> 'int' EnumConstant 0x55a7747ad0f0 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x55a7747ad230 <col:40> 'int' 4
| `-EnumConstantDecl 0x55a7747ad360 <line:659:2, col:40> col:2 USER_ANNO_U64_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|   `-ImplicitCastExpr 0x55a7747ad510 <col:23, col:40> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55a7747ad340 <col:23, col:40> 'int' Int: 4
|       `-BinaryOperator 0x55a7747ad320 <col:23, col:40> 'int' '/'
|         |-DeclRefExpr 0x55a7747ad2e0 <col:23> 'int' EnumConstant 0x55a7747ad0f0 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|         `-IntegerLiteral 0x55a7747ad300 <col:40> 'int' 8
|-CXXMethodDecl 0x55a7747ad550 <line:661:5, col:79> col:33 buffer_data 'const unsigned char *() const' inline
| `-DeprecatedAttr 0x55a7747ad5f0 <col:68> "" ""
|-CXXMethodDecl 0x55a7747ad688 <line:662:5, col:56> col:18 addr_anno 'void *()' inline
| `-DeprecatedAttr 0x55a7747ad728 <col:45> "" ""
|-CXXMethodDecl 0x55a7747ad7c0 <line:663:5, col:68> col:24 addr_anno 'const void *() const' inline
| `-DeprecatedAttr 0x55a7747ad860 <col:57> "" ""
|-CXXMethodDecl 0x55a7747ad8f8 <line:664:5, col:56> col:18 user_anno 'void *()' inline
| `-DeprecatedAttr 0x55a7747ad998 <col:45> "" ""
|-CXXMethodDecl 0x55a7747ada30 <line:665:5, col:68> col:24 user_anno 'const void *() const' inline
| `-DeprecatedAttr 0x55a7747adad0 <col:57> "" ""
|-CXXMethodDecl 0x55a7747adb60 <line:666:5, col:62> col:21 user_anno_u8 'uint8_t *()' inline
| `-DeprecatedAttr 0x55a7747adc00 <col:51> "" ""
|-CXXMethodDecl 0x55a7747adc90 <line:667:5, col:74> col:27 user_anno_u8 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x55a7747add30 <col:63> "" ""
|-CXXMethodDecl 0x55a7747addc0 <line:668:5, col:64> col:22 user_anno_u32 'uint32_t *()' inline
| `-DeprecatedAttr 0x55a7747ade60 <col:53> "" ""
|-CXXMethodDecl 0x55a7747adef0 <line:669:5, col:76> col:28 user_anno_u32 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x55a7747adf90 <col:65> "" ""
|-CXXMethodDecl 0x55a7747ae0a8 <line:670:5, col:72> col:20 user_anno_u8 'uint8_t (int) const' inline
| |-ParmVarDecl 0x55a7747ae018 <col:33, col:37> col:37 i 'int'
| `-DeprecatedAttr 0x55a7747ae150 <col:61> "" ""
|-CXXMethodDecl 0x55a7747ae2e8 <line:671:5, col:78> col:17 set_user_anno_u8 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x55a7747ae1d8 <col:34, col:38> col:38 i 'int'
| |-ParmVarDecl 0x55a7747ae250 <col:41, col:49> col:49 v 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x55a7747ae398 <col:67> "" ""
|-CXXMethodDecl 0x55a7747ae4b0 <line:672:5, col:74> col:21 user_anno_u16 'uint16_t (int) const' inline
| |-ParmVarDecl 0x55a7747ae420 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x55a7747ae558 <col:63> "" ""
|-CXXMethodDecl 0x55a7747ae6f0 <line:673:5, col:80> col:17 set_user_anno_u16 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x55a7747ae5e0 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55a7747ae658 <col:42, col:51> col:51 v 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x55a7747ae7a0 <col:69> "" ""
|-CXXMethodDecl 0x55a7747ae8b8 <line:674:5, col:74> col:21 user_anno_u32 'uint32_t (int) const' inline
| |-ParmVarDecl 0x55a7747ae828 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x55a7747ae960 <col:63> "" ""
|-CXXMethodDecl 0x55a7747b1038 <line:675:5, col:80> col:17 set_user_anno_u32 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x55a7747b0f28 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55a7747b0fa0 <col:42, col:51> col:51 v 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55a7747b10e8 <col:69> "" ""
|-CXXMethodDecl 0x55a7747b1200 <line:676:5, col:73> col:20 user_anno_s32 'int32_t (int) const' inline
| |-ParmVarDecl 0x55a7747b1170 <col:34, col:38> col:38 i 'int'
| `-DeprecatedAttr 0x55a7747b12a8 <col:62> "" ""
|-CXXMethodDecl 0x55a7747b1440 <line:677:5, col:79> col:17 set_user_anno_s32 'void (int, int32_t)' inline
| |-ParmVarDecl 0x55a7747b1330 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55a7747b13a8 <col:42, col:50> col:50 v 'int32_t':'int'
| `-DeprecatedAttr 0x55a7747b14f0 <col:68> "" ""
|-CXXMethodDecl 0x55a7747b1608 <line:679:5, col:74> col:21 user_anno_u64 'uint64_t (int) const' inline
| |-ParmVarDecl 0x55a7747b1578 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x55a7747b16b0 <col:63> "" ""
|-CXXMethodDecl 0x55a7747b1848 <line:680:5, col:80> col:17 set_user_anno_u64 'void (int, uint64_t)' inline
| |-ParmVarDecl 0x55a7747b1738 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55a7747b17b0 <col:42, col:51> col:51 v 'uint64_t':'unsigned long'
| `-DeprecatedAttr 0x55a7747b18f8 <col:69> "" ""
|-CXXMethodDecl 0x55a7747b1988 <line:682:5, col:75> col:27 all_user_anno 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x55a7747b1a28 <col:64> "" ""
|-CXXMethodDecl 0x55a7747b1ab8 <line:683:5, col:63> col:21 all_user_anno 'uint8_t *()' inline
| `-DeprecatedAttr 0x55a7747b1b58 <col:52> "" ""
|-CXXMethodDecl 0x55a7747b1be8 <line:684:5, col:78> col:28 all_user_anno_u 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x55a7747b1c88 <col:67> "" ""
|-CXXMethodDecl 0x55a7747b1d18 <line:685:5, col:66> col:22 all_user_anno_u 'uint32_t *()' inline
| `-DeprecatedAttr 0x55a7747b1db8 <col:55> "" ""
|-CXXMethodDecl 0x55a7747b1ed0 <line:686:5, col:69> col:20 user_anno_c 'uint8_t (int) const' inline
| |-ParmVarDecl 0x55a7747b1e40 <col:32> col:35 'int'
| `-DeprecatedAttr 0x55a7747b1f78 <col:58> "" ""
|-CXXMethodDecl 0x55a7747b2110 <line:687:5, col:73> col:17 set_user_anno_c 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x55a7747b2000 <col:33> col:36 'int'
| |-ParmVarDecl 0x55a7747b2078 <col:38> col:45 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x55a7747b21c0 <col:62> "" ""
|-CXXMethodDecl 0x55a7747b22d8 <line:688:5, col:69> col:20 user_anno_s 'int16_t (int) const' inline
| |-ParmVarDecl 0x55a7747b2248 <col:32> col:35 'int'
| `-DeprecatedAttr 0x55a7747b2380 <col:58> "" ""
|-CXXMethodDecl 0x55a7747b2518 <line:689:5, col:73> col:17 set_user_anno_s 'void (int, int16_t)' inline
| |-ParmVarDecl 0x55a7747b2408 <col:33> col:36 'int'
| |-ParmVarDecl 0x55a7747b2480 <col:38> col:45 'int16_t':'short'
| `-DeprecatedAttr 0x55a7747b25c8 <col:62> "" ""
|-CXXMethodDecl 0x55a7747b26e0 <line:690:5, col:71> col:21 user_anno_us 'uint16_t (int) const' inline
| |-ParmVarDecl 0x55a7747b2650 <col:34> col:37 'int'
| `-DeprecatedAttr 0x55a7747b2788 <col:60> "" ""
|-CXXMethodDecl 0x55a7747b2920 <line:691:5, col:75> col:17 set_user_anno_us 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x55a7747b2810 <col:34> col:37 'int'
| |-ParmVarDecl 0x55a7747b2888 <col:39> col:47 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x55a7747b29d0 <col:64> "" ""
|-CXXMethodDecl 0x55a7747b2ae8 <line:692:5, col:69> col:20 user_anno_i 'int32_t (int) const' inline
| |-ParmVarDecl 0x55a7747b2a58 <col:32> col:35 'int'
| `-DeprecatedAttr 0x55a7747b2b90 <col:58> "" ""
|-CXXMethodDecl 0x55a7747b2d28 <line:693:5, col:73> col:17 set_user_anno_i 'void (int, int32_t)' inline
| |-ParmVarDecl 0x55a7747b2c18 <col:33> col:36 'int'
| |-ParmVarDecl 0x55a7747b2c90 <col:38> col:45 'int32_t':'int'
| `-DeprecatedAttr 0x55a7747b2dd8 <col:62> "" ""
|-CXXMethodDecl 0x55a7747b2ef0 <line:694:5, col:70> col:21 user_anno_u 'uint32_t (int) const' inline
| |-ParmVarDecl 0x55a7747b2e60 <col:33> col:36 'int'
| `-DeprecatedAttr 0x55a7747b2f98 <col:59> "" ""
|-CXXMethodDecl 0x55a7747b3130 <line:695:5, col:74> col:17 set_user_anno_u 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x55a7747b3020 <col:33> col:36 'int'
| |-ParmVarDecl 0x55a7747b3098 <col:38> col:46 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55a7747b31e0 <col:63> "" ""
|-AccessSpecDecl 0x55a7747b3250 <line:698:3, col:10> col:3 private
|-CXXRecordDecl 0x55a7747b3278 prev 0x55a7747a8480 <line:702:5, line:711:5> line:702:11 referenced union Anno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55a7747b3370 <col:5, col:11> col:11 implicit union Anno
| |-FieldDecl 0x55a7747b3460 <line:703:2, col:18> col:7 referenced c 'char [48]'
| |-FieldDecl 0x55a7747b3588 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
| |-FieldDecl 0x55a7747b3708 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
| |-FieldDecl 0x55a7747b3888 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
| |-FieldDecl 0x55a7747b3a08 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
| |-CXXConstructorDecl 0x55a7747c4838 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55a7747c50a8 <col:11>
| |-CXXDestructorDecl 0x55a7747c4910 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
| |-CXXConstructorDecl 0x55a7747c4a48 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x55a7747c4a48
| | `-ParmVarDecl 0x55a7747c4b58 <col:11> col:11 'const Packet::Anno &'
| |-CXXConstructorDecl 0x55a7747c4bf8 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55a7747c4bf8
| | `-ParmVarDecl 0x55a7747c4d08 <col:11> col:11 'Packet::Anno &&'
| |-CXXMethodDecl 0x55a7747c7ac8 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55a7747c7bd8 <col:11> col:11 'const Packet::Anno &'
| | `-CompoundStmt 0x55a7747c7e58 <col:11>
| |   `-ReturnStmt 0x55a7747c7e48 <col:11>
| |     `-UnaryOperator 0x55a7747c7e30 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x55a7747c7e20 <col:11> 'Packet::Anno *' this
| `-CXXMethodDecl 0x55a7747c7c48 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55a7747c7c48
|   `-ParmVarDecl 0x55a7747c7d58 <col:11> col:11 'Packet::Anno &&'
|-CXXRecordDecl 0x55a7747b3a70 <line:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55a7747b3b88 <col:5, col:12> col:12 implicit struct AllAnno
| |-FieldDecl 0x55a7747b3c28 <line:717:2, col:7> col:7 cb 'Packet::Anno'
| |-FieldDecl 0x55a7747b3c90 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
| |-FieldDecl 0x55a7747b3cf8 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
| |-FieldDecl 0x55a7747b3d60 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
| |-FieldDecl 0x55a7747b3dc0 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
| |-FieldDecl 0x55a7747b3e80 <line:722:2, col:34> col:7 timestamp 'char [8]'
| |-FieldDecl 0x55a7747b3ee0 <line:723:2, col:10> col:10 referenced next 'Packet *'
| |-FieldDecl 0x55a7747b3f40 <line:724:2, col:10> col:10 referenced prev 'Packet *'
| |-CXXConstructorDecl 0x55a7747c4748 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| | |-CXXCtorInitializer Field 0x55a7747b3c28 'cb' 'Packet::Anno'
| | | `-CXXConstructExpr 0x55a7747c50b8 <col:12> 'Packet::Anno' 'void () noexcept'
| | `-CompoundStmt 0x55a7747c5110 <col:12>
| |-CXXConstructorDecl 0x55a7747c4d78 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x55a7747c4d78
| | `-ParmVarDecl 0x55a7747c4e88 <col:12> col:12 'const Packet::AllAnno &'
| |-CXXConstructorDecl 0x55a7747c4f28 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x55a7747c4f28
| | `-ParmVarDecl 0x55a7747c5038 <col:12> col:12 'Packet::AllAnno &&'
| `-CXXDestructorDecl 0x55a7747c71b0 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial
|-FieldDecl 0x55a7747b3fb8 <line:731:5, col:21> col:21 referenced _use_count 'atomic_uint32_t'
|-FieldDecl 0x55a7747b4018 <line:732:5, col:13> col:13 referenced _data_packet 'Packet *'
|-FieldDecl 0x55a7747b4080 <line:734:5, col:20> col:20 referenced _head 'unsigned char *'
|-FieldDecl 0x55a7747b40e8 <line:735:5, col:20> col:20 referenced _data 'unsigned char *'
|-FieldDecl 0x55a7747b4150 <line:736:5, col:20> col:20 referenced _tail 'unsigned char *'
|-FieldDecl 0x55a7747b41b8 <line:737:5, col:20> col:20 referenced _end 'unsigned char *'
|-FieldDecl 0x55a7747b4218 <line:741:5, col:13> col:13 referenced _aa 'Packet::AllAnno'
|-FieldDecl 0x55a7747b4278 <line:746:5, col:28> col:28 referenced _destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-FieldDecl 0x55a7747b42e0 <line:747:5, col:11> col:11 referenced _destructor_argument 'void *'
|-CXXConstructorDecl 0x55a7747b4368 <line:751:5, line:755:5> line:751:12 used Packet 'void ()' inline
| |-CXXCtorInitializer Field 0x55a7747b3fb8 '_use_count' 'atomic_uint32_t'
| | `-CXXConstructExpr 0x55a7747c46e0 <col:12> 'atomic_uint32_t' 'void () noexcept'
| |-CXXCtorInitializer Field 0x55a7747b4218 '_aa' 'Packet::AllAnno'
| | `-CXXConstructExpr 0x55a7747c5120 <col:12> 'Packet::AllAnno' 'void () noexcept'
| `-CompoundStmt 0x55a7747c5180 <col:21, line:755:5>
|-CXXConstructorDecl 0x55a7747b4508 <line:756:5, col:27> col:5 Packet 'void (const Packet &)'
| `-ParmVarDecl 0x55a7747b4448 <col:12, col:26> col:26 x 'const Packet &'
|-CXXDestructorDecl 0x55a7747b4600 <line:757:5, col:13> col:5 used ~Packet 'void () noexcept'
|-CXXMethodDecl 0x55a7747b47e8 <line:758:5, col:38> col:13 operator= 'Packet &(const Packet &)'
| `-ParmVarDecl 0x55a7747b46f0 <col:23, col:37> col:37 x 'const Packet &'
|-CXXMethodDecl 0x55a7747b4ab8 <line:761:5, col:74> col:10 alloc_data 'bool (uint32_t, uint32_t, uint32_t)'
| |-ParmVarDecl 0x55a7747b48a0 <col:21, col:30> col:30 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55a7747b4918 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55a7747b4990 <col:57, col:66> col:66 tailroom 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55a7747b4cd8 <line:768:5, col:95> col:17 shift_header_annotations 'void (const unsigned char *, int32_t)' inline
| |-ParmVarDecl 0x55a7747b4b88 <col:42, col:63> col:63 old_head 'const unsigned char *'
| `-ParmVarDecl 0x55a7747b4c00 <col:73, col:81> col:81 extra_headroom 'int32_t':'int'
|-CXXMethodDecl 0x55a7747bd2b8 <line:769:5, col:109> col:21 expensive_uniqueify 'WritablePacket *(int32_t, int32_t, bool)'
| |-ParmVarDecl 0x55a7747b4d98 <col:41, col:49> col:49 extra_headroom 'int32_t':'int'
| |-ParmVarDecl 0x55a7747b4e10 <col:65, col:73> col:73 extra_tailroom 'int32_t':'int'
| `-ParmVarDecl 0x55a7747b4e88 <col:89, col:94> col:94 free_on_failure 'bool'
|-CXXMethodDecl 0x55a7747bd410 <line:770:5, col:51> col:21 used expensive_push 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x55a7747bd380 <col:36, col:45> col:45 nbytes 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55a7747bd558 <line:771:5, col:50> col:21 used expensive_put 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x55a7747bd4c8 <col:35, col:44> col:44 nbytes 'uint32_t':'unsigned int'
`-FriendDecl 0x55a7747bd650 <line:773:5, col:18> col:12 'class WritablePacket':'WritablePacket'

Layout: <CGRecordLayout
  LLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  NonVirtualBaseLLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class StringAccum
         0 |   struct StringAccum::rep_t r_
         0 |     unsigned char * s
         8 |     int len
        12 |     int cap
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55a7749d1d30 <../dummy_inc/click/straccum.hh:112:5, line:122:5> line:112:12 referenced struct rep_t definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55a7749d1e48 <col:5, col:12> col:12 implicit referenced struct rep_t
|-FieldDecl 0x55a7749d1ef0 <line:113:2, col:17> col:17 referenced s 'unsigned char *'
|-FieldDecl 0x55a7749d1f58 <line:114:2, col:6> col:6 referenced len 'int'
|-FieldDecl 0x55a7749d1fc0 <line:115:2, col:6> col:6 referenced cap 'int'
|-CXXConstructorDecl 0x55a7749d2070 <line:116:2, line:119:2> line:116:2 used rep_t 'void ()'
| |-CXXCtorInitializer Field 0x55a7749d1ef0 's' 'unsigned char *'
| | `-CXXReinterpretCastExpr 0x55a7749d2ef0 <line:117:10, col:84> 'unsigned char *' reinterpret_cast<unsigned char *> <BitCast>
| |   `-CXXConstCastExpr 0x55a7749d2ea8 <col:44, col:83> 'char *' const_cast<char *> <NoOp>
| |     `-CallExpr 0x55a7749d2e70 <col:63, col:82> 'const char *'
| |       `-ImplicitCastExpr 0x55a7749d2e58 <col:63, col:71> 'const char *(*)()' <FunctionToPointerDecay>
| |         `-DeclRefExpr 0x55a7749d2e00 <col:63, col:71> 'const char *()' lvalue CXXMethod 0x55a7745cc2d0 'empty_data' 'const char *()'
| |-CXXCtorInitializer Field 0x55a7749d1f58 'len' 'int'
| | `-IntegerLiteral 0x55a7749d2f68 <line:118:12> 'int' 0
| |-CXXCtorInitializer Field 0x55a7749d1fc0 'cap' 'int'
| | `-IntegerLiteral 0x55a7749d2fd0 <col:20> 'int' 0
| `-CompoundStmt 0x55a7749d3050 <col:23, line:119:2>
|-CXXConstructorDecl 0x55a7749d21e8 <line:120:2, line:121:2> line:120:11 rep_t 'void (uninitialized_type)'
| |-ParmVarDecl 0x55a7749d2128 <col:17> col:35 'uninitialized_type'
| `-CompoundStmt 0x55a7749d3060 <col:37, line:121:2>
|-CXXConstructorDecl 0x55a7749d5278 <line:112:12> col:12 implicit used constexpr rep_t 'void (const StringAccum::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55a7749d5388 <col:12> col:12 used 'const StringAccum::rep_t &'
| |-CXXCtorInitializer Field 0x55a7749d1ef0 's' 'unsigned char *'
| | `-ImplicitCastExpr 0x55a7749d6cc0 <col:12> 'unsigned char *' <LValueToRValue>
| |   `-MemberExpr 0x55a7749d6c90 <col:12> 'unsigned char *const' lvalue .s 0x55a7749d1ef0
| |     `-DeclRefExpr 0x55a7749d6c70 <col:12> 'const StringAccum::rep_t' lvalue ParmVar 0x55a7749d5388 '' 'const StringAccum::rep_t &'
| |-CXXCtorInitializer Field 0x55a7749d1f58 'len' 'int'
| | `-ImplicitCastExpr 0x55a7749d6d50 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x55a7749d6d20 <col:12> 'const int' lvalue .len 0x55a7749d1f58
| |     `-DeclRefExpr 0x55a7749d6d00 <col:12> 'const StringAccum::rep_t' lvalue ParmVar 0x55a7749d5388 '' 'const StringAccum::rep_t &'
| |-CXXCtorInitializer Field 0x55a7749d1fc0 'cap' 'int'
| | `-ImplicitCastExpr 0x55a7749d6de0 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x55a7749d6db0 <col:12> 'const int' lvalue .cap 0x55a7749d1fc0
| |     `-DeclRefExpr 0x55a7749d6d90 <col:12> 'const StringAccum::rep_t' lvalue ParmVar 0x55a7749d5388 '' 'const StringAccum::rep_t &'
| `-CompoundStmt 0x55a7749d6e38 <col:12>
|-CXXConstructorDecl 0x55a7749d5428 <col:12> col:12 implicit constexpr rep_t 'void (StringAccum::rep_t &&)' inline default trivial noexcept-unevaluated 0x55a7749d5428
| `-ParmVarDecl 0x55a7749d5538 <col:12> col:12 'StringAccum::rep_t &&'
`-CXXDestructorDecl 0x55a7749d70f0 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"struct.StringAccum::rep_t" = type { i8*, i32, i32 }
  NonVirtualBaseLLVMType:%"struct.StringAccum::rep_t" = type { i8*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55a77468f9d8 prev 0x55a7748f4f78 <../dummy_inc/click/straccum.hh:28:1, line:137:1> line:28:7 referenced class StringAccum definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55a77468fad0 <col:1, col:7> col:7 implicit referenced class StringAccum
|-AccessSpecDecl 0x55a77468fb60 <col:21, col:27> col:21 public
|-TypedefDecl 0x55a77468fba0 <line:30:5, col:25> col:25 referenced const_iterator 'const char *'
| `-PointerType 0x55a774274dc0 'const char *'
|   `-QualType 0x55a774274311 'const char' const
|     `-BuiltinType 0x55a774274310 'char'
|-TypedefDecl 0x55a77468fc10 <line:31:5, col:19> col:19 referenced iterator 'char *'
| `-PointerType 0x55a774274f90 'char *'
|   `-BuiltinType 0x55a774274310 'char'
|-TypedefDecl 0x55a77468fd50 <line:33:5, col:57> col:32 referenced unspecified_bool_type 'int (StringAccum::*)() const'
| `-MemberPointerType 0x55a77468fcc0 'int (StringAccum::*)() const'
|   |-RecordType 0x55a774536b90 'StringAccum'
|   | `-CXXRecord 0x55a77468f9d8 'StringAccum'
|   `-ParenType 0x55a7745a62e0 'int () const' sugar
|     `-FunctionProtoType 0x55a774579e70 'int () const' const cdecl
|       `-BuiltinType 0x55a774274370 'int'
|-CXXConstructorDecl 0x55a77468fe10 <line:35:5, col:24> col:12 used StringAccum 'void ()' inline
|-CXXConstructorDecl 0x55a77468ff60 <line:36:5, col:45> col:21 StringAccum 'void (int)' inline
| `-ParmVarDecl 0x55a77468fed0 <col:33, col:37> col:37 capacity 'int'
|-CXXConstructorDecl 0x55a7746900b0 <line:37:5, col:41> col:12 StringAccum 'void (const String &)' inline
| `-ParmVarDecl 0x55a774690020 <col:24, col:38> col:38 str 'const String &'
|-CXXConstructorDecl 0x55a774690258 <line:38:5, col:44> col:12 StringAccum 'void (const StringAccum &)' inline
| `-ParmVarDecl 0x55a774690198 <col:24, col:43> col:43 x 'const StringAccum &'
|-CXXConstructorDecl 0x55a774690408 <line:40:5, col:39> col:12 StringAccum 'void (StringAccum &&)' inline
| `-ParmVarDecl 0x55a774690348 <col:24, col:38> col:38 x 'StringAccum &&'
|-CXXDestructorDecl 0x55a774690500 <line:42:5, col:25> col:12 used ~StringAccum 'void () noexcept' inline
|-CXXMethodDecl 0x55a7746906b8 <line:44:5, col:55> col:25 operator= 'StringAccum &(const StringAccum &)' inline
| `-ParmVarDecl 0x55a7746905f0 <col:35, col:54> col:54 x 'const StringAccum &'
|-CXXMethodDecl 0x55a774690838 <line:46:5, col:50> col:25 operator= 'StringAccum &(StringAccum &&)' inline
| `-ParmVarDecl 0x55a774690770 <col:35, col:49> col:49 x 'StringAccum &&'
|-CXXMethodDecl 0x55a774690930 <line:49:5, col:31> col:24 used data 'const char *() const' inline
|-CXXMethodDecl 0x55a7746909f8 <line:50:5, col:23> col:18 data 'char *()' inline
|-CXXMethodDecl 0x55a774690ac0 <line:51:5, col:25> col:16 used length 'int () const' inline
|-CXXMethodDecl 0x55a774690b88 <line:52:5, col:27> col:16 used capacity 'int () const' inline
|-CXXMethodDecl 0x55a774690c50 <line:54:5, col:23> col:17 c_str 'const char *()'
|-CXXConversionDecl 0x55a774690db8 <line:56:5, col:45> col:12 operator int (StringAccum::*)() const 'StringAccum::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x55a774690e88 <line:57:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55a774690f48 <line:58:5, col:29> col:17 operator! 'bool () const' inline
|-CXXMethodDecl 0x55a774691058 <line:60:5, col:35> col:27 used begin 'StringAccum::const_iterator () const' inline
|-CXXMethodDecl 0x55a774691168 <line:61:5, col:27> col:21 begin 'StringAccum::iterator ()' inline
|-CXXMethodDecl 0x55a774691228 <line:62:5, col:33> col:27 used end 'StringAccum::const_iterator () const' inline
|-CXXMethodDecl 0x55a7746912e8 <line:63:5, col:25> col:21 end 'StringAccum::iterator ()' inline
|-CXXMethodDecl 0x55a774691430 <line:65:5, col:35> col:17 operator[] 'char (int) const' inline
| `-ParmVarDecl 0x55a7746913a0 <col:28, col:32> col:32 i 'int'
|-CXXMethodDecl 0x55a7746915c0 <line:66:5, col:34> col:18 operator[] 'char &(int)' inline
| `-ParmVarDecl 0x55a7746914f0 <col:29, col:33> col:33 i 'int'
|-CXXMethodDecl 0x55a774691688 <line:67:5, col:25> col:17 front 'char () const' inline
|-CXXMethodDecl 0x55a774691780 <line:68:5, col:24> col:18 front 'char &()' inline
|-CXXMethodDecl 0x55a774691840 <line:69:5, col:24> col:17 back 'char () const' inline
|-CXXMethodDecl 0x55a774691908 <line:70:5, col:23> col:18 back 'char &()' inline
|-CXXMethodDecl 0x55a7746919c8 <line:72:5, col:33> col:17 used out_of_memory 'bool () const' inline
|-CXXMethodDecl 0x55a774691a88 <line:73:5, col:31> col:10 assign_out_of_memory 'void ()'
|-CXXMethodDecl 0x55a774691b48 <line:75:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55a774691c98 <line:76:5, col:31> col:18 reserve 'char *(int)' inline
| `-ParmVarDecl 0x55a774691c00 <col:26, col:30> col:30 n 'int'
|-CXXMethodDecl 0x55a774691de8 <line:77:5, col:35> col:17 set_length 'void (int)' inline
| `-ParmVarDecl 0x55a774691d58 <col:28, col:32> col:32 len 'int'
|-CXXMethodDecl 0x55a774691f40 <line:78:5, col:23> col:9 resize 'int (int)'
| `-ParmVarDecl 0x55a774691ea8 <col:16, col:20> col:20 len 'int'
|-CXXMethodDecl 0x55a774692090 <line:79:5, col:40> col:17 used adjust_length 'void (int)' inline
| `-ParmVarDecl 0x55a774692000 <col:31, col:35> col:35 delta 'int'
|-CXXMethodDecl 0x55a7746922b0 <line:80:5, col:54> col:18 extend 'char *(int, int)' inline
| |-ParmVarDecl 0x55a774692150 <col:25, col:29> col:29 nadjust 'int'
| `-ParmVarDecl 0x55a7746921d0 <col:38, col:53> col:42 nreserve 'int' cinit
|   `-IntegerLiteral 0x55a7749d2d28 <col:53> 'int' 0
|-CXXMethodDecl 0x55a774692408 <line:82:5, col:35> col:17 pop_back 'void (int)' inline
| `-ParmVarDecl 0x55a774692378 <col:26, col:34> col:30 n 'int' cinit
|   `-IntegerLiteral 0x55a7749d2d48 <col:34> 'int' 1
|-CXXMethodDecl 0x55a7749d0050 <line:84:5, col:30> col:17 used append 'void (char)' inline
| `-ParmVarDecl 0x55a7749cffc0 <col:24, col:29> col:29 c 'char'
|-CXXMethodDecl 0x55a7749d01a0 <line:85:5, col:39> col:17 used append 'void (unsigned char)' inline
| `-ParmVarDecl 0x55a7749d0110 <col:24, col:38> col:38 c 'unsigned char'
|-CXXMethodDecl 0x55a7749d02f0 <line:86:5, col:35> col:17 append_utf8 'bool (int)' inline
| `-ParmVarDecl 0x55a7749d0260 <col:29, col:33> col:33 ch 'int'
|-CXXMethodDecl 0x55a7749d0440 <line:87:5, col:40> col:17 used append 'void (const char *)' inline
| `-ParmVarDecl 0x55a7749d03b0 <col:24, col:36> col:36 cstr 'const char *'
|-CXXMethodDecl 0x55a7749d0618 <line:88:5, col:46> col:17 used append 'void (const char *, int)' inline
| |-ParmVarDecl 0x55a7749d0500 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x55a7749d0580 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x55a7749d07f8 <line:89:5, col:55> col:17 used append 'void (const unsigned char *, int)' inline
| |-ParmVarDecl 0x55a7749d06e0 <col:24, col:45> col:45 s 'const unsigned char *'
| `-ParmVarDecl 0x55a7749d0760 <col:48, col:52> col:52 len 'int'
|-CXXMethodDecl 0x55a7749d09d8 <line:90:5, col:59> col:17 used append 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x55a7749d08c0 <col:24, col:36> col:36 first 'const char *'
| `-ParmVarDecl 0x55a7749d0940 <col:43, col:55> col:55 last 'const char *'
|-CXXMethodDecl 0x55a7749d0bb8 <line:91:5, col:77> col:17 append 'void (const unsigned char *, const unsigned char *)' inline
| |-ParmVarDecl 0x55a7749d0aa0 <col:24, col:45> col:45 first 'const unsigned char *'
| `-ParmVarDecl 0x55a7749d0b20 <col:52, col:73> col:73 last 'const unsigned char *'
|-CXXMethodDecl 0x55a7749d0d98 <line:92:5, col:36> col:10 append_fill 'void (int, int)'
| |-ParmVarDecl 0x55a7749d0c80 <col:22, col:26> col:26 c 'int'
| `-ParmVarDecl 0x55a7749d0d00 <col:29, col:33> col:33 len 'int'
|-CXXMethodDecl 0x55a7749d10f8 <line:93:5, col:81> col:10 used append_numeric 'void (String::intmax_t, int, bool)'
| |-ParmVarDecl 0x55a7749d0ee0 <col:25, col:42> col:42 x 'String::intmax_t':'long'
| |-ParmVarDecl 0x55a7749d0f60 <col:45, col:56> col:49 base 'int' cinit
| | `-IntegerLiteral 0x55a7749d2d68 <col:56> 'int' 10
| `-ParmVarDecl 0x55a7749d0fd8 <col:60, col:77> col:65 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55a7749d2d88 <col:77> 'bool' true
|-CXXMethodDecl 0x55a7749d1458 <line:94:5, col:82> col:10 used append_numeric 'void (String::uintmax_t, int, bool)'
| |-ParmVarDecl 0x55a7749d1240 <col:25, col:43> col:43 x 'String::uintmax_t':'unsigned long'
| |-ParmVarDecl 0x55a7749d12c0 <col:46, col:57> col:50 base 'int' cinit
| | `-IntegerLiteral 0x55a7749d2d98 <col:57> 'int' 10
| `-ParmVarDecl 0x55a7749d1338 <col:61, col:78> col:66 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55a7749d2db8 <col:78> 'bool' true
|-CXXMethodDecl 0x55a7749d1680 <line:96:5, col:57> col:18 snprintf 'StringAccum &(int, const char *, ...)'
| |-ParmVarDecl 0x55a7749d1528 <col:27, col:31> col:31 n 'int'
| `-ParmVarDecl 0x55a7749d15a8 <col:34, col:46> col:46 format 'const char *'
|-CXXMethodDecl 0x55a7749d1778 <line:98:5, col:24> col:12 used take_string 'String ()'
|-CXXMethodDecl 0x55a7749d18e8 <line:100:5, col:29> col:10 used swap 'void (StringAccum &)'
| `-ParmVarDecl 0x55a7749d1828 <col:15, col:28> col:28 x 'StringAccum &'
|-CXXMethodDecl 0x55a7749d1a38 <line:104:5, col:62> col:17 forward 'void (int)' inline
| |-ParmVarDecl 0x55a7749d19a8 <col:25, col:29> col:29 delta 'int'
| `-DeprecatedAttr 0x55a7749d1ae0 <col:51> "" ""
|-AccessSpecDecl 0x55a7749d1b50 <line:106:3, col:10> col:3 private
|-EnumDecl 0x55a7749d1b78 <line:108:5, line:110:5> line:108:5
| `-EnumConstantDecl 0x55a7749d1cc8 <line:109:2, col:23> col:2 referenced MEMO_SPACE 'StringAccum::(anonymous enum at ../dummy_inc/click/straccum.hh:108:5)'
|   `-ImplicitCastExpr 0x55a7749d1d18 <col:15, col:23> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55a7749d1ca8 <col:15, col:23> 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)' Int: 12
|       `-DeclRefExpr 0x55a7749d1c78 <col:15, col:23> 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)' EnumConstant 0x55a7745af048 'MEMO_SPACE' 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)'
|-CXXRecordDecl 0x55a7749d1d30 <line:112:5, line:122:5> line:112:12 referenced struct rep_t definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55a7749d1e48 <col:5, col:12> col:12 implicit referenced struct rep_t
| |-FieldDecl 0x55a7749d1ef0 <line:113:2, col:17> col:17 referenced s 'unsigned char *'
| |-FieldDecl 0x55a7749d1f58 <line:114:2, col:6> col:6 referenced len 'int'
| |-FieldDecl 0x55a7749d1fc0 <line:115:2, col:6> col:6 referenced cap 'int'
| |-CXXConstructorDecl 0x55a7749d2070 <line:116:2, line:119:2> line:116:2 used rep_t 'void ()'
| | |-CXXCtorInitializer Field 0x55a7749d1ef0 's' 'unsigned char *'
| | | `-CXXReinterpretCastExpr 0x55a7749d2ef0 <line:117:10, col:84> 'unsigned char *' reinterpret_cast<unsigned char *> <BitCast>
| | |   `-CXXConstCastExpr 0x55a7749d2ea8 <col:44, col:83> 'char *' const_cast<char *> <NoOp>
| | |     `-CallExpr 0x55a7749d2e70 <col:63, col:82> 'const char *'
| | |       `-ImplicitCastExpr 0x55a7749d2e58 <col:63, col:71> 'const char *(*)()' <FunctionToPointerDecay>
| | |         `-DeclRefExpr 0x55a7749d2e00 <col:63, col:71> 'const char *()' lvalue CXXMethod 0x55a7745cc2d0 'empty_data' 'const char *()'
| | |-CXXCtorInitializer Field 0x55a7749d1f58 'len' 'int'
| | | `-IntegerLiteral 0x55a7749d2f68 <line:118:12> 'int' 0
| | |-CXXCtorInitializer Field 0x55a7749d1fc0 'cap' 'int'
| | | `-IntegerLiteral 0x55a7749d2fd0 <col:20> 'int' 0
| | `-CompoundStmt 0x55a7749d3050 <col:23, line:119:2>
| |-CXXConstructorDecl 0x55a7749d21e8 <line:120:2, line:121:2> line:120:11 rep_t 'void (uninitialized_type)'
| | |-ParmVarDecl 0x55a7749d2128 <col:17> col:35 'uninitialized_type'
| | `-CompoundStmt 0x55a7749d3060 <col:37, line:121:2>
| |-CXXConstructorDecl 0x55a7749d5278 <line:112:12> col:12 implicit used constexpr rep_t 'void (const StringAccum::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55a7749d5388 <col:12> col:12 used 'const StringAccum::rep_t &'
| | |-CXXCtorInitializer Field 0x55a7749d1ef0 's' 'unsigned char *'
| | | `-ImplicitCastExpr 0x55a7749d6cc0 <col:12> 'unsigned char *' <LValueToRValue>
| | |   `-MemberExpr 0x55a7749d6c90 <col:12> 'unsigned char *const' lvalue .s 0x55a7749d1ef0
| | |     `-DeclRefExpr 0x55a7749d6c70 <col:12> 'const StringAccum::rep_t' lvalue ParmVar 0x55a7749d5388 '' 'const StringAccum::rep_t &'
| | |-CXXCtorInitializer Field 0x55a7749d1f58 'len' 'int'
| | | `-ImplicitCastExpr 0x55a7749d6d50 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x55a7749d6d20 <col:12> 'const int' lvalue .len 0x55a7749d1f58
| | |     `-DeclRefExpr 0x55a7749d6d00 <col:12> 'const StringAccum::rep_t' lvalue ParmVar 0x55a7749d5388 '' 'const StringAccum::rep_t &'
| | |-CXXCtorInitializer Field 0x55a7749d1fc0 'cap' 'int'
| | | `-ImplicitCastExpr 0x55a7749d6de0 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x55a7749d6db0 <col:12> 'const int' lvalue .cap 0x55a7749d1fc0
| | |     `-DeclRefExpr 0x55a7749d6d90 <col:12> 'const StringAccum::rep_t' lvalue ParmVar 0x55a7749d5388 '' 'const StringAccum::rep_t &'
| | `-CompoundStmt 0x55a7749d6e38 <col:12>
| |-CXXConstructorDecl 0x55a7749d5428 <col:12> col:12 implicit constexpr rep_t 'void (StringAccum::rep_t &&)' inline default trivial noexcept-unevaluated 0x55a7749d5428
| | `-ParmVarDecl 0x55a7749d5538 <col:12> col:12 'StringAccum::rep_t &&'
| `-CXXDestructorDecl 0x55a7749d70f0 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
|-FieldDecl 0x55a7749d22c0 <line:124:5, col:11> col:11 referenced r_ 'StringAccum::rep_t'
|-CXXMethodDecl 0x55a7749d23c0 <line:126:5, col:19> col:11 used grow 'char *(int)'
| `-ParmVarDecl 0x55a7749d2328 <col:16> col:19 'int'
|-CXXMethodDecl 0x55a7749d25a0 <line:127:5, col:48> col:11 used hard_extend 'char *(int, int)'
| |-ParmVarDecl 0x55a7749d2480 <col:23, col:27> col:27 nadjust 'int'
| `-ParmVarDecl 0x55a7749d2500 <col:36, col:40> col:40 nreserve 'int'
|-CXXMethodDecl 0x55a7749d2780 <line:128:5, col:44> col:10 used hard_append 'void (const char *, int)'
| |-ParmVarDecl 0x55a7749d2668 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x55a7749d26e8 <col:37, col:41> col:41 len 'int'
|-CXXMethodDecl 0x55a7749d28d8 <line:129:5, col:43> col:10 used hard_append_cstr 'void (const char *)'
| `-ParmVarDecl 0x55a7749d2848 <col:27, col:39> col:39 cstr 'const char *'
|-CXXMethodDecl 0x55a7749d2a28 <line:130:5, col:33> col:10 used append_utf8_hard 'bool (int)'
| `-ParmVarDecl 0x55a7749d2998 <col:27, col:31> col:31 ch 'int'
`-FriendDecl 0x55a7749d2ce8 <line:132:5, col:70> col:25
  `-FunctionDecl 0x55a7749d2c28 parent 0x55a774274278 <col:5, col:70> col:25 operator<< 'StringAccum &(StringAccum &, const String &)'
    |-ParmVarDecl 0x55a7749d2ae0 <col:36, col:49> col:49 sa 'StringAccum &'
    `-ParmVarDecl 0x55a7749d2b58 <col:53, col:67> col:67 str 'const String &'

Layout: <CGRecordLayout
  LLVMType:%class.StringAccum = type { %"struct.StringAccum::rep_t" }
  NonVirtualBaseLLVMType:%class.StringAccum = type { %"struct.StringAccum::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct char_array<16>
         0 |   char [16] x
           | [sizeof=16, dsize=16, align=1,
           |  nvsize=16, nvalign=1]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55a774855770 <../dummy_inc/click/type_traits.hh:165:1, line:167:1> line:165:28 struct char_array definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-TemplateArgument integral 16
|-PackedAttr 0x55a774a0ef48 <line:167:18>
|-CXXRecordDecl 0x55a774a0f008 prev 0x55a774855770 <line:165:21, col:28> col:28 implicit struct char_array
`-FieldDecl 0x55a774a0f118 <line:166:5, col:13> col:10 x 'char [16]'

Layout: <CGRecordLayout
  LLVMType:%struct.char_array = type { [16 x i8] }
  NonVirtualBaseLLVMType:%struct.char_array = type { [16 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct Args::SlotT<unsigned int>
         0 |   struct Args::Slot (primary base)
         0 |     (Slot vtable pointer)
         8 |     struct Args::Slot * _next
        16 |   unsigned int * _ptr
        24 |   unsigned int _slot
           | [sizeof=32, dsize=28, align=8,
           |  nvsize=28, nvalign=8]

*** Dumping AST Record Layout
         0 | class Notifier
         0 |   (Notifier vtable pointer)
         8 |   class NotifierSignal _signal
         8 |     union NotifierSignal::vmvalue _v
         8 |       class atomic_uint32_t * v1
         8 |       struct NotifierSignal::vmpair * vm
        16 |     uint32_t _mask
        24 |   enum Notifier::SearchOp _search_op
           | [sizeof=32, dsize=28, align=8,
           |  nvsize=28, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55a7748ce0c8 <../dummy_inc/click/notifier.hh:73:1, line:130:1> line:73:7 referenced class Notifier definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-CXXRecordDecl 0x55a7748ce1e8 <col:1, col:7> col:7 implicit referenced class Notifier
|-AccessSpecDecl 0x55a7748ce278 <col:18, col:24> col:18 public
|-EnumDecl 0x55a7748ce2a0 <line:75:5, col:76> col:10 referenced SearchOp
| |-EnumConstantDecl 0x55a7748ce3a0 <col:21, col:35> col:21 referenced SEARCH_STOP 'Notifier::SearchOp'
| | `-ImplicitCastExpr 0x55a7748ce490 <col:35> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a7748ce380 <col:35> 'int' Int: 0
| |     `-IntegerLiteral 0x55a7748ce360 <col:35> 'int' 0
| |-EnumConstantDecl 0x55a7748ce3f0 <col:38> col:38 SEARCH_CONTINUE 'Notifier::SearchOp'
| `-EnumConstantDecl 0x55a7748ce440 <col:55> col:55 SEARCH_CONTINUE_WAKE 'Notifier::SearchOp'
|-TypedefDecl 0x55a7748ce6d8 <line:76:5, col:53> col:20 referenced callback_type 'void (*)(void *, Notifier *)'
| `-PointerType 0x55a7748ce670 'void (*)(void *, Notifier *)'
|   `-ParenType 0x55a7748ce610 'void (void *, Notifier *)' sugar
|     `-FunctionProtoType 0x55a7748ce5d0 'void (void *, Notifier *)' cdecl
|       |-BuiltinType 0x55a7742742d0 'void'
|       |-PointerType 0x55a774274ad0 'void *'
|       | `-BuiltinType 0x55a7742742d0 'void'
|       `-PointerType 0x55a7748ce530 'Notifier *'
|         `-RecordType 0x55a7748ce160 'Notifier'
|           `-CXXRecord 0x55a7748ce0c8 'Notifier'
|-CXXConstructorDecl 0x55a7748ce818 <line:78:5, col:46> col:12 Notifier 'void (Notifier::SearchOp)' inline
| `-ParmVarDecl 0x55a7748ce740 <col:21, col:35> col:30 op 'Notifier::SearchOp' cinit
|   `-DeclRefExpr 0x55a7748d27d8 <col:35> 'Notifier::SearchOp' EnumConstant 0x55a7748ce3a0 'SEARCH_STOP' 'Notifier::SearchOp'
|-CXXConstructorDecl 0x55a7748cea28 <line:79:5, col:76> col:12 Notifier 'void (const NotifierSignal &, Notifier::SearchOp)' inline
| |-ParmVarDecl 0x55a7748ce8d8 <col:21, col:43> col:43 signal 'const NotifierSignal &'
| `-ParmVarDecl 0x55a7748ce950 <col:51, col:65> col:60 op 'Notifier::SearchOp' cinit
|   `-DeclRefExpr 0x55a7748d27f8 <col:65> 'Notifier::SearchOp' EnumConstant 0x55a7748ce3a0 'SEARCH_STOP' 'Notifier::SearchOp'
|-CXXDestructorDecl 0x55a7748ceb28 <line:80:5, col:23> col:13 ~Notifier 'void () noexcept' virtual
|-CXXMethodDecl 0x55a7748cec58 <line:83:5, line:85:5> line:83:17 initialized 'bool () const' inline
| `-CompoundStmt 0x55a7748d28b8 <col:37, line:85:5>
|   `-ReturnStmt 0x55a7748d28a8 <line:84:2, col:29>
|     `-CXXMemberCallExpr 0x55a7748d2888 <col:9, col:29> 'bool'
|       `-MemberExpr 0x55a7748d2858 <col:9, col:17> '<bound member function type>' .initialized 0x55a7748cc360
|         `-MemberExpr 0x55a7748d2828 <col:9> 'const NotifierSignal' lvalue ->_signal 0x55a7748d21c8
|           `-CXXThisExpr 0x55a7748d2818 <col:9> 'const Notifier *' implicit this
|-CXXMethodDecl 0x55a7748cee60 <line:87:5, col:52> col:9 initialize 'int (const char *, Router *)'
| |-ParmVarDecl 0x55a7748ced10 <col:20, col:32> col:32 name 'const char *'
| `-ParmVarDecl 0x55a7748ced88 <col:38, col:46> col:46 router 'Router *'
|-CXXMethodDecl 0x55a7748cef58 <line:89:5, col:43> col:34 signal 'const NotifierSignal &() const' inline
|-CXXMethodDecl 0x55a7748cf048 <line:90:5, col:33> col:21 search_op 'Notifier::SearchOp () const' inline
|-CXXMethodDecl 0x55a7748cf108 <line:92:5, col:26> col:17 active 'bool () const' inline
|-CXXMethodDecl 0x55a7748cf248 <line:94:5, col:39> col:17 used set_active 'bool (bool)' inline
| `-ParmVarDecl 0x55a7748cf1b8 <col:28, col:33> col:33 active 'bool'
|-CXXMethodDecl 0x55a7748cf310 <line:95:5, col:22> col:17 wake 'void ()' inline
|-CXXMethodDecl 0x55a7748cf3d0 <line:96:5, col:23> col:17 sleep 'void ()' inline
|-CXXMethodDecl 0x55a7748cf640 <line:98:5, col:71> col:17 used add_activate_callback 'int (Notifier::callback_type, void *)' virtual
| |-ParmVarDecl 0x55a7748cf4a0 <col:39, col:53> col:53 f 'Notifier::callback_type':'void (*)(void *, Notifier *)'
| `-ParmVarDecl 0x55a7748cf520 <col:56, col:62> col:62 user_data 'void *'
|-CXXMethodDecl 0x55a7748cf898 <line:99:5, col:75> col:18 used remove_activate_callback 'void (Notifier::callback_type, void *)' virtual
| |-ParmVarDecl 0x55a7748cf700 <col:43, col:57> col:57 f 'Notifier::callback_type':'void (*)(void *, Notifier *)'
| `-ParmVarDecl 0x55a7748cf780 <col:60, col:66> col:66 user_data 'void *'
|-CXXMethodDecl 0x55a7748cfa20 <line:100:5, col:39> col:16 add_listener 'int (Task *)' inline
| `-ParmVarDecl 0x55a7748cf958 <col:29, col:35> col:35 task 'Task *'
|-CXXMethodDecl 0x55a7748cfb68 <line:101:5, col:43> col:17 remove_listener 'void (Task *)' inline
| `-ParmVarDecl 0x55a7748cfad8 <col:33, col:39> col:39 task 'Task *'
|-CXXMethodDecl 0x55a7748cfcf0 <line:102:5, col:59> col:16 add_dependent_signal 'int (NotifierSignal *)' inline
| `-ParmVarDecl 0x55a7748cfc20 <col:37, col:53> col:53 signal 'NotifierSignal *'
|-CXXMethodDecl 0x55a7748cfe68 <line:103:5, col:63> col:17 remove_dependent_signal 'void (NotifierSignal *)' inline
| `-ParmVarDecl 0x55a7748cfda8 <col:41, col:57> col:57 signal 'NotifierSignal *'
|-VarDecl 0x55a7748cff30 <line:105:5, col:38> col:23 EMPTY_NOTIFIER 'const char []' static
|-VarDecl 0x55a7748cffb8 <line:106:5, col:37> col:23 FULL_NOTIFIER 'const char []' static
|-CXXMethodDecl 0x55a7748d0188 <line:108:5, col:76> col:34 used upstream_empty_signal 'NotifierSignal (Element *, int)' static inline
| |-ParmVarDecl 0x55a7748d0030 <col:56, col:65> col:65 e 'Element *'
| `-ParmVarDecl 0x55a7748d00b0 <col:68, col:72> col:72 port 'int'
|-CXXMethodDecl 0x55a7748d0428 <line:109:5, col:88> col:34 used upstream_empty_signal 'NotifierSignal (Element *, int, Task *)' static inline
| |-ParmVarDecl 0x55a7748d0248 <col:56, col:65> col:65 e 'Element *'
| |-ParmVarDecl 0x55a7748d02c8 <col:68, col:72> col:72 port 'int'
| `-ParmVarDecl 0x55a7748d0340 <col:78, col:84> col:84 task 'Task *'
|-CXXMethodDecl 0x55a7748d06c8 <line:110:5, col:106> col:34 used upstream_empty_signal 'NotifierSignal (Element *, int, Notifier *)' static inline
| |-ParmVarDecl 0x55a7748d04f0 <col:56, col:65> col:65 e 'Element *'
| |-ParmVarDecl 0x55a7748d0570 <col:68, col:72> col:72 port 'int'
| `-ParmVarDecl 0x55a7748d05e8 <col:78, col:88> col:88 dependent_notifier 'Notifier *'
|-CXXMethodDecl 0x55a7748d0a48 <line:111:5, col:103> col:27 used upstream_empty_signal 'NotifierSignal (Element *, int, Notifier::callback_type, void *)' static
| |-ParmVarDecl 0x55a7748d0790 <col:49, col:58> col:58 e 'Element *'
| |-ParmVarDecl 0x55a7748d0810 <col:61, col:65> col:65 port 'int'
| |-ParmVarDecl 0x55a7748d0888 <col:71, col:85> col:85 f 'Notifier::callback_type':'void (*)(void *, Notifier *)'
| `-ParmVarDecl 0x55a7748d0908 <col:88, col:94> col:94 user_data 'void *'
|-CXXMethodDecl 0x55a7748d0c30 <line:113:5, col:77> col:34 used downstream_full_signal 'NotifierSignal (Element *, int)' static inline
| |-ParmVarDecl 0x55a7748d0b18 <col:57, col:66> col:66 e 'Element *'
| `-ParmVarDecl 0x55a7748d0b98 <col:69, col:73> col:73 port 'int'
|-CXXMethodDecl 0x55a7748d0e88 <line:114:5, col:89> col:34 downstream_full_signal 'NotifierSignal (Element *, int, Task *)' static inline
| |-ParmVarDecl 0x55a7748d0cf0 <col:57, col:66> col:66 e 'Element *'
| |-ParmVarDecl 0x55a7748d0d70 <col:69, col:73> col:73 port 'int'
| `-ParmVarDecl 0x55a7748d0de8 <col:79, col:85> col:85 task 'Task *'
|-CXXMethodDecl 0x55a7748d10e8 <line:115:5, col:107> col:34 used downstream_full_signal 'NotifierSignal (Element *, int, Notifier *)' static inline
| |-ParmVarDecl 0x55a7748d0f50 <col:57, col:66> col:66 e 'Element *'
| |-ParmVarDecl 0x55a7748d0fd0 <col:69, col:73> col:73 port 'int'
| `-ParmVarDecl 0x55a7748d1048 <col:79, col:89> col:89 dependent_notifier 'Notifier *'
|-CXXMethodDecl 0x55a7748d13d0 <line:116:5, col:104> col:27 used downstream_full_signal 'NotifierSignal (Element *, int, Notifier::callback_type, void *)' static
| |-ParmVarDecl 0x55a7748d11b0 <col:50, col:59> col:59 e 'Element *'
| |-ParmVarDecl 0x55a7748d1230 <col:62, col:66> col:66 port 'int'
| |-ParmVarDecl 0x55a7748d12a8 <col:72, col:86> col:86 f 'Notifier::callback_type':'void (*)(void *, Notifier *)'
| `-ParmVarDecl 0x55a7748d1328 <col:89, col:95> col:95 user_data 'void *'
|-CXXMethodDecl 0x55a7748d1688 <line:118:5, col:109> col:34 upstream_empty_signal 'NotifierSignal (Element *, int, int)' static inline
| |-ParmVarDecl 0x55a7748d14a0 <col:56, col:65> col:65 e 'Element *'
| |-ParmVarDecl 0x55a7748d1520 <col:68, col:72> col:72 port 'int'
| |-ParmVarDecl 0x55a7748d15a0 <col:78> col:81 'int'
| `-DeprecatedAttr 0x55a7748d1740 <col:98> "" ""
|-CXXMethodDecl 0x55a7748d1a28 <line:119:5, col:121> col:34 upstream_empty_signal 'NotifierSignal (Element *, int, int, Notifier *)' static inline
| |-ParmVarDecl 0x55a7748d17c0 <col:56, col:65> col:65 e 'Element *'
| |-ParmVarDecl 0x55a7748d1840 <col:68, col:72> col:72 port 'int'
| |-ParmVarDecl 0x55a7748d18c0 <col:78> col:81 'int'
| |-ParmVarDecl 0x55a7748d1938 <col:83, col:92> col:93 'Notifier *'
| `-DeprecatedAttr 0x55a7748d1ae8 <col:110> "" ""
|-CXXMethodDecl 0x55a7748d1d08 <line:120:5, col:110> col:34 downstream_full_signal 'NotifierSignal (Element *, int, int)' static inline
| |-ParmVarDecl 0x55a7748d1b68 <col:57, col:66> col:66 e 'Element *'
| |-ParmVarDecl 0x55a7748d1be8 <col:69, col:73> col:73 port 'int'
| |-ParmVarDecl 0x55a7748d1c68 <col:79> col:82 'int'
| `-DeprecatedAttr 0x55a7748d1dc0 <col:99> "" ""
|-CXXMethodDecl 0x55a7748d2060 <line:121:5, col:122> col:34 downstream_full_signal 'NotifierSignal (Element *, int, int, Notifier *)' static inline
| |-ParmVarDecl 0x55a7748d1e40 <col:57, col:66> col:66 e 'Element *'
| |-ParmVarDecl 0x55a7748d1ec0 <col:69, col:73> col:73 port 'int'
| |-ParmVarDecl 0x55a7748d1f40 <col:79> col:82 'int'
| |-ParmVarDecl 0x55a7748d1fb8 <col:84, col:93> col:94 'Notifier *'
| `-DeprecatedAttr 0x55a7748d2120 <col:111> "" ""
|-AccessSpecDecl 0x55a7748d2190 <line:123:3, col:10> col:3 private
|-FieldDecl 0x55a7748d21c8 <line:125:5, col:20> col:20 referenced _signal 'NotifierSignal'
|-FieldDecl 0x55a7748d2228 <line:126:5, col:14> col:14 referenced _search_op 'Notifier::SearchOp'
|-CXXMethodDecl 0x55a7748d23a0 <line:128:5, col:61> col:17 used dependent_signal_callback 'void (void *, Notifier *)' static
| |-ParmVarDecl 0x55a7748d2290 <col:43, col:48> col:49 'void *'
| `-ParmVarDecl 0x55a7748d2308 <col:51, col:60> col:61 'Notifier *'
|-CXXConstructorDecl 0x55a7748d2478 <line:73:7> col:7 implicit Notifier 'void (const Notifier &)' inline default noexcept-unevaluated 0x55a7748d2478
| `-ParmVarDecl 0x55a7748d2588 <col:7> col:7 'const Notifier &'
`-CXXMethodDecl 0x55a7748d2628 <col:7> col:7 implicit operator= 'Notifier &(const Notifier &)' inline default noexcept-unevaluated 0x55a7748d2628
  `-ParmVarDecl 0x55a7748d2768 <col:7> col:7 'const Notifier &'

Layout: <CGRecordLayout
  LLVMType:%class.Notifier = type <{ i32 (...)**, %class.NotifierSignal, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Notifier.base = type <{ i32 (...)**, %class.NotifierSignal, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct uninitialized_type (empty)
           | [sizeof=1, dsize=1, align=1,
           |  nvsize=1, nvalign=1]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55a7743ce448 <../dummy_inc/click/config.h:317:1, line:318:1> line:317:8 referenced struct uninitialized_type definition
|-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |-DefaultConstructor exists trivial constexpr defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55a7743ce568 <col:1, col:8> col:8 implicit struct uninitialized_type
|-CXXConstructorDecl 0x55a7745e03c0 <col:8> col:8 implicit referenced constexpr uninitialized_type 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x55a7745e04a0 <col:8> col:8 implicit constexpr uninitialized_type 'void (const uninitialized_type &)' inline default trivial noexcept-unevaluated 0x55a7745e04a0
| `-ParmVarDecl 0x55a7745e0588 <col:8> col:8 'const uninitialized_type &'
|-CXXConstructorDecl 0x55a7745e0628 <col:8> col:8 implicit constexpr uninitialized_type 'void (uninitialized_type &&)' inline default trivial noexcept-unevaluated 0x55a7745e0628
| `-ParmVarDecl 0x55a7745e0738 <col:8> col:8 'uninitialized_type &&'
`-CXXDestructorDecl 0x55a77477d420 <col:8> col:8 implicit referenced ~uninitialized_type 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%struct.uninitialized_type = type { i8 }
  NonVirtualBaseLLVMType:%struct.uninitialized_type = type { i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class IntArg
         0 |   class NumArg (base) (empty)
         0 |   int base
         4 |   int status
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | struct DefaultArg<unsigned int>
         0 |   class IntArg (base)
         0 |     class NumArg (base) (empty)
         0 |     int base
         4 |     int status
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55a7749879f8 <../dummy_inc/click/args.hh:1040:1, line:1095:1> line:1040:7 referenced class IntArg definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-public 'NumArg'
|-CXXRecordDecl 0x55a774987b58 <col:1, col:7> col:7 implicit referenced class IntArg
|-AccessSpecDecl 0x55a774987be8 <col:32, col:38> col:32 public
|-TypedefDecl 0x55a774987c20 <line:1042:5, col:22> col:22 referenced limb_type 'uint32_t':'unsigned int'
| `-TypedefType 0x55a7743ce7d0 'uint32_t' sugar
|   |-Typedef 0x55a7742dd408 'uint32_t'
|   `-TypedefType 0x55a7742b6440 '__uint32_t' sugar
|     |-Typedef 0x55a7742b6038 '__uint32_t'
|     `-BuiltinType 0x55a774274410 'unsigned int'
|-CXXConstructorDecl 0x55a774987d68 <line:1044:5, line:1046:5> line:1044:5 used IntArg 'void (int)'
| |-ParmVarDecl 0x55a774987c90 <col:12, col:20> col:16 used b 'int' cinit
| | `-IntegerLiteral 0x55a774989298 <col:20> 'int' 0
| |-CXXCtorInitializer 'NumArg'
| | `-CXXConstructExpr 0x55a7749897d8 <col:5> 'NumArg' 'void () noexcept'
| |-CXXCtorInitializer Field 0x55a774988b50 'base' 'int'
| | `-ImplicitCastExpr 0x55a774989338 <line:1045:16> 'int' <LValueToRValue>
| |   `-DeclRefExpr 0x55a7749892f8 <col:16> 'int' lvalue ParmVar 0x55a774987c90 'b' 'int'
| `-CompoundStmt 0x55a774989848 <col:19, line:1046:5>
|-CXXMethodDecl 0x55a7749882b0 <line:1048:5, line:1050:50> line:1048:17 used parse 'const char *(const char *, const char *, bool, int, IntArg::limb_type *, int)'
| |-ParmVarDecl 0x55a774987e30 <col:23, col:35> col:35 begin 'const char *'
| |-ParmVarDecl 0x55a774987eb0 <col:42, col:54> col:54 end 'const char *'
| |-ParmVarDecl 0x55a774987f70 <line:1049:23, col:28> col:28 is_signed 'bool'
| |-ParmVarDecl 0x55a774987ff0 <col:39, col:43> col:43 size 'int'
| |-ParmVarDecl 0x55a7749880b8 <line:1050:23, col:34> col:34 value 'IntArg::limb_type *'
| `-ParmVarDecl 0x55a774988138 <col:41, col:45> col:45 nlimb 'int'
|-FunctionTemplateDecl 0x55a774988708 <line:1052:5, line:1067:5> line:1053:10 parse_saturating
| |-TemplateTypeParmDecl 0x55a774988380 <line:1052:14, col:23> col:23 referenced typename depth 0 index 0 V
| |-CXXMethodDecl 0x55a774988668 <line:1053:5, line:1067:5> line:1053:10 parse_saturating 'bool (const String &, V &, const ArgContext &)'
| | |-ParmVarDecl 0x55a774988428 <col:27, col:41> col:41 referenced str 'const String &'
| | |-ParmVarDecl 0x55a7749884c8 <col:46, col:49> col:49 referenced result 'V &'
| | |-ParmVarDecl 0x55a774988540 <col:57, col:82> col:75 referenced args 'const ArgContext &' cinit
| | | `-DeclRefExpr 0x55a7749892b8 <col:82> 'const ArgContext' lvalue Var 0x55a77497be38 'blank_args' 'const ArgContext'
| | `-CompoundStmt 0x55a77498a778 <col:94, line:1067:5>
| |   |-DeclStmt 0x55a7749899d8 <line:1054:9, col:64>
| |   | `-VarDecl 0x55a774989868 <col:9, col:55> col:24 referenced is_signed 'const bool' constexpr cinit
| |   |   `-CXXDependentScopeMemberExpr 0x55a774989990 <col:36, col:55> '<dependent type>' lvalue ->is_signed
| |   |-DeclStmt 0x55a774989bf8 <line:1055:9, col:91>
| |   | `-VarDecl 0x55a774989a08 <col:9, col:90> col:23 referenced nlimb 'const int' constexpr cinit
| |   |   `-CXXFunctionalCastExpr 0x55a774989bd0 <col:31, col:90> 'int' functional cast to int <Dependent>
| |   |     `-BinaryOperator 0x55a774989bb0 <col:35, col:89> 'unsigned long' '/'
| |   |       |-ParenExpr 0x55a774989b60 <col:35, col:69> 'unsigned long'
| |   |       | `-BinaryOperator 0x55a774989b40 <col:36, col:68> 'unsigned long' '-'
| |   |       |   |-BinaryOperator 0x55a774989ae8 <col:36, col:64> 'unsigned long' '+'
| |   |       |   | |-UnaryExprOrTypeTraitExpr 0x55a774989a98 <col:36, col:44> 'unsigned long' sizeof 'V'
| |   |       |   | `-UnaryExprOrTypeTraitExpr 0x55a774989ac8 <col:48, col:64> 'unsigned long' sizeof 'IntArg::limb_type':'unsigned int'
| |   |       |   `-ImplicitCastExpr 0x55a774989b28 <col:68> 'unsigned long' <IntegralCast>
| |   |       |     `-IntegerLiteral 0x55a774989b08 <col:68> 'int' 1
| |   |       `-UnaryExprOrTypeTraitExpr 0x55a774989b90 <col:73, col:89> 'unsigned long' sizeof 'IntArg::limb_type':'unsigned int'
| |   |-DeclStmt 0x55a774989d58 <line:1056:9, col:27>
| |   | `-VarDecl 0x55a774989cf0 <col:9, col:26> col:19 referenced x 'IntArg::limb_type [nlimb]'
| |   |-IfStmt 0x55a77498a1a8 <line:1057:9, line:1059:22>
| |   | |-CXXOperatorCallExpr 0x55a77498a0d8 <line:1057:13, line:1058:24> '<dependent type>'
| |   | | |-UnresolvedLookupExpr 0x55a77498a050 <col:13> '<overloaded function type>' lvalue (ADL) = 'operator!=' 0x55a7748dd320 0x55a774798798 0x55a7745e1d78 0x55a7745e1a50 0x55a7745d3230 0x55a7745d2ee0 0x55a7745d27d0 0x55a7745a5140 0x55a774531600
| |   | | |-CallExpr 0x55a774989f90 <line:1057:13, col:78> '<dependent type>'
| |   | | | |-UnresolvedMemberExpr 0x55a774989d80 <col:13> '<bound member function type>' lvalue
| |   | | | |-CXXMemberCallExpr 0x55a774989e30 <col:19, col:29> 'String::const_iterator':'const char *'
| |   | | | | `-MemberExpr 0x55a774989e00 <col:19, col:23> '<bound member function type>' .begin 0x55a7745c2438
| |   | | | |   `-DeclRefExpr 0x55a774989de0 <col:19> 'const String' lvalue ParmVar 0x55a774988428 'str' 'const String &'
| |   | | | |-CXXMemberCallExpr 0x55a774989ea0 <col:32, col:40> 'String::const_iterator':'const char *'
| |   | | | | `-MemberExpr 0x55a774989e70 <col:32, col:36> '<bound member function type>' .end 0x55a7745c2650
| |   | | | |   `-DeclRefExpr 0x55a774989e50 <col:32> 'const String' lvalue ParmVar 0x55a774988428 'str' 'const String &'
| |   | | | |-DeclRefExpr 0x55a774989ec0 <col:43> 'const bool' lvalue Var 0x55a774989868 'is_signed' 'const bool'
| |   | | | |-CXXFunctionalCastExpr 0x55a774989f28 <col:54, col:67> 'int' functional cast to int <Dependent>
| |   | | | | `-UnaryExprOrTypeTraitExpr 0x55a774989f08 <col:58, col:66> 'unsigned long' sizeof 'V'
| |   | | | |-DeclRefExpr 0x55a774989f50 <col:70> 'IntArg::limb_type [nlimb]' lvalue Var 0x55a774989cf0 'x' 'IntArg::limb_type [nlimb]'
| |   | | | `-DeclRefExpr 0x55a774989f70 <col:73> 'const int' lvalue Var 0x55a774989a08 'nlimb' 'const int'
| |   | | `-CXXMemberCallExpr 0x55a77498a030 <line:1058:16, col:24> 'String::const_iterator':'const char *'
| |   | |   `-MemberExpr 0x55a77498a000 <col:16, col:20> '<bound member function type>' .end 0x55a7745c2650
| |   | |     `-DeclRefExpr 0x55a774989fe0 <col:16> 'const String' lvalue ParmVar 0x55a774988428 'str' 'const String &'
| |   | `-BinaryOperator 0x55a77498a188 <line:1059:13, col:22> 'int' lvalue '='
| |   |   |-MemberExpr 0x55a77498a120 <col:13> 'int' lvalue ->status 0x55a774988bb8
| |   |   | `-CXXThisExpr 0x55a77498a110 <col:13> 'IntArg *' implicit this
| |   |   `-ImplicitCastExpr 0x55a77498a170 <col:22> 'int' <IntegralCast>
| |   |     `-DeclRefExpr 0x55a77498a150 <col:22> 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)' EnumConstant 0x55a7749877c0 'status_inval' 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| |   |-IfStmt 0x55a77498a3f8 <line:1060:9, line:1063:9>
| |   | |-BinaryOperator 0x55a77498a2e0 <line:1060:13, col:33> 'bool' '&&'
| |   | | |-ImplicitCastExpr 0x55a77498a2c8 <col:13> 'bool' <IntegralToBoolean>
| |   | | | `-ImplicitCastExpr 0x55a77498a2b0 <col:13> 'int' <LValueToRValue>
| |   | | |   `-MemberExpr 0x55a77498a1d0 <col:13> 'int' lvalue ->status 0x55a774988bb8
| |   | | |     `-CXXThisExpr 0x55a77498a1c0 <col:13> 'IntArg *' implicit this
| |   | | `-BinaryOperator 0x55a77498a290 <col:23, col:33> 'bool' '!='
| |   | |   |-ImplicitCastExpr 0x55a77498a260 <col:23> 'int' <LValueToRValue>
| |   | |   | `-MemberExpr 0x55a77498a210 <col:23> 'int' lvalue ->status 0x55a774988bb8
| |   | |   |   `-CXXThisExpr 0x55a77498a200 <col:23> 'IntArg *' implicit this
| |   | |   `-ImplicitCastExpr 0x55a77498a278 <col:33> 'int' <IntegralCast>
| |   | |     `-DeclRefExpr 0x55a77498a240 <col:33> 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)' EnumConstant 0x55a774987850 'status_range' 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| |   | `-CompoundStmt 0x55a77498a3d8 <col:47, line:1063:9>
| |   |   |-CXXMemberCallExpr 0x55a77498a378 <line:1061:13, col:40> 'void'
| |   |   | |-MemberExpr 0x55a77498a320 <col:13, col:18> '<bound member function type>' .error 0x55a77492e390
| |   |   | | `-DeclRefExpr 0x55a77498a300 <col:13> 'const ArgContext' lvalue ParmVar 0x55a774988540 'args' 'const ArgContext &'
| |   |   | `-ImplicitCastExpr 0x55a77498a3a0 <col:24> 'const char *' <ArrayToPointerDecay>
| |   |   |   `-StringLiteral 0x55a77498a350 <col:24> 'const char [15]' lvalue "invalid number"
| |   |   `-ReturnStmt 0x55a77498a3c8 <line:1062:13, col:20>
| |   |     `-CXXBoolLiteralExpr 0x55a77498a3b8 <col:20> 'bool' false
| |   |-DeclStmt 0x55a77498a5c8 <line:1064:9, col:64>
| |   | `-TypedefDecl 0x55a77498a570 <col:9, col:49> col:49 referenced unsigned_v_type 'typename make_unsigned<V>::type'
| |   |   `-DependentNameType 0x55a77498a500 'typename make_unsigned<V>::type' dependent
| |   |-CallExpr 0x55a77498a728 <line:1065:9, col:71> '<dependent type>'
| |   | |-UnresolvedLookupExpr 0x55a77498a5e0 <col:9> '<overloaded function type>' lvalue (ADL) = 'extract_integer' 0x55a7745655c8
| |   | |-DeclRefExpr 0x55a77498a628 <col:25> 'IntArg::limb_type [nlimb]' lvalue Var 0x55a774989cf0 'x' 'IntArg::limb_type [nlimb]'
| |   | `-CXXReinterpretCastExpr 0x55a77498a6f8 <col:28, col:70> 'unsigned_v_type':'typename make_unsigned<V>::type' lvalue reinterpret_cast<unsigned_v_type &> <Dependent>
| |   |   `-DeclRefExpr 0x55a77498a670 <col:64> 'V' lvalue ParmVar 0x55a7749884c8 'result' 'V &'
| |   `-ReturnStmt 0x55a77498a768 <line:1066:9, col:16>
| |     `-CXXBoolLiteralExpr 0x55a77498a758 <col:16> 'bool' true
| `-CXXMethodDecl 0x55a774a5f4b8 <line:1053:5, line:1067:5> line:1053:10 used parse_saturating 'bool (const String &, unsigned int &, const ArgContext &)'
|   |-TemplateArgument type 'unsigned int'
|   |-ParmVarDecl 0x55a774a5f290 <col:27, col:41> col:41 used str 'const String &'
|   |-ParmVarDecl 0x55a774a5f368 <col:46, col:49> col:49 used result 'unsigned int &'
|   |-ParmVarDecl 0x55a774a5f3d0 <col:57, col:82> col:75 used args 'const ArgContext &'
|   `-CompoundStmt 0x55a774a61250 <col:94, line:1067:5>
|     |-DeclStmt 0x55a774a5fcc8 <line:1054:9, col:64>
|     | `-VarDecl 0x55a774a5fae8 <col:9, col:55> col:24 referenced is_signed 'const bool' constexpr cinit
|     |   `-ImplicitCastExpr 0x55a774a5fc58 <col:36, col:55> 'bool' <LValueToRValue>
|     |     `-DeclRefExpr 0x55a774a5fc28 <col:36, col:55> 'const bool' lvalue Var 0x55a7745547e0 'is_signed' 'const bool' non_odr_use_constant
|     |-DeclStmt 0x55a774a5fea8 <line:1055:9, col:91>
|     | `-VarDecl 0x55a774a5fce0 <col:9, col:90> col:23 referenced nlimb 'const int' constexpr cinit
|     |   `-CXXFunctionalCastExpr 0x55a774a5fe28 <col:31, col:90> 'int' functional cast to int <NoOp>
|     |     `-ImplicitCastExpr 0x55a774a5fe10 <col:35, col:89> 'int' <IntegralCast> part_of_explicit_cast
|     |       `-BinaryOperator 0x55a774a5fdf0 <col:35, col:89> 'unsigned long' '/'
|     |         |-ParenExpr 0x55a774a5fdd0 <col:35, col:69> 'unsigned long'
|     |         | `-BinaryOperator 0x55a774a5fdb0 <col:36, col:68> 'unsigned long' '-'
|     |         |   |-BinaryOperator 0x55a774a5fd78 <col:36, col:64> 'unsigned long' '+'
|     |         |   | |-UnaryExprOrTypeTraitExpr 0x55a774a5fd58 <col:36, col:44> 'unsigned long' sizeof 'unsigned int':'unsigned int'
|     |         |   | `-UnaryExprOrTypeTraitExpr 0x55a774989ac8 <col:48, col:64> 'unsigned long' sizeof 'IntArg::limb_type':'unsigned int'
|     |         |   `-ImplicitCastExpr 0x55a774a5fd98 <col:68> 'unsigned long' <IntegralCast>
|     |         |     `-IntegerLiteral 0x55a774989b08 <col:68> 'int' 1
|     |         `-UnaryExprOrTypeTraitExpr 0x55a774989b90 <col:73, col:89> 'unsigned long' sizeof 'IntArg::limb_type':'unsigned int'
|     |-DeclStmt 0x55a774a60040 <line:1056:9, col:27>
|     | `-VarDecl 0x55a774a5ffd8 <col:9, col:26> col:19 used x 'IntArg::limb_type [1]'
|     |-IfStmt 0x55a774a604d0 <line:1057:9, line:1059:22>
|     | |-BinaryOperator 0x55a774a60478 <line:1057:13, line:1058:24> 'bool' '!='
|     | | |-CXXMemberCallExpr 0x55a774a60330 <line:1057:13, col:78> 'const char *'
|     | | | |-MemberExpr 0x55a774a60300 <col:13> '<bound member function type>' ->parse 0x55a7749882b0
|     | | | | `-CXXThisExpr 0x55a774a602f0 <col:13> 'IntArg *' implicit this
|     | | | |-CXXMemberCallExpr 0x55a774a60190 <col:19, col:29> 'String::const_iterator':'const char *'
|     | | | | `-MemberExpr 0x55a774a60160 <col:19, col:23> '<bound member function type>' .begin 0x55a7745c2438
|     | | | |   `-DeclRefExpr 0x55a774a60140 <col:19> 'const String' lvalue ParmVar 0x55a774a5f290 'str' 'const String &'
|     | | | |-CXXMemberCallExpr 0x55a774a60200 <col:32, col:40> 'String::const_iterator':'const char *'
|     | | | | `-MemberExpr 0x55a774a601d0 <col:32, col:36> '<bound member function type>' .end 0x55a7745c2650
|     | | | |   `-DeclRefExpr 0x55a774a601b0 <col:32> 'const String' lvalue ParmVar 0x55a774a5f290 'str' 'const String &'
|     | | | |-ImplicitCastExpr 0x55a774a603a0 <col:43> 'bool' <LValueToRValue>
|     | | | | `-DeclRefExpr 0x55a774a60380 <col:43> 'const bool' lvalue Var 0x55a774a5fae8 'is_signed' 'const bool' non_odr_use_constant
|     | | | |-CXXFunctionalCastExpr 0x55a774a60288 <col:54, col:67> 'int' functional cast to int <NoOp>
|     | | | | `-ImplicitCastExpr 0x55a774a60270 <col:58, col:66> 'int' <IntegralCast> part_of_explicit_cast
|     | | | |   `-UnaryExprOrTypeTraitExpr 0x55a774a60250 <col:58, col:66> 'unsigned long' sizeof 'unsigned int':'unsigned int'
|     | | | |-ImplicitCastExpr 0x55a774a603b8 <col:70> 'IntArg::limb_type *' <ArrayToPointerDecay>
|     | | | | `-DeclRefExpr 0x55a774a602b0 <col:70> 'IntArg::limb_type [1]' lvalue Var 0x55a774a5ffd8 'x' 'IntArg::limb_type [1]'
|     | | | `-ImplicitCastExpr 0x55a774a603f0 <col:73> 'int' <LValueToRValue>
|     | | |   `-DeclRefExpr 0x55a774a603d0 <col:73> 'const int' lvalue Var 0x55a774a5fce0 'nlimb' 'const int' non_odr_use_constant
|     | | `-CXXMemberCallExpr 0x55a774a60458 <line:1058:16, col:24> 'String::const_iterator':'const char *'
|     | |   `-MemberExpr 0x55a774a60428 <col:16, col:20> '<bound member function type>' .end 0x55a7745c2650
|     | |     `-DeclRefExpr 0x55a774a60408 <col:16> 'const String' lvalue ParmVar 0x55a774a5f290 'str' 'const String &'
|     | `-BinaryOperator 0x55a774a604b0 <line:1059:13, col:22> 'int' lvalue '='
|     |   |-MemberExpr 0x55a77498a120 <col:13> 'int' lvalue ->status 0x55a774988bb8
|     |   | `-CXXThisExpr 0x55a77498a110 <col:13> 'IntArg *' implicit this
|     |   `-ImplicitCastExpr 0x55a774a60498 <col:22> 'int' <IntegralCast>
|     |     `-DeclRefExpr 0x55a77498a150 <col:22> 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)' EnumConstant 0x55a7749877c0 'status_inval' 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
|     |-IfStmt 0x55a774a60648 <line:1060:9, line:1063:9>
|     | |-BinaryOperator 0x55a774a60568 <line:1060:13, col:33> 'bool' '&&'
|     | | |-ImplicitCastExpr 0x55a774a60550 <col:13> 'bool' <IntegralToBoolean>
|     | | | `-ImplicitCastExpr 0x55a774a60538 <col:13> 'int' <LValueToRValue>
|     | | |   `-MemberExpr 0x55a77498a1d0 <col:13> 'int' lvalue ->status 0x55a774988bb8
|     | | |     `-CXXThisExpr 0x55a77498a1c0 <col:13> 'IntArg *' implicit this
|     | | `-BinaryOperator 0x55a774a60518 <col:23, col:33> 'bool' '!='
|     | |   |-ImplicitCastExpr 0x55a774a604e8 <col:23> 'int' <LValueToRValue>
|     | |   | `-MemberExpr 0x55a77498a210 <col:23> 'int' lvalue ->status 0x55a774988bb8
|     | |   |   `-CXXThisExpr 0x55a77498a200 <col:23> 'IntArg *' implicit this
|     | |   `-ImplicitCastExpr 0x55a774a60500 <col:33> 'int' <IntegralCast>
|     | |     `-DeclRefExpr 0x55a77498a240 <col:33> 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)' EnumConstant 0x55a774987850 'status_range' 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
|     | `-CompoundStmt 0x55a774a60628 <col:47, line:1063:9>
|     |   |-CXXMemberCallExpr 0x55a774a605d8 <line:1061:13, col:40> 'void'
|     |   | |-MemberExpr 0x55a774a605a8 <col:13, col:18> '<bound member function type>' .error 0x55a77492e390
|     |   | | `-DeclRefExpr 0x55a774a60588 <col:13> 'const ArgContext' lvalue ParmVar 0x55a774a5f3d0 'args' 'const ArgContext &'
|     |   | `-ImplicitCastExpr 0x55a774a60600 <col:24> 'const char *' <ArrayToPointerDecay>
|     |   |   `-StringLiteral 0x55a77498a350 <col:24> 'const char [15]' lvalue "invalid number"
|     |   `-ReturnStmt 0x55a774a60618 <line:1062:13, col:20>
|     |     `-CXXBoolLiteralExpr 0x55a77498a3b8 <col:20> 'bool' false
|     |-DeclStmt 0x55a774a60b88 <line:1064:9, col:64>
|     | `-TypedefDecl 0x55a774a60b30 <col:9, col:49> col:49 unsigned_v_type 'typename make_unsigned<unsigned int>::type':'unsigned int'
|     |   `-ElaboratedType 0x55a774a60ae0 'typename make_unsigned<unsigned int>::type' sugar
|     |     `-TypedefType 0x55a774a60ac0 'make_unsigned<unsigned int>::type' sugar
|     |       |-Typedef 0x55a774a60a50 'type'
|     |       `-ElaboratedType 0x55a774a60a00 'typename integer_traits<unsigned int>::unsigned_type' sugar
|     |         `-TypedefType 0x55a774a609e0 'integer_traits<unsigned int>::unsigned_type' sugar
|     |           |-Typedef 0x55a774554938 'unsigned_type'
|     |           `-BuiltinType 0x55a774274410 'unsigned int'
|     |-CallExpr 0x55a774a611e0 <line:1065:9, col:71> 'void'
|     | |-ImplicitCastExpr 0x55a774a611c8 <col:9> 'void (*)(const unsigned int *, unsigned int &)' <FunctionToPointerDecay>
|     | | `-DeclRefExpr 0x55a774a61148 <col:9> 'void (const unsigned int *, unsigned int &)' lvalue Function 0x55a774a61028 'extract_integer' 'void (const unsigned int *, unsigned int &)' (FunctionTemplate 0x55a7745655c8 'extract_integer')
|     | |-ImplicitCastExpr 0x55a774a61228 <col:25> 'const unsigned int *' <NoOp>
|     | | `-ImplicitCastExpr 0x55a774a61210 <col:25> 'IntArg::limb_type *' <ArrayToPointerDecay>
|     | |   `-DeclRefExpr 0x55a774a60be8 <col:25> 'IntArg::limb_type [1]' lvalue Var 0x55a774a5ffd8 'x' 'IntArg::limb_type [1]'
|     | `-CXXReinterpretCastExpr 0x55a774a60cb8 <col:28, col:70> 'unsigned_v_type':'unsigned int' lvalue reinterpret_cast<unsigned_v_type &> <NoOp>
|     |   `-DeclRefExpr 0x55a774a60c68 <col:64> 'unsigned int':'unsigned int' lvalue ParmVar 0x55a774a5f368 'result' 'unsigned int &'
|     `-ReturnStmt 0x55a774a61240 <line:1066:9, col:16>
|       `-CXXBoolLiteralExpr 0x55a77498a758 <col:16> 'bool' true
|-FunctionTemplateDecl 0x55a774988ac8 <line:1069:5, line:1083:5> line:1070:10 parse
| |-TemplateTypeParmDecl 0x55a774988778 <line:1069:14, col:23> col:23 referenced typename depth 0 index 0 V
| |-CXXMethodDecl 0x55a774988a28 <line:1070:5, line:1083:5> line:1070:10 parse 'bool (const String &, V &, const ArgContext &)'
| | |-ParmVarDecl 0x55a774988828 <col:16, col:30> col:30 referenced str 'const String &'
| | |-ParmVarDecl 0x55a7749888c8 <col:35, col:38> col:38 referenced result 'V &'
| | |-ParmVarDecl 0x55a774988940 <col:46, col:71> col:64 referenced args 'const ArgContext &' cinit
| | | `-DeclRefExpr 0x55a7749892d8 <col:71> 'const ArgContext' lvalue Var 0x55a77497be38 'blank_args' 'const ArgContext'
| | `-CompoundStmt 0x55a77498aee8 <col:83, line:1083:5>
| |   |-DeclStmt 0x55a77498a840 <line:1071:9, col:12>
| |   | `-VarDecl 0x55a77498a7d8 <col:9, col:11> col:11 referenced x 'V'
| |   `-IfStmt 0x55a77498aec0 <line:1072:9, line:1082:9> has_else
| |     |-BinaryOperator 0x55a77498aad0 <line:1072:13, line:1073:49> '<dependent type>' '||'
| |     | |-UnaryOperator 0x55a77498a958 <line:1072:13, col:43> '<dependent type>' prefix '!' cannot overflow
| |     | | `-CallExpr 0x55a77498a920 <col:14, col:43> '<dependent type>'
| |     | |   |-UnresolvedMemberExpr 0x55a77498a868 <col:14> '<bound member function type>' lvalue
| |     | |   |-DeclRefExpr 0x55a77498a8c0 <col:31> 'const String' lvalue ParmVar 0x55a774988828 'str' 'const String &'
| |     | |   |-DeclRefExpr 0x55a77498a8e0 <col:36> 'V' lvalue Var 0x55a77498a7d8 'x' 'V'
| |     | |   `-DeclRefExpr 0x55a77498a900 <col:39> 'const ArgContext' lvalue ParmVar 0x55a774988940 'args' 'const ArgContext &'
| |     | `-ParenExpr 0x55a77498aab0 <line:1073:16, col:49> 'bool'
| |     |   `-BinaryOperator 0x55a77498aa90 <col:17, col:37> 'bool' '&&'
| |     |     |-ImplicitCastExpr 0x55a77498aa78 <col:17> 'bool' <IntegralToBoolean>
| |     |     | `-ImplicitCastExpr 0x55a77498aa60 <col:17> 'int' <LValueToRValue>
| |     |     |   `-MemberExpr 0x55a77498a980 <col:17> 'int' lvalue ->status 0x55a774988bb8
| |     |     |     `-CXXThisExpr 0x55a77498a970 <col:17> 'IntArg *' implicit this
| |     |     `-BinaryOperator 0x55a77498aa40 <col:27, col:37> 'bool' '!='
| |     |       |-ImplicitCastExpr 0x55a77498aa10 <col:27> 'int' <LValueToRValue>
| |     |       | `-MemberExpr 0x55a77498a9c0 <col:27> 'int' lvalue ->status 0x55a774988bb8
| |     |       |   `-CXXThisExpr 0x55a77498a9b0 <col:27> 'IntArg *' implicit this
| |     |       `-ImplicitCastExpr 0x55a77498aa28 <col:37> 'int' <IntegralCast>
| |     |         `-DeclRefExpr 0x55a77498a9f0 <col:37> 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)' EnumConstant 0x55a774987850 'status_range' 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| |     |-ReturnStmt 0x55a77498ab00 <line:1074:13, col:20>
| |     | `-CXXBoolLiteralExpr 0x55a77498aaf0 <col:20> 'bool' false
| |     `-IfStmt 0x55a77498ae98 <line:1075:14, line:1082:9> has_else
| |       |-BinaryOperator 0x55a77498aba0 <line:1075:18, col:28> 'bool' '=='
| |       | |-ImplicitCastExpr 0x55a77498ab70 <col:18> 'int' <LValueToRValue>
| |       | | `-MemberExpr 0x55a77498ab20 <col:18> 'int' lvalue ->status 0x55a774988bb8
| |       | |   `-CXXThisExpr 0x55a77498ab10 <col:18> 'IntArg *' implicit this
| |       | `-ImplicitCastExpr 0x55a77498ab88 <col:28> 'int' <IntegralCast>
| |       |   `-DeclRefExpr 0x55a77498ab50 <col:28> 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)' EnumConstant 0x55a774987850 'status_range' 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| |       |-CompoundStmt 0x55a77498add8 <col:42, line:1079:9>
| |       | |-CallExpr 0x55a77498ad80 <line:1076:13, line:1077:45> '<dependent type>'
| |       | | |-MemberExpr 0x55a77498abd0 <line:1076:13> '<bound member function type>' ->range_error 0x55a7749891c8
| |       | | | `-CXXThisExpr 0x55a77498abc0 <col:13> 'IntArg *' implicit this
| |       | | |-DeclRefExpr 0x55a77498ac00 <col:25> 'const ArgContext' lvalue ParmVar 0x55a774988940 'args' 'const ArgContext &'
| |       | | |-CXXDependentScopeMemberExpr 0x55a77498ace0 <col:31, col:50> '<dependent type>' lvalue ->is_signed
| |       | | `-CXXUnresolvedConstructExpr 0x55a77498ad58 <line:1077:25, col:44> 'click_int_large_t':'long long' 'click_int_large_t':'long long'
| |       | |   `-DeclRefExpr 0x55a77498ad38 <col:43> 'V' lvalue Var 0x55a77498a7d8 'x' 'V'
| |       | `-ReturnStmt 0x55a77498adc8 <line:1078:13, col:20>
| |       |   `-CXXBoolLiteralExpr 0x55a77498adb8 <col:20> 'bool' false
| |       `-CompoundStmt 0x55a77498ae78 <line:1079:16, line:1082:9>
| |         |-BinaryOperator 0x55a77498ae38 <line:1080:13, col:22> '<dependent type>' '='
| |         | |-DeclRefExpr 0x55a77498adf8 <col:13> 'V' lvalue ParmVar 0x55a7749888c8 'result' 'V &'
| |         | `-DeclRefExpr 0x55a77498ae18 <col:22> 'V' lvalue Var 0x55a77498a7d8 'x' 'V'
| |         `-ReturnStmt 0x55a77498ae68 <line:1081:13, col:20>
| |           `-CXXBoolLiteralExpr 0x55a77498ae58 <col:20> 'bool' true
| `-CXXMethodDecl 0x55a774a5ee78 <line:1070:5, line:1083:5> line:1070:10 used parse 'bool (const String &, unsigned int &, const ArgContext &)'
|   |-TemplateArgument type 'unsigned int'
|   |-ParmVarDecl 0x55a774a5ec50 <col:16, col:30> col:30 used str 'const String &'
|   |-ParmVarDecl 0x55a774a5ed28 <col:35, col:38> col:38 used result 'unsigned int &'
|   |-ParmVarDecl 0x55a774a5ed90 <col:46, col:71> col:64 used args 'const ArgContext &'
|   `-CompoundStmt 0x55a774a5fac8 <col:83, line:1083:5>
|     |-DeclStmt 0x55a774a5f100 <line:1071:9, col:12>
|     | `-VarDecl 0x55a774a5f098 <col:9, col:11> col:11 used x 'unsigned int':'unsigned int'
|     `-IfStmt 0x55a774a5faa0 <line:1072:9, line:1082:9> has_else
|       |-BinaryOperator 0x55a774a5f730 <line:1072:13, line:1073:49> 'bool' '||'
|       | |-UnaryOperator 0x55a774a5f658 <line:1072:13, col:43> 'bool' prefix '!' cannot overflow
|       | | `-CXXMemberCallExpr 0x55a774a5f620 <col:14, col:43> 'bool'
|       | |   |-MemberExpr 0x55a774a5f5d8 <col:14> '<bound member function type>' ->parse_saturating 0x55a774a5f4b8
|       | |   | `-CXXThisExpr 0x55a774a5f5c8 <col:14> 'IntArg *' implicit this
|       | |   |-DeclRefExpr 0x55a774a5f170 <col:31> 'const String' lvalue ParmVar 0x55a774a5ec50 'str' 'const String &'
|       | |   |-DeclRefExpr 0x55a774a5f190 <col:36> 'unsigned int':'unsigned int' lvalue Var 0x55a774a5f098 'x' 'unsigned int':'unsigned int'
|       | |   `-DeclRefExpr 0x55a774a5f1b0 <col:39> 'const ArgContext' lvalue ParmVar 0x55a774a5ed90 'args' 'const ArgContext &'
|       | `-ParenExpr 0x55a774a5f710 <line:1073:16, col:49> 'bool'
|       |   `-BinaryOperator 0x55a774a5f6f0 <col:17, col:37> 'bool' '&&'
|       |     |-ImplicitCastExpr 0x55a774a5f6d8 <col:17> 'bool' <IntegralToBoolean>
|       |     | `-ImplicitCastExpr 0x55a774a5f6c0 <col:17> 'int' <LValueToRValue>
|       |     |   `-MemberExpr 0x55a77498a980 <col:17> 'int' lvalue ->status 0x55a774988bb8
|       |     |     `-CXXThisExpr 0x55a77498a970 <col:17> 'IntArg *' implicit this
|       |     `-BinaryOperator 0x55a774a5f6a0 <col:27, col:37> 'bool' '!='
|       |       |-ImplicitCastExpr 0x55a774a5f670 <col:27> 'int' <LValueToRValue>
|       |       | `-MemberExpr 0x55a77498a9c0 <col:27> 'int' lvalue ->status 0x55a774988bb8
|       |       |   `-CXXThisExpr 0x55a77498a9b0 <col:27> 'IntArg *' implicit this
|       |       `-ImplicitCastExpr 0x55a774a5f688 <col:37> 'int' <IntegralCast>
|       |         `-DeclRefExpr 0x55a77498a9f0 <col:37> 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)' EnumConstant 0x55a774987850 'status_range' 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
|       |-ReturnStmt 0x55a774a5f750 <line:1074:13, col:20>
|       | `-CXXBoolLiteralExpr 0x55a77498aaf0 <col:20> 'bool' false
|       `-IfStmt 0x55a774a5fa78 <line:1075:14, line:1082:9> has_else
|         |-BinaryOperator 0x55a774a5f790 <line:1075:18, col:28> 'bool' '=='
|         | |-ImplicitCastExpr 0x55a774a5f760 <col:18> 'int' <LValueToRValue>
|         | | `-MemberExpr 0x55a77498ab20 <col:18> 'int' lvalue ->status 0x55a774988bb8
|         | |   `-CXXThisExpr 0x55a77498ab10 <col:18> 'IntArg *' implicit this
|         | `-ImplicitCastExpr 0x55a774a5f778 <col:28> 'int' <IntegralCast>
|         |   `-DeclRefExpr 0x55a77498ab50 <col:28> 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)' EnumConstant 0x55a774987850 'status_range' 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
|         |-CompoundStmt 0x55a774a5f9b0 <col:42, line:1079:9>
|         | |-CXXMemberCallExpr 0x55a774a5f920 <line:1076:13, line:1077:45> 'void'
|         | | |-MemberExpr 0x55a77498abd0 <line:1076:13> '<bound member function type>' ->range_error 0x55a7749891c8
|         | | | `-CXXThisExpr 0x55a77498abc0 <col:13> 'IntArg *' implicit this
|         | | |-DeclRefExpr 0x55a774a5f7b0 <col:25> 'const ArgContext' lvalue ParmVar 0x55a774a5ed90 'args' 'const ArgContext &'
|         | | |-ImplicitCastExpr 0x55a774a5f988 <col:31, col:50> 'bool' <LValueToRValue>
|         | | | `-DeclRefExpr 0x55a774a5f958 <col:31, col:50> 'const bool' lvalue Var 0x55a7745547e0 'is_signed' 'const bool' non_odr_use_constant
|         | | `-CXXFunctionalCastExpr 0x55a774a5f8f8 <line:1077:25, col:44> 'click_int_large_t':'long long' functional cast to click_int_large_t <NoOp>
|         | |   `-ImplicitCastExpr 0x55a774a5f8e0 <col:43> 'click_int_large_t':'long long' <IntegralCast> part_of_explicit_cast
|         | |     `-ImplicitCastExpr 0x55a774a5f8c8 <col:43> 'unsigned int':'unsigned int' <LValueToRValue> part_of_explicit_cast
|         | |       `-DeclRefExpr 0x55a774a5f8a8 <col:43> 'unsigned int':'unsigned int' lvalue Var 0x55a774a5f098 'x' 'unsigned int':'unsigned int'
|         | `-ReturnStmt 0x55a774a5f9a0 <line:1078:13, col:20>
|         |   `-CXXBoolLiteralExpr 0x55a77498adb8 <col:20> 'bool' false
|         `-CompoundStmt 0x55a774a5fa58 <line:1079:16, line:1082:9>
|           |-BinaryOperator 0x55a774a5fa28 <line:1080:13, col:22> 'unsigned int':'unsigned int' lvalue '='
|           | |-DeclRefExpr 0x55a774a5f9d0 <col:13> 'unsigned int':'unsigned int' lvalue ParmVar 0x55a774a5ed28 'result' 'unsigned int &'
|           | `-ImplicitCastExpr 0x55a774a5fa10 <col:22> 'unsigned int':'unsigned int' <LValueToRValue>
|           |   `-DeclRefExpr 0x55a774a5f9f0 <col:22> 'unsigned int':'unsigned int' lvalue Var 0x55a774a5f098 'x' 'unsigned int':'unsigned int'
|           `-ReturnStmt 0x55a774a5fa48 <line:1081:13, col:20>
|             `-CXXBoolLiteralExpr 0x55a77498ae58 <col:20> 'bool' true
|-FieldDecl 0x55a774988b50 <line:1085:5, col:9> col:9 referenced base 'int'
|-FieldDecl 0x55a774988bb8 <line:1086:5, col:9> col:9 referenced status 'int'
|-AccessSpecDecl 0x55a774988c08 <line:1088:3, col:12> col:3 protected
|-CXXMethodDecl 0x55a774988ec0 <line:1090:5, line:1091:51> line:1090:24 span 'const char *(const char *, const char *, bool, int &)' static
| |-ParmVarDecl 0x55a774988c48 <col:29, col:41> col:41 begin 'const char *'
| |-ParmVarDecl 0x55a774988cc8 <col:48, col:60> col:60 end 'const char *'
| |-ParmVarDecl 0x55a774988d40 <line:1091:29, col:34> col:34 is_signed 'bool'
| `-ParmVarDecl 0x55a774988dc0 <col:45, col:50> col:50 b 'int &'
|-CXXMethodDecl 0x55a7749891c8 <line:1092:5, line:1093:45> line:1092:10 used range_error 'void (const ArgContext &, bool, click_int_large_t)'
| |-ParmVarDecl 0x55a774988f90 <col:22, col:40> col:40 args 'const ArgContext &'
| |-ParmVarDecl 0x55a774989008 <col:46, col:51> col:51 is_signed 'bool'
| `-ParmVarDecl 0x55a7749890a0 <line:1093:22, col:40> col:40 value 'click_int_large_t':'long long'
|-CXXConstructorDecl 0x55a77498b748 <line:1040:7> col:7 implicit constexpr IntArg 'void (const IntArg &)' inline default trivial noexcept-unevaluated 0x55a77498b748
| `-ParmVarDecl 0x55a77498b858 <col:7> col:7 'const IntArg &'
|-CXXConstructorDecl 0x55a77498b9d8 <col:7> col:7 implicit used constexpr IntArg 'void (IntArg &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55a77498bae8 <col:7> col:7 used 'IntArg &&'
| |-CXXCtorInitializer 'NumArg'
| | `-CXXConstructExpr 0x55a774a5e500 <col:7> 'NumArg' 'void (NumArg &&) noexcept'
| |   `-ImplicitCastExpr 0x55a774a5e4e0 <col:7> 'NumArg' xvalue <UncheckedDerivedToBase (NumArg)>
| |     `-CXXStaticCastExpr 0x55a774a5e4b0 <col:7> 'IntArg' xvalue static_cast<class IntArg &&> <NoOp>
| |       `-DeclRefExpr 0x55a774a5e480 <col:7> 'IntArg' lvalue ParmVar 0x55a77498bae8 '' 'IntArg &&'
| |-CXXCtorInitializer Field 0x55a774988b50 'base' 'int'
| | `-ImplicitCastExpr 0x55a774a5e5f8 <col:7> 'int' <LValueToRValue>
| |   `-MemberExpr 0x55a774a5e5c8 <col:7> 'int' xvalue .base 0x55a774988b50
| |     `-CXXStaticCastExpr 0x55a774a5e598 <col:7> 'IntArg' xvalue static_cast<class IntArg &&> <NoOp>
| |       `-DeclRefExpr 0x55a774a5e568 <col:7> 'IntArg' lvalue ParmVar 0x55a77498bae8 '' 'IntArg &&'
| |-CXXCtorInitializer Field 0x55a774988bb8 'status' 'int'
| | `-ImplicitCastExpr 0x55a774a5e6c8 <col:7> 'int' <LValueToRValue>
| |   `-MemberExpr 0x55a774a5e698 <col:7> 'int' xvalue .status 0x55a774988bb8
| |     `-CXXStaticCastExpr 0x55a774a5e668 <col:7> 'IntArg' xvalue static_cast<class IntArg &&> <NoOp>
| |       `-DeclRefExpr 0x55a774a5e638 <col:7> 'IntArg' lvalue ParmVar 0x55a77498bae8 '' 'IntArg &&'
| `-CompoundStmt 0x55a774a5e720 <col:7>
`-CXXDestructorDecl 0x55a774a5d6a0 <col:7> col:7 implicit ~IntArg 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.IntArg = type { i32, i32 }
  NonVirtualBaseLLVMType:%class.IntArg = type { i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55a77498fce0 <../dummy_inc/click/args.hh:1182:1, col:61> col:19 struct DefaultArg definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable can_const_default_init
| |-DefaultConstructor exists non_trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-public 'IntArg'
|-TemplateArgument type 'unsigned int'
|-CXXRecordDecl 0x55a77498ff80 <col:12, col:19> col:19 implicit struct DefaultArg
|-CXXConstructorDecl 0x55a774a5d5c8 <col:19> col:19 implicit used DefaultArg 'void () noexcept(false)' inline default
| |-CXXCtorInitializer 'IntArg'
| | `-CXXConstructExpr 0x55a774a5db40 <col:19> 'IntArg' 'void (int)'
| |   `-CXXDefaultArgExpr 0x55a774a5db20 <<invalid sloc>> 'int'
| `-CompoundStmt 0x55a774a5dbb0 <col:19>
|-CXXConstructorDecl 0x55a774a5d7a8 <col:19> col:19 implicit constexpr DefaultArg 'void (const DefaultArg<unsigned int> &)' inline default trivial noexcept-unevaluated 0x55a774a5d7a8
| `-ParmVarDecl 0x55a774a5d8b8 <col:19> col:19 'const DefaultArg<unsigned int> &'
|-CXXConstructorDecl 0x55a774a5d958 <col:19> col:19 implicit used constexpr DefaultArg 'void (DefaultArg<unsigned int> &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55a774a5da68 <col:19> col:19 used 'DefaultArg<unsigned int> &&'
| |-CXXCtorInitializer 'IntArg'
| | `-CXXConstructExpr 0x55a774a5e730 <col:19> 'IntArg' 'void (IntArg &&) noexcept'
| |   `-ImplicitCastExpr 0x55a774a5e460 <col:19> 'IntArg' xvalue <UncheckedDerivedToBase (IntArg)>
| |     `-CXXStaticCastExpr 0x55a774a5e430 <col:19> 'DefaultArg<unsigned int>' xvalue static_cast<struct DefaultArg<unsigned int> &&> <NoOp>
| |       `-DeclRefExpr 0x55a774a5e400 <col:19> 'DefaultArg<unsigned int>' lvalue ParmVar 0x55a774a5da68 '' 'DefaultArg<unsigned int> &&'
| `-CompoundStmt 0x55a774a5e7a0 <col:19>
`-CXXDestructorDecl 0x55a774a5dbf0 <col:19> col:19 implicit referenced ~DefaultArg 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%struct.DefaultArg = type { %class.IntArg }
  NonVirtualBaseLLVMType:%struct.DefaultArg = type { %class.IntArg }
  IsZeroInitializable:1
  BitFields:[
]>
