
*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17)
         0 |   unsigned long long __wseq
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_internal_list
         0 |   struct __pthread_internal_list * __prev
         8 |   struct __pthread_internal_list * __next
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_mutex_s
         0 |   int __lock
         4 |   unsigned int __count
         8 |   int __owner
        12 |   unsigned int __nusers
        16 |   int __kind
        20 |   short __spins
        22 |   short __elision
        24 |   struct __pthread_internal_list __list
        24 |     struct __pthread_internal_list * __prev
        32 |     struct __pthread_internal_list * __next
           | [sizeof=40, dsize=40, align=8,
           |  nvsize=40, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17)
         0 |   unsigned long long __g1_start
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s
         0 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17) 
         0 |     unsigned long long __wseq
         0 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |       unsigned int __low
         4 |       unsigned int __high
         8 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17) 
         8 |     unsigned long long __g1_start
         8 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         8 |       unsigned int __low
        12 |       unsigned int __high
        16 |   unsigned int [2] __g_refs
        24 |   unsigned int [2] __g_size
        32 |   unsigned int __g1_orig_size
        36 |   unsigned int __wrefs
        40 |   unsigned int [2] __g_signals
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_rwlock_arch_t
         0 |   unsigned int __readers
         4 |   unsigned int __writers
         8 |   unsigned int __wrphase_futex
        12 |   unsigned int __writers_futex
        16 |   unsigned int __pad3
        20 |   unsigned int __pad4
        24 |   int __cur_writer
        28 |   int __shared
        32 |   signed char __rwelision
        33 |   unsigned char [7] __pad1
        40 |   unsigned long __pad2
        48 |   unsigned int __flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | lldiv_t
         0 |   long long quot
         8 |   long long rem
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct msghdr
         0 |   void * msg_name
         8 |   socklen_t msg_namelen
        16 |   struct iovec * msg_iov
        24 |   size_t msg_iovlen
        32 |   void * msg_control
        40 |   size_t msg_controllen
        48 |   int msg_flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | struct in_addr
         0 |   in_addr_t s_addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5)
         0 |   uint8_t [16] __u6_addr8
         0 |   uint16_t [8] __u6_addr16
         0 |   uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr
         0 |   sa_family_t sa_family
         2 |   char [14] sa_data
           | [sizeof=16, dsize=16, align=2,
           |  nvsize=16, nvalign=2]

*** Dumping AST Record Layout
         0 | struct in6_addr
         0 |   union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         0 |     uint8_t [16] __u6_addr8
         0 |     uint16_t [8] __u6_addr16
         0 |     uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr_storage
         0 |   sa_family_t ss_family
         2 |   char [118] __ss_padding
       120 |   unsigned long __ss_align
           | [sizeof=128, dsize=128, align=8,
           |  nvsize=128, nvalign=8]

*** Dumping AST Record Layout
         0 | struct sockaddr_in6
         0 |   sa_family_t sin6_family
         2 |   in_port_t sin6_port
         4 |   uint32_t sin6_flowinfo
         8 |   struct in6_addr sin6_addr
         8 |     union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         8 |       uint8_t [16] __u6_addr8
         8 |       uint16_t [8] __u6_addr16
         8 |       uint32_t [4] __u6_addr32
        24 |   uint32_t sin6_scope_id
           | [sizeof=28, dsize=28, align=4,
           |  nvsize=28, nvalign=4]

*** Dumping AST Record Layout
         0 | struct timeval
         0 |   __time_t tv_sec
         8 |   __suseconds_t tv_usec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::memo_t
         0 |   volatile uint32_t refcount
         4 |   uint32_t capacity
         8 |   volatile uint32_t dirty
        12 |   char [8] real_data
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping AST Record Layout
         0 | class IPAddress
         0 |   uint32_t _addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Timestamp::rep_t
         0 |   int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timestamp
         0 |   union Timestamp::rep_t _t
         0 |     int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct timespec
         0 |   __time_t tv_sec
         8 |   __syscall_slong_t tv_nsec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element::Port
         0 |   class Element * _e
         8 |   int _port
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::rep_t
         0 |   const char * data
         8 |   int length
        16 |   struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class String
         0 |   struct String::rep_t _r
         0 |     const char * data
         8 |     int length
        16 |     struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | struct StringAccum::rep_t
         0 |   unsigned char * s
         8 |   int len
        12 |   int cap
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct TimerSet::heap_element
         0 |   class Timestamp expiry_s
         0 |     union Timestamp::rep_t _t
         0 |       int64_t x
         8 |   class Timer * t
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct pollfd
         0 |   int fd
         4 |   short events
         6 |   short revents
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | struct SelectSet::SelectorInfo
         0 |   class Element * read
         8 |   class Element * write
        16 |   int pollfd
           | [sizeof=24, dsize=20, align=8,
           |  nvsize=20, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Router::Port
         0 |   int idx
         4 |   int port
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | struct Router::element_landmark_t
         0 |   uint32_t first_landmarkid
         8 |   class String filename
         8 |     struct String::rep_t _r
         8 |       const char * data
        16 |       int length
        24 |       struct String::memo_t * memo
           | [sizeof=32, dsize=32, align=8,
           |  nvsize=32, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<4> >
         0 |   vector_memory<class sized_array_memory<4> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<int>
         0 |   class vector_memory<class sized_array_memory<4> > vm_
         0 |     vector_memory<class sized_array_memory<4> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Router::Connection
         0 |   struct Router::Port [2] p
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | class atomic_uint32_t
         0 |   uint32_t _val
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | class Element
         0 |   (Element vtable pointer)
         8 |   class Element::Port *[2] _ports
        24 |   class Element::Port [4] _inline_ports
        88 |   int [2] _nports
        96 |   class Router * _router
       104 |   int _eindex
           | [sizeof=112, dsize=108, align=8,
           |  nvsize=108, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55bd594d5138 prev 0x55bd594cc8d8 <../dummy_inc/click/element.hh:214:5, line:252:5> line:214:11 referenced class Port definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55bd594d5230 <col:5, col:11> col:11 implicit referenced class Port
|-AccessSpecDecl 0x55bd594d52c0 <col:18, col:24> col:18 public
|-CXXMethodDecl 0x55bd594d5338 <line:216:9, col:30> col:21 used active 'bool () const' inline
|-CXXMethodDecl 0x55bd594d53f8 <line:217:9, col:35> col:25 element 'Element *() const' inline
|-CXXMethodDecl 0x55bd594d54c0 <line:218:9, col:27> col:20 port 'int () const' inline
|-CXXMethodDecl 0x55bd594d5638 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| |-ParmVarDecl 0x55bd594d5570 <col:54, col:62> col:62 p 'Packet *'
| |-NoInlineAttr 0x55bd594d56e0 <col:24>
| `-OptimizeNoneAttr 0x55bd594d5738 <col:34>
|-CXXMethodDecl 0x55bd594d5780 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
|-CXXMethodDecl 0x55bd594d5a38 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| |-ParmVarDecl 0x55bd594d5830 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x55bd594d58a8 <col:43, col:52> col:52 e 'Element *'
| `-ParmVarDecl 0x55bd594d5928 <col:55, col:59> col:59 port 'int'
|-AccessSpecDecl 0x55bd594d5af0 <line:229:7, col:14> col:7 private
|-FieldDecl 0x55bd594d5b28 <line:231:9, col:18> col:18 referenced _e 'Element *'
|-FieldDecl 0x55bd594d5b90 <line:232:9, col:13> col:13 referenced _port 'int'
|-CXXConstructorDecl 0x55bd594d5c18 <line:247:9, col:21> col:16 Port 'void ()' inline
|-CXXMethodDecl 0x55bd594d5f38 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| |-ParmVarDecl 0x55bd594d5cd0 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x55bd594d5d48 <col:43, col:52> col:52 owner 'Element *'
| |-ParmVarDecl 0x55bd594d5dc0 <col:59, col:68> col:68 e 'Element *'
| `-ParmVarDecl 0x55bd594d5e40 <col:71, col:75> col:75 port 'int'
|-FriendDecl 0x55bd594d6050 <line:250:9, col:22> col:16 'class Element':'Element'
|-CXXConstructorDecl 0x55bd594dd9c8 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x55bd594dd9c8
| `-ParmVarDecl 0x55bd594ddad8 <col:11> col:11 'const Element::Port &'
|-CXXConstructorDecl 0x55bd594ddb78 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x55bd594ddb78
| `-ParmVarDecl 0x55bd594ddc88 <col:11> col:11 'Element::Port &&'
`-CXXDestructorDecl 0x55bd596c41e8 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"class.Element::Port" = type <{ %class.Element*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%"class.Element::Port.base" = type <{ %class.Element*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<8> >
         0 |   vector_memory<class sized_array_memory<8> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class Element *>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class typed_array_memory<class String> >
         0 |   vector_memory<class typed_array_memory<class String> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class String>
         0 |   class vector_memory<class typed_array_memory<class String> > vm_
         0 |     vector_memory<class typed_array_memory<class String> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<unsigned int>
         0 |   class vector_memory<class sized_array_memory<4> > vm_
         0 |     vector_memory<class sized_array_memory<4> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class typed_array_memory<struct Router::element_landmark_t> >
         0 |   vector_memory<class typed_array_memory<struct Router::element_landmark_t> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct Router::element_landmark_t>
         0 |   class vector_memory<class typed_array_memory<struct Router::element_landmark_t> > vm_
         0 |     vector_memory<class typed_array_memory<struct Router::element_landmark_t> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<16> >
         0 |   vector_memory<class sized_array_memory<16> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct Router::Connection>
         0 |   class vector_memory<class sized_array_memory<16> > vm_
         0 |     vector_memory<class sized_array_memory<16> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<void *>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Router
         0 |   class Master * _master
         8 |   class atomic_uint32_t _runcount
         8 |     uint32_t _val
        12 |   volatile int _state
    16:0-0 |   _Bool _have_connections
    16:1-1 |   _Bool _conn_sorted
    16:2-2 |   _Bool _have_configuration
        20 |   volatile int _running
        24 |   class atomic_uint32_t _refcount
        24 |     uint32_t _val
        32 |   class Vector<class Element *> _elements
        32 |     class vector_memory<class sized_array_memory<8> > vm_
        32 |       vector_memory<class sized_array_memory<8> >::type * l_
        40 |       vector_memory::size_type n_
        44 |       vector_memory::size_type capacity_
        48 |   class Vector<class String> _element_names
        48 |     class vector_memory<class typed_array_memory<class String> > vm_
        48 |       vector_memory<class typed_array_memory<class String> >::type * l_
        56 |       vector_memory::size_type n_
        60 |       vector_memory::size_type capacity_
        64 |   class Vector<class String> _element_configurations
        64 |     class vector_memory<class typed_array_memory<class String> > vm_
        64 |       vector_memory<class typed_array_memory<class String> >::type * l_
        72 |       vector_memory::size_type n_
        76 |       vector_memory::size_type capacity_
        80 |   class Vector<unsigned int> _element_landmarkids
        80 |     class vector_memory<class sized_array_memory<4> > vm_
        80 |       vector_memory<class sized_array_memory<4> >::type * l_
        88 |       vector_memory::size_type n_
        92 |       vector_memory::size_type capacity_
        96 |   class Vector<int> _element_home_thread_ids
        96 |     class vector_memory<class sized_array_memory<4> > vm_
        96 |       vector_memory<class sized_array_memory<4> >::type * l_
       104 |       vector_memory::size_type n_
       108 |       vector_memory::size_type capacity_
       112 |   class Vector<struct Router::element_landmark_t> _element_landmarks
       112 |     class vector_memory<class typed_array_memory<struct Router::element_landmark_t> > vm_
       112 |       vector_memory<class typed_array_memory<struct Router::element_landmark_t> >::type * l_
       120 |       vector_memory::size_type n_
       124 |       vector_memory::size_type capacity_
       128 |   uint32_t _last_landmarkid
       136 |   class Vector<int> _element_name_sorter
       136 |     class vector_memory<class sized_array_memory<4> > vm_
       136 |       vector_memory<class sized_array_memory<4> >::type * l_
       144 |       vector_memory::size_type n_
       148 |       vector_memory::size_type capacity_
       152 |   Vector<int> [2] _element_gport_offset
       184 |   class Vector<int> _element_configure_order
       184 |     class vector_memory<class sized_array_memory<4> > vm_
       184 |       vector_memory<class sized_array_memory<4> >::type * l_
       192 |       vector_memory::size_type n_
       196 |       vector_memory::size_type capacity_
       200 |   class Vector<struct Router::Connection> _conn
       200 |     class vector_memory<class sized_array_memory<16> > vm_
       200 |       vector_memory<class sized_array_memory<16> >::type * l_
       208 |       vector_memory::size_type n_
       212 |       vector_memory::size_type capacity_
       216 |   class Vector<int> _conn_output_sorter
       216 |     class vector_memory<class sized_array_memory<4> > vm_
       216 |       vector_memory<class sized_array_memory<4> >::type * l_
       224 |       vector_memory::size_type n_
       228 |       vector_memory::size_type capacity_
       232 |   class Vector<class String> _requirements
       232 |     class vector_memory<class typed_array_memory<class String> > vm_
       232 |       vector_memory<class typed_array_memory<class String> >::type * l_
       240 |       vector_memory::size_type n_
       244 |       vector_memory::size_type capacity_
       248 |   class Vector<int> _ehandler_first_by_element
       248 |     class vector_memory<class sized_array_memory<4> > vm_
       248 |       vector_memory<class sized_array_memory<4> >::type * l_
       256 |       vector_memory::size_type n_
       260 |       vector_memory::size_type capacity_
       264 |   class Vector<int> _ehandler_to_handler
       264 |     class vector_memory<class sized_array_memory<4> > vm_
       264 |       vector_memory<class sized_array_memory<4> >::type * l_
       272 |       vector_memory::size_type n_
       276 |       vector_memory::size_type capacity_
       280 |   class Vector<int> _ehandler_next
       280 |     class vector_memory<class sized_array_memory<4> > vm_
       280 |       vector_memory<class sized_array_memory<4> >::type * l_
       288 |       vector_memory::size_type n_
       292 |       vector_memory::size_type capacity_
       296 |   class Vector<int> _handler_first_by_name
       296 |     class vector_memory<class sized_array_memory<4> > vm_
       296 |       vector_memory<class sized_array_memory<4> >::type * l_
       304 |       vector_memory::size_type n_
       308 |       vector_memory::size_type capacity_
       312 |   class Handler ** _handler_bufs
       320 |   int _nhandlers_bufs
       324 |   int _free_handler
       328 |   class Vector<class String> _attachment_names
       328 |     class vector_memory<class typed_array_memory<class String> > vm_
       328 |       vector_memory<class typed_array_memory<class String> >::type * l_
       336 |       vector_memory::size_type n_
       340 |       vector_memory::size_type capacity_
       344 |   class Vector<void *> _attachments
       344 |     class vector_memory<class sized_array_memory<8> > vm_
       344 |       vector_memory<class sized_array_memory<8> >::type * l_
       352 |       vector_memory::size_type n_
       356 |       vector_memory::size_type capacity_
       360 |   class Element * _root_element
       368 |   class String _configuration
       368 |     struct String::rep_t _r
       368 |       const char * data
       376 |       int length
       384 |       struct String::memo_t * memo
       392 |   struct Router::notifier_signals_t * _notifier_signals
       400 |   class HashMap_ArenaFactory * _arena_factory
       408 |   class Router * _hotswap_router
       416 |   class ThreadSched * _thread_sched
       424 |   class NameInfo * _name_info
       432 |   class Vector<int> _flow_code_override_eindex
       432 |     class vector_memory<class sized_array_memory<4> > vm_
       432 |       vector_memory<class sized_array_memory<4> >::type * l_
       440 |       vector_memory::size_type n_
       444 |       vector_memory::size_type capacity_
       448 |   class Vector<class String> _flow_code_override
       448 |     class vector_memory<class typed_array_memory<class String> > vm_
       448 |       vector_memory<class typed_array_memory<class String> >::type * l_
       456 |       vector_memory::size_type n_
       460 |       vector_memory::size_type capacity_
       464 |   class Router * _next_router
           | [sizeof=472, dsize=472, align=8,
           |  nvsize=472, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55bd59286c00 <../dummy_inc/click/atomic.hh:52:1, line:94:1> line:52:7 referenced class atomic_uint32_t definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55bd59286d18 <col:1, col:7> col:7 implicit referenced class atomic_uint32_t
|-AccessSpecDecl 0x55bd59286da8 <col:25, col:31> col:25 public
|-CXXMethodDecl 0x55bd59286e78 <line:57:5, col:29> col:21 used value 'uint32_t () const' inline
|-CXXConversionDecl 0x55bd59286f60 <line:58:5, col:32> col:12 operator unsigned int 'uint32_t () const' inline
|-CXXMethodDecl 0x55bd59287178 <line:60:5, col:49> col:29 used operator= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x55bd59287020 <col:39, col:48> col:48 x 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55bd59287328 <line:62:5, col:53> col:29 operator+= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x55bd59287230 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x55bd59287470 <line:63:5, col:53> col:29 operator-= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x55bd592873e0 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x55bd592875b8 <line:64:5, col:53> col:29 operator|= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x55bd59287528 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55bd59287700 <line:65:5, col:53> col:29 operator&= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x55bd59287670 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55bd592877c8 <line:67:5, col:28> col:17 used operator++ 'void ()' inline
|-CXXMethodDecl 0x55bd59287910 <line:68:5, col:31> col:17 used operator++ 'void (int)' inline
| `-ParmVarDecl 0x55bd59287880 <col:28> col:31 'int'
|-CXXMethodDecl 0x55bd592879d8 <line:69:5, col:28> col:17 used operator-- 'void ()' inline
|-CXXMethodDecl 0x55bd59287b20 <line:70:5, col:31> col:17 operator-- 'void (int)' inline
| `-ParmVarDecl 0x55bd59287a90 <col:28> col:31 'int'
|-CXXMethodDecl 0x55bd59287c98 <line:72:5, col:42> col:21 swap 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x55bd59287bd8 <col:26, col:35> col:35 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55bd59287de0 <line:73:5, col:49> col:21 fetch_and_add 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x55bd59287d50 <col:35, col:44> col:44 delta 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55bd59287ea8 <line:74:5, col:30> col:17 dec_and_test 'bool ()' inline
|-CXXMethodDecl 0x55bd59288068 <line:75:5, col:69> col:21 used compare_swap 'uint32_t (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x55bd59287f58 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55bd59287fd0 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55bd592882b8 <line:76:5, col:97> col:17 compare_and_swap 'bool (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x55bd59288128 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55bd592881a0 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55bd59288368 <col:86> "" ""
|-CXXMethodDecl 0x55bd592885d8 <line:78:5, col:71> col:28 used swap 'uint32_t (volatile uint32_t &, uint32_t)' static inline
| |-ParmVarDecl 0x55bd59288448 <col:33, col:52> col:52 x 'volatile uint32_t &'
| `-ParmVarDecl 0x55bd592884c0 <col:55, col:64> col:64 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55bd59288788 <line:79:5, col:48> col:24 used inc 'void (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x55bd59288698 <col:28, col:47> col:47 x 'volatile uint32_t &'
|-CXXMethodDecl 0x55bd59288938 <line:80:5, col:57> col:24 used dec_and_test 'bool (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x55bd59288840 <col:37, col:56> col:56 x 'volatile uint32_t &'
|-CXXMethodDecl 0x55bd59288c08 <line:81:5, col:98> col:28 compare_swap 'uint32_t (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x55bd592889f0 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x55bd59288a68 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55bd59288ae0 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55bd59288ee8 <line:82:5, col:126> col:24 compare_and_swap 'bool (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x55bd59288cd0 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x55bd59288d48 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55bd59288dc0 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55bd59288fa0 <col:115> "" ""
|-AccessSpecDecl 0x55bd59289010 <line:84:3, col:10> col:3 private
|-FieldDecl 0x55bd59289048 <line:91:5, col:14> col:14 referenced _val 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55bd5928a560 <line:52:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x55bd5928a560
| `-ParmVarDecl 0x55bd5928a668 <col:7> col:7 'const atomic_uint32_t &'
|-CXXMethodDecl 0x55bd5928a708 <col:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x55bd5928a708
| `-ParmVarDecl 0x55bd5928a818 <col:7> col:7 'atomic_uint32_t &&'
|-CXXConstructorDecl 0x55bd592bfe48 <col:7> col:7 implicit used atomic_uint32_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55bd594b1c40 <col:7>
|-CXXConstructorDecl 0x55bd592bff20 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x55bd592bff20
| `-ParmVarDecl 0x55bd592c0038 <col:7> col:7 'const atomic_uint32_t &'
|-CXXConstructorDecl 0x55bd592c00a8 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x55bd592c00a8
| `-ParmVarDecl 0x55bd592c01b8 <col:7> col:7 'atomic_uint32_t &&'
`-CXXDestructorDecl 0x55bd594b4640 <col:7> col:7 implicit referenced ~atomic_uint32_t 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.atomic_uint32_t = type { i32 }
  NonVirtualBaseLLVMType:%class.atomic_uint32_t = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55bd595b9770 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<8>'
|-CXXRecordDecl 0x55bd595b9948 prev 0x55bd595b9770 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55bd595b99d8 <col:46, col:52> col:46 public
|-TypedefDecl 0x55bd595b9a00 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55bd58f62370 'int'
|-TypedefDecl 0x55bd595bb5d0 <line:13:5, col:31> col:31 type 'typename sized_array_memory<8>::type':'char_array<8>'
| `-ElaboratedType 0x55bd595bb580 'typename sized_array_memory<8>::type' sugar
|   `-TypedefType 0x55bd595b9eb0 'sized_array_memory<8>::type' sugar
|     |-Typedef 0x55bd595b9db0 'type'
|     `-TemplateSpecializationType 0x55bd595b9d40 'char_array<8UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x55bd595b9c20 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 8
|       |   `-SubstNonTypeTemplateParmExpr 0x55bd595b9c00 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x55bd595b9be0 <col:24> 'unsigned long' 8
|       `-RecordType 0x55bd595b9d20 'char_array<8>'
|         `-ClassTemplateSpecialization 0x55bd595b9c40 'char_array'
|-TypedefDecl 0x55bd595bb688 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<8> >::type *'
| `-PointerType 0x55bd595bb650 'vector_memory<sized_array_memory<8> >::type *'
|   `-TypedefType 0x55bd595bb630 'vector_memory<sized_array_memory<8> >::type' sugar
|     |-Typedef 0x55bd595bb5d0 'type'
|     `-ElaboratedType 0x55bd595bb580 'typename sized_array_memory<8>::type' sugar
|       `-TypedefType 0x55bd595b9eb0 'sized_array_memory<8>::type' sugar
|         |-Typedef 0x55bd595b9db0 'type'
|         `-TemplateSpecializationType 0x55bd595b9d40 'char_array<8UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x55bd595b9c20 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 8
|           |   `-SubstNonTypeTemplateParmExpr 0x55bd595b9c00 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x55bd595b9be0 <col:24> 'unsigned long' 8
|           `-RecordType 0x55bd595b9d20 'char_array<8>'
|             `-ClassTemplateSpecialization 0x55bd595b9c40 'char_array'
|-CXXMethodDecl 0x55bd595bb808 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<8> >::type *) const' inline
| `-ParmVarDecl 0x55bd595bb718 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXConstructorDecl 0x55bd595bb8f8 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55bd595bb9d8 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x55bd595bb9d8
|-CXXMethodDecl 0x55bd595bbca8 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<8> > &)'
| `-ParmVarDecl 0x55bd595bbbb0 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<8> > &'
|-CXXMethodDecl 0x55bd595bbee8 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x55bd595bbd60 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55bd595bbdd8 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55bd595bc0b8 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x55bd595bbfa8 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55bd595bc020 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55bd595bc218 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<8> >::iterator ()'
|-CXXMethodDecl 0x55bd595bc2e8 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<8> >::iterator ()'
|-CXXMethodDecl 0x55bd595bc538 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<8> >::iterator (vector_memory<sized_array_memory<8> >::iterator, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x55bd595bc3a8 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
| `-ParmVarDecl 0x55bd595bc420 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55bd595bc798 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<8> >::iterator (vector_memory<sized_array_memory<8> >::iterator, vector_memory<sized_array_memory<8> >::iterator)'
| |-ParmVarDecl 0x55bd595bc608 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
| `-ParmVarDecl 0x55bd595bc680 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55bd595bc958 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<8> >::type *)' inline
| `-ParmVarDecl 0x55bd595bc868 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55bd595bcb18 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<8> >::type *)' inline
| `-ParmVarDecl 0x55bd595bca20 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55bd595bcbd0 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55bd595bcc80 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55bd595bceb8 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x55bd595bcd30 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55bd595bcda8 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55bd595bd158 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<8> > &)'
| `-ParmVarDecl 0x55bd595bd060 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<8> > &'
|-FieldDecl 0x55bd595bd220 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<8> >::type *'
|-FieldDecl 0x55bd595bd270 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55bd595bd2c0 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory = type { %struct.char_array*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory = type { %struct.char_array*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55bd59665308 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Element *'
|-CXXRecordDecl 0x55bd5966f468 prev 0x55bd59665308 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55bd59670480 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<Element *>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x55bd59670430 'typename array_memory<Element *>::type' sugar
|   `-TypedefType 0x55bd59670410 'conditional<true, sized_array_memory<8>, typed_array_memory<Element *> >::type' sugar
|     |-Typedef 0x55bd596702c0 'type'
|     `-SubstTemplateTypeParmType 0x55bd595b9340 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x55bd5922c210 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55bd5922c1b8 'T'
|       `-RecordType 0x55bd595b8e90 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x55bd595b8da8 'sized_array_memory'
|-FieldDecl 0x55bd59670580 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Element *>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x55bd596705d0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55bd59670608 <line:118:5, col:15> col:15 value_type 'Element *':'Element *'
| `-SubstTemplateTypeParmType 0x55bd5966f500 'Element *' sugar
|   |-TemplateTypeParmType 0x55bd59264120 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55bd592640c8 'T'
|   `-PointerType 0x55bd594be680 'Element *'
|     `-RecordType 0x55bd594be400 'Element'
|       `-CXXRecord 0x55bd594c8150 'Element'
|-TypedefDecl 0x55bd59670698 <line:119:5, col:16> col:16 reference 'Element *&'
| `-LValueReferenceType 0x55bd59670660 'Element *&'
|   `-SubstTemplateTypeParmType 0x55bd5966f500 'Element *' sugar
|     |-TemplateTypeParmType 0x55bd59264120 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55bd592640c8 'T'
|     `-PointerType 0x55bd594be680 'Element *'
|       `-RecordType 0x55bd594be400 'Element'
|         `-CXXRecord 0x55bd594c8150 'Element'
|-TypedefDecl 0x55bd59670758 <line:120:5, col:22> col:22 const_reference 'Element *const &'
| `-LValueReferenceType 0x55bd59670720 'Element *const &'
|   `-QualType 0x55bd5966f501 'Element *const' const
|     `-SubstTemplateTypeParmType 0x55bd5966f500 'Element *' sugar
|       |-TemplateTypeParmType 0x55bd59264120 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55bd592640c8 'T'
|       `-PointerType 0x55bd594be680 'Element *'
|         `-RecordType 0x55bd594be400 'Element'
|           `-CXXRecord 0x55bd594c8150 'Element'
|-TypedefDecl 0x55bd596707e8 <line:121:5, col:16> col:16 pointer 'Element **'
| `-PointerType 0x55bd596707b0 'Element **'
|   `-SubstTemplateTypeParmType 0x55bd5966f500 'Element *' sugar
|     |-TemplateTypeParmType 0x55bd59264120 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55bd592640c8 'T'
|     `-PointerType 0x55bd594be680 'Element *'
|       `-RecordType 0x55bd594be400 'Element'
|         `-CXXRecord 0x55bd594c8150 'Element'
|-TypedefDecl 0x55bd596708a8 <line:122:5, col:22> col:22 const_pointer 'Element *const *'
| `-PointerType 0x55bd59670870 'Element *const *'
|   `-QualType 0x55bd5966f501 'Element *const' const
|     `-SubstTemplateTypeParmType 0x55bd5966f500 'Element *' sugar
|       |-TemplateTypeParmType 0x55bd59264120 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55bd592640c8 'T'
|       `-PointerType 0x55bd594be680 'Element *'
|         `-RecordType 0x55bd594be400 'Element'
|           `-CXXRecord 0x55bd594c8150 'Element'
|-TypedefDecl 0x55bd59673880 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<Element *>::type':'Element *'
| `-ElaboratedType 0x55bd59673830 'typename fast_argument<Element *>::type' sugar
|   `-TypedefType 0x55bd59673810 'fast_argument<Element *, false>::type' sugar
|     |-Typedef 0x55bd596737a0 'type'
|     `-SubstTemplateTypeParmType 0x55bd59673560 'Element *' sugar
|       |-TemplateTypeParmType 0x55bd59237010 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55bd59236fc0 'T'
|       `-PointerType 0x55bd594be680 'Element *'
|         `-RecordType 0x55bd594be400 'Element'
|           `-CXXRecord 0x55bd594c8150 'Element'
|-TypedefDecl 0x55bd596738e8 <line:126:5, col:22> col:22 const_access_type 'Element *const &'
| `-LValueReferenceType 0x55bd59670720 'Element *const &'
|   `-QualType 0x55bd5966f501 'Element *const' const
|     `-SubstTemplateTypeParmType 0x55bd5966f500 'Element *' sugar
|       |-TemplateTypeParmType 0x55bd59264120 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55bd592640c8 'T'
|       `-PointerType 0x55bd594be680 'Element *'
|         `-RecordType 0x55bd594be400 'Element'
|           `-CXXRecord 0x55bd594c8150 'Element'
|-TypedefDecl 0x55bd59673940 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55bd58f62370 'int'
|-TypedefDecl 0x55bd596739a8 <line:130:5, col:16> col:16 iterator 'Element **'
| `-PointerType 0x55bd596707b0 'Element **'
|   `-SubstTemplateTypeParmType 0x55bd5966f500 'Element *' sugar
|     |-TemplateTypeParmType 0x55bd59264120 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55bd592640c8 'T'
|     `-PointerType 0x55bd594be680 'Element *'
|       `-RecordType 0x55bd594be400 'Element'
|         `-CXXRecord 0x55bd594c8150 'Element'
|-TypedefDecl 0x55bd59673a10 <line:131:5, col:22> col:22 const_iterator 'Element *const *'
| `-PointerType 0x55bd59670870 'Element *const *'
|   `-QualType 0x55bd5966f501 'Element *const' const
|     `-SubstTemplateTypeParmType 0x55bd5966f500 'Element *' sugar
|       |-TemplateTypeParmType 0x55bd59264120 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55bd592640c8 'T'
|       `-PointerType 0x55bd594be680 'Element *'
|         `-RecordType 0x55bd594be400 'Element'
|           `-CXXRecord 0x55bd594c8150 'Element'
|-EnumDecl 0x55bd59673a68 <line:134:5> col:5
| `-EnumConstantDecl 0x55bd59673b60 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Element *>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55bd59673b40 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55bd592657a8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55bd59265780 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55bd59265760 <col:40> 'int' 1
|-CXXConstructorDecl 0x55bd59673be8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55bd59673e78 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Element *>::value_argument_type)' inline
| |-ParmVarDecl 0x55bd59673ca0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55bd59673d40 <col:41, col:61> col:61 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXConstructorDecl 0x55bd59674108 <line:139:5, col:37> col:12 Vector 'void (const Vector<Element *> &)' inline
| `-ParmVarDecl 0x55bd59673ff0 <col:19, col:36> col:36 x 'const Vector<Element *> &'
|-CXXConstructorDecl 0x55bd596743c8 <line:141:5, col:32> col:12 Vector 'void (Vector<Element *> &&)' inline
| `-ParmVarDecl 0x55bd596742b0 <col:19, col:31> col:31 x 'Vector<Element *> &&'
|-CXXMethodDecl 0x55bd596746e0 <line:144:5, col:51> col:23 operator= 'Vector<Element *> &(const Vector<Element *> &)' inline
| `-ParmVarDecl 0x55bd596745c0 <col:33, col:50> col:50 x 'const Vector<Element *> &'
|-CXXMethodDecl 0x55bd596749f0 <line:146:5, col:46> col:23 operator= 'Vector<Element *> &(Vector<Element *> &&)' inline
| `-ParmVarDecl 0x55bd596748d0 <col:33, col:45> col:45 x 'Vector<Element *> &&'
|-CXXMethodDecl 0x55bd59674ce0 <line:148:5, col:70> col:23 assign 'Vector<Element *> &(Vector::size_type, Vector<Element *>::value_argument_type)' inline
| |-ParmVarDecl 0x55bd59674b28 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55bd59674ba0 <col:43, col:69> col:63 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXMethodDecl 0x55bd59674e38 <line:150:5, col:55> col:49 begin 'Vector<Element *>::iterator ()'
| |-NoInlineAttr 0x55bd59674f18 <col:20> Inherited
| `-OptimizeNoneAttr 0x55bd59674f70 <col:30> Inherited
|-CXXMethodDecl 0x55bd59674fb8 <line:151:5, col:53> col:49 end 'Vector<Element *>::iterator ()'
| |-NoInlineAttr 0x55bd59675068 <col:20> Inherited
| `-OptimizeNoneAttr 0x55bd596750c0 <col:30> Inherited
|-CXXMethodDecl 0x55bd59675188 <line:152:5, col:63> col:55 begin 'Vector<Element *>::const_iterator () const'
| |-NoInlineAttr 0x55bd59675238 <col:20> Inherited
| `-OptimizeNoneAttr 0x55bd59675290 <col:30> Inherited
|-CXXMethodDecl 0x55bd596752d8 <line:153:5, col:61> col:55 end 'Vector<Element *>::const_iterator () const'
| |-NoInlineAttr 0x55bd59675388 <col:20> Inherited
| `-OptimizeNoneAttr 0x55bd596753e0 <col:30> Inherited
|-CXXMethodDecl 0x55bd59675428 <line:154:5, col:64> col:55 cbegin 'Vector<Element *>::const_iterator () const'
| |-NoInlineAttr 0x55bd596754d8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55bd59675530 <col:30> Inherited
|-CXXMethodDecl 0x55bd59675578 <line:155:5, col:62> col:55 cend 'Vector<Element *>::const_iterator () const'
| |-NoInlineAttr 0x55bd59675628 <col:20> Inherited
| `-OptimizeNoneAttr 0x55bd59675680 <col:30> Inherited
|-CXXMethodDecl 0x55bd596756a8 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55bd59675758 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55bd59675808 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55bd596759c8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Element *>::value_argument_type)' inline
| |-ParmVarDecl 0x55bd596758b8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55bd59675930 <col:37, col:63> col:57 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXMethodDecl 0x55bd59675b18 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55bd59675a88 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55bd59675cc8 <line:163:5, col:65> col:43 operator[] 'Element *&(Vector::size_type)'
| |-ParmVarDecl 0x55bd59675bd0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55bd59675d80 <col:20>
| `-OptimizeNoneAttr 0x55bd59675dd8 <col:30>
|-CXXMethodDecl 0x55bd59675ef8 <line:164:5, col:73> col:49 operator[] 'Element *const &(Vector::size_type) const'
| |-ParmVarDecl 0x55bd59675e00 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55bd59675fb0 <col:20>
| `-OptimizeNoneAttr 0x55bd59676008 <col:30>
|-CXXMethodDecl 0x55bd596760c0 <line:165:5, col:29> col:15 at 'Element *&(Vector::size_type)' inline
| `-ParmVarDecl 0x55bd59676030 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55bd59676208 <line:166:5, col:37> col:21 at 'Element *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55bd59676178 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55bd59676338 <line:167:5, col:21> col:15 front 'Element *&()' inline
|-CXXMethodDecl 0x55bd59676468 <line:168:5, col:29> col:21 front 'Element *const &() const' inline
|-CXXMethodDecl 0x55bd59676538 <line:169:5, col:20> col:15 back 'Element *&()' inline
|-CXXMethodDecl 0x55bd59676608 <line:170:5, col:28> col:21 back 'Element *const &() const' inline
|-CXXMethodDecl 0x55bd59676748 <line:172:5, col:39> col:15 unchecked_at 'Element *&(Vector::size_type)' inline
| `-ParmVarDecl 0x55bd596766b8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55bd59676890 <line:173:5, col:47> col:21 unchecked_at 'Element *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55bd59676800 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55bd596769d8 <line:174:5, col:59> col:15 at_u 'Element *&(Vector::size_type)' inline
| |-ParmVarDecl 0x55bd59676948 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55bd59676a90 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55bd59676b90 <line:175:5, col:71> col:21 at_u 'Element *const &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55bd59676b00 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55bd59676c48 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55bd59676d08 <line:177:5, col:20> col:15 data 'Element **()' inline
|-CXXMethodDecl 0x55bd59676e08 <line:178:5, col:28> col:21 data 'Element *const *() const' inline
|-CXXMethodDecl 0x55bd59676f88 <line:180:5, col:48> col:17 push_back 'void (Vector<Element *>::value_argument_type)' inline
| `-ParmVarDecl 0x55bd59676ec8 <col:27, col:47> col:47 v 'Vector<Element *>::value_argument_type':'Element *'
|-FunctionTemplateDecl 0x55bd59677748 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55bd59677040 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Element *>':'fast_argument<Element *, false>'
| `-CXXMethodDecl 0x55bd596776a8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Element *&&)' inline
|   `-ParmVarDecl 0x55bd596775a8 <col:58, col:62> col:62 v 'Element *&&'
|-CXXMethodDecl 0x55bd59677828 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55bd59677978 <line:186:5, col:49> col:17 push_front 'void (Vector<Element *>::value_argument_type)' inline
| `-ParmVarDecl 0x55bd596778e8 <col:28, col:48> col:48 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXMethodDecl 0x55bd59677a30 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55bd59677c78 <line:189:5, col:62> col:21 insert 'Vector<Element *>::iterator (Vector<Element *>::iterator, Vector<Element *>::value_argument_type)' inline
| |-ParmVarDecl 0x55bd59677af0 <col:28, col:37> col:37 it 'Vector<Element *>::iterator':'Element **'
| `-ParmVarDecl 0x55bd59677b68 <col:41, col:61> col:61 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXMethodDecl 0x55bd59677e38 <line:190:5, col:38> col:21 erase 'Vector<Element *>::iterator (Vector<Element *>::iterator)' inline
| `-ParmVarDecl 0x55bd59677d48 <col:27, col:36> col:36 it 'Vector<Element *>::iterator':'Element **'
|-CXXMethodDecl 0x55bd59678088 <line:191:5, col:49> col:21 erase 'Vector<Element *>::iterator (Vector<Element *>::iterator, Vector<Element *>::iterator)' inline
| |-ParmVarDecl 0x55bd59677f00 <col:27, col:36> col:36 a 'Vector<Element *>::iterator':'Element **'
| `-ParmVarDecl 0x55bd59677f78 <col:39, col:48> col:48 b 'Vector<Element *>::iterator':'Element **'
|-CXXMethodDecl 0x55bd59678148 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55bd596783a8 <line:195:5, col:34> col:17 swap 'void (Vector<Element *> &)' inline
| `-ParmVarDecl 0x55bd596782b0 <col:22, col:33> col:33 x 'Vector<Element *> &'
`-CXXDestructorDecl 0x55bd59678478 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55bd59678478

Layout: <CGRecordLayout
  LLVMType:%class.Vector = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55bd5929bff0 <../dummy_inc/click/string.hh:189:5, line:198:5> line:189:12 referenced struct memo_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x55bd5929c108 <col:5, col:12> col:12 implicit struct memo_t
|-FieldDecl 0x55bd5929c1a8 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
|-FieldDecl 0x55bd5929c208 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
|-FieldDecl 0x55bd5929c268 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
`-FieldDecl 0x55bd5929c318 <line:197:2, col:18> col:7 real_data 'char [8]'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  NonVirtualBaseLLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55bd5929c620 <../dummy_inc/click/string.hh:204:5, line:208:5> line:204:12 referenced struct rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55bd5929c738 <col:5, col:12> col:12 implicit struct rep_t
|-FieldDecl 0x55bd5929c7e0 <line:205:2, col:14> col:14 referenced data 'const char *'
|-FieldDecl 0x55bd5929c848 <line:206:2, col:6> col:6 referenced length 'int'
|-FieldDecl 0x55bd5929c8d8 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
|-CXXConstructorDecl 0x55bd592a2970 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55bd592a2da8 <col:12>
|-CXXConstructorDecl 0x55bd592a2a78 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55bd592a2b88 <col:12> col:12 used 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x55bd5929c7e0 'data' 'const char *'
| | `-ImplicitCastExpr 0x55bd592a5330 <col:12> 'const char *' <LValueToRValue>
| |   `-MemberExpr 0x55bd592a5300 <col:12> 'const char *const' lvalue .data 0x55bd5929c7e0
| |     `-DeclRefExpr 0x55bd592a52e0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55bd592a2b88 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x55bd5929c848 'length' 'int'
| | `-ImplicitCastExpr 0x55bd592a53c0 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x55bd592a5390 <col:12> 'const int' lvalue .length 0x55bd5929c848
| |     `-DeclRefExpr 0x55bd592a5370 <col:12> 'const String::rep_t' lvalue ParmVar 0x55bd592a2b88 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x55bd5929c8d8 'memo' 'String::memo_t *'
| | `-ImplicitCastExpr 0x55bd592a5450 <col:12> 'String::memo_t *' <LValueToRValue>
| |   `-MemberExpr 0x55bd592a5420 <col:12> 'String::memo_t *const' lvalue .memo 0x55bd5929c8d8
| |     `-DeclRefExpr 0x55bd592a5400 <col:12> 'const String::rep_t' lvalue ParmVar 0x55bd592a2b88 '' 'const String::rep_t &'
| `-CompoundStmt 0x55bd592a54a8 <col:12>
|-CXXConstructorDecl 0x55bd592a2c28 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55bd592a2c28
| `-ParmVarDecl 0x55bd592a2d38 <col:12> col:12 'String::rep_t &&'
|-CXXDestructorDecl 0x55bd592a8290 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55bd592b3ca8 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55bd592b3db8 <col:12> col:12 used 'const String::rep_t &'
| `-CompoundStmt 0x55bd592b42d0 <col:12>
|   |-BinaryOperator 0x55bd592b40e8 <col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x55bd592b40a0 <col:12> 'const char *' lvalue ->data 0x55bd5929c7e0
|   | | `-CXXThisExpr 0x55bd592b4090 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x55bd592b40d0 <col:12> 'const char *' <LValueToRValue>
|   |   `-MemberExpr 0x55bd592b4060 <col:12> 'const char *const' lvalue .data 0x55bd5929c7e0
|   |     `-DeclRefExpr 0x55bd592b4040 <col:12> 'const String::rep_t' lvalue ParmVar 0x55bd592b3db8 '' 'const String::rep_t &'
|   |-BinaryOperator 0x55bd592b41b0 <col:12> 'int' lvalue '='
|   | |-MemberExpr 0x55bd592b4168 <col:12> 'int' lvalue ->length 0x55bd5929c848
|   | | `-CXXThisExpr 0x55bd592b4158 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x55bd592b4198 <col:12> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x55bd592b4128 <col:12> 'const int' lvalue .length 0x55bd5929c848
|   |     `-DeclRefExpr 0x55bd592b4108 <col:12> 'const String::rep_t' lvalue ParmVar 0x55bd592b3db8 '' 'const String::rep_t &'
|   |-BinaryOperator 0x55bd592b4278 <col:12> 'String::memo_t *' lvalue '='
|   | |-MemberExpr 0x55bd592b4230 <col:12> 'String::memo_t *' lvalue ->memo 0x55bd5929c8d8
|   | | `-CXXThisExpr 0x55bd592b4220 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x55bd592b4260 <col:12> 'String::memo_t *' <LValueToRValue>
|   |   `-MemberExpr 0x55bd592b41f0 <col:12> 'String::memo_t *const' lvalue .memo 0x55bd5929c8d8
|   |     `-DeclRefExpr 0x55bd592b41d0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55bd592b3db8 '' 'const String::rep_t &'
|   `-ReturnStmt 0x55bd592b42c0 <col:12>
|     `-UnaryOperator 0x55bd592b42a8 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55bd592b4298 <col:12> 'String::rep_t *' this
`-CXXMethodDecl 0x55bd592b3e28 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55bd592b3e28
  `-ParmVarDecl 0x55bd592b3f38 <col:12> col:12 'String::rep_t &&'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  NonVirtualBaseLLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55bd59293560 <../dummy_inc/click/string.hh:19:1, line:304:1> line:19:7 referenced class String definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55bd59293678 <col:1, col:7> col:7 implicit referenced class String
|-AccessSpecDecl 0x55bd59293708 <col:16, col:22> col:16 public
|-TypedefDecl 0x55bd59293748 <line:21:5, col:25> col:25 referenced const_iterator 'const char *'
| `-PointerType 0x55bd58f62dc0 'const char *'
|   `-QualType 0x55bd58f62311 'const char' const
|     `-BuiltinType 0x55bd58f62310 'char'
|-TypedefDecl 0x55bd592937d0 <line:22:5, col:28> col:28 iterator 'String::const_iterator':'const char *'
| `-TypedefType 0x55bd592937a0 'String::const_iterator' sugar
|   |-Typedef 0x55bd59293748 'const_iterator'
|   `-PointerType 0x55bd58f62dc0 'const char *'
|     `-QualType 0x55bd58f62311 'const char' const
|       `-BuiltinType 0x55bd58f62310 'char'
|-TypedefDecl 0x55bd59293940 <line:24:5, col:52> col:27 referenced unspecified_bool_type 'int (String::*)() const'
| `-MemberPointerType 0x55bd592938b0 'int (String::*)() const'
|   |-RecordType 0x55bd592935f0 'String'
|   | `-CXXRecord 0x55bd59293560 'String'
|   `-ParenType 0x55bd59293850 'int () const' sugar
|     `-FunctionProtoType 0x55bd592673e0 'int () const' const cdecl
|       `-BuiltinType 0x55bd58f62370 'int'
|-TypedefDecl 0x55bd592939a8 <line:27:5, col:21> col:21 referenced intmax_t 'int64_t':'long'
| `-TypedefType 0x55bd590bbda0 'int64_t' sugar
|   |-Typedef 0x55bd58fcb2d0 'int64_t'
|   `-TypedefType 0x55bd58fa44d0 '__int64_t' sugar
|     |-Typedef 0x55bd58fa40a8 '__int64_t'
|     `-BuiltinType 0x55bd58f62390 'long'
|-TypedefDecl 0x55bd59293a10 <line:28:5, col:22> col:22 referenced uintmax_t 'uint64_t':'unsigned long'
| `-TypedefType 0x55bd590bbcc0 'uint64_t' sugar
|   |-Typedef 0x55bd58fcb470 'uint64_t'
|   `-TypedefType 0x55bd58fa4560 '__uint64_t' sugar
|     |-Typedef 0x55bd58fa4118 '__uint64_t'
|     `-BuiltinType 0x55bd58f62430 'unsigned long'
|-TypedefDecl 0x55bd59293aa0 <line:36:5, col:22> col:22 int_large_t 'String::intmax_t':'long'
| `-TypedefType 0x55bd59293a70 'String::intmax_t' sugar
|   |-Typedef 0x55bd592939a8 'intmax_t'
|   `-TypedefType 0x55bd590bbda0 'int64_t' sugar
|     |-Typedef 0x55bd58fcb2d0 'int64_t'
|     `-TypedefType 0x55bd58fa44d0 '__int64_t' sugar
|       |-Typedef 0x55bd58fa40a8 '__int64_t'
|       `-BuiltinType 0x55bd58f62390 'long'
|-TypedefDecl 0x55bd59293b30 <line:37:5, col:23> col:23 uint_large_t 'String::uintmax_t':'unsigned long'
| `-TypedefType 0x55bd59293b00 'String::uintmax_t' sugar
|   |-Typedef 0x55bd59293a10 'uintmax_t'
|   `-TypedefType 0x55bd590bbcc0 'uint64_t' sugar
|     |-Typedef 0x55bd58fcb470 'uint64_t'
|     `-TypedefType 0x55bd58fa4560 '__uint64_t' sugar
|       |-Typedef 0x55bd58fa4118 '__uint64_t'
|       `-BuiltinType 0x55bd58f62430 'unsigned long'
|-CXXConstructorDecl 0x55bd59293bf0 <line:39:5, col:19> col:12 used String 'void ()' inline
|-CXXConstructorDecl 0x55bd59293d98 <line:40:5, col:34> col:12 used String 'void (const String &)' inline
| `-ParmVarDecl 0x55bd59293cd8 <col:19, col:33> col:33 x 'const String &'
|-CXXConstructorDecl 0x55bd59293f48 <line:42:5, col:29> col:12 used String 'void (String &&)' inline
| `-ParmVarDecl 0x55bd59293e88 <col:19, col:28> col:28 x 'String &&'
|-CXXConstructorDecl 0x55bd592940a0 <line:44:5, col:35> col:12 used String 'void (const char *)' inline
| `-ParmVarDecl 0x55bd59294010 <col:19, col:31> col:31 cstr 'const char *'
|-CXXConstructorDecl 0x55bd592942b8 <line:45:5, col:41> col:12 String 'void (const char *, int)' inline
| |-ParmVarDecl 0x55bd59294168 <col:19, col:31> col:31 s 'const char *'
| `-ParmVarDecl 0x55bd592941e8 <col:34, col:38> col:38 len 'int'
|-CXXConstructorDecl 0x55bd592944d8 <line:46:5, col:50> col:12 String 'void (const unsigned char *, int)' inline
| |-ParmVarDecl 0x55bd59294388 <col:19, col:40> col:40 s 'const unsigned char *'
| `-ParmVarDecl 0x55bd59294408 <col:43, col:47> col:47 len 'int'
|-CXXConstructorDecl 0x55bd592946f8 <line:47:5, col:54> col:12 used String 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x55bd592945a8 <col:19, col:31> col:31 first 'const char *'
| `-ParmVarDecl 0x55bd59294628 <col:38, col:50> col:50 last 'const char *'
|-CXXConstructorDecl 0x55bd59294918 <line:48:5, col:72> col:12 String 'void (const unsigned char *, const unsigned char *)' inline
| |-ParmVarDecl 0x55bd592947c8 <col:19, col:40> col:40 first 'const unsigned char *'
| `-ParmVarDecl 0x55bd59294848 <col:47, col:68> col:68 last 'const unsigned char *'
|-CXXConstructorDecl 0x55bd59294aa8 <line:49:5, col:34> col:21 used String 'void (bool)' inline
| `-ParmVarDecl 0x55bd592949e0 <col:28, col:33> col:33 x 'bool'
|-CXXConstructorDecl 0x55bd59294c28 <line:50:5, col:34> col:21 String 'void (char)' inline
| `-ParmVarDecl 0x55bd59294b68 <col:28, col:33> col:33 c 'char'
|-CXXConstructorDecl 0x55bd59294db8 <line:51:5, col:43> col:21 String 'void (unsigned char)' inline
| `-ParmVarDecl 0x55bd59294cf0 <col:28, col:42> col:42 c 'unsigned char'
|-CXXConstructorDecl 0x55bd59294f10 <line:52:5, col:26> col:14 String 'void (int)'
| `-ParmVarDecl 0x55bd59294e80 <col:21, col:25> col:25 x 'int'
|-CXXConstructorDecl 0x55bd59295068 <line:53:5, col:31> col:14 String 'void (unsigned int)'
| `-ParmVarDecl 0x55bd59294fd8 <col:21, col:30> col:30 x 'unsigned int'
|-CXXConstructorDecl 0x55bd592951c0 <line:54:5, col:27> col:14 String 'void (long)'
| `-ParmVarDecl 0x55bd59295130 <col:21, col:26> col:26 x 'long'
|-CXXConstructorDecl 0x55bd59295348 <line:55:5, col:36> col:14 String 'void (unsigned long)'
| `-ParmVarDecl 0x55bd59295288 <col:21, col:35> col:35 x 'unsigned long'
|-CXXConstructorDecl 0x55bd592954d8 <line:57:5, col:32> col:14 String 'void (long long)'
| `-ParmVarDecl 0x55bd59295410 <col:21, col:31> col:31 x 'long long'
|-CXXConstructorDecl 0x55bd59295668 <line:58:5, col:41> col:14 String 'void (unsigned long long)'
| `-ParmVarDecl 0x55bd592955a0 <col:21, col:40> col:40 x 'unsigned long long'
|-CXXConstructorDecl 0x55bd592957f8 <line:65:5, col:29> col:14 String 'void (double)'
| `-ParmVarDecl 0x55bd59295730 <col:21, col:28> col:28 x 'double'
|-CXXDestructorDecl 0x55bd592958f0 <line:67:5, col:20> col:12 used ~String 'void () noexcept' inline
|-CXXMethodDecl 0x55bd59295a18 <line:69:5, col:44> col:33 make_empty 'const String &()' static inline
|-CXXMethodDecl 0x55bd59295b98 <line:70:5, col:52> col:26 used make_uninitialized 'String (int)' static inline
| `-ParmVarDecl 0x55bd59295ad0 <col:45, col:49> col:49 len 'int'
|-CXXMethodDecl 0x55bd59295ce8 <line:71:5, col:74> col:26 make_garbage 'String (int)' static inline
| |-ParmVarDecl 0x55bd59295c58 <col:39, col:43> col:43 len 'int'
| `-DeprecatedAttr 0x55bd59295da0 <col:63> "" ""
|-CXXMethodDecl 0x55bd59295ee8 <line:72:5, col:54> col:26 make_stable 'String (const char *)' static inline
| `-ParmVarDecl 0x55bd59295e28 <col:38, col:50> col:50 cstr 'const char *'
|-CXXMethodDecl 0x55bd592960f8 <line:73:5, col:60> col:26 make_stable 'String (const char *, int)' static inline
| |-ParmVarDecl 0x55bd59295fa8 <col:38, col:50> col:50 s 'const char *'
| `-ParmVarDecl 0x55bd59296028 <col:53, col:57> col:57 len 'int'
|-CXXMethodDecl 0x55bd59296318 <line:74:5, col:73> col:26 make_stable 'String (const char *, const char *)' static inline
| |-ParmVarDecl 0x55bd592961c0 <col:38, col:50> col:50 first 'const char *'
| `-ParmVarDecl 0x55bd59296240 <col:57, col:69> col:69 last 'const char *'
|-CXXMethodDecl 0x55bd592965f8 <line:75:5, col:80> col:19 make_numeric 'String (String::intmax_t, int, bool)' static
| |-ParmVarDecl 0x55bd592963d8 <col:32, col:41> col:41 x 'String::intmax_t':'long'
| |-ParmVarDecl 0x55bd59296458 <col:44, col:55> col:48 base 'int' cinit
| | `-IntegerLiteral 0x55bd592a2440 <col:55> 'int' 10
| `-ParmVarDecl 0x55bd592964d0 <col:59, col:76> col:64 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55bd592a2460 <col:76> 'bool' true
|-CXXMethodDecl 0x55bd592968d8 <line:76:5, col:81> col:19 make_numeric 'String (String::uintmax_t, int, bool)' static
| |-ParmVarDecl 0x55bd592966c0 <col:32, col:42> col:42 x 'String::uintmax_t':'unsigned long'
| |-ParmVarDecl 0x55bd59296740 <col:45, col:56> col:49 base 'int' cinit
| | `-IntegerLiteral 0x55bd592a2470 <col:56> 'int' 10
| `-ParmVarDecl 0x55bd592967b8 <col:60, col:77> col:65 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55bd592a2490 <col:77> 'bool' true
|-CXXMethodDecl 0x55bd592969e0 <line:78:5, col:31> col:24 used data 'const char *() const' inline
|-CXXMethodDecl 0x55bd59296aa8 <line:79:5, col:25> col:16 used length 'int () const' inline
|-CXXMethodDecl 0x55bd59296b70 <line:81:5, col:60> col:52 c_str 'const char *() const'
| |-NoInlineAttr 0x55bd59296c10 <col:20>
| `-OptimizeNoneAttr 0x55bd59296c68 <col:30>
|-CXXConversionDecl 0x55bd59296d58 <line:83:5, col:45> col:12 used operator int (String::*)() const 'String::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x55bd59296e28 <line:84:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x55bd59296ee8 <line:85:5, col:29> col:17 operator! 'bool () const' inline
|-CXXMethodDecl 0x55bd59296fd8 <line:87:5, col:35> col:27 used begin 'String::const_iterator () const' inline
|-CXXMethodDecl 0x55bd59297098 <line:88:5, col:33> col:27 used end 'String::const_iterator () const' inline
|-CXXMethodDecl 0x55bd59297218 <line:90:5, col:35> col:17 used operator[] 'char (int) const' inline
| `-ParmVarDecl 0x55bd59297150 <col:28, col:32> col:32 i 'int'
|-CXXMethodDecl 0x55bd59297368 <line:91:5, col:27> col:17 at 'char (int) const' inline
| `-ParmVarDecl 0x55bd592972d8 <col:20, col:24> col:24 i 'int'
|-CXXMethodDecl 0x55bd59297458 <line:92:5, col:25> col:17 front 'char () const' inline
|-CXXMethodDecl 0x55bd59297518 <line:93:5, col:24> col:17 back 'char () const' inline
|-CXXMethodDecl 0x55bd59297768 <line:95:5, col:64> col:21 used hashcode 'uint32_t (const char *, const char *)' static
| |-ParmVarDecl 0x55bd592975d0 <col:30, col:42> col:42 begin 'const char *'
| `-ParmVarDecl 0x55bd59297650 <col:49, col:61> col:61 end 'const char *'
|-CXXMethodDecl 0x55bd592979c8 <line:96:5, line:97:33> line:96:28 hashcode 'uint32_t (const unsigned char *, const unsigned char *)' static inline
| |-ParmVarDecl 0x55bd59297830 <col:37, col:58> col:58 begin 'const unsigned char *'
| `-ParmVarDecl 0x55bd592978b0 <line:97:9, col:30> col:30 end 'const unsigned char *'
|-CXXMethodDecl 0x55bd59297a98 <line:98:5, col:32> col:21 hashcode 'uint32_t () const' inline
|-CXXMethodDecl 0x55bd59297ca8 <line:100:5, col:65> col:19 substring 'String (const char *, const char *) const' inline
| |-ParmVarDecl 0x55bd59297b50 <col:29, col:41> col:41 begin 'const char *'
| `-ParmVarDecl 0x55bd59297bd0 <col:48, col:60> col:60 end 'const char *'
|-CXXMethodDecl 0x55bd59297ec8 <line:101:5, col:40> col:12 used substring 'String (int, int) const'
| |-ParmVarDecl 0x55bd59297d70 <col:22, col:26> col:26 pos 'int'
| `-ParmVarDecl 0x55bd59297df0 <col:31, col:35> col:35 len 'int'
|-CXXMethodDecl 0x55bd59298058 <line:102:5, col:38> col:19 substring 'String (int) const' inline
| `-ParmVarDecl 0x55bd59297f90 <col:29, col:33> col:33 pos 'int'
|-CXXMethodDecl 0x55bd59298148 <line:103:5, col:25> col:12 trim_space 'String () const'
|-CXXMethodDecl 0x55bd592982b8 <line:105:5, col:41> col:17 equals 'bool (const String &) const' inline
| `-ParmVarDecl 0x55bd592981f8 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x55bd592984c8 <line:106:5, col:48> col:17 used equals 'bool (const char *, int) const' inline
| |-ParmVarDecl 0x55bd59298378 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x55bd592983f8 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x55bd592986e0 <line:107:5, col:63> col:23 used compare 'int (const String &, const String &)' static inline
| |-ParmVarDecl 0x55bd59298588 <col:31, col:45> col:45 a 'const String &'
| `-ParmVarDecl 0x55bd59298600 <col:48, col:62> col:62 b 'const String &'
|-CXXMethodDecl 0x55bd59298870 <line:108:5, col:41> col:16 used compare 'int (const String &) const' inline
| `-ParmVarDecl 0x55bd592987a0 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x55bd59298a90 <line:109:5, col:41> col:9 used compare 'int (const char *, int) const'
| |-ParmVarDecl 0x55bd59298930 <col:17, col:29> col:29 s 'const char *'
| `-ParmVarDecl 0x55bd592989b0 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x55bd59298be0 <line:110:5, col:46> col:17 starts_with 'bool (const String &) const' inline
| `-ParmVarDecl 0x55bd59298b50 <col:29, col:43> col:43 x 'const String &'
|-CXXMethodDecl 0x55bd59298db8 <line:111:5, col:46> col:10 used starts_with 'bool (const char *, int) const'
| |-ParmVarDecl 0x55bd59298ca0 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x55bd59298d20 <col:37, col:41> col:41 len 'int'
|-CXXMethodDecl 0x55bd59298f08 <line:112:5, col:44> col:10 glob_match 'bool (const String &) const'
| `-ParmVarDecl 0x55bd59298e78 <col:21, col:35> col:35 pattern 'const String &'
|-CXXMethodDecl 0x55bd59299120 <line:125:5, col:42> col:9 find_left 'int (char, int) const'
| |-ParmVarDecl 0x55bd59298fc0 <col:19, col:24> col:24 c 'char'
| `-ParmVarDecl 0x55bd59299040 <col:27, col:39> col:31 start 'int' cinit
|   `-IntegerLiteral 0x55bd592a24a0 <col:39> 'int' 0
|-CXXMethodDecl 0x55bd59299340 <line:126:5, col:51> col:9 find_left 'int (const String &, int) const'
| |-ParmVarDecl 0x55bd592991e0 <col:19, col:33> col:33 x 'const String &'
| `-ParmVarDecl 0x55bd59299260 <col:36, col:48> col:40 start 'int' cinit
|   `-IntegerLiteral 0x55bd592a24c0 <col:48> 'int' 0
|-CXXMethodDecl 0x55bd59299520 <line:127:5, col:52> col:9 find_right 'int (char, int) const'
| |-ParmVarDecl 0x55bd59299400 <col:20, col:25> col:25 c 'char'
| `-ParmVarDecl 0x55bd59299480 <col:28, col:40> col:32 start 'int' cinit
|   `-IntegerLiteral 0x55bd592a24e0 <col:40> 'int' 2147483647
|-CXXMethodDecl 0x55bd592995f0 <line:129:5, col:20> col:12 lower 'String () const'
|-CXXMethodDecl 0x55bd592996b0 <line:130:5, col:20> col:12 upper 'String () const'
|-CXXMethodDecl 0x55bd59299770 <line:131:5, col:24> col:12 printable 'String () const'
|-CXXMethodDecl 0x55bd59299830 <line:132:5, col:25> col:12 quoted_hex 'String () const'
|-CXXMethodDecl 0x55bd592998f0 <line:133:5, col:26> col:12 encode_json 'String () const'
|-CXXMethodDecl 0x55bd59299a98 <line:135:5, col:45> col:20 used operator= 'String &(const String &)' inline
| `-ParmVarDecl 0x55bd592999a0 <col:30, col:44> col:44 x 'const String &'
|-CXXMethodDecl 0x55bd59299c18 <line:137:5, col:40> col:20 used operator= 'String &(String &&)' inline
| `-ParmVarDecl 0x55bd59299b50 <col:30, col:39> col:39 x 'String &&'
|-CXXMethodDecl 0x55bd59299df0 <line:139:5, col:46> col:20 operator= 'String &(const char *)' inline
| `-ParmVarDecl 0x55bd59299cd8 <col:30, col:42> col:42 cstr 'const char *'
|-CXXMethodDecl 0x55bd59299f68 <line:141:5, col:31> col:17 swap 'void (String &)' inline
| `-ParmVarDecl 0x55bd59299ea8 <col:22, col:30> col:30 x 'String &'
|-CXXMethodDecl 0x55bd5929a0b0 <line:143:5, col:39> col:17 append 'void (const String &)' inline
| `-ParmVarDecl 0x55bd5929a020 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x55bd5929a200 <line:144:5, col:40> col:17 used append 'void (const char *)' inline
| `-ParmVarDecl 0x55bd5929a170 <col:24, col:36> col:36 cstr 'const char *'
|-CXXMethodDecl 0x55bd5929a3d8 <line:145:5, col:46> col:17 used append 'void (const char *, int)' inline
| |-ParmVarDecl 0x55bd5929a2c0 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x55bd5929a340 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x55bd5929a5b8 <line:146:5, col:59> col:17 append 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x55bd5929a4a0 <col:24, col:36> col:36 first 'const char *'
| `-ParmVarDecl 0x55bd5929a520 <col:43, col:55> col:55 last 'const char *'
|-CXXMethodDecl 0x55bd5929a708 <line:147:5, col:30> col:17 append 'void (char)' inline
| `-ParmVarDecl 0x55bd5929a678 <col:24, col:29> col:29 c 'char'
|-CXXMethodDecl 0x55bd5929a918 <line:148:5, col:36> col:10 append_fill 'void (int, int)'
| |-ParmVarDecl 0x55bd5929a7c8 <col:22, col:26> col:26 c 'int'
| `-ParmVarDecl 0x55bd5929a848 <col:29, col:33> col:33 len 'int'
|-CXXMethodDecl 0x55bd5929aa78 <line:149:5, col:39> col:11 used append_uninitialized 'char *(int)'
| `-ParmVarDecl 0x55bd5929a9e0 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x55bd5929abd0 <line:150:5, col:68> col:18 append_garbage 'char *(int)' inline
| |-ParmVarDecl 0x55bd5929ab38 <col:33, col:37> col:37 len 'int'
| `-DeprecatedAttr 0x55bd5929ac78 <col:57> "" ""
|-CXXMethodDecl 0x55bd5929ad88 <line:152:5, col:46> col:20 used operator+= 'String &(const String &)' inline
| `-ParmVarDecl 0x55bd5929acf8 <col:31, col:45> col:45 x 'const String &'
|-CXXMethodDecl 0x55bd5929aed8 <line:153:5, col:47> col:20 operator+= 'String &(const char *)' inline
| `-ParmVarDecl 0x55bd5929ae48 <col:31, col:43> col:43 cstr 'const char *'
|-CXXMethodDecl 0x55bd5929b058 <line:154:5, col:37> col:20 operator+= 'String &(char)' inline
| `-ParmVarDecl 0x55bd5929af90 <col:31, col:36> col:36 c 'char'
|-CXXMethodDecl 0x55bd5929b120 <line:160:5, col:29> col:17 is_shared 'bool () const' inline
|-CXXMethodDecl 0x55bd5929b1e0 <line:161:5, col:29> col:17 is_stable 'bool () const' inline
|-CXXMethodDecl 0x55bd5929b2a0 <line:163:5, col:60> col:19 unique 'String () const' inline
| `-DeprecatedAttr 0x55bd5929b340 <col:49> "" ""
|-CXXMethodDecl 0x55bd5929b3d0 <line:164:5, col:30> col:19 used unshared 'String () const' inline
|-CXXMethodDecl 0x55bd5929b490 <line:165:5, col:29> col:19 compact 'String () const' inline
|-CXXMethodDecl 0x55bd5929b580 <line:167:5, col:24> col:11 mutable_data 'char *()'
|-CXXMethodDecl 0x55bd5929b648 <line:168:5, col:25> col:11 mutable_c_str 'char *()'
|-CXXMethodDecl 0x55bd5929b708 <line:170:5, col:52> col:33 make_out_of_memory 'const String &()' static inline
|-CXXMethodDecl 0x55bd5929b7c8 <line:171:5, col:33> col:17 out_of_memory 'bool () const' inline
|-CXXMethodDecl 0x55bd5929b8c0 <line:172:5, col:50> col:31 out_of_memory_data 'const char *()' static inline
|-CXXMethodDecl 0x55bd5929b988 <line:173:5, col:44> col:23 out_of_memory_length 'int ()' static inline
|-CXXMethodDecl 0x55bd5929ba50 <line:174:5, col:42> col:31 used empty_data 'const char *()' static inline
|-CXXMethodDecl 0x55bd5929bc28 <line:180:5, col:81> col:31 skip_utf8_char 'const char *(const char *, const char *)' static inline
| |-ParmVarDecl 0x55bd5929bb08 <col:46, col:58> col:58 first 'const char *'
| `-ParmVarDecl 0x55bd5929bb88 <col:65, col:77> col:77 last 'const char *'
|-CXXMethodDecl 0x55bd5929be50 <line:181:5, line:182:38> line:181:33 used skip_utf8_char 'const unsigned char *(const unsigned char *, const unsigned char *)' static
| |-ParmVarDecl 0x55bd5929bcf0 <col:48, col:69> col:69 first 'const unsigned char *'
| `-ParmVarDecl 0x55bd5929bd70 <line:182:13, col:34> col:34 last 'const unsigned char *'
|-VarDecl 0x55bd5929bf60 <line:184:5, col:35> col:23 used bool_data 'const char [11]' static
|-AccessSpecDecl 0x55bd5929bfc8 <line:186:3, col:10> col:3 private
|-CXXRecordDecl 0x55bd5929bff0 <line:189:5, line:198:5> line:189:12 referenced struct memo_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55bd5929c108 <col:5, col:12> col:12 implicit struct memo_t
| |-FieldDecl 0x55bd5929c1a8 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
| |-FieldDecl 0x55bd5929c208 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
| |-FieldDecl 0x55bd5929c268 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
| `-FieldDecl 0x55bd5929c318 <line:197:2, col:18> col:7 real_data 'char [8]'
|-EnumDecl 0x55bd5929c380 <line:200:5, line:202:5> line:200:5
| `-EnumConstantDecl 0x55bd5929c5b8 <line:201:2, col:32> col:2 referenced MEMO_SPACE 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)'
|   `-ImplicitCastExpr 0x55bd5929c608 <col:15, col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55bd5929c598 <col:15, col:32> 'unsigned long' Int: 12
|       `-BinaryOperator 0x55bd5929c4a8 <col:15, col:32> 'unsigned long' '-'
|         |-UnaryExprOrTypeTraitExpr 0x55bd5929c450 <col:15, col:28> 'unsigned long' sizeof 'String::memo_t'
|         `-ImplicitCastExpr 0x55bd5929c490 <col:32> 'unsigned long' <IntegralCast>
|           `-IntegerLiteral 0x55bd5929c470 <col:32> 'int' 8
|-CXXRecordDecl 0x55bd5929c620 <line:204:5, line:208:5> line:204:12 referenced struct rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55bd5929c738 <col:5, col:12> col:12 implicit struct rep_t
| |-FieldDecl 0x55bd5929c7e0 <line:205:2, col:14> col:14 referenced data 'const char *'
| |-FieldDecl 0x55bd5929c848 <line:206:2, col:6> col:6 referenced length 'int'
| |-FieldDecl 0x55bd5929c8d8 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
| |-CXXConstructorDecl 0x55bd592a2970 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55bd592a2da8 <col:12>
| |-CXXConstructorDecl 0x55bd592a2a78 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55bd592a2b88 <col:12> col:12 used 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x55bd5929c7e0 'data' 'const char *'
| | | `-ImplicitCastExpr 0x55bd592a5330 <col:12> 'const char *' <LValueToRValue>
| | |   `-MemberExpr 0x55bd592a5300 <col:12> 'const char *const' lvalue .data 0x55bd5929c7e0
| | |     `-DeclRefExpr 0x55bd592a52e0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55bd592a2b88 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x55bd5929c848 'length' 'int'
| | | `-ImplicitCastExpr 0x55bd592a53c0 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x55bd592a5390 <col:12> 'const int' lvalue .length 0x55bd5929c848
| | |     `-DeclRefExpr 0x55bd592a5370 <col:12> 'const String::rep_t' lvalue ParmVar 0x55bd592a2b88 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x55bd5929c8d8 'memo' 'String::memo_t *'
| | | `-ImplicitCastExpr 0x55bd592a5450 <col:12> 'String::memo_t *' <LValueToRValue>
| | |   `-MemberExpr 0x55bd592a5420 <col:12> 'String::memo_t *const' lvalue .memo 0x55bd5929c8d8
| | |     `-DeclRefExpr 0x55bd592a5400 <col:12> 'const String::rep_t' lvalue ParmVar 0x55bd592a2b88 '' 'const String::rep_t &'
| | `-CompoundStmt 0x55bd592a54a8 <col:12>
| |-CXXConstructorDecl 0x55bd592a2c28 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55bd592a2c28
| | `-ParmVarDecl 0x55bd592a2d38 <col:12> col:12 'String::rep_t &&'
| |-CXXDestructorDecl 0x55bd592a8290 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x55bd592b3ca8 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55bd592b3db8 <col:12> col:12 used 'const String::rep_t &'
| | `-CompoundStmt 0x55bd592b42d0 <col:12>
| |   |-BinaryOperator 0x55bd592b40e8 <col:12> 'const char *' lvalue '='
| |   | |-MemberExpr 0x55bd592b40a0 <col:12> 'const char *' lvalue ->data 0x55bd5929c7e0
| |   | | `-CXXThisExpr 0x55bd592b4090 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x55bd592b40d0 <col:12> 'const char *' <LValueToRValue>
| |   |   `-MemberExpr 0x55bd592b4060 <col:12> 'const char *const' lvalue .data 0x55bd5929c7e0
| |   |     `-DeclRefExpr 0x55bd592b4040 <col:12> 'const String::rep_t' lvalue ParmVar 0x55bd592b3db8 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x55bd592b41b0 <col:12> 'int' lvalue '='
| |   | |-MemberExpr 0x55bd592b4168 <col:12> 'int' lvalue ->length 0x55bd5929c848
| |   | | `-CXXThisExpr 0x55bd592b4158 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x55bd592b4198 <col:12> 'int' <LValueToRValue>
| |   |   `-MemberExpr 0x55bd592b4128 <col:12> 'const int' lvalue .length 0x55bd5929c848
| |   |     `-DeclRefExpr 0x55bd592b4108 <col:12> 'const String::rep_t' lvalue ParmVar 0x55bd592b3db8 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x55bd592b4278 <col:12> 'String::memo_t *' lvalue '='
| |   | |-MemberExpr 0x55bd592b4230 <col:12> 'String::memo_t *' lvalue ->memo 0x55bd5929c8d8
| |   | | `-CXXThisExpr 0x55bd592b4220 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x55bd592b4260 <col:12> 'String::memo_t *' <LValueToRValue>
| |   |   `-MemberExpr 0x55bd592b41f0 <col:12> 'String::memo_t *const' lvalue .memo 0x55bd5929c8d8
| |   |     `-DeclRefExpr 0x55bd592b41d0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55bd592b3db8 '' 'const String::rep_t &'
| |   `-ReturnStmt 0x55bd592b42c0 <col:12>
| |     `-UnaryOperator 0x55bd592b42a8 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x55bd592b4298 <col:12> 'String::rep_t *' this
| `-CXXMethodDecl 0x55bd592b3e28 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55bd592b3e28
|   `-ParmVarDecl 0x55bd592b3f38 <col:12> col:12 'String::rep_t &&'
|-FieldDecl 0x55bd5929c950 <line:211:5, col:19> col:19 referenced _r 'String::rep_t' mutable
|-CXXMethodDecl 0x55bd5929cb98 <line:256:5, line:261:5> line:256:17 used assign_memo 'void (const char *, int, String::memo_t *) const' inline
| |-ParmVarDecl 0x55bd5929c9b8 <col:29, col:41> col:41 used data 'const char *'
| |-ParmVarDecl 0x55bd5929ca38 <col:47, col:51> col:51 used length 'int'
| |-ParmVarDecl 0x55bd5929cab0 <col:59, col:67> col:67 used memo 'String::memo_t *'
| `-CompoundStmt 0x55bd592a2930 <col:79, line:261:5>
|   |-BinaryOperator 0x55bd592a25a8 <line:257:2, col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x55bd592a2540 <col:2, col:5> 'const char *' lvalue .data 0x55bd5929c7e0
|   | | `-MemberExpr 0x55bd592a2510 <col:2> 'String::rep_t' lvalue ->_r 0x55bd5929c950
|   | |   `-CXXThisExpr 0x55bd592a2500 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x55bd592a2590 <col:12> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x55bd592a2570 <col:12> 'const char *' lvalue ParmVar 0x55bd5929c9b8 'data' 'const char *'
|   |-BinaryOperator 0x55bd592a2670 <line:258:2, col:14> 'int' lvalue '='
|   | |-MemberExpr 0x55bd592a2608 <col:2, col:5> 'int' lvalue .length 0x55bd5929c848
|   | | `-MemberExpr 0x55bd592a25d8 <col:2> 'String::rep_t' lvalue ->_r 0x55bd5929c950
|   | |   `-CXXThisExpr 0x55bd592a25c8 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x55bd592a2658 <col:14> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55bd592a2638 <col:14> 'int' lvalue ParmVar 0x55bd5929ca38 'length' 'int'
|   `-IfStmt 0x55bd592a2918 <line:259:2, line:260:41>
|     |-ImplicitCastExpr 0x55bd592a2790 <line:259:6, col:21> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x55bd592a2778 <col:6, col:21> 'String::memo_t *' <LValueToRValue>
|     |   `-ParenExpr 0x55bd592a2758 <col:6, col:21> 'String::memo_t *' lvalue
|     |     `-BinaryOperator 0x55bd592a2738 <col:7, col:17> 'String::memo_t *' lvalue '='
|     |       |-MemberExpr 0x55bd592a26d0 <col:7, col:10> 'String::memo_t *' lvalue .memo 0x55bd5929c8d8
|     |       | `-MemberExpr 0x55bd592a26a0 <col:7> 'String::rep_t' lvalue ->_r 0x55bd5929c950
|     |       |   `-CXXThisExpr 0x55bd592a2690 <col:7> 'const String *' implicit this
|     |       `-ImplicitCastExpr 0x55bd592a2720 <col:17> 'String::memo_t *' <LValueToRValue>
|     |         `-DeclRefExpr 0x55bd592a2700 <col:17> 'String::memo_t *' lvalue ParmVar 0x55bd5929cab0 'memo' 'String::memo_t *'
|     `-CallExpr 0x55bd592a28f0 <line:260:6, col:41> 'void'
|       |-ImplicitCastExpr 0x55bd592a28d8 <col:6, col:23> 'void (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55bd592a27e0 <col:6, col:23> 'void (volatile uint32_t &)' lvalue CXXMethod 0x55bd5928b5c8 'inc' 'void (volatile uint32_t &)'
|       `-MemberExpr 0x55bd592a2848 <col:27, col:33> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x55bd5929c1a8
|         `-ImplicitCastExpr 0x55bd592a2830 <col:27> 'String::memo_t *' <LValueToRValue>
|           `-DeclRefExpr 0x55bd592a2810 <col:27> 'String::memo_t *' lvalue ParmVar 0x55bd5929cab0 'memo' 'String::memo_t *'
|-CXXConstructorDecl 0x55bd5929ce48 <line:263:5, line:265:5> line:263:12 used String 'void (const char *, int, String::memo_t *)' inline
| |-ParmVarDecl 0x55bd5929cc68 <col:19, col:31> col:31 used data 'const char *'
| |-ParmVarDecl 0x55bd5929cce8 <col:37, col:41> col:41 used length 'int'
| |-ParmVarDecl 0x55bd5929cd60 <col:49, col:57> col:57 used memo 'String::memo_t *'
| |-CXXCtorInitializer Field 0x55bd5929c950 '_r' 'String::rep_t'
| | `-CXXConstructExpr 0x55bd592a2db8 <col:12> 'String::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55bd592a2f48 <col:63, line:265:5>
|   `-CXXMemberCallExpr 0x55bd592a2eb0 <line:264:2, col:32> 'void'
|     |-MemberExpr 0x55bd592a2e20 <col:2> '<bound member function type>' ->assign_memo 0x55bd5929cb98
|     | `-ImplicitCastExpr 0x55bd592a2ee8 <col:2> 'const String *' <NoOp>
|     |   `-CXXThisExpr 0x55bd592a2e10 <col:2> 'String *' implicit this
|     |-ImplicitCastExpr 0x55bd592a2f00 <col:14> 'const char *' <LValueToRValue>
|     | `-DeclRefExpr 0x55bd592a2e50 <col:14> 'const char *' lvalue ParmVar 0x55bd5929cc68 'data' 'const char *'
|     |-ImplicitCastExpr 0x55bd592a2f18 <col:20> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x55bd592a2e70 <col:20> 'int' lvalue ParmVar 0x55bd5929cce8 'length' 'int'
|     `-ImplicitCastExpr 0x55bd592a2f30 <col:28> 'String::memo_t *' <LValueToRValue>
|       `-DeclRefExpr 0x55bd592a2e90 <col:28> 'String::memo_t *' lvalue ParmVar 0x55bd5929cd60 'memo' 'String::memo_t *'
|-CXXMethodDecl 0x55bd5929cfd8 <line:267:5, line:269:5> line:267:17 used assign 'void (const String &) const' inline
| |-ParmVarDecl 0x55bd5929cf18 <col:24, col:38> col:38 used x 'const String &'
| `-CompoundStmt 0x55bd592a31a0 <col:47, line:269:5>
|   `-CXXMemberCallExpr 0x55bd592a3120 <line:268:2, col:47> 'void'
|     |-MemberExpr 0x55bd592a2f70 <col:2> '<bound member function type>' ->assign_memo 0x55bd5929cb98
|     | `-CXXThisExpr 0x55bd592a2f60 <col:2> 'const String *' implicit this
|     |-ImplicitCastExpr 0x55bd592a3158 <col:14, col:19> 'const char *' <LValueToRValue>
|     | `-MemberExpr 0x55bd592a2ff0 <col:14, col:19> 'const char *' lvalue .data 0x55bd5929c7e0
|     |   `-MemberExpr 0x55bd592a2fc0 <col:14, col:16> 'String::rep_t' lvalue ._r 0x55bd5929c950
|     |     `-DeclRefExpr 0x55bd592a2fa0 <col:14> 'const String' lvalue ParmVar 0x55bd5929cf18 'x' 'const String &'
|     |-ImplicitCastExpr 0x55bd592a3170 <col:25, col:30> 'int' <LValueToRValue>
|     | `-MemberExpr 0x55bd592a3070 <col:25, col:30> 'int' lvalue .length 0x55bd5929c848
|     |   `-MemberExpr 0x55bd592a3040 <col:25, col:27> 'String::rep_t' lvalue ._r 0x55bd5929c950
|     |     `-DeclRefExpr 0x55bd592a3020 <col:25> 'const String' lvalue ParmVar 0x55bd5929cf18 'x' 'const String &'
|     `-ImplicitCastExpr 0x55bd592a3188 <col:38, col:43> 'String::memo_t *' <LValueToRValue>
|       `-MemberExpr 0x55bd592a30f0 <col:38, col:43> 'String::memo_t *' lvalue .memo 0x55bd5929c8d8
|         `-MemberExpr 0x55bd592a30c0 <col:38, col:40> 'String::rep_t' lvalue ._r 0x55bd5929c950
|           `-DeclRefExpr 0x55bd592a30a0 <col:38> 'const String' lvalue ParmVar 0x55bd5929cf18 'x' 'const String &'
|-CXXMethodDecl 0x55bd5929d0a0 <line:271:5, line:278:5> line:271:17 used deref 'void () const' inline
| `-CompoundStmt 0x55bd592a3b60 <col:31, line:278:5>
|   `-IfStmt 0x55bd592a3b48 <line:272:2, line:277:2>
|     |-ImplicitCastExpr 0x55bd592a3240 <line:272:6, col:9> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x55bd592a3228 <col:6, col:9> 'String::memo_t *' <LValueToRValue>
|     |   `-MemberExpr 0x55bd592a31f8 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x55bd5929c8d8
|     |     `-MemberExpr 0x55bd592a31c8 <col:6> 'String::rep_t' lvalue ->_r 0x55bd5929c950
|     |       `-CXXThisExpr 0x55bd592a31b8 <col:6> 'const String *' implicit this
|     `-CompoundStmt 0x55bd592a3b20 <col:15, line:277:2>
|       |-ParenExpr 0x55bd592a36f0 <line:273:6, col:166> 'void'
|       | `-ConditionalOperator 0x55bd592a36c0 <col:7, col:165> 'void'
|       |   |-CXXStaticCastExpr 0x55bd592a3350 <col:7, col:44> 'bool' static_cast<_Bool> <NoOp>
|       |   | `-ImplicitCastExpr 0x55bd592a3338 <col:27, col:36> 'bool' <IntegralToBoolean> part_of_explicit_cast
|       |   |   `-ImplicitCastExpr 0x55bd592a3320 <col:27, col:36> 'uint32_t':'unsigned int' <LValueToRValue> part_of_explicit_cast
|       |   |     `-MemberExpr 0x55bd592a32e0 <col:27, col:36> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x55bd5929c1a8
|       |   |       `-ImplicitCastExpr 0x55bd592a32c8 <col:27, col:30> 'String::memo_t *' <LValueToRValue>
|       |   |         `-MemberExpr 0x55bd592a3298 <col:27, col:30> 'String::memo_t *' lvalue .memo 0x55bd5929c8d8
|       |   |           `-MemberExpr 0x55bd592a3268 <col:27> 'String::rep_t' lvalue ->_r 0x55bd5929c950
|       |   |             `-CXXThisExpr 0x55bd592a3258 <col:27> 'const String *' implicit this
|       |   |-CXXFunctionalCastExpr 0x55bd592a33b0 <col:48, col:55> 'void' functional cast to void <ToVoid>
|       |   | `-IntegerLiteral 0x55bd592a3390 <col:54> 'int' 0
|       |   `-CallExpr 0x55bd592a3620 <col:59, col:165> 'void'
|       |     |-ImplicitCastExpr 0x55bd592a3608 <col:59> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x55bd592a3588 <col:59> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55bd59002600 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|       |     |-ImplicitCastExpr 0x55bd592a3660 <col:74> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x55bd592a3498 <col:74> 'const char [18]' lvalue "_r.memo->refcount"
|       |     |-ImplicitCastExpr 0x55bd592a3678 <col:95> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x55bd592a34c8 <col:95> 'const char [29]' lvalue "../dummy_inc/click/string.hh"
|       |     |-ImplicitCastExpr 0x55bd592a3690 <col:127> 'unsigned int' <IntegralCast>
|       |     | `-IntegerLiteral 0x55bd592a3500 <col:127> 'int' 273
|       |     `-ImplicitCastExpr 0x55bd592a36a8 <col:132, col:146> 'const char *' <ArrayToPointerDecay>
|       |       `-UnaryOperator 0x55bd592a3570 <col:132, col:146> 'const char [27]' lvalue prefix '__extension__' cannot overflow
|       |         `-PredefinedExpr 0x55bd592a3558 <col:146> 'const char [27]' lvalue __PRETTY_FUNCTION__
|       |           `-StringLiteral 0x55bd592a3520 <col:146> 'const char [27]' lvalue "void String::deref() const"
|       |-IfStmt 0x55bd592a3a40 <line:274:6, line:275:22>
|       | |-CallExpr 0x55bd592a3900 <line:274:10, col:57> 'bool'
|       | | |-ImplicitCastExpr 0x55bd592a38e8 <col:10, col:27> 'bool (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | | | `-DeclRefExpr 0x55bd592a3860 <col:10, col:27> 'bool (volatile uint32_t &)' lvalue CXXMethod 0x55bd5928ca10 'dec_and_test' 'bool (volatile uint32_t &)'
|       | | `-MemberExpr 0x55bd592a3830 <col:40, col:49> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x55bd5929c1a8
|       | |   `-ImplicitCastExpr 0x55bd592a3818 <col:40, col:43> 'String::memo_t *' <LValueToRValue>
|       | |     `-MemberExpr 0x55bd592a37e8 <col:40, col:43> 'String::memo_t *' lvalue .memo 0x55bd5929c8d8
|       | |       `-MemberExpr 0x55bd592a37b8 <col:40> 'String::rep_t' lvalue ->_r 0x55bd5929c950
|       | |         `-CXXThisExpr 0x55bd592a37a8 <col:40> 'const String *' implicit this
|       | `-CallExpr 0x55bd592a3a00 <line:275:3, col:22> 'void'
|       |   |-ImplicitCastExpr 0x55bd592a39e8 <col:3> 'void (*)(String::memo_t *)' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x55bd592a3928 <col:3> 'void (String::memo_t *)' lvalue CXXMethod 0x55bd592a1880 'delete_memo' 'void (String::memo_t *)'
|       |   `-ImplicitCastExpr 0x55bd592a3a28 <col:15, col:18> 'String::memo_t *' <LValueToRValue>
|       |     `-MemberExpr 0x55bd592a3988 <col:15, col:18> 'String::memo_t *' lvalue .memo 0x55bd5929c8d8
|       |       `-MemberExpr 0x55bd592a3958 <col:15> 'String::rep_t' lvalue ->_r 0x55bd5929c950
|       |         `-CXXThisExpr 0x55bd592a3948 <col:15> 'const String *' implicit this
|       `-BinaryOperator 0x55bd592a3b00 <line:276:6, col:16> 'String::memo_t *' lvalue '='
|         |-MemberExpr 0x55bd592a3a98 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x55bd5929c8d8
|         | `-MemberExpr 0x55bd592a3a68 <col:6> 'String::rep_t' lvalue ->_r 0x55bd5929c950
|         |   `-CXXThisExpr 0x55bd592a3a58 <col:6> 'const String *' implicit this
|         `-ImplicitCastExpr 0x55bd592a3ae8 <col:16> 'String::memo_t *' <NullToPointer>
|           `-IntegerLiteral 0x55bd592a3ac8 <col:16> 'int' 0
|-CXXMethodDecl 0x55bd5929d338 <line:280:5, col:56> col:10 used assign 'void (const char *, int, bool)'
| |-ParmVarDecl 0x55bd5929d158 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x55bd5929d1d8 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x55bd5929d250 <col:41, col:46> col:46 need_deref 'bool'
|-CXXMethodDecl 0x55bd5929d410 <line:281:5, col:31> col:10 assign_out_of_memory 'void ()'
|-CXXMethodDecl 0x55bd5929d660 <line:282:5, col:53> col:10 used append 'void (const char *, int, String::memo_t *)'
| |-ParmVarDecl 0x55bd5929d4c8 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x55bd5929d548 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x55bd5929d5c0 <col:41, col:49> col:49 memo 'String::memo_t *'
|-CXXMethodDecl 0x55bd5929d848 <line:283:5, col:58> col:19 used hard_make_stable 'String (const char *, int)' static
| |-ParmVarDecl 0x55bd5929d730 <col:36, col:48> col:48 s 'const char *'
| `-ParmVarDecl 0x55bd5929d7b0 <col:51, col:55> col:55 len 'int'
|-CXXMethodDecl 0x55bd5929d948 <line:284:5, line:286:5> line:284:27 used absent_memo 'String::memo_t *()' static inline
| `-CompoundStmt 0x55bd592a3c38 <col:41, line:286:5>
|   `-ReturnStmt 0x55bd592a3c28 <line:285:2, col:48>
|     `-CXXReinterpretCastExpr 0x55bd592a3bf8 <col:9, col:48> 'String::memo_t *' reinterpret_cast<struct String::memo_t *> <IntegralToPointer>
|       `-CXXFunctionalCastExpr 0x55bd592a3bc0 <col:36, col:47> 'uintptr_t':'unsigned long' functional cast to uintptr_t <NoOp>
|         `-ImplicitCastExpr 0x55bd592a3ba8 <col:46> 'uintptr_t':'unsigned long' <IntegralCast> part_of_explicit_cast
|           `-IntegerLiteral 0x55bd592a3b88 <col:46> 'int' 1
|-CXXMethodDecl 0x55bd5929dbe8 <line:287:5, col:68> col:20 create_memo 'String::memo_t *(char *, int, int)' static
| |-ParmVarDecl 0x55bd5929da00 <col:32, col:38> col:38 space 'char *'
| |-ParmVarDecl 0x55bd5929da80 <col:45, col:49> col:49 dirty 'int'
| `-ParmVarDecl 0x55bd5929db00 <col:56, col:60> col:60 capacity 'int'
|-CXXMethodDecl 0x55bd592a1880 <line:288:5, col:41> col:17 used delete_memo 'void (String::memo_t *)' static
| `-ParmVarDecl 0x55bd5929dcb0 <col:29, col:37> col:37 memo 'String::memo_t *'
|-CXXMethodDecl 0x55bd592a1950 <line:289:5, col:30> col:17 hard_c_str 'const char *() const'
|-CXXMethodDecl 0x55bd592a1b20 <line:290:5, col:46> col:10 used hard_equals 'bool (const char *, int) const'
| |-ParmVarDecl 0x55bd592a1a08 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x55bd592a1a88 <col:37, col:41> col:41 len 'int'
|-VarDecl 0x55bd592a1be0 <line:292:5, col:23> col:23 used null_data 'const char' static
|-VarDecl 0x55bd592a1ca8 <line:293:5, col:34> col:23 used oom_data 'const char [15]' static
|-VarDecl 0x55bd592a1da8 <line:294:5, col:34> col:23 int_data 'const char [20]' static
|-VarDecl 0x55bd592a1e20 <line:295:5, col:24> col:24 used null_string_rep 'const String::rep_t' static
|-VarDecl 0x55bd592a1e98 <line:296:5, col:24> col:24 used oom_string_rep 'const String::rep_t' static
|-EnumDecl 0x55bd592a1f00 <line:297:5, col:25> col:5
| `-EnumConstantDecl 0x55bd592a2000 <col:12, col:22> col:12 referenced oom_len 'String::(anonymous enum at ../dummy_inc/click/string.hh:297:5)'
|   `-ImplicitCastExpr 0x55bd592a2050 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55bd592a1fe0 <col:22> 'int' Int: 14
|       `-IntegerLiteral 0x55bd592a1fc0 <col:22> 'int' 14
|-CXXMethodDecl 0x55bd592a2268 <line:299:5, col:46> col:19 make_claim 'String (char *, int, int)' static
| |-ParmVarDecl 0x55bd592a2080 <col:30, col:35> col:36 'char *'
| |-ParmVarDecl 0x55bd592a2100 <col:38> col:41 'int'
| `-ParmVarDecl 0x55bd592a2180 <col:43> col:46 'int'
|-FriendDecl 0x55bd592a2370 <line:301:5, col:19> col:12 'struct rep_t':'String::rep_t'
`-FriendDecl 0x55bd592a2400 <line:302:5, col:18> col:12 'class StringAccum':'StringAccum'

Layout: <CGRecordLayout
  LLVMType:%class.String = type { %"struct.String::rep_t" }
  NonVirtualBaseLLVMType:%class.String = type { %"struct.String::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55bd595117c0 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'typed_array_memory<String>'
|-CXXRecordDecl 0x55bd59511998 prev 0x55bd595117c0 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55bd59511a28 <col:46, col:52> col:46 public
|-TypedefDecl 0x55bd59511a50 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55bd58f62370 'int'
|-TypedefDecl 0x55bd595133f0 <line:13:5, col:31> col:31 type 'typename typed_array_memory<String>::type':'String'
| `-ElaboratedType 0x55bd595133a0 'typename typed_array_memory<String>::type' sugar
|   `-TypedefType 0x55bd59513380 'typed_array_memory<String>::type' sugar
|     |-Typedef 0x55bd59511c68 'type'
|     `-SubstTemplateTypeParmType 0x55bd59511c30 'String' sugar
|       |-TemplateTypeParmType 0x55bd59256e00 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55bd59256db0 'T'
|       `-RecordType 0x55bd592935f0 'String'
|         `-CXXRecord 0x55bd59293560 'String'
|-TypedefDecl 0x55bd595134a8 <line:14:5, col:19> col:19 iterator 'vector_memory<typed_array_memory<String> >::type *'
| `-PointerType 0x55bd59513470 'vector_memory<typed_array_memory<String> >::type *'
|   `-TypedefType 0x55bd59513450 'vector_memory<typed_array_memory<String> >::type' sugar
|     |-Typedef 0x55bd595133f0 'type'
|     `-ElaboratedType 0x55bd595133a0 'typename typed_array_memory<String>::type' sugar
|       `-TypedefType 0x55bd59513380 'typed_array_memory<String>::type' sugar
|         |-Typedef 0x55bd59511c68 'type'
|         `-SubstTemplateTypeParmType 0x55bd59511c30 'String' sugar
|           |-TemplateTypeParmType 0x55bd59256e00 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55bd59256db0 'T'
|           `-RecordType 0x55bd592935f0 'String'
|             `-CXXRecord 0x55bd59293560 'String'
|-CXXMethodDecl 0x55bd59513628 <line:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<typed_array_memory<String> >::type *) const' inline
| `-ParmVarDecl 0x55bd59513538 <col:36, col:48> col:48 argp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXConstructorDecl 0x55bd59513718 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55bd595137f8 <line:23:5, col:20> col:5 used ~vector_memory 'void () noexcept'
|-CXXMethodDecl 0x55bd59513ac8 <line:25:5, col:43> col:10 assign 'void (const vector_memory<typed_array_memory<String> > &)'
| `-ParmVarDecl 0x55bd595139d0 <col:17, col:42> col:42 x 'const vector_memory<typed_array_memory<String> > &'
|-CXXMethodDecl 0x55bd59513d08 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x55bd59513b80 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55bd59513bf8 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55bd59513ed8 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x55bd59513dc8 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55bd59513e40 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55bd59514038 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<typed_array_memory<String> >::iterator ()'
|-CXXMethodDecl 0x55bd59514108 <line:31:5, line:33:5> line:31:14 end 'vector_memory<typed_array_memory<String> >::iterator ()'
|-CXXMethodDecl 0x55bd59514358 <line:34:5, col:48> col:14 insert 'vector_memory<typed_array_memory<String> >::iterator (vector_memory<typed_array_memory<String> >::iterator, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x55bd595141c8 <col:21, col:30> col:30 it 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
| `-ParmVarDecl 0x55bd59514240 <col:34, col:46> col:46 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55bd595145b8 <line:35:5, col:42> col:14 erase 'vector_memory<typed_array_memory<String> >::iterator (vector_memory<typed_array_memory<String> >::iterator, vector_memory<typed_array_memory<String> >::iterator)'
| |-ParmVarDecl 0x55bd59514428 <col:20, col:29> col:29 a 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
| `-ParmVarDecl 0x55bd595144a0 <col:32, col:41> col:41 b 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55bd59514778 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<typed_array_memory<String> >::type *)' inline
| `-ParmVarDecl 0x55bd59514688 <col:27, col:39> col:39 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55bd59514938 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<typed_array_memory<String> >::type *)' inline
| `-ParmVarDecl 0x55bd59514840 <col:37, col:43> col:43 vp 'vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55bd595149f0 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55bd59514aa0 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55bd59514cd8 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x55bd59514b50 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55bd59514bc8 <col:45, col:57> col:57 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55bd59514f78 <line:66:5, col:35> col:10 swap 'void (vector_memory<typed_array_memory<String> > &)'
| `-ParmVarDecl 0x55bd59514e80 <col:15, col:34> col:34 x 'vector_memory<typed_array_memory<String> > &'
|-FieldDecl 0x55bd59515040 <line:68:5, col:11> col:11 l_ 'vector_memory<typed_array_memory<String> >::type *'
|-FieldDecl 0x55bd59515090 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55bd595150e0 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.1 = type { %class.String*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.1 = type { %class.String*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55bd594cad90 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'String'
|-CXXRecordDecl 0x55bd59510228 prev 0x55bd594cad90 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55bd59511730 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<String>::type':'typed_array_memory<String>'
| `-ElaboratedType 0x55bd595116e0 'typename array_memory<String>::type' sugar
|   `-TypedefType 0x55bd595116c0 'conditional<false, sized_array_memory<24>, typed_array_memory<String> >::type' sugar
|     |-Typedef 0x55bd59511570 'type'
|     `-SubstTemplateTypeParmType 0x55bd59511400 'typed_array_memory<String>' sugar
|       |-TemplateTypeParmType 0x55bd5922c990 'F' dependent depth 0 index 1
|       | `-TemplateTypeParm 0x55bd5922c938 'F'
|       `-RecordType 0x55bd59511060 'typed_array_memory<String>'
|         `-ClassTemplateSpecialization 0x55bd59510f80 'typed_array_memory'
|-FieldDecl 0x55bd59515130 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<String>::array_memory_type>':'vector_memory<typed_array_memory<String> >' mutable
|-AccessSpecDecl 0x55bd59515180 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55bd595151b8 <line:118:5, col:15> col:15 value_type 'String':'String'
| `-SubstTemplateTypeParmType 0x55bd595102c0 'String' sugar
|   |-TemplateTypeParmType 0x55bd59264120 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55bd592640c8 'T'
|   `-RecordType 0x55bd592935f0 'String'
|     `-CXXRecord 0x55bd59293560 'String'
|-TypedefDecl 0x55bd59515248 <line:119:5, col:16> col:16 reference 'String &'
| `-LValueReferenceType 0x55bd59515210 'String &'
|   `-SubstTemplateTypeParmType 0x55bd595102c0 'String' sugar
|     |-TemplateTypeParmType 0x55bd59264120 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55bd592640c8 'T'
|     `-RecordType 0x55bd592935f0 'String'
|       `-CXXRecord 0x55bd59293560 'String'
|-TypedefDecl 0x55bd595152d8 <line:120:5, col:22> col:22 const_reference 'const String &'
| `-LValueReferenceType 0x55bd595152a0 'const String &'
|   `-QualType 0x55bd595102c1 'const String' const
|     `-SubstTemplateTypeParmType 0x55bd595102c0 'String' sugar
|       |-TemplateTypeParmType 0x55bd59264120 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55bd592640c8 'T'
|       `-RecordType 0x55bd592935f0 'String'
|         `-CXXRecord 0x55bd59293560 'String'
|-TypedefDecl 0x55bd59515368 <line:121:5, col:16> col:16 pointer 'String *'
| `-PointerType 0x55bd59515330 'String *'
|   `-SubstTemplateTypeParmType 0x55bd595102c0 'String' sugar
|     |-TemplateTypeParmType 0x55bd59264120 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55bd592640c8 'T'
|     `-RecordType 0x55bd592935f0 'String'
|       `-CXXRecord 0x55bd59293560 'String'
|-TypedefDecl 0x55bd595153f8 <line:122:5, col:22> col:22 const_pointer 'const String *'
| `-PointerType 0x55bd595153c0 'const String *'
|   `-QualType 0x55bd595102c1 'const String' const
|     `-SubstTemplateTypeParmType 0x55bd595102c0 'String' sugar
|       |-TemplateTypeParmType 0x55bd59264120 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55bd592640c8 'T'
|       `-RecordType 0x55bd592935f0 'String'
|         `-CXXRecord 0x55bd59293560 'String'
|-TypedefDecl 0x55bd59516050 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<String>::type':'const String &'
| `-ElaboratedType 0x55bd59516000 'typename fast_argument<String>::type' sugar
|   `-TypedefType 0x55bd59515fe0 'fast_argument<String, true>::type' sugar
|     |-Typedef 0x55bd59515f18 'type'
|     `-LValueReferenceType 0x55bd59515ee0 'const String &'
|       `-QualType 0x55bd59515c81 'const String' const
|         `-SubstTemplateTypeParmType 0x55bd59515c80 'String' sugar
|           |-TemplateTypeParmType 0x55bd592368e0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55bd59236888 'T'
|           `-RecordType 0x55bd592935f0 'String'
|             `-CXXRecord 0x55bd59293560 'String'
|-TypedefDecl 0x55bd595160b8 <line:126:5, col:22> col:22 const_access_type 'const String &'
| `-LValueReferenceType 0x55bd595152a0 'const String &'
|   `-QualType 0x55bd595102c1 'const String' const
|     `-SubstTemplateTypeParmType 0x55bd595102c0 'String' sugar
|       |-TemplateTypeParmType 0x55bd59264120 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55bd592640c8 'T'
|       `-RecordType 0x55bd592935f0 'String'
|         `-CXXRecord 0x55bd59293560 'String'
|-TypedefDecl 0x55bd59516110 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55bd58f62370 'int'
|-TypedefDecl 0x55bd59516178 <line:130:5, col:16> col:16 iterator 'String *'
| `-PointerType 0x55bd59515330 'String *'
|   `-SubstTemplateTypeParmType 0x55bd595102c0 'String' sugar
|     |-TemplateTypeParmType 0x55bd59264120 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55bd592640c8 'T'
|     `-RecordType 0x55bd592935f0 'String'
|       `-CXXRecord 0x55bd59293560 'String'
|-TypedefDecl 0x55bd595161e0 <line:131:5, col:22> col:22 const_iterator 'const String *'
| `-PointerType 0x55bd595153c0 'const String *'
|   `-QualType 0x55bd595102c1 'const String' const
|     `-SubstTemplateTypeParmType 0x55bd595102c0 'String' sugar
|       |-TemplateTypeParmType 0x55bd59264120 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55bd592640c8 'T'
|       `-RecordType 0x55bd592935f0 'String'
|         `-CXXRecord 0x55bd59293560 'String'
|-EnumDecl 0x55bd59516238 <line:134:5> col:5
| `-EnumConstantDecl 0x55bd59516330 <col:12, col:40> col:12 RESERVE_GROW 'Vector<String>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55bd59516310 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55bd592657a8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55bd59265780 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55bd59265760 <col:40> 'int' 1
|-CXXConstructorDecl 0x55bd595163b8 <line:137:5, col:28> col:21 used Vector 'void ()' inline
|-CXXConstructorDecl 0x55bd59516648 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x55bd59516470 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55bd59516510 <col:41, col:61> col:61 v 'Vector<String>::value_argument_type':'const String &'
|-CXXConstructorDecl 0x55bd595168d8 <line:139:5, col:37> col:12 Vector 'void (const Vector<String> &)' inline
| `-ParmVarDecl 0x55bd595167c0 <col:19, col:36> col:36 x 'const Vector<String> &'
|-CXXConstructorDecl 0x55bd59516b98 <line:141:5, col:32> col:12 Vector 'void (Vector<String> &&)' inline
| `-ParmVarDecl 0x55bd59516a80 <col:19, col:31> col:31 x 'Vector<String> &&'
|-CXXMethodDecl 0x55bd59516eb0 <line:144:5, col:51> col:23 operator= 'Vector<String> &(const Vector<String> &)' inline
| `-ParmVarDecl 0x55bd59516d90 <col:33, col:50> col:50 x 'const Vector<String> &'
|-CXXMethodDecl 0x55bd595171c0 <line:146:5, col:46> col:23 operator= 'Vector<String> &(Vector<String> &&)' inline
| `-ParmVarDecl 0x55bd595170a0 <col:33, col:45> col:45 x 'Vector<String> &&'
|-CXXMethodDecl 0x55bd595174b0 <line:148:5, col:70> col:23 assign 'Vector<String> &(Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x55bd595172f8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55bd59517370 <col:43, col:69> col:63 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x55bd595175d8 <line:150:5, col:55> col:49 begin 'Vector<String>::iterator ()'
| |-NoInlineAttr 0x55bd59517688 <col:20> Inherited
| `-OptimizeNoneAttr 0x55bd595176e0 <col:30> Inherited
|-CXXMethodDecl 0x55bd59517728 <line:151:5, col:53> col:49 end 'Vector<String>::iterator ()'
| |-NoInlineAttr 0x55bd595177d8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55bd59517830 <col:30> Inherited
|-CXXMethodDecl 0x55bd595178f8 <line:152:5, col:63> col:55 used begin 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x55bd595179a8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55bd59517a00 <col:30> Inherited
|-CXXMethodDecl 0x55bd59517a48 <line:153:5, col:61> col:55 used end 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x55bd59517af8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55bd59517b50 <col:30> Inherited
|-CXXMethodDecl 0x55bd59517b98 <line:154:5, col:64> col:55 cbegin 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x55bd59517c48 <col:20> Inherited
| `-OptimizeNoneAttr 0x55bd59517ca0 <col:30> Inherited
|-CXXMethodDecl 0x55bd59517ce8 <line:155:5, col:62> col:55 cend 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x55bd59517d98 <col:20> Inherited
| `-OptimizeNoneAttr 0x55bd59517df0 <col:30> Inherited
|-CXXMethodDecl 0x55bd59517e18 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55bd59517ec8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55bd59517f78 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55bd59518138 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x55bd59518028 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55bd595180a0 <col:37, col:63> col:57 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x55bd59518288 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55bd595181f8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55bd59518438 <line:163:5, col:65> col:43 operator[] 'String &(Vector::size_type)'
| |-ParmVarDecl 0x55bd59518340 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55bd595184f0 <col:20>
| `-OptimizeNoneAttr 0x55bd59518548 <col:30>
|-CXXMethodDecl 0x55bd59518668 <line:164:5, col:73> col:49 operator[] 'const String &(Vector::size_type) const'
| |-ParmVarDecl 0x55bd59518570 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55bd59518720 <col:20>
| `-OptimizeNoneAttr 0x55bd59518778 <col:30>
|-CXXMethodDecl 0x55bd59518830 <line:165:5, col:29> col:15 at 'String &(Vector::size_type)' inline
| `-ParmVarDecl 0x55bd595187a0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55bd59518978 <line:166:5, col:37> col:21 at 'const String &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55bd595188e8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55bd59518aa8 <line:167:5, col:21> col:15 front 'String &()' inline
|-CXXMethodDecl 0x55bd59518ba8 <line:168:5, col:29> col:21 front 'const String &() const' inline
|-CXXMethodDecl 0x55bd59518c78 <line:169:5, col:20> col:15 back 'String &()' inline
|-CXXMethodDecl 0x55bd59518d48 <line:170:5, col:28> col:21 back 'const String &() const' inline
|-CXXMethodDecl 0x55bd59518e88 <line:172:5, col:39> col:15 unchecked_at 'String &(Vector::size_type)' inline
| `-ParmVarDecl 0x55bd59518df8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55bd59518fd0 <line:173:5, col:47> col:21 unchecked_at 'const String &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55bd59518f40 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55bd59519118 <line:174:5, col:59> col:15 at_u 'String &(Vector::size_type)' inline
| |-ParmVarDecl 0x55bd59519088 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55bd595191d0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55bd595192d0 <line:175:5, col:71> col:21 at_u 'const String &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55bd59519240 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55bd59519388 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55bd59519448 <line:177:5, col:20> col:15 data 'String *()' inline
|-CXXMethodDecl 0x55bd59519548 <line:178:5, col:28> col:21 data 'const String *() const' inline
|-CXXMethodDecl 0x55bd595196c8 <line:180:5, col:48> col:17 used push_back 'void (Vector<String>::value_argument_type)' inline
| `-ParmVarDecl 0x55bd59519608 <col:27, col:47> col:47 v 'Vector<String>::value_argument_type':'const String &'
|-FunctionTemplateDecl 0x55bd59519e88 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55bd59519780 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<String>':'fast_argument<String, true>'
| `-CXXMethodDecl 0x55bd59519de8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (String &&)' inline
|   `-ParmVarDecl 0x55bd59519ce8 <col:58, col:62> col:62 v 'String &&'
|-CXXMethodDecl 0x55bd59519f68 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55bd5951a0b8 <line:186:5, col:49> col:17 push_front 'void (Vector<String>::value_argument_type)' inline
| `-ParmVarDecl 0x55bd5951a028 <col:28, col:48> col:48 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x55bd5951a170 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55bd5951a3b8 <line:189:5, col:62> col:21 insert 'Vector<String>::iterator (Vector<String>::iterator, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x55bd5951a230 <col:28, col:37> col:37 it 'Vector<String>::iterator':'String *'
| `-ParmVarDecl 0x55bd5951a2a8 <col:41, col:61> col:61 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x55bd5951a548 <line:190:5, col:38> col:21 erase 'Vector<String>::iterator (Vector<String>::iterator)' inline
| `-ParmVarDecl 0x55bd5951a488 <col:27, col:36> col:36 it 'Vector<String>::iterator':'String *'
|-CXXMethodDecl 0x55bd5951a758 <line:191:5, col:49> col:21 erase 'Vector<String>::iterator (Vector<String>::iterator, Vector<String>::iterator)' inline
| |-ParmVarDecl 0x55bd5951a610 <col:27, col:36> col:36 a 'Vector<String>::iterator':'String *'
| `-ParmVarDecl 0x55bd5951a688 <col:39, col:48> col:48 b 'Vector<String>::iterator':'String *'
|-CXXMethodDecl 0x55bd5951a818 <line:193:5, col:23> col:17 used clear 'void ()' inline
|-CXXMethodDecl 0x55bd5951aa88 <line:195:5, col:34> col:17 swap 'void (Vector<String> &)' inline
| `-ParmVarDecl 0x55bd5951a980 <col:22, col:33> col:33 x 'Vector<String> &'
`-CXXDestructorDecl 0x55bd5951ab58 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit used ~Vector 'void () noexcept' inline default
  `-CompoundStmt 0x55bd595c9a08 <col:29>

Layout: <CGRecordLayout
  LLVMType:%class.Vector.0 = type { %class.vector_memory.1 }
  NonVirtualBaseLLVMType:%class.Vector.0 = type { %class.vector_memory.1 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55bd59555bd0 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<4>'
|-CXXRecordDecl 0x55bd59555da8 prev 0x55bd59555bd0 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55bd59555e38 <col:46, col:52> col:46 public
|-TypedefDecl 0x55bd59555e60 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55bd58f62370 'int'
|-TypedefDecl 0x55bd59557a30 <line:13:5, col:31> col:31 type 'typename sized_array_memory<4>::type':'char_array<4>'
| `-ElaboratedType 0x55bd595579e0 'typename sized_array_memory<4>::type' sugar
|   `-TypedefType 0x55bd59556310 'sized_array_memory<4>::type' sugar
|     |-Typedef 0x55bd59556210 'type'
|     `-TemplateSpecializationType 0x55bd595561a0 'char_array<4UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x55bd59556080 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 4
|       |   `-SubstNonTypeTemplateParmExpr 0x55bd59556060 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x55bd59556040 <col:24> 'unsigned long' 4
|       `-RecordType 0x55bd59556180 'char_array<4>'
|         `-ClassTemplateSpecialization 0x55bd595560a0 'char_array'
|-TypedefDecl 0x55bd59557ae8 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<4> >::type *'
| `-PointerType 0x55bd59557ab0 'vector_memory<sized_array_memory<4> >::type *'
|   `-TypedefType 0x55bd59557a90 'vector_memory<sized_array_memory<4> >::type' sugar
|     |-Typedef 0x55bd59557a30 'type'
|     `-ElaboratedType 0x55bd595579e0 'typename sized_array_memory<4>::type' sugar
|       `-TypedefType 0x55bd59556310 'sized_array_memory<4>::type' sugar
|         |-Typedef 0x55bd59556210 'type'
|         `-TemplateSpecializationType 0x55bd595561a0 'char_array<4UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x55bd59556080 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 4
|           |   `-SubstNonTypeTemplateParmExpr 0x55bd59556060 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x55bd59556040 <col:24> 'unsigned long' 4
|           `-RecordType 0x55bd59556180 'char_array<4>'
|             `-ClassTemplateSpecialization 0x55bd595560a0 'char_array'
|-CXXMethodDecl 0x55bd595618b8 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<4> >::type *) const' inline
| `-ParmVarDecl 0x55bd59557b78 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXConstructorDecl 0x55bd595619a8 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55bd59561a88 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x55bd59561a88
|-CXXMethodDecl 0x55bd59561d58 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<4> > &)'
| `-ParmVarDecl 0x55bd59561c60 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<4> > &'
|-CXXMethodDecl 0x55bd59561f98 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x55bd59561e10 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55bd59561e88 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55bd59562168 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x55bd59562058 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55bd595620d0 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55bd595622c8 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<4> >::iterator ()'
|-CXXMethodDecl 0x55bd59562398 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<4> >::iterator ()'
|-CXXMethodDecl 0x55bd595625e8 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<4> >::iterator (vector_memory<sized_array_memory<4> >::iterator, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x55bd59562458 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<4> >::iterator':'vector_memory<sized_array_memory<4> >::type *'
| `-ParmVarDecl 0x55bd595624d0 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55bd59562848 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<4> >::iterator (vector_memory<sized_array_memory<4> >::iterator, vector_memory<sized_array_memory<4> >::iterator)'
| |-ParmVarDecl 0x55bd595626b8 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<4> >::iterator':'vector_memory<sized_array_memory<4> >::type *'
| `-ParmVarDecl 0x55bd59562730 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<4> >::iterator':'vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55bd59562a08 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<4> >::type *)' inline
| `-ParmVarDecl 0x55bd59562918 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55bd59562bc8 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<4> >::type *)' inline
| `-ParmVarDecl 0x55bd59562ad0 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55bd59562c80 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55bd59562d30 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55bd59562f68 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x55bd59562de0 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55bd59562e58 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55bd59563208 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<4> > &)'
| `-ParmVarDecl 0x55bd59563110 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<4> > &'
|-FieldDecl 0x55bd595632d0 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<4> >::type *'
|-FieldDecl 0x55bd59563320 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55bd59563370 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.3 = type { %struct.char_array.4*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.3 = type { %struct.char_array.4*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55bd596787c0 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'unsigned int'
|-CXXRecordDecl 0x55bd596789c8 prev 0x55bd596787c0 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55bd596799e0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<unsigned int>::type':'sized_array_memory<4>'
| `-ElaboratedType 0x55bd59679990 'typename array_memory<unsigned int>::type' sugar
|   `-TypedefType 0x55bd59679970 'conditional<true, sized_array_memory<4>, typed_array_memory<unsigned int> >::type' sugar
|     |-Typedef 0x55bd59679820 'type'
|     `-SubstTemplateTypeParmType 0x55bd595557a0 'sized_array_memory<4>' sugar
|       |-TemplateTypeParmType 0x55bd5922c210 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55bd5922c1b8 'T'
|       `-RecordType 0x55bd595552f0 'sized_array_memory<4>'
|         `-ClassTemplateSpecialization 0x55bd59555208 'sized_array_memory'
|-FieldDecl 0x55bd59679ae0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<unsigned int>::array_memory_type>':'vector_memory<sized_array_memory<4> >' mutable
|-AccessSpecDecl 0x55bd59679b30 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55bd59679b68 <line:118:5, col:15> col:15 value_type 'unsigned int':'unsigned int'
| `-SubstTemplateTypeParmType 0x55bd59678a60 'unsigned int' sugar
|   |-TemplateTypeParmType 0x55bd59264120 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55bd592640c8 'T'
|   `-BuiltinType 0x55bd58f62410 'unsigned int'
|-TypedefDecl 0x55bd59679bf8 <line:119:5, col:16> col:16 reference 'unsigned int &'
| `-LValueReferenceType 0x55bd59679bc0 'unsigned int &'
|   `-SubstTemplateTypeParmType 0x55bd59678a60 'unsigned int' sugar
|     |-TemplateTypeParmType 0x55bd59264120 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55bd592640c8 'T'
|     `-BuiltinType 0x55bd58f62410 'unsigned int'
|-TypedefDecl 0x55bd59679cb8 <line:120:5, col:22> col:22 const_reference 'const unsigned int &'
| `-LValueReferenceType 0x55bd59679c80 'const unsigned int &'
|   `-QualType 0x55bd59678a61 'const unsigned int' const
|     `-SubstTemplateTypeParmType 0x55bd59678a60 'unsigned int' sugar
|       |-TemplateTypeParmType 0x55bd59264120 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55bd592640c8 'T'
|       `-BuiltinType 0x55bd58f62410 'unsigned int'
|-TypedefDecl 0x55bd59679d48 <line:121:5, col:16> col:16 pointer 'unsigned int *'
| `-PointerType 0x55bd59679d10 'unsigned int *'
|   `-SubstTemplateTypeParmType 0x55bd59678a60 'unsigned int' sugar
|     |-TemplateTypeParmType 0x55bd59264120 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55bd592640c8 'T'
|     `-BuiltinType 0x55bd58f62410 'unsigned int'
|-TypedefDecl 0x55bd59679dd8 <line:122:5, col:22> col:22 const_pointer 'const unsigned int *'
| `-PointerType 0x55bd59679da0 'const unsigned int *'
|   `-QualType 0x55bd59678a61 'const unsigned int' const
|     `-SubstTemplateTypeParmType 0x55bd59678a60 'unsigned int' sugar
|       |-TemplateTypeParmType 0x55bd59264120 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55bd592640c8 'T'
|       `-BuiltinType 0x55bd58f62410 'unsigned int'
|-TypedefDecl 0x55bd5967a9c0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<unsigned int>::type':'unsigned int'
| `-ElaboratedType 0x55bd5967a970 'typename fast_argument<unsigned int>::type' sugar
|   `-TypedefType 0x55bd5967a950 'fast_argument<unsigned int, false>::type' sugar
|     |-Typedef 0x55bd5967a8e0 'type'
|     `-SubstTemplateTypeParmType 0x55bd5967a6a0 'unsigned int' sugar
|       |-TemplateTypeParmType 0x55bd59237010 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55bd59236fc0 'T'
|       `-BuiltinType 0x55bd58f62410 'unsigned int'
|-TypedefDecl 0x55bd5967aa28 <line:126:5, col:22> col:22 const_access_type 'const unsigned int &'
| `-LValueReferenceType 0x55bd59679c80 'const unsigned int &'
|   `-QualType 0x55bd59678a61 'const unsigned int' const
|     `-SubstTemplateTypeParmType 0x55bd59678a60 'unsigned int' sugar
|       |-TemplateTypeParmType 0x55bd59264120 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55bd592640c8 'T'
|       `-BuiltinType 0x55bd58f62410 'unsigned int'
|-TypedefDecl 0x55bd5967aa80 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55bd58f62370 'int'
|-TypedefDecl 0x55bd5967aae8 <line:130:5, col:16> col:16 iterator 'unsigned int *'
| `-PointerType 0x55bd59679d10 'unsigned int *'
|   `-SubstTemplateTypeParmType 0x55bd59678a60 'unsigned int' sugar
|     |-TemplateTypeParmType 0x55bd59264120 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55bd592640c8 'T'
|     `-BuiltinType 0x55bd58f62410 'unsigned int'
|-TypedefDecl 0x55bd5967ab50 <line:131:5, col:22> col:22 const_iterator 'const unsigned int *'
| `-PointerType 0x55bd59679da0 'const unsigned int *'
|   `-QualType 0x55bd59678a61 'const unsigned int' const
|     `-SubstTemplateTypeParmType 0x55bd59678a60 'unsigned int' sugar
|       |-TemplateTypeParmType 0x55bd59264120 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55bd592640c8 'T'
|       `-BuiltinType 0x55bd58f62410 'unsigned int'
|-EnumDecl 0x55bd5967aba8 <line:134:5> col:5
| `-EnumConstantDecl 0x55bd5967aca0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<unsigned int>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55bd5967ac80 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55bd592657a8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55bd59265780 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55bd59265760 <col:40> 'int' 1
|-CXXConstructorDecl 0x55bd5967ad28 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55bd5967af78 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<unsigned int>::value_argument_type)' inline
| |-ParmVarDecl 0x55bd5967ade0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55bd5967ae80 <col:41, col:61> col:61 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXConstructorDecl 0x55bd5967ce08 <line:139:5, col:37> col:12 Vector 'void (const Vector<unsigned int> &)' inline
| `-ParmVarDecl 0x55bd5967ccf0 <col:19, col:36> col:36 x 'const Vector<unsigned int> &'
|-CXXConstructorDecl 0x55bd5967d0c8 <line:141:5, col:32> col:12 Vector 'void (Vector<unsigned int> &&)' inline
| `-ParmVarDecl 0x55bd5967cfb0 <col:19, col:31> col:31 x 'Vector<unsigned int> &&'
|-CXXMethodDecl 0x55bd5967d410 <line:144:5, col:51> col:23 operator= 'Vector<unsigned int> &(const Vector<unsigned int> &)' inline
| `-ParmVarDecl 0x55bd5967d2f0 <col:33, col:50> col:50 x 'const Vector<unsigned int> &'
|-CXXMethodDecl 0x55bd5967d720 <line:146:5, col:46> col:23 operator= 'Vector<unsigned int> &(Vector<unsigned int> &&)' inline
| `-ParmVarDecl 0x55bd5967d600 <col:33, col:45> col:45 x 'Vector<unsigned int> &&'
|-CXXMethodDecl 0x55bd5967da10 <line:148:5, col:70> col:23 assign 'Vector<unsigned int> &(Vector::size_type, Vector<unsigned int>::value_argument_type)' inline
| |-ParmVarDecl 0x55bd5967d858 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55bd5967d8d0 <col:43, col:69> col:63 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXMethodDecl 0x55bd5967db38 <line:150:5, col:55> col:49 begin 'Vector<unsigned int>::iterator ()'
| |-NoInlineAttr 0x55bd5967dc18 <col:20> Inherited
| `-OptimizeNoneAttr 0x55bd5967dc70 <col:30> Inherited
|-CXXMethodDecl 0x55bd5967dcb8 <line:151:5, col:53> col:49 end 'Vector<unsigned int>::iterator ()'
| |-NoInlineAttr 0x55bd5967dd68 <col:20> Inherited
| `-OptimizeNoneAttr 0x55bd5967ddc0 <col:30> Inherited
|-CXXMethodDecl 0x55bd5967de58 <line:152:5, col:63> col:55 begin 'Vector<unsigned int>::const_iterator () const'
| |-NoInlineAttr 0x55bd5967df08 <col:20> Inherited
| `-OptimizeNoneAttr 0x55bd5967df60 <col:30> Inherited
|-CXXMethodDecl 0x55bd5967dfa8 <line:153:5, col:61> col:55 end 'Vector<unsigned int>::const_iterator () const'
| |-NoInlineAttr 0x55bd5967e058 <col:20> Inherited
| `-OptimizeNoneAttr 0x55bd5967e0b0 <col:30> Inherited
|-CXXMethodDecl 0x55bd5967e0f8 <line:154:5, col:64> col:55 cbegin 'Vector<unsigned int>::const_iterator () const'
| |-NoInlineAttr 0x55bd5967e1a8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55bd5967e200 <col:30> Inherited
|-CXXMethodDecl 0x55bd5967e248 <line:155:5, col:62> col:55 cend 'Vector<unsigned int>::const_iterator () const'
| |-NoInlineAttr 0x55bd5967e2f8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55bd5967e350 <col:30> Inherited
|-CXXMethodDecl 0x55bd5967e378 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55bd5967e428 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55bd5967e4d8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55bd5967e698 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<unsigned int>::value_argument_type)' inline
| |-ParmVarDecl 0x55bd5967e588 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55bd5967e600 <col:37, col:63> col:57 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXMethodDecl 0x55bd5967e7e8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55bd5967e758 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55bd5967e998 <line:163:5, col:65> col:43 operator[] 'unsigned int &(Vector::size_type)'
| |-ParmVarDecl 0x55bd5967e8a0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55bd5967ea50 <col:20>
| `-OptimizeNoneAttr 0x55bd5967eaa8 <col:30>
|-CXXMethodDecl 0x55bd5967ebc8 <line:164:5, col:73> col:49 operator[] 'const unsigned int &(Vector::size_type) const'
| |-ParmVarDecl 0x55bd5967ead0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55bd5967ec80 <col:20>
| `-OptimizeNoneAttr 0x55bd5967ecd8 <col:30>
|-CXXMethodDecl 0x55bd5967ed90 <line:165:5, col:29> col:15 at 'unsigned int &(Vector::size_type)' inline
| `-ParmVarDecl 0x55bd5967ed00 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55bd5967eed8 <line:166:5, col:37> col:21 at 'const unsigned int &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55bd5967ee48 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55bd5967f008 <line:167:5, col:21> col:15 front 'unsigned int &()' inline
|-CXXMethodDecl 0x55bd5967f138 <line:168:5, col:29> col:21 front 'const unsigned int &() const' inline
|-CXXMethodDecl 0x55bd5967f208 <line:169:5, col:20> col:15 back 'unsigned int &()' inline
|-CXXMethodDecl 0x55bd5967f2d8 <line:170:5, col:28> col:21 back 'const unsigned int &() const' inline
|-CXXMethodDecl 0x55bd5967f418 <line:172:5, col:39> col:15 unchecked_at 'unsigned int &(Vector::size_type)' inline
| `-ParmVarDecl 0x55bd5967f388 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55bd5967f560 <line:173:5, col:47> col:21 unchecked_at 'const unsigned int &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55bd5967f4d0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55bd5967f6a8 <line:174:5, col:59> col:15 at_u 'unsigned int &(Vector::size_type)' inline
| |-ParmVarDecl 0x55bd5967f618 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55bd5967f760 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55bd5967f860 <line:175:5, col:71> col:21 at_u 'const unsigned int &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55bd5967f7d0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55bd5967f918 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55bd5967f9d8 <line:177:5, col:20> col:15 data 'unsigned int *()' inline
|-CXXMethodDecl 0x55bd5967fad8 <line:178:5, col:28> col:21 data 'const unsigned int *() const' inline
|-CXXMethodDecl 0x55bd5967fc58 <line:180:5, col:48> col:17 push_back 'void (Vector<unsigned int>::value_argument_type)' inline
| `-ParmVarDecl 0x55bd5967fb98 <col:27, col:47> col:47 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-FunctionTemplateDecl 0x55bd59680418 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55bd5967fd10 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<unsigned int>':'fast_argument<unsigned int, false>'
| `-CXXMethodDecl 0x55bd59680378 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (unsigned int &&)' inline
|   `-ParmVarDecl 0x55bd59680278 <col:58, col:62> col:62 v 'unsigned int &&'
|-CXXMethodDecl 0x55bd596804f8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55bd59680648 <line:186:5, col:49> col:17 push_front 'void (Vector<unsigned int>::value_argument_type)' inline
| `-ParmVarDecl 0x55bd596805b8 <col:28, col:48> col:48 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXMethodDecl 0x55bd59680700 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55bd59680948 <line:189:5, col:62> col:21 insert 'Vector<unsigned int>::iterator (Vector<unsigned int>::iterator, Vector<unsigned int>::value_argument_type)' inline
| |-ParmVarDecl 0x55bd596807c0 <col:28, col:37> col:37 it 'Vector<unsigned int>::iterator':'unsigned int *'
| `-ParmVarDecl 0x55bd59680838 <col:41, col:61> col:61 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXMethodDecl 0x55bd59680b08 <line:190:5, col:38> col:21 erase 'Vector<unsigned int>::iterator (Vector<unsigned int>::iterator)' inline
| `-ParmVarDecl 0x55bd59680a18 <col:27, col:36> col:36 it 'Vector<unsigned int>::iterator':'unsigned int *'
|-CXXMethodDecl 0x55bd59680d58 <line:191:5, col:49> col:21 erase 'Vector<unsigned int>::iterator (Vector<unsigned int>::iterator, Vector<unsigned int>::iterator)' inline
| |-ParmVarDecl 0x55bd59680bd0 <col:27, col:36> col:36 a 'Vector<unsigned int>::iterator':'unsigned int *'
| `-ParmVarDecl 0x55bd59680c48 <col:39, col:48> col:48 b 'Vector<unsigned int>::iterator':'unsigned int *'
|-CXXMethodDecl 0x55bd59680e18 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55bd59681078 <line:195:5, col:34> col:17 swap 'void (Vector<unsigned int> &)' inline
| `-ParmVarDecl 0x55bd59680f80 <col:22, col:33> col:33 x 'Vector<unsigned int> &'
`-CXXDestructorDecl 0x55bd59681148 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55bd59681148

Layout: <CGRecordLayout
  LLVMType:%class.Vector.2 = type { %class.vector_memory.3 }
  NonVirtualBaseLLVMType:%class.Vector.2 = type { %class.vector_memory.3 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55bd595545d8 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'int'
|-CXXRecordDecl 0x55bd595547e8 prev 0x55bd595545d8 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55bd59555b40 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<int>::type':'sized_array_memory<4>'
| `-ElaboratedType 0x55bd59555af0 'typename array_memory<int>::type' sugar
|   `-TypedefType 0x55bd59555ad0 'conditional<true, sized_array_memory<4>, typed_array_memory<int> >::type' sugar
|     |-Typedef 0x55bd59555980 'type'
|     `-SubstTemplateTypeParmType 0x55bd595557a0 'sized_array_memory<4>' sugar
|       |-TemplateTypeParmType 0x55bd5922c210 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55bd5922c1b8 'T'
|       `-RecordType 0x55bd595552f0 'sized_array_memory<4>'
|         `-ClassTemplateSpecialization 0x55bd59555208 'sized_array_memory'
|-FieldDecl 0x55bd595633c0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<int>::array_memory_type>':'vector_memory<sized_array_memory<4> >' mutable
|-AccessSpecDecl 0x55bd59563410 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55bd59563448 <line:118:5, col:15> col:15 value_type 'int':'int'
| `-SubstTemplateTypeParmType 0x55bd59554880 'int' sugar
|   |-TemplateTypeParmType 0x55bd59264120 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55bd592640c8 'T'
|   `-BuiltinType 0x55bd58f62370 'int'
|-TypedefDecl 0x55bd595634d8 <line:119:5, col:16> col:16 reference 'int &'
| `-LValueReferenceType 0x55bd595634a0 'int &'
|   `-SubstTemplateTypeParmType 0x55bd59554880 'int' sugar
|     |-TemplateTypeParmType 0x55bd59264120 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55bd592640c8 'T'
|     `-BuiltinType 0x55bd58f62370 'int'
|-TypedefDecl 0x55bd59563598 <line:120:5, col:22> col:22 const_reference 'const int &'
| `-LValueReferenceType 0x55bd59563560 'const int &'
|   `-QualType 0x55bd59554881 'const int' const
|     `-SubstTemplateTypeParmType 0x55bd59554880 'int' sugar
|       |-TemplateTypeParmType 0x55bd59264120 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55bd592640c8 'T'
|       `-BuiltinType 0x55bd58f62370 'int'
|-TypedefDecl 0x55bd59563628 <line:121:5, col:16> col:16 pointer 'int *'
| `-PointerType 0x55bd595635f0 'int *'
|   `-SubstTemplateTypeParmType 0x55bd59554880 'int' sugar
|     |-TemplateTypeParmType 0x55bd59264120 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55bd592640c8 'T'
|     `-BuiltinType 0x55bd58f62370 'int'
|-TypedefDecl 0x55bd595636b8 <line:122:5, col:22> col:22 const_pointer 'const int *'
| `-PointerType 0x55bd59563680 'const int *'
|   `-QualType 0x55bd59554881 'const int' const
|     `-SubstTemplateTypeParmType 0x55bd59554880 'int' sugar
|       |-TemplateTypeParmType 0x55bd59264120 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55bd592640c8 'T'
|       `-BuiltinType 0x55bd58f62370 'int'
|-TypedefDecl 0x55bd595642a0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<int>::type':'int'
| `-ElaboratedType 0x55bd59564250 'typename fast_argument<int>::type' sugar
|   `-TypedefType 0x55bd59564230 'fast_argument<int, false>::type' sugar
|     |-Typedef 0x55bd595641c0 'type'
|     `-SubstTemplateTypeParmType 0x55bd59563f80 'int' sugar
|       |-TemplateTypeParmType 0x55bd59237010 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55bd59236fc0 'T'
|       `-BuiltinType 0x55bd58f62370 'int'
|-TypedefDecl 0x55bd59564308 <line:126:5, col:22> col:22 const_access_type 'const int &'
| `-LValueReferenceType 0x55bd59563560 'const int &'
|   `-QualType 0x55bd59554881 'const int' const
|     `-SubstTemplateTypeParmType 0x55bd59554880 'int' sugar
|       |-TemplateTypeParmType 0x55bd59264120 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55bd592640c8 'T'
|       `-BuiltinType 0x55bd58f62370 'int'
|-TypedefDecl 0x55bd59564360 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55bd58f62370 'int'
|-TypedefDecl 0x55bd595643c8 <line:130:5, col:16> col:16 iterator 'int *'
| `-PointerType 0x55bd595635f0 'int *'
|   `-SubstTemplateTypeParmType 0x55bd59554880 'int' sugar
|     |-TemplateTypeParmType 0x55bd59264120 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55bd592640c8 'T'
|     `-BuiltinType 0x55bd58f62370 'int'
|-TypedefDecl 0x55bd59564430 <line:131:5, col:22> col:22 const_iterator 'const int *'
| `-PointerType 0x55bd59563680 'const int *'
|   `-QualType 0x55bd59554881 'const int' const
|     `-SubstTemplateTypeParmType 0x55bd59554880 'int' sugar
|       |-TemplateTypeParmType 0x55bd59264120 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55bd592640c8 'T'
|       `-BuiltinType 0x55bd58f62370 'int'
|-EnumDecl 0x55bd59564488 <line:134:5> col:5
| `-EnumConstantDecl 0x55bd59564580 <col:12, col:40> col:12 RESERVE_GROW 'Vector<int>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55bd59564560 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55bd592657a8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55bd59265780 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55bd59265760 <col:40> 'int' 1
|-CXXConstructorDecl 0x55bd59564608 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55bd59564858 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x55bd595646c0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55bd59564760 <col:41, col:61> col:61 v 'Vector<int>::value_argument_type':'int'
|-CXXConstructorDecl 0x55bd59564b18 <line:139:5, col:37> col:12 Vector 'void (const Vector<int> &)' inline
| `-ParmVarDecl 0x55bd59564a00 <col:19, col:36> col:36 x 'const Vector<int> &'
|-CXXConstructorDecl 0x55bd59564dd8 <line:141:5, col:32> col:12 Vector 'void (Vector<int> &&)' inline
| `-ParmVarDecl 0x55bd59564cc0 <col:19, col:31> col:31 x 'Vector<int> &&'
|-CXXMethodDecl 0x55bd59565120 <line:144:5, col:51> col:23 operator= 'Vector<int> &(const Vector<int> &)' inline
| `-ParmVarDecl 0x55bd59565000 <col:33, col:50> col:50 x 'const Vector<int> &'
|-CXXMethodDecl 0x55bd59565430 <line:146:5, col:46> col:23 operator= 'Vector<int> &(Vector<int> &&)' inline
| `-ParmVarDecl 0x55bd59565310 <col:33, col:45> col:45 x 'Vector<int> &&'
|-CXXMethodDecl 0x55bd59565720 <line:148:5, col:70> col:23 assign 'Vector<int> &(Vector::size_type, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x55bd59565568 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55bd595655e0 <col:43, col:69> col:63 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x55bd59565848 <line:150:5, col:55> col:49 begin 'Vector<int>::iterator ()'
| |-NoInlineAttr 0x55bd59565928 <col:20> Inherited
| `-OptimizeNoneAttr 0x55bd59565980 <col:30> Inherited
|-CXXMethodDecl 0x55bd595659c8 <line:151:5, col:53> col:49 end 'Vector<int>::iterator ()'
| |-NoInlineAttr 0x55bd59565a78 <col:20> Inherited
| `-OptimizeNoneAttr 0x55bd59565ad0 <col:30> Inherited
|-CXXMethodDecl 0x55bd59565b98 <line:152:5, col:63> col:55 begin 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x55bd59565c48 <col:20> Inherited
| `-OptimizeNoneAttr 0x55bd59565ca0 <col:30> Inherited
|-CXXMethodDecl 0x55bd59565ce8 <line:153:5, col:61> col:55 end 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x55bd59565d98 <col:20> Inherited
| `-OptimizeNoneAttr 0x55bd59565df0 <col:30> Inherited
|-CXXMethodDecl 0x55bd59565e38 <line:154:5, col:64> col:55 cbegin 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x55bd59565ee8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55bd59565f40 <col:30> Inherited
|-CXXMethodDecl 0x55bd59565f88 <line:155:5, col:62> col:55 cend 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x55bd59566038 <col:20> Inherited
| `-OptimizeNoneAttr 0x55bd59566090 <col:30> Inherited
|-CXXMethodDecl 0x55bd595660b8 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55bd59566168 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55bd59566218 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55bd595663d8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x55bd595662c8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55bd59566340 <col:37, col:63> col:57 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x55bd59566528 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55bd59566498 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55bd595666d8 <line:163:5, col:65> col:43 used operator[] 'int &(Vector::size_type)'
| |-ParmVarDecl 0x55bd595665e0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55bd59566790 <col:20>
| `-OptimizeNoneAttr 0x55bd595667e8 <col:30>
|-CXXMethodDecl 0x55bd59566908 <line:164:5, col:73> col:49 operator[] 'const int &(Vector::size_type) const'
| |-ParmVarDecl 0x55bd59566810 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55bd595669c0 <col:20>
| `-OptimizeNoneAttr 0x55bd59566a18 <col:30>
|-CXXMethodDecl 0x55bd59566ad0 <line:165:5, col:29> col:15 at 'int &(Vector::size_type)' inline
| `-ParmVarDecl 0x55bd59566a40 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55bd59566c18 <line:166:5, col:37> col:21 at 'const int &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55bd59566b88 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55bd59566d48 <line:167:5, col:21> col:15 front 'int &()' inline
|-CXXMethodDecl 0x55bd59566e78 <line:168:5, col:29> col:21 front 'const int &() const' inline
|-CXXMethodDecl 0x55bd59566f48 <line:169:5, col:20> col:15 back 'int &()' inline
|-CXXMethodDecl 0x55bd59567018 <line:170:5, col:28> col:21 used back 'const int &() const' inline
|-CXXMethodDecl 0x55bd59567158 <line:172:5, col:39> col:15 unchecked_at 'int &(Vector::size_type)' inline
| `-ParmVarDecl 0x55bd595670c8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55bd595672a0 <line:173:5, col:47> col:21 unchecked_at 'const int &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55bd59567210 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55bd595673e8 <line:174:5, col:59> col:15 at_u 'int &(Vector::size_type)' inline
| |-ParmVarDecl 0x55bd59567358 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55bd595674a0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55bd595675a0 <line:175:5, col:71> col:21 at_u 'const int &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55bd59567510 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55bd59567658 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55bd59567718 <line:177:5, col:20> col:15 data 'int *()' inline
|-CXXMethodDecl 0x55bd59567818 <line:178:5, col:28> col:21 data 'const int *() const' inline
|-CXXMethodDecl 0x55bd59567998 <line:180:5, col:48> col:17 push_back 'void (Vector<int>::value_argument_type)' inline
| `-ParmVarDecl 0x55bd595678d8 <col:27, col:47> col:47 v 'Vector<int>::value_argument_type':'int'
|-FunctionTemplateDecl 0x55bd59568158 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55bd59567a50 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<int>':'fast_argument<int, false>'
| `-CXXMethodDecl 0x55bd595680b8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (int &&)' inline
|   `-ParmVarDecl 0x55bd59567fb8 <col:58, col:62> col:62 v 'int &&'
|-CXXMethodDecl 0x55bd59568238 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55bd59568388 <line:186:5, col:49> col:17 push_front 'void (Vector<int>::value_argument_type)' inline
| `-ParmVarDecl 0x55bd595682f8 <col:28, col:48> col:48 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x55bd59568440 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55bd59568688 <line:189:5, col:62> col:21 insert 'Vector<int>::iterator (Vector<int>::iterator, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x55bd59568500 <col:28, col:37> col:37 it 'Vector<int>::iterator':'int *'
| `-ParmVarDecl 0x55bd59568578 <col:41, col:61> col:61 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x55bd59568848 <line:190:5, col:38> col:21 erase 'Vector<int>::iterator (Vector<int>::iterator)' inline
| `-ParmVarDecl 0x55bd59568758 <col:27, col:36> col:36 it 'Vector<int>::iterator':'int *'
|-CXXMethodDecl 0x55bd59568a98 <line:191:5, col:49> col:21 erase 'Vector<int>::iterator (Vector<int>::iterator, Vector<int>::iterator)' inline
| |-ParmVarDecl 0x55bd59568910 <col:27, col:36> col:36 a 'Vector<int>::iterator':'int *'
| `-ParmVarDecl 0x55bd59568988 <col:39, col:48> col:48 b 'Vector<int>::iterator':'int *'
|-CXXMethodDecl 0x55bd59568b58 <line:193:5, col:23> col:17 used clear 'void ()' inline
|-CXXMethodDecl 0x55bd59568db8 <line:195:5, col:34> col:17 swap 'void (Vector<int> &)' inline
| `-ParmVarDecl 0x55bd59568cc0 <col:22, col:33> col:33 x 'Vector<int> &'
`-CXXDestructorDecl 0x55bd59568e88 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55bd59568e88

Layout: <CGRecordLayout
  LLVMType:%class.Vector.5 = type { %class.vector_memory.3 }
  NonVirtualBaseLLVMType:%class.Vector.5 = type { %class.vector_memory.3 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55bd59681390 <../dummy_inc/click/router.hh:247:5, line:250:5> line:247:12 referenced struct element_landmark_t definition
|-DefinitionData aggregate standard_layout has_mutable_fields
| |-DefaultConstructor exists non_trivial needs_implicit
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x55bd596814a8 <col:5, col:12> col:12 implicit struct element_landmark_t
|-FieldDecl 0x55bd59681548 <line:248:9, col:18> col:18 first_landmarkid 'uint32_t':'unsigned int'
|-FieldDecl 0x55bd596815a8 <line:249:9, col:16> col:16 filename 'String'
|-CXXConstructorDecl 0x55bd59681640 <line:247:12> col:12 implicit element_landmark_t 'void (const Router::element_landmark_t &)' inline default noexcept-unevaluated 0x55bd59681640
| `-ParmVarDecl 0x55bd59681758 <col:12> col:12 'const Router::element_landmark_t &'
|-CXXConstructorDecl 0x55bd596817f8 <col:12> col:12 implicit element_landmark_t 'void (Router::element_landmark_t &&)' inline default noexcept-unevaluated 0x55bd596817f8
| `-ParmVarDecl 0x55bd59681908 <col:12> col:12 'Router::element_landmark_t &&'
|-CXXMethodDecl 0x55bd596819a8 <col:12> col:12 implicit operator= 'Router::element_landmark_t &(const Router::element_landmark_t &)' inline default noexcept-unevaluated 0x55bd596819a8
| `-ParmVarDecl 0x55bd59681ab8 <col:12> col:12 'const Router::element_landmark_t &'
|-CXXMethodDecl 0x55bd59681b28 <col:12> col:12 implicit operator= 'Router::element_landmark_t &(Router::element_landmark_t &&)' inline default noexcept-unevaluated 0x55bd59681b28
| `-ParmVarDecl 0x55bd59681c38 <col:12> col:12 'Router::element_landmark_t &&'
`-CXXDestructorDecl 0x55bd59681cc0 <col:12> col:12 implicit ~element_landmark_t 'void ()' inline default noexcept-unevaluated 0x55bd59681cc0

Layout: <CGRecordLayout
  LLVMType:%"struct.Router::element_landmark_t" = type { i32, %class.String }
  NonVirtualBaseLLVMType:%"struct.Router::element_landmark_t" = type { i32, %class.String }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55bd59683250 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'typed_array_memory<Router::element_landmark_t>'
|-CXXRecordDecl 0x55bd59683428 prev 0x55bd59683250 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55bd596834b8 <col:46, col:52> col:46 public
|-TypedefDecl 0x55bd596834e0 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55bd58f62370 'int'
|-TypedefDecl 0x55bd59686cf0 <line:13:5, col:31> col:31 type 'typename typed_array_memory<element_landmark_t>::type':'Router::element_landmark_t'
| `-ElaboratedType 0x55bd59686ca0 'typename typed_array_memory<element_landmark_t>::type' sugar
|   `-TypedefType 0x55bd59686c80 'typed_array_memory<Router::element_landmark_t>::type' sugar
|     |-Typedef 0x55bd596836f8 'type'
|     `-SubstTemplateTypeParmType 0x55bd596836c0 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x55bd59256e00 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55bd59256db0 'T'
|       `-RecordType 0x55bd59681420 'Router::element_landmark_t'
|         `-CXXRecord 0x55bd59681390 'element_landmark_t'
|-TypedefDecl 0x55bd59686da8 <line:14:5, col:19> col:19 iterator 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
| `-PointerType 0x55bd59686d70 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|   `-TypedefType 0x55bd59686d50 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type' sugar
|     |-Typedef 0x55bd59686cf0 'type'
|     `-ElaboratedType 0x55bd59686ca0 'typename typed_array_memory<element_landmark_t>::type' sugar
|       `-TypedefType 0x55bd59686c80 'typed_array_memory<Router::element_landmark_t>::type' sugar
|         |-Typedef 0x55bd596836f8 'type'
|         `-SubstTemplateTypeParmType 0x55bd596836c0 'Router::element_landmark_t' sugar
|           |-TemplateTypeParmType 0x55bd59256e00 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55bd59256db0 'T'
|           `-RecordType 0x55bd59681420 'Router::element_landmark_t'
|             `-CXXRecord 0x55bd59681390 'element_landmark_t'
|-CXXMethodDecl 0x55bd59686f28 <line:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *) const' inline
| `-ParmVarDecl 0x55bd59686e38 <col:36, col:48> col:48 argp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXConstructorDecl 0x55bd59687018 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55bd596870f8 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x55bd596870f8
|-CXXMethodDecl 0x55bd596873c8 <line:25:5, col:43> col:10 assign 'void (const vector_memory<typed_array_memory<Router::element_landmark_t> > &)'
| `-ParmVarDecl 0x55bd596872d0 <col:17, col:42> col:42 x 'const vector_memory<typed_array_memory<Router::element_landmark_t> > &'
|-CXXMethodDecl 0x55bd59687608 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)'
| |-ParmVarDecl 0x55bd59687480 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55bd596874f8 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x55bd596877d8 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)'
| |-ParmVarDecl 0x55bd596876c8 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55bd59687740 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x55bd59687938 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator ()'
|-CXXMethodDecl 0x55bd59687a08 <line:31:5, line:33:5> line:31:14 end 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator ()'
|-CXXMethodDecl 0x55bd59687c58 <line:34:5, col:48> col:14 insert 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator (vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator, const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)'
| |-ParmVarDecl 0x55bd59687ac8 <col:21, col:30> col:30 it 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator':'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
| `-ParmVarDecl 0x55bd59687b40 <col:34, col:46> col:46 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x55bd59687eb8 <line:35:5, col:42> col:14 erase 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator (vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator, vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator)'
| |-ParmVarDecl 0x55bd59687d28 <col:20, col:29> col:29 a 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator':'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
| `-ParmVarDecl 0x55bd59687da0 <col:32, col:41> col:41 b 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator':'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x55bd59688078 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)' inline
| `-ParmVarDecl 0x55bd59687f88 <col:27, col:39> col:39 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x55bd59688238 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)' inline
| `-ParmVarDecl 0x55bd59688140 <col:37, col:43> col:43 vp 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x55bd596882f0 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55bd596883a0 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55bd596885d8 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)'
| |-ParmVarDecl 0x55bd59688450 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55bd596884c8 <col:45, col:57> col:57 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x55bd59688878 <line:66:5, col:35> col:10 swap 'void (vector_memory<typed_array_memory<Router::element_landmark_t> > &)'
| `-ParmVarDecl 0x55bd59688780 <col:15, col:34> col:34 x 'vector_memory<typed_array_memory<Router::element_landmark_t> > &'
|-FieldDecl 0x55bd59688940 <line:68:5, col:11> col:11 l_ 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-FieldDecl 0x55bd59688990 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55bd596889e0 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.7 = type { %"struct.Router::element_landmark_t"*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.7 = type { %"struct.Router::element_landmark_t"*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55bd59681db0 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Router::element_landmark_t'
|-CXXRecordDecl 0x55bd59681fb8 prev 0x55bd59681db0 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55bd596831c0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<element_landmark_t>::type':'typed_array_memory<Router::element_landmark_t>'
| `-ElaboratedType 0x55bd59683170 'typename array_memory<element_landmark_t>::type' sugar
|   `-TypedefType 0x55bd59683150 'conditional<false, sized_array_memory<32>, typed_array_memory<Router::element_landmark_t> >::type' sugar
|     |-Typedef 0x55bd59683000 'type'
|     `-SubstTemplateTypeParmType 0x55bd59682e90 'typed_array_memory<Router::element_landmark_t>' sugar
|       |-TemplateTypeParmType 0x55bd5922c990 'F' dependent depth 0 index 1
|       | `-TemplateTypeParm 0x55bd5922c938 'F'
|       `-RecordType 0x55bd59682af0 'typed_array_memory<Router::element_landmark_t>'
|         `-ClassTemplateSpecialization 0x55bd59682a10 'typed_array_memory'
|-FieldDecl 0x55bd59688a30 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Router::element_landmark_t>::array_memory_type>':'vector_memory<typed_array_memory<Router::element_landmark_t> >' mutable
|-AccessSpecDecl 0x55bd59688a80 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55bd59688ab8 <line:118:5, col:15> col:15 value_type 'Router::element_landmark_t':'Router::element_landmark_t'
| `-SubstTemplateTypeParmType 0x55bd59682050 'Router::element_landmark_t' sugar
|   |-TemplateTypeParmType 0x55bd59264120 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55bd592640c8 'T'
|   `-RecordType 0x55bd59681420 'Router::element_landmark_t'
|     `-CXXRecord 0x55bd59681390 'element_landmark_t'
|-TypedefDecl 0x55bd59688b48 <line:119:5, col:16> col:16 reference 'Router::element_landmark_t &'
| `-LValueReferenceType 0x55bd59688b10 'Router::element_landmark_t &'
|   `-SubstTemplateTypeParmType 0x55bd59682050 'Router::element_landmark_t' sugar
|     |-TemplateTypeParmType 0x55bd59264120 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55bd592640c8 'T'
|     `-RecordType 0x55bd59681420 'Router::element_landmark_t'
|       `-CXXRecord 0x55bd59681390 'element_landmark_t'
|-TypedefDecl 0x55bd59688bd8 <line:120:5, col:22> col:22 const_reference 'const Router::element_landmark_t &'
| `-LValueReferenceType 0x55bd59688ba0 'const Router::element_landmark_t &'
|   `-QualType 0x55bd59682051 'const Router::element_landmark_t' const
|     `-SubstTemplateTypeParmType 0x55bd59682050 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x55bd59264120 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55bd592640c8 'T'
|       `-RecordType 0x55bd59681420 'Router::element_landmark_t'
|         `-CXXRecord 0x55bd59681390 'element_landmark_t'
|-TypedefDecl 0x55bd59688c68 <line:121:5, col:16> col:16 pointer 'Router::element_landmark_t *'
| `-PointerType 0x55bd59688c30 'Router::element_landmark_t *'
|   `-SubstTemplateTypeParmType 0x55bd59682050 'Router::element_landmark_t' sugar
|     |-TemplateTypeParmType 0x55bd59264120 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55bd592640c8 'T'
|     `-RecordType 0x55bd59681420 'Router::element_landmark_t'
|       `-CXXRecord 0x55bd59681390 'element_landmark_t'
|-TypedefDecl 0x55bd59688cf8 <line:122:5, col:22> col:22 const_pointer 'const Router::element_landmark_t *'
| `-PointerType 0x55bd59688cc0 'const Router::element_landmark_t *'
|   `-QualType 0x55bd59682051 'const Router::element_landmark_t' const
|     `-SubstTemplateTypeParmType 0x55bd59682050 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x55bd59264120 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55bd592640c8 'T'
|       `-RecordType 0x55bd59681420 'Router::element_landmark_t'
|         `-CXXRecord 0x55bd59681390 'element_landmark_t'
|-TypedefDecl 0x55bd59689950 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<element_landmark_t>::type':'const Router::element_landmark_t &'
| `-ElaboratedType 0x55bd59689900 'typename fast_argument<element_landmark_t>::type' sugar
|   `-TypedefType 0x55bd596898e0 'fast_argument<Router::element_landmark_t, true>::type' sugar
|     |-Typedef 0x55bd59689818 'type'
|     `-LValueReferenceType 0x55bd596897e0 'const Router::element_landmark_t &'
|       `-QualType 0x55bd59689581 'const Router::element_landmark_t' const
|         `-SubstTemplateTypeParmType 0x55bd59689580 'Router::element_landmark_t' sugar
|           |-TemplateTypeParmType 0x55bd592368e0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55bd59236888 'T'
|           `-RecordType 0x55bd59681420 'Router::element_landmark_t'
|             `-CXXRecord 0x55bd59681390 'element_landmark_t'
|-TypedefDecl 0x55bd596899b8 <line:126:5, col:22> col:22 const_access_type 'const Router::element_landmark_t &'
| `-LValueReferenceType 0x55bd59688ba0 'const Router::element_landmark_t &'
|   `-QualType 0x55bd59682051 'const Router::element_landmark_t' const
|     `-SubstTemplateTypeParmType 0x55bd59682050 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x55bd59264120 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55bd592640c8 'T'
|       `-RecordType 0x55bd59681420 'Router::element_landmark_t'
|         `-CXXRecord 0x55bd59681390 'element_landmark_t'
|-TypedefDecl 0x55bd59689a10 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55bd58f62370 'int'
|-TypedefDecl 0x55bd59689a78 <line:130:5, col:16> col:16 iterator 'Router::element_landmark_t *'
| `-PointerType 0x55bd59688c30 'Router::element_landmark_t *'
|   `-SubstTemplateTypeParmType 0x55bd59682050 'Router::element_landmark_t' sugar
|     |-TemplateTypeParmType 0x55bd59264120 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55bd592640c8 'T'
|     `-RecordType 0x55bd59681420 'Router::element_landmark_t'
|       `-CXXRecord 0x55bd59681390 'element_landmark_t'
|-TypedefDecl 0x55bd59689ae0 <line:131:5, col:22> col:22 const_iterator 'const Router::element_landmark_t *'
| `-PointerType 0x55bd59688cc0 'const Router::element_landmark_t *'
|   `-QualType 0x55bd59682051 'const Router::element_landmark_t' const
|     `-SubstTemplateTypeParmType 0x55bd59682050 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x55bd59264120 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55bd592640c8 'T'
|       `-RecordType 0x55bd59681420 'Router::element_landmark_t'
|         `-CXXRecord 0x55bd59681390 'element_landmark_t'
|-EnumDecl 0x55bd59689b38 <line:134:5> col:5
| `-EnumConstantDecl 0x55bd59689c30 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Router::element_landmark_t>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55bd59689c10 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55bd592657a8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55bd59265780 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55bd59265760 <col:40> 'int' 1
|-CXXConstructorDecl 0x55bd59689cb8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55bd59689f48 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Router::element_landmark_t>::value_argument_type)' inline
| |-ParmVarDecl 0x55bd59689d70 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55bd59689e10 <col:41, col:61> col:61 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXConstructorDecl 0x55bd5968a208 <line:139:5, col:37> col:12 Vector 'void (const Vector<Router::element_landmark_t> &)' inline
| `-ParmVarDecl 0x55bd5968a0f0 <col:19, col:36> col:36 x 'const Vector<Router::element_landmark_t> &'
|-CXXConstructorDecl 0x55bd5968a4c8 <line:141:5, col:32> col:12 Vector 'void (Vector<Router::element_landmark_t> &&)' inline
| `-ParmVarDecl 0x55bd5968a3b0 <col:19, col:31> col:31 x 'Vector<Router::element_landmark_t> &&'
|-CXXMethodDecl 0x55bd5968a810 <line:144:5, col:51> col:23 operator= 'Vector<Router::element_landmark_t> &(const Vector<Router::element_landmark_t> &)' inline
| `-ParmVarDecl 0x55bd5968a6f0 <col:33, col:50> col:50 x 'const Vector<Router::element_landmark_t> &'
|-CXXMethodDecl 0x55bd5968ab20 <line:146:5, col:46> col:23 operator= 'Vector<Router::element_landmark_t> &(Vector<Router::element_landmark_t> &&)' inline
| `-ParmVarDecl 0x55bd5968aa00 <col:33, col:45> col:45 x 'Vector<Router::element_landmark_t> &&'
|-CXXMethodDecl 0x55bd5968ae10 <line:148:5, col:70> col:23 assign 'Vector<Router::element_landmark_t> &(Vector::size_type, Vector<Router::element_landmark_t>::value_argument_type)' inline
| |-ParmVarDecl 0x55bd5968ac58 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55bd5968acd0 <col:43, col:69> col:63 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXMethodDecl 0x55bd5968af38 <line:150:5, col:55> col:49 begin 'Vector<Router::element_landmark_t>::iterator ()'
| |-NoInlineAttr 0x55bd5968b018 <col:20> Inherited
| `-OptimizeNoneAttr 0x55bd5968b070 <col:30> Inherited
|-CXXMethodDecl 0x55bd5968b0b8 <line:151:5, col:53> col:49 end 'Vector<Router::element_landmark_t>::iterator ()'
| |-NoInlineAttr 0x55bd5968b168 <col:20> Inherited
| `-OptimizeNoneAttr 0x55bd5968b1c0 <col:30> Inherited
|-CXXMethodDecl 0x55bd5968b288 <line:152:5, col:63> col:55 begin 'Vector<Router::element_landmark_t>::const_iterator () const'
| |-NoInlineAttr 0x55bd5968b338 <col:20> Inherited
| `-OptimizeNoneAttr 0x55bd5968b390 <col:30> Inherited
|-CXXMethodDecl 0x55bd5968b3d8 <line:153:5, col:61> col:55 end 'Vector<Router::element_landmark_t>::const_iterator () const'
| |-NoInlineAttr 0x55bd5968b488 <col:20> Inherited
| `-OptimizeNoneAttr 0x55bd5968b4e0 <col:30> Inherited
|-CXXMethodDecl 0x55bd5968b528 <line:154:5, col:64> col:55 cbegin 'Vector<Router::element_landmark_t>::const_iterator () const'
| |-NoInlineAttr 0x55bd5968b5d8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55bd5968b630 <col:30> Inherited
|-CXXMethodDecl 0x55bd5968b678 <line:155:5, col:62> col:55 cend 'Vector<Router::element_landmark_t>::const_iterator () const'
| |-NoInlineAttr 0x55bd5968b728 <col:20> Inherited
| `-OptimizeNoneAttr 0x55bd5968b780 <col:30> Inherited
|-CXXMethodDecl 0x55bd5968b7a8 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55bd5968b858 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55bd5968b908 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55bd5968bac8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Router::element_landmark_t>::value_argument_type)' inline
| |-ParmVarDecl 0x55bd5968b9b8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55bd5968ba30 <col:37, col:63> col:57 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXMethodDecl 0x55bd5968bc18 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55bd5968bb88 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55bd5968bdc8 <line:163:5, col:65> col:43 operator[] 'Router::element_landmark_t &(Vector::size_type)'
| |-ParmVarDecl 0x55bd5968bcd0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55bd5968be80 <col:20>
| `-OptimizeNoneAttr 0x55bd5968bed8 <col:30>
|-CXXMethodDecl 0x55bd5968bff8 <line:164:5, col:73> col:49 operator[] 'const Router::element_landmark_t &(Vector::size_type) const'
| |-ParmVarDecl 0x55bd5968bf00 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55bd5968c0b0 <col:20>
| `-OptimizeNoneAttr 0x55bd5968c108 <col:30>
|-CXXMethodDecl 0x55bd5968c1c0 <line:165:5, col:29> col:15 at 'Router::element_landmark_t &(Vector::size_type)' inline
| `-ParmVarDecl 0x55bd5968c130 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55bd5968c308 <line:166:5, col:37> col:21 at 'const Router::element_landmark_t &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55bd5968c278 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55bd5968c438 <line:167:5, col:21> col:15 front 'Router::element_landmark_t &()' inline
|-CXXMethodDecl 0x55bd5968c568 <line:168:5, col:29> col:21 front 'const Router::element_landmark_t &() const' inline
|-CXXMethodDecl 0x55bd5968c638 <line:169:5, col:20> col:15 back 'Router::element_landmark_t &()' inline
|-CXXMethodDecl 0x55bd5968c708 <line:170:5, col:28> col:21 back 'const Router::element_landmark_t &() const' inline
|-CXXMethodDecl 0x55bd5968c848 <line:172:5, col:39> col:15 unchecked_at 'Router::element_landmark_t &(Vector::size_type)' inline
| `-ParmVarDecl 0x55bd5968c7b8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55bd5968c990 <line:173:5, col:47> col:21 unchecked_at 'const Router::element_landmark_t &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55bd5968c900 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55bd5968cad8 <line:174:5, col:59> col:15 at_u 'Router::element_landmark_t &(Vector::size_type)' inline
| |-ParmVarDecl 0x55bd5968ca48 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55bd5968cb90 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55bd5968cc90 <line:175:5, col:71> col:21 at_u 'const Router::element_landmark_t &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55bd5968cc00 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55bd5968cd48 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55bd5968ce08 <line:177:5, col:20> col:15 data 'Router::element_landmark_t *()' inline
|-CXXMethodDecl 0x55bd5968cf08 <line:178:5, col:28> col:21 data 'const Router::element_landmark_t *() const' inline
|-CXXMethodDecl 0x55bd5968d088 <line:180:5, col:48> col:17 push_back 'void (Vector<Router::element_landmark_t>::value_argument_type)' inline
| `-ParmVarDecl 0x55bd5968cfc8 <col:27, col:47> col:47 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-FunctionTemplateDecl 0x55bd5968d818 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55bd5968d140 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Router::element_landmark_t>':'fast_argument<Router::element_landmark_t, true>'
| `-CXXMethodDecl 0x55bd5968d778 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Router::element_landmark_t &&)' inline
|   `-ParmVarDecl 0x55bd5968d678 <col:58, col:62> col:62 v 'Router::element_landmark_t &&'
|-CXXMethodDecl 0x55bd5968d8f8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55bd5968da48 <line:186:5, col:49> col:17 push_front 'void (Vector<Router::element_landmark_t>::value_argument_type)' inline
| `-ParmVarDecl 0x55bd5968d9b8 <col:28, col:48> col:48 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXMethodDecl 0x55bd5968db00 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55bd5968dd48 <line:189:5, col:62> col:21 insert 'Vector<Router::element_landmark_t>::iterator (Vector<Router::element_landmark_t>::iterator, Vector<Router::element_landmark_t>::value_argument_type)' inline
| |-ParmVarDecl 0x55bd5968dbc0 <col:28, col:37> col:37 it 'Vector<Router::element_landmark_t>::iterator':'Router::element_landmark_t *'
| `-ParmVarDecl 0x55bd5968dc38 <col:41, col:61> col:61 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXMethodDecl 0x55bd5968ded8 <line:190:5, col:38> col:21 erase 'Vector<Router::element_landmark_t>::iterator (Vector<Router::element_landmark_t>::iterator)' inline
| `-ParmVarDecl 0x55bd5968de18 <col:27, col:36> col:36 it 'Vector<Router::element_landmark_t>::iterator':'Router::element_landmark_t *'
|-CXXMethodDecl 0x55bd5968e0e8 <line:191:5, col:49> col:21 erase 'Vector<Router::element_landmark_t>::iterator (Vector<Router::element_landmark_t>::iterator, Vector<Router::element_landmark_t>::iterator)' inline
| |-ParmVarDecl 0x55bd5968dfa0 <col:27, col:36> col:36 a 'Vector<Router::element_landmark_t>::iterator':'Router::element_landmark_t *'
| `-ParmVarDecl 0x55bd5968e018 <col:39, col:48> col:48 b 'Vector<Router::element_landmark_t>::iterator':'Router::element_landmark_t *'
|-CXXMethodDecl 0x55bd5968e1a8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55bd5968e408 <line:195:5, col:34> col:17 swap 'void (Vector<Router::element_landmark_t> &)' inline
| `-ParmVarDecl 0x55bd5968e310 <col:22, col:33> col:33 x 'Vector<Router::element_landmark_t> &'
`-CXXDestructorDecl 0x55bd5968e4d8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55bd5968e4d8

Layout: <CGRecordLayout
  LLVMType:%class.Vector.6 = type { %class.vector_memory.7 }
  NonVirtualBaseLLVMType:%class.Vector.6 = type { %class.vector_memory.7 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55bd595f1dd0 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<16>'
|-CXXRecordDecl 0x55bd595f1fa8 prev 0x55bd595f1dd0 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55bd595f2038 <col:46, col:52> col:46 public
|-TypedefDecl 0x55bd595f2060 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55bd58f62370 'int'
|-TypedefDecl 0x55bd595f3c30 <line:13:5, col:31> col:31 type 'typename sized_array_memory<16>::type':'char_array<16>'
| `-ElaboratedType 0x55bd595f3be0 'typename sized_array_memory<16>::type' sugar
|   `-TypedefType 0x55bd595f2510 'sized_array_memory<16>::type' sugar
|     |-Typedef 0x55bd595f2410 'type'
|     `-TemplateSpecializationType 0x55bd595f23a0 'char_array<16UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x55bd595f2280 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 16
|       |   `-SubstNonTypeTemplateParmExpr 0x55bd595f2260 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x55bd595f2240 <col:24> 'unsigned long' 16
|       `-RecordType 0x55bd595f2380 'char_array<16>'
|         `-ClassTemplateSpecialization 0x55bd595f22a0 'char_array'
|-TypedefDecl 0x55bd595f3ce8 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<16> >::type *'
| `-PointerType 0x55bd595f3cb0 'vector_memory<sized_array_memory<16> >::type *'
|   `-TypedefType 0x55bd595f3c90 'vector_memory<sized_array_memory<16> >::type' sugar
|     |-Typedef 0x55bd595f3c30 'type'
|     `-ElaboratedType 0x55bd595f3be0 'typename sized_array_memory<16>::type' sugar
|       `-TypedefType 0x55bd595f2510 'sized_array_memory<16>::type' sugar
|         |-Typedef 0x55bd595f2410 'type'
|         `-TemplateSpecializationType 0x55bd595f23a0 'char_array<16UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x55bd595f2280 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 16
|           |   `-SubstNonTypeTemplateParmExpr 0x55bd595f2260 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x55bd595f2240 <col:24> 'unsigned long' 16
|           `-RecordType 0x55bd595f2380 'char_array<16>'
|             `-ClassTemplateSpecialization 0x55bd595f22a0 'char_array'
|-CXXMethodDecl 0x55bd595f3e68 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<16> >::type *) const' inline
| `-ParmVarDecl 0x55bd595f3d78 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXConstructorDecl 0x55bd595f3f58 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55bd595f4038 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x55bd595f4038
|-CXXMethodDecl 0x55bd595f4308 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<16> > &)'
| `-ParmVarDecl 0x55bd595f4210 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<16> > &'
|-CXXMethodDecl 0x55bd595f4548 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x55bd595f43c0 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55bd595f4438 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55bd595f4718 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x55bd595f4608 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55bd595f4680 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55bd595f4878 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<16> >::iterator ()'
|-CXXMethodDecl 0x55bd595f4948 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<16> >::iterator ()'
|-CXXMethodDecl 0x55bd595f4b98 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<16> >::iterator (vector_memory<sized_array_memory<16> >::iterator, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x55bd595f4a08 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
| `-ParmVarDecl 0x55bd595f4a80 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55bd595f4df8 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<16> >::iterator (vector_memory<sized_array_memory<16> >::iterator, vector_memory<sized_array_memory<16> >::iterator)'
| |-ParmVarDecl 0x55bd595f4c68 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
| `-ParmVarDecl 0x55bd595f4ce0 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55bd595f4fb8 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<16> >::type *)' inline
| `-ParmVarDecl 0x55bd595f4ec8 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55bd595f5178 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<16> >::type *)' inline
| `-ParmVarDecl 0x55bd595f5080 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55bd595f5230 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55bd595f52e0 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55bd595f5518 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x55bd595f5390 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55bd595f5408 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55bd595f57b8 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<16> > &)'
| `-ParmVarDecl 0x55bd595f56c0 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<16> > &'
|-FieldDecl 0x55bd595f5880 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<16> >::type *'
|-FieldDecl 0x55bd595f58d0 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55bd595f5920 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.9 = type { %struct.char_array.10*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.9 = type { %struct.char_array.10*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55bd5968fc00 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Router::Connection'
|-CXXRecordDecl 0x55bd5968fe08 prev 0x55bd5968fc00 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55bd59690ed0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<Connection>::type':'sized_array_memory<16>'
| `-ElaboratedType 0x55bd59690e80 'typename array_memory<Connection>::type' sugar
|   `-TypedefType 0x55bd59690e60 'conditional<true, sized_array_memory<16>, typed_array_memory<Router::Connection> >::type' sugar
|     |-Typedef 0x55bd59690d10 'type'
|     `-SubstTemplateTypeParmType 0x55bd595f19a0 'sized_array_memory<16>' sugar
|       |-TemplateTypeParmType 0x55bd5922c210 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55bd5922c1b8 'T'
|       `-RecordType 0x55bd595f14f0 'sized_array_memory<16>'
|         `-ClassTemplateSpecialization 0x55bd595f1408 'sized_array_memory'
|-FieldDecl 0x55bd59690fd0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Router::Connection>::array_memory_type>':'vector_memory<sized_array_memory<16> >' mutable
|-AccessSpecDecl 0x55bd59691020 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55bd59691058 <line:118:5, col:15> col:15 value_type 'Router::Connection':'Router::Connection'
| `-SubstTemplateTypeParmType 0x55bd5968fea0 'Router::Connection' sugar
|   |-TemplateTypeParmType 0x55bd59264120 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55bd592640c8 'T'
|   `-RecordType 0x55bd5966db00 'Router::Connection'
|     `-CXXRecord 0x55bd5966da70 'Connection'
|-TypedefDecl 0x55bd59691118 <line:119:5, col:16> col:16 reference 'Router::Connection &'
| `-LValueReferenceType 0x55bd596910e0 'Router::Connection &'
|   `-SubstTemplateTypeParmType 0x55bd5968fea0 'Router::Connection' sugar
|     |-TemplateTypeParmType 0x55bd59264120 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55bd592640c8 'T'
|     `-RecordType 0x55bd5966db00 'Router::Connection'
|       `-CXXRecord 0x55bd5966da70 'Connection'
|-TypedefDecl 0x55bd596911a8 <line:120:5, col:22> col:22 const_reference 'const Router::Connection &'
| `-LValueReferenceType 0x55bd59691170 'const Router::Connection &'
|   `-QualType 0x55bd5968fea1 'const Router::Connection' const
|     `-SubstTemplateTypeParmType 0x55bd5968fea0 'Router::Connection' sugar
|       |-TemplateTypeParmType 0x55bd59264120 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55bd592640c8 'T'
|       `-RecordType 0x55bd5966db00 'Router::Connection'
|         `-CXXRecord 0x55bd5966da70 'Connection'
|-TypedefDecl 0x55bd59691238 <line:121:5, col:16> col:16 pointer 'Router::Connection *'
| `-PointerType 0x55bd59691200 'Router::Connection *'
|   `-SubstTemplateTypeParmType 0x55bd5968fea0 'Router::Connection' sugar
|     |-TemplateTypeParmType 0x55bd59264120 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55bd592640c8 'T'
|     `-RecordType 0x55bd5966db00 'Router::Connection'
|       `-CXXRecord 0x55bd5966da70 'Connection'
|-TypedefDecl 0x55bd596912c8 <line:122:5, col:22> col:22 const_pointer 'const Router::Connection *'
| `-PointerType 0x55bd59691290 'const Router::Connection *'
|   `-QualType 0x55bd5968fea1 'const Router::Connection' const
|     `-SubstTemplateTypeParmType 0x55bd5968fea0 'Router::Connection' sugar
|       |-TemplateTypeParmType 0x55bd59264120 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55bd592640c8 'T'
|       `-RecordType 0x55bd5966db00 'Router::Connection'
|         `-CXXRecord 0x55bd5966da70 'Connection'
|-TypedefDecl 0x55bd59691f20 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<Connection>::type':'const Router::Connection &'
| `-ElaboratedType 0x55bd59691ed0 'typename fast_argument<Connection>::type' sugar
|   `-TypedefType 0x55bd59691eb0 'fast_argument<Router::Connection, true>::type' sugar
|     |-Typedef 0x55bd59691de8 'type'
|     `-LValueReferenceType 0x55bd59691db0 'const Router::Connection &'
|       `-QualType 0x55bd59691b51 'const Router::Connection' const
|         `-SubstTemplateTypeParmType 0x55bd59691b50 'Router::Connection' sugar
|           |-TemplateTypeParmType 0x55bd592368e0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55bd59236888 'T'
|           `-RecordType 0x55bd5966db00 'Router::Connection'
|             `-CXXRecord 0x55bd5966da70 'Connection'
|-TypedefDecl 0x55bd59691f88 <line:126:5, col:22> col:22 const_access_type 'const Router::Connection &'
| `-LValueReferenceType 0x55bd59691170 'const Router::Connection &'
|   `-QualType 0x55bd5968fea1 'const Router::Connection' const
|     `-SubstTemplateTypeParmType 0x55bd5968fea0 'Router::Connection' sugar
|       |-TemplateTypeParmType 0x55bd59264120 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55bd592640c8 'T'
|       `-RecordType 0x55bd5966db00 'Router::Connection'
|         `-CXXRecord 0x55bd5966da70 'Connection'
|-TypedefDecl 0x55bd59691fe0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55bd58f62370 'int'
|-TypedefDecl 0x55bd59692048 <line:130:5, col:16> col:16 iterator 'Router::Connection *'
| `-PointerType 0x55bd59691200 'Router::Connection *'
|   `-SubstTemplateTypeParmType 0x55bd5968fea0 'Router::Connection' sugar
|     |-TemplateTypeParmType 0x55bd59264120 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55bd592640c8 'T'
|     `-RecordType 0x55bd5966db00 'Router::Connection'
|       `-CXXRecord 0x55bd5966da70 'Connection'
|-TypedefDecl 0x55bd596920b0 <line:131:5, col:22> col:22 const_iterator 'const Router::Connection *'
| `-PointerType 0x55bd59691290 'const Router::Connection *'
|   `-QualType 0x55bd5968fea1 'const Router::Connection' const
|     `-SubstTemplateTypeParmType 0x55bd5968fea0 'Router::Connection' sugar
|       |-TemplateTypeParmType 0x55bd59264120 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55bd592640c8 'T'
|       `-RecordType 0x55bd5966db00 'Router::Connection'
|         `-CXXRecord 0x55bd5966da70 'Connection'
|-EnumDecl 0x55bd59692108 <line:134:5> col:5
| `-EnumConstantDecl 0x55bd59692200 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Router::Connection>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55bd596921e0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55bd592657a8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55bd59265780 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55bd59265760 <col:40> 'int' 1
|-CXXConstructorDecl 0x55bd59692288 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55bd59692518 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Router::Connection>::value_argument_type)' inline
| |-ParmVarDecl 0x55bd59692340 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55bd596923e0 <col:41, col:61> col:61 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXConstructorDecl 0x55bd596927d8 <line:139:5, col:37> col:12 Vector 'void (const Vector<Router::Connection> &)' inline
| `-ParmVarDecl 0x55bd596926c0 <col:19, col:36> col:36 x 'const Vector<Router::Connection> &'
|-CXXConstructorDecl 0x55bd59692a98 <line:141:5, col:32> col:12 Vector 'void (Vector<Router::Connection> &&)' inline
| `-ParmVarDecl 0x55bd59692980 <col:19, col:31> col:31 x 'Vector<Router::Connection> &&'
|-CXXMethodDecl 0x55bd59692de0 <line:144:5, col:51> col:23 operator= 'Vector<Router::Connection> &(const Vector<Router::Connection> &)' inline
| `-ParmVarDecl 0x55bd59692cc0 <col:33, col:50> col:50 x 'const Vector<Router::Connection> &'
|-CXXMethodDecl 0x55bd596930f0 <line:146:5, col:46> col:23 operator= 'Vector<Router::Connection> &(Vector<Router::Connection> &&)' inline
| `-ParmVarDecl 0x55bd59692fd0 <col:33, col:45> col:45 x 'Vector<Router::Connection> &&'
|-CXXMethodDecl 0x55bd596933e0 <line:148:5, col:70> col:23 assign 'Vector<Router::Connection> &(Vector::size_type, Vector<Router::Connection>::value_argument_type)' inline
| |-ParmVarDecl 0x55bd59693228 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55bd596932a0 <col:43, col:69> col:63 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXMethodDecl 0x55bd59693538 <line:150:5, col:55> col:49 begin 'Vector<Router::Connection>::iterator ()'
| |-NoInlineAttr 0x55bd59693618 <col:20> Inherited
| `-OptimizeNoneAttr 0x55bd59693670 <col:30> Inherited
|-CXXMethodDecl 0x55bd596936b8 <line:151:5, col:53> col:49 end 'Vector<Router::Connection>::iterator ()'
| |-NoInlineAttr 0x55bd59693768 <col:20> Inherited
| `-OptimizeNoneAttr 0x55bd596937c0 <col:30> Inherited
|-CXXMethodDecl 0x55bd59693888 <line:152:5, col:63> col:55 begin 'Vector<Router::Connection>::const_iterator () const'
| |-NoInlineAttr 0x55bd59693938 <col:20> Inherited
| `-OptimizeNoneAttr 0x55bd59693990 <col:30> Inherited
|-CXXMethodDecl 0x55bd596939d8 <line:153:5, col:61> col:55 end 'Vector<Router::Connection>::const_iterator () const'
| |-NoInlineAttr 0x55bd59693a88 <col:20> Inherited
| `-OptimizeNoneAttr 0x55bd59693ae0 <col:30> Inherited
|-CXXMethodDecl 0x55bd59693b28 <line:154:5, col:64> col:55 cbegin 'Vector<Router::Connection>::const_iterator () const'
| |-NoInlineAttr 0x55bd59693bd8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55bd59693c30 <col:30> Inherited
|-CXXMethodDecl 0x55bd59693c78 <line:155:5, col:62> col:55 cend 'Vector<Router::Connection>::const_iterator () const'
| |-NoInlineAttr 0x55bd59693d28 <col:20> Inherited
| `-OptimizeNoneAttr 0x55bd59693d80 <col:30> Inherited
|-CXXMethodDecl 0x55bd59693da8 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55bd59693e58 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55bd59693f08 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55bd596940c8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Router::Connection>::value_argument_type)' inline
| |-ParmVarDecl 0x55bd59693fb8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55bd59694030 <col:37, col:63> col:57 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXMethodDecl 0x55bd59694218 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55bd59694188 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55bd596943c8 <line:163:5, col:65> col:43 operator[] 'Router::Connection &(Vector::size_type)'
| |-ParmVarDecl 0x55bd596942d0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55bd59694480 <col:20>
| `-OptimizeNoneAttr 0x55bd596944d8 <col:30>
|-CXXMethodDecl 0x55bd596945f8 <line:164:5, col:73> col:49 operator[] 'const Router::Connection &(Vector::size_type) const'
| |-ParmVarDecl 0x55bd59694500 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55bd596946b0 <col:20>
| `-OptimizeNoneAttr 0x55bd59694708 <col:30>
|-CXXMethodDecl 0x55bd596947c0 <line:165:5, col:29> col:15 at 'Router::Connection &(Vector::size_type)' inline
| `-ParmVarDecl 0x55bd59694730 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55bd59694908 <line:166:5, col:37> col:21 at 'const Router::Connection &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55bd59694878 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55bd59694a38 <line:167:5, col:21> col:15 front 'Router::Connection &()' inline
|-CXXMethodDecl 0x55bd59694b68 <line:168:5, col:29> col:21 front 'const Router::Connection &() const' inline
|-CXXMethodDecl 0x55bd59694c38 <line:169:5, col:20> col:15 back 'Router::Connection &()' inline
|-CXXMethodDecl 0x55bd59694d08 <line:170:5, col:28> col:21 back 'const Router::Connection &() const' inline
|-CXXMethodDecl 0x55bd59694e48 <line:172:5, col:39> col:15 unchecked_at 'Router::Connection &(Vector::size_type)' inline
| `-ParmVarDecl 0x55bd59694db8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55bd59694f90 <line:173:5, col:47> col:21 unchecked_at 'const Router::Connection &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55bd59694f00 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55bd596950d8 <line:174:5, col:59> col:15 at_u 'Router::Connection &(Vector::size_type)' inline
| |-ParmVarDecl 0x55bd59695048 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55bd59695190 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55bd59695290 <line:175:5, col:71> col:21 at_u 'const Router::Connection &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55bd59695200 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55bd59695348 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55bd59695408 <line:177:5, col:20> col:15 data 'Router::Connection *()' inline
|-CXXMethodDecl 0x55bd59695508 <line:178:5, col:28> col:21 data 'const Router::Connection *() const' inline
|-CXXMethodDecl 0x55bd596956b8 <line:180:5, col:48> col:17 push_back 'void (Vector<Router::Connection>::value_argument_type)' inline
| `-ParmVarDecl 0x55bd596955c8 <col:27, col:47> col:47 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-FunctionTemplateDecl 0x55bd59695e78 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55bd59695770 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Router::Connection>':'fast_argument<Router::Connection, true>'
| `-CXXMethodDecl 0x55bd59695dd8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Router::Connection &&)' inline
|   `-ParmVarDecl 0x55bd59695cd8 <col:58, col:62> col:62 v 'Router::Connection &&'
|-CXXMethodDecl 0x55bd59695f58 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55bd596960a8 <line:186:5, col:49> col:17 push_front 'void (Vector<Router::Connection>::value_argument_type)' inline
| `-ParmVarDecl 0x55bd59696018 <col:28, col:48> col:48 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXMethodDecl 0x55bd59696160 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55bd596963a8 <line:189:5, col:62> col:21 insert 'Vector<Router::Connection>::iterator (Vector<Router::Connection>::iterator, Vector<Router::Connection>::value_argument_type)' inline
| |-ParmVarDecl 0x55bd59696220 <col:28, col:37> col:37 it 'Vector<Router::Connection>::iterator':'Router::Connection *'
| `-ParmVarDecl 0x55bd59696298 <col:41, col:61> col:61 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXMethodDecl 0x55bd59696568 <line:190:5, col:38> col:21 erase 'Vector<Router::Connection>::iterator (Vector<Router::Connection>::iterator)' inline
| `-ParmVarDecl 0x55bd59696478 <col:27, col:36> col:36 it 'Vector<Router::Connection>::iterator':'Router::Connection *'
|-CXXMethodDecl 0x55bd596967b8 <line:191:5, col:49> col:21 erase 'Vector<Router::Connection>::iterator (Vector<Router::Connection>::iterator, Vector<Router::Connection>::iterator)' inline
| |-ParmVarDecl 0x55bd59696630 <col:27, col:36> col:36 a 'Vector<Router::Connection>::iterator':'Router::Connection *'
| `-ParmVarDecl 0x55bd596966a8 <col:39, col:48> col:48 b 'Vector<Router::Connection>::iterator':'Router::Connection *'
|-CXXMethodDecl 0x55bd59696878 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55bd59696ad8 <line:195:5, col:34> col:17 swap 'void (Vector<Router::Connection> &)' inline
| `-ParmVarDecl 0x55bd596969e0 <col:22, col:33> col:33 x 'Vector<Router::Connection> &'
`-CXXDestructorDecl 0x55bd59696ba8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55bd59696ba8

Layout: <CGRecordLayout
  LLVMType:%class.Vector.8 = type { %class.vector_memory.9 }
  NonVirtualBaseLLVMType:%class.Vector.8 = type { %class.vector_memory.9 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | union Handler::(anonymous at ../dummy_inc/click/handler.hh:290:5)
         0 |   HandlerCallback h
         0 |   ReadHandlerCallback r
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | union Handler::(anonymous at ../dummy_inc/click/handler.hh:294:5)
         0 |   HandlerCallback h
         0 |   WriteHandlerCallback w
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Handler
         0 |   class String _name
         0 |     struct String::rep_t _r
         0 |       const char * data
         8 |       int length
        16 |       struct String::memo_t * memo
        24 |   union Handler::(anonymous at ../dummy_inc/click/handler.hh:290:5) _read_hook
        24 |     HandlerCallback h
        24 |     ReadHandlerCallback r
        32 |   union Handler::(anonymous at ../dummy_inc/click/handler.hh:294:5) _write_hook
        32 |     HandlerCallback h
        32 |     WriteHandlerCallback w
        40 |   void * _read_user_data
        48 |   void * _write_user_data
        56 |   uint32_t _flags
        60 |   int _use_count
        64 |   int _next_by_name
           | [sizeof=72, dsize=68, align=8,
           |  nvsize=68, nvalign=8]

*** Dumping AST Record Layout
         0 | class ErrorHandler
         0 |   (ErrorHandler vtable pointer)
         8 |   int _nerrors
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55bd596b27d0 prev 0x55bd595b4c50 <../dummy_inc/click/error.hh:90:1, line:592:1> line:90:7 referenced class ErrorHandler definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55bd596b28c8 <col:1, col:7> col:7 implicit referenced class ErrorHandler
|-AccessSpecDecl 0x55bd596b2958 <col:22, col:28> col:22 public
|-EnumDecl 0x55bd596b2980 <line:98:5, line:111:5> line:98:10 Level
| |-EnumConstantDecl 0x55bd596b2a98 <line:99:2, col:14> col:2 el_abort 'ErrorHandler::Level'
| | `-ConstantExpr 0x55bd596b2a78 <col:13, col:14> 'int' Int: -999
| |   `-UnaryOperator 0x55bd596b2a60 <col:13, col:14> 'int' prefix '-'
| |     `-IntegerLiteral 0x55bd596b2a40 <col:14> 'int' 999
| |-EnumConstantDecl 0x55bd596b2b40 <line:100:2, col:14> col:2 el_fatal 'ErrorHandler::Level'
| | `-ConstantExpr 0x55bd596b2b20 <col:13, col:14> 'int' Int: -1
| |   `-UnaryOperator 0x55bd596b2b08 <col:13, col:14> 'int' prefix '-'
| |     `-IntegerLiteral 0x55bd596b2ae8 <col:14> 'int' 1
| |-EnumConstantDecl 0x55bd596b2bd0 <line:102:2, col:17> col:2 el_emergency 'ErrorHandler::Level'
| | `-ConstantExpr 0x55bd596b2bb0 <col:17> 'int' Int: 0
| |   `-IntegerLiteral 0x55bd596b2b90 <col:17> 'int' 0
| |-EnumConstantDecl 0x55bd596b2c60 <line:103:2, col:13> col:2 el_alert 'ErrorHandler::Level'
| | `-ConstantExpr 0x55bd596b2c40 <col:13> 'int' Int: 1
| |   `-IntegerLiteral 0x55bd596b2c20 <col:13> 'int' 1
| |-EnumConstantDecl 0x55bd596b2cf0 <line:104:2, col:16> col:2 el_critical 'ErrorHandler::Level'
| | `-ConstantExpr 0x55bd596b2cd0 <col:16> 'int' Int: 2
| |   `-IntegerLiteral 0x55bd596b2cb0 <col:16> 'int' 2
| |-EnumConstantDecl 0x55bd596b2d80 <line:105:2, col:13> col:2 referenced el_error 'ErrorHandler::Level'
| | `-ConstantExpr 0x55bd596b2d60 <col:13> 'int' Int: 3
| |   `-IntegerLiteral 0x55bd596b2d40 <col:13> 'int' 3
| |-EnumConstantDecl 0x55bd596b2e10 <line:106:2, col:15> col:2 el_warning 'ErrorHandler::Level'
| | `-ConstantExpr 0x55bd596b2df0 <col:15> 'int' Int: 4
| |   `-IntegerLiteral 0x55bd596b2dd0 <col:15> 'int' 4
| |-EnumConstantDecl 0x55bd596b2ea0 <line:107:2, col:14> col:2 el_notice 'ErrorHandler::Level'
| | `-ConstantExpr 0x55bd596b2e80 <col:14> 'int' Int: 5
| |   `-IntegerLiteral 0x55bd596b2e60 <col:14> 'int' 5
| |-EnumConstantDecl 0x55bd596b2f30 <line:109:2, col:12> col:2 el_info 'ErrorHandler::Level'
| | `-ConstantExpr 0x55bd596b2f10 <col:12> 'int' Int: 6
| |   `-IntegerLiteral 0x55bd596b2ef0 <col:12> 'int' 6
| `-EnumConstantDecl 0x55bd596b2fc0 <line:110:2, col:13> col:2 el_debug 'ErrorHandler::Level'
|   `-ConstantExpr 0x55bd596b2fa0 <col:13> 'int' Int: 7
|     `-IntegerLiteral 0x55bd596b2f80 <col:13> 'int' 7
|-VarDecl 0x55bd596b3030 <line:114:5, col:31> col:23 e_abort 'const char []' static
|-VarDecl 0x55bd596b30b8 <col:5, line:115:10> col:2 e_fatal 'const char []' static
|-VarDecl 0x55bd596b3140 <line:114:5, line:116:14> col:2 e_emergency 'const char []' static
|-VarDecl 0x55bd596b31c8 <line:114:5, line:117:10> col:2 e_alert 'const char []' static
|-VarDecl 0x55bd596b3250 <line:114:5, line:118:13> col:2 e_critical 'const char []' static
|-VarDecl 0x55bd596b32d8 <line:114:5, line:119:10> col:2 e_error 'const char []' static
|-VarDecl 0x55bd596b3360 <line:114:5, line:120:12> col:2 e_warning 'const char []' static
|-VarDecl 0x55bd596b33e8 <line:114:5, line:121:22> col:2 e_warning_annotated 'const char []' static
|-VarDecl 0x55bd596b3470 <line:114:5, line:122:11> col:2 e_notice 'const char []' static
|-VarDecl 0x55bd596b34f8 <line:114:5, line:123:9> col:2 e_info 'const char []' static
|-VarDecl 0x55bd596b3580 <line:114:5, line:124:10> col:2 e_debug 'const char []' static
|-CXXConstructorDecl 0x55bd596b3680 <line:127:5, line:129:5> line:127:5 used ErrorHandler 'void ()'
| |-CXXCtorInitializer Field 0x55bd596b9998 '_nerrors' 'int'
| | `-IntegerLiteral 0x55bd596ba128 <line:128:13> 'int' 0
| `-CompoundStmt 0x55bd596ba198 <col:16, line:129:5>
|-CXXDestructorDecl 0x55bd596b3770 <line:131:5, line:132:5> line:131:13 used ~ErrorHandler 'void () noexcept' virtual
| `-CompoundStmt 0x55bd596ba1a8 <col:29, line:132:5>
|-CXXMethodDecl 0x55bd596b3928 <line:148:5, col:62> col:26 static_initialize 'ErrorHandler *(ErrorHandler *)' static
| `-ParmVarDecl 0x55bd596b3860 <col:44, col:58> col:58 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55bd596b39f0 <line:154:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x55bd596b3ad8 <line:159:5, line:161:5> line:159:26 default_handler 'ErrorHandler *()' static
| `-CompoundStmt 0x55bd596ba200 <col:44, line:161:5>
|   `-ReturnStmt 0x55bd596ba1f0 <line:160:2, col:9>
|     `-ImplicitCastExpr 0x55bd596ba1d8 <col:9> 'ErrorHandler *' <LValueToRValue>
|       `-DeclRefExpr 0x55bd596ba1b8 <col:9> 'ErrorHandler *' lvalue Var 0x55bd596b99f8 'the_default_handler' 'ErrorHandler *'
|-CXXMethodDecl 0x55bd596b3c18 <line:168:5, col:55> col:17 set_default_handler 'void (ErrorHandler *)' static
| `-ParmVarDecl 0x55bd596b3b88 <col:37, col:51> col:51 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55bd596b3ce0 <line:171:5, line:173:5> line:171:26 silent_handler 'ErrorHandler *()' static
| `-CompoundStmt 0x55bd596ba260 <col:43, line:173:5>
|   `-ReturnStmt 0x55bd596ba250 <line:172:2, col:9>
|     `-ImplicitCastExpr 0x55bd596ba238 <col:9> 'ErrorHandler *' <LValueToRValue>
|       `-DeclRefExpr 0x55bd596ba218 <col:9> 'ErrorHandler *' lvalue Var 0x55bd596b9a70 'the_silent_handler' 'ErrorHandler *'
|-VarDecl 0x55bd596b3d98 <line:176:5, col:22> col:22 ok_result 'const int' static
|-VarDecl 0x55bd596b3e18 <line:178:5, col:22> col:22 error_result 'const int' static
|-CXXMethodDecl 0x55bd596b3f28 <line:186:5, col:36> col:10 debug 'void (const char *, ...)'
| `-ParmVarDecl 0x55bd596b3e98 <col:16, col:28> col:28 fmt 'const char *'
|-CXXMethodDecl 0x55bd596b4078 <line:188:5, col:38> col:10 message 'void (const char *, ...)'
| `-ParmVarDecl 0x55bd596b3fe8 <col:18, col:30> col:30 fmt 'const char *'
|-CXXMethodDecl 0x55bd596b41d0 <line:193:5, col:37> col:9 warning 'int (const char *, ...)'
| `-ParmVarDecl 0x55bd596b4138 <col:17, col:29> col:29 fmt 'const char *'
|-CXXMethodDecl 0x55bd596b4328 <line:196:5, col:35> col:9 error 'int (const char *, ...)'
| `-ParmVarDecl 0x55bd596b4290 <col:15, col:27> col:27 fmt 'const char *'
|-CXXMethodDecl 0x55bd596b4480 <line:201:5, col:35> col:9 fatal 'int (const char *, ...)'
| `-ParmVarDecl 0x55bd596b43e8 <col:15, col:27> col:27 fmt 'const char *'
|-CXXMethodDecl 0x55bd596b4690 <line:204:5, col:61> col:10 ldebug 'void (const String &, const char *, ...)'
| |-ParmVarDecl 0x55bd596b4538 <col:17, col:31> col:31 landmark 'const String &'
| `-ParmVarDecl 0x55bd596b45b8 <col:41, col:53> col:53 fmt 'const char *'
|-CXXMethodDecl 0x55bd596b4868 <line:206:5, col:63> col:10 lmessage 'void (const String &, const char *, ...)'
| |-ParmVarDecl 0x55bd596b4750 <col:19, col:33> col:33 landmark 'const String &'
| `-ParmVarDecl 0x55bd596b47d0 <col:43, col:55> col:55 fmt 'const char *'
|-CXXMethodDecl 0x55bd596b4a88 <line:208:5, col:62> col:9 lwarning 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x55bd596b4928 <col:18, col:32> col:32 landmark 'const String &'
| `-ParmVarDecl 0x55bd596b49a8 <col:42, col:54> col:54 fmt 'const char *'
|-CXXMethodDecl 0x55bd596b4c68 <line:210:5, col:60> col:9 lerror 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x55bd596b4b48 <col:16, col:30> col:30 landmark 'const String &'
| `-ParmVarDecl 0x55bd596b4bc8 <col:40, col:52> col:52 fmt 'const char *'
|-CXXMethodDecl 0x55bd596b4e48 <line:212:5, col:60> col:9 lfatal 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x55bd596b4d28 <col:16, col:30> col:30 landmark 'const String &'
| `-ParmVarDecl 0x55bd596b4da8 <col:40, col:52> col:52 fmt 'const char *'
|-CXXMethodDecl 0x55bd596b4fd0 <line:226:5, col:35> col:9 used xmessage 'int (const String &)'
| `-ParmVarDecl 0x55bd596b4f08 <col:18, col:32> col:32 str 'const String &'
|-CXXMethodDecl 0x55bd596b51a0 <line:232:5, line:234:5> line:232:9 used xmessage 'int (const String &, const String &)'
| |-ParmVarDecl 0x55bd596b5088 <col:18, col:32> col:32 used anno 'const String &'
| |-ParmVarDecl 0x55bd596b5100 <col:38, col:52> col:52 used str 'const String &'
| `-CompoundStmt 0x55bd596ba4b8 <col:57, line:234:5>
|   `-ReturnStmt 0x55bd596ba4a8 <line:233:2, col:41>
|     `-ExprWithCleanups 0x55bd596ba490 <col:9, col:41> 'int'
|       `-CXXMemberCallExpr 0x55bd596ba438 <col:9, col:41> 'int'
|         |-MemberExpr 0x55bd596ba408 <col:9> '<bound member function type>' ->xmessage 0x55bd596b4fd0
|         | `-CXXThisExpr 0x55bd596ba3f8 <col:9> 'ErrorHandler *' implicit this
|         `-MaterializeTemporaryExpr 0x55bd596ba478 <col:18, col:40> 'const String' lvalue
|           `-ImplicitCastExpr 0x55bd596ba460 <col:18, col:40> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x55bd596ba3d8 <col:18, col:40> 'String' (CXXTemporary 0x55bd596ba3d8)
|               `-CallExpr 0x55bd596ba3a0 <col:18, col:40> 'String'
|                 |-ImplicitCastExpr 0x55bd596ba388 <col:18> 'String (*)(const String &, const String &)' <FunctionToPointerDecay>
|                 | `-DeclRefExpr 0x55bd596ba300 <col:18> 'String (const String &, const String &)' lvalue CXXMethod 0x55bd596b81c8 'combine_anno' 'String (const String &, const String &)'
|                 |-DeclRefExpr 0x55bd596ba320 <col:31> 'const String' lvalue ParmVar 0x55bd596b5100 'str' 'const String &'
|                 `-DeclRefExpr 0x55bd596ba340 <col:36> 'const String' lvalue ParmVar 0x55bd596b5088 'anno' 'const String &'
|-CXXMethodDecl 0x55bd596b5480 <line:241:5, line:243:5> line:241:9 xmessage 'int (const String &, const char *, __va_list_tag *)'
| |-ParmVarDecl 0x55bd596b5260 <col:18, col:32> col:32 used anno 'const String &'
| |-ParmVarDecl 0x55bd596b52e0 <col:38, col:50> col:50 used fmt 'const char *'
| |-ParmVarDecl 0x55bd596b5358 <col:55, col:63> col:63 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x55bd596ba748 <col:68, line:243:5>
|   `-ReturnStmt 0x55bd596ba738 <line:242:2, col:41>
|     `-ExprWithCleanups 0x55bd596ba720 <col:9, col:41> 'int'
|       `-CXXMemberCallExpr 0x55bd596ba6c0 <col:9, col:41> 'int'
|         |-MemberExpr 0x55bd596ba690 <col:9> '<bound member function type>' ->xmessage 0x55bd596b51a0
|         | `-CXXThisExpr 0x55bd596ba680 <col:9> 'ErrorHandler *' implicit this
|         |-DeclRefExpr 0x55bd596ba558 <col:18> 'const String' lvalue ParmVar 0x55bd596b5260 'anno' 'const String &'
|         `-MaterializeTemporaryExpr 0x55bd596ba708 <col:24, col:40> 'const String' lvalue
|           `-ImplicitCastExpr 0x55bd596ba6f0 <col:24, col:40> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x55bd596ba660 <col:24, col:40> 'String' (CXXTemporary 0x55bd596ba660)
|               `-CXXMemberCallExpr 0x55bd596ba5f8 <col:24, col:40> 'String'
|                 |-MemberExpr 0x55bd596ba588 <col:24> '<bound member function type>' ->vformat 0x55bd596b6660
|                 | `-CXXThisExpr 0x55bd596ba578 <col:24> 'ErrorHandler *' implicit this
|                 |-ImplicitCastExpr 0x55bd596ba628 <col:32> 'const char *' <LValueToRValue>
|                 | `-DeclRefExpr 0x55bd596ba5b8 <col:32> 'const char *' lvalue ParmVar 0x55bd596b52e0 'fmt' 'const char *'
|                 `-ImplicitCastExpr 0x55bd596ba640 <col:37> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                   `-DeclRefExpr 0x55bd596ba5d8 <col:37> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x55bd596b5358 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55bd596b5720 <line:251:5, line:254:5> line:251:9 used xmessage 'int (const String &, const String &, const String &)'
| |-ParmVarDecl 0x55bd596b5548 <col:18, col:32> col:32 used landmark 'const String &'
| |-ParmVarDecl 0x55bd596b55c0 <col:42, col:56> col:56 used anno 'const String &'
| |-ParmVarDecl 0x55bd596b5638 <line:252:4, col:18> col:18 used str 'const String &'
| `-CompoundStmt 0x55bd596baa88 <col:23, line:254:5>
|   `-ReturnStmt 0x55bd596baa78 <line:253:2, col:71>
|     `-ExprWithCleanups 0x55bd596baa60 <col:9, col:71> 'int'
|       `-CXXMemberCallExpr 0x55bd596baa00 <col:9, col:71> 'int'
|         |-MemberExpr 0x55bd596ba9d0 <col:9> '<bound member function type>' ->xmessage 0x55bd596b51a0
|         | `-CXXThisExpr 0x55bd596ba9c0 <col:9> 'ErrorHandler *' implicit this
|         |-MaterializeTemporaryExpr 0x55bd596baa48 <col:18, col:65> 'const String' lvalue
|         | `-ImplicitCastExpr 0x55bd596baa30 <col:18, col:65> 'const String' <NoOp>
|         |   `-CXXBindTemporaryExpr 0x55bd596ba980 <col:18, col:65> 'String' (CXXTemporary 0x55bd596ba980)
|         |     `-CallExpr 0x55bd596ba918 <col:18, col:65> 'String'
|         |       |-ImplicitCastExpr 0x55bd596ba900 <col:18> 'String (*)(const String &, const String &)' <FunctionToPointerDecay>
|         |       | `-DeclRefExpr 0x55bd596ba7e8 <col:18> 'String (const String &, const String &)' lvalue CXXMethod 0x55bd596b81c8 'combine_anno' 'String (const String &, const String &)'
|         |       |-DeclRefExpr 0x55bd596ba808 <col:31> 'const String' lvalue ParmVar 0x55bd596b55c0 'anno' 'const String &'
|         |       `-MaterializeTemporaryExpr 0x55bd596ba960 <col:37, col:64> 'const String' lvalue
|         |         `-ImplicitCastExpr 0x55bd596ba948 <col:37, col:64> 'const String' <NoOp>
|         |           `-CXXBindTemporaryExpr 0x55bd596ba8e0 <col:37, col:64> 'String' (CXXTemporary 0x55bd596ba8e0)
|         |             `-CallExpr 0x55bd596ba8b0 <col:37, col:64> 'String'
|         |               |-ImplicitCastExpr 0x55bd596ba898 <col:37> 'String (*)(const String &)' <FunctionToPointerDecay>
|         |               | `-DeclRefExpr 0x55bd596ba828 <col:37> 'String (const String &)' lvalue CXXMethod 0x55bd596b8818 'make_landmark_anno' 'String (const String &)'
|         |               `-DeclRefExpr 0x55bd596ba848 <col:56> 'const String' lvalue ParmVar 0x55bd596b5548 'landmark' 'const String &'
|         `-DeclRefExpr 0x55bd596ba9a0 <col:68> 'const String' lvalue ParmVar 0x55bd596b5638 'str' 'const String &'
|-CXXMethodDecl 0x55bd596b5aa0 <line:264:5, line:267:5> line:264:9 xmessage 'int (const String &, const String &, const char *, __va_list_tag *)'
| |-ParmVarDecl 0x55bd596b57e8 <col:18, col:32> col:32 used landmark 'const String &'
| |-ParmVarDecl 0x55bd596b5860 <col:42, col:56> col:56 used anno 'const String &'
| |-ParmVarDecl 0x55bd596b58e0 <line:265:4, col:16> col:16 used fmt 'const char *'
| |-ParmVarDecl 0x55bd596b5958 <col:21, col:29> col:29 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x55bd596bad40 <col:34, line:267:5>
|   `-ReturnStmt 0x55bd596bad30 <line:266:2, col:51>
|     `-ExprWithCleanups 0x55bd596bad18 <col:9, col:51> 'int'
|       `-CXXMemberCallExpr 0x55bd596bacb0 <col:9, col:51> 'int'
|         |-MemberExpr 0x55bd596bac80 <col:9> '<bound member function type>' ->xmessage 0x55bd596b5720
|         | `-CXXThisExpr 0x55bd596bac70 <col:9> 'ErrorHandler *' implicit this
|         |-DeclRefExpr 0x55bd596bab28 <col:18> 'const String' lvalue ParmVar 0x55bd596b57e8 'landmark' 'const String &'
|         |-DeclRefExpr 0x55bd596bab48 <col:28> 'const String' lvalue ParmVar 0x55bd596b5860 'anno' 'const String &'
|         `-MaterializeTemporaryExpr 0x55bd596bad00 <col:34, col:50> 'const String' lvalue
|           `-ImplicitCastExpr 0x55bd596bace8 <col:34, col:50> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x55bd596bac50 <col:34, col:50> 'String' (CXXTemporary 0x55bd596bac50)
|               `-CXXMemberCallExpr 0x55bd596babe8 <col:34, col:50> 'String'
|                 |-MemberExpr 0x55bd596bab78 <col:34> '<bound member function type>' ->vformat 0x55bd596b6660
|                 | `-CXXThisExpr 0x55bd596bab68 <col:34> 'ErrorHandler *' implicit this
|                 |-ImplicitCastExpr 0x55bd596bac18 <col:42> 'const char *' <LValueToRValue>
|                 | `-DeclRefExpr 0x55bd596baba8 <col:42> 'const char *' lvalue ParmVar 0x55bd596b58e0 'fmt' 'const char *'
|                 `-ImplicitCastExpr 0x55bd596bac30 <col:47> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                   `-DeclRefExpr 0x55bd596babc8 <col:47> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x55bd596b5958 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55bd596b5bb0 <line:286:5, line:288:5> line:286:9 nerrors 'int () const'
| `-CompoundStmt 0x55bd596badc0 <col:25, line:288:5>
|   `-ReturnStmt 0x55bd596badb0 <line:287:2, col:9>
|     `-ImplicitCastExpr 0x55bd596bad98 <col:9> 'int' <LValueToRValue>
|       `-MemberExpr 0x55bd596bad68 <col:9> 'const int' lvalue ->_nerrors 0x55bd596b9998
|         `-CXXThisExpr 0x55bd596bad58 <col:9> 'const ErrorHandler *' implicit this
|-CXXMethodDecl 0x55bd596b5dc0 <line:349:5, col:66> col:19 xformat 'String (int, const char *, ...)' static
| |-ParmVarDecl 0x55bd596b5c68 <col:27, col:31> col:31 default_flags 'int'
| `-ParmVarDecl 0x55bd596b5ce8 <col:46, col:58> col:58 fmt 'const char *'
|-CXXMethodDecl 0x55bd596b60a8 <line:351:5, col:75> col:19 used vxformat 'String (int, const char *, __va_list_tag *)' static
| |-ParmVarDecl 0x55bd596b5e88 <col:28, col:32> col:32 default_flags 'int'
| |-ParmVarDecl 0x55bd596b5f08 <col:47, col:59> col:59 fmt 'const char *'
| `-ParmVarDecl 0x55bd596b5f80 <col:64, col:72> col:72 val '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55bd596b6240 <line:353:5, col:47> col:19 xformat 'String (const char *, ...)' static
| `-ParmVarDecl 0x55bd596b6178 <col:27, col:39> col:39 fmt 'const char *'
|-CXXMethodDecl 0x55bd596b6488 <line:355:5, line:357:5> line:355:19 vxformat 'String (const char *, __va_list_tag *)' static
| |-ParmVarDecl 0x55bd596b6300 <col:28, col:40> col:40 used fmt 'const char *'
| |-ParmVarDecl 0x55bd596b6378 <col:45, col:53> col:53 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x55bd596bb020 <col:58, line:357:5>
|   `-ReturnStmt 0x55bd596bb010 <line:356:2, col:29>
|     `-ExprWithCleanups 0x55bd596baff8 <col:9, col:29> 'String'
|       `-CXXConstructExpr 0x55bd596bafc8 <col:9, col:29> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x55bd596bafb0 <col:9, col:29> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x55bd596baf90 <col:9, col:29> 'String' (CXXTemporary 0x55bd596baf90)
|             `-CallExpr 0x55bd596baf20 <col:9, col:29> 'String'
|               |-ImplicitCastExpr 0x55bd596baf08 <col:9> 'String (*)(int, const char *, __va_list_tag *)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x55bd596bae88 <col:9> 'String (int, const char *, __va_list_tag *)' lvalue CXXMethod 0x55bd596b60a8 'vxformat' 'String (int, const char *, __va_list_tag *)'
|               |-IntegerLiteral 0x55bd596bae28 <col:18> 'int' 0
|               |-ImplicitCastExpr 0x55bd596baf58 <col:21> 'const char *' <LValueToRValue>
|               | `-DeclRefExpr 0x55bd596bae48 <col:21> 'const char *' lvalue ParmVar 0x55bd596b6300 'fmt' 'const char *'
|               `-ImplicitCastExpr 0x55bd596baf70 <col:26> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                 `-DeclRefExpr 0x55bd596bae68 <col:26> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x55bd596b6378 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55bd596b6660 <line:369:5, col:56> col:20 used vformat 'String (const char *, __va_list_tag *)' virtual
| |-ParmVarDecl 0x55bd596b6550 <col:28, col:40> col:40 fmt 'const char *'
| `-ParmVarDecl 0x55bd596b65c8 <col:45, col:53> col:53 val '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55bd596b67b8 <line:379:5, col:39> col:12 format 'String (const char *, ...)'
| `-ParmVarDecl 0x55bd596b6728 <col:19, col:31> col:31 fmt 'const char *'
|-CXXMethodDecl 0x55bd596b6900 <line:393:5, col:46> col:20 decorate 'String (const String &)' virtual
| `-ParmVarDecl 0x55bd596b6870 <col:29, col:43> col:43 str 'const String &'
|-CXXMethodDecl 0x55bd596b7bd0 <line:424:5, col:69> col:19 emit 'void *(const String &, void *, bool)' virtual
| |-ParmVarDecl 0x55bd596b69b8 <col:24, col:38> col:38 str 'const String &'
| |-ParmVarDecl 0x55bd596b6a38 <col:43, col:49> col:49 user_data 'void *'
| `-ParmVarDecl 0x55bd596b6ab0 <col:60, col:65> col:65 more 'bool'
|-CXXMethodDecl 0x55bd596b7d30 <line:438:5, line:441:5> line:438:18 account 'void (int)' virtual
| |-ParmVarDecl 0x55bd596b7ca0 <col:26, col:30> col:30 used level 'int'
| `-CompoundStmt 0x55bd596bb138 <col:37, line:441:5>
|   `-IfStmt 0x55bd596bb120 <line:439:2, line:440:8>
|     |-BinaryOperator 0x55bd596bb0a8 <line:439:6, col:15> 'bool' '<='
|     | |-ImplicitCastExpr 0x55bd596bb078 <col:6> 'int' <LValueToRValue>
|     | | `-DeclRefExpr 0x55bd596bb038 <col:6> 'int' lvalue ParmVar 0x55bd596b7ca0 'level' 'int'
|     | `-ImplicitCastExpr 0x55bd596bb090 <col:15> 'int' <IntegralCast>
|     |   `-DeclRefExpr 0x55bd596bb058 <col:15> 'ErrorHandler::Level' EnumConstant 0x55bd596b2d80 'el_error' 'ErrorHandler::Level'
|     `-UnaryOperator 0x55bd596bb108 <line:440:6, col:8> 'int' lvalue prefix '++'
|       `-MemberExpr 0x55bd596bb0d8 <col:8> 'int' lvalue ->_nerrors 0x55bd596b9998
|         `-CXXThisExpr 0x55bd596bb0c8 <col:8> 'ErrorHandler *' implicit this
|-CXXMethodDecl 0x55bd596b7df8 <line:446:5, line:448:5> line:446:18 clear 'void ()' virtual
| `-CompoundStmt 0x55bd596bb1d0 <col:26, line:448:5>
|   `-BinaryOperator 0x55bd596bb1b0 <line:447:2, col:13> 'int' lvalue '='
|     |-MemberExpr 0x55bd596bb160 <col:2> 'int' lvalue ->_nerrors 0x55bd596b9998
|     | `-CXXThisExpr 0x55bd596bb150 <col:2> 'ErrorHandler *' implicit this
|     `-IntegerLiteral 0x55bd596bb190 <col:13> 'int' 0
|-CXXMethodDecl 0x55bd596b7fc0 <line:466:5, col:66> col:19 used make_anno 'String (const char *, const String &)' static
| |-ParmVarDecl 0x55bd596b7eb0 <col:29, col:41> col:41 name 'const char *'
| `-ParmVarDecl 0x55bd596b7f28 <col:47, col:61> col:61 value 'const String &'
|-CXXMethodDecl 0x55bd596b81c8 <line:482:5, col:69> col:19 used combine_anno 'String (const String &, const String &)' static
| |-ParmVarDecl 0x55bd596b8080 <col:32, col:46> col:46 str 'const String &'
| `-ParmVarDecl 0x55bd596b80f8 <col:51, col:65> col:65 anno 'const String &'
|-CXXMethodDecl 0x55bd596b8478 <line:516:5, line:517:68> line:516:24 parse_anno 'const char *(const String &, const char *, const char *, ...)' static
| |-ParmVarDecl 0x55bd596b8288 <col:35, col:49> col:49 str 'const String &'
| |-ParmVarDecl 0x55bd596b8308 <line:517:3, col:15> col:15 begin 'const char *'
| |-ParmVarDecl 0x55bd596b8388 <col:22, col:34> col:34 end 'const char *'
| `-SentinelAttr 0x55bd596b8530 <col:59> 0 0
|-CXXMethodDecl 0x55bd596b86c8 <line:527:5, line:534:5> line:527:24 skip_anno 'const char *(const char *, const char *)' static
| |-ParmVarDecl 0x55bd596b85a8 <col:34, col:46> col:46 used begin 'const char *'
| |-ParmVarDecl 0x55bd596b8628 <col:53, col:65> col:65 used end 'const char *'
| `-CompoundStmt 0x55bd596bb840 <col:70, line:534:5>
|   |-DeclStmt 0x55bd596bb340 <line:528:2, col:20>
|   | |-VarDecl 0x55bd596bb1f8 <col:2, col:9> col:9 used name 'String' callinit destroyed
|   | | `-CXXConstructExpr 0x55bd596bb260 <col:9> 'String' 'void ()'
|   | `-VarDecl 0x55bd596bb298 <col:2, col:15> col:15 used value 'String' callinit destroyed
|   |   `-CXXConstructExpr 0x55bd596bb300 <col:15> 'String' 'void ()'
|   |-DeclStmt 0x55bd596bb410 <line:529:2, col:23>
|   | `-VarDecl 0x55bd596bb370 <col:2, col:18> col:14 used x 'const char *' cinit
|   |   `-ImplicitCastExpr 0x55bd596bb3f8 <col:18> 'const char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x55bd596bb3d8 <col:18> 'const char *' lvalue ParmVar 0x55bd596b85a8 'begin' 'const char *'
|   |-DoStmt 0x55bd596bb7d8 <line:530:2, line:532:15>
|   | |-CompoundStmt 0x55bd596bb708 <line:530:5, line:532:2>
|   | | `-ExprWithCleanups 0x55bd596bb6f0 <line:531:6, col:58> 'const char *' lvalue
|   | |   `-BinaryOperator 0x55bd596bb6d0 <col:6, col:58> 'const char *' lvalue '='
|   | |     |-DeclRefExpr 0x55bd596bb428 <col:6> 'const char *' lvalue Var 0x55bd596bb370 'x' 'const char *'
|   | |     `-CallExpr 0x55bd596bb620 <col:10, col:58> 'const char *'
|   | |       |-ImplicitCastExpr 0x55bd596bb608 <col:10> 'const char *(*)(const String &, const char *, const char *, String *, String *, bool)' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x55bd596bb5c0 <col:10> 'const char *(const String &, const char *, const char *, String *, String *, bool)' lvalue CXXMethod 0x55bd596b9e70 'skip_anno' 'const char *(const String &, const char *, const char *, String *, String *, bool)'
|   | |       |-MaterializeTemporaryExpr 0x55bd596bb688 <col:20, col:27> 'const String' lvalue
|   | |       | `-ImplicitCastExpr 0x55bd596bb670 <col:20, col:27> 'const String' <NoOp>
|   | |       |   `-CXXBindTemporaryExpr 0x55bd596bb4e0 <col:20, col:27> 'String' (CXXTemporary 0x55bd596bb4e0)
|   | |       |     `-CXXTemporaryObjectExpr 0x55bd596bb4a8 <col:20, col:27> 'String' 'void ()'
|   | |       |-ImplicitCastExpr 0x55bd596bb6a0 <col:30> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x55bd596bb500 <col:30> 'const char *' lvalue Var 0x55bd596bb370 'x' 'const char *'
|   | |       |-ImplicitCastExpr 0x55bd596bb6b8 <col:33> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x55bd596bb520 <col:33> 'const char *' lvalue ParmVar 0x55bd596b8628 'end' 'const char *'
|   | |       |-UnaryOperator 0x55bd596bb560 <col:38, col:39> 'String *' prefix '&' cannot overflow
|   | |       | `-DeclRefExpr 0x55bd596bb540 <col:39> 'String' lvalue Var 0x55bd596bb1f8 'name' 'String'
|   | |       |-UnaryOperator 0x55bd596bb598 <col:45, col:46> 'String *' prefix '&' cannot overflow
|   | |       | `-DeclRefExpr 0x55bd596bb578 <col:46> 'String' lvalue Var 0x55bd596bb298 'value' 'String'
|   | |       `-CXXBoolLiteralExpr 0x55bd596bb5b0 <col:53> 'bool' false
|   | `-ImplicitCastExpr 0x55bd596bb7c0 <line:532:11> 'bool' <MemberPointerToBoolean>
|   |   `-ImplicitCastExpr 0x55bd596bb7a8 <col:11> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|   |     `-CXXMemberCallExpr 0x55bd596bb788 <col:11> 'String::unspecified_bool_type':'int (String::*)() const'
|   |       `-MemberExpr 0x55bd596bb758 <col:11> '<bound member function type>' .operator int (String::*)() const 0x55bd59296d58
|   |         `-ImplicitCastExpr 0x55bd596bb740 <col:11> 'const String' lvalue <NoOp>
|   |           `-DeclRefExpr 0x55bd596bb720 <col:11> 'String' lvalue Var 0x55bd596bb1f8 'name' 'String'
|   `-ReturnStmt 0x55bd596bb830 <line:533:2, col:9>
|     `-ImplicitCastExpr 0x55bd596bb818 <col:9> 'const char *' <LValueToRValue>
|       `-DeclRefExpr 0x55bd596bb7f8 <col:9> 'const char *' lvalue Var 0x55bd596bb370 'x' 'const char *'
|-CXXMethodDecl 0x55bd596b8818 <line:543:5, line:550:5> line:543:19 used make_landmark_anno 'String (const String &)' static
| |-ParmVarDecl 0x55bd596b8788 <col:38, col:52> col:52 used x 'const String &'
| `-CompoundStmt 0x55bd596bbe48 <col:55, line:550:5>
|   `-IfStmt 0x55bd596bbe20 <line:544:2, line:549:20> has_else
|     |-BinaryOperator 0x55bd596bba80 <line:544:6, col:19> 'bool' '&&'
|     | |-ImplicitCastExpr 0x55bd596bba68 <col:6> 'bool' <MemberPointerToBoolean>
|     | | `-ImplicitCastExpr 0x55bd596bba50 <col:6> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|     | |   `-CXXMemberCallExpr 0x55bd596bba30 <col:6> 'String::unspecified_bool_type':'int (String::*)() const'
|     | |     `-MemberExpr 0x55bd596bba00 <col:6> '<bound member function type>' .operator int (String::*)() const 0x55bd59296d58
|     | |       `-DeclRefExpr 0x55bd596bb8a0 <col:6> 'const String' lvalue ParmVar 0x55bd596b8788 'x' 'const String &'
|     | `-BinaryOperator 0x55bd596bb9e0 <col:11, col:19> 'bool' '=='
|     |   |-ImplicitCastExpr 0x55bd596bb9b0 <col:11, col:14> 'int' <IntegralCast>
|     |   | `-CXXOperatorCallExpr 0x55bd596bb960 <col:11, col:14> 'char'
|     |   |   |-ImplicitCastExpr 0x55bd596bb948 <col:12, col:14> 'char (*)(int) const' <FunctionToPointerDecay>
|     |   |   | `-DeclRefExpr 0x55bd596bb900 <col:12, col:14> 'char (int) const' lvalue CXXMethod 0x55bd592b0590 'operator[]' 'char (int) const'
|     |   |   |-DeclRefExpr 0x55bd596bb8c0 <col:11> 'const String' lvalue ParmVar 0x55bd596b8788 'x' 'const String &'
|     |   |   `-IntegerLiteral 0x55bd596bb8e0 <col:13> 'int' 0
|     |   `-ImplicitCastExpr 0x55bd596bb9c8 <col:19> 'int' <IntegralCast>
|     |     `-CharacterLiteral 0x55bd596bb998 <col:19> 'char' 123
|     |-ReturnStmt 0x55bd596bbaf0 <line:545:6, col:13>
|     | `-CXXConstructExpr 0x55bd596bbac0 <col:13> 'String' 'void (const String &)'
|     |   `-DeclRefExpr 0x55bd596bbaa0 <col:13> 'const String' lvalue ParmVar 0x55bd596b8788 'x' 'const String &'
|     `-IfStmt 0x55bd596bbdf8 <line:546:7, line:549:20> has_else
|       |-ImplicitCastExpr 0x55bd596bbb88 <line:546:11> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x55bd596bbb70 <col:11> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x55bd596bbb50 <col:11> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x55bd596bbb20 <col:11> '<bound member function type>' .operator int (String::*)() const 0x55bd59296d58
|       |       `-DeclRefExpr 0x55bd596bbb00 <col:11> 'const String' lvalue ParmVar 0x55bd596b8788 'x' 'const String &'
|       |-ReturnStmt 0x55bd596bbd10 <line:547:6, col:29>
|       | `-ExprWithCleanups 0x55bd596bbcf8 <col:13, col:29> 'String'
|       |   `-CXXConstructExpr 0x55bd596bbcc8 <col:13, col:29> 'String' 'void (String &&)' elidable
|       |     `-MaterializeTemporaryExpr 0x55bd596bbcb0 <col:13, col:29> 'String' xvalue
|       |       `-CXXBindTemporaryExpr 0x55bd596bbc90 <col:13, col:29> 'String' (CXXTemporary 0x55bd596bbc90)
|       |         `-CallExpr 0x55bd596bbc40 <col:13, col:29> 'String'
|       |           |-ImplicitCastExpr 0x55bd596bbc28 <col:13> 'String (*)(const char *, const String &)' <FunctionToPointerDecay>
|       |           | `-DeclRefExpr 0x55bd596bbba0 <col:13> 'String (const char *, const String &)' lvalue CXXMethod 0x55bd596b7fc0 'make_anno' 'String (const char *, const String &)'
|       |           |-ImplicitCastExpr 0x55bd596bbc70 <col:23> 'const char *' <ArrayToPointerDecay>
|       |           | `-StringLiteral 0x55bd596bbbc0 <col:23> 'const char [2]' lvalue "l"
|       |           `-DeclRefExpr 0x55bd596bbbe0 <col:28> 'const String' lvalue ParmVar 0x55bd596b8788 'x' 'const String &'
|       `-ReturnStmt 0x55bd596bbde8 <line:549:6, col:20>
|         `-ExprWithCleanups 0x55bd596bbdd0 <col:13, col:20> 'String'
|           `-CXXConstructExpr 0x55bd596bbda0 <col:13, col:20> 'String' 'void (String &&)' elidable
|             `-MaterializeTemporaryExpr 0x55bd596bbd88 <col:13, col:20> 'String' xvalue
|               `-CXXBindTemporaryExpr 0x55bd596bbd68 <col:13, col:20> 'String' (CXXTemporary 0x55bd596bbd68)
|                 `-CXXTemporaryObjectExpr 0x55bd596bbd30 <col:13, col:20> 'String' 'void ()'
|-CXXMethodDecl 0x55bd596b89e0 <line:559:5, col:76> col:19 clean_landmark 'String (const String &, bool)' static
| |-ParmVarDecl 0x55bd596b88d0 <col:34, col:48> col:48 landmark 'const String &'
| `-ParmVarDecl 0x55bd596b8948 <col:58, col:71> col:63 colon 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55bd596ba118 <col:71> 'bool' false
|-CXXRecordDecl 0x55bd596b8a90 <line:563:5, col:12> col:12 referenced struct Conversion
|-TypedefDecl 0x55bd596b8d88 <line:564:5, col:60> col:22 referenced ConversionFunction 'String (*)(int, __va_list_tag *)'
| `-PointerType 0x55bd596b8d20 'String (*)(int, __va_list_tag *)'
|   `-ParenType 0x55bd596b8cc0 'String (int, __va_list_tag *)' sugar
|     `-FunctionProtoType 0x55bd596b8c80 'String (int, __va_list_tag *)' cdecl
|       |-RecordType 0x55bd592935f0 'String'
|       | `-CXXRecord 0x55bd59293560 'String'
|       |-BuiltinType 0x55bd58f62370 'int'
|       `-DecayedType 0x55bd5944afe0 '__va_list_tag *' sugar
|         |-TypedefType 0x55bd5944afb0 'va_list' sugar
|         | |-Typedef 0x55bd59184480 'va_list'
|         | `-TypedefType 0x55bd59184430 '__gnuc_va_list' sugar
|         |   |-Typedef 0x55bd590bc058 '__gnuc_va_list'
|         |   `-TypedefType 0x55bd590bbfc0 '__builtin_va_list' sugar
|         |     |-Typedef 0x55bd58fa3bd8 '__builtin_va_list'
|         |     `-ConstantArrayType 0x55bd58fa3b80 '__va_list_tag [1]' 1 
|         |       `-RecordType 0x55bd58f630c0 '__va_list_tag'
|         |         `-CXXRecord 0x55bd58f63028 '__va_list_tag'
|         `-PointerType 0x55bd59189d20 '__va_list_tag *'
|           `-RecordType 0x55bd58f630c0 '__va_list_tag'
|             `-CXXRecord 0x55bd58f63028 '__va_list_tag'
|-EnumDecl 0x55bd596b8de0 <line:565:5, line:576:5> line:565:10 ConversionFlags
| |-EnumConstantDecl 0x55bd596b8ee0 <line:566:2, col:16> col:2 cf_zero_pad 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55bd596b9440 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55bd596b8ec0 <col:16> 'int' Int: 1
| |     `-IntegerLiteral 0x55bd596b8ea0 <col:16> 'int' 1
| |-EnumConstantDecl 0x55bd596b8f70 <line:567:2, col:21> col:2 cf_plus_positive 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55bd596b9458 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55bd596b8f50 <col:21> 'int' Int: 2
| |     `-IntegerLiteral 0x55bd596b8f30 <col:21> 'int' 2
| |-EnumConstantDecl 0x55bd596b9000 <line:568:2, col:22> col:2 cf_space_positive 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55bd596b9470 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55bd596b8fe0 <col:22> 'int' Int: 4
| |     `-IntegerLiteral 0x55bd596b8fc0 <col:22> 'int' 4
| |-EnumConstantDecl 0x55bd596b9090 <line:569:2, col:17> col:2 cf_left_just 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55bd596b9488 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55bd596b9070 <col:17> 'int' Int: 8
| |     `-IntegerLiteral 0x55bd596b9050 <col:17> 'int' 8
| |-EnumConstantDecl 0x55bd596b9120 <line:570:2, col:22> col:2 cf_alternate_form 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55bd596b94a0 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55bd596b9100 <col:22> 'int' Int: 16
| |     `-IntegerLiteral 0x55bd596b90e0 <col:22> 'int' 16
| |-EnumConstantDecl 0x55bd596b91b0 <line:571:2, col:19> col:2 cf_singlequote 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55bd596b94b8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55bd596b9190 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x55bd596b9170 <col:19> 'int' 32
| |-EnumConstantDecl 0x55bd596b9240 <line:572:2, col:17> col:2 cf_uppercase 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55bd596b94d0 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55bd596b9220 <col:17> 'int' Int: 64
| |     `-IntegerLiteral 0x55bd596b9200 <col:17> 'int' 64
| |-EnumConstantDecl 0x55bd596b92d0 <line:573:2, col:14> col:2 cf_signed 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55bd596b94e8 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55bd596b92b0 <col:14> 'int' Int: 128
| |     `-IntegerLiteral 0x55bd596b9290 <col:14> 'int' 128
| |-EnumConstantDecl 0x55bd596b9360 <line:574:2, col:16> col:2 cf_negative 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55bd596b9500 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55bd596b9340 <col:16> 'int' Int: 256
| |     `-IntegerLiteral 0x55bd596b9320 <col:16> 'int' 256
| `-EnumConstantDecl 0x55bd596b93f0 <line:575:2, col:12> col:2 cf_utf8 'ErrorHandler::ConversionFlags'
|   `-ImplicitCastExpr 0x55bd596b9518 <col:12> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55bd596b93d0 <col:12> 'int' Int: 1024
|       `-IntegerLiteral 0x55bd596b93b0 <col:12> 'int' 1024
|-CXXMethodDecl 0x55bd596b9728 <line:577:5, col:82> col:24 add_conversion 'ErrorHandler::Conversion *(const String &, ErrorHandler::ConversionFunction)' static
| |-ParmVarDecl 0x55bd596b9540 <col:39, col:53> col:53 name 'const String &'
| `-ParmVarDecl 0x55bd596b95e0 <col:59, col:78> col:78 func 'ErrorHandler::ConversionFunction':'String (*)(int, __va_list_tag *)'
|-CXXMethodDecl 0x55bd596b98b0 <line:578:5, col:56> col:16 remove_conversion 'int (ErrorHandler::Conversion *)' static
| `-ParmVarDecl 0x55bd596b97e8 <col:34, col:46> col:46 conversion 'ErrorHandler::Conversion *'
|-AccessSpecDecl 0x55bd596b9958 <line:580:3, col:10> col:3 private
|-FieldDecl 0x55bd596b9998 <line:582:5, col:9> col:9 referenced _nerrors 'int'
|-VarDecl 0x55bd596b99f8 <line:584:5, col:26> col:26 used the_default_handler 'ErrorHandler *' static
|-VarDecl 0x55bd596b9a70 <line:585:5, col:26> col:26 used the_silent_handler 'ErrorHandler *' static
|-CXXMethodDecl 0x55bd596b9e70 <line:587:5, line:590:14> line:587:24 used skip_anno 'const char *(const String &, const char *, const char *, String *, String *, bool)' static
| |-ParmVarDecl 0x55bd596b9ae8 <col:34, col:48> col:48 str 'const String &'
| |-ParmVarDecl 0x55bd596b9b68 <line:588:6, col:18> col:18 begin 'const char *'
| |-ParmVarDecl 0x55bd596b9be8 <col:25, col:37> col:37 end 'const char *'
| |-ParmVarDecl 0x55bd596b9c60 <line:589:6, col:14> col:14 name_result 'String *'
| |-ParmVarDecl 0x55bd596b9cd8 <col:27, col:35> col:35 value_result 'String *'
| `-ParmVarDecl 0x55bd596b9d50 <line:590:6, col:11> col:11 raw 'bool'
|-CXXMethodDecl 0x55bd596b9f98 <line:90:7> col:7 implicit operator= 'ErrorHandler &(const ErrorHandler &)' inline default noexcept-unevaluated 0x55bd596b9f98
| `-ParmVarDecl 0x55bd596ba0a8 <col:7> col:7 'const ErrorHandler &'
`-CXXConstructorDecl 0x55bd596bc1a8 <col:7> col:7 implicit constexpr ErrorHandler 'void (const ErrorHandler &)' inline default noexcept-unevaluated 0x55bd596bc1a8
  `-ParmVarDecl 0x55bd596bc2b8 <col:7> col:7 'const ErrorHandler &'

Layout: <CGRecordLayout
  LLVMType:%class.ErrorHandler = type <{ i32 (...)**, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.ErrorHandler.base = type <{ i32 (...)**, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55bd594c36b0 <../dummy_inc/click/handler.hh:290:5, line:293:5> line:290:5 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x55bd594c3800 <line:291:2, col:18> col:18 h 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
|-FieldDecl 0x55bd594c3880 <line:292:2, col:22> col:22 referenced r 'ReadHandlerCallback':'String (*)(Element *, void *)'
|-CXXConstructorDecl 0x55bd594c4678 <line:290:5> col:5 implicit constexpr  'void (const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &)' inline default trivial noexcept-unevaluated 0x55bd594c4678
| `-ParmVarDecl 0x55bd594c4788 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &'
|-CXXConstructorDecl 0x55bd594c4828 <col:5> col:5 implicit constexpr  'void (Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&)' inline default trivial noexcept-unevaluated 0x55bd594c4828
| `-ParmVarDecl 0x55bd594c4938 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&'
|-CXXDestructorDecl 0x55bd594c49a8 <col:5> col:5 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x55bd594c49a8
|-CXXMethodDecl 0x55bd594c5278 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &(const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &)' inline default trivial noexcept-unevaluated 0x55bd594c5278
| `-ParmVarDecl 0x55bd594c5388 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &'
|-CXXMethodDecl 0x55bd594c53f8 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &(Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&)' inline default trivial noexcept-unevaluated 0x55bd594c53f8
| `-ParmVarDecl 0x55bd594c5508 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&'
`-CXXConstructorDecl 0x55bd596b2368 <col:5> col:5 implicit used  'void () noexcept' inline default trivial
  `-CompoundStmt 0x55bd596b2440 <col:5>

Layout: <CGRecordLayout
  LLVMType:%union.anon = type { i32 (i32, %class.String*, %class.Element*, %class.Handler*, %class.ErrorHandler*)* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55bd594c39b0 <../dummy_inc/click/handler.hh:294:5, line:297:5> line:294:5 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x55bd594c3ad8 <line:295:2, col:18> col:18 h 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
|-FieldDecl 0x55bd594c3b60 <line:296:2, col:23> col:23 referenced w 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
|-CXXConstructorDecl 0x55bd594c4ad8 <line:294:5> col:5 implicit constexpr  'void (const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &)' inline default trivial noexcept-unevaluated 0x55bd594c4ad8
| `-ParmVarDecl 0x55bd594c4be8 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &'
|-CXXConstructorDecl 0x55bd594c4c88 <col:5> col:5 implicit constexpr  'void (Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&)' inline default trivial noexcept-unevaluated 0x55bd594c4c88
| `-ParmVarDecl 0x55bd594c4d98 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&'
|-CXXDestructorDecl 0x55bd594c4e08 <col:5> col:5 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x55bd594c4e08
|-CXXMethodDecl 0x55bd594c55a8 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &(const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &)' inline default trivial noexcept-unevaluated 0x55bd594c55a8
| `-ParmVarDecl 0x55bd594c56b8 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &'
|-CXXMethodDecl 0x55bd594c5728 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &(Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&)' inline default trivial noexcept-unevaluated 0x55bd594c5728
| `-ParmVarDecl 0x55bd594c5838 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&'
`-CXXConstructorDecl 0x55bd596b24a0 <col:5> col:5 implicit used  'void () noexcept' inline default trivial
  `-CompoundStmt 0x55bd596b2580 <col:5>

Layout: <CGRecordLayout
  LLVMType:%union.anon.11 = type { i32 (i32, %class.String*, %class.Element*, %class.Handler*, %class.ErrorHandler*)* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55bd594bf038 prev 0x55bd594be4d0 <../dummy_inc/click/handler.hh:19:1, line:313:1> line:19:7 class Handler definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x55bd594bf130 <col:1, col:7> col:7 implicit referenced class Handler
|-AccessSpecDecl 0x55bd594bf1c0 <col:17, col:23> col:17 public
|-EnumDecl 0x55bd594bf1e8 <line:21:5, line:59:5> line:21:10 Flags
| |-EnumConstantDecl 0x55bd594bf2f0 <line:22:2, col:11> col:2 referenced f_read 'Handler::Flags'
| | `-ImplicitCastExpr 0x55bd594c0040 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55bd594bf2d0 <col:11> 'int' Int: 1
| |     `-IntegerLiteral 0x55bd594bf2b0 <col:11> 'int' 1
| |-EnumConstantDecl 0x55bd594bf380 <line:23:2, col:12> col:2 referenced f_write 'Handler::Flags'
| | `-ImplicitCastExpr 0x55bd594c0058 <col:12> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55bd594bf360 <col:12> 'int' Int: 2
| |     `-IntegerLiteral 0x55bd594bf340 <col:12> 'int' 2
| |-EnumConstantDecl 0x55bd594bf410 <line:24:2, col:17> col:2 referenced f_read_param 'Handler::Flags'
| | `-ImplicitCastExpr 0x55bd594c0070 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55bd594bf3f0 <col:17> 'int' Int: 4
| |     `-IntegerLiteral 0x55bd594bf3d0 <col:17> 'int' 4
| |-EnumConstantDecl 0x55bd594bf4a0 <line:25:2, col:16> col:2 referenced f_exclusive 'Handler::Flags'
| | `-ImplicitCastExpr 0x55bd594c0088 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55bd594bf480 <col:16> 'int' Int: 0
| |     `-IntegerLiteral 0x55bd594bf460 <col:16> 'int' 0
| |-EnumConstantDecl 0x55bd594bf530 <line:28:2, col:19> col:2 referenced f_nonexclusive 'Handler::Flags'
| | `-ImplicitCastExpr 0x55bd594c00a0 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55bd594bf510 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x55bd594bf4f0 <col:19> 'int' 32
| |-EnumConstantDecl 0x55bd594bf5c0 <line:31:2, col:10> col:2 referenced f_raw 'Handler::Flags'
| | `-ImplicitCastExpr 0x55bd594c00b8 <col:10> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55bd594bf5a0 <col:10> 'int' Int: 64
| |     `-IntegerLiteral 0x55bd594bf580 <col:10> 'int' 64
| |-EnumConstantDecl 0x55bd594bf650 <line:32:2, col:19> col:2 referenced f_read_private 'Handler::Flags'
| | `-ImplicitCastExpr 0x55bd594c00d0 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55bd594bf630 <col:19> 'int' Int: 128
| |     `-IntegerLiteral 0x55bd594bf610 <col:19> 'int' 128
| |-EnumConstantDecl 0x55bd594bf6e0 <line:34:2, col:20> col:2 referenced f_write_private 'Handler::Flags'
| | `-ImplicitCastExpr 0x55bd594c00e8 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55bd594bf6c0 <col:20> 'int' Int: 256
| |     `-IntegerLiteral 0x55bd594bf6a0 <col:20> 'int' 256
| |-EnumConstantDecl 0x55bd594bf770 <line:36:2, col:17> col:2 referenced f_deprecated 'Handler::Flags'
| | `-ImplicitCastExpr 0x55bd594c0100 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55bd594bf750 <col:17> 'int' Int: 512
| |     `-IntegerLiteral 0x55bd594bf730 <col:17> 'int' 512
| |-EnumConstantDecl 0x55bd594bf800 <line:38:2, col:15> col:2 referenced f_uncommon 'Handler::Flags'
| | `-ImplicitCastExpr 0x55bd594c0118 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55bd594bf7e0 <col:15> 'int' Int: 1024
| |     `-IntegerLiteral 0x55bd594bf7c0 <col:15> 'int' 1024
| |-EnumConstantDecl 0x55bd594bf890 <line:40:2, col:11> col:2 referenced f_calm 'Handler::Flags'
| | `-ImplicitCastExpr 0x55bd594c0130 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55bd594bf870 <col:11> 'int' Int: 2048
| |     `-IntegerLiteral 0x55bd594bf850 <col:11> 'int' 2048
| |-EnumConstantDecl 0x55bd594bf920 <line:41:2, col:16> col:2 referenced f_expensive 'Handler::Flags'
| | `-ImplicitCastExpr 0x55bd594c0148 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55bd594bf900 <col:16> 'int' Int: 4096
| |     `-IntegerLiteral 0x55bd594bf8e0 <col:16> 'int' 4096
| |-EnumConstantDecl 0x55bd594bf9b0 <line:42:2, col:13> col:2 referenced f_button 'Handler::Flags'
| | `-ImplicitCastExpr 0x55bd594c0160 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55bd594bf990 <col:13> 'int' Int: 8192
| |     `-IntegerLiteral 0x55bd594bf970 <col:13> 'int' 8192
| |-EnumConstantDecl 0x55bd594bfa40 <line:43:2, col:15> col:2 referenced f_checkbox 'Handler::Flags'
| | `-ImplicitCastExpr 0x55bd594c0178 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55bd594bfa20 <col:15> 'int' Int: 16384
| |     `-IntegerLiteral 0x55bd594bfa00 <col:15> 'int' 16384
| |-EnumConstantDecl 0x55bd594bfb10 <line:45:2, col:20> col:2 referenced f_driver0 'Handler::Flags'
| | `-ConstantExpr 0x55bd594bfaf0 <col:14, col:20> 'unsigned int' Int: 67108864
| |   `-BinaryOperator 0x55bd594bfad0 <col:14, col:20> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x55bd594bfa90 <col:14> 'unsigned int' 1
| |     `-IntegerLiteral 0x55bd594bfab0 <col:20> 'int' 26
| |-EnumConstantDecl 0x55bd594bfbe0 <line:46:9, col:27> col:9 referenced f_driver1 'Handler::Flags'
| | `-ConstantExpr 0x55bd594bfbc0 <col:21, col:27> 'unsigned int' Int: 134217728
| |   `-BinaryOperator 0x55bd594bfba0 <col:21, col:27> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x55bd594bfb60 <col:21> 'unsigned int' 1
| |     `-IntegerLiteral 0x55bd594bfb80 <col:27> 'int' 27
| |-EnumConstantDecl 0x55bd594bfc70 <line:48:2, col:17> col:2 referenced f_user_shift 'Handler::Flags'
| | `-ImplicitCastExpr 0x55bd594c0190 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55bd594bfc50 <col:17> 'int' Int: 28
| |     `-IntegerLiteral 0x55bd594bfc30 <col:17> 'int' 28
| |-EnumConstantDecl 0x55bd594bfd40 <line:49:2, col:18> col:2 referenced f_user0 'Handler::Flags'
| | `-ConstantExpr 0x55bd594bfd20 <col:12, col:18> 'unsigned int' Int: 268435456
| |   `-BinaryOperator 0x55bd594bfd00 <col:12, col:18> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x55bd594bfcc0 <col:12> 'unsigned int' 1
| |     `-DeclRefExpr 0x55bd594bfce0 <col:18> 'int' EnumConstant 0x55bd594bfc70 'f_user_shift' 'Handler::Flags'
| |-EnumConstantDecl 0x55bd594bfdd0 <line:54:2, col:25> col:2 referenced f_read_comprehensive 'Handler::Flags'
| | `-ImplicitCastExpr 0x55bd594c01a8 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55bd594bfdb0 <col:25> 'int' Int: 8
| |     `-IntegerLiteral 0x55bd594bfd90 <col:25> 'int' 8
| |-EnumConstantDecl 0x55bd594bfe60 <line:55:2, col:26> col:2 referenced f_write_comprehensive 'Handler::Flags'
| | `-ImplicitCastExpr 0x55bd594c01c0 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55bd594bfe40 <col:26> 'int' Int: 16
| |     `-IntegerLiteral 0x55bd594bfe20 <col:26> 'int' 16
| `-EnumConstantDecl 0x55bd594bfff0 <line:56:2, col:71> col:2 referenced f_special 'Handler::Flags'
|   `-ImplicitCastExpr 0x55bd594c01d8 <col:14, col:71> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55bd594bffd0 <col:14, col:71> 'int' Int: 31
|       `-BinaryOperator 0x55bd594bffb0 <col:14, col:71> 'int' '|'
|         |-BinaryOperator 0x55bd594bff70 <col:14, col:48> 'int' '|'
|         | |-BinaryOperator 0x55bd594bff30 <col:14, col:33> 'int' '|'
|         | | |-BinaryOperator 0x55bd594bfef0 <col:14, col:23> 'int' '|'
|         | | | |-DeclRefExpr 0x55bd594bfeb0 <col:14> 'int' EnumConstant 0x55bd594bf2f0 'f_read' 'Handler::Flags'
|         | | | `-DeclRefExpr 0x55bd594bfed0 <col:23> 'int' EnumConstant 0x55bd594bf380 'f_write' 'Handler::Flags'
|         | | `-DeclRefExpr 0x55bd594bff10 <col:33> 'int' EnumConstant 0x55bd594bf410 'f_read_param' 'Handler::Flags'
|         | `-DeclRefExpr 0x55bd594bff50 <col:48> 'int' EnumConstant 0x55bd594bfdd0 'f_read_comprehensive' 'Handler::Flags'
|         `-DeclRefExpr 0x55bd594bff90 <col:71> 'int' EnumConstant 0x55bd594bfe60 'f_write_comprehensive' 'Handler::Flags'
|-CXXMethodDecl 0x55bd594c0238 <line:62:5, line:64:5> line:62:26 name 'const String &() const' inline
| `-CompoundStmt 0x55bd594c5c58 <col:39, line:64:5>
|   `-ReturnStmt 0x55bd594c5c48 <line:63:2, col:9>
|     `-MemberExpr 0x55bd594c5c18 <col:9> 'const String' lvalue ->_name 0x55bd594c3660
|       `-CXXThisExpr 0x55bd594c5c08 <col:9> 'const Handler *' implicit this
|-CXXMethodDecl 0x55bd594c02f8 <line:69:5, line:71:5> line:69:21 flags 'uint32_t () const' inline
| `-CompoundStmt 0x55bd594c5cd8 <col:35, line:71:5>
|   `-ReturnStmt 0x55bd594c5cc8 <line:70:2, col:9>
|     `-ImplicitCastExpr 0x55bd594c5cb0 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x55bd594c5c80 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55bd594c3d70
|         `-CXXThisExpr 0x55bd594c5c70 <col:9> 'const Handler *' implicit this
|-CXXMethodDecl 0x55bd594c0448 <line:75:5, line:77:5> line:75:18 user_data 'void *(int) const' inline
| |-ParmVarDecl 0x55bd594c03b0 <col:28, col:32> col:32 used op 'int'
| `-CompoundStmt 0x55bd594c5e58 <col:42, line:77:5>
|   `-ReturnStmt 0x55bd594c5e48 <line:76:2, col:44>
|     `-ImplicitCastExpr 0x55bd594c5e30 <col:9, col:44> 'void *' <LValueToRValue>
|       `-ConditionalOperator 0x55bd594c5e00 <col:9, col:44> 'void *const' lvalue
|         |-BinaryOperator 0x55bd594c5d60 <col:9, col:15> 'bool' '=='
|         | |-ImplicitCastExpr 0x55bd594c5d30 <col:9> 'int' <LValueToRValue>
|         | | `-DeclRefExpr 0x55bd594c5cf0 <col:9> 'int' lvalue ParmVar 0x55bd594c03b0 'op' 'int'
|         | `-ImplicitCastExpr 0x55bd594c5d48 <col:15> 'int' <IntegralCast>
|         |   `-DeclRefExpr 0x55bd594c5d10 <col:15> 'Handler::Flags' EnumConstant 0x55bd594bf380 'f_write' 'Handler::Flags'
|         |-MemberExpr 0x55bd594c5d90 <col:25> 'void *const' lvalue ->_write_user_data 0x55bd594c3d10
|         | `-CXXThisExpr 0x55bd594c5d80 <col:25> 'const Handler *' implicit this
|         `-MemberExpr 0x55bd594c5dd0 <col:44> 'void *const' lvalue ->_read_user_data 0x55bd594c3ca8
|           `-CXXThisExpr 0x55bd594c5dc0 <col:44> 'const Handler *' implicit this
|-CXXMethodDecl 0x55bd594c0518 <line:80:5, line:82:5> line:80:18 read_user_data 'void *() const' inline
| `-CompoundStmt 0x55bd594c5ed8 <col:41, line:82:5>
|   `-ReturnStmt 0x55bd594c5ec8 <line:81:2, col:9>
|     `-ImplicitCastExpr 0x55bd594c5eb0 <col:9> 'void *' <LValueToRValue>
|       `-MemberExpr 0x55bd594c5e80 <col:9> 'void *const' lvalue ->_read_user_data 0x55bd594c3ca8
|         `-CXXThisExpr 0x55bd594c5e70 <col:9> 'const Handler *' implicit this
|-CXXMethodDecl 0x55bd594c05e0 <line:85:5, line:87:5> line:85:18 write_user_data 'void *() const' inline
| `-CompoundStmt 0x55bd594c5f58 <col:42, line:87:5>
|   `-ReturnStmt 0x55bd594c5f48 <line:86:2, col:9>
|     `-ImplicitCastExpr 0x55bd594c5f30 <col:9> 'void *' <LValueToRValue>
|       `-MemberExpr 0x55bd594c5f00 <col:9> 'void *const' lvalue ->_write_user_data 0x55bd594c3d10
|         `-CXXThisExpr 0x55bd594c5ef0 <col:9> 'const Handler *' implicit this
|-CXXMethodDecl 0x55bd594c06a8 <line:90:5, col:63> col:18 user_data1 'void *() const' inline
| `-DeprecatedAttr 0x55bd594c0748 <col:52> "" ""
|-CXXMethodDecl 0x55bd594c07e0 <line:91:5, col:63> col:18 user_data2 'void *() const' inline
| `-DeprecatedAttr 0x55bd594c0880 <col:52> "" ""
|-CXXMethodDecl 0x55bd594c0910 <line:96:5, line:98:5> line:96:17 readable 'bool () const' inline
| `-CompoundStmt 0x55bd594c6048 <col:34, line:98:5>
|   `-ReturnStmt 0x55bd594c6038 <line:97:2, col:18>
|     `-ImplicitCastExpr 0x55bd594c6020 <col:9, col:18> 'bool' <IntegralToBoolean>
|       `-BinaryOperator 0x55bd594c6000 <col:9, col:18> 'unsigned int' '&'
|         |-ImplicitCastExpr 0x55bd594c5fd0 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-MemberExpr 0x55bd594c5f80 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55bd594c3d70
|         |   `-CXXThisExpr 0x55bd594c5f70 <col:9> 'const Handler *' implicit this
|         `-ImplicitCastExpr 0x55bd594c5fe8 <col:18> 'unsigned int' <IntegralCast>
|           `-DeclRefExpr 0x55bd594c5fb0 <col:18> 'Handler::Flags' EnumConstant 0x55bd594bf2f0 'f_read' 'Handler::Flags'
|-CXXMethodDecl 0x55bd594c09d0 <line:102:5, line:104:5> line:102:17 read_param 'bool () const' inline
| `-CompoundStmt 0x55bd594c6138 <col:36, line:104:5>
|   `-ReturnStmt 0x55bd594c6128 <line:103:2, col:18>
|     `-ImplicitCastExpr 0x55bd594c6110 <col:9, col:18> 'bool' <IntegralToBoolean>
|       `-BinaryOperator 0x55bd594c60f0 <col:9, col:18> 'unsigned int' '&'
|         |-ImplicitCastExpr 0x55bd594c60c0 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-MemberExpr 0x55bd594c6070 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55bd594c3d70
|         |   `-CXXThisExpr 0x55bd594c6060 <col:9> 'const Handler *' implicit this
|         `-ImplicitCastExpr 0x55bd594c60d8 <col:18> 'unsigned int' <IntegralCast>
|           `-DeclRefExpr 0x55bd594c60a0 <col:18> 'Handler::Flags' EnumConstant 0x55bd594bf410 'f_read_param' 'Handler::Flags'
|-CXXMethodDecl 0x55bd594c0a90 <line:111:5, line:113:5> line:111:17 used read_visible 'bool () const' inline
| `-CompoundStmt 0x55bd594c6318 <col:38, line:113:5>
|   `-ReturnStmt 0x55bd594c6308 <line:112:2, col:49>
|     `-BinaryOperator 0x55bd594c62e8 <col:9, col:49> 'bool' '=='
|       |-ParenExpr 0x55bd594c6290 <col:9, col:44> 'unsigned int'
|       | `-BinaryOperator 0x55bd594c6270 <col:10, col:43> 'unsigned int' '&'
|       |   |-ImplicitCastExpr 0x55bd594c6240 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-MemberExpr 0x55bd594c6160 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55bd594c3d70
|       |   |   `-CXXThisExpr 0x55bd594c6150 <col:10> 'const Handler *' implicit this
|       |   `-ImplicitCastExpr 0x55bd594c6258 <col:19, col:43> 'unsigned int' <IntegralCast>
|       |     `-ParenExpr 0x55bd594c6220 <col:19, col:43> 'int'
|       |       `-BinaryOperator 0x55bd594c6200 <col:20, col:29> 'int' '|'
|       |         |-ImplicitCastExpr 0x55bd594c61d0 <col:20> 'int' <IntegralCast>
|       |         | `-DeclRefExpr 0x55bd594c6190 <col:20> 'Handler::Flags' EnumConstant 0x55bd594bf2f0 'f_read' 'Handler::Flags'
|       |         `-ImplicitCastExpr 0x55bd594c61e8 <col:29> 'int' <IntegralCast>
|       |           `-DeclRefExpr 0x55bd594c61b0 <col:29> 'Handler::Flags' EnumConstant 0x55bd594bf650 'f_read_private' 'Handler::Flags'
|       `-ImplicitCastExpr 0x55bd594c62d0 <col:49> 'unsigned int' <IntegralCast>
|         `-DeclRefExpr 0x55bd594c62b0 <col:49> 'Handler::Flags' EnumConstant 0x55bd594bf2f0 'f_read' 'Handler::Flags'
|-CXXMethodDecl 0x55bd594c0b50 <line:116:5, line:118:5> line:116:17 writable 'bool () const' inline
| `-CompoundStmt 0x55bd594c6408 <col:34, line:118:5>
|   `-ReturnStmt 0x55bd594c63f8 <line:117:2, col:18>
|     `-ImplicitCastExpr 0x55bd594c63e0 <col:9, col:18> 'bool' <IntegralToBoolean>
|       `-BinaryOperator 0x55bd594c63c0 <col:9, col:18> 'unsigned int' '&'
|         |-ImplicitCastExpr 0x55bd594c6390 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-MemberExpr 0x55bd594c6340 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55bd594c3d70
|         |   `-CXXThisExpr 0x55bd594c6330 <col:9> 'const Handler *' implicit this
|         `-ImplicitCastExpr 0x55bd594c63a8 <col:18> 'unsigned int' <IntegralCast>
|           `-DeclRefExpr 0x55bd594c6370 <col:18> 'Handler::Flags' EnumConstant 0x55bd594bf380 'f_write' 'Handler::Flags'
|-CXXMethodDecl 0x55bd594c0c10 <line:125:5, line:127:5> line:125:17 used write_visible 'bool () const' inline
| `-CompoundStmt 0x55bd594c65e8 <col:39, line:127:5>
|   `-ReturnStmt 0x55bd594c65d8 <line:126:2, col:51>
|     `-BinaryOperator 0x55bd594c65b8 <col:9, col:51> 'bool' '=='
|       |-ParenExpr 0x55bd594c6560 <col:9, col:46> 'unsigned int'
|       | `-BinaryOperator 0x55bd594c6540 <col:10, col:45> 'unsigned int' '&'
|       |   |-ImplicitCastExpr 0x55bd594c6510 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-MemberExpr 0x55bd594c6430 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55bd594c3d70
|       |   |   `-CXXThisExpr 0x55bd594c6420 <col:10> 'const Handler *' implicit this
|       |   `-ImplicitCastExpr 0x55bd594c6528 <col:19, col:45> 'unsigned int' <IntegralCast>
|       |     `-ParenExpr 0x55bd594c64f0 <col:19, col:45> 'int'
|       |       `-BinaryOperator 0x55bd594c64d0 <col:20, col:30> 'int' '|'
|       |         |-ImplicitCastExpr 0x55bd594c64a0 <col:20> 'int' <IntegralCast>
|       |         | `-DeclRefExpr 0x55bd594c6460 <col:20> 'Handler::Flags' EnumConstant 0x55bd594bf380 'f_write' 'Handler::Flags'
|       |         `-ImplicitCastExpr 0x55bd594c64b8 <col:30> 'int' <IntegralCast>
|       |           `-DeclRefExpr 0x55bd594c6480 <col:30> 'Handler::Flags' EnumConstant 0x55bd594bf6e0 'f_write_private' 'Handler::Flags'
|       `-ImplicitCastExpr 0x55bd594c65a0 <col:51> 'unsigned int' <IntegralCast>
|         `-DeclRefExpr 0x55bd594c6580 <col:51> 'Handler::Flags' EnumConstant 0x55bd594bf380 'f_write' 'Handler::Flags'
|-CXXMethodDecl 0x55bd594c0cd0 <line:130:5, line:132:5> line:130:17 visible 'bool () const' inline
| `-CompoundStmt 0x55bd594c66f0 <col:33, line:132:5>
|   `-ReturnStmt 0x55bd594c66e0 <line:131:2, col:41>
|     `-BinaryOperator 0x55bd594c66c0 <col:9, col:41> 'bool' '||'
|       |-CXXMemberCallExpr 0x55bd594c6640 <col:9, col:22> 'bool'
|       | `-MemberExpr 0x55bd594c6610 <col:9> '<bound member function type>' ->read_visible 0x55bd594c0a90
|       |   `-CXXThisExpr 0x55bd594c6600 <col:9> 'const Handler *' implicit this
|       `-CXXMemberCallExpr 0x55bd594c66a0 <col:27, col:41> 'bool'
|         `-MemberExpr 0x55bd594c6670 <col:27> '<bound member function type>' ->write_visible 0x55bd594c0c10
|           `-CXXThisExpr 0x55bd594c6660 <col:27> 'const Handler *' implicit this
|-CXXMethodDecl 0x55bd594c0d90 <line:136:5, line:138:5> line:136:17 allow_concurrent_handlers 'bool () const' inline
| `-CompoundStmt 0x55bd594c6828 <col:51, line:138:5>
|   `-ReturnStmt 0x55bd594c6818 <line:137:9, col:40>
|     `-ImplicitCastExpr 0x55bd594c6800 <col:16, col:40> 'bool' <IntegralToBoolean>
|       `-ParenExpr 0x55bd594c67e0 <col:16, col:40> 'unsigned int'
|         `-BinaryOperator 0x55bd594c6798 <col:17, col:26> 'unsigned int' '&'
|           |-ImplicitCastExpr 0x55bd594c6768 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|           | `-MemberExpr 0x55bd594c6718 <col:17> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55bd594c3d70
|           |   `-CXXThisExpr 0x55bd594c6708 <col:17> 'const Handler *' implicit this
|           `-ImplicitCastExpr 0x55bd594c6780 <col:26> 'unsigned int' <IntegralCast>
|             `-DeclRefExpr 0x55bd594c6748 <col:26> 'Handler::Flags' EnumConstant 0x55bd594bf530 'f_nonexclusive' 'Handler::Flags'
|-CXXMethodDecl 0x55bd594c0e50 <line:142:5, line:144:5> line:142:17 allow_concurrent_threads 'bool () const' inline
| `-CompoundStmt 0x55bd594c6938 <col:50, line:144:5>
|   `-ReturnStmt 0x55bd594c6928 <line:143:9, col:40>
|     `-ImplicitCastExpr 0x55bd594c6910 <col:16, col:40> 'bool' <IntegralToBoolean>
|       `-ParenExpr 0x55bd594c68f0 <col:16, col:40> 'unsigned int'
|         `-BinaryOperator 0x55bd594c68d0 <col:17, col:26> 'unsigned int' '&'
|           |-ImplicitCastExpr 0x55bd594c68a0 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|           | `-MemberExpr 0x55bd594c6850 <col:17> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55bd594c3d70
|           |   `-CXXThisExpr 0x55bd594c6840 <col:17> 'const Handler *' implicit this
|           `-ImplicitCastExpr 0x55bd594c68b8 <col:26> 'unsigned int' <IntegralCast>
|             `-DeclRefExpr 0x55bd594c6880 <col:26> 'Handler::Flags' EnumConstant 0x55bd594bf530 'f_nonexclusive' 'Handler::Flags'
|-CXXMethodDecl 0x55bd594c0f10 <line:164:5, line:166:5> line:164:17 raw 'bool () const' inline
| `-CompoundStmt 0x55bd594c6a28 <col:29, line:166:5>
|   `-ReturnStmt 0x55bd594c6a18 <line:165:2, col:18>
|     `-ImplicitCastExpr 0x55bd594c6a00 <col:9, col:18> 'bool' <IntegralToBoolean>
|       `-BinaryOperator 0x55bd594c69e0 <col:9, col:18> 'unsigned int' '&'
|         |-ImplicitCastExpr 0x55bd594c69b0 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-MemberExpr 0x55bd594c6960 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55bd594c3d70
|         |   `-CXXThisExpr 0x55bd594c6950 <col:9> 'const Handler *' implicit this
|         `-ImplicitCastExpr 0x55bd594c69c8 <col:18> 'unsigned int' <IntegralCast>
|           `-DeclRefExpr 0x55bd594c6990 <col:18> 'Handler::Flags' EnumConstant 0x55bd594bf5c0 'f_raw' 'Handler::Flags'
|-CXXMethodDecl 0x55bd594c1198 <line:177:5, col:75> col:12 used call_read 'String (Element *, const String &, ErrorHandler *) const'
| |-ParmVarDecl 0x55bd594c0fc0 <col:22, col:31> col:31 e 'Element *'
| |-ParmVarDecl 0x55bd594c1038 <col:34, col:48> col:48 param 'const String &'
| `-ParmVarDecl 0x55bd594c10b0 <col:55, col:69> col:69 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55bd594c13a8 <line:186:5, line:188:5> line:186:19 call_read 'String (Element *, ErrorHandler *) const' inline
| |-ParmVarDecl 0x55bd594c1260 <col:29, col:38> col:38 used e 'Element *'
| |-ParmVarDecl 0x55bd594c12d8 <col:41, col:62> col:55 used errh 'ErrorHandler *' cinit
| | `-ImplicitCastExpr 0x55bd594c5b40 <col:62> 'ErrorHandler *' <NullToPointer>
| |   `-IntegerLiteral 0x55bd594c5b20 <col:62> 'int' 0
| `-CompoundStmt 0x55bd594c6cc8 <col:71, line:188:5>
|   `-ReturnStmt 0x55bd594c6cb8 <line:187:2, col:36>
|     `-ExprWithCleanups 0x55bd594c6ca0 <col:9, col:36> 'String'
|       `-CXXConstructExpr 0x55bd594c6c70 <col:9, col:36> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x55bd594c6c58 <col:9, col:36> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x55bd594c6c38 <col:9, col:36> 'String' (CXXTemporary 0x55bd594c6c38)
|             `-CXXMemberCallExpr 0x55bd594c6b98 <col:9, col:36> 'String'
|               |-MemberExpr 0x55bd594c6b68 <col:9> '<bound member function type>' ->call_read 0x55bd594c1198
|               | `-CXXThisExpr 0x55bd594c6b58 <col:9> 'const Handler *' implicit this
|               |-ImplicitCastExpr 0x55bd594c6bd0 <col:19> 'Element *' <LValueToRValue>
|               | `-DeclRefExpr 0x55bd594c6ab0 <col:19> 'Element *' lvalue ParmVar 0x55bd594c1260 'e' 'Element *'
|               |-MaterializeTemporaryExpr 0x55bd594c6c00 <col:22, col:29> 'const String' lvalue
|               | `-ImplicitCastExpr 0x55bd594c6be8 <col:22, col:29> 'const String' <NoOp>
|               |   `-CXXBindTemporaryExpr 0x55bd594c6b18 <col:22, col:29> 'String' (CXXTemporary 0x55bd594c6b18)
|               |     `-CXXTemporaryObjectExpr 0x55bd594c6ae0 <col:22, col:29> 'String' 'void ()'
|               `-ImplicitCastExpr 0x55bd594c6c18 <col:32> 'ErrorHandler *' <LValueToRValue>
|                 `-DeclRefExpr 0x55bd594c6b38 <col:32> 'ErrorHandler *' lvalue ParmVar 0x55bd594c12d8 'errh' 'ErrorHandler *'
|-CXXMethodDecl 0x55bd594c1640 <line:198:5, col:73> col:9 call_write 'int (const String &, Element *, ErrorHandler *) const'
| |-ParmVarDecl 0x55bd594c1468 <col:20, col:34> col:34 value 'const String &'
| |-ParmVarDecl 0x55bd594c14e0 <col:41, col:50> col:50 e 'Element *'
| `-ParmVarDecl 0x55bd594c1558 <col:53, col:67> col:67 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55bd594c17c8 <line:207:5, col:37> col:12 unparse_name 'String (Element *) const'
| `-ParmVarDecl 0x55bd594c1708 <col:25, col:34> col:34 e 'Element *'
|-CXXMethodDecl 0x55bd594c19f8 <line:216:5, col:63> col:19 unparse_name 'String (Element *, const String &)' static
| |-ParmVarDecl 0x55bd594c1880 <col:32, col:41> col:41 e 'Element *'
| `-ParmVarDecl 0x55bd594c18f8 <col:44, col:58> col:58 hname 'const String &'
|-CXXMethodDecl 0x55bd594c1af8 <line:223:5, line:225:5> line:223:34 blank_handler 'const Handler *()' static inline
| `-CompoundStmt 0x55bd594c6d28 <col:50, line:225:5>
|   `-ReturnStmt 0x55bd594c6d18 <line:224:2, col:9>
|     `-ImplicitCastExpr 0x55bd594c6d00 <col:9> 'const Handler *' <LValueToRValue>
|       `-DeclRefExpr 0x55bd594c6ce0 <col:9> 'const Handler *' lvalue Var 0x55bd594c3ea0 'the_blank_handler' 'const Handler *'
|-EnumDecl 0x55bd594c1b98 <line:229:5, line:251:5> line:229:5
| |-EnumConstantDecl 0x55bd594c1ca0 <line:230:2, col:11> col:2 h_read 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55bd594c2840 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55bd594c1c80 <col:11> 'Handler::Flags' Int: 1
| |     `-DeclRefExpr 0x55bd594c1c60 <col:11> 'Handler::Flags' EnumConstant 0x55bd594bf2f0 'f_read' 'Handler::Flags'
| |-EnumConstantDecl 0x55bd594c1d30 <line:231:2, col:12> col:2 h_write 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55bd594c2858 <col:12> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55bd594c1d10 <col:12> 'Handler::Flags' Int: 2
| |     `-DeclRefExpr 0x55bd594c1cf0 <col:12> 'Handler::Flags' EnumConstant 0x55bd594bf380 'f_write' 'Handler::Flags'
| |-EnumConstantDecl 0x55bd594c1dc0 <line:232:2, col:17> col:2 h_read_param 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55bd594c2870 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55bd594c1da0 <col:17> 'Handler::Flags' Int: 4
| |     `-DeclRefExpr 0x55bd594c1d80 <col:17> 'Handler::Flags' EnumConstant 0x55bd594bf410 'f_read_param' 'Handler::Flags'
| |-EnumConstantDecl 0x55bd594c1e50 <line:233:2, col:16> col:2 h_exclusive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55bd594c2888 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55bd594c1e30 <col:16> 'Handler::Flags' Int: 0
| |     `-DeclRefExpr 0x55bd594c1e10 <col:16> 'Handler::Flags' EnumConstant 0x55bd594bf4a0 'f_exclusive' 'Handler::Flags'
| |-EnumConstantDecl 0x55bd594c1ee0 <line:234:2, col:19> col:2 h_nonexclusive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55bd594c28a0 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55bd594c1ec0 <col:19> 'Handler::Flags' Int: 32
| |     `-DeclRefExpr 0x55bd594c1ea0 <col:19> 'Handler::Flags' EnumConstant 0x55bd594bf530 'f_nonexclusive' 'Handler::Flags'
| |-EnumConstantDecl 0x55bd594c1f70 <line:235:2, col:10> col:2 h_raw 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55bd594c28b8 <col:10> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55bd594c1f50 <col:10> 'Handler::Flags' Int: 64
| |     `-DeclRefExpr 0x55bd594c1f30 <col:10> 'Handler::Flags' EnumConstant 0x55bd594bf5c0 'f_raw' 'Handler::Flags'
| |-EnumConstantDecl 0x55bd594c2000 <line:236:2, col:19> col:2 h_read_private 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55bd594c28d0 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55bd594c1fe0 <col:19> 'Handler::Flags' Int: 128
| |     `-DeclRefExpr 0x55bd594c1fc0 <col:19> 'Handler::Flags' EnumConstant 0x55bd594bf650 'f_read_private' 'Handler::Flags'
| |-EnumConstantDecl 0x55bd594c2090 <line:237:2, col:20> col:2 h_write_private 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55bd594c28e8 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55bd594c2070 <col:20> 'Handler::Flags' Int: 256
| |     `-DeclRefExpr 0x55bd594c2050 <col:20> 'Handler::Flags' EnumConstant 0x55bd594bf6e0 'f_write_private' 'Handler::Flags'
| |-EnumConstantDecl 0x55bd594c2120 <line:238:2, col:17> col:2 h_deprecated 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55bd594c2900 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55bd594c2100 <col:17> 'Handler::Flags' Int: 512
| |     `-DeclRefExpr 0x55bd594c20e0 <col:17> 'Handler::Flags' EnumConstant 0x55bd594bf770 'f_deprecated' 'Handler::Flags'
| |-EnumConstantDecl 0x55bd594c21b0 <line:239:2, col:15> col:2 h_uncommon 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55bd594c2918 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55bd594c2190 <col:15> 'Handler::Flags' Int: 1024
| |     `-DeclRefExpr 0x55bd594c2170 <col:15> 'Handler::Flags' EnumConstant 0x55bd594bf800 'f_uncommon' 'Handler::Flags'
| |-EnumConstantDecl 0x55bd594c2240 <line:240:2, col:11> col:2 h_calm 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55bd594c2930 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55bd594c2220 <col:11> 'Handler::Flags' Int: 2048
| |     `-DeclRefExpr 0x55bd594c2200 <col:11> 'Handler::Flags' EnumConstant 0x55bd594bf890 'f_calm' 'Handler::Flags'
| |-EnumConstantDecl 0x55bd594c22d0 <line:241:2, col:16> col:2 h_expensive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55bd594c2948 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55bd594c22b0 <col:16> 'Handler::Flags' Int: 4096
| |     `-DeclRefExpr 0x55bd594c2290 <col:16> 'Handler::Flags' EnumConstant 0x55bd594bf920 'f_expensive' 'Handler::Flags'
| |-EnumConstantDecl 0x55bd594c2360 <line:242:2, col:13> col:2 h_button 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55bd594c2960 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55bd594c2340 <col:13> 'Handler::Flags' Int: 8192
| |     `-DeclRefExpr 0x55bd594c2320 <col:13> 'Handler::Flags' EnumConstant 0x55bd594bf9b0 'f_button' 'Handler::Flags'
| |-EnumConstantDecl 0x55bd594c23f0 <line:243:2, col:15> col:2 h_checkbox 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55bd594c2978 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55bd594c23d0 <col:15> 'Handler::Flags' Int: 16384
| |     `-DeclRefExpr 0x55bd594c23b0 <col:15> 'Handler::Flags' EnumConstant 0x55bd594bfa40 'f_checkbox' 'Handler::Flags'
| |-EnumConstantDecl 0x55bd594c2480 <line:244:2, col:20> col:2 h_driver_flag_0 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55bd594c2990 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55bd594c2460 <col:20> 'Handler::Flags' Int: 67108864
| |     `-DeclRefExpr 0x55bd594c2440 <col:20> 'Handler::Flags' EnumConstant 0x55bd594bfb10 'f_driver0' 'Handler::Flags'
| |-EnumConstantDecl 0x55bd594c2510 <line:245:9, col:27> col:9 h_driver_flag_1 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55bd594c29a8 <col:27> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55bd594c24f0 <col:27> 'Handler::Flags' Int: 134217728
| |     `-DeclRefExpr 0x55bd594c24d0 <col:27> 'Handler::Flags' EnumConstant 0x55bd594bfbe0 'f_driver1' 'Handler::Flags'
| |-EnumConstantDecl 0x55bd594c25a0 <line:246:2, col:22> col:2 h_user_flag_shift 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55bd594c29c0 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55bd594c2580 <col:22> 'Handler::Flags' Int: 28
| |     `-DeclRefExpr 0x55bd594c2560 <col:22> 'Handler::Flags' EnumConstant 0x55bd594bfc70 'f_user_shift' 'Handler::Flags'
| |-EnumConstantDecl 0x55bd594c2630 <line:247:2, col:18> col:2 h_user_flag_0 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55bd594c29d8 <col:18> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55bd594c2610 <col:18> 'Handler::Flags' Int: 268435456
| |     `-DeclRefExpr 0x55bd594c25f0 <col:18> 'Handler::Flags' EnumConstant 0x55bd594bfd40 'f_user0' 'Handler::Flags'
| |-EnumConstantDecl 0x55bd594c26c0 <line:248:2, col:25> col:2 h_read_comprehensive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55bd594c29f0 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55bd594c26a0 <col:25> 'Handler::Flags' Int: 8
| |     `-DeclRefExpr 0x55bd594c2680 <col:25> 'Handler::Flags' EnumConstant 0x55bd594bfdd0 'f_read_comprehensive' 'Handler::Flags'
| |-EnumConstantDecl 0x55bd594c2750 <line:249:2, col:26> col:2 h_write_comprehensive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55bd594c2a08 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55bd594c2730 <col:26> 'Handler::Flags' Int: 16
| |     `-DeclRefExpr 0x55bd594c2710 <col:26> 'Handler::Flags' EnumConstant 0x55bd594bfe60 'f_write_comprehensive' 'Handler::Flags'
| `-EnumConstantDecl 0x55bd594c27f0 <line:250:2, col:20> col:2 h_special_flags 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
|   `-ImplicitCastExpr 0x55bd594c2a20 <col:20> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55bd594c27d0 <col:20> 'Handler::Flags' Int: 31
|       `-DeclRefExpr 0x55bd594c27a0 <col:20> 'Handler::Flags' EnumConstant 0x55bd594bfff0 'f_special' 'Handler::Flags'
|-EnumDecl 0x55bd594c2a38 <line:252:5, line:267:5> line:252:10 DeprecatedFlags
| |-EnumConstantDecl 0x55bd594c2b40 <line:253:2, col:12> col:2 OP_READ 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x55bd594c30a0 <col:12> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55bd594c2b20 <col:12> 'Handler::Flags' Int: 1
| |     `-DeclRefExpr 0x55bd594c2b00 <col:12> 'Handler::Flags' EnumConstant 0x55bd594bf2f0 'f_read' 'Handler::Flags'
| |-EnumConstantDecl 0x55bd594c2bd0 <line:254:2, col:13> col:2 OP_WRITE 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x55bd594c30b8 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55bd594c2bb0 <col:13> 'Handler::Flags' Int: 2
| |     `-DeclRefExpr 0x55bd594c2b90 <col:13> 'Handler::Flags' EnumConstant 0x55bd594bf380 'f_write' 'Handler::Flags'
| |-EnumConstantDecl 0x55bd594c2c60 <line:255:2, col:15> col:2 READ_PARAM 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x55bd594c30d0 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55bd594c2c40 <col:15> 'Handler::Flags' Int: 4
| |     `-DeclRefExpr 0x55bd594c2c20 <col:15> 'Handler::Flags' EnumConstant 0x55bd594bf410 'f_read_param' 'Handler::Flags'
| |-EnumConstantDecl 0x55bd594c2cf0 <line:256:2, col:8> col:2 RAW 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x55bd594c30e8 <col:8> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55bd594c2cd0 <col:8> 'Handler::Flags' Int: 64
| |     `-DeclRefExpr 0x55bd594c2cb0 <col:8> 'Handler::Flags' EnumConstant 0x55bd594bf5c0 'f_raw' 'Handler::Flags'
| |-EnumConstantDecl 0x55bd594c2d80 <line:261:2, col:9> col:2 CALM 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x55bd594c3100 <col:9> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55bd594c2d60 <col:9> 'Handler::Flags' Int: 2048
| |     `-DeclRefExpr 0x55bd594c2d40 <col:9> 'Handler::Flags' EnumConstant 0x55bd594bf890 'f_calm' 'Handler::Flags'
| |-EnumConstantDecl 0x55bd594c2e10 <line:262:2, col:14> col:2 EXPENSIVE 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x55bd594c3118 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55bd594c2df0 <col:14> 'Handler::Flags' Int: 4096
| |     `-DeclRefExpr 0x55bd594c2dd0 <col:14> 'Handler::Flags' EnumConstant 0x55bd594bf920 'f_expensive' 'Handler::Flags'
| |-EnumConstantDecl 0x55bd594c2ea0 <line:263:2, col:11> col:2 BUTTON 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x55bd594c3130 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55bd594c2e80 <col:11> 'Handler::Flags' Int: 8192
| |     `-DeclRefExpr 0x55bd594c2e60 <col:11> 'Handler::Flags' EnumConstant 0x55bd594bf9b0 'f_button' 'Handler::Flags'
| |-EnumConstantDecl 0x55bd594c2f30 <line:264:2, col:13> col:2 CHECKBOX 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x55bd594c3148 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55bd594c2f10 <col:13> 'Handler::Flags' Int: 16384
| |     `-DeclRefExpr 0x55bd594c2ef0 <col:13> 'Handler::Flags' EnumConstant 0x55bd594bfa40 'f_checkbox' 'Handler::Flags'
| |-EnumConstantDecl 0x55bd594c2fc0 <line:265:2, col:20> col:2 USER_FLAG_SHIFT 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x55bd594c3160 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55bd594c2fa0 <col:20> 'Handler::Flags' Int: 28
| |     `-DeclRefExpr 0x55bd594c2f80 <col:20> 'Handler::Flags' EnumConstant 0x55bd594bfc70 'f_user_shift' 'Handler::Flags'
| `-EnumConstantDecl 0x55bd594c3050 <line:266:2, col:16> col:2 USER_FLAG_0 'Handler::DeprecatedFlags'
|   `-ImplicitCastExpr 0x55bd594c3178 <col:16> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55bd594c3030 <col:16> 'Handler::Flags' Int: 268435456
|       `-DeclRefExpr 0x55bd594c3010 <col:16> 'Handler::Flags' EnumConstant 0x55bd594bfd40 'f_user0' 'Handler::Flags'
|-EnumDecl 0x55bd594c3190 <line:268:5, line:271:5> line:268:5
| |-DeprecatedAttr 0x55bd594c3250 <col:25> "" ""
| |-EnumConstantDecl 0x55bd594c3300 <line:269:2, col:14> col:2 EXCLUSIVE 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:268:5)'
| | `-ImplicitCastExpr 0x55bd594c33e0 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55bd594c32e0 <col:14> 'Handler::Flags' Int: 0
| |     `-DeclRefExpr 0x55bd594c32c0 <col:14> 'Handler::Flags' EnumConstant 0x55bd594bf4a0 'f_exclusive' 'Handler::Flags'
| `-EnumConstantDecl 0x55bd594c3390 <line:270:2, col:17> col:2 NONEXCLUSIVE 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:268:5)'
|   `-ImplicitCastExpr 0x55bd594c33f8 <col:17> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55bd594c3370 <col:17> 'Handler::Flags' Int: 32
|       `-DeclRefExpr 0x55bd594c3350 <col:17> 'Handler::Flags' EnumConstant 0x55bd594bf530 'f_nonexclusive' 'Handler::Flags'
|-CXXMethodDecl 0x55bd594c3578 <line:281:5, line:284:5> line:281:19 __call_read 'String (Element *, void *) const' inline
| |-ParmVarDecl 0x55bd594c3420 <col:31, col:40> col:40 used e 'Element *'
| |-ParmVarDecl 0x55bd594c34a0 <col:43, col:49> col:49 used new_user_data 'void *'
| `-CompoundStmt 0x55bd594c73e8 <col:70, line:284:5>
|   |-ParenExpr 0x55bd594c7208 <line:282:2, col:233> 'void'
|   | `-ConditionalOperator 0x55bd594c71d8 <col:3, col:232> 'void'
|   |   |-CXXStaticCastExpr 0x55bd594c6f08 <col:3, col:75> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55bd594c6ed8 <col:23, col:69> 'bool' '=='
|   |   |   |-ParenExpr 0x55bd594c6e80 <col:23, col:64> 'unsigned int'
|   |   |   | `-BinaryOperator 0x55bd594c6e60 <col:24, col:63> 'unsigned int' '&'
|   |   |   |   |-ImplicitCastExpr 0x55bd594c6e30 <col:24> 'uint32_t':'unsigned int' <LValueToRValue>
|   |   |   |   | `-MemberExpr 0x55bd594c6d50 <col:24> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55bd594c3d70
|   |   |   |   |   `-CXXThisExpr 0x55bd594c6d40 <col:24> 'const Handler *' implicit this
|   |   |   |   `-ImplicitCastExpr 0x55bd594c6e48 <col:33, col:63> 'unsigned int' <IntegralCast>
|   |   |   |     `-ParenExpr 0x55bd594c6e10 <col:33, col:63> 'int'
|   |   |   |       `-BinaryOperator 0x55bd594c6df0 <col:34, col:43> 'int' '|'
|   |   |   |         |-ImplicitCastExpr 0x55bd594c6dc0 <col:34> 'int' <IntegralCast>
|   |   |   |         | `-DeclRefExpr 0x55bd594c6d80 <col:34> 'Handler::Flags' EnumConstant 0x55bd594bf2f0 'f_read' 'Handler::Flags'
|   |   |   |         `-ImplicitCastExpr 0x55bd594c6dd8 <col:43> 'int' <IntegralCast>
|   |   |   |           `-DeclRefExpr 0x55bd594c6da0 <col:43> 'Handler::Flags' EnumConstant 0x55bd594bfdd0 'f_read_comprehensive' 'Handler::Flags'
|   |   |   `-ImplicitCastExpr 0x55bd594c6ec0 <col:69> 'unsigned int' <IntegralCast>
|   |   |     `-DeclRefExpr 0x55bd594c6ea0 <col:69> 'Handler::Flags' EnumConstant 0x55bd594bf2f0 'f_read' 'Handler::Flags'
|   |   |-CXXFunctionalCastExpr 0x55bd594c6f68 <col:79, col:86> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55bd594c6f48 <col:85> 'int' 0
|   |   `-CallExpr 0x55bd594c7138 <col:90, col:232> 'void'
|   |     |-ImplicitCastExpr 0x55bd594c7120 <col:90> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55bd594c7100 <col:90> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55bd59002600 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55bd594c7178 <col:105> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55bd594c6fd8 <col:105> 'const char [53]' lvalue "(_flags & (f_read | f_read_comprehensive)) == f_read"
|   |     |-ImplicitCastExpr 0x55bd594c7190 <col:161> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55bd594c7028 <col:161> 'const char [30]' lvalue "../dummy_inc/click/handler.hh"
|   |     |-ImplicitCastExpr 0x55bd594c71a8 <col:194> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55bd594c7060 <col:194> 'int' 282
|   |     `-ImplicitCastExpr 0x55bd594c71c0 <col:199, col:213> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55bd594c70e8 <col:199, col:213> 'const char [53]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55bd594c70d0 <col:213> 'const char [53]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55bd594c7080 <col:213> 'const char [53]' lvalue "String Handler::__call_read(Element *, void *) const"
|   `-ReturnStmt 0x55bd594c73d8 <line:283:2, col:38>
|     `-ExprWithCleanups 0x55bd594c73c0 <col:9, col:38> 'String'
|       `-CXXConstructExpr 0x55bd594c7390 <col:9, col:38> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x55bd594c7378 <col:9, col:38> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x55bd594c7358 <col:9, col:38> 'String' (CXXTemporary 0x55bd594c7358)
|             `-CallExpr 0x55bd594c72f0 <col:9, col:38> 'String'
|               |-ImplicitCastExpr 0x55bd594c72d8 <col:9, col:20> 'ReadHandlerCallback':'String (*)(Element *, void *)' <LValueToRValue>
|               | `-MemberExpr 0x55bd594c7268 <col:9, col:20> 'const ReadHandlerCallback':'String (*const)(Element *, void *)' lvalue .r 0x55bd594c3880
|               |   `-MemberExpr 0x55bd594c7238 <col:9> 'const union (anonymous union at ../dummy_inc/click/handler.hh:290:5)':'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5)' lvalue ->_read_hook 0x55bd594c3948
|               |     `-CXXThisExpr 0x55bd594c7228 <col:9> 'const Handler *' implicit this
|               |-ImplicitCastExpr 0x55bd594c7320 <col:22> 'Element *' <LValueToRValue>
|               | `-DeclRefExpr 0x55bd594c7298 <col:22> 'Element *' lvalue ParmVar 0x55bd594c3420 'e' 'Element *'
|               `-ImplicitCastExpr 0x55bd594c7338 <col:25> 'void *' <LValueToRValue>
|                 `-DeclRefExpr 0x55bd594c72b8 <col:25> 'void *' lvalue ParmVar 0x55bd594c34a0 'new_user_data' 'void *'
|-AccessSpecDecl 0x55bd594c3628 <line:287:3, col:10> col:3 private
|-FieldDecl 0x55bd594c3660 <line:289:5, col:12> col:12 referenced _name 'String'
|-CXXRecordDecl 0x55bd594c36b0 <line:290:5, line:293:5> line:290:5 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x55bd594c3800 <line:291:2, col:18> col:18 h 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-FieldDecl 0x55bd594c3880 <line:292:2, col:22> col:22 referenced r 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-CXXConstructorDecl 0x55bd594c4678 <line:290:5> col:5 implicit constexpr  'void (const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &)' inline default trivial noexcept-unevaluated 0x55bd594c4678
| | `-ParmVarDecl 0x55bd594c4788 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &'
| |-CXXConstructorDecl 0x55bd594c4828 <col:5> col:5 implicit constexpr  'void (Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&)' inline default trivial noexcept-unevaluated 0x55bd594c4828
| | `-ParmVarDecl 0x55bd594c4938 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&'
| |-CXXDestructorDecl 0x55bd594c49a8 <col:5> col:5 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x55bd594c49a8
| |-CXXMethodDecl 0x55bd594c5278 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &(const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &)' inline default trivial noexcept-unevaluated 0x55bd594c5278
| | `-ParmVarDecl 0x55bd594c5388 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &'
| |-CXXMethodDecl 0x55bd594c53f8 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &(Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&)' inline default trivial noexcept-unevaluated 0x55bd594c53f8
| | `-ParmVarDecl 0x55bd594c5508 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&'
| `-CXXConstructorDecl 0x55bd596b2368 <col:5> col:5 implicit used  'void () noexcept' inline default trivial
|   `-CompoundStmt 0x55bd596b2440 <col:5>
|-FieldDecl 0x55bd594c3948 <col:5, line:293:7> col:7 referenced _read_hook 'union (anonymous union at ../dummy_inc/click/handler.hh:290:5)':'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5)'
|-CXXRecordDecl 0x55bd594c39b0 <line:294:5, line:297:5> line:294:5 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x55bd594c3ad8 <line:295:2, col:18> col:18 h 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-FieldDecl 0x55bd594c3b60 <line:296:2, col:23> col:23 referenced w 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-CXXConstructorDecl 0x55bd594c4ad8 <line:294:5> col:5 implicit constexpr  'void (const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &)' inline default trivial noexcept-unevaluated 0x55bd594c4ad8
| | `-ParmVarDecl 0x55bd594c4be8 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &'
| |-CXXConstructorDecl 0x55bd594c4c88 <col:5> col:5 implicit constexpr  'void (Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&)' inline default trivial noexcept-unevaluated 0x55bd594c4c88
| | `-ParmVarDecl 0x55bd594c4d98 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&'
| |-CXXDestructorDecl 0x55bd594c4e08 <col:5> col:5 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x55bd594c4e08
| |-CXXMethodDecl 0x55bd594c55a8 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &(const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &)' inline default trivial noexcept-unevaluated 0x55bd594c55a8
| | `-ParmVarDecl 0x55bd594c56b8 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &'
| |-CXXMethodDecl 0x55bd594c5728 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &(Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&)' inline default trivial noexcept-unevaluated 0x55bd594c5728
| | `-ParmVarDecl 0x55bd594c5838 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&'
| `-CXXConstructorDecl 0x55bd596b24a0 <col:5> col:5 implicit used  'void () noexcept' inline default trivial
|   `-CompoundStmt 0x55bd596b2580 <col:5>
|-FieldDecl 0x55bd594c3c28 <col:5, line:297:7> col:7 referenced _write_hook 'union (anonymous union at ../dummy_inc/click/handler.hh:294:5)':'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5)'
|-FieldDecl 0x55bd594c3ca8 <line:298:5, col:11> col:11 referenced _read_user_data 'void *'
|-FieldDecl 0x55bd594c3d10 <line:299:5, col:11> col:11 referenced _write_user_data 'void *'
|-FieldDecl 0x55bd594c3d70 <line:300:5, col:14> col:14 referenced _flags 'uint32_t':'unsigned int'
|-FieldDecl 0x55bd594c3dd8 <line:301:5, col:9> col:9 _use_count 'int'
|-FieldDecl 0x55bd594c3e40 <line:302:5, col:9> col:9 _next_by_name 'int'
|-VarDecl 0x55bd594c3ea0 <line:304:5, col:27> col:27 used the_blank_handler 'const Handler *' static
|-CXXConstructorDecl 0x55bd594c3fc0 <line:306:5, col:38> col:5 Handler 'void (const String &)'
| `-ParmVarDecl 0x55bd594c3f18 <col:13, col:37> col:28 'const String &' cinit
|   `-ExprWithCleanups 0x55bd594c5bf0 <col:30, col:37> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x55bd594c5bd8 <col:30, col:37> 'const String' lvalue
|       `-ImplicitCastExpr 0x55bd594c5bc0 <col:30, col:37> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x55bd594c5ba0 <col:30, col:37> 'String' (CXXTemporary 0x55bd594c5ba0)
|           `-CXXTemporaryObjectExpr 0x55bd594c5b68 <col:30, col:37> 'String' 'void ()'
|-CXXMethodDecl 0x55bd594c4168 <line:308:5, col:41> col:17 combine 'void (const Handler &)' inline
| `-ParmVarDecl 0x55bd594c40a8 <col:25, col:40> col:40 x 'const Handler &'
|-CXXMethodDecl 0x55bd594c42e8 <line:309:5, col:46> col:17 compatible 'bool (const Handler &) const' inline
| `-ParmVarDecl 0x55bd594c4220 <col:28, col:43> col:43 x 'const Handler &'
|-FriendDecl 0x55bd594c44a8 <line:311:5, col:18> col:12 'class Router':'Router'
|-CXXConstructorDecl 0x55bd594c44e8 <line:19:7> col:7 implicit Handler 'void (const Handler &)' inline default noexcept-unevaluated 0x55bd594c44e8
| `-ParmVarDecl 0x55bd594c45c8 <col:7> col:7 'const Handler &'
|-CXXConstructorDecl 0x55bd594c4f18 <col:7> col:7 implicit Handler 'void (Handler &&)' inline default noexcept-unevaluated 0x55bd594c4f18
| `-ParmVarDecl 0x55bd594c5028 <col:7> col:7 'Handler &&'
|-CXXMethodDecl 0x55bd594c50c8 <col:7> col:7 implicit operator= 'Handler &(const Handler &)' inline default noexcept-unevaluated 0x55bd594c50c8
| `-ParmVarDecl 0x55bd594c51d8 <col:7> col:7 'const Handler &'
|-CXXMethodDecl 0x55bd594c58a8 <col:7> col:7 implicit operator= 'Handler &(Handler &&)' inline default noexcept-unevaluated 0x55bd594c58a8
| `-ParmVarDecl 0x55bd594c59b8 <col:7> col:7 'Handler &&'
`-CXXDestructorDecl 0x55bd594c5a40 <col:7> col:7 implicit ~Handler 'void ()' inline default noexcept-unevaluated 0x55bd594c5a40

Layout: <CGRecordLayout
  LLVMType:%class.Handler = type <{ %class.String, %union.anon, %union.anon.11, i8*, i8*, i32, i32, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Handler.base = type <{ %class.String, %union.anon, %union.anon.11, i8*, i8*, i32, i32, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55bd59697718 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'void *'
|-CXXRecordDecl 0x55bd59697928 prev 0x55bd59697718 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55bd5969a320 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<void *>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x55bd5969a2d0 'typename array_memory<void *>::type' sugar
|   `-TypedefType 0x55bd5969a2b0 'conditional<true, sized_array_memory<8>, typed_array_memory<void *> >::type' sugar
|     |-Typedef 0x55bd5969a160 'type'
|     `-SubstTemplateTypeParmType 0x55bd595b9340 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x55bd5922c210 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55bd5922c1b8 'T'
|       `-RecordType 0x55bd595b8e90 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x55bd595b8da8 'sized_array_memory'
|-FieldDecl 0x55bd5969a420 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<void *>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x55bd5969a470 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55bd5969a4a8 <line:118:5, col:15> col:15 value_type 'void *':'void *'
| `-SubstTemplateTypeParmType 0x55bd596979c0 'void *' sugar
|   |-TemplateTypeParmType 0x55bd59264120 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55bd592640c8 'T'
|   `-PointerType 0x55bd58f62ad0 'void *'
|     `-BuiltinType 0x55bd58f622d0 'void'
|-TypedefDecl 0x55bd5969a538 <line:119:5, col:16> col:16 reference 'void *&'
| `-LValueReferenceType 0x55bd5969a500 'void *&'
|   `-SubstTemplateTypeParmType 0x55bd596979c0 'void *' sugar
|     |-TemplateTypeParmType 0x55bd59264120 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55bd592640c8 'T'
|     `-PointerType 0x55bd58f62ad0 'void *'
|       `-BuiltinType 0x55bd58f622d0 'void'
|-TypedefDecl 0x55bd5969a5f8 <line:120:5, col:22> col:22 const_reference 'void *const &'
| `-LValueReferenceType 0x55bd5969a5c0 'void *const &'
|   `-QualType 0x55bd596979c1 'void *const' const
|     `-SubstTemplateTypeParmType 0x55bd596979c0 'void *' sugar
|       |-TemplateTypeParmType 0x55bd59264120 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55bd592640c8 'T'
|       `-PointerType 0x55bd58f62ad0 'void *'
|         `-BuiltinType 0x55bd58f622d0 'void'
|-TypedefDecl 0x55bd5969a688 <line:121:5, col:16> col:16 pointer 'void **'
| `-PointerType 0x55bd5969a650 'void **'
|   `-SubstTemplateTypeParmType 0x55bd596979c0 'void *' sugar
|     |-TemplateTypeParmType 0x55bd59264120 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55bd592640c8 'T'
|     `-PointerType 0x55bd58f62ad0 'void *'
|       `-BuiltinType 0x55bd58f622d0 'void'
|-TypedefDecl 0x55bd5969a718 <line:122:5, col:22> col:22 const_pointer 'void *const *'
| `-PointerType 0x55bd5969a6e0 'void *const *'
|   `-QualType 0x55bd596979c1 'void *const' const
|     `-SubstTemplateTypeParmType 0x55bd596979c0 'void *' sugar
|       |-TemplateTypeParmType 0x55bd59264120 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55bd592640c8 'T'
|       `-PointerType 0x55bd58f62ad0 'void *'
|         `-BuiltinType 0x55bd58f622d0 'void'
|-TypedefDecl 0x55bd5969b300 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<void *>::type':'void *'
| `-ElaboratedType 0x55bd5969b2b0 'typename fast_argument<void *>::type' sugar
|   `-TypedefType 0x55bd5969b290 'fast_argument<void *, false>::type' sugar
|     |-Typedef 0x55bd5969b220 'type'
|     `-SubstTemplateTypeParmType 0x55bd5969afe0 'void *' sugar
|       |-TemplateTypeParmType 0x55bd59237010 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55bd59236fc0 'T'
|       `-PointerType 0x55bd58f62ad0 'void *'
|         `-BuiltinType 0x55bd58f622d0 'void'
|-TypedefDecl 0x55bd5969b368 <line:126:5, col:22> col:22 const_access_type 'void *const &'
| `-LValueReferenceType 0x55bd5969a5c0 'void *const &'
|   `-QualType 0x55bd596979c1 'void *const' const
|     `-SubstTemplateTypeParmType 0x55bd596979c0 'void *' sugar
|       |-TemplateTypeParmType 0x55bd59264120 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55bd592640c8 'T'
|       `-PointerType 0x55bd58f62ad0 'void *'
|         `-BuiltinType 0x55bd58f622d0 'void'
|-TypedefDecl 0x55bd5969b3c0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55bd58f62370 'int'
|-TypedefDecl 0x55bd5969b428 <line:130:5, col:16> col:16 iterator 'void **'
| `-PointerType 0x55bd5969a650 'void **'
|   `-SubstTemplateTypeParmType 0x55bd596979c0 'void *' sugar
|     |-TemplateTypeParmType 0x55bd59264120 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55bd592640c8 'T'
|     `-PointerType 0x55bd58f62ad0 'void *'
|       `-BuiltinType 0x55bd58f622d0 'void'
|-TypedefDecl 0x55bd5969b490 <line:131:5, col:22> col:22 const_iterator 'void *const *'
| `-PointerType 0x55bd5969a6e0 'void *const *'
|   `-QualType 0x55bd596979c1 'void *const' const
|     `-SubstTemplateTypeParmType 0x55bd596979c0 'void *' sugar
|       |-TemplateTypeParmType 0x55bd59264120 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55bd592640c8 'T'
|       `-PointerType 0x55bd58f62ad0 'void *'
|         `-BuiltinType 0x55bd58f622d0 'void'
|-EnumDecl 0x55bd5969b4e8 <line:134:5> col:5
| `-EnumConstantDecl 0x55bd5969b5e0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<void *>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55bd5969b5c0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55bd592657a8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55bd59265780 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55bd59265760 <col:40> 'int' 1
|-CXXConstructorDecl 0x55bd5969b668 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55bd5969b8b8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<void *>::value_argument_type)' inline
| |-ParmVarDecl 0x55bd5969b720 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55bd5969b7c0 <col:41, col:61> col:61 v 'Vector<void *>::value_argument_type':'void *'
|-CXXConstructorDecl 0x55bd5969bb78 <line:139:5, col:37> col:12 Vector 'void (const Vector<void *> &)' inline
| `-ParmVarDecl 0x55bd5969ba60 <col:19, col:36> col:36 x 'const Vector<void *> &'
|-CXXConstructorDecl 0x55bd5969be38 <line:141:5, col:32> col:12 Vector 'void (Vector<void *> &&)' inline
| `-ParmVarDecl 0x55bd5969bd20 <col:19, col:31> col:31 x 'Vector<void *> &&'
|-CXXMethodDecl 0x55bd5969c180 <line:144:5, col:51> col:23 operator= 'Vector<void *> &(const Vector<void *> &)' inline
| `-ParmVarDecl 0x55bd5969c060 <col:33, col:50> col:50 x 'const Vector<void *> &'
|-CXXMethodDecl 0x55bd5969c490 <line:146:5, col:46> col:23 operator= 'Vector<void *> &(Vector<void *> &&)' inline
| `-ParmVarDecl 0x55bd5969c370 <col:33, col:45> col:45 x 'Vector<void *> &&'
|-CXXMethodDecl 0x55bd5969c780 <line:148:5, col:70> col:23 assign 'Vector<void *> &(Vector::size_type, Vector<void *>::value_argument_type)' inline
| |-ParmVarDecl 0x55bd5969c5c8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55bd5969c640 <col:43, col:69> col:63 v 'Vector<void *>::value_argument_type':'void *'
|-CXXMethodDecl 0x55bd5969c8d8 <line:150:5, col:55> col:49 begin 'Vector<void *>::iterator ()'
| |-NoInlineAttr 0x55bd5969c9b8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55bd5969ca10 <col:30> Inherited
|-CXXMethodDecl 0x55bd5969ca58 <line:151:5, col:53> col:49 end 'Vector<void *>::iterator ()'
| |-NoInlineAttr 0x55bd5969cb08 <col:20> Inherited
| `-OptimizeNoneAttr 0x55bd5969cb60 <col:30> Inherited
|-CXXMethodDecl 0x55bd5969cc28 <line:152:5, col:63> col:55 begin 'Vector<void *>::const_iterator () const'
| |-NoInlineAttr 0x55bd5969ccd8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55bd5969cd30 <col:30> Inherited
|-CXXMethodDecl 0x55bd5969cd78 <line:153:5, col:61> col:55 end 'Vector<void *>::const_iterator () const'
| |-NoInlineAttr 0x55bd5969ce28 <col:20> Inherited
| `-OptimizeNoneAttr 0x55bd5969ce80 <col:30> Inherited
|-CXXMethodDecl 0x55bd5969cec8 <line:154:5, col:64> col:55 cbegin 'Vector<void *>::const_iterator () const'
| |-NoInlineAttr 0x55bd5969cf78 <col:20> Inherited
| `-OptimizeNoneAttr 0x55bd5969cfd0 <col:30> Inherited
|-CXXMethodDecl 0x55bd5969d018 <line:155:5, col:62> col:55 cend 'Vector<void *>::const_iterator () const'
| |-NoInlineAttr 0x55bd5969d0c8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55bd5969d120 <col:30> Inherited
|-CXXMethodDecl 0x55bd5969d148 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55bd5969d1f8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55bd5969d2a8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55bd5969d468 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<void *>::value_argument_type)' inline
| |-ParmVarDecl 0x55bd5969d358 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55bd5969d3d0 <col:37, col:63> col:57 v 'Vector<void *>::value_argument_type':'void *'
|-CXXMethodDecl 0x55bd5969d5b8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55bd5969d528 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55bd5969d768 <line:163:5, col:65> col:43 operator[] 'void *&(Vector::size_type)'
| |-ParmVarDecl 0x55bd5969d670 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55bd5969d820 <col:20>
| `-OptimizeNoneAttr 0x55bd5969d878 <col:30>
|-CXXMethodDecl 0x55bd5969d998 <line:164:5, col:73> col:49 operator[] 'void *const &(Vector::size_type) const'
| |-ParmVarDecl 0x55bd5969d8a0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55bd5969da50 <col:20>
| `-OptimizeNoneAttr 0x55bd5969daa8 <col:30>
|-CXXMethodDecl 0x55bd5969db60 <line:165:5, col:29> col:15 at 'void *&(Vector::size_type)' inline
| `-ParmVarDecl 0x55bd5969dad0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55bd5969dca8 <line:166:5, col:37> col:21 at 'void *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55bd5969dc18 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55bd5969ddd8 <line:167:5, col:21> col:15 front 'void *&()' inline
|-CXXMethodDecl 0x55bd5969df08 <line:168:5, col:29> col:21 front 'void *const &() const' inline
|-CXXMethodDecl 0x55bd5969dfd8 <line:169:5, col:20> col:15 back 'void *&()' inline
|-CXXMethodDecl 0x55bd5969e0a8 <line:170:5, col:28> col:21 back 'void *const &() const' inline
|-CXXMethodDecl 0x55bd5969e1e8 <line:172:5, col:39> col:15 unchecked_at 'void *&(Vector::size_type)' inline
| `-ParmVarDecl 0x55bd5969e158 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55bd5969e330 <line:173:5, col:47> col:21 unchecked_at 'void *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55bd5969e2a0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55bd5969e478 <line:174:5, col:59> col:15 at_u 'void *&(Vector::size_type)' inline
| |-ParmVarDecl 0x55bd5969e3e8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55bd5969e530 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55bd5969e630 <line:175:5, col:71> col:21 at_u 'void *const &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55bd5969e5a0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55bd5969e6e8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55bd5969e7a8 <line:177:5, col:20> col:15 data 'void **()' inline
|-CXXMethodDecl 0x55bd5969e8a8 <line:178:5, col:28> col:21 data 'void *const *() const' inline
|-CXXMethodDecl 0x55bd5969ea28 <line:180:5, col:48> col:17 push_back 'void (Vector<void *>::value_argument_type)' inline
| `-ParmVarDecl 0x55bd5969e968 <col:27, col:47> col:47 v 'Vector<void *>::value_argument_type':'void *'
|-FunctionTemplateDecl 0x55bd5969f1e8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55bd5969eae0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<void *>':'fast_argument<void *, false>'
| `-CXXMethodDecl 0x55bd5969f148 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (void *&&)' inline
|   `-ParmVarDecl 0x55bd5969f048 <col:58, col:62> col:62 v 'void *&&'
|-CXXMethodDecl 0x55bd5969f2c8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55bd5969f418 <line:186:5, col:49> col:17 push_front 'void (Vector<void *>::value_argument_type)' inline
| `-ParmVarDecl 0x55bd5969f388 <col:28, col:48> col:48 v 'Vector<void *>::value_argument_type':'void *'
|-CXXMethodDecl 0x55bd5969f4d0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55bd5969f718 <line:189:5, col:62> col:21 insert 'Vector<void *>::iterator (Vector<void *>::iterator, Vector<void *>::value_argument_type)' inline
| |-ParmVarDecl 0x55bd5969f590 <col:28, col:37> col:37 it 'Vector<void *>::iterator':'void **'
| `-ParmVarDecl 0x55bd5969f608 <col:41, col:61> col:61 v 'Vector<void *>::value_argument_type':'void *'
|-CXXMethodDecl 0x55bd5969f8d8 <line:190:5, col:38> col:21 erase 'Vector<void *>::iterator (Vector<void *>::iterator)' inline
| `-ParmVarDecl 0x55bd5969f7e8 <col:27, col:36> col:36 it 'Vector<void *>::iterator':'void **'
|-CXXMethodDecl 0x55bd5969fb28 <line:191:5, col:49> col:21 erase 'Vector<void *>::iterator (Vector<void *>::iterator, Vector<void *>::iterator)' inline
| |-ParmVarDecl 0x55bd5969f9a0 <col:27, col:36> col:36 a 'Vector<void *>::iterator':'void **'
| `-ParmVarDecl 0x55bd5969fa18 <col:39, col:48> col:48 b 'Vector<void *>::iterator':'void **'
|-CXXMethodDecl 0x55bd5969fbe8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55bd5969fe48 <line:195:5, col:34> col:17 swap 'void (Vector<void *> &)' inline
| `-ParmVarDecl 0x55bd5969fd50 <col:22, col:33> col:33 x 'Vector<void *> &'
`-CXXDestructorDecl 0x55bd5969ff18 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55bd5969ff18

Layout: <CGRecordLayout
  LLVMType:%class.Vector.12 = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector.12 = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct Router::notifier_signals_t
         0 |   class String name
         0 |     struct String::rep_t _r
         0 |       const char * data
         8 |       int length
        16 |       struct String::memo_t * memo
        24 |   int nsig
        28 |   class atomic_uint32_t [128] sig
       544 |   struct Router::notifier_signals_t * next
           | [sizeof=552, dsize=552, align=8,
           |  nvsize=552, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55bd596a0110 <../dummy_inc/click/router.hh:280:5, line:290:5> line:280:12 referenced struct notifier_signals_t definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x55bd596a0228 <col:5, col:12> col:12 implicit referenced struct notifier_signals_t
|-EnumDecl 0x55bd596a02b8 <line:281:9, col:32> col:9
| `-EnumConstantDecl 0x55bd596a03c0 <col:16, col:27> col:16 referenced capacity 'Router::notifier_signals_t::(anonymous enum at ../dummy_inc/click/router.hh:281:9)'
|   `-ImplicitCastExpr 0x55bd596a0410 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55bd596a03a0 <col:27> 'int' Int: 4096
|       `-IntegerLiteral 0x55bd596a0380 <col:27> 'int' 4096
|-FieldDecl 0x55bd596a0438 <line:282:9, col:16> col:16 name 'String'
|-FieldDecl 0x55bd596a04a0 <line:283:9, col:13> col:13 nsig 'int'
|-FieldDecl 0x55bd596a0698 <line:284:9, col:42> col:25 referenced sig 'atomic_uint32_t [128]'
|-FieldDecl 0x55bd596a0728 <line:285:9, col:29> col:29 next 'Router::notifier_signals_t *'
|-CXXConstructorDecl 0x55bd596a08e8 <line:286:9, line:289:9> line:286:9 notifier_signals_t 'void (const String &, Router::notifier_signals_t *)'
| |-ParmVarDecl 0x55bd596a0788 <col:28, col:42> col:42 used n 'const String &'
| |-ParmVarDecl 0x55bd596a0800 <col:45, col:65> col:65 used nx 'Router::notifier_signals_t *'
| |-CXXCtorInitializer Field 0x55bd596a0438 'name' 'String'
| | `-CXXConstructExpr 0x55bd596abe58 <line:287:15, col:21> 'String' 'void (const String &)'
| |   `-DeclRefExpr 0x55bd596abe18 <col:20> 'const String' lvalue ParmVar 0x55bd596a0788 'n' 'const String &'
| |-CXXCtorInitializer Field 0x55bd596a04a0 'nsig' 'int'
| | `-IntegerLiteral 0x55bd596abeb0 <col:29> 'int' 0
| |-CXXCtorInitializer Field 0x55bd596a0698 'sig' 'atomic_uint32_t [128]'
| | `-CXXConstructExpr 0x55bd596abf98 <line:286:9> 'atomic_uint32_t [128]' 'void () noexcept'
| |-CXXCtorInitializer Field 0x55bd596a0728 'next' 'Router::notifier_signals_t *'
| | `-ImplicitCastExpr 0x55bd596abf58 <line:287:38> 'Router::notifier_signals_t *' <LValueToRValue>
| |   `-DeclRefExpr 0x55bd596abf18 <col:38> 'Router::notifier_signals_t *' lvalue ParmVar 0x55bd596a0800 'nx' 'Router::notifier_signals_t *'
| `-CompoundStmt 0x55bd596ac228 <col:42, line:289:9>
|   `-CallExpr 0x55bd596ac1d8 <line:288:13, col:43> 'void *'
|     |-ImplicitCastExpr 0x55bd596ac1c0 <col:13> 'void *(*)(void *, int, size_t) throw()' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x55bd596ac1a0 <col:13> 'void *(void *, int, size_t) throw()' lvalue Function 0x55bd591c68c8 'memset' 'void *(void *, int, size_t) throw()'
|     |-ImplicitCastExpr 0x55bd596ac210 <col:20, col:26> 'void *' <BitCast>
|     | `-UnaryOperator 0x55bd596ac0e8 <col:20, col:26> 'atomic_uint32_t *' prefix '&' cannot overflow
|     |   `-ArraySubscriptExpr 0x55bd596ac0c8 <col:21, col:26> 'atomic_uint32_t' lvalue
|     |     |-ImplicitCastExpr 0x55bd596ac0b0 <col:21> 'atomic_uint32_t *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55bd596ac060 <col:21> 'atomic_uint32_t [128]' lvalue ->sig 0x55bd596a0698
|     |     |   `-CXXThisExpr 0x55bd596ac050 <col:21> 'Router::notifier_signals_t *' implicit this
|     |     `-IntegerLiteral 0x55bd596ac090 <col:25> 'int' 0
|     |-IntegerLiteral 0x55bd596ac100 <col:29> 'int' 0
|     `-UnaryExprOrTypeTraitExpr 0x55bd596ac180 <col:32, col:42> 'unsigned long' sizeof
|       `-ParenExpr 0x55bd596ac160 <col:38, col:42> 'atomic_uint32_t [128]' lvalue
|         `-MemberExpr 0x55bd596ac130 <col:39> 'atomic_uint32_t [128]' lvalue ->sig 0x55bd596a0698 non_odr_use_unevaluated
|           `-CXXThisExpr 0x55bd596ac120 <col:39> 'Router::notifier_signals_t *' implicit this
|-CXXConstructorDecl 0x55bd596a09c8 <line:280:12> col:12 implicit notifier_signals_t 'void (const Router::notifier_signals_t &)' inline default noexcept-unevaluated 0x55bd596a09c8
| `-ParmVarDecl 0x55bd596a0ad8 <col:12> col:12 'const Router::notifier_signals_t &'
|-CXXConstructorDecl 0x55bd596a0b78 <col:12> col:12 implicit notifier_signals_t 'void (Router::notifier_signals_t &&)' inline default noexcept-unevaluated 0x55bd596a0b78
| `-ParmVarDecl 0x55bd596a0c88 <col:12> col:12 'Router::notifier_signals_t &&'
|-CXXMethodDecl 0x55bd596a0d28 <col:12> col:12 implicit operator= 'Router::notifier_signals_t &(const Router::notifier_signals_t &)' inline default noexcept-unevaluated 0x55bd596a0d28
| `-ParmVarDecl 0x55bd596a0e38 <col:12> col:12 'const Router::notifier_signals_t &'
|-CXXMethodDecl 0x55bd596a0ea8 <col:12> col:12 implicit operator= 'Router::notifier_signals_t &(Router::notifier_signals_t &&)' inline default noexcept-unevaluated 0x55bd596a0ea8
| `-ParmVarDecl 0x55bd596a0fb8 <col:12> col:12 'Router::notifier_signals_t &&'
`-CXXDestructorDecl 0x55bd596a1040 <col:12> col:12 implicit ~notifier_signals_t 'void ()' inline default noexcept-unevaluated 0x55bd596a1040

Layout: <CGRecordLayout
  LLVMType:%"struct.Router::notifier_signals_t" = type { %class.String, i32, [128 x %class.atomic_uint32_t], %"struct.Router::notifier_signals_t"* }
  NonVirtualBaseLLVMType:%"struct.Router::notifier_signals_t" = type { %class.String, i32, [128 x %class.atomic_uint32_t], %"struct.Router::notifier_signals_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class ThreadSched
         0 |   (ThreadSched vtable pointer)
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55bd59663830 <../dummy_inc/click/standard/threadsched.hh:6:1, line:15:1> line:6:7 class ThreadSched definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple non_trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55bd59663948 <col:1, col:7> col:7 implicit referenced class ThreadSched
|-AccessSpecDecl 0x55bd596639d8 <col:21, col:27> col:21 public
|-EnumDecl 0x55bd59663a00 <line:8:5, col:58> col:5
| |-EnumConstantDecl 0x55bd59663b18 <col:12, col:32> col:12 THREAD_QUIESCENT 'ThreadSched::(anonymous enum at ../dummy_inc/click/standard/threadsched.hh:8:5)'
| | `-ConstantExpr 0x55bd59663af8 <col:31, col:32> 'int' Int: -1
| |   `-UnaryOperator 0x55bd59663ae0 <col:31, col:32> 'int' prefix '-'
| |     `-IntegerLiteral 0x55bd59663ac0 <col:32> 'int' 1
| `-EnumConstantDecl 0x55bd59663bc0 <col:35, col:53> col:35 THREAD_UNKNOWN 'ThreadSched::(anonymous enum at ../dummy_inc/click/standard/threadsched.hh:8:5)'
|   `-ConstantExpr 0x55bd59663ba0 <col:52, col:53> 'int' Int: -1000
|     `-UnaryOperator 0x55bd59663b88 <col:52, col:53> 'int' prefix '-'
|       `-IntegerLiteral 0x55bd59663b68 <col:53> 'int' 1000
|-CXXConstructorDecl 0x55bd59663c70 <line:10:5, col:21> col:5 ThreadSched 'void ()'
| `-CompoundStmt 0x55bd596641a8 <col:19, col:21>
|-CXXDestructorDecl 0x55bd59663d60 <line:11:5, col:30> col:13 ~ThreadSched 'void () noexcept' virtual
| `-CompoundStmt 0x55bd596641b8 <col:28, col:30>
|-CXXMethodDecl 0x55bd59663f20 <line:13:5, col:56> col:17 initial_home_thread_id 'int (const Element *)' virtual
| `-ParmVarDecl 0x55bd59663e50 <col:40, col:55> col:55 e 'const Element *'
`-CXXMethodDecl 0x55bd59664028 <line:6:7> col:7 implicit operator= 'ThreadSched &(const ThreadSched &)' inline default noexcept-unevaluated 0x55bd59664028
  `-ParmVarDecl 0x55bd59664138 <col:7> col:7 'const ThreadSched &'

Layout: <CGRecordLayout
  LLVMType:%class.ThreadSched = type { i32 (...)** }
  NonVirtualBaseLLVMType:%class.ThreadSched = type { i32 (...)** }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class Vector<class NameDB *>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class NameInfo
         0 |   class Vector<class NameDB *> _namedb_roots
         0 |     class vector_memory<class sized_array_memory<8> > vm_
         0 |       vector_memory<class sized_array_memory<8> >::type * l_
         8 |       vector_memory::size_type n_
        12 |       vector_memory::size_type capacity_
        16 |   class Vector<class NameDB *> _namedbs
        16 |     class vector_memory<class sized_array_memory<8> > vm_
        16 |       vector_memory<class sized_array_memory<8> >::type * l_
        24 |       vector_memory::size_type n_
        28 |       vector_memory::size_type capacity_
           | [sizeof=32, dsize=32, align=8,
           |  nvsize=32, nvalign=8]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55bd595b8390 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'NameDB *'
|-CXXRecordDecl 0x55bd595b8598 prev 0x55bd595b8390 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55bd595b96e0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<NameDB *>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x55bd595b9690 'typename array_memory<NameDB *>::type' sugar
|   `-TypedefType 0x55bd595b9670 'conditional<true, sized_array_memory<8>, typed_array_memory<NameDB *> >::type' sugar
|     |-Typedef 0x55bd595b9520 'type'
|     `-SubstTemplateTypeParmType 0x55bd595b9340 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x55bd5922c210 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55bd5922c1b8 'T'
|       `-RecordType 0x55bd595b8e90 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x55bd595b8da8 'sized_array_memory'
|-FieldDecl 0x55bd595bd310 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<NameDB *>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x55bd595bd360 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55bd595bd398 <line:118:5, col:15> col:15 value_type 'NameDB *':'NameDB *'
| `-SubstTemplateTypeParmType 0x55bd595b8630 'NameDB *' sugar
|   |-TemplateTypeParmType 0x55bd59264120 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55bd592640c8 'T'
|   `-PointerType 0x55bd595b64c0 'NameDB *'
|     `-RecordType 0x55bd595b4c30 'NameDB'
|       `-CXXRecord 0x55bd595c3968 'NameDB'
|-TypedefDecl 0x55bd595bd458 <line:119:5, col:16> col:16 reference 'NameDB *&'
| `-LValueReferenceType 0x55bd595bd420 'NameDB *&'
|   `-SubstTemplateTypeParmType 0x55bd595b8630 'NameDB *' sugar
|     |-TemplateTypeParmType 0x55bd59264120 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55bd592640c8 'T'
|     `-PointerType 0x55bd595b64c0 'NameDB *'
|       `-RecordType 0x55bd595b4c30 'NameDB'
|         `-CXXRecord 0x55bd595c3968 'NameDB'
|-TypedefDecl 0x55bd595bd518 <line:120:5, col:22> col:22 const_reference 'NameDB *const &'
| `-LValueReferenceType 0x55bd595bd4e0 'NameDB *const &'
|   `-QualType 0x55bd595b8631 'NameDB *const' const
|     `-SubstTemplateTypeParmType 0x55bd595b8630 'NameDB *' sugar
|       |-TemplateTypeParmType 0x55bd59264120 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55bd592640c8 'T'
|       `-PointerType 0x55bd595b64c0 'NameDB *'
|         `-RecordType 0x55bd595b4c30 'NameDB'
|           `-CXXRecord 0x55bd595c3968 'NameDB'
|-TypedefDecl 0x55bd595bd5d8 <line:121:5, col:16> col:16 pointer 'NameDB **'
| `-PointerType 0x55bd595bd5a0 'NameDB **'
|   `-SubstTemplateTypeParmType 0x55bd595b8630 'NameDB *' sugar
|     |-TemplateTypeParmType 0x55bd59264120 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55bd592640c8 'T'
|     `-PointerType 0x55bd595b64c0 'NameDB *'
|       `-RecordType 0x55bd595b4c30 'NameDB'
|         `-CXXRecord 0x55bd595c3968 'NameDB'
|-TypedefDecl 0x55bd595bd698 <line:122:5, col:22> col:22 const_pointer 'NameDB *const *'
| `-PointerType 0x55bd595bd660 'NameDB *const *'
|   `-QualType 0x55bd595b8631 'NameDB *const' const
|     `-SubstTemplateTypeParmType 0x55bd595b8630 'NameDB *' sugar
|       |-TemplateTypeParmType 0x55bd59264120 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55bd592640c8 'T'
|       `-PointerType 0x55bd595b64c0 'NameDB *'
|         `-RecordType 0x55bd595b4c30 'NameDB'
|           `-CXXRecord 0x55bd595c3968 'NameDB'
|-TypedefDecl 0x55bd595be270 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<NameDB *>::type':'NameDB *'
| `-ElaboratedType 0x55bd595be220 'typename fast_argument<NameDB *>::type' sugar
|   `-TypedefType 0x55bd595be200 'fast_argument<NameDB *, false>::type' sugar
|     |-Typedef 0x55bd595be190 'type'
|     `-SubstTemplateTypeParmType 0x55bd595bdf50 'NameDB *' sugar
|       |-TemplateTypeParmType 0x55bd59237010 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55bd59236fc0 'T'
|       `-PointerType 0x55bd595b64c0 'NameDB *'
|         `-RecordType 0x55bd595b4c30 'NameDB'
|           `-CXXRecord 0x55bd595c3968 'NameDB'
|-TypedefDecl 0x55bd595be2d8 <line:126:5, col:22> col:22 const_access_type 'NameDB *const &'
| `-LValueReferenceType 0x55bd595bd4e0 'NameDB *const &'
|   `-QualType 0x55bd595b8631 'NameDB *const' const
|     `-SubstTemplateTypeParmType 0x55bd595b8630 'NameDB *' sugar
|       |-TemplateTypeParmType 0x55bd59264120 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55bd592640c8 'T'
|       `-PointerType 0x55bd595b64c0 'NameDB *'
|         `-RecordType 0x55bd595b4c30 'NameDB'
|           `-CXXRecord 0x55bd595c3968 'NameDB'
|-TypedefDecl 0x55bd595be330 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55bd58f62370 'int'
|-TypedefDecl 0x55bd595be398 <line:130:5, col:16> col:16 iterator 'NameDB **'
| `-PointerType 0x55bd595bd5a0 'NameDB **'
|   `-SubstTemplateTypeParmType 0x55bd595b8630 'NameDB *' sugar
|     |-TemplateTypeParmType 0x55bd59264120 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55bd592640c8 'T'
|     `-PointerType 0x55bd595b64c0 'NameDB *'
|       `-RecordType 0x55bd595b4c30 'NameDB'
|         `-CXXRecord 0x55bd595c3968 'NameDB'
|-TypedefDecl 0x55bd595be400 <line:131:5, col:22> col:22 const_iterator 'NameDB *const *'
| `-PointerType 0x55bd595bd660 'NameDB *const *'
|   `-QualType 0x55bd595b8631 'NameDB *const' const
|     `-SubstTemplateTypeParmType 0x55bd595b8630 'NameDB *' sugar
|       |-TemplateTypeParmType 0x55bd59264120 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55bd592640c8 'T'
|       `-PointerType 0x55bd595b64c0 'NameDB *'
|         `-RecordType 0x55bd595b4c30 'NameDB'
|           `-CXXRecord 0x55bd595c3968 'NameDB'
|-EnumDecl 0x55bd595be458 <line:134:5> col:5
| `-EnumConstantDecl 0x55bd595be550 <col:12, col:40> col:12 RESERVE_GROW 'Vector<NameDB *>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55bd595be530 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55bd592657a8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55bd59265780 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55bd59265760 <col:40> 'int' 1
|-CXXConstructorDecl 0x55bd595be5d8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55bd595be868 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<NameDB *>::value_argument_type)' inline
| |-ParmVarDecl 0x55bd595be690 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55bd595be730 <col:41, col:61> col:61 v 'Vector<NameDB *>::value_argument_type':'NameDB *'
|-CXXConstructorDecl 0x55bd595beb28 <line:139:5, col:37> col:12 Vector 'void (const Vector<NameDB *> &)' inline
| `-ParmVarDecl 0x55bd595bea10 <col:19, col:36> col:36 x 'const Vector<NameDB *> &'
|-CXXConstructorDecl 0x55bd595bede8 <line:141:5, col:32> col:12 Vector 'void (Vector<NameDB *> &&)' inline
| `-ParmVarDecl 0x55bd595becd0 <col:19, col:31> col:31 x 'Vector<NameDB *> &&'
|-CXXMethodDecl 0x55bd595bf130 <line:144:5, col:51> col:23 operator= 'Vector<NameDB *> &(const Vector<NameDB *> &)' inline
| `-ParmVarDecl 0x55bd595bf010 <col:33, col:50> col:50 x 'const Vector<NameDB *> &'
|-CXXMethodDecl 0x55bd595bf440 <line:146:5, col:46> col:23 operator= 'Vector<NameDB *> &(Vector<NameDB *> &&)' inline
| `-ParmVarDecl 0x55bd595bf320 <col:33, col:45> col:45 x 'Vector<NameDB *> &&'
|-CXXMethodDecl 0x55bd595bf730 <line:148:5, col:70> col:23 assign 'Vector<NameDB *> &(Vector::size_type, Vector<NameDB *>::value_argument_type)' inline
| |-ParmVarDecl 0x55bd595bf578 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55bd595bf5f0 <col:43, col:69> col:63 v 'Vector<NameDB *>::value_argument_type':'NameDB *'
|-CXXMethodDecl 0x55bd595bf888 <line:150:5, col:55> col:49 begin 'Vector<NameDB *>::iterator ()'
| |-NoInlineAttr 0x55bd595bf968 <col:20> Inherited
| `-OptimizeNoneAttr 0x55bd595bf9c0 <col:30> Inherited
|-CXXMethodDecl 0x55bd595bfa08 <line:151:5, col:53> col:49 end 'Vector<NameDB *>::iterator ()'
| |-NoInlineAttr 0x55bd595bfab8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55bd595bfb10 <col:30> Inherited
|-CXXMethodDecl 0x55bd595bfbd8 <line:152:5, col:63> col:55 begin 'Vector<NameDB *>::const_iterator () const'
| |-NoInlineAttr 0x55bd595bfc88 <col:20> Inherited
| `-OptimizeNoneAttr 0x55bd595bfce0 <col:30> Inherited
|-CXXMethodDecl 0x55bd595bfd28 <line:153:5, col:61> col:55 end 'Vector<NameDB *>::const_iterator () const'
| |-NoInlineAttr 0x55bd595bfdd8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55bd595bfe30 <col:30> Inherited
|-CXXMethodDecl 0x55bd595bfe78 <line:154:5, col:64> col:55 cbegin 'Vector<NameDB *>::const_iterator () const'
| |-NoInlineAttr 0x55bd595bff28 <col:20> Inherited
| `-OptimizeNoneAttr 0x55bd595bff80 <col:30> Inherited
|-CXXMethodDecl 0x55bd595c0000 <line:155:5, col:62> col:55 cend 'Vector<NameDB *>::const_iterator () const'
| |-NoInlineAttr 0x55bd595c00b0 <col:20> Inherited
| `-OptimizeNoneAttr 0x55bd595c0108 <col:30> Inherited
|-CXXMethodDecl 0x55bd595c0130 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55bd595c01e0 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55bd595c0290 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55bd595c0450 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<NameDB *>::value_argument_type)' inline
| |-ParmVarDecl 0x55bd595c0340 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55bd595c03b8 <col:37, col:63> col:57 v 'Vector<NameDB *>::value_argument_type':'NameDB *'
|-CXXMethodDecl 0x55bd595c05a0 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55bd595c0510 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55bd595c0748 <line:163:5, col:65> col:43 operator[] 'NameDB *&(Vector::size_type)'
| |-ParmVarDecl 0x55bd595c0658 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55bd595c0800 <col:20>
| `-OptimizeNoneAttr 0x55bd595c0858 <col:30>
|-CXXMethodDecl 0x55bd595c0978 <line:164:5, col:73> col:49 operator[] 'NameDB *const &(Vector::size_type) const'
| |-ParmVarDecl 0x55bd595c0880 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55bd595c0a30 <col:20>
| `-OptimizeNoneAttr 0x55bd595c0a88 <col:30>
|-CXXMethodDecl 0x55bd595c0b40 <line:165:5, col:29> col:15 at 'NameDB *&(Vector::size_type)' inline
| `-ParmVarDecl 0x55bd595c0ab0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55bd595c0c88 <line:166:5, col:37> col:21 at 'NameDB *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55bd595c0bf8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55bd595c0db8 <line:167:5, col:21> col:15 front 'NameDB *&()' inline
|-CXXMethodDecl 0x55bd595c0ee8 <line:168:5, col:29> col:21 front 'NameDB *const &() const' inline
|-CXXMethodDecl 0x55bd595c0fb8 <line:169:5, col:20> col:15 back 'NameDB *&()' inline
|-CXXMethodDecl 0x55bd595c1088 <line:170:5, col:28> col:21 back 'NameDB *const &() const' inline
|-CXXMethodDecl 0x55bd595c11c8 <line:172:5, col:39> col:15 unchecked_at 'NameDB *&(Vector::size_type)' inline
| `-ParmVarDecl 0x55bd595c1138 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55bd595c1310 <line:173:5, col:47> col:21 unchecked_at 'NameDB *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55bd595c1280 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55bd595c1458 <line:174:5, col:59> col:15 at_u 'NameDB *&(Vector::size_type)' inline
| |-ParmVarDecl 0x55bd595c13c8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55bd595c1510 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55bd595c1610 <line:175:5, col:71> col:21 at_u 'NameDB *const &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55bd595c1580 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55bd595c16c8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55bd595c1788 <line:177:5, col:20> col:15 data 'NameDB **()' inline
|-CXXMethodDecl 0x55bd595c1888 <line:178:5, col:28> col:21 data 'NameDB *const *() const' inline
|-CXXMethodDecl 0x55bd595c1a08 <line:180:5, col:48> col:17 push_back 'void (Vector<NameDB *>::value_argument_type)' inline
| `-ParmVarDecl 0x55bd595c1948 <col:27, col:47> col:47 v 'Vector<NameDB *>::value_argument_type':'NameDB *'
|-FunctionTemplateDecl 0x55bd595c21c8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55bd595c1ac0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<NameDB *>':'fast_argument<NameDB *, false>'
| `-CXXMethodDecl 0x55bd595c2128 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (NameDB *&&)' inline
|   `-ParmVarDecl 0x55bd595c2028 <col:58, col:62> col:62 v 'NameDB *&&'
|-CXXMethodDecl 0x55bd595c22a8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55bd595c23f8 <line:186:5, col:49> col:17 push_front 'void (Vector<NameDB *>::value_argument_type)' inline
| `-ParmVarDecl 0x55bd595c2368 <col:28, col:48> col:48 v 'Vector<NameDB *>::value_argument_type':'NameDB *'
|-CXXMethodDecl 0x55bd595c24b0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55bd595c26f8 <line:189:5, col:62> col:21 insert 'Vector<NameDB *>::iterator (Vector<NameDB *>::iterator, Vector<NameDB *>::value_argument_type)' inline
| |-ParmVarDecl 0x55bd595c2570 <col:28, col:37> col:37 it 'Vector<NameDB *>::iterator':'NameDB **'
| `-ParmVarDecl 0x55bd595c25e8 <col:41, col:61> col:61 v 'Vector<NameDB *>::value_argument_type':'NameDB *'
|-CXXMethodDecl 0x55bd595c28b8 <line:190:5, col:38> col:21 erase 'Vector<NameDB *>::iterator (Vector<NameDB *>::iterator)' inline
| `-ParmVarDecl 0x55bd595c27c8 <col:27, col:36> col:36 it 'Vector<NameDB *>::iterator':'NameDB **'
|-CXXMethodDecl 0x55bd595c2b08 <line:191:5, col:49> col:21 erase 'Vector<NameDB *>::iterator (Vector<NameDB *>::iterator, Vector<NameDB *>::iterator)' inline
| |-ParmVarDecl 0x55bd595c2980 <col:27, col:36> col:36 a 'Vector<NameDB *>::iterator':'NameDB **'
| `-ParmVarDecl 0x55bd595c29f8 <col:39, col:48> col:48 b 'Vector<NameDB *>::iterator':'NameDB **'
|-CXXMethodDecl 0x55bd595c2bc8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55bd595c2e28 <line:195:5, col:34> col:17 swap 'void (Vector<NameDB *> &)' inline
| `-ParmVarDecl 0x55bd595c2d30 <col:22, col:33> col:33 x 'Vector<NameDB *> &'
`-CXXDestructorDecl 0x55bd595c2ef8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55bd595c2ef8

Layout: <CGRecordLayout
  LLVMType:%class.Vector.13 = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector.13 = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55bd595b4ce0 <../dummy_inc/click/nameinfo.hh:11:1, line:243:1> line:11:7 referenced class NameInfo definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55bd595b4df8 <col:1, col:7> col:7 implicit referenced class NameInfo
|-AccessSpecDecl 0x55bd595b4e88 <col:18, col:24> col:18 public
|-CXXConstructorDecl 0x55bd595b4f10 <line:16:5, col:14> col:5 NameInfo 'void ()'
|-CXXDestructorDecl 0x55bd595b5000 <line:23:5, col:15> col:5 ~NameInfo 'void ()' noexcept-unevaluated 0x55bd595b5000
|-CXXMethodDecl 0x55bd595b5100 <line:29:5, col:35> col:17 static_initialize 'void ()' static
|-CXXMethodDecl 0x55bd595b51c0 <line:35:5, col:32> col:17 static_cleanup 'void ()' static
|-EnumDecl 0x55bd595b5260 <line:38:5, line:63:5> line:38:10 DBType
| |-EnumConstantDecl 0x55bd595b5360 <line:39:2, col:11> col:2 T_NONE 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x55bd595b60a0 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55bd595b5340 <col:11> 'int' Int: 0
| |     `-IntegerLiteral 0x55bd595b5320 <col:11> 'int' 0
| |-EnumConstantDecl 0x55bd595b53f0 <line:40:2, col:19> col:2 T_SCHEDULEINFO 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x55bd595b60b8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55bd595b53d0 <col:19> 'int' Int: 1
| |     `-IntegerLiteral 0x55bd595b53b0 <col:19> 'int' 1
| |-EnumConstantDecl 0x55bd595b5480 <line:41:2, col:17> col:2 T_ANNOTATION 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x55bd595b60d0 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55bd595b5460 <col:17> 'int' Int: 2
| |     `-IntegerLiteral 0x55bd595b5440 <col:17> 'int' 2
| |-EnumConstantDecl 0x55bd595b5510 <line:42:2, col:18> col:2 T_SCRIPT_INSN 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x55bd595b60e8 <col:18> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55bd595b54f0 <col:18> 'int' Int: 3
| |     `-IntegerLiteral 0x55bd595b54d0 <col:18> 'int' 3
| |-EnumConstantDecl 0x55bd595b55a0 <line:43:2, col:12> col:2 T_SIGNO 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x55bd595b6100 <col:12> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55bd595b5580 <col:12> 'int' Int: 4
| |     `-IntegerLiteral 0x55bd595b5560 <col:12> 'int' 4
| |-EnumConstantDecl 0x55bd595b5630 <line:44:2, col:15> col:2 T_SPINLOCK 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x55bd595b6118 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55bd595b5610 <col:15> 'int' Int: 5
| |     `-IntegerLiteral 0x55bd595b55f0 <col:15> 'int' 5
| |-EnumConstantDecl 0x55bd595b56c0 <line:45:2, col:20> col:2 T_ETHERNET_ADDR 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x55bd595b6130 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55bd595b56a0 <col:20> 'int' Int: 16777217
| |     `-IntegerLiteral 0x55bd595b5680 <col:20> 'int' 16777217
| |-EnumConstantDecl 0x55bd595b5750 <line:46:2, col:14> col:2 T_IP_ADDR 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x55bd595b6148 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55bd595b5730 <col:14> 'int' Int: 67108865
| |     `-IntegerLiteral 0x55bd595b5710 <col:14> 'int' 67108865
| |-EnumConstantDecl 0x55bd595b57e0 <line:47:2, col:16> col:2 T_IP_PREFIX 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x55bd595b6160 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55bd595b57c0 <col:16> 'int' Int: 67108866
| |     `-IntegerLiteral 0x55bd595b57a0 <col:16> 'int' 67108866
| |-EnumConstantDecl 0x55bd595b5870 <line:48:2, col:15> col:2 T_IP_PROTO 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x55bd595b6178 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55bd595b5850 <col:15> 'int' Int: 67108867
| |     `-IntegerLiteral 0x55bd595b5830 <col:15> 'int' 67108867
| |-EnumConstantDecl 0x55bd595b5900 <line:49:2, col:20> col:2 T_IPFILTER_TYPE 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x55bd595b6190 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55bd595b58e0 <col:20> 'int' Int: 67108868
| |     `-IntegerLiteral 0x55bd595b58c0 <col:20> 'int' 67108868
| |-EnumConstantDecl 0x55bd595b5990 <line:50:2, col:14> col:2 T_TCP_OPT 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x55bd595b61a8 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55bd595b5970 <col:14> 'int' Int: 67108869
| |     `-IntegerLiteral 0x55bd595b5950 <col:14> 'int' 67108869
| |-EnumConstantDecl 0x55bd595b5a20 <line:51:2, col:25> col:2 T_IPREWRITER_PATTERN 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x55bd595b61c0 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55bd595b5a00 <col:25> 'int' Int: 67108870
| |     `-IntegerLiteral 0x55bd595b59e0 <col:25> 'int' 67108870
| |-EnumConstantDecl 0x55bd595b5ab0 <line:52:2, col:16> col:2 T_ICMP_TYPE 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x55bd595b61d8 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55bd595b5a90 <col:16> 'int' Int: 67174400
| |     `-IntegerLiteral 0x55bd595b5a70 <col:16> 'int' 67174400
| |-EnumConstantDecl 0x55bd595b5b40 <line:53:2, col:16> col:2 T_ICMP_CODE 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x55bd595b61f0 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55bd595b5b20 <col:16> 'int' Int: 67174656
| |     `-IntegerLiteral 0x55bd595b5b00 <col:16> 'int' 67174656
| |-EnumConstantDecl 0x55bd595b5bd0 <line:54:2, col:14> col:2 T_IP_PORT 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x55bd595b6208 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55bd595b5bb0 <col:14> 'int' Int: 67239936
| |     `-IntegerLiteral 0x55bd595b5b90 <col:14> 'int' 67239936
| |-EnumConstantDecl 0x55bd595b5c60 <line:55:2, col:15> col:2 T_TCP_PORT 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x55bd595b6220 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55bd595b5c40 <col:15> 'int' Int: 67239942
| |     `-IntegerLiteral 0x55bd595b5c20 <col:15> 'int' 67239942
| |-EnumConstantDecl 0x55bd595b5cf0 <line:56:2, col:15> col:2 T_UDP_PORT 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x55bd595b6238 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55bd595b5cd0 <col:15> 'int' Int: 67239953
| |     `-IntegerLiteral 0x55bd595b5cb0 <col:15> 'int' 67239953
| |-EnumConstantDecl 0x55bd595b5d80 <line:57:2, col:19> col:2 T_IP_FIELDNAME 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x55bd595b6250 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55bd595b5d60 <col:19> 'int' Int: 67305472
| |     `-IntegerLiteral 0x55bd595b5d40 <col:19> 'int' 67305472
| |-EnumConstantDecl 0x55bd595b5e10 <line:58:2, col:21> col:2 T_ICMP_FIELDNAME 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x55bd595b6268 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55bd595b5df0 <col:21> 'int' Int: 67305473
| |     `-IntegerLiteral 0x55bd595b5dd0 <col:21> 'int' 67305473
| |-EnumConstantDecl 0x55bd595b5ea0 <line:59:2, col:20> col:2 T_TCP_FIELDNAME 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x55bd595b6280 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55bd595b5e80 <col:20> 'int' Int: 67305478
| |     `-IntegerLiteral 0x55bd595b5e60 <col:20> 'int' 67305478
| |-EnumConstantDecl 0x55bd595b5f30 <line:60:2, col:20> col:2 T_UDP_FIELDNAME 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x55bd595b6298 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55bd595b5f10 <col:20> 'int' Int: 67305489
| |     `-IntegerLiteral 0x55bd595b5ef0 <col:20> 'int' 67305489
| |-EnumConstantDecl 0x55bd595b5fc0 <line:61:2, col:15> col:2 T_IP6_ADDR 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x55bd595b62b0 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55bd595b5fa0 <col:15> 'int' Int: 100663297
| |     `-IntegerLiteral 0x55bd595b5f80 <col:15> 'int' 100663297
| `-EnumConstantDecl 0x55bd595b6050 <line:62:2, col:17> col:2 T_IP6_PREFIX 'NameInfo::DBType'
|   `-ImplicitCastExpr 0x55bd595b62c8 <col:17> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55bd595b6030 <col:17> 'int' Int: 100663298
|       `-IntegerLiteral 0x55bd595b6010 <col:17> 'int' 100663298
|-CXXMethodDecl 0x55bd595b65c8 <line:85:5, line:86:35> line:85:20 used getdb 'NameDB *(uint32_t, const Element *, size_t, bool)' static
| |-ParmVarDecl 0x55bd595b62f0 <col:26, col:35> col:35 type 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55bd595b6368 <col:41, col:56> col:56 context 'const Element *'
| |-ParmVarDecl 0x55bd595b63e0 <line:86:5, col:12> col:12 value_size 'size_t':'unsigned long'
| `-ParmVarDecl 0x55bd595b6458 <col:24, col:29> col:29 create 'bool'
|-CXXMethodDecl 0x55bd595b67e8 <line:104:5, col:61> col:17 installdb 'void (NameDB *, const Element *)' static
| |-ParmVarDecl 0x55bd595b6698 <col:27, col:35> col:35 db 'NameDB *'
| `-ParmVarDecl 0x55bd595b6710 <col:39, col:54> col:54 context 'const Element *'
|-CXXMethodDecl 0x55bd595b6968 <line:112:5, col:39> col:17 used uninstalldb 'void (NameDB *)' static
| `-ParmVarDecl 0x55bd595b68a8 <col:29, col:37> col:37 db 'NameDB *'
|-CXXMethodDecl 0x55bd595b6d58 <line:127:5, line:128:65> line:127:17 used query 'bool (uint32_t, const Element *, const String &, void *, size_t)' static
| |-ParmVarDecl 0x55bd595b6a20 <col:23, col:32> col:32 type 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55bd595b6a98 <col:38, col:53> col:53 context 'const Element *'
| |-ParmVarDecl 0x55bd595b6b10 <line:128:9, col:23> col:23 name 'const String &'
| |-ParmVarDecl 0x55bd595b6b90 <col:29, col:35> col:35 value_store 'void *'
| `-ParmVarDecl 0x55bd595b6c08 <col:48, col:55> col:55 value_size 'size_t':'unsigned long'
|-CXXMethodDecl 0x55bd595b70d8 <line:147:5, line:148:46> line:147:17 query_int 'bool (uint32_t, const Element *, const String &, int32_t *)' static
| |-ParmVarDecl 0x55bd595b6e30 <col:27, col:36> col:36 type 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55bd595b6ea8 <col:42, col:57> col:57 context 'const Element *'
| |-ParmVarDecl 0x55bd595b6f20 <line:148:6, col:20> col:20 name 'const String &'
| `-ParmVarDecl 0x55bd595b6f98 <col:26, col:35> col:35 value_store 'int32_t *'
|-CXXMethodDecl 0x55bd595b7458 <line:151:5, line:152:47> line:151:17 query_int 'bool (uint32_t, const Element *, const String &, uint32_t *)' static
| |-ParmVarDecl 0x55bd595b71a8 <col:27, col:36> col:36 type 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55bd595b7220 <col:42, col:57> col:57 context 'const Element *'
| |-ParmVarDecl 0x55bd595b7298 <line:152:6, col:20> col:20 name 'const String &'
| `-ParmVarDecl 0x55bd595b7310 <col:26, col:36> col:36 value_store 'uint32_t *'
|-CXXMethodDecl 0x55bd595b77d8 <line:167:5, line:168:43> line:167:19 used revquery 'String (uint32_t, const Element *, const void *, size_t)' static
| |-ParmVarDecl 0x55bd595b7528 <col:28, col:37> col:37 type 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55bd595b75a0 <col:43, col:58> col:58 context 'const Element *'
| |-ParmVarDecl 0x55bd595b7620 <line:168:7, col:19> col:19 value 'const void *'
| `-ParmVarDecl 0x55bd595b7698 <col:26, col:33> col:33 value_size 'size_t':'unsigned long'
|-CXXMethodDecl 0x55bd595b7ab8 <line:182:5, line:183:24> line:182:26 revquery_int 'String (uint32_t, const Element *, int32_t)' static inline
| |-ParmVarDecl 0x55bd595b78a8 <col:39, col:48> col:48 type 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55bd595b7920 <col:54, col:69> col:69 context 'const Element *'
| `-ParmVarDecl 0x55bd595b7998 <line:183:11, col:19> col:19 value 'int32_t':'int'
|-CXXMethodDecl 0x55bd595b7eb8 <line:202:5, line:203:66> line:202:24 define 'bool (uint32_t, const Element *, const String &, const void *, size_t)' static inline
| |-ParmVarDecl 0x55bd595b7b80 <col:31, col:40> col:40 type 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55bd595b7bf8 <col:46, col:61> col:61 context 'const Element *'
| |-ParmVarDecl 0x55bd595b7c70 <line:203:10, col:24> col:24 name 'const String &'
| |-ParmVarDecl 0x55bd595b7cf0 <col:30, col:42> col:42 value 'const void *'
| `-ParmVarDecl 0x55bd595b7d68 <col:49, col:56> col:56 value_size 'size_t':'unsigned long'
|-CXXMethodDecl 0x55bd595b8298 <line:220:5, line:221:40> line:220:24 define_int 'bool (uint32_t, const Element *, const String &, int32_t)' static inline
| |-ParmVarDecl 0x55bd595b7ff0 <col:35, col:44> col:44 type 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55bd595b8068 <col:50, col:65> col:65 context 'const Element *'
| |-ParmVarDecl 0x55bd595b80e0 <line:221:7, col:21> col:21 name 'const String &'
| `-ParmVarDecl 0x55bd595b8158 <col:27, col:35> col:35 value 'int32_t':'int'
|-AccessSpecDecl 0x55bd595b8358 <line:230:3, col:10> col:3 private
|-FieldDecl 0x55bd595c2fe0 <line:232:5, col:22> col:22 _namedb_roots 'Vector<NameDB *>':'Vector<NameDB *>'
|-FieldDecl 0x55bd595c30e0 <line:233:5, col:22> col:22 _namedbs 'Vector<NameDB *>':'Vector<NameDB *>'
|-CXXMethodDecl 0x55bd595c3178 <line:235:5, col:73> col:20 install_dynamic_sentinel 'NameDB *()' inline
| `-CompoundStmt 0x55bd595c3950 <col:47, col:73>
|   `-ReturnStmt 0x55bd595c3940 <col:49, col:67>
|     `-CStyleCastExpr 0x55bd595c3918 <col:56, col:67> 'NameDB *' <BitCast>
|       `-CXXThisExpr 0x55bd595c38f8 <col:67> 'NameInfo *' this
|-CXXMethodDecl 0x55bd595c34d8 <line:236:5, col:87> col:13 namedb 'NameDB *(uint32_t, size_t, const String &, NameDB *)'
| |-ParmVarDecl 0x55bd595c3228 <col:20, col:29> col:29 type 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55bd595c32a0 <col:35, col:42> col:42 size 'size_t':'unsigned long'
| |-ParmVarDecl 0x55bd595c3318 <col:48, col:62> col:62 prefix 'const String &'
| `-ParmVarDecl 0x55bd595c3390 <col:70, col:78> col:78 installer 'NameDB *'
|-CXXConstructorDecl 0x55bd595c35c8 <line:11:7> col:7 implicit NameInfo 'void (const NameInfo &)' inline default noexcept-unevaluated 0x55bd595c35c8
| `-ParmVarDecl 0x55bd595c36d8 <col:7> col:7 'const NameInfo &'
`-CXXMethodDecl 0x55bd595c3778 <col:7> col:7 implicit operator= 'NameInfo &(const NameInfo &)' inline default noexcept-unevaluated 0x55bd595c3778
  `-ParmVarDecl 0x55bd595c3888 <col:7> col:7 'const NameInfo &'

Layout: <CGRecordLayout
  LLVMType:%class.NameInfo = type { %class.Vector.13, %class.Vector.13 }
  NonVirtualBaseLLVMType:%class.NameInfo = type { %class.Vector.13, %class.Vector.13 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55bd59664740 prev 0x55bd5962c160 <../dummy_inc/click/router.hh:23:1, line:352:1> line:23:7 referenced class Router definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-CXXRecordDecl 0x55bd59664838 <col:1, col:7> col:7 implicit referenced class Router
|-AccessSpecDecl 0x55bd596648c8 <col:16, col:22> col:16 public
|-CXXMethodDecl 0x55bd59664938 <line:28:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x55bd596649f8 <line:31:5, col:31> col:17 used initialized 'bool () const' inline
|-CXXMethodDecl 0x55bd59664ab8 <line:32:5, col:34> col:17 handlers_ready 'bool () const' inline
|-CXXMethodDecl 0x55bd59664b78 <line:33:5, col:27> col:17 running 'bool () const' inline
|-CXXMethodDecl 0x55bd59664c38 <line:34:5, col:25> col:17 dying 'bool () const' inline
|-EnumDecl 0x55bd59664cd8 <line:37:5, col:44> col:5
| `-EnumConstantDecl 0x55bd59664e38 <col:12, col:42> col:12 STOP_RUNCOUNT 'Router::(anonymous enum at ../dummy_inc/click/router.hh:37:5)'
|   `-ConstantExpr 0x55bd59664e18 <col:28, col:42> 'int' Int: -2147483648
|     `-BinaryOperator 0x55bd59664df8 <col:28, col:42> 'int' '-'
|       |-UnaryOperator 0x55bd59664dc0 <col:28, col:29> 'int' prefix '-'
|       | `-IntegerLiteral 0x55bd59664da0 <col:29> 'int' 2147483647
|       `-IntegerLiteral 0x55bd59664dd8 <col:42> 'int' 1
|-CXXMethodDecl 0x55bd59664ed8 <line:38:5, col:31> col:20 runcount 'int32_t () const' inline
|-CXXMethodDecl 0x55bd59665048 <line:39:5, col:39> col:10 used adjust_runcount 'void (int32_t)'
| `-ParmVarDecl 0x55bd59664f88 <col:26, col:34> col:34 delta 'int32_t':'int'
|-CXXMethodDecl 0x55bd59665190 <line:40:5, col:33> col:10 set_runcount 'void (int32_t)'
| `-ParmVarDecl 0x55bd59665100 <col:23, col:31> col:31 rc 'int32_t':'int'
|-CXXMethodDecl 0x55bd59665258 <line:41:5, col:36> col:17 please_stop_driver 'void ()' inline
|-CXXMethodDecl 0x55bd59665580 <line:44:5, col:47> col:36 elements 'const Vector<Element *> &() const' inline
|-CXXMethodDecl 0x55bd59665648 <line:45:5, col:28> col:16 nelements 'int () const' inline
|-CXXMethodDecl 0x55bd596657c8 <line:46:5, col:36> col:21 element 'Element *(int) const' inline
| `-ParmVarDecl 0x55bd59665700 <col:29, col:33> col:33 i 'int'
|-CXXMethodDecl 0x55bd59665890 <line:47:5, col:36> col:21 root_element 'Element *() const' inline
|-CXXMethodDecl 0x55bd59665a98 <line:48:5, col:56> col:21 used element 'Element *(const Router *, int)' static
| |-ParmVarDecl 0x55bd59665940 <col:29, col:43> col:43 router 'const Router *'
| `-ParmVarDecl 0x55bd596659c0 <col:51, col:55> col:55 i 'int'
|-CXXMethodDecl 0x55bd59665bf0 <line:50:5, col:32> col:19 ename 'const String &(int) const'
| `-ParmVarDecl 0x55bd59665b60 <col:25, col:29> col:29 i 'int'
|-CXXMethodDecl 0x55bd59665d40 <line:51:5, col:33> col:12 ename_context 'String (int) const'
| `-ParmVarDecl 0x55bd59665cb0 <col:26, col:30> col:30 i 'int'
|-CXXMethodDecl 0x55bd59665e90 <line:52:5, col:29> col:12 elandmark 'String (int) const'
| `-ParmVarDecl 0x55bd59665e00 <col:22, col:26> col:26 i 'int'
|-CXXMethodDecl 0x55bd59665fe0 <line:53:5, col:41> col:19 econfiguration 'const String &(int) const'
| `-ParmVarDecl 0x55bd59665f50 <col:34, col:38> col:38 i 'int'
|-CXXMethodDecl 0x55bd596661b0 <line:54:5, col:54> col:10 set_econfiguration 'void (int, const String &)'
| |-ParmVarDecl 0x55bd596660a0 <col:29, col:33> col:33 i 'int'
| `-ParmVarDecl 0x55bd59666118 <col:36, col:50> col:50 conf 'const String &'
|-CXXMethodDecl 0x55bd596663b8 <line:56:5, col:63> col:14 find 'Element *(const String &, ErrorHandler *) const'
| |-ParmVarDecl 0x55bd59666270 <col:19, col:33> col:33 name 'const String &'
| `-ParmVarDecl 0x55bd596662e8 <col:39, col:60> col:53 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x55bd596a8aa0 <col:60> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x55bd596a8a80 <col:60> 'int' 0
|-CXXMethodDecl 0x55bd59666648 <line:57:5, col:79> col:14 used find 'Element *(const String &, String, ErrorHandler *) const'
| |-ParmVarDecl 0x55bd59666478 <col:19, col:33> col:33 name 'const String &'
| |-ParmVarDecl 0x55bd596664f0 <col:39, col:46> col:46 context 'String' destroyed
| `-ParmVarDecl 0x55bd59666568 <col:55, col:76> col:69 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x55bd596a8ad8 <col:76> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x55bd596a8ab8 <col:76> 'int' 0
|-CXXMethodDecl 0x55bd596668e8 <line:58:5, col:87> col:14 find 'Element *(const String &, const Element *, ErrorHandler *) const'
| |-ParmVarDecl 0x55bd59666710 <col:19, col:33> col:33 name 'const String &'
| |-ParmVarDecl 0x55bd59666788 <col:39, col:54> col:54 context 'const Element *'
| `-ParmVarDecl 0x55bd59666800 <col:63, col:84> col:77 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x55bd596a8b10 <col:84> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x55bd596a8af0 <col:84> 'int' 0
|-CXXMethodDecl 0x55bd59666c40 <line:60:5, col:76> col:9 used visit 'int (Element *, bool, int, RouterVisitor *) const'
| |-ParmVarDecl 0x55bd596669b0 <col:15, col:24> col:24 e 'Element *'
| |-ParmVarDecl 0x55bd59666a28 <col:27, col:32> col:32 isoutput 'bool'
| |-ParmVarDecl 0x55bd59666aa8 <col:42, col:46> col:46 port 'int'
| `-ParmVarDecl 0x55bd59666b48 <col:52, col:67> col:67 visitor 'RouterVisitor *'
|-CXXMethodDecl 0x55bd59666ef0 <line:61:5, col:72> col:9 visit_downstream 'int (Element *, int, RouterVisitor *) const'
| |-ParmVarDecl 0x55bd59666d10 <col:26, col:35> col:35 e 'Element *'
| |-ParmVarDecl 0x55bd59666d90 <col:38, col:42> col:42 port 'int'
| `-ParmVarDecl 0x55bd59666e08 <col:48, col:63> col:63 visitor 'RouterVisitor *'
|-CXXMethodDecl 0x55bd59667158 <line:62:5, col:70> col:9 visit_upstream 'int (Element *, int, RouterVisitor *) const'
| |-ParmVarDecl 0x55bd59666fb8 <col:24, col:33> col:33 e 'Element *'
| |-ParmVarDecl 0x55bd59667038 <col:36, col:40> col:40 port 'int'
| `-ParmVarDecl 0x55bd596670b0 <col:46, col:61> col:61 visitor 'RouterVisitor *'
|-CXXMethodDecl 0x55bd59667610 <line:64:5, col:126> col:9 downstream_elements 'int (Element *, int, ElementFilter *, Vector<Element *> &)'
| |-ParmVarDecl 0x55bd59667220 <col:29, col:38> col:38 e 'Element *'
| |-ParmVarDecl 0x55bd596672a0 <col:41, col:45> col:45 port 'int'
| |-ParmVarDecl 0x55bd59667348 <col:51, col:66> col:66 filter 'ElementFilter *'
| |-ParmVarDecl 0x55bd596674c0 <col:74, col:92> col:92 result 'Vector<Element *> &'
| `-DeprecatedAttr 0x55bd596676d0 <col:115> "" ""
|-CXXMethodDecl 0x55bd59667a90 <line:65:5, col:124> col:9 upstream_elements 'int (Element *, int, ElementFilter *, Vector<Element *> &)'
| |-ParmVarDecl 0x55bd59667750 <col:27, col:36> col:36 e 'Element *'
| |-ParmVarDecl 0x55bd596677d0 <col:39, col:43> col:43 port 'int'
| |-ParmVarDecl 0x55bd59667848 <col:49, col:64> col:64 filter 'ElementFilter *'
| |-ParmVarDecl 0x55bd59667990 <col:72, col:90> col:90 result 'Vector<Element *> &'
| `-DeprecatedAttr 0x55bd59667b50 <col:113> "" ""
|-CXXMethodDecl 0x55bd59667ca0 <line:67:5, col:55> col:24 flow_code_override 'const char *(int) const' inline
| `-ParmVarDecl 0x55bd59667bd8 <col:43, col:47> col:47 eindex 'int'
|-CXXMethodDecl 0x55bd59667e70 <line:68:5, col:68> col:10 set_flow_code_override 'void (int, const String &)'
| |-ParmVarDecl 0x55bd59667d60 <col:33, col:37> col:37 eindex 'int'
| `-ParmVarDecl 0x55bd59667dd8 <col:45, col:59> col:59 flow_code 'const String &'
|-CXXMethodDecl 0x55bd59668078 <line:72:5, col:72> col:27 handler 'const Handler *(const Element *, const String &)' static
| |-ParmVarDecl 0x55bd59667f30 <col:35, col:50> col:50 e 'const Element *'
| `-ParmVarDecl 0x55bd59667fa8 <col:53, col:67> col:67 hname 'const String &'
|-CXXMethodDecl 0x55bd59668478 <line:73:5, col:138> col:17 add_read_handler 'void (const Element *, const String &, ReadHandlerCallback, void *, uint32_t)' static
| |-ParmVarDecl 0x55bd59668138 <col:34, col:49> col:49 e 'const Element *'
| |-ParmVarDecl 0x55bd596681b0 <col:52, col:66> col:66 hname 'const String &'
| |-ParmVarDecl 0x55bd59668228 <col:73, col:93> col:93 callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55bd596682a8 <col:103, col:109> col:109 user_data 'void *'
| `-ParmVarDecl 0x55bd59668320 <col:120, col:137> col:129 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55bd596a8b48 <col:137> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55bd596a8b28 <col:137> 'int' 0
|-CXXMethodDecl 0x55bd59668888 <line:74:5, col:140> col:17 add_write_handler 'void (const Element *, const String &, WriteHandlerCallback, void *, uint32_t)' static
| |-ParmVarDecl 0x55bd59668550 <col:35, col:50> col:50 e 'const Element *'
| |-ParmVarDecl 0x55bd596685c8 <col:53, col:67> col:67 hname 'const String &'
| |-ParmVarDecl 0x55bd59668640 <col:74, col:95> col:95 callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55bd596686c0 <col:105, col:111> col:111 user_data 'void *'
| `-ParmVarDecl 0x55bd59668738 <col:122, col:139> col:131 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55bd596a8b80 <col:139> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55bd596a8b60 <col:139> 'int' 0
|-CXXMethodDecl 0x55bd59668d90 <line:75:5, col:161> col:17 set_handler 'void (const Element *, const String &, uint32_t, HandlerCallback, void *, void *)' static
| |-ParmVarDecl 0x55bd59668960 <col:29, col:44> col:44 e 'const Element *'
| |-ParmVarDecl 0x55bd596689d8 <col:47, col:61> col:61 hname 'const String &'
| |-ParmVarDecl 0x55bd59668a50 <col:68, col:77> col:77 flags 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55bd59668ac8 <col:84, col:100> col:100 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55bd59668b48 <col:110, col:133> col:116 read_user_data 'void *' cinit
| | `-ImplicitCastExpr 0x55bd596a8bb8 <col:133> 'void *' <NullToPointer>
| |   `-IntegerLiteral 0x55bd596a8b98 <col:133> 'int' 0
| `-ParmVarDecl 0x55bd59668bc8 <col:136, col:160> col:142 write_user_data 'void *' cinit
|   `-ImplicitCastExpr 0x55bd596a8bf0 <col:160> 'void *' <NullToPointer>
|     `-IntegerLiteral 0x55bd596a8bd0 <col:160> 'int' 0
|-CXXMethodDecl 0x55bd59669120 <line:76:5, col:117> col:16 set_handler_flags 'int (const Element *, const String &, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x55bd59668e70 <col:34, col:49> col:49 e 'const Element *'
| |-ParmVarDecl 0x55bd59668ee8 <col:52, col:66> col:66 hname 'const String &'
| |-ParmVarDecl 0x55bd59668f60 <col:73, col:82> col:82 set_flags 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55bd59668fd8 <col:93, col:116> col:102 clear_flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55bd596a8c28 <col:116> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55bd596a8c08 <col:116> 'int' 0
|-EnumDecl 0x55bd596691e0 <line:78:5, col:46> col:5
| `-EnumConstantDecl 0x55bd596692e0 <col:12, col:35> col:12 FIRST_GLOBAL_HANDLER 'Router::(anonymous enum at ../dummy_inc/click/router.hh:78:5)'
|   `-ImplicitCastExpr 0x55bd59669330 <col:35> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55bd596692c0 <col:35> 'int' Int: 1073741824
|       `-IntegerLiteral 0x55bd596692a0 <col:35> 'int' 1073741824
|-CXXMethodDecl 0x55bd596694b0 <line:79:5, col:60> col:16 hindex 'int (const Element *, const String &)' static
| |-ParmVarDecl 0x55bd59669358 <col:23, col:38> col:38 e 'const Element *'
| `-ParmVarDecl 0x55bd596693d0 <col:41, col:55> col:55 hname 'const String &'
|-CXXMethodDecl 0x55bd596696c8 <line:80:5, col:67> col:27 handler 'const Handler *(const Router *, int)' static
| |-ParmVarDecl 0x55bd59669570 <col:35, col:49> col:49 router 'const Router *'
| `-ParmVarDecl 0x55bd596695f0 <col:57, col:61> col:61 hindex 'int'
|-CXXMethodDecl 0x55bd596699f8 <line:81:5, col:71> col:17 element_hindexes 'void (const Element *, Vector<int> &)' static
| |-ParmVarDecl 0x55bd59669788 <col:34, col:49> col:49 e 'const Element *'
| `-ParmVarDecl 0x55bd596698e0 <col:52, col:65> col:65 result 'Vector<int> &'
|-CXXMethodDecl 0x55bd59669b80 <line:84:5, col:43> col:11 attachment 'void *(const String &) const'
| `-ParmVarDecl 0x55bd59669ab8 <col:22, col:36> col:36 aname 'const String &'
|-CXXMethodDecl 0x55bd59669d00 <line:85:5, col:48> col:12 force_attachment 'void *&(const String &)'
| `-ParmVarDecl 0x55bd59669c38 <col:29, col:43> col:43 aname 'const String &'
|-CXXMethodDecl 0x55bd59669f10 <line:86:5, col:58> col:11 set_attachment 'void *(const String &, void *)'
| |-ParmVarDecl 0x55bd59669db8 <col:26, col:40> col:40 aname 'const String &'
| `-ParmVarDecl 0x55bd59669e38 <col:47, col:53> col:53 value 'void *'
|-CXXMethodDecl 0x55bd5966a098 <line:88:5, col:63> col:19 chatter_channel 'ErrorHandler *(const String &) const'
| `-ParmVarDecl 0x55bd59669fd0 <col:35, col:49> col:49 channel_name 'const String &'
|-CXXMethodDecl 0x55bd5966a1b8 <line:89:5, col:43> col:27 arena_factory 'HashMap_ArenaFactory *() const'
|-CXXMethodDecl 0x55bd5966a2a8 <line:91:5, col:40> col:25 thread_sched 'ThreadSched *() const' inline
|-CXXMethodDecl 0x55bd5966a418 <line:92:5, col:56> col:17 set_thread_sched 'void (ThreadSched *)' inline
| `-ParmVarDecl 0x55bd5966a358 <col:34, col:47> col:47 scheduler 'ThreadSched *'
|-CXXMethodDecl 0x55bd5966a5a0 <line:93:5, col:49> col:16 home_thread_id 'int (const Element *) const' inline
| `-ParmVarDecl 0x55bd5966a4d0 <col:31, col:46> col:46 e 'const Element *'
|-CXXMethodDecl 0x55bd5966a7a8 <line:94:5, col:69> col:17 set_home_thread_id 'void (const Element *, int)' inline
| |-ParmVarDecl 0x55bd5966a658 <col:36, col:51> col:51 e 'const Element *'
| `-ParmVarDecl 0x55bd5966a6d8 <col:54, col:58> col:58 home_thread 'int'
|-CXXMethodDecl 0x55bd5966a8a8 <line:98:5, col:34> col:22 name_info 'NameInfo *() const' inline
|-CXXMethodDecl 0x55bd5966a998 <line:99:5, col:31> col:15 force_name_info 'NameInfo *()'
|-CXXMethodDecl 0x55bd5966aa58 <line:103:5, col:35> col:12 configuration_string 'String () const'
|-CXXMethodDecl 0x55bd5966ac58 <line:104:5, col:68> col:10 unparse 'void (StringAccum &, const String &) const'
| |-ParmVarDecl 0x55bd5966ab08 <col:18, col:31> col:31 sa 'StringAccum &'
| `-ParmVarDecl 0x55bd5966ab80 <col:35, col:65> col:49 indent 'const String &' cinit
|   `-ExprWithCleanups 0x55bd596a8cd8 <col:58, col:65> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x55bd596a8cc0 <col:58, col:65> 'const String' lvalue
|       `-ImplicitCastExpr 0x55bd596a8ca8 <col:58, col:65> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x55bd596a8c88 <col:58, col:65> 'String' (CXXTemporary 0x55bd596a8c88)
|           `-CXXTemporaryObjectExpr 0x55bd596a8c50 <col:58, col:65> 'String' 'void ()'
|-CXXMethodDecl 0x55bd5966ae28 <line:105:5, col:81> col:10 unparse_requirements 'void (StringAccum &, const String &) const'
| |-ParmVarDecl 0x55bd5966ad18 <col:31, col:44> col:44 sa 'StringAccum &'
| `-ParmVarDecl 0x55bd5966ad90 <col:48, col:78> col:62 indent 'const String &' cinit
|   `-ExprWithCleanups 0x55bd596a8d88 <col:71, col:78> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x55bd596a8d70 <col:71, col:78> 'const String' lvalue
|       `-ImplicitCastExpr 0x55bd596a8d58 <col:71, col:78> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x55bd596a8d38 <col:71, col:78> 'String' (CXXTemporary 0x55bd596a8d38)
|           `-CXXTemporaryObjectExpr 0x55bd596a8d00 <col:71, col:78> 'String' 'void ()'
|-CXXMethodDecl 0x55bd5966aff8 <line:106:5, col:81> col:10 unparse_declarations 'void (StringAccum &, const String &) const'
| |-ParmVarDecl 0x55bd5966aee8 <col:31, col:44> col:44 sa 'StringAccum &'
| `-ParmVarDecl 0x55bd5966af60 <col:48, col:78> col:62 indent 'const String &' cinit
|   `-ExprWithCleanups 0x55bd596a8e38 <col:71, col:78> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x55bd596a8e20 <col:71, col:78> 'const String' lvalue
|       `-ImplicitCastExpr 0x55bd596a8e08 <col:71, col:78> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x55bd596a8de8 <col:71, col:78> 'String' (CXXTemporary 0x55bd596a8de8)
|           `-CXXTemporaryObjectExpr 0x55bd596a8db0 <col:71, col:78> 'String' 'void ()'
|-CXXMethodDecl 0x55bd5966b1c8 <line:107:5, col:80> col:10 unparse_connections 'void (StringAccum &, const String &) const'
| |-ParmVarDecl 0x55bd5966b0b8 <col:30, col:43> col:43 sa 'StringAccum &'
| `-ParmVarDecl 0x55bd5966b130 <col:47, col:77> col:61 indent 'const String &' cinit
|   `-ExprWithCleanups 0x55bd596a8ee8 <col:70, col:77> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x55bd596a8ed0 <col:70, col:77> 'const String' lvalue
|       `-ImplicitCastExpr 0x55bd596a8eb8 <col:70, col:77> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x55bd596a8e98 <col:70, col:77> 'String' (CXXTemporary 0x55bd596a8e98)
|           `-CXXTemporaryObjectExpr 0x55bd596a8e60 <col:70, col:77> 'String' 'void ()'
|-CXXMethodDecl 0x55bd5966b348 <line:109:5, col:51> col:12 element_ports_string 'String (const Element *) const'
| `-ParmVarDecl 0x55bd5966b288 <col:33, col:48> col:48 e 'const Element *'
|-CXXConstructorDecl 0x55bd5966b568 <line:115:5, col:55> col:5 Router 'void (const String &, Master *)'
| |-ParmVarDecl 0x55bd5966b400 <col:12, col:26> col:26 configuration 'const String &'
| `-ParmVarDecl 0x55bd5966b478 <col:41, col:49> col:49 master 'Master *'
|-CXXDestructorDecl 0x55bd5966b668 <line:116:5, col:13> col:5 ~Router 'void ()' noexcept-unevaluated 0x55bd5966b668
|-CXXMethodDecl 0x55bd5966b770 <line:118:5, col:35> col:17 static_initialize 'void ()' static
|-CXXMethodDecl 0x55bd5966b830 <line:119:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x55bd5966b8f0 <line:121:5, col:21> col:17 use 'void ()' inline
|-CXXMethodDecl 0x55bd5966b9b0 <line:122:5, col:16> col:10 unuse 'void ()'
|-CXXMethodDecl 0x55bd5966bba8 <line:124:5, col:65> col:10 add_requirement 'void (const String &, const String &)'
| |-ParmVarDecl 0x55bd5966ba60 <col:26, col:40> col:40 type 'const String &'
| `-ParmVarDecl 0x55bd5966bad8 <col:46, col:60> col:60 value 'const String &'
|-CXXMethodDecl 0x55bd5966bf60 <line:125:5, col:112> col:9 add_element 'int (Element *, const String &, const String &, const String &, unsigned int)'
| |-ParmVarDecl 0x55bd5966bc68 <col:21, col:30> col:30 e 'Element *'
| |-ParmVarDecl 0x55bd5966bce0 <col:33, col:47> col:47 name 'const String &'
| |-ParmVarDecl 0x55bd5966bd58 <col:53, col:67> col:67 conf 'const String &'
| |-ParmVarDecl 0x55bd5966bdd0 <col:73, col:87> col:87 filename 'const String &'
| `-ParmVarDecl 0x55bd5966be50 <col:97, col:106> col:106 lineno 'unsigned int'
|-CXXMethodDecl 0x55bd5966c2c0 <line:126:5, col:76> col:9 add_connection 'int (int, int, int, int)'
| |-ParmVarDecl 0x55bd5966c040 <col:24, col:28> col:28 from_idx 'int'
| |-ParmVarDecl 0x55bd5966c0c0 <col:38, col:42> col:42 from_port 'int'
| |-ParmVarDecl 0x55bd5966c140 <col:53, col:57> col:57 to_idx 'int'
| `-ParmVarDecl 0x55bd5966c1c0 <col:65, col:69> col:69 to_port 'int'
|-CXXMethodDecl 0x55bd5966c3a0 <line:131:5, col:37> col:20 hotswap_router 'Router *() const' inline
|-CXXMethodDecl 0x55bd5966c4e0 <line:132:5, col:43> col:10 set_hotswap_router 'void (Router *)'
| `-ParmVarDecl 0x55bd5966c450 <col:29, col:37> col:37 router 'Router *'
|-CXXMethodDecl 0x55bd5966c630 <line:134:5, col:38> col:9 initialize 'int (ErrorHandler *)'
| `-ParmVarDecl 0x55bd5966c598 <col:20, col:34> col:34 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55bd5966c838 <line:135:5, col:54> col:10 used activate 'void (bool, ErrorHandler *)'
| |-ParmVarDecl 0x55bd5966c6e8 <col:19, col:24> col:24 foreground 'bool'
| `-ParmVarDecl 0x55bd5966c760 <col:36, col:50> col:50 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55bd5966c988 <line:136:5, col:44> col:17 activate 'void (ErrorHandler *)' inline
| `-ParmVarDecl 0x55bd5966c8f8 <col:26, col:40> col:40 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55bd5966cad0 <line:137:5, col:47> col:17 set_foreground 'void (bool)' inline
| `-ParmVarDecl 0x55bd5966ca40 <col:32, col:37> col:37 foreground 'bool'
|-CXXMethodDecl 0x55bd5966cd10 <line:139:5, col:69> col:9 new_notifier_signal 'int (const char *, NotifierSignal &)'
| |-ParmVarDecl 0x55bd5966cb90 <col:29, col:41> col:41 name 'const char *'
| `-ParmVarDecl 0x55bd5966cc38 <col:47, col:63> col:63 signal 'NotifierSignal &'
|-CXXMethodDecl 0x55bd5966ce98 <line:140:5, col:64> col:12 notifier_signal_name 'String (const atomic_uint32_t *) const'
| `-ParmVarDecl 0x55bd5966cdd0 <col:33, col:56> col:56 signal 'const atomic_uint32_t *'
|-CXXRecordDecl 0x55bd5966cf40 <line:145:5, line:167:5> line:145:12 referenced struct Port definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55bd5966d058 <col:5, col:12> col:12 implicit referenced struct Port
| |-FieldDecl 0x55bd5966d100 <line:146:9, col:13> col:13 referenced idx 'int'
| |-FieldDecl 0x55bd5966d168 <line:147:9, col:13> col:13 referenced port 'int'
| |-CXXConstructorDecl 0x55bd5966d220 <line:149:9, line:150:9> line:149:9 used Port 'void ()'
| | `-CompoundStmt 0x55bd596a8f10 <col:16, line:150:9>
| |-CXXConstructorDecl 0x55bd5966d3f8 <line:151:9, line:153:9> line:151:9 used Port 'void (int, int)'
| | |-ParmVarDecl 0x55bd5966d2e0 <col:14, col:18> col:18 used i 'int'
| | |-ParmVarDecl 0x55bd5966d360 <col:21, col:25> col:25 used p 'int'
| | |-CXXCtorInitializer Field 0x55bd5966d100 'idx' 'int'
| | | `-ImplicitCastExpr 0x55bd596a8f60 <line:152:19> 'int' <LValueToRValue>
| | |   `-DeclRefExpr 0x55bd596a8f20 <col:19> 'int' lvalue ParmVar 0x55bd5966d2e0 'i' 'int'
| | |-CXXCtorInitializer Field 0x55bd5966d168 'port' 'int'
| | | `-ImplicitCastExpr 0x55bd596a8fe0 <col:28> 'int' <LValueToRValue>
| | |   `-DeclRefExpr 0x55bd596a8fa0 <col:28> 'int' lvalue ParmVar 0x55bd5966d360 'p' 'int'
| | `-CompoundStmt 0x55bd596a9030 <col:31, line:153:9>
| |-CXXMethodDecl 0x55bd5966d5d8 <line:155:9, line:157:9> line:155:14 used operator== 'bool (const Router::Port &) const'
| | |-ParmVarDecl 0x55bd5966d4e8 <col:25, col:37> col:37 used x 'const Router::Port &'
| | `-CompoundStmt 0x55bd596a9230 <col:46, line:157:9>
| |   `-ReturnStmt 0x55bd596a9220 <line:156:13, col:46>
| |     `-BinaryOperator 0x55bd596a9200 <col:20, col:46> 'bool' '&&'
| |       |-BinaryOperator 0x55bd596a9100 <col:20, col:29> 'bool' '=='
| |       | |-ImplicitCastExpr 0x55bd596a90d0 <col:20> 'int' <LValueToRValue>
| |       | | `-MemberExpr 0x55bd596a9050 <col:20> 'const int' lvalue ->idx 0x55bd5966d100
| |       | |   `-CXXThisExpr 0x55bd596a9040 <col:20> 'const Router::Port *' implicit this
| |       | `-ImplicitCastExpr 0x55bd596a90e8 <col:27, col:29> 'int' <LValueToRValue>
| |       |   `-MemberExpr 0x55bd596a90a0 <col:27, col:29> 'const int' lvalue .idx 0x55bd5966d100
| |       |     `-DeclRefExpr 0x55bd596a9080 <col:27> 'const Router::Port' lvalue ParmVar 0x55bd5966d4e8 'x' 'const Router::Port &'
| |       `-BinaryOperator 0x55bd596a91e0 <col:36, col:46> 'bool' '=='
| |         |-ImplicitCastExpr 0x55bd596a91b0 <col:36> 'int' <LValueToRValue>
| |         | `-MemberExpr 0x55bd596a9130 <col:36> 'const int' lvalue ->port 0x55bd5966d168
| |         |   `-CXXThisExpr 0x55bd596a9120 <col:36> 'const Router::Port *' implicit this
| |         `-ImplicitCastExpr 0x55bd596a91c8 <col:44, col:46> 'int' <LValueToRValue>
| |           `-MemberExpr 0x55bd596a9180 <col:44, col:46> 'const int' lvalue .port 0x55bd5966d168
| |             `-DeclRefExpr 0x55bd596a9160 <col:44> 'const Router::Port' lvalue ParmVar 0x55bd5966d4e8 'x' 'const Router::Port &'
| |-CXXMethodDecl 0x55bd5966d720 <line:158:9, line:160:9> line:158:14 operator!= 'bool (const Router::Port &) const'
| | |-ParmVarDecl 0x55bd5966d690 <col:25, col:37> col:37 used x 'const Router::Port &'
| | `-CompoundStmt 0x55bd596a9438 <col:46, line:160:9>
| |   `-ReturnStmt 0x55bd596a9428 <line:159:13, col:46>
| |     `-BinaryOperator 0x55bd596a9408 <col:20, col:46> 'bool' '||'
| |       |-BinaryOperator 0x55bd596a9308 <col:20, col:29> 'bool' '!='
| |       | |-ImplicitCastExpr 0x55bd596a92d8 <col:20> 'int' <LValueToRValue>
| |       | | `-MemberExpr 0x55bd596a9258 <col:20> 'const int' lvalue ->idx 0x55bd5966d100
| |       | |   `-CXXThisExpr 0x55bd596a9248 <col:20> 'const Router::Port *' implicit this
| |       | `-ImplicitCastExpr 0x55bd596a92f0 <col:27, col:29> 'int' <LValueToRValue>
| |       |   `-MemberExpr 0x55bd596a92a8 <col:27, col:29> 'const int' lvalue .idx 0x55bd5966d100
| |       |     `-DeclRefExpr 0x55bd596a9288 <col:27> 'const Router::Port' lvalue ParmVar 0x55bd5966d690 'x' 'const Router::Port &'
| |       `-BinaryOperator 0x55bd596a93e8 <col:36, col:46> 'bool' '!='
| |         |-ImplicitCastExpr 0x55bd596a93b8 <col:36> 'int' <LValueToRValue>
| |         | `-MemberExpr 0x55bd596a9338 <col:36> 'const int' lvalue ->port 0x55bd5966d168
| |         |   `-CXXThisExpr 0x55bd596a9328 <col:36> 'const Router::Port *' implicit this
| |         `-ImplicitCastExpr 0x55bd596a93d0 <col:44, col:46> 'int' <LValueToRValue>
| |           `-MemberExpr 0x55bd596a9388 <col:44, col:46> 'const int' lvalue .port 0x55bd5966d168
| |             `-DeclRefExpr 0x55bd596a9368 <col:44> 'const Router::Port' lvalue ParmVar 0x55bd5966d690 'x' 'const Router::Port &'
| |-CXXMethodDecl 0x55bd5966d868 <line:161:9, line:163:9> line:161:14 used operator< 'bool (const Router::Port &) const'
| | |-ParmVarDecl 0x55bd5966d7d8 <col:24, col:36> col:36 used x 'const Router::Port &'
| | `-CompoundStmt 0x55bd596a9760 <col:45, line:163:9>
| |   `-ReturnStmt 0x55bd596a9750 <line:162:13, col:65>
| |     `-BinaryOperator 0x55bd596a9730 <col:20, col:65> 'bool' '||'
| |       |-BinaryOperator 0x55bd596a9510 <col:20, col:28> 'bool' '<'
| |       | |-ImplicitCastExpr 0x55bd596a94e0 <col:20> 'int' <LValueToRValue>
| |       | | `-MemberExpr 0x55bd596a9460 <col:20> 'const int' lvalue ->idx 0x55bd5966d100
| |       | |   `-CXXThisExpr 0x55bd596a9450 <col:20> 'const Router::Port *' implicit this
| |       | `-ImplicitCastExpr 0x55bd596a94f8 <col:26, col:28> 'int' <LValueToRValue>
| |       |   `-MemberExpr 0x55bd596a94b0 <col:26, col:28> 'const int' lvalue .idx 0x55bd5966d100
| |       |     `-DeclRefExpr 0x55bd596a9490 <col:26> 'const Router::Port' lvalue ParmVar 0x55bd5966d7d8 'x' 'const Router::Port &'
| |       `-ParenExpr 0x55bd596a9710 <col:35, col:65> 'bool'
| |         `-BinaryOperator 0x55bd596a96f0 <col:36, col:61> 'bool' '&&'
| |           |-BinaryOperator 0x55bd596a95f0 <col:36, col:45> 'bool' '=='
| |           | |-ImplicitCastExpr 0x55bd596a95c0 <col:36> 'int' <LValueToRValue>
| |           | | `-MemberExpr 0x55bd596a9540 <col:36> 'const int' lvalue ->idx 0x55bd5966d100
| |           | |   `-CXXThisExpr 0x55bd596a9530 <col:36> 'const Router::Port *' implicit this
| |           | `-ImplicitCastExpr 0x55bd596a95d8 <col:43, col:45> 'int' <LValueToRValue>
| |           |   `-MemberExpr 0x55bd596a9590 <col:43, col:45> 'const int' lvalue .idx 0x55bd5966d100
| |           |     `-DeclRefExpr 0x55bd596a9570 <col:43> 'const Router::Port' lvalue ParmVar 0x55bd5966d7d8 'x' 'const Router::Port &'
| |           `-BinaryOperator 0x55bd596a96d0 <col:52, col:61> 'bool' '<'
| |             |-ImplicitCastExpr 0x55bd596a96a0 <col:52> 'int' <LValueToRValue>
| |             | `-MemberExpr 0x55bd596a9620 <col:52> 'const int' lvalue ->port 0x55bd5966d168
| |             |   `-CXXThisExpr 0x55bd596a9610 <col:52> 'const Router::Port *' implicit this
| |             `-ImplicitCastExpr 0x55bd596a96b8 <col:59, col:61> 'int' <LValueToRValue>
| |               `-MemberExpr 0x55bd596a9670 <col:59, col:61> 'const int' lvalue .port 0x55bd5966d168
| |                 `-DeclRefExpr 0x55bd596a9650 <col:59> 'const Router::Port' lvalue ParmVar 0x55bd5966d7d8 'x' 'const Router::Port &'
| |-CXXMethodDecl 0x55bd5966d9b0 <line:164:9, line:166:9> line:164:14 operator<= 'bool (const Router::Port &) const'
| | |-ParmVarDecl 0x55bd5966d920 <col:25, col:37> col:37 used x 'const Router::Port &'
| | `-CompoundStmt 0x55bd596a9a88 <col:46, line:166:9>
| |   `-ReturnStmt 0x55bd596a9a78 <line:165:13, col:66>
| |     `-BinaryOperator 0x55bd596a9a58 <col:20, col:66> 'bool' '||'
| |       |-BinaryOperator 0x55bd596a9838 <col:20, col:28> 'bool' '<'
| |       | |-ImplicitCastExpr 0x55bd596a9808 <col:20> 'int' <LValueToRValue>
| |       | | `-MemberExpr 0x55bd596a9788 <col:20> 'const int' lvalue ->idx 0x55bd5966d100
| |       | |   `-CXXThisExpr 0x55bd596a9778 <col:20> 'const Router::Port *' implicit this
| |       | `-ImplicitCastExpr 0x55bd596a9820 <col:26, col:28> 'int' <LValueToRValue>
| |       |   `-MemberExpr 0x55bd596a97d8 <col:26, col:28> 'const int' lvalue .idx 0x55bd5966d100
| |       |     `-DeclRefExpr 0x55bd596a97b8 <col:26> 'const Router::Port' lvalue ParmVar 0x55bd5966d920 'x' 'const Router::Port &'
| |       `-ParenExpr 0x55bd596a9a38 <col:35, col:66> 'bool'
| |         `-BinaryOperator 0x55bd596a9a18 <col:36, col:62> 'bool' '&&'
| |           |-BinaryOperator 0x55bd596a9918 <col:36, col:45> 'bool' '=='
| |           | |-ImplicitCastExpr 0x55bd596a98e8 <col:36> 'int' <LValueToRValue>
| |           | | `-MemberExpr 0x55bd596a9868 <col:36> 'const int' lvalue ->idx 0x55bd5966d100
| |           | |   `-CXXThisExpr 0x55bd596a9858 <col:36> 'const Router::Port *' implicit this
| |           | `-ImplicitCastExpr 0x55bd596a9900 <col:43, col:45> 'int' <LValueToRValue>
| |           |   `-MemberExpr 0x55bd596a98b8 <col:43, col:45> 'const int' lvalue .idx 0x55bd5966d100
| |           |     `-DeclRefExpr 0x55bd596a9898 <col:43> 'const Router::Port' lvalue ParmVar 0x55bd5966d920 'x' 'const Router::Port &'
| |           `-BinaryOperator 0x55bd596a99f8 <col:52, col:62> 'bool' '<='
| |             |-ImplicitCastExpr 0x55bd596a99c8 <col:52> 'int' <LValueToRValue>
| |             | `-MemberExpr 0x55bd596a9948 <col:52> 'const int' lvalue ->port 0x55bd5966d168
| |             |   `-CXXThisExpr 0x55bd596a9938 <col:52> 'const Router::Port *' implicit this
| |             `-ImplicitCastExpr 0x55bd596a99e0 <col:60, col:62> 'int' <LValueToRValue>
| |               `-MemberExpr 0x55bd596a9998 <col:60, col:62> 'const int' lvalue .port 0x55bd5966d168
| |                 `-DeclRefExpr 0x55bd596a9978 <col:60> 'const Router::Port' lvalue ParmVar 0x55bd5966d920 'x' 'const Router::Port &'
| |-CXXConstructorDecl 0x55bd596a9aa0 <line:145:12> col:12 implicit constexpr Port 'void (const Router::Port &)' inline default trivial noexcept-unevaluated 0x55bd596a9aa0
| | `-ParmVarDecl 0x55bd596a9bb8 <col:12> col:12 'const Router::Port &'
| |-CXXConstructorDecl 0x55bd596a9c58 <col:12> col:12 implicit constexpr Port 'void (Router::Port &&)' inline default trivial noexcept-unevaluated 0x55bd596a9c58
| | `-ParmVarDecl 0x55bd596a9d68 <col:12> col:12 'Router::Port &&'
| |-CXXDestructorDecl 0x55bd596a9e00 <col:12> col:12 implicit referenced ~Port 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x55bd596aa0d0 <col:12> col:12 implicit operator= 'Router::Port &(const Router::Port &)' inline default trivial noexcept-unevaluated 0x55bd596aa0d0
| | `-ParmVarDecl 0x55bd596aa1d8 <col:12> col:12 'const Router::Port &'
| `-CXXMethodDecl 0x55bd596aa248 <col:12> col:12 implicit used operator= 'Router::Port &(Router::Port &&) noexcept' inline default trivial
|   |-ParmVarDecl 0x55bd596aa358 <col:12> col:12 used 'Router::Port &&'
|   `-CompoundStmt 0x55bd596aa678 <col:12>
|     |-BinaryOperator 0x55bd596aa518 <col:12> 'int' lvalue '='
|     | |-MemberExpr 0x55bd596aa4d0 <col:12> 'int' lvalue ->idx 0x55bd5966d100
|     | | `-CXXThisExpr 0x55bd596aa4c0 <col:12> 'Router::Port *' this
|     | `-ImplicitCastExpr 0x55bd596aa500 <col:12> 'int' <LValueToRValue>
|     |   `-MemberExpr 0x55bd596aa490 <col:12> 'int' xvalue .idx 0x55bd5966d100
|     |     `-CXXStaticCastExpr 0x55bd596aa460 <col:12> 'Router::Port' xvalue static_cast<struct Router::Port &&> <NoOp>
|     |       `-DeclRefExpr 0x55bd596aa430 <col:12> 'Router::Port' lvalue ParmVar 0x55bd596aa358 '' 'Router::Port &&'
|     |-BinaryOperator 0x55bd596aa620 <col:12> 'int' lvalue '='
|     | |-MemberExpr 0x55bd596aa5d8 <col:12> 'int' lvalue ->port 0x55bd5966d168
|     | | `-CXXThisExpr 0x55bd596aa5c8 <col:12> 'Router::Port *' this
|     | `-ImplicitCastExpr 0x55bd596aa608 <col:12> 'int' <LValueToRValue>
|     |   `-MemberExpr 0x55bd596aa598 <col:12> 'int' xvalue .port 0x55bd5966d168
|     |     `-CXXStaticCastExpr 0x55bd596aa568 <col:12> 'Router::Port' xvalue static_cast<struct Router::Port &&> <NoOp>
|     |       `-DeclRefExpr 0x55bd596aa538 <col:12> 'Router::Port' lvalue ParmVar 0x55bd596aa358 '' 'Router::Port &&'
|     `-ReturnStmt 0x55bd596aa668 <col:12>
|       `-UnaryOperator 0x55bd596aa650 <col:12> 'Router::Port' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55bd596aa640 <col:12> 'Router::Port *' this
|-CXXRecordDecl 0x55bd5966da70 <line:169:5, line:194:5> line:169:12 referenced struct Connection definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55bd5966db88 <col:5, col:12> col:12 implicit referenced struct Connection
| |-FieldDecl 0x55bd5966dd78 <line:170:9, col:17> col:14 referenced p 'Router::Port [2]'
| |-CXXConstructorDecl 0x55bd5966de30 <line:172:9, line:173:9> line:172:9 Connection 'void ()'
| | |-CXXCtorInitializer Field 0x55bd5966dd78 'p' 'Router::Port [2]'
| | | `-CXXConstructExpr 0x55bd596a9dd8 <col:9> 'Router::Port [2]' 'void ()'
| | `-CompoundStmt 0x55bd596a9f10 <col:22, line:173:9>
| |-CXXConstructorDecl 0x55bd5966e168 <line:174:9, line:177:9> line:174:9 Connection 'void (int, int, int, int)'
| | |-ParmVarDecl 0x55bd5966def0 <col:20, col:24> col:24 used from_idx 'int'
| | |-ParmVarDecl 0x55bd5966df70 <col:34, col:38> col:38 used from_port 'int'
| | |-ParmVarDecl 0x55bd5966dff0 <col:49, col:53> col:53 used to_idx 'int'
| | |-ParmVarDecl 0x55bd5966e070 <col:61, col:65> col:65 used to_port 'int'
| | |-CXXCtorInitializer Field 0x55bd5966dd78 'p' 'Router::Port [2]'
| | | `-CXXConstructExpr 0x55bd596a9f20 <col:9> 'Router::Port [2]' 'void ()'
| | `-CompoundStmt 0x55bd596aa958 <col:74, line:177:9>
| |   |-ExprWithCleanups 0x55bd596aa748 <line:175:13, col:40> 'Router::Port' lvalue
| |   | `-CXXOperatorCallExpr 0x55bd596aa710 <col:13, col:40> 'Router::Port' lvalue
| |   |   |-ImplicitCastExpr 0x55bd596aa6f8 <col:18> 'Router::Port &(*)(Router::Port &&) noexcept' <FunctionToPointerDecay>
| |   |   | `-DeclRefExpr 0x55bd596aa3e0 <col:18> 'Router::Port &(Router::Port &&) noexcept' lvalue CXXMethod 0x55bd596aa248 'operator=' 'Router::Port &(Router::Port &&) noexcept'
| |   |   |-ArraySubscriptExpr 0x55bd596a9ff0 <col:13, col:16> 'Router::Port' lvalue
| |   |   | |-ImplicitCastExpr 0x55bd596a9fd8 <col:13> 'Router::Port *' <ArrayToPointerDecay>
| |   |   | | `-MemberExpr 0x55bd596a9f88 <col:13> 'Router::Port [2]' lvalue ->p 0x55bd5966dd78
| |   |   | |   `-CXXThisExpr 0x55bd596a9f78 <col:13> 'Router::Connection *' implicit this
| |   |   | `-IntegerLiteral 0x55bd596a9fb8 <col:15> 'int' 0
| |   |   `-MaterializeTemporaryExpr 0x55bd596aa3c8 <col:20, col:40> 'Router::Port' xvalue
| |   |     `-CXXTemporaryObjectExpr 0x55bd596aa090 <col:20, col:40> 'Router::Port' 'void (int, int)'
| |   |       |-ImplicitCastExpr 0x55bd596aa060 <col:25> 'int' <LValueToRValue>
| |   |       | `-DeclRefExpr 0x55bd596aa020 <col:25> 'int' lvalue ParmVar 0x55bd5966dff0 'to_idx' 'int'
| |   |       `-ImplicitCastExpr 0x55bd596aa078 <col:33> 'int' <LValueToRValue>
| |   |         `-DeclRefExpr 0x55bd596aa040 <col:33> 'int' lvalue ParmVar 0x55bd5966e070 'to_port' 'int'
| |   `-ExprWithCleanups 0x55bd596aa940 <line:176:13, col:44> 'Router::Port' lvalue
| |     `-CXXOperatorCallExpr 0x55bd596aa908 <col:13, col:44> 'Router::Port' lvalue
| |       |-ImplicitCastExpr 0x55bd596aa8f0 <col:18> 'Router::Port &(*)(Router::Port &&) noexcept' <FunctionToPointerDecay>
| |       | `-DeclRefExpr 0x55bd596aa8d0 <col:18> 'Router::Port &(Router::Port &&) noexcept' lvalue CXXMethod 0x55bd596aa248 'operator=' 'Router::Port &(Router::Port &&) noexcept'
| |       |-ArraySubscriptExpr 0x55bd596aa7d8 <col:13, col:16> 'Router::Port' lvalue
| |       | |-ImplicitCastExpr 0x55bd596aa7c0 <col:13> 'Router::Port *' <ArrayToPointerDecay>
| |       | | `-MemberExpr 0x55bd596aa770 <col:13> 'Router::Port [2]' lvalue ->p 0x55bd5966dd78
| |       | |   `-CXXThisExpr 0x55bd596aa760 <col:13> 'Router::Connection *' implicit this
| |       | `-IntegerLiteral 0x55bd596aa7a0 <col:15> 'int' 1
| |       `-MaterializeTemporaryExpr 0x55bd596aa8b8 <col:20, col:44> 'Router::Port' xvalue
| |         `-CXXTemporaryObjectExpr 0x55bd596aa878 <col:20, col:44> 'Router::Port' 'void (int, int)'
| |           |-ImplicitCastExpr 0x55bd596aa848 <col:25> 'int' <LValueToRValue>
| |           | `-DeclRefExpr 0x55bd596aa808 <col:25> 'int' lvalue ParmVar 0x55bd5966def0 'from_idx' 'int'
| |           `-ImplicitCastExpr 0x55bd596aa860 <col:35> 'int' <LValueToRValue>
| |             `-DeclRefExpr 0x55bd596aa828 <col:35> 'int' lvalue ParmVar 0x55bd5966df70 'from_port' 'int'
| |-CXXMethodDecl 0x55bd5966e338 <line:179:9, line:182:9> line:179:21 operator[] 'const Router::Port &(int) const'
| | |-ParmVarDecl 0x55bd5966e248 <col:32, col:36> col:36 used i 'int'
| | `-CompoundStmt 0x55bd596aaf18 <col:45, line:182:9>
| |   |-ParenExpr 0x55bd596aadf8 <line:180:13, col:169> 'void'
| |   | `-ConditionalOperator 0x55bd596aadc8 <col:14, col:168> 'void'
| |   |   |-CXXStaticCastExpr 0x55bd596aaa98 <col:14, col:49> 'bool' static_cast<_Bool> <NoOp>
| |   |   | `-BinaryOperator 0x55bd596aaa68 <col:34, col:48> 'bool' '&&'
| |   |   |   |-BinaryOperator 0x55bd596aa9d0 <col:34, col:39> 'bool' '>='
| |   |   |   | |-ImplicitCastExpr 0x55bd596aa9b8 <col:34> 'int' <LValueToRValue>
| |   |   |   | | `-DeclRefExpr 0x55bd596aa978 <col:34> 'int' lvalue ParmVar 0x55bd5966e248 'i' 'int'
| |   |   |   | `-IntegerLiteral 0x55bd596aa998 <col:39> 'int' 0
| |   |   |   `-BinaryOperator 0x55bd596aaa48 <col:44, col:48> 'bool' '<'
| |   |   |     |-ImplicitCastExpr 0x55bd596aaa30 <col:44> 'int' <LValueToRValue>
| |   |   |     | `-DeclRefExpr 0x55bd596aa9f0 <col:44> 'int' lvalue ParmVar 0x55bd5966e248 'i' 'int'
| |   |   |     `-IntegerLiteral 0x55bd596aaa10 <col:48> 'int' 2
| |   |   |-CXXFunctionalCastExpr 0x55bd596aaaf8 <col:53, col:60> 'void' functional cast to void <ToVoid>
| |   |   | `-IntegerLiteral 0x55bd596aaad8 <col:59> 'int' 0
| |   |   `-CallExpr 0x55bd596aad28 <col:64, col:168> 'void'
| |   |     |-ImplicitCastExpr 0x55bd596aad10 <col:64> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x55bd596aacf0 <col:64> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55bd59002600 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
| |   |     |-ImplicitCastExpr 0x55bd596aad68 <col:79> 'const char *' <ArrayToPointerDecay>
| |   |     | `-StringLiteral 0x55bd596aab68 <col:79> 'const char [16]' lvalue "i >= 0 && i < 2"
| |   |     |-ImplicitCastExpr 0x55bd596aad80 <col:98> 'const char *' <ArrayToPointerDecay>
| |   |     | `-StringLiteral 0x55bd596aab90 <col:98> 'const char [29]' lvalue "../dummy_inc/click/router.hh"
| |   |     |-ImplicitCastExpr 0x55bd596aad98 <col:130> 'unsigned int' <IntegralCast>
| |   |     | `-IntegerLiteral 0x55bd596aabc8 <col:130> 'int' 180
| |   |     `-ImplicitCastExpr 0x55bd596aadb0 <col:135, col:149> 'const char *' <ArrayToPointerDecay>
| |   |       `-UnaryOperator 0x55bd596aacd8 <col:135, col:149> 'const char [62]' lvalue prefix '__extension__' cannot overflow
| |   |         `-PredefinedExpr 0x55bd596aacc0 <col:149> 'const char [62]' lvalue __PRETTY_FUNCTION__
| |   |           `-StringLiteral 0x55bd596aac68 <col:149> 'const char [62]' lvalue "const Router::Port &Router::Connection::operator[](int) const"
| |   `-ReturnStmt 0x55bd596aaf08 <line:181:13, col:23>
| |     `-ArraySubscriptExpr 0x55bd596aaee8 <col:20, col:23> 'const Router::Port' lvalue
| |       |-ImplicitCastExpr 0x55bd596aaeb8 <col:20> 'const Router::Port *' <ArrayToPointerDecay>
| |       | `-MemberExpr 0x55bd596aae28 <col:20> 'Router::Port const[2]' lvalue ->p 0x55bd5966dd78
| |       |   `-CXXThisExpr 0x55bd596aae18 <col:20> 'const Router::Connection *' implicit this
| |       `-ImplicitCastExpr 0x55bd596aaed0 <col:22> 'int' <LValueToRValue>
| |         `-DeclRefExpr 0x55bd596aae58 <col:22> 'int' lvalue ParmVar 0x55bd5966e248 'i' 'int'
| |-CXXMethodDecl 0x55bd5966e4e8 <line:183:9, line:186:9> line:183:15 operator[] 'Router::Port &(int)'
| | |-ParmVarDecl 0x55bd5966e3f8 <col:26, col:30> col:30 used i 'int'
| | `-CompoundStmt 0x55bd596ab490 <col:33, line:186:9>
| |   |-ParenExpr 0x55bd596ab3b0 <line:184:13, col:169> 'void'
| |   | `-ConditionalOperator 0x55bd596ab380 <col:14, col:168> 'void'
| |   |   |-CXXStaticCastExpr 0x55bd596ab058 <col:14, col:49> 'bool' static_cast<_Bool> <NoOp>
| |   |   | `-BinaryOperator 0x55bd596ab028 <col:34, col:48> 'bool' '&&'
| |   |   |   |-BinaryOperator 0x55bd596aaf90 <col:34, col:39> 'bool' '>='
| |   |   |   | |-ImplicitCastExpr 0x55bd596aaf78 <col:34> 'int' <LValueToRValue>
| |   |   |   | | `-DeclRefExpr 0x55bd596aaf38 <col:34> 'int' lvalue ParmVar 0x55bd5966e3f8 'i' 'int'
| |   |   |   | `-IntegerLiteral 0x55bd596aaf58 <col:39> 'int' 0
| |   |   |   `-BinaryOperator 0x55bd596ab008 <col:44, col:48> 'bool' '<'
| |   |   |     |-ImplicitCastExpr 0x55bd596aaff0 <col:44> 'int' <LValueToRValue>
| |   |   |     | `-DeclRefExpr 0x55bd596aafb0 <col:44> 'int' lvalue ParmVar 0x55bd5966e3f8 'i' 'int'
| |   |   |     `-IntegerLiteral 0x55bd596aafd0 <col:48> 'int' 2
| |   |   |-CXXFunctionalCastExpr 0x55bd596ab0b8 <col:53, col:60> 'void' functional cast to void <ToVoid>
| |   |   | `-IntegerLiteral 0x55bd596ab098 <col:59> 'int' 0
| |   |   `-CallExpr 0x55bd596ab2e0 <col:64, col:168> 'void'
| |   |     |-ImplicitCastExpr 0x55bd596ab2c8 <col:64> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x55bd596ab2a8 <col:64> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55bd59002600 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
| |   |     |-ImplicitCastExpr 0x55bd596ab320 <col:79> 'const char *' <ArrayToPointerDecay>
| |   |     | `-StringLiteral 0x55bd596ab128 <col:79> 'const char [16]' lvalue "i >= 0 && i < 2"
| |   |     |-ImplicitCastExpr 0x55bd596ab338 <col:98> 'const char *' <ArrayToPointerDecay>
| |   |     | `-StringLiteral 0x55bd596ab150 <col:98> 'const char [29]' lvalue "../dummy_inc/click/router.hh"
| |   |     |-ImplicitCastExpr 0x55bd596ab350 <col:130> 'unsigned int' <IntegralCast>
| |   |     | `-IntegerLiteral 0x55bd596ab188 <col:130> 'int' 184
| |   |     `-ImplicitCastExpr 0x55bd596ab368 <col:135, col:149> 'const char *' <ArrayToPointerDecay>
| |   |       `-UnaryOperator 0x55bd596ab290 <col:135, col:149> 'const char [50]' lvalue prefix '__extension__' cannot overflow
| |   |         `-PredefinedExpr 0x55bd596ab278 <col:149> 'const char [50]' lvalue __PRETTY_FUNCTION__
| |   |           `-StringLiteral 0x55bd596ab228 <col:149> 'const char [50]' lvalue "Router::Port &Router::Connection::operator[](int)"
| |   `-ReturnStmt 0x55bd596ab480 <line:185:13, col:23>
| |     `-ArraySubscriptExpr 0x55bd596ab460 <col:20, col:23> 'Router::Port' lvalue
| |       |-ImplicitCastExpr 0x55bd596ab430 <col:20> 'Router::Port *' <ArrayToPointerDecay>
| |       | `-MemberExpr 0x55bd596ab3e0 <col:20> 'Router::Port [2]' lvalue ->p 0x55bd5966dd78
| |       |   `-CXXThisExpr 0x55bd596ab3d0 <col:20> 'Router::Connection *' implicit this
| |       `-ImplicitCastExpr 0x55bd596ab448 <col:22> 'int' <LValueToRValue>
| |         `-DeclRefExpr 0x55bd596ab410 <col:22> 'int' lvalue ParmVar 0x55bd5966e3f8 'i' 'int'
| |-CXXMethodDecl 0x55bd5966e688 <line:188:9, line:190:9> line:188:14 operator== 'bool (const Router::Connection &) const'
| | |-ParmVarDecl 0x55bd5966e5c8 <col:25, col:43> col:43 used x 'const Router::Connection &'
| | `-CompoundStmt 0x55bd596ab868 <col:52, line:190:9>
| |   `-ReturnStmt 0x55bd596ab858 <line:189:13, col:51>
| |     `-BinaryOperator 0x55bd596ab838 <col:20, col:51> 'bool' '&&'
| |       |-CXXOperatorCallExpr 0x55bd596ab650 <col:20, col:33> 'bool'
| |       | |-ImplicitCastExpr 0x55bd596ab638 <col:25> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
| |       | | `-DeclRefExpr 0x55bd596ab5f0 <col:25> 'bool (const Router::Port &) const' lvalue CXXMethod 0x55bd5966d5d8 'operator==' 'bool (const Router::Port &) const'
| |       | |-ArraySubscriptExpr 0x55bd596ab528 <col:20, col:23> 'const Router::Port' lvalue
| |       | | |-ImplicitCastExpr 0x55bd596ab510 <col:20> 'const Router::Port *' <ArrayToPointerDecay>
| |       | | | `-MemberExpr 0x55bd596ab4c0 <col:20> 'Router::Port const[2]' lvalue ->p 0x55bd5966dd78
| |       | | |   `-CXXThisExpr 0x55bd596ab4b0 <col:20> 'const Router::Connection *' implicit this
| |       | | `-IntegerLiteral 0x55bd596ab4f0 <col:22> 'int' 0
| |       | `-ArraySubscriptExpr 0x55bd596ab5d0 <col:28, col:33> 'const Router::Port' lvalue
| |       |   |-ImplicitCastExpr 0x55bd596ab5b8 <col:28, col:30> 'const Router::Port *' <ArrayToPointerDecay>
| |       |   | `-MemberExpr 0x55bd596ab568 <col:28, col:30> 'Router::Port const[2]' lvalue .p 0x55bd5966dd78
| |       |   |   `-DeclRefExpr 0x55bd596ab548 <col:28> 'const Router::Connection' lvalue ParmVar 0x55bd5966e5c8 'x' 'const Router::Connection &'
| |       |   `-IntegerLiteral 0x55bd596ab598 <col:32> 'int' 0
| |       `-CXXOperatorCallExpr 0x55bd596ab800 <col:38, col:51> 'bool'
| |         |-ImplicitCastExpr 0x55bd596ab7e8 <col:43> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
| |         | `-DeclRefExpr 0x55bd596ab7c8 <col:43> 'bool (const Router::Port &) const' lvalue CXXMethod 0x55bd5966d5d8 'operator==' 'bool (const Router::Port &) const'
| |         |-ArraySubscriptExpr 0x55bd596ab700 <col:38, col:41> 'const Router::Port' lvalue
| |         | |-ImplicitCastExpr 0x55bd596ab6e8 <col:38> 'const Router::Port *' <ArrayToPointerDecay>
| |         | | `-MemberExpr 0x55bd596ab698 <col:38> 'Router::Port const[2]' lvalue ->p 0x55bd5966dd78
| |         | |   `-CXXThisExpr 0x55bd596ab688 <col:38> 'const Router::Connection *' implicit this
| |         | `-IntegerLiteral 0x55bd596ab6c8 <col:40> 'int' 1
| |         `-ArraySubscriptExpr 0x55bd596ab7a8 <col:46, col:51> 'const Router::Port' lvalue
| |           |-ImplicitCastExpr 0x55bd596ab790 <col:46, col:48> 'const Router::Port *' <ArrayToPointerDecay>
| |           | `-MemberExpr 0x55bd596ab740 <col:46, col:48> 'Router::Port const[2]' lvalue .p 0x55bd5966dd78
| |           |   `-DeclRefExpr 0x55bd596ab720 <col:46> 'const Router::Connection' lvalue ParmVar 0x55bd5966e5c8 'x' 'const Router::Connection &'
| |           `-IntegerLiteral 0x55bd596ab770 <col:50> 'int' 1
| `-CXXMethodDecl 0x55bd5966e7d0 <line:191:9, line:193:9> line:191:14 operator< 'bool (const Router::Connection &) const'
|   |-ParmVarDecl 0x55bd5966e740 <col:24, col:42> col:42 used x 'const Router::Connection &'
|   `-CompoundStmt 0x55bd596abe00 <col:51, line:193:9>
|     `-ReturnStmt 0x55bd596abdf0 <line:192:13, col:69>
|       `-BinaryOperator 0x55bd596abdd0 <col:20, col:69> 'bool' '||'
|         |-CXXOperatorCallExpr 0x55bd596ab9f8 <col:20, col:32> 'bool'
|         | |-ImplicitCastExpr 0x55bd596ab9e0 <col:25> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
|         | | `-DeclRefExpr 0x55bd596ab9c0 <col:25> 'bool (const Router::Port &) const' lvalue CXXMethod 0x55bd5966d868 'operator<' 'bool (const Router::Port &) const'
|         | |-ArraySubscriptExpr 0x55bd596ab8f8 <col:20, col:23> 'const Router::Port' lvalue
|         | | |-ImplicitCastExpr 0x55bd596ab8e0 <col:20> 'const Router::Port *' <ArrayToPointerDecay>
|         | | | `-MemberExpr 0x55bd596ab890 <col:20> 'Router::Port const[2]' lvalue ->p 0x55bd5966dd78
|         | | |   `-CXXThisExpr 0x55bd596ab880 <col:20> 'const Router::Connection *' implicit this
|         | | `-IntegerLiteral 0x55bd596ab8c0 <col:22> 'int' 0
|         | `-ArraySubscriptExpr 0x55bd596ab9a0 <col:27, col:32> 'const Router::Port' lvalue
|         |   |-ImplicitCastExpr 0x55bd596ab988 <col:27, col:29> 'const Router::Port *' <ArrayToPointerDecay>
|         |   | `-MemberExpr 0x55bd596ab938 <col:27, col:29> 'Router::Port const[2]' lvalue .p 0x55bd5966dd78
|         |   |   `-DeclRefExpr 0x55bd596ab918 <col:27> 'const Router::Connection' lvalue ParmVar 0x55bd5966e740 'x' 'const Router::Connection &'
|         |   `-IntegerLiteral 0x55bd596ab968 <col:31> 'int' 0
|         `-ParenExpr 0x55bd596abdb0 <col:37, col:69> 'bool'
|           `-BinaryOperator 0x55bd596abd90 <col:38, col:68> 'bool' '&&'
|             |-CXXOperatorCallExpr 0x55bd596abba8 <col:38, col:51> 'bool'
|             | |-ImplicitCastExpr 0x55bd596abb90 <col:43> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
|             | | `-DeclRefExpr 0x55bd596abb70 <col:43> 'bool (const Router::Port &) const' lvalue CXXMethod 0x55bd5966d5d8 'operator==' 'bool (const Router::Port &) const'
|             | |-ArraySubscriptExpr 0x55bd596abaa8 <col:38, col:41> 'const Router::Port' lvalue
|             | | |-ImplicitCastExpr 0x55bd596aba90 <col:38> 'const Router::Port *' <ArrayToPointerDecay>
|             | | | `-MemberExpr 0x55bd596aba40 <col:38> 'Router::Port const[2]' lvalue ->p 0x55bd5966dd78
|             | | |   `-CXXThisExpr 0x55bd596aba30 <col:38> 'const Router::Connection *' implicit this
|             | | `-IntegerLiteral 0x55bd596aba70 <col:40> 'int' 0
|             | `-ArraySubscriptExpr 0x55bd596abb50 <col:46, col:51> 'const Router::Port' lvalue
|             |   |-ImplicitCastExpr 0x55bd596abb38 <col:46, col:48> 'const Router::Port *' <ArrayToPointerDecay>
|             |   | `-MemberExpr 0x55bd596abae8 <col:46, col:48> 'Router::Port const[2]' lvalue .p 0x55bd5966dd78
|             |   |   `-DeclRefExpr 0x55bd596abac8 <col:46> 'const Router::Connection' lvalue ParmVar 0x55bd5966e740 'x' 'const Router::Connection &'
|             |   `-IntegerLiteral 0x55bd596abb18 <col:50> 'int' 0
|             `-CXXOperatorCallExpr 0x55bd596abd58 <col:56, col:68> 'bool'
|               |-ImplicitCastExpr 0x55bd596abd40 <col:61> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x55bd596abd20 <col:61> 'bool (const Router::Port &) const' lvalue CXXMethod 0x55bd5966d868 'operator<' 'bool (const Router::Port &) const'
|               |-ArraySubscriptExpr 0x55bd596abc58 <col:56, col:59> 'const Router::Port' lvalue
|               | |-ImplicitCastExpr 0x55bd596abc40 <col:56> 'const Router::Port *' <ArrayToPointerDecay>
|               | | `-MemberExpr 0x55bd596abbf0 <col:56> 'Router::Port const[2]' lvalue ->p 0x55bd5966dd78
|               | |   `-CXXThisExpr 0x55bd596abbe0 <col:56> 'const Router::Connection *' implicit this
|               | `-IntegerLiteral 0x55bd596abc20 <col:58> 'int' 1
|               `-ArraySubscriptExpr 0x55bd596abd00 <col:63, col:68> 'const Router::Port' lvalue
|                 |-ImplicitCastExpr 0x55bd596abce8 <col:63, col:65> 'const Router::Port *' <ArrayToPointerDecay>
|                 | `-MemberExpr 0x55bd596abc98 <col:63, col:65> 'Router::Port const[2]' lvalue .p 0x55bd5966dd78
|                 |   `-DeclRefExpr 0x55bd596abc78 <col:63> 'const Router::Connection' lvalue ParmVar 0x55bd5966e740 'x' 'const Router::Connection &'
|                 `-IntegerLiteral 0x55bd596abcc8 <col:67> 'int' 1
|-AccessSpecDecl 0x55bd5966e890 <line:216:3, col:10> col:3 private
|-CXXRecordDecl 0x55bd5966e8b8 <line:218:5, col:11> col:11 class RouterContextErrh
|-EnumDecl 0x55bd5966e970 <line:220:5, line:223:5> line:220:5
| |-EnumConstantDecl 0x55bd5966ea30 <line:221:9> col:9 ROUTER_NEW 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
| |-EnumConstantDecl 0x55bd5966ea80 <col:21> col:21 referenced ROUTER_PRECONFIGURE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
| |-EnumConstantDecl 0x55bd5966ead0 <col:42> col:42 ROUTER_PREINITIALIZE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
| |-EnumConstantDecl 0x55bd5966eb20 <line:222:9> col:9 referenced ROUTER_LIVE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
| `-EnumConstantDecl 0x55bd5966eb70 <col:22> col:22 ROUTER_DEAD 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
|-EnumDecl 0x55bd5966ebc0 <line:224:5, line:227:5> line:224:5
| |-EnumConstantDecl 0x55bd5966ecd8 <line:225:9, col:25> col:9 referenced RUNNING_DEAD 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
| | `-ConstantExpr 0x55bd5966ecb8 <col:24, col:25> 'int' Int: -2
| |   `-UnaryOperator 0x55bd5966eca0 <col:24, col:25> 'int' prefix '-'
| |     `-IntegerLiteral 0x55bd5966ec80 <col:25> 'int' 2
| |-EnumConstantDecl 0x55bd5966ed80 <col:28, col:48> col:28 RUNNING_INACTIVE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
| | `-ConstantExpr 0x55bd5966ed60 <col:47, col:48> 'int' Int: -1
| |   `-UnaryOperator 0x55bd5966ed48 <col:47, col:48> 'int' prefix '-'
| |     `-IntegerLiteral 0x55bd5966ed28 <col:48> 'int' 1
| |-EnumConstantDecl 0x55bd5966ee10 <col:51, col:71> col:51 RUNNING_PREPARING 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
| | `-ConstantExpr 0x55bd5966edf0 <col:71> 'int' Int: 0
| |   `-IntegerLiteral 0x55bd5966edd0 <col:71> 'int' 0
| |-EnumConstantDecl 0x55bd5966eea0 <line:226:9, col:30> col:9 referenced RUNNING_BACKGROUND 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
| | `-ConstantExpr 0x55bd5966ee80 <col:30> 'int' Int: 1
| |   `-IntegerLiteral 0x55bd5966ee60 <col:30> 'int' 1
| `-EnumConstantDecl 0x55bd5966ef30 <col:33, col:50> col:33 referenced RUNNING_ACTIVE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
|   `-ConstantExpr 0x55bd5966ef10 <col:50> 'int' Int: 2
|     `-IntegerLiteral 0x55bd5966eef0 <col:50> 'int' 2
|-FieldDecl 0x55bd5966ef90 <line:229:5, col:13> col:13 referenced _master 'Master *'
|-FieldDecl 0x55bd5966eff0 <line:231:5, col:21> col:21 referenced _runcount 'atomic_uint32_t'
|-FieldDecl 0x55bd5966f058 <line:233:5, col:18> col:18 referenced _state 'volatile int'
|-FieldDecl 0x55bd5966f0f8 <line:234:5, col:30> col:10 _have_connections 'bool'
| `-ConstantExpr 0x55bd5966f0d8 <col:30> 'int' Int: 1
|   `-IntegerLiteral 0x55bd5966f0a8 <col:30> 'int' 1
|-FieldDecl 0x55bd5966f198 <line:235:5, col:33> col:18 _conn_sorted 'bool' mutable
| `-ConstantExpr 0x55bd5966f178 <col:33> 'int' Int: 1
|   `-IntegerLiteral 0x55bd5966f148 <col:33> 'int' 1
|-FieldDecl 0x55bd5966f238 <line:236:5, col:32> col:10 _have_configuration 'bool'
| `-ConstantExpr 0x55bd5966f218 <col:32> 'int' Int: 1
|   `-IntegerLiteral 0x55bd5966f1e8 <col:32> 'int' 1
|-FieldDecl 0x55bd5966f2a0 <line:237:5, col:18> col:18 referenced _running 'volatile int'
|-FieldDecl 0x55bd5966f300 <line:239:5, col:21> col:21 referenced _refcount 'atomic_uint32_t'
|-FieldDecl 0x55bd59678560 <line:241:5, col:23> col:23 referenced _elements 'Vector<Element *>':'Vector<Element *>'
|-FieldDecl 0x55bd59678660 <line:242:5, col:20> col:20 _element_names 'Vector<String>':'Vector<String>'
|-FieldDecl 0x55bd59678760 <line:243:5, col:20> col:20 _element_configurations 'Vector<String>':'Vector<String>'
|-FieldDecl 0x55bd59681230 <line:244:5, col:22> col:22 _element_landmarkids 'Vector<uint32_t>':'Vector<unsigned int>'
|-FieldDecl 0x55bd59681340 <line:245:5, col:25> col:25 referenced _element_home_thread_ids 'Vector<int>':'Vector<int>' mutable
|-CXXRecordDecl 0x55bd59681390 <line:247:5, line:250:5> line:247:12 referenced struct element_landmark_t definition
| |-DefinitionData aggregate standard_layout has_mutable_fields
| | |-DefaultConstructor exists non_trivial needs_implicit
| | |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveConstructor exists simple non_trivial needs_overload_resolution
| | |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveAssignment exists simple non_trivial needs_overload_resolution
| | `-Destructor simple non_trivial needs_overload_resolution
| |-CXXRecordDecl 0x55bd596814a8 <col:5, col:12> col:12 implicit struct element_landmark_t
| |-FieldDecl 0x55bd59681548 <line:248:9, col:18> col:18 first_landmarkid 'uint32_t':'unsigned int'
| |-FieldDecl 0x55bd596815a8 <line:249:9, col:16> col:16 filename 'String'
| |-CXXConstructorDecl 0x55bd59681640 <line:247:12> col:12 implicit element_landmark_t 'void (const Router::element_landmark_t &)' inline default noexcept-unevaluated 0x55bd59681640
| | `-ParmVarDecl 0x55bd59681758 <col:12> col:12 'const Router::element_landmark_t &'
| |-CXXConstructorDecl 0x55bd596817f8 <col:12> col:12 implicit element_landmark_t 'void (Router::element_landmark_t &&)' inline default noexcept-unevaluated 0x55bd596817f8
| | `-ParmVarDecl 0x55bd59681908 <col:12> col:12 'Router::element_landmark_t &&'
| |-CXXMethodDecl 0x55bd596819a8 <col:12> col:12 implicit operator= 'Router::element_landmark_t &(const Router::element_landmark_t &)' inline default noexcept-unevaluated 0x55bd596819a8
| | `-ParmVarDecl 0x55bd59681ab8 <col:12> col:12 'const Router::element_landmark_t &'
| |-CXXMethodDecl 0x55bd59681b28 <col:12> col:12 implicit operator= 'Router::element_landmark_t &(Router::element_landmark_t &&)' inline default noexcept-unevaluated 0x55bd59681b28
| | `-ParmVarDecl 0x55bd59681c38 <col:12> col:12 'Router::element_landmark_t &&'
| `-CXXDestructorDecl 0x55bd59681cc0 <col:12> col:12 implicit ~element_landmark_t 'void ()' inline default noexcept-unevaluated 0x55bd59681cc0
|-FieldDecl 0x55bd5968e5c0 <line:251:5, col:32> col:32 _element_landmarks 'Vector<Router::element_landmark_t>':'Vector<Router::element_landmark_t>'
|-FieldDecl 0x55bd5968e620 <line:252:5, col:14> col:14 _last_landmarkid 'uint32_t':'unsigned int'
|-FieldDecl 0x55bd5968e730 <line:254:5, col:25> col:25 _element_name_sorter 'Vector<int>':'Vector<int>' mutable
|-FieldDecl 0x55bd5968ea88 <line:255:5, col:40> col:17 referenced _element_gport_offset 'Vector<int> [2]'
|-FieldDecl 0x55bd5968fba0 <line:256:5, col:17> col:17 _element_configure_order 'Vector<int>':'Vector<int>'
|-FieldDecl 0x55bd59696c90 <line:258:5, col:32> col:32 _conn 'Vector<Router::Connection>':'Vector<Router::Connection>' mutable
|-FieldDecl 0x55bd59696da0 <line:259:5, col:25> col:25 _conn_output_sorter 'Vector<int>':'Vector<int>' mutable
|-FieldDecl 0x55bd59696ea0 <line:261:5, col:20> col:20 _requirements 'Vector<String>':'Vector<String>'
|-FieldDecl 0x55bd59696fb0 <line:263:5, col:17> col:17 _ehandler_first_by_element 'Vector<int>':'Vector<int>'
|-FieldDecl 0x55bd596970c0 <line:264:5, col:17> col:17 _ehandler_to_handler 'Vector<int>':'Vector<int>'
|-FieldDecl 0x55bd596971d0 <line:265:5, col:17> col:17 _ehandler_next 'Vector<int>':'Vector<int>'
|-FieldDecl 0x55bd596972e0 <line:267:5, col:17> col:17 _handler_first_by_name 'Vector<int>':'Vector<int>'
|-EnumDecl 0x55bd59697330 <line:269:5, col:33> col:5
| `-EnumConstantDecl 0x55bd59697430 <col:12, col:29> col:12 HANDLER_BUFSIZ 'Router::(anonymous enum at ../dummy_inc/click/router.hh:269:5)'
|   `-ImplicitCastExpr 0x55bd59697480 <col:29> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55bd59697410 <col:29> 'int' Int: 256
|       `-IntegerLiteral 0x55bd596973f0 <col:29> 'int' 256
|-FieldDecl 0x55bd596974e0 <line:270:5, col:15> col:15 _handler_bufs 'Handler **'
|-FieldDecl 0x55bd59697548 <line:271:5, col:9> col:9 _nhandlers_bufs 'int'
|-FieldDecl 0x55bd596975b0 <line:272:5, col:9> col:9 _free_handler 'int'
|-FieldDecl 0x55bd596976b0 <line:274:5, col:20> col:20 _attachment_names 'Vector<String>':'Vector<String>'
|-FieldDecl 0x55bd596a0000 <line:275:5, col:19> col:19 _attachments 'Vector<void *>':'Vector<void *>'
|-FieldDecl 0x55bd596a0060 <line:277:5, col:14> col:14 referenced _root_element 'Element *'
|-FieldDecl 0x55bd596a00c0 <line:278:5, col:12> col:12 _configuration 'String'
|-CXXRecordDecl 0x55bd596a0110 <line:280:5, line:290:5> line:280:12 referenced struct notifier_signals_t definition
| |-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| | |-DefaultConstructor
| | |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveConstructor exists simple non_trivial needs_overload_resolution
| | |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveAssignment exists simple non_trivial needs_overload_resolution
| | `-Destructor simple non_trivial needs_overload_resolution
| |-CXXRecordDecl 0x55bd596a0228 <col:5, col:12> col:12 implicit referenced struct notifier_signals_t
| |-EnumDecl 0x55bd596a02b8 <line:281:9, col:32> col:9
| | `-EnumConstantDecl 0x55bd596a03c0 <col:16, col:27> col:16 referenced capacity 'Router::notifier_signals_t::(anonymous enum at ../dummy_inc/click/router.hh:281:9)'
| |   `-ImplicitCastExpr 0x55bd596a0410 <col:27> 'unsigned int' <IntegralCast>
| |     `-ConstantExpr 0x55bd596a03a0 <col:27> 'int' Int: 4096
| |       `-IntegerLiteral 0x55bd596a0380 <col:27> 'int' 4096
| |-FieldDecl 0x55bd596a0438 <line:282:9, col:16> col:16 name 'String'
| |-FieldDecl 0x55bd596a04a0 <line:283:9, col:13> col:13 nsig 'int'
| |-FieldDecl 0x55bd596a0698 <line:284:9, col:42> col:25 referenced sig 'atomic_uint32_t [128]'
| |-FieldDecl 0x55bd596a0728 <line:285:9, col:29> col:29 next 'Router::notifier_signals_t *'
| |-CXXConstructorDecl 0x55bd596a08e8 <line:286:9, line:289:9> line:286:9 notifier_signals_t 'void (const String &, Router::notifier_signals_t *)'
| | |-ParmVarDecl 0x55bd596a0788 <col:28, col:42> col:42 used n 'const String &'
| | |-ParmVarDecl 0x55bd596a0800 <col:45, col:65> col:65 used nx 'Router::notifier_signals_t *'
| | |-CXXCtorInitializer Field 0x55bd596a0438 'name' 'String'
| | | `-CXXConstructExpr 0x55bd596abe58 <line:287:15, col:21> 'String' 'void (const String &)'
| | |   `-DeclRefExpr 0x55bd596abe18 <col:20> 'const String' lvalue ParmVar 0x55bd596a0788 'n' 'const String &'
| | |-CXXCtorInitializer Field 0x55bd596a04a0 'nsig' 'int'
| | | `-IntegerLiteral 0x55bd596abeb0 <col:29> 'int' 0
| | |-CXXCtorInitializer Field 0x55bd596a0698 'sig' 'atomic_uint32_t [128]'
| | | `-CXXConstructExpr 0x55bd596abf98 <line:286:9> 'atomic_uint32_t [128]' 'void () noexcept'
| | |-CXXCtorInitializer Field 0x55bd596a0728 'next' 'Router::notifier_signals_t *'
| | | `-ImplicitCastExpr 0x55bd596abf58 <line:287:38> 'Router::notifier_signals_t *' <LValueToRValue>
| | |   `-DeclRefExpr 0x55bd596abf18 <col:38> 'Router::notifier_signals_t *' lvalue ParmVar 0x55bd596a0800 'nx' 'Router::notifier_signals_t *'
| | `-CompoundStmt 0x55bd596ac228 <col:42, line:289:9>
| |   `-CallExpr 0x55bd596ac1d8 <line:288:13, col:43> 'void *'
| |     |-ImplicitCastExpr 0x55bd596ac1c0 <col:13> 'void *(*)(void *, int, size_t) throw()' <FunctionToPointerDecay>
| |     | `-DeclRefExpr 0x55bd596ac1a0 <col:13> 'void *(void *, int, size_t) throw()' lvalue Function 0x55bd591c68c8 'memset' 'void *(void *, int, size_t) throw()'
| |     |-ImplicitCastExpr 0x55bd596ac210 <col:20, col:26> 'void *' <BitCast>
| |     | `-UnaryOperator 0x55bd596ac0e8 <col:20, col:26> 'atomic_uint32_t *' prefix '&' cannot overflow
| |     |   `-ArraySubscriptExpr 0x55bd596ac0c8 <col:21, col:26> 'atomic_uint32_t' lvalue
| |     |     |-ImplicitCastExpr 0x55bd596ac0b0 <col:21> 'atomic_uint32_t *' <ArrayToPointerDecay>
| |     |     | `-MemberExpr 0x55bd596ac060 <col:21> 'atomic_uint32_t [128]' lvalue ->sig 0x55bd596a0698
| |     |     |   `-CXXThisExpr 0x55bd596ac050 <col:21> 'Router::notifier_signals_t *' implicit this
| |     |     `-IntegerLiteral 0x55bd596ac090 <col:25> 'int' 0
| |     |-IntegerLiteral 0x55bd596ac100 <col:29> 'int' 0
| |     `-UnaryExprOrTypeTraitExpr 0x55bd596ac180 <col:32, col:42> 'unsigned long' sizeof
| |       `-ParenExpr 0x55bd596ac160 <col:38, col:42> 'atomic_uint32_t [128]' lvalue
| |         `-MemberExpr 0x55bd596ac130 <col:39> 'atomic_uint32_t [128]' lvalue ->sig 0x55bd596a0698 non_odr_use_unevaluated
| |           `-CXXThisExpr 0x55bd596ac120 <col:39> 'Router::notifier_signals_t *' implicit this
| |-CXXConstructorDecl 0x55bd596a09c8 <line:280:12> col:12 implicit notifier_signals_t 'void (const Router::notifier_signals_t &)' inline default noexcept-unevaluated 0x55bd596a09c8
| | `-ParmVarDecl 0x55bd596a0ad8 <col:12> col:12 'const Router::notifier_signals_t &'
| |-CXXConstructorDecl 0x55bd596a0b78 <col:12> col:12 implicit notifier_signals_t 'void (Router::notifier_signals_t &&)' inline default noexcept-unevaluated 0x55bd596a0b78
| | `-ParmVarDecl 0x55bd596a0c88 <col:12> col:12 'Router::notifier_signals_t &&'
| |-CXXMethodDecl 0x55bd596a0d28 <col:12> col:12 implicit operator= 'Router::notifier_signals_t &(const Router::notifier_signals_t &)' inline default noexcept-unevaluated 0x55bd596a0d28
| | `-ParmVarDecl 0x55bd596a0e38 <col:12> col:12 'const Router::notifier_signals_t &'
| |-CXXMethodDecl 0x55bd596a0ea8 <col:12> col:12 implicit operator= 'Router::notifier_signals_t &(Router::notifier_signals_t &&)' inline default noexcept-unevaluated 0x55bd596a0ea8
| | `-ParmVarDecl 0x55bd596a0fb8 <col:12> col:12 'Router::notifier_signals_t &&'
| `-CXXDestructorDecl 0x55bd596a1040 <col:12> col:12 implicit ~notifier_signals_t 'void ()' inline default noexcept-unevaluated 0x55bd596a1040
|-FieldDecl 0x55bd596a1130 <line:291:5, col:25> col:25 _notifier_signals 'Router::notifier_signals_t *'
|-FieldDecl 0x55bd596a1190 <line:292:5, col:27> col:27 referenced _arena_factory 'HashMap_ArenaFactory *'
|-FieldDecl 0x55bd596a11f0 <line:293:5, col:13> col:13 referenced _hotswap_router 'Router *'
|-FieldDecl 0x55bd596a1250 <line:294:5, col:18> col:18 referenced _thread_sched 'ThreadSched *'
|-FieldDecl 0x55bd596a12b0 <line:295:5, col:23> col:23 referenced _name_info 'NameInfo *' mutable
|-FieldDecl 0x55bd596a13c0 <line:296:5, col:17> col:17 _flow_code_override_eindex 'Vector<int>':'Vector<int>'
|-FieldDecl 0x55bd596a5680 <line:297:5, col:20> col:20 referenced _flow_code_override 'Vector<String>':'Vector<String>'
|-FieldDecl 0x55bd596a56e0 <line:299:5, col:13> col:13 _next_router 'Router *'
|-CXXConstructorDecl 0x55bd596a5828 <line:305:5, col:25> col:5 Router 'void (const Router &)'
| `-ParmVarDecl 0x55bd596a5768 <col:12, col:24> col:25 'const Router &'
|-CXXMethodDecl 0x55bd596a59d8 <line:306:5, col:36> col:13 operator= 'Router &(const Router &)'
| `-ParmVarDecl 0x55bd596a58e8 <col:23, col:35> col:36 'const Router &'
|-CXXMethodDecl 0x55bd596a5b20 <line:308:5, col:49> col:17 remove_connection 'Router::Connection *(Router::Connection *)'
| `-ParmVarDecl 0x55bd596a5a90 <col:35, col:47> col:47 cp 'Router::Connection *'
|-CXXMethodDecl 0x55bd596a5ec8 <line:309:5, line:310:62> line:309:10 hookup_error 'void (const Router::Port &, bool, const char *, ErrorHandler *, bool)'
| |-ParmVarDecl 0x55bd596a5bd8 <col:23, col:35> col:35 p 'const Router::Port &'
| |-ParmVarDecl 0x55bd596a5c50 <col:38, col:43> col:43 isoutput 'bool'
| |-ParmVarDecl 0x55bd596a5cd0 <col:53, col:65> col:65 message 'const char *'
| |-ParmVarDecl 0x55bd596a5d48 <line:310:23, col:37> col:37 errh 'ErrorHandler *'
| `-ParmVarDecl 0x55bd596a5dc0 <col:43, col:57> col:48 active 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55bd596a8f00 <col:57> 'bool' false
|-CXXMethodDecl 0x55bd596a6038 <line:311:5, col:44> col:9 check_hookup_elements 'int (ErrorHandler *)'
| `-ParmVarDecl 0x55bd596a5fa0 <col:31, col:43> col:44 'ErrorHandler *'
|-CXXMethodDecl 0x55bd596a6188 <line:312:5, col:41> col:9 check_hookup_range 'int (ErrorHandler *)'
| `-ParmVarDecl 0x55bd596a60f0 <col:28, col:40> col:41 'ErrorHandler *'
|-CXXMethodDecl 0x55bd596a62d8 <line:313:5, col:48> col:9 check_hookup_completeness 'int (ErrorHandler *)'
| `-ParmVarDecl 0x55bd596a6240 <col:35, col:47> col:48 'ErrorHandler *'
|-CXXMethodDecl 0x55bd596a6430 <line:315:5, col:48> col:17 used hard_flow_code_override 'const char *(int) const'
| `-ParmVarDecl 0x55bd596a6398 <col:41, col:45> col:45 e 'int'
|-CXXMethodDecl 0x55bd596a6750 <line:316:5, col:74> col:9 processing_error 'int (const Router::Connection &, bool, int, ErrorHandler *)'
| |-ParmVarDecl 0x55bd596a64e8 <col:26, col:44> col:44 conn 'const Router::Connection &'
| |-ParmVarDecl 0x55bd596a6560 <col:50> col:54 'bool'
| |-ParmVarDecl 0x55bd596a65e0 <col:56> col:59 'int'
| `-ParmVarDecl 0x55bd596a6658 <col:61, col:73> col:74 'ErrorHandler *'
|-CXXMethodDecl 0x55bd596a68b8 <line:317:5, col:42> col:9 check_push_and_pull 'int (ErrorHandler *)'
| `-ParmVarDecl 0x55bd596a6820 <col:29, col:41> col:42 'ErrorHandler *'
|-CXXMethodDecl 0x55bd596a6980 <line:319:5, col:26> col:10 set_connections 'void ()'
|-CXXMethodDecl 0x55bd596a6a40 <line:320:5, col:29> col:10 sort_connections 'void () const'
|-CXXMethodDecl 0x55bd596a6c40 <line:321:5, col:64> col:9 connindex_lower_bound 'int (bool, const Router::Port &) const'
| |-ParmVarDecl 0x55bd596a6af0 <col:31, col:36> col:36 isoutput 'bool'
| `-ParmVarDecl 0x55bd596a6b68 <col:46, col:58> col:58 port 'const Router::Port &'
|-CXXMethodDecl 0x55bd596a6d10 <line:323:5, col:22> col:10 make_gports 'void ()'
|-CXXMethodDecl 0x55bd596a6e58 <line:324:5, line:326:5> line:324:16 ngports 'int (bool) const' inline
| |-ParmVarDecl 0x55bd596a6dc0 <col:24, col:29> col:29 used isout 'bool'
| `-CompoundStmt 0x55bd596ac460 <col:42, line:326:5>
|   `-ReturnStmt 0x55bd596ac450 <line:325:9, col:50>
|     `-ImplicitCastExpr 0x55bd596ac438 <col:16, col:50> 'int':'int' <LValueToRValue>
|       `-CXXMemberCallExpr 0x55bd596ac418 <col:16, col:50> 'const int':'const int' lvalue
|         `-MemberExpr 0x55bd596ac3e8 <col:16, col:45> '<bound member function type>' .back 0x55bd59567018
|           `-ArraySubscriptExpr 0x55bd596ac368 <col:16, col:43> 'const Vector<int>':'const Vector<int>' lvalue
|             |-ImplicitCastExpr 0x55bd596ac338 <col:16> 'const Vector<int> *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55bd596ac250 <col:16> 'Vector<int> const[2]' lvalue ->_element_gport_offset 0x55bd5968ea88
|             |   `-CXXThisExpr 0x55bd596ac240 <col:16> 'const Router *' implicit this
|             `-ImplicitCastExpr 0x55bd596ac350 <col:38> 'bool' <LValueToRValue>
|               `-DeclRefExpr 0x55bd596ac280 <col:38> 'bool' lvalue ParmVar 0x55bd596a6dc0 'isout' 'bool'
|-CXXMethodDecl 0x55bd596a7028 <line:327:5, col:55> col:16 gport 'int (bool, const Router::Port &) const' inline
| |-ParmVarDecl 0x55bd596a6f10 <col:22, col:27> col:27 isoutput 'bool'
| `-ParmVarDecl 0x55bd596a6f88 <col:37, col:49> col:49 port 'const Router::Port &'
|-CXXMethodDecl 0x55bd596a7180 <line:329:5, col:47> col:9 used hard_home_thread_id 'int (const Element *) const'
| `-ParmVarDecl 0x55bd596a70e8 <col:29, col:44> col:44 e 'const Element *'
|-CXXMethodDecl 0x55bd596a7428 <line:331:5, col:67> col:9 element_lerror 'int (ErrorHandler *, Element *, const char *, ...) const'
| |-ParmVarDecl 0x55bd596a7238 <col:24, col:36> col:37 'ErrorHandler *'
| |-ParmVarDecl 0x55bd596a72b0 <col:39, col:46> col:47 'Element *'
| `-ParmVarDecl 0x55bd596a7330 <col:49, col:59> col:60 'const char *'
|-CXXMethodDecl 0x55bd596a7600 <line:334:5, col:40> col:10 initialize_handlers 'void (bool, bool)'
| |-ParmVarDecl 0x55bd596a74f0 <col:30> col:34 'bool'
| `-ParmVarDecl 0x55bd596a7568 <col:36> col:40 'bool'
|-CXXMethodDecl 0x55bd596a7788 <line:335:5, col:35> col:21 xhandler 'Handler *(int) const' inline
| `-ParmVarDecl 0x55bd596a76c8 <col:30> col:33 'int'
|-CXXMethodDecl 0x55bd596a7a20 <line:336:5, col:60> col:9 find_ehandler 'int (int, const String &, bool) const'
| |-ParmVarDecl 0x55bd596a7848 <col:23> col:26 'int'
| |-ParmVarDecl 0x55bd596a78c0 <col:28, col:40> col:41 'const String &'
| `-ParmVarDecl 0x55bd596a7938 <col:43, col:48> col:48 allow_star 'bool'
|-CXXMethodDecl 0x55bd596a7c38 <line:337:5, col:70> col:27 fetch_handler 'Handler (const Element *, const String &)' static inline
| |-ParmVarDecl 0x55bd596a7ae8 <col:41, col:54> col:55 'const Element *'
| `-ParmVarDecl 0x55bd596a7b60 <col:57, col:69> col:70 'const String &'
|-CXXMethodDecl 0x55bd596a7e48 <line:338:5, col:52> col:10 store_local_handler 'void (int, Handler &)'
| |-ParmVarDecl 0x55bd596a7d00 <col:30, col:34> col:34 eindex 'int'
| `-ParmVarDecl 0x55bd596a7d78 <col:42, col:51> col:51 h 'Handler &'
|-CXXMethodDecl 0x55bd596a7fc8 <line:339:5, col:48> col:17 store_global_handler 'void (Handler &)' static
| `-ParmVarDecl 0x55bd596a7f08 <col:38, col:47> col:47 h 'Handler &'
|-CXXMethodDecl 0x55bd596a81c8 <line:340:5, col:72> col:24 store_handler 'void (const Element *, Handler &)' static inline
| |-ParmVarDecl 0x55bd596a8080 <col:38, col:53> col:53 element 'const Element *'
| `-ParmVarDecl 0x55bd596a80f8 <col:62, col:71> col:71 h 'Handler &'
|-CXXMethodDecl 0x55bd596a83a0 <line:343:5, col:66> col:19 router_read_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55bd596a8288 <col:39, col:48> col:48 e 'Element *'
| `-ParmVarDecl 0x55bd596a8308 <col:51, col:57> col:57 user_data 'void *'
|-CXXMethodDecl 0x55bd596a8680 <line:344:5, col:103> col:16 router_write_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x55bd596a8460 <col:37, col:51> col:51 str 'const String &'
| |-ParmVarDecl 0x55bd596a84d8 <col:56, col:65> col:65 e 'Element *'
| |-ParmVarDecl 0x55bd596a8558 <col:68, col:74> col:74 user_data 'void *'
| `-ParmVarDecl 0x55bd596a85d0 <col:85, col:99> col:99 errh 'ErrorHandler *'
|-FriendDecl 0x55bd596a8760 <line:347:5, col:18> col:12 'class Master':'Master'
|-FriendDecl 0x55bd596a87c0 <line:348:5, col:18> col:12 'class Task':'Task'
`-FriendDecl 0x55bd596a8a40 <line:349:5, col:44> col:25
  `-CXXMethodDecl 0x55bd596a8940 parent 0x55bd594c8150 prev 0x55bd594d7d78 <col:5, col:44> col:25 set_nports 'int (int, int)'
    |-ParmVarDecl 0x55bd596a8820 <col:36> col:39 'int'
    `-ParmVarDecl 0x55bd596a88a0 <col:41> col:44 'int'

Layout: <CGRecordLayout
  LLVMType:%class.Router = type { %class.Master*, %class.atomic_uint32_t, i32, i8, i32, %class.atomic_uint32_t, %class.Vector, %class.Vector.0, %class.Vector.0, %class.Vector.2, %class.Vector.5, %class.Vector.6, i32, %class.Vector.5, [2 x %class.Vector.5], %class.Vector.5, %class.Vector.8, %class.Vector.5, %class.Vector.0, %class.Vector.5, %class.Vector.5, %class.Vector.5, %class.Vector.5, %class.Handler**, i32, i32, %class.Vector.0, %class.Vector.12, %class.Element*, %class.String, %"struct.Router::notifier_signals_t"*, %class.HashMap_ArenaFactory*, %class.Router*, %class.ThreadSched*, %class.NameInfo*, %class.Vector.5, %class.Vector.0, %class.Router* }
  NonVirtualBaseLLVMType:%class.Router = type { %class.Master*, %class.atomic_uint32_t, i32, i8, i32, %class.atomic_uint32_t, %class.Vector, %class.Vector.0, %class.Vector.0, %class.Vector.2, %class.Vector.5, %class.Vector.6, i32, %class.Vector.5, [2 x %class.Vector.5], %class.Vector.5, %class.Vector.8, %class.Vector.5, %class.Vector.0, %class.Vector.5, %class.Vector.5, %class.Vector.5, %class.Vector.5, %class.Handler**, i32, i32, %class.Vector.0, %class.Vector.12, %class.Element*, %class.String, %"struct.Router::notifier_signals_t"*, %class.HashMap_ArenaFactory*, %class.Router*, %class.ThreadSched*, %class.NameInfo*, %class.Vector.5, %class.Vector.0, %class.Router* }
  IsZeroInitializable:1
  BitFields:[
    <CGBitFieldInfo Offset:0 Size:1 IsSigned:0 StorageSize:8 StorageOffset:16>
    <CGBitFieldInfo Offset:1 Size:1 IsSigned:0 StorageSize:8 StorageOffset:16>
    <CGBitFieldInfo Offset:2 Size:1 IsSigned:0 StorageSize:8 StorageOffset:16>
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55bd594c8150 prev 0x55bd594c7ed0 <../dummy_inc/click/element.hh:29:1, line:319:1> line:29:7 referenced class Element definition
|-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55bd594c8248 <col:1, col:7> col:7 implicit referenced class Element
|-AccessSpecDecl 0x55bd594c82d8 <col:17, col:23> col:17 public
|-CXXConstructorDecl 0x55bd594c8338 <line:31:5, col:13> col:5 used Element 'void ()'
|-CXXDestructorDecl 0x55bd594c8428 <line:32:5, col:22> col:13 used ~Element 'void () noexcept' virtual
|-VarDecl 0x55bd594c8528 <line:33:5, col:16> col:16 nelements_allocated 'int' static
|-CXXMethodDecl 0x55bd594c86f8 <line:36:5, col:42> col:18 used push 'void (int, Packet *)' virtual
| |-ParmVarDecl 0x55bd594c85a8 <col:23, col:27> col:27 port 'int'
| `-ParmVarDecl 0x55bd594c8620 <col:33, col:41> col:41 p 'Packet *'
|-CXXMethodDecl 0x55bd594c8888 <line:37:5, col:70> col:21 used pull 'Packet *(int)' virtual
| |-ParmVarDecl 0x55bd594c87c0 <col:26, col:30> col:30 port 'int'
| `-WarnUnusedResultAttr 0x55bd594c8930 <col:51> warn_unused_result ""
|-CXXMethodDecl 0x55bd594c8a68 <line:38:5, col:44> col:21 simple_action 'Packet *(Packet *)' virtual
| `-ParmVarDecl 0x55bd594c89a0 <col:35, col:43> col:43 p 'Packet *'
|-CXXMethodDecl 0x55bd594c8c08 <line:40:5, col:37> col:18 used run_task 'bool (Task *)' virtual
| `-ParmVarDecl 0x55bd594c8b48 <col:27, col:33> col:33 task 'Task *'
|-CXXMethodDecl 0x55bd594c8da8 <line:41:5, col:40> col:18 run_timer 'void (Timer *)' virtual
| `-ParmVarDecl 0x55bd594c8ce8 <col:28, col:35> col:35 timer 'Timer *'
|-EnumDecl 0x55bd594c8e50 <line:43:5, col:46> col:5
| |-EnumConstantDecl 0x55bd594c8f50 <col:12, col:26> col:12 SELECT_READ 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
| | `-ImplicitCastExpr 0x55bd594c9030 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55bd594c8f30 <col:26> 'int' Int: 1
| |     `-IntegerLiteral 0x55bd594c8f10 <col:26> 'int' 1
| `-EnumConstantDecl 0x55bd594c8fe0 <col:29, col:44> col:29 SELECT_WRITE 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
|   `-ImplicitCastExpr 0x55bd594c9048 <col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55bd594c8fc0 <col:44> 'int' Int: 2
|       `-IntegerLiteral 0x55bd594c8fa0 <col:44> 'int' 2
|-CXXMethodDecl 0x55bd594c9190 <line:44:5, col:43> col:18 selected 'void (int, int)' virtual
| |-ParmVarDecl 0x55bd594c9078 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x55bd594c90f8 <col:35, col:39> col:39 mask 'int'
|-CXXMethodDecl 0x55bd594c92e8 <line:45:5, col:33> col:18 selected 'void (int)' virtual
| `-ParmVarDecl 0x55bd594c9258 <col:27, col:31> col:31 fd 'int'
|-CXXMethodDecl 0x55bd594c9528 <line:48:5, col:86> col:45 checked_output_push 'void (int, Packet *) const'
| |-ParmVarDecl 0x55bd594c93a8 <col:65, col:69> col:69 port 'int'
| |-ParmVarDecl 0x55bd594c9420 <col:75, col:83> col:83 p 'Packet *'
| |-NoInlineAttr 0x55bd594c95d8 <col:20>
| `-OptimizeNoneAttr 0x55bd594c9630 <col:30>
|-CXXMethodDecl 0x55bd594c9738 <line:49:5, col:77> col:48 checked_input_pull 'Packet *(int) const'
| |-ParmVarDecl 0x55bd594c9670 <col:67, col:71> col:71 port 'int'
| |-NoInlineAttr 0x55bd594c97e0 <col:20>
| `-OptimizeNoneAttr 0x55bd594c9838 <col:30>
|-CXXMethodDecl 0x55bd594c9888 <line:52:5, col:46> col:25 class_name 'const char *() const' virtual pure
|-CXXMethodDecl 0x55bd594c9950 <line:54:5, col:38> col:25 port_count 'const char *() const' virtual
|-VarDecl 0x55bd594c9a68 <line:55:5, col:33> col:23 PORTS_0_0 'const char []' static
|-VarDecl 0x55bd594c9af0 <line:56:5, col:33> col:23 PORTS_0_1 'const char []' static
|-VarDecl 0x55bd594c9b78 <line:57:5, col:33> col:23 PORTS_1_0 'const char []' static
|-VarDecl 0x55bd594c9c00 <line:58:5, col:33> col:23 PORTS_1_1 'const char []' static
|-VarDecl 0x55bd594c9c88 <line:59:5, col:35> col:23 PORTS_1_1X2 'const char []' static
|-CXXMethodDecl 0x55bd594c9d18 <line:61:5, col:38> col:25 processing 'const char *() const' virtual
|-VarDecl 0x55bd594c9dd8 <line:62:5, col:32> col:23 AGNOSTIC 'const char []' static
|-VarDecl 0x55bd594c9e60 <line:63:5, col:28> col:23 PUSH 'const char []' static
|-VarDecl 0x55bd594c9ee8 <line:64:5, col:28> col:23 PULL 'const char []' static
|-VarDecl 0x55bd594c9f70 <line:65:5, col:36> col:23 PUSH_TO_PULL 'const char []' static
|-VarDecl 0x55bd594c9ff8 <line:66:5, col:36> col:23 PULL_TO_PUSH 'const char []' static
|-VarDecl 0x55bd594ca080 <line:67:5, col:39> col:23 PROCESSING_A_AH 'const char []' static
|-CXXMethodDecl 0x55bd594ca110 <line:69:5, col:37> col:25 flow_code 'const char *() const' virtual
|-VarDecl 0x55bd594ca1d0 <line:70:5, col:37> col:23 COMPLETE_FLOW 'const char []' static
|-CXXMethodDecl 0x55bd594ca260 <line:72:5, col:33> col:25 flags 'const char *() const' virtual
|-CXXMethodDecl 0x55bd594ca3b0 <line:73:5, col:30> col:9 flag_value 'int (int) const'
| `-ParmVarDecl 0x55bd594ca318 <col:20, col:24> col:24 flag 'int'
|-CXXMethodDecl 0x55bd594ca540 <line:75:5, col:40> col:19 cast 'void *(const char *)' virtual
| `-ParmVarDecl 0x55bd594ca470 <col:24, col:36> col:36 name 'const char *'
|-CXXMethodDecl 0x55bd594ca7f0 <line:76:5, col:70> col:19 port_cast 'void *(bool, int, const char *)' virtual
| |-ParmVarDecl 0x55bd594ca5f8 <col:29, col:34> col:34 isoutput 'bool'
| |-ParmVarDecl 0x55bd594ca678 <col:44, col:48> col:48 port 'int'
| `-ParmVarDecl 0x55bd594ca6f8 <col:54, col:66> col:66 name 'const char *'
|-EnumDecl 0x55bd594ca8a8 <line:79:5, line:85:5> line:79:10 ConfigurePhase
| |-EnumConstantDecl 0x55bd594ca9b0 <line:80:9, col:33> col:9 CONFIGURE_PHASE_FIRST 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55bd594cac40 <col:33> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55bd594ca990 <col:33> 'int' Int: 0
| |     `-IntegerLiteral 0x55bd594ca970 <col:33> 'int' 0
| |-EnumConstantDecl 0x55bd594caa40 <line:81:9, col:32> col:9 referenced CONFIGURE_PHASE_INFO 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55bd594cac58 <col:32> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55bd594caa20 <col:32> 'int' Int: 20
| |     `-IntegerLiteral 0x55bd594caa00 <col:32> 'int' 20
| |-EnumConstantDecl 0x55bd594caad0 <line:82:9, col:38> col:9 CONFIGURE_PHASE_PRIVILEGED 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55bd594cac70 <col:38> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55bd594caab0 <col:38> 'int' Int: 90
| |     `-IntegerLiteral 0x55bd594caa90 <col:38> 'int' 90
| |-EnumConstantDecl 0x55bd594cab60 <line:83:9, col:35> col:9 CONFIGURE_PHASE_DEFAULT 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55bd594cac88 <col:35> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55bd594cab40 <col:35> 'int' Int: 100
| |     `-IntegerLiteral 0x55bd594cab20 <col:35> 'int' 100
| `-EnumConstantDecl 0x55bd594cabf0 <line:84:9, col:32> col:9 CONFIGURE_PHASE_LAST 'Element::ConfigurePhase'
|   `-ImplicitCastExpr 0x55bd594caca0 <col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55bd594cabd0 <col:32> 'int' Int: 2000
|       `-IntegerLiteral 0x55bd594cabb0 <col:32> 'int' 2000
|-CXXMethodDecl 0x55bd594cace0 <line:86:5, col:35> col:17 configure_phase 'int () const' virtual
|-CXXMethodDecl 0x55bd594cb120 <line:88:5, col:67> col:17 configure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x55bd594caf90 <col:27, col:43> col:43 conf 'Vector<String> &'
| `-ParmVarDecl 0x55bd594cb008 <col:49, col:63> col:63 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55bd594cb1f0 <line:90:5, col:31> col:18 add_handlers 'void ()' virtual
|-CXXMethodDecl 0x55bd594cb370 <line:92:5, col:46> col:17 initialize 'int (ErrorHandler *)' virtual
| `-ParmVarDecl 0x55bd594cb2a0 <col:28, col:42> col:42 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55bd594cb578 <line:94:5, col:69> col:18 take_state 'void (Element *, ErrorHandler *)' virtual
| |-ParmVarDecl 0x55bd594cb428 <col:29, col:38> col:38 old_element 'Element *'
| `-ParmVarDecl 0x55bd594cb4a0 <col:51, col:65> col:65 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55bd594cb678 <line:95:5, col:40> col:22 hotswap_element 'Element *() const' virtual
|-EnumDecl 0x55bd594cb718 <line:97:5, line:106:5> line:97:10 referenced CleanupStage
| |-EnumConstantDecl 0x55bd594cb7e0 <line:98:9> col:9 referenced CLEANUP_NO_ROUTER 'Element::CleanupStage'
| |-EnumConstantDecl 0x55bd594cb870 <line:99:9, col:36> col:9 CLEANUP_BEFORE_CONFIGURE 'Element::CleanupStage'
| | `-ImplicitCastExpr 0x55bd594cbaa0 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55bd594cb850 <col:36> 'int' Int: 0
| |     `-DeclRefExpr 0x55bd594cb830 <col:36> 'int' EnumConstant 0x55bd594cb7e0 'CLEANUP_NO_ROUTER' 'Element::CleanupStage'
| |-EnumConstantDecl 0x55bd594cb8c0 <line:100:9> col:9 CLEANUP_CONFIGURE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55bd594cb910 <line:101:9> col:9 CLEANUP_CONFIGURED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55bd594cb960 <line:102:9> col:9 CLEANUP_INITIALIZE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55bd594cb9b0 <line:103:9> col:9 CLEANUP_INITIALIZED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55bd594cba00 <line:104:9> col:9 CLEANUP_ROUTER_INITIALIZED 'Element::CleanupStage'
| `-EnumConstantDecl 0x55bd594cba50 <line:105:9> col:9 CLEANUP_MANUAL 'Element::CleanupStage'
|-CXXMethodDecl 0x55bd594cbb88 <line:107:5, col:44> col:18 cleanup 'void (Element::CleanupStage)' virtual
| `-ParmVarDecl 0x55bd594cbac8 <col:26, col:39> col:39 stage 'Element::CleanupStage'
|-CXXMethodDecl 0x55bd594cbc50 <line:109:5, col:42> col:24 static_initialize 'void ()' static inline
|-CXXMethodDecl 0x55bd594cbd10 <line:110:5, col:39> col:24 static_cleanup 'void ()' static inline
|-CXXMethodDecl 0x55bd594cbdd0 <line:113:5, col:19> col:12 name 'String () const'
|-CXXMethodDecl 0x55bd594cbe90 <line:114:5, col:34> col:20 declaration 'String () const' virtual
|-CXXMethodDecl 0x55bd594cbfa8 <line:116:5, col:29> col:20 used router 'Router *() const' inline
|-CXXMethodDecl 0x55bd594cc070 <line:117:5, col:25> col:16 used eindex 'int () const' inline
|-CXXMethodDecl 0x55bd594cc1f0 <line:118:5, col:34> col:16 eindex 'int (Router *) const' inline
| `-ParmVarDecl 0x55bd594cc120 <col:23, col:31> col:31 r 'Router *'
|-CXXMethodDecl 0x55bd594cc318 <line:121:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x55bd594cc518 <line:123:5, line:127:5> line:123:17 attach_router 'void (Router *, int)' inline
| |-ParmVarDecl 0x55bd594cc3c8 <col:31, col:39> col:39 used r 'Router *'
| |-ParmVarDecl 0x55bd594cc448 <col:42, col:46> col:46 used eindex 'int'
| `-CompoundStmt 0x55bd594d9e68 <col:54, line:127:5>
|   |-ParenExpr 0x55bd594d9d18 <line:124:9, col:152> 'void'
|   | `-ConditionalOperator 0x55bd594d9ce8 <col:10, col:151> 'void'
|   |   |-CXXStaticCastExpr 0x55bd594d99d8 <col:10, col:38> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x55bd594d99b0 <col:30, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-ImplicitCastExpr 0x55bd594d9998 <col:31> 'bool' <PointerToBoolean>
|   |   |     `-ImplicitCastExpr 0x55bd594d9980 <col:31> 'Router *' <LValueToRValue>
|   |   |       `-MemberExpr 0x55bd594d9950 <col:31> 'Router *' lvalue ->_router 0x55bd594d7830
|   |   |         `-CXXThisExpr 0x55bd594d9940 <col:31> 'Element *' implicit this
|   |   |-CXXFunctionalCastExpr 0x55bd594d9a38 <col:42, col:49> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55bd594d9a18 <col:48> 'int' 0
|   |   `-CallExpr 0x55bd594d9c48 <col:53, col:151> 'void'
|   |     |-ImplicitCastExpr 0x55bd594d9c30 <col:53> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55bd594d9c10 <col:53> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55bd59002600 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55bd594d9c88 <col:68> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55bd594d9aa8 <col:68> 'const char [9]' lvalue "!_router"
|   |     |-ImplicitCastExpr 0x55bd594d9ca0 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55bd594d9ac8 <col:80> 'const char [30]' lvalue "../dummy_inc/click/element.hh"
|   |     |-ImplicitCastExpr 0x55bd594d9cb8 <col:113> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55bd594d9b00 <col:113> 'int' 124
|   |     `-ImplicitCastExpr 0x55bd594d9cd0 <col:118, col:132> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55bd594d9bf8 <col:118, col:132> 'const char [43]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55bd594d9be0 <col:132> 'const char [43]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55bd594d9b98 <col:132> 'const char [43]' lvalue "void Element::attach_router(Router *, int)"
|   |-BinaryOperator 0x55bd594d9db0 <line:125:9, col:19> 'Router *' lvalue '='
|   | |-MemberExpr 0x55bd594d9d48 <col:9> 'Router *' lvalue ->_router 0x55bd594d7830
|   | | `-CXXThisExpr 0x55bd594d9d38 <col:9> 'Element *' implicit this
|   | `-ImplicitCastExpr 0x55bd594d9d98 <col:19> 'Router *' <LValueToRValue>
|   |   `-DeclRefExpr 0x55bd594d9d78 <col:19> 'Router *' lvalue ParmVar 0x55bd594cc3c8 'r' 'Router *'
|   `-BinaryOperator 0x55bd594d9e48 <line:126:9, col:19> 'int' lvalue '='
|     |-MemberExpr 0x55bd594d9de0 <col:9> 'int' lvalue ->_eindex 0x55bd594d7898
|     | `-CXXThisExpr 0x55bd594d9dd0 <col:9> 'Element *' implicit this
|     `-ImplicitCastExpr 0x55bd594d9e30 <col:19> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x55bd594d9e10 <col:19> 'int' lvalue ParmVar 0x55bd594cc448 'eindex' 'int'
|-CXXMethodDecl 0x55bd594cc6a0 <line:130:5, col:38> col:16 used nports 'int (bool) const' inline
| `-ParmVarDecl 0x55bd594cc5d8 <col:23, col:28> col:28 isoutput 'bool'
|-CXXMethodDecl 0x55bd594cc770 <line:131:5, col:26> col:16 used ninputs 'int () const' inline
|-CXXMethodDecl 0x55bd594cc838 <line:132:5, col:27> col:16 used noutputs 'int () const' inline
|-CXXRecordDecl 0x55bd594cc8d8 <line:134:5, col:11> col:11 referenced class Port
|-CXXMethodDecl 0x55bd594ccb28 <line:135:5, col:82> col:52 used port 'const Element::Port &(bool, int) const'
| |-ParmVarDecl 0x55bd594cc9a0 <col:57, col:62> col:62 isoutput 'bool'
| |-ParmVarDecl 0x55bd594cca20 <col:72, col:76> col:76 port 'int'
| |-NoInlineAttr 0x55bd594ccbd8 <col:20>
| `-OptimizeNoneAttr 0x55bd594ccc30 <col:30>
|-CXXMethodDecl 0x55bd594ccd38 <line:136:5, col:68> col:52 input 'const Element::Port &(int) const'
| |-ParmVarDecl 0x55bd594ccc70 <col:58, col:62> col:62 port 'int'
| |-NoInlineAttr 0x55bd594ccde0 <col:20>
| `-OptimizeNoneAttr 0x55bd594cce38 <col:30>
|-CXXMethodDecl 0x55bd594ccf08 <line:137:5, col:69> col:52 output 'const Element::Port &(int) const'
| |-ParmVarDecl 0x55bd594cce78 <col:59, col:63> col:63 port 'int'
| |-NoInlineAttr 0x55bd594ccfb0 <col:20>
| `-OptimizeNoneAttr 0x55bd594cd008 <col:30>
|-CXXMethodDecl 0x55bd594cd198 <line:139:5, col:54> col:17 used port_active 'bool (bool, int) const' inline
| |-ParmVarDecl 0x55bd594cd040 <col:29, col:34> col:34 isoutput 'bool'
| `-ParmVarDecl 0x55bd594cd0c0 <col:44, col:48> col:48 port 'int'
|-CXXMethodDecl 0x55bd594cd328 <line:140:5, col:41> col:17 input_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x55bd594cd260 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x55bd594cd478 <line:141:5, col:41> col:17 input_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x55bd594cd3e8 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x55bd594cd5c8 <line:142:5, col:42> col:17 output_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x55bd594cd538 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x55bd594cd718 <line:143:5, col:42> col:17 output_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x55bd594cd688 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x55bd594cd9d8 <line:144:5, col:57> col:10 port_flow 'void (bool, int, Bitvector *) const'
| |-ParmVarDecl 0x55bd594cd7d0 <col:20, col:25> col:25 isoutput 'bool'
| |-ParmVarDecl 0x55bd594cd850 <col:35, col:39> col:39 port 'int'
| `-ParmVarDecl 0x55bd594cd8f8 <col:45, col:54> col:55 'Bitvector *'
|-CXXMethodDecl 0x55bd594cdab0 <line:147:5, col:28> col:12 configuration 'String () const'
|-CXXMethodDecl 0x55bd594cdb70 <line:149:5, col:41> col:18 can_live_reconfigure 'bool () const' virtual
|-CXXMethodDecl 0x55bd594cde40 <line:150:5, col:64> col:17 live_reconfigure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x55bd594cdcf0 <col:34, col:48> col:49 'Vector<String> &'
| `-ParmVarDecl 0x55bd594cdd68 <col:51, col:63> col:64 'ErrorHandler *'
|-CXXMethodDecl 0x55bd594cdf68 <line:152:5, col:33> col:19 home_thread 'RouterThread *() const'
|-CXXMethodDecl 0x55bd594ce140 <line:156:5, col:36> col:9 add_select 'int (int, int)'
| |-ParmVarDecl 0x55bd594ce020 <col:20, col:24> col:24 fd 'int'
| `-ParmVarDecl 0x55bd594ce0a0 <col:28, col:32> col:32 mask 'int'
|-CXXMethodDecl 0x55bd594ce328 <line:157:5, col:39> col:9 remove_select 'int (int, int)'
| |-ParmVarDecl 0x55bd594ce208 <col:23, col:27> col:27 fd 'int'
| `-ParmVarDecl 0x55bd594ce288 <col:31, col:35> col:35 mask 'int'
|-CXXMethodDecl 0x55bd594ce698 <line:161:5, col:127> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x55bd594ce3e8 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x55bd594ce460 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55bd594ce4e0 <col:82, col:106> col:94 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x55bd594d9450 <col:106> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x55bd594d9430 <col:106> 'int' 0
| `-ParmVarDecl 0x55bd594ce558 <col:109, col:126> col:118 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55bd594d9488 <col:126> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55bd594d9468 <col:126> 'int' 0
|-CXXMethodDecl 0x55bd594cea38 <line:162:5, col:115> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55bd594ce768 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x55bd594ce800 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55bd594ce880 <col:82, col:86> col:86 user_data 'int'
| `-ParmVarDecl 0x55bd594ce8f8 <col:97, col:114> col:106 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55bd594d94c0 <col:114> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55bd594d94a0 <col:114> 'int' 0
|-CXXMethodDecl 0x55bd594cedc8 <line:163:5, col:117> col:10 add_read_handler 'void (const char *, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55bd594ceb10 <col:27, col:39> col:39 name 'const char *'
| |-ParmVarDecl 0x55bd594ceb88 <col:45, col:65> col:65 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55bd594cec08 <col:80, col:96> col:84 user_data 'int' cinit
| | `-IntegerLiteral 0x55bd594d94d8 <col:96> 'int' 0
| `-ParmVarDecl 0x55bd594cec80 <col:99, col:116> col:108 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55bd594d9518 <col:116> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55bd594d94f8 <col:116> 'int' 0
|-CXXMethodDecl 0x55bd594cf148 <line:164:5, col:130> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x55bd594cee98 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x55bd594cef10 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55bd594cef90 <col:85, col:109> col:97 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x55bd594d9550 <col:109> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x55bd594d9530 <col:109> 'int' 0
| `-ParmVarDecl 0x55bd594cf008 <col:112, col:129> col:121 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55bd594d9588 <col:129> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55bd594d9568 <col:129> 'int' 0
|-CXXMethodDecl 0x55bd594cf4c8 <line:165:5, col:118> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55bd594cf218 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x55bd594cf290 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55bd594cf310 <col:85, col:89> col:89 user_data 'int'
| `-ParmVarDecl 0x55bd594cf388 <col:100, col:117> col:109 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55bd594d95c0 <col:117> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55bd594d95a0 <col:117> 'int' 0
|-CXXMethodDecl 0x55bd594cf858 <line:166:5, col:120> col:10 add_write_handler 'void (const char *, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55bd594cf5a0 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55bd594cf618 <col:46, col:67> col:67 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55bd594cf698 <col:83, col:99> col:87 user_data 'int' cinit
| | `-IntegerLiteral 0x55bd594d95d8 <col:99> 'int' 0
| `-ParmVarDecl 0x55bd594cf710 <col:102, col:119> col:111 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55bd594d9618 <col:119> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55bd594d95f8 <col:119> 'int' 0
|-CXXMethodDecl 0x55bd594cfc78 <line:167:5, col:142> col:10 set_handler 'void (const String &, int, HandlerCallback, const void *, const void *)'
| |-ParmVarDecl 0x55bd594cf928 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x55bd594cf9a8 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x55bd594cfa20 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55bd594cfaa0 <col:79, col:108> col:91 read_user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x55bd594d9650 <col:108> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x55bd594d9630 <col:108> 'int' 0
| `-ParmVarDecl 0x55bd594cfb20 <col:111, col:141> col:123 write_user_data 'const void *' cinit
|   `-ImplicitCastExpr 0x55bd594d9688 <col:141> 'const void *' <NullToPointer>
|     `-IntegerLiteral 0x55bd594d9668 <col:141> 'int' 0
|-CXXMethodDecl 0x55bd594d0098 <line:168:5, col:122> col:10 set_handler 'void (const String &, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x55bd594cfd50 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x55bd594cfdd0 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x55bd594cfe48 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55bd594cfec8 <col:79, col:83> col:83 read_user_data 'int'
| `-ParmVarDecl 0x55bd594cff48 <col:99, col:121> col:103 write_user_data 'int' cinit
|   `-IntegerLiteral 0x55bd594d96a0 <col:121> 'int' 0
|-CXXMethodDecl 0x55bd594d04c8 <line:169:5, col:124> col:10 set_handler 'void (const char *, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x55bd594d0178 <col:22, col:34> col:34 name 'const char *'
| |-ParmVarDecl 0x55bd594d01f8 <col:40, col:44> col:44 flags 'int'
| |-ParmVarDecl 0x55bd594d0270 <col:51, col:67> col:67 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55bd594d02f0 <col:77, col:98> col:81 read_user_data 'int' cinit
| | `-IntegerLiteral 0x55bd594d96c0 <col:98> 'int' 0
| `-ParmVarDecl 0x55bd594d0370 <col:101, col:123> col:105 write_user_data 'int' cinit
|   `-IntegerLiteral 0x55bd594d96e0 <col:123> 'int' 0
|-CXXMethodDecl 0x55bd594d0790 <line:170:5, col:81> col:9 set_handler_flags 'int (const String &, int, int)'
| |-ParmVarDecl 0x55bd594d05a0 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x55bd594d0620 <col:47, col:51> col:51 set_flags 'int'
| `-ParmVarDecl 0x55bd594d06a0 <col:62, col:80> col:66 clear_flags 'int' cinit
|   `-IntegerLiteral 0x55bd594d9700 <col:80> 'int' 0
|-EnumDecl 0x55bd594d0848 <line:171:5, line:175:36> line:171:5
| |-EnumConstantDecl 0x55bd594d0950 <col:12, col:42> col:12 TASKHANDLER_WRITE_SCHEDULED 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55bd594d0be0 <col:42> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55bd594d0930 <col:42> 'int' Int: 1
| |     `-IntegerLiteral 0x55bd594d0910 <col:42> 'int' 1
| |-EnumConstantDecl 0x55bd594d09e0 <line:172:12, col:40> col:12 TASKHANDLER_WRITE_TICKETS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55bd594d0bf8 <col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55bd594d09c0 <col:40> 'int' Int: 2
| |     `-IntegerLiteral 0x55bd594d09a0 <col:40> 'int' 2
| |-EnumConstantDecl 0x55bd594d0a70 <line:173:12, col:44> col:12 TASKHANDLER_WRITE_HOME_THREAD 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55bd594d0c10 <col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55bd594d0a50 <col:44> 'int' Int: 4
| |     `-IntegerLiteral 0x55bd594d0a30 <col:44> 'int' 4
| |-EnumConstantDecl 0x55bd594d0b00 <line:174:12, col:36> col:12 TASKHANDLER_WRITE_ALL 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55bd594d0c28 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55bd594d0ae0 <col:36> 'int' Int: 7
| |     `-IntegerLiteral 0x55bd594d0ac0 <col:36> 'int' 7
| `-EnumConstantDecl 0x55bd594d0b90 <line:175:12, col:34> col:12 referenced TASKHANDLER_DEFAULT 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|   `-ImplicitCastExpr 0x55bd594d0c40 <col:34> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55bd594d0b70 <col:34> 'int' Int: 6
|       `-IntegerLiteral 0x55bd594d0b50 <col:34> 'int' 6
|-CXXMethodDecl 0x55bd594d0ef8 <line:176:5, col:106> col:10 used add_task_handlers 'void (Task *, NotifierSignal *, int, const String &)'
| |-ParmVarDecl 0x55bd594d0c68 <col:28, col:34> col:34 task 'Task *'
| |-ParmVarDecl 0x55bd594d0d08 <col:40, col:56> col:56 signal 'NotifierSignal *'
| |-ParmVarDecl 0x55bd594d0d88 <col:64, col:68> col:68 flags 'int'
| `-ParmVarDecl 0x55bd594d0e00 <col:75, col:105> col:89 prefix 'const String &' cinit
|   `-ExprWithCleanups 0x55bd594d97b8 <col:98, col:105> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x55bd594d97a0 <col:98, col:105> 'const String' lvalue
|       `-ImplicitCastExpr 0x55bd594d9788 <col:98, col:105> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x55bd594d9768 <col:98, col:105> 'String' (CXXTemporary 0x55bd594d9768)
|           `-CXXTemporaryObjectExpr 0x55bd594d9730 <col:98, col:105> 'String' 'void ()'
|-CXXMethodDecl 0x55bd594d1198 <line:177:5, line:179:5> line:177:17 add_task_handlers 'void (Task *, NotifierSignal *, const String &)' inline
| |-ParmVarDecl 0x55bd594d0fc8 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x55bd594d1040 <col:47, col:63> col:63 used signal 'NotifierSignal *'
| |-ParmVarDecl 0x55bd594d10b8 <col:71, col:101> col:85 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x55bd594d9868 <col:94, col:101> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x55bd594d9850 <col:94, col:101> 'const String' lvalue
| |     `-ImplicitCastExpr 0x55bd594d9838 <col:94, col:101> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x55bd594d9818 <col:94, col:101> 'String' (CXXTemporary 0x55bd594d9818)
| |         `-CXXTemporaryObjectExpr 0x55bd594d97e0 <col:94, col:101> 'String' 'void ()'
| `-CompoundStmt 0x55bd594da050 <col:104, line:179:5>
|   `-CXXMemberCallExpr 0x55bd594d9fc8 <line:178:9, col:68> 'void'
|     |-MemberExpr 0x55bd594d9f98 <col:9> '<bound member function type>' ->add_task_handlers 0x55bd594d0ef8
|     | `-CXXThisExpr 0x55bd594d9f88 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x55bd594da008 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x55bd594d9f08 <col:27> 'Task *' lvalue ParmVar 0x55bd594d0fc8 'task' 'Task *'
|     |-ImplicitCastExpr 0x55bd594da020 <col:33> 'NotifierSignal *' <LValueToRValue>
|     | `-DeclRefExpr 0x55bd594d9f28 <col:33> 'NotifierSignal *' lvalue ParmVar 0x55bd594d1040 'signal' 'NotifierSignal *'
|     |-ImplicitCastExpr 0x55bd594da038 <col:41> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x55bd594d9f48 <col:41> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x55bd594d0b90 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x55bd594d9f68 <col:62> 'const String' lvalue ParmVar 0x55bd594d10b8 'prefix' 'const String &'
|-CXXMethodDecl 0x55bd594d13a8 <line:180:5, line:182:5> line:180:17 add_task_handlers 'void (Task *, const String &)' inline
| |-ParmVarDecl 0x55bd594d1260 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x55bd594d12d8 <col:47, col:77> col:61 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x55bd594d9918 <col:70, col:77> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x55bd594d9900 <col:70, col:77> 'const String' lvalue
| |     `-ImplicitCastExpr 0x55bd594d98e8 <col:70, col:77> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x55bd594d98c8 <col:70, col:77> 'String' (CXXTemporary 0x55bd594d98c8)
| |         `-CXXTemporaryObjectExpr 0x55bd594d9890 <col:70, col:77> 'String' 'void ()'
| `-CompoundStmt 0x55bd594da228 <col:80, line:182:5>
|   `-CXXMemberCallExpr 0x55bd594da1a0 <line:181:9, col:63> 'void'
|     |-MemberExpr 0x55bd594da170 <col:9> '<bound member function type>' ->add_task_handlers 0x55bd594d0ef8
|     | `-CXXThisExpr 0x55bd594da160 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x55bd594da1e0 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x55bd594da0e0 <col:27> 'Task *' lvalue ParmVar 0x55bd594d1260 'task' 'Task *'
|     |-ImplicitCastExpr 0x55bd594da1f8 <col:33> 'NotifierSignal *' <NullToPointer>
|     | `-IntegerLiteral 0x55bd594da100 <col:33> 'int' 0
|     |-ImplicitCastExpr 0x55bd594da210 <col:36> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x55bd594da120 <col:36> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x55bd594d0b90 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x55bd594da140 <col:57> 'const String' lvalue ParmVar 0x55bd594d12d8 'prefix' 'const String &'
|-CXXMethodDecl 0x55bd594d1688 <line:184:5, col:70> col:10 add_data_handlers 'void (const char *, int, uint8_t *)'
| |-ParmVarDecl 0x55bd594d1470 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55bd594d14f0 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55bd594d1568 <col:57, col:66> col:66 data 'uint8_t *'
|-CXXMethodDecl 0x55bd594d1938 <line:185:5, col:67> col:10 add_data_handlers 'void (const char *, int, bool *)'
| |-ParmVarDecl 0x55bd594d1758 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55bd594d17d8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55bd594d1858 <col:57, col:63> col:63 data 'bool *'
|-CXXMethodDecl 0x55bd594d1c28 <line:186:5, col:71> col:10 add_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x55bd594d1a08 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55bd594d1a88 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55bd594d1b00 <col:57, col:67> col:67 data 'uint16_t *'
|-CXXMethodDecl 0x55bd594d1ed8 <line:187:5, col:66> col:10 add_data_handlers 'void (const char *, int, int *)'
| |-ParmVarDecl 0x55bd594d1cf8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55bd594d1d78 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55bd594d1df8 <col:57, col:62> col:62 data 'int *'
|-CXXMethodDecl 0x55bd594d2188 <line:188:5, col:71> col:10 add_data_handlers 'void (const char *, int, unsigned int *)'
| |-ParmVarDecl 0x55bd594d1fa8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55bd594d2028 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55bd594d20a8 <col:57, col:67> col:67 data 'unsigned int *'
|-CXXMethodDecl 0x55bd594d2438 <line:189:5, col:78> col:10 add_data_handlers 'void (const char *, int, atomic_uint32_t *)'
| |-ParmVarDecl 0x55bd594d2258 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55bd594d22d8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55bd594d2350 <col:57, col:74> col:74 data 'atomic_uint32_t *'
|-CXXMethodDecl 0x55bd594d26e8 <line:190:5, col:67> col:10 add_data_handlers 'void (const char *, int, long *)'
| |-ParmVarDecl 0x55bd594d2508 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55bd594d2588 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55bd594d2608 <col:57, col:63> col:63 data 'long *'
|-CXXMethodDecl 0x55bd594d29f8 <line:191:5, col:76> col:10 add_data_handlers 'void (const char *, int, unsigned long *)'
| |-ParmVarDecl 0x55bd594d2810 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55bd594d2890 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55bd594d2910 <col:57, col:72> col:72 data 'unsigned long *'
|-CXXMethodDecl 0x55bd594d2cd8 <line:193:5, col:72> col:10 add_data_handlers 'void (const char *, int, long long *)'
| |-ParmVarDecl 0x55bd594d2ac8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55bd594d2b48 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55bd594d2bf0 <col:57, col:68> col:68 data 'long long *'
|-CXXMethodDecl 0x55bd594d2fb8 <line:194:5, col:81> col:10 add_data_handlers 'void (const char *, int, unsigned long long *)'
| |-ParmVarDecl 0x55bd594d2da8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55bd594d2e28 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55bd594d2ed0 <col:57, col:77> col:77 data 'unsigned long long *'
|-CXXMethodDecl 0x55bd594d3220 <line:196:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x55bd594d3088 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x55bd594d3108 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x55bd594d3180 <col:67, col:77> col:77 data 'uint16_t *'
|-CXXMethodDecl 0x55bd594d34c8 <line:197:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint32_t *)'
| |-ParmVarDecl 0x55bd594d32f0 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x55bd594d3370 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x55bd594d33e8 <col:67, col:77> col:77 data 'uint32_t *'
|-CXXMethodDecl 0x55bd594d3778 <line:199:5, col:69> col:10 add_data_handlers 'void (const char *, int, double *)'
| |-ParmVarDecl 0x55bd594d3598 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55bd594d3618 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55bd594d3698 <col:57, col:65> col:65 data 'double *'
|-CXXMethodDecl 0x55bd594d3a28 <line:201:5, col:69> col:10 add_data_handlers 'void (const char *, int, String *)'
| |-ParmVarDecl 0x55bd594d3848 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55bd594d38c8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55bd594d3940 <col:57, col:65> col:65 data 'String *'
|-CXXMethodDecl 0x55bd594d3cd8 <line:202:5, col:72> col:10 add_data_handlers 'void (const char *, int, IPAddress *)'
| |-ParmVarDecl 0x55bd594d3af8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55bd594d3b78 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55bd594d3bf0 <col:57, col:68> col:68 data 'IPAddress *'
|-CXXMethodDecl 0x55bd594d3fa8 <line:203:5, col:75> col:10 add_data_handlers 'void (const char *, int, EtherAddress *)'
| |-ParmVarDecl 0x55bd594d3da8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55bd594d3e28 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55bd594d3ec8 <col:57, col:71> col:71 data 'EtherAddress *'
|-CXXMethodDecl 0x55bd594d42d8 <line:204:5, col:98> col:10 add_data_handlers 'void (const char *, int, Timestamp *, bool)'
| |-ParmVarDecl 0x55bd594d4078 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55bd594d40f8 <col:46, col:50> col:50 flags 'int'
| |-ParmVarDecl 0x55bd594d4170 <col:57, col:68> col:68 data 'Timestamp *'
| `-ParmVarDecl 0x55bd594d41e8 <col:74, col:93> col:79 is_interval 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55bd594d9930 <col:93> 'bool' false
|-CXXMethodDecl 0x55bd594d44c0 <line:206:5, col:58> col:19 read_positional_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55bd594d43a8 <col:43, col:50> col:51 'Element *'
| `-ParmVarDecl 0x55bd594d4428 <col:53, col:57> col:58 'void *'
|-CXXMethodDecl 0x55bd594d4698 <line:207:5, col:55> col:19 read_keyword_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55bd594d4580 <col:40, col:47> col:48 'Element *'
| `-ParmVarDecl 0x55bd594d4600 <col:50, col:54> col:55 'void *'
|-CXXMethodDecl 0x55bd594d4978 <line:208:5, col:92> col:16 reconfigure_positional_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x55bd594d4758 <col:47, col:59> col:60 'const String &'
| |-ParmVarDecl 0x55bd594d47d0 <col:62, col:69> col:70 'Element *'
| |-ParmVarDecl 0x55bd594d4850 <col:72, col:76> col:77 'void *'
| `-ParmVarDecl 0x55bd594d48c8 <col:79, col:91> col:92 'ErrorHandler *'
|-CXXMethodDecl 0x55bd594d4c68 <line:209:5, col:89> col:16 reconfigure_keyword_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x55bd594d4a48 <col:44, col:56> col:57 'const String &'
| |-ParmVarDecl 0x55bd594d4ac0 <col:59, col:66> col:67 'Element *'
| |-ParmVarDecl 0x55bd594d4b40 <col:69, col:73> col:74 'void *'
| `-ParmVarDecl 0x55bd594d4bb8 <col:76, col:88> col:89 'ErrorHandler *'
|-CXXMethodDecl 0x55bd594d4ea0 <line:211:5, col:50> col:17 llrpc 'int (unsigned int, void *)' virtual
| |-ParmVarDecl 0x55bd594d4d40 <col:23, col:32> col:32 command 'unsigned int'
| `-ParmVarDecl 0x55bd594d4dc0 <col:41, col:47> col:47 arg 'void *'
|-CXXMethodDecl 0x55bd594d5088 <line:212:5, col:48> col:9 local_llrpc 'int (unsigned int, void *)'
| |-ParmVarDecl 0x55bd594d4f68 <col:21, col:30> col:30 command 'unsigned int'
| `-ParmVarDecl 0x55bd594d4fe8 <col:39, col:45> col:45 arg 'void *'
|-CXXRecordDecl 0x55bd594d5138 prev 0x55bd594cc8d8 <line:214:5, line:252:5> line:214:11 referenced class Port definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55bd594d5230 <col:5, col:11> col:11 implicit referenced class Port
| |-AccessSpecDecl 0x55bd594d52c0 <col:18, col:24> col:18 public
| |-CXXMethodDecl 0x55bd594d5338 <line:216:9, col:30> col:21 used active 'bool () const' inline
| |-CXXMethodDecl 0x55bd594d53f8 <line:217:9, col:35> col:25 element 'Element *() const' inline
| |-CXXMethodDecl 0x55bd594d54c0 <line:218:9, col:27> col:20 port 'int () const' inline
| |-CXXMethodDecl 0x55bd594d5638 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| | |-ParmVarDecl 0x55bd594d5570 <col:54, col:62> col:62 p 'Packet *'
| | |-NoInlineAttr 0x55bd594d56e0 <col:24>
| | `-OptimizeNoneAttr 0x55bd594d5738 <col:34>
| |-CXXMethodDecl 0x55bd594d5780 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
| |-CXXMethodDecl 0x55bd594d5a38 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| | |-ParmVarDecl 0x55bd594d5830 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x55bd594d58a8 <col:43, col:52> col:52 e 'Element *'
| | `-ParmVarDecl 0x55bd594d5928 <col:55, col:59> col:59 port 'int'
| |-AccessSpecDecl 0x55bd594d5af0 <line:229:7, col:14> col:7 private
| |-FieldDecl 0x55bd594d5b28 <line:231:9, col:18> col:18 referenced _e 'Element *'
| |-FieldDecl 0x55bd594d5b90 <line:232:9, col:13> col:13 referenced _port 'int'
| |-CXXConstructorDecl 0x55bd594d5c18 <line:247:9, col:21> col:16 Port 'void ()' inline
| |-CXXMethodDecl 0x55bd594d5f38 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| | |-ParmVarDecl 0x55bd594d5cd0 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x55bd594d5d48 <col:43, col:52> col:52 owner 'Element *'
| | |-ParmVarDecl 0x55bd594d5dc0 <col:59, col:68> col:68 e 'Element *'
| | `-ParmVarDecl 0x55bd594d5e40 <col:71, col:75> col:75 port 'int'
| |-FriendDecl 0x55bd594d6050 <line:250:9, col:22> col:16 'class Element':'Element'
| |-CXXConstructorDecl 0x55bd594dd9c8 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x55bd594dd9c8
| | `-ParmVarDecl 0x55bd594ddad8 <col:11> col:11 'const Element::Port &'
| |-CXXConstructorDecl 0x55bd594ddb78 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x55bd594ddb78
| | `-ParmVarDecl 0x55bd594ddc88 <col:11> col:11 'Element::Port &&'
| `-CXXDestructorDecl 0x55bd596c41e8 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55bd594d60c8 <line:256:5, col:49> col:12 id 'String () const'
| `-DeprecatedAttr 0x55bd594d6168 <col:38> "" ""
|-CXXMethodDecl 0x55bd594d61f8 <line:257:5, col:55> col:12 landmark 'String () const'
| `-DeprecatedAttr 0x55bd594d6298 <col:44> "" ""
|-AccessSpecDecl 0x55bd594d6308 <line:260:3, col:10> col:3 private
|-EnumDecl 0x55bd594d6330 <line:262:5, col:29> col:5
| `-EnumConstantDecl 0x55bd594d6430 <col:12, col:27> col:12 referenced INLINE_PORTS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:262:5)'
|   `-ImplicitCastExpr 0x55bd594d6480 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55bd594d6410 <col:27> 'int' Int: 4
|       `-IntegerLiteral 0x55bd594d63f0 <col:27> 'int' 4
|-FieldDecl 0x55bd594d6538 <line:264:5, col:19> col:11 referenced _ports 'Element::Port *[2]'
|-FieldDecl 0x55bd594d66e8 <line:265:5, col:36> col:10 _inline_ports 'Element::Port [4]'
|-FieldDecl 0x55bd594d67a0 <line:267:5, col:18> col:9 referenced _nports 'int [2]'
|-FieldDecl 0x55bd594d7830 <line:269:5, col:13> col:13 referenced _router 'Router *'
|-FieldDecl 0x55bd594d7898 <line:270:5, col:9> col:9 referenced _eindex 'int'
|-CXXConstructorDecl 0x55bd594d79e8 <line:292:5, col:28> col:5 Element 'void (const Element &)'
| `-ParmVarDecl 0x55bd594d7928 <col:13, col:27> col:28 'const Element &'
|-CXXMethodDecl 0x55bd594d7b98 <line:293:5, col:39> col:14 operator= 'Element &(const Element &)'
| `-ParmVarDecl 0x55bd594d7aa8 <col:24, col:38> col:39 'const Element &'
|-CXXMethodDecl 0x55bd594d7d78 <line:296:5, col:28> col:9 set_nports 'int (int, int)'
| |-ParmVarDecl 0x55bd594d7c58 <col:20> col:23 'int'
| `-ParmVarDecl 0x55bd594d7cd8 <col:25> col:28 'int'
|-CXXMethodDecl 0x55bd594d8020 <line:297:5, col:47> col:9 notify_nports 'int (int, int, ErrorHandler *)'
| |-ParmVarDecl 0x55bd594d7e40 <col:23> col:26 'int'
| |-ParmVarDecl 0x55bd594d7ec0 <col:28> col:31 'int'
| `-ParmVarDecl 0x55bd594d7f38 <col:33, col:46> col:47 'ErrorHandler *'
|-EnumDecl 0x55bd594d80d8 <line:298:5, col:47> col:10 Processing
| |-EnumConstantDecl 0x55bd594d81a0 <col:23> col:23 VAGNOSTIC 'Element::Processing'
| |-EnumConstantDecl 0x55bd594d81f0 <col:34> col:34 VPUSH 'Element::Processing'
| `-EnumConstantDecl 0x55bd594d8240 <col:41> col:41 VPULL 'Element::Processing'
|-CXXMethodDecl 0x55bd594d8420 <line:299:5, col:71> col:16 next_processing_code 'int (const char *&, ErrorHandler *)' static
| |-ParmVarDecl 0x55bd594d82d0 <col:37, col:50> col:50 p 'const char *&'
| `-ParmVarDecl 0x55bd594d8348 <col:53, col:67> col:67 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55bd594d86c8 <line:300:5, col:80> col:10 processing_vector 'void (int *, int *, ErrorHandler *) const'
| |-ParmVarDecl 0x55bd594d84e8 <col:28, col:33> col:33 input_codes 'int *'
| |-ParmVarDecl 0x55bd594d8568 <col:46, col:51> col:51 output_codes 'int *'
| `-ParmVarDecl 0x55bd594d85e0 <col:65, col:77> col:78 'ErrorHandler *'
|-CXXMethodDecl 0x55bd594d88e8 <line:302:5, col:74> col:10 initialize_ports 'void (const int *, const int *)'
| |-ParmVarDecl 0x55bd594d8798 <col:27, col:38> col:38 input_codes 'const int *'
| `-ParmVarDecl 0x55bd594d8818 <col:51, col:62> col:62 output_codes 'const int *'
|-CXXMethodDecl 0x55bd594d8c20 <line:303:5, col:60> col:9 connect_port 'int (bool, int, Element *, int)'
| |-ParmVarDecl 0x55bd594d89a8 <col:22, col:27> col:27 isoutput 'bool'
| |-ParmVarDecl 0x55bd594d8a28 <col:37, col:41> col:41 port 'int'
| |-ParmVarDecl 0x55bd594d8aa0 <col:47, col:54> col:55 'Element *'
| `-ParmVarDecl 0x55bd594d8b20 <col:57> col:60 'int'
|-CXXMethodDecl 0x55bd594d8e08 <line:305:5, col:68> col:19 read_handlers_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55bd594d8cf0 <col:41, col:50> col:50 e 'Element *'
| `-ParmVarDecl 0x55bd594d8d70 <col:53, col:59> col:59 user_data 'void *'
|-CXXMethodDecl 0x55bd594d8f58 <line:306:5, col:51> col:10 add_default_handlers 'void (bool)'
| `-ParmVarDecl 0x55bd594d8ec8 <col:31, col:36> col:36 writable_config 'bool'
|-CXXMethodDecl 0x55bd594d92d8 <line:307:5, col:100> col:17 add_data_handlers 'void (const char *, int, HandlerCallback, void *)' inline
| |-ParmVarDecl 0x55bd594d9018 <col:35, col:47> col:47 name 'const char *'
| |-ParmVarDecl 0x55bd594d9098 <col:53, col:57> col:57 flags 'int'
| |-ParmVarDecl 0x55bd594d9110 <col:64, col:80> col:80 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| `-ParmVarDecl 0x55bd594d9190 <col:90, col:96> col:96 data 'void *'
`-FriendDecl 0x55bd594d93f0 <line:309:5, col:18> col:12 'class Router':'Router'

Layout: <CGRecordLayout
  LLVMType:%class.Element = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Element.base = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class ScheduleInfo
         0 |   class Element (primary base)
         0 |     (Element vtable pointer)
         8 |     class Element::Port *[2] _ports
        24 |     class Element::Port [4] _inline_ports
        88 |     int [2] _nports
        96 |     class Router * _router
       104 |     int _eindex
           | [sizeof=112, dsize=108, align=8,
           |  nvsize=108, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55bd594e0b38 <../dummy_inc/click/standard/scheduleinfo.hh:70:1, line:88:1> line:70:7 class ScheduleInfo definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-public 'Element'
|-CXXRecordDecl 0x55bd594e0c98 <col:1, col:7> col:7 implicit referenced class ScheduleInfo
|-AccessSpecDecl 0x55bd594e0d28 <col:39, col:45> col:39 public
|-EnumDecl 0x55bd594e0d50 <line:72:5, col:27> col:5
| `-EnumConstantDecl 0x55bd594e0e50 <col:12, col:24> col:12 referenced FRAC_BITS 'ScheduleInfo::(anonymous enum at ../dummy_inc/click/standard/scheduleinfo.hh:72:5)'
|   `-ImplicitCastExpr 0x55bd594e0ea0 <col:24> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55bd594e0e30 <col:24> 'int' Int: 10
|       `-IntegerLiteral 0x55bd594e0e10 <col:24> 'int' 10
|-CXXConstructorDecl 0x55bd594e0f20 <line:74:5, col:18> col:5 ScheduleInfo 'void ()'
|-CXXMethodDecl 0x55bd594e1020 <line:76:5, col:61> col:17 class_name 'const char *() const'
| |-Overrides: [ 0x55bd594c9888 Element::class_name 'const char *() const' ]
| `-CompoundStmt 0x55bd594e2b30 <col:36, col:61>
|   `-ReturnStmt 0x55bd594e2b20 <col:38, col:45>
|     `-ImplicitCastExpr 0x55bd594e2b08 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x55bd594e2ae0 <col:45> 'const char [13]' lvalue "ScheduleInfo"
|-CXXMethodDecl 0x55bd594e10e8 <line:78:5, col:64> col:9 configure_phase 'int () const'
| |-Overrides: [ 0x55bd594cace0 Element::configure_phase 'int () const' ]
| `-CompoundStmt 0x55bd594e2b90 <col:33, col:64>
|   `-ReturnStmt 0x55bd594e2b80 <col:35, col:42>
|     `-ImplicitCastExpr 0x55bd594e2b68 <col:42> 'int' <IntegralCast>
|       `-DeclRefExpr 0x55bd594e2b48 <col:42> 'Element::ConfigurePhase' EnumConstant 0x55bd594caa40 'CONFIGURE_PHASE_INFO' 'Element::ConfigurePhase'
|-CXXMethodDecl 0x55bd594e13c0 <line:79:5, col:49> col:9 configure 'int (Vector<String> &, ErrorHandler *)'
| |-Overrides: [ 0x55bd594cb120 Element::configure 'int (Vector<String> &, ErrorHandler *)' ]
| |-ParmVarDecl 0x55bd594e1270 <col:19, col:33> col:34 'Vector<String> &'
| `-ParmVarDecl 0x55bd594e12e8 <col:36, col:48> col:49 'ErrorHandler *'
|-CXXMethodDecl 0x55bd594e15d8 <line:81:5, col:37> col:10 query 'bool (const String &, int &) const'
| |-ParmVarDecl 0x55bd594e1480 <col:16, col:28> col:29 'const String &'
| `-ParmVarDecl 0x55bd594e1500 <col:31, col:34> col:35 'int &'
|-CXXMethodDecl 0x55bd594e1878 <line:82:5, col:55> col:10 query_prefixes 'bool (const String &, int &, String &) const'
| |-ParmVarDecl 0x55bd594e1698 <col:25, col:37> col:38 'const String &'
| |-ParmVarDecl 0x55bd594e1718 <col:40, col:43> col:44 'int &'
| `-ParmVarDecl 0x55bd594e1790 <col:46, col:52> col:53 'String &'
|-CXXMethodDecl 0x55bd594e1a90 <line:83:5, col:45> col:16 query 'int (Element *, ErrorHandler *)' static
| |-ParmVarDecl 0x55bd594e1940 <col:22, col:29> col:30 'Element *'
| `-ParmVarDecl 0x55bd594e19b8 <col:32, col:44> col:45 'ErrorHandler *'
|-CXXMethodDecl 0x55bd594e1da8 <line:84:5, col:75> col:17 used initialize_task 'void (Element *, Task *, bool, ErrorHandler *)' static
| |-ParmVarDecl 0x55bd594e1b50 <col:33, col:40> col:41 'Element *'
| |-ParmVarDecl 0x55bd594e1bc8 <col:43, col:47> col:48 'Task *'
| |-ParmVarDecl 0x55bd594e1c40 <col:50, col:55> col:55 sched 'bool'
| `-ParmVarDecl 0x55bd594e1cb8 <col:62, col:74> col:75 'ErrorHandler *'
|-CXXMethodDecl 0x55bd594e2048 <line:85:5, col:63> col:17 initialize_task 'void (Element *, Task *, ErrorHandler *)' static
| |-ParmVarDecl 0x55bd594e1e78 <col:33, col:40> col:41 'Element *'
| |-ParmVarDecl 0x55bd594e1ef0 <col:43, col:47> col:48 'Task *'
| `-ParmVarDecl 0x55bd594e1f68 <col:50, col:62> col:63 'ErrorHandler *'
|-CXXMethodDecl 0x55bd594e22a0 <line:86:5, col:62> col:17 join_scheduler 'void (Element *, Task *, ErrorHandler *)' static
| |-ParmVarDecl 0x55bd594e2110 <col:32, col:39> col:40 'Element *'
| |-ParmVarDecl 0x55bd594e2188 <col:42, col:46> col:47 'Task *'
| `-ParmVarDecl 0x55bd594e2200 <col:49, col:61> col:62 'ErrorHandler *'
|-CXXConstructorDecl 0x55bd594e2388 <line:70:7> col:7 implicit ScheduleInfo 'void (const ScheduleInfo &)' inline default_delete noexcept-unevaluated 0x55bd594e2388
| `-ParmVarDecl 0x55bd594e2498 <col:7> col:7 'const ScheduleInfo &'
|-CXXConstructorDecl 0x55bd594e2538 <col:7> col:7 implicit ScheduleInfo 'void (ScheduleInfo &&)' inline default_delete noexcept-unevaluated 0x55bd594e2538
| `-ParmVarDecl 0x55bd594e2648 <col:7> col:7 'ScheduleInfo &&'
|-CXXMethodDecl 0x55bd594e26e8 <col:7> col:7 implicit operator= 'ScheduleInfo &(const ScheduleInfo &)' inline default_delete noexcept-unevaluated 0x55bd594e26e8
| `-ParmVarDecl 0x55bd594e27f8 <col:7> col:7 'const ScheduleInfo &'
|-CXXMethodDecl 0x55bd594e2868 <col:7> col:7 implicit operator= 'ScheduleInfo &(ScheduleInfo &&)' inline default_delete noexcept-unevaluated 0x55bd594e2868
| `-ParmVarDecl 0x55bd594e2978 <col:7> col:7 'ScheduleInfo &&'
`-CXXDestructorDecl 0x55bd594e2a00 <col:7> col:7 implicit ~ScheduleInfo 'void ()' inline default noexcept-unevaluated 0x55bd594e2a00
  `-Overrides: [ 0x55bd594c8428 Element::~Element 'void () noexcept' ]

Layout: <CGRecordLayout
  LLVMType:%class.ScheduleInfo = type { %class.Element.base, [4 x i8] }
  NonVirtualBaseLLVMType:%class.ScheduleInfo.base = type { %class.Element.base }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class NameDB
         0 |   (NameDB vtable pointer)
         8 |   uint32_t _type
        16 |   class String _context
        16 |     struct String::rep_t _r
        16 |       const char * data
        24 |       int length
        32 |       struct String::memo_t * memo
        40 |   size_t _value_size
        48 |   class NameDB * _context_parent
        56 |   class NameDB * _context_sibling
        64 |   class NameDB * _context_child
        72 |   class NameInfo * _installed
           | [sizeof=80, dsize=80, align=8,
           |  nvsize=80, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55bd595c3968 prev 0x55bd595b4b98 <../dummy_inc/click/nameinfo.hh:245:1, line:348:1> line:245:7 referenced class NameDB definition
|-DefinitionData polymorphic abstract has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-CXXRecordDecl 0x55bd595c3a60 <col:1, col:7> col:7 implicit referenced class NameDB
|-AccessSpecDecl 0x55bd595c3af0 <col:16, col:22> col:16 public
|-CXXConstructorDecl 0x55bd595c3d58 <line:253:5, col:74> col:12 used NameDB 'void (uint32_t, const String &, size_t)' inline
| |-ParmVarDecl 0x55bd595c3b28 <col:19, col:28> col:28 type 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55bd595c3ba0 <col:34, col:48> col:48 context 'const String &'
| `-ParmVarDecl 0x55bd595c3c18 <col:57, col:64> col:64 value_size 'size_t':'unsigned long'
|-CXXDestructorDecl 0x55bd595c3e60 <line:259:5, line:261:5> line:259:13 used ~NameDB 'void () noexcept' virtual
| `-CompoundStmt 0x55bd595c54e8 <col:23, line:261:5>
|   `-CallExpr 0x55bd595c54c0 <line:260:2, col:28> 'void'
|     |-ImplicitCastExpr 0x55bd595c54a8 <col:2, col:12> 'void (*)(NameDB *)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x55bd595c5438 <col:2, col:12> 'void (NameDB *)' lvalue CXXMethod 0x55bd595b6968 'uninstalldb' 'void (NameDB *)'
|     `-CXXThisExpr 0x55bd595c5468 <col:24> 'NameDB *' this
|-CXXMethodDecl 0x55bd595c3f88 <line:264:5, line:266:5> line:264:14 type 'uint32_t () const'
| `-CompoundStmt 0x55bd595c5568 <col:27, line:266:5>
|   `-ReturnStmt 0x55bd595c5558 <line:265:2, col:9>
|     `-ImplicitCastExpr 0x55bd595c5540 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x55bd595c5510 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_type 0x55bd595c4d70
|         `-CXXThisExpr 0x55bd595c5500 <col:9> 'const NameDB *' implicit this
|-CXXMethodDecl 0x55bd595c4048 <line:269:5, line:271:5> line:269:19 context 'const String &() const'
| `-CompoundStmt 0x55bd595c55d0 <col:35, line:271:5>
|   `-ReturnStmt 0x55bd595c55c0 <line:270:2, col:9>
|     `-MemberExpr 0x55bd595c5590 <col:9> 'const String' lvalue ->_context 0x55bd595c4dd0
|       `-CXXThisExpr 0x55bd595c5580 <col:9> 'const NameDB *' implicit this
|-CXXMethodDecl 0x55bd595c4138 <line:279:5, line:281:5> line:279:13 context_parent 'NameDB *() const'
| `-CompoundStmt 0x55bd595c5650 <col:36, line:281:5>
|   `-ReturnStmt 0x55bd595c5640 <line:280:2, col:9>
|     `-ImplicitCastExpr 0x55bd595c5628 <col:9> 'NameDB *' <LValueToRValue>
|       `-MemberExpr 0x55bd595c55f8 <col:9> 'NameDB *const' lvalue ->_context_parent 0x55bd595c4e90
|         `-CXXThisExpr 0x55bd595c55e8 <col:9> 'const NameDB *' implicit this
|-CXXMethodDecl 0x55bd595c4228 <line:284:5, line:286:5> line:284:12 value_size 'size_t () const'
| `-CompoundStmt 0x55bd595c56d0 <col:31, line:286:5>
|   `-ReturnStmt 0x55bd595c56c0 <line:285:2, col:9>
|     `-ImplicitCastExpr 0x55bd595c56a8 <col:9> 'size_t':'unsigned long' <LValueToRValue>
|       `-MemberExpr 0x55bd595c5678 <col:9> 'const size_t':'const unsigned long' lvalue ->_value_size 0x55bd595c4e30
|         `-CXXThisExpr 0x55bd595c5668 <col:9> 'const NameDB *' implicit this
|-CXXMethodDecl 0x55bd595c44f8 <line:295:5, col:78> col:18 query 'bool (const String &, void *, size_t)' virtual pure
| |-ParmVarDecl 0x55bd595c42d8 <col:24, col:38> col:38 name 'const String &'
| |-ParmVarDecl 0x55bd595c4358 <col:44, col:50> col:50 value 'void *'
| `-ParmVarDecl 0x55bd595c43d0 <col:57, col:64> col:64 value_size 'size_t':'unsigned long'
|-CXXMethodDecl 0x55bd595c4758 <line:305:5, col:65> col:20 revquery 'String (const void *, size_t)' virtual
| |-ParmVarDecl 0x55bd595c45c8 <col:29, col:41> col:41 value 'const void *'
| `-ParmVarDecl 0x55bd595c4640 <col:48, col:55> col:55 value_size 'size_t':'unsigned long'
|-CXXMethodDecl 0x55bd595c4a38 <line:315:5, col:81> col:18 used define 'bool (const String &, const void *, size_t)' virtual
| |-ParmVarDecl 0x55bd595c4818 <col:25, col:39> col:39 name 'const String &'
| |-ParmVarDecl 0x55bd595c4898 <col:45, col:57> col:57 value 'const void *'
| `-ParmVarDecl 0x55bd595c4910 <col:64, col:71> col:71 value_size 'size_t':'unsigned long'
|-CXXMethodDecl 0x55bd595c4c88 <line:324:5, col:61> col:17 define_int 'bool (const String &, int32_t)' inline
| |-ParmVarDecl 0x55bd595c4b00 <col:28, col:42> col:42 name 'const String &'
| `-ParmVarDecl 0x55bd595c4b78 <col:48, col:56> col:56 value 'int32_t':'int'
|-AccessSpecDecl 0x55bd595c4d38 <line:332:3, col:10> col:3 private
|-FieldDecl 0x55bd595c4d70 <line:334:5, col:14> col:14 referenced _type 'uint32_t':'unsigned int'
|-FieldDecl 0x55bd595c4dd0 <line:335:5, col:12> col:12 referenced _context 'String'
|-FieldDecl 0x55bd595c4e30 <line:336:5, col:12> col:12 referenced _value_size 'size_t':'unsigned long'
|-FieldDecl 0x55bd595c4e90 <line:337:5, col:13> col:13 referenced _context_parent 'NameDB *'
|-FieldDecl 0x55bd595c4ef0 <line:338:5, col:13> col:13 _context_sibling 'NameDB *'
|-FieldDecl 0x55bd595c4f50 <line:339:5, col:13> col:13 _context_child 'NameDB *'
|-FieldDecl 0x55bd595c4fb0 <line:340:5, col:15> col:15 _installed 'NameInfo *'
|-FriendDecl 0x55bd595c5050 <line:346:5, col:18> col:12 'class NameInfo':'NameInfo'
|-CXXConstructorDecl 0x55bd595c50b8 <line:245:7> col:7 implicit NameDB 'void (const NameDB &)' inline default noexcept-unevaluated 0x55bd595c50b8
| `-ParmVarDecl 0x55bd595c51c8 <col:7> col:7 'const NameDB &'
`-CXXMethodDecl 0x55bd595c5268 <col:7> col:7 implicit operator= 'NameDB &(const NameDB &)' inline default noexcept-unevaluated 0x55bd595c5268
  `-ParmVarDecl 0x55bd595c5378 <col:7> col:7 'const NameDB &'

Layout: <CGRecordLayout
  LLVMType:%class.NameDB = type { i32 (...)**, i32, %class.String, i64, %class.NameDB*, %class.NameDB*, %class.NameDB*, %class.NameInfo* }
  NonVirtualBaseLLVMType:%class.NameDB = type { i32 (...)**, i32, %class.String, i64, %class.NameDB*, %class.NameDB*, %class.NameDB*, %class.NameInfo* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class NumArg (empty)
           | [sizeof=1, dsize=1, align=1,
           |  nvsize=1, nvalign=1]

*** Dumping AST Record Layout
         0 | class FixedPointArg
         0 |   class NumArg (base) (empty)
         0 |   int fraction_bits
         4 |   int exponent_delta
         8 |   int status
           | [sizeof=12, dsize=12, align=4,
           |  nvsize=12, nvalign=4]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55bd595865a0 <../dummy_inc/click/args.hh:1013:1, line:1027:1> line:1013:7 referenced class NumArg definition
|-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |-DefaultConstructor exists trivial constexpr defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55bd595866b8 <col:1, col:7> col:7 implicit class NumArg
|-AccessSpecDecl 0x55bd59586748 <col:16, col:22> col:16 public
|-EnumDecl 0x55bd59586770 <line:1014:5, line:1026:5> line:1014:5
| |-EnumConstantDecl 0x55bd59586870 <line:1015:9, col:21> col:9 status_ok 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| | `-ImplicitCastExpr 0x55bd59586ac0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55bd59586850 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x55bd59586830 <col:21> 'int' 0
| |-EnumConstantDecl 0x55bd59586900 <line:1016:9, col:24> col:9 referenced status_inval 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| | `-ImplicitCastExpr 0x55bd59586ad8 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55bd595868e0 <col:24> 'int' Int: 22
| |     `-IntegerLiteral 0x55bd595868c0 <col:24> 'int' 22
| |-EnumConstantDecl 0x55bd59586990 <line:1017:9, col:24> col:9 referenced status_range 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| | `-ImplicitCastExpr 0x55bd59586af0 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55bd59586970 <col:24> 'int' Int: 34
| |     `-IntegerLiteral 0x55bd59586950 <col:24> 'int' 34
| |-EnumConstantDecl 0x55bd59586a20 <line:1019:9, col:25> col:9 status_notsup 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| | `-ImplicitCastExpr 0x55bd59586b08 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55bd59586a00 <col:25> 'int' Int: 95
| |     `-IntegerLiteral 0x55bd595869e0 <col:25> 'int' 95
| `-EnumConstantDecl 0x55bd59586a70 <line:1025:9> col:9 status_unitless 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
|-CXXConstructorDecl 0x55bd595884b0 <line:1013:7> col:7 implicit used constexpr NumArg 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55bd595888e8 <col:7>
|-CXXConstructorDecl 0x55bd595885b8 <col:7> col:7 implicit constexpr NumArg 'void (const NumArg &)' inline default trivial noexcept-unevaluated 0x55bd595885b8
| `-ParmVarDecl 0x55bd595886c8 <col:7> col:7 'const NumArg &'
|-CXXConstructorDecl 0x55bd59588768 <col:7> col:7 implicit constexpr NumArg 'void (NumArg &&)' inline default trivial noexcept-unevaluated 0x55bd59588768
| `-ParmVarDecl 0x55bd59588878 <col:7> col:7 'NumArg &&'
`-CXXDestructorDecl 0x55bd5958a9e8 <col:7> col:7 implicit ~NumArg 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.NumArg = type { i8 }
  NonVirtualBaseLLVMType:%class.NumArg = type { i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55bd59590100 <../dummy_inc/click/args.hh:1194:1, line:1207:1> line:1194:7 referenced class FixedPointArg definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-public 'NumArg'
|-CXXRecordDecl 0x55bd59590258 <col:1, col:7> col:7 implicit referenced class FixedPointArg
|-AccessSpecDecl 0x55bd595902e8 <col:39, col:45> col:39 public
|-CXXConstructorDecl 0x55bd59590480 <line:1195:5, line:1197:5> line:1195:14 used FixedPointArg 'void (int, int)'
| |-ParmVarDecl 0x55bd59590328 <col:28, col:32> col:32 used b 'int'
| |-ParmVarDecl 0x55bd595903a8 <col:35, col:50> col:39 used exponent 'int' cinit
| | `-IntegerLiteral 0x55bd595913e8 <col:50> 'int' 0
| |-CXXCtorInitializer 'NumArg'
| | `-CXXConstructExpr 0x55bd59591588 <col:14> 'NumArg' 'void () noexcept'
| |-CXXCtorInitializer Field 0x55bd59590fb0 'fraction_bits' 'int'
| | `-ImplicitCastExpr 0x55bd595914c8 <line:1196:25> 'int' <LValueToRValue>
| |   `-DeclRefExpr 0x55bd59591488 <col:25> 'int' lvalue ParmVar 0x55bd59590328 'b' 'int'
| |-CXXCtorInitializer Field 0x55bd59591018 'exponent_delta' 'int'
| | `-ImplicitCastExpr 0x55bd59591548 <col:44> 'int' <LValueToRValue>
| |   `-DeclRefExpr 0x55bd59591508 <col:44> 'int' lvalue ParmVar 0x55bd595903a8 'exponent' 'int'
| `-CompoundStmt 0x55bd59591600 <col:54, line:1197:5>
|-CXXMethodDecl 0x55bd59590758 <line:1198:5, col:106> col:17 parse_saturating 'bool (const String &, uint32_t &, const ArgContext &)' inline
| |-ParmVarDecl 0x55bd59590548 <col:34, col:48> col:48 str 'const String &'
| |-ParmVarDecl 0x55bd595905c0 <col:53, col:63> col:63 result 'uint32_t &'
| `-ParmVarDecl 0x55bd59590638 <col:71, col:96> col:89 args 'const ArgContext &' cinit
|   `-DeclRefExpr 0x55bd59591408 <col:96> 'const ArgContext' lvalue Var 0x55bd5957b1f8 'blank_args' 'const ArgContext'
|-CXXMethodDecl 0x55bd595909b0 <line:1199:5, col:88> col:10 used parse 'bool (const String &, uint32_t &, const ArgContext &)'
| |-ParmVarDecl 0x55bd59590820 <col:16, col:30> col:30 str 'const String &'
| |-ParmVarDecl 0x55bd59590898 <col:35, col:45> col:45 result 'uint32_t &'
| `-ParmVarDecl 0x55bd59590910 <col:53, col:78> col:71 args 'const ArgContext &' cinit
|   `-DeclRefExpr 0x55bd59591428 <col:78> 'const ArgContext' lvalue Var 0x55bd5957b1f8 'blank_args' 'const ArgContext'
|-CXXMethodDecl 0x55bd59590c88 <line:1200:5, col:98> col:10 parse_saturating 'bool (const String &, int32_t &, const ArgContext &)'
| |-ParmVarDecl 0x55bd59590a78 <col:27, col:41> col:41 str 'const String &'
| |-ParmVarDecl 0x55bd59590af0 <col:46, col:55> col:55 result 'int32_t &'
| `-ParmVarDecl 0x55bd59590b68 <col:63, col:88> col:81 args 'const ArgContext &' cinit
|   `-DeclRefExpr 0x55bd59591448 <col:88> 'const ArgContext' lvalue Var 0x55bd5957b1f8 'blank_args' 'const ArgContext'
|-CXXMethodDecl 0x55bd59590ee0 <line:1201:5, col:87> col:10 parse 'bool (const String &, int32_t &, const ArgContext &)'
| |-ParmVarDecl 0x55bd59590d50 <col:16, col:30> col:30 str 'const String &'
| |-ParmVarDecl 0x55bd59590dc8 <col:35, col:44> col:44 result 'int32_t &'
| `-ParmVarDecl 0x55bd59590e40 <col:52, col:77> col:70 args 'const ArgContext &' cinit
|   `-DeclRefExpr 0x55bd59591468 <col:77> 'const ArgContext' lvalue Var 0x55bd5957b1f8 'blank_args' 'const ArgContext'
|-FieldDecl 0x55bd59590fb0 <line:1202:5, col:9> col:9 fraction_bits 'int'
|-FieldDecl 0x55bd59591018 <line:1203:5, col:9> col:9 exponent_delta 'int'
|-FieldDecl 0x55bd59591080 <line:1204:5, col:9> col:9 status 'int'
|-AccessSpecDecl 0x55bd595910d0 <line:1205:3, col:10> col:3 private
|-CXXMethodDecl 0x55bd59591318 <line:1206:5, col:72> col:10 used underparse 'bool (const String &, bool, uint32_t &)'
| |-ParmVarDecl 0x55bd59591108 <col:21, col:35> col:35 str 'const String &'
| |-ParmVarDecl 0x55bd59591180 <col:40, col:45> col:45 is_signed 'bool'
| `-ParmVarDecl 0x55bd595911f8 <col:56, col:66> col:66 result 'uint32_t &'
|-CXXConstructorDecl 0x55bd596c6458 <line:1194:7> col:7 implicit constexpr FixedPointArg 'void (const FixedPointArg &)' inline default trivial noexcept-unevaluated 0x55bd596c6458
| `-ParmVarDecl 0x55bd596c6568 <col:7> col:7 'const FixedPointArg &'
|-CXXConstructorDecl 0x55bd596c6608 <col:7> col:7 implicit constexpr FixedPointArg 'void (FixedPointArg &&)' inline default trivial noexcept-unevaluated 0x55bd596c6608
| `-ParmVarDecl 0x55bd596c6718 <col:7> col:7 'FixedPointArg &&'
`-CXXDestructorDecl 0x55bd596c67f8 <col:7> col:7 implicit referenced ~FixedPointArg 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.FixedPointArg = type { i32, i32, i32 }
  NonVirtualBaseLLVMType:%class.FixedPointArg = type { i32, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class ArgContext
         0 |   const class Element * _context
         8 |   class ErrorHandler * _errh
        16 |   const char * _arg_keyword
        24 |   _Bool _read_status
           | [sizeof=32, dsize=25, align=8,
           |  nvsize=25, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55bd5944a028 prev 0x55bd5948d838 <../dummy_inc/click/args.hh:29:1, line:85:1> line:29:7 referenced class ArgContext definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x55bd5944a120 <col:1, col:7> col:7 implicit referenced class ArgContext
|-AccessSpecDecl 0x55bd5944a1b0 <col:20, col:26> col:20 public
|-CXXConstructorDecl 0x55bd5944a2e8 <line:33:5, line:38:5> line:33:5 ArgContext 'void (ErrorHandler *)'
| |-ParmVarDecl 0x55bd5944a1e8 <col:16, col:37> col:30 used errh 'ErrorHandler *' cinit
| | `-ImplicitCastExpr 0x55bd5944b710 <col:37> 'ErrorHandler *' <NullToPointer>
| |   `-IntegerLiteral 0x55bd5944b6f0 <col:37> 'int' 0
| |-CXXCtorInitializer Field 0x55bd5944b288 '_errh' 'ErrorHandler *'
| | `-ImplicitCastExpr 0x55bd5944b7a0 <line:34:17> 'ErrorHandler *' <LValueToRValue>
| |   `-DeclRefExpr 0x55bd5944b760 <col:17> 'ErrorHandler *' lvalue ParmVar 0x55bd5944a1e8 'errh' 'ErrorHandler *'
| |-CXXCtorInitializer Field 0x55bd5944b2f0 '_arg_keyword' 'const char *'
| | `-ImplicitCastExpr 0x55bd5944b820 <col:37> 'const char *' <NullToPointer>
| |   `-IntegerLiteral 0x55bd5944b7e0 <col:37> 'int' 0
| |-CXXCtorInitializer Field 0x55bd5944b350 '_read_status' 'bool'
| | `-CXXBoolLiteralExpr 0x55bd5944b860 <col:54> 'bool' false
| `-CompoundStmt 0x55bd5944b968 <col:61, line:38:5>
|   `-BinaryOperator 0x55bd5944b948 <line:36:9, col:20> 'const Element *' lvalue '='
|     |-MemberExpr 0x55bd5944b8e0 <col:9> 'const Element *' lvalue ->_context 0x55bd5944b228
|     | `-CXXThisExpr 0x55bd5944b8d0 <col:9> 'ArgContext *' implicit this
|     `-ImplicitCastExpr 0x55bd5944b930 <col:20> 'const Element *' <NullToPointer>
|       `-IntegerLiteral 0x55bd5944b910 <col:20> 'int' 0
|-CXXConstructorDecl 0x55bd5944a4f8 <line:44:5, line:46:5> line:44:5 ArgContext 'void (const Element *, ErrorHandler *)'
| |-ParmVarDecl 0x55bd5944a3a8 <col:16, col:31> col:31 used context 'const Element *'
| |-ParmVarDecl 0x55bd5944a420 <col:40, col:61> col:54 used errh 'ErrorHandler *' cinit
| | `-ImplicitCastExpr 0x55bd5944b748 <col:61> 'ErrorHandler *' <NullToPointer>
| |   `-IntegerLiteral 0x55bd5944b728 <col:61> 'int' 0
| |-CXXCtorInitializer Field 0x55bd5944b228 '_context' 'const Element *'
| | `-ImplicitCastExpr 0x55bd5944b9c0 <line:45:20> 'const Element *' <LValueToRValue>
| |   `-DeclRefExpr 0x55bd5944b980 <col:20> 'const Element *' lvalue ParmVar 0x55bd5944a3a8 'context' 'const Element *'
| |-CXXCtorInitializer Field 0x55bd5944b288 '_errh' 'ErrorHandler *'
| | `-ImplicitCastExpr 0x55bd5944ba40 <col:36> 'ErrorHandler *' <LValueToRValue>
| |   `-DeclRefExpr 0x55bd5944ba00 <col:36> 'ErrorHandler *' lvalue ParmVar 0x55bd5944a420 'errh' 'ErrorHandler *'
| |-CXXCtorInitializer Field 0x55bd5944b2f0 '_arg_keyword' 'const char *'
| | `-ImplicitCastExpr 0x55bd5944bac0 <col:56> 'const char *' <NullToPointer>
| |   `-IntegerLiteral 0x55bd5944ba80 <col:56> 'int' 0
| |-CXXCtorInitializer Field 0x55bd5944b350 '_read_status' 'bool'
| | `-CXXBoolLiteralExpr 0x55bd5944bb00 <col:73> 'bool' false
| `-CompoundStmt 0x55bd5944bb78 <col:80, line:46:5>
|-CXXMethodDecl 0x55bd5944a628 <line:49:5, line:51:5> line:49:20 used context 'const Element *() const'
| `-CompoundStmt 0x55bd5944bbf0 <col:36, line:51:5>
|   `-ReturnStmt 0x55bd5944bbe0 <line:50:9, col:16>
|     `-ImplicitCastExpr 0x55bd5944bbc8 <col:16> 'const Element *' <LValueToRValue>
|       `-MemberExpr 0x55bd5944bb98 <col:16> 'const Element *const' lvalue ->_context 0x55bd5944b228
|         `-CXXThisExpr 0x55bd5944bb88 <col:16> 'const ArgContext *' implicit this
|-CXXMethodDecl 0x55bd5944a718 <line:55:5, line:57:5> line:55:19 errh 'ErrorHandler *() const'
| `-CompoundStmt 0x55bd5944bc70 <col:32, line:57:5>
|   `-ReturnStmt 0x55bd5944bc60 <line:56:9, col:16>
|     `-ImplicitCastExpr 0x55bd5944bc48 <col:16> 'ErrorHandler *' <LValueToRValue>
|       `-MemberExpr 0x55bd5944bc18 <col:16> 'ErrorHandler *const' lvalue ->_errh 0x55bd5944b288
|         `-CXXThisExpr 0x55bd5944bc08 <col:16> 'const ArgContext *' implicit this
|-CXXMethodDecl 0x55bd5944a7d8 <line:62:5, col:27> col:12 error_prefix 'String () const'
|-CXXMethodDecl 0x55bd5944a960 <line:65:5, col:38> col:10 referenced error 'void (const char *, ...) const'
| `-ParmVarDecl 0x55bd5944a890 <col:16, col:28> col:28 fmt 'const char *'
|-CXXMethodDecl 0x55bd5944aab0 <line:68:5, col:40> col:10 warning 'void (const char *, ...) const'
| `-ParmVarDecl 0x55bd5944aa20 <col:18, col:30> col:30 fmt 'const char *'
|-CXXMethodDecl 0x55bd5944ac00 <line:71:5, col:40> col:10 message 'void (const char *, ...) const'
| `-ParmVarDecl 0x55bd5944ab70 <col:18, col:30> col:30 fmt 'const char *'
|-CXXMethodDecl 0x55bd5944ae08 <line:73:5, col:58> col:10 xmessage 'void (const String &, const String &) const'
| |-ParmVarDecl 0x55bd5944acb8 <col:19, col:33> col:33 anno 'const String &'
| `-ParmVarDecl 0x55bd5944ad30 <col:39, col:53> col:53 str 'const String &'
|-CXXMethodDecl 0x55bd5944b138 <line:74:5, col:69> col:10 xmessage 'void (const String &, const char *, __va_list_tag *) const'
| |-ParmVarDecl 0x55bd5944aec8 <col:19, col:33> col:33 anno 'const String &'
| |-ParmVarDecl 0x55bd5944af48 <col:39, col:51> col:51 fmt 'const char *'
| `-ParmVarDecl 0x55bd5944b010 <col:56, col:64> col:64 val '__va_list_tag *':'__va_list_tag *'
|-AccessSpecDecl 0x55bd5944b1f0 <line:76:3, col:12> col:3 protected
|-FieldDecl 0x55bd5944b228 <line:79:5, col:20> col:20 referenced _context 'const Element *'
|-FieldDecl 0x55bd5944b288 <line:81:5, col:19> col:19 referenced _errh 'ErrorHandler *'
|-FieldDecl 0x55bd5944b2f0 <line:82:5, col:17> col:17 _arg_keyword 'const char *'
|-FieldDecl 0x55bd5944b350 <line:83:5, col:18> col:18 referenced _read_status 'bool' mutable
|-CXXConstructorDecl 0x55bd5944b3a0 <line:29:7> col:7 implicit constexpr ArgContext 'void (const ArgContext &)' inline default trivial noexcept-unevaluated 0x55bd5944b3a0
| `-ParmVarDecl 0x55bd5944b4b8 <col:7> col:7 'const ArgContext &'
`-CXXMethodDecl 0x55bd5944b558 <col:7> col:7 implicit operator= 'ArgContext &(const ArgContext &)' inline default trivial noexcept-unevaluated 0x55bd5944b558
  `-ParmVarDecl 0x55bd5944b668 <col:7> col:7 'const ArgContext &'

Layout: <CGRecordLayout
  LLVMType:%class.ArgContext = type <{ %class.Element*, %class.ErrorHandler*, i8*, i8, [7 x i8] }>
  NonVirtualBaseLLVMType:%class.ArgContext.base = type <{ %class.Element*, %class.ErrorHandler*, i8*, i8 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct TaskLink
         0 |   struct TaskLink * _prev
         8 |   struct TaskLink * _next
        16 |   unsigned int _pass
           | [sizeof=24, dsize=20, align=8,
           |  nvsize=20, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55bd595e9990 <../dummy_inc/click/task.hh:31:1, line:47:1> line:31:8 referenced struct TaskLink definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55bd595e9aa8 <col:1, col:8> col:8 implicit referenced struct TaskLink
|-FieldDecl 0x55bd595e9b78 <line:33:5, col:15> col:15 referenced _prev 'TaskLink *'
|-FieldDecl 0x55bd595e9bd8 <line:34:5, col:15> col:15 referenced _next 'TaskLink *'
|-FieldDecl 0x55bd595e9c40 <line:37:5, col:14> col:14 referenced _pass 'unsigned int'
|-CXXConstructorDecl 0x55bd595e9cc8 <line:39:5, line:46:5> line:39:5 used TaskLink 'void ()'
| `-CompoundStmt 0x55bd595e9f30 <col:16, line:46:5>
|   |-BinaryOperator 0x55bd595e9e78 <line:41:9, col:25> 'TaskLink *' lvalue '='
|   | |-MemberExpr 0x55bd595e9d98 <col:9> 'TaskLink *' lvalue ->_prev 0x55bd595e9b78
|   | | `-CXXThisExpr 0x55bd595e9d88 <col:9> 'TaskLink *' implicit this
|   | `-ImplicitCastExpr 0x55bd595e9e60 <col:17, col:25> 'TaskLink *' <LValueToRValue>
|   |   `-BinaryOperator 0x55bd595e9e40 <col:17, col:25> 'TaskLink *' lvalue '='
|   |     |-MemberExpr 0x55bd595e9dd8 <col:17> 'TaskLink *' lvalue ->_next 0x55bd595e9bd8
|   |     | `-CXXThisExpr 0x55bd595e9dc8 <col:17> 'TaskLink *' implicit this
|   |     `-ImplicitCastExpr 0x55bd595e9e28 <col:25> 'TaskLink *' <NullToPointer>
|   |       `-IntegerLiteral 0x55bd595e9e08 <col:25> 'int' 0
|   `-BinaryOperator 0x55bd595e9f10 <line:44:9, col:17> 'unsigned int' lvalue '='
|     |-MemberExpr 0x55bd595e9ea8 <col:9> 'unsigned int' lvalue ->_pass 0x55bd595e9c40
|     | `-CXXThisExpr 0x55bd595e9e98 <col:9> 'TaskLink *' implicit this
|     `-ImplicitCastExpr 0x55bd595e9ef8 <col:17> 'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x55bd595e9ed8 <col:17> 'int' 0
|-CXXConstructorDecl 0x55bd59647748 <line:31:8> col:8 implicit constexpr TaskLink 'void (const TaskLink &)' inline default trivial noexcept-unevaluated 0x55bd59647748
| `-ParmVarDecl 0x55bd59647858 <col:8> col:8 'const TaskLink &'
|-CXXConstructorDecl 0x55bd596478f8 <col:8> col:8 implicit constexpr TaskLink 'void (TaskLink &&)' inline default trivial noexcept-unevaluated 0x55bd596478f8
| `-ParmVarDecl 0x55bd59647a08 <col:8> col:8 'TaskLink &&'
|-CXXDestructorDecl 0x55bd59647bf8 <col:8> col:8 implicit ~TaskLink 'void ()' inline default trivial noexcept-unevaluated 0x55bd59647bf8
|-CXXMethodDecl 0x55bd596483f8 <col:8> col:8 implicit operator= 'TaskLink &(const TaskLink &)' inline default trivial noexcept-unevaluated 0x55bd596483f8
| `-ParmVarDecl 0x55bd59658d58 <col:8> col:8 'const TaskLink &'
`-CXXMethodDecl 0x55bd59658dc8 <col:8> col:8 implicit operator= 'TaskLink &(TaskLink &&)' inline default trivial noexcept-unevaluated 0x55bd59658dc8
  `-ParmVarDecl 0x55bd59658ed8 <col:8> col:8 'TaskLink &&'

Layout: <CGRecordLayout
  LLVMType:%struct.TaskLink = type <{ %struct.TaskLink*, %struct.TaskLink*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%struct.TaskLink.base = type <{ %struct.TaskLink*, %struct.TaskLink*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9)
         0 |   int16_t home_thread_id
         2 |   uint8_t is_scheduled
         3 |   uint8_t is_strong_unscheduled
           | [sizeof=4, dsize=4, align=2,
           |  nvsize=4, nvalign=2]

*** Dumping AST Record Layout
         0 | union Task::Status
         0 |   struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9) 
         0 |     int16_t home_thread_id
         2 |     uint8_t is_scheduled
         3 |     uint8_t is_strong_unscheduled
         0 |   uint32_t status
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Task::Pending
         0 |   class Task * t
         0 |   uintptr_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Task
         0 |   struct TaskLink (base)
         0 |     struct TaskLink * _prev
         8 |     struct TaskLink * _next
        16 |     unsigned int _pass
        20 |   unsigned int _stride
        24 |   int _tickets
        28 |   union Task::Status _status
        28 |     struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9) 
        28 |       int16_t home_thread_id
        30 |       uint8_t is_scheduled
        31 |       uint8_t is_strong_unscheduled
        28 |     uint32_t status
        32 |   TaskCallback _hook
        40 |   void * _thunk
        48 |   class RouterThread * _thread
        56 |   class Element * _owner
        64 |   union Task::Pending _pending_nextptr
        64 |     class Task * t
        64 |     uintptr_t x
           | [sizeof=72, dsize=72, align=8,
           |  nvsize=72, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55bd595ec498 <../dummy_inc/click/task.hh:315:9, line:319:9> line:315:9 struct definition
|-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x55bd595ec5c8 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
|-FieldDecl 0x55bd595ec628 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
|-FieldDecl 0x55bd595ec688 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
|-CXXConstructorDecl 0x55bd5965f158 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
|-CXXDestructorDecl 0x55bd5965f230 <col:9> col:9 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x55bd5965f230
|-CXXConstructorDecl 0x55bd5965f4e8 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x55bd5965f4e8
| `-ParmVarDecl 0x55bd5965f5f8 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
`-CXXConstructorDecl 0x55bd5965f698 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x55bd5965f698
  `-ParmVarDecl 0x55bd5965f7a8 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'

Layout: <CGRecordLayout
  LLVMType:%struct.anon = type { i16, i8, i8 }
  NonVirtualBaseLLVMType:%struct.anon = type { i16, i8, i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55bd595ec2f0 <../dummy_inc/click/task.hh:314:5, line:321:5> line:314:11 union Status definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x55bd595ec408 <col:5, col:11> col:11 implicit union Status
|-CXXRecordDecl 0x55bd595ec498 <line:315:9, line:319:9> line:315:9 struct definition
| |-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x55bd595ec5c8 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
| |-FieldDecl 0x55bd595ec628 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
| |-FieldDecl 0x55bd595ec688 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
| |-CXXConstructorDecl 0x55bd5965f158 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
| |-CXXDestructorDecl 0x55bd5965f230 <col:9> col:9 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x55bd5965f230
| |-CXXConstructorDecl 0x55bd5965f4e8 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x55bd5965f4e8
| | `-ParmVarDecl 0x55bd5965f5f8 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
| `-CXXConstructorDecl 0x55bd5965f698 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x55bd5965f698
|   `-ParmVarDecl 0x55bd5965f7a8 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'
|-FieldDecl 0x55bd595ec748 <col:9> col:9 implicit referenced 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
|-IndirectFieldDecl 0x55bd595ec7a8 <line:316:21> col:21 implicit home_thread_id 'int16_t':'short'
| |-Field 0x55bd595ec748 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x55bd595ec5c8 'home_thread_id' 'int16_t':'short'
|-IndirectFieldDecl 0x55bd595ec800 <line:317:21> col:21 implicit is_scheduled 'uint8_t':'unsigned char'
| |-Field 0x55bd595ec748 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x55bd595ec628 'is_scheduled' 'uint8_t':'unsigned char'
|-IndirectFieldDecl 0x55bd595ec858 <line:318:21> col:21 implicit is_strong_unscheduled 'uint8_t':'unsigned char'
| |-Field 0x55bd595ec748 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x55bd595ec688 'is_strong_unscheduled' 'uint8_t':'unsigned char'
|-FieldDecl 0x55bd595ec8b0 <line:320:9, col:18> col:18 status 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55bd5965f068 <line:314:11> col:11 implicit used Status 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55bd5965f9c8 <col:11>
|-CXXConstructorDecl 0x55bd5965f338 <col:11> col:11 implicit constexpr Status 'void (const Task::Status &)' inline default trivial noexcept-unevaluated 0x55bd5965f338
| `-ParmVarDecl 0x55bd5965f448 <col:11> col:11 'const Task::Status &'
`-CXXConstructorDecl 0x55bd5965f848 <col:11> col:11 implicit constexpr Status 'void (Task::Status &&)' inline default trivial noexcept-unevaluated 0x55bd5965f848
  `-ParmVarDecl 0x55bd5965f958 <col:11> col:11 'Task::Status &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Task::Status" = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class Vector<struct TimerSet::heap_element>
         0 |   class vector_memory<class sized_array_memory<16> > vm_
         0 |     vector_memory<class sized_array_memory<16> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class Timer *>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class SimpleSpinlock (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class TimerSet
         0 |   class Timestamp _timer_expiry
         0 |     union Timestamp::rep_t _t
         0 |       int64_t x
         8 |   unsigned int _max_timer_stride
        12 |   unsigned int _timer_stride
        16 |   unsigned int _timer_count
        24 |   class Vector<struct TimerSet::heap_element> _timer_heap
        24 |     class vector_memory<class sized_array_memory<16> > vm_
        24 |       vector_memory<class sized_array_memory<16> >::type * l_
        32 |       vector_memory::size_type n_
        36 |       vector_memory::size_type capacity_
        40 |   class Vector<class Timer *> _timer_runchunk
        40 |     class vector_memory<class sized_array_memory<8> > vm_
        40 |       vector_memory<class sized_array_memory<8> >::type * l_
        48 |       vector_memory::size_type n_
        52 |       vector_memory::size_type capacity_
        56 |   class SimpleSpinlock _timer_lock (empty)
        64 |   class Timestamp _timer_check
        64 |     union Timestamp::rep_t _t
        64 |       int64_t x
        72 |   uint32_t _timer_check_reports
           | [sizeof=80, dsize=76, align=8,
           |  nvsize=76, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct pollfd>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<24> >
         0 |   vector_memory<class sized_array_memory<24> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct SelectSet::SelectorInfo>
         0 |   class vector_memory<class sized_array_memory<24> > vm_
         0 |     vector_memory<class sized_array_memory<24> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class SelectSet
         0 |   int [2] _wake_pipe
         8 |   volatile _Bool _wake_pipe_pending
        16 |   class Vector<struct pollfd> _pollfds
        16 |     class vector_memory<class sized_array_memory<8> > vm_
        16 |       vector_memory<class sized_array_memory<8> >::type * l_
        24 |       vector_memory::size_type n_
        28 |       vector_memory::size_type capacity_
        32 |   class Vector<struct SelectSet::SelectorInfo> _selinfo
        32 |     class vector_memory<class sized_array_memory<24> > vm_
        32 |       vector_memory<class sized_array_memory<24> >::type * l_
        40 |       vector_memory::size_type n_
        44 |       vector_memory::size_type capacity_
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | class Spinlock (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class SpinlockIRQ (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class RouterThread
         0 |   struct TaskLink _task_link
         0 |     struct TaskLink * _prev
         8 |     struct TaskLink * _next
        16 |     unsigned int _pass
        24 |   volatile _Bool _stop_flag
        32 |   class TimerSet _timers
        32 |     class Timestamp _timer_expiry
        32 |       union Timestamp::rep_t _t
        32 |         int64_t x
        40 |     unsigned int _max_timer_stride
        44 |     unsigned int _timer_stride
        48 |     unsigned int _timer_count
        56 |     class Vector<struct TimerSet::heap_element> _timer_heap
        56 |       class vector_memory<class sized_array_memory<16> > vm_
        56 |         vector_memory<class sized_array_memory<16> >::type * l_
        64 |         vector_memory::size_type n_
        68 |         vector_memory::size_type capacity_
        72 |     class Vector<class Timer *> _timer_runchunk
        72 |       class vector_memory<class sized_array_memory<8> > vm_
        72 |         vector_memory<class sized_array_memory<8> >::type * l_
        80 |         vector_memory::size_type n_
        84 |         vector_memory::size_type capacity_
        88 |     class SimpleSpinlock _timer_lock (empty)
        96 |     class Timestamp _timer_check
        96 |       union Timestamp::rep_t _t
        96 |         int64_t x
       104 |     uint32_t _timer_check_reports
       112 |   class SelectSet _selects
       112 |     int [2] _wake_pipe
       120 |     volatile _Bool _wake_pipe_pending
       128 |     class Vector<struct pollfd> _pollfds
       128 |       class vector_memory<class sized_array_memory<8> > vm_
       128 |         vector_memory<class sized_array_memory<8> >::type * l_
       136 |         vector_memory::size_type n_
       140 |         vector_memory::size_type capacity_
       144 |     class Vector<struct SelectSet::SelectorInfo> _selinfo
       144 |       class vector_memory<class sized_array_memory<24> > vm_
       144 |         vector_memory<class sized_array_memory<24> >::type * l_
       152 |         vector_memory::size_type n_
       156 |         vector_memory::size_type capacity_
       192 |   class Spinlock _task_lock (empty)
       196 |   class atomic_uint32_t _task_blocker
       196 |     uint32_t _val
       200 |   class atomic_uint32_t _task_blocker_waiting
       200 |     uint32_t _val
       208 |   union Task::Pending _pending_head
       208 |     class Task * t
       208 |     uintptr_t x
       216 |   class Task::Pending * _pending_tail
       224 |   class SpinlockIRQ _pending_lock (empty)
       256 |   class Master * _master
       264 |   int _id
       268 |   _Bool _driver_entered
       272 |   unsigned int _tasks_per_iter
       276 |   unsigned int _iters_per_os
           | [sizeof=320, dsize=280, align=64,
           |  nvsize=280, nvalign=64]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55bd59460a80 prev 0x55bd594578c0 <../dummy_inc/click/timestamp.hh:539:5, line:566:5> line:539:11 referenced union rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55bd59460b78 <col:5, col:11> col:11 implicit union rep_t
|-FieldDecl 0x55bd59460c18 <line:541:9, col:17> col:17 referenced x 'int64_t':'long'
|-CXXConstructorDecl 0x55bd594679e0 <line:539:11> col:11 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55bd59467dc8 <col:11>
|-CXXConstructorDecl 0x55bd59467ac0 <col:11> col:11 implicit used constexpr rep_t 'void (const Timestamp::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55bd59467ba8 <col:11> col:11 'const Timestamp::rep_t &'
| `-CompoundStmt 0x55bd59468510 <col:11>
|-CXXConstructorDecl 0x55bd59467c48 <col:11> col:11 implicit used constexpr rep_t 'void (Timestamp::rep_t &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55bd59467d58 <col:11> col:11 'Timestamp::rep_t &&'
| `-CompoundStmt 0x55bd59469d68 <col:11>
|-CXXDestructorDecl 0x55bd59469078 <col:11> col:11 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55bd5916fa08 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(const Timestamp::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55bd5916fb18 <col:11> col:11 'const Timestamp::rep_t &'
| `-CompoundStmt 0x55bd591703e0 <col:11>
|   `-ReturnStmt 0x55bd591703d0 <col:11>
|     `-UnaryOperator 0x55bd591703b8 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55bd591703a8 <col:11> 'Timestamp::rep_t *' this
`-CXXMethodDecl 0x55bd5916fb88 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(Timestamp::rep_t &&) noexcept' inline default trivial
  |-ParmVarDecl 0x55bd5916fc98 <col:11> col:11 'Timestamp::rep_t &&'
  `-CompoundStmt 0x55bd595da1c0 <col:11>
    `-ReturnStmt 0x55bd595da1b0 <col:11>
      `-UnaryOperator 0x55bd595da198 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
        `-CXXThisExpr 0x55bd595da188 <col:11> 'Timestamp::rep_t *' this

Layout: <CGRecordLayout
  LLVMType:%"union.Timestamp::rep_t" = type { i64 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55bd59456a78 prev 0x55bd59456788 <../dummy_inc/click/timestamp.hh:122:1, line:723:1> line:122:7 referenced class Timestamp definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55bd59456b70 <col:1, col:7> col:7 implicit referenced class Timestamp
|-AccessSpecDecl 0x55bd59456c00 <col:19, col:25> col:19 public
|-TypedefDecl 0x55bd59456c38 <line:125:5, col:21> col:21 referenced seconds_type 'int32_t':'int'
| `-TypedefType 0x55bd590bbbe0 'int32_t' sugar
|   |-Typedef 0x55bd58fcb268 'int32_t'
|   `-TypedefType 0x55bd58fa43b0 '__int32_t' sugar
|     |-Typedef 0x55bd58fa3fc8 '__int32_t'
|     `-BuiltinType 0x55bd58f62370 'int'
|-TypedefDecl 0x55bd59456ca0 <line:128:5, col:21> col:21 referenced value_type 'int64_t':'long'
| `-TypedefType 0x55bd590bbda0 'int64_t' sugar
|   |-Typedef 0x55bd58fcb2d0 'int64_t'
|   `-TypedefType 0x55bd58fa44d0 '__int64_t' sugar
|     |-Typedef 0x55bd58fa40a8 '__int64_t'
|     `-BuiltinType 0x55bd58f62390 'long'
|-EnumDecl 0x55bd59456cf8 <line:133:5, line:140:5> line:133:5
| |-EnumConstantDecl 0x55bd59456e70 <line:134:9, col:38> col:9 max_seconds 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:133:5)'
| | `-ConstantExpr 0x55bd59456e50 <col:23, col:38> 'Timestamp::seconds_type':'int' Int: 2147483647
| |   `-CStyleCastExpr 0x55bd59456e28 <col:23, col:38> 'Timestamp::seconds_type':'int' <NoOp>
| |     `-ImplicitCastExpr 0x55bd59456e10 <col:38> 'Timestamp::seconds_type':'int' <IntegralCast> part_of_explicit_cast
| |       `-IntegerLiteral 0x55bd59456de0 <col:38> 'unsigned int' 2147483647
| `-EnumConstantDecl 0x55bd59456f68 <line:137:9, col:39> col:9 min_seconds 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:133:5)'
|   `-ConstantExpr 0x55bd59456f48 <col:23, col:39> 'Timestamp::seconds_type':'int' Int: -2147483648
|     `-CStyleCastExpr 0x55bd59456f20 <col:23, col:39> 'Timestamp::seconds_type':'int' <NoOp>
|       `-ImplicitCastExpr 0x55bd59456f08 <col:38, col:39> 'Timestamp::seconds_type':'int' <IntegralCast> part_of_explicit_cast
|         `-UnaryOperator 0x55bd59456ee0 <col:38, col:39> 'unsigned int' prefix '-'
|           `-IntegerLiteral 0x55bd59456ec0 <col:39> 'unsigned int' 2147483648
|-EnumDecl 0x55bd59456fb8 <line:142:5, line:162:5> line:142:5
| |-EnumConstantDecl 0x55bd594570c0 <line:143:9, col:24> col:9 referenced nsec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55bd59457610 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55bd594570a0 <col:24> 'int' Int: 1000000000
| |     `-IntegerLiteral 0x55bd59457080 <col:24> 'int' 1000000000
| |-EnumConstantDecl 0x55bd59457150 <line:144:9, col:25> col:9 nsec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55bd59457628 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55bd59457130 <col:25> 'int' Int: 1000000
| |     `-IntegerLiteral 0x55bd59457110 <col:25> 'int' 1000000
| |-EnumConstantDecl 0x55bd594571e0 <line:145:9, col:25> col:9 nsec_per_usec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55bd59457640 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55bd594571c0 <col:25> 'int' Int: 1000
| |     `-IntegerLiteral 0x55bd594571a0 <col:25> 'int' 1000
| |-EnumConstantDecl 0x55bd59457270 <line:146:9, col:24> col:9 referenced usec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55bd59457658 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55bd59457250 <col:24> 'int' Int: 1000000
| |     `-IntegerLiteral 0x55bd59457230 <col:24> 'int' 1000000
| |-EnumConstantDecl 0x55bd59457300 <line:147:9, col:25> col:9 usec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55bd59457670 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55bd594572e0 <col:25> 'int' Int: 1000
| |     `-IntegerLiteral 0x55bd594572c0 <col:25> 'int' 1000
| |-EnumConstantDecl 0x55bd59457390 <line:148:9, col:24> col:9 referenced msec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55bd59457688 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55bd59457370 <col:24> 'int' Int: 1000
| |     `-IntegerLiteral 0x55bd59457350 <col:24> 'int' 1000
| |-EnumConstantDecl 0x55bd59457420 <line:150:9, col:26> col:9 referenced subsec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55bd594576a0 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55bd59457400 <col:26> 'int' Int: 1000000000
| |     `-DeclRefExpr 0x55bd594573e0 <col:26> 'int' EnumConstant 0x55bd594570c0 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| |-EnumConstantDecl 0x55bd594574f0 <line:157:9, col:44> col:9 referenced subsec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55bd594576b8 <col:27, col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55bd594574d0 <col:27, col:44> 'int' Int: 1000000
| |     `-BinaryOperator 0x55bd594574b0 <col:27, col:44> 'int' '/'
| |       |-DeclRefExpr 0x55bd59457470 <col:27> 'int' EnumConstant 0x55bd59457420 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| |       `-DeclRefExpr 0x55bd59457490 <col:44> 'int' EnumConstant 0x55bd59457390 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| `-EnumConstantDecl 0x55bd594575c0 <line:158:9, col:44> col:9 referenced subsec_per_usec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ImplicitCastExpr 0x55bd594576d0 <col:27, col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55bd594575a0 <col:27, col:44> 'int' Int: 1000
|       `-BinaryOperator 0x55bd59457580 <col:27, col:44> 'int' '/'
|         |-DeclRefExpr 0x55bd59457540 <col:27> 'int' EnumConstant 0x55bd59457420 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|         `-DeclRefExpr 0x55bd59457560 <col:44> 'int' EnumConstant 0x55bd59457270 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-EnumDecl 0x55bd594576e8 <line:164:5, line:166:5> line:164:5
| `-EnumConstantDecl 0x55bd594577f0 <line:165:9, col:19> col:9 NSUBSEC 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:164:5)'
|   `-ImplicitCastExpr 0x55bd59457840 <col:19> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55bd594577d0 <col:19> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' Int: 1000000000
|       `-DeclRefExpr 0x55bd594577b0 <col:19> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55bd59457420 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-TypedefDecl 0x55bd59457868 <line:168:5, col:32> col:32 referenced uninitialized_t 'uninitialized_type'
| `-RecordType 0x55bd590bb810 'uninitialized_type'
|   `-CXXRecord 0x55bd590bb778 'uninitialized_type'
|-CXXRecordDecl 0x55bd594578c0 <line:170:5, col:11> col:11 referenced union rep_t
|-CXXConstructorDecl 0x55bd594579d0 <line:174:5, line:176:5> line:174:12 used Timestamp 'void ()' inline
| |-CXXCtorInitializer Field 0x55bd59461bc8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55bd59467dd8 <col:12> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55bd59467ef8 <col:24, line:176:5>
|   `-CXXMemberCallExpr 0x55bd59467eb0 <line:175:9, col:20> 'void'
|     |-MemberExpr 0x55bd59467e40 <col:9> '<bound member function type>' ->assign 0x55bd5945c618
|     | `-CXXThisExpr 0x55bd59467e30 <col:9> 'Timestamp *' implicit this
|     |-IntegerLiteral 0x55bd59467e70 <col:16> 'int' 0
|     `-ImplicitCastExpr 0x55bd59467ee0 <col:19> 'uint32_t':'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x55bd59467e90 <col:19> 'int' 0
|-CXXConstructorDecl 0x55bd59457c18 <line:187:5, line:189:5> line:187:21 Timestamp 'void (long, uint32_t)' inline
| |-ParmVarDecl 0x55bd59457a90 <col:31, col:36> col:36 used sec 'long'
| |-ParmVarDecl 0x55bd59457b08 <col:41, col:59> col:50 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55bd59463710 <col:59> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55bd594636f0 <col:59> 'int' 0
| |-CXXCtorInitializer Field 0x55bd59461bc8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55bd59467f10 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55bd59468060 <col:62, line:189:5>
|   `-CXXMemberCallExpr 0x55bd59467fe8 <line:188:9, col:27> 'void'
|     |-MemberExpr 0x55bd59467f78 <col:9> '<bound member function type>' ->assign 0x55bd5945c618
|     | `-CXXThisExpr 0x55bd59467f68 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55bd59468030 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x55bd59468018 <col:16> 'long' <LValueToRValue>
|     |   `-DeclRefExpr 0x55bd59467fa8 <col:16> 'long' lvalue ParmVar 0x55bd59457a90 'sec' 'long'
|     `-ImplicitCastExpr 0x55bd59468048 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x55bd59467fc8 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x55bd59457b08 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55bd59457e78 <line:191:5, line:193:5> line:191:21 used Timestamp 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x55bd59457ce8 <col:31, col:35> col:35 used sec 'int'
| |-ParmVarDecl 0x55bd59457d60 <col:40, col:58> col:49 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55bd59463748 <col:58> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55bd59463728 <col:58> 'int' 0
| |-CXXCtorInitializer Field 0x55bd59461bc8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55bd59468078 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55bd594681b0 <col:61, line:193:5>
|   `-CXXMemberCallExpr 0x55bd59468150 <line:192:9, col:27> 'void'
|     |-MemberExpr 0x55bd594680e0 <col:9> '<bound member function type>' ->assign 0x55bd5945c618
|     | `-CXXThisExpr 0x55bd594680d0 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55bd59468180 <col:16> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x55bd59468110 <col:16> 'int' lvalue ParmVar 0x55bd59457ce8 'sec' 'int'
|     `-ImplicitCastExpr 0x55bd59468198 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x55bd59468130 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x55bd59457d60 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55bd594580d8 <line:195:5, line:197:5> line:195:21 Timestamp 'void (unsigned long, uint32_t)' inline
| |-ParmVarDecl 0x55bd59457f48 <col:31, col:45> col:45 used sec 'unsigned long'
| |-ParmVarDecl 0x55bd59457fc0 <col:50, col:68> col:59 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55bd59463780 <col:68> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55bd59463760 <col:68> 'int' 0
| |-CXXCtorInitializer Field 0x55bd59461bc8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55bd594681c8 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55bd59468318 <col:71, line:197:5>
|   `-CXXMemberCallExpr 0x55bd594682a0 <line:196:9, col:27> 'void'
|     |-MemberExpr 0x55bd59468230 <col:9> '<bound member function type>' ->assign 0x55bd5945c618
|     | `-CXXThisExpr 0x55bd59468220 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55bd594682e8 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x55bd594682d0 <col:16> 'unsigned long' <LValueToRValue>
|     |   `-DeclRefExpr 0x55bd59468260 <col:16> 'unsigned long' lvalue ParmVar 0x55bd59457f48 'sec' 'unsigned long'
|     `-ImplicitCastExpr 0x55bd59468300 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x55bd59468280 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x55bd59457fc0 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55bd59459270 <line:199:5, line:201:5> line:199:21 used Timestamp 'void (unsigned int, uint32_t)' inline
| |-ParmVarDecl 0x55bd594581a8 <col:31, col:40> col:40 used sec 'unsigned int'
| |-ParmVarDecl 0x55bd59458220 <col:45, col:63> col:54 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55bd594637b8 <col:63> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55bd59463798 <col:63> 'int' 0
| |-CXXCtorInitializer Field 0x55bd59461bc8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55bd59468330 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55bd59468480 <col:66, line:201:5>
|   `-CXXMemberCallExpr 0x55bd59468408 <line:200:9, col:27> 'void'
|     |-MemberExpr 0x55bd59468398 <col:9> '<bound member function type>' ->assign 0x55bd5945c618
|     | `-CXXThisExpr 0x55bd59468388 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55bd59468450 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x55bd59468438 <col:16> 'unsigned int' <LValueToRValue>
|     |   `-DeclRefExpr 0x55bd594683c8 <col:16> 'unsigned int' lvalue ParmVar 0x55bd594581a8 'sec' 'unsigned int'
|     `-ImplicitCastExpr 0x55bd59468468 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x55bd594683e8 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x55bd59458220 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55bd594593d0 <line:203:5, col:37> col:21 used Timestamp 'void (double)' inline
| `-ParmVarDecl 0x55bd59459340 <col:31> col:37 'double'
|-CXXConstructorDecl 0x55bd59459568 <line:206:5, col:46> col:12 Timestamp 'void (const struct timeval &)' inline
| `-ParmVarDecl 0x55bd594594a8 <col:22, col:44> col:44 tv 'const struct timeval &'
|-CXXConstructorDecl 0x55bd59459798 <line:208:5, col:47> col:12 Timestamp 'void (const struct timespec &)' inline
| `-ParmVarDecl 0x55bd594596a0 <col:22, col:45> col:45 ts 'const struct timespec &'
|-CXXConstructorDecl 0x55bd59459948 <line:212:5, line:214:5> line:212:12 Timestamp 'void (const Timestamp::rep_t &)' inline
| |-ParmVarDecl 0x55bd59459888 <col:22, col:35> col:35 used rep 'const Timestamp::rep_t &'
| |-CXXCtorInitializer Field 0x55bd59461bc8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55bd59468520 <line:213:11, col:17> 'Timestamp::rep_t' 'void (const Timestamp::rep_t &) noexcept'
| |   `-DeclRefExpr 0x55bd59468498 <col:14> 'const Timestamp::rep_t' lvalue ParmVar 0x55bd59459888 'rep' 'const Timestamp::rep_t &'
| `-CompoundStmt 0x55bd59468580 <col:19, line:214:5>
|-CXXConstructorDecl 0x55bd59459b18 <line:217:5, line:219:5> line:217:12 used Timestamp 'void (const Timestamp::uninitialized_t &)' inline
| |-ParmVarDecl 0x55bd59459a58 <col:22, col:45> col:45 used unused 'const Timestamp::uninitialized_t &'
| |-CXXCtorInitializer Field 0x55bd59461bc8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55bd59468590 <col:12> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55bd59468640 <col:53, line:219:5>
|   `-CStyleCastExpr 0x55bd59468618 <line:218:9, col:16> 'void' <ToVoid>
|     `-DeclRefExpr 0x55bd594685e8 <col:16> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue ParmVar 0x55bd59459a58 'unused' 'const Timestamp::uninitialized_t &'
|-TypedefDecl 0x55bd59459d08 <line:221:5, col:64> col:39 referenced unspecified_bool_type 'Timestamp::seconds_type (Timestamp::*)() const'
| `-MemberPointerType 0x55bd59459c80 'Timestamp::seconds_type (Timestamp::*)() const'
|   |-RecordType 0x55bd59456820 'Timestamp'
|   | `-CXXRecord 0x55bd59456a78 'Timestamp'
|   `-ParenType 0x55bd59459c20 'Timestamp::seconds_type () const' sugar
|     `-FunctionProtoType 0x55bd59459bf0 'Timestamp::seconds_type () const' const cdecl
|       `-TypedefType 0x55bd59456dc0 'Timestamp::seconds_type' sugar
|         |-Typedef 0x55bd59456c38 'seconds_type'
|         `-TypedefType 0x55bd590bbbe0 'int32_t' sugar
|           |-Typedef 0x55bd58fcb268 'int32_t'
|           `-TypedefType 0x55bd58fa43b0 '__int32_t' sugar
|             |-Typedef 0x55bd58fa3fc8 '__int32_t'
|             `-BuiltinType 0x55bd58f62370 'int'
|-CXXConversionDecl 0x55bd59459e48 <line:222:5, col:45> col:12 used operator int (Timestamp::*)() const 'Timestamp::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x55bd59459f18 <line:225:5, line:231:5> line:225:17 is_negative 'bool () const' inline
| `-CompoundStmt 0x55bd59468748 <col:37, line:231:5>
|   `-ReturnStmt 0x55bd59468738 <line:227:9, col:23>
|     `-BinaryOperator 0x55bd59468718 <col:16, col:23> 'bool' '<'
|       |-ImplicitCastExpr 0x55bd594686e8 <col:16, col:19> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x55bd59468698 <col:16, col:19> 'const int64_t':'const long' lvalue .x 0x55bd59460c18
|       |   `-MemberExpr 0x55bd59468668 <col:16> 'const Timestamp::rep_t' lvalue ->_t 0x55bd59461bc8
|       |     `-CXXThisExpr 0x55bd59468658 <col:16> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x55bd59468700 <col:23> 'long' <IntegralCast>
|         `-IntegerLiteral 0x55bd594686c8 <col:23> 'int' 0
|-CXXMethodDecl 0x55bd59459fd8 <line:233:5, col:31> col:25 used sec 'Timestamp::seconds_type () const' inline
|-CXXMethodDecl 0x55bd5945a098 <line:234:5, col:30> col:21 used subsec 'uint32_t () const' inline
|-CXXMethodDecl 0x55bd5945a158 <line:235:5, col:28> col:21 msec 'uint32_t () const' inline
|-CXXMethodDecl 0x55bd5945a218 <line:236:5, col:28> col:21 used usec 'uint32_t () const' inline
|-CXXMethodDecl 0x55bd5945a2d8 <line:237:5, col:28> col:21 used nsec 'uint32_t () const' inline
|-CXXMethodDecl 0x55bd5945a448 <line:239:5, col:41> col:17 set_sec 'void (Timestamp::seconds_type)' inline
| `-ParmVarDecl 0x55bd5945a388 <col:25, col:38> col:38 sec 'Timestamp::seconds_type':'int'
|-CXXMethodDecl 0x55bd5945a590 <line:240:5, col:43> col:17 set_subsec 'void (uint32_t)' inline
| `-ParmVarDecl 0x55bd5945a500 <col:28, col:37> col:37 subsec 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55bd5945a658 <line:242:5, col:65> col:25 msec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x55bd5945a6f8 <col:54> "" ""
|-CXXMethodDecl 0x55bd5945a788 <line:243:5, col:65> col:25 usec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x55bd5945a828 <col:54> "" ""
|-CXXMethodDecl 0x55bd5945a8b8 <line:244:5, col:65> col:25 nsec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x55bd5945a958 <col:54> "" ""
|-CXXMethodDecl 0x55bd5945aa58 <line:250:5, col:37> col:27 used timeval 'struct timeval () const' inline
|-CXXMethodDecl 0x55bd5945ab28 <line:251:5, col:42> col:27 timeval_ceil 'struct timeval () const' inline
|-CXXMethodDecl 0x55bd5945ac58 <line:257:5, col:39> col:28 timespec 'struct timespec () const' inline
|-CXXMethodDecl 0x55bd5945ad50 <line:262:5, col:31> col:19 used doubleval 'double () const' inline
|-CXXMethodDecl 0x55bd5945ae88 <line:265:5, line:271:5> line:265:23 msecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x55bd59468960 <col:39, line:271:5>
|   `-ReturnStmt 0x55bd59468950 <line:267:9, col:61>
|     `-CallExpr 0x55bd594688f0 <col:16, col:61> 'Timestamp::value_type':'long'
|       |-ImplicitCastExpr 0x55bd594688d8 <col:16> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55bd59468760 <col:16> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x55bd59461ef8 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|       |-ImplicitCastExpr 0x55bd59468920 <col:26, col:29> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x55bd594687c0 <col:26, col:29> 'const int64_t':'const long' lvalue .x 0x55bd59460c18
|       |   `-MemberExpr 0x55bd59468790 <col:26> 'const Timestamp::rep_t' lvalue ->_t 0x55bd59461bc8
|       |     `-CXXThisExpr 0x55bd59468780 <col:26> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x55bd59468938 <col:32, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|         `-BinaryOperator 0x55bd59468860 <col:32, col:49> 'int' '/'
|           |-ImplicitCastExpr 0x55bd59468830 <col:32> 'int' <IntegralCast>
|           | `-DeclRefExpr 0x55bd594687f0 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55bd59457420 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|           `-ImplicitCastExpr 0x55bd59468848 <col:49> 'int' <IntegralCast>
|             `-DeclRefExpr 0x55bd59468810 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55bd59457390 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55bd5945af48 <line:273:5, line:279:5> line:273:23 usecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x55bd59468b20 <col:39, line:279:5>
|   `-ReturnStmt 0x55bd59468b10 <line:275:9, col:61>
|     `-CallExpr 0x55bd59468ab0 <col:16, col:61> 'Timestamp::value_type':'long'
|       |-ImplicitCastExpr 0x55bd59468a98 <col:16> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55bd59468978 <col:16> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x55bd59461ef8 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|       |-ImplicitCastExpr 0x55bd59468ae0 <col:26, col:29> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x55bd594689d8 <col:26, col:29> 'const int64_t':'const long' lvalue .x 0x55bd59460c18
|       |   `-MemberExpr 0x55bd594689a8 <col:26> 'const Timestamp::rep_t' lvalue ->_t 0x55bd59461bc8
|       |     `-CXXThisExpr 0x55bd59468998 <col:26> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x55bd59468af8 <col:32, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|         `-BinaryOperator 0x55bd59468a78 <col:32, col:49> 'int' '/'
|           |-ImplicitCastExpr 0x55bd59468a48 <col:32> 'int' <IntegralCast>
|           | `-DeclRefExpr 0x55bd59468a08 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55bd59457420 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|           `-ImplicitCastExpr 0x55bd59468a60 <col:49> 'int' <IntegralCast>
|             `-DeclRefExpr 0x55bd59468a28 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55bd59457270 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55bd5945b008 <line:281:5, line:287:5> line:281:23 nsecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x55bd59468cb8 <col:39, line:287:5>
|   `-ReturnStmt 0x55bd59468ca8 <line:283:9, col:53>
|     `-BinaryOperator 0x55bd59468c88 <col:16, col:53> 'long' '*'
|       |-ImplicitCastExpr 0x55bd59468c58 <col:16, col:19> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x55bd59468b78 <col:16, col:19> 'const int64_t':'const long' lvalue .x 0x55bd59460c18
|       |   `-MemberExpr 0x55bd59468b48 <col:16> 'const Timestamp::rep_t' lvalue ->_t 0x55bd59461bc8
|       |     `-CXXThisExpr 0x55bd59468b38 <col:16> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x55bd59468c70 <col:23, col:53> 'long' <IntegralCast>
|         `-ParenExpr 0x55bd59468c38 <col:23, col:53> 'int'
|           `-BinaryOperator 0x55bd59468c18 <col:24, col:39> 'int' '/'
|             |-ImplicitCastExpr 0x55bd59468be8 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55bd59468ba8 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55bd594570c0 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55bd59468c00 <col:39> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55bd59468bc8 <col:39> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55bd59457420 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55bd5945b0f8 <line:290:5, line:293:5> line:290:22 msec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x55bd59469f50 <col:40, line:293:5>
|   |-DeclStmt 0x55bd59468e00 <line:291:9, col:48>
|   | `-VarDecl 0x55bd59468ce0 <col:9, col:33> col:18 used x 'uint32_t':'unsigned int' cinit
|   |   `-BinaryOperator 0x55bd59468de0 <col:22, col:33> 'unsigned int' '%'
|   |     |-CXXMemberCallExpr 0x55bd59468d88 <col:22, col:29> 'uint32_t':'unsigned int'
|   |     | `-MemberExpr 0x55bd59468d58 <col:22> '<bound member function type>' ->subsec 0x55bd5945a098
|   |     |   `-CXXThisExpr 0x55bd59468d48 <col:22> 'const Timestamp *' implicit this
|   |     `-ImplicitCastExpr 0x55bd59468dc8 <col:33> 'unsigned int' <IntegralCast>
|   |       `-DeclRefExpr 0x55bd59468da8 <col:33> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55bd594574f0 'subsec_per_msec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x55bd59469f40 <line:292:9, col:70>
|     `-ExprWithCleanups 0x55bd59469f28 <col:16, col:70> 'Timestamp'
|       `-CXXConstructExpr 0x55bd59469ef8 <col:16, col:70> 'Timestamp' 'void (const Timestamp &) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55bd59469ee0 <col:16, col:70> 'const Timestamp' lvalue
|           `-ParenExpr 0x55bd59469ec0 <col:16, col:70> 'const Timestamp'
|             `-ConditionalOperator 0x55bd59469e90 <col:17, col:66> 'const Timestamp'
|               |-ImplicitCastExpr 0x55bd59469c28 <col:17> 'bool' <IntegralToBoolean>
|               | `-ImplicitCastExpr 0x55bd59469c10 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|               |   `-DeclRefExpr 0x55bd59468e18 <col:17> 'uint32_t':'unsigned int' lvalue Var 0x55bd59468ce0 'x' 'uint32_t':'unsigned int'
|               |-CXXConstructExpr 0x55bd59469e30 <col:21, col:61> 'const Timestamp' 'void (const Timestamp &) noexcept' elidable
|               | `-MaterializeTemporaryExpr 0x55bd59469e18 <col:21, col:61> 'const Timestamp' lvalue
|               |   `-CXXConstructExpr 0x55bd59469de8 <col:21, col:61> 'const Timestamp' 'void (Timestamp &&) noexcept' elidable
|               |     `-MaterializeTemporaryExpr 0x55bd59469c40 <col:21, col:61> 'Timestamp' xvalue
|               |       `-CXXOperatorCallExpr 0x55bd59469bb0 <col:21, col:61> 'Timestamp'
|               |         |-ImplicitCastExpr 0x55bd59469b98 <col:27> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|               |         | `-DeclRefExpr 0x55bd59469b48 <col:27> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55bd594569c8 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|               |         |-CXXConstructExpr 0x55bd59469ae8 <col:21, col:22> 'Timestamp' 'void (const Timestamp &) noexcept'
|               |         | `-UnaryOperator 0x55bd59468e48 <col:21, col:22> 'const Timestamp' lvalue prefix '*' cannot overflow
|               |         |   `-CXXThisExpr 0x55bd59468e38 <col:22> 'const Timestamp *' this
|               |         `-MaterializeTemporaryExpr 0x55bd59469b30 <col:29, col:61> 'const Timestamp' lvalue
|               |           `-ImplicitCastExpr 0x55bd59469b18 <col:29, col:61> 'const Timestamp' <NoOp>
|               |             `-CXXTemporaryObjectExpr 0x55bd59469308 <col:29, col:61> 'Timestamp' 'void (int, uint32_t)'
|               |               |-IntegerLiteral 0x55bd59468e70 <col:39> 'int' 0
|               |               `-BinaryOperator 0x55bd59468f00 <col:42, col:60> 'unsigned int' '-'
|               |                 |-ImplicitCastExpr 0x55bd59468ed0 <col:42> 'unsigned int' <IntegralCast>
|               |                 | `-DeclRefExpr 0x55bd59468e90 <col:42> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55bd594574f0 'subsec_per_msec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|               |                 `-ImplicitCastExpr 0x55bd59468ee8 <col:60> 'uint32_t':'unsigned int' <LValueToRValue>
|               |                   `-DeclRefExpr 0x55bd59468eb0 <col:60> 'uint32_t':'unsigned int' lvalue Var 0x55bd59468ce0 'x' 'uint32_t':'unsigned int'
|               `-CXXConstructExpr 0x55bd59469e60 <col:65, col:66> 'const Timestamp' 'void (const Timestamp &) noexcept'
|                 `-UnaryOperator 0x55bd59469bf8 <col:65, col:66> 'const Timestamp' lvalue prefix '*' cannot overflow
|                   `-CXXThisExpr 0x55bd59469be8 <col:66> 'const Timestamp *' this
|-CXXMethodDecl 0x55bd5945b1b8 <line:295:5, line:302:5> line:295:22 usec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x55bd5946a4a8 <col:40, line:302:5>
|   |-DeclStmt 0x55bd5946a0a0 <line:297:9, col:48>
|   | `-VarDecl 0x55bd59469f80 <col:9, col:33> col:18 used x 'uint32_t':'unsigned int' cinit
|   |   `-BinaryOperator 0x55bd5946a080 <col:22, col:33> 'unsigned int' '%'
|   |     |-CXXMemberCallExpr 0x55bd5946a028 <col:22, col:29> 'uint32_t':'unsigned int'
|   |     | `-MemberExpr 0x55bd59469ff8 <col:22> '<bound member function type>' ->subsec 0x55bd5945a098
|   |     |   `-CXXThisExpr 0x55bd59469fe8 <col:22> 'const Timestamp *' implicit this
|   |     `-ImplicitCastExpr 0x55bd5946a068 <col:33> 'unsigned int' <IntegralCast>
|   |       `-DeclRefExpr 0x55bd5946a048 <col:33> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55bd594575c0 'subsec_per_usec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x55bd5946a498 <line:298:9, col:70>
|     `-ExprWithCleanups 0x55bd5946a480 <col:16, col:70> 'Timestamp'
|       `-CXXConstructExpr 0x55bd5946a450 <col:16, col:70> 'Timestamp' 'void (const Timestamp &) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55bd5946a438 <col:16, col:70> 'const Timestamp' lvalue
|           `-ParenExpr 0x55bd5946a418 <col:16, col:70> 'const Timestamp'
|             `-ConditionalOperator 0x55bd5946a3e8 <col:17, col:66> 'const Timestamp'
|               |-ImplicitCastExpr 0x55bd5946a310 <col:17> 'bool' <IntegralToBoolean>
|               | `-ImplicitCastExpr 0x55bd5946a2f8 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|               |   `-DeclRefExpr 0x55bd5946a0b8 <col:17> 'uint32_t':'unsigned int' lvalue Var 0x55bd59469f80 'x' 'uint32_t':'unsigned int'
|               |-CXXConstructExpr 0x55bd5946a388 <col:21, col:61> 'const Timestamp' 'void (const Timestamp &) noexcept' elidable
|               | `-MaterializeTemporaryExpr 0x55bd5946a370 <col:21, col:61> 'const Timestamp' lvalue
|               |   `-CXXConstructExpr 0x55bd5946a340 <col:21, col:61> 'const Timestamp' 'void (Timestamp &&) noexcept' elidable
|               |     `-MaterializeTemporaryExpr 0x55bd5946a328 <col:21, col:61> 'Timestamp' xvalue
|               |       `-CXXOperatorCallExpr 0x55bd5946a298 <col:21, col:61> 'Timestamp'
|               |         |-ImplicitCastExpr 0x55bd5946a280 <col:27> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|               |         | `-DeclRefExpr 0x55bd5946a260 <col:27> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55bd594569c8 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|               |         |-CXXConstructExpr 0x55bd5946a200 <col:21, col:22> 'Timestamp' 'void (const Timestamp &) noexcept'
|               |         | `-UnaryOperator 0x55bd5946a0e8 <col:21, col:22> 'const Timestamp' lvalue prefix '*' cannot overflow
|               |         |   `-CXXThisExpr 0x55bd5946a0d8 <col:22> 'const Timestamp *' this
|               |         `-MaterializeTemporaryExpr 0x55bd5946a248 <col:29, col:61> 'const Timestamp' lvalue
|               |           `-ImplicitCastExpr 0x55bd5946a230 <col:29, col:61> 'const Timestamp' <NoOp>
|               |             `-CXXTemporaryObjectExpr 0x55bd5946a1c0 <col:29, col:61> 'Timestamp' 'void (int, uint32_t)'
|               |               |-IntegerLiteral 0x55bd5946a110 <col:39> 'int' 0
|               |               `-BinaryOperator 0x55bd5946a1a0 <col:42, col:60> 'unsigned int' '-'
|               |                 |-ImplicitCastExpr 0x55bd5946a170 <col:42> 'unsigned int' <IntegralCast>
|               |                 | `-DeclRefExpr 0x55bd5946a130 <col:42> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55bd594575c0 'subsec_per_usec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|               |                 `-ImplicitCastExpr 0x55bd5946a188 <col:60> 'uint32_t':'unsigned int' <LValueToRValue>
|               |                   `-DeclRefExpr 0x55bd5946a150 <col:60> 'uint32_t':'unsigned int' lvalue Var 0x55bd59469f80 'x' 'uint32_t':'unsigned int'
|               `-CXXConstructExpr 0x55bd5946a3b8 <col:65, col:66> 'const Timestamp' 'void (const Timestamp &) noexcept'
|                 `-UnaryOperator 0x55bd5946a2e0 <col:65, col:66> 'const Timestamp' lvalue prefix '*' cannot overflow
|                   `-CXXThisExpr 0x55bd5946a2d0 <col:66> 'const Timestamp *' this
|-CXXMethodDecl 0x55bd5945b278 <line:304:5, line:306:5> line:304:22 nsec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x55bd5946a530 <col:40, line:306:5>
|   `-ReturnStmt 0x55bd5946a520 <line:305:9, col:17>
|     `-CXXConstructExpr 0x55bd5946a4f0 <col:16, col:17> 'Timestamp' 'void (const Timestamp &) noexcept'
|       `-UnaryOperator 0x55bd5946a4d8 <col:16, col:17> 'const Timestamp' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55bd5946a4c8 <col:17> 'const Timestamp *' this
|-CXXMethodDecl 0x55bd5945b418 <line:310:5, col:65> col:29 make_jiffies 'Timestamp (click_jiffies_t)' static inline
| `-ParmVarDecl 0x55bd5945b328 <col:42, col:58> col:58 jiffies 'click_jiffies_t':'unsigned int'
|-CXXMethodDecl 0x55bd5945b5e8 <line:312:5, col:76> col:29 make_jiffies 'Timestamp (click_jiffies_difference_t)' static inline
| `-ParmVarDecl 0x55bd5945b4f0 <col:42, col:69> col:69 jiffies 'click_jiffies_difference_t':'int'
|-CXXMethodDecl 0x55bd5945b6d8 <line:314:5, col:38> col:28 jiffies 'click_jiffies_t () const' inline
|-CXXMethodDecl 0x55bd5945b848 <line:318:5, line:320:5> line:318:29 make_sec 'Timestamp (Timestamp::seconds_type)' static inline
| |-ParmVarDecl 0x55bd5945b788 <col:38, col:51> col:51 used sec 'Timestamp::seconds_type':'int'
| `-CompoundStmt 0x55bd5946a678 <col:56, line:320:5>
|   `-ReturnStmt 0x55bd5946a668 <line:319:9, col:32>
|     `-ExprWithCleanups 0x55bd5946a650 <col:16, col:32> 'Timestamp'
|       `-CXXConstructExpr 0x55bd5946a620 <col:16, col:32> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55bd5946a608 <col:16, col:32> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55bd5946a5c8 <col:16, col:32> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x55bd5946a598 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x55bd5946a558 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55bd5945b788 'sec' 'Timestamp::seconds_type':'int'
|             `-ImplicitCastExpr 0x55bd5946a5b0 <col:31> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x55bd5946a578 <col:31> 'int' 0
|-CXXMethodDecl 0x55bd5945ba88 <line:324:5, line:326:5> line:324:29 make_msec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x55bd5945b900 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55bd5945b978 <col:57, col:66> col:66 used msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55bd5946a848 <col:72, line:326:5>
|   `-ReturnStmt 0x55bd5946a838 <line:325:9, col:51>
|     `-ExprWithCleanups 0x55bd5946a820 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x55bd5946a7f0 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55bd5946a7d8 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55bd5946a798 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x55bd5946a780 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x55bd5946a6a0 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55bd5945b900 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x55bd5946a740 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x55bd5946a728 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x55bd5946a6c0 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x55bd59460370 'msec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x55bd5946a768 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x55bd5946a6e0 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x55bd5945b978 'msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55bd5945bc38 <line:328:5, line:337:5> line:328:29 used make_msec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x55bd5945bb48 <col:39, col:50> col:50 used msec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x55bd5946af10 <col:56, line:337:5>
|   |-DeclStmt 0x55bd5946ab48 <line:329:9, col:51>
|   | `-VarDecl 0x55bd5946a870 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x55bd5946ab30 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x55bd5946ab00 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x55bd5946aae8 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x55bd5946aad0 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x55bd5946aaa0 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x55bd5946aa88 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x55bd5946aa70 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x55bd5946a960 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x55bd5946ad00 <line:331:9, col:55> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x55bd5946abb0 <col:9, col:14> 'int64_t':'long' lvalue .x 0x55bd59460c18
|   | | `-MemberExpr 0x55bd5946ab80 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x55bd59461bc8
|   | |   `-DeclRefExpr 0x55bd5946ab60 <col:9> 'Timestamp' lvalue Var 0x55bd5946a870 't' 'Timestamp'
|   | `-BinaryOperator 0x55bd5946ace0 <col:18, col:55> 'long' '*'
|   |   |-ImplicitCastExpr 0x55bd5946acb0 <col:18> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55bd5946abe0 <col:18> 'Timestamp::value_type':'long' lvalue ParmVar 0x55bd5945bb48 'msec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x55bd5946acc8 <col:25, col:55> 'long' <IntegralCast>
|   |     `-ParenExpr 0x55bd5946ac90 <col:25, col:55> 'int'
|   |       `-BinaryOperator 0x55bd5946ac70 <col:26, col:43> 'int' '/'
|   |         |-ImplicitCastExpr 0x55bd5946ac40 <col:26> 'int' <IntegralCast>
|   |         | `-DeclRefExpr 0x55bd5946ac00 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55bd59457420 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |         `-ImplicitCastExpr 0x55bd5946ac58 <col:43> 'int' <IntegralCast>
|   |           `-DeclRefExpr 0x55bd5946ac20 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55bd59457390 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x55bd5946aef8 <line:336:9, col:16>
|     `-CXXConstructExpr 0x55bd5946aec8 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x55bd5946aeb0 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x55bd5946ae90 <col:16> 'Timestamp' lvalue Var 0x55bd5946a870 't' 'Timestamp'
|-CXXMethodDecl 0x55bd5945be00 <line:341:5, line:343:5> line:341:29 make_usec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x55bd5945bcf0 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55bd5945bd68 <col:57, col:66> col:66 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55bd5946b0c8 <col:72, line:343:5>
|   `-ReturnStmt 0x55bd5946b0b8 <line:342:9, col:51>
|     `-ExprWithCleanups 0x55bd5946b0a0 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x55bd5946b070 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55bd5946b058 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55bd5946b018 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x55bd5946b000 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x55bd5946af48 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55bd5945bcf0 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x55bd5946afc0 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x55bd5946afa8 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x55bd5946af68 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x55bd594604b8 'usec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x55bd5946afe8 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x55bd5946af88 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x55bd5945bd68 'usec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55bd5945bf50 <line:345:5, line:354:5> line:345:29 used make_usec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x55bd5945bec0 <col:39, col:50> col:50 used usec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x55bd5946b510 <col:56, line:354:5>
|   |-DeclStmt 0x55bd5946b2b8 <line:346:9, col:51>
|   | `-VarDecl 0x55bd5946b0f0 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x55bd5946b2a0 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x55bd5946b270 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x55bd5946b258 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x55bd5946b240 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x55bd5946b210 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x55bd5946b1f8 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x55bd5946b1e0 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x55bd5946b1b0 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x55bd5946b470 <line:348:9, col:55> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x55bd5946b320 <col:9, col:14> 'int64_t':'long' lvalue .x 0x55bd59460c18
|   | | `-MemberExpr 0x55bd5946b2f0 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x55bd59461bc8
|   | |   `-DeclRefExpr 0x55bd5946b2d0 <col:9> 'Timestamp' lvalue Var 0x55bd5946b0f0 't' 'Timestamp'
|   | `-BinaryOperator 0x55bd5946b450 <col:18, col:55> 'long' '*'
|   |   |-ImplicitCastExpr 0x55bd5946b420 <col:18> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55bd5946b350 <col:18> 'Timestamp::value_type':'long' lvalue ParmVar 0x55bd5945bec0 'usec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x55bd5946b438 <col:25, col:55> 'long' <IntegralCast>
|   |     `-ParenExpr 0x55bd5946b400 <col:25, col:55> 'int'
|   |       `-BinaryOperator 0x55bd5946b3e0 <col:26, col:43> 'int' '/'
|   |         |-ImplicitCastExpr 0x55bd5946b3b0 <col:26> 'int' <IntegralCast>
|   |         | `-DeclRefExpr 0x55bd5946b370 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55bd59457420 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |         `-ImplicitCastExpr 0x55bd5946b3c8 <col:43> 'int' <IntegralCast>
|   |           `-DeclRefExpr 0x55bd5946b390 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55bd59457270 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x55bd5946b4f8 <line:353:9, col:16>
|     `-CXXConstructExpr 0x55bd5946b4c8 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x55bd5946b4b0 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x55bd5946b490 <col:16> 'Timestamp' lvalue Var 0x55bd5946b0f0 't' 'Timestamp'
|-CXXMethodDecl 0x55bd5945c118 <line:358:5, line:360:5> line:358:29 make_nsec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x55bd5945c008 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55bd5945c080 <col:57, col:66> col:66 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55bd5946b6c8 <col:72, line:360:5>
|   `-ReturnStmt 0x55bd5946b6b8 <line:359:9, col:51>
|     `-ExprWithCleanups 0x55bd5946b6a0 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x55bd5946b670 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55bd5946b658 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55bd5946b618 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x55bd5946b600 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x55bd5946b548 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55bd5945c008 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x55bd5946b5c0 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x55bd5946b5a8 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x55bd5946b568 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x55bd59460600 'nsec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x55bd5946b5e8 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x55bd5946b588 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x55bd5945c080 'nsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55bd5945c268 <line:362:5, line:371:5> line:362:29 make_nsec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x55bd5945c1d8 <col:39, col:50> col:50 used nsec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x55bd59478038 <col:56, line:371:5>
|   |-DeclStmt 0x55bd5946b8b8 <line:363:9, col:51>
|   | `-VarDecl 0x55bd5946b6f0 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x55bd5946b8a0 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x55bd5946b870 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x55bd5946b858 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x55bd5946b840 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x55bd5946b810 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x55bd5946b7f8 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x55bd5946b7e0 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x55bd5946b7b0 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x55bd59477f98 <line:365:9, col:63> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x55bd5946b920 <col:9, col:14> 'int64_t':'long' lvalue .x 0x55bd59460c18
|   | | `-MemberExpr 0x55bd5946b8f0 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x55bd59461bc8
|   | |   `-DeclRefExpr 0x55bd5946b8d0 <col:9> 'Timestamp' lvalue Var 0x55bd5946b6f0 't' 'Timestamp'
|   | `-CallExpr 0x55bd59477f38 <col:18, col:63> 'Timestamp::value_type':'long'
|   |   |-ImplicitCastExpr 0x55bd59477f20 <col:18> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x55bd5946b950 <col:18> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x55bd59461ef8 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|   |   |-ImplicitCastExpr 0x55bd59477f68 <col:28> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55bd5946b970 <col:28> 'Timestamp::value_type':'long' lvalue ParmVar 0x55bd5945c1d8 'nsec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x55bd59477f80 <col:34, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|   |     `-BinaryOperator 0x55bd59477f00 <col:34, col:49> 'int' '/'
|   |       |-ImplicitCastExpr 0x55bd59477ed0 <col:34> 'int' <IntegralCast>
|   |       | `-DeclRefExpr 0x55bd5946b990 <col:34> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55bd594570c0 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |       `-ImplicitCastExpr 0x55bd59477ee8 <col:49> 'int' <IntegralCast>
|   |         `-DeclRefExpr 0x55bd5946b9b0 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55bd59457420 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x55bd59478020 <line:370:9, col:16>
|     `-CXXConstructExpr 0x55bd59477ff0 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x55bd59477fd8 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x55bd59477fb8 <col:16> 'Timestamp' lvalue Var 0x55bd5946b6f0 't' 'Timestamp'
|-CXXMethodDecl 0x55bd5945c358 <line:375:5, line:377:5> line:375:29 epsilon 'Timestamp ()' static inline
| `-CompoundStmt 0x55bd59478178 <col:39, line:377:5>
|   `-ReturnStmt 0x55bd59478168 <line:376:9, col:30>
|     `-ExprWithCleanups 0x55bd59478150 <col:16, col:30> 'Timestamp'
|       `-CXXConstructExpr 0x55bd59478120 <col:16, col:30> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55bd59478108 <col:16, col:30> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55bd594780c8 <col:16, col:30> 'Timestamp' 'void (int, uint32_t)'
|             |-IntegerLiteral 0x55bd59478070 <col:26> 'int' 0
|             `-ImplicitCastExpr 0x55bd594780b0 <col:29> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x55bd59478090 <col:29> 'int' 1
|-CXXMethodDecl 0x55bd5945c418 <line:380:5, line:382:5> line:380:17 clear 'void ()' inline
| `-CompoundStmt 0x55bd59478258 <col:25, line:382:5>
|   `-CXXMemberCallExpr 0x55bd59478210 <line:381:9, col:20> 'void'
|     |-MemberExpr 0x55bd594781a0 <col:9> '<bound member function type>' ->assign 0x55bd5945c618
|     | `-CXXThisExpr 0x55bd59478190 <col:9> 'Timestamp *' implicit this
|     |-IntegerLiteral 0x55bd594781d0 <col:16> 'int' 0
|     `-ImplicitCastExpr 0x55bd59478240 <col:19> 'uint32_t':'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x55bd594781f0 <col:19> 'int' 0
|-CXXMethodDecl 0x55bd5945c618 <line:388:5, line:395:5> line:388:17 used assign 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55bd5945c4c8 <col:24, col:37> col:37 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55bd5945c540 <col:42, col:60> col:51 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55bd594637f0 <col:60> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55bd594637d0 <col:60> 'int' 0
| `-CompoundStmt 0x55bd59478450 <col:63, line:395:5>
|   `-BinaryOperator 0x55bd59478430 <line:390:9, col:49> 'int64_t':'long' lvalue '='
|     |-MemberExpr 0x55bd594782b0 <col:9, col:12> 'int64_t':'long' lvalue .x 0x55bd59460c18
|     | `-MemberExpr 0x55bd59478280 <col:9> 'Timestamp::rep_t' lvalue ->_t 0x55bd59461bc8
|     |   `-CXXThisExpr 0x55bd59478270 <col:9> 'Timestamp *' implicit this
|     `-BinaryOperator 0x55bd59478410 <col:16, col:49> 'long' '+'
|       |-BinaryOperator 0x55bd594783a0 <col:16, col:32> 'long' '*'
|       | |-CStyleCastExpr 0x55bd59478340 <col:16, col:26> 'int64_t':'long' <NoOp>
|       | | `-ImplicitCastExpr 0x55bd59478328 <col:26> 'int64_t':'long' <IntegralCast> part_of_explicit_cast
|       | |   `-ImplicitCastExpr 0x55bd59478310 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue> part_of_explicit_cast
|       | |     `-DeclRefExpr 0x55bd594782e0 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55bd5945c4c8 'sec' 'Timestamp::seconds_type':'int'
|       | `-ImplicitCastExpr 0x55bd59478388 <col:32> 'long' <IntegralCast>
|       |   `-DeclRefExpr 0x55bd59478368 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55bd59457420 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|       `-ImplicitCastExpr 0x55bd594783f8 <col:49> 'long' <IntegralCast>
|         `-ImplicitCastExpr 0x55bd594783e0 <col:49> 'uint32_t':'unsigned int' <LValueToRValue>
|           `-DeclRefExpr 0x55bd594783c0 <col:49> 'uint32_t':'unsigned int' lvalue ParmVar 0x55bd5945c540 'subsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55bd5945c7e8 <line:397:5, line:399:5> line:397:17 used assign_usec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55bd5945c6d8 <col:29, col:42> col:42 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55bd5945c750 <col:47, col:56> col:56 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55bd594785a8 <col:62, line:399:5>
|   `-CXXMemberCallExpr 0x55bd59478560 <line:398:9, col:41> 'void'
|     |-MemberExpr 0x55bd59478478 <col:9> '<bound member function type>' ->assign 0x55bd5945c618
|     | `-CXXThisExpr 0x55bd59478468 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55bd59478590 <col:16> 'Timestamp::seconds_type':'int' <LValueToRValue>
|     | `-DeclRefExpr 0x55bd594784a8 <col:16> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55bd5945c6d8 'sec' 'Timestamp::seconds_type':'int'
|     `-CallExpr 0x55bd59478520 <col:21, col:40> 'uint32_t':'unsigned int'
|       |-ImplicitCastExpr 0x55bd59478508 <col:21> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55bd594784c8 <col:21> 'uint32_t (uint32_t)' lvalue CXXMethod 0x55bd594604b8 'usec_to_subsec' 'uint32_t (uint32_t)'
|       `-ImplicitCastExpr 0x55bd59478548 <col:36> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55bd594784e8 <col:36> 'uint32_t':'unsigned int' lvalue ParmVar 0x55bd5945c750 'usec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55bd5945c9b8 <line:401:5, line:403:5> line:401:17 used assign_nsec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55bd5945c8a8 <col:29, col:42> col:42 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55bd5945c920 <col:47, col:56> col:56 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55bd59478700 <col:62, line:403:5>
|   `-CXXMemberCallExpr 0x55bd594786b8 <line:402:9, col:41> 'void'
|     |-MemberExpr 0x55bd594785d0 <col:9> '<bound member function type>' ->assign 0x55bd5945c618
|     | `-CXXThisExpr 0x55bd594785c0 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55bd594786e8 <col:16> 'Timestamp::seconds_type':'int' <LValueToRValue>
|     | `-DeclRefExpr 0x55bd59478600 <col:16> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55bd5945c8a8 'sec' 'Timestamp::seconds_type':'int'
|     `-CallExpr 0x55bd59478678 <col:21, col:40> 'uint32_t':'unsigned int'
|       |-ImplicitCastExpr 0x55bd59478660 <col:21> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55bd59478620 <col:21> 'uint32_t (uint32_t)' lvalue CXXMethod 0x55bd59460600 'nsec_to_subsec' 'uint32_t (uint32_t)'
|       `-ImplicitCastExpr 0x55bd594786a0 <col:36> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55bd59478640 <col:36> 'uint32_t':'unsigned int' lvalue ParmVar 0x55bd5945c920 'nsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55bd5945cb88 <line:408:5, col:86> col:17 set 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55bd5945ca78 <col:21, col:34> col:34 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55bd5945caf0 <col:39, col:57> col:48 subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55bd59463828 <col:57> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55bd59463808 <col:57> 'int' 0
| `-DeprecatedAttr 0x55bd5945cc38 <col:75> "" ""
|-CXXMethodDecl 0x55bd5945cdc8 <line:411:5, col:85> col:17 set_usec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55bd5945ccb8 <col:26, col:39> col:39 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55bd5945cd30 <col:44, col:53> col:53 usec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55bd5945ce78 <col:74> "" ""
|-CXXMethodDecl 0x55bd5945d008 <line:414:5, col:85> col:17 set_nsec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55bd5945cef8 <col:26, col:39> col:39 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55bd5945cf70 <col:44, col:53> col:53 nsec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55bd5945d0b8 <col:74> "" ""
|-CXXMethodDecl 0x55bd5945d148 <line:417:5, col:53> col:17 set_now 'void ()' inline
| `-DeprecatedAttr 0x55bd5945d1e8 <col:42> "" ""
|-CXXMethodDecl 0x55bd5945fa20 <line:420:5, col:53> col:9 set_timeval_ioctl 'int (int, int)'
| |-ParmVarDecl 0x55bd5945f900 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x55bd5945f980 <col:35, col:39> col:39 ioctl_selector 'int'
|-CXXMethodDecl 0x55bd5945faf0 <line:432:5, col:33> col:29 now 'Timestamp ()' static inline
|-CXXMethodDecl 0x55bd5945fbb0 <line:438:5, col:56> col:45 used assign_now 'void ()'
| |-NoInlineAttr 0x55bd5945fc50 <col:20>
| `-OptimizeNoneAttr 0x55bd5945fca8 <col:30>
|-CXXMethodDecl 0x55bd5945fcf0 <line:446:5, col:36> col:29 used recent 'Timestamp ()' static inline
|-CXXMethodDecl 0x55bd5945fdb0 <line:452:5, col:31> col:17 used assign_recent 'void ()' inline
|-CXXMethodDecl 0x55bd5945fe70 <line:466:5, col:40> col:29 now_steady 'Timestamp ()' static inline
|-CXXMethodDecl 0x55bd5945ff30 <line:472:5, col:35> col:17 used assign_now_steady 'void ()' inline
|-CXXMethodDecl 0x55bd5945fff0 <line:481:5, col:43> col:29 used recent_steady 'Timestamp ()' static inline
|-CXXMethodDecl 0x55bd594600b0 <line:487:5, col:38> col:17 used assign_recent_steady 'void ()' inline
|-CXXMethodDecl 0x55bd59460170 <line:496:5, col:22> col:12 unparse 'String () const'
|-CXXMethodDecl 0x55bd59460230 <line:501:5, col:31> col:12 unparse_interval 'String () const'
|-CXXMethodDecl 0x55bd59460370 <line:510:5, line:512:5> line:510:28 used msec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55bd594602e0 <col:43, col:52> col:52 used msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55bd59478848 <col:58, line:512:5>
|   `-ReturnStmt 0x55bd59478838 <line:511:9, col:53>
|     `-BinaryOperator 0x55bd59478818 <col:16, col:53> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x55bd594787e8 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55bd59478718 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55bd594602e0 'msec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55bd59478800 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55bd594787c8 <col:23, col:53> 'int'
|           `-BinaryOperator 0x55bd594787a8 <col:24, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x55bd59478778 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55bd59478738 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55bd59457420 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55bd59478790 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55bd59478758 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55bd59457390 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55bd594604b8 <line:514:5, line:516:5> line:514:28 used usec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55bd59460428 <col:43, col:52> col:52 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55bd59478990 <col:58, line:516:5>
|   `-ReturnStmt 0x55bd59478980 <line:515:9, col:53>
|     `-BinaryOperator 0x55bd59478960 <col:16, col:53> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x55bd59478930 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55bd59478860 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55bd59460428 'usec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55bd59478948 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55bd59478910 <col:23, col:53> 'int'
|           `-BinaryOperator 0x55bd594788f0 <col:24, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x55bd594788c0 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55bd59478880 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55bd59457420 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55bd594788d8 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55bd594788a0 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55bd59457270 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55bd59460600 <line:518:5, line:520:5> line:518:28 used nsec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55bd59460570 <col:43, col:52> col:52 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55bd59478ad8 <col:58, line:520:5>
|   `-ReturnStmt 0x55bd59478ac8 <line:519:9, col:53>
|     `-BinaryOperator 0x55bd59478aa8 <col:16, col:53> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x55bd59478a78 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55bd594789a8 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55bd59460570 'nsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55bd59478a90 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55bd59478a58 <col:23, col:53> 'int'
|           `-BinaryOperator 0x55bd59478a38 <col:24, col:39> 'int' '/'
|             |-ImplicitCastExpr 0x55bd59478a08 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55bd594789c8 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55bd594570c0 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55bd59478a20 <col:39> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55bd594789e8 <col:39> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55bd59457420 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55bd59460748 <line:522:5, line:524:5> line:522:28 used subsec_to_msec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55bd594606b8 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55bd59478c20 <col:60, line:524:5>
|   `-ReturnStmt 0x55bd59478c10 <line:523:9, col:55>
|     `-BinaryOperator 0x55bd59478bf0 <col:16, col:55> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x55bd59478bc0 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55bd59478af0 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55bd594606b8 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55bd59478bd8 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55bd59478ba0 <col:25, col:55> 'int'
|           `-BinaryOperator 0x55bd59478b80 <col:26, col:43> 'int' '/'
|             |-ImplicitCastExpr 0x55bd59478b50 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55bd59478b10 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55bd59457420 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55bd59478b68 <col:43> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55bd59478b30 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55bd59457390 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55bd59460890 <line:526:5, line:528:5> line:526:28 used subsec_to_usec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55bd59460800 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55bd59478d68 <col:60, line:528:5>
|   `-ReturnStmt 0x55bd59478d58 <line:527:9, col:55>
|     `-BinaryOperator 0x55bd59478d38 <col:16, col:55> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x55bd59478d08 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55bd59478c38 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55bd59460800 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55bd59478d20 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55bd59478ce8 <col:25, col:55> 'int'
|           `-BinaryOperator 0x55bd59478cc8 <col:26, col:43> 'int' '/'
|             |-ImplicitCastExpr 0x55bd59478c98 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55bd59478c58 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55bd59457420 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55bd59478cb0 <col:43> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55bd59478c78 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55bd59457270 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55bd594609d8 <line:530:5, line:532:5> line:530:28 used subsec_to_nsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55bd59460948 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55bd59478eb0 <col:60, line:532:5>
|   `-ReturnStmt 0x55bd59478ea0 <line:531:9, col:55>
|     `-BinaryOperator 0x55bd59478e80 <col:16, col:55> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x55bd59478e50 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55bd59478d80 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55bd59460948 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55bd59478e68 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55bd59478e30 <col:25, col:55> 'int'
|           `-BinaryOperator 0x55bd59478e10 <col:26, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x55bd59478de0 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55bd59478da0 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55bd594570c0 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55bd59478df8 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55bd59478dc0 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55bd59457420 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXRecordDecl 0x55bd59460a80 prev 0x55bd594578c0 <line:539:5, line:566:5> line:539:11 referenced union rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55bd59460b78 <col:5, col:11> col:11 implicit union rep_t
| |-FieldDecl 0x55bd59460c18 <line:541:9, col:17> col:17 referenced x 'int64_t':'long'
| |-CXXConstructorDecl 0x55bd594679e0 <line:539:11> col:11 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55bd59467dc8 <col:11>
| |-CXXConstructorDecl 0x55bd59467ac0 <col:11> col:11 implicit used constexpr rep_t 'void (const Timestamp::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55bd59467ba8 <col:11> col:11 'const Timestamp::rep_t &'
| | `-CompoundStmt 0x55bd59468510 <col:11>
| |-CXXConstructorDecl 0x55bd59467c48 <col:11> col:11 implicit used constexpr rep_t 'void (Timestamp::rep_t &&) noexcept' inline default trivial
| | |-ParmVarDecl 0x55bd59467d58 <col:11> col:11 'Timestamp::rep_t &&'
| | `-CompoundStmt 0x55bd59469d68 <col:11>
| |-CXXDestructorDecl 0x55bd59469078 <col:11> col:11 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x55bd5916fa08 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(const Timestamp::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55bd5916fb18 <col:11> col:11 'const Timestamp::rep_t &'
| | `-CompoundStmt 0x55bd591703e0 <col:11>
| |   `-ReturnStmt 0x55bd591703d0 <col:11>
| |     `-UnaryOperator 0x55bd591703b8 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x55bd591703a8 <col:11> 'Timestamp::rep_t *' this
| `-CXXMethodDecl 0x55bd5916fb88 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(Timestamp::rep_t &&) noexcept' inline default trivial
|   |-ParmVarDecl 0x55bd5916fc98 <col:11> col:11 'Timestamp::rep_t &&'
|   `-CompoundStmt 0x55bd595da1c0 <col:11>
|     `-ReturnStmt 0x55bd595da1b0 <col:11>
|       `-UnaryOperator 0x55bd595da198 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55bd595da188 <col:11> 'Timestamp::rep_t *' this
|-EnumDecl 0x55bd59460c80 <line:571:5, line:577:5> line:571:10 referenced warp_class_type
| |-EnumConstantDecl 0x55bd59460d80 <line:572:9, col:21> col:9 warp_none 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x55bd59460f80 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55bd59460d60 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x55bd59460d40 <col:21> 'int' 0
| |-EnumConstantDecl 0x55bd59460e10 <line:573:9, col:23> col:9 warp_linear 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x55bd59460f98 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55bd59460df0 <col:23> 'int' Int: 1
| |     `-IntegerLiteral 0x55bd59460dd0 <col:23> 'int' 1
| |-EnumConstantDecl 0x55bd59460ea0 <line:574:9, col:23> col:9 referenced warp_nowait 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x55bd59460fb0 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55bd59460e80 <col:23> 'int' Int: 2
| |     `-IntegerLiteral 0x55bd59460e60 <col:23> 'int' 2
| `-EnumConstantDecl 0x55bd59460f30 <line:576:9, col:27> col:9 warp_simulation 'Timestamp::warp_class_type'
|   `-ImplicitCastExpr 0x55bd59460fc8 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55bd59460f10 <col:27> 'int' Int: 3
|       `-IntegerLiteral 0x55bd59460ef0 <col:27> 'int' 3
|-CXXMethodDecl 0x55bd59461008 <line:581:5, col:34> col:23 warp_class 'int ()' static inline
|-CXXMethodDecl 0x55bd594610d0 <line:588:5, col:37> col:26 warp_speed 'double ()' static inline
|-CXXMethodDecl 0x55bd594612d8 <line:621:5, col:65> col:17 warp_set_class 'void (Timestamp::warp_class_type, double)' static
| |-ParmVarDecl 0x55bd59461180 <col:32, col:48> col:48 w 'Timestamp::warp_class_type'
| `-ParmVarDecl 0x55bd59461200 <col:51, col:62> col:58 s 'double' cinit
|   `-FloatingLiteral 0x55bd59463840 <col:62> 'double' 1.000000e+00
|-CXXMethodDecl 0x55bd594614e8 <line:628:5, col:82> col:17 warp_set_now 'void (const Timestamp &, const Timestamp &)' static
| |-ParmVarDecl 0x55bd59461398 <col:30, col:47> col:47 t_system 'const Timestamp &'
| `-ParmVarDecl 0x55bd59461410 <col:57, col:74> col:74 t_steady 'const Timestamp &'
|-CXXMethodDecl 0x55bd594615b8 <line:632:5, col:40> col:22 warp_real_delay 'Timestamp () const' inline
|-CXXMethodDecl 0x55bd59461678 <line:635:5, col:37> col:24 used warp_jumping 'bool ()' static inline
|-CXXMethodDecl 0x55bd594617e8 <line:640:5, col:57> col:17 warp_jump_steady 'void (const Timestamp &)' static
| `-ParmVarDecl 0x55bd59461728 <col:34, col:51> col:51 expiry 'const Timestamp &'
|-CXXMethodDecl 0x55bd594618b0 <line:647:5, col:42> col:29 now_unwarped 'Timestamp ()' static inline
|-CXXMethodDecl 0x55bd59461970 <line:653:5, col:37> col:17 used assign_now_unwarped 'void ()' inline
|-CXXMethodDecl 0x55bd59461a30 <line:659:5, col:49> col:29 now_steady_unwarped 'Timestamp ()' static inline
|-CXXMethodDecl 0x55bd59461af0 <line:666:5, col:44> col:17 used assign_now_steady_unwarped 'void ()' inline
|-AccessSpecDecl 0x55bd59461b90 <line:670:3, col:10> col:3 private
|-FieldDecl 0x55bd59461bc8 <line:672:5, col:11> col:11 referenced _t 'Timestamp::rep_t'
|-CXXMethodDecl 0x55bd59461c38 <line:674:5, line:684:5> line:674:17 used add_fix 'void ()' inline
| `-CompoundStmt 0x55bd59478ec8 <col:27, line:684:5>
|-CXXMethodDecl 0x55bd59461cf8 <line:686:5, line:696:5> line:686:17 used sub_fix 'void ()' inline
| `-CompoundStmt 0x55bd59478ed8 <col:27, line:696:5>
|-CXXMethodDecl 0x55bd59461ef8 <line:698:5, line:700:5> line:698:30 used value_div 'Timestamp::value_type (Timestamp::value_type, uint32_t)' static inline
| |-ParmVarDecl 0x55bd59461da8 <col:40, col:51> col:51 used a 'Timestamp::value_type':'long'
| |-ParmVarDecl 0x55bd59461e20 <col:54, col:63> col:63 used b 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55bd59479060 <col:66, line:700:5>
|   `-ReturnStmt 0x55bd59479050 <line:699:9, col:31>
|     `-CallExpr 0x55bd59478ff0 <col:16, col:31> 'int64_t':'long'
|       |-ImplicitCastExpr 0x55bd59478fd8 <col:16> 'int64_t (*)(int64_t, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55bd59478f88 <col:16> 'int64_t (int64_t, uint32_t)' lvalue Function 0x55bd592e42a8 'int_divide' 'int64_t (int64_t, uint32_t)'
|       |-ImplicitCastExpr 0x55bd59479020 <col:27> 'Timestamp::value_type':'long' <LValueToRValue>
|       | `-DeclRefExpr 0x55bd59478f48 <col:27> 'Timestamp::value_type':'long' lvalue ParmVar 0x55bd59461da8 'a' 'Timestamp::value_type':'long'
|       `-ImplicitCastExpr 0x55bd59479038 <col:30> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55bd59478f68 <col:30> 'uint32_t':'unsigned int' lvalue ParmVar 0x55bd59461e20 'b' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55bd59462268 <line:702:5, line:707:5> line:702:24 value_div_mod 'void (int32_t &, int32_t &, Timestamp::value_type, uint32_t)' static inline
| |-ParmVarDecl 0x55bd59461fb8 <col:38, col:47> col:47 used div 'int32_t &'
| |-ParmVarDecl 0x55bd59462030 <col:52, col:61> col:61 used rem 'int32_t &'
| |-ParmVarDecl 0x55bd594620a8 <line:703:38, col:49> col:49 used a 'Timestamp::value_type':'long'
| |-ParmVarDecl 0x55bd59462120 <col:52, col:61> col:61 used b 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55bd594793b0 <col:64, line:707:5>
|   |-DeclStmt 0x55bd594790f0 <line:704:9, col:24>
|   | `-VarDecl 0x55bd59479088 <col:9, col:20> col:20 used quot 'Timestamp::value_type':'long'
|   |-BinaryOperator 0x55bd59479300 <line:705:9, col:39> 'int32_t':'int' lvalue '='
|   | |-DeclRefExpr 0x55bd59479108 <col:9> 'int32_t':'int' lvalue ParmVar 0x55bd59462030 'rem' 'int32_t &'
|   | `-ImplicitCastExpr 0x55bd594792e8 <col:15, col:39> 'int32_t':'int' <IntegralCast>
|   |   `-CallExpr 0x55bd59479280 <col:15, col:39> 'uint32_t':'unsigned int'
|   |     |-ImplicitCastExpr 0x55bd59479268 <col:15> 'uint32_t (*)(int64_t, uint32_t, int64_t &)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55bd594791e8 <col:15> 'uint32_t (int64_t, uint32_t, int64_t &)' lvalue Function 0x55bd592e9578 'int_remainder' 'uint32_t (int64_t, uint32_t, int64_t &)'
|   |     |-ImplicitCastExpr 0x55bd594792b8 <col:29> 'Timestamp::value_type':'long' <LValueToRValue>
|   |     | `-DeclRefExpr 0x55bd59479188 <col:29> 'Timestamp::value_type':'long' lvalue ParmVar 0x55bd594620a8 'a' 'Timestamp::value_type':'long'
|   |     |-ImplicitCastExpr 0x55bd594792d0 <col:32> 'uint32_t':'unsigned int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x55bd594791a8 <col:32> 'uint32_t':'unsigned int' lvalue ParmVar 0x55bd59462120 'b' 'uint32_t':'unsigned int'
|   |     `-DeclRefExpr 0x55bd594791c8 <col:35> 'Timestamp::value_type':'long' lvalue Var 0x55bd59479088 'quot' 'Timestamp::value_type':'long'
|   `-BinaryOperator 0x55bd59479390 <line:706:9, col:15> 'int32_t':'int' lvalue '='
|     |-DeclRefExpr 0x55bd59479320 <col:9> 'int32_t':'int' lvalue ParmVar 0x55bd59461fb8 'div' 'int32_t &'
|     `-ImplicitCastExpr 0x55bd59479378 <col:15> 'int32_t':'int' <IntegralCast>
|       `-ImplicitCastExpr 0x55bd59479360 <col:15> 'Timestamp::value_type':'long' <LValueToRValue>
|         `-DeclRefExpr 0x55bd59479340 <col:15> 'Timestamp::value_type':'long' lvalue Var 0x55bd59479088 'quot' 'Timestamp::value_type':'long'
|-CXXMethodDecl 0x55bd59462508 <line:709:5, col:67> col:17 used assign_now 'void (bool, bool, bool)' inline
| |-ParmVarDecl 0x55bd59462338 <col:28, col:33> col:33 recent 'bool'
| |-ParmVarDecl 0x55bd594623b0 <col:41, col:46> col:46 steady 'bool'
| `-ParmVarDecl 0x55bd59462428 <col:54, col:59> col:59 unwarped 'bool'
|-CXXMethodDecl 0x55bd594627a8 <line:712:5, col:98> col:24 warp_adjust 'void (bool, const Timestamp &, const Timestamp &)' static inline
| |-ParmVarDecl 0x55bd594625d0 <col:36, col:41> col:41 steady 'bool'
| |-ParmVarDecl 0x55bd59462648 <col:49, col:66> col:66 t_raw 'const Timestamp &'
| `-ParmVarDecl 0x55bd594626c0 <col:73, col:90> col:90 t_warped 'const Timestamp &'
|-CXXMethodDecl 0x55bd59462938 <line:713:5, col:42> col:22 warped 'Timestamp (bool) const' inline
| `-ParmVarDecl 0x55bd59462870 <col:29, col:34> col:34 steady 'bool'
|-CXXMethodDecl 0x55bd59462b38 <line:714:5, col:41> col:10 used warp 'void (bool, bool)'
| |-ParmVarDecl 0x55bd594629f0 <col:15, col:20> col:20 steady 'bool'
| `-ParmVarDecl 0x55bd59462a68 <col:28, col:33> col:33 from_now 'bool'
|-FriendDecl 0x55bd59462e08 <line:717:5, col:73> col:24
| `-FunctionDecl 0x55bd59462d48 parent 0x55bd58f62278 <col:5, col:73> col:24 used operator== 'bool (const Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x55bd59462bf8 <col:35, col:52> col:52 a 'const Timestamp &'
|   `-ParmVarDecl 0x55bd59462c70 <col:55, col:72> col:72 b 'const Timestamp &'
|-FriendDecl 0x55bd59463028 <line:718:5, col:72> col:24
| `-FunctionDecl 0x55bd59462f68 parent 0x55bd58f62278 <col:5, col:72> col:24 used operator< 'bool (const Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x55bd59462e58 <col:34, col:51> col:51 a 'const Timestamp &'
|   `-ParmVarDecl 0x55bd59462ed0 <col:54, col:71> col:71 b 'const Timestamp &'
|-FriendDecl 0x55bd594631f0 <line:719:5, col:57> col:29
| `-FunctionDecl 0x55bd59463138 parent 0x55bd58f62278 <col:5, col:57> col:29 operator- 'Timestamp (const Timestamp &)' inline
|   `-ParmVarDecl 0x55bd59463078 <col:39, col:56> col:56 b 'const Timestamp &'
|-FriendDecl 0x55bd59463478 <line:720:5, col:73> col:30
| `-FunctionDecl 0x55bd594633b8 parent 0x55bd58f62278 <col:5, col:73> col:30 used operator+= 'Timestamp &(Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x55bd59463268 <col:41, col:52> col:52 a 'Timestamp &'
|   `-ParmVarDecl 0x55bd594632e0 <col:55, col:72> col:72 b 'const Timestamp &'
|-FriendDecl 0x55bd59463698 <line:721:5, col:73> col:30
| `-FunctionDecl 0x55bd594635d8 parent 0x55bd58f62278 <col:5, col:73> col:30 used operator-= 'Timestamp &(Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x55bd594634c8 <col:41, col:52> col:52 a 'Timestamp &'
|   `-ParmVarDecl 0x55bd59463540 <col:55, col:72> col:72 b 'const Timestamp &'
|-CXXConstructorDecl 0x55bd59468f20 <line:122:7> col:7 implicit used constexpr Timestamp 'void (const Timestamp &) noexcept' inline default trivial
| |-ParmVarDecl 0x55bd59469008 <col:7> col:7 used 'const Timestamp &'
| |-CXXCtorInitializer Field 0x55bd59461bc8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55bd59469a78 <col:7> 'Timestamp::rep_t' 'void (const Timestamp::rep_t &) noexcept'
| |   `-MemberExpr 0x55bd59469a30 <col:7> 'const Timestamp::rep_t' lvalue ._t 0x55bd59461bc8
| |     `-DeclRefExpr 0x55bd59469a10 <col:7> 'const Timestamp' lvalue ParmVar 0x55bd59469008 '' 'const Timestamp &'
| `-CompoundStmt 0x55bd59469ad8 <col:7>
|-CXXConstructorDecl 0x55bd59469188 <col:7> col:7 implicit used constexpr Timestamp 'void (Timestamp &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55bd59469298 <col:7> col:7 used 'Timestamp &&'
| |-CXXCtorInitializer Field 0x55bd59461bc8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55bd59469d78 <col:7> 'Timestamp::rep_t' 'void (Timestamp::rep_t &&) noexcept'
| |   `-MemberExpr 0x55bd59469d20 <col:7> 'Timestamp::rep_t' xvalue ._t 0x55bd59461bc8
| |     `-CXXStaticCastExpr 0x55bd59469cf0 <col:7> 'Timestamp' xvalue static_cast<class Timestamp &&> <NoOp>
| |       `-DeclRefExpr 0x55bd59469cc0 <col:7> 'Timestamp' lvalue ParmVar 0x55bd59469298 '' 'Timestamp &&'
| `-CompoundStmt 0x55bd59469dd8 <col:7>
|-CXXDestructorDecl 0x55bd59469348 <col:7> col:7 implicit referenced ~Timestamp 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55bd5916f858 <col:7> col:7 implicit used operator= 'Timestamp &(const Timestamp &) noexcept' inline default trivial
| |-ParmVarDecl 0x55bd5916f968 <col:7> col:7 used 'const Timestamp &'
| `-CompoundStmt 0x55bd59170458 <col:7>
|   |-CXXMemberCallExpr 0x55bd591703f8 <col:7> 'Timestamp::rep_t' lvalue
|   | |-MemberExpr 0x55bd59170338 <col:7> '<bound member function type>' .operator= 0x55bd5916fa08
|   | | `-MemberExpr 0x55bd59170248 <col:7> 'Timestamp::rep_t' lvalue ->_t 0x55bd59461bc8
|   | |   `-CXXThisExpr 0x55bd59170238 <col:7> 'Timestamp *' this
|   | `-MemberExpr 0x55bd59170308 <col:7> 'const Timestamp::rep_t' lvalue ._t 0x55bd59461bc8
|   |   `-DeclRefExpr 0x55bd591702e8 <col:7> 'const Timestamp' lvalue ParmVar 0x55bd5916f968 '' 'const Timestamp &'
|   `-ReturnStmt 0x55bd59170448 <col:7>
|     `-UnaryOperator 0x55bd59170430 <col:7> 'Timestamp' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55bd59170420 <col:7> 'Timestamp *' this
`-CXXMethodDecl 0x55bd5916fd08 <col:7> col:7 implicit used operator= 'Timestamp &(Timestamp &&) noexcept' inline default trivial
  |-ParmVarDecl 0x55bd5916fe18 <col:7> col:7 used 'Timestamp &&'
  `-CompoundStmt 0x55bd595da238 <col:7>
    |-CXXMemberCallExpr 0x55bd595da1d8 <col:7> 'Timestamp::rep_t' lvalue
    | |-MemberExpr 0x55bd595da140 <col:7> '<bound member function type>' .operator= 0x55bd5916fb88
    | | `-MemberExpr 0x55bd595da010 <col:7> 'Timestamp::rep_t' lvalue ->_t 0x55bd59461bc8
    | |   `-CXXThisExpr 0x55bd595da000 <col:7> 'Timestamp *' this
    | `-MemberExpr 0x55bd595da110 <col:7> 'Timestamp::rep_t' xvalue ._t 0x55bd59461bc8
    |   `-CXXStaticCastExpr 0x55bd595da0e0 <col:7> 'Timestamp' xvalue static_cast<class Timestamp &&> <NoOp>
    |     `-DeclRefExpr 0x55bd595da0b0 <col:7> 'Timestamp' lvalue ParmVar 0x55bd5916fe18 '' 'Timestamp &&'
    `-ReturnStmt 0x55bd595da228 <col:7>
      `-UnaryOperator 0x55bd595da210 <col:7> 'Timestamp' lvalue prefix '*' cannot overflow
        `-CXXThisExpr 0x55bd595da200 <col:7> 'Timestamp *' this

Layout: <CGRecordLayout
  LLVMType:%class.Timestamp = type { %"union.Timestamp::rep_t" }
  NonVirtualBaseLLVMType:%class.Timestamp = type { %"union.Timestamp::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55bd595f0928 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'TimerSet::heap_element'
|-CXXRecordDecl 0x55bd595f0b38 prev 0x55bd595f0928 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55bd595f1d40 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<heap_element>::type':'sized_array_memory<16>'
| `-ElaboratedType 0x55bd595f1cf0 'typename array_memory<heap_element>::type' sugar
|   `-TypedefType 0x55bd595f1cd0 'conditional<true, sized_array_memory<16>, typed_array_memory<TimerSet::heap_element> >::type' sugar
|     |-Typedef 0x55bd595f1b80 'type'
|     `-SubstTemplateTypeParmType 0x55bd595f19a0 'sized_array_memory<16>' sugar
|       |-TemplateTypeParmType 0x55bd5922c210 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55bd5922c1b8 'T'
|       `-RecordType 0x55bd595f14f0 'sized_array_memory<16>'
|         `-ClassTemplateSpecialization 0x55bd595f1408 'sized_array_memory'
|-FieldDecl 0x55bd595f5970 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<TimerSet::heap_element>::array_memory_type>':'vector_memory<sized_array_memory<16> >' mutable
|-AccessSpecDecl 0x55bd595f59c0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55bd595f59f8 <line:118:5, col:15> col:15 value_type 'TimerSet::heap_element':'TimerSet::heap_element'
| `-SubstTemplateTypeParmType 0x55bd595f0bd0 'TimerSet::heap_element' sugar
|   |-TemplateTypeParmType 0x55bd59264120 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55bd592640c8 'T'
|   `-RecordType 0x55bd595efad0 'TimerSet::heap_element'
|     `-CXXRecord 0x55bd595efa40 'heap_element'
|-TypedefDecl 0x55bd595f5ab8 <line:119:5, col:16> col:16 reference 'TimerSet::heap_element &'
| `-LValueReferenceType 0x55bd595f5a80 'TimerSet::heap_element &'
|   `-SubstTemplateTypeParmType 0x55bd595f0bd0 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x55bd59264120 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55bd592640c8 'T'
|     `-RecordType 0x55bd595efad0 'TimerSet::heap_element'
|       `-CXXRecord 0x55bd595efa40 'heap_element'
|-TypedefDecl 0x55bd595f5b48 <line:120:5, col:22> col:22 const_reference 'const TimerSet::heap_element &'
| `-LValueReferenceType 0x55bd595f5b10 'const TimerSet::heap_element &'
|   `-QualType 0x55bd595f0bd1 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x55bd595f0bd0 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x55bd59264120 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55bd592640c8 'T'
|       `-RecordType 0x55bd595efad0 'TimerSet::heap_element'
|         `-CXXRecord 0x55bd595efa40 'heap_element'
|-TypedefDecl 0x55bd595f5bd8 <line:121:5, col:16> col:16 pointer 'TimerSet::heap_element *'
| `-PointerType 0x55bd595f5ba0 'TimerSet::heap_element *'
|   `-SubstTemplateTypeParmType 0x55bd595f0bd0 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x55bd59264120 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55bd592640c8 'T'
|     `-RecordType 0x55bd595efad0 'TimerSet::heap_element'
|       `-CXXRecord 0x55bd595efa40 'heap_element'
|-TypedefDecl 0x55bd595f5c98 <line:122:5, col:22> col:22 const_pointer 'const TimerSet::heap_element *'
| `-PointerType 0x55bd595f5c60 'const TimerSet::heap_element *'
|   `-QualType 0x55bd595f0bd1 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x55bd595f0bd0 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x55bd59264120 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55bd592640c8 'T'
|       `-RecordType 0x55bd595efad0 'TimerSet::heap_element'
|         `-CXXRecord 0x55bd595efa40 'heap_element'
|-TypedefDecl 0x55bd595f68f0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<heap_element>::type':'const TimerSet::heap_element &'
| `-ElaboratedType 0x55bd595f68a0 'typename fast_argument<heap_element>::type' sugar
|   `-TypedefType 0x55bd595f6880 'fast_argument<TimerSet::heap_element, true>::type' sugar
|     |-Typedef 0x55bd595f67b8 'type'
|     `-LValueReferenceType 0x55bd595f6780 'const TimerSet::heap_element &'
|       `-QualType 0x55bd595f6521 'const TimerSet::heap_element' const
|         `-SubstTemplateTypeParmType 0x55bd595f6520 'TimerSet::heap_element' sugar
|           |-TemplateTypeParmType 0x55bd592368e0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55bd59236888 'T'
|           `-RecordType 0x55bd595efad0 'TimerSet::heap_element'
|             `-CXXRecord 0x55bd595efa40 'heap_element'
|-TypedefDecl 0x55bd595f6958 <line:126:5, col:22> col:22 const_access_type 'const TimerSet::heap_element &'
| `-LValueReferenceType 0x55bd595f5b10 'const TimerSet::heap_element &'
|   `-QualType 0x55bd595f0bd1 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x55bd595f0bd0 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x55bd59264120 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55bd592640c8 'T'
|       `-RecordType 0x55bd595efad0 'TimerSet::heap_element'
|         `-CXXRecord 0x55bd595efa40 'heap_element'
|-TypedefDecl 0x55bd595f69b0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55bd58f62370 'int'
|-TypedefDecl 0x55bd595f6a18 <line:130:5, col:16> col:16 iterator 'TimerSet::heap_element *'
| `-PointerType 0x55bd595f5ba0 'TimerSet::heap_element *'
|   `-SubstTemplateTypeParmType 0x55bd595f0bd0 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x55bd59264120 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55bd592640c8 'T'
|     `-RecordType 0x55bd595efad0 'TimerSet::heap_element'
|       `-CXXRecord 0x55bd595efa40 'heap_element'
|-TypedefDecl 0x55bd595f6a80 <line:131:5, col:22> col:22 const_iterator 'const TimerSet::heap_element *'
| `-PointerType 0x55bd595f5c60 'const TimerSet::heap_element *'
|   `-QualType 0x55bd595f0bd1 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x55bd595f0bd0 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x55bd59264120 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55bd592640c8 'T'
|       `-RecordType 0x55bd595efad0 'TimerSet::heap_element'
|         `-CXXRecord 0x55bd595efa40 'heap_element'
|-EnumDecl 0x55bd595f6ad8 <line:134:5> col:5
| `-EnumConstantDecl 0x55bd595f6bd0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<TimerSet::heap_element>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55bd595f6bb0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55bd592657a8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55bd59265780 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55bd59265760 <col:40> 'int' 1
|-CXXConstructorDecl 0x55bd595f6c58 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55bd595f6ee8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x55bd595f6d10 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55bd595f6db0 <col:41, col:61> col:61 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXConstructorDecl 0x55bd595f71a8 <line:139:5, col:37> col:12 Vector 'void (const Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x55bd595f7090 <col:19, col:36> col:36 x 'const Vector<TimerSet::heap_element> &'
|-CXXConstructorDecl 0x55bd595f7468 <line:141:5, col:32> col:12 Vector 'void (Vector<TimerSet::heap_element> &&)' inline
| `-ParmVarDecl 0x55bd595f7350 <col:19, col:31> col:31 x 'Vector<TimerSet::heap_element> &&'
|-CXXMethodDecl 0x55bd595f77b0 <line:144:5, col:51> col:23 operator= 'Vector<TimerSet::heap_element> &(const Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x55bd595f7690 <col:33, col:50> col:50 x 'const Vector<TimerSet::heap_element> &'
|-CXXMethodDecl 0x55bd595f7ac0 <line:146:5, col:46> col:23 operator= 'Vector<TimerSet::heap_element> &(Vector<TimerSet::heap_element> &&)' inline
| `-ParmVarDecl 0x55bd595f79a0 <col:33, col:45> col:45 x 'Vector<TimerSet::heap_element> &&'
|-CXXMethodDecl 0x55bd595f7db0 <line:148:5, col:70> col:23 assign 'Vector<TimerSet::heap_element> &(Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x55bd595f7bf8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55bd595f7c70 <col:43, col:69> col:63 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x55bd595f7f08 <line:150:5, col:55> col:49 begin 'Vector<TimerSet::heap_element>::iterator ()'
| |-NoInlineAttr 0x55bd595f7fe8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55bd595f8040 <col:30> Inherited
|-CXXMethodDecl 0x55bd595f8088 <line:151:5, col:53> col:49 end 'Vector<TimerSet::heap_element>::iterator ()'
| |-NoInlineAttr 0x55bd595f8138 <col:20> Inherited
| `-OptimizeNoneAttr 0x55bd595f8190 <col:30> Inherited
|-CXXMethodDecl 0x55bd595f8258 <line:152:5, col:63> col:55 begin 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x55bd595f8308 <col:20> Inherited
| `-OptimizeNoneAttr 0x55bd595f8360 <col:30> Inherited
|-CXXMethodDecl 0x55bd595f87d0 <line:153:5, col:61> col:55 end 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x55bd595f8880 <col:20> Inherited
| `-OptimizeNoneAttr 0x55bd595f88d8 <col:30> Inherited
|-CXXMethodDecl 0x55bd595f8920 <line:154:5, col:64> col:55 cbegin 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x55bd595f89d0 <col:20> Inherited
| `-OptimizeNoneAttr 0x55bd595f8a28 <col:30> Inherited
|-CXXMethodDecl 0x55bd595f8a70 <line:155:5, col:62> col:55 cend 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x55bd595f8b20 <col:20> Inherited
| `-OptimizeNoneAttr 0x55bd595f8b78 <col:30> Inherited
|-CXXMethodDecl 0x55bd595f8ba0 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55bd595f8c50 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55bd595f8d00 <line:159:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x55bd595f8ec0 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x55bd595f8db0 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55bd595f8e28 <col:37, col:63> col:57 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x55bd595f9010 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55bd595f8f80 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55bd595f91b8 <line:163:5, col:65> col:43 operator[] 'TimerSet::heap_element &(Vector::size_type)'
| |-ParmVarDecl 0x55bd595f90c8 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55bd595f9270 <col:20>
| `-OptimizeNoneAttr 0x55bd595f92c8 <col:30>
|-CXXMethodDecl 0x55bd595f93e8 <line:164:5, col:73> col:49 operator[] 'const TimerSet::heap_element &(Vector::size_type) const'
| |-ParmVarDecl 0x55bd595f92f0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55bd595f94a0 <col:20>
| `-OptimizeNoneAttr 0x55bd595f94f8 <col:30>
|-CXXMethodDecl 0x55bd595f95b0 <line:165:5, col:29> col:15 at 'TimerSet::heap_element &(Vector::size_type)' inline
| `-ParmVarDecl 0x55bd595f9520 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55bd595f96f8 <line:166:5, col:37> col:21 at 'const TimerSet::heap_element &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55bd595f9668 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55bd595f9828 <line:167:5, col:21> col:15 front 'TimerSet::heap_element &()' inline
|-CXXMethodDecl 0x55bd595f9958 <line:168:5, col:29> col:21 front 'const TimerSet::heap_element &() const' inline
|-CXXMethodDecl 0x55bd595f9a28 <line:169:5, col:20> col:15 back 'TimerSet::heap_element &()' inline
|-CXXMethodDecl 0x55bd595f9af8 <line:170:5, col:28> col:21 back 'const TimerSet::heap_element &() const' inline
|-CXXMethodDecl 0x55bd595f9c38 <line:172:5, col:39> col:15 used unchecked_at 'TimerSet::heap_element &(Vector::size_type)' inline
| `-ParmVarDecl 0x55bd595f9ba8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55bd595f9d80 <line:173:5, col:47> col:21 unchecked_at 'const TimerSet::heap_element &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55bd595f9cf0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55bd595f9ec8 <line:174:5, col:59> col:15 at_u 'TimerSet::heap_element &(Vector::size_type)' inline
| |-ParmVarDecl 0x55bd595f9e38 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55bd595f9f80 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55bd595fa080 <line:175:5, col:71> col:21 at_u 'const TimerSet::heap_element &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55bd595f9ff0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55bd595fa138 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55bd595fa1f8 <line:177:5, col:20> col:15 data 'TimerSet::heap_element *()' inline
|-CXXMethodDecl 0x55bd595fa2f8 <line:178:5, col:28> col:21 data 'const TimerSet::heap_element *() const' inline
|-CXXMethodDecl 0x55bd595fa4a8 <line:180:5, col:48> col:17 push_back 'void (Vector<TimerSet::heap_element>::value_argument_type)' inline
| `-ParmVarDecl 0x55bd595fa3b8 <col:27, col:47> col:47 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-FunctionTemplateDecl 0x55bd595fac68 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55bd595fa560 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<TimerSet::heap_element>':'fast_argument<TimerSet::heap_element, true>'
| `-CXXMethodDecl 0x55bd595fabc8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (TimerSet::heap_element &&)' inline
|   `-ParmVarDecl 0x55bd595faac8 <col:58, col:62> col:62 v 'TimerSet::heap_element &&'
|-CXXMethodDecl 0x55bd595fad48 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55bd595fae98 <line:186:5, col:49> col:17 push_front 'void (Vector<TimerSet::heap_element>::value_argument_type)' inline
| `-ParmVarDecl 0x55bd595fae08 <col:28, col:48> col:48 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x55bd595faf50 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55bd595fb198 <line:189:5, col:62> col:21 insert 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x55bd595fb010 <col:28, col:37> col:37 it 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
| `-ParmVarDecl 0x55bd595fb088 <col:41, col:61> col:61 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x55bd595fb358 <line:190:5, col:38> col:21 erase 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator)' inline
| `-ParmVarDecl 0x55bd595fb268 <col:27, col:36> col:36 it 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
|-CXXMethodDecl 0x55bd595fb5a8 <line:191:5, col:49> col:21 erase 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator, Vector<TimerSet::heap_element>::iterator)' inline
| |-ParmVarDecl 0x55bd595fb420 <col:27, col:36> col:36 a 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
| `-ParmVarDecl 0x55bd595fb498 <col:39, col:48> col:48 b 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
|-CXXMethodDecl 0x55bd595fb668 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55bd595fb8c8 <line:195:5, col:34> col:17 swap 'void (Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x55bd595fb7d0 <col:22, col:33> col:33 x 'Vector<TimerSet::heap_element> &'
`-CXXDestructorDecl 0x55bd595fb998 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55bd595fb998

Layout: <CGRecordLayout
  LLVMType:%class.Vector.14 = type { %class.vector_memory.9 }
  NonVirtualBaseLLVMType:%class.Vector.14 = type { %class.vector_memory.9 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55bd595fbae0 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Timer *'
|-CXXRecordDecl 0x55bd595fbce8 prev 0x55bd595fbae0 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55bd595fcd00 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<Timer *>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x55bd595fccb0 'typename array_memory<Timer *>::type' sugar
|   `-TypedefType 0x55bd595fcc90 'conditional<true, sized_array_memory<8>, typed_array_memory<Timer *> >::type' sugar
|     |-Typedef 0x55bd595fcb40 'type'
|     `-SubstTemplateTypeParmType 0x55bd595b9340 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x55bd5922c210 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55bd5922c1b8 'T'
|       `-RecordType 0x55bd595b8e90 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x55bd595b8da8 'sized_array_memory'
|-FieldDecl 0x55bd595fce00 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Timer *>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x55bd595fce50 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55bd595fce88 <line:118:5, col:15> col:15 value_type 'Timer *':'Timer *'
| `-SubstTemplateTypeParmType 0x55bd595fbd80 'Timer *' sugar
|   |-TemplateTypeParmType 0x55bd59264120 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55bd592640c8 'T'
|   `-PointerType 0x55bd594c8cb0 'Timer *'
|     `-RecordType 0x55bd594c7e00 'Timer'
|       `-CXXRecord 0x55bd595d3ab8 'Timer'
|-TypedefDecl 0x55bd595fcf48 <line:119:5, col:16> col:16 reference 'Timer *&'
| `-LValueReferenceType 0x55bd595fcf10 'Timer *&'
|   `-SubstTemplateTypeParmType 0x55bd595fbd80 'Timer *' sugar
|     |-TemplateTypeParmType 0x55bd59264120 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55bd592640c8 'T'
|     `-PointerType 0x55bd594c8cb0 'Timer *'
|       `-RecordType 0x55bd594c7e00 'Timer'
|         `-CXXRecord 0x55bd595d3ab8 'Timer'
|-TypedefDecl 0x55bd595fd008 <line:120:5, col:22> col:22 const_reference 'Timer *const &'
| `-LValueReferenceType 0x55bd595fcfd0 'Timer *const &'
|   `-QualType 0x55bd595fbd81 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x55bd595fbd80 'Timer *' sugar
|       |-TemplateTypeParmType 0x55bd59264120 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55bd592640c8 'T'
|       `-PointerType 0x55bd594c8cb0 'Timer *'
|         `-RecordType 0x55bd594c7e00 'Timer'
|           `-CXXRecord 0x55bd595d3ab8 'Timer'
|-TypedefDecl 0x55bd595fd0c8 <line:121:5, col:16> col:16 pointer 'Timer **'
| `-PointerType 0x55bd595fd090 'Timer **'
|   `-SubstTemplateTypeParmType 0x55bd595fbd80 'Timer *' sugar
|     |-TemplateTypeParmType 0x55bd59264120 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55bd592640c8 'T'
|     `-PointerType 0x55bd594c8cb0 'Timer *'
|       `-RecordType 0x55bd594c7e00 'Timer'
|         `-CXXRecord 0x55bd595d3ab8 'Timer'
|-TypedefDecl 0x55bd595fd188 <line:122:5, col:22> col:22 const_pointer 'Timer *const *'
| `-PointerType 0x55bd595fd150 'Timer *const *'
|   `-QualType 0x55bd595fbd81 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x55bd595fbd80 'Timer *' sugar
|       |-TemplateTypeParmType 0x55bd59264120 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55bd592640c8 'T'
|       `-PointerType 0x55bd594c8cb0 'Timer *'
|         `-RecordType 0x55bd594c7e00 'Timer'
|           `-CXXRecord 0x55bd595d3ab8 'Timer'
|-TypedefDecl 0x55bd595fdd60 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<Timer *>::type':'Timer *'
| `-ElaboratedType 0x55bd595fdd10 'typename fast_argument<Timer *>::type' sugar
|   `-TypedefType 0x55bd595fdcf0 'fast_argument<Timer *, false>::type' sugar
|     |-Typedef 0x55bd595fdc80 'type'
|     `-SubstTemplateTypeParmType 0x55bd595fda40 'Timer *' sugar
|       |-TemplateTypeParmType 0x55bd59237010 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55bd59236fc0 'T'
|       `-PointerType 0x55bd594c8cb0 'Timer *'
|         `-RecordType 0x55bd594c7e00 'Timer'
|           `-CXXRecord 0x55bd595d3ab8 'Timer'
|-TypedefDecl 0x55bd595fddc8 <line:126:5, col:22> col:22 const_access_type 'Timer *const &'
| `-LValueReferenceType 0x55bd595fcfd0 'Timer *const &'
|   `-QualType 0x55bd595fbd81 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x55bd595fbd80 'Timer *' sugar
|       |-TemplateTypeParmType 0x55bd59264120 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55bd592640c8 'T'
|       `-PointerType 0x55bd594c8cb0 'Timer *'
|         `-RecordType 0x55bd594c7e00 'Timer'
|           `-CXXRecord 0x55bd595d3ab8 'Timer'
|-TypedefDecl 0x55bd595fde20 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55bd58f62370 'int'
|-TypedefDecl 0x55bd595fde88 <line:130:5, col:16> col:16 iterator 'Timer **'
| `-PointerType 0x55bd595fd090 'Timer **'
|   `-SubstTemplateTypeParmType 0x55bd595fbd80 'Timer *' sugar
|     |-TemplateTypeParmType 0x55bd59264120 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55bd592640c8 'T'
|     `-PointerType 0x55bd594c8cb0 'Timer *'
|       `-RecordType 0x55bd594c7e00 'Timer'
|         `-CXXRecord 0x55bd595d3ab8 'Timer'
|-TypedefDecl 0x55bd595fdef0 <line:131:5, col:22> col:22 const_iterator 'Timer *const *'
| `-PointerType 0x55bd595fd150 'Timer *const *'
|   `-QualType 0x55bd595fbd81 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x55bd595fbd80 'Timer *' sugar
|       |-TemplateTypeParmType 0x55bd59264120 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55bd592640c8 'T'
|       `-PointerType 0x55bd594c8cb0 'Timer *'
|         `-RecordType 0x55bd594c7e00 'Timer'
|           `-CXXRecord 0x55bd595d3ab8 'Timer'
|-EnumDecl 0x55bd595fdf48 <line:134:5> col:5
| `-EnumConstantDecl 0x55bd595fe040 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Timer *>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55bd595fe020 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55bd592657a8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55bd59265780 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55bd59265760 <col:40> 'int' 1
|-CXXConstructorDecl 0x55bd595fe0c8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55bd595fe358 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x55bd595fe180 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55bd595fe220 <col:41, col:61> col:61 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXConstructorDecl 0x55bd595fe618 <line:139:5, col:37> col:12 Vector 'void (const Vector<Timer *> &)' inline
| `-ParmVarDecl 0x55bd595fe500 <col:19, col:36> col:36 x 'const Vector<Timer *> &'
|-CXXConstructorDecl 0x55bd595fe8d8 <line:141:5, col:32> col:12 Vector 'void (Vector<Timer *> &&)' inline
| `-ParmVarDecl 0x55bd595fe7c0 <col:19, col:31> col:31 x 'Vector<Timer *> &&'
|-CXXMethodDecl 0x55bd595fec20 <line:144:5, col:51> col:23 operator= 'Vector<Timer *> &(const Vector<Timer *> &)' inline
| `-ParmVarDecl 0x55bd595feb00 <col:33, col:50> col:50 x 'const Vector<Timer *> &'
|-CXXMethodDecl 0x55bd595fef30 <line:146:5, col:46> col:23 operator= 'Vector<Timer *> &(Vector<Timer *> &&)' inline
| `-ParmVarDecl 0x55bd595fee10 <col:33, col:45> col:45 x 'Vector<Timer *> &&'
|-CXXMethodDecl 0x55bd595ff220 <line:148:5, col:70> col:23 assign 'Vector<Timer *> &(Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x55bd595ff068 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55bd595ff0e0 <col:43, col:69> col:63 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x55bd595ff378 <line:150:5, col:55> col:49 begin 'Vector<Timer *>::iterator ()'
| |-NoInlineAttr 0x55bd595ff458 <col:20> Inherited
| `-OptimizeNoneAttr 0x55bd595ff4b0 <col:30> Inherited
|-CXXMethodDecl 0x55bd595ff4f8 <line:151:5, col:53> col:49 end 'Vector<Timer *>::iterator ()'
| |-NoInlineAttr 0x55bd595ff5a8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55bd595ff600 <col:30> Inherited
|-CXXMethodDecl 0x55bd595ff6c8 <line:152:5, col:63> col:55 begin 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x55bd595ff778 <col:20> Inherited
| `-OptimizeNoneAttr 0x55bd595ff7d0 <col:30> Inherited
|-CXXMethodDecl 0x55bd595ff818 <line:153:5, col:61> col:55 end 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x55bd595ff8c8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55bd595ff920 <col:30> Inherited
|-CXXMethodDecl 0x55bd595ff968 <line:154:5, col:64> col:55 cbegin 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x55bd595ffa18 <col:20> Inherited
| `-OptimizeNoneAttr 0x55bd595ffa70 <col:30> Inherited
|-CXXMethodDecl 0x55bd595ffab8 <line:155:5, col:62> col:55 cend 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x55bd595ffb68 <col:20> Inherited
| `-OptimizeNoneAttr 0x55bd595ffbc0 <col:30> Inherited
|-CXXMethodDecl 0x55bd595ffbe8 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55bd595ffc98 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55bd595ffd48 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55bd595fff08 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x55bd595ffdf8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55bd595ffe70 <col:37, col:63> col:57 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x55bd59600058 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55bd595fffc8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55bd59600208 <line:163:5, col:65> col:43 operator[] 'Timer *&(Vector::size_type)'
| |-ParmVarDecl 0x55bd59600110 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55bd596002c0 <col:20>
| `-OptimizeNoneAttr 0x55bd59600318 <col:30>
|-CXXMethodDecl 0x55bd59600438 <line:164:5, col:73> col:49 operator[] 'Timer *const &(Vector::size_type) const'
| |-ParmVarDecl 0x55bd59600340 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55bd596004f0 <col:20>
| `-OptimizeNoneAttr 0x55bd59600548 <col:30>
|-CXXMethodDecl 0x55bd59600600 <line:165:5, col:29> col:15 at 'Timer *&(Vector::size_type)' inline
| `-ParmVarDecl 0x55bd59600570 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55bd59601630 <line:166:5, col:37> col:21 at 'Timer *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55bd596006b8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55bd59601768 <line:167:5, col:21> col:15 front 'Timer *&()' inline
|-CXXMethodDecl 0x55bd59601898 <line:168:5, col:29> col:21 front 'Timer *const &() const' inline
|-CXXMethodDecl 0x55bd59601968 <line:169:5, col:20> col:15 back 'Timer *&()' inline
|-CXXMethodDecl 0x55bd59601a38 <line:170:5, col:28> col:21 back 'Timer *const &() const' inline
|-CXXMethodDecl 0x55bd59601b78 <line:172:5, col:39> col:15 unchecked_at 'Timer *&(Vector::size_type)' inline
| `-ParmVarDecl 0x55bd59601ae8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55bd59601cc0 <line:173:5, col:47> col:21 unchecked_at 'Timer *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55bd59601c30 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55bd59601e08 <line:174:5, col:59> col:15 at_u 'Timer *&(Vector::size_type)' inline
| |-ParmVarDecl 0x55bd59601d78 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55bd59601ec0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55bd59601fc0 <line:175:5, col:71> col:21 at_u 'Timer *const &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55bd59601f30 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55bd59602078 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55bd59602138 <line:177:5, col:20> col:15 data 'Timer **()' inline
|-CXXMethodDecl 0x55bd59602238 <line:178:5, col:28> col:21 data 'Timer *const *() const' inline
|-CXXMethodDecl 0x55bd596023b8 <line:180:5, col:48> col:17 push_back 'void (Vector<Timer *>::value_argument_type)' inline
| `-ParmVarDecl 0x55bd596022f8 <col:27, col:47> col:47 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-FunctionTemplateDecl 0x55bd59602b78 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55bd59602470 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Timer *>':'fast_argument<Timer *, false>'
| `-CXXMethodDecl 0x55bd59602ad8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Timer *&&)' inline
|   `-ParmVarDecl 0x55bd596029d8 <col:58, col:62> col:62 v 'Timer *&&'
|-CXXMethodDecl 0x55bd59602c58 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55bd59602da8 <line:186:5, col:49> col:17 push_front 'void (Vector<Timer *>::value_argument_type)' inline
| `-ParmVarDecl 0x55bd59602d18 <col:28, col:48> col:48 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x55bd59602e60 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55bd596030a8 <line:189:5, col:62> col:21 insert 'Vector<Timer *>::iterator (Vector<Timer *>::iterator, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x55bd59602f20 <col:28, col:37> col:37 it 'Vector<Timer *>::iterator':'Timer **'
| `-ParmVarDecl 0x55bd59602f98 <col:41, col:61> col:61 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x55bd59603268 <line:190:5, col:38> col:21 erase 'Vector<Timer *>::iterator (Vector<Timer *>::iterator)' inline
| `-ParmVarDecl 0x55bd59603178 <col:27, col:36> col:36 it 'Vector<Timer *>::iterator':'Timer **'
|-CXXMethodDecl 0x55bd596034b8 <line:191:5, col:49> col:21 erase 'Vector<Timer *>::iterator (Vector<Timer *>::iterator, Vector<Timer *>::iterator)' inline
| |-ParmVarDecl 0x55bd59603330 <col:27, col:36> col:36 a 'Vector<Timer *>::iterator':'Timer **'
| `-ParmVarDecl 0x55bd596033a8 <col:39, col:48> col:48 b 'Vector<Timer *>::iterator':'Timer **'
|-CXXMethodDecl 0x55bd59603578 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55bd596037d8 <line:195:5, col:34> col:17 swap 'void (Vector<Timer *> &)' inline
| `-ParmVarDecl 0x55bd596036e0 <col:22, col:33> col:33 x 'Vector<Timer *> &'
`-CXXDestructorDecl 0x55bd596038a8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55bd596038a8

Layout: <CGRecordLayout
  LLVMType:%class.Vector.15 = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector.15 = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55bd595cdbc0 <../dummy_inc/click/sync.hh:194:1, line:211:1> line:194:7 referenced class SimpleSpinlock definition
|-DefinitionData empty standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55bd595cdcd8 <col:1, col:7> col:7 implicit referenced class SimpleSpinlock
|-AccessSpecDecl 0x55bd595cdd68 <col:24, col:30> col:24 public
|-CXXConstructorDecl 0x55bd595cddf0 <line:196:5, col:27> col:12 SimpleSpinlock 'void ()' inline
|-CXXDestructorDecl 0x55bd595cdee0 <line:197:5, col:28> col:12 ~SimpleSpinlock 'void () noexcept' inline
|-CXXMethodDecl 0x55bd595cdfe0 <line:199:5, col:25> col:17 acquire 'void ()' inline
|-CXXMethodDecl 0x55bd595ce0a0 <line:200:5, col:25> col:17 release 'void ()' inline
|-CXXMethodDecl 0x55bd595ce160 <line:201:5, col:25> col:17 attempt 'bool ()' inline
|-CXXConstructorDecl 0x55bd595ce288 <line:194:7> col:7 implicit constexpr SimpleSpinlock 'void (const SimpleSpinlock &)' inline default trivial noexcept-unevaluated 0x55bd595ce288
| `-ParmVarDecl 0x55bd595ce398 <col:7> col:7 'const SimpleSpinlock &'
`-CXXMethodDecl 0x55bd59604658 <col:7> col:7 implicit operator= 'SimpleSpinlock &(const SimpleSpinlock &)' inline default trivial noexcept-unevaluated 0x55bd59604658
  `-ParmVarDecl 0x55bd59604768 <col:7> col:7 'const SimpleSpinlock &'

Layout: <CGRecordLayout
  LLVMType:%class.SimpleSpinlock = type { i8 }
  NonVirtualBaseLLVMType:%class.SimpleSpinlock.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55bd595eebc0 prev 0x55bd595d7cc8 <../dummy_inc/click/timerset.hh:12:1, line:90:1> line:12:7 referenced class TimerSet definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x55bd595eecb8 <col:1, col:7> col:7 implicit referenced class TimerSet
|-AccessSpecDecl 0x55bd595eed48 <col:18, col:24> col:18 public
|-CXXConstructorDecl 0x55bd595eedd0 <line:14:5, col:14> col:5 TimerSet 'void ()'
|-CXXMethodDecl 0x55bd595eeec8 <line:16:5, col:67> col:15 timer_expiry_steady 'Timestamp () const'
| `-CompoundStmt 0x55bd59604ad0 <col:43, col:67>
|   `-ReturnStmt 0x55bd59604ac0 <col:45, col:52>
|     `-CXXConstructExpr 0x55bd59604a90 <col:52> 'Timestamp' 'void (const Timestamp &) noexcept'
|       `-MemberExpr 0x55bd59604a60 <col:52> 'const Timestamp' lvalue ->_timer_expiry 0x55bd595f0710
|         `-CXXThisExpr 0x55bd59604a50 <col:52> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x55bd595eef88 <line:17:5, col:53> col:22 timer_expiry_steady_adjusted 'Timestamp () const' inline
|-CXXMethodDecl 0x55bd595ef190 <line:19:5, col:64> col:16 next_timer_delay 'int (bool, Timestamp &) const' inline
| |-ParmVarDecl 0x55bd595ef038 <col:33, col:38> col:38 more_tasks 'bool'
| `-ParmVarDecl 0x55bd595ef0b0 <col:50, col:61> col:61 t 'Timestamp &'
|-CXXMethodDecl 0x55bd595ef288 <line:22:5, col:23> col:12 next_timer 'Timer *()'
|-CXXMethodDecl 0x55bd595ef350 <line:24:5, col:67> col:14 max_timer_stride 'unsigned int () const'
| `-CompoundStmt 0x55bd59604b50 <col:39, col:67>
|   `-ReturnStmt 0x55bd59604b40 <col:41, col:48>
|     `-ImplicitCastExpr 0x55bd59604b28 <col:48> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x55bd59604af8 <col:48> 'const unsigned int' lvalue ->_max_timer_stride 0x55bd595f07f8
|         `-CXXThisExpr 0x55bd59604ae8 <col:48> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x55bd595ef418 <line:25:5, col:59> col:14 timer_stride 'unsigned int () const'
| `-CompoundStmt 0x55bd59604bd0 <col:35, col:59>
|   `-ReturnStmt 0x55bd59604bc0 <col:37, col:44>
|     `-ImplicitCastExpr 0x55bd59604ba8 <col:44> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x55bd59604b78 <col:44> 'const unsigned int' lvalue ->_timer_stride 0x55bd595f0860
|         `-CXXThisExpr 0x55bd59604b68 <col:44> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x55bd595ef560 <line:26:5, col:52> col:10 set_max_timer_stride 'void (unsigned int)'
| `-ParmVarDecl 0x55bd595ef4d0 <col:31, col:40> col:40 timer_stride 'unsigned int'
|-CXXMethodDecl 0x55bd595ef6a8 <line:28:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x55bd595ef618 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x55bd595ef8a8 <line:30:5, col:57> col:10 run_timers 'void (RouterThread *, Master *)'
| |-ParmVarDecl 0x55bd595ef760 <col:21, col:35> col:35 thread 'RouterThread *'
| `-ParmVarDecl 0x55bd595ef7d8 <col:43, col:51> col:51 master 'Master *'
|-CXXMethodDecl 0x55bd595ef978 <line:32:5, col:23> col:17 fence 'void ()' inline
|-AccessSpecDecl 0x55bd595efa18 <line:34:3, col:10> col:3 private
|-CXXRecordDecl 0x55bd595efa40 <line:36:5, line:45:5> line:36:12 referenced struct heap_element definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55bd595efb58 <col:5, col:12> col:12 implicit referenced struct heap_element
| |-FieldDecl 0x55bd595efbf8 <line:37:2, col:12> col:12 referenced expiry_s 'Timestamp'
| |-FieldDecl 0x55bd595efc58 <line:38:2, col:9> col:9 referenced t 'Timer *'
| `-CXXConstructorDecl 0x55bd595efd88 <line:42:2, line:44:2> line:42:2 heap_element 'void (Timer *)'
|   |-ParmVarDecl 0x55bd595efcb8 <col:15, col:22> col:22 used t_ 'Timer *'
|   |-CXXCtorInitializer Field 0x55bd595efbf8 'expiry_s' 'Timestamp'
|   | `-CXXConstructExpr 0x55bd59604ca8 <line:43:8, col:36> 'Timestamp' 'void (const Timestamp &) noexcept'
|   |   `-CXXMemberCallExpr 0x55bd59604c50 <col:17, col:35> 'const Timestamp' lvalue
|   |     `-MemberExpr 0x55bd59604c20 <col:17, col:21> '<bound member function type>' ->expiry_steady 0x55bd595d5128
|   |       `-ImplicitCastExpr 0x55bd59604c70 <col:17> 'const Timer *' <NoOp>
|   |         `-ImplicitCastExpr 0x55bd59604c08 <col:17> 'Timer *' <LValueToRValue>
|   |           `-DeclRefExpr 0x55bd59604be8 <col:17> 'Timer *' lvalue ParmVar 0x55bd595efcb8 't_' 'Timer *'
|   |-CXXCtorInitializer Field 0x55bd595efc58 't' 'Timer *'
|   | `-ImplicitCastExpr 0x55bd59604d40 <col:41> 'Timer *' <LValueToRValue>
|   |   `-DeclRefExpr 0x55bd59604d00 <col:41> 'Timer *' lvalue ParmVar 0x55bd595efcb8 't_' 'Timer *'
|   `-CompoundStmt 0x55bd59604d90 <col:45, line:44:2>
|-CXXRecordDecl 0x55bd595efe50 <line:46:5, line:50:5> line:46:12 struct heap_less definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55bd595eff68 <col:5, col:12> col:12 implicit struct heap_less
| `-CXXMethodDecl 0x55bd595f01b8 <line:47:2, line:49:2> line:47:14 operator() 'bool (const TimerSet::heap_element &, const TimerSet::heap_element &)' inline
|   |-ParmVarDecl 0x55bd595f0038 <col:25, col:45> col:45 used a 'const TimerSet::heap_element &'
|   |-ParmVarDecl 0x55bd595f00b0 <col:48, col:68> col:68 used b 'const TimerSet::heap_element &'
|   `-CompoundStmt 0x55bd59604ec0 <col:71, line:49:2>
|     `-ReturnStmt 0x55bd59604eb0 <line:48:6, col:28>
|       `-CXXOperatorCallExpr 0x55bd59604e78 <col:13, col:28> 'bool'
|         |-ImplicitCastExpr 0x55bd59604e60 <col:24> 'bool (*)(const Timestamp &, const Timestamp &)' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x55bd59604e40 <col:24> 'bool (const Timestamp &, const Timestamp &)' lvalue Function 0x55bd59486018 'operator<' 'bool (const Timestamp &, const Timestamp &)'
|         |-MemberExpr 0x55bd59604dc0 <col:13, col:15> 'const Timestamp' lvalue .expiry_s 0x55bd595efbf8
|         | `-DeclRefExpr 0x55bd59604da0 <col:13> 'const TimerSet::heap_element' lvalue ParmVar 0x55bd595f0038 'a' 'const TimerSet::heap_element &'
|         `-MemberExpr 0x55bd59604e10 <col:26, col:28> 'const Timestamp' lvalue .expiry_s 0x55bd595efbf8
|           `-DeclRefExpr 0x55bd59604df0 <col:26> 'const TimerSet::heap_element' lvalue ParmVar 0x55bd595f00b0 'b' 'const TimerSet::heap_element &'
|-CXXRecordDecl 0x55bd595f0280 <line:51:5, line:55:5> line:51:12 struct heap_place definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55bd595f03f8 <col:5, col:12> col:12 implicit struct heap_place
| `-CXXMethodDecl 0x55bd595f0618 <line:52:2, line:54:2> line:52:14 operator() 'void (TimerSet::heap_element *, TimerSet::heap_element *)' inline
|   |-ParmVarDecl 0x55bd595f0498 <col:25, col:39> col:39 used begin 'TimerSet::heap_element *'
|   |-ParmVarDecl 0x55bd595f0510 <col:46, col:60> col:60 used t 'TimerSet::heap_element *'
|   `-CompoundStmt 0x55bd596050c8 <col:63, line:54:2>
|     `-BinaryOperator 0x55bd596050a8 <line:53:6, col:39> 'int' lvalue '='
|       |-MemberExpr 0x55bd59604f58 <col:6, col:12> 'int' lvalue ->_schedpos1 0x55bd595d7168
|       | `-ImplicitCastExpr 0x55bd59604f40 <col:6, col:9> 'Timer *' <LValueToRValue>
|       |   `-MemberExpr 0x55bd59604f10 <col:6, col:9> 'Timer *' lvalue ->t 0x55bd595efc58
|       |     `-ImplicitCastExpr 0x55bd59604ef8 <col:6> 'TimerSet::heap_element *' <LValueToRValue>
|       |       `-DeclRefExpr 0x55bd59604ed8 <col:6> 'TimerSet::heap_element *' lvalue ParmVar 0x55bd595f0510 't' 'TimerSet::heap_element *'
|       `-ImplicitCastExpr 0x55bd59605090 <col:25, col:39> 'int' <IntegralCast>
|         `-BinaryOperator 0x55bd59605070 <col:25, col:39> 'long' '+'
|           |-ParenExpr 0x55bd59605018 <col:25, col:35> 'long'
|           | `-BinaryOperator 0x55bd59604ff8 <col:26, col:30> 'long' '-'
|           |   |-ImplicitCastExpr 0x55bd59604fc8 <col:26> 'TimerSet::heap_element *' <LValueToRValue>
|           |   | `-DeclRefExpr 0x55bd59604f88 <col:26> 'TimerSet::heap_element *' lvalue ParmVar 0x55bd595f0510 't' 'TimerSet::heap_element *'
|           |   `-ImplicitCastExpr 0x55bd59604fe0 <col:30> 'TimerSet::heap_element *' <LValueToRValue>
|           |     `-DeclRefExpr 0x55bd59604fa8 <col:30> 'TimerSet::heap_element *' lvalue ParmVar 0x55bd595f0498 'begin' 'TimerSet::heap_element *'
|           `-ImplicitCastExpr 0x55bd59605058 <col:39> 'long' <IntegralCast>
|             `-IntegerLiteral 0x55bd59605038 <col:39> 'int' 1
|-FieldDecl 0x55bd595f0710 <line:58:5, col:15> col:15 referenced _timer_expiry 'Timestamp'
| `-AlignedAttr 0x55bd595f0780 <col:44, col:53> aligned
|   `-ConstantExpr 0x55bd595f0760 <col:52> 'int' Int: 8
|     `-IntegerLiteral 0x55bd595f06e0 <col:52> 'int' 8
|-FieldDecl 0x55bd595f07f8 <line:60:5, col:14> col:14 referenced _max_timer_stride 'unsigned int'
|-FieldDecl 0x55bd595f0860 <line:61:5, col:14> col:14 referenced _timer_stride 'unsigned int'
|-FieldDecl 0x55bd595f08c8 <line:62:5, col:14> col:14 _timer_count 'unsigned int'
|-FieldDecl 0x55bd595fba80 <line:63:5, col:26> col:26 referenced _timer_heap 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>'
|-FieldDecl 0x55bd59603990 <line:64:5, col:21> col:21 _timer_runchunk 'Vector<Timer *>':'Vector<Timer *>'
|-FieldDecl 0x55bd596039f0 <line:65:5, col:20> col:20 _timer_lock 'SimpleSpinlock'
|-FieldDecl 0x55bd59603a50 <line:71:5, col:15> col:15 _timer_check 'Timestamp'
|-FieldDecl 0x55bd59603ab0 <line:72:5, col:14> col:14 _timer_check_reports 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55bd59603ba0 <line:74:5, col:38> col:17 run_one_timer 'void (Timer *)' inline
| `-ParmVarDecl 0x55bd59603b10 <col:31, col:37> col:38 'Timer *'
|-CXXMethodDecl 0x55bd59603c68 <line:76:5, line:81:5> line:76:10 set_timer_expiry 'void ()'
| `-CompoundStmt 0x55bd59605520 <col:29, line:81:5>
|   `-IfStmt 0x55bd596054f8 <line:77:2, line:80:32> has_else
|     |-ImplicitCastExpr 0x55bd596051b0 <line:77:6, col:23> 'bool' <IntegralToBoolean>
|     | `-CXXMemberCallExpr 0x55bd59605150 <col:6, col:23> 'Vector::size_type':'int'
|     |   `-MemberExpr 0x55bd59605120 <col:6, col:18> '<bound member function type>' .size 0x55bd595f8ba0
|     |     `-ImplicitCastExpr 0x55bd59605198 <col:6> 'const Vector<TimerSet::heap_element>' lvalue <NoOp>
|     |       `-MemberExpr 0x55bd596050f0 <col:6> 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>' lvalue ->_timer_heap 0x55bd595fba80
|     |         `-CXXThisExpr 0x55bd596050e0 <col:6> 'TimerSet *' implicit this
|     |-CXXOperatorCallExpr 0x55bd596053a0 <line:78:6, col:50> 'Timestamp' lvalue
|     | |-ImplicitCastExpr 0x55bd59605388 <col:20> 'Timestamp &(*)(const Timestamp &) noexcept' <FunctionToPointerDecay>
|     | | `-DeclRefExpr 0x55bd59605368 <col:20> 'Timestamp &(const Timestamp &) noexcept' lvalue CXXMethod 0x55bd5916f858 'operator=' 'Timestamp &(const Timestamp &) noexcept'
|     | |-MemberExpr 0x55bd596051d8 <col:6> 'Timestamp' lvalue ->_timer_expiry 0x55bd595f0710
|     | | `-CXXThisExpr 0x55bd596051c8 <col:6> 'TimerSet *' implicit this
|     | `-ImplicitCastExpr 0x55bd59605350 <col:22, col:50> 'const Timestamp' lvalue <NoOp>
|     |   `-MemberExpr 0x55bd59605320 <col:22, col:50> 'Timestamp' lvalue .expiry_s 0x55bd595efbf8
|     |     `-CXXMemberCallExpr 0x55bd596052f8 <col:22, col:48> 'TimerSet::heap_element':'TimerSet::heap_element' lvalue
|     |       |-MemberExpr 0x55bd596052c8 <col:22, col:34> '<bound member function type>' .unchecked_at 0x55bd595f9c38
|     |       | `-MemberExpr 0x55bd59605218 <col:22> 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>' lvalue ->_timer_heap 0x55bd595fba80
|     |       |   `-CXXThisExpr 0x55bd59605208 <col:22> 'TimerSet *' implicit this
|     |       `-IntegerLiteral 0x55bd596052a8 <col:47> 'int' 0
|     `-ExprWithCleanups 0x55bd596054e0 <line:80:6, col:32> 'Timestamp' lvalue
|       `-CXXOperatorCallExpr 0x55bd596054a8 <col:6, col:32> 'Timestamp' lvalue
|         |-ImplicitCastExpr 0x55bd59605490 <col:20> 'Timestamp &(*)(Timestamp &&) noexcept' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x55bd59605470 <col:20> 'Timestamp &(Timestamp &&) noexcept' lvalue CXXMethod 0x55bd5916fd08 'operator=' 'Timestamp &(Timestamp &&) noexcept'
|         |-MemberExpr 0x55bd596053e8 <col:6> 'Timestamp' lvalue ->_timer_expiry 0x55bd595f0710
|         | `-CXXThisExpr 0x55bd596053d8 <col:6> 'TimerSet *' implicit this
|         `-MaterializeTemporaryExpr 0x55bd59605458 <col:22, col:32> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55bd59605428 <col:22, col:32> 'Timestamp' 'void ()'
|-CXXMethodDecl 0x55bd59603da8 <line:82:5, col:37> col:10 check_timer_expiry 'void (Timer *)'
| `-ParmVarDecl 0x55bd59603d18 <col:29, col:36> col:36 t 'Timer *'
|-CXXMethodDecl 0x55bd59603e70 <line:84:5, col:29> col:17 used lock_timers 'void ()' inline
|-CXXMethodDecl 0x55bd59603f30 <line:85:5, col:37> col:17 attempt_lock_timers 'bool ()' inline
|-CXXMethodDecl 0x55bd59603ff0 <line:86:5, col:31> col:17 used unlock_timers 'void ()' inline
|-FriendDecl 0x55bd596040e0 <line:88:5, col:18> col:12 'class Timer':'Timer'
|-CXXConstructorDecl 0x55bd59604148 <line:12:7> col:7 implicit TimerSet 'void (const TimerSet &)' inline default noexcept-unevaluated 0x55bd59604148
| `-ParmVarDecl 0x55bd59604258 <col:7> col:7 'const TimerSet &'
|-CXXConstructorDecl 0x55bd596042f8 <col:7> col:7 implicit TimerSet 'void (TimerSet &&)' inline default noexcept-unevaluated 0x55bd596042f8
| `-ParmVarDecl 0x55bd59604408 <col:7> col:7 'TimerSet &&'
|-CXXMethodDecl 0x55bd596044a8 <col:7> col:7 implicit operator= 'TimerSet &(const TimerSet &)' inline default noexcept-unevaluated 0x55bd596044a8
| `-ParmVarDecl 0x55bd596045b8 <col:7> col:7 'const TimerSet &'
|-CXXMethodDecl 0x55bd596047d8 <col:7> col:7 implicit operator= 'TimerSet &(TimerSet &&)' inline default noexcept-unevaluated 0x55bd596047d8
| `-ParmVarDecl 0x55bd596048e8 <col:7> col:7 'TimerSet &&'
`-CXXDestructorDecl 0x55bd59604970 <col:7> col:7 implicit ~TimerSet 'void ()' inline default noexcept-unevaluated 0x55bd59604970

Layout: <CGRecordLayout
  LLVMType:%class.TimerSet = type <{ %class.Timestamp, i32, i32, i32, [4 x i8], %class.Vector.14, %class.Vector.15, %class.SimpleSpinlock, [7 x i8], %class.Timestamp, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.TimerSet.base = type <{ %class.Timestamp, i32, i32, i32, [4 x i8], %class.Vector.14, %class.Vector.15, %class.SimpleSpinlock, [7 x i8], %class.Timestamp, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55bd5962d5d8 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'pollfd'
|-CXXRecordDecl 0x55bd5962d7e8 prev 0x55bd5962d5d8 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55bd5962e8c0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<pollfd>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x55bd5962e870 'typename array_memory<pollfd>::type' sugar
|   `-TypedefType 0x55bd5962e850 'conditional<true, sized_array_memory<8>, typed_array_memory<pollfd> >::type' sugar
|     |-Typedef 0x55bd5962e700 'type'
|     `-SubstTemplateTypeParmType 0x55bd595b9340 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x55bd5922c210 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55bd5922c1b8 'T'
|       `-RecordType 0x55bd595b8e90 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x55bd595b8da8 'sized_array_memory'
|-FieldDecl 0x55bd5962e9c0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<pollfd>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x55bd5962ea10 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55bd5962ea48 <line:118:5, col:15> col:15 value_type 'pollfd':'pollfd'
| `-SubstTemplateTypeParmType 0x55bd5962d880 'pollfd' sugar
|   |-TemplateTypeParmType 0x55bd59264120 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55bd592640c8 'T'
|   `-RecordType 0x55bd5962b680 'pollfd'
|     `-CXXRecord 0x55bd5962b5f0 'pollfd'
|-TypedefDecl 0x55bd5962eb08 <line:119:5, col:16> col:16 reference 'pollfd &'
| `-LValueReferenceType 0x55bd5962ead0 'pollfd &'
|   `-SubstTemplateTypeParmType 0x55bd5962d880 'pollfd' sugar
|     |-TemplateTypeParmType 0x55bd59264120 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55bd592640c8 'T'
|     `-RecordType 0x55bd5962b680 'pollfd'
|       `-CXXRecord 0x55bd5962b5f0 'pollfd'
|-TypedefDecl 0x55bd5962ebc8 <line:120:5, col:22> col:22 const_reference 'const pollfd &'
| `-LValueReferenceType 0x55bd5962eb90 'const pollfd &'
|   `-QualType 0x55bd5962d881 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x55bd5962d880 'pollfd' sugar
|       |-TemplateTypeParmType 0x55bd59264120 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55bd592640c8 'T'
|       `-RecordType 0x55bd5962b680 'pollfd'
|         `-CXXRecord 0x55bd5962b5f0 'pollfd'
|-TypedefDecl 0x55bd5962ec58 <line:121:5, col:16> col:16 pointer 'pollfd *'
| `-PointerType 0x55bd5962ec20 'pollfd *'
|   `-SubstTemplateTypeParmType 0x55bd5962d880 'pollfd' sugar
|     |-TemplateTypeParmType 0x55bd59264120 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55bd592640c8 'T'
|     `-RecordType 0x55bd5962b680 'pollfd'
|       `-CXXRecord 0x55bd5962b5f0 'pollfd'
|-TypedefDecl 0x55bd5962ed18 <line:122:5, col:22> col:22 const_pointer 'const pollfd *'
| `-PointerType 0x55bd5962ece0 'const pollfd *'
|   `-QualType 0x55bd5962d881 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x55bd5962d880 'pollfd' sugar
|       |-TemplateTypeParmType 0x55bd59264120 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55bd592640c8 'T'
|       `-RecordType 0x55bd5962b680 'pollfd'
|         `-CXXRecord 0x55bd5962b5f0 'pollfd'
|-TypedefDecl 0x55bd5962f8f0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<pollfd>::type':'pollfd'
| `-ElaboratedType 0x55bd5962f8a0 'typename fast_argument<pollfd>::type' sugar
|   `-TypedefType 0x55bd5962f880 'fast_argument<pollfd, false>::type' sugar
|     |-Typedef 0x55bd5962f810 'type'
|     `-SubstTemplateTypeParmType 0x55bd5962f5d0 'pollfd' sugar
|       |-TemplateTypeParmType 0x55bd59237010 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55bd59236fc0 'T'
|       `-RecordType 0x55bd5962b680 'pollfd'
|         `-CXXRecord 0x55bd5962b5f0 'pollfd'
|-TypedefDecl 0x55bd5962f958 <line:126:5, col:22> col:22 const_access_type 'const pollfd &'
| `-LValueReferenceType 0x55bd5962eb90 'const pollfd &'
|   `-QualType 0x55bd5962d881 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x55bd5962d880 'pollfd' sugar
|       |-TemplateTypeParmType 0x55bd59264120 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55bd592640c8 'T'
|       `-RecordType 0x55bd5962b680 'pollfd'
|         `-CXXRecord 0x55bd5962b5f0 'pollfd'
|-TypedefDecl 0x55bd5962f9b0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55bd58f62370 'int'
|-TypedefDecl 0x55bd5962fa18 <line:130:5, col:16> col:16 iterator 'pollfd *'
| `-PointerType 0x55bd5962ec20 'pollfd *'
|   `-SubstTemplateTypeParmType 0x55bd5962d880 'pollfd' sugar
|     |-TemplateTypeParmType 0x55bd59264120 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55bd592640c8 'T'
|     `-RecordType 0x55bd5962b680 'pollfd'
|       `-CXXRecord 0x55bd5962b5f0 'pollfd'
|-TypedefDecl 0x55bd5962fa80 <line:131:5, col:22> col:22 const_iterator 'const pollfd *'
| `-PointerType 0x55bd5962ece0 'const pollfd *'
|   `-QualType 0x55bd5962d881 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x55bd5962d880 'pollfd' sugar
|       |-TemplateTypeParmType 0x55bd59264120 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55bd592640c8 'T'
|       `-RecordType 0x55bd5962b680 'pollfd'
|         `-CXXRecord 0x55bd5962b5f0 'pollfd'
|-EnumDecl 0x55bd5962fad8 <line:134:5> col:5
| `-EnumConstantDecl 0x55bd5962fbd0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<pollfd>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55bd5962fbb0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55bd592657a8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55bd59265780 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55bd59265760 <col:40> 'int' 1
|-CXXConstructorDecl 0x55bd5962fc58 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55bd5962fee8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x55bd5962fd10 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55bd5962fdb0 <col:41, col:61> col:61 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXConstructorDecl 0x55bd596301a8 <line:139:5, col:37> col:12 Vector 'void (const Vector<pollfd> &)' inline
| `-ParmVarDecl 0x55bd59630090 <col:19, col:36> col:36 x 'const Vector<pollfd> &'
|-CXXConstructorDecl 0x55bd59630468 <line:141:5, col:32> col:12 Vector 'void (Vector<pollfd> &&)' inline
| `-ParmVarDecl 0x55bd59630350 <col:19, col:31> col:31 x 'Vector<pollfd> &&'
|-CXXMethodDecl 0x55bd596307b0 <line:144:5, col:51> col:23 operator= 'Vector<pollfd> &(const Vector<pollfd> &)' inline
| `-ParmVarDecl 0x55bd59630690 <col:33, col:50> col:50 x 'const Vector<pollfd> &'
|-CXXMethodDecl 0x55bd59630ac0 <line:146:5, col:46> col:23 operator= 'Vector<pollfd> &(Vector<pollfd> &&)' inline
| `-ParmVarDecl 0x55bd596309a0 <col:33, col:45> col:45 x 'Vector<pollfd> &&'
|-CXXMethodDecl 0x55bd59630db0 <line:148:5, col:70> col:23 assign 'Vector<pollfd> &(Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x55bd59630bf8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55bd59630c70 <col:43, col:69> col:63 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x55bd59630f08 <line:150:5, col:55> col:49 begin 'Vector<pollfd>::iterator ()'
| |-NoInlineAttr 0x55bd59630fe8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55bd59631040 <col:30> Inherited
|-CXXMethodDecl 0x55bd59631088 <line:151:5, col:53> col:49 end 'Vector<pollfd>::iterator ()'
| |-NoInlineAttr 0x55bd59631138 <col:20> Inherited
| `-OptimizeNoneAttr 0x55bd59631190 <col:30> Inherited
|-CXXMethodDecl 0x55bd59631258 <line:152:5, col:63> col:55 begin 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x55bd59631308 <col:20> Inherited
| `-OptimizeNoneAttr 0x55bd59631360 <col:30> Inherited
|-CXXMethodDecl 0x55bd596313a8 <line:153:5, col:61> col:55 end 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x55bd59631458 <col:20> Inherited
| `-OptimizeNoneAttr 0x55bd596314b0 <col:30> Inherited
|-CXXMethodDecl 0x55bd596314f8 <line:154:5, col:64> col:55 cbegin 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x55bd596315a8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55bd59631600 <col:30> Inherited
|-CXXMethodDecl 0x55bd59631648 <line:155:5, col:62> col:55 cend 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x55bd596316f8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55bd59631750 <col:30> Inherited
|-CXXMethodDecl 0x55bd59631778 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55bd59631828 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55bd596318d8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55bd59631a98 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x55bd59631988 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55bd59631a00 <col:37, col:63> col:57 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x55bd59631be8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55bd59631b58 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55bd59631d98 <line:163:5, col:65> col:43 operator[] 'pollfd &(Vector::size_type)'
| |-ParmVarDecl 0x55bd59631ca0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55bd59631e50 <col:20>
| `-OptimizeNoneAttr 0x55bd59631ea8 <col:30>
|-CXXMethodDecl 0x55bd59631fc8 <line:164:5, col:73> col:49 operator[] 'const pollfd &(Vector::size_type) const'
| |-ParmVarDecl 0x55bd59631ed0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55bd59632080 <col:20>
| `-OptimizeNoneAttr 0x55bd596320d8 <col:30>
|-CXXMethodDecl 0x55bd59632190 <line:165:5, col:29> col:15 at 'pollfd &(Vector::size_type)' inline
| `-ParmVarDecl 0x55bd59632100 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55bd596322d8 <line:166:5, col:37> col:21 at 'const pollfd &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55bd59632248 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55bd59632408 <line:167:5, col:21> col:15 front 'pollfd &()' inline
|-CXXMethodDecl 0x55bd59632538 <line:168:5, col:29> col:21 front 'const pollfd &() const' inline
|-CXXMethodDecl 0x55bd59632608 <line:169:5, col:20> col:15 back 'pollfd &()' inline
|-CXXMethodDecl 0x55bd596326d8 <line:170:5, col:28> col:21 back 'const pollfd &() const' inline
|-CXXMethodDecl 0x55bd59632818 <line:172:5, col:39> col:15 unchecked_at 'pollfd &(Vector::size_type)' inline
| `-ParmVarDecl 0x55bd59632788 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55bd59632960 <line:173:5, col:47> col:21 unchecked_at 'const pollfd &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55bd596328d0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55bd59632aa8 <line:174:5, col:59> col:15 at_u 'pollfd &(Vector::size_type)' inline
| |-ParmVarDecl 0x55bd59632a18 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55bd59632b60 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55bd59632c60 <line:175:5, col:71> col:21 at_u 'const pollfd &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55bd59632bd0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55bd59632d18 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55bd59632dd8 <line:177:5, col:20> col:15 data 'pollfd *()' inline
|-CXXMethodDecl 0x55bd59632ed8 <line:178:5, col:28> col:21 data 'const pollfd *() const' inline
|-CXXMethodDecl 0x55bd59633088 <line:180:5, col:48> col:17 push_back 'void (Vector<pollfd>::value_argument_type)' inline
| `-ParmVarDecl 0x55bd59632f98 <col:27, col:47> col:47 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-FunctionTemplateDecl 0x55bd59633848 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55bd59633140 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<pollfd>':'fast_argument<pollfd, false>'
| `-CXXMethodDecl 0x55bd596337a8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (pollfd &&)' inline
|   `-ParmVarDecl 0x55bd596336a8 <col:58, col:62> col:62 v 'pollfd &&'
|-CXXMethodDecl 0x55bd59633928 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55bd59633a78 <line:186:5, col:49> col:17 push_front 'void (Vector<pollfd>::value_argument_type)' inline
| `-ParmVarDecl 0x55bd596339e8 <col:28, col:48> col:48 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x55bd59633b30 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55bd59633d78 <line:189:5, col:62> col:21 insert 'Vector<pollfd>::iterator (Vector<pollfd>::iterator, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x55bd59633bf0 <col:28, col:37> col:37 it 'Vector<pollfd>::iterator':'pollfd *'
| `-ParmVarDecl 0x55bd59633c68 <col:41, col:61> col:61 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x55bd59633f38 <line:190:5, col:38> col:21 erase 'Vector<pollfd>::iterator (Vector<pollfd>::iterator)' inline
| `-ParmVarDecl 0x55bd59633e48 <col:27, col:36> col:36 it 'Vector<pollfd>::iterator':'pollfd *'
|-CXXMethodDecl 0x55bd59634188 <line:191:5, col:49> col:21 erase 'Vector<pollfd>::iterator (Vector<pollfd>::iterator, Vector<pollfd>::iterator)' inline
| |-ParmVarDecl 0x55bd59634000 <col:27, col:36> col:36 a 'Vector<pollfd>::iterator':'pollfd *'
| `-ParmVarDecl 0x55bd59634078 <col:39, col:48> col:48 b 'Vector<pollfd>::iterator':'pollfd *'
|-CXXMethodDecl 0x55bd59634248 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55bd596344a8 <line:195:5, col:34> col:17 swap 'void (Vector<pollfd> &)' inline
| `-ParmVarDecl 0x55bd596343b0 <col:22, col:33> col:33 x 'Vector<pollfd> &'
`-CXXDestructorDecl 0x55bd59634578 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55bd59634578

Layout: <CGRecordLayout
  LLVMType:%class.Vector.16 = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector.16 = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55bd59636aa0 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<24>'
|-CXXRecordDecl 0x55bd59636c78 prev 0x55bd59636aa0 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55bd59636d08 <col:46, col:52> col:46 public
|-TypedefDecl 0x55bd59636d30 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55bd58f62370 'int'
|-TypedefDecl 0x55bd59638900 <line:13:5, col:31> col:31 type 'typename sized_array_memory<24>::type':'char_array<24>'
| `-ElaboratedType 0x55bd596388b0 'typename sized_array_memory<24>::type' sugar
|   `-TypedefType 0x55bd596371e0 'sized_array_memory<24>::type' sugar
|     |-Typedef 0x55bd596370e0 'type'
|     `-TemplateSpecializationType 0x55bd59637070 'char_array<24UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x55bd59636f50 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 24
|       |   `-SubstNonTypeTemplateParmExpr 0x55bd59636f30 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x55bd59636f10 <col:24> 'unsigned long' 24
|       `-RecordType 0x55bd59637050 'char_array<24>'
|         `-ClassTemplateSpecialization 0x55bd59636f70 'char_array'
|-TypedefDecl 0x55bd596389b8 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<24> >::type *'
| `-PointerType 0x55bd59638980 'vector_memory<sized_array_memory<24> >::type *'
|   `-TypedefType 0x55bd59638960 'vector_memory<sized_array_memory<24> >::type' sugar
|     |-Typedef 0x55bd59638900 'type'
|     `-ElaboratedType 0x55bd596388b0 'typename sized_array_memory<24>::type' sugar
|       `-TypedefType 0x55bd596371e0 'sized_array_memory<24>::type' sugar
|         |-Typedef 0x55bd596370e0 'type'
|         `-TemplateSpecializationType 0x55bd59637070 'char_array<24UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x55bd59636f50 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 24
|           |   `-SubstNonTypeTemplateParmExpr 0x55bd59636f30 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x55bd59636f10 <col:24> 'unsigned long' 24
|           `-RecordType 0x55bd59637050 'char_array<24>'
|             `-ClassTemplateSpecialization 0x55bd59636f70 'char_array'
|-CXXMethodDecl 0x55bd59638b38 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<24> >::type *) const' inline
| `-ParmVarDecl 0x55bd59638a48 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXConstructorDecl 0x55bd59638c28 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55bd59638d08 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x55bd59638d08
|-CXXMethodDecl 0x55bd59638fd8 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<24> > &)'
| `-ParmVarDecl 0x55bd59638ee0 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<24> > &'
|-CXXMethodDecl 0x55bd59639218 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x55bd59639090 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55bd59639108 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55bd596393e8 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x55bd596392d8 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55bd59639350 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55bd59639548 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<24> >::iterator ()'
|-CXXMethodDecl 0x55bd59639618 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<24> >::iterator ()'
|-CXXMethodDecl 0x55bd59639868 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<24> >::iterator (vector_memory<sized_array_memory<24> >::iterator, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x55bd596396d8 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
| `-ParmVarDecl 0x55bd59639750 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55bd59639ac8 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<24> >::iterator (vector_memory<sized_array_memory<24> >::iterator, vector_memory<sized_array_memory<24> >::iterator)'
| |-ParmVarDecl 0x55bd59639938 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
| `-ParmVarDecl 0x55bd596399b0 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55bd59639c88 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<24> >::type *)' inline
| `-ParmVarDecl 0x55bd59639b98 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55bd59639e48 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<24> >::type *)' inline
| `-ParmVarDecl 0x55bd59639d50 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55bd59639f00 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55bd59639fb0 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55bd5963a1e8 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x55bd5963a060 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55bd5963a0d8 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55bd5963a488 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<24> > &)'
| `-ParmVarDecl 0x55bd5963a390 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<24> > &'
|-FieldDecl 0x55bd5963a550 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<24> >::type *'
|-FieldDecl 0x55bd5963a5a0 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55bd5963a5f0 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.18 = type { %struct.char_array.19*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.18 = type { %struct.char_array.19*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55bd596346c0 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'SelectSet::SelectorInfo'
|-CXXRecordDecl 0x55bd596348c8 prev 0x55bd596346c0 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55bd59636a10 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<SelectorInfo>::type':'sized_array_memory<24>'
| `-ElaboratedType 0x55bd596369c0 'typename array_memory<SelectorInfo>::type' sugar
|   `-TypedefType 0x55bd596369a0 'conditional<true, sized_array_memory<24>, typed_array_memory<SelectSet::SelectorInfo> >::type' sugar
|     |-Typedef 0x55bd59636850 'type'
|     `-SubstTemplateTypeParmType 0x55bd59636670 'sized_array_memory<24>' sugar
|       |-TemplateTypeParmType 0x55bd5922c210 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55bd5922c1b8 'T'
|       `-RecordType 0x55bd59510ee0 'sized_array_memory<24>'
|         `-ClassTemplateSpecialization 0x55bd59510df8 'sized_array_memory'
|-FieldDecl 0x55bd5963a640 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<SelectSet::SelectorInfo>::array_memory_type>':'vector_memory<sized_array_memory<24> >' mutable
|-AccessSpecDecl 0x55bd5963a690 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55bd5963a6c8 <line:118:5, col:15> col:15 value_type 'SelectSet::SelectorInfo':'SelectSet::SelectorInfo'
| `-SubstTemplateTypeParmType 0x55bd59634960 'SelectSet::SelectorInfo' sugar
|   |-TemplateTypeParmType 0x55bd59264120 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55bd592640c8 'T'
|   `-RecordType 0x55bd5962d130 'SelectSet::SelectorInfo'
|     `-CXXRecord 0x55bd5962d0a0 'SelectorInfo'
|-TypedefDecl 0x55bd5963a788 <line:119:5, col:16> col:16 reference 'SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x55bd5963a750 'SelectSet::SelectorInfo &'
|   `-SubstTemplateTypeParmType 0x55bd59634960 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x55bd59264120 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55bd592640c8 'T'
|     `-RecordType 0x55bd5962d130 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x55bd5962d0a0 'SelectorInfo'
|-TypedefDecl 0x55bd5963a848 <line:120:5, col:22> col:22 const_reference 'const SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x55bd5963a810 'const SelectSet::SelectorInfo &'
|   `-QualType 0x55bd59634961 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x55bd59634960 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x55bd59264120 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55bd592640c8 'T'
|       `-RecordType 0x55bd5962d130 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x55bd5962d0a0 'SelectorInfo'
|-TypedefDecl 0x55bd5963a8d8 <line:121:5, col:16> col:16 pointer 'SelectSet::SelectorInfo *'
| `-PointerType 0x55bd5963a8a0 'SelectSet::SelectorInfo *'
|   `-SubstTemplateTypeParmType 0x55bd59634960 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x55bd59264120 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55bd592640c8 'T'
|     `-RecordType 0x55bd5962d130 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x55bd5962d0a0 'SelectorInfo'
|-TypedefDecl 0x55bd5963a998 <line:122:5, col:22> col:22 const_pointer 'const SelectSet::SelectorInfo *'
| `-PointerType 0x55bd5963a960 'const SelectSet::SelectorInfo *'
|   `-QualType 0x55bd59634961 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x55bd59634960 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x55bd59264120 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55bd592640c8 'T'
|       `-RecordType 0x55bd5962d130 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x55bd5962d0a0 'SelectorInfo'
|-TypedefDecl 0x55bd5963b5f0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<SelectorInfo>::type':'const SelectSet::SelectorInfo &'
| `-ElaboratedType 0x55bd5963b5a0 'typename fast_argument<SelectorInfo>::type' sugar
|   `-TypedefType 0x55bd5963b580 'fast_argument<SelectSet::SelectorInfo, true>::type' sugar
|     |-Typedef 0x55bd5963b4b8 'type'
|     `-LValueReferenceType 0x55bd5963b480 'const SelectSet::SelectorInfo &'
|       `-QualType 0x55bd5963b221 'const SelectSet::SelectorInfo' const
|         `-SubstTemplateTypeParmType 0x55bd5963b220 'SelectSet::SelectorInfo' sugar
|           |-TemplateTypeParmType 0x55bd592368e0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55bd59236888 'T'
|           `-RecordType 0x55bd5962d130 'SelectSet::SelectorInfo'
|             `-CXXRecord 0x55bd5962d0a0 'SelectorInfo'
|-TypedefDecl 0x55bd5963b658 <line:126:5, col:22> col:22 const_access_type 'const SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x55bd5963a810 'const SelectSet::SelectorInfo &'
|   `-QualType 0x55bd59634961 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x55bd59634960 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x55bd59264120 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55bd592640c8 'T'
|       `-RecordType 0x55bd5962d130 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x55bd5962d0a0 'SelectorInfo'
|-TypedefDecl 0x55bd5963b6b0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55bd58f62370 'int'
|-TypedefDecl 0x55bd5963b718 <line:130:5, col:16> col:16 iterator 'SelectSet::SelectorInfo *'
| `-PointerType 0x55bd5963a8a0 'SelectSet::SelectorInfo *'
|   `-SubstTemplateTypeParmType 0x55bd59634960 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x55bd59264120 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55bd592640c8 'T'
|     `-RecordType 0x55bd5962d130 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x55bd5962d0a0 'SelectorInfo'
|-TypedefDecl 0x55bd5963b780 <line:131:5, col:22> col:22 const_iterator 'const SelectSet::SelectorInfo *'
| `-PointerType 0x55bd5963a960 'const SelectSet::SelectorInfo *'
|   `-QualType 0x55bd59634961 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x55bd59634960 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x55bd59264120 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55bd592640c8 'T'
|       `-RecordType 0x55bd5962d130 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x55bd5962d0a0 'SelectorInfo'
|-EnumDecl 0x55bd5963b7d8 <line:134:5> col:5
| `-EnumConstantDecl 0x55bd5963b8d0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<SelectSet::SelectorInfo>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55bd5963b8b0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55bd592657a8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55bd59265780 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55bd59265760 <col:40> 'int' 1
|-CXXConstructorDecl 0x55bd5963b958 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55bd5963bbe8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x55bd5963ba10 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55bd5963bab0 <col:41, col:61> col:61 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXConstructorDecl 0x55bd5963bea8 <line:139:5, col:37> col:12 Vector 'void (const Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x55bd5963bd90 <col:19, col:36> col:36 x 'const Vector<SelectSet::SelectorInfo> &'
|-CXXConstructorDecl 0x55bd5963c168 <line:141:5, col:32> col:12 Vector 'void (Vector<SelectSet::SelectorInfo> &&)' inline
| `-ParmVarDecl 0x55bd5963c050 <col:19, col:31> col:31 x 'Vector<SelectSet::SelectorInfo> &&'
|-CXXMethodDecl 0x55bd5963c4b0 <line:144:5, col:51> col:23 operator= 'Vector<SelectSet::SelectorInfo> &(const Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x55bd5963c390 <col:33, col:50> col:50 x 'const Vector<SelectSet::SelectorInfo> &'
|-CXXMethodDecl 0x55bd5963c7c0 <line:146:5, col:46> col:23 operator= 'Vector<SelectSet::SelectorInfo> &(Vector<SelectSet::SelectorInfo> &&)' inline
| `-ParmVarDecl 0x55bd5963c6a0 <col:33, col:45> col:45 x 'Vector<SelectSet::SelectorInfo> &&'
|-CXXMethodDecl 0x55bd5963cab0 <line:148:5, col:70> col:23 assign 'Vector<SelectSet::SelectorInfo> &(Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x55bd5963c8f8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55bd5963c970 <col:43, col:69> col:63 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x55bd5963cc08 <line:150:5, col:55> col:49 begin 'Vector<SelectSet::SelectorInfo>::iterator ()'
| |-NoInlineAttr 0x55bd5963cce8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55bd5963cd40 <col:30> Inherited
|-CXXMethodDecl 0x55bd5963cd88 <line:151:5, col:53> col:49 end 'Vector<SelectSet::SelectorInfo>::iterator ()'
| |-NoInlineAttr 0x55bd5963ce38 <col:20> Inherited
| `-OptimizeNoneAttr 0x55bd5963ce90 <col:30> Inherited
|-CXXMethodDecl 0x55bd5963cf58 <line:152:5, col:63> col:55 begin 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x55bd5963d008 <col:20> Inherited
| `-OptimizeNoneAttr 0x55bd5963d060 <col:30> Inherited
|-CXXMethodDecl 0x55bd5963d0a8 <line:153:5, col:61> col:55 end 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x55bd5963d158 <col:20> Inherited
| `-OptimizeNoneAttr 0x55bd5963d1b0 <col:30> Inherited
|-CXXMethodDecl 0x55bd5963d1f8 <line:154:5, col:64> col:55 cbegin 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x55bd5963d2a8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55bd5963d300 <col:30> Inherited
|-CXXMethodDecl 0x55bd5963d348 <line:155:5, col:62> col:55 cend 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x55bd5963d3f8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55bd5963d450 <col:30> Inherited
|-CXXMethodDecl 0x55bd5963d478 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55bd5963d528 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55bd5963d5d8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55bd5963d798 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x55bd5963d688 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55bd5963d700 <col:37, col:63> col:57 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x55bd5963d8e8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55bd5963d858 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55bd5963da98 <line:163:5, col:65> col:43 operator[] 'SelectSet::SelectorInfo &(Vector::size_type)'
| |-ParmVarDecl 0x55bd5963d9a0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55bd5963db50 <col:20>
| `-OptimizeNoneAttr 0x55bd5963dba8 <col:30>
|-CXXMethodDecl 0x55bd5963dcc8 <line:164:5, col:73> col:49 operator[] 'const SelectSet::SelectorInfo &(Vector::size_type) const'
| |-ParmVarDecl 0x55bd5963dbd0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55bd5963dd80 <col:20>
| `-OptimizeNoneAttr 0x55bd5963ddd8 <col:30>
|-CXXMethodDecl 0x55bd5963de90 <line:165:5, col:29> col:15 at 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| `-ParmVarDecl 0x55bd5963de00 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55bd5963dfd8 <line:166:5, col:37> col:21 at 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55bd5963df48 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55bd5963e108 <line:167:5, col:21> col:15 front 'SelectSet::SelectorInfo &()' inline
|-CXXMethodDecl 0x55bd5963e238 <line:168:5, col:29> col:21 front 'const SelectSet::SelectorInfo &() const' inline
|-CXXMethodDecl 0x55bd5963e308 <line:169:5, col:20> col:15 back 'SelectSet::SelectorInfo &()' inline
|-CXXMethodDecl 0x55bd5963e3d8 <line:170:5, col:28> col:21 back 'const SelectSet::SelectorInfo &() const' inline
|-CXXMethodDecl 0x55bd59640570 <line:172:5, col:39> col:15 unchecked_at 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| `-ParmVarDecl 0x55bd596404e0 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55bd596406b8 <line:173:5, col:47> col:21 unchecked_at 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55bd59640628 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55bd59640800 <line:174:5, col:59> col:15 at_u 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| |-ParmVarDecl 0x55bd59640770 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55bd596408b8 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55bd596409b8 <line:175:5, col:71> col:21 at_u 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55bd59640928 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55bd59640a70 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55bd59640b28 <line:177:5, col:20> col:15 data 'SelectSet::SelectorInfo *()' inline
|-CXXMethodDecl 0x55bd59640c28 <line:178:5, col:28> col:21 data 'const SelectSet::SelectorInfo *() const' inline
|-CXXMethodDecl 0x55bd59640dd8 <line:180:5, col:48> col:17 push_back 'void (Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| `-ParmVarDecl 0x55bd59640ce8 <col:27, col:47> col:47 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-FunctionTemplateDecl 0x55bd59641598 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55bd59640e90 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<SelectSet::SelectorInfo>':'fast_argument<SelectSet::SelectorInfo, true>'
| `-CXXMethodDecl 0x55bd596414f8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (SelectSet::SelectorInfo &&)' inline
|   `-ParmVarDecl 0x55bd596413f8 <col:58, col:62> col:62 v 'SelectSet::SelectorInfo &&'
|-CXXMethodDecl 0x55bd59641678 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55bd596417c8 <line:186:5, col:49> col:17 push_front 'void (Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| `-ParmVarDecl 0x55bd59641738 <col:28, col:48> col:48 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x55bd59641880 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55bd59641ac8 <line:189:5, col:62> col:21 insert 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x55bd59641940 <col:28, col:37> col:37 it 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
| `-ParmVarDecl 0x55bd596419b8 <col:41, col:61> col:61 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x55bd59641c88 <line:190:5, col:38> col:21 erase 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator)' inline
| `-ParmVarDecl 0x55bd59641b98 <col:27, col:36> col:36 it 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
|-CXXMethodDecl 0x55bd59641ed8 <line:191:5, col:49> col:21 erase 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator, Vector<SelectSet::SelectorInfo>::iterator)' inline
| |-ParmVarDecl 0x55bd59641d50 <col:27, col:36> col:36 a 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
| `-ParmVarDecl 0x55bd59641dc8 <col:39, col:48> col:48 b 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
|-CXXMethodDecl 0x55bd59641f98 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55bd596421f8 <line:195:5, col:34> col:17 swap 'void (Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x55bd59642100 <col:22, col:33> col:33 x 'Vector<SelectSet::SelectorInfo> &'
`-CXXDestructorDecl 0x55bd596422c8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55bd596422c8

Layout: <CGRecordLayout
  LLVMType:%class.Vector.17 = type { %class.vector_memory.18 }
  NonVirtualBaseLLVMType:%class.Vector.17 = type { %class.vector_memory.18 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55bd5962c280 <../dummy_inc/click/selectset.hh:36:1, line:109:1> line:36:7 referenced class SelectSet definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55bd5962c398 <col:1, col:7> col:7 implicit referenced class SelectSet
|-AccessSpecDecl 0x55bd5962c428 <col:19, col:25> col:19 public
|-CXXConstructorDecl 0x55bd5962c4b0 <line:38:5, col:15> col:5 SelectSet 'void ()'
|-CXXDestructorDecl 0x55bd5962c5a0 <line:39:5, col:16> col:5 ~SelectSet 'void ()' noexcept-unevaluated 0x55bd5962c5a0
|-CXXMethodDecl 0x55bd5962c6a0 <line:41:5, col:21> col:10 initialize 'void ()'
|-CXXMethodDecl 0x55bd5962c940 <line:43:5, col:54> col:9 add_select 'int (int, Element *, int)'
| |-ParmVarDecl 0x55bd5962c758 <col:20, col:24> col:24 fd 'int'
| |-ParmVarDecl 0x55bd5962c7d0 <col:28, col:37> col:37 element 'Element *'
| `-ParmVarDecl 0x55bd5962c850 <col:46, col:50> col:50 mask 'int'
|-CXXMethodDecl 0x55bd5962cbb0 <line:44:5, col:57> col:9 remove_select 'int (int, Element *, int)'
| |-ParmVarDecl 0x55bd5962ca10 <col:23, col:27> col:27 fd 'int'
| |-ParmVarDecl 0x55bd5962ca88 <col:31, col:40> col:40 element 'Element *'
| `-ParmVarDecl 0x55bd5962cb08 <col:49, col:53> col:53 mask 'int'
|-CXXMethodDecl 0x55bd5962cd08 <line:46:5, col:42> col:10 run_selects 'void (RouterThread *)'
| `-ParmVarDecl 0x55bd5962cc78 <col:22, col:36> col:36 thread 'RouterThread *'
|-CXXMethodDecl 0x55bd5962cdd0 <line:47:5, line:50:5> line:47:17 used wake_immediate 'void ()' inline
| `-CompoundStmt 0x55bd59643978 <col:34, line:50:5>
|   |-BinaryOperator 0x55bd59643348 <line:48:2, col:23> 'volatile bool' lvalue '='
|   | |-MemberExpr 0x55bd59643308 <col:2> 'volatile bool' lvalue ->_wake_pipe_pending 0x55bd5962d568
|   | | `-CXXThisExpr 0x55bd596432f8 <col:2> 'SelectSet *' implicit this
|   | `-CXXBoolLiteralExpr 0x55bd59643338 <col:23> 'bool' true
|   `-CallExpr 0x55bd59643950 <line:49:2, col:43> 'void'
|     |-ImplicitCastExpr 0x55bd59643938 <col:2> 'void (*)(long)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x55bd596438b8 <col:2> 'void (long)' lvalue Function 0x55bd596437b8 'ignore_result' 'void (long)' (FunctionTemplate 0x55bd592271b8 'ignore_result')
|     `-CallExpr 0x55bd59643560 <col:16, col:42> 'ssize_t':'long'
|       |-ImplicitCastExpr 0x55bd59643548 <col:16> 'ssize_t (*)(int, const void *, size_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55bd596434c8 <col:16> 'ssize_t (int, const void *, size_t)' lvalue Function 0x55bd59608548 'write' 'ssize_t (int, const void *, size_t)'
|       |-ImplicitCastExpr 0x55bd59643598 <col:22, col:34> 'int' <LValueToRValue>
|       | `-ArraySubscriptExpr 0x55bd59643470 <col:22, col:34> 'int' lvalue
|       |   |-ImplicitCastExpr 0x55bd59643458 <col:22> 'int *' <ArrayToPointerDecay>
|       |   | `-MemberExpr 0x55bd59643408 <col:22> 'int [2]' lvalue ->_wake_pipe 0x55bd5962d508
|       |   |   `-CXXThisExpr 0x55bd596433f8 <col:22> 'SelectSet *' implicit this
|       |   `-IntegerLiteral 0x55bd59643438 <col:33> 'int' 1
|       |-ImplicitCastExpr 0x55bd596435c8 <col:37> 'const void *' <BitCast>
|       | `-ImplicitCastExpr 0x55bd596435b0 <col:37> 'const char *' <ArrayToPointerDecay>
|       |   `-StringLiteral 0x55bd59643490 <col:37> 'const char [1]' lvalue ""
|       `-ImplicitCastExpr 0x55bd596435e0 <col:41> 'size_t':'unsigned long' <IntegralCast>
|         `-IntegerLiteral 0x55bd596434a8 <col:41> 'int' 1
|-CXXMethodDecl 0x55bd5962cf10 <line:52:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x55bd5962ce80 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x55bd5962cfd8 <line:54:5, col:23> col:17 fence 'void ()' inline
|-AccessSpecDecl 0x55bd5962d078 <line:56:3, col:10> col:3 private
|-CXXRecordDecl 0x55bd5962d0a0 <line:58:5, line:66:5> line:58:12 referenced struct SelectorInfo definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55bd5962d1b8 <col:5, col:12> col:12 implicit referenced struct SelectorInfo
| |-FieldDecl 0x55bd5962d258 <line:59:2, col:11> col:11 read 'Element *'
| |-FieldDecl 0x55bd5962d2b8 <line:60:2, col:11> col:11 write 'Element *'
| |-FieldDecl 0x55bd5962d320 <line:61:2, col:6> col:6 pollfd 'int'
| `-CXXConstructorDecl 0x55bd5962d3d0 <line:62:2, line:65:2> line:62:2 SelectorInfo 'void ()'
|   |-CXXCtorInitializer Field 0x55bd5962d258 'read' 'Element *'
|   | `-ImplicitCastExpr 0x55bd596439d8 <line:63:13> 'Element *' <NullToPointer>
|   |   `-IntegerLiteral 0x55bd59643998 <col:13> 'int' 0
|   |-CXXCtorInitializer Field 0x55bd5962d2b8 'write' 'Element *'
|   | `-ImplicitCastExpr 0x55bd59643a58 <col:23> 'Element *' <NullToPointer>
|   |   `-IntegerLiteral 0x55bd59643a18 <col:23> 'int' 0
|   |-CXXCtorInitializer Field 0x55bd5962d320 'pollfd' 'int'
|   | `-UnaryOperator 0x55bd59643ab8 <col:34, col:35> 'int' prefix '-'
|   |   `-IntegerLiteral 0x55bd59643a98 <col:35> 'int' 1
|   `-CompoundStmt 0x55bd59643b30 <line:64:2, line:65:2>
|-FieldDecl 0x55bd5962d508 <line:68:5, col:21> col:9 referenced _wake_pipe 'int [2]'
|-FieldDecl 0x55bd5962d568 <line:69:5, col:19> col:19 referenced _wake_pipe_pending 'volatile bool'
|-FieldDecl 0x55bd59634660 <line:82:5, col:27> col:27 _pollfds 'Vector<struct pollfd>':'Vector<pollfd>'
|-FieldDecl 0x55bd596423b0 <line:83:5, col:26> col:26 _selinfo 'Vector<SelectSet::SelectorInfo>':'Vector<SelectSet::SelectorInfo>'
|-CXXMethodDecl 0x55bd596425e8 <line:89:5, col:63> col:10 register_select 'void (int, bool, bool)'
| |-ParmVarDecl 0x55bd59642418 <col:26, col:30> col:30 fd 'int'
| |-ParmVarDecl 0x55bd59642490 <col:34, col:39> col:39 add_read 'bool'
| `-ParmVarDecl 0x55bd59642508 <col:49, col:54> col:54 add_write 'bool'
|-CXXMethodDecl 0x55bd596427d0 <line:90:5, col:41> col:10 remove_pollfd 'void (int, int)'
| |-ParmVarDecl 0x55bd596426b8 <col:24, col:28> col:28 pi 'int'
| `-ParmVarDecl 0x55bd59642738 <col:32, col:36> col:36 event 'int'
|-CXXMethodDecl 0x55bd59642a18 <line:91:5, col:49> col:17 call_selected 'void (int, int) const' inline
| |-ParmVarDecl 0x55bd59642898 <col:31, col:35> col:35 fd 'int'
| `-ParmVarDecl 0x55bd59642918 <col:39, col:43> col:43 mask 'int'
|-CXXMethodDecl 0x55bd59642c28 <line:92:5, col:63> col:17 post_select 'bool (RouterThread *, bool)' inline
| |-ParmVarDecl 0x55bd59642ad8 <col:29, col:43> col:43 thread 'RouterThread *'
| `-ParmVarDecl 0x55bd59642b50 <col:51, col:56> col:56 acquire 'bool'
|-CXXMethodDecl 0x55bd59642d78 <line:97:5, col:47> col:10 run_selects_poll 'void (RouterThread *)'
| `-ParmVarDecl 0x55bd59642ce8 <col:27, col:41> col:41 thread 'RouterThread *'
|-CXXMethodDecl 0x55bd59642e40 <line:102:5, col:22> col:17 used lock 'void ()' inline
|-CXXMethodDecl 0x55bd59642f00 <line:103:5, col:24> col:17 used unlock 'void ()' inline
|-CXXConstructorDecl 0x55bd59642fc8 <line:36:7> col:7 implicit SelectSet 'void (const SelectSet &)' inline default noexcept-unevaluated 0x55bd59642fc8
| `-ParmVarDecl 0x55bd596430d8 <col:7> col:7 'const SelectSet &'
`-CXXMethodDecl 0x55bd59643178 <col:7> col:7 implicit operator= 'SelectSet &(const SelectSet &)' inline default noexcept-unevaluated 0x55bd59643178
  `-ParmVarDecl 0x55bd59643288 <col:7> col:7 'const SelectSet &'

Layout: <CGRecordLayout
  LLVMType:%class.SelectSet = type { [2 x i32], i8, %class.Vector.16, %class.Vector.17 }
  NonVirtualBaseLLVMType:%class.SelectSet = type { [2 x i32], i8, %class.Vector.16, %class.Vector.17 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55bd595ccb28 <../dummy_inc/click/sync.hh:46:1, line:64:1> line:46:7 referenced class Spinlock definition
|-DefinitionData empty standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55bd595ccc48 <col:1, col:7> col:7 implicit referenced class Spinlock
|-AccessSpecDecl 0x55bd595cccd8 <col:18, col:24> col:18 public
|-CXXConstructorDecl 0x55bd595ccd60 <line:48:5, col:21> col:12 Spinlock 'void ()' inline
|-CXXDestructorDecl 0x55bd595cce50 <line:49:5, col:22> col:12 ~Spinlock 'void () noexcept' inline
|-CXXMethodDecl 0x55bd595ccf50 <line:51:5, col:25> col:17 used acquire 'void ()' inline
|-CXXMethodDecl 0x55bd595cd010 <line:52:5, col:25> col:17 used release 'void ()' inline
|-CXXMethodDecl 0x55bd595cd0d0 <line:53:5, col:25> col:17 attempt 'bool ()' inline
|-CXXMethodDecl 0x55bd595cd1b8 <line:54:5, col:26> col:17 nested 'bool () const' inline
|-CXXConstructorDecl 0x55bd595cd2d8 <line:46:7> col:7 implicit constexpr Spinlock 'void (const Spinlock &)' inline default trivial noexcept-unevaluated 0x55bd595cd2d8
| `-ParmVarDecl 0x55bd595cd3e8 <col:7> col:7 'const Spinlock &'
`-CXXMethodDecl 0x55bd59658f78 <col:7> col:7 implicit operator= 'Spinlock &(const Spinlock &)' inline default trivial noexcept-unevaluated 0x55bd59658f78
  `-ParmVarDecl 0x55bd59659088 <col:7> col:7 'const Spinlock &'

Layout: <CGRecordLayout
  LLVMType:%class.Spinlock = type { i8 }
  NonVirtualBaseLLVMType:%class.Spinlock.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55bd595ecb68 <../dummy_inc/click/task.hh:339:5, line:342:5> line:339:11 referenced union Pending definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55bd595ecc88 <col:5, col:11> col:11 implicit union Pending
|-FieldDecl 0x55bd595ecd28 <line:340:9, col:15> col:15 t 'Task *'
|-FieldDecl 0x55bd595ecd88 <line:341:9, col:19> col:19 referenced x 'uintptr_t':'unsigned long'
|-CXXConstructorDecl 0x55bd59647d28 <line:339:11> col:11 implicit constexpr Pending 'void (const Task::Pending &)' inline default trivial noexcept-unevaluated 0x55bd59647d28
| `-ParmVarDecl 0x55bd59647e38 <col:11> col:11 'const Task::Pending &'
|-CXXConstructorDecl 0x55bd59647ed8 <col:11> col:11 implicit constexpr Pending 'void (Task::Pending &&)' inline default trivial noexcept-unevaluated 0x55bd59647ed8
| `-ParmVarDecl 0x55bd59647fe8 <col:11> col:11 'Task::Pending &&'
|-CXXDestructorDecl 0x55bd59648058 <col:11> col:11 implicit ~Pending 'void ()' inline default trivial noexcept-unevaluated 0x55bd59648058
|-CXXMethodDecl 0x55bd59659128 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(const Task::Pending &)' inline default trivial noexcept-unevaluated 0x55bd59659128
| `-ParmVarDecl 0x55bd59659238 <col:11> col:11 'const Task::Pending &'
|-CXXMethodDecl 0x55bd596592a8 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(Task::Pending &&)' inline default trivial noexcept-unevaluated 0x55bd596592a8
| `-ParmVarDecl 0x55bd596593b8 <col:11> col:11 'Task::Pending &&'
`-CXXConstructorDecl 0x55bd5965fa28 <col:11> col:11 implicit used Pending 'void () noexcept' inline default trivial
  `-CompoundStmt 0x55bd5965fb00 <col:11>

Layout: <CGRecordLayout
  LLVMType:%"union.Task::Pending" = type { %class.Task* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55bd595cea20 <../dummy_inc/click/sync.hh:303:1, line:324:1> line:303:7 referenced class SpinlockIRQ definition
|-DefinitionData pass_in_registers empty standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55bd595ceb38 <col:1, col:7> col:7 implicit referenced class SpinlockIRQ
|-AccessSpecDecl 0x55bd595cebc8 <col:21, col:27> col:21 public
|-CXXConstructorDecl 0x55bd595cec50 <line:305:5, col:24> col:12 SpinlockIRQ 'void ()' inline
|-TypedefDecl 0x55bd595ced10 <line:310:5, col:17> col:17 referenced flags_t 'int'
| `-BuiltinType 0x55bd58f62370 'int'
|-CXXMethodDecl 0x55bd595cedd8 <line:313:5, col:59> col:20 acquire 'SpinlockIRQ::flags_t ()' inline
| `-AlwaysInlineAttr 0x55bd595cee78 <col:45> always_inline
|-CXXMethodDecl 0x55bd595cefa8 <line:314:5, col:63> col:17 release 'void (SpinlockIRQ::flags_t)' inline
| |-ParmVarDecl 0x55bd595ceee0 <col:25> col:32 'SpinlockIRQ::flags_t':'int'
| `-AlwaysInlineAttr 0x55bd595cf050 <col:49> always_inline
|-CXXConstructorDecl 0x55bd595cf148 <line:303:7> col:7 implicit constexpr SpinlockIRQ 'void (const SpinlockIRQ &)' inline default trivial noexcept-unevaluated 0x55bd595cf148
| `-ParmVarDecl 0x55bd595cf258 <col:7> col:7 'const SpinlockIRQ &'
|-CXXConstructorDecl 0x55bd595cf2f8 <col:7> col:7 implicit constexpr SpinlockIRQ 'void (SpinlockIRQ &&)' inline default trivial noexcept-unevaluated 0x55bd595cf2f8
| `-ParmVarDecl 0x55bd595cf408 <col:7> col:7 'SpinlockIRQ &&'
|-CXXDestructorDecl 0x55bd59648140 <col:7> col:7 implicit ~SpinlockIRQ 'void ()' inline default trivial noexcept-unevaluated 0x55bd59648140
|-CXXMethodDecl 0x55bd59659458 <col:7> col:7 implicit operator= 'SpinlockIRQ &(const SpinlockIRQ &)' inline default trivial noexcept-unevaluated 0x55bd59659458
| `-ParmVarDecl 0x55bd59659568 <col:7> col:7 'const SpinlockIRQ &'
`-CXXMethodDecl 0x55bd596595d8 <col:7> col:7 implicit operator= 'SpinlockIRQ &(SpinlockIRQ &&)' inline default trivial noexcept-unevaluated 0x55bd596595d8
  `-ParmVarDecl 0x55bd596596e8 <col:7> col:7 'SpinlockIRQ &&'

Layout: <CGRecordLayout
  LLVMType:%class.SpinlockIRQ = type { i8 }
  NonVirtualBaseLLVMType:%class.SpinlockIRQ.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55bd59643fa0 prev 0x55bd5962c1f0 <../dummy_inc/click/routerthread.hh:28:1, line:248:1> line:28:7 referenced class RouterThread definition
|-DefinitionData has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-CXXRecordDecl 0x55bd59644098 <col:1, col:7> col:7 implicit referenced class RouterThread
|-AccessSpecDecl 0x55bd59644128 <col:22, col:28> col:22 public
|-EnumDecl 0x55bd59644150 <line:30:5, col:58> col:5
| |-EnumConstantDecl 0x55bd59644268 <col:12, col:32> col:12 THREAD_QUIESCENT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:30:5)'
| | `-ConstantExpr 0x55bd59644248 <col:31, col:32> 'int' Int: -1
| |   `-UnaryOperator 0x55bd59644230 <col:31, col:32> 'int' prefix '-'
| |     `-IntegerLiteral 0x55bd59644210 <col:32> 'int' 1
| `-EnumConstantDecl 0x55bd59644310 <col:35, col:53> col:35 THREAD_UNKNOWN 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:30:5)'
|   `-ConstantExpr 0x55bd596442f0 <col:52, col:53> 'int' Int: -1000
|     `-UnaryOperator 0x55bd596442d8 <col:52, col:53> 'int' prefix '-'
|       `-IntegerLiteral 0x55bd596442b8 <col:53> 'int' 1000
|-CXXMethodDecl 0x55bd596443b0 <line:32:5, col:28> col:16 thread_id 'int () const' inline
|-CXXMethodDecl 0x55bd59644470 <line:34:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x55bd59644558 <line:35:5, col:52> col:22 timer_set 'TimerSet &()' inline
| `-CompoundStmt 0x55bd596597a8 <col:34, col:52>
|   `-ReturnStmt 0x55bd59659798 <col:36, col:43>
|     `-MemberExpr 0x55bd59659768 <col:43> 'TimerSet' lvalue ->_timers 0x55bd59646228
|       `-CXXThisExpr 0x55bd59659758 <col:43> 'RouterThread *' implicit this
|-CXXMethodDecl 0x55bd59644648 <line:36:5, col:64> col:28 timer_set 'const TimerSet &() const' inline
| `-CompoundStmt 0x55bd59659810 <col:46, col:64>
|   `-ReturnStmt 0x55bd59659800 <col:48, col:55>
|     `-MemberExpr 0x55bd596597d0 <col:55> 'const TimerSet' lvalue ->_timers 0x55bd59646228
|       `-CXXThisExpr 0x55bd596597c0 <col:55> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x55bd59644738 <line:38:5, col:55> col:23 select_set 'SelectSet &()' inline
| `-CompoundStmt 0x55bd59659878 <col:36, col:55>
|   `-ReturnStmt 0x55bd59659868 <col:38, col:45>
|     `-MemberExpr 0x55bd59659838 <col:45> 'SelectSet' lvalue ->_selects 0x55bd59646288
|       `-CXXThisExpr 0x55bd59659828 <col:45> 'RouterThread *' implicit this
|-CXXMethodDecl 0x55bd59644828 <line:39:5, col:67> col:29 select_set 'const SelectSet &() const' inline
| `-CompoundStmt 0x55bd596598e0 <col:48, col:67>
|   `-ReturnStmt 0x55bd596598d0 <col:50, col:57>
|     `-MemberExpr 0x55bd596598a0 <col:57> 'const SelectSet' lvalue ->_selects 0x55bd59646288
|       `-CXXThisExpr 0x55bd59659890 <col:57> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x55bd596448e8 <line:43:5, col:26> col:17 active 'bool () const' inline
|-CXXMethodDecl 0x55bd596449d8 <line:44:5, col:31> col:18 task_begin 'Task *() const' inline
|-CXXMethodDecl 0x55bd59644b48 <line:45:5, col:40> col:18 task_next 'Task *(Task *) const' inline
| `-ParmVarDecl 0x55bd59644a88 <col:28, col:34> col:34 task 'Task *'
|-CXXMethodDecl 0x55bd59644c10 <line:46:5, col:29> col:18 task_end 'Task *() const' inline
|-CXXMethodDecl 0x55bd59645058 <line:47:5, col:59> col:10 scheduled_tasks 'void (Router *, Vector<Task *> &)'
| |-ParmVarDecl 0x55bd59644cc0 <col:26, col:34> col:34 router 'Router *'
| `-ParmVarDecl 0x55bd59644f40 <col:42, col:58> col:58 x 'Vector<Task *> &'
|-CXXMethodDecl 0x55bd59645128 <line:49:5, col:28> col:17 lock_tasks 'void ()' inline
|-CXXMethodDecl 0x55bd596451e8 <line:50:5, col:30> col:17 unlock_tasks 'void ()' inline
|-CXXMethodDecl 0x55bd596452a8 <line:52:5, col:38> col:17 schedule_block_tasks 'void ()' inline
|-CXXMethodDecl 0x55bd596453e8 <line:53:5, col:43> col:17 used block_tasks 'void (bool)' inline
| `-ParmVarDecl 0x55bd59645358 <col:29, col:34> col:34 scheduled 'bool'
|-CXXMethodDecl 0x55bd596454b0 <line:54:5, col:31> col:17 used unblock_tasks 'void ()' inline
|-CXXMethodDecl 0x55bd59645570 <line:56:5, col:29> col:17 stop_flag 'bool () const' inline
|-CXXMethodDecl 0x55bd59645630 <line:58:5, col:35> col:17 mark_driver_entry 'void ()' inline
|-CXXMethodDecl 0x55bd596456f0 <line:59:5, col:17> col:10 driver 'void ()'
|-CXXMethodDecl 0x55bd59645830 <line:61:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x55bd596457a0 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x55bd596458f8 <line:77:5, col:22> col:17 used wake 'void ()' inline
|-CXXMethodDecl 0x55bd596459b8 <line:80:5, col:29> col:17 run_signals 'void ()' inline
|-EnumDecl 0x55bd59645a58 <line:83:5, line:86:20> line:83:5
| |-EnumConstantDecl 0x55bd59645b20 <col:12> col:12 referenced S_PAUSED 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55bd59645b70 <col:22> col:22 referenced S_BLOCKED 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55bd59645bc0 <col:33> col:33 referenced S_TIMERWAIT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55bd59645c10 <line:84:12> col:12 S_LOCKSELECT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55bd59645c60 <col:26> col:26 S_LOCKTASKS 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55bd59645cb0 <line:85:12> col:12 S_RUNTASK 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55bd59645d00 <col:23> col:23 S_RUNTIMER 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55bd59645d50 <col:35> col:35 S_RUNSIGNAL 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55bd59645da0 <col:48> col:48 S_RUNPENDING 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55bd59645df0 <col:62> col:62 S_RUNSELECT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| `-EnumConstantDecl 0x55bd59645e40 <line:86:12> col:12 NSTATES 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
|-CXXMethodDecl 0x55bd59645f38 <line:87:5, col:43> col:17 used set_thread_state 'void (int)' inline
| `-ParmVarDecl 0x55bd59645ea8 <col:34, col:38> col:38 state 'int'
|-CXXMethodDecl 0x55bd59646088 <line:88:5, col:61> col:17 set_thread_state_for_blocking 'void (int)' inline
| `-ParmVarDecl 0x55bd59645ff8 <col:47, col:51> col:51 delay_type 'int'
|-AccessSpecDecl 0x55bd59646130 <line:104:3, col:10> col:3 private
|-FieldDecl 0x55bd59646168 <line:119:5, col:14> col:14 referenced _task_link 'TaskLink'
|-FieldDecl 0x55bd596461c8 <line:120:5, col:19> col:19 referenced _stop_flag 'volatile bool'
|-FieldDecl 0x55bd59646228 <line:125:5, col:14> col:14 referenced _timers 'TimerSet'
|-FieldDecl 0x55bd59646288 <line:127:5, col:15> col:15 referenced _selects 'SelectSet'
|-FieldDecl 0x55bd59646308 <line:148:5, col:14> col:14 referenced _task_lock 'Spinlock'
| `-AlignedAttr 0x55bd59646378 <col:40, col:50> aligned
|   `-ConstantExpr 0x55bd59646358 <col:48> 'int' Int: 64
|     `-IntegerLiteral 0x55bd596462d8 <col:48> 'int' 64
|-FieldDecl 0x55bd596463e8 <line:149:5, col:21> col:21 referenced _task_blocker 'atomic_uint32_t'
|-FieldDecl 0x55bd59646448 <line:150:5, col:21> col:21 referenced _task_blocker_waiting 'atomic_uint32_t'
|-FieldDecl 0x55bd59646540 <line:152:5, col:19> col:19 referenced _pending_head 'Task::Pending':'Task::Pending'
|-FieldDecl 0x55bd59646650 <line:153:5, col:20> col:20 _pending_tail 'Task::Pending *'
|-FieldDecl 0x55bd596466b0 <line:154:5, col:17> col:17 _pending_lock 'SpinlockIRQ'
|-FieldDecl 0x55bd59646730 <line:157:5, col:13> col:13 referenced _master 'Master *'
| `-AlignedAttr 0x55bd596467a0 <col:36, col:46> aligned
|   `-ConstantExpr 0x55bd59646780 <col:44> 'int' Int: 64
|     `-IntegerLiteral 0x55bd59646700 <col:44> 'int' 64
|-FieldDecl 0x55bd59646818 <line:158:5, col:9> col:9 referenced _id 'int'
|-FieldDecl 0x55bd59646878 <line:159:5, col:10> col:10 referenced _driver_entered 'bool'
|-AccessSpecDecl 0x55bd596468c8 <line:170:3, col:9> col:3 public
|-FieldDecl 0x55bd59646908 <line:171:5, col:14> col:14 _tasks_per_iter 'unsigned int'
|-FieldDecl 0x55bd59646970 <line:172:5, col:14> col:14 _iters_per_os 'unsigned int'
|-AccessSpecDecl 0x55bd596469c0 <line:173:3, col:10> col:3 private
|-CXXConstructorDecl 0x55bd59646b68 <line:205:5, col:46> col:5 RouterThread 'void (Master *, int)'
| |-ParmVarDecl 0x55bd596469f8 <col:18, col:26> col:26 master 'Master *'
| `-ParmVarDecl 0x55bd59646a78 <col:34, col:38> col:38 threadno 'int'
|-CXXDestructorDecl 0x55bd59646c68 <line:206:5, col:19> col:5 ~RouterThread 'void ()' noexcept-unevaluated 0x55bd59646c68
|-CXXMethodDecl 0x55bd59646d70 <line:209:5, col:29> col:17 add_pending 'void ()' inline
|-CXXMethodDecl 0x55bd59646e38 <line:211:5, line:217:5> line:211:21 pass 'unsigned int () const' inline
| `-CompoundStmt 0x55bd596599d8 <col:34, line:217:5>
|   `-ReturnStmt 0x55bd596599c8 <line:215:9, col:34>
|     `-ImplicitCastExpr 0x55bd596599b0 <col:16, col:34> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x55bd59659980 <col:16, col:34> 'unsigned int' lvalue ->_pass 0x55bd595e9c40
|         `-ImplicitCastExpr 0x55bd59659968 <col:16, col:27> 'TaskLink *' <LValueToRValue>
|           `-MemberExpr 0x55bd59659938 <col:16, col:27> 'TaskLink *const' lvalue ._next 0x55bd595e9bd8
|             `-MemberExpr 0x55bd59659908 <col:16> 'const TaskLink' lvalue ->_task_link 0x55bd59646168
|               `-CXXThisExpr 0x55bd596598f8 <col:16> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x55bd59646ef8 <line:221:5, col:28> col:10 driver_lock_tasks 'void ()'
|-CXXMethodDecl 0x55bd59646fb8 <line:222:5, line:226:5> line:222:17 driver_unlock_tasks 'void ()' inline
| `-CompoundStmt 0x55bd5965a100 <col:39, line:226:5>
|   |-DeclStmt 0x55bd59659c28 <line:223:9, col:68>
|   | `-VarDecl 0x55bd59659a00 <col:9, col:67> col:18 used val 'uint32_t':'unsigned int' cinit
|   |   `-CXXMemberCallExpr 0x55bd59659be0 <col:24, col:67> 'uint32_t':'unsigned int'
|   |     |-MemberExpr 0x55bd59659bb0 <col:24, col:38> '<bound member function type>' .compare_swap 0x55bd5928da20
|   |     | `-MemberExpr 0x55bd59659a78 <col:24> 'atomic_uint32_t' lvalue ->_task_blocker 0x55bd596463e8
|   |     |   `-CXXThisExpr 0x55bd59659a68 <col:24> 'RouterThread *' implicit this
|   |     |-CStyleCastExpr 0x55bd59659b68 <col:51, col:63> 'uint32_t':'unsigned int' <NoOp>
|   |     | `-ImplicitCastExpr 0x55bd59659b50 <col:62, col:63> 'uint32_t':'unsigned int' <IntegralCast> part_of_explicit_cast
|   |     |   `-UnaryOperator 0x55bd59659b28 <col:62, col:63> 'int' prefix '-'
|   |     |     `-IntegerLiteral 0x55bd59659b08 <col:63> 'int' 1
|   |     `-ImplicitCastExpr 0x55bd59659c10 <col:66> 'uint32_t':'unsigned int' <IntegralCast>
|   |       `-IntegerLiteral 0x55bd59659b90 <col:66> 'int' 0
|   |-CStyleCastExpr 0x55bd59659c70 <line:224:9, col:16> 'void' <ToVoid>
|   | `-DeclRefExpr 0x55bd59659c40 <col:16> 'uint32_t':'unsigned int' lvalue Var 0x55bd59659a00 'val' 'uint32_t':'unsigned int'
|   `-ParenExpr 0x55bd5965a0e0 <line:225:9, col:181> 'void'
|     `-ConditionalOperator 0x55bd5965a0b0 <col:10, col:180> 'void'
|       |-CXXStaticCastExpr 0x55bd59659d88 <col:10, col:50> 'bool' static_cast<_Bool> <NoOp>
|       | `-BinaryOperator 0x55bd59659d58 <col:30, col:49> 'bool' '=='
|       |   |-ImplicitCastExpr 0x55bd59659d40 <col:30> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-DeclRefExpr 0x55bd59659c98 <col:30> 'uint32_t':'unsigned int' lvalue Var 0x55bd59659a00 'val' 'uint32_t':'unsigned int'
|       |   `-CStyleCastExpr 0x55bd59659d18 <col:37, col:49> 'uint32_t':'unsigned int' <NoOp>
|       |     `-ImplicitCastExpr 0x55bd59659d00 <col:48, col:49> 'uint32_t':'unsigned int' <IntegralCast> part_of_explicit_cast
|       |       `-UnaryOperator 0x55bd59659cd8 <col:48, col:49> 'int' prefix '-'
|       |         `-IntegerLiteral 0x55bd59659cb8 <col:49> 'int' 1
|       |-CXXFunctionalCastExpr 0x55bd59659de8 <col:54, col:61> 'void' functional cast to void <ToVoid>
|       | `-IntegerLiteral 0x55bd59659dc8 <col:60> 'int' 0
|       `-CallExpr 0x55bd5965a010 <col:65, col:180> 'void'
|         |-ImplicitCastExpr 0x55bd59659ff8 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x55bd59659fd8 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55bd59002600 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|         |-ImplicitCastExpr 0x55bd5965a050 <col:80> 'const char *' <ArrayToPointerDecay>
|         | `-StringLiteral 0x55bd59659ed8 <col:80> 'const char [21]' lvalue "val == (uint32_t) -1"
|         |-ImplicitCastExpr 0x55bd5965a068 <col:104> 'const char *' <ArrayToPointerDecay>
|         | `-StringLiteral 0x55bd59659f08 <col:104> 'const char [35]' lvalue "../dummy_inc/click/routerthread.hh"
|         |-ImplicitCastExpr 0x55bd5965a080 <col:142> 'unsigned int' <IntegralCast>
|         | `-IntegerLiteral 0x55bd59659f48 <col:142> 'int' 225
|         `-ImplicitCastExpr 0x55bd5965a098 <col:147, col:161> 'const char *' <ArrayToPointerDecay>
|           `-UnaryOperator 0x55bd59659fc0 <col:147, col:161> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|             `-PredefinedExpr 0x55bd59659fa8 <col:161> 'const char [41]' lvalue __PRETTY_FUNCTION__
|               `-StringLiteral 0x55bd59659f68 <col:161> 'const char [41]' lvalue "void RouterThread::driver_unlock_tasks()"
|-CXXMethodDecl 0x55bd59647100 <line:228:5, col:37> col:17 run_tasks 'void (int)' inline
| `-ParmVarDecl 0x55bd59647070 <col:27, col:31> col:31 ntasks 'int'
|-CXXMethodDecl 0x55bd596471c8 <line:229:5, col:33> col:17 process_pending 'void ()' inline
|-CXXMethodDecl 0x55bd59647288 <line:230:5, col:24> col:17 run_os 'void ()' inline
|-CXXMethodDecl 0x55bd59647348 <line:238:5, col:45> col:24 used running_in_interrupt 'bool ()' static inline
|-CXXMethodDecl 0x55bd59647408 <line:239:5, col:45> col:17 used current_thread_is_running 'bool () const' inline
|-CXXMethodDecl 0x55bd596474c8 <line:240:5, col:53> col:17 current_thread_is_running_cleanup 'bool () const' inline
|-FriendDecl 0x55bd596475c0 <line:242:5, col:18> col:12 'class Task':'Task'
|-FriendDecl 0x55bd59647620 <line:243:5, col:18> col:12 'class Master':'Master'
|-FriendDecl 0x55bd596476b0 <line:245:5, col:18> col:12 'class SelectSet':'SelectSet'
|-CXXConstructorDecl 0x55bd59647a78 <line:28:7> col:7 implicit RouterThread 'void (const RouterThread &)' inline default noexcept-unevaluated 0x55bd59647a78
| `-ParmVarDecl 0x55bd59647b88 <col:7> col:7 'const RouterThread &'
`-CXXMethodDecl 0x55bd59648248 <col:7> col:7 implicit operator= 'RouterThread &(const RouterThread &)' inline default noexcept-unevaluated 0x55bd59648248
  `-ParmVarDecl 0x55bd59648358 <col:7> col:7 'const RouterThread &'

Layout: <CGRecordLayout
  LLVMType:%class.RouterThread = type { %struct.TaskLink, i8, [7 x i8], %class.TimerSet, %class.SelectSet, [32 x i8], %class.Spinlock, %class.atomic_uint32_t, %class.atomic_uint32_t, %"union.Task::Pending", %"union.Task::Pending"*, %class.SpinlockIRQ, [31 x i8], %class.Master*, i32, i8, i32, i32, [40 x i8] }
  NonVirtualBaseLLVMType:%class.RouterThread.base = type { %struct.TaskLink, i8, [7 x i8], %class.TimerSet, %class.SelectSet, [32 x i8], %class.Spinlock, %class.atomic_uint32_t, %class.atomic_uint32_t, %"union.Task::Pending", %"union.Task::Pending"*, %class.SpinlockIRQ, [31 x i8], %class.Master*, i32, i8, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55bd595e9f50 prev 0x55bd594c7cc0 <../dummy_inc/click/task.hh:49:1, line:371:1> line:49:7 referenced class Task definition
|-DefinitionData has_user_declared_ctor can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-private 'TaskLink'
|-CXXRecordDecl 0x55bd595ea088 <col:1, col:7> col:7 implicit referenced class Task
|-AccessSpecDecl 0x55bd595ea118 <col:33, col:39> col:33 public
|-EnumDecl 0x55bd595ea140 <line:52:5, col:50> col:5
| |-EnumConstantDecl 0x55bd595ea280 <col:12, col:26> col:12 referenced STRIDE1 'Task::(anonymous enum at ../dummy_inc/click/task.hh:52:5)'
| | `-ConstantExpr 0x55bd595ea260 <col:22, col:26> 'unsigned int' Int: 65536
| |   `-BinaryOperator 0x55bd595ea240 <col:22, col:26> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x55bd595ea200 <col:22> 'unsigned int' 1
| |     `-IntegerLiteral 0x55bd595ea220 <col:26> 'int' 16
| `-EnumConstantDecl 0x55bd595ea350 <col:30, col:47> col:30 referenced MAX_STRIDE 'Task::(anonymous enum at ../dummy_inc/click/task.hh:52:5)'
|   `-ConstantExpr 0x55bd595ea330 <col:43, col:47> 'unsigned int' Int: 2147483648
|     `-BinaryOperator 0x55bd595ea310 <col:43, col:47> 'unsigned int' '<<'
|       |-IntegerLiteral 0x55bd595ea2d0 <col:43> 'unsigned int' 1
|       `-IntegerLiteral 0x55bd595ea2f0 <col:47> 'int' 31
|-EnumDecl 0x55bd595ea3a0 <line:53:5, col:57> col:5
| |-EnumConstantDecl 0x55bd595ea4e0 <col:12, col:29> col:12 referenced MAX_TICKETS 'Task::(anonymous enum at ../dummy_inc/click/task.hh:53:5)'
| | `-ImplicitCastExpr 0x55bd595ea600 <col:26, col:29> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55bd595ea4c0 <col:26, col:29> 'int' Int: 32768
| |     `-BinaryOperator 0x55bd595ea4a0 <col:26, col:29> 'int' '<<'
| |       |-IntegerLiteral 0x55bd595ea460 <col:26> 'int' 1
| |       `-IntegerLiteral 0x55bd595ea480 <col:29> 'int' 15
| `-EnumConstantDecl 0x55bd595ea5b0 <col:33, col:54> col:33 referenced DEFAULT_TICKETS 'Task::(anonymous enum at ../dummy_inc/click/task.hh:53:5)'
|   `-ImplicitCastExpr 0x55bd595ea618 <col:51, col:54> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55bd595ea590 <col:51, col:54> 'int' Int: 1024
|       `-BinaryOperator 0x55bd595ea570 <col:51, col:54> 'int' '<<'
|         |-IntegerLiteral 0x55bd595ea530 <col:51> 'int' 1
|         `-IntegerLiteral 0x55bd595ea550 <col:54> 'int' 10
|-CXXConstructorDecl 0x55bd595ea7e8 <line:75:5, col:48> col:12 Task 'void (TaskCallback, void *)' inline
| |-ParmVarDecl 0x55bd595ea640 <col:17, col:30> col:30 f 'TaskCallback':'bool (*)(Task *, void *)'
| `-ParmVarDecl 0x55bd595ea6c0 <col:33, col:39> col:39 user_data 'void *'
|-CXXConstructorDecl 0x55bd595ea940 <line:86:5, col:27> col:12 Task 'void (Element *)' inline
| `-ParmVarDecl 0x55bd595ea8b0 <col:17, col:26> col:26 e 'Element *'
|-CXXDestructorDecl 0x55bd595eaa38 <line:91:5, col:11> col:5 ~Task 'void ()' noexcept-unevaluated 0x55bd595eaa38
|-CXXMethodDecl 0x55bd595eabc8 <line:98:5, line:100:5> line:98:25 callback 'TaskCallback () const' inline
| `-CompoundStmt 0x55bd595edcc8 <col:42, line:100:5>
|   `-ReturnStmt 0x55bd595edcb8 <line:99:9, col:16>
|     `-ImplicitCastExpr 0x55bd595edca0 <col:16> 'TaskCallback':'bool (*)(Task *, void *)' <LValueToRValue>
|       `-MemberExpr 0x55bd595edc70 <col:16> 'const TaskCallback':'bool (*const)(Task *, void *)' lvalue ->_hook 0x55bd595ec9f0
|         `-CXXThisExpr 0x55bd595edc60 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x55bd595eac90 <line:103:5, line:105:5> line:103:18 user_data 'void *() const' inline
| `-CompoundStmt 0x55bd595edd48 <col:36, line:105:5>
|   `-ReturnStmt 0x55bd595edd38 <line:104:9, col:16>
|     `-ImplicitCastExpr 0x55bd595edd20 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x55bd595edcf0 <col:16> 'void *const' lvalue ->_thunk 0x55bd595eca58
|         `-CXXThisExpr 0x55bd595edce0 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x55bd595ead50 <line:108:5, line:110:5> line:108:21 element 'Element *() const' inline
| `-CompoundStmt 0x55bd595eddc8 <col:37, line:110:5>
|   `-ReturnStmt 0x55bd595eddb8 <line:109:9, col:16>
|     `-ImplicitCastExpr 0x55bd595edda0 <col:16> 'Element *' <LValueToRValue>
|       `-MemberExpr 0x55bd595edd70 <col:16> 'Element *const' lvalue ->_owner 0x55bd595ecb18
|         `-CXXThisExpr 0x55bd595edd60 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x55bd595eae10 <line:114:5, col:31> col:17 initialized 'bool () const' inline
|-CXXMethodDecl 0x55bd595eaed8 <line:123:5, col:33> col:16 home_thread_id 'int () const' inline
|-CXXMethodDecl 0x55bd595eaf98 <line:132:5, col:35> col:26 thread 'RouterThread *() const' inline
|-CXXMethodDecl 0x55bd595eb058 <line:135:5, line:137:5> line:135:20 router 'Router *() const' inline
| `-CompoundStmt 0x55bd595edeb0 <col:35, line:137:5>
|   `-ReturnStmt 0x55bd595edea0 <line:136:9, col:31>
|     `-CXXMemberCallExpr 0x55bd595ede68 <col:16, col:31> 'Router *'
|       `-MemberExpr 0x55bd595ede38 <col:16, col:24> '<bound member function type>' ->router 0x55bd594da4d0
|         `-ImplicitCastExpr 0x55bd595ede88 <col:16> 'const Element *' <NoOp>
|           `-ImplicitCastExpr 0x55bd595ede20 <col:16> 'Element *' <LValueToRValue>
|             `-MemberExpr 0x55bd595eddf0 <col:16> 'Element *const' lvalue ->_owner 0x55bd595ecb18
|               `-CXXThisExpr 0x55bd595edde0 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x55bd595eb118 <line:140:5, col:22> col:13 master 'Master *() const'
|-CXXMethodDecl 0x55bd595eb2d8 <line:159:5, col:50> col:10 used initialize 'void (Element *, bool)'
| |-ParmVarDecl 0x55bd595eb1c8 <col:21, col:30> col:30 owner 'Element *'
| `-ParmVarDecl 0x55bd595eb240 <col:37, col:42> col:42 schedule 'bool'
|-CXXMethodDecl 0x55bd595eb4e8 <line:169:5, col:50> col:10 initialize 'void (Router *, bool)'
| |-ParmVarDecl 0x55bd595eb398 <col:21, col:29> col:29 router 'Router *'
| `-ParmVarDecl 0x55bd595eb410 <col:37, col:42> col:42 schedule 'bool'
|-CXXMethodDecl 0x55bd595eb5b8 <line:179:5, line:181:5> line:179:17 scheduled 'bool () const' inline
| `-CompoundStmt 0x55bd595edfc0 <col:35, line:181:5>
|   `-ReturnStmt 0x55bd595edfb0 <line:180:9, col:24>
|     `-ImplicitCastExpr 0x55bd595edf98 <col:16, col:24> 'bool' <IntegralToBoolean>
|       `-ImplicitCastExpr 0x55bd595edf80 <col:16, col:24> 'uint8_t':'unsigned char' <LValueToRValue>
|         `-MemberExpr 0x55bd595edf50 <col:16, col:24> 'const uint8_t':'const unsigned char' lvalue .is_scheduled 0x55bd595ec628
|           `-MemberExpr 0x55bd595edf08 <col:16, col:24> 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55bd595ec748
|             `-MemberExpr 0x55bd595eded8 <col:16> 'const union Status':'const Task::Status' lvalue ->_status 0x55bd595ec978
|               `-CXXThisExpr 0x55bd595edec8 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x55bd595eb678 <line:190:5, line:192:5> line:190:17 unschedule 'void ()' inline
| `-CompoundStmt 0x55bd595ee0d8 <col:30, line:192:5>
|   `-BinaryOperator 0x55bd595ee0b8 <line:191:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x55bd595ee060 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x55bd595ec628
|     | `-MemberExpr 0x55bd595ee018 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55bd595ec748
|     |   `-MemberExpr 0x55bd595edfe8 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x55bd595ec978
|     |     `-CXXThisExpr 0x55bd595edfd8 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x55bd595ee0a0 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x55bd595ee090 <col:32> 'bool' false
|-CXXMethodDecl 0x55bd595eb738 <line:201:5, line:206:5> line:201:17 used reschedule 'void ()' inline
| `-CompoundStmt 0x55bd595ee428 <col:30, line:206:5>
|   |-BinaryOperator 0x55bd595ee1d0 <line:202:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x55bd595ee178 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x55bd595ec628
|   | | `-MemberExpr 0x55bd595ee130 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55bd595ec748
|   | |   `-MemberExpr 0x55bd595ee100 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x55bd595ec978
|   | |     `-CXXThisExpr 0x55bd595ee0f0 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x55bd595ee1b8 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x55bd595ee1a8 <col:32> 'bool' true
|   |-CallExpr 0x55bd595ee270 <line:203:9, col:21> 'void'
|   | `-ImplicitCastExpr 0x55bd595ee258 <col:9> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55bd595ee238 <col:9> 'void ()' lvalue Function 0x55bd595cc6e0 'click_fence' 'void ()'
|   `-IfStmt 0x55bd595ee410 <line:204:9, line:205:32>
|     |-BinaryOperator 0x55bd595ee350 <line:204:13, col:34> 'bool' '<'
|     | |-ImplicitCastExpr 0x55bd595ee320 <col:13, col:30> 'uintptr_t':'unsigned long' <LValueToRValue>
|     | | `-MemberExpr 0x55bd595ee2d0 <col:13, col:30> 'uintptr_t':'unsigned long' lvalue .x 0x55bd595ecd88
|     | |   `-MemberExpr 0x55bd595ee2a0 <col:13> 'Task::Pending' lvalue ->_pending_nextptr 0x55bd595ece00
|     | |     `-CXXThisExpr 0x55bd595ee290 <col:13> 'Task *' implicit this
|     | `-ImplicitCastExpr 0x55bd595ee338 <col:34> 'unsigned long' <IntegralCast>
|     |   `-IntegerLiteral 0x55bd595ee300 <col:34> 'int' 2
|     `-CXXMemberCallExpr 0x55bd595ee3d0 <line:205:13, col:32> 'void'
|       |-MemberExpr 0x55bd595ee380 <col:13> '<bound member function type>' ->complete_schedule 0x55bd595ed800
|       | `-CXXThisExpr 0x55bd595ee370 <col:13> 'Task *' implicit this
|       `-ImplicitCastExpr 0x55bd595ee3f8 <col:31> 'RouterThread *' <NullToPointer>
|         `-IntegerLiteral 0x55bd595ee3b0 <col:31> 'int' 0
|-CXXMethodDecl 0x55bd595eb7f8 <line:238:5, line:240:5> line:238:17 fast_reschedule 'void ()' inline
| `-CompoundStmt 0x55bd595ee550 <col:35, line:240:5>
|   `-BinaryOperator 0x55bd595ee530 <line:239:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x55bd595ee4d8 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x55bd595ec628
|     | `-MemberExpr 0x55bd595ee490 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55bd595ec748
|     |   `-MemberExpr 0x55bd595ee460 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x55bd595ec978
|     |     `-CXXThisExpr 0x55bd595ee450 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x55bd595ee518 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x55bd595ee508 <col:32> 'bool' true
|-CXXMethodDecl 0x55bd595eb8b8 <line:250:5, line:253:5> line:250:17 strong_unschedule 'void ()' inline
| `-CompoundStmt 0x55bd595ee768 <col:37, line:253:5>
|   |-BinaryOperator 0x55bd595ee648 <line:251:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x55bd595ee5f0 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x55bd595ec628
|   | | `-MemberExpr 0x55bd595ee5a8 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55bd595ec748
|   | |   `-MemberExpr 0x55bd595ee578 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x55bd595ec978
|   | |     `-CXXThisExpr 0x55bd595ee568 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x55bd595ee630 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x55bd595ee620 <col:32> 'bool' false
|   `-BinaryOperator 0x55bd595ee748 <line:252:9, col:41> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x55bd595ee6f0 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_strong_unscheduled 0x55bd595ec688
|     | `-MemberExpr 0x55bd595ee6a8 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55bd595ec748
|     |   `-MemberExpr 0x55bd595ee678 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x55bd595ec978
|     |     `-CXXThisExpr 0x55bd595ee668 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x55bd595ee730 <col:41> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x55bd595ee720 <col:41> 'bool' true
|-CXXMethodDecl 0x55bd595eb978 <line:261:5, line:264:5> line:261:17 strong_reschedule 'void ()' inline
| `-CompoundStmt 0x55bd595ee8e8 <col:37, line:264:5>
|   |-BinaryOperator 0x55bd595ee868 <line:262:9, col:41> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x55bd595ee810 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_strong_unscheduled 0x55bd595ec688
|   | | `-MemberExpr 0x55bd595ee7c8 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55bd595ec748
|   | |   `-MemberExpr 0x55bd595ee798 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x55bd595ec978
|   | |     `-CXXThisExpr 0x55bd595ee788 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x55bd595ee850 <col:41> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x55bd595ee840 <col:41> 'bool' false
|   `-CXXMemberCallExpr 0x55bd595ee8c8 <line:263:9, col:20> 'void'
|     `-MemberExpr 0x55bd595ee898 <col:9> '<bound member function type>' ->reschedule 0x55bd595eb738
|       `-CXXThisExpr 0x55bd595ee888 <col:9> 'Task *' implicit this
|-CXXMethodDecl 0x55bd595ebac0 <line:275:5, col:39> col:10 move_thread 'void (int)'
| `-ParmVarDecl 0x55bd595eba30 <col:22, col:26> col:26 new_thread_id 'int'
|-CXXMethodDecl 0x55bd595ebb90 <line:279:5, col:26> col:16 tickets 'int () const' inline
|-CXXMethodDecl 0x55bd595ebcd8 <line:280:5, col:34> col:17 used set_tickets 'void (int)' inline
| `-ParmVarDecl 0x55bd595ebc48 <col:29, col:33> col:33 n 'int'
|-CXXMethodDecl 0x55bd595ebe28 <line:281:5, col:41> col:17 adjust_tickets 'void (int)' inline
| `-ParmVarDecl 0x55bd595ebd98 <col:32, col:36> col:36 delta 'int'
|-CXXMethodDecl 0x55bd595ebef0 <line:284:5, col:22> col:17 fire 'bool ()' inline
|-CXXMethodDecl 0x55bd595ebfb0 <line:299:5, col:64> col:25 hook 'TaskCallback () const' inline
| `-DeprecatedAttr 0x55bd595ec050 <col:53> "" ""
|-CXXMethodDecl 0x55bd595ec0e8 <line:300:5, col:58> col:18 thunk 'void *() const' inline
| `-DeprecatedAttr 0x55bd595ec188 <col:47> "" ""
|-AccessSpecDecl 0x55bd595ec1f8 <line:303:3, col:10> col:3 private
|-FieldDecl 0x55bd595ec238 <line:310:5, col:14> col:14 referenced _stride 'unsigned int'
|-FieldDecl 0x55bd595ec2a0 <line:311:5, col:9> col:9 referenced _tickets 'int'
|-CXXRecordDecl 0x55bd595ec2f0 <line:314:5, line:321:5> line:314:11 union Status definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55bd595ec408 <col:5, col:11> col:11 implicit union Status
| |-CXXRecordDecl 0x55bd595ec498 <line:315:9, line:319:9> line:315:9 struct definition
| | |-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | | |-DefaultConstructor exists trivial
| | | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | | |-MoveConstructor exists simple trivial
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial
| | |-FieldDecl 0x55bd595ec5c8 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
| | |-FieldDecl 0x55bd595ec628 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
| | |-FieldDecl 0x55bd595ec688 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
| | |-CXXConstructorDecl 0x55bd5965f158 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
| | |-CXXDestructorDecl 0x55bd5965f230 <col:9> col:9 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x55bd5965f230
| | |-CXXConstructorDecl 0x55bd5965f4e8 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x55bd5965f4e8
| | | `-ParmVarDecl 0x55bd5965f5f8 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
| | `-CXXConstructorDecl 0x55bd5965f698 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x55bd5965f698
| |   `-ParmVarDecl 0x55bd5965f7a8 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'
| |-FieldDecl 0x55bd595ec748 <col:9> col:9 implicit referenced 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| |-IndirectFieldDecl 0x55bd595ec7a8 <line:316:21> col:21 implicit home_thread_id 'int16_t':'short'
| | |-Field 0x55bd595ec748 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x55bd595ec5c8 'home_thread_id' 'int16_t':'short'
| |-IndirectFieldDecl 0x55bd595ec800 <line:317:21> col:21 implicit is_scheduled 'uint8_t':'unsigned char'
| | |-Field 0x55bd595ec748 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x55bd595ec628 'is_scheduled' 'uint8_t':'unsigned char'
| |-IndirectFieldDecl 0x55bd595ec858 <line:318:21> col:21 implicit is_strong_unscheduled 'uint8_t':'unsigned char'
| | |-Field 0x55bd595ec748 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x55bd595ec688 'is_strong_unscheduled' 'uint8_t':'unsigned char'
| |-FieldDecl 0x55bd595ec8b0 <line:320:9, col:18> col:18 status 'uint32_t':'unsigned int'
| |-CXXConstructorDecl 0x55bd5965f068 <line:314:11> col:11 implicit used Status 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55bd5965f9c8 <col:11>
| |-CXXConstructorDecl 0x55bd5965f338 <col:11> col:11 implicit constexpr Status 'void (const Task::Status &)' inline default trivial noexcept-unevaluated 0x55bd5965f338
| | `-ParmVarDecl 0x55bd5965f448 <col:11> col:11 'const Task::Status &'
| `-CXXConstructorDecl 0x55bd5965f848 <col:11> col:11 implicit constexpr Status 'void (Task::Status &&)' inline default trivial noexcept-unevaluated 0x55bd5965f848
|   `-ParmVarDecl 0x55bd5965f958 <col:11> col:11 'Task::Status &&'
|-FieldDecl 0x55bd595ec978 <col:5, line:321:7> col:7 referenced _status 'union Status':'Task::Status'
|-FieldDecl 0x55bd595ec9f0 <line:323:5, col:18> col:18 referenced _hook 'TaskCallback':'bool (*)(Task *, void *)'
|-FieldDecl 0x55bd595eca58 <line:324:5, col:11> col:11 referenced _thunk 'void *'
|-FieldDecl 0x55bd595ecab8 <line:335:5, col:19> col:19 referenced _thread 'RouterThread *'
|-FieldDecl 0x55bd595ecb18 <line:337:5, col:14> col:14 referenced _owner 'Element *'
|-CXXRecordDecl 0x55bd595ecb68 <line:339:5, line:342:5> line:339:11 referenced union Pending definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55bd595ecc88 <col:5, col:11> col:11 implicit union Pending
| |-FieldDecl 0x55bd595ecd28 <line:340:9, col:15> col:15 t 'Task *'
| |-FieldDecl 0x55bd595ecd88 <line:341:9, col:19> col:19 referenced x 'uintptr_t':'unsigned long'
| |-CXXConstructorDecl 0x55bd59647d28 <line:339:11> col:11 implicit constexpr Pending 'void (const Task::Pending &)' inline default trivial noexcept-unevaluated 0x55bd59647d28
| | `-ParmVarDecl 0x55bd59647e38 <col:11> col:11 'const Task::Pending &'
| |-CXXConstructorDecl 0x55bd59647ed8 <col:11> col:11 implicit constexpr Pending 'void (Task::Pending &&)' inline default trivial noexcept-unevaluated 0x55bd59647ed8
| | `-ParmVarDecl 0x55bd59647fe8 <col:11> col:11 'Task::Pending &&'
| |-CXXDestructorDecl 0x55bd59648058 <col:11> col:11 implicit ~Pending 'void ()' inline default trivial noexcept-unevaluated 0x55bd59648058
| |-CXXMethodDecl 0x55bd59659128 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(const Task::Pending &)' inline default trivial noexcept-unevaluated 0x55bd59659128
| | `-ParmVarDecl 0x55bd59659238 <col:11> col:11 'const Task::Pending &'
| |-CXXMethodDecl 0x55bd596592a8 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(Task::Pending &&)' inline default trivial noexcept-unevaluated 0x55bd596592a8
| | `-ParmVarDecl 0x55bd596593b8 <col:11> col:11 'Task::Pending &&'
| `-CXXConstructorDecl 0x55bd5965fa28 <col:11> col:11 implicit used Pending 'void () noexcept' inline default trivial
|   `-CompoundStmt 0x55bd5965fb00 <col:11>
|-FieldDecl 0x55bd595ece00 <line:343:5, col:13> col:13 referenced _pending_nextptr 'Task::Pending'
|-CXXConstructorDecl 0x55bd595ecf48 <line:345:5, col:23> col:5 Task 'void (const Task &)'
| `-ParmVarDecl 0x55bd595ece88 <col:10, col:22> col:22 x 'const Task &'
|-CXXMethodDecl 0x55bd595ed0f8 <line:346:5, col:34> col:11 operator= 'Task &(const Task &)'
| `-ParmVarDecl 0x55bd595ed008 <col:21, col:33> col:33 x 'const Task &'
|-CXXMethodDecl 0x55bd595ed1c0 <line:347:5, col:18> col:10 cleanup 'void ()'
|-CXXMethodDecl 0x55bd595ed280 <line:352:5, col:37> col:17 used on_scheduled_list 'bool () const' inline
|-CXXMethodDecl 0x55bd595ed340 <line:353:5, line:355:5> line:353:17 on_pending_list 'bool () const' inline
| `-CompoundStmt 0x55bd595ee9f8 <col:41, line:355:5>
|   `-ReturnStmt 0x55bd595ee9e8 <line:354:9, col:38>
|     `-BinaryOperator 0x55bd595ee9c8 <col:16, col:38> 'bool' '!='
|       |-ImplicitCastExpr 0x55bd595ee998 <col:16, col:33> 'uintptr_t':'unsigned long' <LValueToRValue>
|       | `-MemberExpr 0x55bd595ee948 <col:16, col:33> 'const uintptr_t':'const unsigned long' lvalue .x 0x55bd595ecd88
|       |   `-MemberExpr 0x55bd595ee918 <col:16> 'const Task::Pending' lvalue ->_pending_nextptr 0x55bd595ece00
|       |     `-CXXThisExpr 0x55bd595ee908 <col:16> 'const Task *' implicit this
|       `-ImplicitCastExpr 0x55bd595ee9b0 <col:38> 'unsigned long' <IntegralCast>
|         `-IntegerLiteral 0x55bd595ee978 <col:38> 'int' 0
|-CXXMethodDecl 0x55bd595ed400 <line:356:5, col:33> col:17 needs_cleanup 'bool () const' inline
|-CXXMethodDecl 0x55bd595ed540 <line:361:5, col:33> col:10 add_pending 'void (bool)'
| `-ParmVarDecl 0x55bd595ed4b0 <col:22, col:27> col:27 always 'bool'
|-CXXMethodDecl 0x55bd595ed6b8 <line:362:5, col:46> col:10 process_pending 'void (RouterThread *)'
| `-ParmVarDecl 0x55bd595ed5f8 <col:26, col:40> col:40 thread 'RouterThread *'
|-CXXMethodDecl 0x55bd595ed800 <line:364:5, col:64> col:10 used complete_schedule 'void (RouterThread *)'
| `-ParmVarDecl 0x55bd595ed770 <col:28, col:42> col:42 process_pending_thread 'RouterThread *'
|-CXXMethodDecl 0x55bd595ed8c8 <line:365:5, col:44> col:17 remove_from_scheduled_list 'void ()' inline
|-CXXMethodDecl 0x55bd595eda90 <line:367:5, col:55> col:17 error_hook 'bool (Task *, void *)' static
| |-ParmVarDecl 0x55bd595ed978 <col:28, col:34> col:34 task 'Task *'
| `-ParmVarDecl 0x55bd595ed9f8 <col:40, col:46> col:46 user_data 'void *'
|-FriendDecl 0x55bd595edb90 <line:369:5, col:18> col:12 'class RouterThread':'RouterThread'
`-FriendDecl 0x55bd595edc20 <line:370:5, col:18> col:12 'class Master':'Master'

Layout: <CGRecordLayout
  LLVMType:%class.Task = type { %struct.TaskLink.base, i32, i32, %"union.Task::Status", i1 (%class.Task*, i8*)*, i8*, %class.RouterThread*, %class.Element*, %"union.Task::Pending" }
  NonVirtualBaseLLVMType:%class.Task = type { %struct.TaskLink.base, i32, i32, %"union.Task::Status", i1 (%class.Task*, i8*)*, i8*, %class.RouterThread*, %class.Element*, %"union.Task::Pending" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | union Packet::Anno
         0 |   char [48] c
         0 |   uint8_t [48] u8
         0 |   uint16_t [24] u16
         0 |   uint32_t [12] u32
         0 |   uint64_t [6] u64
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Packet::AllAnno
         0 |   union Packet::Anno cb
         0 |     char [48] c
         0 |     uint8_t [48] u8
         0 |     uint16_t [24] u16
         0 |     uint32_t [12] u32
         0 |     uint64_t [6] u64
        48 |   unsigned char * mac
        56 |   unsigned char * nh
        64 |   unsigned char * h
        72 |   enum Packet::PacketType pkt_type
        76 |   char [8] timestamp
        88 |   class Packet * next
        96 |   class Packet * prev
           | [sizeof=104, dsize=104, align=8,
           |  nvsize=104, nvalign=8]

*** Dumping AST Record Layout
         0 | class Packet
         0 |   class atomic_uint32_t _use_count
         0 |     uint32_t _val
         8 |   class Packet * _data_packet
        16 |   unsigned char * _head
        24 |   unsigned char * _data
        32 |   unsigned char * _tail
        40 |   unsigned char * _end
        48 |   struct Packet::AllAnno _aa
        48 |     union Packet::Anno cb
        48 |       char [48] c
        48 |       uint8_t [48] u8
        48 |       uint16_t [24] u16
        48 |       uint32_t [12] u32
        48 |       uint64_t [6] u64
        96 |     unsigned char * mac
       104 |     unsigned char * nh
       112 |     unsigned char * h
       120 |     enum Packet::PacketType pkt_type
       124 |     char [8] timestamp
       136 |     class Packet * next
       144 |     class Packet * prev
       152 |   Packet::buffer_destructor_type _destructor
       160 |   void * _destructor_argument
           | [sizeof=168, dsize=168, align=8,
           |  nvsize=168, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55bd594a07e8 prev 0x55bd594959f0 <../dummy_inc/click/packet.hh:702:5, line:711:5> line:702:11 referenced union Anno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55bd594a08e0 <col:5, col:11> col:11 implicit union Anno
|-FieldDecl 0x55bd594a09d0 <line:703:2, col:18> col:7 referenced c 'char [48]'
|-FieldDecl 0x55bd594a0af8 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
|-FieldDecl 0x55bd594a0c78 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
|-FieldDecl 0x55bd594a0df8 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
|-FieldDecl 0x55bd594a0f78 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
|-CXXConstructorDecl 0x55bd594b1da8 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55bd594b2618 <col:11>
|-CXXDestructorDecl 0x55bd594b1e80 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x55bd594b1fb8 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x55bd594b1fb8
| `-ParmVarDecl 0x55bd594b20c8 <col:11> col:11 'const Packet::Anno &'
|-CXXConstructorDecl 0x55bd594b2168 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55bd594b2168
| `-ParmVarDecl 0x55bd594b2278 <col:11> col:11 'Packet::Anno &&'
|-CXXMethodDecl 0x55bd594b5038 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| |-ParmVarDecl 0x55bd594b5148 <col:11> col:11 'const Packet::Anno &'
| `-CompoundStmt 0x55bd594b53c8 <col:11>
|   `-ReturnStmt 0x55bd594b53b8 <col:11>
|     `-UnaryOperator 0x55bd594b53a0 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55bd594b5390 <col:11> 'Packet::Anno *' this
`-CXXMethodDecl 0x55bd594b51b8 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55bd594b51b8
  `-ParmVarDecl 0x55bd594b52c8 <col:11> col:11 'Packet::Anno &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Packet::Anno" = type { [6 x i64] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55bd594a0fe0 <../dummy_inc/click/packet.hh:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55bd594a10f8 <col:5, col:12> col:12 implicit struct AllAnno
|-FieldDecl 0x55bd594a1198 <line:717:2, col:7> col:7 cb 'Packet::Anno'
|-FieldDecl 0x55bd594a1200 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
|-FieldDecl 0x55bd594a1268 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
|-FieldDecl 0x55bd594a12d0 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
|-FieldDecl 0x55bd594a1330 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
|-FieldDecl 0x55bd594a13f0 <line:722:2, col:34> col:7 timestamp 'char [8]'
|-FieldDecl 0x55bd594a1450 <line:723:2, col:10> col:10 referenced next 'Packet *'
|-FieldDecl 0x55bd594a14b0 <line:724:2, col:10> col:10 referenced prev 'Packet *'
|-CXXConstructorDecl 0x55bd594b1cb8 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| |-CXXCtorInitializer Field 0x55bd594a1198 'cb' 'Packet::Anno'
| | `-CXXConstructExpr 0x55bd594b2628 <col:12> 'Packet::Anno' 'void () noexcept'
| `-CompoundStmt 0x55bd594b2680 <col:12>
|-CXXConstructorDecl 0x55bd594b22e8 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x55bd594b22e8
| `-ParmVarDecl 0x55bd594b23f8 <col:12> col:12 'const Packet::AllAnno &'
|-CXXConstructorDecl 0x55bd594b2498 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x55bd594b2498
| `-ParmVarDecl 0x55bd594b25a8 <col:12> col:12 'Packet::AllAnno &&'
`-CXXDestructorDecl 0x55bd594b4720 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  NonVirtualBaseLLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55bd5948f100 <../dummy_inc/click/packet.hh:35:1, line:775:1> line:35:7 referenced class Packet definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55bd5948f218 <col:1, col:7> col:7 implicit referenced class Packet
|-AccessSpecDecl 0x55bd5948f2a8 <col:16, col:22> col:16 public
|-EnumDecl 0x55bd5948f2d0 <line:41:5, line:50:5> line:41:5
| |-EnumConstantDecl 0x55bd5948f3d0 <line:45:2, col:21> col:2 referenced default_headroom 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| | `-ImplicitCastExpr 0x55bd5948f4b0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55bd5948f3b0 <col:21> 'int' Int: 28
| |     `-IntegerLiteral 0x55bd5948f390 <col:21> 'int' 28
| `-EnumConstantDecl 0x55bd5948f460 <line:48:2, col:22> col:2 referenced min_buffer_length 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
|   `-ImplicitCastExpr 0x55bd5948f4c8 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55bd5948f440 <col:22> 'int' Int: 64
|       `-IntegerLiteral 0x55bd5948f420 <col:22> 'int' 64
|-CXXMethodDecl 0x55bd5948f808 <line:52:5, line:53:75> line:52:28 used make 'WritablePacket *(uint32_t, const void *, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x55bd5948f4f0 <col:33, col:42> col:42 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55bd5948f570 <col:52, col:64> col:64 data 'const void *'
| |-ParmVarDecl 0x55bd5948f5e8 <line:53:5, col:14> col:14 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55bd5948f660 <col:22, col:31> col:31 tailroom 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55bd5948f8c8 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x55bd5948fac8 <line:54:5, col:109> col:35 make 'WritablePacket *(const void *, uint32_t)' static inline
| |-ParmVarDecl 0x55bd5948f940 <col:40, col:52> col:52 data 'const void *'
| |-ParmVarDecl 0x55bd5948f9b8 <col:58, col:67> col:67 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55bd5948fb78 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x55bd5948fcd8 <line:55:5, col:91> col:35 make 'WritablePacket *(uint32_t)' static inline
| |-ParmVarDecl 0x55bd5948fbe8 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55bd5948fd80 <col:72> warn_unused_result ""
|-TypedefDecl 0x55bd594900e0 <line:65:5, col:89> col:20 referenced buffer_destructor_type 'void (*)(unsigned char *, size_t, void *)'
| `-PointerType 0x55bd59490070 'void (*)(unsigned char *, size_t, void *)'
|   `-ParenType 0x55bd59490010 'void (unsigned char *, size_t, void *)' sugar
|     `-FunctionProtoType 0x55bd5948ffd0 'void (unsigned char *, size_t, void *)' cdecl
|       |-BuiltinType 0x55bd58f622d0 'void'
|       |-PointerType 0x55bd5920f280 'unsigned char *'
|       | `-BuiltinType 0x55bd58f623d0 'unsigned char'
|       |-TypedefType 0x55bd5900b7f0 'size_t' sugar
|       | |-Typedef 0x55bd58fd2b20 'size_t'
|       | `-BuiltinType 0x55bd58f62430 'unsigned long'
|       `-PointerType 0x55bd58f62ad0 'void *'
|         `-BuiltinType 0x55bd58f622d0 'void'
|-CXXMethodDecl 0x55bd59490558 <line:66:5, line:68:131> line:66:28 make 'WritablePacket *(unsigned char *, uint32_t, Packet::buffer_destructor_type, void *, int, int)' static
| |-ParmVarDecl 0x55bd59490150 <col:33, col:48> col:48 data 'unsigned char *'
| |-ParmVarDecl 0x55bd594901c8 <col:54, col:63> col:63 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55bd59490260 <line:67:5, col:28> col:28 buffer_destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| |-ParmVarDecl 0x55bd594902e0 <line:68:33, col:58> col:39 argument 'void *' cinit
| | `-CStyleCastExpr 0x55bd594aac50 <col:50, col:58> 'void *' <NoOp>
| |   `-ImplicitCastExpr 0x55bd594aac38 <col:58> 'void *' <NullToPointer> part_of_explicit_cast
| |     `-IntegerLiteral 0x55bd594aac00 <col:58> 'int' 0
| |-ParmVarDecl 0x55bd59490360 <col:61, col:76> col:65 headroom 'int' cinit
| | `-IntegerLiteral 0x55bd594aac78 <col:76> 'int' 0
| |-ParmVarDecl 0x55bd594903e0 <col:79, col:94> col:83 tailroom 'int' cinit
| | `-IntegerLiteral 0x55bd594aac98 <col:94> 'int' 0
| `-WarnUnusedResultAttr 0x55bd59490628 <col:112> warn_unused_result ""
|-CXXMethodDecl 0x55bd594906a8 <line:71:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x55bd59490768 <line:73:5, col:50> col:45 used kill 'void ()'
| |-NoInlineAttr 0x55bd59490808 <col:20>
| `-OptimizeNoneAttr 0x55bd59490860 <col:30>
|-CXXMethodDecl 0x55bd594908d8 <line:75:5, col:54> col:45 used shared 'bool () const'
| |-NoInlineAttr 0x55bd59490978 <col:20>
| `-OptimizeNoneAttr 0x55bd594909d0 <col:30>
|-CXXMethodDecl 0x55bd59490a48 <line:76:5, col:55> col:13 clone 'Packet *()'
| `-WarnUnusedResultAttr 0x55bd59490ae8 <col:36> warn_unused_result ""
|-CXXMethodDecl 0x55bd59490b98 <line:77:5, col:102> col:56 uniqueify 'WritablePacket *()'
| |-NoInlineAttr 0x55bd59490c38 <col:20>
| |-OptimizeNoneAttr 0x55bd59490c90 <col:30>
| `-WarnUnusedResultAttr 0x55bd59490cb8 <col:83> warn_unused_result ""
|-CXXMethodDecl 0x55bd59490d10 <line:79:5, col:68> col:61 used data 'const unsigned char *() const'
| |-NoInlineAttr 0x55bd59490db0 <col:20>
| `-OptimizeNoneAttr 0x55bd59490e08 <col:30>
|-CXXMethodDecl 0x55bd59490e58 <line:80:5, col:72> col:61 used end_data 'const unsigned char *() const'
| |-NoInlineAttr 0x55bd59490ef8 <col:20>
| `-OptimizeNoneAttr 0x55bd59490f50 <col:30>
|-CXXMethodDecl 0x55bd59490f98 <line:81:5, col:58> col:49 length 'uint32_t () const'
| |-NoInlineAttr 0x55bd59491038 <col:20>
| `-OptimizeNoneAttr 0x55bd59491090 <col:30>
|-CXXMethodDecl 0x55bd594910d8 <line:82:5, col:32> col:21 used headroom 'uint32_t () const' inline
|-CXXMethodDecl 0x55bd59491198 <line:83:5, col:32> col:21 used tailroom 'uint32_t () const' inline
|-CXXMethodDecl 0x55bd59491260 <line:84:5, col:42> col:33 used buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x55bd59491328 <line:85:5, col:46> col:33 used end_buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x55bd594913e8 <line:86:5, col:37> col:21 used buffer_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55bd59491508 <line:97:5, line:99:5> line:97:28 buffer_destructor 'Packet::buffer_destructor_type () const'
| `-CompoundStmt 0x55bd594aad60 <col:54, line:99:5>
|   `-ReturnStmt 0x55bd594aad50 <line:98:2, col:9>
|     `-ImplicitCastExpr 0x55bd594aad38 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-MemberExpr 0x55bd594aad08 <col:9> 'const Packet::buffer_destructor_type':'void (*const)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x55bd594a17e8
|         `-CXXThisExpr 0x55bd594aacf8 <col:9> 'const Packet *' implicit this
|-CXXMethodDecl 0x55bd594916a8 <line:101:5, line:103:5> line:101:10 set_buffer_destructor 'void (Packet::buffer_destructor_type)'
| |-ParmVarDecl 0x55bd594915b8 <col:32, col:55> col:55 used destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| `-CompoundStmt 0x55bd594aae10 <col:67, line:103:5>
|   `-BinaryOperator 0x55bd594aadf0 <line:102:9, col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x55bd594aad88 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x55bd594a17e8
|     | `-CXXThisExpr 0x55bd594aad78 <col:9> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x55bd594aadd8 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-DeclRefExpr 0x55bd594aadb8 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ParmVar 0x55bd594915b8 'destructor' 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-CXXMethodDecl 0x55bd594917a0 <line:105:5, line:107:5> line:105:11 destructor_argument 'void *()'
| `-CompoundStmt 0x55bd594aae90 <col:33, line:107:5>
|   `-ReturnStmt 0x55bd594aae80 <line:106:9, col:16>
|     `-ImplicitCastExpr 0x55bd594aae68 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x55bd594aae38 <col:16> 'void *' lvalue ->_destructor_argument 0x55bd594a1850
|         `-CXXThisExpr 0x55bd594aae28 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x55bd59491860 <line:109:5, line:113:5> line:109:10 reset_buffer 'void ()'
| `-CompoundStmt 0x55bd594ab4c0 <col:25, line:113:5>
|   |-ParenExpr 0x55bd594ab208 <line:110:2, col:146> 'void'
|   | `-ConditionalOperator 0x55bd594ab1d8 <col:3, col:145> 'void'
|   |   |-CXXStaticCastExpr 0x55bd594aaf48 <col:3, col:32> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x55bd594aaf20 <col:23, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-CXXMemberCallExpr 0x55bd594aaee8 <col:24, col:31> 'bool'
|   |   |     `-MemberExpr 0x55bd594aaeb8 <col:24> '<bound member function type>' ->shared 0x55bd594908d8
|   |   |       `-ImplicitCastExpr 0x55bd594aaf08 <col:24> 'const Packet *' <NoOp>
|   |   |         `-CXXThisExpr 0x55bd594aaea8 <col:24> 'Packet *' implicit this
|   |   |-CXXFunctionalCastExpr 0x55bd594aafa8 <col:36, col:43> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55bd594aaf88 <col:42> 'int' 0
|   |   `-CallExpr 0x55bd594ab138 <col:47, col:145> 'void'
|   |     |-ImplicitCastExpr 0x55bd594ab120 <col:47> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55bd594ab100 <col:47> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55bd59002600 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55bd594ab178 <col:62> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55bd594ab018 <col:62> 'const char [10]' lvalue "!shared()"
|   |     |-ImplicitCastExpr 0x55bd594ab190 <col:75> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55bd594ab040 <col:75> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55bd594ab1a8 <col:107> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55bd594ab078 <col:107> 'int' 110
|   |     `-ImplicitCastExpr 0x55bd594ab1c0 <col:112, col:126> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55bd594ab0e8 <col:112, col:126> 'const char [28]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55bd594ab0d0 <col:126> 'const char [28]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55bd594ab098 <col:126> 'const char [28]' lvalue "void Packet::reset_buffer()"
|   |-BinaryOperator 0x55bd594ab408 <line:111:2, col:33> 'unsigned char *' lvalue '='
|   | |-MemberExpr 0x55bd594ab238 <col:2> 'unsigned char *' lvalue ->_head 0x55bd594a15f0
|   | | `-CXXThisExpr 0x55bd594ab228 <col:2> 'Packet *' implicit this
|   | `-ImplicitCastExpr 0x55bd594ab3f0 <col:10, col:33> 'unsigned char *' <LValueToRValue>
|   |   `-BinaryOperator 0x55bd594ab3d0 <col:10, col:33> 'unsigned char *' lvalue '='
|   |     |-MemberExpr 0x55bd594ab278 <col:10> 'unsigned char *' lvalue ->_data 0x55bd594a1658
|   |     | `-CXXThisExpr 0x55bd594ab268 <col:10> 'Packet *' implicit this
|   |     `-ImplicitCastExpr 0x55bd594ab3b8 <col:18, col:33> 'unsigned char *' <LValueToRValue>
|   |       `-BinaryOperator 0x55bd594ab398 <col:18, col:33> 'unsigned char *' lvalue '='
|   |         |-MemberExpr 0x55bd594ab2b8 <col:18> 'unsigned char *' lvalue ->_tail 0x55bd594a16c0
|   |         | `-CXXThisExpr 0x55bd594ab2a8 <col:18> 'Packet *' implicit this
|   |         `-ImplicitCastExpr 0x55bd594ab380 <col:26, col:33> 'unsigned char *' <LValueToRValue>
|   |           `-BinaryOperator 0x55bd594ab360 <col:26, col:33> 'unsigned char *' lvalue '='
|   |             |-MemberExpr 0x55bd594ab2f8 <col:26> 'unsigned char *' lvalue ->_end 0x55bd594a1728
|   |             | `-CXXThisExpr 0x55bd594ab2e8 <col:26> 'Packet *' implicit this
|   |             `-ImplicitCastExpr 0x55bd594ab348 <col:33> 'unsigned char *' <NullToPointer>
|   |               `-IntegerLiteral 0x55bd594ab328 <col:33> 'int' 0
|   `-BinaryOperator 0x55bd594ab4a0 <line:112:2, col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x55bd594ab438 <col:2> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x55bd594a17e8
|     | `-CXXThisExpr 0x55bd594ab428 <col:2> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x55bd594ab488 <col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <NullToPointer>
|       `-IntegerLiteral 0x55bd594ab468 <col:16> 'int' 0
|-CXXMethodDecl 0x55bd594919a0 <line:141:5, col:109> col:56 push 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x55bd59491910 <col:61, col:70> col:70 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55bd59491a48 <col:20>
| |-OptimizeNoneAttr 0x55bd59491aa0 <col:30>
| `-WarnUnusedResultAttr 0x55bd59491ac8 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x55bd59491b98 <line:152:5, col:120> col:56 push_mac_header 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x55bd59491b08 <col:72, col:81> col:81 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55bd59491c40 <col:20>
| |-OptimizeNoneAttr 0x55bd59491c98 <col:30>
| `-WarnUnusedResultAttr 0x55bd59491cc0 <col:101> warn_unused_result ""
|-CXXMethodDecl 0x55bd59491df8 <line:171:5, col:76> col:13 nonunique_push 'Packet *(uint32_t)'
| |-ParmVarDecl 0x55bd59491d00 <col:28, col:37> col:37 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55bd59491ea0 <col:57> warn_unused_result ""
|-CXXMethodDecl 0x55bd59491fa0 <line:187:5, col:62> col:45 pull 'void (uint32_t)'
| |-ParmVarDecl 0x55bd59491f10 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55bd59492048 <col:20>
| `-OptimizeNoneAttr 0x55bd594920a0 <col:30>
|-CXXMethodDecl 0x55bd59492168 <line:213:5, col:73> col:21 put 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x55bd594920d8 <col:25, col:34> col:34 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55bd59492210 <col:54> warn_unused_result ""
|-CXXMethodDecl 0x55bd59492310 <line:230:5, col:75> col:13 nonunique_put 'Packet *(uint32_t)'
| |-ParmVarDecl 0x55bd59492280 <col:27, col:36> col:36 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55bd594923b8 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x55bd594924b8 <line:245:5, col:62> col:45 take 'void (uint32_t)'
| |-ParmVarDecl 0x55bd59492428 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55bd59492560 <col:20>
| `-OptimizeNoneAttr 0x55bd594925b8 <col:30>
|-CXXMethodDecl 0x55bd59492748 <line:269:5, col:99> col:13 shift_data 'Packet *(int, bool)'
| |-ParmVarDecl 0x55bd594925f8 <col:24, col:28> col:28 offset 'int'
| |-ParmVarDecl 0x55bd59492670 <col:36, col:59> col:41 free_on_failure 'bool' cinit
| | `-CXXBoolLiteralExpr 0x55bd594aacb8 <col:59> 'bool' true
| `-WarnUnusedResultAttr 0x55bd594927f8 <col:80> warn_unused_result ""
|-CXXMethodDecl 0x55bd594929f8 <line:271:5, col:71> col:17 shrink_data 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x55bd59492870 <col:29, col:50> col:50 data 'const unsigned char *'
| `-ParmVarDecl 0x55bd594928e8 <col:56, col:65> col:65 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55bd59492c08 <line:272:5, col:78> col:17 change_headroom_and_length 'void (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x55bd59492ab8 <col:44, col:53> col:53 headroom 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55bd59492b30 <col:63, col:72> col:72 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55bd59492e18 <line:274:5, col:40> col:10 copy 'bool (Packet *, int)'
| |-ParmVarDecl 0x55bd59492cc8 <col:15, col:23> col:23 p 'Packet *'
| `-ParmVarDecl 0x55bd59492d48 <col:26, col:39> col:30 headroom 'int' cinit
|   `-IntegerLiteral 0x55bd594aacc8 <col:39> 'int' 0
|-CXXMethodDecl 0x55bd59492ee8 <line:279:5, col:34> col:17 has_mac_header 'bool () const' inline
|-CXXMethodDecl 0x55bd59492fb0 <line:280:5, col:46> col:33 used mac_header 'const unsigned char *() const' inline
|-CXXMethodDecl 0x55bd59493078 <line:281:5, col:36> col:16 mac_header_offset 'int () const' inline
|-CXXMethodDecl 0x55bd59493138 <line:282:5, col:41> col:21 mac_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55bd59493200 <line:283:5, col:29> col:16 mac_length 'int () const' inline
|-CXXMethodDecl 0x55bd59493348 <line:284:5, col:54> col:17 set_mac_header 'void (const unsigned char *)' inline
| `-ParmVarDecl 0x55bd594932b8 <col:32, col:53> col:53 p 'const unsigned char *'
|-CXXMethodDecl 0x55bd59493518 <line:285:5, col:68> col:17 used set_mac_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x55bd59493408 <col:32, col:53> col:53 p 'const unsigned char *'
| `-ParmVarDecl 0x55bd59493480 <col:56, col:65> col:65 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55bd594935e8 <line:286:5, col:34> col:17 clear_mac_header 'void ()' inline
|-CXXMethodDecl 0x55bd594936a8 <line:288:5, col:66> col:45 has_network_header 'bool () const'
| |-NoInlineAttr 0x55bd59493748 <col:20>
| `-OptimizeNoneAttr 0x55bd594937a0 <col:30>
|-CXXMethodDecl 0x55bd594937f0 <line:289:5, col:78> col:61 used network_header 'const unsigned char *() const'
| |-NoInlineAttr 0x55bd59493890 <col:20>
| `-OptimizeNoneAttr 0x55bd594938e8 <col:30>
|-CXXMethodDecl 0x55bd59493938 <line:290:5, col:40> col:16 used network_header_offset 'int () const' inline
|-CXXMethodDecl 0x55bd594939f8 <line:291:5, col:45> col:21 used network_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55bd59493ac0 <line:292:5, col:61> col:44 network_length 'int () const'
| |-NoInlineAttr 0x55bd59493b60 <col:20>
| `-OptimizeNoneAttr 0x55bd59493bb8 <col:30>
|-CXXMethodDecl 0x55bd59493d08 <line:293:5, col:72> col:17 set_network_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x55bd59493bf8 <col:36, col:57> col:57 p 'const unsigned char *'
| `-ParmVarDecl 0x55bd59493c70 <col:60, col:69> col:69 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55bd59493e58 <line:294:5, col:55> col:17 set_network_header_length 'void (uint32_t)' inline
| `-ParmVarDecl 0x55bd59493dc8 <col:43, col:52> col:52 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55bd59493f30 <line:295:5, col:38> col:17 clear_network_header 'void ()' inline
|-CXXMethodDecl 0x55bd59493ff0 <line:297:5, col:68> col:45 has_transport_header 'bool () const'
| |-NoInlineAttr 0x55bd59494090 <col:20>
| `-OptimizeNoneAttr 0x55bd594940e8 <col:30>
|-CXXMethodDecl 0x55bd59494138 <line:298:5, col:80> col:61 used transport_header 'const unsigned char *() const'
| |-NoInlineAttr 0x55bd594941d8 <col:20>
| `-OptimizeNoneAttr 0x55bd59494230 <col:30>
|-CXXMethodDecl 0x55bd59494280 <line:299:5, col:42> col:16 transport_header_offset 'int () const' inline
|-CXXMethodDecl 0x55bd59494348 <line:300:5, col:63> col:44 transport_length 'int () const'
| |-NoInlineAttr 0x55bd594943e8 <col:20>
| `-OptimizeNoneAttr 0x55bd59494440 <col:30>
|-CXXMethodDecl 0x55bd59494488 <line:301:5, col:40> col:17 clear_transport_header 'void ()' inline
|-CXXMethodDecl 0x55bd594945a8 <line:304:5, col:46> col:31 ether_header 'const click_ether *() const' inline
|-CXXMethodDecl 0x55bd59494718 <line:305:5, col:57> col:17 set_ether_header 'void (const click_ether *)' inline
| `-ParmVarDecl 0x55bd59494658 <col:34, col:53> col:53 ethh 'const click_ether *'
|-CXXMethodDecl 0x55bd59494808 <line:307:5, col:68> col:56 ip_header 'const click_ip *() const'
| |-NoInlineAttr 0x55bd594948a8 <col:20>
| `-OptimizeNoneAttr 0x55bd59494900 <col:30>
|-CXXMethodDecl 0x55bd59494950 <line:308:5, col:35> col:16 ip_header_offset 'int () const' inline
|-CXXMethodDecl 0x55bd59494a10 <line:309:5, col:40> col:21 ip_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55bd59494c48 <line:310:5, col:92> col:45 set_ip_header 'void (const click_ip *, uint32_t)'
| |-ParmVarDecl 0x55bd59494ac0 <col:59, col:75> col:75 iph 'const click_ip *'
| |-ParmVarDecl 0x55bd59494b38 <col:80, col:89> col:89 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55bd59494cf8 <col:20>
| `-OptimizeNoneAttr 0x55bd59494d50 <col:30>
|-CXXMethodDecl 0x55bd59494df8 <line:312:5, col:70> col:57 ip6_header 'const click_ip6 *() const'
| |-NoInlineAttr 0x55bd59494e98 <col:20>
| `-OptimizeNoneAttr 0x55bd59494ef0 <col:30>
|-CXXMethodDecl 0x55bd59494f40 <line:313:5, col:64> col:44 ip6_header_offset 'int () const'
| |-NoInlineAttr 0x55bd59494fe0 <col:20>
| `-OptimizeNoneAttr 0x55bd59495038 <col:30>
|-CXXMethodDecl 0x55bd59495080 <line:314:5, col:69> col:49 ip6_header_length 'uint32_t () const'
| |-NoInlineAttr 0x55bd59495120 <col:20>
| `-OptimizeNoneAttr 0x55bd59495178 <col:30>
|-CXXMethodDecl 0x55bd59495278 <line:315:5, col:81> col:45 set_ip6_header 'void (const click_ip6 *)'
| |-ParmVarDecl 0x55bd594951b0 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-NoInlineAttr 0x55bd59495320 <col:20>
| `-OptimizeNoneAttr 0x55bd59495378 <col:30>
|-CXXMethodDecl 0x55bd59495538 <line:316:5, col:95> col:45 set_ip6_header 'void (const click_ip6 *, uint32_t)'
| |-ParmVarDecl 0x55bd594953b0 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-ParmVarDecl 0x55bd59495428 <col:83, col:92> col:92 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55bd594955e8 <col:20>
| `-OptimizeNoneAttr 0x55bd59495640 <col:30>
|-CXXMethodDecl 0x55bd594956e8 <line:318:5, col:44> col:30 used icmp_header 'const click_icmp *() const' inline
|-CXXMethodDecl 0x55bd59495808 <line:319:5, col:42> col:29 used tcp_header 'const click_tcp *() const' inline
|-CXXMethodDecl 0x55bd59495928 <line:320:5, col:42> col:29 used udp_header 'const click_udp *() const' inline
|-AccessSpecDecl 0x55bd594959c8 <line:333:3, col:10> col:3 private
|-CXXRecordDecl 0x55bd594959f0 <line:335:5, col:11> col:11 referenced union Anno
|-CXXMethodDecl 0x55bd59495b18 <line:340:5, col:60> col:52 used xanno 'const Packet::Anno *() const'
| |-NoInlineAttr 0x55bd59495bb8 <col:20>
| `-OptimizeNoneAttr 0x55bd59495c10 <col:30>
|-CXXMethodDecl 0x55bd59495cb8 <line:341:5, col:52> col:46 used xanno 'Packet::Anno *()'
| |-NoInlineAttr 0x55bd59495d58 <col:20>
| `-OptimizeNoneAttr 0x55bd59495db0 <col:30>
|-AccessSpecDecl 0x55bd59495dd8 <line:344:3, col:9> col:3 public
|-EnumDecl 0x55bd59495e00 <line:349:5, line:351:5> line:349:5
| `-EnumConstantDecl 0x55bd59495f00 <line:350:2, col:14> col:2 referenced anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   `-ImplicitCastExpr 0x55bd59495f50 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55bd59495ee0 <col:14> 'int' Int: 48
|       `-IntegerLiteral 0x55bd59495ec0 <col:14> 'int' 48
|-CXXMethodDecl 0x55bd59495fb8 <line:354:5, col:74> col:57 used timestamp_anno 'const Timestamp &() const'
| |-NoInlineAttr 0x55bd59496058 <col:20>
| `-OptimizeNoneAttr 0x55bd594960b0 <col:30>
|-CXXMethodDecl 0x55bd59496128 <line:356:5, col:66> col:51 used timestamp_anno 'Timestamp &()'
| |-NoInlineAttr 0x55bd594961c8 <col:20>
| `-OptimizeNoneAttr 0x55bd59496220 <col:30>
|-CXXMethodDecl 0x55bd594962e8 <line:359:5, col:54> col:17 used set_timestamp_anno 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x55bd59496258 <col:36, col:53> col:53 t 'const Timestamp &'
|-CXXMethodDecl 0x55bd59496488 <line:362:5, col:38> col:24 used device_anno 'net_device *() const' inline
|-CXXMethodDecl 0x55bd59496628 <line:364:5, col:48> col:17 used set_device_anno 'void (net_device *)' inline
| `-ParmVarDecl 0x55bd59496538 <col:33, col:45> col:45 dev 'net_device *'
|-EnumDecl 0x55bd594966d0 <line:368:5, line:381:5> line:368:10 referenced PacketType
| |-EnumConstantDecl 0x55bd594967d0 <line:369:2, col:9> col:2 HOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55bd59496b80 <col:9> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55bd594967b0 <col:9> 'int' Int: 0
| |     `-IntegerLiteral 0x55bd59496790 <col:9> 'int' 0
| |-EnumConstantDecl 0x55bd59496860 <line:370:2, col:14> col:2 BROADCAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55bd59496b98 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55bd59496840 <col:14> 'int' Int: 1
| |     `-IntegerLiteral 0x55bd59496820 <col:14> 'int' 1
| |-EnumConstantDecl 0x55bd594968f0 <line:372:2, col:14> col:2 MULTICAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55bd59496bb0 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55bd594968d0 <col:14> 'int' Int: 2
| |     `-IntegerLiteral 0x55bd594968b0 <col:14> 'int' 2
| |-EnumConstantDecl 0x55bd59496980 <line:374:2, col:14> col:2 OTHERHOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55bd59496bc8 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55bd59496960 <col:14> 'int' Int: 3
| |     `-IntegerLiteral 0x55bd59496940 <col:14> 'int' 3
| |-EnumConstantDecl 0x55bd59496a10 <line:377:2, col:13> col:2 OUTGOING 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55bd59496be0 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55bd594969f0 <col:13> 'int' Int: 4
| |     `-IntegerLiteral 0x55bd594969d0 <col:13> 'int' 4
| |-EnumConstantDecl 0x55bd59496aa0 <line:379:2, col:13> col:2 LOOPBACK 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55bd59496bf8 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55bd59496a80 <col:13> 'int' Int: 5
| |     `-IntegerLiteral 0x55bd59496a60 <col:13> 'int' 5
| `-EnumConstantDecl 0x55bd59496b30 <line:380:2, col:14> col:2 FASTROUTE 'Packet::PacketType'
|   `-ImplicitCastExpr 0x55bd59496c10 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55bd59496b10 <col:14> 'int' Int: 6
|       `-IntegerLiteral 0x55bd59496af0 <col:14> 'int' 6
|-CXXMethodDecl 0x55bd59496c78 <line:383:5, col:70> col:51 used packet_type_anno 'Packet::PacketType () const'
| |-NoInlineAttr 0x55bd59496d18 <col:20>
| `-OptimizeNoneAttr 0x55bd59496d70 <col:30>
|-CXXMethodDecl 0x55bd59496e68 <line:385:5, col:78> col:45 used set_packet_type_anno 'void (Packet::PacketType)'
| |-ParmVarDecl 0x55bd59496da8 <col:66, col:77> col:77 t 'Packet::PacketType'
| |-NoInlineAttr 0x55bd59496f10 <col:20>
| `-OptimizeNoneAttr 0x55bd59496f68 <col:30>
|-CXXMethodDecl 0x55bd59496fd8 <line:410:5, col:27> col:20 next 'Packet *() const' inline
|-CXXMethodDecl 0x55bd59497100 <line:412:5, col:26> col:21 next 'Packet *&()' inline
|-CXXMethodDecl 0x55bd59497278 <line:414:5, col:35> col:17 set_next 'void (Packet *)' inline
| `-ParmVarDecl 0x55bd594971b0 <col:26, col:34> col:34 p 'Packet *'
|-CXXMethodDecl 0x55bd59497340 <line:417:5, col:27> col:20 prev 'Packet *() const' inline
|-CXXMethodDecl 0x55bd59497408 <line:419:5, col:26> col:21 prev 'Packet *&()' inline
|-CXXMethodDecl 0x55bd59497548 <line:421:5, col:35> col:17 set_prev 'void (Packet *)' inline
| `-ParmVarDecl 0x55bd594974b8 <col:26, col:34> col:34 p 'Packet *'
|-EnumDecl 0x55bd594975f0 <line:423:5, line:426:5> line:423:5
| |-EnumConstantDecl 0x55bd594976f0 <line:424:2, col:23> col:2 referenced dst_ip_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x55bd594978f0 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55bd594976d0 <col:23> 'int' Int: 0
| |     `-IntegerLiteral 0x55bd594976b0 <col:23> 'int' 0
| |-EnumConstantDecl 0x55bd59497780 <col:26, col:45> col:26 dst_ip_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x55bd59497908 <col:45> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55bd59497760 <col:45> 'int' Int: 4
| |     `-IntegerLiteral 0x55bd59497740 <col:45> 'int' 4
| |-EnumConstantDecl 0x55bd59497810 <line:425:2, col:24> col:2 dst_ip6_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x55bd59497920 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55bd594977f0 <col:24> 'int' Int: 0
| |     `-IntegerLiteral 0x55bd594977d0 <col:24> 'int' 0
| `-EnumConstantDecl 0x55bd594978a0 <col:27, col:47> col:27 dst_ip6_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
|   `-ImplicitCastExpr 0x55bd59497938 <col:47> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55bd59497880 <col:47> 'int' Int: 16
|       `-IntegerLiteral 0x55bd59497860 <col:47> 'int' 16
|-CXXMethodDecl 0x55bd59497998 <line:431:5, col:36> col:22 dst_ip_anno 'IPAddress () const' inline
|-CXXMethodDecl 0x55bd59497b08 <line:436:5, col:75> col:45 set_dst_ip_anno 'void (IPAddress)'
| |-ParmVarDecl 0x55bd59497a48 <col:61, col:71> col:71 addr 'IPAddress'
| |-NoInlineAttr 0x55bd59497bb0 <col:20>
| `-OptimizeNoneAttr 0x55bd59497c08 <col:30>
|-CXXMethodDecl 0x55bd59497c58 <line:441:5, col:36> col:11 anno 'void *()'
| `-CompoundStmt 0x55bd594ab5e0 <col:18, col:36>
|   `-ReturnStmt 0x55bd594ab5d0 <col:20, col:33>
|     `-ImplicitCastExpr 0x55bd594ab5b8 <col:27, col:33> 'void *' <BitCast>
|       `-CXXMemberCallExpr 0x55bd594ab598 <col:27, col:33> 'Packet::Anno *'
|         `-MemberExpr 0x55bd594ab568 <col:27> '<bound member function type>' ->xanno 0x55bd59495cb8
|           `-CXXThisExpr 0x55bd594ab558 <col:27> 'Packet *' implicit this
|-CXXMethodDecl 0x55bd59497d50 <line:444:5, col:48> col:17 anno 'const void *() const'
| `-CompoundStmt 0x55bd594ab6f0 <col:30, col:48>
|   `-ReturnStmt 0x55bd594ab6e0 <col:32, col:45>
|     `-ImplicitCastExpr 0x55bd594ab6c8 <col:39, col:45> 'const void *' <BitCast>
|       `-CXXMemberCallExpr 0x55bd594ab6a8 <col:39, col:45> 'const Packet::Anno *'
|         `-MemberExpr 0x55bd594ab678 <col:39> '<bound member function type>' ->xanno 0x55bd59495b18
|           `-CXXThisExpr 0x55bd594ab668 <col:39> 'const Packet *' implicit this
|-CXXMethodDecl 0x55bd59497e38 <line:447:5, col:50> col:14 used anno_u8 'uint8_t *()'
| `-CompoundStmt 0x55bd594ab888 <col:24, col:50>
|   `-ReturnStmt 0x55bd594ab878 <col:26, col:47>
|     `-UnaryOperator 0x55bd594ab860 <col:33, col:47> 'uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55bd594ab840 <col:34, col:47> 'uint8_t':'unsigned char' lvalue
|         |-ImplicitCastExpr 0x55bd594ab828 <col:34, col:43> 'uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55bd594ab7d8 <col:34, col:43> 'uint8_t [48]' lvalue ->u8 0x55bd594a0af8
|         |   `-CXXMemberCallExpr 0x55bd594ab7b8 <col:34, col:40> 'Packet::Anno *'
|         |     `-MemberExpr 0x55bd594ab788 <col:34> '<bound member function type>' ->xanno 0x55bd59495cb8
|         |       `-CXXThisExpr 0x55bd594ab778 <col:34> 'Packet *' implicit this
|         `-IntegerLiteral 0x55bd594ab808 <col:46> 'int' 0
|-CXXMethodDecl 0x55bd59497f40 <line:450:5, col:62> col:20 used anno_u8 'const uint8_t *() const'
| `-CompoundStmt 0x55bd594aba58 <col:36, col:62>
|   `-ReturnStmt 0x55bd594aba48 <col:38, col:59>
|     `-UnaryOperator 0x55bd594aba30 <col:45, col:59> 'const uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55bd594aba10 <col:46, col:59> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x55bd594ab9f8 <col:46, col:55> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55bd594ab970 <col:46, col:55> 'uint8_t const[48]' lvalue ->u8 0x55bd594a0af8
|         |   `-CXXMemberCallExpr 0x55bd594ab950 <col:46, col:52> 'const Packet::Anno *'
|         |     `-MemberExpr 0x55bd594ab920 <col:46> '<bound member function type>' ->xanno 0x55bd59495b18
|         |       `-CXXThisExpr 0x55bd594ab910 <col:46> 'const Packet *' implicit this
|         `-IntegerLiteral 0x55bd594ab9a0 <col:58> 'int' 0
|-CXXMethodDecl 0x55bd59498058 <line:453:5, col:53> col:15 used anno_u32 'uint32_t *()'
| `-CompoundStmt 0x55bd594abbf0 <col:26, col:53>
|   `-ReturnStmt 0x55bd594abbe0 <col:28, col:50>
|     `-UnaryOperator 0x55bd594abbc8 <col:35, col:50> 'uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55bd594abba8 <col:36, col:50> 'uint32_t':'unsigned int' lvalue
|         |-ImplicitCastExpr 0x55bd594abb90 <col:36, col:45> 'uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55bd594abb40 <col:36, col:45> 'uint32_t [12]' lvalue ->u32 0x55bd594a0df8
|         |   `-CXXMemberCallExpr 0x55bd594abb20 <col:36, col:42> 'Packet::Anno *'
|         |     `-MemberExpr 0x55bd594abaf0 <col:36> '<bound member function type>' ->xanno 0x55bd59495cb8
|         |       `-CXXThisExpr 0x55bd594abae0 <col:36> 'Packet *' implicit this
|         `-IntegerLiteral 0x55bd594abb70 <col:49> 'int' 0
|-CXXMethodDecl 0x55bd59498178 <line:456:5, col:65> col:21 used anno_u32 'const uint32_t *() const'
| `-CompoundStmt 0x55bd594abdc8 <col:38, col:65>
|   `-ReturnStmt 0x55bd594abdb8 <col:40, col:62>
|     `-UnaryOperator 0x55bd594abda0 <col:47, col:62> 'const uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55bd594abd80 <col:48, col:62> 'const uint32_t':'const unsigned int' lvalue
|         |-ImplicitCastExpr 0x55bd594abd68 <col:48, col:57> 'const uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55bd594abcd8 <col:48, col:57> 'uint32_t const[12]' lvalue ->u32 0x55bd594a0df8
|         |   `-CXXMemberCallExpr 0x55bd594abcb8 <col:48, col:54> 'const Packet::Anno *'
|         |     `-MemberExpr 0x55bd594abc88 <col:48> '<bound member function type>' ->xanno 0x55bd59495b18
|         |       `-CXXThisExpr 0x55bd594abc78 <col:48> 'const Packet *' implicit this
|         `-IntegerLiteral 0x55bd594abd08 <col:61> 'int' 0
|-CXXMethodDecl 0x55bd59498328 <line:460:5, line:463:5> line:460:13 used anno_u8 'uint8_t (int) const'
| |-ParmVarDecl 0x55bd59498230 <col:21, col:25> col:25 used i 'int'
| `-CompoundStmt 0x55bd594ac498 <col:34, line:463:5>
|   |-ParenExpr 0x55bd594ac2e0 <line:461:2, col:174> 'void'
|   | `-ConditionalOperator 0x55bd594ac2b0 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x55bd594abf18 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55bd594abee8 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55bd594abe38 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55bd594abe20 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55bd594abde0 <col:23> 'int' lvalue ParmVar 0x55bd59498230 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55bd594abe00 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55bd594abec8 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55bd594abe98 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55bd594abe58 <col:33> 'int' lvalue ParmVar 0x55bd59498230 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x55bd594abeb0 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x55bd594abe78 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55bd59495f00 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x55bd594abf78 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55bd594abf58 <col:56> 'int' 0
|   |   `-CallExpr 0x55bd594ac210 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x55bd594ac1f8 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55bd594ac1d8 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55bd59002600 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55bd594ac250 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55bd594ac068 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x55bd594ac268 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55bd594ac098 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55bd594ac280 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55bd594ac0d0 <col:135> 'int' 461
|   |     `-ImplicitCastExpr 0x55bd594ac298 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55bd594ac1c0 <col:140, col:154> 'const char [35]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55bd594ac1a8 <col:154> 'const char [35]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55bd594ac168 <col:154> 'const char [35]' lvalue "uint8_t Packet::anno_u8(int) const"
|   `-ReturnStmt 0x55bd594ac488 <line:462:2, col:22>
|     `-ImplicitCastExpr 0x55bd594ac470 <col:9, col:22> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-ArraySubscriptExpr 0x55bd594ac450 <col:9, col:22> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x55bd594ac420 <col:9, col:18> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55bd594ac3d0 <col:9, col:18> 'uint8_t const[48]' lvalue ->u8 0x55bd594a0af8
|         |   `-CXXMemberCallExpr 0x55bd594ac3b0 <col:9, col:15> 'const Packet::Anno *'
|         |     `-MemberExpr 0x55bd594ac380 <col:9> '<bound member function type>' ->xanno 0x55bd59495b18
|         |       `-CXXThisExpr 0x55bd594ac370 <col:9> 'const Packet *' implicit this
|         `-ImplicitCastExpr 0x55bd594ac438 <col:21> 'int' <LValueToRValue>
|           `-DeclRefExpr 0x55bd594ac400 <col:21> 'int' lvalue ParmVar 0x55bd59498230 'i' 'int'
|-CXXMethodDecl 0x55bd59498578 <line:469:5, line:472:5> line:469:10 used set_anno_u8 'void (int, uint8_t)'
| |-ParmVarDecl 0x55bd594983e8 <col:22, col:26> col:26 used i 'int'
| |-ParmVarDecl 0x55bd59498460 <col:29, col:37> col:37 used x 'uint8_t':'unsigned char'
| `-CompoundStmt 0x55bd594acb28 <col:40, line:472:5>
|   |-ParenExpr 0x55bd594ac940 <line:470:2, col:174> 'void'
|   | `-ConditionalOperator 0x55bd594ac910 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x55bd594ac5f0 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55bd594ac5c0 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55bd594ac510 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55bd594ac4f8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55bd594ac4b8 <col:23> 'int' lvalue ParmVar 0x55bd594983e8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55bd594ac4d8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55bd594ac5a0 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55bd594ac570 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55bd594ac530 <col:33> 'int' lvalue ParmVar 0x55bd594983e8 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x55bd594ac588 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x55bd594ac550 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55bd59495f00 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x55bd594ac650 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55bd594ac630 <col:56> 'int' 0
|   |   `-CallExpr 0x55bd594ac870 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x55bd594ac858 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55bd594ac838 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55bd59002600 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55bd594ac8b0 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55bd594ac6c0 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x55bd594ac8c8 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55bd594ac6f0 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55bd594ac8e0 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55bd594ac728 <col:135> 'int' 470
|   |     `-ImplicitCastExpr 0x55bd594ac8f8 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55bd594ac820 <col:140, col:154> 'const char [39]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55bd594ac808 <col:154> 'const char [39]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55bd594ac7c8 <col:154> 'const char [39]' lvalue "void Packet::set_anno_u8(int, uint8_t)"
|   `-BinaryOperator 0x55bd594acb08 <line:471:2, col:19> 'uint8_t':'unsigned char' lvalue '='
|     |-ArraySubscriptExpr 0x55bd594acab0 <col:2, col:15> 'uint8_t':'unsigned char' lvalue
|     | |-ImplicitCastExpr 0x55bd594aca80 <col:2, col:11> 'uint8_t *' <ArrayToPointerDecay>
|     | | `-MemberExpr 0x55bd594aca30 <col:2, col:11> 'uint8_t [48]' lvalue ->u8 0x55bd594a0af8
|     | |   `-CXXMemberCallExpr 0x55bd594aca10 <col:2, col:8> 'Packet::Anno *'
|     | |     `-MemberExpr 0x55bd594ac9e0 <col:2> '<bound member function type>' ->xanno 0x55bd59495cb8
|     | |       `-CXXThisExpr 0x55bd594ac9d0 <col:2> 'Packet *' implicit this
|     | `-ImplicitCastExpr 0x55bd594aca98 <col:14> 'int' <LValueToRValue>
|     |   `-DeclRefExpr 0x55bd594aca60 <col:14> 'int' lvalue ParmVar 0x55bd594983e8 'i' 'int'
|     `-ImplicitCastExpr 0x55bd594acaf0 <col:19> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-DeclRefExpr 0x55bd594acad0 <col:19> 'uint8_t':'unsigned char' lvalue ParmVar 0x55bd59498460 'x' 'uint8_t':'unsigned char'
|-CXXMethodDecl 0x55bd59498738 <line:479:5, line:485:5> line:479:14 used anno_u16 'uint16_t (int) const'
| |-ParmVarDecl 0x55bd59498640 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x55bd594ad2a8 <col:36, line:485:5>
|   |-ParenExpr 0x55bd594ad010 <line:480:2, col:182> 'void'
|   | `-ConditionalOperator 0x55bd594acfe0 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55bd594accc0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55bd594acc90 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55bd594acba0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55bd594acb88 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55bd594acb48 <col:23> 'int' lvalue ParmVar 0x55bd59498640 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55bd594acb68 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55bd594acc70 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55bd594acc58 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55bd594acbc0 <col:33> 'int' lvalue ParmVar 0x55bd59498640 'i' 'int'
|   |   |     `-BinaryOperator 0x55bd594acc38 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55bd594acc20 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55bd594acbe0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55bd59495f00 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55bd594acc00 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55bd594acd20 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55bd594acd00 <col:60> 'int' 0
|   |   `-CallExpr 0x55bd594acf40 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55bd594acf28 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55bd594acf08 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55bd59002600 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55bd594acf80 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55bd594acd90 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55bd594acf98 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55bd594acdc8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55bd594acfb0 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55bd594ace00 <col:143> 'int' 480
|   |     `-ImplicitCastExpr 0x55bd594acfc8 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55bd594acef0 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55bd594aced8 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55bd594ace98 <col:162> 'const char [37]' lvalue "uint16_t Packet::anno_u16(int) const"
|   `-ReturnStmt 0x55bd594ad298 <line:484:2, col:75>
|     `-ImplicitCastExpr 0x55bd594ad280 <col:9, col:75> 'click_aliasable_uint16_t':'unsigned short' <LValueToRValue>
|       `-UnaryOperator 0x55bd594ad268 <col:9, col:75> 'const click_aliasable_uint16_t':'const unsigned short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55bd594ad238 <col:10, col:75> 'const click_aliasable_uint16_t *' reinterpret_cast<const click_aliasable_uint16_t *> <BitCast>
|           `-BinaryOperator 0x55bd594ad1d8 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x55bd594ad1a8 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55bd594ad120 <col:61, col:70> 'char const[48]' lvalue ->c 0x55bd594a09d0
|             |   `-CXXMemberCallExpr 0x55bd594ad100 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55bd594ad0d0 <col:61> '<bound member function type>' ->xanno 0x55bd59495b18
|             |       `-CXXThisExpr 0x55bd594ad0c0 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55bd594ad1c0 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55bd594ad150 <col:74> 'int' lvalue ParmVar 0x55bd59498640 'i' 'int'
|-CXXMethodDecl 0x55bd59498988 <line:494:5, line:500:5> line:494:10 used set_anno_u16 'void (int, uint16_t)'
| |-ParmVarDecl 0x55bd594987f8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55bd59498870 <col:30, col:39> col:39 used x 'uint16_t':'unsigned short'
| `-CompoundStmt 0x55bd594ad9f8 <col:42, line:500:5>
|   |-ParenExpr 0x55bd594ad790 <line:495:2, col:182> 'void'
|   | `-ConditionalOperator 0x55bd594ad760 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55bd594ad440 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55bd594ad410 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55bd594ad320 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55bd594ad308 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55bd594ad2c8 <col:23> 'int' lvalue ParmVar 0x55bd594987f8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55bd594ad2e8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55bd594ad3f0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55bd594ad3d8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55bd594ad340 <col:33> 'int' lvalue ParmVar 0x55bd594987f8 'i' 'int'
|   |   |     `-BinaryOperator 0x55bd594ad3b8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55bd594ad3a0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55bd594ad360 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55bd59495f00 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55bd594ad380 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55bd594ad4a0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55bd594ad480 <col:60> 'int' 0
|   |   `-CallExpr 0x55bd594ad6c0 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55bd594ad6a8 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55bd594ad688 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55bd59002600 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55bd594ad700 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55bd594ad510 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55bd594ad718 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55bd594ad548 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55bd594ad730 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55bd594ad580 <col:143> 'int' 495
|   |     `-ImplicitCastExpr 0x55bd594ad748 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55bd594ad670 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55bd594ad658 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55bd594ad618 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u16(int, uint16_t)"
|   `-BinaryOperator 0x55bd594ad9d8 <line:499:2, col:66> 'click_aliasable_uint16_t':'unsigned short' lvalue '='
|     |-UnaryOperator 0x55bd594ad988 <col:2, col:62> 'click_aliasable_uint16_t':'unsigned short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55bd594ad958 <col:3, col:62> 'click_aliasable_uint16_t *' reinterpret_cast<click_aliasable_uint16_t *> <BitCast>
|     |   `-BinaryOperator 0x55bd594ad900 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55bd594ad8d0 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55bd594ad880 <col:48, col:57> 'char [48]' lvalue ->c 0x55bd594a09d0
|     |     |   `-CXXMemberCallExpr 0x55bd594ad860 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55bd594ad830 <col:48> '<bound member function type>' ->xanno 0x55bd59495cb8
|     |     |       `-CXXThisExpr 0x55bd594ad820 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55bd594ad8e8 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55bd594ad8b0 <col:61> 'int' lvalue ParmVar 0x55bd594987f8 'i' 'int'
|     `-ImplicitCastExpr 0x55bd594ad9c0 <col:66> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x55bd594ad9a0 <col:66> 'uint16_t':'unsigned short' lvalue ParmVar 0x55bd59498870 'x' 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x55bd59498b48 <line:507:5, line:513:5> line:507:13 anno_s16 'int16_t (int) const'
| |-ParmVarDecl 0x55bd59498a50 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x55bd594ae158 <col:35, line:513:5>
|   |-ParenExpr 0x55bd594ade68 <line:508:2, col:182> 'void'
|   | `-ConditionalOperator 0x55bd594ade38 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55bd594adb90 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55bd594adb60 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55bd594ada70 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55bd594ada58 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55bd594ada18 <col:23> 'int' lvalue ParmVar 0x55bd59498a50 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55bd594ada38 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55bd594adb40 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55bd594adb28 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55bd594ada90 <col:33> 'int' lvalue ParmVar 0x55bd59498a50 'i' 'int'
|   |   |     `-BinaryOperator 0x55bd594adb08 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55bd594adaf0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55bd594adab0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55bd59495f00 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55bd594adad0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55bd594adbf0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55bd594adbd0 <col:60> 'int' 0
|   |   `-CallExpr 0x55bd594add98 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55bd594add80 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55bd594add60 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55bd59002600 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55bd594addd8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55bd594adc60 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55bd594addf0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55bd594adc98 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55bd594ade08 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55bd594adcd0 <col:143> 'int' 508
|   |     `-ImplicitCastExpr 0x55bd594ade20 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55bd594add48 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55bd594add30 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55bd594adcf0 <col:162> 'const char [36]' lvalue "int16_t Packet::anno_s16(int) const"
|   `-ReturnStmt 0x55bd594ae148 <line:512:2, col:74>
|     `-ImplicitCastExpr 0x55bd594ae130 <col:9, col:74> 'click_aliasable_int16_t':'short' <LValueToRValue>
|       `-UnaryOperator 0x55bd594ae118 <col:9, col:74> 'const click_aliasable_int16_t':'const short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55bd594ae0e8 <col:10, col:74> 'const click_aliasable_int16_t *' reinterpret_cast<const click_aliasable_int16_t *> <BitCast>
|           `-BinaryOperator 0x55bd594ae060 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x55bd594ae030 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55bd594adfe0 <col:60, col:69> 'char const[48]' lvalue ->c 0x55bd594a09d0
|             |   `-CXXMemberCallExpr 0x55bd594adfc0 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55bd594adf90 <col:60> '<bound member function type>' ->xanno 0x55bd59495b18
|             |       `-CXXThisExpr 0x55bd594adf80 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55bd594ae048 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55bd594ae010 <col:73> 'int' lvalue ParmVar 0x55bd59498a50 'i' 'int'
|-CXXMethodDecl 0x55bd59498d98 <line:522:5, line:528:5> line:522:10 set_anno_s16 'void (int, int16_t)'
| |-ParmVarDecl 0x55bd59498c08 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55bd59498c80 <col:30, col:38> col:38 used x 'int16_t':'short'
| `-CompoundStmt 0x55bd594ae878 <col:41, line:528:5>
|   |-ParenExpr 0x55bd594ae600 <line:523:2, col:182> 'void'
|   | `-ConditionalOperator 0x55bd594ae5d0 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55bd594ae2f0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55bd594ae2c0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55bd594ae1d0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55bd594ae1b8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55bd594ae178 <col:23> 'int' lvalue ParmVar 0x55bd59498c08 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55bd594ae198 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55bd594ae2a0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55bd594ae288 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55bd594ae1f0 <col:33> 'int' lvalue ParmVar 0x55bd59498c08 'i' 'int'
|   |   |     `-BinaryOperator 0x55bd594ae268 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55bd594ae250 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55bd594ae210 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55bd59495f00 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55bd594ae230 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55bd594ae350 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55bd594ae330 <col:60> 'int' 0
|   |   `-CallExpr 0x55bd594ae530 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55bd594ae518 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55bd594ae4f8 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55bd59002600 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55bd594ae570 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55bd594ae3c0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55bd594ae588 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55bd594ae3f8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55bd594ae5a0 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55bd594ae430 <col:143> 'int' 523
|   |     `-ImplicitCastExpr 0x55bd594ae5b8 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55bd594ae4e0 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55bd594ae4c8 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55bd594ae488 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s16(int, int16_t)"
|   `-BinaryOperator 0x55bd594ae858 <line:527:2, col:65> 'click_aliasable_int16_t':'short' lvalue '='
|     |-UnaryOperator 0x55bd594ae808 <col:2, col:61> 'click_aliasable_int16_t':'short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55bd594ae7d8 <col:3, col:61> 'click_aliasable_int16_t *' reinterpret_cast<click_aliasable_int16_t *> <BitCast>
|     |   `-BinaryOperator 0x55bd594ae780 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55bd594ae740 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55bd594ae6f0 <col:47, col:56> 'char [48]' lvalue ->c 0x55bd594a09d0
|     |     |   `-CXXMemberCallExpr 0x55bd594ae6d0 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55bd594ae6a0 <col:47> '<bound member function type>' ->xanno 0x55bd59495cb8
|     |     |       `-CXXThisExpr 0x55bd594ae690 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55bd594ae758 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55bd594ae720 <col:60> 'int' lvalue ParmVar 0x55bd59498c08 'i' 'int'
|     `-ImplicitCastExpr 0x55bd594ae840 <col:65> 'int16_t':'short' <LValueToRValue>
|       `-DeclRefExpr 0x55bd594ae820 <col:65> 'int16_t':'short' lvalue ParmVar 0x55bd59498c80 'x' 'int16_t':'short'
|-CXXMethodDecl 0x55bd59498f58 <line:535:5, line:541:5> line:535:14 used anno_u32 'uint32_t (int) const'
| |-ParmVarDecl 0x55bd59498e60 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x55bd594aef48 <col:36, line:541:5>
|   |-ParenExpr 0x55bd594aece8 <line:536:2, col:182> 'void'
|   | `-ConditionalOperator 0x55bd594aecb8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55bd594aea10 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55bd594ae9e0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55bd594ae8f0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55bd594ae8d8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55bd594ae898 <col:23> 'int' lvalue ParmVar 0x55bd59498e60 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55bd594ae8b8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55bd594ae9c0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55bd594ae9a8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55bd594ae910 <col:33> 'int' lvalue ParmVar 0x55bd59498e60 'i' 'int'
|   |   |     `-BinaryOperator 0x55bd594ae988 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55bd594ae970 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55bd594ae930 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55bd59495f00 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55bd594ae950 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x55bd594aea70 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55bd594aea50 <col:60> 'int' 0
|   |   `-CallExpr 0x55bd594aec18 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55bd594aec00 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55bd594aebe0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55bd59002600 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55bd594aec58 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55bd594aeae0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x55bd594aec70 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55bd594aeb18 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55bd594aec88 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55bd594aeb50 <col:143> 'int' 536
|   |     `-ImplicitCastExpr 0x55bd594aeca0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55bd594aebc8 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55bd594aebb0 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55bd594aeb70 <col:162> 'const char [37]' lvalue "uint32_t Packet::anno_u32(int) const"
|   `-ReturnStmt 0x55bd594aef38 <line:540:2, col:75>
|     `-ImplicitCastExpr 0x55bd594aef20 <col:9, col:75> 'click_aliasable_uint32_t':'unsigned int' <LValueToRValue>
|       `-UnaryOperator 0x55bd594aef08 <col:9, col:75> 'const click_aliasable_uint32_t':'const unsigned int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55bd594aeed8 <col:10, col:75> 'const click_aliasable_uint32_t *' reinterpret_cast<const click_aliasable_uint32_t *> <BitCast>
|           `-BinaryOperator 0x55bd594aee80 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x55bd594aee50 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55bd594aee00 <col:61, col:70> 'char const[48]' lvalue ->c 0x55bd594a09d0
|             |   `-CXXMemberCallExpr 0x55bd594aede0 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55bd594aedb0 <col:61> '<bound member function type>' ->xanno 0x55bd59495b18
|             |       `-CXXThisExpr 0x55bd594aeda0 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55bd594aee68 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55bd594aee30 <col:74> 'int' lvalue ParmVar 0x55bd59498e60 'i' 'int'
|-CXXMethodDecl 0x55bd59499128 <line:550:5, col:75> col:45 used set_anno_u32 'void (int, uint32_t)'
| |-ParmVarDecl 0x55bd59499018 <col:58, col:62> col:62 i 'int'
| |-ParmVarDecl 0x55bd59499090 <col:65, col:74> col:74 x 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55bd594991d8 <col:20>
| `-OptimizeNoneAttr 0x55bd59499230 <col:30>
|-CXXMethodDecl 0x55bd59499368 <line:556:5, line:562:5> line:556:13 used anno_s32 'int32_t (int) const'
| |-ParmVarDecl 0x55bd59499270 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x55bd594af618 <col:35, line:562:5>
|   |-ParenExpr 0x55bd594af3b8 <line:557:2, col:182> 'void'
|   | `-ConditionalOperator 0x55bd594af388 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55bd594af0e0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55bd594af0b0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55bd594aefc0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55bd594aefa8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55bd594aef68 <col:23> 'int' lvalue ParmVar 0x55bd59499270 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55bd594aef88 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55bd594af090 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55bd594af078 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55bd594aefe0 <col:33> 'int' lvalue ParmVar 0x55bd59499270 'i' 'int'
|   |   |     `-BinaryOperator 0x55bd594af058 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55bd594af040 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55bd594af000 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55bd59495f00 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55bd594af020 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x55bd594af140 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55bd594af120 <col:60> 'int' 0
|   |   `-CallExpr 0x55bd594af2e8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55bd594af2d0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55bd594af2b0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55bd59002600 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55bd594af328 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55bd594af1b0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x55bd594af340 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55bd594af1e8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55bd594af358 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55bd594af220 <col:143> 'int' 557
|   |     `-ImplicitCastExpr 0x55bd594af370 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55bd594af298 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55bd594af280 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55bd594af240 <col:162> 'const char [36]' lvalue "int32_t Packet::anno_s32(int) const"
|   `-ReturnStmt 0x55bd594af608 <line:561:2, col:74>
|     `-ImplicitCastExpr 0x55bd594af5f0 <col:9, col:74> 'click_aliasable_int32_t':'int' <LValueToRValue>
|       `-UnaryOperator 0x55bd594af5d8 <col:9, col:74> 'const click_aliasable_int32_t':'const int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55bd594af5a8 <col:10, col:74> 'const click_aliasable_int32_t *' reinterpret_cast<const click_aliasable_int32_t *> <BitCast>
|           `-BinaryOperator 0x55bd594af550 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x55bd594af520 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55bd594af4d0 <col:60, col:69> 'char const[48]' lvalue ->c 0x55bd594a09d0
|             |   `-CXXMemberCallExpr 0x55bd594af4b0 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55bd594af480 <col:60> '<bound member function type>' ->xanno 0x55bd59495b18
|             |       `-CXXThisExpr 0x55bd594af470 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55bd594af538 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55bd594af500 <col:73> 'int' lvalue ParmVar 0x55bd59499270 'i' 'int'
|-CXXMethodDecl 0x55bd59499578 <line:571:5, line:577:5> line:571:10 used set_anno_s32 'void (int, int32_t)'
| |-ParmVarDecl 0x55bd59499428 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55bd594994a0 <col:30, col:38> col:38 used x 'int32_t':'int'
| `-CompoundStmt 0x55bd594afcf8 <col:41, line:577:5>
|   |-ParenExpr 0x55bd594afa88 <line:572:2, col:182> 'void'
|   | `-ConditionalOperator 0x55bd594afa58 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55bd594af7b0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55bd594af780 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55bd594af690 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55bd594af678 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55bd594af638 <col:23> 'int' lvalue ParmVar 0x55bd59499428 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55bd594af658 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55bd594af760 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55bd594af748 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55bd594af6b0 <col:33> 'int' lvalue ParmVar 0x55bd59499428 'i' 'int'
|   |   |     `-BinaryOperator 0x55bd594af728 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55bd594af710 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55bd594af6d0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55bd59495f00 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55bd594af6f0 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x55bd594af810 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55bd594af7f0 <col:60> 'int' 0
|   |   `-CallExpr 0x55bd594af9b8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55bd594af9a0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55bd594af980 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55bd59002600 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55bd594af9f8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55bd594af880 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x55bd594afa10 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55bd594af8b8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55bd594afa28 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55bd594af8f0 <col:143> 'int' 572
|   |     `-ImplicitCastExpr 0x55bd594afa40 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55bd594af968 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55bd594af950 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55bd594af910 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s32(int, int32_t)"
|   `-BinaryOperator 0x55bd594afcd8 <line:576:2, col:65> 'click_aliasable_int32_t':'int' lvalue '='
|     |-UnaryOperator 0x55bd594afc88 <col:2, col:61> 'click_aliasable_int32_t':'int' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55bd594afc58 <col:3, col:61> 'click_aliasable_int32_t *' reinterpret_cast<click_aliasable_int32_t *> <BitCast>
|     |   `-BinaryOperator 0x55bd594afbf8 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55bd594afbc8 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55bd594afb78 <col:47, col:56> 'char [48]' lvalue ->c 0x55bd594a09d0
|     |     |   `-CXXMemberCallExpr 0x55bd594afb58 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55bd594afb28 <col:47> '<bound member function type>' ->xanno 0x55bd59495cb8
|     |     |       `-CXXThisExpr 0x55bd594afb18 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55bd594afbe0 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55bd594afba8 <col:60> 'int' lvalue ParmVar 0x55bd59499428 'i' 'int'
|     `-ImplicitCastExpr 0x55bd594afcc0 <col:65> 'int32_t':'int' <LValueToRValue>
|       `-DeclRefExpr 0x55bd594afca0 <col:65> 'int32_t':'int' lvalue ParmVar 0x55bd594994a0 'x' 'int32_t':'int'
|-CXXMethodDecl 0x55bd59499738 <line:585:5, line:591:5> line:585:14 used anno_u64 'uint64_t (int) const'
| |-ParmVarDecl 0x55bd59499640 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x55bd594b0428 <col:36, line:591:5>
|   |-ParenExpr 0x55bd594b0168 <line:586:2, col:182> 'void'
|   | `-ConditionalOperator 0x55bd594b0138 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55bd594afe90 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55bd594afe60 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55bd594afd70 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55bd594afd58 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55bd594afd18 <col:23> 'int' lvalue ParmVar 0x55bd59499640 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55bd594afd38 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55bd594afe40 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55bd594afe28 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55bd594afd90 <col:33> 'int' lvalue ParmVar 0x55bd59499640 'i' 'int'
|   |   |     `-BinaryOperator 0x55bd594afe08 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55bd594afdf0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55bd594afdb0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55bd59495f00 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55bd594afdd0 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x55bd594afef0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55bd594afed0 <col:60> 'int' 0
|   |   `-CallExpr 0x55bd594b0098 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55bd594b0080 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55bd594b0060 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55bd59002600 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55bd594b00d8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55bd594aff60 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x55bd594b00f0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55bd594aff98 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55bd594b0108 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55bd594affd0 <col:143> 'int' 586
|   |     `-ImplicitCastExpr 0x55bd594b0120 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55bd594b0048 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55bd594b0030 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55bd594afff0 <col:162> 'const char [37]' lvalue "uint64_t Packet::anno_u64(int) const"
|   `-ReturnStmt 0x55bd594b0418 <line:590:2, col:75>
|     `-ImplicitCastExpr 0x55bd594b0400 <col:9, col:75> 'click_aliasable_uint64_t':'unsigned long' <LValueToRValue>
|       `-UnaryOperator 0x55bd594b03e8 <col:9, col:75> 'const click_aliasable_uint64_t':'const unsigned long' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55bd594b03b8 <col:10, col:75> 'const click_aliasable_uint64_t *' reinterpret_cast<const click_aliasable_uint64_t *> <BitCast>
|           `-BinaryOperator 0x55bd594b0330 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x55bd594b0300 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55bd594b02b0 <col:61, col:70> 'char const[48]' lvalue ->c 0x55bd594a09d0
|             |   `-CXXMemberCallExpr 0x55bd594b0290 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55bd594b0260 <col:61> '<bound member function type>' ->xanno 0x55bd59495b18
|             |       `-CXXThisExpr 0x55bd594b0250 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55bd594b0318 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55bd594b02e0 <col:74> 'int' lvalue ParmVar 0x55bd59499640 'i' 'int'
|-CXXMethodDecl 0x55bd59499988 <line:600:5, line:606:5> line:600:10 used set_anno_u64 'void (int, uint64_t)'
| |-ParmVarDecl 0x55bd594997f8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55bd59499870 <col:30, col:39> col:39 used x 'uint64_t':'unsigned long'
| `-CompoundStmt 0x55bd594b0b08 <col:42, line:606:5>
|   |-ParenExpr 0x55bd594b0898 <line:601:2, col:182> 'void'
|   | `-ConditionalOperator 0x55bd594b0868 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55bd594b05c0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55bd594b0590 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55bd594b04a0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55bd594b0488 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55bd594b0448 <col:23> 'int' lvalue ParmVar 0x55bd594997f8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55bd594b0468 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55bd594b0570 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55bd594b0558 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55bd594b04c0 <col:33> 'int' lvalue ParmVar 0x55bd594997f8 'i' 'int'
|   |   |     `-BinaryOperator 0x55bd594b0538 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55bd594b0520 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55bd594b04e0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55bd59495f00 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55bd594b0500 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x55bd594b0620 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55bd594b0600 <col:60> 'int' 0
|   |   `-CallExpr 0x55bd594b07c8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55bd594b07b0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55bd594b0790 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55bd59002600 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55bd594b0808 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55bd594b0690 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x55bd594b0820 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55bd594b06c8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55bd594b0838 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55bd594b0700 <col:143> 'int' 601
|   |     `-ImplicitCastExpr 0x55bd594b0850 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55bd594b0778 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55bd594b0760 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55bd594b0720 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u64(int, uint64_t)"
|   `-BinaryOperator 0x55bd594b0ae8 <line:605:2, col:66> 'click_aliasable_uint64_t':'unsigned long' lvalue '='
|     |-UnaryOperator 0x55bd594b0a98 <col:2, col:62> 'click_aliasable_uint64_t':'unsigned long' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55bd594b0a68 <col:3, col:62> 'click_aliasable_uint64_t *' reinterpret_cast<click_aliasable_uint64_t *> <BitCast>
|     |   `-BinaryOperator 0x55bd594b0a08 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55bd594b09d8 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55bd594b0988 <col:48, col:57> 'char [48]' lvalue ->c 0x55bd594a09d0
|     |     |   `-CXXMemberCallExpr 0x55bd594b0968 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55bd594b0938 <col:48> '<bound member function type>' ->xanno 0x55bd59495cb8
|     |     |       `-CXXThisExpr 0x55bd594b0928 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55bd594b09f0 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55bd594b09b8 <col:61> 'int' lvalue ParmVar 0x55bd594997f8 'i' 'int'
|     `-ImplicitCastExpr 0x55bd594b0ad0 <col:66> 'uint64_t':'unsigned long' <LValueToRValue>
|       `-DeclRefExpr 0x55bd594b0ab0 <col:66> 'uint64_t':'unsigned long' lvalue ParmVar 0x55bd59499870 'x' 'uint64_t':'unsigned long'
|-CXXMethodDecl 0x55bd59499b20 <line:614:5, line:620:5> line:614:11 anno_ptr 'void *(int) const'
| |-ParmVarDecl 0x55bd59499a50 <col:20, col:24> col:24 used i 'int'
| `-CompoundStmt 0x55bd594b1378 <col:33, line:620:5>
|   |-ParenExpr 0x55bd594b10f0 <line:615:2, col:220> 'void'
|   | `-ConditionalOperator 0x55bd594b10c0 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x55bd594b0d10 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55bd594b0ce0 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55bd594b0b80 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55bd594b0b68 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55bd594b0b28 <col:23> 'int' lvalue ParmVar 0x55bd59499a50 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55bd594b0b48 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55bd594b0cc0 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x55bd594b0ca8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55bd594b0ba0 <col:33> 'int' lvalue ParmVar 0x55bd59499a50 'i' 'int'
|   |   |     `-BinaryOperator 0x55bd594b0c88 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55bd594b0c70 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55bd594b0bc0 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55bd59495f00 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x55bd594b0c48 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x55bd594b0c30 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x55bd594b0bf8 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x55bd594b0d70 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55bd594b0d50 <col:79> 'int' 0
|   |   `-CallExpr 0x55bd594b1020 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x55bd594b1008 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55bd594b0fe8 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55bd59002600 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55bd594b1060 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55bd594b0e58 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x55bd594b1078 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55bd594b0ea0 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55bd594b1090 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55bd594b0ed8 <col:181> 'int' 615
|   |     `-ImplicitCastExpr 0x55bd594b10a8 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55bd594b0fd0 <col:186, col:200> 'const char [34]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55bd594b0fb8 <col:200> 'const char [34]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55bd594b0f78 <col:200> 'const char [34]' lvalue "void *Packet::anno_ptr(int) const"
|   `-ReturnStmt 0x55bd594b1368 <line:619:2, col:81>
|     `-ImplicitCastExpr 0x55bd594b1350 <col:9, col:81> 'click_aliasable_void_pointer_t':'void *' <LValueToRValue>
|       `-UnaryOperator 0x55bd594b1338 <col:9, col:81> 'const click_aliasable_void_pointer_t':'void *const' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55bd594b1308 <col:10, col:81> 'const click_aliasable_void_pointer_t *' reinterpret_cast<const click_aliasable_void_pointer_t *> <BitCast>
|           `-BinaryOperator 0x55bd594b1280 <col:67, col:80> 'const char *' '+'
|             |-ImplicitCastExpr 0x55bd594b1250 <col:67, col:76> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55bd594b1200 <col:67, col:76> 'char const[48]' lvalue ->c 0x55bd594a09d0
|             |   `-CXXMemberCallExpr 0x55bd594b11e0 <col:67, col:73> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55bd594b11b0 <col:67> '<bound member function type>' ->xanno 0x55bd59495b18
|             |       `-CXXThisExpr 0x55bd594b11a0 <col:67> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55bd594b1268 <col:80> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55bd594b1230 <col:80> 'int' lvalue ParmVar 0x55bd59499a50 'i' 'int'
|-CXXMethodDecl 0x55bd59499d38 <line:629:5, line:635:5> line:629:10 set_anno_ptr 'void (int, const void *)'
| |-ParmVarDecl 0x55bd59499be0 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55bd59499c60 <col:30, col:42> col:42 used x 'const void *'
| `-CompoundStmt 0x55bd594b1ba0 <col:45, line:635:5>
|   |-ParenExpr 0x55bd594b18e8 <line:630:2, col:220> 'void'
|   | `-ConditionalOperator 0x55bd594b18b8 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x55bd594b1580 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55bd594b1550 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55bd594b13f0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55bd594b13d8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55bd594b1398 <col:23> 'int' lvalue ParmVar 0x55bd59499be0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55bd594b13b8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55bd594b1530 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x55bd594b1518 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55bd594b1410 <col:33> 'int' lvalue ParmVar 0x55bd59499be0 'i' 'int'
|   |   |     `-BinaryOperator 0x55bd594b14f8 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55bd594b14e0 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55bd594b1430 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55bd59495f00 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x55bd594b14b8 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x55bd594b14a0 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x55bd594b1468 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x55bd594b15e0 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55bd594b15c0 <col:79> 'int' 0
|   |   `-CallExpr 0x55bd594b1818 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x55bd594b1800 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55bd594b17e0 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55bd59002600 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55bd594b1858 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55bd594b1650 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x55bd594b1870 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55bd594b1698 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55bd594b1888 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55bd594b16d0 <col:181> 'int' 630
|   |     `-ImplicitCastExpr 0x55bd594b18a0 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55bd594b17c8 <col:186, col:200> 'const char [45]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55bd594b17b0 <col:200> 'const char [45]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55bd594b1768 <col:200> 'const char [45]' lvalue "void Packet::set_anno_ptr(int, const void *)"
|   `-BinaryOperator 0x55bd594b1b80 <line:634:2, col:92> 'click_aliasable_void_pointer_t':'void *' lvalue '='
|     |-UnaryOperator 0x55bd594b1ae8 <col:2, col:68> 'click_aliasable_void_pointer_t':'void *' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55bd594b1ab8 <col:3, col:68> 'click_aliasable_void_pointer_t *' reinterpret_cast<click_aliasable_void_pointer_t *> <BitCast>
|     |   `-BinaryOperator 0x55bd594b1a58 <col:54, col:67> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55bd594b1a28 <col:54, col:63> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55bd594b19d8 <col:54, col:63> 'char [48]' lvalue ->c 0x55bd594a09d0
|     |     |   `-CXXMemberCallExpr 0x55bd594b19b8 <col:54, col:60> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55bd594b1988 <col:54> '<bound member function type>' ->xanno 0x55bd59495cb8
|     |     |       `-CXXThisExpr 0x55bd594b1978 <col:54> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55bd594b1a40 <col:67> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55bd594b1a08 <col:67> 'int' lvalue ParmVar 0x55bd59499be0 'i' 'int'
|     `-CXXConstCastExpr 0x55bd594b1b50 <col:72, col:92> 'void *' const_cast<void *> <NoOp>
|       `-ImplicitCastExpr 0x55bd594b1b38 <col:91> 'const void *' <LValueToRValue> part_of_explicit_cast
|         `-DeclRefExpr 0x55bd594b1b00 <col:91> 'const void *' lvalue ParmVar 0x55bd59499c60 'x' 'const void *'
|-CXXMethodDecl 0x55bd59499e08 <line:638:5, line:640:5> line:638:20 data_packet 'Packet *()' inline
| `-CompoundStmt 0x55bd594b1c28 <col:34, line:640:5>
|   `-ReturnStmt 0x55bd594b1c18 <line:639:9, col:16>
|     `-ImplicitCastExpr 0x55bd594b1c00 <col:16> 'Packet *' <LValueToRValue>
|       `-MemberExpr 0x55bd594b1bd0 <col:16> 'Packet *' lvalue ->_data_packet 0x55bd594a1588
|         `-CXXThisExpr 0x55bd594b1bc0 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x55bd59499f48 <line:643:5, col:50> col:17 used clear_annotations 'void (bool)' inline
| `-ParmVarDecl 0x55bd59499eb8 <col:35, col:46> col:40 all 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55bd594aace8 <col:46> 'bool' true
|-CXXMethodDecl 0x55bd5949a0c8 <line:644:5, col:48> col:17 copy_annotations 'void (const Packet *)' inline
| `-ParmVarDecl 0x55bd5949a000 <col:34, col:47> col:48 'const Packet *'
|-EnumDecl 0x55bd5949a170 <line:648:5, line:660:5> line:648:5
| |-DeprecatedAttr 0x55bd5949a920 <line:660:22> "" ""
| |-EnumConstantDecl 0x55bd5949a270 <line:649:2, col:21> col:2 DEFAULT_HEADROOM 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55bd5949a990 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55bd5949a250 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 28
| |     `-DeclRefExpr 0x55bd5949a230 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x55bd5948f3d0 'default_headroom' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x55bd5949a300 <line:650:2, col:22> col:2 MIN_BUFFER_LENGTH 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55bd5949a9a8 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55bd5949a2e0 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 64
| |     `-DeclRefExpr 0x55bd5949a2c0 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x55bd5948f460 'min_buffer_length' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x55bd5949a390 <line:651:2, col:21> col:2 referenced addr_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55bd5949a9c0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55bd5949a370 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x55bd5949a350 <col:21> 'int' 0
| |-EnumConstantDecl 0x55bd5949a420 <line:652:2, col:19> col:2 referenced addr_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55bd5949a9d8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55bd5949a400 <col:19> 'int' Int: 16
| |     `-IntegerLiteral 0x55bd5949a3e0 <col:19> 'int' 16
| |-EnumConstantDecl 0x55bd5949a4b0 <line:653:2, col:21> col:2 referenced user_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55bd5949a9f0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55bd5949a490 <col:21> 'int' Int: 16
| |     `-IntegerLiteral 0x55bd5949a470 <col:21> 'int' 16
| |-EnumConstantDecl 0x55bd5949a540 <line:654:2, col:19> col:2 referenced user_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55bd5949aa08 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55bd5949a520 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x55bd5949a500 <col:19> 'int' 32
| |-EnumConstantDecl 0x55bd5949a5d0 <line:655:2, col:19> col:2 ADDR_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55bd5949aa20 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55bd5949a5b0 <col:19> 'int' Int: 16
| |     `-DeclRefExpr 0x55bd5949a590 <col:19> 'int' EnumConstant 0x55bd5949a420 'addr_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x55bd5949a660 <line:656:2, col:19> col:2 referenced USER_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55bd5949aa38 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55bd5949a640 <col:19> 'int' Int: 32
| |     `-DeclRefExpr 0x55bd5949a620 <col:19> 'int' EnumConstant 0x55bd5949a540 'user_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x55bd5949a730 <line:657:2, col:40> col:2 USER_ANNO_U16_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55bd5949aa50 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55bd5949a710 <col:23, col:40> 'int' Int: 16
| |     `-BinaryOperator 0x55bd5949a6f0 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x55bd5949a6b0 <col:23> 'int' EnumConstant 0x55bd5949a660 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x55bd5949a6d0 <col:40> 'int' 2
| |-EnumConstantDecl 0x55bd5949a800 <line:658:2, col:40> col:2 USER_ANNO_U32_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55bd5949aa68 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55bd5949a7e0 <col:23, col:40> 'int' Int: 8
| |     `-BinaryOperator 0x55bd5949a7c0 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x55bd5949a780 <col:23> 'int' EnumConstant 0x55bd5949a660 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x55bd5949a7a0 <col:40> 'int' 4
| `-EnumConstantDecl 0x55bd5949a8d0 <line:659:2, col:40> col:2 USER_ANNO_U64_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|   `-ImplicitCastExpr 0x55bd5949aa80 <col:23, col:40> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55bd5949a8b0 <col:23, col:40> 'int' Int: 4
|       `-BinaryOperator 0x55bd5949a890 <col:23, col:40> 'int' '/'
|         |-DeclRefExpr 0x55bd5949a850 <col:23> 'int' EnumConstant 0x55bd5949a660 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|         `-IntegerLiteral 0x55bd5949a870 <col:40> 'int' 8
|-CXXMethodDecl 0x55bd5949aac0 <line:661:5, col:79> col:33 buffer_data 'const unsigned char *() const' inline
| `-DeprecatedAttr 0x55bd5949ab60 <col:68> "" ""
|-CXXMethodDecl 0x55bd5949abf8 <line:662:5, col:56> col:18 addr_anno 'void *()' inline
| `-DeprecatedAttr 0x55bd5949ac98 <col:45> "" ""
|-CXXMethodDecl 0x55bd5949ad30 <line:663:5, col:68> col:24 addr_anno 'const void *() const' inline
| `-DeprecatedAttr 0x55bd5949add0 <col:57> "" ""
|-CXXMethodDecl 0x55bd5949ae68 <line:664:5, col:56> col:18 user_anno 'void *()' inline
| `-DeprecatedAttr 0x55bd5949af08 <col:45> "" ""
|-CXXMethodDecl 0x55bd5949afa0 <line:665:5, col:68> col:24 user_anno 'const void *() const' inline
| `-DeprecatedAttr 0x55bd5949b040 <col:57> "" ""
|-CXXMethodDecl 0x55bd5949b0d0 <line:666:5, col:62> col:21 user_anno_u8 'uint8_t *()' inline
| `-DeprecatedAttr 0x55bd5949b170 <col:51> "" ""
|-CXXMethodDecl 0x55bd5949b200 <line:667:5, col:74> col:27 user_anno_u8 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x55bd5949b2a0 <col:63> "" ""
|-CXXMethodDecl 0x55bd5949b330 <line:668:5, col:64> col:22 user_anno_u32 'uint32_t *()' inline
| `-DeprecatedAttr 0x55bd5949b3d0 <col:53> "" ""
|-CXXMethodDecl 0x55bd5949b460 <line:669:5, col:76> col:28 user_anno_u32 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x55bd5949b500 <col:65> "" ""
|-CXXMethodDecl 0x55bd5949b618 <line:670:5, col:72> col:20 user_anno_u8 'uint8_t (int) const' inline
| |-ParmVarDecl 0x55bd5949b588 <col:33, col:37> col:37 i 'int'
| `-DeprecatedAttr 0x55bd5949b6c0 <col:61> "" ""
|-CXXMethodDecl 0x55bd5949b858 <line:671:5, col:78> col:17 set_user_anno_u8 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x55bd5949b748 <col:34, col:38> col:38 i 'int'
| |-ParmVarDecl 0x55bd5949b7c0 <col:41, col:49> col:49 v 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x55bd5949b908 <col:67> "" ""
|-CXXMethodDecl 0x55bd5949ba20 <line:672:5, col:74> col:21 user_anno_u16 'uint16_t (int) const' inline
| |-ParmVarDecl 0x55bd5949b990 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x55bd5949bac8 <col:63> "" ""
|-CXXMethodDecl 0x55bd5949bc60 <line:673:5, col:80> col:17 set_user_anno_u16 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x55bd5949bb50 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55bd5949bbc8 <col:42, col:51> col:51 v 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x55bd5949bd10 <col:69> "" ""
|-CXXMethodDecl 0x55bd5949be28 <line:674:5, col:74> col:21 user_anno_u32 'uint32_t (int) const' inline
| |-ParmVarDecl 0x55bd5949bd98 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x55bd5949bed0 <col:63> "" ""
|-CXXMethodDecl 0x55bd5949e5a8 <line:675:5, col:80> col:17 set_user_anno_u32 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x55bd5949e498 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55bd5949e510 <col:42, col:51> col:51 v 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55bd5949e658 <col:69> "" ""
|-CXXMethodDecl 0x55bd5949e770 <line:676:5, col:73> col:20 user_anno_s32 'int32_t (int) const' inline
| |-ParmVarDecl 0x55bd5949e6e0 <col:34, col:38> col:38 i 'int'
| `-DeprecatedAttr 0x55bd5949e818 <col:62> "" ""
|-CXXMethodDecl 0x55bd5949e9b0 <line:677:5, col:79> col:17 set_user_anno_s32 'void (int, int32_t)' inline
| |-ParmVarDecl 0x55bd5949e8a0 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55bd5949e918 <col:42, col:50> col:50 v 'int32_t':'int'
| `-DeprecatedAttr 0x55bd5949ea60 <col:68> "" ""
|-CXXMethodDecl 0x55bd5949eb78 <line:679:5, col:74> col:21 user_anno_u64 'uint64_t (int) const' inline
| |-ParmVarDecl 0x55bd5949eae8 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x55bd5949ec20 <col:63> "" ""
|-CXXMethodDecl 0x55bd5949edb8 <line:680:5, col:80> col:17 set_user_anno_u64 'void (int, uint64_t)' inline
| |-ParmVarDecl 0x55bd5949eca8 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55bd5949ed20 <col:42, col:51> col:51 v 'uint64_t':'unsigned long'
| `-DeprecatedAttr 0x55bd5949ee68 <col:69> "" ""
|-CXXMethodDecl 0x55bd5949eef8 <line:682:5, col:75> col:27 all_user_anno 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x55bd5949ef98 <col:64> "" ""
|-CXXMethodDecl 0x55bd5949f028 <line:683:5, col:63> col:21 all_user_anno 'uint8_t *()' inline
| `-DeprecatedAttr 0x55bd5949f0c8 <col:52> "" ""
|-CXXMethodDecl 0x55bd5949f158 <line:684:5, col:78> col:28 all_user_anno_u 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x55bd5949f1f8 <col:67> "" ""
|-CXXMethodDecl 0x55bd5949f288 <line:685:5, col:66> col:22 all_user_anno_u 'uint32_t *()' inline
| `-DeprecatedAttr 0x55bd5949f328 <col:55> "" ""
|-CXXMethodDecl 0x55bd5949f440 <line:686:5, col:69> col:20 user_anno_c 'uint8_t (int) const' inline
| |-ParmVarDecl 0x55bd5949f3b0 <col:32> col:35 'int'
| `-DeprecatedAttr 0x55bd5949f4e8 <col:58> "" ""
|-CXXMethodDecl 0x55bd5949f680 <line:687:5, col:73> col:17 set_user_anno_c 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x55bd5949f570 <col:33> col:36 'int'
| |-ParmVarDecl 0x55bd5949f5e8 <col:38> col:45 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x55bd5949f730 <col:62> "" ""
|-CXXMethodDecl 0x55bd5949f848 <line:688:5, col:69> col:20 user_anno_s 'int16_t (int) const' inline
| |-ParmVarDecl 0x55bd5949f7b8 <col:32> col:35 'int'
| `-DeprecatedAttr 0x55bd5949f8f0 <col:58> "" ""
|-CXXMethodDecl 0x55bd5949fa88 <line:689:5, col:73> col:17 set_user_anno_s 'void (int, int16_t)' inline
| |-ParmVarDecl 0x55bd5949f978 <col:33> col:36 'int'
| |-ParmVarDecl 0x55bd5949f9f0 <col:38> col:45 'int16_t':'short'
| `-DeprecatedAttr 0x55bd5949fb38 <col:62> "" ""
|-CXXMethodDecl 0x55bd5949fc50 <line:690:5, col:71> col:21 user_anno_us 'uint16_t (int) const' inline
| |-ParmVarDecl 0x55bd5949fbc0 <col:34> col:37 'int'
| `-DeprecatedAttr 0x55bd5949fcf8 <col:60> "" ""
|-CXXMethodDecl 0x55bd5949fe90 <line:691:5, col:75> col:17 set_user_anno_us 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x55bd5949fd80 <col:34> col:37 'int'
| |-ParmVarDecl 0x55bd5949fdf8 <col:39> col:47 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x55bd5949ff40 <col:64> "" ""
|-CXXMethodDecl 0x55bd594a0058 <line:692:5, col:69> col:20 user_anno_i 'int32_t (int) const' inline
| |-ParmVarDecl 0x55bd5949ffc8 <col:32> col:35 'int'
| `-DeprecatedAttr 0x55bd594a0100 <col:58> "" ""
|-CXXMethodDecl 0x55bd594a0298 <line:693:5, col:73> col:17 set_user_anno_i 'void (int, int32_t)' inline
| |-ParmVarDecl 0x55bd594a0188 <col:33> col:36 'int'
| |-ParmVarDecl 0x55bd594a0200 <col:38> col:45 'int32_t':'int'
| `-DeprecatedAttr 0x55bd594a0348 <col:62> "" ""
|-CXXMethodDecl 0x55bd594a0460 <line:694:5, col:70> col:21 user_anno_u 'uint32_t (int) const' inline
| |-ParmVarDecl 0x55bd594a03d0 <col:33> col:36 'int'
| `-DeprecatedAttr 0x55bd594a0508 <col:59> "" ""
|-CXXMethodDecl 0x55bd594a06a0 <line:695:5, col:74> col:17 set_user_anno_u 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x55bd594a0590 <col:33> col:36 'int'
| |-ParmVarDecl 0x55bd594a0608 <col:38> col:46 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55bd594a0750 <col:63> "" ""
|-AccessSpecDecl 0x55bd594a07c0 <line:698:3, col:10> col:3 private
|-CXXRecordDecl 0x55bd594a07e8 prev 0x55bd594959f0 <line:702:5, line:711:5> line:702:11 referenced union Anno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55bd594a08e0 <col:5, col:11> col:11 implicit union Anno
| |-FieldDecl 0x55bd594a09d0 <line:703:2, col:18> col:7 referenced c 'char [48]'
| |-FieldDecl 0x55bd594a0af8 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
| |-FieldDecl 0x55bd594a0c78 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
| |-FieldDecl 0x55bd594a0df8 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
| |-FieldDecl 0x55bd594a0f78 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
| |-CXXConstructorDecl 0x55bd594b1da8 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55bd594b2618 <col:11>
| |-CXXDestructorDecl 0x55bd594b1e80 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
| |-CXXConstructorDecl 0x55bd594b1fb8 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x55bd594b1fb8
| | `-ParmVarDecl 0x55bd594b20c8 <col:11> col:11 'const Packet::Anno &'
| |-CXXConstructorDecl 0x55bd594b2168 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55bd594b2168
| | `-ParmVarDecl 0x55bd594b2278 <col:11> col:11 'Packet::Anno &&'
| |-CXXMethodDecl 0x55bd594b5038 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55bd594b5148 <col:11> col:11 'const Packet::Anno &'
| | `-CompoundStmt 0x55bd594b53c8 <col:11>
| |   `-ReturnStmt 0x55bd594b53b8 <col:11>
| |     `-UnaryOperator 0x55bd594b53a0 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x55bd594b5390 <col:11> 'Packet::Anno *' this
| `-CXXMethodDecl 0x55bd594b51b8 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55bd594b51b8
|   `-ParmVarDecl 0x55bd594b52c8 <col:11> col:11 'Packet::Anno &&'
|-CXXRecordDecl 0x55bd594a0fe0 <line:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55bd594a10f8 <col:5, col:12> col:12 implicit struct AllAnno
| |-FieldDecl 0x55bd594a1198 <line:717:2, col:7> col:7 cb 'Packet::Anno'
| |-FieldDecl 0x55bd594a1200 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
| |-FieldDecl 0x55bd594a1268 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
| |-FieldDecl 0x55bd594a12d0 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
| |-FieldDecl 0x55bd594a1330 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
| |-FieldDecl 0x55bd594a13f0 <line:722:2, col:34> col:7 timestamp 'char [8]'
| |-FieldDecl 0x55bd594a1450 <line:723:2, col:10> col:10 referenced next 'Packet *'
| |-FieldDecl 0x55bd594a14b0 <line:724:2, col:10> col:10 referenced prev 'Packet *'
| |-CXXConstructorDecl 0x55bd594b1cb8 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| | |-CXXCtorInitializer Field 0x55bd594a1198 'cb' 'Packet::Anno'
| | | `-CXXConstructExpr 0x55bd594b2628 <col:12> 'Packet::Anno' 'void () noexcept'
| | `-CompoundStmt 0x55bd594b2680 <col:12>
| |-CXXConstructorDecl 0x55bd594b22e8 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x55bd594b22e8
| | `-ParmVarDecl 0x55bd594b23f8 <col:12> col:12 'const Packet::AllAnno &'
| |-CXXConstructorDecl 0x55bd594b2498 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x55bd594b2498
| | `-ParmVarDecl 0x55bd594b25a8 <col:12> col:12 'Packet::AllAnno &&'
| `-CXXDestructorDecl 0x55bd594b4720 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial
|-FieldDecl 0x55bd594a1528 <line:731:5, col:21> col:21 referenced _use_count 'atomic_uint32_t'
|-FieldDecl 0x55bd594a1588 <line:732:5, col:13> col:13 referenced _data_packet 'Packet *'
|-FieldDecl 0x55bd594a15f0 <line:734:5, col:20> col:20 referenced _head 'unsigned char *'
|-FieldDecl 0x55bd594a1658 <line:735:5, col:20> col:20 referenced _data 'unsigned char *'
|-FieldDecl 0x55bd594a16c0 <line:736:5, col:20> col:20 referenced _tail 'unsigned char *'
|-FieldDecl 0x55bd594a1728 <line:737:5, col:20> col:20 referenced _end 'unsigned char *'
|-FieldDecl 0x55bd594a1788 <line:741:5, col:13> col:13 referenced _aa 'Packet::AllAnno'
|-FieldDecl 0x55bd594a17e8 <line:746:5, col:28> col:28 referenced _destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-FieldDecl 0x55bd594a1850 <line:747:5, col:11> col:11 referenced _destructor_argument 'void *'
|-CXXConstructorDecl 0x55bd594a18d8 <line:751:5, line:755:5> line:751:12 used Packet 'void ()' inline
| |-CXXCtorInitializer Field 0x55bd594a1528 '_use_count' 'atomic_uint32_t'
| | `-CXXConstructExpr 0x55bd594b1c50 <col:12> 'atomic_uint32_t' 'void () noexcept'
| |-CXXCtorInitializer Field 0x55bd594a1788 '_aa' 'Packet::AllAnno'
| | `-CXXConstructExpr 0x55bd594b2690 <col:12> 'Packet::AllAnno' 'void () noexcept'
| `-CompoundStmt 0x55bd594b26f0 <col:21, line:755:5>
|-CXXConstructorDecl 0x55bd594a1a78 <line:756:5, col:27> col:5 Packet 'void (const Packet &)'
| `-ParmVarDecl 0x55bd594a19b8 <col:12, col:26> col:26 x 'const Packet &'
|-CXXDestructorDecl 0x55bd594a1b70 <line:757:5, col:13> col:5 used ~Packet 'void () noexcept'
|-CXXMethodDecl 0x55bd594a1d58 <line:758:5, col:38> col:13 operator= 'Packet &(const Packet &)'
| `-ParmVarDecl 0x55bd594a1c60 <col:23, col:37> col:37 x 'const Packet &'
|-CXXMethodDecl 0x55bd594a2028 <line:761:5, col:74> col:10 alloc_data 'bool (uint32_t, uint32_t, uint32_t)'
| |-ParmVarDecl 0x55bd594a1e10 <col:21, col:30> col:30 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55bd594a1e88 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55bd594a1f00 <col:57, col:66> col:66 tailroom 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55bd594a2248 <line:768:5, col:95> col:17 shift_header_annotations 'void (const unsigned char *, int32_t)' inline
| |-ParmVarDecl 0x55bd594a20f8 <col:42, col:63> col:63 old_head 'const unsigned char *'
| `-ParmVarDecl 0x55bd594a2170 <col:73, col:81> col:81 extra_headroom 'int32_t':'int'
|-CXXMethodDecl 0x55bd594aa828 <line:769:5, col:109> col:21 expensive_uniqueify 'WritablePacket *(int32_t, int32_t, bool)'
| |-ParmVarDecl 0x55bd594a2308 <col:41, col:49> col:49 extra_headroom 'int32_t':'int'
| |-ParmVarDecl 0x55bd594a2380 <col:65, col:73> col:73 extra_tailroom 'int32_t':'int'
| `-ParmVarDecl 0x55bd594a23f8 <col:89, col:94> col:94 free_on_failure 'bool'
|-CXXMethodDecl 0x55bd594aa980 <line:770:5, col:51> col:21 used expensive_push 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x55bd594aa8f0 <col:36, col:45> col:45 nbytes 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55bd594aaac8 <line:771:5, col:50> col:21 used expensive_put 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x55bd594aaa38 <col:35, col:44> col:44 nbytes 'uint32_t':'unsigned int'
`-FriendDecl 0x55bd594aabc0 <line:773:5, col:18> col:12 'class WritablePacket':'WritablePacket'

Layout: <CGRecordLayout
  LLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  NonVirtualBaseLLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5)
         0 |   TimerCallback callback
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timer
         0 |   int _schedpos1
         8 |   class Timestamp _expiry_s
         8 |     union Timestamp::rep_t _t
         8 |       int64_t x
        16 |   union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5) _hook
        16 |     TimerCallback callback
        24 |   void * _thunk
        32 |   class Element * _owner
        40 |   class RouterThread * _thread
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55bd595d7218 <../dummy_inc/click/timer.hh:343:5, line:345:5> line:343:5 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x55bd595d7348 <line:344:2, col:16> col:16 referenced callback 'TimerCallback':'void (*)(Timer *, void *)'
`-CXXDestructorDecl 0x55bd595d7e38 <line:343:5> col:5 implicit ~ 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%union.anon.20 = type { void (%class.Timer*, i8*)* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55bd595d3ab8 prev 0x55bd594c7d70 <../dummy_inc/click/timer.hh:14:1, line:358:1> line:14:7 class Timer definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55bd595d3bb0 <col:1, col:7> col:7 implicit referenced class Timer
|-AccessSpecDecl 0x55bd595d3c40 <col:15, col:21> col:15 public
|-CXXConstructorDecl 0x55bd595d3ca0 <line:22:5, col:11> col:5 Timer 'void ()'
|-CXXRecordDecl 0x55bd595d3d48 <line:24:5, line:25:5> line:24:12 referenced struct do_nothing_t definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| `-CXXRecordDecl 0x55bd595d3e68 <col:5, col:12> col:12 implicit struct do_nothing_t
|-CXXConstructorDecl 0x55bd595d4008 <line:32:5, col:37> col:5 Timer 'void (const Timer::do_nothing_t &)'
| `-ParmVarDecl 0x55bd595d3f48 <col:11, col:31> col:31 unused 'const Timer::do_nothing_t &'
|-CXXConstructorDecl 0x55bd595d4258 <line:38:5, col:43> col:5 Timer 'void (TimerCallback, void *)'
| |-ParmVarDecl 0x55bd595d40c8 <col:11, col:25> col:25 f 'TimerCallback':'void (*)(Timer *, void *)'
| `-ParmVarDecl 0x55bd595d4148 <col:28, col:34> col:34 user_data 'void *'
|-CXXConstructorDecl 0x55bd595d43e8 <line:43:5, col:27> col:5 Timer 'void (Element *)'
| `-ParmVarDecl 0x55bd595d4320 <col:11, col:20> col:20 element 'Element *'
|-CXXConstructorDecl 0x55bd595d4568 <line:47:5, col:21> col:5 Timer 'void (Task *)'
| `-ParmVarDecl 0x55bd595d44a8 <col:11, col:17> col:17 task 'Task *'
|-CXXConstructorDecl 0x55bd595d4718 <line:52:5, col:25> col:5 Timer 'void (const Timer &)'
| `-ParmVarDecl 0x55bd595d4658 <col:11, col:24> col:24 x 'const Timer &'
|-CXXDestructorDecl 0x55bd595d4810 <line:55:5, line:58:5> line:55:12 ~Timer 'void () noexcept' inline
| `-CompoundStmt 0x55bd595d8010 <col:21, line:58:5>
|   `-IfStmt 0x55bd595d7ff8 <line:56:2, line:57:17>
|     |-CXXMemberCallExpr 0x55bd595d7f60 <line:56:6, col:16> 'bool'
|     | `-MemberExpr 0x55bd595d7f30 <col:6> '<bound member function type>' ->scheduled 0x55bd595d5068
|     |   `-ImplicitCastExpr 0x55bd595d7f80 <col:6> 'const Timer *' <NoOp>
|     |     `-CXXThisExpr 0x55bd595d7f20 <col:6> 'Timer *' implicit this
|     `-CXXMemberCallExpr 0x55bd595d7fd8 <line:57:6, col:17> 'void'
|       `-MemberExpr 0x55bd595d7fa8 <col:6> '<bound member function type>' ->unschedule 0x55bd595d66c0
|         `-CXXThisExpr 0x55bd595d7f98 <col:6> 'Timer *' implicit this
|-CXXMethodDecl 0x55bd595d4910 <line:62:5, line:65:5> line:62:17 used assign 'void ()' inline
| `-CompoundStmt 0x55bd595d81b0 <col:26, line:65:5>
|   |-BinaryOperator 0x55bd595d80d0 <line:63:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x55bd595d8068 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x55bd595d7348
|   | | `-MemberExpr 0x55bd595d8038 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x55bd595d7408
|   | |   `-CXXThisExpr 0x55bd595d8028 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x55bd595d80b8 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55bd595d8098 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x55bd595d7868 'do_nothing_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x55bd595d8190 <line:64:2, col:20> 'void *' lvalue '='
|     |-MemberExpr 0x55bd595d8100 <col:2> 'void *' lvalue ->_thunk 0x55bd595d7488
|     | `-CXXThisExpr 0x55bd595d80f0 <col:2> 'Timer *' implicit this
|     `-CStyleCastExpr 0x55bd595d8168 <col:11, col:20> 'void *' <IntegralToPointer>
|       `-IntegerLiteral 0x55bd595d8130 <col:20> 'int' 1
|-CXXMethodDecl 0x55bd595d4a50 <line:68:5, line:71:5> line:68:17 assign 'void (const Timer::do_nothing_t &)' inline
| |-ParmVarDecl 0x55bd595d49c0 <col:24, col:44> col:44 used unused 'const Timer::do_nothing_t &'
| `-CompoundStmt 0x55bd595d8310 <col:52, line:71:5>
|   |-CStyleCastExpr 0x55bd595d8200 <line:69:2, col:9> 'void' <ToVoid>
|   | `-DeclRefExpr 0x55bd595d81d0 <col:9> 'const Timer::do_nothing_t' lvalue ParmVar 0x55bd595d49c0 'unused' 'const Timer::do_nothing_t &'
|   `-CXXMemberCallExpr 0x55bd595d82f0 <line:70:2, col:9> 'void'
|     `-MemberExpr 0x55bd595d82c0 <col:2> '<bound member function type>' ->assign 0x55bd595d4910
|       `-CXXThisExpr 0x55bd595d82b0 <col:2> 'Timer *' implicit this
|-CXXMethodDecl 0x55bd595d4c20 <line:76:5, line:79:5> line:76:17 assign 'void (TimerCallback, void *)' inline
| |-ParmVarDecl 0x55bd595d4b08 <col:24, col:38> col:38 used f 'TimerCallback':'void (*)(Timer *, void *)'
| |-ParmVarDecl 0x55bd595d4b88 <col:41, col:47> col:47 used user_data 'void *'
| `-CompoundStmt 0x55bd595d8490 <col:58, line:79:5>
|   |-BinaryOperator 0x55bd595d83d8 <line:77:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x55bd595d8370 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x55bd595d7348
|   | | `-MemberExpr 0x55bd595d8340 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x55bd595d7408
|   | |   `-CXXThisExpr 0x55bd595d8330 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x55bd595d83c0 <col:19> 'TimerCallback':'void (*)(Timer *, void *)' <LValueToRValue>
|   |   `-DeclRefExpr 0x55bd595d83a0 <col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue ParmVar 0x55bd595d4b08 'f' 'TimerCallback':'void (*)(Timer *, void *)'
|   `-BinaryOperator 0x55bd595d8470 <line:78:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x55bd595d8408 <col:2> 'void *' lvalue ->_thunk 0x55bd595d7488
|     | `-CXXThisExpr 0x55bd595d83f8 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x55bd595d8458 <col:11> 'void *' <LValueToRValue>
|       `-DeclRefExpr 0x55bd595d8438 <col:11> 'void *' lvalue ParmVar 0x55bd595d4b88 'user_data' 'void *'
|-CXXMethodDecl 0x55bd595d4d70 <line:84:5, line:87:5> line:84:10 assign 'void (Element *)'
| |-ParmVarDecl 0x55bd595d4ce0 <col:17, col:26> col:26 used element 'Element *'
| `-CompoundStmt 0x55bd595d8628 <col:35, line:87:5>
|   |-BinaryOperator 0x55bd595d8558 <line:85:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x55bd595d84f0 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x55bd595d7348
|   | | `-MemberExpr 0x55bd595d84c0 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x55bd595d7408
|   | |   `-CXXThisExpr 0x55bd595d84b0 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x55bd595d8540 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55bd595d8520 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x55bd595d7a40 'element_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x55bd595d8608 <line:86:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x55bd595d8588 <col:2> 'void *' lvalue ->_thunk 0x55bd595d7488
|     | `-CXXThisExpr 0x55bd595d8578 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x55bd595d85f0 <col:11> 'void *' <BitCast>
|       `-ImplicitCastExpr 0x55bd595d85d8 <col:11> 'Element *' <LValueToRValue>
|         `-DeclRefExpr 0x55bd595d85b8 <col:11> 'Element *' lvalue ParmVar 0x55bd595d4ce0 'element' 'Element *'
|-CXXMethodDecl 0x55bd595d4eb8 <line:91:5, line:94:5> line:91:10 assign 'void (Task *)'
| |-ParmVarDecl 0x55bd595d4e28 <col:17, col:23> col:23 used task 'Task *'
| `-CompoundStmt 0x55bd595d87c0 <col:29, line:94:5>
|   |-BinaryOperator 0x55bd595d86f0 <line:92:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x55bd595d8688 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x55bd595d7348
|   | | `-MemberExpr 0x55bd595d8658 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x55bd595d7408
|   | |   `-CXXThisExpr 0x55bd595d8648 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x55bd595d86d8 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55bd595d86b8 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x55bd595d7c18 'task_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x55bd595d87a0 <line:93:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x55bd595d8720 <col:2> 'void *' lvalue ->_thunk 0x55bd595d7488
|     | `-CXXThisExpr 0x55bd595d8710 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x55bd595d8788 <col:11> 'void *' <BitCast>
|       `-ImplicitCastExpr 0x55bd595d8770 <col:11> 'Task *' <LValueToRValue>
|         `-DeclRefExpr 0x55bd595d8750 <col:11> 'Task *' lvalue ParmVar 0x55bd595d4e28 'task' 'Task *'
|-CXXMethodDecl 0x55bd595d4fa8 <line:98:5, line:100:5> line:98:17 initialized 'bool () const' inline
| `-CompoundStmt 0x55bd595d88a0 <col:37, line:100:5>
|   `-ReturnStmt 0x55bd595d8890 <line:99:2, col:19>
|     `-BinaryOperator 0x55bd595d8870 <col:9, col:19> 'bool' '!='
|       |-ImplicitCastExpr 0x55bd595d8840 <col:9> 'Element *' <LValueToRValue>
|       | `-MemberExpr 0x55bd595d87f0 <col:9> 'Element *const' lvalue ->_owner 0x55bd595d74e8
|       |   `-CXXThisExpr 0x55bd595d87e0 <col:9> 'const Timer *' implicit this
|       `-ImplicitCastExpr 0x55bd595d8858 <col:19> 'Element *' <NullToPointer>
|         `-IntegerLiteral 0x55bd595d8820 <col:19> 'int' 0
|-CXXMethodDecl 0x55bd595d5068 <line:103:5, line:105:5> line:103:17 used scheduled 'bool () const' inline
| `-CompoundStmt 0x55bd595d8960 <col:35, line:105:5>
|   `-ReturnStmt 0x55bd595d8950 <line:104:2, col:23>
|     `-BinaryOperator 0x55bd595d8930 <col:9, col:23> 'bool' '!='
|       |-ImplicitCastExpr 0x55bd595d8918 <col:9> 'int' <LValueToRValue>
|       | `-MemberExpr 0x55bd595d88c8 <col:9> 'const int' lvalue ->_schedpos1 0x55bd595d7168
|       |   `-CXXThisExpr 0x55bd595d88b8 <col:9> 'const Timer *' implicit this
|       `-IntegerLiteral 0x55bd595d88f8 <col:23> 'int' 0
|-CXXMethodDecl 0x55bd595d5128 <line:116:5, line:118:5> line:116:29 used expiry_steady 'const Timestamp &() const' inline
| `-CompoundStmt 0x55bd595d89c8 <col:51, line:118:5>
|   `-ReturnStmt 0x55bd595d89b8 <line:117:2, col:9>
|     `-MemberExpr 0x55bd595d8988 <col:9> 'const Timestamp' lvalue ->_expiry_s 0x55bd595d71c8
|       `-CXXThisExpr 0x55bd595d8978 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x55bd595d51e8 <line:131:5, line:136:5> line:131:22 expiry 'Timestamp () const' inline
| `-CompoundStmt 0x55bd595d8f20 <col:37, line:136:5>
|   `-IfStmt 0x55bd595d8ef8 <line:132:2, line:135:13> has_else
|     |-ImplicitCastExpr 0x55bd595d8a88 <line:132:6> 'bool' <MemberPointerToBoolean>
|     | `-ImplicitCastExpr 0x55bd595d8a70 <col:6> 'Timestamp::unspecified_bool_type':'Timestamp::seconds_type (Timestamp::*)() const' <UserDefinedConversion>
|     |   `-CXXMemberCallExpr 0x55bd595d8a50 <col:6> 'Timestamp::unspecified_bool_type':'Timestamp::seconds_type (Timestamp::*)() const'
|     |     `-MemberExpr 0x55bd595d8a20 <col:6> '<bound member function type>' .operator int (Timestamp::*)() const 0x55bd59459e48
|     |       `-MemberExpr 0x55bd595d89f0 <col:6> 'const Timestamp' lvalue ->_expiry_s 0x55bd595d71c8
|     |         `-CXXThisExpr 0x55bd595d89e0 <col:6> 'const Timer *' implicit this
|     |-ReturnStmt 0x55bd595d8e68 <line:133:6, col:72>
|     | `-ExprWithCleanups 0x55bd595d8e50 <col:13, col:72> 'Timestamp'
|     |   `-CXXConstructExpr 0x55bd595d8e20 <col:13, col:72> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|     |     `-MaterializeTemporaryExpr 0x55bd595d8e08 <col:13, col:72> 'Timestamp' xvalue
|     |       `-CXXOperatorCallExpr 0x55bd595d8dd0 <col:13, col:72> 'Timestamp'
|     |         |-ImplicitCastExpr 0x55bd595d8db8 <col:45> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|     |         | `-DeclRefExpr 0x55bd595d8d98 <col:45> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55bd59488620 'operator-' 'Timestamp (Timestamp, const Timestamp &)'
|     |         |-CXXConstructExpr 0x55bd595d8d38 <col:13, col:43> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|     |         | `-MaterializeTemporaryExpr 0x55bd595d8d20 <col:13, col:43> 'Timestamp' xvalue
|     |         |   `-CXXOperatorCallExpr 0x55bd595d8c48 <col:13, col:43> 'Timestamp'
|     |         |     |-ImplicitCastExpr 0x55bd595d8c30 <col:23> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|     |         |     | `-DeclRefExpr 0x55bd595d8c10 <col:23> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55bd594882e0 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|     |         |     |-CXXConstructExpr 0x55bd595d8bb0 <col:13> 'Timestamp' 'void (const Timestamp &) noexcept'
|     |         |     | `-MemberExpr 0x55bd595d8ab0 <col:13> 'const Timestamp' lvalue ->_expiry_s 0x55bd595d71c8
|     |         |     |   `-CXXThisExpr 0x55bd595d8aa0 <col:13> 'const Timer *' implicit this
|     |         |     `-MaterializeTemporaryExpr 0x55bd595d8bf8 <col:25, col:43> 'const Timestamp' lvalue
|     |         |       `-ImplicitCastExpr 0x55bd595d8be0 <col:25, col:43> 'const Timestamp' <NoOp>
|     |         |         `-CallExpr 0x55bd595d8b90 <col:25, col:43> 'Timestamp'
|     |         |           `-ImplicitCastExpr 0x55bd595d8b78 <col:25, col:36> 'Timestamp (*)()' <FunctionToPointerDecay>
|     |         |             `-DeclRefExpr 0x55bd595d8b18 <col:25, col:36> 'Timestamp ()' lvalue CXXMethod 0x55bd5947b940 'recent' 'Timestamp ()'
|     |         `-MaterializeTemporaryExpr 0x55bd595d8d80 <col:47, col:72> 'const Timestamp' lvalue
|     |           `-ImplicitCastExpr 0x55bd595d8d68 <col:47, col:72> 'const Timestamp' <NoOp>
|     |             `-CallExpr 0x55bd595d8d00 <col:47, col:72> 'Timestamp'
|     |               `-ImplicitCastExpr 0x55bd595d8ce8 <col:47, col:58> 'Timestamp (*)()' <FunctionToPointerDecay>
|     |                 `-DeclRefExpr 0x55bd595d8cb8 <col:47, col:58> 'Timestamp ()' lvalue CXXMethod 0x55bd592d6e90 'recent_steady' 'Timestamp ()'
|     `-ReturnStmt 0x55bd595d8ee8 <line:135:6, col:13>
|       `-CXXConstructExpr 0x55bd595d8eb8 <col:13> 'Timestamp' 'void (const Timestamp &) noexcept'
|         `-MemberExpr 0x55bd595d8e88 <col:13> 'const Timestamp' lvalue ->_expiry_s 0x55bd595d71c8
|           `-CXXThisExpr 0x55bd595d8e78 <col:13> 'const Timer *' implicit this
|-CXXMethodDecl 0x55bd595d52a8 <line:139:5, line:141:5> line:139:20 router 'Router *() const' inline
| `-CompoundStmt 0x55bd595d9008 <col:35, line:141:5>
|   `-ReturnStmt 0x55bd595d8ff8 <line:140:2, col:24>
|     `-CXXMemberCallExpr 0x55bd595d8fc0 <col:9, col:24> 'Router *'
|       `-MemberExpr 0x55bd595d8f90 <col:9, col:17> '<bound member function type>' ->router 0x55bd594da4d0
|         `-ImplicitCastExpr 0x55bd595d8fe0 <col:9> 'const Element *' <NoOp>
|           `-ImplicitCastExpr 0x55bd595d8f78 <col:9> 'Element *' <LValueToRValue>
|             `-MemberExpr 0x55bd595d8f48 <col:9> 'Element *const' lvalue ->_owner 0x55bd595d74e8
|               `-CXXThisExpr 0x55bd595d8f38 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x55bd595d5368 <line:144:5, line:146:5> line:144:21 element 'Element *() const' inline
| `-CompoundStmt 0x55bd595d9088 <col:37, line:146:5>
|   `-ReturnStmt 0x55bd595d9078 <line:145:2, col:9>
|     `-ImplicitCastExpr 0x55bd595d9060 <col:9> 'Element *' <LValueToRValue>
|       `-MemberExpr 0x55bd595d9030 <col:9> 'Element *const' lvalue ->_owner 0x55bd595d74e8
|         `-CXXThisExpr 0x55bd595d9020 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x55bd595d5428 <line:149:5, line:151:5> line:149:26 thread 'RouterThread *() const' inline
| `-CompoundStmt 0x55bd595d9108 <col:41, line:151:5>
|   `-ReturnStmt 0x55bd595d90f8 <line:150:2, col:9>
|     `-ImplicitCastExpr 0x55bd595d90e0 <col:9> 'RouterThread *' <LValueToRValue>
|       `-MemberExpr 0x55bd595d90b0 <col:9> 'RouterThread *const' lvalue ->_thread 0x55bd595d7548
|         `-CXXThisExpr 0x55bd595d90a0 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x55bd595d54f0 <line:154:5, col:26> col:9 home_thread_id 'int () const'
|-CXXMethodDecl 0x55bd595d56e8 <line:171:5, col:55> col:10 initialize 'void (Element *, bool)'
| |-ParmVarDecl 0x55bd595d55a0 <col:21, col:30> col:30 owner 'Element *'
| `-ParmVarDecl 0x55bd595d5618 <col:37, col:50> col:42 quiet 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55bd595d7e28 <col:50> 'bool' false
|-CXXMethodDecl 0x55bd595d5868 <line:181:5, col:35> col:10 initialize 'void (Router *)'
| `-ParmVarDecl 0x55bd595d57a8 <col:21, col:29> col:29 router 'Router *'
|-CXXMethodDecl 0x55bd595d59b0 <line:191:5, col:57> col:10 used schedule_at_steady 'void (const Timestamp &)'
| `-ParmVarDecl 0x55bd595d5920 <col:29, col:46> col:46 when_steady 'const Timestamp &'
|-CXXMethodDecl 0x55bd595d5af8 <line:197:5, col:59> col:10 reschedule_at_steady 'void (const Timestamp &)'
| `-ParmVarDecl 0x55bd595d5a68 <col:31, col:48> col:48 when_steady 'const Timestamp &'
|-CXXMethodDecl 0x55bd595d5c40 <line:210:5, col:50> col:17 used schedule_at 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x55bd595d5bb0 <col:29, col:46> col:46 when 'const Timestamp &'
|-CXXMethodDecl 0x55bd595d5d88 <line:216:5, col:52> col:17 reschedule_at 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x55bd595d5cf8 <col:31, col:48> col:48 when 'const Timestamp &'
|-CXXMethodDecl 0x55bd595d5e50 <line:221:5, line:223:5> line:221:17 schedule_now 'void ()' inline
| `-CompoundStmt 0x55bd595d9270 <col:32, line:223:5>
|   `-ExprWithCleanups 0x55bd595d9258 <line:222:2, col:47> 'void'
|     `-CXXMemberCallExpr 0x55bd595d9200 <col:2, col:47> 'void'
|       |-MemberExpr 0x55bd595d9130 <col:2> '<bound member function type>' ->schedule_at_steady 0x55bd595d59b0
|       | `-CXXThisExpr 0x55bd595d9120 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55bd595d9240 <col:21, col:46> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55bd595d9228 <col:21, col:46> 'const Timestamp' <NoOp>
|           `-CallExpr 0x55bd595d91e0 <col:21, col:46> 'Timestamp'
|             `-ImplicitCastExpr 0x55bd595d91c8 <col:21, col:32> 'Timestamp (*)()' <FunctionToPointerDecay>
|               `-DeclRefExpr 0x55bd595d9198 <col:21, col:32> 'Timestamp ()' lvalue CXXMethod 0x55bd592d6e90 'recent_steady' 'Timestamp ()'
|-CXXMethodDecl 0x55bd595d5f90 <line:233:5, col:47> col:10 used schedule_after 'void (const Timestamp &)'
| `-ParmVarDecl 0x55bd595d5f00 <col:25, col:42> col:42 delta 'const Timestamp &'
|-CXXMethodDecl 0x55bd595d60d8 <line:239:5, line:241:5> line:239:17 used schedule_after_sec 'void (uint32_t)' inline
| |-ParmVarDecl 0x55bd595d6048 <col:36, col:45> col:45 used delta_sec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55bd595d93f8 <col:56, line:241:5>
|   `-ExprWithCleanups 0x55bd595d93e0 <line:240:2, col:40> 'void'
|     `-CXXMemberCallExpr 0x55bd595d9388 <col:2, col:40> 'void'
|       |-MemberExpr 0x55bd595d9298 <col:2> '<bound member function type>' ->schedule_after 0x55bd595d5f90
|       | `-CXXThisExpr 0x55bd595d9288 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55bd595d93c8 <col:17, col:39> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55bd595d93b0 <col:17, col:39> 'const Timestamp' <NoOp>
|           `-CXXTemporaryObjectExpr 0x55bd595d9348 <col:17, col:39> 'Timestamp' 'void (unsigned int, uint32_t)'
|             |-ImplicitCastExpr 0x55bd595d9318 <col:27> 'uint32_t':'unsigned int' <LValueToRValue>
|             | `-DeclRefExpr 0x55bd595d92d8 <col:27> 'uint32_t':'unsigned int' lvalue ParmVar 0x55bd595d6048 'delta_sec' 'uint32_t':'unsigned int'
|             `-ImplicitCastExpr 0x55bd595d9330 <col:38> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x55bd595d92f8 <col:38> 'int' 0
|-CXXMethodDecl 0x55bd595d6220 <line:247:5, line:249:5> line:247:17 used schedule_after_msec 'void (uint32_t)' inline
| |-ParmVarDecl 0x55bd595d6190 <col:37, col:46> col:46 used delta_msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55bd595d9668 <col:58, line:249:5>
|   `-ExprWithCleanups 0x55bd595d9650 <line:248:2, col:49> 'void'
|     `-CXXMemberCallExpr 0x55bd595d95f8 <col:2, col:49> 'void'
|       |-MemberExpr 0x55bd595d9420 <col:2> '<bound member function type>' ->schedule_after 0x55bd595d5f90
|       | `-CXXThisExpr 0x55bd595d9410 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55bd595d9638 <col:17, col:48> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55bd595d9620 <col:17, col:48> 'const Timestamp' <NoOp>
|           `-CallExpr 0x55bd595d95a0 <col:17, col:48> 'Timestamp'
|             |-ImplicitCastExpr 0x55bd595d9588 <col:17, col:28> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x55bd595d94f8 <col:17, col:28> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x55bd5945bc38 'make_msec' 'Timestamp (Timestamp::value_type)'
|             `-ImplicitCastExpr 0x55bd595d95e0 <col:38> 'Timestamp::value_type':'long' <IntegralCast>
|               `-ImplicitCastExpr 0x55bd595d95c8 <col:38> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x55bd595d94d8 <col:38> 'uint32_t':'unsigned int' lvalue ParmVar 0x55bd595d6190 'delta_msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55bd595d6368 <line:259:5, line:261:5> line:259:17 reschedule_after 'void (const Timestamp &)' inline
| |-ParmVarDecl 0x55bd595d62d8 <col:34, col:51> col:51 used delta 'const Timestamp &'
| `-CompoundStmt 0x55bd595d9848 <col:58, line:261:5>
|   `-ExprWithCleanups 0x55bd595d9830 <line:260:2, col:38> 'void'
|     `-CXXMemberCallExpr 0x55bd595d97d8 <col:2, col:38> 'void'
|       |-MemberExpr 0x55bd595d9690 <col:2> '<bound member function type>' ->schedule_at_steady 0x55bd595d59b0
|       | `-CXXThisExpr 0x55bd595d9680 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55bd595d9818 <col:21, col:33> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55bd595d9800 <col:21, col:33> 'const Timestamp' <NoOp>
|           `-CXXOperatorCallExpr 0x55bd595d97a0 <col:21, col:33> 'Timestamp'
|             |-ImplicitCastExpr 0x55bd595d9788 <col:31> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x55bd595d9768 <col:31> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55bd594882e0 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|             |-CXXConstructExpr 0x55bd595d9738 <col:21> 'Timestamp' 'void (const Timestamp &) noexcept'
|             | `-ImplicitCastExpr 0x55bd595d9720 <col:21> 'const Timestamp' lvalue <NoOp>
|             |   `-MemberExpr 0x55bd595d96d0 <col:21> 'Timestamp' lvalue ->_expiry_s 0x55bd595d71c8
|             |     `-CXXThisExpr 0x55bd595d96c0 <col:21> 'Timer *' implicit this
|             `-DeclRefExpr 0x55bd595d9700 <col:33> 'const Timestamp' lvalue ParmVar 0x55bd595d62d8 'delta' 'const Timestamp &'
|-CXXMethodDecl 0x55bd595d64b0 <line:268:5, line:270:5> line:268:17 used reschedule_after_sec 'void (uint32_t)' inline
| |-ParmVarDecl 0x55bd595d6420 <col:38, col:47> col:47 used delta_sec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55bd595d9b20 <col:58, line:270:5>
|   `-ExprWithCleanups 0x55bd595d9b08 <line:269:2, col:79> 'void'
|     `-CXXMemberCallExpr 0x55bd595d9ab0 <col:2, col:79> 'void'
|       |-MemberExpr 0x55bd595d9870 <col:2> '<bound member function type>' ->schedule_at_steady 0x55bd595d59b0
|       | `-CXXThisExpr 0x55bd595d9860 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55bd595d9af0 <col:21, col:78> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55bd595d9ad8 <col:21, col:78> 'const Timestamp' <NoOp>
|           `-CXXTemporaryObjectExpr 0x55bd595d9a70 <col:21, col:78> 'Timestamp' 'void (unsigned int, uint32_t)'
|             |-BinaryOperator 0x55bd595d99a8 <col:31, col:49> 'unsigned int' '+'
|             | |-ImplicitCastExpr 0x55bd595d9990 <col:31, col:45> 'unsigned int' <IntegralCast>
|             | | `-CXXMemberCallExpr 0x55bd595d9920 <col:31, col:45> 'Timestamp::seconds_type':'int'
|             | |   `-MemberExpr 0x55bd595d98f0 <col:31, col:41> '<bound member function type>' .sec 0x55bd592d8988
|             | |     `-ImplicitCastExpr 0x55bd595d9940 <col:31> 'const Timestamp' lvalue <NoOp>
|             | |       `-MemberExpr 0x55bd595d98c0 <col:31> 'Timestamp' lvalue ->_expiry_s 0x55bd595d71c8
|             | |         `-CXXThisExpr 0x55bd595d98b0 <col:31> 'Timer *' implicit this
|             | `-ImplicitCastExpr 0x55bd595d9978 <col:49> 'uint32_t':'unsigned int' <LValueToRValue>
|             |   `-DeclRefExpr 0x55bd595d9958 <col:49> 'uint32_t':'unsigned int' lvalue ParmVar 0x55bd595d6420 'delta_sec' 'uint32_t':'unsigned int'
|             `-CXXMemberCallExpr 0x55bd595d9a38 <col:60, col:77> 'uint32_t':'unsigned int'
|               `-MemberExpr 0x55bd595d9a08 <col:60, col:70> '<bound member function type>' .subsec 0x55bd592d9080
|                 `-ImplicitCastExpr 0x55bd595d9a58 <col:60> 'const Timestamp' lvalue <NoOp>
|                   `-MemberExpr 0x55bd595d99d8 <col:60> 'Timestamp' lvalue ->_expiry_s 0x55bd595d71c8
|                     `-CXXThisExpr 0x55bd595d99c8 <col:60> 'Timer *' implicit this
|-CXXMethodDecl 0x55bd595d65f8 <line:277:5, line:279:5> line:277:17 used reschedule_after_msec 'void (uint32_t)' inline
| |-ParmVarDecl 0x55bd595d6568 <col:39, col:48> col:48 used delta_msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55bd595d9e58 <col:60, line:279:5>
|   `-ExprWithCleanups 0x55bd595d9e40 <line:278:2, col:65> 'void'
|     `-CXXMemberCallExpr 0x55bd595d9de8 <col:2, col:65> 'void'
|       |-MemberExpr 0x55bd595d9b48 <col:2> '<bound member function type>' ->schedule_at_steady 0x55bd595d59b0
|       | `-CXXThisExpr 0x55bd595d9b38 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55bd595d9e28 <col:21, col:64> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55bd595d9e10 <col:21, col:64> 'const Timestamp' <NoOp>
|           `-CXXOperatorCallExpr 0x55bd595d9db0 <col:21, col:64> 'Timestamp'
|             |-ImplicitCastExpr 0x55bd595d9d98 <col:31> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x55bd595d9d78 <col:31> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55bd594882e0 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|             |-CXXConstructExpr 0x55bd595d9d18 <col:21> 'Timestamp' 'void (const Timestamp &) noexcept'
|             | `-ImplicitCastExpr 0x55bd595d9d00 <col:21> 'const Timestamp' lvalue <NoOp>
|             |   `-MemberExpr 0x55bd595d9b88 <col:21> 'Timestamp' lvalue ->_expiry_s 0x55bd595d71c8
|             |     `-CXXThisExpr 0x55bd595d9b78 <col:21> 'Timer *' implicit this
|             `-MaterializeTemporaryExpr 0x55bd595d9d60 <col:33, col:64> 'const Timestamp' lvalue
|               `-ImplicitCastExpr 0x55bd595d9d48 <col:33, col:64> 'const Timestamp' <NoOp>
|                 `-CallExpr 0x55bd595d9ca8 <col:33, col:64> 'Timestamp'
|                   |-ImplicitCastExpr 0x55bd595d9c90 <col:33, col:44> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|                   | `-DeclRefExpr 0x55bd595d9c60 <col:33, col:44> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x55bd5945bc38 'make_msec' 'Timestamp (Timestamp::value_type)'
|                   `-ImplicitCastExpr 0x55bd595d9ce8 <col:54> 'Timestamp::value_type':'long' <IntegralCast>
|                     `-ImplicitCastExpr 0x55bd595d9cd0 <col:54> 'uint32_t':'unsigned int' <LValueToRValue>
|                       `-DeclRefExpr 0x55bd595d9c40 <col:54> 'uint32_t':'unsigned int' lvalue ParmVar 0x55bd595d6568 'delta_msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55bd595d66c0 <line:285:5, col:21> col:10 used unschedule 'void ()'
|-CXXMethodDecl 0x55bd595d6780 <line:288:5, line:291:5> line:288:17 clear 'void ()' inline
| `-CompoundStmt 0x55bd595da320 <col:25, line:291:5>
|   |-CXXMemberCallExpr 0x55bd595d9eb0 <line:289:2, col:13> 'void'
|   | `-MemberExpr 0x55bd595d9e80 <col:2> '<bound member function type>' ->unschedule 0x55bd595d66c0
|   |   `-CXXThisExpr 0x55bd595d9e70 <col:2> 'Timer *' implicit this
|   `-ExprWithCleanups 0x55bd595da308 <line:290:2, col:24> 'Timestamp' lvalue
|     `-CXXOperatorCallExpr 0x55bd595da2d0 <col:2, col:24> 'Timestamp' lvalue
|       |-ImplicitCastExpr 0x55bd595da2b8 <col:12> 'Timestamp &(*)(Timestamp &&) noexcept' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55bd595d9f68 <col:12> 'Timestamp &(Timestamp &&) noexcept' lvalue CXXMethod 0x55bd5916fd08 'operator=' 'Timestamp &(Timestamp &&) noexcept'
|       |-MemberExpr 0x55bd595d9ee0 <col:2> 'Timestamp' lvalue ->_expiry_s 0x55bd595d71c8
|       | `-CXXThisExpr 0x55bd595d9ed0 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55bd595d9f50 <col:14, col:24> 'Timestamp' xvalue
|         `-CXXTemporaryObjectExpr 0x55bd595d9f20 <col:14, col:24> 'Timestamp' 'void ()'
|-CXXMethodDecl 0x55bd595d6840 <line:304:5, line:310:5> line:304:29 used adjustment 'Timestamp ()' static inline
| `-CompoundStmt 0x55bd595da678 <col:42, line:310:5>
|   |-IfStmt 0x55bd595da4c0 <line:306:2, line:307:23>
|   | |-CallExpr 0x55bd595da3f0 <line:306:6, col:30> 'bool'
|   | | `-ImplicitCastExpr 0x55bd595da3d8 <col:6, col:17> 'bool (*)()' <FunctionToPointerDecay>
|   | |   `-DeclRefExpr 0x55bd595da378 <col:6, col:17> 'bool ()' lvalue CXXMethod 0x55bd59479db0 'warp_jumping' 'bool ()'
|   | `-ReturnStmt 0x55bd595da4b0 <line:307:6, col:23>
|   |   `-ExprWithCleanups 0x55bd595da498 <col:13, col:23> 'Timestamp'
|   |     `-CXXConstructExpr 0x55bd595da468 <col:13, col:23> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x55bd595da450 <col:13, col:23> 'Timestamp' xvalue
|   |         `-CXXTemporaryObjectExpr 0x55bd595da420 <col:13, col:23> 'Timestamp' 'void ()'
|   `-ReturnStmt 0x55bd595da668 <line:309:2, col:33>
|     `-ExprWithCleanups 0x55bd595da650 <col:9, col:33> 'Timestamp'
|       `-CXXConstructExpr 0x55bd595da620 <col:9, col:33> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55bd595da608 <col:9, col:33> 'Timestamp' xvalue
|           `-CallExpr 0x55bd595da5c8 <col:9, col:33> 'Timestamp'
|             |-ImplicitCastExpr 0x55bd595da5b0 <col:9, col:20> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x55bd595da580 <col:9, col:20> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x55bd5945bf50 'make_usec' 'Timestamp (Timestamp::value_type)'
|             `-ImplicitCastExpr 0x55bd595da5f0 <col:30> 'Timestamp::value_type':'long' <IntegralCast>
|               `-IntegerLiteral 0x55bd595da560 <col:30> 'int' 500
|-CXXMethodDecl 0x55bd595d6980 <line:317:5, col:80> col:17 schedule_after_s 'void (uint32_t)' inline
| |-ParmVarDecl 0x55bd595d68f0 <col:34, col:43> col:43 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55bd595d6a28 <col:69> "" ""
|-CXXMethodDecl 0x55bd595d6b38 <line:323:5, col:81> col:17 schedule_after_ms 'void (uint32_t)' inline
| |-ParmVarDecl 0x55bd595d6aa8 <col:35, col:44> col:44 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55bd595d6be0 <col:70> "" ""
|-CXXMethodDecl 0x55bd595d6cf0 <line:329:5, col:82> col:17 reschedule_after_s 'void (uint32_t)' inline
| |-ParmVarDecl 0x55bd595d6c60 <col:36, col:45> col:45 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55bd595d6d98 <col:71> "" ""
|-CXXMethodDecl 0x55bd595d6ea8 <line:335:5, col:83> col:17 reschedule_after_ms 'void (uint32_t)' inline
| |-ParmVarDecl 0x55bd595d6e18 <col:37, col:46> col:46 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55bd595d6f50 <col:72> "" ""
|-EnumDecl 0x55bd595d6fc0 <line:337:5, col:27> col:5
| `-EnumConstantDecl 0x55bd595d70c0 <col:12, col:25> col:12 behind_sec 'Timer::(anonymous enum at ../dummy_inc/click/timer.hh:337:5)'
|   `-ImplicitCastExpr 0x55bd595d7110 <col:25> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55bd595d70a0 <col:25> 'int' Int: 1
|       `-IntegerLiteral 0x55bd595d7080 <col:25> 'int' 1
|-AccessSpecDecl 0x55bd595d7128 <line:339:3, col:10> col:3 private
|-FieldDecl 0x55bd595d7168 <line:341:5, col:9> col:9 referenced _schedpos1 'int'
|-FieldDecl 0x55bd595d71c8 <line:342:5, col:15> col:15 referenced _expiry_s 'Timestamp'
|-CXXRecordDecl 0x55bd595d7218 <line:343:5, line:345:5> line:343:5 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x55bd595d7348 <line:344:2, col:16> col:16 referenced callback 'TimerCallback':'void (*)(Timer *, void *)'
| `-CXXDestructorDecl 0x55bd595d7e38 <line:343:5> col:5 implicit ~ 'void () noexcept' inline default trivial
|-FieldDecl 0x55bd595d7408 <col:5, line:345:7> col:7 referenced _hook 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)'
|-FieldDecl 0x55bd595d7488 <line:346:5, col:11> col:11 referenced _thunk 'void *'
|-FieldDecl 0x55bd595d74e8 <line:347:5, col:14> col:14 referenced _owner 'Element *'
|-FieldDecl 0x55bd595d7548 <line:348:5, col:19> col:19 referenced _thread 'RouterThread *'
|-CXXMethodDecl 0x55bd595d7698 <line:350:5, col:36> col:12 operator= 'Timer &(const Timer &)'
| `-ParmVarDecl 0x55bd595d75a8 <col:22, col:35> col:35 x 'const Timer &'
|-CXXMethodDecl 0x55bd595d7868 <line:352:5, col:58> col:17 used do_nothing_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x55bd595d7750 <col:33, col:40> col:40 t 'Timer *'
| `-ParmVarDecl 0x55bd595d77d0 <col:43, col:49> col:49 user_data 'void *'
|-CXXMethodDecl 0x55bd595d7a40 <line:353:5, col:55> col:17 used element_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x55bd595d7928 <col:30, col:37> col:37 t 'Timer *'
| `-ParmVarDecl 0x55bd595d79a8 <col:40, col:46> col:46 user_data 'void *'
|-CXXMethodDecl 0x55bd595d7c18 <line:354:5, col:52> col:17 used task_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x55bd595d7b00 <col:27, col:34> col:34 t 'Timer *'
| `-ParmVarDecl 0x55bd595d7b80 <col:37, col:43> col:43 user_data 'void *'
`-FriendDecl 0x55bd595d7de8 <line:356:5, col:18> col:12 'class TimerSet':'TimerSet'

Layout: <CGRecordLayout
  LLVMType:%class.Timer = type { i32, %class.Timestamp, %union.anon.20, i8*, %class.Element*, %class.RouterThread* }
  NonVirtualBaseLLVMType:%class.Timer = type { i32, %class.Timestamp, %union.anon.20, i8*, %class.Element*, %class.RouterThread* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct char_array<16>
         0 |   char [16] x
           | [sizeof=16, dsize=16, align=1,
           |  nvsize=16, nvalign=1]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55bd595f22a0 <../dummy_inc/click/type_traits.hh:165:1, line:167:1> line:165:28 struct char_array definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-TemplateArgument integral 16
|-PackedAttr 0x55bd597064f8 <line:167:18>
|-CXXRecordDecl 0x55bd597065b8 prev 0x55bd595f22a0 <line:165:21, col:28> col:28 implicit struct char_array
`-FieldDecl 0x55bd597066c8 <line:166:5, col:13> col:10 x 'char [16]'

Layout: <CGRecordLayout
  LLVMType:%struct.char_array.10 = type { [16 x i8] }
  NonVirtualBaseLLVMType:%struct.char_array.10 = type { [16 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct char_array<4>
         0 |   char [4] x
           | [sizeof=4, dsize=4, align=1,
           |  nvsize=4, nvalign=1]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55bd595560a0 <../dummy_inc/click/type_traits.hh:165:1, line:167:1> line:165:28 struct char_array definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-TemplateArgument integral 4
|-PackedAttr 0x55bd5970a0c0 <line:167:18>
|-CXXRecordDecl 0x55bd5970a180 prev 0x55bd595560a0 <line:165:21, col:28> col:28 implicit struct char_array
`-FieldDecl 0x55bd5970a290 <line:166:5, col:13> col:10 x 'char [4]'

Layout: <CGRecordLayout
  LLVMType:%struct.char_array.4 = type { [4 x i8] }
  NonVirtualBaseLLVMType:%struct.char_array.4 = type { [4 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>
