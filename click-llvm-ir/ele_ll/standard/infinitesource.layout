
*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17)
         0 |   unsigned long long __wseq
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_internal_list
         0 |   struct __pthread_internal_list * __prev
         8 |   struct __pthread_internal_list * __next
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_mutex_s
         0 |   int __lock
         4 |   unsigned int __count
         8 |   int __owner
        12 |   unsigned int __nusers
        16 |   int __kind
        20 |   short __spins
        22 |   short __elision
        24 |   struct __pthread_internal_list __list
        24 |     struct __pthread_internal_list * __prev
        32 |     struct __pthread_internal_list * __next
           | [sizeof=40, dsize=40, align=8,
           |  nvsize=40, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17)
         0 |   unsigned long long __g1_start
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s
         0 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17) 
         0 |     unsigned long long __wseq
         0 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |       unsigned int __low
         4 |       unsigned int __high
         8 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17) 
         8 |     unsigned long long __g1_start
         8 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         8 |       unsigned int __low
        12 |       unsigned int __high
        16 |   unsigned int [2] __g_refs
        24 |   unsigned int [2] __g_size
        32 |   unsigned int __g1_orig_size
        36 |   unsigned int __wrefs
        40 |   unsigned int [2] __g_signals
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_rwlock_arch_t
         0 |   unsigned int __readers
         4 |   unsigned int __writers
         8 |   unsigned int __wrphase_futex
        12 |   unsigned int __writers_futex
        16 |   unsigned int __pad3
        20 |   unsigned int __pad4
        24 |   int __cur_writer
        28 |   int __shared
        32 |   signed char __rwelision
        33 |   unsigned char [7] __pad1
        40 |   unsigned long __pad2
        48 |   unsigned int __flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | lldiv_t
         0 |   long long quot
         8 |   long long rem
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct msghdr
         0 |   void * msg_name
         8 |   socklen_t msg_namelen
        16 |   struct iovec * msg_iov
        24 |   size_t msg_iovlen
        32 |   void * msg_control
        40 |   size_t msg_controllen
        48 |   int msg_flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | struct in_addr
         0 |   in_addr_t s_addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5)
         0 |   uint8_t [16] __u6_addr8
         0 |   uint16_t [8] __u6_addr16
         0 |   uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr
         0 |   sa_family_t sa_family
         2 |   char [14] sa_data
           | [sizeof=16, dsize=16, align=2,
           |  nvsize=16, nvalign=2]

*** Dumping AST Record Layout
         0 | struct in6_addr
         0 |   union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         0 |     uint8_t [16] __u6_addr8
         0 |     uint16_t [8] __u6_addr16
         0 |     uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr_storage
         0 |   sa_family_t ss_family
         2 |   char [118] __ss_padding
       120 |   unsigned long __ss_align
           | [sizeof=128, dsize=128, align=8,
           |  nvsize=128, nvalign=8]

*** Dumping AST Record Layout
         0 | struct sockaddr_in6
         0 |   sa_family_t sin6_family
         2 |   in_port_t sin6_port
         4 |   uint32_t sin6_flowinfo
         8 |   struct in6_addr sin6_addr
         8 |     union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         8 |       uint8_t [16] __u6_addr8
         8 |       uint16_t [8] __u6_addr16
         8 |       uint32_t [4] __u6_addr32
        24 |   uint32_t sin6_scope_id
           | [sizeof=28, dsize=28, align=4,
           |  nvsize=28, nvalign=4]

*** Dumping AST Record Layout
         0 | struct timeval
         0 |   __time_t tv_sec
         8 |   __suseconds_t tv_usec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::memo_t
         0 |   volatile uint32_t refcount
         4 |   uint32_t capacity
         8 |   volatile uint32_t dirty
        12 |   char [8] real_data
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping AST Record Layout
         0 | class IPAddress
         0 |   uint32_t _addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Timestamp::rep_t
         0 |   int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timestamp
         0 |   union Timestamp::rep_t _t
         0 |     int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct timespec
         0 |   __time_t tv_sec
         8 |   __syscall_slong_t tv_nsec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element::Port
         0 |   class Element * _e
         8 |   int _port
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping AST Record Layout
         0 | struct TimerSet::heap_element
         0 |   class Timestamp expiry_s
         0 |     union Timestamp::rep_t _t
         0 |       int64_t x
         8 |   class Timer * t
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct pollfd
         0 |   int fd
         4 |   short events
         6 |   short revents
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | struct SelectSet::SelectorInfo
         0 |   class Element * read
         8 |   class Element * write
        16 |   int pollfd
           | [sizeof=24, dsize=20, align=8,
           |  nvsize=20, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::rep_t
         0 |   const char * data
         8 |   int length
        16 |   struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class String
         0 |   struct String::rep_t _r
         0 |     const char * data
         8 |     int length
        16 |     struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Router::Port
         0 |   int idx
         4 |   int port
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | struct Router::element_landmark_t
         0 |   uint32_t first_landmarkid
         8 |   class String filename
         8 |     struct String::rep_t _r
         8 |       const char * data
        16 |       int length
        24 |       struct String::memo_t * memo
           | [sizeof=32, dsize=32, align=8,
           |  nvsize=32, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<4> >
         0 |   vector_memory<class sized_array_memory<4> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<int>
         0 |   class vector_memory<class sized_array_memory<4> > vm_
         0 |     vector_memory<class sized_array_memory<4> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Router::Connection
         0 |   struct Router::Port [2] p
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | class atomic_uint32_t
         0 |   uint32_t _val
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | struct StringAccum::rep_t
         0 |   unsigned char * s
         8 |   int len
        12 |   int cap
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element
         0 |   (Element vtable pointer)
         8 |   class Element::Port *[2] _ports
        24 |   class Element::Port [4] _inline_ports
        88 |   int [2] _nports
        96 |   class Router * _router
       104 |   int _eindex
           | [sizeof=112, dsize=108, align=8,
           |  nvsize=108, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f5da51c9d8 prev 0x55f5da514178 <../dummy_inc/click/element.hh:214:5, line:252:5> line:214:11 referenced class Port definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55f5da51cad0 <col:5, col:11> col:11 implicit referenced class Port
|-AccessSpecDecl 0x55f5da51cb60 <col:18, col:24> col:18 public
|-CXXMethodDecl 0x55f5da51cbd8 <line:216:9, col:30> col:21 used active 'bool () const' inline
|-CXXMethodDecl 0x55f5da51cc98 <line:217:9, col:35> col:25 element 'Element *() const' inline
|-CXXMethodDecl 0x55f5da51cd60 <line:218:9, col:27> col:20 port 'int () const' inline
|-CXXMethodDecl 0x55f5da51ced8 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| |-ParmVarDecl 0x55f5da51ce10 <col:54, col:62> col:62 p 'Packet *'
| |-NoInlineAttr 0x55f5da51cf80 <col:24>
| `-OptimizeNoneAttr 0x55f5da51cfd8 <col:34>
|-CXXMethodDecl 0x55f5da51d020 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
|-CXXMethodDecl 0x55f5da51d2d8 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| |-ParmVarDecl 0x55f5da51d0d0 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x55f5da51d148 <col:43, col:52> col:52 e 'Element *'
| `-ParmVarDecl 0x55f5da51d1c8 <col:55, col:59> col:59 port 'int'
|-AccessSpecDecl 0x55f5da51d390 <line:229:7, col:14> col:7 private
|-FieldDecl 0x55f5da51d3c8 <line:231:9, col:18> col:18 referenced _e 'Element *'
|-FieldDecl 0x55f5da51d430 <line:232:9, col:13> col:13 referenced _port 'int'
|-CXXConstructorDecl 0x55f5da51d4b8 <line:247:9, col:21> col:16 Port 'void ()' inline
|-CXXMethodDecl 0x55f5da51d7d8 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| |-ParmVarDecl 0x55f5da51d570 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x55f5da51d5e8 <col:43, col:52> col:52 owner 'Element *'
| |-ParmVarDecl 0x55f5da51d660 <col:59, col:68> col:68 e 'Element *'
| `-ParmVarDecl 0x55f5da51d6e0 <col:71, col:75> col:75 port 'int'
|-FriendDecl 0x55f5da51d8f0 <line:250:9, col:22> col:16 'class Element':'Element'
|-CXXConstructorDecl 0x55f5da525268 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x55f5da525268
| `-ParmVarDecl 0x55f5da525378 <col:11> col:11 'const Element::Port &'
|-CXXConstructorDecl 0x55f5da525418 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x55f5da525418
| `-ParmVarDecl 0x55f5da525528 <col:11> col:11 'Element::Port &&'
`-CXXDestructorDecl 0x55f5da715790 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"class.Element::Port" = type <{ %class.Element*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%"class.Element::Port.base" = type <{ %class.Element*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<8> >
         0 |   vector_memory<class sized_array_memory<8> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class Element *>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class typed_array_memory<class String> >
         0 |   vector_memory<class typed_array_memory<class String> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class String>
         0 |   class vector_memory<class typed_array_memory<class String> > vm_
         0 |     vector_memory<class typed_array_memory<class String> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<unsigned int>
         0 |   class vector_memory<class sized_array_memory<4> > vm_
         0 |     vector_memory<class sized_array_memory<4> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class typed_array_memory<struct Router::element_landmark_t> >
         0 |   vector_memory<class typed_array_memory<struct Router::element_landmark_t> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct Router::element_landmark_t>
         0 |   class vector_memory<class typed_array_memory<struct Router::element_landmark_t> > vm_
         0 |     vector_memory<class typed_array_memory<struct Router::element_landmark_t> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<16> >
         0 |   vector_memory<class sized_array_memory<16> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct Router::Connection>
         0 |   class vector_memory<class sized_array_memory<16> > vm_
         0 |     vector_memory<class sized_array_memory<16> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<void *>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Router
         0 |   class Master * _master
         8 |   class atomic_uint32_t _runcount
         8 |     uint32_t _val
        12 |   volatile int _state
    16:0-0 |   _Bool _have_connections
    16:1-1 |   _Bool _conn_sorted
    16:2-2 |   _Bool _have_configuration
        20 |   volatile int _running
        24 |   class atomic_uint32_t _refcount
        24 |     uint32_t _val
        32 |   class Vector<class Element *> _elements
        32 |     class vector_memory<class sized_array_memory<8> > vm_
        32 |       vector_memory<class sized_array_memory<8> >::type * l_
        40 |       vector_memory::size_type n_
        44 |       vector_memory::size_type capacity_
        48 |   class Vector<class String> _element_names
        48 |     class vector_memory<class typed_array_memory<class String> > vm_
        48 |       vector_memory<class typed_array_memory<class String> >::type * l_
        56 |       vector_memory::size_type n_
        60 |       vector_memory::size_type capacity_
        64 |   class Vector<class String> _element_configurations
        64 |     class vector_memory<class typed_array_memory<class String> > vm_
        64 |       vector_memory<class typed_array_memory<class String> >::type * l_
        72 |       vector_memory::size_type n_
        76 |       vector_memory::size_type capacity_
        80 |   class Vector<unsigned int> _element_landmarkids
        80 |     class vector_memory<class sized_array_memory<4> > vm_
        80 |       vector_memory<class sized_array_memory<4> >::type * l_
        88 |       vector_memory::size_type n_
        92 |       vector_memory::size_type capacity_
        96 |   class Vector<int> _element_home_thread_ids
        96 |     class vector_memory<class sized_array_memory<4> > vm_
        96 |       vector_memory<class sized_array_memory<4> >::type * l_
       104 |       vector_memory::size_type n_
       108 |       vector_memory::size_type capacity_
       112 |   class Vector<struct Router::element_landmark_t> _element_landmarks
       112 |     class vector_memory<class typed_array_memory<struct Router::element_landmark_t> > vm_
       112 |       vector_memory<class typed_array_memory<struct Router::element_landmark_t> >::type * l_
       120 |       vector_memory::size_type n_
       124 |       vector_memory::size_type capacity_
       128 |   uint32_t _last_landmarkid
       136 |   class Vector<int> _element_name_sorter
       136 |     class vector_memory<class sized_array_memory<4> > vm_
       136 |       vector_memory<class sized_array_memory<4> >::type * l_
       144 |       vector_memory::size_type n_
       148 |       vector_memory::size_type capacity_
       152 |   Vector<int> [2] _element_gport_offset
       184 |   class Vector<int> _element_configure_order
       184 |     class vector_memory<class sized_array_memory<4> > vm_
       184 |       vector_memory<class sized_array_memory<4> >::type * l_
       192 |       vector_memory::size_type n_
       196 |       vector_memory::size_type capacity_
       200 |   class Vector<struct Router::Connection> _conn
       200 |     class vector_memory<class sized_array_memory<16> > vm_
       200 |       vector_memory<class sized_array_memory<16> >::type * l_
       208 |       vector_memory::size_type n_
       212 |       vector_memory::size_type capacity_
       216 |   class Vector<int> _conn_output_sorter
       216 |     class vector_memory<class sized_array_memory<4> > vm_
       216 |       vector_memory<class sized_array_memory<4> >::type * l_
       224 |       vector_memory::size_type n_
       228 |       vector_memory::size_type capacity_
       232 |   class Vector<class String> _requirements
       232 |     class vector_memory<class typed_array_memory<class String> > vm_
       232 |       vector_memory<class typed_array_memory<class String> >::type * l_
       240 |       vector_memory::size_type n_
       244 |       vector_memory::size_type capacity_
       248 |   class Vector<int> _ehandler_first_by_element
       248 |     class vector_memory<class sized_array_memory<4> > vm_
       248 |       vector_memory<class sized_array_memory<4> >::type * l_
       256 |       vector_memory::size_type n_
       260 |       vector_memory::size_type capacity_
       264 |   class Vector<int> _ehandler_to_handler
       264 |     class vector_memory<class sized_array_memory<4> > vm_
       264 |       vector_memory<class sized_array_memory<4> >::type * l_
       272 |       vector_memory::size_type n_
       276 |       vector_memory::size_type capacity_
       280 |   class Vector<int> _ehandler_next
       280 |     class vector_memory<class sized_array_memory<4> > vm_
       280 |       vector_memory<class sized_array_memory<4> >::type * l_
       288 |       vector_memory::size_type n_
       292 |       vector_memory::size_type capacity_
       296 |   class Vector<int> _handler_first_by_name
       296 |     class vector_memory<class sized_array_memory<4> > vm_
       296 |       vector_memory<class sized_array_memory<4> >::type * l_
       304 |       vector_memory::size_type n_
       308 |       vector_memory::size_type capacity_
       312 |   class Handler ** _handler_bufs
       320 |   int _nhandlers_bufs
       324 |   int _free_handler
       328 |   class Vector<class String> _attachment_names
       328 |     class vector_memory<class typed_array_memory<class String> > vm_
       328 |       vector_memory<class typed_array_memory<class String> >::type * l_
       336 |       vector_memory::size_type n_
       340 |       vector_memory::size_type capacity_
       344 |   class Vector<void *> _attachments
       344 |     class vector_memory<class sized_array_memory<8> > vm_
       344 |       vector_memory<class sized_array_memory<8> >::type * l_
       352 |       vector_memory::size_type n_
       356 |       vector_memory::size_type capacity_
       360 |   class Element * _root_element
       368 |   class String _configuration
       368 |     struct String::rep_t _r
       368 |       const char * data
       376 |       int length
       384 |       struct String::memo_t * memo
       392 |   struct Router::notifier_signals_t * _notifier_signals
       400 |   class HashMap_ArenaFactory * _arena_factory
       408 |   class Router * _hotswap_router
       416 |   class ThreadSched * _thread_sched
       424 |   class NameInfo * _name_info
       432 |   class Vector<int> _flow_code_override_eindex
       432 |     class vector_memory<class sized_array_memory<4> > vm_
       432 |       vector_memory<class sized_array_memory<4> >::type * l_
       440 |       vector_memory::size_type n_
       444 |       vector_memory::size_type capacity_
       448 |   class Vector<class String> _flow_code_override
       448 |     class vector_memory<class typed_array_memory<class String> > vm_
       448 |       vector_memory<class typed_array_memory<class String> >::type * l_
       456 |       vector_memory::size_type n_
       460 |       vector_memory::size_type capacity_
       464 |   class Router * _next_router
           | [sizeof=472, dsize=472, align=8,
           |  nvsize=472, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f5da2ce4a0 <../dummy_inc/click/atomic.hh:52:1, line:94:1> line:52:7 referenced class atomic_uint32_t definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55f5da2ce5b8 <col:1, col:7> col:7 implicit referenced class atomic_uint32_t
|-AccessSpecDecl 0x55f5da2ce648 <col:25, col:31> col:25 public
|-CXXMethodDecl 0x55f5da2ce718 <line:57:5, col:29> col:21 used value 'uint32_t () const' inline
|-CXXConversionDecl 0x55f5da2ce800 <line:58:5, col:32> col:12 used operator unsigned int 'uint32_t () const' inline
|-CXXMethodDecl 0x55f5da2cea18 <line:60:5, col:49> col:29 used operator= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x55f5da2ce8c0 <col:39, col:48> col:48 x 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f5da2cebc8 <line:62:5, col:53> col:29 operator+= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x55f5da2cead0 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x55f5da2ced10 <line:63:5, col:53> col:29 operator-= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x55f5da2cec80 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x55f5da2cee58 <line:64:5, col:53> col:29 operator|= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x55f5da2cedc8 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f5da2cefa0 <line:65:5, col:53> col:29 operator&= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x55f5da2cef10 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f5da2cf068 <line:67:5, col:28> col:17 used operator++ 'void ()' inline
|-CXXMethodDecl 0x55f5da2cf1b0 <line:68:5, col:31> col:17 used operator++ 'void (int)' inline
| `-ParmVarDecl 0x55f5da2cf120 <col:28> col:31 'int'
|-CXXMethodDecl 0x55f5da2cf278 <line:69:5, col:28> col:17 used operator-- 'void ()' inline
|-CXXMethodDecl 0x55f5da2cf3c0 <line:70:5, col:31> col:17 operator-- 'void (int)' inline
| `-ParmVarDecl 0x55f5da2cf330 <col:28> col:31 'int'
|-CXXMethodDecl 0x55f5da2cf538 <line:72:5, col:42> col:21 swap 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x55f5da2cf478 <col:26, col:35> col:35 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f5da2cf680 <line:73:5, col:49> col:21 fetch_and_add 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x55f5da2cf5f0 <col:35, col:44> col:44 delta 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f5da2cf748 <line:74:5, col:30> col:17 dec_and_test 'bool ()' inline
|-CXXMethodDecl 0x55f5da2cf908 <line:75:5, col:69> col:21 used compare_swap 'uint32_t (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x55f5da2cf7f8 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55f5da2cf870 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f5da2cfb58 <line:76:5, col:97> col:17 compare_and_swap 'bool (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x55f5da2cf9c8 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55f5da2cfa40 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55f5da2cfc08 <col:86> "" ""
|-CXXMethodDecl 0x55f5da2cfe78 <line:78:5, col:71> col:28 used swap 'uint32_t (volatile uint32_t &, uint32_t)' static inline
| |-ParmVarDecl 0x55f5da2cfce8 <col:33, col:52> col:52 x 'volatile uint32_t &'
| `-ParmVarDecl 0x55f5da2cfd60 <col:55, col:64> col:64 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f5da2d0028 <line:79:5, col:48> col:24 used inc 'void (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x55f5da2cff38 <col:28, col:47> col:47 x 'volatile uint32_t &'
|-CXXMethodDecl 0x55f5da2d01d8 <line:80:5, col:57> col:24 used dec_and_test 'bool (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x55f5da2d00e0 <col:37, col:56> col:56 x 'volatile uint32_t &'
|-CXXMethodDecl 0x55f5da2d04a8 <line:81:5, col:98> col:28 compare_swap 'uint32_t (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x55f5da2d0290 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x55f5da2d0308 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55f5da2d0380 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f5da2d0788 <line:82:5, col:126> col:24 compare_and_swap 'bool (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x55f5da2d0570 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x55f5da2d05e8 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55f5da2d0660 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55f5da2d0840 <col:115> "" ""
|-AccessSpecDecl 0x55f5da2d08b0 <line:84:3, col:10> col:3 private
|-FieldDecl 0x55f5da2d08e8 <line:91:5, col:14> col:14 referenced _val 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f5da2d1e00 <line:52:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x55f5da2d1e00
| `-ParmVarDecl 0x55f5da2d1f08 <col:7> col:7 'const atomic_uint32_t &'
|-CXXMethodDecl 0x55f5da2d1fa8 <col:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x55f5da2d1fa8
| `-ParmVarDecl 0x55f5da2d20b8 <col:7> col:7 'atomic_uint32_t &&'
|-CXXConstructorDecl 0x55f5da3076e8 <col:7> col:7 implicit used atomic_uint32_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55f5da4f94e0 <col:7>
|-CXXConstructorDecl 0x55f5da3077c0 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x55f5da3077c0
| `-ParmVarDecl 0x55f5da3078d8 <col:7> col:7 'const atomic_uint32_t &'
|-CXXConstructorDecl 0x55f5da307948 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x55f5da307948
| `-ParmVarDecl 0x55f5da307a58 <col:7> col:7 'atomic_uint32_t &&'
`-CXXDestructorDecl 0x55f5da4fbee0 <col:7> col:7 implicit referenced ~atomic_uint32_t 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.atomic_uint32_t = type { i32 }
  NonVirtualBaseLLVMType:%class.atomic_uint32_t = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55f5da55d890 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<8>'
|-CXXRecordDecl 0x55f5da55da68 prev 0x55f5da55d890 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55f5da55daf8 <col:46, col:52> col:46 public
|-TypedefDecl 0x55f5da55db20 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55f5d9fa93b0 'int'
|-TypedefDecl 0x55f5da55f6f0 <line:13:5, col:31> col:31 type 'typename sized_array_memory<8>::type':'char_array<8>'
| `-ElaboratedType 0x55f5da55f6a0 'typename sized_array_memory<8>::type' sugar
|   `-TypedefType 0x55f5da55dfd0 'sized_array_memory<8>::type' sugar
|     |-Typedef 0x55f5da55ded0 'type'
|     `-TemplateSpecializationType 0x55f5da55de60 'char_array<8UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x55f5da55dd40 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 8
|       |   `-SubstNonTypeTemplateParmExpr 0x55f5da55dd20 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x55f5da55dd00 <col:24> 'unsigned long' 8
|       `-RecordType 0x55f5da55de40 'char_array<8>'
|         `-ClassTemplateSpecialization 0x55f5da55dd60 'char_array'
|-TypedefDecl 0x55f5da55f7a8 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<8> >::type *'
| `-PointerType 0x55f5da55f770 'vector_memory<sized_array_memory<8> >::type *'
|   `-TypedefType 0x55f5da55f750 'vector_memory<sized_array_memory<8> >::type' sugar
|     |-Typedef 0x55f5da55f6f0 'type'
|     `-ElaboratedType 0x55f5da55f6a0 'typename sized_array_memory<8>::type' sugar
|       `-TypedefType 0x55f5da55dfd0 'sized_array_memory<8>::type' sugar
|         |-Typedef 0x55f5da55ded0 'type'
|         `-TemplateSpecializationType 0x55f5da55de60 'char_array<8UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x55f5da55dd40 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 8
|           |   `-SubstNonTypeTemplateParmExpr 0x55f5da55dd20 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x55f5da55dd00 <col:24> 'unsigned long' 8
|           `-RecordType 0x55f5da55de40 'char_array<8>'
|             `-ClassTemplateSpecialization 0x55f5da55dd60 'char_array'
|-CXXMethodDecl 0x55f5da55f928 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<8> >::type *) const' inline
| `-ParmVarDecl 0x55f5da55f838 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXConstructorDecl 0x55f5da55fa18 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55f5da55faf8 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x55f5da55faf8
|-CXXMethodDecl 0x55f5da55fdc8 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<8> > &)'
| `-ParmVarDecl 0x55f5da55fcd0 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<8> > &'
|-CXXMethodDecl 0x55f5da560008 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x55f5da55fe80 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55f5da55fef8 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55f5da5601d8 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x55f5da5600c8 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55f5da560140 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55f5da560338 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<8> >::iterator ()'
|-CXXMethodDecl 0x55f5da560408 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<8> >::iterator ()'
|-CXXMethodDecl 0x55f5da560658 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<8> >::iterator (vector_memory<sized_array_memory<8> >::iterator, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x55f5da5604c8 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
| `-ParmVarDecl 0x55f5da560540 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55f5da5608b8 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<8> >::iterator (vector_memory<sized_array_memory<8> >::iterator, vector_memory<sized_array_memory<8> >::iterator)'
| |-ParmVarDecl 0x55f5da560728 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
| `-ParmVarDecl 0x55f5da5607a0 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55f5da560a78 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<8> >::type *)' inline
| `-ParmVarDecl 0x55f5da560988 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55f5da560c38 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<8> >::type *)' inline
| `-ParmVarDecl 0x55f5da560b40 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55f5da560cf0 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55f5da560da0 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55f5da560fd8 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x55f5da560e50 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55f5da560ec8 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55f5da561278 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<8> > &)'
| `-ParmVarDecl 0x55f5da561180 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<8> > &'
|-FieldDecl 0x55f5da561340 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<8> >::type *'
|-FieldDecl 0x55f5da561390 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55f5da5613e0 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory = type { %struct.char_array*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory = type { %struct.char_array*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55f5da3bf848 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Element *'
|-CXXRecordDecl 0x55f5da6ac658 prev 0x55f5da3bf848 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55f5da6ad670 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<Element *>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x55f5da6ad620 'typename array_memory<Element *>::type' sugar
|   `-TypedefType 0x55f5da6ad600 'conditional<true, sized_array_memory<8>, typed_array_memory<Element *> >::type' sugar
|     |-Typedef 0x55f5da6ad4b0 'type'
|     `-SubstTemplateTypeParmType 0x55f5da55d460 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x55f5da273cd0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f5da273c78 'T'
|       `-RecordType 0x55f5da55cfb0 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x55f5da55cec8 'sized_array_memory'
|-FieldDecl 0x55f5da6ad770 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Element *>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x55f5da6ad7c0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55f5da6ad7f8 <line:118:5, col:15> col:15 value_type 'Element *':'Element *'
| `-SubstTemplateTypeParmType 0x55f5da6ac6f0 'Element *' sugar
|   |-TemplateTypeParmType 0x55f5da2ab9c0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55f5da2ab968 'T'
|   `-PointerType 0x55f5da505f20 'Element *'
|     `-RecordType 0x55f5da505ca0 'Element'
|       `-CXXRecord 0x55f5da50f9f0 'Element'
|-TypedefDecl 0x55f5da6ad888 <line:119:5, col:16> col:16 reference 'Element *&'
| `-LValueReferenceType 0x55f5da6ad850 'Element *&'
|   `-SubstTemplateTypeParmType 0x55f5da6ac6f0 'Element *' sugar
|     |-TemplateTypeParmType 0x55f5da2ab9c0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55f5da2ab968 'T'
|     `-PointerType 0x55f5da505f20 'Element *'
|       `-RecordType 0x55f5da505ca0 'Element'
|         `-CXXRecord 0x55f5da50f9f0 'Element'
|-TypedefDecl 0x55f5da6ad948 <line:120:5, col:22> col:22 const_reference 'Element *const &'
| `-LValueReferenceType 0x55f5da6ad910 'Element *const &'
|   `-QualType 0x55f5da6ac6f1 'Element *const' const
|     `-SubstTemplateTypeParmType 0x55f5da6ac6f0 'Element *' sugar
|       |-TemplateTypeParmType 0x55f5da2ab9c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f5da2ab968 'T'
|       `-PointerType 0x55f5da505f20 'Element *'
|         `-RecordType 0x55f5da505ca0 'Element'
|           `-CXXRecord 0x55f5da50f9f0 'Element'
|-TypedefDecl 0x55f5da6ad9d8 <line:121:5, col:16> col:16 pointer 'Element **'
| `-PointerType 0x55f5da6ad9a0 'Element **'
|   `-SubstTemplateTypeParmType 0x55f5da6ac6f0 'Element *' sugar
|     |-TemplateTypeParmType 0x55f5da2ab9c0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55f5da2ab968 'T'
|     `-PointerType 0x55f5da505f20 'Element *'
|       `-RecordType 0x55f5da505ca0 'Element'
|         `-CXXRecord 0x55f5da50f9f0 'Element'
|-TypedefDecl 0x55f5da6ada98 <line:122:5, col:22> col:22 const_pointer 'Element *const *'
| `-PointerType 0x55f5da6ada60 'Element *const *'
|   `-QualType 0x55f5da6ac6f1 'Element *const' const
|     `-SubstTemplateTypeParmType 0x55f5da6ac6f0 'Element *' sugar
|       |-TemplateTypeParmType 0x55f5da2ab9c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f5da2ab968 'T'
|       `-PointerType 0x55f5da505f20 'Element *'
|         `-RecordType 0x55f5da505ca0 'Element'
|           `-CXXRecord 0x55f5da50f9f0 'Element'
|-TypedefDecl 0x55f5da6ae670 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<Element *>::type':'Element *'
| `-ElaboratedType 0x55f5da6ae620 'typename fast_argument<Element *>::type' sugar
|   `-TypedefType 0x55f5da6ae600 'fast_argument<Element *, false>::type' sugar
|     |-Typedef 0x55f5da6ae590 'type'
|     `-SubstTemplateTypeParmType 0x55f5da6ae350 'Element *' sugar
|       |-TemplateTypeParmType 0x55f5da27ead0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f5da27ea80 'T'
|       `-PointerType 0x55f5da505f20 'Element *'
|         `-RecordType 0x55f5da505ca0 'Element'
|           `-CXXRecord 0x55f5da50f9f0 'Element'
|-TypedefDecl 0x55f5da6ae6d8 <line:126:5, col:22> col:22 const_access_type 'Element *const &'
| `-LValueReferenceType 0x55f5da6ad910 'Element *const &'
|   `-QualType 0x55f5da6ac6f1 'Element *const' const
|     `-SubstTemplateTypeParmType 0x55f5da6ac6f0 'Element *' sugar
|       |-TemplateTypeParmType 0x55f5da2ab9c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f5da2ab968 'T'
|       `-PointerType 0x55f5da505f20 'Element *'
|         `-RecordType 0x55f5da505ca0 'Element'
|           `-CXXRecord 0x55f5da50f9f0 'Element'
|-TypedefDecl 0x55f5da6ae730 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55f5d9fa93b0 'int'
|-TypedefDecl 0x55f5da6ae798 <line:130:5, col:16> col:16 iterator 'Element **'
| `-PointerType 0x55f5da6ad9a0 'Element **'
|   `-SubstTemplateTypeParmType 0x55f5da6ac6f0 'Element *' sugar
|     |-TemplateTypeParmType 0x55f5da2ab9c0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55f5da2ab968 'T'
|     `-PointerType 0x55f5da505f20 'Element *'
|       `-RecordType 0x55f5da505ca0 'Element'
|         `-CXXRecord 0x55f5da50f9f0 'Element'
|-TypedefDecl 0x55f5da6ae800 <line:131:5, col:22> col:22 const_iterator 'Element *const *'
| `-PointerType 0x55f5da6ada60 'Element *const *'
|   `-QualType 0x55f5da6ac6f1 'Element *const' const
|     `-SubstTemplateTypeParmType 0x55f5da6ac6f0 'Element *' sugar
|       |-TemplateTypeParmType 0x55f5da2ab9c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f5da2ab968 'T'
|       `-PointerType 0x55f5da505f20 'Element *'
|         `-RecordType 0x55f5da505ca0 'Element'
|           `-CXXRecord 0x55f5da50f9f0 'Element'
|-EnumDecl 0x55f5da6ae858 <line:134:5> col:5
| `-EnumConstantDecl 0x55f5da6ae950 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Element *>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55f5da6ae930 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55f5da2ad048 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55f5da2ad020 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55f5da2ad000 <col:40> 'int' 1
|-CXXConstructorDecl 0x55f5da6ae9d8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55f5da6aec68 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Element *>::value_argument_type)' inline
| |-ParmVarDecl 0x55f5da6aea90 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55f5da6aeb30 <col:41, col:61> col:61 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXConstructorDecl 0x55f5da6aeef8 <line:139:5, col:37> col:12 Vector 'void (const Vector<Element *> &)' inline
| `-ParmVarDecl 0x55f5da6aede0 <col:19, col:36> col:36 x 'const Vector<Element *> &'
|-CXXConstructorDecl 0x55f5da6af1b8 <line:141:5, col:32> col:12 Vector 'void (Vector<Element *> &&)' inline
| `-ParmVarDecl 0x55f5da6af0a0 <col:19, col:31> col:31 x 'Vector<Element *> &&'
|-CXXMethodDecl 0x55f5da6af4d0 <line:144:5, col:51> col:23 operator= 'Vector<Element *> &(const Vector<Element *> &)' inline
| `-ParmVarDecl 0x55f5da6af3b0 <col:33, col:50> col:50 x 'const Vector<Element *> &'
|-CXXMethodDecl 0x55f5da6af7e0 <line:146:5, col:46> col:23 operator= 'Vector<Element *> &(Vector<Element *> &&)' inline
| `-ParmVarDecl 0x55f5da6af6c0 <col:33, col:45> col:45 x 'Vector<Element *> &&'
|-CXXMethodDecl 0x55f5da6afad0 <line:148:5, col:70> col:23 assign 'Vector<Element *> &(Vector::size_type, Vector<Element *>::value_argument_type)' inline
| |-ParmVarDecl 0x55f5da6af918 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55f5da6af990 <col:43, col:69> col:63 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXMethodDecl 0x55f5da6afc28 <line:150:5, col:55> col:49 begin 'Vector<Element *>::iterator ()'
| |-NoInlineAttr 0x55f5da6afd08 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f5da6afd60 <col:30> Inherited
|-CXXMethodDecl 0x55f5da6afda8 <line:151:5, col:53> col:49 end 'Vector<Element *>::iterator ()'
| |-NoInlineAttr 0x55f5da6afe58 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f5da6afeb0 <col:30> Inherited
|-CXXMethodDecl 0x55f5da6aff78 <line:152:5, col:63> col:55 begin 'Vector<Element *>::const_iterator () const'
| |-NoInlineAttr 0x55f5da6b0028 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f5da6b0080 <col:30> Inherited
|-CXXMethodDecl 0x55f5da6b00c8 <line:153:5, col:61> col:55 end 'Vector<Element *>::const_iterator () const'
| |-NoInlineAttr 0x55f5da6b0178 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f5da6b01d0 <col:30> Inherited
|-CXXMethodDecl 0x55f5da6b0218 <line:154:5, col:64> col:55 cbegin 'Vector<Element *>::const_iterator () const'
| |-NoInlineAttr 0x55f5da6b02c8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f5da6b0320 <col:30> Inherited
|-CXXMethodDecl 0x55f5da6b0368 <line:155:5, col:62> col:55 cend 'Vector<Element *>::const_iterator () const'
| |-NoInlineAttr 0x55f5da6b0418 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f5da6b0470 <col:30> Inherited
|-CXXMethodDecl 0x55f5da6b0498 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55f5da6b0548 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55f5da6b05f8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55f5da6b07b8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Element *>::value_argument_type)' inline
| |-ParmVarDecl 0x55f5da6b06a8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55f5da6b0720 <col:37, col:63> col:57 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXMethodDecl 0x55f5da6b0908 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55f5da6b0878 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f5da6b0ab8 <line:163:5, col:65> col:43 operator[] 'Element *&(Vector::size_type)'
| |-ParmVarDecl 0x55f5da6b09c0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55f5da6b0b70 <col:20>
| `-OptimizeNoneAttr 0x55f5da6b0bc8 <col:30>
|-CXXMethodDecl 0x55f5da6b0ce8 <line:164:5, col:73> col:49 operator[] 'Element *const &(Vector::size_type) const'
| |-ParmVarDecl 0x55f5da6b0bf0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55f5da6b0da0 <col:20>
| `-OptimizeNoneAttr 0x55f5da6b0df8 <col:30>
|-CXXMethodDecl 0x55f5da6b0eb0 <line:165:5, col:29> col:15 at 'Element *&(Vector::size_type)' inline
| `-ParmVarDecl 0x55f5da6b0e20 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f5da6b0ff8 <line:166:5, col:37> col:21 at 'Element *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55f5da6b0f68 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f5da6b1128 <line:167:5, col:21> col:15 front 'Element *&()' inline
|-CXXMethodDecl 0x55f5da6b1258 <line:168:5, col:29> col:21 front 'Element *const &() const' inline
|-CXXMethodDecl 0x55f5da6b1328 <line:169:5, col:20> col:15 back 'Element *&()' inline
|-CXXMethodDecl 0x55f5da6b13f8 <line:170:5, col:28> col:21 back 'Element *const &() const' inline
|-CXXMethodDecl 0x55f5da6b1538 <line:172:5, col:39> col:15 unchecked_at 'Element *&(Vector::size_type)' inline
| `-ParmVarDecl 0x55f5da6b14a8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f5da6b1680 <line:173:5, col:47> col:21 unchecked_at 'Element *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55f5da6b15f0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f5da6b17c8 <line:174:5, col:59> col:15 at_u 'Element *&(Vector::size_type)' inline
| |-ParmVarDecl 0x55f5da6b1738 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55f5da6b1880 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55f5da6b1980 <line:175:5, col:71> col:21 at_u 'Element *const &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55f5da6b18f0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55f5da6b1a38 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55f5da6b1af8 <line:177:5, col:20> col:15 data 'Element **()' inline
|-CXXMethodDecl 0x55f5da6b1bf8 <line:178:5, col:28> col:21 data 'Element *const *() const' inline
|-CXXMethodDecl 0x55f5da6b1d78 <line:180:5, col:48> col:17 push_back 'void (Vector<Element *>::value_argument_type)' inline
| `-ParmVarDecl 0x55f5da6b1cb8 <col:27, col:47> col:47 v 'Vector<Element *>::value_argument_type':'Element *'
|-FunctionTemplateDecl 0x55f5da6b2568 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55f5da6b1e30 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Element *>':'fast_argument<Element *, false>'
| `-CXXMethodDecl 0x55f5da6b24c8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Element *&&)' inline
|   `-ParmVarDecl 0x55f5da6b23c8 <col:58, col:62> col:62 v 'Element *&&'
|-CXXMethodDecl 0x55f5da6b2648 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55f5da6b2798 <line:186:5, col:49> col:17 push_front 'void (Vector<Element *>::value_argument_type)' inline
| `-ParmVarDecl 0x55f5da6b2708 <col:28, col:48> col:48 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXMethodDecl 0x55f5da6b2850 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55f5da6b2a98 <line:189:5, col:62> col:21 insert 'Vector<Element *>::iterator (Vector<Element *>::iterator, Vector<Element *>::value_argument_type)' inline
| |-ParmVarDecl 0x55f5da6b2910 <col:28, col:37> col:37 it 'Vector<Element *>::iterator':'Element **'
| `-ParmVarDecl 0x55f5da6b2988 <col:41, col:61> col:61 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXMethodDecl 0x55f5da6b2c58 <line:190:5, col:38> col:21 erase 'Vector<Element *>::iterator (Vector<Element *>::iterator)' inline
| `-ParmVarDecl 0x55f5da6b2b68 <col:27, col:36> col:36 it 'Vector<Element *>::iterator':'Element **'
|-CXXMethodDecl 0x55f5da6b2ea8 <line:191:5, col:49> col:21 erase 'Vector<Element *>::iterator (Vector<Element *>::iterator, Vector<Element *>::iterator)' inline
| |-ParmVarDecl 0x55f5da6b2d20 <col:27, col:36> col:36 a 'Vector<Element *>::iterator':'Element **'
| `-ParmVarDecl 0x55f5da6b2d98 <col:39, col:48> col:48 b 'Vector<Element *>::iterator':'Element **'
|-CXXMethodDecl 0x55f5da6b2f68 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55f5da6b31c8 <line:195:5, col:34> col:17 swap 'void (Vector<Element *> &)' inline
| `-ParmVarDecl 0x55f5da6b30d0 <col:22, col:33> col:33 x 'Vector<Element *> &'
`-CXXDestructorDecl 0x55f5da6b3298 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55f5da6b3298

Layout: <CGRecordLayout
  LLVMType:%class.Vector = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f5da2e3890 <../dummy_inc/click/string.hh:189:5, line:198:5> line:189:12 referenced struct memo_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x55f5da2e39a8 <col:5, col:12> col:12 implicit struct memo_t
|-FieldDecl 0x55f5da2e3a48 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
|-FieldDecl 0x55f5da2e3aa8 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
|-FieldDecl 0x55f5da2e3b08 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
`-FieldDecl 0x55f5da2e3bb8 <line:197:2, col:18> col:7 real_data 'char [8]'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  NonVirtualBaseLLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f5da2e3ec0 <../dummy_inc/click/string.hh:204:5, line:208:5> line:204:12 referenced struct rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55f5da2e3fd8 <col:5, col:12> col:12 implicit struct rep_t
|-FieldDecl 0x55f5da2e4080 <line:205:2, col:14> col:14 referenced data 'const char *'
|-FieldDecl 0x55f5da2e40e8 <line:206:2, col:6> col:6 referenced length 'int'
|-FieldDecl 0x55f5da2e4178 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
|-CXXConstructorDecl 0x55f5da2ea210 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55f5da2ea648 <col:12>
|-CXXConstructorDecl 0x55f5da2ea318 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55f5da2ea428 <col:12> col:12 used 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x55f5da2e4080 'data' 'const char *'
| | `-ImplicitCastExpr 0x55f5da2ecbd0 <col:12> 'const char *' <LValueToRValue>
| |   `-MemberExpr 0x55f5da2ecba0 <col:12> 'const char *const' lvalue .data 0x55f5da2e4080
| |     `-DeclRefExpr 0x55f5da2ecb80 <col:12> 'const String::rep_t' lvalue ParmVar 0x55f5da2ea428 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x55f5da2e40e8 'length' 'int'
| | `-ImplicitCastExpr 0x55f5da2ecc60 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x55f5da2ecc30 <col:12> 'const int' lvalue .length 0x55f5da2e40e8
| |     `-DeclRefExpr 0x55f5da2ecc10 <col:12> 'const String::rep_t' lvalue ParmVar 0x55f5da2ea428 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x55f5da2e4178 'memo' 'String::memo_t *'
| | `-ImplicitCastExpr 0x55f5da2eccf0 <col:12> 'String::memo_t *' <LValueToRValue>
| |   `-MemberExpr 0x55f5da2eccc0 <col:12> 'String::memo_t *const' lvalue .memo 0x55f5da2e4178
| |     `-DeclRefExpr 0x55f5da2ecca0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55f5da2ea428 '' 'const String::rep_t &'
| `-CompoundStmt 0x55f5da2ecd48 <col:12>
|-CXXConstructorDecl 0x55f5da2ea4c8 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55f5da2ea4c8
| `-ParmVarDecl 0x55f5da2ea5d8 <col:12> col:12 'String::rep_t &&'
|-CXXDestructorDecl 0x55f5da2efb30 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55f5da2fb548 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55f5da2fb658 <col:12> col:12 used 'const String::rep_t &'
| `-CompoundStmt 0x55f5da2fbb70 <col:12>
|   |-BinaryOperator 0x55f5da2fb988 <col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x55f5da2fb940 <col:12> 'const char *' lvalue ->data 0x55f5da2e4080
|   | | `-CXXThisExpr 0x55f5da2fb930 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x55f5da2fb970 <col:12> 'const char *' <LValueToRValue>
|   |   `-MemberExpr 0x55f5da2fb900 <col:12> 'const char *const' lvalue .data 0x55f5da2e4080
|   |     `-DeclRefExpr 0x55f5da2fb8e0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55f5da2fb658 '' 'const String::rep_t &'
|   |-BinaryOperator 0x55f5da2fba50 <col:12> 'int' lvalue '='
|   | |-MemberExpr 0x55f5da2fba08 <col:12> 'int' lvalue ->length 0x55f5da2e40e8
|   | | `-CXXThisExpr 0x55f5da2fb9f8 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x55f5da2fba38 <col:12> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x55f5da2fb9c8 <col:12> 'const int' lvalue .length 0x55f5da2e40e8
|   |     `-DeclRefExpr 0x55f5da2fb9a8 <col:12> 'const String::rep_t' lvalue ParmVar 0x55f5da2fb658 '' 'const String::rep_t &'
|   |-BinaryOperator 0x55f5da2fbb18 <col:12> 'String::memo_t *' lvalue '='
|   | |-MemberExpr 0x55f5da2fbad0 <col:12> 'String::memo_t *' lvalue ->memo 0x55f5da2e4178
|   | | `-CXXThisExpr 0x55f5da2fbac0 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x55f5da2fbb00 <col:12> 'String::memo_t *' <LValueToRValue>
|   |   `-MemberExpr 0x55f5da2fba90 <col:12> 'String::memo_t *const' lvalue .memo 0x55f5da2e4178
|   |     `-DeclRefExpr 0x55f5da2fba70 <col:12> 'const String::rep_t' lvalue ParmVar 0x55f5da2fb658 '' 'const String::rep_t &'
|   `-ReturnStmt 0x55f5da2fbb60 <col:12>
|     `-UnaryOperator 0x55f5da2fbb48 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55f5da2fbb38 <col:12> 'String::rep_t *' this
`-CXXMethodDecl 0x55f5da2fb6c8 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55f5da2fb6c8
  `-ParmVarDecl 0x55f5da2fb7d8 <col:12> col:12 'String::rep_t &&'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  NonVirtualBaseLLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f5da2dae00 <../dummy_inc/click/string.hh:19:1, line:304:1> line:19:7 referenced class String definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55f5da2daf18 <col:1, col:7> col:7 implicit referenced class String
|-AccessSpecDecl 0x55f5da2dafa8 <col:16, col:22> col:16 public
|-TypedefDecl 0x55f5da2dafe8 <line:21:5, col:25> col:25 referenced const_iterator 'const char *'
| `-PointerType 0x55f5d9fa9e00 'const char *'
|   `-QualType 0x55f5d9fa9351 'const char' const
|     `-BuiltinType 0x55f5d9fa9350 'char'
|-TypedefDecl 0x55f5da2db070 <line:22:5, col:28> col:28 iterator 'String::const_iterator':'const char *'
| `-TypedefType 0x55f5da2db040 'String::const_iterator' sugar
|   |-Typedef 0x55f5da2dafe8 'const_iterator'
|   `-PointerType 0x55f5d9fa9e00 'const char *'
|     `-QualType 0x55f5d9fa9351 'const char' const
|       `-BuiltinType 0x55f5d9fa9350 'char'
|-TypedefDecl 0x55f5da2db1e0 <line:24:5, col:52> col:27 referenced unspecified_bool_type 'int (String::*)() const'
| `-MemberPointerType 0x55f5da2db150 'int (String::*)() const'
|   |-RecordType 0x55f5da2dae90 'String'
|   | `-CXXRecord 0x55f5da2dae00 'String'
|   `-ParenType 0x55f5da2db0f0 'int () const' sugar
|     `-FunctionProtoType 0x55f5da2aec80 'int () const' const cdecl
|       `-BuiltinType 0x55f5d9fa93b0 'int'
|-TypedefDecl 0x55f5da2db248 <line:27:5, col:21> col:21 referenced intmax_t 'int64_t':'long'
| `-TypedefType 0x55f5da103860 'int64_t' sugar
|   |-Typedef 0x55f5da0122a0 'int64_t'
|   `-TypedefType 0x55f5d9feb510 '__int64_t' sugar
|     |-Typedef 0x55f5d9feb0e8 '__int64_t'
|     `-BuiltinType 0x55f5d9fa93d0 'long'
|-TypedefDecl 0x55f5da2db2b0 <line:28:5, col:22> col:22 referenced uintmax_t 'uint64_t':'unsigned long'
| `-TypedefType 0x55f5da103780 'uint64_t' sugar
|   |-Typedef 0x55f5da012440 'uint64_t'
|   `-TypedefType 0x55f5d9feb5a0 '__uint64_t' sugar
|     |-Typedef 0x55f5d9feb158 '__uint64_t'
|     `-BuiltinType 0x55f5d9fa9470 'unsigned long'
|-TypedefDecl 0x55f5da2db340 <line:36:5, col:22> col:22 int_large_t 'String::intmax_t':'long'
| `-TypedefType 0x55f5da2db310 'String::intmax_t' sugar
|   |-Typedef 0x55f5da2db248 'intmax_t'
|   `-TypedefType 0x55f5da103860 'int64_t' sugar
|     |-Typedef 0x55f5da0122a0 'int64_t'
|     `-TypedefType 0x55f5d9feb510 '__int64_t' sugar
|       |-Typedef 0x55f5d9feb0e8 '__int64_t'
|       `-BuiltinType 0x55f5d9fa93d0 'long'
|-TypedefDecl 0x55f5da2db3d0 <line:37:5, col:23> col:23 uint_large_t 'String::uintmax_t':'unsigned long'
| `-TypedefType 0x55f5da2db3a0 'String::uintmax_t' sugar
|   |-Typedef 0x55f5da2db2b0 'uintmax_t'
|   `-TypedefType 0x55f5da103780 'uint64_t' sugar
|     |-Typedef 0x55f5da012440 'uint64_t'
|     `-TypedefType 0x55f5d9feb5a0 '__uint64_t' sugar
|       |-Typedef 0x55f5d9feb158 '__uint64_t'
|       `-BuiltinType 0x55f5d9fa9470 'unsigned long'
|-CXXConstructorDecl 0x55f5da2db490 <line:39:5, col:19> col:12 used String 'void ()' inline
|-CXXConstructorDecl 0x55f5da2db638 <line:40:5, col:34> col:12 used String 'void (const String &)' inline
| `-ParmVarDecl 0x55f5da2db578 <col:19, col:33> col:33 x 'const String &'
|-CXXConstructorDecl 0x55f5da2db7e8 <line:42:5, col:29> col:12 used String 'void (String &&)' inline
| `-ParmVarDecl 0x55f5da2db728 <col:19, col:28> col:28 x 'String &&'
|-CXXConstructorDecl 0x55f5da2db940 <line:44:5, col:35> col:12 used String 'void (const char *)' inline
| `-ParmVarDecl 0x55f5da2db8b0 <col:19, col:31> col:31 cstr 'const char *'
|-CXXConstructorDecl 0x55f5da2dbb58 <line:45:5, col:41> col:12 String 'void (const char *, int)' inline
| |-ParmVarDecl 0x55f5da2dba08 <col:19, col:31> col:31 s 'const char *'
| `-ParmVarDecl 0x55f5da2dba88 <col:34, col:38> col:38 len 'int'
|-CXXConstructorDecl 0x55f5da2dbd78 <line:46:5, col:50> col:12 String 'void (const unsigned char *, int)' inline
| |-ParmVarDecl 0x55f5da2dbc28 <col:19, col:40> col:40 s 'const unsigned char *'
| `-ParmVarDecl 0x55f5da2dbca8 <col:43, col:47> col:47 len 'int'
|-CXXConstructorDecl 0x55f5da2dbf98 <line:47:5, col:54> col:12 used String 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x55f5da2dbe48 <col:19, col:31> col:31 first 'const char *'
| `-ParmVarDecl 0x55f5da2dbec8 <col:38, col:50> col:50 last 'const char *'
|-CXXConstructorDecl 0x55f5da2dc1b8 <line:48:5, col:72> col:12 String 'void (const unsigned char *, const unsigned char *)' inline
| |-ParmVarDecl 0x55f5da2dc068 <col:19, col:40> col:40 first 'const unsigned char *'
| `-ParmVarDecl 0x55f5da2dc0e8 <col:47, col:68> col:68 last 'const unsigned char *'
|-CXXConstructorDecl 0x55f5da2dc348 <line:49:5, col:34> col:21 used String 'void (bool)' inline
| `-ParmVarDecl 0x55f5da2dc280 <col:28, col:33> col:33 x 'bool'
|-CXXConstructorDecl 0x55f5da2dc4c8 <line:50:5, col:34> col:21 String 'void (char)' inline
| `-ParmVarDecl 0x55f5da2dc408 <col:28, col:33> col:33 c 'char'
|-CXXConstructorDecl 0x55f5da2dc658 <line:51:5, col:43> col:21 String 'void (unsigned char)' inline
| `-ParmVarDecl 0x55f5da2dc590 <col:28, col:42> col:42 c 'unsigned char'
|-CXXConstructorDecl 0x55f5da2dc7b0 <line:52:5, col:26> col:14 String 'void (int)'
| `-ParmVarDecl 0x55f5da2dc720 <col:21, col:25> col:25 x 'int'
|-CXXConstructorDecl 0x55f5da2dc908 <line:53:5, col:31> col:14 String 'void (unsigned int)'
| `-ParmVarDecl 0x55f5da2dc878 <col:21, col:30> col:30 x 'unsigned int'
|-CXXConstructorDecl 0x55f5da2dca60 <line:54:5, col:27> col:14 String 'void (long)'
| `-ParmVarDecl 0x55f5da2dc9d0 <col:21, col:26> col:26 x 'long'
|-CXXConstructorDecl 0x55f5da2dcbe8 <line:55:5, col:36> col:14 String 'void (unsigned long)'
| `-ParmVarDecl 0x55f5da2dcb28 <col:21, col:35> col:35 x 'unsigned long'
|-CXXConstructorDecl 0x55f5da2dcd78 <line:57:5, col:32> col:14 String 'void (long long)'
| `-ParmVarDecl 0x55f5da2dccb0 <col:21, col:31> col:31 x 'long long'
|-CXXConstructorDecl 0x55f5da2dcf08 <line:58:5, col:41> col:14 String 'void (unsigned long long)'
| `-ParmVarDecl 0x55f5da2dce40 <col:21, col:40> col:40 x 'unsigned long long'
|-CXXConstructorDecl 0x55f5da2dd098 <line:65:5, col:29> col:14 String 'void (double)'
| `-ParmVarDecl 0x55f5da2dcfd0 <col:21, col:28> col:28 x 'double'
|-CXXDestructorDecl 0x55f5da2dd190 <line:67:5, col:20> col:12 used ~String 'void () noexcept' inline
|-CXXMethodDecl 0x55f5da2dd2b8 <line:69:5, col:44> col:33 used make_empty 'const String &()' static inline
|-CXXMethodDecl 0x55f5da2dd438 <line:70:5, col:52> col:26 used make_uninitialized 'String (int)' static inline
| `-ParmVarDecl 0x55f5da2dd370 <col:45, col:49> col:49 len 'int'
|-CXXMethodDecl 0x55f5da2dd588 <line:71:5, col:74> col:26 make_garbage 'String (int)' static inline
| |-ParmVarDecl 0x55f5da2dd4f8 <col:39, col:43> col:43 len 'int'
| `-DeprecatedAttr 0x55f5da2dd640 <col:63> "" ""
|-CXXMethodDecl 0x55f5da2dd788 <line:72:5, col:54> col:26 make_stable 'String (const char *)' static inline
| `-ParmVarDecl 0x55f5da2dd6c8 <col:38, col:50> col:50 cstr 'const char *'
|-CXXMethodDecl 0x55f5da2dd998 <line:73:5, col:60> col:26 make_stable 'String (const char *, int)' static inline
| |-ParmVarDecl 0x55f5da2dd848 <col:38, col:50> col:50 s 'const char *'
| `-ParmVarDecl 0x55f5da2dd8c8 <col:53, col:57> col:57 len 'int'
|-CXXMethodDecl 0x55f5da2ddbb8 <line:74:5, col:73> col:26 make_stable 'String (const char *, const char *)' static inline
| |-ParmVarDecl 0x55f5da2dda60 <col:38, col:50> col:50 first 'const char *'
| `-ParmVarDecl 0x55f5da2ddae0 <col:57, col:69> col:69 last 'const char *'
|-CXXMethodDecl 0x55f5da2dde98 <line:75:5, col:80> col:19 make_numeric 'String (String::intmax_t, int, bool)' static
| |-ParmVarDecl 0x55f5da2ddc78 <col:32, col:41> col:41 x 'String::intmax_t':'long'
| |-ParmVarDecl 0x55f5da2ddcf8 <col:44, col:55> col:48 base 'int' cinit
| | `-IntegerLiteral 0x55f5da2e9ce0 <col:55> 'int' 10
| `-ParmVarDecl 0x55f5da2ddd70 <col:59, col:76> col:64 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55f5da2e9d00 <col:76> 'bool' true
|-CXXMethodDecl 0x55f5da2de178 <line:76:5, col:81> col:19 make_numeric 'String (String::uintmax_t, int, bool)' static
| |-ParmVarDecl 0x55f5da2ddf60 <col:32, col:42> col:42 x 'String::uintmax_t':'unsigned long'
| |-ParmVarDecl 0x55f5da2ddfe0 <col:45, col:56> col:49 base 'int' cinit
| | `-IntegerLiteral 0x55f5da2e9d10 <col:56> 'int' 10
| `-ParmVarDecl 0x55f5da2de058 <col:60, col:77> col:65 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55f5da2e9d30 <col:77> 'bool' true
|-CXXMethodDecl 0x55f5da2de280 <line:78:5, col:31> col:24 used data 'const char *() const' inline
|-CXXMethodDecl 0x55f5da2de348 <line:79:5, col:25> col:16 used length 'int () const' inline
|-CXXMethodDecl 0x55f5da2de410 <line:81:5, col:60> col:52 c_str 'const char *() const'
| |-NoInlineAttr 0x55f5da2de4b0 <col:20>
| `-OptimizeNoneAttr 0x55f5da2de508 <col:30>
|-CXXConversionDecl 0x55f5da2de5f8 <line:83:5, col:45> col:12 used operator int (String::*)() const 'String::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x55f5da2de6c8 <line:84:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x55f5da2de788 <line:85:5, col:29> col:17 operator! 'bool () const' inline
|-CXXMethodDecl 0x55f5da2de878 <line:87:5, col:35> col:27 used begin 'String::const_iterator () const' inline
|-CXXMethodDecl 0x55f5da2de938 <line:88:5, col:33> col:27 used end 'String::const_iterator () const' inline
|-CXXMethodDecl 0x55f5da2deab8 <line:90:5, col:35> col:17 used operator[] 'char (int) const' inline
| `-ParmVarDecl 0x55f5da2de9f0 <col:28, col:32> col:32 i 'int'
|-CXXMethodDecl 0x55f5da2dec08 <line:91:5, col:27> col:17 at 'char (int) const' inline
| `-ParmVarDecl 0x55f5da2deb78 <col:20, col:24> col:24 i 'int'
|-CXXMethodDecl 0x55f5da2decf8 <line:92:5, col:25> col:17 front 'char () const' inline
|-CXXMethodDecl 0x55f5da2dedb8 <line:93:5, col:24> col:17 back 'char () const' inline
|-CXXMethodDecl 0x55f5da2df008 <line:95:5, col:64> col:21 used hashcode 'uint32_t (const char *, const char *)' static
| |-ParmVarDecl 0x55f5da2dee70 <col:30, col:42> col:42 begin 'const char *'
| `-ParmVarDecl 0x55f5da2deef0 <col:49, col:61> col:61 end 'const char *'
|-CXXMethodDecl 0x55f5da2df268 <line:96:5, line:97:33> line:96:28 hashcode 'uint32_t (const unsigned char *, const unsigned char *)' static inline
| |-ParmVarDecl 0x55f5da2df0d0 <col:37, col:58> col:58 begin 'const unsigned char *'
| `-ParmVarDecl 0x55f5da2df150 <line:97:9, col:30> col:30 end 'const unsigned char *'
|-CXXMethodDecl 0x55f5da2df338 <line:98:5, col:32> col:21 hashcode 'uint32_t () const' inline
|-CXXMethodDecl 0x55f5da2df548 <line:100:5, col:65> col:19 substring 'String (const char *, const char *) const' inline
| |-ParmVarDecl 0x55f5da2df3f0 <col:29, col:41> col:41 begin 'const char *'
| `-ParmVarDecl 0x55f5da2df470 <col:48, col:60> col:60 end 'const char *'
|-CXXMethodDecl 0x55f5da2df768 <line:101:5, col:40> col:12 used substring 'String (int, int) const'
| |-ParmVarDecl 0x55f5da2df610 <col:22, col:26> col:26 pos 'int'
| `-ParmVarDecl 0x55f5da2df690 <col:31, col:35> col:35 len 'int'
|-CXXMethodDecl 0x55f5da2df8f8 <line:102:5, col:38> col:19 substring 'String (int) const' inline
| `-ParmVarDecl 0x55f5da2df830 <col:29, col:33> col:33 pos 'int'
|-CXXMethodDecl 0x55f5da2df9e8 <line:103:5, col:25> col:12 trim_space 'String () const'
|-CXXMethodDecl 0x55f5da2dfb58 <line:105:5, col:41> col:17 equals 'bool (const String &) const' inline
| `-ParmVarDecl 0x55f5da2dfa98 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x55f5da2dfd68 <line:106:5, col:48> col:17 used equals 'bool (const char *, int) const' inline
| |-ParmVarDecl 0x55f5da2dfc18 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x55f5da2dfc98 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x55f5da2dff80 <line:107:5, col:63> col:23 used compare 'int (const String &, const String &)' static inline
| |-ParmVarDecl 0x55f5da2dfe28 <col:31, col:45> col:45 a 'const String &'
| `-ParmVarDecl 0x55f5da2dfea0 <col:48, col:62> col:62 b 'const String &'
|-CXXMethodDecl 0x55f5da2e0110 <line:108:5, col:41> col:16 used compare 'int (const String &) const' inline
| `-ParmVarDecl 0x55f5da2e0040 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x55f5da2e0330 <line:109:5, col:41> col:9 used compare 'int (const char *, int) const'
| |-ParmVarDecl 0x55f5da2e01d0 <col:17, col:29> col:29 s 'const char *'
| `-ParmVarDecl 0x55f5da2e0250 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x55f5da2e0480 <line:110:5, col:46> col:17 starts_with 'bool (const String &) const' inline
| `-ParmVarDecl 0x55f5da2e03f0 <col:29, col:43> col:43 x 'const String &'
|-CXXMethodDecl 0x55f5da2e0658 <line:111:5, col:46> col:10 used starts_with 'bool (const char *, int) const'
| |-ParmVarDecl 0x55f5da2e0540 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x55f5da2e05c0 <col:37, col:41> col:41 len 'int'
|-CXXMethodDecl 0x55f5da2e07a8 <line:112:5, col:44> col:10 glob_match 'bool (const String &) const'
| `-ParmVarDecl 0x55f5da2e0718 <col:21, col:35> col:35 pattern 'const String &'
|-CXXMethodDecl 0x55f5da2e09c0 <line:125:5, col:42> col:9 find_left 'int (char, int) const'
| |-ParmVarDecl 0x55f5da2e0860 <col:19, col:24> col:24 c 'char'
| `-ParmVarDecl 0x55f5da2e08e0 <col:27, col:39> col:31 start 'int' cinit
|   `-IntegerLiteral 0x55f5da2e9d40 <col:39> 'int' 0
|-CXXMethodDecl 0x55f5da2e0be0 <line:126:5, col:51> col:9 find_left 'int (const String &, int) const'
| |-ParmVarDecl 0x55f5da2e0a80 <col:19, col:33> col:33 x 'const String &'
| `-ParmVarDecl 0x55f5da2e0b00 <col:36, col:48> col:40 start 'int' cinit
|   `-IntegerLiteral 0x55f5da2e9d60 <col:48> 'int' 0
|-CXXMethodDecl 0x55f5da2e0dc0 <line:127:5, col:52> col:9 find_right 'int (char, int) const'
| |-ParmVarDecl 0x55f5da2e0ca0 <col:20, col:25> col:25 c 'char'
| `-ParmVarDecl 0x55f5da2e0d20 <col:28, col:40> col:32 start 'int' cinit
|   `-IntegerLiteral 0x55f5da2e9d80 <col:40> 'int' 2147483647
|-CXXMethodDecl 0x55f5da2e0e90 <line:129:5, col:20> col:12 lower 'String () const'
|-CXXMethodDecl 0x55f5da2e0f50 <line:130:5, col:20> col:12 upper 'String () const'
|-CXXMethodDecl 0x55f5da2e1010 <line:131:5, col:24> col:12 printable 'String () const'
|-CXXMethodDecl 0x55f5da2e10d0 <line:132:5, col:25> col:12 quoted_hex 'String () const'
|-CXXMethodDecl 0x55f5da2e1190 <line:133:5, col:26> col:12 encode_json 'String () const'
|-CXXMethodDecl 0x55f5da2e1338 <line:135:5, col:45> col:20 used operator= 'String &(const String &)' inline
| `-ParmVarDecl 0x55f5da2e1240 <col:30, col:44> col:44 x 'const String &'
|-CXXMethodDecl 0x55f5da2e14b8 <line:137:5, col:40> col:20 used operator= 'String &(String &&)' inline
| `-ParmVarDecl 0x55f5da2e13f0 <col:30, col:39> col:39 x 'String &&'
|-CXXMethodDecl 0x55f5da2e1690 <line:139:5, col:46> col:20 operator= 'String &(const char *)' inline
| `-ParmVarDecl 0x55f5da2e1578 <col:30, col:42> col:42 cstr 'const char *'
|-CXXMethodDecl 0x55f5da2e1808 <line:141:5, col:31> col:17 swap 'void (String &)' inline
| `-ParmVarDecl 0x55f5da2e1748 <col:22, col:30> col:30 x 'String &'
|-CXXMethodDecl 0x55f5da2e1950 <line:143:5, col:39> col:17 append 'void (const String &)' inline
| `-ParmVarDecl 0x55f5da2e18c0 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x55f5da2e1aa0 <line:144:5, col:40> col:17 used append 'void (const char *)' inline
| `-ParmVarDecl 0x55f5da2e1a10 <col:24, col:36> col:36 cstr 'const char *'
|-CXXMethodDecl 0x55f5da2e1c78 <line:145:5, col:46> col:17 used append 'void (const char *, int)' inline
| |-ParmVarDecl 0x55f5da2e1b60 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x55f5da2e1be0 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x55f5da2e1e58 <line:146:5, col:59> col:17 append 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x55f5da2e1d40 <col:24, col:36> col:36 first 'const char *'
| `-ParmVarDecl 0x55f5da2e1dc0 <col:43, col:55> col:55 last 'const char *'
|-CXXMethodDecl 0x55f5da2e1fa8 <line:147:5, col:30> col:17 append 'void (char)' inline
| `-ParmVarDecl 0x55f5da2e1f18 <col:24, col:29> col:29 c 'char'
|-CXXMethodDecl 0x55f5da2e21b8 <line:148:5, col:36> col:10 append_fill 'void (int, int)'
| |-ParmVarDecl 0x55f5da2e2068 <col:22, col:26> col:26 c 'int'
| `-ParmVarDecl 0x55f5da2e20e8 <col:29, col:33> col:33 len 'int'
|-CXXMethodDecl 0x55f5da2e2318 <line:149:5, col:39> col:11 used append_uninitialized 'char *(int)'
| `-ParmVarDecl 0x55f5da2e2280 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x55f5da2e2470 <line:150:5, col:68> col:18 append_garbage 'char *(int)' inline
| |-ParmVarDecl 0x55f5da2e23d8 <col:33, col:37> col:37 len 'int'
| `-DeprecatedAttr 0x55f5da2e2518 <col:57> "" ""
|-CXXMethodDecl 0x55f5da2e2628 <line:152:5, col:46> col:20 used operator+= 'String &(const String &)' inline
| `-ParmVarDecl 0x55f5da2e2598 <col:31, col:45> col:45 x 'const String &'
|-CXXMethodDecl 0x55f5da2e2778 <line:153:5, col:47> col:20 operator+= 'String &(const char *)' inline
| `-ParmVarDecl 0x55f5da2e26e8 <col:31, col:43> col:43 cstr 'const char *'
|-CXXMethodDecl 0x55f5da2e28f8 <line:154:5, col:37> col:20 operator+= 'String &(char)' inline
| `-ParmVarDecl 0x55f5da2e2830 <col:31, col:36> col:36 c 'char'
|-CXXMethodDecl 0x55f5da2e29c0 <line:160:5, col:29> col:17 is_shared 'bool () const' inline
|-CXXMethodDecl 0x55f5da2e2a80 <line:161:5, col:29> col:17 is_stable 'bool () const' inline
|-CXXMethodDecl 0x55f5da2e2b40 <line:163:5, col:60> col:19 unique 'String () const' inline
| `-DeprecatedAttr 0x55f5da2e2be0 <col:49> "" ""
|-CXXMethodDecl 0x55f5da2e2c70 <line:164:5, col:30> col:19 used unshared 'String () const' inline
|-CXXMethodDecl 0x55f5da2e2d30 <line:165:5, col:29> col:19 compact 'String () const' inline
|-CXXMethodDecl 0x55f5da2e2e20 <line:167:5, col:24> col:11 mutable_data 'char *()'
|-CXXMethodDecl 0x55f5da2e2ee8 <line:168:5, col:25> col:11 mutable_c_str 'char *()'
|-CXXMethodDecl 0x55f5da2e2fa8 <line:170:5, col:52> col:33 make_out_of_memory 'const String &()' static inline
|-CXXMethodDecl 0x55f5da2e3068 <line:171:5, col:33> col:17 out_of_memory 'bool () const' inline
|-CXXMethodDecl 0x55f5da2e3160 <line:172:5, col:50> col:31 out_of_memory_data 'const char *()' static inline
|-CXXMethodDecl 0x55f5da2e3228 <line:173:5, col:44> col:23 out_of_memory_length 'int ()' static inline
|-CXXMethodDecl 0x55f5da2e32f0 <line:174:5, col:42> col:31 used empty_data 'const char *()' static inline
|-CXXMethodDecl 0x55f5da2e34c8 <line:180:5, col:81> col:31 skip_utf8_char 'const char *(const char *, const char *)' static inline
| |-ParmVarDecl 0x55f5da2e33a8 <col:46, col:58> col:58 first 'const char *'
| `-ParmVarDecl 0x55f5da2e3428 <col:65, col:77> col:77 last 'const char *'
|-CXXMethodDecl 0x55f5da2e36f0 <line:181:5, line:182:38> line:181:33 used skip_utf8_char 'const unsigned char *(const unsigned char *, const unsigned char *)' static
| |-ParmVarDecl 0x55f5da2e3590 <col:48, col:69> col:69 first 'const unsigned char *'
| `-ParmVarDecl 0x55f5da2e3610 <line:182:13, col:34> col:34 last 'const unsigned char *'
|-VarDecl 0x55f5da2e3800 <line:184:5, col:35> col:23 used bool_data 'const char [11]' static
|-AccessSpecDecl 0x55f5da2e3868 <line:186:3, col:10> col:3 private
|-CXXRecordDecl 0x55f5da2e3890 <line:189:5, line:198:5> line:189:12 referenced struct memo_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55f5da2e39a8 <col:5, col:12> col:12 implicit struct memo_t
| |-FieldDecl 0x55f5da2e3a48 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
| |-FieldDecl 0x55f5da2e3aa8 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
| |-FieldDecl 0x55f5da2e3b08 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
| `-FieldDecl 0x55f5da2e3bb8 <line:197:2, col:18> col:7 real_data 'char [8]'
|-EnumDecl 0x55f5da2e3c20 <line:200:5, line:202:5> line:200:5
| `-EnumConstantDecl 0x55f5da2e3e58 <line:201:2, col:32> col:2 referenced MEMO_SPACE 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)'
|   `-ImplicitCastExpr 0x55f5da2e3ea8 <col:15, col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55f5da2e3e38 <col:15, col:32> 'unsigned long' Int: 12
|       `-BinaryOperator 0x55f5da2e3d48 <col:15, col:32> 'unsigned long' '-'
|         |-UnaryExprOrTypeTraitExpr 0x55f5da2e3cf0 <col:15, col:28> 'unsigned long' sizeof 'String::memo_t'
|         `-ImplicitCastExpr 0x55f5da2e3d30 <col:32> 'unsigned long' <IntegralCast>
|           `-IntegerLiteral 0x55f5da2e3d10 <col:32> 'int' 8
|-CXXRecordDecl 0x55f5da2e3ec0 <line:204:5, line:208:5> line:204:12 referenced struct rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55f5da2e3fd8 <col:5, col:12> col:12 implicit struct rep_t
| |-FieldDecl 0x55f5da2e4080 <line:205:2, col:14> col:14 referenced data 'const char *'
| |-FieldDecl 0x55f5da2e40e8 <line:206:2, col:6> col:6 referenced length 'int'
| |-FieldDecl 0x55f5da2e4178 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
| |-CXXConstructorDecl 0x55f5da2ea210 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55f5da2ea648 <col:12>
| |-CXXConstructorDecl 0x55f5da2ea318 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55f5da2ea428 <col:12> col:12 used 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x55f5da2e4080 'data' 'const char *'
| | | `-ImplicitCastExpr 0x55f5da2ecbd0 <col:12> 'const char *' <LValueToRValue>
| | |   `-MemberExpr 0x55f5da2ecba0 <col:12> 'const char *const' lvalue .data 0x55f5da2e4080
| | |     `-DeclRefExpr 0x55f5da2ecb80 <col:12> 'const String::rep_t' lvalue ParmVar 0x55f5da2ea428 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x55f5da2e40e8 'length' 'int'
| | | `-ImplicitCastExpr 0x55f5da2ecc60 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x55f5da2ecc30 <col:12> 'const int' lvalue .length 0x55f5da2e40e8
| | |     `-DeclRefExpr 0x55f5da2ecc10 <col:12> 'const String::rep_t' lvalue ParmVar 0x55f5da2ea428 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x55f5da2e4178 'memo' 'String::memo_t *'
| | | `-ImplicitCastExpr 0x55f5da2eccf0 <col:12> 'String::memo_t *' <LValueToRValue>
| | |   `-MemberExpr 0x55f5da2eccc0 <col:12> 'String::memo_t *const' lvalue .memo 0x55f5da2e4178
| | |     `-DeclRefExpr 0x55f5da2ecca0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55f5da2ea428 '' 'const String::rep_t &'
| | `-CompoundStmt 0x55f5da2ecd48 <col:12>
| |-CXXConstructorDecl 0x55f5da2ea4c8 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55f5da2ea4c8
| | `-ParmVarDecl 0x55f5da2ea5d8 <col:12> col:12 'String::rep_t &&'
| |-CXXDestructorDecl 0x55f5da2efb30 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x55f5da2fb548 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55f5da2fb658 <col:12> col:12 used 'const String::rep_t &'
| | `-CompoundStmt 0x55f5da2fbb70 <col:12>
| |   |-BinaryOperator 0x55f5da2fb988 <col:12> 'const char *' lvalue '='
| |   | |-MemberExpr 0x55f5da2fb940 <col:12> 'const char *' lvalue ->data 0x55f5da2e4080
| |   | | `-CXXThisExpr 0x55f5da2fb930 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x55f5da2fb970 <col:12> 'const char *' <LValueToRValue>
| |   |   `-MemberExpr 0x55f5da2fb900 <col:12> 'const char *const' lvalue .data 0x55f5da2e4080
| |   |     `-DeclRefExpr 0x55f5da2fb8e0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55f5da2fb658 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x55f5da2fba50 <col:12> 'int' lvalue '='
| |   | |-MemberExpr 0x55f5da2fba08 <col:12> 'int' lvalue ->length 0x55f5da2e40e8
| |   | | `-CXXThisExpr 0x55f5da2fb9f8 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x55f5da2fba38 <col:12> 'int' <LValueToRValue>
| |   |   `-MemberExpr 0x55f5da2fb9c8 <col:12> 'const int' lvalue .length 0x55f5da2e40e8
| |   |     `-DeclRefExpr 0x55f5da2fb9a8 <col:12> 'const String::rep_t' lvalue ParmVar 0x55f5da2fb658 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x55f5da2fbb18 <col:12> 'String::memo_t *' lvalue '='
| |   | |-MemberExpr 0x55f5da2fbad0 <col:12> 'String::memo_t *' lvalue ->memo 0x55f5da2e4178
| |   | | `-CXXThisExpr 0x55f5da2fbac0 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x55f5da2fbb00 <col:12> 'String::memo_t *' <LValueToRValue>
| |   |   `-MemberExpr 0x55f5da2fba90 <col:12> 'String::memo_t *const' lvalue .memo 0x55f5da2e4178
| |   |     `-DeclRefExpr 0x55f5da2fba70 <col:12> 'const String::rep_t' lvalue ParmVar 0x55f5da2fb658 '' 'const String::rep_t &'
| |   `-ReturnStmt 0x55f5da2fbb60 <col:12>
| |     `-UnaryOperator 0x55f5da2fbb48 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x55f5da2fbb38 <col:12> 'String::rep_t *' this
| `-CXXMethodDecl 0x55f5da2fb6c8 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55f5da2fb6c8
|   `-ParmVarDecl 0x55f5da2fb7d8 <col:12> col:12 'String::rep_t &&'
|-FieldDecl 0x55f5da2e41f0 <line:211:5, col:19> col:19 referenced _r 'String::rep_t' mutable
|-CXXMethodDecl 0x55f5da2e4438 <line:256:5, line:261:5> line:256:17 used assign_memo 'void (const char *, int, String::memo_t *) const' inline
| |-ParmVarDecl 0x55f5da2e4258 <col:29, col:41> col:41 used data 'const char *'
| |-ParmVarDecl 0x55f5da2e42d8 <col:47, col:51> col:51 used length 'int'
| |-ParmVarDecl 0x55f5da2e4350 <col:59, col:67> col:67 used memo 'String::memo_t *'
| `-CompoundStmt 0x55f5da2ea1d0 <col:79, line:261:5>
|   |-BinaryOperator 0x55f5da2e9e48 <line:257:2, col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x55f5da2e9de0 <col:2, col:5> 'const char *' lvalue .data 0x55f5da2e4080
|   | | `-MemberExpr 0x55f5da2e9db0 <col:2> 'String::rep_t' lvalue ->_r 0x55f5da2e41f0
|   | |   `-CXXThisExpr 0x55f5da2e9da0 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x55f5da2e9e30 <col:12> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x55f5da2e9e10 <col:12> 'const char *' lvalue ParmVar 0x55f5da2e4258 'data' 'const char *'
|   |-BinaryOperator 0x55f5da2e9f10 <line:258:2, col:14> 'int' lvalue '='
|   | |-MemberExpr 0x55f5da2e9ea8 <col:2, col:5> 'int' lvalue .length 0x55f5da2e40e8
|   | | `-MemberExpr 0x55f5da2e9e78 <col:2> 'String::rep_t' lvalue ->_r 0x55f5da2e41f0
|   | |   `-CXXThisExpr 0x55f5da2e9e68 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x55f5da2e9ef8 <col:14> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55f5da2e9ed8 <col:14> 'int' lvalue ParmVar 0x55f5da2e42d8 'length' 'int'
|   `-IfStmt 0x55f5da2ea1b8 <line:259:2, line:260:41>
|     |-ImplicitCastExpr 0x55f5da2ea030 <line:259:6, col:21> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x55f5da2ea018 <col:6, col:21> 'String::memo_t *' <LValueToRValue>
|     |   `-ParenExpr 0x55f5da2e9ff8 <col:6, col:21> 'String::memo_t *' lvalue
|     |     `-BinaryOperator 0x55f5da2e9fd8 <col:7, col:17> 'String::memo_t *' lvalue '='
|     |       |-MemberExpr 0x55f5da2e9f70 <col:7, col:10> 'String::memo_t *' lvalue .memo 0x55f5da2e4178
|     |       | `-MemberExpr 0x55f5da2e9f40 <col:7> 'String::rep_t' lvalue ->_r 0x55f5da2e41f0
|     |       |   `-CXXThisExpr 0x55f5da2e9f30 <col:7> 'const String *' implicit this
|     |       `-ImplicitCastExpr 0x55f5da2e9fc0 <col:17> 'String::memo_t *' <LValueToRValue>
|     |         `-DeclRefExpr 0x55f5da2e9fa0 <col:17> 'String::memo_t *' lvalue ParmVar 0x55f5da2e4350 'memo' 'String::memo_t *'
|     `-CallExpr 0x55f5da2ea190 <line:260:6, col:41> 'void'
|       |-ImplicitCastExpr 0x55f5da2ea178 <col:6, col:23> 'void (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55f5da2ea080 <col:6, col:23> 'void (volatile uint32_t &)' lvalue CXXMethod 0x55f5da2d2e68 'inc' 'void (volatile uint32_t &)'
|       `-MemberExpr 0x55f5da2ea0e8 <col:27, col:33> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x55f5da2e3a48
|         `-ImplicitCastExpr 0x55f5da2ea0d0 <col:27> 'String::memo_t *' <LValueToRValue>
|           `-DeclRefExpr 0x55f5da2ea0b0 <col:27> 'String::memo_t *' lvalue ParmVar 0x55f5da2e4350 'memo' 'String::memo_t *'
|-CXXConstructorDecl 0x55f5da2e46e8 <line:263:5, line:265:5> line:263:12 used String 'void (const char *, int, String::memo_t *)' inline
| |-ParmVarDecl 0x55f5da2e4508 <col:19, col:31> col:31 used data 'const char *'
| |-ParmVarDecl 0x55f5da2e4588 <col:37, col:41> col:41 used length 'int'
| |-ParmVarDecl 0x55f5da2e4600 <col:49, col:57> col:57 used memo 'String::memo_t *'
| |-CXXCtorInitializer Field 0x55f5da2e41f0 '_r' 'String::rep_t'
| | `-CXXConstructExpr 0x55f5da2ea658 <col:12> 'String::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55f5da2ea7e8 <col:63, line:265:5>
|   `-CXXMemberCallExpr 0x55f5da2ea750 <line:264:2, col:32> 'void'
|     |-MemberExpr 0x55f5da2ea6c0 <col:2> '<bound member function type>' ->assign_memo 0x55f5da2e4438
|     | `-ImplicitCastExpr 0x55f5da2ea788 <col:2> 'const String *' <NoOp>
|     |   `-CXXThisExpr 0x55f5da2ea6b0 <col:2> 'String *' implicit this
|     |-ImplicitCastExpr 0x55f5da2ea7a0 <col:14> 'const char *' <LValueToRValue>
|     | `-DeclRefExpr 0x55f5da2ea6f0 <col:14> 'const char *' lvalue ParmVar 0x55f5da2e4508 'data' 'const char *'
|     |-ImplicitCastExpr 0x55f5da2ea7b8 <col:20> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x55f5da2ea710 <col:20> 'int' lvalue ParmVar 0x55f5da2e4588 'length' 'int'
|     `-ImplicitCastExpr 0x55f5da2ea7d0 <col:28> 'String::memo_t *' <LValueToRValue>
|       `-DeclRefExpr 0x55f5da2ea730 <col:28> 'String::memo_t *' lvalue ParmVar 0x55f5da2e4600 'memo' 'String::memo_t *'
|-CXXMethodDecl 0x55f5da2e4878 <line:267:5, line:269:5> line:267:17 used assign 'void (const String &) const' inline
| |-ParmVarDecl 0x55f5da2e47b8 <col:24, col:38> col:38 used x 'const String &'
| `-CompoundStmt 0x55f5da2eaa40 <col:47, line:269:5>
|   `-CXXMemberCallExpr 0x55f5da2ea9c0 <line:268:2, col:47> 'void'
|     |-MemberExpr 0x55f5da2ea810 <col:2> '<bound member function type>' ->assign_memo 0x55f5da2e4438
|     | `-CXXThisExpr 0x55f5da2ea800 <col:2> 'const String *' implicit this
|     |-ImplicitCastExpr 0x55f5da2ea9f8 <col:14, col:19> 'const char *' <LValueToRValue>
|     | `-MemberExpr 0x55f5da2ea890 <col:14, col:19> 'const char *' lvalue .data 0x55f5da2e4080
|     |   `-MemberExpr 0x55f5da2ea860 <col:14, col:16> 'String::rep_t' lvalue ._r 0x55f5da2e41f0
|     |     `-DeclRefExpr 0x55f5da2ea840 <col:14> 'const String' lvalue ParmVar 0x55f5da2e47b8 'x' 'const String &'
|     |-ImplicitCastExpr 0x55f5da2eaa10 <col:25, col:30> 'int' <LValueToRValue>
|     | `-MemberExpr 0x55f5da2ea910 <col:25, col:30> 'int' lvalue .length 0x55f5da2e40e8
|     |   `-MemberExpr 0x55f5da2ea8e0 <col:25, col:27> 'String::rep_t' lvalue ._r 0x55f5da2e41f0
|     |     `-DeclRefExpr 0x55f5da2ea8c0 <col:25> 'const String' lvalue ParmVar 0x55f5da2e47b8 'x' 'const String &'
|     `-ImplicitCastExpr 0x55f5da2eaa28 <col:38, col:43> 'String::memo_t *' <LValueToRValue>
|       `-MemberExpr 0x55f5da2ea990 <col:38, col:43> 'String::memo_t *' lvalue .memo 0x55f5da2e4178
|         `-MemberExpr 0x55f5da2ea960 <col:38, col:40> 'String::rep_t' lvalue ._r 0x55f5da2e41f0
|           `-DeclRefExpr 0x55f5da2ea940 <col:38> 'const String' lvalue ParmVar 0x55f5da2e47b8 'x' 'const String &'
|-CXXMethodDecl 0x55f5da2e4940 <line:271:5, line:278:5> line:271:17 used deref 'void () const' inline
| `-CompoundStmt 0x55f5da2eb400 <col:31, line:278:5>
|   `-IfStmt 0x55f5da2eb3e8 <line:272:2, line:277:2>
|     |-ImplicitCastExpr 0x55f5da2eaae0 <line:272:6, col:9> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x55f5da2eaac8 <col:6, col:9> 'String::memo_t *' <LValueToRValue>
|     |   `-MemberExpr 0x55f5da2eaa98 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x55f5da2e4178
|     |     `-MemberExpr 0x55f5da2eaa68 <col:6> 'String::rep_t' lvalue ->_r 0x55f5da2e41f0
|     |       `-CXXThisExpr 0x55f5da2eaa58 <col:6> 'const String *' implicit this
|     `-CompoundStmt 0x55f5da2eb3c0 <col:15, line:277:2>
|       |-ParenExpr 0x55f5da2eaf90 <line:273:6, col:166> 'void'
|       | `-ConditionalOperator 0x55f5da2eaf60 <col:7, col:165> 'void'
|       |   |-CXXStaticCastExpr 0x55f5da2eabf0 <col:7, col:44> 'bool' static_cast<_Bool> <NoOp>
|       |   | `-ImplicitCastExpr 0x55f5da2eabd8 <col:27, col:36> 'bool' <IntegralToBoolean> part_of_explicit_cast
|       |   |   `-ImplicitCastExpr 0x55f5da2eabc0 <col:27, col:36> 'uint32_t':'unsigned int' <LValueToRValue> part_of_explicit_cast
|       |   |     `-MemberExpr 0x55f5da2eab80 <col:27, col:36> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x55f5da2e3a48
|       |   |       `-ImplicitCastExpr 0x55f5da2eab68 <col:27, col:30> 'String::memo_t *' <LValueToRValue>
|       |   |         `-MemberExpr 0x55f5da2eab38 <col:27, col:30> 'String::memo_t *' lvalue .memo 0x55f5da2e4178
|       |   |           `-MemberExpr 0x55f5da2eab08 <col:27> 'String::rep_t' lvalue ->_r 0x55f5da2e41f0
|       |   |             `-CXXThisExpr 0x55f5da2eaaf8 <col:27> 'const String *' implicit this
|       |   |-CXXFunctionalCastExpr 0x55f5da2eac50 <col:48, col:55> 'void' functional cast to void <ToVoid>
|       |   | `-IntegerLiteral 0x55f5da2eac30 <col:54> 'int' 0
|       |   `-CallExpr 0x55f5da2eaec0 <col:59, col:165> 'void'
|       |     |-ImplicitCastExpr 0x55f5da2eaea8 <col:59> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x55f5da2eae28 <col:59> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55f5da04a0d0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|       |     |-ImplicitCastExpr 0x55f5da2eaf00 <col:74> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x55f5da2ead38 <col:74> 'const char [18]' lvalue "_r.memo->refcount"
|       |     |-ImplicitCastExpr 0x55f5da2eaf18 <col:95> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x55f5da2ead68 <col:95> 'const char [29]' lvalue "../dummy_inc/click/string.hh"
|       |     |-ImplicitCastExpr 0x55f5da2eaf30 <col:127> 'unsigned int' <IntegralCast>
|       |     | `-IntegerLiteral 0x55f5da2eada0 <col:127> 'int' 273
|       |     `-ImplicitCastExpr 0x55f5da2eaf48 <col:132, col:146> 'const char *' <ArrayToPointerDecay>
|       |       `-UnaryOperator 0x55f5da2eae10 <col:132, col:146> 'const char [27]' lvalue prefix '__extension__' cannot overflow
|       |         `-PredefinedExpr 0x55f5da2eadf8 <col:146> 'const char [27]' lvalue __PRETTY_FUNCTION__
|       |           `-StringLiteral 0x55f5da2eadc0 <col:146> 'const char [27]' lvalue "void String::deref() const"
|       |-IfStmt 0x55f5da2eb2e0 <line:274:6, line:275:22>
|       | |-CallExpr 0x55f5da2eb1a0 <line:274:10, col:57> 'bool'
|       | | |-ImplicitCastExpr 0x55f5da2eb188 <col:10, col:27> 'bool (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | | | `-DeclRefExpr 0x55f5da2eb100 <col:10, col:27> 'bool (volatile uint32_t &)' lvalue CXXMethod 0x55f5da2d42b0 'dec_and_test' 'bool (volatile uint32_t &)'
|       | | `-MemberExpr 0x55f5da2eb0d0 <col:40, col:49> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x55f5da2e3a48
|       | |   `-ImplicitCastExpr 0x55f5da2eb0b8 <col:40, col:43> 'String::memo_t *' <LValueToRValue>
|       | |     `-MemberExpr 0x55f5da2eb088 <col:40, col:43> 'String::memo_t *' lvalue .memo 0x55f5da2e4178
|       | |       `-MemberExpr 0x55f5da2eb058 <col:40> 'String::rep_t' lvalue ->_r 0x55f5da2e41f0
|       | |         `-CXXThisExpr 0x55f5da2eb048 <col:40> 'const String *' implicit this
|       | `-CallExpr 0x55f5da2eb2a0 <line:275:3, col:22> 'void'
|       |   |-ImplicitCastExpr 0x55f5da2eb288 <col:3> 'void (*)(String::memo_t *)' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x55f5da2eb1c8 <col:3> 'void (String::memo_t *)' lvalue CXXMethod 0x55f5da2e9120 'delete_memo' 'void (String::memo_t *)'
|       |   `-ImplicitCastExpr 0x55f5da2eb2c8 <col:15, col:18> 'String::memo_t *' <LValueToRValue>
|       |     `-MemberExpr 0x55f5da2eb228 <col:15, col:18> 'String::memo_t *' lvalue .memo 0x55f5da2e4178
|       |       `-MemberExpr 0x55f5da2eb1f8 <col:15> 'String::rep_t' lvalue ->_r 0x55f5da2e41f0
|       |         `-CXXThisExpr 0x55f5da2eb1e8 <col:15> 'const String *' implicit this
|       `-BinaryOperator 0x55f5da2eb3a0 <line:276:6, col:16> 'String::memo_t *' lvalue '='
|         |-MemberExpr 0x55f5da2eb338 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x55f5da2e4178
|         | `-MemberExpr 0x55f5da2eb308 <col:6> 'String::rep_t' lvalue ->_r 0x55f5da2e41f0
|         |   `-CXXThisExpr 0x55f5da2eb2f8 <col:6> 'const String *' implicit this
|         `-ImplicitCastExpr 0x55f5da2eb388 <col:16> 'String::memo_t *' <NullToPointer>
|           `-IntegerLiteral 0x55f5da2eb368 <col:16> 'int' 0
|-CXXMethodDecl 0x55f5da2e4bd8 <line:280:5, col:56> col:10 used assign 'void (const char *, int, bool)'
| |-ParmVarDecl 0x55f5da2e49f8 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x55f5da2e4a78 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x55f5da2e4af0 <col:41, col:46> col:46 need_deref 'bool'
|-CXXMethodDecl 0x55f5da2e4cb0 <line:281:5, col:31> col:10 assign_out_of_memory 'void ()'
|-CXXMethodDecl 0x55f5da2e4f00 <line:282:5, col:53> col:10 used append 'void (const char *, int, String::memo_t *)'
| |-ParmVarDecl 0x55f5da2e4d68 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x55f5da2e4de8 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x55f5da2e4e60 <col:41, col:49> col:49 memo 'String::memo_t *'
|-CXXMethodDecl 0x55f5da2e50e8 <line:283:5, col:58> col:19 used hard_make_stable 'String (const char *, int)' static
| |-ParmVarDecl 0x55f5da2e4fd0 <col:36, col:48> col:48 s 'const char *'
| `-ParmVarDecl 0x55f5da2e5050 <col:51, col:55> col:55 len 'int'
|-CXXMethodDecl 0x55f5da2e51e8 <line:284:5, line:286:5> line:284:27 used absent_memo 'String::memo_t *()' static inline
| `-CompoundStmt 0x55f5da2eb4d8 <col:41, line:286:5>
|   `-ReturnStmt 0x55f5da2eb4c8 <line:285:2, col:48>
|     `-CXXReinterpretCastExpr 0x55f5da2eb498 <col:9, col:48> 'String::memo_t *' reinterpret_cast<struct String::memo_t *> <IntegralToPointer>
|       `-CXXFunctionalCastExpr 0x55f5da2eb460 <col:36, col:47> 'uintptr_t':'unsigned long' functional cast to uintptr_t <NoOp>
|         `-ImplicitCastExpr 0x55f5da2eb448 <col:46> 'uintptr_t':'unsigned long' <IntegralCast> part_of_explicit_cast
|           `-IntegerLiteral 0x55f5da2eb428 <col:46> 'int' 1
|-CXXMethodDecl 0x55f5da2e5488 <line:287:5, col:68> col:20 create_memo 'String::memo_t *(char *, int, int)' static
| |-ParmVarDecl 0x55f5da2e52a0 <col:32, col:38> col:38 space 'char *'
| |-ParmVarDecl 0x55f5da2e5320 <col:45, col:49> col:49 dirty 'int'
| `-ParmVarDecl 0x55f5da2e53a0 <col:56, col:60> col:60 capacity 'int'
|-CXXMethodDecl 0x55f5da2e9120 <line:288:5, col:41> col:17 used delete_memo 'void (String::memo_t *)' static
| `-ParmVarDecl 0x55f5da2e5550 <col:29, col:37> col:37 memo 'String::memo_t *'
|-CXXMethodDecl 0x55f5da2e91f0 <line:289:5, col:30> col:17 hard_c_str 'const char *() const'
|-CXXMethodDecl 0x55f5da2e93c0 <line:290:5, col:46> col:10 used hard_equals 'bool (const char *, int) const'
| |-ParmVarDecl 0x55f5da2e92a8 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x55f5da2e9328 <col:37, col:41> col:41 len 'int'
|-VarDecl 0x55f5da2e9480 <line:292:5, col:23> col:23 used null_data 'const char' static
|-VarDecl 0x55f5da2e9548 <line:293:5, col:34> col:23 used oom_data 'const char [15]' static
|-VarDecl 0x55f5da2e9648 <line:294:5, col:34> col:23 int_data 'const char [20]' static
|-VarDecl 0x55f5da2e96c0 <line:295:5, col:24> col:24 used null_string_rep 'const String::rep_t' static
|-VarDecl 0x55f5da2e9738 <line:296:5, col:24> col:24 used oom_string_rep 'const String::rep_t' static
|-EnumDecl 0x55f5da2e97a0 <line:297:5, col:25> col:5
| `-EnumConstantDecl 0x55f5da2e98a0 <col:12, col:22> col:12 referenced oom_len 'String::(anonymous enum at ../dummy_inc/click/string.hh:297:5)'
|   `-ImplicitCastExpr 0x55f5da2e98f0 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55f5da2e9880 <col:22> 'int' Int: 14
|       `-IntegerLiteral 0x55f5da2e9860 <col:22> 'int' 14
|-CXXMethodDecl 0x55f5da2e9b08 <line:299:5, col:46> col:19 make_claim 'String (char *, int, int)' static
| |-ParmVarDecl 0x55f5da2e9920 <col:30, col:35> col:36 'char *'
| |-ParmVarDecl 0x55f5da2e99a0 <col:38> col:41 'int'
| `-ParmVarDecl 0x55f5da2e9a20 <col:43> col:46 'int'
|-FriendDecl 0x55f5da2e9c10 <line:301:5, col:19> col:12 'struct rep_t':'String::rep_t'
`-FriendDecl 0x55f5da2e9ca0 <line:302:5, col:18> col:12 'class StringAccum':'StringAccum'

Layout: <CGRecordLayout
  LLVMType:%class.String = type { %"struct.String::rep_t" }
  NonVirtualBaseLLVMType:%class.String = type { %"struct.String::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55f5da60bc80 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'typed_array_memory<String>'
|-CXXRecordDecl 0x55f5da60be58 prev 0x55f5da60bc80 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55f5da60bee8 <col:46, col:52> col:46 public
|-TypedefDecl 0x55f5da60bf10 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55f5d9fa93b0 'int'
|-TypedefDecl 0x55f5da60d870 <line:13:5, col:31> col:31 type 'typename typed_array_memory<String>::type':'String'
| `-ElaboratedType 0x55f5da60d820 'typename typed_array_memory<String>::type' sugar
|   `-TypedefType 0x55f5da60d800 'typed_array_memory<String>::type' sugar
|     |-Typedef 0x55f5da60c128 'type'
|     `-SubstTemplateTypeParmType 0x55f5da60c0f0 'String' sugar
|       |-TemplateTypeParmType 0x55f5da29e6a0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f5da29e650 'T'
|       `-RecordType 0x55f5da2dae90 'String'
|         `-CXXRecord 0x55f5da2dae00 'String'
|-TypedefDecl 0x55f5da60d928 <line:14:5, col:19> col:19 iterator 'vector_memory<typed_array_memory<String> >::type *'
| `-PointerType 0x55f5da60d8f0 'vector_memory<typed_array_memory<String> >::type *'
|   `-TypedefType 0x55f5da60d8d0 'vector_memory<typed_array_memory<String> >::type' sugar
|     |-Typedef 0x55f5da60d870 'type'
|     `-ElaboratedType 0x55f5da60d820 'typename typed_array_memory<String>::type' sugar
|       `-TypedefType 0x55f5da60d800 'typed_array_memory<String>::type' sugar
|         |-Typedef 0x55f5da60c128 'type'
|         `-SubstTemplateTypeParmType 0x55f5da60c0f0 'String' sugar
|           |-TemplateTypeParmType 0x55f5da29e6a0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55f5da29e650 'T'
|           `-RecordType 0x55f5da2dae90 'String'
|             `-CXXRecord 0x55f5da2dae00 'String'
|-CXXMethodDecl 0x55f5da60daa8 <line:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<typed_array_memory<String> >::type *) const' inline
| `-ParmVarDecl 0x55f5da60d9b8 <col:36, col:48> col:48 argp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXConstructorDecl 0x55f5da60db98 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55f5da60dc78 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x55f5da60dc78
|-CXXMethodDecl 0x55f5da60df48 <line:25:5, col:43> col:10 assign 'void (const vector_memory<typed_array_memory<String> > &)'
| `-ParmVarDecl 0x55f5da60de50 <col:17, col:42> col:42 x 'const vector_memory<typed_array_memory<String> > &'
|-CXXMethodDecl 0x55f5da60e188 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x55f5da60e000 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55f5da60e078 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55f5da60e358 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x55f5da60e248 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55f5da60e2c0 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55f5da60e4b8 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<typed_array_memory<String> >::iterator ()'
|-CXXMethodDecl 0x55f5da60e588 <line:31:5, line:33:5> line:31:14 end 'vector_memory<typed_array_memory<String> >::iterator ()'
|-CXXMethodDecl 0x55f5da60e7d8 <line:34:5, col:48> col:14 insert 'vector_memory<typed_array_memory<String> >::iterator (vector_memory<typed_array_memory<String> >::iterator, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x55f5da60e648 <col:21, col:30> col:30 it 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
| `-ParmVarDecl 0x55f5da60e6c0 <col:34, col:46> col:46 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55f5da60ea38 <line:35:5, col:42> col:14 erase 'vector_memory<typed_array_memory<String> >::iterator (vector_memory<typed_array_memory<String> >::iterator, vector_memory<typed_array_memory<String> >::iterator)'
| |-ParmVarDecl 0x55f5da60e8a8 <col:20, col:29> col:29 a 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
| `-ParmVarDecl 0x55f5da60e920 <col:32, col:41> col:41 b 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55f5da60ebf8 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<typed_array_memory<String> >::type *)' inline
| `-ParmVarDecl 0x55f5da60eb08 <col:27, col:39> col:39 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55f5da60edb8 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<typed_array_memory<String> >::type *)' inline
| `-ParmVarDecl 0x55f5da60ecc0 <col:37, col:43> col:43 vp 'vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55f5da60ee70 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55f5da60ef20 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55f5da60f158 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x55f5da60efd0 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55f5da60f048 <col:45, col:57> col:57 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55f5da60f3f8 <line:66:5, col:35> col:10 swap 'void (vector_memory<typed_array_memory<String> > &)'
| `-ParmVarDecl 0x55f5da60f300 <col:15, col:34> col:34 x 'vector_memory<typed_array_memory<String> > &'
|-FieldDecl 0x55f5da60f4c0 <line:68:5, col:11> col:11 l_ 'vector_memory<typed_array_memory<String> >::type *'
|-FieldDecl 0x55f5da60f510 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55f5da60f560 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.1 = type { %class.String*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.1 = type { %class.String*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55f5da512630 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'String'
|-CXXRecordDecl 0x55f5da60aa30 prev 0x55f5da512630 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55f5da60bbf0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<String>::type':'typed_array_memory<String>'
| `-ElaboratedType 0x55f5da60bba0 'typename array_memory<String>::type' sugar
|   `-TypedefType 0x55f5da60bb80 'conditional<false, sized_array_memory<24>, typed_array_memory<String> >::type' sugar
|     |-Typedef 0x55f5da60ba30 'type'
|     `-SubstTemplateTypeParmType 0x55f5da60b8c0 'typed_array_memory<String>' sugar
|       |-TemplateTypeParmType 0x55f5da274450 'F' dependent depth 0 index 1
|       | `-TemplateTypeParm 0x55f5da2743f8 'F'
|       `-RecordType 0x55f5da60b520 'typed_array_memory<String>'
|         `-ClassTemplateSpecialization 0x55f5da60b440 'typed_array_memory'
|-FieldDecl 0x55f5da60f5b0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<String>::array_memory_type>':'vector_memory<typed_array_memory<String> >' mutable
|-AccessSpecDecl 0x55f5da60f600 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55f5da60f638 <line:118:5, col:15> col:15 value_type 'String':'String'
| `-SubstTemplateTypeParmType 0x55f5da60aac0 'String' sugar
|   |-TemplateTypeParmType 0x55f5da2ab9c0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55f5da2ab968 'T'
|   `-RecordType 0x55f5da2dae90 'String'
|     `-CXXRecord 0x55f5da2dae00 'String'
|-TypedefDecl 0x55f5da60f6c8 <line:119:5, col:16> col:16 reference 'String &'
| `-LValueReferenceType 0x55f5da60f690 'String &'
|   `-SubstTemplateTypeParmType 0x55f5da60aac0 'String' sugar
|     |-TemplateTypeParmType 0x55f5da2ab9c0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55f5da2ab968 'T'
|     `-RecordType 0x55f5da2dae90 'String'
|       `-CXXRecord 0x55f5da2dae00 'String'
|-TypedefDecl 0x55f5da60f758 <line:120:5, col:22> col:22 const_reference 'const String &'
| `-LValueReferenceType 0x55f5da60f720 'const String &'
|   `-QualType 0x55f5da60aac1 'const String' const
|     `-SubstTemplateTypeParmType 0x55f5da60aac0 'String' sugar
|       |-TemplateTypeParmType 0x55f5da2ab9c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f5da2ab968 'T'
|       `-RecordType 0x55f5da2dae90 'String'
|         `-CXXRecord 0x55f5da2dae00 'String'
|-TypedefDecl 0x55f5da60f7e8 <line:121:5, col:16> col:16 pointer 'String *'
| `-PointerType 0x55f5da60f7b0 'String *'
|   `-SubstTemplateTypeParmType 0x55f5da60aac0 'String' sugar
|     |-TemplateTypeParmType 0x55f5da2ab9c0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55f5da2ab968 'T'
|     `-RecordType 0x55f5da2dae90 'String'
|       `-CXXRecord 0x55f5da2dae00 'String'
|-TypedefDecl 0x55f5da60f878 <line:122:5, col:22> col:22 const_pointer 'const String *'
| `-PointerType 0x55f5da60f840 'const String *'
|   `-QualType 0x55f5da60aac1 'const String' const
|     `-SubstTemplateTypeParmType 0x55f5da60aac0 'String' sugar
|       |-TemplateTypeParmType 0x55f5da2ab9c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f5da2ab968 'T'
|       `-RecordType 0x55f5da2dae90 'String'
|         `-CXXRecord 0x55f5da2dae00 'String'
|-TypedefDecl 0x55f5da6104d0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<String>::type':'const String &'
| `-ElaboratedType 0x55f5da610480 'typename fast_argument<String>::type' sugar
|   `-TypedefType 0x55f5da610460 'fast_argument<String, true>::type' sugar
|     |-Typedef 0x55f5da610398 'type'
|     `-LValueReferenceType 0x55f5da610360 'const String &'
|       `-QualType 0x55f5da610101 'const String' const
|         `-SubstTemplateTypeParmType 0x55f5da610100 'String' sugar
|           |-TemplateTypeParmType 0x55f5da27e3a0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55f5da27e348 'T'
|           `-RecordType 0x55f5da2dae90 'String'
|             `-CXXRecord 0x55f5da2dae00 'String'
|-TypedefDecl 0x55f5da610538 <line:126:5, col:22> col:22 const_access_type 'const String &'
| `-LValueReferenceType 0x55f5da60f720 'const String &'
|   `-QualType 0x55f5da60aac1 'const String' const
|     `-SubstTemplateTypeParmType 0x55f5da60aac0 'String' sugar
|       |-TemplateTypeParmType 0x55f5da2ab9c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f5da2ab968 'T'
|       `-RecordType 0x55f5da2dae90 'String'
|         `-CXXRecord 0x55f5da2dae00 'String'
|-TypedefDecl 0x55f5da610590 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55f5d9fa93b0 'int'
|-TypedefDecl 0x55f5da6105f8 <line:130:5, col:16> col:16 iterator 'String *'
| `-PointerType 0x55f5da60f7b0 'String *'
|   `-SubstTemplateTypeParmType 0x55f5da60aac0 'String' sugar
|     |-TemplateTypeParmType 0x55f5da2ab9c0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55f5da2ab968 'T'
|     `-RecordType 0x55f5da2dae90 'String'
|       `-CXXRecord 0x55f5da2dae00 'String'
|-TypedefDecl 0x55f5da610660 <line:131:5, col:22> col:22 const_iterator 'const String *'
| `-PointerType 0x55f5da60f840 'const String *'
|   `-QualType 0x55f5da60aac1 'const String' const
|     `-SubstTemplateTypeParmType 0x55f5da60aac0 'String' sugar
|       |-TemplateTypeParmType 0x55f5da2ab9c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f5da2ab968 'T'
|       `-RecordType 0x55f5da2dae90 'String'
|         `-CXXRecord 0x55f5da2dae00 'String'
|-EnumDecl 0x55f5da6106b8 <line:134:5> col:5
| `-EnumConstantDecl 0x55f5da6107b0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<String>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55f5da610790 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55f5da2ad048 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55f5da2ad020 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55f5da2ad000 <col:40> 'int' 1
|-CXXConstructorDecl 0x55f5da610838 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55f5da610ac8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x55f5da6108f0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55f5da610990 <col:41, col:61> col:61 v 'Vector<String>::value_argument_type':'const String &'
|-CXXConstructorDecl 0x55f5da610d58 <line:139:5, col:37> col:12 Vector 'void (const Vector<String> &)' inline
| `-ParmVarDecl 0x55f5da610c40 <col:19, col:36> col:36 x 'const Vector<String> &'
|-CXXConstructorDecl 0x55f5da611018 <line:141:5, col:32> col:12 Vector 'void (Vector<String> &&)' inline
| `-ParmVarDecl 0x55f5da610f00 <col:19, col:31> col:31 x 'Vector<String> &&'
|-CXXMethodDecl 0x55f5da611330 <line:144:5, col:51> col:23 operator= 'Vector<String> &(const Vector<String> &)' inline
| `-ParmVarDecl 0x55f5da611210 <col:33, col:50> col:50 x 'const Vector<String> &'
|-CXXMethodDecl 0x55f5da611640 <line:146:5, col:46> col:23 operator= 'Vector<String> &(Vector<String> &&)' inline
| `-ParmVarDecl 0x55f5da611520 <col:33, col:45> col:45 x 'Vector<String> &&'
|-CXXMethodDecl 0x55f5da611930 <line:148:5, col:70> col:23 assign 'Vector<String> &(Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x55f5da611778 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55f5da6117f0 <col:43, col:69> col:63 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x55f5da611a58 <line:150:5, col:55> col:49 begin 'Vector<String>::iterator ()'
| |-NoInlineAttr 0x55f5da611b08 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f5da611b60 <col:30> Inherited
|-CXXMethodDecl 0x55f5da611ba8 <line:151:5, col:53> col:49 end 'Vector<String>::iterator ()'
| |-NoInlineAttr 0x55f5da611c58 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f5da611cb0 <col:30> Inherited
|-CXXMethodDecl 0x55f5da611d78 <line:152:5, col:63> col:55 used begin 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x55f5da611e28 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f5da611e80 <col:30> Inherited
|-CXXMethodDecl 0x55f5da611ec8 <line:153:5, col:61> col:55 used end 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x55f5da611f78 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f5da611fd0 <col:30> Inherited
|-CXXMethodDecl 0x55f5da612018 <line:154:5, col:64> col:55 cbegin 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x55f5da6120c8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f5da612120 <col:30> Inherited
|-CXXMethodDecl 0x55f5da612168 <line:155:5, col:62> col:55 cend 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x55f5da612218 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f5da612270 <col:30> Inherited
|-CXXMethodDecl 0x55f5da612298 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55f5da612348 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55f5da6123f8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55f5da6125b8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x55f5da6124a8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55f5da612520 <col:37, col:63> col:57 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x55f5da612708 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55f5da612678 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f5da613108 <line:163:5, col:65> col:43 operator[] 'String &(Vector::size_type)'
| |-ParmVarDecl 0x55f5da6127c0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55f5da6131c0 <col:20>
| `-OptimizeNoneAttr 0x55f5da613218 <col:30>
|-CXXMethodDecl 0x55f5da613338 <line:164:5, col:73> col:49 operator[] 'const String &(Vector::size_type) const'
| |-ParmVarDecl 0x55f5da613240 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55f5da6133f0 <col:20>
| `-OptimizeNoneAttr 0x55f5da613448 <col:30>
|-CXXMethodDecl 0x55f5da613500 <line:165:5, col:29> col:15 at 'String &(Vector::size_type)' inline
| `-ParmVarDecl 0x55f5da613470 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f5da613648 <line:166:5, col:37> col:21 at 'const String &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55f5da6135b8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f5da613778 <line:167:5, col:21> col:15 front 'String &()' inline
|-CXXMethodDecl 0x55f5da613878 <line:168:5, col:29> col:21 front 'const String &() const' inline
|-CXXMethodDecl 0x55f5da613948 <line:169:5, col:20> col:15 back 'String &()' inline
|-CXXMethodDecl 0x55f5da613a18 <line:170:5, col:28> col:21 back 'const String &() const' inline
|-CXXMethodDecl 0x55f5da613b58 <line:172:5, col:39> col:15 unchecked_at 'String &(Vector::size_type)' inline
| `-ParmVarDecl 0x55f5da613ac8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f5da613ca0 <line:173:5, col:47> col:21 unchecked_at 'const String &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55f5da613c10 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f5da613de8 <line:174:5, col:59> col:15 at_u 'String &(Vector::size_type)' inline
| |-ParmVarDecl 0x55f5da613d58 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55f5da613ea0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55f5da613fa0 <line:175:5, col:71> col:21 at_u 'const String &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55f5da613f10 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55f5da614058 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55f5da614118 <line:177:5, col:20> col:15 data 'String *()' inline
|-CXXMethodDecl 0x55f5da614218 <line:178:5, col:28> col:21 data 'const String *() const' inline
|-CXXMethodDecl 0x55f5da614398 <line:180:5, col:48> col:17 used push_back 'void (Vector<String>::value_argument_type)' inline
| `-ParmVarDecl 0x55f5da6142d8 <col:27, col:47> col:47 v 'Vector<String>::value_argument_type':'const String &'
|-FunctionTemplateDecl 0x55f5da614b28 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55f5da614450 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<String>':'fast_argument<String, true>'
| `-CXXMethodDecl 0x55f5da614a88 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (String &&)' inline
|   `-ParmVarDecl 0x55f5da614988 <col:58, col:62> col:62 v 'String &&'
|-CXXMethodDecl 0x55f5da614c08 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55f5da614d58 <line:186:5, col:49> col:17 push_front 'void (Vector<String>::value_argument_type)' inline
| `-ParmVarDecl 0x55f5da614cc8 <col:28, col:48> col:48 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x55f5da614e10 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55f5da615058 <line:189:5, col:62> col:21 insert 'Vector<String>::iterator (Vector<String>::iterator, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x55f5da614ed0 <col:28, col:37> col:37 it 'Vector<String>::iterator':'String *'
| `-ParmVarDecl 0x55f5da614f48 <col:41, col:61> col:61 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x55f5da6151e8 <line:190:5, col:38> col:21 erase 'Vector<String>::iterator (Vector<String>::iterator)' inline
| `-ParmVarDecl 0x55f5da615128 <col:27, col:36> col:36 it 'Vector<String>::iterator':'String *'
|-CXXMethodDecl 0x55f5da6153f8 <line:191:5, col:49> col:21 erase 'Vector<String>::iterator (Vector<String>::iterator, Vector<String>::iterator)' inline
| |-ParmVarDecl 0x55f5da6152b0 <col:27, col:36> col:36 a 'Vector<String>::iterator':'String *'
| `-ParmVarDecl 0x55f5da615328 <col:39, col:48> col:48 b 'Vector<String>::iterator':'String *'
|-CXXMethodDecl 0x55f5da6154b8 <line:193:5, col:23> col:17 used clear 'void ()' inline
|-CXXMethodDecl 0x55f5da615718 <line:195:5, col:34> col:17 swap 'void (Vector<String> &)' inline
| `-ParmVarDecl 0x55f5da615620 <col:22, col:33> col:33 x 'Vector<String> &'
`-CXXDestructorDecl 0x55f5da6157e8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55f5da6157e8

Layout: <CGRecordLayout
  LLVMType:%class.Vector.0 = type { %class.vector_memory.1 }
  NonVirtualBaseLLVMType:%class.Vector.0 = type { %class.vector_memory.1 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55f5da651de0 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<4>'
|-CXXRecordDecl 0x55f5da651fb8 prev 0x55f5da651de0 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55f5da652048 <col:46, col:52> col:46 public
|-TypedefDecl 0x55f5da652070 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55f5d9fa93b0 'int'
|-TypedefDecl 0x55f5da653c40 <line:13:5, col:31> col:31 type 'typename sized_array_memory<4>::type':'char_array<4>'
| `-ElaboratedType 0x55f5da653bf0 'typename sized_array_memory<4>::type' sugar
|   `-TypedefType 0x55f5da652520 'sized_array_memory<4>::type' sugar
|     |-Typedef 0x55f5da652420 'type'
|     `-TemplateSpecializationType 0x55f5da6523b0 'char_array<4UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x55f5da652290 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 4
|       |   `-SubstNonTypeTemplateParmExpr 0x55f5da652270 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x55f5da652250 <col:24> 'unsigned long' 4
|       `-RecordType 0x55f5da652390 'char_array<4>'
|         `-ClassTemplateSpecialization 0x55f5da6522b0 'char_array'
|-TypedefDecl 0x55f5da653cf8 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<4> >::type *'
| `-PointerType 0x55f5da653cc0 'vector_memory<sized_array_memory<4> >::type *'
|   `-TypedefType 0x55f5da653ca0 'vector_memory<sized_array_memory<4> >::type' sugar
|     |-Typedef 0x55f5da653c40 'type'
|     `-ElaboratedType 0x55f5da653bf0 'typename sized_array_memory<4>::type' sugar
|       `-TypedefType 0x55f5da652520 'sized_array_memory<4>::type' sugar
|         |-Typedef 0x55f5da652420 'type'
|         `-TemplateSpecializationType 0x55f5da6523b0 'char_array<4UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x55f5da652290 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 4
|           |   `-SubstNonTypeTemplateParmExpr 0x55f5da652270 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x55f5da652250 <col:24> 'unsigned long' 4
|           `-RecordType 0x55f5da652390 'char_array<4>'
|             `-ClassTemplateSpecialization 0x55f5da6522b0 'char_array'
|-CXXMethodDecl 0x55f5da653e78 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<4> >::type *) const' inline
| `-ParmVarDecl 0x55f5da653d88 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXConstructorDecl 0x55f5da653f68 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55f5da654048 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x55f5da654048
|-CXXMethodDecl 0x55f5da654318 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<4> > &)'
| `-ParmVarDecl 0x55f5da654220 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<4> > &'
|-CXXMethodDecl 0x55f5da654558 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x55f5da6543d0 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55f5da654448 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55f5da654728 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x55f5da654618 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55f5da654690 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55f5da654888 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<4> >::iterator ()'
|-CXXMethodDecl 0x55f5da654958 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<4> >::iterator ()'
|-CXXMethodDecl 0x55f5da654ba8 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<4> >::iterator (vector_memory<sized_array_memory<4> >::iterator, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x55f5da654a18 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<4> >::iterator':'vector_memory<sized_array_memory<4> >::type *'
| `-ParmVarDecl 0x55f5da654a90 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55f5da654e08 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<4> >::iterator (vector_memory<sized_array_memory<4> >::iterator, vector_memory<sized_array_memory<4> >::iterator)'
| |-ParmVarDecl 0x55f5da654c78 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<4> >::iterator':'vector_memory<sized_array_memory<4> >::type *'
| `-ParmVarDecl 0x55f5da654cf0 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<4> >::iterator':'vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55f5da654fc8 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<4> >::type *)' inline
| `-ParmVarDecl 0x55f5da654ed8 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55f5da655188 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<4> >::type *)' inline
| `-ParmVarDecl 0x55f5da655090 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55f5da655240 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55f5da6552f0 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55f5da655528 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x55f5da6553a0 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55f5da655418 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55f5da6557c8 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<4> > &)'
| `-ParmVarDecl 0x55f5da6556d0 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<4> > &'
|-FieldDecl 0x55f5da655890 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<4> >::type *'
|-FieldDecl 0x55f5da6558e0 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55f5da655930 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.3 = type { %struct.char_array.4*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.3 = type { %struct.char_array.4*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55f5da6b35e0 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'unsigned int'
|-CXXRecordDecl 0x55f5da6b37e8 prev 0x55f5da6b35e0 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55f5da6b4800 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<unsigned int>::type':'sized_array_memory<4>'
| `-ElaboratedType 0x55f5da6b47b0 'typename array_memory<unsigned int>::type' sugar
|   `-TypedefType 0x55f5da6b4790 'conditional<true, sized_array_memory<4>, typed_array_memory<unsigned int> >::type' sugar
|     |-Typedef 0x55f5da6b4640 'type'
|     `-SubstTemplateTypeParmType 0x55f5da6450b0 'sized_array_memory<4>' sugar
|       |-TemplateTypeParmType 0x55f5da273cd0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f5da273c78 'T'
|       `-RecordType 0x55f5da644c00 'sized_array_memory<4>'
|         `-ClassTemplateSpecialization 0x55f5da644b18 'sized_array_memory'
|-FieldDecl 0x55f5da6b4900 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<unsigned int>::array_memory_type>':'vector_memory<sized_array_memory<4> >' mutable
|-AccessSpecDecl 0x55f5da6b4950 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55f5da6b4988 <line:118:5, col:15> col:15 value_type 'unsigned int':'unsigned int'
| `-SubstTemplateTypeParmType 0x55f5da6b3880 'unsigned int' sugar
|   |-TemplateTypeParmType 0x55f5da2ab9c0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55f5da2ab968 'T'
|   `-BuiltinType 0x55f5d9fa9450 'unsigned int'
|-TypedefDecl 0x55f5da6b4a18 <line:119:5, col:16> col:16 reference 'unsigned int &'
| `-LValueReferenceType 0x55f5da6b49e0 'unsigned int &'
|   `-SubstTemplateTypeParmType 0x55f5da6b3880 'unsigned int' sugar
|     |-TemplateTypeParmType 0x55f5da2ab9c0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55f5da2ab968 'T'
|     `-BuiltinType 0x55f5d9fa9450 'unsigned int'
|-TypedefDecl 0x55f5da6b4ad8 <line:120:5, col:22> col:22 const_reference 'const unsigned int &'
| `-LValueReferenceType 0x55f5da6b4aa0 'const unsigned int &'
|   `-QualType 0x55f5da6b3881 'const unsigned int' const
|     `-SubstTemplateTypeParmType 0x55f5da6b3880 'unsigned int' sugar
|       |-TemplateTypeParmType 0x55f5da2ab9c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f5da2ab968 'T'
|       `-BuiltinType 0x55f5d9fa9450 'unsigned int'
|-TypedefDecl 0x55f5da6b4b68 <line:121:5, col:16> col:16 pointer 'unsigned int *'
| `-PointerType 0x55f5da6b4b30 'unsigned int *'
|   `-SubstTemplateTypeParmType 0x55f5da6b3880 'unsigned int' sugar
|     |-TemplateTypeParmType 0x55f5da2ab9c0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55f5da2ab968 'T'
|     `-BuiltinType 0x55f5d9fa9450 'unsigned int'
|-TypedefDecl 0x55f5da6b4bf8 <line:122:5, col:22> col:22 const_pointer 'const unsigned int *'
| `-PointerType 0x55f5da6b4bc0 'const unsigned int *'
|   `-QualType 0x55f5da6b3881 'const unsigned int' const
|     `-SubstTemplateTypeParmType 0x55f5da6b3880 'unsigned int' sugar
|       |-TemplateTypeParmType 0x55f5da2ab9c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f5da2ab968 'T'
|       `-BuiltinType 0x55f5d9fa9450 'unsigned int'
|-TypedefDecl 0x55f5da6b57e0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<unsigned int>::type':'unsigned int'
| `-ElaboratedType 0x55f5da6b5790 'typename fast_argument<unsigned int>::type' sugar
|   `-TypedefType 0x55f5da6b5770 'fast_argument<unsigned int, false>::type' sugar
|     |-Typedef 0x55f5da6b5700 'type'
|     `-SubstTemplateTypeParmType 0x55f5da6b54c0 'unsigned int' sugar
|       |-TemplateTypeParmType 0x55f5da27ead0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f5da27ea80 'T'
|       `-BuiltinType 0x55f5d9fa9450 'unsigned int'
|-TypedefDecl 0x55f5da6b5848 <line:126:5, col:22> col:22 const_access_type 'const unsigned int &'
| `-LValueReferenceType 0x55f5da6b4aa0 'const unsigned int &'
|   `-QualType 0x55f5da6b3881 'const unsigned int' const
|     `-SubstTemplateTypeParmType 0x55f5da6b3880 'unsigned int' sugar
|       |-TemplateTypeParmType 0x55f5da2ab9c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f5da2ab968 'T'
|       `-BuiltinType 0x55f5d9fa9450 'unsigned int'
|-TypedefDecl 0x55f5da6b58a0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55f5d9fa93b0 'int'
|-TypedefDecl 0x55f5da6b5908 <line:130:5, col:16> col:16 iterator 'unsigned int *'
| `-PointerType 0x55f5da6b4b30 'unsigned int *'
|   `-SubstTemplateTypeParmType 0x55f5da6b3880 'unsigned int' sugar
|     |-TemplateTypeParmType 0x55f5da2ab9c0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55f5da2ab968 'T'
|     `-BuiltinType 0x55f5d9fa9450 'unsigned int'
|-TypedefDecl 0x55f5da6b5970 <line:131:5, col:22> col:22 const_iterator 'const unsigned int *'
| `-PointerType 0x55f5da6b4bc0 'const unsigned int *'
|   `-QualType 0x55f5da6b3881 'const unsigned int' const
|     `-SubstTemplateTypeParmType 0x55f5da6b3880 'unsigned int' sugar
|       |-TemplateTypeParmType 0x55f5da2ab9c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f5da2ab968 'T'
|       `-BuiltinType 0x55f5d9fa9450 'unsigned int'
|-EnumDecl 0x55f5da6b59c8 <line:134:5> col:5
| `-EnumConstantDecl 0x55f5da6b5ac0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<unsigned int>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55f5da6b5aa0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55f5da2ad048 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55f5da2ad020 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55f5da2ad000 <col:40> 'int' 1
|-CXXConstructorDecl 0x55f5da6b5b48 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55f5da6b5d98 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<unsigned int>::value_argument_type)' inline
| |-ParmVarDecl 0x55f5da6b5c00 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55f5da6b5ca0 <col:41, col:61> col:61 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXConstructorDecl 0x55f5da6b6058 <line:139:5, col:37> col:12 Vector 'void (const Vector<unsigned int> &)' inline
| `-ParmVarDecl 0x55f5da6b5f40 <col:19, col:36> col:36 x 'const Vector<unsigned int> &'
|-CXXConstructorDecl 0x55f5da6b6318 <line:141:5, col:32> col:12 Vector 'void (Vector<unsigned int> &&)' inline
| `-ParmVarDecl 0x55f5da6b6200 <col:19, col:31> col:31 x 'Vector<unsigned int> &&'
|-CXXMethodDecl 0x55f5da6b6660 <line:144:5, col:51> col:23 operator= 'Vector<unsigned int> &(const Vector<unsigned int> &)' inline
| `-ParmVarDecl 0x55f5da6b6540 <col:33, col:50> col:50 x 'const Vector<unsigned int> &'
|-CXXMethodDecl 0x55f5da6b6970 <line:146:5, col:46> col:23 operator= 'Vector<unsigned int> &(Vector<unsigned int> &&)' inline
| `-ParmVarDecl 0x55f5da6b6850 <col:33, col:45> col:45 x 'Vector<unsigned int> &&'
|-CXXMethodDecl 0x55f5da6b6c60 <line:148:5, col:70> col:23 assign 'Vector<unsigned int> &(Vector::size_type, Vector<unsigned int>::value_argument_type)' inline
| |-ParmVarDecl 0x55f5da6b6aa8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55f5da6b6b20 <col:43, col:69> col:63 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXMethodDecl 0x55f5da6b6d88 <line:150:5, col:55> col:49 begin 'Vector<unsigned int>::iterator ()'
| |-NoInlineAttr 0x55f5da6b6e68 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f5da6b6ec0 <col:30> Inherited
|-CXXMethodDecl 0x55f5da6b6f08 <line:151:5, col:53> col:49 end 'Vector<unsigned int>::iterator ()'
| |-NoInlineAttr 0x55f5da6b6fb8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f5da6b7010 <col:30> Inherited
|-CXXMethodDecl 0x55f5da6b70a8 <line:152:5, col:63> col:55 begin 'Vector<unsigned int>::const_iterator () const'
| |-NoInlineAttr 0x55f5da6b7158 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f5da6b71b0 <col:30> Inherited
|-CXXMethodDecl 0x55f5da6b71f8 <line:153:5, col:61> col:55 end 'Vector<unsigned int>::const_iterator () const'
| |-NoInlineAttr 0x55f5da6b72a8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f5da6b7300 <col:30> Inherited
|-CXXMethodDecl 0x55f5da6b7348 <line:154:5, col:64> col:55 cbegin 'Vector<unsigned int>::const_iterator () const'
| |-NoInlineAttr 0x55f5da6b73f8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f5da6b7450 <col:30> Inherited
|-CXXMethodDecl 0x55f5da6b7498 <line:155:5, col:62> col:55 cend 'Vector<unsigned int>::const_iterator () const'
| |-NoInlineAttr 0x55f5da6b7548 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f5da6b75a0 <col:30> Inherited
|-CXXMethodDecl 0x55f5da6b75c8 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55f5da6b7678 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55f5da6b7728 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55f5da6b78e8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<unsigned int>::value_argument_type)' inline
| |-ParmVarDecl 0x55f5da6b77d8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55f5da6b7850 <col:37, col:63> col:57 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXMethodDecl 0x55f5da6b7a38 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55f5da6b79a8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f5da6b7be8 <line:163:5, col:65> col:43 operator[] 'unsigned int &(Vector::size_type)'
| |-ParmVarDecl 0x55f5da6b7af0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55f5da6b7ca0 <col:20>
| `-OptimizeNoneAttr 0x55f5da6b7cf8 <col:30>
|-CXXMethodDecl 0x55f5da6b7e18 <line:164:5, col:73> col:49 operator[] 'const unsigned int &(Vector::size_type) const'
| |-ParmVarDecl 0x55f5da6b7d20 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55f5da6b7ed0 <col:20>
| `-OptimizeNoneAttr 0x55f5da6b7f28 <col:30>
|-CXXMethodDecl 0x55f5da6b7fe0 <line:165:5, col:29> col:15 at 'unsigned int &(Vector::size_type)' inline
| `-ParmVarDecl 0x55f5da6b7f50 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f5da6b8128 <line:166:5, col:37> col:21 at 'const unsigned int &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55f5da6b8098 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f5da6b8258 <line:167:5, col:21> col:15 front 'unsigned int &()' inline
|-CXXMethodDecl 0x55f5da6b8388 <line:168:5, col:29> col:21 front 'const unsigned int &() const' inline
|-CXXMethodDecl 0x55f5da6b8458 <line:169:5, col:20> col:15 back 'unsigned int &()' inline
|-CXXMethodDecl 0x55f5da6b8528 <line:170:5, col:28> col:21 back 'const unsigned int &() const' inline
|-CXXMethodDecl 0x55f5da6b8668 <line:172:5, col:39> col:15 unchecked_at 'unsigned int &(Vector::size_type)' inline
| `-ParmVarDecl 0x55f5da6b85d8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f5da6b87b0 <line:173:5, col:47> col:21 unchecked_at 'const unsigned int &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55f5da6b8720 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f5da6b88f8 <line:174:5, col:59> col:15 at_u 'unsigned int &(Vector::size_type)' inline
| |-ParmVarDecl 0x55f5da6b8868 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55f5da6b89b0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55f5da6b8ab0 <line:175:5, col:71> col:21 at_u 'const unsigned int &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55f5da6b8a20 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55f5da6b8b68 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55f5da6b8c28 <line:177:5, col:20> col:15 data 'unsigned int *()' inline
|-CXXMethodDecl 0x55f5da6b8d28 <line:178:5, col:28> col:21 data 'const unsigned int *() const' inline
|-CXXMethodDecl 0x55f5da6b8ea8 <line:180:5, col:48> col:17 push_back 'void (Vector<unsigned int>::value_argument_type)' inline
| `-ParmVarDecl 0x55f5da6b8de8 <col:27, col:47> col:47 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-FunctionTemplateDecl 0x55f5da6b9668 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55f5da6b8f60 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<unsigned int>':'fast_argument<unsigned int, false>'
| `-CXXMethodDecl 0x55f5da6b95c8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (unsigned int &&)' inline
|   `-ParmVarDecl 0x55f5da6b94c8 <col:58, col:62> col:62 v 'unsigned int &&'
|-CXXMethodDecl 0x55f5da6b9748 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55f5da6b9898 <line:186:5, col:49> col:17 push_front 'void (Vector<unsigned int>::value_argument_type)' inline
| `-ParmVarDecl 0x55f5da6b9808 <col:28, col:48> col:48 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXMethodDecl 0x55f5da6b9950 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55f5da6b9b98 <line:189:5, col:62> col:21 insert 'Vector<unsigned int>::iterator (Vector<unsigned int>::iterator, Vector<unsigned int>::value_argument_type)' inline
| |-ParmVarDecl 0x55f5da6b9a10 <col:28, col:37> col:37 it 'Vector<unsigned int>::iterator':'unsigned int *'
| `-ParmVarDecl 0x55f5da6b9a88 <col:41, col:61> col:61 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXMethodDecl 0x55f5da6b9d58 <line:190:5, col:38> col:21 erase 'Vector<unsigned int>::iterator (Vector<unsigned int>::iterator)' inline
| `-ParmVarDecl 0x55f5da6b9c68 <col:27, col:36> col:36 it 'Vector<unsigned int>::iterator':'unsigned int *'
|-CXXMethodDecl 0x55f5da6b9fe0 <line:191:5, col:49> col:21 erase 'Vector<unsigned int>::iterator (Vector<unsigned int>::iterator, Vector<unsigned int>::iterator)' inline
| |-ParmVarDecl 0x55f5da6b9e20 <col:27, col:36> col:36 a 'Vector<unsigned int>::iterator':'unsigned int *'
| `-ParmVarDecl 0x55f5da6b9e98 <col:39, col:48> col:48 b 'Vector<unsigned int>::iterator':'unsigned int *'
|-CXXMethodDecl 0x55f5da6ba0a0 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55f5da6ba2f8 <line:195:5, col:34> col:17 swap 'void (Vector<unsigned int> &)' inline
| `-ParmVarDecl 0x55f5da6ba200 <col:22, col:33> col:33 x 'Vector<unsigned int> &'
`-CXXDestructorDecl 0x55f5da6ba3c8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55f5da6ba3c8

Layout: <CGRecordLayout
  LLVMType:%class.Vector.2 = type { %class.vector_memory.3 }
  NonVirtualBaseLLVMType:%class.Vector.2 = type { %class.vector_memory.3 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55f5da6440f8 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'int'
|-CXXRecordDecl 0x55f5da644308 prev 0x55f5da6440f8 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55f5da651d50 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<int>::type':'sized_array_memory<4>'
| `-ElaboratedType 0x55f5da651d00 'typename array_memory<int>::type' sugar
|   `-TypedefType 0x55f5da651ce0 'conditional<true, sized_array_memory<4>, typed_array_memory<int> >::type' sugar
|     |-Typedef 0x55f5da651b90 'type'
|     `-SubstTemplateTypeParmType 0x55f5da6450b0 'sized_array_memory<4>' sugar
|       |-TemplateTypeParmType 0x55f5da273cd0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f5da273c78 'T'
|       `-RecordType 0x55f5da644c00 'sized_array_memory<4>'
|         `-ClassTemplateSpecialization 0x55f5da644b18 'sized_array_memory'
|-FieldDecl 0x55f5da655980 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<int>::array_memory_type>':'vector_memory<sized_array_memory<4> >' mutable
|-AccessSpecDecl 0x55f5da6559d0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55f5da655a08 <line:118:5, col:15> col:15 value_type 'int':'int'
| `-SubstTemplateTypeParmType 0x55f5da6443a0 'int' sugar
|   |-TemplateTypeParmType 0x55f5da2ab9c0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55f5da2ab968 'T'
|   `-BuiltinType 0x55f5d9fa93b0 'int'
|-TypedefDecl 0x55f5da655a98 <line:119:5, col:16> col:16 reference 'int &'
| `-LValueReferenceType 0x55f5da655a60 'int &'
|   `-SubstTemplateTypeParmType 0x55f5da6443a0 'int' sugar
|     |-TemplateTypeParmType 0x55f5da2ab9c0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55f5da2ab968 'T'
|     `-BuiltinType 0x55f5d9fa93b0 'int'
|-TypedefDecl 0x55f5da655b58 <line:120:5, col:22> col:22 const_reference 'const int &'
| `-LValueReferenceType 0x55f5da655b20 'const int &'
|   `-QualType 0x55f5da6443a1 'const int' const
|     `-SubstTemplateTypeParmType 0x55f5da6443a0 'int' sugar
|       |-TemplateTypeParmType 0x55f5da2ab9c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f5da2ab968 'T'
|       `-BuiltinType 0x55f5d9fa93b0 'int'
|-TypedefDecl 0x55f5da655be8 <line:121:5, col:16> col:16 pointer 'int *'
| `-PointerType 0x55f5da655bb0 'int *'
|   `-SubstTemplateTypeParmType 0x55f5da6443a0 'int' sugar
|     |-TemplateTypeParmType 0x55f5da2ab9c0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55f5da2ab968 'T'
|     `-BuiltinType 0x55f5d9fa93b0 'int'
|-TypedefDecl 0x55f5da655c78 <line:122:5, col:22> col:22 const_pointer 'const int *'
| `-PointerType 0x55f5da655c40 'const int *'
|   `-QualType 0x55f5da6443a1 'const int' const
|     `-SubstTemplateTypeParmType 0x55f5da6443a0 'int' sugar
|       |-TemplateTypeParmType 0x55f5da2ab9c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f5da2ab968 'T'
|       `-BuiltinType 0x55f5d9fa93b0 'int'
|-TypedefDecl 0x55f5da656860 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<int>::type':'int'
| `-ElaboratedType 0x55f5da656810 'typename fast_argument<int>::type' sugar
|   `-TypedefType 0x55f5da6567f0 'fast_argument<int, false>::type' sugar
|     |-Typedef 0x55f5da656780 'type'
|     `-SubstTemplateTypeParmType 0x55f5da656540 'int' sugar
|       |-TemplateTypeParmType 0x55f5da27ead0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f5da27ea80 'T'
|       `-BuiltinType 0x55f5d9fa93b0 'int'
|-TypedefDecl 0x55f5da6568c8 <line:126:5, col:22> col:22 const_access_type 'const int &'
| `-LValueReferenceType 0x55f5da655b20 'const int &'
|   `-QualType 0x55f5da6443a1 'const int' const
|     `-SubstTemplateTypeParmType 0x55f5da6443a0 'int' sugar
|       |-TemplateTypeParmType 0x55f5da2ab9c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f5da2ab968 'T'
|       `-BuiltinType 0x55f5d9fa93b0 'int'
|-TypedefDecl 0x55f5da656920 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55f5d9fa93b0 'int'
|-TypedefDecl 0x55f5da656988 <line:130:5, col:16> col:16 iterator 'int *'
| `-PointerType 0x55f5da655bb0 'int *'
|   `-SubstTemplateTypeParmType 0x55f5da6443a0 'int' sugar
|     |-TemplateTypeParmType 0x55f5da2ab9c0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55f5da2ab968 'T'
|     `-BuiltinType 0x55f5d9fa93b0 'int'
|-TypedefDecl 0x55f5da6569f0 <line:131:5, col:22> col:22 const_iterator 'const int *'
| `-PointerType 0x55f5da655c40 'const int *'
|   `-QualType 0x55f5da6443a1 'const int' const
|     `-SubstTemplateTypeParmType 0x55f5da6443a0 'int' sugar
|       |-TemplateTypeParmType 0x55f5da2ab9c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f5da2ab968 'T'
|       `-BuiltinType 0x55f5d9fa93b0 'int'
|-EnumDecl 0x55f5da656a48 <line:134:5> col:5
| `-EnumConstantDecl 0x55f5da656b40 <col:12, col:40> col:12 RESERVE_GROW 'Vector<int>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55f5da656b20 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55f5da2ad048 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55f5da2ad020 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55f5da2ad000 <col:40> 'int' 1
|-CXXConstructorDecl 0x55f5da656bc8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55f5da656e18 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x55f5da656c80 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55f5da656d20 <col:41, col:61> col:61 v 'Vector<int>::value_argument_type':'int'
|-CXXConstructorDecl 0x55f5da6570d8 <line:139:5, col:37> col:12 Vector 'void (const Vector<int> &)' inline
| `-ParmVarDecl 0x55f5da656fc0 <col:19, col:36> col:36 x 'const Vector<int> &'
|-CXXConstructorDecl 0x55f5da657398 <line:141:5, col:32> col:12 Vector 'void (Vector<int> &&)' inline
| `-ParmVarDecl 0x55f5da657280 <col:19, col:31> col:31 x 'Vector<int> &&'
|-CXXMethodDecl 0x55f5da6576e0 <line:144:5, col:51> col:23 operator= 'Vector<int> &(const Vector<int> &)' inline
| `-ParmVarDecl 0x55f5da6575c0 <col:33, col:50> col:50 x 'const Vector<int> &'
|-CXXMethodDecl 0x55f5da6579f0 <line:146:5, col:46> col:23 operator= 'Vector<int> &(Vector<int> &&)' inline
| `-ParmVarDecl 0x55f5da6578d0 <col:33, col:45> col:45 x 'Vector<int> &&'
|-CXXMethodDecl 0x55f5da657ce0 <line:148:5, col:70> col:23 assign 'Vector<int> &(Vector::size_type, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x55f5da657b28 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55f5da657ba0 <col:43, col:69> col:63 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x55f5da657e08 <line:150:5, col:55> col:49 begin 'Vector<int>::iterator ()'
| |-NoInlineAttr 0x55f5da657ee8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f5da657f40 <col:30> Inherited
|-CXXMethodDecl 0x55f5da657f88 <line:151:5, col:53> col:49 end 'Vector<int>::iterator ()'
| |-NoInlineAttr 0x55f5da658038 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f5da658090 <col:30> Inherited
|-CXXMethodDecl 0x55f5da658158 <line:152:5, col:63> col:55 begin 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x55f5da658208 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f5da658260 <col:30> Inherited
|-CXXMethodDecl 0x55f5da6582a8 <line:153:5, col:61> col:55 end 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x55f5da658358 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f5da6583b0 <col:30> Inherited
|-CXXMethodDecl 0x55f5da6583f8 <line:154:5, col:64> col:55 cbegin 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x55f5da6584a8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f5da658500 <col:30> Inherited
|-CXXMethodDecl 0x55f5da658548 <line:155:5, col:62> col:55 cend 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x55f5da6585f8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f5da658650 <col:30> Inherited
|-CXXMethodDecl 0x55f5da658678 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55f5da658728 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55f5da6587d8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55f5da658998 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x55f5da658888 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55f5da658900 <col:37, col:63> col:57 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x55f5da658ae8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55f5da658a58 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f5da658c98 <line:163:5, col:65> col:43 used operator[] 'int &(Vector::size_type)'
| |-ParmVarDecl 0x55f5da658ba0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55f5da658d50 <col:20>
| `-OptimizeNoneAttr 0x55f5da658da8 <col:30>
|-CXXMethodDecl 0x55f5da658ec8 <line:164:5, col:73> col:49 operator[] 'const int &(Vector::size_type) const'
| |-ParmVarDecl 0x55f5da658dd0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55f5da658f80 <col:20>
| `-OptimizeNoneAttr 0x55f5da658fd8 <col:30>
|-CXXMethodDecl 0x55f5da659090 <line:165:5, col:29> col:15 at 'int &(Vector::size_type)' inline
| `-ParmVarDecl 0x55f5da659000 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f5da6591d8 <line:166:5, col:37> col:21 at 'const int &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55f5da659148 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f5da659308 <line:167:5, col:21> col:15 front 'int &()' inline
|-CXXMethodDecl 0x55f5da659438 <line:168:5, col:29> col:21 front 'const int &() const' inline
|-CXXMethodDecl 0x55f5da659508 <line:169:5, col:20> col:15 back 'int &()' inline
|-CXXMethodDecl 0x55f5da6595d8 <line:170:5, col:28> col:21 used back 'const int &() const' inline
|-CXXMethodDecl 0x55f5da659718 <line:172:5, col:39> col:15 unchecked_at 'int &(Vector::size_type)' inline
| `-ParmVarDecl 0x55f5da659688 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f5da659860 <line:173:5, col:47> col:21 unchecked_at 'const int &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55f5da6597d0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f5da65c010 <line:174:5, col:59> col:15 at_u 'int &(Vector::size_type)' inline
| |-ParmVarDecl 0x55f5da659918 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55f5da65c0c8 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55f5da65c1c8 <line:175:5, col:71> col:21 at_u 'const int &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55f5da65c138 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55f5da65c280 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55f5da65c338 <line:177:5, col:20> col:15 data 'int *()' inline
|-CXXMethodDecl 0x55f5da65c438 <line:178:5, col:28> col:21 data 'const int *() const' inline
|-CXXMethodDecl 0x55f5da65c5b8 <line:180:5, col:48> col:17 push_back 'void (Vector<int>::value_argument_type)' inline
| `-ParmVarDecl 0x55f5da65c4f8 <col:27, col:47> col:47 v 'Vector<int>::value_argument_type':'int'
|-FunctionTemplateDecl 0x55f5da65cd78 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55f5da65c670 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<int>':'fast_argument<int, false>'
| `-CXXMethodDecl 0x55f5da65ccd8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (int &&)' inline
|   `-ParmVarDecl 0x55f5da65cbd8 <col:58, col:62> col:62 v 'int &&'
|-CXXMethodDecl 0x55f5da65ce58 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55f5da65cfa8 <line:186:5, col:49> col:17 push_front 'void (Vector<int>::value_argument_type)' inline
| `-ParmVarDecl 0x55f5da65cf18 <col:28, col:48> col:48 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x55f5da65d060 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55f5da65d2a8 <line:189:5, col:62> col:21 insert 'Vector<int>::iterator (Vector<int>::iterator, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x55f5da65d120 <col:28, col:37> col:37 it 'Vector<int>::iterator':'int *'
| `-ParmVarDecl 0x55f5da65d198 <col:41, col:61> col:61 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x55f5da65d468 <line:190:5, col:38> col:21 erase 'Vector<int>::iterator (Vector<int>::iterator)' inline
| `-ParmVarDecl 0x55f5da65d378 <col:27, col:36> col:36 it 'Vector<int>::iterator':'int *'
|-CXXMethodDecl 0x55f5da65d6b8 <line:191:5, col:49> col:21 erase 'Vector<int>::iterator (Vector<int>::iterator, Vector<int>::iterator)' inline
| |-ParmVarDecl 0x55f5da65d530 <col:27, col:36> col:36 a 'Vector<int>::iterator':'int *'
| `-ParmVarDecl 0x55f5da65d5a8 <col:39, col:48> col:48 b 'Vector<int>::iterator':'int *'
|-CXXMethodDecl 0x55f5da65d778 <line:193:5, col:23> col:17 used clear 'void ()' inline
|-CXXMethodDecl 0x55f5da65d9d8 <line:195:5, col:34> col:17 swap 'void (Vector<int> &)' inline
| `-ParmVarDecl 0x55f5da65d8e0 <col:22, col:33> col:33 x 'Vector<int> &'
`-CXXDestructorDecl 0x55f5da65daa8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55f5da65daa8

Layout: <CGRecordLayout
  LLVMType:%class.Vector.5 = type { %class.vector_memory.3 }
  NonVirtualBaseLLVMType:%class.Vector.5 = type { %class.vector_memory.3 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f5da6ba610 <../dummy_inc/click/router.hh:247:5, line:250:5> line:247:12 referenced struct element_landmark_t definition
|-DefinitionData aggregate standard_layout has_mutable_fields
| |-DefaultConstructor exists non_trivial needs_implicit
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x55f5da6ba728 <col:5, col:12> col:12 implicit struct element_landmark_t
|-FieldDecl 0x55f5da6ba7c8 <line:248:9, col:18> col:18 first_landmarkid 'uint32_t':'unsigned int'
|-FieldDecl 0x55f5da6ba828 <line:249:9, col:16> col:16 filename 'String'
|-CXXConstructorDecl 0x55f5da6ba8c0 <line:247:12> col:12 implicit element_landmark_t 'void (const Router::element_landmark_t &)' inline default noexcept-unevaluated 0x55f5da6ba8c0
| `-ParmVarDecl 0x55f5da6ba9d8 <col:12> col:12 'const Router::element_landmark_t &'
|-CXXConstructorDecl 0x55f5da6baa78 <col:12> col:12 implicit element_landmark_t 'void (Router::element_landmark_t &&)' inline default noexcept-unevaluated 0x55f5da6baa78
| `-ParmVarDecl 0x55f5da6bab88 <col:12> col:12 'Router::element_landmark_t &&'
|-CXXMethodDecl 0x55f5da6bac28 <col:12> col:12 implicit operator= 'Router::element_landmark_t &(const Router::element_landmark_t &)' inline default noexcept-unevaluated 0x55f5da6bac28
| `-ParmVarDecl 0x55f5da6bad38 <col:12> col:12 'const Router::element_landmark_t &'
|-CXXMethodDecl 0x55f5da6bada8 <col:12> col:12 implicit operator= 'Router::element_landmark_t &(Router::element_landmark_t &&)' inline default noexcept-unevaluated 0x55f5da6bada8
| `-ParmVarDecl 0x55f5da6baeb8 <col:12> col:12 'Router::element_landmark_t &&'
`-CXXDestructorDecl 0x55f5da6baf40 <col:12> col:12 implicit ~element_landmark_t 'void ()' inline default noexcept-unevaluated 0x55f5da6baf40

Layout: <CGRecordLayout
  LLVMType:%"struct.Router::element_landmark_t" = type { i32, %class.String }
  NonVirtualBaseLLVMType:%"struct.Router::element_landmark_t" = type { i32, %class.String }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55f5da6bc4d0 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'typed_array_memory<Router::element_landmark_t>'
|-CXXRecordDecl 0x55f5da6bc6a8 prev 0x55f5da6bc4d0 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55f5da6bc738 <col:46, col:52> col:46 public
|-TypedefDecl 0x55f5da6bc760 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55f5d9fa93b0 'int'
|-TypedefDecl 0x55f5da6be120 <line:13:5, col:31> col:31 type 'typename typed_array_memory<element_landmark_t>::type':'Router::element_landmark_t'
| `-ElaboratedType 0x55f5da6be0d0 'typename typed_array_memory<element_landmark_t>::type' sugar
|   `-TypedefType 0x55f5da6be0b0 'typed_array_memory<Router::element_landmark_t>::type' sugar
|     |-Typedef 0x55f5da6bc978 'type'
|     `-SubstTemplateTypeParmType 0x55f5da6bc940 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x55f5da29e6a0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f5da29e650 'T'
|       `-RecordType 0x55f5da6ba6a0 'Router::element_landmark_t'
|         `-CXXRecord 0x55f5da6ba610 'element_landmark_t'
|-TypedefDecl 0x55f5da6be1d8 <line:14:5, col:19> col:19 iterator 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
| `-PointerType 0x55f5da6be1a0 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|   `-TypedefType 0x55f5da6be180 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type' sugar
|     |-Typedef 0x55f5da6be120 'type'
|     `-ElaboratedType 0x55f5da6be0d0 'typename typed_array_memory<element_landmark_t>::type' sugar
|       `-TypedefType 0x55f5da6be0b0 'typed_array_memory<Router::element_landmark_t>::type' sugar
|         |-Typedef 0x55f5da6bc978 'type'
|         `-SubstTemplateTypeParmType 0x55f5da6bc940 'Router::element_landmark_t' sugar
|           |-TemplateTypeParmType 0x55f5da29e6a0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55f5da29e650 'T'
|           `-RecordType 0x55f5da6ba6a0 'Router::element_landmark_t'
|             `-CXXRecord 0x55f5da6ba610 'element_landmark_t'
|-CXXMethodDecl 0x55f5da6be358 <line:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *) const' inline
| `-ParmVarDecl 0x55f5da6be268 <col:36, col:48> col:48 argp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXConstructorDecl 0x55f5da6be448 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55f5da6be528 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x55f5da6be528
|-CXXMethodDecl 0x55f5da6be7f8 <line:25:5, col:43> col:10 assign 'void (const vector_memory<typed_array_memory<Router::element_landmark_t> > &)'
| `-ParmVarDecl 0x55f5da6be700 <col:17, col:42> col:42 x 'const vector_memory<typed_array_memory<Router::element_landmark_t> > &'
|-CXXMethodDecl 0x55f5da6bea38 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)'
| |-ParmVarDecl 0x55f5da6be8b0 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55f5da6be928 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x55f5da6bec08 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)'
| |-ParmVarDecl 0x55f5da6beaf8 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55f5da6beb70 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x55f5da6bed68 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator ()'
|-CXXMethodDecl 0x55f5da6bee38 <line:31:5, line:33:5> line:31:14 end 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator ()'
|-CXXMethodDecl 0x55f5da6bf088 <line:34:5, col:48> col:14 insert 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator (vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator, const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)'
| |-ParmVarDecl 0x55f5da6beef8 <col:21, col:30> col:30 it 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator':'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
| `-ParmVarDecl 0x55f5da6bef70 <col:34, col:46> col:46 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x55f5da6bf2e8 <line:35:5, col:42> col:14 erase 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator (vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator, vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator)'
| |-ParmVarDecl 0x55f5da6bf158 <col:20, col:29> col:29 a 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator':'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
| `-ParmVarDecl 0x55f5da6bf1d0 <col:32, col:41> col:41 b 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator':'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x55f5da6bf4a8 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)' inline
| `-ParmVarDecl 0x55f5da6bf3b8 <col:27, col:39> col:39 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x55f5da6bf668 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)' inline
| `-ParmVarDecl 0x55f5da6bf570 <col:37, col:43> col:43 vp 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x55f5da6bf720 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55f5da6bf7d0 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55f5da6bfa08 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)'
| |-ParmVarDecl 0x55f5da6bf880 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55f5da6bf8f8 <col:45, col:57> col:57 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x55f5da6bfca8 <line:66:5, col:35> col:10 swap 'void (vector_memory<typed_array_memory<Router::element_landmark_t> > &)'
| `-ParmVarDecl 0x55f5da6bfbb0 <col:15, col:34> col:34 x 'vector_memory<typed_array_memory<Router::element_landmark_t> > &'
|-FieldDecl 0x55f5da6bfd70 <line:68:5, col:11> col:11 l_ 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-FieldDecl 0x55f5da6bfdc0 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55f5da6bfe10 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.7 = type { %"struct.Router::element_landmark_t"*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.7 = type { %"struct.Router::element_landmark_t"*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55f5da6bb030 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Router::element_landmark_t'
|-CXXRecordDecl 0x55f5da6bb238 prev 0x55f5da6bb030 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55f5da6bc440 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<element_landmark_t>::type':'typed_array_memory<Router::element_landmark_t>'
| `-ElaboratedType 0x55f5da6bc3f0 'typename array_memory<element_landmark_t>::type' sugar
|   `-TypedefType 0x55f5da6bc3d0 'conditional<false, sized_array_memory<32>, typed_array_memory<Router::element_landmark_t> >::type' sugar
|     |-Typedef 0x55f5da6bc280 'type'
|     `-SubstTemplateTypeParmType 0x55f5da6bc110 'typed_array_memory<Router::element_landmark_t>' sugar
|       |-TemplateTypeParmType 0x55f5da274450 'F' dependent depth 0 index 1
|       | `-TemplateTypeParm 0x55f5da2743f8 'F'
|       `-RecordType 0x55f5da6bbd70 'typed_array_memory<Router::element_landmark_t>'
|         `-ClassTemplateSpecialization 0x55f5da6bbc90 'typed_array_memory'
|-FieldDecl 0x55f5da6bfe60 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Router::element_landmark_t>::array_memory_type>':'vector_memory<typed_array_memory<Router::element_landmark_t> >' mutable
|-AccessSpecDecl 0x55f5da6bfeb0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55f5da6bfee8 <line:118:5, col:15> col:15 value_type 'Router::element_landmark_t':'Router::element_landmark_t'
| `-SubstTemplateTypeParmType 0x55f5da6bb2d0 'Router::element_landmark_t' sugar
|   |-TemplateTypeParmType 0x55f5da2ab9c0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55f5da2ab968 'T'
|   `-RecordType 0x55f5da6ba6a0 'Router::element_landmark_t'
|     `-CXXRecord 0x55f5da6ba610 'element_landmark_t'
|-TypedefDecl 0x55f5da6bff78 <line:119:5, col:16> col:16 reference 'Router::element_landmark_t &'
| `-LValueReferenceType 0x55f5da6bff40 'Router::element_landmark_t &'
|   `-SubstTemplateTypeParmType 0x55f5da6bb2d0 'Router::element_landmark_t' sugar
|     |-TemplateTypeParmType 0x55f5da2ab9c0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55f5da2ab968 'T'
|     `-RecordType 0x55f5da6ba6a0 'Router::element_landmark_t'
|       `-CXXRecord 0x55f5da6ba610 'element_landmark_t'
|-TypedefDecl 0x55f5da6c0008 <line:120:5, col:22> col:22 const_reference 'const Router::element_landmark_t &'
| `-LValueReferenceType 0x55f5da6bffd0 'const Router::element_landmark_t &'
|   `-QualType 0x55f5da6bb2d1 'const Router::element_landmark_t' const
|     `-SubstTemplateTypeParmType 0x55f5da6bb2d0 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x55f5da2ab9c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f5da2ab968 'T'
|       `-RecordType 0x55f5da6ba6a0 'Router::element_landmark_t'
|         `-CXXRecord 0x55f5da6ba610 'element_landmark_t'
|-TypedefDecl 0x55f5da6c0098 <line:121:5, col:16> col:16 pointer 'Router::element_landmark_t *'
| `-PointerType 0x55f5da6c0060 'Router::element_landmark_t *'
|   `-SubstTemplateTypeParmType 0x55f5da6bb2d0 'Router::element_landmark_t' sugar
|     |-TemplateTypeParmType 0x55f5da2ab9c0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55f5da2ab968 'T'
|     `-RecordType 0x55f5da6ba6a0 'Router::element_landmark_t'
|       `-CXXRecord 0x55f5da6ba610 'element_landmark_t'
|-TypedefDecl 0x55f5da6c0128 <line:122:5, col:22> col:22 const_pointer 'const Router::element_landmark_t *'
| `-PointerType 0x55f5da6c00f0 'const Router::element_landmark_t *'
|   `-QualType 0x55f5da6bb2d1 'const Router::element_landmark_t' const
|     `-SubstTemplateTypeParmType 0x55f5da6bb2d0 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x55f5da2ab9c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f5da2ab968 'T'
|       `-RecordType 0x55f5da6ba6a0 'Router::element_landmark_t'
|         `-CXXRecord 0x55f5da6ba610 'element_landmark_t'
|-TypedefDecl 0x55f5da6c0d80 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<element_landmark_t>::type':'const Router::element_landmark_t &'
| `-ElaboratedType 0x55f5da6c0d30 'typename fast_argument<element_landmark_t>::type' sugar
|   `-TypedefType 0x55f5da6c0d10 'fast_argument<Router::element_landmark_t, true>::type' sugar
|     |-Typedef 0x55f5da6c0c48 'type'
|     `-LValueReferenceType 0x55f5da6c0c10 'const Router::element_landmark_t &'
|       `-QualType 0x55f5da6c09b1 'const Router::element_landmark_t' const
|         `-SubstTemplateTypeParmType 0x55f5da6c09b0 'Router::element_landmark_t' sugar
|           |-TemplateTypeParmType 0x55f5da27e3a0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55f5da27e348 'T'
|           `-RecordType 0x55f5da6ba6a0 'Router::element_landmark_t'
|             `-CXXRecord 0x55f5da6ba610 'element_landmark_t'
|-TypedefDecl 0x55f5da6c0de8 <line:126:5, col:22> col:22 const_access_type 'const Router::element_landmark_t &'
| `-LValueReferenceType 0x55f5da6bffd0 'const Router::element_landmark_t &'
|   `-QualType 0x55f5da6bb2d1 'const Router::element_landmark_t' const
|     `-SubstTemplateTypeParmType 0x55f5da6bb2d0 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x55f5da2ab9c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f5da2ab968 'T'
|       `-RecordType 0x55f5da6ba6a0 'Router::element_landmark_t'
|         `-CXXRecord 0x55f5da6ba610 'element_landmark_t'
|-TypedefDecl 0x55f5da6c0e40 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55f5d9fa93b0 'int'
|-TypedefDecl 0x55f5da6c0ea8 <line:130:5, col:16> col:16 iterator 'Router::element_landmark_t *'
| `-PointerType 0x55f5da6c0060 'Router::element_landmark_t *'
|   `-SubstTemplateTypeParmType 0x55f5da6bb2d0 'Router::element_landmark_t' sugar
|     |-TemplateTypeParmType 0x55f5da2ab9c0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55f5da2ab968 'T'
|     `-RecordType 0x55f5da6ba6a0 'Router::element_landmark_t'
|       `-CXXRecord 0x55f5da6ba610 'element_landmark_t'
|-TypedefDecl 0x55f5da6c0f10 <line:131:5, col:22> col:22 const_iterator 'const Router::element_landmark_t *'
| `-PointerType 0x55f5da6c00f0 'const Router::element_landmark_t *'
|   `-QualType 0x55f5da6bb2d1 'const Router::element_landmark_t' const
|     `-SubstTemplateTypeParmType 0x55f5da6bb2d0 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x55f5da2ab9c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f5da2ab968 'T'
|       `-RecordType 0x55f5da6ba6a0 'Router::element_landmark_t'
|         `-CXXRecord 0x55f5da6ba610 'element_landmark_t'
|-EnumDecl 0x55f5da6c0f68 <line:134:5> col:5
| `-EnumConstantDecl 0x55f5da6c1060 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Router::element_landmark_t>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55f5da6c1040 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55f5da2ad048 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55f5da2ad020 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55f5da2ad000 <col:40> 'int' 1
|-CXXConstructorDecl 0x55f5da6c10e8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55f5da6c1378 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Router::element_landmark_t>::value_argument_type)' inline
| |-ParmVarDecl 0x55f5da6c11a0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55f5da6c1240 <col:41, col:61> col:61 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXConstructorDecl 0x55f5da6c1638 <line:139:5, col:37> col:12 Vector 'void (const Vector<Router::element_landmark_t> &)' inline
| `-ParmVarDecl 0x55f5da6c1520 <col:19, col:36> col:36 x 'const Vector<Router::element_landmark_t> &'
|-CXXConstructorDecl 0x55f5da6c18f8 <line:141:5, col:32> col:12 Vector 'void (Vector<Router::element_landmark_t> &&)' inline
| `-ParmVarDecl 0x55f5da6c17e0 <col:19, col:31> col:31 x 'Vector<Router::element_landmark_t> &&'
|-CXXMethodDecl 0x55f5da6c1c40 <line:144:5, col:51> col:23 operator= 'Vector<Router::element_landmark_t> &(const Vector<Router::element_landmark_t> &)' inline
| `-ParmVarDecl 0x55f5da6c1b20 <col:33, col:50> col:50 x 'const Vector<Router::element_landmark_t> &'
|-CXXMethodDecl 0x55f5da6c1ff0 <line:146:5, col:46> col:23 operator= 'Vector<Router::element_landmark_t> &(Vector<Router::element_landmark_t> &&)' inline
| `-ParmVarDecl 0x55f5da6c1e30 <col:33, col:45> col:45 x 'Vector<Router::element_landmark_t> &&'
|-CXXMethodDecl 0x55f5da6c22e0 <line:148:5, col:70> col:23 assign 'Vector<Router::element_landmark_t> &(Vector::size_type, Vector<Router::element_landmark_t>::value_argument_type)' inline
| |-ParmVarDecl 0x55f5da6c2128 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55f5da6c21a0 <col:43, col:69> col:63 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXMethodDecl 0x55f5da6c2408 <line:150:5, col:55> col:49 begin 'Vector<Router::element_landmark_t>::iterator ()'
| |-NoInlineAttr 0x55f5da6c24e8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f5da6c2540 <col:30> Inherited
|-CXXMethodDecl 0x55f5da6c2588 <line:151:5, col:53> col:49 end 'Vector<Router::element_landmark_t>::iterator ()'
| |-NoInlineAttr 0x55f5da6c2638 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f5da6c2690 <col:30> Inherited
|-CXXMethodDecl 0x55f5da6c2758 <line:152:5, col:63> col:55 begin 'Vector<Router::element_landmark_t>::const_iterator () const'
| |-NoInlineAttr 0x55f5da6c2808 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f5da6c2860 <col:30> Inherited
|-CXXMethodDecl 0x55f5da6c28a8 <line:153:5, col:61> col:55 end 'Vector<Router::element_landmark_t>::const_iterator () const'
| |-NoInlineAttr 0x55f5da6c2958 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f5da6c29b0 <col:30> Inherited
|-CXXMethodDecl 0x55f5da6c29f8 <line:154:5, col:64> col:55 cbegin 'Vector<Router::element_landmark_t>::const_iterator () const'
| |-NoInlineAttr 0x55f5da6c2aa8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f5da6c2b00 <col:30> Inherited
|-CXXMethodDecl 0x55f5da6c2b48 <line:155:5, col:62> col:55 cend 'Vector<Router::element_landmark_t>::const_iterator () const'
| |-NoInlineAttr 0x55f5da6c2bf8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f5da6c2c50 <col:30> Inherited
|-CXXMethodDecl 0x55f5da6c2c78 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55f5da6c2d28 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55f5da6c2dd8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55f5da6c2f98 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Router::element_landmark_t>::value_argument_type)' inline
| |-ParmVarDecl 0x55f5da6c2e88 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55f5da6c2f00 <col:37, col:63> col:57 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXMethodDecl 0x55f5da6c30e8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55f5da6c3058 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f5da6c3298 <line:163:5, col:65> col:43 operator[] 'Router::element_landmark_t &(Vector::size_type)'
| |-ParmVarDecl 0x55f5da6c31a0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55f5da6c3350 <col:20>
| `-OptimizeNoneAttr 0x55f5da6c33a8 <col:30>
|-CXXMethodDecl 0x55f5da6c34c8 <line:164:5, col:73> col:49 operator[] 'const Router::element_landmark_t &(Vector::size_type) const'
| |-ParmVarDecl 0x55f5da6c33d0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55f5da6c3580 <col:20>
| `-OptimizeNoneAttr 0x55f5da6c35d8 <col:30>
|-CXXMethodDecl 0x55f5da6c3690 <line:165:5, col:29> col:15 at 'Router::element_landmark_t &(Vector::size_type)' inline
| `-ParmVarDecl 0x55f5da6c3600 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f5da6c37d8 <line:166:5, col:37> col:21 at 'const Router::element_landmark_t &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55f5da6c3748 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f5da6c3908 <line:167:5, col:21> col:15 front 'Router::element_landmark_t &()' inline
|-CXXMethodDecl 0x55f5da6c3a38 <line:168:5, col:29> col:21 front 'const Router::element_landmark_t &() const' inline
|-CXXMethodDecl 0x55f5da6c3b08 <line:169:5, col:20> col:15 back 'Router::element_landmark_t &()' inline
|-CXXMethodDecl 0x55f5da6c3bd8 <line:170:5, col:28> col:21 back 'const Router::element_landmark_t &() const' inline
|-CXXMethodDecl 0x55f5da6c3d18 <line:172:5, col:39> col:15 unchecked_at 'Router::element_landmark_t &(Vector::size_type)' inline
| `-ParmVarDecl 0x55f5da6c3c88 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f5da6c3e60 <line:173:5, col:47> col:21 unchecked_at 'const Router::element_landmark_t &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55f5da6c3dd0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f5da6c3fa8 <line:174:5, col:59> col:15 at_u 'Router::element_landmark_t &(Vector::size_type)' inline
| |-ParmVarDecl 0x55f5da6c3f18 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55f5da6c4060 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55f5da6c4160 <line:175:5, col:71> col:21 at_u 'const Router::element_landmark_t &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55f5da6c40d0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55f5da6c4218 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55f5da6c42d8 <line:177:5, col:20> col:15 data 'Router::element_landmark_t *()' inline
|-CXXMethodDecl 0x55f5da6c43d8 <line:178:5, col:28> col:21 data 'const Router::element_landmark_t *() const' inline
|-CXXMethodDecl 0x55f5da6c4558 <line:180:5, col:48> col:17 push_back 'void (Vector<Router::element_landmark_t>::value_argument_type)' inline
| `-ParmVarDecl 0x55f5da6c4498 <col:27, col:47> col:47 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-FunctionTemplateDecl 0x55f5da6c4ce8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55f5da6c4610 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Router::element_landmark_t>':'fast_argument<Router::element_landmark_t, true>'
| `-CXXMethodDecl 0x55f5da6c4c48 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Router::element_landmark_t &&)' inline
|   `-ParmVarDecl 0x55f5da6c4b48 <col:58, col:62> col:62 v 'Router::element_landmark_t &&'
|-CXXMethodDecl 0x55f5da6c4dc8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55f5da6c4f18 <line:186:5, col:49> col:17 push_front 'void (Vector<Router::element_landmark_t>::value_argument_type)' inline
| `-ParmVarDecl 0x55f5da6c4e88 <col:28, col:48> col:48 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXMethodDecl 0x55f5da6c4fd0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55f5da6c5218 <line:189:5, col:62> col:21 insert 'Vector<Router::element_landmark_t>::iterator (Vector<Router::element_landmark_t>::iterator, Vector<Router::element_landmark_t>::value_argument_type)' inline
| |-ParmVarDecl 0x55f5da6c5090 <col:28, col:37> col:37 it 'Vector<Router::element_landmark_t>::iterator':'Router::element_landmark_t *'
| `-ParmVarDecl 0x55f5da6c5108 <col:41, col:61> col:61 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXMethodDecl 0x55f5da6c53a8 <line:190:5, col:38> col:21 erase 'Vector<Router::element_landmark_t>::iterator (Vector<Router::element_landmark_t>::iterator)' inline
| `-ParmVarDecl 0x55f5da6c52e8 <col:27, col:36> col:36 it 'Vector<Router::element_landmark_t>::iterator':'Router::element_landmark_t *'
|-CXXMethodDecl 0x55f5da6c55b8 <line:191:5, col:49> col:21 erase 'Vector<Router::element_landmark_t>::iterator (Vector<Router::element_landmark_t>::iterator, Vector<Router::element_landmark_t>::iterator)' inline
| |-ParmVarDecl 0x55f5da6c5470 <col:27, col:36> col:36 a 'Vector<Router::element_landmark_t>::iterator':'Router::element_landmark_t *'
| `-ParmVarDecl 0x55f5da6c54e8 <col:39, col:48> col:48 b 'Vector<Router::element_landmark_t>::iterator':'Router::element_landmark_t *'
|-CXXMethodDecl 0x55f5da6c5678 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55f5da6c58d8 <line:195:5, col:34> col:17 swap 'void (Vector<Router::element_landmark_t> &)' inline
| `-ParmVarDecl 0x55f5da6c57e0 <col:22, col:33> col:33 x 'Vector<Router::element_landmark_t> &'
`-CXXDestructorDecl 0x55f5da6c59a8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55f5da6c59a8

Layout: <CGRecordLayout
  LLVMType:%class.Vector.6 = type { %class.vector_memory.7 }
  NonVirtualBaseLLVMType:%class.Vector.6 = type { %class.vector_memory.7 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55f5da54eab0 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<16>'
|-CXXRecordDecl 0x55f5da54ec88 prev 0x55f5da54eab0 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55f5da54ed18 <col:46, col:52> col:46 public
|-TypedefDecl 0x55f5da54ed40 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55f5d9fa93b0 'int'
|-TypedefDecl 0x55f5da554740 <line:13:5, col:31> col:31 type 'typename sized_array_memory<16>::type':'char_array<16>'
| `-ElaboratedType 0x55f5da5546f0 'typename sized_array_memory<16>::type' sugar
|   `-TypedefType 0x55f5da54f1f0 'sized_array_memory<16>::type' sugar
|     |-Typedef 0x55f5da54f0f0 'type'
|     `-TemplateSpecializationType 0x55f5da54f080 'char_array<16UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x55f5da54ef60 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 16
|       |   `-SubstNonTypeTemplateParmExpr 0x55f5da54ef40 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x55f5da54ef20 <col:24> 'unsigned long' 16
|       `-RecordType 0x55f5da54f060 'char_array<16>'
|         `-ClassTemplateSpecialization 0x55f5da54ef80 'char_array'
|-TypedefDecl 0x55f5da5547f8 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<16> >::type *'
| `-PointerType 0x55f5da5547c0 'vector_memory<sized_array_memory<16> >::type *'
|   `-TypedefType 0x55f5da5547a0 'vector_memory<sized_array_memory<16> >::type' sugar
|     |-Typedef 0x55f5da554740 'type'
|     `-ElaboratedType 0x55f5da5546f0 'typename sized_array_memory<16>::type' sugar
|       `-TypedefType 0x55f5da54f1f0 'sized_array_memory<16>::type' sugar
|         |-Typedef 0x55f5da54f0f0 'type'
|         `-TemplateSpecializationType 0x55f5da54f080 'char_array<16UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x55f5da54ef60 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 16
|           |   `-SubstNonTypeTemplateParmExpr 0x55f5da54ef40 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x55f5da54ef20 <col:24> 'unsigned long' 16
|           `-RecordType 0x55f5da54f060 'char_array<16>'
|             `-ClassTemplateSpecialization 0x55f5da54ef80 'char_array'
|-CXXMethodDecl 0x55f5da554978 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<16> >::type *) const' inline
| `-ParmVarDecl 0x55f5da554888 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXConstructorDecl 0x55f5da554a68 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55f5da554b48 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x55f5da554b48
|-CXXMethodDecl 0x55f5da554e18 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<16> > &)'
| `-ParmVarDecl 0x55f5da554d20 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<16> > &'
|-CXXMethodDecl 0x55f5da555058 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x55f5da554ed0 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55f5da554f48 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55f5da555228 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x55f5da555118 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55f5da555190 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55f5da555388 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<16> >::iterator ()'
|-CXXMethodDecl 0x55f5da555458 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<16> >::iterator ()'
|-CXXMethodDecl 0x55f5da5556a8 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<16> >::iterator (vector_memory<sized_array_memory<16> >::iterator, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x55f5da555518 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
| `-ParmVarDecl 0x55f5da555590 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55f5da555908 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<16> >::iterator (vector_memory<sized_array_memory<16> >::iterator, vector_memory<sized_array_memory<16> >::iterator)'
| |-ParmVarDecl 0x55f5da555778 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
| `-ParmVarDecl 0x55f5da5557f0 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55f5da555ac8 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<16> >::type *)' inline
| `-ParmVarDecl 0x55f5da5559d8 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55f5da555c88 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<16> >::type *)' inline
| `-ParmVarDecl 0x55f5da555b90 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55f5da555d40 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55f5da555df0 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55f5da556028 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x55f5da555ea0 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55f5da555f18 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55f5da5562c8 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<16> > &)'
| `-ParmVarDecl 0x55f5da5561d0 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<16> > &'
|-FieldDecl 0x55f5da556390 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<16> >::type *'
|-FieldDecl 0x55f5da5563e0 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55f5da556430 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.9 = type { %struct.char_array.10*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.9 = type { %struct.char_array.10*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55f5da6c60c0 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Router::Connection'
|-CXXRecordDecl 0x55f5da6c62c8 prev 0x55f5da6c60c0 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55f5da6c7390 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<Connection>::type':'sized_array_memory<16>'
| `-ElaboratedType 0x55f5da6c7340 'typename array_memory<Connection>::type' sugar
|   `-TypedefType 0x55f5da6c7320 'conditional<true, sized_array_memory<16>, typed_array_memory<Router::Connection> >::type' sugar
|     |-Typedef 0x55f5da6c71d0 'type'
|     `-SubstTemplateTypeParmType 0x55f5da54e680 'sized_array_memory<16>' sugar
|       |-TemplateTypeParmType 0x55f5da273cd0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f5da273c78 'T'
|       `-RecordType 0x55f5da54e1d0 'sized_array_memory<16>'
|         `-ClassTemplateSpecialization 0x55f5da54e0e8 'sized_array_memory'
|-FieldDecl 0x55f5da6c7490 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Router::Connection>::array_memory_type>':'vector_memory<sized_array_memory<16> >' mutable
|-AccessSpecDecl 0x55f5da6c74e0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55f5da6c7518 <line:118:5, col:15> col:15 value_type 'Router::Connection':'Router::Connection'
| `-SubstTemplateTypeParmType 0x55f5da6c6360 'Router::Connection' sugar
|   |-TemplateTypeParmType 0x55f5da2ab9c0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55f5da2ab968 'T'
|   `-RecordType 0x55f5da6aacf0 'Router::Connection'
|     `-CXXRecord 0x55f5da6aac60 'Connection'
|-TypedefDecl 0x55f5da6c75d8 <line:119:5, col:16> col:16 reference 'Router::Connection &'
| `-LValueReferenceType 0x55f5da6c75a0 'Router::Connection &'
|   `-SubstTemplateTypeParmType 0x55f5da6c6360 'Router::Connection' sugar
|     |-TemplateTypeParmType 0x55f5da2ab9c0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55f5da2ab968 'T'
|     `-RecordType 0x55f5da6aacf0 'Router::Connection'
|       `-CXXRecord 0x55f5da6aac60 'Connection'
|-TypedefDecl 0x55f5da6c7668 <line:120:5, col:22> col:22 const_reference 'const Router::Connection &'
| `-LValueReferenceType 0x55f5da6c7630 'const Router::Connection &'
|   `-QualType 0x55f5da6c6361 'const Router::Connection' const
|     `-SubstTemplateTypeParmType 0x55f5da6c6360 'Router::Connection' sugar
|       |-TemplateTypeParmType 0x55f5da2ab9c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f5da2ab968 'T'
|       `-RecordType 0x55f5da6aacf0 'Router::Connection'
|         `-CXXRecord 0x55f5da6aac60 'Connection'
|-TypedefDecl 0x55f5da6c76f8 <line:121:5, col:16> col:16 pointer 'Router::Connection *'
| `-PointerType 0x55f5da6c76c0 'Router::Connection *'
|   `-SubstTemplateTypeParmType 0x55f5da6c6360 'Router::Connection' sugar
|     |-TemplateTypeParmType 0x55f5da2ab9c0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55f5da2ab968 'T'
|     `-RecordType 0x55f5da6aacf0 'Router::Connection'
|       `-CXXRecord 0x55f5da6aac60 'Connection'
|-TypedefDecl 0x55f5da6c7788 <line:122:5, col:22> col:22 const_pointer 'const Router::Connection *'
| `-PointerType 0x55f5da6c7750 'const Router::Connection *'
|   `-QualType 0x55f5da6c6361 'const Router::Connection' const
|     `-SubstTemplateTypeParmType 0x55f5da6c6360 'Router::Connection' sugar
|       |-TemplateTypeParmType 0x55f5da2ab9c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f5da2ab968 'T'
|       `-RecordType 0x55f5da6aacf0 'Router::Connection'
|         `-CXXRecord 0x55f5da6aac60 'Connection'
|-TypedefDecl 0x55f5da6c83e0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<Connection>::type':'const Router::Connection &'
| `-ElaboratedType 0x55f5da6c8390 'typename fast_argument<Connection>::type' sugar
|   `-TypedefType 0x55f5da6c8370 'fast_argument<Router::Connection, true>::type' sugar
|     |-Typedef 0x55f5da6c82a8 'type'
|     `-LValueReferenceType 0x55f5da6c8270 'const Router::Connection &'
|       `-QualType 0x55f5da6c8011 'const Router::Connection' const
|         `-SubstTemplateTypeParmType 0x55f5da6c8010 'Router::Connection' sugar
|           |-TemplateTypeParmType 0x55f5da27e3a0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55f5da27e348 'T'
|           `-RecordType 0x55f5da6aacf0 'Router::Connection'
|             `-CXXRecord 0x55f5da6aac60 'Connection'
|-TypedefDecl 0x55f5da6c8448 <line:126:5, col:22> col:22 const_access_type 'const Router::Connection &'
| `-LValueReferenceType 0x55f5da6c7630 'const Router::Connection &'
|   `-QualType 0x55f5da6c6361 'const Router::Connection' const
|     `-SubstTemplateTypeParmType 0x55f5da6c6360 'Router::Connection' sugar
|       |-TemplateTypeParmType 0x55f5da2ab9c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f5da2ab968 'T'
|       `-RecordType 0x55f5da6aacf0 'Router::Connection'
|         `-CXXRecord 0x55f5da6aac60 'Connection'
|-TypedefDecl 0x55f5da6c84a0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55f5d9fa93b0 'int'
|-TypedefDecl 0x55f5da6c8508 <line:130:5, col:16> col:16 iterator 'Router::Connection *'
| `-PointerType 0x55f5da6c76c0 'Router::Connection *'
|   `-SubstTemplateTypeParmType 0x55f5da6c6360 'Router::Connection' sugar
|     |-TemplateTypeParmType 0x55f5da2ab9c0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55f5da2ab968 'T'
|     `-RecordType 0x55f5da6aacf0 'Router::Connection'
|       `-CXXRecord 0x55f5da6aac60 'Connection'
|-TypedefDecl 0x55f5da6c8570 <line:131:5, col:22> col:22 const_iterator 'const Router::Connection *'
| `-PointerType 0x55f5da6c7750 'const Router::Connection *'
|   `-QualType 0x55f5da6c6361 'const Router::Connection' const
|     `-SubstTemplateTypeParmType 0x55f5da6c6360 'Router::Connection' sugar
|       |-TemplateTypeParmType 0x55f5da2ab9c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f5da2ab968 'T'
|       `-RecordType 0x55f5da6aacf0 'Router::Connection'
|         `-CXXRecord 0x55f5da6aac60 'Connection'
|-EnumDecl 0x55f5da6c85c8 <line:134:5> col:5
| `-EnumConstantDecl 0x55f5da6c86c0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Router::Connection>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55f5da6c86a0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55f5da2ad048 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55f5da2ad020 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55f5da2ad000 <col:40> 'int' 1
|-CXXConstructorDecl 0x55f5da6c8748 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55f5da6c89d8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Router::Connection>::value_argument_type)' inline
| |-ParmVarDecl 0x55f5da6c8800 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55f5da6c88a0 <col:41, col:61> col:61 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXConstructorDecl 0x55f5da6c8c98 <line:139:5, col:37> col:12 Vector 'void (const Vector<Router::Connection> &)' inline
| `-ParmVarDecl 0x55f5da6c8b80 <col:19, col:36> col:36 x 'const Vector<Router::Connection> &'
|-CXXConstructorDecl 0x55f5da6c8f58 <line:141:5, col:32> col:12 Vector 'void (Vector<Router::Connection> &&)' inline
| `-ParmVarDecl 0x55f5da6c8e40 <col:19, col:31> col:31 x 'Vector<Router::Connection> &&'
|-CXXMethodDecl 0x55f5da6c92a0 <line:144:5, col:51> col:23 operator= 'Vector<Router::Connection> &(const Vector<Router::Connection> &)' inline
| `-ParmVarDecl 0x55f5da6c9180 <col:33, col:50> col:50 x 'const Vector<Router::Connection> &'
|-CXXMethodDecl 0x55f5da6c95b0 <line:146:5, col:46> col:23 operator= 'Vector<Router::Connection> &(Vector<Router::Connection> &&)' inline
| `-ParmVarDecl 0x55f5da6c9490 <col:33, col:45> col:45 x 'Vector<Router::Connection> &&'
|-CXXMethodDecl 0x55f5da6c98a0 <line:148:5, col:70> col:23 assign 'Vector<Router::Connection> &(Vector::size_type, Vector<Router::Connection>::value_argument_type)' inline
| |-ParmVarDecl 0x55f5da6c96e8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55f5da6c9760 <col:43, col:69> col:63 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXMethodDecl 0x55f5da6c99f8 <line:150:5, col:55> col:49 begin 'Vector<Router::Connection>::iterator ()'
| |-NoInlineAttr 0x55f5da6c9ad8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f5da6c9b30 <col:30> Inherited
|-CXXMethodDecl 0x55f5da6c9b78 <line:151:5, col:53> col:49 end 'Vector<Router::Connection>::iterator ()'
| |-NoInlineAttr 0x55f5da6c9c28 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f5da6c9c80 <col:30> Inherited
|-CXXMethodDecl 0x55f5da6c9d48 <line:152:5, col:63> col:55 begin 'Vector<Router::Connection>::const_iterator () const'
| |-NoInlineAttr 0x55f5da6c9df8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f5da6c9e50 <col:30> Inherited
|-CXXMethodDecl 0x55f5da6c9e98 <line:153:5, col:61> col:55 end 'Vector<Router::Connection>::const_iterator () const'
| |-NoInlineAttr 0x55f5da6c9f48 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f5da6c9fa0 <col:30> Inherited
|-CXXMethodDecl 0x55f5da6cac30 <line:154:5, col:64> col:55 cbegin 'Vector<Router::Connection>::const_iterator () const'
| |-NoInlineAttr 0x55f5da6cace0 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f5da6cad38 <col:30> Inherited
|-CXXMethodDecl 0x55f5da6cad80 <line:155:5, col:62> col:55 cend 'Vector<Router::Connection>::const_iterator () const'
| |-NoInlineAttr 0x55f5da6cae30 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f5da6cae88 <col:30> Inherited
|-CXXMethodDecl 0x55f5da6caeb0 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55f5da6caf60 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55f5da6cb010 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55f5da6cb1d0 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Router::Connection>::value_argument_type)' inline
| |-ParmVarDecl 0x55f5da6cb0c0 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55f5da6cb138 <col:37, col:63> col:57 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXMethodDecl 0x55f5da6cb320 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55f5da6cb290 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f5da6cb4c8 <line:163:5, col:65> col:43 operator[] 'Router::Connection &(Vector::size_type)'
| |-ParmVarDecl 0x55f5da6cb3d8 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55f5da6cb580 <col:20>
| `-OptimizeNoneAttr 0x55f5da6cb5d8 <col:30>
|-CXXMethodDecl 0x55f5da6cb6f8 <line:164:5, col:73> col:49 operator[] 'const Router::Connection &(Vector::size_type) const'
| |-ParmVarDecl 0x55f5da6cb600 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55f5da6cb7b0 <col:20>
| `-OptimizeNoneAttr 0x55f5da6cb808 <col:30>
|-CXXMethodDecl 0x55f5da6cb8c0 <line:165:5, col:29> col:15 at 'Router::Connection &(Vector::size_type)' inline
| `-ParmVarDecl 0x55f5da6cb830 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f5da6cba08 <line:166:5, col:37> col:21 at 'const Router::Connection &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55f5da6cb978 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f5da6cbb38 <line:167:5, col:21> col:15 front 'Router::Connection &()' inline
|-CXXMethodDecl 0x55f5da6cbc68 <line:168:5, col:29> col:21 front 'const Router::Connection &() const' inline
|-CXXMethodDecl 0x55f5da6cbd38 <line:169:5, col:20> col:15 back 'Router::Connection &()' inline
|-CXXMethodDecl 0x55f5da6cbe08 <line:170:5, col:28> col:21 back 'const Router::Connection &() const' inline
|-CXXMethodDecl 0x55f5da6cbf48 <line:172:5, col:39> col:15 unchecked_at 'Router::Connection &(Vector::size_type)' inline
| `-ParmVarDecl 0x55f5da6cbeb8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f5da6cc090 <line:173:5, col:47> col:21 unchecked_at 'const Router::Connection &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55f5da6cc000 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f5da6cc1d8 <line:174:5, col:59> col:15 at_u 'Router::Connection &(Vector::size_type)' inline
| |-ParmVarDecl 0x55f5da6cc148 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55f5da6cc290 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55f5da6cc390 <line:175:5, col:71> col:21 at_u 'const Router::Connection &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55f5da6cc300 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55f5da6cc448 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55f5da6cc508 <line:177:5, col:20> col:15 data 'Router::Connection *()' inline
|-CXXMethodDecl 0x55f5da6cc608 <line:178:5, col:28> col:21 data 'const Router::Connection *() const' inline
|-CXXMethodDecl 0x55f5da6cc7b8 <line:180:5, col:48> col:17 push_back 'void (Vector<Router::Connection>::value_argument_type)' inline
| `-ParmVarDecl 0x55f5da6cc6c8 <col:27, col:47> col:47 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-FunctionTemplateDecl 0x55f5da6ccf78 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55f5da6cc870 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Router::Connection>':'fast_argument<Router::Connection, true>'
| `-CXXMethodDecl 0x55f5da6cced8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Router::Connection &&)' inline
|   `-ParmVarDecl 0x55f5da6ccdd8 <col:58, col:62> col:62 v 'Router::Connection &&'
|-CXXMethodDecl 0x55f5da6cd058 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55f5da6cd1a8 <line:186:5, col:49> col:17 push_front 'void (Vector<Router::Connection>::value_argument_type)' inline
| `-ParmVarDecl 0x55f5da6cd118 <col:28, col:48> col:48 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXMethodDecl 0x55f5da6cd260 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55f5da6cd4a8 <line:189:5, col:62> col:21 insert 'Vector<Router::Connection>::iterator (Vector<Router::Connection>::iterator, Vector<Router::Connection>::value_argument_type)' inline
| |-ParmVarDecl 0x55f5da6cd320 <col:28, col:37> col:37 it 'Vector<Router::Connection>::iterator':'Router::Connection *'
| `-ParmVarDecl 0x55f5da6cd398 <col:41, col:61> col:61 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXMethodDecl 0x55f5da6cd668 <line:190:5, col:38> col:21 erase 'Vector<Router::Connection>::iterator (Vector<Router::Connection>::iterator)' inline
| `-ParmVarDecl 0x55f5da6cd578 <col:27, col:36> col:36 it 'Vector<Router::Connection>::iterator':'Router::Connection *'
|-CXXMethodDecl 0x55f5da6cd8b8 <line:191:5, col:49> col:21 erase 'Vector<Router::Connection>::iterator (Vector<Router::Connection>::iterator, Vector<Router::Connection>::iterator)' inline
| |-ParmVarDecl 0x55f5da6cd730 <col:27, col:36> col:36 a 'Vector<Router::Connection>::iterator':'Router::Connection *'
| `-ParmVarDecl 0x55f5da6cd7a8 <col:39, col:48> col:48 b 'Vector<Router::Connection>::iterator':'Router::Connection *'
|-CXXMethodDecl 0x55f5da6cd978 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55f5da6cdbd8 <line:195:5, col:34> col:17 swap 'void (Vector<Router::Connection> &)' inline
| `-ParmVarDecl 0x55f5da6cdae0 <col:22, col:33> col:33 x 'Vector<Router::Connection> &'
`-CXXDestructorDecl 0x55f5da6cdca8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55f5da6cdca8

Layout: <CGRecordLayout
  LLVMType:%class.Vector.8 = type { %class.vector_memory.9 }
  NonVirtualBaseLLVMType:%class.Vector.8 = type { %class.vector_memory.9 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | union Handler::(anonymous at ../dummy_inc/click/handler.hh:290:5)
         0 |   HandlerCallback h
         0 |   ReadHandlerCallback r
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | union Handler::(anonymous at ../dummy_inc/click/handler.hh:294:5)
         0 |   HandlerCallback h
         0 |   WriteHandlerCallback w
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Handler
         0 |   class String _name
         0 |     struct String::rep_t _r
         0 |       const char * data
         8 |       int length
        16 |       struct String::memo_t * memo
        24 |   union Handler::(anonymous at ../dummy_inc/click/handler.hh:290:5) _read_hook
        24 |     HandlerCallback h
        24 |     ReadHandlerCallback r
        32 |   union Handler::(anonymous at ../dummy_inc/click/handler.hh:294:5) _write_hook
        32 |     HandlerCallback h
        32 |     WriteHandlerCallback w
        40 |   void * _read_user_data
        48 |   void * _write_user_data
        56 |   uint32_t _flags
        60 |   int _use_count
        64 |   int _next_by_name
           | [sizeof=72, dsize=68, align=8,
           |  nvsize=68, nvalign=8]

*** Dumping AST Record Layout
         0 | class ErrorHandler
         0 |   (ErrorHandler vtable pointer)
         8 |   int _nerrors
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f5da4c98b8 prev 0x55f5da620a48 <../dummy_inc/click/error.hh:90:1, line:592:1> line:90:7 referenced class ErrorHandler definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55f5da4c99b0 <col:1, col:7> col:7 implicit referenced class ErrorHandler
|-AccessSpecDecl 0x55f5da4c9a40 <col:22, col:28> col:22 public
|-EnumDecl 0x55f5da4c9a68 <line:98:5, line:111:5> line:98:10 Level
| |-EnumConstantDecl 0x55f5da4c9b88 <line:99:2, col:14> col:2 el_abort 'ErrorHandler::Level'
| | `-ConstantExpr 0x55f5da4c9b68 <col:13, col:14> 'int' Int: -999
| |   `-UnaryOperator 0x55f5da4c9b50 <col:13, col:14> 'int' prefix '-'
| |     `-IntegerLiteral 0x55f5da4c9b30 <col:14> 'int' 999
| |-EnumConstantDecl 0x55f5da4c9c30 <line:100:2, col:14> col:2 el_fatal 'ErrorHandler::Level'
| | `-ConstantExpr 0x55f5da4c9c10 <col:13, col:14> 'int' Int: -1
| |   `-UnaryOperator 0x55f5da4c9bf8 <col:13, col:14> 'int' prefix '-'
| |     `-IntegerLiteral 0x55f5da4c9bd8 <col:14> 'int' 1
| |-EnumConstantDecl 0x55f5da4c9cc0 <line:102:2, col:17> col:2 el_emergency 'ErrorHandler::Level'
| | `-ConstantExpr 0x55f5da4c9ca0 <col:17> 'int' Int: 0
| |   `-IntegerLiteral 0x55f5da4c9c80 <col:17> 'int' 0
| |-EnumConstantDecl 0x55f5da4c9d50 <line:103:2, col:13> col:2 el_alert 'ErrorHandler::Level'
| | `-ConstantExpr 0x55f5da4c9d30 <col:13> 'int' Int: 1
| |   `-IntegerLiteral 0x55f5da4c9d10 <col:13> 'int' 1
| |-EnumConstantDecl 0x55f5da4c9de0 <line:104:2, col:16> col:2 el_critical 'ErrorHandler::Level'
| | `-ConstantExpr 0x55f5da4c9dc0 <col:16> 'int' Int: 2
| |   `-IntegerLiteral 0x55f5da4c9da0 <col:16> 'int' 2
| |-EnumConstantDecl 0x55f5da4c9e70 <line:105:2, col:13> col:2 referenced el_error 'ErrorHandler::Level'
| | `-ConstantExpr 0x55f5da4c9e50 <col:13> 'int' Int: 3
| |   `-IntegerLiteral 0x55f5da4c9e30 <col:13> 'int' 3
| |-EnumConstantDecl 0x55f5da4c9f00 <line:106:2, col:15> col:2 el_warning 'ErrorHandler::Level'
| | `-ConstantExpr 0x55f5da4c9ee0 <col:15> 'int' Int: 4
| |   `-IntegerLiteral 0x55f5da4c9ec0 <col:15> 'int' 4
| |-EnumConstantDecl 0x55f5da4c9f90 <line:107:2, col:14> col:2 el_notice 'ErrorHandler::Level'
| | `-ConstantExpr 0x55f5da4c9f70 <col:14> 'int' Int: 5
| |   `-IntegerLiteral 0x55f5da4c9f50 <col:14> 'int' 5
| |-EnumConstantDecl 0x55f5da4ca020 <line:109:2, col:12> col:2 el_info 'ErrorHandler::Level'
| | `-ConstantExpr 0x55f5da4ca000 <col:12> 'int' Int: 6
| |   `-IntegerLiteral 0x55f5da4c9fe0 <col:12> 'int' 6
| `-EnumConstantDecl 0x55f5da4ca0b0 <line:110:2, col:13> col:2 el_debug 'ErrorHandler::Level'
|   `-ConstantExpr 0x55f5da4ca090 <col:13> 'int' Int: 7
|     `-IntegerLiteral 0x55f5da4ca070 <col:13> 'int' 7
|-VarDecl 0x55f5da4ca120 <line:114:5, col:31> col:23 e_abort 'const char []' static
|-VarDecl 0x55f5da4ca1a8 <col:5, line:115:10> col:2 e_fatal 'const char []' static
|-VarDecl 0x55f5da4ca230 <line:114:5, line:116:14> col:2 e_emergency 'const char []' static
|-VarDecl 0x55f5da4ca2b8 <line:114:5, line:117:10> col:2 e_alert 'const char []' static
|-VarDecl 0x55f5da4ca340 <line:114:5, line:118:13> col:2 e_critical 'const char []' static
|-VarDecl 0x55f5da4ca3c8 <line:114:5, line:119:10> col:2 e_error 'const char []' static
|-VarDecl 0x55f5da4ca450 <line:114:5, line:120:12> col:2 e_warning 'const char []' static
|-VarDecl 0x55f5da4ca4d8 <line:114:5, line:121:22> col:2 e_warning_annotated 'const char []' static
|-VarDecl 0x55f5da4ca560 <line:114:5, line:122:11> col:2 e_notice 'const char []' static
|-VarDecl 0x55f5da4ca5e8 <line:114:5, line:123:9> col:2 e_info 'const char []' static
|-VarDecl 0x55f5da4ca670 <line:114:5, line:124:10> col:2 e_debug 'const char []' static
|-CXXConstructorDecl 0x55f5da4ca770 <line:127:5, line:129:5> line:127:5 used ErrorHandler 'void ()'
| |-CXXCtorInitializer Field 0x55f5da69e278 '_nerrors' 'int'
| | `-IntegerLiteral 0x55f5da69ea08 <line:128:13> 'int' 0
| `-CompoundStmt 0x55f5da69ea78 <col:16, line:129:5>
|-CXXDestructorDecl 0x55f5da4ca860 <line:131:5, line:132:5> line:131:13 used ~ErrorHandler 'void () noexcept' virtual
| `-CompoundStmt 0x55f5da69ea88 <col:29, line:132:5>
|-CXXMethodDecl 0x55f5da4caa18 <line:148:5, col:62> col:26 static_initialize 'ErrorHandler *(ErrorHandler *)' static
| `-ParmVarDecl 0x55f5da4ca950 <col:44, col:58> col:58 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55f5da4caae0 <line:154:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x55f5da4cabc8 <line:159:5, line:161:5> line:159:26 default_handler 'ErrorHandler *()' static
| `-CompoundStmt 0x55f5da69eae0 <col:44, line:161:5>
|   `-ReturnStmt 0x55f5da69ead0 <line:160:2, col:9>
|     `-ImplicitCastExpr 0x55f5da69eab8 <col:9> 'ErrorHandler *' <LValueToRValue>
|       `-DeclRefExpr 0x55f5da69ea98 <col:9> 'ErrorHandler *' lvalue Var 0x55f5da69e2d8 'the_default_handler' 'ErrorHandler *'
|-CXXMethodDecl 0x55f5da4cad08 <line:168:5, col:55> col:17 set_default_handler 'void (ErrorHandler *)' static
| `-ParmVarDecl 0x55f5da4cac78 <col:37, col:51> col:51 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55f5da4cadd0 <line:171:5, line:173:5> line:171:26 silent_handler 'ErrorHandler *()' static
| `-CompoundStmt 0x55f5da69eb40 <col:43, line:173:5>
|   `-ReturnStmt 0x55f5da69eb30 <line:172:2, col:9>
|     `-ImplicitCastExpr 0x55f5da69eb18 <col:9> 'ErrorHandler *' <LValueToRValue>
|       `-DeclRefExpr 0x55f5da69eaf8 <col:9> 'ErrorHandler *' lvalue Var 0x55f5da69e350 'the_silent_handler' 'ErrorHandler *'
|-VarDecl 0x55f5da4cae88 <line:176:5, col:22> col:22 ok_result 'const int' static
|-VarDecl 0x55f5da4caf08 <line:178:5, col:22> col:22 error_result 'const int' static
|-CXXMethodDecl 0x55f5da4cb018 <line:186:5, col:36> col:10 debug 'void (const char *, ...)'
| `-ParmVarDecl 0x55f5da4caf88 <col:16, col:28> col:28 fmt 'const char *'
|-CXXMethodDecl 0x55f5da4cb168 <line:188:5, col:38> col:10 message 'void (const char *, ...)'
| `-ParmVarDecl 0x55f5da4cb0d8 <col:18, col:30> col:30 fmt 'const char *'
|-CXXMethodDecl 0x55f5da4cb2c0 <line:193:5, col:37> col:9 warning 'int (const char *, ...)'
| `-ParmVarDecl 0x55f5da4cb228 <col:17, col:29> col:29 fmt 'const char *'
|-CXXMethodDecl 0x55f5da4cb418 <line:196:5, col:35> col:9 error 'int (const char *, ...)'
| `-ParmVarDecl 0x55f5da4cb380 <col:15, col:27> col:27 fmt 'const char *'
|-CXXMethodDecl 0x55f5da4cb570 <line:201:5, col:35> col:9 fatal 'int (const char *, ...)'
| `-ParmVarDecl 0x55f5da4cb4d8 <col:15, col:27> col:27 fmt 'const char *'
|-CXXMethodDecl 0x55f5da699fa0 <line:204:5, col:61> col:10 ldebug 'void (const String &, const char *, ...)'
| |-ParmVarDecl 0x55f5da4cb628 <col:17, col:31> col:31 landmark 'const String &'
| `-ParmVarDecl 0x55f5da4cb6a8 <col:41, col:53> col:53 fmt 'const char *'
|-CXXMethodDecl 0x55f5da69a178 <line:206:5, col:63> col:10 lmessage 'void (const String &, const char *, ...)'
| |-ParmVarDecl 0x55f5da69a060 <col:19, col:33> col:33 landmark 'const String &'
| `-ParmVarDecl 0x55f5da69a0e0 <col:43, col:55> col:55 fmt 'const char *'
|-CXXMethodDecl 0x55f5da69a398 <line:208:5, col:62> col:9 lwarning 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x55f5da69a238 <col:18, col:32> col:32 landmark 'const String &'
| `-ParmVarDecl 0x55f5da69a2b8 <col:42, col:54> col:54 fmt 'const char *'
|-CXXMethodDecl 0x55f5da69a578 <line:210:5, col:60> col:9 lerror 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x55f5da69a458 <col:16, col:30> col:30 landmark 'const String &'
| `-ParmVarDecl 0x55f5da69a4d8 <col:40, col:52> col:52 fmt 'const char *'
|-CXXMethodDecl 0x55f5da69a758 <line:212:5, col:60> col:9 lfatal 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x55f5da69a638 <col:16, col:30> col:30 landmark 'const String &'
| `-ParmVarDecl 0x55f5da69a6b8 <col:40, col:52> col:52 fmt 'const char *'
|-CXXMethodDecl 0x55f5da69a8e0 <line:226:5, col:35> col:9 used xmessage 'int (const String &)'
| `-ParmVarDecl 0x55f5da69a818 <col:18, col:32> col:32 str 'const String &'
|-CXXMethodDecl 0x55f5da69aab0 <line:232:5, line:234:5> line:232:9 used xmessage 'int (const String &, const String &)'
| |-ParmVarDecl 0x55f5da69a998 <col:18, col:32> col:32 used anno 'const String &'
| |-ParmVarDecl 0x55f5da69aa10 <col:38, col:52> col:52 used str 'const String &'
| `-CompoundStmt 0x55f5da69ed98 <col:57, line:234:5>
|   `-ReturnStmt 0x55f5da69ed88 <line:233:2, col:41>
|     `-ExprWithCleanups 0x55f5da69ed70 <col:9, col:41> 'int'
|       `-CXXMemberCallExpr 0x55f5da69ed18 <col:9, col:41> 'int'
|         |-MemberExpr 0x55f5da69ece8 <col:9> '<bound member function type>' ->xmessage 0x55f5da69a8e0
|         | `-CXXThisExpr 0x55f5da69ecd8 <col:9> 'ErrorHandler *' implicit this
|         `-MaterializeTemporaryExpr 0x55f5da69ed58 <col:18, col:40> 'const String' lvalue
|           `-ImplicitCastExpr 0x55f5da69ed40 <col:18, col:40> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x55f5da69ecb8 <col:18, col:40> 'String' (CXXTemporary 0x55f5da69ecb8)
|               `-CallExpr 0x55f5da69ec80 <col:18, col:40> 'String'
|                 |-ImplicitCastExpr 0x55f5da69ec68 <col:18> 'String (*)(const String &, const String &)' <FunctionToPointerDecay>
|                 | `-DeclRefExpr 0x55f5da69ebe0 <col:18> 'String (const String &, const String &)' lvalue CXXMethod 0x55f5da69caa8 'combine_anno' 'String (const String &, const String &)'
|                 |-DeclRefExpr 0x55f5da69ec00 <col:31> 'const String' lvalue ParmVar 0x55f5da69aa10 'str' 'const String &'
|                 `-DeclRefExpr 0x55f5da69ec20 <col:36> 'const String' lvalue ParmVar 0x55f5da69a998 'anno' 'const String &'
|-CXXMethodDecl 0x55f5da69ad90 <line:241:5, line:243:5> line:241:9 xmessage 'int (const String &, const char *, __va_list_tag *)'
| |-ParmVarDecl 0x55f5da69ab70 <col:18, col:32> col:32 used anno 'const String &'
| |-ParmVarDecl 0x55f5da69abf0 <col:38, col:50> col:50 used fmt 'const char *'
| |-ParmVarDecl 0x55f5da69ac68 <col:55, col:63> col:63 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x55f5da69f028 <col:68, line:243:5>
|   `-ReturnStmt 0x55f5da69f018 <line:242:2, col:41>
|     `-ExprWithCleanups 0x55f5da69f000 <col:9, col:41> 'int'
|       `-CXXMemberCallExpr 0x55f5da69efa0 <col:9, col:41> 'int'
|         |-MemberExpr 0x55f5da69ef70 <col:9> '<bound member function type>' ->xmessage 0x55f5da69aab0
|         | `-CXXThisExpr 0x55f5da69ef60 <col:9> 'ErrorHandler *' implicit this
|         |-DeclRefExpr 0x55f5da69ee38 <col:18> 'const String' lvalue ParmVar 0x55f5da69ab70 'anno' 'const String &'
|         `-MaterializeTemporaryExpr 0x55f5da69efe8 <col:24, col:40> 'const String' lvalue
|           `-ImplicitCastExpr 0x55f5da69efd0 <col:24, col:40> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x55f5da69ef40 <col:24, col:40> 'String' (CXXTemporary 0x55f5da69ef40)
|               `-CXXMemberCallExpr 0x55f5da69eed8 <col:24, col:40> 'String'
|                 |-MemberExpr 0x55f5da69ee68 <col:24> '<bound member function type>' ->vformat 0x55f5da69bf70
|                 | `-CXXThisExpr 0x55f5da69ee58 <col:24> 'ErrorHandler *' implicit this
|                 |-ImplicitCastExpr 0x55f5da69ef08 <col:32> 'const char *' <LValueToRValue>
|                 | `-DeclRefExpr 0x55f5da69ee98 <col:32> 'const char *' lvalue ParmVar 0x55f5da69abf0 'fmt' 'const char *'
|                 `-ImplicitCastExpr 0x55f5da69ef20 <col:37> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                   `-DeclRefExpr 0x55f5da69eeb8 <col:37> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x55f5da69ac68 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55f5da69b030 <line:251:5, line:254:5> line:251:9 used xmessage 'int (const String &, const String &, const String &)'
| |-ParmVarDecl 0x55f5da69ae58 <col:18, col:32> col:32 used landmark 'const String &'
| |-ParmVarDecl 0x55f5da69aed0 <col:42, col:56> col:56 used anno 'const String &'
| |-ParmVarDecl 0x55f5da69af48 <line:252:4, col:18> col:18 used str 'const String &'
| `-CompoundStmt 0x55f5da69f368 <col:23, line:254:5>
|   `-ReturnStmt 0x55f5da69f358 <line:253:2, col:71>
|     `-ExprWithCleanups 0x55f5da69f340 <col:9, col:71> 'int'
|       `-CXXMemberCallExpr 0x55f5da69f2e0 <col:9, col:71> 'int'
|         |-MemberExpr 0x55f5da69f2b0 <col:9> '<bound member function type>' ->xmessage 0x55f5da69aab0
|         | `-CXXThisExpr 0x55f5da69f2a0 <col:9> 'ErrorHandler *' implicit this
|         |-MaterializeTemporaryExpr 0x55f5da69f328 <col:18, col:65> 'const String' lvalue
|         | `-ImplicitCastExpr 0x55f5da69f310 <col:18, col:65> 'const String' <NoOp>
|         |   `-CXXBindTemporaryExpr 0x55f5da69f260 <col:18, col:65> 'String' (CXXTemporary 0x55f5da69f260)
|         |     `-CallExpr 0x55f5da69f1f8 <col:18, col:65> 'String'
|         |       |-ImplicitCastExpr 0x55f5da69f1e0 <col:18> 'String (*)(const String &, const String &)' <FunctionToPointerDecay>
|         |       | `-DeclRefExpr 0x55f5da69f0c8 <col:18> 'String (const String &, const String &)' lvalue CXXMethod 0x55f5da69caa8 'combine_anno' 'String (const String &, const String &)'
|         |       |-DeclRefExpr 0x55f5da69f0e8 <col:31> 'const String' lvalue ParmVar 0x55f5da69aed0 'anno' 'const String &'
|         |       `-MaterializeTemporaryExpr 0x55f5da69f240 <col:37, col:64> 'const String' lvalue
|         |         `-ImplicitCastExpr 0x55f5da69f228 <col:37, col:64> 'const String' <NoOp>
|         |           `-CXXBindTemporaryExpr 0x55f5da69f1c0 <col:37, col:64> 'String' (CXXTemporary 0x55f5da69f1c0)
|         |             `-CallExpr 0x55f5da69f190 <col:37, col:64> 'String'
|         |               |-ImplicitCastExpr 0x55f5da69f178 <col:37> 'String (*)(const String &)' <FunctionToPointerDecay>
|         |               | `-DeclRefExpr 0x55f5da69f108 <col:37> 'String (const String &)' lvalue CXXMethod 0x55f5da69d0f8 'make_landmark_anno' 'String (const String &)'
|         |               `-DeclRefExpr 0x55f5da69f128 <col:56> 'const String' lvalue ParmVar 0x55f5da69ae58 'landmark' 'const String &'
|         `-DeclRefExpr 0x55f5da69f280 <col:68> 'const String' lvalue ParmVar 0x55f5da69af48 'str' 'const String &'
|-CXXMethodDecl 0x55f5da69b3b0 <line:264:5, line:267:5> line:264:9 xmessage 'int (const String &, const String &, const char *, __va_list_tag *)'
| |-ParmVarDecl 0x55f5da69b0f8 <col:18, col:32> col:32 used landmark 'const String &'
| |-ParmVarDecl 0x55f5da69b170 <col:42, col:56> col:56 used anno 'const String &'
| |-ParmVarDecl 0x55f5da69b1f0 <line:265:4, col:16> col:16 used fmt 'const char *'
| |-ParmVarDecl 0x55f5da69b268 <col:21, col:29> col:29 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x55f5da69f620 <col:34, line:267:5>
|   `-ReturnStmt 0x55f5da69f610 <line:266:2, col:51>
|     `-ExprWithCleanups 0x55f5da69f5f8 <col:9, col:51> 'int'
|       `-CXXMemberCallExpr 0x55f5da69f590 <col:9, col:51> 'int'
|         |-MemberExpr 0x55f5da69f560 <col:9> '<bound member function type>' ->xmessage 0x55f5da69b030
|         | `-CXXThisExpr 0x55f5da69f550 <col:9> 'ErrorHandler *' implicit this
|         |-DeclRefExpr 0x55f5da69f408 <col:18> 'const String' lvalue ParmVar 0x55f5da69b0f8 'landmark' 'const String &'
|         |-DeclRefExpr 0x55f5da69f428 <col:28> 'const String' lvalue ParmVar 0x55f5da69b170 'anno' 'const String &'
|         `-MaterializeTemporaryExpr 0x55f5da69f5e0 <col:34, col:50> 'const String' lvalue
|           `-ImplicitCastExpr 0x55f5da69f5c8 <col:34, col:50> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x55f5da69f530 <col:34, col:50> 'String' (CXXTemporary 0x55f5da69f530)
|               `-CXXMemberCallExpr 0x55f5da69f4c8 <col:34, col:50> 'String'
|                 |-MemberExpr 0x55f5da69f458 <col:34> '<bound member function type>' ->vformat 0x55f5da69bf70
|                 | `-CXXThisExpr 0x55f5da69f448 <col:34> 'ErrorHandler *' implicit this
|                 |-ImplicitCastExpr 0x55f5da69f4f8 <col:42> 'const char *' <LValueToRValue>
|                 | `-DeclRefExpr 0x55f5da69f488 <col:42> 'const char *' lvalue ParmVar 0x55f5da69b1f0 'fmt' 'const char *'
|                 `-ImplicitCastExpr 0x55f5da69f510 <col:47> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                   `-DeclRefExpr 0x55f5da69f4a8 <col:47> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x55f5da69b268 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55f5da69b4c0 <line:286:5, line:288:5> line:286:9 nerrors 'int () const'
| `-CompoundStmt 0x55f5da69f6a0 <col:25, line:288:5>
|   `-ReturnStmt 0x55f5da69f690 <line:287:2, col:9>
|     `-ImplicitCastExpr 0x55f5da69f678 <col:9> 'int' <LValueToRValue>
|       `-MemberExpr 0x55f5da69f648 <col:9> 'const int' lvalue ->_nerrors 0x55f5da69e278
|         `-CXXThisExpr 0x55f5da69f638 <col:9> 'const ErrorHandler *' implicit this
|-CXXMethodDecl 0x55f5da69b6d0 <line:349:5, col:66> col:19 xformat 'String (int, const char *, ...)' static
| |-ParmVarDecl 0x55f5da69b578 <col:27, col:31> col:31 default_flags 'int'
| `-ParmVarDecl 0x55f5da69b5f8 <col:46, col:58> col:58 fmt 'const char *'
|-CXXMethodDecl 0x55f5da69b9b8 <line:351:5, col:75> col:19 used vxformat 'String (int, const char *, __va_list_tag *)' static
| |-ParmVarDecl 0x55f5da69b798 <col:28, col:32> col:32 default_flags 'int'
| |-ParmVarDecl 0x55f5da69b818 <col:47, col:59> col:59 fmt 'const char *'
| `-ParmVarDecl 0x55f5da69b890 <col:64, col:72> col:72 val '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55f5da69bb50 <line:353:5, col:47> col:19 xformat 'String (const char *, ...)' static
| `-ParmVarDecl 0x55f5da69ba88 <col:27, col:39> col:39 fmt 'const char *'
|-CXXMethodDecl 0x55f5da69bd98 <line:355:5, line:357:5> line:355:19 vxformat 'String (const char *, __va_list_tag *)' static
| |-ParmVarDecl 0x55f5da69bc10 <col:28, col:40> col:40 used fmt 'const char *'
| |-ParmVarDecl 0x55f5da69bc88 <col:45, col:53> col:53 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x55f5da69f900 <col:58, line:357:5>
|   `-ReturnStmt 0x55f5da69f8f0 <line:356:2, col:29>
|     `-ExprWithCleanups 0x55f5da69f8d8 <col:9, col:29> 'String'
|       `-CXXConstructExpr 0x55f5da69f8a8 <col:9, col:29> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x55f5da69f890 <col:9, col:29> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x55f5da69f870 <col:9, col:29> 'String' (CXXTemporary 0x55f5da69f870)
|             `-CallExpr 0x55f5da69f800 <col:9, col:29> 'String'
|               |-ImplicitCastExpr 0x55f5da69f7e8 <col:9> 'String (*)(int, const char *, __va_list_tag *)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x55f5da69f768 <col:9> 'String (int, const char *, __va_list_tag *)' lvalue CXXMethod 0x55f5da69b9b8 'vxformat' 'String (int, const char *, __va_list_tag *)'
|               |-IntegerLiteral 0x55f5da69f708 <col:18> 'int' 0
|               |-ImplicitCastExpr 0x55f5da69f838 <col:21> 'const char *' <LValueToRValue>
|               | `-DeclRefExpr 0x55f5da69f728 <col:21> 'const char *' lvalue ParmVar 0x55f5da69bc10 'fmt' 'const char *'
|               `-ImplicitCastExpr 0x55f5da69f850 <col:26> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                 `-DeclRefExpr 0x55f5da69f748 <col:26> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x55f5da69bc88 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55f5da69bf70 <line:369:5, col:56> col:20 used vformat 'String (const char *, __va_list_tag *)' virtual
| |-ParmVarDecl 0x55f5da69be60 <col:28, col:40> col:40 fmt 'const char *'
| `-ParmVarDecl 0x55f5da69bed8 <col:45, col:53> col:53 val '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55f5da69c0c8 <line:379:5, col:39> col:12 format 'String (const char *, ...)'
| `-ParmVarDecl 0x55f5da69c038 <col:19, col:31> col:31 fmt 'const char *'
|-CXXMethodDecl 0x55f5da69c210 <line:393:5, col:46> col:20 decorate 'String (const String &)' virtual
| `-ParmVarDecl 0x55f5da69c180 <col:29, col:43> col:43 str 'const String &'
|-CXXMethodDecl 0x55f5da69c4b0 <line:424:5, col:69> col:19 emit 'void *(const String &, void *, bool)' virtual
| |-ParmVarDecl 0x55f5da69c2c8 <col:24, col:38> col:38 str 'const String &'
| |-ParmVarDecl 0x55f5da69c348 <col:43, col:49> col:49 user_data 'void *'
| `-ParmVarDecl 0x55f5da69c3c0 <col:60, col:65> col:65 more 'bool'
|-CXXMethodDecl 0x55f5da69c610 <line:438:5, line:441:5> line:438:18 account 'void (int)' virtual
| |-ParmVarDecl 0x55f5da69c580 <col:26, col:30> col:30 used level 'int'
| `-CompoundStmt 0x55f5da69fa18 <col:37, line:441:5>
|   `-IfStmt 0x55f5da69fa00 <line:439:2, line:440:8>
|     |-BinaryOperator 0x55f5da69f988 <line:439:6, col:15> 'bool' '<='
|     | |-ImplicitCastExpr 0x55f5da69f958 <col:6> 'int' <LValueToRValue>
|     | | `-DeclRefExpr 0x55f5da69f918 <col:6> 'int' lvalue ParmVar 0x55f5da69c580 'level' 'int'
|     | `-ImplicitCastExpr 0x55f5da69f970 <col:15> 'int' <IntegralCast>
|     |   `-DeclRefExpr 0x55f5da69f938 <col:15> 'ErrorHandler::Level' EnumConstant 0x55f5da4c9e70 'el_error' 'ErrorHandler::Level'
|     `-UnaryOperator 0x55f5da69f9e8 <line:440:6, col:8> 'int' lvalue prefix '++'
|       `-MemberExpr 0x55f5da69f9b8 <col:8> 'int' lvalue ->_nerrors 0x55f5da69e278
|         `-CXXThisExpr 0x55f5da69f9a8 <col:8> 'ErrorHandler *' implicit this
|-CXXMethodDecl 0x55f5da69c6d8 <line:446:5, line:448:5> line:446:18 clear 'void ()' virtual
| `-CompoundStmt 0x55f5da69fab0 <col:26, line:448:5>
|   `-BinaryOperator 0x55f5da69fa90 <line:447:2, col:13> 'int' lvalue '='
|     |-MemberExpr 0x55f5da69fa40 <col:2> 'int' lvalue ->_nerrors 0x55f5da69e278
|     | `-CXXThisExpr 0x55f5da69fa30 <col:2> 'ErrorHandler *' implicit this
|     `-IntegerLiteral 0x55f5da69fa70 <col:13> 'int' 0
|-CXXMethodDecl 0x55f5da69c8a0 <line:466:5, col:66> col:19 used make_anno 'String (const char *, const String &)' static
| |-ParmVarDecl 0x55f5da69c790 <col:29, col:41> col:41 name 'const char *'
| `-ParmVarDecl 0x55f5da69c808 <col:47, col:61> col:61 value 'const String &'
|-CXXMethodDecl 0x55f5da69caa8 <line:482:5, col:69> col:19 used combine_anno 'String (const String &, const String &)' static
| |-ParmVarDecl 0x55f5da69c960 <col:32, col:46> col:46 str 'const String &'
| `-ParmVarDecl 0x55f5da69c9d8 <col:51, col:65> col:65 anno 'const String &'
|-CXXMethodDecl 0x55f5da69cd58 <line:516:5, line:517:68> line:516:24 parse_anno 'const char *(const String &, const char *, const char *, ...)' static
| |-ParmVarDecl 0x55f5da69cb68 <col:35, col:49> col:49 str 'const String &'
| |-ParmVarDecl 0x55f5da69cbe8 <line:517:3, col:15> col:15 begin 'const char *'
| |-ParmVarDecl 0x55f5da69cc68 <col:22, col:34> col:34 end 'const char *'
| `-SentinelAttr 0x55f5da69ce10 <col:59> 0 0
|-CXXMethodDecl 0x55f5da69cfa8 <line:527:5, line:534:5> line:527:24 skip_anno 'const char *(const char *, const char *)' static
| |-ParmVarDecl 0x55f5da69ce88 <col:34, col:46> col:46 used begin 'const char *'
| |-ParmVarDecl 0x55f5da69cf08 <col:53, col:65> col:65 used end 'const char *'
| `-CompoundStmt 0x55f5da6a0120 <col:70, line:534:5>
|   |-DeclStmt 0x55f5da69fc20 <line:528:2, col:20>
|   | |-VarDecl 0x55f5da69fad8 <col:2, col:9> col:9 used name 'String' callinit destroyed
|   | | `-CXXConstructExpr 0x55f5da69fb40 <col:9> 'String' 'void ()'
|   | `-VarDecl 0x55f5da69fb78 <col:2, col:15> col:15 used value 'String' callinit destroyed
|   |   `-CXXConstructExpr 0x55f5da69fbe0 <col:15> 'String' 'void ()'
|   |-DeclStmt 0x55f5da69fcf0 <line:529:2, col:23>
|   | `-VarDecl 0x55f5da69fc50 <col:2, col:18> col:14 used x 'const char *' cinit
|   |   `-ImplicitCastExpr 0x55f5da69fcd8 <col:18> 'const char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x55f5da69fcb8 <col:18> 'const char *' lvalue ParmVar 0x55f5da69ce88 'begin' 'const char *'
|   |-DoStmt 0x55f5da6a00b8 <line:530:2, line:532:15>
|   | |-CompoundStmt 0x55f5da69ffe8 <line:530:5, line:532:2>
|   | | `-ExprWithCleanups 0x55f5da69ffd0 <line:531:6, col:58> 'const char *' lvalue
|   | |   `-BinaryOperator 0x55f5da69ffb0 <col:6, col:58> 'const char *' lvalue '='
|   | |     |-DeclRefExpr 0x55f5da69fd08 <col:6> 'const char *' lvalue Var 0x55f5da69fc50 'x' 'const char *'
|   | |     `-CallExpr 0x55f5da69ff00 <col:10, col:58> 'const char *'
|   | |       |-ImplicitCastExpr 0x55f5da69fee8 <col:10> 'const char *(*)(const String &, const char *, const char *, String *, String *, bool)' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x55f5da69fea0 <col:10> 'const char *(const String &, const char *, const char *, String *, String *, bool)' lvalue CXXMethod 0x55f5da69e750 'skip_anno' 'const char *(const String &, const char *, const char *, String *, String *, bool)'
|   | |       |-MaterializeTemporaryExpr 0x55f5da69ff68 <col:20, col:27> 'const String' lvalue
|   | |       | `-ImplicitCastExpr 0x55f5da69ff50 <col:20, col:27> 'const String' <NoOp>
|   | |       |   `-CXXBindTemporaryExpr 0x55f5da69fdc0 <col:20, col:27> 'String' (CXXTemporary 0x55f5da69fdc0)
|   | |       |     `-CXXTemporaryObjectExpr 0x55f5da69fd88 <col:20, col:27> 'String' 'void ()'
|   | |       |-ImplicitCastExpr 0x55f5da69ff80 <col:30> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x55f5da69fde0 <col:30> 'const char *' lvalue Var 0x55f5da69fc50 'x' 'const char *'
|   | |       |-ImplicitCastExpr 0x55f5da69ff98 <col:33> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x55f5da69fe00 <col:33> 'const char *' lvalue ParmVar 0x55f5da69cf08 'end' 'const char *'
|   | |       |-UnaryOperator 0x55f5da69fe40 <col:38, col:39> 'String *' prefix '&' cannot overflow
|   | |       | `-DeclRefExpr 0x55f5da69fe20 <col:39> 'String' lvalue Var 0x55f5da69fad8 'name' 'String'
|   | |       |-UnaryOperator 0x55f5da69fe78 <col:45, col:46> 'String *' prefix '&' cannot overflow
|   | |       | `-DeclRefExpr 0x55f5da69fe58 <col:46> 'String' lvalue Var 0x55f5da69fb78 'value' 'String'
|   | |       `-CXXBoolLiteralExpr 0x55f5da69fe90 <col:53> 'bool' false
|   | `-ImplicitCastExpr 0x55f5da6a00a0 <line:532:11> 'bool' <MemberPointerToBoolean>
|   |   `-ImplicitCastExpr 0x55f5da6a0088 <col:11> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|   |     `-CXXMemberCallExpr 0x55f5da6a0068 <col:11> 'String::unspecified_bool_type':'int (String::*)() const'
|   |       `-MemberExpr 0x55f5da6a0038 <col:11> '<bound member function type>' .operator int (String::*)() const 0x55f5da2de5f8
|   |         `-ImplicitCastExpr 0x55f5da6a0020 <col:11> 'const String' lvalue <NoOp>
|   |           `-DeclRefExpr 0x55f5da6a0000 <col:11> 'String' lvalue Var 0x55f5da69fad8 'name' 'String'
|   `-ReturnStmt 0x55f5da6a0110 <line:533:2, col:9>
|     `-ImplicitCastExpr 0x55f5da6a00f8 <col:9> 'const char *' <LValueToRValue>
|       `-DeclRefExpr 0x55f5da6a00d8 <col:9> 'const char *' lvalue Var 0x55f5da69fc50 'x' 'const char *'
|-CXXMethodDecl 0x55f5da69d0f8 <line:543:5, line:550:5> line:543:19 used make_landmark_anno 'String (const String &)' static
| |-ParmVarDecl 0x55f5da69d068 <col:38, col:52> col:52 used x 'const String &'
| `-CompoundStmt 0x55f5da6a0728 <col:55, line:550:5>
|   `-IfStmt 0x55f5da6a0700 <line:544:2, line:549:20> has_else
|     |-BinaryOperator 0x55f5da6a0360 <line:544:6, col:19> 'bool' '&&'
|     | |-ImplicitCastExpr 0x55f5da6a0348 <col:6> 'bool' <MemberPointerToBoolean>
|     | | `-ImplicitCastExpr 0x55f5da6a0330 <col:6> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|     | |   `-CXXMemberCallExpr 0x55f5da6a0310 <col:6> 'String::unspecified_bool_type':'int (String::*)() const'
|     | |     `-MemberExpr 0x55f5da6a02e0 <col:6> '<bound member function type>' .operator int (String::*)() const 0x55f5da2de5f8
|     | |       `-DeclRefExpr 0x55f5da6a0180 <col:6> 'const String' lvalue ParmVar 0x55f5da69d068 'x' 'const String &'
|     | `-BinaryOperator 0x55f5da6a02c0 <col:11, col:19> 'bool' '=='
|     |   |-ImplicitCastExpr 0x55f5da6a0290 <col:11, col:14> 'int' <IntegralCast>
|     |   | `-CXXOperatorCallExpr 0x55f5da6a0240 <col:11, col:14> 'char'
|     |   |   |-ImplicitCastExpr 0x55f5da6a0228 <col:12, col:14> 'char (*)(int) const' <FunctionToPointerDecay>
|     |   |   | `-DeclRefExpr 0x55f5da6a01e0 <col:12, col:14> 'char (int) const' lvalue CXXMethod 0x55f5da2f7e30 'operator[]' 'char (int) const'
|     |   |   |-DeclRefExpr 0x55f5da6a01a0 <col:11> 'const String' lvalue ParmVar 0x55f5da69d068 'x' 'const String &'
|     |   |   `-IntegerLiteral 0x55f5da6a01c0 <col:13> 'int' 0
|     |   `-ImplicitCastExpr 0x55f5da6a02a8 <col:19> 'int' <IntegralCast>
|     |     `-CharacterLiteral 0x55f5da6a0278 <col:19> 'char' 123
|     |-ReturnStmt 0x55f5da6a03d0 <line:545:6, col:13>
|     | `-CXXConstructExpr 0x55f5da6a03a0 <col:13> 'String' 'void (const String &)'
|     |   `-DeclRefExpr 0x55f5da6a0380 <col:13> 'const String' lvalue ParmVar 0x55f5da69d068 'x' 'const String &'
|     `-IfStmt 0x55f5da6a06d8 <line:546:7, line:549:20> has_else
|       |-ImplicitCastExpr 0x55f5da6a0468 <line:546:11> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x55f5da6a0450 <col:11> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x55f5da6a0430 <col:11> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x55f5da6a0400 <col:11> '<bound member function type>' .operator int (String::*)() const 0x55f5da2de5f8
|       |       `-DeclRefExpr 0x55f5da6a03e0 <col:11> 'const String' lvalue ParmVar 0x55f5da69d068 'x' 'const String &'
|       |-ReturnStmt 0x55f5da6a05f0 <line:547:6, col:29>
|       | `-ExprWithCleanups 0x55f5da6a05d8 <col:13, col:29> 'String'
|       |   `-CXXConstructExpr 0x55f5da6a05a8 <col:13, col:29> 'String' 'void (String &&)' elidable
|       |     `-MaterializeTemporaryExpr 0x55f5da6a0590 <col:13, col:29> 'String' xvalue
|       |       `-CXXBindTemporaryExpr 0x55f5da6a0570 <col:13, col:29> 'String' (CXXTemporary 0x55f5da6a0570)
|       |         `-CallExpr 0x55f5da6a0520 <col:13, col:29> 'String'
|       |           |-ImplicitCastExpr 0x55f5da6a0508 <col:13> 'String (*)(const char *, const String &)' <FunctionToPointerDecay>
|       |           | `-DeclRefExpr 0x55f5da6a0480 <col:13> 'String (const char *, const String &)' lvalue CXXMethod 0x55f5da69c8a0 'make_anno' 'String (const char *, const String &)'
|       |           |-ImplicitCastExpr 0x55f5da6a0550 <col:23> 'const char *' <ArrayToPointerDecay>
|       |           | `-StringLiteral 0x55f5da6a04a0 <col:23> 'const char [2]' lvalue "l"
|       |           `-DeclRefExpr 0x55f5da6a04c0 <col:28> 'const String' lvalue ParmVar 0x55f5da69d068 'x' 'const String &'
|       `-ReturnStmt 0x55f5da6a06c8 <line:549:6, col:20>
|         `-ExprWithCleanups 0x55f5da6a06b0 <col:13, col:20> 'String'
|           `-CXXConstructExpr 0x55f5da6a0680 <col:13, col:20> 'String' 'void (String &&)' elidable
|             `-MaterializeTemporaryExpr 0x55f5da6a0668 <col:13, col:20> 'String' xvalue
|               `-CXXBindTemporaryExpr 0x55f5da6a0648 <col:13, col:20> 'String' (CXXTemporary 0x55f5da6a0648)
|                 `-CXXTemporaryObjectExpr 0x55f5da6a0610 <col:13, col:20> 'String' 'void ()'
|-CXXMethodDecl 0x55f5da69d2c0 <line:559:5, col:76> col:19 clean_landmark 'String (const String &, bool)' static
| |-ParmVarDecl 0x55f5da69d1b0 <col:34, col:48> col:48 landmark 'const String &'
| `-ParmVarDecl 0x55f5da69d228 <col:58, col:71> col:63 colon 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55f5da69e9f8 <col:71> 'bool' false
|-CXXRecordDecl 0x55f5da69d370 <line:563:5, col:12> col:12 referenced struct Conversion
|-TypedefDecl 0x55f5da69d668 <line:564:5, col:60> col:22 referenced ConversionFunction 'String (*)(int, __va_list_tag *)'
| `-PointerType 0x55f5da69d600 'String (*)(int, __va_list_tag *)'
|   `-ParenType 0x55f5da69d5a0 'String (int, __va_list_tag *)' sugar
|     `-FunctionProtoType 0x55f5da69d560 'String (int, __va_list_tag *)' cdecl
|       |-RecordType 0x55f5da2dae90 'String'
|       | `-CXXRecord 0x55f5da2dae00 'String'
|       |-BuiltinType 0x55f5d9fa93b0 'int'
|       `-DecayedType 0x55f5da621a90 '__va_list_tag *' sugar
|         |-TypedefType 0x55f5da621a60 'va_list' sugar
|         | |-Typedef 0x55f5da1cbf40 'va_list'
|         | `-TypedefType 0x55f5da1cbef0 '__gnuc_va_list' sugar
|         |   |-Typedef 0x55f5da103b18 '__gnuc_va_list'
|         |   `-TypedefType 0x55f5da103a80 '__builtin_va_list' sugar
|         |     |-Typedef 0x55f5d9feac18 '__builtin_va_list'
|         |     `-ConstantArrayType 0x55f5d9feabc0 '__va_list_tag [1]' 1 
|         |       `-RecordType 0x55f5d9faa100 '__va_list_tag'
|         |         `-CXXRecord 0x55f5d9faa068 '__va_list_tag'
|         `-PointerType 0x55f5da1d17e0 '__va_list_tag *'
|           `-RecordType 0x55f5d9faa100 '__va_list_tag'
|             `-CXXRecord 0x55f5d9faa068 '__va_list_tag'
|-EnumDecl 0x55f5da69d6c0 <line:565:5, line:576:5> line:565:10 ConversionFlags
| |-EnumConstantDecl 0x55f5da69d7c0 <line:566:2, col:16> col:2 cf_zero_pad 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55f5da69dd20 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f5da69d7a0 <col:16> 'int' Int: 1
| |     `-IntegerLiteral 0x55f5da69d780 <col:16> 'int' 1
| |-EnumConstantDecl 0x55f5da69d850 <line:567:2, col:21> col:2 cf_plus_positive 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55f5da69dd38 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f5da69d830 <col:21> 'int' Int: 2
| |     `-IntegerLiteral 0x55f5da69d810 <col:21> 'int' 2
| |-EnumConstantDecl 0x55f5da69d8e0 <line:568:2, col:22> col:2 cf_space_positive 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55f5da69dd50 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f5da69d8c0 <col:22> 'int' Int: 4
| |     `-IntegerLiteral 0x55f5da69d8a0 <col:22> 'int' 4
| |-EnumConstantDecl 0x55f5da69d970 <line:569:2, col:17> col:2 cf_left_just 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55f5da69dd68 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f5da69d950 <col:17> 'int' Int: 8
| |     `-IntegerLiteral 0x55f5da69d930 <col:17> 'int' 8
| |-EnumConstantDecl 0x55f5da69da00 <line:570:2, col:22> col:2 cf_alternate_form 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55f5da69dd80 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f5da69d9e0 <col:22> 'int' Int: 16
| |     `-IntegerLiteral 0x55f5da69d9c0 <col:22> 'int' 16
| |-EnumConstantDecl 0x55f5da69da90 <line:571:2, col:19> col:2 cf_singlequote 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55f5da69dd98 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f5da69da70 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x55f5da69da50 <col:19> 'int' 32
| |-EnumConstantDecl 0x55f5da69db20 <line:572:2, col:17> col:2 cf_uppercase 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55f5da69ddb0 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f5da69db00 <col:17> 'int' Int: 64
| |     `-IntegerLiteral 0x55f5da69dae0 <col:17> 'int' 64
| |-EnumConstantDecl 0x55f5da69dbb0 <line:573:2, col:14> col:2 cf_signed 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55f5da69ddc8 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f5da69db90 <col:14> 'int' Int: 128
| |     `-IntegerLiteral 0x55f5da69db70 <col:14> 'int' 128
| |-EnumConstantDecl 0x55f5da69dc40 <line:574:2, col:16> col:2 cf_negative 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55f5da69dde0 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f5da69dc20 <col:16> 'int' Int: 256
| |     `-IntegerLiteral 0x55f5da69dc00 <col:16> 'int' 256
| `-EnumConstantDecl 0x55f5da69dcd0 <line:575:2, col:12> col:2 cf_utf8 'ErrorHandler::ConversionFlags'
|   `-ImplicitCastExpr 0x55f5da69ddf8 <col:12> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55f5da69dcb0 <col:12> 'int' Int: 1024
|       `-IntegerLiteral 0x55f5da69dc90 <col:12> 'int' 1024
|-CXXMethodDecl 0x55f5da69e008 <line:577:5, col:82> col:24 add_conversion 'ErrorHandler::Conversion *(const String &, ErrorHandler::ConversionFunction)' static
| |-ParmVarDecl 0x55f5da69de20 <col:39, col:53> col:53 name 'const String &'
| `-ParmVarDecl 0x55f5da69dec0 <col:59, col:78> col:78 func 'ErrorHandler::ConversionFunction':'String (*)(int, __va_list_tag *)'
|-CXXMethodDecl 0x55f5da69e190 <line:578:5, col:56> col:16 remove_conversion 'int (ErrorHandler::Conversion *)' static
| `-ParmVarDecl 0x55f5da69e0c8 <col:34, col:46> col:46 conversion 'ErrorHandler::Conversion *'
|-AccessSpecDecl 0x55f5da69e238 <line:580:3, col:10> col:3 private
|-FieldDecl 0x55f5da69e278 <line:582:5, col:9> col:9 referenced _nerrors 'int'
|-VarDecl 0x55f5da69e2d8 <line:584:5, col:26> col:26 used the_default_handler 'ErrorHandler *' static
|-VarDecl 0x55f5da69e350 <line:585:5, col:26> col:26 used the_silent_handler 'ErrorHandler *' static
|-CXXMethodDecl 0x55f5da69e750 <line:587:5, line:590:14> line:587:24 used skip_anno 'const char *(const String &, const char *, const char *, String *, String *, bool)' static
| |-ParmVarDecl 0x55f5da69e3c8 <col:34, col:48> col:48 str 'const String &'
| |-ParmVarDecl 0x55f5da69e448 <line:588:6, col:18> col:18 begin 'const char *'
| |-ParmVarDecl 0x55f5da69e4c8 <col:25, col:37> col:37 end 'const char *'
| |-ParmVarDecl 0x55f5da69e540 <line:589:6, col:14> col:14 name_result 'String *'
| |-ParmVarDecl 0x55f5da69e5b8 <col:27, col:35> col:35 value_result 'String *'
| `-ParmVarDecl 0x55f5da69e630 <line:590:6, col:11> col:11 raw 'bool'
|-CXXMethodDecl 0x55f5da69e878 <line:90:7> col:7 implicit operator= 'ErrorHandler &(const ErrorHandler &)' inline default noexcept-unevaluated 0x55f5da69e878
| `-ParmVarDecl 0x55f5da69e988 <col:7> col:7 'const ErrorHandler &'
`-CXXConstructorDecl 0x55f5da6a0a88 <col:7> col:7 implicit constexpr ErrorHandler 'void (const ErrorHandler &)' inline default noexcept-unevaluated 0x55f5da6a0a88
  `-ParmVarDecl 0x55f5da6a0b98 <col:7> col:7 'const ErrorHandler &'

Layout: <CGRecordLayout
  LLVMType:%class.ErrorHandler = type <{ i32 (...)**, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.ErrorHandler.base = type <{ i32 (...)**, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f5da50af50 <../dummy_inc/click/handler.hh:290:5, line:293:5> line:290:5 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x55f5da50b0a0 <line:291:2, col:18> col:18 h 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
|-FieldDecl 0x55f5da50b120 <line:292:2, col:22> col:22 referenced r 'ReadHandlerCallback':'String (*)(Element *, void *)'
|-CXXConstructorDecl 0x55f5da50bf18 <line:290:5> col:5 implicit constexpr  'void (const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &)' inline default trivial noexcept-unevaluated 0x55f5da50bf18
| `-ParmVarDecl 0x55f5da50c028 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &'
|-CXXConstructorDecl 0x55f5da50c0c8 <col:5> col:5 implicit constexpr  'void (Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&)' inline default trivial noexcept-unevaluated 0x55f5da50c0c8
| `-ParmVarDecl 0x55f5da50c1d8 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&'
|-CXXDestructorDecl 0x55f5da50c248 <col:5> col:5 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x55f5da50c248
|-CXXMethodDecl 0x55f5da50cb18 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &(const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &)' inline default trivial noexcept-unevaluated 0x55f5da50cb18
| `-ParmVarDecl 0x55f5da50cc28 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &'
|-CXXMethodDecl 0x55f5da50cc98 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &(Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&)' inline default trivial noexcept-unevaluated 0x55f5da50cc98
| `-ParmVarDecl 0x55f5da50cda8 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&'
`-CXXConstructorDecl 0x55f5da6e7f68 <col:5> col:5 implicit used  'void () noexcept' inline default trivial
  `-CompoundStmt 0x55f5da6e8040 <col:5>

Layout: <CGRecordLayout
  LLVMType:%union.anon = type { i32 (i32, %class.String*, %class.Element*, %class.Handler*, %class.ErrorHandler*)* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f5da50b250 <../dummy_inc/click/handler.hh:294:5, line:297:5> line:294:5 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x55f5da50b378 <line:295:2, col:18> col:18 h 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
|-FieldDecl 0x55f5da50b400 <line:296:2, col:23> col:23 referenced w 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
|-CXXConstructorDecl 0x55f5da50c378 <line:294:5> col:5 implicit constexpr  'void (const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &)' inline default trivial noexcept-unevaluated 0x55f5da50c378
| `-ParmVarDecl 0x55f5da50c488 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &'
|-CXXConstructorDecl 0x55f5da50c528 <col:5> col:5 implicit constexpr  'void (Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&)' inline default trivial noexcept-unevaluated 0x55f5da50c528
| `-ParmVarDecl 0x55f5da50c638 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&'
|-CXXDestructorDecl 0x55f5da50c6a8 <col:5> col:5 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x55f5da50c6a8
|-CXXMethodDecl 0x55f5da50ce48 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &(const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &)' inline default trivial noexcept-unevaluated 0x55f5da50ce48
| `-ParmVarDecl 0x55f5da50cf58 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &'
|-CXXMethodDecl 0x55f5da50cfc8 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &(Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&)' inline default trivial noexcept-unevaluated 0x55f5da50cfc8
| `-ParmVarDecl 0x55f5da50d0d8 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&'
`-CXXConstructorDecl 0x55f5da6e80a0 <col:5> col:5 implicit used  'void () noexcept' inline default trivial
  `-CompoundStmt 0x55f5da6e8180 <col:5>

Layout: <CGRecordLayout
  LLVMType:%union.anon.11 = type { i32 (i32, %class.String*, %class.Element*, %class.Handler*, %class.ErrorHandler*)* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f5da5068d8 prev 0x55f5da505d70 <../dummy_inc/click/handler.hh:19:1, line:313:1> line:19:7 class Handler definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x55f5da5069d0 <col:1, col:7> col:7 implicit referenced class Handler
|-AccessSpecDecl 0x55f5da506a60 <col:17, col:23> col:17 public
|-EnumDecl 0x55f5da506a88 <line:21:5, line:59:5> line:21:10 Flags
| |-EnumConstantDecl 0x55f5da506b90 <line:22:2, col:11> col:2 referenced f_read 'Handler::Flags'
| | `-ImplicitCastExpr 0x55f5da5078e0 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f5da506b70 <col:11> 'int' Int: 1
| |     `-IntegerLiteral 0x55f5da506b50 <col:11> 'int' 1
| |-EnumConstantDecl 0x55f5da506c20 <line:23:2, col:12> col:2 referenced f_write 'Handler::Flags'
| | `-ImplicitCastExpr 0x55f5da5078f8 <col:12> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f5da506c00 <col:12> 'int' Int: 2
| |     `-IntegerLiteral 0x55f5da506be0 <col:12> 'int' 2
| |-EnumConstantDecl 0x55f5da506cb0 <line:24:2, col:17> col:2 referenced f_read_param 'Handler::Flags'
| | `-ImplicitCastExpr 0x55f5da507910 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f5da506c90 <col:17> 'int' Int: 4
| |     `-IntegerLiteral 0x55f5da506c70 <col:17> 'int' 4
| |-EnumConstantDecl 0x55f5da506d40 <line:25:2, col:16> col:2 referenced f_exclusive 'Handler::Flags'
| | `-ImplicitCastExpr 0x55f5da507928 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f5da506d20 <col:16> 'int' Int: 0
| |     `-IntegerLiteral 0x55f5da506d00 <col:16> 'int' 0
| |-EnumConstantDecl 0x55f5da506dd0 <line:28:2, col:19> col:2 referenced f_nonexclusive 'Handler::Flags'
| | `-ImplicitCastExpr 0x55f5da507940 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f5da506db0 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x55f5da506d90 <col:19> 'int' 32
| |-EnumConstantDecl 0x55f5da506e60 <line:31:2, col:10> col:2 referenced f_raw 'Handler::Flags'
| | `-ImplicitCastExpr 0x55f5da507958 <col:10> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f5da506e40 <col:10> 'int' Int: 64
| |     `-IntegerLiteral 0x55f5da506e20 <col:10> 'int' 64
| |-EnumConstantDecl 0x55f5da506ef0 <line:32:2, col:19> col:2 referenced f_read_private 'Handler::Flags'
| | `-ImplicitCastExpr 0x55f5da507970 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f5da506ed0 <col:19> 'int' Int: 128
| |     `-IntegerLiteral 0x55f5da506eb0 <col:19> 'int' 128
| |-EnumConstantDecl 0x55f5da506f80 <line:34:2, col:20> col:2 referenced f_write_private 'Handler::Flags'
| | `-ImplicitCastExpr 0x55f5da507988 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f5da506f60 <col:20> 'int' Int: 256
| |     `-IntegerLiteral 0x55f5da506f40 <col:20> 'int' 256
| |-EnumConstantDecl 0x55f5da507010 <line:36:2, col:17> col:2 referenced f_deprecated 'Handler::Flags'
| | `-ImplicitCastExpr 0x55f5da5079a0 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f5da506ff0 <col:17> 'int' Int: 512
| |     `-IntegerLiteral 0x55f5da506fd0 <col:17> 'int' 512
| |-EnumConstantDecl 0x55f5da5070a0 <line:38:2, col:15> col:2 referenced f_uncommon 'Handler::Flags'
| | `-ImplicitCastExpr 0x55f5da5079b8 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f5da507080 <col:15> 'int' Int: 1024
| |     `-IntegerLiteral 0x55f5da507060 <col:15> 'int' 1024
| |-EnumConstantDecl 0x55f5da507130 <line:40:2, col:11> col:2 referenced f_calm 'Handler::Flags'
| | `-ImplicitCastExpr 0x55f5da5079d0 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f5da507110 <col:11> 'int' Int: 2048
| |     `-IntegerLiteral 0x55f5da5070f0 <col:11> 'int' 2048
| |-EnumConstantDecl 0x55f5da5071c0 <line:41:2, col:16> col:2 referenced f_expensive 'Handler::Flags'
| | `-ImplicitCastExpr 0x55f5da5079e8 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f5da5071a0 <col:16> 'int' Int: 4096
| |     `-IntegerLiteral 0x55f5da507180 <col:16> 'int' 4096
| |-EnumConstantDecl 0x55f5da507250 <line:42:2, col:13> col:2 referenced f_button 'Handler::Flags'
| | `-ImplicitCastExpr 0x55f5da507a00 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f5da507230 <col:13> 'int' Int: 8192
| |     `-IntegerLiteral 0x55f5da507210 <col:13> 'int' 8192
| |-EnumConstantDecl 0x55f5da5072e0 <line:43:2, col:15> col:2 referenced f_checkbox 'Handler::Flags'
| | `-ImplicitCastExpr 0x55f5da507a18 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f5da5072c0 <col:15> 'int' Int: 16384
| |     `-IntegerLiteral 0x55f5da5072a0 <col:15> 'int' 16384
| |-EnumConstantDecl 0x55f5da5073b0 <line:45:2, col:20> col:2 referenced f_driver0 'Handler::Flags'
| | `-ConstantExpr 0x55f5da507390 <col:14, col:20> 'unsigned int' Int: 67108864
| |   `-BinaryOperator 0x55f5da507370 <col:14, col:20> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x55f5da507330 <col:14> 'unsigned int' 1
| |     `-IntegerLiteral 0x55f5da507350 <col:20> 'int' 26
| |-EnumConstantDecl 0x55f5da507480 <line:46:9, col:27> col:9 referenced f_driver1 'Handler::Flags'
| | `-ConstantExpr 0x55f5da507460 <col:21, col:27> 'unsigned int' Int: 134217728
| |   `-BinaryOperator 0x55f5da507440 <col:21, col:27> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x55f5da507400 <col:21> 'unsigned int' 1
| |     `-IntegerLiteral 0x55f5da507420 <col:27> 'int' 27
| |-EnumConstantDecl 0x55f5da507510 <line:48:2, col:17> col:2 referenced f_user_shift 'Handler::Flags'
| | `-ImplicitCastExpr 0x55f5da507a30 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f5da5074f0 <col:17> 'int' Int: 28
| |     `-IntegerLiteral 0x55f5da5074d0 <col:17> 'int' 28
| |-EnumConstantDecl 0x55f5da5075e0 <line:49:2, col:18> col:2 referenced f_user0 'Handler::Flags'
| | `-ConstantExpr 0x55f5da5075c0 <col:12, col:18> 'unsigned int' Int: 268435456
| |   `-BinaryOperator 0x55f5da5075a0 <col:12, col:18> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x55f5da507560 <col:12> 'unsigned int' 1
| |     `-DeclRefExpr 0x55f5da507580 <col:18> 'int' EnumConstant 0x55f5da507510 'f_user_shift' 'Handler::Flags'
| |-EnumConstantDecl 0x55f5da507670 <line:54:2, col:25> col:2 referenced f_read_comprehensive 'Handler::Flags'
| | `-ImplicitCastExpr 0x55f5da507a48 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f5da507650 <col:25> 'int' Int: 8
| |     `-IntegerLiteral 0x55f5da507630 <col:25> 'int' 8
| |-EnumConstantDecl 0x55f5da507700 <line:55:2, col:26> col:2 referenced f_write_comprehensive 'Handler::Flags'
| | `-ImplicitCastExpr 0x55f5da507a60 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f5da5076e0 <col:26> 'int' Int: 16
| |     `-IntegerLiteral 0x55f5da5076c0 <col:26> 'int' 16
| `-EnumConstantDecl 0x55f5da507890 <line:56:2, col:71> col:2 referenced f_special 'Handler::Flags'
|   `-ImplicitCastExpr 0x55f5da507a78 <col:14, col:71> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55f5da507870 <col:14, col:71> 'int' Int: 31
|       `-BinaryOperator 0x55f5da507850 <col:14, col:71> 'int' '|'
|         |-BinaryOperator 0x55f5da507810 <col:14, col:48> 'int' '|'
|         | |-BinaryOperator 0x55f5da5077d0 <col:14, col:33> 'int' '|'
|         | | |-BinaryOperator 0x55f5da507790 <col:14, col:23> 'int' '|'
|         | | | |-DeclRefExpr 0x55f5da507750 <col:14> 'int' EnumConstant 0x55f5da506b90 'f_read' 'Handler::Flags'
|         | | | `-DeclRefExpr 0x55f5da507770 <col:23> 'int' EnumConstant 0x55f5da506c20 'f_write' 'Handler::Flags'
|         | | `-DeclRefExpr 0x55f5da5077b0 <col:33> 'int' EnumConstant 0x55f5da506cb0 'f_read_param' 'Handler::Flags'
|         | `-DeclRefExpr 0x55f5da5077f0 <col:48> 'int' EnumConstant 0x55f5da507670 'f_read_comprehensive' 'Handler::Flags'
|         `-DeclRefExpr 0x55f5da507830 <col:71> 'int' EnumConstant 0x55f5da507700 'f_write_comprehensive' 'Handler::Flags'
|-CXXMethodDecl 0x55f5da507ad8 <line:62:5, line:64:5> line:62:26 name 'const String &() const' inline
| `-CompoundStmt 0x55f5da50d4f8 <col:39, line:64:5>
|   `-ReturnStmt 0x55f5da50d4e8 <line:63:2, col:9>
|     `-MemberExpr 0x55f5da50d4b8 <col:9> 'const String' lvalue ->_name 0x55f5da50af00
|       `-CXXThisExpr 0x55f5da50d4a8 <col:9> 'const Handler *' implicit this
|-CXXMethodDecl 0x55f5da507b98 <line:69:5, line:71:5> line:69:21 flags 'uint32_t () const' inline
| `-CompoundStmt 0x55f5da50d578 <col:35, line:71:5>
|   `-ReturnStmt 0x55f5da50d568 <line:70:2, col:9>
|     `-ImplicitCastExpr 0x55f5da50d550 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x55f5da50d520 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55f5da50b610
|         `-CXXThisExpr 0x55f5da50d510 <col:9> 'const Handler *' implicit this
|-CXXMethodDecl 0x55f5da507ce8 <line:75:5, line:77:5> line:75:18 user_data 'void *(int) const' inline
| |-ParmVarDecl 0x55f5da507c50 <col:28, col:32> col:32 used op 'int'
| `-CompoundStmt 0x55f5da50d6f8 <col:42, line:77:5>
|   `-ReturnStmt 0x55f5da50d6e8 <line:76:2, col:44>
|     `-ImplicitCastExpr 0x55f5da50d6d0 <col:9, col:44> 'void *' <LValueToRValue>
|       `-ConditionalOperator 0x55f5da50d6a0 <col:9, col:44> 'void *const' lvalue
|         |-BinaryOperator 0x55f5da50d600 <col:9, col:15> 'bool' '=='
|         | |-ImplicitCastExpr 0x55f5da50d5d0 <col:9> 'int' <LValueToRValue>
|         | | `-DeclRefExpr 0x55f5da50d590 <col:9> 'int' lvalue ParmVar 0x55f5da507c50 'op' 'int'
|         | `-ImplicitCastExpr 0x55f5da50d5e8 <col:15> 'int' <IntegralCast>
|         |   `-DeclRefExpr 0x55f5da50d5b0 <col:15> 'Handler::Flags' EnumConstant 0x55f5da506c20 'f_write' 'Handler::Flags'
|         |-MemberExpr 0x55f5da50d630 <col:25> 'void *const' lvalue ->_write_user_data 0x55f5da50b5b0
|         | `-CXXThisExpr 0x55f5da50d620 <col:25> 'const Handler *' implicit this
|         `-MemberExpr 0x55f5da50d670 <col:44> 'void *const' lvalue ->_read_user_data 0x55f5da50b548
|           `-CXXThisExpr 0x55f5da50d660 <col:44> 'const Handler *' implicit this
|-CXXMethodDecl 0x55f5da507db8 <line:80:5, line:82:5> line:80:18 read_user_data 'void *() const' inline
| `-CompoundStmt 0x55f5da50d778 <col:41, line:82:5>
|   `-ReturnStmt 0x55f5da50d768 <line:81:2, col:9>
|     `-ImplicitCastExpr 0x55f5da50d750 <col:9> 'void *' <LValueToRValue>
|       `-MemberExpr 0x55f5da50d720 <col:9> 'void *const' lvalue ->_read_user_data 0x55f5da50b548
|         `-CXXThisExpr 0x55f5da50d710 <col:9> 'const Handler *' implicit this
|-CXXMethodDecl 0x55f5da507e80 <line:85:5, line:87:5> line:85:18 write_user_data 'void *() const' inline
| `-CompoundStmt 0x55f5da50d7f8 <col:42, line:87:5>
|   `-ReturnStmt 0x55f5da50d7e8 <line:86:2, col:9>
|     `-ImplicitCastExpr 0x55f5da50d7d0 <col:9> 'void *' <LValueToRValue>
|       `-MemberExpr 0x55f5da50d7a0 <col:9> 'void *const' lvalue ->_write_user_data 0x55f5da50b5b0
|         `-CXXThisExpr 0x55f5da50d790 <col:9> 'const Handler *' implicit this
|-CXXMethodDecl 0x55f5da507f48 <line:90:5, col:63> col:18 user_data1 'void *() const' inline
| `-DeprecatedAttr 0x55f5da507fe8 <col:52> "" ""
|-CXXMethodDecl 0x55f5da508080 <line:91:5, col:63> col:18 user_data2 'void *() const' inline
| `-DeprecatedAttr 0x55f5da508120 <col:52> "" ""
|-CXXMethodDecl 0x55f5da5081b0 <line:96:5, line:98:5> line:96:17 readable 'bool () const' inline
| `-CompoundStmt 0x55f5da50d8e8 <col:34, line:98:5>
|   `-ReturnStmt 0x55f5da50d8d8 <line:97:2, col:18>
|     `-ImplicitCastExpr 0x55f5da50d8c0 <col:9, col:18> 'bool' <IntegralToBoolean>
|       `-BinaryOperator 0x55f5da50d8a0 <col:9, col:18> 'unsigned int' '&'
|         |-ImplicitCastExpr 0x55f5da50d870 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-MemberExpr 0x55f5da50d820 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55f5da50b610
|         |   `-CXXThisExpr 0x55f5da50d810 <col:9> 'const Handler *' implicit this
|         `-ImplicitCastExpr 0x55f5da50d888 <col:18> 'unsigned int' <IntegralCast>
|           `-DeclRefExpr 0x55f5da50d850 <col:18> 'Handler::Flags' EnumConstant 0x55f5da506b90 'f_read' 'Handler::Flags'
|-CXXMethodDecl 0x55f5da508270 <line:102:5, line:104:5> line:102:17 read_param 'bool () const' inline
| `-CompoundStmt 0x55f5da50d9d8 <col:36, line:104:5>
|   `-ReturnStmt 0x55f5da50d9c8 <line:103:2, col:18>
|     `-ImplicitCastExpr 0x55f5da50d9b0 <col:9, col:18> 'bool' <IntegralToBoolean>
|       `-BinaryOperator 0x55f5da50d990 <col:9, col:18> 'unsigned int' '&'
|         |-ImplicitCastExpr 0x55f5da50d960 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-MemberExpr 0x55f5da50d910 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55f5da50b610
|         |   `-CXXThisExpr 0x55f5da50d900 <col:9> 'const Handler *' implicit this
|         `-ImplicitCastExpr 0x55f5da50d978 <col:18> 'unsigned int' <IntegralCast>
|           `-DeclRefExpr 0x55f5da50d940 <col:18> 'Handler::Flags' EnumConstant 0x55f5da506cb0 'f_read_param' 'Handler::Flags'
|-CXXMethodDecl 0x55f5da508330 <line:111:5, line:113:5> line:111:17 used read_visible 'bool () const' inline
| `-CompoundStmt 0x55f5da50dbb8 <col:38, line:113:5>
|   `-ReturnStmt 0x55f5da50dba8 <line:112:2, col:49>
|     `-BinaryOperator 0x55f5da50db88 <col:9, col:49> 'bool' '=='
|       |-ParenExpr 0x55f5da50db30 <col:9, col:44> 'unsigned int'
|       | `-BinaryOperator 0x55f5da50db10 <col:10, col:43> 'unsigned int' '&'
|       |   |-ImplicitCastExpr 0x55f5da50dae0 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-MemberExpr 0x55f5da50da00 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55f5da50b610
|       |   |   `-CXXThisExpr 0x55f5da50d9f0 <col:10> 'const Handler *' implicit this
|       |   `-ImplicitCastExpr 0x55f5da50daf8 <col:19, col:43> 'unsigned int' <IntegralCast>
|       |     `-ParenExpr 0x55f5da50dac0 <col:19, col:43> 'int'
|       |       `-BinaryOperator 0x55f5da50daa0 <col:20, col:29> 'int' '|'
|       |         |-ImplicitCastExpr 0x55f5da50da70 <col:20> 'int' <IntegralCast>
|       |         | `-DeclRefExpr 0x55f5da50da30 <col:20> 'Handler::Flags' EnumConstant 0x55f5da506b90 'f_read' 'Handler::Flags'
|       |         `-ImplicitCastExpr 0x55f5da50da88 <col:29> 'int' <IntegralCast>
|       |           `-DeclRefExpr 0x55f5da50da50 <col:29> 'Handler::Flags' EnumConstant 0x55f5da506ef0 'f_read_private' 'Handler::Flags'
|       `-ImplicitCastExpr 0x55f5da50db70 <col:49> 'unsigned int' <IntegralCast>
|         `-DeclRefExpr 0x55f5da50db50 <col:49> 'Handler::Flags' EnumConstant 0x55f5da506b90 'f_read' 'Handler::Flags'
|-CXXMethodDecl 0x55f5da5083f0 <line:116:5, line:118:5> line:116:17 writable 'bool () const' inline
| `-CompoundStmt 0x55f5da50dca8 <col:34, line:118:5>
|   `-ReturnStmt 0x55f5da50dc98 <line:117:2, col:18>
|     `-ImplicitCastExpr 0x55f5da50dc80 <col:9, col:18> 'bool' <IntegralToBoolean>
|       `-BinaryOperator 0x55f5da50dc60 <col:9, col:18> 'unsigned int' '&'
|         |-ImplicitCastExpr 0x55f5da50dc30 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-MemberExpr 0x55f5da50dbe0 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55f5da50b610
|         |   `-CXXThisExpr 0x55f5da50dbd0 <col:9> 'const Handler *' implicit this
|         `-ImplicitCastExpr 0x55f5da50dc48 <col:18> 'unsigned int' <IntegralCast>
|           `-DeclRefExpr 0x55f5da50dc10 <col:18> 'Handler::Flags' EnumConstant 0x55f5da506c20 'f_write' 'Handler::Flags'
|-CXXMethodDecl 0x55f5da5084b0 <line:125:5, line:127:5> line:125:17 used write_visible 'bool () const' inline
| `-CompoundStmt 0x55f5da50de88 <col:39, line:127:5>
|   `-ReturnStmt 0x55f5da50de78 <line:126:2, col:51>
|     `-BinaryOperator 0x55f5da50de58 <col:9, col:51> 'bool' '=='
|       |-ParenExpr 0x55f5da50de00 <col:9, col:46> 'unsigned int'
|       | `-BinaryOperator 0x55f5da50dde0 <col:10, col:45> 'unsigned int' '&'
|       |   |-ImplicitCastExpr 0x55f5da50ddb0 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-MemberExpr 0x55f5da50dcd0 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55f5da50b610
|       |   |   `-CXXThisExpr 0x55f5da50dcc0 <col:10> 'const Handler *' implicit this
|       |   `-ImplicitCastExpr 0x55f5da50ddc8 <col:19, col:45> 'unsigned int' <IntegralCast>
|       |     `-ParenExpr 0x55f5da50dd90 <col:19, col:45> 'int'
|       |       `-BinaryOperator 0x55f5da50dd70 <col:20, col:30> 'int' '|'
|       |         |-ImplicitCastExpr 0x55f5da50dd40 <col:20> 'int' <IntegralCast>
|       |         | `-DeclRefExpr 0x55f5da50dd00 <col:20> 'Handler::Flags' EnumConstant 0x55f5da506c20 'f_write' 'Handler::Flags'
|       |         `-ImplicitCastExpr 0x55f5da50dd58 <col:30> 'int' <IntegralCast>
|       |           `-DeclRefExpr 0x55f5da50dd20 <col:30> 'Handler::Flags' EnumConstant 0x55f5da506f80 'f_write_private' 'Handler::Flags'
|       `-ImplicitCastExpr 0x55f5da50de40 <col:51> 'unsigned int' <IntegralCast>
|         `-DeclRefExpr 0x55f5da50de20 <col:51> 'Handler::Flags' EnumConstant 0x55f5da506c20 'f_write' 'Handler::Flags'
|-CXXMethodDecl 0x55f5da508570 <line:130:5, line:132:5> line:130:17 visible 'bool () const' inline
| `-CompoundStmt 0x55f5da50df90 <col:33, line:132:5>
|   `-ReturnStmt 0x55f5da50df80 <line:131:2, col:41>
|     `-BinaryOperator 0x55f5da50df60 <col:9, col:41> 'bool' '||'
|       |-CXXMemberCallExpr 0x55f5da50dee0 <col:9, col:22> 'bool'
|       | `-MemberExpr 0x55f5da50deb0 <col:9> '<bound member function type>' ->read_visible 0x55f5da508330
|       |   `-CXXThisExpr 0x55f5da50dea0 <col:9> 'const Handler *' implicit this
|       `-CXXMemberCallExpr 0x55f5da50df40 <col:27, col:41> 'bool'
|         `-MemberExpr 0x55f5da50df10 <col:27> '<bound member function type>' ->write_visible 0x55f5da5084b0
|           `-CXXThisExpr 0x55f5da50df00 <col:27> 'const Handler *' implicit this
|-CXXMethodDecl 0x55f5da508630 <line:136:5, line:138:5> line:136:17 allow_concurrent_handlers 'bool () const' inline
| `-CompoundStmt 0x55f5da50e0c8 <col:51, line:138:5>
|   `-ReturnStmt 0x55f5da50e0b8 <line:137:9, col:40>
|     `-ImplicitCastExpr 0x55f5da50e0a0 <col:16, col:40> 'bool' <IntegralToBoolean>
|       `-ParenExpr 0x55f5da50e080 <col:16, col:40> 'unsigned int'
|         `-BinaryOperator 0x55f5da50e038 <col:17, col:26> 'unsigned int' '&'
|           |-ImplicitCastExpr 0x55f5da50e008 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|           | `-MemberExpr 0x55f5da50dfb8 <col:17> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55f5da50b610
|           |   `-CXXThisExpr 0x55f5da50dfa8 <col:17> 'const Handler *' implicit this
|           `-ImplicitCastExpr 0x55f5da50e020 <col:26> 'unsigned int' <IntegralCast>
|             `-DeclRefExpr 0x55f5da50dfe8 <col:26> 'Handler::Flags' EnumConstant 0x55f5da506dd0 'f_nonexclusive' 'Handler::Flags'
|-CXXMethodDecl 0x55f5da5086f0 <line:142:5, line:144:5> line:142:17 allow_concurrent_threads 'bool () const' inline
| `-CompoundStmt 0x55f5da50e1d8 <col:50, line:144:5>
|   `-ReturnStmt 0x55f5da50e1c8 <line:143:9, col:40>
|     `-ImplicitCastExpr 0x55f5da50e1b0 <col:16, col:40> 'bool' <IntegralToBoolean>
|       `-ParenExpr 0x55f5da50e190 <col:16, col:40> 'unsigned int'
|         `-BinaryOperator 0x55f5da50e170 <col:17, col:26> 'unsigned int' '&'
|           |-ImplicitCastExpr 0x55f5da50e140 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|           | `-MemberExpr 0x55f5da50e0f0 <col:17> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55f5da50b610
|           |   `-CXXThisExpr 0x55f5da50e0e0 <col:17> 'const Handler *' implicit this
|           `-ImplicitCastExpr 0x55f5da50e158 <col:26> 'unsigned int' <IntegralCast>
|             `-DeclRefExpr 0x55f5da50e120 <col:26> 'Handler::Flags' EnumConstant 0x55f5da506dd0 'f_nonexclusive' 'Handler::Flags'
|-CXXMethodDecl 0x55f5da5087b0 <line:164:5, line:166:5> line:164:17 raw 'bool () const' inline
| `-CompoundStmt 0x55f5da50e2c8 <col:29, line:166:5>
|   `-ReturnStmt 0x55f5da50e2b8 <line:165:2, col:18>
|     `-ImplicitCastExpr 0x55f5da50e2a0 <col:9, col:18> 'bool' <IntegralToBoolean>
|       `-BinaryOperator 0x55f5da50e280 <col:9, col:18> 'unsigned int' '&'
|         |-ImplicitCastExpr 0x55f5da50e250 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-MemberExpr 0x55f5da50e200 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55f5da50b610
|         |   `-CXXThisExpr 0x55f5da50e1f0 <col:9> 'const Handler *' implicit this
|         `-ImplicitCastExpr 0x55f5da50e268 <col:18> 'unsigned int' <IntegralCast>
|           `-DeclRefExpr 0x55f5da50e230 <col:18> 'Handler::Flags' EnumConstant 0x55f5da506e60 'f_raw' 'Handler::Flags'
|-CXXMethodDecl 0x55f5da508a38 <line:177:5, col:75> col:12 used call_read 'String (Element *, const String &, ErrorHandler *) const'
| |-ParmVarDecl 0x55f5da508860 <col:22, col:31> col:31 e 'Element *'
| |-ParmVarDecl 0x55f5da5088d8 <col:34, col:48> col:48 param 'const String &'
| `-ParmVarDecl 0x55f5da508950 <col:55, col:69> col:69 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55f5da508c48 <line:186:5, line:188:5> line:186:19 call_read 'String (Element *, ErrorHandler *) const' inline
| |-ParmVarDecl 0x55f5da508b00 <col:29, col:38> col:38 used e 'Element *'
| |-ParmVarDecl 0x55f5da508b78 <col:41, col:62> col:55 used errh 'ErrorHandler *' cinit
| | `-ImplicitCastExpr 0x55f5da50d3e0 <col:62> 'ErrorHandler *' <NullToPointer>
| |   `-IntegerLiteral 0x55f5da50d3c0 <col:62> 'int' 0
| `-CompoundStmt 0x55f5da50e568 <col:71, line:188:5>
|   `-ReturnStmt 0x55f5da50e558 <line:187:2, col:36>
|     `-ExprWithCleanups 0x55f5da50e540 <col:9, col:36> 'String'
|       `-CXXConstructExpr 0x55f5da50e510 <col:9, col:36> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x55f5da50e4f8 <col:9, col:36> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x55f5da50e4d8 <col:9, col:36> 'String' (CXXTemporary 0x55f5da50e4d8)
|             `-CXXMemberCallExpr 0x55f5da50e438 <col:9, col:36> 'String'
|               |-MemberExpr 0x55f5da50e408 <col:9> '<bound member function type>' ->call_read 0x55f5da508a38
|               | `-CXXThisExpr 0x55f5da50e3f8 <col:9> 'const Handler *' implicit this
|               |-ImplicitCastExpr 0x55f5da50e470 <col:19> 'Element *' <LValueToRValue>
|               | `-DeclRefExpr 0x55f5da50e350 <col:19> 'Element *' lvalue ParmVar 0x55f5da508b00 'e' 'Element *'
|               |-MaterializeTemporaryExpr 0x55f5da50e4a0 <col:22, col:29> 'const String' lvalue
|               | `-ImplicitCastExpr 0x55f5da50e488 <col:22, col:29> 'const String' <NoOp>
|               |   `-CXXBindTemporaryExpr 0x55f5da50e3b8 <col:22, col:29> 'String' (CXXTemporary 0x55f5da50e3b8)
|               |     `-CXXTemporaryObjectExpr 0x55f5da50e380 <col:22, col:29> 'String' 'void ()'
|               `-ImplicitCastExpr 0x55f5da50e4b8 <col:32> 'ErrorHandler *' <LValueToRValue>
|                 `-DeclRefExpr 0x55f5da50e3d8 <col:32> 'ErrorHandler *' lvalue ParmVar 0x55f5da508b78 'errh' 'ErrorHandler *'
|-CXXMethodDecl 0x55f5da508ee0 <line:198:5, col:73> col:9 used call_write 'int (const String &, Element *, ErrorHandler *) const'
| |-ParmVarDecl 0x55f5da508d08 <col:20, col:34> col:34 value 'const String &'
| |-ParmVarDecl 0x55f5da508d80 <col:41, col:50> col:50 e 'Element *'
| `-ParmVarDecl 0x55f5da508df8 <col:53, col:67> col:67 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55f5da509068 <line:207:5, col:37> col:12 unparse_name 'String (Element *) const'
| `-ParmVarDecl 0x55f5da508fa8 <col:25, col:34> col:34 e 'Element *'
|-CXXMethodDecl 0x55f5da509298 <line:216:5, col:63> col:19 unparse_name 'String (Element *, const String &)' static
| |-ParmVarDecl 0x55f5da509120 <col:32, col:41> col:41 e 'Element *'
| `-ParmVarDecl 0x55f5da509198 <col:44, col:58> col:58 hname 'const String &'
|-CXXMethodDecl 0x55f5da509398 <line:223:5, line:225:5> line:223:34 used blank_handler 'const Handler *()' static inline
| `-CompoundStmt 0x55f5da50e5c8 <col:50, line:225:5>
|   `-ReturnStmt 0x55f5da50e5b8 <line:224:2, col:9>
|     `-ImplicitCastExpr 0x55f5da50e5a0 <col:9> 'const Handler *' <LValueToRValue>
|       `-DeclRefExpr 0x55f5da50e580 <col:9> 'const Handler *' lvalue Var 0x55f5da50b740 'the_blank_handler' 'const Handler *'
|-EnumDecl 0x55f5da509438 <line:229:5, line:251:5> line:229:5
| |-EnumConstantDecl 0x55f5da509540 <line:230:2, col:11> col:2 h_read 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55f5da50a0e0 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f5da509520 <col:11> 'Handler::Flags' Int: 1
| |     `-DeclRefExpr 0x55f5da509500 <col:11> 'Handler::Flags' EnumConstant 0x55f5da506b90 'f_read' 'Handler::Flags'
| |-EnumConstantDecl 0x55f5da5095d0 <line:231:2, col:12> col:2 h_write 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55f5da50a0f8 <col:12> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f5da5095b0 <col:12> 'Handler::Flags' Int: 2
| |     `-DeclRefExpr 0x55f5da509590 <col:12> 'Handler::Flags' EnumConstant 0x55f5da506c20 'f_write' 'Handler::Flags'
| |-EnumConstantDecl 0x55f5da509660 <line:232:2, col:17> col:2 h_read_param 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55f5da50a110 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f5da509640 <col:17> 'Handler::Flags' Int: 4
| |     `-DeclRefExpr 0x55f5da509620 <col:17> 'Handler::Flags' EnumConstant 0x55f5da506cb0 'f_read_param' 'Handler::Flags'
| |-EnumConstantDecl 0x55f5da5096f0 <line:233:2, col:16> col:2 h_exclusive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55f5da50a128 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f5da5096d0 <col:16> 'Handler::Flags' Int: 0
| |     `-DeclRefExpr 0x55f5da5096b0 <col:16> 'Handler::Flags' EnumConstant 0x55f5da506d40 'f_exclusive' 'Handler::Flags'
| |-EnumConstantDecl 0x55f5da509780 <line:234:2, col:19> col:2 h_nonexclusive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55f5da50a140 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f5da509760 <col:19> 'Handler::Flags' Int: 32
| |     `-DeclRefExpr 0x55f5da509740 <col:19> 'Handler::Flags' EnumConstant 0x55f5da506dd0 'f_nonexclusive' 'Handler::Flags'
| |-EnumConstantDecl 0x55f5da509810 <line:235:2, col:10> col:2 h_raw 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55f5da50a158 <col:10> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f5da5097f0 <col:10> 'Handler::Flags' Int: 64
| |     `-DeclRefExpr 0x55f5da5097d0 <col:10> 'Handler::Flags' EnumConstant 0x55f5da506e60 'f_raw' 'Handler::Flags'
| |-EnumConstantDecl 0x55f5da5098a0 <line:236:2, col:19> col:2 h_read_private 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55f5da50a170 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f5da509880 <col:19> 'Handler::Flags' Int: 128
| |     `-DeclRefExpr 0x55f5da509860 <col:19> 'Handler::Flags' EnumConstant 0x55f5da506ef0 'f_read_private' 'Handler::Flags'
| |-EnumConstantDecl 0x55f5da509930 <line:237:2, col:20> col:2 h_write_private 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55f5da50a188 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f5da509910 <col:20> 'Handler::Flags' Int: 256
| |     `-DeclRefExpr 0x55f5da5098f0 <col:20> 'Handler::Flags' EnumConstant 0x55f5da506f80 'f_write_private' 'Handler::Flags'
| |-EnumConstantDecl 0x55f5da5099c0 <line:238:2, col:17> col:2 h_deprecated 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55f5da50a1a0 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f5da5099a0 <col:17> 'Handler::Flags' Int: 512
| |     `-DeclRefExpr 0x55f5da509980 <col:17> 'Handler::Flags' EnumConstant 0x55f5da507010 'f_deprecated' 'Handler::Flags'
| |-EnumConstantDecl 0x55f5da509a50 <line:239:2, col:15> col:2 h_uncommon 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55f5da50a1b8 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f5da509a30 <col:15> 'Handler::Flags' Int: 1024
| |     `-DeclRefExpr 0x55f5da509a10 <col:15> 'Handler::Flags' EnumConstant 0x55f5da5070a0 'f_uncommon' 'Handler::Flags'
| |-EnumConstantDecl 0x55f5da509ae0 <line:240:2, col:11> col:2 h_calm 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55f5da50a1d0 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f5da509ac0 <col:11> 'Handler::Flags' Int: 2048
| |     `-DeclRefExpr 0x55f5da509aa0 <col:11> 'Handler::Flags' EnumConstant 0x55f5da507130 'f_calm' 'Handler::Flags'
| |-EnumConstantDecl 0x55f5da509b70 <line:241:2, col:16> col:2 h_expensive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55f5da50a1e8 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f5da509b50 <col:16> 'Handler::Flags' Int: 4096
| |     `-DeclRefExpr 0x55f5da509b30 <col:16> 'Handler::Flags' EnumConstant 0x55f5da5071c0 'f_expensive' 'Handler::Flags'
| |-EnumConstantDecl 0x55f5da509c00 <line:242:2, col:13> col:2 h_button 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55f5da50a200 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f5da509be0 <col:13> 'Handler::Flags' Int: 8192
| |     `-DeclRefExpr 0x55f5da509bc0 <col:13> 'Handler::Flags' EnumConstant 0x55f5da507250 'f_button' 'Handler::Flags'
| |-EnumConstantDecl 0x55f5da509c90 <line:243:2, col:15> col:2 h_checkbox 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55f5da50a218 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f5da509c70 <col:15> 'Handler::Flags' Int: 16384
| |     `-DeclRefExpr 0x55f5da509c50 <col:15> 'Handler::Flags' EnumConstant 0x55f5da5072e0 'f_checkbox' 'Handler::Flags'
| |-EnumConstantDecl 0x55f5da509d20 <line:244:2, col:20> col:2 h_driver_flag_0 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55f5da50a230 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f5da509d00 <col:20> 'Handler::Flags' Int: 67108864
| |     `-DeclRefExpr 0x55f5da509ce0 <col:20> 'Handler::Flags' EnumConstant 0x55f5da5073b0 'f_driver0' 'Handler::Flags'
| |-EnumConstantDecl 0x55f5da509db0 <line:245:9, col:27> col:9 h_driver_flag_1 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55f5da50a248 <col:27> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f5da509d90 <col:27> 'Handler::Flags' Int: 134217728
| |     `-DeclRefExpr 0x55f5da509d70 <col:27> 'Handler::Flags' EnumConstant 0x55f5da507480 'f_driver1' 'Handler::Flags'
| |-EnumConstantDecl 0x55f5da509e40 <line:246:2, col:22> col:2 h_user_flag_shift 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55f5da50a260 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f5da509e20 <col:22> 'Handler::Flags' Int: 28
| |     `-DeclRefExpr 0x55f5da509e00 <col:22> 'Handler::Flags' EnumConstant 0x55f5da507510 'f_user_shift' 'Handler::Flags'
| |-EnumConstantDecl 0x55f5da509ed0 <line:247:2, col:18> col:2 h_user_flag_0 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55f5da50a278 <col:18> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f5da509eb0 <col:18> 'Handler::Flags' Int: 268435456
| |     `-DeclRefExpr 0x55f5da509e90 <col:18> 'Handler::Flags' EnumConstant 0x55f5da5075e0 'f_user0' 'Handler::Flags'
| |-EnumConstantDecl 0x55f5da509f60 <line:248:2, col:25> col:2 h_read_comprehensive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55f5da50a290 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f5da509f40 <col:25> 'Handler::Flags' Int: 8
| |     `-DeclRefExpr 0x55f5da509f20 <col:25> 'Handler::Flags' EnumConstant 0x55f5da507670 'f_read_comprehensive' 'Handler::Flags'
| |-EnumConstantDecl 0x55f5da509ff0 <line:249:2, col:26> col:2 h_write_comprehensive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55f5da50a2a8 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f5da509fd0 <col:26> 'Handler::Flags' Int: 16
| |     `-DeclRefExpr 0x55f5da509fb0 <col:26> 'Handler::Flags' EnumConstant 0x55f5da507700 'f_write_comprehensive' 'Handler::Flags'
| `-EnumConstantDecl 0x55f5da50a090 <line:250:2, col:20> col:2 h_special_flags 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
|   `-ImplicitCastExpr 0x55f5da50a2c0 <col:20> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55f5da50a070 <col:20> 'Handler::Flags' Int: 31
|       `-DeclRefExpr 0x55f5da50a040 <col:20> 'Handler::Flags' EnumConstant 0x55f5da507890 'f_special' 'Handler::Flags'
|-EnumDecl 0x55f5da50a2d8 <line:252:5, line:267:5> line:252:10 DeprecatedFlags
| |-EnumConstantDecl 0x55f5da50a3e0 <line:253:2, col:12> col:2 OP_READ 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x55f5da50a940 <col:12> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f5da50a3c0 <col:12> 'Handler::Flags' Int: 1
| |     `-DeclRefExpr 0x55f5da50a3a0 <col:12> 'Handler::Flags' EnumConstant 0x55f5da506b90 'f_read' 'Handler::Flags'
| |-EnumConstantDecl 0x55f5da50a470 <line:254:2, col:13> col:2 OP_WRITE 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x55f5da50a958 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f5da50a450 <col:13> 'Handler::Flags' Int: 2
| |     `-DeclRefExpr 0x55f5da50a430 <col:13> 'Handler::Flags' EnumConstant 0x55f5da506c20 'f_write' 'Handler::Flags'
| |-EnumConstantDecl 0x55f5da50a500 <line:255:2, col:15> col:2 READ_PARAM 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x55f5da50a970 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f5da50a4e0 <col:15> 'Handler::Flags' Int: 4
| |     `-DeclRefExpr 0x55f5da50a4c0 <col:15> 'Handler::Flags' EnumConstant 0x55f5da506cb0 'f_read_param' 'Handler::Flags'
| |-EnumConstantDecl 0x55f5da50a590 <line:256:2, col:8> col:2 RAW 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x55f5da50a988 <col:8> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f5da50a570 <col:8> 'Handler::Flags' Int: 64
| |     `-DeclRefExpr 0x55f5da50a550 <col:8> 'Handler::Flags' EnumConstant 0x55f5da506e60 'f_raw' 'Handler::Flags'
| |-EnumConstantDecl 0x55f5da50a620 <line:261:2, col:9> col:2 CALM 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x55f5da50a9a0 <col:9> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f5da50a600 <col:9> 'Handler::Flags' Int: 2048
| |     `-DeclRefExpr 0x55f5da50a5e0 <col:9> 'Handler::Flags' EnumConstant 0x55f5da507130 'f_calm' 'Handler::Flags'
| |-EnumConstantDecl 0x55f5da50a6b0 <line:262:2, col:14> col:2 EXPENSIVE 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x55f5da50a9b8 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f5da50a690 <col:14> 'Handler::Flags' Int: 4096
| |     `-DeclRefExpr 0x55f5da50a670 <col:14> 'Handler::Flags' EnumConstant 0x55f5da5071c0 'f_expensive' 'Handler::Flags'
| |-EnumConstantDecl 0x55f5da50a740 <line:263:2, col:11> col:2 BUTTON 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x55f5da50a9d0 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f5da50a720 <col:11> 'Handler::Flags' Int: 8192
| |     `-DeclRefExpr 0x55f5da50a700 <col:11> 'Handler::Flags' EnumConstant 0x55f5da507250 'f_button' 'Handler::Flags'
| |-EnumConstantDecl 0x55f5da50a7d0 <line:264:2, col:13> col:2 CHECKBOX 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x55f5da50a9e8 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f5da50a7b0 <col:13> 'Handler::Flags' Int: 16384
| |     `-DeclRefExpr 0x55f5da50a790 <col:13> 'Handler::Flags' EnumConstant 0x55f5da5072e0 'f_checkbox' 'Handler::Flags'
| |-EnumConstantDecl 0x55f5da50a860 <line:265:2, col:20> col:2 USER_FLAG_SHIFT 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x55f5da50aa00 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f5da50a840 <col:20> 'Handler::Flags' Int: 28
| |     `-DeclRefExpr 0x55f5da50a820 <col:20> 'Handler::Flags' EnumConstant 0x55f5da507510 'f_user_shift' 'Handler::Flags'
| `-EnumConstantDecl 0x55f5da50a8f0 <line:266:2, col:16> col:2 USER_FLAG_0 'Handler::DeprecatedFlags'
|   `-ImplicitCastExpr 0x55f5da50aa18 <col:16> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55f5da50a8d0 <col:16> 'Handler::Flags' Int: 268435456
|       `-DeclRefExpr 0x55f5da50a8b0 <col:16> 'Handler::Flags' EnumConstant 0x55f5da5075e0 'f_user0' 'Handler::Flags'
|-EnumDecl 0x55f5da50aa30 <line:268:5, line:271:5> line:268:5
| |-DeprecatedAttr 0x55f5da50aaf0 <col:25> "" ""
| |-EnumConstantDecl 0x55f5da50aba0 <line:269:2, col:14> col:2 EXCLUSIVE 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:268:5)'
| | `-ImplicitCastExpr 0x55f5da50ac80 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f5da50ab80 <col:14> 'Handler::Flags' Int: 0
| |     `-DeclRefExpr 0x55f5da50ab60 <col:14> 'Handler::Flags' EnumConstant 0x55f5da506d40 'f_exclusive' 'Handler::Flags'
| `-EnumConstantDecl 0x55f5da50ac30 <line:270:2, col:17> col:2 NONEXCLUSIVE 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:268:5)'
|   `-ImplicitCastExpr 0x55f5da50ac98 <col:17> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55f5da50ac10 <col:17> 'Handler::Flags' Int: 32
|       `-DeclRefExpr 0x55f5da50abf0 <col:17> 'Handler::Flags' EnumConstant 0x55f5da506dd0 'f_nonexclusive' 'Handler::Flags'
|-CXXMethodDecl 0x55f5da50ae18 <line:281:5, line:284:5> line:281:19 __call_read 'String (Element *, void *) const' inline
| |-ParmVarDecl 0x55f5da50acc0 <col:31, col:40> col:40 used e 'Element *'
| |-ParmVarDecl 0x55f5da50ad40 <col:43, col:49> col:49 used new_user_data 'void *'
| `-CompoundStmt 0x55f5da50ec88 <col:70, line:284:5>
|   |-ParenExpr 0x55f5da50eaa8 <line:282:2, col:233> 'void'
|   | `-ConditionalOperator 0x55f5da50ea78 <col:3, col:232> 'void'
|   |   |-CXXStaticCastExpr 0x55f5da50e7a8 <col:3, col:75> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55f5da50e778 <col:23, col:69> 'bool' '=='
|   |   |   |-ParenExpr 0x55f5da50e720 <col:23, col:64> 'unsigned int'
|   |   |   | `-BinaryOperator 0x55f5da50e700 <col:24, col:63> 'unsigned int' '&'
|   |   |   |   |-ImplicitCastExpr 0x55f5da50e6d0 <col:24> 'uint32_t':'unsigned int' <LValueToRValue>
|   |   |   |   | `-MemberExpr 0x55f5da50e5f0 <col:24> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55f5da50b610
|   |   |   |   |   `-CXXThisExpr 0x55f5da50e5e0 <col:24> 'const Handler *' implicit this
|   |   |   |   `-ImplicitCastExpr 0x55f5da50e6e8 <col:33, col:63> 'unsigned int' <IntegralCast>
|   |   |   |     `-ParenExpr 0x55f5da50e6b0 <col:33, col:63> 'int'
|   |   |   |       `-BinaryOperator 0x55f5da50e690 <col:34, col:43> 'int' '|'
|   |   |   |         |-ImplicitCastExpr 0x55f5da50e660 <col:34> 'int' <IntegralCast>
|   |   |   |         | `-DeclRefExpr 0x55f5da50e620 <col:34> 'Handler::Flags' EnumConstant 0x55f5da506b90 'f_read' 'Handler::Flags'
|   |   |   |         `-ImplicitCastExpr 0x55f5da50e678 <col:43> 'int' <IntegralCast>
|   |   |   |           `-DeclRefExpr 0x55f5da50e640 <col:43> 'Handler::Flags' EnumConstant 0x55f5da507670 'f_read_comprehensive' 'Handler::Flags'
|   |   |   `-ImplicitCastExpr 0x55f5da50e760 <col:69> 'unsigned int' <IntegralCast>
|   |   |     `-DeclRefExpr 0x55f5da50e740 <col:69> 'Handler::Flags' EnumConstant 0x55f5da506b90 'f_read' 'Handler::Flags'
|   |   |-CXXFunctionalCastExpr 0x55f5da50e808 <col:79, col:86> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55f5da50e7e8 <col:85> 'int' 0
|   |   `-CallExpr 0x55f5da50e9d8 <col:90, col:232> 'void'
|   |     |-ImplicitCastExpr 0x55f5da50e9c0 <col:90> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55f5da50e9a0 <col:90> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55f5da04a0d0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55f5da50ea18 <col:105> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f5da50e878 <col:105> 'const char [53]' lvalue "(_flags & (f_read | f_read_comprehensive)) == f_read"
|   |     |-ImplicitCastExpr 0x55f5da50ea30 <col:161> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f5da50e8c8 <col:161> 'const char [30]' lvalue "../dummy_inc/click/handler.hh"
|   |     |-ImplicitCastExpr 0x55f5da50ea48 <col:194> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55f5da50e900 <col:194> 'int' 282
|   |     `-ImplicitCastExpr 0x55f5da50ea60 <col:199, col:213> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55f5da50e988 <col:199, col:213> 'const char [53]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55f5da50e970 <col:213> 'const char [53]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55f5da50e920 <col:213> 'const char [53]' lvalue "String Handler::__call_read(Element *, void *) const"
|   `-ReturnStmt 0x55f5da50ec78 <line:283:2, col:38>
|     `-ExprWithCleanups 0x55f5da50ec60 <col:9, col:38> 'String'
|       `-CXXConstructExpr 0x55f5da50ec30 <col:9, col:38> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x55f5da50ec18 <col:9, col:38> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x55f5da50ebf8 <col:9, col:38> 'String' (CXXTemporary 0x55f5da50ebf8)
|             `-CallExpr 0x55f5da50eb90 <col:9, col:38> 'String'
|               |-ImplicitCastExpr 0x55f5da50eb78 <col:9, col:20> 'ReadHandlerCallback':'String (*)(Element *, void *)' <LValueToRValue>
|               | `-MemberExpr 0x55f5da50eb08 <col:9, col:20> 'const ReadHandlerCallback':'String (*const)(Element *, void *)' lvalue .r 0x55f5da50b120
|               |   `-MemberExpr 0x55f5da50ead8 <col:9> 'const union (anonymous union at ../dummy_inc/click/handler.hh:290:5)':'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5)' lvalue ->_read_hook 0x55f5da50b1e8
|               |     `-CXXThisExpr 0x55f5da50eac8 <col:9> 'const Handler *' implicit this
|               |-ImplicitCastExpr 0x55f5da50ebc0 <col:22> 'Element *' <LValueToRValue>
|               | `-DeclRefExpr 0x55f5da50eb38 <col:22> 'Element *' lvalue ParmVar 0x55f5da50acc0 'e' 'Element *'
|               `-ImplicitCastExpr 0x55f5da50ebd8 <col:25> 'void *' <LValueToRValue>
|                 `-DeclRefExpr 0x55f5da50eb58 <col:25> 'void *' lvalue ParmVar 0x55f5da50ad40 'new_user_data' 'void *'
|-AccessSpecDecl 0x55f5da50aec8 <line:287:3, col:10> col:3 private
|-FieldDecl 0x55f5da50af00 <line:289:5, col:12> col:12 referenced _name 'String'
|-CXXRecordDecl 0x55f5da50af50 <line:290:5, line:293:5> line:290:5 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x55f5da50b0a0 <line:291:2, col:18> col:18 h 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-FieldDecl 0x55f5da50b120 <line:292:2, col:22> col:22 referenced r 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-CXXConstructorDecl 0x55f5da50bf18 <line:290:5> col:5 implicit constexpr  'void (const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &)' inline default trivial noexcept-unevaluated 0x55f5da50bf18
| | `-ParmVarDecl 0x55f5da50c028 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &'
| |-CXXConstructorDecl 0x55f5da50c0c8 <col:5> col:5 implicit constexpr  'void (Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&)' inline default trivial noexcept-unevaluated 0x55f5da50c0c8
| | `-ParmVarDecl 0x55f5da50c1d8 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&'
| |-CXXDestructorDecl 0x55f5da50c248 <col:5> col:5 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x55f5da50c248
| |-CXXMethodDecl 0x55f5da50cb18 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &(const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &)' inline default trivial noexcept-unevaluated 0x55f5da50cb18
| | `-ParmVarDecl 0x55f5da50cc28 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &'
| |-CXXMethodDecl 0x55f5da50cc98 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &(Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&)' inline default trivial noexcept-unevaluated 0x55f5da50cc98
| | `-ParmVarDecl 0x55f5da50cda8 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&'
| `-CXXConstructorDecl 0x55f5da6e7f68 <col:5> col:5 implicit used  'void () noexcept' inline default trivial
|   `-CompoundStmt 0x55f5da6e8040 <col:5>
|-FieldDecl 0x55f5da50b1e8 <col:5, line:293:7> col:7 referenced _read_hook 'union (anonymous union at ../dummy_inc/click/handler.hh:290:5)':'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5)'
|-CXXRecordDecl 0x55f5da50b250 <line:294:5, line:297:5> line:294:5 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x55f5da50b378 <line:295:2, col:18> col:18 h 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-FieldDecl 0x55f5da50b400 <line:296:2, col:23> col:23 referenced w 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-CXXConstructorDecl 0x55f5da50c378 <line:294:5> col:5 implicit constexpr  'void (const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &)' inline default trivial noexcept-unevaluated 0x55f5da50c378
| | `-ParmVarDecl 0x55f5da50c488 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &'
| |-CXXConstructorDecl 0x55f5da50c528 <col:5> col:5 implicit constexpr  'void (Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&)' inline default trivial noexcept-unevaluated 0x55f5da50c528
| | `-ParmVarDecl 0x55f5da50c638 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&'
| |-CXXDestructorDecl 0x55f5da50c6a8 <col:5> col:5 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x55f5da50c6a8
| |-CXXMethodDecl 0x55f5da50ce48 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &(const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &)' inline default trivial noexcept-unevaluated 0x55f5da50ce48
| | `-ParmVarDecl 0x55f5da50cf58 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &'
| |-CXXMethodDecl 0x55f5da50cfc8 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &(Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&)' inline default trivial noexcept-unevaluated 0x55f5da50cfc8
| | `-ParmVarDecl 0x55f5da50d0d8 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&'
| `-CXXConstructorDecl 0x55f5da6e80a0 <col:5> col:5 implicit used  'void () noexcept' inline default trivial
|   `-CompoundStmt 0x55f5da6e8180 <col:5>
|-FieldDecl 0x55f5da50b4c8 <col:5, line:297:7> col:7 referenced _write_hook 'union (anonymous union at ../dummy_inc/click/handler.hh:294:5)':'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5)'
|-FieldDecl 0x55f5da50b548 <line:298:5, col:11> col:11 referenced _read_user_data 'void *'
|-FieldDecl 0x55f5da50b5b0 <line:299:5, col:11> col:11 referenced _write_user_data 'void *'
|-FieldDecl 0x55f5da50b610 <line:300:5, col:14> col:14 referenced _flags 'uint32_t':'unsigned int'
|-FieldDecl 0x55f5da50b678 <line:301:5, col:9> col:9 _use_count 'int'
|-FieldDecl 0x55f5da50b6e0 <line:302:5, col:9> col:9 _next_by_name 'int'
|-VarDecl 0x55f5da50b740 <line:304:5, col:27> col:27 used the_blank_handler 'const Handler *' static
|-CXXConstructorDecl 0x55f5da50b860 <line:306:5, col:38> col:5 Handler 'void (const String &)'
| `-ParmVarDecl 0x55f5da50b7b8 <col:13, col:37> col:28 'const String &' cinit
|   `-ExprWithCleanups 0x55f5da50d490 <col:30, col:37> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x55f5da50d478 <col:30, col:37> 'const String' lvalue
|       `-ImplicitCastExpr 0x55f5da50d460 <col:30, col:37> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x55f5da50d440 <col:30, col:37> 'String' (CXXTemporary 0x55f5da50d440)
|           `-CXXTemporaryObjectExpr 0x55f5da50d408 <col:30, col:37> 'String' 'void ()'
|-CXXMethodDecl 0x55f5da50ba08 <line:308:5, col:41> col:17 combine 'void (const Handler &)' inline
| `-ParmVarDecl 0x55f5da50b948 <col:25, col:40> col:40 x 'const Handler &'
|-CXXMethodDecl 0x55f5da50bb88 <line:309:5, col:46> col:17 compatible 'bool (const Handler &) const' inline
| `-ParmVarDecl 0x55f5da50bac0 <col:28, col:43> col:43 x 'const Handler &'
|-FriendDecl 0x55f5da50bd48 <line:311:5, col:18> col:12 'class Router':'Router'
|-CXXConstructorDecl 0x55f5da50bd88 <line:19:7> col:7 implicit Handler 'void (const Handler &)' inline default noexcept-unevaluated 0x55f5da50bd88
| `-ParmVarDecl 0x55f5da50be68 <col:7> col:7 'const Handler &'
|-CXXConstructorDecl 0x55f5da50c7b8 <col:7> col:7 implicit Handler 'void (Handler &&)' inline default noexcept-unevaluated 0x55f5da50c7b8
| `-ParmVarDecl 0x55f5da50c8c8 <col:7> col:7 'Handler &&'
|-CXXMethodDecl 0x55f5da50c968 <col:7> col:7 implicit operator= 'Handler &(const Handler &)' inline default noexcept-unevaluated 0x55f5da50c968
| `-ParmVarDecl 0x55f5da50ca78 <col:7> col:7 'const Handler &'
|-CXXMethodDecl 0x55f5da50d148 <col:7> col:7 implicit operator= 'Handler &(Handler &&)' inline default noexcept-unevaluated 0x55f5da50d148
| `-ParmVarDecl 0x55f5da50d258 <col:7> col:7 'Handler &&'
`-CXXDestructorDecl 0x55f5da50d2e0 <col:7> col:7 implicit ~Handler 'void ()' inline default noexcept-unevaluated 0x55f5da50d2e0

Layout: <CGRecordLayout
  LLVMType:%class.Handler = type <{ %class.String, %union.anon, %union.anon.11, i8*, i8*, i32, i32, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Handler.base = type <{ %class.String, %union.anon, %union.anon.11, i8*, i8*, i32, i32, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55f5da6ce818 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'void *'
|-CXXRecordDecl 0x55f5da6cea28 prev 0x55f5da6ce818 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55f5da6cfa40 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<void *>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x55f5da6cf9f0 'typename array_memory<void *>::type' sugar
|   `-TypedefType 0x55f5da6cf9d0 'conditional<true, sized_array_memory<8>, typed_array_memory<void *> >::type' sugar
|     |-Typedef 0x55f5da6cf880 'type'
|     `-SubstTemplateTypeParmType 0x55f5da55d460 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x55f5da273cd0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f5da273c78 'T'
|       `-RecordType 0x55f5da55cfb0 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x55f5da55cec8 'sized_array_memory'
|-FieldDecl 0x55f5da6cfb40 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<void *>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x55f5da6cfb90 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55f5da6cfbc8 <line:118:5, col:15> col:15 value_type 'void *':'void *'
| `-SubstTemplateTypeParmType 0x55f5da6ceac0 'void *' sugar
|   |-TemplateTypeParmType 0x55f5da2ab9c0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55f5da2ab968 'T'
|   `-PointerType 0x55f5d9fa9b10 'void *'
|     `-BuiltinType 0x55f5d9fa9310 'void'
|-TypedefDecl 0x55f5da6cfc58 <line:119:5, col:16> col:16 reference 'void *&'
| `-LValueReferenceType 0x55f5da6cfc20 'void *&'
|   `-SubstTemplateTypeParmType 0x55f5da6ceac0 'void *' sugar
|     |-TemplateTypeParmType 0x55f5da2ab9c0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55f5da2ab968 'T'
|     `-PointerType 0x55f5d9fa9b10 'void *'
|       `-BuiltinType 0x55f5d9fa9310 'void'
|-TypedefDecl 0x55f5da6cfd18 <line:120:5, col:22> col:22 const_reference 'void *const &'
| `-LValueReferenceType 0x55f5da6cfce0 'void *const &'
|   `-QualType 0x55f5da6ceac1 'void *const' const
|     `-SubstTemplateTypeParmType 0x55f5da6ceac0 'void *' sugar
|       |-TemplateTypeParmType 0x55f5da2ab9c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f5da2ab968 'T'
|       `-PointerType 0x55f5d9fa9b10 'void *'
|         `-BuiltinType 0x55f5d9fa9310 'void'
|-TypedefDecl 0x55f5da6cfda8 <line:121:5, col:16> col:16 pointer 'void **'
| `-PointerType 0x55f5da6cfd70 'void **'
|   `-SubstTemplateTypeParmType 0x55f5da6ceac0 'void *' sugar
|     |-TemplateTypeParmType 0x55f5da2ab9c0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55f5da2ab968 'T'
|     `-PointerType 0x55f5d9fa9b10 'void *'
|       `-BuiltinType 0x55f5d9fa9310 'void'
|-TypedefDecl 0x55f5da6cfe38 <line:122:5, col:22> col:22 const_pointer 'void *const *'
| `-PointerType 0x55f5da6cfe00 'void *const *'
|   `-QualType 0x55f5da6ceac1 'void *const' const
|     `-SubstTemplateTypeParmType 0x55f5da6ceac0 'void *' sugar
|       |-TemplateTypeParmType 0x55f5da2ab9c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f5da2ab968 'T'
|       `-PointerType 0x55f5d9fa9b10 'void *'
|         `-BuiltinType 0x55f5d9fa9310 'void'
|-TypedefDecl 0x55f5da6d0a20 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<void *>::type':'void *'
| `-ElaboratedType 0x55f5da6d09d0 'typename fast_argument<void *>::type' sugar
|   `-TypedefType 0x55f5da6d09b0 'fast_argument<void *, false>::type' sugar
|     |-Typedef 0x55f5da6d0940 'type'
|     `-SubstTemplateTypeParmType 0x55f5da6d0700 'void *' sugar
|       |-TemplateTypeParmType 0x55f5da27ead0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f5da27ea80 'T'
|       `-PointerType 0x55f5d9fa9b10 'void *'
|         `-BuiltinType 0x55f5d9fa9310 'void'
|-TypedefDecl 0x55f5da6d0a88 <line:126:5, col:22> col:22 const_access_type 'void *const &'
| `-LValueReferenceType 0x55f5da6cfce0 'void *const &'
|   `-QualType 0x55f5da6ceac1 'void *const' const
|     `-SubstTemplateTypeParmType 0x55f5da6ceac0 'void *' sugar
|       |-TemplateTypeParmType 0x55f5da2ab9c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f5da2ab968 'T'
|       `-PointerType 0x55f5d9fa9b10 'void *'
|         `-BuiltinType 0x55f5d9fa9310 'void'
|-TypedefDecl 0x55f5da6d0ae0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55f5d9fa93b0 'int'
|-TypedefDecl 0x55f5da6d0b48 <line:130:5, col:16> col:16 iterator 'void **'
| `-PointerType 0x55f5da6cfd70 'void **'
|   `-SubstTemplateTypeParmType 0x55f5da6ceac0 'void *' sugar
|     |-TemplateTypeParmType 0x55f5da2ab9c0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55f5da2ab968 'T'
|     `-PointerType 0x55f5d9fa9b10 'void *'
|       `-BuiltinType 0x55f5d9fa9310 'void'
|-TypedefDecl 0x55f5da6d0bb0 <line:131:5, col:22> col:22 const_iterator 'void *const *'
| `-PointerType 0x55f5da6cfe00 'void *const *'
|   `-QualType 0x55f5da6ceac1 'void *const' const
|     `-SubstTemplateTypeParmType 0x55f5da6ceac0 'void *' sugar
|       |-TemplateTypeParmType 0x55f5da2ab9c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f5da2ab968 'T'
|       `-PointerType 0x55f5d9fa9b10 'void *'
|         `-BuiltinType 0x55f5d9fa9310 'void'
|-EnumDecl 0x55f5da6d0c08 <line:134:5> col:5
| `-EnumConstantDecl 0x55f5da6d0d00 <col:12, col:40> col:12 RESERVE_GROW 'Vector<void *>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55f5da6d0ce0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55f5da2ad048 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55f5da2ad020 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55f5da2ad000 <col:40> 'int' 1
|-CXXConstructorDecl 0x55f5da6d0d88 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55f5da6d0fd8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<void *>::value_argument_type)' inline
| |-ParmVarDecl 0x55f5da6d0e40 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55f5da6d0ee0 <col:41, col:61> col:61 v 'Vector<void *>::value_argument_type':'void *'
|-CXXConstructorDecl 0x55f5da6d1298 <line:139:5, col:37> col:12 Vector 'void (const Vector<void *> &)' inline
| `-ParmVarDecl 0x55f5da6d1180 <col:19, col:36> col:36 x 'const Vector<void *> &'
|-CXXConstructorDecl 0x55f5da6d1558 <line:141:5, col:32> col:12 Vector 'void (Vector<void *> &&)' inline
| `-ParmVarDecl 0x55f5da6d1440 <col:19, col:31> col:31 x 'Vector<void *> &&'
|-CXXMethodDecl 0x55f5da6d18a0 <line:144:5, col:51> col:23 operator= 'Vector<void *> &(const Vector<void *> &)' inline
| `-ParmVarDecl 0x55f5da6d1780 <col:33, col:50> col:50 x 'const Vector<void *> &'
|-CXXMethodDecl 0x55f5da6d1bb0 <line:146:5, col:46> col:23 operator= 'Vector<void *> &(Vector<void *> &&)' inline
| `-ParmVarDecl 0x55f5da6d1a90 <col:33, col:45> col:45 x 'Vector<void *> &&'
|-CXXMethodDecl 0x55f5da6d1ea0 <line:148:5, col:70> col:23 assign 'Vector<void *> &(Vector::size_type, Vector<void *>::value_argument_type)' inline
| |-ParmVarDecl 0x55f5da6d1ce8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55f5da6d1d60 <col:43, col:69> col:63 v 'Vector<void *>::value_argument_type':'void *'
|-CXXMethodDecl 0x55f5da6d1ff8 <line:150:5, col:55> col:49 begin 'Vector<void *>::iterator ()'
| |-NoInlineAttr 0x55f5da6d20d8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f5da6d2130 <col:30> Inherited
|-CXXMethodDecl 0x55f5da6d2178 <line:151:5, col:53> col:49 end 'Vector<void *>::iterator ()'
| |-NoInlineAttr 0x55f5da6d2228 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f5da6d2280 <col:30> Inherited
|-CXXMethodDecl 0x55f5da6d2348 <line:152:5, col:63> col:55 begin 'Vector<void *>::const_iterator () const'
| |-NoInlineAttr 0x55f5da6d23f8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f5da6d2450 <col:30> Inherited
|-CXXMethodDecl 0x55f5da6d2498 <line:153:5, col:61> col:55 end 'Vector<void *>::const_iterator () const'
| |-NoInlineAttr 0x55f5da6d2548 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f5da6d25a0 <col:30> Inherited
|-CXXMethodDecl 0x55f5da6d25e8 <line:154:5, col:64> col:55 cbegin 'Vector<void *>::const_iterator () const'
| |-NoInlineAttr 0x55f5da6d2698 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f5da6d26f0 <col:30> Inherited
|-CXXMethodDecl 0x55f5da6d2738 <line:155:5, col:62> col:55 cend 'Vector<void *>::const_iterator () const'
| |-NoInlineAttr 0x55f5da6d27e8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f5da6d2840 <col:30> Inherited
|-CXXMethodDecl 0x55f5da6d2868 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55f5da6d2918 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55f5da6d29c8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55f5da6d2b88 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<void *>::value_argument_type)' inline
| |-ParmVarDecl 0x55f5da6d2a78 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55f5da6d2af0 <col:37, col:63> col:57 v 'Vector<void *>::value_argument_type':'void *'
|-CXXMethodDecl 0x55f5da6d5270 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55f5da6d51e0 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f5da6d5418 <line:163:5, col:65> col:43 operator[] 'void *&(Vector::size_type)'
| |-ParmVarDecl 0x55f5da6d5328 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55f5da6d54d0 <col:20>
| `-OptimizeNoneAttr 0x55f5da6d5528 <col:30>
|-CXXMethodDecl 0x55f5da6d5648 <line:164:5, col:73> col:49 operator[] 'void *const &(Vector::size_type) const'
| |-ParmVarDecl 0x55f5da6d5550 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55f5da6d5700 <col:20>
| `-OptimizeNoneAttr 0x55f5da6d5758 <col:30>
|-CXXMethodDecl 0x55f5da6d5810 <line:165:5, col:29> col:15 at 'void *&(Vector::size_type)' inline
| `-ParmVarDecl 0x55f5da6d5780 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f5da6d5958 <line:166:5, col:37> col:21 at 'void *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55f5da6d58c8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f5da6d5a88 <line:167:5, col:21> col:15 front 'void *&()' inline
|-CXXMethodDecl 0x55f5da6d5bb8 <line:168:5, col:29> col:21 front 'void *const &() const' inline
|-CXXMethodDecl 0x55f5da6d5c88 <line:169:5, col:20> col:15 back 'void *&()' inline
|-CXXMethodDecl 0x55f5da6d5d58 <line:170:5, col:28> col:21 back 'void *const &() const' inline
|-CXXMethodDecl 0x55f5da6d5e98 <line:172:5, col:39> col:15 unchecked_at 'void *&(Vector::size_type)' inline
| `-ParmVarDecl 0x55f5da6d5e08 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f5da6d5fe0 <line:173:5, col:47> col:21 unchecked_at 'void *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55f5da6d5f50 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f5da6d6128 <line:174:5, col:59> col:15 at_u 'void *&(Vector::size_type)' inline
| |-ParmVarDecl 0x55f5da6d6098 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55f5da6d61e0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55f5da6d62e0 <line:175:5, col:71> col:21 at_u 'void *const &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55f5da6d6250 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55f5da6d6398 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55f5da6d6458 <line:177:5, col:20> col:15 data 'void **()' inline
|-CXXMethodDecl 0x55f5da6d6558 <line:178:5, col:28> col:21 data 'void *const *() const' inline
|-CXXMethodDecl 0x55f5da6d66d8 <line:180:5, col:48> col:17 push_back 'void (Vector<void *>::value_argument_type)' inline
| `-ParmVarDecl 0x55f5da6d6618 <col:27, col:47> col:47 v 'Vector<void *>::value_argument_type':'void *'
|-FunctionTemplateDecl 0x55f5da6d6e98 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55f5da6d6790 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<void *>':'fast_argument<void *, false>'
| `-CXXMethodDecl 0x55f5da6d6df8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (void *&&)' inline
|   `-ParmVarDecl 0x55f5da6d6cf8 <col:58, col:62> col:62 v 'void *&&'
|-CXXMethodDecl 0x55f5da6d6f78 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55f5da6d70c8 <line:186:5, col:49> col:17 push_front 'void (Vector<void *>::value_argument_type)' inline
| `-ParmVarDecl 0x55f5da6d7038 <col:28, col:48> col:48 v 'Vector<void *>::value_argument_type':'void *'
|-CXXMethodDecl 0x55f5da6d7180 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55f5da6d73c8 <line:189:5, col:62> col:21 insert 'Vector<void *>::iterator (Vector<void *>::iterator, Vector<void *>::value_argument_type)' inline
| |-ParmVarDecl 0x55f5da6d7240 <col:28, col:37> col:37 it 'Vector<void *>::iterator':'void **'
| `-ParmVarDecl 0x55f5da6d72b8 <col:41, col:61> col:61 v 'Vector<void *>::value_argument_type':'void *'
|-CXXMethodDecl 0x55f5da6d7588 <line:190:5, col:38> col:21 erase 'Vector<void *>::iterator (Vector<void *>::iterator)' inline
| `-ParmVarDecl 0x55f5da6d7498 <col:27, col:36> col:36 it 'Vector<void *>::iterator':'void **'
|-CXXMethodDecl 0x55f5da6d77d8 <line:191:5, col:49> col:21 erase 'Vector<void *>::iterator (Vector<void *>::iterator, Vector<void *>::iterator)' inline
| |-ParmVarDecl 0x55f5da6d7650 <col:27, col:36> col:36 a 'Vector<void *>::iterator':'void **'
| `-ParmVarDecl 0x55f5da6d76c8 <col:39, col:48> col:48 b 'Vector<void *>::iterator':'void **'
|-CXXMethodDecl 0x55f5da6d7898 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55f5da6d7af8 <line:195:5, col:34> col:17 swap 'void (Vector<void *> &)' inline
| `-ParmVarDecl 0x55f5da6d7a00 <col:22, col:33> col:33 x 'Vector<void *> &'
`-CXXDestructorDecl 0x55f5da6d7bc8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55f5da6d7bc8

Layout: <CGRecordLayout
  LLVMType:%class.Vector.12 = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector.12 = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct Router::notifier_signals_t
         0 |   class String name
         0 |     struct String::rep_t _r
         0 |       const char * data
         8 |       int length
        16 |       struct String::memo_t * memo
        24 |   int nsig
        28 |   class atomic_uint32_t [128] sig
       544 |   struct Router::notifier_signals_t * next
           | [sizeof=552, dsize=552, align=8,
           |  nvsize=552, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f5da6d7dc0 <../dummy_inc/click/router.hh:280:5, line:290:5> line:280:12 referenced struct notifier_signals_t definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x55f5da6d7ed8 <col:5, col:12> col:12 implicit referenced struct notifier_signals_t
|-EnumDecl 0x55f5da6d7f68 <line:281:9, col:32> col:9
| `-EnumConstantDecl 0x55f5da6d8070 <col:16, col:27> col:16 referenced capacity 'Router::notifier_signals_t::(anonymous enum at ../dummy_inc/click/router.hh:281:9)'
|   `-ImplicitCastExpr 0x55f5da6d80c0 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55f5da6d8050 <col:27> 'int' Int: 4096
|       `-IntegerLiteral 0x55f5da6d8030 <col:27> 'int' 4096
|-FieldDecl 0x55f5da6d80e8 <line:282:9, col:16> col:16 name 'String'
|-FieldDecl 0x55f5da6d8150 <line:283:9, col:13> col:13 nsig 'int'
|-FieldDecl 0x55f5da6d8348 <line:284:9, col:42> col:25 referenced sig 'atomic_uint32_t [128]'
|-FieldDecl 0x55f5da6d83d8 <line:285:9, col:29> col:29 next 'Router::notifier_signals_t *'
|-CXXConstructorDecl 0x55f5da6d8598 <line:286:9, line:289:9> line:286:9 notifier_signals_t 'void (const String &, Router::notifier_signals_t *)'
| |-ParmVarDecl 0x55f5da6d8438 <col:28, col:42> col:42 used n 'const String &'
| |-ParmVarDecl 0x55f5da6d84b0 <col:45, col:65> col:65 used nx 'Router::notifier_signals_t *'
| |-CXXCtorInitializer Field 0x55f5da6d80e8 'name' 'String'
| | `-CXXConstructExpr 0x55f5da6e2fc8 <line:287:15, col:21> 'String' 'void (const String &)'
| |   `-DeclRefExpr 0x55f5da6e2f88 <col:20> 'const String' lvalue ParmVar 0x55f5da6d8438 'n' 'const String &'
| |-CXXCtorInitializer Field 0x55f5da6d8150 'nsig' 'int'
| | `-IntegerLiteral 0x55f5da6e3020 <col:29> 'int' 0
| |-CXXCtorInitializer Field 0x55f5da6d8348 'sig' 'atomic_uint32_t [128]'
| | `-CXXConstructExpr 0x55f5da6e3108 <line:286:9> 'atomic_uint32_t [128]' 'void () noexcept'
| |-CXXCtorInitializer Field 0x55f5da6d83d8 'next' 'Router::notifier_signals_t *'
| | `-ImplicitCastExpr 0x55f5da6e30c8 <line:287:38> 'Router::notifier_signals_t *' <LValueToRValue>
| |   `-DeclRefExpr 0x55f5da6e3088 <col:38> 'Router::notifier_signals_t *' lvalue ParmVar 0x55f5da6d84b0 'nx' 'Router::notifier_signals_t *'
| `-CompoundStmt 0x55f5da6e3398 <col:42, line:289:9>
|   `-CallExpr 0x55f5da6e3348 <line:288:13, col:43> 'void *'
|     |-ImplicitCastExpr 0x55f5da6e3330 <col:13> 'void *(*)(void *, int, size_t) throw()' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x55f5da6e3310 <col:13> 'void *(void *, int, size_t) throw()' lvalue Function 0x55f5da20e388 'memset' 'void *(void *, int, size_t) throw()'
|     |-ImplicitCastExpr 0x55f5da6e3380 <col:20, col:26> 'void *' <BitCast>
|     | `-UnaryOperator 0x55f5da6e3258 <col:20, col:26> 'atomic_uint32_t *' prefix '&' cannot overflow
|     |   `-ArraySubscriptExpr 0x55f5da6e3238 <col:21, col:26> 'atomic_uint32_t' lvalue
|     |     |-ImplicitCastExpr 0x55f5da6e3220 <col:21> 'atomic_uint32_t *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55f5da6e31d0 <col:21> 'atomic_uint32_t [128]' lvalue ->sig 0x55f5da6d8348
|     |     |   `-CXXThisExpr 0x55f5da6e31c0 <col:21> 'Router::notifier_signals_t *' implicit this
|     |     `-IntegerLiteral 0x55f5da6e3200 <col:25> 'int' 0
|     |-IntegerLiteral 0x55f5da6e3270 <col:29> 'int' 0
|     `-UnaryExprOrTypeTraitExpr 0x55f5da6e32f0 <col:32, col:42> 'unsigned long' sizeof
|       `-ParenExpr 0x55f5da6e32d0 <col:38, col:42> 'atomic_uint32_t [128]' lvalue
|         `-MemberExpr 0x55f5da6e32a0 <col:39> 'atomic_uint32_t [128]' lvalue ->sig 0x55f5da6d8348 non_odr_use_unevaluated
|           `-CXXThisExpr 0x55f5da6e3290 <col:39> 'Router::notifier_signals_t *' implicit this
|-CXXConstructorDecl 0x55f5da6d8678 <line:280:12> col:12 implicit notifier_signals_t 'void (const Router::notifier_signals_t &)' inline default noexcept-unevaluated 0x55f5da6d8678
| `-ParmVarDecl 0x55f5da6d8788 <col:12> col:12 'const Router::notifier_signals_t &'
|-CXXConstructorDecl 0x55f5da6d8828 <col:12> col:12 implicit notifier_signals_t 'void (Router::notifier_signals_t &&)' inline default noexcept-unevaluated 0x55f5da6d8828
| `-ParmVarDecl 0x55f5da6d8938 <col:12> col:12 'Router::notifier_signals_t &&'
|-CXXMethodDecl 0x55f5da6d89d8 <col:12> col:12 implicit operator= 'Router::notifier_signals_t &(const Router::notifier_signals_t &)' inline default noexcept-unevaluated 0x55f5da6d89d8
| `-ParmVarDecl 0x55f5da6d8ae8 <col:12> col:12 'const Router::notifier_signals_t &'
|-CXXMethodDecl 0x55f5da6d8b58 <col:12> col:12 implicit operator= 'Router::notifier_signals_t &(Router::notifier_signals_t &&)' inline default noexcept-unevaluated 0x55f5da6d8b58
| `-ParmVarDecl 0x55f5da6d8c68 <col:12> col:12 'Router::notifier_signals_t &&'
`-CXXDestructorDecl 0x55f5da6d8cf0 <col:12> col:12 implicit ~notifier_signals_t 'void ()' inline default noexcept-unevaluated 0x55f5da6d8cf0

Layout: <CGRecordLayout
  LLVMType:%"struct.Router::notifier_signals_t" = type { %class.String, i32, [128 x %class.atomic_uint32_t], %"struct.Router::notifier_signals_t"* }
  NonVirtualBaseLLVMType:%"struct.Router::notifier_signals_t" = type { %class.String, i32, [128 x %class.atomic_uint32_t], %"struct.Router::notifier_signals_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class ThreadSched
         0 |   (ThreadSched vtable pointer)
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f5da6a89c8 <../dummy_inc/click/standard/threadsched.hh:6:1, line:15:1> line:6:7 class ThreadSched definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple non_trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55f5da6a8ae8 <col:1, col:7> col:7 implicit referenced class ThreadSched
|-AccessSpecDecl 0x55f5da6a8b78 <col:21, col:27> col:21 public
|-EnumDecl 0x55f5da6a8ba0 <line:8:5, col:58> col:5
| |-EnumConstantDecl 0x55f5da6a8cb8 <col:12, col:32> col:12 THREAD_QUIESCENT 'ThreadSched::(anonymous enum at ../dummy_inc/click/standard/threadsched.hh:8:5)'
| | `-ConstantExpr 0x55f5da6a8c98 <col:31, col:32> 'int' Int: -1
| |   `-UnaryOperator 0x55f5da6a8c80 <col:31, col:32> 'int' prefix '-'
| |     `-IntegerLiteral 0x55f5da6a8c60 <col:32> 'int' 1
| `-EnumConstantDecl 0x55f5da6a8d60 <col:35, col:53> col:35 THREAD_UNKNOWN 'ThreadSched::(anonymous enum at ../dummy_inc/click/standard/threadsched.hh:8:5)'
|   `-ConstantExpr 0x55f5da6a8d40 <col:52, col:53> 'int' Int: -1000
|     `-UnaryOperator 0x55f5da6a8d28 <col:52, col:53> 'int' prefix '-'
|       `-IntegerLiteral 0x55f5da6a8d08 <col:53> 'int' 1000
|-CXXConstructorDecl 0x55f5da6a8e10 <line:10:5, col:21> col:5 ThreadSched 'void ()'
| `-CompoundStmt 0x55f5da6a9348 <col:19, col:21>
|-CXXDestructorDecl 0x55f5da6a8f00 <line:11:5, col:30> col:13 ~ThreadSched 'void () noexcept' virtual
| `-CompoundStmt 0x55f5da6a9358 <col:28, col:30>
|-CXXMethodDecl 0x55f5da6a90c0 <line:13:5, col:56> col:17 initial_home_thread_id 'int (const Element *)' virtual
| `-ParmVarDecl 0x55f5da6a8ff0 <col:40, col:55> col:55 e 'const Element *'
`-CXXMethodDecl 0x55f5da6a91c8 <line:6:7> col:7 implicit operator= 'ThreadSched &(const ThreadSched &)' inline default noexcept-unevaluated 0x55f5da6a91c8
  `-ParmVarDecl 0x55f5da6a92d8 <col:7> col:7 'const ThreadSched &'

Layout: <CGRecordLayout
  LLVMType:%class.ThreadSched = type { i32 (...)** }
  NonVirtualBaseLLVMType:%class.ThreadSched = type { i32 (...)** }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f5da6a9900 prev 0x55f5da5e84f0 <../dummy_inc/click/router.hh:23:1, line:352:1> line:23:7 referenced class Router definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-CXXRecordDecl 0x55f5da6a99f8 <col:1, col:7> col:7 implicit referenced class Router
|-AccessSpecDecl 0x55f5da6a9a88 <col:16, col:22> col:16 public
|-CXXMethodDecl 0x55f5da6a9af8 <line:28:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x55f5da6a9bb8 <line:31:5, col:31> col:17 used initialized 'bool () const' inline
|-CXXMethodDecl 0x55f5da6a9c78 <line:32:5, col:34> col:17 handlers_ready 'bool () const' inline
|-CXXMethodDecl 0x55f5da6a9d38 <line:33:5, col:27> col:17 running 'bool () const' inline
|-CXXMethodDecl 0x55f5da6a9df8 <line:34:5, col:25> col:17 dying 'bool () const' inline
|-EnumDecl 0x55f5da6a9e98 <line:37:5, col:44> col:5
| `-EnumConstantDecl 0x55f5da3bf380 <col:12, col:42> col:12 STOP_RUNCOUNT 'Router::(anonymous enum at ../dummy_inc/click/router.hh:37:5)'
|   `-ConstantExpr 0x55f5da3bf360 <col:28, col:42> 'int' Int: -2147483648
|     `-BinaryOperator 0x55f5da3bf340 <col:28, col:42> 'int' '-'
|       |-UnaryOperator 0x55f5da6a9f80 <col:28, col:29> 'int' prefix '-'
|       | `-IntegerLiteral 0x55f5da6a9f60 <col:29> 'int' 2147483647
|       `-IntegerLiteral 0x55f5da3bf320 <col:42> 'int' 1
|-CXXMethodDecl 0x55f5da3bf418 <line:38:5, col:31> col:20 runcount 'int32_t () const' inline
|-CXXMethodDecl 0x55f5da3bf588 <line:39:5, col:39> col:10 used adjust_runcount 'void (int32_t)'
| `-ParmVarDecl 0x55f5da3bf4c8 <col:26, col:34> col:34 delta 'int32_t':'int'
|-CXXMethodDecl 0x55f5da3bf6d0 <line:40:5, col:33> col:10 set_runcount 'void (int32_t)'
| `-ParmVarDecl 0x55f5da3bf640 <col:23, col:31> col:31 rc 'int32_t':'int'
|-CXXMethodDecl 0x55f5da3bf798 <line:41:5, col:36> col:17 please_stop_driver 'void ()' inline
|-CXXMethodDecl 0x55f5da3bfac0 <line:44:5, col:47> col:36 elements 'const Vector<Element *> &() const' inline
|-CXXMethodDecl 0x55f5da3bfb88 <line:45:5, col:28> col:16 nelements 'int () const' inline
|-CXXMethodDecl 0x55f5da3bfd08 <line:46:5, col:36> col:21 element 'Element *(int) const' inline
| `-ParmVarDecl 0x55f5da3bfc40 <col:29, col:33> col:33 i 'int'
|-CXXMethodDecl 0x55f5da3bfdd0 <line:47:5, col:36> col:21 root_element 'Element *() const' inline
|-CXXMethodDecl 0x55f5da3bffd8 <line:48:5, col:56> col:21 used element 'Element *(const Router *, int)' static
| |-ParmVarDecl 0x55f5da3bfe80 <col:29, col:43> col:43 router 'const Router *'
| `-ParmVarDecl 0x55f5da3bff00 <col:51, col:55> col:55 i 'int'
|-CXXMethodDecl 0x55f5da3c0130 <line:50:5, col:32> col:19 ename 'const String &(int) const'
| `-ParmVarDecl 0x55f5da3c00a0 <col:25, col:29> col:29 i 'int'
|-CXXMethodDecl 0x55f5da3c0280 <line:51:5, col:33> col:12 ename_context 'String (int) const'
| `-ParmVarDecl 0x55f5da3c01f0 <col:26, col:30> col:30 i 'int'
|-CXXMethodDecl 0x55f5da3c03d0 <line:52:5, col:29> col:12 elandmark 'String (int) const'
| `-ParmVarDecl 0x55f5da3c0340 <col:22, col:26> col:26 i 'int'
|-CXXMethodDecl 0x55f5da3c0520 <line:53:5, col:41> col:19 econfiguration 'const String &(int) const'
| `-ParmVarDecl 0x55f5da3c0490 <col:34, col:38> col:38 i 'int'
|-CXXMethodDecl 0x55f5da3c06f0 <line:54:5, col:54> col:10 set_econfiguration 'void (int, const String &)'
| |-ParmVarDecl 0x55f5da3c05e0 <col:29, col:33> col:33 i 'int'
| `-ParmVarDecl 0x55f5da3c0658 <col:36, col:50> col:50 conf 'const String &'
|-CXXMethodDecl 0x55f5da3c08f8 <line:56:5, col:63> col:14 find 'Element *(const String &, ErrorHandler *) const'
| |-ParmVarDecl 0x55f5da3c07b0 <col:19, col:33> col:33 name 'const String &'
| `-ParmVarDecl 0x55f5da3c0828 <col:39, col:60> col:53 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x55f5da6dc590 <col:60> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x55f5da6dc570 <col:60> 'int' 0
|-CXXMethodDecl 0x55f5da3c0b88 <line:57:5, col:79> col:14 used find 'Element *(const String &, String, ErrorHandler *) const'
| |-ParmVarDecl 0x55f5da3c09b8 <col:19, col:33> col:33 name 'const String &'
| |-ParmVarDecl 0x55f5da3c0a30 <col:39, col:46> col:46 context 'String' destroyed
| `-ParmVarDecl 0x55f5da3c0aa8 <col:55, col:76> col:69 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x55f5da6dc5c8 <col:76> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x55f5da6dc5a8 <col:76> 'int' 0
|-CXXMethodDecl 0x55f5da3c0e28 <line:58:5, col:87> col:14 find 'Element *(const String &, const Element *, ErrorHandler *) const'
| |-ParmVarDecl 0x55f5da3c0c50 <col:19, col:33> col:33 name 'const String &'
| |-ParmVarDecl 0x55f5da3c0cc8 <col:39, col:54> col:54 context 'const Element *'
| `-ParmVarDecl 0x55f5da3c0d40 <col:63, col:84> col:77 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x55f5da6dc600 <col:84> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x55f5da6dc5e0 <col:84> 'int' 0
|-CXXMethodDecl 0x55f5da3c1180 <line:60:5, col:76> col:9 used visit 'int (Element *, bool, int, RouterVisitor *) const'
| |-ParmVarDecl 0x55f5da3c0ef0 <col:15, col:24> col:24 e 'Element *'
| |-ParmVarDecl 0x55f5da3c0f68 <col:27, col:32> col:32 isoutput 'bool'
| |-ParmVarDecl 0x55f5da3c0fe8 <col:42, col:46> col:46 port 'int'
| `-ParmVarDecl 0x55f5da3c1088 <col:52, col:67> col:67 visitor 'RouterVisitor *'
|-CXXMethodDecl 0x55f5da3c1430 <line:61:5, col:72> col:9 visit_downstream 'int (Element *, int, RouterVisitor *) const'
| |-ParmVarDecl 0x55f5da3c1250 <col:26, col:35> col:35 e 'Element *'
| |-ParmVarDecl 0x55f5da3c12d0 <col:38, col:42> col:42 port 'int'
| `-ParmVarDecl 0x55f5da3c1348 <col:48, col:63> col:63 visitor 'RouterVisitor *'
|-CXXMethodDecl 0x55f5da3c1698 <line:62:5, col:70> col:9 visit_upstream 'int (Element *, int, RouterVisitor *) const'
| |-ParmVarDecl 0x55f5da3c14f8 <col:24, col:33> col:33 e 'Element *'
| |-ParmVarDecl 0x55f5da3c1578 <col:36, col:40> col:40 port 'int'
| `-ParmVarDecl 0x55f5da3c15f0 <col:46, col:61> col:61 visitor 'RouterVisitor *'
|-CXXMethodDecl 0x55f5da3c1b50 <line:64:5, col:126> col:9 downstream_elements 'int (Element *, int, ElementFilter *, Vector<Element *> &)'
| |-ParmVarDecl 0x55f5da3c1760 <col:29, col:38> col:38 e 'Element *'
| |-ParmVarDecl 0x55f5da3c17e0 <col:41, col:45> col:45 port 'int'
| |-ParmVarDecl 0x55f5da3c1888 <col:51, col:66> col:66 filter 'ElementFilter *'
| |-ParmVarDecl 0x55f5da3c1a00 <col:74, col:92> col:92 result 'Vector<Element *> &'
| `-DeprecatedAttr 0x55f5da3c1c10 <col:115> "" ""
|-CXXMethodDecl 0x55f5da3c1fd0 <line:65:5, col:124> col:9 upstream_elements 'int (Element *, int, ElementFilter *, Vector<Element *> &)'
| |-ParmVarDecl 0x55f5da3c1c90 <col:27, col:36> col:36 e 'Element *'
| |-ParmVarDecl 0x55f5da3c1d10 <col:39, col:43> col:43 port 'int'
| |-ParmVarDecl 0x55f5da3c1d88 <col:49, col:64> col:64 filter 'ElementFilter *'
| |-ParmVarDecl 0x55f5da3c1ed0 <col:72, col:90> col:90 result 'Vector<Element *> &'
| `-DeprecatedAttr 0x55f5da3c2090 <col:113> "" ""
|-CXXMethodDecl 0x55f5da3c21e0 <line:67:5, col:55> col:24 flow_code_override 'const char *(int) const' inline
| `-ParmVarDecl 0x55f5da3c2118 <col:43, col:47> col:47 eindex 'int'
|-CXXMethodDecl 0x55f5da3c23b0 <line:68:5, col:68> col:10 set_flow_code_override 'void (int, const String &)'
| |-ParmVarDecl 0x55f5da3c22a0 <col:33, col:37> col:37 eindex 'int'
| `-ParmVarDecl 0x55f5da3c2318 <col:45, col:59> col:59 flow_code 'const String &'
|-CXXMethodDecl 0x55f5da3c25b8 <line:72:5, col:72> col:27 handler 'const Handler *(const Element *, const String &)' static
| |-ParmVarDecl 0x55f5da3c2470 <col:35, col:50> col:50 e 'const Element *'
| `-ParmVarDecl 0x55f5da3c24e8 <col:53, col:67> col:67 hname 'const String &'
|-CXXMethodDecl 0x55f5da3c29b8 <line:73:5, col:138> col:17 add_read_handler 'void (const Element *, const String &, ReadHandlerCallback, void *, uint32_t)' static
| |-ParmVarDecl 0x55f5da3c2678 <col:34, col:49> col:49 e 'const Element *'
| |-ParmVarDecl 0x55f5da3c26f0 <col:52, col:66> col:66 hname 'const String &'
| |-ParmVarDecl 0x55f5da3c2768 <col:73, col:93> col:93 callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55f5da3c27e8 <col:103, col:109> col:109 user_data 'void *'
| `-ParmVarDecl 0x55f5da3c2860 <col:120, col:137> col:129 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55f5da6dc638 <col:137> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55f5da6dc618 <col:137> 'int' 0
|-CXXMethodDecl 0x55f5da3c2dc8 <line:74:5, col:140> col:17 add_write_handler 'void (const Element *, const String &, WriteHandlerCallback, void *, uint32_t)' static
| |-ParmVarDecl 0x55f5da3c2a90 <col:35, col:50> col:50 e 'const Element *'
| |-ParmVarDecl 0x55f5da3c2b08 <col:53, col:67> col:67 hname 'const String &'
| |-ParmVarDecl 0x55f5da3c2b80 <col:74, col:95> col:95 callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55f5da3c2c00 <col:105, col:111> col:111 user_data 'void *'
| `-ParmVarDecl 0x55f5da3c2c78 <col:122, col:139> col:131 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55f5da6dc670 <col:139> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55f5da6dc650 <col:139> 'int' 0
|-CXXMethodDecl 0x55f5da3c3278 <line:75:5, col:161> col:17 set_handler 'void (const Element *, const String &, uint32_t, HandlerCallback, void *, void *)' static
| |-ParmVarDecl 0x55f5da3c2ea0 <col:29, col:44> col:44 e 'const Element *'
| |-ParmVarDecl 0x55f5da3c2f18 <col:47, col:61> col:61 hname 'const String &'
| |-ParmVarDecl 0x55f5da3c2f90 <col:68, col:77> col:77 flags 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55f5da3c3008 <col:84, col:100> col:100 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55f5da3c3088 <col:110, col:133> col:116 read_user_data 'void *' cinit
| | `-ImplicitCastExpr 0x55f5da6dc6a8 <col:133> 'void *' <NullToPointer>
| |   `-IntegerLiteral 0x55f5da6dc688 <col:133> 'int' 0
| `-ParmVarDecl 0x55f5da3c3108 <col:136, col:160> col:142 write_user_data 'void *' cinit
|   `-ImplicitCastExpr 0x55f5da6dc6e0 <col:160> 'void *' <NullToPointer>
|     `-IntegerLiteral 0x55f5da6dc6c0 <col:160> 'int' 0
|-CXXMethodDecl 0x55f5da3c3610 <line:76:5, col:117> col:16 set_handler_flags 'int (const Element *, const String &, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x55f5da3c3358 <col:34, col:49> col:49 e 'const Element *'
| |-ParmVarDecl 0x55f5da3c33d0 <col:52, col:66> col:66 hname 'const String &'
| |-ParmVarDecl 0x55f5da3c3448 <col:73, col:82> col:82 set_flags 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55f5da3c34c0 <col:93, col:116> col:102 clear_flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55f5da6dc718 <col:116> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55f5da6dc6f8 <col:116> 'int' 0
|-EnumDecl 0x55f5da3c36d0 <line:78:5, col:46> col:5
| `-EnumConstantDecl 0x55f5da3c37d0 <col:12, col:35> col:12 FIRST_GLOBAL_HANDLER 'Router::(anonymous enum at ../dummy_inc/click/router.hh:78:5)'
|   `-ImplicitCastExpr 0x55f5da3c3820 <col:35> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55f5da3c37b0 <col:35> 'int' Int: 1073741824
|       `-IntegerLiteral 0x55f5da3c3790 <col:35> 'int' 1073741824
|-CXXMethodDecl 0x55f5da3c39a0 <line:79:5, col:60> col:16 hindex 'int (const Element *, const String &)' static
| |-ParmVarDecl 0x55f5da3c3848 <col:23, col:38> col:38 e 'const Element *'
| `-ParmVarDecl 0x55f5da3c38c0 <col:41, col:55> col:55 hname 'const String &'
|-CXXMethodDecl 0x55f5da3c3bb8 <line:80:5, col:67> col:27 handler 'const Handler *(const Router *, int)' static
| |-ParmVarDecl 0x55f5da3c3a60 <col:35, col:49> col:49 router 'const Router *'
| `-ParmVarDecl 0x55f5da3c3ae0 <col:57, col:61> col:61 hindex 'int'
|-CXXMethodDecl 0x55f5da3c3ee8 <line:81:5, col:71> col:17 element_hindexes 'void (const Element *, Vector<int> &)' static
| |-ParmVarDecl 0x55f5da3c3c78 <col:34, col:49> col:49 e 'const Element *'
| `-ParmVarDecl 0x55f5da3c3dd0 <col:52, col:65> col:65 result 'Vector<int> &'
|-CXXMethodDecl 0x55f5da3c4070 <line:84:5, col:43> col:11 attachment 'void *(const String &) const'
| `-ParmVarDecl 0x55f5da3c3fa8 <col:22, col:36> col:36 aname 'const String &'
|-CXXMethodDecl 0x55f5da3c41f0 <line:85:5, col:48> col:12 force_attachment 'void *&(const String &)'
| `-ParmVarDecl 0x55f5da3c4128 <col:29, col:43> col:43 aname 'const String &'
|-CXXMethodDecl 0x55f5da3c4400 <line:86:5, col:58> col:11 set_attachment 'void *(const String &, void *)'
| |-ParmVarDecl 0x55f5da3c42a8 <col:26, col:40> col:40 aname 'const String &'
| `-ParmVarDecl 0x55f5da3c4328 <col:47, col:53> col:53 value 'void *'
|-CXXMethodDecl 0x55f5da3c4588 <line:88:5, col:63> col:19 chatter_channel 'ErrorHandler *(const String &) const'
| `-ParmVarDecl 0x55f5da3c44c0 <col:35, col:49> col:49 channel_name 'const String &'
|-CXXMethodDecl 0x55f5da3c46a8 <line:89:5, col:43> col:27 arena_factory 'HashMap_ArenaFactory *() const'
|-CXXMethodDecl 0x55f5da3c4798 <line:91:5, col:40> col:25 thread_sched 'ThreadSched *() const' inline
|-CXXMethodDecl 0x55f5da3c4908 <line:92:5, col:56> col:17 set_thread_sched 'void (ThreadSched *)' inline
| `-ParmVarDecl 0x55f5da3c4848 <col:34, col:47> col:47 scheduler 'ThreadSched *'
|-CXXMethodDecl 0x55f5da3c4a90 <line:93:5, col:49> col:16 home_thread_id 'int (const Element *) const' inline
| `-ParmVarDecl 0x55f5da3c49c0 <col:31, col:46> col:46 e 'const Element *'
|-CXXMethodDecl 0x55f5da3c4c98 <line:94:5, col:69> col:17 set_home_thread_id 'void (const Element *, int)' inline
| |-ParmVarDecl 0x55f5da3c4b48 <col:36, col:51> col:51 e 'const Element *'
| `-ParmVarDecl 0x55f5da3c4bc8 <col:54, col:58> col:58 home_thread 'int'
|-CXXMethodDecl 0x55f5da3c4dc8 <line:98:5, col:34> col:22 name_info 'NameInfo *() const' inline
|-CXXMethodDecl 0x55f5da3c4eb8 <line:99:5, col:31> col:15 force_name_info 'NameInfo *()'
|-CXXMethodDecl 0x55f5da3c4f78 <line:103:5, col:35> col:12 configuration_string 'String () const'
|-CXXMethodDecl 0x55f5da3c5178 <line:104:5, col:68> col:10 unparse 'void (StringAccum &, const String &) const'
| |-ParmVarDecl 0x55f5da3c5028 <col:18, col:31> col:31 sa 'StringAccum &'
| `-ParmVarDecl 0x55f5da3c50a0 <col:35, col:65> col:49 indent 'const String &' cinit
|   `-ExprWithCleanups 0x55f5da6dc7c8 <col:58, col:65> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x55f5da6dc7b0 <col:58, col:65> 'const String' lvalue
|       `-ImplicitCastExpr 0x55f5da6dc798 <col:58, col:65> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x55f5da6dc778 <col:58, col:65> 'String' (CXXTemporary 0x55f5da6dc778)
|           `-CXXTemporaryObjectExpr 0x55f5da6dc740 <col:58, col:65> 'String' 'void ()'
|-CXXMethodDecl 0x55f5da3c5348 <line:105:5, col:81> col:10 unparse_requirements 'void (StringAccum &, const String &) const'
| |-ParmVarDecl 0x55f5da3c5238 <col:31, col:44> col:44 sa 'StringAccum &'
| `-ParmVarDecl 0x55f5da3c52b0 <col:48, col:78> col:62 indent 'const String &' cinit
|   `-ExprWithCleanups 0x55f5da6dc878 <col:71, col:78> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x55f5da6dc860 <col:71, col:78> 'const String' lvalue
|       `-ImplicitCastExpr 0x55f5da6dc848 <col:71, col:78> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x55f5da6dc828 <col:71, col:78> 'String' (CXXTemporary 0x55f5da6dc828)
|           `-CXXTemporaryObjectExpr 0x55f5da6dc7f0 <col:71, col:78> 'String' 'void ()'
|-CXXMethodDecl 0x55f5da3c5518 <line:106:5, col:81> col:10 unparse_declarations 'void (StringAccum &, const String &) const'
| |-ParmVarDecl 0x55f5da3c5408 <col:31, col:44> col:44 sa 'StringAccum &'
| `-ParmVarDecl 0x55f5da3c5480 <col:48, col:78> col:62 indent 'const String &' cinit
|   `-ExprWithCleanups 0x55f5da6dc928 <col:71, col:78> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x55f5da6dc910 <col:71, col:78> 'const String' lvalue
|       `-ImplicitCastExpr 0x55f5da6dc8f8 <col:71, col:78> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x55f5da6dc8d8 <col:71, col:78> 'String' (CXXTemporary 0x55f5da6dc8d8)
|           `-CXXTemporaryObjectExpr 0x55f5da6dc8a0 <col:71, col:78> 'String' 'void ()'
|-CXXMethodDecl 0x55f5da3c56e8 <line:107:5, col:80> col:10 unparse_connections 'void (StringAccum &, const String &) const'
| |-ParmVarDecl 0x55f5da3c55d8 <col:30, col:43> col:43 sa 'StringAccum &'
| `-ParmVarDecl 0x55f5da3c5650 <col:47, col:77> col:61 indent 'const String &' cinit
|   `-ExprWithCleanups 0x55f5da6dc9d8 <col:70, col:77> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x55f5da6dc9c0 <col:70, col:77> 'const String' lvalue
|       `-ImplicitCastExpr 0x55f5da6dc9a8 <col:70, col:77> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x55f5da6dc988 <col:70, col:77> 'String' (CXXTemporary 0x55f5da6dc988)
|           `-CXXTemporaryObjectExpr 0x55f5da6dc950 <col:70, col:77> 'String' 'void ()'
|-CXXMethodDecl 0x55f5da3c5868 <line:109:5, col:51> col:12 element_ports_string 'String (const Element *) const'
| `-ParmVarDecl 0x55f5da3c57a8 <col:33, col:48> col:48 e 'const Element *'
|-CXXConstructorDecl 0x55f5da3c5a88 <line:115:5, col:55> col:5 Router 'void (const String &, Master *)'
| |-ParmVarDecl 0x55f5da3c5920 <col:12, col:26> col:26 configuration 'const String &'
| `-ParmVarDecl 0x55f5da3c5998 <col:41, col:49> col:49 master 'Master *'
|-CXXDestructorDecl 0x55f5da3c5b88 <line:116:5, col:13> col:5 ~Router 'void ()' noexcept-unevaluated 0x55f5da3c5b88
|-CXXMethodDecl 0x55f5da3c5c90 <line:118:5, col:35> col:17 static_initialize 'void ()' static
|-CXXMethodDecl 0x55f5da3c5d50 <line:119:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x55f5da3c5e10 <line:121:5, col:21> col:17 use 'void ()' inline
|-CXXMethodDecl 0x55f5da3c5ed0 <line:122:5, col:16> col:10 unuse 'void ()'
|-CXXMethodDecl 0x55f5da3c60c8 <line:124:5, col:65> col:10 add_requirement 'void (const String &, const String &)'
| |-ParmVarDecl 0x55f5da3c5f80 <col:26, col:40> col:40 type 'const String &'
| `-ParmVarDecl 0x55f5da3c5ff8 <col:46, col:60> col:60 value 'const String &'
|-CXXMethodDecl 0x55f5da3c6480 <line:125:5, col:112> col:9 add_element 'int (Element *, const String &, const String &, const String &, unsigned int)'
| |-ParmVarDecl 0x55f5da3c6188 <col:21, col:30> col:30 e 'Element *'
| |-ParmVarDecl 0x55f5da3c6200 <col:33, col:47> col:47 name 'const String &'
| |-ParmVarDecl 0x55f5da3c6278 <col:53, col:67> col:67 conf 'const String &'
| |-ParmVarDecl 0x55f5da3c62f0 <col:73, col:87> col:87 filename 'const String &'
| `-ParmVarDecl 0x55f5da3c6370 <col:97, col:106> col:106 lineno 'unsigned int'
|-CXXMethodDecl 0x55f5da3c67e0 <line:126:5, col:76> col:9 add_connection 'int (int, int, int, int)'
| |-ParmVarDecl 0x55f5da3c6560 <col:24, col:28> col:28 from_idx 'int'
| |-ParmVarDecl 0x55f5da3c65e0 <col:38, col:42> col:42 from_port 'int'
| |-ParmVarDecl 0x55f5da3c6660 <col:53, col:57> col:57 to_idx 'int'
| `-ParmVarDecl 0x55f5da3c66e0 <col:65, col:69> col:69 to_port 'int'
|-CXXMethodDecl 0x55f5da3c68c0 <line:131:5, col:37> col:20 hotswap_router 'Router *() const' inline
|-CXXMethodDecl 0x55f5da3c6a00 <line:132:5, col:43> col:10 set_hotswap_router 'void (Router *)'
| `-ParmVarDecl 0x55f5da3c6970 <col:29, col:37> col:37 router 'Router *'
|-CXXMethodDecl 0x55f5da3c6b50 <line:134:5, col:38> col:9 initialize 'int (ErrorHandler *)'
| `-ParmVarDecl 0x55f5da3c6ab8 <col:20, col:34> col:34 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55f5da3c6d58 <line:135:5, col:54> col:10 used activate 'void (bool, ErrorHandler *)'
| |-ParmVarDecl 0x55f5da3c6c08 <col:19, col:24> col:24 foreground 'bool'
| `-ParmVarDecl 0x55f5da3c6c80 <col:36, col:50> col:50 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55f5da3c6ea8 <line:136:5, col:44> col:17 activate 'void (ErrorHandler *)' inline
| `-ParmVarDecl 0x55f5da3c6e18 <col:26, col:40> col:40 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55f5da3c6ff0 <line:137:5, col:47> col:17 set_foreground 'void (bool)' inline
| `-ParmVarDecl 0x55f5da3c6f60 <col:32, col:37> col:37 foreground 'bool'
|-CXXMethodDecl 0x55f5da3c7200 <line:139:5, col:69> col:9 new_notifier_signal 'int (const char *, NotifierSignal &)'
| |-ParmVarDecl 0x55f5da3c70b0 <col:29, col:41> col:41 name 'const char *'
| `-ParmVarDecl 0x55f5da3c7128 <col:47, col:63> col:63 signal 'NotifierSignal &'
|-CXXMethodDecl 0x55f5da6aa088 <line:140:5, col:64> col:12 notifier_signal_name 'String (const atomic_uint32_t *) const'
| `-ParmVarDecl 0x55f5da6a9fc0 <col:33, col:56> col:56 signal 'const atomic_uint32_t *'
|-CXXRecordDecl 0x55f5da6aa130 <line:145:5, line:167:5> line:145:12 referenced struct Port definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55f5da6aa248 <col:5, col:12> col:12 implicit referenced struct Port
| |-FieldDecl 0x55f5da6aa2f0 <line:146:9, col:13> col:13 referenced idx 'int'
| |-FieldDecl 0x55f5da6aa358 <line:147:9, col:13> col:13 referenced port 'int'
| |-CXXConstructorDecl 0x55f5da6aa410 <line:149:9, line:150:9> line:149:9 used Port 'void ()'
| | `-CompoundStmt 0x55f5da6dca00 <col:16, line:150:9>
| |-CXXConstructorDecl 0x55f5da6aa5e8 <line:151:9, line:153:9> line:151:9 used Port 'void (int, int)'
| | |-ParmVarDecl 0x55f5da6aa4d0 <col:14, col:18> col:18 used i 'int'
| | |-ParmVarDecl 0x55f5da6aa550 <col:21, col:25> col:25 used p 'int'
| | |-CXXCtorInitializer Field 0x55f5da6aa2f0 'idx' 'int'
| | | `-ImplicitCastExpr 0x55f5da6dca50 <line:152:19> 'int' <LValueToRValue>
| | |   `-DeclRefExpr 0x55f5da6dca10 <col:19> 'int' lvalue ParmVar 0x55f5da6aa4d0 'i' 'int'
| | |-CXXCtorInitializer Field 0x55f5da6aa358 'port' 'int'
| | | `-ImplicitCastExpr 0x55f5da6dcad0 <col:28> 'int' <LValueToRValue>
| | |   `-DeclRefExpr 0x55f5da6dca90 <col:28> 'int' lvalue ParmVar 0x55f5da6aa550 'p' 'int'
| | `-CompoundStmt 0x55f5da6dcb20 <col:31, line:153:9>
| |-CXXMethodDecl 0x55f5da6aa7c8 <line:155:9, line:157:9> line:155:14 used operator== 'bool (const Router::Port &) const'
| | |-ParmVarDecl 0x55f5da6aa6d8 <col:25, col:37> col:37 used x 'const Router::Port &'
| | `-CompoundStmt 0x55f5da6dcd20 <col:46, line:157:9>
| |   `-ReturnStmt 0x55f5da6dcd10 <line:156:13, col:46>
| |     `-BinaryOperator 0x55f5da6dccf0 <col:20, col:46> 'bool' '&&'
| |       |-BinaryOperator 0x55f5da6dcbf0 <col:20, col:29> 'bool' '=='
| |       | |-ImplicitCastExpr 0x55f5da6dcbc0 <col:20> 'int' <LValueToRValue>
| |       | | `-MemberExpr 0x55f5da6dcb40 <col:20> 'const int' lvalue ->idx 0x55f5da6aa2f0
| |       | |   `-CXXThisExpr 0x55f5da6dcb30 <col:20> 'const Router::Port *' implicit this
| |       | `-ImplicitCastExpr 0x55f5da6dcbd8 <col:27, col:29> 'int' <LValueToRValue>
| |       |   `-MemberExpr 0x55f5da6dcb90 <col:27, col:29> 'const int' lvalue .idx 0x55f5da6aa2f0
| |       |     `-DeclRefExpr 0x55f5da6dcb70 <col:27> 'const Router::Port' lvalue ParmVar 0x55f5da6aa6d8 'x' 'const Router::Port &'
| |       `-BinaryOperator 0x55f5da6dccd0 <col:36, col:46> 'bool' '=='
| |         |-ImplicitCastExpr 0x55f5da6dcca0 <col:36> 'int' <LValueToRValue>
| |         | `-MemberExpr 0x55f5da6dcc20 <col:36> 'const int' lvalue ->port 0x55f5da6aa358
| |         |   `-CXXThisExpr 0x55f5da6dcc10 <col:36> 'const Router::Port *' implicit this
| |         `-ImplicitCastExpr 0x55f5da6dccb8 <col:44, col:46> 'int' <LValueToRValue>
| |           `-MemberExpr 0x55f5da6dcc70 <col:44, col:46> 'const int' lvalue .port 0x55f5da6aa358
| |             `-DeclRefExpr 0x55f5da6dcc50 <col:44> 'const Router::Port' lvalue ParmVar 0x55f5da6aa6d8 'x' 'const Router::Port &'
| |-CXXMethodDecl 0x55f5da6aa910 <line:158:9, line:160:9> line:158:14 operator!= 'bool (const Router::Port &) const'
| | |-ParmVarDecl 0x55f5da6aa880 <col:25, col:37> col:37 used x 'const Router::Port &'
| | `-CompoundStmt 0x55f5da6dcf28 <col:46, line:160:9>
| |   `-ReturnStmt 0x55f5da6dcf18 <line:159:13, col:46>
| |     `-BinaryOperator 0x55f5da6dcef8 <col:20, col:46> 'bool' '||'
| |       |-BinaryOperator 0x55f5da6dcdf8 <col:20, col:29> 'bool' '!='
| |       | |-ImplicitCastExpr 0x55f5da6dcdc8 <col:20> 'int' <LValueToRValue>
| |       | | `-MemberExpr 0x55f5da6dcd48 <col:20> 'const int' lvalue ->idx 0x55f5da6aa2f0
| |       | |   `-CXXThisExpr 0x55f5da6dcd38 <col:20> 'const Router::Port *' implicit this
| |       | `-ImplicitCastExpr 0x55f5da6dcde0 <col:27, col:29> 'int' <LValueToRValue>
| |       |   `-MemberExpr 0x55f5da6dcd98 <col:27, col:29> 'const int' lvalue .idx 0x55f5da6aa2f0
| |       |     `-DeclRefExpr 0x55f5da6dcd78 <col:27> 'const Router::Port' lvalue ParmVar 0x55f5da6aa880 'x' 'const Router::Port &'
| |       `-BinaryOperator 0x55f5da6dced8 <col:36, col:46> 'bool' '!='
| |         |-ImplicitCastExpr 0x55f5da6dcea8 <col:36> 'int' <LValueToRValue>
| |         | `-MemberExpr 0x55f5da6dce28 <col:36> 'const int' lvalue ->port 0x55f5da6aa358
| |         |   `-CXXThisExpr 0x55f5da6dce18 <col:36> 'const Router::Port *' implicit this
| |         `-ImplicitCastExpr 0x55f5da6dcec0 <col:44, col:46> 'int' <LValueToRValue>
| |           `-MemberExpr 0x55f5da6dce78 <col:44, col:46> 'const int' lvalue .port 0x55f5da6aa358
| |             `-DeclRefExpr 0x55f5da6dce58 <col:44> 'const Router::Port' lvalue ParmVar 0x55f5da6aa880 'x' 'const Router::Port &'
| |-CXXMethodDecl 0x55f5da6aaa58 <line:161:9, line:163:9> line:161:14 used operator< 'bool (const Router::Port &) const'
| | |-ParmVarDecl 0x55f5da6aa9c8 <col:24, col:36> col:36 used x 'const Router::Port &'
| | `-CompoundStmt 0x55f5da6e08d0 <col:45, line:163:9>
| |   `-ReturnStmt 0x55f5da6e08c0 <line:162:13, col:65>
| |     `-BinaryOperator 0x55f5da6e08a0 <col:20, col:65> 'bool' '||'
| |       |-BinaryOperator 0x55f5da6dd000 <col:20, col:28> 'bool' '<'
| |       | |-ImplicitCastExpr 0x55f5da6dcfd0 <col:20> 'int' <LValueToRValue>
| |       | | `-MemberExpr 0x55f5da6dcf50 <col:20> 'const int' lvalue ->idx 0x55f5da6aa2f0
| |       | |   `-CXXThisExpr 0x55f5da6dcf40 <col:20> 'const Router::Port *' implicit this
| |       | `-ImplicitCastExpr 0x55f5da6dcfe8 <col:26, col:28> 'int' <LValueToRValue>
| |       |   `-MemberExpr 0x55f5da6dcfa0 <col:26, col:28> 'const int' lvalue .idx 0x55f5da6aa2f0
| |       |     `-DeclRefExpr 0x55f5da6dcf80 <col:26> 'const Router::Port' lvalue ParmVar 0x55f5da6aa9c8 'x' 'const Router::Port &'
| |       `-ParenExpr 0x55f5da6e0880 <col:35, col:65> 'bool'
| |         `-BinaryOperator 0x55f5da6e0860 <col:36, col:61> 'bool' '&&'
| |           |-BinaryOperator 0x55f5da6dd0e0 <col:36, col:45> 'bool' '=='
| |           | |-ImplicitCastExpr 0x55f5da6dd0b0 <col:36> 'int' <LValueToRValue>
| |           | | `-MemberExpr 0x55f5da6dd030 <col:36> 'const int' lvalue ->idx 0x55f5da6aa2f0
| |           | |   `-CXXThisExpr 0x55f5da6dd020 <col:36> 'const Router::Port *' implicit this
| |           | `-ImplicitCastExpr 0x55f5da6dd0c8 <col:43, col:45> 'int' <LValueToRValue>
| |           |   `-MemberExpr 0x55f5da6dd080 <col:43, col:45> 'const int' lvalue .idx 0x55f5da6aa2f0
| |           |     `-DeclRefExpr 0x55f5da6dd060 <col:43> 'const Router::Port' lvalue ParmVar 0x55f5da6aa9c8 'x' 'const Router::Port &'
| |           `-BinaryOperator 0x55f5da6e0840 <col:52, col:61> 'bool' '<'
| |             |-ImplicitCastExpr 0x55f5da6dd190 <col:52> 'int' <LValueToRValue>
| |             | `-MemberExpr 0x55f5da6dd110 <col:52> 'const int' lvalue ->port 0x55f5da6aa358
| |             |   `-CXXThisExpr 0x55f5da6dd100 <col:52> 'const Router::Port *' implicit this
| |             `-ImplicitCastExpr 0x55f5da6dd1a8 <col:59, col:61> 'int' <LValueToRValue>
| |               `-MemberExpr 0x55f5da6dd160 <col:59, col:61> 'const int' lvalue .port 0x55f5da6aa358
| |                 `-DeclRefExpr 0x55f5da6dd140 <col:59> 'const Router::Port' lvalue ParmVar 0x55f5da6aa9c8 'x' 'const Router::Port &'
| |-CXXMethodDecl 0x55f5da6aaba0 <line:164:9, line:166:9> line:164:14 operator<= 'bool (const Router::Port &) const'
| | |-ParmVarDecl 0x55f5da6aab10 <col:25, col:37> col:37 used x 'const Router::Port &'
| | `-CompoundStmt 0x55f5da6e0bf8 <col:46, line:166:9>
| |   `-ReturnStmt 0x55f5da6e0be8 <line:165:13, col:66>
| |     `-BinaryOperator 0x55f5da6e0bc8 <col:20, col:66> 'bool' '||'
| |       |-BinaryOperator 0x55f5da6e09a8 <col:20, col:28> 'bool' '<'
| |       | |-ImplicitCastExpr 0x55f5da6e0978 <col:20> 'int' <LValueToRValue>
| |       | | `-MemberExpr 0x55f5da6e08f8 <col:20> 'const int' lvalue ->idx 0x55f5da6aa2f0
| |       | |   `-CXXThisExpr 0x55f5da6e08e8 <col:20> 'const Router::Port *' implicit this
| |       | `-ImplicitCastExpr 0x55f5da6e0990 <col:26, col:28> 'int' <LValueToRValue>
| |       |   `-MemberExpr 0x55f5da6e0948 <col:26, col:28> 'const int' lvalue .idx 0x55f5da6aa2f0
| |       |     `-DeclRefExpr 0x55f5da6e0928 <col:26> 'const Router::Port' lvalue ParmVar 0x55f5da6aab10 'x' 'const Router::Port &'
| |       `-ParenExpr 0x55f5da6e0ba8 <col:35, col:66> 'bool'
| |         `-BinaryOperator 0x55f5da6e0b88 <col:36, col:62> 'bool' '&&'
| |           |-BinaryOperator 0x55f5da6e0a88 <col:36, col:45> 'bool' '=='
| |           | |-ImplicitCastExpr 0x55f5da6e0a58 <col:36> 'int' <LValueToRValue>
| |           | | `-MemberExpr 0x55f5da6e09d8 <col:36> 'const int' lvalue ->idx 0x55f5da6aa2f0
| |           | |   `-CXXThisExpr 0x55f5da6e09c8 <col:36> 'const Router::Port *' implicit this
| |           | `-ImplicitCastExpr 0x55f5da6e0a70 <col:43, col:45> 'int' <LValueToRValue>
| |           |   `-MemberExpr 0x55f5da6e0a28 <col:43, col:45> 'const int' lvalue .idx 0x55f5da6aa2f0
| |           |     `-DeclRefExpr 0x55f5da6e0a08 <col:43> 'const Router::Port' lvalue ParmVar 0x55f5da6aab10 'x' 'const Router::Port &'
| |           `-BinaryOperator 0x55f5da6e0b68 <col:52, col:62> 'bool' '<='
| |             |-ImplicitCastExpr 0x55f5da6e0b38 <col:52> 'int' <LValueToRValue>
| |             | `-MemberExpr 0x55f5da6e0ab8 <col:52> 'const int' lvalue ->port 0x55f5da6aa358
| |             |   `-CXXThisExpr 0x55f5da6e0aa8 <col:52> 'const Router::Port *' implicit this
| |             `-ImplicitCastExpr 0x55f5da6e0b50 <col:60, col:62> 'int' <LValueToRValue>
| |               `-MemberExpr 0x55f5da6e0b08 <col:60, col:62> 'const int' lvalue .port 0x55f5da6aa358
| |                 `-DeclRefExpr 0x55f5da6e0ae8 <col:60> 'const Router::Port' lvalue ParmVar 0x55f5da6aab10 'x' 'const Router::Port &'
| |-CXXConstructorDecl 0x55f5da6e0c10 <line:145:12> col:12 implicit constexpr Port 'void (const Router::Port &)' inline default trivial noexcept-unevaluated 0x55f5da6e0c10
| | `-ParmVarDecl 0x55f5da6e0d28 <col:12> col:12 'const Router::Port &'
| |-CXXConstructorDecl 0x55f5da6e0dc8 <col:12> col:12 implicit constexpr Port 'void (Router::Port &&)' inline default trivial noexcept-unevaluated 0x55f5da6e0dc8
| | `-ParmVarDecl 0x55f5da6e0ed8 <col:12> col:12 'Router::Port &&'
| |-CXXDestructorDecl 0x55f5da6e0f70 <col:12> col:12 implicit referenced ~Port 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x55f5da6e1240 <col:12> col:12 implicit operator= 'Router::Port &(const Router::Port &)' inline default trivial noexcept-unevaluated 0x55f5da6e1240
| | `-ParmVarDecl 0x55f5da6e1348 <col:12> col:12 'const Router::Port &'
| `-CXXMethodDecl 0x55f5da6e13b8 <col:12> col:12 implicit used operator= 'Router::Port &(Router::Port &&) noexcept' inline default trivial
|   |-ParmVarDecl 0x55f5da6e14c8 <col:12> col:12 used 'Router::Port &&'
|   `-CompoundStmt 0x55f5da6e17e8 <col:12>
|     |-BinaryOperator 0x55f5da6e1688 <col:12> 'int' lvalue '='
|     | |-MemberExpr 0x55f5da6e1640 <col:12> 'int' lvalue ->idx 0x55f5da6aa2f0
|     | | `-CXXThisExpr 0x55f5da6e1630 <col:12> 'Router::Port *' this
|     | `-ImplicitCastExpr 0x55f5da6e1670 <col:12> 'int' <LValueToRValue>
|     |   `-MemberExpr 0x55f5da6e1600 <col:12> 'int' xvalue .idx 0x55f5da6aa2f0
|     |     `-CXXStaticCastExpr 0x55f5da6e15d0 <col:12> 'Router::Port' xvalue static_cast<struct Router::Port &&> <NoOp>
|     |       `-DeclRefExpr 0x55f5da6e15a0 <col:12> 'Router::Port' lvalue ParmVar 0x55f5da6e14c8 '' 'Router::Port &&'
|     |-BinaryOperator 0x55f5da6e1790 <col:12> 'int' lvalue '='
|     | |-MemberExpr 0x55f5da6e1748 <col:12> 'int' lvalue ->port 0x55f5da6aa358
|     | | `-CXXThisExpr 0x55f5da6e1738 <col:12> 'Router::Port *' this
|     | `-ImplicitCastExpr 0x55f5da6e1778 <col:12> 'int' <LValueToRValue>
|     |   `-MemberExpr 0x55f5da6e1708 <col:12> 'int' xvalue .port 0x55f5da6aa358
|     |     `-CXXStaticCastExpr 0x55f5da6e16d8 <col:12> 'Router::Port' xvalue static_cast<struct Router::Port &&> <NoOp>
|     |       `-DeclRefExpr 0x55f5da6e16a8 <col:12> 'Router::Port' lvalue ParmVar 0x55f5da6e14c8 '' 'Router::Port &&'
|     `-ReturnStmt 0x55f5da6e17d8 <col:12>
|       `-UnaryOperator 0x55f5da6e17c0 <col:12> 'Router::Port' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55f5da6e17b0 <col:12> 'Router::Port *' this
|-CXXRecordDecl 0x55f5da6aac60 <line:169:5, line:194:5> line:169:12 referenced struct Connection definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55f5da6aad78 <col:5, col:12> col:12 implicit referenced struct Connection
| |-FieldDecl 0x55f5da6aaf68 <line:170:9, col:17> col:14 referenced p 'Router::Port [2]'
| |-CXXConstructorDecl 0x55f5da6ab020 <line:172:9, line:173:9> line:172:9 Connection 'void ()'
| | |-CXXCtorInitializer Field 0x55f5da6aaf68 'p' 'Router::Port [2]'
| | | `-CXXConstructExpr 0x55f5da6e0f48 <col:9> 'Router::Port [2]' 'void ()'
| | `-CompoundStmt 0x55f5da6e1080 <col:22, line:173:9>
| |-CXXConstructorDecl 0x55f5da6ab358 <line:174:9, line:177:9> line:174:9 Connection 'void (int, int, int, int)'
| | |-ParmVarDecl 0x55f5da6ab0e0 <col:20, col:24> col:24 used from_idx 'int'
| | |-ParmVarDecl 0x55f5da6ab160 <col:34, col:38> col:38 used from_port 'int'
| | |-ParmVarDecl 0x55f5da6ab1e0 <col:49, col:53> col:53 used to_idx 'int'
| | |-ParmVarDecl 0x55f5da6ab260 <col:61, col:65> col:65 used to_port 'int'
| | |-CXXCtorInitializer Field 0x55f5da6aaf68 'p' 'Router::Port [2]'
| | | `-CXXConstructExpr 0x55f5da6e1090 <col:9> 'Router::Port [2]' 'void ()'
| | `-CompoundStmt 0x55f5da6e1ac8 <col:74, line:177:9>
| |   |-ExprWithCleanups 0x55f5da6e18b8 <line:175:13, col:40> 'Router::Port' lvalue
| |   | `-CXXOperatorCallExpr 0x55f5da6e1880 <col:13, col:40> 'Router::Port' lvalue
| |   |   |-ImplicitCastExpr 0x55f5da6e1868 <col:18> 'Router::Port &(*)(Router::Port &&) noexcept' <FunctionToPointerDecay>
| |   |   | `-DeclRefExpr 0x55f5da6e1550 <col:18> 'Router::Port &(Router::Port &&) noexcept' lvalue CXXMethod 0x55f5da6e13b8 'operator=' 'Router::Port &(Router::Port &&) noexcept'
| |   |   |-ArraySubscriptExpr 0x55f5da6e1160 <col:13, col:16> 'Router::Port' lvalue
| |   |   | |-ImplicitCastExpr 0x55f5da6e1148 <col:13> 'Router::Port *' <ArrayToPointerDecay>
| |   |   | | `-MemberExpr 0x55f5da6e10f8 <col:13> 'Router::Port [2]' lvalue ->p 0x55f5da6aaf68
| |   |   | |   `-CXXThisExpr 0x55f5da6e10e8 <col:13> 'Router::Connection *' implicit this
| |   |   | `-IntegerLiteral 0x55f5da6e1128 <col:15> 'int' 0
| |   |   `-MaterializeTemporaryExpr 0x55f5da6e1538 <col:20, col:40> 'Router::Port' xvalue
| |   |     `-CXXTemporaryObjectExpr 0x55f5da6e1200 <col:20, col:40> 'Router::Port' 'void (int, int)'
| |   |       |-ImplicitCastExpr 0x55f5da6e11d0 <col:25> 'int' <LValueToRValue>
| |   |       | `-DeclRefExpr 0x55f5da6e1190 <col:25> 'int' lvalue ParmVar 0x55f5da6ab1e0 'to_idx' 'int'
| |   |       `-ImplicitCastExpr 0x55f5da6e11e8 <col:33> 'int' <LValueToRValue>
| |   |         `-DeclRefExpr 0x55f5da6e11b0 <col:33> 'int' lvalue ParmVar 0x55f5da6ab260 'to_port' 'int'
| |   `-ExprWithCleanups 0x55f5da6e1ab0 <line:176:13, col:44> 'Router::Port' lvalue
| |     `-CXXOperatorCallExpr 0x55f5da6e1a78 <col:13, col:44> 'Router::Port' lvalue
| |       |-ImplicitCastExpr 0x55f5da6e1a60 <col:18> 'Router::Port &(*)(Router::Port &&) noexcept' <FunctionToPointerDecay>
| |       | `-DeclRefExpr 0x55f5da6e1a40 <col:18> 'Router::Port &(Router::Port &&) noexcept' lvalue CXXMethod 0x55f5da6e13b8 'operator=' 'Router::Port &(Router::Port &&) noexcept'
| |       |-ArraySubscriptExpr 0x55f5da6e1948 <col:13, col:16> 'Router::Port' lvalue
| |       | |-ImplicitCastExpr 0x55f5da6e1930 <col:13> 'Router::Port *' <ArrayToPointerDecay>
| |       | | `-MemberExpr 0x55f5da6e18e0 <col:13> 'Router::Port [2]' lvalue ->p 0x55f5da6aaf68
| |       | |   `-CXXThisExpr 0x55f5da6e18d0 <col:13> 'Router::Connection *' implicit this
| |       | `-IntegerLiteral 0x55f5da6e1910 <col:15> 'int' 1
| |       `-MaterializeTemporaryExpr 0x55f5da6e1a28 <col:20, col:44> 'Router::Port' xvalue
| |         `-CXXTemporaryObjectExpr 0x55f5da6e19e8 <col:20, col:44> 'Router::Port' 'void (int, int)'
| |           |-ImplicitCastExpr 0x55f5da6e19b8 <col:25> 'int' <LValueToRValue>
| |           | `-DeclRefExpr 0x55f5da6e1978 <col:25> 'int' lvalue ParmVar 0x55f5da6ab0e0 'from_idx' 'int'
| |           `-ImplicitCastExpr 0x55f5da6e19d0 <col:35> 'int' <LValueToRValue>
| |             `-DeclRefExpr 0x55f5da6e1998 <col:35> 'int' lvalue ParmVar 0x55f5da6ab160 'from_port' 'int'
| |-CXXMethodDecl 0x55f5da6ab528 <line:179:9, line:182:9> line:179:21 operator[] 'const Router::Port &(int) const'
| | |-ParmVarDecl 0x55f5da6ab438 <col:32, col:36> col:36 used i 'int'
| | `-CompoundStmt 0x55f5da6e2088 <col:45, line:182:9>
| |   |-ParenExpr 0x55f5da6e1f68 <line:180:13, col:169> 'void'
| |   | `-ConditionalOperator 0x55f5da6e1f38 <col:14, col:168> 'void'
| |   |   |-CXXStaticCastExpr 0x55f5da6e1c08 <col:14, col:49> 'bool' static_cast<_Bool> <NoOp>
| |   |   | `-BinaryOperator 0x55f5da6e1bd8 <col:34, col:48> 'bool' '&&'
| |   |   |   |-BinaryOperator 0x55f5da6e1b40 <col:34, col:39> 'bool' '>='
| |   |   |   | |-ImplicitCastExpr 0x55f5da6e1b28 <col:34> 'int' <LValueToRValue>
| |   |   |   | | `-DeclRefExpr 0x55f5da6e1ae8 <col:34> 'int' lvalue ParmVar 0x55f5da6ab438 'i' 'int'
| |   |   |   | `-IntegerLiteral 0x55f5da6e1b08 <col:39> 'int' 0
| |   |   |   `-BinaryOperator 0x55f5da6e1bb8 <col:44, col:48> 'bool' '<'
| |   |   |     |-ImplicitCastExpr 0x55f5da6e1ba0 <col:44> 'int' <LValueToRValue>
| |   |   |     | `-DeclRefExpr 0x55f5da6e1b60 <col:44> 'int' lvalue ParmVar 0x55f5da6ab438 'i' 'int'
| |   |   |     `-IntegerLiteral 0x55f5da6e1b80 <col:48> 'int' 2
| |   |   |-CXXFunctionalCastExpr 0x55f5da6e1c68 <col:53, col:60> 'void' functional cast to void <ToVoid>
| |   |   | `-IntegerLiteral 0x55f5da6e1c48 <col:59> 'int' 0
| |   |   `-CallExpr 0x55f5da6e1e98 <col:64, col:168> 'void'
| |   |     |-ImplicitCastExpr 0x55f5da6e1e80 <col:64> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x55f5da6e1e60 <col:64> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55f5da04a0d0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
| |   |     |-ImplicitCastExpr 0x55f5da6e1ed8 <col:79> 'const char *' <ArrayToPointerDecay>
| |   |     | `-StringLiteral 0x55f5da6e1cd8 <col:79> 'const char [16]' lvalue "i >= 0 && i < 2"
| |   |     |-ImplicitCastExpr 0x55f5da6e1ef0 <col:98> 'const char *' <ArrayToPointerDecay>
| |   |     | `-StringLiteral 0x55f5da6e1d00 <col:98> 'const char [29]' lvalue "../dummy_inc/click/router.hh"
| |   |     |-ImplicitCastExpr 0x55f5da6e1f08 <col:130> 'unsigned int' <IntegralCast>
| |   |     | `-IntegerLiteral 0x55f5da6e1d38 <col:130> 'int' 180
| |   |     `-ImplicitCastExpr 0x55f5da6e1f20 <col:135, col:149> 'const char *' <ArrayToPointerDecay>
| |   |       `-UnaryOperator 0x55f5da6e1e48 <col:135, col:149> 'const char [62]' lvalue prefix '__extension__' cannot overflow
| |   |         `-PredefinedExpr 0x55f5da6e1e30 <col:149> 'const char [62]' lvalue __PRETTY_FUNCTION__
| |   |           `-StringLiteral 0x55f5da6e1dd8 <col:149> 'const char [62]' lvalue "const Router::Port &Router::Connection::operator[](int) const"
| |   `-ReturnStmt 0x55f5da6e2078 <line:181:13, col:23>
| |     `-ArraySubscriptExpr 0x55f5da6e2058 <col:20, col:23> 'const Router::Port' lvalue
| |       |-ImplicitCastExpr 0x55f5da6e2028 <col:20> 'const Router::Port *' <ArrayToPointerDecay>
| |       | `-MemberExpr 0x55f5da6e1f98 <col:20> 'Router::Port const[2]' lvalue ->p 0x55f5da6aaf68
| |       |   `-CXXThisExpr 0x55f5da6e1f88 <col:20> 'const Router::Connection *' implicit this
| |       `-ImplicitCastExpr 0x55f5da6e2040 <col:22> 'int' <LValueToRValue>
| |         `-DeclRefExpr 0x55f5da6e1fc8 <col:22> 'int' lvalue ParmVar 0x55f5da6ab438 'i' 'int'
| |-CXXMethodDecl 0x55f5da6ab6d8 <line:183:9, line:186:9> line:183:15 operator[] 'Router::Port &(int)'
| | |-ParmVarDecl 0x55f5da6ab5e8 <col:26, col:30> col:30 used i 'int'
| | `-CompoundStmt 0x55f5da6e2600 <col:33, line:186:9>
| |   |-ParenExpr 0x55f5da6e2520 <line:184:13, col:169> 'void'
| |   | `-ConditionalOperator 0x55f5da6e24f0 <col:14, col:168> 'void'
| |   |   |-CXXStaticCastExpr 0x55f5da6e21c8 <col:14, col:49> 'bool' static_cast<_Bool> <NoOp>
| |   |   | `-BinaryOperator 0x55f5da6e2198 <col:34, col:48> 'bool' '&&'
| |   |   |   |-BinaryOperator 0x55f5da6e2100 <col:34, col:39> 'bool' '>='
| |   |   |   | |-ImplicitCastExpr 0x55f5da6e20e8 <col:34> 'int' <LValueToRValue>
| |   |   |   | | `-DeclRefExpr 0x55f5da6e20a8 <col:34> 'int' lvalue ParmVar 0x55f5da6ab5e8 'i' 'int'
| |   |   |   | `-IntegerLiteral 0x55f5da6e20c8 <col:39> 'int' 0
| |   |   |   `-BinaryOperator 0x55f5da6e2178 <col:44, col:48> 'bool' '<'
| |   |   |     |-ImplicitCastExpr 0x55f5da6e2160 <col:44> 'int' <LValueToRValue>
| |   |   |     | `-DeclRefExpr 0x55f5da6e2120 <col:44> 'int' lvalue ParmVar 0x55f5da6ab5e8 'i' 'int'
| |   |   |     `-IntegerLiteral 0x55f5da6e2140 <col:48> 'int' 2
| |   |   |-CXXFunctionalCastExpr 0x55f5da6e2228 <col:53, col:60> 'void' functional cast to void <ToVoid>
| |   |   | `-IntegerLiteral 0x55f5da6e2208 <col:59> 'int' 0
| |   |   `-CallExpr 0x55f5da6e2450 <col:64, col:168> 'void'
| |   |     |-ImplicitCastExpr 0x55f5da6e2438 <col:64> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x55f5da6e2418 <col:64> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55f5da04a0d0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
| |   |     |-ImplicitCastExpr 0x55f5da6e2490 <col:79> 'const char *' <ArrayToPointerDecay>
| |   |     | `-StringLiteral 0x55f5da6e2298 <col:79> 'const char [16]' lvalue "i >= 0 && i < 2"
| |   |     |-ImplicitCastExpr 0x55f5da6e24a8 <col:98> 'const char *' <ArrayToPointerDecay>
| |   |     | `-StringLiteral 0x55f5da6e22c0 <col:98> 'const char [29]' lvalue "../dummy_inc/click/router.hh"
| |   |     |-ImplicitCastExpr 0x55f5da6e24c0 <col:130> 'unsigned int' <IntegralCast>
| |   |     | `-IntegerLiteral 0x55f5da6e22f8 <col:130> 'int' 184
| |   |     `-ImplicitCastExpr 0x55f5da6e24d8 <col:135, col:149> 'const char *' <ArrayToPointerDecay>
| |   |       `-UnaryOperator 0x55f5da6e2400 <col:135, col:149> 'const char [50]' lvalue prefix '__extension__' cannot overflow
| |   |         `-PredefinedExpr 0x55f5da6e23e8 <col:149> 'const char [50]' lvalue __PRETTY_FUNCTION__
| |   |           `-StringLiteral 0x55f5da6e2398 <col:149> 'const char [50]' lvalue "Router::Port &Router::Connection::operator[](int)"
| |   `-ReturnStmt 0x55f5da6e25f0 <line:185:13, col:23>
| |     `-ArraySubscriptExpr 0x55f5da6e25d0 <col:20, col:23> 'Router::Port' lvalue
| |       |-ImplicitCastExpr 0x55f5da6e25a0 <col:20> 'Router::Port *' <ArrayToPointerDecay>
| |       | `-MemberExpr 0x55f5da6e2550 <col:20> 'Router::Port [2]' lvalue ->p 0x55f5da6aaf68
| |       |   `-CXXThisExpr 0x55f5da6e2540 <col:20> 'Router::Connection *' implicit this
| |       `-ImplicitCastExpr 0x55f5da6e25b8 <col:22> 'int' <LValueToRValue>
| |         `-DeclRefExpr 0x55f5da6e2580 <col:22> 'int' lvalue ParmVar 0x55f5da6ab5e8 'i' 'int'
| |-CXXMethodDecl 0x55f5da6ab878 <line:188:9, line:190:9> line:188:14 operator== 'bool (const Router::Connection &) const'
| | |-ParmVarDecl 0x55f5da6ab7b8 <col:25, col:43> col:43 used x 'const Router::Connection &'
| | `-CompoundStmt 0x55f5da6e29d8 <col:52, line:190:9>
| |   `-ReturnStmt 0x55f5da6e29c8 <line:189:13, col:51>
| |     `-BinaryOperator 0x55f5da6e29a8 <col:20, col:51> 'bool' '&&'
| |       |-CXXOperatorCallExpr 0x55f5da6e27c0 <col:20, col:33> 'bool'
| |       | |-ImplicitCastExpr 0x55f5da6e27a8 <col:25> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
| |       | | `-DeclRefExpr 0x55f5da6e2760 <col:25> 'bool (const Router::Port &) const' lvalue CXXMethod 0x55f5da6aa7c8 'operator==' 'bool (const Router::Port &) const'
| |       | |-ArraySubscriptExpr 0x55f5da6e2698 <col:20, col:23> 'const Router::Port' lvalue
| |       | | |-ImplicitCastExpr 0x55f5da6e2680 <col:20> 'const Router::Port *' <ArrayToPointerDecay>
| |       | | | `-MemberExpr 0x55f5da6e2630 <col:20> 'Router::Port const[2]' lvalue ->p 0x55f5da6aaf68
| |       | | |   `-CXXThisExpr 0x55f5da6e2620 <col:20> 'const Router::Connection *' implicit this
| |       | | `-IntegerLiteral 0x55f5da6e2660 <col:22> 'int' 0
| |       | `-ArraySubscriptExpr 0x55f5da6e2740 <col:28, col:33> 'const Router::Port' lvalue
| |       |   |-ImplicitCastExpr 0x55f5da6e2728 <col:28, col:30> 'const Router::Port *' <ArrayToPointerDecay>
| |       |   | `-MemberExpr 0x55f5da6e26d8 <col:28, col:30> 'Router::Port const[2]' lvalue .p 0x55f5da6aaf68
| |       |   |   `-DeclRefExpr 0x55f5da6e26b8 <col:28> 'const Router::Connection' lvalue ParmVar 0x55f5da6ab7b8 'x' 'const Router::Connection &'
| |       |   `-IntegerLiteral 0x55f5da6e2708 <col:32> 'int' 0
| |       `-CXXOperatorCallExpr 0x55f5da6e2970 <col:38, col:51> 'bool'
| |         |-ImplicitCastExpr 0x55f5da6e2958 <col:43> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
| |         | `-DeclRefExpr 0x55f5da6e2938 <col:43> 'bool (const Router::Port &) const' lvalue CXXMethod 0x55f5da6aa7c8 'operator==' 'bool (const Router::Port &) const'
| |         |-ArraySubscriptExpr 0x55f5da6e2870 <col:38, col:41> 'const Router::Port' lvalue
| |         | |-ImplicitCastExpr 0x55f5da6e2858 <col:38> 'const Router::Port *' <ArrayToPointerDecay>
| |         | | `-MemberExpr 0x55f5da6e2808 <col:38> 'Router::Port const[2]' lvalue ->p 0x55f5da6aaf68
| |         | |   `-CXXThisExpr 0x55f5da6e27f8 <col:38> 'const Router::Connection *' implicit this
| |         | `-IntegerLiteral 0x55f5da6e2838 <col:40> 'int' 1
| |         `-ArraySubscriptExpr 0x55f5da6e2918 <col:46, col:51> 'const Router::Port' lvalue
| |           |-ImplicitCastExpr 0x55f5da6e2900 <col:46, col:48> 'const Router::Port *' <ArrayToPointerDecay>
| |           | `-MemberExpr 0x55f5da6e28b0 <col:46, col:48> 'Router::Port const[2]' lvalue .p 0x55f5da6aaf68
| |           |   `-DeclRefExpr 0x55f5da6e2890 <col:46> 'const Router::Connection' lvalue ParmVar 0x55f5da6ab7b8 'x' 'const Router::Connection &'
| |           `-IntegerLiteral 0x55f5da6e28e0 <col:50> 'int' 1
| `-CXXMethodDecl 0x55f5da6ab9c0 <line:191:9, line:193:9> line:191:14 operator< 'bool (const Router::Connection &) const'
|   |-ParmVarDecl 0x55f5da6ab930 <col:24, col:42> col:42 used x 'const Router::Connection &'
|   `-CompoundStmt 0x55f5da6e2f70 <col:51, line:193:9>
|     `-ReturnStmt 0x55f5da6e2f60 <line:192:13, col:69>
|       `-BinaryOperator 0x55f5da6e2f40 <col:20, col:69> 'bool' '||'
|         |-CXXOperatorCallExpr 0x55f5da6e2b68 <col:20, col:32> 'bool'
|         | |-ImplicitCastExpr 0x55f5da6e2b50 <col:25> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
|         | | `-DeclRefExpr 0x55f5da6e2b30 <col:25> 'bool (const Router::Port &) const' lvalue CXXMethod 0x55f5da6aaa58 'operator<' 'bool (const Router::Port &) const'
|         | |-ArraySubscriptExpr 0x55f5da6e2a68 <col:20, col:23> 'const Router::Port' lvalue
|         | | |-ImplicitCastExpr 0x55f5da6e2a50 <col:20> 'const Router::Port *' <ArrayToPointerDecay>
|         | | | `-MemberExpr 0x55f5da6e2a00 <col:20> 'Router::Port const[2]' lvalue ->p 0x55f5da6aaf68
|         | | |   `-CXXThisExpr 0x55f5da6e29f0 <col:20> 'const Router::Connection *' implicit this
|         | | `-IntegerLiteral 0x55f5da6e2a30 <col:22> 'int' 0
|         | `-ArraySubscriptExpr 0x55f5da6e2b10 <col:27, col:32> 'const Router::Port' lvalue
|         |   |-ImplicitCastExpr 0x55f5da6e2af8 <col:27, col:29> 'const Router::Port *' <ArrayToPointerDecay>
|         |   | `-MemberExpr 0x55f5da6e2aa8 <col:27, col:29> 'Router::Port const[2]' lvalue .p 0x55f5da6aaf68
|         |   |   `-DeclRefExpr 0x55f5da6e2a88 <col:27> 'const Router::Connection' lvalue ParmVar 0x55f5da6ab930 'x' 'const Router::Connection &'
|         |   `-IntegerLiteral 0x55f5da6e2ad8 <col:31> 'int' 0
|         `-ParenExpr 0x55f5da6e2f20 <col:37, col:69> 'bool'
|           `-BinaryOperator 0x55f5da6e2f00 <col:38, col:68> 'bool' '&&'
|             |-CXXOperatorCallExpr 0x55f5da6e2d18 <col:38, col:51> 'bool'
|             | |-ImplicitCastExpr 0x55f5da6e2d00 <col:43> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
|             | | `-DeclRefExpr 0x55f5da6e2ce0 <col:43> 'bool (const Router::Port &) const' lvalue CXXMethod 0x55f5da6aa7c8 'operator==' 'bool (const Router::Port &) const'
|             | |-ArraySubscriptExpr 0x55f5da6e2c18 <col:38, col:41> 'const Router::Port' lvalue
|             | | |-ImplicitCastExpr 0x55f5da6e2c00 <col:38> 'const Router::Port *' <ArrayToPointerDecay>
|             | | | `-MemberExpr 0x55f5da6e2bb0 <col:38> 'Router::Port const[2]' lvalue ->p 0x55f5da6aaf68
|             | | |   `-CXXThisExpr 0x55f5da6e2ba0 <col:38> 'const Router::Connection *' implicit this
|             | | `-IntegerLiteral 0x55f5da6e2be0 <col:40> 'int' 0
|             | `-ArraySubscriptExpr 0x55f5da6e2cc0 <col:46, col:51> 'const Router::Port' lvalue
|             |   |-ImplicitCastExpr 0x55f5da6e2ca8 <col:46, col:48> 'const Router::Port *' <ArrayToPointerDecay>
|             |   | `-MemberExpr 0x55f5da6e2c58 <col:46, col:48> 'Router::Port const[2]' lvalue .p 0x55f5da6aaf68
|             |   |   `-DeclRefExpr 0x55f5da6e2c38 <col:46> 'const Router::Connection' lvalue ParmVar 0x55f5da6ab930 'x' 'const Router::Connection &'
|             |   `-IntegerLiteral 0x55f5da6e2c88 <col:50> 'int' 0
|             `-CXXOperatorCallExpr 0x55f5da6e2ec8 <col:56, col:68> 'bool'
|               |-ImplicitCastExpr 0x55f5da6e2eb0 <col:61> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x55f5da6e2e90 <col:61> 'bool (const Router::Port &) const' lvalue CXXMethod 0x55f5da6aaa58 'operator<' 'bool (const Router::Port &) const'
|               |-ArraySubscriptExpr 0x55f5da6e2dc8 <col:56, col:59> 'const Router::Port' lvalue
|               | |-ImplicitCastExpr 0x55f5da6e2db0 <col:56> 'const Router::Port *' <ArrayToPointerDecay>
|               | | `-MemberExpr 0x55f5da6e2d60 <col:56> 'Router::Port const[2]' lvalue ->p 0x55f5da6aaf68
|               | |   `-CXXThisExpr 0x55f5da6e2d50 <col:56> 'const Router::Connection *' implicit this
|               | `-IntegerLiteral 0x55f5da6e2d90 <col:58> 'int' 1
|               `-ArraySubscriptExpr 0x55f5da6e2e70 <col:63, col:68> 'const Router::Port' lvalue
|                 |-ImplicitCastExpr 0x55f5da6e2e58 <col:63, col:65> 'const Router::Port *' <ArrayToPointerDecay>
|                 | `-MemberExpr 0x55f5da6e2e08 <col:63, col:65> 'Router::Port const[2]' lvalue .p 0x55f5da6aaf68
|                 |   `-DeclRefExpr 0x55f5da6e2de8 <col:63> 'const Router::Connection' lvalue ParmVar 0x55f5da6ab930 'x' 'const Router::Connection &'
|                 `-IntegerLiteral 0x55f5da6e2e38 <col:67> 'int' 1
|-AccessSpecDecl 0x55f5da6aba80 <line:216:3, col:10> col:3 private
|-CXXRecordDecl 0x55f5da6abaa8 <line:218:5, col:11> col:11 class RouterContextErrh
|-EnumDecl 0x55f5da6abb60 <line:220:5, line:223:5> line:220:5
| |-EnumConstantDecl 0x55f5da6abc20 <line:221:9> col:9 ROUTER_NEW 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
| |-EnumConstantDecl 0x55f5da6abc70 <col:21> col:21 referenced ROUTER_PRECONFIGURE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
| |-EnumConstantDecl 0x55f5da6abcc0 <col:42> col:42 ROUTER_PREINITIALIZE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
| |-EnumConstantDecl 0x55f5da6abd10 <line:222:9> col:9 referenced ROUTER_LIVE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
| `-EnumConstantDecl 0x55f5da6abd60 <col:22> col:22 ROUTER_DEAD 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
|-EnumDecl 0x55f5da6abdb0 <line:224:5, line:227:5> line:224:5
| |-EnumConstantDecl 0x55f5da6abec8 <line:225:9, col:25> col:9 referenced RUNNING_DEAD 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
| | `-ConstantExpr 0x55f5da6abea8 <col:24, col:25> 'int' Int: -2
| |   `-UnaryOperator 0x55f5da6abe90 <col:24, col:25> 'int' prefix '-'
| |     `-IntegerLiteral 0x55f5da6abe70 <col:25> 'int' 2
| |-EnumConstantDecl 0x55f5da6abf70 <col:28, col:48> col:28 RUNNING_INACTIVE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
| | `-ConstantExpr 0x55f5da6abf50 <col:47, col:48> 'int' Int: -1
| |   `-UnaryOperator 0x55f5da6abf38 <col:47, col:48> 'int' prefix '-'
| |     `-IntegerLiteral 0x55f5da6abf18 <col:48> 'int' 1
| |-EnumConstantDecl 0x55f5da6ac000 <col:51, col:71> col:51 RUNNING_PREPARING 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
| | `-ConstantExpr 0x55f5da6abfe0 <col:71> 'int' Int: 0
| |   `-IntegerLiteral 0x55f5da6abfc0 <col:71> 'int' 0
| |-EnumConstantDecl 0x55f5da6ac090 <line:226:9, col:30> col:9 referenced RUNNING_BACKGROUND 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
| | `-ConstantExpr 0x55f5da6ac070 <col:30> 'int' Int: 1
| |   `-IntegerLiteral 0x55f5da6ac050 <col:30> 'int' 1
| `-EnumConstantDecl 0x55f5da6ac120 <col:33, col:50> col:33 referenced RUNNING_ACTIVE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
|   `-ConstantExpr 0x55f5da6ac100 <col:50> 'int' Int: 2
|     `-IntegerLiteral 0x55f5da6ac0e0 <col:50> 'int' 2
|-FieldDecl 0x55f5da6ac180 <line:229:5, col:13> col:13 referenced _master 'Master *'
|-FieldDecl 0x55f5da6ac1e0 <line:231:5, col:21> col:21 referenced _runcount 'atomic_uint32_t'
|-FieldDecl 0x55f5da6ac248 <line:233:5, col:18> col:18 referenced _state 'volatile int'
|-FieldDecl 0x55f5da6ac2e8 <line:234:5, col:30> col:10 _have_connections 'bool'
| `-ConstantExpr 0x55f5da6ac2c8 <col:30> 'int' Int: 1
|   `-IntegerLiteral 0x55f5da6ac298 <col:30> 'int' 1
|-FieldDecl 0x55f5da6ac388 <line:235:5, col:33> col:18 _conn_sorted 'bool' mutable
| `-ConstantExpr 0x55f5da6ac368 <col:33> 'int' Int: 1
|   `-IntegerLiteral 0x55f5da6ac338 <col:33> 'int' 1
|-FieldDecl 0x55f5da6ac428 <line:236:5, col:32> col:10 _have_configuration 'bool'
| `-ConstantExpr 0x55f5da6ac408 <col:32> 'int' Int: 1
|   `-IntegerLiteral 0x55f5da6ac3d8 <col:32> 'int' 1
|-FieldDecl 0x55f5da6ac490 <line:237:5, col:18> col:18 referenced _running 'volatile int'
|-FieldDecl 0x55f5da6ac4f0 <line:239:5, col:21> col:21 referenced _refcount 'atomic_uint32_t'
|-FieldDecl 0x55f5da6b3380 <line:241:5, col:23> col:23 referenced _elements 'Vector<Element *>':'Vector<Element *>'
|-FieldDecl 0x55f5da6b3480 <line:242:5, col:20> col:20 _element_names 'Vector<String>':'Vector<String>'
|-FieldDecl 0x55f5da6b3580 <line:243:5, col:20> col:20 _element_configurations 'Vector<String>':'Vector<String>'
|-FieldDecl 0x55f5da6ba4b0 <line:244:5, col:22> col:22 _element_landmarkids 'Vector<uint32_t>':'Vector<unsigned int>'
|-FieldDecl 0x55f5da6ba5c0 <line:245:5, col:25> col:25 referenced _element_home_thread_ids 'Vector<int>':'Vector<int>' mutable
|-CXXRecordDecl 0x55f5da6ba610 <line:247:5, line:250:5> line:247:12 referenced struct element_landmark_t definition
| |-DefinitionData aggregate standard_layout has_mutable_fields
| | |-DefaultConstructor exists non_trivial needs_implicit
| | |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveConstructor exists simple non_trivial needs_overload_resolution
| | |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveAssignment exists simple non_trivial needs_overload_resolution
| | `-Destructor simple non_trivial needs_overload_resolution
| |-CXXRecordDecl 0x55f5da6ba728 <col:5, col:12> col:12 implicit struct element_landmark_t
| |-FieldDecl 0x55f5da6ba7c8 <line:248:9, col:18> col:18 first_landmarkid 'uint32_t':'unsigned int'
| |-FieldDecl 0x55f5da6ba828 <line:249:9, col:16> col:16 filename 'String'
| |-CXXConstructorDecl 0x55f5da6ba8c0 <line:247:12> col:12 implicit element_landmark_t 'void (const Router::element_landmark_t &)' inline default noexcept-unevaluated 0x55f5da6ba8c0
| | `-ParmVarDecl 0x55f5da6ba9d8 <col:12> col:12 'const Router::element_landmark_t &'
| |-CXXConstructorDecl 0x55f5da6baa78 <col:12> col:12 implicit element_landmark_t 'void (Router::element_landmark_t &&)' inline default noexcept-unevaluated 0x55f5da6baa78
| | `-ParmVarDecl 0x55f5da6bab88 <col:12> col:12 'Router::element_landmark_t &&'
| |-CXXMethodDecl 0x55f5da6bac28 <col:12> col:12 implicit operator= 'Router::element_landmark_t &(const Router::element_landmark_t &)' inline default noexcept-unevaluated 0x55f5da6bac28
| | `-ParmVarDecl 0x55f5da6bad38 <col:12> col:12 'const Router::element_landmark_t &'
| |-CXXMethodDecl 0x55f5da6bada8 <col:12> col:12 implicit operator= 'Router::element_landmark_t &(Router::element_landmark_t &&)' inline default noexcept-unevaluated 0x55f5da6bada8
| | `-ParmVarDecl 0x55f5da6baeb8 <col:12> col:12 'Router::element_landmark_t &&'
| `-CXXDestructorDecl 0x55f5da6baf40 <col:12> col:12 implicit ~element_landmark_t 'void ()' inline default noexcept-unevaluated 0x55f5da6baf40
|-FieldDecl 0x55f5da6c5a90 <line:251:5, col:32> col:32 _element_landmarks 'Vector<Router::element_landmark_t>':'Vector<Router::element_landmark_t>'
|-FieldDecl 0x55f5da6c5af0 <line:252:5, col:14> col:14 _last_landmarkid 'uint32_t':'unsigned int'
|-FieldDecl 0x55f5da6c5c00 <line:254:5, col:25> col:25 _element_name_sorter 'Vector<int>':'Vector<int>' mutable
|-FieldDecl 0x55f5da6c5f58 <line:255:5, col:40> col:17 referenced _element_gport_offset 'Vector<int> [2]'
|-FieldDecl 0x55f5da6c6060 <line:256:5, col:17> col:17 _element_configure_order 'Vector<int>':'Vector<int>'
|-FieldDecl 0x55f5da6cdd90 <line:258:5, col:32> col:32 _conn 'Vector<Router::Connection>':'Vector<Router::Connection>' mutable
|-FieldDecl 0x55f5da6cdea0 <line:259:5, col:25> col:25 _conn_output_sorter 'Vector<int>':'Vector<int>' mutable
|-FieldDecl 0x55f5da6cdfa0 <line:261:5, col:20> col:20 _requirements 'Vector<String>':'Vector<String>'
|-FieldDecl 0x55f5da6ce0b0 <line:263:5, col:17> col:17 _ehandler_first_by_element 'Vector<int>':'Vector<int>'
|-FieldDecl 0x55f5da6ce1c0 <line:264:5, col:17> col:17 _ehandler_to_handler 'Vector<int>':'Vector<int>'
|-FieldDecl 0x55f5da6ce2d0 <line:265:5, col:17> col:17 _ehandler_next 'Vector<int>':'Vector<int>'
|-FieldDecl 0x55f5da6ce3e0 <line:267:5, col:17> col:17 _handler_first_by_name 'Vector<int>':'Vector<int>'
|-EnumDecl 0x55f5da6ce430 <line:269:5, col:33> col:5
| `-EnumConstantDecl 0x55f5da6ce530 <col:12, col:29> col:12 HANDLER_BUFSIZ 'Router::(anonymous enum at ../dummy_inc/click/router.hh:269:5)'
|   `-ImplicitCastExpr 0x55f5da6ce580 <col:29> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55f5da6ce510 <col:29> 'int' Int: 256
|       `-IntegerLiteral 0x55f5da6ce4f0 <col:29> 'int' 256
|-FieldDecl 0x55f5da6ce5e0 <line:270:5, col:15> col:15 _handler_bufs 'Handler **'
|-FieldDecl 0x55f5da6ce648 <line:271:5, col:9> col:9 _nhandlers_bufs 'int'
|-FieldDecl 0x55f5da6ce6b0 <line:272:5, col:9> col:9 _free_handler 'int'
|-FieldDecl 0x55f5da6ce7b0 <line:274:5, col:20> col:20 _attachment_names 'Vector<String>':'Vector<String>'
|-FieldDecl 0x55f5da6d7cb0 <line:275:5, col:19> col:19 _attachments 'Vector<void *>':'Vector<void *>'
|-FieldDecl 0x55f5da6d7d10 <line:277:5, col:14> col:14 referenced _root_element 'Element *'
|-FieldDecl 0x55f5da6d7d70 <line:278:5, col:12> col:12 _configuration 'String'
|-CXXRecordDecl 0x55f5da6d7dc0 <line:280:5, line:290:5> line:280:12 referenced struct notifier_signals_t definition
| |-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| | |-DefaultConstructor
| | |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveConstructor exists simple non_trivial needs_overload_resolution
| | |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveAssignment exists simple non_trivial needs_overload_resolution
| | `-Destructor simple non_trivial needs_overload_resolution
| |-CXXRecordDecl 0x55f5da6d7ed8 <col:5, col:12> col:12 implicit referenced struct notifier_signals_t
| |-EnumDecl 0x55f5da6d7f68 <line:281:9, col:32> col:9
| | `-EnumConstantDecl 0x55f5da6d8070 <col:16, col:27> col:16 referenced capacity 'Router::notifier_signals_t::(anonymous enum at ../dummy_inc/click/router.hh:281:9)'
| |   `-ImplicitCastExpr 0x55f5da6d80c0 <col:27> 'unsigned int' <IntegralCast>
| |     `-ConstantExpr 0x55f5da6d8050 <col:27> 'int' Int: 4096
| |       `-IntegerLiteral 0x55f5da6d8030 <col:27> 'int' 4096
| |-FieldDecl 0x55f5da6d80e8 <line:282:9, col:16> col:16 name 'String'
| |-FieldDecl 0x55f5da6d8150 <line:283:9, col:13> col:13 nsig 'int'
| |-FieldDecl 0x55f5da6d8348 <line:284:9, col:42> col:25 referenced sig 'atomic_uint32_t [128]'
| |-FieldDecl 0x55f5da6d83d8 <line:285:9, col:29> col:29 next 'Router::notifier_signals_t *'
| |-CXXConstructorDecl 0x55f5da6d8598 <line:286:9, line:289:9> line:286:9 notifier_signals_t 'void (const String &, Router::notifier_signals_t *)'
| | |-ParmVarDecl 0x55f5da6d8438 <col:28, col:42> col:42 used n 'const String &'
| | |-ParmVarDecl 0x55f5da6d84b0 <col:45, col:65> col:65 used nx 'Router::notifier_signals_t *'
| | |-CXXCtorInitializer Field 0x55f5da6d80e8 'name' 'String'
| | | `-CXXConstructExpr 0x55f5da6e2fc8 <line:287:15, col:21> 'String' 'void (const String &)'
| | |   `-DeclRefExpr 0x55f5da6e2f88 <col:20> 'const String' lvalue ParmVar 0x55f5da6d8438 'n' 'const String &'
| | |-CXXCtorInitializer Field 0x55f5da6d8150 'nsig' 'int'
| | | `-IntegerLiteral 0x55f5da6e3020 <col:29> 'int' 0
| | |-CXXCtorInitializer Field 0x55f5da6d8348 'sig' 'atomic_uint32_t [128]'
| | | `-CXXConstructExpr 0x55f5da6e3108 <line:286:9> 'atomic_uint32_t [128]' 'void () noexcept'
| | |-CXXCtorInitializer Field 0x55f5da6d83d8 'next' 'Router::notifier_signals_t *'
| | | `-ImplicitCastExpr 0x55f5da6e30c8 <line:287:38> 'Router::notifier_signals_t *' <LValueToRValue>
| | |   `-DeclRefExpr 0x55f5da6e3088 <col:38> 'Router::notifier_signals_t *' lvalue ParmVar 0x55f5da6d84b0 'nx' 'Router::notifier_signals_t *'
| | `-CompoundStmt 0x55f5da6e3398 <col:42, line:289:9>
| |   `-CallExpr 0x55f5da6e3348 <line:288:13, col:43> 'void *'
| |     |-ImplicitCastExpr 0x55f5da6e3330 <col:13> 'void *(*)(void *, int, size_t) throw()' <FunctionToPointerDecay>
| |     | `-DeclRefExpr 0x55f5da6e3310 <col:13> 'void *(void *, int, size_t) throw()' lvalue Function 0x55f5da20e388 'memset' 'void *(void *, int, size_t) throw()'
| |     |-ImplicitCastExpr 0x55f5da6e3380 <col:20, col:26> 'void *' <BitCast>
| |     | `-UnaryOperator 0x55f5da6e3258 <col:20, col:26> 'atomic_uint32_t *' prefix '&' cannot overflow
| |     |   `-ArraySubscriptExpr 0x55f5da6e3238 <col:21, col:26> 'atomic_uint32_t' lvalue
| |     |     |-ImplicitCastExpr 0x55f5da6e3220 <col:21> 'atomic_uint32_t *' <ArrayToPointerDecay>
| |     |     | `-MemberExpr 0x55f5da6e31d0 <col:21> 'atomic_uint32_t [128]' lvalue ->sig 0x55f5da6d8348
| |     |     |   `-CXXThisExpr 0x55f5da6e31c0 <col:21> 'Router::notifier_signals_t *' implicit this
| |     |     `-IntegerLiteral 0x55f5da6e3200 <col:25> 'int' 0
| |     |-IntegerLiteral 0x55f5da6e3270 <col:29> 'int' 0
| |     `-UnaryExprOrTypeTraitExpr 0x55f5da6e32f0 <col:32, col:42> 'unsigned long' sizeof
| |       `-ParenExpr 0x55f5da6e32d0 <col:38, col:42> 'atomic_uint32_t [128]' lvalue
| |         `-MemberExpr 0x55f5da6e32a0 <col:39> 'atomic_uint32_t [128]' lvalue ->sig 0x55f5da6d8348 non_odr_use_unevaluated
| |           `-CXXThisExpr 0x55f5da6e3290 <col:39> 'Router::notifier_signals_t *' implicit this
| |-CXXConstructorDecl 0x55f5da6d8678 <line:280:12> col:12 implicit notifier_signals_t 'void (const Router::notifier_signals_t &)' inline default noexcept-unevaluated 0x55f5da6d8678
| | `-ParmVarDecl 0x55f5da6d8788 <col:12> col:12 'const Router::notifier_signals_t &'
| |-CXXConstructorDecl 0x55f5da6d8828 <col:12> col:12 implicit notifier_signals_t 'void (Router::notifier_signals_t &&)' inline default noexcept-unevaluated 0x55f5da6d8828
| | `-ParmVarDecl 0x55f5da6d8938 <col:12> col:12 'Router::notifier_signals_t &&'
| |-CXXMethodDecl 0x55f5da6d89d8 <col:12> col:12 implicit operator= 'Router::notifier_signals_t &(const Router::notifier_signals_t &)' inline default noexcept-unevaluated 0x55f5da6d89d8
| | `-ParmVarDecl 0x55f5da6d8ae8 <col:12> col:12 'const Router::notifier_signals_t &'
| |-CXXMethodDecl 0x55f5da6d8b58 <col:12> col:12 implicit operator= 'Router::notifier_signals_t &(Router::notifier_signals_t &&)' inline default noexcept-unevaluated 0x55f5da6d8b58
| | `-ParmVarDecl 0x55f5da6d8c68 <col:12> col:12 'Router::notifier_signals_t &&'
| `-CXXDestructorDecl 0x55f5da6d8cf0 <col:12> col:12 implicit ~notifier_signals_t 'void ()' inline default noexcept-unevaluated 0x55f5da6d8cf0
|-FieldDecl 0x55f5da6d8de0 <line:291:5, col:25> col:25 _notifier_signals 'Router::notifier_signals_t *'
|-FieldDecl 0x55f5da6d8e40 <line:292:5, col:27> col:27 referenced _arena_factory 'HashMap_ArenaFactory *'
|-FieldDecl 0x55f5da6d8ea0 <line:293:5, col:13> col:13 referenced _hotswap_router 'Router *'
|-FieldDecl 0x55f5da6d8f00 <line:294:5, col:18> col:18 referenced _thread_sched 'ThreadSched *'
|-FieldDecl 0x55f5da6d8f60 <line:295:5, col:23> col:23 referenced _name_info 'NameInfo *' mutable
|-FieldDecl 0x55f5da6d9070 <line:296:5, col:17> col:17 _flow_code_override_eindex 'Vector<int>':'Vector<int>'
|-FieldDecl 0x55f5da6d9170 <line:297:5, col:20> col:20 referenced _flow_code_override 'Vector<String>':'Vector<String>'
|-FieldDecl 0x55f5da6d91d0 <line:299:5, col:13> col:13 _next_router 'Router *'
|-CXXConstructorDecl 0x55f5da6d9318 <line:305:5, col:25> col:5 Router 'void (const Router &)'
| `-ParmVarDecl 0x55f5da6d9258 <col:12, col:24> col:25 'const Router &'
|-CXXMethodDecl 0x55f5da6d94c8 <line:306:5, col:36> col:13 operator= 'Router &(const Router &)'
| `-ParmVarDecl 0x55f5da6d93d8 <col:23, col:35> col:36 'const Router &'
|-CXXMethodDecl 0x55f5da6d9610 <line:308:5, col:49> col:17 remove_connection 'Router::Connection *(Router::Connection *)'
| `-ParmVarDecl 0x55f5da6d9580 <col:35, col:47> col:47 cp 'Router::Connection *'
|-CXXMethodDecl 0x55f5da6d99b8 <line:309:5, line:310:62> line:309:10 hookup_error 'void (const Router::Port &, bool, const char *, ErrorHandler *, bool)'
| |-ParmVarDecl 0x55f5da6d96c8 <col:23, col:35> col:35 p 'const Router::Port &'
| |-ParmVarDecl 0x55f5da6d9740 <col:38, col:43> col:43 isoutput 'bool'
| |-ParmVarDecl 0x55f5da6d97c0 <col:53, col:65> col:65 message 'const char *'
| |-ParmVarDecl 0x55f5da6d9838 <line:310:23, col:37> col:37 errh 'ErrorHandler *'
| `-ParmVarDecl 0x55f5da6d98b0 <col:43, col:57> col:48 active 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55f5da6dc9f0 <col:57> 'bool' false
|-CXXMethodDecl 0x55f5da6d9b28 <line:311:5, col:44> col:9 check_hookup_elements 'int (ErrorHandler *)'
| `-ParmVarDecl 0x55f5da6d9a90 <col:31, col:43> col:44 'ErrorHandler *'
|-CXXMethodDecl 0x55f5da6d9c78 <line:312:5, col:41> col:9 check_hookup_range 'int (ErrorHandler *)'
| `-ParmVarDecl 0x55f5da6d9be0 <col:28, col:40> col:41 'ErrorHandler *'
|-CXXMethodDecl 0x55f5da6d9dc8 <line:313:5, col:48> col:9 check_hookup_completeness 'int (ErrorHandler *)'
| `-ParmVarDecl 0x55f5da6d9d30 <col:35, col:47> col:48 'ErrorHandler *'
|-CXXMethodDecl 0x55f5da6d9f20 <line:315:5, col:48> col:17 used hard_flow_code_override 'const char *(int) const'
| `-ParmVarDecl 0x55f5da6d9e88 <col:41, col:45> col:45 e 'int'
|-CXXMethodDecl 0x55f5da6da240 <line:316:5, col:74> col:9 processing_error 'int (const Router::Connection &, bool, int, ErrorHandler *)'
| |-ParmVarDecl 0x55f5da6d9fd8 <col:26, col:44> col:44 conn 'const Router::Connection &'
| |-ParmVarDecl 0x55f5da6da050 <col:50> col:54 'bool'
| |-ParmVarDecl 0x55f5da6da0d0 <col:56> col:59 'int'
| `-ParmVarDecl 0x55f5da6da148 <col:61, col:73> col:74 'ErrorHandler *'
|-CXXMethodDecl 0x55f5da6da3a8 <line:317:5, col:42> col:9 check_push_and_pull 'int (ErrorHandler *)'
| `-ParmVarDecl 0x55f5da6da310 <col:29, col:41> col:42 'ErrorHandler *'
|-CXXMethodDecl 0x55f5da6da470 <line:319:5, col:26> col:10 set_connections 'void ()'
|-CXXMethodDecl 0x55f5da6da530 <line:320:5, col:29> col:10 sort_connections 'void () const'
|-CXXMethodDecl 0x55f5da6da730 <line:321:5, col:64> col:9 connindex_lower_bound 'int (bool, const Router::Port &) const'
| |-ParmVarDecl 0x55f5da6da5e0 <col:31, col:36> col:36 isoutput 'bool'
| `-ParmVarDecl 0x55f5da6da658 <col:46, col:58> col:58 port 'const Router::Port &'
|-CXXMethodDecl 0x55f5da6da800 <line:323:5, col:22> col:10 make_gports 'void ()'
|-CXXMethodDecl 0x55f5da6da948 <line:324:5, line:326:5> line:324:16 ngports 'int (bool) const' inline
| |-ParmVarDecl 0x55f5da6da8b0 <col:24, col:29> col:29 used isout 'bool'
| `-CompoundStmt 0x55f5da6e35d0 <col:42, line:326:5>
|   `-ReturnStmt 0x55f5da6e35c0 <line:325:9, col:50>
|     `-ImplicitCastExpr 0x55f5da6e35a8 <col:16, col:50> 'int':'int' <LValueToRValue>
|       `-CXXMemberCallExpr 0x55f5da6e3588 <col:16, col:50> 'const int':'const int' lvalue
|         `-MemberExpr 0x55f5da6e3558 <col:16, col:45> '<bound member function type>' .back 0x55f5da6595d8
|           `-ArraySubscriptExpr 0x55f5da6e34d8 <col:16, col:43> 'const Vector<int>':'const Vector<int>' lvalue
|             |-ImplicitCastExpr 0x55f5da6e34a8 <col:16> 'const Vector<int> *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55f5da6e33c0 <col:16> 'Vector<int> const[2]' lvalue ->_element_gport_offset 0x55f5da6c5f58
|             |   `-CXXThisExpr 0x55f5da6e33b0 <col:16> 'const Router *' implicit this
|             `-ImplicitCastExpr 0x55f5da6e34c0 <col:38> 'bool' <LValueToRValue>
|               `-DeclRefExpr 0x55f5da6e33f0 <col:38> 'bool' lvalue ParmVar 0x55f5da6da8b0 'isout' 'bool'
|-CXXMethodDecl 0x55f5da6dab18 <line:327:5, col:55> col:16 gport 'int (bool, const Router::Port &) const' inline
| |-ParmVarDecl 0x55f5da6daa00 <col:22, col:27> col:27 isoutput 'bool'
| `-ParmVarDecl 0x55f5da6daa78 <col:37, col:49> col:49 port 'const Router::Port &'
|-CXXMethodDecl 0x55f5da6dac70 <line:329:5, col:47> col:9 used hard_home_thread_id 'int (const Element *) const'
| `-ParmVarDecl 0x55f5da6dabd8 <col:29, col:44> col:44 e 'const Element *'
|-CXXMethodDecl 0x55f5da6daf18 <line:331:5, col:67> col:9 element_lerror 'int (ErrorHandler *, Element *, const char *, ...) const'
| |-ParmVarDecl 0x55f5da6dad28 <col:24, col:36> col:37 'ErrorHandler *'
| |-ParmVarDecl 0x55f5da6dada0 <col:39, col:46> col:47 'Element *'
| `-ParmVarDecl 0x55f5da6dae20 <col:49, col:59> col:60 'const char *'
|-CXXMethodDecl 0x55f5da6db0f0 <line:334:5, col:40> col:10 initialize_handlers 'void (bool, bool)'
| |-ParmVarDecl 0x55f5da6dafe0 <col:30> col:34 'bool'
| `-ParmVarDecl 0x55f5da6db058 <col:36> col:40 'bool'
|-CXXMethodDecl 0x55f5da6db278 <line:335:5, col:35> col:21 xhandler 'Handler *(int) const' inline
| `-ParmVarDecl 0x55f5da6db1b8 <col:30> col:33 'int'
|-CXXMethodDecl 0x55f5da6db510 <line:336:5, col:60> col:9 find_ehandler 'int (int, const String &, bool) const'
| |-ParmVarDecl 0x55f5da6db338 <col:23> col:26 'int'
| |-ParmVarDecl 0x55f5da6db3b0 <col:28, col:40> col:41 'const String &'
| `-ParmVarDecl 0x55f5da6db428 <col:43, col:48> col:48 allow_star 'bool'
|-CXXMethodDecl 0x55f5da6db728 <line:337:5, col:70> col:27 fetch_handler 'Handler (const Element *, const String &)' static inline
| |-ParmVarDecl 0x55f5da6db5d8 <col:41, col:54> col:55 'const Element *'
| `-ParmVarDecl 0x55f5da6db650 <col:57, col:69> col:70 'const String &'
|-CXXMethodDecl 0x55f5da6db938 <line:338:5, col:52> col:10 store_local_handler 'void (int, Handler &)'
| |-ParmVarDecl 0x55f5da6db7f0 <col:30, col:34> col:34 eindex 'int'
| `-ParmVarDecl 0x55f5da6db868 <col:42, col:51> col:51 h 'Handler &'
|-CXXMethodDecl 0x55f5da6dbab8 <line:339:5, col:48> col:17 store_global_handler 'void (Handler &)' static
| `-ParmVarDecl 0x55f5da6db9f8 <col:38, col:47> col:47 h 'Handler &'
|-CXXMethodDecl 0x55f5da6dbcb8 <line:340:5, col:72> col:24 store_handler 'void (const Element *, Handler &)' static inline
| |-ParmVarDecl 0x55f5da6dbb70 <col:38, col:53> col:53 element 'const Element *'
| `-ParmVarDecl 0x55f5da6dbbe8 <col:62, col:71> col:71 h 'Handler &'
|-CXXMethodDecl 0x55f5da6dbe90 <line:343:5, col:66> col:19 router_read_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55f5da6dbd78 <col:39, col:48> col:48 e 'Element *'
| `-ParmVarDecl 0x55f5da6dbdf8 <col:51, col:57> col:57 user_data 'void *'
|-CXXMethodDecl 0x55f5da6dc170 <line:344:5, col:103> col:16 router_write_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x55f5da6dbf50 <col:37, col:51> col:51 str 'const String &'
| |-ParmVarDecl 0x55f5da6dbfc8 <col:56, col:65> col:65 e 'Element *'
| |-ParmVarDecl 0x55f5da6dc048 <col:68, col:74> col:74 user_data 'void *'
| `-ParmVarDecl 0x55f5da6dc0c0 <col:85, col:99> col:99 errh 'ErrorHandler *'
|-FriendDecl 0x55f5da6dc250 <line:347:5, col:18> col:12 'class Master':'Master'
|-FriendDecl 0x55f5da6dc2b0 <line:348:5, col:18> col:12 'class Task':'Task'
`-FriendDecl 0x55f5da6dc530 <line:349:5, col:44> col:25
  `-CXXMethodDecl 0x55f5da6dc430 parent 0x55f5da50f9f0 prev 0x55f5da51f618 <col:5, col:44> col:25 set_nports 'int (int, int)'
    |-ParmVarDecl 0x55f5da6dc310 <col:36> col:39 'int'
    `-ParmVarDecl 0x55f5da6dc390 <col:41> col:44 'int'

Layout: <CGRecordLayout
  LLVMType:%class.Router = type { %class.Master*, %class.atomic_uint32_t, i32, i8, i32, %class.atomic_uint32_t, %class.Vector, %class.Vector.0, %class.Vector.0, %class.Vector.2, %class.Vector.5, %class.Vector.6, i32, %class.Vector.5, [2 x %class.Vector.5], %class.Vector.5, %class.Vector.8, %class.Vector.5, %class.Vector.0, %class.Vector.5, %class.Vector.5, %class.Vector.5, %class.Vector.5, %class.Handler**, i32, i32, %class.Vector.0, %class.Vector.12, %class.Element*, %class.String, %"struct.Router::notifier_signals_t"*, %class.HashMap_ArenaFactory*, %class.Router*, %class.ThreadSched*, %class.NameInfo*, %class.Vector.5, %class.Vector.0, %class.Router* }
  NonVirtualBaseLLVMType:%class.Router = type { %class.Master*, %class.atomic_uint32_t, i32, i8, i32, %class.atomic_uint32_t, %class.Vector, %class.Vector.0, %class.Vector.0, %class.Vector.2, %class.Vector.5, %class.Vector.6, i32, %class.Vector.5, [2 x %class.Vector.5], %class.Vector.5, %class.Vector.8, %class.Vector.5, %class.Vector.0, %class.Vector.5, %class.Vector.5, %class.Vector.5, %class.Vector.5, %class.Handler**, i32, i32, %class.Vector.0, %class.Vector.12, %class.Element*, %class.String, %"struct.Router::notifier_signals_t"*, %class.HashMap_ArenaFactory*, %class.Router*, %class.ThreadSched*, %class.NameInfo*, %class.Vector.5, %class.Vector.0, %class.Router* }
  IsZeroInitializable:1
  BitFields:[
    <CGBitFieldInfo Offset:0 Size:1 IsSigned:0 StorageSize:8 StorageOffset:16>
    <CGBitFieldInfo Offset:1 Size:1 IsSigned:0 StorageSize:8 StorageOffset:16>
    <CGBitFieldInfo Offset:2 Size:1 IsSigned:0 StorageSize:8 StorageOffset:16>
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f5da50f9f0 prev 0x55f5da50f770 <../dummy_inc/click/element.hh:29:1, line:319:1> line:29:7 referenced class Element definition
|-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55f5da50fae8 <col:1, col:7> col:7 implicit referenced class Element
|-AccessSpecDecl 0x55f5da50fb78 <col:17, col:23> col:17 public
|-CXXConstructorDecl 0x55f5da50fbd8 <line:31:5, col:13> col:5 used Element 'void ()'
|-CXXDestructorDecl 0x55f5da50fcc8 <line:32:5, col:22> col:13 used ~Element 'void () noexcept' virtual
|-VarDecl 0x55f5da50fdc8 <line:33:5, col:16> col:16 nelements_allocated 'int' static
|-CXXMethodDecl 0x55f5da50ff98 <line:36:5, col:42> col:18 used push 'void (int, Packet *)' virtual
| |-ParmVarDecl 0x55f5da50fe48 <col:23, col:27> col:27 port 'int'
| `-ParmVarDecl 0x55f5da50fec0 <col:33, col:41> col:41 p 'Packet *'
|-CXXMethodDecl 0x55f5da510128 <line:37:5, col:70> col:21 used pull 'Packet *(int)' virtual
| |-ParmVarDecl 0x55f5da510060 <col:26, col:30> col:30 port 'int'
| `-WarnUnusedResultAttr 0x55f5da5101d0 <col:51> warn_unused_result ""
|-CXXMethodDecl 0x55f5da510308 <line:38:5, col:44> col:21 simple_action 'Packet *(Packet *)' virtual
| `-ParmVarDecl 0x55f5da510240 <col:35, col:43> col:43 p 'Packet *'
|-CXXMethodDecl 0x55f5da5104a8 <line:40:5, col:37> col:18 used run_task 'bool (Task *)' virtual
| `-ParmVarDecl 0x55f5da5103e8 <col:27, col:33> col:33 task 'Task *'
|-CXXMethodDecl 0x55f5da510648 <line:41:5, col:40> col:18 run_timer 'void (Timer *)' virtual
| `-ParmVarDecl 0x55f5da510588 <col:28, col:35> col:35 timer 'Timer *'
|-EnumDecl 0x55f5da5106f0 <line:43:5, col:46> col:5
| |-EnumConstantDecl 0x55f5da5107f0 <col:12, col:26> col:12 SELECT_READ 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
| | `-ImplicitCastExpr 0x55f5da5108d0 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f5da5107d0 <col:26> 'int' Int: 1
| |     `-IntegerLiteral 0x55f5da5107b0 <col:26> 'int' 1
| `-EnumConstantDecl 0x55f5da510880 <col:29, col:44> col:29 SELECT_WRITE 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
|   `-ImplicitCastExpr 0x55f5da5108e8 <col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55f5da510860 <col:44> 'int' Int: 2
|       `-IntegerLiteral 0x55f5da510840 <col:44> 'int' 2
|-CXXMethodDecl 0x55f5da510a30 <line:44:5, col:43> col:18 selected 'void (int, int)' virtual
| |-ParmVarDecl 0x55f5da510918 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x55f5da510998 <col:35, col:39> col:39 mask 'int'
|-CXXMethodDecl 0x55f5da510b88 <line:45:5, col:33> col:18 selected 'void (int)' virtual
| `-ParmVarDecl 0x55f5da510af8 <col:27, col:31> col:31 fd 'int'
|-CXXMethodDecl 0x55f5da510dc8 <line:48:5, col:86> col:45 checked_output_push 'void (int, Packet *) const'
| |-ParmVarDecl 0x55f5da510c48 <col:65, col:69> col:69 port 'int'
| |-ParmVarDecl 0x55f5da510cc0 <col:75, col:83> col:83 p 'Packet *'
| |-NoInlineAttr 0x55f5da510e78 <col:20>
| `-OptimizeNoneAttr 0x55f5da510ed0 <col:30>
|-CXXMethodDecl 0x55f5da510fd8 <line:49:5, col:77> col:48 checked_input_pull 'Packet *(int) const'
| |-ParmVarDecl 0x55f5da510f10 <col:67, col:71> col:71 port 'int'
| |-NoInlineAttr 0x55f5da511080 <col:20>
| `-OptimizeNoneAttr 0x55f5da5110d8 <col:30>
|-CXXMethodDecl 0x55f5da511128 <line:52:5, col:46> col:25 class_name 'const char *() const' virtual pure
|-CXXMethodDecl 0x55f5da5111f0 <line:54:5, col:38> col:25 port_count 'const char *() const' virtual
|-VarDecl 0x55f5da511308 <line:55:5, col:33> col:23 PORTS_0_0 'const char []' static
|-VarDecl 0x55f5da511390 <line:56:5, col:33> col:23 used PORTS_0_1 'const char []' static
|-VarDecl 0x55f5da511418 <line:57:5, col:33> col:23 PORTS_1_0 'const char []' static
|-VarDecl 0x55f5da5114a0 <line:58:5, col:33> col:23 PORTS_1_1 'const char []' static
|-VarDecl 0x55f5da511528 <line:59:5, col:35> col:23 PORTS_1_1X2 'const char []' static
|-CXXMethodDecl 0x55f5da5115b8 <line:61:5, col:38> col:25 processing 'const char *() const' virtual
|-VarDecl 0x55f5da511678 <line:62:5, col:32> col:23 AGNOSTIC 'const char []' static
|-VarDecl 0x55f5da511700 <line:63:5, col:28> col:23 PUSH 'const char []' static
|-VarDecl 0x55f5da511788 <line:64:5, col:28> col:23 PULL 'const char []' static
|-VarDecl 0x55f5da511810 <line:65:5, col:36> col:23 PUSH_TO_PULL 'const char []' static
|-VarDecl 0x55f5da511898 <line:66:5, col:36> col:23 PULL_TO_PUSH 'const char []' static
|-VarDecl 0x55f5da511920 <line:67:5, col:39> col:23 PROCESSING_A_AH 'const char []' static
|-CXXMethodDecl 0x55f5da5119b0 <line:69:5, col:37> col:25 flow_code 'const char *() const' virtual
|-VarDecl 0x55f5da511a70 <line:70:5, col:37> col:23 COMPLETE_FLOW 'const char []' static
|-CXXMethodDecl 0x55f5da511b00 <line:72:5, col:33> col:25 flags 'const char *() const' virtual
|-CXXMethodDecl 0x55f5da511c50 <line:73:5, col:30> col:9 flag_value 'int (int) const'
| `-ParmVarDecl 0x55f5da511bb8 <col:20, col:24> col:24 flag 'int'
|-CXXMethodDecl 0x55f5da511de0 <line:75:5, col:40> col:19 cast 'void *(const char *)' virtual
| `-ParmVarDecl 0x55f5da511d10 <col:24, col:36> col:36 name 'const char *'
|-CXXMethodDecl 0x55f5da512090 <line:76:5, col:70> col:19 port_cast 'void *(bool, int, const char *)' virtual
| |-ParmVarDecl 0x55f5da511e98 <col:29, col:34> col:34 isoutput 'bool'
| |-ParmVarDecl 0x55f5da511f18 <col:44, col:48> col:48 port 'int'
| `-ParmVarDecl 0x55f5da511f98 <col:54, col:66> col:66 name 'const char *'
|-EnumDecl 0x55f5da512148 <line:79:5, line:85:5> line:79:10 ConfigurePhase
| |-EnumConstantDecl 0x55f5da512250 <line:80:9, col:33> col:9 CONFIGURE_PHASE_FIRST 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55f5da5124e0 <col:33> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f5da512230 <col:33> 'int' Int: 0
| |     `-IntegerLiteral 0x55f5da512210 <col:33> 'int' 0
| |-EnumConstantDecl 0x55f5da5122e0 <line:81:9, col:32> col:9 referenced CONFIGURE_PHASE_INFO 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55f5da5124f8 <col:32> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f5da5122c0 <col:32> 'int' Int: 20
| |     `-IntegerLiteral 0x55f5da5122a0 <col:32> 'int' 20
| |-EnumConstantDecl 0x55f5da512370 <line:82:9, col:38> col:9 CONFIGURE_PHASE_PRIVILEGED 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55f5da512510 <col:38> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f5da512350 <col:38> 'int' Int: 90
| |     `-IntegerLiteral 0x55f5da512330 <col:38> 'int' 90
| |-EnumConstantDecl 0x55f5da512400 <line:83:9, col:35> col:9 CONFIGURE_PHASE_DEFAULT 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55f5da512528 <col:35> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f5da5123e0 <col:35> 'int' Int: 100
| |     `-IntegerLiteral 0x55f5da5123c0 <col:35> 'int' 100
| `-EnumConstantDecl 0x55f5da512490 <line:84:9, col:32> col:9 CONFIGURE_PHASE_LAST 'Element::ConfigurePhase'
|   `-ImplicitCastExpr 0x55f5da512540 <col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55f5da512470 <col:32> 'int' Int: 2000
|       `-IntegerLiteral 0x55f5da512450 <col:32> 'int' 2000
|-CXXMethodDecl 0x55f5da512580 <line:86:5, col:35> col:17 configure_phase 'int () const' virtual
|-CXXMethodDecl 0x55f5da5129c0 <line:88:5, col:67> col:17 configure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x55f5da512830 <col:27, col:43> col:43 conf 'Vector<String> &'
| `-ParmVarDecl 0x55f5da5128a8 <col:49, col:63> col:63 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55f5da512a90 <line:90:5, col:31> col:18 add_handlers 'void ()' virtual
|-CXXMethodDecl 0x55f5da512c10 <line:92:5, col:46> col:17 initialize 'int (ErrorHandler *)' virtual
| `-ParmVarDecl 0x55f5da512b40 <col:28, col:42> col:42 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55f5da512e18 <line:94:5, col:69> col:18 take_state 'void (Element *, ErrorHandler *)' virtual
| |-ParmVarDecl 0x55f5da512cc8 <col:29, col:38> col:38 old_element 'Element *'
| `-ParmVarDecl 0x55f5da512d40 <col:51, col:65> col:65 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55f5da512f18 <line:95:5, col:40> col:22 hotswap_element 'Element *() const' virtual
|-EnumDecl 0x55f5da512fb8 <line:97:5, line:106:5> line:97:10 referenced CleanupStage
| |-EnumConstantDecl 0x55f5da513080 <line:98:9> col:9 referenced CLEANUP_NO_ROUTER 'Element::CleanupStage'
| |-EnumConstantDecl 0x55f5da513110 <line:99:9, col:36> col:9 CLEANUP_BEFORE_CONFIGURE 'Element::CleanupStage'
| | `-ImplicitCastExpr 0x55f5da513340 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f5da5130f0 <col:36> 'int' Int: 0
| |     `-DeclRefExpr 0x55f5da5130d0 <col:36> 'int' EnumConstant 0x55f5da513080 'CLEANUP_NO_ROUTER' 'Element::CleanupStage'
| |-EnumConstantDecl 0x55f5da513160 <line:100:9> col:9 CLEANUP_CONFIGURE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55f5da5131b0 <line:101:9> col:9 CLEANUP_CONFIGURED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55f5da513200 <line:102:9> col:9 CLEANUP_INITIALIZE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55f5da513250 <line:103:9> col:9 CLEANUP_INITIALIZED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55f5da5132a0 <line:104:9> col:9 CLEANUP_ROUTER_INITIALIZED 'Element::CleanupStage'
| `-EnumConstantDecl 0x55f5da5132f0 <line:105:9> col:9 CLEANUP_MANUAL 'Element::CleanupStage'
|-CXXMethodDecl 0x55f5da513428 <line:107:5, col:44> col:18 cleanup 'void (Element::CleanupStage)' virtual
| `-ParmVarDecl 0x55f5da513368 <col:26, col:39> col:39 stage 'Element::CleanupStage'
|-CXXMethodDecl 0x55f5da5134f0 <line:109:5, col:42> col:24 static_initialize 'void ()' static inline
|-CXXMethodDecl 0x55f5da5135b0 <line:110:5, col:39> col:24 static_cleanup 'void ()' static inline
|-CXXMethodDecl 0x55f5da513670 <line:113:5, col:19> col:12 name 'String () const'
|-CXXMethodDecl 0x55f5da513730 <line:114:5, col:34> col:20 declaration 'String () const' virtual
|-CXXMethodDecl 0x55f5da513848 <line:116:5, col:29> col:20 used router 'Router *() const' inline
|-CXXMethodDecl 0x55f5da513910 <line:117:5, col:25> col:16 used eindex 'int () const' inline
|-CXXMethodDecl 0x55f5da513a90 <line:118:5, col:34> col:16 eindex 'int (Router *) const' inline
| `-ParmVarDecl 0x55f5da5139c0 <col:23, col:31> col:31 r 'Router *'
|-CXXMethodDecl 0x55f5da513bb8 <line:121:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x55f5da513db8 <line:123:5, line:127:5> line:123:17 attach_router 'void (Router *, int)' inline
| |-ParmVarDecl 0x55f5da513c68 <col:31, col:39> col:39 used r 'Router *'
| |-ParmVarDecl 0x55f5da513ce8 <col:42, col:46> col:46 used eindex 'int'
| `-CompoundStmt 0x55f5da521708 <col:54, line:127:5>
|   |-ParenExpr 0x55f5da5215b8 <line:124:9, col:152> 'void'
|   | `-ConditionalOperator 0x55f5da521588 <col:10, col:151> 'void'
|   |   |-CXXStaticCastExpr 0x55f5da521278 <col:10, col:38> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x55f5da521250 <col:30, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-ImplicitCastExpr 0x55f5da521238 <col:31> 'bool' <PointerToBoolean>
|   |   |     `-ImplicitCastExpr 0x55f5da521220 <col:31> 'Router *' <LValueToRValue>
|   |   |       `-MemberExpr 0x55f5da5211f0 <col:31> 'Router *' lvalue ->_router 0x55f5da51f0d0
|   |   |         `-CXXThisExpr 0x55f5da5211e0 <col:31> 'Element *' implicit this
|   |   |-CXXFunctionalCastExpr 0x55f5da5212d8 <col:42, col:49> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55f5da5212b8 <col:48> 'int' 0
|   |   `-CallExpr 0x55f5da5214e8 <col:53, col:151> 'void'
|   |     |-ImplicitCastExpr 0x55f5da5214d0 <col:53> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55f5da5214b0 <col:53> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55f5da04a0d0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55f5da521528 <col:68> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f5da521348 <col:68> 'const char [9]' lvalue "!_router"
|   |     |-ImplicitCastExpr 0x55f5da521540 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f5da521368 <col:80> 'const char [30]' lvalue "../dummy_inc/click/element.hh"
|   |     |-ImplicitCastExpr 0x55f5da521558 <col:113> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55f5da5213a0 <col:113> 'int' 124
|   |     `-ImplicitCastExpr 0x55f5da521570 <col:118, col:132> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55f5da521498 <col:118, col:132> 'const char [43]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55f5da521480 <col:132> 'const char [43]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55f5da521438 <col:132> 'const char [43]' lvalue "void Element::attach_router(Router *, int)"
|   |-BinaryOperator 0x55f5da521650 <line:125:9, col:19> 'Router *' lvalue '='
|   | |-MemberExpr 0x55f5da5215e8 <col:9> 'Router *' lvalue ->_router 0x55f5da51f0d0
|   | | `-CXXThisExpr 0x55f5da5215d8 <col:9> 'Element *' implicit this
|   | `-ImplicitCastExpr 0x55f5da521638 <col:19> 'Router *' <LValueToRValue>
|   |   `-DeclRefExpr 0x55f5da521618 <col:19> 'Router *' lvalue ParmVar 0x55f5da513c68 'r' 'Router *'
|   `-BinaryOperator 0x55f5da5216e8 <line:126:9, col:19> 'int' lvalue '='
|     |-MemberExpr 0x55f5da521680 <col:9> 'int' lvalue ->_eindex 0x55f5da51f138
|     | `-CXXThisExpr 0x55f5da521670 <col:9> 'Element *' implicit this
|     `-ImplicitCastExpr 0x55f5da5216d0 <col:19> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x55f5da5216b0 <col:19> 'int' lvalue ParmVar 0x55f5da513ce8 'eindex' 'int'
|-CXXMethodDecl 0x55f5da513f40 <line:130:5, col:38> col:16 used nports 'int (bool) const' inline
| `-ParmVarDecl 0x55f5da513e78 <col:23, col:28> col:28 isoutput 'bool'
|-CXXMethodDecl 0x55f5da514010 <line:131:5, col:26> col:16 used ninputs 'int () const' inline
|-CXXMethodDecl 0x55f5da5140d8 <line:132:5, col:27> col:16 used noutputs 'int () const' inline
|-CXXRecordDecl 0x55f5da514178 <line:134:5, col:11> col:11 referenced class Port
|-CXXMethodDecl 0x55f5da5143c8 <line:135:5, col:82> col:52 used port 'const Element::Port &(bool, int) const'
| |-ParmVarDecl 0x55f5da514240 <col:57, col:62> col:62 isoutput 'bool'
| |-ParmVarDecl 0x55f5da5142c0 <col:72, col:76> col:76 port 'int'
| |-NoInlineAttr 0x55f5da514478 <col:20>
| `-OptimizeNoneAttr 0x55f5da5144d0 <col:30>
|-CXXMethodDecl 0x55f5da5145d8 <line:136:5, col:68> col:52 input 'const Element::Port &(int) const'
| |-ParmVarDecl 0x55f5da514510 <col:58, col:62> col:62 port 'int'
| |-NoInlineAttr 0x55f5da514680 <col:20>
| `-OptimizeNoneAttr 0x55f5da5146d8 <col:30>
|-CXXMethodDecl 0x55f5da5147a8 <line:137:5, col:69> col:52 output 'const Element::Port &(int) const'
| |-ParmVarDecl 0x55f5da514718 <col:59, col:63> col:63 port 'int'
| |-NoInlineAttr 0x55f5da514850 <col:20>
| `-OptimizeNoneAttr 0x55f5da5148a8 <col:30>
|-CXXMethodDecl 0x55f5da514a38 <line:139:5, col:54> col:17 used port_active 'bool (bool, int) const' inline
| |-ParmVarDecl 0x55f5da5148e0 <col:29, col:34> col:34 isoutput 'bool'
| `-ParmVarDecl 0x55f5da514960 <col:44, col:48> col:48 port 'int'
|-CXXMethodDecl 0x55f5da514bc8 <line:140:5, col:41> col:17 input_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x55f5da514b00 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x55f5da514d18 <line:141:5, col:41> col:17 input_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x55f5da514c88 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x55f5da514e68 <line:142:5, col:42> col:17 output_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x55f5da514dd8 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x55f5da514fb8 <line:143:5, col:42> col:17 output_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x55f5da514f28 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x55f5da515278 <line:144:5, col:57> col:10 port_flow 'void (bool, int, Bitvector *) const'
| |-ParmVarDecl 0x55f5da515070 <col:20, col:25> col:25 isoutput 'bool'
| |-ParmVarDecl 0x55f5da5150f0 <col:35, col:39> col:39 port 'int'
| `-ParmVarDecl 0x55f5da515198 <col:45, col:54> col:55 'Bitvector *'
|-CXXMethodDecl 0x55f5da515350 <line:147:5, col:28> col:12 configuration 'String () const'
|-CXXMethodDecl 0x55f5da515410 <line:149:5, col:41> col:18 can_live_reconfigure 'bool () const' virtual
|-CXXMethodDecl 0x55f5da5156e0 <line:150:5, col:64> col:17 live_reconfigure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x55f5da515590 <col:34, col:48> col:49 'Vector<String> &'
| `-ParmVarDecl 0x55f5da515608 <col:51, col:63> col:64 'ErrorHandler *'
|-CXXMethodDecl 0x55f5da515808 <line:152:5, col:33> col:19 home_thread 'RouterThread *() const'
|-CXXMethodDecl 0x55f5da5159e0 <line:156:5, col:36> col:9 add_select 'int (int, int)'
| |-ParmVarDecl 0x55f5da5158c0 <col:20, col:24> col:24 fd 'int'
| `-ParmVarDecl 0x55f5da515940 <col:28, col:32> col:32 mask 'int'
|-CXXMethodDecl 0x55f5da515bc8 <line:157:5, col:39> col:9 remove_select 'int (int, int)'
| |-ParmVarDecl 0x55f5da515aa8 <col:23, col:27> col:27 fd 'int'
| `-ParmVarDecl 0x55f5da515b28 <col:31, col:35> col:35 mask 'int'
|-CXXMethodDecl 0x55f5da515f38 <line:161:5, col:127> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x55f5da515c88 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x55f5da515d00 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55f5da515d80 <col:82, col:106> col:94 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x55f5da520cf0 <col:106> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x55f5da520cd0 <col:106> 'int' 0
| `-ParmVarDecl 0x55f5da515df8 <col:109, col:126> col:118 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55f5da520d28 <col:126> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55f5da520d08 <col:126> 'int' 0
|-CXXMethodDecl 0x55f5da5162d8 <line:162:5, col:115> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55f5da516008 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x55f5da5160a0 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55f5da516120 <col:82, col:86> col:86 user_data 'int'
| `-ParmVarDecl 0x55f5da516198 <col:97, col:114> col:106 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55f5da520d60 <col:114> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55f5da520d40 <col:114> 'int' 0
|-CXXMethodDecl 0x55f5da516668 <line:163:5, col:117> col:10 add_read_handler 'void (const char *, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55f5da5163b0 <col:27, col:39> col:39 name 'const char *'
| |-ParmVarDecl 0x55f5da516428 <col:45, col:65> col:65 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55f5da5164a8 <col:80, col:96> col:84 user_data 'int' cinit
| | `-IntegerLiteral 0x55f5da520d78 <col:96> 'int' 0
| `-ParmVarDecl 0x55f5da516520 <col:99, col:116> col:108 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55f5da520db8 <col:116> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55f5da520d98 <col:116> 'int' 0
|-CXXMethodDecl 0x55f5da5169e8 <line:164:5, col:130> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x55f5da516738 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x55f5da5167b0 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55f5da516830 <col:85, col:109> col:97 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x55f5da520df0 <col:109> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x55f5da520dd0 <col:109> 'int' 0
| `-ParmVarDecl 0x55f5da5168a8 <col:112, col:129> col:121 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55f5da520e28 <col:129> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55f5da520e08 <col:129> 'int' 0
|-CXXMethodDecl 0x55f5da516d68 <line:165:5, col:118> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55f5da516ab8 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x55f5da516b30 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55f5da516bb0 <col:85, col:89> col:89 user_data 'int'
| `-ParmVarDecl 0x55f5da516c28 <col:100, col:117> col:109 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55f5da520e60 <col:117> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55f5da520e40 <col:117> 'int' 0
|-CXXMethodDecl 0x55f5da5170f8 <line:166:5, col:120> col:10 add_write_handler 'void (const char *, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55f5da516e40 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55f5da516eb8 <col:46, col:67> col:67 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55f5da516f38 <col:83, col:99> col:87 user_data 'int' cinit
| | `-IntegerLiteral 0x55f5da520e78 <col:99> 'int' 0
| `-ParmVarDecl 0x55f5da516fb0 <col:102, col:119> col:111 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55f5da520eb8 <col:119> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55f5da520e98 <col:119> 'int' 0
|-CXXMethodDecl 0x55f5da517518 <line:167:5, col:142> col:10 set_handler 'void (const String &, int, HandlerCallback, const void *, const void *)'
| |-ParmVarDecl 0x55f5da5171c8 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x55f5da517248 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x55f5da5172c0 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55f5da517340 <col:79, col:108> col:91 read_user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x55f5da520ef0 <col:108> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x55f5da520ed0 <col:108> 'int' 0
| `-ParmVarDecl 0x55f5da5173c0 <col:111, col:141> col:123 write_user_data 'const void *' cinit
|   `-ImplicitCastExpr 0x55f5da520f28 <col:141> 'const void *' <NullToPointer>
|     `-IntegerLiteral 0x55f5da520f08 <col:141> 'int' 0
|-CXXMethodDecl 0x55f5da517938 <line:168:5, col:122> col:10 set_handler 'void (const String &, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x55f5da5175f0 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x55f5da517670 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x55f5da5176e8 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55f5da517768 <col:79, col:83> col:83 read_user_data 'int'
| `-ParmVarDecl 0x55f5da5177e8 <col:99, col:121> col:103 write_user_data 'int' cinit
|   `-IntegerLiteral 0x55f5da520f40 <col:121> 'int' 0
|-CXXMethodDecl 0x55f5da517d68 <line:169:5, col:124> col:10 set_handler 'void (const char *, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x55f5da517a18 <col:22, col:34> col:34 name 'const char *'
| |-ParmVarDecl 0x55f5da517a98 <col:40, col:44> col:44 flags 'int'
| |-ParmVarDecl 0x55f5da517b10 <col:51, col:67> col:67 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55f5da517b90 <col:77, col:98> col:81 read_user_data 'int' cinit
| | `-IntegerLiteral 0x55f5da520f60 <col:98> 'int' 0
| `-ParmVarDecl 0x55f5da517c10 <col:101, col:123> col:105 write_user_data 'int' cinit
|   `-IntegerLiteral 0x55f5da520f80 <col:123> 'int' 0
|-CXXMethodDecl 0x55f5da518030 <line:170:5, col:81> col:9 set_handler_flags 'int (const String &, int, int)'
| |-ParmVarDecl 0x55f5da517e40 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x55f5da517ec0 <col:47, col:51> col:51 set_flags 'int'
| `-ParmVarDecl 0x55f5da517f40 <col:62, col:80> col:66 clear_flags 'int' cinit
|   `-IntegerLiteral 0x55f5da520fa0 <col:80> 'int' 0
|-EnumDecl 0x55f5da5180e8 <line:171:5, line:175:36> line:171:5
| |-EnumConstantDecl 0x55f5da5181f0 <col:12, col:42> col:12 TASKHANDLER_WRITE_SCHEDULED 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55f5da518480 <col:42> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f5da5181d0 <col:42> 'int' Int: 1
| |     `-IntegerLiteral 0x55f5da5181b0 <col:42> 'int' 1
| |-EnumConstantDecl 0x55f5da518280 <line:172:12, col:40> col:12 TASKHANDLER_WRITE_TICKETS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55f5da518498 <col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f5da518260 <col:40> 'int' Int: 2
| |     `-IntegerLiteral 0x55f5da518240 <col:40> 'int' 2
| |-EnumConstantDecl 0x55f5da518310 <line:173:12, col:44> col:12 TASKHANDLER_WRITE_HOME_THREAD 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55f5da5184b0 <col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f5da5182f0 <col:44> 'int' Int: 4
| |     `-IntegerLiteral 0x55f5da5182d0 <col:44> 'int' 4
| |-EnumConstantDecl 0x55f5da5183a0 <line:174:12, col:36> col:12 TASKHANDLER_WRITE_ALL 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55f5da5184c8 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f5da518380 <col:36> 'int' Int: 7
| |     `-IntegerLiteral 0x55f5da518360 <col:36> 'int' 7
| `-EnumConstantDecl 0x55f5da518430 <line:175:12, col:34> col:12 referenced TASKHANDLER_DEFAULT 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|   `-ImplicitCastExpr 0x55f5da5184e0 <col:34> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55f5da518410 <col:34> 'int' Int: 6
|       `-IntegerLiteral 0x55f5da5183f0 <col:34> 'int' 6
|-CXXMethodDecl 0x55f5da518798 <line:176:5, col:106> col:10 used add_task_handlers 'void (Task *, NotifierSignal *, int, const String &)'
| |-ParmVarDecl 0x55f5da518508 <col:28, col:34> col:34 task 'Task *'
| |-ParmVarDecl 0x55f5da5185a8 <col:40, col:56> col:56 signal 'NotifierSignal *'
| |-ParmVarDecl 0x55f5da518628 <col:64, col:68> col:68 flags 'int'
| `-ParmVarDecl 0x55f5da5186a0 <col:75, col:105> col:89 prefix 'const String &' cinit
|   `-ExprWithCleanups 0x55f5da521058 <col:98, col:105> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x55f5da521040 <col:98, col:105> 'const String' lvalue
|       `-ImplicitCastExpr 0x55f5da521028 <col:98, col:105> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x55f5da521008 <col:98, col:105> 'String' (CXXTemporary 0x55f5da521008)
|           `-CXXTemporaryObjectExpr 0x55f5da520fd0 <col:98, col:105> 'String' 'void ()'
|-CXXMethodDecl 0x55f5da518a38 <line:177:5, line:179:5> line:177:17 add_task_handlers 'void (Task *, NotifierSignal *, const String &)' inline
| |-ParmVarDecl 0x55f5da518868 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x55f5da5188e0 <col:47, col:63> col:63 used signal 'NotifierSignal *'
| |-ParmVarDecl 0x55f5da518958 <col:71, col:101> col:85 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x55f5da521108 <col:94, col:101> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x55f5da5210f0 <col:94, col:101> 'const String' lvalue
| |     `-ImplicitCastExpr 0x55f5da5210d8 <col:94, col:101> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x55f5da5210b8 <col:94, col:101> 'String' (CXXTemporary 0x55f5da5210b8)
| |         `-CXXTemporaryObjectExpr 0x55f5da521080 <col:94, col:101> 'String' 'void ()'
| `-CompoundStmt 0x55f5da5218f0 <col:104, line:179:5>
|   `-CXXMemberCallExpr 0x55f5da521868 <line:178:9, col:68> 'void'
|     |-MemberExpr 0x55f5da521838 <col:9> '<bound member function type>' ->add_task_handlers 0x55f5da518798
|     | `-CXXThisExpr 0x55f5da521828 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x55f5da5218a8 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x55f5da5217a8 <col:27> 'Task *' lvalue ParmVar 0x55f5da518868 'task' 'Task *'
|     |-ImplicitCastExpr 0x55f5da5218c0 <col:33> 'NotifierSignal *' <LValueToRValue>
|     | `-DeclRefExpr 0x55f5da5217c8 <col:33> 'NotifierSignal *' lvalue ParmVar 0x55f5da5188e0 'signal' 'NotifierSignal *'
|     |-ImplicitCastExpr 0x55f5da5218d8 <col:41> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x55f5da5217e8 <col:41> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x55f5da518430 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x55f5da521808 <col:62> 'const String' lvalue ParmVar 0x55f5da518958 'prefix' 'const String &'
|-CXXMethodDecl 0x55f5da518c48 <line:180:5, line:182:5> line:180:17 add_task_handlers 'void (Task *, const String &)' inline
| |-ParmVarDecl 0x55f5da518b00 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x55f5da518b78 <col:47, col:77> col:61 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x55f5da5211b8 <col:70, col:77> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x55f5da5211a0 <col:70, col:77> 'const String' lvalue
| |     `-ImplicitCastExpr 0x55f5da521188 <col:70, col:77> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x55f5da521168 <col:70, col:77> 'String' (CXXTemporary 0x55f5da521168)
| |         `-CXXTemporaryObjectExpr 0x55f5da521130 <col:70, col:77> 'String' 'void ()'
| `-CompoundStmt 0x55f5da521ac8 <col:80, line:182:5>
|   `-CXXMemberCallExpr 0x55f5da521a40 <line:181:9, col:63> 'void'
|     |-MemberExpr 0x55f5da521a10 <col:9> '<bound member function type>' ->add_task_handlers 0x55f5da518798
|     | `-CXXThisExpr 0x55f5da521a00 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x55f5da521a80 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x55f5da521980 <col:27> 'Task *' lvalue ParmVar 0x55f5da518b00 'task' 'Task *'
|     |-ImplicitCastExpr 0x55f5da521a98 <col:33> 'NotifierSignal *' <NullToPointer>
|     | `-IntegerLiteral 0x55f5da5219a0 <col:33> 'int' 0
|     |-ImplicitCastExpr 0x55f5da521ab0 <col:36> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x55f5da5219c0 <col:36> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x55f5da518430 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x55f5da5219e0 <col:57> 'const String' lvalue ParmVar 0x55f5da518b78 'prefix' 'const String &'
|-CXXMethodDecl 0x55f5da518f28 <line:184:5, col:70> col:10 add_data_handlers 'void (const char *, int, uint8_t *)'
| |-ParmVarDecl 0x55f5da518d10 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55f5da518d90 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55f5da518e08 <col:57, col:66> col:66 data 'uint8_t *'
|-CXXMethodDecl 0x55f5da5191d8 <line:185:5, col:67> col:10 add_data_handlers 'void (const char *, int, bool *)'
| |-ParmVarDecl 0x55f5da518ff8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55f5da519078 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55f5da5190f8 <col:57, col:63> col:63 data 'bool *'
|-CXXMethodDecl 0x55f5da5194c8 <line:186:5, col:71> col:10 add_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x55f5da5192a8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55f5da519328 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55f5da5193a0 <col:57, col:67> col:67 data 'uint16_t *'
|-CXXMethodDecl 0x55f5da519778 <line:187:5, col:66> col:10 add_data_handlers 'void (const char *, int, int *)'
| |-ParmVarDecl 0x55f5da519598 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55f5da519618 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55f5da519698 <col:57, col:62> col:62 data 'int *'
|-CXXMethodDecl 0x55f5da519a28 <line:188:5, col:71> col:10 add_data_handlers 'void (const char *, int, unsigned int *)'
| |-ParmVarDecl 0x55f5da519848 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55f5da5198c8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55f5da519948 <col:57, col:67> col:67 data 'unsigned int *'
|-CXXMethodDecl 0x55f5da519cd8 <line:189:5, col:78> col:10 add_data_handlers 'void (const char *, int, atomic_uint32_t *)'
| |-ParmVarDecl 0x55f5da519af8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55f5da519b78 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55f5da519bf0 <col:57, col:74> col:74 data 'atomic_uint32_t *'
|-CXXMethodDecl 0x55f5da519f88 <line:190:5, col:67> col:10 add_data_handlers 'void (const char *, int, long *)'
| |-ParmVarDecl 0x55f5da519da8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55f5da519e28 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55f5da519ea8 <col:57, col:63> col:63 data 'long *'
|-CXXMethodDecl 0x55f5da51a298 <line:191:5, col:76> col:10 add_data_handlers 'void (const char *, int, unsigned long *)'
| |-ParmVarDecl 0x55f5da51a0b0 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55f5da51a130 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55f5da51a1b0 <col:57, col:72> col:72 data 'unsigned long *'
|-CXXMethodDecl 0x55f5da51a578 <line:193:5, col:72> col:10 add_data_handlers 'void (const char *, int, long long *)'
| |-ParmVarDecl 0x55f5da51a368 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55f5da51a3e8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55f5da51a490 <col:57, col:68> col:68 data 'long long *'
|-CXXMethodDecl 0x55f5da51a858 <line:194:5, col:81> col:10 add_data_handlers 'void (const char *, int, unsigned long long *)'
| |-ParmVarDecl 0x55f5da51a648 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55f5da51a6c8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55f5da51a770 <col:57, col:77> col:77 data 'unsigned long long *'
|-CXXMethodDecl 0x55f5da51aac0 <line:196:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x55f5da51a928 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x55f5da51a9a8 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x55f5da51aa20 <col:67, col:77> col:77 data 'uint16_t *'
|-CXXMethodDecl 0x55f5da51ad68 <line:197:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint32_t *)'
| |-ParmVarDecl 0x55f5da51ab90 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x55f5da51ac10 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x55f5da51ac88 <col:67, col:77> col:77 data 'uint32_t *'
|-CXXMethodDecl 0x55f5da51b018 <line:199:5, col:69> col:10 add_data_handlers 'void (const char *, int, double *)'
| |-ParmVarDecl 0x55f5da51ae38 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55f5da51aeb8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55f5da51af38 <col:57, col:65> col:65 data 'double *'
|-CXXMethodDecl 0x55f5da51b2c8 <line:201:5, col:69> col:10 add_data_handlers 'void (const char *, int, String *)'
| |-ParmVarDecl 0x55f5da51b0e8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55f5da51b168 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55f5da51b1e0 <col:57, col:65> col:65 data 'String *'
|-CXXMethodDecl 0x55f5da51b578 <line:202:5, col:72> col:10 add_data_handlers 'void (const char *, int, IPAddress *)'
| |-ParmVarDecl 0x55f5da51b398 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55f5da51b418 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55f5da51b490 <col:57, col:68> col:68 data 'IPAddress *'
|-CXXMethodDecl 0x55f5da51b848 <line:203:5, col:75> col:10 add_data_handlers 'void (const char *, int, EtherAddress *)'
| |-ParmVarDecl 0x55f5da51b648 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55f5da51b6c8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55f5da51b768 <col:57, col:71> col:71 data 'EtherAddress *'
|-CXXMethodDecl 0x55f5da51bb78 <line:204:5, col:98> col:10 add_data_handlers 'void (const char *, int, Timestamp *, bool)'
| |-ParmVarDecl 0x55f5da51b918 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55f5da51b998 <col:46, col:50> col:50 flags 'int'
| |-ParmVarDecl 0x55f5da51ba10 <col:57, col:68> col:68 data 'Timestamp *'
| `-ParmVarDecl 0x55f5da51ba88 <col:74, col:93> col:79 is_interval 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55f5da5211d0 <col:93> 'bool' false
|-CXXMethodDecl 0x55f5da51bd60 <line:206:5, col:58> col:19 read_positional_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55f5da51bc48 <col:43, col:50> col:51 'Element *'
| `-ParmVarDecl 0x55f5da51bcc8 <col:53, col:57> col:58 'void *'
|-CXXMethodDecl 0x55f5da51bf38 <line:207:5, col:55> col:19 read_keyword_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55f5da51be20 <col:40, col:47> col:48 'Element *'
| `-ParmVarDecl 0x55f5da51bea0 <col:50, col:54> col:55 'void *'
|-CXXMethodDecl 0x55f5da51c218 <line:208:5, col:92> col:16 reconfigure_positional_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x55f5da51bff8 <col:47, col:59> col:60 'const String &'
| |-ParmVarDecl 0x55f5da51c070 <col:62, col:69> col:70 'Element *'
| |-ParmVarDecl 0x55f5da51c0f0 <col:72, col:76> col:77 'void *'
| `-ParmVarDecl 0x55f5da51c168 <col:79, col:91> col:92 'ErrorHandler *'
|-CXXMethodDecl 0x55f5da51c508 <line:209:5, col:89> col:16 reconfigure_keyword_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x55f5da51c2e8 <col:44, col:56> col:57 'const String &'
| |-ParmVarDecl 0x55f5da51c360 <col:59, col:66> col:67 'Element *'
| |-ParmVarDecl 0x55f5da51c3e0 <col:69, col:73> col:74 'void *'
| `-ParmVarDecl 0x55f5da51c458 <col:76, col:88> col:89 'ErrorHandler *'
|-CXXMethodDecl 0x55f5da51c740 <line:211:5, col:50> col:17 llrpc 'int (unsigned int, void *)' virtual
| |-ParmVarDecl 0x55f5da51c5e0 <col:23, col:32> col:32 command 'unsigned int'
| `-ParmVarDecl 0x55f5da51c660 <col:41, col:47> col:47 arg 'void *'
|-CXXMethodDecl 0x55f5da51c928 <line:212:5, col:48> col:9 local_llrpc 'int (unsigned int, void *)'
| |-ParmVarDecl 0x55f5da51c808 <col:21, col:30> col:30 command 'unsigned int'
| `-ParmVarDecl 0x55f5da51c888 <col:39, col:45> col:45 arg 'void *'
|-CXXRecordDecl 0x55f5da51c9d8 prev 0x55f5da514178 <line:214:5, line:252:5> line:214:11 referenced class Port definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55f5da51cad0 <col:5, col:11> col:11 implicit referenced class Port
| |-AccessSpecDecl 0x55f5da51cb60 <col:18, col:24> col:18 public
| |-CXXMethodDecl 0x55f5da51cbd8 <line:216:9, col:30> col:21 used active 'bool () const' inline
| |-CXXMethodDecl 0x55f5da51cc98 <line:217:9, col:35> col:25 element 'Element *() const' inline
| |-CXXMethodDecl 0x55f5da51cd60 <line:218:9, col:27> col:20 port 'int () const' inline
| |-CXXMethodDecl 0x55f5da51ced8 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| | |-ParmVarDecl 0x55f5da51ce10 <col:54, col:62> col:62 p 'Packet *'
| | |-NoInlineAttr 0x55f5da51cf80 <col:24>
| | `-OptimizeNoneAttr 0x55f5da51cfd8 <col:34>
| |-CXXMethodDecl 0x55f5da51d020 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
| |-CXXMethodDecl 0x55f5da51d2d8 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| | |-ParmVarDecl 0x55f5da51d0d0 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x55f5da51d148 <col:43, col:52> col:52 e 'Element *'
| | `-ParmVarDecl 0x55f5da51d1c8 <col:55, col:59> col:59 port 'int'
| |-AccessSpecDecl 0x55f5da51d390 <line:229:7, col:14> col:7 private
| |-FieldDecl 0x55f5da51d3c8 <line:231:9, col:18> col:18 referenced _e 'Element *'
| |-FieldDecl 0x55f5da51d430 <line:232:9, col:13> col:13 referenced _port 'int'
| |-CXXConstructorDecl 0x55f5da51d4b8 <line:247:9, col:21> col:16 Port 'void ()' inline
| |-CXXMethodDecl 0x55f5da51d7d8 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| | |-ParmVarDecl 0x55f5da51d570 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x55f5da51d5e8 <col:43, col:52> col:52 owner 'Element *'
| | |-ParmVarDecl 0x55f5da51d660 <col:59, col:68> col:68 e 'Element *'
| | `-ParmVarDecl 0x55f5da51d6e0 <col:71, col:75> col:75 port 'int'
| |-FriendDecl 0x55f5da51d8f0 <line:250:9, col:22> col:16 'class Element':'Element'
| |-CXXConstructorDecl 0x55f5da525268 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x55f5da525268
| | `-ParmVarDecl 0x55f5da525378 <col:11> col:11 'const Element::Port &'
| |-CXXConstructorDecl 0x55f5da525418 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x55f5da525418
| | `-ParmVarDecl 0x55f5da525528 <col:11> col:11 'Element::Port &&'
| `-CXXDestructorDecl 0x55f5da715790 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55f5da51d968 <line:256:5, col:49> col:12 id 'String () const'
| `-DeprecatedAttr 0x55f5da51da08 <col:38> "" ""
|-CXXMethodDecl 0x55f5da51da98 <line:257:5, col:55> col:12 landmark 'String () const'
| `-DeprecatedAttr 0x55f5da51db38 <col:44> "" ""
|-AccessSpecDecl 0x55f5da51dba8 <line:260:3, col:10> col:3 private
|-EnumDecl 0x55f5da51dbd0 <line:262:5, col:29> col:5
| `-EnumConstantDecl 0x55f5da51dcd0 <col:12, col:27> col:12 referenced INLINE_PORTS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:262:5)'
|   `-ImplicitCastExpr 0x55f5da51dd20 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55f5da51dcb0 <col:27> 'int' Int: 4
|       `-IntegerLiteral 0x55f5da51dc90 <col:27> 'int' 4
|-FieldDecl 0x55f5da51ddd8 <line:264:5, col:19> col:11 referenced _ports 'Element::Port *[2]'
|-FieldDecl 0x55f5da51df88 <line:265:5, col:36> col:10 _inline_ports 'Element::Port [4]'
|-FieldDecl 0x55f5da51e040 <line:267:5, col:18> col:9 referenced _nports 'int [2]'
|-FieldDecl 0x55f5da51f0d0 <line:269:5, col:13> col:13 referenced _router 'Router *'
|-FieldDecl 0x55f5da51f138 <line:270:5, col:9> col:9 referenced _eindex 'int'
|-CXXConstructorDecl 0x55f5da51f288 <line:292:5, col:28> col:5 Element 'void (const Element &)'
| `-ParmVarDecl 0x55f5da51f1c8 <col:13, col:27> col:28 'const Element &'
|-CXXMethodDecl 0x55f5da51f438 <line:293:5, col:39> col:14 operator= 'Element &(const Element &)'
| `-ParmVarDecl 0x55f5da51f348 <col:24, col:38> col:39 'const Element &'
|-CXXMethodDecl 0x55f5da51f618 <line:296:5, col:28> col:9 set_nports 'int (int, int)'
| |-ParmVarDecl 0x55f5da51f4f8 <col:20> col:23 'int'
| `-ParmVarDecl 0x55f5da51f578 <col:25> col:28 'int'
|-CXXMethodDecl 0x55f5da51f8c0 <line:297:5, col:47> col:9 notify_nports 'int (int, int, ErrorHandler *)'
| |-ParmVarDecl 0x55f5da51f6e0 <col:23> col:26 'int'
| |-ParmVarDecl 0x55f5da51f760 <col:28> col:31 'int'
| `-ParmVarDecl 0x55f5da51f7d8 <col:33, col:46> col:47 'ErrorHandler *'
|-EnumDecl 0x55f5da51f978 <line:298:5, col:47> col:10 Processing
| |-EnumConstantDecl 0x55f5da51fa40 <col:23> col:23 VAGNOSTIC 'Element::Processing'
| |-EnumConstantDecl 0x55f5da51fa90 <col:34> col:34 VPUSH 'Element::Processing'
| `-EnumConstantDecl 0x55f5da51fae0 <col:41> col:41 VPULL 'Element::Processing'
|-CXXMethodDecl 0x55f5da51fcc0 <line:299:5, col:71> col:16 next_processing_code 'int (const char *&, ErrorHandler *)' static
| |-ParmVarDecl 0x55f5da51fb70 <col:37, col:50> col:50 p 'const char *&'
| `-ParmVarDecl 0x55f5da51fbe8 <col:53, col:67> col:67 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55f5da51ff68 <line:300:5, col:80> col:10 processing_vector 'void (int *, int *, ErrorHandler *) const'
| |-ParmVarDecl 0x55f5da51fd88 <col:28, col:33> col:33 input_codes 'int *'
| |-ParmVarDecl 0x55f5da51fe08 <col:46, col:51> col:51 output_codes 'int *'
| `-ParmVarDecl 0x55f5da51fe80 <col:65, col:77> col:78 'ErrorHandler *'
|-CXXMethodDecl 0x55f5da520188 <line:302:5, col:74> col:10 initialize_ports 'void (const int *, const int *)'
| |-ParmVarDecl 0x55f5da520038 <col:27, col:38> col:38 input_codes 'const int *'
| `-ParmVarDecl 0x55f5da5200b8 <col:51, col:62> col:62 output_codes 'const int *'
|-CXXMethodDecl 0x55f5da5204c0 <line:303:5, col:60> col:9 connect_port 'int (bool, int, Element *, int)'
| |-ParmVarDecl 0x55f5da520248 <col:22, col:27> col:27 isoutput 'bool'
| |-ParmVarDecl 0x55f5da5202c8 <col:37, col:41> col:41 port 'int'
| |-ParmVarDecl 0x55f5da520340 <col:47, col:54> col:55 'Element *'
| `-ParmVarDecl 0x55f5da5203c0 <col:57> col:60 'int'
|-CXXMethodDecl 0x55f5da5206a8 <line:305:5, col:68> col:19 read_handlers_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55f5da520590 <col:41, col:50> col:50 e 'Element *'
| `-ParmVarDecl 0x55f5da520610 <col:53, col:59> col:59 user_data 'void *'
|-CXXMethodDecl 0x55f5da5207f8 <line:306:5, col:51> col:10 add_default_handlers 'void (bool)'
| `-ParmVarDecl 0x55f5da520768 <col:31, col:36> col:36 writable_config 'bool'
|-CXXMethodDecl 0x55f5da520b78 <line:307:5, col:100> col:17 add_data_handlers 'void (const char *, int, HandlerCallback, void *)' inline
| |-ParmVarDecl 0x55f5da5208b8 <col:35, col:47> col:47 name 'const char *'
| |-ParmVarDecl 0x55f5da520938 <col:53, col:57> col:57 flags 'int'
| |-ParmVarDecl 0x55f5da5209b0 <col:64, col:80> col:80 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| `-ParmVarDecl 0x55f5da520a30 <col:90, col:96> col:96 data 'void *'
`-FriendDecl 0x55f5da520c90 <line:309:5, col:18> col:12 'class Router':'Router'

Layout: <CGRecordLayout
  LLVMType:%class.Element = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Element.base = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | union NotifierSignal::vmvalue
         0 |   class atomic_uint32_t * v1
         0 |   struct NotifierSignal::vmpair * vm
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class NotifierSignal
         0 |   union NotifierSignal::vmvalue _v
         0 |     class atomic_uint32_t * v1
         0 |     struct NotifierSignal::vmpair * vm
         8 |   uint32_t _mask
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping AST Record Layout
         0 | class Notifier
         0 |   (Notifier vtable pointer)
         8 |   class NotifierSignal _signal
         8 |     union NotifierSignal::vmvalue _v
         8 |       class atomic_uint32_t * v1
         8 |       struct NotifierSignal::vmpair * vm
        16 |     uint32_t _mask
        24 |   enum Notifier::SearchOp _search_op
           | [sizeof=32, dsize=28, align=8,
           |  nvsize=28, nvalign=8]

*** Dumping AST Record Layout
         0 | struct NotifierSignal::vmpair
         0 |   class atomic_uint32_t * value
         8 |   uint32_t mask
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f5da5c90e8 <../dummy_inc/click/notifier.hh:50:5, line:53:5> line:50:12 referenced struct vmpair definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55f5da5c9208 <col:5, col:12> col:12 implicit struct vmpair
|-FieldDecl 0x55f5da5c92a8 <line:51:2, col:19> col:19 referenced value 'atomic_uint32_t *'
|-FieldDecl 0x55f5da5c9308 <line:52:2, col:11> col:11 referenced mask 'uint32_t':'unsigned int'
`-CXXDestructorDecl 0x55f5da5d2758 <line:50:12> col:12 implicit ~vmpair 'void ()' inline default trivial noexcept-unevaluated 0x55f5da5d2758

Layout: <CGRecordLayout
  LLVMType:%"struct.NotifierSignal::vmpair" = type { %class.atomic_uint32_t*, i32 }
  NonVirtualBaseLLVMType:%"struct.NotifierSignal::vmpair" = type { %class.atomic_uint32_t*, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f5da5c9370 <../dummy_inc/click/notifier.hh:54:5, line:57:5> line:54:11 referenced union vmvalue definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55f5da5c9488 <col:5, col:11> col:11 implicit union vmvalue
|-FieldDecl 0x55f5da5c9528 <line:55:2, col:19> col:19 referenced v1 'atomic_uint32_t *'
|-FieldDecl 0x55f5da5c95b8 <line:56:2, col:10> col:10 referenced vm 'NotifierSignal::vmpair *'
|-CXXConstructorDecl 0x55f5da5d12f0 <line:54:11> col:11 implicit used vmvalue 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55f5da5d1728 <col:11>
|-CXXConstructorDecl 0x55f5da5d13f8 <col:11> col:11 implicit constexpr vmvalue 'void (const NotifierSignal::vmvalue &)' inline default trivial noexcept-unevaluated 0x55f5da5d13f8
| `-ParmVarDecl 0x55f5da5d1508 <col:11> col:11 'const NotifierSignal::vmvalue &'
|-CXXConstructorDecl 0x55f5da5d15a8 <col:11> col:11 implicit constexpr vmvalue 'void (NotifierSignal::vmvalue &&)' inline default trivial noexcept-unevaluated 0x55f5da5d15a8
| `-ParmVarDecl 0x55f5da5d16b8 <col:11> col:11 'NotifierSignal::vmvalue &&'
`-CXXDestructorDecl 0x55f5da5d2420 <col:11> col:11 implicit ~vmvalue 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"union.NotifierSignal::vmvalue" = type { %class.atomic_uint32_t* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f5da5c7020 prev 0x55f5da50f6c0 <../dummy_inc/click/notifier.hh:12:1, line:71:1> line:12:7 referenced class NotifierSignal definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55f5da5c7118 <col:1, col:7> col:7 implicit referenced class NotifierSignal
|-AccessSpecDecl 0x55f5da5c71a8 <line:13:3, col:9> col:3 public
|-TypedefDecl 0x55f5da5c72d8 <line:14:5, col:61> col:36 referenced unspecified_bool_type 'bool (NotifierSignal::*)() const'
| `-MemberPointerType 0x55f5da5c7250 'bool (NotifierSignal::*)() const'
|   |-RecordType 0x55f5da50f750 'NotifierSignal'
|   | `-CXXRecord 0x55f5da5c7020 'NotifierSignal'
|   `-ParenType 0x55f5da5c71f0 'bool () const' sugar
|     `-FunctionProtoType 0x55f5da056050 'bool () const' const cdecl
|       `-BuiltinType 0x55f5d9fa9330 'bool'
|-CXXConstructorDecl 0x55f5da5c7368 <line:16:5, col:27> col:12 used NotifierSignal 'void ()' inline
|-CXXConstructorDecl 0x55f5da5c75a8 <line:17:5, col:64> col:12 used NotifierSignal 'void (atomic_uint32_t *, uint32_t)' inline
| |-ParmVarDecl 0x55f5da5c7420 <col:27, col:44> col:44 value 'atomic_uint32_t *'
| `-ParmVarDecl 0x55f5da5c7498 <col:51, col:60> col:60 mask 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55f5da5c7758 <line:18:5, col:50> col:12 used NotifierSignal 'void (const NotifierSignal &)' inline
| `-ParmVarDecl 0x55f5da5c7698 <col:27, col:49> col:49 x 'const NotifierSignal &'
|-CXXDestructorDecl 0x55f5da5c7850 <line:19:5, col:28> col:12 used ~NotifierSignal 'void () noexcept' inline
|-CXXMethodDecl 0x55f5da5c7978 <line:21:5, col:46> col:34 idle_signal 'NotifierSignal ()' static inline
|-CXXMethodDecl 0x55f5da5c7a38 <line:22:5, col:46> col:34 busy_signal 'NotifierSignal ()' static inline
|-CXXMethodDecl 0x55f5da5c7af8 <line:23:5, col:53> col:34 overderived_signal 'NotifierSignal ()' static inline
|-CXXMethodDecl 0x55f5da5c7bb8 <line:24:5, col:55> col:34 used uninitialized_signal 'NotifierSignal ()' static inline
|-CXXMethodDecl 0x55f5da5c7ca8 <line:26:5, col:26> col:17 used active 'bool () const' inline
|-CXXConversionDecl 0x55f5da5c7e18 <line:27:5, col:45> col:12 operator bool (NotifierSignal::*)() const 'NotifierSignal::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x55f5da5c7f98 <line:29:5, col:39> col:17 used set_active 'bool (bool)' inline
| `-ParmVarDecl 0x55f5da5c7ed8 <col:28, col:33> col:33 active 'bool'
|-CXXMethodDecl 0x55f5da5c8060 <line:31:5, col:24> col:17 idle 'bool () const' inline
|-CXXMethodDecl 0x55f5da5c8120 <line:32:5, col:24> col:17 busy 'bool () const' inline
|-CXXMethodDecl 0x55f5da5c81e0 <line:33:5, col:31> col:17 overderived 'bool () const' inline
|-CXXMethodDecl 0x55f5da5c82a0 <line:34:5, col:31> col:17 used initialized 'bool () const' inline
|-FriendDecl 0x55f5da5c8558 <line:36:5, col:76> col:17
| `-FunctionDecl 0x55f5da5c8498 parent 0x55f5d9fa92b8 <col:5, col:76> col:17 used operator== 'bool (const NotifierSignal &, const NotifierSignal &)'
|   |-ParmVarDecl 0x55f5da5c8350 <col:28, col:50> col:50 a 'const NotifierSignal &'
|   `-ParmVarDecl 0x55f5da5c83c8 <col:53, col:75> col:75 b 'const NotifierSignal &'
|-FriendDecl 0x55f5da5c8778 <line:37:5, col:76> col:17
| `-FunctionDecl 0x55f5da5c86b8 parent 0x55f5d9fa92b8 <col:5, col:76> col:17 operator!= 'bool (const NotifierSignal &, const NotifierSignal &)'
|   |-ParmVarDecl 0x55f5da5c85a8 <col:28, col:50> col:50 a 'const NotifierSignal &'
|   `-ParmVarDecl 0x55f5da5c8620 <col:53, col:75> col:75 b 'const NotifierSignal &'
|-CXXMethodDecl 0x55f5da5c88b8 <line:39:5, col:54> col:21 operator= 'NotifierSignal &(const NotifierSignal &)'
| `-ParmVarDecl 0x55f5da5c87c8 <col:31, col:53> col:53 x 'const NotifierSignal &'
|-CXXMethodDecl 0x55f5da5c8a00 <line:40:5, col:55> col:21 used operator+= 'NotifierSignal &(const NotifierSignal &)'
| `-ParmVarDecl 0x55f5da5c8970 <col:32, col:54> col:54 x 'const NotifierSignal &'
|-FriendDecl 0x55f5da5c8cc8 <line:41:5, col:78> col:27
| `-FunctionDecl 0x55f5da5c8c08 parent 0x55f5d9fa92b8 <col:5, col:78> col:27 operator+ 'NotifierSignal (NotifierSignal, const NotifierSignal &)'
|   |-ParmVarDecl 0x55f5da5c8ab8 <col:37, col:52> col:52 a 'NotifierSignal' destroyed
|   `-ParmVarDecl 0x55f5da5c8b30 <col:55, col:77> col:77 b 'const NotifierSignal &'
|-CXXMethodDecl 0x55f5da5c8dd8 <line:43:5, col:39> col:17 used swap 'void (NotifierSignal &)' inline
| `-ParmVarDecl 0x55f5da5c8d18 <col:22, col:38> col:38 x 'NotifierSignal &'
|-CXXMethodDecl 0x55f5da5c8f58 <line:45:5, col:36> col:12 unparse 'String (Router *) const'
| `-ParmVarDecl 0x55f5da5c8e90 <col:20, col:28> col:28 router 'Router *'
|-CXXMethodDecl 0x55f5da5c9020 <line:47:5, col:35> col:17 static_initialize 'void ()' static
|-AccessSpecDecl 0x55f5da5c90c0 <line:49:3, col:10> col:3 private
|-CXXRecordDecl 0x55f5da5c90e8 <line:50:5, line:53:5> line:50:12 referenced struct vmpair definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55f5da5c9208 <col:5, col:12> col:12 implicit struct vmpair
| |-FieldDecl 0x55f5da5c92a8 <line:51:2, col:19> col:19 referenced value 'atomic_uint32_t *'
| |-FieldDecl 0x55f5da5c9308 <line:52:2, col:11> col:11 referenced mask 'uint32_t':'unsigned int'
| `-CXXDestructorDecl 0x55f5da5d2758 <line:50:12> col:12 implicit ~vmpair 'void ()' inline default trivial noexcept-unevaluated 0x55f5da5d2758
|-CXXRecordDecl 0x55f5da5c9370 <line:54:5, line:57:5> line:54:11 referenced union vmvalue definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55f5da5c9488 <col:5, col:11> col:11 implicit union vmvalue
| |-FieldDecl 0x55f5da5c9528 <line:55:2, col:19> col:19 referenced v1 'atomic_uint32_t *'
| |-FieldDecl 0x55f5da5c95b8 <line:56:2, col:10> col:10 referenced vm 'NotifierSignal::vmpair *'
| |-CXXConstructorDecl 0x55f5da5d12f0 <line:54:11> col:11 implicit used vmvalue 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55f5da5d1728 <col:11>
| |-CXXConstructorDecl 0x55f5da5d13f8 <col:11> col:11 implicit constexpr vmvalue 'void (const NotifierSignal::vmvalue &)' inline default trivial noexcept-unevaluated 0x55f5da5d13f8
| | `-ParmVarDecl 0x55f5da5d1508 <col:11> col:11 'const NotifierSignal::vmvalue &'
| |-CXXConstructorDecl 0x55f5da5d15a8 <col:11> col:11 implicit constexpr vmvalue 'void (NotifierSignal::vmvalue &&)' inline default trivial noexcept-unevaluated 0x55f5da5d15a8
| | `-ParmVarDecl 0x55f5da5d16b8 <col:11> col:11 'NotifierSignal::vmvalue &&'
| `-CXXDestructorDecl 0x55f5da5d2420 <col:11> col:11 implicit ~vmvalue 'void () noexcept' inline default trivial
|-FieldDecl 0x55f5da5c9630 <line:59:5, col:13> col:13 referenced _v 'NotifierSignal::vmvalue'
|-FieldDecl 0x55f5da5c9690 <line:60:5, col:14> col:14 referenced _mask 'uint32_t':'unsigned int'
|-EnumDecl 0x55f5da5c96e0 <line:62:5, line:65:5> line:62:5
| |-EnumConstantDecl 0x55f5da5c97e0 <line:63:2, col:14> col:2 referenced true_mask 'NotifierSignal::(anonymous enum at ../dummy_inc/click/notifier.hh:62:5)'
| | `-ImplicitCastExpr 0x55f5da5c99e0 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f5da5c97c0 <col:14> 'int' Int: 1
| |     `-IntegerLiteral 0x55f5da5c97a0 <col:14> 'int' 1
| |-EnumConstantDecl 0x55f5da5c9870 <col:17, col:30> col:17 referenced false_mask 'NotifierSignal::(anonymous enum at ../dummy_inc/click/notifier.hh:62:5)'
| | `-ImplicitCastExpr 0x55f5da5c99f8 <col:30> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f5da5c9850 <col:30> 'int' Int: 2
| |     `-IntegerLiteral 0x55f5da5c9830 <col:30> 'int' 2
| |-EnumConstantDecl 0x55f5da5c9900 <col:33, col:52> col:33 referenced overderived_mask 'NotifierSignal::(anonymous enum at ../dummy_inc/click/notifier.hh:62:5)'
| | `-ImplicitCastExpr 0x55f5da5c9a10 <col:52> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f5da5c98e0 <col:52> 'int' Int: 4
| |     `-IntegerLiteral 0x55f5da5c98c0 <col:52> 'int' 4
| `-EnumConstantDecl 0x55f5da5c9990 <line:64:2, col:23> col:2 referenced uninitialized_mask 'NotifierSignal::(anonymous enum at ../dummy_inc/click/notifier.hh:62:5)'
|   `-ImplicitCastExpr 0x55f5da5c9a28 <col:23> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55f5da5c9970 <col:23> 'int' Int: 8
|       `-IntegerLiteral 0x55f5da5c9950 <col:23> 'int' 8
|-VarDecl 0x55f5da5c9a50 <line:66:5, col:28> col:28 used static_value 'atomic_uint32_t' static
|-CXXMethodDecl 0x55f5da5c9b58 <line:68:5, col:48> col:10 used hard_assign_vm 'void (const NotifierSignal &)'
| `-ParmVarDecl 0x55f5da5c9ac8 <col:25, col:47> col:47 x 'const NotifierSignal &'
|-CXXMethodDecl 0x55f5da5c9d20 <line:69:5, col:63> col:10 hard_derive_one 'void (atomic_uint32_t *, uint32_t)'
| |-ParmVarDecl 0x55f5da5c9c10 <col:26, col:43> col:43 value 'atomic_uint32_t *'
| `-ParmVarDecl 0x55f5da5c9c88 <col:50, col:59> col:59 mask 'uint32_t':'unsigned int'
`-CXXMethodDecl 0x55f5da5c9f58 <line:70:5, col:61> col:17 used hard_equals 'bool (const NotifierSignal::vmpair *, const NotifierSignal::vmpair *)' static
  |-ParmVarDecl 0x55f5da5c9e08 <col:29, col:43> col:43 a 'const NotifierSignal::vmpair *'
  `-ParmVarDecl 0x55f5da5c9e80 <col:46, col:60> col:60 b 'const NotifierSignal::vmpair *'

Layout: <CGRecordLayout
  LLVMType:%class.NotifierSignal = type <{ %"union.NotifierSignal::vmvalue", i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.NotifierSignal.base = type <{ %"union.NotifierSignal::vmvalue", i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f5da5ca008 <../dummy_inc/click/notifier.hh:73:1, line:130:1> line:73:7 referenced class Notifier definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-CXXRecordDecl 0x55f5da5ca128 <col:1, col:7> col:7 implicit referenced class Notifier
|-AccessSpecDecl 0x55f5da5ca1b8 <col:18, col:24> col:18 public
|-EnumDecl 0x55f5da5ca1e0 <line:75:5, col:76> col:10 referenced SearchOp
| |-EnumConstantDecl 0x55f5da5ca2e0 <col:21, col:35> col:21 referenced SEARCH_STOP 'Notifier::SearchOp'
| | `-ImplicitCastExpr 0x55f5da5ca3d0 <col:35> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f5da5ca2c0 <col:35> 'int' Int: 0
| |     `-IntegerLiteral 0x55f5da5ca2a0 <col:35> 'int' 0
| |-EnumConstantDecl 0x55f5da5ca330 <col:38> col:38 SEARCH_CONTINUE 'Notifier::SearchOp'
| `-EnumConstantDecl 0x55f5da5ca380 <col:55> col:55 SEARCH_CONTINUE_WAKE 'Notifier::SearchOp'
|-TypedefDecl 0x55f5da5ca618 <line:76:5, col:53> col:20 referenced callback_type 'void (*)(void *, Notifier *)'
| `-PointerType 0x55f5da5ca5b0 'void (*)(void *, Notifier *)'
|   `-ParenType 0x55f5da5ca550 'void (void *, Notifier *)' sugar
|     `-FunctionProtoType 0x55f5da5ca510 'void (void *, Notifier *)' cdecl
|       |-BuiltinType 0x55f5d9fa9310 'void'
|       |-PointerType 0x55f5d9fa9b10 'void *'
|       | `-BuiltinType 0x55f5d9fa9310 'void'
|       `-PointerType 0x55f5da5ca470 'Notifier *'
|         `-RecordType 0x55f5da5ca0a0 'Notifier'
|           `-CXXRecord 0x55f5da5ca008 'Notifier'
|-CXXConstructorDecl 0x55f5da5ca758 <line:78:5, col:46> col:12 Notifier 'void (Notifier::SearchOp)' inline
| `-ParmVarDecl 0x55f5da5ca680 <col:21, col:35> col:30 op 'Notifier::SearchOp' cinit
|   `-DeclRefExpr 0x55f5da5cf4f8 <col:35> 'Notifier::SearchOp' EnumConstant 0x55f5da5ca2e0 'SEARCH_STOP' 'Notifier::SearchOp'
|-CXXConstructorDecl 0x55f5da5ca968 <line:79:5, col:76> col:12 Notifier 'void (const NotifierSignal &, Notifier::SearchOp)' inline
| |-ParmVarDecl 0x55f5da5ca818 <col:21, col:43> col:43 signal 'const NotifierSignal &'
| `-ParmVarDecl 0x55f5da5ca890 <col:51, col:65> col:60 op 'Notifier::SearchOp' cinit
|   `-DeclRefExpr 0x55f5da5cf518 <col:65> 'Notifier::SearchOp' EnumConstant 0x55f5da5ca2e0 'SEARCH_STOP' 'Notifier::SearchOp'
|-CXXDestructorDecl 0x55f5da5caa68 <line:80:5, col:23> col:13 ~Notifier 'void () noexcept' virtual
|-CXXMethodDecl 0x55f5da5cab98 <line:83:5, line:85:5> line:83:17 initialized 'bool () const' inline
| `-CompoundStmt 0x55f5da5cf5d8 <col:37, line:85:5>
|   `-ReturnStmt 0x55f5da5cf5c8 <line:84:2, col:29>
|     `-CXXMemberCallExpr 0x55f5da5cf5a8 <col:9, col:29> 'bool'
|       `-MemberExpr 0x55f5da5cf578 <col:9, col:17> '<bound member function type>' .initialized 0x55f5da5c82a0
|         `-MemberExpr 0x55f5da5cf548 <col:9> 'const NotifierSignal' lvalue ->_signal 0x55f5da5cef18
|           `-CXXThisExpr 0x55f5da5cf538 <col:9> 'const Notifier *' implicit this
|-CXXMethodDecl 0x55f5da5cada0 <line:87:5, col:52> col:9 initialize 'int (const char *, Router *)'
| |-ParmVarDecl 0x55f5da5cac50 <col:20, col:32> col:32 name 'const char *'
| `-ParmVarDecl 0x55f5da5cacc8 <col:38, col:46> col:46 router 'Router *'
|-CXXMethodDecl 0x55f5da5cae98 <line:89:5, col:43> col:34 signal 'const NotifierSignal &() const' inline
|-CXXMethodDecl 0x55f5da5caf88 <line:90:5, col:33> col:21 search_op 'Notifier::SearchOp () const' inline
|-CXXMethodDecl 0x55f5da5cb048 <line:92:5, col:26> col:17 active 'bool () const' inline
|-CXXMethodDecl 0x55f5da5cb188 <line:94:5, col:39> col:17 used set_active 'bool (bool)' inline
| `-ParmVarDecl 0x55f5da5cb0f8 <col:28, col:33> col:33 active 'bool'
|-CXXMethodDecl 0x55f5da5cb250 <line:95:5, col:22> col:17 wake 'void ()' inline
|-CXXMethodDecl 0x55f5da5cc120 <line:96:5, col:23> col:17 sleep 'void ()' inline
|-CXXMethodDecl 0x55f5da5cc390 <line:98:5, col:71> col:17 used add_activate_callback 'int (Notifier::callback_type, void *)' virtual
| |-ParmVarDecl 0x55f5da5cc1f0 <col:39, col:53> col:53 f 'Notifier::callback_type':'void (*)(void *, Notifier *)'
| `-ParmVarDecl 0x55f5da5cc270 <col:56, col:62> col:62 user_data 'void *'
|-CXXMethodDecl 0x55f5da5cc5e8 <line:99:5, col:75> col:18 used remove_activate_callback 'void (Notifier::callback_type, void *)' virtual
| |-ParmVarDecl 0x55f5da5cc450 <col:43, col:57> col:57 f 'Notifier::callback_type':'void (*)(void *, Notifier *)'
| `-ParmVarDecl 0x55f5da5cc4d0 <col:60, col:66> col:66 user_data 'void *'
|-CXXMethodDecl 0x55f5da5cc770 <line:100:5, col:39> col:16 add_listener 'int (Task *)' inline
| `-ParmVarDecl 0x55f5da5cc6a8 <col:29, col:35> col:35 task 'Task *'
|-CXXMethodDecl 0x55f5da5cc8b8 <line:101:5, col:43> col:17 remove_listener 'void (Task *)' inline
| `-ParmVarDecl 0x55f5da5cc828 <col:33, col:39> col:39 task 'Task *'
|-CXXMethodDecl 0x55f5da5cca40 <line:102:5, col:59> col:16 add_dependent_signal 'int (NotifierSignal *)' inline
| `-ParmVarDecl 0x55f5da5cc970 <col:37, col:53> col:53 signal 'NotifierSignal *'
|-CXXMethodDecl 0x55f5da5ccbb8 <line:103:5, col:63> col:17 remove_dependent_signal 'void (NotifierSignal *)' inline
| `-ParmVarDecl 0x55f5da5ccaf8 <col:41, col:57> col:57 signal 'NotifierSignal *'
|-VarDecl 0x55f5da5ccc80 <line:105:5, col:38> col:23 EMPTY_NOTIFIER 'const char []' static
|-VarDecl 0x55f5da5ccd08 <line:106:5, col:37> col:23 FULL_NOTIFIER 'const char []' static
|-CXXMethodDecl 0x55f5da5cced8 <line:108:5, col:76> col:34 used upstream_empty_signal 'NotifierSignal (Element *, int)' static inline
| |-ParmVarDecl 0x55f5da5ccd80 <col:56, col:65> col:65 e 'Element *'
| `-ParmVarDecl 0x55f5da5cce00 <col:68, col:72> col:72 port 'int'
|-CXXMethodDecl 0x55f5da5cd178 <line:109:5, col:88> col:34 upstream_empty_signal 'NotifierSignal (Element *, int, Task *)' static inline
| |-ParmVarDecl 0x55f5da5ccf98 <col:56, col:65> col:65 e 'Element *'
| |-ParmVarDecl 0x55f5da5cd018 <col:68, col:72> col:72 port 'int'
| `-ParmVarDecl 0x55f5da5cd090 <col:78, col:84> col:84 task 'Task *'
|-CXXMethodDecl 0x55f5da5cd418 <line:110:5, col:106> col:34 used upstream_empty_signal 'NotifierSignal (Element *, int, Notifier *)' static inline
| |-ParmVarDecl 0x55f5da5cd240 <col:56, col:65> col:65 e 'Element *'
| |-ParmVarDecl 0x55f5da5cd2c0 <col:68, col:72> col:72 port 'int'
| `-ParmVarDecl 0x55f5da5cd338 <col:78, col:88> col:88 dependent_notifier 'Notifier *'
|-CXXMethodDecl 0x55f5da5cd798 <line:111:5, col:103> col:27 used upstream_empty_signal 'NotifierSignal (Element *, int, Notifier::callback_type, void *)' static
| |-ParmVarDecl 0x55f5da5cd4e0 <col:49, col:58> col:58 e 'Element *'
| |-ParmVarDecl 0x55f5da5cd560 <col:61, col:65> col:65 port 'int'
| |-ParmVarDecl 0x55f5da5cd5d8 <col:71, col:85> col:85 f 'Notifier::callback_type':'void (*)(void *, Notifier *)'
| `-ParmVarDecl 0x55f5da5cd658 <col:88, col:94> col:94 user_data 'void *'
|-CXXMethodDecl 0x55f5da5cd980 <line:113:5, col:77> col:34 used downstream_full_signal 'NotifierSignal (Element *, int)' static inline
| |-ParmVarDecl 0x55f5da5cd868 <col:57, col:66> col:66 e 'Element *'
| `-ParmVarDecl 0x55f5da5cd8e8 <col:69, col:73> col:73 port 'int'
|-CXXMethodDecl 0x55f5da5cdbd8 <line:114:5, col:89> col:34 downstream_full_signal 'NotifierSignal (Element *, int, Task *)' static inline
| |-ParmVarDecl 0x55f5da5cda40 <col:57, col:66> col:66 e 'Element *'
| |-ParmVarDecl 0x55f5da5cdac0 <col:69, col:73> col:73 port 'int'
| `-ParmVarDecl 0x55f5da5cdb38 <col:79, col:85> col:85 task 'Task *'
|-CXXMethodDecl 0x55f5da5cde38 <line:115:5, col:107> col:34 used downstream_full_signal 'NotifierSignal (Element *, int, Notifier *)' static inline
| |-ParmVarDecl 0x55f5da5cdca0 <col:57, col:66> col:66 e 'Element *'
| |-ParmVarDecl 0x55f5da5cdd20 <col:69, col:73> col:73 port 'int'
| `-ParmVarDecl 0x55f5da5cdd98 <col:79, col:89> col:89 dependent_notifier 'Notifier *'
|-CXXMethodDecl 0x55f5da5ce120 <line:116:5, col:104> col:27 used downstream_full_signal 'NotifierSignal (Element *, int, Notifier::callback_type, void *)' static
| |-ParmVarDecl 0x55f5da5cdf00 <col:50, col:59> col:59 e 'Element *'
| |-ParmVarDecl 0x55f5da5cdf80 <col:62, col:66> col:66 port 'int'
| |-ParmVarDecl 0x55f5da5cdff8 <col:72, col:86> col:86 f 'Notifier::callback_type':'void (*)(void *, Notifier *)'
| `-ParmVarDecl 0x55f5da5ce078 <col:89, col:95> col:95 user_data 'void *'
|-CXXMethodDecl 0x55f5da5ce3d8 <line:118:5, col:109> col:34 upstream_empty_signal 'NotifierSignal (Element *, int, int)' static inline
| |-ParmVarDecl 0x55f5da5ce1f0 <col:56, col:65> col:65 e 'Element *'
| |-ParmVarDecl 0x55f5da5ce270 <col:68, col:72> col:72 port 'int'
| |-ParmVarDecl 0x55f5da5ce2f0 <col:78> col:81 'int'
| `-DeprecatedAttr 0x55f5da5ce490 <col:98> "" ""
|-CXXMethodDecl 0x55f5da5ce778 <line:119:5, col:121> col:34 upstream_empty_signal 'NotifierSignal (Element *, int, int, Notifier *)' static inline
| |-ParmVarDecl 0x55f5da5ce510 <col:56, col:65> col:65 e 'Element *'
| |-ParmVarDecl 0x55f5da5ce590 <col:68, col:72> col:72 port 'int'
| |-ParmVarDecl 0x55f5da5ce610 <col:78> col:81 'int'
| |-ParmVarDecl 0x55f5da5ce688 <col:83, col:92> col:93 'Notifier *'
| `-DeprecatedAttr 0x55f5da5ce838 <col:110> "" ""
|-CXXMethodDecl 0x55f5da5cea58 <line:120:5, col:110> col:34 downstream_full_signal 'NotifierSignal (Element *, int, int)' static inline
| |-ParmVarDecl 0x55f5da5ce8b8 <col:57, col:66> col:66 e 'Element *'
| |-ParmVarDecl 0x55f5da5ce938 <col:69, col:73> col:73 port 'int'
| |-ParmVarDecl 0x55f5da5ce9b8 <col:79> col:82 'int'
| `-DeprecatedAttr 0x55f5da5ceb10 <col:99> "" ""
|-CXXMethodDecl 0x55f5da5cedb0 <line:121:5, col:122> col:34 downstream_full_signal 'NotifierSignal (Element *, int, int, Notifier *)' static inline
| |-ParmVarDecl 0x55f5da5ceb90 <col:57, col:66> col:66 e 'Element *'
| |-ParmVarDecl 0x55f5da5cec10 <col:69, col:73> col:73 port 'int'
| |-ParmVarDecl 0x55f5da5cec90 <col:79> col:82 'int'
| |-ParmVarDecl 0x55f5da5ced08 <col:84, col:93> col:94 'Notifier *'
| `-DeprecatedAttr 0x55f5da5cee70 <col:111> "" ""
|-AccessSpecDecl 0x55f5da5ceee0 <line:123:3, col:10> col:3 private
|-FieldDecl 0x55f5da5cef18 <line:125:5, col:20> col:20 referenced _signal 'NotifierSignal'
|-FieldDecl 0x55f5da5cef78 <line:126:5, col:14> col:14 referenced _search_op 'Notifier::SearchOp'
|-CXXMethodDecl 0x55f5da5cf0f0 <line:128:5, col:61> col:17 used dependent_signal_callback 'void (void *, Notifier *)' static
| |-ParmVarDecl 0x55f5da5cefe0 <col:43, col:48> col:49 'void *'
| `-ParmVarDecl 0x55f5da5cf058 <col:51, col:60> col:61 'Notifier *'
|-CXXConstructorDecl 0x55f5da5cf1c8 <line:73:7> col:7 implicit Notifier 'void (const Notifier &)' inline default noexcept-unevaluated 0x55f5da5cf1c8
| `-ParmVarDecl 0x55f5da5cf2d8 <col:7> col:7 'const Notifier &'
`-CXXMethodDecl 0x55f5da5cf378 <col:7> col:7 implicit operator= 'Notifier &(const Notifier &)' inline default noexcept-unevaluated 0x55f5da5cf378
  `-ParmVarDecl 0x55f5da5cf488 <col:7> col:7 'const Notifier &'

Layout: <CGRecordLayout
  LLVMType:%class.Notifier = type <{ i32 (...)**, %class.NotifierSignal, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Notifier.base = type <{ i32 (...)**, %class.NotifierSignal, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class ActiveNotifier
         0 |   class Notifier (primary base)
         0 |     (Notifier vtable pointer)
         8 |     class NotifierSignal _signal
         8 |       union NotifierSignal::vmvalue _v
         8 |         class atomic_uint32_t * v1
         8 |         struct NotifierSignal::vmpair * vm
        16 |       uint32_t _mask
        24 |     enum Notifier::SearchOp _search_op
        32 |   class Task * _listener1
        40 |   ActiveNotifier::task_or_signal_t * _listeners
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct TaskLink
         0 |   struct TaskLink * _prev
         8 |   struct TaskLink * _next
        16 |   unsigned int _pass
           | [sizeof=24, dsize=20, align=8,
           |  nvsize=20, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f5da52d310 <../dummy_inc/click/task.hh:31:1, line:47:1> line:31:8 referenced struct TaskLink definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55f5da52d428 <col:1, col:8> col:8 implicit referenced struct TaskLink
|-FieldDecl 0x55f5da52d4f8 <line:33:5, col:15> col:15 referenced _prev 'TaskLink *'
|-FieldDecl 0x55f5da52d558 <line:34:5, col:15> col:15 referenced _next 'TaskLink *'
|-FieldDecl 0x55f5da52d5c0 <line:37:5, col:14> col:14 referenced _pass 'unsigned int'
|-CXXConstructorDecl 0x55f5da52d648 <line:39:5, line:46:5> line:39:5 used TaskLink 'void ()'
| `-CompoundStmt 0x55f5da52d8b0 <col:16, line:46:5>
|   |-BinaryOperator 0x55f5da52d7f8 <line:41:9, col:25> 'TaskLink *' lvalue '='
|   | |-MemberExpr 0x55f5da52d718 <col:9> 'TaskLink *' lvalue ->_prev 0x55f5da52d4f8
|   | | `-CXXThisExpr 0x55f5da52d708 <col:9> 'TaskLink *' implicit this
|   | `-ImplicitCastExpr 0x55f5da52d7e0 <col:17, col:25> 'TaskLink *' <LValueToRValue>
|   |   `-BinaryOperator 0x55f5da52d7c0 <col:17, col:25> 'TaskLink *' lvalue '='
|   |     |-MemberExpr 0x55f5da52d758 <col:17> 'TaskLink *' lvalue ->_next 0x55f5da52d558
|   |     | `-CXXThisExpr 0x55f5da52d748 <col:17> 'TaskLink *' implicit this
|   |     `-ImplicitCastExpr 0x55f5da52d7a8 <col:25> 'TaskLink *' <NullToPointer>
|   |       `-IntegerLiteral 0x55f5da52d788 <col:25> 'int' 0
|   `-BinaryOperator 0x55f5da52d890 <line:44:9, col:17> 'unsigned int' lvalue '='
|     |-MemberExpr 0x55f5da52d828 <col:9> 'unsigned int' lvalue ->_pass 0x55f5da52d5c0
|     | `-CXXThisExpr 0x55f5da52d818 <col:9> 'TaskLink *' implicit this
|     `-ImplicitCastExpr 0x55f5da52d878 <col:17> 'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x55f5da52d858 <col:17> 'int' 0
|-CXXConstructorDecl 0x55f5da5b9de8 <line:31:8> col:8 implicit constexpr TaskLink 'void (const TaskLink &)' inline default trivial noexcept-unevaluated 0x55f5da5b9de8
| `-ParmVarDecl 0x55f5da5b9ef8 <col:8> col:8 'const TaskLink &'
|-CXXConstructorDecl 0x55f5da5b9f98 <col:8> col:8 implicit constexpr TaskLink 'void (TaskLink &&)' inline default trivial noexcept-unevaluated 0x55f5da5b9f98
| `-ParmVarDecl 0x55f5da5ba0a8 <col:8> col:8 'TaskLink &&'
|-CXXDestructorDecl 0x55f5da5ba298 <col:8> col:8 implicit ~TaskLink 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55f5da5baa98 <col:8> col:8 implicit operator= 'TaskLink &(const TaskLink &)' inline default trivial noexcept-unevaluated 0x55f5da5baa98
| `-ParmVarDecl 0x55f5da5baba8 <col:8> col:8 'const TaskLink &'
`-CXXMethodDecl 0x55f5da5bac18 <col:8> col:8 implicit operator= 'TaskLink &(TaskLink &&)' inline default trivial noexcept-unevaluated 0x55f5da5bac18
  `-ParmVarDecl 0x55f5da5bad28 <col:8> col:8 'TaskLink &&'

Layout: <CGRecordLayout
  LLVMType:%struct.TaskLink = type <{ %struct.TaskLink*, %struct.TaskLink*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%struct.TaskLink.base = type <{ %struct.TaskLink*, %struct.TaskLink*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9)
         0 |   int16_t home_thread_id
         2 |   uint8_t is_scheduled
         3 |   uint8_t is_strong_unscheduled
           | [sizeof=4, dsize=4, align=2,
           |  nvsize=4, nvalign=2]

*** Dumping AST Record Layout
         0 | union Task::Status
         0 |   struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9) 
         0 |     int16_t home_thread_id
         2 |     uint8_t is_scheduled
         3 |     uint8_t is_strong_unscheduled
         0 |   uint32_t status
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Task::Pending
         0 |   class Task * t
         0 |   uintptr_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Task
         0 |   struct TaskLink (base)
         0 |     struct TaskLink * _prev
         8 |     struct TaskLink * _next
        16 |     unsigned int _pass
        20 |   unsigned int _stride
        24 |   int _tickets
        28 |   union Task::Status _status
        28 |     struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9) 
        28 |       int16_t home_thread_id
        30 |       uint8_t is_scheduled
        31 |       uint8_t is_strong_unscheduled
        28 |     uint32_t status
        32 |   TaskCallback _hook
        40 |   void * _thunk
        48 |   class RouterThread * _thread
        56 |   class Element * _owner
        64 |   union Task::Pending _pending_nextptr
        64 |     class Task * t
        64 |     uintptr_t x
           | [sizeof=72, dsize=72, align=8,
           |  nvsize=72, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f5da4909d8 <../dummy_inc/click/task.hh:315:9, line:319:9> line:315:9 struct definition
|-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x55f5da490b08 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
|-FieldDecl 0x55f5da490b68 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
|-FieldDecl 0x55f5da490bc8 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
|-CXXConstructorDecl 0x55f5da5c0fa8 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
|-CXXDestructorDecl 0x55f5da5c1080 <col:9> col:9 implicit ~ 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x55f5da5c1338 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x55f5da5c1338
| `-ParmVarDecl 0x55f5da5c1448 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
`-CXXConstructorDecl 0x55f5da5c14e8 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x55f5da5c14e8
  `-ParmVarDecl 0x55f5da5c15f8 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'

Layout: <CGRecordLayout
  LLVMType:%struct.anon = type { i16, i8, i8 }
  NonVirtualBaseLLVMType:%struct.anon = type { i16, i8, i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f5da490828 <../dummy_inc/click/task.hh:314:5, line:321:5> line:314:11 union Status definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55f5da490948 <col:5, col:11> col:11 implicit union Status
|-CXXRecordDecl 0x55f5da4909d8 <line:315:9, line:319:9> line:315:9 struct definition
| |-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x55f5da490b08 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
| |-FieldDecl 0x55f5da490b68 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
| |-FieldDecl 0x55f5da490bc8 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
| |-CXXConstructorDecl 0x55f5da5c0fa8 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
| |-CXXDestructorDecl 0x55f5da5c1080 <col:9> col:9 implicit ~ 'void () noexcept' inline default trivial
| |-CXXConstructorDecl 0x55f5da5c1338 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x55f5da5c1338
| | `-ParmVarDecl 0x55f5da5c1448 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
| `-CXXConstructorDecl 0x55f5da5c14e8 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x55f5da5c14e8
|   `-ParmVarDecl 0x55f5da5c15f8 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'
|-FieldDecl 0x55f5da490c88 <col:9> col:9 implicit referenced 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
|-IndirectFieldDecl 0x55f5da490ce8 <line:316:21> col:21 implicit home_thread_id 'int16_t':'short'
| |-Field 0x55f5da490c88 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x55f5da490b08 'home_thread_id' 'int16_t':'short'
|-IndirectFieldDecl 0x55f5da490d40 <line:317:21> col:21 implicit is_scheduled 'uint8_t':'unsigned char'
| |-Field 0x55f5da490c88 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x55f5da490b68 'is_scheduled' 'uint8_t':'unsigned char'
|-IndirectFieldDecl 0x55f5da490d98 <line:318:21> col:21 implicit is_strong_unscheduled 'uint8_t':'unsigned char'
| |-Field 0x55f5da490c88 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x55f5da490bc8 'is_strong_unscheduled' 'uint8_t':'unsigned char'
|-FieldDecl 0x55f5da490df0 <line:320:9, col:18> col:18 status 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55f5da5c0eb8 <line:314:11> col:11 implicit used Status 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55f5da5c1818 <col:11>
|-CXXConstructorDecl 0x55f5da5c1188 <col:11> col:11 implicit constexpr Status 'void (const Task::Status &)' inline default trivial noexcept-unevaluated 0x55f5da5c1188
| `-ParmVarDecl 0x55f5da5c1298 <col:11> col:11 'const Task::Status &'
|-CXXConstructorDecl 0x55f5da5c1698 <col:11> col:11 implicit constexpr Status 'void (Task::Status &&)' inline default trivial noexcept-unevaluated 0x55f5da5c1698
| `-ParmVarDecl 0x55f5da5c17a8 <col:11> col:11 'Task::Status &&'
`-CXXDestructorDecl 0x55f5da7156b0 <col:11> col:11 implicit ~Status 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"union.Task::Status" = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class Vector<struct TimerSet::heap_element>
         0 |   class vector_memory<class sized_array_memory<16> > vm_
         0 |     vector_memory<class sized_array_memory<16> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class Timer *>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class SimpleSpinlock (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class TimerSet
         0 |   class Timestamp _timer_expiry
         0 |     union Timestamp::rep_t _t
         0 |       int64_t x
         8 |   unsigned int _max_timer_stride
        12 |   unsigned int _timer_stride
        16 |   unsigned int _timer_count
        24 |   class Vector<struct TimerSet::heap_element> _timer_heap
        24 |     class vector_memory<class sized_array_memory<16> > vm_
        24 |       vector_memory<class sized_array_memory<16> >::type * l_
        32 |       vector_memory::size_type n_
        36 |       vector_memory::size_type capacity_
        40 |   class Vector<class Timer *> _timer_runchunk
        40 |     class vector_memory<class sized_array_memory<8> > vm_
        40 |       vector_memory<class sized_array_memory<8> >::type * l_
        48 |       vector_memory::size_type n_
        52 |       vector_memory::size_type capacity_
        56 |   class SimpleSpinlock _timer_lock (empty)
        64 |   class Timestamp _timer_check
        64 |     union Timestamp::rep_t _t
        64 |       int64_t x
        72 |   uint32_t _timer_check_reports
           | [sizeof=80, dsize=76, align=8,
           |  nvsize=76, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct pollfd>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<24> >
         0 |   vector_memory<class sized_array_memory<24> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct SelectSet::SelectorInfo>
         0 |   class vector_memory<class sized_array_memory<24> > vm_
         0 |     vector_memory<class sized_array_memory<24> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class SelectSet
         0 |   int [2] _wake_pipe
         8 |   volatile _Bool _wake_pipe_pending
        16 |   class Vector<struct pollfd> _pollfds
        16 |     class vector_memory<class sized_array_memory<8> > vm_
        16 |       vector_memory<class sized_array_memory<8> >::type * l_
        24 |       vector_memory::size_type n_
        28 |       vector_memory::size_type capacity_
        32 |   class Vector<struct SelectSet::SelectorInfo> _selinfo
        32 |     class vector_memory<class sized_array_memory<24> > vm_
        32 |       vector_memory<class sized_array_memory<24> >::type * l_
        40 |       vector_memory::size_type n_
        44 |       vector_memory::size_type capacity_
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | class Spinlock (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class SpinlockIRQ (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class RouterThread
         0 |   struct TaskLink _task_link
         0 |     struct TaskLink * _prev
         8 |     struct TaskLink * _next
        16 |     unsigned int _pass
        24 |   volatile _Bool _stop_flag
        32 |   class TimerSet _timers
        32 |     class Timestamp _timer_expiry
        32 |       union Timestamp::rep_t _t
        32 |         int64_t x
        40 |     unsigned int _max_timer_stride
        44 |     unsigned int _timer_stride
        48 |     unsigned int _timer_count
        56 |     class Vector<struct TimerSet::heap_element> _timer_heap
        56 |       class vector_memory<class sized_array_memory<16> > vm_
        56 |         vector_memory<class sized_array_memory<16> >::type * l_
        64 |         vector_memory::size_type n_
        68 |         vector_memory::size_type capacity_
        72 |     class Vector<class Timer *> _timer_runchunk
        72 |       class vector_memory<class sized_array_memory<8> > vm_
        72 |         vector_memory<class sized_array_memory<8> >::type * l_
        80 |         vector_memory::size_type n_
        84 |         vector_memory::size_type capacity_
        88 |     class SimpleSpinlock _timer_lock (empty)
        96 |     class Timestamp _timer_check
        96 |       union Timestamp::rep_t _t
        96 |         int64_t x
       104 |     uint32_t _timer_check_reports
       112 |   class SelectSet _selects
       112 |     int [2] _wake_pipe
       120 |     volatile _Bool _wake_pipe_pending
       128 |     class Vector<struct pollfd> _pollfds
       128 |       class vector_memory<class sized_array_memory<8> > vm_
       128 |         vector_memory<class sized_array_memory<8> >::type * l_
       136 |         vector_memory::size_type n_
       140 |         vector_memory::size_type capacity_
       144 |     class Vector<struct SelectSet::SelectorInfo> _selinfo
       144 |       class vector_memory<class sized_array_memory<24> > vm_
       144 |         vector_memory<class sized_array_memory<24> >::type * l_
       152 |         vector_memory::size_type n_
       156 |         vector_memory::size_type capacity_
       192 |   class Spinlock _task_lock (empty)
       196 |   class atomic_uint32_t _task_blocker
       196 |     uint32_t _val
       200 |   class atomic_uint32_t _task_blocker_waiting
       200 |     uint32_t _val
       208 |   union Task::Pending _pending_head
       208 |     class Task * t
       208 |     uintptr_t x
       216 |   class Task::Pending * _pending_tail
       224 |   class SpinlockIRQ _pending_lock (empty)
       256 |   class Master * _master
       264 |   int _id
       268 |   _Bool _driver_entered
       272 |   unsigned int _tasks_per_iter
       276 |   unsigned int _iters_per_os
           | [sizeof=320, dsize=280, align=64,
           |  nvsize=280, nvalign=64]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f5da4a8320 prev 0x55f5da49f160 <../dummy_inc/click/timestamp.hh:539:5, line:566:5> line:539:11 referenced union rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55f5da4a8418 <col:5, col:11> col:11 implicit union rep_t
|-FieldDecl 0x55f5da4a84b8 <line:541:9, col:17> col:17 referenced x 'int64_t':'long'
|-CXXConstructorDecl 0x55f5da4af280 <line:539:11> col:11 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55f5da4af668 <col:11>
|-CXXConstructorDecl 0x55f5da4af360 <col:11> col:11 implicit used constexpr rep_t 'void (const Timestamp::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55f5da4af448 <col:11> col:11 'const Timestamp::rep_t &'
| `-CompoundStmt 0x55f5da4afdb0 <col:11>
|-CXXConstructorDecl 0x55f5da4af4e8 <col:11> col:11 implicit used constexpr rep_t 'void (Timestamp::rep_t &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55f5da4af5f8 <col:11> col:11 'Timestamp::rep_t &&'
| `-CompoundStmt 0x55f5da4b1608 <col:11>
|-CXXDestructorDecl 0x55f5da4b0918 <col:11> col:11 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55f5da1b74c8 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(const Timestamp::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55f5da1b75d8 <col:11> col:11 'const Timestamp::rep_t &'
| `-CompoundStmt 0x55f5da1b7ea0 <col:11>
|   `-ReturnStmt 0x55f5da1b7e90 <col:11>
|     `-UnaryOperator 0x55f5da1b7e78 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55f5da1b7e68 <col:11> 'Timestamp::rep_t *' this
`-CXXMethodDecl 0x55f5da1b7648 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(Timestamp::rep_t &&) noexcept' inline default trivial
  |-ParmVarDecl 0x55f5da1b7758 <col:11> col:11 'Timestamp::rep_t &&'
  `-CompoundStmt 0x55f5da549d40 <col:11>
    `-ReturnStmt 0x55f5da549d30 <col:11>
      `-UnaryOperator 0x55f5da549d18 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
        `-CXXThisExpr 0x55f5da549d08 <col:11> 'Timestamp::rep_t *' this

Layout: <CGRecordLayout
  LLVMType:%"union.Timestamp::rep_t" = type { i64 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f5da49e318 prev 0x55f5da49e028 <../dummy_inc/click/timestamp.hh:122:1, line:723:1> line:122:7 referenced class Timestamp definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55f5da49e410 <col:1, col:7> col:7 implicit referenced class Timestamp
|-AccessSpecDecl 0x55f5da49e4a0 <col:19, col:25> col:19 public
|-TypedefDecl 0x55f5da49e4d8 <line:125:5, col:21> col:21 referenced seconds_type 'int32_t':'int'
| `-TypedefType 0x55f5da1036a0 'int32_t' sugar
|   |-Typedef 0x55f5da012238 'int32_t'
|   `-TypedefType 0x55f5d9feb3f0 '__int32_t' sugar
|     |-Typedef 0x55f5d9feb008 '__int32_t'
|     `-BuiltinType 0x55f5d9fa93b0 'int'
|-TypedefDecl 0x55f5da49e540 <line:128:5, col:21> col:21 referenced value_type 'int64_t':'long'
| `-TypedefType 0x55f5da103860 'int64_t' sugar
|   |-Typedef 0x55f5da0122a0 'int64_t'
|   `-TypedefType 0x55f5d9feb510 '__int64_t' sugar
|     |-Typedef 0x55f5d9feb0e8 '__int64_t'
|     `-BuiltinType 0x55f5d9fa93d0 'long'
|-EnumDecl 0x55f5da49e598 <line:133:5, line:140:5> line:133:5
| |-EnumConstantDecl 0x55f5da49e710 <line:134:9, col:38> col:9 max_seconds 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:133:5)'
| | `-ConstantExpr 0x55f5da49e6f0 <col:23, col:38> 'Timestamp::seconds_type':'int' Int: 2147483647
| |   `-CStyleCastExpr 0x55f5da49e6c8 <col:23, col:38> 'Timestamp::seconds_type':'int' <NoOp>
| |     `-ImplicitCastExpr 0x55f5da49e6b0 <col:38> 'Timestamp::seconds_type':'int' <IntegralCast> part_of_explicit_cast
| |       `-IntegerLiteral 0x55f5da49e680 <col:38> 'unsigned int' 2147483647
| `-EnumConstantDecl 0x55f5da49e808 <line:137:9, col:39> col:9 min_seconds 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:133:5)'
|   `-ConstantExpr 0x55f5da49e7e8 <col:23, col:39> 'Timestamp::seconds_type':'int' Int: -2147483648
|     `-CStyleCastExpr 0x55f5da49e7c0 <col:23, col:39> 'Timestamp::seconds_type':'int' <NoOp>
|       `-ImplicitCastExpr 0x55f5da49e7a8 <col:38, col:39> 'Timestamp::seconds_type':'int' <IntegralCast> part_of_explicit_cast
|         `-UnaryOperator 0x55f5da49e780 <col:38, col:39> 'unsigned int' prefix '-'
|           `-IntegerLiteral 0x55f5da49e760 <col:39> 'unsigned int' 2147483648
|-EnumDecl 0x55f5da49e858 <line:142:5, line:162:5> line:142:5
| |-EnumConstantDecl 0x55f5da49e960 <line:143:9, col:24> col:9 referenced nsec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55f5da49eeb0 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f5da49e940 <col:24> 'int' Int: 1000000000
| |     `-IntegerLiteral 0x55f5da49e920 <col:24> 'int' 1000000000
| |-EnumConstantDecl 0x55f5da49e9f0 <line:144:9, col:25> col:9 nsec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55f5da49eec8 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f5da49e9d0 <col:25> 'int' Int: 1000000
| |     `-IntegerLiteral 0x55f5da49e9b0 <col:25> 'int' 1000000
| |-EnumConstantDecl 0x55f5da49ea80 <line:145:9, col:25> col:9 nsec_per_usec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55f5da49eee0 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f5da49ea60 <col:25> 'int' Int: 1000
| |     `-IntegerLiteral 0x55f5da49ea40 <col:25> 'int' 1000
| |-EnumConstantDecl 0x55f5da49eb10 <line:146:9, col:24> col:9 referenced usec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55f5da49eef8 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f5da49eaf0 <col:24> 'int' Int: 1000000
| |     `-IntegerLiteral 0x55f5da49ead0 <col:24> 'int' 1000000
| |-EnumConstantDecl 0x55f5da49eba0 <line:147:9, col:25> col:9 usec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55f5da49ef10 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f5da49eb80 <col:25> 'int' Int: 1000
| |     `-IntegerLiteral 0x55f5da49eb60 <col:25> 'int' 1000
| |-EnumConstantDecl 0x55f5da49ec30 <line:148:9, col:24> col:9 referenced msec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55f5da49ef28 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f5da49ec10 <col:24> 'int' Int: 1000
| |     `-IntegerLiteral 0x55f5da49ebf0 <col:24> 'int' 1000
| |-EnumConstantDecl 0x55f5da49ecc0 <line:150:9, col:26> col:9 referenced subsec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55f5da49ef40 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f5da49eca0 <col:26> 'int' Int: 1000000000
| |     `-DeclRefExpr 0x55f5da49ec80 <col:26> 'int' EnumConstant 0x55f5da49e960 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| |-EnumConstantDecl 0x55f5da49ed90 <line:157:9, col:44> col:9 referenced subsec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55f5da49ef58 <col:27, col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f5da49ed70 <col:27, col:44> 'int' Int: 1000000
| |     `-BinaryOperator 0x55f5da49ed50 <col:27, col:44> 'int' '/'
| |       |-DeclRefExpr 0x55f5da49ed10 <col:27> 'int' EnumConstant 0x55f5da49ecc0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| |       `-DeclRefExpr 0x55f5da49ed30 <col:44> 'int' EnumConstant 0x55f5da49ec30 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| `-EnumConstantDecl 0x55f5da49ee60 <line:158:9, col:44> col:9 referenced subsec_per_usec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ImplicitCastExpr 0x55f5da49ef70 <col:27, col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55f5da49ee40 <col:27, col:44> 'int' Int: 1000
|       `-BinaryOperator 0x55f5da49ee20 <col:27, col:44> 'int' '/'
|         |-DeclRefExpr 0x55f5da49ede0 <col:27> 'int' EnumConstant 0x55f5da49ecc0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|         `-DeclRefExpr 0x55f5da49ee00 <col:44> 'int' EnumConstant 0x55f5da49eb10 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-EnumDecl 0x55f5da49ef88 <line:164:5, line:166:5> line:164:5
| `-EnumConstantDecl 0x55f5da49f090 <line:165:9, col:19> col:9 NSUBSEC 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:164:5)'
|   `-ImplicitCastExpr 0x55f5da49f0e0 <col:19> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55f5da49f070 <col:19> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' Int: 1000000000
|       `-DeclRefExpr 0x55f5da49f050 <col:19> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f5da49ecc0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-TypedefDecl 0x55f5da49f108 <line:168:5, col:32> col:32 referenced uninitialized_t 'uninitialized_type'
| `-RecordType 0x55f5da1032d0 'uninitialized_type'
|   `-CXXRecord 0x55f5da103238 'uninitialized_type'
|-CXXRecordDecl 0x55f5da49f160 <line:170:5, col:11> col:11 referenced union rep_t
|-CXXConstructorDecl 0x55f5da49f270 <line:174:5, line:176:5> line:174:12 used Timestamp 'void ()' inline
| |-CXXCtorInitializer Field 0x55f5da4a9468 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55f5da4af678 <col:12> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55f5da4af798 <col:24, line:176:5>
|   `-CXXMemberCallExpr 0x55f5da4af750 <line:175:9, col:20> 'void'
|     |-MemberExpr 0x55f5da4af6e0 <col:9> '<bound member function type>' ->assign 0x55f5da4a3eb8
|     | `-CXXThisExpr 0x55f5da4af6d0 <col:9> 'Timestamp *' implicit this
|     |-IntegerLiteral 0x55f5da4af710 <col:16> 'int' 0
|     `-ImplicitCastExpr 0x55f5da4af780 <col:19> 'uint32_t':'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x55f5da4af730 <col:19> 'int' 0
|-CXXConstructorDecl 0x55f5da49f4b8 <line:187:5, line:189:5> line:187:21 Timestamp 'void (long, uint32_t)' inline
| |-ParmVarDecl 0x55f5da49f330 <col:31, col:36> col:36 used sec 'long'
| |-ParmVarDecl 0x55f5da49f3a8 <col:41, col:59> col:50 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55f5da4aafb0 <col:59> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55f5da4aaf90 <col:59> 'int' 0
| |-CXXCtorInitializer Field 0x55f5da4a9468 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55f5da4af7b0 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55f5da4af900 <col:62, line:189:5>
|   `-CXXMemberCallExpr 0x55f5da4af888 <line:188:9, col:27> 'void'
|     |-MemberExpr 0x55f5da4af818 <col:9> '<bound member function type>' ->assign 0x55f5da4a3eb8
|     | `-CXXThisExpr 0x55f5da4af808 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55f5da4af8d0 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x55f5da4af8b8 <col:16> 'long' <LValueToRValue>
|     |   `-DeclRefExpr 0x55f5da4af848 <col:16> 'long' lvalue ParmVar 0x55f5da49f330 'sec' 'long'
|     `-ImplicitCastExpr 0x55f5da4af8e8 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x55f5da4af868 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x55f5da49f3a8 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55f5da49f718 <line:191:5, line:193:5> line:191:21 used Timestamp 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x55f5da49f588 <col:31, col:35> col:35 used sec 'int'
| |-ParmVarDecl 0x55f5da49f600 <col:40, col:58> col:49 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55f5da4aafe8 <col:58> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55f5da4aafc8 <col:58> 'int' 0
| |-CXXCtorInitializer Field 0x55f5da4a9468 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55f5da4af918 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55f5da4afa50 <col:61, line:193:5>
|   `-CXXMemberCallExpr 0x55f5da4af9f0 <line:192:9, col:27> 'void'
|     |-MemberExpr 0x55f5da4af980 <col:9> '<bound member function type>' ->assign 0x55f5da4a3eb8
|     | `-CXXThisExpr 0x55f5da4af970 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55f5da4afa20 <col:16> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x55f5da4af9b0 <col:16> 'int' lvalue ParmVar 0x55f5da49f588 'sec' 'int'
|     `-ImplicitCastExpr 0x55f5da4afa38 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x55f5da4af9d0 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x55f5da49f600 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55f5da49f978 <line:195:5, line:197:5> line:195:21 Timestamp 'void (unsigned long, uint32_t)' inline
| |-ParmVarDecl 0x55f5da49f7e8 <col:31, col:45> col:45 used sec 'unsigned long'
| |-ParmVarDecl 0x55f5da49f860 <col:50, col:68> col:59 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55f5da4ab020 <col:68> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55f5da4ab000 <col:68> 'int' 0
| |-CXXCtorInitializer Field 0x55f5da4a9468 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55f5da4afa68 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55f5da4afbb8 <col:71, line:197:5>
|   `-CXXMemberCallExpr 0x55f5da4afb40 <line:196:9, col:27> 'void'
|     |-MemberExpr 0x55f5da4afad0 <col:9> '<bound member function type>' ->assign 0x55f5da4a3eb8
|     | `-CXXThisExpr 0x55f5da4afac0 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55f5da4afb88 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x55f5da4afb70 <col:16> 'unsigned long' <LValueToRValue>
|     |   `-DeclRefExpr 0x55f5da4afb00 <col:16> 'unsigned long' lvalue ParmVar 0x55f5da49f7e8 'sec' 'unsigned long'
|     `-ImplicitCastExpr 0x55f5da4afba0 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x55f5da4afb20 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x55f5da49f860 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55f5da4a0b10 <line:199:5, line:201:5> line:199:21 used Timestamp 'void (unsigned int, uint32_t)' inline
| |-ParmVarDecl 0x55f5da49fa48 <col:31, col:40> col:40 used sec 'unsigned int'
| |-ParmVarDecl 0x55f5da49fac0 <col:45, col:63> col:54 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55f5da4ab058 <col:63> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55f5da4ab038 <col:63> 'int' 0
| |-CXXCtorInitializer Field 0x55f5da4a9468 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55f5da4afbd0 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55f5da4afd20 <col:66, line:201:5>
|   `-CXXMemberCallExpr 0x55f5da4afca8 <line:200:9, col:27> 'void'
|     |-MemberExpr 0x55f5da4afc38 <col:9> '<bound member function type>' ->assign 0x55f5da4a3eb8
|     | `-CXXThisExpr 0x55f5da4afc28 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55f5da4afcf0 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x55f5da4afcd8 <col:16> 'unsigned int' <LValueToRValue>
|     |   `-DeclRefExpr 0x55f5da4afc68 <col:16> 'unsigned int' lvalue ParmVar 0x55f5da49fa48 'sec' 'unsigned int'
|     `-ImplicitCastExpr 0x55f5da4afd08 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x55f5da4afc88 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x55f5da49fac0 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55f5da4a0c70 <line:203:5, col:37> col:21 used Timestamp 'void (double)' inline
| `-ParmVarDecl 0x55f5da4a0be0 <col:31> col:37 'double'
|-CXXConstructorDecl 0x55f5da4a0e08 <line:206:5, col:46> col:12 Timestamp 'void (const struct timeval &)' inline
| `-ParmVarDecl 0x55f5da4a0d48 <col:22, col:44> col:44 tv 'const struct timeval &'
|-CXXConstructorDecl 0x55f5da4a1038 <line:208:5, col:47> col:12 Timestamp 'void (const struct timespec &)' inline
| `-ParmVarDecl 0x55f5da4a0f40 <col:22, col:45> col:45 ts 'const struct timespec &'
|-CXXConstructorDecl 0x55f5da4a11e8 <line:212:5, line:214:5> line:212:12 Timestamp 'void (const Timestamp::rep_t &)' inline
| |-ParmVarDecl 0x55f5da4a1128 <col:22, col:35> col:35 used rep 'const Timestamp::rep_t &'
| |-CXXCtorInitializer Field 0x55f5da4a9468 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55f5da4afdc0 <line:213:11, col:17> 'Timestamp::rep_t' 'void (const Timestamp::rep_t &) noexcept'
| |   `-DeclRefExpr 0x55f5da4afd38 <col:14> 'const Timestamp::rep_t' lvalue ParmVar 0x55f5da4a1128 'rep' 'const Timestamp::rep_t &'
| `-CompoundStmt 0x55f5da4afe20 <col:19, line:214:5>
|-CXXConstructorDecl 0x55f5da4a13b8 <line:217:5, line:219:5> line:217:12 used Timestamp 'void (const Timestamp::uninitialized_t &)' inline
| |-ParmVarDecl 0x55f5da4a12f8 <col:22, col:45> col:45 used unused 'const Timestamp::uninitialized_t &'
| |-CXXCtorInitializer Field 0x55f5da4a9468 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55f5da4afe30 <col:12> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55f5da4afee0 <col:53, line:219:5>
|   `-CStyleCastExpr 0x55f5da4afeb8 <line:218:9, col:16> 'void' <ToVoid>
|     `-DeclRefExpr 0x55f5da4afe88 <col:16> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue ParmVar 0x55f5da4a12f8 'unused' 'const Timestamp::uninitialized_t &'
|-TypedefDecl 0x55f5da4a15a8 <line:221:5, col:64> col:39 referenced unspecified_bool_type 'Timestamp::seconds_type (Timestamp::*)() const'
| `-MemberPointerType 0x55f5da4a1520 'Timestamp::seconds_type (Timestamp::*)() const'
|   |-RecordType 0x55f5da49e0c0 'Timestamp'
|   | `-CXXRecord 0x55f5da49e318 'Timestamp'
|   `-ParenType 0x55f5da4a14c0 'Timestamp::seconds_type () const' sugar
|     `-FunctionProtoType 0x55f5da4a1490 'Timestamp::seconds_type () const' const cdecl
|       `-TypedefType 0x55f5da49e660 'Timestamp::seconds_type' sugar
|         |-Typedef 0x55f5da49e4d8 'seconds_type'
|         `-TypedefType 0x55f5da1036a0 'int32_t' sugar
|           |-Typedef 0x55f5da012238 'int32_t'
|           `-TypedefType 0x55f5d9feb3f0 '__int32_t' sugar
|             |-Typedef 0x55f5d9feb008 '__int32_t'
|             `-BuiltinType 0x55f5d9fa93b0 'int'
|-CXXConversionDecl 0x55f5da4a16e8 <line:222:5, col:45> col:12 used operator int (Timestamp::*)() const 'Timestamp::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x55f5da4a17b8 <line:225:5, line:231:5> line:225:17 is_negative 'bool () const' inline
| `-CompoundStmt 0x55f5da4affe8 <col:37, line:231:5>
|   `-ReturnStmt 0x55f5da4affd8 <line:227:9, col:23>
|     `-BinaryOperator 0x55f5da4affb8 <col:16, col:23> 'bool' '<'
|       |-ImplicitCastExpr 0x55f5da4aff88 <col:16, col:19> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x55f5da4aff38 <col:16, col:19> 'const int64_t':'const long' lvalue .x 0x55f5da4a84b8
|       |   `-MemberExpr 0x55f5da4aff08 <col:16> 'const Timestamp::rep_t' lvalue ->_t 0x55f5da4a9468
|       |     `-CXXThisExpr 0x55f5da4afef8 <col:16> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x55f5da4affa0 <col:23> 'long' <IntegralCast>
|         `-IntegerLiteral 0x55f5da4aff68 <col:23> 'int' 0
|-CXXMethodDecl 0x55f5da4a1878 <line:233:5, col:31> col:25 used sec 'Timestamp::seconds_type () const' inline
|-CXXMethodDecl 0x55f5da4a1938 <line:234:5, col:30> col:21 used subsec 'uint32_t () const' inline
|-CXXMethodDecl 0x55f5da4a19f8 <line:235:5, col:28> col:21 msec 'uint32_t () const' inline
|-CXXMethodDecl 0x55f5da4a1ab8 <line:236:5, col:28> col:21 used usec 'uint32_t () const' inline
|-CXXMethodDecl 0x55f5da4a1b78 <line:237:5, col:28> col:21 used nsec 'uint32_t () const' inline
|-CXXMethodDecl 0x55f5da4a1ce8 <line:239:5, col:41> col:17 set_sec 'void (Timestamp::seconds_type)' inline
| `-ParmVarDecl 0x55f5da4a1c28 <col:25, col:38> col:38 sec 'Timestamp::seconds_type':'int'
|-CXXMethodDecl 0x55f5da4a1e30 <line:240:5, col:43> col:17 set_subsec 'void (uint32_t)' inline
| `-ParmVarDecl 0x55f5da4a1da0 <col:28, col:37> col:37 subsec 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f5da4a1ef8 <line:242:5, col:65> col:25 msec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x55f5da4a1f98 <col:54> "" ""
|-CXXMethodDecl 0x55f5da4a2028 <line:243:5, col:65> col:25 usec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x55f5da4a20c8 <col:54> "" ""
|-CXXMethodDecl 0x55f5da4a2158 <line:244:5, col:65> col:25 nsec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x55f5da4a21f8 <col:54> "" ""
|-CXXMethodDecl 0x55f5da4a22f8 <line:250:5, col:37> col:27 used timeval 'struct timeval () const' inline
|-CXXMethodDecl 0x55f5da4a23c8 <line:251:5, col:42> col:27 timeval_ceil 'struct timeval () const' inline
|-CXXMethodDecl 0x55f5da4a24f8 <line:257:5, col:39> col:28 timespec 'struct timespec () const' inline
|-CXXMethodDecl 0x55f5da4a25f0 <line:262:5, col:31> col:19 used doubleval 'double () const' inline
|-CXXMethodDecl 0x55f5da4a2728 <line:265:5, line:271:5> line:265:23 msecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x55f5da4b0200 <col:39, line:271:5>
|   `-ReturnStmt 0x55f5da4b01f0 <line:267:9, col:61>
|     `-CallExpr 0x55f5da4b0190 <col:16, col:61> 'Timestamp::value_type':'long'
|       |-ImplicitCastExpr 0x55f5da4b0178 <col:16> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55f5da4b0000 <col:16> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x55f5da4a9798 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|       |-ImplicitCastExpr 0x55f5da4b01c0 <col:26, col:29> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x55f5da4b0060 <col:26, col:29> 'const int64_t':'const long' lvalue .x 0x55f5da4a84b8
|       |   `-MemberExpr 0x55f5da4b0030 <col:26> 'const Timestamp::rep_t' lvalue ->_t 0x55f5da4a9468
|       |     `-CXXThisExpr 0x55f5da4b0020 <col:26> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x55f5da4b01d8 <col:32, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|         `-BinaryOperator 0x55f5da4b0100 <col:32, col:49> 'int' '/'
|           |-ImplicitCastExpr 0x55f5da4b00d0 <col:32> 'int' <IntegralCast>
|           | `-DeclRefExpr 0x55f5da4b0090 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f5da49ecc0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|           `-ImplicitCastExpr 0x55f5da4b00e8 <col:49> 'int' <IntegralCast>
|             `-DeclRefExpr 0x55f5da4b00b0 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f5da49ec30 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55f5da4a27e8 <line:273:5, line:279:5> line:273:23 usecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x55f5da4b03c0 <col:39, line:279:5>
|   `-ReturnStmt 0x55f5da4b03b0 <line:275:9, col:61>
|     `-CallExpr 0x55f5da4b0350 <col:16, col:61> 'Timestamp::value_type':'long'
|       |-ImplicitCastExpr 0x55f5da4b0338 <col:16> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55f5da4b0218 <col:16> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x55f5da4a9798 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|       |-ImplicitCastExpr 0x55f5da4b0380 <col:26, col:29> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x55f5da4b0278 <col:26, col:29> 'const int64_t':'const long' lvalue .x 0x55f5da4a84b8
|       |   `-MemberExpr 0x55f5da4b0248 <col:26> 'const Timestamp::rep_t' lvalue ->_t 0x55f5da4a9468
|       |     `-CXXThisExpr 0x55f5da4b0238 <col:26> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x55f5da4b0398 <col:32, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|         `-BinaryOperator 0x55f5da4b0318 <col:32, col:49> 'int' '/'
|           |-ImplicitCastExpr 0x55f5da4b02e8 <col:32> 'int' <IntegralCast>
|           | `-DeclRefExpr 0x55f5da4b02a8 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f5da49ecc0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|           `-ImplicitCastExpr 0x55f5da4b0300 <col:49> 'int' <IntegralCast>
|             `-DeclRefExpr 0x55f5da4b02c8 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f5da49eb10 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55f5da4a28a8 <line:281:5, line:287:5> line:281:23 nsecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x55f5da4b0558 <col:39, line:287:5>
|   `-ReturnStmt 0x55f5da4b0548 <line:283:9, col:53>
|     `-BinaryOperator 0x55f5da4b0528 <col:16, col:53> 'long' '*'
|       |-ImplicitCastExpr 0x55f5da4b04f8 <col:16, col:19> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x55f5da4b0418 <col:16, col:19> 'const int64_t':'const long' lvalue .x 0x55f5da4a84b8
|       |   `-MemberExpr 0x55f5da4b03e8 <col:16> 'const Timestamp::rep_t' lvalue ->_t 0x55f5da4a9468
|       |     `-CXXThisExpr 0x55f5da4b03d8 <col:16> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x55f5da4b0510 <col:23, col:53> 'long' <IntegralCast>
|         `-ParenExpr 0x55f5da4b04d8 <col:23, col:53> 'int'
|           `-BinaryOperator 0x55f5da4b04b8 <col:24, col:39> 'int' '/'
|             |-ImplicitCastExpr 0x55f5da4b0488 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55f5da4b0448 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f5da49e960 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55f5da4b04a0 <col:39> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55f5da4b0468 <col:39> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f5da49ecc0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55f5da4a2998 <line:290:5, line:293:5> line:290:22 msec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x55f5da4b17f0 <col:40, line:293:5>
|   |-DeclStmt 0x55f5da4b06a0 <line:291:9, col:48>
|   | `-VarDecl 0x55f5da4b0580 <col:9, col:33> col:18 used x 'uint32_t':'unsigned int' cinit
|   |   `-BinaryOperator 0x55f5da4b0680 <col:22, col:33> 'unsigned int' '%'
|   |     |-CXXMemberCallExpr 0x55f5da4b0628 <col:22, col:29> 'uint32_t':'unsigned int'
|   |     | `-MemberExpr 0x55f5da4b05f8 <col:22> '<bound member function type>' ->subsec 0x55f5da4a1938
|   |     |   `-CXXThisExpr 0x55f5da4b05e8 <col:22> 'const Timestamp *' implicit this
|   |     `-ImplicitCastExpr 0x55f5da4b0668 <col:33> 'unsigned int' <IntegralCast>
|   |       `-DeclRefExpr 0x55f5da4b0648 <col:33> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f5da49ed90 'subsec_per_msec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x55f5da4b17e0 <line:292:9, col:70>
|     `-ExprWithCleanups 0x55f5da4b17c8 <col:16, col:70> 'Timestamp'
|       `-CXXConstructExpr 0x55f5da4b1798 <col:16, col:70> 'Timestamp' 'void (const Timestamp &) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55f5da4b1780 <col:16, col:70> 'const Timestamp' lvalue
|           `-ParenExpr 0x55f5da4b1760 <col:16, col:70> 'const Timestamp'
|             `-ConditionalOperator 0x55f5da4b1730 <col:17, col:66> 'const Timestamp'
|               |-ImplicitCastExpr 0x55f5da4b14c8 <col:17> 'bool' <IntegralToBoolean>
|               | `-ImplicitCastExpr 0x55f5da4b14b0 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|               |   `-DeclRefExpr 0x55f5da4b06b8 <col:17> 'uint32_t':'unsigned int' lvalue Var 0x55f5da4b0580 'x' 'uint32_t':'unsigned int'
|               |-CXXConstructExpr 0x55f5da4b16d0 <col:21, col:61> 'const Timestamp' 'void (const Timestamp &) noexcept' elidable
|               | `-MaterializeTemporaryExpr 0x55f5da4b16b8 <col:21, col:61> 'const Timestamp' lvalue
|               |   `-CXXConstructExpr 0x55f5da4b1688 <col:21, col:61> 'const Timestamp' 'void (Timestamp &&) noexcept' elidable
|               |     `-MaterializeTemporaryExpr 0x55f5da4b14e0 <col:21, col:61> 'Timestamp' xvalue
|               |       `-CXXOperatorCallExpr 0x55f5da4b1450 <col:21, col:61> 'Timestamp'
|               |         |-ImplicitCastExpr 0x55f5da4b1438 <col:27> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|               |         | `-DeclRefExpr 0x55f5da4b13e8 <col:27> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55f5da49e268 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|               |         |-CXXConstructExpr 0x55f5da4b1388 <col:21, col:22> 'Timestamp' 'void (const Timestamp &) noexcept'
|               |         | `-UnaryOperator 0x55f5da4b06e8 <col:21, col:22> 'const Timestamp' lvalue prefix '*' cannot overflow
|               |         |   `-CXXThisExpr 0x55f5da4b06d8 <col:22> 'const Timestamp *' this
|               |         `-MaterializeTemporaryExpr 0x55f5da4b13d0 <col:29, col:61> 'const Timestamp' lvalue
|               |           `-ImplicitCastExpr 0x55f5da4b13b8 <col:29, col:61> 'const Timestamp' <NoOp>
|               |             `-CXXTemporaryObjectExpr 0x55f5da4b0ba8 <col:29, col:61> 'Timestamp' 'void (int, uint32_t)'
|               |               |-IntegerLiteral 0x55f5da4b0710 <col:39> 'int' 0
|               |               `-BinaryOperator 0x55f5da4b07a0 <col:42, col:60> 'unsigned int' '-'
|               |                 |-ImplicitCastExpr 0x55f5da4b0770 <col:42> 'unsigned int' <IntegralCast>
|               |                 | `-DeclRefExpr 0x55f5da4b0730 <col:42> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f5da49ed90 'subsec_per_msec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|               |                 `-ImplicitCastExpr 0x55f5da4b0788 <col:60> 'uint32_t':'unsigned int' <LValueToRValue>
|               |                   `-DeclRefExpr 0x55f5da4b0750 <col:60> 'uint32_t':'unsigned int' lvalue Var 0x55f5da4b0580 'x' 'uint32_t':'unsigned int'
|               `-CXXConstructExpr 0x55f5da4b1700 <col:65, col:66> 'const Timestamp' 'void (const Timestamp &) noexcept'
|                 `-UnaryOperator 0x55f5da4b1498 <col:65, col:66> 'const Timestamp' lvalue prefix '*' cannot overflow
|                   `-CXXThisExpr 0x55f5da4b1488 <col:66> 'const Timestamp *' this
|-CXXMethodDecl 0x55f5da4a2a58 <line:295:5, line:302:5> line:295:22 usec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x55f5da4b1d48 <col:40, line:302:5>
|   |-DeclStmt 0x55f5da4b1940 <line:297:9, col:48>
|   | `-VarDecl 0x55f5da4b1820 <col:9, col:33> col:18 used x 'uint32_t':'unsigned int' cinit
|   |   `-BinaryOperator 0x55f5da4b1920 <col:22, col:33> 'unsigned int' '%'
|   |     |-CXXMemberCallExpr 0x55f5da4b18c8 <col:22, col:29> 'uint32_t':'unsigned int'
|   |     | `-MemberExpr 0x55f5da4b1898 <col:22> '<bound member function type>' ->subsec 0x55f5da4a1938
|   |     |   `-CXXThisExpr 0x55f5da4b1888 <col:22> 'const Timestamp *' implicit this
|   |     `-ImplicitCastExpr 0x55f5da4b1908 <col:33> 'unsigned int' <IntegralCast>
|   |       `-DeclRefExpr 0x55f5da4b18e8 <col:33> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f5da49ee60 'subsec_per_usec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x55f5da4b1d38 <line:298:9, col:70>
|     `-ExprWithCleanups 0x55f5da4b1d20 <col:16, col:70> 'Timestamp'
|       `-CXXConstructExpr 0x55f5da4b1cf0 <col:16, col:70> 'Timestamp' 'void (const Timestamp &) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55f5da4b1cd8 <col:16, col:70> 'const Timestamp' lvalue
|           `-ParenExpr 0x55f5da4b1cb8 <col:16, col:70> 'const Timestamp'
|             `-ConditionalOperator 0x55f5da4b1c88 <col:17, col:66> 'const Timestamp'
|               |-ImplicitCastExpr 0x55f5da4b1bb0 <col:17> 'bool' <IntegralToBoolean>
|               | `-ImplicitCastExpr 0x55f5da4b1b98 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|               |   `-DeclRefExpr 0x55f5da4b1958 <col:17> 'uint32_t':'unsigned int' lvalue Var 0x55f5da4b1820 'x' 'uint32_t':'unsigned int'
|               |-CXXConstructExpr 0x55f5da4b1c28 <col:21, col:61> 'const Timestamp' 'void (const Timestamp &) noexcept' elidable
|               | `-MaterializeTemporaryExpr 0x55f5da4b1c10 <col:21, col:61> 'const Timestamp' lvalue
|               |   `-CXXConstructExpr 0x55f5da4b1be0 <col:21, col:61> 'const Timestamp' 'void (Timestamp &&) noexcept' elidable
|               |     `-MaterializeTemporaryExpr 0x55f5da4b1bc8 <col:21, col:61> 'Timestamp' xvalue
|               |       `-CXXOperatorCallExpr 0x55f5da4b1b38 <col:21, col:61> 'Timestamp'
|               |         |-ImplicitCastExpr 0x55f5da4b1b20 <col:27> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|               |         | `-DeclRefExpr 0x55f5da4b1b00 <col:27> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55f5da49e268 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|               |         |-CXXConstructExpr 0x55f5da4b1aa0 <col:21, col:22> 'Timestamp' 'void (const Timestamp &) noexcept'
|               |         | `-UnaryOperator 0x55f5da4b1988 <col:21, col:22> 'const Timestamp' lvalue prefix '*' cannot overflow
|               |         |   `-CXXThisExpr 0x55f5da4b1978 <col:22> 'const Timestamp *' this
|               |         `-MaterializeTemporaryExpr 0x55f5da4b1ae8 <col:29, col:61> 'const Timestamp' lvalue
|               |           `-ImplicitCastExpr 0x55f5da4b1ad0 <col:29, col:61> 'const Timestamp' <NoOp>
|               |             `-CXXTemporaryObjectExpr 0x55f5da4b1a60 <col:29, col:61> 'Timestamp' 'void (int, uint32_t)'
|               |               |-IntegerLiteral 0x55f5da4b19b0 <col:39> 'int' 0
|               |               `-BinaryOperator 0x55f5da4b1a40 <col:42, col:60> 'unsigned int' '-'
|               |                 |-ImplicitCastExpr 0x55f5da4b1a10 <col:42> 'unsigned int' <IntegralCast>
|               |                 | `-DeclRefExpr 0x55f5da4b19d0 <col:42> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f5da49ee60 'subsec_per_usec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|               |                 `-ImplicitCastExpr 0x55f5da4b1a28 <col:60> 'uint32_t':'unsigned int' <LValueToRValue>
|               |                   `-DeclRefExpr 0x55f5da4b19f0 <col:60> 'uint32_t':'unsigned int' lvalue Var 0x55f5da4b1820 'x' 'uint32_t':'unsigned int'
|               `-CXXConstructExpr 0x55f5da4b1c58 <col:65, col:66> 'const Timestamp' 'void (const Timestamp &) noexcept'
|                 `-UnaryOperator 0x55f5da4b1b80 <col:65, col:66> 'const Timestamp' lvalue prefix '*' cannot overflow
|                   `-CXXThisExpr 0x55f5da4b1b70 <col:66> 'const Timestamp *' this
|-CXXMethodDecl 0x55f5da4a2b18 <line:304:5, line:306:5> line:304:22 nsec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x55f5da4b1dd0 <col:40, line:306:5>
|   `-ReturnStmt 0x55f5da4b1dc0 <line:305:9, col:17>
|     `-CXXConstructExpr 0x55f5da4b1d90 <col:16, col:17> 'Timestamp' 'void (const Timestamp &) noexcept'
|       `-UnaryOperator 0x55f5da4b1d78 <col:16, col:17> 'const Timestamp' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55f5da4b1d68 <col:17> 'const Timestamp *' this
|-CXXMethodDecl 0x55f5da4a2cb8 <line:310:5, col:65> col:29 make_jiffies 'Timestamp (click_jiffies_t)' static inline
| `-ParmVarDecl 0x55f5da4a2bc8 <col:42, col:58> col:58 jiffies 'click_jiffies_t':'unsigned int'
|-CXXMethodDecl 0x55f5da4a2e88 <line:312:5, col:76> col:29 make_jiffies 'Timestamp (click_jiffies_difference_t)' static inline
| `-ParmVarDecl 0x55f5da4a2d90 <col:42, col:69> col:69 jiffies 'click_jiffies_difference_t':'int'
|-CXXMethodDecl 0x55f5da4a2f78 <line:314:5, col:38> col:28 jiffies 'click_jiffies_t () const' inline
|-CXXMethodDecl 0x55f5da4a30e8 <line:318:5, line:320:5> line:318:29 make_sec 'Timestamp (Timestamp::seconds_type)' static inline
| |-ParmVarDecl 0x55f5da4a3028 <col:38, col:51> col:51 used sec 'Timestamp::seconds_type':'int'
| `-CompoundStmt 0x55f5da4b1f18 <col:56, line:320:5>
|   `-ReturnStmt 0x55f5da4b1f08 <line:319:9, col:32>
|     `-ExprWithCleanups 0x55f5da4b1ef0 <col:16, col:32> 'Timestamp'
|       `-CXXConstructExpr 0x55f5da4b1ec0 <col:16, col:32> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55f5da4b1ea8 <col:16, col:32> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55f5da4b1e68 <col:16, col:32> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x55f5da4b1e38 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x55f5da4b1df8 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55f5da4a3028 'sec' 'Timestamp::seconds_type':'int'
|             `-ImplicitCastExpr 0x55f5da4b1e50 <col:31> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x55f5da4b1e18 <col:31> 'int' 0
|-CXXMethodDecl 0x55f5da4a3328 <line:324:5, line:326:5> line:324:29 make_msec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x55f5da4a31a0 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55f5da4a3218 <col:57, col:66> col:66 used msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55f5da4b20e8 <col:72, line:326:5>
|   `-ReturnStmt 0x55f5da4b20d8 <line:325:9, col:51>
|     `-ExprWithCleanups 0x55f5da4b20c0 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x55f5da4b2090 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55f5da4b2078 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55f5da4b2038 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x55f5da4b2020 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x55f5da4b1f40 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55f5da4a31a0 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x55f5da4b1fe0 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x55f5da4b1fc8 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x55f5da4b1f60 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x55f5da4a7c10 'msec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x55f5da4b2008 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x55f5da4b1f80 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x55f5da4a3218 'msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f5da4a34d8 <line:328:5, line:337:5> line:328:29 used make_msec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x55f5da4a33e8 <col:39, col:50> col:50 used msec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x55f5da4b27b0 <col:56, line:337:5>
|   |-DeclStmt 0x55f5da4b23e8 <line:329:9, col:51>
|   | `-VarDecl 0x55f5da4b2110 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x55f5da4b23d0 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x55f5da4b23a0 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x55f5da4b2388 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x55f5da4b2370 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x55f5da4b2340 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x55f5da4b2328 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x55f5da4b2310 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x55f5da4b2200 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x55f5da4b25a0 <line:331:9, col:55> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x55f5da4b2450 <col:9, col:14> 'int64_t':'long' lvalue .x 0x55f5da4a84b8
|   | | `-MemberExpr 0x55f5da4b2420 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x55f5da4a9468
|   | |   `-DeclRefExpr 0x55f5da4b2400 <col:9> 'Timestamp' lvalue Var 0x55f5da4b2110 't' 'Timestamp'
|   | `-BinaryOperator 0x55f5da4b2580 <col:18, col:55> 'long' '*'
|   |   |-ImplicitCastExpr 0x55f5da4b2550 <col:18> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55f5da4b2480 <col:18> 'Timestamp::value_type':'long' lvalue ParmVar 0x55f5da4a33e8 'msec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x55f5da4b2568 <col:25, col:55> 'long' <IntegralCast>
|   |     `-ParenExpr 0x55f5da4b2530 <col:25, col:55> 'int'
|   |       `-BinaryOperator 0x55f5da4b2510 <col:26, col:43> 'int' '/'
|   |         |-ImplicitCastExpr 0x55f5da4b24e0 <col:26> 'int' <IntegralCast>
|   |         | `-DeclRefExpr 0x55f5da4b24a0 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f5da49ecc0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |         `-ImplicitCastExpr 0x55f5da4b24f8 <col:43> 'int' <IntegralCast>
|   |           `-DeclRefExpr 0x55f5da4b24c0 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f5da49ec30 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x55f5da4b2798 <line:336:9, col:16>
|     `-CXXConstructExpr 0x55f5da4b2768 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x55f5da4b2750 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x55f5da4b2730 <col:16> 'Timestamp' lvalue Var 0x55f5da4b2110 't' 'Timestamp'
|-CXXMethodDecl 0x55f5da4a36a0 <line:341:5, line:343:5> line:341:29 make_usec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x55f5da4a3590 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55f5da4a3608 <col:57, col:66> col:66 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55f5da4b2968 <col:72, line:343:5>
|   `-ReturnStmt 0x55f5da4b2958 <line:342:9, col:51>
|     `-ExprWithCleanups 0x55f5da4b2940 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x55f5da4b2910 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55f5da4b28f8 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55f5da4b28b8 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x55f5da4b28a0 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x55f5da4b27e8 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55f5da4a3590 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x55f5da4b2860 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x55f5da4b2848 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x55f5da4b2808 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x55f5da4a7d58 'usec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x55f5da4b2888 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x55f5da4b2828 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x55f5da4a3608 'usec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f5da4a37f0 <line:345:5, line:354:5> line:345:29 used make_usec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x55f5da4a3760 <col:39, col:50> col:50 used usec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x55f5da4b2db0 <col:56, line:354:5>
|   |-DeclStmt 0x55f5da4b2b58 <line:346:9, col:51>
|   | `-VarDecl 0x55f5da4b2990 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x55f5da4b2b40 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x55f5da4b2b10 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x55f5da4b2af8 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x55f5da4b2ae0 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x55f5da4b2ab0 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x55f5da4b2a98 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x55f5da4b2a80 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x55f5da4b2a50 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x55f5da4b2d10 <line:348:9, col:55> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x55f5da4b2bc0 <col:9, col:14> 'int64_t':'long' lvalue .x 0x55f5da4a84b8
|   | | `-MemberExpr 0x55f5da4b2b90 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x55f5da4a9468
|   | |   `-DeclRefExpr 0x55f5da4b2b70 <col:9> 'Timestamp' lvalue Var 0x55f5da4b2990 't' 'Timestamp'
|   | `-BinaryOperator 0x55f5da4b2cf0 <col:18, col:55> 'long' '*'
|   |   |-ImplicitCastExpr 0x55f5da4b2cc0 <col:18> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55f5da4b2bf0 <col:18> 'Timestamp::value_type':'long' lvalue ParmVar 0x55f5da4a3760 'usec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x55f5da4b2cd8 <col:25, col:55> 'long' <IntegralCast>
|   |     `-ParenExpr 0x55f5da4b2ca0 <col:25, col:55> 'int'
|   |       `-BinaryOperator 0x55f5da4b2c80 <col:26, col:43> 'int' '/'
|   |         |-ImplicitCastExpr 0x55f5da4b2c50 <col:26> 'int' <IntegralCast>
|   |         | `-DeclRefExpr 0x55f5da4b2c10 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f5da49ecc0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |         `-ImplicitCastExpr 0x55f5da4b2c68 <col:43> 'int' <IntegralCast>
|   |           `-DeclRefExpr 0x55f5da4b2c30 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f5da49eb10 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x55f5da4b2d98 <line:353:9, col:16>
|     `-CXXConstructExpr 0x55f5da4b2d68 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x55f5da4b2d50 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x55f5da4b2d30 <col:16> 'Timestamp' lvalue Var 0x55f5da4b2990 't' 'Timestamp'
|-CXXMethodDecl 0x55f5da4a39b8 <line:358:5, line:360:5> line:358:29 make_nsec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x55f5da4a38a8 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55f5da4a3920 <col:57, col:66> col:66 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55f5da4b2f68 <col:72, line:360:5>
|   `-ReturnStmt 0x55f5da4b2f58 <line:359:9, col:51>
|     `-ExprWithCleanups 0x55f5da4b2f40 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x55f5da4b2f10 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55f5da4b2ef8 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55f5da4b2eb8 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x55f5da4b2ea0 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x55f5da4b2de8 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55f5da4a38a8 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x55f5da4b2e60 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x55f5da4b2e48 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x55f5da4b2e08 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x55f5da4a7ea0 'nsec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x55f5da4b2e88 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x55f5da4b2e28 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x55f5da4a3920 'nsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f5da4a3b08 <line:362:5, line:371:5> line:362:29 make_nsec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x55f5da4a3a78 <col:39, col:50> col:50 used nsec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x55f5da4bf8d8 <col:56, line:371:5>
|   |-DeclStmt 0x55f5da4b3158 <line:363:9, col:51>
|   | `-VarDecl 0x55f5da4b2f90 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x55f5da4b3140 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x55f5da4b3110 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x55f5da4b30f8 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x55f5da4b30e0 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x55f5da4b30b0 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x55f5da4b3098 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x55f5da4b3080 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x55f5da4b3050 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x55f5da4bf838 <line:365:9, col:63> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x55f5da4b31c0 <col:9, col:14> 'int64_t':'long' lvalue .x 0x55f5da4a84b8
|   | | `-MemberExpr 0x55f5da4b3190 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x55f5da4a9468
|   | |   `-DeclRefExpr 0x55f5da4b3170 <col:9> 'Timestamp' lvalue Var 0x55f5da4b2f90 't' 'Timestamp'
|   | `-CallExpr 0x55f5da4bf7d8 <col:18, col:63> 'Timestamp::value_type':'long'
|   |   |-ImplicitCastExpr 0x55f5da4bf7c0 <col:18> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x55f5da4b31f0 <col:18> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x55f5da4a9798 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|   |   |-ImplicitCastExpr 0x55f5da4bf808 <col:28> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55f5da4b3210 <col:28> 'Timestamp::value_type':'long' lvalue ParmVar 0x55f5da4a3a78 'nsec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x55f5da4bf820 <col:34, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|   |     `-BinaryOperator 0x55f5da4bf7a0 <col:34, col:49> 'int' '/'
|   |       |-ImplicitCastExpr 0x55f5da4bf770 <col:34> 'int' <IntegralCast>
|   |       | `-DeclRefExpr 0x55f5da4b3230 <col:34> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f5da49e960 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |       `-ImplicitCastExpr 0x55f5da4bf788 <col:49> 'int' <IntegralCast>
|   |         `-DeclRefExpr 0x55f5da4b3250 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f5da49ecc0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x55f5da4bf8c0 <line:370:9, col:16>
|     `-CXXConstructExpr 0x55f5da4bf890 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x55f5da4bf878 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x55f5da4bf858 <col:16> 'Timestamp' lvalue Var 0x55f5da4b2f90 't' 'Timestamp'
|-CXXMethodDecl 0x55f5da4a3bf8 <line:375:5, line:377:5> line:375:29 epsilon 'Timestamp ()' static inline
| `-CompoundStmt 0x55f5da4bfa18 <col:39, line:377:5>
|   `-ReturnStmt 0x55f5da4bfa08 <line:376:9, col:30>
|     `-ExprWithCleanups 0x55f5da4bf9f0 <col:16, col:30> 'Timestamp'
|       `-CXXConstructExpr 0x55f5da4bf9c0 <col:16, col:30> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55f5da4bf9a8 <col:16, col:30> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55f5da4bf968 <col:16, col:30> 'Timestamp' 'void (int, uint32_t)'
|             |-IntegerLiteral 0x55f5da4bf910 <col:26> 'int' 0
|             `-ImplicitCastExpr 0x55f5da4bf950 <col:29> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x55f5da4bf930 <col:29> 'int' 1
|-CXXMethodDecl 0x55f5da4a3cb8 <line:380:5, line:382:5> line:380:17 clear 'void ()' inline
| `-CompoundStmt 0x55f5da4bfaf8 <col:25, line:382:5>
|   `-CXXMemberCallExpr 0x55f5da4bfab0 <line:381:9, col:20> 'void'
|     |-MemberExpr 0x55f5da4bfa40 <col:9> '<bound member function type>' ->assign 0x55f5da4a3eb8
|     | `-CXXThisExpr 0x55f5da4bfa30 <col:9> 'Timestamp *' implicit this
|     |-IntegerLiteral 0x55f5da4bfa70 <col:16> 'int' 0
|     `-ImplicitCastExpr 0x55f5da4bfae0 <col:19> 'uint32_t':'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x55f5da4bfa90 <col:19> 'int' 0
|-CXXMethodDecl 0x55f5da4a3eb8 <line:388:5, line:395:5> line:388:17 used assign 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55f5da4a3d68 <col:24, col:37> col:37 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55f5da4a3de0 <col:42, col:60> col:51 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55f5da4ab090 <col:60> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55f5da4ab070 <col:60> 'int' 0
| `-CompoundStmt 0x55f5da4bfcf0 <col:63, line:395:5>
|   `-BinaryOperator 0x55f5da4bfcd0 <line:390:9, col:49> 'int64_t':'long' lvalue '='
|     |-MemberExpr 0x55f5da4bfb50 <col:9, col:12> 'int64_t':'long' lvalue .x 0x55f5da4a84b8
|     | `-MemberExpr 0x55f5da4bfb20 <col:9> 'Timestamp::rep_t' lvalue ->_t 0x55f5da4a9468
|     |   `-CXXThisExpr 0x55f5da4bfb10 <col:9> 'Timestamp *' implicit this
|     `-BinaryOperator 0x55f5da4bfcb0 <col:16, col:49> 'long' '+'
|       |-BinaryOperator 0x55f5da4bfc40 <col:16, col:32> 'long' '*'
|       | |-CStyleCastExpr 0x55f5da4bfbe0 <col:16, col:26> 'int64_t':'long' <NoOp>
|       | | `-ImplicitCastExpr 0x55f5da4bfbc8 <col:26> 'int64_t':'long' <IntegralCast> part_of_explicit_cast
|       | |   `-ImplicitCastExpr 0x55f5da4bfbb0 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue> part_of_explicit_cast
|       | |     `-DeclRefExpr 0x55f5da4bfb80 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55f5da4a3d68 'sec' 'Timestamp::seconds_type':'int'
|       | `-ImplicitCastExpr 0x55f5da4bfc28 <col:32> 'long' <IntegralCast>
|       |   `-DeclRefExpr 0x55f5da4bfc08 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f5da49ecc0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|       `-ImplicitCastExpr 0x55f5da4bfc98 <col:49> 'long' <IntegralCast>
|         `-ImplicitCastExpr 0x55f5da4bfc80 <col:49> 'uint32_t':'unsigned int' <LValueToRValue>
|           `-DeclRefExpr 0x55f5da4bfc60 <col:49> 'uint32_t':'unsigned int' lvalue ParmVar 0x55f5da4a3de0 'subsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f5da4a4088 <line:397:5, line:399:5> line:397:17 used assign_usec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55f5da4a3f78 <col:29, col:42> col:42 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55f5da4a3ff0 <col:47, col:56> col:56 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55f5da4bfe48 <col:62, line:399:5>
|   `-CXXMemberCallExpr 0x55f5da4bfe00 <line:398:9, col:41> 'void'
|     |-MemberExpr 0x55f5da4bfd18 <col:9> '<bound member function type>' ->assign 0x55f5da4a3eb8
|     | `-CXXThisExpr 0x55f5da4bfd08 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55f5da4bfe30 <col:16> 'Timestamp::seconds_type':'int' <LValueToRValue>
|     | `-DeclRefExpr 0x55f5da4bfd48 <col:16> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55f5da4a3f78 'sec' 'Timestamp::seconds_type':'int'
|     `-CallExpr 0x55f5da4bfdc0 <col:21, col:40> 'uint32_t':'unsigned int'
|       |-ImplicitCastExpr 0x55f5da4bfda8 <col:21> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55f5da4bfd68 <col:21> 'uint32_t (uint32_t)' lvalue CXXMethod 0x55f5da4a7d58 'usec_to_subsec' 'uint32_t (uint32_t)'
|       `-ImplicitCastExpr 0x55f5da4bfde8 <col:36> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55f5da4bfd88 <col:36> 'uint32_t':'unsigned int' lvalue ParmVar 0x55f5da4a3ff0 'usec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f5da4a4258 <line:401:5, line:403:5> line:401:17 used assign_nsec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55f5da4a4148 <col:29, col:42> col:42 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55f5da4a41c0 <col:47, col:56> col:56 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55f5da4bffa0 <col:62, line:403:5>
|   `-CXXMemberCallExpr 0x55f5da4bff58 <line:402:9, col:41> 'void'
|     |-MemberExpr 0x55f5da4bfe70 <col:9> '<bound member function type>' ->assign 0x55f5da4a3eb8
|     | `-CXXThisExpr 0x55f5da4bfe60 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55f5da4bff88 <col:16> 'Timestamp::seconds_type':'int' <LValueToRValue>
|     | `-DeclRefExpr 0x55f5da4bfea0 <col:16> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55f5da4a4148 'sec' 'Timestamp::seconds_type':'int'
|     `-CallExpr 0x55f5da4bff18 <col:21, col:40> 'uint32_t':'unsigned int'
|       |-ImplicitCastExpr 0x55f5da4bff00 <col:21> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55f5da4bfec0 <col:21> 'uint32_t (uint32_t)' lvalue CXXMethod 0x55f5da4a7ea0 'nsec_to_subsec' 'uint32_t (uint32_t)'
|       `-ImplicitCastExpr 0x55f5da4bff40 <col:36> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55f5da4bfee0 <col:36> 'uint32_t':'unsigned int' lvalue ParmVar 0x55f5da4a41c0 'nsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f5da4a4428 <line:408:5, col:86> col:17 set 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55f5da4a4318 <col:21, col:34> col:34 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55f5da4a4390 <col:39, col:57> col:48 subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55f5da4ab0c8 <col:57> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55f5da4ab0a8 <col:57> 'int' 0
| `-DeprecatedAttr 0x55f5da4a44d8 <col:75> "" ""
|-CXXMethodDecl 0x55f5da4a4668 <line:411:5, col:85> col:17 set_usec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55f5da4a4558 <col:26, col:39> col:39 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55f5da4a45d0 <col:44, col:53> col:53 usec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55f5da4a4718 <col:74> "" ""
|-CXXMethodDecl 0x55f5da4a48a8 <line:414:5, col:85> col:17 set_nsec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55f5da4a4798 <col:26, col:39> col:39 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55f5da4a4810 <col:44, col:53> col:53 nsec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55f5da4a4958 <col:74> "" ""
|-CXXMethodDecl 0x55f5da4a49e8 <line:417:5, col:53> col:17 set_now 'void ()' inline
| `-DeprecatedAttr 0x55f5da4a4a88 <col:42> "" ""
|-CXXMethodDecl 0x55f5da4a72c0 <line:420:5, col:53> col:9 set_timeval_ioctl 'int (int, int)'
| |-ParmVarDecl 0x55f5da4a71a0 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x55f5da4a7220 <col:35, col:39> col:39 ioctl_selector 'int'
|-CXXMethodDecl 0x55f5da4a7390 <line:432:5, col:33> col:29 now 'Timestamp ()' static inline
|-CXXMethodDecl 0x55f5da4a7450 <line:438:5, col:56> col:45 used assign_now 'void ()'
| |-NoInlineAttr 0x55f5da4a74f0 <col:20>
| `-OptimizeNoneAttr 0x55f5da4a7548 <col:30>
|-CXXMethodDecl 0x55f5da4a7590 <line:446:5, col:36> col:29 used recent 'Timestamp ()' static inline
|-CXXMethodDecl 0x55f5da4a7650 <line:452:5, col:31> col:17 used assign_recent 'void ()' inline
|-CXXMethodDecl 0x55f5da4a7710 <line:466:5, col:40> col:29 now_steady 'Timestamp ()' static inline
|-CXXMethodDecl 0x55f5da4a77d0 <line:472:5, col:35> col:17 used assign_now_steady 'void ()' inline
|-CXXMethodDecl 0x55f5da4a7890 <line:481:5, col:43> col:29 used recent_steady 'Timestamp ()' static inline
|-CXXMethodDecl 0x55f5da4a7950 <line:487:5, col:38> col:17 used assign_recent_steady 'void ()' inline
|-CXXMethodDecl 0x55f5da4a7a10 <line:496:5, col:22> col:12 unparse 'String () const'
|-CXXMethodDecl 0x55f5da4a7ad0 <line:501:5, col:31> col:12 unparse_interval 'String () const'
|-CXXMethodDecl 0x55f5da4a7c10 <line:510:5, line:512:5> line:510:28 used msec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55f5da4a7b80 <col:43, col:52> col:52 used msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55f5da4c00e8 <col:58, line:512:5>
|   `-ReturnStmt 0x55f5da4c00d8 <line:511:9, col:53>
|     `-BinaryOperator 0x55f5da4c00b8 <col:16, col:53> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x55f5da4c0088 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55f5da4bffb8 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55f5da4a7b80 'msec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55f5da4c00a0 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55f5da4c0068 <col:23, col:53> 'int'
|           `-BinaryOperator 0x55f5da4c0048 <col:24, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x55f5da4c0018 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55f5da4bffd8 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f5da49ecc0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55f5da4c0030 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55f5da4bfff8 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f5da49ec30 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55f5da4a7d58 <line:514:5, line:516:5> line:514:28 used usec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55f5da4a7cc8 <col:43, col:52> col:52 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55f5da4c0230 <col:58, line:516:5>
|   `-ReturnStmt 0x55f5da4c0220 <line:515:9, col:53>
|     `-BinaryOperator 0x55f5da4c0200 <col:16, col:53> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x55f5da4c01d0 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55f5da4c0100 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55f5da4a7cc8 'usec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55f5da4c01e8 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55f5da4c01b0 <col:23, col:53> 'int'
|           `-BinaryOperator 0x55f5da4c0190 <col:24, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x55f5da4c0160 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55f5da4c0120 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f5da49ecc0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55f5da4c0178 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55f5da4c0140 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f5da49eb10 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55f5da4a7ea0 <line:518:5, line:520:5> line:518:28 used nsec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55f5da4a7e10 <col:43, col:52> col:52 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55f5da4c0378 <col:58, line:520:5>
|   `-ReturnStmt 0x55f5da4c0368 <line:519:9, col:53>
|     `-BinaryOperator 0x55f5da4c0348 <col:16, col:53> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x55f5da4c0318 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55f5da4c0248 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55f5da4a7e10 'nsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55f5da4c0330 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55f5da4c02f8 <col:23, col:53> 'int'
|           `-BinaryOperator 0x55f5da4c02d8 <col:24, col:39> 'int' '/'
|             |-ImplicitCastExpr 0x55f5da4c02a8 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55f5da4c0268 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f5da49e960 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55f5da4c02c0 <col:39> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55f5da4c0288 <col:39> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f5da49ecc0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55f5da4a7fe8 <line:522:5, line:524:5> line:522:28 used subsec_to_msec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55f5da4a7f58 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55f5da4c04c0 <col:60, line:524:5>
|   `-ReturnStmt 0x55f5da4c04b0 <line:523:9, col:55>
|     `-BinaryOperator 0x55f5da4c0490 <col:16, col:55> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x55f5da4c0460 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55f5da4c0390 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55f5da4a7f58 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55f5da4c0478 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55f5da4c0440 <col:25, col:55> 'int'
|           `-BinaryOperator 0x55f5da4c0420 <col:26, col:43> 'int' '/'
|             |-ImplicitCastExpr 0x55f5da4c03f0 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55f5da4c03b0 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f5da49ecc0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55f5da4c0408 <col:43> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55f5da4c03d0 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f5da49ec30 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55f5da4a8130 <line:526:5, line:528:5> line:526:28 used subsec_to_usec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55f5da4a80a0 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55f5da4c0608 <col:60, line:528:5>
|   `-ReturnStmt 0x55f5da4c05f8 <line:527:9, col:55>
|     `-BinaryOperator 0x55f5da4c05d8 <col:16, col:55> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x55f5da4c05a8 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55f5da4c04d8 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55f5da4a80a0 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55f5da4c05c0 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55f5da4c0588 <col:25, col:55> 'int'
|           `-BinaryOperator 0x55f5da4c0568 <col:26, col:43> 'int' '/'
|             |-ImplicitCastExpr 0x55f5da4c0538 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55f5da4c04f8 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f5da49ecc0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55f5da4c0550 <col:43> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55f5da4c0518 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f5da49eb10 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55f5da4a8278 <line:530:5, line:532:5> line:530:28 used subsec_to_nsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55f5da4a81e8 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55f5da4c0750 <col:60, line:532:5>
|   `-ReturnStmt 0x55f5da4c0740 <line:531:9, col:55>
|     `-BinaryOperator 0x55f5da4c0720 <col:16, col:55> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x55f5da4c06f0 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55f5da4c0620 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55f5da4a81e8 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55f5da4c0708 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55f5da4c06d0 <col:25, col:55> 'int'
|           `-BinaryOperator 0x55f5da4c06b0 <col:26, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x55f5da4c0680 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55f5da4c0640 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f5da49e960 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55f5da4c0698 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55f5da4c0660 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f5da49ecc0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXRecordDecl 0x55f5da4a8320 prev 0x55f5da49f160 <line:539:5, line:566:5> line:539:11 referenced union rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55f5da4a8418 <col:5, col:11> col:11 implicit union rep_t
| |-FieldDecl 0x55f5da4a84b8 <line:541:9, col:17> col:17 referenced x 'int64_t':'long'
| |-CXXConstructorDecl 0x55f5da4af280 <line:539:11> col:11 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55f5da4af668 <col:11>
| |-CXXConstructorDecl 0x55f5da4af360 <col:11> col:11 implicit used constexpr rep_t 'void (const Timestamp::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55f5da4af448 <col:11> col:11 'const Timestamp::rep_t &'
| | `-CompoundStmt 0x55f5da4afdb0 <col:11>
| |-CXXConstructorDecl 0x55f5da4af4e8 <col:11> col:11 implicit used constexpr rep_t 'void (Timestamp::rep_t &&) noexcept' inline default trivial
| | |-ParmVarDecl 0x55f5da4af5f8 <col:11> col:11 'Timestamp::rep_t &&'
| | `-CompoundStmt 0x55f5da4b1608 <col:11>
| |-CXXDestructorDecl 0x55f5da4b0918 <col:11> col:11 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x55f5da1b74c8 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(const Timestamp::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55f5da1b75d8 <col:11> col:11 'const Timestamp::rep_t &'
| | `-CompoundStmt 0x55f5da1b7ea0 <col:11>
| |   `-ReturnStmt 0x55f5da1b7e90 <col:11>
| |     `-UnaryOperator 0x55f5da1b7e78 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x55f5da1b7e68 <col:11> 'Timestamp::rep_t *' this
| `-CXXMethodDecl 0x55f5da1b7648 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(Timestamp::rep_t &&) noexcept' inline default trivial
|   |-ParmVarDecl 0x55f5da1b7758 <col:11> col:11 'Timestamp::rep_t &&'
|   `-CompoundStmt 0x55f5da549d40 <col:11>
|     `-ReturnStmt 0x55f5da549d30 <col:11>
|       `-UnaryOperator 0x55f5da549d18 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55f5da549d08 <col:11> 'Timestamp::rep_t *' this
|-EnumDecl 0x55f5da4a8520 <line:571:5, line:577:5> line:571:10 referenced warp_class_type
| |-EnumConstantDecl 0x55f5da4a8620 <line:572:9, col:21> col:9 warp_none 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x55f5da4a8820 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f5da4a8600 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x55f5da4a85e0 <col:21> 'int' 0
| |-EnumConstantDecl 0x55f5da4a86b0 <line:573:9, col:23> col:9 warp_linear 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x55f5da4a8838 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f5da4a8690 <col:23> 'int' Int: 1
| |     `-IntegerLiteral 0x55f5da4a8670 <col:23> 'int' 1
| |-EnumConstantDecl 0x55f5da4a8740 <line:574:9, col:23> col:9 referenced warp_nowait 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x55f5da4a8850 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f5da4a8720 <col:23> 'int' Int: 2
| |     `-IntegerLiteral 0x55f5da4a8700 <col:23> 'int' 2
| `-EnumConstantDecl 0x55f5da4a87d0 <line:576:9, col:27> col:9 warp_simulation 'Timestamp::warp_class_type'
|   `-ImplicitCastExpr 0x55f5da4a8868 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55f5da4a87b0 <col:27> 'int' Int: 3
|       `-IntegerLiteral 0x55f5da4a8790 <col:27> 'int' 3
|-CXXMethodDecl 0x55f5da4a88a8 <line:581:5, col:34> col:23 warp_class 'int ()' static inline
|-CXXMethodDecl 0x55f5da4a8970 <line:588:5, col:37> col:26 warp_speed 'double ()' static inline
|-CXXMethodDecl 0x55f5da4a8b78 <line:621:5, col:65> col:17 warp_set_class 'void (Timestamp::warp_class_type, double)' static
| |-ParmVarDecl 0x55f5da4a8a20 <col:32, col:48> col:48 w 'Timestamp::warp_class_type'
| `-ParmVarDecl 0x55f5da4a8aa0 <col:51, col:62> col:58 s 'double' cinit
|   `-FloatingLiteral 0x55f5da4ab0e0 <col:62> 'double' 1.000000e+00
|-CXXMethodDecl 0x55f5da4a8d88 <line:628:5, col:82> col:17 warp_set_now 'void (const Timestamp &, const Timestamp &)' static
| |-ParmVarDecl 0x55f5da4a8c38 <col:30, col:47> col:47 t_system 'const Timestamp &'
| `-ParmVarDecl 0x55f5da4a8cb0 <col:57, col:74> col:74 t_steady 'const Timestamp &'
|-CXXMethodDecl 0x55f5da4a8e58 <line:632:5, col:40> col:22 warp_real_delay 'Timestamp () const' inline
|-CXXMethodDecl 0x55f5da4a8f18 <line:635:5, col:37> col:24 used warp_jumping 'bool ()' static inline
|-CXXMethodDecl 0x55f5da4a9088 <line:640:5, col:57> col:17 warp_jump_steady 'void (const Timestamp &)' static
| `-ParmVarDecl 0x55f5da4a8fc8 <col:34, col:51> col:51 expiry 'const Timestamp &'
|-CXXMethodDecl 0x55f5da4a9150 <line:647:5, col:42> col:29 now_unwarped 'Timestamp ()' static inline
|-CXXMethodDecl 0x55f5da4a9210 <line:653:5, col:37> col:17 used assign_now_unwarped 'void ()' inline
|-CXXMethodDecl 0x55f5da4a92d0 <line:659:5, col:49> col:29 now_steady_unwarped 'Timestamp ()' static inline
|-CXXMethodDecl 0x55f5da4a9390 <line:666:5, col:44> col:17 used assign_now_steady_unwarped 'void ()' inline
|-AccessSpecDecl 0x55f5da4a9430 <line:670:3, col:10> col:3 private
|-FieldDecl 0x55f5da4a9468 <line:672:5, col:11> col:11 referenced _t 'Timestamp::rep_t'
|-CXXMethodDecl 0x55f5da4a94d8 <line:674:5, line:684:5> line:674:17 used add_fix 'void ()' inline
| `-CompoundStmt 0x55f5da4c0768 <col:27, line:684:5>
|-CXXMethodDecl 0x55f5da4a9598 <line:686:5, line:696:5> line:686:17 used sub_fix 'void ()' inline
| `-CompoundStmt 0x55f5da4c0778 <col:27, line:696:5>
|-CXXMethodDecl 0x55f5da4a9798 <line:698:5, line:700:5> line:698:30 used value_div 'Timestamp::value_type (Timestamp::value_type, uint32_t)' static inline
| |-ParmVarDecl 0x55f5da4a9648 <col:40, col:51> col:51 used a 'Timestamp::value_type':'long'
| |-ParmVarDecl 0x55f5da4a96c0 <col:54, col:63> col:63 used b 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55f5da4c0900 <col:66, line:700:5>
|   `-ReturnStmt 0x55f5da4c08f0 <line:699:9, col:31>
|     `-CallExpr 0x55f5da4c0890 <col:16, col:31> 'int64_t':'long'
|       |-ImplicitCastExpr 0x55f5da4c0878 <col:16> 'int64_t (*)(int64_t, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55f5da4c0828 <col:16> 'int64_t (int64_t, uint32_t)' lvalue Function 0x55f5da32bb48 'int_divide' 'int64_t (int64_t, uint32_t)'
|       |-ImplicitCastExpr 0x55f5da4c08c0 <col:27> 'Timestamp::value_type':'long' <LValueToRValue>
|       | `-DeclRefExpr 0x55f5da4c07e8 <col:27> 'Timestamp::value_type':'long' lvalue ParmVar 0x55f5da4a9648 'a' 'Timestamp::value_type':'long'
|       `-ImplicitCastExpr 0x55f5da4c08d8 <col:30> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55f5da4c0808 <col:30> 'uint32_t':'unsigned int' lvalue ParmVar 0x55f5da4a96c0 'b' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f5da4a9b08 <line:702:5, line:707:5> line:702:24 value_div_mod 'void (int32_t &, int32_t &, Timestamp::value_type, uint32_t)' static inline
| |-ParmVarDecl 0x55f5da4a9858 <col:38, col:47> col:47 used div 'int32_t &'
| |-ParmVarDecl 0x55f5da4a98d0 <col:52, col:61> col:61 used rem 'int32_t &'
| |-ParmVarDecl 0x55f5da4a9948 <line:703:38, col:49> col:49 used a 'Timestamp::value_type':'long'
| |-ParmVarDecl 0x55f5da4a99c0 <col:52, col:61> col:61 used b 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55f5da4c0c50 <col:64, line:707:5>
|   |-DeclStmt 0x55f5da4c0990 <line:704:9, col:24>
|   | `-VarDecl 0x55f5da4c0928 <col:9, col:20> col:20 used quot 'Timestamp::value_type':'long'
|   |-BinaryOperator 0x55f5da4c0ba0 <line:705:9, col:39> 'int32_t':'int' lvalue '='
|   | |-DeclRefExpr 0x55f5da4c09a8 <col:9> 'int32_t':'int' lvalue ParmVar 0x55f5da4a98d0 'rem' 'int32_t &'
|   | `-ImplicitCastExpr 0x55f5da4c0b88 <col:15, col:39> 'int32_t':'int' <IntegralCast>
|   |   `-CallExpr 0x55f5da4c0b20 <col:15, col:39> 'uint32_t':'unsigned int'
|   |     |-ImplicitCastExpr 0x55f5da4c0b08 <col:15> 'uint32_t (*)(int64_t, uint32_t, int64_t &)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55f5da4c0a88 <col:15> 'uint32_t (int64_t, uint32_t, int64_t &)' lvalue Function 0x55f5da330e18 'int_remainder' 'uint32_t (int64_t, uint32_t, int64_t &)'
|   |     |-ImplicitCastExpr 0x55f5da4c0b58 <col:29> 'Timestamp::value_type':'long' <LValueToRValue>
|   |     | `-DeclRefExpr 0x55f5da4c0a28 <col:29> 'Timestamp::value_type':'long' lvalue ParmVar 0x55f5da4a9948 'a' 'Timestamp::value_type':'long'
|   |     |-ImplicitCastExpr 0x55f5da4c0b70 <col:32> 'uint32_t':'unsigned int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x55f5da4c0a48 <col:32> 'uint32_t':'unsigned int' lvalue ParmVar 0x55f5da4a99c0 'b' 'uint32_t':'unsigned int'
|   |     `-DeclRefExpr 0x55f5da4c0a68 <col:35> 'Timestamp::value_type':'long' lvalue Var 0x55f5da4c0928 'quot' 'Timestamp::value_type':'long'
|   `-BinaryOperator 0x55f5da4c0c30 <line:706:9, col:15> 'int32_t':'int' lvalue '='
|     |-DeclRefExpr 0x55f5da4c0bc0 <col:9> 'int32_t':'int' lvalue ParmVar 0x55f5da4a9858 'div' 'int32_t &'
|     `-ImplicitCastExpr 0x55f5da4c0c18 <col:15> 'int32_t':'int' <IntegralCast>
|       `-ImplicitCastExpr 0x55f5da4c0c00 <col:15> 'Timestamp::value_type':'long' <LValueToRValue>
|         `-DeclRefExpr 0x55f5da4c0be0 <col:15> 'Timestamp::value_type':'long' lvalue Var 0x55f5da4c0928 'quot' 'Timestamp::value_type':'long'
|-CXXMethodDecl 0x55f5da4a9da8 <line:709:5, col:67> col:17 used assign_now 'void (bool, bool, bool)' inline
| |-ParmVarDecl 0x55f5da4a9bd8 <col:28, col:33> col:33 recent 'bool'
| |-ParmVarDecl 0x55f5da4a9c50 <col:41, col:46> col:46 steady 'bool'
| `-ParmVarDecl 0x55f5da4a9cc8 <col:54, col:59> col:59 unwarped 'bool'
|-CXXMethodDecl 0x55f5da4aa048 <line:712:5, col:98> col:24 warp_adjust 'void (bool, const Timestamp &, const Timestamp &)' static inline
| |-ParmVarDecl 0x55f5da4a9e70 <col:36, col:41> col:41 steady 'bool'
| |-ParmVarDecl 0x55f5da4a9ee8 <col:49, col:66> col:66 t_raw 'const Timestamp &'
| `-ParmVarDecl 0x55f5da4a9f60 <col:73, col:90> col:90 t_warped 'const Timestamp &'
|-CXXMethodDecl 0x55f5da4aa1d8 <line:713:5, col:42> col:22 warped 'Timestamp (bool) const' inline
| `-ParmVarDecl 0x55f5da4aa110 <col:29, col:34> col:34 steady 'bool'
|-CXXMethodDecl 0x55f5da4aa3d8 <line:714:5, col:41> col:10 used warp 'void (bool, bool)'
| |-ParmVarDecl 0x55f5da4aa290 <col:15, col:20> col:20 steady 'bool'
| `-ParmVarDecl 0x55f5da4aa308 <col:28, col:33> col:33 from_now 'bool'
|-FriendDecl 0x55f5da4aa6a8 <line:717:5, col:73> col:24
| `-FunctionDecl 0x55f5da4aa5e8 parent 0x55f5d9fa92b8 <col:5, col:73> col:24 used operator== 'bool (const Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x55f5da4aa498 <col:35, col:52> col:52 a 'const Timestamp &'
|   `-ParmVarDecl 0x55f5da4aa510 <col:55, col:72> col:72 b 'const Timestamp &'
|-FriendDecl 0x55f5da4aa8c8 <line:718:5, col:72> col:24
| `-FunctionDecl 0x55f5da4aa808 parent 0x55f5d9fa92b8 <col:5, col:72> col:24 used operator< 'bool (const Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x55f5da4aa6f8 <col:34, col:51> col:51 a 'const Timestamp &'
|   `-ParmVarDecl 0x55f5da4aa770 <col:54, col:71> col:71 b 'const Timestamp &'
|-FriendDecl 0x55f5da4aaa90 <line:719:5, col:57> col:29
| `-FunctionDecl 0x55f5da4aa9d8 parent 0x55f5d9fa92b8 <col:5, col:57> col:29 operator- 'Timestamp (const Timestamp &)' inline
|   `-ParmVarDecl 0x55f5da4aa918 <col:39, col:56> col:56 b 'const Timestamp &'
|-FriendDecl 0x55f5da4aad18 <line:720:5, col:73> col:30
| `-FunctionDecl 0x55f5da4aac58 parent 0x55f5d9fa92b8 <col:5, col:73> col:30 used operator+= 'Timestamp &(Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x55f5da4aab08 <col:41, col:52> col:52 a 'Timestamp &'
|   `-ParmVarDecl 0x55f5da4aab80 <col:55, col:72> col:72 b 'const Timestamp &'
|-FriendDecl 0x55f5da4aaf38 <line:721:5, col:73> col:30
| `-FunctionDecl 0x55f5da4aae78 parent 0x55f5d9fa92b8 <col:5, col:73> col:30 used operator-= 'Timestamp &(Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x55f5da4aad68 <col:41, col:52> col:52 a 'Timestamp &'
|   `-ParmVarDecl 0x55f5da4aade0 <col:55, col:72> col:72 b 'const Timestamp &'
|-CXXConstructorDecl 0x55f5da4b07c0 <line:122:7> col:7 implicit used constexpr Timestamp 'void (const Timestamp &) noexcept' inline default trivial
| |-ParmVarDecl 0x55f5da4b08a8 <col:7> col:7 used 'const Timestamp &'
| |-CXXCtorInitializer Field 0x55f5da4a9468 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55f5da4b1318 <col:7> 'Timestamp::rep_t' 'void (const Timestamp::rep_t &) noexcept'
| |   `-MemberExpr 0x55f5da4b12d0 <col:7> 'const Timestamp::rep_t' lvalue ._t 0x55f5da4a9468
| |     `-DeclRefExpr 0x55f5da4b12b0 <col:7> 'const Timestamp' lvalue ParmVar 0x55f5da4b08a8 '' 'const Timestamp &'
| `-CompoundStmt 0x55f5da4b1378 <col:7>
|-CXXConstructorDecl 0x55f5da4b0a28 <col:7> col:7 implicit used constexpr Timestamp 'void (Timestamp &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55f5da4b0b38 <col:7> col:7 used 'Timestamp &&'
| |-CXXCtorInitializer Field 0x55f5da4a9468 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55f5da4b1618 <col:7> 'Timestamp::rep_t' 'void (Timestamp::rep_t &&) noexcept'
| |   `-MemberExpr 0x55f5da4b15c0 <col:7> 'Timestamp::rep_t' xvalue ._t 0x55f5da4a9468
| |     `-CXXStaticCastExpr 0x55f5da4b1590 <col:7> 'Timestamp' xvalue static_cast<class Timestamp &&> <NoOp>
| |       `-DeclRefExpr 0x55f5da4b1560 <col:7> 'Timestamp' lvalue ParmVar 0x55f5da4b0b38 '' 'Timestamp &&'
| `-CompoundStmt 0x55f5da4b1678 <col:7>
|-CXXDestructorDecl 0x55f5da4b0be8 <col:7> col:7 implicit referenced ~Timestamp 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55f5da1b7318 <col:7> col:7 implicit used operator= 'Timestamp &(const Timestamp &) noexcept' inline default trivial
| |-ParmVarDecl 0x55f5da1b7428 <col:7> col:7 used 'const Timestamp &'
| `-CompoundStmt 0x55f5da1b7f18 <col:7>
|   |-CXXMemberCallExpr 0x55f5da1b7eb8 <col:7> 'Timestamp::rep_t' lvalue
|   | |-MemberExpr 0x55f5da1b7df8 <col:7> '<bound member function type>' .operator= 0x55f5da1b74c8
|   | | `-MemberExpr 0x55f5da1b7d08 <col:7> 'Timestamp::rep_t' lvalue ->_t 0x55f5da4a9468
|   | |   `-CXXThisExpr 0x55f5da1b7cf8 <col:7> 'Timestamp *' this
|   | `-MemberExpr 0x55f5da1b7dc8 <col:7> 'const Timestamp::rep_t' lvalue ._t 0x55f5da4a9468
|   |   `-DeclRefExpr 0x55f5da1b7da8 <col:7> 'const Timestamp' lvalue ParmVar 0x55f5da1b7428 '' 'const Timestamp &'
|   `-ReturnStmt 0x55f5da1b7f08 <col:7>
|     `-UnaryOperator 0x55f5da1b7ef0 <col:7> 'Timestamp' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55f5da1b7ee0 <col:7> 'Timestamp *' this
`-CXXMethodDecl 0x55f5da1b77c8 <col:7> col:7 implicit used operator= 'Timestamp &(Timestamp &&) noexcept' inline default trivial
  |-ParmVarDecl 0x55f5da1b78d8 <col:7> col:7 used 'Timestamp &&'
  `-CompoundStmt 0x55f5da549db8 <col:7>
    |-CXXMemberCallExpr 0x55f5da549d58 <col:7> 'Timestamp::rep_t' lvalue
    | |-MemberExpr 0x55f5da549cc0 <col:7> '<bound member function type>' .operator= 0x55f5da1b7648
    | | `-MemberExpr 0x55f5da549b90 <col:7> 'Timestamp::rep_t' lvalue ->_t 0x55f5da4a9468
    | |   `-CXXThisExpr 0x55f5da549b80 <col:7> 'Timestamp *' this
    | `-MemberExpr 0x55f5da549c90 <col:7> 'Timestamp::rep_t' xvalue ._t 0x55f5da4a9468
    |   `-CXXStaticCastExpr 0x55f5da549c60 <col:7> 'Timestamp' xvalue static_cast<class Timestamp &&> <NoOp>
    |     `-DeclRefExpr 0x55f5da549c30 <col:7> 'Timestamp' lvalue ParmVar 0x55f5da1b78d8 '' 'Timestamp &&'
    `-ReturnStmt 0x55f5da549da8 <col:7>
      `-UnaryOperator 0x55f5da549d90 <col:7> 'Timestamp' lvalue prefix '*' cannot overflow
        `-CXXThisExpr 0x55f5da549d80 <col:7> 'Timestamp *' this

Layout: <CGRecordLayout
  LLVMType:%class.Timestamp = type { %"union.Timestamp::rep_t" }
  NonVirtualBaseLLVMType:%class.Timestamp = type { %"union.Timestamp::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55f5da54d3c8 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'TimerSet::heap_element'
|-CXXRecordDecl 0x55f5da54d5d8 prev 0x55f5da54d3c8 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55f5da54ea20 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<heap_element>::type':'sized_array_memory<16>'
| `-ElaboratedType 0x55f5da54e9d0 'typename array_memory<heap_element>::type' sugar
|   `-TypedefType 0x55f5da54e9b0 'conditional<true, sized_array_memory<16>, typed_array_memory<TimerSet::heap_element> >::type' sugar
|     |-Typedef 0x55f5da54e860 'type'
|     `-SubstTemplateTypeParmType 0x55f5da54e680 'sized_array_memory<16>' sugar
|       |-TemplateTypeParmType 0x55f5da273cd0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f5da273c78 'T'
|       `-RecordType 0x55f5da54e1d0 'sized_array_memory<16>'
|         `-ClassTemplateSpecialization 0x55f5da54e0e8 'sized_array_memory'
|-FieldDecl 0x55f5da556480 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<TimerSet::heap_element>::array_memory_type>':'vector_memory<sized_array_memory<16> >' mutable
|-AccessSpecDecl 0x55f5da5564d0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55f5da556508 <line:118:5, col:15> col:15 value_type 'TimerSet::heap_element':'TimerSet::heap_element'
| `-SubstTemplateTypeParmType 0x55f5da54d670 'TimerSet::heap_element' sugar
|   |-TemplateTypeParmType 0x55f5da2ab9c0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55f5da2ab968 'T'
|   `-RecordType 0x55f5da54c5d0 'TimerSet::heap_element'
|     `-CXXRecord 0x55f5da54c540 'heap_element'
|-TypedefDecl 0x55f5da5565c8 <line:119:5, col:16> col:16 reference 'TimerSet::heap_element &'
| `-LValueReferenceType 0x55f5da556590 'TimerSet::heap_element &'
|   `-SubstTemplateTypeParmType 0x55f5da54d670 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x55f5da2ab9c0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55f5da2ab968 'T'
|     `-RecordType 0x55f5da54c5d0 'TimerSet::heap_element'
|       `-CXXRecord 0x55f5da54c540 'heap_element'
|-TypedefDecl 0x55f5da556658 <line:120:5, col:22> col:22 const_reference 'const TimerSet::heap_element &'
| `-LValueReferenceType 0x55f5da556620 'const TimerSet::heap_element &'
|   `-QualType 0x55f5da54d671 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x55f5da54d670 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x55f5da2ab9c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f5da2ab968 'T'
|       `-RecordType 0x55f5da54c5d0 'TimerSet::heap_element'
|         `-CXXRecord 0x55f5da54c540 'heap_element'
|-TypedefDecl 0x55f5da5566e8 <line:121:5, col:16> col:16 pointer 'TimerSet::heap_element *'
| `-PointerType 0x55f5da5566b0 'TimerSet::heap_element *'
|   `-SubstTemplateTypeParmType 0x55f5da54d670 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x55f5da2ab9c0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55f5da2ab968 'T'
|     `-RecordType 0x55f5da54c5d0 'TimerSet::heap_element'
|       `-CXXRecord 0x55f5da54c540 'heap_element'
|-TypedefDecl 0x55f5da5567a8 <line:122:5, col:22> col:22 const_pointer 'const TimerSet::heap_element *'
| `-PointerType 0x55f5da556770 'const TimerSet::heap_element *'
|   `-QualType 0x55f5da54d671 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x55f5da54d670 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x55f5da2ab9c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f5da2ab968 'T'
|       `-RecordType 0x55f5da54c5d0 'TimerSet::heap_element'
|         `-CXXRecord 0x55f5da54c540 'heap_element'
|-TypedefDecl 0x55f5da557610 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<heap_element>::type':'const TimerSet::heap_element &'
| `-ElaboratedType 0x55f5da5575c0 'typename fast_argument<heap_element>::type' sugar
|   `-TypedefType 0x55f5da5575a0 'fast_argument<TimerSet::heap_element, true>::type' sugar
|     |-Typedef 0x55f5da5574d8 'type'
|     `-LValueReferenceType 0x55f5da5574a0 'const TimerSet::heap_element &'
|       `-QualType 0x55f5da557241 'const TimerSet::heap_element' const
|         `-SubstTemplateTypeParmType 0x55f5da557240 'TimerSet::heap_element' sugar
|           |-TemplateTypeParmType 0x55f5da27e3a0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55f5da27e348 'T'
|           `-RecordType 0x55f5da54c5d0 'TimerSet::heap_element'
|             `-CXXRecord 0x55f5da54c540 'heap_element'
|-TypedefDecl 0x55f5da557678 <line:126:5, col:22> col:22 const_access_type 'const TimerSet::heap_element &'
| `-LValueReferenceType 0x55f5da556620 'const TimerSet::heap_element &'
|   `-QualType 0x55f5da54d671 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x55f5da54d670 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x55f5da2ab9c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f5da2ab968 'T'
|       `-RecordType 0x55f5da54c5d0 'TimerSet::heap_element'
|         `-CXXRecord 0x55f5da54c540 'heap_element'
|-TypedefDecl 0x55f5da5576d0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55f5d9fa93b0 'int'
|-TypedefDecl 0x55f5da557738 <line:130:5, col:16> col:16 iterator 'TimerSet::heap_element *'
| `-PointerType 0x55f5da5566b0 'TimerSet::heap_element *'
|   `-SubstTemplateTypeParmType 0x55f5da54d670 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x55f5da2ab9c0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55f5da2ab968 'T'
|     `-RecordType 0x55f5da54c5d0 'TimerSet::heap_element'
|       `-CXXRecord 0x55f5da54c540 'heap_element'
|-TypedefDecl 0x55f5da5577a0 <line:131:5, col:22> col:22 const_iterator 'const TimerSet::heap_element *'
| `-PointerType 0x55f5da556770 'const TimerSet::heap_element *'
|   `-QualType 0x55f5da54d671 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x55f5da54d670 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x55f5da2ab9c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f5da2ab968 'T'
|       `-RecordType 0x55f5da54c5d0 'TimerSet::heap_element'
|         `-CXXRecord 0x55f5da54c540 'heap_element'
|-EnumDecl 0x55f5da5577f8 <line:134:5> col:5
| `-EnumConstantDecl 0x55f5da5578f0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<TimerSet::heap_element>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55f5da5578d0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55f5da2ad048 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55f5da2ad020 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55f5da2ad000 <col:40> 'int' 1
|-CXXConstructorDecl 0x55f5da557978 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55f5da557c08 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x55f5da557a30 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55f5da557ad0 <col:41, col:61> col:61 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXConstructorDecl 0x55f5da557ec8 <line:139:5, col:37> col:12 Vector 'void (const Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x55f5da557db0 <col:19, col:36> col:36 x 'const Vector<TimerSet::heap_element> &'
|-CXXConstructorDecl 0x55f5da558188 <line:141:5, col:32> col:12 Vector 'void (Vector<TimerSet::heap_element> &&)' inline
| `-ParmVarDecl 0x55f5da558070 <col:19, col:31> col:31 x 'Vector<TimerSet::heap_element> &&'
|-CXXMethodDecl 0x55f5da5584d0 <line:144:5, col:51> col:23 operator= 'Vector<TimerSet::heap_element> &(const Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x55f5da5583b0 <col:33, col:50> col:50 x 'const Vector<TimerSet::heap_element> &'
|-CXXMethodDecl 0x55f5da5587e0 <line:146:5, col:46> col:23 operator= 'Vector<TimerSet::heap_element> &(Vector<TimerSet::heap_element> &&)' inline
| `-ParmVarDecl 0x55f5da5586c0 <col:33, col:45> col:45 x 'Vector<TimerSet::heap_element> &&'
|-CXXMethodDecl 0x55f5da558ad0 <line:148:5, col:70> col:23 assign 'Vector<TimerSet::heap_element> &(Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x55f5da558918 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55f5da558990 <col:43, col:69> col:63 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x55f5da558c28 <line:150:5, col:55> col:49 begin 'Vector<TimerSet::heap_element>::iterator ()'
| |-NoInlineAttr 0x55f5da558d08 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f5da558d60 <col:30> Inherited
|-CXXMethodDecl 0x55f5da558da8 <line:151:5, col:53> col:49 end 'Vector<TimerSet::heap_element>::iterator ()'
| |-NoInlineAttr 0x55f5da558e58 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f5da558eb0 <col:30> Inherited
|-CXXMethodDecl 0x55f5da558f78 <line:152:5, col:63> col:55 begin 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x55f5da559028 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f5da559080 <col:30> Inherited
|-CXXMethodDecl 0x55f5da5590c8 <line:153:5, col:61> col:55 end 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x55f5da559178 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f5da5591d0 <col:30> Inherited
|-CXXMethodDecl 0x55f5da559218 <line:154:5, col:64> col:55 cbegin 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x55f5da5592c8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f5da559320 <col:30> Inherited
|-CXXMethodDecl 0x55f5da559368 <line:155:5, col:62> col:55 cend 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x55f5da559418 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f5da559470 <col:30> Inherited
|-CXXMethodDecl 0x55f5da559498 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55f5da559548 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55f5da5595f8 <line:159:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x55f5da5597b8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x55f5da5596a8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55f5da559720 <col:37, col:63> col:57 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x55f5da559908 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55f5da559878 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f5da559ab8 <line:163:5, col:65> col:43 operator[] 'TimerSet::heap_element &(Vector::size_type)'
| |-ParmVarDecl 0x55f5da5599c0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55f5da559b70 <col:20>
| `-OptimizeNoneAttr 0x55f5da559bc8 <col:30>
|-CXXMethodDecl 0x55f5da559ce8 <line:164:5, col:73> col:49 operator[] 'const TimerSet::heap_element &(Vector::size_type) const'
| |-ParmVarDecl 0x55f5da559bf0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55f5da559da0 <col:20>
| `-OptimizeNoneAttr 0x55f5da559df8 <col:30>
|-CXXMethodDecl 0x55f5da559eb0 <line:165:5, col:29> col:15 at 'TimerSet::heap_element &(Vector::size_type)' inline
| `-ParmVarDecl 0x55f5da559e20 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f5da559ff8 <line:166:5, col:37> col:21 at 'const TimerSet::heap_element &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55f5da559f68 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f5da55a128 <line:167:5, col:21> col:15 front 'TimerSet::heap_element &()' inline
|-CXXMethodDecl 0x55f5da55a258 <line:168:5, col:29> col:21 front 'const TimerSet::heap_element &() const' inline
|-CXXMethodDecl 0x55f5da55a328 <line:169:5, col:20> col:15 back 'TimerSet::heap_element &()' inline
|-CXXMethodDecl 0x55f5da55a3f8 <line:170:5, col:28> col:21 back 'const TimerSet::heap_element &() const' inline
|-CXXMethodDecl 0x55f5da55a538 <line:172:5, col:39> col:15 used unchecked_at 'TimerSet::heap_element &(Vector::size_type)' inline
| `-ParmVarDecl 0x55f5da55a4a8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f5da55a680 <line:173:5, col:47> col:21 unchecked_at 'const TimerSet::heap_element &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55f5da55a5f0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f5da55a7c8 <line:174:5, col:59> col:15 at_u 'TimerSet::heap_element &(Vector::size_type)' inline
| |-ParmVarDecl 0x55f5da55a738 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55f5da55a880 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55f5da55a980 <line:175:5, col:71> col:21 at_u 'const TimerSet::heap_element &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55f5da55a8f0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55f5da55aa38 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55f5da55aaf8 <line:177:5, col:20> col:15 data 'TimerSet::heap_element *()' inline
|-CXXMethodDecl 0x55f5da55abf8 <line:178:5, col:28> col:21 data 'const TimerSet::heap_element *() const' inline
|-CXXMethodDecl 0x55f5da55ada8 <line:180:5, col:48> col:17 push_back 'void (Vector<TimerSet::heap_element>::value_argument_type)' inline
| `-ParmVarDecl 0x55f5da55acb8 <col:27, col:47> col:47 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-FunctionTemplateDecl 0x55f5da55b598 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55f5da55ae60 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<TimerSet::heap_element>':'fast_argument<TimerSet::heap_element, true>'
| `-CXXMethodDecl 0x55f5da55b4f8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (TimerSet::heap_element &&)' inline
|   `-ParmVarDecl 0x55f5da55b3f8 <col:58, col:62> col:62 v 'TimerSet::heap_element &&'
|-CXXMethodDecl 0x55f5da55b678 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55f5da55b7c8 <line:186:5, col:49> col:17 push_front 'void (Vector<TimerSet::heap_element>::value_argument_type)' inline
| `-ParmVarDecl 0x55f5da55b738 <col:28, col:48> col:48 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x55f5da55b880 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55f5da55bac8 <line:189:5, col:62> col:21 insert 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x55f5da55b940 <col:28, col:37> col:37 it 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
| `-ParmVarDecl 0x55f5da55b9b8 <col:41, col:61> col:61 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x55f5da55bd20 <line:190:5, col:38> col:21 erase 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator)' inline
| `-ParmVarDecl 0x55f5da55bb98 <col:27, col:36> col:36 it 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
|-CXXMethodDecl 0x55f5da55bf78 <line:191:5, col:49> col:21 erase 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator, Vector<TimerSet::heap_element>::iterator)' inline
| |-ParmVarDecl 0x55f5da55bde8 <col:27, col:36> col:36 a 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
| `-ParmVarDecl 0x55f5da55be60 <col:39, col:48> col:48 b 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
|-CXXMethodDecl 0x55f5da55c038 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55f5da55c298 <line:195:5, col:34> col:17 swap 'void (Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x55f5da55c1a0 <col:22, col:33> col:33 x 'Vector<TimerSet::heap_element> &'
`-CXXDestructorDecl 0x55f5da55c368 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55f5da55c368

Layout: <CGRecordLayout
  LLVMType:%class.Vector.13 = type { %class.vector_memory.9 }
  NonVirtualBaseLLVMType:%class.Vector.13 = type { %class.vector_memory.9 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55f5da55c4b0 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Timer *'
|-CXXRecordDecl 0x55f5da55c6b8 prev 0x55f5da55c4b0 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55f5da55d800 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<Timer *>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x55f5da55d7b0 'typename array_memory<Timer *>::type' sugar
|   `-TypedefType 0x55f5da55d790 'conditional<true, sized_array_memory<8>, typed_array_memory<Timer *> >::type' sugar
|     |-Typedef 0x55f5da55d640 'type'
|     `-SubstTemplateTypeParmType 0x55f5da55d460 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x55f5da273cd0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f5da273c78 'T'
|       `-RecordType 0x55f5da55cfb0 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x55f5da55cec8 'sized_array_memory'
|-FieldDecl 0x55f5da561430 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Timer *>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x55f5da561480 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55f5da5614b8 <line:118:5, col:15> col:15 value_type 'Timer *':'Timer *'
| `-SubstTemplateTypeParmType 0x55f5da55c750 'Timer *' sugar
|   |-TemplateTypeParmType 0x55f5da2ab9c0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55f5da2ab968 'T'
|   `-PointerType 0x55f5da510550 'Timer *'
|     `-RecordType 0x55f5da50f6a0 'Timer'
|       `-CXXRecord 0x55f5da493338 'Timer'
|-TypedefDecl 0x55f5da561578 <line:119:5, col:16> col:16 reference 'Timer *&'
| `-LValueReferenceType 0x55f5da561540 'Timer *&'
|   `-SubstTemplateTypeParmType 0x55f5da55c750 'Timer *' sugar
|     |-TemplateTypeParmType 0x55f5da2ab9c0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55f5da2ab968 'T'
|     `-PointerType 0x55f5da510550 'Timer *'
|       `-RecordType 0x55f5da50f6a0 'Timer'
|         `-CXXRecord 0x55f5da493338 'Timer'
|-TypedefDecl 0x55f5da561638 <line:120:5, col:22> col:22 const_reference 'Timer *const &'
| `-LValueReferenceType 0x55f5da561600 'Timer *const &'
|   `-QualType 0x55f5da55c751 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x55f5da55c750 'Timer *' sugar
|       |-TemplateTypeParmType 0x55f5da2ab9c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f5da2ab968 'T'
|       `-PointerType 0x55f5da510550 'Timer *'
|         `-RecordType 0x55f5da50f6a0 'Timer'
|           `-CXXRecord 0x55f5da493338 'Timer'
|-TypedefDecl 0x55f5da5616f8 <line:121:5, col:16> col:16 pointer 'Timer **'
| `-PointerType 0x55f5da5616c0 'Timer **'
|   `-SubstTemplateTypeParmType 0x55f5da55c750 'Timer *' sugar
|     |-TemplateTypeParmType 0x55f5da2ab9c0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55f5da2ab968 'T'
|     `-PointerType 0x55f5da510550 'Timer *'
|       `-RecordType 0x55f5da50f6a0 'Timer'
|         `-CXXRecord 0x55f5da493338 'Timer'
|-TypedefDecl 0x55f5da5617b8 <line:122:5, col:22> col:22 const_pointer 'Timer *const *'
| `-PointerType 0x55f5da561780 'Timer *const *'
|   `-QualType 0x55f5da55c751 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x55f5da55c750 'Timer *' sugar
|       |-TemplateTypeParmType 0x55f5da2ab9c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f5da2ab968 'T'
|       `-PointerType 0x55f5da510550 'Timer *'
|         `-RecordType 0x55f5da50f6a0 'Timer'
|           `-CXXRecord 0x55f5da493338 'Timer'
|-TypedefDecl 0x55f5da562390 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<Timer *>::type':'Timer *'
| `-ElaboratedType 0x55f5da562340 'typename fast_argument<Timer *>::type' sugar
|   `-TypedefType 0x55f5da562320 'fast_argument<Timer *, false>::type' sugar
|     |-Typedef 0x55f5da5622b0 'type'
|     `-SubstTemplateTypeParmType 0x55f5da562070 'Timer *' sugar
|       |-TemplateTypeParmType 0x55f5da27ead0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f5da27ea80 'T'
|       `-PointerType 0x55f5da510550 'Timer *'
|         `-RecordType 0x55f5da50f6a0 'Timer'
|           `-CXXRecord 0x55f5da493338 'Timer'
|-TypedefDecl 0x55f5da5623f8 <line:126:5, col:22> col:22 const_access_type 'Timer *const &'
| `-LValueReferenceType 0x55f5da561600 'Timer *const &'
|   `-QualType 0x55f5da55c751 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x55f5da55c750 'Timer *' sugar
|       |-TemplateTypeParmType 0x55f5da2ab9c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f5da2ab968 'T'
|       `-PointerType 0x55f5da510550 'Timer *'
|         `-RecordType 0x55f5da50f6a0 'Timer'
|           `-CXXRecord 0x55f5da493338 'Timer'
|-TypedefDecl 0x55f5da562450 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55f5d9fa93b0 'int'
|-TypedefDecl 0x55f5da5624b8 <line:130:5, col:16> col:16 iterator 'Timer **'
| `-PointerType 0x55f5da5616c0 'Timer **'
|   `-SubstTemplateTypeParmType 0x55f5da55c750 'Timer *' sugar
|     |-TemplateTypeParmType 0x55f5da2ab9c0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55f5da2ab968 'T'
|     `-PointerType 0x55f5da510550 'Timer *'
|       `-RecordType 0x55f5da50f6a0 'Timer'
|         `-CXXRecord 0x55f5da493338 'Timer'
|-TypedefDecl 0x55f5da562520 <line:131:5, col:22> col:22 const_iterator 'Timer *const *'
| `-PointerType 0x55f5da561780 'Timer *const *'
|   `-QualType 0x55f5da55c751 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x55f5da55c750 'Timer *' sugar
|       |-TemplateTypeParmType 0x55f5da2ab9c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f5da2ab968 'T'
|       `-PointerType 0x55f5da510550 'Timer *'
|         `-RecordType 0x55f5da50f6a0 'Timer'
|           `-CXXRecord 0x55f5da493338 'Timer'
|-EnumDecl 0x55f5da562578 <line:134:5> col:5
| `-EnumConstantDecl 0x55f5da562670 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Timer *>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55f5da562650 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55f5da2ad048 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55f5da2ad020 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55f5da2ad000 <col:40> 'int' 1
|-CXXConstructorDecl 0x55f5da5626f8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55f5da562988 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x55f5da5627b0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55f5da562850 <col:41, col:61> col:61 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXConstructorDecl 0x55f5da562c48 <line:139:5, col:37> col:12 Vector 'void (const Vector<Timer *> &)' inline
| `-ParmVarDecl 0x55f5da562b30 <col:19, col:36> col:36 x 'const Vector<Timer *> &'
|-CXXConstructorDecl 0x55f5da562f08 <line:141:5, col:32> col:12 Vector 'void (Vector<Timer *> &&)' inline
| `-ParmVarDecl 0x55f5da562df0 <col:19, col:31> col:31 x 'Vector<Timer *> &&'
|-CXXMethodDecl 0x55f5da563250 <line:144:5, col:51> col:23 operator= 'Vector<Timer *> &(const Vector<Timer *> &)' inline
| `-ParmVarDecl 0x55f5da563130 <col:33, col:50> col:50 x 'const Vector<Timer *> &'
|-CXXMethodDecl 0x55f5da563560 <line:146:5, col:46> col:23 operator= 'Vector<Timer *> &(Vector<Timer *> &&)' inline
| `-ParmVarDecl 0x55f5da563440 <col:33, col:45> col:45 x 'Vector<Timer *> &&'
|-CXXMethodDecl 0x55f5da563850 <line:148:5, col:70> col:23 assign 'Vector<Timer *> &(Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x55f5da563698 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55f5da563710 <col:43, col:69> col:63 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x55f5da5639a8 <line:150:5, col:55> col:49 begin 'Vector<Timer *>::iterator ()'
| |-NoInlineAttr 0x55f5da563a88 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f5da563ae0 <col:30> Inherited
|-CXXMethodDecl 0x55f5da563b28 <line:151:5, col:53> col:49 end 'Vector<Timer *>::iterator ()'
| |-NoInlineAttr 0x55f5da563bd8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f5da563c30 <col:30> Inherited
|-CXXMethodDecl 0x55f5da567d40 <line:152:5, col:63> col:55 begin 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x55f5da567df0 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f5da567e48 <col:30> Inherited
|-CXXMethodDecl 0x55f5da567e90 <line:153:5, col:61> col:55 end 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x55f5da567f40 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f5da567f98 <col:30> Inherited
|-CXXMethodDecl 0x55f5da567fe0 <line:154:5, col:64> col:55 cbegin 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x55f5da568090 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f5da5680e8 <col:30> Inherited
|-CXXMethodDecl 0x55f5da568130 <line:155:5, col:62> col:55 cend 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x55f5da5681e0 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f5da568238 <col:30> Inherited
|-CXXMethodDecl 0x55f5da568260 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55f5da568310 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55f5da5683c0 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55f5da568580 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x55f5da568470 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55f5da5684e8 <col:37, col:63> col:57 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x55f5da5686d0 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55f5da568640 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f5da568878 <line:163:5, col:65> col:43 operator[] 'Timer *&(Vector::size_type)'
| |-ParmVarDecl 0x55f5da568788 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55f5da568930 <col:20>
| `-OptimizeNoneAttr 0x55f5da568988 <col:30>
|-CXXMethodDecl 0x55f5da568aa8 <line:164:5, col:73> col:49 operator[] 'Timer *const &(Vector::size_type) const'
| |-ParmVarDecl 0x55f5da5689b0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55f5da568b60 <col:20>
| `-OptimizeNoneAttr 0x55f5da568bb8 <col:30>
|-CXXMethodDecl 0x55f5da568c70 <line:165:5, col:29> col:15 at 'Timer *&(Vector::size_type)' inline
| `-ParmVarDecl 0x55f5da568be0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f5da568db8 <line:166:5, col:37> col:21 at 'Timer *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55f5da568d28 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f5da568ee8 <line:167:5, col:21> col:15 front 'Timer *&()' inline
|-CXXMethodDecl 0x55f5da569018 <line:168:5, col:29> col:21 front 'Timer *const &() const' inline
|-CXXMethodDecl 0x55f5da5690e8 <line:169:5, col:20> col:15 back 'Timer *&()' inline
|-CXXMethodDecl 0x55f5da5691b8 <line:170:5, col:28> col:21 back 'Timer *const &() const' inline
|-CXXMethodDecl 0x55f5da5692f8 <line:172:5, col:39> col:15 unchecked_at 'Timer *&(Vector::size_type)' inline
| `-ParmVarDecl 0x55f5da569268 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f5da569440 <line:173:5, col:47> col:21 unchecked_at 'Timer *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55f5da5693b0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f5da569588 <line:174:5, col:59> col:15 at_u 'Timer *&(Vector::size_type)' inline
| |-ParmVarDecl 0x55f5da5694f8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55f5da569640 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55f5da569740 <line:175:5, col:71> col:21 at_u 'Timer *const &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55f5da5696b0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55f5da5697f8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55f5da5698b8 <line:177:5, col:20> col:15 data 'Timer **()' inline
|-CXXMethodDecl 0x55f5da5699b8 <line:178:5, col:28> col:21 data 'Timer *const *() const' inline
|-CXXMethodDecl 0x55f5da569b38 <line:180:5, col:48> col:17 push_back 'void (Vector<Timer *>::value_argument_type)' inline
| `-ParmVarDecl 0x55f5da569a78 <col:27, col:47> col:47 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-FunctionTemplateDecl 0x55f5da56a2f8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55f5da569bf0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Timer *>':'fast_argument<Timer *, false>'
| `-CXXMethodDecl 0x55f5da56a258 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Timer *&&)' inline
|   `-ParmVarDecl 0x55f5da56a158 <col:58, col:62> col:62 v 'Timer *&&'
|-CXXMethodDecl 0x55f5da56a3d8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55f5da56a528 <line:186:5, col:49> col:17 push_front 'void (Vector<Timer *>::value_argument_type)' inline
| `-ParmVarDecl 0x55f5da56a498 <col:28, col:48> col:48 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x55f5da56a5e0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55f5da56a828 <line:189:5, col:62> col:21 insert 'Vector<Timer *>::iterator (Vector<Timer *>::iterator, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x55f5da56a6a0 <col:28, col:37> col:37 it 'Vector<Timer *>::iterator':'Timer **'
| `-ParmVarDecl 0x55f5da56a718 <col:41, col:61> col:61 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x55f5da56a9e8 <line:190:5, col:38> col:21 erase 'Vector<Timer *>::iterator (Vector<Timer *>::iterator)' inline
| `-ParmVarDecl 0x55f5da56a8f8 <col:27, col:36> col:36 it 'Vector<Timer *>::iterator':'Timer **'
|-CXXMethodDecl 0x55f5da56ac38 <line:191:5, col:49> col:21 erase 'Vector<Timer *>::iterator (Vector<Timer *>::iterator, Vector<Timer *>::iterator)' inline
| |-ParmVarDecl 0x55f5da56aab0 <col:27, col:36> col:36 a 'Vector<Timer *>::iterator':'Timer **'
| `-ParmVarDecl 0x55f5da56ab28 <col:39, col:48> col:48 b 'Vector<Timer *>::iterator':'Timer **'
|-CXXMethodDecl 0x55f5da56acf8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55f5da56af58 <line:195:5, col:34> col:17 swap 'void (Vector<Timer *> &)' inline
| `-ParmVarDecl 0x55f5da56ae60 <col:22, col:33> col:33 x 'Vector<Timer *> &'
`-CXXDestructorDecl 0x55f5da56b028 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55f5da56b028

Layout: <CGRecordLayout
  LLVMType:%class.Vector.14 = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector.14 = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f5da529c00 <../dummy_inc/click/sync.hh:194:1, line:211:1> line:194:7 referenced class SimpleSpinlock definition
|-DefinitionData empty standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55f5da529d18 <col:1, col:7> col:7 implicit referenced class SimpleSpinlock
|-AccessSpecDecl 0x55f5da529da8 <col:24, col:30> col:24 public
|-CXXConstructorDecl 0x55f5da529e30 <line:196:5, col:27> col:12 SimpleSpinlock 'void ()' inline
|-CXXDestructorDecl 0x55f5da529f20 <line:197:5, col:28> col:12 ~SimpleSpinlock 'void () noexcept' inline
|-CXXMethodDecl 0x55f5da52a020 <line:199:5, col:25> col:17 acquire 'void ()' inline
|-CXXMethodDecl 0x55f5da52a0e0 <line:200:5, col:25> col:17 release 'void ()' inline
|-CXXMethodDecl 0x55f5da52a1a0 <line:201:5, col:25> col:17 attempt 'bool ()' inline
|-CXXConstructorDecl 0x55f5da52a2c8 <line:194:7> col:7 implicit constexpr SimpleSpinlock 'void (const SimpleSpinlock &)' inline default trivial noexcept-unevaluated 0x55f5da52a2c8
| `-ParmVarDecl 0x55f5da52a3d8 <col:7> col:7 'const SimpleSpinlock &'
`-CXXMethodDecl 0x55f5da56bdd8 <col:7> col:7 implicit operator= 'SimpleSpinlock &(const SimpleSpinlock &)' inline default trivial noexcept-unevaluated 0x55f5da56bdd8
  `-ParmVarDecl 0x55f5da56bee8 <col:7> col:7 'const SimpleSpinlock &'

Layout: <CGRecordLayout
  LLVMType:%class.SimpleSpinlock = type { i8 }
  NonVirtualBaseLLVMType:%class.SimpleSpinlock.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f5da54b6c0 prev 0x55f5da4974e8 <../dummy_inc/click/timerset.hh:12:1, line:90:1> line:12:7 referenced class TimerSet definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x55f5da54b7b8 <col:1, col:7> col:7 implicit referenced class TimerSet
|-AccessSpecDecl 0x55f5da54b848 <col:18, col:24> col:18 public
|-CXXConstructorDecl 0x55f5da54b8d0 <line:14:5, col:14> col:5 TimerSet 'void ()'
|-CXXMethodDecl 0x55f5da54b9c8 <line:16:5, col:67> col:15 timer_expiry_steady 'Timestamp () const'
| `-CompoundStmt 0x55f5da56c250 <col:43, col:67>
|   `-ReturnStmt 0x55f5da56c240 <col:45, col:52>
|     `-CXXConstructExpr 0x55f5da56c210 <col:52> 'Timestamp' 'void (const Timestamp &) noexcept'
|       `-MemberExpr 0x55f5da56c1e0 <col:52> 'const Timestamp' lvalue ->_timer_expiry 0x55f5da54d1b0
|         `-CXXThisExpr 0x55f5da56c1d0 <col:52> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x55f5da54ba88 <line:17:5, col:53> col:22 timer_expiry_steady_adjusted 'Timestamp () const' inline
|-CXXMethodDecl 0x55f5da54bc90 <line:19:5, col:64> col:16 next_timer_delay 'int (bool, Timestamp &) const' inline
| |-ParmVarDecl 0x55f5da54bb38 <col:33, col:38> col:38 more_tasks 'bool'
| `-ParmVarDecl 0x55f5da54bbb0 <col:50, col:61> col:61 t 'Timestamp &'
|-CXXMethodDecl 0x55f5da54bd88 <line:22:5, col:23> col:12 next_timer 'Timer *()'
|-CXXMethodDecl 0x55f5da54be50 <line:24:5, col:67> col:14 max_timer_stride 'unsigned int () const'
| `-CompoundStmt 0x55f5da56c2d0 <col:39, col:67>
|   `-ReturnStmt 0x55f5da56c2c0 <col:41, col:48>
|     `-ImplicitCastExpr 0x55f5da56c2a8 <col:48> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x55f5da56c278 <col:48> 'const unsigned int' lvalue ->_max_timer_stride 0x55f5da54d298
|         `-CXXThisExpr 0x55f5da56c268 <col:48> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x55f5da54bf18 <line:25:5, col:59> col:14 timer_stride 'unsigned int () const'
| `-CompoundStmt 0x55f5da56c350 <col:35, col:59>
|   `-ReturnStmt 0x55f5da56c340 <col:37, col:44>
|     `-ImplicitCastExpr 0x55f5da56c328 <col:44> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x55f5da56c2f8 <col:44> 'const unsigned int' lvalue ->_timer_stride 0x55f5da54d300
|         `-CXXThisExpr 0x55f5da56c2e8 <col:44> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x55f5da54c060 <line:26:5, col:52> col:10 set_max_timer_stride 'void (unsigned int)'
| `-ParmVarDecl 0x55f5da54bfd0 <col:31, col:40> col:40 timer_stride 'unsigned int'
|-CXXMethodDecl 0x55f5da54c1a8 <line:28:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x55f5da54c118 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x55f5da54c3a8 <line:30:5, col:57> col:10 run_timers 'void (RouterThread *, Master *)'
| |-ParmVarDecl 0x55f5da54c260 <col:21, col:35> col:35 thread 'RouterThread *'
| `-ParmVarDecl 0x55f5da54c2d8 <col:43, col:51> col:51 master 'Master *'
|-CXXMethodDecl 0x55f5da54c478 <line:32:5, col:23> col:17 fence 'void ()' inline
|-AccessSpecDecl 0x55f5da54c518 <line:34:3, col:10> col:3 private
|-CXXRecordDecl 0x55f5da54c540 <line:36:5, line:45:5> line:36:12 referenced struct heap_element definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55f5da54c658 <col:5, col:12> col:12 implicit referenced struct heap_element
| |-FieldDecl 0x55f5da54c6f8 <line:37:2, col:12> col:12 referenced expiry_s 'Timestamp'
| |-FieldDecl 0x55f5da54c758 <line:38:2, col:9> col:9 referenced t 'Timer *'
| `-CXXConstructorDecl 0x55f5da54c888 <line:42:2, line:44:2> line:42:2 heap_element 'void (Timer *)'
|   |-ParmVarDecl 0x55f5da54c7b8 <col:15, col:22> col:22 used t_ 'Timer *'
|   |-CXXCtorInitializer Field 0x55f5da54c6f8 'expiry_s' 'Timestamp'
|   | `-CXXConstructExpr 0x55f5da56c428 <line:43:8, col:36> 'Timestamp' 'void (const Timestamp &) noexcept'
|   |   `-CXXMemberCallExpr 0x55f5da56c3d0 <col:17, col:35> 'const Timestamp' lvalue
|   |     `-MemberExpr 0x55f5da56c3a0 <col:17, col:21> '<bound member function type>' ->expiry_steady 0x55f5da494978
|   |       `-ImplicitCastExpr 0x55f5da56c3f0 <col:17> 'const Timer *' <NoOp>
|   |         `-ImplicitCastExpr 0x55f5da56c388 <col:17> 'Timer *' <LValueToRValue>
|   |           `-DeclRefExpr 0x55f5da56c368 <col:17> 'Timer *' lvalue ParmVar 0x55f5da54c7b8 't_' 'Timer *'
|   |-CXXCtorInitializer Field 0x55f5da54c758 't' 'Timer *'
|   | `-ImplicitCastExpr 0x55f5da56c4c0 <col:41> 'Timer *' <LValueToRValue>
|   |   `-DeclRefExpr 0x55f5da56c480 <col:41> 'Timer *' lvalue ParmVar 0x55f5da54c7b8 't_' 'Timer *'
|   `-CompoundStmt 0x55f5da56c510 <col:45, line:44:2>
|-CXXRecordDecl 0x55f5da54c950 <line:46:5, line:50:5> line:46:12 struct heap_less definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55f5da54ca68 <col:5, col:12> col:12 implicit struct heap_less
| `-CXXMethodDecl 0x55f5da54ccb8 <line:47:2, line:49:2> line:47:14 operator() 'bool (const TimerSet::heap_element &, const TimerSet::heap_element &)' inline
|   |-ParmVarDecl 0x55f5da54cb38 <col:25, col:45> col:45 used a 'const TimerSet::heap_element &'
|   |-ParmVarDecl 0x55f5da54cbb0 <col:48, col:68> col:68 used b 'const TimerSet::heap_element &'
|   `-CompoundStmt 0x55f5da56c640 <col:71, line:49:2>
|     `-ReturnStmt 0x55f5da56c630 <line:48:6, col:28>
|       `-CXXOperatorCallExpr 0x55f5da56c5f8 <col:13, col:28> 'bool'
|         |-ImplicitCastExpr 0x55f5da56c5e0 <col:24> 'bool (*)(const Timestamp &, const Timestamp &)' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x55f5da56c5c0 <col:24> 'bool (const Timestamp &, const Timestamp &)' lvalue Function 0x55f5da4cd8b8 'operator<' 'bool (const Timestamp &, const Timestamp &)'
|         |-MemberExpr 0x55f5da56c540 <col:13, col:15> 'const Timestamp' lvalue .expiry_s 0x55f5da54c6f8
|         | `-DeclRefExpr 0x55f5da56c520 <col:13> 'const TimerSet::heap_element' lvalue ParmVar 0x55f5da54cb38 'a' 'const TimerSet::heap_element &'
|         `-MemberExpr 0x55f5da56c590 <col:26, col:28> 'const Timestamp' lvalue .expiry_s 0x55f5da54c6f8
|           `-DeclRefExpr 0x55f5da56c570 <col:26> 'const TimerSet::heap_element' lvalue ParmVar 0x55f5da54cbb0 'b' 'const TimerSet::heap_element &'
|-CXXRecordDecl 0x55f5da54cd80 <line:51:5, line:55:5> line:51:12 struct heap_place definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55f5da54ce98 <col:5, col:12> col:12 implicit struct heap_place
| `-CXXMethodDecl 0x55f5da54d0b8 <line:52:2, line:54:2> line:52:14 operator() 'void (TimerSet::heap_element *, TimerSet::heap_element *)' inline
|   |-ParmVarDecl 0x55f5da54cf38 <col:25, col:39> col:39 used begin 'TimerSet::heap_element *'
|   |-ParmVarDecl 0x55f5da54cfb0 <col:46, col:60> col:60 used t 'TimerSet::heap_element *'
|   `-CompoundStmt 0x55f5da56c848 <col:63, line:54:2>
|     `-BinaryOperator 0x55f5da56c828 <line:53:6, col:39> 'int' lvalue '='
|       |-MemberExpr 0x55f5da56c6d8 <col:6, col:12> 'int' lvalue ->_schedpos1 0x55f5da496988
|       | `-ImplicitCastExpr 0x55f5da56c6c0 <col:6, col:9> 'Timer *' <LValueToRValue>
|       |   `-MemberExpr 0x55f5da56c690 <col:6, col:9> 'Timer *' lvalue ->t 0x55f5da54c758
|       |     `-ImplicitCastExpr 0x55f5da56c678 <col:6> 'TimerSet::heap_element *' <LValueToRValue>
|       |       `-DeclRefExpr 0x55f5da56c658 <col:6> 'TimerSet::heap_element *' lvalue ParmVar 0x55f5da54cfb0 't' 'TimerSet::heap_element *'
|       `-ImplicitCastExpr 0x55f5da56c810 <col:25, col:39> 'int' <IntegralCast>
|         `-BinaryOperator 0x55f5da56c7f0 <col:25, col:39> 'long' '+'
|           |-ParenExpr 0x55f5da56c798 <col:25, col:35> 'long'
|           | `-BinaryOperator 0x55f5da56c778 <col:26, col:30> 'long' '-'
|           |   |-ImplicitCastExpr 0x55f5da56c748 <col:26> 'TimerSet::heap_element *' <LValueToRValue>
|           |   | `-DeclRefExpr 0x55f5da56c708 <col:26> 'TimerSet::heap_element *' lvalue ParmVar 0x55f5da54cfb0 't' 'TimerSet::heap_element *'
|           |   `-ImplicitCastExpr 0x55f5da56c760 <col:30> 'TimerSet::heap_element *' <LValueToRValue>
|           |     `-DeclRefExpr 0x55f5da56c728 <col:30> 'TimerSet::heap_element *' lvalue ParmVar 0x55f5da54cf38 'begin' 'TimerSet::heap_element *'
|           `-ImplicitCastExpr 0x55f5da56c7d8 <col:39> 'long' <IntegralCast>
|             `-IntegerLiteral 0x55f5da56c7b8 <col:39> 'int' 1
|-FieldDecl 0x55f5da54d1b0 <line:58:5, col:15> col:15 referenced _timer_expiry 'Timestamp'
| `-AlignedAttr 0x55f5da54d220 <col:44, col:53> aligned
|   `-ConstantExpr 0x55f5da54d200 <col:52> 'int' Int: 8
|     `-IntegerLiteral 0x55f5da54d180 <col:52> 'int' 8
|-FieldDecl 0x55f5da54d298 <line:60:5, col:14> col:14 referenced _max_timer_stride 'unsigned int'
|-FieldDecl 0x55f5da54d300 <line:61:5, col:14> col:14 referenced _timer_stride 'unsigned int'
|-FieldDecl 0x55f5da54d368 <line:62:5, col:14> col:14 _timer_count 'unsigned int'
|-FieldDecl 0x55f5da55c450 <line:63:5, col:26> col:26 referenced _timer_heap 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>'
|-FieldDecl 0x55f5da56b110 <line:64:5, col:21> col:21 _timer_runchunk 'Vector<Timer *>':'Vector<Timer *>'
|-FieldDecl 0x55f5da56b170 <line:65:5, col:20> col:20 _timer_lock 'SimpleSpinlock'
|-FieldDecl 0x55f5da56b1d0 <line:71:5, col:15> col:15 _timer_check 'Timestamp'
|-FieldDecl 0x55f5da56b230 <line:72:5, col:14> col:14 _timer_check_reports 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f5da56b320 <line:74:5, col:38> col:17 run_one_timer 'void (Timer *)' inline
| `-ParmVarDecl 0x55f5da56b290 <col:31, col:37> col:38 'Timer *'
|-CXXMethodDecl 0x55f5da56b3e8 <line:76:5, line:81:5> line:76:10 set_timer_expiry 'void ()'
| `-CompoundStmt 0x55f5da56cca0 <col:29, line:81:5>
|   `-IfStmt 0x55f5da56cc78 <line:77:2, line:80:32> has_else
|     |-ImplicitCastExpr 0x55f5da56c930 <line:77:6, col:23> 'bool' <IntegralToBoolean>
|     | `-CXXMemberCallExpr 0x55f5da56c8d0 <col:6, col:23> 'Vector::size_type':'int'
|     |   `-MemberExpr 0x55f5da56c8a0 <col:6, col:18> '<bound member function type>' .size 0x55f5da559498
|     |     `-ImplicitCastExpr 0x55f5da56c918 <col:6> 'const Vector<TimerSet::heap_element>' lvalue <NoOp>
|     |       `-MemberExpr 0x55f5da56c870 <col:6> 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>' lvalue ->_timer_heap 0x55f5da55c450
|     |         `-CXXThisExpr 0x55f5da56c860 <col:6> 'TimerSet *' implicit this
|     |-CXXOperatorCallExpr 0x55f5da56cb20 <line:78:6, col:50> 'Timestamp' lvalue
|     | |-ImplicitCastExpr 0x55f5da56cb08 <col:20> 'Timestamp &(*)(const Timestamp &) noexcept' <FunctionToPointerDecay>
|     | | `-DeclRefExpr 0x55f5da56cae8 <col:20> 'Timestamp &(const Timestamp &) noexcept' lvalue CXXMethod 0x55f5da1b7318 'operator=' 'Timestamp &(const Timestamp &) noexcept'
|     | |-MemberExpr 0x55f5da56c958 <col:6> 'Timestamp' lvalue ->_timer_expiry 0x55f5da54d1b0
|     | | `-CXXThisExpr 0x55f5da56c948 <col:6> 'TimerSet *' implicit this
|     | `-ImplicitCastExpr 0x55f5da56cad0 <col:22, col:50> 'const Timestamp' lvalue <NoOp>
|     |   `-MemberExpr 0x55f5da56caa0 <col:22, col:50> 'Timestamp' lvalue .expiry_s 0x55f5da54c6f8
|     |     `-CXXMemberCallExpr 0x55f5da56ca78 <col:22, col:48> 'TimerSet::heap_element':'TimerSet::heap_element' lvalue
|     |       |-MemberExpr 0x55f5da56ca48 <col:22, col:34> '<bound member function type>' .unchecked_at 0x55f5da55a538
|     |       | `-MemberExpr 0x55f5da56c998 <col:22> 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>' lvalue ->_timer_heap 0x55f5da55c450
|     |       |   `-CXXThisExpr 0x55f5da56c988 <col:22> 'TimerSet *' implicit this
|     |       `-IntegerLiteral 0x55f5da56ca28 <col:47> 'int' 0
|     `-ExprWithCleanups 0x55f5da56cc60 <line:80:6, col:32> 'Timestamp' lvalue
|       `-CXXOperatorCallExpr 0x55f5da56cc28 <col:6, col:32> 'Timestamp' lvalue
|         |-ImplicitCastExpr 0x55f5da56cc10 <col:20> 'Timestamp &(*)(Timestamp &&) noexcept' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x55f5da56cbf0 <col:20> 'Timestamp &(Timestamp &&) noexcept' lvalue CXXMethod 0x55f5da1b77c8 'operator=' 'Timestamp &(Timestamp &&) noexcept'
|         |-MemberExpr 0x55f5da56cb68 <col:6> 'Timestamp' lvalue ->_timer_expiry 0x55f5da54d1b0
|         | `-CXXThisExpr 0x55f5da56cb58 <col:6> 'TimerSet *' implicit this
|         `-MaterializeTemporaryExpr 0x55f5da56cbd8 <col:22, col:32> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55f5da56cba8 <col:22, col:32> 'Timestamp' 'void ()'
|-CXXMethodDecl 0x55f5da56b528 <line:82:5, col:37> col:10 check_timer_expiry 'void (Timer *)'
| `-ParmVarDecl 0x55f5da56b498 <col:29, col:36> col:36 t 'Timer *'
|-CXXMethodDecl 0x55f5da56b5f0 <line:84:5, col:29> col:17 used lock_timers 'void ()' inline
|-CXXMethodDecl 0x55f5da56b6b0 <line:85:5, col:37> col:17 attempt_lock_timers 'bool ()' inline
|-CXXMethodDecl 0x55f5da56b770 <line:86:5, col:31> col:17 used unlock_timers 'void ()' inline
|-FriendDecl 0x55f5da56b860 <line:88:5, col:18> col:12 'class Timer':'Timer'
|-CXXConstructorDecl 0x55f5da56b8c8 <line:12:7> col:7 implicit TimerSet 'void (const TimerSet &)' inline default noexcept-unevaluated 0x55f5da56b8c8
| `-ParmVarDecl 0x55f5da56b9d8 <col:7> col:7 'const TimerSet &'
|-CXXConstructorDecl 0x55f5da56ba78 <col:7> col:7 implicit TimerSet 'void (TimerSet &&)' inline default noexcept-unevaluated 0x55f5da56ba78
| `-ParmVarDecl 0x55f5da56bb88 <col:7> col:7 'TimerSet &&'
|-CXXMethodDecl 0x55f5da56bc28 <col:7> col:7 implicit operator= 'TimerSet &(const TimerSet &)' inline default noexcept-unevaluated 0x55f5da56bc28
| `-ParmVarDecl 0x55f5da56bd38 <col:7> col:7 'const TimerSet &'
|-CXXMethodDecl 0x55f5da56bf58 <col:7> col:7 implicit operator= 'TimerSet &(TimerSet &&)' inline default noexcept-unevaluated 0x55f5da56bf58
| `-ParmVarDecl 0x55f5da56c068 <col:7> col:7 'TimerSet &&'
`-CXXDestructorDecl 0x55f5da56c0f0 <col:7> col:7 implicit ~TimerSet 'void ()' inline default noexcept-unevaluated 0x55f5da56c0f0

Layout: <CGRecordLayout
  LLVMType:%class.TimerSet = type <{ %class.Timestamp, i32, i32, i32, [4 x i8], %class.Vector.13, %class.Vector.14, %class.SimpleSpinlock, [7 x i8], %class.Timestamp, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.TimerSet.base = type <{ %class.Timestamp, i32, i32, i32, [4 x i8], %class.Vector.13, %class.Vector.14, %class.SimpleSpinlock, [7 x i8], %class.Timestamp, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55f5da5a2b38 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'pollfd'
|-CXXRecordDecl 0x55f5da5a2d48 prev 0x55f5da5a2b38 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55f5da5a3e20 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<pollfd>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x55f5da5a3dd0 'typename array_memory<pollfd>::type' sugar
|   `-TypedefType 0x55f5da5a3db0 'conditional<true, sized_array_memory<8>, typed_array_memory<pollfd> >::type' sugar
|     |-Typedef 0x55f5da5a3c60 'type'
|     `-SubstTemplateTypeParmType 0x55f5da55d460 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x55f5da273cd0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f5da273c78 'T'
|       `-RecordType 0x55f5da55cfb0 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x55f5da55cec8 'sized_array_memory'
|-FieldDecl 0x55f5da5a3f20 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<pollfd>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x55f5da5a3f70 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55f5da5a3fa8 <line:118:5, col:15> col:15 value_type 'pollfd':'pollfd'
| `-SubstTemplateTypeParmType 0x55f5da5a2de0 'pollfd' sugar
|   |-TemplateTypeParmType 0x55f5da2ab9c0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55f5da2ab968 'T'
|   `-RecordType 0x55f5da596bb0 'pollfd'
|     `-CXXRecord 0x55f5da596b20 'pollfd'
|-TypedefDecl 0x55f5da5a4068 <line:119:5, col:16> col:16 reference 'pollfd &'
| `-LValueReferenceType 0x55f5da5a4030 'pollfd &'
|   `-SubstTemplateTypeParmType 0x55f5da5a2de0 'pollfd' sugar
|     |-TemplateTypeParmType 0x55f5da2ab9c0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55f5da2ab968 'T'
|     `-RecordType 0x55f5da596bb0 'pollfd'
|       `-CXXRecord 0x55f5da596b20 'pollfd'
|-TypedefDecl 0x55f5da5a4128 <line:120:5, col:22> col:22 const_reference 'const pollfd &'
| `-LValueReferenceType 0x55f5da5a40f0 'const pollfd &'
|   `-QualType 0x55f5da5a2de1 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x55f5da5a2de0 'pollfd' sugar
|       |-TemplateTypeParmType 0x55f5da2ab9c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f5da2ab968 'T'
|       `-RecordType 0x55f5da596bb0 'pollfd'
|         `-CXXRecord 0x55f5da596b20 'pollfd'
|-TypedefDecl 0x55f5da5a41b8 <line:121:5, col:16> col:16 pointer 'pollfd *'
| `-PointerType 0x55f5da5a4180 'pollfd *'
|   `-SubstTemplateTypeParmType 0x55f5da5a2de0 'pollfd' sugar
|     |-TemplateTypeParmType 0x55f5da2ab9c0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55f5da2ab968 'T'
|     `-RecordType 0x55f5da596bb0 'pollfd'
|       `-CXXRecord 0x55f5da596b20 'pollfd'
|-TypedefDecl 0x55f5da5a4278 <line:122:5, col:22> col:22 const_pointer 'const pollfd *'
| `-PointerType 0x55f5da5a4240 'const pollfd *'
|   `-QualType 0x55f5da5a2de1 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x55f5da5a2de0 'pollfd' sugar
|       |-TemplateTypeParmType 0x55f5da2ab9c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f5da2ab968 'T'
|       `-RecordType 0x55f5da596bb0 'pollfd'
|         `-CXXRecord 0x55f5da596b20 'pollfd'
|-TypedefDecl 0x55f5da5a4e50 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<pollfd>::type':'pollfd'
| `-ElaboratedType 0x55f5da5a4e00 'typename fast_argument<pollfd>::type' sugar
|   `-TypedefType 0x55f5da5a4de0 'fast_argument<pollfd, false>::type' sugar
|     |-Typedef 0x55f5da5a4d70 'type'
|     `-SubstTemplateTypeParmType 0x55f5da5a4b30 'pollfd' sugar
|       |-TemplateTypeParmType 0x55f5da27ead0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f5da27ea80 'T'
|       `-RecordType 0x55f5da596bb0 'pollfd'
|         `-CXXRecord 0x55f5da596b20 'pollfd'
|-TypedefDecl 0x55f5da5a4eb8 <line:126:5, col:22> col:22 const_access_type 'const pollfd &'
| `-LValueReferenceType 0x55f5da5a40f0 'const pollfd &'
|   `-QualType 0x55f5da5a2de1 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x55f5da5a2de0 'pollfd' sugar
|       |-TemplateTypeParmType 0x55f5da2ab9c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f5da2ab968 'T'
|       `-RecordType 0x55f5da596bb0 'pollfd'
|         `-CXXRecord 0x55f5da596b20 'pollfd'
|-TypedefDecl 0x55f5da5a4f10 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55f5d9fa93b0 'int'
|-TypedefDecl 0x55f5da5a4f78 <line:130:5, col:16> col:16 iterator 'pollfd *'
| `-PointerType 0x55f5da5a4180 'pollfd *'
|   `-SubstTemplateTypeParmType 0x55f5da5a2de0 'pollfd' sugar
|     |-TemplateTypeParmType 0x55f5da2ab9c0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55f5da2ab968 'T'
|     `-RecordType 0x55f5da596bb0 'pollfd'
|       `-CXXRecord 0x55f5da596b20 'pollfd'
|-TypedefDecl 0x55f5da5a4fe0 <line:131:5, col:22> col:22 const_iterator 'const pollfd *'
| `-PointerType 0x55f5da5a4240 'const pollfd *'
|   `-QualType 0x55f5da5a2de1 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x55f5da5a2de0 'pollfd' sugar
|       |-TemplateTypeParmType 0x55f5da2ab9c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f5da2ab968 'T'
|       `-RecordType 0x55f5da596bb0 'pollfd'
|         `-CXXRecord 0x55f5da596b20 'pollfd'
|-EnumDecl 0x55f5da5a5038 <line:134:5> col:5
| `-EnumConstantDecl 0x55f5da5a5130 <col:12, col:40> col:12 RESERVE_GROW 'Vector<pollfd>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55f5da5a5110 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55f5da2ad048 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55f5da2ad020 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55f5da2ad000 <col:40> 'int' 1
|-CXXConstructorDecl 0x55f5da5a51b8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55f5da5a5448 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x55f5da5a5270 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55f5da5a5310 <col:41, col:61> col:61 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXConstructorDecl 0x55f5da5a5708 <line:139:5, col:37> col:12 Vector 'void (const Vector<pollfd> &)' inline
| `-ParmVarDecl 0x55f5da5a55f0 <col:19, col:36> col:36 x 'const Vector<pollfd> &'
|-CXXConstructorDecl 0x55f5da5a59c8 <line:141:5, col:32> col:12 Vector 'void (Vector<pollfd> &&)' inline
| `-ParmVarDecl 0x55f5da5a58b0 <col:19, col:31> col:31 x 'Vector<pollfd> &&'
|-CXXMethodDecl 0x55f5da5a5d10 <line:144:5, col:51> col:23 operator= 'Vector<pollfd> &(const Vector<pollfd> &)' inline
| `-ParmVarDecl 0x55f5da5a5bf0 <col:33, col:50> col:50 x 'const Vector<pollfd> &'
|-CXXMethodDecl 0x55f5da5a6020 <line:146:5, col:46> col:23 operator= 'Vector<pollfd> &(Vector<pollfd> &&)' inline
| `-ParmVarDecl 0x55f5da5a5f00 <col:33, col:45> col:45 x 'Vector<pollfd> &&'
|-CXXMethodDecl 0x55f5da5a6310 <line:148:5, col:70> col:23 assign 'Vector<pollfd> &(Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x55f5da5a6158 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55f5da5a61d0 <col:43, col:69> col:63 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x55f5da5a6468 <line:150:5, col:55> col:49 begin 'Vector<pollfd>::iterator ()'
| |-NoInlineAttr 0x55f5da5a6548 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f5da5a65a0 <col:30> Inherited
|-CXXMethodDecl 0x55f5da5a65e8 <line:151:5, col:53> col:49 end 'Vector<pollfd>::iterator ()'
| |-NoInlineAttr 0x55f5da5a6698 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f5da5a66f0 <col:30> Inherited
|-CXXMethodDecl 0x55f5da5a67b8 <line:152:5, col:63> col:55 begin 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x55f5da5a6868 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f5da5a68c0 <col:30> Inherited
|-CXXMethodDecl 0x55f5da5a6908 <line:153:5, col:61> col:55 end 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x55f5da5a69b8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f5da5a6a10 <col:30> Inherited
|-CXXMethodDecl 0x55f5da5a6a58 <line:154:5, col:64> col:55 cbegin 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x55f5da5a6b08 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f5da5a6b60 <col:30> Inherited
|-CXXMethodDecl 0x55f5da5a6ba8 <line:155:5, col:62> col:55 cend 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x55f5da5a6c58 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f5da5a6cb0 <col:30> Inherited
|-CXXMethodDecl 0x55f5da5a6cd8 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55f5da5a6d88 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55f5da5a6e38 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55f5da5a6ff8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x55f5da5a6ee8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55f5da5a6f60 <col:37, col:63> col:57 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x55f5da5a7148 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55f5da5a70b8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f5da5a72f8 <line:163:5, col:65> col:43 operator[] 'pollfd &(Vector::size_type)'
| |-ParmVarDecl 0x55f5da5a7200 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55f5da5a73b0 <col:20>
| `-OptimizeNoneAttr 0x55f5da5a7408 <col:30>
|-CXXMethodDecl 0x55f5da5a7528 <line:164:5, col:73> col:49 operator[] 'const pollfd &(Vector::size_type) const'
| |-ParmVarDecl 0x55f5da5a7430 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55f5da5a75e0 <col:20>
| `-OptimizeNoneAttr 0x55f5da5a7638 <col:30>
|-CXXMethodDecl 0x55f5da5a76f0 <line:165:5, col:29> col:15 at 'pollfd &(Vector::size_type)' inline
| `-ParmVarDecl 0x55f5da5a7660 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f5da5a7838 <line:166:5, col:37> col:21 at 'const pollfd &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55f5da5a77a8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f5da5a7968 <line:167:5, col:21> col:15 front 'pollfd &()' inline
|-CXXMethodDecl 0x55f5da5a7a98 <line:168:5, col:29> col:21 front 'const pollfd &() const' inline
|-CXXMethodDecl 0x55f5da5a7b68 <line:169:5, col:20> col:15 back 'pollfd &()' inline
|-CXXMethodDecl 0x55f5da5a7c38 <line:170:5, col:28> col:21 back 'const pollfd &() const' inline
|-CXXMethodDecl 0x55f5da5a7d78 <line:172:5, col:39> col:15 unchecked_at 'pollfd &(Vector::size_type)' inline
| `-ParmVarDecl 0x55f5da5a7ce8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f5da5a7ec0 <line:173:5, col:47> col:21 unchecked_at 'const pollfd &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55f5da5a7e30 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f5da5a8008 <line:174:5, col:59> col:15 at_u 'pollfd &(Vector::size_type)' inline
| |-ParmVarDecl 0x55f5da5a7f78 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55f5da5a80c0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55f5da5a81c0 <line:175:5, col:71> col:21 at_u 'const pollfd &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55f5da5a8130 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55f5da5a8278 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55f5da5a8338 <line:177:5, col:20> col:15 data 'pollfd *()' inline
|-CXXMethodDecl 0x55f5da5a8438 <line:178:5, col:28> col:21 data 'const pollfd *() const' inline
|-CXXMethodDecl 0x55f5da5a85e8 <line:180:5, col:48> col:17 push_back 'void (Vector<pollfd>::value_argument_type)' inline
| `-ParmVarDecl 0x55f5da5a84f8 <col:27, col:47> col:47 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-FunctionTemplateDecl 0x55f5da5a8da8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55f5da5a86a0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<pollfd>':'fast_argument<pollfd, false>'
| `-CXXMethodDecl 0x55f5da5a8d08 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (pollfd &&)' inline
|   `-ParmVarDecl 0x55f5da5a8c08 <col:58, col:62> col:62 v 'pollfd &&'
|-CXXMethodDecl 0x55f5da5a8e88 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55f5da5a8fd8 <line:186:5, col:49> col:17 push_front 'void (Vector<pollfd>::value_argument_type)' inline
| `-ParmVarDecl 0x55f5da5a8f48 <col:28, col:48> col:48 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x55f5da5a9090 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55f5da5a92d8 <line:189:5, col:62> col:21 insert 'Vector<pollfd>::iterator (Vector<pollfd>::iterator, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x55f5da5a9150 <col:28, col:37> col:37 it 'Vector<pollfd>::iterator':'pollfd *'
| `-ParmVarDecl 0x55f5da5a91c8 <col:41, col:61> col:61 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x55f5da5a9498 <line:190:5, col:38> col:21 erase 'Vector<pollfd>::iterator (Vector<pollfd>::iterator)' inline
| `-ParmVarDecl 0x55f5da5a93a8 <col:27, col:36> col:36 it 'Vector<pollfd>::iterator':'pollfd *'
|-CXXMethodDecl 0x55f5da5a96e8 <line:191:5, col:49> col:21 erase 'Vector<pollfd>::iterator (Vector<pollfd>::iterator, Vector<pollfd>::iterator)' inline
| |-ParmVarDecl 0x55f5da5a9560 <col:27, col:36> col:36 a 'Vector<pollfd>::iterator':'pollfd *'
| `-ParmVarDecl 0x55f5da5a95d8 <col:39, col:48> col:48 b 'Vector<pollfd>::iterator':'pollfd *'
|-CXXMethodDecl 0x55f5da5a97a8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55f5da5a9a28 <line:195:5, col:34> col:17 swap 'void (Vector<pollfd> &)' inline
| `-ParmVarDecl 0x55f5da5a9910 <col:22, col:33> col:33 x 'Vector<pollfd> &'
`-CXXDestructorDecl 0x55f5da5a9af8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55f5da5a9af8

Layout: <CGRecordLayout
  LLVMType:%class.Vector.15 = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector.15 = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55f5da5ab0e0 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<24>'
|-CXXRecordDecl 0x55f5da5ab2b8 prev 0x55f5da5ab0e0 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55f5da5ab348 <col:46, col:52> col:46 public
|-TypedefDecl 0x55f5da5ab370 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55f5d9fa93b0 'int'
|-TypedefDecl 0x55f5da5acf40 <line:13:5, col:31> col:31 type 'typename sized_array_memory<24>::type':'char_array<24>'
| `-ElaboratedType 0x55f5da5acef0 'typename sized_array_memory<24>::type' sugar
|   `-TypedefType 0x55f5da5ab820 'sized_array_memory<24>::type' sugar
|     |-Typedef 0x55f5da5ab720 'type'
|     `-TemplateSpecializationType 0x55f5da5ab6b0 'char_array<24UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x55f5da5ab590 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 24
|       |   `-SubstNonTypeTemplateParmExpr 0x55f5da5ab570 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x55f5da5ab550 <col:24> 'unsigned long' 24
|       `-RecordType 0x55f5da5ab690 'char_array<24>'
|         `-ClassTemplateSpecialization 0x55f5da5ab5b0 'char_array'
|-TypedefDecl 0x55f5da5acff8 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<24> >::type *'
| `-PointerType 0x55f5da5acfc0 'vector_memory<sized_array_memory<24> >::type *'
|   `-TypedefType 0x55f5da5acfa0 'vector_memory<sized_array_memory<24> >::type' sugar
|     |-Typedef 0x55f5da5acf40 'type'
|     `-ElaboratedType 0x55f5da5acef0 'typename sized_array_memory<24>::type' sugar
|       `-TypedefType 0x55f5da5ab820 'sized_array_memory<24>::type' sugar
|         |-Typedef 0x55f5da5ab720 'type'
|         `-TemplateSpecializationType 0x55f5da5ab6b0 'char_array<24UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x55f5da5ab590 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 24
|           |   `-SubstNonTypeTemplateParmExpr 0x55f5da5ab570 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x55f5da5ab550 <col:24> 'unsigned long' 24
|           `-RecordType 0x55f5da5ab690 'char_array<24>'
|             `-ClassTemplateSpecialization 0x55f5da5ab5b0 'char_array'
|-CXXMethodDecl 0x55f5da5ad178 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<24> >::type *) const' inline
| `-ParmVarDecl 0x55f5da5ad088 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXConstructorDecl 0x55f5da5ad268 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55f5da5ad348 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x55f5da5ad348
|-CXXMethodDecl 0x55f5da5ad618 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<24> > &)'
| `-ParmVarDecl 0x55f5da5ad520 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<24> > &'
|-CXXMethodDecl 0x55f5da5ad858 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x55f5da5ad6d0 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55f5da5ad748 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55f5da5ada28 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x55f5da5ad918 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55f5da5ad990 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55f5da5adb88 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<24> >::iterator ()'
|-CXXMethodDecl 0x55f5da5adc58 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<24> >::iterator ()'
|-CXXMethodDecl 0x55f5da5adea8 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<24> >::iterator (vector_memory<sized_array_memory<24> >::iterator, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x55f5da5add18 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
| `-ParmVarDecl 0x55f5da5add90 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55f5da5ae108 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<24> >::iterator (vector_memory<sized_array_memory<24> >::iterator, vector_memory<sized_array_memory<24> >::iterator)'
| |-ParmVarDecl 0x55f5da5adf78 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
| `-ParmVarDecl 0x55f5da5adff0 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55f5da5ae2c8 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<24> >::type *)' inline
| `-ParmVarDecl 0x55f5da5ae1d8 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55f5da5ae488 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<24> >::type *)' inline
| `-ParmVarDecl 0x55f5da5ae390 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55f5da5ae540 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55f5da5ae5f0 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55f5da5ae828 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x55f5da5ae6a0 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55f5da5ae718 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55f5da5aeac8 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<24> > &)'
| `-ParmVarDecl 0x55f5da5ae9d0 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<24> > &'
|-FieldDecl 0x55f5da5aeb90 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<24> >::type *'
|-FieldDecl 0x55f5da5aebe0 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55f5da5aec30 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.17 = type { %struct.char_array.18*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.17 = type { %struct.char_array.18*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55f5da5a9c40 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'SelectSet::SelectorInfo'
|-CXXRecordDecl 0x55f5da5a9e48 prev 0x55f5da5a9c40 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55f5da5ab050 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<SelectorInfo>::type':'sized_array_memory<24>'
| `-ElaboratedType 0x55f5da5ab000 'typename array_memory<SelectorInfo>::type' sugar
|   `-TypedefType 0x55f5da5aafe0 'conditional<true, sized_array_memory<24>, typed_array_memory<SelectSet::SelectorInfo> >::type' sugar
|     |-Typedef 0x55f5da5aae90 'type'
|     `-SubstTemplateTypeParmType 0x55f5da5aacb0 'sized_array_memory<24>' sugar
|       |-TemplateTypeParmType 0x55f5da273cd0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f5da273c78 'T'
|       `-RecordType 0x55f5da5aa800 'sized_array_memory<24>'
|         `-ClassTemplateSpecialization 0x55f5da5aa720 'sized_array_memory'
|-FieldDecl 0x55f5da5aec80 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<SelectSet::SelectorInfo>::array_memory_type>':'vector_memory<sized_array_memory<24> >' mutable
|-AccessSpecDecl 0x55f5da5aecd0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55f5da5aed08 <line:118:5, col:15> col:15 value_type 'SelectSet::SelectorInfo':'SelectSet::SelectorInfo'
| `-SubstTemplateTypeParmType 0x55f5da5a9ee0 'SelectSet::SelectorInfo' sugar
|   |-TemplateTypeParmType 0x55f5da2ab9c0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55f5da2ab968 'T'
|   `-RecordType 0x55f5da5a26a0 'SelectSet::SelectorInfo'
|     `-CXXRecord 0x55f5da5a2610 'SelectorInfo'
|-TypedefDecl 0x55f5da5aedc8 <line:119:5, col:16> col:16 reference 'SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x55f5da5aed90 'SelectSet::SelectorInfo &'
|   `-SubstTemplateTypeParmType 0x55f5da5a9ee0 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x55f5da2ab9c0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55f5da2ab968 'T'
|     `-RecordType 0x55f5da5a26a0 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x55f5da5a2610 'SelectorInfo'
|-TypedefDecl 0x55f5da5aee88 <line:120:5, col:22> col:22 const_reference 'const SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x55f5da5aee50 'const SelectSet::SelectorInfo &'
|   `-QualType 0x55f5da5a9ee1 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x55f5da5a9ee0 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x55f5da2ab9c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f5da2ab968 'T'
|       `-RecordType 0x55f5da5a26a0 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x55f5da5a2610 'SelectorInfo'
|-TypedefDecl 0x55f5da5aef18 <line:121:5, col:16> col:16 pointer 'SelectSet::SelectorInfo *'
| `-PointerType 0x55f5da5aeee0 'SelectSet::SelectorInfo *'
|   `-SubstTemplateTypeParmType 0x55f5da5a9ee0 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x55f5da2ab9c0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55f5da2ab968 'T'
|     `-RecordType 0x55f5da5a26a0 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x55f5da5a2610 'SelectorInfo'
|-TypedefDecl 0x55f5da5aefd8 <line:122:5, col:22> col:22 const_pointer 'const SelectSet::SelectorInfo *'
| `-PointerType 0x55f5da5aefa0 'const SelectSet::SelectorInfo *'
|   `-QualType 0x55f5da5a9ee1 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x55f5da5a9ee0 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x55f5da2ab9c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f5da2ab968 'T'
|       `-RecordType 0x55f5da5a26a0 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x55f5da5a2610 'SelectorInfo'
|-TypedefDecl 0x55f5da5afc30 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<SelectorInfo>::type':'const SelectSet::SelectorInfo &'
| `-ElaboratedType 0x55f5da5afbe0 'typename fast_argument<SelectorInfo>::type' sugar
|   `-TypedefType 0x55f5da5afbc0 'fast_argument<SelectSet::SelectorInfo, true>::type' sugar
|     |-Typedef 0x55f5da5afaf8 'type'
|     `-LValueReferenceType 0x55f5da5afac0 'const SelectSet::SelectorInfo &'
|       `-QualType 0x55f5da5af861 'const SelectSet::SelectorInfo' const
|         `-SubstTemplateTypeParmType 0x55f5da5af860 'SelectSet::SelectorInfo' sugar
|           |-TemplateTypeParmType 0x55f5da27e3a0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55f5da27e348 'T'
|           `-RecordType 0x55f5da5a26a0 'SelectSet::SelectorInfo'
|             `-CXXRecord 0x55f5da5a2610 'SelectorInfo'
|-TypedefDecl 0x55f5da5afc98 <line:126:5, col:22> col:22 const_access_type 'const SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x55f5da5aee50 'const SelectSet::SelectorInfo &'
|   `-QualType 0x55f5da5a9ee1 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x55f5da5a9ee0 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x55f5da2ab9c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f5da2ab968 'T'
|       `-RecordType 0x55f5da5a26a0 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x55f5da5a2610 'SelectorInfo'
|-TypedefDecl 0x55f5da5afcf0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55f5d9fa93b0 'int'
|-TypedefDecl 0x55f5da5afd58 <line:130:5, col:16> col:16 iterator 'SelectSet::SelectorInfo *'
| `-PointerType 0x55f5da5aeee0 'SelectSet::SelectorInfo *'
|   `-SubstTemplateTypeParmType 0x55f5da5a9ee0 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x55f5da2ab9c0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55f5da2ab968 'T'
|     `-RecordType 0x55f5da5a26a0 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x55f5da5a2610 'SelectorInfo'
|-TypedefDecl 0x55f5da5afdc0 <line:131:5, col:22> col:22 const_iterator 'const SelectSet::SelectorInfo *'
| `-PointerType 0x55f5da5aefa0 'const SelectSet::SelectorInfo *'
|   `-QualType 0x55f5da5a9ee1 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x55f5da5a9ee0 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x55f5da2ab9c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f5da2ab968 'T'
|       `-RecordType 0x55f5da5a26a0 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x55f5da5a2610 'SelectorInfo'
|-EnumDecl 0x55f5da5afe18 <line:134:5> col:5
| `-EnumConstantDecl 0x55f5da5aff10 <col:12, col:40> col:12 RESERVE_GROW 'Vector<SelectSet::SelectorInfo>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55f5da5afef0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55f5da2ad048 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55f5da2ad020 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55f5da2ad000 <col:40> 'int' 1
|-CXXConstructorDecl 0x55f5da5aff98 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55f5da5b0228 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x55f5da5b0050 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55f5da5b00f0 <col:41, col:61> col:61 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXConstructorDecl 0x55f5da5b04e8 <line:139:5, col:37> col:12 Vector 'void (const Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x55f5da5b03d0 <col:19, col:36> col:36 x 'const Vector<SelectSet::SelectorInfo> &'
|-CXXConstructorDecl 0x55f5da5b07a8 <line:141:5, col:32> col:12 Vector 'void (Vector<SelectSet::SelectorInfo> &&)' inline
| `-ParmVarDecl 0x55f5da5b0690 <col:19, col:31> col:31 x 'Vector<SelectSet::SelectorInfo> &&'
|-CXXMethodDecl 0x55f5da5b0af0 <line:144:5, col:51> col:23 operator= 'Vector<SelectSet::SelectorInfo> &(const Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x55f5da5b09d0 <col:33, col:50> col:50 x 'const Vector<SelectSet::SelectorInfo> &'
|-CXXMethodDecl 0x55f5da5b0e00 <line:146:5, col:46> col:23 operator= 'Vector<SelectSet::SelectorInfo> &(Vector<SelectSet::SelectorInfo> &&)' inline
| `-ParmVarDecl 0x55f5da5b0ce0 <col:33, col:45> col:45 x 'Vector<SelectSet::SelectorInfo> &&'
|-CXXMethodDecl 0x55f5da5b10f0 <line:148:5, col:70> col:23 assign 'Vector<SelectSet::SelectorInfo> &(Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x55f5da5b0f38 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55f5da5b0fb0 <col:43, col:69> col:63 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x55f5da5b1248 <line:150:5, col:55> col:49 begin 'Vector<SelectSet::SelectorInfo>::iterator ()'
| |-NoInlineAttr 0x55f5da5b1328 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f5da5b1380 <col:30> Inherited
|-CXXMethodDecl 0x55f5da5b13c8 <line:151:5, col:53> col:49 end 'Vector<SelectSet::SelectorInfo>::iterator ()'
| |-NoInlineAttr 0x55f5da5b1478 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f5da5b14d0 <col:30> Inherited
|-CXXMethodDecl 0x55f5da5b1598 <line:152:5, col:63> col:55 begin 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x55f5da5b1648 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f5da5b16a0 <col:30> Inherited
|-CXXMethodDecl 0x55f5da5b16e8 <line:153:5, col:61> col:55 end 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x55f5da5b1798 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f5da5b17f0 <col:30> Inherited
|-CXXMethodDecl 0x55f5da5b1838 <line:154:5, col:64> col:55 cbegin 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x55f5da5b18e8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f5da5b1940 <col:30> Inherited
|-CXXMethodDecl 0x55f5da5b19e0 <line:155:5, col:62> col:55 cend 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x55f5da5b1a90 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f5da5b1ae8 <col:30> Inherited
|-CXXMethodDecl 0x55f5da5b1b10 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55f5da5b1bc0 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55f5da5b1c70 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55f5da5b1e30 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x55f5da5b1d20 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55f5da5b1d98 <col:37, col:63> col:57 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x55f5da5b1f80 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55f5da5b1ef0 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f5da5b2128 <line:163:5, col:65> col:43 operator[] 'SelectSet::SelectorInfo &(Vector::size_type)'
| |-ParmVarDecl 0x55f5da5b2038 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55f5da5b21e0 <col:20>
| `-OptimizeNoneAttr 0x55f5da5b2238 <col:30>
|-CXXMethodDecl 0x55f5da5b2358 <line:164:5, col:73> col:49 operator[] 'const SelectSet::SelectorInfo &(Vector::size_type) const'
| |-ParmVarDecl 0x55f5da5b2260 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55f5da5b2410 <col:20>
| `-OptimizeNoneAttr 0x55f5da5b2468 <col:30>
|-CXXMethodDecl 0x55f5da5b2520 <line:165:5, col:29> col:15 at 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| `-ParmVarDecl 0x55f5da5b2490 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f5da5b2668 <line:166:5, col:37> col:21 at 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55f5da5b25d8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f5da5b2798 <line:167:5, col:21> col:15 front 'SelectSet::SelectorInfo &()' inline
|-CXXMethodDecl 0x55f5da5b28c8 <line:168:5, col:29> col:21 front 'const SelectSet::SelectorInfo &() const' inline
|-CXXMethodDecl 0x55f5da5b2998 <line:169:5, col:20> col:15 back 'SelectSet::SelectorInfo &()' inline
|-CXXMethodDecl 0x55f5da5b2a68 <line:170:5, col:28> col:21 back 'const SelectSet::SelectorInfo &() const' inline
|-CXXMethodDecl 0x55f5da5b2ba8 <line:172:5, col:39> col:15 unchecked_at 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| `-ParmVarDecl 0x55f5da5b2b18 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f5da5b2cf0 <line:173:5, col:47> col:21 unchecked_at 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55f5da5b2c60 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f5da5b2e38 <line:174:5, col:59> col:15 at_u 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| |-ParmVarDecl 0x55f5da5b2da8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55f5da5b2ef0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55f5da5b2ff0 <line:175:5, col:71> col:21 at_u 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55f5da5b2f60 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55f5da5b30a8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55f5da5b3168 <line:177:5, col:20> col:15 data 'SelectSet::SelectorInfo *()' inline
|-CXXMethodDecl 0x55f5da5b3268 <line:178:5, col:28> col:21 data 'const SelectSet::SelectorInfo *() const' inline
|-CXXMethodDecl 0x55f5da5b3418 <line:180:5, col:48> col:17 push_back 'void (Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| `-ParmVarDecl 0x55f5da5b3328 <col:27, col:47> col:47 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-FunctionTemplateDecl 0x55f5da5b3bd8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55f5da5b34d0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<SelectSet::SelectorInfo>':'fast_argument<SelectSet::SelectorInfo, true>'
| `-CXXMethodDecl 0x55f5da5b3b38 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (SelectSet::SelectorInfo &&)' inline
|   `-ParmVarDecl 0x55f5da5b3a38 <col:58, col:62> col:62 v 'SelectSet::SelectorInfo &&'
|-CXXMethodDecl 0x55f5da5b3cb8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55f5da5b3e08 <line:186:5, col:49> col:17 push_front 'void (Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| `-ParmVarDecl 0x55f5da5b3d78 <col:28, col:48> col:48 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x55f5da5b3ec0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55f5da5b4108 <line:189:5, col:62> col:21 insert 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x55f5da5b3f80 <col:28, col:37> col:37 it 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
| `-ParmVarDecl 0x55f5da5b3ff8 <col:41, col:61> col:61 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x55f5da5b42c8 <line:190:5, col:38> col:21 erase 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator)' inline
| `-ParmVarDecl 0x55f5da5b41d8 <col:27, col:36> col:36 it 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
|-CXXMethodDecl 0x55f5da5b4518 <line:191:5, col:49> col:21 erase 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator, Vector<SelectSet::SelectorInfo>::iterator)' inline
| |-ParmVarDecl 0x55f5da5b4390 <col:27, col:36> col:36 a 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
| `-ParmVarDecl 0x55f5da5b4408 <col:39, col:48> col:48 b 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
|-CXXMethodDecl 0x55f5da5b45d8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55f5da5b4838 <line:195:5, col:34> col:17 swap 'void (Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x55f5da5b4740 <col:22, col:33> col:33 x 'Vector<SelectSet::SelectorInfo> &'
`-CXXDestructorDecl 0x55f5da5b4908 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55f5da5b4908

Layout: <CGRecordLayout
  LLVMType:%class.Vector.16 = type { %class.vector_memory.17 }
  NonVirtualBaseLLVMType:%class.Vector.16 = type { %class.vector_memory.17 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f5da5977b0 <../dummy_inc/click/selectset.hh:36:1, line:109:1> line:36:7 referenced class SelectSet definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55f5da5978c8 <col:1, col:7> col:7 implicit referenced class SelectSet
|-AccessSpecDecl 0x55f5da597958 <col:19, col:25> col:19 public
|-CXXConstructorDecl 0x55f5da5a1a20 <line:38:5, col:15> col:5 SelectSet 'void ()'
|-CXXDestructorDecl 0x55f5da5a1b10 <line:39:5, col:16> col:5 ~SelectSet 'void ()' noexcept-unevaluated 0x55f5da5a1b10
|-CXXMethodDecl 0x55f5da5a1c10 <line:41:5, col:21> col:10 initialize 'void ()'
|-CXXMethodDecl 0x55f5da5a1eb0 <line:43:5, col:54> col:9 add_select 'int (int, Element *, int)'
| |-ParmVarDecl 0x55f5da5a1cc8 <col:20, col:24> col:24 fd 'int'
| |-ParmVarDecl 0x55f5da5a1d40 <col:28, col:37> col:37 element 'Element *'
| `-ParmVarDecl 0x55f5da5a1dc0 <col:46, col:50> col:50 mask 'int'
|-CXXMethodDecl 0x55f5da5a2120 <line:44:5, col:57> col:9 remove_select 'int (int, Element *, int)'
| |-ParmVarDecl 0x55f5da5a1f80 <col:23, col:27> col:27 fd 'int'
| |-ParmVarDecl 0x55f5da5a1ff8 <col:31, col:40> col:40 element 'Element *'
| `-ParmVarDecl 0x55f5da5a2078 <col:49, col:53> col:53 mask 'int'
|-CXXMethodDecl 0x55f5da5a2278 <line:46:5, col:42> col:10 run_selects 'void (RouterThread *)'
| `-ParmVarDecl 0x55f5da5a21e8 <col:22, col:36> col:36 thread 'RouterThread *'
|-CXXMethodDecl 0x55f5da5a2340 <line:47:5, line:50:5> line:47:17 used wake_immediate 'void ()' inline
| `-CompoundStmt 0x55f5da5b5fb8 <col:34, line:50:5>
|   |-BinaryOperator 0x55f5da5b5988 <line:48:2, col:23> 'volatile bool' lvalue '='
|   | |-MemberExpr 0x55f5da5b5948 <col:2> 'volatile bool' lvalue ->_wake_pipe_pending 0x55f5da5a2ac8
|   | | `-CXXThisExpr 0x55f5da5b5938 <col:2> 'SelectSet *' implicit this
|   | `-CXXBoolLiteralExpr 0x55f5da5b5978 <col:23> 'bool' true
|   `-CallExpr 0x55f5da5b5f90 <line:49:2, col:43> 'void'
|     |-ImplicitCastExpr 0x55f5da5b5f78 <col:2> 'void (*)(long)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x55f5da5b5ef8 <col:2> 'void (long)' lvalue Function 0x55f5da5b5df8 'ignore_result' 'void (long)' (FunctionTemplate 0x55f5da26ec78 'ignore_result')
|     `-CallExpr 0x55f5da5b5ba0 <col:16, col:42> 'ssize_t':'long'
|       |-ImplicitCastExpr 0x55f5da5b5b88 <col:16> 'ssize_t (*)(int, const void *, size_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55f5da5b5b08 <col:16> 'ssize_t (int, const void *, size_t)' lvalue Function 0x55f5da56fd50 'write' 'ssize_t (int, const void *, size_t)'
|       |-ImplicitCastExpr 0x55f5da5b5bd8 <col:22, col:34> 'int' <LValueToRValue>
|       | `-ArraySubscriptExpr 0x55f5da5b5ab0 <col:22, col:34> 'int' lvalue
|       |   |-ImplicitCastExpr 0x55f5da5b5a98 <col:22> 'int *' <ArrayToPointerDecay>
|       |   | `-MemberExpr 0x55f5da5b5a48 <col:22> 'int [2]' lvalue ->_wake_pipe 0x55f5da5a2a68
|       |   |   `-CXXThisExpr 0x55f5da5b5a38 <col:22> 'SelectSet *' implicit this
|       |   `-IntegerLiteral 0x55f5da5b5a78 <col:33> 'int' 1
|       |-ImplicitCastExpr 0x55f5da5b5c08 <col:37> 'const void *' <BitCast>
|       | `-ImplicitCastExpr 0x55f5da5b5bf0 <col:37> 'const char *' <ArrayToPointerDecay>
|       |   `-StringLiteral 0x55f5da5b5ad0 <col:37> 'const char [1]' lvalue ""
|       `-ImplicitCastExpr 0x55f5da5b5c20 <col:41> 'size_t':'unsigned long' <IntegralCast>
|         `-IntegerLiteral 0x55f5da5b5ae8 <col:41> 'int' 1
|-CXXMethodDecl 0x55f5da5a2480 <line:52:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x55f5da5a23f0 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x55f5da5a2548 <line:54:5, col:23> col:17 fence 'void ()' inline
|-AccessSpecDecl 0x55f5da5a25e8 <line:56:3, col:10> col:3 private
|-CXXRecordDecl 0x55f5da5a2610 <line:58:5, line:66:5> line:58:12 referenced struct SelectorInfo definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55f5da5a2728 <col:5, col:12> col:12 implicit referenced struct SelectorInfo
| |-FieldDecl 0x55f5da5a27c8 <line:59:2, col:11> col:11 read 'Element *'
| |-FieldDecl 0x55f5da5a2828 <line:60:2, col:11> col:11 write 'Element *'
| |-FieldDecl 0x55f5da5a2890 <line:61:2, col:6> col:6 pollfd 'int'
| `-CXXConstructorDecl 0x55f5da5a2940 <line:62:2, line:65:2> line:62:2 SelectorInfo 'void ()'
|   |-CXXCtorInitializer Field 0x55f5da5a27c8 'read' 'Element *'
|   | `-ImplicitCastExpr 0x55f5da5b6018 <line:63:13> 'Element *' <NullToPointer>
|   |   `-IntegerLiteral 0x55f5da5b5fd8 <col:13> 'int' 0
|   |-CXXCtorInitializer Field 0x55f5da5a2828 'write' 'Element *'
|   | `-ImplicitCastExpr 0x55f5da5b6098 <col:23> 'Element *' <NullToPointer>
|   |   `-IntegerLiteral 0x55f5da5b6058 <col:23> 'int' 0
|   |-CXXCtorInitializer Field 0x55f5da5a2890 'pollfd' 'int'
|   | `-UnaryOperator 0x55f5da5b60f8 <col:34, col:35> 'int' prefix '-'
|   |   `-IntegerLiteral 0x55f5da5b60d8 <col:35> 'int' 1
|   `-CompoundStmt 0x55f5da5b6170 <line:64:2, line:65:2>
|-FieldDecl 0x55f5da5a2a68 <line:68:5, col:21> col:9 referenced _wake_pipe 'int [2]'
|-FieldDecl 0x55f5da5a2ac8 <line:69:5, col:19> col:19 referenced _wake_pipe_pending 'volatile bool'
|-FieldDecl 0x55f5da5a9be0 <line:82:5, col:27> col:27 _pollfds 'Vector<struct pollfd>':'Vector<pollfd>'
|-FieldDecl 0x55f5da5b49f0 <line:83:5, col:26> col:26 _selinfo 'Vector<SelectSet::SelectorInfo>':'Vector<SelectSet::SelectorInfo>'
|-CXXMethodDecl 0x55f5da5b4c28 <line:89:5, col:63> col:10 register_select 'void (int, bool, bool)'
| |-ParmVarDecl 0x55f5da5b4a58 <col:26, col:30> col:30 fd 'int'
| |-ParmVarDecl 0x55f5da5b4ad0 <col:34, col:39> col:39 add_read 'bool'
| `-ParmVarDecl 0x55f5da5b4b48 <col:49, col:54> col:54 add_write 'bool'
|-CXXMethodDecl 0x55f5da5b4e10 <line:90:5, col:41> col:10 remove_pollfd 'void (int, int)'
| |-ParmVarDecl 0x55f5da5b4cf8 <col:24, col:28> col:28 pi 'int'
| `-ParmVarDecl 0x55f5da5b4d78 <col:32, col:36> col:36 event 'int'
|-CXXMethodDecl 0x55f5da5b5058 <line:91:5, col:49> col:17 call_selected 'void (int, int) const' inline
| |-ParmVarDecl 0x55f5da5b4ed8 <col:31, col:35> col:35 fd 'int'
| `-ParmVarDecl 0x55f5da5b4f58 <col:39, col:43> col:43 mask 'int'
|-CXXMethodDecl 0x55f5da5b5268 <line:92:5, col:63> col:17 post_select 'bool (RouterThread *, bool)' inline
| |-ParmVarDecl 0x55f5da5b5118 <col:29, col:43> col:43 thread 'RouterThread *'
| `-ParmVarDecl 0x55f5da5b5190 <col:51, col:56> col:56 acquire 'bool'
|-CXXMethodDecl 0x55f5da5b53b8 <line:97:5, col:47> col:10 run_selects_poll 'void (RouterThread *)'
| `-ParmVarDecl 0x55f5da5b5328 <col:27, col:41> col:41 thread 'RouterThread *'
|-CXXMethodDecl 0x55f5da5b5480 <line:102:5, col:22> col:17 used lock 'void ()' inline
|-CXXMethodDecl 0x55f5da5b5540 <line:103:5, col:24> col:17 used unlock 'void ()' inline
|-CXXConstructorDecl 0x55f5da5b5608 <line:36:7> col:7 implicit SelectSet 'void (const SelectSet &)' inline default noexcept-unevaluated 0x55f5da5b5608
| `-ParmVarDecl 0x55f5da5b5718 <col:7> col:7 'const SelectSet &'
`-CXXMethodDecl 0x55f5da5b57b8 <col:7> col:7 implicit operator= 'SelectSet &(const SelectSet &)' inline default noexcept-unevaluated 0x55f5da5b57b8
  `-ParmVarDecl 0x55f5da5b58c8 <col:7> col:7 'const SelectSet &'

Layout: <CGRecordLayout
  LLVMType:%class.SelectSet = type { [2 x i32], i8, %class.Vector.15, %class.Vector.16 }
  NonVirtualBaseLLVMType:%class.SelectSet = type { [2 x i32], i8, %class.Vector.15, %class.Vector.16 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f5da528b68 <../dummy_inc/click/sync.hh:46:1, line:64:1> line:46:7 referenced class Spinlock definition
|-DefinitionData empty standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55f5da528c88 <col:1, col:7> col:7 implicit referenced class Spinlock
|-AccessSpecDecl 0x55f5da528d18 <col:18, col:24> col:18 public
|-CXXConstructorDecl 0x55f5da528da0 <line:48:5, col:21> col:12 Spinlock 'void ()' inline
|-CXXDestructorDecl 0x55f5da528e90 <line:49:5, col:22> col:12 ~Spinlock 'void () noexcept' inline
|-CXXMethodDecl 0x55f5da528f90 <line:51:5, col:25> col:17 used acquire 'void ()' inline
|-CXXMethodDecl 0x55f5da529050 <line:52:5, col:25> col:17 used release 'void ()' inline
|-CXXMethodDecl 0x55f5da529110 <line:53:5, col:25> col:17 attempt 'bool ()' inline
|-CXXMethodDecl 0x55f5da5291f8 <line:54:5, col:26> col:17 nested 'bool () const' inline
|-CXXConstructorDecl 0x55f5da529318 <line:46:7> col:7 implicit constexpr Spinlock 'void (const Spinlock &)' inline default trivial noexcept-unevaluated 0x55f5da529318
| `-ParmVarDecl 0x55f5da529428 <col:7> col:7 'const Spinlock &'
`-CXXMethodDecl 0x55f5da5badc8 <col:7> col:7 implicit operator= 'Spinlock &(const Spinlock &)' inline default trivial noexcept-unevaluated 0x55f5da5badc8
  `-ParmVarDecl 0x55f5da5baed8 <col:7> col:7 'const Spinlock &'

Layout: <CGRecordLayout
  LLVMType:%class.Spinlock = type { i8 }
  NonVirtualBaseLLVMType:%class.Spinlock.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f5da4910a8 <../dummy_inc/click/task.hh:339:5, line:342:5> line:339:11 referenced union Pending definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55f5da4911c8 <col:5, col:11> col:11 implicit union Pending
|-FieldDecl 0x55f5da491268 <line:340:9, col:15> col:15 t 'Task *'
|-FieldDecl 0x55f5da4912c8 <line:341:9, col:19> col:19 referenced x 'uintptr_t':'unsigned long'
|-CXXConstructorDecl 0x55f5da5ba3c8 <line:339:11> col:11 implicit constexpr Pending 'void (const Task::Pending &)' inline default trivial noexcept-unevaluated 0x55f5da5ba3c8
| `-ParmVarDecl 0x55f5da5ba4d8 <col:11> col:11 'const Task::Pending &'
|-CXXConstructorDecl 0x55f5da5ba578 <col:11> col:11 implicit constexpr Pending 'void (Task::Pending &&)' inline default trivial noexcept-unevaluated 0x55f5da5ba578
| `-ParmVarDecl 0x55f5da5ba688 <col:11> col:11 'Task::Pending &&'
|-CXXDestructorDecl 0x55f5da5ba6f8 <col:11> col:11 implicit ~Pending 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55f5da5baf78 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(const Task::Pending &)' inline default trivial noexcept-unevaluated 0x55f5da5baf78
| `-ParmVarDecl 0x55f5da5bb088 <col:11> col:11 'const Task::Pending &'
|-CXXMethodDecl 0x55f5da5bb0f8 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(Task::Pending &&)' inline default trivial noexcept-unevaluated 0x55f5da5bb0f8
| `-ParmVarDecl 0x55f5da5bb208 <col:11> col:11 'Task::Pending &&'
`-CXXConstructorDecl 0x55f5da5c1878 <col:11> col:11 implicit used Pending 'void () noexcept' inline default trivial
  `-CompoundStmt 0x55f5da5c1950 <col:11>

Layout: <CGRecordLayout
  LLVMType:%"union.Task::Pending" = type { %class.Task* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f5da52aa60 <../dummy_inc/click/sync.hh:303:1, line:324:1> line:303:7 referenced class SpinlockIRQ definition
|-DefinitionData pass_in_registers empty standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55f5da52ab78 <col:1, col:7> col:7 implicit referenced class SpinlockIRQ
|-AccessSpecDecl 0x55f5da52ac08 <col:21, col:27> col:21 public
|-CXXConstructorDecl 0x55f5da52ac90 <line:305:5, col:24> col:12 SpinlockIRQ 'void ()' inline
|-TypedefDecl 0x55f5da52ad50 <line:310:5, col:17> col:17 referenced flags_t 'int'
| `-BuiltinType 0x55f5d9fa93b0 'int'
|-CXXMethodDecl 0x55f5da52ae18 <line:313:5, col:59> col:20 acquire 'SpinlockIRQ::flags_t ()' inline
| `-AlwaysInlineAttr 0x55f5da52aeb8 <col:45> always_inline
|-CXXMethodDecl 0x55f5da52afe8 <line:314:5, col:63> col:17 release 'void (SpinlockIRQ::flags_t)' inline
| |-ParmVarDecl 0x55f5da52af20 <col:25> col:32 'SpinlockIRQ::flags_t':'int'
| `-AlwaysInlineAttr 0x55f5da52b090 <col:49> always_inline
|-CXXConstructorDecl 0x55f5da52b188 <line:303:7> col:7 implicit constexpr SpinlockIRQ 'void (const SpinlockIRQ &)' inline default trivial noexcept-unevaluated 0x55f5da52b188
| `-ParmVarDecl 0x55f5da52b298 <col:7> col:7 'const SpinlockIRQ &'
|-CXXConstructorDecl 0x55f5da52b338 <col:7> col:7 implicit constexpr SpinlockIRQ 'void (SpinlockIRQ &&)' inline default trivial noexcept-unevaluated 0x55f5da52b338
| `-ParmVarDecl 0x55f5da52b448 <col:7> col:7 'SpinlockIRQ &&'
|-CXXDestructorDecl 0x55f5da5ba7e0 <col:7> col:7 implicit ~SpinlockIRQ 'void ()' inline default trivial noexcept-unevaluated 0x55f5da5ba7e0
|-CXXMethodDecl 0x55f5da5bb2a8 <col:7> col:7 implicit operator= 'SpinlockIRQ &(const SpinlockIRQ &)' inline default trivial noexcept-unevaluated 0x55f5da5bb2a8
| `-ParmVarDecl 0x55f5da5bb3b8 <col:7> col:7 'const SpinlockIRQ &'
`-CXXMethodDecl 0x55f5da5bb428 <col:7> col:7 implicit operator= 'SpinlockIRQ &(SpinlockIRQ &&)' inline default trivial noexcept-unevaluated 0x55f5da5bb428
  `-ParmVarDecl 0x55f5da5bb538 <col:7> col:7 'SpinlockIRQ &&'

Layout: <CGRecordLayout
  LLVMType:%class.SpinlockIRQ = type { i8 }
  NonVirtualBaseLLVMType:%class.SpinlockIRQ.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f5da5b65e0 prev 0x55f5da597720 <../dummy_inc/click/routerthread.hh:28:1, line:248:1> line:28:7 referenced class RouterThread definition
|-DefinitionData has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-CXXRecordDecl 0x55f5da5b66d8 <col:1, col:7> col:7 implicit referenced class RouterThread
|-AccessSpecDecl 0x55f5da5b6768 <col:22, col:28> col:22 public
|-EnumDecl 0x55f5da5b6790 <line:30:5, col:58> col:5
| |-EnumConstantDecl 0x55f5da5b68a8 <col:12, col:32> col:12 THREAD_QUIESCENT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:30:5)'
| | `-ConstantExpr 0x55f5da5b6888 <col:31, col:32> 'int' Int: -1
| |   `-UnaryOperator 0x55f5da5b6870 <col:31, col:32> 'int' prefix '-'
| |     `-IntegerLiteral 0x55f5da5b6850 <col:32> 'int' 1
| `-EnumConstantDecl 0x55f5da5b6950 <col:35, col:53> col:35 THREAD_UNKNOWN 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:30:5)'
|   `-ConstantExpr 0x55f5da5b6930 <col:52, col:53> 'int' Int: -1000
|     `-UnaryOperator 0x55f5da5b6918 <col:52, col:53> 'int' prefix '-'
|       `-IntegerLiteral 0x55f5da5b68f8 <col:53> 'int' 1000
|-CXXMethodDecl 0x55f5da5b69f0 <line:32:5, col:28> col:16 thread_id 'int () const' inline
|-CXXMethodDecl 0x55f5da5b6ab0 <line:34:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x55f5da5b6b98 <line:35:5, col:52> col:22 timer_set 'TimerSet &()' inline
| `-CompoundStmt 0x55f5da5bb5f8 <col:34, col:52>
|   `-ReturnStmt 0x55f5da5bb5e8 <col:36, col:43>
|     `-MemberExpr 0x55f5da5bb5b8 <col:43> 'TimerSet' lvalue ->_timers 0x55f5da5b8868
|       `-CXXThisExpr 0x55f5da5bb5a8 <col:43> 'RouterThread *' implicit this
|-CXXMethodDecl 0x55f5da5b6c88 <line:36:5, col:64> col:28 timer_set 'const TimerSet &() const' inline
| `-CompoundStmt 0x55f5da5bb660 <col:46, col:64>
|   `-ReturnStmt 0x55f5da5bb650 <col:48, col:55>
|     `-MemberExpr 0x55f5da5bb620 <col:55> 'const TimerSet' lvalue ->_timers 0x55f5da5b8868
|       `-CXXThisExpr 0x55f5da5bb610 <col:55> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x55f5da5b6d78 <line:38:5, col:55> col:23 select_set 'SelectSet &()' inline
| `-CompoundStmt 0x55f5da5bb6c8 <col:36, col:55>
|   `-ReturnStmt 0x55f5da5bb6b8 <col:38, col:45>
|     `-MemberExpr 0x55f5da5bb688 <col:45> 'SelectSet' lvalue ->_selects 0x55f5da5b88c8
|       `-CXXThisExpr 0x55f5da5bb678 <col:45> 'RouterThread *' implicit this
|-CXXMethodDecl 0x55f5da5b6e68 <line:39:5, col:67> col:29 select_set 'const SelectSet &() const' inline
| `-CompoundStmt 0x55f5da5bb730 <col:48, col:67>
|   `-ReturnStmt 0x55f5da5bb720 <col:50, col:57>
|     `-MemberExpr 0x55f5da5bb6f0 <col:57> 'const SelectSet' lvalue ->_selects 0x55f5da5b88c8
|       `-CXXThisExpr 0x55f5da5bb6e0 <col:57> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x55f5da5b6f28 <line:43:5, col:26> col:17 active 'bool () const' inline
|-CXXMethodDecl 0x55f5da5b7018 <line:44:5, col:31> col:18 task_begin 'Task *() const' inline
|-CXXMethodDecl 0x55f5da5b7188 <line:45:5, col:40> col:18 task_next 'Task *(Task *) const' inline
| `-ParmVarDecl 0x55f5da5b70c8 <col:28, col:34> col:34 task 'Task *'
|-CXXMethodDecl 0x55f5da5b7250 <line:46:5, col:29> col:18 task_end 'Task *() const' inline
|-CXXMethodDecl 0x55f5da5b7698 <line:47:5, col:59> col:10 scheduled_tasks 'void (Router *, Vector<Task *> &)'
| |-ParmVarDecl 0x55f5da5b7300 <col:26, col:34> col:34 router 'Router *'
| `-ParmVarDecl 0x55f5da5b7580 <col:42, col:58> col:58 x 'Vector<Task *> &'
|-CXXMethodDecl 0x55f5da5b7768 <line:49:5, col:28> col:17 lock_tasks 'void ()' inline
|-CXXMethodDecl 0x55f5da5b7828 <line:50:5, col:30> col:17 unlock_tasks 'void ()' inline
|-CXXMethodDecl 0x55f5da5b78e8 <line:52:5, col:38> col:17 schedule_block_tasks 'void ()' inline
|-CXXMethodDecl 0x55f5da5b7a28 <line:53:5, col:43> col:17 used block_tasks 'void (bool)' inline
| `-ParmVarDecl 0x55f5da5b7998 <col:29, col:34> col:34 scheduled 'bool'
|-CXXMethodDecl 0x55f5da5b7af0 <line:54:5, col:31> col:17 used unblock_tasks 'void ()' inline
|-CXXMethodDecl 0x55f5da5b7bb0 <line:56:5, col:29> col:17 stop_flag 'bool () const' inline
|-CXXMethodDecl 0x55f5da5b7c70 <line:58:5, col:35> col:17 mark_driver_entry 'void ()' inline
|-CXXMethodDecl 0x55f5da5b7d30 <line:59:5, col:17> col:10 driver 'void ()'
|-CXXMethodDecl 0x55f5da5b7e70 <line:61:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x55f5da5b7de0 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x55f5da5b7f38 <line:77:5, col:22> col:17 used wake 'void ()' inline
|-CXXMethodDecl 0x55f5da5b7ff8 <line:80:5, col:29> col:17 run_signals 'void ()' inline
|-EnumDecl 0x55f5da5b8098 <line:83:5, line:86:20> line:83:5
| |-EnumConstantDecl 0x55f5da5b8160 <col:12> col:12 referenced S_PAUSED 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55f5da5b81b0 <col:22> col:22 referenced S_BLOCKED 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55f5da5b8200 <col:33> col:33 referenced S_TIMERWAIT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55f5da5b8250 <line:84:12> col:12 S_LOCKSELECT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55f5da5b82a0 <col:26> col:26 S_LOCKTASKS 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55f5da5b82f0 <line:85:12> col:12 S_RUNTASK 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55f5da5b8340 <col:23> col:23 S_RUNTIMER 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55f5da5b8390 <col:35> col:35 S_RUNSIGNAL 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55f5da5b83e0 <col:48> col:48 S_RUNPENDING 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55f5da5b8430 <col:62> col:62 S_RUNSELECT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| `-EnumConstantDecl 0x55f5da5b8480 <line:86:12> col:12 NSTATES 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
|-CXXMethodDecl 0x55f5da5b8578 <line:87:5, col:43> col:17 used set_thread_state 'void (int)' inline
| `-ParmVarDecl 0x55f5da5b84e8 <col:34, col:38> col:38 state 'int'
|-CXXMethodDecl 0x55f5da5b86c8 <line:88:5, col:61> col:17 set_thread_state_for_blocking 'void (int)' inline
| `-ParmVarDecl 0x55f5da5b8638 <col:47, col:51> col:51 delay_type 'int'
|-AccessSpecDecl 0x55f5da5b8770 <line:104:3, col:10> col:3 private
|-FieldDecl 0x55f5da5b87a8 <line:119:5, col:14> col:14 referenced _task_link 'TaskLink'
|-FieldDecl 0x55f5da5b8808 <line:120:5, col:19> col:19 referenced _stop_flag 'volatile bool'
|-FieldDecl 0x55f5da5b8868 <line:125:5, col:14> col:14 referenced _timers 'TimerSet'
|-FieldDecl 0x55f5da5b88c8 <line:127:5, col:15> col:15 referenced _selects 'SelectSet'
|-FieldDecl 0x55f5da5b8948 <line:148:5, col:14> col:14 referenced _task_lock 'Spinlock'
| `-AlignedAttr 0x55f5da5b89b8 <col:40, col:50> aligned
|   `-ConstantExpr 0x55f5da5b8998 <col:48> 'int' Int: 64
|     `-IntegerLiteral 0x55f5da5b8918 <col:48> 'int' 64
|-FieldDecl 0x55f5da5b8a28 <line:149:5, col:21> col:21 referenced _task_blocker 'atomic_uint32_t'
|-FieldDecl 0x55f5da5b8a88 <line:150:5, col:21> col:21 referenced _task_blocker_waiting 'atomic_uint32_t'
|-FieldDecl 0x55f5da5b8b80 <line:152:5, col:19> col:19 referenced _pending_head 'Task::Pending':'Task::Pending'
|-FieldDecl 0x55f5da5b8c90 <line:153:5, col:20> col:20 _pending_tail 'Task::Pending *'
|-FieldDecl 0x55f5da5b8cf0 <line:154:5, col:17> col:17 _pending_lock 'SpinlockIRQ'
|-FieldDecl 0x55f5da5b8d70 <line:157:5, col:13> col:13 referenced _master 'Master *'
| `-AlignedAttr 0x55f5da5b8de0 <col:36, col:46> aligned
|   `-ConstantExpr 0x55f5da5b8dc0 <col:44> 'int' Int: 64
|     `-IntegerLiteral 0x55f5da5b8d40 <col:44> 'int' 64
|-FieldDecl 0x55f5da5b8e58 <line:158:5, col:9> col:9 referenced _id 'int'
|-FieldDecl 0x55f5da5b8eb8 <line:159:5, col:10> col:10 referenced _driver_entered 'bool'
|-AccessSpecDecl 0x55f5da5b8f08 <line:170:3, col:9> col:3 public
|-FieldDecl 0x55f5da5b8f48 <line:171:5, col:14> col:14 _tasks_per_iter 'unsigned int'
|-FieldDecl 0x55f5da5b8fb0 <line:172:5, col:14> col:14 _iters_per_os 'unsigned int'
|-AccessSpecDecl 0x55f5da5b9000 <line:173:3, col:10> col:3 private
|-CXXConstructorDecl 0x55f5da5b91a8 <line:205:5, col:46> col:5 RouterThread 'void (Master *, int)'
| |-ParmVarDecl 0x55f5da5b9038 <col:18, col:26> col:26 master 'Master *'
| `-ParmVarDecl 0x55f5da5b90b8 <col:34, col:38> col:38 threadno 'int'
|-CXXDestructorDecl 0x55f5da5b92a8 <line:206:5, col:19> col:5 ~RouterThread 'void ()' noexcept-unevaluated 0x55f5da5b92a8
|-CXXMethodDecl 0x55f5da5b93b0 <line:209:5, col:29> col:17 add_pending 'void ()' inline
|-CXXMethodDecl 0x55f5da5b9478 <line:211:5, line:217:5> line:211:21 pass 'unsigned int () const' inline
| `-CompoundStmt 0x55f5da5bb828 <col:34, line:217:5>
|   `-ReturnStmt 0x55f5da5bb818 <line:215:9, col:34>
|     `-ImplicitCastExpr 0x55f5da5bb800 <col:16, col:34> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x55f5da5bb7d0 <col:16, col:34> 'unsigned int' lvalue ->_pass 0x55f5da52d5c0
|         `-ImplicitCastExpr 0x55f5da5bb7b8 <col:16, col:27> 'TaskLink *' <LValueToRValue>
|           `-MemberExpr 0x55f5da5bb788 <col:16, col:27> 'TaskLink *const' lvalue ._next 0x55f5da52d558
|             `-MemberExpr 0x55f5da5bb758 <col:16> 'const TaskLink' lvalue ->_task_link 0x55f5da5b87a8
|               `-CXXThisExpr 0x55f5da5bb748 <col:16> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x55f5da5b9538 <line:221:5, col:28> col:10 driver_lock_tasks 'void ()'
|-CXXMethodDecl 0x55f5da5b95f8 <line:222:5, line:226:5> line:222:17 driver_unlock_tasks 'void ()' inline
| `-CompoundStmt 0x55f5da5bbf50 <col:39, line:226:5>
|   |-DeclStmt 0x55f5da5bba78 <line:223:9, col:68>
|   | `-VarDecl 0x55f5da5bb850 <col:9, col:67> col:18 used val 'uint32_t':'unsigned int' cinit
|   |   `-CXXMemberCallExpr 0x55f5da5bba30 <col:24, col:67> 'uint32_t':'unsigned int'
|   |     |-MemberExpr 0x55f5da5bba00 <col:24, col:38> '<bound member function type>' .compare_swap 0x55f5da2d52c0
|   |     | `-MemberExpr 0x55f5da5bb8c8 <col:24> 'atomic_uint32_t' lvalue ->_task_blocker 0x55f5da5b8a28
|   |     |   `-CXXThisExpr 0x55f5da5bb8b8 <col:24> 'RouterThread *' implicit this
|   |     |-CStyleCastExpr 0x55f5da5bb9b8 <col:51, col:63> 'uint32_t':'unsigned int' <NoOp>
|   |     | `-ImplicitCastExpr 0x55f5da5bb9a0 <col:62, col:63> 'uint32_t':'unsigned int' <IntegralCast> part_of_explicit_cast
|   |     |   `-UnaryOperator 0x55f5da5bb978 <col:62, col:63> 'int' prefix '-'
|   |     |     `-IntegerLiteral 0x55f5da5bb958 <col:63> 'int' 1
|   |     `-ImplicitCastExpr 0x55f5da5bba60 <col:66> 'uint32_t':'unsigned int' <IntegralCast>
|   |       `-IntegerLiteral 0x55f5da5bb9e0 <col:66> 'int' 0
|   |-CStyleCastExpr 0x55f5da5bbac0 <line:224:9, col:16> 'void' <ToVoid>
|   | `-DeclRefExpr 0x55f5da5bba90 <col:16> 'uint32_t':'unsigned int' lvalue Var 0x55f5da5bb850 'val' 'uint32_t':'unsigned int'
|   `-ParenExpr 0x55f5da5bbf30 <line:225:9, col:181> 'void'
|     `-ConditionalOperator 0x55f5da5bbf00 <col:10, col:180> 'void'
|       |-CXXStaticCastExpr 0x55f5da5bbbd8 <col:10, col:50> 'bool' static_cast<_Bool> <NoOp>
|       | `-BinaryOperator 0x55f5da5bbba8 <col:30, col:49> 'bool' '=='
|       |   |-ImplicitCastExpr 0x55f5da5bbb90 <col:30> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-DeclRefExpr 0x55f5da5bbae8 <col:30> 'uint32_t':'unsigned int' lvalue Var 0x55f5da5bb850 'val' 'uint32_t':'unsigned int'
|       |   `-CStyleCastExpr 0x55f5da5bbb68 <col:37, col:49> 'uint32_t':'unsigned int' <NoOp>
|       |     `-ImplicitCastExpr 0x55f5da5bbb50 <col:48, col:49> 'uint32_t':'unsigned int' <IntegralCast> part_of_explicit_cast
|       |       `-UnaryOperator 0x55f5da5bbb28 <col:48, col:49> 'int' prefix '-'
|       |         `-IntegerLiteral 0x55f5da5bbb08 <col:49> 'int' 1
|       |-CXXFunctionalCastExpr 0x55f5da5bbc38 <col:54, col:61> 'void' functional cast to void <ToVoid>
|       | `-IntegerLiteral 0x55f5da5bbc18 <col:60> 'int' 0
|       `-CallExpr 0x55f5da5bbe60 <col:65, col:180> 'void'
|         |-ImplicitCastExpr 0x55f5da5bbe48 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x55f5da5bbe28 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55f5da04a0d0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|         |-ImplicitCastExpr 0x55f5da5bbea0 <col:80> 'const char *' <ArrayToPointerDecay>
|         | `-StringLiteral 0x55f5da5bbd28 <col:80> 'const char [21]' lvalue "val == (uint32_t) -1"
|         |-ImplicitCastExpr 0x55f5da5bbeb8 <col:104> 'const char *' <ArrayToPointerDecay>
|         | `-StringLiteral 0x55f5da5bbd58 <col:104> 'const char [35]' lvalue "../dummy_inc/click/routerthread.hh"
|         |-ImplicitCastExpr 0x55f5da5bbed0 <col:142> 'unsigned int' <IntegralCast>
|         | `-IntegerLiteral 0x55f5da5bbd98 <col:142> 'int' 225
|         `-ImplicitCastExpr 0x55f5da5bbee8 <col:147, col:161> 'const char *' <ArrayToPointerDecay>
|           `-UnaryOperator 0x55f5da5bbe10 <col:147, col:161> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|             `-PredefinedExpr 0x55f5da5bbdf8 <col:161> 'const char [41]' lvalue __PRETTY_FUNCTION__
|               `-StringLiteral 0x55f5da5bbdb8 <col:161> 'const char [41]' lvalue "void RouterThread::driver_unlock_tasks()"
|-CXXMethodDecl 0x55f5da5b9740 <line:228:5, col:37> col:17 run_tasks 'void (int)' inline
| `-ParmVarDecl 0x55f5da5b96b0 <col:27, col:31> col:31 ntasks 'int'
|-CXXMethodDecl 0x55f5da5b9808 <line:229:5, col:33> col:17 process_pending 'void ()' inline
|-CXXMethodDecl 0x55f5da5b98c8 <line:230:5, col:24> col:17 run_os 'void ()' inline
|-CXXMethodDecl 0x55f5da5b99f0 <line:238:5, col:45> col:24 used running_in_interrupt 'bool ()' static inline
|-CXXMethodDecl 0x55f5da5b9ab0 <line:239:5, col:45> col:17 used current_thread_is_running 'bool () const' inline
|-CXXMethodDecl 0x55f5da5b9b70 <line:240:5, col:53> col:17 current_thread_is_running_cleanup 'bool () const' inline
|-FriendDecl 0x55f5da5b9c60 <line:242:5, col:18> col:12 'class Task':'Task'
|-FriendDecl 0x55f5da5b9cc0 <line:243:5, col:18> col:12 'class Master':'Master'
|-FriendDecl 0x55f5da5b9d50 <line:245:5, col:18> col:12 'class SelectSet':'SelectSet'
|-CXXConstructorDecl 0x55f5da5ba118 <line:28:7> col:7 implicit RouterThread 'void (const RouterThread &)' inline default noexcept-unevaluated 0x55f5da5ba118
| `-ParmVarDecl 0x55f5da5ba228 <col:7> col:7 'const RouterThread &'
`-CXXMethodDecl 0x55f5da5ba8e8 <col:7> col:7 implicit operator= 'RouterThread &(const RouterThread &)' inline default noexcept-unevaluated 0x55f5da5ba8e8
  `-ParmVarDecl 0x55f5da5ba9f8 <col:7> col:7 'const RouterThread &'

Layout: <CGRecordLayout
  LLVMType:%class.RouterThread = type { %struct.TaskLink, i8, [7 x i8], %class.TimerSet, %class.SelectSet, [32 x i8], %class.Spinlock, %class.atomic_uint32_t, %class.atomic_uint32_t, %"union.Task::Pending", %"union.Task::Pending"*, %class.SpinlockIRQ, [31 x i8], %class.Master*, i32, i8, i32, i32, [40 x i8] }
  NonVirtualBaseLLVMType:%class.RouterThread.base = type { %struct.TaskLink, i8, [7 x i8], %class.TimerSet, %class.SelectSet, [32 x i8], %class.Spinlock, %class.atomic_uint32_t, %class.atomic_uint32_t, %"union.Task::Pending", %"union.Task::Pending"*, %class.SpinlockIRQ, [31 x i8], %class.Master*, i32, i8, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f5da52d8d0 prev 0x55f5da50f560 <../dummy_inc/click/task.hh:49:1, line:371:1> line:49:7 referenced class Task definition
|-DefinitionData has_user_declared_ctor can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-private 'TaskLink'
|-CXXRecordDecl 0x55f5da52da08 <col:1, col:7> col:7 implicit referenced class Task
|-AccessSpecDecl 0x55f5da52da98 <col:33, col:39> col:33 public
|-EnumDecl 0x55f5da52dac0 <line:52:5, col:50> col:5
| |-EnumConstantDecl 0x55f5da52dc00 <col:12, col:26> col:12 referenced STRIDE1 'Task::(anonymous enum at ../dummy_inc/click/task.hh:52:5)'
| | `-ConstantExpr 0x55f5da52dbe0 <col:22, col:26> 'unsigned int' Int: 65536
| |   `-BinaryOperator 0x55f5da52dbc0 <col:22, col:26> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x55f5da52db80 <col:22> 'unsigned int' 1
| |     `-IntegerLiteral 0x55f5da52dba0 <col:26> 'int' 16
| `-EnumConstantDecl 0x55f5da52dcd0 <col:30, col:47> col:30 referenced MAX_STRIDE 'Task::(anonymous enum at ../dummy_inc/click/task.hh:52:5)'
|   `-ConstantExpr 0x55f5da52dcb0 <col:43, col:47> 'unsigned int' Int: 2147483648
|     `-BinaryOperator 0x55f5da52dc90 <col:43, col:47> 'unsigned int' '<<'
|       |-IntegerLiteral 0x55f5da52dc50 <col:43> 'unsigned int' 1
|       `-IntegerLiteral 0x55f5da52dc70 <col:47> 'int' 31
|-EnumDecl 0x55f5da52dd20 <line:53:5, col:57> col:5
| |-EnumConstantDecl 0x55f5da52de60 <col:12, col:29> col:12 referenced MAX_TICKETS 'Task::(anonymous enum at ../dummy_inc/click/task.hh:53:5)'
| | `-ImplicitCastExpr 0x55f5da52df80 <col:26, col:29> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f5da52de40 <col:26, col:29> 'int' Int: 32768
| |     `-BinaryOperator 0x55f5da52de20 <col:26, col:29> 'int' '<<'
| |       |-IntegerLiteral 0x55f5da52dde0 <col:26> 'int' 1
| |       `-IntegerLiteral 0x55f5da52de00 <col:29> 'int' 15
| `-EnumConstantDecl 0x55f5da52df30 <col:33, col:54> col:33 DEFAULT_TICKETS 'Task::(anonymous enum at ../dummy_inc/click/task.hh:53:5)'
|   `-ImplicitCastExpr 0x55f5da52df98 <col:51, col:54> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55f5da52df10 <col:51, col:54> 'int' Int: 1024
|       `-BinaryOperator 0x55f5da52def0 <col:51, col:54> 'int' '<<'
|         |-IntegerLiteral 0x55f5da52deb0 <col:51> 'int' 1
|         `-IntegerLiteral 0x55f5da52ded0 <col:54> 'int' 10
|-CXXConstructorDecl 0x55f5da52e168 <line:75:5, col:48> col:12 Task 'void (TaskCallback, void *)' inline
| |-ParmVarDecl 0x55f5da52dfc0 <col:17, col:30> col:30 f 'TaskCallback':'bool (*)(Task *, void *)'
| `-ParmVarDecl 0x55f5da52e040 <col:33, col:39> col:39 user_data 'void *'
|-CXXConstructorDecl 0x55f5da52e2f8 <line:86:5, col:27> col:12 used Task 'void (Element *)' inline
| `-ParmVarDecl 0x55f5da52e230 <col:17, col:26> col:26 e 'Element *'
|-CXXDestructorDecl 0x55f5da52e3f0 <line:91:5, col:11> col:5 used ~Task 'void () noexcept'
|-CXXMethodDecl 0x55f5da52e578 <line:98:5, line:100:5> line:98:25 callback 'TaskCallback () const' inline
| `-CompoundStmt 0x55f5da492208 <col:42, line:100:5>
|   `-ReturnStmt 0x55f5da4921f8 <line:99:9, col:16>
|     `-ImplicitCastExpr 0x55f5da4921e0 <col:16> 'TaskCallback':'bool (*)(Task *, void *)' <LValueToRValue>
|       `-MemberExpr 0x55f5da4921b0 <col:16> 'const TaskCallback':'bool (*const)(Task *, void *)' lvalue ->_hook 0x55f5da490f30
|         `-CXXThisExpr 0x55f5da4921a0 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x55f5da52e640 <line:103:5, line:105:5> line:103:18 user_data 'void *() const' inline
| `-CompoundStmt 0x55f5da492288 <col:36, line:105:5>
|   `-ReturnStmt 0x55f5da492278 <line:104:9, col:16>
|     `-ImplicitCastExpr 0x55f5da492260 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x55f5da492230 <col:16> 'void *const' lvalue ->_thunk 0x55f5da490f98
|         `-CXXThisExpr 0x55f5da492220 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x55f5da52e700 <line:108:5, line:110:5> line:108:21 element 'Element *() const' inline
| `-CompoundStmt 0x55f5da492308 <col:37, line:110:5>
|   `-ReturnStmt 0x55f5da4922f8 <line:109:9, col:16>
|     `-ImplicitCastExpr 0x55f5da4922e0 <col:16> 'Element *' <LValueToRValue>
|       `-MemberExpr 0x55f5da4922b0 <col:16> 'Element *const' lvalue ->_owner 0x55f5da491058
|         `-CXXThisExpr 0x55f5da4922a0 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x55f5da52e7c0 <line:114:5, col:31> col:17 initialized 'bool () const' inline
|-CXXMethodDecl 0x55f5da52e888 <line:123:5, col:33> col:16 home_thread_id 'int () const' inline
|-CXXMethodDecl 0x55f5da52e948 <line:132:5, col:35> col:26 thread 'RouterThread *() const' inline
|-CXXMethodDecl 0x55f5da52ea08 <line:135:5, line:137:5> line:135:20 router 'Router *() const' inline
| `-CompoundStmt 0x55f5da4923f0 <col:35, line:137:5>
|   `-ReturnStmt 0x55f5da4923e0 <line:136:9, col:31>
|     `-CXXMemberCallExpr 0x55f5da4923a8 <col:16, col:31> 'Router *'
|       `-MemberExpr 0x55f5da492378 <col:16, col:24> '<bound member function type>' ->router 0x55f5da521d70
|         `-ImplicitCastExpr 0x55f5da4923c8 <col:16> 'const Element *' <NoOp>
|           `-ImplicitCastExpr 0x55f5da492360 <col:16> 'Element *' <LValueToRValue>
|             `-MemberExpr 0x55f5da492330 <col:16> 'Element *const' lvalue ->_owner 0x55f5da491058
|               `-CXXThisExpr 0x55f5da492320 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x55f5da52eac8 <line:140:5, col:22> col:13 master 'Master *() const'
|-CXXMethodDecl 0x55f5da52ecc8 <line:159:5, col:50> col:10 initialize 'void (Element *, bool)'
| |-ParmVarDecl 0x55f5da52eb78 <col:21, col:30> col:30 owner 'Element *'
| `-ParmVarDecl 0x55f5da52ebf0 <col:37, col:42> col:42 schedule 'bool'
|-CXXMethodDecl 0x55f5da52eed8 <line:169:5, col:50> col:10 initialize 'void (Router *, bool)'
| |-ParmVarDecl 0x55f5da52ed88 <col:21, col:29> col:29 router 'Router *'
| `-ParmVarDecl 0x55f5da52ee00 <col:37, col:42> col:42 schedule 'bool'
|-CXXMethodDecl 0x55f5da52efa8 <line:179:5, line:181:5> line:179:17 scheduled 'bool () const' inline
| `-CompoundStmt 0x55f5da492500 <col:35, line:181:5>
|   `-ReturnStmt 0x55f5da4924f0 <line:180:9, col:24>
|     `-ImplicitCastExpr 0x55f5da4924d8 <col:16, col:24> 'bool' <IntegralToBoolean>
|       `-ImplicitCastExpr 0x55f5da4924c0 <col:16, col:24> 'uint8_t':'unsigned char' <LValueToRValue>
|         `-MemberExpr 0x55f5da492490 <col:16, col:24> 'const uint8_t':'const unsigned char' lvalue .is_scheduled 0x55f5da490b68
|           `-MemberExpr 0x55f5da492448 <col:16, col:24> 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55f5da490c88
|             `-MemberExpr 0x55f5da492418 <col:16> 'const union Status':'const Task::Status' lvalue ->_status 0x55f5da490eb8
|               `-CXXThisExpr 0x55f5da492408 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x55f5da48fbb0 <line:190:5, line:192:5> line:190:17 unschedule 'void ()' inline
| `-CompoundStmt 0x55f5da492618 <col:30, line:192:5>
|   `-BinaryOperator 0x55f5da4925f8 <line:191:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x55f5da4925a0 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x55f5da490b68
|     | `-MemberExpr 0x55f5da492558 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55f5da490c88
|     |   `-MemberExpr 0x55f5da492528 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x55f5da490eb8
|     |     `-CXXThisExpr 0x55f5da492518 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x55f5da4925e0 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x55f5da4925d0 <col:32> 'bool' false
|-CXXMethodDecl 0x55f5da48fc70 <line:201:5, line:206:5> line:201:17 used reschedule 'void ()' inline
| `-CompoundStmt 0x55f5da492968 <col:30, line:206:5>
|   |-BinaryOperator 0x55f5da492710 <line:202:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x55f5da4926b8 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x55f5da490b68
|   | | `-MemberExpr 0x55f5da492670 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55f5da490c88
|   | |   `-MemberExpr 0x55f5da492640 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x55f5da490eb8
|   | |     `-CXXThisExpr 0x55f5da492630 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x55f5da4926f8 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x55f5da4926e8 <col:32> 'bool' true
|   |-CallExpr 0x55f5da4927b0 <line:203:9, col:21> 'void'
|   | `-ImplicitCastExpr 0x55f5da492798 <col:9> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f5da492778 <col:9> 'void ()' lvalue Function 0x55f5da528720 'click_fence' 'void ()'
|   `-IfStmt 0x55f5da492950 <line:204:9, line:205:32>
|     |-BinaryOperator 0x55f5da492890 <line:204:13, col:34> 'bool' '<'
|     | |-ImplicitCastExpr 0x55f5da492860 <col:13, col:30> 'uintptr_t':'unsigned long' <LValueToRValue>
|     | | `-MemberExpr 0x55f5da492810 <col:13, col:30> 'uintptr_t':'unsigned long' lvalue .x 0x55f5da4912c8
|     | |   `-MemberExpr 0x55f5da4927e0 <col:13> 'Task::Pending' lvalue ->_pending_nextptr 0x55f5da491340
|     | |     `-CXXThisExpr 0x55f5da4927d0 <col:13> 'Task *' implicit this
|     | `-ImplicitCastExpr 0x55f5da492878 <col:34> 'unsigned long' <IntegralCast>
|     |   `-IntegerLiteral 0x55f5da492840 <col:34> 'int' 2
|     `-CXXMemberCallExpr 0x55f5da492910 <line:205:13, col:32> 'void'
|       |-MemberExpr 0x55f5da4928c0 <col:13> '<bound member function type>' ->complete_schedule 0x55f5da491d40
|       | `-CXXThisExpr 0x55f5da4928b0 <col:13> 'Task *' implicit this
|       `-ImplicitCastExpr 0x55f5da492938 <col:31> 'RouterThread *' <NullToPointer>
|         `-IntegerLiteral 0x55f5da4928f0 <col:31> 'int' 0
|-CXXMethodDecl 0x55f5da48fd30 <line:238:5, line:240:5> line:238:17 fast_reschedule 'void ()' inline
| `-CompoundStmt 0x55f5da492a90 <col:35, line:240:5>
|   `-BinaryOperator 0x55f5da492a70 <line:239:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x55f5da492a18 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x55f5da490b68
|     | `-MemberExpr 0x55f5da4929d0 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55f5da490c88
|     |   `-MemberExpr 0x55f5da4929a0 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x55f5da490eb8
|     |     `-CXXThisExpr 0x55f5da492990 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x55f5da492a58 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x55f5da492a48 <col:32> 'bool' true
|-CXXMethodDecl 0x55f5da48fdf0 <line:250:5, line:253:5> line:250:17 strong_unschedule 'void ()' inline
| `-CompoundStmt 0x55f5da492ca8 <col:37, line:253:5>
|   |-BinaryOperator 0x55f5da492b88 <line:251:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x55f5da492b30 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x55f5da490b68
|   | | `-MemberExpr 0x55f5da492ae8 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55f5da490c88
|   | |   `-MemberExpr 0x55f5da492ab8 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x55f5da490eb8
|   | |     `-CXXThisExpr 0x55f5da492aa8 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x55f5da492b70 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x55f5da492b60 <col:32> 'bool' false
|   `-BinaryOperator 0x55f5da492c88 <line:252:9, col:41> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x55f5da492c30 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_strong_unscheduled 0x55f5da490bc8
|     | `-MemberExpr 0x55f5da492be8 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55f5da490c88
|     |   `-MemberExpr 0x55f5da492bb8 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x55f5da490eb8
|     |     `-CXXThisExpr 0x55f5da492ba8 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x55f5da492c70 <col:41> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x55f5da492c60 <col:41> 'bool' true
|-CXXMethodDecl 0x55f5da48feb0 <line:261:5, line:264:5> line:261:17 strong_reschedule 'void ()' inline
| `-CompoundStmt 0x55f5da492e28 <col:37, line:264:5>
|   |-BinaryOperator 0x55f5da492da8 <line:262:9, col:41> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x55f5da492d50 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_strong_unscheduled 0x55f5da490bc8
|   | | `-MemberExpr 0x55f5da492d08 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55f5da490c88
|   | |   `-MemberExpr 0x55f5da492cd8 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x55f5da490eb8
|   | |     `-CXXThisExpr 0x55f5da492cc8 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x55f5da492d90 <col:41> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x55f5da492d80 <col:41> 'bool' false
|   `-CXXMemberCallExpr 0x55f5da492e08 <line:263:9, col:20> 'void'
|     `-MemberExpr 0x55f5da492dd8 <col:9> '<bound member function type>' ->reschedule 0x55f5da48fc70
|       `-CXXThisExpr 0x55f5da492dc8 <col:9> 'Task *' implicit this
|-CXXMethodDecl 0x55f5da48fff8 <line:275:5, col:39> col:10 move_thread 'void (int)'
| `-ParmVarDecl 0x55f5da48ff68 <col:22, col:26> col:26 new_thread_id 'int'
|-CXXMethodDecl 0x55f5da4900c8 <line:279:5, col:26> col:16 tickets 'int () const' inline
|-CXXMethodDecl 0x55f5da490210 <line:280:5, col:34> col:17 used set_tickets 'void (int)' inline
| `-ParmVarDecl 0x55f5da490180 <col:29, col:33> col:33 n 'int'
|-CXXMethodDecl 0x55f5da490360 <line:281:5, col:41> col:17 adjust_tickets 'void (int)' inline
| `-ParmVarDecl 0x55f5da4902d0 <col:32, col:36> col:36 delta 'int'
|-CXXMethodDecl 0x55f5da490428 <line:284:5, col:22> col:17 fire 'bool ()' inline
|-CXXMethodDecl 0x55f5da4904e8 <line:299:5, col:64> col:25 hook 'TaskCallback () const' inline
| `-DeprecatedAttr 0x55f5da490588 <col:53> "" ""
|-CXXMethodDecl 0x55f5da490620 <line:300:5, col:58> col:18 thunk 'void *() const' inline
| `-DeprecatedAttr 0x55f5da4906c0 <col:47> "" ""
|-AccessSpecDecl 0x55f5da490730 <line:303:3, col:10> col:3 private
|-FieldDecl 0x55f5da490770 <line:310:5, col:14> col:14 referenced _stride 'unsigned int'
|-FieldDecl 0x55f5da4907d8 <line:311:5, col:9> col:9 referenced _tickets 'int'
|-CXXRecordDecl 0x55f5da490828 <line:314:5, line:321:5> line:314:11 union Status definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55f5da490948 <col:5, col:11> col:11 implicit union Status
| |-CXXRecordDecl 0x55f5da4909d8 <line:315:9, line:319:9> line:315:9 struct definition
| | |-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | | |-DefaultConstructor exists trivial
| | | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | | |-MoveConstructor exists simple trivial
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial
| | |-FieldDecl 0x55f5da490b08 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
| | |-FieldDecl 0x55f5da490b68 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
| | |-FieldDecl 0x55f5da490bc8 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
| | |-CXXConstructorDecl 0x55f5da5c0fa8 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
| | |-CXXDestructorDecl 0x55f5da5c1080 <col:9> col:9 implicit ~ 'void () noexcept' inline default trivial
| | |-CXXConstructorDecl 0x55f5da5c1338 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x55f5da5c1338
| | | `-ParmVarDecl 0x55f5da5c1448 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
| | `-CXXConstructorDecl 0x55f5da5c14e8 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x55f5da5c14e8
| |   `-ParmVarDecl 0x55f5da5c15f8 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'
| |-FieldDecl 0x55f5da490c88 <col:9> col:9 implicit referenced 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| |-IndirectFieldDecl 0x55f5da490ce8 <line:316:21> col:21 implicit home_thread_id 'int16_t':'short'
| | |-Field 0x55f5da490c88 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x55f5da490b08 'home_thread_id' 'int16_t':'short'
| |-IndirectFieldDecl 0x55f5da490d40 <line:317:21> col:21 implicit is_scheduled 'uint8_t':'unsigned char'
| | |-Field 0x55f5da490c88 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x55f5da490b68 'is_scheduled' 'uint8_t':'unsigned char'
| |-IndirectFieldDecl 0x55f5da490d98 <line:318:21> col:21 implicit is_strong_unscheduled 'uint8_t':'unsigned char'
| | |-Field 0x55f5da490c88 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x55f5da490bc8 'is_strong_unscheduled' 'uint8_t':'unsigned char'
| |-FieldDecl 0x55f5da490df0 <line:320:9, col:18> col:18 status 'uint32_t':'unsigned int'
| |-CXXConstructorDecl 0x55f5da5c0eb8 <line:314:11> col:11 implicit used Status 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55f5da5c1818 <col:11>
| |-CXXConstructorDecl 0x55f5da5c1188 <col:11> col:11 implicit constexpr Status 'void (const Task::Status &)' inline default trivial noexcept-unevaluated 0x55f5da5c1188
| | `-ParmVarDecl 0x55f5da5c1298 <col:11> col:11 'const Task::Status &'
| |-CXXConstructorDecl 0x55f5da5c1698 <col:11> col:11 implicit constexpr Status 'void (Task::Status &&)' inline default trivial noexcept-unevaluated 0x55f5da5c1698
| | `-ParmVarDecl 0x55f5da5c17a8 <col:11> col:11 'Task::Status &&'
| `-CXXDestructorDecl 0x55f5da7156b0 <col:11> col:11 implicit ~Status 'void () noexcept' inline default trivial
|-FieldDecl 0x55f5da490eb8 <col:5, line:321:7> col:7 referenced _status 'union Status':'Task::Status'
|-FieldDecl 0x55f5da490f30 <line:323:5, col:18> col:18 referenced _hook 'TaskCallback':'bool (*)(Task *, void *)'
|-FieldDecl 0x55f5da490f98 <line:324:5, col:11> col:11 referenced _thunk 'void *'
|-FieldDecl 0x55f5da490ff8 <line:335:5, col:19> col:19 referenced _thread 'RouterThread *'
|-FieldDecl 0x55f5da491058 <line:337:5, col:14> col:14 referenced _owner 'Element *'
|-CXXRecordDecl 0x55f5da4910a8 <line:339:5, line:342:5> line:339:11 referenced union Pending definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55f5da4911c8 <col:5, col:11> col:11 implicit union Pending
| |-FieldDecl 0x55f5da491268 <line:340:9, col:15> col:15 t 'Task *'
| |-FieldDecl 0x55f5da4912c8 <line:341:9, col:19> col:19 referenced x 'uintptr_t':'unsigned long'
| |-CXXConstructorDecl 0x55f5da5ba3c8 <line:339:11> col:11 implicit constexpr Pending 'void (const Task::Pending &)' inline default trivial noexcept-unevaluated 0x55f5da5ba3c8
| | `-ParmVarDecl 0x55f5da5ba4d8 <col:11> col:11 'const Task::Pending &'
| |-CXXConstructorDecl 0x55f5da5ba578 <col:11> col:11 implicit constexpr Pending 'void (Task::Pending &&)' inline default trivial noexcept-unevaluated 0x55f5da5ba578
| | `-ParmVarDecl 0x55f5da5ba688 <col:11> col:11 'Task::Pending &&'
| |-CXXDestructorDecl 0x55f5da5ba6f8 <col:11> col:11 implicit ~Pending 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x55f5da5baf78 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(const Task::Pending &)' inline default trivial noexcept-unevaluated 0x55f5da5baf78
| | `-ParmVarDecl 0x55f5da5bb088 <col:11> col:11 'const Task::Pending &'
| |-CXXMethodDecl 0x55f5da5bb0f8 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(Task::Pending &&)' inline default trivial noexcept-unevaluated 0x55f5da5bb0f8
| | `-ParmVarDecl 0x55f5da5bb208 <col:11> col:11 'Task::Pending &&'
| `-CXXConstructorDecl 0x55f5da5c1878 <col:11> col:11 implicit used Pending 'void () noexcept' inline default trivial
|   `-CompoundStmt 0x55f5da5c1950 <col:11>
|-FieldDecl 0x55f5da491340 <line:343:5, col:13> col:13 referenced _pending_nextptr 'Task::Pending'
|-CXXConstructorDecl 0x55f5da491488 <line:345:5, col:23> col:5 Task 'void (const Task &)'
| `-ParmVarDecl 0x55f5da4913c8 <col:10, col:22> col:22 x 'const Task &'
|-CXXMethodDecl 0x55f5da491638 <line:346:5, col:34> col:11 operator= 'Task &(const Task &)'
| `-ParmVarDecl 0x55f5da491548 <col:21, col:33> col:33 x 'const Task &'
|-CXXMethodDecl 0x55f5da491700 <line:347:5, col:18> col:10 cleanup 'void ()'
|-CXXMethodDecl 0x55f5da4917c0 <line:352:5, col:37> col:17 used on_scheduled_list 'bool () const' inline
|-CXXMethodDecl 0x55f5da491880 <line:353:5, line:355:5> line:353:17 on_pending_list 'bool () const' inline
| `-CompoundStmt 0x55f5da492f38 <col:41, line:355:5>
|   `-ReturnStmt 0x55f5da492f28 <line:354:9, col:38>
|     `-BinaryOperator 0x55f5da492f08 <col:16, col:38> 'bool' '!='
|       |-ImplicitCastExpr 0x55f5da492ed8 <col:16, col:33> 'uintptr_t':'unsigned long' <LValueToRValue>
|       | `-MemberExpr 0x55f5da492e88 <col:16, col:33> 'const uintptr_t':'const unsigned long' lvalue .x 0x55f5da4912c8
|       |   `-MemberExpr 0x55f5da492e58 <col:16> 'const Task::Pending' lvalue ->_pending_nextptr 0x55f5da491340
|       |     `-CXXThisExpr 0x55f5da492e48 <col:16> 'const Task *' implicit this
|       `-ImplicitCastExpr 0x55f5da492ef0 <col:38> 'unsigned long' <IntegralCast>
|         `-IntegerLiteral 0x55f5da492eb8 <col:38> 'int' 0
|-CXXMethodDecl 0x55f5da491940 <line:356:5, col:33> col:17 needs_cleanup 'bool () const' inline
|-CXXMethodDecl 0x55f5da491a80 <line:361:5, col:33> col:10 add_pending 'void (bool)'
| `-ParmVarDecl 0x55f5da4919f0 <col:22, col:27> col:27 always 'bool'
|-CXXMethodDecl 0x55f5da491bf8 <line:362:5, col:46> col:10 process_pending 'void (RouterThread *)'
| `-ParmVarDecl 0x55f5da491b38 <col:26, col:40> col:40 thread 'RouterThread *'
|-CXXMethodDecl 0x55f5da491d40 <line:364:5, col:64> col:10 used complete_schedule 'void (RouterThread *)'
| `-ParmVarDecl 0x55f5da491cb0 <col:28, col:42> col:42 process_pending_thread 'RouterThread *'
|-CXXMethodDecl 0x55f5da491e08 <line:365:5, col:44> col:17 remove_from_scheduled_list 'void ()' inline
|-CXXMethodDecl 0x55f5da491fd0 <line:367:5, col:55> col:17 error_hook 'bool (Task *, void *)' static
| |-ParmVarDecl 0x55f5da491eb8 <col:28, col:34> col:34 task 'Task *'
| `-ParmVarDecl 0x55f5da491f38 <col:40, col:46> col:46 user_data 'void *'
|-FriendDecl 0x55f5da4920d0 <line:369:5, col:18> col:12 'class RouterThread':'RouterThread'
`-FriendDecl 0x55f5da492160 <line:370:5, col:18> col:12 'class Master':'Master'

Layout: <CGRecordLayout
  LLVMType:%class.Task = type { %struct.TaskLink.base, i32, i32, %"union.Task::Status", i1 (%class.Task*, i8*)*, i8*, %class.RouterThread*, %class.Element*, %"union.Task::Pending" }
  NonVirtualBaseLLVMType:%class.Task = type { %struct.TaskLink.base, i32, i32, %"union.Task::Status", i1 (%class.Task*, i8*)*, i8*, %class.RouterThread*, %class.Element*, %"union.Task::Pending" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | ActiveNotifier::task_or_signal_t
         0 |   class Task * t
         0 |   Notifier::callback_type f
         0 |   void * v
         0 |   uintptr_t p
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f5da5d0518 <../dummy_inc/click/notifier.hh:151:13, line:156:5> line:151:13 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-FieldDecl 0x55f5da5d0648 <line:152:2, col:8> col:8 referenced t 'Task *'
|-FieldDecl 0x55f5da5d06a8 <line:153:2, col:16> col:16 referenced f 'Notifier::callback_type':'void (*)(void *, Notifier *)'
|-FieldDecl 0x55f5da5d0710 <line:154:2, col:8> col:8 referenced v 'void *'
`-FieldDecl 0x55f5da5d0770 <line:155:2, col:12> col:12 referenced p 'uintptr_t':'unsigned long'

Layout: <CGRecordLayout
  LLVMType:%"union.ActiveNotifier::task_or_signal_t" = type { %class.Task* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f5da5cf5f0 <../dummy_inc/click/notifier.hh:132:1, line:167:1> line:132:7 referenced class ActiveNotifier definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-public 'Notifier'
|-CXXRecordDecl 0x55f5da5cf748 <col:1, col:7> col:7 implicit referenced class ActiveNotifier
|-AccessSpecDecl 0x55f5da5cf7d8 <col:42, col:48> col:42 public
|-CXXConstructorDecl 0x55f5da5cf8e8 <line:134:5, col:45> col:5 used ActiveNotifier 'void (Notifier::SearchOp)'
| `-ParmVarDecl 0x55f5da5cf810 <col:20, col:34> col:29 op 'Notifier::SearchOp' cinit
|   `-DeclRefExpr 0x55f5da5d1100 <col:34> 'Notifier::SearchOp' EnumConstant 0x55f5da5ca2e0 'SEARCH_STOP' 'Notifier::SearchOp'
|-CXXDestructorDecl 0x55f5da5cf9e0 <line:135:5, col:21> col:5 used ~ActiveNotifier 'void () noexcept'
| `-Overrides: [ 0x55f5da5caa68 Notifier::~Notifier 'void () noexcept' ]
|-CXXMethodDecl 0x55f5da5cfbf0 <line:137:5, col:55> col:9 add_activate_callback 'int (Notifier::callback_type, void *)'
| |-Overrides: [ 0x55f5da5cc390 Notifier::add_activate_callback 'int (Notifier::callback_type, void *)' ]
| |-ParmVarDecl 0x55f5da5cfad0 <col:31, col:45> col:45 f 'Notifier::callback_type':'void (*)(void *, Notifier *)'
| `-ParmVarDecl 0x55f5da5cfb50 <col:48, col:54> col:54 v 'void *'
|-CXXMethodDecl 0x55f5da5cfdc8 <line:138:5, col:59> col:10 remove_activate_callback 'void (Notifier::callback_type, void *)'
| |-Overrides: [ 0x55f5da5cc5e8 Notifier::remove_activate_callback 'void (Notifier::callback_type, void *)' ]
| |-ParmVarDecl 0x55f5da5cfcb0 <col:35, col:49> col:49 f 'Notifier::callback_type':'void (*)(void *, Notifier *)'
| `-ParmVarDecl 0x55f5da5cfd30 <col:52, col:58> col:58 v 'void *'
|-CXXMethodDecl 0x55f5da5d0088 <line:139:5, col:70> col:10 listeners 'void (Vector<Task *> &) const'
| |-ParmVarDecl 0x55f5da5cff60 <col:20, col:35> col:35 v 'Vector<Task *> &'
| `-DeprecatedAttr 0x55f5da5d0130 <col:59> "" ""
|-CXXMethodDecl 0x55f5da5d02c0 <line:141:5, col:61> col:17 used set_active 'void (bool, bool)' inline
| |-ParmVarDecl 0x55f5da5d01b0 <col:28, col:33> col:33 active 'bool'
| `-ParmVarDecl 0x55f5da5d0228 <col:41, col:57> col:46 schedule 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55f5da5d1120 <col:57> 'bool' true
|-CXXMethodDecl 0x55f5da5d0390 <line:142:5, col:22> col:17 wake 'void ()' inline
|-CXXMethodDecl 0x55f5da5d0450 <line:143:5, col:23> col:17 sleep 'void ()' inline
|-AccessSpecDecl 0x55f5da5d04f0 <line:149:3, col:10> col:3 private
|-CXXRecordDecl 0x55f5da5d0518 <line:151:13, line:156:5> line:151:13 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-FieldDecl 0x55f5da5d0648 <line:152:2, col:8> col:8 referenced t 'Task *'
| |-FieldDecl 0x55f5da5d06a8 <line:153:2, col:16> col:16 referenced f 'Notifier::callback_type':'void (*)(void *, Notifier *)'
| |-FieldDecl 0x55f5da5d0710 <line:154:2, col:8> col:8 referenced v 'void *'
| `-FieldDecl 0x55f5da5d0770 <line:155:2, col:12> col:12 referenced p 'uintptr_t':'unsigned long'
|-TypedefDecl 0x55f5da5d0838 <line:151:5, line:156:7> col:7 referenced task_or_signal_t 'union task_or_signal_t':'ActiveNotifier::task_or_signal_t'
| `-ElaboratedType 0x55f5da5d07e0 'union task_or_signal_t' sugar
|   `-RecordType 0x55f5da5d05b0 'ActiveNotifier::task_or_signal_t'
|     `-CXXRecord 0x55f5da5d0518 ''
|-FieldDecl 0x55f5da5d08b8 <line:158:5, col:11> col:11 referenced _listener1 'Task *'
|-FieldDecl 0x55f5da5d0998 <line:159:5, col:23> col:23 referenced _listeners 'ActiveNotifier::task_or_signal_t *'
|-CXXMethodDecl 0x55f5da5d0b18 <line:161:5, col:46> col:9 listener_add 'int (Notifier::callback_type, void *)'
| |-ParmVarDecl 0x55f5da5d09f8 <col:22, col:36> col:36 f 'Notifier::callback_type':'void (*)(void *, Notifier *)'
| `-ParmVarDecl 0x55f5da5d0a78 <col:39, col:45> col:45 v 'void *'
|-CXXMethodDecl 0x55f5da5d0cf8 <line:162:5, col:49> col:9 listener_remove 'int (Notifier::callback_type, void *)'
| |-ParmVarDecl 0x55f5da5d0bd8 <col:25, col:39> col:39 f 'Notifier::callback_type':'void (*)(void *, Notifier *)'
| `-ParmVarDecl 0x55f5da5d0c58 <col:42, col:48> col:48 v 'void *'
|-CXXConstructorDecl 0x55f5da5d0ea8 <line:164:5, col:41> col:5 ActiveNotifier 'void (const ActiveNotifier &)'
| `-ParmVarDecl 0x55f5da5d0de8 <col:20, col:40> col:41 'const ActiveNotifier &'
`-CXXMethodDecl 0x55f5da5d1058 <line:165:5, col:52> col:21 operator= 'ActiveNotifier &(const ActiveNotifier &)'
  `-ParmVarDecl 0x55f5da5d0f68 <col:31, col:51> col:52 'const ActiveNotifier &'

Layout: <CGRecordLayout
  LLVMType:%class.ActiveNotifier = type { %class.Notifier.base, %class.Task*, %"union.ActiveNotifier::task_or_signal_t"* }
  NonVirtualBaseLLVMType:%class.ActiveNotifier = type { %class.Notifier.base, %class.Task*, %"union.ActiveNotifier::task_or_signal_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class InfiniteSource
         0 |   class Element (primary base)
         0 |     (Element vtable pointer)
         8 |     class Element::Port *[2] _ports
        24 |     class Element::Port [4] _inline_ports
        88 |     int [2] _nports
        96 |     class Router * _router
       104 |     int _eindex
       112 |   class ActiveNotifier (base)
       112 |     class Notifier (primary base)
       112 |       (Notifier vtable pointer)
       120 |       class NotifierSignal _signal
       120 |         union NotifierSignal::vmvalue _v
       120 |           class atomic_uint32_t * v1
       120 |           struct NotifierSignal::vmpair * vm
       128 |         uint32_t _mask
       136 |       enum Notifier::SearchOp _search_op
       144 |     class Task * _listener1
       152 |     ActiveNotifier::task_or_signal_t * _listeners
       160 |   class Packet * _packet
       168 |   int _burstsize
       176 |   InfiniteSource::counter_t _limit
       184 |   InfiniteSource::ucounter_t _count
       192 |   int _datasize
       196 |   _Bool _active
       197 |   _Bool _timestamp
       200 |   class Task _task
       200 |     struct TaskLink (base)
       200 |       struct TaskLink * _prev
       208 |       struct TaskLink * _next
       216 |       unsigned int _pass
       220 |     unsigned int _stride
       224 |     int _tickets
       228 |     union Task::Status _status
       228 |       struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9) 
       228 |         int16_t home_thread_id
       230 |         uint8_t is_scheduled
       231 |         uint8_t is_strong_unscheduled
       228 |       uint32_t status
       232 |     TaskCallback _hook
       240 |     void * _thunk
       248 |     class RouterThread * _thread
       256 |     class Element * _owner
       264 |     union Task::Pending _pending_nextptr
       264 |       class Task * t
       264 |       uintptr_t x
       272 |   class String _data
       272 |     struct String::rep_t _r
       272 |       const char * data
       280 |       int length
       288 |       struct String::memo_t * memo
       296 |   class NotifierSignal _nonfull_signal
       296 |     union NotifierSignal::vmvalue _v
       296 |       class atomic_uint32_t * v1
       296 |       struct NotifierSignal::vmpair * vm
       304 |     uint32_t _mask
       312 |   class HandlerCall * _end_h
           | [sizeof=320, dsize=320, align=8,
           |  nvsize=320, nvalign=8]

*** Dumping AST Record Layout
         0 | union Packet::Anno
         0 |   char [48] c
         0 |   uint8_t [48] u8
         0 |   uint16_t [24] u16
         0 |   uint32_t [12] u32
         0 |   uint64_t [6] u64
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Packet::AllAnno
         0 |   union Packet::Anno cb
         0 |     char [48] c
         0 |     uint8_t [48] u8
         0 |     uint16_t [24] u16
         0 |     uint32_t [12] u32
         0 |     uint64_t [6] u64
        48 |   unsigned char * mac
        56 |   unsigned char * nh
        64 |   unsigned char * h
        72 |   enum Packet::PacketType pkt_type
        76 |   char [8] timestamp
        88 |   class Packet * next
        96 |   class Packet * prev
           | [sizeof=104, dsize=104, align=8,
           |  nvsize=104, nvalign=8]

*** Dumping AST Record Layout
         0 | class Packet
         0 |   class atomic_uint32_t _use_count
         0 |     uint32_t _val
         8 |   class Packet * _data_packet
        16 |   unsigned char * _head
        24 |   unsigned char * _data
        32 |   unsigned char * _tail
        40 |   unsigned char * _end
        48 |   struct Packet::AllAnno _aa
        48 |     union Packet::Anno cb
        48 |       char [48] c
        48 |       uint8_t [48] u8
        48 |       uint16_t [24] u16
        48 |       uint32_t [12] u32
        48 |       uint64_t [6] u64
        96 |     unsigned char * mac
       104 |     unsigned char * nh
       112 |     unsigned char * h
       120 |     enum Packet::PacketType pkt_type
       124 |     char [8] timestamp
       136 |     class Packet * next
       144 |     class Packet * prev
       152 |   Packet::buffer_destructor_type _destructor
       160 |   void * _destructor_argument
           | [sizeof=168, dsize=168, align=8,
           |  nvsize=168, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f5da4e8088 prev 0x55f5da4dd290 <../dummy_inc/click/packet.hh:702:5, line:711:5> line:702:11 referenced union Anno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55f5da4e8180 <col:5, col:11> col:11 implicit union Anno
|-FieldDecl 0x55f5da4e8270 <line:703:2, col:18> col:7 referenced c 'char [48]'
|-FieldDecl 0x55f5da4e8398 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
|-FieldDecl 0x55f5da4e8518 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
|-FieldDecl 0x55f5da4e8698 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
|-FieldDecl 0x55f5da4e8818 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
|-CXXConstructorDecl 0x55f5da4f9648 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55f5da4f9eb8 <col:11>
|-CXXDestructorDecl 0x55f5da4f9720 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x55f5da4f9858 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x55f5da4f9858
| `-ParmVarDecl 0x55f5da4f9968 <col:11> col:11 'const Packet::Anno &'
|-CXXConstructorDecl 0x55f5da4f9a08 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55f5da4f9a08
| `-ParmVarDecl 0x55f5da4f9b18 <col:11> col:11 'Packet::Anno &&'
|-CXXMethodDecl 0x55f5da4fc8d8 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| |-ParmVarDecl 0x55f5da4fc9e8 <col:11> col:11 'const Packet::Anno &'
| `-CompoundStmt 0x55f5da4fcc68 <col:11>
|   `-ReturnStmt 0x55f5da4fcc58 <col:11>
|     `-UnaryOperator 0x55f5da4fcc40 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55f5da4fcc30 <col:11> 'Packet::Anno *' this
`-CXXMethodDecl 0x55f5da4fca58 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55f5da4fca58
  `-ParmVarDecl 0x55f5da4fcb68 <col:11> col:11 'Packet::Anno &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Packet::Anno" = type { [6 x i64] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f5da4e8880 <../dummy_inc/click/packet.hh:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55f5da4e8998 <col:5, col:12> col:12 implicit struct AllAnno
|-FieldDecl 0x55f5da4e8a38 <line:717:2, col:7> col:7 cb 'Packet::Anno'
|-FieldDecl 0x55f5da4e8aa0 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
|-FieldDecl 0x55f5da4e8b08 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
|-FieldDecl 0x55f5da4e8b70 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
|-FieldDecl 0x55f5da4e8bd0 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
|-FieldDecl 0x55f5da4e8c90 <line:722:2, col:34> col:7 timestamp 'char [8]'
|-FieldDecl 0x55f5da4e8cf0 <line:723:2, col:10> col:10 referenced next 'Packet *'
|-FieldDecl 0x55f5da4e8d50 <line:724:2, col:10> col:10 referenced prev 'Packet *'
|-CXXConstructorDecl 0x55f5da4f9558 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| |-CXXCtorInitializer Field 0x55f5da4e8a38 'cb' 'Packet::Anno'
| | `-CXXConstructExpr 0x55f5da4f9ec8 <col:12> 'Packet::Anno' 'void () noexcept'
| `-CompoundStmt 0x55f5da4f9f20 <col:12>
|-CXXConstructorDecl 0x55f5da4f9b88 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x55f5da4f9b88
| `-ParmVarDecl 0x55f5da4f9c98 <col:12> col:12 'const Packet::AllAnno &'
|-CXXConstructorDecl 0x55f5da4f9d38 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x55f5da4f9d38
| `-ParmVarDecl 0x55f5da4f9e48 <col:12> col:12 'Packet::AllAnno &&'
`-CXXDestructorDecl 0x55f5da4fbfc0 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  NonVirtualBaseLLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f5da4d69a0 <../dummy_inc/click/packet.hh:35:1, line:775:1> line:35:7 referenced class Packet definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55f5da4d6ab8 <col:1, col:7> col:7 implicit referenced class Packet
|-AccessSpecDecl 0x55f5da4d6b48 <col:16, col:22> col:16 public
|-EnumDecl 0x55f5da4d6b70 <line:41:5, line:50:5> line:41:5
| |-EnumConstantDecl 0x55f5da4d6c70 <line:45:2, col:21> col:2 referenced default_headroom 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| | `-ImplicitCastExpr 0x55f5da4d6d50 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f5da4d6c50 <col:21> 'int' Int: 28
| |     `-IntegerLiteral 0x55f5da4d6c30 <col:21> 'int' 28
| `-EnumConstantDecl 0x55f5da4d6d00 <line:48:2, col:22> col:2 referenced min_buffer_length 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
|   `-ImplicitCastExpr 0x55f5da4d6d68 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55f5da4d6ce0 <col:22> 'int' Int: 64
|       `-IntegerLiteral 0x55f5da4d6cc0 <col:22> 'int' 64
|-CXXMethodDecl 0x55f5da4d70a8 <line:52:5, line:53:75> line:52:28 used make 'WritablePacket *(uint32_t, const void *, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x55f5da4d6d90 <col:33, col:42> col:42 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55f5da4d6e10 <col:52, col:64> col:64 data 'const void *'
| |-ParmVarDecl 0x55f5da4d6e88 <line:53:5, col:14> col:14 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55f5da4d6f00 <col:22, col:31> col:31 tailroom 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55f5da4d7168 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x55f5da4d7368 <line:54:5, col:109> col:35 make 'WritablePacket *(const void *, uint32_t)' static inline
| |-ParmVarDecl 0x55f5da4d71e0 <col:40, col:52> col:52 data 'const void *'
| |-ParmVarDecl 0x55f5da4d7258 <col:58, col:67> col:67 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55f5da4d7418 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x55f5da4d7578 <line:55:5, col:91> col:35 make 'WritablePacket *(uint32_t)' static inline
| |-ParmVarDecl 0x55f5da4d7488 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55f5da4d7620 <col:72> warn_unused_result ""
|-TypedefDecl 0x55f5da4d7980 <line:65:5, col:89> col:20 referenced buffer_destructor_type 'void (*)(unsigned char *, size_t, void *)'
| `-PointerType 0x55f5da4d7910 'void (*)(unsigned char *, size_t, void *)'
|   `-ParenType 0x55f5da4d78b0 'void (unsigned char *, size_t, void *)' sugar
|     `-FunctionProtoType 0x55f5da4d7870 'void (unsigned char *, size_t, void *)' cdecl
|       |-BuiltinType 0x55f5d9fa9310 'void'
|       |-PointerType 0x55f5da256d40 'unsigned char *'
|       | `-BuiltinType 0x55f5d9fa9410 'unsigned char'
|       |-TypedefType 0x55f5da053310 'size_t' sugar
|       | |-Typedef 0x55f5da019af0 'size_t'
|       | `-BuiltinType 0x55f5d9fa9470 'unsigned long'
|       `-PointerType 0x55f5d9fa9b10 'void *'
|         `-BuiltinType 0x55f5d9fa9310 'void'
|-CXXMethodDecl 0x55f5da4d7df8 <line:66:5, line:68:131> line:66:28 make 'WritablePacket *(unsigned char *, uint32_t, Packet::buffer_destructor_type, void *, int, int)' static
| |-ParmVarDecl 0x55f5da4d79f0 <col:33, col:48> col:48 data 'unsigned char *'
| |-ParmVarDecl 0x55f5da4d7a68 <col:54, col:63> col:63 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55f5da4d7b00 <line:67:5, col:28> col:28 buffer_destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| |-ParmVarDecl 0x55f5da4d7b80 <line:68:33, col:58> col:39 argument 'void *' cinit
| | `-CStyleCastExpr 0x55f5da4f24f0 <col:50, col:58> 'void *' <NoOp>
| |   `-ImplicitCastExpr 0x55f5da4f24d8 <col:58> 'void *' <NullToPointer> part_of_explicit_cast
| |     `-IntegerLiteral 0x55f5da4f24a0 <col:58> 'int' 0
| |-ParmVarDecl 0x55f5da4d7c00 <col:61, col:76> col:65 headroom 'int' cinit
| | `-IntegerLiteral 0x55f5da4f2518 <col:76> 'int' 0
| |-ParmVarDecl 0x55f5da4d7c80 <col:79, col:94> col:83 tailroom 'int' cinit
| | `-IntegerLiteral 0x55f5da4f2538 <col:94> 'int' 0
| `-WarnUnusedResultAttr 0x55f5da4d7ec8 <col:112> warn_unused_result ""
|-CXXMethodDecl 0x55f5da4d7f48 <line:71:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x55f5da4d8008 <line:73:5, col:50> col:45 used kill 'void ()'
| |-NoInlineAttr 0x55f5da4d80a8 <col:20>
| `-OptimizeNoneAttr 0x55f5da4d8100 <col:30>
|-CXXMethodDecl 0x55f5da4d8178 <line:75:5, col:54> col:45 used shared 'bool () const'
| |-NoInlineAttr 0x55f5da4d8218 <col:20>
| `-OptimizeNoneAttr 0x55f5da4d8270 <col:30>
|-CXXMethodDecl 0x55f5da4d82e8 <line:76:5, col:55> col:13 clone 'Packet *()'
| `-WarnUnusedResultAttr 0x55f5da4d8388 <col:36> warn_unused_result ""
|-CXXMethodDecl 0x55f5da4d8438 <line:77:5, col:102> col:56 uniqueify 'WritablePacket *()'
| |-NoInlineAttr 0x55f5da4d84d8 <col:20>
| |-OptimizeNoneAttr 0x55f5da4d8530 <col:30>
| `-WarnUnusedResultAttr 0x55f5da4d8558 <col:83> warn_unused_result ""
|-CXXMethodDecl 0x55f5da4d85b0 <line:79:5, col:68> col:61 used data 'const unsigned char *() const'
| |-NoInlineAttr 0x55f5da4d8650 <col:20>
| `-OptimizeNoneAttr 0x55f5da4d86a8 <col:30>
|-CXXMethodDecl 0x55f5da4d86f8 <line:80:5, col:72> col:61 used end_data 'const unsigned char *() const'
| |-NoInlineAttr 0x55f5da4d8798 <col:20>
| `-OptimizeNoneAttr 0x55f5da4d87f0 <col:30>
|-CXXMethodDecl 0x55f5da4d8838 <line:81:5, col:58> col:49 length 'uint32_t () const'
| |-NoInlineAttr 0x55f5da4d88d8 <col:20>
| `-OptimizeNoneAttr 0x55f5da4d8930 <col:30>
|-CXXMethodDecl 0x55f5da4d8978 <line:82:5, col:32> col:21 used headroom 'uint32_t () const' inline
|-CXXMethodDecl 0x55f5da4d8a38 <line:83:5, col:32> col:21 used tailroom 'uint32_t () const' inline
|-CXXMethodDecl 0x55f5da4d8b00 <line:84:5, col:42> col:33 used buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x55f5da4d8bc8 <line:85:5, col:46> col:33 used end_buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x55f5da4d8c88 <line:86:5, col:37> col:21 used buffer_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55f5da4d8da8 <line:97:5, line:99:5> line:97:28 buffer_destructor 'Packet::buffer_destructor_type () const'
| `-CompoundStmt 0x55f5da4f2600 <col:54, line:99:5>
|   `-ReturnStmt 0x55f5da4f25f0 <line:98:2, col:9>
|     `-ImplicitCastExpr 0x55f5da4f25d8 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-MemberExpr 0x55f5da4f25a8 <col:9> 'const Packet::buffer_destructor_type':'void (*const)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x55f5da4e9088
|         `-CXXThisExpr 0x55f5da4f2598 <col:9> 'const Packet *' implicit this
|-CXXMethodDecl 0x55f5da4d8f48 <line:101:5, line:103:5> line:101:10 set_buffer_destructor 'void (Packet::buffer_destructor_type)'
| |-ParmVarDecl 0x55f5da4d8e58 <col:32, col:55> col:55 used destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| `-CompoundStmt 0x55f5da4f26b0 <col:67, line:103:5>
|   `-BinaryOperator 0x55f5da4f2690 <line:102:9, col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x55f5da4f2628 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x55f5da4e9088
|     | `-CXXThisExpr 0x55f5da4f2618 <col:9> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x55f5da4f2678 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-DeclRefExpr 0x55f5da4f2658 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ParmVar 0x55f5da4d8e58 'destructor' 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-CXXMethodDecl 0x55f5da4d9040 <line:105:5, line:107:5> line:105:11 destructor_argument 'void *()'
| `-CompoundStmt 0x55f5da4f2730 <col:33, line:107:5>
|   `-ReturnStmt 0x55f5da4f2720 <line:106:9, col:16>
|     `-ImplicitCastExpr 0x55f5da4f2708 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x55f5da4f26d8 <col:16> 'void *' lvalue ->_destructor_argument 0x55f5da4e90f0
|         `-CXXThisExpr 0x55f5da4f26c8 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x55f5da4d9100 <line:109:5, line:113:5> line:109:10 reset_buffer 'void ()'
| `-CompoundStmt 0x55f5da4f2d60 <col:25, line:113:5>
|   |-ParenExpr 0x55f5da4f2aa8 <line:110:2, col:146> 'void'
|   | `-ConditionalOperator 0x55f5da4f2a78 <col:3, col:145> 'void'
|   |   |-CXXStaticCastExpr 0x55f5da4f27e8 <col:3, col:32> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x55f5da4f27c0 <col:23, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-CXXMemberCallExpr 0x55f5da4f2788 <col:24, col:31> 'bool'
|   |   |     `-MemberExpr 0x55f5da4f2758 <col:24> '<bound member function type>' ->shared 0x55f5da4d8178
|   |   |       `-ImplicitCastExpr 0x55f5da4f27a8 <col:24> 'const Packet *' <NoOp>
|   |   |         `-CXXThisExpr 0x55f5da4f2748 <col:24> 'Packet *' implicit this
|   |   |-CXXFunctionalCastExpr 0x55f5da4f2848 <col:36, col:43> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55f5da4f2828 <col:42> 'int' 0
|   |   `-CallExpr 0x55f5da4f29d8 <col:47, col:145> 'void'
|   |     |-ImplicitCastExpr 0x55f5da4f29c0 <col:47> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55f5da4f29a0 <col:47> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55f5da04a0d0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55f5da4f2a18 <col:62> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f5da4f28b8 <col:62> 'const char [10]' lvalue "!shared()"
|   |     |-ImplicitCastExpr 0x55f5da4f2a30 <col:75> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f5da4f28e0 <col:75> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55f5da4f2a48 <col:107> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55f5da4f2918 <col:107> 'int' 110
|   |     `-ImplicitCastExpr 0x55f5da4f2a60 <col:112, col:126> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55f5da4f2988 <col:112, col:126> 'const char [28]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55f5da4f2970 <col:126> 'const char [28]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55f5da4f2938 <col:126> 'const char [28]' lvalue "void Packet::reset_buffer()"
|   |-BinaryOperator 0x55f5da4f2ca8 <line:111:2, col:33> 'unsigned char *' lvalue '='
|   | |-MemberExpr 0x55f5da4f2ad8 <col:2> 'unsigned char *' lvalue ->_head 0x55f5da4e8e90
|   | | `-CXXThisExpr 0x55f5da4f2ac8 <col:2> 'Packet *' implicit this
|   | `-ImplicitCastExpr 0x55f5da4f2c90 <col:10, col:33> 'unsigned char *' <LValueToRValue>
|   |   `-BinaryOperator 0x55f5da4f2c70 <col:10, col:33> 'unsigned char *' lvalue '='
|   |     |-MemberExpr 0x55f5da4f2b18 <col:10> 'unsigned char *' lvalue ->_data 0x55f5da4e8ef8
|   |     | `-CXXThisExpr 0x55f5da4f2b08 <col:10> 'Packet *' implicit this
|   |     `-ImplicitCastExpr 0x55f5da4f2c58 <col:18, col:33> 'unsigned char *' <LValueToRValue>
|   |       `-BinaryOperator 0x55f5da4f2c38 <col:18, col:33> 'unsigned char *' lvalue '='
|   |         |-MemberExpr 0x55f5da4f2b58 <col:18> 'unsigned char *' lvalue ->_tail 0x55f5da4e8f60
|   |         | `-CXXThisExpr 0x55f5da4f2b48 <col:18> 'Packet *' implicit this
|   |         `-ImplicitCastExpr 0x55f5da4f2c20 <col:26, col:33> 'unsigned char *' <LValueToRValue>
|   |           `-BinaryOperator 0x55f5da4f2c00 <col:26, col:33> 'unsigned char *' lvalue '='
|   |             |-MemberExpr 0x55f5da4f2b98 <col:26> 'unsigned char *' lvalue ->_end 0x55f5da4e8fc8
|   |             | `-CXXThisExpr 0x55f5da4f2b88 <col:26> 'Packet *' implicit this
|   |             `-ImplicitCastExpr 0x55f5da4f2be8 <col:33> 'unsigned char *' <NullToPointer>
|   |               `-IntegerLiteral 0x55f5da4f2bc8 <col:33> 'int' 0
|   `-BinaryOperator 0x55f5da4f2d40 <line:112:2, col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x55f5da4f2cd8 <col:2> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x55f5da4e9088
|     | `-CXXThisExpr 0x55f5da4f2cc8 <col:2> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x55f5da4f2d28 <col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <NullToPointer>
|       `-IntegerLiteral 0x55f5da4f2d08 <col:16> 'int' 0
|-CXXMethodDecl 0x55f5da4d9240 <line:141:5, col:109> col:56 push 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x55f5da4d91b0 <col:61, col:70> col:70 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55f5da4d92e8 <col:20>
| |-OptimizeNoneAttr 0x55f5da4d9340 <col:30>
| `-WarnUnusedResultAttr 0x55f5da4d9368 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x55f5da4d9438 <line:152:5, col:120> col:56 push_mac_header 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x55f5da4d93a8 <col:72, col:81> col:81 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55f5da4d94e0 <col:20>
| |-OptimizeNoneAttr 0x55f5da4d9538 <col:30>
| `-WarnUnusedResultAttr 0x55f5da4d9560 <col:101> warn_unused_result ""
|-CXXMethodDecl 0x55f5da4d9698 <line:171:5, col:76> col:13 nonunique_push 'Packet *(uint32_t)'
| |-ParmVarDecl 0x55f5da4d95a0 <col:28, col:37> col:37 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55f5da4d9740 <col:57> warn_unused_result ""
|-CXXMethodDecl 0x55f5da4d9840 <line:187:5, col:62> col:45 pull 'void (uint32_t)'
| |-ParmVarDecl 0x55f5da4d97b0 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55f5da4d98e8 <col:20>
| `-OptimizeNoneAttr 0x55f5da4d9940 <col:30>
|-CXXMethodDecl 0x55f5da4d9a08 <line:213:5, col:73> col:21 put 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x55f5da4d9978 <col:25, col:34> col:34 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55f5da4d9ab0 <col:54> warn_unused_result ""
|-CXXMethodDecl 0x55f5da4d9bb0 <line:230:5, col:75> col:13 nonunique_put 'Packet *(uint32_t)'
| |-ParmVarDecl 0x55f5da4d9b20 <col:27, col:36> col:36 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55f5da4d9c58 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x55f5da4d9d58 <line:245:5, col:62> col:45 take 'void (uint32_t)'
| |-ParmVarDecl 0x55f5da4d9cc8 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55f5da4d9e00 <col:20>
| `-OptimizeNoneAttr 0x55f5da4d9e58 <col:30>
|-CXXMethodDecl 0x55f5da4d9fe8 <line:269:5, col:99> col:13 shift_data 'Packet *(int, bool)'
| |-ParmVarDecl 0x55f5da4d9e98 <col:24, col:28> col:28 offset 'int'
| |-ParmVarDecl 0x55f5da4d9f10 <col:36, col:59> col:41 free_on_failure 'bool' cinit
| | `-CXXBoolLiteralExpr 0x55f5da4f2558 <col:59> 'bool' true
| `-WarnUnusedResultAttr 0x55f5da4da098 <col:80> warn_unused_result ""
|-CXXMethodDecl 0x55f5da4da298 <line:271:5, col:71> col:17 shrink_data 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x55f5da4da110 <col:29, col:50> col:50 data 'const unsigned char *'
| `-ParmVarDecl 0x55f5da4da188 <col:56, col:65> col:65 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f5da4da4a8 <line:272:5, col:78> col:17 change_headroom_and_length 'void (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x55f5da4da358 <col:44, col:53> col:53 headroom 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55f5da4da3d0 <col:63, col:72> col:72 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f5da4da6b8 <line:274:5, col:40> col:10 copy 'bool (Packet *, int)'
| |-ParmVarDecl 0x55f5da4da568 <col:15, col:23> col:23 p 'Packet *'
| `-ParmVarDecl 0x55f5da4da5e8 <col:26, col:39> col:30 headroom 'int' cinit
|   `-IntegerLiteral 0x55f5da4f2568 <col:39> 'int' 0
|-CXXMethodDecl 0x55f5da4da788 <line:279:5, col:34> col:17 has_mac_header 'bool () const' inline
|-CXXMethodDecl 0x55f5da4da850 <line:280:5, col:46> col:33 used mac_header 'const unsigned char *() const' inline
|-CXXMethodDecl 0x55f5da4da918 <line:281:5, col:36> col:16 mac_header_offset 'int () const' inline
|-CXXMethodDecl 0x55f5da4da9d8 <line:282:5, col:41> col:21 mac_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55f5da4daaa0 <line:283:5, col:29> col:16 mac_length 'int () const' inline
|-CXXMethodDecl 0x55f5da4dabe8 <line:284:5, col:54> col:17 set_mac_header 'void (const unsigned char *)' inline
| `-ParmVarDecl 0x55f5da4dab58 <col:32, col:53> col:53 p 'const unsigned char *'
|-CXXMethodDecl 0x55f5da4dadb8 <line:285:5, col:68> col:17 used set_mac_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x55f5da4daca8 <col:32, col:53> col:53 p 'const unsigned char *'
| `-ParmVarDecl 0x55f5da4dad20 <col:56, col:65> col:65 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f5da4dae88 <line:286:5, col:34> col:17 clear_mac_header 'void ()' inline
|-CXXMethodDecl 0x55f5da4daf48 <line:288:5, col:66> col:45 has_network_header 'bool () const'
| |-NoInlineAttr 0x55f5da4dafe8 <col:20>
| `-OptimizeNoneAttr 0x55f5da4db040 <col:30>
|-CXXMethodDecl 0x55f5da4db090 <line:289:5, col:78> col:61 used network_header 'const unsigned char *() const'
| |-NoInlineAttr 0x55f5da4db130 <col:20>
| `-OptimizeNoneAttr 0x55f5da4db188 <col:30>
|-CXXMethodDecl 0x55f5da4db1d8 <line:290:5, col:40> col:16 used network_header_offset 'int () const' inline
|-CXXMethodDecl 0x55f5da4db298 <line:291:5, col:45> col:21 used network_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55f5da4db360 <line:292:5, col:61> col:44 network_length 'int () const'
| |-NoInlineAttr 0x55f5da4db400 <col:20>
| `-OptimizeNoneAttr 0x55f5da4db458 <col:30>
|-CXXMethodDecl 0x55f5da4db5a8 <line:293:5, col:72> col:17 set_network_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x55f5da4db498 <col:36, col:57> col:57 p 'const unsigned char *'
| `-ParmVarDecl 0x55f5da4db510 <col:60, col:69> col:69 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f5da4db6f8 <line:294:5, col:55> col:17 set_network_header_length 'void (uint32_t)' inline
| `-ParmVarDecl 0x55f5da4db668 <col:43, col:52> col:52 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f5da4db7d0 <line:295:5, col:38> col:17 clear_network_header 'void ()' inline
|-CXXMethodDecl 0x55f5da4db890 <line:297:5, col:68> col:45 has_transport_header 'bool () const'
| |-NoInlineAttr 0x55f5da4db930 <col:20>
| `-OptimizeNoneAttr 0x55f5da4db988 <col:30>
|-CXXMethodDecl 0x55f5da4db9d8 <line:298:5, col:80> col:61 used transport_header 'const unsigned char *() const'
| |-NoInlineAttr 0x55f5da4dba78 <col:20>
| `-OptimizeNoneAttr 0x55f5da4dbad0 <col:30>
|-CXXMethodDecl 0x55f5da4dbb20 <line:299:5, col:42> col:16 transport_header_offset 'int () const' inline
|-CXXMethodDecl 0x55f5da4dbbe8 <line:300:5, col:63> col:44 transport_length 'int () const'
| |-NoInlineAttr 0x55f5da4dbc88 <col:20>
| `-OptimizeNoneAttr 0x55f5da4dbce0 <col:30>
|-CXXMethodDecl 0x55f5da4dbd28 <line:301:5, col:40> col:17 clear_transport_header 'void ()' inline
|-CXXMethodDecl 0x55f5da4dbe48 <line:304:5, col:46> col:31 ether_header 'const click_ether *() const' inline
|-CXXMethodDecl 0x55f5da4dbfb8 <line:305:5, col:57> col:17 set_ether_header 'void (const click_ether *)' inline
| `-ParmVarDecl 0x55f5da4dbef8 <col:34, col:53> col:53 ethh 'const click_ether *'
|-CXXMethodDecl 0x55f5da4dc0a8 <line:307:5, col:68> col:56 ip_header 'const click_ip *() const'
| |-NoInlineAttr 0x55f5da4dc148 <col:20>
| `-OptimizeNoneAttr 0x55f5da4dc1a0 <col:30>
|-CXXMethodDecl 0x55f5da4dc1f0 <line:308:5, col:35> col:16 ip_header_offset 'int () const' inline
|-CXXMethodDecl 0x55f5da4dc2b0 <line:309:5, col:40> col:21 ip_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55f5da4dc4e8 <line:310:5, col:92> col:45 set_ip_header 'void (const click_ip *, uint32_t)'
| |-ParmVarDecl 0x55f5da4dc360 <col:59, col:75> col:75 iph 'const click_ip *'
| |-ParmVarDecl 0x55f5da4dc3d8 <col:80, col:89> col:89 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55f5da4dc598 <col:20>
| `-OptimizeNoneAttr 0x55f5da4dc5f0 <col:30>
|-CXXMethodDecl 0x55f5da4dc698 <line:312:5, col:70> col:57 ip6_header 'const click_ip6 *() const'
| |-NoInlineAttr 0x55f5da4dc738 <col:20>
| `-OptimizeNoneAttr 0x55f5da4dc790 <col:30>
|-CXXMethodDecl 0x55f5da4dc7e0 <line:313:5, col:64> col:44 ip6_header_offset 'int () const'
| |-NoInlineAttr 0x55f5da4dc880 <col:20>
| `-OptimizeNoneAttr 0x55f5da4dc8d8 <col:30>
|-CXXMethodDecl 0x55f5da4dc920 <line:314:5, col:69> col:49 ip6_header_length 'uint32_t () const'
| |-NoInlineAttr 0x55f5da4dc9c0 <col:20>
| `-OptimizeNoneAttr 0x55f5da4dca18 <col:30>
|-CXXMethodDecl 0x55f5da4dcb18 <line:315:5, col:81> col:45 set_ip6_header 'void (const click_ip6 *)'
| |-ParmVarDecl 0x55f5da4dca50 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-NoInlineAttr 0x55f5da4dcbc0 <col:20>
| `-OptimizeNoneAttr 0x55f5da4dcc18 <col:30>
|-CXXMethodDecl 0x55f5da4dcdd8 <line:316:5, col:95> col:45 set_ip6_header 'void (const click_ip6 *, uint32_t)'
| |-ParmVarDecl 0x55f5da4dcc50 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-ParmVarDecl 0x55f5da4dccc8 <col:83, col:92> col:92 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55f5da4dce88 <col:20>
| `-OptimizeNoneAttr 0x55f5da4dcee0 <col:30>
|-CXXMethodDecl 0x55f5da4dcf88 <line:318:5, col:44> col:30 used icmp_header 'const click_icmp *() const' inline
|-CXXMethodDecl 0x55f5da4dd0a8 <line:319:5, col:42> col:29 used tcp_header 'const click_tcp *() const' inline
|-CXXMethodDecl 0x55f5da4dd1c8 <line:320:5, col:42> col:29 used udp_header 'const click_udp *() const' inline
|-AccessSpecDecl 0x55f5da4dd268 <line:333:3, col:10> col:3 private
|-CXXRecordDecl 0x55f5da4dd290 <line:335:5, col:11> col:11 referenced union Anno
|-CXXMethodDecl 0x55f5da4dd3b8 <line:340:5, col:60> col:52 used xanno 'const Packet::Anno *() const'
| |-NoInlineAttr 0x55f5da4dd458 <col:20>
| `-OptimizeNoneAttr 0x55f5da4dd4b0 <col:30>
|-CXXMethodDecl 0x55f5da4dd558 <line:341:5, col:52> col:46 used xanno 'Packet::Anno *()'
| |-NoInlineAttr 0x55f5da4dd5f8 <col:20>
| `-OptimizeNoneAttr 0x55f5da4dd650 <col:30>
|-AccessSpecDecl 0x55f5da4dd678 <line:344:3, col:9> col:3 public
|-EnumDecl 0x55f5da4dd6a0 <line:349:5, line:351:5> line:349:5
| `-EnumConstantDecl 0x55f5da4dd7a0 <line:350:2, col:14> col:2 referenced anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   `-ImplicitCastExpr 0x55f5da4dd7f0 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55f5da4dd780 <col:14> 'int' Int: 48
|       `-IntegerLiteral 0x55f5da4dd760 <col:14> 'int' 48
|-CXXMethodDecl 0x55f5da4dd858 <line:354:5, col:74> col:57 used timestamp_anno 'const Timestamp &() const'
| |-NoInlineAttr 0x55f5da4dd8f8 <col:20>
| `-OptimizeNoneAttr 0x55f5da4dd950 <col:30>
|-CXXMethodDecl 0x55f5da4dd9c8 <line:356:5, col:66> col:51 used timestamp_anno 'Timestamp &()'
| |-NoInlineAttr 0x55f5da4dda68 <col:20>
| `-OptimizeNoneAttr 0x55f5da4ddac0 <col:30>
|-CXXMethodDecl 0x55f5da4ddb88 <line:359:5, col:54> col:17 used set_timestamp_anno 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x55f5da4ddaf8 <col:36, col:53> col:53 t 'const Timestamp &'
|-CXXMethodDecl 0x55f5da4ddd28 <line:362:5, col:38> col:24 used device_anno 'net_device *() const' inline
|-CXXMethodDecl 0x55f5da4ddec8 <line:364:5, col:48> col:17 used set_device_anno 'void (net_device *)' inline
| `-ParmVarDecl 0x55f5da4dddd8 <col:33, col:45> col:45 dev 'net_device *'
|-EnumDecl 0x55f5da4ddf70 <line:368:5, line:381:5> line:368:10 referenced PacketType
| |-EnumConstantDecl 0x55f5da4de070 <line:369:2, col:9> col:2 HOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55f5da4de420 <col:9> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f5da4de050 <col:9> 'int' Int: 0
| |     `-IntegerLiteral 0x55f5da4de030 <col:9> 'int' 0
| |-EnumConstantDecl 0x55f5da4de100 <line:370:2, col:14> col:2 BROADCAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55f5da4de438 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f5da4de0e0 <col:14> 'int' Int: 1
| |     `-IntegerLiteral 0x55f5da4de0c0 <col:14> 'int' 1
| |-EnumConstantDecl 0x55f5da4de190 <line:372:2, col:14> col:2 MULTICAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55f5da4de450 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f5da4de170 <col:14> 'int' Int: 2
| |     `-IntegerLiteral 0x55f5da4de150 <col:14> 'int' 2
| |-EnumConstantDecl 0x55f5da4de220 <line:374:2, col:14> col:2 OTHERHOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55f5da4de468 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f5da4de200 <col:14> 'int' Int: 3
| |     `-IntegerLiteral 0x55f5da4de1e0 <col:14> 'int' 3
| |-EnumConstantDecl 0x55f5da4de2b0 <line:377:2, col:13> col:2 OUTGOING 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55f5da4de480 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f5da4de290 <col:13> 'int' Int: 4
| |     `-IntegerLiteral 0x55f5da4de270 <col:13> 'int' 4
| |-EnumConstantDecl 0x55f5da4de340 <line:379:2, col:13> col:2 LOOPBACK 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55f5da4de498 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f5da4de320 <col:13> 'int' Int: 5
| |     `-IntegerLiteral 0x55f5da4de300 <col:13> 'int' 5
| `-EnumConstantDecl 0x55f5da4de3d0 <line:380:2, col:14> col:2 FASTROUTE 'Packet::PacketType'
|   `-ImplicitCastExpr 0x55f5da4de4b0 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55f5da4de3b0 <col:14> 'int' Int: 6
|       `-IntegerLiteral 0x55f5da4de390 <col:14> 'int' 6
|-CXXMethodDecl 0x55f5da4de518 <line:383:5, col:70> col:51 used packet_type_anno 'Packet::PacketType () const'
| |-NoInlineAttr 0x55f5da4de5b8 <col:20>
| `-OptimizeNoneAttr 0x55f5da4de610 <col:30>
|-CXXMethodDecl 0x55f5da4de708 <line:385:5, col:78> col:45 used set_packet_type_anno 'void (Packet::PacketType)'
| |-ParmVarDecl 0x55f5da4de648 <col:66, col:77> col:77 t 'Packet::PacketType'
| |-NoInlineAttr 0x55f5da4de7b0 <col:20>
| `-OptimizeNoneAttr 0x55f5da4de808 <col:30>
|-CXXMethodDecl 0x55f5da4de878 <line:410:5, col:27> col:20 next 'Packet *() const' inline
|-CXXMethodDecl 0x55f5da4de9a0 <line:412:5, col:26> col:21 next 'Packet *&()' inline
|-CXXMethodDecl 0x55f5da4deb18 <line:414:5, col:35> col:17 set_next 'void (Packet *)' inline
| `-ParmVarDecl 0x55f5da4dea50 <col:26, col:34> col:34 p 'Packet *'
|-CXXMethodDecl 0x55f5da4debe0 <line:417:5, col:27> col:20 prev 'Packet *() const' inline
|-CXXMethodDecl 0x55f5da4deca8 <line:419:5, col:26> col:21 prev 'Packet *&()' inline
|-CXXMethodDecl 0x55f5da4dede8 <line:421:5, col:35> col:17 set_prev 'void (Packet *)' inline
| `-ParmVarDecl 0x55f5da4ded58 <col:26, col:34> col:34 p 'Packet *'
|-EnumDecl 0x55f5da4dee90 <line:423:5, line:426:5> line:423:5
| |-EnumConstantDecl 0x55f5da4def90 <line:424:2, col:23> col:2 referenced dst_ip_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x55f5da4df190 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f5da4def70 <col:23> 'int' Int: 0
| |     `-IntegerLiteral 0x55f5da4def50 <col:23> 'int' 0
| |-EnumConstantDecl 0x55f5da4df020 <col:26, col:45> col:26 dst_ip_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x55f5da4df1a8 <col:45> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f5da4df000 <col:45> 'int' Int: 4
| |     `-IntegerLiteral 0x55f5da4defe0 <col:45> 'int' 4
| |-EnumConstantDecl 0x55f5da4df0b0 <line:425:2, col:24> col:2 dst_ip6_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x55f5da4df1c0 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f5da4df090 <col:24> 'int' Int: 0
| |     `-IntegerLiteral 0x55f5da4df070 <col:24> 'int' 0
| `-EnumConstantDecl 0x55f5da4df140 <col:27, col:47> col:27 dst_ip6_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
|   `-ImplicitCastExpr 0x55f5da4df1d8 <col:47> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55f5da4df120 <col:47> 'int' Int: 16
|       `-IntegerLiteral 0x55f5da4df100 <col:47> 'int' 16
|-CXXMethodDecl 0x55f5da4df238 <line:431:5, col:36> col:22 dst_ip_anno 'IPAddress () const' inline
|-CXXMethodDecl 0x55f5da4df3a8 <line:436:5, col:75> col:45 set_dst_ip_anno 'void (IPAddress)'
| |-ParmVarDecl 0x55f5da4df2e8 <col:61, col:71> col:71 addr 'IPAddress'
| |-NoInlineAttr 0x55f5da4df450 <col:20>
| `-OptimizeNoneAttr 0x55f5da4df4a8 <col:30>
|-CXXMethodDecl 0x55f5da4df4f8 <line:441:5, col:36> col:11 anno 'void *()'
| `-CompoundStmt 0x55f5da4f2e80 <col:18, col:36>
|   `-ReturnStmt 0x55f5da4f2e70 <col:20, col:33>
|     `-ImplicitCastExpr 0x55f5da4f2e58 <col:27, col:33> 'void *' <BitCast>
|       `-CXXMemberCallExpr 0x55f5da4f2e38 <col:27, col:33> 'Packet::Anno *'
|         `-MemberExpr 0x55f5da4f2e08 <col:27> '<bound member function type>' ->xanno 0x55f5da4dd558
|           `-CXXThisExpr 0x55f5da4f2df8 <col:27> 'Packet *' implicit this
|-CXXMethodDecl 0x55f5da4df5f0 <line:444:5, col:48> col:17 anno 'const void *() const'
| `-CompoundStmt 0x55f5da4f2f90 <col:30, col:48>
|   `-ReturnStmt 0x55f5da4f2f80 <col:32, col:45>
|     `-ImplicitCastExpr 0x55f5da4f2f68 <col:39, col:45> 'const void *' <BitCast>
|       `-CXXMemberCallExpr 0x55f5da4f2f48 <col:39, col:45> 'const Packet::Anno *'
|         `-MemberExpr 0x55f5da4f2f18 <col:39> '<bound member function type>' ->xanno 0x55f5da4dd3b8
|           `-CXXThisExpr 0x55f5da4f2f08 <col:39> 'const Packet *' implicit this
|-CXXMethodDecl 0x55f5da4df6d8 <line:447:5, col:50> col:14 used anno_u8 'uint8_t *()'
| `-CompoundStmt 0x55f5da4f3128 <col:24, col:50>
|   `-ReturnStmt 0x55f5da4f3118 <col:26, col:47>
|     `-UnaryOperator 0x55f5da4f3100 <col:33, col:47> 'uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55f5da4f30e0 <col:34, col:47> 'uint8_t':'unsigned char' lvalue
|         |-ImplicitCastExpr 0x55f5da4f30c8 <col:34, col:43> 'uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55f5da4f3078 <col:34, col:43> 'uint8_t [48]' lvalue ->u8 0x55f5da4e8398
|         |   `-CXXMemberCallExpr 0x55f5da4f3058 <col:34, col:40> 'Packet::Anno *'
|         |     `-MemberExpr 0x55f5da4f3028 <col:34> '<bound member function type>' ->xanno 0x55f5da4dd558
|         |       `-CXXThisExpr 0x55f5da4f3018 <col:34> 'Packet *' implicit this
|         `-IntegerLiteral 0x55f5da4f30a8 <col:46> 'int' 0
|-CXXMethodDecl 0x55f5da4df7e0 <line:450:5, col:62> col:20 used anno_u8 'const uint8_t *() const'
| `-CompoundStmt 0x55f5da4f32f8 <col:36, col:62>
|   `-ReturnStmt 0x55f5da4f32e8 <col:38, col:59>
|     `-UnaryOperator 0x55f5da4f32d0 <col:45, col:59> 'const uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55f5da4f32b0 <col:46, col:59> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x55f5da4f3298 <col:46, col:55> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55f5da4f3210 <col:46, col:55> 'uint8_t const[48]' lvalue ->u8 0x55f5da4e8398
|         |   `-CXXMemberCallExpr 0x55f5da4f31f0 <col:46, col:52> 'const Packet::Anno *'
|         |     `-MemberExpr 0x55f5da4f31c0 <col:46> '<bound member function type>' ->xanno 0x55f5da4dd3b8
|         |       `-CXXThisExpr 0x55f5da4f31b0 <col:46> 'const Packet *' implicit this
|         `-IntegerLiteral 0x55f5da4f3240 <col:58> 'int' 0
|-CXXMethodDecl 0x55f5da4df8f8 <line:453:5, col:53> col:15 used anno_u32 'uint32_t *()'
| `-CompoundStmt 0x55f5da4f3490 <col:26, col:53>
|   `-ReturnStmt 0x55f5da4f3480 <col:28, col:50>
|     `-UnaryOperator 0x55f5da4f3468 <col:35, col:50> 'uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55f5da4f3448 <col:36, col:50> 'uint32_t':'unsigned int' lvalue
|         |-ImplicitCastExpr 0x55f5da4f3430 <col:36, col:45> 'uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55f5da4f33e0 <col:36, col:45> 'uint32_t [12]' lvalue ->u32 0x55f5da4e8698
|         |   `-CXXMemberCallExpr 0x55f5da4f33c0 <col:36, col:42> 'Packet::Anno *'
|         |     `-MemberExpr 0x55f5da4f3390 <col:36> '<bound member function type>' ->xanno 0x55f5da4dd558
|         |       `-CXXThisExpr 0x55f5da4f3380 <col:36> 'Packet *' implicit this
|         `-IntegerLiteral 0x55f5da4f3410 <col:49> 'int' 0
|-CXXMethodDecl 0x55f5da4dfa18 <line:456:5, col:65> col:21 used anno_u32 'const uint32_t *() const'
| `-CompoundStmt 0x55f5da4f3668 <col:38, col:65>
|   `-ReturnStmt 0x55f5da4f3658 <col:40, col:62>
|     `-UnaryOperator 0x55f5da4f3640 <col:47, col:62> 'const uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55f5da4f3620 <col:48, col:62> 'const uint32_t':'const unsigned int' lvalue
|         |-ImplicitCastExpr 0x55f5da4f3608 <col:48, col:57> 'const uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55f5da4f3578 <col:48, col:57> 'uint32_t const[12]' lvalue ->u32 0x55f5da4e8698
|         |   `-CXXMemberCallExpr 0x55f5da4f3558 <col:48, col:54> 'const Packet::Anno *'
|         |     `-MemberExpr 0x55f5da4f3528 <col:48> '<bound member function type>' ->xanno 0x55f5da4dd3b8
|         |       `-CXXThisExpr 0x55f5da4f3518 <col:48> 'const Packet *' implicit this
|         `-IntegerLiteral 0x55f5da4f35a8 <col:61> 'int' 0
|-CXXMethodDecl 0x55f5da4dfbc8 <line:460:5, line:463:5> line:460:13 used anno_u8 'uint8_t (int) const'
| |-ParmVarDecl 0x55f5da4dfad0 <col:21, col:25> col:25 used i 'int'
| `-CompoundStmt 0x55f5da4f3d38 <col:34, line:463:5>
|   |-ParenExpr 0x55f5da4f3b80 <line:461:2, col:174> 'void'
|   | `-ConditionalOperator 0x55f5da4f3b50 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x55f5da4f37b8 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55f5da4f3788 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55f5da4f36d8 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55f5da4f36c0 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55f5da4f3680 <col:23> 'int' lvalue ParmVar 0x55f5da4dfad0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55f5da4f36a0 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55f5da4f3768 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55f5da4f3738 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55f5da4f36f8 <col:33> 'int' lvalue ParmVar 0x55f5da4dfad0 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x55f5da4f3750 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x55f5da4f3718 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55f5da4dd7a0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x55f5da4f3818 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55f5da4f37f8 <col:56> 'int' 0
|   |   `-CallExpr 0x55f5da4f3ab0 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x55f5da4f3a98 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55f5da4f3a78 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55f5da04a0d0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55f5da4f3af0 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f5da4f3908 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x55f5da4f3b08 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f5da4f3938 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55f5da4f3b20 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55f5da4f3970 <col:135> 'int' 461
|   |     `-ImplicitCastExpr 0x55f5da4f3b38 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55f5da4f3a60 <col:140, col:154> 'const char [35]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55f5da4f3a48 <col:154> 'const char [35]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55f5da4f3a08 <col:154> 'const char [35]' lvalue "uint8_t Packet::anno_u8(int) const"
|   `-ReturnStmt 0x55f5da4f3d28 <line:462:2, col:22>
|     `-ImplicitCastExpr 0x55f5da4f3d10 <col:9, col:22> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-ArraySubscriptExpr 0x55f5da4f3cf0 <col:9, col:22> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x55f5da4f3cc0 <col:9, col:18> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55f5da4f3c70 <col:9, col:18> 'uint8_t const[48]' lvalue ->u8 0x55f5da4e8398
|         |   `-CXXMemberCallExpr 0x55f5da4f3c50 <col:9, col:15> 'const Packet::Anno *'
|         |     `-MemberExpr 0x55f5da4f3c20 <col:9> '<bound member function type>' ->xanno 0x55f5da4dd3b8
|         |       `-CXXThisExpr 0x55f5da4f3c10 <col:9> 'const Packet *' implicit this
|         `-ImplicitCastExpr 0x55f5da4f3cd8 <col:21> 'int' <LValueToRValue>
|           `-DeclRefExpr 0x55f5da4f3ca0 <col:21> 'int' lvalue ParmVar 0x55f5da4dfad0 'i' 'int'
|-CXXMethodDecl 0x55f5da4dfe18 <line:469:5, line:472:5> line:469:10 used set_anno_u8 'void (int, uint8_t)'
| |-ParmVarDecl 0x55f5da4dfc88 <col:22, col:26> col:26 used i 'int'
| |-ParmVarDecl 0x55f5da4dfd00 <col:29, col:37> col:37 used x 'uint8_t':'unsigned char'
| `-CompoundStmt 0x55f5da4f43c8 <col:40, line:472:5>
|   |-ParenExpr 0x55f5da4f41e0 <line:470:2, col:174> 'void'
|   | `-ConditionalOperator 0x55f5da4f41b0 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x55f5da4f3e90 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55f5da4f3e60 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55f5da4f3db0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55f5da4f3d98 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55f5da4f3d58 <col:23> 'int' lvalue ParmVar 0x55f5da4dfc88 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55f5da4f3d78 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55f5da4f3e40 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55f5da4f3e10 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55f5da4f3dd0 <col:33> 'int' lvalue ParmVar 0x55f5da4dfc88 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x55f5da4f3e28 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x55f5da4f3df0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55f5da4dd7a0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x55f5da4f3ef0 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55f5da4f3ed0 <col:56> 'int' 0
|   |   `-CallExpr 0x55f5da4f4110 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x55f5da4f40f8 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55f5da4f40d8 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55f5da04a0d0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55f5da4f4150 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f5da4f3f60 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x55f5da4f4168 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f5da4f3f90 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55f5da4f4180 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55f5da4f3fc8 <col:135> 'int' 470
|   |     `-ImplicitCastExpr 0x55f5da4f4198 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55f5da4f40c0 <col:140, col:154> 'const char [39]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55f5da4f40a8 <col:154> 'const char [39]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55f5da4f4068 <col:154> 'const char [39]' lvalue "void Packet::set_anno_u8(int, uint8_t)"
|   `-BinaryOperator 0x55f5da4f43a8 <line:471:2, col:19> 'uint8_t':'unsigned char' lvalue '='
|     |-ArraySubscriptExpr 0x55f5da4f4350 <col:2, col:15> 'uint8_t':'unsigned char' lvalue
|     | |-ImplicitCastExpr 0x55f5da4f4320 <col:2, col:11> 'uint8_t *' <ArrayToPointerDecay>
|     | | `-MemberExpr 0x55f5da4f42d0 <col:2, col:11> 'uint8_t [48]' lvalue ->u8 0x55f5da4e8398
|     | |   `-CXXMemberCallExpr 0x55f5da4f42b0 <col:2, col:8> 'Packet::Anno *'
|     | |     `-MemberExpr 0x55f5da4f4280 <col:2> '<bound member function type>' ->xanno 0x55f5da4dd558
|     | |       `-CXXThisExpr 0x55f5da4f4270 <col:2> 'Packet *' implicit this
|     | `-ImplicitCastExpr 0x55f5da4f4338 <col:14> 'int' <LValueToRValue>
|     |   `-DeclRefExpr 0x55f5da4f4300 <col:14> 'int' lvalue ParmVar 0x55f5da4dfc88 'i' 'int'
|     `-ImplicitCastExpr 0x55f5da4f4390 <col:19> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-DeclRefExpr 0x55f5da4f4370 <col:19> 'uint8_t':'unsigned char' lvalue ParmVar 0x55f5da4dfd00 'x' 'uint8_t':'unsigned char'
|-CXXMethodDecl 0x55f5da4dffd8 <line:479:5, line:485:5> line:479:14 used anno_u16 'uint16_t (int) const'
| |-ParmVarDecl 0x55f5da4dfee0 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x55f5da4f4b48 <col:36, line:485:5>
|   |-ParenExpr 0x55f5da4f48b0 <line:480:2, col:182> 'void'
|   | `-ConditionalOperator 0x55f5da4f4880 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55f5da4f4560 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55f5da4f4530 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55f5da4f4440 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55f5da4f4428 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55f5da4f43e8 <col:23> 'int' lvalue ParmVar 0x55f5da4dfee0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55f5da4f4408 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55f5da4f4510 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55f5da4f44f8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55f5da4f4460 <col:33> 'int' lvalue ParmVar 0x55f5da4dfee0 'i' 'int'
|   |   |     `-BinaryOperator 0x55f5da4f44d8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55f5da4f44c0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55f5da4f4480 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55f5da4dd7a0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55f5da4f44a0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55f5da4f45c0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55f5da4f45a0 <col:60> 'int' 0
|   |   `-CallExpr 0x55f5da4f47e0 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55f5da4f47c8 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55f5da4f47a8 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55f5da04a0d0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55f5da4f4820 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f5da4f4630 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55f5da4f4838 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f5da4f4668 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55f5da4f4850 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55f5da4f46a0 <col:143> 'int' 480
|   |     `-ImplicitCastExpr 0x55f5da4f4868 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55f5da4f4790 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55f5da4f4778 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55f5da4f4738 <col:162> 'const char [37]' lvalue "uint16_t Packet::anno_u16(int) const"
|   `-ReturnStmt 0x55f5da4f4b38 <line:484:2, col:75>
|     `-ImplicitCastExpr 0x55f5da4f4b20 <col:9, col:75> 'click_aliasable_uint16_t':'unsigned short' <LValueToRValue>
|       `-UnaryOperator 0x55f5da4f4b08 <col:9, col:75> 'const click_aliasable_uint16_t':'const unsigned short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55f5da4f4ad8 <col:10, col:75> 'const click_aliasable_uint16_t *' reinterpret_cast<const click_aliasable_uint16_t *> <BitCast>
|           `-BinaryOperator 0x55f5da4f4a78 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x55f5da4f4a48 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55f5da4f49c0 <col:61, col:70> 'char const[48]' lvalue ->c 0x55f5da4e8270
|             |   `-CXXMemberCallExpr 0x55f5da4f49a0 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55f5da4f4970 <col:61> '<bound member function type>' ->xanno 0x55f5da4dd3b8
|             |       `-CXXThisExpr 0x55f5da4f4960 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55f5da4f4a60 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55f5da4f49f0 <col:74> 'int' lvalue ParmVar 0x55f5da4dfee0 'i' 'int'
|-CXXMethodDecl 0x55f5da4e0228 <line:494:5, line:500:5> line:494:10 used set_anno_u16 'void (int, uint16_t)'
| |-ParmVarDecl 0x55f5da4e0098 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55f5da4e0110 <col:30, col:39> col:39 used x 'uint16_t':'unsigned short'
| `-CompoundStmt 0x55f5da4f5298 <col:42, line:500:5>
|   |-ParenExpr 0x55f5da4f5030 <line:495:2, col:182> 'void'
|   | `-ConditionalOperator 0x55f5da4f5000 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55f5da4f4ce0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55f5da4f4cb0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55f5da4f4bc0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55f5da4f4ba8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55f5da4f4b68 <col:23> 'int' lvalue ParmVar 0x55f5da4e0098 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55f5da4f4b88 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55f5da4f4c90 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55f5da4f4c78 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55f5da4f4be0 <col:33> 'int' lvalue ParmVar 0x55f5da4e0098 'i' 'int'
|   |   |     `-BinaryOperator 0x55f5da4f4c58 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55f5da4f4c40 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55f5da4f4c00 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55f5da4dd7a0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55f5da4f4c20 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55f5da4f4d40 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55f5da4f4d20 <col:60> 'int' 0
|   |   `-CallExpr 0x55f5da4f4f60 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55f5da4f4f48 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55f5da4f4f28 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55f5da04a0d0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55f5da4f4fa0 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f5da4f4db0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55f5da4f4fb8 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f5da4f4de8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55f5da4f4fd0 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55f5da4f4e20 <col:143> 'int' 495
|   |     `-ImplicitCastExpr 0x55f5da4f4fe8 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55f5da4f4f10 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55f5da4f4ef8 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55f5da4f4eb8 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u16(int, uint16_t)"
|   `-BinaryOperator 0x55f5da4f5278 <line:499:2, col:66> 'click_aliasable_uint16_t':'unsigned short' lvalue '='
|     |-UnaryOperator 0x55f5da4f5228 <col:2, col:62> 'click_aliasable_uint16_t':'unsigned short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55f5da4f51f8 <col:3, col:62> 'click_aliasable_uint16_t *' reinterpret_cast<click_aliasable_uint16_t *> <BitCast>
|     |   `-BinaryOperator 0x55f5da4f51a0 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55f5da4f5170 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55f5da4f5120 <col:48, col:57> 'char [48]' lvalue ->c 0x55f5da4e8270
|     |     |   `-CXXMemberCallExpr 0x55f5da4f5100 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55f5da4f50d0 <col:48> '<bound member function type>' ->xanno 0x55f5da4dd558
|     |     |       `-CXXThisExpr 0x55f5da4f50c0 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55f5da4f5188 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55f5da4f5150 <col:61> 'int' lvalue ParmVar 0x55f5da4e0098 'i' 'int'
|     `-ImplicitCastExpr 0x55f5da4f5260 <col:66> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x55f5da4f5240 <col:66> 'uint16_t':'unsigned short' lvalue ParmVar 0x55f5da4e0110 'x' 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x55f5da4e03e8 <line:507:5, line:513:5> line:507:13 anno_s16 'int16_t (int) const'
| |-ParmVarDecl 0x55f5da4e02f0 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x55f5da4f59f8 <col:35, line:513:5>
|   |-ParenExpr 0x55f5da4f5708 <line:508:2, col:182> 'void'
|   | `-ConditionalOperator 0x55f5da4f56d8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55f5da4f5430 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55f5da4f5400 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55f5da4f5310 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55f5da4f52f8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55f5da4f52b8 <col:23> 'int' lvalue ParmVar 0x55f5da4e02f0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55f5da4f52d8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55f5da4f53e0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55f5da4f53c8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55f5da4f5330 <col:33> 'int' lvalue ParmVar 0x55f5da4e02f0 'i' 'int'
|   |   |     `-BinaryOperator 0x55f5da4f53a8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55f5da4f5390 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55f5da4f5350 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55f5da4dd7a0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55f5da4f5370 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55f5da4f5490 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55f5da4f5470 <col:60> 'int' 0
|   |   `-CallExpr 0x55f5da4f5638 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55f5da4f5620 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55f5da4f5600 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55f5da04a0d0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55f5da4f5678 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f5da4f5500 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55f5da4f5690 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f5da4f5538 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55f5da4f56a8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55f5da4f5570 <col:143> 'int' 508
|   |     `-ImplicitCastExpr 0x55f5da4f56c0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55f5da4f55e8 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55f5da4f55d0 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55f5da4f5590 <col:162> 'const char [36]' lvalue "int16_t Packet::anno_s16(int) const"
|   `-ReturnStmt 0x55f5da4f59e8 <line:512:2, col:74>
|     `-ImplicitCastExpr 0x55f5da4f59d0 <col:9, col:74> 'click_aliasable_int16_t':'short' <LValueToRValue>
|       `-UnaryOperator 0x55f5da4f59b8 <col:9, col:74> 'const click_aliasable_int16_t':'const short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55f5da4f5988 <col:10, col:74> 'const click_aliasable_int16_t *' reinterpret_cast<const click_aliasable_int16_t *> <BitCast>
|           `-BinaryOperator 0x55f5da4f5900 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x55f5da4f58d0 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55f5da4f5880 <col:60, col:69> 'char const[48]' lvalue ->c 0x55f5da4e8270
|             |   `-CXXMemberCallExpr 0x55f5da4f5860 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55f5da4f5830 <col:60> '<bound member function type>' ->xanno 0x55f5da4dd3b8
|             |       `-CXXThisExpr 0x55f5da4f5820 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55f5da4f58e8 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55f5da4f58b0 <col:73> 'int' lvalue ParmVar 0x55f5da4e02f0 'i' 'int'
|-CXXMethodDecl 0x55f5da4e0638 <line:522:5, line:528:5> line:522:10 set_anno_s16 'void (int, int16_t)'
| |-ParmVarDecl 0x55f5da4e04a8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55f5da4e0520 <col:30, col:38> col:38 used x 'int16_t':'short'
| `-CompoundStmt 0x55f5da4f6118 <col:41, line:528:5>
|   |-ParenExpr 0x55f5da4f5ea0 <line:523:2, col:182> 'void'
|   | `-ConditionalOperator 0x55f5da4f5e70 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55f5da4f5b90 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55f5da4f5b60 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55f5da4f5a70 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55f5da4f5a58 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55f5da4f5a18 <col:23> 'int' lvalue ParmVar 0x55f5da4e04a8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55f5da4f5a38 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55f5da4f5b40 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55f5da4f5b28 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55f5da4f5a90 <col:33> 'int' lvalue ParmVar 0x55f5da4e04a8 'i' 'int'
|   |   |     `-BinaryOperator 0x55f5da4f5b08 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55f5da4f5af0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55f5da4f5ab0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55f5da4dd7a0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55f5da4f5ad0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55f5da4f5bf0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55f5da4f5bd0 <col:60> 'int' 0
|   |   `-CallExpr 0x55f5da4f5dd0 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55f5da4f5db8 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55f5da4f5d98 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55f5da04a0d0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55f5da4f5e10 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f5da4f5c60 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55f5da4f5e28 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f5da4f5c98 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55f5da4f5e40 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55f5da4f5cd0 <col:143> 'int' 523
|   |     `-ImplicitCastExpr 0x55f5da4f5e58 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55f5da4f5d80 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55f5da4f5d68 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55f5da4f5d28 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s16(int, int16_t)"
|   `-BinaryOperator 0x55f5da4f60f8 <line:527:2, col:65> 'click_aliasable_int16_t':'short' lvalue '='
|     |-UnaryOperator 0x55f5da4f60a8 <col:2, col:61> 'click_aliasable_int16_t':'short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55f5da4f6078 <col:3, col:61> 'click_aliasable_int16_t *' reinterpret_cast<click_aliasable_int16_t *> <BitCast>
|     |   `-BinaryOperator 0x55f5da4f6020 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55f5da4f5fe0 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55f5da4f5f90 <col:47, col:56> 'char [48]' lvalue ->c 0x55f5da4e8270
|     |     |   `-CXXMemberCallExpr 0x55f5da4f5f70 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55f5da4f5f40 <col:47> '<bound member function type>' ->xanno 0x55f5da4dd558
|     |     |       `-CXXThisExpr 0x55f5da4f5f30 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55f5da4f5ff8 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55f5da4f5fc0 <col:60> 'int' lvalue ParmVar 0x55f5da4e04a8 'i' 'int'
|     `-ImplicitCastExpr 0x55f5da4f60e0 <col:65> 'int16_t':'short' <LValueToRValue>
|       `-DeclRefExpr 0x55f5da4f60c0 <col:65> 'int16_t':'short' lvalue ParmVar 0x55f5da4e0520 'x' 'int16_t':'short'
|-CXXMethodDecl 0x55f5da4e07f8 <line:535:5, line:541:5> line:535:14 used anno_u32 'uint32_t (int) const'
| |-ParmVarDecl 0x55f5da4e0700 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x55f5da4f67e8 <col:36, line:541:5>
|   |-ParenExpr 0x55f5da4f6588 <line:536:2, col:182> 'void'
|   | `-ConditionalOperator 0x55f5da4f6558 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55f5da4f62b0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55f5da4f6280 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55f5da4f6190 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55f5da4f6178 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55f5da4f6138 <col:23> 'int' lvalue ParmVar 0x55f5da4e0700 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55f5da4f6158 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55f5da4f6260 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55f5da4f6248 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55f5da4f61b0 <col:33> 'int' lvalue ParmVar 0x55f5da4e0700 'i' 'int'
|   |   |     `-BinaryOperator 0x55f5da4f6228 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55f5da4f6210 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55f5da4f61d0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55f5da4dd7a0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55f5da4f61f0 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x55f5da4f6310 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55f5da4f62f0 <col:60> 'int' 0
|   |   `-CallExpr 0x55f5da4f64b8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55f5da4f64a0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55f5da4f6480 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55f5da04a0d0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55f5da4f64f8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f5da4f6380 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x55f5da4f6510 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f5da4f63b8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55f5da4f6528 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55f5da4f63f0 <col:143> 'int' 536
|   |     `-ImplicitCastExpr 0x55f5da4f6540 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55f5da4f6468 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55f5da4f6450 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55f5da4f6410 <col:162> 'const char [37]' lvalue "uint32_t Packet::anno_u32(int) const"
|   `-ReturnStmt 0x55f5da4f67d8 <line:540:2, col:75>
|     `-ImplicitCastExpr 0x55f5da4f67c0 <col:9, col:75> 'click_aliasable_uint32_t':'unsigned int' <LValueToRValue>
|       `-UnaryOperator 0x55f5da4f67a8 <col:9, col:75> 'const click_aliasable_uint32_t':'const unsigned int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55f5da4f6778 <col:10, col:75> 'const click_aliasable_uint32_t *' reinterpret_cast<const click_aliasable_uint32_t *> <BitCast>
|           `-BinaryOperator 0x55f5da4f6720 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x55f5da4f66f0 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55f5da4f66a0 <col:61, col:70> 'char const[48]' lvalue ->c 0x55f5da4e8270
|             |   `-CXXMemberCallExpr 0x55f5da4f6680 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55f5da4f6650 <col:61> '<bound member function type>' ->xanno 0x55f5da4dd3b8
|             |       `-CXXThisExpr 0x55f5da4f6640 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55f5da4f6708 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55f5da4f66d0 <col:74> 'int' lvalue ParmVar 0x55f5da4e0700 'i' 'int'
|-CXXMethodDecl 0x55f5da4e09c8 <line:550:5, col:75> col:45 used set_anno_u32 'void (int, uint32_t)'
| |-ParmVarDecl 0x55f5da4e08b8 <col:58, col:62> col:62 i 'int'
| |-ParmVarDecl 0x55f5da4e0930 <col:65, col:74> col:74 x 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55f5da4e0a78 <col:20>
| `-OptimizeNoneAttr 0x55f5da4e0ad0 <col:30>
|-CXXMethodDecl 0x55f5da4e0c08 <line:556:5, line:562:5> line:556:13 used anno_s32 'int32_t (int) const'
| |-ParmVarDecl 0x55f5da4e0b10 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x55f5da4f6eb8 <col:35, line:562:5>
|   |-ParenExpr 0x55f5da4f6c58 <line:557:2, col:182> 'void'
|   | `-ConditionalOperator 0x55f5da4f6c28 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55f5da4f6980 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55f5da4f6950 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55f5da4f6860 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55f5da4f6848 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55f5da4f6808 <col:23> 'int' lvalue ParmVar 0x55f5da4e0b10 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55f5da4f6828 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55f5da4f6930 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55f5da4f6918 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55f5da4f6880 <col:33> 'int' lvalue ParmVar 0x55f5da4e0b10 'i' 'int'
|   |   |     `-BinaryOperator 0x55f5da4f68f8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55f5da4f68e0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55f5da4f68a0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55f5da4dd7a0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55f5da4f68c0 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x55f5da4f69e0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55f5da4f69c0 <col:60> 'int' 0
|   |   `-CallExpr 0x55f5da4f6b88 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55f5da4f6b70 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55f5da4f6b50 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55f5da04a0d0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55f5da4f6bc8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f5da4f6a50 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x55f5da4f6be0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f5da4f6a88 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55f5da4f6bf8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55f5da4f6ac0 <col:143> 'int' 557
|   |     `-ImplicitCastExpr 0x55f5da4f6c10 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55f5da4f6b38 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55f5da4f6b20 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55f5da4f6ae0 <col:162> 'const char [36]' lvalue "int32_t Packet::anno_s32(int) const"
|   `-ReturnStmt 0x55f5da4f6ea8 <line:561:2, col:74>
|     `-ImplicitCastExpr 0x55f5da4f6e90 <col:9, col:74> 'click_aliasable_int32_t':'int' <LValueToRValue>
|       `-UnaryOperator 0x55f5da4f6e78 <col:9, col:74> 'const click_aliasable_int32_t':'const int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55f5da4f6e48 <col:10, col:74> 'const click_aliasable_int32_t *' reinterpret_cast<const click_aliasable_int32_t *> <BitCast>
|           `-BinaryOperator 0x55f5da4f6df0 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x55f5da4f6dc0 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55f5da4f6d70 <col:60, col:69> 'char const[48]' lvalue ->c 0x55f5da4e8270
|             |   `-CXXMemberCallExpr 0x55f5da4f6d50 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55f5da4f6d20 <col:60> '<bound member function type>' ->xanno 0x55f5da4dd3b8
|             |       `-CXXThisExpr 0x55f5da4f6d10 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55f5da4f6dd8 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55f5da4f6da0 <col:73> 'int' lvalue ParmVar 0x55f5da4e0b10 'i' 'int'
|-CXXMethodDecl 0x55f5da4e0e18 <line:571:5, line:577:5> line:571:10 used set_anno_s32 'void (int, int32_t)'
| |-ParmVarDecl 0x55f5da4e0cc8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55f5da4e0d40 <col:30, col:38> col:38 used x 'int32_t':'int'
| `-CompoundStmt 0x55f5da4f7598 <col:41, line:577:5>
|   |-ParenExpr 0x55f5da4f7328 <line:572:2, col:182> 'void'
|   | `-ConditionalOperator 0x55f5da4f72f8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55f5da4f7050 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55f5da4f7020 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55f5da4f6f30 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55f5da4f6f18 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55f5da4f6ed8 <col:23> 'int' lvalue ParmVar 0x55f5da4e0cc8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55f5da4f6ef8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55f5da4f7000 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55f5da4f6fe8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55f5da4f6f50 <col:33> 'int' lvalue ParmVar 0x55f5da4e0cc8 'i' 'int'
|   |   |     `-BinaryOperator 0x55f5da4f6fc8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55f5da4f6fb0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55f5da4f6f70 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55f5da4dd7a0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55f5da4f6f90 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x55f5da4f70b0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55f5da4f7090 <col:60> 'int' 0
|   |   `-CallExpr 0x55f5da4f7258 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55f5da4f7240 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55f5da4f7220 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55f5da04a0d0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55f5da4f7298 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f5da4f7120 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x55f5da4f72b0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f5da4f7158 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55f5da4f72c8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55f5da4f7190 <col:143> 'int' 572
|   |     `-ImplicitCastExpr 0x55f5da4f72e0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55f5da4f7208 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55f5da4f71f0 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55f5da4f71b0 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s32(int, int32_t)"
|   `-BinaryOperator 0x55f5da4f7578 <line:576:2, col:65> 'click_aliasable_int32_t':'int' lvalue '='
|     |-UnaryOperator 0x55f5da4f7528 <col:2, col:61> 'click_aliasable_int32_t':'int' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55f5da4f74f8 <col:3, col:61> 'click_aliasable_int32_t *' reinterpret_cast<click_aliasable_int32_t *> <BitCast>
|     |   `-BinaryOperator 0x55f5da4f7498 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55f5da4f7468 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55f5da4f7418 <col:47, col:56> 'char [48]' lvalue ->c 0x55f5da4e8270
|     |     |   `-CXXMemberCallExpr 0x55f5da4f73f8 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55f5da4f73c8 <col:47> '<bound member function type>' ->xanno 0x55f5da4dd558
|     |     |       `-CXXThisExpr 0x55f5da4f73b8 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55f5da4f7480 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55f5da4f7448 <col:60> 'int' lvalue ParmVar 0x55f5da4e0cc8 'i' 'int'
|     `-ImplicitCastExpr 0x55f5da4f7560 <col:65> 'int32_t':'int' <LValueToRValue>
|       `-DeclRefExpr 0x55f5da4f7540 <col:65> 'int32_t':'int' lvalue ParmVar 0x55f5da4e0d40 'x' 'int32_t':'int'
|-CXXMethodDecl 0x55f5da4e0fd8 <line:585:5, line:591:5> line:585:14 used anno_u64 'uint64_t (int) const'
| |-ParmVarDecl 0x55f5da4e0ee0 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x55f5da4f7cc8 <col:36, line:591:5>
|   |-ParenExpr 0x55f5da4f7a08 <line:586:2, col:182> 'void'
|   | `-ConditionalOperator 0x55f5da4f79d8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55f5da4f7730 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55f5da4f7700 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55f5da4f7610 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55f5da4f75f8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55f5da4f75b8 <col:23> 'int' lvalue ParmVar 0x55f5da4e0ee0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55f5da4f75d8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55f5da4f76e0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55f5da4f76c8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55f5da4f7630 <col:33> 'int' lvalue ParmVar 0x55f5da4e0ee0 'i' 'int'
|   |   |     `-BinaryOperator 0x55f5da4f76a8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55f5da4f7690 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55f5da4f7650 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55f5da4dd7a0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55f5da4f7670 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x55f5da4f7790 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55f5da4f7770 <col:60> 'int' 0
|   |   `-CallExpr 0x55f5da4f7938 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55f5da4f7920 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55f5da4f7900 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55f5da04a0d0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55f5da4f7978 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f5da4f7800 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x55f5da4f7990 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f5da4f7838 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55f5da4f79a8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55f5da4f7870 <col:143> 'int' 586
|   |     `-ImplicitCastExpr 0x55f5da4f79c0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55f5da4f78e8 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55f5da4f78d0 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55f5da4f7890 <col:162> 'const char [37]' lvalue "uint64_t Packet::anno_u64(int) const"
|   `-ReturnStmt 0x55f5da4f7cb8 <line:590:2, col:75>
|     `-ImplicitCastExpr 0x55f5da4f7ca0 <col:9, col:75> 'click_aliasable_uint64_t':'unsigned long' <LValueToRValue>
|       `-UnaryOperator 0x55f5da4f7c88 <col:9, col:75> 'const click_aliasable_uint64_t':'const unsigned long' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55f5da4f7c58 <col:10, col:75> 'const click_aliasable_uint64_t *' reinterpret_cast<const click_aliasable_uint64_t *> <BitCast>
|           `-BinaryOperator 0x55f5da4f7bd0 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x55f5da4f7ba0 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55f5da4f7b50 <col:61, col:70> 'char const[48]' lvalue ->c 0x55f5da4e8270
|             |   `-CXXMemberCallExpr 0x55f5da4f7b30 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55f5da4f7b00 <col:61> '<bound member function type>' ->xanno 0x55f5da4dd3b8
|             |       `-CXXThisExpr 0x55f5da4f7af0 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55f5da4f7bb8 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55f5da4f7b80 <col:74> 'int' lvalue ParmVar 0x55f5da4e0ee0 'i' 'int'
|-CXXMethodDecl 0x55f5da4e1228 <line:600:5, line:606:5> line:600:10 used set_anno_u64 'void (int, uint64_t)'
| |-ParmVarDecl 0x55f5da4e1098 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55f5da4e1110 <col:30, col:39> col:39 used x 'uint64_t':'unsigned long'
| `-CompoundStmt 0x55f5da4f83a8 <col:42, line:606:5>
|   |-ParenExpr 0x55f5da4f8138 <line:601:2, col:182> 'void'
|   | `-ConditionalOperator 0x55f5da4f8108 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55f5da4f7e60 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55f5da4f7e30 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55f5da4f7d40 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55f5da4f7d28 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55f5da4f7ce8 <col:23> 'int' lvalue ParmVar 0x55f5da4e1098 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55f5da4f7d08 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55f5da4f7e10 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55f5da4f7df8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55f5da4f7d60 <col:33> 'int' lvalue ParmVar 0x55f5da4e1098 'i' 'int'
|   |   |     `-BinaryOperator 0x55f5da4f7dd8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55f5da4f7dc0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55f5da4f7d80 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55f5da4dd7a0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55f5da4f7da0 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x55f5da4f7ec0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55f5da4f7ea0 <col:60> 'int' 0
|   |   `-CallExpr 0x55f5da4f8068 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55f5da4f8050 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55f5da4f8030 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55f5da04a0d0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55f5da4f80a8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f5da4f7f30 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x55f5da4f80c0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f5da4f7f68 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55f5da4f80d8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55f5da4f7fa0 <col:143> 'int' 601
|   |     `-ImplicitCastExpr 0x55f5da4f80f0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55f5da4f8018 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55f5da4f8000 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55f5da4f7fc0 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u64(int, uint64_t)"
|   `-BinaryOperator 0x55f5da4f8388 <line:605:2, col:66> 'click_aliasable_uint64_t':'unsigned long' lvalue '='
|     |-UnaryOperator 0x55f5da4f8338 <col:2, col:62> 'click_aliasable_uint64_t':'unsigned long' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55f5da4f8308 <col:3, col:62> 'click_aliasable_uint64_t *' reinterpret_cast<click_aliasable_uint64_t *> <BitCast>
|     |   `-BinaryOperator 0x55f5da4f82a8 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55f5da4f8278 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55f5da4f8228 <col:48, col:57> 'char [48]' lvalue ->c 0x55f5da4e8270
|     |     |   `-CXXMemberCallExpr 0x55f5da4f8208 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55f5da4f81d8 <col:48> '<bound member function type>' ->xanno 0x55f5da4dd558
|     |     |       `-CXXThisExpr 0x55f5da4f81c8 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55f5da4f8290 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55f5da4f8258 <col:61> 'int' lvalue ParmVar 0x55f5da4e1098 'i' 'int'
|     `-ImplicitCastExpr 0x55f5da4f8370 <col:66> 'uint64_t':'unsigned long' <LValueToRValue>
|       `-DeclRefExpr 0x55f5da4f8350 <col:66> 'uint64_t':'unsigned long' lvalue ParmVar 0x55f5da4e1110 'x' 'uint64_t':'unsigned long'
|-CXXMethodDecl 0x55f5da4e13c0 <line:614:5, line:620:5> line:614:11 anno_ptr 'void *(int) const'
| |-ParmVarDecl 0x55f5da4e12f0 <col:20, col:24> col:24 used i 'int'
| `-CompoundStmt 0x55f5da4f8c18 <col:33, line:620:5>
|   |-ParenExpr 0x55f5da4f8990 <line:615:2, col:220> 'void'
|   | `-ConditionalOperator 0x55f5da4f8960 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x55f5da4f85b0 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55f5da4f8580 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55f5da4f8420 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55f5da4f8408 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55f5da4f83c8 <col:23> 'int' lvalue ParmVar 0x55f5da4e12f0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55f5da4f83e8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55f5da4f8560 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x55f5da4f8548 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55f5da4f8440 <col:33> 'int' lvalue ParmVar 0x55f5da4e12f0 'i' 'int'
|   |   |     `-BinaryOperator 0x55f5da4f8528 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55f5da4f8510 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55f5da4f8460 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55f5da4dd7a0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x55f5da4f84e8 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x55f5da4f84d0 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x55f5da4f8498 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x55f5da4f8610 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55f5da4f85f0 <col:79> 'int' 0
|   |   `-CallExpr 0x55f5da4f88c0 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x55f5da4f88a8 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55f5da4f8888 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55f5da04a0d0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55f5da4f8900 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f5da4f86f8 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x55f5da4f8918 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f5da4f8740 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55f5da4f8930 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55f5da4f8778 <col:181> 'int' 615
|   |     `-ImplicitCastExpr 0x55f5da4f8948 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55f5da4f8870 <col:186, col:200> 'const char [34]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55f5da4f8858 <col:200> 'const char [34]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55f5da4f8818 <col:200> 'const char [34]' lvalue "void *Packet::anno_ptr(int) const"
|   `-ReturnStmt 0x55f5da4f8c08 <line:619:2, col:81>
|     `-ImplicitCastExpr 0x55f5da4f8bf0 <col:9, col:81> 'click_aliasable_void_pointer_t':'void *' <LValueToRValue>
|       `-UnaryOperator 0x55f5da4f8bd8 <col:9, col:81> 'const click_aliasable_void_pointer_t':'void *const' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55f5da4f8ba8 <col:10, col:81> 'const click_aliasable_void_pointer_t *' reinterpret_cast<const click_aliasable_void_pointer_t *> <BitCast>
|           `-BinaryOperator 0x55f5da4f8b20 <col:67, col:80> 'const char *' '+'
|             |-ImplicitCastExpr 0x55f5da4f8af0 <col:67, col:76> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55f5da4f8aa0 <col:67, col:76> 'char const[48]' lvalue ->c 0x55f5da4e8270
|             |   `-CXXMemberCallExpr 0x55f5da4f8a80 <col:67, col:73> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55f5da4f8a50 <col:67> '<bound member function type>' ->xanno 0x55f5da4dd3b8
|             |       `-CXXThisExpr 0x55f5da4f8a40 <col:67> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55f5da4f8b08 <col:80> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55f5da4f8ad0 <col:80> 'int' lvalue ParmVar 0x55f5da4e12f0 'i' 'int'
|-CXXMethodDecl 0x55f5da4e15d8 <line:629:5, line:635:5> line:629:10 set_anno_ptr 'void (int, const void *)'
| |-ParmVarDecl 0x55f5da4e1480 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55f5da4e1500 <col:30, col:42> col:42 used x 'const void *'
| `-CompoundStmt 0x55f5da4f9440 <col:45, line:635:5>
|   |-ParenExpr 0x55f5da4f9188 <line:630:2, col:220> 'void'
|   | `-ConditionalOperator 0x55f5da4f9158 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x55f5da4f8e20 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55f5da4f8df0 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55f5da4f8c90 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55f5da4f8c78 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55f5da4f8c38 <col:23> 'int' lvalue ParmVar 0x55f5da4e1480 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55f5da4f8c58 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55f5da4f8dd0 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x55f5da4f8db8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55f5da4f8cb0 <col:33> 'int' lvalue ParmVar 0x55f5da4e1480 'i' 'int'
|   |   |     `-BinaryOperator 0x55f5da4f8d98 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55f5da4f8d80 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55f5da4f8cd0 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55f5da4dd7a0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x55f5da4f8d58 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x55f5da4f8d40 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x55f5da4f8d08 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x55f5da4f8e80 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55f5da4f8e60 <col:79> 'int' 0
|   |   `-CallExpr 0x55f5da4f90b8 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x55f5da4f90a0 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55f5da4f9080 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55f5da04a0d0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55f5da4f90f8 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f5da4f8ef0 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x55f5da4f9110 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f5da4f8f38 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55f5da4f9128 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55f5da4f8f70 <col:181> 'int' 630
|   |     `-ImplicitCastExpr 0x55f5da4f9140 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55f5da4f9068 <col:186, col:200> 'const char [45]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55f5da4f9050 <col:200> 'const char [45]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55f5da4f9008 <col:200> 'const char [45]' lvalue "void Packet::set_anno_ptr(int, const void *)"
|   `-BinaryOperator 0x55f5da4f9420 <line:634:2, col:92> 'click_aliasable_void_pointer_t':'void *' lvalue '='
|     |-UnaryOperator 0x55f5da4f9388 <col:2, col:68> 'click_aliasable_void_pointer_t':'void *' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55f5da4f9358 <col:3, col:68> 'click_aliasable_void_pointer_t *' reinterpret_cast<click_aliasable_void_pointer_t *> <BitCast>
|     |   `-BinaryOperator 0x55f5da4f92f8 <col:54, col:67> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55f5da4f92c8 <col:54, col:63> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55f5da4f9278 <col:54, col:63> 'char [48]' lvalue ->c 0x55f5da4e8270
|     |     |   `-CXXMemberCallExpr 0x55f5da4f9258 <col:54, col:60> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55f5da4f9228 <col:54> '<bound member function type>' ->xanno 0x55f5da4dd558
|     |     |       `-CXXThisExpr 0x55f5da4f9218 <col:54> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55f5da4f92e0 <col:67> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55f5da4f92a8 <col:67> 'int' lvalue ParmVar 0x55f5da4e1480 'i' 'int'
|     `-CXXConstCastExpr 0x55f5da4f93f0 <col:72, col:92> 'void *' const_cast<void *> <NoOp>
|       `-ImplicitCastExpr 0x55f5da4f93d8 <col:91> 'const void *' <LValueToRValue> part_of_explicit_cast
|         `-DeclRefExpr 0x55f5da4f93a0 <col:91> 'const void *' lvalue ParmVar 0x55f5da4e1500 'x' 'const void *'
|-CXXMethodDecl 0x55f5da4e16a8 <line:638:5, line:640:5> line:638:20 data_packet 'Packet *()' inline
| `-CompoundStmt 0x55f5da4f94c8 <col:34, line:640:5>
|   `-ReturnStmt 0x55f5da4f94b8 <line:639:9, col:16>
|     `-ImplicitCastExpr 0x55f5da4f94a0 <col:16> 'Packet *' <LValueToRValue>
|       `-MemberExpr 0x55f5da4f9470 <col:16> 'Packet *' lvalue ->_data_packet 0x55f5da4e8e28
|         `-CXXThisExpr 0x55f5da4f9460 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x55f5da4e17e8 <line:643:5, col:50> col:17 used clear_annotations 'void (bool)' inline
| `-ParmVarDecl 0x55f5da4e1758 <col:35, col:46> col:40 all 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55f5da4f2588 <col:46> 'bool' true
|-CXXMethodDecl 0x55f5da4e1968 <line:644:5, col:48> col:17 copy_annotations 'void (const Packet *)' inline
| `-ParmVarDecl 0x55f5da4e18a0 <col:34, col:47> col:48 'const Packet *'
|-EnumDecl 0x55f5da4e1a10 <line:648:5, line:660:5> line:648:5
| |-DeprecatedAttr 0x55f5da4e21c0 <line:660:22> "" ""
| |-EnumConstantDecl 0x55f5da4e1b10 <line:649:2, col:21> col:2 DEFAULT_HEADROOM 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55f5da4e2230 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f5da4e1af0 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 28
| |     `-DeclRefExpr 0x55f5da4e1ad0 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x55f5da4d6c70 'default_headroom' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x55f5da4e1ba0 <line:650:2, col:22> col:2 MIN_BUFFER_LENGTH 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55f5da4e2248 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f5da4e1b80 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 64
| |     `-DeclRefExpr 0x55f5da4e1b60 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x55f5da4d6d00 'min_buffer_length' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x55f5da4e1c30 <line:651:2, col:21> col:2 referenced addr_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55f5da4e2260 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f5da4e1c10 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x55f5da4e1bf0 <col:21> 'int' 0
| |-EnumConstantDecl 0x55f5da4e1cc0 <line:652:2, col:19> col:2 referenced addr_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55f5da4e2278 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f5da4e1ca0 <col:19> 'int' Int: 16
| |     `-IntegerLiteral 0x55f5da4e1c80 <col:19> 'int' 16
| |-EnumConstantDecl 0x55f5da4e1d50 <line:653:2, col:21> col:2 referenced user_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55f5da4e2290 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f5da4e1d30 <col:21> 'int' Int: 16
| |     `-IntegerLiteral 0x55f5da4e1d10 <col:21> 'int' 16
| |-EnumConstantDecl 0x55f5da4e1de0 <line:654:2, col:19> col:2 referenced user_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55f5da4e22a8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f5da4e1dc0 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x55f5da4e1da0 <col:19> 'int' 32
| |-EnumConstantDecl 0x55f5da4e1e70 <line:655:2, col:19> col:2 ADDR_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55f5da4e22c0 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f5da4e1e50 <col:19> 'int' Int: 16
| |     `-DeclRefExpr 0x55f5da4e1e30 <col:19> 'int' EnumConstant 0x55f5da4e1cc0 'addr_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x55f5da4e1f00 <line:656:2, col:19> col:2 referenced USER_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55f5da4e22d8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f5da4e1ee0 <col:19> 'int' Int: 32
| |     `-DeclRefExpr 0x55f5da4e1ec0 <col:19> 'int' EnumConstant 0x55f5da4e1de0 'user_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x55f5da4e1fd0 <line:657:2, col:40> col:2 USER_ANNO_U16_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55f5da4e22f0 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f5da4e1fb0 <col:23, col:40> 'int' Int: 16
| |     `-BinaryOperator 0x55f5da4e1f90 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x55f5da4e1f50 <col:23> 'int' EnumConstant 0x55f5da4e1f00 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x55f5da4e1f70 <col:40> 'int' 2
| |-EnumConstantDecl 0x55f5da4e20a0 <line:658:2, col:40> col:2 USER_ANNO_U32_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55f5da4e2308 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f5da4e2080 <col:23, col:40> 'int' Int: 8
| |     `-BinaryOperator 0x55f5da4e2060 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x55f5da4e2020 <col:23> 'int' EnumConstant 0x55f5da4e1f00 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x55f5da4e2040 <col:40> 'int' 4
| `-EnumConstantDecl 0x55f5da4e2170 <line:659:2, col:40> col:2 USER_ANNO_U64_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|   `-ImplicitCastExpr 0x55f5da4e2320 <col:23, col:40> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55f5da4e2150 <col:23, col:40> 'int' Int: 4
|       `-BinaryOperator 0x55f5da4e2130 <col:23, col:40> 'int' '/'
|         |-DeclRefExpr 0x55f5da4e20f0 <col:23> 'int' EnumConstant 0x55f5da4e1f00 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|         `-IntegerLiteral 0x55f5da4e2110 <col:40> 'int' 8
|-CXXMethodDecl 0x55f5da4e2360 <line:661:5, col:79> col:33 buffer_data 'const unsigned char *() const' inline
| `-DeprecatedAttr 0x55f5da4e2400 <col:68> "" ""
|-CXXMethodDecl 0x55f5da4e2498 <line:662:5, col:56> col:18 addr_anno 'void *()' inline
| `-DeprecatedAttr 0x55f5da4e2538 <col:45> "" ""
|-CXXMethodDecl 0x55f5da4e25d0 <line:663:5, col:68> col:24 addr_anno 'const void *() const' inline
| `-DeprecatedAttr 0x55f5da4e2670 <col:57> "" ""
|-CXXMethodDecl 0x55f5da4e2708 <line:664:5, col:56> col:18 user_anno 'void *()' inline
| `-DeprecatedAttr 0x55f5da4e27a8 <col:45> "" ""
|-CXXMethodDecl 0x55f5da4e2840 <line:665:5, col:68> col:24 user_anno 'const void *() const' inline
| `-DeprecatedAttr 0x55f5da4e28e0 <col:57> "" ""
|-CXXMethodDecl 0x55f5da4e2970 <line:666:5, col:62> col:21 user_anno_u8 'uint8_t *()' inline
| `-DeprecatedAttr 0x55f5da4e2a10 <col:51> "" ""
|-CXXMethodDecl 0x55f5da4e2aa0 <line:667:5, col:74> col:27 user_anno_u8 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x55f5da4e2b40 <col:63> "" ""
|-CXXMethodDecl 0x55f5da4e2bd0 <line:668:5, col:64> col:22 user_anno_u32 'uint32_t *()' inline
| `-DeprecatedAttr 0x55f5da4e2c70 <col:53> "" ""
|-CXXMethodDecl 0x55f5da4e2d00 <line:669:5, col:76> col:28 user_anno_u32 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x55f5da4e2da0 <col:65> "" ""
|-CXXMethodDecl 0x55f5da4e2eb8 <line:670:5, col:72> col:20 user_anno_u8 'uint8_t (int) const' inline
| |-ParmVarDecl 0x55f5da4e2e28 <col:33, col:37> col:37 i 'int'
| `-DeprecatedAttr 0x55f5da4e2f60 <col:61> "" ""
|-CXXMethodDecl 0x55f5da4e30f8 <line:671:5, col:78> col:17 set_user_anno_u8 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x55f5da4e2fe8 <col:34, col:38> col:38 i 'int'
| |-ParmVarDecl 0x55f5da4e3060 <col:41, col:49> col:49 v 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x55f5da4e31a8 <col:67> "" ""
|-CXXMethodDecl 0x55f5da4e32c0 <line:672:5, col:74> col:21 user_anno_u16 'uint16_t (int) const' inline
| |-ParmVarDecl 0x55f5da4e3230 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x55f5da4e3368 <col:63> "" ""
|-CXXMethodDecl 0x55f5da4e3500 <line:673:5, col:80> col:17 set_user_anno_u16 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x55f5da4e33f0 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55f5da4e3468 <col:42, col:51> col:51 v 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x55f5da4e35b0 <col:69> "" ""
|-CXXMethodDecl 0x55f5da4e36c8 <line:674:5, col:74> col:21 user_anno_u32 'uint32_t (int) const' inline
| |-ParmVarDecl 0x55f5da4e3638 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x55f5da4e3770 <col:63> "" ""
|-CXXMethodDecl 0x55f5da4e5e48 <line:675:5, col:80> col:17 set_user_anno_u32 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x55f5da4e5d38 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55f5da4e5db0 <col:42, col:51> col:51 v 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55f5da4e5ef8 <col:69> "" ""
|-CXXMethodDecl 0x55f5da4e6010 <line:676:5, col:73> col:20 user_anno_s32 'int32_t (int) const' inline
| |-ParmVarDecl 0x55f5da4e5f80 <col:34, col:38> col:38 i 'int'
| `-DeprecatedAttr 0x55f5da4e60b8 <col:62> "" ""
|-CXXMethodDecl 0x55f5da4e6250 <line:677:5, col:79> col:17 set_user_anno_s32 'void (int, int32_t)' inline
| |-ParmVarDecl 0x55f5da4e6140 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55f5da4e61b8 <col:42, col:50> col:50 v 'int32_t':'int'
| `-DeprecatedAttr 0x55f5da4e6300 <col:68> "" ""
|-CXXMethodDecl 0x55f5da4e6418 <line:679:5, col:74> col:21 user_anno_u64 'uint64_t (int) const' inline
| |-ParmVarDecl 0x55f5da4e6388 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x55f5da4e64c0 <col:63> "" ""
|-CXXMethodDecl 0x55f5da4e6658 <line:680:5, col:80> col:17 set_user_anno_u64 'void (int, uint64_t)' inline
| |-ParmVarDecl 0x55f5da4e6548 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55f5da4e65c0 <col:42, col:51> col:51 v 'uint64_t':'unsigned long'
| `-DeprecatedAttr 0x55f5da4e6708 <col:69> "" ""
|-CXXMethodDecl 0x55f5da4e6798 <line:682:5, col:75> col:27 all_user_anno 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x55f5da4e6838 <col:64> "" ""
|-CXXMethodDecl 0x55f5da4e68c8 <line:683:5, col:63> col:21 all_user_anno 'uint8_t *()' inline
| `-DeprecatedAttr 0x55f5da4e6968 <col:52> "" ""
|-CXXMethodDecl 0x55f5da4e69f8 <line:684:5, col:78> col:28 all_user_anno_u 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x55f5da4e6a98 <col:67> "" ""
|-CXXMethodDecl 0x55f5da4e6b28 <line:685:5, col:66> col:22 all_user_anno_u 'uint32_t *()' inline
| `-DeprecatedAttr 0x55f5da4e6bc8 <col:55> "" ""
|-CXXMethodDecl 0x55f5da4e6ce0 <line:686:5, col:69> col:20 user_anno_c 'uint8_t (int) const' inline
| |-ParmVarDecl 0x55f5da4e6c50 <col:32> col:35 'int'
| `-DeprecatedAttr 0x55f5da4e6d88 <col:58> "" ""
|-CXXMethodDecl 0x55f5da4e6f20 <line:687:5, col:73> col:17 set_user_anno_c 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x55f5da4e6e10 <col:33> col:36 'int'
| |-ParmVarDecl 0x55f5da4e6e88 <col:38> col:45 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x55f5da4e6fd0 <col:62> "" ""
|-CXXMethodDecl 0x55f5da4e70e8 <line:688:5, col:69> col:20 user_anno_s 'int16_t (int) const' inline
| |-ParmVarDecl 0x55f5da4e7058 <col:32> col:35 'int'
| `-DeprecatedAttr 0x55f5da4e7190 <col:58> "" ""
|-CXXMethodDecl 0x55f5da4e7328 <line:689:5, col:73> col:17 set_user_anno_s 'void (int, int16_t)' inline
| |-ParmVarDecl 0x55f5da4e7218 <col:33> col:36 'int'
| |-ParmVarDecl 0x55f5da4e7290 <col:38> col:45 'int16_t':'short'
| `-DeprecatedAttr 0x55f5da4e73d8 <col:62> "" ""
|-CXXMethodDecl 0x55f5da4e74f0 <line:690:5, col:71> col:21 user_anno_us 'uint16_t (int) const' inline
| |-ParmVarDecl 0x55f5da4e7460 <col:34> col:37 'int'
| `-DeprecatedAttr 0x55f5da4e7598 <col:60> "" ""
|-CXXMethodDecl 0x55f5da4e7730 <line:691:5, col:75> col:17 set_user_anno_us 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x55f5da4e7620 <col:34> col:37 'int'
| |-ParmVarDecl 0x55f5da4e7698 <col:39> col:47 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x55f5da4e77e0 <col:64> "" ""
|-CXXMethodDecl 0x55f5da4e78f8 <line:692:5, col:69> col:20 user_anno_i 'int32_t (int) const' inline
| |-ParmVarDecl 0x55f5da4e7868 <col:32> col:35 'int'
| `-DeprecatedAttr 0x55f5da4e79a0 <col:58> "" ""
|-CXXMethodDecl 0x55f5da4e7b38 <line:693:5, col:73> col:17 set_user_anno_i 'void (int, int32_t)' inline
| |-ParmVarDecl 0x55f5da4e7a28 <col:33> col:36 'int'
| |-ParmVarDecl 0x55f5da4e7aa0 <col:38> col:45 'int32_t':'int'
| `-DeprecatedAttr 0x55f5da4e7be8 <col:62> "" ""
|-CXXMethodDecl 0x55f5da4e7d00 <line:694:5, col:70> col:21 user_anno_u 'uint32_t (int) const' inline
| |-ParmVarDecl 0x55f5da4e7c70 <col:33> col:36 'int'
| `-DeprecatedAttr 0x55f5da4e7da8 <col:59> "" ""
|-CXXMethodDecl 0x55f5da4e7f40 <line:695:5, col:74> col:17 set_user_anno_u 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x55f5da4e7e30 <col:33> col:36 'int'
| |-ParmVarDecl 0x55f5da4e7ea8 <col:38> col:46 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55f5da4e7ff0 <col:63> "" ""
|-AccessSpecDecl 0x55f5da4e8060 <line:698:3, col:10> col:3 private
|-CXXRecordDecl 0x55f5da4e8088 prev 0x55f5da4dd290 <line:702:5, line:711:5> line:702:11 referenced union Anno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55f5da4e8180 <col:5, col:11> col:11 implicit union Anno
| |-FieldDecl 0x55f5da4e8270 <line:703:2, col:18> col:7 referenced c 'char [48]'
| |-FieldDecl 0x55f5da4e8398 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
| |-FieldDecl 0x55f5da4e8518 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
| |-FieldDecl 0x55f5da4e8698 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
| |-FieldDecl 0x55f5da4e8818 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
| |-CXXConstructorDecl 0x55f5da4f9648 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55f5da4f9eb8 <col:11>
| |-CXXDestructorDecl 0x55f5da4f9720 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
| |-CXXConstructorDecl 0x55f5da4f9858 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x55f5da4f9858
| | `-ParmVarDecl 0x55f5da4f9968 <col:11> col:11 'const Packet::Anno &'
| |-CXXConstructorDecl 0x55f5da4f9a08 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55f5da4f9a08
| | `-ParmVarDecl 0x55f5da4f9b18 <col:11> col:11 'Packet::Anno &&'
| |-CXXMethodDecl 0x55f5da4fc8d8 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55f5da4fc9e8 <col:11> col:11 'const Packet::Anno &'
| | `-CompoundStmt 0x55f5da4fcc68 <col:11>
| |   `-ReturnStmt 0x55f5da4fcc58 <col:11>
| |     `-UnaryOperator 0x55f5da4fcc40 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x55f5da4fcc30 <col:11> 'Packet::Anno *' this
| `-CXXMethodDecl 0x55f5da4fca58 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55f5da4fca58
|   `-ParmVarDecl 0x55f5da4fcb68 <col:11> col:11 'Packet::Anno &&'
|-CXXRecordDecl 0x55f5da4e8880 <line:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55f5da4e8998 <col:5, col:12> col:12 implicit struct AllAnno
| |-FieldDecl 0x55f5da4e8a38 <line:717:2, col:7> col:7 cb 'Packet::Anno'
| |-FieldDecl 0x55f5da4e8aa0 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
| |-FieldDecl 0x55f5da4e8b08 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
| |-FieldDecl 0x55f5da4e8b70 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
| |-FieldDecl 0x55f5da4e8bd0 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
| |-FieldDecl 0x55f5da4e8c90 <line:722:2, col:34> col:7 timestamp 'char [8]'
| |-FieldDecl 0x55f5da4e8cf0 <line:723:2, col:10> col:10 referenced next 'Packet *'
| |-FieldDecl 0x55f5da4e8d50 <line:724:2, col:10> col:10 referenced prev 'Packet *'
| |-CXXConstructorDecl 0x55f5da4f9558 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| | |-CXXCtorInitializer Field 0x55f5da4e8a38 'cb' 'Packet::Anno'
| | | `-CXXConstructExpr 0x55f5da4f9ec8 <col:12> 'Packet::Anno' 'void () noexcept'
| | `-CompoundStmt 0x55f5da4f9f20 <col:12>
| |-CXXConstructorDecl 0x55f5da4f9b88 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x55f5da4f9b88
| | `-ParmVarDecl 0x55f5da4f9c98 <col:12> col:12 'const Packet::AllAnno &'
| |-CXXConstructorDecl 0x55f5da4f9d38 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x55f5da4f9d38
| | `-ParmVarDecl 0x55f5da4f9e48 <col:12> col:12 'Packet::AllAnno &&'
| `-CXXDestructorDecl 0x55f5da4fbfc0 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial
|-FieldDecl 0x55f5da4e8dc8 <line:731:5, col:21> col:21 referenced _use_count 'atomic_uint32_t'
|-FieldDecl 0x55f5da4e8e28 <line:732:5, col:13> col:13 referenced _data_packet 'Packet *'
|-FieldDecl 0x55f5da4e8e90 <line:734:5, col:20> col:20 referenced _head 'unsigned char *'
|-FieldDecl 0x55f5da4e8ef8 <line:735:5, col:20> col:20 referenced _data 'unsigned char *'
|-FieldDecl 0x55f5da4e8f60 <line:736:5, col:20> col:20 referenced _tail 'unsigned char *'
|-FieldDecl 0x55f5da4e8fc8 <line:737:5, col:20> col:20 referenced _end 'unsigned char *'
|-FieldDecl 0x55f5da4e9028 <line:741:5, col:13> col:13 referenced _aa 'Packet::AllAnno'
|-FieldDecl 0x55f5da4e9088 <line:746:5, col:28> col:28 referenced _destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-FieldDecl 0x55f5da4e90f0 <line:747:5, col:11> col:11 referenced _destructor_argument 'void *'
|-CXXConstructorDecl 0x55f5da4e9178 <line:751:5, line:755:5> line:751:12 used Packet 'void ()' inline
| |-CXXCtorInitializer Field 0x55f5da4e8dc8 '_use_count' 'atomic_uint32_t'
| | `-CXXConstructExpr 0x55f5da4f94f0 <col:12> 'atomic_uint32_t' 'void () noexcept'
| |-CXXCtorInitializer Field 0x55f5da4e9028 '_aa' 'Packet::AllAnno'
| | `-CXXConstructExpr 0x55f5da4f9f30 <col:12> 'Packet::AllAnno' 'void () noexcept'
| `-CompoundStmt 0x55f5da4f9f90 <col:21, line:755:5>
|-CXXConstructorDecl 0x55f5da4e9318 <line:756:5, col:27> col:5 Packet 'void (const Packet &)'
| `-ParmVarDecl 0x55f5da4e9258 <col:12, col:26> col:26 x 'const Packet &'
|-CXXDestructorDecl 0x55f5da4e9410 <line:757:5, col:13> col:5 used ~Packet 'void () noexcept'
|-CXXMethodDecl 0x55f5da4e95f8 <line:758:5, col:38> col:13 operator= 'Packet &(const Packet &)'
| `-ParmVarDecl 0x55f5da4e9500 <col:23, col:37> col:37 x 'const Packet &'
|-CXXMethodDecl 0x55f5da4e98c8 <line:761:5, col:74> col:10 alloc_data 'bool (uint32_t, uint32_t, uint32_t)'
| |-ParmVarDecl 0x55f5da4e96b0 <col:21, col:30> col:30 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55f5da4e9728 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55f5da4e97a0 <col:57, col:66> col:66 tailroom 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f5da4e9ae8 <line:768:5, col:95> col:17 shift_header_annotations 'void (const unsigned char *, int32_t)' inline
| |-ParmVarDecl 0x55f5da4e9998 <col:42, col:63> col:63 old_head 'const unsigned char *'
| `-ParmVarDecl 0x55f5da4e9a10 <col:73, col:81> col:81 extra_headroom 'int32_t':'int'
|-CXXMethodDecl 0x55f5da4f20c8 <line:769:5, col:109> col:21 expensive_uniqueify 'WritablePacket *(int32_t, int32_t, bool)'
| |-ParmVarDecl 0x55f5da4e9ba8 <col:41, col:49> col:49 extra_headroom 'int32_t':'int'
| |-ParmVarDecl 0x55f5da4e9c20 <col:65, col:73> col:73 extra_tailroom 'int32_t':'int'
| `-ParmVarDecl 0x55f5da4e9c98 <col:89, col:94> col:94 free_on_failure 'bool'
|-CXXMethodDecl 0x55f5da4f2220 <line:770:5, col:51> col:21 used expensive_push 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x55f5da4f2190 <col:36, col:45> col:45 nbytes 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f5da4f2368 <line:771:5, col:50> col:21 used expensive_put 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x55f5da4f22d8 <col:35, col:44> col:44 nbytes 'uint32_t':'unsigned int'
`-FriendDecl 0x55f5da4f2460 <line:773:5, col:18> col:12 'class WritablePacket':'WritablePacket'

Layout: <CGRecordLayout
  LLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  NonVirtualBaseLLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class HandlerCall
         0 |   class Element * _e
         8 |   const class Handler * _h
        16 |   class String _value
        16 |     struct String::rep_t _r
        16 |       const char * data
        24 |       int length
        32 |       struct String::memo_t * memo
           | [sizeof=40, dsize=40, align=8,
           |  nvsize=40, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f5da706b50 prev 0x55f5da5e8610 <../dummy_inc/click/handlercall.hh:143:1, line:470:1> line:143:7 referenced class HandlerCall definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x55f5da706c48 <col:1, col:7> col:7 implicit referenced class HandlerCall
|-AccessSpecDecl 0x55f5da706cd8 <col:21, col:27> col:21 public
|-CXXMethodDecl 0x55f5da706ee8 <line:147:5, line:148:30> line:147:19 call_read 'String (Element *, const String &, ErrorHandler *)' static
| |-ParmVarDecl 0x55f5da706d10 <col:29, col:38> col:38 e 'Element *'
| |-ParmVarDecl 0x55f5da706d88 <col:41, col:55> col:55 hname 'const String &'
| `-ParmVarDecl 0x55f5da706e00 <line:148:8, col:29> col:22 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x55f5da70f6b0 <col:29> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x55f5da70f690 <col:29> 'int' 0
|-CXXMethodDecl 0x55f5da707188 <line:149:5, line:150:30> line:149:19 call_read 'String (const String &, const Element *, ErrorHandler *)' static
| |-ParmVarDecl 0x55f5da706fb0 <col:29, col:43> col:43 hdesc 'const String &'
| |-ParmVarDecl 0x55f5da707028 <col:50, col:65> col:65 context 'const Element *'
| `-ParmVarDecl 0x55f5da7070a0 <line:150:8, col:29> col:22 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x55f5da70f6e8 <col:29> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x55f5da70f6c8 <col:29> 'int' 0
|-CXXMethodDecl 0x55f5da707430 <line:151:5, line:152:28> line:151:16 call_write 'int (Element *, const String &, ErrorHandler *)' static
| |-ParmVarDecl 0x55f5da707250 <col:27, col:36> col:36 e 'Element *'
| |-ParmVarDecl 0x55f5da7072c8 <col:39, col:53> col:53 hname 'const String &'
| `-ParmVarDecl 0x55f5da707340 <line:152:6, col:27> col:20 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x55f5da70f720 <col:27> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x55f5da70f700 <col:27> 'int' 0
|-CXXMethodDecl 0x55f5da707760 <line:153:5, line:154:28> line:153:16 used call_write 'int (Element *, const String &, const String &, ErrorHandler *)' static
| |-ParmVarDecl 0x55f5da7074f8 <col:27, col:36> col:36 e 'Element *'
| |-ParmVarDecl 0x55f5da707570 <col:39, col:53> col:53 hname 'const String &'
| |-ParmVarDecl 0x55f5da7075e8 <col:60, col:74> col:74 value 'const String &'
| `-ParmVarDecl 0x55f5da707660 <line:154:6, col:27> col:20 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x55f5da70f758 <col:27> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x55f5da70f738 <col:27> 'int' 0
|-CXXMethodDecl 0x55f5da707a10 <line:155:5, line:156:52> line:155:16 call_write 'int (const String &, const Element *, ErrorHandler *)' static
| |-ParmVarDecl 0x55f5da707830 <col:27, col:41> col:41 hdesc 'const String &'
| |-ParmVarDecl 0x55f5da7078a8 <line:156:6, col:21> col:21 context 'const Element *'
| `-ParmVarDecl 0x55f5da707920 <col:30, col:51> col:44 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x55f5da70f790 <col:51> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x55f5da70f770 <col:51> 'int' 0
|-CXXMethodDecl 0x55f5da707d40 <line:157:5, line:158:52> line:157:16 call_write 'int (const String &, const String &, const Element *, ErrorHandler *)' static
| |-ParmVarDecl 0x55f5da707ad8 <col:27, col:41> col:41 hdesc 'const String &'
| |-ParmVarDecl 0x55f5da707b50 <col:48, col:62> col:62 value 'const String &'
| |-ParmVarDecl 0x55f5da707bc8 <line:158:6, col:21> col:21 context 'const Element *'
| `-ParmVarDecl 0x55f5da707c40 <col:30, col:51> col:44 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x55f5da70f7c8 <col:51> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x55f5da70f7a8 <col:51> 'int' 0
|-CXXConstructorDecl 0x55f5da707e38 <line:167:5, line:169:5> line:167:5 HandlerCall 'void ()'
| |-CXXCtorInitializer Field 0x55f5da70e778 '_e' 'Element *'
| | `-ImplicitCastExpr 0x55f5da70fba8 <line:168:7> 'Element *' <NullToPointer>
| |   `-IntegerLiteral 0x55f5da70fb68 <col:7> 'int' 0
| |-CXXCtorInitializer Field 0x55f5da70e7d8 '_h' 'const Handler *'
| | `-CallExpr 0x55f5da70fc90 <col:14, col:37> 'const Handler *'
| |   `-ImplicitCastExpr 0x55f5da70fc78 <col:14, col:23> 'const Handler *(*)()' <FunctionToPointerDecay>
| |     `-DeclRefExpr 0x55f5da70fc20 <col:14, col:23> 'const Handler *()' lvalue CXXMethod 0x55f5da509398 'blank_handler' 'const Handler *()'
| |-CXXCtorInitializer Field 0x55f5da70e838 '_value' 'String'
| | `-CXXConstructExpr 0x55f5da70fcf8 <line:167:5> 'String' 'void ()'
| `-CompoundStmt 0x55f5da70fd60 <line:168:40, line:169:5>
|-CXXConstructorDecl 0x55f5da707f80 <line:178:5, line:181:5> line:178:5 HandlerCall 'void (const String &)'
| |-ParmVarDecl 0x55f5da707ef0 <col:17, col:31> col:31 used hdesc 'const String &'
| |-CXXCtorInitializer Field 0x55f5da70e778 '_e' 'Element *'
| | `-CXXReinterpretCastExpr 0x55f5da70fda0 <line:179:7, col:36> 'Element *' reinterpret_cast<class Element *> <IntegralToPointer>
| |   `-IntegerLiteral 0x55f5da70fd70 <col:35> 'int' 4
| |-CXXCtorInitializer Field 0x55f5da70e7d8 '_h' 'const Handler *'
| | `-CallExpr 0x55f5da70fe98 <col:43, col:66> 'const Handler *'
| |   `-ImplicitCastExpr 0x55f5da70fe80 <col:43, col:52> 'const Handler *(*)()' <FunctionToPointerDecay>
| |     `-DeclRefExpr 0x55f5da70fe50 <col:43, col:52> 'const Handler *()' lvalue CXXMethod 0x55f5da509398 'blank_handler' 'const Handler *()'
| |-CXXCtorInitializer Field 0x55f5da70e838 '_value' 'String'
| | `-CXXConstructExpr 0x55f5da70ff40 <line:180:4, col:16> 'String' 'void (const String &)'
| |   `-DeclRefExpr 0x55f5da70ff00 <col:11> 'const String' lvalue ParmVar 0x55f5da707ef0 'hdesc' 'const String &'
| `-CompoundStmt 0x55f5da70ffb0 <col:18, line:181:5>
|-EnumDecl 0x55f5da708030 <line:184:5, line:191:5> line:184:10 Flags
| |-EnumConstantDecl 0x55f5da708178 <line:185:2, col:22> col:2 readable 'HandlerCall::Flags'
| | `-ImplicitCastExpr 0x55f5da708570 <col:13, col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f5da708158 <col:13, col:22> 'Handler::Flags' Int: 1
| |     `-DeclRefExpr 0x55f5da708128 <col:13, col:22> 'Handler::Flags' EnumConstant 0x55f5da506b90 'f_read' 'Handler::Flags'
| |-EnumConstantDecl 0x55f5da708250 <line:186:2, col:20> col:2 referenced f_read 'HandlerCall::Flags'
| | `-ImplicitCastExpr 0x55f5da708588 <col:11, col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f5da708230 <col:11, col:20> 'Handler::Flags' Int: 1
| |     `-DeclRefExpr 0x55f5da708200 <col:11, col:20> 'Handler::Flags' EnumConstant 0x55f5da506b90 'f_read' 'Handler::Flags'
| |-EnumConstantDecl 0x55f5da708328 <line:187:2, col:22> col:2 writable 'HandlerCall::Flags'
| | `-ImplicitCastExpr 0x55f5da7085a0 <col:13, col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f5da708308 <col:13, col:22> 'Handler::Flags' Int: 2
| |     `-DeclRefExpr 0x55f5da7082d8 <col:13, col:22> 'Handler::Flags' EnumConstant 0x55f5da506c20 'f_write' 'Handler::Flags'
| |-EnumConstantDecl 0x55f5da708400 <line:188:2, col:21> col:2 referenced f_write 'HandlerCall::Flags'
| | `-ImplicitCastExpr 0x55f5da7085b8 <col:12, col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f5da7083e0 <col:12, col:21> 'Handler::Flags' Int: 2
| |     `-DeclRefExpr 0x55f5da7083b0 <col:12, col:21> 'Handler::Flags' EnumConstant 0x55f5da506c20 'f_write' 'Handler::Flags'
| |-EnumConstantDecl 0x55f5da708490 <line:189:2, col:20> col:2 referenced f_preinitialize 'HandlerCall::Flags'
| | `-ImplicitCastExpr 0x55f5da7085d0 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f5da708470 <col:20> 'int' Int: 4
| |     `-IntegerLiteral 0x55f5da708450 <col:20> 'int' 4
| `-EnumConstantDecl 0x55f5da708520 <line:190:9, col:27> col:9 referenced f_unquote_param 'HandlerCall::Flags'
|   `-ImplicitCastExpr 0x55f5da7085e8 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55f5da708500 <col:27> 'int' Int: 8
|       `-IntegerLiteral 0x55f5da7084e0 <col:27> 'int' 8
|-CXXMethodDecl 0x55f5da7087f0 <line:227:5, col:77> col:9 used initialize 'int (int, const Element *, ErrorHandler *)'
| |-ParmVarDecl 0x55f5da708618 <col:20, col:24> col:24 flags 'int'
| |-ParmVarDecl 0x55f5da708690 <col:31, col:46> col:46 context 'const Element *'
| `-ParmVarDecl 0x55f5da708708 <col:55, col:76> col:69 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x55f5da70f800 <col:76> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x55f5da70f7e0 <col:76> 'int' 0
|-CXXMethodDecl 0x55f5da708a10 <line:235:5, col:78> col:16 initialize_read 'int (const Element *, ErrorHandler *)' inline
| |-ParmVarDecl 0x55f5da7088b8 <col:32, col:47> col:47 context 'const Element *'
| `-ParmVarDecl 0x55f5da708930 <col:56, col:77> col:70 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x55f5da70f838 <col:77> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x55f5da70f818 <col:77> 'int' 0
|-CXXMethodDecl 0x55f5da708be8 <line:243:5, col:79> col:16 initialize_write 'int (const Element *, ErrorHandler *)' inline
| |-ParmVarDecl 0x55f5da708ad0 <col:33, col:48> col:48 context 'const Element *'
| `-ParmVarDecl 0x55f5da708b48 <col:57, col:78> col:71 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x55f5da70f870 <col:78> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x55f5da70f850 <col:78> 'int' 0
|-TypedefDecl 0x55f5da708d78 <line:246:5, col:58> col:33 referenced unspecified_bool_type 'bool (HandlerCall::*)() const'
| `-MemberPointerType 0x55f5da708cf0 'bool (HandlerCall::*)() const'
|   |-RecordType 0x55f5da5e5b30 'HandlerCall'
|   | `-CXXRecord 0x55f5da706b50 'HandlerCall'
|   `-ParenType 0x55f5da5c71f0 'bool () const' sugar
|     `-FunctionProtoType 0x55f5da056050 'bool () const' const cdecl
|       `-BuiltinType 0x55f5d9fa9330 'bool'
|-CXXConversionDecl 0x55f5da708eb8 <line:252:5, line:254:5> line:252:5 operator bool (HandlerCall::*)() const 'HandlerCall::unspecified_bool_type () const'
| `-CompoundStmt 0x55f5da710260 <col:44, line:254:5>
|   `-ReturnStmt 0x55f5da710250 <line:253:2, col:70>
|     `-ConditionalOperator 0x55f5da710220 <col:9, col:70> 'bool (HandlerCall::*)() const'
|       |-BinaryOperator 0x55f5da710148 <col:9, col:43> 'bool' '||'
|       | |-BinaryOperator 0x55f5da7100b8 <col:9, col:38> 'bool' '!='
|       | | |-ImplicitCastExpr 0x55f5da7100a0 <col:9> 'const Handler *' <LValueToRValue>
|       | | | `-MemberExpr 0x55f5da70ffd0 <col:9> 'const Handler *const' lvalue ->_h 0x55f5da70e7d8
|       | | |   `-CXXThisExpr 0x55f5da70ffc0 <col:9> 'const HandlerCall *' implicit this
|       | | `-CallExpr 0x55f5da710080 <col:15, col:38> 'const Handler *'
|       | |   `-ImplicitCastExpr 0x55f5da710068 <col:15, col:24> 'const Handler *(*)()' <FunctionToPointerDecay>
|       | |     `-DeclRefExpr 0x55f5da710038 <col:15, col:24> 'const Handler *()' lvalue CXXMethod 0x55f5da509398 'blank_handler' 'const Handler *()'
|       | `-ImplicitCastExpr 0x55f5da710130 <col:43> 'bool' <PointerToBoolean>
|       |   `-ImplicitCastExpr 0x55f5da710118 <col:43> 'Element *' <LValueToRValue>
|       |     `-MemberExpr 0x55f5da7100e8 <col:43> 'Element *const' lvalue ->_e 0x55f5da70e778
|       |       `-CXXThisExpr 0x55f5da7100d8 <col:43> 'const HandlerCall *' implicit this
|       |-UnaryOperator 0x55f5da7101d0 <col:48, col:62> 'bool (HandlerCall::*)() const' prefix '&' cannot overflow
|       | `-DeclRefExpr 0x55f5da7101a0 <col:49, col:62> 'bool () const' CXXMethod 0x55f5da708f88 'empty' 'bool () const'
|       `-ImplicitCastExpr 0x55f5da710208 <col:70> 'bool (HandlerCall::*)() const' <NullToMemberPointer>
|         `-IntegerLiteral 0x55f5da7101e8 <col:70> 'int' 0
|-CXXMethodDecl 0x55f5da708f88 <line:258:5, line:260:5> line:258:10 used empty 'bool () const'
| `-CompoundStmt 0x55f5da710448 <col:24, line:260:5>
|   `-ReturnStmt 0x55f5da710438 <line:259:2, col:44>
|     `-BinaryOperator 0x55f5da710418 <col:9, col:44> 'bool' '&&'
|       |-BinaryOperator 0x55f5da710370 <col:9, col:38> 'bool' '=='
|       | |-ImplicitCastExpr 0x55f5da710358 <col:9> 'const Handler *' <LValueToRValue>
|       | | `-MemberExpr 0x55f5da710288 <col:9> 'const Handler *const' lvalue ->_h 0x55f5da70e7d8
|       | |   `-CXXThisExpr 0x55f5da710278 <col:9> 'const HandlerCall *' implicit this
|       | `-CallExpr 0x55f5da710338 <col:15, col:38> 'const Handler *'
|       |   `-ImplicitCastExpr 0x55f5da710320 <col:15, col:24> 'const Handler *(*)()' <FunctionToPointerDecay>
|       |     `-DeclRefExpr 0x55f5da7102f0 <col:15, col:24> 'const Handler *()' lvalue CXXMethod 0x55f5da509398 'blank_handler' 'const Handler *()'
|       `-UnaryOperator 0x55f5da710400 <col:43, col:44> 'bool' prefix '!' cannot overflow
|         `-ImplicitCastExpr 0x55f5da7103e8 <col:44> 'bool' <PointerToBoolean>
|           `-ImplicitCastExpr 0x55f5da7103d0 <col:44> 'Element *' <LValueToRValue>
|             `-MemberExpr 0x55f5da7103a0 <col:44> 'Element *const' lvalue ->_e 0x55f5da70e778
|               `-CXXThisExpr 0x55f5da710390 <col:44> 'const HandlerCall *' implicit this
|-CXXMethodDecl 0x55f5da709048 <line:264:5, line:266:5> line:264:10 used initialized 'bool () const'
| `-CompoundStmt 0x55f5da710588 <col:30, line:266:5>
|   `-ReturnStmt 0x55f5da710578 <line:265:2, col:38>
|     `-BinaryOperator 0x55f5da710558 <col:9, col:38> 'bool' '!='
|       |-ImplicitCastExpr 0x55f5da710540 <col:9> 'const Handler *' <LValueToRValue>
|       | `-MemberExpr 0x55f5da710470 <col:9> 'const Handler *const' lvalue ->_h 0x55f5da70e7d8
|       |   `-CXXThisExpr 0x55f5da710460 <col:9> 'const HandlerCall *' implicit this
|       `-CallExpr 0x55f5da710520 <col:15, col:38> 'const Handler *'
|         `-ImplicitCastExpr 0x55f5da710508 <col:15, col:24> 'const Handler *(*)()' <FunctionToPointerDecay>
|           `-DeclRefExpr 0x55f5da7104d8 <col:15, col:24> 'const Handler *()' lvalue CXXMethod 0x55f5da509398 'blank_handler' 'const Handler *()'
|-CXXMethodDecl 0x55f5da7091b8 <line:276:5, col:53> col:19 call_read 'String (ErrorHandler *) const' inline
| `-ParmVarDecl 0x55f5da7090f8 <col:29, col:50> col:43 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x55f5da70f8a8 <col:50> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x55f5da70f888 <col:50> 'int' 0
|-CXXMethodDecl 0x55f5da709340 <line:285:5, col:51> col:16 call_write 'int (ErrorHandler *) const' inline
| `-ParmVarDecl 0x55f5da709270 <col:27, col:48> col:41 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x55f5da70f8e0 <col:48> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x55f5da70f8c0 <col:48> 'int' 0
|-CXXMethodDecl 0x55f5da709580 <line:296:5, col:82> col:16 call_write 'int (const VariableExpander &, ErrorHandler *) const' inline
| |-ParmVarDecl 0x55f5da709428 <col:27, col:51> col:51 scope 'const VariableExpander &'
| `-ParmVarDecl 0x55f5da7094a0 <col:58, col:79> col:72 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x55f5da70f918 <col:79> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x55f5da70f8f8 <col:79> 'int' 0
|-CXXMethodDecl 0x55f5da709790 <line:309:5, col:76> col:16 call_write 'int (const String &, ErrorHandler *) const' inline
| |-ParmVarDecl 0x55f5da709640 <col:27, col:41> col:41 value_ext 'const String &'
| `-ParmVarDecl 0x55f5da7096b8 <col:52, col:73> col:66 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x55f5da70f950 <col:73> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x55f5da70f930 <col:73> 'int' 0
|-CXXMethodDecl 0x55f5da709b70 <line:333:5, line:334:54> line:333:16 used reset 'int (HandlerCall *&, const String &, int, const Element *, ErrorHandler *)' static
| |-ParmVarDecl 0x55f5da709880 <col:22, col:36> col:36 hcall 'HandlerCall *&'
| |-ParmVarDecl 0x55f5da7098f8 <col:43, col:57> col:57 hdesc 'const String &'
| |-ParmVarDecl 0x55f5da709978 <col:64, col:68> col:68 flags 'int'
| |-ParmVarDecl 0x55f5da7099f0 <line:334:8, col:23> col:23 context 'const Element *'
| `-ParmVarDecl 0x55f5da709a68 <col:32, col:53> col:46 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x55f5da70f988 <col:53> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x55f5da70f968 <col:53> 'int' 0
|-CXXMethodDecl 0x55f5da709fd0 <line:347:5, line:349:41> line:347:16 used reset 'int (HandlerCall *&, Element *, const String &, const String &, int, ErrorHandler *)' static
| |-ParmVarDecl 0x55f5da709c50 <col:22, col:36> col:36 hcall 'HandlerCall *&'
| |-ParmVarDecl 0x55f5da709cc8 <line:348:8, col:17> col:17 e 'Element *'
| |-ParmVarDecl 0x55f5da709d40 <col:20, col:34> col:34 hname 'const String &'
| |-ParmVarDecl 0x55f5da709db8 <col:41, col:55> col:55 value 'const String &'
| |-ParmVarDecl 0x55f5da709e38 <line:349:8, col:12> col:12 flags 'int'
| `-ParmVarDecl 0x55f5da709eb0 <col:19, col:40> col:33 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x55f5da70f9c0 <col:40> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x55f5da70f9a0 <col:40> 'int' 0
|-CXXMethodDecl 0x55f5da70a320 <line:361:5, line:362:52> line:361:23 reset_read 'int (HandlerCall *&, const String &, const Element *, ErrorHandler *)' static inline
| |-ParmVarDecl 0x55f5da70a0b8 <col:34, col:48> col:48 hcall 'HandlerCall *&'
| |-ParmVarDecl 0x55f5da70a130 <col:55, col:69> col:69 hdesc 'const String &'
| |-ParmVarDecl 0x55f5da70a1a8 <line:362:6, col:21> col:21 context 'const Element *'
| `-ParmVarDecl 0x55f5da70a220 <col:30, col:51> col:44 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x55f5da70f9f8 <col:51> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x55f5da70f9d8 <col:51> 'int' 0
|-CXXMethodDecl 0x55f5da70a660 <line:373:5, line:375:28> line:373:23 reset_read 'int (HandlerCall *&, Element *, const String &, ErrorHandler *)' static inline
| |-ParmVarDecl 0x55f5da70a3f8 <col:34, col:48> col:48 hcall 'HandlerCall *&'
| |-ParmVarDecl 0x55f5da70a470 <line:374:6, col:15> col:15 e 'Element *'
| |-ParmVarDecl 0x55f5da70a4e8 <col:18, col:32> col:32 hname 'const String &'
| `-ParmVarDecl 0x55f5da70a560 <line:375:6, col:27> col:20 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x55f5da70fa30 <col:27> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x55f5da70fa10 <col:27> 'int' 0
|-CXXMethodDecl 0x55f5da70a950 <line:386:5, line:387:53> line:386:23 reset_write 'int (HandlerCall *&, const String &, const Element *, ErrorHandler *)' static inline
| |-ParmVarDecl 0x55f5da70a738 <col:35, col:49> col:49 hcall 'HandlerCall *&'
| |-ParmVarDecl 0x55f5da70a7b0 <col:56, col:70> col:70 hdesc 'const String &'
| |-ParmVarDecl 0x55f5da70a828 <line:387:7, col:22> col:22 context 'const Element *'
| `-ParmVarDecl 0x55f5da70a8a0 <col:31, col:52> col:45 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x55f5da70fa68 <col:52> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x55f5da70fa48 <col:52> 'int' 0
|-CXXMethodDecl 0x55f5da70ad10 <line:399:5, line:402:29> line:399:23 reset_write 'int (HandlerCall *&, Element *, const String &, const String &, ErrorHandler *)' static inline
| |-ParmVarDecl 0x55f5da70aa28 <col:35, col:49> col:49 hcall 'HandlerCall *&'
| |-ParmVarDecl 0x55f5da70aaa0 <line:400:7, col:16> col:16 e 'Element *'
| |-ParmVarDecl 0x55f5da70ab18 <col:19, col:33> col:33 hname 'const String &'
| |-ParmVarDecl 0x55f5da70ab90 <line:401:7, col:36> col:21 value 'const String &' cinit
| | `-ExprWithCleanups 0x55f5da70fb18 <col:29, col:36> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x55f5da70fb00 <col:29, col:36> 'const String' lvalue
| |     `-ImplicitCastExpr 0x55f5da70fae8 <col:29, col:36> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x55f5da70fac8 <col:29, col:36> 'String' (CXXTemporary 0x55f5da70fac8)
| |         `-CXXTemporaryObjectExpr 0x55f5da70fa90 <col:29, col:36> 'String' 'void ()'
| `-ParmVarDecl 0x55f5da70ac08 <line:402:7, col:28> col:21 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x55f5da70fb50 <col:28> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x55f5da70fb30 <col:28> 'int' 0
|-CXXMethodDecl 0x55f5da70adf8 <line:409:5, line:411:5> line:409:14 element 'Element *() const'
| `-CompoundStmt 0x55f5da710608 <col:30, line:411:5>
|   `-ReturnStmt 0x55f5da7105f8 <line:410:2, col:9>
|     `-ImplicitCastExpr 0x55f5da7105e0 <col:9> 'Element *' <LValueToRValue>
|       `-MemberExpr 0x55f5da7105b0 <col:9> 'Element *const' lvalue ->_e 0x55f5da70e778
|         `-CXXThisExpr 0x55f5da7105a0 <col:9> 'const HandlerCall *' implicit this
|-CXXMethodDecl 0x55f5da70aee8 <line:416:5, line:418:5> line:416:20 handler 'const Handler *() const'
| `-CompoundStmt 0x55f5da710688 <col:36, line:418:5>
|   `-ReturnStmt 0x55f5da710678 <line:417:2, col:9>
|     `-ImplicitCastExpr 0x55f5da710660 <col:9> 'const Handler *' <LValueToRValue>
|       `-MemberExpr 0x55f5da710630 <col:9> 'const Handler *const' lvalue ->_h 0x55f5da70e7d8
|         `-CXXThisExpr 0x55f5da710620 <col:9> 'const HandlerCall *' implicit this
|-CXXMethodDecl 0x55f5da70afa8 <line:423:5, line:425:5> line:423:19 value 'const String &() const'
| `-CompoundStmt 0x55f5da710850 <col:33, line:425:5>
|   `-ReturnStmt 0x55f5da710840 <line:424:2, col:53>
|     `-ConditionalOperator 0x55f5da710810 <col:9, col:53> 'const String' lvalue
|       |-CXXMemberCallExpr 0x55f5da7106e0 <col:9, col:21> 'bool'
|       | `-MemberExpr 0x55f5da7106b0 <col:9> '<bound member function type>' ->initialized 0x55f5da709048
|       |   `-CXXThisExpr 0x55f5da7106a0 <col:9> 'const HandlerCall *' implicit this
|       |-MemberExpr 0x55f5da710710 <col:25> 'const String' lvalue ->_value 0x55f5da70e838
|       | `-CXXThisExpr 0x55f5da710700 <col:25> 'const HandlerCall *' implicit this
|       `-CallExpr 0x55f5da7107f0 <col:34, col:53> 'const String' lvalue
|         `-ImplicitCastExpr 0x55f5da7107d8 <col:34, col:42> 'const String &(*)()' <FunctionToPointerDecay>
|           `-DeclRefExpr 0x55f5da710778 <col:34, col:42> 'const String &()' lvalue CXXMethod 0x55f5da2efcc8 'make_empty' 'const String &()'
|-CXXMethodDecl 0x55f5da70b0e8 <line:431:5, line:434:5> line:431:10 set_value 'void (const String &)'
| |-ParmVarDecl 0x55f5da70b058 <col:20, col:34> col:34 used value 'const String &'
| `-CompoundStmt 0x55f5da7109c8 <col:41, line:434:5>
|   `-IfStmt 0x55f5da7109b0 <line:432:2, line:433:15>
|     |-CXXMemberCallExpr 0x55f5da7108a8 <line:432:6, col:18> 'bool'
|     | `-MemberExpr 0x55f5da710878 <col:6> '<bound member function type>' ->initialized 0x55f5da709048
|     |   `-ImplicitCastExpr 0x55f5da7108c8 <col:6> 'const HandlerCall *' <NoOp>
|     |     `-CXXThisExpr 0x55f5da710868 <col:6> 'HandlerCall *' implicit this
|     `-CXXOperatorCallExpr 0x55f5da710978 <line:433:6, col:15> 'String' lvalue
|       |-ImplicitCastExpr 0x55f5da710960 <col:13> 'String &(*)(const String &)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55f5da710940 <col:13> 'String &(const String &)' lvalue CXXMethod 0x55f5da2fac10 'operator=' 'String &(const String &)'
|       |-MemberExpr 0x55f5da7108f0 <col:6> 'String' lvalue ->_value 0x55f5da70e838
|       | `-CXXThisExpr 0x55f5da7108e0 <col:6> 'HandlerCall *' implicit this
|       `-DeclRefExpr 0x55f5da710920 <col:15> 'const String' lvalue ParmVar 0x55f5da70b058 'value' 'const String &'
|-CXXMethodDecl 0x55f5da70b1b0 <line:439:5, col:22> col:12 unparse 'String () const'
|-CXXMethodDecl 0x55f5da70b270 <line:445:5, line:449:5> line:445:10 clear 'void ()'
| `-CompoundStmt 0x55f5da710cc0 <col:18, line:449:5>
|   |-BinaryOperator 0x55f5da710a58 <line:446:2, col:7> 'Element *' lvalue '='
|   | |-MemberExpr 0x55f5da7109f0 <col:2> 'Element *' lvalue ->_e 0x55f5da70e778
|   | | `-CXXThisExpr 0x55f5da7109e0 <col:2> 'HandlerCall *' implicit this
|   | `-ImplicitCastExpr 0x55f5da710a40 <col:7> 'Element *' <NullToPointer>
|   |   `-IntegerLiteral 0x55f5da710a20 <col:7> 'int' 0
|   |-BinaryOperator 0x55f5da710b58 <line:447:2, col:30> 'const Handler *' lvalue '='
|   | |-MemberExpr 0x55f5da710a88 <col:2> 'const Handler *' lvalue ->_h 0x55f5da70e7d8
|   | | `-CXXThisExpr 0x55f5da710a78 <col:2> 'HandlerCall *' implicit this
|   | `-CallExpr 0x55f5da710b38 <col:7, col:30> 'const Handler *'
|   |   `-ImplicitCastExpr 0x55f5da710b20 <col:7, col:16> 'const Handler *(*)()' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x55f5da710af0 <col:7, col:16> 'const Handler *()' lvalue CXXMethod 0x55f5da509398 'blank_handler' 'const Handler *()'
|   `-ExprWithCleanups 0x55f5da710ca8 <line:448:2, col:18> 'String' lvalue
|     `-CXXOperatorCallExpr 0x55f5da710c70 <col:2, col:18> 'String' lvalue
|       |-ImplicitCastExpr 0x55f5da710c58 <col:9> 'String &(*)(String &&)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55f5da710c38 <col:9> 'String &(String &&)' lvalue CXXMethod 0x55f5da2fb318 'operator=' 'String &(String &&)'
|       |-MemberExpr 0x55f5da710b88 <col:2> 'String' lvalue ->_value 0x55f5da70e838
|       | `-CXXThisExpr 0x55f5da710b78 <col:2> 'HandlerCall *' implicit this
|       `-MaterializeTemporaryExpr 0x55f5da710c20 <col:11, col:18> 'String' xvalue
|         `-CXXBindTemporaryExpr 0x55f5da710c00 <col:11, col:18> 'String' (CXXTemporary 0x55f5da710c00)
|           `-CXXTemporaryObjectExpr 0x55f5da710bc8 <col:11, col:18> 'String' 'void ()'
|-EnumDecl 0x55f5da70b310 <line:453:5, line:458:5> line:453:5
| |-EnumConstantDecl 0x55f5da70b410 <line:454:9, col:22> col:9 CHECK_READ 'HandlerCall::(anonymous enum at ../dummy_inc/click/handlercall.hh:453:5)'
| | `-ImplicitCastExpr 0x55f5da70e650 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f5da70b3f0 <col:22> 'HandlerCall::Flags' Int: 1
| |     `-DeclRefExpr 0x55f5da70b3d0 <col:22> 'HandlerCall::Flags' EnumConstant 0x55f5da708250 'f_read' 'HandlerCall::Flags'
| |-EnumConstantDecl 0x55f5da70b4a0 <col:30, col:40> col:30 OP_READ 'HandlerCall::(anonymous enum at ../dummy_inc/click/handlercall.hh:453:5)'
| | `-ImplicitCastExpr 0x55f5da70e668 <col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f5da70b480 <col:40> 'HandlerCall::Flags' Int: 1
| |     `-DeclRefExpr 0x55f5da70b460 <col:40> 'HandlerCall::Flags' EnumConstant 0x55f5da708250 'f_read' 'HandlerCall::Flags'
| |-EnumConstantDecl 0x55f5da70b530 <col:48, col:57> col:48 h_read 'HandlerCall::(anonymous enum at ../dummy_inc/click/handlercall.hh:453:5)'
| | `-ImplicitCastExpr 0x55f5da70e680 <col:57> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f5da70b510 <col:57> 'HandlerCall::Flags' Int: 1
| |     `-DeclRefExpr 0x55f5da70b4f0 <col:57> 'HandlerCall::Flags' EnumConstant 0x55f5da708250 'f_read' 'HandlerCall::Flags'
| |-EnumConstantDecl 0x55f5da70b5c0 <line:455:9, col:23> col:9 CHECK_WRITE 'HandlerCall::(anonymous enum at ../dummy_inc/click/handlercall.hh:453:5)'
| | `-ImplicitCastExpr 0x55f5da70e698 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f5da70b5a0 <col:23> 'HandlerCall::Flags' Int: 2
| |     `-DeclRefExpr 0x55f5da70b580 <col:23> 'HandlerCall::Flags' EnumConstant 0x55f5da708400 'f_write' 'HandlerCall::Flags'
| |-EnumConstantDecl 0x55f5da70b650 <col:32, col:43> col:32 OP_WRITE 'HandlerCall::(anonymous enum at ../dummy_inc/click/handlercall.hh:453:5)'
| | `-ImplicitCastExpr 0x55f5da70e6b0 <col:43> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f5da70b630 <col:43> 'HandlerCall::Flags' Int: 2
| |     `-DeclRefExpr 0x55f5da70b610 <col:43> 'HandlerCall::Flags' EnumConstant 0x55f5da708400 'f_write' 'HandlerCall::Flags'
| |-EnumConstantDecl 0x55f5da70b6e0 <col:52, col:62> col:52 h_write 'HandlerCall::(anonymous enum at ../dummy_inc/click/handlercall.hh:453:5)'
| | `-ImplicitCastExpr 0x55f5da70e6c8 <col:62> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f5da70b6c0 <col:62> 'HandlerCall::Flags' Int: 2
| |     `-DeclRefExpr 0x55f5da70b6a0 <col:62> 'HandlerCall::Flags' EnumConstant 0x55f5da708400 'f_write' 'HandlerCall::Flags'
| |-EnumConstantDecl 0x55f5da70e450 <line:456:9, col:25> col:9 PREINITIALIZE 'HandlerCall::(anonymous enum at ../dummy_inc/click/handlercall.hh:453:5)'
| | `-ImplicitCastExpr 0x55f5da70e6e0 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f5da70b750 <col:25> 'HandlerCall::Flags' Int: 4
| |     `-DeclRefExpr 0x55f5da70b730 <col:25> 'HandlerCall::Flags' EnumConstant 0x55f5da708490 'f_preinitialize' 'HandlerCall::Flags'
| |-EnumConstantDecl 0x55f5da70e4e0 <col:42, col:60> col:42 h_preinitialize 'HandlerCall::(anonymous enum at ../dummy_inc/click/handlercall.hh:453:5)'
| | `-ImplicitCastExpr 0x55f5da70e6f8 <col:60> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f5da70e4c0 <col:60> 'HandlerCall::Flags' Int: 4
| |     `-DeclRefExpr 0x55f5da70e4a0 <col:60> 'HandlerCall::Flags' EnumConstant 0x55f5da708490 'f_preinitialize' 'HandlerCall::Flags'
| |-EnumConstantDecl 0x55f5da70e570 <line:457:9, col:25> col:9 UNQUOTE_PARAM 'HandlerCall::(anonymous enum at ../dummy_inc/click/handlercall.hh:453:5)'
| | `-ImplicitCastExpr 0x55f5da70e710 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f5da70e550 <col:25> 'HandlerCall::Flags' Int: 8
| |     `-DeclRefExpr 0x55f5da70e530 <col:25> 'HandlerCall::Flags' EnumConstant 0x55f5da708520 'f_unquote_param' 'HandlerCall::Flags'
| `-EnumConstantDecl 0x55f5da70e600 <col:42, col:60> col:42 h_unquote_param 'HandlerCall::(anonymous enum at ../dummy_inc/click/handlercall.hh:453:5)'
|   `-ImplicitCastExpr 0x55f5da70e728 <col:60> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55f5da70e5e0 <col:60> 'HandlerCall::Flags' Int: 8
|       `-DeclRefExpr 0x55f5da70e5c0 <col:60> 'HandlerCall::Flags' EnumConstant 0x55f5da708520 'f_unquote_param' 'HandlerCall::Flags'
|-AccessSpecDecl 0x55f5da70e740 <line:461:3, col:10> col:3 private
|-FieldDecl 0x55f5da70e778 <line:463:5, col:14> col:14 referenced _e 'Element *'
|-FieldDecl 0x55f5da70e7d8 <line:464:5, col:20> col:20 referenced _h 'const Handler *'
|-FieldDecl 0x55f5da70e838 <line:465:5, col:12> col:12 referenced _value 'String'
|-CXXMethodDecl 0x55f5da70ea80 <line:467:5, col:49> col:9 parse 'int (int, Element *, ErrorHandler *)'
| |-ParmVarDecl 0x55f5da70e8a0 <col:15, col:19> col:19 flags 'int'
| |-ParmVarDecl 0x55f5da70e918 <col:26, col:33> col:34 'Element *'
| `-ParmVarDecl 0x55f5da70e990 <col:36, col:48> col:49 'ErrorHandler *'
|-CXXMethodDecl 0x55f5da70ee40 <line:468:5, col:80> col:9 assign 'int (Element *, const String &, const String &, int, ErrorHandler *)'
| |-ParmVarDecl 0x55f5da70eb48 <col:16, col:23> col:24 'Element *'
| |-ParmVarDecl 0x55f5da70ebc0 <col:26, col:38> col:39 'const String &'
| |-ParmVarDecl 0x55f5da70ec38 <col:41, col:53> col:54 'const String &'
| |-ParmVarDecl 0x55f5da70ecb8 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x55f5da70ed30 <col:67, col:79> col:80 'ErrorHandler *'
|-CXXConstructorDecl 0x55f5da70ef38 <line:143:7> col:7 implicit HandlerCall 'void (const HandlerCall &)' inline default noexcept-unevaluated 0x55f5da70ef38
| `-ParmVarDecl 0x55f5da70f048 <col:7> col:7 'const HandlerCall &'
|-CXXConstructorDecl 0x55f5da70f0e8 <col:7> col:7 implicit HandlerCall 'void (HandlerCall &&)' inline default noexcept-unevaluated 0x55f5da70f0e8
| `-ParmVarDecl 0x55f5da70f1f8 <col:7> col:7 'HandlerCall &&'
|-CXXMethodDecl 0x55f5da70f298 <col:7> col:7 implicit operator= 'HandlerCall &(const HandlerCall &)' inline default noexcept-unevaluated 0x55f5da70f298
| `-ParmVarDecl 0x55f5da70f3a8 <col:7> col:7 'const HandlerCall &'
|-CXXMethodDecl 0x55f5da70f418 <col:7> col:7 implicit operator= 'HandlerCall &(HandlerCall &&)' inline default noexcept-unevaluated 0x55f5da70f418
| `-ParmVarDecl 0x55f5da70f528 <col:7> col:7 'HandlerCall &&'
`-CXXDestructorDecl 0x55f5da70f5b0 <col:7> col:7 implicit ~HandlerCall 'void ()' inline default noexcept-unevaluated 0x55f5da70f5b0

Layout: <CGRecordLayout
  LLVMType:%class.HandlerCall = type { %class.Element*, %class.Handler*, %class.String }
  NonVirtualBaseLLVMType:%class.HandlerCall = type { %class.Element*, %class.Handler*, %class.String }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f5da5e5b50 <../elements/standard/infinitesource.hh:102:1, line:150:1> line:102:7 class InfiniteSource definition
|-DefinitionData polymorphic has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-public 'Element'
|-public 'ActiveNotifier'
|-CXXRecordDecl 0x55f5da5e5ce8 <col:1, col:7> col:7 implicit referenced class InfiniteSource
|-AccessSpecDecl 0x55f5da5e5d78 <col:64, col:70> col:64 public
|-CXXConstructorDecl 0x55f5da5e5e00 <line:104:3, col:18> col:3 InfiniteSource 'void ()'
|-CXXMethodDecl 0x55f5da5e5f00 <line:106:3, col:61> col:15 class_name 'const char *() const'
| |-Overrides: [ 0x55f5da511128 Element::class_name 'const char *() const' ]
| `-CompoundStmt 0x55f5da5e8080 <col:34, col:61>
|   `-ReturnStmt 0x55f5da5e8070 <col:36, col:43>
|     `-ImplicitCastExpr 0x55f5da5e8058 <col:43> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x55f5da5e8030 <col:43> 'const char [15]' lvalue "InfiniteSource"
|-CXXMethodDecl 0x55f5da5e6050 <line:107:3, col:26> col:9 cast 'void *(const char *)'
| |-Overrides: [ 0x55f5da511de0 Element::cast 'void *(const char *)' ]
| `-ParmVarDecl 0x55f5da5e5fb8 <col:14, col:25> col:26 'const char *'
|-CXXMethodDecl 0x55f5da5e6120 <line:108:3, col:54> col:15 port_count 'const char *() const'
| |-Overrides: [ 0x55f5da5111f0 Element::port_count 'const char *() const' ]
| `-CompoundStmt 0x55f5da5e80e0 <col:34, col:54>
|   `-ReturnStmt 0x55f5da5e80d0 <col:36, col:43>
|     `-ImplicitCastExpr 0x55f5da5e80b8 <col:43> 'const char *' <ArrayToPointerDecay>
|       `-DeclRefExpr 0x55f5da5e8098 <col:43> 'const char []' lvalue Var 0x55f5da511390 'PORTS_0_1' 'const char []'
|-CXXMethodDecl 0x55f5da5e61e8 <line:109:3, col:44> col:15 flags 'const char *() const'
| |-Overrides: [ 0x55f5da511b00 Element::flags 'const char *() const' ]
| `-CompoundStmt 0x55f5da5e8140 <col:29, col:44>
|   `-ReturnStmt 0x55f5da5e8130 <col:31, col:38>
|     `-ImplicitCastExpr 0x55f5da5e8118 <col:38> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x55f5da5e80f8 <col:38> 'const char [3]' lvalue "S1"
|-CXXMethodDecl 0x55f5da5e62a8 <line:110:3, col:21> col:8 add_handlers 'void ()'
| `-Overrides: [ 0x55f5da512a90 Element::add_handlers 'void ()' ]
|-CXXMethodDecl 0x55f5da5e6580 <line:112:3, col:49> col:7 configure 'int (Vector<String> &, ErrorHandler *)'
| |-Overrides: [ 0x55f5da5129c0 Element::configure 'int (Vector<String> &, ErrorHandler *)' ]
| |-ParmVarDecl 0x55f5da5e6430 <col:17, col:32> col:33 'Vector<String> &'
| `-ParmVarDecl 0x55f5da5e64a8 <col:35, col:48> col:49 'ErrorHandler *'
|-CXXMethodDecl 0x55f5da5e66d8 <line:113:3, col:32> col:7 initialize 'int (ErrorHandler *)'
| |-Overrides: [ 0x55f5da512c10 Element::initialize 'int (ErrorHandler *)' ]
| `-ParmVarDecl 0x55f5da5e6640 <col:18, col:31> col:32 'ErrorHandler *'
|-CXXMethodDecl 0x55f5da5e67a0 <line:114:3, col:52> col:8 can_live_reconfigure 'bool () const'
| |-Overrides: [ 0x55f5da515410 Element::can_live_reconfigure 'bool () const' ]
| `-CompoundStmt 0x55f5da5e8178 <col:37, col:52>
|   `-ReturnStmt 0x55f5da5e8168 <col:39, col:46>
|     `-CXXBoolLiteralExpr 0x55f5da5e8158 <col:46> 'bool' true
|-CXXMethodDecl 0x55f5da5e68e0 <line:115:3, col:28> col:8 cleanup 'void (Element::CleanupStage)'
| |-Overrides: [ 0x55f5da513428 Element::cleanup 'void (Element::CleanupStage)' ]
| `-ParmVarDecl 0x55f5da5e6850 <col:16> col:28 'Element::CleanupStage'
|-CXXMethodDecl 0x55f5da5e6a28 <line:117:3, col:23> col:8 run_task 'bool (Task *)'
| |-Overrides: [ 0x55f5da5104a8 Element::run_task 'bool (Task *)' ]
| `-ParmVarDecl 0x55f5da5e6998 <col:17, col:22> col:23 'Task *'
|-CXXMethodDecl 0x55f5da5e6b78 <line:118:3, col:19> col:11 pull 'Packet *(int)'
| |-Overrides: [ 0x55f5da510128 Element::pull 'Packet *(int)' ]
| `-ParmVarDecl 0x55f5da5e6ae8 <col:16> col:19 'int'
|-AccessSpecDecl 0x55f5da5e6c20 <line:120:3, col:12> col:3 protected
|-TypedefDecl 0x55f5da5e6c58 <line:123:5, col:22> col:22 referenced ucounter_t 'uint64_t':'unsigned long'
| `-TypedefType 0x55f5da103780 'uint64_t' sugar
|   |-Typedef 0x55f5da012440 'uint64_t'
|   `-TypedefType 0x55f5d9feb5a0 '__uint64_t' sugar
|     |-Typedef 0x55f5d9feb158 '__uint64_t'
|     `-BuiltinType 0x55f5d9fa9470 'unsigned long'
|-TypedefDecl 0x55f5da5e6cc0 <line:124:5, col:21> col:21 referenced counter_t 'int64_t':'long'
| `-TypedefType 0x55f5da103860 'int64_t' sugar
|   |-Typedef 0x55f5da0122a0 'int64_t'
|   `-TypedefType 0x55f5d9feb510 '__int64_t' sugar
|     |-Typedef 0x55f5d9feb0e8 '__int64_t'
|     `-BuiltinType 0x55f5d9fa93d0 'long'
|-CXXMethodDecl 0x55f5da5e6d38 <line:130:5, col:23> col:10 setup_packet 'void ()'
|-FieldDecl 0x55f5da5e6de8 <line:132:5, col:13> col:13 _packet 'Packet *'
|-FieldDecl 0x55f5da5e6e50 <line:133:5, col:9> col:9 _burstsize 'int'
|-FieldDecl 0x55f5da5e6ed0 <line:134:5, col:15> col:15 _limit 'InfiniteSource::counter_t':'long'
|-FieldDecl 0x55f5da5e6f50 <line:135:5, col:16> col:16 _count 'InfiniteSource::ucounter_t':'unsigned long'
|-FieldDecl 0x55f5da5e6fb8 <line:136:5, col:9> col:9 _datasize 'int'
|-FieldDecl 0x55f5da5e7018 <line:137:5, col:10> col:10 _active 'bool'
|-FieldDecl 0x55f5da5e7078 <line:138:5, col:10> col:10 _timestamp 'bool'
|-FieldDecl 0x55f5da5e70d8 <line:139:5, col:10> col:10 _task 'Task'
|-FieldDecl 0x55f5da5e7138 <line:140:5, col:12> col:12 _data 'String'
|-FieldDecl 0x55f5da5e7198 <line:141:5, col:20> col:20 _nonfull_signal 'NotifierSignal'
|-FieldDecl 0x55f5da5e7228 <line:142:5, col:18> col:18 _end_h 'HandlerCall *'
|-EnumDecl 0x55f5da5e7278 <line:144:5, line:147:5> line:144:5
| |-EnumConstantDecl 0x55f5da5e7340 <line:145:2> col:2 h_data 'InfiniteSource::(anonymous enum at ../elements/standard/infinitesource.hh:144:5)'
| |-EnumConstantDecl 0x55f5da5e7390 <col:10> col:10 h_limit 'InfiniteSource::(anonymous enum at ../elements/standard/infinitesource.hh:144:5)'
| |-EnumConstantDecl 0x55f5da5e73e0 <col:19> col:19 h_burst 'InfiniteSource::(anonymous enum at ../elements/standard/infinitesource.hh:144:5)'
| |-EnumConstantDecl 0x55f5da5e7430 <col:28> col:28 h_active 'InfiniteSource::(anonymous enum at ../elements/standard/infinitesource.hh:144:5)'
| |-EnumConstantDecl 0x55f5da5e7480 <col:38> col:38 h_reset 'InfiniteSource::(anonymous enum at ../elements/standard/infinitesource.hh:144:5)'
| |-EnumConstantDecl 0x55f5da5e74d0 <col:47> col:47 h_count 'InfiniteSource::(anonymous enum at ../elements/standard/infinitesource.hh:144:5)'
| |-EnumConstantDecl 0x55f5da5e7520 <col:56> col:56 h_length 'InfiniteSource::(anonymous enum at ../elements/standard/infinitesource.hh:144:5)'
| `-EnumConstantDecl 0x55f5da5e7570 <line:146:2> col:2 h_notifier 'InfiniteSource::(anonymous enum at ../elements/standard/infinitesource.hh:144:5)'
|-CXXMethodDecl 0x55f5da5e77f0 <line:148:5, col:78> col:16 change_param 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x55f5da5e75d0 <col:29, col:42> col:43 'const String &'
| |-ParmVarDecl 0x55f5da5e7648 <col:45, col:53> col:54 'Element *'
| |-ParmVarDecl 0x55f5da5e76c8 <col:56, col:61> col:62 'void *'
| `-ParmVarDecl 0x55f5da5e7740 <col:64, col:77> col:78 'ErrorHandler *'
|-CXXConstructorDecl 0x55f5da5e78d8 <line:102:7> col:7 implicit InfiniteSource 'void (const InfiniteSource &)' inline default_delete noexcept-unevaluated 0x55f5da5e78d8
| `-ParmVarDecl 0x55f5da5e79e8 <col:7> col:7 'const InfiniteSource &'
|-CXXConstructorDecl 0x55f5da5e7a88 <col:7> col:7 implicit InfiniteSource 'void (InfiniteSource &&)' inline default_delete noexcept-unevaluated 0x55f5da5e7a88
| `-ParmVarDecl 0x55f5da5e7b98 <col:7> col:7 'InfiniteSource &&'
|-CXXMethodDecl 0x55f5da5e7c38 <col:7> col:7 implicit operator= 'InfiniteSource &(const InfiniteSource &)' inline default_delete noexcept-unevaluated 0x55f5da5e7c38
| `-ParmVarDecl 0x55f5da5e7d48 <col:7> col:7 'const InfiniteSource &'
|-CXXMethodDecl 0x55f5da5e7db8 <col:7> col:7 implicit operator= 'InfiniteSource &(InfiniteSource &&)' inline default_delete noexcept-unevaluated 0x55f5da5e7db8
| `-ParmVarDecl 0x55f5da5e7ec8 <col:7> col:7 'InfiniteSource &&'
`-CXXDestructorDecl 0x55f5da5e7f50 <col:7> col:7 implicit ~InfiniteSource 'void ()' inline default noexcept-unevaluated 0x55f5da5e7f50
  `-Overrides: [ 0x55f5da50fcc8 Element::~Element 'void () noexcept', 0x55f5da5cf9e0 ActiveNotifier::~ActiveNotifier 'void () noexcept' ]

Layout: <CGRecordLayout
  LLVMType:%class.InfiniteSource = type { %class.Element.base, %class.ActiveNotifier, %class.Packet*, i32, i64, i64, i32, i8, i8, %class.Task, %class.String, %class.NotifierSignal, %class.HandlerCall* }
  NonVirtualBaseLLVMType:%class.InfiniteSource = type { %class.Element.base, %class.ActiveNotifier, %class.Packet*, i32, i64, i64, i32, i8, i8, %class.Task, %class.String, %class.NotifierSignal, %class.HandlerCall* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class ArgContext
         0 |   const class Element * _context
         8 |   class ErrorHandler * _errh
        16 |   const char * _arg_keyword
        24 |   _Bool _read_status
           | [sizeof=32, dsize=25, align=8,
           |  nvsize=25, nvalign=8]

*** Dumping AST Record Layout
         0 | class Args
         0 |   class ArgContext (base)
         0 |     const class Element * _context
         8 |     class ErrorHandler * _errh
        16 |     const char * _arg_keyword
        24 |     _Bool _read_status
        25 |   _Bool _my_conf
        26 |   _Bool _status
        27 |   uint8_t _simple_slotpos
        32 |   Vector<class String> * _conf
        40 |   class Vector<int> _kwpos
        40 |     class vector_memory<class sized_array_memory<4> > vm_
        40 |       vector_memory<class sized_array_memory<4> >::type * l_
        48 |       vector_memory::size_type n_
        52 |       vector_memory::size_type capacity_
        56 |   struct Args::Slot * _slots
        64 |   uint8_t [48] _simple_slotbuf
           | [sizeof=112, dsize=112, align=8,
           |  nvsize=112, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f5da620ad8 prev 0x55f5da4d50d8 <../dummy_inc/click/args.hh:29:1, line:85:1> line:29:7 referenced class ArgContext definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55f5da620bd0 <col:1, col:7> col:7 implicit referenced class ArgContext
|-AccessSpecDecl 0x55f5da620c60 <col:20, col:26> col:20 public
|-CXXConstructorDecl 0x55f5da620d98 <line:33:5, line:38:5> line:33:5 ArgContext 'void (ErrorHandler *)'
| |-ParmVarDecl 0x55f5da620c98 <col:16, col:37> col:30 used errh 'ErrorHandler *' cinit
| | `-ImplicitCastExpr 0x55f5da6221c0 <col:37> 'ErrorHandler *' <NullToPointer>
| |   `-IntegerLiteral 0x55f5da6221a0 <col:37> 'int' 0
| |-CXXCtorInitializer Field 0x55f5da621d38 '_errh' 'ErrorHandler *'
| | `-ImplicitCastExpr 0x55f5da622250 <line:34:17> 'ErrorHandler *' <LValueToRValue>
| |   `-DeclRefExpr 0x55f5da622210 <col:17> 'ErrorHandler *' lvalue ParmVar 0x55f5da620c98 'errh' 'ErrorHandler *'
| |-CXXCtorInitializer Field 0x55f5da621da0 '_arg_keyword' 'const char *'
| | `-ImplicitCastExpr 0x55f5da6222d0 <col:37> 'const char *' <NullToPointer>
| |   `-IntegerLiteral 0x55f5da622290 <col:37> 'int' 0
| |-CXXCtorInitializer Field 0x55f5da621e00 '_read_status' 'bool'
| | `-CXXBoolLiteralExpr 0x55f5da622310 <col:54> 'bool' false
| `-CompoundStmt 0x55f5da622418 <col:61, line:38:5>
|   `-BinaryOperator 0x55f5da6223f8 <line:36:9, col:20> 'const Element *' lvalue '='
|     |-MemberExpr 0x55f5da622390 <col:9> 'const Element *' lvalue ->_context 0x55f5da621cd8
|     | `-CXXThisExpr 0x55f5da622380 <col:9> 'ArgContext *' implicit this
|     `-ImplicitCastExpr 0x55f5da6223e0 <col:20> 'const Element *' <NullToPointer>
|       `-IntegerLiteral 0x55f5da6223c0 <col:20> 'int' 0
|-CXXConstructorDecl 0x55f5da620fa8 <line:44:5, line:46:5> line:44:5 ArgContext 'void (const Element *, ErrorHandler *)'
| |-ParmVarDecl 0x55f5da620e58 <col:16, col:31> col:31 used context 'const Element *'
| |-ParmVarDecl 0x55f5da620ed0 <col:40, col:61> col:54 used errh 'ErrorHandler *' cinit
| | `-ImplicitCastExpr 0x55f5da6221f8 <col:61> 'ErrorHandler *' <NullToPointer>
| |   `-IntegerLiteral 0x55f5da6221d8 <col:61> 'int' 0
| |-CXXCtorInitializer Field 0x55f5da621cd8 '_context' 'const Element *'
| | `-ImplicitCastExpr 0x55f5da622470 <line:45:20> 'const Element *' <LValueToRValue>
| |   `-DeclRefExpr 0x55f5da622430 <col:20> 'const Element *' lvalue ParmVar 0x55f5da620e58 'context' 'const Element *'
| |-CXXCtorInitializer Field 0x55f5da621d38 '_errh' 'ErrorHandler *'
| | `-ImplicitCastExpr 0x55f5da6224f0 <col:36> 'ErrorHandler *' <LValueToRValue>
| |   `-DeclRefExpr 0x55f5da6224b0 <col:36> 'ErrorHandler *' lvalue ParmVar 0x55f5da620ed0 'errh' 'ErrorHandler *'
| |-CXXCtorInitializer Field 0x55f5da621da0 '_arg_keyword' 'const char *'
| | `-ImplicitCastExpr 0x55f5da622570 <col:56> 'const char *' <NullToPointer>
| |   `-IntegerLiteral 0x55f5da622530 <col:56> 'int' 0
| |-CXXCtorInitializer Field 0x55f5da621e00 '_read_status' 'bool'
| | `-CXXBoolLiteralExpr 0x55f5da6225b0 <col:73> 'bool' false
| `-CompoundStmt 0x55f5da622628 <col:80, line:46:5>
|-CXXMethodDecl 0x55f5da6210d8 <line:49:5, line:51:5> line:49:20 context 'const Element *() const'
| `-CompoundStmt 0x55f5da6226a0 <col:36, line:51:5>
|   `-ReturnStmt 0x55f5da622690 <line:50:9, col:16>
|     `-ImplicitCastExpr 0x55f5da622678 <col:16> 'const Element *' <LValueToRValue>
|       `-MemberExpr 0x55f5da622648 <col:16> 'const Element *const' lvalue ->_context 0x55f5da621cd8
|         `-CXXThisExpr 0x55f5da622638 <col:16> 'const ArgContext *' implicit this
|-CXXMethodDecl 0x55f5da6211c8 <line:55:5, line:57:5> line:55:19 errh 'ErrorHandler *() const'
| `-CompoundStmt 0x55f5da622720 <col:32, line:57:5>
|   `-ReturnStmt 0x55f5da622710 <line:56:9, col:16>
|     `-ImplicitCastExpr 0x55f5da6226f8 <col:16> 'ErrorHandler *' <LValueToRValue>
|       `-MemberExpr 0x55f5da6226c8 <col:16> 'ErrorHandler *const' lvalue ->_errh 0x55f5da621d38
|         `-CXXThisExpr 0x55f5da6226b8 <col:16> 'const ArgContext *' implicit this
|-CXXMethodDecl 0x55f5da621288 <line:62:5, col:27> col:12 error_prefix 'String () const'
|-CXXMethodDecl 0x55f5da621410 <line:65:5, col:38> col:10 referenced error 'void (const char *, ...) const'
| `-ParmVarDecl 0x55f5da621340 <col:16, col:28> col:28 fmt 'const char *'
|-CXXMethodDecl 0x55f5da621560 <line:68:5, col:40> col:10 warning 'void (const char *, ...) const'
| `-ParmVarDecl 0x55f5da6214d0 <col:18, col:30> col:30 fmt 'const char *'
|-CXXMethodDecl 0x55f5da6216b0 <line:71:5, col:40> col:10 message 'void (const char *, ...) const'
| `-ParmVarDecl 0x55f5da621620 <col:18, col:30> col:30 fmt 'const char *'
|-CXXMethodDecl 0x55f5da6218b8 <line:73:5, col:58> col:10 xmessage 'void (const String &, const String &) const'
| |-ParmVarDecl 0x55f5da621768 <col:19, col:33> col:33 anno 'const String &'
| `-ParmVarDecl 0x55f5da6217e0 <col:39, col:53> col:53 str 'const String &'
|-CXXMethodDecl 0x55f5da621be8 <line:74:5, col:69> col:10 xmessage 'void (const String &, const char *, __va_list_tag *) const'
| |-ParmVarDecl 0x55f5da621978 <col:19, col:33> col:33 anno 'const String &'
| |-ParmVarDecl 0x55f5da6219f8 <col:39, col:51> col:51 fmt 'const char *'
| `-ParmVarDecl 0x55f5da621ac0 <col:56, col:64> col:64 val '__va_list_tag *':'__va_list_tag *'
|-AccessSpecDecl 0x55f5da621ca0 <line:76:3, col:12> col:3 protected
|-FieldDecl 0x55f5da621cd8 <line:79:5, col:20> col:20 referenced _context 'const Element *'
|-FieldDecl 0x55f5da621d38 <line:81:5, col:19> col:19 referenced _errh 'ErrorHandler *'
|-FieldDecl 0x55f5da621da0 <line:82:5, col:17> col:17 _arg_keyword 'const char *'
|-FieldDecl 0x55f5da621e00 <line:83:5, col:18> col:18 referenced _read_status 'bool' mutable
|-CXXConstructorDecl 0x55f5da621e50 <line:29:7> col:7 implicit constexpr ArgContext 'void (const ArgContext &)' inline default trivial noexcept-unevaluated 0x55f5da621e50
| `-ParmVarDecl 0x55f5da621f68 <col:7> col:7 'const ArgContext &'
|-CXXMethodDecl 0x55f5da622008 <col:7> col:7 implicit operator= 'ArgContext &(const ArgContext &)' inline default trivial noexcept-unevaluated 0x55f5da622008
| `-ParmVarDecl 0x55f5da622118 <col:7> col:7 'const ArgContext &'
`-CXXDestructorDecl 0x55f5da7218c0 <col:7> col:7 implicit ~ArgContext 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.ArgContext = type <{ %class.Element*, %class.ErrorHandler*, i8*, i8, [7 x i8] }>
  NonVirtualBaseLLVMType:%class.ArgContext.base = type <{ %class.Element*, %class.ErrorHandler*, i8*, i8 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct Args::Slot
         0 |   (Slot vtable pointer)
         8 |   struct Args::Slot * _next
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f5da642268 prev 0x55f5da628d48 <../dummy_inc/click/args.hh:826:5, line:833:5> line:826:12 referenced struct Slot definition
|-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55f5da642360 <col:5, col:12> col:12 implicit referenced struct Slot
|-CXXConstructorDecl 0x55f5da642450 <line:827:9, line:828:9> line:827:9 used Slot 'void ()'
| `-CompoundStmt 0x55f5da66e8a0 <col:16, line:828:9>
|-CXXDestructorDecl 0x55f5da642540 <line:829:9, line:830:9> line:829:17 used ~Slot 'void () noexcept' virtual
| `-CompoundStmt 0x55f5da66e8b0 <col:25, line:830:9>
|-CXXMethodDecl 0x55f5da642640 <line:831:9, col:32> col:22 store 'void ()' virtual pure
|-FieldDecl 0x55f5da6426f0 <line:832:9, col:15> col:15 _next 'Args::Slot *'
|-CXXMethodDecl 0x55f5da642798 <line:826:12> col:12 implicit operator= 'Args::Slot &(const Args::Slot &)' inline default noexcept-unevaluated 0x55f5da642798
| `-ParmVarDecl 0x55f5da6428a8 <col:12> col:12 'const Args::Slot &'
`-CXXConstructorDecl 0x55f5da643068 <col:12> col:12 implicit constexpr Slot 'void (const Args::Slot &)' inline default noexcept-unevaluated 0x55f5da643068
  `-ParmVarDecl 0x55f5da643178 <col:12> col:12 'const Args::Slot &'

Layout: <CGRecordLayout
  LLVMType:%"struct.Args::Slot" = type { i32 (...)**, %"struct.Args::Slot"* }
  NonVirtualBaseLLVMType:%"struct.Args::Slot" = type { i32 (...)**, %"struct.Args::Slot"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f5da628b58 <../dummy_inc/click/args.hh:247:1, line:898:1> line:247:7 referenced class Args definition
|-DefinitionData has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared
|-public 'ArgContext'
|-CXXRecordDecl 0x55f5da628cb8 <col:1, col:7> col:7 implicit referenced class Args
|-CXXRecordDecl 0x55f5da628d48 <line:248:5, col:12> col:12 struct Slot
|-AccessSpecDecl 0x55f5da628e00 <line:250:3, col:9> col:3 public
|-CXXConstructorDecl 0x55f5da628f08 <line:254:5, col:32> col:5 Args 'void (ErrorHandler *)'
| `-ParmVarDecl 0x55f5da628e38 <col:10, col:31> col:24 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x55f5da65f068 <col:31> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x55f5da65f048 <col:31> 'int' 0
|-CXXConstructorDecl 0x55f5da629228 <line:259:5, col:60> col:5 Args 'void (const Vector<String> &, ErrorHandler *)'
| |-ParmVarDecl 0x55f5da6290a0 <col:10, col:32> col:32 conf 'const Vector<String> &'
| `-ParmVarDecl 0x55f5da629118 <col:38, col:59> col:52 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x55f5da65f0a0 <col:59> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x55f5da65f080 <col:59> 'int' 0
|-CXXConstructorDecl 0x55f5da629400 <line:265:5, col:56> col:5 Args 'void (const Element *, ErrorHandler *)'
| |-ParmVarDecl 0x55f5da6292f0 <col:10, col:25> col:25 context 'const Element *'
| `-ParmVarDecl 0x55f5da629368 <col:34, col:55> col:48 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x55f5da65f0d8 <col:55> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x55f5da65f0b8 <col:55> 'int' 0
|-CXXConstructorDecl 0x55f5da6297b8 <line:271:5, line:272:32> line:271:5 used Args 'void (const Vector<String> &, const Element *, ErrorHandler *)'
| |-ParmVarDecl 0x55f5da6295a0 <col:10, col:32> col:32 conf 'const Vector<String> &'
| |-ParmVarDecl 0x55f5da629618 <col:38, col:53> col:53 context 'const Element *'
| `-ParmVarDecl 0x55f5da629690 <line:272:10, col:31> col:24 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x55f5da65f110 <col:31> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x55f5da65f0f0 <col:31> 'int' 0
|-CXXConstructorDecl 0x55f5da629978 <line:279:5, col:23> col:5 Args 'void (const Args &)'
| `-ParmVarDecl 0x55f5da6298b8 <col:10, col:22> col:22 x 'const Args &'
|-CXXDestructorDecl 0x55f5da629a70 <line:281:5, col:11> col:5 used ~Args 'void () noexcept'
|-CXXMethodDecl 0x55f5da629c58 <line:285:5, col:34> col:11 operator= 'Args &(const Args &)'
| `-ParmVarDecl 0x55f5da629b60 <col:21, col:33> col:33 x 'const Args &'
|-CXXMethodDecl 0x55f5da629d48 <line:289:5, line:291:5> line:289:10 empty 'bool () const'
| `-CompoundStmt 0x55f5da65f4c0 <col:24, line:291:5>
|   `-ReturnStmt 0x55f5da65f4b0 <line:290:9, col:79>
|     `-BinaryOperator 0x55f5da65f490 <col:16, col:79> 'bool' '&&'
|       |-BinaryOperator 0x55f5da65f368 <col:16, col:47> 'bool' '&&'
|       | |-ParenExpr 0x55f5da65f2c0 <col:16, col:41> 'bool'
|       | | `-BinaryOperator 0x55f5da65f2a0 <col:17, col:40> 'bool' '||'
|       | |   |-UnaryOperator 0x55f5da65f198 <col:17, col:18> 'bool' prefix '!' cannot overflow
|       | |   | `-ImplicitCastExpr 0x55f5da65f180 <col:18> 'bool' <PointerToBoolean>
|       | |   |   `-ImplicitCastExpr 0x55f5da65f168 <col:18> 'Vector<String> *' <LValueToRValue>
|       | |   |     `-MemberExpr 0x55f5da65f138 <col:18> 'Vector<String> *const' lvalue ->_conf 0x55f5da644090
|       | |   |       `-CXXThisExpr 0x55f5da65f128 <col:18> 'const Args *' implicit this
|       | |   `-UnaryOperator 0x55f5da65f288 <col:27, col:40> 'bool' prefix '!' cannot overflow
|       | |     `-ImplicitCastExpr 0x55f5da65f270 <col:28, col:40> 'bool' <IntegralToBoolean>
|       | |       `-CXXMemberCallExpr 0x55f5da65f238 <col:28, col:40> 'Vector::size_type':'int'
|       | |         `-MemberExpr 0x55f5da65f208 <col:28, col:35> '<bound member function type>' ->size 0x55f5da612298
|       | |           `-ImplicitCastExpr 0x55f5da65f258 <col:28> 'const Vector<String> *' <NoOp>
|       | |             `-ImplicitCastExpr 0x55f5da65f1f0 <col:28> 'Vector<String> *' <LValueToRValue>
|       | |               `-MemberExpr 0x55f5da65f1c0 <col:28> 'Vector<String> *const' lvalue ->_conf 0x55f5da644090
|       | |                 `-CXXThisExpr 0x55f5da65f1b0 <col:28> 'const Args *' implicit this
|       | `-UnaryOperator 0x55f5da65f350 <col:46, col:47> 'bool' prefix '!' cannot overflow
|       |   `-ImplicitCastExpr 0x55f5da65f338 <col:47> 'bool' <PointerToBoolean>
|       |     `-ImplicitCastExpr 0x55f5da65f320 <col:47> 'Args::Slot *' <LValueToRValue>
|       |       `-MemberExpr 0x55f5da65f2f0 <col:47> 'Args::Slot *const' lvalue ->_slots 0x55f5da65dbf0
|       |         `-CXXThisExpr 0x55f5da65f2e0 <col:47> 'const Args *' implicit this
|       `-BinaryOperator 0x55f5da65f470 <col:57, col:79> 'bool' '=='
|         |-ImplicitCastExpr 0x55f5da65f458 <col:57, col:74> 'int' <IntegralCast>
|         | `-ImplicitCastExpr 0x55f5da65f440 <col:57, col:74> 'uint8_t':'unsigned char' <LValueToRValue>
|         |   `-ArraySubscriptExpr 0x55f5da65f400 <col:57, col:74> 'const uint8_t':'const unsigned char' lvalue
|         |     |-ImplicitCastExpr 0x55f5da65f3e8 <col:57> 'const uint8_t *' <ArrayToPointerDecay>
|         |     | `-MemberExpr 0x55f5da65f398 <col:57> 'uint8_t const[48]' lvalue ->_simple_slotbuf 0x55f5da65dca0
|         |     |   `-CXXThisExpr 0x55f5da65f388 <col:57> 'const Args *' implicit this
|         |     `-IntegerLiteral 0x55f5da65f3c8 <col:73> 'int' 0
|         `-IntegerLiteral 0x55f5da65f420 <col:79> 'int' 0
|-CXXMethodDecl 0x55f5da629e08 <line:294:5, line:296:5> line:294:10 results_empty 'bool () const'
| `-CompoundStmt 0x55f5da65f698 <col:32, line:296:5>
|   `-ReturnStmt 0x55f5da65f688 <line:295:9, col:49>
|     `-BinaryOperator 0x55f5da65f668 <col:16, col:49> 'bool' '&&'
|       |-UnaryOperator 0x55f5da65f548 <col:16, col:17> 'bool' prefix '!' cannot overflow
|       | `-ImplicitCastExpr 0x55f5da65f530 <col:17> 'bool' <PointerToBoolean>
|       |   `-ImplicitCastExpr 0x55f5da65f518 <col:17> 'Args::Slot *' <LValueToRValue>
|       |     `-MemberExpr 0x55f5da65f4e8 <col:17> 'Args::Slot *const' lvalue ->_slots 0x55f5da65dbf0
|       |       `-CXXThisExpr 0x55f5da65f4d8 <col:17> 'const Args *' implicit this
|       `-BinaryOperator 0x55f5da65f648 <col:27, col:49> 'bool' '=='
|         |-ImplicitCastExpr 0x55f5da65f630 <col:27, col:44> 'int' <IntegralCast>
|         | `-ImplicitCastExpr 0x55f5da65f618 <col:27, col:44> 'uint8_t':'unsigned char' <LValueToRValue>
|         |   `-ArraySubscriptExpr 0x55f5da65f5d8 <col:27, col:44> 'const uint8_t':'const unsigned char' lvalue
|         |     |-ImplicitCastExpr 0x55f5da65f5c0 <col:27> 'const uint8_t *' <ArrayToPointerDecay>
|         |     | `-MemberExpr 0x55f5da65f570 <col:27> 'uint8_t const[48]' lvalue ->_simple_slotbuf 0x55f5da65dca0
|         |     |   `-CXXThisExpr 0x55f5da65f560 <col:27> 'const Args *' implicit this
|         |     `-IntegerLiteral 0x55f5da65f5a0 <col:43> 'int' 0
|         `-IntegerLiteral 0x55f5da65f5f8 <col:49> 'int' 0
|-CXXMethodDecl 0x55f5da629ef8 <line:301:5, line:306:5> line:301:11 clear 'Args &()'
| `-CompoundStmt 0x55f5da65f8a8 <col:19, line:306:5>
|   |-IfStmt 0x55f5da65f7c8 <line:302:9, line:303:26>
|   | |-ImplicitCastExpr 0x55f5da65f708 <line:302:13> 'bool' <PointerToBoolean>
|   | | `-ImplicitCastExpr 0x55f5da65f6f0 <col:13> 'Vector<String> *' <LValueToRValue>
|   | |   `-MemberExpr 0x55f5da65f6c0 <col:13> 'Vector<String> *' lvalue ->_conf 0x55f5da644090
|   | |     `-CXXThisExpr 0x55f5da65f6b0 <col:13> 'Args *' implicit this
|   | `-CXXMemberCallExpr 0x55f5da65f7a8 <line:303:13, col:26> 'void'
|   |   `-MemberExpr 0x55f5da65f778 <col:13, col:20> '<bound member function type>' ->clear 0x55f5da6154b8
|   |     `-ImplicitCastExpr 0x55f5da65f760 <col:13> 'Vector<String> *' <LValueToRValue>
|   |       `-MemberExpr 0x55f5da65f730 <col:13> 'Vector<String> *' lvalue ->_conf 0x55f5da644090
|   |         `-CXXThisExpr 0x55f5da65f720 <col:13> 'Args *' implicit this
|   |-CXXMemberCallExpr 0x55f5da65f850 <line:304:9, col:22> 'void'
|   | `-MemberExpr 0x55f5da65f820 <col:9, col:16> '<bound member function type>' .clear 0x55f5da65d778
|   |   `-MemberExpr 0x55f5da65f7f0 <col:9> 'Vector<int>':'Vector<int>' lvalue ->_kwpos 0x55f5da65db90
|   |     `-CXXThisExpr 0x55f5da65f7e0 <col:9> 'Args *' implicit this
|   `-ReturnStmt 0x55f5da65f898 <line:305:9, col:17>
|     `-UnaryOperator 0x55f5da65f880 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55f5da65f870 <col:17> 'Args *' this
|-CXXMethodDecl 0x55f5da62a178 <line:313:5, col:36> col:11 bind 'Args &(Vector<String> &)'
| `-ParmVarDecl 0x55f5da62a080 <col:16, col:32> col:32 conf 'Vector<String> &'
|-CXXMethodDecl 0x55f5da62a2f8 <line:317:5, col:38> col:11 push_back 'Args &(const String &)'
| `-ParmVarDecl 0x55f5da62a230 <col:21, col:35> col:35 arg 'const String &'
|-FunctionTemplateDecl 0x55f5da62a678 <line:321:5, line:327:5> line:321:35 push_back
| |-TemplateTypeParmDecl 0x55f5da62a3a0 <col:14, col:23> col:23 referenced typename depth 0 index 0 Iter
| `-CXXMethodDecl 0x55f5da62a5d8 <col:29, line:327:5> line:321:35 push_back 'Args &(Iter, Iter)'
|   |-ParmVarDecl 0x55f5da62a448 <col:45, col:50> col:50 referenced begin 'Iter'
|   |-ParmVarDecl 0x55f5da62a4c0 <col:57, col:62> col:62 referenced end 'Iter'
|   `-CompoundStmt 0x55f5da65fbd0 <col:67, line:327:5>
|     |-WhileStmt 0x55f5da65fb80 <line:322:9, line:325:9>
|     | |-CXXOperatorCallExpr 0x55f5da65f998 <line:322:16, col:25> '<dependent type>'
|     | | |-UnresolvedLookupExpr 0x55f5da65f910 <col:22> '<overloaded function type>' lvalue (ADL) = 'operator!=' 0x55f5da5db320 0x55f5da4cd5a8 0x55f5da316b88 0x55f5da316860 0x55f5da308040 0x55f5da307cf0 0x55f5da3075e0 0x55f5da2d9f50 0x55f5da266410
|     | | |-DeclRefExpr 0x55f5da65f8d0 <col:16> 'Iter' lvalue ParmVar 0x55f5da62a448 'begin' 'Iter'
|     | | `-DeclRefExpr 0x55f5da65f8f0 <col:25> 'Iter' lvalue ParmVar 0x55f5da62a4c0 'end' 'Iter'
|     | `-CompoundStmt 0x55f5da65fb60 <col:30, line:325:9>
|     |   |-CallExpr 0x55f5da65fb00 <line:323:13, col:29> '<dependent type>'
|     |   | |-UnresolvedMemberExpr 0x55f5da65f9e0 <col:13> '<bound member function type>' lvalue
|     |   | `-CXXOperatorCallExpr 0x55f5da65fad0 <col:23, col:24> '<dependent type>'
|     |   |   |-UnresolvedLookupExpr 0x55f5da65fa60 <col:23> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55f5da4d2728 0x55f5da4d2348 0x55f5da4d1f78 0x55f5da4d1b98 0x55f5da4d17b8 0x55f5da4d13e8
|     |   |   `-DeclRefExpr 0x55f5da65fa40 <col:24> 'Iter' lvalue ParmVar 0x55f5da62a448 'begin' 'Iter'
|     |   `-UnaryOperator 0x55f5da65fb48 <line:324:13, col:15> '<dependent type>' prefix '++' cannot overflow
|     |     `-DeclRefExpr 0x55f5da65fb28 <col:15> 'Iter' lvalue ParmVar 0x55f5da62a448 'begin' 'Iter'
|     `-ReturnStmt 0x55f5da65fbc0 <line:326:9, col:17>
|       `-UnaryOperator 0x55f5da65fba8 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55f5da65fb98 <col:17> 'Args *' this
|-CXXMethodDecl 0x55f5da62a780 <line:331:5, col:44> col:11 push_back_words 'Args &(const String &)'
| `-ParmVarDecl 0x55f5da62a6f0 <col:27, col:41> col:41 str 'const String &'
|-CXXMethodDecl 0x55f5da62a8c8 <line:335:5, col:43> col:11 push_back_args 'Args &(const String &)'
| `-ParmVarDecl 0x55f5da62a838 <col:26, col:40> col:40 str 'const String &'
|-CXXMethodDecl 0x55f5da62a990 <line:350:5, line:353:5> line:350:11 reset 'Args &()'
| `-CompoundStmt 0x55f5da65fcb0 <col:19, line:353:5>
|   |-CXXMemberCallExpr 0x55f5da65fc50 <line:351:9, col:21> 'void'
|   | |-MemberExpr 0x55f5da65fc00 <col:9> '<bound member function type>' ->reset_from 0x55f5da65e018
|   | | `-CXXThisExpr 0x55f5da65fbf0 <col:9> 'Args *' implicit this
|   | `-IntegerLiteral 0x55f5da65fc30 <col:20> 'int' 0
|   `-ReturnStmt 0x55f5da65fca0 <line:352:9, col:17>
|     `-UnaryOperator 0x55f5da65fc88 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55f5da65fc78 <col:17> 'Args *' this
|-VarDecl 0x55f5da62aa48 <line:356:5, col:38> col:26 referenced mandatory 'const int' static constexpr cinit
| `-IntegerLiteral 0x55f5da62aab0 <col:38> 'int' 1
|-VarDecl 0x55f5da62ab40 <line:357:5, col:39> col:26 referenced positional 'const int' static constexpr cinit
| `-IntegerLiteral 0x55f5da62aba8 <col:39> 'int' 2
|-VarDecl 0x55f5da62ac38 <line:358:5, col:39> col:26 deprecated 'const int' static constexpr cinit
| `-IntegerLiteral 0x55f5da62aca0 <col:39> 'int' 4
|-VarDecl 0x55f5da62ad30 <line:359:5, col:39> col:26 referenced firstmatch 'const int' static constexpr cinit
| `-IntegerLiteral 0x55f5da62ad98 <col:39> 'int' 8
|-FunctionTemplateDecl 0x55f5da62b118 <line:368:5, line:371:5> line:369:11 read
| |-TemplateTypeParmDecl 0x55f5da62ae10 <line:368:15, col:24> col:24 referenced typename depth 0 index 0 T
| |-CXXMethodDecl 0x55f5da62b078 <line:369:5, line:371:5> line:369:11 read 'Args &(const char *, T &)'
| | |-ParmVarDecl 0x55f5da62aec0 <col:16, col:28> col:28 referenced keyword 'const char *'
| | |-ParmVarDecl 0x55f5da62af68 <col:37, col:40> col:40 referenced x 'T &'
| | `-CompoundStmt 0x55f5da65fe08 <col:43, line:371:5>
| |   `-ReturnStmt 0x55f5da65fdf8 <line:370:9, col:34>
| |     `-CallExpr 0x55f5da65fdc0 <col:16, col:34> '<dependent type>'
| |       |-UnresolvedMemberExpr 0x55f5da65fce0 <col:16> '<bound member function type>' lvalue
| |       |-DeclRefExpr 0x55f5da65fd60 <col:21> 'const char *' lvalue ParmVar 0x55f5da62aec0 'keyword' 'const char *'
| |       |-IntegerLiteral 0x55f5da65fd80 <col:30> 'int' 0
| |       `-DeclRefExpr 0x55f5da65fda0 <col:33> 'T' lvalue ParmVar 0x55f5da62af68 'x' 'T &'
| |-CXXMethodDecl 0x55f5da722f88 <line:369:5, line:371:5> line:369:11 used read 'Args &(const char *, bool &)'
| | |-TemplateArgument type 'bool'
| | |-ParmVarDecl 0x55f5da722de0 <col:16, col:28> col:28 keyword 'const char *'
| | `-ParmVarDecl 0x55f5da722eb8 <col:37, col:40> col:40 x 'bool &'
| `-CXXMethodDecl 0x55f5da7233c8 <col:5, line:371:5> line:369:11 used read 'Args &(const char *, int &)'
|   |-TemplateArgument type 'int'
|   |-ParmVarDecl 0x55f5da723220 <col:16, col:28> col:28 keyword 'const char *'
|   `-ParmVarDecl 0x55f5da7232f8 <col:37, col:40> col:40 x 'int &'
|-FunctionTemplateDecl 0x55f5da62b448 <line:372:5, line:375:5> line:373:11 read_m
| |-TemplateTypeParmDecl 0x55f5da62b180 <line:372:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x55f5da62b3a8 <line:373:5, line:375:5> line:373:11 read_m 'Args &(const char *, T &)'
|   |-ParmVarDecl 0x55f5da62b230 <col:18, col:30> col:30 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55f5da62b2d8 <col:39, col:42> col:42 referenced x 'T &'
|   `-CompoundStmt 0x55f5da65ff58 <col:45, line:375:5>
|     `-ReturnStmt 0x55f5da65ff48 <line:374:9, col:42>
|       `-CallExpr 0x55f5da65ff10 <col:16, col:42> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55f5da65fe30 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55f5da65feb0 <col:21> 'const char *' lvalue ParmVar 0x55f5da62b230 'keyword' 'const char *'
|         |-DeclRefExpr 0x55f5da65fed0 <col:30> 'const int' lvalue Var 0x55f5da62aa48 'mandatory' 'const int'
|         `-DeclRefExpr 0x55f5da65fef0 <col:41> 'T' lvalue ParmVar 0x55f5da62b2d8 'x' 'T &'
|-FunctionTemplateDecl 0x55f5da62b778 <line:376:5, line:379:5> line:377:11 read_p
| |-TemplateTypeParmDecl 0x55f5da62b4b0 <line:376:15, col:24> col:24 referenced typename depth 0 index 0 T
| |-CXXMethodDecl 0x55f5da62b6d8 <line:377:5, line:379:5> line:377:11 read_p 'Args &(const char *, T &)'
| | |-ParmVarDecl 0x55f5da62b560 <col:18, col:30> col:30 referenced keyword 'const char *'
| | |-ParmVarDecl 0x55f5da62b608 <col:39, col:42> col:42 referenced x 'T &'
| | `-CompoundStmt 0x55f5da6600a8 <col:45, line:379:5>
| |   `-ReturnStmt 0x55f5da660098 <line:378:9, col:43>
| |     `-CallExpr 0x55f5da660060 <col:16, col:43> '<dependent type>'
| |       |-UnresolvedMemberExpr 0x55f5da65ff80 <col:16> '<bound member function type>' lvalue
| |       |-DeclRefExpr 0x55f5da660000 <col:21> 'const char *' lvalue ParmVar 0x55f5da62b560 'keyword' 'const char *'
| |       |-DeclRefExpr 0x55f5da660020 <col:30> 'const int' lvalue Var 0x55f5da62ab40 'positional' 'const int'
| |       `-DeclRefExpr 0x55f5da660040 <col:42> 'T' lvalue ParmVar 0x55f5da62b608 'x' 'T &'
| |-CXXMethodDecl 0x55f5da721da8 <line:377:5, line:379:5> line:377:11 used read_p 'Args &(const char *, String &)'
| | |-TemplateArgument type 'String'
| | |-ParmVarDecl 0x55f5da721bc0 <col:18, col:30> col:30 keyword 'const char *'
| | `-ParmVarDecl 0x55f5da721c98 <col:39, col:42> col:42 x 'String &'
| |-CXXMethodDecl 0x55f5da722208 <col:5, line:379:5> line:377:11 used read_p 'Args &(const char *, long &)'
| | |-TemplateArgument type 'long'
| | |-ParmVarDecl 0x55f5da722028 <col:18, col:30> col:30 keyword 'const char *'
| | `-ParmVarDecl 0x55f5da7220f8 <col:39, col:42> col:42 x 'long &'
| |-CXXMethodDecl 0x55f5da722668 <col:5, line:379:5> line:377:11 used read_p 'Args &(const char *, int &)'
| | |-TemplateArgument type 'int'
| | |-ParmVarDecl 0x55f5da722488 <col:18, col:30> col:30 keyword 'const char *'
| | `-ParmVarDecl 0x55f5da722558 <col:39, col:42> col:42 x 'int &'
| `-CXXMethodDecl 0x55f5da722ac8 <col:5, line:379:5> line:377:11 used read_p 'Args &(const char *, bool &)'
|   |-TemplateArgument type 'bool'
|   |-ParmVarDecl 0x55f5da7228e0 <col:18, col:30> col:30 keyword 'const char *'
|   `-ParmVarDecl 0x55f5da7229b8 <col:39, col:42> col:42 x 'bool &'
|-FunctionTemplateDecl 0x55f5da62baa8 <line:380:5, line:383:5> line:381:11 read_mp
| |-TemplateTypeParmDecl 0x55f5da62b7e0 <line:380:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x55f5da62ba08 <line:381:5, line:383:5> line:381:11 read_mp 'Args &(const char *, T &)'
|   |-ParmVarDecl 0x55f5da62b890 <col:19, col:31> col:31 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55f5da62b938 <col:40, col:43> col:43 referenced x 'T &'
|   `-CompoundStmt 0x55f5da6602a8 <col:46, line:383:5>
|     `-ReturnStmt 0x55f5da660298 <line:382:9, col:55>
|       `-CallExpr 0x55f5da660260 <col:16, col:55> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55f5da6600d0 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55f5da660150 <col:21> 'const char *' lvalue ParmVar 0x55f5da62b890 'keyword' 'const char *'
|         |-BinaryOperator 0x55f5da660220 <col:30, col:42> 'int' '|'
|         | |-ImplicitCastExpr 0x55f5da6601d0 <col:30> 'int' <LValueToRValue>
|         | | `-DeclRefExpr 0x55f5da6601b0 <col:30> 'const int' lvalue Var 0x55f5da62aa48 'mandatory' 'const int' non_odr_use_constant
|         | `-ImplicitCastExpr 0x55f5da660208 <col:42> 'int' <LValueToRValue>
|         |   `-DeclRefExpr 0x55f5da6601e8 <col:42> 'const int' lvalue Var 0x55f5da62ab40 'positional' 'const int' non_odr_use_constant
|         `-DeclRefExpr 0x55f5da660240 <col:54> 'T' lvalue ParmVar 0x55f5da62b938 'x' 'T &'
|-FunctionTemplateDecl 0x55f5da62bea8 <line:384:5, line:388:5> line:385:11 read
| |-TemplateTypeParmDecl 0x55f5da62bb10 <line:384:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x55f5da62be08 <line:385:5, line:388:5> line:385:11 read 'Args &(const char *, int, T &)'
|   |-ParmVarDecl 0x55f5da62bbc0 <col:16, col:28> col:28 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55f5da62bc40 <col:37, col:41> col:41 referenced flags 'int'
|   |-ParmVarDecl 0x55f5da62bce8 <col:48, col:51> col:51 referenced x 'T &'
|   `-CompoundStmt 0x55f5da6603e8 <col:54, line:388:5>
|     |-CallExpr 0x55f5da660370 <line:386:9, col:47> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x55f5da6602c0 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read' empty
|     | |-CXXThisExpr 0x55f5da660300 <col:24> 'Args *' this
|     | |-DeclRefExpr 0x55f5da660310 <col:30> 'const char *' lvalue ParmVar 0x55f5da62bbc0 'keyword' 'const char *'
|     | |-DeclRefExpr 0x55f5da660330 <col:39> 'int' lvalue ParmVar 0x55f5da62bc40 'flags' 'int'
|     | `-DeclRefExpr 0x55f5da660350 <col:46> 'T' lvalue ParmVar 0x55f5da62bce8 'x' 'T &'
|     `-ReturnStmt 0x55f5da6603d8 <line:387:9, col:17>
|       `-UnaryOperator 0x55f5da6603c0 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55f5da6603b0 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55f5da62c358 <line:400:5, line:403:5> line:401:11 read_or_set
| |-TemplateTypeParmDecl 0x55f5da62bf18 <line:400:15, col:24> col:24 referenced typename depth 0 index 0 T
| |-TemplateTypeParmDecl 0x55f5da62bf98 <col:27, col:36> col:36 referenced typename depth 0 index 1 V
| `-CXXMethodDecl 0x55f5da62c2b8 <line:401:5, line:403:5> line:401:11 read_or_set 'Args &(const char *, T &, const V &)'
|   |-ParmVarDecl 0x55f5da62c058 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55f5da62c0f8 <col:44, col:47> col:47 referenced x 'T &'
|   |-ParmVarDecl 0x55f5da62c198 <col:50, col:59> col:59 referenced default_value 'const V &'
|   `-CompoundStmt 0x55f5da660558 <col:74, line:403:5>
|     `-ReturnStmt 0x55f5da660548 <line:402:9, col:56>
|       `-CallExpr 0x55f5da660508 <col:16, col:56> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55f5da660418 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55f5da660488 <col:28> 'const char *' lvalue ParmVar 0x55f5da62c058 'keyword' 'const char *'
|         |-IntegerLiteral 0x55f5da6604a8 <col:37> 'int' 0
|         |-DeclRefExpr 0x55f5da6604c8 <col:40> 'T' lvalue ParmVar 0x55f5da62c0f8 'x' 'T &'
|         `-DeclRefExpr 0x55f5da6604e8 <col:43> 'const V' lvalue ParmVar 0x55f5da62c198 'default_value' 'const V &'
|-FunctionTemplateDecl 0x55f5da62c7c8 <line:404:5, line:407:5> line:405:11 read_or_set_p
| |-TemplateTypeParmDecl 0x55f5da62c3c8 <line:404:15, col:24> col:24 referenced typename depth 0 index 0 T
| |-TemplateTypeParmDecl 0x55f5da62c448 <col:27, col:36> col:36 referenced typename depth 0 index 1 V
| `-CXXMethodDecl 0x55f5da62c728 <line:405:5, line:407:5> line:405:11 read_or_set_p 'Args &(const char *, T &, const V &)'
|   |-ParmVarDecl 0x55f5da62c508 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55f5da62c5a8 <col:46, col:49> col:49 referenced x 'T &'
|   |-ParmVarDecl 0x55f5da62c648 <col:52, col:61> col:61 referenced default_value 'const V &'
|   `-CompoundStmt 0x55f5da6606c0 <col:76, line:407:5>
|     `-ReturnStmt 0x55f5da6606b0 <line:406:9, col:65>
|       `-CallExpr 0x55f5da660670 <col:16, col:65> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55f5da660580 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55f5da6605f0 <col:28> 'const char *' lvalue ParmVar 0x55f5da62c508 'keyword' 'const char *'
|         |-DeclRefExpr 0x55f5da660610 <col:37> 'const int' lvalue Var 0x55f5da62ab40 'positional' 'const int'
|         |-DeclRefExpr 0x55f5da660630 <col:49> 'T' lvalue ParmVar 0x55f5da62c5a8 'x' 'T &'
|         `-DeclRefExpr 0x55f5da660650 <col:52> 'const V' lvalue ParmVar 0x55f5da62c648 'default_value' 'const V &'
|-FunctionTemplateDecl 0x55f5da62cd18 <line:408:5, line:412:5> line:409:11 read_or_set
| |-TemplateTypeParmDecl 0x55f5da62c838 <line:408:15, col:24> col:24 referenced typename depth 0 index 0 T
| |-TemplateTypeParmDecl 0x55f5da62c8b8 <col:27, col:36> col:36 referenced typename depth 0 index 1 V
| `-CXXMethodDecl 0x55f5da62cc78 <line:409:5, line:412:5> line:409:11 read_or_set 'Args &(const char *, int, T &, const V &)'
|   |-ParmVarDecl 0x55f5da62c978 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55f5da62c9f8 <col:44, col:48> col:48 referenced flags 'int'
|   |-ParmVarDecl 0x55f5da62ca98 <col:55, col:58> col:58 referenced x 'T &'
|   |-ParmVarDecl 0x55f5da62cb38 <col:61, col:70> col:70 referenced default_value 'const V &'
|   `-CompoundStmt 0x55f5da660828 <col:85, line:412:5>
|     |-CallExpr 0x55f5da6607a8 <line:410:9, col:69> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x55f5da6606d8 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read_or_set' empty
|     | |-CXXThisExpr 0x55f5da660718 <col:31> 'Args *' this
|     | |-DeclRefExpr 0x55f5da660728 <col:37> 'const char *' lvalue ParmVar 0x55f5da62c978 'keyword' 'const char *'
|     | |-DeclRefExpr 0x55f5da660748 <col:46> 'int' lvalue ParmVar 0x55f5da62c9f8 'flags' 'int'
|     | |-DeclRefExpr 0x55f5da660768 <col:53> 'T' lvalue ParmVar 0x55f5da62ca98 'x' 'T &'
|     | `-DeclRefExpr 0x55f5da660788 <col:56> 'const V' lvalue ParmVar 0x55f5da62cb38 'default_value' 'const V &'
|     `-ReturnStmt 0x55f5da660818 <line:411:9, col:17>
|       `-UnaryOperator 0x55f5da660800 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55f5da6607f0 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55f5da630848 <line:422:5, line:425:5> line:423:11 read
| |-TemplateTypeParmDecl 0x55f5da62cd90 <line:422:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55f5da62ce08 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| |-CXXMethodDecl 0x55f5da6307a8 <line:423:5, line:425:5> line:423:11 read 'Args &(const char *, P, T &)'
| | |-ParmVarDecl 0x55f5da630568 <col:16, col:28> col:28 referenced keyword 'const char *'
| | |-ParmVarDecl 0x55f5da6305e0 <col:37, col:39> col:39 referenced parser 'P'
| | |-ParmVarDecl 0x55f5da630688 <col:47, col:50> col:50 referenced x 'T &'
| | `-CompoundStmt 0x55f5da6609a8 <col:53, line:425:5>
| |   `-ReturnStmt 0x55f5da660998 <line:424:9, col:42>
| |     `-CallExpr 0x55f5da660958 <col:16, col:42> '<dependent type>'
| |       |-UnresolvedMemberExpr 0x55f5da660858 <col:16> '<bound member function type>' lvalue
| |       |-DeclRefExpr 0x55f5da6608d8 <col:21> 'const char *' lvalue ParmVar 0x55f5da630568 'keyword' 'const char *'
| |       |-IntegerLiteral 0x55f5da6608f8 <col:30> 'int' 0
| |       |-DeclRefExpr 0x55f5da660918 <col:33> 'P' lvalue ParmVar 0x55f5da6305e0 'parser' 'P'
| |       `-DeclRefExpr 0x55f5da660938 <col:41> 'T' lvalue ParmVar 0x55f5da630688 'x' 'T &'
| `-CXXMethodDecl 0x55f5da7241d8 <line:423:5, line:425:5> line:423:11 used read 'Args &(const char *, HandlerCallArg, HandlerCall &)'
|   |-TemplateArgument type 'HandlerCallArg'
|   |-TemplateArgument type 'HandlerCall'
|   |-ParmVarDecl 0x55f5da723f48 <col:16, col:28> col:28 keyword 'const char *'
|   |-ParmVarDecl 0x55f5da723fe8 <col:37, col:39> col:39 parser 'HandlerCallArg':'HandlerCallArg'
|   `-ParmVarDecl 0x55f5da7240b8 <col:47, col:50> col:50 x 'HandlerCall &'
|-FunctionTemplateDecl 0x55f5da630c98 <line:426:5, line:429:5> line:427:11 read_m
| |-TemplateTypeParmDecl 0x55f5da6308b8 <line:426:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55f5da630938 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55f5da630bf8 <line:427:5, line:429:5> line:427:11 read_m 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x55f5da6309f8 <col:18, col:30> col:30 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55f5da630a70 <col:39, col:41> col:41 referenced parser 'P'
|   |-ParmVarDecl 0x55f5da630b18 <col:49, col:52> col:52 referenced x 'T &'
|   `-CompoundStmt 0x55f5da660b20 <col:55, line:429:5>
|     `-ReturnStmt 0x55f5da660b10 <line:428:9, col:50>
|       `-CallExpr 0x55f5da660ad0 <col:16, col:50> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55f5da6609d0 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55f5da660a50 <col:21> 'const char *' lvalue ParmVar 0x55f5da6309f8 'keyword' 'const char *'
|         |-DeclRefExpr 0x55f5da660a70 <col:30> 'const int' lvalue Var 0x55f5da62aa48 'mandatory' 'const int'
|         |-DeclRefExpr 0x55f5da660a90 <col:41> 'P' lvalue ParmVar 0x55f5da630a70 'parser' 'P'
|         `-DeclRefExpr 0x55f5da660ab0 <col:49> 'T' lvalue ParmVar 0x55f5da630b18 'x' 'T &'
|-FunctionTemplateDecl 0x55f5da6310e8 <line:430:5, line:433:5> line:431:11 read_p
| |-TemplateTypeParmDecl 0x55f5da630d08 <line:430:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55f5da630d88 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55f5da631048 <line:431:5, line:433:5> line:431:11 read_p 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x55f5da630e48 <col:18, col:30> col:30 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55f5da630ec0 <col:39, col:41> col:41 referenced parser 'P'
|   |-ParmVarDecl 0x55f5da630f68 <col:49, col:52> col:52 referenced x 'T &'
|   `-CompoundStmt 0x55f5da660c98 <col:55, line:433:5>
|     `-ReturnStmt 0x55f5da660c88 <line:432:9, col:51>
|       `-CallExpr 0x55f5da660c48 <col:16, col:51> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55f5da660b48 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55f5da660bc8 <col:21> 'const char *' lvalue ParmVar 0x55f5da630e48 'keyword' 'const char *'
|         |-DeclRefExpr 0x55f5da660be8 <col:30> 'const int' lvalue Var 0x55f5da62ab40 'positional' 'const int'
|         |-DeclRefExpr 0x55f5da660c08 <col:42> 'P' lvalue ParmVar 0x55f5da630ec0 'parser' 'P'
|         `-DeclRefExpr 0x55f5da660c28 <col:50> 'T' lvalue ParmVar 0x55f5da630f68 'x' 'T &'
|-FunctionTemplateDecl 0x55f5da631538 <line:434:5, line:437:5> line:435:11 read_mp
| |-TemplateTypeParmDecl 0x55f5da631158 <line:434:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55f5da6311d8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55f5da631498 <line:435:5, line:437:5> line:435:11 read_mp 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x55f5da631298 <col:19, col:31> col:31 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55f5da631310 <col:40, col:42> col:42 referenced parser 'P'
|   |-ParmVarDecl 0x55f5da6313b8 <col:50, col:53> col:53 referenced x 'T &'
|   `-CompoundStmt 0x55f5da660ec0 <col:56, line:437:5>
|     `-ReturnStmt 0x55f5da660eb0 <line:436:9, col:63>
|       `-CallExpr 0x55f5da660e70 <col:16, col:63> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55f5da660cc0 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55f5da660d40 <col:21> 'const char *' lvalue ParmVar 0x55f5da631298 'keyword' 'const char *'
|         |-BinaryOperator 0x55f5da660e10 <col:30, col:42> 'int' '|'
|         | |-ImplicitCastExpr 0x55f5da660dc0 <col:30> 'int' <LValueToRValue>
|         | | `-DeclRefExpr 0x55f5da660da0 <col:30> 'const int' lvalue Var 0x55f5da62aa48 'mandatory' 'const int' non_odr_use_constant
|         | `-ImplicitCastExpr 0x55f5da660df8 <col:42> 'int' <LValueToRValue>
|         |   `-DeclRefExpr 0x55f5da660dd8 <col:42> 'const int' lvalue Var 0x55f5da62ab40 'positional' 'const int' non_odr_use_constant
|         |-DeclRefExpr 0x55f5da660e30 <col:54> 'P' lvalue ParmVar 0x55f5da631310 'parser' 'P'
|         `-DeclRefExpr 0x55f5da660e50 <col:62> 'T' lvalue ParmVar 0x55f5da6313b8 'x' 'T &'
|-FunctionTemplateDecl 0x55f5da631a68 <line:438:5, line:442:5> line:439:11 read
| |-TemplateTypeParmDecl 0x55f5da6315a8 <line:438:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55f5da631628 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55f5da6319c8 <line:439:5, line:442:5> line:439:11 read 'Args &(const char *, int, P, T &)'
|   |-ParmVarDecl 0x55f5da6316e8 <col:16, col:28> col:28 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55f5da631768 <col:37, col:41> col:41 referenced flags 'int'
|   |-ParmVarDecl 0x55f5da6317e0 <col:48, col:50> col:50 referenced parser 'P'
|   |-ParmVarDecl 0x55f5da631888 <col:58, col:61> col:61 referenced x 'T &'
|   `-CompoundStmt 0x55f5da661028 <col:64, line:442:5>
|     |-CallExpr 0x55f5da660fa8 <line:440:9, col:55> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x55f5da660ed8 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read' empty
|     | |-CXXThisExpr 0x55f5da660f18 <col:24> 'Args *' this
|     | |-DeclRefExpr 0x55f5da660f28 <col:30> 'const char *' lvalue ParmVar 0x55f5da6316e8 'keyword' 'const char *'
|     | |-DeclRefExpr 0x55f5da660f48 <col:39> 'int' lvalue ParmVar 0x55f5da631768 'flags' 'int'
|     | |-DeclRefExpr 0x55f5da660f68 <col:46> 'P' lvalue ParmVar 0x55f5da6317e0 'parser' 'P'
|     | `-DeclRefExpr 0x55f5da660f88 <col:54> 'T' lvalue ParmVar 0x55f5da631888 'x' 'T &'
|     `-ReturnStmt 0x55f5da661018 <line:441:9, col:17>
|       `-UnaryOperator 0x55f5da661000 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55f5da660ff0 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55f5da632068 <line:455:5, line:458:5> line:456:11 read_or_set
| |-TemplateTypeParmDecl 0x55f5da631ae0 <line:455:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55f5da631b58 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| |-TemplateTypeParmDecl 0x55f5da631bd8 <col:39, col:48> col:48 referenced typename depth 0 index 2 V
| `-CXXMethodDecl 0x55f5da631fc8 <line:456:5, line:458:5> line:456:11 read_or_set 'Args &(const char *, P, T &, const V &)'
|   |-ParmVarDecl 0x55f5da631ca0 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55f5da631d18 <col:44, col:46> col:46 referenced parser 'P'
|   |-ParmVarDecl 0x55f5da631db8 <col:54, col:57> col:57 referenced x 'T &'
|   |-ParmVarDecl 0x55f5da631e88 <col:60, col:69> col:69 referenced default_value 'const V &'
|   `-CompoundStmt 0x55f5da6611c0 <col:84, line:458:5>
|     `-ReturnStmt 0x55f5da6611b0 <line:457:9, col:64>
|       `-CallExpr 0x55f5da661168 <col:16, col:64> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55f5da661058 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55f5da6610c8 <col:28> 'const char *' lvalue ParmVar 0x55f5da631ca0 'keyword' 'const char *'
|         |-IntegerLiteral 0x55f5da6610e8 <col:37> 'int' 0
|         |-DeclRefExpr 0x55f5da661108 <col:40> 'P' lvalue ParmVar 0x55f5da631d18 'parser' 'P'
|         |-DeclRefExpr 0x55f5da661128 <col:48> 'T' lvalue ParmVar 0x55f5da631db8 'x' 'T &'
|         `-DeclRefExpr 0x55f5da661148 <col:51> 'const V' lvalue ParmVar 0x55f5da631e88 'default_value' 'const V &'
|-FunctionTemplateDecl 0x55f5da6325e8 <line:459:5, line:462:5> line:460:11 read_or_set_p
| |-TemplateTypeParmDecl 0x55f5da6320e0 <line:459:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55f5da632158 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| |-TemplateTypeParmDecl 0x55f5da6321d8 <col:39, col:48> col:48 referenced typename depth 0 index 2 V
| `-CXXMethodDecl 0x55f5da632548 <line:460:5, line:462:5> line:460:11 read_or_set_p 'Args &(const char *, P, T &, const V &)'
|   |-ParmVarDecl 0x55f5da6322a0 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55f5da632318 <col:46, col:48> col:48 referenced parser 'P'
|   |-ParmVarDecl 0x55f5da6323b8 <col:56, col:59> col:59 referenced x 'T &'
|   |-ParmVarDecl 0x55f5da632458 <col:62, col:71> col:71 referenced default_value 'const V &'
|   `-CompoundStmt 0x55f5da661350 <col:86, line:462:5>
|     `-ReturnStmt 0x55f5da661340 <line:461:9, col:73>
|       `-CallExpr 0x55f5da6612f8 <col:16, col:73> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55f5da6611e8 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55f5da661258 <col:28> 'const char *' lvalue ParmVar 0x55f5da6322a0 'keyword' 'const char *'
|         |-DeclRefExpr 0x55f5da661278 <col:37> 'const int' lvalue Var 0x55f5da62ab40 'positional' 'const int'
|         |-DeclRefExpr 0x55f5da661298 <col:49> 'P' lvalue ParmVar 0x55f5da632318 'parser' 'P'
|         |-DeclRefExpr 0x55f5da6612b8 <col:57> 'T' lvalue ParmVar 0x55f5da6323b8 'x' 'T &'
|         `-DeclRefExpr 0x55f5da6612d8 <col:60> 'const V' lvalue ParmVar 0x55f5da632458 'default_value' 'const V &'
|-FunctionTemplateDecl 0x55f5da632c48 <line:463:5, line:467:5> line:464:11 read_or_set
| |-TemplateTypeParmDecl 0x55f5da632660 <line:463:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55f5da6326d8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| |-TemplateTypeParmDecl 0x55f5da632758 <col:39, col:48> col:48 referenced typename depth 0 index 2 V
| `-CXXMethodDecl 0x55f5da632ba8 <line:464:5, line:467:5> line:464:11 read_or_set 'Args &(const char *, int, P, T &, const V &)'
|   |-ParmVarDecl 0x55f5da632820 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55f5da6328a0 <col:44, col:48> col:48 referenced flags 'int'
|   |-ParmVarDecl 0x55f5da632918 <col:55, col:57> col:57 referenced parser 'P'
|   |-ParmVarDecl 0x55f5da6329b8 <col:65, col:68> col:68 referenced x 'T &'
|   |-ParmVarDecl 0x55f5da632a58 <col:71, col:80> col:80 referenced default_value 'const V &'
|   `-CompoundStmt 0x55f5da6614e0 <col:95, line:467:5>
|     |-CallExpr 0x55f5da661458 <line:465:9, col:77> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x55f5da661368 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read_or_set' empty
|     | |-CXXThisExpr 0x55f5da6613a8 <col:31> 'Args *' this
|     | |-DeclRefExpr 0x55f5da6613b8 <col:37> 'const char *' lvalue ParmVar 0x55f5da632820 'keyword' 'const char *'
|     | |-DeclRefExpr 0x55f5da6613d8 <col:46> 'int' lvalue ParmVar 0x55f5da6328a0 'flags' 'int'
|     | |-DeclRefExpr 0x55f5da6613f8 <col:53> 'P' lvalue ParmVar 0x55f5da632918 'parser' 'P'
|     | |-DeclRefExpr 0x55f5da661418 <col:61> 'T' lvalue ParmVar 0x55f5da6329b8 'x' 'T &'
|     | `-DeclRefExpr 0x55f5da661438 <col:64> 'const V' lvalue ParmVar 0x55f5da632a58 'default_value' 'const V &'
|     `-ReturnStmt 0x55f5da6614d0 <line:466:9, col:17>
|       `-UnaryOperator 0x55f5da6614b8 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55f5da6614a8 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55f5da633228 <line:478:5, line:481:5> line:479:11 read
| |-TemplateTypeParmDecl 0x55f5da632cc8 <line:478:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55f5da632d48 <col:26, col:35> col:35 referenced typename depth 0 index 1 T1
| |-TemplateTypeParmDecl 0x55f5da632dc8 <col:39, col:48> col:48 referenced typename depth 0 index 2 T2
| `-CXXMethodDecl 0x55f5da633188 <line:479:5, line:481:5> line:479:11 read 'Args &(const char *, P, T1 &, T2 &)'
|   |-ParmVarDecl 0x55f5da632e90 <col:16, col:28> col:28 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55f5da632f08 <col:37, col:39> col:39 referenced parser 'P'
|   |-ParmVarDecl 0x55f5da632fa8 <col:47, col:51> col:51 referenced x1 'T1 &'
|   |-ParmVarDecl 0x55f5da633048 <col:55, col:59> col:59 referenced x2 'T2 &'
|   `-CompoundStmt 0x55f5da661688 <col:63, line:481:5>
|     `-ReturnStmt 0x55f5da661678 <line:480:9, col:47>
|       `-CallExpr 0x55f5da661630 <col:16, col:47> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55f5da661510 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55f5da661590 <col:21> 'const char *' lvalue ParmVar 0x55f5da632e90 'keyword' 'const char *'
|         |-IntegerLiteral 0x55f5da6615b0 <col:30> 'int' 0
|         |-DeclRefExpr 0x55f5da6615d0 <col:33> 'P' lvalue ParmVar 0x55f5da632f08 'parser' 'P'
|         |-DeclRefExpr 0x55f5da6615f0 <col:41> 'T1' lvalue ParmVar 0x55f5da632fa8 'x1' 'T1 &'
|         `-DeclRefExpr 0x55f5da661610 <col:45> 'T2' lvalue ParmVar 0x55f5da633048 'x2' 'T2 &'
|-FunctionTemplateDecl 0x55f5da6337a8 <line:482:5, line:485:5> line:483:11 read_m
| |-TemplateTypeParmDecl 0x55f5da6332a0 <line:482:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55f5da633318 <col:26, col:35> col:35 referenced typename depth 0 index 1 T1
| |-TemplateTypeParmDecl 0x55f5da633398 <col:39, col:48> col:48 referenced typename depth 0 index 2 T2
| `-CXXMethodDecl 0x55f5da633708 <line:483:5, line:485:5> line:483:11 read_m 'Args &(const char *, P, T1 &, T2 &)'
|   |-ParmVarDecl 0x55f5da633460 <col:18, col:30> col:30 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55f5da6334d8 <col:39, col:41> col:41 referenced parser 'P'
|   |-ParmVarDecl 0x55f5da633578 <col:49, col:53> col:53 referenced x1 'T1 &'
|   |-ParmVarDecl 0x55f5da633618 <col:57, col:61> col:61 referenced x2 'T2 &'
|   `-CompoundStmt 0x55f5da661828 <col:65, line:485:5>
|     `-ReturnStmt 0x55f5da661818 <line:484:9, col:55>
|       `-CallExpr 0x55f5da6617d0 <col:16, col:55> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55f5da6616b0 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55f5da661730 <col:21> 'const char *' lvalue ParmVar 0x55f5da633460 'keyword' 'const char *'
|         |-DeclRefExpr 0x55f5da661750 <col:30> 'const int' lvalue Var 0x55f5da62aa48 'mandatory' 'const int'
|         |-DeclRefExpr 0x55f5da661770 <col:41> 'P' lvalue ParmVar 0x55f5da6334d8 'parser' 'P'
|         |-DeclRefExpr 0x55f5da661790 <col:49> 'T1' lvalue ParmVar 0x55f5da633578 'x1' 'T1 &'
|         `-DeclRefExpr 0x55f5da6617b0 <col:53> 'T2' lvalue ParmVar 0x55f5da633618 'x2' 'T2 &'
|-FunctionTemplateDecl 0x55f5da633d28 <line:486:5, line:489:5> line:487:11 read_p
| |-TemplateTypeParmDecl 0x55f5da633820 <line:486:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55f5da633898 <col:26, col:35> col:35 referenced typename depth 0 index 1 T1
| |-TemplateTypeParmDecl 0x55f5da633918 <col:39, col:48> col:48 referenced typename depth 0 index 2 T2
| `-CXXMethodDecl 0x55f5da633c88 <line:487:5, line:489:5> line:487:11 read_p 'Args &(const char *, P, T1 &, T2 &)'
|   |-ParmVarDecl 0x55f5da6339e0 <col:18, col:30> col:30 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55f5da633a58 <col:39, col:41> col:41 referenced parser 'P'
|   |-ParmVarDecl 0x55f5da633af8 <col:49, col:53> col:53 referenced x1 'T1 &'
|   |-ParmVarDecl 0x55f5da633b98 <col:57, col:61> col:61 referenced x2 'T2 &'
|   `-CompoundStmt 0x55f5da6619c8 <col:65, line:489:5>
|     `-ReturnStmt 0x55f5da6619b8 <line:488:9, col:56>
|       `-CallExpr 0x55f5da661970 <col:16, col:56> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55f5da661850 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55f5da6618d0 <col:21> 'const char *' lvalue ParmVar 0x55f5da6339e0 'keyword' 'const char *'
|         |-DeclRefExpr 0x55f5da6618f0 <col:30> 'const int' lvalue Var 0x55f5da62ab40 'positional' 'const int'
|         |-DeclRefExpr 0x55f5da661910 <col:42> 'P' lvalue ParmVar 0x55f5da633a58 'parser' 'P'
|         |-DeclRefExpr 0x55f5da661930 <col:50> 'T1' lvalue ParmVar 0x55f5da633af8 'x1' 'T1 &'
|         `-DeclRefExpr 0x55f5da661950 <col:54> 'T2' lvalue ParmVar 0x55f5da633b98 'x2' 'T2 &'
|-FunctionTemplateDecl 0x55f5da6342a8 <line:490:5, line:493:5> line:491:11 read_mp
| |-TemplateTypeParmDecl 0x55f5da633da0 <line:490:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55f5da633e18 <col:26, col:35> col:35 referenced typename depth 0 index 1 T1
| |-TemplateTypeParmDecl 0x55f5da633e98 <col:39, col:48> col:48 referenced typename depth 0 index 2 T2
| `-CXXMethodDecl 0x55f5da634208 <line:491:5, line:493:5> line:491:11 read_mp 'Args &(const char *, P, T1 &, T2 &)'
|   |-ParmVarDecl 0x55f5da633f60 <col:19, col:31> col:31 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55f5da633fd8 <col:40, col:42> col:42 referenced parser 'P'
|   |-ParmVarDecl 0x55f5da634078 <col:50, col:54> col:54 referenced x1 'T1 &'
|   |-ParmVarDecl 0x55f5da634118 <col:58, col:62> col:62 referenced x2 'T2 &'
|   `-CompoundStmt 0x55f5da661c18 <col:66, line:493:5>
|     `-ReturnStmt 0x55f5da661c08 <line:492:9, col:68>
|       `-CallExpr 0x55f5da661bc0 <col:16, col:68> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55f5da6619f0 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55f5da661a70 <col:21> 'const char *' lvalue ParmVar 0x55f5da633f60 'keyword' 'const char *'
|         |-BinaryOperator 0x55f5da661b40 <col:30, col:42> 'int' '|'
|         | |-ImplicitCastExpr 0x55f5da661af0 <col:30> 'int' <LValueToRValue>
|         | | `-DeclRefExpr 0x55f5da661ad0 <col:30> 'const int' lvalue Var 0x55f5da62aa48 'mandatory' 'const int' non_odr_use_constant
|         | `-ImplicitCastExpr 0x55f5da661b28 <col:42> 'int' <LValueToRValue>
|         |   `-DeclRefExpr 0x55f5da661b08 <col:42> 'const int' lvalue Var 0x55f5da62ab40 'positional' 'const int' non_odr_use_constant
|         |-DeclRefExpr 0x55f5da661b60 <col:54> 'P' lvalue ParmVar 0x55f5da633fd8 'parser' 'P'
|         |-DeclRefExpr 0x55f5da661b80 <col:62> 'T1' lvalue ParmVar 0x55f5da634078 'x1' 'T1 &'
|         `-DeclRefExpr 0x55f5da661ba0 <col:66> 'T2' lvalue ParmVar 0x55f5da634118 'x2' 'T2 &'
|-FunctionTemplateDecl 0x55f5da634908 <line:494:5, line:498:5> line:495:11 read
| |-TemplateTypeParmDecl 0x55f5da634320 <line:494:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55f5da634398 <col:26, col:35> col:35 referenced typename depth 0 index 1 T1
| |-TemplateTypeParmDecl 0x55f5da634418 <col:39, col:48> col:48 referenced typename depth 0 index 2 T2
| `-CXXMethodDecl 0x55f5da634868 <line:495:5, line:498:5> line:495:11 read 'Args &(const char *, int, P, T1 &, T2 &)'
|   |-ParmVarDecl 0x55f5da6344e0 <col:16, col:28> col:28 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55f5da634560 <col:37, col:41> col:41 referenced flags 'int'
|   |-ParmVarDecl 0x55f5da6345d8 <col:48, col:50> col:50 referenced parser 'P'
|   |-ParmVarDecl 0x55f5da634678 <col:58, col:62> col:62 referenced x1 'T1 &'
|   |-ParmVarDecl 0x55f5da634718 <col:66, col:70> col:70 referenced x2 'T2 &'
|   `-CompoundStmt 0x55f5da661da8 <col:74, line:498:5>
|     |-CallExpr 0x55f5da661d20 <line:496:9, col:60> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x55f5da661c30 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read' empty
|     | |-CXXThisExpr 0x55f5da661c70 <col:24> 'Args *' this
|     | |-DeclRefExpr 0x55f5da661c80 <col:30> 'const char *' lvalue ParmVar 0x55f5da6344e0 'keyword' 'const char *'
|     | |-DeclRefExpr 0x55f5da661ca0 <col:39> 'int' lvalue ParmVar 0x55f5da634560 'flags' 'int'
|     | |-DeclRefExpr 0x55f5da661cc0 <col:46> 'P' lvalue ParmVar 0x55f5da6345d8 'parser' 'P'
|     | |-DeclRefExpr 0x55f5da661ce0 <col:54> 'T1' lvalue ParmVar 0x55f5da634678 'x1' 'T1 &'
|     | `-DeclRefExpr 0x55f5da661d00 <col:58> 'T2' lvalue ParmVar 0x55f5da634718 'x2' 'T2 &'
|     `-ReturnStmt 0x55f5da661d98 <line:497:9, col:17>
|       `-UnaryOperator 0x55f5da661d80 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55f5da661d70 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55f5da634c68 <line:506:5, line:509:5> line:507:11 read_with
| |-TemplateTypeParmDecl 0x55f5da634988 <line:506:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x55f5da634bc8 <line:507:5, line:509:5> line:507:11 read_with 'Args &(const char *, P)'
|   |-ParmVarDecl 0x55f5da634a40 <col:21, col:33> col:33 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55f5da634ab8 <col:42, col:44> col:44 referenced parser 'P'
|   `-CompoundStmt 0x55f5da661ef0 <col:52, line:509:5>
|     `-ReturnStmt 0x55f5da661ee0 <line:508:9, col:44>
|       `-CallExpr 0x55f5da661ea8 <col:16, col:44> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55f5da661dd8 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55f5da661e48 <col:26> 'const char *' lvalue ParmVar 0x55f5da634a40 'keyword' 'const char *'
|         |-IntegerLiteral 0x55f5da661e68 <col:35> 'int' 0
|         `-DeclRefExpr 0x55f5da661e88 <col:38> 'P' lvalue ParmVar 0x55f5da634ab8 'parser' 'P'
|-FunctionTemplateDecl 0x55f5da634f68 <line:510:5, line:513:5> line:511:11 read_m_with
| |-TemplateTypeParmDecl 0x55f5da634cd0 <line:510:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x55f5da634ec8 <line:511:5, line:513:5> line:511:11 read_m_with 'Args &(const char *, P)'
|   |-ParmVarDecl 0x55f5da634d80 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55f5da634df8 <col:44, col:46> col:46 referenced parser 'P'
|   `-CompoundStmt 0x55f5da662030 <col:54, line:513:5>
|     `-ReturnStmt 0x55f5da662020 <line:512:9, col:52>
|       `-CallExpr 0x55f5da661fe8 <col:16, col:52> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55f5da661f18 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55f5da661f88 <col:26> 'const char *' lvalue ParmVar 0x55f5da634d80 'keyword' 'const char *'
|         |-DeclRefExpr 0x55f5da661fa8 <col:35> 'const int' lvalue Var 0x55f5da62aa48 'mandatory' 'const int'
|         `-DeclRefExpr 0x55f5da661fc8 <col:46> 'P' lvalue ParmVar 0x55f5da634df8 'parser' 'P'
|-FunctionTemplateDecl 0x55f5da635268 <line:514:5, line:517:5> line:515:11 read_p_with
| |-TemplateTypeParmDecl 0x55f5da634fd0 <line:514:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x55f5da6351c8 <line:515:5, line:517:5> line:515:11 read_p_with 'Args &(const char *, P)'
|   |-ParmVarDecl 0x55f5da635080 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55f5da6350f8 <col:44, col:46> col:46 referenced parser 'P'
|   `-CompoundStmt 0x55f5da662170 <col:54, line:517:5>
|     `-ReturnStmt 0x55f5da662160 <line:516:9, col:53>
|       `-CallExpr 0x55f5da662128 <col:16, col:53> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55f5da662058 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55f5da6620c8 <col:26> 'const char *' lvalue ParmVar 0x55f5da635080 'keyword' 'const char *'
|         |-DeclRefExpr 0x55f5da6620e8 <col:35> 'const int' lvalue Var 0x55f5da62ab40 'positional' 'const int'
|         `-DeclRefExpr 0x55f5da662108 <col:47> 'P' lvalue ParmVar 0x55f5da6350f8 'parser' 'P'
|-FunctionTemplateDecl 0x55f5da635568 <line:518:5, line:521:5> line:519:11 read_mp_with
| |-TemplateTypeParmDecl 0x55f5da6352d0 <line:518:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x55f5da6354c8 <line:519:5, line:521:5> line:519:11 read_mp_with 'Args &(const char *, P)'
|   |-ParmVarDecl 0x55f5da635380 <col:24, col:36> col:36 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55f5da6353f8 <col:45, col:47> col:47 referenced parser 'P'
|   `-CompoundStmt 0x55f5da662360 <col:55, line:521:5>
|     `-ReturnStmt 0x55f5da662350 <line:520:9, col:65>
|       `-CallExpr 0x55f5da662318 <col:16, col:65> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55f5da662198 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55f5da662208 <col:26> 'const char *' lvalue ParmVar 0x55f5da635380 'keyword' 'const char *'
|         |-BinaryOperator 0x55f5da6622d8 <col:35, col:47> 'int' '|'
|         | |-ImplicitCastExpr 0x55f5da662288 <col:35> 'int' <LValueToRValue>
|         | | `-DeclRefExpr 0x55f5da662268 <col:35> 'const int' lvalue Var 0x55f5da62aa48 'mandatory' 'const int' non_odr_use_constant
|         | `-ImplicitCastExpr 0x55f5da6622c0 <col:47> 'int' <LValueToRValue>
|         |   `-DeclRefExpr 0x55f5da6622a0 <col:47> 'const int' lvalue Var 0x55f5da62ab40 'positional' 'const int' non_odr_use_constant
|         `-DeclRefExpr 0x55f5da6622f8 <col:59> 'P' lvalue ParmVar 0x55f5da6353f8 'parser' 'P'
|-FunctionTemplateDecl 0x55f5da635938 <line:522:5, line:526:5> line:523:11 read_with
| |-TemplateTypeParmDecl 0x55f5da6355d0 <line:522:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x55f5da635898 <line:523:5, line:526:5> line:523:11 read_with 'Args &(const char *, int, P)'
|   |-ParmVarDecl 0x55f5da635680 <col:21, col:33> col:33 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55f5da635700 <col:42, col:46> col:46 referenced flags 'int'
|   |-ParmVarDecl 0x55f5da635778 <col:53, col:55> col:55 referenced parser 'P'
|   `-CompoundStmt 0x55f5da6624a0 <col:63, line:526:5>
|     |-CallExpr 0x55f5da662428 <line:524:9, col:57> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x55f5da662378 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read_with' empty
|     | |-CXXThisExpr 0x55f5da6623b8 <col:29> 'Args *' this
|     | |-DeclRefExpr 0x55f5da6623c8 <col:35> 'const char *' lvalue ParmVar 0x55f5da635680 'keyword' 'const char *'
|     | |-DeclRefExpr 0x55f5da6623e8 <col:44> 'int' lvalue ParmVar 0x55f5da635700 'flags' 'int'
|     | `-DeclRefExpr 0x55f5da662408 <col:51> 'P' lvalue ParmVar 0x55f5da635778 'parser' 'P'
|     `-ReturnStmt 0x55f5da662490 <line:525:9, col:17>
|       `-UnaryOperator 0x55f5da662478 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55f5da662468 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55f5da635d88 <line:538:5, line:541:5> line:539:11 read_with
| |-TemplateTypeParmDecl 0x55f5da6359a8 <line:538:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55f5da635a28 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55f5da635ce8 <line:539:5, line:541:5> line:539:11 read_with 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x55f5da635ae8 <col:21, col:33> col:33 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55f5da635b60 <col:42, col:44> col:44 referenced parser 'P'
|   |-ParmVarDecl 0x55f5da635c08 <col:52, col:55> col:55 referenced x 'T &'
|   `-CompoundStmt 0x55f5da6625f8 <col:58, line:541:5>
|     `-ReturnStmt 0x55f5da6625e8 <line:540:9, col:39>
|       `-CallExpr 0x55f5da6625b0 <col:16, col:39> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55f5da6624d0 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55f5da662550 <col:21> 'const char *' lvalue ParmVar 0x55f5da635ae8 'keyword' 'const char *'
|         |-DeclRefExpr 0x55f5da662570 <col:30> 'P' lvalue ParmVar 0x55f5da635b60 'parser' 'P'
|         `-DeclRefExpr 0x55f5da662590 <col:38> 'T' lvalue ParmVar 0x55f5da635c08 'x' 'T &'
|-FunctionTemplateDecl 0x55f5da6361d8 <line:542:5, line:545:5> line:543:11 read_m_with
| |-TemplateTypeParmDecl 0x55f5da635df8 <line:542:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55f5da635e78 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55f5da636138 <line:543:5, line:545:5> line:543:11 read_m_with 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x55f5da635f38 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55f5da635fb0 <col:44, col:46> col:46 referenced parser 'P'
|   |-ParmVarDecl 0x55f5da636058 <col:54, col:57> col:57 referenced x 'T &'
|   `-CompoundStmt 0x55f5da662730 <col:60, line:545:5>
|     `-ReturnStmt 0x55f5da662720 <line:544:9, col:41>
|       `-CallExpr 0x55f5da6626e8 <col:16, col:41> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55f5da662620 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55f5da662688 <col:23> 'const char *' lvalue ParmVar 0x55f5da635f38 'keyword' 'const char *'
|         |-DeclRefExpr 0x55f5da6626a8 <col:32> 'P' lvalue ParmVar 0x55f5da635fb0 'parser' 'P'
|         `-DeclRefExpr 0x55f5da6626c8 <col:40> 'T' lvalue ParmVar 0x55f5da636058 'x' 'T &'
|-FunctionTemplateDecl 0x55f5da636628 <line:546:5, line:549:5> line:547:11 read_p_with
| |-TemplateTypeParmDecl 0x55f5da636248 <line:546:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55f5da6362c8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55f5da636588 <line:547:5, line:549:5> line:547:11 read_p_with 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x55f5da636388 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55f5da636400 <col:44, col:46> col:46 referenced parser 'P'
|   |-ParmVarDecl 0x55f5da6364a8 <col:54, col:57> col:57 referenced x 'T &'
|   `-CompoundStmt 0x55f5da662868 <col:60, line:549:5>
|     `-ReturnStmt 0x55f5da662858 <line:548:9, col:41>
|       `-CallExpr 0x55f5da662820 <col:16, col:41> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55f5da662758 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55f5da6627c0 <col:23> 'const char *' lvalue ParmVar 0x55f5da636388 'keyword' 'const char *'
|         |-DeclRefExpr 0x55f5da6627e0 <col:32> 'P' lvalue ParmVar 0x55f5da636400 'parser' 'P'
|         `-DeclRefExpr 0x55f5da662800 <col:40> 'T' lvalue ParmVar 0x55f5da6364a8 'x' 'T &'
|-FunctionTemplateDecl 0x55f5da636a78 <line:550:5, line:553:5> line:551:11 read_mp_with
| |-TemplateTypeParmDecl 0x55f5da636698 <line:550:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55f5da636718 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55f5da6369d8 <line:551:5, line:553:5> line:551:11 read_mp_with 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x55f5da6367d8 <col:24, col:36> col:36 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55f5da636850 <col:45, col:47> col:47 referenced parser 'P'
|   |-ParmVarDecl 0x55f5da6368f8 <col:55, col:58> col:58 referenced x 'T &'
|   `-CompoundStmt 0x55f5da6629a0 <col:61, line:553:5>
|     `-ReturnStmt 0x55f5da662990 <line:552:9, col:42>
|       `-CallExpr 0x55f5da662958 <col:16, col:42> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55f5da662890 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55f5da6628f8 <col:24> 'const char *' lvalue ParmVar 0x55f5da6367d8 'keyword' 'const char *'
|         |-DeclRefExpr 0x55f5da662918 <col:33> 'P' lvalue ParmVar 0x55f5da636850 'parser' 'P'
|         `-DeclRefExpr 0x55f5da662938 <col:41> 'T' lvalue ParmVar 0x55f5da6368f8 'x' 'T &'
|-FunctionTemplateDecl 0x55f5da636f58 <line:554:5, line:557:5> line:555:11 read_with
| |-TemplateTypeParmDecl 0x55f5da636ae8 <line:554:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55f5da636b68 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55f5da636eb8 <line:555:5, line:557:5> line:555:11 read_with 'Args &(const char *, int, P, T &)'
|   |-ParmVarDecl 0x55f5da636c28 <col:21, col:33> col:33 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55f5da636ca8 <col:42, col:46> col:46 referenced flags 'int'
|   |-ParmVarDecl 0x55f5da636d20 <col:53, col:55> col:55 referenced parser 'P'
|   |-ParmVarDecl 0x55f5da636dc8 <col:63, col:66> col:66 referenced x 'T &'
|   `-CompoundStmt 0x55f5da662b18 <col:69, line:557:5>
|     `-ReturnStmt 0x55f5da662b08 <line:556:9, col:46>
|       `-CallExpr 0x55f5da662ac8 <col:16, col:46> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55f5da6629c8 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55f5da662a48 <col:21> 'const char *' lvalue ParmVar 0x55f5da636c28 'keyword' 'const char *'
|         |-DeclRefExpr 0x55f5da662a68 <col:30> 'int' lvalue ParmVar 0x55f5da636ca8 'flags' 'int'
|         |-DeclRefExpr 0x55f5da662a88 <col:37> 'P' lvalue ParmVar 0x55f5da636d20 'parser' 'P'
|         `-DeclRefExpr 0x55f5da662aa8 <col:45> 'T' lvalue ParmVar 0x55f5da636dc8 'x' 'T &'
|-FunctionTemplateDecl 0x55f5da637268 <line:568:5, line:571:5> line:569:11 read_all_with
| |-TemplateTypeParmDecl 0x55f5da636fd0 <line:568:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x55f5da6371c8 <line:569:5, line:571:5> line:569:11 read_all_with 'Args &(const char *, P)'
|   |-ParmVarDecl 0x55f5da637080 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55f5da6370f8 <col:46, col:48> col:48 referenced parser 'P'
|   `-CompoundStmt 0x55f5da662c58 <col:56, line:571:5>
|     `-ReturnStmt 0x55f5da662c48 <line:570:9, col:48>
|       `-CallExpr 0x55f5da662c10 <col:16, col:48> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55f5da662b40 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55f5da662bb0 <col:30> 'const char *' lvalue ParmVar 0x55f5da637080 'keyword' 'const char *'
|         |-IntegerLiteral 0x55f5da662bd0 <col:39> 'int' 0
|         `-DeclRefExpr 0x55f5da662bf0 <col:42> 'P' lvalue ParmVar 0x55f5da6370f8 'parser' 'P'
|-FunctionTemplateDecl 0x55f5da6375f8 <line:572:5, line:576:5> line:573:11 read_all_with
| |-TemplateTypeParmDecl 0x55f5da6372d0 <line:572:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x55f5da637558 <line:573:5, line:576:5> line:573:11 read_all_with 'Args &(const char *, int, P)'
|   |-ParmVarDecl 0x55f5da637380 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55f5da637400 <col:46, col:50> col:50 referenced flags 'int'
|   |-ParmVarDecl 0x55f5da637478 <col:57, col:59> col:59 referenced parser 'P'
|   `-CompoundStmt 0x55f5da662e28 <col:67, line:576:5>
|     |-CallExpr 0x55f5da662db0 <line:574:9, col:74> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x55f5da662c70 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read_all_with' empty
|     | |-CXXThisExpr 0x55f5da662cb0 <col:33> 'Args *' this
|     | |-DeclRefExpr 0x55f5da662cc0 <col:39> 'const char *' lvalue ParmVar 0x55f5da637380 'keyword' 'const char *'
|     | |-BinaryOperator 0x55f5da662d70 <col:48, col:56> 'int' '|'
|     | | |-ImplicitCastExpr 0x55f5da662d20 <col:48> 'int' <LValueToRValue>
|     | | | `-DeclRefExpr 0x55f5da662ce0 <col:48> 'int' lvalue ParmVar 0x55f5da637400 'flags' 'int'
|     | | `-ImplicitCastExpr 0x55f5da662d58 <col:56> 'int' <LValueToRValue>
|     | |   `-DeclRefExpr 0x55f5da662d38 <col:56> 'const int' lvalue Var 0x55f5da62ad30 'firstmatch' 'const int' non_odr_use_constant
|     | `-DeclRefExpr 0x55f5da662d90 <col:68> 'P' lvalue ParmVar 0x55f5da637478 'parser' 'P'
|     `-ReturnStmt 0x55f5da662e18 <line:575:9, col:17>
|       `-UnaryOperator 0x55f5da662e00 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55f5da662df0 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55f5da637a48 <line:589:5, line:592:5> line:590:11 read_all_with
| |-TemplateTypeParmDecl 0x55f5da637668 <line:589:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55f5da6376e8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55f5da6379a8 <line:590:5, line:592:5> line:590:11 read_all_with 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x55f5da6377a8 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55f5da637820 <col:46, col:48> col:48 referenced parser 'P'
|   |-ParmVarDecl 0x55f5da6378c8 <col:56, col:59> col:59 referenced x 'T &'
|   `-CompoundStmt 0x55f5da662f98 <col:62, line:592:5>
|     `-ReturnStmt 0x55f5da662f88 <line:591:9, col:51>
|       `-CallExpr 0x55f5da662f48 <col:16, col:51> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55f5da662e58 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55f5da662ec8 <col:30> 'const char *' lvalue ParmVar 0x55f5da6377a8 'keyword' 'const char *'
|         |-IntegerLiteral 0x55f5da662ee8 <col:39> 'int' 0
|         |-DeclRefExpr 0x55f5da662f08 <col:42> 'P' lvalue ParmVar 0x55f5da637820 'parser' 'P'
|         `-DeclRefExpr 0x55f5da662f28 <col:50> 'T' lvalue ParmVar 0x55f5da6378c8 'x' 'T &'
|-FunctionTemplateDecl 0x55f5da637f28 <line:593:5, line:597:5> line:594:11 read_all_with
| |-TemplateTypeParmDecl 0x55f5da637ab8 <line:593:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55f5da637b38 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55f5da637e88 <line:594:5, line:597:5> line:594:11 read_all_with 'Args &(const char *, int, P, T &)'
|   |-ParmVarDecl 0x55f5da637bf8 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55f5da637c78 <col:46, col:50> col:50 referenced flags 'int'
|   |-ParmVarDecl 0x55f5da637cf0 <col:57, col:59> col:59 referenced parser 'P'
|   |-ParmVarDecl 0x55f5da637d98 <col:67, col:70> col:70 referenced x 'T &'
|   `-CompoundStmt 0x55f5da663190 <col:73, line:597:5>
|     |-CallExpr 0x55f5da663110 <line:595:9, col:77> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x55f5da662fb0 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read_all_with' empty
|     | |-CXXThisExpr 0x55f5da662ff0 <col:33> 'Args *' this
|     | |-DeclRefExpr 0x55f5da663000 <col:39> 'const char *' lvalue ParmVar 0x55f5da637bf8 'keyword' 'const char *'
|     | |-BinaryOperator 0x55f5da6630b0 <col:48, col:56> 'int' '|'
|     | | |-ImplicitCastExpr 0x55f5da663060 <col:48> 'int' <LValueToRValue>
|     | | | `-DeclRefExpr 0x55f5da663020 <col:48> 'int' lvalue ParmVar 0x55f5da637c78 'flags' 'int'
|     | | `-ImplicitCastExpr 0x55f5da663098 <col:56> 'int' <LValueToRValue>
|     | |   `-DeclRefExpr 0x55f5da663078 <col:56> 'const int' lvalue Var 0x55f5da62ad30 'firstmatch' 'const int' non_odr_use_constant
|     | |-DeclRefExpr 0x55f5da6630d0 <col:68> 'P' lvalue ParmVar 0x55f5da637cf0 'parser' 'P'
|     | `-DeclRefExpr 0x55f5da6630f0 <col:76> 'T' lvalue ParmVar 0x55f5da637d98 'x' 'T &'
|     `-ReturnStmt 0x55f5da663180 <line:596:9, col:17>
|       `-UnaryOperator 0x55f5da663168 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55f5da663158 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55f5da63d0f0 <line:611:5, line:614:5> line:612:11 read_all
| |-TemplateTypeParmDecl 0x55f5da637fa0 <line:611:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55f5da638018 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55f5da638438 <line:612:5, line:614:5> line:612:11 read_all 'Args &(const char *, P, Vector<T> &)'
|   |-ParmVarDecl 0x55f5da6380d8 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55f5da638150 <col:41, col:43> col:43 referenced parser 'P'
|   |-ParmVarDecl 0x55f5da638310 <col:51, col:62> col:62 referenced x 'Vector<T> &'
|   `-CompoundStmt 0x55f5da663300 <col:65, line:614:5>
|     `-ReturnStmt 0x55f5da6632f0 <line:613:9, col:46>
|       `-CallExpr 0x55f5da6632b0 <col:16, col:46> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55f5da6631c0 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55f5da663230 <col:25> 'const char *' lvalue ParmVar 0x55f5da6380d8 'keyword' 'const char *'
|         |-IntegerLiteral 0x55f5da663250 <col:34> 'int' 0
|         |-DeclRefExpr 0x55f5da663270 <col:37> 'P' lvalue ParmVar 0x55f5da638150 'parser' 'P'
|         `-DeclRefExpr 0x55f5da663290 <col:45> 'Vector<T>' lvalue ParmVar 0x55f5da638310 'x' 'Vector<T> &'
|-FunctionTemplateDecl 0x55f5da63d518 <line:615:5, line:618:5> line:616:11 read_all
| |-TemplateTypeParmDecl 0x55f5da63d160 <line:615:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x55f5da63d478 <line:616:5, line:618:5> line:616:11 read_all 'Args &(const char *, Vector<T> &)'
|   |-ParmVarDecl 0x55f5da63d210 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55f5da63d360 <col:41, col:52> col:52 referenced x 'Vector<T> &'
|   `-CompoundStmt 0x55f5da663520 <col:55, line:618:5>
|     `-ReturnStmt 0x55f5da663510 <line:617:9, col:55>
|       `-CallExpr 0x55f5da6634d0 <col:16, col:55> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55f5da663328 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55f5da663398 <col:25> 'const char *' lvalue ParmVar 0x55f5da63d210 'keyword' 'const char *'
|         |-IntegerLiteral 0x55f5da6633b8 <col:34> 'int' 0
|         |-CXXUnresolvedConstructExpr 0x55f5da663490 <col:37, col:51> 'DefaultArg<T>' 'DefaultArg<T>'
|         `-DeclRefExpr 0x55f5da6634b0 <col:54> 'Vector<T>' lvalue ParmVar 0x55f5da63d360 'x' 'Vector<T> &'
|-FunctionTemplateDecl 0x55f5da63dae8 <line:619:5, line:623:5> line:620:11 read_all
| |-TemplateTypeParmDecl 0x55f5da63d580 <line:619:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55f5da63d5f8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55f5da63da48 <line:620:5, line:623:5> line:620:11 read_all 'Args &(const char *, int, P, Vector<T> &)'
|   |-ParmVarDecl 0x55f5da63d6b8 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55f5da63d738 <col:41, col:45> col:45 referenced flags 'int'
|   |-ParmVarDecl 0x55f5da63d7b0 <col:52, col:54> col:54 referenced parser 'P'
|   |-ParmVarDecl 0x55f5da63d900 <col:62, col:73> col:73 referenced x 'Vector<T> &'
|   `-CompoundStmt 0x55f5da663718 <col:76, line:623:5>
|     |-CallExpr 0x55f5da663698 <line:621:9, col:72> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x55f5da663538 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read_all' empty
|     | |-CXXThisExpr 0x55f5da663578 <col:28> 'Args *' this
|     | |-DeclRefExpr 0x55f5da663588 <col:34> 'const char *' lvalue ParmVar 0x55f5da63d6b8 'keyword' 'const char *'
|     | |-BinaryOperator 0x55f5da663638 <col:43, col:51> 'int' '|'
|     | | |-ImplicitCastExpr 0x55f5da6635e8 <col:43> 'int' <LValueToRValue>
|     | | | `-DeclRefExpr 0x55f5da6635a8 <col:43> 'int' lvalue ParmVar 0x55f5da63d738 'flags' 'int'
|     | | `-ImplicitCastExpr 0x55f5da663620 <col:51> 'int' <LValueToRValue>
|     | |   `-DeclRefExpr 0x55f5da663600 <col:51> 'const int' lvalue Var 0x55f5da62ad30 'firstmatch' 'const int' non_odr_use_constant
|     | |-DeclRefExpr 0x55f5da663658 <col:63> 'P' lvalue ParmVar 0x55f5da63d7b0 'parser' 'P'
|     | `-DeclRefExpr 0x55f5da663678 <col:71> 'Vector<T>' lvalue ParmVar 0x55f5da63d900 'x' 'Vector<T> &'
|     `-ReturnStmt 0x55f5da663708 <line:622:9, col:17>
|       `-UnaryOperator 0x55f5da6636f0 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55f5da6636e0 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55f5da63e028 <line:624:5, line:627:5> line:625:11 read_all
| |-TemplateTypeParmDecl 0x55f5da63db60 <line:624:15, col:24> col:24 typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55f5da63dbd8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55f5da63df88 <line:625:5, line:627:5> line:625:11 read_all 'Args &(const char *, int, Vector<T> &)'
|   |-ParmVarDecl 0x55f5da63dc98 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55f5da63dd18 <col:41, col:45> col:45 referenced flags 'int'
|   |-ParmVarDecl 0x55f5da63de60 <col:52, col:63> col:63 referenced x 'Vector<T> &'
|   `-CompoundStmt 0x55f5da663980 <col:66, line:627:5>
|     `-ReturnStmt 0x55f5da663970 <line:626:9, col:59>
|       `-CallExpr 0x55f5da663930 <col:16, col:59> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55f5da663748 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55f5da6637b8 <col:25> 'const char *' lvalue ParmVar 0x55f5da63dc98 'keyword' 'const char *'
|         |-DeclRefExpr 0x55f5da6637d8 <col:34> 'int' lvalue ParmVar 0x55f5da63dd18 'flags' 'int'
|         |-CXXUnresolvedConstructExpr 0x55f5da6638f0 <col:41, col:55> 'DefaultArg<T>' 'DefaultArg<T>'
|         `-DeclRefExpr 0x55f5da663910 <col:58> 'Vector<T>' lvalue ParmVar 0x55f5da63de60 'x' 'Vector<T> &'
|-CXXMethodDecl 0x55f5da63e0b8 <line:631:5, line:633:5> line:631:10 status 'bool () const'
| `-CompoundStmt 0x55f5da663a00 <col:25, line:633:5>
|   `-ReturnStmt 0x55f5da6639f0 <line:632:9, col:16>
|     `-ImplicitCastExpr 0x55f5da6639d8 <col:16> 'bool' <LValueToRValue>
|       `-MemberExpr 0x55f5da6639a8 <col:16> 'const bool' lvalue ->_status 0x55f5da643ef8
|         `-CXXThisExpr 0x55f5da663998 <col:16> 'const Args *' implicit this
|-CXXMethodDecl 0x55f5da63e238 <line:636:5, line:639:5> line:636:11 status 'Args &(bool &)'
| |-ParmVarDecl 0x55f5da63e170 <col:18, col:24> col:24 used x 'bool &'
| `-CompoundStmt 0x55f5da663ae8 <col:27, line:639:5>
|   |-BinaryOperator 0x55f5da663a90 <line:637:9, col:13> 'bool' lvalue '='
|   | |-DeclRefExpr 0x55f5da663a18 <col:9> 'bool' lvalue ParmVar 0x55f5da63e170 'x' 'bool &'
|   | `-ImplicitCastExpr 0x55f5da663a78 <col:13> 'bool' <LValueToRValue>
|   |   `-MemberExpr 0x55f5da663a48 <col:13> 'bool' lvalue ->_status 0x55f5da643ef8
|   |     `-CXXThisExpr 0x55f5da663a38 <col:13> 'Args *' implicit this
|   `-ReturnStmt 0x55f5da663ad8 <line:638:9, col:17>
|     `-UnaryOperator 0x55f5da663ac0 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55f5da663ab0 <col:17> 'Args *' this
|-CXXMethodDecl 0x55f5da63e3b8 <line:641:5, line:644:5> line:641:17 status 'const Args &(bool &) const'
| |-ParmVarDecl 0x55f5da63e2f8 <col:24, col:30> col:30 used x 'bool &'
| `-CompoundStmt 0x55f5da663bd8 <col:39, line:644:5>
|   |-BinaryOperator 0x55f5da663b80 <line:642:9, col:13> 'bool' lvalue '='
|   | |-DeclRefExpr 0x55f5da663b08 <col:9> 'bool' lvalue ParmVar 0x55f5da63e2f8 'x' 'bool &'
|   | `-ImplicitCastExpr 0x55f5da663b68 <col:13> 'bool' <LValueToRValue>
|   |   `-MemberExpr 0x55f5da663b38 <col:13> 'const bool' lvalue ->_status 0x55f5da643ef8
|   |     `-CXXThisExpr 0x55f5da663b28 <col:13> 'const Args *' implicit this
|   `-ReturnStmt 0x55f5da663bc8 <line:643:9, col:17>
|     `-UnaryOperator 0x55f5da663bb0 <col:16, col:17> 'const Args' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55f5da663ba0 <col:17> 'const Args *' this
|-CXXMethodDecl 0x55f5da63e480 <line:649:5, line:651:5> line:649:10 read_status 'bool () const'
| `-CompoundStmt 0x55f5da663c80 <col:30, line:651:5>
|   `-ReturnStmt 0x55f5da663c70 <line:650:9, col:16>
|     `-ImplicitCastExpr 0x55f5da663c58 <col:16> 'bool' <LValueToRValue>
|       `-MemberExpr 0x55f5da663c28 <col:16> 'bool' lvalue ->_read_status 0x55f5da621e00
|         `-ImplicitCastExpr 0x55f5da663c08 <col:16> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|           `-CXXThisExpr 0x55f5da663bf8 <col:16> 'const Args *' implicit this
|-CXXMethodDecl 0x55f5da63e5c8 <line:655:5, line:658:5> line:655:11 read_status 'Args &(bool &)'
| |-ParmVarDecl 0x55f5da63e538 <col:23, col:29> col:29 used x 'bool &'
| `-CompoundStmt 0x55f5da663d88 <col:32, line:658:5>
|   |-BinaryOperator 0x55f5da663d30 <line:656:9, col:13> 'bool' lvalue '='
|   | |-DeclRefExpr 0x55f5da663c98 <col:9> 'bool' lvalue ParmVar 0x55f5da63e538 'x' 'bool &'
|   | `-ImplicitCastExpr 0x55f5da663d18 <col:13> 'bool' <LValueToRValue>
|   |   `-MemberExpr 0x55f5da663ce8 <col:13> 'bool' lvalue ->_read_status 0x55f5da621e00
|   |     `-ImplicitCastExpr 0x55f5da663cc8 <col:13> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|   |       `-CXXThisExpr 0x55f5da663cb8 <col:13> 'Args *' implicit this
|   `-ReturnStmt 0x55f5da663d78 <line:657:9, col:17>
|     `-UnaryOperator 0x55f5da663d60 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55f5da663d50 <col:17> 'Args *' this
|-CXXMethodDecl 0x55f5da63e718 <line:660:5, line:663:5> line:660:17 read_status 'const Args &(bool &) const'
| |-ParmVarDecl 0x55f5da63e688 <col:29, col:35> col:35 used x 'bool &'
| `-CompoundStmt 0x55f5da663e98 <col:44, line:663:5>
|   |-BinaryOperator 0x55f5da663e40 <line:661:9, col:13> 'bool' lvalue '='
|   | |-DeclRefExpr 0x55f5da663da8 <col:9> 'bool' lvalue ParmVar 0x55f5da63e688 'x' 'bool &'
|   | `-ImplicitCastExpr 0x55f5da663e28 <col:13> 'bool' <LValueToRValue>
|   |   `-MemberExpr 0x55f5da663df8 <col:13> 'bool' lvalue ->_read_status 0x55f5da621e00
|   |     `-ImplicitCastExpr 0x55f5da663dd8 <col:13> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|   |       `-CXXThisExpr 0x55f5da663dc8 <col:13> 'const Args *' implicit this
|   `-ReturnStmt 0x55f5da663e88 <line:662:9, col:17>
|     `-UnaryOperator 0x55f5da663e70 <col:16, col:17> 'const Args' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55f5da663e60 <col:17> 'const Args *' this
|-CXXMethodDecl 0x55f5da63e7e0 <line:667:5, col:17> col:11 strip 'Args &()'
|-CXXMethodDecl 0x55f5da63e8a8 <line:675:5, col:17> col:9 execute 'int ()'
|-CXXMethodDecl 0x55f5da63e970 <line:684:5, col:17> col:9 consume 'int ()'
|-CXXMethodDecl 0x55f5da63ea38 <line:693:5, col:18> col:9 used complete 'int ()'
|-FunctionTemplateDecl 0x55f5da63ed48 <line:700:5, line:706:5> line:701:8 slot
| |-TemplateTypeParmDecl 0x55f5da63ead8 <line:700:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x55f5da63eca8 <line:701:5, line:706:5> line:701:8 slot 'T *(T &)'
|   |-ParmVarDecl 0x55f5da63ebb8 <col:13, col:16> col:16 referenced x 'T &'
|   `-CompoundStmt 0x55f5da666f30 <col:19, line:706:5>
|     `-IfStmt 0x55f5da666f08 <line:702:9, line:705:34> has_else
|       |-CXXDependentScopeMemberExpr 0x55f5da663f98 <line:702:13, col:34> '<dependent type>' lvalue ->value
|       |-ReturnStmt 0x55f5da666e38 <line:703:13, col:68>
|       | `-CXXReinterpretCastExpr 0x55f5da666e08 <col:20, col:68> 'T *' reinterpret_cast<T *> <Dependent>
|       |   `-CallExpr 0x55f5da666dc8 <col:42, col:67> '<dependent type>'
|       |     |-MemberExpr 0x55f5da666cd0 <col:42> '<bound member function type>' ->simple_slot 0x55f5da65ecd0
|       |     | `-CXXThisExpr 0x55f5da663fe0 <col:42> 'Args *' implicit this
|       |     |-CXXOperatorCallExpr 0x55f5da666d68 <col:54, col:55> '<dependent type>'
|       |     | |-UnresolvedLookupExpr 0x55f5da666d20 <col:54> '<overloaded function type>' lvalue (ADL) = 'operator&' 0x55f5da31b628
|       |     | `-DeclRefExpr 0x55f5da666d00 <col:55> 'T' lvalue ParmVar 0x55f5da63ebb8 'x' 'T &'
|       |     `-UnaryExprOrTypeTraitExpr 0x55f5da666da8 <col:58, col:66> 'unsigned long' sizeof 'T'
|       `-ReturnStmt 0x55f5da666ef8 <line:705:13, col:34>
|         `-CallExpr 0x55f5da666ed0 <col:20, col:34> '<dependent type>'
|           |-UnresolvedMemberExpr 0x55f5da666e58 <col:20> '<bound member function type>' lvalue
|           `-DeclRefExpr 0x55f5da666eb0 <col:33> 'T' lvalue ParmVar 0x55f5da63ebb8 'x' 'T &'
|-FunctionTemplateDecl 0x55f5da63f018 <line:711:5, line:717:5> line:712:8 initialized_slot
| |-TemplateTypeParmDecl 0x55f5da63eda8 <line:711:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x55f5da63ef78 <line:712:5, line:717:5> line:712:8 initialized_slot 'T *(T &)'
|   |-ParmVarDecl 0x55f5da63ee88 <col:25, col:28> col:28 referenced x 'T &'
|   `-CompoundStmt 0x55f5da667310 <col:31, line:717:5>
|     |-DeclStmt 0x55f5da667070 <line:713:9, col:23>
|     | `-VarDecl 0x55f5da666f58 <col:9, col:22> col:12 referenced s 'T *' nrvo cinit
|     |   `-CallExpr 0x55f5da667048 <col:16, col:22> '<dependent type>'
|     |     |-UnresolvedMemberExpr 0x55f5da666fd0 <col:16> '<bound member function type>' lvalue
|     |     `-DeclRefExpr 0x55f5da667028 <col:21> 'T' lvalue ParmVar 0x55f5da63ee88 'x' 'T &'
|     |-IfStmt 0x55f5da6672c0 <line:714:9, line:715:20>
|     | |-CXXDependentScopeMemberExpr 0x55f5da667168 <line:714:13, col:34> '<dependent type>' lvalue ->value
|     | `-BinaryOperator 0x55f5da6672a0 <line:715:13, col:20> '<dependent type>' '='
|     |   |-CXXOperatorCallExpr 0x55f5da667240 <col:13, col:14> '<dependent type>'
|     |   | |-UnresolvedLookupExpr 0x55f5da6671d0 <col:13> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55f5da4d2728 0x55f5da4d2348 0x55f5da4d1f78 0x55f5da4d1b98 0x55f5da4d17b8 0x55f5da4d13e8
|     |   | `-DeclRefExpr 0x55f5da6671b0 <col:14> 'T *' lvalue Var 0x55f5da666f58 's' 'T *'
|     |   `-CXXUnresolvedConstructExpr 0x55f5da667280 <col:18, col:20> 'T' 'T'
|     `-ReturnStmt 0x55f5da6672f8 <line:716:9, col:16>
|       `-DeclRefExpr 0x55f5da6672d8 <col:16> 'T *' lvalue Var 0x55f5da666f58 's' 'T *'
|-FunctionTemplateDecl 0x55f5da63f428 <line:721:5, line:726:5> line:722:11 set
| |-TemplateTypeParmDecl 0x55f5da63f078 <line:721:15, col:24> col:24 referenced typename depth 0 index 0 T
| |-TemplateTypeParmDecl 0x55f5da63f0f8 <col:27, col:36> col:36 referenced typename depth 0 index 1 V
| `-CXXMethodDecl 0x55f5da63f388 <line:722:5, line:726:5> line:722:11 set 'Args &(T &, const V &)'
|   |-ParmVarDecl 0x55f5da63f1d8 <col:15, col:18> col:18 referenced x 'T &'
|   |-ParmVarDecl 0x55f5da63f278 <col:21, col:30> col:30 referenced value 'const V &'
|   `-CompoundStmt 0x55f5da667620 <col:37, line:726:5>
|     |-IfStmt 0x55f5da6675b0 <line:723:9, line:724:18> has_var
|     | |-DeclStmt 0x55f5da6675d0 <line:723:13, col:26>
|     | | `-VarDecl 0x55f5da667378 <col:13, col:26> col:16 referenced s 'T *' cinit
|     | |   `-CallExpr 0x55f5da667468 <col:20, col:26> '<dependent type>'
|     | |     |-UnresolvedMemberExpr 0x55f5da6673f0 <col:20> '<bound member function type>' lvalue
|     | |     `-DeclRefExpr 0x55f5da667448 <col:25> 'T' lvalue ParmVar 0x55f5da63f1d8 'x' 'T &'
|     | |-DeclRefExpr 0x55f5da667490 <col:16> 'T *' lvalue Var 0x55f5da667378 's' 'T *'
|     | `-BinaryOperator 0x55f5da667590 <line:724:13, col:18> '<dependent type>' '='
|     |   |-CXXOperatorCallExpr 0x55f5da667540 <col:13, col:14> '<dependent type>'
|     |   | |-UnresolvedLookupExpr 0x55f5da6674d0 <col:13> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55f5da4d2728 0x55f5da4d2348 0x55f5da4d1f78 0x55f5da4d1b98 0x55f5da4d17b8 0x55f5da4d13e8
|     |   | `-DeclRefExpr 0x55f5da6674b0 <col:14> 'T *' lvalue Var 0x55f5da667378 's' 'T *'
|     |   `-DeclRefExpr 0x55f5da667570 <col:18> 'const V' lvalue ParmVar 0x55f5da63f278 'value' 'const V &'
|     `-ReturnStmt 0x55f5da667610 <line:725:9, col:17>
|       `-UnaryOperator 0x55f5da6675f8 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55f5da6675e8 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55f5da63f828 <line:730:5, line:737:5> line:731:10 base_read
| |-TemplateTypeParmDecl 0x55f5da63f490 <line:730:14, col:23> col:23 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x55f5da63f788 <line:731:5, line:737:5> line:731:10 base_read 'void (const char *, int, T &)'
|   |-ParmVarDecl 0x55f5da63f540 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55f5da63f5c0 <col:41, col:45> col:45 referenced flags 'int'
|   |-ParmVarDecl 0x55f5da63f668 <col:52, col:55> col:55 referenced variable 'T &'
|   `-CompoundStmt 0x55f5da668440 <col:65, line:737:5>
|     |-DeclStmt 0x55f5da6676b8 <line:732:9, col:26>
|     | `-VarDecl 0x55f5da667650 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     `-IfStmt 0x55f5da668408 <line:733:9, line:736:9> has_var
|       |-DeclStmt 0x55f5da668428 <line:733:13, col:58>
|       | `-VarDecl 0x55f5da6676e0 <col:13, col:58> col:20 referenced str 'String' cinit destroyed
|       |   `-ExprWithCleanups 0x55f5da6678c0 <col:26, col:58> 'String'
|       |     `-CXXConstructExpr 0x55f5da667890 <col:26, col:58> 'String' 'void (String &&)' elidable
|       |       `-MaterializeTemporaryExpr 0x55f5da667878 <col:26, col:58> 'String' xvalue
|       |         `-CXXBindTemporaryExpr 0x55f5da667858 <col:26, col:58> 'String' (CXXTemporary 0x55f5da667858)
|       |           `-CXXMemberCallExpr 0x55f5da6677e8 <col:26, col:58> 'String'
|       |             |-MemberExpr 0x55f5da667758 <col:26> '<bound member function type>' ->find 0x55f5da65e2e8
|       |             | `-CXXThisExpr 0x55f5da667748 <col:26> 'Args *' implicit this
|       |             |-ImplicitCastExpr 0x55f5da667820 <col:31> 'const char *' <LValueToRValue>
|       |             | `-DeclRefExpr 0x55f5da667788 <col:31> 'const char *' lvalue ParmVar 0x55f5da63f540 'keyword' 'const char *'
|       |             |-ImplicitCastExpr 0x55f5da667838 <col:40> 'int' <LValueToRValue>
|       |             | `-DeclRefExpr 0x55f5da6677a8 <col:40> 'int' lvalue ParmVar 0x55f5da63f5c0 'flags' 'int'
|       |             `-DeclRefExpr 0x55f5da6677c8 <col:47> 'Args::Slot *' lvalue Var 0x55f5da667650 'slot_status' 'Args::Slot *'
|       |-ImplicitCastExpr 0x55f5da667978 <col:20> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x55f5da667960 <col:20> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x55f5da667940 <col:20> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x55f5da667910 <col:20> '<bound member function type>' .operator int (String::*)() const 0x55f5da2de5f8
|       |       `-ImplicitCastExpr 0x55f5da6678f8 <col:20> 'const String' lvalue <NoOp>
|       |         `-DeclRefExpr 0x55f5da6678d8 <col:20> 'String' lvalue Var 0x55f5da6676e0 'str' 'String'
|       `-CompoundStmt 0x55f5da6683e8 <col:61, line:736:9>
|         |-DeclStmt 0x55f5da667e30 <line:734:13, col:76>
|         | `-VarDecl 0x55f5da6679c8 <col:13, col:75> col:16 referenced s 'T *' cinit
|         |   `-CallExpr 0x55f5da667e00 <col:20, col:75> '<dependent type>'
|         |     |-CXXDependentScopeMemberExpr 0x55f5da667d70 <col:20, col:55> '<dependent type>' lvalue ->slot
|         |     |-DeclRefExpr 0x55f5da667db8 <col:60> 'T' lvalue ParmVar 0x55f5da63f668 'variable' 'T &'
|         |     `-UnaryOperator 0x55f5da667de8 <col:70, col:71> 'Args' lvalue prefix '*' cannot overflow
|         |       `-CXXThisExpr 0x55f5da667dd8 <col:71> 'Args *' this
|         `-CallExpr 0x55f5da6683b8 <line:735:13, col:114> '<dependent type>'
|           |-MemberExpr 0x55f5da667e58 <col:13> '<bound member function type>' ->postparse 0x55f5da65e4f8
|           | `-CXXThisExpr 0x55f5da667e48 <col:13> 'Args *' implicit this
|           |-BinaryOperator 0x55f5da668378 <col:23, col:100> '<dependent type>' '&&'
|           | |-DeclRefExpr 0x55f5da667e88 <col:23> 'T *' lvalue Var 0x55f5da6679c8 's' 'T *'
|           | `-CallExpr 0x55f5da668338 <col:28, col:100> '<dependent type>'
|           |   |-CXXDependentScopeMemberExpr 0x55f5da668110 <col:28, col:63> '<dependent type>' lvalue ->parse
|           |   |-CXXUnresolvedConstructExpr 0x55f5da668210 <col:69, col:83> 'DefaultArg<T>' 'DefaultArg<T>'
|           |   |-DeclRefExpr 0x55f5da668230 <col:86> 'String' lvalue Var 0x55f5da6676e0 'str' 'String'
|           |   |-CXXOperatorCallExpr 0x55f5da6682e0 <col:91, col:92> '<dependent type>'
|           |   | |-UnresolvedLookupExpr 0x55f5da668270 <col:91> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55f5da4d2728 0x55f5da4d2348 0x55f5da4d1f78 0x55f5da4d1b98 0x55f5da4d17b8 0x55f5da4d13e8
|           |   | `-DeclRefExpr 0x55f5da668250 <col:92> 'T *' lvalue Var 0x55f5da6679c8 's' 'T *'
|           |   `-UnaryOperator 0x55f5da668320 <col:95, col:96> 'Args' lvalue prefix '*' cannot overflow
|           |     `-CXXThisExpr 0x55f5da668310 <col:96> 'Args *' this
|           `-DeclRefExpr 0x55f5da668398 <col:103> 'Args::Slot *' lvalue Var 0x55f5da667650 'slot_status' 'Args::Slot *'
|-FunctionTemplateDecl 0x55f5da63fd78 <line:739:5, line:745:5> line:740:10 base_read_or_set
| |-TemplateTypeParmDecl 0x55f5da63f898 <line:739:14, col:23> col:23 referenced typename depth 0 index 0 T
| |-TemplateTypeParmDecl 0x55f5da63f918 <col:26, col:35> col:35 referenced typename depth 0 index 1 V
| `-CXXMethodDecl 0x55f5da63fcd8 <line:740:5, line:745:5> line:740:10 base_read_or_set 'void (const char *, int, T &, const V &)'
|   |-ParmVarDecl 0x55f5da63f9d8 <col:27, col:39> col:39 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55f5da63fa58 <col:48, col:52> col:52 referenced flags 'int'
|   |-ParmVarDecl 0x55f5da63faf8 <col:59, col:62> col:62 referenced variable 'T &'
|   |-ParmVarDecl 0x55f5da63fb98 <col:72, col:81> col:81 referenced value 'const V &'
|   `-CompoundStmt 0x55f5da6692e0 <col:88, line:745:5>
|     |-DeclStmt 0x55f5da6684d8 <line:741:9, col:26>
|     | `-VarDecl 0x55f5da668470 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     |-DeclStmt 0x55f5da6686f8 <line:742:9, col:55>
|     | `-VarDecl 0x55f5da668500 <col:9, col:54> col:16 referenced str 'String' cinit destroyed
|     |   `-ExprWithCleanups 0x55f5da6686e0 <col:22, col:54> 'String'
|     |     `-CXXConstructExpr 0x55f5da6686b0 <col:22, col:54> 'String' 'void (String &&)' elidable
|     |       `-MaterializeTemporaryExpr 0x55f5da668698 <col:22, col:54> 'String' xvalue
|     |         `-CXXBindTemporaryExpr 0x55f5da668678 <col:22, col:54> 'String' (CXXTemporary 0x55f5da668678)
|     |           `-CXXMemberCallExpr 0x55f5da668608 <col:22, col:54> 'String'
|     |             |-MemberExpr 0x55f5da668578 <col:22> '<bound member function type>' ->find 0x55f5da65e2e8
|     |             | `-CXXThisExpr 0x55f5da668568 <col:22> 'Args *' implicit this
|     |             |-ImplicitCastExpr 0x55f5da668640 <col:27> 'const char *' <LValueToRValue>
|     |             | `-DeclRefExpr 0x55f5da6685a8 <col:27> 'const char *' lvalue ParmVar 0x55f5da63f9d8 'keyword' 'const char *'
|     |             |-ImplicitCastExpr 0x55f5da668658 <col:36> 'int' <LValueToRValue>
|     |             | `-DeclRefExpr 0x55f5da6685c8 <col:36> 'int' lvalue ParmVar 0x55f5da63fa58 'flags' 'int'
|     |             `-DeclRefExpr 0x55f5da6685e8 <col:43> 'Args::Slot *' lvalue Var 0x55f5da668470 'slot_status' 'Args::Slot *'
|     |-DeclStmt 0x55f5da668ad0 <line:743:9, col:72>
|     | `-VarDecl 0x55f5da668748 <col:9, col:71> col:12 referenced s 'T *' cinit
|     |   `-CallExpr 0x55f5da668aa0 <col:16, col:71> '<dependent type>'
|     |     |-CXXDependentScopeMemberExpr 0x55f5da668a10 <col:16, col:51> '<dependent type>' lvalue ->slot
|     |     |-DeclRefExpr 0x55f5da668a58 <col:56> 'T' lvalue ParmVar 0x55f5da63faf8 'variable' 'T &'
|     |     `-UnaryOperator 0x55f5da668a88 <col:66, col:67> 'Args' lvalue prefix '*' cannot overflow
|     |       `-CXXThisExpr 0x55f5da668a78 <col:67> 'Args *' this
|     `-CallExpr 0x55f5da6692b0 <line:744:9, col:139> '<dependent type>'
|       |-MemberExpr 0x55f5da668af8 <col:9> '<bound member function type>' ->postparse 0x55f5da65e4f8
|       | `-CXXThisExpr 0x55f5da668ae8 <col:9> 'Args *' implicit this
|       |-BinaryOperator 0x55f5da669270 <col:19, col:125> '<dependent type>' '&&'
|       | |-DeclRefExpr 0x55f5da668b28 <col:19> 'T *' lvalue Var 0x55f5da668748 's' 'T *'
|       | `-ParenExpr 0x55f5da669250 <col:24, col:125> '<dependent type>'
|       |   `-ConditionalOperator 0x55f5da669220 <col:25, col:124> '<dependent type>'
|       |     |-ImplicitCastExpr 0x55f5da669208 <col:25> 'bool' <MemberPointerToBoolean>
|       |     | `-ImplicitCastExpr 0x55f5da6691f0 <col:25> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |     |   `-CXXMemberCallExpr 0x55f5da6691d0 <col:25> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     |     `-MemberExpr 0x55f5da6691a0 <col:25> '<bound member function type>' .operator int (String::*)() const 0x55f5da2de5f8
|       |     |       `-ImplicitCastExpr 0x55f5da669188 <col:25> 'const String' lvalue <NoOp>
|       |     |         `-DeclRefExpr 0x55f5da668b48 <col:25> 'String' lvalue Var 0x55f5da668500 'str' 'String'
|       |     |-CallExpr 0x55f5da668ff8 <col:31, col:103> '<dependent type>'
|       |     | |-CXXDependentScopeMemberExpr 0x55f5da668dd0 <col:31, col:66> '<dependent type>' lvalue ->parse
|       |     | |-CXXUnresolvedConstructExpr 0x55f5da668ed0 <col:72, col:86> 'DefaultArg<T>' 'DefaultArg<T>'
|       |     | |-DeclRefExpr 0x55f5da668ef0 <col:89> 'String' lvalue Var 0x55f5da668500 'str' 'String'
|       |     | |-CXXOperatorCallExpr 0x55f5da668fa0 <col:94, col:95> '<dependent type>'
|       |     | | |-UnresolvedLookupExpr 0x55f5da668f30 <col:94> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55f5da4d2728 0x55f5da4d2348 0x55f5da4d1f78 0x55f5da4d1b98 0x55f5da4d17b8 0x55f5da4d13e8
|       |     | | `-DeclRefExpr 0x55f5da668f10 <col:95> 'T *' lvalue Var 0x55f5da668748 's' 'T *'
|       |     | `-UnaryOperator 0x55f5da668fe0 <col:98, col:99> 'Args' lvalue prefix '*' cannot overflow
|       |     |   `-CXXThisExpr 0x55f5da668fd0 <col:99> 'Args *' this
|       |     `-ParenExpr 0x55f5da669168 <col:107, col:124> '<dependent type>'
|       |       `-BinaryOperator 0x55f5da669148 <col:108, col:120> '<dependent type>' ','
|       |         |-BinaryOperator 0x55f5da669118 <col:108, col:113> '<dependent type>' '='
|       |         | |-CXXOperatorCallExpr 0x55f5da6690c8 <col:108, col:109> '<dependent type>'
|       |         | | |-UnresolvedLookupExpr 0x55f5da669058 <col:108> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55f5da4d2728 0x55f5da4d2348 0x55f5da4d1f78 0x55f5da4d1b98 0x55f5da4d17b8 0x55f5da4d13e8
|       |         | | `-DeclRefExpr 0x55f5da669038 <col:109> 'T *' lvalue Var 0x55f5da668748 's' 'T *'
|       |         | `-DeclRefExpr 0x55f5da6690f8 <col:113> 'const V' lvalue ParmVar 0x55f5da63fb98 'value' 'const V &'
|       |         `-CXXBoolLiteralExpr 0x55f5da669138 <col:120> 'bool' true
|       `-DeclRefExpr 0x55f5da669290 <col:128> 'Args::Slot *' lvalue Var 0x55f5da668470 'slot_status' 'Args::Slot *'
|-FunctionTemplateDecl 0x55f5da6402a8 <line:747:5, line:754:5> line:748:10 base_read
| |-TemplateTypeParmDecl 0x55f5da63fdf0 <line:747:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55f5da63fe68 <col:26, col:35> col:35 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55f5da640208 <line:748:5, line:754:5> line:748:10 base_read 'void (const char *, int, P, T &)'
|   |-ParmVarDecl 0x55f5da63ff28 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55f5da63ffa8 <col:41, col:45> col:45 referenced flags 'int'
|   |-ParmVarDecl 0x55f5da640020 <col:52, col:54> col:54 referenced parser 'P'
|   |-ParmVarDecl 0x55f5da6400c8 <col:62, col:65> col:65 referenced variable 'T &'
|   `-CompoundStmt 0x55f5da669ed8 <col:75, line:754:5>
|     |-DeclStmt 0x55f5da669388 <line:749:9, col:26>
|     | `-VarDecl 0x55f5da669320 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     `-IfStmt 0x55f5da669ea0 <line:750:9, line:753:9> has_var
|       |-DeclStmt 0x55f5da669ec0 <line:750:13, col:58>
|       | `-VarDecl 0x55f5da6693b0 <col:13, col:58> col:20 referenced str 'String' cinit destroyed
|       |   `-ExprWithCleanups 0x55f5da669590 <col:26, col:58> 'String'
|       |     `-CXXConstructExpr 0x55f5da669560 <col:26, col:58> 'String' 'void (String &&)' elidable
|       |       `-MaterializeTemporaryExpr 0x55f5da669548 <col:26, col:58> 'String' xvalue
|       |         `-CXXBindTemporaryExpr 0x55f5da669528 <col:26, col:58> 'String' (CXXTemporary 0x55f5da669528)
|       |           `-CXXMemberCallExpr 0x55f5da6694b8 <col:26, col:58> 'String'
|       |             |-MemberExpr 0x55f5da669428 <col:26> '<bound member function type>' ->find 0x55f5da65e2e8
|       |             | `-CXXThisExpr 0x55f5da669418 <col:26> 'Args *' implicit this
|       |             |-ImplicitCastExpr 0x55f5da6694f0 <col:31> 'const char *' <LValueToRValue>
|       |             | `-DeclRefExpr 0x55f5da669458 <col:31> 'const char *' lvalue ParmVar 0x55f5da63ff28 'keyword' 'const char *'
|       |             |-ImplicitCastExpr 0x55f5da669508 <col:40> 'int' <LValueToRValue>
|       |             | `-DeclRefExpr 0x55f5da669478 <col:40> 'int' lvalue ParmVar 0x55f5da63ffa8 'flags' 'int'
|       |             `-DeclRefExpr 0x55f5da669498 <col:47> 'Args::Slot *' lvalue Var 0x55f5da669320 'slot_status' 'Args::Slot *'
|       |-ImplicitCastExpr 0x55f5da669648 <col:20> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x55f5da669630 <col:20> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x55f5da669610 <col:20> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x55f5da6695e0 <col:20> '<bound member function type>' .operator int (String::*)() const 0x55f5da2de5f8
|       |       `-ImplicitCastExpr 0x55f5da6695c8 <col:20> 'const String' lvalue <NoOp>
|       |         `-DeclRefExpr 0x55f5da6695a8 <col:20> 'String' lvalue Var 0x55f5da6693b0 'str' 'String'
|       `-CompoundStmt 0x55f5da669e80 <col:61, line:753:9>
|         |-DeclStmt 0x55f5da669a20 <line:751:13, col:63>
|         | `-VarDecl 0x55f5da669698 <col:13, col:62> col:16 referenced s 'T *' cinit
|         |   `-CallExpr 0x55f5da6699f0 <col:20, col:62> '<dependent type>'
|         |     |-CXXDependentScopeMemberExpr 0x55f5da669960 <col:20, col:42> '<dependent type>' lvalue ->slot
|         |     |-DeclRefExpr 0x55f5da6699a8 <col:47> 'T' lvalue ParmVar 0x55f5da6400c8 'variable' 'T &'
|         |     `-UnaryOperator 0x55f5da6699d8 <col:57, col:58> 'Args' lvalue prefix '*' cannot overflow
|         |       `-CXXThisExpr 0x55f5da6699c8 <col:58> 'Args *' this
|         `-CallExpr 0x55f5da669e50 <line:752:13, col:92> '<dependent type>'
|           |-MemberExpr 0x55f5da669a48 <col:13> '<bound member function type>' ->postparse 0x55f5da65e4f8
|           | `-CXXThisExpr 0x55f5da669a38 <col:13> 'Args *' implicit this
|           |-BinaryOperator 0x55f5da669e10 <col:23, col:78> '<dependent type>' '&&'
|           | |-DeclRefExpr 0x55f5da669a78 <col:23> 'T *' lvalue Var 0x55f5da669698 's' 'T *'
|           | `-CallExpr 0x55f5da669dd0 <col:28, col:78> '<dependent type>'
|           |   |-CXXDependentScopeMemberExpr 0x55f5da669c60 <col:28, col:50> '<dependent type>' lvalue ->parse
|           |   |-DeclRefExpr 0x55f5da669ca8 <col:56> 'P' lvalue ParmVar 0x55f5da640020 'parser' 'P'
|           |   |-DeclRefExpr 0x55f5da669cc8 <col:64> 'String' lvalue Var 0x55f5da6693b0 'str' 'String'
|           |   |-CXXOperatorCallExpr 0x55f5da669d78 <col:69, col:70> '<dependent type>'
|           |   | |-UnresolvedLookupExpr 0x55f5da669d08 <col:69> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55f5da4d2728 0x55f5da4d2348 0x55f5da4d1f78 0x55f5da4d1b98 0x55f5da4d17b8 0x55f5da4d13e8
|           |   | `-DeclRefExpr 0x55f5da669ce8 <col:70> 'T *' lvalue Var 0x55f5da669698 's' 'T *'
|           |   `-UnaryOperator 0x55f5da669db8 <col:73, col:74> 'Args' lvalue prefix '*' cannot overflow
|           |     `-CXXThisExpr 0x55f5da669da8 <col:74> 'Args *' this
|           `-DeclRefExpr 0x55f5da669e30 <col:81> 'Args::Slot *' lvalue Var 0x55f5da669320 'slot_status' 'Args::Slot *'
|-FunctionTemplateDecl 0x55f5da640908 <line:756:5, line:762:5> line:757:10 base_read_or_set
| |-TemplateTypeParmDecl 0x55f5da640320 <line:756:14, col:23> col:23 referenced typename depth 0 index 0 T
| |-TemplateTypeParmDecl 0x55f5da640398 <col:26, col:35> col:35 referenced typename depth 0 index 1 P
| |-TemplateTypeParmDecl 0x55f5da640418 <col:38, col:47> col:47 referenced typename depth 0 index 2 V
| `-CXXMethodDecl 0x55f5da640868 <line:757:5, line:762:5> line:757:10 base_read_or_set 'void (const char *, int, P, T &, const V &)'
|   |-ParmVarDecl 0x55f5da6404e0 <col:27, col:39> col:39 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55f5da640560 <col:48, col:52> col:52 referenced flags 'int'
|   |-ParmVarDecl 0x55f5da6405d8 <col:59, col:61> col:61 referenced parser 'P'
|   |-ParmVarDecl 0x55f5da640678 <col:69, col:72> col:72 referenced variable 'T &'
|   |-ParmVarDecl 0x55f5da640718 <col:82, col:91> col:91 referenced value 'const V &'
|   `-CompoundStmt 0x55f5da66ac68 <col:98, line:762:5>
|     |-DeclStmt 0x55f5da669f70 <line:758:9, col:26>
|     | `-VarDecl 0x55f5da669f08 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     |-DeclStmt 0x55f5da66a190 <line:759:9, col:55>
|     | `-VarDecl 0x55f5da669f98 <col:9, col:54> col:16 referenced str 'String' cinit destroyed
|     |   `-ExprWithCleanups 0x55f5da66a178 <col:22, col:54> 'String'
|     |     `-CXXConstructExpr 0x55f5da66a148 <col:22, col:54> 'String' 'void (String &&)' elidable
|     |       `-MaterializeTemporaryExpr 0x55f5da66a130 <col:22, col:54> 'String' xvalue
|     |         `-CXXBindTemporaryExpr 0x55f5da66a110 <col:22, col:54> 'String' (CXXTemporary 0x55f5da66a110)
|     |           `-CXXMemberCallExpr 0x55f5da66a0a0 <col:22, col:54> 'String'
|     |             |-MemberExpr 0x55f5da66a010 <col:22> '<bound member function type>' ->find 0x55f5da65e2e8
|     |             | `-CXXThisExpr 0x55f5da66a000 <col:22> 'Args *' implicit this
|     |             |-ImplicitCastExpr 0x55f5da66a0d8 <col:27> 'const char *' <LValueToRValue>
|     |             | `-DeclRefExpr 0x55f5da66a040 <col:27> 'const char *' lvalue ParmVar 0x55f5da6404e0 'keyword' 'const char *'
|     |             |-ImplicitCastExpr 0x55f5da66a0f0 <col:36> 'int' <LValueToRValue>
|     |             | `-DeclRefExpr 0x55f5da66a060 <col:36> 'int' lvalue ParmVar 0x55f5da640560 'flags' 'int'
|     |             `-DeclRefExpr 0x55f5da66a080 <col:43> 'Args::Slot *' lvalue Var 0x55f5da669f08 'slot_status' 'Args::Slot *'
|     |-DeclStmt 0x55f5da66a5b0 <line:760:9, col:59>
|     | `-VarDecl 0x55f5da66a1e8 <col:9, col:58> col:12 referenced s 'T *' cinit
|     |   `-CallExpr 0x55f5da66a580 <col:16, col:58> '<dependent type>'
|     |     |-CXXDependentScopeMemberExpr 0x55f5da66a4f0 <col:16, col:38> '<dependent type>' lvalue ->slot
|     |     |-DeclRefExpr 0x55f5da66a538 <col:43> 'T' lvalue ParmVar 0x55f5da640678 'variable' 'T &'
|     |     `-UnaryOperator 0x55f5da66a568 <col:53, col:54> 'Args' lvalue prefix '*' cannot overflow
|     |       `-CXXThisExpr 0x55f5da66a558 <col:54> 'Args *' this
|     `-CallExpr 0x55f5da66ac38 <line:761:9, col:117> '<dependent type>'
|       |-MemberExpr 0x55f5da66a5d8 <col:9> '<bound member function type>' ->postparse 0x55f5da65e4f8
|       | `-CXXThisExpr 0x55f5da66a5c8 <col:9> 'Args *' implicit this
|       |-BinaryOperator 0x55f5da66abf8 <col:19, col:103> '<dependent type>' '&&'
|       | |-DeclRefExpr 0x55f5da66a608 <col:19> 'T *' lvalue Var 0x55f5da66a1e8 's' 'T *'
|       | `-ParenExpr 0x55f5da66abd8 <col:24, col:103> '<dependent type>'
|       |   `-ConditionalOperator 0x55f5da66aba8 <col:25, col:102> '<dependent type>'
|       |     |-ImplicitCastExpr 0x55f5da66ab90 <col:25> 'bool' <MemberPointerToBoolean>
|       |     | `-ImplicitCastExpr 0x55f5da66ab78 <col:25> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |     |   `-CXXMemberCallExpr 0x55f5da66ab58 <col:25> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     |     `-MemberExpr 0x55f5da66ab28 <col:25> '<bound member function type>' .operator int (String::*)() const 0x55f5da2de5f8
|       |     |       `-ImplicitCastExpr 0x55f5da66ab10 <col:25> 'const String' lvalue <NoOp>
|       |     |         `-DeclRefExpr 0x55f5da66a628 <col:25> 'String' lvalue Var 0x55f5da669f98 'str' 'String'
|       |     |-CallExpr 0x55f5da66a980 <col:31, col:81> '<dependent type>'
|       |     | |-CXXDependentScopeMemberExpr 0x55f5da66a810 <col:31, col:53> '<dependent type>' lvalue ->parse
|       |     | |-DeclRefExpr 0x55f5da66a858 <col:59> 'P' lvalue ParmVar 0x55f5da6405d8 'parser' 'P'
|       |     | |-DeclRefExpr 0x55f5da66a878 <col:67> 'String' lvalue Var 0x55f5da669f98 'str' 'String'
|       |     | |-CXXOperatorCallExpr 0x55f5da66a928 <col:72, col:73> '<dependent type>'
|       |     | | |-UnresolvedLookupExpr 0x55f5da66a8b8 <col:72> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55f5da4d2728 0x55f5da4d2348 0x55f5da4d1f78 0x55f5da4d1b98 0x55f5da4d17b8 0x55f5da4d13e8
|       |     | | `-DeclRefExpr 0x55f5da66a898 <col:73> 'T *' lvalue Var 0x55f5da66a1e8 's' 'T *'
|       |     | `-UnaryOperator 0x55f5da66a968 <col:76, col:77> 'Args' lvalue prefix '*' cannot overflow
|       |     |   `-CXXThisExpr 0x55f5da66a958 <col:77> 'Args *' this
|       |     `-ParenExpr 0x55f5da66aaf0 <col:85, col:102> '<dependent type>'
|       |       `-BinaryOperator 0x55f5da66aad0 <col:86, col:98> '<dependent type>' ','
|       |         |-BinaryOperator 0x55f5da66aaa0 <col:86, col:91> '<dependent type>' '='
|       |         | |-CXXOperatorCallExpr 0x55f5da66aa50 <col:86, col:87> '<dependent type>'
|       |         | | |-UnresolvedLookupExpr 0x55f5da66a9e0 <col:86> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55f5da4d2728 0x55f5da4d2348 0x55f5da4d1f78 0x55f5da4d1b98 0x55f5da4d17b8 0x55f5da4d13e8
|       |         | | `-DeclRefExpr 0x55f5da66a9c0 <col:87> 'T *' lvalue Var 0x55f5da66a1e8 's' 'T *'
|       |         | `-DeclRefExpr 0x55f5da66aa80 <col:91> 'const V' lvalue ParmVar 0x55f5da640718 'value' 'const V &'
|       |         `-CXXBoolLiteralExpr 0x55f5da66aac0 <col:98> 'bool' true
|       `-DeclRefExpr 0x55f5da66ac18 <col:106> 'Args::Slot *' lvalue Var 0x55f5da669f08 'slot_status' 'Args::Slot *'
|-FunctionTemplateDecl 0x55f5da640f78 <line:764:5, line:773:5> line:765:10 base_read
| |-TemplateTypeParmDecl 0x55f5da640988 <line:764:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55f5da640a08 <col:26, col:35> col:35 referenced typename depth 0 index 1 T1
| |-TemplateTypeParmDecl 0x55f5da640a88 <col:39, col:48> col:48 referenced typename depth 0 index 2 T2
| `-CXXMethodDecl 0x55f5da640ed8 <line:765:5, line:773:5> line:765:10 base_read 'void (const char *, int, P, T1 &, T2 &)'
|   |-ParmVarDecl 0x55f5da640b50 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55f5da640bd0 <col:41, col:45> col:45 referenced flags 'int'
|   |-ParmVarDecl 0x55f5da640c48 <line:766:20, col:22> col:22 referenced parser 'P'
|   |-ParmVarDecl 0x55f5da640ce8 <col:30, col:34> col:34 referenced variable1 'T1 &'
|   |-ParmVarDecl 0x55f5da640d88 <col:45, col:49> col:49 referenced variable2 'T2 &'
|   `-CompoundStmt 0x55f5da66bc48 <col:60, line:773:5>
|     |-DeclStmt 0x55f5da66ad10 <line:767:9, col:26>
|     | `-VarDecl 0x55f5da66aca8 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     `-IfStmt 0x55f5da66bc10 <line:768:9, line:772:9> has_var
|       |-DeclStmt 0x55f5da66bc30 <line:768:13, col:58>
|       | `-VarDecl 0x55f5da66ad38 <col:13, col:58> col:20 referenced str 'String' cinit destroyed
|       |   `-ExprWithCleanups 0x55f5da66af18 <col:26, col:58> 'String'
|       |     `-CXXConstructExpr 0x55f5da66aee8 <col:26, col:58> 'String' 'void (String &&)' elidable
|       |       `-MaterializeTemporaryExpr 0x55f5da66aed0 <col:26, col:58> 'String' xvalue
|       |         `-CXXBindTemporaryExpr 0x55f5da66aeb0 <col:26, col:58> 'String' (CXXTemporary 0x55f5da66aeb0)
|       |           `-CXXMemberCallExpr 0x55f5da66ae40 <col:26, col:58> 'String'
|       |             |-MemberExpr 0x55f5da66adb0 <col:26> '<bound member function type>' ->find 0x55f5da65e2e8
|       |             | `-CXXThisExpr 0x55f5da66ada0 <col:26> 'Args *' implicit this
|       |             |-ImplicitCastExpr 0x55f5da66ae78 <col:31> 'const char *' <LValueToRValue>
|       |             | `-DeclRefExpr 0x55f5da66ade0 <col:31> 'const char *' lvalue ParmVar 0x55f5da640b50 'keyword' 'const char *'
|       |             |-ImplicitCastExpr 0x55f5da66ae90 <col:40> 'int' <LValueToRValue>
|       |             | `-DeclRefExpr 0x55f5da66ae00 <col:40> 'int' lvalue ParmVar 0x55f5da640bd0 'flags' 'int'
|       |             `-DeclRefExpr 0x55f5da66ae20 <col:47> 'Args::Slot *' lvalue Var 0x55f5da66aca8 'slot_status' 'Args::Slot *'
|       |-ImplicitCastExpr 0x55f5da66afd0 <col:20> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x55f5da66afb8 <col:20> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x55f5da66af98 <col:20> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x55f5da66af68 <col:20> '<bound member function type>' .operator int (String::*)() const 0x55f5da2de5f8
|       |       `-ImplicitCastExpr 0x55f5da66af50 <col:20> 'const String' lvalue <NoOp>
|       |         `-DeclRefExpr 0x55f5da66af30 <col:20> 'String' lvalue Var 0x55f5da66ad38 'str' 'String'
|       `-CompoundStmt 0x55f5da66bbe8 <col:61, line:772:9>
|         |-DeclStmt 0x55f5da66b310 <line:769:13, col:66>
|         | `-VarDecl 0x55f5da66b028 <col:13, col:65> col:17 referenced s1 'T1 *' cinit
|         |   `-CallExpr 0x55f5da66b2e0 <col:22, col:65> '<dependent type>'
|         |     |-CXXDependentScopeMemberExpr 0x55f5da66b250 <col:22, col:44> '<dependent type>' lvalue ->slot
|         |     |-DeclRefExpr 0x55f5da66b298 <col:49> 'T1' lvalue ParmVar 0x55f5da640ce8 'variable1' 'T1 &'
|         |     `-UnaryOperator 0x55f5da66b2c8 <col:60, col:61> 'Args' lvalue prefix '*' cannot overflow
|         |       `-CXXThisExpr 0x55f5da66b2b8 <col:61> 'Args *' this
|         |-DeclStmt 0x55f5da66b680 <line:770:13, col:66>
|         | `-VarDecl 0x55f5da66b398 <col:13, col:65> col:17 referenced s2 'T2 *' cinit
|         |   `-CallExpr 0x55f5da66b650 <col:22, col:65> '<dependent type>'
|         |     |-CXXDependentScopeMemberExpr 0x55f5da66b5c0 <col:22, col:44> '<dependent type>' lvalue ->slot
|         |     |-DeclRefExpr 0x55f5da66b608 <col:49> 'T2' lvalue ParmVar 0x55f5da640d88 'variable2' 'T2 &'
|         |     `-UnaryOperator 0x55f5da66b638 <col:60, col:61> 'Args' lvalue prefix '*' cannot overflow
|         |       `-CXXThisExpr 0x55f5da66b628 <col:61> 'Args *' this
|         `-CallExpr 0x55f5da66bbb8 <line:771:13, col:105> '<dependent type>'
|           |-MemberExpr 0x55f5da66b6a8 <col:13> '<bound member function type>' ->postparse 0x55f5da65e4f8
|           | `-CXXThisExpr 0x55f5da66b698 <col:13> 'Args *' implicit this
|           |-BinaryOperator 0x55f5da66bb78 <col:23, col:91> '<dependent type>' '&&'
|           | |-BinaryOperator 0x55f5da66b718 <col:23, col:29> '<dependent type>' '&&'
|           | | |-DeclRefExpr 0x55f5da66b6d8 <col:23> 'T1 *' lvalue Var 0x55f5da66b028 's1' 'T1 *'
|           | | `-DeclRefExpr 0x55f5da66b6f8 <col:29> 'T2 *' lvalue Var 0x55f5da66b398 's2' 'T2 *'
|           | `-CallExpr 0x55f5da66bb30 <col:35, col:91> '<dependent type>'
|           |   |-CXXDependentScopeMemberExpr 0x55f5da66b900 <col:35, col:57> '<dependent type>' lvalue ->parse
|           |   |-DeclRefExpr 0x55f5da66b948 <col:63> 'P' lvalue ParmVar 0x55f5da640c48 'parser' 'P'
|           |   |-DeclRefExpr 0x55f5da66b968 <col:71> 'String' lvalue Var 0x55f5da66ad38 'str' 'String'
|           |   |-CXXOperatorCallExpr 0x55f5da66ba18 <col:76, col:77> '<dependent type>'
|           |   | |-UnresolvedLookupExpr 0x55f5da66b9a8 <col:76> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55f5da4d2728 0x55f5da4d2348 0x55f5da4d1f78 0x55f5da4d1b98 0x55f5da4d17b8 0x55f5da4d13e8
|           |   | `-DeclRefExpr 0x55f5da66b988 <col:77> 'T1 *' lvalue Var 0x55f5da66b028 's1' 'T1 *'
|           |   |-CXXOperatorCallExpr 0x55f5da66bad8 <col:81, col:82> '<dependent type>'
|           |   | |-UnresolvedLookupExpr 0x55f5da66ba68 <col:81> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55f5da4d2728 0x55f5da4d2348 0x55f5da4d1f78 0x55f5da4d1b98 0x55f5da4d17b8 0x55f5da4d13e8
|           |   | `-DeclRefExpr 0x55f5da66ba48 <col:82> 'T2 *' lvalue Var 0x55f5da66b398 's2' 'T2 *'
|           |   `-UnaryOperator 0x55f5da66bb18 <col:86, col:87> 'Args' lvalue prefix '*' cannot overflow
|           |     `-CXXThisExpr 0x55f5da66bb08 <col:87> 'Args *' this
|           `-DeclRefExpr 0x55f5da66bb98 <col:94> 'Args::Slot *' lvalue Var 0x55f5da66aca8 'slot_status' 'Args::Slot *'
|-FunctionTemplateDecl 0x55f5da641368 <line:775:5, line:780:5> line:776:10 base_read_with
| |-TemplateTypeParmDecl 0x55f5da640ff8 <line:775:14, col:23> col:23 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x55f5da6412c8 <line:776:5, line:780:5> line:776:10 base_read_with 'void (const char *, int, P)'
|   |-ParmVarDecl 0x55f5da6410b0 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55f5da641130 <col:46, col:50> col:50 referenced flags 'int'
|   |-ParmVarDecl 0x55f5da6411a8 <col:57, col:59> col:59 referenced parser 'P'
|   `-CompoundStmt 0x55f5da66c160 <col:67, line:780:5>
|     |-DeclStmt 0x55f5da66bce0 <line:777:9, col:26>
|     | `-VarDecl 0x55f5da66bc78 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     `-IfStmt 0x55f5da66c128 <line:778:9, line:779:60> has_var
|       |-DeclStmt 0x55f5da66c148 <line:778:13, col:58>
|       | `-VarDecl 0x55f5da66bd08 <col:13, col:58> col:20 referenced str 'String' cinit destroyed
|       |   `-ExprWithCleanups 0x55f5da66bee8 <col:26, col:58> 'String'
|       |     `-CXXConstructExpr 0x55f5da66beb8 <col:26, col:58> 'String' 'void (String &&)' elidable
|       |       `-MaterializeTemporaryExpr 0x55f5da66bea0 <col:26, col:58> 'String' xvalue
|       |         `-CXXBindTemporaryExpr 0x55f5da66be80 <col:26, col:58> 'String' (CXXTemporary 0x55f5da66be80)
|       |           `-CXXMemberCallExpr 0x55f5da66be10 <col:26, col:58> 'String'
|       |             |-MemberExpr 0x55f5da66bd80 <col:26> '<bound member function type>' ->find 0x55f5da65e2e8
|       |             | `-CXXThisExpr 0x55f5da66bd70 <col:26> 'Args *' implicit this
|       |             |-ImplicitCastExpr 0x55f5da66be48 <col:31> 'const char *' <LValueToRValue>
|       |             | `-DeclRefExpr 0x55f5da66bdb0 <col:31> 'const char *' lvalue ParmVar 0x55f5da6410b0 'keyword' 'const char *'
|       |             |-ImplicitCastExpr 0x55f5da66be60 <col:40> 'int' <LValueToRValue>
|       |             | `-DeclRefExpr 0x55f5da66bdd0 <col:40> 'int' lvalue ParmVar 0x55f5da641130 'flags' 'int'
|       |             `-DeclRefExpr 0x55f5da66bdf0 <col:47> 'Args::Slot *' lvalue Var 0x55f5da66bc78 'slot_status' 'Args::Slot *'
|       |-ImplicitCastExpr 0x55f5da66bfa0 <col:20> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x55f5da66bf88 <col:20> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x55f5da66bf68 <col:20> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x55f5da66bf38 <col:20> '<bound member function type>' .operator int (String::*)() const 0x55f5da2de5f8
|       |       `-ImplicitCastExpr 0x55f5da66bf20 <col:20> 'const String' lvalue <NoOp>
|       |         `-DeclRefExpr 0x55f5da66bf00 <col:20> 'String' lvalue Var 0x55f5da66bd08 'str' 'String'
|       `-CallExpr 0x55f5da66c0f8 <line:779:13, col:60> '<dependent type>'
|         |-MemberExpr 0x55f5da66bfc8 <col:13> '<bound member function type>' ->postparse 0x55f5da65e4f8
|         | `-CXXThisExpr 0x55f5da66bfb8 <col:13> 'Args *' implicit this
|         |-CallExpr 0x55f5da66c0a8 <col:23, col:46> '<dependent type>'
|         | |-CXXDependentScopeMemberExpr 0x55f5da66c018 <col:23, col:30> '<dependent type>' lvalue .parse
|         | | `-DeclRefExpr 0x55f5da66bff8 <col:23> 'P' lvalue ParmVar 0x55f5da6411a8 'parser' 'P'
|         | |-DeclRefExpr 0x55f5da66c060 <col:36> 'String' lvalue Var 0x55f5da66bd08 'str' 'String'
|         | `-UnaryOperator 0x55f5da66c090 <col:41, col:42> 'Args' lvalue prefix '*' cannot overflow
|         |   `-CXXThisExpr 0x55f5da66c080 <col:42> 'Args *' this
|         `-DeclRefExpr 0x55f5da66c0d8 <col:49> 'Args::Slot *' lvalue Var 0x55f5da66bc78 'slot_status' 'Args::Slot *'
|-FunctionTemplateDecl 0x55f5da641708 <line:782:5, line:792:5> line:783:10 base_read_all_with
| |-TemplateTypeParmDecl 0x55f5da6413d8 <line:782:14, col:23> col:23 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x55f5da641668 <line:783:5, line:792:5> line:783:10 base_read_all_with 'void (const char *, int, P)'
|   |-ParmVarDecl 0x55f5da641490 <col:29, col:41> col:41 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55f5da641510 <col:50, col:54> col:54 referenced flags 'int'
|   |-ParmVarDecl 0x55f5da641588 <col:61, col:63> col:63 referenced parser 'P'
|   `-CompoundStmt 0x55f5da66cad0 <col:71, line:792:5>
|     |-DeclStmt 0x55f5da66c1f8 <line:784:9, col:26>
|     | `-VarDecl 0x55f5da66c190 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     |-DeclStmt 0x55f5da66c2c8 <line:785:9, col:29>
|     | `-VarDecl 0x55f5da66c228 <col:9, col:28> col:13 referenced read_status 'int' cinit
|     |   `-UnaryOperator 0x55f5da66c2b0 <col:27, col:28> 'int' prefix '-'
|     |     `-IntegerLiteral 0x55f5da66c290 <col:28> 'int' 1
|     |-WhileStmt 0x55f5da66c980 <line:786:9, line:790:9> has_var
|     | |-DeclStmt 0x55f5da66c9a0 <line:786:16, col:61>
|     | | `-VarDecl 0x55f5da66c2f0 <col:16, col:61> col:23 referenced str 'String' cinit destroyed
|     | |   `-ExprWithCleanups 0x55f5da66c4d0 <col:29, col:61> 'String'
|     | |     `-CXXConstructExpr 0x55f5da66c4a0 <col:29, col:61> 'String' 'void (String &&)' elidable
|     | |       `-MaterializeTemporaryExpr 0x55f5da66c488 <col:29, col:61> 'String' xvalue
|     | |         `-CXXBindTemporaryExpr 0x55f5da66c468 <col:29, col:61> 'String' (CXXTemporary 0x55f5da66c468)
|     | |           `-CXXMemberCallExpr 0x55f5da66c3f8 <col:29, col:61> 'String'
|     | |             |-MemberExpr 0x55f5da66c368 <col:29> '<bound member function type>' ->find 0x55f5da65e2e8
|     | |             | `-CXXThisExpr 0x55f5da66c358 <col:29> 'Args *' implicit this
|     | |             |-ImplicitCastExpr 0x55f5da66c430 <col:34> 'const char *' <LValueToRValue>
|     | |             | `-DeclRefExpr 0x55f5da66c398 <col:34> 'const char *' lvalue ParmVar 0x55f5da641490 'keyword' 'const char *'
|     | |             |-ImplicitCastExpr 0x55f5da66c448 <col:43> 'int' <LValueToRValue>
|     | |             | `-DeclRefExpr 0x55f5da66c3b8 <col:43> 'int' lvalue ParmVar 0x55f5da641510 'flags' 'int'
|     | |             `-DeclRefExpr 0x55f5da66c3d8 <col:50> 'Args::Slot *' lvalue Var 0x55f5da66c190 'slot_status' 'Args::Slot *'
|     | |-ImplicitCastExpr 0x55f5da66c588 <col:23> 'bool' <MemberPointerToBoolean>
|     | | `-ImplicitCastExpr 0x55f5da66c570 <col:23> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|     | |   `-CXXMemberCallExpr 0x55f5da66c550 <col:23> 'String::unspecified_bool_type':'int (String::*)() const'
|     | |     `-MemberExpr 0x55f5da66c520 <col:23> '<bound member function type>' .operator int (String::*)() const 0x55f5da2de5f8
|     | |       `-ImplicitCastExpr 0x55f5da66c508 <col:23> 'const String' lvalue <NoOp>
|     | |         `-DeclRefExpr 0x55f5da66c4e8 <col:23> 'String' lvalue Var 0x55f5da66c2f0 'str' 'String'
|     | `-CompoundStmt 0x55f5da66c958 <col:64, line:790:9>
|     |   |-CallExpr 0x55f5da66c6e0 <line:787:13, col:60> '<dependent type>'
|     |   | |-MemberExpr 0x55f5da66c5b0 <col:13> '<bound member function type>' ->postparse 0x55f5da65e4f8
|     |   | | `-CXXThisExpr 0x55f5da66c5a0 <col:13> 'Args *' implicit this
|     |   | |-CallExpr 0x55f5da66c690 <col:23, col:46> '<dependent type>'
|     |   | | |-CXXDependentScopeMemberExpr 0x55f5da66c600 <col:23, col:30> '<dependent type>' lvalue .parse
|     |   | | | `-DeclRefExpr 0x55f5da66c5e0 <col:23> 'P' lvalue ParmVar 0x55f5da641588 'parser' 'P'
|     |   | | |-DeclRefExpr 0x55f5da66c648 <col:36> 'String' lvalue Var 0x55f5da66c2f0 'str' 'String'
|     |   | | `-UnaryOperator 0x55f5da66c678 <col:41, col:42> 'Args' lvalue prefix '*' cannot overflow
|     |   | |   `-CXXThisExpr 0x55f5da66c668 <col:42> 'Args *' this
|     |   | `-DeclRefExpr 0x55f5da66c6c0 <col:49> 'Args::Slot *' lvalue Var 0x55f5da66c190 'slot_status' 'Args::Slot *'
|     |   |-BinaryOperator 0x55f5da66c878 <line:788:13, col:49> 'int' lvalue '='
|     |   | |-DeclRefExpr 0x55f5da66c710 <col:13> 'int' lvalue Var 0x55f5da66c228 'read_status' 'int'
|     |   | `-ImplicitCastExpr 0x55f5da66c860 <col:27, col:49> 'int' <IntegralCast>
|     |   |   `-BinaryOperator 0x55f5da66c840 <col:27, col:49> 'bool' '&&'
|     |   |     |-ParenExpr 0x55f5da66c7a8 <col:27, col:44> 'bool'
|     |   |     | `-BinaryOperator 0x55f5da66c788 <col:28, col:43> 'bool' '!='
|     |   |     |   |-ImplicitCastExpr 0x55f5da66c770 <col:28> 'int' <LValueToRValue>
|     |   |     |   | `-DeclRefExpr 0x55f5da66c730 <col:28> 'int' lvalue Var 0x55f5da66c228 'read_status' 'int'
|     |   |     |   `-IntegerLiteral 0x55f5da66c750 <col:43> 'int' 0
|     |   |     `-ImplicitCastExpr 0x55f5da66c828 <col:49> 'bool' <LValueToRValue>
|     |   |       `-MemberExpr 0x55f5da66c7f8 <col:49> 'bool' lvalue ->_read_status 0x55f5da621e00
|     |   |         `-ImplicitCastExpr 0x55f5da66c7d8 <col:49> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|     |   |           `-CXXThisExpr 0x55f5da66c7c8 <col:49> 'Args *' implicit this
|     |   `-CompoundAssignOperator 0x55f5da66c928 <line:789:13, col:23> 'int' lvalue '&=' ComputeLHSTy='int' ComputeResultTy='int'
|     |     |-DeclRefExpr 0x55f5da66c898 <col:13> 'int' lvalue ParmVar 0x55f5da641510 'flags' 'int'
|     |     `-UnaryOperator 0x55f5da66c910 <col:22, col:23> 'int' prefix '~' cannot overflow
|     |       `-ImplicitCastExpr 0x55f5da66c8f8 <col:23> 'int' <LValueToRValue>
|     |         `-DeclRefExpr 0x55f5da66c8d8 <col:23> 'const int' lvalue Var 0x55f5da62aa48 'mandatory' 'const int' non_odr_use_constant
|     `-BinaryOperator 0x55f5da66cab0 <line:791:9, col:41> 'bool' lvalue '='
|       |-MemberExpr 0x55f5da66c9e8 <col:9> 'bool' lvalue ->_read_status 0x55f5da621e00
|       | `-ImplicitCastExpr 0x55f5da66c9c8 <col:9> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|       |   `-CXXThisExpr 0x55f5da66c9b8 <col:9> 'Args *' implicit this
|       `-ParenExpr 0x55f5da66ca90 <col:24, col:41> 'bool'
|         `-BinaryOperator 0x55f5da66ca70 <col:25, col:40> 'bool' '=='
|           |-ImplicitCastExpr 0x55f5da66ca58 <col:25> 'int' <LValueToRValue>
|           | `-DeclRefExpr 0x55f5da66ca18 <col:25> 'int' lvalue Var 0x55f5da66c228 'read_status' 'int'
|           `-IntegerLiteral 0x55f5da66ca38 <col:40> 'int' 1
|-FunctionTemplateDecl 0x55f5da641be8 <line:794:5, line:805:5> line:795:10 base_read_all_with
| |-TemplateTypeParmDecl 0x55f5da641778 <line:794:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55f5da6417f8 <col:26, col:35> col:35 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55f5da641b48 <line:795:5, line:805:5> line:795:10 base_read_all_with 'void (const char *, int, P, T &)'
|   |-ParmVarDecl 0x55f5da6418b8 <col:29, col:41> col:41 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55f5da641938 <col:50, col:54> col:54 referenced flags 'int'
|   |-ParmVarDecl 0x55f5da6419b0 <col:61, col:63> col:63 referenced parser 'P'
|   |-ParmVarDecl 0x55f5da641a58 <col:71, col:74> col:74 referenced variable 'T &'
|   `-CompoundStmt 0x55f5da66da60 <col:84, line:805:5>
|     |-DeclStmt 0x55f5da66cb78 <line:796:9, col:26>
|     | `-VarDecl 0x55f5da66cb10 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     |-DeclStmt 0x55f5da66cc48 <line:797:9, col:29>
|     | `-VarDecl 0x55f5da66cba8 <col:9, col:28> col:13 referenced read_status 'int' cinit
|     |   `-UnaryOperator 0x55f5da66cc30 <col:27, col:28> 'int' prefix '-'
|     |     `-IntegerLiteral 0x55f5da66cc10 <col:28> 'int' 1
|     |-DeclStmt 0x55f5da66cf80 <line:798:9, col:71>
|     | `-VarDecl 0x55f5da66cc98 <col:9, col:70> col:12 referenced s 'T *' cinit
|     |   `-CallExpr 0x55f5da66cf50 <col:16, col:70> '<dependent type>'
|     |     |-CXXDependentScopeMemberExpr 0x55f5da66cec0 <col:16, col:38> '<dependent type>' lvalue ->initialized_slot
|     |     |-DeclRefExpr 0x55f5da66cf08 <col:55> 'T' lvalue ParmVar 0x55f5da641a58 'variable' 'T &'
|     |     `-UnaryOperator 0x55f5da66cf38 <col:65, col:66> 'Args' lvalue prefix '*' cannot overflow
|     |       `-CXXThisExpr 0x55f5da66cf28 <col:66> 'Args *' this
|     |-WhileStmt 0x55f5da66d910 <line:799:9, line:803:9> has_var
|     | |-DeclStmt 0x55f5da66d930 <line:799:16, col:61>
|     | | `-VarDecl 0x55f5da66cfa8 <col:16, col:61> col:23 referenced str 'String' cinit destroyed
|     | |   `-ExprWithCleanups 0x55f5da66d188 <col:29, col:61> 'String'
|     | |     `-CXXConstructExpr 0x55f5da66d158 <col:29, col:61> 'String' 'void (String &&)' elidable
|     | |       `-MaterializeTemporaryExpr 0x55f5da66d140 <col:29, col:61> 'String' xvalue
|     | |         `-CXXBindTemporaryExpr 0x55f5da66d120 <col:29, col:61> 'String' (CXXTemporary 0x55f5da66d120)
|     | |           `-CXXMemberCallExpr 0x55f5da66d0b0 <col:29, col:61> 'String'
|     | |             |-MemberExpr 0x55f5da66d020 <col:29> '<bound member function type>' ->find 0x55f5da65e2e8
|     | |             | `-CXXThisExpr 0x55f5da66d010 <col:29> 'Args *' implicit this
|     | |             |-ImplicitCastExpr 0x55f5da66d0e8 <col:34> 'const char *' <LValueToRValue>
|     | |             | `-DeclRefExpr 0x55f5da66d050 <col:34> 'const char *' lvalue ParmVar 0x55f5da6418b8 'keyword' 'const char *'
|     | |             |-ImplicitCastExpr 0x55f5da66d100 <col:43> 'int' <LValueToRValue>
|     | |             | `-DeclRefExpr 0x55f5da66d070 <col:43> 'int' lvalue ParmVar 0x55f5da641938 'flags' 'int'
|     | |             `-DeclRefExpr 0x55f5da66d090 <col:50> 'Args::Slot *' lvalue Var 0x55f5da66cb10 'slot_status' 'Args::Slot *'
|     | |-ImplicitCastExpr 0x55f5da66d240 <col:23> 'bool' <MemberPointerToBoolean>
|     | | `-ImplicitCastExpr 0x55f5da66d228 <col:23> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|     | |   `-CXXMemberCallExpr 0x55f5da66d208 <col:23> 'String::unspecified_bool_type':'int (String::*)() const'
|     | |     `-MemberExpr 0x55f5da66d1d8 <col:23> '<bound member function type>' .operator int (String::*)() const 0x55f5da2de5f8
|     | |       `-ImplicitCastExpr 0x55f5da66d1c0 <col:23> 'const String' lvalue <NoOp>
|     | |         `-DeclRefExpr 0x55f5da66d1a0 <col:23> 'String' lvalue Var 0x55f5da66cfa8 'str' 'String'
|     | `-CompoundStmt 0x55f5da66d8e8 <col:64, line:803:9>
|     |   |-CallExpr 0x55f5da66d670 <line:800:13, col:92> '<dependent type>'
|     |   | |-MemberExpr 0x55f5da66d268 <col:13> '<bound member function type>' ->postparse 0x55f5da65e4f8
|     |   | | `-CXXThisExpr 0x55f5da66d258 <col:13> 'Args *' implicit this
|     |   | |-BinaryOperator 0x55f5da66d630 <col:23, col:78> '<dependent type>' '&&'
|     |   | | |-DeclRefExpr 0x55f5da66d298 <col:23> 'T *' lvalue Var 0x55f5da66cc98 's' 'T *'
|     |   | | `-CallExpr 0x55f5da66d5f0 <col:28, col:78> '<dependent type>'
|     |   | |   |-CXXDependentScopeMemberExpr 0x55f5da66d480 <col:28, col:50> '<dependent type>' lvalue ->parse
|     |   | |   |-DeclRefExpr 0x55f5da66d4c8 <col:56> 'P' lvalue ParmVar 0x55f5da6419b0 'parser' 'P'
|     |   | |   |-DeclRefExpr 0x55f5da66d4e8 <col:64> 'String' lvalue Var 0x55f5da66cfa8 'str' 'String'
|     |   | |   |-CXXOperatorCallExpr 0x55f5da66d598 <col:69, col:70> '<dependent type>'
|     |   | |   | |-UnresolvedLookupExpr 0x55f5da66d528 <col:69> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55f5da4d2728 0x55f5da4d2348 0x55f5da4d1f78 0x55f5da4d1b98 0x55f5da4d17b8 0x55f5da4d13e8
|     |   | |   | `-DeclRefExpr 0x55f5da66d508 <col:70> 'T *' lvalue Var 0x55f5da66cc98 's' 'T *'
|     |   | |   `-UnaryOperator 0x55f5da66d5d8 <col:73, col:74> 'Args' lvalue prefix '*' cannot overflow
|     |   | |     `-CXXThisExpr 0x55f5da66d5c8 <col:74> 'Args *' this
|     |   | `-DeclRefExpr 0x55f5da66d650 <col:81> 'Args::Slot *' lvalue Var 0x55f5da66cb10 'slot_status' 'Args::Slot *'
|     |   |-BinaryOperator 0x55f5da66d808 <line:801:13, col:49> 'int' lvalue '='
|     |   | |-DeclRefExpr 0x55f5da66d6a0 <col:13> 'int' lvalue Var 0x55f5da66cba8 'read_status' 'int'
|     |   | `-ImplicitCastExpr 0x55f5da66d7f0 <col:27, col:49> 'int' <IntegralCast>
|     |   |   `-BinaryOperator 0x55f5da66d7d0 <col:27, col:49> 'bool' '&&'
|     |   |     |-ParenExpr 0x55f5da66d738 <col:27, col:44> 'bool'
|     |   |     | `-BinaryOperator 0x55f5da66d718 <col:28, col:43> 'bool' '!='
|     |   |     |   |-ImplicitCastExpr 0x55f5da66d700 <col:28> 'int' <LValueToRValue>
|     |   |     |   | `-DeclRefExpr 0x55f5da66d6c0 <col:28> 'int' lvalue Var 0x55f5da66cba8 'read_status' 'int'
|     |   |     |   `-IntegerLiteral 0x55f5da66d6e0 <col:43> 'int' 0
|     |   |     `-ImplicitCastExpr 0x55f5da66d7b8 <col:49> 'bool' <LValueToRValue>
|     |   |       `-MemberExpr 0x55f5da66d788 <col:49> 'bool' lvalue ->_read_status 0x55f5da621e00
|     |   |         `-ImplicitCastExpr 0x55f5da66d768 <col:49> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|     |   |           `-CXXThisExpr 0x55f5da66d758 <col:49> 'Args *' implicit this
|     |   `-CompoundAssignOperator 0x55f5da66d8b8 <line:802:13, col:23> 'int' lvalue '&=' ComputeLHSTy='int' ComputeResultTy='int'
|     |     |-DeclRefExpr 0x55f5da66d828 <col:13> 'int' lvalue ParmVar 0x55f5da641938 'flags' 'int'
|     |     `-UnaryOperator 0x55f5da66d8a0 <col:22, col:23> 'int' prefix '~' cannot overflow
|     |       `-ImplicitCastExpr 0x55f5da66d888 <col:23> 'int' <LValueToRValue>
|     |         `-DeclRefExpr 0x55f5da66d868 <col:23> 'const int' lvalue Var 0x55f5da62aa48 'mandatory' 'const int' non_odr_use_constant
|     `-BinaryOperator 0x55f5da66da40 <line:804:9, col:41> 'bool' lvalue '='
|       |-MemberExpr 0x55f5da66d978 <col:9> 'bool' lvalue ->_read_status 0x55f5da621e00
|       | `-ImplicitCastExpr 0x55f5da66d958 <col:9> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|       |   `-CXXThisExpr 0x55f5da66d948 <col:9> 'Args *' implicit this
|       `-ParenExpr 0x55f5da66da20 <col:24, col:41> 'bool'
|         `-BinaryOperator 0x55f5da66da00 <col:25, col:40> 'bool' '=='
|           |-ImplicitCastExpr 0x55f5da66d9e8 <col:25> 'int' <LValueToRValue>
|           | `-DeclRefExpr 0x55f5da66d9a8 <col:25> 'int' lvalue Var 0x55f5da66cba8 'read_status' 'int'
|           `-IntegerLiteral 0x55f5da66d9c8 <col:40> 'int' 1
|-FunctionTemplateDecl 0x55f5da6421c8 <line:807:5, line:821:5> line:808:10 base_read_all
| |-TemplateTypeParmDecl 0x55f5da641c60 <line:807:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55f5da641cd8 <col:26, col:35> col:35 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55f5da642128 <line:808:5, line:821:5> line:808:10 base_read_all 'void (const char *, int, P, Vector<T> &)'
|   |-ParmVarDecl 0x55f5da641d98 <col:24, col:36> col:36 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55f5da641e18 <col:45, col:49> col:49 referenced flags 'int'
|   |-ParmVarDecl 0x55f5da641e90 <col:56, col:58> col:58 referenced parser 'P'
|   |-ParmVarDecl 0x55f5da641fe0 <col:66, col:77> col:77 referenced variable 'Vector<T> &'
|   `-CompoundStmt 0x55f5da66e868 <col:87, line:821:5>
|     |-DeclStmt 0x55f5da66db10 <line:809:9, col:26>
|     | `-VarDecl 0x55f5da66daa8 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     |-DeclStmt 0x55f5da66dbe0 <line:810:9, col:29>
|     | `-VarDecl 0x55f5da66db40 <col:9, col:28> col:13 referenced read_status 'int' cinit
|     |   `-UnaryOperator 0x55f5da66dbc8 <col:27, col:28> 'int' prefix '-'
|     |     `-IntegerLiteral 0x55f5da66dba8 <col:28> 'int' 1
|     |-DeclStmt 0x55f5da66de28 <line:811:9, col:38>
|     | `-VarDecl 0x55f5da66dd10 <col:9, col:37> col:20 referenced s 'Vector<T> *' cinit
|     |   `-CallExpr 0x55f5da66de00 <col:24, col:37> '<dependent type>'
|     |     |-UnresolvedMemberExpr 0x55f5da66dd88 <col:24> '<bound member function type>' lvalue
|     |     `-DeclRefExpr 0x55f5da66dde0 <col:29> 'Vector<T>' lvalue ParmVar 0x55f5da641fe0 'variable' 'Vector<T> &'
|     |-WhileStmt 0x55f5da66e718 <line:812:9, line:819:9> has_var
|     | |-DeclStmt 0x55f5da66e738 <line:812:16, col:61>
|     | | `-VarDecl 0x55f5da66de50 <col:16, col:61> col:23 referenced str 'String' cinit destroyed
|     | |   `-ExprWithCleanups 0x55f5da66e030 <col:29, col:61> 'String'
|     | |     `-CXXConstructExpr 0x55f5da66e000 <col:29, col:61> 'String' 'void (String &&)' elidable
|     | |       `-MaterializeTemporaryExpr 0x55f5da66dfe8 <col:29, col:61> 'String' xvalue
|     | |         `-CXXBindTemporaryExpr 0x55f5da66dfc8 <col:29, col:61> 'String' (CXXTemporary 0x55f5da66dfc8)
|     | |           `-CXXMemberCallExpr 0x55f5da66df58 <col:29, col:61> 'String'
|     | |             |-MemberExpr 0x55f5da66dec8 <col:29> '<bound member function type>' ->find 0x55f5da65e2e8
|     | |             | `-CXXThisExpr 0x55f5da66deb8 <col:29> 'Args *' implicit this
|     | |             |-ImplicitCastExpr 0x55f5da66df90 <col:34> 'const char *' <LValueToRValue>
|     | |             | `-DeclRefExpr 0x55f5da66def8 <col:34> 'const char *' lvalue ParmVar 0x55f5da641d98 'keyword' 'const char *'
|     | |             |-ImplicitCastExpr 0x55f5da66dfa8 <col:43> 'int' <LValueToRValue>
|     | |             | `-DeclRefExpr 0x55f5da66df18 <col:43> 'int' lvalue ParmVar 0x55f5da641e18 'flags' 'int'
|     | |             `-DeclRefExpr 0x55f5da66df38 <col:50> 'Args::Slot *' lvalue Var 0x55f5da66daa8 'slot_status' 'Args::Slot *'
|     | |-ImplicitCastExpr 0x55f5da66e0e8 <col:23> 'bool' <MemberPointerToBoolean>
|     | | `-ImplicitCastExpr 0x55f5da66e0d0 <col:23> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|     | |   `-CXXMemberCallExpr 0x55f5da66e0b0 <col:23> 'String::unspecified_bool_type':'int (String::*)() const'
|     | |     `-MemberExpr 0x55f5da66e080 <col:23> '<bound member function type>' .operator int (String::*)() const 0x55f5da2de5f8
|     | |       `-ImplicitCastExpr 0x55f5da66e068 <col:23> 'const String' lvalue <NoOp>
|     | |         `-DeclRefExpr 0x55f5da66e048 <col:23> 'String' lvalue Var 0x55f5da66de50 'str' 'String'
|     | `-CompoundStmt 0x55f5da66e6e0 <col:64, line:819:9>
|     |   |-DeclStmt 0x55f5da66e1a8 <line:813:13, col:23>
|     |   | `-VarDecl 0x55f5da66e110 <col:13, col:22> col:15 referenced sx 'T' cinit
|     |   |   `-CXXUnresolvedConstructExpr 0x55f5da66e188 <col:20, col:22> 'T' 'T'
|     |   |-CallExpr 0x55f5da66e328 <line:814:13, col:64> '<dependent type>'
|     |   | |-MemberExpr 0x55f5da66e1d0 <col:13> '<bound member function type>' ->postparse 0x55f5da65e4f8
|     |   | | `-CXXThisExpr 0x55f5da66e1c0 <col:13> 'Args *' implicit this
|     |   | |-CallExpr 0x55f5da66e2d0 <col:23, col:50> '<dependent type>'
|     |   | | |-CXXDependentScopeMemberExpr 0x55f5da66e220 <col:23, col:30> '<dependent type>' lvalue .parse
|     |   | | | `-DeclRefExpr 0x55f5da66e200 <col:23> 'P' lvalue ParmVar 0x55f5da641e90 'parser' 'P'
|     |   | | |-DeclRefExpr 0x55f5da66e268 <col:36> 'String' lvalue Var 0x55f5da66de50 'str' 'String'
|     |   | | |-DeclRefExpr 0x55f5da66e288 <col:41> 'T' lvalue Var 0x55f5da66e110 'sx' 'T'
|     |   | | `-UnaryOperator 0x55f5da66e2b8 <col:45, col:46> 'Args' lvalue prefix '*' cannot overflow
|     |   | |   `-CXXThisExpr 0x55f5da66e2a8 <col:46> 'Args *' this
|     |   | `-DeclRefExpr 0x55f5da66e308 <col:53> 'Args::Slot *' lvalue Var 0x55f5da66daa8 'slot_status' 'Args::Slot *'
|     |   |-IfStmt 0x55f5da66e480 <line:815:13, line:816:32>
|     |   | |-ImplicitCastExpr 0x55f5da66e3b8 <line:815:17> 'bool' <LValueToRValue>
|     |   | | `-MemberExpr 0x55f5da66e388 <col:17> 'bool' lvalue ->_read_status 0x55f5da621e00
|     |   | |   `-ImplicitCastExpr 0x55f5da66e368 <col:17> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|     |   | |     `-CXXThisExpr 0x55f5da66e358 <col:17> 'Args *' implicit this
|     |   | `-CallExpr 0x55f5da66e458 <line:816:17, col:32> '<dependent type>'
|     |   |   |-CXXDependentScopeMemberExpr 0x55f5da66e3f0 <col:17, col:20> '<dependent type>' lvalue ->push_back
|     |   |   | `-DeclRefExpr 0x55f5da66e3d0 <col:17> 'Vector<T> *' lvalue Var 0x55f5da66dd10 's' 'Vector<T> *'
|     |   |   `-DeclRefExpr 0x55f5da66e438 <col:30> 'T' lvalue Var 0x55f5da66e110 'sx' 'T'
|     |   |-BinaryOperator 0x55f5da66e600 <line:817:13, col:49> 'int' lvalue '='
|     |   | |-DeclRefExpr 0x55f5da66e498 <col:13> 'int' lvalue Var 0x55f5da66db40 'read_status' 'int'
|     |   | `-ImplicitCastExpr 0x55f5da66e5e8 <col:27, col:49> 'int' <IntegralCast>
|     |   |   `-BinaryOperator 0x55f5da66e5c8 <col:27, col:49> 'bool' '&&'
|     |   |     |-ParenExpr 0x55f5da66e530 <col:27, col:44> 'bool'
|     |   |     | `-BinaryOperator 0x55f5da66e510 <col:28, col:43> 'bool' '!='
|     |   |     |   |-ImplicitCastExpr 0x55f5da66e4f8 <col:28> 'int' <LValueToRValue>
|     |   |     |   | `-DeclRefExpr 0x55f5da66e4b8 <col:28> 'int' lvalue Var 0x55f5da66db40 'read_status' 'int'
|     |   |     |   `-IntegerLiteral 0x55f5da66e4d8 <col:43> 'int' 0
|     |   |     `-ImplicitCastExpr 0x55f5da66e5b0 <col:49> 'bool' <LValueToRValue>
|     |   |       `-MemberExpr 0x55f5da66e580 <col:49> 'bool' lvalue ->_read_status 0x55f5da621e00
|     |   |         `-ImplicitCastExpr 0x55f5da66e560 <col:49> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|     |   |           `-CXXThisExpr 0x55f5da66e550 <col:49> 'Args *' implicit this
|     |   `-CompoundAssignOperator 0x55f5da66e6b0 <line:818:13, col:23> 'int' lvalue '&=' ComputeLHSTy='int' ComputeResultTy='int'
|     |     |-DeclRefExpr 0x55f5da66e620 <col:13> 'int' lvalue ParmVar 0x55f5da641e18 'flags' 'int'
|     |     `-UnaryOperator 0x55f5da66e698 <col:22, col:23> 'int' prefix '~' cannot overflow
|     |       `-ImplicitCastExpr 0x55f5da66e680 <col:23> 'int' <LValueToRValue>
|     |         `-DeclRefExpr 0x55f5da66e660 <col:23> 'const int' lvalue Var 0x55f5da62aa48 'mandatory' 'const int' non_odr_use_constant
|     `-BinaryOperator 0x55f5da66e848 <line:820:9, col:41> 'bool' lvalue '='
|       |-MemberExpr 0x55f5da66e780 <col:9> 'bool' lvalue ->_read_status 0x55f5da621e00
|       | `-ImplicitCastExpr 0x55f5da66e760 <col:9> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|       |   `-CXXThisExpr 0x55f5da66e750 <col:9> 'Args *' implicit this
|       `-ParenExpr 0x55f5da66e828 <col:24, col:41> 'bool'
|         `-BinaryOperator 0x55f5da66e808 <col:25, col:40> 'bool' '=='
|           |-ImplicitCastExpr 0x55f5da66e7f0 <col:25> 'int' <LValueToRValue>
|           | `-DeclRefExpr 0x55f5da66e7b0 <col:25> 'int' lvalue Var 0x55f5da66db40 'read_status' 'int'
|           `-IntegerLiteral 0x55f5da66e7d0 <col:40> 'int' 1
|-AccessSpecDecl 0x55f5da642240 <line:824:3, col:10> col:3 private
|-CXXRecordDecl 0x55f5da642268 prev 0x55f5da628d48 <line:826:5, line:833:5> line:826:12 referenced struct Slot definition
| |-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple non_trivial has_const_param implicit_has_const_param
| | |-MoveConstructor
| | |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| | |-MoveAssignment
| | `-Destructor non_trivial user_declared
| |-CXXRecordDecl 0x55f5da642360 <col:5, col:12> col:12 implicit referenced struct Slot
| |-CXXConstructorDecl 0x55f5da642450 <line:827:9, line:828:9> line:827:9 used Slot 'void ()'
| | `-CompoundStmt 0x55f5da66e8a0 <col:16, line:828:9>
| |-CXXDestructorDecl 0x55f5da642540 <line:829:9, line:830:9> line:829:17 used ~Slot 'void () noexcept' virtual
| | `-CompoundStmt 0x55f5da66e8b0 <col:25, line:830:9>
| |-CXXMethodDecl 0x55f5da642640 <line:831:9, col:32> col:22 store 'void ()' virtual pure
| |-FieldDecl 0x55f5da6426f0 <line:832:9, col:15> col:15 _next 'Args::Slot *'
| |-CXXMethodDecl 0x55f5da642798 <line:826:12> col:12 implicit operator= 'Args::Slot &(const Args::Slot &)' inline default noexcept-unevaluated 0x55f5da642798
| | `-ParmVarDecl 0x55f5da6428a8 <col:12> col:12 'const Args::Slot &'
| `-CXXConstructorDecl 0x55f5da643068 <col:12> col:12 implicit constexpr Slot 'void (const Args::Slot &)' inline default noexcept-unevaluated 0x55f5da643068
|   `-ParmVarDecl 0x55f5da643178 <col:12> col:12 'const Args::Slot &'
|-CXXRecordDecl 0x55f5da642918 <line:835:5, line:848:5> line:835:12 struct BytesSlot definition
| |-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor
| | |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveConstructor needs_overload_resolution
| | |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| | |-MoveAssignment needs_overload_resolution
| | `-Destructor non_trivial user_declared needs_overload_resolution
| |-public 'Args::Slot'
| |-CXXRecordDecl 0x55f5da642a78 <col:5, col:12> col:12 implicit referenced struct BytesSlot
| |-CXXConstructorDecl 0x55f5da642c70 <line:836:9, line:838:9> line:836:9 BytesSlot 'void (void *, size_t)'
| | |-ParmVarDecl 0x55f5da642b20 <col:19, col:25> col:25 used ptr 'void *'
| | |-ParmVarDecl 0x55f5da642b98 <col:30, col:37> col:37 used size 'size_t':'unsigned long'
| | |-CXXCtorInitializer 'Args::Slot'
| | | `-CXXConstructExpr 0x55f5da66ea90 <col:9> 'Args::Slot' 'void ()'
| | |-CXXCtorInitializer Field 0x55f5da642f28 '_ptr' 'void *'
| | | `-ImplicitCastExpr 0x55f5da66e900 <line:837:20> 'void *' <LValueToRValue>
| | |   `-DeclRefExpr 0x55f5da66e8c0 <col:20> 'void *' lvalue ParmVar 0x55f5da642b20 'ptr' 'void *'
| | |-CXXCtorInitializer Field 0x55f5da642f90 '_slot' 'char *'
| | | `-CXXNewExpr 0x55f5da66e988 <col:32, col:45> 'char *' array Function 0x55f5da101268 'operator new[]' 'void *(std::size_t)'
| | |   `-ImplicitCastExpr 0x55f5da66e970 <col:41> 'size_t':'unsigned long' <LValueToRValue>
| | |     `-DeclRefExpr 0x55f5da66e940 <col:41> 'size_t':'unsigned long' lvalue ParmVar 0x55f5da642b98 'size' 'size_t':'unsigned long'
| | |-CXXCtorInitializer Field 0x55f5da642ff0 '_size' 'size_t':'unsigned long'
| | | `-ImplicitCastExpr 0x55f5da66ea50 <col:55> 'size_t':'unsigned long' <LValueToRValue>
| | |   `-DeclRefExpr 0x55f5da66ea10 <col:55> 'size_t':'unsigned long' lvalue ParmVar 0x55f5da642b98 'size' 'size_t':'unsigned long'
| | `-CompoundStmt 0x55f5da66eb10 <col:61, line:838:9>
| |-CXXDestructorDecl 0x55f5da642d70 <line:839:9, line:841:9> line:839:9 ~BytesSlot 'void () noexcept'
| | |-Overrides: [ 0x55f5da642540 Slot::~Slot 'void () noexcept' ]
| | `-CompoundStmt 0x55f5da66eb98 <col:22, line:841:9>
| |   `-CXXDeleteExpr 0x55f5da66eb78 <line:840:13, col:22> 'void' array Function 0x55f5da1015c8 'operator delete[]' 'void (void *) noexcept'
| |     `-ImplicitCastExpr 0x55f5da66eb60 <col:22> 'char *' <LValueToRValue>
| |       `-MemberExpr 0x55f5da66eb30 <col:22> 'char *' lvalue ->_slot 0x55f5da642f90
| |         `-CXXThisExpr 0x55f5da66eb20 <col:22> 'Args::BytesSlot *' implicit this
| |-CXXMethodDecl 0x55f5da642e70 <line:842:9, line:844:9> line:842:14 store 'void ()'
| | |-Overrides: [ 0x55f5da642640 Slot::store 'void ()' ]
| | `-CompoundStmt 0x55f5da672030 <col:22, line:844:9>
| |   `-CallExpr 0x55f5da671f98 <line:843:13, col:38> 'void *'
| |     |-ImplicitCastExpr 0x55f5da671f80 <col:13> 'void *(*)(void *__restrict, const void *__restrict, size_t) throw()' <FunctionToPointerDecay>
| |     | `-DeclRefExpr 0x55f5da671f60 <col:13> 'void *(void *__restrict, const void *__restrict, size_t) throw()' lvalue Function 0x55f5da20d048 'memcpy' 'void *(void *__restrict, const void *__restrict, size_t) throw()'
| |     |-ImplicitCastExpr 0x55f5da671fd0 <col:20> 'void *' <LValueToRValue>
| |     | `-MemberExpr 0x55f5da66ec08 <col:20> 'void *' lvalue ->_ptr 0x55f5da642f28
| |     |   `-CXXThisExpr 0x55f5da66ebf8 <col:20> 'Args::BytesSlot *' implicit this
| |     |-ImplicitCastExpr 0x55f5da672000 <col:26> 'const void *' <BitCast>
| |     | `-ImplicitCastExpr 0x55f5da671fe8 <col:26> 'char *' <LValueToRValue>
| |     |   `-MemberExpr 0x55f5da66ec48 <col:26> 'char *' lvalue ->_slot 0x55f5da642f90
| |     |     `-CXXThisExpr 0x55f5da66ec38 <col:26> 'Args::BytesSlot *' implicit this
| |     `-ImplicitCastExpr 0x55f5da672018 <col:33> 'size_t':'unsigned long' <LValueToRValue>
| |       `-MemberExpr 0x55f5da66ec88 <col:33> 'size_t':'unsigned long' lvalue ->_size 0x55f5da642ff0
| |         `-CXXThisExpr 0x55f5da66ec78 <col:33> 'Args::BytesSlot *' implicit this
| |-FieldDecl 0x55f5da642f28 <line:845:9, col:15> col:15 referenced _ptr 'void *'
| |-FieldDecl 0x55f5da642f90 <line:846:9, col:15> col:15 referenced _slot 'char *'
| |-FieldDecl 0x55f5da642ff0 <line:847:9, col:16> col:16 referenced _size 'size_t':'unsigned long'
| |-CXXConstructorDecl 0x55f5da6431e8 <line:835:12> col:12 implicit constexpr BytesSlot 'void (const Args::BytesSlot &)' inline default noexcept-unevaluated 0x55f5da6431e8
| | `-ParmVarDecl 0x55f5da6432f8 <col:12> col:12 'const Args::BytesSlot &'
| `-CXXMethodDecl 0x55f5da643398 <col:12> col:12 implicit operator= 'Args::BytesSlot &(const Args::BytesSlot &)' inline default noexcept-unevaluated 0x55f5da643398
|   `-ParmVarDecl 0x55f5da6434a8 <col:12> col:12 'const Args::BytesSlot &'
|-ClassTemplateDecl 0x55f5da643648 <line:850:5, line:860:5> line:851:12 SlotT
| |-TemplateTypeParmDecl 0x55f5da643518 <line:850:14, col:23> col:23 referenced typename depth 0 index 0 T
| `-CXXRecordDecl 0x55f5da6435b8 <line:851:5, line:860:5> line:851:12 struct SlotT definition
|   |-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
|   | |-DefaultConstructor
|   | |-CopyConstructor simple non_trivial has_const_param needs_implicit needs_overload_resolution implicit_has_const_param
|   | |-MoveConstructor exists simple non_trivial needs_implicit needs_overload_resolution
|   | |-CopyAssignment non_trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple non_trivial needs_implicit needs_overload_resolution
|   | `-Destructor simple non_trivial needs_implicit needs_overload_resolution
|   |-public 'Args::Slot'
|   |-CXXRecordDecl 0x55f5da6438e0 <col:5, col:12> col:12 implicit referenced struct SlotT
|   |-CXXConstructorDecl 0x55f5da643ad8 <line:852:9, line:854:9> line:852:9 SlotT<T> 'void (T *)'
|   | |-ParmVarDecl 0x55f5da6439a8 <col:15, col:18> col:18 referenced ptr 'T *'
|   | |-CXXCtorInitializer Field 0x55f5da643c58 '_ptr' 'T *'
|   | | `-ParenListExpr 0x55f5da672068 <line:853:19, col:23> 'NULL TYPE'
|   | |   `-DeclRefExpr 0x55f5da672048 <col:20> 'T *' lvalue ParmVar 0x55f5da6439a8 'ptr' 'T *'
|   | `-CompoundStmt 0x55f5da6720b8 <col:25, line:854:9>
|   |-CXXMethodDecl 0x55f5da643ba8 <line:855:9, line:857:9> line:855:14 store 'void ()'
|   | |-Overrides: [ 0x55f5da642640 Slot::store 'void ()' ]
|   | `-CompoundStmt 0x55f5da672268 <col:22, line:857:9>
|   |   `-CallExpr 0x55f5da672238 <line:856:13, col:40> '<dependent type>'
|   |     |-UnresolvedLookupExpr 0x55f5da6720c8 <col:13> '<overloaded function type>' lvalue (ADL) = 'assign_consume' 0x55f5da2c5778 0x55f5da26faa8
|   |     |-CXXOperatorCallExpr 0x55f5da6721c8 <col:28, col:29> '<dependent type>'
|   |     | |-UnresolvedLookupExpr 0x55f5da672158 <col:28> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55f5da4d2728 0x55f5da4d2348 0x55f5da4d1f78 0x55f5da4d1b98 0x55f5da4d17b8 0x55f5da4d13e8
|   |     | `-MemberExpr 0x55f5da672128 <col:29> 'T *' lvalue ->_ptr 0x55f5da643c58
|   |     |   `-CXXThisExpr 0x55f5da672118 <col:29> 'SlotT<T> *' implicit this
|   |     `-MemberExpr 0x55f5da672208 <col:35> 'T' lvalue ->_slot 0x55f5da643cb8
|   |       `-CXXThisExpr 0x55f5da6721f8 <col:35> 'SlotT<T> *' implicit this
|   |-FieldDecl 0x55f5da643c58 <line:858:9, col:12> col:12 referenced _ptr 'T *'
|   `-FieldDecl 0x55f5da643cb8 <line:859:9, col:11> col:11 referenced _slot 'T'
|-EnumDecl 0x55f5da643d20 <line:862:5, line:868:5> line:862:5
| `-EnumConstantDecl 0x55f5da643e20 <line:866:9, col:31> col:9 referenced simple_slotbuf_size 'Args::(anonymous enum at ../dummy_inc/click/args.hh:862:5)'
|   `-ImplicitCastExpr 0x55f5da643e70 <col:31> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55f5da643e00 <col:31> 'int' Int: 48
|       `-IntegerLiteral 0x55f5da643de0 <col:31> 'int' 48
|-FieldDecl 0x55f5da643e98 <line:871:5, col:10> col:10 _my_conf 'bool'
|-FieldDecl 0x55f5da643ef8 <line:876:5, col:10> col:10 referenced _status 'bool'
|-FieldDecl 0x55f5da643f58 <line:877:5, col:13> col:13 _simple_slotpos 'uint8_t':'unsigned char'
|-FieldDecl 0x55f5da644090 <line:879:5, col:21> col:21 referenced _conf 'Vector<String> *'
|-FieldDecl 0x55f5da65db90 <line:880:5, col:17> col:17 referenced _kwpos 'Vector<int>':'Vector<int>'
|-FieldDecl 0x55f5da65dbf0 <line:882:5, col:11> col:11 referenced _slots 'Args::Slot *'
|-FieldDecl 0x55f5da65dca0 <line:883:5, col:48> col:13 referenced _simple_slotbuf 'uint8_t [48]'
|-CXXMethodDecl 0x55f5da65dec8 <line:885:5, col:54> col:17 initialize 'void (const Vector<String> *)' inline
| `-ParmVarDecl 0x55f5da65ddd0 <col:28, col:50> col:50 conf 'const Vector<String> *'
|-CXXMethodDecl 0x55f5da65e018 <line:886:5, col:26> col:10 used reset_from 'void (int)'
| `-ParmVarDecl 0x55f5da65df88 <col:21, col:25> col:25 i 'int'
|-CXXMethodDecl 0x55f5da65e2e8 <line:888:5, col:67> col:12 referenced find 'String (const char *, int, Args::Slot *&)'
| |-ParmVarDecl 0x55f5da65e0d8 <col:17, col:29> col:29 keyword 'const char *'
| |-ParmVarDecl 0x55f5da65e158 <col:38, col:42> col:42 flags 'int'
| `-ParmVarDecl 0x55f5da65e200 <col:49, col:56> col:56 slot_status 'Args::Slot *&'
|-CXXMethodDecl 0x55f5da65e4f8 <line:889:5, col:46> col:10 referenced postparse 'void (bool, Args::Slot *)'
| |-ParmVarDecl 0x55f5da65e3b0 <col:20, col:25> col:25 ok 'bool'
| `-ParmVarDecl 0x55f5da65e428 <col:29, col:35> col:35 slot_status 'Args::Slot *'
|-CXXMethodDecl 0x55f5da65e5c8 <line:890:5, col:25> col:10 check_complete 'void ()'
|-CXXMethodDecl 0x55f5da65e718 <line:892:5, col:48> col:23 simple_slot_size 'int (int)' static inline
| `-ParmVarDecl 0x55f5da65e680 <col:40, col:44> col:44 size 'int'
|-CXXMethodDecl 0x55f5da65eaa8 <line:893:5, line:894:62> line:893:17 simple_slot_info 'void (int, int, void *&, void **&)' inline
| |-ParmVarDecl 0x55f5da65e7d8 <col:34, col:38> col:38 offset 'int'
| |-ParmVarDecl 0x55f5da65e858 <col:46, col:50> col:50 size 'int'
| |-ParmVarDecl 0x55f5da65e900 <line:894:34, col:41> col:41 slot 'void *&'
| `-ParmVarDecl 0x55f5da65e9b8 <col:47, col:55> col:55 pointer 'void **&'
|-CXXMethodDecl 0x55f5da65ecd0 <line:895:5, col:46> col:11 referenced simple_slot 'void *(void *, size_t)'
| |-ParmVarDecl 0x55f5da65eb80 <col:23, col:29> col:29 data 'void *'
| `-ParmVarDecl 0x55f5da65ebf8 <col:35, col:42> col:42 size 'size_t':'unsigned long'
`-FunctionTemplateDecl 0x55f5da65efe8 <line:896:5, col:53> col:29 complex_slot
  |-TemplateTypeParmDecl 0x55f5da65ed80 <col:14, col:23> col:23 referenced typename depth 0 index 0 T
  `-CXXMethodDecl 0x55f5da65ef48 <col:26, col:53> col:29 complex_slot 'T *(T &)'
    `-ParmVarDecl 0x55f5da65ee58 <col:42, col:45> col:45 variable 'T &'

Layout: <CGRecordLayout
  LLVMType:%class.Args = type { %class.ArgContext.base, i8, i8, i8, %class.Vector.0*, %class.Vector.5, %"struct.Args::Slot"*, [48 x i8] }
  NonVirtualBaseLLVMType:%class.Args = type { %class.ArgContext.base, i8, i8, i8, %class.Vector.0*, %class.Vector.5, %"struct.Args::Slot"*, [48 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct HandlerCallArg
         0 |   int flags
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f5da714b10 <../dummy_inc/click/handlercall.hh:568:1, line:574:1> line:568:8 referenced struct HandlerCallArg definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55f5da714c28 <col:1, col:8> col:8 implicit referenced struct HandlerCallArg
|-CXXConstructorDecl 0x55f5da714da8 <line:569:5, line:571:5> line:569:5 used HandlerCallArg 'void (int)'
| |-ParmVarDecl 0x55f5da714cd0 <col:20, col:24> col:24 used f 'int'
| |-CXXCtorInitializer Field 0x55f5da715108 'flags' 'int'
| | `-ImplicitCastExpr 0x55f5da7151b0 <line:570:10> 'int' <LValueToRValue>
| |   `-DeclRefExpr 0x55f5da715170 <col:10> 'int' lvalue ParmVar 0x55f5da714cd0 'f' 'int'
| `-CompoundStmt 0x55f5da7151f8 <col:13, line:571:5>
|-CXXMethodDecl 0x55f5da715038 <line:572:5, col:78> col:10 parse 'bool (const String &, HandlerCall &, const ArgContext &)'
| |-ParmVarDecl 0x55f5da714e68 <col:16, col:30> col:30 str 'const String &'
| |-ParmVarDecl 0x55f5da714ee0 <col:35, col:48> col:48 result 'HandlerCall &'
| `-ParmVarDecl 0x55f5da714f58 <col:56, col:74> col:74 args 'const ArgContext &'
|-FieldDecl 0x55f5da715108 <line:573:5, col:9> col:9 referenced flags 'int'
|-CXXConstructorDecl 0x55f5da7239b8 <line:568:8> col:8 implicit constexpr HandlerCallArg 'void (const HandlerCallArg &)' inline default trivial noexcept-unevaluated 0x55f5da7239b8
| `-ParmVarDecl 0x55f5da723ac8 <col:8> col:8 'const HandlerCallArg &'
|-CXXConstructorDecl 0x55f5da723b68 <col:8> col:8 implicit used constexpr HandlerCallArg 'void (HandlerCallArg &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55f5da723c78 <col:8> col:8 used 'HandlerCallArg &&'
| |-CXXCtorInitializer Field 0x55f5da715108 'flags' 'int'
| | `-ImplicitCastExpr 0x55f5da724470 <col:8> 'int' <LValueToRValue>
| |   `-MemberExpr 0x55f5da724440 <col:8> 'int' xvalue .flags 0x55f5da715108
| |     `-CXXStaticCastExpr 0x55f5da724410 <col:8> 'HandlerCallArg' xvalue static_cast<struct HandlerCallArg &&> <NoOp>
| |       `-DeclRefExpr 0x55f5da7243e0 <col:8> 'HandlerCallArg' lvalue ParmVar 0x55f5da723c78 '' 'HandlerCallArg &&'
| `-CompoundStmt 0x55f5da7244b8 <col:8>
`-CXXDestructorDecl 0x55f5da723d30 <col:8> col:8 implicit referenced ~HandlerCallArg 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%struct.HandlerCallArg = type { i32 }
  NonVirtualBaseLLVMType:%struct.HandlerCallArg = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class WritablePacket
         0 |   class Packet (base)
         0 |     class atomic_uint32_t _use_count
         0 |       uint32_t _val
         8 |     class Packet * _data_packet
        16 |     unsigned char * _head
        24 |     unsigned char * _data
        32 |     unsigned char * _tail
        40 |     unsigned char * _end
        48 |     struct Packet::AllAnno _aa
        48 |       union Packet::Anno cb
        48 |         char [48] c
        48 |         uint8_t [48] u8
        48 |         uint16_t [24] u16
        48 |         uint32_t [12] u32
        48 |         uint64_t [6] u64
        96 |       unsigned char * mac
       104 |       unsigned char * nh
       112 |       unsigned char * h
       120 |       enum Packet::PacketType pkt_type
       124 |       char [8] timestamp
       136 |       class Packet * next
       144 |       class Packet * prev
       152 |     Packet::buffer_destructor_type _destructor
       160 |     void * _destructor_argument
           | [sizeof=168, dsize=168, align=8,
           |  nvsize=168, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f5da4fa030 prev 0x55f5da4d68f0 <../dummy_inc/click/packet.hh:778:1, line:816:1> line:778:7 referenced class WritablePacket definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-public 'Packet'
|-CXXRecordDecl 0x55f5da4fa168 <col:1, col:7> col:7 implicit referenced class WritablePacket
|-AccessSpecDecl 0x55f5da4fa1f8 <col:40, col:46> col:40 public
|-CXXMethodDecl 0x55f5da4fa2a0 <line:780:5, col:62> col:55 data 'unsigned char *() const'
| |-NoInlineAttr 0x55f5da4fa340 <col:20>
| `-OptimizeNoneAttr 0x55f5da4fa398 <col:30>
|-CXXMethodDecl 0x55f5da4fa3e8 <line:781:5, col:66> col:55 end_data 'unsigned char *() const'
| |-NoInlineAttr 0x55f5da4fa488 <col:20>
| `-OptimizeNoneAttr 0x55f5da4fa4e0 <col:30>
|-CXXMethodDecl 0x55f5da4fa530 <line:782:5, col:36> col:27 buffer 'unsigned char *() const' inline
|-CXXMethodDecl 0x55f5da4fa5f8 <line:783:5, col:40> col:27 end_buffer 'unsigned char *() const' inline
|-CXXMethodDecl 0x55f5da4fa6c0 <line:784:5, col:40> col:27 mac_header 'unsigned char *() const' inline
|-CXXMethodDecl 0x55f5da4fa7d8 <line:785:5, col:40> col:25 ether_header 'click_ether *() const' inline
|-CXXMethodDecl 0x55f5da4fa8a0 <line:786:5, col:72> col:55 network_header 'unsigned char *() const'
| |-NoInlineAttr 0x55f5da4fa940 <col:20>
| `-OptimizeNoneAttr 0x55f5da4fa998 <col:30>
|-CXXMethodDecl 0x55f5da4faa08 <line:787:5, col:62> col:50 ip_header 'click_ip *() const'
| |-NoInlineAttr 0x55f5da4faaa8 <col:20>
| `-OptimizeNoneAttr 0x55f5da4fab00 <col:30>
|-CXXMethodDecl 0x55f5da4faba8 <line:788:5, col:64> col:51 ip6_header 'click_ip6 *() const'
| |-NoInlineAttr 0x55f5da4fac48 <col:20>
| `-OptimizeNoneAttr 0x55f5da4faca0 <col:30>
|-CXXMethodDecl 0x55f5da4facf0 <line:789:5, col:46> col:27 transport_header 'unsigned char *() const' inline
|-CXXMethodDecl 0x55f5da4fae08 <line:790:5, col:38> col:24 icmp_header 'click_icmp *() const' inline
|-CXXMethodDecl 0x55f5da4faf28 <line:791:5, col:36> col:23 tcp_header 'click_tcp *() const' inline
|-CXXMethodDecl 0x55f5da4fb048 <line:792:5, col:36> col:23 udp_header 'click_udp *() const' inline
|-CXXMethodDecl 0x55f5da4fb110 <line:795:5, col:73> col:27 buffer_data 'unsigned char *() const' inline
| `-DeprecatedAttr 0x55f5da4fb1b0 <col:62> "" ""
|-AccessSpecDecl 0x55f5da4fb220 <line:798:2, col:9> col:2 private
|-CXXConstructorDecl 0x55f5da4fb280 <line:800:5, col:31> col:12 WritablePacket 'void ()' inline
| |-CXXCtorInitializer 'Packet'
| | `-CXXConstructExpr 0x55f5da4fbe78 <col:12> 'Packet' 'void ()'
| `-CompoundStmt 0x55f5da4fc0a0 <col:29, col:31>
|-CXXMethodDecl 0x55f5da4fb348 <line:802:5, col:28> col:17 initialize 'void ()' inline
|-CXXConstructorDecl 0x55f5da4fb488 <line:804:5, col:35> col:5 WritablePacket 'void (const Packet &)'
| `-ParmVarDecl 0x55f5da4fb3f8 <col:20, col:34> col:34 x 'const Packet &'
|-CXXDestructorDecl 0x55f5da4fb580 <line:805:5, col:25> col:5 ~WritablePacket 'void () noexcept'
| `-CompoundStmt 0x55f5da4fc0b0 <col:23, col:25>
|-CXXMethodDecl 0x55f5da4fb738 <line:808:5, col:56> col:28 pool_allocate 'WritablePacket *(bool)' static
| `-ParmVarDecl 0x55f5da4fb670 <col:42, col:47> col:47 with_data 'bool'
|-CXXMethodDecl 0x55f5da4fba08 <line:809:5, line:810:24> line:809:28 pool_allocate 'WritablePacket *(uint32_t, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x55f5da4fb7f0 <col:42, col:51> col:51 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55f5da4fb868 <col:61, col:70> col:70 length 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55f5da4fb8e0 <line:810:7, col:16> col:16 tailroom 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f5da4fbb98 <line:811:5, col:42> col:17 recycle 'void (WritablePacket *)' static
| `-ParmVarDecl 0x55f5da4fbad0 <col:25, col:41> col:41 p 'WritablePacket *'
|-FriendDecl 0x55f5da4fbc90 <line:814:5, col:18> col:12 'class Packet':'Packet'
`-CXXConstructorDecl 0x55f5da4fbcf8 <line:778:7> col:7 implicit WritablePacket 'void (const WritablePacket &)' inline default noexcept-unevaluated 0x55f5da4fbcf8
  `-ParmVarDecl 0x55f5da4fbe08 <col:7> col:7 'const WritablePacket &'

Layout: <CGRecordLayout
  LLVMType:%class.WritablePacket = type { %class.Packet }
  NonVirtualBaseLLVMType:%class.WritablePacket = type { %class.Packet }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class StringAccum
         0 |   struct StringAccum::rep_t r_
         0 |     unsigned char * s
         8 |     int len
        12 |     int cap
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f5da6ef600 <../dummy_inc/click/straccum.hh:112:5, line:122:5> line:112:12 referenced struct rep_t definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55f5da6ef718 <col:5, col:12> col:12 implicit referenced struct rep_t
|-FieldDecl 0x55f5da6ef7c0 <line:113:2, col:17> col:17 referenced s 'unsigned char *'
|-FieldDecl 0x55f5da6ef828 <line:114:2, col:6> col:6 referenced len 'int'
|-FieldDecl 0x55f5da6ef890 <line:115:2, col:6> col:6 referenced cap 'int'
|-CXXConstructorDecl 0x55f5da6ef940 <line:116:2, line:119:2> line:116:2 used rep_t 'void ()'
| |-CXXCtorInitializer Field 0x55f5da6ef7c0 's' 'unsigned char *'
| | `-CXXReinterpretCastExpr 0x55f5da6f07c0 <line:117:10, col:84> 'unsigned char *' reinterpret_cast<unsigned char *> <BitCast>
| |   `-CXXConstCastExpr 0x55f5da6f0778 <col:44, col:83> 'char *' const_cast<char *> <NoOp>
| |     `-CallExpr 0x55f5da6f0740 <col:63, col:82> 'const char *'
| |       `-ImplicitCastExpr 0x55f5da6f0728 <col:63, col:71> 'const char *(*)()' <FunctionToPointerDecay>
| |         `-DeclRefExpr 0x55f5da6f06d0 <col:63, col:71> 'const char *()' lvalue CXXMethod 0x55f5da3010e0 'empty_data' 'const char *()'
| |-CXXCtorInitializer Field 0x55f5da6ef828 'len' 'int'
| | `-IntegerLiteral 0x55f5da6f0e90 <line:118:12> 'int' 0
| |-CXXCtorInitializer Field 0x55f5da6ef890 'cap' 'int'
| | `-IntegerLiteral 0x55f5da6f0ef8 <col:20> 'int' 0
| `-CompoundStmt 0x55f5da6f0f78 <col:23, line:119:2>
|-CXXConstructorDecl 0x55f5da6efab8 <line:120:2, line:121:2> line:120:11 rep_t 'void (uninitialized_type)'
| |-ParmVarDecl 0x55f5da6ef9f8 <col:17> col:35 'uninitialized_type'
| `-CompoundStmt 0x55f5da6f0f88 <col:37, line:121:2>
|-CXXConstructorDecl 0x55f5da6f31a8 <line:112:12> col:12 implicit used constexpr rep_t 'void (const StringAccum::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55f5da6f32b8 <col:12> col:12 used 'const StringAccum::rep_t &'
| |-CXXCtorInitializer Field 0x55f5da6ef7c0 's' 'unsigned char *'
| | `-ImplicitCastExpr 0x55f5da6f4bf0 <col:12> 'unsigned char *' <LValueToRValue>
| |   `-MemberExpr 0x55f5da6f4bc0 <col:12> 'unsigned char *const' lvalue .s 0x55f5da6ef7c0
| |     `-DeclRefExpr 0x55f5da6f4ba0 <col:12> 'const StringAccum::rep_t' lvalue ParmVar 0x55f5da6f32b8 '' 'const StringAccum::rep_t &'
| |-CXXCtorInitializer Field 0x55f5da6ef828 'len' 'int'
| | `-ImplicitCastExpr 0x55f5da6f4c80 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x55f5da6f4c50 <col:12> 'const int' lvalue .len 0x55f5da6ef828
| |     `-DeclRefExpr 0x55f5da6f4c30 <col:12> 'const StringAccum::rep_t' lvalue ParmVar 0x55f5da6f32b8 '' 'const StringAccum::rep_t &'
| |-CXXCtorInitializer Field 0x55f5da6ef890 'cap' 'int'
| | `-ImplicitCastExpr 0x55f5da6f4d10 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x55f5da6f4ce0 <col:12> 'const int' lvalue .cap 0x55f5da6ef890
| |     `-DeclRefExpr 0x55f5da6f4cc0 <col:12> 'const StringAccum::rep_t' lvalue ParmVar 0x55f5da6f32b8 '' 'const StringAccum::rep_t &'
| `-CompoundStmt 0x55f5da6f4d68 <col:12>
|-CXXConstructorDecl 0x55f5da6f3358 <col:12> col:12 implicit constexpr rep_t 'void (StringAccum::rep_t &&)' inline default trivial noexcept-unevaluated 0x55f5da6f3358
| `-ParmVarDecl 0x55f5da6f3468 <col:12> col:12 'StringAccum::rep_t &&'
`-CXXDestructorDecl 0x55f5da6f5020 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"struct.StringAccum::rep_t" = type { i8*, i32, i32 }
  NonVirtualBaseLLVMType:%"struct.StringAccum::rep_t" = type { i8*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f5da6eada8 prev 0x55f5da5e8340 <../dummy_inc/click/straccum.hh:28:1, line:137:1> line:28:7 referenced class StringAccum definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55f5da6eaea0 <col:1, col:7> col:7 implicit referenced class StringAccum
|-AccessSpecDecl 0x55f5da6eaf30 <col:21, col:27> col:21 public
|-TypedefDecl 0x55f5da6eaf70 <line:30:5, col:25> col:25 referenced const_iterator 'const char *'
| `-PointerType 0x55f5d9fa9e00 'const char *'
|   `-QualType 0x55f5d9fa9351 'const char' const
|     `-BuiltinType 0x55f5d9fa9350 'char'
|-TypedefDecl 0x55f5da6eafe0 <line:31:5, col:19> col:19 referenced iterator 'char *'
| `-PointerType 0x55f5d9fa9fd0 'char *'
|   `-BuiltinType 0x55f5d9fa9350 'char'
|-TypedefDecl 0x55f5da6eb120 <line:33:5, col:57> col:32 referenced unspecified_bool_type 'int (StringAccum::*)() const'
| `-MemberPointerType 0x55f5da6eb090 'int (StringAccum::*)() const'
|   |-RecordType 0x55f5da26b9a0 'StringAccum'
|   | `-CXXRecord 0x55f5da6eada8 'StringAccum'
|   `-ParenType 0x55f5da2db0f0 'int () const' sugar
|     `-FunctionProtoType 0x55f5da2aec80 'int () const' const cdecl
|       `-BuiltinType 0x55f5d9fa93b0 'int'
|-CXXConstructorDecl 0x55f5da6eb1e0 <line:35:5, col:24> col:12 used StringAccum 'void ()' inline
|-CXXConstructorDecl 0x55f5da6eb330 <line:36:5, col:45> col:21 StringAccum 'void (int)' inline
| `-ParmVarDecl 0x55f5da6eb2a0 <col:33, col:37> col:37 capacity 'int'
|-CXXConstructorDecl 0x55f5da6eb480 <line:37:5, col:41> col:12 StringAccum 'void (const String &)' inline
| `-ParmVarDecl 0x55f5da6eb3f0 <col:24, col:38> col:38 str 'const String &'
|-CXXConstructorDecl 0x55f5da6eb628 <line:38:5, col:44> col:12 StringAccum 'void (const StringAccum &)' inline
| `-ParmVarDecl 0x55f5da6eb568 <col:24, col:43> col:43 x 'const StringAccum &'
|-CXXConstructorDecl 0x55f5da6eb7d8 <line:40:5, col:39> col:12 StringAccum 'void (StringAccum &&)' inline
| `-ParmVarDecl 0x55f5da6eb718 <col:24, col:38> col:38 x 'StringAccum &&'
|-CXXDestructorDecl 0x55f5da6eb8d0 <line:42:5, col:25> col:12 used ~StringAccum 'void () noexcept' inline
|-CXXMethodDecl 0x55f5da6eba88 <line:44:5, col:55> col:25 operator= 'StringAccum &(const StringAccum &)' inline
| `-ParmVarDecl 0x55f5da6eb9c0 <col:35, col:54> col:54 x 'const StringAccum &'
|-CXXMethodDecl 0x55f5da6ebc08 <line:46:5, col:50> col:25 operator= 'StringAccum &(StringAccum &&)' inline
| `-ParmVarDecl 0x55f5da6ebb40 <col:35, col:49> col:49 x 'StringAccum &&'
|-CXXMethodDecl 0x55f5da6ebd00 <line:49:5, col:31> col:24 used data 'const char *() const' inline
|-CXXMethodDecl 0x55f5da6ebdc8 <line:50:5, col:23> col:18 used data 'char *()' inline
|-CXXMethodDecl 0x55f5da6ebe90 <line:51:5, col:25> col:16 used length 'int () const' inline
|-CXXMethodDecl 0x55f5da6ebf58 <line:52:5, col:27> col:16 used capacity 'int () const' inline
|-CXXMethodDecl 0x55f5da6ec020 <line:54:5, col:23> col:17 c_str 'const char *()'
|-CXXConversionDecl 0x55f5da6ec188 <line:56:5, col:45> col:12 operator int (StringAccum::*)() const 'StringAccum::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x55f5da6ec258 <line:57:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55f5da6ec318 <line:58:5, col:29> col:17 operator! 'bool () const' inline
|-CXXMethodDecl 0x55f5da6ec428 <line:60:5, col:35> col:27 used begin 'StringAccum::const_iterator () const' inline
|-CXXMethodDecl 0x55f5da6ec538 <line:61:5, col:27> col:21 begin 'StringAccum::iterator ()' inline
|-CXXMethodDecl 0x55f5da6ec5f8 <line:62:5, col:33> col:27 used end 'StringAccum::const_iterator () const' inline
|-CXXMethodDecl 0x55f5da6ec6b8 <line:63:5, col:25> col:21 end 'StringAccum::iterator ()' inline
|-CXXMethodDecl 0x55f5da6ec800 <line:65:5, col:35> col:17 operator[] 'char (int) const' inline
| `-ParmVarDecl 0x55f5da6ec770 <col:28, col:32> col:32 i 'int'
|-CXXMethodDecl 0x55f5da6ec990 <line:66:5, col:34> col:18 operator[] 'char &(int)' inline
| `-ParmVarDecl 0x55f5da6ec8c0 <col:29, col:33> col:33 i 'int'
|-CXXMethodDecl 0x55f5da6eca58 <line:67:5, col:25> col:17 front 'char () const' inline
|-CXXMethodDecl 0x55f5da6ecb50 <line:68:5, col:24> col:18 front 'char &()' inline
|-CXXMethodDecl 0x55f5da6ecc10 <line:69:5, col:24> col:17 back 'char () const' inline
|-CXXMethodDecl 0x55f5da6eccd8 <line:70:5, col:23> col:18 back 'char &()' inline
|-CXXMethodDecl 0x55f5da6ecd98 <line:72:5, col:33> col:17 used out_of_memory 'bool () const' inline
|-CXXMethodDecl 0x55f5da6ece58 <line:73:5, col:31> col:10 assign_out_of_memory 'void ()'
|-CXXMethodDecl 0x55f5da6ecf18 <line:75:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55f5da6ed068 <line:76:5, col:31> col:18 reserve 'char *(int)' inline
| `-ParmVarDecl 0x55f5da6ecfd0 <col:26, col:30> col:30 n 'int'
|-CXXMethodDecl 0x55f5da6ed1b8 <line:77:5, col:35> col:17 set_length 'void (int)' inline
| `-ParmVarDecl 0x55f5da6ed128 <col:28, col:32> col:32 len 'int'
|-CXXMethodDecl 0x55f5da6ed310 <line:78:5, col:23> col:9 resize 'int (int)'
| `-ParmVarDecl 0x55f5da6ed278 <col:16, col:20> col:20 len 'int'
|-CXXMethodDecl 0x55f5da6ed460 <line:79:5, col:40> col:17 used adjust_length 'void (int)' inline
| `-ParmVarDecl 0x55f5da6ed3d0 <col:31, col:35> col:35 delta 'int'
|-CXXMethodDecl 0x55f5da6ed680 <line:80:5, col:54> col:18 extend 'char *(int, int)' inline
| |-ParmVarDecl 0x55f5da6ed520 <col:25, col:29> col:29 nadjust 'int'
| `-ParmVarDecl 0x55f5da6ed5a0 <col:38, col:53> col:42 nreserve 'int' cinit
|   `-IntegerLiteral 0x55f5da6f05f8 <col:53> 'int' 0
|-CXXMethodDecl 0x55f5da6ed7d8 <line:82:5, col:35> col:17 pop_back 'void (int)' inline
| `-ParmVarDecl 0x55f5da6ed748 <col:26, col:34> col:30 n 'int' cinit
|   `-IntegerLiteral 0x55f5da6f0618 <col:34> 'int' 1
|-CXXMethodDecl 0x55f5da6ed920 <line:84:5, col:30> col:17 used append 'void (char)' inline
| `-ParmVarDecl 0x55f5da6ed890 <col:24, col:29> col:29 c 'char'
|-CXXMethodDecl 0x55f5da6eda70 <line:85:5, col:39> col:17 used append 'void (unsigned char)' inline
| `-ParmVarDecl 0x55f5da6ed9e0 <col:24, col:38> col:38 c 'unsigned char'
|-CXXMethodDecl 0x55f5da6edbc0 <line:86:5, col:35> col:17 append_utf8 'bool (int)' inline
| `-ParmVarDecl 0x55f5da6edb30 <col:29, col:33> col:33 ch 'int'
|-CXXMethodDecl 0x55f5da6edd10 <line:87:5, col:40> col:17 used append 'void (const char *)' inline
| `-ParmVarDecl 0x55f5da6edc80 <col:24, col:36> col:36 cstr 'const char *'
|-CXXMethodDecl 0x55f5da6edee8 <line:88:5, col:46> col:17 used append 'void (const char *, int)' inline
| |-ParmVarDecl 0x55f5da6eddd0 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x55f5da6ede50 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x55f5da6ee0c8 <line:89:5, col:55> col:17 used append 'void (const unsigned char *, int)' inline
| |-ParmVarDecl 0x55f5da6edfb0 <col:24, col:45> col:45 s 'const unsigned char *'
| `-ParmVarDecl 0x55f5da6ee030 <col:48, col:52> col:52 len 'int'
|-CXXMethodDecl 0x55f5da6ee2a8 <line:90:5, col:59> col:17 used append 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x55f5da6ee190 <col:24, col:36> col:36 first 'const char *'
| `-ParmVarDecl 0x55f5da6ee210 <col:43, col:55> col:55 last 'const char *'
|-CXXMethodDecl 0x55f5da6ee488 <line:91:5, col:77> col:17 append 'void (const unsigned char *, const unsigned char *)' inline
| |-ParmVarDecl 0x55f5da6ee370 <col:24, col:45> col:45 first 'const unsigned char *'
| `-ParmVarDecl 0x55f5da6ee3f0 <col:52, col:73> col:73 last 'const unsigned char *'
|-CXXMethodDecl 0x55f5da6ee668 <line:92:5, col:36> col:10 append_fill 'void (int, int)'
| |-ParmVarDecl 0x55f5da6ee550 <col:22, col:26> col:26 c 'int'
| `-ParmVarDecl 0x55f5da6ee5d0 <col:29, col:33> col:33 len 'int'
|-CXXMethodDecl 0x55f5da6ee9c8 <line:93:5, col:81> col:10 used append_numeric 'void (String::intmax_t, int, bool)'
| |-ParmVarDecl 0x55f5da6ee7b0 <col:25, col:42> col:42 x 'String::intmax_t':'long'
| |-ParmVarDecl 0x55f5da6ee830 <col:45, col:56> col:49 base 'int' cinit
| | `-IntegerLiteral 0x55f5da6f0638 <col:56> 'int' 10
| `-ParmVarDecl 0x55f5da6ee8a8 <col:60, col:77> col:65 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55f5da6f0658 <col:77> 'bool' true
|-CXXMethodDecl 0x55f5da6eed28 <line:94:5, col:82> col:10 used append_numeric 'void (String::uintmax_t, int, bool)'
| |-ParmVarDecl 0x55f5da6eeb10 <col:25, col:43> col:43 x 'String::uintmax_t':'unsigned long'
| |-ParmVarDecl 0x55f5da6eeb90 <col:46, col:57> col:50 base 'int' cinit
| | `-IntegerLiteral 0x55f5da6f0668 <col:57> 'int' 10
| `-ParmVarDecl 0x55f5da6eec08 <col:61, col:78> col:66 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55f5da6f0688 <col:78> 'bool' true
|-CXXMethodDecl 0x55f5da6eef50 <line:96:5, col:57> col:18 snprintf 'StringAccum &(int, const char *, ...)'
| |-ParmVarDecl 0x55f5da6eedf8 <col:27, col:31> col:31 n 'int'
| `-ParmVarDecl 0x55f5da6eee78 <col:34, col:46> col:46 format 'const char *'
|-CXXMethodDecl 0x55f5da6ef048 <line:98:5, col:24> col:12 take_string 'String ()'
|-CXXMethodDecl 0x55f5da6ef1b8 <line:100:5, col:29> col:10 used swap 'void (StringAccum &)'
| `-ParmVarDecl 0x55f5da6ef0f8 <col:15, col:28> col:28 x 'StringAccum &'
|-CXXMethodDecl 0x55f5da6ef308 <line:104:5, col:62> col:17 forward 'void (int)' inline
| |-ParmVarDecl 0x55f5da6ef278 <col:25, col:29> col:29 delta 'int'
| `-DeprecatedAttr 0x55f5da6ef3b0 <col:51> "" ""
|-AccessSpecDecl 0x55f5da6ef420 <line:106:3, col:10> col:3 private
|-EnumDecl 0x55f5da6ef448 <line:108:5, line:110:5> line:108:5
| `-EnumConstantDecl 0x55f5da6ef598 <line:109:2, col:23> col:2 referenced MEMO_SPACE 'StringAccum::(anonymous enum at ../dummy_inc/click/straccum.hh:108:5)'
|   `-ImplicitCastExpr 0x55f5da6ef5e8 <col:15, col:23> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55f5da6ef578 <col:15, col:23> 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)' Int: 12
|       `-DeclRefExpr 0x55f5da6ef548 <col:15, col:23> 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)' EnumConstant 0x55f5da2e3e58 'MEMO_SPACE' 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)'
|-CXXRecordDecl 0x55f5da6ef600 <line:112:5, line:122:5> line:112:12 referenced struct rep_t definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55f5da6ef718 <col:5, col:12> col:12 implicit referenced struct rep_t
| |-FieldDecl 0x55f5da6ef7c0 <line:113:2, col:17> col:17 referenced s 'unsigned char *'
| |-FieldDecl 0x55f5da6ef828 <line:114:2, col:6> col:6 referenced len 'int'
| |-FieldDecl 0x55f5da6ef890 <line:115:2, col:6> col:6 referenced cap 'int'
| |-CXXConstructorDecl 0x55f5da6ef940 <line:116:2, line:119:2> line:116:2 used rep_t 'void ()'
| | |-CXXCtorInitializer Field 0x55f5da6ef7c0 's' 'unsigned char *'
| | | `-CXXReinterpretCastExpr 0x55f5da6f07c0 <line:117:10, col:84> 'unsigned char *' reinterpret_cast<unsigned char *> <BitCast>
| | |   `-CXXConstCastExpr 0x55f5da6f0778 <col:44, col:83> 'char *' const_cast<char *> <NoOp>
| | |     `-CallExpr 0x55f5da6f0740 <col:63, col:82> 'const char *'
| | |       `-ImplicitCastExpr 0x55f5da6f0728 <col:63, col:71> 'const char *(*)()' <FunctionToPointerDecay>
| | |         `-DeclRefExpr 0x55f5da6f06d0 <col:63, col:71> 'const char *()' lvalue CXXMethod 0x55f5da3010e0 'empty_data' 'const char *()'
| | |-CXXCtorInitializer Field 0x55f5da6ef828 'len' 'int'
| | | `-IntegerLiteral 0x55f5da6f0e90 <line:118:12> 'int' 0
| | |-CXXCtorInitializer Field 0x55f5da6ef890 'cap' 'int'
| | | `-IntegerLiteral 0x55f5da6f0ef8 <col:20> 'int' 0
| | `-CompoundStmt 0x55f5da6f0f78 <col:23, line:119:2>
| |-CXXConstructorDecl 0x55f5da6efab8 <line:120:2, line:121:2> line:120:11 rep_t 'void (uninitialized_type)'
| | |-ParmVarDecl 0x55f5da6ef9f8 <col:17> col:35 'uninitialized_type'
| | `-CompoundStmt 0x55f5da6f0f88 <col:37, line:121:2>
| |-CXXConstructorDecl 0x55f5da6f31a8 <line:112:12> col:12 implicit used constexpr rep_t 'void (const StringAccum::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55f5da6f32b8 <col:12> col:12 used 'const StringAccum::rep_t &'
| | |-CXXCtorInitializer Field 0x55f5da6ef7c0 's' 'unsigned char *'
| | | `-ImplicitCastExpr 0x55f5da6f4bf0 <col:12> 'unsigned char *' <LValueToRValue>
| | |   `-MemberExpr 0x55f5da6f4bc0 <col:12> 'unsigned char *const' lvalue .s 0x55f5da6ef7c0
| | |     `-DeclRefExpr 0x55f5da6f4ba0 <col:12> 'const StringAccum::rep_t' lvalue ParmVar 0x55f5da6f32b8 '' 'const StringAccum::rep_t &'
| | |-CXXCtorInitializer Field 0x55f5da6ef828 'len' 'int'
| | | `-ImplicitCastExpr 0x55f5da6f4c80 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x55f5da6f4c50 <col:12> 'const int' lvalue .len 0x55f5da6ef828
| | |     `-DeclRefExpr 0x55f5da6f4c30 <col:12> 'const StringAccum::rep_t' lvalue ParmVar 0x55f5da6f32b8 '' 'const StringAccum::rep_t &'
| | |-CXXCtorInitializer Field 0x55f5da6ef890 'cap' 'int'
| | | `-ImplicitCastExpr 0x55f5da6f4d10 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x55f5da6f4ce0 <col:12> 'const int' lvalue .cap 0x55f5da6ef890
| | |     `-DeclRefExpr 0x55f5da6f4cc0 <col:12> 'const StringAccum::rep_t' lvalue ParmVar 0x55f5da6f32b8 '' 'const StringAccum::rep_t &'
| | `-CompoundStmt 0x55f5da6f4d68 <col:12>
| |-CXXConstructorDecl 0x55f5da6f3358 <col:12> col:12 implicit constexpr rep_t 'void (StringAccum::rep_t &&)' inline default trivial noexcept-unevaluated 0x55f5da6f3358
| | `-ParmVarDecl 0x55f5da6f3468 <col:12> col:12 'StringAccum::rep_t &&'
| `-CXXDestructorDecl 0x55f5da6f5020 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
|-FieldDecl 0x55f5da6efb90 <line:124:5, col:11> col:11 referenced r_ 'StringAccum::rep_t'
|-CXXMethodDecl 0x55f5da6efc90 <line:126:5, col:19> col:11 used grow 'char *(int)'
| `-ParmVarDecl 0x55f5da6efbf8 <col:16> col:19 'int'
|-CXXMethodDecl 0x55f5da6efe70 <line:127:5, col:48> col:11 used hard_extend 'char *(int, int)'
| |-ParmVarDecl 0x55f5da6efd50 <col:23, col:27> col:27 nadjust 'int'
| `-ParmVarDecl 0x55f5da6efdd0 <col:36, col:40> col:40 nreserve 'int'
|-CXXMethodDecl 0x55f5da6f0050 <line:128:5, col:44> col:10 used hard_append 'void (const char *, int)'
| |-ParmVarDecl 0x55f5da6eff38 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x55f5da6effb8 <col:37, col:41> col:41 len 'int'
|-CXXMethodDecl 0x55f5da6f01a8 <line:129:5, col:43> col:10 used hard_append_cstr 'void (const char *)'
| `-ParmVarDecl 0x55f5da6f0118 <col:27, col:39> col:39 cstr 'const char *'
|-CXXMethodDecl 0x55f5da6f02f8 <line:130:5, col:33> col:10 used append_utf8_hard 'bool (int)'
| `-ParmVarDecl 0x55f5da6f0268 <col:27, col:31> col:31 ch 'int'
`-FriendDecl 0x55f5da6f05b8 <line:132:5, col:70> col:25
  `-FunctionDecl 0x55f5da6f04f8 parent 0x55f5d9fa92b8 <col:5, col:70> col:25 used operator<< 'StringAccum &(StringAccum &, const String &)'
    |-ParmVarDecl 0x55f5da6f03b0 <col:36, col:49> col:49 sa 'StringAccum &'
    `-ParmVarDecl 0x55f5da6f0428 <col:53, col:67> col:67 str 'const String &'

Layout: <CGRecordLayout
  LLVMType:%class.StringAccum = type { %"struct.StringAccum::rep_t" }
  NonVirtualBaseLLVMType:%class.StringAccum = type { %"struct.StringAccum::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class BoolArg (empty)
           | [sizeof=1, dsize=1, align=1,
           |  nvsize=1, nvalign=1]

*** Dumping AST Record Layout
         0 | class NumArg (empty)
           | [sizeof=1, dsize=1, align=1,
           |  nvsize=1, nvalign=1]

*** Dumping AST Record Layout
         0 | class IntArg
         0 |   class NumArg (base) (empty)
         0 |   int base
         4 |   int status
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f5da67aa00 <../dummy_inc/click/args.hh:1013:1, line:1027:1> line:1013:7 referenced class NumArg definition
|-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |-DefaultConstructor exists trivial constexpr defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55f5da67ab18 <col:1, col:7> col:7 implicit class NumArg
|-AccessSpecDecl 0x55f5da67aba8 <col:16, col:22> col:16 public
|-EnumDecl 0x55f5da67abd0 <line:1014:5, line:1026:5> line:1014:5
| |-EnumConstantDecl 0x55f5da67acd0 <line:1015:9, col:21> col:9 status_ok 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| | `-ImplicitCastExpr 0x55f5da67af20 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f5da67acb0 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x55f5da67ac90 <col:21> 'int' 0
| |-EnumConstantDecl 0x55f5da67ad60 <line:1016:9, col:24> col:9 referenced status_inval 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| | `-ImplicitCastExpr 0x55f5da67af38 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f5da67ad40 <col:24> 'int' Int: 22
| |     `-IntegerLiteral 0x55f5da67ad20 <col:24> 'int' 22
| |-EnumConstantDecl 0x55f5da67adf0 <line:1017:9, col:24> col:9 referenced status_range 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| | `-ImplicitCastExpr 0x55f5da67af50 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f5da67add0 <col:24> 'int' Int: 34
| |     `-IntegerLiteral 0x55f5da67adb0 <col:24> 'int' 34
| |-EnumConstantDecl 0x55f5da67ae80 <line:1019:9, col:25> col:9 status_notsup 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| | `-ImplicitCastExpr 0x55f5da67af68 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f5da67ae60 <col:25> 'int' Int: 95
| |     `-IntegerLiteral 0x55f5da67ae40 <col:25> 'int' 95
| `-EnumConstantDecl 0x55f5da67aed0 <line:1025:9> col:9 status_unitless 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
|-CXXConstructorDecl 0x55f5da67c8e0 <line:1013:7> col:7 implicit used constexpr NumArg 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55f5da67cd18 <col:7>
|-CXXConstructorDecl 0x55f5da67c9e8 <col:7> col:7 implicit constexpr NumArg 'void (const NumArg &)' inline default trivial noexcept-unevaluated 0x55f5da67c9e8
| `-ParmVarDecl 0x55f5da67caf8 <col:7> col:7 'const NumArg &'
|-CXXConstructorDecl 0x55f5da67cb98 <col:7> col:7 implicit constexpr NumArg 'void (NumArg &&)' inline default trivial noexcept-unevaluated 0x55f5da67cb98
| `-ParmVarDecl 0x55f5da67cca8 <col:7> col:7 'NumArg &&'
`-CXXDestructorDecl 0x55f5da67ee18 <col:7> col:7 implicit ~NumArg 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.NumArg = type { i8 }
  NonVirtualBaseLLVMType:%class.NumArg = type { i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f5da67af98 <../dummy_inc/click/args.hh:1040:1, line:1095:1> line:1040:7 referenced class IntArg definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-public 'NumArg'
|-CXXRecordDecl 0x55f5da67b0f8 <col:1, col:7> col:7 implicit referenced class IntArg
|-AccessSpecDecl 0x55f5da67b188 <col:32, col:38> col:32 public
|-TypedefDecl 0x55f5da67b1c0 <line:1042:5, col:22> col:22 referenced limb_type 'uint32_t':'unsigned int'
| `-TypedefType 0x55f5da1035c0 'uint32_t' sugar
|   |-Typedef 0x55f5da0123d8 'uint32_t'
|   `-TypedefType 0x55f5d9feb480 '__uint32_t' sugar
|     |-Typedef 0x55f5d9feb078 '__uint32_t'
|     `-BuiltinType 0x55f5d9fa9450 'unsigned int'
|-CXXConstructorDecl 0x55f5da67b308 <line:1044:5, line:1046:5> line:1044:5 used IntArg 'void (int)'
| |-ParmVarDecl 0x55f5da67b230 <col:12, col:20> col:16 used b 'int' cinit
| | `-IntegerLiteral 0x55f5da67c7e8 <col:20> 'int' 0
| |-CXXCtorInitializer 'NumArg'
| | `-CXXConstructExpr 0x55f5da67cd28 <col:5> 'NumArg' 'void () noexcept'
| |-CXXCtorInitializer Field 0x55f5da67c0a0 'base' 'int'
| | `-ImplicitCastExpr 0x55f5da67c888 <line:1045:16> 'int' <LValueToRValue>
| |   `-DeclRefExpr 0x55f5da67c848 <col:16> 'int' lvalue ParmVar 0x55f5da67b230 'b' 'int'
| `-CompoundStmt 0x55f5da67cd98 <col:19, line:1046:5>
|-CXXMethodDecl 0x55f5da67b800 <line:1048:5, line:1050:50> line:1048:17 parse 'const char *(const char *, const char *, bool, int, IntArg::limb_type *, int)'
| |-ParmVarDecl 0x55f5da67b3d0 <col:23, col:35> col:35 begin 'const char *'
| |-ParmVarDecl 0x55f5da67b450 <col:42, col:54> col:54 end 'const char *'
| |-ParmVarDecl 0x55f5da67b4c8 <line:1049:23, col:28> col:28 is_signed 'bool'
| |-ParmVarDecl 0x55f5da67b548 <col:39, col:43> col:43 size 'int'
| |-ParmVarDecl 0x55f5da67b608 <line:1050:23, col:34> col:34 value 'IntArg::limb_type *'
| `-ParmVarDecl 0x55f5da67b688 <col:41, col:45> col:45 nlimb 'int'
|-FunctionTemplateDecl 0x55f5da67bc58 <line:1052:5, line:1067:5> line:1053:10 parse_saturating
| |-TemplateTypeParmDecl 0x55f5da67b8d0 <line:1052:14, col:23> col:23 referenced typename depth 0 index 0 V
| `-CXXMethodDecl 0x55f5da67bbb8 <line:1053:5, line:1067:5> line:1053:10 parse_saturating 'bool (const String &, V &, const ArgContext &)'
|   |-ParmVarDecl 0x55f5da67b978 <col:27, col:41> col:41 referenced str 'const String &'
|   |-ParmVarDecl 0x55f5da67ba18 <col:46, col:49> col:49 referenced result 'V &'
|   |-ParmVarDecl 0x55f5da67ba90 <col:57, col:82> col:75 referenced args 'const ArgContext &' cinit
|   | `-DeclRefExpr 0x55f5da67c808 <col:82> 'const ArgContext' lvalue Var 0x55f5da672290 'blank_args' 'const ArgContext'
|   `-CompoundStmt 0x55f5da67dcc8 <col:94, line:1067:5>
|     |-DeclStmt 0x55f5da67cf28 <line:1054:9, col:64>
|     | `-VarDecl 0x55f5da67cdb8 <col:9, col:55> col:24 referenced is_signed 'const bool' constexpr cinit
|     |   `-CXXDependentScopeMemberExpr 0x55f5da67cee0 <col:36, col:55> '<dependent type>' lvalue ->is_signed
|     |-DeclStmt 0x55f5da67d148 <line:1055:9, col:91>
|     | `-VarDecl 0x55f5da67cf58 <col:9, col:90> col:23 referenced nlimb 'const int' constexpr cinit
|     |   `-CXXFunctionalCastExpr 0x55f5da67d120 <col:31, col:90> 'int' functional cast to int <Dependent>
|     |     `-BinaryOperator 0x55f5da67d100 <col:35, col:89> 'unsigned long' '/'
|     |       |-ParenExpr 0x55f5da67d0b0 <col:35, col:69> 'unsigned long'
|     |       | `-BinaryOperator 0x55f5da67d090 <col:36, col:68> 'unsigned long' '-'
|     |       |   |-BinaryOperator 0x55f5da67d038 <col:36, col:64> 'unsigned long' '+'
|     |       |   | |-UnaryExprOrTypeTraitExpr 0x55f5da67cfe8 <col:36, col:44> 'unsigned long' sizeof 'V'
|     |       |   | `-UnaryExprOrTypeTraitExpr 0x55f5da67d018 <col:48, col:64> 'unsigned long' sizeof 'IntArg::limb_type':'unsigned int'
|     |       |   `-ImplicitCastExpr 0x55f5da67d078 <col:68> 'unsigned long' <IntegralCast>
|     |       |     `-IntegerLiteral 0x55f5da67d058 <col:68> 'int' 1
|     |       `-UnaryExprOrTypeTraitExpr 0x55f5da67d0e0 <col:73, col:89> 'unsigned long' sizeof 'IntArg::limb_type':'unsigned int'
|     |-DeclStmt 0x55f5da67d2a8 <line:1056:9, col:27>
|     | `-VarDecl 0x55f5da67d240 <col:9, col:26> col:19 referenced x 'IntArg::limb_type [nlimb]'
|     |-IfStmt 0x55f5da67d6f8 <line:1057:9, line:1059:22>
|     | |-CXXOperatorCallExpr 0x55f5da67d628 <line:1057:13, line:1058:24> '<dependent type>'
|     | | |-UnresolvedLookupExpr 0x55f5da67d5a0 <col:13> '<overloaded function type>' lvalue (ADL) = 'operator!=' 0x55f5da5db320 0x55f5da4cd5a8 0x55f5da316b88 0x55f5da316860 0x55f5da308040 0x55f5da307cf0 0x55f5da3075e0 0x55f5da2d9f50 0x55f5da266410
|     | | |-CallExpr 0x55f5da67d4e0 <line:1057:13, col:78> '<dependent type>'
|     | | | |-UnresolvedMemberExpr 0x55f5da67d2d0 <col:13> '<bound member function type>' lvalue
|     | | | |-CXXMemberCallExpr 0x55f5da67d380 <col:19, col:29> 'String::const_iterator':'const char *'
|     | | | | `-MemberExpr 0x55f5da67d350 <col:19, col:23> '<bound member function type>' .begin 0x55f5da2f7248
|     | | | |   `-DeclRefExpr 0x55f5da67d330 <col:19> 'const String' lvalue ParmVar 0x55f5da67b978 'str' 'const String &'
|     | | | |-CXXMemberCallExpr 0x55f5da67d3f0 <col:32, col:40> 'String::const_iterator':'const char *'
|     | | | | `-MemberExpr 0x55f5da67d3c0 <col:32, col:36> '<bound member function type>' .end 0x55f5da2f7460
|     | | | |   `-DeclRefExpr 0x55f5da67d3a0 <col:32> 'const String' lvalue ParmVar 0x55f5da67b978 'str' 'const String &'
|     | | | |-DeclRefExpr 0x55f5da67d410 <col:43> 'const bool' lvalue Var 0x55f5da67cdb8 'is_signed' 'const bool'
|     | | | |-CXXFunctionalCastExpr 0x55f5da67d478 <col:54, col:67> 'int' functional cast to int <Dependent>
|     | | | | `-UnaryExprOrTypeTraitExpr 0x55f5da67d458 <col:58, col:66> 'unsigned long' sizeof 'V'
|     | | | |-DeclRefExpr 0x55f5da67d4a0 <col:70> 'IntArg::limb_type [nlimb]' lvalue Var 0x55f5da67d240 'x' 'IntArg::limb_type [nlimb]'
|     | | | `-DeclRefExpr 0x55f5da67d4c0 <col:73> 'const int' lvalue Var 0x55f5da67cf58 'nlimb' 'const int'
|     | | `-CXXMemberCallExpr 0x55f5da67d580 <line:1058:16, col:24> 'String::const_iterator':'const char *'
|     | |   `-MemberExpr 0x55f5da67d550 <col:16, col:20> '<bound member function type>' .end 0x55f5da2f7460
|     | |     `-DeclRefExpr 0x55f5da67d530 <col:16> 'const String' lvalue ParmVar 0x55f5da67b978 'str' 'const String &'
|     | `-BinaryOperator 0x55f5da67d6d8 <line:1059:13, col:22> 'int' lvalue '='
|     |   |-MemberExpr 0x55f5da67d670 <col:13> 'int' lvalue ->status 0x55f5da67c108
|     |   | `-CXXThisExpr 0x55f5da67d660 <col:13> 'IntArg *' implicit this
|     |   `-ImplicitCastExpr 0x55f5da67d6c0 <col:22> 'int' <IntegralCast>
|     |     `-DeclRefExpr 0x55f5da67d6a0 <col:22> 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)' EnumConstant 0x55f5da67ad60 'status_inval' 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
|     |-IfStmt 0x55f5da67d948 <line:1060:9, line:1063:9>
|     | |-BinaryOperator 0x55f5da67d830 <line:1060:13, col:33> 'bool' '&&'
|     | | |-ImplicitCastExpr 0x55f5da67d818 <col:13> 'bool' <IntegralToBoolean>
|     | | | `-ImplicitCastExpr 0x55f5da67d800 <col:13> 'int' <LValueToRValue>
|     | | |   `-MemberExpr 0x55f5da67d720 <col:13> 'int' lvalue ->status 0x55f5da67c108
|     | | |     `-CXXThisExpr 0x55f5da67d710 <col:13> 'IntArg *' implicit this
|     | | `-BinaryOperator 0x55f5da67d7e0 <col:23, col:33> 'bool' '!='
|     | |   |-ImplicitCastExpr 0x55f5da67d7b0 <col:23> 'int' <LValueToRValue>
|     | |   | `-MemberExpr 0x55f5da67d760 <col:23> 'int' lvalue ->status 0x55f5da67c108
|     | |   |   `-CXXThisExpr 0x55f5da67d750 <col:23> 'IntArg *' implicit this
|     | |   `-ImplicitCastExpr 0x55f5da67d7c8 <col:33> 'int' <IntegralCast>
|     | |     `-DeclRefExpr 0x55f5da67d790 <col:33> 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)' EnumConstant 0x55f5da67adf0 'status_range' 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
|     | `-CompoundStmt 0x55f5da67d928 <col:47, line:1063:9>
|     |   |-CXXMemberCallExpr 0x55f5da67d8c8 <line:1061:13, col:40> 'void'
|     |   | |-MemberExpr 0x55f5da67d870 <col:13, col:18> '<bound member function type>' .error 0x55f5da621410
|     |   | | `-DeclRefExpr 0x55f5da67d850 <col:13> 'const ArgContext' lvalue ParmVar 0x55f5da67ba90 'args' 'const ArgContext &'
|     |   | `-ImplicitCastExpr 0x55f5da67d8f0 <col:24> 'const char *' <ArrayToPointerDecay>
|     |   |   `-StringLiteral 0x55f5da67d8a0 <col:24> 'const char [15]' lvalue "invalid number"
|     |   `-ReturnStmt 0x55f5da67d918 <line:1062:13, col:20>
|     |     `-CXXBoolLiteralExpr 0x55f5da67d908 <col:20> 'bool' false
|     |-DeclStmt 0x55f5da67db18 <line:1064:9, col:64>
|     | `-TypedefDecl 0x55f5da67dac0 <col:9, col:49> col:49 referenced unsigned_v_type 'typename make_unsigned<V>::type'
|     |   `-DependentNameType 0x55f5da67da50 'typename make_unsigned<V>::type' dependent
|     |-CallExpr 0x55f5da67dc78 <line:1065:9, col:71> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x55f5da67db30 <col:9> '<overloaded function type>' lvalue (ADL) = 'extract_integer' 0x55f5da29a3d8
|     | |-DeclRefExpr 0x55f5da67db78 <col:25> 'IntArg::limb_type [nlimb]' lvalue Var 0x55f5da67d240 'x' 'IntArg::limb_type [nlimb]'
|     | `-CXXReinterpretCastExpr 0x55f5da67dc48 <col:28, col:70> 'unsigned_v_type':'typename make_unsigned<V>::type' lvalue reinterpret_cast<unsigned_v_type &> <Dependent>
|     |   `-DeclRefExpr 0x55f5da67dbc0 <col:64> 'V' lvalue ParmVar 0x55f5da67ba18 'result' 'V &'
|     `-ReturnStmt 0x55f5da67dcb8 <line:1066:9, col:16>
|       `-CXXBoolLiteralExpr 0x55f5da67dca8 <col:16> 'bool' true
|-FunctionTemplateDecl 0x55f5da67c018 <line:1069:5, line:1083:5> line:1070:10 parse
| |-TemplateTypeParmDecl 0x55f5da67bcc8 <line:1069:14, col:23> col:23 referenced typename depth 0 index 0 V
| |-CXXMethodDecl 0x55f5da67bf78 <line:1070:5, line:1083:5> line:1070:10 parse 'bool (const String &, V &, const ArgContext &)'
| | |-ParmVarDecl 0x55f5da67bd78 <col:16, col:30> col:30 referenced str 'const String &'
| | |-ParmVarDecl 0x55f5da67be18 <col:35, col:38> col:38 referenced result 'V &'
| | |-ParmVarDecl 0x55f5da67be90 <col:46, col:71> col:64 referenced args 'const ArgContext &' cinit
| | | `-DeclRefExpr 0x55f5da67c828 <col:71> 'const ArgContext' lvalue Var 0x55f5da672290 'blank_args' 'const ArgContext'
| | `-CompoundStmt 0x55f5da67e438 <col:83, line:1083:5>
| |   |-DeclStmt 0x55f5da67dd90 <line:1071:9, col:12>
| |   | `-VarDecl 0x55f5da67dd28 <col:9, col:11> col:11 referenced x 'V'
| |   `-IfStmt 0x55f5da67e410 <line:1072:9, line:1082:9> has_else
| |     |-BinaryOperator 0x55f5da67e020 <line:1072:13, line:1073:49> '<dependent type>' '||'
| |     | |-UnaryOperator 0x55f5da67dea8 <line:1072:13, col:43> '<dependent type>' prefix '!' cannot overflow
| |     | | `-CallExpr 0x55f5da67de70 <col:14, col:43> '<dependent type>'
| |     | |   |-UnresolvedMemberExpr 0x55f5da67ddb8 <col:14> '<bound member function type>' lvalue
| |     | |   |-DeclRefExpr 0x55f5da67de10 <col:31> 'const String' lvalue ParmVar 0x55f5da67bd78 'str' 'const String &'
| |     | |   |-DeclRefExpr 0x55f5da67de30 <col:36> 'V' lvalue Var 0x55f5da67dd28 'x' 'V'
| |     | |   `-DeclRefExpr 0x55f5da67de50 <col:39> 'const ArgContext' lvalue ParmVar 0x55f5da67be90 'args' 'const ArgContext &'
| |     | `-ParenExpr 0x55f5da67e000 <line:1073:16, col:49> 'bool'
| |     |   `-BinaryOperator 0x55f5da67dfe0 <col:17, col:37> 'bool' '&&'
| |     |     |-ImplicitCastExpr 0x55f5da67dfc8 <col:17> 'bool' <IntegralToBoolean>
| |     |     | `-ImplicitCastExpr 0x55f5da67dfb0 <col:17> 'int' <LValueToRValue>
| |     |     |   `-MemberExpr 0x55f5da67ded0 <col:17> 'int' lvalue ->status 0x55f5da67c108
| |     |     |     `-CXXThisExpr 0x55f5da67dec0 <col:17> 'IntArg *' implicit this
| |     |     `-BinaryOperator 0x55f5da67df90 <col:27, col:37> 'bool' '!='
| |     |       |-ImplicitCastExpr 0x55f5da67df60 <col:27> 'int' <LValueToRValue>
| |     |       | `-MemberExpr 0x55f5da67df10 <col:27> 'int' lvalue ->status 0x55f5da67c108
| |     |       |   `-CXXThisExpr 0x55f5da67df00 <col:27> 'IntArg *' implicit this
| |     |       `-ImplicitCastExpr 0x55f5da67df78 <col:37> 'int' <IntegralCast>
| |     |         `-DeclRefExpr 0x55f5da67df40 <col:37> 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)' EnumConstant 0x55f5da67adf0 'status_range' 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| |     |-ReturnStmt 0x55f5da67e050 <line:1074:13, col:20>
| |     | `-CXXBoolLiteralExpr 0x55f5da67e040 <col:20> 'bool' false
| |     `-IfStmt 0x55f5da67e3e8 <line:1075:14, line:1082:9> has_else
| |       |-BinaryOperator 0x55f5da67e0f0 <line:1075:18, col:28> 'bool' '=='
| |       | |-ImplicitCastExpr 0x55f5da67e0c0 <col:18> 'int' <LValueToRValue>
| |       | | `-MemberExpr 0x55f5da67e070 <col:18> 'int' lvalue ->status 0x55f5da67c108
| |       | |   `-CXXThisExpr 0x55f5da67e060 <col:18> 'IntArg *' implicit this
| |       | `-ImplicitCastExpr 0x55f5da67e0d8 <col:28> 'int' <IntegralCast>
| |       |   `-DeclRefExpr 0x55f5da67e0a0 <col:28> 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)' EnumConstant 0x55f5da67adf0 'status_range' 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| |       |-CompoundStmt 0x55f5da67e328 <col:42, line:1079:9>
| |       | |-CallExpr 0x55f5da67e2d0 <line:1076:13, line:1077:45> '<dependent type>'
| |       | | |-MemberExpr 0x55f5da67e120 <line:1076:13> '<bound member function type>' ->range_error 0x55f5da67c718
| |       | | | `-CXXThisExpr 0x55f5da67e110 <col:13> 'IntArg *' implicit this
| |       | | |-DeclRefExpr 0x55f5da67e150 <col:25> 'const ArgContext' lvalue ParmVar 0x55f5da67be90 'args' 'const ArgContext &'
| |       | | |-CXXDependentScopeMemberExpr 0x55f5da67e230 <col:31, col:50> '<dependent type>' lvalue ->is_signed
| |       | | `-CXXUnresolvedConstructExpr 0x55f5da67e2a8 <line:1077:25, col:44> 'click_int_large_t':'long long' 'click_int_large_t':'long long'
| |       | |   `-DeclRefExpr 0x55f5da67e288 <col:43> 'V' lvalue Var 0x55f5da67dd28 'x' 'V'
| |       | `-ReturnStmt 0x55f5da67e318 <line:1078:13, col:20>
| |       |   `-CXXBoolLiteralExpr 0x55f5da67e308 <col:20> 'bool' false
| |       `-CompoundStmt 0x55f5da67e3c8 <line:1079:16, line:1082:9>
| |         |-BinaryOperator 0x55f5da67e388 <line:1080:13, col:22> '<dependent type>' '='
| |         | |-DeclRefExpr 0x55f5da67e348 <col:13> 'V' lvalue ParmVar 0x55f5da67be18 'result' 'V &'
| |         | `-DeclRefExpr 0x55f5da67e368 <col:22> 'V' lvalue Var 0x55f5da67dd28 'x' 'V'
| |         `-ReturnStmt 0x55f5da67e3b8 <line:1081:13, col:20>
| |           `-CXXBoolLiteralExpr 0x55f5da67e3a8 <col:20> 'bool' true
| `-CXXMethodDecl 0x55f5da7549e8 <line:1070:5, line:1083:5> line:1070:10 used parse 'bool (const String &, int &, const ArgContext &)'
|   |-TemplateArgument type 'int'
|   |-ParmVarDecl 0x55f5da7547c8 <col:16, col:30> col:30 str 'const String &'
|   |-ParmVarDecl 0x55f5da754898 <col:35, col:38> col:38 result 'int &'
|   `-ParmVarDecl 0x55f5da754900 <col:46, col:71> col:64 args 'const ArgContext &' cinit
|     `-DeclRefExpr 0x55f5da67c828 <col:71> 'const ArgContext' lvalue Var 0x55f5da672290 'blank_args' 'const ArgContext'
|-FieldDecl 0x55f5da67c0a0 <line:1085:5, col:9> col:9 base 'int'
|-FieldDecl 0x55f5da67c108 <line:1086:5, col:9> col:9 referenced status 'int'
|-AccessSpecDecl 0x55f5da67c158 <line:1088:3, col:12> col:3 protected
|-CXXMethodDecl 0x55f5da67c410 <line:1090:5, line:1091:51> line:1090:24 span 'const char *(const char *, const char *, bool, int &)' static
| |-ParmVarDecl 0x55f5da67c198 <col:29, col:41> col:41 begin 'const char *'
| |-ParmVarDecl 0x55f5da67c218 <col:48, col:60> col:60 end 'const char *'
| |-ParmVarDecl 0x55f5da67c290 <line:1091:29, col:34> col:34 is_signed 'bool'
| `-ParmVarDecl 0x55f5da67c310 <col:45, col:50> col:50 b 'int &'
|-CXXMethodDecl 0x55f5da67c718 <line:1092:5, line:1093:45> line:1092:10 referenced range_error 'void (const ArgContext &, bool, click_int_large_t)'
| |-ParmVarDecl 0x55f5da67c4e0 <col:22, col:40> col:40 args 'const ArgContext &'
| |-ParmVarDecl 0x55f5da67c558 <col:46, col:51> col:51 is_signed 'bool'
| `-ParmVarDecl 0x55f5da67c5f0 <line:1093:22, col:40> col:40 value 'click_int_large_t':'long long'
|-CXXConstructorDecl 0x55f5da67ec98 <line:1040:7> col:7 implicit constexpr IntArg 'void (const IntArg &)' inline default trivial noexcept-unevaluated 0x55f5da67ec98
| `-ParmVarDecl 0x55f5da67eda8 <col:7> col:7 'const IntArg &'
|-CXXConstructorDecl 0x55f5da67ef28 <col:7> col:7 implicit constexpr IntArg 'void (IntArg &&)' inline default trivial noexcept-unevaluated 0x55f5da67ef28
| `-ParmVarDecl 0x55f5da67f038 <col:7> col:7 'IntArg &&'
`-CXXDestructorDecl 0x55f5da754570 <col:7> col:7 implicit referenced ~IntArg 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.IntArg = type { i32, i32 }
  NonVirtualBaseLLVMType:%class.IntArg = type { i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f5da688600 <../dummy_inc/click/args.hh:1257:1, line:1262:1> line:1257:7 referenced class BoolArg definition
|-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |-DefaultConstructor exists trivial constexpr defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55f5da688718 <col:1, col:7> col:7 implicit class BoolArg
|-AccessSpecDecl 0x55f5da6887a8 <col:17, col:23> col:17 public
|-CXXMethodDecl 0x55f5da6889e8 <line:1258:5, col:91> col:17 used parse 'bool (const String &, bool &, const ArgContext &)' static
| |-ParmVarDecl 0x55f5da6887e0 <col:23, col:37> col:37 str 'const String &'
| |-ParmVarDecl 0x55f5da688860 <col:42, col:48> col:48 result 'bool &'
| `-ParmVarDecl 0x55f5da6888d8 <col:56, col:81> col:74 args 'const ArgContext &' cinit
|   `-DeclRefExpr 0x55f5da688c00 <col:81> 'const ArgContext' lvalue Var 0x55f5da672290 'blank_args' 'const ArgContext'
|-CXXMethodDecl 0x55f5da688b40 <line:1259:5, line:1261:5> line:1259:19 unparse 'String (bool)' static
| |-ParmVarDecl 0x55f5da688ab0 <col:27, col:32> col:32 used x 'bool'
| `-CompoundStmt 0x55f5da688d58 <col:35, line:1261:5>
|   `-ReturnStmt 0x55f5da688d48 <line:1260:9, col:24>
|     `-ExprWithCleanups 0x55f5da688d30 <col:16, col:24> 'String'
|       `-CXXConstructExpr 0x55f5da688d00 <col:16, col:24> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x55f5da688ce8 <col:16, col:24> 'String' xvalue
|           `-CXXFunctionalCastExpr 0x55f5da688cc0 <col:16, col:24> 'String' functional cast to class String <ConstructorConversion>
|             `-CXXBindTemporaryExpr 0x55f5da688ca0 <col:16, col:24> 'String' (CXXTemporary 0x55f5da688ca0)
|               `-CXXConstructExpr 0x55f5da688c68 <col:16, col:24> 'String' 'void (bool)'
|                 `-ImplicitCastExpr 0x55f5da688c50 <col:23> 'bool' <LValueToRValue>
|                   `-DeclRefExpr 0x55f5da688c30 <col:23> 'bool' lvalue ParmVar 0x55f5da688ab0 'x' 'bool'
|-CXXConstructorDecl 0x55f5da755500 <line:1257:7> col:7 implicit referenced constexpr BoolArg 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x55f5da755608 <col:7> col:7 implicit constexpr BoolArg 'void (const BoolArg &)' inline default trivial noexcept-unevaluated 0x55f5da755608
| `-ParmVarDecl 0x55f5da755718 <col:7> col:7 'const BoolArg &'
|-CXXConstructorDecl 0x55f5da7557b8 <col:7> col:7 implicit constexpr BoolArg 'void (BoolArg &&)' inline default trivial noexcept-unevaluated 0x55f5da7557b8
| `-ParmVarDecl 0x55f5da7558c8 <col:7> col:7 'BoolArg &&'
`-CXXDestructorDecl 0x55f5da755968 <col:7> col:7 implicit referenced ~BoolArg 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.BoolArg = type { i8 }
  NonVirtualBaseLLVMType:%class.BoolArg = type { i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5)
         0 |   TimerCallback callback
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timer
         0 |   int _schedpos1
         8 |   class Timestamp _expiry_s
         8 |     union Timestamp::rep_t _t
         8 |       int64_t x
        16 |   union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5) _hook
        16 |     TimerCallback callback
        24 |   void * _thunk
        32 |   class Element * _owner
        40 |   class RouterThread * _thread
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f5da496a38 <../dummy_inc/click/timer.hh:343:5, line:345:5> line:343:5 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x55f5da496b68 <line:344:2, col:16> col:16 referenced callback 'TimerCallback':'void (*)(Timer *, void *)'
`-CXXDestructorDecl 0x55f5da497658 <line:343:5> col:5 implicit ~ 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%union.anon.19 = type { void (%class.Timer*, i8*)* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f5da493338 prev 0x55f5da50f610 <../dummy_inc/click/timer.hh:14:1, line:358:1> line:14:7 class Timer definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55f5da493430 <col:1, col:7> col:7 implicit referenced class Timer
|-AccessSpecDecl 0x55f5da4934c0 <col:15, col:21> col:15 public
|-CXXConstructorDecl 0x55f5da493520 <line:22:5, col:11> col:5 Timer 'void ()'
|-CXXRecordDecl 0x55f5da4935c8 <line:24:5, line:25:5> line:24:12 referenced struct do_nothing_t definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| `-CXXRecordDecl 0x55f5da4936e8 <col:5, col:12> col:12 implicit struct do_nothing_t
|-CXXConstructorDecl 0x55f5da493888 <line:32:5, col:37> col:5 Timer 'void (const Timer::do_nothing_t &)'
| `-ParmVarDecl 0x55f5da4937c8 <col:11, col:31> col:31 unused 'const Timer::do_nothing_t &'
|-CXXConstructorDecl 0x55f5da493ad8 <line:38:5, col:43> col:5 Timer 'void (TimerCallback, void *)'
| |-ParmVarDecl 0x55f5da493948 <col:11, col:25> col:25 f 'TimerCallback':'void (*)(Timer *, void *)'
| `-ParmVarDecl 0x55f5da4939c8 <col:28, col:34> col:34 user_data 'void *'
|-CXXConstructorDecl 0x55f5da493c30 <line:43:5, col:27> col:5 Timer 'void (Element *)'
| `-ParmVarDecl 0x55f5da493ba0 <col:11, col:20> col:20 element 'Element *'
|-CXXConstructorDecl 0x55f5da493db8 <line:47:5, col:21> col:5 Timer 'void (Task *)'
| `-ParmVarDecl 0x55f5da493cf0 <col:11, col:17> col:17 task 'Task *'
|-CXXConstructorDecl 0x55f5da493f68 <line:52:5, col:25> col:5 Timer 'void (const Timer &)'
| `-ParmVarDecl 0x55f5da493ea8 <col:11, col:24> col:24 x 'const Timer &'
|-CXXDestructorDecl 0x55f5da494060 <line:55:5, line:58:5> line:55:12 ~Timer 'void () noexcept' inline
| `-CompoundStmt 0x55f5da497830 <col:21, line:58:5>
|   `-IfStmt 0x55f5da497818 <line:56:2, line:57:17>
|     |-CXXMemberCallExpr 0x55f5da497780 <line:56:6, col:16> 'bool'
|     | `-MemberExpr 0x55f5da497750 <col:6> '<bound member function type>' ->scheduled 0x55f5da4948b8
|     |   `-ImplicitCastExpr 0x55f5da4977a0 <col:6> 'const Timer *' <NoOp>
|     |     `-CXXThisExpr 0x55f5da497740 <col:6> 'Timer *' implicit this
|     `-CXXMemberCallExpr 0x55f5da4977f8 <line:57:6, col:17> 'void'
|       `-MemberExpr 0x55f5da4977c8 <col:6> '<bound member function type>' ->unschedule 0x55f5da495ee0
|         `-CXXThisExpr 0x55f5da4977b8 <col:6> 'Timer *' implicit this
|-CXXMethodDecl 0x55f5da494160 <line:62:5, line:65:5> line:62:17 used assign 'void ()' inline
| `-CompoundStmt 0x55f5da4979d0 <col:26, line:65:5>
|   |-BinaryOperator 0x55f5da4978f0 <line:63:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x55f5da497888 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x55f5da496b68
|   | | `-MemberExpr 0x55f5da497858 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x55f5da496c28
|   | |   `-CXXThisExpr 0x55f5da497848 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x55f5da4978d8 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f5da4978b8 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x55f5da497088 'do_nothing_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x55f5da4979b0 <line:64:2, col:20> 'void *' lvalue '='
|     |-MemberExpr 0x55f5da497920 <col:2> 'void *' lvalue ->_thunk 0x55f5da496ca8
|     | `-CXXThisExpr 0x55f5da497910 <col:2> 'Timer *' implicit this
|     `-CStyleCastExpr 0x55f5da497988 <col:11, col:20> 'void *' <IntegralToPointer>
|       `-IntegerLiteral 0x55f5da497950 <col:20> 'int' 1
|-CXXMethodDecl 0x55f5da4942a0 <line:68:5, line:71:5> line:68:17 assign 'void (const Timer::do_nothing_t &)' inline
| |-ParmVarDecl 0x55f5da494210 <col:24, col:44> col:44 used unused 'const Timer::do_nothing_t &'
| `-CompoundStmt 0x55f5da497b30 <col:52, line:71:5>
|   |-CStyleCastExpr 0x55f5da497a20 <line:69:2, col:9> 'void' <ToVoid>
|   | `-DeclRefExpr 0x55f5da4979f0 <col:9> 'const Timer::do_nothing_t' lvalue ParmVar 0x55f5da494210 'unused' 'const Timer::do_nothing_t &'
|   `-CXXMemberCallExpr 0x55f5da497b10 <line:70:2, col:9> 'void'
|     `-MemberExpr 0x55f5da497ae0 <col:2> '<bound member function type>' ->assign 0x55f5da494160
|       `-CXXThisExpr 0x55f5da497ad0 <col:2> 'Timer *' implicit this
|-CXXMethodDecl 0x55f5da494470 <line:76:5, line:79:5> line:76:17 assign 'void (TimerCallback, void *)' inline
| |-ParmVarDecl 0x55f5da494358 <col:24, col:38> col:38 used f 'TimerCallback':'void (*)(Timer *, void *)'
| |-ParmVarDecl 0x55f5da4943d8 <col:41, col:47> col:47 used user_data 'void *'
| `-CompoundStmt 0x55f5da548010 <col:58, line:79:5>
|   |-BinaryOperator 0x55f5da547f58 <line:77:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x55f5da547ef0 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x55f5da496b68
|   | | `-MemberExpr 0x55f5da497b60 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x55f5da496c28
|   | |   `-CXXThisExpr 0x55f5da497b50 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x55f5da547f40 <col:19> 'TimerCallback':'void (*)(Timer *, void *)' <LValueToRValue>
|   |   `-DeclRefExpr 0x55f5da547f20 <col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue ParmVar 0x55f5da494358 'f' 'TimerCallback':'void (*)(Timer *, void *)'
|   `-BinaryOperator 0x55f5da547ff0 <line:78:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x55f5da547f88 <col:2> 'void *' lvalue ->_thunk 0x55f5da496ca8
|     | `-CXXThisExpr 0x55f5da547f78 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x55f5da547fd8 <col:11> 'void *' <LValueToRValue>
|       `-DeclRefExpr 0x55f5da547fb8 <col:11> 'void *' lvalue ParmVar 0x55f5da4943d8 'user_data' 'void *'
|-CXXMethodDecl 0x55f5da4945c0 <line:84:5, line:87:5> line:84:10 assign 'void (Element *)'
| |-ParmVarDecl 0x55f5da494530 <col:17, col:26> col:26 used element 'Element *'
| `-CompoundStmt 0x55f5da5481a8 <col:35, line:87:5>
|   |-BinaryOperator 0x55f5da5480d8 <line:85:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x55f5da548070 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x55f5da496b68
|   | | `-MemberExpr 0x55f5da548040 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x55f5da496c28
|   | |   `-CXXThisExpr 0x55f5da548030 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x55f5da5480c0 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f5da5480a0 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x55f5da497260 'element_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x55f5da548188 <line:86:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x55f5da548108 <col:2> 'void *' lvalue ->_thunk 0x55f5da496ca8
|     | `-CXXThisExpr 0x55f5da5480f8 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x55f5da548170 <col:11> 'void *' <BitCast>
|       `-ImplicitCastExpr 0x55f5da548158 <col:11> 'Element *' <LValueToRValue>
|         `-DeclRefExpr 0x55f5da548138 <col:11> 'Element *' lvalue ParmVar 0x55f5da494530 'element' 'Element *'
|-CXXMethodDecl 0x55f5da494708 <line:91:5, line:94:5> line:91:10 assign 'void (Task *)'
| |-ParmVarDecl 0x55f5da494678 <col:17, col:23> col:23 used task 'Task *'
| `-CompoundStmt 0x55f5da548340 <col:29, line:94:5>
|   |-BinaryOperator 0x55f5da548270 <line:92:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x55f5da548208 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x55f5da496b68
|   | | `-MemberExpr 0x55f5da5481d8 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x55f5da496c28
|   | |   `-CXXThisExpr 0x55f5da5481c8 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x55f5da548258 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f5da548238 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x55f5da497438 'task_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x55f5da548320 <line:93:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x55f5da5482a0 <col:2> 'void *' lvalue ->_thunk 0x55f5da496ca8
|     | `-CXXThisExpr 0x55f5da548290 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x55f5da548308 <col:11> 'void *' <BitCast>
|       `-ImplicitCastExpr 0x55f5da5482f0 <col:11> 'Task *' <LValueToRValue>
|         `-DeclRefExpr 0x55f5da5482d0 <col:11> 'Task *' lvalue ParmVar 0x55f5da494678 'task' 'Task *'
|-CXXMethodDecl 0x55f5da4947f8 <line:98:5, line:100:5> line:98:17 initialized 'bool () const' inline
| `-CompoundStmt 0x55f5da548420 <col:37, line:100:5>
|   `-ReturnStmt 0x55f5da548410 <line:99:2, col:19>
|     `-BinaryOperator 0x55f5da5483f0 <col:9, col:19> 'bool' '!='
|       |-ImplicitCastExpr 0x55f5da5483c0 <col:9> 'Element *' <LValueToRValue>
|       | `-MemberExpr 0x55f5da548370 <col:9> 'Element *const' lvalue ->_owner 0x55f5da496d08
|       |   `-CXXThisExpr 0x55f5da548360 <col:9> 'const Timer *' implicit this
|       `-ImplicitCastExpr 0x55f5da5483d8 <col:19> 'Element *' <NullToPointer>
|         `-IntegerLiteral 0x55f5da5483a0 <col:19> 'int' 0
|-CXXMethodDecl 0x55f5da4948b8 <line:103:5, line:105:5> line:103:17 used scheduled 'bool () const' inline
| `-CompoundStmt 0x55f5da5484e0 <col:35, line:105:5>
|   `-ReturnStmt 0x55f5da5484d0 <line:104:2, col:23>
|     `-BinaryOperator 0x55f5da5484b0 <col:9, col:23> 'bool' '!='
|       |-ImplicitCastExpr 0x55f5da548498 <col:9> 'int' <LValueToRValue>
|       | `-MemberExpr 0x55f5da548448 <col:9> 'const int' lvalue ->_schedpos1 0x55f5da496988
|       |   `-CXXThisExpr 0x55f5da548438 <col:9> 'const Timer *' implicit this
|       `-IntegerLiteral 0x55f5da548478 <col:23> 'int' 0
|-CXXMethodDecl 0x55f5da494978 <line:116:5, line:118:5> line:116:29 used expiry_steady 'const Timestamp &() const' inline
| `-CompoundStmt 0x55f5da548548 <col:51, line:118:5>
|   `-ReturnStmt 0x55f5da548538 <line:117:2, col:9>
|     `-MemberExpr 0x55f5da548508 <col:9> 'const Timestamp' lvalue ->_expiry_s 0x55f5da4969e8
|       `-CXXThisExpr 0x55f5da5484f8 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x55f5da494a38 <line:131:5, line:136:5> line:131:22 expiry 'Timestamp () const' inline
| `-CompoundStmt 0x55f5da548aa0 <col:37, line:136:5>
|   `-IfStmt 0x55f5da548a78 <line:132:2, line:135:13> has_else
|     |-ImplicitCastExpr 0x55f5da548608 <line:132:6> 'bool' <MemberPointerToBoolean>
|     | `-ImplicitCastExpr 0x55f5da5485f0 <col:6> 'Timestamp::unspecified_bool_type':'Timestamp::seconds_type (Timestamp::*)() const' <UserDefinedConversion>
|     |   `-CXXMemberCallExpr 0x55f5da5485d0 <col:6> 'Timestamp::unspecified_bool_type':'Timestamp::seconds_type (Timestamp::*)() const'
|     |     `-MemberExpr 0x55f5da5485a0 <col:6> '<bound member function type>' .operator int (Timestamp::*)() const 0x55f5da4a16e8
|     |       `-MemberExpr 0x55f5da548570 <col:6> 'const Timestamp' lvalue ->_expiry_s 0x55f5da4969e8
|     |         `-CXXThisExpr 0x55f5da548560 <col:6> 'const Timer *' implicit this
|     |-ReturnStmt 0x55f5da5489e8 <line:133:6, col:72>
|     | `-ExprWithCleanups 0x55f5da5489d0 <col:13, col:72> 'Timestamp'
|     |   `-CXXConstructExpr 0x55f5da5489a0 <col:13, col:72> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|     |     `-MaterializeTemporaryExpr 0x55f5da548988 <col:13, col:72> 'Timestamp' xvalue
|     |       `-CXXOperatorCallExpr 0x55f5da548950 <col:13, col:72> 'Timestamp'
|     |         |-ImplicitCastExpr 0x55f5da548938 <col:45> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|     |         | `-DeclRefExpr 0x55f5da548918 <col:45> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55f5da4cfec0 'operator-' 'Timestamp (Timestamp, const Timestamp &)'
|     |         |-CXXConstructExpr 0x55f5da5488b8 <col:13, col:43> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|     |         | `-MaterializeTemporaryExpr 0x55f5da5488a0 <col:13, col:43> 'Timestamp' xvalue
|     |         |   `-CXXOperatorCallExpr 0x55f5da5487c8 <col:13, col:43> 'Timestamp'
|     |         |     |-ImplicitCastExpr 0x55f5da5487b0 <col:23> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|     |         |     | `-DeclRefExpr 0x55f5da548790 <col:23> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55f5da4cfb80 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|     |         |     |-CXXConstructExpr 0x55f5da548730 <col:13> 'Timestamp' 'void (const Timestamp &) noexcept'
|     |         |     | `-MemberExpr 0x55f5da548630 <col:13> 'const Timestamp' lvalue ->_expiry_s 0x55f5da4969e8
|     |         |     |   `-CXXThisExpr 0x55f5da548620 <col:13> 'const Timer *' implicit this
|     |         |     `-MaterializeTemporaryExpr 0x55f5da548778 <col:25, col:43> 'const Timestamp' lvalue
|     |         |       `-ImplicitCastExpr 0x55f5da548760 <col:25, col:43> 'const Timestamp' <NoOp>
|     |         |         `-CallExpr 0x55f5da548710 <col:25, col:43> 'Timestamp'
|     |         |           `-ImplicitCastExpr 0x55f5da5486f8 <col:25, col:36> 'Timestamp (*)()' <FunctionToPointerDecay>
|     |         |             `-DeclRefExpr 0x55f5da548698 <col:25, col:36> 'Timestamp ()' lvalue CXXMethod 0x55f5da4c31e0 'recent' 'Timestamp ()'
|     |         `-MaterializeTemporaryExpr 0x55f5da548900 <col:47, col:72> 'const Timestamp' lvalue
|     |           `-ImplicitCastExpr 0x55f5da5488e8 <col:47, col:72> 'const Timestamp' <NoOp>
|     |             `-CallExpr 0x55f5da548880 <col:47, col:72> 'Timestamp'
|     |               `-ImplicitCastExpr 0x55f5da548868 <col:47, col:58> 'Timestamp (*)()' <FunctionToPointerDecay>
|     |                 `-DeclRefExpr 0x55f5da548838 <col:47, col:58> 'Timestamp ()' lvalue CXXMethod 0x55f5da31e730 'recent_steady' 'Timestamp ()'
|     `-ReturnStmt 0x55f5da548a68 <line:135:6, col:13>
|       `-CXXConstructExpr 0x55f5da548a38 <col:13> 'Timestamp' 'void (const Timestamp &) noexcept'
|         `-MemberExpr 0x55f5da548a08 <col:13> 'const Timestamp' lvalue ->_expiry_s 0x55f5da4969e8
|           `-CXXThisExpr 0x55f5da5489f8 <col:13> 'const Timer *' implicit this
|-CXXMethodDecl 0x55f5da494af8 <line:139:5, line:141:5> line:139:20 router 'Router *() const' inline
| `-CompoundStmt 0x55f5da548b88 <col:35, line:141:5>
|   `-ReturnStmt 0x55f5da548b78 <line:140:2, col:24>
|     `-CXXMemberCallExpr 0x55f5da548b40 <col:9, col:24> 'Router *'
|       `-MemberExpr 0x55f5da548b10 <col:9, col:17> '<bound member function type>' ->router 0x55f5da521d70
|         `-ImplicitCastExpr 0x55f5da548b60 <col:9> 'const Element *' <NoOp>
|           `-ImplicitCastExpr 0x55f5da548af8 <col:9> 'Element *' <LValueToRValue>
|             `-MemberExpr 0x55f5da548ac8 <col:9> 'Element *const' lvalue ->_owner 0x55f5da496d08
|               `-CXXThisExpr 0x55f5da548ab8 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x55f5da494bb8 <line:144:5, line:146:5> line:144:21 element 'Element *() const' inline
| `-CompoundStmt 0x55f5da548c08 <col:37, line:146:5>
|   `-ReturnStmt 0x55f5da548bf8 <line:145:2, col:9>
|     `-ImplicitCastExpr 0x55f5da548be0 <col:9> 'Element *' <LValueToRValue>
|       `-MemberExpr 0x55f5da548bb0 <col:9> 'Element *const' lvalue ->_owner 0x55f5da496d08
|         `-CXXThisExpr 0x55f5da548ba0 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x55f5da494c78 <line:149:5, line:151:5> line:149:26 thread 'RouterThread *() const' inline
| `-CompoundStmt 0x55f5da548c88 <col:41, line:151:5>
|   `-ReturnStmt 0x55f5da548c78 <line:150:2, col:9>
|     `-ImplicitCastExpr 0x55f5da548c60 <col:9> 'RouterThread *' <LValueToRValue>
|       `-MemberExpr 0x55f5da548c30 <col:9> 'RouterThread *const' lvalue ->_thread 0x55f5da496d68
|         `-CXXThisExpr 0x55f5da548c20 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x55f5da494d40 <line:154:5, col:26> col:9 home_thread_id 'int () const'
|-CXXMethodDecl 0x55f5da494f00 <line:171:5, col:55> col:10 initialize 'void (Element *, bool)'
| |-ParmVarDecl 0x55f5da494df0 <col:21, col:30> col:30 owner 'Element *'
| `-ParmVarDecl 0x55f5da494e68 <col:37, col:50> col:42 quiet 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55f5da497648 <col:50> 'bool' false
|-CXXMethodDecl 0x55f5da495088 <line:181:5, col:35> col:10 initialize 'void (Router *)'
| `-ParmVarDecl 0x55f5da494fc0 <col:21, col:29> col:29 router 'Router *'
|-CXXMethodDecl 0x55f5da4951d0 <line:191:5, col:57> col:10 used schedule_at_steady 'void (const Timestamp &)'
| `-ParmVarDecl 0x55f5da495140 <col:29, col:46> col:46 when_steady 'const Timestamp &'
|-CXXMethodDecl 0x55f5da495318 <line:197:5, col:59> col:10 reschedule_at_steady 'void (const Timestamp &)'
| `-ParmVarDecl 0x55f5da495288 <col:31, col:48> col:48 when_steady 'const Timestamp &'
|-CXXMethodDecl 0x55f5da495460 <line:210:5, col:50> col:17 used schedule_at 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x55f5da4953d0 <col:29, col:46> col:46 when 'const Timestamp &'
|-CXXMethodDecl 0x55f5da4955a8 <line:216:5, col:52> col:17 reschedule_at 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x55f5da495518 <col:31, col:48> col:48 when 'const Timestamp &'
|-CXXMethodDecl 0x55f5da495670 <line:221:5, line:223:5> line:221:17 schedule_now 'void ()' inline
| `-CompoundStmt 0x55f5da548df0 <col:32, line:223:5>
|   `-ExprWithCleanups 0x55f5da548dd8 <line:222:2, col:47> 'void'
|     `-CXXMemberCallExpr 0x55f5da548d80 <col:2, col:47> 'void'
|       |-MemberExpr 0x55f5da548cb0 <col:2> '<bound member function type>' ->schedule_at_steady 0x55f5da4951d0
|       | `-CXXThisExpr 0x55f5da548ca0 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55f5da548dc0 <col:21, col:46> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55f5da548da8 <col:21, col:46> 'const Timestamp' <NoOp>
|           `-CallExpr 0x55f5da548d60 <col:21, col:46> 'Timestamp'
|             `-ImplicitCastExpr 0x55f5da548d48 <col:21, col:32> 'Timestamp (*)()' <FunctionToPointerDecay>
|               `-DeclRefExpr 0x55f5da548d18 <col:21, col:32> 'Timestamp ()' lvalue CXXMethod 0x55f5da31e730 'recent_steady' 'Timestamp ()'
|-CXXMethodDecl 0x55f5da4957b0 <line:233:5, col:47> col:10 used schedule_after 'void (const Timestamp &)'
| `-ParmVarDecl 0x55f5da495720 <col:25, col:42> col:42 delta 'const Timestamp &'
|-CXXMethodDecl 0x55f5da4958f8 <line:239:5, line:241:5> line:239:17 used schedule_after_sec 'void (uint32_t)' inline
| |-ParmVarDecl 0x55f5da495868 <col:36, col:45> col:45 used delta_sec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55f5da548f78 <col:56, line:241:5>
|   `-ExprWithCleanups 0x55f5da548f60 <line:240:2, col:40> 'void'
|     `-CXXMemberCallExpr 0x55f5da548f08 <col:2, col:40> 'void'
|       |-MemberExpr 0x55f5da548e18 <col:2> '<bound member function type>' ->schedule_after 0x55f5da4957b0
|       | `-CXXThisExpr 0x55f5da548e08 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55f5da548f48 <col:17, col:39> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55f5da548f30 <col:17, col:39> 'const Timestamp' <NoOp>
|           `-CXXTemporaryObjectExpr 0x55f5da548ec8 <col:17, col:39> 'Timestamp' 'void (unsigned int, uint32_t)'
|             |-ImplicitCastExpr 0x55f5da548e98 <col:27> 'uint32_t':'unsigned int' <LValueToRValue>
|             | `-DeclRefExpr 0x55f5da548e58 <col:27> 'uint32_t':'unsigned int' lvalue ParmVar 0x55f5da495868 'delta_sec' 'uint32_t':'unsigned int'
|             `-ImplicitCastExpr 0x55f5da548eb0 <col:38> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x55f5da548e78 <col:38> 'int' 0
|-CXXMethodDecl 0x55f5da495a40 <line:247:5, line:249:5> line:247:17 used schedule_after_msec 'void (uint32_t)' inline
| |-ParmVarDecl 0x55f5da4959b0 <col:37, col:46> col:46 used delta_msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55f5da5491e8 <col:58, line:249:5>
|   `-ExprWithCleanups 0x55f5da5491d0 <line:248:2, col:49> 'void'
|     `-CXXMemberCallExpr 0x55f5da549178 <col:2, col:49> 'void'
|       |-MemberExpr 0x55f5da548fa0 <col:2> '<bound member function type>' ->schedule_after 0x55f5da4957b0
|       | `-CXXThisExpr 0x55f5da548f90 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55f5da5491b8 <col:17, col:48> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55f5da5491a0 <col:17, col:48> 'const Timestamp' <NoOp>
|           `-CallExpr 0x55f5da549120 <col:17, col:48> 'Timestamp'
|             |-ImplicitCastExpr 0x55f5da549108 <col:17, col:28> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x55f5da549078 <col:17, col:28> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x55f5da4a34d8 'make_msec' 'Timestamp (Timestamp::value_type)'
|             `-ImplicitCastExpr 0x55f5da549160 <col:38> 'Timestamp::value_type':'long' <IntegralCast>
|               `-ImplicitCastExpr 0x55f5da549148 <col:38> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x55f5da549058 <col:38> 'uint32_t':'unsigned int' lvalue ParmVar 0x55f5da4959b0 'delta_msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f5da495b88 <line:259:5, line:261:5> line:259:17 reschedule_after 'void (const Timestamp &)' inline
| |-ParmVarDecl 0x55f5da495af8 <col:34, col:51> col:51 used delta 'const Timestamp &'
| `-CompoundStmt 0x55f5da5493c8 <col:58, line:261:5>
|   `-ExprWithCleanups 0x55f5da5493b0 <line:260:2, col:38> 'void'
|     `-CXXMemberCallExpr 0x55f5da549358 <col:2, col:38> 'void'
|       |-MemberExpr 0x55f5da549210 <col:2> '<bound member function type>' ->schedule_at_steady 0x55f5da4951d0
|       | `-CXXThisExpr 0x55f5da549200 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55f5da549398 <col:21, col:33> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55f5da549380 <col:21, col:33> 'const Timestamp' <NoOp>
|           `-CXXOperatorCallExpr 0x55f5da549320 <col:21, col:33> 'Timestamp'
|             |-ImplicitCastExpr 0x55f5da549308 <col:31> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x55f5da5492e8 <col:31> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55f5da4cfb80 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|             |-CXXConstructExpr 0x55f5da5492b8 <col:21> 'Timestamp' 'void (const Timestamp &) noexcept'
|             | `-ImplicitCastExpr 0x55f5da5492a0 <col:21> 'const Timestamp' lvalue <NoOp>
|             |   `-MemberExpr 0x55f5da549250 <col:21> 'Timestamp' lvalue ->_expiry_s 0x55f5da4969e8
|             |     `-CXXThisExpr 0x55f5da549240 <col:21> 'Timer *' implicit this
|             `-DeclRefExpr 0x55f5da549280 <col:33> 'const Timestamp' lvalue ParmVar 0x55f5da495af8 'delta' 'const Timestamp &'
|-CXXMethodDecl 0x55f5da495cd0 <line:268:5, line:270:5> line:268:17 used reschedule_after_sec 'void (uint32_t)' inline
| |-ParmVarDecl 0x55f5da495c40 <col:38, col:47> col:47 used delta_sec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55f5da5496a0 <col:58, line:270:5>
|   `-ExprWithCleanups 0x55f5da549688 <line:269:2, col:79> 'void'
|     `-CXXMemberCallExpr 0x55f5da549630 <col:2, col:79> 'void'
|       |-MemberExpr 0x55f5da5493f0 <col:2> '<bound member function type>' ->schedule_at_steady 0x55f5da4951d0
|       | `-CXXThisExpr 0x55f5da5493e0 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55f5da549670 <col:21, col:78> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55f5da549658 <col:21, col:78> 'const Timestamp' <NoOp>
|           `-CXXTemporaryObjectExpr 0x55f5da5495f0 <col:21, col:78> 'Timestamp' 'void (unsigned int, uint32_t)'
|             |-BinaryOperator 0x55f5da549528 <col:31, col:49> 'unsigned int' '+'
|             | |-ImplicitCastExpr 0x55f5da549510 <col:31, col:45> 'unsigned int' <IntegralCast>
|             | | `-CXXMemberCallExpr 0x55f5da5494a0 <col:31, col:45> 'Timestamp::seconds_type':'int'
|             | |   `-MemberExpr 0x55f5da549470 <col:31, col:41> '<bound member function type>' .sec 0x55f5da320228
|             | |     `-ImplicitCastExpr 0x55f5da5494c0 <col:31> 'const Timestamp' lvalue <NoOp>
|             | |       `-MemberExpr 0x55f5da549440 <col:31> 'Timestamp' lvalue ->_expiry_s 0x55f5da4969e8
|             | |         `-CXXThisExpr 0x55f5da549430 <col:31> 'Timer *' implicit this
|             | `-ImplicitCastExpr 0x55f5da5494f8 <col:49> 'uint32_t':'unsigned int' <LValueToRValue>
|             |   `-DeclRefExpr 0x55f5da5494d8 <col:49> 'uint32_t':'unsigned int' lvalue ParmVar 0x55f5da495c40 'delta_sec' 'uint32_t':'unsigned int'
|             `-CXXMemberCallExpr 0x55f5da5495b8 <col:60, col:77> 'uint32_t':'unsigned int'
|               `-MemberExpr 0x55f5da549588 <col:60, col:70> '<bound member function type>' .subsec 0x55f5da320920
|                 `-ImplicitCastExpr 0x55f5da5495d8 <col:60> 'const Timestamp' lvalue <NoOp>
|                   `-MemberExpr 0x55f5da549558 <col:60> 'Timestamp' lvalue ->_expiry_s 0x55f5da4969e8
|                     `-CXXThisExpr 0x55f5da549548 <col:60> 'Timer *' implicit this
|-CXXMethodDecl 0x55f5da495e18 <line:277:5, line:279:5> line:277:17 used reschedule_after_msec 'void (uint32_t)' inline
| |-ParmVarDecl 0x55f5da495d88 <col:39, col:48> col:48 used delta_msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55f5da5499d8 <col:60, line:279:5>
|   `-ExprWithCleanups 0x55f5da5499c0 <line:278:2, col:65> 'void'
|     `-CXXMemberCallExpr 0x55f5da549968 <col:2, col:65> 'void'
|       |-MemberExpr 0x55f5da5496c8 <col:2> '<bound member function type>' ->schedule_at_steady 0x55f5da4951d0
|       | `-CXXThisExpr 0x55f5da5496b8 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55f5da5499a8 <col:21, col:64> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55f5da549990 <col:21, col:64> 'const Timestamp' <NoOp>
|           `-CXXOperatorCallExpr 0x55f5da549930 <col:21, col:64> 'Timestamp'
|             |-ImplicitCastExpr 0x55f5da549918 <col:31> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x55f5da5498f8 <col:31> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55f5da4cfb80 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|             |-CXXConstructExpr 0x55f5da549898 <col:21> 'Timestamp' 'void (const Timestamp &) noexcept'
|             | `-ImplicitCastExpr 0x55f5da549880 <col:21> 'const Timestamp' lvalue <NoOp>
|             |   `-MemberExpr 0x55f5da549708 <col:21> 'Timestamp' lvalue ->_expiry_s 0x55f5da4969e8
|             |     `-CXXThisExpr 0x55f5da5496f8 <col:21> 'Timer *' implicit this
|             `-MaterializeTemporaryExpr 0x55f5da5498e0 <col:33, col:64> 'const Timestamp' lvalue
|               `-ImplicitCastExpr 0x55f5da5498c8 <col:33, col:64> 'const Timestamp' <NoOp>
|                 `-CallExpr 0x55f5da549828 <col:33, col:64> 'Timestamp'
|                   |-ImplicitCastExpr 0x55f5da549810 <col:33, col:44> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|                   | `-DeclRefExpr 0x55f5da5497e0 <col:33, col:44> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x55f5da4a34d8 'make_msec' 'Timestamp (Timestamp::value_type)'
|                   `-ImplicitCastExpr 0x55f5da549868 <col:54> 'Timestamp::value_type':'long' <IntegralCast>
|                     `-ImplicitCastExpr 0x55f5da549850 <col:54> 'uint32_t':'unsigned int' <LValueToRValue>
|                       `-DeclRefExpr 0x55f5da5497c0 <col:54> 'uint32_t':'unsigned int' lvalue ParmVar 0x55f5da495d88 'delta_msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f5da495ee0 <line:285:5, col:21> col:10 used unschedule 'void ()'
|-CXXMethodDecl 0x55f5da495fa0 <line:288:5, line:291:5> line:288:17 clear 'void ()' inline
| `-CompoundStmt 0x55f5da549ea0 <col:25, line:291:5>
|   |-CXXMemberCallExpr 0x55f5da549a30 <line:289:2, col:13> 'void'
|   | `-MemberExpr 0x55f5da549a00 <col:2> '<bound member function type>' ->unschedule 0x55f5da495ee0
|   |   `-CXXThisExpr 0x55f5da5499f0 <col:2> 'Timer *' implicit this
|   `-ExprWithCleanups 0x55f5da549e88 <line:290:2, col:24> 'Timestamp' lvalue
|     `-CXXOperatorCallExpr 0x55f5da549e50 <col:2, col:24> 'Timestamp' lvalue
|       |-ImplicitCastExpr 0x55f5da549e38 <col:12> 'Timestamp &(*)(Timestamp &&) noexcept' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55f5da549ae8 <col:12> 'Timestamp &(Timestamp &&) noexcept' lvalue CXXMethod 0x55f5da1b77c8 'operator=' 'Timestamp &(Timestamp &&) noexcept'
|       |-MemberExpr 0x55f5da549a60 <col:2> 'Timestamp' lvalue ->_expiry_s 0x55f5da4969e8
|       | `-CXXThisExpr 0x55f5da549a50 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55f5da549ad0 <col:14, col:24> 'Timestamp' xvalue
|         `-CXXTemporaryObjectExpr 0x55f5da549aa0 <col:14, col:24> 'Timestamp' 'void ()'
|-CXXMethodDecl 0x55f5da496060 <line:304:5, line:310:5> line:304:29 used adjustment 'Timestamp ()' static inline
| `-CompoundStmt 0x55f5da54a1f8 <col:42, line:310:5>
|   |-IfStmt 0x55f5da54a040 <line:306:2, line:307:23>
|   | |-CallExpr 0x55f5da549f70 <line:306:6, col:30> 'bool'
|   | | `-ImplicitCastExpr 0x55f5da549f58 <col:6, col:17> 'bool (*)()' <FunctionToPointerDecay>
|   | |   `-DeclRefExpr 0x55f5da549ef8 <col:6, col:17> 'bool ()' lvalue CXXMethod 0x55f5da4c1650 'warp_jumping' 'bool ()'
|   | `-ReturnStmt 0x55f5da54a030 <line:307:6, col:23>
|   |   `-ExprWithCleanups 0x55f5da54a018 <col:13, col:23> 'Timestamp'
|   |     `-CXXConstructExpr 0x55f5da549fe8 <col:13, col:23> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x55f5da549fd0 <col:13, col:23> 'Timestamp' xvalue
|   |         `-CXXTemporaryObjectExpr 0x55f5da549fa0 <col:13, col:23> 'Timestamp' 'void ()'
|   `-ReturnStmt 0x55f5da54a1e8 <line:309:2, col:33>
|     `-ExprWithCleanups 0x55f5da54a1d0 <col:9, col:33> 'Timestamp'
|       `-CXXConstructExpr 0x55f5da54a1a0 <col:9, col:33> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55f5da54a188 <col:9, col:33> 'Timestamp' xvalue
|           `-CallExpr 0x55f5da54a148 <col:9, col:33> 'Timestamp'
|             |-ImplicitCastExpr 0x55f5da54a130 <col:9, col:20> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x55f5da54a100 <col:9, col:20> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x55f5da4a37f0 'make_usec' 'Timestamp (Timestamp::value_type)'
|             `-ImplicitCastExpr 0x55f5da54a170 <col:30> 'Timestamp::value_type':'long' <IntegralCast>
|               `-IntegerLiteral 0x55f5da54a0e0 <col:30> 'int' 500
|-CXXMethodDecl 0x55f5da4961a0 <line:317:5, col:80> col:17 schedule_after_s 'void (uint32_t)' inline
| |-ParmVarDecl 0x55f5da496110 <col:34, col:43> col:43 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55f5da496248 <col:69> "" ""
|-CXXMethodDecl 0x55f5da496358 <line:323:5, col:81> col:17 schedule_after_ms 'void (uint32_t)' inline
| |-ParmVarDecl 0x55f5da4962c8 <col:35, col:44> col:44 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55f5da496400 <col:70> "" ""
|-CXXMethodDecl 0x55f5da496510 <line:329:5, col:82> col:17 reschedule_after_s 'void (uint32_t)' inline
| |-ParmVarDecl 0x55f5da496480 <col:36, col:45> col:45 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55f5da4965b8 <col:71> "" ""
|-CXXMethodDecl 0x55f5da4966c8 <line:335:5, col:83> col:17 reschedule_after_ms 'void (uint32_t)' inline
| |-ParmVarDecl 0x55f5da496638 <col:37, col:46> col:46 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55f5da496770 <col:72> "" ""
|-EnumDecl 0x55f5da4967e0 <line:337:5, col:27> col:5
| `-EnumConstantDecl 0x55f5da4968e0 <col:12, col:25> col:12 behind_sec 'Timer::(anonymous enum at ../dummy_inc/click/timer.hh:337:5)'
|   `-ImplicitCastExpr 0x55f5da496930 <col:25> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55f5da4968c0 <col:25> 'int' Int: 1
|       `-IntegerLiteral 0x55f5da4968a0 <col:25> 'int' 1
|-AccessSpecDecl 0x55f5da496948 <line:339:3, col:10> col:3 private
|-FieldDecl 0x55f5da496988 <line:341:5, col:9> col:9 referenced _schedpos1 'int'
|-FieldDecl 0x55f5da4969e8 <line:342:5, col:15> col:15 referenced _expiry_s 'Timestamp'
|-CXXRecordDecl 0x55f5da496a38 <line:343:5, line:345:5> line:343:5 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x55f5da496b68 <line:344:2, col:16> col:16 referenced callback 'TimerCallback':'void (*)(Timer *, void *)'
| `-CXXDestructorDecl 0x55f5da497658 <line:343:5> col:5 implicit ~ 'void () noexcept' inline default trivial
|-FieldDecl 0x55f5da496c28 <col:5, line:345:7> col:7 referenced _hook 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)'
|-FieldDecl 0x55f5da496ca8 <line:346:5, col:11> col:11 referenced _thunk 'void *'
|-FieldDecl 0x55f5da496d08 <line:347:5, col:14> col:14 referenced _owner 'Element *'
|-FieldDecl 0x55f5da496d68 <line:348:5, col:19> col:19 referenced _thread 'RouterThread *'
|-CXXMethodDecl 0x55f5da496eb8 <line:350:5, col:36> col:12 operator= 'Timer &(const Timer &)'
| `-ParmVarDecl 0x55f5da496dc8 <col:22, col:35> col:35 x 'const Timer &'
|-CXXMethodDecl 0x55f5da497088 <line:352:5, col:58> col:17 used do_nothing_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x55f5da496f70 <col:33, col:40> col:40 t 'Timer *'
| `-ParmVarDecl 0x55f5da496ff0 <col:43, col:49> col:49 user_data 'void *'
|-CXXMethodDecl 0x55f5da497260 <line:353:5, col:55> col:17 used element_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x55f5da497148 <col:30, col:37> col:37 t 'Timer *'
| `-ParmVarDecl 0x55f5da4971c8 <col:40, col:46> col:46 user_data 'void *'
|-CXXMethodDecl 0x55f5da497438 <line:354:5, col:52> col:17 used task_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x55f5da497320 <col:27, col:34> col:34 t 'Timer *'
| `-ParmVarDecl 0x55f5da4973a0 <col:37, col:43> col:43 user_data 'void *'
`-FriendDecl 0x55f5da497608 <line:356:5, col:18> col:12 'class TimerSet':'TimerSet'

Layout: <CGRecordLayout
  LLVMType:%class.Timer = type { i32, %class.Timestamp, %union.anon.19, i8*, %class.Element*, %class.RouterThread* }
  NonVirtualBaseLLVMType:%class.Timer = type { i32, %class.Timestamp, %union.anon.19, i8*, %class.Element*, %class.RouterThread* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct char_array<16>
         0 |   char [16] x
           | [sizeof=16, dsize=16, align=1,
           |  nvsize=16, nvalign=1]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55f5da54ef80 <../dummy_inc/click/type_traits.hh:165:1, line:167:1> line:165:28 struct char_array definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-TemplateArgument integral 16
|-PackedAttr 0x55f5da786108 <line:167:18>
|-CXXRecordDecl 0x55f5da7861c8 prev 0x55f5da54ef80 <line:165:21, col:28> col:28 implicit struct char_array
`-FieldDecl 0x55f5da7862d8 <line:166:5, col:13> col:10 x 'char [16]'

Layout: <CGRecordLayout
  LLVMType:%struct.char_array.10 = type { [16 x i8] }
  NonVirtualBaseLLVMType:%struct.char_array.10 = type { [16 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct Args::SlotT<class String>
         0 |   struct Args::Slot (primary base)
         0 |     (Slot vtable pointer)
         8 |     struct Args::Slot * _next
        16 |   class String * _ptr
        24 |   class String _slot
        24 |     struct String::rep_t _r
        24 |       const char * data
        32 |       int length
        40 |       struct String::memo_t * memo
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Args::SlotT<long>
         0 |   struct Args::Slot (primary base)
         0 |     (Slot vtable pointer)
         8 |     struct Args::Slot * _next
        16 |   long * _ptr
        24 |   long _slot
           | [sizeof=32, dsize=32, align=8,
           |  nvsize=32, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Args::SlotT<int>
         0 |   struct Args::Slot (primary base)
         0 |     (Slot vtable pointer)
         8 |     struct Args::Slot * _next
        16 |   int * _ptr
        24 |   int _slot
           | [sizeof=32, dsize=28, align=8,
           |  nvsize=28, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Args::SlotT<_Bool>
         0 |   struct Args::Slot (primary base)
         0 |     (Slot vtable pointer)
         8 |     struct Args::Slot * _next
        16 |   _Bool * _ptr
        24 |   _Bool _slot
           | [sizeof=32, dsize=25, align=8,
           |  nvsize=25, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Args::SlotT<class HandlerCall>
         0 |   struct Args::Slot (primary base)
         0 |     (Slot vtable pointer)
         8 |     struct Args::Slot * _next
        16 |   class HandlerCall * _ptr
        24 |   class HandlerCall _slot
        24 |     class Element * _e
        32 |     const class Handler * _h
        40 |     class String _value
        40 |       struct String::rep_t _r
        40 |         const char * data
        48 |         int length
        56 |         struct String::memo_t * memo
           | [sizeof=64, dsize=64, align=8,
           |  nvsize=64, nvalign=8]

*** Dumping AST Record Layout
         0 | class StringArg (empty)
           | [sizeof=1, dsize=1, align=1,
           |  nvsize=1, nvalign=1]

*** Dumping AST Record Layout
         0 | struct DefaultArg<class String> (empty)
         0 |   class StringArg (base) (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=1, nvalign=1]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f5da4c60e8 <../dummy_inc/click/args.hh:1345:1, line:1349:1> line:1345:7 referenced class StringArg definition
|-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |-DefaultConstructor exists trivial constexpr defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55f5da4c6208 <col:1, col:7> col:7 implicit class StringArg
|-AccessSpecDecl 0x55f5da4c6298 <col:19, col:25> col:19 public
|-CXXMethodDecl 0x55f5da4c6490 <line:1346:5, line:1348:5> line:1346:17 used parse 'bool (const String &, String &, const ArgContext &)' static
| |-ParmVarDecl 0x55f5da4c62d0 <col:23, col:37> col:37 used str 'const String &'
| |-ParmVarDecl 0x55f5da4c6348 <col:42, col:50> col:50 used result 'String &'
| |-ParmVarDecl 0x55f5da4c63c0 <col:58, col:79> col:77 'const ArgContext &' cinit
| | `-DeclRefExpr 0x55f5da4c6560 <col:79> 'const ArgContext' lvalue Var 0x55f5da672290 'blank_args' 'const ArgContext'
| `-CompoundStmt 0x55f5da4c6700 <col:91, line:1348:5>
|   `-ReturnStmt 0x55f5da4c66f0 <line:1347:9, col:41>
|     `-CallExpr 0x55f5da4c66a0 <col:16, col:41> 'bool'
|       |-ImplicitCastExpr 0x55f5da4c6688 <col:16> 'bool (*)(const String &, String *, String *)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55f5da4c6640 <col:16> 'bool (const String &, String *, String *)' lvalue Function 0x55f5da4c6030 'cp_string' 'bool (const String &, String *, String *)'
|       |-DeclRefExpr 0x55f5da4c65c8 <col:26> 'const String' lvalue ParmVar 0x55f5da4c62d0 'str' 'const String &'
|       |-UnaryOperator 0x55f5da4c6608 <col:31, col:32> 'String *' prefix '&' cannot overflow
|       | `-DeclRefExpr 0x55f5da4c65e8 <col:32> 'String' lvalue ParmVar 0x55f5da4c6348 'result' 'String &'
|       `-ImplicitCastExpr 0x55f5da4c66d8 <col:40> 'String *' <NullToPointer>
|         `-IntegerLiteral 0x55f5da4c6620 <col:40> 'int' 0
|-CXXConstructorDecl 0x55f5da7acf18 <line:1345:7> col:7 implicit constexpr StringArg 'void () noexcept' inline default trivial
|-CXXDestructorDecl 0x55f5da7acff0 <col:7> col:7 implicit ~StringArg 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x55f5da7ad128 <col:7> col:7 implicit constexpr StringArg 'void (const StringArg &)' inline default trivial noexcept-unevaluated 0x55f5da7ad128
| `-ParmVarDecl 0x55f5da7ae288 <col:7> col:7 'const StringArg &'
`-CXXConstructorDecl 0x55f5da7ae328 <col:7> col:7 implicit used constexpr StringArg 'void (StringArg &&) noexcept' inline default trivial
  |-ParmVarDecl 0x55f5da7ae438 <col:7> col:7 'StringArg &&'
  `-CompoundStmt 0x55f5da7af090 <col:7>

Layout: <CGRecordLayout
  LLVMType:%class.StringArg = type { i8 }
  NonVirtualBaseLLVMType:%class.StringArg = type { i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55f5da4c6740 <../dummy_inc/click/args.hh:1351:1, col:58> col:19 struct DefaultArg definition
|-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |-DefaultConstructor exists trivial constexpr defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-public 'StringArg'
|-TemplateArgument type 'String'
|-CXXRecordDecl 0x55f5da4c6998 <col:12, col:19> col:19 implicit struct DefaultArg
|-CXXConstructorDecl 0x55f5da7ace28 <col:19> col:19 implicit referenced constexpr DefaultArg 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x55f5da7ae4a8 <col:19> col:19 implicit constexpr DefaultArg 'void (const DefaultArg<String> &)' inline default trivial noexcept-unevaluated 0x55f5da7ae4a8
| `-ParmVarDecl 0x55f5da7ae5b8 <col:19> col:19 'const DefaultArg<String> &'
|-CXXConstructorDecl 0x55f5da7ae658 <col:19> col:19 implicit used constexpr DefaultArg 'void (DefaultArg<String> &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55f5da7ae768 <col:19> col:19 used 'DefaultArg<String> &&'
| |-CXXCtorInitializer 'StringArg'
| | `-CXXConstructExpr 0x55f5da7af0a0 <col:19> 'StringArg' 'void (StringArg &&) noexcept'
| |   `-ImplicitCastExpr 0x55f5da7af070 <col:19> 'StringArg' xvalue <UncheckedDerivedToBase (StringArg)>
| |     `-CXXStaticCastExpr 0x55f5da7af040 <col:19> 'DefaultArg<String>' xvalue static_cast<struct DefaultArg<class String> &&> <NoOp>
| |       `-DeclRefExpr 0x55f5da7af010 <col:19> 'DefaultArg<String>' lvalue ParmVar 0x55f5da7ae768 '' 'DefaultArg<String> &&'
| `-CompoundStmt 0x55f5da7af110 <col:19>
`-CXXDestructorDecl 0x55f5da7ae808 <col:19> col:19 implicit referenced ~DefaultArg 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%struct.DefaultArg = type { i8 }
  NonVirtualBaseLLVMType:%struct.DefaultArg = type { i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55f5da7afdd8 <../dummy_inc/click/args.hh:850:5, line:860:5> line:851:12 struct SlotT definition
|-DefinitionData polymorphic has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-public 'Args::Slot'
|-TemplateArgument type 'String'
|-CXXRecordDecl 0x55f5da7b01d8 prev 0x55f5da7afdd8 <col:5, col:12> col:12 implicit struct SlotT
|-CXXConstructorDecl 0x55f5da7b03d0 <line:852:9, line:854:9> line:852:9 used SlotT 'void (String *)'
| |-ParmVarDecl 0x55f5da7b02d8 <col:15, col:18> col:18 used ptr 'String *'
| |-CXXCtorInitializer 'Args::Slot'
| | `-CXXConstructExpr 0x55f5da7b1318 <col:9> 'Args::Slot' 'void ()'
| |-CXXCtorInitializer Field 0x55f5da7b0550 '_ptr' 'String *'
| | `-ImplicitCastExpr 0x55f5da7b12d8 <line:853:20> 'String *' <LValueToRValue>
| |   `-DeclRefExpr 0x55f5da7b1298 <col:20> 'String *' lvalue ParmVar 0x55f5da7b02d8 'ptr' 'String *'
| |-CXXCtorInitializer Field 0x55f5da7b05b0 '_slot' 'String':'String'
| | `-CXXConstructExpr 0x55f5da7b1378 <line:852:9> 'String':'String' 'void ()'
| `-CompoundStmt 0x55f5da6720b8 <line:853:25, line:854:9>
|-CXXMethodDecl 0x55f5da7b0490 <line:855:9, line:857:9> line:855:14 used store 'void ()'
| |-Overrides: [ 0x55f5da642640 Slot::store 'void ()' ]
| `-CompoundStmt 0x55f5da7b1ab8 <col:22, line:857:9>
|   `-CallExpr 0x55f5da7b1a70 <line:856:13, col:40> 'void'
|     |-ImplicitCastExpr 0x55f5da7b1a58 <col:13> 'void (*)(String &, const String &)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x55f5da7b19d8 <col:13> 'void (String &, const String &)' lvalue Function 0x55f5da7b18b8 'assign_consume' 'void (String &, const String &)' (FunctionTemplate 0x55f5da26faa8 'assign_consume')
|     |-UnaryOperator 0x55f5da7b1508 <col:28, col:29> 'String':'String' lvalue prefix '*' cannot overflow
|     | `-ImplicitCastExpr 0x55f5da7b14f0 <col:29> 'String *' <LValueToRValue>
|     |   `-MemberExpr 0x55f5da7b14c0 <col:29> 'String *' lvalue ->_ptr 0x55f5da7b0550
|     |     `-CXXThisExpr 0x55f5da7b14b0 <col:29> 'Args::SlotT<String> *' implicit this
|     `-ImplicitCastExpr 0x55f5da7b1aa0 <col:35> 'const String':'const String' lvalue <NoOp>
|       `-MemberExpr 0x55f5da7b1530 <col:35> 'String':'String' lvalue ->_slot 0x55f5da7b05b0
|         `-CXXThisExpr 0x55f5da7b1520 <col:35> 'Args::SlotT<String> *' implicit this
|-FieldDecl 0x55f5da7b0550 <line:858:9, col:12> col:12 referenced _ptr 'String *'
|-FieldDecl 0x55f5da7b05b0 <line:859:9, col:11> col:11 referenced _slot 'String':'String'
|-CXXConstructorDecl 0x55f5da7b0628 <line:851:12> col:12 implicit SlotT 'void (const Args::SlotT<String> &)' inline default noexcept-unevaluated 0x55f5da7b0628
| `-ParmVarDecl 0x55f5da7b0738 <col:12> col:12 'const Args::SlotT<String> &'
|-CXXConstructorDecl 0x55f5da7b07d8 <col:12> col:12 implicit SlotT 'void (Args::SlotT<String> &&)' inline default noexcept-unevaluated 0x55f5da7b07d8
| `-ParmVarDecl 0x55f5da7b08e8 <col:12> col:12 'Args::SlotT<String> &&'
|-CXXMethodDecl 0x55f5da7b0988 <col:12> col:12 implicit operator= 'Args::SlotT<String> &(const Args::SlotT<String> &)' inline default noexcept-unevaluated 0x55f5da7b0988
| `-ParmVarDecl 0x55f5da7b0a98 <col:12> col:12 'const Args::SlotT<String> &'
|-CXXMethodDecl 0x55f5da7b0b08 <col:12> col:12 implicit operator= 'Args::SlotT<String> &(Args::SlotT<String> &&)' inline default noexcept-unevaluated 0x55f5da7b0b08
| `-ParmVarDecl 0x55f5da7b0c18 <col:12> col:12 'Args::SlotT<String> &&'
`-CXXDestructorDecl 0x55f5da7b0ca0 <col:12> col:12 implicit used ~SlotT 'void () noexcept' inline default
  |-Overrides: [ 0x55f5da642540 Slot::~Slot 'void () noexcept' ]
  `-CompoundStmt 0x55f5da7b13e0 <col:12>

Layout: <CGRecordLayout
  LLVMType:%"struct.Args::SlotT" = type { %"struct.Args::Slot", %class.String*, %class.String }
  NonVirtualBaseLLVMType:%"struct.Args::SlotT" = type { %"struct.Args::Slot", %class.String*, %class.String }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct DefaultArg<long>
         0 |   class IntArg (base)
         0 |     class NumArg (base) (empty)
         0 |     int base
         4 |     int status
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55f5da683bd0 <../dummy_inc/click/args.hh:1185:1, col:53> col:19 struct DefaultArg definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable can_const_default_init
| |-DefaultConstructor exists non_trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-public 'IntArg'
|-TemplateArgument type 'long'
|-CXXRecordDecl 0x55f5da683e28 <col:12, col:19> col:19 implicit struct DefaultArg
|-CXXConstructorDecl 0x55f5da7ba068 <col:19> col:19 implicit used DefaultArg 'void () noexcept(false)' inline default
| |-CXXCtorInitializer 'IntArg'
| | `-CXXConstructExpr 0x55f5da7ba500 <col:19> 'IntArg' 'void (int)'
| |   `-CXXDefaultArgExpr 0x55f5da7ba4e0 <<invalid sloc>> 'int'
| `-CompoundStmt 0x55f5da7ba570 <col:19>
|-CXXConstructorDecl 0x55f5da7ba168 <col:19> col:19 implicit constexpr DefaultArg 'void (const DefaultArg<long> &)' inline default trivial noexcept-unevaluated 0x55f5da7ba168
| `-ParmVarDecl 0x55f5da7ba278 <col:19> col:19 'const DefaultArg<long> &'
|-CXXConstructorDecl 0x55f5da7ba318 <col:19> col:19 implicit used constexpr DefaultArg 'void (DefaultArg<long> &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55f5da7ba428 <col:19> col:19 used 'DefaultArg<long> &&'
| |-CXXCtorInitializer 'IntArg'
| | `-CXXConstructExpr 0x55f5da7bb130 <col:19> 'IntArg' 'void (IntArg &&) noexcept'
| |   `-ImplicitCastExpr 0x55f5da7bae50 <col:19> 'IntArg' xvalue <UncheckedDerivedToBase (IntArg)>
| |     `-CXXStaticCastExpr 0x55f5da7bae20 <col:19> 'DefaultArg<long>' xvalue static_cast<struct DefaultArg<long> &&> <NoOp>
| |       `-DeclRefExpr 0x55f5da7badf0 <col:19> 'DefaultArg<long>' lvalue ParmVar 0x55f5da7ba428 '' 'DefaultArg<long> &&'
| `-CompoundStmt 0x55f5da7bb1a0 <col:19>
`-CXXDestructorDecl 0x55f5da7ba5b0 <col:19> col:19 implicit referenced ~DefaultArg 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%struct.DefaultArg.20 = type { %class.IntArg }
  NonVirtualBaseLLVMType:%struct.DefaultArg.20 = type { %class.IntArg }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct DefaultArg<int>
         0 |   class IntArg (base)
         0 |     class NumArg (base) (empty)
         0 |     int base
         4 |     int status
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55f5da683570 <../dummy_inc/click/args.hh:1183:1, col:52> col:19 struct DefaultArg definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable can_const_default_init
| |-DefaultConstructor exists non_trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-public 'IntArg'
|-TemplateArgument type 'int'
|-CXXRecordDecl 0x55f5da6837c8 <col:12, col:19> col:19 implicit struct DefaultArg
|-CXXConstructorDecl 0x55f5da7c9458 <col:19> col:19 implicit used DefaultArg 'void () noexcept(false)' inline default
| |-CXXCtorInitializer 'IntArg'
| | `-CXXConstructExpr 0x55f5da7c98f0 <col:19> 'IntArg' 'void (int)'
| |   `-CXXDefaultArgExpr 0x55f5da7c98d0 <<invalid sloc>> 'int'
| `-CompoundStmt 0x55f5da7c9960 <col:19>
|-CXXConstructorDecl 0x55f5da7c9558 <col:19> col:19 implicit constexpr DefaultArg 'void (const DefaultArg<int> &)' inline default trivial noexcept-unevaluated 0x55f5da7c9558
| `-ParmVarDecl 0x55f5da7c9668 <col:19> col:19 'const DefaultArg<int> &'
|-CXXConstructorDecl 0x55f5da7c9708 <col:19> col:19 implicit used constexpr DefaultArg 'void (DefaultArg<int> &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55f5da7c9818 <col:19> col:19 used 'DefaultArg<int> &&'
| |-CXXCtorInitializer 'IntArg'
| | `-CXXConstructExpr 0x55f5da7ca200 <col:19> 'IntArg' 'void (IntArg &&) noexcept'
| |   `-ImplicitCastExpr 0x55f5da7ca1e0 <col:19> 'IntArg' xvalue <UncheckedDerivedToBase (IntArg)>
| |     `-CXXStaticCastExpr 0x55f5da7ca1b0 <col:19> 'DefaultArg<int>' xvalue static_cast<struct DefaultArg<int> &&> <NoOp>
| |       `-DeclRefExpr 0x55f5da7ca180 <col:19> 'DefaultArg<int>' lvalue ParmVar 0x55f5da7c9818 '' 'DefaultArg<int> &&'
| `-CompoundStmt 0x55f5da7ca270 <col:19>
`-CXXDestructorDecl 0x55f5da7c99a0 <col:19> col:19 implicit referenced ~DefaultArg 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%struct.DefaultArg.21 = type { %class.IntArg }
  NonVirtualBaseLLVMType:%struct.DefaultArg.21 = type { %class.IntArg }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct DefaultArg<_Bool> (empty)
         0 |   class BoolArg (base) (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=1, nvalign=1]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55f5da688d98 <../dummy_inc/click/args.hh:1264:1, col:54> col:19 struct DefaultArg definition
|-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |-DefaultConstructor exists trivial constexpr defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-public 'BoolArg'
|-TemplateArgument type 'bool'
|-CXXRecordDecl 0x55f5da688ff8 <col:12, col:19> col:19 implicit struct DefaultArg
|-CXXConstructorDecl 0x55f5da7d4128 <col:19> col:19 implicit referenced constexpr DefaultArg 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x55f5da7d4228 <col:19> col:19 implicit constexpr DefaultArg 'void (const DefaultArg<bool> &)' inline default trivial noexcept-unevaluated 0x55f5da7d4228
| `-ParmVarDecl 0x55f5da7d4338 <col:19> col:19 'const DefaultArg<bool> &'
|-CXXConstructorDecl 0x55f5da7d43d8 <col:19> col:19 implicit used constexpr DefaultArg 'void (DefaultArg<bool> &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55f5da7d44e8 <col:19> col:19 used 'DefaultArg<bool> &&'
| |-CXXCtorInitializer 'BoolArg'
| | `-CXXConstructExpr 0x55f5da7d4e20 <col:19> 'BoolArg' 'void (BoolArg &&) noexcept'
| |   `-ImplicitCastExpr 0x55f5da7d4df0 <col:19> 'BoolArg' xvalue <UncheckedDerivedToBase (BoolArg)>
| |     `-CXXStaticCastExpr 0x55f5da7d4dc0 <col:19> 'DefaultArg<bool>' xvalue static_cast<struct DefaultArg<_Bool> &&> <NoOp>
| |       `-DeclRefExpr 0x55f5da7d4d90 <col:19> 'DefaultArg<bool>' lvalue ParmVar 0x55f5da7d44e8 '' 'DefaultArg<bool> &&'
| `-CompoundStmt 0x55f5da7d4e90 <col:19>
`-CXXDestructorDecl 0x55f5da7d4588 <col:19> col:19 implicit referenced ~DefaultArg 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%struct.DefaultArg.22 = type { i8 }
  NonVirtualBaseLLVMType:%struct.DefaultArg.22 = type { i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55f5da7e19d8 <../dummy_inc/click/args.hh:850:5, line:860:5> line:851:12 struct SlotT definition
|-DefinitionData polymorphic has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-public 'Args::Slot'
|-TemplateArgument type 'HandlerCall'
|-CXXRecordDecl 0x55f5da7e1dd8 prev 0x55f5da7e19d8 <col:5, col:12> col:12 implicit struct SlotT
|-CXXConstructorDecl 0x55f5da7e2000 <line:852:9, line:854:9> line:852:9 used SlotT 'void (HandlerCall *)'
| |-ParmVarDecl 0x55f5da7e1ed8 <col:15, col:18> col:18 used ptr 'HandlerCall *'
| |-CXXCtorInitializer 'Args::Slot'
| | `-CXXConstructExpr 0x55f5da7e4628 <col:9> 'Args::Slot' 'void ()'
| |-CXXCtorInitializer Field 0x55f5da7e2180 '_ptr' 'HandlerCall *'
| | `-ImplicitCastExpr 0x55f5da7e45e8 <line:853:20> 'HandlerCall *' <LValueToRValue>
| |   `-DeclRefExpr 0x55f5da7e45a8 <col:20> 'HandlerCall *' lvalue ParmVar 0x55f5da7e1ed8 'ptr' 'HandlerCall *'
| |-CXXCtorInitializer Field 0x55f5da7e21e0 '_slot' 'HandlerCall':'HandlerCall'
| | `-CXXConstructExpr 0x55f5da7e4688 <line:852:9> 'HandlerCall':'HandlerCall' 'void ()'
| `-CompoundStmt 0x55f5da6720b8 <line:853:25, line:854:9>
|-CXXMethodDecl 0x55f5da7e20c0 <line:855:9, line:857:9> line:855:14 used store 'void ()'
| |-Overrides: [ 0x55f5da642640 Slot::store 'void ()' ]
| `-CompoundStmt 0x55f5da7e4d48 <col:22, line:857:9>
|   `-CallExpr 0x55f5da7e4d00 <line:856:13, col:40> 'void'
|     |-ImplicitCastExpr 0x55f5da7e4ce8 <col:13> 'void (*)(HandlerCall &, const HandlerCall &)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x55f5da7e4c68 <col:13> 'void (HandlerCall &, const HandlerCall &)' lvalue Function 0x55f5da7e4b48 'assign_consume' 'void (HandlerCall &, const HandlerCall &)' (FunctionTemplate 0x55f5da26faa8 'assign_consume')
|     |-UnaryOperator 0x55f5da7e4818 <col:28, col:29> 'HandlerCall':'HandlerCall' lvalue prefix '*' cannot overflow
|     | `-ImplicitCastExpr 0x55f5da7e4800 <col:29> 'HandlerCall *' <LValueToRValue>
|     |   `-MemberExpr 0x55f5da7e47d0 <col:29> 'HandlerCall *' lvalue ->_ptr 0x55f5da7e2180
|     |     `-CXXThisExpr 0x55f5da7e47c0 <col:29> 'Args::SlotT<HandlerCall> *' implicit this
|     `-ImplicitCastExpr 0x55f5da7e4d30 <col:35> 'const HandlerCall':'const HandlerCall' lvalue <NoOp>
|       `-MemberExpr 0x55f5da7e4840 <col:35> 'HandlerCall':'HandlerCall' lvalue ->_slot 0x55f5da7e21e0
|         `-CXXThisExpr 0x55f5da7e4830 <col:35> 'Args::SlotT<HandlerCall> *' implicit this
|-FieldDecl 0x55f5da7e2180 <line:858:9, col:12> col:12 referenced _ptr 'HandlerCall *'
|-FieldDecl 0x55f5da7e21e0 <line:859:9, col:11> col:11 referenced _slot 'HandlerCall':'HandlerCall'
|-CXXConstructorDecl 0x55f5da7e2258 <line:851:12> col:12 implicit SlotT 'void (const Args::SlotT<HandlerCall> &)' inline default noexcept-unevaluated 0x55f5da7e2258
| `-ParmVarDecl 0x55f5da7e2368 <col:12> col:12 'const Args::SlotT<HandlerCall> &'
|-CXXConstructorDecl 0x55f5da7e2408 <col:12> col:12 implicit SlotT 'void (Args::SlotT<HandlerCall> &&)' inline default noexcept-unevaluated 0x55f5da7e2408
| `-ParmVarDecl 0x55f5da7e2518 <col:12> col:12 'Args::SlotT<HandlerCall> &&'
|-CXXMethodDecl 0x55f5da7e3ca0 <col:12> col:12 implicit operator= 'Args::SlotT<HandlerCall> &(const Args::SlotT<HandlerCall> &)' inline default noexcept-unevaluated 0x55f5da7e3ca0
| `-ParmVarDecl 0x55f5da7e3da8 <col:12> col:12 'const Args::SlotT<HandlerCall> &'
|-CXXMethodDecl 0x55f5da7e3e18 <col:12> col:12 implicit operator= 'Args::SlotT<HandlerCall> &(Args::SlotT<HandlerCall> &&)' inline default noexcept-unevaluated 0x55f5da7e3e18
| `-ParmVarDecl 0x55f5da7e3f28 <col:12> col:12 'Args::SlotT<HandlerCall> &&'
`-CXXDestructorDecl 0x55f5da7e3fb0 <col:12> col:12 implicit used ~SlotT 'void () noexcept' inline default
  |-Overrides: [ 0x55f5da642540 Slot::~Slot 'void () noexcept' ]
  `-CompoundStmt 0x55f5da7e46f0 <col:12>

Layout: <CGRecordLayout
  LLVMType:%"struct.Args::SlotT.23" = type { %"struct.Args::Slot", %class.HandlerCall*, %class.HandlerCall }
  NonVirtualBaseLLVMType:%"struct.Args::SlotT.23" = type { %"struct.Args::Slot", %class.HandlerCall*, %class.HandlerCall }
  IsZeroInitializable:1
  BitFields:[
]>
