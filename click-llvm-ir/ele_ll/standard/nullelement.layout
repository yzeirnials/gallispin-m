
*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17)
         0 |   unsigned long long __wseq
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_internal_list
         0 |   struct __pthread_internal_list * __prev
         8 |   struct __pthread_internal_list * __next
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_mutex_s
         0 |   int __lock
         4 |   unsigned int __count
         8 |   int __owner
        12 |   unsigned int __nusers
        16 |   int __kind
        20 |   short __spins
        22 |   short __elision
        24 |   struct __pthread_internal_list __list
        24 |     struct __pthread_internal_list * __prev
        32 |     struct __pthread_internal_list * __next
           | [sizeof=40, dsize=40, align=8,
           |  nvsize=40, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17)
         0 |   unsigned long long __g1_start
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s
         0 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17) 
         0 |     unsigned long long __wseq
         0 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |       unsigned int __low
         4 |       unsigned int __high
         8 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17) 
         8 |     unsigned long long __g1_start
         8 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         8 |       unsigned int __low
        12 |       unsigned int __high
        16 |   unsigned int [2] __g_refs
        24 |   unsigned int [2] __g_size
        32 |   unsigned int __g1_orig_size
        36 |   unsigned int __wrefs
        40 |   unsigned int [2] __g_signals
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_rwlock_arch_t
         0 |   unsigned int __readers
         4 |   unsigned int __writers
         8 |   unsigned int __wrphase_futex
        12 |   unsigned int __writers_futex
        16 |   unsigned int __pad3
        20 |   unsigned int __pad4
        24 |   int __cur_writer
        28 |   int __shared
        32 |   signed char __rwelision
        33 |   unsigned char [7] __pad1
        40 |   unsigned long __pad2
        48 |   unsigned int __flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | lldiv_t
         0 |   long long quot
         8 |   long long rem
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct msghdr
         0 |   void * msg_name
         8 |   socklen_t msg_namelen
        16 |   struct iovec * msg_iov
        24 |   size_t msg_iovlen
        32 |   void * msg_control
        40 |   size_t msg_controllen
        48 |   int msg_flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | struct in_addr
         0 |   in_addr_t s_addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5)
         0 |   uint8_t [16] __u6_addr8
         0 |   uint16_t [8] __u6_addr16
         0 |   uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr
         0 |   sa_family_t sa_family
         2 |   char [14] sa_data
           | [sizeof=16, dsize=16, align=2,
           |  nvsize=16, nvalign=2]

*** Dumping AST Record Layout
         0 | struct in6_addr
         0 |   union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         0 |     uint8_t [16] __u6_addr8
         0 |     uint16_t [8] __u6_addr16
         0 |     uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr_storage
         0 |   sa_family_t ss_family
         2 |   char [118] __ss_padding
       120 |   unsigned long __ss_align
           | [sizeof=128, dsize=128, align=8,
           |  nvsize=128, nvalign=8]

*** Dumping AST Record Layout
         0 | struct sockaddr_in6
         0 |   sa_family_t sin6_family
         2 |   in_port_t sin6_port
         4 |   uint32_t sin6_flowinfo
         8 |   struct in6_addr sin6_addr
         8 |     union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         8 |       uint8_t [16] __u6_addr8
         8 |       uint16_t [8] __u6_addr16
         8 |       uint32_t [4] __u6_addr32
        24 |   uint32_t sin6_scope_id
           | [sizeof=28, dsize=28, align=4,
           |  nvsize=28, nvalign=4]

*** Dumping AST Record Layout
         0 | struct timeval
         0 |   __time_t tv_sec
         8 |   __suseconds_t tv_usec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::memo_t
         0 |   volatile uint32_t refcount
         4 |   uint32_t capacity
         8 |   volatile uint32_t dirty
        12 |   char [8] real_data
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping AST Record Layout
         0 | class IPAddress
         0 |   uint32_t _addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Timestamp::rep_t
         0 |   int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timestamp
         0 |   union Timestamp::rep_t _t
         0 |     int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct timespec
         0 |   __time_t tv_sec
         8 |   __syscall_slong_t tv_nsec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element::Port
         0 |   class Element * _e
         8 |   int _port
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element
         0 |   (Element vtable pointer)
         8 |   class Element::Port *[2] _ports
        24 |   class Element::Port [4] _inline_ports
        88 |   int [2] _nports
        96 |   class Router * _router
       104 |   int _eindex
           | [sizeof=112, dsize=108, align=8,
           |  nvsize=108, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x560a8561d808 prev 0x560a85614fa8 <../dummy_inc/click/element.hh:214:5, line:252:5> line:214:11 referenced class Port definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x560a8561d900 <col:5, col:11> col:11 implicit referenced class Port
|-AccessSpecDecl 0x560a8561d990 <col:18, col:24> col:18 public
|-CXXMethodDecl 0x560a8561da08 <line:216:9, col:30> col:21 used active 'bool () const' inline
|-CXXMethodDecl 0x560a8561dac8 <line:217:9, col:35> col:25 element 'Element *() const' inline
|-CXXMethodDecl 0x560a8561db90 <line:218:9, col:27> col:20 port 'int () const' inline
|-CXXMethodDecl 0x560a8561dd08 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| |-ParmVarDecl 0x560a8561dc40 <col:54, col:62> col:62 p 'Packet *'
| |-NoInlineAttr 0x560a8561ddb0 <col:24>
| `-OptimizeNoneAttr 0x560a8561de08 <col:34>
|-CXXMethodDecl 0x560a8561de50 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
|-CXXMethodDecl 0x560a8561e108 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| |-ParmVarDecl 0x560a8561df00 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x560a8561df78 <col:43, col:52> col:52 e 'Element *'
| `-ParmVarDecl 0x560a8561dff8 <col:55, col:59> col:59 port 'int'
|-AccessSpecDecl 0x560a8561e1c0 <line:229:7, col:14> col:7 private
|-FieldDecl 0x560a8561e1f8 <line:231:9, col:18> col:18 referenced _e 'Element *'
|-FieldDecl 0x560a8561e260 <line:232:9, col:13> col:13 referenced _port 'int'
|-CXXConstructorDecl 0x560a8561e2e8 <line:247:9, col:21> col:16 Port 'void ()' inline
|-CXXMethodDecl 0x560a8561e608 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| |-ParmVarDecl 0x560a8561e3a0 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x560a8561e418 <col:43, col:52> col:52 owner 'Element *'
| |-ParmVarDecl 0x560a8561e490 <col:59, col:68> col:68 e 'Element *'
| `-ParmVarDecl 0x560a8561e510 <col:71, col:75> col:75 port 'int'
|-FriendDecl 0x560a8561e720 <line:250:9, col:22> col:16 'class Element':'Element'
|-CXXConstructorDecl 0x560a85626098 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x560a85626098
| `-ParmVarDecl 0x560a856261a8 <col:11> col:11 'const Element::Port &'
|-CXXConstructorDecl 0x560a85626248 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x560a85626248
| `-ParmVarDecl 0x560a85626358 <col:11> col:11 'Element::Port &&'
`-CXXDestructorDecl 0x560a8562c248 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"class.Element::Port" = type <{ %class.Element*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%"class.Element::Port.base" = type <{ %class.Element*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x560a85610820 prev 0x560a856105a0 <../dummy_inc/click/element.hh:29:1, line:319:1> line:29:7 referenced class Element definition
|-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x560a85610918 <col:1, col:7> col:7 implicit referenced class Element
|-AccessSpecDecl 0x560a856109a8 <col:17, col:23> col:17 public
|-CXXConstructorDecl 0x560a85610a08 <line:31:5, col:13> col:5 used Element 'void ()'
|-CXXDestructorDecl 0x560a85610af8 <line:32:5, col:22> col:13 used ~Element 'void () noexcept' virtual
|-VarDecl 0x560a85610bf8 <line:33:5, col:16> col:16 nelements_allocated 'int' static
|-CXXMethodDecl 0x560a85610dc8 <line:36:5, col:42> col:18 used push 'void (int, Packet *)' virtual
| |-ParmVarDecl 0x560a85610c78 <col:23, col:27> col:27 port 'int'
| `-ParmVarDecl 0x560a85610cf0 <col:33, col:41> col:41 p 'Packet *'
|-CXXMethodDecl 0x560a85610f58 <line:37:5, col:70> col:21 used pull 'Packet *(int)' virtual
| |-ParmVarDecl 0x560a85610e90 <col:26, col:30> col:30 port 'int'
| `-WarnUnusedResultAttr 0x560a85611000 <col:51> warn_unused_result ""
|-CXXMethodDecl 0x560a85611138 <line:38:5, col:44> col:21 simple_action 'Packet *(Packet *)' virtual
| `-ParmVarDecl 0x560a85611070 <col:35, col:43> col:43 p 'Packet *'
|-CXXMethodDecl 0x560a856112d8 <line:40:5, col:37> col:18 run_task 'bool (Task *)' virtual
| `-ParmVarDecl 0x560a85611218 <col:27, col:33> col:33 task 'Task *'
|-CXXMethodDecl 0x560a85611478 <line:41:5, col:40> col:18 run_timer 'void (Timer *)' virtual
| `-ParmVarDecl 0x560a856113b8 <col:28, col:35> col:35 timer 'Timer *'
|-EnumDecl 0x560a85611520 <line:43:5, col:46> col:5
| |-EnumConstantDecl 0x560a85611620 <col:12, col:26> col:12 SELECT_READ 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
| | `-ImplicitCastExpr 0x560a85611700 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x560a85611600 <col:26> 'int' Int: 1
| |     `-IntegerLiteral 0x560a856115e0 <col:26> 'int' 1
| `-EnumConstantDecl 0x560a856116b0 <col:29, col:44> col:29 SELECT_WRITE 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
|   `-ImplicitCastExpr 0x560a85611718 <col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x560a85611690 <col:44> 'int' Int: 2
|       `-IntegerLiteral 0x560a85611670 <col:44> 'int' 2
|-CXXMethodDecl 0x560a85611860 <line:44:5, col:43> col:18 selected 'void (int, int)' virtual
| |-ParmVarDecl 0x560a85611748 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x560a856117c8 <col:35, col:39> col:39 mask 'int'
|-CXXMethodDecl 0x560a856119b8 <line:45:5, col:33> col:18 selected 'void (int)' virtual
| `-ParmVarDecl 0x560a85611928 <col:27, col:31> col:31 fd 'int'
|-CXXMethodDecl 0x560a85611bf8 <line:48:5, col:86> col:45 checked_output_push 'void (int, Packet *) const'
| |-ParmVarDecl 0x560a85611a78 <col:65, col:69> col:69 port 'int'
| |-ParmVarDecl 0x560a85611af0 <col:75, col:83> col:83 p 'Packet *'
| |-NoInlineAttr 0x560a85611ca8 <col:20>
| `-OptimizeNoneAttr 0x560a85611d00 <col:30>
|-CXXMethodDecl 0x560a85611e08 <line:49:5, col:77> col:48 checked_input_pull 'Packet *(int) const'
| |-ParmVarDecl 0x560a85611d40 <col:67, col:71> col:71 port 'int'
| |-NoInlineAttr 0x560a85611eb0 <col:20>
| `-OptimizeNoneAttr 0x560a85611f08 <col:30>
|-CXXMethodDecl 0x560a85611f58 <line:52:5, col:46> col:25 class_name 'const char *() const' virtual pure
|-CXXMethodDecl 0x560a85612020 <line:54:5, col:38> col:25 port_count 'const char *() const' virtual
|-VarDecl 0x560a85612138 <line:55:5, col:33> col:23 PORTS_0_0 'const char []' static
|-VarDecl 0x560a856121c0 <line:56:5, col:33> col:23 PORTS_0_1 'const char []' static
|-VarDecl 0x560a85612248 <line:57:5, col:33> col:23 PORTS_1_0 'const char []' static
|-VarDecl 0x560a856122d0 <line:58:5, col:33> col:23 used PORTS_1_1 'const char []' static
|-VarDecl 0x560a85612358 <line:59:5, col:35> col:23 PORTS_1_1X2 'const char []' static
|-CXXMethodDecl 0x560a856123e8 <line:61:5, col:38> col:25 processing 'const char *() const' virtual
|-VarDecl 0x560a856124a8 <line:62:5, col:32> col:23 AGNOSTIC 'const char []' static
|-VarDecl 0x560a85612530 <line:63:5, col:28> col:23 used PUSH 'const char []' static
|-VarDecl 0x560a856125b8 <line:64:5, col:28> col:23 used PULL 'const char []' static
|-VarDecl 0x560a85612640 <line:65:5, col:36> col:23 PUSH_TO_PULL 'const char []' static
|-VarDecl 0x560a856126c8 <line:66:5, col:36> col:23 PULL_TO_PUSH 'const char []' static
|-VarDecl 0x560a85612750 <line:67:5, col:39> col:23 PROCESSING_A_AH 'const char []' static
|-CXXMethodDecl 0x560a856127e0 <line:69:5, col:37> col:25 flow_code 'const char *() const' virtual
|-VarDecl 0x560a856128a0 <line:70:5, col:37> col:23 COMPLETE_FLOW 'const char []' static
|-CXXMethodDecl 0x560a85612930 <line:72:5, col:33> col:25 flags 'const char *() const' virtual
|-CXXMethodDecl 0x560a85612a80 <line:73:5, col:30> col:9 flag_value 'int (int) const'
| `-ParmVarDecl 0x560a856129e8 <col:20, col:24> col:24 flag 'int'
|-CXXMethodDecl 0x560a85612c10 <line:75:5, col:40> col:19 cast 'void *(const char *)' virtual
| `-ParmVarDecl 0x560a85612b40 <col:24, col:36> col:36 name 'const char *'
|-CXXMethodDecl 0x560a85612ec0 <line:76:5, col:70> col:19 port_cast 'void *(bool, int, const char *)' virtual
| |-ParmVarDecl 0x560a85612cc8 <col:29, col:34> col:34 isoutput 'bool'
| |-ParmVarDecl 0x560a85612d48 <col:44, col:48> col:48 port 'int'
| `-ParmVarDecl 0x560a85612dc8 <col:54, col:66> col:66 name 'const char *'
|-EnumDecl 0x560a85612f78 <line:79:5, line:85:5> line:79:10 ConfigurePhase
| |-EnumConstantDecl 0x560a85613080 <line:80:9, col:33> col:9 CONFIGURE_PHASE_FIRST 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x560a85613310 <col:33> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x560a85613060 <col:33> 'int' Int: 0
| |     `-IntegerLiteral 0x560a85613040 <col:33> 'int' 0
| |-EnumConstantDecl 0x560a85613110 <line:81:9, col:32> col:9 CONFIGURE_PHASE_INFO 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x560a85613328 <col:32> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x560a856130f0 <col:32> 'int' Int: 20
| |     `-IntegerLiteral 0x560a856130d0 <col:32> 'int' 20
| |-EnumConstantDecl 0x560a856131a0 <line:82:9, col:38> col:9 CONFIGURE_PHASE_PRIVILEGED 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x560a85613340 <col:38> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x560a85613180 <col:38> 'int' Int: 90
| |     `-IntegerLiteral 0x560a85613160 <col:38> 'int' 90
| |-EnumConstantDecl 0x560a85613230 <line:83:9, col:35> col:9 CONFIGURE_PHASE_DEFAULT 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x560a85613358 <col:35> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x560a85613210 <col:35> 'int' Int: 100
| |     `-IntegerLiteral 0x560a856131f0 <col:35> 'int' 100
| `-EnumConstantDecl 0x560a856132c0 <line:84:9, col:32> col:9 CONFIGURE_PHASE_LAST 'Element::ConfigurePhase'
|   `-ImplicitCastExpr 0x560a85613370 <col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x560a856132a0 <col:32> 'int' Int: 2000
|       `-IntegerLiteral 0x560a85613280 <col:32> 'int' 2000
|-CXXMethodDecl 0x560a856133b0 <line:86:5, col:35> col:17 configure_phase 'int () const' virtual
|-CXXMethodDecl 0x560a856137f0 <line:88:5, col:67> col:17 configure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x560a85613660 <col:27, col:43> col:43 conf 'Vector<String> &'
| `-ParmVarDecl 0x560a856136d8 <col:49, col:63> col:63 errh 'ErrorHandler *'
|-CXXMethodDecl 0x560a856138c0 <line:90:5, col:31> col:18 add_handlers 'void ()' virtual
|-CXXMethodDecl 0x560a85613a40 <line:92:5, col:46> col:17 initialize 'int (ErrorHandler *)' virtual
| `-ParmVarDecl 0x560a85613970 <col:28, col:42> col:42 errh 'ErrorHandler *'
|-CXXMethodDecl 0x560a85613c48 <line:94:5, col:69> col:18 take_state 'void (Element *, ErrorHandler *)' virtual
| |-ParmVarDecl 0x560a85613af8 <col:29, col:38> col:38 old_element 'Element *'
| `-ParmVarDecl 0x560a85613b70 <col:51, col:65> col:65 errh 'ErrorHandler *'
|-CXXMethodDecl 0x560a85613d48 <line:95:5, col:40> col:22 hotswap_element 'Element *() const' virtual
|-EnumDecl 0x560a85613de8 <line:97:5, line:106:5> line:97:10 referenced CleanupStage
| |-EnumConstantDecl 0x560a85613eb0 <line:98:9> col:9 referenced CLEANUP_NO_ROUTER 'Element::CleanupStage'
| |-EnumConstantDecl 0x560a85613f40 <line:99:9, col:36> col:9 CLEANUP_BEFORE_CONFIGURE 'Element::CleanupStage'
| | `-ImplicitCastExpr 0x560a85614170 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x560a85613f20 <col:36> 'int' Int: 0
| |     `-DeclRefExpr 0x560a85613f00 <col:36> 'int' EnumConstant 0x560a85613eb0 'CLEANUP_NO_ROUTER' 'Element::CleanupStage'
| |-EnumConstantDecl 0x560a85613f90 <line:100:9> col:9 CLEANUP_CONFIGURE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x560a85613fe0 <line:101:9> col:9 CLEANUP_CONFIGURED 'Element::CleanupStage'
| |-EnumConstantDecl 0x560a85614030 <line:102:9> col:9 CLEANUP_INITIALIZE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x560a85614080 <line:103:9> col:9 CLEANUP_INITIALIZED 'Element::CleanupStage'
| |-EnumConstantDecl 0x560a856140d0 <line:104:9> col:9 CLEANUP_ROUTER_INITIALIZED 'Element::CleanupStage'
| `-EnumConstantDecl 0x560a85614120 <line:105:9> col:9 CLEANUP_MANUAL 'Element::CleanupStage'
|-CXXMethodDecl 0x560a85614258 <line:107:5, col:44> col:18 cleanup 'void (Element::CleanupStage)' virtual
| `-ParmVarDecl 0x560a85614198 <col:26, col:39> col:39 stage 'Element::CleanupStage'
|-CXXMethodDecl 0x560a85614320 <line:109:5, col:42> col:24 static_initialize 'void ()' static inline
|-CXXMethodDecl 0x560a856143e0 <line:110:5, col:39> col:24 static_cleanup 'void ()' static inline
|-CXXMethodDecl 0x560a856144a0 <line:113:5, col:19> col:12 name 'String () const'
|-CXXMethodDecl 0x560a85614560 <line:114:5, col:34> col:20 declaration 'String () const' virtual
|-CXXMethodDecl 0x560a85614678 <line:116:5, col:29> col:20 used router 'Router *() const' inline
|-CXXMethodDecl 0x560a85614740 <line:117:5, col:25> col:16 eindex 'int () const' inline
|-CXXMethodDecl 0x560a856148c0 <line:118:5, col:34> col:16 eindex 'int (Router *) const' inline
| `-ParmVarDecl 0x560a856147f0 <col:23, col:31> col:31 r 'Router *'
|-CXXMethodDecl 0x560a856149e8 <line:121:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x560a85614be8 <line:123:5, line:127:5> line:123:17 attach_router 'void (Router *, int)' inline
| |-ParmVarDecl 0x560a85614a98 <col:31, col:39> col:39 used r 'Router *'
| |-ParmVarDecl 0x560a85614b18 <col:42, col:46> col:46 used eindex 'int'
| `-CompoundStmt 0x560a85622538 <col:54, line:127:5>
|   |-ParenExpr 0x560a856223e8 <line:124:9, col:152> 'void'
|   | `-ConditionalOperator 0x560a856223b8 <col:10, col:151> 'void'
|   |   |-CXXStaticCastExpr 0x560a856220a8 <col:10, col:38> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x560a85622080 <col:30, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-ImplicitCastExpr 0x560a85622068 <col:31> 'bool' <PointerToBoolean>
|   |   |     `-ImplicitCastExpr 0x560a85622050 <col:31> 'Router *' <LValueToRValue>
|   |   |       `-MemberExpr 0x560a85622020 <col:31> 'Router *' lvalue ->_router 0x560a8561ff00
|   |   |         `-CXXThisExpr 0x560a85622010 <col:31> 'Element *' implicit this
|   |   |-CXXFunctionalCastExpr 0x560a85622108 <col:42, col:49> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x560a856220e8 <col:48> 'int' 0
|   |   `-CallExpr 0x560a85622318 <col:53, col:151> 'void'
|   |     |-ImplicitCastExpr 0x560a85622300 <col:53> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x560a856222e0 <col:53> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x560a8514aef0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x560a85622358 <col:68> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x560a85622178 <col:68> 'const char [9]' lvalue "!_router"
|   |     |-ImplicitCastExpr 0x560a85622370 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x560a85622198 <col:80> 'const char [30]' lvalue "../dummy_inc/click/element.hh"
|   |     |-ImplicitCastExpr 0x560a85622388 <col:113> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x560a856221d0 <col:113> 'int' 124
|   |     `-ImplicitCastExpr 0x560a856223a0 <col:118, col:132> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x560a856222c8 <col:118, col:132> 'const char [43]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x560a856222b0 <col:132> 'const char [43]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x560a85622268 <col:132> 'const char [43]' lvalue "void Element::attach_router(Router *, int)"
|   |-BinaryOperator 0x560a85622480 <line:125:9, col:19> 'Router *' lvalue '='
|   | |-MemberExpr 0x560a85622418 <col:9> 'Router *' lvalue ->_router 0x560a8561ff00
|   | | `-CXXThisExpr 0x560a85622408 <col:9> 'Element *' implicit this
|   | `-ImplicitCastExpr 0x560a85622468 <col:19> 'Router *' <LValueToRValue>
|   |   `-DeclRefExpr 0x560a85622448 <col:19> 'Router *' lvalue ParmVar 0x560a85614a98 'r' 'Router *'
|   `-BinaryOperator 0x560a85622518 <line:126:9, col:19> 'int' lvalue '='
|     |-MemberExpr 0x560a856224b0 <col:9> 'int' lvalue ->_eindex 0x560a8561ff68
|     | `-CXXThisExpr 0x560a856224a0 <col:9> 'Element *' implicit this
|     `-ImplicitCastExpr 0x560a85622500 <col:19> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x560a856224e0 <col:19> 'int' lvalue ParmVar 0x560a85614b18 'eindex' 'int'
|-CXXMethodDecl 0x560a85614d70 <line:130:5, col:38> col:16 used nports 'int (bool) const' inline
| `-ParmVarDecl 0x560a85614ca8 <col:23, col:28> col:28 isoutput 'bool'
|-CXXMethodDecl 0x560a85614e40 <line:131:5, col:26> col:16 used ninputs 'int () const' inline
|-CXXMethodDecl 0x560a85614f08 <line:132:5, col:27> col:16 used noutputs 'int () const' inline
|-CXXRecordDecl 0x560a85614fa8 <line:134:5, col:11> col:11 referenced class Port
|-CXXMethodDecl 0x560a856151f8 <line:135:5, col:82> col:52 used port 'const Element::Port &(bool, int) const'
| |-ParmVarDecl 0x560a85615070 <col:57, col:62> col:62 isoutput 'bool'
| |-ParmVarDecl 0x560a856150f0 <col:72, col:76> col:76 port 'int'
| |-NoInlineAttr 0x560a856152a8 <col:20>
| `-OptimizeNoneAttr 0x560a85615300 <col:30>
|-CXXMethodDecl 0x560a85615408 <line:136:5, col:68> col:52 input 'const Element::Port &(int) const'
| |-ParmVarDecl 0x560a85615340 <col:58, col:62> col:62 port 'int'
| |-NoInlineAttr 0x560a856154b0 <col:20>
| `-OptimizeNoneAttr 0x560a85615508 <col:30>
|-CXXMethodDecl 0x560a856155d8 <line:137:5, col:69> col:52 output 'const Element::Port &(int) const'
| |-ParmVarDecl 0x560a85615548 <col:59, col:63> col:63 port 'int'
| |-NoInlineAttr 0x560a85615680 <col:20>
| `-OptimizeNoneAttr 0x560a856156d8 <col:30>
|-CXXMethodDecl 0x560a85615868 <line:139:5, col:54> col:17 used port_active 'bool (bool, int) const' inline
| |-ParmVarDecl 0x560a85615710 <col:29, col:34> col:34 isoutput 'bool'
| `-ParmVarDecl 0x560a85615790 <col:44, col:48> col:48 port 'int'
|-CXXMethodDecl 0x560a856159f8 <line:140:5, col:41> col:17 input_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x560a85615930 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x560a85615b48 <line:141:5, col:41> col:17 input_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x560a85615ab8 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x560a85615c98 <line:142:5, col:42> col:17 output_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x560a85615c08 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x560a85615de8 <line:143:5, col:42> col:17 output_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x560a85615d58 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x560a856160a8 <line:144:5, col:57> col:10 port_flow 'void (bool, int, Bitvector *) const'
| |-ParmVarDecl 0x560a85615ea0 <col:20, col:25> col:25 isoutput 'bool'
| |-ParmVarDecl 0x560a85615f20 <col:35, col:39> col:39 port 'int'
| `-ParmVarDecl 0x560a85615fc8 <col:45, col:54> col:55 'Bitvector *'
|-CXXMethodDecl 0x560a85616180 <line:147:5, col:28> col:12 configuration 'String () const'
|-CXXMethodDecl 0x560a85616240 <line:149:5, col:41> col:18 can_live_reconfigure 'bool () const' virtual
|-CXXMethodDecl 0x560a85616510 <line:150:5, col:64> col:17 live_reconfigure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x560a856163c0 <col:34, col:48> col:49 'Vector<String> &'
| `-ParmVarDecl 0x560a85616438 <col:51, col:63> col:64 'ErrorHandler *'
|-CXXMethodDecl 0x560a85616638 <line:152:5, col:33> col:19 home_thread 'RouterThread *() const'
|-CXXMethodDecl 0x560a85616810 <line:156:5, col:36> col:9 add_select 'int (int, int)'
| |-ParmVarDecl 0x560a856166f0 <col:20, col:24> col:24 fd 'int'
| `-ParmVarDecl 0x560a85616770 <col:28, col:32> col:32 mask 'int'
|-CXXMethodDecl 0x560a856169f8 <line:157:5, col:39> col:9 remove_select 'int (int, int)'
| |-ParmVarDecl 0x560a856168d8 <col:23, col:27> col:27 fd 'int'
| `-ParmVarDecl 0x560a85616958 <col:31, col:35> col:35 mask 'int'
|-CXXMethodDecl 0x560a85616d68 <line:161:5, col:127> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x560a85616ab8 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x560a85616b30 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x560a85616bb0 <col:82, col:106> col:94 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x560a85621b20 <col:106> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x560a85621b00 <col:106> 'int' 0
| `-ParmVarDecl 0x560a85616c28 <col:109, col:126> col:118 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x560a85621b58 <col:126> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x560a85621b38 <col:126> 'int' 0
|-CXXMethodDecl 0x560a85617108 <line:162:5, col:115> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x560a85616e38 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x560a85616ed0 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x560a85616f50 <col:82, col:86> col:86 user_data 'int'
| `-ParmVarDecl 0x560a85616fc8 <col:97, col:114> col:106 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x560a85621b90 <col:114> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x560a85621b70 <col:114> 'int' 0
|-CXXMethodDecl 0x560a85617498 <line:163:5, col:117> col:10 add_read_handler 'void (const char *, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x560a856171e0 <col:27, col:39> col:39 name 'const char *'
| |-ParmVarDecl 0x560a85617258 <col:45, col:65> col:65 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x560a856172d8 <col:80, col:96> col:84 user_data 'int' cinit
| | `-IntegerLiteral 0x560a85621ba8 <col:96> 'int' 0
| `-ParmVarDecl 0x560a85617350 <col:99, col:116> col:108 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x560a85621be8 <col:116> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x560a85621bc8 <col:116> 'int' 0
|-CXXMethodDecl 0x560a85617818 <line:164:5, col:130> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x560a85617568 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x560a856175e0 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x560a85617660 <col:85, col:109> col:97 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x560a85621c20 <col:109> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x560a85621c00 <col:109> 'int' 0
| `-ParmVarDecl 0x560a856176d8 <col:112, col:129> col:121 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x560a85621c58 <col:129> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x560a85621c38 <col:129> 'int' 0
|-CXXMethodDecl 0x560a85617b98 <line:165:5, col:118> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x560a856178e8 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x560a85617960 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x560a856179e0 <col:85, col:89> col:89 user_data 'int'
| `-ParmVarDecl 0x560a85617a58 <col:100, col:117> col:109 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x560a85621c90 <col:117> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x560a85621c70 <col:117> 'int' 0
|-CXXMethodDecl 0x560a85617f28 <line:166:5, col:120> col:10 add_write_handler 'void (const char *, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x560a85617c70 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x560a85617ce8 <col:46, col:67> col:67 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x560a85617d68 <col:83, col:99> col:87 user_data 'int' cinit
| | `-IntegerLiteral 0x560a85621ca8 <col:99> 'int' 0
| `-ParmVarDecl 0x560a85617de0 <col:102, col:119> col:111 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x560a85621ce8 <col:119> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x560a85621cc8 <col:119> 'int' 0
|-CXXMethodDecl 0x560a85618348 <line:167:5, col:142> col:10 set_handler 'void (const String &, int, HandlerCallback, const void *, const void *)'
| |-ParmVarDecl 0x560a85617ff8 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x560a85618078 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x560a856180f0 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x560a85618170 <col:79, col:108> col:91 read_user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x560a85621d20 <col:108> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x560a85621d00 <col:108> 'int' 0
| `-ParmVarDecl 0x560a856181f0 <col:111, col:141> col:123 write_user_data 'const void *' cinit
|   `-ImplicitCastExpr 0x560a85621d58 <col:141> 'const void *' <NullToPointer>
|     `-IntegerLiteral 0x560a85621d38 <col:141> 'int' 0
|-CXXMethodDecl 0x560a85618768 <line:168:5, col:122> col:10 set_handler 'void (const String &, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x560a85618420 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x560a856184a0 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x560a85618518 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x560a85618598 <col:79, col:83> col:83 read_user_data 'int'
| `-ParmVarDecl 0x560a85618618 <col:99, col:121> col:103 write_user_data 'int' cinit
|   `-IntegerLiteral 0x560a85621d70 <col:121> 'int' 0
|-CXXMethodDecl 0x560a85618b98 <line:169:5, col:124> col:10 set_handler 'void (const char *, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x560a85618848 <col:22, col:34> col:34 name 'const char *'
| |-ParmVarDecl 0x560a856188c8 <col:40, col:44> col:44 flags 'int'
| |-ParmVarDecl 0x560a85618940 <col:51, col:67> col:67 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x560a856189c0 <col:77, col:98> col:81 read_user_data 'int' cinit
| | `-IntegerLiteral 0x560a85621d90 <col:98> 'int' 0
| `-ParmVarDecl 0x560a85618a40 <col:101, col:123> col:105 write_user_data 'int' cinit
|   `-IntegerLiteral 0x560a85621db0 <col:123> 'int' 0
|-CXXMethodDecl 0x560a85618e60 <line:170:5, col:81> col:9 set_handler_flags 'int (const String &, int, int)'
| |-ParmVarDecl 0x560a85618c70 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x560a85618cf0 <col:47, col:51> col:51 set_flags 'int'
| `-ParmVarDecl 0x560a85618d70 <col:62, col:80> col:66 clear_flags 'int' cinit
|   `-IntegerLiteral 0x560a85621dd0 <col:80> 'int' 0
|-EnumDecl 0x560a85618f18 <line:171:5, line:175:36> line:171:5
| |-EnumConstantDecl 0x560a85619020 <col:12, col:42> col:12 TASKHANDLER_WRITE_SCHEDULED 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x560a856192b0 <col:42> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x560a85619000 <col:42> 'int' Int: 1
| |     `-IntegerLiteral 0x560a85618fe0 <col:42> 'int' 1
| |-EnumConstantDecl 0x560a856190b0 <line:172:12, col:40> col:12 TASKHANDLER_WRITE_TICKETS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x560a856192c8 <col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x560a85619090 <col:40> 'int' Int: 2
| |     `-IntegerLiteral 0x560a85619070 <col:40> 'int' 2
| |-EnumConstantDecl 0x560a85619140 <line:173:12, col:44> col:12 TASKHANDLER_WRITE_HOME_THREAD 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x560a856192e0 <col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x560a85619120 <col:44> 'int' Int: 4
| |     `-IntegerLiteral 0x560a85619100 <col:44> 'int' 4
| |-EnumConstantDecl 0x560a856191d0 <line:174:12, col:36> col:12 TASKHANDLER_WRITE_ALL 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x560a856192f8 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x560a856191b0 <col:36> 'int' Int: 7
| |     `-IntegerLiteral 0x560a85619190 <col:36> 'int' 7
| `-EnumConstantDecl 0x560a85619260 <line:175:12, col:34> col:12 referenced TASKHANDLER_DEFAULT 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|   `-ImplicitCastExpr 0x560a85619310 <col:34> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x560a85619240 <col:34> 'int' Int: 6
|       `-IntegerLiteral 0x560a85619220 <col:34> 'int' 6
|-CXXMethodDecl 0x560a856195c8 <line:176:5, col:106> col:10 used add_task_handlers 'void (Task *, NotifierSignal *, int, const String &)'
| |-ParmVarDecl 0x560a85619338 <col:28, col:34> col:34 task 'Task *'
| |-ParmVarDecl 0x560a856193d8 <col:40, col:56> col:56 signal 'NotifierSignal *'
| |-ParmVarDecl 0x560a85619458 <col:64, col:68> col:68 flags 'int'
| `-ParmVarDecl 0x560a856194d0 <col:75, col:105> col:89 prefix 'const String &' cinit
|   `-ExprWithCleanups 0x560a85621e88 <col:98, col:105> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x560a85621e70 <col:98, col:105> 'const String' lvalue
|       `-ImplicitCastExpr 0x560a85621e58 <col:98, col:105> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x560a85621e38 <col:98, col:105> 'String' (CXXTemporary 0x560a85621e38)
|           `-CXXTemporaryObjectExpr 0x560a85621e00 <col:98, col:105> 'String' 'void ()'
|-CXXMethodDecl 0x560a85619868 <line:177:5, line:179:5> line:177:17 add_task_handlers 'void (Task *, NotifierSignal *, const String &)' inline
| |-ParmVarDecl 0x560a85619698 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x560a85619710 <col:47, col:63> col:63 used signal 'NotifierSignal *'
| |-ParmVarDecl 0x560a85619788 <col:71, col:101> col:85 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x560a85621f38 <col:94, col:101> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x560a85621f20 <col:94, col:101> 'const String' lvalue
| |     `-ImplicitCastExpr 0x560a85621f08 <col:94, col:101> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x560a85621ee8 <col:94, col:101> 'String' (CXXTemporary 0x560a85621ee8)
| |         `-CXXTemporaryObjectExpr 0x560a85621eb0 <col:94, col:101> 'String' 'void ()'
| `-CompoundStmt 0x560a85622720 <col:104, line:179:5>
|   `-CXXMemberCallExpr 0x560a85622698 <line:178:9, col:68> 'void'
|     |-MemberExpr 0x560a85622668 <col:9> '<bound member function type>' ->add_task_handlers 0x560a856195c8
|     | `-CXXThisExpr 0x560a85622658 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x560a856226d8 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x560a856225d8 <col:27> 'Task *' lvalue ParmVar 0x560a85619698 'task' 'Task *'
|     |-ImplicitCastExpr 0x560a856226f0 <col:33> 'NotifierSignal *' <LValueToRValue>
|     | `-DeclRefExpr 0x560a856225f8 <col:33> 'NotifierSignal *' lvalue ParmVar 0x560a85619710 'signal' 'NotifierSignal *'
|     |-ImplicitCastExpr 0x560a85622708 <col:41> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x560a85622618 <col:41> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x560a85619260 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x560a85622638 <col:62> 'const String' lvalue ParmVar 0x560a85619788 'prefix' 'const String &'
|-CXXMethodDecl 0x560a85619a78 <line:180:5, line:182:5> line:180:17 add_task_handlers 'void (Task *, const String &)' inline
| |-ParmVarDecl 0x560a85619930 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x560a856199a8 <col:47, col:77> col:61 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x560a85621fe8 <col:70, col:77> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x560a85621fd0 <col:70, col:77> 'const String' lvalue
| |     `-ImplicitCastExpr 0x560a85621fb8 <col:70, col:77> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x560a85621f98 <col:70, col:77> 'String' (CXXTemporary 0x560a85621f98)
| |         `-CXXTemporaryObjectExpr 0x560a85621f60 <col:70, col:77> 'String' 'void ()'
| `-CompoundStmt 0x560a856228f8 <col:80, line:182:5>
|   `-CXXMemberCallExpr 0x560a85622870 <line:181:9, col:63> 'void'
|     |-MemberExpr 0x560a85622840 <col:9> '<bound member function type>' ->add_task_handlers 0x560a856195c8
|     | `-CXXThisExpr 0x560a85622830 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x560a856228b0 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x560a856227b0 <col:27> 'Task *' lvalue ParmVar 0x560a85619930 'task' 'Task *'
|     |-ImplicitCastExpr 0x560a856228c8 <col:33> 'NotifierSignal *' <NullToPointer>
|     | `-IntegerLiteral 0x560a856227d0 <col:33> 'int' 0
|     |-ImplicitCastExpr 0x560a856228e0 <col:36> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x560a856227f0 <col:36> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x560a85619260 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x560a85622810 <col:57> 'const String' lvalue ParmVar 0x560a856199a8 'prefix' 'const String &'
|-CXXMethodDecl 0x560a85619d58 <line:184:5, col:70> col:10 add_data_handlers 'void (const char *, int, uint8_t *)'
| |-ParmVarDecl 0x560a85619b40 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x560a85619bc0 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x560a85619c38 <col:57, col:66> col:66 data 'uint8_t *'
|-CXXMethodDecl 0x560a8561a008 <line:185:5, col:67> col:10 add_data_handlers 'void (const char *, int, bool *)'
| |-ParmVarDecl 0x560a85619e28 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x560a85619ea8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x560a85619f28 <col:57, col:63> col:63 data 'bool *'
|-CXXMethodDecl 0x560a8561a2f8 <line:186:5, col:71> col:10 add_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x560a8561a0d8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x560a8561a158 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x560a8561a1d0 <col:57, col:67> col:67 data 'uint16_t *'
|-CXXMethodDecl 0x560a8561a5a8 <line:187:5, col:66> col:10 add_data_handlers 'void (const char *, int, int *)'
| |-ParmVarDecl 0x560a8561a3c8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x560a8561a448 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x560a8561a4c8 <col:57, col:62> col:62 data 'int *'
|-CXXMethodDecl 0x560a8561a858 <line:188:5, col:71> col:10 add_data_handlers 'void (const char *, int, unsigned int *)'
| |-ParmVarDecl 0x560a8561a678 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x560a8561a6f8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x560a8561a778 <col:57, col:67> col:67 data 'unsigned int *'
|-CXXMethodDecl 0x560a8561ab08 <line:189:5, col:78> col:10 add_data_handlers 'void (const char *, int, atomic_uint32_t *)'
| |-ParmVarDecl 0x560a8561a928 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x560a8561a9a8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x560a8561aa20 <col:57, col:74> col:74 data 'atomic_uint32_t *'
|-CXXMethodDecl 0x560a8561adb8 <line:190:5, col:67> col:10 add_data_handlers 'void (const char *, int, long *)'
| |-ParmVarDecl 0x560a8561abd8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x560a8561ac58 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x560a8561acd8 <col:57, col:63> col:63 data 'long *'
|-CXXMethodDecl 0x560a8561b0c8 <line:191:5, col:76> col:10 add_data_handlers 'void (const char *, int, unsigned long *)'
| |-ParmVarDecl 0x560a8561aee0 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x560a8561af60 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x560a8561afe0 <col:57, col:72> col:72 data 'unsigned long *'
|-CXXMethodDecl 0x560a8561b3a8 <line:193:5, col:72> col:10 add_data_handlers 'void (const char *, int, long long *)'
| |-ParmVarDecl 0x560a8561b198 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x560a8561b218 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x560a8561b2c0 <col:57, col:68> col:68 data 'long long *'
|-CXXMethodDecl 0x560a8561b688 <line:194:5, col:81> col:10 add_data_handlers 'void (const char *, int, unsigned long long *)'
| |-ParmVarDecl 0x560a8561b478 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x560a8561b4f8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x560a8561b5a0 <col:57, col:77> col:77 data 'unsigned long long *'
|-CXXMethodDecl 0x560a8561b8f0 <line:196:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x560a8561b758 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x560a8561b7d8 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x560a8561b850 <col:67, col:77> col:77 data 'uint16_t *'
|-CXXMethodDecl 0x560a8561bb98 <line:197:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint32_t *)'
| |-ParmVarDecl 0x560a8561b9c0 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x560a8561ba40 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x560a8561bab8 <col:67, col:77> col:77 data 'uint32_t *'
|-CXXMethodDecl 0x560a8561be48 <line:199:5, col:69> col:10 add_data_handlers 'void (const char *, int, double *)'
| |-ParmVarDecl 0x560a8561bc68 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x560a8561bce8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x560a8561bd68 <col:57, col:65> col:65 data 'double *'
|-CXXMethodDecl 0x560a8561c0f8 <line:201:5, col:69> col:10 add_data_handlers 'void (const char *, int, String *)'
| |-ParmVarDecl 0x560a8561bf18 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x560a8561bf98 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x560a8561c010 <col:57, col:65> col:65 data 'String *'
|-CXXMethodDecl 0x560a8561c3a8 <line:202:5, col:72> col:10 add_data_handlers 'void (const char *, int, IPAddress *)'
| |-ParmVarDecl 0x560a8561c1c8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x560a8561c248 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x560a8561c2c0 <col:57, col:68> col:68 data 'IPAddress *'
|-CXXMethodDecl 0x560a8561c678 <line:203:5, col:75> col:10 add_data_handlers 'void (const char *, int, EtherAddress *)'
| |-ParmVarDecl 0x560a8561c478 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x560a8561c4f8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x560a8561c598 <col:57, col:71> col:71 data 'EtherAddress *'
|-CXXMethodDecl 0x560a8561c9a8 <line:204:5, col:98> col:10 add_data_handlers 'void (const char *, int, Timestamp *, bool)'
| |-ParmVarDecl 0x560a8561c748 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x560a8561c7c8 <col:46, col:50> col:50 flags 'int'
| |-ParmVarDecl 0x560a8561c840 <col:57, col:68> col:68 data 'Timestamp *'
| `-ParmVarDecl 0x560a8561c8b8 <col:74, col:93> col:79 is_interval 'bool' cinit
|   `-CXXBoolLiteralExpr 0x560a85622000 <col:93> 'bool' false
|-CXXMethodDecl 0x560a8561cb90 <line:206:5, col:58> col:19 read_positional_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x560a8561ca78 <col:43, col:50> col:51 'Element *'
| `-ParmVarDecl 0x560a8561caf8 <col:53, col:57> col:58 'void *'
|-CXXMethodDecl 0x560a8561cd68 <line:207:5, col:55> col:19 read_keyword_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x560a8561cc50 <col:40, col:47> col:48 'Element *'
| `-ParmVarDecl 0x560a8561ccd0 <col:50, col:54> col:55 'void *'
|-CXXMethodDecl 0x560a8561d048 <line:208:5, col:92> col:16 reconfigure_positional_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x560a8561ce28 <col:47, col:59> col:60 'const String &'
| |-ParmVarDecl 0x560a8561cea0 <col:62, col:69> col:70 'Element *'
| |-ParmVarDecl 0x560a8561cf20 <col:72, col:76> col:77 'void *'
| `-ParmVarDecl 0x560a8561cf98 <col:79, col:91> col:92 'ErrorHandler *'
|-CXXMethodDecl 0x560a8561d338 <line:209:5, col:89> col:16 reconfigure_keyword_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x560a8561d118 <col:44, col:56> col:57 'const String &'
| |-ParmVarDecl 0x560a8561d190 <col:59, col:66> col:67 'Element *'
| |-ParmVarDecl 0x560a8561d210 <col:69, col:73> col:74 'void *'
| `-ParmVarDecl 0x560a8561d288 <col:76, col:88> col:89 'ErrorHandler *'
|-CXXMethodDecl 0x560a8561d570 <line:211:5, col:50> col:17 llrpc 'int (unsigned int, void *)' virtual
| |-ParmVarDecl 0x560a8561d410 <col:23, col:32> col:32 command 'unsigned int'
| `-ParmVarDecl 0x560a8561d490 <col:41, col:47> col:47 arg 'void *'
|-CXXMethodDecl 0x560a8561d758 <line:212:5, col:48> col:9 local_llrpc 'int (unsigned int, void *)'
| |-ParmVarDecl 0x560a8561d638 <col:21, col:30> col:30 command 'unsigned int'
| `-ParmVarDecl 0x560a8561d6b8 <col:39, col:45> col:45 arg 'void *'
|-CXXRecordDecl 0x560a8561d808 prev 0x560a85614fa8 <line:214:5, line:252:5> line:214:11 referenced class Port definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x560a8561d900 <col:5, col:11> col:11 implicit referenced class Port
| |-AccessSpecDecl 0x560a8561d990 <col:18, col:24> col:18 public
| |-CXXMethodDecl 0x560a8561da08 <line:216:9, col:30> col:21 used active 'bool () const' inline
| |-CXXMethodDecl 0x560a8561dac8 <line:217:9, col:35> col:25 element 'Element *() const' inline
| |-CXXMethodDecl 0x560a8561db90 <line:218:9, col:27> col:20 port 'int () const' inline
| |-CXXMethodDecl 0x560a8561dd08 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| | |-ParmVarDecl 0x560a8561dc40 <col:54, col:62> col:62 p 'Packet *'
| | |-NoInlineAttr 0x560a8561ddb0 <col:24>
| | `-OptimizeNoneAttr 0x560a8561de08 <col:34>
| |-CXXMethodDecl 0x560a8561de50 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
| |-CXXMethodDecl 0x560a8561e108 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| | |-ParmVarDecl 0x560a8561df00 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x560a8561df78 <col:43, col:52> col:52 e 'Element *'
| | `-ParmVarDecl 0x560a8561dff8 <col:55, col:59> col:59 port 'int'
| |-AccessSpecDecl 0x560a8561e1c0 <line:229:7, col:14> col:7 private
| |-FieldDecl 0x560a8561e1f8 <line:231:9, col:18> col:18 referenced _e 'Element *'
| |-FieldDecl 0x560a8561e260 <line:232:9, col:13> col:13 referenced _port 'int'
| |-CXXConstructorDecl 0x560a8561e2e8 <line:247:9, col:21> col:16 Port 'void ()' inline
| |-CXXMethodDecl 0x560a8561e608 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| | |-ParmVarDecl 0x560a8561e3a0 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x560a8561e418 <col:43, col:52> col:52 owner 'Element *'
| | |-ParmVarDecl 0x560a8561e490 <col:59, col:68> col:68 e 'Element *'
| | `-ParmVarDecl 0x560a8561e510 <col:71, col:75> col:75 port 'int'
| |-FriendDecl 0x560a8561e720 <line:250:9, col:22> col:16 'class Element':'Element'
| |-CXXConstructorDecl 0x560a85626098 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x560a85626098
| | `-ParmVarDecl 0x560a856261a8 <col:11> col:11 'const Element::Port &'
| |-CXXConstructorDecl 0x560a85626248 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x560a85626248
| | `-ParmVarDecl 0x560a85626358 <col:11> col:11 'Element::Port &&'
| `-CXXDestructorDecl 0x560a8562c248 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x560a8561e798 <line:256:5, col:49> col:12 id 'String () const'
| `-DeprecatedAttr 0x560a8561e838 <col:38> "" ""
|-CXXMethodDecl 0x560a8561e8c8 <line:257:5, col:55> col:12 landmark 'String () const'
| `-DeprecatedAttr 0x560a8561e968 <col:44> "" ""
|-AccessSpecDecl 0x560a8561e9d8 <line:260:3, col:10> col:3 private
|-EnumDecl 0x560a8561ea00 <line:262:5, col:29> col:5
| `-EnumConstantDecl 0x560a8561eb00 <col:12, col:27> col:12 referenced INLINE_PORTS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:262:5)'
|   `-ImplicitCastExpr 0x560a8561eb50 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x560a8561eae0 <col:27> 'int' Int: 4
|       `-IntegerLiteral 0x560a8561eac0 <col:27> 'int' 4
|-FieldDecl 0x560a8561ec08 <line:264:5, col:19> col:11 referenced _ports 'Element::Port *[2]'
|-FieldDecl 0x560a8561edb8 <line:265:5, col:36> col:10 _inline_ports 'Element::Port [4]'
|-FieldDecl 0x560a8561ee70 <line:267:5, col:18> col:9 referenced _nports 'int [2]'
|-FieldDecl 0x560a8561ff00 <line:269:5, col:13> col:13 referenced _router 'Router *'
|-FieldDecl 0x560a8561ff68 <line:270:5, col:9> col:9 referenced _eindex 'int'
|-CXXConstructorDecl 0x560a856200b8 <line:292:5, col:28> col:5 Element 'void (const Element &)'
| `-ParmVarDecl 0x560a8561fff8 <col:13, col:27> col:28 'const Element &'
|-CXXMethodDecl 0x560a85620268 <line:293:5, col:39> col:14 operator= 'Element &(const Element &)'
| `-ParmVarDecl 0x560a85620178 <col:24, col:38> col:39 'const Element &'
|-CXXMethodDecl 0x560a85620448 <line:296:5, col:28> col:9 set_nports 'int (int, int)'
| |-ParmVarDecl 0x560a85620328 <col:20> col:23 'int'
| `-ParmVarDecl 0x560a856203a8 <col:25> col:28 'int'
|-CXXMethodDecl 0x560a856206f0 <line:297:5, col:47> col:9 notify_nports 'int (int, int, ErrorHandler *)'
| |-ParmVarDecl 0x560a85620510 <col:23> col:26 'int'
| |-ParmVarDecl 0x560a85620590 <col:28> col:31 'int'
| `-ParmVarDecl 0x560a85620608 <col:33, col:46> col:47 'ErrorHandler *'
|-EnumDecl 0x560a856207a8 <line:298:5, col:47> col:10 Processing
| |-EnumConstantDecl 0x560a85620870 <col:23> col:23 VAGNOSTIC 'Element::Processing'
| |-EnumConstantDecl 0x560a856208c0 <col:34> col:34 VPUSH 'Element::Processing'
| `-EnumConstantDecl 0x560a85620910 <col:41> col:41 VPULL 'Element::Processing'
|-CXXMethodDecl 0x560a85620af0 <line:299:5, col:71> col:16 next_processing_code 'int (const char *&, ErrorHandler *)' static
| |-ParmVarDecl 0x560a856209a0 <col:37, col:50> col:50 p 'const char *&'
| `-ParmVarDecl 0x560a85620a18 <col:53, col:67> col:67 errh 'ErrorHandler *'
|-CXXMethodDecl 0x560a85620d98 <line:300:5, col:80> col:10 processing_vector 'void (int *, int *, ErrorHandler *) const'
| |-ParmVarDecl 0x560a85620bb8 <col:28, col:33> col:33 input_codes 'int *'
| |-ParmVarDecl 0x560a85620c38 <col:46, col:51> col:51 output_codes 'int *'
| `-ParmVarDecl 0x560a85620cb0 <col:65, col:77> col:78 'ErrorHandler *'
|-CXXMethodDecl 0x560a85620fb8 <line:302:5, col:74> col:10 initialize_ports 'void (const int *, const int *)'
| |-ParmVarDecl 0x560a85620e68 <col:27, col:38> col:38 input_codes 'const int *'
| `-ParmVarDecl 0x560a85620ee8 <col:51, col:62> col:62 output_codes 'const int *'
|-CXXMethodDecl 0x560a856212f0 <line:303:5, col:60> col:9 connect_port 'int (bool, int, Element *, int)'
| |-ParmVarDecl 0x560a85621078 <col:22, col:27> col:27 isoutput 'bool'
| |-ParmVarDecl 0x560a856210f8 <col:37, col:41> col:41 port 'int'
| |-ParmVarDecl 0x560a85621170 <col:47, col:54> col:55 'Element *'
| `-ParmVarDecl 0x560a856211f0 <col:57> col:60 'int'
|-CXXMethodDecl 0x560a856214d8 <line:305:5, col:68> col:19 read_handlers_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x560a856213c0 <col:41, col:50> col:50 e 'Element *'
| `-ParmVarDecl 0x560a85621440 <col:53, col:59> col:59 user_data 'void *'
|-CXXMethodDecl 0x560a85621628 <line:306:5, col:51> col:10 add_default_handlers 'void (bool)'
| `-ParmVarDecl 0x560a85621598 <col:31, col:36> col:36 writable_config 'bool'
|-CXXMethodDecl 0x560a856219a8 <line:307:5, col:100> col:17 add_data_handlers 'void (const char *, int, HandlerCallback, void *)' inline
| |-ParmVarDecl 0x560a856216e8 <col:35, col:47> col:47 name 'const char *'
| |-ParmVarDecl 0x560a85621768 <col:53, col:57> col:57 flags 'int'
| |-ParmVarDecl 0x560a856217e0 <col:64, col:80> col:80 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| `-ParmVarDecl 0x560a85621860 <col:90, col:96> col:96 data 'void *'
`-FriendDecl 0x560a85621ac0 <line:309:5, col:18> col:12 'class Router':'Router'

Layout: <CGRecordLayout
  LLVMType:%class.Element = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Element.base = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class NullElement
         0 |   class Element (primary base)
         0 |     (Element vtable pointer)
         8 |     class Element::Port *[2] _ports
        24 |     class Element::Port [4] _inline_ports
        88 |     int [2] _nports
        96 |     class Router * _router
       104 |     int _eindex
           | [sizeof=112, dsize=108, align=8,
           |  nvsize=108, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x560a85629208 <../elements/standard/nullelement.hh:45:1, line:54:1> line:45:7 class NullElement definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-public 'Element'
|-CXXRecordDecl 0x560a85629368 <col:1, col:7> col:7 implicit referenced class NullElement
|-AccessSpecDecl 0x560a856293f8 <col:38, col:44> col:38 public
|-CXXConstructorDecl 0x560a85629480 <line:47:3, col:15> col:3 NullElement 'void ()'
|-CXXMethodDecl 0x560a85629580 <line:49:3, col:51> col:15 class_name 'const char *() const'
| |-Overrides: [ 0x560a85611f58 Element::class_name 'const char *() const' ]
| `-CompoundStmt 0x560a8562a070 <col:34, col:51>
|   `-ReturnStmt 0x560a8562a060 <col:36, col:43>
|     `-ImplicitCastExpr 0x560a8562a048 <col:43> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x560a8562a028 <col:43> 'const char [5]' lvalue "Null"
|-CXXMethodDecl 0x560a85629648 <line:50:3, col:54> col:15 port_count 'const char *() const'
| |-Overrides: [ 0x560a85612020 Element::port_count 'const char *() const' ]
| `-CompoundStmt 0x560a8562a0d0 <col:34, col:54>
|   `-ReturnStmt 0x560a8562a0c0 <col:36, col:43>
|     `-ImplicitCastExpr 0x560a8562a0a8 <col:43> 'const char *' <ArrayToPointerDecay>
|       `-DeclRefExpr 0x560a8562a088 <col:43> 'const char []' lvalue Var 0x560a856122d0 'PORTS_1_1' 'const char []'
|-CXXMethodDecl 0x560a85629788 <line:52:3, col:33> col:11 simple_action 'Packet *(Packet *)'
| |-Overrides: [ 0x560a85611138 Element::simple_action 'Packet *(Packet *)' ]
| `-ParmVarDecl 0x560a856296f8 <col:25, col:32> col:33 'Packet *'
|-CXXConstructorDecl 0x560a85629858 <line:45:7> col:7 implicit NullElement 'void (const NullElement &)' inline default_delete noexcept-unevaluated 0x560a85629858
| `-ParmVarDecl 0x560a85629968 <col:7> col:7 'const NullElement &'
|-CXXConstructorDecl 0x560a85629a08 <col:7> col:7 implicit NullElement 'void (NullElement &&)' inline default_delete noexcept-unevaluated 0x560a85629a08
| `-ParmVarDecl 0x560a85629b18 <col:7> col:7 'NullElement &&'
|-CXXMethodDecl 0x560a85629bb8 <col:7> col:7 implicit operator= 'NullElement &(const NullElement &)' inline default_delete noexcept-unevaluated 0x560a85629bb8
| `-ParmVarDecl 0x560a85629cc8 <col:7> col:7 'const NullElement &'
|-CXXMethodDecl 0x560a85629d38 <col:7> col:7 implicit operator= 'NullElement &(NullElement &&)' inline default_delete noexcept-unevaluated 0x560a85629d38
| `-ParmVarDecl 0x560a85629e48 <col:7> col:7 'NullElement &&'
`-CXXDestructorDecl 0x560a85629ed0 <col:7> col:7 implicit ~NullElement 'void ()' inline default noexcept-unevaluated 0x560a85629ed0
  `-Overrides: [ 0x560a85610af8 Element::~Element 'void () noexcept' ]

Layout: <CGRecordLayout
  LLVMType:%class.NullElement = type { %class.Element.base, [4 x i8] }
  NonVirtualBaseLLVMType:%class.NullElement.base = type { %class.Element.base }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class atomic_uint32_t
         0 |   uint32_t _val
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Packet::Anno
         0 |   char [48] c
         0 |   uint8_t [48] u8
         0 |   uint16_t [24] u16
         0 |   uint32_t [12] u32
         0 |   uint64_t [6] u64
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Packet::AllAnno
         0 |   union Packet::Anno cb
         0 |     char [48] c
         0 |     uint8_t [48] u8
         0 |     uint16_t [24] u16
         0 |     uint32_t [12] u32
         0 |     uint64_t [6] u64
        48 |   unsigned char * mac
        56 |   unsigned char * nh
        64 |   unsigned char * h
        72 |   enum Packet::PacketType pkt_type
        76 |   char [8] timestamp
        88 |   class Packet * next
        96 |   class Packet * prev
           | [sizeof=104, dsize=104, align=8,
           |  nvsize=104, nvalign=8]

*** Dumping AST Record Layout
         0 | class Packet
         0 |   class atomic_uint32_t _use_count
         0 |     uint32_t _val
         8 |   class Packet * _data_packet
        16 |   unsigned char * _head
        24 |   unsigned char * _data
        32 |   unsigned char * _tail
        40 |   unsigned char * _end
        48 |   struct Packet::AllAnno _aa
        48 |     union Packet::Anno cb
        48 |       char [48] c
        48 |       uint8_t [48] u8
        48 |       uint16_t [24] u16
        48 |       uint32_t [12] u32
        48 |       uint64_t [6] u64
        96 |     unsigned char * mac
       104 |     unsigned char * nh
       112 |     unsigned char * h
       120 |     enum Packet::PacketType pkt_type
       124 |     char [8] timestamp
       136 |     class Packet * next
       144 |     class Packet * prev
       152 |   Packet::buffer_destructor_type _destructor
       160 |   void * _destructor_argument
           | [sizeof=168, dsize=168, align=8,
           |  nvsize=168, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x560a853cf2d0 <../dummy_inc/click/atomic.hh:52:1, line:94:1> line:52:7 referenced class atomic_uint32_t definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x560a853cf3e8 <col:1, col:7> col:7 implicit referenced class atomic_uint32_t
|-AccessSpecDecl 0x560a853cf478 <col:25, col:31> col:25 public
|-CXXMethodDecl 0x560a853cf548 <line:57:5, col:29> col:21 used value 'uint32_t () const' inline
|-CXXConversionDecl 0x560a853cf630 <line:58:5, col:32> col:12 operator unsigned int 'uint32_t () const' inline
|-CXXMethodDecl 0x560a853cf848 <line:60:5, col:49> col:29 used operator= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x560a853cf6f0 <col:39, col:48> col:48 x 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x560a853cf9f8 <line:62:5, col:53> col:29 operator+= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x560a853cf900 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x560a853cfb40 <line:63:5, col:53> col:29 operator-= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x560a853cfab0 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x560a853cfc88 <line:64:5, col:53> col:29 operator|= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x560a853cfbf8 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x560a853cfdd0 <line:65:5, col:53> col:29 operator&= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x560a853cfd40 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x560a853cfe98 <line:67:5, col:28> col:17 operator++ 'void ()' inline
|-CXXMethodDecl 0x560a853cffe0 <line:68:5, col:31> col:17 operator++ 'void (int)' inline
| `-ParmVarDecl 0x560a853cff50 <col:28> col:31 'int'
|-CXXMethodDecl 0x560a853d00a8 <line:69:5, col:28> col:17 operator-- 'void ()' inline
|-CXXMethodDecl 0x560a853d01f0 <line:70:5, col:31> col:17 operator-- 'void (int)' inline
| `-ParmVarDecl 0x560a853d0160 <col:28> col:31 'int'
|-CXXMethodDecl 0x560a853d0368 <line:72:5, col:42> col:21 swap 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x560a853d02a8 <col:26, col:35> col:35 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x560a853d04b0 <line:73:5, col:49> col:21 fetch_and_add 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x560a853d0420 <col:35, col:44> col:44 delta 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x560a853d0578 <line:74:5, col:30> col:17 dec_and_test 'bool ()' inline
|-CXXMethodDecl 0x560a853d0738 <line:75:5, col:69> col:21 compare_swap 'uint32_t (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x560a853d0628 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x560a853d06a0 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x560a853d0988 <line:76:5, col:97> col:17 compare_and_swap 'bool (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x560a853d07f8 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x560a853d0870 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x560a853d0a38 <col:86> "" ""
|-CXXMethodDecl 0x560a853d0ca8 <line:78:5, col:71> col:28 used swap 'uint32_t (volatile uint32_t &, uint32_t)' static inline
| |-ParmVarDecl 0x560a853d0b18 <col:33, col:52> col:52 x 'volatile uint32_t &'
| `-ParmVarDecl 0x560a853d0b90 <col:55, col:64> col:64 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x560a853d0e58 <line:79:5, col:48> col:24 used inc 'void (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x560a853d0d68 <col:28, col:47> col:47 x 'volatile uint32_t &'
|-CXXMethodDecl 0x560a853d1008 <line:80:5, col:57> col:24 used dec_and_test 'bool (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x560a853d0f10 <col:37, col:56> col:56 x 'volatile uint32_t &'
|-CXXMethodDecl 0x560a853d12d8 <line:81:5, col:98> col:28 compare_swap 'uint32_t (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x560a853d10c0 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x560a853d1138 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x560a853d11b0 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x560a853d15b8 <line:82:5, col:126> col:24 compare_and_swap 'bool (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x560a853d13a0 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x560a853d1418 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x560a853d1490 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x560a853d1670 <col:115> "" ""
|-AccessSpecDecl 0x560a853d16e0 <line:84:3, col:10> col:3 private
|-FieldDecl 0x560a853d1718 <line:91:5, col:14> col:14 referenced _val 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x560a853d2c30 <line:52:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x560a853d2c30
| `-ParmVarDecl 0x560a853d2d38 <col:7> col:7 'const atomic_uint32_t &'
|-CXXMethodDecl 0x560a853d2dd8 <col:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x560a853d2dd8
| `-ParmVarDecl 0x560a853d2ee8 <col:7> col:7 'atomic_uint32_t &&'
|-CXXConstructorDecl 0x560a85408518 <col:7> col:7 implicit used atomic_uint32_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x560a855fa310 <col:7>
|-CXXConstructorDecl 0x560a854085f0 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x560a854085f0
| `-ParmVarDecl 0x560a85408708 <col:7> col:7 'const atomic_uint32_t &'
|-CXXConstructorDecl 0x560a85408778 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x560a85408778
| `-ParmVarDecl 0x560a85408888 <col:7> col:7 'atomic_uint32_t &&'
`-CXXDestructorDecl 0x560a855fcd10 <col:7> col:7 implicit ~atomic_uint32_t 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.atomic_uint32_t = type { i32 }
  NonVirtualBaseLLVMType:%class.atomic_uint32_t = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x560a855e8eb8 prev 0x560a855de0c0 <../dummy_inc/click/packet.hh:702:5, line:711:5> line:702:11 referenced union Anno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x560a855e8fb0 <col:5, col:11> col:11 implicit union Anno
|-FieldDecl 0x560a855e90a0 <line:703:2, col:18> col:7 referenced c 'char [48]'
|-FieldDecl 0x560a855e91c8 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
|-FieldDecl 0x560a855e9348 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
|-FieldDecl 0x560a855e94c8 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
|-FieldDecl 0x560a855e9648 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
|-CXXConstructorDecl 0x560a855fa478 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| `-CompoundStmt 0x560a855face8 <col:11>
|-CXXDestructorDecl 0x560a855fa550 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x560a855fa688 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x560a855fa688
| `-ParmVarDecl 0x560a855fa798 <col:11> col:11 'const Packet::Anno &'
|-CXXConstructorDecl 0x560a855fa838 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x560a855fa838
| `-ParmVarDecl 0x560a855fa948 <col:11> col:11 'Packet::Anno &&'
|-CXXMethodDecl 0x560a855fd708 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| |-ParmVarDecl 0x560a855fd818 <col:11> col:11 'const Packet::Anno &'
| `-CompoundStmt 0x560a855fda98 <col:11>
|   `-ReturnStmt 0x560a855fda88 <col:11>
|     `-UnaryOperator 0x560a855fda70 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x560a855fda60 <col:11> 'Packet::Anno *' this
`-CXXMethodDecl 0x560a855fd888 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x560a855fd888
  `-ParmVarDecl 0x560a855fd998 <col:11> col:11 'Packet::Anno &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Packet::Anno" = type { [6 x i64] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x560a855e96b0 <../dummy_inc/click/packet.hh:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x560a855e97c8 <col:5, col:12> col:12 implicit struct AllAnno
|-FieldDecl 0x560a855e9868 <line:717:2, col:7> col:7 cb 'Packet::Anno'
|-FieldDecl 0x560a855e98d0 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
|-FieldDecl 0x560a855e9938 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
|-FieldDecl 0x560a855e99a0 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
|-FieldDecl 0x560a855e9a00 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
|-FieldDecl 0x560a855e9ac0 <line:722:2, col:34> col:7 timestamp 'char [8]'
|-FieldDecl 0x560a855e9b20 <line:723:2, col:10> col:10 referenced next 'Packet *'
|-FieldDecl 0x560a855e9b80 <line:724:2, col:10> col:10 referenced prev 'Packet *'
|-CXXConstructorDecl 0x560a855fa388 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| |-CXXCtorInitializer Field 0x560a855e9868 'cb' 'Packet::Anno'
| | `-CXXConstructExpr 0x560a855facf8 <col:12> 'Packet::Anno' 'void () noexcept'
| `-CompoundStmt 0x560a855fad50 <col:12>
|-CXXConstructorDecl 0x560a855fa9b8 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x560a855fa9b8
| `-ParmVarDecl 0x560a855faac8 <col:12> col:12 'const Packet::AllAnno &'
|-CXXConstructorDecl 0x560a855fab68 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x560a855fab68
| `-ParmVarDecl 0x560a855fac78 <col:12> col:12 'Packet::AllAnno &&'
`-CXXDestructorDecl 0x560a855fcdf0 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  NonVirtualBaseLLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x560a855d77d0 <../dummy_inc/click/packet.hh:35:1, line:775:1> line:35:7 referenced class Packet definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x560a855d78e8 <col:1, col:7> col:7 implicit referenced class Packet
|-AccessSpecDecl 0x560a855d7978 <col:16, col:22> col:16 public
|-EnumDecl 0x560a855d79a0 <line:41:5, line:50:5> line:41:5
| |-EnumConstantDecl 0x560a855d7aa0 <line:45:2, col:21> col:2 referenced default_headroom 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| | `-ImplicitCastExpr 0x560a855d7b80 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x560a855d7a80 <col:21> 'int' Int: 28
| |     `-IntegerLiteral 0x560a855d7a60 <col:21> 'int' 28
| `-EnumConstantDecl 0x560a855d7b30 <line:48:2, col:22> col:2 referenced min_buffer_length 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
|   `-ImplicitCastExpr 0x560a855d7b98 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x560a855d7b10 <col:22> 'int' Int: 64
|       `-IntegerLiteral 0x560a855d7af0 <col:22> 'int' 64
|-CXXMethodDecl 0x560a855d7ed8 <line:52:5, line:53:75> line:52:28 used make 'WritablePacket *(uint32_t, const void *, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x560a855d7bc0 <col:33, col:42> col:42 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x560a855d7c40 <col:52, col:64> col:64 data 'const void *'
| |-ParmVarDecl 0x560a855d7cb8 <line:53:5, col:14> col:14 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x560a855d7d30 <col:22, col:31> col:31 tailroom 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x560a855d7f98 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x560a855d8198 <line:54:5, col:109> col:35 make 'WritablePacket *(const void *, uint32_t)' static inline
| |-ParmVarDecl 0x560a855d8010 <col:40, col:52> col:52 data 'const void *'
| |-ParmVarDecl 0x560a855d8088 <col:58, col:67> col:67 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x560a855d8248 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x560a855d83a8 <line:55:5, col:91> col:35 make 'WritablePacket *(uint32_t)' static inline
| |-ParmVarDecl 0x560a855d82b8 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x560a855d8450 <col:72> warn_unused_result ""
|-TypedefDecl 0x560a855d87b0 <line:65:5, col:89> col:20 referenced buffer_destructor_type 'void (*)(unsigned char *, size_t, void *)'
| `-PointerType 0x560a855d8740 'void (*)(unsigned char *, size_t, void *)'
|   `-ParenType 0x560a855d86e0 'void (unsigned char *, size_t, void *)' sugar
|     `-FunctionProtoType 0x560a855d86a0 'void (unsigned char *, size_t, void *)' cdecl
|       |-BuiltinType 0x560a850b12d0 'void'
|       |-PointerType 0x560a85357b70 'unsigned char *'
|       | `-BuiltinType 0x560a850b13d0 'unsigned char'
|       |-TypedefType 0x560a851540e0 'size_t' sugar
|       | |-Typedef 0x560a85121b20 'size_t'
|       | `-BuiltinType 0x560a850b1430 'unsigned long'
|       `-PointerType 0x560a850b1ad0 'void *'
|         `-BuiltinType 0x560a850b12d0 'void'
|-CXXMethodDecl 0x560a855d8c28 <line:66:5, line:68:131> line:66:28 make 'WritablePacket *(unsigned char *, uint32_t, Packet::buffer_destructor_type, void *, int, int)' static
| |-ParmVarDecl 0x560a855d8820 <col:33, col:48> col:48 data 'unsigned char *'
| |-ParmVarDecl 0x560a855d8898 <col:54, col:63> col:63 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x560a855d8930 <line:67:5, col:28> col:28 buffer_destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| |-ParmVarDecl 0x560a855d89b0 <line:68:33, col:58> col:39 argument 'void *' cinit
| | `-CStyleCastExpr 0x560a855f3320 <col:50, col:58> 'void *' <NoOp>
| |   `-ImplicitCastExpr 0x560a855f3308 <col:58> 'void *' <NullToPointer> part_of_explicit_cast
| |     `-IntegerLiteral 0x560a855f32d0 <col:58> 'int' 0
| |-ParmVarDecl 0x560a855d8a30 <col:61, col:76> col:65 headroom 'int' cinit
| | `-IntegerLiteral 0x560a855f3348 <col:76> 'int' 0
| |-ParmVarDecl 0x560a855d8ab0 <col:79, col:94> col:83 tailroom 'int' cinit
| | `-IntegerLiteral 0x560a855f3368 <col:94> 'int' 0
| `-WarnUnusedResultAttr 0x560a855d8cf8 <col:112> warn_unused_result ""
|-CXXMethodDecl 0x560a855d8d78 <line:71:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x560a855d8e38 <line:73:5, col:50> col:45 used kill 'void ()'
| |-NoInlineAttr 0x560a855d8ed8 <col:20>
| `-OptimizeNoneAttr 0x560a855d8f30 <col:30>
|-CXXMethodDecl 0x560a855d8fa8 <line:75:5, col:54> col:45 used shared 'bool () const'
| |-NoInlineAttr 0x560a855d9048 <col:20>
| `-OptimizeNoneAttr 0x560a855d90a0 <col:30>
|-CXXMethodDecl 0x560a855d9118 <line:76:5, col:55> col:13 clone 'Packet *()'
| `-WarnUnusedResultAttr 0x560a855d91b8 <col:36> warn_unused_result ""
|-CXXMethodDecl 0x560a855d9268 <line:77:5, col:102> col:56 uniqueify 'WritablePacket *()'
| |-NoInlineAttr 0x560a855d9308 <col:20>
| |-OptimizeNoneAttr 0x560a855d9360 <col:30>
| `-WarnUnusedResultAttr 0x560a855d9388 <col:83> warn_unused_result ""
|-CXXMethodDecl 0x560a855d93e0 <line:79:5, col:68> col:61 used data 'const unsigned char *() const'
| |-NoInlineAttr 0x560a855d9480 <col:20>
| `-OptimizeNoneAttr 0x560a855d94d8 <col:30>
|-CXXMethodDecl 0x560a855d9528 <line:80:5, col:72> col:61 used end_data 'const unsigned char *() const'
| |-NoInlineAttr 0x560a855d95c8 <col:20>
| `-OptimizeNoneAttr 0x560a855d9620 <col:30>
|-CXXMethodDecl 0x560a855d9668 <line:81:5, col:58> col:49 length 'uint32_t () const'
| |-NoInlineAttr 0x560a855d9708 <col:20>
| `-OptimizeNoneAttr 0x560a855d9760 <col:30>
|-CXXMethodDecl 0x560a855d97a8 <line:82:5, col:32> col:21 used headroom 'uint32_t () const' inline
|-CXXMethodDecl 0x560a855d9868 <line:83:5, col:32> col:21 used tailroom 'uint32_t () const' inline
|-CXXMethodDecl 0x560a855d9930 <line:84:5, col:42> col:33 used buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x560a855d99f8 <line:85:5, col:46> col:33 used end_buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x560a855d9ab8 <line:86:5, col:37> col:21 used buffer_length 'uint32_t () const' inline
|-CXXMethodDecl 0x560a855d9bd8 <line:97:5, line:99:5> line:97:28 buffer_destructor 'Packet::buffer_destructor_type () const'
| `-CompoundStmt 0x560a855f3430 <col:54, line:99:5>
|   `-ReturnStmt 0x560a855f3420 <line:98:2, col:9>
|     `-ImplicitCastExpr 0x560a855f3408 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-MemberExpr 0x560a855f33d8 <col:9> 'const Packet::buffer_destructor_type':'void (*const)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x560a855e9eb8
|         `-CXXThisExpr 0x560a855f33c8 <col:9> 'const Packet *' implicit this
|-CXXMethodDecl 0x560a855d9d78 <line:101:5, line:103:5> line:101:10 set_buffer_destructor 'void (Packet::buffer_destructor_type)'
| |-ParmVarDecl 0x560a855d9c88 <col:32, col:55> col:55 used destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| `-CompoundStmt 0x560a855f34e0 <col:67, line:103:5>
|   `-BinaryOperator 0x560a855f34c0 <line:102:9, col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x560a855f3458 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x560a855e9eb8
|     | `-CXXThisExpr 0x560a855f3448 <col:9> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x560a855f34a8 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-DeclRefExpr 0x560a855f3488 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ParmVar 0x560a855d9c88 'destructor' 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-CXXMethodDecl 0x560a855d9e70 <line:105:5, line:107:5> line:105:11 destructor_argument 'void *()'
| `-CompoundStmt 0x560a855f3560 <col:33, line:107:5>
|   `-ReturnStmt 0x560a855f3550 <line:106:9, col:16>
|     `-ImplicitCastExpr 0x560a855f3538 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x560a855f3508 <col:16> 'void *' lvalue ->_destructor_argument 0x560a855e9f20
|         `-CXXThisExpr 0x560a855f34f8 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x560a855d9f30 <line:109:5, line:113:5> line:109:10 reset_buffer 'void ()'
| `-CompoundStmt 0x560a855f3b90 <col:25, line:113:5>
|   |-ParenExpr 0x560a855f38d8 <line:110:2, col:146> 'void'
|   | `-ConditionalOperator 0x560a855f38a8 <col:3, col:145> 'void'
|   |   |-CXXStaticCastExpr 0x560a855f3618 <col:3, col:32> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x560a855f35f0 <col:23, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-CXXMemberCallExpr 0x560a855f35b8 <col:24, col:31> 'bool'
|   |   |     `-MemberExpr 0x560a855f3588 <col:24> '<bound member function type>' ->shared 0x560a855d8fa8
|   |   |       `-ImplicitCastExpr 0x560a855f35d8 <col:24> 'const Packet *' <NoOp>
|   |   |         `-CXXThisExpr 0x560a855f3578 <col:24> 'Packet *' implicit this
|   |   |-CXXFunctionalCastExpr 0x560a855f3678 <col:36, col:43> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x560a855f3658 <col:42> 'int' 0
|   |   `-CallExpr 0x560a855f3808 <col:47, col:145> 'void'
|   |     |-ImplicitCastExpr 0x560a855f37f0 <col:47> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x560a855f37d0 <col:47> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x560a8514aef0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x560a855f3848 <col:62> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x560a855f36e8 <col:62> 'const char [10]' lvalue "!shared()"
|   |     |-ImplicitCastExpr 0x560a855f3860 <col:75> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x560a855f3710 <col:75> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x560a855f3878 <col:107> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x560a855f3748 <col:107> 'int' 110
|   |     `-ImplicitCastExpr 0x560a855f3890 <col:112, col:126> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x560a855f37b8 <col:112, col:126> 'const char [28]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x560a855f37a0 <col:126> 'const char [28]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x560a855f3768 <col:126> 'const char [28]' lvalue "void Packet::reset_buffer()"
|   |-BinaryOperator 0x560a855f3ad8 <line:111:2, col:33> 'unsigned char *' lvalue '='
|   | |-MemberExpr 0x560a855f3908 <col:2> 'unsigned char *' lvalue ->_head 0x560a855e9cc0
|   | | `-CXXThisExpr 0x560a855f38f8 <col:2> 'Packet *' implicit this
|   | `-ImplicitCastExpr 0x560a855f3ac0 <col:10, col:33> 'unsigned char *' <LValueToRValue>
|   |   `-BinaryOperator 0x560a855f3aa0 <col:10, col:33> 'unsigned char *' lvalue '='
|   |     |-MemberExpr 0x560a855f3948 <col:10> 'unsigned char *' lvalue ->_data 0x560a855e9d28
|   |     | `-CXXThisExpr 0x560a855f3938 <col:10> 'Packet *' implicit this
|   |     `-ImplicitCastExpr 0x560a855f3a88 <col:18, col:33> 'unsigned char *' <LValueToRValue>
|   |       `-BinaryOperator 0x560a855f3a68 <col:18, col:33> 'unsigned char *' lvalue '='
|   |         |-MemberExpr 0x560a855f3988 <col:18> 'unsigned char *' lvalue ->_tail 0x560a855e9d90
|   |         | `-CXXThisExpr 0x560a855f3978 <col:18> 'Packet *' implicit this
|   |         `-ImplicitCastExpr 0x560a855f3a50 <col:26, col:33> 'unsigned char *' <LValueToRValue>
|   |           `-BinaryOperator 0x560a855f3a30 <col:26, col:33> 'unsigned char *' lvalue '='
|   |             |-MemberExpr 0x560a855f39c8 <col:26> 'unsigned char *' lvalue ->_end 0x560a855e9df8
|   |             | `-CXXThisExpr 0x560a855f39b8 <col:26> 'Packet *' implicit this
|   |             `-ImplicitCastExpr 0x560a855f3a18 <col:33> 'unsigned char *' <NullToPointer>
|   |               `-IntegerLiteral 0x560a855f39f8 <col:33> 'int' 0
|   `-BinaryOperator 0x560a855f3b70 <line:112:2, col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x560a855f3b08 <col:2> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x560a855e9eb8
|     | `-CXXThisExpr 0x560a855f3af8 <col:2> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x560a855f3b58 <col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <NullToPointer>
|       `-IntegerLiteral 0x560a855f3b38 <col:16> 'int' 0
|-CXXMethodDecl 0x560a855da070 <line:141:5, col:109> col:56 push 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x560a855d9fe0 <col:61, col:70> col:70 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x560a855da118 <col:20>
| |-OptimizeNoneAttr 0x560a855da170 <col:30>
| `-WarnUnusedResultAttr 0x560a855da198 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x560a855da268 <line:152:5, col:120> col:56 push_mac_header 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x560a855da1d8 <col:72, col:81> col:81 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x560a855da310 <col:20>
| |-OptimizeNoneAttr 0x560a855da368 <col:30>
| `-WarnUnusedResultAttr 0x560a855da390 <col:101> warn_unused_result ""
|-CXXMethodDecl 0x560a855da4c8 <line:171:5, col:76> col:13 nonunique_push 'Packet *(uint32_t)'
| |-ParmVarDecl 0x560a855da3d0 <col:28, col:37> col:37 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x560a855da570 <col:57> warn_unused_result ""
|-CXXMethodDecl 0x560a855da670 <line:187:5, col:62> col:45 pull 'void (uint32_t)'
| |-ParmVarDecl 0x560a855da5e0 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x560a855da718 <col:20>
| `-OptimizeNoneAttr 0x560a855da770 <col:30>
|-CXXMethodDecl 0x560a855da838 <line:213:5, col:73> col:21 put 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x560a855da7a8 <col:25, col:34> col:34 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x560a855da8e0 <col:54> warn_unused_result ""
|-CXXMethodDecl 0x560a855da9e0 <line:230:5, col:75> col:13 nonunique_put 'Packet *(uint32_t)'
| |-ParmVarDecl 0x560a855da950 <col:27, col:36> col:36 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x560a855daa88 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x560a855dab88 <line:245:5, col:62> col:45 take 'void (uint32_t)'
| |-ParmVarDecl 0x560a855daaf8 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x560a855dac30 <col:20>
| `-OptimizeNoneAttr 0x560a855dac88 <col:30>
|-CXXMethodDecl 0x560a855dae18 <line:269:5, col:99> col:13 shift_data 'Packet *(int, bool)'
| |-ParmVarDecl 0x560a855dacc8 <col:24, col:28> col:28 offset 'int'
| |-ParmVarDecl 0x560a855dad40 <col:36, col:59> col:41 free_on_failure 'bool' cinit
| | `-CXXBoolLiteralExpr 0x560a855f3388 <col:59> 'bool' true
| `-WarnUnusedResultAttr 0x560a855daec8 <col:80> warn_unused_result ""
|-CXXMethodDecl 0x560a855db0c8 <line:271:5, col:71> col:17 shrink_data 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x560a855daf40 <col:29, col:50> col:50 data 'const unsigned char *'
| `-ParmVarDecl 0x560a855dafb8 <col:56, col:65> col:65 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x560a855db2d8 <line:272:5, col:78> col:17 change_headroom_and_length 'void (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x560a855db188 <col:44, col:53> col:53 headroom 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x560a855db200 <col:63, col:72> col:72 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x560a855db4e8 <line:274:5, col:40> col:10 copy 'bool (Packet *, int)'
| |-ParmVarDecl 0x560a855db398 <col:15, col:23> col:23 p 'Packet *'
| `-ParmVarDecl 0x560a855db418 <col:26, col:39> col:30 headroom 'int' cinit
|   `-IntegerLiteral 0x560a855f3398 <col:39> 'int' 0
|-CXXMethodDecl 0x560a855db5b8 <line:279:5, col:34> col:17 has_mac_header 'bool () const' inline
|-CXXMethodDecl 0x560a855db680 <line:280:5, col:46> col:33 used mac_header 'const unsigned char *() const' inline
|-CXXMethodDecl 0x560a855db748 <line:281:5, col:36> col:16 mac_header_offset 'int () const' inline
|-CXXMethodDecl 0x560a855db808 <line:282:5, col:41> col:21 mac_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x560a855db8d0 <line:283:5, col:29> col:16 mac_length 'int () const' inline
|-CXXMethodDecl 0x560a855dba18 <line:284:5, col:54> col:17 set_mac_header 'void (const unsigned char *)' inline
| `-ParmVarDecl 0x560a855db988 <col:32, col:53> col:53 p 'const unsigned char *'
|-CXXMethodDecl 0x560a855dbbe8 <line:285:5, col:68> col:17 used set_mac_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x560a855dbad8 <col:32, col:53> col:53 p 'const unsigned char *'
| `-ParmVarDecl 0x560a855dbb50 <col:56, col:65> col:65 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x560a855dbcb8 <line:286:5, col:34> col:17 clear_mac_header 'void ()' inline
|-CXXMethodDecl 0x560a855dbd78 <line:288:5, col:66> col:45 has_network_header 'bool () const'
| |-NoInlineAttr 0x560a855dbe18 <col:20>
| `-OptimizeNoneAttr 0x560a855dbe70 <col:30>
|-CXXMethodDecl 0x560a855dbec0 <line:289:5, col:78> col:61 used network_header 'const unsigned char *() const'
| |-NoInlineAttr 0x560a855dbf60 <col:20>
| `-OptimizeNoneAttr 0x560a855dbfb8 <col:30>
|-CXXMethodDecl 0x560a855dc008 <line:290:5, col:40> col:16 used network_header_offset 'int () const' inline
|-CXXMethodDecl 0x560a855dc0c8 <line:291:5, col:45> col:21 used network_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x560a855dc190 <line:292:5, col:61> col:44 network_length 'int () const'
| |-NoInlineAttr 0x560a855dc230 <col:20>
| `-OptimizeNoneAttr 0x560a855dc288 <col:30>
|-CXXMethodDecl 0x560a855dc3d8 <line:293:5, col:72> col:17 set_network_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x560a855dc2c8 <col:36, col:57> col:57 p 'const unsigned char *'
| `-ParmVarDecl 0x560a855dc340 <col:60, col:69> col:69 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x560a855dc528 <line:294:5, col:55> col:17 set_network_header_length 'void (uint32_t)' inline
| `-ParmVarDecl 0x560a855dc498 <col:43, col:52> col:52 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x560a855dc600 <line:295:5, col:38> col:17 clear_network_header 'void ()' inline
|-CXXMethodDecl 0x560a855dc6c0 <line:297:5, col:68> col:45 has_transport_header 'bool () const'
| |-NoInlineAttr 0x560a855dc760 <col:20>
| `-OptimizeNoneAttr 0x560a855dc7b8 <col:30>
|-CXXMethodDecl 0x560a855dc808 <line:298:5, col:80> col:61 used transport_header 'const unsigned char *() const'
| |-NoInlineAttr 0x560a855dc8a8 <col:20>
| `-OptimizeNoneAttr 0x560a855dc900 <col:30>
|-CXXMethodDecl 0x560a855dc950 <line:299:5, col:42> col:16 transport_header_offset 'int () const' inline
|-CXXMethodDecl 0x560a855dca18 <line:300:5, col:63> col:44 transport_length 'int () const'
| |-NoInlineAttr 0x560a855dcab8 <col:20>
| `-OptimizeNoneAttr 0x560a855dcb10 <col:30>
|-CXXMethodDecl 0x560a855dcb58 <line:301:5, col:40> col:17 clear_transport_header 'void ()' inline
|-CXXMethodDecl 0x560a855dcc78 <line:304:5, col:46> col:31 ether_header 'const click_ether *() const' inline
|-CXXMethodDecl 0x560a855dcde8 <line:305:5, col:57> col:17 set_ether_header 'void (const click_ether *)' inline
| `-ParmVarDecl 0x560a855dcd28 <col:34, col:53> col:53 ethh 'const click_ether *'
|-CXXMethodDecl 0x560a855dced8 <line:307:5, col:68> col:56 ip_header 'const click_ip *() const'
| |-NoInlineAttr 0x560a855dcf78 <col:20>
| `-OptimizeNoneAttr 0x560a855dcfd0 <col:30>
|-CXXMethodDecl 0x560a855dd020 <line:308:5, col:35> col:16 ip_header_offset 'int () const' inline
|-CXXMethodDecl 0x560a855dd0e0 <line:309:5, col:40> col:21 ip_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x560a855dd318 <line:310:5, col:92> col:45 set_ip_header 'void (const click_ip *, uint32_t)'
| |-ParmVarDecl 0x560a855dd190 <col:59, col:75> col:75 iph 'const click_ip *'
| |-ParmVarDecl 0x560a855dd208 <col:80, col:89> col:89 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x560a855dd3c8 <col:20>
| `-OptimizeNoneAttr 0x560a855dd420 <col:30>
|-CXXMethodDecl 0x560a855dd4c8 <line:312:5, col:70> col:57 ip6_header 'const click_ip6 *() const'
| |-NoInlineAttr 0x560a855dd568 <col:20>
| `-OptimizeNoneAttr 0x560a855dd5c0 <col:30>
|-CXXMethodDecl 0x560a855dd610 <line:313:5, col:64> col:44 ip6_header_offset 'int () const'
| |-NoInlineAttr 0x560a855dd6b0 <col:20>
| `-OptimizeNoneAttr 0x560a855dd708 <col:30>
|-CXXMethodDecl 0x560a855dd750 <line:314:5, col:69> col:49 ip6_header_length 'uint32_t () const'
| |-NoInlineAttr 0x560a855dd7f0 <col:20>
| `-OptimizeNoneAttr 0x560a855dd848 <col:30>
|-CXXMethodDecl 0x560a855dd948 <line:315:5, col:81> col:45 set_ip6_header 'void (const click_ip6 *)'
| |-ParmVarDecl 0x560a855dd880 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-NoInlineAttr 0x560a855dd9f0 <col:20>
| `-OptimizeNoneAttr 0x560a855dda48 <col:30>
|-CXXMethodDecl 0x560a855ddc08 <line:316:5, col:95> col:45 set_ip6_header 'void (const click_ip6 *, uint32_t)'
| |-ParmVarDecl 0x560a855dda80 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-ParmVarDecl 0x560a855ddaf8 <col:83, col:92> col:92 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x560a855ddcb8 <col:20>
| `-OptimizeNoneAttr 0x560a855ddd10 <col:30>
|-CXXMethodDecl 0x560a855dddb8 <line:318:5, col:44> col:30 used icmp_header 'const click_icmp *() const' inline
|-CXXMethodDecl 0x560a855dded8 <line:319:5, col:42> col:29 used tcp_header 'const click_tcp *() const' inline
|-CXXMethodDecl 0x560a855ddff8 <line:320:5, col:42> col:29 used udp_header 'const click_udp *() const' inline
|-AccessSpecDecl 0x560a855de098 <line:333:3, col:10> col:3 private
|-CXXRecordDecl 0x560a855de0c0 <line:335:5, col:11> col:11 referenced union Anno
|-CXXMethodDecl 0x560a855de1e8 <line:340:5, col:60> col:52 used xanno 'const Packet::Anno *() const'
| |-NoInlineAttr 0x560a855de288 <col:20>
| `-OptimizeNoneAttr 0x560a855de2e0 <col:30>
|-CXXMethodDecl 0x560a855de388 <line:341:5, col:52> col:46 used xanno 'Packet::Anno *()'
| |-NoInlineAttr 0x560a855de428 <col:20>
| `-OptimizeNoneAttr 0x560a855de480 <col:30>
|-AccessSpecDecl 0x560a855de4a8 <line:344:3, col:9> col:3 public
|-EnumDecl 0x560a855de4d0 <line:349:5, line:351:5> line:349:5
| `-EnumConstantDecl 0x560a855de5d0 <line:350:2, col:14> col:2 referenced anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   `-ImplicitCastExpr 0x560a855de620 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x560a855de5b0 <col:14> 'int' Int: 48
|       `-IntegerLiteral 0x560a855de590 <col:14> 'int' 48
|-CXXMethodDecl 0x560a855de688 <line:354:5, col:74> col:57 used timestamp_anno 'const Timestamp &() const'
| |-NoInlineAttr 0x560a855de728 <col:20>
| `-OptimizeNoneAttr 0x560a855de780 <col:30>
|-CXXMethodDecl 0x560a855de7f8 <line:356:5, col:66> col:51 used timestamp_anno 'Timestamp &()'
| |-NoInlineAttr 0x560a855de898 <col:20>
| `-OptimizeNoneAttr 0x560a855de8f0 <col:30>
|-CXXMethodDecl 0x560a855de9b8 <line:359:5, col:54> col:17 used set_timestamp_anno 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x560a855de928 <col:36, col:53> col:53 t 'const Timestamp &'
|-CXXMethodDecl 0x560a855deb58 <line:362:5, col:38> col:24 used device_anno 'net_device *() const' inline
|-CXXMethodDecl 0x560a855decf8 <line:364:5, col:48> col:17 used set_device_anno 'void (net_device *)' inline
| `-ParmVarDecl 0x560a855dec08 <col:33, col:45> col:45 dev 'net_device *'
|-EnumDecl 0x560a855deda0 <line:368:5, line:381:5> line:368:10 referenced PacketType
| |-EnumConstantDecl 0x560a855deea0 <line:369:2, col:9> col:2 HOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x560a855df250 <col:9> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x560a855dee80 <col:9> 'int' Int: 0
| |     `-IntegerLiteral 0x560a855dee60 <col:9> 'int' 0
| |-EnumConstantDecl 0x560a855def30 <line:370:2, col:14> col:2 BROADCAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x560a855df268 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x560a855def10 <col:14> 'int' Int: 1
| |     `-IntegerLiteral 0x560a855deef0 <col:14> 'int' 1
| |-EnumConstantDecl 0x560a855defc0 <line:372:2, col:14> col:2 MULTICAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x560a855df280 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x560a855defa0 <col:14> 'int' Int: 2
| |     `-IntegerLiteral 0x560a855def80 <col:14> 'int' 2
| |-EnumConstantDecl 0x560a855df050 <line:374:2, col:14> col:2 OTHERHOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x560a855df298 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x560a855df030 <col:14> 'int' Int: 3
| |     `-IntegerLiteral 0x560a855df010 <col:14> 'int' 3
| |-EnumConstantDecl 0x560a855df0e0 <line:377:2, col:13> col:2 OUTGOING 'Packet::PacketType'
| | `-ImplicitCastExpr 0x560a855df2b0 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x560a855df0c0 <col:13> 'int' Int: 4
| |     `-IntegerLiteral 0x560a855df0a0 <col:13> 'int' 4
| |-EnumConstantDecl 0x560a855df170 <line:379:2, col:13> col:2 LOOPBACK 'Packet::PacketType'
| | `-ImplicitCastExpr 0x560a855df2c8 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x560a855df150 <col:13> 'int' Int: 5
| |     `-IntegerLiteral 0x560a855df130 <col:13> 'int' 5
| `-EnumConstantDecl 0x560a855df200 <line:380:2, col:14> col:2 FASTROUTE 'Packet::PacketType'
|   `-ImplicitCastExpr 0x560a855df2e0 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x560a855df1e0 <col:14> 'int' Int: 6
|       `-IntegerLiteral 0x560a855df1c0 <col:14> 'int' 6
|-CXXMethodDecl 0x560a855df348 <line:383:5, col:70> col:51 used packet_type_anno 'Packet::PacketType () const'
| |-NoInlineAttr 0x560a855df3e8 <col:20>
| `-OptimizeNoneAttr 0x560a855df440 <col:30>
|-CXXMethodDecl 0x560a855df538 <line:385:5, col:78> col:45 used set_packet_type_anno 'void (Packet::PacketType)'
| |-ParmVarDecl 0x560a855df478 <col:66, col:77> col:77 t 'Packet::PacketType'
| |-NoInlineAttr 0x560a855df5e0 <col:20>
| `-OptimizeNoneAttr 0x560a855df638 <col:30>
|-CXXMethodDecl 0x560a855df6a8 <line:410:5, col:27> col:20 next 'Packet *() const' inline
|-CXXMethodDecl 0x560a855df7d0 <line:412:5, col:26> col:21 next 'Packet *&()' inline
|-CXXMethodDecl 0x560a855df948 <line:414:5, col:35> col:17 set_next 'void (Packet *)' inline
| `-ParmVarDecl 0x560a855df880 <col:26, col:34> col:34 p 'Packet *'
|-CXXMethodDecl 0x560a855dfa10 <line:417:5, col:27> col:20 prev 'Packet *() const' inline
|-CXXMethodDecl 0x560a855dfad8 <line:419:5, col:26> col:21 prev 'Packet *&()' inline
|-CXXMethodDecl 0x560a855dfc18 <line:421:5, col:35> col:17 set_prev 'void (Packet *)' inline
| `-ParmVarDecl 0x560a855dfb88 <col:26, col:34> col:34 p 'Packet *'
|-EnumDecl 0x560a855dfcc0 <line:423:5, line:426:5> line:423:5
| |-EnumConstantDecl 0x560a855dfdc0 <line:424:2, col:23> col:2 referenced dst_ip_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x560a855dffc0 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x560a855dfda0 <col:23> 'int' Int: 0
| |     `-IntegerLiteral 0x560a855dfd80 <col:23> 'int' 0
| |-EnumConstantDecl 0x560a855dfe50 <col:26, col:45> col:26 dst_ip_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x560a855dffd8 <col:45> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x560a855dfe30 <col:45> 'int' Int: 4
| |     `-IntegerLiteral 0x560a855dfe10 <col:45> 'int' 4
| |-EnumConstantDecl 0x560a855dfee0 <line:425:2, col:24> col:2 dst_ip6_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x560a855dfff0 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x560a855dfec0 <col:24> 'int' Int: 0
| |     `-IntegerLiteral 0x560a855dfea0 <col:24> 'int' 0
| `-EnumConstantDecl 0x560a855dff70 <col:27, col:47> col:27 dst_ip6_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
|   `-ImplicitCastExpr 0x560a855e0008 <col:47> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x560a855dff50 <col:47> 'int' Int: 16
|       `-IntegerLiteral 0x560a855dff30 <col:47> 'int' 16
|-CXXMethodDecl 0x560a855e0068 <line:431:5, col:36> col:22 dst_ip_anno 'IPAddress () const' inline
|-CXXMethodDecl 0x560a855e01d8 <line:436:5, col:75> col:45 set_dst_ip_anno 'void (IPAddress)'
| |-ParmVarDecl 0x560a855e0118 <col:61, col:71> col:71 addr 'IPAddress'
| |-NoInlineAttr 0x560a855e0280 <col:20>
| `-OptimizeNoneAttr 0x560a855e02d8 <col:30>
|-CXXMethodDecl 0x560a855e0328 <line:441:5, col:36> col:11 anno 'void *()'
| `-CompoundStmt 0x560a855f3cb0 <col:18, col:36>
|   `-ReturnStmt 0x560a855f3ca0 <col:20, col:33>
|     `-ImplicitCastExpr 0x560a855f3c88 <col:27, col:33> 'void *' <BitCast>
|       `-CXXMemberCallExpr 0x560a855f3c68 <col:27, col:33> 'Packet::Anno *'
|         `-MemberExpr 0x560a855f3c38 <col:27> '<bound member function type>' ->xanno 0x560a855de388
|           `-CXXThisExpr 0x560a855f3c28 <col:27> 'Packet *' implicit this
|-CXXMethodDecl 0x560a855e0420 <line:444:5, col:48> col:17 anno 'const void *() const'
| `-CompoundStmt 0x560a855f3dc0 <col:30, col:48>
|   `-ReturnStmt 0x560a855f3db0 <col:32, col:45>
|     `-ImplicitCastExpr 0x560a855f3d98 <col:39, col:45> 'const void *' <BitCast>
|       `-CXXMemberCallExpr 0x560a855f3d78 <col:39, col:45> 'const Packet::Anno *'
|         `-MemberExpr 0x560a855f3d48 <col:39> '<bound member function type>' ->xanno 0x560a855de1e8
|           `-CXXThisExpr 0x560a855f3d38 <col:39> 'const Packet *' implicit this
|-CXXMethodDecl 0x560a855e0508 <line:447:5, col:50> col:14 used anno_u8 'uint8_t *()'
| `-CompoundStmt 0x560a855f3f58 <col:24, col:50>
|   `-ReturnStmt 0x560a855f3f48 <col:26, col:47>
|     `-UnaryOperator 0x560a855f3f30 <col:33, col:47> 'uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x560a855f3f10 <col:34, col:47> 'uint8_t':'unsigned char' lvalue
|         |-ImplicitCastExpr 0x560a855f3ef8 <col:34, col:43> 'uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x560a855f3ea8 <col:34, col:43> 'uint8_t [48]' lvalue ->u8 0x560a855e91c8
|         |   `-CXXMemberCallExpr 0x560a855f3e88 <col:34, col:40> 'Packet::Anno *'
|         |     `-MemberExpr 0x560a855f3e58 <col:34> '<bound member function type>' ->xanno 0x560a855de388
|         |       `-CXXThisExpr 0x560a855f3e48 <col:34> 'Packet *' implicit this
|         `-IntegerLiteral 0x560a855f3ed8 <col:46> 'int' 0
|-CXXMethodDecl 0x560a855e0610 <line:450:5, col:62> col:20 used anno_u8 'const uint8_t *() const'
| `-CompoundStmt 0x560a855f4128 <col:36, col:62>
|   `-ReturnStmt 0x560a855f4118 <col:38, col:59>
|     `-UnaryOperator 0x560a855f4100 <col:45, col:59> 'const uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x560a855f40e0 <col:46, col:59> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x560a855f40c8 <col:46, col:55> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x560a855f4040 <col:46, col:55> 'uint8_t const[48]' lvalue ->u8 0x560a855e91c8
|         |   `-CXXMemberCallExpr 0x560a855f4020 <col:46, col:52> 'const Packet::Anno *'
|         |     `-MemberExpr 0x560a855f3ff0 <col:46> '<bound member function type>' ->xanno 0x560a855de1e8
|         |       `-CXXThisExpr 0x560a855f3fe0 <col:46> 'const Packet *' implicit this
|         `-IntegerLiteral 0x560a855f4070 <col:58> 'int' 0
|-CXXMethodDecl 0x560a855e0728 <line:453:5, col:53> col:15 used anno_u32 'uint32_t *()'
| `-CompoundStmt 0x560a855f42c0 <col:26, col:53>
|   `-ReturnStmt 0x560a855f42b0 <col:28, col:50>
|     `-UnaryOperator 0x560a855f4298 <col:35, col:50> 'uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x560a855f4278 <col:36, col:50> 'uint32_t':'unsigned int' lvalue
|         |-ImplicitCastExpr 0x560a855f4260 <col:36, col:45> 'uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x560a855f4210 <col:36, col:45> 'uint32_t [12]' lvalue ->u32 0x560a855e94c8
|         |   `-CXXMemberCallExpr 0x560a855f41f0 <col:36, col:42> 'Packet::Anno *'
|         |     `-MemberExpr 0x560a855f41c0 <col:36> '<bound member function type>' ->xanno 0x560a855de388
|         |       `-CXXThisExpr 0x560a855f41b0 <col:36> 'Packet *' implicit this
|         `-IntegerLiteral 0x560a855f4240 <col:49> 'int' 0
|-CXXMethodDecl 0x560a855e0848 <line:456:5, col:65> col:21 used anno_u32 'const uint32_t *() const'
| `-CompoundStmt 0x560a855f4498 <col:38, col:65>
|   `-ReturnStmt 0x560a855f4488 <col:40, col:62>
|     `-UnaryOperator 0x560a855f4470 <col:47, col:62> 'const uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x560a855f4450 <col:48, col:62> 'const uint32_t':'const unsigned int' lvalue
|         |-ImplicitCastExpr 0x560a855f4438 <col:48, col:57> 'const uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x560a855f43a8 <col:48, col:57> 'uint32_t const[12]' lvalue ->u32 0x560a855e94c8
|         |   `-CXXMemberCallExpr 0x560a855f4388 <col:48, col:54> 'const Packet::Anno *'
|         |     `-MemberExpr 0x560a855f4358 <col:48> '<bound member function type>' ->xanno 0x560a855de1e8
|         |       `-CXXThisExpr 0x560a855f4348 <col:48> 'const Packet *' implicit this
|         `-IntegerLiteral 0x560a855f43d8 <col:61> 'int' 0
|-CXXMethodDecl 0x560a855e09f8 <line:460:5, line:463:5> line:460:13 used anno_u8 'uint8_t (int) const'
| |-ParmVarDecl 0x560a855e0900 <col:21, col:25> col:25 used i 'int'
| `-CompoundStmt 0x560a855f4b68 <col:34, line:463:5>
|   |-ParenExpr 0x560a855f49b0 <line:461:2, col:174> 'void'
|   | `-ConditionalOperator 0x560a855f4980 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x560a855f45e8 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x560a855f45b8 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x560a855f4508 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x560a855f44f0 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x560a855f44b0 <col:23> 'int' lvalue ParmVar 0x560a855e0900 'i' 'int'
|   |   |   | `-IntegerLiteral 0x560a855f44d0 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x560a855f4598 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x560a855f4568 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x560a855f4528 <col:33> 'int' lvalue ParmVar 0x560a855e0900 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x560a855f4580 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x560a855f4548 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x560a855de5d0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x560a855f4648 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x560a855f4628 <col:56> 'int' 0
|   |   `-CallExpr 0x560a855f48e0 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x560a855f48c8 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x560a855f48a8 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x560a8514aef0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x560a855f4920 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x560a855f4738 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x560a855f4938 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x560a855f4768 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x560a855f4950 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x560a855f47a0 <col:135> 'int' 461
|   |     `-ImplicitCastExpr 0x560a855f4968 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x560a855f4890 <col:140, col:154> 'const char [35]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x560a855f4878 <col:154> 'const char [35]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x560a855f4838 <col:154> 'const char [35]' lvalue "uint8_t Packet::anno_u8(int) const"
|   `-ReturnStmt 0x560a855f4b58 <line:462:2, col:22>
|     `-ImplicitCastExpr 0x560a855f4b40 <col:9, col:22> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-ArraySubscriptExpr 0x560a855f4b20 <col:9, col:22> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x560a855f4af0 <col:9, col:18> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x560a855f4aa0 <col:9, col:18> 'uint8_t const[48]' lvalue ->u8 0x560a855e91c8
|         |   `-CXXMemberCallExpr 0x560a855f4a80 <col:9, col:15> 'const Packet::Anno *'
|         |     `-MemberExpr 0x560a855f4a50 <col:9> '<bound member function type>' ->xanno 0x560a855de1e8
|         |       `-CXXThisExpr 0x560a855f4a40 <col:9> 'const Packet *' implicit this
|         `-ImplicitCastExpr 0x560a855f4b08 <col:21> 'int' <LValueToRValue>
|           `-DeclRefExpr 0x560a855f4ad0 <col:21> 'int' lvalue ParmVar 0x560a855e0900 'i' 'int'
|-CXXMethodDecl 0x560a855e0c48 <line:469:5, line:472:5> line:469:10 used set_anno_u8 'void (int, uint8_t)'
| |-ParmVarDecl 0x560a855e0ab8 <col:22, col:26> col:26 used i 'int'
| |-ParmVarDecl 0x560a855e0b30 <col:29, col:37> col:37 used x 'uint8_t':'unsigned char'
| `-CompoundStmt 0x560a855f51f8 <col:40, line:472:5>
|   |-ParenExpr 0x560a855f5010 <line:470:2, col:174> 'void'
|   | `-ConditionalOperator 0x560a855f4fe0 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x560a855f4cc0 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x560a855f4c90 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x560a855f4be0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x560a855f4bc8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x560a855f4b88 <col:23> 'int' lvalue ParmVar 0x560a855e0ab8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x560a855f4ba8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x560a855f4c70 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x560a855f4c40 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x560a855f4c00 <col:33> 'int' lvalue ParmVar 0x560a855e0ab8 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x560a855f4c58 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x560a855f4c20 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x560a855de5d0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x560a855f4d20 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x560a855f4d00 <col:56> 'int' 0
|   |   `-CallExpr 0x560a855f4f40 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x560a855f4f28 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x560a855f4f08 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x560a8514aef0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x560a855f4f80 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x560a855f4d90 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x560a855f4f98 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x560a855f4dc0 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x560a855f4fb0 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x560a855f4df8 <col:135> 'int' 470
|   |     `-ImplicitCastExpr 0x560a855f4fc8 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x560a855f4ef0 <col:140, col:154> 'const char [39]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x560a855f4ed8 <col:154> 'const char [39]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x560a855f4e98 <col:154> 'const char [39]' lvalue "void Packet::set_anno_u8(int, uint8_t)"
|   `-BinaryOperator 0x560a855f51d8 <line:471:2, col:19> 'uint8_t':'unsigned char' lvalue '='
|     |-ArraySubscriptExpr 0x560a855f5180 <col:2, col:15> 'uint8_t':'unsigned char' lvalue
|     | |-ImplicitCastExpr 0x560a855f5150 <col:2, col:11> 'uint8_t *' <ArrayToPointerDecay>
|     | | `-MemberExpr 0x560a855f5100 <col:2, col:11> 'uint8_t [48]' lvalue ->u8 0x560a855e91c8
|     | |   `-CXXMemberCallExpr 0x560a855f50e0 <col:2, col:8> 'Packet::Anno *'
|     | |     `-MemberExpr 0x560a855f50b0 <col:2> '<bound member function type>' ->xanno 0x560a855de388
|     | |       `-CXXThisExpr 0x560a855f50a0 <col:2> 'Packet *' implicit this
|     | `-ImplicitCastExpr 0x560a855f5168 <col:14> 'int' <LValueToRValue>
|     |   `-DeclRefExpr 0x560a855f5130 <col:14> 'int' lvalue ParmVar 0x560a855e0ab8 'i' 'int'
|     `-ImplicitCastExpr 0x560a855f51c0 <col:19> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-DeclRefExpr 0x560a855f51a0 <col:19> 'uint8_t':'unsigned char' lvalue ParmVar 0x560a855e0b30 'x' 'uint8_t':'unsigned char'
|-CXXMethodDecl 0x560a855e0e08 <line:479:5, line:485:5> line:479:14 used anno_u16 'uint16_t (int) const'
| |-ParmVarDecl 0x560a855e0d10 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x560a855f5978 <col:36, line:485:5>
|   |-ParenExpr 0x560a855f56e0 <line:480:2, col:182> 'void'
|   | `-ConditionalOperator 0x560a855f56b0 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x560a855f5390 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x560a855f5360 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x560a855f5270 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x560a855f5258 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x560a855f5218 <col:23> 'int' lvalue ParmVar 0x560a855e0d10 'i' 'int'
|   |   |   | `-IntegerLiteral 0x560a855f5238 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x560a855f5340 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x560a855f5328 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x560a855f5290 <col:33> 'int' lvalue ParmVar 0x560a855e0d10 'i' 'int'
|   |   |     `-BinaryOperator 0x560a855f5308 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x560a855f52f0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x560a855f52b0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x560a855de5d0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x560a855f52d0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x560a855f53f0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x560a855f53d0 <col:60> 'int' 0
|   |   `-CallExpr 0x560a855f5610 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x560a855f55f8 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x560a855f55d8 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x560a8514aef0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x560a855f5650 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x560a855f5460 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x560a855f5668 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x560a855f5498 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x560a855f5680 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x560a855f54d0 <col:143> 'int' 480
|   |     `-ImplicitCastExpr 0x560a855f5698 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x560a855f55c0 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x560a855f55a8 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x560a855f5568 <col:162> 'const char [37]' lvalue "uint16_t Packet::anno_u16(int) const"
|   `-ReturnStmt 0x560a855f5968 <line:484:2, col:75>
|     `-ImplicitCastExpr 0x560a855f5950 <col:9, col:75> 'click_aliasable_uint16_t':'unsigned short' <LValueToRValue>
|       `-UnaryOperator 0x560a855f5938 <col:9, col:75> 'const click_aliasable_uint16_t':'const unsigned short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x560a855f5908 <col:10, col:75> 'const click_aliasable_uint16_t *' reinterpret_cast<const click_aliasable_uint16_t *> <BitCast>
|           `-BinaryOperator 0x560a855f58a8 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x560a855f5878 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x560a855f57f0 <col:61, col:70> 'char const[48]' lvalue ->c 0x560a855e90a0
|             |   `-CXXMemberCallExpr 0x560a855f57d0 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x560a855f57a0 <col:61> '<bound member function type>' ->xanno 0x560a855de1e8
|             |       `-CXXThisExpr 0x560a855f5790 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x560a855f5890 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x560a855f5820 <col:74> 'int' lvalue ParmVar 0x560a855e0d10 'i' 'int'
|-CXXMethodDecl 0x560a855e1058 <line:494:5, line:500:5> line:494:10 used set_anno_u16 'void (int, uint16_t)'
| |-ParmVarDecl 0x560a855e0ec8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x560a855e0f40 <col:30, col:39> col:39 used x 'uint16_t':'unsigned short'
| `-CompoundStmt 0x560a855f60c8 <col:42, line:500:5>
|   |-ParenExpr 0x560a855f5e60 <line:495:2, col:182> 'void'
|   | `-ConditionalOperator 0x560a855f5e30 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x560a855f5b10 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x560a855f5ae0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x560a855f59f0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x560a855f59d8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x560a855f5998 <col:23> 'int' lvalue ParmVar 0x560a855e0ec8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x560a855f59b8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x560a855f5ac0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x560a855f5aa8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x560a855f5a10 <col:33> 'int' lvalue ParmVar 0x560a855e0ec8 'i' 'int'
|   |   |     `-BinaryOperator 0x560a855f5a88 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x560a855f5a70 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x560a855f5a30 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x560a855de5d0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x560a855f5a50 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x560a855f5b70 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x560a855f5b50 <col:60> 'int' 0
|   |   `-CallExpr 0x560a855f5d90 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x560a855f5d78 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x560a855f5d58 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x560a8514aef0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x560a855f5dd0 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x560a855f5be0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x560a855f5de8 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x560a855f5c18 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x560a855f5e00 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x560a855f5c50 <col:143> 'int' 495
|   |     `-ImplicitCastExpr 0x560a855f5e18 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x560a855f5d40 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x560a855f5d28 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x560a855f5ce8 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u16(int, uint16_t)"
|   `-BinaryOperator 0x560a855f60a8 <line:499:2, col:66> 'click_aliasable_uint16_t':'unsigned short' lvalue '='
|     |-UnaryOperator 0x560a855f6058 <col:2, col:62> 'click_aliasable_uint16_t':'unsigned short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x560a855f6028 <col:3, col:62> 'click_aliasable_uint16_t *' reinterpret_cast<click_aliasable_uint16_t *> <BitCast>
|     |   `-BinaryOperator 0x560a855f5fd0 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x560a855f5fa0 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x560a855f5f50 <col:48, col:57> 'char [48]' lvalue ->c 0x560a855e90a0
|     |     |   `-CXXMemberCallExpr 0x560a855f5f30 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x560a855f5f00 <col:48> '<bound member function type>' ->xanno 0x560a855de388
|     |     |       `-CXXThisExpr 0x560a855f5ef0 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x560a855f5fb8 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x560a855f5f80 <col:61> 'int' lvalue ParmVar 0x560a855e0ec8 'i' 'int'
|     `-ImplicitCastExpr 0x560a855f6090 <col:66> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x560a855f6070 <col:66> 'uint16_t':'unsigned short' lvalue ParmVar 0x560a855e0f40 'x' 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x560a855e1218 <line:507:5, line:513:5> line:507:13 anno_s16 'int16_t (int) const'
| |-ParmVarDecl 0x560a855e1120 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x560a855f6828 <col:35, line:513:5>
|   |-ParenExpr 0x560a855f6538 <line:508:2, col:182> 'void'
|   | `-ConditionalOperator 0x560a855f6508 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x560a855f6260 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x560a855f6230 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x560a855f6140 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x560a855f6128 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x560a855f60e8 <col:23> 'int' lvalue ParmVar 0x560a855e1120 'i' 'int'
|   |   |   | `-IntegerLiteral 0x560a855f6108 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x560a855f6210 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x560a855f61f8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x560a855f6160 <col:33> 'int' lvalue ParmVar 0x560a855e1120 'i' 'int'
|   |   |     `-BinaryOperator 0x560a855f61d8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x560a855f61c0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x560a855f6180 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x560a855de5d0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x560a855f61a0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x560a855f62c0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x560a855f62a0 <col:60> 'int' 0
|   |   `-CallExpr 0x560a855f6468 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x560a855f6450 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x560a855f6430 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x560a8514aef0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x560a855f64a8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x560a855f6330 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x560a855f64c0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x560a855f6368 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x560a855f64d8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x560a855f63a0 <col:143> 'int' 508
|   |     `-ImplicitCastExpr 0x560a855f64f0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x560a855f6418 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x560a855f6400 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x560a855f63c0 <col:162> 'const char [36]' lvalue "int16_t Packet::anno_s16(int) const"
|   `-ReturnStmt 0x560a855f6818 <line:512:2, col:74>
|     `-ImplicitCastExpr 0x560a855f6800 <col:9, col:74> 'click_aliasable_int16_t':'short' <LValueToRValue>
|       `-UnaryOperator 0x560a855f67e8 <col:9, col:74> 'const click_aliasable_int16_t':'const short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x560a855f67b8 <col:10, col:74> 'const click_aliasable_int16_t *' reinterpret_cast<const click_aliasable_int16_t *> <BitCast>
|           `-BinaryOperator 0x560a855f6730 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x560a855f6700 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x560a855f66b0 <col:60, col:69> 'char const[48]' lvalue ->c 0x560a855e90a0
|             |   `-CXXMemberCallExpr 0x560a855f6690 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x560a855f6660 <col:60> '<bound member function type>' ->xanno 0x560a855de1e8
|             |       `-CXXThisExpr 0x560a855f6650 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x560a855f6718 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x560a855f66e0 <col:73> 'int' lvalue ParmVar 0x560a855e1120 'i' 'int'
|-CXXMethodDecl 0x560a855e1468 <line:522:5, line:528:5> line:522:10 set_anno_s16 'void (int, int16_t)'
| |-ParmVarDecl 0x560a855e12d8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x560a855e1350 <col:30, col:38> col:38 used x 'int16_t':'short'
| `-CompoundStmt 0x560a855f6f48 <col:41, line:528:5>
|   |-ParenExpr 0x560a855f6cd0 <line:523:2, col:182> 'void'
|   | `-ConditionalOperator 0x560a855f6ca0 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x560a855f69c0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x560a855f6990 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x560a855f68a0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x560a855f6888 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x560a855f6848 <col:23> 'int' lvalue ParmVar 0x560a855e12d8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x560a855f6868 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x560a855f6970 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x560a855f6958 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x560a855f68c0 <col:33> 'int' lvalue ParmVar 0x560a855e12d8 'i' 'int'
|   |   |     `-BinaryOperator 0x560a855f6938 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x560a855f6920 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x560a855f68e0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x560a855de5d0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x560a855f6900 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x560a855f6a20 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x560a855f6a00 <col:60> 'int' 0
|   |   `-CallExpr 0x560a855f6c00 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x560a855f6be8 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x560a855f6bc8 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x560a8514aef0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x560a855f6c40 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x560a855f6a90 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x560a855f6c58 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x560a855f6ac8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x560a855f6c70 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x560a855f6b00 <col:143> 'int' 523
|   |     `-ImplicitCastExpr 0x560a855f6c88 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x560a855f6bb0 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x560a855f6b98 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x560a855f6b58 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s16(int, int16_t)"
|   `-BinaryOperator 0x560a855f6f28 <line:527:2, col:65> 'click_aliasable_int16_t':'short' lvalue '='
|     |-UnaryOperator 0x560a855f6ed8 <col:2, col:61> 'click_aliasable_int16_t':'short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x560a855f6ea8 <col:3, col:61> 'click_aliasable_int16_t *' reinterpret_cast<click_aliasable_int16_t *> <BitCast>
|     |   `-BinaryOperator 0x560a855f6e50 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x560a855f6e10 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x560a855f6dc0 <col:47, col:56> 'char [48]' lvalue ->c 0x560a855e90a0
|     |     |   `-CXXMemberCallExpr 0x560a855f6da0 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x560a855f6d70 <col:47> '<bound member function type>' ->xanno 0x560a855de388
|     |     |       `-CXXThisExpr 0x560a855f6d60 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x560a855f6e28 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x560a855f6df0 <col:60> 'int' lvalue ParmVar 0x560a855e12d8 'i' 'int'
|     `-ImplicitCastExpr 0x560a855f6f10 <col:65> 'int16_t':'short' <LValueToRValue>
|       `-DeclRefExpr 0x560a855f6ef0 <col:65> 'int16_t':'short' lvalue ParmVar 0x560a855e1350 'x' 'int16_t':'short'
|-CXXMethodDecl 0x560a855e1628 <line:535:5, line:541:5> line:535:14 used anno_u32 'uint32_t (int) const'
| |-ParmVarDecl 0x560a855e1530 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x560a855f7618 <col:36, line:541:5>
|   |-ParenExpr 0x560a855f73b8 <line:536:2, col:182> 'void'
|   | `-ConditionalOperator 0x560a855f7388 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x560a855f70e0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x560a855f70b0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x560a855f6fc0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x560a855f6fa8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x560a855f6f68 <col:23> 'int' lvalue ParmVar 0x560a855e1530 'i' 'int'
|   |   |   | `-IntegerLiteral 0x560a855f6f88 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x560a855f7090 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x560a855f7078 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x560a855f6fe0 <col:33> 'int' lvalue ParmVar 0x560a855e1530 'i' 'int'
|   |   |     `-BinaryOperator 0x560a855f7058 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x560a855f7040 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x560a855f7000 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x560a855de5d0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x560a855f7020 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x560a855f7140 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x560a855f7120 <col:60> 'int' 0
|   |   `-CallExpr 0x560a855f72e8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x560a855f72d0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x560a855f72b0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x560a8514aef0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x560a855f7328 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x560a855f71b0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x560a855f7340 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x560a855f71e8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x560a855f7358 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x560a855f7220 <col:143> 'int' 536
|   |     `-ImplicitCastExpr 0x560a855f7370 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x560a855f7298 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x560a855f7280 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x560a855f7240 <col:162> 'const char [37]' lvalue "uint32_t Packet::anno_u32(int) const"
|   `-ReturnStmt 0x560a855f7608 <line:540:2, col:75>
|     `-ImplicitCastExpr 0x560a855f75f0 <col:9, col:75> 'click_aliasable_uint32_t':'unsigned int' <LValueToRValue>
|       `-UnaryOperator 0x560a855f75d8 <col:9, col:75> 'const click_aliasable_uint32_t':'const unsigned int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x560a855f75a8 <col:10, col:75> 'const click_aliasable_uint32_t *' reinterpret_cast<const click_aliasable_uint32_t *> <BitCast>
|           `-BinaryOperator 0x560a855f7550 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x560a855f7520 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x560a855f74d0 <col:61, col:70> 'char const[48]' lvalue ->c 0x560a855e90a0
|             |   `-CXXMemberCallExpr 0x560a855f74b0 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x560a855f7480 <col:61> '<bound member function type>' ->xanno 0x560a855de1e8
|             |       `-CXXThisExpr 0x560a855f7470 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x560a855f7538 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x560a855f7500 <col:74> 'int' lvalue ParmVar 0x560a855e1530 'i' 'int'
|-CXXMethodDecl 0x560a855e17f8 <line:550:5, col:75> col:45 used set_anno_u32 'void (int, uint32_t)'
| |-ParmVarDecl 0x560a855e16e8 <col:58, col:62> col:62 i 'int'
| |-ParmVarDecl 0x560a855e1760 <col:65, col:74> col:74 x 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x560a855e18a8 <col:20>
| `-OptimizeNoneAttr 0x560a855e1900 <col:30>
|-CXXMethodDecl 0x560a855e1a38 <line:556:5, line:562:5> line:556:13 used anno_s32 'int32_t (int) const'
| |-ParmVarDecl 0x560a855e1940 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x560a855f7ce8 <col:35, line:562:5>
|   |-ParenExpr 0x560a855f7a88 <line:557:2, col:182> 'void'
|   | `-ConditionalOperator 0x560a855f7a58 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x560a855f77b0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x560a855f7780 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x560a855f7690 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x560a855f7678 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x560a855f7638 <col:23> 'int' lvalue ParmVar 0x560a855e1940 'i' 'int'
|   |   |   | `-IntegerLiteral 0x560a855f7658 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x560a855f7760 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x560a855f7748 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x560a855f76b0 <col:33> 'int' lvalue ParmVar 0x560a855e1940 'i' 'int'
|   |   |     `-BinaryOperator 0x560a855f7728 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x560a855f7710 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x560a855f76d0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x560a855de5d0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x560a855f76f0 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x560a855f7810 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x560a855f77f0 <col:60> 'int' 0
|   |   `-CallExpr 0x560a855f79b8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x560a855f79a0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x560a855f7980 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x560a8514aef0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x560a855f79f8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x560a855f7880 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x560a855f7a10 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x560a855f78b8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x560a855f7a28 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x560a855f78f0 <col:143> 'int' 557
|   |     `-ImplicitCastExpr 0x560a855f7a40 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x560a855f7968 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x560a855f7950 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x560a855f7910 <col:162> 'const char [36]' lvalue "int32_t Packet::anno_s32(int) const"
|   `-ReturnStmt 0x560a855f7cd8 <line:561:2, col:74>
|     `-ImplicitCastExpr 0x560a855f7cc0 <col:9, col:74> 'click_aliasable_int32_t':'int' <LValueToRValue>
|       `-UnaryOperator 0x560a855f7ca8 <col:9, col:74> 'const click_aliasable_int32_t':'const int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x560a855f7c78 <col:10, col:74> 'const click_aliasable_int32_t *' reinterpret_cast<const click_aliasable_int32_t *> <BitCast>
|           `-BinaryOperator 0x560a855f7c20 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x560a855f7bf0 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x560a855f7ba0 <col:60, col:69> 'char const[48]' lvalue ->c 0x560a855e90a0
|             |   `-CXXMemberCallExpr 0x560a855f7b80 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x560a855f7b50 <col:60> '<bound member function type>' ->xanno 0x560a855de1e8
|             |       `-CXXThisExpr 0x560a855f7b40 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x560a855f7c08 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x560a855f7bd0 <col:73> 'int' lvalue ParmVar 0x560a855e1940 'i' 'int'
|-CXXMethodDecl 0x560a855e1c48 <line:571:5, line:577:5> line:571:10 used set_anno_s32 'void (int, int32_t)'
| |-ParmVarDecl 0x560a855e1af8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x560a855e1b70 <col:30, col:38> col:38 used x 'int32_t':'int'
| `-CompoundStmt 0x560a855f83c8 <col:41, line:577:5>
|   |-ParenExpr 0x560a855f8158 <line:572:2, col:182> 'void'
|   | `-ConditionalOperator 0x560a855f8128 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x560a855f7e80 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x560a855f7e50 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x560a855f7d60 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x560a855f7d48 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x560a855f7d08 <col:23> 'int' lvalue ParmVar 0x560a855e1af8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x560a855f7d28 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x560a855f7e30 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x560a855f7e18 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x560a855f7d80 <col:33> 'int' lvalue ParmVar 0x560a855e1af8 'i' 'int'
|   |   |     `-BinaryOperator 0x560a855f7df8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x560a855f7de0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x560a855f7da0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x560a855de5d0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x560a855f7dc0 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x560a855f7ee0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x560a855f7ec0 <col:60> 'int' 0
|   |   `-CallExpr 0x560a855f8088 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x560a855f8070 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x560a855f8050 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x560a8514aef0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x560a855f80c8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x560a855f7f50 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x560a855f80e0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x560a855f7f88 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x560a855f80f8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x560a855f7fc0 <col:143> 'int' 572
|   |     `-ImplicitCastExpr 0x560a855f8110 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x560a855f8038 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x560a855f8020 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x560a855f7fe0 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s32(int, int32_t)"
|   `-BinaryOperator 0x560a855f83a8 <line:576:2, col:65> 'click_aliasable_int32_t':'int' lvalue '='
|     |-UnaryOperator 0x560a855f8358 <col:2, col:61> 'click_aliasable_int32_t':'int' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x560a855f8328 <col:3, col:61> 'click_aliasable_int32_t *' reinterpret_cast<click_aliasable_int32_t *> <BitCast>
|     |   `-BinaryOperator 0x560a855f82c8 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x560a855f8298 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x560a855f8248 <col:47, col:56> 'char [48]' lvalue ->c 0x560a855e90a0
|     |     |   `-CXXMemberCallExpr 0x560a855f8228 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x560a855f81f8 <col:47> '<bound member function type>' ->xanno 0x560a855de388
|     |     |       `-CXXThisExpr 0x560a855f81e8 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x560a855f82b0 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x560a855f8278 <col:60> 'int' lvalue ParmVar 0x560a855e1af8 'i' 'int'
|     `-ImplicitCastExpr 0x560a855f8390 <col:65> 'int32_t':'int' <LValueToRValue>
|       `-DeclRefExpr 0x560a855f8370 <col:65> 'int32_t':'int' lvalue ParmVar 0x560a855e1b70 'x' 'int32_t':'int'
|-CXXMethodDecl 0x560a855e1e08 <line:585:5, line:591:5> line:585:14 used anno_u64 'uint64_t (int) const'
| |-ParmVarDecl 0x560a855e1d10 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x560a855f8af8 <col:36, line:591:5>
|   |-ParenExpr 0x560a855f8838 <line:586:2, col:182> 'void'
|   | `-ConditionalOperator 0x560a855f8808 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x560a855f8560 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x560a855f8530 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x560a855f8440 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x560a855f8428 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x560a855f83e8 <col:23> 'int' lvalue ParmVar 0x560a855e1d10 'i' 'int'
|   |   |   | `-IntegerLiteral 0x560a855f8408 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x560a855f8510 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x560a855f84f8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x560a855f8460 <col:33> 'int' lvalue ParmVar 0x560a855e1d10 'i' 'int'
|   |   |     `-BinaryOperator 0x560a855f84d8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x560a855f84c0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x560a855f8480 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x560a855de5d0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x560a855f84a0 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x560a855f85c0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x560a855f85a0 <col:60> 'int' 0
|   |   `-CallExpr 0x560a855f8768 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x560a855f8750 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x560a855f8730 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x560a8514aef0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x560a855f87a8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x560a855f8630 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x560a855f87c0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x560a855f8668 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x560a855f87d8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x560a855f86a0 <col:143> 'int' 586
|   |     `-ImplicitCastExpr 0x560a855f87f0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x560a855f8718 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x560a855f8700 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x560a855f86c0 <col:162> 'const char [37]' lvalue "uint64_t Packet::anno_u64(int) const"
|   `-ReturnStmt 0x560a855f8ae8 <line:590:2, col:75>
|     `-ImplicitCastExpr 0x560a855f8ad0 <col:9, col:75> 'click_aliasable_uint64_t':'unsigned long' <LValueToRValue>
|       `-UnaryOperator 0x560a855f8ab8 <col:9, col:75> 'const click_aliasable_uint64_t':'const unsigned long' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x560a855f8a88 <col:10, col:75> 'const click_aliasable_uint64_t *' reinterpret_cast<const click_aliasable_uint64_t *> <BitCast>
|           `-BinaryOperator 0x560a855f8a00 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x560a855f89d0 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x560a855f8980 <col:61, col:70> 'char const[48]' lvalue ->c 0x560a855e90a0
|             |   `-CXXMemberCallExpr 0x560a855f8960 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x560a855f8930 <col:61> '<bound member function type>' ->xanno 0x560a855de1e8
|             |       `-CXXThisExpr 0x560a855f8920 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x560a855f89e8 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x560a855f89b0 <col:74> 'int' lvalue ParmVar 0x560a855e1d10 'i' 'int'
|-CXXMethodDecl 0x560a855e2058 <line:600:5, line:606:5> line:600:10 used set_anno_u64 'void (int, uint64_t)'
| |-ParmVarDecl 0x560a855e1ec8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x560a855e1f40 <col:30, col:39> col:39 used x 'uint64_t':'unsigned long'
| `-CompoundStmt 0x560a855f91d8 <col:42, line:606:5>
|   |-ParenExpr 0x560a855f8f68 <line:601:2, col:182> 'void'
|   | `-ConditionalOperator 0x560a855f8f38 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x560a855f8c90 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x560a855f8c60 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x560a855f8b70 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x560a855f8b58 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x560a855f8b18 <col:23> 'int' lvalue ParmVar 0x560a855e1ec8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x560a855f8b38 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x560a855f8c40 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x560a855f8c28 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x560a855f8b90 <col:33> 'int' lvalue ParmVar 0x560a855e1ec8 'i' 'int'
|   |   |     `-BinaryOperator 0x560a855f8c08 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x560a855f8bf0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x560a855f8bb0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x560a855de5d0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x560a855f8bd0 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x560a855f8cf0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x560a855f8cd0 <col:60> 'int' 0
|   |   `-CallExpr 0x560a855f8e98 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x560a855f8e80 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x560a855f8e60 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x560a8514aef0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x560a855f8ed8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x560a855f8d60 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x560a855f8ef0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x560a855f8d98 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x560a855f8f08 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x560a855f8dd0 <col:143> 'int' 601
|   |     `-ImplicitCastExpr 0x560a855f8f20 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x560a855f8e48 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x560a855f8e30 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x560a855f8df0 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u64(int, uint64_t)"
|   `-BinaryOperator 0x560a855f91b8 <line:605:2, col:66> 'click_aliasable_uint64_t':'unsigned long' lvalue '='
|     |-UnaryOperator 0x560a855f9168 <col:2, col:62> 'click_aliasable_uint64_t':'unsigned long' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x560a855f9138 <col:3, col:62> 'click_aliasable_uint64_t *' reinterpret_cast<click_aliasable_uint64_t *> <BitCast>
|     |   `-BinaryOperator 0x560a855f90d8 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x560a855f90a8 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x560a855f9058 <col:48, col:57> 'char [48]' lvalue ->c 0x560a855e90a0
|     |     |   `-CXXMemberCallExpr 0x560a855f9038 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x560a855f9008 <col:48> '<bound member function type>' ->xanno 0x560a855de388
|     |     |       `-CXXThisExpr 0x560a855f8ff8 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x560a855f90c0 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x560a855f9088 <col:61> 'int' lvalue ParmVar 0x560a855e1ec8 'i' 'int'
|     `-ImplicitCastExpr 0x560a855f91a0 <col:66> 'uint64_t':'unsigned long' <LValueToRValue>
|       `-DeclRefExpr 0x560a855f9180 <col:66> 'uint64_t':'unsigned long' lvalue ParmVar 0x560a855e1f40 'x' 'uint64_t':'unsigned long'
|-CXXMethodDecl 0x560a855e21f0 <line:614:5, line:620:5> line:614:11 anno_ptr 'void *(int) const'
| |-ParmVarDecl 0x560a855e2120 <col:20, col:24> col:24 used i 'int'
| `-CompoundStmt 0x560a855f9a48 <col:33, line:620:5>
|   |-ParenExpr 0x560a855f97c0 <line:615:2, col:220> 'void'
|   | `-ConditionalOperator 0x560a855f9790 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x560a855f93e0 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x560a855f93b0 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x560a855f9250 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x560a855f9238 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x560a855f91f8 <col:23> 'int' lvalue ParmVar 0x560a855e2120 'i' 'int'
|   |   |   | `-IntegerLiteral 0x560a855f9218 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x560a855f9390 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x560a855f9378 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x560a855f9270 <col:33> 'int' lvalue ParmVar 0x560a855e2120 'i' 'int'
|   |   |     `-BinaryOperator 0x560a855f9358 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x560a855f9340 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x560a855f9290 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x560a855de5d0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x560a855f9318 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x560a855f9300 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x560a855f92c8 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x560a855f9440 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x560a855f9420 <col:79> 'int' 0
|   |   `-CallExpr 0x560a855f96f0 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x560a855f96d8 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x560a855f96b8 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x560a8514aef0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x560a855f9730 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x560a855f9528 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x560a855f9748 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x560a855f9570 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x560a855f9760 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x560a855f95a8 <col:181> 'int' 615
|   |     `-ImplicitCastExpr 0x560a855f9778 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x560a855f96a0 <col:186, col:200> 'const char [34]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x560a855f9688 <col:200> 'const char [34]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x560a855f9648 <col:200> 'const char [34]' lvalue "void *Packet::anno_ptr(int) const"
|   `-ReturnStmt 0x560a855f9a38 <line:619:2, col:81>
|     `-ImplicitCastExpr 0x560a855f9a20 <col:9, col:81> 'click_aliasable_void_pointer_t':'void *' <LValueToRValue>
|       `-UnaryOperator 0x560a855f9a08 <col:9, col:81> 'const click_aliasable_void_pointer_t':'void *const' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x560a855f99d8 <col:10, col:81> 'const click_aliasable_void_pointer_t *' reinterpret_cast<const click_aliasable_void_pointer_t *> <BitCast>
|           `-BinaryOperator 0x560a855f9950 <col:67, col:80> 'const char *' '+'
|             |-ImplicitCastExpr 0x560a855f9920 <col:67, col:76> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x560a855f98d0 <col:67, col:76> 'char const[48]' lvalue ->c 0x560a855e90a0
|             |   `-CXXMemberCallExpr 0x560a855f98b0 <col:67, col:73> 'const Packet::Anno *'
|             |     `-MemberExpr 0x560a855f9880 <col:67> '<bound member function type>' ->xanno 0x560a855de1e8
|             |       `-CXXThisExpr 0x560a855f9870 <col:67> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x560a855f9938 <col:80> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x560a855f9900 <col:80> 'int' lvalue ParmVar 0x560a855e2120 'i' 'int'
|-CXXMethodDecl 0x560a855e2408 <line:629:5, line:635:5> line:629:10 set_anno_ptr 'void (int, const void *)'
| |-ParmVarDecl 0x560a855e22b0 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x560a855e2330 <col:30, col:42> col:42 used x 'const void *'
| `-CompoundStmt 0x560a855fa270 <col:45, line:635:5>
|   |-ParenExpr 0x560a855f9fb8 <line:630:2, col:220> 'void'
|   | `-ConditionalOperator 0x560a855f9f88 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x560a855f9c50 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x560a855f9c20 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x560a855f9ac0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x560a855f9aa8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x560a855f9a68 <col:23> 'int' lvalue ParmVar 0x560a855e22b0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x560a855f9a88 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x560a855f9c00 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x560a855f9be8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x560a855f9ae0 <col:33> 'int' lvalue ParmVar 0x560a855e22b0 'i' 'int'
|   |   |     `-BinaryOperator 0x560a855f9bc8 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x560a855f9bb0 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x560a855f9b00 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x560a855de5d0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x560a855f9b88 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x560a855f9b70 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x560a855f9b38 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x560a855f9cb0 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x560a855f9c90 <col:79> 'int' 0
|   |   `-CallExpr 0x560a855f9ee8 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x560a855f9ed0 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x560a855f9eb0 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x560a8514aef0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x560a855f9f28 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x560a855f9d20 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x560a855f9f40 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x560a855f9d68 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x560a855f9f58 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x560a855f9da0 <col:181> 'int' 630
|   |     `-ImplicitCastExpr 0x560a855f9f70 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x560a855f9e98 <col:186, col:200> 'const char [45]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x560a855f9e80 <col:200> 'const char [45]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x560a855f9e38 <col:200> 'const char [45]' lvalue "void Packet::set_anno_ptr(int, const void *)"
|   `-BinaryOperator 0x560a855fa250 <line:634:2, col:92> 'click_aliasable_void_pointer_t':'void *' lvalue '='
|     |-UnaryOperator 0x560a855fa1b8 <col:2, col:68> 'click_aliasable_void_pointer_t':'void *' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x560a855fa188 <col:3, col:68> 'click_aliasable_void_pointer_t *' reinterpret_cast<click_aliasable_void_pointer_t *> <BitCast>
|     |   `-BinaryOperator 0x560a855fa128 <col:54, col:67> 'char *' '+'
|     |     |-ImplicitCastExpr 0x560a855fa0f8 <col:54, col:63> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x560a855fa0a8 <col:54, col:63> 'char [48]' lvalue ->c 0x560a855e90a0
|     |     |   `-CXXMemberCallExpr 0x560a855fa088 <col:54, col:60> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x560a855fa058 <col:54> '<bound member function type>' ->xanno 0x560a855de388
|     |     |       `-CXXThisExpr 0x560a855fa048 <col:54> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x560a855fa110 <col:67> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x560a855fa0d8 <col:67> 'int' lvalue ParmVar 0x560a855e22b0 'i' 'int'
|     `-CXXConstCastExpr 0x560a855fa220 <col:72, col:92> 'void *' const_cast<void *> <NoOp>
|       `-ImplicitCastExpr 0x560a855fa208 <col:91> 'const void *' <LValueToRValue> part_of_explicit_cast
|         `-DeclRefExpr 0x560a855fa1d0 <col:91> 'const void *' lvalue ParmVar 0x560a855e2330 'x' 'const void *'
|-CXXMethodDecl 0x560a855e24d8 <line:638:5, line:640:5> line:638:20 data_packet 'Packet *()' inline
| `-CompoundStmt 0x560a855fa2f8 <col:34, line:640:5>
|   `-ReturnStmt 0x560a855fa2e8 <line:639:9, col:16>
|     `-ImplicitCastExpr 0x560a855fa2d0 <col:16> 'Packet *' <LValueToRValue>
|       `-MemberExpr 0x560a855fa2a0 <col:16> 'Packet *' lvalue ->_data_packet 0x560a855e9c58
|         `-CXXThisExpr 0x560a855fa290 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x560a855e2618 <line:643:5, col:50> col:17 used clear_annotations 'void (bool)' inline
| `-ParmVarDecl 0x560a855e2588 <col:35, col:46> col:40 all 'bool' cinit
|   `-CXXBoolLiteralExpr 0x560a855f33b8 <col:46> 'bool' true
|-CXXMethodDecl 0x560a855e2798 <line:644:5, col:48> col:17 copy_annotations 'void (const Packet *)' inline
| `-ParmVarDecl 0x560a855e26d0 <col:34, col:47> col:48 'const Packet *'
|-EnumDecl 0x560a855e2840 <line:648:5, line:660:5> line:648:5
| |-DeprecatedAttr 0x560a855e2ff0 <line:660:22> "" ""
| |-EnumConstantDecl 0x560a855e2940 <line:649:2, col:21> col:2 DEFAULT_HEADROOM 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x560a855e3060 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x560a855e2920 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 28
| |     `-DeclRefExpr 0x560a855e2900 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x560a855d7aa0 'default_headroom' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x560a855e29d0 <line:650:2, col:22> col:2 MIN_BUFFER_LENGTH 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x560a855e3078 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x560a855e29b0 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 64
| |     `-DeclRefExpr 0x560a855e2990 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x560a855d7b30 'min_buffer_length' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x560a855e2a60 <line:651:2, col:21> col:2 referenced addr_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x560a855e3090 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x560a855e2a40 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x560a855e2a20 <col:21> 'int' 0
| |-EnumConstantDecl 0x560a855e2af0 <line:652:2, col:19> col:2 referenced addr_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x560a855e30a8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x560a855e2ad0 <col:19> 'int' Int: 16
| |     `-IntegerLiteral 0x560a855e2ab0 <col:19> 'int' 16
| |-EnumConstantDecl 0x560a855e2b80 <line:653:2, col:21> col:2 referenced user_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x560a855e30c0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x560a855e2b60 <col:21> 'int' Int: 16
| |     `-IntegerLiteral 0x560a855e2b40 <col:21> 'int' 16
| |-EnumConstantDecl 0x560a855e2c10 <line:654:2, col:19> col:2 referenced user_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x560a855e30d8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x560a855e2bf0 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x560a855e2bd0 <col:19> 'int' 32
| |-EnumConstantDecl 0x560a855e2ca0 <line:655:2, col:19> col:2 ADDR_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x560a855e30f0 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x560a855e2c80 <col:19> 'int' Int: 16
| |     `-DeclRefExpr 0x560a855e2c60 <col:19> 'int' EnumConstant 0x560a855e2af0 'addr_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x560a855e2d30 <line:656:2, col:19> col:2 referenced USER_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x560a855e3108 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x560a855e2d10 <col:19> 'int' Int: 32
| |     `-DeclRefExpr 0x560a855e2cf0 <col:19> 'int' EnumConstant 0x560a855e2c10 'user_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x560a855e2e00 <line:657:2, col:40> col:2 USER_ANNO_U16_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x560a855e3120 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x560a855e2de0 <col:23, col:40> 'int' Int: 16
| |     `-BinaryOperator 0x560a855e2dc0 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x560a855e2d80 <col:23> 'int' EnumConstant 0x560a855e2d30 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x560a855e2da0 <col:40> 'int' 2
| |-EnumConstantDecl 0x560a855e2ed0 <line:658:2, col:40> col:2 USER_ANNO_U32_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x560a855e3138 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x560a855e2eb0 <col:23, col:40> 'int' Int: 8
| |     `-BinaryOperator 0x560a855e2e90 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x560a855e2e50 <col:23> 'int' EnumConstant 0x560a855e2d30 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x560a855e2e70 <col:40> 'int' 4
| `-EnumConstantDecl 0x560a855e2fa0 <line:659:2, col:40> col:2 USER_ANNO_U64_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|   `-ImplicitCastExpr 0x560a855e3150 <col:23, col:40> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x560a855e2f80 <col:23, col:40> 'int' Int: 4
|       `-BinaryOperator 0x560a855e2f60 <col:23, col:40> 'int' '/'
|         |-DeclRefExpr 0x560a855e2f20 <col:23> 'int' EnumConstant 0x560a855e2d30 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|         `-IntegerLiteral 0x560a855e2f40 <col:40> 'int' 8
|-CXXMethodDecl 0x560a855e3190 <line:661:5, col:79> col:33 buffer_data 'const unsigned char *() const' inline
| `-DeprecatedAttr 0x560a855e3230 <col:68> "" ""
|-CXXMethodDecl 0x560a855e32c8 <line:662:5, col:56> col:18 addr_anno 'void *()' inline
| `-DeprecatedAttr 0x560a855e3368 <col:45> "" ""
|-CXXMethodDecl 0x560a855e3400 <line:663:5, col:68> col:24 addr_anno 'const void *() const' inline
| `-DeprecatedAttr 0x560a855e34a0 <col:57> "" ""
|-CXXMethodDecl 0x560a855e3538 <line:664:5, col:56> col:18 user_anno 'void *()' inline
| `-DeprecatedAttr 0x560a855e35d8 <col:45> "" ""
|-CXXMethodDecl 0x560a855e3670 <line:665:5, col:68> col:24 user_anno 'const void *() const' inline
| `-DeprecatedAttr 0x560a855e3710 <col:57> "" ""
|-CXXMethodDecl 0x560a855e37a0 <line:666:5, col:62> col:21 user_anno_u8 'uint8_t *()' inline
| `-DeprecatedAttr 0x560a855e3840 <col:51> "" ""
|-CXXMethodDecl 0x560a855e38d0 <line:667:5, col:74> col:27 user_anno_u8 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x560a855e3970 <col:63> "" ""
|-CXXMethodDecl 0x560a855e3a00 <line:668:5, col:64> col:22 user_anno_u32 'uint32_t *()' inline
| `-DeprecatedAttr 0x560a855e3aa0 <col:53> "" ""
|-CXXMethodDecl 0x560a855e3b30 <line:669:5, col:76> col:28 user_anno_u32 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x560a855e3bd0 <col:65> "" ""
|-CXXMethodDecl 0x560a855e3ce8 <line:670:5, col:72> col:20 user_anno_u8 'uint8_t (int) const' inline
| |-ParmVarDecl 0x560a855e3c58 <col:33, col:37> col:37 i 'int'
| `-DeprecatedAttr 0x560a855e3d90 <col:61> "" ""
|-CXXMethodDecl 0x560a855e3f28 <line:671:5, col:78> col:17 set_user_anno_u8 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x560a855e3e18 <col:34, col:38> col:38 i 'int'
| |-ParmVarDecl 0x560a855e3e90 <col:41, col:49> col:49 v 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x560a855e3fd8 <col:67> "" ""
|-CXXMethodDecl 0x560a855e40f0 <line:672:5, col:74> col:21 user_anno_u16 'uint16_t (int) const' inline
| |-ParmVarDecl 0x560a855e4060 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x560a855e4198 <col:63> "" ""
|-CXXMethodDecl 0x560a855e4330 <line:673:5, col:80> col:17 set_user_anno_u16 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x560a855e4220 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x560a855e4298 <col:42, col:51> col:51 v 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x560a855e43e0 <col:69> "" ""
|-CXXMethodDecl 0x560a855e44f8 <line:674:5, col:74> col:21 user_anno_u32 'uint32_t (int) const' inline
| |-ParmVarDecl 0x560a855e4468 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x560a855e45a0 <col:63> "" ""
|-CXXMethodDecl 0x560a855e6c78 <line:675:5, col:80> col:17 set_user_anno_u32 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x560a855e6b68 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x560a855e6be0 <col:42, col:51> col:51 v 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x560a855e6d28 <col:69> "" ""
|-CXXMethodDecl 0x560a855e6e40 <line:676:5, col:73> col:20 user_anno_s32 'int32_t (int) const' inline
| |-ParmVarDecl 0x560a855e6db0 <col:34, col:38> col:38 i 'int'
| `-DeprecatedAttr 0x560a855e6ee8 <col:62> "" ""
|-CXXMethodDecl 0x560a855e7080 <line:677:5, col:79> col:17 set_user_anno_s32 'void (int, int32_t)' inline
| |-ParmVarDecl 0x560a855e6f70 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x560a855e6fe8 <col:42, col:50> col:50 v 'int32_t':'int'
| `-DeprecatedAttr 0x560a855e7130 <col:68> "" ""
|-CXXMethodDecl 0x560a855e7248 <line:679:5, col:74> col:21 user_anno_u64 'uint64_t (int) const' inline
| |-ParmVarDecl 0x560a855e71b8 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x560a855e72f0 <col:63> "" ""
|-CXXMethodDecl 0x560a855e7488 <line:680:5, col:80> col:17 set_user_anno_u64 'void (int, uint64_t)' inline
| |-ParmVarDecl 0x560a855e7378 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x560a855e73f0 <col:42, col:51> col:51 v 'uint64_t':'unsigned long'
| `-DeprecatedAttr 0x560a855e7538 <col:69> "" ""
|-CXXMethodDecl 0x560a855e75c8 <line:682:5, col:75> col:27 all_user_anno 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x560a855e7668 <col:64> "" ""
|-CXXMethodDecl 0x560a855e76f8 <line:683:5, col:63> col:21 all_user_anno 'uint8_t *()' inline
| `-DeprecatedAttr 0x560a855e7798 <col:52> "" ""
|-CXXMethodDecl 0x560a855e7828 <line:684:5, col:78> col:28 all_user_anno_u 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x560a855e78c8 <col:67> "" ""
|-CXXMethodDecl 0x560a855e7958 <line:685:5, col:66> col:22 all_user_anno_u 'uint32_t *()' inline
| `-DeprecatedAttr 0x560a855e79f8 <col:55> "" ""
|-CXXMethodDecl 0x560a855e7b10 <line:686:5, col:69> col:20 user_anno_c 'uint8_t (int) const' inline
| |-ParmVarDecl 0x560a855e7a80 <col:32> col:35 'int'
| `-DeprecatedAttr 0x560a855e7bb8 <col:58> "" ""
|-CXXMethodDecl 0x560a855e7d50 <line:687:5, col:73> col:17 set_user_anno_c 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x560a855e7c40 <col:33> col:36 'int'
| |-ParmVarDecl 0x560a855e7cb8 <col:38> col:45 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x560a855e7e00 <col:62> "" ""
|-CXXMethodDecl 0x560a855e7f18 <line:688:5, col:69> col:20 user_anno_s 'int16_t (int) const' inline
| |-ParmVarDecl 0x560a855e7e88 <col:32> col:35 'int'
| `-DeprecatedAttr 0x560a855e7fc0 <col:58> "" ""
|-CXXMethodDecl 0x560a855e8158 <line:689:5, col:73> col:17 set_user_anno_s 'void (int, int16_t)' inline
| |-ParmVarDecl 0x560a855e8048 <col:33> col:36 'int'
| |-ParmVarDecl 0x560a855e80c0 <col:38> col:45 'int16_t':'short'
| `-DeprecatedAttr 0x560a855e8208 <col:62> "" ""
|-CXXMethodDecl 0x560a855e8320 <line:690:5, col:71> col:21 user_anno_us 'uint16_t (int) const' inline
| |-ParmVarDecl 0x560a855e8290 <col:34> col:37 'int'
| `-DeprecatedAttr 0x560a855e83c8 <col:60> "" ""
|-CXXMethodDecl 0x560a855e8560 <line:691:5, col:75> col:17 set_user_anno_us 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x560a855e8450 <col:34> col:37 'int'
| |-ParmVarDecl 0x560a855e84c8 <col:39> col:47 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x560a855e8610 <col:64> "" ""
|-CXXMethodDecl 0x560a855e8728 <line:692:5, col:69> col:20 user_anno_i 'int32_t (int) const' inline
| |-ParmVarDecl 0x560a855e8698 <col:32> col:35 'int'
| `-DeprecatedAttr 0x560a855e87d0 <col:58> "" ""
|-CXXMethodDecl 0x560a855e8968 <line:693:5, col:73> col:17 set_user_anno_i 'void (int, int32_t)' inline
| |-ParmVarDecl 0x560a855e8858 <col:33> col:36 'int'
| |-ParmVarDecl 0x560a855e88d0 <col:38> col:45 'int32_t':'int'
| `-DeprecatedAttr 0x560a855e8a18 <col:62> "" ""
|-CXXMethodDecl 0x560a855e8b30 <line:694:5, col:70> col:21 user_anno_u 'uint32_t (int) const' inline
| |-ParmVarDecl 0x560a855e8aa0 <col:33> col:36 'int'
| `-DeprecatedAttr 0x560a855e8bd8 <col:59> "" ""
|-CXXMethodDecl 0x560a855e8d70 <line:695:5, col:74> col:17 set_user_anno_u 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x560a855e8c60 <col:33> col:36 'int'
| |-ParmVarDecl 0x560a855e8cd8 <col:38> col:46 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x560a855e8e20 <col:63> "" ""
|-AccessSpecDecl 0x560a855e8e90 <line:698:3, col:10> col:3 private
|-CXXRecordDecl 0x560a855e8eb8 prev 0x560a855de0c0 <line:702:5, line:711:5> line:702:11 referenced union Anno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x560a855e8fb0 <col:5, col:11> col:11 implicit union Anno
| |-FieldDecl 0x560a855e90a0 <line:703:2, col:18> col:7 referenced c 'char [48]'
| |-FieldDecl 0x560a855e91c8 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
| |-FieldDecl 0x560a855e9348 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
| |-FieldDecl 0x560a855e94c8 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
| |-FieldDecl 0x560a855e9648 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
| |-CXXConstructorDecl 0x560a855fa478 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x560a855face8 <col:11>
| |-CXXDestructorDecl 0x560a855fa550 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
| |-CXXConstructorDecl 0x560a855fa688 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x560a855fa688
| | `-ParmVarDecl 0x560a855fa798 <col:11> col:11 'const Packet::Anno &'
| |-CXXConstructorDecl 0x560a855fa838 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x560a855fa838
| | `-ParmVarDecl 0x560a855fa948 <col:11> col:11 'Packet::Anno &&'
| |-CXXMethodDecl 0x560a855fd708 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| | |-ParmVarDecl 0x560a855fd818 <col:11> col:11 'const Packet::Anno &'
| | `-CompoundStmt 0x560a855fda98 <col:11>
| |   `-ReturnStmt 0x560a855fda88 <col:11>
| |     `-UnaryOperator 0x560a855fda70 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x560a855fda60 <col:11> 'Packet::Anno *' this
| `-CXXMethodDecl 0x560a855fd888 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x560a855fd888
|   `-ParmVarDecl 0x560a855fd998 <col:11> col:11 'Packet::Anno &&'
|-CXXRecordDecl 0x560a855e96b0 <line:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x560a855e97c8 <col:5, col:12> col:12 implicit struct AllAnno
| |-FieldDecl 0x560a855e9868 <line:717:2, col:7> col:7 cb 'Packet::Anno'
| |-FieldDecl 0x560a855e98d0 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
| |-FieldDecl 0x560a855e9938 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
| |-FieldDecl 0x560a855e99a0 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
| |-FieldDecl 0x560a855e9a00 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
| |-FieldDecl 0x560a855e9ac0 <line:722:2, col:34> col:7 timestamp 'char [8]'
| |-FieldDecl 0x560a855e9b20 <line:723:2, col:10> col:10 referenced next 'Packet *'
| |-FieldDecl 0x560a855e9b80 <line:724:2, col:10> col:10 referenced prev 'Packet *'
| |-CXXConstructorDecl 0x560a855fa388 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| | |-CXXCtorInitializer Field 0x560a855e9868 'cb' 'Packet::Anno'
| | | `-CXXConstructExpr 0x560a855facf8 <col:12> 'Packet::Anno' 'void () noexcept'
| | `-CompoundStmt 0x560a855fad50 <col:12>
| |-CXXConstructorDecl 0x560a855fa9b8 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x560a855fa9b8
| | `-ParmVarDecl 0x560a855faac8 <col:12> col:12 'const Packet::AllAnno &'
| |-CXXConstructorDecl 0x560a855fab68 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x560a855fab68
| | `-ParmVarDecl 0x560a855fac78 <col:12> col:12 'Packet::AllAnno &&'
| `-CXXDestructorDecl 0x560a855fcdf0 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial
|-FieldDecl 0x560a855e9bf8 <line:731:5, col:21> col:21 referenced _use_count 'atomic_uint32_t'
|-FieldDecl 0x560a855e9c58 <line:732:5, col:13> col:13 referenced _data_packet 'Packet *'
|-FieldDecl 0x560a855e9cc0 <line:734:5, col:20> col:20 referenced _head 'unsigned char *'
|-FieldDecl 0x560a855e9d28 <line:735:5, col:20> col:20 referenced _data 'unsigned char *'
|-FieldDecl 0x560a855e9d90 <line:736:5, col:20> col:20 referenced _tail 'unsigned char *'
|-FieldDecl 0x560a855e9df8 <line:737:5, col:20> col:20 referenced _end 'unsigned char *'
|-FieldDecl 0x560a855e9e58 <line:741:5, col:13> col:13 referenced _aa 'Packet::AllAnno'
|-FieldDecl 0x560a855e9eb8 <line:746:5, col:28> col:28 referenced _destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-FieldDecl 0x560a855e9f20 <line:747:5, col:11> col:11 referenced _destructor_argument 'void *'
|-CXXConstructorDecl 0x560a855e9fa8 <line:751:5, line:755:5> line:751:12 used Packet 'void ()' inline
| |-CXXCtorInitializer Field 0x560a855e9bf8 '_use_count' 'atomic_uint32_t'
| | `-CXXConstructExpr 0x560a855fa320 <col:12> 'atomic_uint32_t' 'void () noexcept'
| |-CXXCtorInitializer Field 0x560a855e9e58 '_aa' 'Packet::AllAnno'
| | `-CXXConstructExpr 0x560a855fad60 <col:12> 'Packet::AllAnno' 'void () noexcept'
| `-CompoundStmt 0x560a855fadc0 <col:21, line:755:5>
|-CXXConstructorDecl 0x560a855ea148 <line:756:5, col:27> col:5 Packet 'void (const Packet &)'
| `-ParmVarDecl 0x560a855ea088 <col:12, col:26> col:26 x 'const Packet &'
|-CXXDestructorDecl 0x560a855ea240 <line:757:5, col:13> col:5 used ~Packet 'void () noexcept'
|-CXXMethodDecl 0x560a855ea428 <line:758:5, col:38> col:13 operator= 'Packet &(const Packet &)'
| `-ParmVarDecl 0x560a855ea330 <col:23, col:37> col:37 x 'const Packet &'
|-CXXMethodDecl 0x560a855ea6f8 <line:761:5, col:74> col:10 alloc_data 'bool (uint32_t, uint32_t, uint32_t)'
| |-ParmVarDecl 0x560a855ea4e0 <col:21, col:30> col:30 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x560a855ea558 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x560a855ea5d0 <col:57, col:66> col:66 tailroom 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x560a855ea918 <line:768:5, col:95> col:17 shift_header_annotations 'void (const unsigned char *, int32_t)' inline
| |-ParmVarDecl 0x560a855ea7c8 <col:42, col:63> col:63 old_head 'const unsigned char *'
| `-ParmVarDecl 0x560a855ea840 <col:73, col:81> col:81 extra_headroom 'int32_t':'int'
|-CXXMethodDecl 0x560a855f2ef8 <line:769:5, col:109> col:21 expensive_uniqueify 'WritablePacket *(int32_t, int32_t, bool)'
| |-ParmVarDecl 0x560a855ea9d8 <col:41, col:49> col:49 extra_headroom 'int32_t':'int'
| |-ParmVarDecl 0x560a855eaa50 <col:65, col:73> col:73 extra_tailroom 'int32_t':'int'
| `-ParmVarDecl 0x560a855eaac8 <col:89, col:94> col:94 free_on_failure 'bool'
|-CXXMethodDecl 0x560a855f3050 <line:770:5, col:51> col:21 used expensive_push 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x560a855f2fc0 <col:36, col:45> col:45 nbytes 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x560a855f3198 <line:771:5, col:50> col:21 used expensive_put 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x560a855f3108 <col:35, col:44> col:44 nbytes 'uint32_t':'unsigned int'
`-FriendDecl 0x560a855f3290 <line:773:5, col:18> col:12 'class WritablePacket':'WritablePacket'

Layout: <CGRecordLayout
  LLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  NonVirtualBaseLLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class PushNullElement
         0 |   class Element (primary base)
         0 |     (Element vtable pointer)
         8 |     class Element::Port *[2] _ports
        24 |     class Element::Port [4] _inline_ports
        88 |     int [2] _nports
        96 |     class Router * _router
       104 |     int _eindex
           | [sizeof=112, dsize=108, align=8,
           |  nvsize=108, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x560a8562a0e8 <../elements/standard/nullelement.hh:70:1, line:80:1> line:70:7 class PushNullElement definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-public 'Element'
|-CXXRecordDecl 0x560a8562a248 <col:1, col:7> col:7 implicit referenced class PushNullElement
|-AccessSpecDecl 0x560a8562a2d8 <col:42, col:48> col:42 public
|-CXXConstructorDecl 0x560a8562a360 <line:72:3, col:19> col:3 PushNullElement 'void ()'
|-CXXMethodDecl 0x560a8562a460 <line:74:3, col:55> col:15 class_name 'const char *() const'
| |-Overrides: [ 0x560a85611f58 Element::class_name 'const char *() const' ]
| `-CompoundStmt 0x560a8562b038 <col:34, col:55>
|   `-ReturnStmt 0x560a8562b028 <col:36, col:43>
|     `-ImplicitCastExpr 0x560a8562b010 <col:43> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x560a8562aff0 <col:43> 'const char [9]' lvalue "PushNull"
|-CXXMethodDecl 0x560a8562a528 <line:75:3, col:54> col:15 port_count 'const char *() const'
| |-Overrides: [ 0x560a85612020 Element::port_count 'const char *() const' ]
| `-CompoundStmt 0x560a8562b098 <col:34, col:54>
|   `-ReturnStmt 0x560a8562b088 <col:36, col:43>
|     `-ImplicitCastExpr 0x560a8562b070 <col:43> 'const char *' <ArrayToPointerDecay>
|       `-DeclRefExpr 0x560a8562b050 <col:43> 'const char []' lvalue Var 0x560a856122d0 'PORTS_1_1' 'const char []'
|-CXXMethodDecl 0x560a8562a5f0 <line:76:3, col:49> col:15 processing 'const char *() const'
| |-Overrides: [ 0x560a856123e8 Element::processing 'const char *() const' ]
| `-CompoundStmt 0x560a8562b0f8 <col:34, col:49>
|   `-ReturnStmt 0x560a8562b0e8 <col:36, col:43>
|     `-ImplicitCastExpr 0x560a8562b0d0 <col:43> 'const char *' <ArrayToPointerDecay>
|       `-DeclRefExpr 0x560a8562b0b0 <col:43> 'const char []' lvalue Var 0x560a85612530 'PUSH' 'const char []'
|-CXXMethodDecl 0x560a8562a7b8 <line:78:3, col:26> col:8 push 'void (int, Packet *)'
| |-Overrides: [ 0x560a85610dc8 Element::push 'void (int, Packet *)' ]
| |-ParmVarDecl 0x560a8562a6a8 <col:13> col:16 'int'
| `-ParmVarDecl 0x560a8562a720 <col:18, col:25> col:26 'Packet *'
|-CXXConstructorDecl 0x560a8562a898 <line:70:7> col:7 implicit PushNullElement 'void (const PushNullElement &)' inline default_delete noexcept-unevaluated 0x560a8562a898
| `-ParmVarDecl 0x560a8562a9a8 <col:7> col:7 'const PushNullElement &'
|-CXXConstructorDecl 0x560a8562aa48 <col:7> col:7 implicit PushNullElement 'void (PushNullElement &&)' inline default_delete noexcept-unevaluated 0x560a8562aa48
| `-ParmVarDecl 0x560a8562ab58 <col:7> col:7 'PushNullElement &&'
|-CXXMethodDecl 0x560a8562abf8 <col:7> col:7 implicit operator= 'PushNullElement &(const PushNullElement &)' inline default_delete noexcept-unevaluated 0x560a8562abf8
| `-ParmVarDecl 0x560a8562ad08 <col:7> col:7 'const PushNullElement &'
|-CXXMethodDecl 0x560a8562ad78 <col:7> col:7 implicit operator= 'PushNullElement &(PushNullElement &&)' inline default_delete noexcept-unevaluated 0x560a8562ad78
| `-ParmVarDecl 0x560a8562ae88 <col:7> col:7 'PushNullElement &&'
`-CXXDestructorDecl 0x560a8562af10 <col:7> col:7 implicit ~PushNullElement 'void ()' inline default noexcept-unevaluated 0x560a8562af10
  `-Overrides: [ 0x560a85610af8 Element::~Element 'void () noexcept' ]

Layout: <CGRecordLayout
  LLVMType:%class.PushNullElement = type { %class.Element.base, [4 x i8] }
  NonVirtualBaseLLVMType:%class.PushNullElement.base = type { %class.Element.base }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class PullNullElement
         0 |   class Element (primary base)
         0 |     (Element vtable pointer)
         8 |     class Element::Port *[2] _ports
        24 |     class Element::Port [4] _inline_ports
        88 |     int [2] _nports
        96 |     class Router * _router
       104 |     int _eindex
           | [sizeof=112, dsize=108, align=8,
           |  nvsize=108, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x560a8562b110 <../elements/standard/nullelement.hh:96:1, line:106:1> line:96:7 class PullNullElement definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-public 'Element'
|-CXXRecordDecl 0x560a8562b268 <col:1, col:7> col:7 implicit referenced class PullNullElement
|-AccessSpecDecl 0x560a8562b2f8 <col:42, col:48> col:42 public
|-CXXConstructorDecl 0x560a8562b380 <line:98:3, col:19> col:3 PullNullElement 'void ()'
|-CXXMethodDecl 0x560a8562b480 <line:100:3, col:55> col:15 class_name 'const char *() const'
| |-Overrides: [ 0x560a85611f58 Element::class_name 'const char *() const' ]
| `-CompoundStmt 0x560a8562bfc8 <col:34, col:55>
|   `-ReturnStmt 0x560a8562bfb8 <col:36, col:43>
|     `-ImplicitCastExpr 0x560a8562bfa0 <col:43> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x560a8562bf80 <col:43> 'const char [9]' lvalue "PullNull"
|-CXXMethodDecl 0x560a8562b548 <line:101:3, col:54> col:15 port_count 'const char *() const'
| |-Overrides: [ 0x560a85612020 Element::port_count 'const char *() const' ]
| `-CompoundStmt 0x560a8562c028 <col:34, col:54>
|   `-ReturnStmt 0x560a8562c018 <col:36, col:43>
|     `-ImplicitCastExpr 0x560a8562c000 <col:43> 'const char *' <ArrayToPointerDecay>
|       `-DeclRefExpr 0x560a8562bfe0 <col:43> 'const char []' lvalue Var 0x560a856122d0 'PORTS_1_1' 'const char []'
|-CXXMethodDecl 0x560a8562b610 <line:102:3, col:49> col:15 processing 'const char *() const'
| |-Overrides: [ 0x560a856123e8 Element::processing 'const char *() const' ]
| `-CompoundStmt 0x560a8562c088 <col:34, col:49>
|   `-ReturnStmt 0x560a8562c078 <col:36, col:43>
|     `-ImplicitCastExpr 0x560a8562c060 <col:43> 'const char *' <ArrayToPointerDecay>
|       `-DeclRefExpr 0x560a8562c040 <col:43> 'const char []' lvalue Var 0x560a856125b8 'PULL' 'const char []'
|-CXXMethodDecl 0x560a8562b758 <line:104:3, col:19> col:11 pull 'Packet *(int)'
| |-Overrides: [ 0x560a85610f58 Element::pull 'Packet *(int)' ]
| `-ParmVarDecl 0x560a8562b6c8 <col:16> col:19 'int'
|-CXXConstructorDecl 0x560a8562b828 <line:96:7> col:7 implicit PullNullElement 'void (const PullNullElement &)' inline default_delete noexcept-unevaluated 0x560a8562b828
| `-ParmVarDecl 0x560a8562b938 <col:7> col:7 'const PullNullElement &'
|-CXXConstructorDecl 0x560a8562b9d8 <col:7> col:7 implicit PullNullElement 'void (PullNullElement &&)' inline default_delete noexcept-unevaluated 0x560a8562b9d8
| `-ParmVarDecl 0x560a8562bae8 <col:7> col:7 'PullNullElement &&'
|-CXXMethodDecl 0x560a8562bb88 <col:7> col:7 implicit operator= 'PullNullElement &(const PullNullElement &)' inline default_delete noexcept-unevaluated 0x560a8562bb88
| `-ParmVarDecl 0x560a8562bc98 <col:7> col:7 'const PullNullElement &'
|-CXXMethodDecl 0x560a8562bd08 <col:7> col:7 implicit operator= 'PullNullElement &(PullNullElement &&)' inline default_delete noexcept-unevaluated 0x560a8562bd08
| `-ParmVarDecl 0x560a8562be18 <col:7> col:7 'PullNullElement &&'
`-CXXDestructorDecl 0x560a8562bea0 <col:7> col:7 implicit ~PullNullElement 'void ()' inline default noexcept-unevaluated 0x560a8562bea0
  `-Overrides: [ 0x560a85610af8 Element::~Element 'void () noexcept' ]

Layout: <CGRecordLayout
  LLVMType:%class.PullNullElement = type { %class.Element.base, [4 x i8] }
  NonVirtualBaseLLVMType:%class.PullNullElement.base = type { %class.Element.base }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct String::rep_t
         0 |   const char * data
         8 |   int length
        16 |   struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class String
         0 |   struct String::rep_t _r
         0 |     const char * data
         8 |     int length
        16 |     struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x560a853e46c0 <../dummy_inc/click/string.hh:189:5, line:198:5> line:189:12 referenced struct memo_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x560a853e47d8 <col:5, col:12> col:12 implicit struct memo_t
|-FieldDecl 0x560a853e4878 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
|-FieldDecl 0x560a853e48d8 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
|-FieldDecl 0x560a853e4938 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
`-FieldDecl 0x560a853e49e8 <line:197:2, col:18> col:7 real_data 'char [8]'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  NonVirtualBaseLLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x560a853e4cf0 <../dummy_inc/click/string.hh:204:5, line:208:5> line:204:12 referenced struct rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x560a853e4e08 <col:5, col:12> col:12 implicit struct rep_t
|-FieldDecl 0x560a853e4eb0 <line:205:2, col:14> col:14 referenced data 'const char *'
|-FieldDecl 0x560a853e4f18 <line:206:2, col:6> col:6 referenced length 'int'
|-FieldDecl 0x560a853e4fa8 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
|-CXXConstructorDecl 0x560a853eb040 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x560a853eb478 <col:12>
|-CXXConstructorDecl 0x560a853eb148 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x560a853eb258 <col:12> col:12 used 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x560a853e4eb0 'data' 'const char *'
| | `-ImplicitCastExpr 0x560a853eda00 <col:12> 'const char *' <LValueToRValue>
| |   `-MemberExpr 0x560a853ed9d0 <col:12> 'const char *const' lvalue .data 0x560a853e4eb0
| |     `-DeclRefExpr 0x560a853ed9b0 <col:12> 'const String::rep_t' lvalue ParmVar 0x560a853eb258 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x560a853e4f18 'length' 'int'
| | `-ImplicitCastExpr 0x560a853eda90 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x560a853eda60 <col:12> 'const int' lvalue .length 0x560a853e4f18
| |     `-DeclRefExpr 0x560a853eda40 <col:12> 'const String::rep_t' lvalue ParmVar 0x560a853eb258 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x560a853e4fa8 'memo' 'String::memo_t *'
| | `-ImplicitCastExpr 0x560a853edb20 <col:12> 'String::memo_t *' <LValueToRValue>
| |   `-MemberExpr 0x560a853edaf0 <col:12> 'String::memo_t *const' lvalue .memo 0x560a853e4fa8
| |     `-DeclRefExpr 0x560a853edad0 <col:12> 'const String::rep_t' lvalue ParmVar 0x560a853eb258 '' 'const String::rep_t &'
| `-CompoundStmt 0x560a853edb78 <col:12>
|-CXXConstructorDecl 0x560a853eb2f8 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x560a853eb2f8
| `-ParmVarDecl 0x560a853eb408 <col:12> col:12 'String::rep_t &&'
|-CXXDestructorDecl 0x560a853f0960 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x560a853fc378 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x560a853fc488 <col:12> col:12 used 'const String::rep_t &'
| `-CompoundStmt 0x560a853fc9a0 <col:12>
|   |-BinaryOperator 0x560a853fc7b8 <col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x560a853fc770 <col:12> 'const char *' lvalue ->data 0x560a853e4eb0
|   | | `-CXXThisExpr 0x560a853fc760 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x560a853fc7a0 <col:12> 'const char *' <LValueToRValue>
|   |   `-MemberExpr 0x560a853fc730 <col:12> 'const char *const' lvalue .data 0x560a853e4eb0
|   |     `-DeclRefExpr 0x560a853fc710 <col:12> 'const String::rep_t' lvalue ParmVar 0x560a853fc488 '' 'const String::rep_t &'
|   |-BinaryOperator 0x560a853fc880 <col:12> 'int' lvalue '='
|   | |-MemberExpr 0x560a853fc838 <col:12> 'int' lvalue ->length 0x560a853e4f18
|   | | `-CXXThisExpr 0x560a853fc828 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x560a853fc868 <col:12> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x560a853fc7f8 <col:12> 'const int' lvalue .length 0x560a853e4f18
|   |     `-DeclRefExpr 0x560a853fc7d8 <col:12> 'const String::rep_t' lvalue ParmVar 0x560a853fc488 '' 'const String::rep_t &'
|   |-BinaryOperator 0x560a853fc948 <col:12> 'String::memo_t *' lvalue '='
|   | |-MemberExpr 0x560a853fc900 <col:12> 'String::memo_t *' lvalue ->memo 0x560a853e4fa8
|   | | `-CXXThisExpr 0x560a853fc8f0 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x560a853fc930 <col:12> 'String::memo_t *' <LValueToRValue>
|   |   `-MemberExpr 0x560a853fc8c0 <col:12> 'String::memo_t *const' lvalue .memo 0x560a853e4fa8
|   |     `-DeclRefExpr 0x560a853fc8a0 <col:12> 'const String::rep_t' lvalue ParmVar 0x560a853fc488 '' 'const String::rep_t &'
|   `-ReturnStmt 0x560a853fc990 <col:12>
|     `-UnaryOperator 0x560a853fc978 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x560a853fc968 <col:12> 'String::rep_t *' this
`-CXXMethodDecl 0x560a853fc4f8 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x560a853fc4f8
  `-ParmVarDecl 0x560a853fc608 <col:12> col:12 'String::rep_t &&'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  NonVirtualBaseLLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x560a853dbc30 <../dummy_inc/click/string.hh:19:1, line:304:1> line:19:7 referenced class String definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x560a853dbd48 <col:1, col:7> col:7 implicit referenced class String
|-AccessSpecDecl 0x560a853dbdd8 <col:16, col:22> col:16 public
|-TypedefDecl 0x560a853dbe18 <line:21:5, col:25> col:25 referenced const_iterator 'const char *'
| `-PointerType 0x560a850b1dc0 'const char *'
|   `-QualType 0x560a850b1311 'const char' const
|     `-BuiltinType 0x560a850b1310 'char'
|-TypedefDecl 0x560a853dbea0 <line:22:5, col:28> col:28 iterator 'String::const_iterator':'const char *'
| `-TypedefType 0x560a853dbe70 'String::const_iterator' sugar
|   |-Typedef 0x560a853dbe18 'const_iterator'
|   `-PointerType 0x560a850b1dc0 'const char *'
|     `-QualType 0x560a850b1311 'const char' const
|       `-BuiltinType 0x560a850b1310 'char'
|-TypedefDecl 0x560a853dc010 <line:24:5, col:52> col:27 referenced unspecified_bool_type 'int (String::*)() const'
| `-MemberPointerType 0x560a853dbf80 'int (String::*)() const'
|   |-RecordType 0x560a853dbcc0 'String'
|   | `-CXXRecord 0x560a853dbc30 'String'
|   `-ParenType 0x560a853dbf20 'int () const' sugar
|     `-FunctionProtoType 0x560a853afab0 'int () const' const cdecl
|       `-BuiltinType 0x560a850b1370 'int'
|-TypedefDecl 0x560a853dc078 <line:27:5, col:21> col:21 referenced intmax_t 'int64_t':'long'
| `-TypedefType 0x560a85204690 'int64_t' sugar
|   |-Typedef 0x560a8511a2d0 'int64_t'
|   `-TypedefType 0x560a850f34d0 '__int64_t' sugar
|     |-Typedef 0x560a850f30a8 '__int64_t'
|     `-BuiltinType 0x560a850b1390 'long'
|-TypedefDecl 0x560a853dc0e0 <line:28:5, col:22> col:22 referenced uintmax_t 'uint64_t':'unsigned long'
| `-TypedefType 0x560a852045b0 'uint64_t' sugar
|   |-Typedef 0x560a8511a470 'uint64_t'
|   `-TypedefType 0x560a850f3560 '__uint64_t' sugar
|     |-Typedef 0x560a850f3118 '__uint64_t'
|     `-BuiltinType 0x560a850b1430 'unsigned long'
|-TypedefDecl 0x560a853dc170 <line:36:5, col:22> col:22 int_large_t 'String::intmax_t':'long'
| `-TypedefType 0x560a853dc140 'String::intmax_t' sugar
|   |-Typedef 0x560a853dc078 'intmax_t'
|   `-TypedefType 0x560a85204690 'int64_t' sugar
|     |-Typedef 0x560a8511a2d0 'int64_t'
|     `-TypedefType 0x560a850f34d0 '__int64_t' sugar
|       |-Typedef 0x560a850f30a8 '__int64_t'
|       `-BuiltinType 0x560a850b1390 'long'
|-TypedefDecl 0x560a853dc200 <line:37:5, col:23> col:23 uint_large_t 'String::uintmax_t':'unsigned long'
| `-TypedefType 0x560a853dc1d0 'String::uintmax_t' sugar
|   |-Typedef 0x560a853dc0e0 'uintmax_t'
|   `-TypedefType 0x560a852045b0 'uint64_t' sugar
|     |-Typedef 0x560a8511a470 'uint64_t'
|     `-TypedefType 0x560a850f3560 '__uint64_t' sugar
|       |-Typedef 0x560a850f3118 '__uint64_t'
|       `-BuiltinType 0x560a850b1430 'unsigned long'
|-CXXConstructorDecl 0x560a853dc2c0 <line:39:5, col:19> col:12 used String 'void ()' inline
|-CXXConstructorDecl 0x560a853dc468 <line:40:5, col:34> col:12 used String 'void (const String &)' inline
| `-ParmVarDecl 0x560a853dc3a8 <col:19, col:33> col:33 x 'const String &'
|-CXXConstructorDecl 0x560a853dc618 <line:42:5, col:29> col:12 used String 'void (String &&)' inline
| `-ParmVarDecl 0x560a853dc558 <col:19, col:28> col:28 x 'String &&'
|-CXXConstructorDecl 0x560a853dc770 <line:44:5, col:35> col:12 used String 'void (const char *)' inline
| `-ParmVarDecl 0x560a853dc6e0 <col:19, col:31> col:31 cstr 'const char *'
|-CXXConstructorDecl 0x560a853dc988 <line:45:5, col:41> col:12 String 'void (const char *, int)' inline
| |-ParmVarDecl 0x560a853dc838 <col:19, col:31> col:31 s 'const char *'
| `-ParmVarDecl 0x560a853dc8b8 <col:34, col:38> col:38 len 'int'
|-CXXConstructorDecl 0x560a853dcba8 <line:46:5, col:50> col:12 String 'void (const unsigned char *, int)' inline
| |-ParmVarDecl 0x560a853dca58 <col:19, col:40> col:40 s 'const unsigned char *'
| `-ParmVarDecl 0x560a853dcad8 <col:43, col:47> col:47 len 'int'
|-CXXConstructorDecl 0x560a853dcdc8 <line:47:5, col:54> col:12 used String 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x560a853dcc78 <col:19, col:31> col:31 first 'const char *'
| `-ParmVarDecl 0x560a853dccf8 <col:38, col:50> col:50 last 'const char *'
|-CXXConstructorDecl 0x560a853dcfe8 <line:48:5, col:72> col:12 String 'void (const unsigned char *, const unsigned char *)' inline
| |-ParmVarDecl 0x560a853dce98 <col:19, col:40> col:40 first 'const unsigned char *'
| `-ParmVarDecl 0x560a853dcf18 <col:47, col:68> col:68 last 'const unsigned char *'
|-CXXConstructorDecl 0x560a853dd178 <line:49:5, col:34> col:21 String 'void (bool)' inline
| `-ParmVarDecl 0x560a853dd0b0 <col:28, col:33> col:33 x 'bool'
|-CXXConstructorDecl 0x560a853dd2f8 <line:50:5, col:34> col:21 String 'void (char)' inline
| `-ParmVarDecl 0x560a853dd238 <col:28, col:33> col:33 c 'char'
|-CXXConstructorDecl 0x560a853dd488 <line:51:5, col:43> col:21 String 'void (unsigned char)' inline
| `-ParmVarDecl 0x560a853dd3c0 <col:28, col:42> col:42 c 'unsigned char'
|-CXXConstructorDecl 0x560a853dd5e0 <line:52:5, col:26> col:14 String 'void (int)'
| `-ParmVarDecl 0x560a853dd550 <col:21, col:25> col:25 x 'int'
|-CXXConstructorDecl 0x560a853dd738 <line:53:5, col:31> col:14 String 'void (unsigned int)'
| `-ParmVarDecl 0x560a853dd6a8 <col:21, col:30> col:30 x 'unsigned int'
|-CXXConstructorDecl 0x560a853dd890 <line:54:5, col:27> col:14 String 'void (long)'
| `-ParmVarDecl 0x560a853dd800 <col:21, col:26> col:26 x 'long'
|-CXXConstructorDecl 0x560a853dda18 <line:55:5, col:36> col:14 String 'void (unsigned long)'
| `-ParmVarDecl 0x560a853dd958 <col:21, col:35> col:35 x 'unsigned long'
|-CXXConstructorDecl 0x560a853ddba8 <line:57:5, col:32> col:14 String 'void (long long)'
| `-ParmVarDecl 0x560a853ddae0 <col:21, col:31> col:31 x 'long long'
|-CXXConstructorDecl 0x560a853ddd38 <line:58:5, col:41> col:14 String 'void (unsigned long long)'
| `-ParmVarDecl 0x560a853ddc70 <col:21, col:40> col:40 x 'unsigned long long'
|-CXXConstructorDecl 0x560a853ddec8 <line:65:5, col:29> col:14 String 'void (double)'
| `-ParmVarDecl 0x560a853dde00 <col:21, col:28> col:28 x 'double'
|-CXXDestructorDecl 0x560a853ddfc0 <line:67:5, col:20> col:12 used ~String 'void () noexcept' inline
|-CXXMethodDecl 0x560a853de0e8 <line:69:5, col:44> col:33 make_empty 'const String &()' static inline
|-CXXMethodDecl 0x560a853de268 <line:70:5, col:52> col:26 used make_uninitialized 'String (int)' static inline
| `-ParmVarDecl 0x560a853de1a0 <col:45, col:49> col:49 len 'int'
|-CXXMethodDecl 0x560a853de3b8 <line:71:5, col:74> col:26 make_garbage 'String (int)' static inline
| |-ParmVarDecl 0x560a853de328 <col:39, col:43> col:43 len 'int'
| `-DeprecatedAttr 0x560a853de470 <col:63> "" ""
|-CXXMethodDecl 0x560a853de5b8 <line:72:5, col:54> col:26 make_stable 'String (const char *)' static inline
| `-ParmVarDecl 0x560a853de4f8 <col:38, col:50> col:50 cstr 'const char *'
|-CXXMethodDecl 0x560a853de7c8 <line:73:5, col:60> col:26 make_stable 'String (const char *, int)' static inline
| |-ParmVarDecl 0x560a853de678 <col:38, col:50> col:50 s 'const char *'
| `-ParmVarDecl 0x560a853de6f8 <col:53, col:57> col:57 len 'int'
|-CXXMethodDecl 0x560a853de9e8 <line:74:5, col:73> col:26 make_stable 'String (const char *, const char *)' static inline
| |-ParmVarDecl 0x560a853de890 <col:38, col:50> col:50 first 'const char *'
| `-ParmVarDecl 0x560a853de910 <col:57, col:69> col:69 last 'const char *'
|-CXXMethodDecl 0x560a853decc8 <line:75:5, col:80> col:19 make_numeric 'String (String::intmax_t, int, bool)' static
| |-ParmVarDecl 0x560a853deaa8 <col:32, col:41> col:41 x 'String::intmax_t':'long'
| |-ParmVarDecl 0x560a853deb28 <col:44, col:55> col:48 base 'int' cinit
| | `-IntegerLiteral 0x560a853eab10 <col:55> 'int' 10
| `-ParmVarDecl 0x560a853deba0 <col:59, col:76> col:64 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x560a853eab30 <col:76> 'bool' true
|-CXXMethodDecl 0x560a853defa8 <line:76:5, col:81> col:19 make_numeric 'String (String::uintmax_t, int, bool)' static
| |-ParmVarDecl 0x560a853ded90 <col:32, col:42> col:42 x 'String::uintmax_t':'unsigned long'
| |-ParmVarDecl 0x560a853dee10 <col:45, col:56> col:49 base 'int' cinit
| | `-IntegerLiteral 0x560a853eab40 <col:56> 'int' 10
| `-ParmVarDecl 0x560a853dee88 <col:60, col:77> col:65 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x560a853eab60 <col:77> 'bool' true
|-CXXMethodDecl 0x560a853df0b0 <line:78:5, col:31> col:24 used data 'const char *() const' inline
|-CXXMethodDecl 0x560a853df178 <line:79:5, col:25> col:16 used length 'int () const' inline
|-CXXMethodDecl 0x560a853df240 <line:81:5, col:60> col:52 c_str 'const char *() const'
| |-NoInlineAttr 0x560a853df2e0 <col:20>
| `-OptimizeNoneAttr 0x560a853df338 <col:30>
|-CXXConversionDecl 0x560a853df428 <line:83:5, col:45> col:12 operator int (String::*)() const 'String::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x560a853df4f8 <line:84:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x560a853df5b8 <line:85:5, col:29> col:17 operator! 'bool () const' inline
|-CXXMethodDecl 0x560a853df6a8 <line:87:5, col:35> col:27 used begin 'String::const_iterator () const' inline
|-CXXMethodDecl 0x560a853df768 <line:88:5, col:33> col:27 used end 'String::const_iterator () const' inline
|-CXXMethodDecl 0x560a853df8e8 <line:90:5, col:35> col:17 operator[] 'char (int) const' inline
| `-ParmVarDecl 0x560a853df820 <col:28, col:32> col:32 i 'int'
|-CXXMethodDecl 0x560a853dfa38 <line:91:5, col:27> col:17 at 'char (int) const' inline
| `-ParmVarDecl 0x560a853df9a8 <col:20, col:24> col:24 i 'int'
|-CXXMethodDecl 0x560a853dfb28 <line:92:5, col:25> col:17 front 'char () const' inline
|-CXXMethodDecl 0x560a853dfbe8 <line:93:5, col:24> col:17 back 'char () const' inline
|-CXXMethodDecl 0x560a853dfe38 <line:95:5, col:64> col:21 used hashcode 'uint32_t (const char *, const char *)' static
| |-ParmVarDecl 0x560a853dfca0 <col:30, col:42> col:42 begin 'const char *'
| `-ParmVarDecl 0x560a853dfd20 <col:49, col:61> col:61 end 'const char *'
|-CXXMethodDecl 0x560a853e0098 <line:96:5, line:97:33> line:96:28 hashcode 'uint32_t (const unsigned char *, const unsigned char *)' static inline
| |-ParmVarDecl 0x560a853dff00 <col:37, col:58> col:58 begin 'const unsigned char *'
| `-ParmVarDecl 0x560a853dff80 <line:97:9, col:30> col:30 end 'const unsigned char *'
|-CXXMethodDecl 0x560a853e0168 <line:98:5, col:32> col:21 hashcode 'uint32_t () const' inline
|-CXXMethodDecl 0x560a853e0378 <line:100:5, col:65> col:19 substring 'String (const char *, const char *) const' inline
| |-ParmVarDecl 0x560a853e0220 <col:29, col:41> col:41 begin 'const char *'
| `-ParmVarDecl 0x560a853e02a0 <col:48, col:60> col:60 end 'const char *'
|-CXXMethodDecl 0x560a853e0598 <line:101:5, col:40> col:12 used substring 'String (int, int) const'
| |-ParmVarDecl 0x560a853e0440 <col:22, col:26> col:26 pos 'int'
| `-ParmVarDecl 0x560a853e04c0 <col:31, col:35> col:35 len 'int'
|-CXXMethodDecl 0x560a853e0728 <line:102:5, col:38> col:19 substring 'String (int) const' inline
| `-ParmVarDecl 0x560a853e0660 <col:29, col:33> col:33 pos 'int'
|-CXXMethodDecl 0x560a853e0818 <line:103:5, col:25> col:12 trim_space 'String () const'
|-CXXMethodDecl 0x560a853e0988 <line:105:5, col:41> col:17 equals 'bool (const String &) const' inline
| `-ParmVarDecl 0x560a853e08c8 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x560a853e0b98 <line:106:5, col:48> col:17 used equals 'bool (const char *, int) const' inline
| |-ParmVarDecl 0x560a853e0a48 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x560a853e0ac8 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x560a853e0db0 <line:107:5, col:63> col:23 used compare 'int (const String &, const String &)' static inline
| |-ParmVarDecl 0x560a853e0c58 <col:31, col:45> col:45 a 'const String &'
| `-ParmVarDecl 0x560a853e0cd0 <col:48, col:62> col:62 b 'const String &'
|-CXXMethodDecl 0x560a853e0f40 <line:108:5, col:41> col:16 used compare 'int (const String &) const' inline
| `-ParmVarDecl 0x560a853e0e70 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x560a853e1160 <line:109:5, col:41> col:9 used compare 'int (const char *, int) const'
| |-ParmVarDecl 0x560a853e1000 <col:17, col:29> col:29 s 'const char *'
| `-ParmVarDecl 0x560a853e1080 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x560a853e12b0 <line:110:5, col:46> col:17 starts_with 'bool (const String &) const' inline
| `-ParmVarDecl 0x560a853e1220 <col:29, col:43> col:43 x 'const String &'
|-CXXMethodDecl 0x560a853e1488 <line:111:5, col:46> col:10 used starts_with 'bool (const char *, int) const'
| |-ParmVarDecl 0x560a853e1370 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x560a853e13f0 <col:37, col:41> col:41 len 'int'
|-CXXMethodDecl 0x560a853e15d8 <line:112:5, col:44> col:10 glob_match 'bool (const String &) const'
| `-ParmVarDecl 0x560a853e1548 <col:21, col:35> col:35 pattern 'const String &'
|-CXXMethodDecl 0x560a853e17f0 <line:125:5, col:42> col:9 find_left 'int (char, int) const'
| |-ParmVarDecl 0x560a853e1690 <col:19, col:24> col:24 c 'char'
| `-ParmVarDecl 0x560a853e1710 <col:27, col:39> col:31 start 'int' cinit
|   `-IntegerLiteral 0x560a853eab70 <col:39> 'int' 0
|-CXXMethodDecl 0x560a853e1a10 <line:126:5, col:51> col:9 find_left 'int (const String &, int) const'
| |-ParmVarDecl 0x560a853e18b0 <col:19, col:33> col:33 x 'const String &'
| `-ParmVarDecl 0x560a853e1930 <col:36, col:48> col:40 start 'int' cinit
|   `-IntegerLiteral 0x560a853eab90 <col:48> 'int' 0
|-CXXMethodDecl 0x560a853e1bf0 <line:127:5, col:52> col:9 find_right 'int (char, int) const'
| |-ParmVarDecl 0x560a853e1ad0 <col:20, col:25> col:25 c 'char'
| `-ParmVarDecl 0x560a853e1b50 <col:28, col:40> col:32 start 'int' cinit
|   `-IntegerLiteral 0x560a853eabb0 <col:40> 'int' 2147483647
|-CXXMethodDecl 0x560a853e1cc0 <line:129:5, col:20> col:12 lower 'String () const'
|-CXXMethodDecl 0x560a853e1d80 <line:130:5, col:20> col:12 upper 'String () const'
|-CXXMethodDecl 0x560a853e1e40 <line:131:5, col:24> col:12 printable 'String () const'
|-CXXMethodDecl 0x560a853e1f00 <line:132:5, col:25> col:12 quoted_hex 'String () const'
|-CXXMethodDecl 0x560a853e1fc0 <line:133:5, col:26> col:12 encode_json 'String () const'
|-CXXMethodDecl 0x560a853e2168 <line:135:5, col:45> col:20 operator= 'String &(const String &)' inline
| `-ParmVarDecl 0x560a853e2070 <col:30, col:44> col:44 x 'const String &'
|-CXXMethodDecl 0x560a853e22e8 <line:137:5, col:40> col:20 operator= 'String &(String &&)' inline
| `-ParmVarDecl 0x560a853e2220 <col:30, col:39> col:39 x 'String &&'
|-CXXMethodDecl 0x560a853e24c0 <line:139:5, col:46> col:20 operator= 'String &(const char *)' inline
| `-ParmVarDecl 0x560a853e23a8 <col:30, col:42> col:42 cstr 'const char *'
|-CXXMethodDecl 0x560a853e2638 <line:141:5, col:31> col:17 swap 'void (String &)' inline
| `-ParmVarDecl 0x560a853e2578 <col:22, col:30> col:30 x 'String &'
|-CXXMethodDecl 0x560a853e2780 <line:143:5, col:39> col:17 append 'void (const String &)' inline
| `-ParmVarDecl 0x560a853e26f0 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x560a853e28d0 <line:144:5, col:40> col:17 used append 'void (const char *)' inline
| `-ParmVarDecl 0x560a853e2840 <col:24, col:36> col:36 cstr 'const char *'
|-CXXMethodDecl 0x560a853e2aa8 <line:145:5, col:46> col:17 used append 'void (const char *, int)' inline
| |-ParmVarDecl 0x560a853e2990 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x560a853e2a10 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x560a853e2c88 <line:146:5, col:59> col:17 append 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x560a853e2b70 <col:24, col:36> col:36 first 'const char *'
| `-ParmVarDecl 0x560a853e2bf0 <col:43, col:55> col:55 last 'const char *'
|-CXXMethodDecl 0x560a853e2dd8 <line:147:5, col:30> col:17 append 'void (char)' inline
| `-ParmVarDecl 0x560a853e2d48 <col:24, col:29> col:29 c 'char'
|-CXXMethodDecl 0x560a853e2fe8 <line:148:5, col:36> col:10 append_fill 'void (int, int)'
| |-ParmVarDecl 0x560a853e2e98 <col:22, col:26> col:26 c 'int'
| `-ParmVarDecl 0x560a853e2f18 <col:29, col:33> col:33 len 'int'
|-CXXMethodDecl 0x560a853e3148 <line:149:5, col:39> col:11 used append_uninitialized 'char *(int)'
| `-ParmVarDecl 0x560a853e30b0 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x560a853e32a0 <line:150:5, col:68> col:18 append_garbage 'char *(int)' inline
| |-ParmVarDecl 0x560a853e3208 <col:33, col:37> col:37 len 'int'
| `-DeprecatedAttr 0x560a853e3348 <col:57> "" ""
|-CXXMethodDecl 0x560a853e3458 <line:152:5, col:46> col:20 used operator+= 'String &(const String &)' inline
| `-ParmVarDecl 0x560a853e33c8 <col:31, col:45> col:45 x 'const String &'
|-CXXMethodDecl 0x560a853e35a8 <line:153:5, col:47> col:20 operator+= 'String &(const char *)' inline
| `-ParmVarDecl 0x560a853e3518 <col:31, col:43> col:43 cstr 'const char *'
|-CXXMethodDecl 0x560a853e3728 <line:154:5, col:37> col:20 operator+= 'String &(char)' inline
| `-ParmVarDecl 0x560a853e3660 <col:31, col:36> col:36 c 'char'
|-CXXMethodDecl 0x560a853e37f0 <line:160:5, col:29> col:17 is_shared 'bool () const' inline
|-CXXMethodDecl 0x560a853e38b0 <line:161:5, col:29> col:17 is_stable 'bool () const' inline
|-CXXMethodDecl 0x560a853e3970 <line:163:5, col:60> col:19 unique 'String () const' inline
| `-DeprecatedAttr 0x560a853e3a10 <col:49> "" ""
|-CXXMethodDecl 0x560a853e3aa0 <line:164:5, col:30> col:19 used unshared 'String () const' inline
|-CXXMethodDecl 0x560a853e3b60 <line:165:5, col:29> col:19 compact 'String () const' inline
|-CXXMethodDecl 0x560a853e3c50 <line:167:5, col:24> col:11 mutable_data 'char *()'
|-CXXMethodDecl 0x560a853e3d18 <line:168:5, col:25> col:11 mutable_c_str 'char *()'
|-CXXMethodDecl 0x560a853e3dd8 <line:170:5, col:52> col:33 make_out_of_memory 'const String &()' static inline
|-CXXMethodDecl 0x560a853e3e98 <line:171:5, col:33> col:17 out_of_memory 'bool () const' inline
|-CXXMethodDecl 0x560a853e3f90 <line:172:5, col:50> col:31 out_of_memory_data 'const char *()' static inline
|-CXXMethodDecl 0x560a853e4058 <line:173:5, col:44> col:23 out_of_memory_length 'int ()' static inline
|-CXXMethodDecl 0x560a853e4120 <line:174:5, col:42> col:31 empty_data 'const char *()' static inline
|-CXXMethodDecl 0x560a853e42f8 <line:180:5, col:81> col:31 skip_utf8_char 'const char *(const char *, const char *)' static inline
| |-ParmVarDecl 0x560a853e41d8 <col:46, col:58> col:58 first 'const char *'
| `-ParmVarDecl 0x560a853e4258 <col:65, col:77> col:77 last 'const char *'
|-CXXMethodDecl 0x560a853e4520 <line:181:5, line:182:38> line:181:33 used skip_utf8_char 'const unsigned char *(const unsigned char *, const unsigned char *)' static
| |-ParmVarDecl 0x560a853e43c0 <col:48, col:69> col:69 first 'const unsigned char *'
| `-ParmVarDecl 0x560a853e4440 <line:182:13, col:34> col:34 last 'const unsigned char *'
|-VarDecl 0x560a853e4630 <line:184:5, col:35> col:23 used bool_data 'const char [11]' static
|-AccessSpecDecl 0x560a853e4698 <line:186:3, col:10> col:3 private
|-CXXRecordDecl 0x560a853e46c0 <line:189:5, line:198:5> line:189:12 referenced struct memo_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x560a853e47d8 <col:5, col:12> col:12 implicit struct memo_t
| |-FieldDecl 0x560a853e4878 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
| |-FieldDecl 0x560a853e48d8 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
| |-FieldDecl 0x560a853e4938 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
| `-FieldDecl 0x560a853e49e8 <line:197:2, col:18> col:7 real_data 'char [8]'
|-EnumDecl 0x560a853e4a50 <line:200:5, line:202:5> line:200:5
| `-EnumConstantDecl 0x560a853e4c88 <line:201:2, col:32> col:2 MEMO_SPACE 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)'
|   `-ImplicitCastExpr 0x560a853e4cd8 <col:15, col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x560a853e4c68 <col:15, col:32> 'unsigned long' Int: 12
|       `-BinaryOperator 0x560a853e4b78 <col:15, col:32> 'unsigned long' '-'
|         |-UnaryExprOrTypeTraitExpr 0x560a853e4b20 <col:15, col:28> 'unsigned long' sizeof 'String::memo_t'
|         `-ImplicitCastExpr 0x560a853e4b60 <col:32> 'unsigned long' <IntegralCast>
|           `-IntegerLiteral 0x560a853e4b40 <col:32> 'int' 8
|-CXXRecordDecl 0x560a853e4cf0 <line:204:5, line:208:5> line:204:12 referenced struct rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x560a853e4e08 <col:5, col:12> col:12 implicit struct rep_t
| |-FieldDecl 0x560a853e4eb0 <line:205:2, col:14> col:14 referenced data 'const char *'
| |-FieldDecl 0x560a853e4f18 <line:206:2, col:6> col:6 referenced length 'int'
| |-FieldDecl 0x560a853e4fa8 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
| |-CXXConstructorDecl 0x560a853eb040 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x560a853eb478 <col:12>
| |-CXXConstructorDecl 0x560a853eb148 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x560a853eb258 <col:12> col:12 used 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x560a853e4eb0 'data' 'const char *'
| | | `-ImplicitCastExpr 0x560a853eda00 <col:12> 'const char *' <LValueToRValue>
| | |   `-MemberExpr 0x560a853ed9d0 <col:12> 'const char *const' lvalue .data 0x560a853e4eb0
| | |     `-DeclRefExpr 0x560a853ed9b0 <col:12> 'const String::rep_t' lvalue ParmVar 0x560a853eb258 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x560a853e4f18 'length' 'int'
| | | `-ImplicitCastExpr 0x560a853eda90 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x560a853eda60 <col:12> 'const int' lvalue .length 0x560a853e4f18
| | |     `-DeclRefExpr 0x560a853eda40 <col:12> 'const String::rep_t' lvalue ParmVar 0x560a853eb258 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x560a853e4fa8 'memo' 'String::memo_t *'
| | | `-ImplicitCastExpr 0x560a853edb20 <col:12> 'String::memo_t *' <LValueToRValue>
| | |   `-MemberExpr 0x560a853edaf0 <col:12> 'String::memo_t *const' lvalue .memo 0x560a853e4fa8
| | |     `-DeclRefExpr 0x560a853edad0 <col:12> 'const String::rep_t' lvalue ParmVar 0x560a853eb258 '' 'const String::rep_t &'
| | `-CompoundStmt 0x560a853edb78 <col:12>
| |-CXXConstructorDecl 0x560a853eb2f8 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x560a853eb2f8
| | `-ParmVarDecl 0x560a853eb408 <col:12> col:12 'String::rep_t &&'
| |-CXXDestructorDecl 0x560a853f0960 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x560a853fc378 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x560a853fc488 <col:12> col:12 used 'const String::rep_t &'
| | `-CompoundStmt 0x560a853fc9a0 <col:12>
| |   |-BinaryOperator 0x560a853fc7b8 <col:12> 'const char *' lvalue '='
| |   | |-MemberExpr 0x560a853fc770 <col:12> 'const char *' lvalue ->data 0x560a853e4eb0
| |   | | `-CXXThisExpr 0x560a853fc760 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x560a853fc7a0 <col:12> 'const char *' <LValueToRValue>
| |   |   `-MemberExpr 0x560a853fc730 <col:12> 'const char *const' lvalue .data 0x560a853e4eb0
| |   |     `-DeclRefExpr 0x560a853fc710 <col:12> 'const String::rep_t' lvalue ParmVar 0x560a853fc488 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x560a853fc880 <col:12> 'int' lvalue '='
| |   | |-MemberExpr 0x560a853fc838 <col:12> 'int' lvalue ->length 0x560a853e4f18
| |   | | `-CXXThisExpr 0x560a853fc828 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x560a853fc868 <col:12> 'int' <LValueToRValue>
| |   |   `-MemberExpr 0x560a853fc7f8 <col:12> 'const int' lvalue .length 0x560a853e4f18
| |   |     `-DeclRefExpr 0x560a853fc7d8 <col:12> 'const String::rep_t' lvalue ParmVar 0x560a853fc488 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x560a853fc948 <col:12> 'String::memo_t *' lvalue '='
| |   | |-MemberExpr 0x560a853fc900 <col:12> 'String::memo_t *' lvalue ->memo 0x560a853e4fa8
| |   | | `-CXXThisExpr 0x560a853fc8f0 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x560a853fc930 <col:12> 'String::memo_t *' <LValueToRValue>
| |   |   `-MemberExpr 0x560a853fc8c0 <col:12> 'String::memo_t *const' lvalue .memo 0x560a853e4fa8
| |   |     `-DeclRefExpr 0x560a853fc8a0 <col:12> 'const String::rep_t' lvalue ParmVar 0x560a853fc488 '' 'const String::rep_t &'
| |   `-ReturnStmt 0x560a853fc990 <col:12>
| |     `-UnaryOperator 0x560a853fc978 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x560a853fc968 <col:12> 'String::rep_t *' this
| `-CXXMethodDecl 0x560a853fc4f8 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x560a853fc4f8
|   `-ParmVarDecl 0x560a853fc608 <col:12> col:12 'String::rep_t &&'
|-FieldDecl 0x560a853e5020 <line:211:5, col:19> col:19 referenced _r 'String::rep_t' mutable
|-CXXMethodDecl 0x560a853e5268 <line:256:5, line:261:5> line:256:17 used assign_memo 'void (const char *, int, String::memo_t *) const' inline
| |-ParmVarDecl 0x560a853e5088 <col:29, col:41> col:41 used data 'const char *'
| |-ParmVarDecl 0x560a853e5108 <col:47, col:51> col:51 used length 'int'
| |-ParmVarDecl 0x560a853e5180 <col:59, col:67> col:67 used memo 'String::memo_t *'
| `-CompoundStmt 0x560a853eb000 <col:79, line:261:5>
|   |-BinaryOperator 0x560a853eac78 <line:257:2, col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x560a853eac10 <col:2, col:5> 'const char *' lvalue .data 0x560a853e4eb0
|   | | `-MemberExpr 0x560a853eabe0 <col:2> 'String::rep_t' lvalue ->_r 0x560a853e5020
|   | |   `-CXXThisExpr 0x560a853eabd0 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x560a853eac60 <col:12> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x560a853eac40 <col:12> 'const char *' lvalue ParmVar 0x560a853e5088 'data' 'const char *'
|   |-BinaryOperator 0x560a853ead40 <line:258:2, col:14> 'int' lvalue '='
|   | |-MemberExpr 0x560a853eacd8 <col:2, col:5> 'int' lvalue .length 0x560a853e4f18
|   | | `-MemberExpr 0x560a853eaca8 <col:2> 'String::rep_t' lvalue ->_r 0x560a853e5020
|   | |   `-CXXThisExpr 0x560a853eac98 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x560a853ead28 <col:14> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x560a853ead08 <col:14> 'int' lvalue ParmVar 0x560a853e5108 'length' 'int'
|   `-IfStmt 0x560a853eafe8 <line:259:2, line:260:41>
|     |-ImplicitCastExpr 0x560a853eae60 <line:259:6, col:21> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x560a853eae48 <col:6, col:21> 'String::memo_t *' <LValueToRValue>
|     |   `-ParenExpr 0x560a853eae28 <col:6, col:21> 'String::memo_t *' lvalue
|     |     `-BinaryOperator 0x560a853eae08 <col:7, col:17> 'String::memo_t *' lvalue '='
|     |       |-MemberExpr 0x560a853eada0 <col:7, col:10> 'String::memo_t *' lvalue .memo 0x560a853e4fa8
|     |       | `-MemberExpr 0x560a853ead70 <col:7> 'String::rep_t' lvalue ->_r 0x560a853e5020
|     |       |   `-CXXThisExpr 0x560a853ead60 <col:7> 'const String *' implicit this
|     |       `-ImplicitCastExpr 0x560a853eadf0 <col:17> 'String::memo_t *' <LValueToRValue>
|     |         `-DeclRefExpr 0x560a853eadd0 <col:17> 'String::memo_t *' lvalue ParmVar 0x560a853e5180 'memo' 'String::memo_t *'
|     `-CallExpr 0x560a853eafc0 <line:260:6, col:41> 'void'
|       |-ImplicitCastExpr 0x560a853eafa8 <col:6, col:23> 'void (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x560a853eaeb0 <col:6, col:23> 'void (volatile uint32_t &)' lvalue CXXMethod 0x560a853d3c98 'inc' 'void (volatile uint32_t &)'
|       `-MemberExpr 0x560a853eaf18 <col:27, col:33> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x560a853e4878
|         `-ImplicitCastExpr 0x560a853eaf00 <col:27> 'String::memo_t *' <LValueToRValue>
|           `-DeclRefExpr 0x560a853eaee0 <col:27> 'String::memo_t *' lvalue ParmVar 0x560a853e5180 'memo' 'String::memo_t *'
|-CXXConstructorDecl 0x560a853e5518 <line:263:5, line:265:5> line:263:12 used String 'void (const char *, int, String::memo_t *)' inline
| |-ParmVarDecl 0x560a853e5338 <col:19, col:31> col:31 used data 'const char *'
| |-ParmVarDecl 0x560a853e53b8 <col:37, col:41> col:41 used length 'int'
| |-ParmVarDecl 0x560a853e5430 <col:49, col:57> col:57 used memo 'String::memo_t *'
| |-CXXCtorInitializer Field 0x560a853e5020 '_r' 'String::rep_t'
| | `-CXXConstructExpr 0x560a853eb488 <col:12> 'String::rep_t' 'void () noexcept'
| `-CompoundStmt 0x560a853eb618 <col:63, line:265:5>
|   `-CXXMemberCallExpr 0x560a853eb580 <line:264:2, col:32> 'void'
|     |-MemberExpr 0x560a853eb4f0 <col:2> '<bound member function type>' ->assign_memo 0x560a853e5268
|     | `-ImplicitCastExpr 0x560a853eb5b8 <col:2> 'const String *' <NoOp>
|     |   `-CXXThisExpr 0x560a853eb4e0 <col:2> 'String *' implicit this
|     |-ImplicitCastExpr 0x560a853eb5d0 <col:14> 'const char *' <LValueToRValue>
|     | `-DeclRefExpr 0x560a853eb520 <col:14> 'const char *' lvalue ParmVar 0x560a853e5338 'data' 'const char *'
|     |-ImplicitCastExpr 0x560a853eb5e8 <col:20> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x560a853eb540 <col:20> 'int' lvalue ParmVar 0x560a853e53b8 'length' 'int'
|     `-ImplicitCastExpr 0x560a853eb600 <col:28> 'String::memo_t *' <LValueToRValue>
|       `-DeclRefExpr 0x560a853eb560 <col:28> 'String::memo_t *' lvalue ParmVar 0x560a853e5430 'memo' 'String::memo_t *'
|-CXXMethodDecl 0x560a853e56a8 <line:267:5, line:269:5> line:267:17 used assign 'void (const String &) const' inline
| |-ParmVarDecl 0x560a853e55e8 <col:24, col:38> col:38 used x 'const String &'
| `-CompoundStmt 0x560a853eb870 <col:47, line:269:5>
|   `-CXXMemberCallExpr 0x560a853eb7f0 <line:268:2, col:47> 'void'
|     |-MemberExpr 0x560a853eb640 <col:2> '<bound member function type>' ->assign_memo 0x560a853e5268
|     | `-CXXThisExpr 0x560a853eb630 <col:2> 'const String *' implicit this
|     |-ImplicitCastExpr 0x560a853eb828 <col:14, col:19> 'const char *' <LValueToRValue>
|     | `-MemberExpr 0x560a853eb6c0 <col:14, col:19> 'const char *' lvalue .data 0x560a853e4eb0
|     |   `-MemberExpr 0x560a853eb690 <col:14, col:16> 'String::rep_t' lvalue ._r 0x560a853e5020
|     |     `-DeclRefExpr 0x560a853eb670 <col:14> 'const String' lvalue ParmVar 0x560a853e55e8 'x' 'const String &'
|     |-ImplicitCastExpr 0x560a853eb840 <col:25, col:30> 'int' <LValueToRValue>
|     | `-MemberExpr 0x560a853eb740 <col:25, col:30> 'int' lvalue .length 0x560a853e4f18
|     |   `-MemberExpr 0x560a853eb710 <col:25, col:27> 'String::rep_t' lvalue ._r 0x560a853e5020
|     |     `-DeclRefExpr 0x560a853eb6f0 <col:25> 'const String' lvalue ParmVar 0x560a853e55e8 'x' 'const String &'
|     `-ImplicitCastExpr 0x560a853eb858 <col:38, col:43> 'String::memo_t *' <LValueToRValue>
|       `-MemberExpr 0x560a853eb7c0 <col:38, col:43> 'String::memo_t *' lvalue .memo 0x560a853e4fa8
|         `-MemberExpr 0x560a853eb790 <col:38, col:40> 'String::rep_t' lvalue ._r 0x560a853e5020
|           `-DeclRefExpr 0x560a853eb770 <col:38> 'const String' lvalue ParmVar 0x560a853e55e8 'x' 'const String &'
|-CXXMethodDecl 0x560a853e5770 <line:271:5, line:278:5> line:271:17 used deref 'void () const' inline
| `-CompoundStmt 0x560a853ec230 <col:31, line:278:5>
|   `-IfStmt 0x560a853ec218 <line:272:2, line:277:2>
|     |-ImplicitCastExpr 0x560a853eb910 <line:272:6, col:9> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x560a853eb8f8 <col:6, col:9> 'String::memo_t *' <LValueToRValue>
|     |   `-MemberExpr 0x560a853eb8c8 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x560a853e4fa8
|     |     `-MemberExpr 0x560a853eb898 <col:6> 'String::rep_t' lvalue ->_r 0x560a853e5020
|     |       `-CXXThisExpr 0x560a853eb888 <col:6> 'const String *' implicit this
|     `-CompoundStmt 0x560a853ec1f0 <col:15, line:277:2>
|       |-ParenExpr 0x560a853ebdc0 <line:273:6, col:166> 'void'
|       | `-ConditionalOperator 0x560a853ebd90 <col:7, col:165> 'void'
|       |   |-CXXStaticCastExpr 0x560a853eba20 <col:7, col:44> 'bool' static_cast<_Bool> <NoOp>
|       |   | `-ImplicitCastExpr 0x560a853eba08 <col:27, col:36> 'bool' <IntegralToBoolean> part_of_explicit_cast
|       |   |   `-ImplicitCastExpr 0x560a853eb9f0 <col:27, col:36> 'uint32_t':'unsigned int' <LValueToRValue> part_of_explicit_cast
|       |   |     `-MemberExpr 0x560a853eb9b0 <col:27, col:36> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x560a853e4878
|       |   |       `-ImplicitCastExpr 0x560a853eb998 <col:27, col:30> 'String::memo_t *' <LValueToRValue>
|       |   |         `-MemberExpr 0x560a853eb968 <col:27, col:30> 'String::memo_t *' lvalue .memo 0x560a853e4fa8
|       |   |           `-MemberExpr 0x560a853eb938 <col:27> 'String::rep_t' lvalue ->_r 0x560a853e5020
|       |   |             `-CXXThisExpr 0x560a853eb928 <col:27> 'const String *' implicit this
|       |   |-CXXFunctionalCastExpr 0x560a853eba80 <col:48, col:55> 'void' functional cast to void <ToVoid>
|       |   | `-IntegerLiteral 0x560a853eba60 <col:54> 'int' 0
|       |   `-CallExpr 0x560a853ebcf0 <col:59, col:165> 'void'
|       |     |-ImplicitCastExpr 0x560a853ebcd8 <col:59> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x560a853ebc58 <col:59> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x560a8514aef0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|       |     |-ImplicitCastExpr 0x560a853ebd30 <col:74> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x560a853ebb68 <col:74> 'const char [18]' lvalue "_r.memo->refcount"
|       |     |-ImplicitCastExpr 0x560a853ebd48 <col:95> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x560a853ebb98 <col:95> 'const char [29]' lvalue "../dummy_inc/click/string.hh"
|       |     |-ImplicitCastExpr 0x560a853ebd60 <col:127> 'unsigned int' <IntegralCast>
|       |     | `-IntegerLiteral 0x560a853ebbd0 <col:127> 'int' 273
|       |     `-ImplicitCastExpr 0x560a853ebd78 <col:132, col:146> 'const char *' <ArrayToPointerDecay>
|       |       `-UnaryOperator 0x560a853ebc40 <col:132, col:146> 'const char [27]' lvalue prefix '__extension__' cannot overflow
|       |         `-PredefinedExpr 0x560a853ebc28 <col:146> 'const char [27]' lvalue __PRETTY_FUNCTION__
|       |           `-StringLiteral 0x560a853ebbf0 <col:146> 'const char [27]' lvalue "void String::deref() const"
|       |-IfStmt 0x560a853ec110 <line:274:6, line:275:22>
|       | |-CallExpr 0x560a853ebfd0 <line:274:10, col:57> 'bool'
|       | | |-ImplicitCastExpr 0x560a853ebfb8 <col:10, col:27> 'bool (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | | | `-DeclRefExpr 0x560a853ebf30 <col:10, col:27> 'bool (volatile uint32_t &)' lvalue CXXMethod 0x560a853d50e0 'dec_and_test' 'bool (volatile uint32_t &)'
|       | | `-MemberExpr 0x560a853ebf00 <col:40, col:49> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x560a853e4878
|       | |   `-ImplicitCastExpr 0x560a853ebee8 <col:40, col:43> 'String::memo_t *' <LValueToRValue>
|       | |     `-MemberExpr 0x560a853ebeb8 <col:40, col:43> 'String::memo_t *' lvalue .memo 0x560a853e4fa8
|       | |       `-MemberExpr 0x560a853ebe88 <col:40> 'String::rep_t' lvalue ->_r 0x560a853e5020
|       | |         `-CXXThisExpr 0x560a853ebe78 <col:40> 'const String *' implicit this
|       | `-CallExpr 0x560a853ec0d0 <line:275:3, col:22> 'void'
|       |   |-ImplicitCastExpr 0x560a853ec0b8 <col:3> 'void (*)(String::memo_t *)' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x560a853ebff8 <col:3> 'void (String::memo_t *)' lvalue CXXMethod 0x560a853e9f50 'delete_memo' 'void (String::memo_t *)'
|       |   `-ImplicitCastExpr 0x560a853ec0f8 <col:15, col:18> 'String::memo_t *' <LValueToRValue>
|       |     `-MemberExpr 0x560a853ec058 <col:15, col:18> 'String::memo_t *' lvalue .memo 0x560a853e4fa8
|       |       `-MemberExpr 0x560a853ec028 <col:15> 'String::rep_t' lvalue ->_r 0x560a853e5020
|       |         `-CXXThisExpr 0x560a853ec018 <col:15> 'const String *' implicit this
|       `-BinaryOperator 0x560a853ec1d0 <line:276:6, col:16> 'String::memo_t *' lvalue '='
|         |-MemberExpr 0x560a853ec168 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x560a853e4fa8
|         | `-MemberExpr 0x560a853ec138 <col:6> 'String::rep_t' lvalue ->_r 0x560a853e5020
|         |   `-CXXThisExpr 0x560a853ec128 <col:6> 'const String *' implicit this
|         `-ImplicitCastExpr 0x560a853ec1b8 <col:16> 'String::memo_t *' <NullToPointer>
|           `-IntegerLiteral 0x560a853ec198 <col:16> 'int' 0
|-CXXMethodDecl 0x560a853e5a08 <line:280:5, col:56> col:10 used assign 'void (const char *, int, bool)'
| |-ParmVarDecl 0x560a853e5828 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x560a853e58a8 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x560a853e5920 <col:41, col:46> col:46 need_deref 'bool'
|-CXXMethodDecl 0x560a853e5ae0 <line:281:5, col:31> col:10 assign_out_of_memory 'void ()'
|-CXXMethodDecl 0x560a853e5d30 <line:282:5, col:53> col:10 used append 'void (const char *, int, String::memo_t *)'
| |-ParmVarDecl 0x560a853e5b98 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x560a853e5c18 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x560a853e5c90 <col:41, col:49> col:49 memo 'String::memo_t *'
|-CXXMethodDecl 0x560a853e5f18 <line:283:5, col:58> col:19 used hard_make_stable 'String (const char *, int)' static
| |-ParmVarDecl 0x560a853e5e00 <col:36, col:48> col:48 s 'const char *'
| `-ParmVarDecl 0x560a853e5e80 <col:51, col:55> col:55 len 'int'
|-CXXMethodDecl 0x560a853e6018 <line:284:5, line:286:5> line:284:27 used absent_memo 'String::memo_t *()' static inline
| `-CompoundStmt 0x560a853ec308 <col:41, line:286:5>
|   `-ReturnStmt 0x560a853ec2f8 <line:285:2, col:48>
|     `-CXXReinterpretCastExpr 0x560a853ec2c8 <col:9, col:48> 'String::memo_t *' reinterpret_cast<struct String::memo_t *> <IntegralToPointer>
|       `-CXXFunctionalCastExpr 0x560a853ec290 <col:36, col:47> 'uintptr_t':'unsigned long' functional cast to uintptr_t <NoOp>
|         `-ImplicitCastExpr 0x560a853ec278 <col:46> 'uintptr_t':'unsigned long' <IntegralCast> part_of_explicit_cast
|           `-IntegerLiteral 0x560a853ec258 <col:46> 'int' 1
|-CXXMethodDecl 0x560a853e62b8 <line:287:5, col:68> col:20 create_memo 'String::memo_t *(char *, int, int)' static
| |-ParmVarDecl 0x560a853e60d0 <col:32, col:38> col:38 space 'char *'
| |-ParmVarDecl 0x560a853e6150 <col:45, col:49> col:49 dirty 'int'
| `-ParmVarDecl 0x560a853e61d0 <col:56, col:60> col:60 capacity 'int'
|-CXXMethodDecl 0x560a853e9f50 <line:288:5, col:41> col:17 used delete_memo 'void (String::memo_t *)' static
| `-ParmVarDecl 0x560a853e6380 <col:29, col:37> col:37 memo 'String::memo_t *'
|-CXXMethodDecl 0x560a853ea020 <line:289:5, col:30> col:17 hard_c_str 'const char *() const'
|-CXXMethodDecl 0x560a853ea1f0 <line:290:5, col:46> col:10 used hard_equals 'bool (const char *, int) const'
| |-ParmVarDecl 0x560a853ea0d8 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x560a853ea158 <col:37, col:41> col:41 len 'int'
|-VarDecl 0x560a853ea2b0 <line:292:5, col:23> col:23 used null_data 'const char' static
|-VarDecl 0x560a853ea378 <line:293:5, col:34> col:23 used oom_data 'const char [15]' static
|-VarDecl 0x560a853ea478 <line:294:5, col:34> col:23 int_data 'const char [20]' static
|-VarDecl 0x560a853ea4f0 <line:295:5, col:24> col:24 used null_string_rep 'const String::rep_t' static
|-VarDecl 0x560a853ea568 <line:296:5, col:24> col:24 used oom_string_rep 'const String::rep_t' static
|-EnumDecl 0x560a853ea5d0 <line:297:5, col:25> col:5
| `-EnumConstantDecl 0x560a853ea6d0 <col:12, col:22> col:12 referenced oom_len 'String::(anonymous enum at ../dummy_inc/click/string.hh:297:5)'
|   `-ImplicitCastExpr 0x560a853ea720 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x560a853ea6b0 <col:22> 'int' Int: 14
|       `-IntegerLiteral 0x560a853ea690 <col:22> 'int' 14
|-CXXMethodDecl 0x560a853ea938 <line:299:5, col:46> col:19 make_claim 'String (char *, int, int)' static
| |-ParmVarDecl 0x560a853ea750 <col:30, col:35> col:36 'char *'
| |-ParmVarDecl 0x560a853ea7d0 <col:38> col:41 'int'
| `-ParmVarDecl 0x560a853ea850 <col:43> col:46 'int'
|-FriendDecl 0x560a853eaa40 <line:301:5, col:19> col:12 'struct rep_t':'String::rep_t'
`-FriendDecl 0x560a853eaad0 <line:302:5, col:18> col:12 'class StringAccum':'StringAccum'

Layout: <CGRecordLayout
  LLVMType:%class.String = type { %"struct.String::rep_t" }
  NonVirtualBaseLLVMType:%class.String = type { %"struct.String::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>
