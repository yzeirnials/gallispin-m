
*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17)
         0 |   unsigned long long __wseq
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_internal_list
         0 |   struct __pthread_internal_list * __prev
         8 |   struct __pthread_internal_list * __next
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_mutex_s
         0 |   int __lock
         4 |   unsigned int __count
         8 |   int __owner
        12 |   unsigned int __nusers
        16 |   int __kind
        20 |   short __spins
        22 |   short __elision
        24 |   struct __pthread_internal_list __list
        24 |     struct __pthread_internal_list * __prev
        32 |     struct __pthread_internal_list * __next
           | [sizeof=40, dsize=40, align=8,
           |  nvsize=40, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17)
         0 |   unsigned long long __g1_start
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s
         0 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17) 
         0 |     unsigned long long __wseq
         0 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |       unsigned int __low
         4 |       unsigned int __high
         8 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17) 
         8 |     unsigned long long __g1_start
         8 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         8 |       unsigned int __low
        12 |       unsigned int __high
        16 |   unsigned int [2] __g_refs
        24 |   unsigned int [2] __g_size
        32 |   unsigned int __g1_orig_size
        36 |   unsigned int __wrefs
        40 |   unsigned int [2] __g_signals
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_rwlock_arch_t
         0 |   unsigned int __readers
         4 |   unsigned int __writers
         8 |   unsigned int __wrphase_futex
        12 |   unsigned int __writers_futex
        16 |   unsigned int __pad3
        20 |   unsigned int __pad4
        24 |   int __cur_writer
        28 |   int __shared
        32 |   signed char __rwelision
        33 |   unsigned char [7] __pad1
        40 |   unsigned long __pad2
        48 |   unsigned int __flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | lldiv_t
         0 |   long long quot
         8 |   long long rem
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct msghdr
         0 |   void * msg_name
         8 |   socklen_t msg_namelen
        16 |   struct iovec * msg_iov
        24 |   size_t msg_iovlen
        32 |   void * msg_control
        40 |   size_t msg_controllen
        48 |   int msg_flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | struct in_addr
         0 |   in_addr_t s_addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5)
         0 |   uint8_t [16] __u6_addr8
         0 |   uint16_t [8] __u6_addr16
         0 |   uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr
         0 |   sa_family_t sa_family
         2 |   char [14] sa_data
           | [sizeof=16, dsize=16, align=2,
           |  nvsize=16, nvalign=2]

*** Dumping AST Record Layout
         0 | struct in6_addr
         0 |   union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         0 |     uint8_t [16] __u6_addr8
         0 |     uint16_t [8] __u6_addr16
         0 |     uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr_storage
         0 |   sa_family_t ss_family
         2 |   char [118] __ss_padding
       120 |   unsigned long __ss_align
           | [sizeof=128, dsize=128, align=8,
           |  nvsize=128, nvalign=8]

*** Dumping AST Record Layout
         0 | struct sockaddr_in6
         0 |   sa_family_t sin6_family
         2 |   in_port_t sin6_port
         4 |   uint32_t sin6_flowinfo
         8 |   struct in6_addr sin6_addr
         8 |     union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         8 |       uint8_t [16] __u6_addr8
         8 |       uint16_t [8] __u6_addr16
         8 |       uint32_t [4] __u6_addr32
        24 |   uint32_t sin6_scope_id
           | [sizeof=28, dsize=28, align=4,
           |  nvsize=28, nvalign=4]

*** Dumping AST Record Layout
         0 | struct timeval
         0 |   __time_t tv_sec
         8 |   __suseconds_t tv_usec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::memo_t
         0 |   volatile uint32_t refcount
         4 |   uint32_t capacity
         8 |   volatile uint32_t dirty
        12 |   char [8] real_data
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping AST Record Layout
         0 | class IPAddress
         0 |   uint32_t _addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Timestamp::rep_t
         0 |   int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timestamp
         0 |   union Timestamp::rep_t _t
         0 |     int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct timespec
         0 |   __time_t tv_sec
         8 |   __syscall_slong_t tv_nsec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element::Port
         0 |   class Element * _e
         8 |   int _port
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::rep_t
         0 |   const char * data
         8 |   int length
        16 |   struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class String
         0 |   struct String::rep_t _r
         0 |     const char * data
         8 |     int length
        16 |     struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | struct TimerSet::heap_element
         0 |   class Timestamp expiry_s
         0 |     union Timestamp::rep_t _t
         0 |       int64_t x
         8 |   class Timer * t
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct pollfd
         0 |   int fd
         4 |   short events
         6 |   short revents
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | struct SelectSet::SelectorInfo
         0 |   class Element * read
         8 |   class Element * write
        16 |   int pollfd
           | [sizeof=24, dsize=20, align=8,
           |  nvsize=20, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Router::Port
         0 |   int idx
         4 |   int port
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | struct Router::element_landmark_t
         0 |   uint32_t first_landmarkid
         8 |   class String filename
         8 |     struct String::rep_t _r
         8 |       const char * data
        16 |       int length
        24 |       struct String::memo_t * memo
           | [sizeof=32, dsize=32, align=8,
           |  nvsize=32, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<4> >
         0 |   vector_memory<class sized_array_memory<4> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<int>
         0 |   class vector_memory<class sized_array_memory<4> > vm_
         0 |     vector_memory<class sized_array_memory<4> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Router::Connection
         0 |   struct Router::Port [2] p
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | class atomic_uint32_t
         0 |   uint32_t _val
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | class Element
         0 |   (Element vtable pointer)
         8 |   class Element::Port *[2] _ports
        24 |   class Element::Port [4] _inline_ports
        88 |   int [2] _nports
        96 |   class Router * _router
       104 |   int _eindex
           | [sizeof=112, dsize=108, align=8,
           |  nvsize=108, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563f2ea24128 prev 0x563f2ea1b8c8 <../dummy_inc/click/element.hh:214:5, line:252:5> line:214:11 referenced class Port definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x563f2ea24220 <col:5, col:11> col:11 implicit referenced class Port
|-AccessSpecDecl 0x563f2ea242b0 <col:18, col:24> col:18 public
|-CXXMethodDecl 0x563f2ea24328 <line:216:9, col:30> col:21 used active 'bool () const' inline
|-CXXMethodDecl 0x563f2ea243e8 <line:217:9, col:35> col:25 element 'Element *() const' inline
|-CXXMethodDecl 0x563f2ea244b0 <line:218:9, col:27> col:20 port 'int () const' inline
|-CXXMethodDecl 0x563f2ea24628 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| |-ParmVarDecl 0x563f2ea24560 <col:54, col:62> col:62 p 'Packet *'
| |-NoInlineAttr 0x563f2ea246d0 <col:24>
| `-OptimizeNoneAttr 0x563f2ea24728 <col:34>
|-CXXMethodDecl 0x563f2ea24770 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
|-CXXMethodDecl 0x563f2ea24a28 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| |-ParmVarDecl 0x563f2ea24820 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x563f2ea24898 <col:43, col:52> col:52 e 'Element *'
| `-ParmVarDecl 0x563f2ea24918 <col:55, col:59> col:59 port 'int'
|-AccessSpecDecl 0x563f2ea24ae0 <line:229:7, col:14> col:7 private
|-FieldDecl 0x563f2ea24b18 <line:231:9, col:18> col:18 referenced _e 'Element *'
|-FieldDecl 0x563f2ea24b80 <line:232:9, col:13> col:13 referenced _port 'int'
|-CXXConstructorDecl 0x563f2ea24c08 <line:247:9, col:21> col:16 Port 'void ()' inline
|-CXXMethodDecl 0x563f2ea24f28 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| |-ParmVarDecl 0x563f2ea24cc0 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x563f2ea24d38 <col:43, col:52> col:52 owner 'Element *'
| |-ParmVarDecl 0x563f2ea24db0 <col:59, col:68> col:68 e 'Element *'
| `-ParmVarDecl 0x563f2ea24e30 <col:71, col:75> col:75 port 'int'
|-FriendDecl 0x563f2ea25040 <line:250:9, col:22> col:16 'class Element':'Element'
|-CXXConstructorDecl 0x563f2ea2c9b8 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x563f2ea2c9b8
| `-ParmVarDecl 0x563f2ea2cac8 <col:11> col:11 'const Element::Port &'
|-CXXConstructorDecl 0x563f2ea2cb68 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x563f2ea2cb68
| `-ParmVarDecl 0x563f2ea2cc78 <col:11> col:11 'Element::Port &&'
`-CXXDestructorDecl 0x563f2ebfd110 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"class.Element::Port" = type <{ %class.Element*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%"class.Element::Port.base" = type <{ %class.Element*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<8> >
         0 |   vector_memory<class sized_array_memory<8> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class Element *>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class typed_array_memory<class String> >
         0 |   vector_memory<class typed_array_memory<class String> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class String>
         0 |   class vector_memory<class typed_array_memory<class String> > vm_
         0 |     vector_memory<class typed_array_memory<class String> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<unsigned int>
         0 |   class vector_memory<class sized_array_memory<4> > vm_
         0 |     vector_memory<class sized_array_memory<4> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class typed_array_memory<struct Router::element_landmark_t> >
         0 |   vector_memory<class typed_array_memory<struct Router::element_landmark_t> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct Router::element_landmark_t>
         0 |   class vector_memory<class typed_array_memory<struct Router::element_landmark_t> > vm_
         0 |     vector_memory<class typed_array_memory<struct Router::element_landmark_t> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<16> >
         0 |   vector_memory<class sized_array_memory<16> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct Router::Connection>
         0 |   class vector_memory<class sized_array_memory<16> > vm_
         0 |     vector_memory<class sized_array_memory<16> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<void *>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Router
         0 |   class Master * _master
         8 |   class atomic_uint32_t _runcount
         8 |     uint32_t _val
        12 |   volatile int _state
    16:0-0 |   _Bool _have_connections
    16:1-1 |   _Bool _conn_sorted
    16:2-2 |   _Bool _have_configuration
        20 |   volatile int _running
        24 |   class atomic_uint32_t _refcount
        24 |     uint32_t _val
        32 |   class Vector<class Element *> _elements
        32 |     class vector_memory<class sized_array_memory<8> > vm_
        32 |       vector_memory<class sized_array_memory<8> >::type * l_
        40 |       vector_memory::size_type n_
        44 |       vector_memory::size_type capacity_
        48 |   class Vector<class String> _element_names
        48 |     class vector_memory<class typed_array_memory<class String> > vm_
        48 |       vector_memory<class typed_array_memory<class String> >::type * l_
        56 |       vector_memory::size_type n_
        60 |       vector_memory::size_type capacity_
        64 |   class Vector<class String> _element_configurations
        64 |     class vector_memory<class typed_array_memory<class String> > vm_
        64 |       vector_memory<class typed_array_memory<class String> >::type * l_
        72 |       vector_memory::size_type n_
        76 |       vector_memory::size_type capacity_
        80 |   class Vector<unsigned int> _element_landmarkids
        80 |     class vector_memory<class sized_array_memory<4> > vm_
        80 |       vector_memory<class sized_array_memory<4> >::type * l_
        88 |       vector_memory::size_type n_
        92 |       vector_memory::size_type capacity_
        96 |   class Vector<int> _element_home_thread_ids
        96 |     class vector_memory<class sized_array_memory<4> > vm_
        96 |       vector_memory<class sized_array_memory<4> >::type * l_
       104 |       vector_memory::size_type n_
       108 |       vector_memory::size_type capacity_
       112 |   class Vector<struct Router::element_landmark_t> _element_landmarks
       112 |     class vector_memory<class typed_array_memory<struct Router::element_landmark_t> > vm_
       112 |       vector_memory<class typed_array_memory<struct Router::element_landmark_t> >::type * l_
       120 |       vector_memory::size_type n_
       124 |       vector_memory::size_type capacity_
       128 |   uint32_t _last_landmarkid
       136 |   class Vector<int> _element_name_sorter
       136 |     class vector_memory<class sized_array_memory<4> > vm_
       136 |       vector_memory<class sized_array_memory<4> >::type * l_
       144 |       vector_memory::size_type n_
       148 |       vector_memory::size_type capacity_
       152 |   Vector<int> [2] _element_gport_offset
       184 |   class Vector<int> _element_configure_order
       184 |     class vector_memory<class sized_array_memory<4> > vm_
       184 |       vector_memory<class sized_array_memory<4> >::type * l_
       192 |       vector_memory::size_type n_
       196 |       vector_memory::size_type capacity_
       200 |   class Vector<struct Router::Connection> _conn
       200 |     class vector_memory<class sized_array_memory<16> > vm_
       200 |       vector_memory<class sized_array_memory<16> >::type * l_
       208 |       vector_memory::size_type n_
       212 |       vector_memory::size_type capacity_
       216 |   class Vector<int> _conn_output_sorter
       216 |     class vector_memory<class sized_array_memory<4> > vm_
       216 |       vector_memory<class sized_array_memory<4> >::type * l_
       224 |       vector_memory::size_type n_
       228 |       vector_memory::size_type capacity_
       232 |   class Vector<class String> _requirements
       232 |     class vector_memory<class typed_array_memory<class String> > vm_
       232 |       vector_memory<class typed_array_memory<class String> >::type * l_
       240 |       vector_memory::size_type n_
       244 |       vector_memory::size_type capacity_
       248 |   class Vector<int> _ehandler_first_by_element
       248 |     class vector_memory<class sized_array_memory<4> > vm_
       248 |       vector_memory<class sized_array_memory<4> >::type * l_
       256 |       vector_memory::size_type n_
       260 |       vector_memory::size_type capacity_
       264 |   class Vector<int> _ehandler_to_handler
       264 |     class vector_memory<class sized_array_memory<4> > vm_
       264 |       vector_memory<class sized_array_memory<4> >::type * l_
       272 |       vector_memory::size_type n_
       276 |       vector_memory::size_type capacity_
       280 |   class Vector<int> _ehandler_next
       280 |     class vector_memory<class sized_array_memory<4> > vm_
       280 |       vector_memory<class sized_array_memory<4> >::type * l_
       288 |       vector_memory::size_type n_
       292 |       vector_memory::size_type capacity_
       296 |   class Vector<int> _handler_first_by_name
       296 |     class vector_memory<class sized_array_memory<4> > vm_
       296 |       vector_memory<class sized_array_memory<4> >::type * l_
       304 |       vector_memory::size_type n_
       308 |       vector_memory::size_type capacity_
       312 |   class Handler ** _handler_bufs
       320 |   int _nhandlers_bufs
       324 |   int _free_handler
       328 |   class Vector<class String> _attachment_names
       328 |     class vector_memory<class typed_array_memory<class String> > vm_
       328 |       vector_memory<class typed_array_memory<class String> >::type * l_
       336 |       vector_memory::size_type n_
       340 |       vector_memory::size_type capacity_
       344 |   class Vector<void *> _attachments
       344 |     class vector_memory<class sized_array_memory<8> > vm_
       344 |       vector_memory<class sized_array_memory<8> >::type * l_
       352 |       vector_memory::size_type n_
       356 |       vector_memory::size_type capacity_
       360 |   class Element * _root_element
       368 |   class String _configuration
       368 |     struct String::rep_t _r
       368 |       const char * data
       376 |       int length
       384 |       struct String::memo_t * memo
       392 |   struct Router::notifier_signals_t * _notifier_signals
       400 |   class HashMap_ArenaFactory * _arena_factory
       408 |   class Router * _hotswap_router
       416 |   class ThreadSched * _thread_sched
       424 |   class NameInfo * _name_info
       432 |   class Vector<int> _flow_code_override_eindex
       432 |     class vector_memory<class sized_array_memory<4> > vm_
       432 |       vector_memory<class sized_array_memory<4> >::type * l_
       440 |       vector_memory::size_type n_
       444 |       vector_memory::size_type capacity_
       448 |   class Vector<class String> _flow_code_override
       448 |     class vector_memory<class typed_array_memory<class String> > vm_
       448 |       vector_memory<class typed_array_memory<class String> >::type * l_
       456 |       vector_memory::size_type n_
       460 |       vector_memory::size_type capacity_
       464 |   class Router * _next_router
           | [sizeof=472, dsize=472, align=8,
           |  nvsize=472, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563f2e7d5bf0 <../dummy_inc/click/atomic.hh:52:1, line:94:1> line:52:7 referenced class atomic_uint32_t definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x563f2e7d5d08 <col:1, col:7> col:7 implicit referenced class atomic_uint32_t
|-AccessSpecDecl 0x563f2e7d5d98 <col:25, col:31> col:25 public
|-CXXMethodDecl 0x563f2e7d5e68 <line:57:5, col:29> col:21 used value 'uint32_t () const' inline
|-CXXConversionDecl 0x563f2e7d5f50 <line:58:5, col:32> col:12 operator unsigned int 'uint32_t () const' inline
|-CXXMethodDecl 0x563f2e7d6168 <line:60:5, col:49> col:29 used operator= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x563f2e7d6010 <col:39, col:48> col:48 x 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x563f2e7d6318 <line:62:5, col:53> col:29 operator+= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x563f2e7d6220 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x563f2e7d6460 <line:63:5, col:53> col:29 operator-= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x563f2e7d63d0 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x563f2e7d65a8 <line:64:5, col:53> col:29 operator|= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x563f2e7d6518 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x563f2e7d66f0 <line:65:5, col:53> col:29 operator&= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x563f2e7d6660 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x563f2e7d67b8 <line:67:5, col:28> col:17 used operator++ 'void ()' inline
|-CXXMethodDecl 0x563f2e7d6900 <line:68:5, col:31> col:17 used operator++ 'void (int)' inline
| `-ParmVarDecl 0x563f2e7d6870 <col:28> col:31 'int'
|-CXXMethodDecl 0x563f2e7d69c8 <line:69:5, col:28> col:17 used operator-- 'void ()' inline
|-CXXMethodDecl 0x563f2e7d6b10 <line:70:5, col:31> col:17 operator-- 'void (int)' inline
| `-ParmVarDecl 0x563f2e7d6a80 <col:28> col:31 'int'
|-CXXMethodDecl 0x563f2e7d6c88 <line:72:5, col:42> col:21 swap 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x563f2e7d6bc8 <col:26, col:35> col:35 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x563f2e7d6dd0 <line:73:5, col:49> col:21 fetch_and_add 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x563f2e7d6d40 <col:35, col:44> col:44 delta 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x563f2e7d6e98 <line:74:5, col:30> col:17 dec_and_test 'bool ()' inline
|-CXXMethodDecl 0x563f2e7d7058 <line:75:5, col:69> col:21 used compare_swap 'uint32_t (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x563f2e7d6f48 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x563f2e7d6fc0 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x563f2e7d72a8 <line:76:5, col:97> col:17 compare_and_swap 'bool (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x563f2e7d7118 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x563f2e7d7190 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x563f2e7d7358 <col:86> "" ""
|-CXXMethodDecl 0x563f2e7d75c8 <line:78:5, col:71> col:28 used swap 'uint32_t (volatile uint32_t &, uint32_t)' static inline
| |-ParmVarDecl 0x563f2e7d7438 <col:33, col:52> col:52 x 'volatile uint32_t &'
| `-ParmVarDecl 0x563f2e7d74b0 <col:55, col:64> col:64 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x563f2e7d7778 <line:79:5, col:48> col:24 used inc 'void (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x563f2e7d7688 <col:28, col:47> col:47 x 'volatile uint32_t &'
|-CXXMethodDecl 0x563f2e7d7928 <line:80:5, col:57> col:24 used dec_and_test 'bool (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x563f2e7d7830 <col:37, col:56> col:56 x 'volatile uint32_t &'
|-CXXMethodDecl 0x563f2e7d7bf8 <line:81:5, col:98> col:28 compare_swap 'uint32_t (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x563f2e7d79e0 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x563f2e7d7a58 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x563f2e7d7ad0 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x563f2e7d7ed8 <line:82:5, col:126> col:24 compare_and_swap 'bool (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x563f2e7d7cc0 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x563f2e7d7d38 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x563f2e7d7db0 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x563f2e7d7f90 <col:115> "" ""
|-AccessSpecDecl 0x563f2e7d8000 <line:84:3, col:10> col:3 private
|-FieldDecl 0x563f2e7d8038 <line:91:5, col:14> col:14 referenced _val 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x563f2e7d8540 <line:52:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x563f2e7d8540
| `-ParmVarDecl 0x563f2e7d8648 <col:7> col:7 'const atomic_uint32_t &'
|-CXXMethodDecl 0x563f2e7d86e8 <col:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x563f2e7d86e8
| `-ParmVarDecl 0x563f2e7d87f8 <col:7> col:7 'atomic_uint32_t &&'
|-CXXConstructorDecl 0x563f2e80de28 <col:7> col:7 implicit used atomic_uint32_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x563f2ea00c30 <col:7>
|-CXXConstructorDecl 0x563f2e80df00 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x563f2e80df00
| `-ParmVarDecl 0x563f2e80e018 <col:7> col:7 'const atomic_uint32_t &'
|-CXXConstructorDecl 0x563f2e80e088 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x563f2e80e088
| `-ParmVarDecl 0x563f2e80e198 <col:7> col:7 'atomic_uint32_t &&'
`-CXXDestructorDecl 0x563f2ea03630 <col:7> col:7 implicit referenced ~atomic_uint32_t 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.atomic_uint32_t = type { i32 }
  NonVirtualBaseLLVMType:%class.atomic_uint32_t = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x563f2eb44d70 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<8>'
|-CXXRecordDecl 0x563f2eb44f48 prev 0x563f2eb44d70 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x563f2eb44fd8 <col:46, col:52> col:46 public
|-TypedefDecl 0x563f2eb45000 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x563f2e4b1580 'int'
|-TypedefDecl 0x563f2eb46bf0 <line:13:5, col:31> col:31 type 'typename sized_array_memory<8>::type':'char_array<8>'
| `-ElaboratedType 0x563f2eb46ba0 'typename sized_array_memory<8>::type' sugar
|   `-TypedefType 0x563f2eb454b0 'sized_array_memory<8>::type' sugar
|     |-Typedef 0x563f2eb453b0 'type'
|     `-TemplateSpecializationType 0x563f2eb45340 'char_array<8UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x563f2eb45220 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 8
|       |   `-SubstNonTypeTemplateParmExpr 0x563f2eb45200 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x563f2eb451e0 <col:24> 'unsigned long' 8
|       `-RecordType 0x563f2eb45320 'char_array<8>'
|         `-ClassTemplateSpecialization 0x563f2eb45240 'char_array'
|-TypedefDecl 0x563f2eb46ca8 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<8> >::type *'
| `-PointerType 0x563f2eb46c70 'vector_memory<sized_array_memory<8> >::type *'
|   `-TypedefType 0x563f2eb46c50 'vector_memory<sized_array_memory<8> >::type' sugar
|     |-Typedef 0x563f2eb46bf0 'type'
|     `-ElaboratedType 0x563f2eb46ba0 'typename sized_array_memory<8>::type' sugar
|       `-TypedefType 0x563f2eb454b0 'sized_array_memory<8>::type' sugar
|         |-Typedef 0x563f2eb453b0 'type'
|         `-TemplateSpecializationType 0x563f2eb45340 'char_array<8UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x563f2eb45220 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 8
|           |   `-SubstNonTypeTemplateParmExpr 0x563f2eb45200 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x563f2eb451e0 <col:24> 'unsigned long' 8
|           `-RecordType 0x563f2eb45320 'char_array<8>'
|             `-ClassTemplateSpecialization 0x563f2eb45240 'char_array'
|-CXXMethodDecl 0x563f2eb46e28 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<8> >::type *) const' inline
| `-ParmVarDecl 0x563f2eb46d38 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXConstructorDecl 0x563f2eb46f18 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x563f2eb46ff8 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x563f2eb46ff8
|-CXXMethodDecl 0x563f2eb472c8 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<8> > &)'
| `-ParmVarDecl 0x563f2eb471d0 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<8> > &'
|-CXXMethodDecl 0x563f2eb47508 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x563f2eb47380 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x563f2eb473f8 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x563f2eb476d8 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x563f2eb475c8 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x563f2eb47640 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x563f2eb47838 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<8> >::iterator ()'
|-CXXMethodDecl 0x563f2eb47908 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<8> >::iterator ()'
|-CXXMethodDecl 0x563f2eb47b58 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<8> >::iterator (vector_memory<sized_array_memory<8> >::iterator, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x563f2eb479c8 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
| `-ParmVarDecl 0x563f2eb47a40 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x563f2eb47db8 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<8> >::iterator (vector_memory<sized_array_memory<8> >::iterator, vector_memory<sized_array_memory<8> >::iterator)'
| |-ParmVarDecl 0x563f2eb47c28 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
| `-ParmVarDecl 0x563f2eb47ca0 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x563f2eb47f78 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<8> >::type *)' inline
| `-ParmVarDecl 0x563f2eb47e88 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x563f2eb48138 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<8> >::type *)' inline
| `-ParmVarDecl 0x563f2eb48040 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x563f2eb481f0 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x563f2eb482a0 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x563f2eb484d8 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x563f2eb48350 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x563f2eb483c8 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x563f2eb48778 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<8> > &)'
| `-ParmVarDecl 0x563f2eb48680 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<8> > &'
|-FieldDecl 0x563f2eb48840 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<8> >::type *'
|-FieldDecl 0x563f2eb48890 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x563f2eb488e0 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory = type { %struct.char_array*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory = type { %struct.char_array*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x563f2eb94198 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Element *'
|-CXXRecordDecl 0x563f2eb9fbd8 prev 0x563f2eb94198 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x563f2eba0bf0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<Element *>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x563f2eba0ba0 'typename array_memory<Element *>::type' sugar
|   `-TypedefType 0x563f2eba0b80 'conditional<true, sized_array_memory<8>, typed_array_memory<Element *> >::type' sugar
|     |-Typedef 0x563f2eba0a30 'type'
|     `-SubstTemplateTypeParmType 0x563f2eb44940 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x563f2e77b200 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563f2e77b1a8 'T'
|       `-RecordType 0x563f2eb44490 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x563f2eb443a8 'sized_array_memory'
|-FieldDecl 0x563f2eba0cf0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Element *>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x563f2eba0d40 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x563f2eba0d78 <line:118:5, col:15> col:15 value_type 'Element *':'Element *'
| `-SubstTemplateTypeParmType 0x563f2eb9fc70 'Element *' sugar
|   |-TemplateTypeParmType 0x563f2e7b3110 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x563f2e7b30b8 'T'
|   `-PointerType 0x563f2ea0d670 'Element *'
|     `-RecordType 0x563f2ea0d3f0 'Element'
|       `-CXXRecord 0x563f2ea17140 'Element'
|-TypedefDecl 0x563f2eba0e08 <line:119:5, col:16> col:16 reference 'Element *&'
| `-LValueReferenceType 0x563f2eba0dd0 'Element *&'
|   `-SubstTemplateTypeParmType 0x563f2eb9fc70 'Element *' sugar
|     |-TemplateTypeParmType 0x563f2e7b3110 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x563f2e7b30b8 'T'
|     `-PointerType 0x563f2ea0d670 'Element *'
|       `-RecordType 0x563f2ea0d3f0 'Element'
|         `-CXXRecord 0x563f2ea17140 'Element'
|-TypedefDecl 0x563f2eba0ec8 <line:120:5, col:22> col:22 const_reference 'Element *const &'
| `-LValueReferenceType 0x563f2eba0e90 'Element *const &'
|   `-QualType 0x563f2eb9fc71 'Element *const' const
|     `-SubstTemplateTypeParmType 0x563f2eb9fc70 'Element *' sugar
|       |-TemplateTypeParmType 0x563f2e7b3110 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563f2e7b30b8 'T'
|       `-PointerType 0x563f2ea0d670 'Element *'
|         `-RecordType 0x563f2ea0d3f0 'Element'
|           `-CXXRecord 0x563f2ea17140 'Element'
|-TypedefDecl 0x563f2eba0f58 <line:121:5, col:16> col:16 pointer 'Element **'
| `-PointerType 0x563f2eba0f20 'Element **'
|   `-SubstTemplateTypeParmType 0x563f2eb9fc70 'Element *' sugar
|     |-TemplateTypeParmType 0x563f2e7b3110 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x563f2e7b30b8 'T'
|     `-PointerType 0x563f2ea0d670 'Element *'
|       `-RecordType 0x563f2ea0d3f0 'Element'
|         `-CXXRecord 0x563f2ea17140 'Element'
|-TypedefDecl 0x563f2eba1018 <line:122:5, col:22> col:22 const_pointer 'Element *const *'
| `-PointerType 0x563f2eba0fe0 'Element *const *'
|   `-QualType 0x563f2eb9fc71 'Element *const' const
|     `-SubstTemplateTypeParmType 0x563f2eb9fc70 'Element *' sugar
|       |-TemplateTypeParmType 0x563f2e7b3110 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563f2e7b30b8 'T'
|       `-PointerType 0x563f2ea0d670 'Element *'
|         `-RecordType 0x563f2ea0d3f0 'Element'
|           `-CXXRecord 0x563f2ea17140 'Element'
|-TypedefDecl 0x563f2eba1bf0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<Element *>::type':'Element *'
| `-ElaboratedType 0x563f2eba1ba0 'typename fast_argument<Element *>::type' sugar
|   `-TypedefType 0x563f2eba1b80 'fast_argument<Element *, false>::type' sugar
|     |-Typedef 0x563f2eba1b10 'type'
|     `-SubstTemplateTypeParmType 0x563f2eba18d0 'Element *' sugar
|       |-TemplateTypeParmType 0x563f2e786000 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563f2e785fb0 'T'
|       `-PointerType 0x563f2ea0d670 'Element *'
|         `-RecordType 0x563f2ea0d3f0 'Element'
|           `-CXXRecord 0x563f2ea17140 'Element'
|-TypedefDecl 0x563f2eba1c58 <line:126:5, col:22> col:22 const_access_type 'Element *const &'
| `-LValueReferenceType 0x563f2eba0e90 'Element *const &'
|   `-QualType 0x563f2eb9fc71 'Element *const' const
|     `-SubstTemplateTypeParmType 0x563f2eb9fc70 'Element *' sugar
|       |-TemplateTypeParmType 0x563f2e7b3110 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563f2e7b30b8 'T'
|       `-PointerType 0x563f2ea0d670 'Element *'
|         `-RecordType 0x563f2ea0d3f0 'Element'
|           `-CXXRecord 0x563f2ea17140 'Element'
|-TypedefDecl 0x563f2eba1cb0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x563f2e4b1580 'int'
|-TypedefDecl 0x563f2eba1d18 <line:130:5, col:16> col:16 iterator 'Element **'
| `-PointerType 0x563f2eba0f20 'Element **'
|   `-SubstTemplateTypeParmType 0x563f2eb9fc70 'Element *' sugar
|     |-TemplateTypeParmType 0x563f2e7b3110 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x563f2e7b30b8 'T'
|     `-PointerType 0x563f2ea0d670 'Element *'
|       `-RecordType 0x563f2ea0d3f0 'Element'
|         `-CXXRecord 0x563f2ea17140 'Element'
|-TypedefDecl 0x563f2eba1d80 <line:131:5, col:22> col:22 const_iterator 'Element *const *'
| `-PointerType 0x563f2eba0fe0 'Element *const *'
|   `-QualType 0x563f2eb9fc71 'Element *const' const
|     `-SubstTemplateTypeParmType 0x563f2eb9fc70 'Element *' sugar
|       |-TemplateTypeParmType 0x563f2e7b3110 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563f2e7b30b8 'T'
|       `-PointerType 0x563f2ea0d670 'Element *'
|         `-RecordType 0x563f2ea0d3f0 'Element'
|           `-CXXRecord 0x563f2ea17140 'Element'
|-EnumDecl 0x563f2eba1dd8 <line:134:5> col:5
| `-EnumConstantDecl 0x563f2eba1ed0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Element *>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x563f2eba1eb0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x563f2e7b4798 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x563f2e7b4770 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x563f2e7b4750 <col:40> 'int' 1
|-CXXConstructorDecl 0x563f2eba1f58 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x563f2eba21e8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Element *>::value_argument_type)' inline
| |-ParmVarDecl 0x563f2eba2010 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x563f2eba20b0 <col:41, col:61> col:61 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXConstructorDecl 0x563f2eba2478 <line:139:5, col:37> col:12 Vector 'void (const Vector<Element *> &)' inline
| `-ParmVarDecl 0x563f2eba2360 <col:19, col:36> col:36 x 'const Vector<Element *> &'
|-CXXConstructorDecl 0x563f2eba85b8 <line:141:5, col:32> col:12 Vector 'void (Vector<Element *> &&)' inline
| `-ParmVarDecl 0x563f2eba2620 <col:19, col:31> col:31 x 'Vector<Element *> &&'
|-CXXMethodDecl 0x563f2eba88d0 <line:144:5, col:51> col:23 operator= 'Vector<Element *> &(const Vector<Element *> &)' inline
| `-ParmVarDecl 0x563f2eba87b0 <col:33, col:50> col:50 x 'const Vector<Element *> &'
|-CXXMethodDecl 0x563f2eba8be0 <line:146:5, col:46> col:23 operator= 'Vector<Element *> &(Vector<Element *> &&)' inline
| `-ParmVarDecl 0x563f2eba8ac0 <col:33, col:45> col:45 x 'Vector<Element *> &&'
|-CXXMethodDecl 0x563f2eba8ed0 <line:148:5, col:70> col:23 assign 'Vector<Element *> &(Vector::size_type, Vector<Element *>::value_argument_type)' inline
| |-ParmVarDecl 0x563f2eba8d18 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x563f2eba8d90 <col:43, col:69> col:63 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXMethodDecl 0x563f2eba9028 <line:150:5, col:55> col:49 begin 'Vector<Element *>::iterator ()'
| |-NoInlineAttr 0x563f2eba9108 <col:20> Inherited
| `-OptimizeNoneAttr 0x563f2eba9160 <col:30> Inherited
|-CXXMethodDecl 0x563f2eba91a8 <line:151:5, col:53> col:49 end 'Vector<Element *>::iterator ()'
| |-NoInlineAttr 0x563f2eba9258 <col:20> Inherited
| `-OptimizeNoneAttr 0x563f2eba92b0 <col:30> Inherited
|-CXXMethodDecl 0x563f2eba9378 <line:152:5, col:63> col:55 begin 'Vector<Element *>::const_iterator () const'
| |-NoInlineAttr 0x563f2eba9428 <col:20> Inherited
| `-OptimizeNoneAttr 0x563f2eba9480 <col:30> Inherited
|-CXXMethodDecl 0x563f2eba94c8 <line:153:5, col:61> col:55 end 'Vector<Element *>::const_iterator () const'
| |-NoInlineAttr 0x563f2eba9578 <col:20> Inherited
| `-OptimizeNoneAttr 0x563f2eba95d0 <col:30> Inherited
|-CXXMethodDecl 0x563f2eba9618 <line:154:5, col:64> col:55 cbegin 'Vector<Element *>::const_iterator () const'
| |-NoInlineAttr 0x563f2eba96c8 <col:20> Inherited
| `-OptimizeNoneAttr 0x563f2eba9720 <col:30> Inherited
|-CXXMethodDecl 0x563f2eba9768 <line:155:5, col:62> col:55 cend 'Vector<Element *>::const_iterator () const'
| |-NoInlineAttr 0x563f2eba9818 <col:20> Inherited
| `-OptimizeNoneAttr 0x563f2eba9870 <col:30> Inherited
|-CXXMethodDecl 0x563f2eba9898 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x563f2eba9948 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x563f2eba99f8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x563f2eba9bb8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Element *>::value_argument_type)' inline
| |-ParmVarDecl 0x563f2eba9aa8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x563f2eba9b20 <col:37, col:63> col:57 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXMethodDecl 0x563f2eba9d08 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x563f2eba9c78 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x563f2eba9eb8 <line:163:5, col:65> col:43 operator[] 'Element *&(Vector::size_type)'
| |-ParmVarDecl 0x563f2eba9dc0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x563f2eba9f70 <col:20>
| `-OptimizeNoneAttr 0x563f2eba9fc8 <col:30>
|-CXXMethodDecl 0x563f2ebaa0e8 <line:164:5, col:73> col:49 operator[] 'Element *const &(Vector::size_type) const'
| |-ParmVarDecl 0x563f2eba9ff0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x563f2ebaa1a0 <col:20>
| `-OptimizeNoneAttr 0x563f2ebaa1f8 <col:30>
|-CXXMethodDecl 0x563f2ebaa2b0 <line:165:5, col:29> col:15 at 'Element *&(Vector::size_type)' inline
| `-ParmVarDecl 0x563f2ebaa220 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x563f2ebaa3f8 <line:166:5, col:37> col:21 at 'Element *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x563f2ebaa368 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x563f2ebaa528 <line:167:5, col:21> col:15 front 'Element *&()' inline
|-CXXMethodDecl 0x563f2ebaa658 <line:168:5, col:29> col:21 front 'Element *const &() const' inline
|-CXXMethodDecl 0x563f2ebaa728 <line:169:5, col:20> col:15 back 'Element *&()' inline
|-CXXMethodDecl 0x563f2ebaa7f8 <line:170:5, col:28> col:21 back 'Element *const &() const' inline
|-CXXMethodDecl 0x563f2ebaa938 <line:172:5, col:39> col:15 unchecked_at 'Element *&(Vector::size_type)' inline
| `-ParmVarDecl 0x563f2ebaa8a8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x563f2ebaaa80 <line:173:5, col:47> col:21 unchecked_at 'Element *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x563f2ebaa9f0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x563f2ebaabc8 <line:174:5, col:59> col:15 at_u 'Element *&(Vector::size_type)' inline
| |-ParmVarDecl 0x563f2ebaab38 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x563f2ebaac80 <col:48> Inherited "" ""
|-CXXMethodDecl 0x563f2ebaad80 <line:175:5, col:71> col:21 at_u 'Element *const &(Vector::size_type) const' inline
| |-ParmVarDecl 0x563f2ebaacf0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x563f2ebaae38 <col:60> Inherited "" ""
|-CXXMethodDecl 0x563f2ebaaef8 <line:177:5, col:20> col:15 data 'Element **()' inline
|-CXXMethodDecl 0x563f2ebaaff8 <line:178:5, col:28> col:21 data 'Element *const *() const' inline
|-CXXMethodDecl 0x563f2ebab178 <line:180:5, col:48> col:17 push_back 'void (Vector<Element *>::value_argument_type)' inline
| `-ParmVarDecl 0x563f2ebab0b8 <col:27, col:47> col:47 v 'Vector<Element *>::value_argument_type':'Element *'
|-FunctionTemplateDecl 0x563f2ebab938 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x563f2ebab230 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Element *>':'fast_argument<Element *, false>'
| `-CXXMethodDecl 0x563f2ebab898 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Element *&&)' inline
|   `-ParmVarDecl 0x563f2ebab798 <col:58, col:62> col:62 v 'Element *&&'
|-CXXMethodDecl 0x563f2ebaba18 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x563f2ebabb68 <line:186:5, col:49> col:17 push_front 'void (Vector<Element *>::value_argument_type)' inline
| `-ParmVarDecl 0x563f2ebabad8 <col:28, col:48> col:48 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXMethodDecl 0x563f2ebabc20 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x563f2ebabe68 <line:189:5, col:62> col:21 insert 'Vector<Element *>::iterator (Vector<Element *>::iterator, Vector<Element *>::value_argument_type)' inline
| |-ParmVarDecl 0x563f2ebabce0 <col:28, col:37> col:37 it 'Vector<Element *>::iterator':'Element **'
| `-ParmVarDecl 0x563f2ebabd58 <col:41, col:61> col:61 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXMethodDecl 0x563f2ebac028 <line:190:5, col:38> col:21 erase 'Vector<Element *>::iterator (Vector<Element *>::iterator)' inline
| `-ParmVarDecl 0x563f2ebabf38 <col:27, col:36> col:36 it 'Vector<Element *>::iterator':'Element **'
|-CXXMethodDecl 0x563f2ebac278 <line:191:5, col:49> col:21 erase 'Vector<Element *>::iterator (Vector<Element *>::iterator, Vector<Element *>::iterator)' inline
| |-ParmVarDecl 0x563f2ebac0f0 <col:27, col:36> col:36 a 'Vector<Element *>::iterator':'Element **'
| `-ParmVarDecl 0x563f2ebac168 <col:39, col:48> col:48 b 'Vector<Element *>::iterator':'Element **'
|-CXXMethodDecl 0x563f2ebac338 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x563f2ebac598 <line:195:5, col:34> col:17 swap 'void (Vector<Element *> &)' inline
| `-ParmVarDecl 0x563f2ebac4a0 <col:22, col:33> col:33 x 'Vector<Element *> &'
`-CXXDestructorDecl 0x563f2ebac668 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x563f2ebac668

Layout: <CGRecordLayout
  LLVMType:%class.Vector = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563f2e7e9fd0 <../dummy_inc/click/string.hh:189:5, line:198:5> line:189:12 referenced struct memo_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x563f2e7ea0e8 <col:5, col:12> col:12 implicit struct memo_t
|-FieldDecl 0x563f2e7ea188 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
|-FieldDecl 0x563f2e7ea1e8 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
|-FieldDecl 0x563f2e7ea248 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
`-FieldDecl 0x563f2e7ea2f8 <line:197:2, col:18> col:7 real_data 'char [8]'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  NonVirtualBaseLLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563f2e7ea600 <../dummy_inc/click/string.hh:204:5, line:208:5> line:204:12 referenced struct rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x563f2e7ea718 <col:5, col:12> col:12 implicit struct rep_t
|-FieldDecl 0x563f2e7ea7c0 <line:205:2, col:14> col:14 referenced data 'const char *'
|-FieldDecl 0x563f2e7ea828 <line:206:2, col:6> col:6 referenced length 'int'
|-FieldDecl 0x563f2e7ea8b8 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
|-CXXConstructorDecl 0x563f2e7f0950 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x563f2e7f0d88 <col:12>
|-CXXConstructorDecl 0x563f2e7f0a58 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x563f2e7f0b68 <col:12> col:12 used 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x563f2e7ea7c0 'data' 'const char *'
| | `-ImplicitCastExpr 0x563f2e7f3310 <col:12> 'const char *' <LValueToRValue>
| |   `-MemberExpr 0x563f2e7f32e0 <col:12> 'const char *const' lvalue .data 0x563f2e7ea7c0
| |     `-DeclRefExpr 0x563f2e7f32c0 <col:12> 'const String::rep_t' lvalue ParmVar 0x563f2e7f0b68 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x563f2e7ea828 'length' 'int'
| | `-ImplicitCastExpr 0x563f2e7f33a0 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x563f2e7f3370 <col:12> 'const int' lvalue .length 0x563f2e7ea828
| |     `-DeclRefExpr 0x563f2e7f3350 <col:12> 'const String::rep_t' lvalue ParmVar 0x563f2e7f0b68 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x563f2e7ea8b8 'memo' 'String::memo_t *'
| | `-ImplicitCastExpr 0x563f2e7f3430 <col:12> 'String::memo_t *' <LValueToRValue>
| |   `-MemberExpr 0x563f2e7f3400 <col:12> 'String::memo_t *const' lvalue .memo 0x563f2e7ea8b8
| |     `-DeclRefExpr 0x563f2e7f33e0 <col:12> 'const String::rep_t' lvalue ParmVar 0x563f2e7f0b68 '' 'const String::rep_t &'
| `-CompoundStmt 0x563f2e7f3488 <col:12>
|-CXXConstructorDecl 0x563f2e7f0c08 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x563f2e7f0c08
| `-ParmVarDecl 0x563f2e7f0d18 <col:12> col:12 'String::rep_t &&'
|-CXXDestructorDecl 0x563f2e7f6270 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x563f2e801c88 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x563f2e801d98 <col:12> col:12 used 'const String::rep_t &'
| `-CompoundStmt 0x563f2e8022b0 <col:12>
|   |-BinaryOperator 0x563f2e8020c8 <col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x563f2e802080 <col:12> 'const char *' lvalue ->data 0x563f2e7ea7c0
|   | | `-CXXThisExpr 0x563f2e802070 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x563f2e8020b0 <col:12> 'const char *' <LValueToRValue>
|   |   `-MemberExpr 0x563f2e802040 <col:12> 'const char *const' lvalue .data 0x563f2e7ea7c0
|   |     `-DeclRefExpr 0x563f2e802020 <col:12> 'const String::rep_t' lvalue ParmVar 0x563f2e801d98 '' 'const String::rep_t &'
|   |-BinaryOperator 0x563f2e802190 <col:12> 'int' lvalue '='
|   | |-MemberExpr 0x563f2e802148 <col:12> 'int' lvalue ->length 0x563f2e7ea828
|   | | `-CXXThisExpr 0x563f2e802138 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x563f2e802178 <col:12> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x563f2e802108 <col:12> 'const int' lvalue .length 0x563f2e7ea828
|   |     `-DeclRefExpr 0x563f2e8020e8 <col:12> 'const String::rep_t' lvalue ParmVar 0x563f2e801d98 '' 'const String::rep_t &'
|   |-BinaryOperator 0x563f2e802258 <col:12> 'String::memo_t *' lvalue '='
|   | |-MemberExpr 0x563f2e802210 <col:12> 'String::memo_t *' lvalue ->memo 0x563f2e7ea8b8
|   | | `-CXXThisExpr 0x563f2e802200 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x563f2e802240 <col:12> 'String::memo_t *' <LValueToRValue>
|   |   `-MemberExpr 0x563f2e8021d0 <col:12> 'String::memo_t *const' lvalue .memo 0x563f2e7ea8b8
|   |     `-DeclRefExpr 0x563f2e8021b0 <col:12> 'const String::rep_t' lvalue ParmVar 0x563f2e801d98 '' 'const String::rep_t &'
|   `-ReturnStmt 0x563f2e8022a0 <col:12>
|     `-UnaryOperator 0x563f2e802288 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x563f2e802278 <col:12> 'String::rep_t *' this
`-CXXMethodDecl 0x563f2e801e08 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x563f2e801e08
  `-ParmVarDecl 0x563f2e801f18 <col:12> col:12 'String::rep_t &&'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  NonVirtualBaseLLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563f2e7e1540 <../dummy_inc/click/string.hh:19:1, line:304:1> line:19:7 referenced class String definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x563f2e7e1658 <col:1, col:7> col:7 implicit referenced class String
|-AccessSpecDecl 0x563f2e7e16e8 <col:16, col:22> col:16 public
|-TypedefDecl 0x563f2e7e1728 <line:21:5, col:25> col:25 referenced const_iterator 'const char *'
| `-PointerType 0x563f2e4b1fd0 'const char *'
|   `-QualType 0x563f2e4b1521 'const char' const
|     `-BuiltinType 0x563f2e4b1520 'char'
|-TypedefDecl 0x563f2e7e17b0 <line:22:5, col:28> col:28 iterator 'String::const_iterator':'const char *'
| `-TypedefType 0x563f2e7e1780 'String::const_iterator' sugar
|   |-Typedef 0x563f2e7e1728 'const_iterator'
|   `-PointerType 0x563f2e4b1fd0 'const char *'
|     `-QualType 0x563f2e4b1521 'const char' const
|       `-BuiltinType 0x563f2e4b1520 'char'
|-TypedefDecl 0x563f2e7e1920 <line:24:5, col:52> col:27 referenced unspecified_bool_type 'int (String::*)() const'
| `-MemberPointerType 0x563f2e7e1890 'int (String::*)() const'
|   |-RecordType 0x563f2e7e15d0 'String'
|   | `-CXXRecord 0x563f2e7e1540 'String'
|   `-ParenType 0x563f2e7e1830 'int () const' sugar
|     `-FunctionProtoType 0x563f2e7b63d0 'int () const' const cdecl
|       `-BuiltinType 0x563f2e4b1580 'int'
|-TypedefDecl 0x563f2e7e1988 <line:27:5, col:21> col:21 referenced intmax_t 'int64_t':'long'
| `-TypedefType 0x563f2e60adb0 'int64_t' sugar
|   |-Typedef 0x563f2e51a390 'int64_t'
|   `-TypedefType 0x563f2e4f3630 '__int64_t' sugar
|     |-Typedef 0x563f2e4f3208 '__int64_t'
|     `-BuiltinType 0x563f2e4b15a0 'long'
|-TypedefDecl 0x563f2e7e19f0 <line:28:5, col:22> col:22 referenced uintmax_t 'uint64_t':'unsigned long'
| `-TypedefType 0x563f2e60acd0 'uint64_t' sugar
|   |-Typedef 0x563f2e51a530 'uint64_t'
|   `-TypedefType 0x563f2e4f36c0 '__uint64_t' sugar
|     |-Typedef 0x563f2e4f3278 '__uint64_t'
|     `-BuiltinType 0x563f2e4b1640 'unsigned long'
|-TypedefDecl 0x563f2e7e1a80 <line:36:5, col:22> col:22 int_large_t 'String::intmax_t':'long'
| `-TypedefType 0x563f2e7e1a50 'String::intmax_t' sugar
|   |-Typedef 0x563f2e7e1988 'intmax_t'
|   `-TypedefType 0x563f2e60adb0 'int64_t' sugar
|     |-Typedef 0x563f2e51a390 'int64_t'
|     `-TypedefType 0x563f2e4f3630 '__int64_t' sugar
|       |-Typedef 0x563f2e4f3208 '__int64_t'
|       `-BuiltinType 0x563f2e4b15a0 'long'
|-TypedefDecl 0x563f2e7e1b10 <line:37:5, col:23> col:23 uint_large_t 'String::uintmax_t':'unsigned long'
| `-TypedefType 0x563f2e7e1ae0 'String::uintmax_t' sugar
|   |-Typedef 0x563f2e7e19f0 'uintmax_t'
|   `-TypedefType 0x563f2e60acd0 'uint64_t' sugar
|     |-Typedef 0x563f2e51a530 'uint64_t'
|     `-TypedefType 0x563f2e4f36c0 '__uint64_t' sugar
|       |-Typedef 0x563f2e4f3278 '__uint64_t'
|       `-BuiltinType 0x563f2e4b1640 'unsigned long'
|-CXXConstructorDecl 0x563f2e7e1bd0 <line:39:5, col:19> col:12 used String 'void ()' inline
|-CXXConstructorDecl 0x563f2e7e1d78 <line:40:5, col:34> col:12 used String 'void (const String &)' inline
| `-ParmVarDecl 0x563f2e7e1cb8 <col:19, col:33> col:33 x 'const String &'
|-CXXConstructorDecl 0x563f2e7e1f28 <line:42:5, col:29> col:12 used String 'void (String &&)' inline
| `-ParmVarDecl 0x563f2e7e1e68 <col:19, col:28> col:28 x 'String &&'
|-CXXConstructorDecl 0x563f2e7e2080 <line:44:5, col:35> col:12 used String 'void (const char *)' inline
| `-ParmVarDecl 0x563f2e7e1ff0 <col:19, col:31> col:31 cstr 'const char *'
|-CXXConstructorDecl 0x563f2e7e2298 <line:45:5, col:41> col:12 String 'void (const char *, int)' inline
| |-ParmVarDecl 0x563f2e7e2148 <col:19, col:31> col:31 s 'const char *'
| `-ParmVarDecl 0x563f2e7e21c8 <col:34, col:38> col:38 len 'int'
|-CXXConstructorDecl 0x563f2e7e24b8 <line:46:5, col:50> col:12 String 'void (const unsigned char *, int)' inline
| |-ParmVarDecl 0x563f2e7e2368 <col:19, col:40> col:40 s 'const unsigned char *'
| `-ParmVarDecl 0x563f2e7e23e8 <col:43, col:47> col:47 len 'int'
|-CXXConstructorDecl 0x563f2e7e26d8 <line:47:5, col:54> col:12 used String 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x563f2e7e2588 <col:19, col:31> col:31 first 'const char *'
| `-ParmVarDecl 0x563f2e7e2608 <col:38, col:50> col:50 last 'const char *'
|-CXXConstructorDecl 0x563f2e7e28f8 <line:48:5, col:72> col:12 String 'void (const unsigned char *, const unsigned char *)' inline
| |-ParmVarDecl 0x563f2e7e27a8 <col:19, col:40> col:40 first 'const unsigned char *'
| `-ParmVarDecl 0x563f2e7e2828 <col:47, col:68> col:68 last 'const unsigned char *'
|-CXXConstructorDecl 0x563f2e7e2a88 <line:49:5, col:34> col:21 used String 'void (bool)' inline
| `-ParmVarDecl 0x563f2e7e29c0 <col:28, col:33> col:33 x 'bool'
|-CXXConstructorDecl 0x563f2e7e2c08 <line:50:5, col:34> col:21 String 'void (char)' inline
| `-ParmVarDecl 0x563f2e7e2b48 <col:28, col:33> col:33 c 'char'
|-CXXConstructorDecl 0x563f2e7e2d98 <line:51:5, col:43> col:21 String 'void (unsigned char)' inline
| `-ParmVarDecl 0x563f2e7e2cd0 <col:28, col:42> col:42 c 'unsigned char'
|-CXXConstructorDecl 0x563f2e7e2ef0 <line:52:5, col:26> col:14 String 'void (int)'
| `-ParmVarDecl 0x563f2e7e2e60 <col:21, col:25> col:25 x 'int'
|-CXXConstructorDecl 0x563f2e7e3048 <line:53:5, col:31> col:14 String 'void (unsigned int)'
| `-ParmVarDecl 0x563f2e7e2fb8 <col:21, col:30> col:30 x 'unsigned int'
|-CXXConstructorDecl 0x563f2e7e31a0 <line:54:5, col:27> col:14 String 'void (long)'
| `-ParmVarDecl 0x563f2e7e3110 <col:21, col:26> col:26 x 'long'
|-CXXConstructorDecl 0x563f2e7e3328 <line:55:5, col:36> col:14 String 'void (unsigned long)'
| `-ParmVarDecl 0x563f2e7e3268 <col:21, col:35> col:35 x 'unsigned long'
|-CXXConstructorDecl 0x563f2e7e34b8 <line:57:5, col:32> col:14 String 'void (long long)'
| `-ParmVarDecl 0x563f2e7e33f0 <col:21, col:31> col:31 x 'long long'
|-CXXConstructorDecl 0x563f2e7e3648 <line:58:5, col:41> col:14 String 'void (unsigned long long)'
| `-ParmVarDecl 0x563f2e7e3580 <col:21, col:40> col:40 x 'unsigned long long'
|-CXXConstructorDecl 0x563f2e7e37d8 <line:65:5, col:29> col:14 String 'void (double)'
| `-ParmVarDecl 0x563f2e7e3710 <col:21, col:28> col:28 x 'double'
|-CXXDestructorDecl 0x563f2e7e38d0 <line:67:5, col:20> col:12 used ~String 'void () noexcept' inline
|-CXXMethodDecl 0x563f2e7e39f8 <line:69:5, col:44> col:33 used make_empty 'const String &()' static inline
|-CXXMethodDecl 0x563f2e7e3b78 <line:70:5, col:52> col:26 used make_uninitialized 'String (int)' static inline
| `-ParmVarDecl 0x563f2e7e3ab0 <col:45, col:49> col:49 len 'int'
|-CXXMethodDecl 0x563f2e7e3cc8 <line:71:5, col:74> col:26 make_garbage 'String (int)' static inline
| |-ParmVarDecl 0x563f2e7e3c38 <col:39, col:43> col:43 len 'int'
| `-DeprecatedAttr 0x563f2e7e3d80 <col:63> "" ""
|-CXXMethodDecl 0x563f2e7e3ec8 <line:72:5, col:54> col:26 make_stable 'String (const char *)' static inline
| `-ParmVarDecl 0x563f2e7e3e08 <col:38, col:50> col:50 cstr 'const char *'
|-CXXMethodDecl 0x563f2e7e40d8 <line:73:5, col:60> col:26 make_stable 'String (const char *, int)' static inline
| |-ParmVarDecl 0x563f2e7e3f88 <col:38, col:50> col:50 s 'const char *'
| `-ParmVarDecl 0x563f2e7e4008 <col:53, col:57> col:57 len 'int'
|-CXXMethodDecl 0x563f2e7e42f8 <line:74:5, col:73> col:26 make_stable 'String (const char *, const char *)' static inline
| |-ParmVarDecl 0x563f2e7e41a0 <col:38, col:50> col:50 first 'const char *'
| `-ParmVarDecl 0x563f2e7e4220 <col:57, col:69> col:69 last 'const char *'
|-CXXMethodDecl 0x563f2e7e45d8 <line:75:5, col:80> col:19 make_numeric 'String (String::intmax_t, int, bool)' static
| |-ParmVarDecl 0x563f2e7e43b8 <col:32, col:41> col:41 x 'String::intmax_t':'long'
| |-ParmVarDecl 0x563f2e7e4438 <col:44, col:55> col:48 base 'int' cinit
| | `-IntegerLiteral 0x563f2e7f0420 <col:55> 'int' 10
| `-ParmVarDecl 0x563f2e7e44b0 <col:59, col:76> col:64 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x563f2e7f0440 <col:76> 'bool' true
|-CXXMethodDecl 0x563f2e7e48b8 <line:76:5, col:81> col:19 make_numeric 'String (String::uintmax_t, int, bool)' static
| |-ParmVarDecl 0x563f2e7e46a0 <col:32, col:42> col:42 x 'String::uintmax_t':'unsigned long'
| |-ParmVarDecl 0x563f2e7e4720 <col:45, col:56> col:49 base 'int' cinit
| | `-IntegerLiteral 0x563f2e7f0450 <col:56> 'int' 10
| `-ParmVarDecl 0x563f2e7e4798 <col:60, col:77> col:65 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x563f2e7f0470 <col:77> 'bool' true
|-CXXMethodDecl 0x563f2e7e49c0 <line:78:5, col:31> col:24 used data 'const char *() const' inline
|-CXXMethodDecl 0x563f2e7e4a88 <line:79:5, col:25> col:16 used length 'int () const' inline
|-CXXMethodDecl 0x563f2e7e4b50 <line:81:5, col:60> col:52 c_str 'const char *() const'
| |-NoInlineAttr 0x563f2e7e4bf0 <col:20>
| `-OptimizeNoneAttr 0x563f2e7e4c48 <col:30>
|-CXXConversionDecl 0x563f2e7e4d38 <line:83:5, col:45> col:12 used operator int (String::*)() const 'String::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x563f2e7e4e08 <line:84:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x563f2e7e4ec8 <line:85:5, col:29> col:17 operator! 'bool () const' inline
|-CXXMethodDecl 0x563f2e7e4fb8 <line:87:5, col:35> col:27 used begin 'String::const_iterator () const' inline
|-CXXMethodDecl 0x563f2e7e5078 <line:88:5, col:33> col:27 used end 'String::const_iterator () const' inline
|-CXXMethodDecl 0x563f2e7e51f8 <line:90:5, col:35> col:17 used operator[] 'char (int) const' inline
| `-ParmVarDecl 0x563f2e7e5130 <col:28, col:32> col:32 i 'int'
|-CXXMethodDecl 0x563f2e7e5348 <line:91:5, col:27> col:17 at 'char (int) const' inline
| `-ParmVarDecl 0x563f2e7e52b8 <col:20, col:24> col:24 i 'int'
|-CXXMethodDecl 0x563f2e7e5438 <line:92:5, col:25> col:17 front 'char () const' inline
|-CXXMethodDecl 0x563f2e7e54f8 <line:93:5, col:24> col:17 back 'char () const' inline
|-CXXMethodDecl 0x563f2e7e5748 <line:95:5, col:64> col:21 used hashcode 'uint32_t (const char *, const char *)' static
| |-ParmVarDecl 0x563f2e7e55b0 <col:30, col:42> col:42 begin 'const char *'
| `-ParmVarDecl 0x563f2e7e5630 <col:49, col:61> col:61 end 'const char *'
|-CXXMethodDecl 0x563f2e7e59a8 <line:96:5, line:97:33> line:96:28 hashcode 'uint32_t (const unsigned char *, const unsigned char *)' static inline
| |-ParmVarDecl 0x563f2e7e5810 <col:37, col:58> col:58 begin 'const unsigned char *'
| `-ParmVarDecl 0x563f2e7e5890 <line:97:9, col:30> col:30 end 'const unsigned char *'
|-CXXMethodDecl 0x563f2e7e5a78 <line:98:5, col:32> col:21 hashcode 'uint32_t () const' inline
|-CXXMethodDecl 0x563f2e7e5c88 <line:100:5, col:65> col:19 substring 'String (const char *, const char *) const' inline
| |-ParmVarDecl 0x563f2e7e5b30 <col:29, col:41> col:41 begin 'const char *'
| `-ParmVarDecl 0x563f2e7e5bb0 <col:48, col:60> col:60 end 'const char *'
|-CXXMethodDecl 0x563f2e7e5ea8 <line:101:5, col:40> col:12 used substring 'String (int, int) const'
| |-ParmVarDecl 0x563f2e7e5d50 <col:22, col:26> col:26 pos 'int'
| `-ParmVarDecl 0x563f2e7e5dd0 <col:31, col:35> col:35 len 'int'
|-CXXMethodDecl 0x563f2e7e6038 <line:102:5, col:38> col:19 substring 'String (int) const' inline
| `-ParmVarDecl 0x563f2e7e5f70 <col:29, col:33> col:33 pos 'int'
|-CXXMethodDecl 0x563f2e7e6128 <line:103:5, col:25> col:12 trim_space 'String () const'
|-CXXMethodDecl 0x563f2e7e6298 <line:105:5, col:41> col:17 equals 'bool (const String &) const' inline
| `-ParmVarDecl 0x563f2e7e61d8 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x563f2e7e64a8 <line:106:5, col:48> col:17 used equals 'bool (const char *, int) const' inline
| |-ParmVarDecl 0x563f2e7e6358 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x563f2e7e63d8 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x563f2e7e66c0 <line:107:5, col:63> col:23 used compare 'int (const String &, const String &)' static inline
| |-ParmVarDecl 0x563f2e7e6568 <col:31, col:45> col:45 a 'const String &'
| `-ParmVarDecl 0x563f2e7e65e0 <col:48, col:62> col:62 b 'const String &'
|-CXXMethodDecl 0x563f2e7e6850 <line:108:5, col:41> col:16 used compare 'int (const String &) const' inline
| `-ParmVarDecl 0x563f2e7e6780 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x563f2e7e6a70 <line:109:5, col:41> col:9 used compare 'int (const char *, int) const'
| |-ParmVarDecl 0x563f2e7e6910 <col:17, col:29> col:29 s 'const char *'
| `-ParmVarDecl 0x563f2e7e6990 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x563f2e7e6bc0 <line:110:5, col:46> col:17 starts_with 'bool (const String &) const' inline
| `-ParmVarDecl 0x563f2e7e6b30 <col:29, col:43> col:43 x 'const String &'
|-CXXMethodDecl 0x563f2e7e6d98 <line:111:5, col:46> col:10 used starts_with 'bool (const char *, int) const'
| |-ParmVarDecl 0x563f2e7e6c80 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x563f2e7e6d00 <col:37, col:41> col:41 len 'int'
|-CXXMethodDecl 0x563f2e7e6ee8 <line:112:5, col:44> col:10 glob_match 'bool (const String &) const'
| `-ParmVarDecl 0x563f2e7e6e58 <col:21, col:35> col:35 pattern 'const String &'
|-CXXMethodDecl 0x563f2e7e7100 <line:125:5, col:42> col:9 find_left 'int (char, int) const'
| |-ParmVarDecl 0x563f2e7e6fa0 <col:19, col:24> col:24 c 'char'
| `-ParmVarDecl 0x563f2e7e7020 <col:27, col:39> col:31 start 'int' cinit
|   `-IntegerLiteral 0x563f2e7f0480 <col:39> 'int' 0
|-CXXMethodDecl 0x563f2e7e7320 <line:126:5, col:51> col:9 find_left 'int (const String &, int) const'
| |-ParmVarDecl 0x563f2e7e71c0 <col:19, col:33> col:33 x 'const String &'
| `-ParmVarDecl 0x563f2e7e7240 <col:36, col:48> col:40 start 'int' cinit
|   `-IntegerLiteral 0x563f2e7f04a0 <col:48> 'int' 0
|-CXXMethodDecl 0x563f2e7e7500 <line:127:5, col:52> col:9 find_right 'int (char, int) const'
| |-ParmVarDecl 0x563f2e7e73e0 <col:20, col:25> col:25 c 'char'
| `-ParmVarDecl 0x563f2e7e7460 <col:28, col:40> col:32 start 'int' cinit
|   `-IntegerLiteral 0x563f2e7f04c0 <col:40> 'int' 2147483647
|-CXXMethodDecl 0x563f2e7e75d0 <line:129:5, col:20> col:12 lower 'String () const'
|-CXXMethodDecl 0x563f2e7e7690 <line:130:5, col:20> col:12 upper 'String () const'
|-CXXMethodDecl 0x563f2e7e7750 <line:131:5, col:24> col:12 printable 'String () const'
|-CXXMethodDecl 0x563f2e7e7810 <line:132:5, col:25> col:12 quoted_hex 'String () const'
|-CXXMethodDecl 0x563f2e7e78d0 <line:133:5, col:26> col:12 encode_json 'String () const'
|-CXXMethodDecl 0x563f2e7e7a78 <line:135:5, col:45> col:20 used operator= 'String &(const String &)' inline
| `-ParmVarDecl 0x563f2e7e7980 <col:30, col:44> col:44 x 'const String &'
|-CXXMethodDecl 0x563f2e7e7bf8 <line:137:5, col:40> col:20 used operator= 'String &(String &&)' inline
| `-ParmVarDecl 0x563f2e7e7b30 <col:30, col:39> col:39 x 'String &&'
|-CXXMethodDecl 0x563f2e7e7dd0 <line:139:5, col:46> col:20 operator= 'String &(const char *)' inline
| `-ParmVarDecl 0x563f2e7e7cb8 <col:30, col:42> col:42 cstr 'const char *'
|-CXXMethodDecl 0x563f2e7e7f48 <line:141:5, col:31> col:17 swap 'void (String &)' inline
| `-ParmVarDecl 0x563f2e7e7e88 <col:22, col:30> col:30 x 'String &'
|-CXXMethodDecl 0x563f2e7e8090 <line:143:5, col:39> col:17 append 'void (const String &)' inline
| `-ParmVarDecl 0x563f2e7e8000 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x563f2e7e81e0 <line:144:5, col:40> col:17 used append 'void (const char *)' inline
| `-ParmVarDecl 0x563f2e7e8150 <col:24, col:36> col:36 cstr 'const char *'
|-CXXMethodDecl 0x563f2e7e83b8 <line:145:5, col:46> col:17 used append 'void (const char *, int)' inline
| |-ParmVarDecl 0x563f2e7e82a0 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x563f2e7e8320 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x563f2e7e8598 <line:146:5, col:59> col:17 append 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x563f2e7e8480 <col:24, col:36> col:36 first 'const char *'
| `-ParmVarDecl 0x563f2e7e8500 <col:43, col:55> col:55 last 'const char *'
|-CXXMethodDecl 0x563f2e7e86e8 <line:147:5, col:30> col:17 append 'void (char)' inline
| `-ParmVarDecl 0x563f2e7e8658 <col:24, col:29> col:29 c 'char'
|-CXXMethodDecl 0x563f2e7e88f8 <line:148:5, col:36> col:10 append_fill 'void (int, int)'
| |-ParmVarDecl 0x563f2e7e87a8 <col:22, col:26> col:26 c 'int'
| `-ParmVarDecl 0x563f2e7e8828 <col:29, col:33> col:33 len 'int'
|-CXXMethodDecl 0x563f2e7e8a58 <line:149:5, col:39> col:11 used append_uninitialized 'char *(int)'
| `-ParmVarDecl 0x563f2e7e89c0 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x563f2e7e8bb0 <line:150:5, col:68> col:18 append_garbage 'char *(int)' inline
| |-ParmVarDecl 0x563f2e7e8b18 <col:33, col:37> col:37 len 'int'
| `-DeprecatedAttr 0x563f2e7e8c58 <col:57> "" ""
|-CXXMethodDecl 0x563f2e7e8d68 <line:152:5, col:46> col:20 used operator+= 'String &(const String &)' inline
| `-ParmVarDecl 0x563f2e7e8cd8 <col:31, col:45> col:45 x 'const String &'
|-CXXMethodDecl 0x563f2e7e8eb8 <line:153:5, col:47> col:20 operator+= 'String &(const char *)' inline
| `-ParmVarDecl 0x563f2e7e8e28 <col:31, col:43> col:43 cstr 'const char *'
|-CXXMethodDecl 0x563f2e7e9038 <line:154:5, col:37> col:20 operator+= 'String &(char)' inline
| `-ParmVarDecl 0x563f2e7e8f70 <col:31, col:36> col:36 c 'char'
|-CXXMethodDecl 0x563f2e7e9100 <line:160:5, col:29> col:17 is_shared 'bool () const' inline
|-CXXMethodDecl 0x563f2e7e91c0 <line:161:5, col:29> col:17 is_stable 'bool () const' inline
|-CXXMethodDecl 0x563f2e7e9280 <line:163:5, col:60> col:19 unique 'String () const' inline
| `-DeprecatedAttr 0x563f2e7e9320 <col:49> "" ""
|-CXXMethodDecl 0x563f2e7e93b0 <line:164:5, col:30> col:19 used unshared 'String () const' inline
|-CXXMethodDecl 0x563f2e7e9470 <line:165:5, col:29> col:19 compact 'String () const' inline
|-CXXMethodDecl 0x563f2e7e9560 <line:167:5, col:24> col:11 mutable_data 'char *()'
|-CXXMethodDecl 0x563f2e7e9628 <line:168:5, col:25> col:11 mutable_c_str 'char *()'
|-CXXMethodDecl 0x563f2e7e96e8 <line:170:5, col:52> col:33 make_out_of_memory 'const String &()' static inline
|-CXXMethodDecl 0x563f2e7e97a8 <line:171:5, col:33> col:17 out_of_memory 'bool () const' inline
|-CXXMethodDecl 0x563f2e7e98a0 <line:172:5, col:50> col:31 out_of_memory_data 'const char *()' static inline
|-CXXMethodDecl 0x563f2e7e9968 <line:173:5, col:44> col:23 out_of_memory_length 'int ()' static inline
|-CXXMethodDecl 0x563f2e7e9a30 <line:174:5, col:42> col:31 empty_data 'const char *()' static inline
|-CXXMethodDecl 0x563f2e7e9c08 <line:180:5, col:81> col:31 skip_utf8_char 'const char *(const char *, const char *)' static inline
| |-ParmVarDecl 0x563f2e7e9ae8 <col:46, col:58> col:58 first 'const char *'
| `-ParmVarDecl 0x563f2e7e9b68 <col:65, col:77> col:77 last 'const char *'
|-CXXMethodDecl 0x563f2e7e9e30 <line:181:5, line:182:38> line:181:33 used skip_utf8_char 'const unsigned char *(const unsigned char *, const unsigned char *)' static
| |-ParmVarDecl 0x563f2e7e9cd0 <col:48, col:69> col:69 first 'const unsigned char *'
| `-ParmVarDecl 0x563f2e7e9d50 <line:182:13, col:34> col:34 last 'const unsigned char *'
|-VarDecl 0x563f2e7e9f40 <line:184:5, col:35> col:23 used bool_data 'const char [11]' static
|-AccessSpecDecl 0x563f2e7e9fa8 <line:186:3, col:10> col:3 private
|-CXXRecordDecl 0x563f2e7e9fd0 <line:189:5, line:198:5> line:189:12 referenced struct memo_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x563f2e7ea0e8 <col:5, col:12> col:12 implicit struct memo_t
| |-FieldDecl 0x563f2e7ea188 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
| |-FieldDecl 0x563f2e7ea1e8 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
| |-FieldDecl 0x563f2e7ea248 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
| `-FieldDecl 0x563f2e7ea2f8 <line:197:2, col:18> col:7 real_data 'char [8]'
|-EnumDecl 0x563f2e7ea360 <line:200:5, line:202:5> line:200:5
| `-EnumConstantDecl 0x563f2e7ea598 <line:201:2, col:32> col:2 MEMO_SPACE 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)'
|   `-ImplicitCastExpr 0x563f2e7ea5e8 <col:15, col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x563f2e7ea578 <col:15, col:32> 'unsigned long' Int: 12
|       `-BinaryOperator 0x563f2e7ea488 <col:15, col:32> 'unsigned long' '-'
|         |-UnaryExprOrTypeTraitExpr 0x563f2e7ea430 <col:15, col:28> 'unsigned long' sizeof 'String::memo_t'
|         `-ImplicitCastExpr 0x563f2e7ea470 <col:32> 'unsigned long' <IntegralCast>
|           `-IntegerLiteral 0x563f2e7ea450 <col:32> 'int' 8
|-CXXRecordDecl 0x563f2e7ea600 <line:204:5, line:208:5> line:204:12 referenced struct rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x563f2e7ea718 <col:5, col:12> col:12 implicit struct rep_t
| |-FieldDecl 0x563f2e7ea7c0 <line:205:2, col:14> col:14 referenced data 'const char *'
| |-FieldDecl 0x563f2e7ea828 <line:206:2, col:6> col:6 referenced length 'int'
| |-FieldDecl 0x563f2e7ea8b8 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
| |-CXXConstructorDecl 0x563f2e7f0950 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x563f2e7f0d88 <col:12>
| |-CXXConstructorDecl 0x563f2e7f0a58 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x563f2e7f0b68 <col:12> col:12 used 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x563f2e7ea7c0 'data' 'const char *'
| | | `-ImplicitCastExpr 0x563f2e7f3310 <col:12> 'const char *' <LValueToRValue>
| | |   `-MemberExpr 0x563f2e7f32e0 <col:12> 'const char *const' lvalue .data 0x563f2e7ea7c0
| | |     `-DeclRefExpr 0x563f2e7f32c0 <col:12> 'const String::rep_t' lvalue ParmVar 0x563f2e7f0b68 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x563f2e7ea828 'length' 'int'
| | | `-ImplicitCastExpr 0x563f2e7f33a0 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x563f2e7f3370 <col:12> 'const int' lvalue .length 0x563f2e7ea828
| | |     `-DeclRefExpr 0x563f2e7f3350 <col:12> 'const String::rep_t' lvalue ParmVar 0x563f2e7f0b68 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x563f2e7ea8b8 'memo' 'String::memo_t *'
| | | `-ImplicitCastExpr 0x563f2e7f3430 <col:12> 'String::memo_t *' <LValueToRValue>
| | |   `-MemberExpr 0x563f2e7f3400 <col:12> 'String::memo_t *const' lvalue .memo 0x563f2e7ea8b8
| | |     `-DeclRefExpr 0x563f2e7f33e0 <col:12> 'const String::rep_t' lvalue ParmVar 0x563f2e7f0b68 '' 'const String::rep_t &'
| | `-CompoundStmt 0x563f2e7f3488 <col:12>
| |-CXXConstructorDecl 0x563f2e7f0c08 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x563f2e7f0c08
| | `-ParmVarDecl 0x563f2e7f0d18 <col:12> col:12 'String::rep_t &&'
| |-CXXDestructorDecl 0x563f2e7f6270 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x563f2e801c88 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x563f2e801d98 <col:12> col:12 used 'const String::rep_t &'
| | `-CompoundStmt 0x563f2e8022b0 <col:12>
| |   |-BinaryOperator 0x563f2e8020c8 <col:12> 'const char *' lvalue '='
| |   | |-MemberExpr 0x563f2e802080 <col:12> 'const char *' lvalue ->data 0x563f2e7ea7c0
| |   | | `-CXXThisExpr 0x563f2e802070 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x563f2e8020b0 <col:12> 'const char *' <LValueToRValue>
| |   |   `-MemberExpr 0x563f2e802040 <col:12> 'const char *const' lvalue .data 0x563f2e7ea7c0
| |   |     `-DeclRefExpr 0x563f2e802020 <col:12> 'const String::rep_t' lvalue ParmVar 0x563f2e801d98 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x563f2e802190 <col:12> 'int' lvalue '='
| |   | |-MemberExpr 0x563f2e802148 <col:12> 'int' lvalue ->length 0x563f2e7ea828
| |   | | `-CXXThisExpr 0x563f2e802138 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x563f2e802178 <col:12> 'int' <LValueToRValue>
| |   |   `-MemberExpr 0x563f2e802108 <col:12> 'const int' lvalue .length 0x563f2e7ea828
| |   |     `-DeclRefExpr 0x563f2e8020e8 <col:12> 'const String::rep_t' lvalue ParmVar 0x563f2e801d98 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x563f2e802258 <col:12> 'String::memo_t *' lvalue '='
| |   | |-MemberExpr 0x563f2e802210 <col:12> 'String::memo_t *' lvalue ->memo 0x563f2e7ea8b8
| |   | | `-CXXThisExpr 0x563f2e802200 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x563f2e802240 <col:12> 'String::memo_t *' <LValueToRValue>
| |   |   `-MemberExpr 0x563f2e8021d0 <col:12> 'String::memo_t *const' lvalue .memo 0x563f2e7ea8b8
| |   |     `-DeclRefExpr 0x563f2e8021b0 <col:12> 'const String::rep_t' lvalue ParmVar 0x563f2e801d98 '' 'const String::rep_t &'
| |   `-ReturnStmt 0x563f2e8022a0 <col:12>
| |     `-UnaryOperator 0x563f2e802288 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x563f2e802278 <col:12> 'String::rep_t *' this
| `-CXXMethodDecl 0x563f2e801e08 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x563f2e801e08
|   `-ParmVarDecl 0x563f2e801f18 <col:12> col:12 'String::rep_t &&'
|-FieldDecl 0x563f2e7ea930 <line:211:5, col:19> col:19 referenced _r 'String::rep_t' mutable
|-CXXMethodDecl 0x563f2e7eab78 <line:256:5, line:261:5> line:256:17 used assign_memo 'void (const char *, int, String::memo_t *) const' inline
| |-ParmVarDecl 0x563f2e7ea998 <col:29, col:41> col:41 used data 'const char *'
| |-ParmVarDecl 0x563f2e7eaa18 <col:47, col:51> col:51 used length 'int'
| |-ParmVarDecl 0x563f2e7eaa90 <col:59, col:67> col:67 used memo 'String::memo_t *'
| `-CompoundStmt 0x563f2e7f0910 <col:79, line:261:5>
|   |-BinaryOperator 0x563f2e7f0588 <line:257:2, col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x563f2e7f0520 <col:2, col:5> 'const char *' lvalue .data 0x563f2e7ea7c0
|   | | `-MemberExpr 0x563f2e7f04f0 <col:2> 'String::rep_t' lvalue ->_r 0x563f2e7ea930
|   | |   `-CXXThisExpr 0x563f2e7f04e0 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x563f2e7f0570 <col:12> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x563f2e7f0550 <col:12> 'const char *' lvalue ParmVar 0x563f2e7ea998 'data' 'const char *'
|   |-BinaryOperator 0x563f2e7f0650 <line:258:2, col:14> 'int' lvalue '='
|   | |-MemberExpr 0x563f2e7f05e8 <col:2, col:5> 'int' lvalue .length 0x563f2e7ea828
|   | | `-MemberExpr 0x563f2e7f05b8 <col:2> 'String::rep_t' lvalue ->_r 0x563f2e7ea930
|   | |   `-CXXThisExpr 0x563f2e7f05a8 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x563f2e7f0638 <col:14> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x563f2e7f0618 <col:14> 'int' lvalue ParmVar 0x563f2e7eaa18 'length' 'int'
|   `-IfStmt 0x563f2e7f08f8 <line:259:2, line:260:41>
|     |-ImplicitCastExpr 0x563f2e7f0770 <line:259:6, col:21> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x563f2e7f0758 <col:6, col:21> 'String::memo_t *' <LValueToRValue>
|     |   `-ParenExpr 0x563f2e7f0738 <col:6, col:21> 'String::memo_t *' lvalue
|     |     `-BinaryOperator 0x563f2e7f0718 <col:7, col:17> 'String::memo_t *' lvalue '='
|     |       |-MemberExpr 0x563f2e7f06b0 <col:7, col:10> 'String::memo_t *' lvalue .memo 0x563f2e7ea8b8
|     |       | `-MemberExpr 0x563f2e7f0680 <col:7> 'String::rep_t' lvalue ->_r 0x563f2e7ea930
|     |       |   `-CXXThisExpr 0x563f2e7f0670 <col:7> 'const String *' implicit this
|     |       `-ImplicitCastExpr 0x563f2e7f0700 <col:17> 'String::memo_t *' <LValueToRValue>
|     |         `-DeclRefExpr 0x563f2e7f06e0 <col:17> 'String::memo_t *' lvalue ParmVar 0x563f2e7eaa90 'memo' 'String::memo_t *'
|     `-CallExpr 0x563f2e7f08d0 <line:260:6, col:41> 'void'
|       |-ImplicitCastExpr 0x563f2e7f08b8 <col:6, col:23> 'void (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x563f2e7f07c0 <col:6, col:23> 'void (volatile uint32_t &)' lvalue CXXMethod 0x563f2e7d95a8 'inc' 'void (volatile uint32_t &)'
|       `-MemberExpr 0x563f2e7f0828 <col:27, col:33> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x563f2e7ea188
|         `-ImplicitCastExpr 0x563f2e7f0810 <col:27> 'String::memo_t *' <LValueToRValue>
|           `-DeclRefExpr 0x563f2e7f07f0 <col:27> 'String::memo_t *' lvalue ParmVar 0x563f2e7eaa90 'memo' 'String::memo_t *'
|-CXXConstructorDecl 0x563f2e7eae28 <line:263:5, line:265:5> line:263:12 used String 'void (const char *, int, String::memo_t *)' inline
| |-ParmVarDecl 0x563f2e7eac48 <col:19, col:31> col:31 used data 'const char *'
| |-ParmVarDecl 0x563f2e7eacc8 <col:37, col:41> col:41 used length 'int'
| |-ParmVarDecl 0x563f2e7ead40 <col:49, col:57> col:57 used memo 'String::memo_t *'
| |-CXXCtorInitializer Field 0x563f2e7ea930 '_r' 'String::rep_t'
| | `-CXXConstructExpr 0x563f2e7f0d98 <col:12> 'String::rep_t' 'void () noexcept'
| `-CompoundStmt 0x563f2e7f0f28 <col:63, line:265:5>
|   `-CXXMemberCallExpr 0x563f2e7f0e90 <line:264:2, col:32> 'void'
|     |-MemberExpr 0x563f2e7f0e00 <col:2> '<bound member function type>' ->assign_memo 0x563f2e7eab78
|     | `-ImplicitCastExpr 0x563f2e7f0ec8 <col:2> 'const String *' <NoOp>
|     |   `-CXXThisExpr 0x563f2e7f0df0 <col:2> 'String *' implicit this
|     |-ImplicitCastExpr 0x563f2e7f0ee0 <col:14> 'const char *' <LValueToRValue>
|     | `-DeclRefExpr 0x563f2e7f0e30 <col:14> 'const char *' lvalue ParmVar 0x563f2e7eac48 'data' 'const char *'
|     |-ImplicitCastExpr 0x563f2e7f0ef8 <col:20> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x563f2e7f0e50 <col:20> 'int' lvalue ParmVar 0x563f2e7eacc8 'length' 'int'
|     `-ImplicitCastExpr 0x563f2e7f0f10 <col:28> 'String::memo_t *' <LValueToRValue>
|       `-DeclRefExpr 0x563f2e7f0e70 <col:28> 'String::memo_t *' lvalue ParmVar 0x563f2e7ead40 'memo' 'String::memo_t *'
|-CXXMethodDecl 0x563f2e7eafb8 <line:267:5, line:269:5> line:267:17 used assign 'void (const String &) const' inline
| |-ParmVarDecl 0x563f2e7eaef8 <col:24, col:38> col:38 used x 'const String &'
| `-CompoundStmt 0x563f2e7f1180 <col:47, line:269:5>
|   `-CXXMemberCallExpr 0x563f2e7f1100 <line:268:2, col:47> 'void'
|     |-MemberExpr 0x563f2e7f0f50 <col:2> '<bound member function type>' ->assign_memo 0x563f2e7eab78
|     | `-CXXThisExpr 0x563f2e7f0f40 <col:2> 'const String *' implicit this
|     |-ImplicitCastExpr 0x563f2e7f1138 <col:14, col:19> 'const char *' <LValueToRValue>
|     | `-MemberExpr 0x563f2e7f0fd0 <col:14, col:19> 'const char *' lvalue .data 0x563f2e7ea7c0
|     |   `-MemberExpr 0x563f2e7f0fa0 <col:14, col:16> 'String::rep_t' lvalue ._r 0x563f2e7ea930
|     |     `-DeclRefExpr 0x563f2e7f0f80 <col:14> 'const String' lvalue ParmVar 0x563f2e7eaef8 'x' 'const String &'
|     |-ImplicitCastExpr 0x563f2e7f1150 <col:25, col:30> 'int' <LValueToRValue>
|     | `-MemberExpr 0x563f2e7f1050 <col:25, col:30> 'int' lvalue .length 0x563f2e7ea828
|     |   `-MemberExpr 0x563f2e7f1020 <col:25, col:27> 'String::rep_t' lvalue ._r 0x563f2e7ea930
|     |     `-DeclRefExpr 0x563f2e7f1000 <col:25> 'const String' lvalue ParmVar 0x563f2e7eaef8 'x' 'const String &'
|     `-ImplicitCastExpr 0x563f2e7f1168 <col:38, col:43> 'String::memo_t *' <LValueToRValue>
|       `-MemberExpr 0x563f2e7f10d0 <col:38, col:43> 'String::memo_t *' lvalue .memo 0x563f2e7ea8b8
|         `-MemberExpr 0x563f2e7f10a0 <col:38, col:40> 'String::rep_t' lvalue ._r 0x563f2e7ea930
|           `-DeclRefExpr 0x563f2e7f1080 <col:38> 'const String' lvalue ParmVar 0x563f2e7eaef8 'x' 'const String &'
|-CXXMethodDecl 0x563f2e7eb080 <line:271:5, line:278:5> line:271:17 used deref 'void () const' inline
| `-CompoundStmt 0x563f2e7f1b40 <col:31, line:278:5>
|   `-IfStmt 0x563f2e7f1b28 <line:272:2, line:277:2>
|     |-ImplicitCastExpr 0x563f2e7f1220 <line:272:6, col:9> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x563f2e7f1208 <col:6, col:9> 'String::memo_t *' <LValueToRValue>
|     |   `-MemberExpr 0x563f2e7f11d8 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x563f2e7ea8b8
|     |     `-MemberExpr 0x563f2e7f11a8 <col:6> 'String::rep_t' lvalue ->_r 0x563f2e7ea930
|     |       `-CXXThisExpr 0x563f2e7f1198 <col:6> 'const String *' implicit this
|     `-CompoundStmt 0x563f2e7f1b00 <col:15, line:277:2>
|       |-ParenExpr 0x563f2e7f16d0 <line:273:6, col:166> 'void'
|       | `-ConditionalOperator 0x563f2e7f16a0 <col:7, col:165> 'void'
|       |   |-CXXStaticCastExpr 0x563f2e7f1330 <col:7, col:44> 'bool' static_cast<_Bool> <NoOp>
|       |   | `-ImplicitCastExpr 0x563f2e7f1318 <col:27, col:36> 'bool' <IntegralToBoolean> part_of_explicit_cast
|       |   |   `-ImplicitCastExpr 0x563f2e7f1300 <col:27, col:36> 'uint32_t':'unsigned int' <LValueToRValue> part_of_explicit_cast
|       |   |     `-MemberExpr 0x563f2e7f12c0 <col:27, col:36> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x563f2e7ea188
|       |   |       `-ImplicitCastExpr 0x563f2e7f12a8 <col:27, col:30> 'String::memo_t *' <LValueToRValue>
|       |   |         `-MemberExpr 0x563f2e7f1278 <col:27, col:30> 'String::memo_t *' lvalue .memo 0x563f2e7ea8b8
|       |   |           `-MemberExpr 0x563f2e7f1248 <col:27> 'String::rep_t' lvalue ->_r 0x563f2e7ea930
|       |   |             `-CXXThisExpr 0x563f2e7f1238 <col:27> 'const String *' implicit this
|       |   |-CXXFunctionalCastExpr 0x563f2e7f1390 <col:48, col:55> 'void' functional cast to void <ToVoid>
|       |   | `-IntegerLiteral 0x563f2e7f1370 <col:54> 'int' 0
|       |   `-CallExpr 0x563f2e7f1600 <col:59, col:165> 'void'
|       |     |-ImplicitCastExpr 0x563f2e7f15e8 <col:59> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x563f2e7f1568 <col:59> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x563f2e5515c0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|       |     |-ImplicitCastExpr 0x563f2e7f1640 <col:74> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x563f2e7f1478 <col:74> 'const char [18]' lvalue "_r.memo->refcount"
|       |     |-ImplicitCastExpr 0x563f2e7f1658 <col:95> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x563f2e7f14a8 <col:95> 'const char [29]' lvalue "../dummy_inc/click/string.hh"
|       |     |-ImplicitCastExpr 0x563f2e7f1670 <col:127> 'unsigned int' <IntegralCast>
|       |     | `-IntegerLiteral 0x563f2e7f14e0 <col:127> 'int' 273
|       |     `-ImplicitCastExpr 0x563f2e7f1688 <col:132, col:146> 'const char *' <ArrayToPointerDecay>
|       |       `-UnaryOperator 0x563f2e7f1550 <col:132, col:146> 'const char [27]' lvalue prefix '__extension__' cannot overflow
|       |         `-PredefinedExpr 0x563f2e7f1538 <col:146> 'const char [27]' lvalue __PRETTY_FUNCTION__
|       |           `-StringLiteral 0x563f2e7f1500 <col:146> 'const char [27]' lvalue "void String::deref() const"
|       |-IfStmt 0x563f2e7f1a20 <line:274:6, line:275:22>
|       | |-CallExpr 0x563f2e7f18e0 <line:274:10, col:57> 'bool'
|       | | |-ImplicitCastExpr 0x563f2e7f18c8 <col:10, col:27> 'bool (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | | | `-DeclRefExpr 0x563f2e7f1840 <col:10, col:27> 'bool (volatile uint32_t &)' lvalue CXXMethod 0x563f2e7da9f0 'dec_and_test' 'bool (volatile uint32_t &)'
|       | | `-MemberExpr 0x563f2e7f1810 <col:40, col:49> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x563f2e7ea188
|       | |   `-ImplicitCastExpr 0x563f2e7f17f8 <col:40, col:43> 'String::memo_t *' <LValueToRValue>
|       | |     `-MemberExpr 0x563f2e7f17c8 <col:40, col:43> 'String::memo_t *' lvalue .memo 0x563f2e7ea8b8
|       | |       `-MemberExpr 0x563f2e7f1798 <col:40> 'String::rep_t' lvalue ->_r 0x563f2e7ea930
|       | |         `-CXXThisExpr 0x563f2e7f1788 <col:40> 'const String *' implicit this
|       | `-CallExpr 0x563f2e7f19e0 <line:275:3, col:22> 'void'
|       |   |-ImplicitCastExpr 0x563f2e7f19c8 <col:3> 'void (*)(String::memo_t *)' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x563f2e7f1908 <col:3> 'void (String::memo_t *)' lvalue CXXMethod 0x563f2e7ef860 'delete_memo' 'void (String::memo_t *)'
|       |   `-ImplicitCastExpr 0x563f2e7f1a08 <col:15, col:18> 'String::memo_t *' <LValueToRValue>
|       |     `-MemberExpr 0x563f2e7f1968 <col:15, col:18> 'String::memo_t *' lvalue .memo 0x563f2e7ea8b8
|       |       `-MemberExpr 0x563f2e7f1938 <col:15> 'String::rep_t' lvalue ->_r 0x563f2e7ea930
|       |         `-CXXThisExpr 0x563f2e7f1928 <col:15> 'const String *' implicit this
|       `-BinaryOperator 0x563f2e7f1ae0 <line:276:6, col:16> 'String::memo_t *' lvalue '='
|         |-MemberExpr 0x563f2e7f1a78 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x563f2e7ea8b8
|         | `-MemberExpr 0x563f2e7f1a48 <col:6> 'String::rep_t' lvalue ->_r 0x563f2e7ea930
|         |   `-CXXThisExpr 0x563f2e7f1a38 <col:6> 'const String *' implicit this
|         `-ImplicitCastExpr 0x563f2e7f1ac8 <col:16> 'String::memo_t *' <NullToPointer>
|           `-IntegerLiteral 0x563f2e7f1aa8 <col:16> 'int' 0
|-CXXMethodDecl 0x563f2e7eb318 <line:280:5, col:56> col:10 used assign 'void (const char *, int, bool)'
| |-ParmVarDecl 0x563f2e7eb138 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x563f2e7eb1b8 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x563f2e7eb230 <col:41, col:46> col:46 need_deref 'bool'
|-CXXMethodDecl 0x563f2e7eb3f0 <line:281:5, col:31> col:10 assign_out_of_memory 'void ()'
|-CXXMethodDecl 0x563f2e7eb640 <line:282:5, col:53> col:10 used append 'void (const char *, int, String::memo_t *)'
| |-ParmVarDecl 0x563f2e7eb4a8 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x563f2e7eb528 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x563f2e7eb5a0 <col:41, col:49> col:49 memo 'String::memo_t *'
|-CXXMethodDecl 0x563f2e7eb828 <line:283:5, col:58> col:19 used hard_make_stable 'String (const char *, int)' static
| |-ParmVarDecl 0x563f2e7eb710 <col:36, col:48> col:48 s 'const char *'
| `-ParmVarDecl 0x563f2e7eb790 <col:51, col:55> col:55 len 'int'
|-CXXMethodDecl 0x563f2e7eb928 <line:284:5, line:286:5> line:284:27 used absent_memo 'String::memo_t *()' static inline
| `-CompoundStmt 0x563f2e7f1c18 <col:41, line:286:5>
|   `-ReturnStmt 0x563f2e7f1c08 <line:285:2, col:48>
|     `-CXXReinterpretCastExpr 0x563f2e7f1bd8 <col:9, col:48> 'String::memo_t *' reinterpret_cast<struct String::memo_t *> <IntegralToPointer>
|       `-CXXFunctionalCastExpr 0x563f2e7f1ba0 <col:36, col:47> 'uintptr_t':'unsigned long' functional cast to uintptr_t <NoOp>
|         `-ImplicitCastExpr 0x563f2e7f1b88 <col:46> 'uintptr_t':'unsigned long' <IntegralCast> part_of_explicit_cast
|           `-IntegerLiteral 0x563f2e7f1b68 <col:46> 'int' 1
|-CXXMethodDecl 0x563f2e7ebbc8 <line:287:5, col:68> col:20 create_memo 'String::memo_t *(char *, int, int)' static
| |-ParmVarDecl 0x563f2e7eb9e0 <col:32, col:38> col:38 space 'char *'
| |-ParmVarDecl 0x563f2e7eba60 <col:45, col:49> col:49 dirty 'int'
| `-ParmVarDecl 0x563f2e7ebae0 <col:56, col:60> col:60 capacity 'int'
|-CXXMethodDecl 0x563f2e7ef860 <line:288:5, col:41> col:17 used delete_memo 'void (String::memo_t *)' static
| `-ParmVarDecl 0x563f2e7ebc90 <col:29, col:37> col:37 memo 'String::memo_t *'
|-CXXMethodDecl 0x563f2e7ef930 <line:289:5, col:30> col:17 hard_c_str 'const char *() const'
|-CXXMethodDecl 0x563f2e7efb00 <line:290:5, col:46> col:10 used hard_equals 'bool (const char *, int) const'
| |-ParmVarDecl 0x563f2e7ef9e8 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x563f2e7efa68 <col:37, col:41> col:41 len 'int'
|-VarDecl 0x563f2e7efbc0 <line:292:5, col:23> col:23 used null_data 'const char' static
|-VarDecl 0x563f2e7efc88 <line:293:5, col:34> col:23 used oom_data 'const char [15]' static
|-VarDecl 0x563f2e7efd88 <line:294:5, col:34> col:23 int_data 'const char [20]' static
|-VarDecl 0x563f2e7efe00 <line:295:5, col:24> col:24 used null_string_rep 'const String::rep_t' static
|-VarDecl 0x563f2e7efe78 <line:296:5, col:24> col:24 used oom_string_rep 'const String::rep_t' static
|-EnumDecl 0x563f2e7efee0 <line:297:5, col:25> col:5
| `-EnumConstantDecl 0x563f2e7effe0 <col:12, col:22> col:12 referenced oom_len 'String::(anonymous enum at ../dummy_inc/click/string.hh:297:5)'
|   `-ImplicitCastExpr 0x563f2e7f0030 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x563f2e7effc0 <col:22> 'int' Int: 14
|       `-IntegerLiteral 0x563f2e7effa0 <col:22> 'int' 14
|-CXXMethodDecl 0x563f2e7f0248 <line:299:5, col:46> col:19 make_claim 'String (char *, int, int)' static
| |-ParmVarDecl 0x563f2e7f0060 <col:30, col:35> col:36 'char *'
| |-ParmVarDecl 0x563f2e7f00e0 <col:38> col:41 'int'
| `-ParmVarDecl 0x563f2e7f0160 <col:43> col:46 'int'
|-FriendDecl 0x563f2e7f0350 <line:301:5, col:19> col:12 'struct rep_t':'String::rep_t'
`-FriendDecl 0x563f2e7f03e0 <line:302:5, col:18> col:12 'class StringAccum':'StringAccum'

Layout: <CGRecordLayout
  LLVMType:%class.String = type { %"struct.String::rep_t" }
  NonVirtualBaseLLVMType:%class.String = type { %"struct.String::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x563f2ea5ccb0 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'typed_array_memory<String>'
|-CXXRecordDecl 0x563f2ea5ce88 prev 0x563f2ea5ccb0 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x563f2ea5cf18 <col:46, col:52> col:46 public
|-TypedefDecl 0x563f2ea5cf40 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x563f2e4b1580 'int'
|-TypedefDecl 0x563f2ea5e8a0 <line:13:5, col:31> col:31 type 'typename typed_array_memory<String>::type':'String'
| `-ElaboratedType 0x563f2ea5e850 'typename typed_array_memory<String>::type' sugar
|   `-TypedefType 0x563f2ea5e830 'typed_array_memory<String>::type' sugar
|     |-Typedef 0x563f2ea5d158 'type'
|     `-SubstTemplateTypeParmType 0x563f2ea5d120 'String' sugar
|       |-TemplateTypeParmType 0x563f2e7a5df0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563f2e7a5da0 'T'
|       `-RecordType 0x563f2e7e15d0 'String'
|         `-CXXRecord 0x563f2e7e1540 'String'
|-TypedefDecl 0x563f2ea5e958 <line:14:5, col:19> col:19 iterator 'vector_memory<typed_array_memory<String> >::type *'
| `-PointerType 0x563f2ea5e920 'vector_memory<typed_array_memory<String> >::type *'
|   `-TypedefType 0x563f2ea5e900 'vector_memory<typed_array_memory<String> >::type' sugar
|     |-Typedef 0x563f2ea5e8a0 'type'
|     `-ElaboratedType 0x563f2ea5e850 'typename typed_array_memory<String>::type' sugar
|       `-TypedefType 0x563f2ea5e830 'typed_array_memory<String>::type' sugar
|         |-Typedef 0x563f2ea5d158 'type'
|         `-SubstTemplateTypeParmType 0x563f2ea5d120 'String' sugar
|           |-TemplateTypeParmType 0x563f2e7a5df0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x563f2e7a5da0 'T'
|           `-RecordType 0x563f2e7e15d0 'String'
|             `-CXXRecord 0x563f2e7e1540 'String'
|-CXXMethodDecl 0x563f2ea5ead8 <line:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<typed_array_memory<String> >::type *) const' inline
| `-ParmVarDecl 0x563f2ea5e9e8 <col:36, col:48> col:48 argp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXConstructorDecl 0x563f2ea5ebc8 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x563f2ea5eca8 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x563f2ea5eca8
|-CXXMethodDecl 0x563f2ea5ef78 <line:25:5, col:43> col:10 assign 'void (const vector_memory<typed_array_memory<String> > &)'
| `-ParmVarDecl 0x563f2ea5ee80 <col:17, col:42> col:42 x 'const vector_memory<typed_array_memory<String> > &'
|-CXXMethodDecl 0x563f2ea5f1b8 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x563f2ea5f030 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x563f2ea5f0a8 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x563f2ea5f388 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x563f2ea5f278 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x563f2ea5f2f0 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x563f2ea5f4e8 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<typed_array_memory<String> >::iterator ()'
|-CXXMethodDecl 0x563f2ea5f5b8 <line:31:5, line:33:5> line:31:14 end 'vector_memory<typed_array_memory<String> >::iterator ()'
|-CXXMethodDecl 0x563f2ea5f808 <line:34:5, col:48> col:14 insert 'vector_memory<typed_array_memory<String> >::iterator (vector_memory<typed_array_memory<String> >::iterator, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x563f2ea5f678 <col:21, col:30> col:30 it 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
| `-ParmVarDecl 0x563f2ea5f6f0 <col:34, col:46> col:46 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x563f2ea5fa68 <line:35:5, col:42> col:14 erase 'vector_memory<typed_array_memory<String> >::iterator (vector_memory<typed_array_memory<String> >::iterator, vector_memory<typed_array_memory<String> >::iterator)'
| |-ParmVarDecl 0x563f2ea5f8d8 <col:20, col:29> col:29 a 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
| `-ParmVarDecl 0x563f2ea5f950 <col:32, col:41> col:41 b 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x563f2ea5fc28 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<typed_array_memory<String> >::type *)' inline
| `-ParmVarDecl 0x563f2ea5fb38 <col:27, col:39> col:39 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x563f2ea5fde8 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<typed_array_memory<String> >::type *)' inline
| `-ParmVarDecl 0x563f2ea5fcf0 <col:37, col:43> col:43 vp 'vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x563f2ea5fea0 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x563f2ea5ff50 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x563f2ea60188 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x563f2ea60000 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x563f2ea60078 <col:45, col:57> col:57 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x563f2ea60428 <line:66:5, col:35> col:10 swap 'void (vector_memory<typed_array_memory<String> > &)'
| `-ParmVarDecl 0x563f2ea60330 <col:15, col:34> col:34 x 'vector_memory<typed_array_memory<String> > &'
|-FieldDecl 0x563f2ea604f0 <line:68:5, col:11> col:11 l_ 'vector_memory<typed_array_memory<String> >::type *'
|-FieldDecl 0x563f2ea60540 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x563f2ea60590 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.1 = type { %class.String*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.1 = type { %class.String*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x563f2ea19d80 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'String'
|-CXXRecordDecl 0x563f2ea5b718 prev 0x563f2ea19d80 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x563f2ea5cc20 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<String>::type':'typed_array_memory<String>'
| `-ElaboratedType 0x563f2ea5cbd0 'typename array_memory<String>::type' sugar
|   `-TypedefType 0x563f2ea5cbb0 'conditional<false, sized_array_memory<24>, typed_array_memory<String> >::type' sugar
|     |-Typedef 0x563f2ea5ca60 'type'
|     `-SubstTemplateTypeParmType 0x563f2ea5c8f0 'typed_array_memory<String>' sugar
|       |-TemplateTypeParmType 0x563f2e77b980 'F' dependent depth 0 index 1
|       | `-TemplateTypeParm 0x563f2e77b928 'F'
|       `-RecordType 0x563f2ea5c550 'typed_array_memory<String>'
|         `-ClassTemplateSpecialization 0x563f2ea5c470 'typed_array_memory'
|-FieldDecl 0x563f2ea605e0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<String>::array_memory_type>':'vector_memory<typed_array_memory<String> >' mutable
|-AccessSpecDecl 0x563f2ea60630 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x563f2ea60668 <line:118:5, col:15> col:15 value_type 'String':'String'
| `-SubstTemplateTypeParmType 0x563f2ea5b7b0 'String' sugar
|   |-TemplateTypeParmType 0x563f2e7b3110 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x563f2e7b30b8 'T'
|   `-RecordType 0x563f2e7e15d0 'String'
|     `-CXXRecord 0x563f2e7e1540 'String'
|-TypedefDecl 0x563f2ea606f8 <line:119:5, col:16> col:16 reference 'String &'
| `-LValueReferenceType 0x563f2ea606c0 'String &'
|   `-SubstTemplateTypeParmType 0x563f2ea5b7b0 'String' sugar
|     |-TemplateTypeParmType 0x563f2e7b3110 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x563f2e7b30b8 'T'
|     `-RecordType 0x563f2e7e15d0 'String'
|       `-CXXRecord 0x563f2e7e1540 'String'
|-TypedefDecl 0x563f2ea60788 <line:120:5, col:22> col:22 const_reference 'const String &'
| `-LValueReferenceType 0x563f2ea60750 'const String &'
|   `-QualType 0x563f2ea5b7b1 'const String' const
|     `-SubstTemplateTypeParmType 0x563f2ea5b7b0 'String' sugar
|       |-TemplateTypeParmType 0x563f2e7b3110 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563f2e7b30b8 'T'
|       `-RecordType 0x563f2e7e15d0 'String'
|         `-CXXRecord 0x563f2e7e1540 'String'
|-TypedefDecl 0x563f2ea60818 <line:121:5, col:16> col:16 pointer 'String *'
| `-PointerType 0x563f2ea607e0 'String *'
|   `-SubstTemplateTypeParmType 0x563f2ea5b7b0 'String' sugar
|     |-TemplateTypeParmType 0x563f2e7b3110 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x563f2e7b30b8 'T'
|     `-RecordType 0x563f2e7e15d0 'String'
|       `-CXXRecord 0x563f2e7e1540 'String'
|-TypedefDecl 0x563f2ea608c0 <line:122:5, col:22> col:22 const_pointer 'const String *'
| `-PointerType 0x563f2ea60870 'const String *'
|   `-QualType 0x563f2ea5b7b1 'const String' const
|     `-SubstTemplateTypeParmType 0x563f2ea5b7b0 'String' sugar
|       |-TemplateTypeParmType 0x563f2e7b3110 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563f2e7b30b8 'T'
|       `-RecordType 0x563f2e7e15d0 'String'
|         `-CXXRecord 0x563f2e7e1540 'String'
|-TypedefDecl 0x563f2ea61520 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<String>::type':'const String &'
| `-ElaboratedType 0x563f2ea614d0 'typename fast_argument<String>::type' sugar
|   `-TypedefType 0x563f2ea614b0 'fast_argument<String, true>::type' sugar
|     |-Typedef 0x563f2ea613e8 'type'
|     `-LValueReferenceType 0x563f2ea613b0 'const String &'
|       `-QualType 0x563f2ea61151 'const String' const
|         `-SubstTemplateTypeParmType 0x563f2ea61150 'String' sugar
|           |-TemplateTypeParmType 0x563f2e7858d0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x563f2e785878 'T'
|           `-RecordType 0x563f2e7e15d0 'String'
|             `-CXXRecord 0x563f2e7e1540 'String'
|-TypedefDecl 0x563f2ea61588 <line:126:5, col:22> col:22 const_access_type 'const String &'
| `-LValueReferenceType 0x563f2ea60750 'const String &'
|   `-QualType 0x563f2ea5b7b1 'const String' const
|     `-SubstTemplateTypeParmType 0x563f2ea5b7b0 'String' sugar
|       |-TemplateTypeParmType 0x563f2e7b3110 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563f2e7b30b8 'T'
|       `-RecordType 0x563f2e7e15d0 'String'
|         `-CXXRecord 0x563f2e7e1540 'String'
|-TypedefDecl 0x563f2ea615e0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x563f2e4b1580 'int'
|-TypedefDecl 0x563f2ea61648 <line:130:5, col:16> col:16 iterator 'String *'
| `-PointerType 0x563f2ea607e0 'String *'
|   `-SubstTemplateTypeParmType 0x563f2ea5b7b0 'String' sugar
|     |-TemplateTypeParmType 0x563f2e7b3110 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x563f2e7b30b8 'T'
|     `-RecordType 0x563f2e7e15d0 'String'
|       `-CXXRecord 0x563f2e7e1540 'String'
|-TypedefDecl 0x563f2ea616b0 <line:131:5, col:22> col:22 const_iterator 'const String *'
| `-PointerType 0x563f2ea60870 'const String *'
|   `-QualType 0x563f2ea5b7b1 'const String' const
|     `-SubstTemplateTypeParmType 0x563f2ea5b7b0 'String' sugar
|       |-TemplateTypeParmType 0x563f2e7b3110 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563f2e7b30b8 'T'
|       `-RecordType 0x563f2e7e15d0 'String'
|         `-CXXRecord 0x563f2e7e1540 'String'
|-EnumDecl 0x563f2ea61708 <line:134:5> col:5
| `-EnumConstantDecl 0x563f2ea61800 <col:12, col:40> col:12 RESERVE_GROW 'Vector<String>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x563f2ea617e0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x563f2e7b4798 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x563f2e7b4770 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x563f2e7b4750 <col:40> 'int' 1
|-CXXConstructorDecl 0x563f2ea61888 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x563f2ea61b18 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x563f2ea61940 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x563f2ea619e0 <col:41, col:61> col:61 v 'Vector<String>::value_argument_type':'const String &'
|-CXXConstructorDecl 0x563f2ea61da8 <line:139:5, col:37> col:12 Vector 'void (const Vector<String> &)' inline
| `-ParmVarDecl 0x563f2ea61c90 <col:19, col:36> col:36 x 'const Vector<String> &'
|-CXXConstructorDecl 0x563f2ea62068 <line:141:5, col:32> col:12 Vector 'void (Vector<String> &&)' inline
| `-ParmVarDecl 0x563f2ea61f50 <col:19, col:31> col:31 x 'Vector<String> &&'
|-CXXMethodDecl 0x563f2ea62380 <line:144:5, col:51> col:23 operator= 'Vector<String> &(const Vector<String> &)' inline
| `-ParmVarDecl 0x563f2ea62260 <col:33, col:50> col:50 x 'const Vector<String> &'
|-CXXMethodDecl 0x563f2ea62690 <line:146:5, col:46> col:23 operator= 'Vector<String> &(Vector<String> &&)' inline
| `-ParmVarDecl 0x563f2ea62570 <col:33, col:45> col:45 x 'Vector<String> &&'
|-CXXMethodDecl 0x563f2ea62980 <line:148:5, col:70> col:23 assign 'Vector<String> &(Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x563f2ea627c8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x563f2ea62840 <col:43, col:69> col:63 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x563f2ea62aa8 <line:150:5, col:55> col:49 begin 'Vector<String>::iterator ()'
| |-NoInlineAttr 0x563f2ea62b58 <col:20> Inherited
| `-OptimizeNoneAttr 0x563f2ea62bb0 <col:30> Inherited
|-CXXMethodDecl 0x563f2ea62bf8 <line:151:5, col:53> col:49 end 'Vector<String>::iterator ()'
| |-NoInlineAttr 0x563f2ea62ca8 <col:20> Inherited
| `-OptimizeNoneAttr 0x563f2ea62d00 <col:30> Inherited
|-CXXMethodDecl 0x563f2ea62dc8 <line:152:5, col:63> col:55 used begin 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x563f2ea62e78 <col:20> Inherited
| `-OptimizeNoneAttr 0x563f2ea62ed0 <col:30> Inherited
|-CXXMethodDecl 0x563f2ea62f18 <line:153:5, col:61> col:55 used end 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x563f2ea62fc8 <col:20> Inherited
| `-OptimizeNoneAttr 0x563f2ea63020 <col:30> Inherited
|-CXXMethodDecl 0x563f2ea63068 <line:154:5, col:64> col:55 cbegin 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x563f2ea63118 <col:20> Inherited
| `-OptimizeNoneAttr 0x563f2ea63170 <col:30> Inherited
|-CXXMethodDecl 0x563f2ea631b8 <line:155:5, col:62> col:55 cend 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x563f2ea63268 <col:20> Inherited
| `-OptimizeNoneAttr 0x563f2ea632c0 <col:30> Inherited
|-CXXMethodDecl 0x563f2ea632e8 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x563f2ea63398 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x563f2ea63448 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x563f2ea63608 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x563f2ea634f8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x563f2ea63570 <col:37, col:63> col:57 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x563f2ea63758 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x563f2ea636c8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x563f2ea63908 <line:163:5, col:65> col:43 operator[] 'String &(Vector::size_type)'
| |-ParmVarDecl 0x563f2ea63810 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x563f2ea639c0 <col:20>
| `-OptimizeNoneAttr 0x563f2ea63a18 <col:30>
|-CXXMethodDecl 0x563f2ea63b38 <line:164:5, col:73> col:49 operator[] 'const String &(Vector::size_type) const'
| |-ParmVarDecl 0x563f2ea63a40 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x563f2ea63bf0 <col:20>
| `-OptimizeNoneAttr 0x563f2ea63c48 <col:30>
|-CXXMethodDecl 0x563f2ea63d00 <line:165:5, col:29> col:15 at 'String &(Vector::size_type)' inline
| `-ParmVarDecl 0x563f2ea63c70 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x563f2ea63e48 <line:166:5, col:37> col:21 at 'const String &(Vector::size_type) const' inline
| `-ParmVarDecl 0x563f2ea63db8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x563f2ea63f78 <line:167:5, col:21> col:15 front 'String &()' inline
|-CXXMethodDecl 0x563f2ea64078 <line:168:5, col:29> col:21 front 'const String &() const' inline
|-CXXMethodDecl 0x563f2ea64148 <line:169:5, col:20> col:15 back 'String &()' inline
|-CXXMethodDecl 0x563f2ea64218 <line:170:5, col:28> col:21 back 'const String &() const' inline
|-CXXMethodDecl 0x563f2ea64358 <line:172:5, col:39> col:15 unchecked_at 'String &(Vector::size_type)' inline
| `-ParmVarDecl 0x563f2ea642c8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x563f2ea644a0 <line:173:5, col:47> col:21 unchecked_at 'const String &(Vector::size_type) const' inline
| `-ParmVarDecl 0x563f2ea64410 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x563f2ea645e8 <line:174:5, col:59> col:15 at_u 'String &(Vector::size_type)' inline
| |-ParmVarDecl 0x563f2ea64558 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x563f2ea646a0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x563f2ea647a0 <line:175:5, col:71> col:21 at_u 'const String &(Vector::size_type) const' inline
| |-ParmVarDecl 0x563f2ea64710 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x563f2ea64858 <col:60> Inherited "" ""
|-CXXMethodDecl 0x563f2ea64918 <line:177:5, col:20> col:15 data 'String *()' inline
|-CXXMethodDecl 0x563f2ea64a18 <line:178:5, col:28> col:21 data 'const String *() const' inline
|-CXXMethodDecl 0x563f2ea64b98 <line:180:5, col:48> col:17 used push_back 'void (Vector<String>::value_argument_type)' inline
| `-ParmVarDecl 0x563f2ea64ad8 <col:27, col:47> col:47 v 'Vector<String>::value_argument_type':'const String &'
|-FunctionTemplateDecl 0x563f2ea65358 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x563f2ea64c50 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<String>':'fast_argument<String, true>'
| `-CXXMethodDecl 0x563f2ea652b8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (String &&)' inline
|   `-ParmVarDecl 0x563f2ea651b8 <col:58, col:62> col:62 v 'String &&'
|-CXXMethodDecl 0x563f2ea65438 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x563f2ea65588 <line:186:5, col:49> col:17 push_front 'void (Vector<String>::value_argument_type)' inline
| `-ParmVarDecl 0x563f2ea654f8 <col:28, col:48> col:48 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x563f2ea65640 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x563f2ea65888 <line:189:5, col:62> col:21 insert 'Vector<String>::iterator (Vector<String>::iterator, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x563f2ea65700 <col:28, col:37> col:37 it 'Vector<String>::iterator':'String *'
| `-ParmVarDecl 0x563f2ea65778 <col:41, col:61> col:61 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x563f2ea65a18 <line:190:5, col:38> col:21 erase 'Vector<String>::iterator (Vector<String>::iterator)' inline
| `-ParmVarDecl 0x563f2ea65958 <col:27, col:36> col:36 it 'Vector<String>::iterator':'String *'
|-CXXMethodDecl 0x563f2ea65c28 <line:191:5, col:49> col:21 erase 'Vector<String>::iterator (Vector<String>::iterator, Vector<String>::iterator)' inline
| |-ParmVarDecl 0x563f2ea65ae0 <col:27, col:36> col:36 a 'Vector<String>::iterator':'String *'
| `-ParmVarDecl 0x563f2ea65b58 <col:39, col:48> col:48 b 'Vector<String>::iterator':'String *'
|-CXXMethodDecl 0x563f2ea65ce8 <line:193:5, col:23> col:17 used clear 'void ()' inline
|-CXXMethodDecl 0x563f2ea65f48 <line:195:5, col:34> col:17 swap 'void (Vector<String> &)' inline
| `-ParmVarDecl 0x563f2ea65e50 <col:22, col:33> col:33 x 'Vector<String> &'
`-CXXDestructorDecl 0x563f2ea66018 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x563f2ea66018

Layout: <CGRecordLayout
  LLVMType:%class.Vector.0 = type { %class.vector_memory.1 }
  NonVirtualBaseLLVMType:%class.Vector.0 = type { %class.vector_memory.1 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x563f2eade3b0 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<4>'
|-CXXRecordDecl 0x563f2eade588 prev 0x563f2eade3b0 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x563f2eade618 <col:46, col:52> col:46 public
|-TypedefDecl 0x563f2eade640 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x563f2e4b1580 'int'
|-TypedefDecl 0x563f2eae0210 <line:13:5, col:31> col:31 type 'typename sized_array_memory<4>::type':'char_array<4>'
| `-ElaboratedType 0x563f2eae01c0 'typename sized_array_memory<4>::type' sugar
|   `-TypedefType 0x563f2eadeaf0 'sized_array_memory<4>::type' sugar
|     |-Typedef 0x563f2eade9f0 'type'
|     `-TemplateSpecializationType 0x563f2eade980 'char_array<4UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x563f2eade860 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 4
|       |   `-SubstNonTypeTemplateParmExpr 0x563f2eade840 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x563f2eade820 <col:24> 'unsigned long' 4
|       `-RecordType 0x563f2eade960 'char_array<4>'
|         `-ClassTemplateSpecialization 0x563f2eade880 'char_array'
|-TypedefDecl 0x563f2eae02c8 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<4> >::type *'
| `-PointerType 0x563f2eae0290 'vector_memory<sized_array_memory<4> >::type *'
|   `-TypedefType 0x563f2eae0270 'vector_memory<sized_array_memory<4> >::type' sugar
|     |-Typedef 0x563f2eae0210 'type'
|     `-ElaboratedType 0x563f2eae01c0 'typename sized_array_memory<4>::type' sugar
|       `-TypedefType 0x563f2eadeaf0 'sized_array_memory<4>::type' sugar
|         |-Typedef 0x563f2eade9f0 'type'
|         `-TemplateSpecializationType 0x563f2eade980 'char_array<4UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x563f2eade860 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 4
|           |   `-SubstNonTypeTemplateParmExpr 0x563f2eade840 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x563f2eade820 <col:24> 'unsigned long' 4
|           `-RecordType 0x563f2eade960 'char_array<4>'
|             `-ClassTemplateSpecialization 0x563f2eade880 'char_array'
|-CXXMethodDecl 0x563f2eae0448 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<4> >::type *) const' inline
| `-ParmVarDecl 0x563f2eae0358 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXConstructorDecl 0x563f2eae0538 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x563f2eae0618 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x563f2eae0618
|-CXXMethodDecl 0x563f2eae08e8 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<4> > &)'
| `-ParmVarDecl 0x563f2eae07f0 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<4> > &'
|-CXXMethodDecl 0x563f2eae0b28 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x563f2eae09a0 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x563f2eae0a18 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x563f2eae0cf8 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x563f2eae0be8 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x563f2eae0c60 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x563f2eae0e58 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<4> >::iterator ()'
|-CXXMethodDecl 0x563f2eae0f28 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<4> >::iterator ()'
|-CXXMethodDecl 0x563f2eae1178 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<4> >::iterator (vector_memory<sized_array_memory<4> >::iterator, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x563f2eae0fe8 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<4> >::iterator':'vector_memory<sized_array_memory<4> >::type *'
| `-ParmVarDecl 0x563f2eae1060 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x563f2eae13d8 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<4> >::iterator (vector_memory<sized_array_memory<4> >::iterator, vector_memory<sized_array_memory<4> >::iterator)'
| |-ParmVarDecl 0x563f2eae1248 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<4> >::iterator':'vector_memory<sized_array_memory<4> >::type *'
| `-ParmVarDecl 0x563f2eae12c0 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<4> >::iterator':'vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x563f2eae1598 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<4> >::type *)' inline
| `-ParmVarDecl 0x563f2eae14a8 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x563f2eae1758 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<4> >::type *)' inline
| `-ParmVarDecl 0x563f2eae1660 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x563f2eae1810 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x563f2eae18c0 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x563f2eae1af8 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x563f2eae1970 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x563f2eae19e8 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x563f2eae1d98 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<4> > &)'
| `-ParmVarDecl 0x563f2eae1ca0 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<4> > &'
|-FieldDecl 0x563f2eae1e60 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<4> >::type *'
|-FieldDecl 0x563f2eae1eb0 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x563f2eae1f00 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.3 = type { %struct.char_array.4*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.3 = type { %struct.char_array.4*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x563f2ebac9b0 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'unsigned int'
|-CXXRecordDecl 0x563f2ebacbb8 prev 0x563f2ebac9b0 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x563f2ebadbd0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<unsigned int>::type':'sized_array_memory<4>'
| `-ElaboratedType 0x563f2ebadb80 'typename array_memory<unsigned int>::type' sugar
|   `-TypedefType 0x563f2ebadb60 'conditional<true, sized_array_memory<4>, typed_array_memory<unsigned int> >::type' sugar
|     |-Typedef 0x563f2ebada10 'type'
|     `-SubstTemplateTypeParmType 0x563f2eaddf80 'sized_array_memory<4>' sugar
|       |-TemplateTypeParmType 0x563f2e77b200 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563f2e77b1a8 'T'
|       `-RecordType 0x563f2eaddad0 'sized_array_memory<4>'
|         `-ClassTemplateSpecialization 0x563f2eadd9e8 'sized_array_memory'
|-FieldDecl 0x563f2ebadcd0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<unsigned int>::array_memory_type>':'vector_memory<sized_array_memory<4> >' mutable
|-AccessSpecDecl 0x563f2ebadd20 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x563f2ebadd58 <line:118:5, col:15> col:15 value_type 'unsigned int':'unsigned int'
| `-SubstTemplateTypeParmType 0x563f2ebacc50 'unsigned int' sugar
|   |-TemplateTypeParmType 0x563f2e7b3110 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x563f2e7b30b8 'T'
|   `-BuiltinType 0x563f2e4b1620 'unsigned int'
|-TypedefDecl 0x563f2ebadde8 <line:119:5, col:16> col:16 reference 'unsigned int &'
| `-LValueReferenceType 0x563f2ebaddb0 'unsigned int &'
|   `-SubstTemplateTypeParmType 0x563f2ebacc50 'unsigned int' sugar
|     |-TemplateTypeParmType 0x563f2e7b3110 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x563f2e7b30b8 'T'
|     `-BuiltinType 0x563f2e4b1620 'unsigned int'
|-TypedefDecl 0x563f2ebadea8 <line:120:5, col:22> col:22 const_reference 'const unsigned int &'
| `-LValueReferenceType 0x563f2ebade70 'const unsigned int &'
|   `-QualType 0x563f2ebacc51 'const unsigned int' const
|     `-SubstTemplateTypeParmType 0x563f2ebacc50 'unsigned int' sugar
|       |-TemplateTypeParmType 0x563f2e7b3110 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563f2e7b30b8 'T'
|       `-BuiltinType 0x563f2e4b1620 'unsigned int'
|-TypedefDecl 0x563f2ebadf38 <line:121:5, col:16> col:16 pointer 'unsigned int *'
| `-PointerType 0x563f2ebadf00 'unsigned int *'
|   `-SubstTemplateTypeParmType 0x563f2ebacc50 'unsigned int' sugar
|     |-TemplateTypeParmType 0x563f2e7b3110 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x563f2e7b30b8 'T'
|     `-BuiltinType 0x563f2e4b1620 'unsigned int'
|-TypedefDecl 0x563f2ebadfc8 <line:122:5, col:22> col:22 const_pointer 'const unsigned int *'
| `-PointerType 0x563f2ebadf90 'const unsigned int *'
|   `-QualType 0x563f2ebacc51 'const unsigned int' const
|     `-SubstTemplateTypeParmType 0x563f2ebacc50 'unsigned int' sugar
|       |-TemplateTypeParmType 0x563f2e7b3110 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563f2e7b30b8 'T'
|       `-BuiltinType 0x563f2e4b1620 'unsigned int'
|-TypedefDecl 0x563f2ebaebb0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<unsigned int>::type':'unsigned int'
| `-ElaboratedType 0x563f2ebaeb60 'typename fast_argument<unsigned int>::type' sugar
|   `-TypedefType 0x563f2ebaeb40 'fast_argument<unsigned int, false>::type' sugar
|     |-Typedef 0x563f2ebaead0 'type'
|     `-SubstTemplateTypeParmType 0x563f2ebae890 'unsigned int' sugar
|       |-TemplateTypeParmType 0x563f2e786000 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563f2e785fb0 'T'
|       `-BuiltinType 0x563f2e4b1620 'unsigned int'
|-TypedefDecl 0x563f2ebaec18 <line:126:5, col:22> col:22 const_access_type 'const unsigned int &'
| `-LValueReferenceType 0x563f2ebade70 'const unsigned int &'
|   `-QualType 0x563f2ebacc51 'const unsigned int' const
|     `-SubstTemplateTypeParmType 0x563f2ebacc50 'unsigned int' sugar
|       |-TemplateTypeParmType 0x563f2e7b3110 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563f2e7b30b8 'T'
|       `-BuiltinType 0x563f2e4b1620 'unsigned int'
|-TypedefDecl 0x563f2ebaec70 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x563f2e4b1580 'int'
|-TypedefDecl 0x563f2ebaecd8 <line:130:5, col:16> col:16 iterator 'unsigned int *'
| `-PointerType 0x563f2ebadf00 'unsigned int *'
|   `-SubstTemplateTypeParmType 0x563f2ebacc50 'unsigned int' sugar
|     |-TemplateTypeParmType 0x563f2e7b3110 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x563f2e7b30b8 'T'
|     `-BuiltinType 0x563f2e4b1620 'unsigned int'
|-TypedefDecl 0x563f2ebaed40 <line:131:5, col:22> col:22 const_iterator 'const unsigned int *'
| `-PointerType 0x563f2ebadf90 'const unsigned int *'
|   `-QualType 0x563f2ebacc51 'const unsigned int' const
|     `-SubstTemplateTypeParmType 0x563f2ebacc50 'unsigned int' sugar
|       |-TemplateTypeParmType 0x563f2e7b3110 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563f2e7b30b8 'T'
|       `-BuiltinType 0x563f2e4b1620 'unsigned int'
|-EnumDecl 0x563f2ebaed98 <line:134:5> col:5
| `-EnumConstantDecl 0x563f2ebaee90 <col:12, col:40> col:12 RESERVE_GROW 'Vector<unsigned int>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x563f2ebaee70 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x563f2e7b4798 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x563f2e7b4770 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x563f2e7b4750 <col:40> 'int' 1
|-CXXConstructorDecl 0x563f2ebaef18 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x563f2ebaf168 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<unsigned int>::value_argument_type)' inline
| |-ParmVarDecl 0x563f2ebaefd0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x563f2ebaf070 <col:41, col:61> col:61 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXConstructorDecl 0x563f2ebaf428 <line:139:5, col:37> col:12 Vector 'void (const Vector<unsigned int> &)' inline
| `-ParmVarDecl 0x563f2ebaf310 <col:19, col:36> col:36 x 'const Vector<unsigned int> &'
|-CXXConstructorDecl 0x563f2ebaf6e8 <line:141:5, col:32> col:12 Vector 'void (Vector<unsigned int> &&)' inline
| `-ParmVarDecl 0x563f2ebaf5d0 <col:19, col:31> col:31 x 'Vector<unsigned int> &&'
|-CXXMethodDecl 0x563f2ebafa30 <line:144:5, col:51> col:23 operator= 'Vector<unsigned int> &(const Vector<unsigned int> &)' inline
| `-ParmVarDecl 0x563f2ebaf910 <col:33, col:50> col:50 x 'const Vector<unsigned int> &'
|-CXXMethodDecl 0x563f2ebafd40 <line:146:5, col:46> col:23 operator= 'Vector<unsigned int> &(Vector<unsigned int> &&)' inline
| `-ParmVarDecl 0x563f2ebafc20 <col:33, col:45> col:45 x 'Vector<unsigned int> &&'
|-CXXMethodDecl 0x563f2ebb0030 <line:148:5, col:70> col:23 assign 'Vector<unsigned int> &(Vector::size_type, Vector<unsigned int>::value_argument_type)' inline
| |-ParmVarDecl 0x563f2ebafe78 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x563f2ebafef0 <col:43, col:69> col:63 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXMethodDecl 0x563f2ebb0158 <line:150:5, col:55> col:49 begin 'Vector<unsigned int>::iterator ()'
| |-NoInlineAttr 0x563f2ebb0238 <col:20> Inherited
| `-OptimizeNoneAttr 0x563f2ebb0290 <col:30> Inherited
|-CXXMethodDecl 0x563f2ebb02d8 <line:151:5, col:53> col:49 end 'Vector<unsigned int>::iterator ()'
| |-NoInlineAttr 0x563f2ebb0388 <col:20> Inherited
| `-OptimizeNoneAttr 0x563f2ebb03e0 <col:30> Inherited
|-CXXMethodDecl 0x563f2ebb0478 <line:152:5, col:63> col:55 begin 'Vector<unsigned int>::const_iterator () const'
| |-NoInlineAttr 0x563f2ebb0528 <col:20> Inherited
| `-OptimizeNoneAttr 0x563f2ebb1a30 <col:30> Inherited
|-CXXMethodDecl 0x563f2ebb1a78 <line:153:5, col:61> col:55 end 'Vector<unsigned int>::const_iterator () const'
| |-NoInlineAttr 0x563f2ebb1b28 <col:20> Inherited
| `-OptimizeNoneAttr 0x563f2ebb1b80 <col:30> Inherited
|-CXXMethodDecl 0x563f2ebb1bc8 <line:154:5, col:64> col:55 cbegin 'Vector<unsigned int>::const_iterator () const'
| |-NoInlineAttr 0x563f2ebb1c78 <col:20> Inherited
| `-OptimizeNoneAttr 0x563f2ebb1cd0 <col:30> Inherited
|-CXXMethodDecl 0x563f2ebb1d18 <line:155:5, col:62> col:55 cend 'Vector<unsigned int>::const_iterator () const'
| |-NoInlineAttr 0x563f2ebb1dc8 <col:20> Inherited
| `-OptimizeNoneAttr 0x563f2ebb1e20 <col:30> Inherited
|-CXXMethodDecl 0x563f2ebb1e48 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x563f2ebb1ef8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x563f2ebb1fa8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x563f2ebb2168 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<unsigned int>::value_argument_type)' inline
| |-ParmVarDecl 0x563f2ebb2058 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x563f2ebb20d0 <col:37, col:63> col:57 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXMethodDecl 0x563f2ebb22b8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x563f2ebb2228 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x563f2ebb2468 <line:163:5, col:65> col:43 operator[] 'unsigned int &(Vector::size_type)'
| |-ParmVarDecl 0x563f2ebb2370 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x563f2ebb2520 <col:20>
| `-OptimizeNoneAttr 0x563f2ebb2578 <col:30>
|-CXXMethodDecl 0x563f2ebb2698 <line:164:5, col:73> col:49 operator[] 'const unsigned int &(Vector::size_type) const'
| |-ParmVarDecl 0x563f2ebb25a0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x563f2ebb2750 <col:20>
| `-OptimizeNoneAttr 0x563f2ebb27a8 <col:30>
|-CXXMethodDecl 0x563f2ebb2860 <line:165:5, col:29> col:15 at 'unsigned int &(Vector::size_type)' inline
| `-ParmVarDecl 0x563f2ebb27d0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x563f2ebb29a8 <line:166:5, col:37> col:21 at 'const unsigned int &(Vector::size_type) const' inline
| `-ParmVarDecl 0x563f2ebb2918 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x563f2ebb2ad8 <line:167:5, col:21> col:15 front 'unsigned int &()' inline
|-CXXMethodDecl 0x563f2ebb2c08 <line:168:5, col:29> col:21 front 'const unsigned int &() const' inline
|-CXXMethodDecl 0x563f2ebb2cd8 <line:169:5, col:20> col:15 back 'unsigned int &()' inline
|-CXXMethodDecl 0x563f2ebb2da8 <line:170:5, col:28> col:21 back 'const unsigned int &() const' inline
|-CXXMethodDecl 0x563f2ebb2ee8 <line:172:5, col:39> col:15 unchecked_at 'unsigned int &(Vector::size_type)' inline
| `-ParmVarDecl 0x563f2ebb2e58 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x563f2ebb3030 <line:173:5, col:47> col:21 unchecked_at 'const unsigned int &(Vector::size_type) const' inline
| `-ParmVarDecl 0x563f2ebb2fa0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x563f2ebb3178 <line:174:5, col:59> col:15 at_u 'unsigned int &(Vector::size_type)' inline
| |-ParmVarDecl 0x563f2ebb30e8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x563f2ebb3230 <col:48> Inherited "" ""
|-CXXMethodDecl 0x563f2ebb3330 <line:175:5, col:71> col:21 at_u 'const unsigned int &(Vector::size_type) const' inline
| |-ParmVarDecl 0x563f2ebb32a0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x563f2ebb33e8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x563f2ebb34a8 <line:177:5, col:20> col:15 data 'unsigned int *()' inline
|-CXXMethodDecl 0x563f2ebb35a8 <line:178:5, col:28> col:21 data 'const unsigned int *() const' inline
|-CXXMethodDecl 0x563f2ebb3728 <line:180:5, col:48> col:17 push_back 'void (Vector<unsigned int>::value_argument_type)' inline
| `-ParmVarDecl 0x563f2ebb3668 <col:27, col:47> col:47 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-FunctionTemplateDecl 0x563f2ebb3ee8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x563f2ebb37e0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<unsigned int>':'fast_argument<unsigned int, false>'
| `-CXXMethodDecl 0x563f2ebb3e48 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (unsigned int &&)' inline
|   `-ParmVarDecl 0x563f2ebb3d48 <col:58, col:62> col:62 v 'unsigned int &&'
|-CXXMethodDecl 0x563f2ebb3fc8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x563f2ebb4118 <line:186:5, col:49> col:17 push_front 'void (Vector<unsigned int>::value_argument_type)' inline
| `-ParmVarDecl 0x563f2ebb4088 <col:28, col:48> col:48 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXMethodDecl 0x563f2ebb41d0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x563f2ebb4418 <line:189:5, col:62> col:21 insert 'Vector<unsigned int>::iterator (Vector<unsigned int>::iterator, Vector<unsigned int>::value_argument_type)' inline
| |-ParmVarDecl 0x563f2ebb4290 <col:28, col:37> col:37 it 'Vector<unsigned int>::iterator':'unsigned int *'
| `-ParmVarDecl 0x563f2ebb4308 <col:41, col:61> col:61 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXMethodDecl 0x563f2ebb45d8 <line:190:5, col:38> col:21 erase 'Vector<unsigned int>::iterator (Vector<unsigned int>::iterator)' inline
| `-ParmVarDecl 0x563f2ebb44e8 <col:27, col:36> col:36 it 'Vector<unsigned int>::iterator':'unsigned int *'
|-CXXMethodDecl 0x563f2ebb4828 <line:191:5, col:49> col:21 erase 'Vector<unsigned int>::iterator (Vector<unsigned int>::iterator, Vector<unsigned int>::iterator)' inline
| |-ParmVarDecl 0x563f2ebb46a0 <col:27, col:36> col:36 a 'Vector<unsigned int>::iterator':'unsigned int *'
| `-ParmVarDecl 0x563f2ebb4718 <col:39, col:48> col:48 b 'Vector<unsigned int>::iterator':'unsigned int *'
|-CXXMethodDecl 0x563f2ebb48e8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x563f2ebb4b48 <line:195:5, col:34> col:17 swap 'void (Vector<unsigned int> &)' inline
| `-ParmVarDecl 0x563f2ebb4a50 <col:22, col:33> col:33 x 'Vector<unsigned int> &'
`-CXXDestructorDecl 0x563f2ebb4c18 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x563f2ebb4c18

Layout: <CGRecordLayout
  LLVMType:%class.Vector.2 = type { %class.vector_memory.3 }
  NonVirtualBaseLLVMType:%class.Vector.2 = type { %class.vector_memory.3 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x563f2eadcdb8 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'int'
|-CXXRecordDecl 0x563f2eadcfc8 prev 0x563f2eadcdb8 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x563f2eade320 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<int>::type':'sized_array_memory<4>'
| `-ElaboratedType 0x563f2eade2d0 'typename array_memory<int>::type' sugar
|   `-TypedefType 0x563f2eade2b0 'conditional<true, sized_array_memory<4>, typed_array_memory<int> >::type' sugar
|     |-Typedef 0x563f2eade160 'type'
|     `-SubstTemplateTypeParmType 0x563f2eaddf80 'sized_array_memory<4>' sugar
|       |-TemplateTypeParmType 0x563f2e77b200 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563f2e77b1a8 'T'
|       `-RecordType 0x563f2eaddad0 'sized_array_memory<4>'
|         `-ClassTemplateSpecialization 0x563f2eadd9e8 'sized_array_memory'
|-FieldDecl 0x563f2eae1f50 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<int>::array_memory_type>':'vector_memory<sized_array_memory<4> >' mutable
|-AccessSpecDecl 0x563f2eae1fa0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x563f2eae1fd8 <line:118:5, col:15> col:15 value_type 'int':'int'
| `-SubstTemplateTypeParmType 0x563f2eadd060 'int' sugar
|   |-TemplateTypeParmType 0x563f2e7b3110 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x563f2e7b30b8 'T'
|   `-BuiltinType 0x563f2e4b1580 'int'
|-TypedefDecl 0x563f2eae2068 <line:119:5, col:16> col:16 reference 'int &'
| `-LValueReferenceType 0x563f2eae2030 'int &'
|   `-SubstTemplateTypeParmType 0x563f2eadd060 'int' sugar
|     |-TemplateTypeParmType 0x563f2e7b3110 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x563f2e7b30b8 'T'
|     `-BuiltinType 0x563f2e4b1580 'int'
|-TypedefDecl 0x563f2eae2128 <line:120:5, col:22> col:22 const_reference 'const int &'
| `-LValueReferenceType 0x563f2eae20f0 'const int &'
|   `-QualType 0x563f2eadd061 'const int' const
|     `-SubstTemplateTypeParmType 0x563f2eadd060 'int' sugar
|       |-TemplateTypeParmType 0x563f2e7b3110 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563f2e7b30b8 'T'
|       `-BuiltinType 0x563f2e4b1580 'int'
|-TypedefDecl 0x563f2eae21b8 <line:121:5, col:16> col:16 pointer 'int *'
| `-PointerType 0x563f2eae2180 'int *'
|   `-SubstTemplateTypeParmType 0x563f2eadd060 'int' sugar
|     |-TemplateTypeParmType 0x563f2e7b3110 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x563f2e7b30b8 'T'
|     `-BuiltinType 0x563f2e4b1580 'int'
|-TypedefDecl 0x563f2eae2248 <line:122:5, col:22> col:22 const_pointer 'const int *'
| `-PointerType 0x563f2eae2210 'const int *'
|   `-QualType 0x563f2eadd061 'const int' const
|     `-SubstTemplateTypeParmType 0x563f2eadd060 'int' sugar
|       |-TemplateTypeParmType 0x563f2e7b3110 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563f2e7b30b8 'T'
|       `-BuiltinType 0x563f2e4b1580 'int'
|-TypedefDecl 0x563f2eae2e30 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<int>::type':'int'
| `-ElaboratedType 0x563f2eae2de0 'typename fast_argument<int>::type' sugar
|   `-TypedefType 0x563f2eae2dc0 'fast_argument<int, false>::type' sugar
|     |-Typedef 0x563f2eae2d50 'type'
|     `-SubstTemplateTypeParmType 0x563f2eae2b10 'int' sugar
|       |-TemplateTypeParmType 0x563f2e786000 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563f2e785fb0 'T'
|       `-BuiltinType 0x563f2e4b1580 'int'
|-TypedefDecl 0x563f2eae2e98 <line:126:5, col:22> col:22 const_access_type 'const int &'
| `-LValueReferenceType 0x563f2eae20f0 'const int &'
|   `-QualType 0x563f2eadd061 'const int' const
|     `-SubstTemplateTypeParmType 0x563f2eadd060 'int' sugar
|       |-TemplateTypeParmType 0x563f2e7b3110 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563f2e7b30b8 'T'
|       `-BuiltinType 0x563f2e4b1580 'int'
|-TypedefDecl 0x563f2eae2ef0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x563f2e4b1580 'int'
|-TypedefDecl 0x563f2eae2f58 <line:130:5, col:16> col:16 iterator 'int *'
| `-PointerType 0x563f2eae2180 'int *'
|   `-SubstTemplateTypeParmType 0x563f2eadd060 'int' sugar
|     |-TemplateTypeParmType 0x563f2e7b3110 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x563f2e7b30b8 'T'
|     `-BuiltinType 0x563f2e4b1580 'int'
|-TypedefDecl 0x563f2eae2fc0 <line:131:5, col:22> col:22 const_iterator 'const int *'
| `-PointerType 0x563f2eae2210 'const int *'
|   `-QualType 0x563f2eadd061 'const int' const
|     `-SubstTemplateTypeParmType 0x563f2eadd060 'int' sugar
|       |-TemplateTypeParmType 0x563f2e7b3110 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563f2e7b30b8 'T'
|       `-BuiltinType 0x563f2e4b1580 'int'
|-EnumDecl 0x563f2eae3018 <line:134:5> col:5
| `-EnumConstantDecl 0x563f2eae3110 <col:12, col:40> col:12 RESERVE_GROW 'Vector<int>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x563f2eae30f0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x563f2e7b4798 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x563f2e7b4770 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x563f2e7b4750 <col:40> 'int' 1
|-CXXConstructorDecl 0x563f2eae3198 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x563f2eae33e8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x563f2eae3250 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x563f2eae32f0 <col:41, col:61> col:61 v 'Vector<int>::value_argument_type':'int'
|-CXXConstructorDecl 0x563f2eae36a8 <line:139:5, col:37> col:12 Vector 'void (const Vector<int> &)' inline
| `-ParmVarDecl 0x563f2eae3590 <col:19, col:36> col:36 x 'const Vector<int> &'
|-CXXConstructorDecl 0x563f2eae3968 <line:141:5, col:32> col:12 Vector 'void (Vector<int> &&)' inline
| `-ParmVarDecl 0x563f2eae3850 <col:19, col:31> col:31 x 'Vector<int> &&'
|-CXXMethodDecl 0x563f2eae3cb0 <line:144:5, col:51> col:23 operator= 'Vector<int> &(const Vector<int> &)' inline
| `-ParmVarDecl 0x563f2eae3b90 <col:33, col:50> col:50 x 'const Vector<int> &'
|-CXXMethodDecl 0x563f2eae3fc0 <line:146:5, col:46> col:23 operator= 'Vector<int> &(Vector<int> &&)' inline
| `-ParmVarDecl 0x563f2eae3ea0 <col:33, col:45> col:45 x 'Vector<int> &&'
|-CXXMethodDecl 0x563f2eae42b0 <line:148:5, col:70> col:23 assign 'Vector<int> &(Vector::size_type, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x563f2eae40f8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x563f2eae4170 <col:43, col:69> col:63 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x563f2eae43d8 <line:150:5, col:55> col:49 begin 'Vector<int>::iterator ()'
| |-NoInlineAttr 0x563f2eae44b8 <col:20> Inherited
| `-OptimizeNoneAttr 0x563f2eae4510 <col:30> Inherited
|-CXXMethodDecl 0x563f2eae4558 <line:151:5, col:53> col:49 end 'Vector<int>::iterator ()'
| |-NoInlineAttr 0x563f2eae4608 <col:20> Inherited
| `-OptimizeNoneAttr 0x563f2eae4660 <col:30> Inherited
|-CXXMethodDecl 0x563f2eae4728 <line:152:5, col:63> col:55 begin 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x563f2eae47d8 <col:20> Inherited
| `-OptimizeNoneAttr 0x563f2eae4830 <col:30> Inherited
|-CXXMethodDecl 0x563f2eae6800 <line:153:5, col:61> col:55 end 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x563f2eae68b0 <col:20> Inherited
| `-OptimizeNoneAttr 0x563f2eae6908 <col:30> Inherited
|-CXXMethodDecl 0x563f2eae6950 <line:154:5, col:64> col:55 cbegin 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x563f2eae6a00 <col:20> Inherited
| `-OptimizeNoneAttr 0x563f2eae6a58 <col:30> Inherited
|-CXXMethodDecl 0x563f2eae6aa0 <line:155:5, col:62> col:55 cend 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x563f2eae6b50 <col:20> Inherited
| `-OptimizeNoneAttr 0x563f2eae6ba8 <col:30> Inherited
|-CXXMethodDecl 0x563f2eae6bd0 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x563f2eae6c80 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x563f2eae6d30 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x563f2eae6ef0 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x563f2eae6de0 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x563f2eae6e58 <col:37, col:63> col:57 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x563f2eae7040 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x563f2eae6fb0 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x563f2eae71e8 <line:163:5, col:65> col:43 used operator[] 'int &(Vector::size_type)'
| |-ParmVarDecl 0x563f2eae70f8 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x563f2eae72a0 <col:20>
| `-OptimizeNoneAttr 0x563f2eae72f8 <col:30>
|-CXXMethodDecl 0x563f2eae7418 <line:164:5, col:73> col:49 operator[] 'const int &(Vector::size_type) const'
| |-ParmVarDecl 0x563f2eae7320 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x563f2eae74d0 <col:20>
| `-OptimizeNoneAttr 0x563f2eae7528 <col:30>
|-CXXMethodDecl 0x563f2eae75e0 <line:165:5, col:29> col:15 at 'int &(Vector::size_type)' inline
| `-ParmVarDecl 0x563f2eae7550 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x563f2eae7728 <line:166:5, col:37> col:21 at 'const int &(Vector::size_type) const' inline
| `-ParmVarDecl 0x563f2eae7698 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x563f2eae7858 <line:167:5, col:21> col:15 front 'int &()' inline
|-CXXMethodDecl 0x563f2eae7988 <line:168:5, col:29> col:21 front 'const int &() const' inline
|-CXXMethodDecl 0x563f2eae7a58 <line:169:5, col:20> col:15 back 'int &()' inline
|-CXXMethodDecl 0x563f2eae7b28 <line:170:5, col:28> col:21 used back 'const int &() const' inline
|-CXXMethodDecl 0x563f2eae7c68 <line:172:5, col:39> col:15 unchecked_at 'int &(Vector::size_type)' inline
| `-ParmVarDecl 0x563f2eae7bd8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x563f2eae7db0 <line:173:5, col:47> col:21 unchecked_at 'const int &(Vector::size_type) const' inline
| `-ParmVarDecl 0x563f2eae7d20 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x563f2eae7ef8 <line:174:5, col:59> col:15 at_u 'int &(Vector::size_type)' inline
| |-ParmVarDecl 0x563f2eae7e68 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x563f2eae7fb0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x563f2eae80b0 <line:175:5, col:71> col:21 at_u 'const int &(Vector::size_type) const' inline
| |-ParmVarDecl 0x563f2eae8020 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x563f2eae8168 <col:60> Inherited "" ""
|-CXXMethodDecl 0x563f2eae8228 <line:177:5, col:20> col:15 data 'int *()' inline
|-CXXMethodDecl 0x563f2eae8328 <line:178:5, col:28> col:21 data 'const int *() const' inline
|-CXXMethodDecl 0x563f2eae84a8 <line:180:5, col:48> col:17 push_back 'void (Vector<int>::value_argument_type)' inline
| `-ParmVarDecl 0x563f2eae83e8 <col:27, col:47> col:47 v 'Vector<int>::value_argument_type':'int'
|-FunctionTemplateDecl 0x563f2eae8c68 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x563f2eae8560 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<int>':'fast_argument<int, false>'
| `-CXXMethodDecl 0x563f2eae8bc8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (int &&)' inline
|   `-ParmVarDecl 0x563f2eae8ac8 <col:58, col:62> col:62 v 'int &&'
|-CXXMethodDecl 0x563f2eae8d48 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x563f2eae8e98 <line:186:5, col:49> col:17 push_front 'void (Vector<int>::value_argument_type)' inline
| `-ParmVarDecl 0x563f2eae8e08 <col:28, col:48> col:48 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x563f2eae8f50 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x563f2eae9198 <line:189:5, col:62> col:21 insert 'Vector<int>::iterator (Vector<int>::iterator, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x563f2eae9010 <col:28, col:37> col:37 it 'Vector<int>::iterator':'int *'
| `-ParmVarDecl 0x563f2eae9088 <col:41, col:61> col:61 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x563f2eae9358 <line:190:5, col:38> col:21 erase 'Vector<int>::iterator (Vector<int>::iterator)' inline
| `-ParmVarDecl 0x563f2eae9268 <col:27, col:36> col:36 it 'Vector<int>::iterator':'int *'
|-CXXMethodDecl 0x563f2eae95a8 <line:191:5, col:49> col:21 erase 'Vector<int>::iterator (Vector<int>::iterator, Vector<int>::iterator)' inline
| |-ParmVarDecl 0x563f2eae9420 <col:27, col:36> col:36 a 'Vector<int>::iterator':'int *'
| `-ParmVarDecl 0x563f2eae9498 <col:39, col:48> col:48 b 'Vector<int>::iterator':'int *'
|-CXXMethodDecl 0x563f2eae9668 <line:193:5, col:23> col:17 used clear 'void ()' inline
|-CXXMethodDecl 0x563f2eae98c8 <line:195:5, col:34> col:17 swap 'void (Vector<int> &)' inline
| `-ParmVarDecl 0x563f2eae97d0 <col:22, col:33> col:33 x 'Vector<int> &'
`-CXXDestructorDecl 0x563f2eae9998 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x563f2eae9998

Layout: <CGRecordLayout
  LLVMType:%class.Vector.5 = type { %class.vector_memory.3 }
  NonVirtualBaseLLVMType:%class.Vector.5 = type { %class.vector_memory.3 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563f2ebb4e60 <../dummy_inc/click/router.hh:247:5, line:250:5> line:247:12 referenced struct element_landmark_t definition
|-DefinitionData aggregate standard_layout has_mutable_fields
| |-DefaultConstructor exists non_trivial needs_implicit
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x563f2ebb4f78 <col:5, col:12> col:12 implicit struct element_landmark_t
|-FieldDecl 0x563f2ebb5018 <line:248:9, col:18> col:18 first_landmarkid 'uint32_t':'unsigned int'
|-FieldDecl 0x563f2ebb5078 <line:249:9, col:16> col:16 filename 'String'
|-CXXConstructorDecl 0x563f2ebb5110 <line:247:12> col:12 implicit element_landmark_t 'void (const Router::element_landmark_t &)' inline default noexcept-unevaluated 0x563f2ebb5110
| `-ParmVarDecl 0x563f2ebb5228 <col:12> col:12 'const Router::element_landmark_t &'
|-CXXConstructorDecl 0x563f2ebb52c8 <col:12> col:12 implicit element_landmark_t 'void (Router::element_landmark_t &&)' inline default noexcept-unevaluated 0x563f2ebb52c8
| `-ParmVarDecl 0x563f2ebb53d8 <col:12> col:12 'Router::element_landmark_t &&'
|-CXXMethodDecl 0x563f2ebb5478 <col:12> col:12 implicit operator= 'Router::element_landmark_t &(const Router::element_landmark_t &)' inline default noexcept-unevaluated 0x563f2ebb5478
| `-ParmVarDecl 0x563f2ebb5588 <col:12> col:12 'const Router::element_landmark_t &'
|-CXXMethodDecl 0x563f2ebb55f8 <col:12> col:12 implicit operator= 'Router::element_landmark_t &(Router::element_landmark_t &&)' inline default noexcept-unevaluated 0x563f2ebb55f8
| `-ParmVarDecl 0x563f2ebb5708 <col:12> col:12 'Router::element_landmark_t &&'
`-CXXDestructorDecl 0x563f2ebb5790 <col:12> col:12 implicit ~element_landmark_t 'void ()' inline default noexcept-unevaluated 0x563f2ebb5790

Layout: <CGRecordLayout
  LLVMType:%"struct.Router::element_landmark_t" = type { i32, %class.String }
  NonVirtualBaseLLVMType:%"struct.Router::element_landmark_t" = type { i32, %class.String }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x563f2ebb6d20 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'typed_array_memory<Router::element_landmark_t>'
|-CXXRecordDecl 0x563f2ebb6ef8 prev 0x563f2ebb6d20 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x563f2ebb6f88 <col:46, col:52> col:46 public
|-TypedefDecl 0x563f2ebb6fb0 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x563f2e4b1580 'int'
|-TypedefDecl 0x563f2ebb8970 <line:13:5, col:31> col:31 type 'typename typed_array_memory<element_landmark_t>::type':'Router::element_landmark_t'
| `-ElaboratedType 0x563f2ebb8920 'typename typed_array_memory<element_landmark_t>::type' sugar
|   `-TypedefType 0x563f2ebb8900 'typed_array_memory<Router::element_landmark_t>::type' sugar
|     |-Typedef 0x563f2ebb71c8 'type'
|     `-SubstTemplateTypeParmType 0x563f2ebb7190 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x563f2e7a5df0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563f2e7a5da0 'T'
|       `-RecordType 0x563f2ebb4ef0 'Router::element_landmark_t'
|         `-CXXRecord 0x563f2ebb4e60 'element_landmark_t'
|-TypedefDecl 0x563f2ebb8a28 <line:14:5, col:19> col:19 iterator 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
| `-PointerType 0x563f2ebb89f0 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|   `-TypedefType 0x563f2ebb89d0 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type' sugar
|     |-Typedef 0x563f2ebb8970 'type'
|     `-ElaboratedType 0x563f2ebb8920 'typename typed_array_memory<element_landmark_t>::type' sugar
|       `-TypedefType 0x563f2ebb8900 'typed_array_memory<Router::element_landmark_t>::type' sugar
|         |-Typedef 0x563f2ebb71c8 'type'
|         `-SubstTemplateTypeParmType 0x563f2ebb7190 'Router::element_landmark_t' sugar
|           |-TemplateTypeParmType 0x563f2e7a5df0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x563f2e7a5da0 'T'
|           `-RecordType 0x563f2ebb4ef0 'Router::element_landmark_t'
|             `-CXXRecord 0x563f2ebb4e60 'element_landmark_t'
|-CXXMethodDecl 0x563f2ebb8ba8 <line:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *) const' inline
| `-ParmVarDecl 0x563f2ebb8ab8 <col:36, col:48> col:48 argp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXConstructorDecl 0x563f2ebb8c98 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x563f2ebb8d78 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x563f2ebb8d78
|-CXXMethodDecl 0x563f2ebb9048 <line:25:5, col:43> col:10 assign 'void (const vector_memory<typed_array_memory<Router::element_landmark_t> > &)'
| `-ParmVarDecl 0x563f2ebb8f50 <col:17, col:42> col:42 x 'const vector_memory<typed_array_memory<Router::element_landmark_t> > &'
|-CXXMethodDecl 0x563f2ebb9288 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)'
| |-ParmVarDecl 0x563f2ebb9100 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x563f2ebb9178 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x563f2ebb9458 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)'
| |-ParmVarDecl 0x563f2ebb9348 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x563f2ebb93c0 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x563f2ebb95b8 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator ()'
|-CXXMethodDecl 0x563f2ebb9688 <line:31:5, line:33:5> line:31:14 end 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator ()'
|-CXXMethodDecl 0x563f2ebb98d8 <line:34:5, col:48> col:14 insert 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator (vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator, const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)'
| |-ParmVarDecl 0x563f2ebb9748 <col:21, col:30> col:30 it 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator':'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
| `-ParmVarDecl 0x563f2ebb97c0 <col:34, col:46> col:46 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x563f2ebbba68 <line:35:5, col:42> col:14 erase 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator (vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator, vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator)'
| |-ParmVarDecl 0x563f2ebbb8e0 <col:20, col:29> col:29 a 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator':'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
| `-ParmVarDecl 0x563f2ebbb958 <col:32, col:41> col:41 b 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator':'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x563f2ebbbc28 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)' inline
| `-ParmVarDecl 0x563f2ebbbb38 <col:27, col:39> col:39 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x563f2ebbbde8 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)' inline
| `-ParmVarDecl 0x563f2ebbbcf0 <col:37, col:43> col:43 vp 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x563f2ebbbea0 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x563f2ebbbf50 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x563f2ebbc188 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)'
| |-ParmVarDecl 0x563f2ebbc000 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x563f2ebbc078 <col:45, col:57> col:57 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x563f2ebbc428 <line:66:5, col:35> col:10 swap 'void (vector_memory<typed_array_memory<Router::element_landmark_t> > &)'
| `-ParmVarDecl 0x563f2ebbc330 <col:15, col:34> col:34 x 'vector_memory<typed_array_memory<Router::element_landmark_t> > &'
|-FieldDecl 0x563f2ebbc4f0 <line:68:5, col:11> col:11 l_ 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-FieldDecl 0x563f2ebbc540 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x563f2ebbc590 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.7 = type { %"struct.Router::element_landmark_t"*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.7 = type { %"struct.Router::element_landmark_t"*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x563f2ebb5880 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Router::element_landmark_t'
|-CXXRecordDecl 0x563f2ebb5a88 prev 0x563f2ebb5880 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x563f2ebb6c90 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<element_landmark_t>::type':'typed_array_memory<Router::element_landmark_t>'
| `-ElaboratedType 0x563f2ebb6c40 'typename array_memory<element_landmark_t>::type' sugar
|   `-TypedefType 0x563f2ebb6c20 'conditional<false, sized_array_memory<32>, typed_array_memory<Router::element_landmark_t> >::type' sugar
|     |-Typedef 0x563f2ebb6ad0 'type'
|     `-SubstTemplateTypeParmType 0x563f2ebb6960 'typed_array_memory<Router::element_landmark_t>' sugar
|       |-TemplateTypeParmType 0x563f2e77b980 'F' dependent depth 0 index 1
|       | `-TemplateTypeParm 0x563f2e77b928 'F'
|       `-RecordType 0x563f2ebb65c0 'typed_array_memory<Router::element_landmark_t>'
|         `-ClassTemplateSpecialization 0x563f2ebb64e0 'typed_array_memory'
|-FieldDecl 0x563f2ebbc5e0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Router::element_landmark_t>::array_memory_type>':'vector_memory<typed_array_memory<Router::element_landmark_t> >' mutable
|-AccessSpecDecl 0x563f2ebbc630 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x563f2ebbc668 <line:118:5, col:15> col:15 value_type 'Router::element_landmark_t':'Router::element_landmark_t'
| `-SubstTemplateTypeParmType 0x563f2ebb5b20 'Router::element_landmark_t' sugar
|   |-TemplateTypeParmType 0x563f2e7b3110 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x563f2e7b30b8 'T'
|   `-RecordType 0x563f2ebb4ef0 'Router::element_landmark_t'
|     `-CXXRecord 0x563f2ebb4e60 'element_landmark_t'
|-TypedefDecl 0x563f2ebbc6f8 <line:119:5, col:16> col:16 reference 'Router::element_landmark_t &'
| `-LValueReferenceType 0x563f2ebbc6c0 'Router::element_landmark_t &'
|   `-SubstTemplateTypeParmType 0x563f2ebb5b20 'Router::element_landmark_t' sugar
|     |-TemplateTypeParmType 0x563f2e7b3110 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x563f2e7b30b8 'T'
|     `-RecordType 0x563f2ebb4ef0 'Router::element_landmark_t'
|       `-CXXRecord 0x563f2ebb4e60 'element_landmark_t'
|-TypedefDecl 0x563f2ebbc788 <line:120:5, col:22> col:22 const_reference 'const Router::element_landmark_t &'
| `-LValueReferenceType 0x563f2ebbc750 'const Router::element_landmark_t &'
|   `-QualType 0x563f2ebb5b21 'const Router::element_landmark_t' const
|     `-SubstTemplateTypeParmType 0x563f2ebb5b20 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x563f2e7b3110 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563f2e7b30b8 'T'
|       `-RecordType 0x563f2ebb4ef0 'Router::element_landmark_t'
|         `-CXXRecord 0x563f2ebb4e60 'element_landmark_t'
|-TypedefDecl 0x563f2ebbc818 <line:121:5, col:16> col:16 pointer 'Router::element_landmark_t *'
| `-PointerType 0x563f2ebbc7e0 'Router::element_landmark_t *'
|   `-SubstTemplateTypeParmType 0x563f2ebb5b20 'Router::element_landmark_t' sugar
|     |-TemplateTypeParmType 0x563f2e7b3110 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x563f2e7b30b8 'T'
|     `-RecordType 0x563f2ebb4ef0 'Router::element_landmark_t'
|       `-CXXRecord 0x563f2ebb4e60 'element_landmark_t'
|-TypedefDecl 0x563f2ebbc8a8 <line:122:5, col:22> col:22 const_pointer 'const Router::element_landmark_t *'
| `-PointerType 0x563f2ebbc870 'const Router::element_landmark_t *'
|   `-QualType 0x563f2ebb5b21 'const Router::element_landmark_t' const
|     `-SubstTemplateTypeParmType 0x563f2ebb5b20 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x563f2e7b3110 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563f2e7b30b8 'T'
|       `-RecordType 0x563f2ebb4ef0 'Router::element_landmark_t'
|         `-CXXRecord 0x563f2ebb4e60 'element_landmark_t'
|-TypedefDecl 0x563f2ebbd500 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<element_landmark_t>::type':'const Router::element_landmark_t &'
| `-ElaboratedType 0x563f2ebbd4b0 'typename fast_argument<element_landmark_t>::type' sugar
|   `-TypedefType 0x563f2ebbd490 'fast_argument<Router::element_landmark_t, true>::type' sugar
|     |-Typedef 0x563f2ebbd3c8 'type'
|     `-LValueReferenceType 0x563f2ebbd390 'const Router::element_landmark_t &'
|       `-QualType 0x563f2ebbd131 'const Router::element_landmark_t' const
|         `-SubstTemplateTypeParmType 0x563f2ebbd130 'Router::element_landmark_t' sugar
|           |-TemplateTypeParmType 0x563f2e7858d0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x563f2e785878 'T'
|           `-RecordType 0x563f2ebb4ef0 'Router::element_landmark_t'
|             `-CXXRecord 0x563f2ebb4e60 'element_landmark_t'
|-TypedefDecl 0x563f2ebbd568 <line:126:5, col:22> col:22 const_access_type 'const Router::element_landmark_t &'
| `-LValueReferenceType 0x563f2ebbc750 'const Router::element_landmark_t &'
|   `-QualType 0x563f2ebb5b21 'const Router::element_landmark_t' const
|     `-SubstTemplateTypeParmType 0x563f2ebb5b20 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x563f2e7b3110 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563f2e7b30b8 'T'
|       `-RecordType 0x563f2ebb4ef0 'Router::element_landmark_t'
|         `-CXXRecord 0x563f2ebb4e60 'element_landmark_t'
|-TypedefDecl 0x563f2ebbd5c0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x563f2e4b1580 'int'
|-TypedefDecl 0x563f2ebbd628 <line:130:5, col:16> col:16 iterator 'Router::element_landmark_t *'
| `-PointerType 0x563f2ebbc7e0 'Router::element_landmark_t *'
|   `-SubstTemplateTypeParmType 0x563f2ebb5b20 'Router::element_landmark_t' sugar
|     |-TemplateTypeParmType 0x563f2e7b3110 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x563f2e7b30b8 'T'
|     `-RecordType 0x563f2ebb4ef0 'Router::element_landmark_t'
|       `-CXXRecord 0x563f2ebb4e60 'element_landmark_t'
|-TypedefDecl 0x563f2ebbd690 <line:131:5, col:22> col:22 const_iterator 'const Router::element_landmark_t *'
| `-PointerType 0x563f2ebbc870 'const Router::element_landmark_t *'
|   `-QualType 0x563f2ebb5b21 'const Router::element_landmark_t' const
|     `-SubstTemplateTypeParmType 0x563f2ebb5b20 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x563f2e7b3110 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563f2e7b30b8 'T'
|       `-RecordType 0x563f2ebb4ef0 'Router::element_landmark_t'
|         `-CXXRecord 0x563f2ebb4e60 'element_landmark_t'
|-EnumDecl 0x563f2ebbd6e8 <line:134:5> col:5
| `-EnumConstantDecl 0x563f2ebbd7e0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Router::element_landmark_t>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x563f2ebbd7c0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x563f2e7b4798 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x563f2e7b4770 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x563f2e7b4750 <col:40> 'int' 1
|-CXXConstructorDecl 0x563f2ebbd868 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x563f2ebbdaf8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Router::element_landmark_t>::value_argument_type)' inline
| |-ParmVarDecl 0x563f2ebbd920 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x563f2ebbd9c0 <col:41, col:61> col:61 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXConstructorDecl 0x563f2ebbddb8 <line:139:5, col:37> col:12 Vector 'void (const Vector<Router::element_landmark_t> &)' inline
| `-ParmVarDecl 0x563f2ebbdca0 <col:19, col:36> col:36 x 'const Vector<Router::element_landmark_t> &'
|-CXXConstructorDecl 0x563f2ebbe078 <line:141:5, col:32> col:12 Vector 'void (Vector<Router::element_landmark_t> &&)' inline
| `-ParmVarDecl 0x563f2ebbdf60 <col:19, col:31> col:31 x 'Vector<Router::element_landmark_t> &&'
|-CXXMethodDecl 0x563f2ebbe3c0 <line:144:5, col:51> col:23 operator= 'Vector<Router::element_landmark_t> &(const Vector<Router::element_landmark_t> &)' inline
| `-ParmVarDecl 0x563f2ebbe2a0 <col:33, col:50> col:50 x 'const Vector<Router::element_landmark_t> &'
|-CXXMethodDecl 0x563f2ebbe6d0 <line:146:5, col:46> col:23 operator= 'Vector<Router::element_landmark_t> &(Vector<Router::element_landmark_t> &&)' inline
| `-ParmVarDecl 0x563f2ebbe5b0 <col:33, col:45> col:45 x 'Vector<Router::element_landmark_t> &&'
|-CXXMethodDecl 0x563f2ebbe9c0 <line:148:5, col:70> col:23 assign 'Vector<Router::element_landmark_t> &(Vector::size_type, Vector<Router::element_landmark_t>::value_argument_type)' inline
| |-ParmVarDecl 0x563f2ebbe808 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x563f2ebbe880 <col:43, col:69> col:63 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXMethodDecl 0x563f2ebbeae8 <line:150:5, col:55> col:49 begin 'Vector<Router::element_landmark_t>::iterator ()'
| |-NoInlineAttr 0x563f2ebbebc8 <col:20> Inherited
| `-OptimizeNoneAttr 0x563f2ebbec20 <col:30> Inherited
|-CXXMethodDecl 0x563f2ebbec68 <line:151:5, col:53> col:49 end 'Vector<Router::element_landmark_t>::iterator ()'
| |-NoInlineAttr 0x563f2ebbed18 <col:20> Inherited
| `-OptimizeNoneAttr 0x563f2ebbed70 <col:30> Inherited
|-CXXMethodDecl 0x563f2ebbee38 <line:152:5, col:63> col:55 begin 'Vector<Router::element_landmark_t>::const_iterator () const'
| |-NoInlineAttr 0x563f2ebbeee8 <col:20> Inherited
| `-OptimizeNoneAttr 0x563f2ebbef40 <col:30> Inherited
|-CXXMethodDecl 0x563f2ebbef88 <line:153:5, col:61> col:55 end 'Vector<Router::element_landmark_t>::const_iterator () const'
| |-NoInlineAttr 0x563f2ebbf038 <col:20> Inherited
| `-OptimizeNoneAttr 0x563f2ebbf090 <col:30> Inherited
|-CXXMethodDecl 0x563f2ebbf0d8 <line:154:5, col:64> col:55 cbegin 'Vector<Router::element_landmark_t>::const_iterator () const'
| |-NoInlineAttr 0x563f2ebbf188 <col:20> Inherited
| `-OptimizeNoneAttr 0x563f2ebbf1e0 <col:30> Inherited
|-CXXMethodDecl 0x563f2ebbf228 <line:155:5, col:62> col:55 cend 'Vector<Router::element_landmark_t>::const_iterator () const'
| |-NoInlineAttr 0x563f2ebbf2d8 <col:20> Inherited
| `-OptimizeNoneAttr 0x563f2ebbf330 <col:30> Inherited
|-CXXMethodDecl 0x563f2ebbf358 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x563f2ebbf408 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x563f2ebbf4b8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x563f2ebbf678 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Router::element_landmark_t>::value_argument_type)' inline
| |-ParmVarDecl 0x563f2ebbf568 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x563f2ebbf5e0 <col:37, col:63> col:57 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXMethodDecl 0x563f2ebbf7c8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x563f2ebbf738 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x563f2ebbf978 <line:163:5, col:65> col:43 operator[] 'Router::element_landmark_t &(Vector::size_type)'
| |-ParmVarDecl 0x563f2ebbf880 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x563f2ebbfa30 <col:20>
| `-OptimizeNoneAttr 0x563f2ebbfa88 <col:30>
|-CXXMethodDecl 0x563f2ebbfba8 <line:164:5, col:73> col:49 operator[] 'const Router::element_landmark_t &(Vector::size_type) const'
| |-ParmVarDecl 0x563f2ebbfab0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x563f2ebbfc60 <col:20>
| `-OptimizeNoneAttr 0x563f2ebbfcb8 <col:30>
|-CXXMethodDecl 0x563f2ebbfd70 <line:165:5, col:29> col:15 at 'Router::element_landmark_t &(Vector::size_type)' inline
| `-ParmVarDecl 0x563f2ebbfce0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x563f2ebbfeb8 <line:166:5, col:37> col:21 at 'const Router::element_landmark_t &(Vector::size_type) const' inline
| `-ParmVarDecl 0x563f2ebbfe28 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x563f2ebbffe8 <line:167:5, col:21> col:15 front 'Router::element_landmark_t &()' inline
|-CXXMethodDecl 0x563f2ebc0118 <line:168:5, col:29> col:21 front 'const Router::element_landmark_t &() const' inline
|-CXXMethodDecl 0x563f2ebc01e8 <line:169:5, col:20> col:15 back 'Router::element_landmark_t &()' inline
|-CXXMethodDecl 0x563f2ebc02b8 <line:170:5, col:28> col:21 back 'const Router::element_landmark_t &() const' inline
|-CXXMethodDecl 0x563f2ebc03f8 <line:172:5, col:39> col:15 unchecked_at 'Router::element_landmark_t &(Vector::size_type)' inline
| `-ParmVarDecl 0x563f2ebc0368 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x563f2ebc0540 <line:173:5, col:47> col:21 unchecked_at 'const Router::element_landmark_t &(Vector::size_type) const' inline
| `-ParmVarDecl 0x563f2ebc04b0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x563f2ebc0688 <line:174:5, col:59> col:15 at_u 'Router::element_landmark_t &(Vector::size_type)' inline
| |-ParmVarDecl 0x563f2ebc05f8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x563f2ebc0740 <col:48> Inherited "" ""
|-CXXMethodDecl 0x563f2ebc0840 <line:175:5, col:71> col:21 at_u 'const Router::element_landmark_t &(Vector::size_type) const' inline
| |-ParmVarDecl 0x563f2ebc07b0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x563f2ebc08f8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x563f2ebc09b8 <line:177:5, col:20> col:15 data 'Router::element_landmark_t *()' inline
|-CXXMethodDecl 0x563f2ebc0ab8 <line:178:5, col:28> col:21 data 'const Router::element_landmark_t *() const' inline
|-CXXMethodDecl 0x563f2ebc0c38 <line:180:5, col:48> col:17 push_back 'void (Vector<Router::element_landmark_t>::value_argument_type)' inline
| `-ParmVarDecl 0x563f2ebc0b78 <col:27, col:47> col:47 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-FunctionTemplateDecl 0x563f2ebc13c8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x563f2ebc0cf0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Router::element_landmark_t>':'fast_argument<Router::element_landmark_t, true>'
| `-CXXMethodDecl 0x563f2ebc1328 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Router::element_landmark_t &&)' inline
|   `-ParmVarDecl 0x563f2ebc1228 <col:58, col:62> col:62 v 'Router::element_landmark_t &&'
|-CXXMethodDecl 0x563f2ebc14a8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x563f2ebc15f8 <line:186:5, col:49> col:17 push_front 'void (Vector<Router::element_landmark_t>::value_argument_type)' inline
| `-ParmVarDecl 0x563f2ebc1568 <col:28, col:48> col:48 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXMethodDecl 0x563f2ebc16b0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x563f2ebc18f8 <line:189:5, col:62> col:21 insert 'Vector<Router::element_landmark_t>::iterator (Vector<Router::element_landmark_t>::iterator, Vector<Router::element_landmark_t>::value_argument_type)' inline
| |-ParmVarDecl 0x563f2ebc1770 <col:28, col:37> col:37 it 'Vector<Router::element_landmark_t>::iterator':'Router::element_landmark_t *'
| `-ParmVarDecl 0x563f2ebc17e8 <col:41, col:61> col:61 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXMethodDecl 0x563f2ebc1a88 <line:190:5, col:38> col:21 erase 'Vector<Router::element_landmark_t>::iterator (Vector<Router::element_landmark_t>::iterator)' inline
| `-ParmVarDecl 0x563f2ebc19c8 <col:27, col:36> col:36 it 'Vector<Router::element_landmark_t>::iterator':'Router::element_landmark_t *'
|-CXXMethodDecl 0x563f2ebc1c98 <line:191:5, col:49> col:21 erase 'Vector<Router::element_landmark_t>::iterator (Vector<Router::element_landmark_t>::iterator, Vector<Router::element_landmark_t>::iterator)' inline
| |-ParmVarDecl 0x563f2ebc1b50 <col:27, col:36> col:36 a 'Vector<Router::element_landmark_t>::iterator':'Router::element_landmark_t *'
| `-ParmVarDecl 0x563f2ebc1bc8 <col:39, col:48> col:48 b 'Vector<Router::element_landmark_t>::iterator':'Router::element_landmark_t *'
|-CXXMethodDecl 0x563f2ebc1d58 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x563f2ebc1fb8 <line:195:5, col:34> col:17 swap 'void (Vector<Router::element_landmark_t> &)' inline
| `-ParmVarDecl 0x563f2ebc1ec0 <col:22, col:33> col:33 x 'Vector<Router::element_landmark_t> &'
`-CXXDestructorDecl 0x563f2ebc2088 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x563f2ebc2088

Layout: <CGRecordLayout
  LLVMType:%class.Vector.6 = type { %class.vector_memory.7 }
  NonVirtualBaseLLVMType:%class.Vector.6 = type { %class.vector_memory.7 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x563f2eb3a080 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<16>'
|-CXXRecordDecl 0x563f2eb3a258 prev 0x563f2eb3a080 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x563f2eb3a2e8 <col:46, col:52> col:46 public
|-TypedefDecl 0x563f2eb3a310 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x563f2e4b1580 'int'
|-TypedefDecl 0x563f2eb3bee0 <line:13:5, col:31> col:31 type 'typename sized_array_memory<16>::type':'char_array<16>'
| `-ElaboratedType 0x563f2eb3be90 'typename sized_array_memory<16>::type' sugar
|   `-TypedefType 0x563f2eb3a7c0 'sized_array_memory<16>::type' sugar
|     |-Typedef 0x563f2eb3a6c0 'type'
|     `-TemplateSpecializationType 0x563f2eb3a650 'char_array<16UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x563f2eb3a530 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 16
|       |   `-SubstNonTypeTemplateParmExpr 0x563f2eb3a510 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x563f2eb3a4f0 <col:24> 'unsigned long' 16
|       `-RecordType 0x563f2eb3a630 'char_array<16>'
|         `-ClassTemplateSpecialization 0x563f2eb3a550 'char_array'
|-TypedefDecl 0x563f2eb3bf98 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<16> >::type *'
| `-PointerType 0x563f2eb3bf60 'vector_memory<sized_array_memory<16> >::type *'
|   `-TypedefType 0x563f2eb3bf40 'vector_memory<sized_array_memory<16> >::type' sugar
|     |-Typedef 0x563f2eb3bee0 'type'
|     `-ElaboratedType 0x563f2eb3be90 'typename sized_array_memory<16>::type' sugar
|       `-TypedefType 0x563f2eb3a7c0 'sized_array_memory<16>::type' sugar
|         |-Typedef 0x563f2eb3a6c0 'type'
|         `-TemplateSpecializationType 0x563f2eb3a650 'char_array<16UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x563f2eb3a530 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 16
|           |   `-SubstNonTypeTemplateParmExpr 0x563f2eb3a510 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x563f2eb3a4f0 <col:24> 'unsigned long' 16
|           `-RecordType 0x563f2eb3a630 'char_array<16>'
|             `-ClassTemplateSpecialization 0x563f2eb3a550 'char_array'
|-CXXMethodDecl 0x563f2eb3c118 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<16> >::type *) const' inline
| `-ParmVarDecl 0x563f2eb3c028 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXConstructorDecl 0x563f2eb3c208 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x563f2eb3c2e8 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x563f2eb3c2e8
|-CXXMethodDecl 0x563f2eb3c5b8 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<16> > &)'
| `-ParmVarDecl 0x563f2eb3c4c0 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<16> > &'
|-CXXMethodDecl 0x563f2eb3c7f8 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x563f2eb3c670 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x563f2eb3c6e8 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x563f2eb3c9c8 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x563f2eb3c8b8 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x563f2eb3c930 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x563f2eb3cb28 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<16> >::iterator ()'
|-CXXMethodDecl 0x563f2eb3cbf8 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<16> >::iterator ()'
|-CXXMethodDecl 0x563f2eb3ce48 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<16> >::iterator (vector_memory<sized_array_memory<16> >::iterator, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x563f2eb3ccb8 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
| `-ParmVarDecl 0x563f2eb3cd30 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x563f2eb3d0a8 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<16> >::iterator (vector_memory<sized_array_memory<16> >::iterator, vector_memory<sized_array_memory<16> >::iterator)'
| |-ParmVarDecl 0x563f2eb3cf18 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
| `-ParmVarDecl 0x563f2eb3cf90 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x563f2eb3d268 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<16> >::type *)' inline
| `-ParmVarDecl 0x563f2eb3d178 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x563f2eb3d428 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<16> >::type *)' inline
| `-ParmVarDecl 0x563f2eb3d330 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x563f2eb3d4f8 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x563f2eb3d5a8 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x563f2eb3d7e8 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x563f2eb3d658 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x563f2eb3d6d0 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x563f2eb3da88 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<16> > &)'
| `-ParmVarDecl 0x563f2eb3d990 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<16> > &'
|-FieldDecl 0x563f2eb3db50 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<16> >::type *'
|-FieldDecl 0x563f2eb3dba0 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x563f2eb3dbf0 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.9 = type { %struct.char_array.10*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.9 = type { %struct.char_array.10*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x563f2ebc27a0 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Router::Connection'
|-CXXRecordDecl 0x563f2ebc29a8 prev 0x563f2ebc27a0 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x563f2ebc4cc0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<Connection>::type':'sized_array_memory<16>'
| `-ElaboratedType 0x563f2ebc4c70 'typename array_memory<Connection>::type' sugar
|   `-TypedefType 0x563f2ebc4c50 'conditional<true, sized_array_memory<16>, typed_array_memory<Router::Connection> >::type' sugar
|     |-Typedef 0x563f2ebc4b00 'type'
|     `-SubstTemplateTypeParmType 0x563f2eb39c50 'sized_array_memory<16>' sugar
|       |-TemplateTypeParmType 0x563f2e77b200 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563f2e77b1a8 'T'
|       `-RecordType 0x563f2eb397a0 'sized_array_memory<16>'
|         `-ClassTemplateSpecialization 0x563f2eb396b8 'sized_array_memory'
|-FieldDecl 0x563f2ebc4dc0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Router::Connection>::array_memory_type>':'vector_memory<sized_array_memory<16> >' mutable
|-AccessSpecDecl 0x563f2ebc4e10 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x563f2ebc4e48 <line:118:5, col:15> col:15 value_type 'Router::Connection':'Router::Connection'
| `-SubstTemplateTypeParmType 0x563f2ebc2a40 'Router::Connection' sugar
|   |-TemplateTypeParmType 0x563f2e7b3110 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x563f2e7b30b8 'T'
|   `-RecordType 0x563f2eb9e270 'Router::Connection'
|     `-CXXRecord 0x563f2eb9e1e0 'Connection'
|-TypedefDecl 0x563f2ebc4f08 <line:119:5, col:16> col:16 reference 'Router::Connection &'
| `-LValueReferenceType 0x563f2ebc4ed0 'Router::Connection &'
|   `-SubstTemplateTypeParmType 0x563f2ebc2a40 'Router::Connection' sugar
|     |-TemplateTypeParmType 0x563f2e7b3110 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x563f2e7b30b8 'T'
|     `-RecordType 0x563f2eb9e270 'Router::Connection'
|       `-CXXRecord 0x563f2eb9e1e0 'Connection'
|-TypedefDecl 0x563f2ebc4f98 <line:120:5, col:22> col:22 const_reference 'const Router::Connection &'
| `-LValueReferenceType 0x563f2ebc4f60 'const Router::Connection &'
|   `-QualType 0x563f2ebc2a41 'const Router::Connection' const
|     `-SubstTemplateTypeParmType 0x563f2ebc2a40 'Router::Connection' sugar
|       |-TemplateTypeParmType 0x563f2e7b3110 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563f2e7b30b8 'T'
|       `-RecordType 0x563f2eb9e270 'Router::Connection'
|         `-CXXRecord 0x563f2eb9e1e0 'Connection'
|-TypedefDecl 0x563f2ebc5028 <line:121:5, col:16> col:16 pointer 'Router::Connection *'
| `-PointerType 0x563f2ebc4ff0 'Router::Connection *'
|   `-SubstTemplateTypeParmType 0x563f2ebc2a40 'Router::Connection' sugar
|     |-TemplateTypeParmType 0x563f2e7b3110 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x563f2e7b30b8 'T'
|     `-RecordType 0x563f2eb9e270 'Router::Connection'
|       `-CXXRecord 0x563f2eb9e1e0 'Connection'
|-TypedefDecl 0x563f2ebc50b8 <line:122:5, col:22> col:22 const_pointer 'const Router::Connection *'
| `-PointerType 0x563f2ebc5080 'const Router::Connection *'
|   `-QualType 0x563f2ebc2a41 'const Router::Connection' const
|     `-SubstTemplateTypeParmType 0x563f2ebc2a40 'Router::Connection' sugar
|       |-TemplateTypeParmType 0x563f2e7b3110 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563f2e7b30b8 'T'
|       `-RecordType 0x563f2eb9e270 'Router::Connection'
|         `-CXXRecord 0x563f2eb9e1e0 'Connection'
|-TypedefDecl 0x563f2ebc5d10 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<Connection>::type':'const Router::Connection &'
| `-ElaboratedType 0x563f2ebc5cc0 'typename fast_argument<Connection>::type' sugar
|   `-TypedefType 0x563f2ebc5ca0 'fast_argument<Router::Connection, true>::type' sugar
|     |-Typedef 0x563f2ebc5bd8 'type'
|     `-LValueReferenceType 0x563f2ebc5ba0 'const Router::Connection &'
|       `-QualType 0x563f2ebc5941 'const Router::Connection' const
|         `-SubstTemplateTypeParmType 0x563f2ebc5940 'Router::Connection' sugar
|           |-TemplateTypeParmType 0x563f2e7858d0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x563f2e785878 'T'
|           `-RecordType 0x563f2eb9e270 'Router::Connection'
|             `-CXXRecord 0x563f2eb9e1e0 'Connection'
|-TypedefDecl 0x563f2ebc5d78 <line:126:5, col:22> col:22 const_access_type 'const Router::Connection &'
| `-LValueReferenceType 0x563f2ebc4f60 'const Router::Connection &'
|   `-QualType 0x563f2ebc2a41 'const Router::Connection' const
|     `-SubstTemplateTypeParmType 0x563f2ebc2a40 'Router::Connection' sugar
|       |-TemplateTypeParmType 0x563f2e7b3110 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563f2e7b30b8 'T'
|       `-RecordType 0x563f2eb9e270 'Router::Connection'
|         `-CXXRecord 0x563f2eb9e1e0 'Connection'
|-TypedefDecl 0x563f2ebc5dd0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x563f2e4b1580 'int'
|-TypedefDecl 0x563f2ebc5e38 <line:130:5, col:16> col:16 iterator 'Router::Connection *'
| `-PointerType 0x563f2ebc4ff0 'Router::Connection *'
|   `-SubstTemplateTypeParmType 0x563f2ebc2a40 'Router::Connection' sugar
|     |-TemplateTypeParmType 0x563f2e7b3110 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x563f2e7b30b8 'T'
|     `-RecordType 0x563f2eb9e270 'Router::Connection'
|       `-CXXRecord 0x563f2eb9e1e0 'Connection'
|-TypedefDecl 0x563f2ebc5ea0 <line:131:5, col:22> col:22 const_iterator 'const Router::Connection *'
| `-PointerType 0x563f2ebc5080 'const Router::Connection *'
|   `-QualType 0x563f2ebc2a41 'const Router::Connection' const
|     `-SubstTemplateTypeParmType 0x563f2ebc2a40 'Router::Connection' sugar
|       |-TemplateTypeParmType 0x563f2e7b3110 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563f2e7b30b8 'T'
|       `-RecordType 0x563f2eb9e270 'Router::Connection'
|         `-CXXRecord 0x563f2eb9e1e0 'Connection'
|-EnumDecl 0x563f2ebc5ef8 <line:134:5> col:5
| `-EnumConstantDecl 0x563f2ebc5ff0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Router::Connection>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x563f2ebc5fd0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x563f2e7b4798 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x563f2e7b4770 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x563f2e7b4750 <col:40> 'int' 1
|-CXXConstructorDecl 0x563f2ebc6078 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x563f2ebc6308 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Router::Connection>::value_argument_type)' inline
| |-ParmVarDecl 0x563f2ebc6130 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x563f2ebc61d0 <col:41, col:61> col:61 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXConstructorDecl 0x563f2ebc65c8 <line:139:5, col:37> col:12 Vector 'void (const Vector<Router::Connection> &)' inline
| `-ParmVarDecl 0x563f2ebc64b0 <col:19, col:36> col:36 x 'const Vector<Router::Connection> &'
|-CXXConstructorDecl 0x563f2ebc6888 <line:141:5, col:32> col:12 Vector 'void (Vector<Router::Connection> &&)' inline
| `-ParmVarDecl 0x563f2ebc6770 <col:19, col:31> col:31 x 'Vector<Router::Connection> &&'
|-CXXMethodDecl 0x563f2ebc6bd0 <line:144:5, col:51> col:23 operator= 'Vector<Router::Connection> &(const Vector<Router::Connection> &)' inline
| `-ParmVarDecl 0x563f2ebc6ab0 <col:33, col:50> col:50 x 'const Vector<Router::Connection> &'
|-CXXMethodDecl 0x563f2ebc6ee0 <line:146:5, col:46> col:23 operator= 'Vector<Router::Connection> &(Vector<Router::Connection> &&)' inline
| `-ParmVarDecl 0x563f2ebc6dc0 <col:33, col:45> col:45 x 'Vector<Router::Connection> &&'
|-CXXMethodDecl 0x563f2ebc71d0 <line:148:5, col:70> col:23 assign 'Vector<Router::Connection> &(Vector::size_type, Vector<Router::Connection>::value_argument_type)' inline
| |-ParmVarDecl 0x563f2ebc7018 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x563f2ebc7090 <col:43, col:69> col:63 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXMethodDecl 0x563f2ebc7328 <line:150:5, col:55> col:49 begin 'Vector<Router::Connection>::iterator ()'
| |-NoInlineAttr 0x563f2ebc7408 <col:20> Inherited
| `-OptimizeNoneAttr 0x563f2ebc7460 <col:30> Inherited
|-CXXMethodDecl 0x563f2ebc74a8 <line:151:5, col:53> col:49 end 'Vector<Router::Connection>::iterator ()'
| |-NoInlineAttr 0x563f2ebc7558 <col:20> Inherited
| `-OptimizeNoneAttr 0x563f2ebc75b0 <col:30> Inherited
|-CXXMethodDecl 0x563f2ebc7678 <line:152:5, col:63> col:55 begin 'Vector<Router::Connection>::const_iterator () const'
| |-NoInlineAttr 0x563f2ebc7728 <col:20> Inherited
| `-OptimizeNoneAttr 0x563f2ebc7780 <col:30> Inherited
|-CXXMethodDecl 0x563f2ebc77c8 <line:153:5, col:61> col:55 end 'Vector<Router::Connection>::const_iterator () const'
| |-NoInlineAttr 0x563f2ebc7878 <col:20> Inherited
| `-OptimizeNoneAttr 0x563f2ebc78d0 <col:30> Inherited
|-CXXMethodDecl 0x563f2ebc7918 <line:154:5, col:64> col:55 cbegin 'Vector<Router::Connection>::const_iterator () const'
| |-NoInlineAttr 0x563f2ebc79c8 <col:20> Inherited
| `-OptimizeNoneAttr 0x563f2ebc7a20 <col:30> Inherited
|-CXXMethodDecl 0x563f2ebc7a68 <line:155:5, col:62> col:55 cend 'Vector<Router::Connection>::const_iterator () const'
| |-NoInlineAttr 0x563f2ebc7b18 <col:20> Inherited
| `-OptimizeNoneAttr 0x563f2ebc7b70 <col:30> Inherited
|-CXXMethodDecl 0x563f2ebc7b98 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x563f2ebc7c48 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x563f2ebc7cf8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x563f2ebc7eb8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Router::Connection>::value_argument_type)' inline
| |-ParmVarDecl 0x563f2ebc7da8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x563f2ebc7e20 <col:37, col:63> col:57 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXMethodDecl 0x563f2ebc8008 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x563f2ebc7f78 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x563f2ebc81b8 <line:163:5, col:65> col:43 operator[] 'Router::Connection &(Vector::size_type)'
| |-ParmVarDecl 0x563f2ebc80c0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x563f2ebc8270 <col:20>
| `-OptimizeNoneAttr 0x563f2ebc82c8 <col:30>
|-CXXMethodDecl 0x563f2ebc83e8 <line:164:5, col:73> col:49 operator[] 'const Router::Connection &(Vector::size_type) const'
| |-ParmVarDecl 0x563f2ebc82f0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x563f2ebc84a0 <col:20>
| `-OptimizeNoneAttr 0x563f2ebc84f8 <col:30>
|-CXXMethodDecl 0x563f2ebc85b0 <line:165:5, col:29> col:15 at 'Router::Connection &(Vector::size_type)' inline
| `-ParmVarDecl 0x563f2ebc8520 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x563f2ebc86f8 <line:166:5, col:37> col:21 at 'const Router::Connection &(Vector::size_type) const' inline
| `-ParmVarDecl 0x563f2ebc8668 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x563f2ebc8828 <line:167:5, col:21> col:15 front 'Router::Connection &()' inline
|-CXXMethodDecl 0x563f2ebc8958 <line:168:5, col:29> col:21 front 'const Router::Connection &() const' inline
|-CXXMethodDecl 0x563f2ebc8a28 <line:169:5, col:20> col:15 back 'Router::Connection &()' inline
|-CXXMethodDecl 0x563f2ebc8af8 <line:170:5, col:28> col:21 back 'const Router::Connection &() const' inline
|-CXXMethodDecl 0x563f2ebc8c38 <line:172:5, col:39> col:15 unchecked_at 'Router::Connection &(Vector::size_type)' inline
| `-ParmVarDecl 0x563f2ebc8ba8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x563f2ebc8d80 <line:173:5, col:47> col:21 unchecked_at 'const Router::Connection &(Vector::size_type) const' inline
| `-ParmVarDecl 0x563f2ebc8cf0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x563f2ebc8ec8 <line:174:5, col:59> col:15 at_u 'Router::Connection &(Vector::size_type)' inline
| |-ParmVarDecl 0x563f2ebc8e38 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x563f2ebc8f80 <col:48> Inherited "" ""
|-CXXMethodDecl 0x563f2ebc9080 <line:175:5, col:71> col:21 at_u 'const Router::Connection &(Vector::size_type) const' inline
| |-ParmVarDecl 0x563f2ebc8ff0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x563f2ebc9138 <col:60> Inherited "" ""
|-CXXMethodDecl 0x563f2ebc91f8 <line:177:5, col:20> col:15 data 'Router::Connection *()' inline
|-CXXMethodDecl 0x563f2ebc92f8 <line:178:5, col:28> col:21 data 'const Router::Connection *() const' inline
|-CXXMethodDecl 0x563f2ebc94a8 <line:180:5, col:48> col:17 push_back 'void (Vector<Router::Connection>::value_argument_type)' inline
| `-ParmVarDecl 0x563f2ebc93b8 <col:27, col:47> col:47 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-FunctionTemplateDecl 0x563f2ebc9c68 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x563f2ebc9560 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Router::Connection>':'fast_argument<Router::Connection, true>'
| `-CXXMethodDecl 0x563f2ebc9bc8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Router::Connection &&)' inline
|   `-ParmVarDecl 0x563f2ebc9ac8 <col:58, col:62> col:62 v 'Router::Connection &&'
|-CXXMethodDecl 0x563f2ebc9d48 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x563f2ebc9e98 <line:186:5, col:49> col:17 push_front 'void (Vector<Router::Connection>::value_argument_type)' inline
| `-ParmVarDecl 0x563f2ebc9e08 <col:28, col:48> col:48 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXMethodDecl 0x563f2ebc9f50 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x563f2ebca198 <line:189:5, col:62> col:21 insert 'Vector<Router::Connection>::iterator (Vector<Router::Connection>::iterator, Vector<Router::Connection>::value_argument_type)' inline
| |-ParmVarDecl 0x563f2ebca010 <col:28, col:37> col:37 it 'Vector<Router::Connection>::iterator':'Router::Connection *'
| `-ParmVarDecl 0x563f2ebca088 <col:41, col:61> col:61 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXMethodDecl 0x563f2ebca358 <line:190:5, col:38> col:21 erase 'Vector<Router::Connection>::iterator (Vector<Router::Connection>::iterator)' inline
| `-ParmVarDecl 0x563f2ebca268 <col:27, col:36> col:36 it 'Vector<Router::Connection>::iterator':'Router::Connection *'
|-CXXMethodDecl 0x563f2ebca5a8 <line:191:5, col:49> col:21 erase 'Vector<Router::Connection>::iterator (Vector<Router::Connection>::iterator, Vector<Router::Connection>::iterator)' inline
| |-ParmVarDecl 0x563f2ebca420 <col:27, col:36> col:36 a 'Vector<Router::Connection>::iterator':'Router::Connection *'
| `-ParmVarDecl 0x563f2ebca498 <col:39, col:48> col:48 b 'Vector<Router::Connection>::iterator':'Router::Connection *'
|-CXXMethodDecl 0x563f2ebca668 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x563f2ebca8c8 <line:195:5, col:34> col:17 swap 'void (Vector<Router::Connection> &)' inline
| `-ParmVarDecl 0x563f2ebca7d0 <col:22, col:33> col:33 x 'Vector<Router::Connection> &'
`-CXXDestructorDecl 0x563f2ebca998 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x563f2ebca998

Layout: <CGRecordLayout
  LLVMType:%class.Vector.8 = type { %class.vector_memory.9 }
  NonVirtualBaseLLVMType:%class.Vector.8 = type { %class.vector_memory.9 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | union Handler::(anonymous at ../dummy_inc/click/handler.hh:290:5)
         0 |   HandlerCallback h
         0 |   ReadHandlerCallback r
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | union Handler::(anonymous at ../dummy_inc/click/handler.hh:294:5)
         0 |   HandlerCallback h
         0 |   WriteHandlerCallback w
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Handler
         0 |   class String _name
         0 |     struct String::rep_t _r
         0 |       const char * data
         8 |       int length
        16 |       struct String::memo_t * memo
        24 |   union Handler::(anonymous at ../dummy_inc/click/handler.hh:290:5) _read_hook
        24 |     HandlerCallback h
        24 |     ReadHandlerCallback r
        32 |   union Handler::(anonymous at ../dummy_inc/click/handler.hh:294:5) _write_hook
        32 |     HandlerCallback h
        32 |     WriteHandlerCallback w
        40 |   void * _read_user_data
        48 |   void * _write_user_data
        56 |   uint32_t _flags
        60 |   int _use_count
        64 |   int _next_by_name
           | [sizeof=72, dsize=68, align=8,
           |  nvsize=68, nvalign=8]

*** Dumping AST Record Layout
         0 | class ErrorHandler
         0 |   (ErrorHandler vtable pointer)
         8 |   int _nerrors
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563f2ea943b8 prev 0x563f2ea2fc48 <../dummy_inc/click/error.hh:90:1, line:592:1> line:90:7 referenced class ErrorHandler definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x563f2ea944b0 <col:1, col:7> col:7 implicit referenced class ErrorHandler
|-AccessSpecDecl 0x563f2ea94540 <col:22, col:28> col:22 public
|-EnumDecl 0x563f2ea94568 <line:98:5, line:111:5> line:98:10 Level
| |-EnumConstantDecl 0x563f2ea94688 <line:99:2, col:14> col:2 el_abort 'ErrorHandler::Level'
| | `-ConstantExpr 0x563f2ea94668 <col:13, col:14> 'int' Int: -999
| |   `-UnaryOperator 0x563f2ea94650 <col:13, col:14> 'int' prefix '-'
| |     `-IntegerLiteral 0x563f2ea94630 <col:14> 'int' 999
| |-EnumConstantDecl 0x563f2ea94730 <line:100:2, col:14> col:2 el_fatal 'ErrorHandler::Level'
| | `-ConstantExpr 0x563f2ea94710 <col:13, col:14> 'int' Int: -1
| |   `-UnaryOperator 0x563f2ea946f8 <col:13, col:14> 'int' prefix '-'
| |     `-IntegerLiteral 0x563f2ea946d8 <col:14> 'int' 1
| |-EnumConstantDecl 0x563f2ea947c0 <line:102:2, col:17> col:2 el_emergency 'ErrorHandler::Level'
| | `-ConstantExpr 0x563f2ea947a0 <col:17> 'int' Int: 0
| |   `-IntegerLiteral 0x563f2ea94780 <col:17> 'int' 0
| |-EnumConstantDecl 0x563f2ea94850 <line:103:2, col:13> col:2 el_alert 'ErrorHandler::Level'
| | `-ConstantExpr 0x563f2ea94830 <col:13> 'int' Int: 1
| |   `-IntegerLiteral 0x563f2ea94810 <col:13> 'int' 1
| |-EnumConstantDecl 0x563f2ea948e0 <line:104:2, col:16> col:2 el_critical 'ErrorHandler::Level'
| | `-ConstantExpr 0x563f2ea948c0 <col:16> 'int' Int: 2
| |   `-IntegerLiteral 0x563f2ea948a0 <col:16> 'int' 2
| |-EnumConstantDecl 0x563f2ea94970 <line:105:2, col:13> col:2 referenced el_error 'ErrorHandler::Level'
| | `-ConstantExpr 0x563f2ea94950 <col:13> 'int' Int: 3
| |   `-IntegerLiteral 0x563f2ea94930 <col:13> 'int' 3
| |-EnumConstantDecl 0x563f2ea94a00 <line:106:2, col:15> col:2 el_warning 'ErrorHandler::Level'
| | `-ConstantExpr 0x563f2ea949e0 <col:15> 'int' Int: 4
| |   `-IntegerLiteral 0x563f2ea949c0 <col:15> 'int' 4
| |-EnumConstantDecl 0x563f2ea94a90 <line:107:2, col:14> col:2 el_notice 'ErrorHandler::Level'
| | `-ConstantExpr 0x563f2ea94a70 <col:14> 'int' Int: 5
| |   `-IntegerLiteral 0x563f2ea94a50 <col:14> 'int' 5
| |-EnumConstantDecl 0x563f2ea94b20 <line:109:2, col:12> col:2 el_info 'ErrorHandler::Level'
| | `-ConstantExpr 0x563f2ea94b00 <col:12> 'int' Int: 6
| |   `-IntegerLiteral 0x563f2ea94ae0 <col:12> 'int' 6
| `-EnumConstantDecl 0x563f2ea94bb0 <line:110:2, col:13> col:2 el_debug 'ErrorHandler::Level'
|   `-ConstantExpr 0x563f2ea94b90 <col:13> 'int' Int: 7
|     `-IntegerLiteral 0x563f2ea94b70 <col:13> 'int' 7
|-VarDecl 0x563f2ea94c20 <line:114:5, col:31> col:23 e_abort 'const char []' static
|-VarDecl 0x563f2ea94ca8 <col:5, line:115:10> col:2 e_fatal 'const char []' static
|-VarDecl 0x563f2ea94d30 <line:114:5, line:116:14> col:2 e_emergency 'const char []' static
|-VarDecl 0x563f2ea94db8 <line:114:5, line:117:10> col:2 e_alert 'const char []' static
|-VarDecl 0x563f2ea94e40 <line:114:5, line:118:13> col:2 e_critical 'const char []' static
|-VarDecl 0x563f2ea94ec8 <line:114:5, line:119:10> col:2 e_error 'const char []' static
|-VarDecl 0x563f2ea94f50 <line:114:5, line:120:12> col:2 e_warning 'const char []' static
|-VarDecl 0x563f2ea94fd8 <line:114:5, line:121:22> col:2 e_warning_annotated 'const char []' static
|-VarDecl 0x563f2ea95060 <line:114:5, line:122:11> col:2 e_notice 'const char []' static
|-VarDecl 0x563f2ea950e8 <line:114:5, line:123:9> col:2 e_info 'const char []' static
|-VarDecl 0x563f2ea95170 <line:114:5, line:124:10> col:2 e_debug 'const char []' static
|-CXXConstructorDecl 0x563f2ea95270 <line:127:5, line:129:5> line:127:5 used ErrorHandler 'void ()'
| |-CXXCtorInitializer Field 0x563f2eaa2608 '_nerrors' 'int'
| | `-IntegerLiteral 0x563f2eaa2d98 <line:128:13> 'int' 0
| `-CompoundStmt 0x563f2eaa2e08 <col:16, line:129:5>
|-CXXDestructorDecl 0x563f2ea95360 <line:131:5, line:132:5> line:131:13 used ~ErrorHandler 'void () noexcept' virtual
| `-CompoundStmt 0x563f2eaa2e18 <col:29, line:132:5>
|-CXXMethodDecl 0x563f2ea95518 <line:148:5, col:62> col:26 static_initialize 'ErrorHandler *(ErrorHandler *)' static
| `-ParmVarDecl 0x563f2ea95450 <col:44, col:58> col:58 errh 'ErrorHandler *'
|-CXXMethodDecl 0x563f2ea955e0 <line:154:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x563f2ea956c8 <line:159:5, line:161:5> line:159:26 default_handler 'ErrorHandler *()' static
| `-CompoundStmt 0x563f2eaa2e70 <col:44, line:161:5>
|   `-ReturnStmt 0x563f2eaa2e60 <line:160:2, col:9>
|     `-ImplicitCastExpr 0x563f2eaa2e48 <col:9> 'ErrorHandler *' <LValueToRValue>
|       `-DeclRefExpr 0x563f2eaa2e28 <col:9> 'ErrorHandler *' lvalue Var 0x563f2eaa2668 'the_default_handler' 'ErrorHandler *'
|-CXXMethodDecl 0x563f2ea95838 <line:168:5, col:55> col:17 set_default_handler 'void (ErrorHandler *)' static
| `-ParmVarDecl 0x563f2ea95778 <col:37, col:51> col:51 errh 'ErrorHandler *'
|-CXXMethodDecl 0x563f2ea95900 <line:171:5, line:173:5> line:171:26 silent_handler 'ErrorHandler *()' static
| `-CompoundStmt 0x563f2eaa2ed0 <col:43, line:173:5>
|   `-ReturnStmt 0x563f2eaa2ec0 <line:172:2, col:9>
|     `-ImplicitCastExpr 0x563f2eaa2ea8 <col:9> 'ErrorHandler *' <LValueToRValue>
|       `-DeclRefExpr 0x563f2eaa2e88 <col:9> 'ErrorHandler *' lvalue Var 0x563f2eaa26e0 'the_silent_handler' 'ErrorHandler *'
|-VarDecl 0x563f2ea959b8 <line:176:5, col:22> col:22 ok_result 'const int' static
|-VarDecl 0x563f2ea95a38 <line:178:5, col:22> col:22 error_result 'const int' static
|-CXXMethodDecl 0x563f2ea95b48 <line:186:5, col:36> col:10 debug 'void (const char *, ...)'
| `-ParmVarDecl 0x563f2ea95ab8 <col:16, col:28> col:28 fmt 'const char *'
|-CXXMethodDecl 0x563f2ea95c98 <line:188:5, col:38> col:10 message 'void (const char *, ...)'
| `-ParmVarDecl 0x563f2ea95c08 <col:18, col:30> col:30 fmt 'const char *'
|-CXXMethodDecl 0x563f2ea95df0 <line:193:5, col:37> col:9 warning 'int (const char *, ...)'
| `-ParmVarDecl 0x563f2ea95d58 <col:17, col:29> col:29 fmt 'const char *'
|-CXXMethodDecl 0x563f2ea95f48 <line:196:5, col:35> col:9 error 'int (const char *, ...)'
| `-ParmVarDecl 0x563f2ea95eb0 <col:15, col:27> col:27 fmt 'const char *'
|-CXXMethodDecl 0x563f2ea960a0 <line:201:5, col:35> col:9 fatal 'int (const char *, ...)'
| `-ParmVarDecl 0x563f2ea96008 <col:15, col:27> col:27 fmt 'const char *'
|-CXXMethodDecl 0x563f2ea962b0 <line:204:5, col:61> col:10 ldebug 'void (const String &, const char *, ...)'
| |-ParmVarDecl 0x563f2ea96158 <col:17, col:31> col:31 landmark 'const String &'
| `-ParmVarDecl 0x563f2ea961d8 <col:41, col:53> col:53 fmt 'const char *'
|-CXXMethodDecl 0x563f2ea96488 <line:206:5, col:63> col:10 lmessage 'void (const String &, const char *, ...)'
| |-ParmVarDecl 0x563f2ea96370 <col:19, col:33> col:33 landmark 'const String &'
| `-ParmVarDecl 0x563f2ea963f0 <col:43, col:55> col:55 fmt 'const char *'
|-CXXMethodDecl 0x563f2ea966a8 <line:208:5, col:62> col:9 lwarning 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x563f2ea96548 <col:18, col:32> col:32 landmark 'const String &'
| `-ParmVarDecl 0x563f2ea965c8 <col:42, col:54> col:54 fmt 'const char *'
|-CXXMethodDecl 0x563f2ea96888 <line:210:5, col:60> col:9 lerror 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x563f2ea96768 <col:16, col:30> col:30 landmark 'const String &'
| `-ParmVarDecl 0x563f2ea967e8 <col:40, col:52> col:52 fmt 'const char *'
|-CXXMethodDecl 0x563f2ea9ea80 <line:212:5, col:60> col:9 lfatal 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x563f2ea9e960 <col:16, col:30> col:30 landmark 'const String &'
| `-ParmVarDecl 0x563f2ea9e9e0 <col:40, col:52> col:52 fmt 'const char *'
|-CXXMethodDecl 0x563f2ea9ec10 <line:226:5, col:35> col:9 used xmessage 'int (const String &)'
| `-ParmVarDecl 0x563f2ea9eb40 <col:18, col:32> col:32 str 'const String &'
|-CXXMethodDecl 0x563f2ea9ede0 <line:232:5, line:234:5> line:232:9 used xmessage 'int (const String &, const String &)'
| |-ParmVarDecl 0x563f2ea9ecc8 <col:18, col:32> col:32 used anno 'const String &'
| |-ParmVarDecl 0x563f2ea9ed40 <col:38, col:52> col:52 used str 'const String &'
| `-CompoundStmt 0x563f2eaa3128 <col:57, line:234:5>
|   `-ReturnStmt 0x563f2eaa3118 <line:233:2, col:41>
|     `-ExprWithCleanups 0x563f2eaa3100 <col:9, col:41> 'int'
|       `-CXXMemberCallExpr 0x563f2eaa30a8 <col:9, col:41> 'int'
|         |-MemberExpr 0x563f2eaa3078 <col:9> '<bound member function type>' ->xmessage 0x563f2ea9ec10
|         | `-CXXThisExpr 0x563f2eaa3068 <col:9> 'ErrorHandler *' implicit this
|         `-MaterializeTemporaryExpr 0x563f2eaa30e8 <col:18, col:40> 'const String' lvalue
|           `-ImplicitCastExpr 0x563f2eaa30d0 <col:18, col:40> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x563f2eaa3048 <col:18, col:40> 'String' (CXXTemporary 0x563f2eaa3048)
|               `-CallExpr 0x563f2eaa3010 <col:18, col:40> 'String'
|                 |-ImplicitCastExpr 0x563f2eaa2ff8 <col:18> 'String (*)(const String &, const String &)' <FunctionToPointerDecay>
|                 | `-DeclRefExpr 0x563f2eaa2f70 <col:18> 'String (const String &, const String &)' lvalue CXXMethod 0x563f2eaa0e38 'combine_anno' 'String (const String &, const String &)'
|                 |-DeclRefExpr 0x563f2eaa2f90 <col:31> 'const String' lvalue ParmVar 0x563f2ea9ed40 'str' 'const String &'
|                 `-DeclRefExpr 0x563f2eaa2fb0 <col:36> 'const String' lvalue ParmVar 0x563f2ea9ecc8 'anno' 'const String &'
|-CXXMethodDecl 0x563f2ea9f120 <line:241:5, line:243:5> line:241:9 xmessage 'int (const String &, const char *, __va_list_tag *)'
| |-ParmVarDecl 0x563f2ea9eea0 <col:18, col:32> col:32 used anno 'const String &'
| |-ParmVarDecl 0x563f2ea9ef20 <col:38, col:50> col:50 used fmt 'const char *'
| |-ParmVarDecl 0x563f2ea9eff0 <col:55, col:63> col:63 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x563f2eaa33b8 <col:68, line:243:5>
|   `-ReturnStmt 0x563f2eaa33a8 <line:242:2, col:41>
|     `-ExprWithCleanups 0x563f2eaa3390 <col:9, col:41> 'int'
|       `-CXXMemberCallExpr 0x563f2eaa3330 <col:9, col:41> 'int'
|         |-MemberExpr 0x563f2eaa3300 <col:9> '<bound member function type>' ->xmessage 0x563f2ea9ede0
|         | `-CXXThisExpr 0x563f2eaa32f0 <col:9> 'ErrorHandler *' implicit this
|         |-DeclRefExpr 0x563f2eaa31c8 <col:18> 'const String' lvalue ParmVar 0x563f2ea9eea0 'anno' 'const String &'
|         `-MaterializeTemporaryExpr 0x563f2eaa3378 <col:24, col:40> 'const String' lvalue
|           `-ImplicitCastExpr 0x563f2eaa3360 <col:24, col:40> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x563f2eaa32d0 <col:24, col:40> 'String' (CXXTemporary 0x563f2eaa32d0)
|               `-CXXMemberCallExpr 0x563f2eaa3268 <col:24, col:40> 'String'
|                 |-MemberExpr 0x563f2eaa31f8 <col:24> '<bound member function type>' ->vformat 0x563f2eaa0300
|                 | `-CXXThisExpr 0x563f2eaa31e8 <col:24> 'ErrorHandler *' implicit this
|                 |-ImplicitCastExpr 0x563f2eaa3298 <col:32> 'const char *' <LValueToRValue>
|                 | `-DeclRefExpr 0x563f2eaa3228 <col:32> 'const char *' lvalue ParmVar 0x563f2ea9ef20 'fmt' 'const char *'
|                 `-ImplicitCastExpr 0x563f2eaa32b0 <col:37> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                   `-DeclRefExpr 0x563f2eaa3248 <col:37> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x563f2ea9eff0 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x563f2ea9f3c0 <line:251:5, line:254:5> line:251:9 used xmessage 'int (const String &, const String &, const String &)'
| |-ParmVarDecl 0x563f2ea9f1e8 <col:18, col:32> col:32 used landmark 'const String &'
| |-ParmVarDecl 0x563f2ea9f260 <col:42, col:56> col:56 used anno 'const String &'
| |-ParmVarDecl 0x563f2ea9f2d8 <line:252:4, col:18> col:18 used str 'const String &'
| `-CompoundStmt 0x563f2eaa36f8 <col:23, line:254:5>
|   `-ReturnStmt 0x563f2eaa36e8 <line:253:2, col:71>
|     `-ExprWithCleanups 0x563f2eaa36d0 <col:9, col:71> 'int'
|       `-CXXMemberCallExpr 0x563f2eaa3670 <col:9, col:71> 'int'
|         |-MemberExpr 0x563f2eaa3640 <col:9> '<bound member function type>' ->xmessage 0x563f2ea9ede0
|         | `-CXXThisExpr 0x563f2eaa3630 <col:9> 'ErrorHandler *' implicit this
|         |-MaterializeTemporaryExpr 0x563f2eaa36b8 <col:18, col:65> 'const String' lvalue
|         | `-ImplicitCastExpr 0x563f2eaa36a0 <col:18, col:65> 'const String' <NoOp>
|         |   `-CXXBindTemporaryExpr 0x563f2eaa35f0 <col:18, col:65> 'String' (CXXTemporary 0x563f2eaa35f0)
|         |     `-CallExpr 0x563f2eaa3588 <col:18, col:65> 'String'
|         |       |-ImplicitCastExpr 0x563f2eaa3570 <col:18> 'String (*)(const String &, const String &)' <FunctionToPointerDecay>
|         |       | `-DeclRefExpr 0x563f2eaa3458 <col:18> 'String (const String &, const String &)' lvalue CXXMethod 0x563f2eaa0e38 'combine_anno' 'String (const String &, const String &)'
|         |       |-DeclRefExpr 0x563f2eaa3478 <col:31> 'const String' lvalue ParmVar 0x563f2ea9f260 'anno' 'const String &'
|         |       `-MaterializeTemporaryExpr 0x563f2eaa35d0 <col:37, col:64> 'const String' lvalue
|         |         `-ImplicitCastExpr 0x563f2eaa35b8 <col:37, col:64> 'const String' <NoOp>
|         |           `-CXXBindTemporaryExpr 0x563f2eaa3550 <col:37, col:64> 'String' (CXXTemporary 0x563f2eaa3550)
|         |             `-CallExpr 0x563f2eaa3520 <col:37, col:64> 'String'
|         |               |-ImplicitCastExpr 0x563f2eaa3508 <col:37> 'String (*)(const String &)' <FunctionToPointerDecay>
|         |               | `-DeclRefExpr 0x563f2eaa3498 <col:37> 'String (const String &)' lvalue CXXMethod 0x563f2eaa1488 'make_landmark_anno' 'String (const String &)'
|         |               `-DeclRefExpr 0x563f2eaa34b8 <col:56> 'const String' lvalue ParmVar 0x563f2ea9f1e8 'landmark' 'const String &'
|         `-DeclRefExpr 0x563f2eaa3610 <col:68> 'const String' lvalue ParmVar 0x563f2ea9f2d8 'str' 'const String &'
|-CXXMethodDecl 0x563f2ea9f740 <line:264:5, line:267:5> line:264:9 xmessage 'int (const String &, const String &, const char *, __va_list_tag *)'
| |-ParmVarDecl 0x563f2ea9f488 <col:18, col:32> col:32 used landmark 'const String &'
| |-ParmVarDecl 0x563f2ea9f500 <col:42, col:56> col:56 used anno 'const String &'
| |-ParmVarDecl 0x563f2ea9f580 <line:265:4, col:16> col:16 used fmt 'const char *'
| |-ParmVarDecl 0x563f2ea9f5f8 <col:21, col:29> col:29 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x563f2eaa39b0 <col:34, line:267:5>
|   `-ReturnStmt 0x563f2eaa39a0 <line:266:2, col:51>
|     `-ExprWithCleanups 0x563f2eaa3988 <col:9, col:51> 'int'
|       `-CXXMemberCallExpr 0x563f2eaa3920 <col:9, col:51> 'int'
|         |-MemberExpr 0x563f2eaa38f0 <col:9> '<bound member function type>' ->xmessage 0x563f2ea9f3c0
|         | `-CXXThisExpr 0x563f2eaa38e0 <col:9> 'ErrorHandler *' implicit this
|         |-DeclRefExpr 0x563f2eaa3798 <col:18> 'const String' lvalue ParmVar 0x563f2ea9f488 'landmark' 'const String &'
|         |-DeclRefExpr 0x563f2eaa37b8 <col:28> 'const String' lvalue ParmVar 0x563f2ea9f500 'anno' 'const String &'
|         `-MaterializeTemporaryExpr 0x563f2eaa3970 <col:34, col:50> 'const String' lvalue
|           `-ImplicitCastExpr 0x563f2eaa3958 <col:34, col:50> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x563f2eaa38c0 <col:34, col:50> 'String' (CXXTemporary 0x563f2eaa38c0)
|               `-CXXMemberCallExpr 0x563f2eaa3858 <col:34, col:50> 'String'
|                 |-MemberExpr 0x563f2eaa37e8 <col:34> '<bound member function type>' ->vformat 0x563f2eaa0300
|                 | `-CXXThisExpr 0x563f2eaa37d8 <col:34> 'ErrorHandler *' implicit this
|                 |-ImplicitCastExpr 0x563f2eaa3888 <col:42> 'const char *' <LValueToRValue>
|                 | `-DeclRefExpr 0x563f2eaa3818 <col:42> 'const char *' lvalue ParmVar 0x563f2ea9f580 'fmt' 'const char *'
|                 `-ImplicitCastExpr 0x563f2eaa38a0 <col:47> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                   `-DeclRefExpr 0x563f2eaa3838 <col:47> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x563f2ea9f5f8 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x563f2ea9f850 <line:286:5, line:288:5> line:286:9 nerrors 'int () const'
| `-CompoundStmt 0x563f2eaa3a30 <col:25, line:288:5>
|   `-ReturnStmt 0x563f2eaa3a20 <line:287:2, col:9>
|     `-ImplicitCastExpr 0x563f2eaa3a08 <col:9> 'int' <LValueToRValue>
|       `-MemberExpr 0x563f2eaa39d8 <col:9> 'const int' lvalue ->_nerrors 0x563f2eaa2608
|         `-CXXThisExpr 0x563f2eaa39c8 <col:9> 'const ErrorHandler *' implicit this
|-CXXMethodDecl 0x563f2ea9fa60 <line:349:5, col:66> col:19 xformat 'String (int, const char *, ...)' static
| |-ParmVarDecl 0x563f2ea9f908 <col:27, col:31> col:31 default_flags 'int'
| `-ParmVarDecl 0x563f2ea9f988 <col:46, col:58> col:58 fmt 'const char *'
|-CXXMethodDecl 0x563f2ea9fd48 <line:351:5, col:75> col:19 used vxformat 'String (int, const char *, __va_list_tag *)' static
| |-ParmVarDecl 0x563f2ea9fb28 <col:28, col:32> col:32 default_flags 'int'
| |-ParmVarDecl 0x563f2ea9fba8 <col:47, col:59> col:59 fmt 'const char *'
| `-ParmVarDecl 0x563f2ea9fc20 <col:64, col:72> col:72 val '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x563f2ea9fee0 <line:353:5, col:47> col:19 xformat 'String (const char *, ...)' static
| `-ParmVarDecl 0x563f2ea9fe18 <col:27, col:39> col:39 fmt 'const char *'
|-CXXMethodDecl 0x563f2eaa0128 <line:355:5, line:357:5> line:355:19 vxformat 'String (const char *, __va_list_tag *)' static
| |-ParmVarDecl 0x563f2ea9ffa0 <col:28, col:40> col:40 used fmt 'const char *'
| |-ParmVarDecl 0x563f2eaa0018 <col:45, col:53> col:53 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x563f2eaa3c90 <col:58, line:357:5>
|   `-ReturnStmt 0x563f2eaa3c80 <line:356:2, col:29>
|     `-ExprWithCleanups 0x563f2eaa3c68 <col:9, col:29> 'String'
|       `-CXXConstructExpr 0x563f2eaa3c38 <col:9, col:29> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x563f2eaa3c20 <col:9, col:29> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x563f2eaa3c00 <col:9, col:29> 'String' (CXXTemporary 0x563f2eaa3c00)
|             `-CallExpr 0x563f2eaa3b90 <col:9, col:29> 'String'
|               |-ImplicitCastExpr 0x563f2eaa3b78 <col:9> 'String (*)(int, const char *, __va_list_tag *)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x563f2eaa3af8 <col:9> 'String (int, const char *, __va_list_tag *)' lvalue CXXMethod 0x563f2ea9fd48 'vxformat' 'String (int, const char *, __va_list_tag *)'
|               |-IntegerLiteral 0x563f2eaa3a98 <col:18> 'int' 0
|               |-ImplicitCastExpr 0x563f2eaa3bc8 <col:21> 'const char *' <LValueToRValue>
|               | `-DeclRefExpr 0x563f2eaa3ab8 <col:21> 'const char *' lvalue ParmVar 0x563f2ea9ffa0 'fmt' 'const char *'
|               `-ImplicitCastExpr 0x563f2eaa3be0 <col:26> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                 `-DeclRefExpr 0x563f2eaa3ad8 <col:26> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x563f2eaa0018 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x563f2eaa0300 <line:369:5, col:56> col:20 used vformat 'String (const char *, __va_list_tag *)' virtual
| |-ParmVarDecl 0x563f2eaa01f0 <col:28, col:40> col:40 fmt 'const char *'
| `-ParmVarDecl 0x563f2eaa0268 <col:45, col:53> col:53 val '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x563f2eaa0458 <line:379:5, col:39> col:12 format 'String (const char *, ...)'
| `-ParmVarDecl 0x563f2eaa03c8 <col:19, col:31> col:31 fmt 'const char *'
|-CXXMethodDecl 0x563f2eaa05a0 <line:393:5, col:46> col:20 decorate 'String (const String &)' virtual
| `-ParmVarDecl 0x563f2eaa0510 <col:29, col:43> col:43 str 'const String &'
|-CXXMethodDecl 0x563f2eaa0840 <line:424:5, col:69> col:19 emit 'void *(const String &, void *, bool)' virtual
| |-ParmVarDecl 0x563f2eaa0658 <col:24, col:38> col:38 str 'const String &'
| |-ParmVarDecl 0x563f2eaa06d8 <col:43, col:49> col:49 user_data 'void *'
| `-ParmVarDecl 0x563f2eaa0750 <col:60, col:65> col:65 more 'bool'
|-CXXMethodDecl 0x563f2eaa09a0 <line:438:5, line:441:5> line:438:18 account 'void (int)' virtual
| |-ParmVarDecl 0x563f2eaa0910 <col:26, col:30> col:30 used level 'int'
| `-CompoundStmt 0x563f2eaa3da8 <col:37, line:441:5>
|   `-IfStmt 0x563f2eaa3d90 <line:439:2, line:440:8>
|     |-BinaryOperator 0x563f2eaa3d18 <line:439:6, col:15> 'bool' '<='
|     | |-ImplicitCastExpr 0x563f2eaa3ce8 <col:6> 'int' <LValueToRValue>
|     | | `-DeclRefExpr 0x563f2eaa3ca8 <col:6> 'int' lvalue ParmVar 0x563f2eaa0910 'level' 'int'
|     | `-ImplicitCastExpr 0x563f2eaa3d00 <col:15> 'int' <IntegralCast>
|     |   `-DeclRefExpr 0x563f2eaa3cc8 <col:15> 'ErrorHandler::Level' EnumConstant 0x563f2ea94970 'el_error' 'ErrorHandler::Level'
|     `-UnaryOperator 0x563f2eaa3d78 <line:440:6, col:8> 'int' lvalue prefix '++'
|       `-MemberExpr 0x563f2eaa3d48 <col:8> 'int' lvalue ->_nerrors 0x563f2eaa2608
|         `-CXXThisExpr 0x563f2eaa3d38 <col:8> 'ErrorHandler *' implicit this
|-CXXMethodDecl 0x563f2eaa0a68 <line:446:5, line:448:5> line:446:18 clear 'void ()' virtual
| `-CompoundStmt 0x563f2eaa3e40 <col:26, line:448:5>
|   `-BinaryOperator 0x563f2eaa3e20 <line:447:2, col:13> 'int' lvalue '='
|     |-MemberExpr 0x563f2eaa3dd0 <col:2> 'int' lvalue ->_nerrors 0x563f2eaa2608
|     | `-CXXThisExpr 0x563f2eaa3dc0 <col:2> 'ErrorHandler *' implicit this
|     `-IntegerLiteral 0x563f2eaa3e00 <col:13> 'int' 0
|-CXXMethodDecl 0x563f2eaa0c30 <line:466:5, col:66> col:19 used make_anno 'String (const char *, const String &)' static
| |-ParmVarDecl 0x563f2eaa0b20 <col:29, col:41> col:41 name 'const char *'
| `-ParmVarDecl 0x563f2eaa0b98 <col:47, col:61> col:61 value 'const String &'
|-CXXMethodDecl 0x563f2eaa0e38 <line:482:5, col:69> col:19 used combine_anno 'String (const String &, const String &)' static
| |-ParmVarDecl 0x563f2eaa0cf0 <col:32, col:46> col:46 str 'const String &'
| `-ParmVarDecl 0x563f2eaa0d68 <col:51, col:65> col:65 anno 'const String &'
|-CXXMethodDecl 0x563f2eaa10e8 <line:516:5, line:517:68> line:516:24 parse_anno 'const char *(const String &, const char *, const char *, ...)' static
| |-ParmVarDecl 0x563f2eaa0ef8 <col:35, col:49> col:49 str 'const String &'
| |-ParmVarDecl 0x563f2eaa0f78 <line:517:3, col:15> col:15 begin 'const char *'
| |-ParmVarDecl 0x563f2eaa0ff8 <col:22, col:34> col:34 end 'const char *'
| `-SentinelAttr 0x563f2eaa11a0 <col:59> 0 0
|-CXXMethodDecl 0x563f2eaa1338 <line:527:5, line:534:5> line:527:24 skip_anno 'const char *(const char *, const char *)' static
| |-ParmVarDecl 0x563f2eaa1218 <col:34, col:46> col:46 used begin 'const char *'
| |-ParmVarDecl 0x563f2eaa1298 <col:53, col:65> col:65 used end 'const char *'
| `-CompoundStmt 0x563f2eaa44b0 <col:70, line:534:5>
|   |-DeclStmt 0x563f2eaa3fb0 <line:528:2, col:20>
|   | |-VarDecl 0x563f2eaa3e68 <col:2, col:9> col:9 used name 'String' callinit destroyed
|   | | `-CXXConstructExpr 0x563f2eaa3ed0 <col:9> 'String' 'void ()'
|   | `-VarDecl 0x563f2eaa3f08 <col:2, col:15> col:15 used value 'String' callinit destroyed
|   |   `-CXXConstructExpr 0x563f2eaa3f70 <col:15> 'String' 'void ()'
|   |-DeclStmt 0x563f2eaa4080 <line:529:2, col:23>
|   | `-VarDecl 0x563f2eaa3fe0 <col:2, col:18> col:14 used x 'const char *' cinit
|   |   `-ImplicitCastExpr 0x563f2eaa4068 <col:18> 'const char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x563f2eaa4048 <col:18> 'const char *' lvalue ParmVar 0x563f2eaa1218 'begin' 'const char *'
|   |-DoStmt 0x563f2eaa4448 <line:530:2, line:532:15>
|   | |-CompoundStmt 0x563f2eaa4378 <line:530:5, line:532:2>
|   | | `-ExprWithCleanups 0x563f2eaa4360 <line:531:6, col:58> 'const char *' lvalue
|   | |   `-BinaryOperator 0x563f2eaa4340 <col:6, col:58> 'const char *' lvalue '='
|   | |     |-DeclRefExpr 0x563f2eaa4098 <col:6> 'const char *' lvalue Var 0x563f2eaa3fe0 'x' 'const char *'
|   | |     `-CallExpr 0x563f2eaa4290 <col:10, col:58> 'const char *'
|   | |       |-ImplicitCastExpr 0x563f2eaa4278 <col:10> 'const char *(*)(const String &, const char *, const char *, String *, String *, bool)' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x563f2eaa4230 <col:10> 'const char *(const String &, const char *, const char *, String *, String *, bool)' lvalue CXXMethod 0x563f2eaa2ae0 'skip_anno' 'const char *(const String &, const char *, const char *, String *, String *, bool)'
|   | |       |-MaterializeTemporaryExpr 0x563f2eaa42f8 <col:20, col:27> 'const String' lvalue
|   | |       | `-ImplicitCastExpr 0x563f2eaa42e0 <col:20, col:27> 'const String' <NoOp>
|   | |       |   `-CXXBindTemporaryExpr 0x563f2eaa4150 <col:20, col:27> 'String' (CXXTemporary 0x563f2eaa4150)
|   | |       |     `-CXXTemporaryObjectExpr 0x563f2eaa4118 <col:20, col:27> 'String' 'void ()'
|   | |       |-ImplicitCastExpr 0x563f2eaa4310 <col:30> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x563f2eaa4170 <col:30> 'const char *' lvalue Var 0x563f2eaa3fe0 'x' 'const char *'
|   | |       |-ImplicitCastExpr 0x563f2eaa4328 <col:33> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x563f2eaa4190 <col:33> 'const char *' lvalue ParmVar 0x563f2eaa1298 'end' 'const char *'
|   | |       |-UnaryOperator 0x563f2eaa41d0 <col:38, col:39> 'String *' prefix '&' cannot overflow
|   | |       | `-DeclRefExpr 0x563f2eaa41b0 <col:39> 'String' lvalue Var 0x563f2eaa3e68 'name' 'String'
|   | |       |-UnaryOperator 0x563f2eaa4208 <col:45, col:46> 'String *' prefix '&' cannot overflow
|   | |       | `-DeclRefExpr 0x563f2eaa41e8 <col:46> 'String' lvalue Var 0x563f2eaa3f08 'value' 'String'
|   | |       `-CXXBoolLiteralExpr 0x563f2eaa4220 <col:53> 'bool' false
|   | `-ImplicitCastExpr 0x563f2eaa4430 <line:532:11> 'bool' <MemberPointerToBoolean>
|   |   `-ImplicitCastExpr 0x563f2eaa4418 <col:11> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|   |     `-CXXMemberCallExpr 0x563f2eaa43f8 <col:11> 'String::unspecified_bool_type':'int (String::*)() const'
|   |       `-MemberExpr 0x563f2eaa43c8 <col:11> '<bound member function type>' .operator int (String::*)() const 0x563f2e7e4d38
|   |         `-ImplicitCastExpr 0x563f2eaa43b0 <col:11> 'const String' lvalue <NoOp>
|   |           `-DeclRefExpr 0x563f2eaa4390 <col:11> 'String' lvalue Var 0x563f2eaa3e68 'name' 'String'
|   `-ReturnStmt 0x563f2eaa44a0 <line:533:2, col:9>
|     `-ImplicitCastExpr 0x563f2eaa4488 <col:9> 'const char *' <LValueToRValue>
|       `-DeclRefExpr 0x563f2eaa4468 <col:9> 'const char *' lvalue Var 0x563f2eaa3fe0 'x' 'const char *'
|-CXXMethodDecl 0x563f2eaa1488 <line:543:5, line:550:5> line:543:19 used make_landmark_anno 'String (const String &)' static
| |-ParmVarDecl 0x563f2eaa13f8 <col:38, col:52> col:52 used x 'const String &'
| `-CompoundStmt 0x563f2eaa4ab8 <col:55, line:550:5>
|   `-IfStmt 0x563f2eaa4a90 <line:544:2, line:549:20> has_else
|     |-BinaryOperator 0x563f2eaa46f0 <line:544:6, col:19> 'bool' '&&'
|     | |-ImplicitCastExpr 0x563f2eaa46d8 <col:6> 'bool' <MemberPointerToBoolean>
|     | | `-ImplicitCastExpr 0x563f2eaa46c0 <col:6> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|     | |   `-CXXMemberCallExpr 0x563f2eaa46a0 <col:6> 'String::unspecified_bool_type':'int (String::*)() const'
|     | |     `-MemberExpr 0x563f2eaa4670 <col:6> '<bound member function type>' .operator int (String::*)() const 0x563f2e7e4d38
|     | |       `-DeclRefExpr 0x563f2eaa4510 <col:6> 'const String' lvalue ParmVar 0x563f2eaa13f8 'x' 'const String &'
|     | `-BinaryOperator 0x563f2eaa4650 <col:11, col:19> 'bool' '=='
|     |   |-ImplicitCastExpr 0x563f2eaa4620 <col:11, col:14> 'int' <IntegralCast>
|     |   | `-CXXOperatorCallExpr 0x563f2eaa45d0 <col:11, col:14> 'char'
|     |   |   |-ImplicitCastExpr 0x563f2eaa45b8 <col:12, col:14> 'char (*)(int) const' <FunctionToPointerDecay>
|     |   |   | `-DeclRefExpr 0x563f2eaa4570 <col:12, col:14> 'char (int) const' lvalue CXXMethod 0x563f2e7fe570 'operator[]' 'char (int) const'
|     |   |   |-DeclRefExpr 0x563f2eaa4530 <col:11> 'const String' lvalue ParmVar 0x563f2eaa13f8 'x' 'const String &'
|     |   |   `-IntegerLiteral 0x563f2eaa4550 <col:13> 'int' 0
|     |   `-ImplicitCastExpr 0x563f2eaa4638 <col:19> 'int' <IntegralCast>
|     |     `-CharacterLiteral 0x563f2eaa4608 <col:19> 'char' 123
|     |-ReturnStmt 0x563f2eaa4760 <line:545:6, col:13>
|     | `-CXXConstructExpr 0x563f2eaa4730 <col:13> 'String' 'void (const String &)'
|     |   `-DeclRefExpr 0x563f2eaa4710 <col:13> 'const String' lvalue ParmVar 0x563f2eaa13f8 'x' 'const String &'
|     `-IfStmt 0x563f2eaa4a68 <line:546:7, line:549:20> has_else
|       |-ImplicitCastExpr 0x563f2eaa47f8 <line:546:11> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x563f2eaa47e0 <col:11> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x563f2eaa47c0 <col:11> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x563f2eaa4790 <col:11> '<bound member function type>' .operator int (String::*)() const 0x563f2e7e4d38
|       |       `-DeclRefExpr 0x563f2eaa4770 <col:11> 'const String' lvalue ParmVar 0x563f2eaa13f8 'x' 'const String &'
|       |-ReturnStmt 0x563f2eaa4980 <line:547:6, col:29>
|       | `-ExprWithCleanups 0x563f2eaa4968 <col:13, col:29> 'String'
|       |   `-CXXConstructExpr 0x563f2eaa4938 <col:13, col:29> 'String' 'void (String &&)' elidable
|       |     `-MaterializeTemporaryExpr 0x563f2eaa4920 <col:13, col:29> 'String' xvalue
|       |       `-CXXBindTemporaryExpr 0x563f2eaa4900 <col:13, col:29> 'String' (CXXTemporary 0x563f2eaa4900)
|       |         `-CallExpr 0x563f2eaa48b0 <col:13, col:29> 'String'
|       |           |-ImplicitCastExpr 0x563f2eaa4898 <col:13> 'String (*)(const char *, const String &)' <FunctionToPointerDecay>
|       |           | `-DeclRefExpr 0x563f2eaa4810 <col:13> 'String (const char *, const String &)' lvalue CXXMethod 0x563f2eaa0c30 'make_anno' 'String (const char *, const String &)'
|       |           |-ImplicitCastExpr 0x563f2eaa48e0 <col:23> 'const char *' <ArrayToPointerDecay>
|       |           | `-StringLiteral 0x563f2eaa4830 <col:23> 'const char [2]' lvalue "l"
|       |           `-DeclRefExpr 0x563f2eaa4850 <col:28> 'const String' lvalue ParmVar 0x563f2eaa13f8 'x' 'const String &'
|       `-ReturnStmt 0x563f2eaa4a58 <line:549:6, col:20>
|         `-ExprWithCleanups 0x563f2eaa4a40 <col:13, col:20> 'String'
|           `-CXXConstructExpr 0x563f2eaa4a10 <col:13, col:20> 'String' 'void (String &&)' elidable
|             `-MaterializeTemporaryExpr 0x563f2eaa49f8 <col:13, col:20> 'String' xvalue
|               `-CXXBindTemporaryExpr 0x563f2eaa49d8 <col:13, col:20> 'String' (CXXTemporary 0x563f2eaa49d8)
|                 `-CXXTemporaryObjectExpr 0x563f2eaa49a0 <col:13, col:20> 'String' 'void ()'
|-CXXMethodDecl 0x563f2eaa1650 <line:559:5, col:76> col:19 clean_landmark 'String (const String &, bool)' static
| |-ParmVarDecl 0x563f2eaa1540 <col:34, col:48> col:48 landmark 'const String &'
| `-ParmVarDecl 0x563f2eaa15b8 <col:58, col:71> col:63 colon 'bool' cinit
|   `-CXXBoolLiteralExpr 0x563f2eaa2d88 <col:71> 'bool' false
|-CXXRecordDecl 0x563f2eaa1700 <line:563:5, col:12> col:12 referenced struct Conversion
|-TypedefDecl 0x563f2eaa19f8 <line:564:5, col:60> col:22 referenced ConversionFunction 'String (*)(int, __va_list_tag *)'
| `-PointerType 0x563f2eaa1990 'String (*)(int, __va_list_tag *)'
|   `-ParenType 0x563f2eaa1930 'String (int, __va_list_tag *)' sugar
|     `-FunctionProtoType 0x563f2eaa18f0 'String (int, __va_list_tag *)' cdecl
|       |-RecordType 0x563f2e7e15d0 'String'
|       | `-CXXRecord 0x563f2e7e1540 'String'
|       |-BuiltinType 0x563f2e4b1580 'int'
|       `-DecayedType 0x563f2ea9efc0 '__va_list_tag *' sugar
|         |-TypedefType 0x563f2ea9ef90 'va_list' sugar
|         | |-Typedef 0x563f2e6d34a0 'va_list'
|         | `-TypedefType 0x563f2e6d3450 '__gnuc_va_list' sugar
|         |   |-Typedef 0x563f2e60b068 '__gnuc_va_list'
|         |   `-TypedefType 0x563f2e60afd0 '__builtin_va_list' sugar
|         |     |-Typedef 0x563f2e4f2d38 '__builtin_va_list'
|         |     `-ConstantArrayType 0x563f2e4f2ce0 '__va_list_tag [1]' 1 
|         |       `-RecordType 0x563f2e4b22d0 '__va_list_tag'
|         |         `-CXXRecord 0x563f2e4b2238 '__va_list_tag'
|         `-PointerType 0x563f2e6d8d40 '__va_list_tag *'
|           `-RecordType 0x563f2e4b22d0 '__va_list_tag'
|             `-CXXRecord 0x563f2e4b2238 '__va_list_tag'
|-EnumDecl 0x563f2eaa1a50 <line:565:5, line:576:5> line:565:10 ConversionFlags
| |-EnumConstantDecl 0x563f2eaa1b50 <line:566:2, col:16> col:2 cf_zero_pad 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x563f2eaa20b0 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563f2eaa1b30 <col:16> 'int' Int: 1
| |     `-IntegerLiteral 0x563f2eaa1b10 <col:16> 'int' 1
| |-EnumConstantDecl 0x563f2eaa1be0 <line:567:2, col:21> col:2 cf_plus_positive 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x563f2eaa20c8 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563f2eaa1bc0 <col:21> 'int' Int: 2
| |     `-IntegerLiteral 0x563f2eaa1ba0 <col:21> 'int' 2
| |-EnumConstantDecl 0x563f2eaa1c70 <line:568:2, col:22> col:2 cf_space_positive 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x563f2eaa20e0 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563f2eaa1c50 <col:22> 'int' Int: 4
| |     `-IntegerLiteral 0x563f2eaa1c30 <col:22> 'int' 4
| |-EnumConstantDecl 0x563f2eaa1d00 <line:569:2, col:17> col:2 cf_left_just 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x563f2eaa20f8 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563f2eaa1ce0 <col:17> 'int' Int: 8
| |     `-IntegerLiteral 0x563f2eaa1cc0 <col:17> 'int' 8
| |-EnumConstantDecl 0x563f2eaa1d90 <line:570:2, col:22> col:2 cf_alternate_form 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x563f2eaa2110 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563f2eaa1d70 <col:22> 'int' Int: 16
| |     `-IntegerLiteral 0x563f2eaa1d50 <col:22> 'int' 16
| |-EnumConstantDecl 0x563f2eaa1e20 <line:571:2, col:19> col:2 cf_singlequote 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x563f2eaa2128 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563f2eaa1e00 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x563f2eaa1de0 <col:19> 'int' 32
| |-EnumConstantDecl 0x563f2eaa1eb0 <line:572:2, col:17> col:2 cf_uppercase 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x563f2eaa2140 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563f2eaa1e90 <col:17> 'int' Int: 64
| |     `-IntegerLiteral 0x563f2eaa1e70 <col:17> 'int' 64
| |-EnumConstantDecl 0x563f2eaa1f40 <line:573:2, col:14> col:2 cf_signed 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x563f2eaa2158 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563f2eaa1f20 <col:14> 'int' Int: 128
| |     `-IntegerLiteral 0x563f2eaa1f00 <col:14> 'int' 128
| |-EnumConstantDecl 0x563f2eaa1fd0 <line:574:2, col:16> col:2 cf_negative 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x563f2eaa2170 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563f2eaa1fb0 <col:16> 'int' Int: 256
| |     `-IntegerLiteral 0x563f2eaa1f90 <col:16> 'int' 256
| `-EnumConstantDecl 0x563f2eaa2060 <line:575:2, col:12> col:2 cf_utf8 'ErrorHandler::ConversionFlags'
|   `-ImplicitCastExpr 0x563f2eaa2188 <col:12> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x563f2eaa2040 <col:12> 'int' Int: 1024
|       `-IntegerLiteral 0x563f2eaa2020 <col:12> 'int' 1024
|-CXXMethodDecl 0x563f2eaa2398 <line:577:5, col:82> col:24 add_conversion 'ErrorHandler::Conversion *(const String &, ErrorHandler::ConversionFunction)' static
| |-ParmVarDecl 0x563f2eaa21b0 <col:39, col:53> col:53 name 'const String &'
| `-ParmVarDecl 0x563f2eaa2250 <col:59, col:78> col:78 func 'ErrorHandler::ConversionFunction':'String (*)(int, __va_list_tag *)'
|-CXXMethodDecl 0x563f2eaa2520 <line:578:5, col:56> col:16 remove_conversion 'int (ErrorHandler::Conversion *)' static
| `-ParmVarDecl 0x563f2eaa2458 <col:34, col:46> col:46 conversion 'ErrorHandler::Conversion *'
|-AccessSpecDecl 0x563f2eaa25c8 <line:580:3, col:10> col:3 private
|-FieldDecl 0x563f2eaa2608 <line:582:5, col:9> col:9 referenced _nerrors 'int'
|-VarDecl 0x563f2eaa2668 <line:584:5, col:26> col:26 used the_default_handler 'ErrorHandler *' static
|-VarDecl 0x563f2eaa26e0 <line:585:5, col:26> col:26 used the_silent_handler 'ErrorHandler *' static
|-CXXMethodDecl 0x563f2eaa2ae0 <line:587:5, line:590:14> line:587:24 used skip_anno 'const char *(const String &, const char *, const char *, String *, String *, bool)' static
| |-ParmVarDecl 0x563f2eaa2758 <col:34, col:48> col:48 str 'const String &'
| |-ParmVarDecl 0x563f2eaa27d8 <line:588:6, col:18> col:18 begin 'const char *'
| |-ParmVarDecl 0x563f2eaa2858 <col:25, col:37> col:37 end 'const char *'
| |-ParmVarDecl 0x563f2eaa28d0 <line:589:6, col:14> col:14 name_result 'String *'
| |-ParmVarDecl 0x563f2eaa2948 <col:27, col:35> col:35 value_result 'String *'
| `-ParmVarDecl 0x563f2eaa29c0 <line:590:6, col:11> col:11 raw 'bool'
|-CXXMethodDecl 0x563f2eaa2c08 <line:90:7> col:7 implicit operator= 'ErrorHandler &(const ErrorHandler &)' inline default noexcept-unevaluated 0x563f2eaa2c08
| `-ParmVarDecl 0x563f2eaa2d18 <col:7> col:7 'const ErrorHandler &'
`-CXXConstructorDecl 0x563f2eaa4e18 <col:7> col:7 implicit constexpr ErrorHandler 'void (const ErrorHandler &)' inline default noexcept-unevaluated 0x563f2eaa4e18
  `-ParmVarDecl 0x563f2eaa4f28 <col:7> col:7 'const ErrorHandler &'

Layout: <CGRecordLayout
  LLVMType:%class.ErrorHandler = type <{ i32 (...)**, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.ErrorHandler.base = type <{ i32 (...)**, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563f2ea126a0 <../dummy_inc/click/handler.hh:290:5, line:293:5> line:290:5 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x563f2ea127f0 <line:291:2, col:18> col:18 h 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
|-FieldDecl 0x563f2ea12870 <line:292:2, col:22> col:22 referenced r 'ReadHandlerCallback':'String (*)(Element *, void *)'
|-CXXConstructorDecl 0x563f2ea13668 <line:290:5> col:5 implicit constexpr  'void (const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &)' inline default trivial noexcept-unevaluated 0x563f2ea13668
| `-ParmVarDecl 0x563f2ea13778 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &'
|-CXXConstructorDecl 0x563f2ea13818 <col:5> col:5 implicit constexpr  'void (Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&)' inline default trivial noexcept-unevaluated 0x563f2ea13818
| `-ParmVarDecl 0x563f2ea13928 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&'
|-CXXDestructorDecl 0x563f2ea13998 <col:5> col:5 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x563f2ea13998
|-CXXMethodDecl 0x563f2ea14268 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &(const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &)' inline default trivial noexcept-unevaluated 0x563f2ea14268
| `-ParmVarDecl 0x563f2ea14378 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &'
|-CXXMethodDecl 0x563f2ea143e8 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &(Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&)' inline default trivial noexcept-unevaluated 0x563f2ea143e8
| `-ParmVarDecl 0x563f2ea144f8 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&'
`-CXXConstructorDecl 0x563f2e9cd4c0 <col:5> col:5 implicit used  'void () noexcept' inline default trivial
  `-CompoundStmt 0x563f2e9cd5a0 <col:5>

Layout: <CGRecordLayout
  LLVMType:%union.anon = type { i32 (i32, %class.String*, %class.Element*, %class.Handler*, %class.ErrorHandler*)* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563f2ea129a0 <../dummy_inc/click/handler.hh:294:5, line:297:5> line:294:5 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x563f2ea12ac8 <line:295:2, col:18> col:18 h 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
|-FieldDecl 0x563f2ea12b50 <line:296:2, col:23> col:23 referenced w 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
|-CXXConstructorDecl 0x563f2ea13ac8 <line:294:5> col:5 implicit constexpr  'void (const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &)' inline default trivial noexcept-unevaluated 0x563f2ea13ac8
| `-ParmVarDecl 0x563f2ea13bd8 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &'
|-CXXConstructorDecl 0x563f2ea13c78 <col:5> col:5 implicit constexpr  'void (Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&)' inline default trivial noexcept-unevaluated 0x563f2ea13c78
| `-ParmVarDecl 0x563f2ea13d88 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&'
|-CXXDestructorDecl 0x563f2ea13df8 <col:5> col:5 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x563f2ea13df8
|-CXXMethodDecl 0x563f2ea14598 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &(const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &)' inline default trivial noexcept-unevaluated 0x563f2ea14598
| `-ParmVarDecl 0x563f2ea146a8 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &'
|-CXXMethodDecl 0x563f2ea14718 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &(Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&)' inline default trivial noexcept-unevaluated 0x563f2ea14718
| `-ParmVarDecl 0x563f2ea14828 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&'
`-CXXConstructorDecl 0x563f2e9cd600 <col:5> col:5 implicit used  'void () noexcept' inline default trivial
  `-CompoundStmt 0x563f2e9cd6e0 <col:5>

Layout: <CGRecordLayout
  LLVMType:%union.anon.11 = type { i32 (i32, %class.String*, %class.Element*, %class.Handler*, %class.ErrorHandler*)* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563f2ea0e028 prev 0x563f2ea0d4c0 <../dummy_inc/click/handler.hh:19:1, line:313:1> line:19:7 class Handler definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x563f2ea0e120 <col:1, col:7> col:7 implicit referenced class Handler
|-AccessSpecDecl 0x563f2ea0e1b0 <col:17, col:23> col:17 public
|-EnumDecl 0x563f2ea0e1d8 <line:21:5, line:59:5> line:21:10 Flags
| |-EnumConstantDecl 0x563f2ea0e2e0 <line:22:2, col:11> col:2 referenced f_read 'Handler::Flags'
| | `-ImplicitCastExpr 0x563f2ea0f030 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563f2ea0e2c0 <col:11> 'int' Int: 1
| |     `-IntegerLiteral 0x563f2ea0e2a0 <col:11> 'int' 1
| |-EnumConstantDecl 0x563f2ea0e370 <line:23:2, col:12> col:2 referenced f_write 'Handler::Flags'
| | `-ImplicitCastExpr 0x563f2ea0f048 <col:12> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563f2ea0e350 <col:12> 'int' Int: 2
| |     `-IntegerLiteral 0x563f2ea0e330 <col:12> 'int' 2
| |-EnumConstantDecl 0x563f2ea0e400 <line:24:2, col:17> col:2 referenced f_read_param 'Handler::Flags'
| | `-ImplicitCastExpr 0x563f2ea0f060 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563f2ea0e3e0 <col:17> 'int' Int: 4
| |     `-IntegerLiteral 0x563f2ea0e3c0 <col:17> 'int' 4
| |-EnumConstantDecl 0x563f2ea0e490 <line:25:2, col:16> col:2 referenced f_exclusive 'Handler::Flags'
| | `-ImplicitCastExpr 0x563f2ea0f078 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563f2ea0e470 <col:16> 'int' Int: 0
| |     `-IntegerLiteral 0x563f2ea0e450 <col:16> 'int' 0
| |-EnumConstantDecl 0x563f2ea0e520 <line:28:2, col:19> col:2 referenced f_nonexclusive 'Handler::Flags'
| | `-ImplicitCastExpr 0x563f2ea0f090 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563f2ea0e500 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x563f2ea0e4e0 <col:19> 'int' 32
| |-EnumConstantDecl 0x563f2ea0e5b0 <line:31:2, col:10> col:2 referenced f_raw 'Handler::Flags'
| | `-ImplicitCastExpr 0x563f2ea0f0a8 <col:10> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563f2ea0e590 <col:10> 'int' Int: 64
| |     `-IntegerLiteral 0x563f2ea0e570 <col:10> 'int' 64
| |-EnumConstantDecl 0x563f2ea0e640 <line:32:2, col:19> col:2 referenced f_read_private 'Handler::Flags'
| | `-ImplicitCastExpr 0x563f2ea0f0c0 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563f2ea0e620 <col:19> 'int' Int: 128
| |     `-IntegerLiteral 0x563f2ea0e600 <col:19> 'int' 128
| |-EnumConstantDecl 0x563f2ea0e6d0 <line:34:2, col:20> col:2 referenced f_write_private 'Handler::Flags'
| | `-ImplicitCastExpr 0x563f2ea0f0d8 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563f2ea0e6b0 <col:20> 'int' Int: 256
| |     `-IntegerLiteral 0x563f2ea0e690 <col:20> 'int' 256
| |-EnumConstantDecl 0x563f2ea0e760 <line:36:2, col:17> col:2 referenced f_deprecated 'Handler::Flags'
| | `-ImplicitCastExpr 0x563f2ea0f0f0 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563f2ea0e740 <col:17> 'int' Int: 512
| |     `-IntegerLiteral 0x563f2ea0e720 <col:17> 'int' 512
| |-EnumConstantDecl 0x563f2ea0e7f0 <line:38:2, col:15> col:2 referenced f_uncommon 'Handler::Flags'
| | `-ImplicitCastExpr 0x563f2ea0f108 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563f2ea0e7d0 <col:15> 'int' Int: 1024
| |     `-IntegerLiteral 0x563f2ea0e7b0 <col:15> 'int' 1024
| |-EnumConstantDecl 0x563f2ea0e880 <line:40:2, col:11> col:2 referenced f_calm 'Handler::Flags'
| | `-ImplicitCastExpr 0x563f2ea0f120 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563f2ea0e860 <col:11> 'int' Int: 2048
| |     `-IntegerLiteral 0x563f2ea0e840 <col:11> 'int' 2048
| |-EnumConstantDecl 0x563f2ea0e910 <line:41:2, col:16> col:2 referenced f_expensive 'Handler::Flags'
| | `-ImplicitCastExpr 0x563f2ea0f138 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563f2ea0e8f0 <col:16> 'int' Int: 4096
| |     `-IntegerLiteral 0x563f2ea0e8d0 <col:16> 'int' 4096
| |-EnumConstantDecl 0x563f2ea0e9a0 <line:42:2, col:13> col:2 referenced f_button 'Handler::Flags'
| | `-ImplicitCastExpr 0x563f2ea0f150 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563f2ea0e980 <col:13> 'int' Int: 8192
| |     `-IntegerLiteral 0x563f2ea0e960 <col:13> 'int' 8192
| |-EnumConstantDecl 0x563f2ea0ea30 <line:43:2, col:15> col:2 referenced f_checkbox 'Handler::Flags'
| | `-ImplicitCastExpr 0x563f2ea0f168 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563f2ea0ea10 <col:15> 'int' Int: 16384
| |     `-IntegerLiteral 0x563f2ea0e9f0 <col:15> 'int' 16384
| |-EnumConstantDecl 0x563f2ea0eb00 <line:45:2, col:20> col:2 referenced f_driver0 'Handler::Flags'
| | `-ConstantExpr 0x563f2ea0eae0 <col:14, col:20> 'unsigned int' Int: 67108864
| |   `-BinaryOperator 0x563f2ea0eac0 <col:14, col:20> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x563f2ea0ea80 <col:14> 'unsigned int' 1
| |     `-IntegerLiteral 0x563f2ea0eaa0 <col:20> 'int' 26
| |-EnumConstantDecl 0x563f2ea0ebd0 <line:46:9, col:27> col:9 referenced f_driver1 'Handler::Flags'
| | `-ConstantExpr 0x563f2ea0ebb0 <col:21, col:27> 'unsigned int' Int: 134217728
| |   `-BinaryOperator 0x563f2ea0eb90 <col:21, col:27> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x563f2ea0eb50 <col:21> 'unsigned int' 1
| |     `-IntegerLiteral 0x563f2ea0eb70 <col:27> 'int' 27
| |-EnumConstantDecl 0x563f2ea0ec60 <line:48:2, col:17> col:2 referenced f_user_shift 'Handler::Flags'
| | `-ImplicitCastExpr 0x563f2ea0f180 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563f2ea0ec40 <col:17> 'int' Int: 28
| |     `-IntegerLiteral 0x563f2ea0ec20 <col:17> 'int' 28
| |-EnumConstantDecl 0x563f2ea0ed30 <line:49:2, col:18> col:2 referenced f_user0 'Handler::Flags'
| | `-ConstantExpr 0x563f2ea0ed10 <col:12, col:18> 'unsigned int' Int: 268435456
| |   `-BinaryOperator 0x563f2ea0ecf0 <col:12, col:18> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x563f2ea0ecb0 <col:12> 'unsigned int' 1
| |     `-DeclRefExpr 0x563f2ea0ecd0 <col:18> 'int' EnumConstant 0x563f2ea0ec60 'f_user_shift' 'Handler::Flags'
| |-EnumConstantDecl 0x563f2ea0edc0 <line:54:2, col:25> col:2 referenced f_read_comprehensive 'Handler::Flags'
| | `-ImplicitCastExpr 0x563f2ea0f198 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563f2ea0eda0 <col:25> 'int' Int: 8
| |     `-IntegerLiteral 0x563f2ea0ed80 <col:25> 'int' 8
| |-EnumConstantDecl 0x563f2ea0ee50 <line:55:2, col:26> col:2 referenced f_write_comprehensive 'Handler::Flags'
| | `-ImplicitCastExpr 0x563f2ea0f1b0 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563f2ea0ee30 <col:26> 'int' Int: 16
| |     `-IntegerLiteral 0x563f2ea0ee10 <col:26> 'int' 16
| `-EnumConstantDecl 0x563f2ea0efe0 <line:56:2, col:71> col:2 referenced f_special 'Handler::Flags'
|   `-ImplicitCastExpr 0x563f2ea0f1c8 <col:14, col:71> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x563f2ea0efc0 <col:14, col:71> 'int' Int: 31
|       `-BinaryOperator 0x563f2ea0efa0 <col:14, col:71> 'int' '|'
|         |-BinaryOperator 0x563f2ea0ef60 <col:14, col:48> 'int' '|'
|         | |-BinaryOperator 0x563f2ea0ef20 <col:14, col:33> 'int' '|'
|         | | |-BinaryOperator 0x563f2ea0eee0 <col:14, col:23> 'int' '|'
|         | | | |-DeclRefExpr 0x563f2ea0eea0 <col:14> 'int' EnumConstant 0x563f2ea0e2e0 'f_read' 'Handler::Flags'
|         | | | `-DeclRefExpr 0x563f2ea0eec0 <col:23> 'int' EnumConstant 0x563f2ea0e370 'f_write' 'Handler::Flags'
|         | | `-DeclRefExpr 0x563f2ea0ef00 <col:33> 'int' EnumConstant 0x563f2ea0e400 'f_read_param' 'Handler::Flags'
|         | `-DeclRefExpr 0x563f2ea0ef40 <col:48> 'int' EnumConstant 0x563f2ea0edc0 'f_read_comprehensive' 'Handler::Flags'
|         `-DeclRefExpr 0x563f2ea0ef80 <col:71> 'int' EnumConstant 0x563f2ea0ee50 'f_write_comprehensive' 'Handler::Flags'
|-CXXMethodDecl 0x563f2ea0f228 <line:62:5, line:64:5> line:62:26 name 'const String &() const' inline
| `-CompoundStmt 0x563f2ea14c48 <col:39, line:64:5>
|   `-ReturnStmt 0x563f2ea14c38 <line:63:2, col:9>
|     `-MemberExpr 0x563f2ea14c08 <col:9> 'const String' lvalue ->_name 0x563f2ea12650
|       `-CXXThisExpr 0x563f2ea14bf8 <col:9> 'const Handler *' implicit this
|-CXXMethodDecl 0x563f2ea0f2e8 <line:69:5, line:71:5> line:69:21 flags 'uint32_t () const' inline
| `-CompoundStmt 0x563f2ea14cc8 <col:35, line:71:5>
|   `-ReturnStmt 0x563f2ea14cb8 <line:70:2, col:9>
|     `-ImplicitCastExpr 0x563f2ea14ca0 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x563f2ea14c70 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x563f2ea12d60
|         `-CXXThisExpr 0x563f2ea14c60 <col:9> 'const Handler *' implicit this
|-CXXMethodDecl 0x563f2ea0f438 <line:75:5, line:77:5> line:75:18 user_data 'void *(int) const' inline
| |-ParmVarDecl 0x563f2ea0f3a0 <col:28, col:32> col:32 used op 'int'
| `-CompoundStmt 0x563f2ea14e48 <col:42, line:77:5>
|   `-ReturnStmt 0x563f2ea14e38 <line:76:2, col:44>
|     `-ImplicitCastExpr 0x563f2ea14e20 <col:9, col:44> 'void *' <LValueToRValue>
|       `-ConditionalOperator 0x563f2ea14df0 <col:9, col:44> 'void *const' lvalue
|         |-BinaryOperator 0x563f2ea14d50 <col:9, col:15> 'bool' '=='
|         | |-ImplicitCastExpr 0x563f2ea14d20 <col:9> 'int' <LValueToRValue>
|         | | `-DeclRefExpr 0x563f2ea14ce0 <col:9> 'int' lvalue ParmVar 0x563f2ea0f3a0 'op' 'int'
|         | `-ImplicitCastExpr 0x563f2ea14d38 <col:15> 'int' <IntegralCast>
|         |   `-DeclRefExpr 0x563f2ea14d00 <col:15> 'Handler::Flags' EnumConstant 0x563f2ea0e370 'f_write' 'Handler::Flags'
|         |-MemberExpr 0x563f2ea14d80 <col:25> 'void *const' lvalue ->_write_user_data 0x563f2ea12d00
|         | `-CXXThisExpr 0x563f2ea14d70 <col:25> 'const Handler *' implicit this
|         `-MemberExpr 0x563f2ea14dc0 <col:44> 'void *const' lvalue ->_read_user_data 0x563f2ea12c98
|           `-CXXThisExpr 0x563f2ea14db0 <col:44> 'const Handler *' implicit this
|-CXXMethodDecl 0x563f2ea0f508 <line:80:5, line:82:5> line:80:18 read_user_data 'void *() const' inline
| `-CompoundStmt 0x563f2ea14ec8 <col:41, line:82:5>
|   `-ReturnStmt 0x563f2ea14eb8 <line:81:2, col:9>
|     `-ImplicitCastExpr 0x563f2ea14ea0 <col:9> 'void *' <LValueToRValue>
|       `-MemberExpr 0x563f2ea14e70 <col:9> 'void *const' lvalue ->_read_user_data 0x563f2ea12c98
|         `-CXXThisExpr 0x563f2ea14e60 <col:9> 'const Handler *' implicit this
|-CXXMethodDecl 0x563f2ea0f5d0 <line:85:5, line:87:5> line:85:18 write_user_data 'void *() const' inline
| `-CompoundStmt 0x563f2ea14f48 <col:42, line:87:5>
|   `-ReturnStmt 0x563f2ea14f38 <line:86:2, col:9>
|     `-ImplicitCastExpr 0x563f2ea14f20 <col:9> 'void *' <LValueToRValue>
|       `-MemberExpr 0x563f2ea14ef0 <col:9> 'void *const' lvalue ->_write_user_data 0x563f2ea12d00
|         `-CXXThisExpr 0x563f2ea14ee0 <col:9> 'const Handler *' implicit this
|-CXXMethodDecl 0x563f2ea0f698 <line:90:5, col:63> col:18 user_data1 'void *() const' inline
| `-DeprecatedAttr 0x563f2ea0f738 <col:52> "" ""
|-CXXMethodDecl 0x563f2ea0f7d0 <line:91:5, col:63> col:18 user_data2 'void *() const' inline
| `-DeprecatedAttr 0x563f2ea0f870 <col:52> "" ""
|-CXXMethodDecl 0x563f2ea0f900 <line:96:5, line:98:5> line:96:17 readable 'bool () const' inline
| `-CompoundStmt 0x563f2ea15038 <col:34, line:98:5>
|   `-ReturnStmt 0x563f2ea15028 <line:97:2, col:18>
|     `-ImplicitCastExpr 0x563f2ea15010 <col:9, col:18> 'bool' <IntegralToBoolean>
|       `-BinaryOperator 0x563f2ea14ff0 <col:9, col:18> 'unsigned int' '&'
|         |-ImplicitCastExpr 0x563f2ea14fc0 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-MemberExpr 0x563f2ea14f70 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x563f2ea12d60
|         |   `-CXXThisExpr 0x563f2ea14f60 <col:9> 'const Handler *' implicit this
|         `-ImplicitCastExpr 0x563f2ea14fd8 <col:18> 'unsigned int' <IntegralCast>
|           `-DeclRefExpr 0x563f2ea14fa0 <col:18> 'Handler::Flags' EnumConstant 0x563f2ea0e2e0 'f_read' 'Handler::Flags'
|-CXXMethodDecl 0x563f2ea0f9c0 <line:102:5, line:104:5> line:102:17 read_param 'bool () const' inline
| `-CompoundStmt 0x563f2ea15128 <col:36, line:104:5>
|   `-ReturnStmt 0x563f2ea15118 <line:103:2, col:18>
|     `-ImplicitCastExpr 0x563f2ea15100 <col:9, col:18> 'bool' <IntegralToBoolean>
|       `-BinaryOperator 0x563f2ea150e0 <col:9, col:18> 'unsigned int' '&'
|         |-ImplicitCastExpr 0x563f2ea150b0 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-MemberExpr 0x563f2ea15060 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x563f2ea12d60
|         |   `-CXXThisExpr 0x563f2ea15050 <col:9> 'const Handler *' implicit this
|         `-ImplicitCastExpr 0x563f2ea150c8 <col:18> 'unsigned int' <IntegralCast>
|           `-DeclRefExpr 0x563f2ea15090 <col:18> 'Handler::Flags' EnumConstant 0x563f2ea0e400 'f_read_param' 'Handler::Flags'
|-CXXMethodDecl 0x563f2ea0fa80 <line:111:5, line:113:5> line:111:17 used read_visible 'bool () const' inline
| `-CompoundStmt 0x563f2ea15308 <col:38, line:113:5>
|   `-ReturnStmt 0x563f2ea152f8 <line:112:2, col:49>
|     `-BinaryOperator 0x563f2ea152d8 <col:9, col:49> 'bool' '=='
|       |-ParenExpr 0x563f2ea15280 <col:9, col:44> 'unsigned int'
|       | `-BinaryOperator 0x563f2ea15260 <col:10, col:43> 'unsigned int' '&'
|       |   |-ImplicitCastExpr 0x563f2ea15230 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-MemberExpr 0x563f2ea15150 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x563f2ea12d60
|       |   |   `-CXXThisExpr 0x563f2ea15140 <col:10> 'const Handler *' implicit this
|       |   `-ImplicitCastExpr 0x563f2ea15248 <col:19, col:43> 'unsigned int' <IntegralCast>
|       |     `-ParenExpr 0x563f2ea15210 <col:19, col:43> 'int'
|       |       `-BinaryOperator 0x563f2ea151f0 <col:20, col:29> 'int' '|'
|       |         |-ImplicitCastExpr 0x563f2ea151c0 <col:20> 'int' <IntegralCast>
|       |         | `-DeclRefExpr 0x563f2ea15180 <col:20> 'Handler::Flags' EnumConstant 0x563f2ea0e2e0 'f_read' 'Handler::Flags'
|       |         `-ImplicitCastExpr 0x563f2ea151d8 <col:29> 'int' <IntegralCast>
|       |           `-DeclRefExpr 0x563f2ea151a0 <col:29> 'Handler::Flags' EnumConstant 0x563f2ea0e640 'f_read_private' 'Handler::Flags'
|       `-ImplicitCastExpr 0x563f2ea152c0 <col:49> 'unsigned int' <IntegralCast>
|         `-DeclRefExpr 0x563f2ea152a0 <col:49> 'Handler::Flags' EnumConstant 0x563f2ea0e2e0 'f_read' 'Handler::Flags'
|-CXXMethodDecl 0x563f2ea0fb40 <line:116:5, line:118:5> line:116:17 writable 'bool () const' inline
| `-CompoundStmt 0x563f2ea153f8 <col:34, line:118:5>
|   `-ReturnStmt 0x563f2ea153e8 <line:117:2, col:18>
|     `-ImplicitCastExpr 0x563f2ea153d0 <col:9, col:18> 'bool' <IntegralToBoolean>
|       `-BinaryOperator 0x563f2ea153b0 <col:9, col:18> 'unsigned int' '&'
|         |-ImplicitCastExpr 0x563f2ea15380 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-MemberExpr 0x563f2ea15330 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x563f2ea12d60
|         |   `-CXXThisExpr 0x563f2ea15320 <col:9> 'const Handler *' implicit this
|         `-ImplicitCastExpr 0x563f2ea15398 <col:18> 'unsigned int' <IntegralCast>
|           `-DeclRefExpr 0x563f2ea15360 <col:18> 'Handler::Flags' EnumConstant 0x563f2ea0e370 'f_write' 'Handler::Flags'
|-CXXMethodDecl 0x563f2ea0fc00 <line:125:5, line:127:5> line:125:17 used write_visible 'bool () const' inline
| `-CompoundStmt 0x563f2ea155d8 <col:39, line:127:5>
|   `-ReturnStmt 0x563f2ea155c8 <line:126:2, col:51>
|     `-BinaryOperator 0x563f2ea155a8 <col:9, col:51> 'bool' '=='
|       |-ParenExpr 0x563f2ea15550 <col:9, col:46> 'unsigned int'
|       | `-BinaryOperator 0x563f2ea15530 <col:10, col:45> 'unsigned int' '&'
|       |   |-ImplicitCastExpr 0x563f2ea15500 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-MemberExpr 0x563f2ea15420 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x563f2ea12d60
|       |   |   `-CXXThisExpr 0x563f2ea15410 <col:10> 'const Handler *' implicit this
|       |   `-ImplicitCastExpr 0x563f2ea15518 <col:19, col:45> 'unsigned int' <IntegralCast>
|       |     `-ParenExpr 0x563f2ea154e0 <col:19, col:45> 'int'
|       |       `-BinaryOperator 0x563f2ea154c0 <col:20, col:30> 'int' '|'
|       |         |-ImplicitCastExpr 0x563f2ea15490 <col:20> 'int' <IntegralCast>
|       |         | `-DeclRefExpr 0x563f2ea15450 <col:20> 'Handler::Flags' EnumConstant 0x563f2ea0e370 'f_write' 'Handler::Flags'
|       |         `-ImplicitCastExpr 0x563f2ea154a8 <col:30> 'int' <IntegralCast>
|       |           `-DeclRefExpr 0x563f2ea15470 <col:30> 'Handler::Flags' EnumConstant 0x563f2ea0e6d0 'f_write_private' 'Handler::Flags'
|       `-ImplicitCastExpr 0x563f2ea15590 <col:51> 'unsigned int' <IntegralCast>
|         `-DeclRefExpr 0x563f2ea15570 <col:51> 'Handler::Flags' EnumConstant 0x563f2ea0e370 'f_write' 'Handler::Flags'
|-CXXMethodDecl 0x563f2ea0fcc0 <line:130:5, line:132:5> line:130:17 visible 'bool () const' inline
| `-CompoundStmt 0x563f2ea156e0 <col:33, line:132:5>
|   `-ReturnStmt 0x563f2ea156d0 <line:131:2, col:41>
|     `-BinaryOperator 0x563f2ea156b0 <col:9, col:41> 'bool' '||'
|       |-CXXMemberCallExpr 0x563f2ea15630 <col:9, col:22> 'bool'
|       | `-MemberExpr 0x563f2ea15600 <col:9> '<bound member function type>' ->read_visible 0x563f2ea0fa80
|       |   `-CXXThisExpr 0x563f2ea155f0 <col:9> 'const Handler *' implicit this
|       `-CXXMemberCallExpr 0x563f2ea15690 <col:27, col:41> 'bool'
|         `-MemberExpr 0x563f2ea15660 <col:27> '<bound member function type>' ->write_visible 0x563f2ea0fc00
|           `-CXXThisExpr 0x563f2ea15650 <col:27> 'const Handler *' implicit this
|-CXXMethodDecl 0x563f2ea0fd80 <line:136:5, line:138:5> line:136:17 allow_concurrent_handlers 'bool () const' inline
| `-CompoundStmt 0x563f2ea15818 <col:51, line:138:5>
|   `-ReturnStmt 0x563f2ea15808 <line:137:9, col:40>
|     `-ImplicitCastExpr 0x563f2ea157f0 <col:16, col:40> 'bool' <IntegralToBoolean>
|       `-ParenExpr 0x563f2ea157d0 <col:16, col:40> 'unsigned int'
|         `-BinaryOperator 0x563f2ea15788 <col:17, col:26> 'unsigned int' '&'
|           |-ImplicitCastExpr 0x563f2ea15758 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|           | `-MemberExpr 0x563f2ea15708 <col:17> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x563f2ea12d60
|           |   `-CXXThisExpr 0x563f2ea156f8 <col:17> 'const Handler *' implicit this
|           `-ImplicitCastExpr 0x563f2ea15770 <col:26> 'unsigned int' <IntegralCast>
|             `-DeclRefExpr 0x563f2ea15738 <col:26> 'Handler::Flags' EnumConstant 0x563f2ea0e520 'f_nonexclusive' 'Handler::Flags'
|-CXXMethodDecl 0x563f2ea0fe40 <line:142:5, line:144:5> line:142:17 allow_concurrent_threads 'bool () const' inline
| `-CompoundStmt 0x563f2ea15928 <col:50, line:144:5>
|   `-ReturnStmt 0x563f2ea15918 <line:143:9, col:40>
|     `-ImplicitCastExpr 0x563f2ea15900 <col:16, col:40> 'bool' <IntegralToBoolean>
|       `-ParenExpr 0x563f2ea158e0 <col:16, col:40> 'unsigned int'
|         `-BinaryOperator 0x563f2ea158c0 <col:17, col:26> 'unsigned int' '&'
|           |-ImplicitCastExpr 0x563f2ea15890 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|           | `-MemberExpr 0x563f2ea15840 <col:17> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x563f2ea12d60
|           |   `-CXXThisExpr 0x563f2ea15830 <col:17> 'const Handler *' implicit this
|           `-ImplicitCastExpr 0x563f2ea158a8 <col:26> 'unsigned int' <IntegralCast>
|             `-DeclRefExpr 0x563f2ea15870 <col:26> 'Handler::Flags' EnumConstant 0x563f2ea0e520 'f_nonexclusive' 'Handler::Flags'
|-CXXMethodDecl 0x563f2ea0ff00 <line:164:5, line:166:5> line:164:17 raw 'bool () const' inline
| `-CompoundStmt 0x563f2ea15a18 <col:29, line:166:5>
|   `-ReturnStmt 0x563f2ea15a08 <line:165:2, col:18>
|     `-ImplicitCastExpr 0x563f2ea159f0 <col:9, col:18> 'bool' <IntegralToBoolean>
|       `-BinaryOperator 0x563f2ea159d0 <col:9, col:18> 'unsigned int' '&'
|         |-ImplicitCastExpr 0x563f2ea159a0 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-MemberExpr 0x563f2ea15950 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x563f2ea12d60
|         |   `-CXXThisExpr 0x563f2ea15940 <col:9> 'const Handler *' implicit this
|         `-ImplicitCastExpr 0x563f2ea159b8 <col:18> 'unsigned int' <IntegralCast>
|           `-DeclRefExpr 0x563f2ea15980 <col:18> 'Handler::Flags' EnumConstant 0x563f2ea0e5b0 'f_raw' 'Handler::Flags'
|-CXXMethodDecl 0x563f2ea10188 <line:177:5, col:75> col:12 used call_read 'String (Element *, const String &, ErrorHandler *) const'
| |-ParmVarDecl 0x563f2ea0ffb0 <col:22, col:31> col:31 e 'Element *'
| |-ParmVarDecl 0x563f2ea10028 <col:34, col:48> col:48 param 'const String &'
| `-ParmVarDecl 0x563f2ea100a0 <col:55, col:69> col:69 errh 'ErrorHandler *'
|-CXXMethodDecl 0x563f2ea10398 <line:186:5, line:188:5> line:186:19 call_read 'String (Element *, ErrorHandler *) const' inline
| |-ParmVarDecl 0x563f2ea10250 <col:29, col:38> col:38 used e 'Element *'
| |-ParmVarDecl 0x563f2ea102c8 <col:41, col:62> col:55 used errh 'ErrorHandler *' cinit
| | `-ImplicitCastExpr 0x563f2ea14b30 <col:62> 'ErrorHandler *' <NullToPointer>
| |   `-IntegerLiteral 0x563f2ea14b10 <col:62> 'int' 0
| `-CompoundStmt 0x563f2ea15cb8 <col:71, line:188:5>
|   `-ReturnStmt 0x563f2ea15ca8 <line:187:2, col:36>
|     `-ExprWithCleanups 0x563f2ea15c90 <col:9, col:36> 'String'
|       `-CXXConstructExpr 0x563f2ea15c60 <col:9, col:36> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x563f2ea15c48 <col:9, col:36> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x563f2ea15c28 <col:9, col:36> 'String' (CXXTemporary 0x563f2ea15c28)
|             `-CXXMemberCallExpr 0x563f2ea15b88 <col:9, col:36> 'String'
|               |-MemberExpr 0x563f2ea15b58 <col:9> '<bound member function type>' ->call_read 0x563f2ea10188
|               | `-CXXThisExpr 0x563f2ea15b48 <col:9> 'const Handler *' implicit this
|               |-ImplicitCastExpr 0x563f2ea15bc0 <col:19> 'Element *' <LValueToRValue>
|               | `-DeclRefExpr 0x563f2ea15aa0 <col:19> 'Element *' lvalue ParmVar 0x563f2ea10250 'e' 'Element *'
|               |-MaterializeTemporaryExpr 0x563f2ea15bf0 <col:22, col:29> 'const String' lvalue
|               | `-ImplicitCastExpr 0x563f2ea15bd8 <col:22, col:29> 'const String' <NoOp>
|               |   `-CXXBindTemporaryExpr 0x563f2ea15b08 <col:22, col:29> 'String' (CXXTemporary 0x563f2ea15b08)
|               |     `-CXXTemporaryObjectExpr 0x563f2ea15ad0 <col:22, col:29> 'String' 'void ()'
|               `-ImplicitCastExpr 0x563f2ea15c08 <col:32> 'ErrorHandler *' <LValueToRValue>
|                 `-DeclRefExpr 0x563f2ea15b28 <col:32> 'ErrorHandler *' lvalue ParmVar 0x563f2ea102c8 'errh' 'ErrorHandler *'
|-CXXMethodDecl 0x563f2ea10630 <line:198:5, col:73> col:9 used call_write 'int (const String &, Element *, ErrorHandler *) const'
| |-ParmVarDecl 0x563f2ea10458 <col:20, col:34> col:34 value 'const String &'
| |-ParmVarDecl 0x563f2ea104d0 <col:41, col:50> col:50 e 'Element *'
| `-ParmVarDecl 0x563f2ea10548 <col:53, col:67> col:67 errh 'ErrorHandler *'
|-CXXMethodDecl 0x563f2ea107b8 <line:207:5, col:37> col:12 unparse_name 'String (Element *) const'
| `-ParmVarDecl 0x563f2ea106f8 <col:25, col:34> col:34 e 'Element *'
|-CXXMethodDecl 0x563f2ea109e8 <line:216:5, col:63> col:19 unparse_name 'String (Element *, const String &)' static
| |-ParmVarDecl 0x563f2ea10870 <col:32, col:41> col:41 e 'Element *'
| `-ParmVarDecl 0x563f2ea108e8 <col:44, col:58> col:58 hname 'const String &'
|-CXXMethodDecl 0x563f2ea10ae8 <line:223:5, line:225:5> line:223:34 used blank_handler 'const Handler *()' static inline
| `-CompoundStmt 0x563f2ea15d18 <col:50, line:225:5>
|   `-ReturnStmt 0x563f2ea15d08 <line:224:2, col:9>
|     `-ImplicitCastExpr 0x563f2ea15cf0 <col:9> 'const Handler *' <LValueToRValue>
|       `-DeclRefExpr 0x563f2ea15cd0 <col:9> 'const Handler *' lvalue Var 0x563f2ea12e90 'the_blank_handler' 'const Handler *'
|-EnumDecl 0x563f2ea10b88 <line:229:5, line:251:5> line:229:5
| |-EnumConstantDecl 0x563f2ea10c90 <line:230:2, col:11> col:2 h_read 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x563f2ea11830 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563f2ea10c70 <col:11> 'Handler::Flags' Int: 1
| |     `-DeclRefExpr 0x563f2ea10c50 <col:11> 'Handler::Flags' EnumConstant 0x563f2ea0e2e0 'f_read' 'Handler::Flags'
| |-EnumConstantDecl 0x563f2ea10d20 <line:231:2, col:12> col:2 h_write 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x563f2ea11848 <col:12> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563f2ea10d00 <col:12> 'Handler::Flags' Int: 2
| |     `-DeclRefExpr 0x563f2ea10ce0 <col:12> 'Handler::Flags' EnumConstant 0x563f2ea0e370 'f_write' 'Handler::Flags'
| |-EnumConstantDecl 0x563f2ea10db0 <line:232:2, col:17> col:2 h_read_param 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x563f2ea11860 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563f2ea10d90 <col:17> 'Handler::Flags' Int: 4
| |     `-DeclRefExpr 0x563f2ea10d70 <col:17> 'Handler::Flags' EnumConstant 0x563f2ea0e400 'f_read_param' 'Handler::Flags'
| |-EnumConstantDecl 0x563f2ea10e40 <line:233:2, col:16> col:2 h_exclusive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x563f2ea11878 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563f2ea10e20 <col:16> 'Handler::Flags' Int: 0
| |     `-DeclRefExpr 0x563f2ea10e00 <col:16> 'Handler::Flags' EnumConstant 0x563f2ea0e490 'f_exclusive' 'Handler::Flags'
| |-EnumConstantDecl 0x563f2ea10ed0 <line:234:2, col:19> col:2 h_nonexclusive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x563f2ea11890 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563f2ea10eb0 <col:19> 'Handler::Flags' Int: 32
| |     `-DeclRefExpr 0x563f2ea10e90 <col:19> 'Handler::Flags' EnumConstant 0x563f2ea0e520 'f_nonexclusive' 'Handler::Flags'
| |-EnumConstantDecl 0x563f2ea10f60 <line:235:2, col:10> col:2 h_raw 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x563f2ea118a8 <col:10> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563f2ea10f40 <col:10> 'Handler::Flags' Int: 64
| |     `-DeclRefExpr 0x563f2ea10f20 <col:10> 'Handler::Flags' EnumConstant 0x563f2ea0e5b0 'f_raw' 'Handler::Flags'
| |-EnumConstantDecl 0x563f2ea10ff0 <line:236:2, col:19> col:2 h_read_private 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x563f2ea118c0 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563f2ea10fd0 <col:19> 'Handler::Flags' Int: 128
| |     `-DeclRefExpr 0x563f2ea10fb0 <col:19> 'Handler::Flags' EnumConstant 0x563f2ea0e640 'f_read_private' 'Handler::Flags'
| |-EnumConstantDecl 0x563f2ea11080 <line:237:2, col:20> col:2 h_write_private 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x563f2ea118d8 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563f2ea11060 <col:20> 'Handler::Flags' Int: 256
| |     `-DeclRefExpr 0x563f2ea11040 <col:20> 'Handler::Flags' EnumConstant 0x563f2ea0e6d0 'f_write_private' 'Handler::Flags'
| |-EnumConstantDecl 0x563f2ea11110 <line:238:2, col:17> col:2 h_deprecated 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x563f2ea118f0 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563f2ea110f0 <col:17> 'Handler::Flags' Int: 512
| |     `-DeclRefExpr 0x563f2ea110d0 <col:17> 'Handler::Flags' EnumConstant 0x563f2ea0e760 'f_deprecated' 'Handler::Flags'
| |-EnumConstantDecl 0x563f2ea111a0 <line:239:2, col:15> col:2 h_uncommon 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x563f2ea11908 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563f2ea11180 <col:15> 'Handler::Flags' Int: 1024
| |     `-DeclRefExpr 0x563f2ea11160 <col:15> 'Handler::Flags' EnumConstant 0x563f2ea0e7f0 'f_uncommon' 'Handler::Flags'
| |-EnumConstantDecl 0x563f2ea11230 <line:240:2, col:11> col:2 h_calm 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x563f2ea11920 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563f2ea11210 <col:11> 'Handler::Flags' Int: 2048
| |     `-DeclRefExpr 0x563f2ea111f0 <col:11> 'Handler::Flags' EnumConstant 0x563f2ea0e880 'f_calm' 'Handler::Flags'
| |-EnumConstantDecl 0x563f2ea112c0 <line:241:2, col:16> col:2 h_expensive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x563f2ea11938 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563f2ea112a0 <col:16> 'Handler::Flags' Int: 4096
| |     `-DeclRefExpr 0x563f2ea11280 <col:16> 'Handler::Flags' EnumConstant 0x563f2ea0e910 'f_expensive' 'Handler::Flags'
| |-EnumConstantDecl 0x563f2ea11350 <line:242:2, col:13> col:2 h_button 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x563f2ea11950 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563f2ea11330 <col:13> 'Handler::Flags' Int: 8192
| |     `-DeclRefExpr 0x563f2ea11310 <col:13> 'Handler::Flags' EnumConstant 0x563f2ea0e9a0 'f_button' 'Handler::Flags'
| |-EnumConstantDecl 0x563f2ea113e0 <line:243:2, col:15> col:2 h_checkbox 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x563f2ea11968 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563f2ea113c0 <col:15> 'Handler::Flags' Int: 16384
| |     `-DeclRefExpr 0x563f2ea113a0 <col:15> 'Handler::Flags' EnumConstant 0x563f2ea0ea30 'f_checkbox' 'Handler::Flags'
| |-EnumConstantDecl 0x563f2ea11470 <line:244:2, col:20> col:2 h_driver_flag_0 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x563f2ea11980 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563f2ea11450 <col:20> 'Handler::Flags' Int: 67108864
| |     `-DeclRefExpr 0x563f2ea11430 <col:20> 'Handler::Flags' EnumConstant 0x563f2ea0eb00 'f_driver0' 'Handler::Flags'
| |-EnumConstantDecl 0x563f2ea11500 <line:245:9, col:27> col:9 h_driver_flag_1 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x563f2ea11998 <col:27> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563f2ea114e0 <col:27> 'Handler::Flags' Int: 134217728
| |     `-DeclRefExpr 0x563f2ea114c0 <col:27> 'Handler::Flags' EnumConstant 0x563f2ea0ebd0 'f_driver1' 'Handler::Flags'
| |-EnumConstantDecl 0x563f2ea11590 <line:246:2, col:22> col:2 h_user_flag_shift 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x563f2ea119b0 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563f2ea11570 <col:22> 'Handler::Flags' Int: 28
| |     `-DeclRefExpr 0x563f2ea11550 <col:22> 'Handler::Flags' EnumConstant 0x563f2ea0ec60 'f_user_shift' 'Handler::Flags'
| |-EnumConstantDecl 0x563f2ea11620 <line:247:2, col:18> col:2 h_user_flag_0 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x563f2ea119c8 <col:18> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563f2ea11600 <col:18> 'Handler::Flags' Int: 268435456
| |     `-DeclRefExpr 0x563f2ea115e0 <col:18> 'Handler::Flags' EnumConstant 0x563f2ea0ed30 'f_user0' 'Handler::Flags'
| |-EnumConstantDecl 0x563f2ea116b0 <line:248:2, col:25> col:2 h_read_comprehensive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x563f2ea119e0 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563f2ea11690 <col:25> 'Handler::Flags' Int: 8
| |     `-DeclRefExpr 0x563f2ea11670 <col:25> 'Handler::Flags' EnumConstant 0x563f2ea0edc0 'f_read_comprehensive' 'Handler::Flags'
| |-EnumConstantDecl 0x563f2ea11740 <line:249:2, col:26> col:2 h_write_comprehensive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x563f2ea119f8 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563f2ea11720 <col:26> 'Handler::Flags' Int: 16
| |     `-DeclRefExpr 0x563f2ea11700 <col:26> 'Handler::Flags' EnumConstant 0x563f2ea0ee50 'f_write_comprehensive' 'Handler::Flags'
| `-EnumConstantDecl 0x563f2ea117e0 <line:250:2, col:20> col:2 h_special_flags 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
|   `-ImplicitCastExpr 0x563f2ea11a10 <col:20> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x563f2ea117c0 <col:20> 'Handler::Flags' Int: 31
|       `-DeclRefExpr 0x563f2ea11790 <col:20> 'Handler::Flags' EnumConstant 0x563f2ea0efe0 'f_special' 'Handler::Flags'
|-EnumDecl 0x563f2ea11a28 <line:252:5, line:267:5> line:252:10 DeprecatedFlags
| |-EnumConstantDecl 0x563f2ea11b30 <line:253:2, col:12> col:2 OP_READ 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x563f2ea12090 <col:12> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563f2ea11b10 <col:12> 'Handler::Flags' Int: 1
| |     `-DeclRefExpr 0x563f2ea11af0 <col:12> 'Handler::Flags' EnumConstant 0x563f2ea0e2e0 'f_read' 'Handler::Flags'
| |-EnumConstantDecl 0x563f2ea11bc0 <line:254:2, col:13> col:2 OP_WRITE 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x563f2ea120a8 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563f2ea11ba0 <col:13> 'Handler::Flags' Int: 2
| |     `-DeclRefExpr 0x563f2ea11b80 <col:13> 'Handler::Flags' EnumConstant 0x563f2ea0e370 'f_write' 'Handler::Flags'
| |-EnumConstantDecl 0x563f2ea11c50 <line:255:2, col:15> col:2 READ_PARAM 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x563f2ea120c0 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563f2ea11c30 <col:15> 'Handler::Flags' Int: 4
| |     `-DeclRefExpr 0x563f2ea11c10 <col:15> 'Handler::Flags' EnumConstant 0x563f2ea0e400 'f_read_param' 'Handler::Flags'
| |-EnumConstantDecl 0x563f2ea11ce0 <line:256:2, col:8> col:2 RAW 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x563f2ea120d8 <col:8> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563f2ea11cc0 <col:8> 'Handler::Flags' Int: 64
| |     `-DeclRefExpr 0x563f2ea11ca0 <col:8> 'Handler::Flags' EnumConstant 0x563f2ea0e5b0 'f_raw' 'Handler::Flags'
| |-EnumConstantDecl 0x563f2ea11d70 <line:261:2, col:9> col:2 CALM 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x563f2ea120f0 <col:9> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563f2ea11d50 <col:9> 'Handler::Flags' Int: 2048
| |     `-DeclRefExpr 0x563f2ea11d30 <col:9> 'Handler::Flags' EnumConstant 0x563f2ea0e880 'f_calm' 'Handler::Flags'
| |-EnumConstantDecl 0x563f2ea11e00 <line:262:2, col:14> col:2 EXPENSIVE 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x563f2ea12108 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563f2ea11de0 <col:14> 'Handler::Flags' Int: 4096
| |     `-DeclRefExpr 0x563f2ea11dc0 <col:14> 'Handler::Flags' EnumConstant 0x563f2ea0e910 'f_expensive' 'Handler::Flags'
| |-EnumConstantDecl 0x563f2ea11e90 <line:263:2, col:11> col:2 BUTTON 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x563f2ea12120 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563f2ea11e70 <col:11> 'Handler::Flags' Int: 8192
| |     `-DeclRefExpr 0x563f2ea11e50 <col:11> 'Handler::Flags' EnumConstant 0x563f2ea0e9a0 'f_button' 'Handler::Flags'
| |-EnumConstantDecl 0x563f2ea11f20 <line:264:2, col:13> col:2 CHECKBOX 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x563f2ea12138 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563f2ea11f00 <col:13> 'Handler::Flags' Int: 16384
| |     `-DeclRefExpr 0x563f2ea11ee0 <col:13> 'Handler::Flags' EnumConstant 0x563f2ea0ea30 'f_checkbox' 'Handler::Flags'
| |-EnumConstantDecl 0x563f2ea11fb0 <line:265:2, col:20> col:2 USER_FLAG_SHIFT 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x563f2ea12150 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563f2ea11f90 <col:20> 'Handler::Flags' Int: 28
| |     `-DeclRefExpr 0x563f2ea11f70 <col:20> 'Handler::Flags' EnumConstant 0x563f2ea0ec60 'f_user_shift' 'Handler::Flags'
| `-EnumConstantDecl 0x563f2ea12040 <line:266:2, col:16> col:2 USER_FLAG_0 'Handler::DeprecatedFlags'
|   `-ImplicitCastExpr 0x563f2ea12168 <col:16> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x563f2ea12020 <col:16> 'Handler::Flags' Int: 268435456
|       `-DeclRefExpr 0x563f2ea12000 <col:16> 'Handler::Flags' EnumConstant 0x563f2ea0ed30 'f_user0' 'Handler::Flags'
|-EnumDecl 0x563f2ea12180 <line:268:5, line:271:5> line:268:5
| |-DeprecatedAttr 0x563f2ea12240 <col:25> "" ""
| |-EnumConstantDecl 0x563f2ea122f0 <line:269:2, col:14> col:2 EXCLUSIVE 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:268:5)'
| | `-ImplicitCastExpr 0x563f2ea123d0 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563f2ea122d0 <col:14> 'Handler::Flags' Int: 0
| |     `-DeclRefExpr 0x563f2ea122b0 <col:14> 'Handler::Flags' EnumConstant 0x563f2ea0e490 'f_exclusive' 'Handler::Flags'
| `-EnumConstantDecl 0x563f2ea12380 <line:270:2, col:17> col:2 NONEXCLUSIVE 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:268:5)'
|   `-ImplicitCastExpr 0x563f2ea123e8 <col:17> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x563f2ea12360 <col:17> 'Handler::Flags' Int: 32
|       `-DeclRefExpr 0x563f2ea12340 <col:17> 'Handler::Flags' EnumConstant 0x563f2ea0e520 'f_nonexclusive' 'Handler::Flags'
|-CXXMethodDecl 0x563f2ea12568 <line:281:5, line:284:5> line:281:19 __call_read 'String (Element *, void *) const' inline
| |-ParmVarDecl 0x563f2ea12410 <col:31, col:40> col:40 used e 'Element *'
| |-ParmVarDecl 0x563f2ea12490 <col:43, col:49> col:49 used new_user_data 'void *'
| `-CompoundStmt 0x563f2ea163d8 <col:70, line:284:5>
|   |-ParenExpr 0x563f2ea161f8 <line:282:2, col:233> 'void'
|   | `-ConditionalOperator 0x563f2ea161c8 <col:3, col:232> 'void'
|   |   |-CXXStaticCastExpr 0x563f2ea15ef8 <col:3, col:75> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x563f2ea15ec8 <col:23, col:69> 'bool' '=='
|   |   |   |-ParenExpr 0x563f2ea15e70 <col:23, col:64> 'unsigned int'
|   |   |   | `-BinaryOperator 0x563f2ea15e50 <col:24, col:63> 'unsigned int' '&'
|   |   |   |   |-ImplicitCastExpr 0x563f2ea15e20 <col:24> 'uint32_t':'unsigned int' <LValueToRValue>
|   |   |   |   | `-MemberExpr 0x563f2ea15d40 <col:24> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x563f2ea12d60
|   |   |   |   |   `-CXXThisExpr 0x563f2ea15d30 <col:24> 'const Handler *' implicit this
|   |   |   |   `-ImplicitCastExpr 0x563f2ea15e38 <col:33, col:63> 'unsigned int' <IntegralCast>
|   |   |   |     `-ParenExpr 0x563f2ea15e00 <col:33, col:63> 'int'
|   |   |   |       `-BinaryOperator 0x563f2ea15de0 <col:34, col:43> 'int' '|'
|   |   |   |         |-ImplicitCastExpr 0x563f2ea15db0 <col:34> 'int' <IntegralCast>
|   |   |   |         | `-DeclRefExpr 0x563f2ea15d70 <col:34> 'Handler::Flags' EnumConstant 0x563f2ea0e2e0 'f_read' 'Handler::Flags'
|   |   |   |         `-ImplicitCastExpr 0x563f2ea15dc8 <col:43> 'int' <IntegralCast>
|   |   |   |           `-DeclRefExpr 0x563f2ea15d90 <col:43> 'Handler::Flags' EnumConstant 0x563f2ea0edc0 'f_read_comprehensive' 'Handler::Flags'
|   |   |   `-ImplicitCastExpr 0x563f2ea15eb0 <col:69> 'unsigned int' <IntegralCast>
|   |   |     `-DeclRefExpr 0x563f2ea15e90 <col:69> 'Handler::Flags' EnumConstant 0x563f2ea0e2e0 'f_read' 'Handler::Flags'
|   |   |-CXXFunctionalCastExpr 0x563f2ea15f58 <col:79, col:86> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x563f2ea15f38 <col:85> 'int' 0
|   |   `-CallExpr 0x563f2ea16128 <col:90, col:232> 'void'
|   |     |-ImplicitCastExpr 0x563f2ea16110 <col:90> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x563f2ea160f0 <col:90> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x563f2e5515c0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x563f2ea16168 <col:105> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563f2ea15fc8 <col:105> 'const char [53]' lvalue "(_flags & (f_read | f_read_comprehensive)) == f_read"
|   |     |-ImplicitCastExpr 0x563f2ea16180 <col:161> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563f2ea16018 <col:161> 'const char [30]' lvalue "../dummy_inc/click/handler.hh"
|   |     |-ImplicitCastExpr 0x563f2ea16198 <col:194> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x563f2ea16050 <col:194> 'int' 282
|   |     `-ImplicitCastExpr 0x563f2ea161b0 <col:199, col:213> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x563f2ea160d8 <col:199, col:213> 'const char [53]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x563f2ea160c0 <col:213> 'const char [53]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x563f2ea16070 <col:213> 'const char [53]' lvalue "String Handler::__call_read(Element *, void *) const"
|   `-ReturnStmt 0x563f2ea163c8 <line:283:2, col:38>
|     `-ExprWithCleanups 0x563f2ea163b0 <col:9, col:38> 'String'
|       `-CXXConstructExpr 0x563f2ea16380 <col:9, col:38> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x563f2ea16368 <col:9, col:38> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x563f2ea16348 <col:9, col:38> 'String' (CXXTemporary 0x563f2ea16348)
|             `-CallExpr 0x563f2ea162e0 <col:9, col:38> 'String'
|               |-ImplicitCastExpr 0x563f2ea162c8 <col:9, col:20> 'ReadHandlerCallback':'String (*)(Element *, void *)' <LValueToRValue>
|               | `-MemberExpr 0x563f2ea16258 <col:9, col:20> 'const ReadHandlerCallback':'String (*const)(Element *, void *)' lvalue .r 0x563f2ea12870
|               |   `-MemberExpr 0x563f2ea16228 <col:9> 'const union (anonymous union at ../dummy_inc/click/handler.hh:290:5)':'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5)' lvalue ->_read_hook 0x563f2ea12938
|               |     `-CXXThisExpr 0x563f2ea16218 <col:9> 'const Handler *' implicit this
|               |-ImplicitCastExpr 0x563f2ea16310 <col:22> 'Element *' <LValueToRValue>
|               | `-DeclRefExpr 0x563f2ea16288 <col:22> 'Element *' lvalue ParmVar 0x563f2ea12410 'e' 'Element *'
|               `-ImplicitCastExpr 0x563f2ea16328 <col:25> 'void *' <LValueToRValue>
|                 `-DeclRefExpr 0x563f2ea162a8 <col:25> 'void *' lvalue ParmVar 0x563f2ea12490 'new_user_data' 'void *'
|-AccessSpecDecl 0x563f2ea12618 <line:287:3, col:10> col:3 private
|-FieldDecl 0x563f2ea12650 <line:289:5, col:12> col:12 referenced _name 'String'
|-CXXRecordDecl 0x563f2ea126a0 <line:290:5, line:293:5> line:290:5 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x563f2ea127f0 <line:291:2, col:18> col:18 h 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-FieldDecl 0x563f2ea12870 <line:292:2, col:22> col:22 referenced r 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-CXXConstructorDecl 0x563f2ea13668 <line:290:5> col:5 implicit constexpr  'void (const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &)' inline default trivial noexcept-unevaluated 0x563f2ea13668
| | `-ParmVarDecl 0x563f2ea13778 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &'
| |-CXXConstructorDecl 0x563f2ea13818 <col:5> col:5 implicit constexpr  'void (Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&)' inline default trivial noexcept-unevaluated 0x563f2ea13818
| | `-ParmVarDecl 0x563f2ea13928 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&'
| |-CXXDestructorDecl 0x563f2ea13998 <col:5> col:5 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x563f2ea13998
| |-CXXMethodDecl 0x563f2ea14268 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &(const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &)' inline default trivial noexcept-unevaluated 0x563f2ea14268
| | `-ParmVarDecl 0x563f2ea14378 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &'
| |-CXXMethodDecl 0x563f2ea143e8 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &(Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&)' inline default trivial noexcept-unevaluated 0x563f2ea143e8
| | `-ParmVarDecl 0x563f2ea144f8 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&'
| `-CXXConstructorDecl 0x563f2e9cd4c0 <col:5> col:5 implicit used  'void () noexcept' inline default trivial
|   `-CompoundStmt 0x563f2e9cd5a0 <col:5>
|-FieldDecl 0x563f2ea12938 <col:5, line:293:7> col:7 referenced _read_hook 'union (anonymous union at ../dummy_inc/click/handler.hh:290:5)':'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5)'
|-CXXRecordDecl 0x563f2ea129a0 <line:294:5, line:297:5> line:294:5 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x563f2ea12ac8 <line:295:2, col:18> col:18 h 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-FieldDecl 0x563f2ea12b50 <line:296:2, col:23> col:23 referenced w 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-CXXConstructorDecl 0x563f2ea13ac8 <line:294:5> col:5 implicit constexpr  'void (const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &)' inline default trivial noexcept-unevaluated 0x563f2ea13ac8
| | `-ParmVarDecl 0x563f2ea13bd8 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &'
| |-CXXConstructorDecl 0x563f2ea13c78 <col:5> col:5 implicit constexpr  'void (Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&)' inline default trivial noexcept-unevaluated 0x563f2ea13c78
| | `-ParmVarDecl 0x563f2ea13d88 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&'
| |-CXXDestructorDecl 0x563f2ea13df8 <col:5> col:5 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x563f2ea13df8
| |-CXXMethodDecl 0x563f2ea14598 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &(const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &)' inline default trivial noexcept-unevaluated 0x563f2ea14598
| | `-ParmVarDecl 0x563f2ea146a8 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &'
| |-CXXMethodDecl 0x563f2ea14718 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &(Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&)' inline default trivial noexcept-unevaluated 0x563f2ea14718
| | `-ParmVarDecl 0x563f2ea14828 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&'
| `-CXXConstructorDecl 0x563f2e9cd600 <col:5> col:5 implicit used  'void () noexcept' inline default trivial
|   `-CompoundStmt 0x563f2e9cd6e0 <col:5>
|-FieldDecl 0x563f2ea12c18 <col:5, line:297:7> col:7 referenced _write_hook 'union (anonymous union at ../dummy_inc/click/handler.hh:294:5)':'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5)'
|-FieldDecl 0x563f2ea12c98 <line:298:5, col:11> col:11 referenced _read_user_data 'void *'
|-FieldDecl 0x563f2ea12d00 <line:299:5, col:11> col:11 referenced _write_user_data 'void *'
|-FieldDecl 0x563f2ea12d60 <line:300:5, col:14> col:14 referenced _flags 'uint32_t':'unsigned int'
|-FieldDecl 0x563f2ea12dc8 <line:301:5, col:9> col:9 _use_count 'int'
|-FieldDecl 0x563f2ea12e30 <line:302:5, col:9> col:9 _next_by_name 'int'
|-VarDecl 0x563f2ea12e90 <line:304:5, col:27> col:27 used the_blank_handler 'const Handler *' static
|-CXXConstructorDecl 0x563f2ea12fb0 <line:306:5, col:38> col:5 Handler 'void (const String &)'
| `-ParmVarDecl 0x563f2ea12f08 <col:13, col:37> col:28 'const String &' cinit
|   `-ExprWithCleanups 0x563f2ea14be0 <col:30, col:37> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x563f2ea14bc8 <col:30, col:37> 'const String' lvalue
|       `-ImplicitCastExpr 0x563f2ea14bb0 <col:30, col:37> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x563f2ea14b90 <col:30, col:37> 'String' (CXXTemporary 0x563f2ea14b90)
|           `-CXXTemporaryObjectExpr 0x563f2ea14b58 <col:30, col:37> 'String' 'void ()'
|-CXXMethodDecl 0x563f2ea13158 <line:308:5, col:41> col:17 combine 'void (const Handler &)' inline
| `-ParmVarDecl 0x563f2ea13098 <col:25, col:40> col:40 x 'const Handler &'
|-CXXMethodDecl 0x563f2ea132d8 <line:309:5, col:46> col:17 compatible 'bool (const Handler &) const' inline
| `-ParmVarDecl 0x563f2ea13210 <col:28, col:43> col:43 x 'const Handler &'
|-FriendDecl 0x563f2ea13498 <line:311:5, col:18> col:12 'class Router':'Router'
|-CXXConstructorDecl 0x563f2ea134d8 <line:19:7> col:7 implicit Handler 'void (const Handler &)' inline default noexcept-unevaluated 0x563f2ea134d8
| `-ParmVarDecl 0x563f2ea135b8 <col:7> col:7 'const Handler &'
|-CXXConstructorDecl 0x563f2ea13f08 <col:7> col:7 implicit Handler 'void (Handler &&)' inline default noexcept-unevaluated 0x563f2ea13f08
| `-ParmVarDecl 0x563f2ea14018 <col:7> col:7 'Handler &&'
|-CXXMethodDecl 0x563f2ea140b8 <col:7> col:7 implicit operator= 'Handler &(const Handler &)' inline default noexcept-unevaluated 0x563f2ea140b8
| `-ParmVarDecl 0x563f2ea141c8 <col:7> col:7 'const Handler &'
|-CXXMethodDecl 0x563f2ea14898 <col:7> col:7 implicit operator= 'Handler &(Handler &&)' inline default noexcept-unevaluated 0x563f2ea14898
| `-ParmVarDecl 0x563f2ea149a8 <col:7> col:7 'Handler &&'
`-CXXDestructorDecl 0x563f2ea14a30 <col:7> col:7 implicit ~Handler 'void ()' inline default noexcept-unevaluated 0x563f2ea14a30

Layout: <CGRecordLayout
  LLVMType:%class.Handler = type <{ %class.String, %union.anon, %union.anon.11, i8*, i8*, i32, i32, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Handler.base = type <{ %class.String, %union.anon, %union.anon.11, i8*, i8*, i32, i32, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x563f2ebcb508 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'void *'
|-CXXRecordDecl 0x563f2ebcb718 prev 0x563f2ebcb508 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x563f2ebcc730 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<void *>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x563f2ebcc6e0 'typename array_memory<void *>::type' sugar
|   `-TypedefType 0x563f2ebcc6c0 'conditional<true, sized_array_memory<8>, typed_array_memory<void *> >::type' sugar
|     |-Typedef 0x563f2ebcc570 'type'
|     `-SubstTemplateTypeParmType 0x563f2eb44940 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x563f2e77b200 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563f2e77b1a8 'T'
|       `-RecordType 0x563f2eb44490 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x563f2eb443a8 'sized_array_memory'
|-FieldDecl 0x563f2ebcc830 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<void *>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x563f2ebcc880 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x563f2ebcc8b8 <line:118:5, col:15> col:15 value_type 'void *':'void *'
| `-SubstTemplateTypeParmType 0x563f2ebcb7b0 'void *' sugar
|   |-TemplateTypeParmType 0x563f2e7b3110 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x563f2e7b30b8 'T'
|   `-PointerType 0x563f2e4b1ce0 'void *'
|     `-BuiltinType 0x563f2e4b14e0 'void'
|-TypedefDecl 0x563f2ebcc948 <line:119:5, col:16> col:16 reference 'void *&'
| `-LValueReferenceType 0x563f2ebcc910 'void *&'
|   `-SubstTemplateTypeParmType 0x563f2ebcb7b0 'void *' sugar
|     |-TemplateTypeParmType 0x563f2e7b3110 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x563f2e7b30b8 'T'
|     `-PointerType 0x563f2e4b1ce0 'void *'
|       `-BuiltinType 0x563f2e4b14e0 'void'
|-TypedefDecl 0x563f2ebcca08 <line:120:5, col:22> col:22 const_reference 'void *const &'
| `-LValueReferenceType 0x563f2ebcc9d0 'void *const &'
|   `-QualType 0x563f2ebcb7b1 'void *const' const
|     `-SubstTemplateTypeParmType 0x563f2ebcb7b0 'void *' sugar
|       |-TemplateTypeParmType 0x563f2e7b3110 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563f2e7b30b8 'T'
|       `-PointerType 0x563f2e4b1ce0 'void *'
|         `-BuiltinType 0x563f2e4b14e0 'void'
|-TypedefDecl 0x563f2ebcca98 <line:121:5, col:16> col:16 pointer 'void **'
| `-PointerType 0x563f2ebcca60 'void **'
|   `-SubstTemplateTypeParmType 0x563f2ebcb7b0 'void *' sugar
|     |-TemplateTypeParmType 0x563f2e7b3110 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x563f2e7b30b8 'T'
|     `-PointerType 0x563f2e4b1ce0 'void *'
|       `-BuiltinType 0x563f2e4b14e0 'void'
|-TypedefDecl 0x563f2ebcfb68 <line:122:5, col:22> col:22 const_pointer 'void *const *'
| `-PointerType 0x563f2ebcfb30 'void *const *'
|   `-QualType 0x563f2ebcb7b1 'void *const' const
|     `-SubstTemplateTypeParmType 0x563f2ebcb7b0 'void *' sugar
|       |-TemplateTypeParmType 0x563f2e7b3110 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563f2e7b30b8 'T'
|       `-PointerType 0x563f2e4b1ce0 'void *'
|         `-BuiltinType 0x563f2e4b14e0 'void'
|-TypedefDecl 0x563f2ebd0750 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<void *>::type':'void *'
| `-ElaboratedType 0x563f2ebd0700 'typename fast_argument<void *>::type' sugar
|   `-TypedefType 0x563f2ebd06e0 'fast_argument<void *, false>::type' sugar
|     |-Typedef 0x563f2ebd0670 'type'
|     `-SubstTemplateTypeParmType 0x563f2ebd0430 'void *' sugar
|       |-TemplateTypeParmType 0x563f2e786000 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563f2e785fb0 'T'
|       `-PointerType 0x563f2e4b1ce0 'void *'
|         `-BuiltinType 0x563f2e4b14e0 'void'
|-TypedefDecl 0x563f2ebd07b8 <line:126:5, col:22> col:22 const_access_type 'void *const &'
| `-LValueReferenceType 0x563f2ebcc9d0 'void *const &'
|   `-QualType 0x563f2ebcb7b1 'void *const' const
|     `-SubstTemplateTypeParmType 0x563f2ebcb7b0 'void *' sugar
|       |-TemplateTypeParmType 0x563f2e7b3110 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563f2e7b30b8 'T'
|       `-PointerType 0x563f2e4b1ce0 'void *'
|         `-BuiltinType 0x563f2e4b14e0 'void'
|-TypedefDecl 0x563f2ebd0810 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x563f2e4b1580 'int'
|-TypedefDecl 0x563f2ebd0878 <line:130:5, col:16> col:16 iterator 'void **'
| `-PointerType 0x563f2ebcca60 'void **'
|   `-SubstTemplateTypeParmType 0x563f2ebcb7b0 'void *' sugar
|     |-TemplateTypeParmType 0x563f2e7b3110 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x563f2e7b30b8 'T'
|     `-PointerType 0x563f2e4b1ce0 'void *'
|       `-BuiltinType 0x563f2e4b14e0 'void'
|-TypedefDecl 0x563f2ebd08e0 <line:131:5, col:22> col:22 const_iterator 'void *const *'
| `-PointerType 0x563f2ebcfb30 'void *const *'
|   `-QualType 0x563f2ebcb7b1 'void *const' const
|     `-SubstTemplateTypeParmType 0x563f2ebcb7b0 'void *' sugar
|       |-TemplateTypeParmType 0x563f2e7b3110 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563f2e7b30b8 'T'
|       `-PointerType 0x563f2e4b1ce0 'void *'
|         `-BuiltinType 0x563f2e4b14e0 'void'
|-EnumDecl 0x563f2ebd0938 <line:134:5> col:5
| `-EnumConstantDecl 0x563f2ebd0a30 <col:12, col:40> col:12 RESERVE_GROW 'Vector<void *>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x563f2ebd0a10 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x563f2e7b4798 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x563f2e7b4770 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x563f2e7b4750 <col:40> 'int' 1
|-CXXConstructorDecl 0x563f2ebd0ab8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x563f2ebd0d08 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<void *>::value_argument_type)' inline
| |-ParmVarDecl 0x563f2ebd0b70 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x563f2ebd0c10 <col:41, col:61> col:61 v 'Vector<void *>::value_argument_type':'void *'
|-CXXConstructorDecl 0x563f2ebd0fc8 <line:139:5, col:37> col:12 Vector 'void (const Vector<void *> &)' inline
| `-ParmVarDecl 0x563f2ebd0eb0 <col:19, col:36> col:36 x 'const Vector<void *> &'
|-CXXConstructorDecl 0x563f2ebd1288 <line:141:5, col:32> col:12 Vector 'void (Vector<void *> &&)' inline
| `-ParmVarDecl 0x563f2ebd1170 <col:19, col:31> col:31 x 'Vector<void *> &&'
|-CXXMethodDecl 0x563f2ebd15d0 <line:144:5, col:51> col:23 operator= 'Vector<void *> &(const Vector<void *> &)' inline
| `-ParmVarDecl 0x563f2ebd14b0 <col:33, col:50> col:50 x 'const Vector<void *> &'
|-CXXMethodDecl 0x563f2ebd18e0 <line:146:5, col:46> col:23 operator= 'Vector<void *> &(Vector<void *> &&)' inline
| `-ParmVarDecl 0x563f2ebd17c0 <col:33, col:45> col:45 x 'Vector<void *> &&'
|-CXXMethodDecl 0x563f2ebd1bd0 <line:148:5, col:70> col:23 assign 'Vector<void *> &(Vector::size_type, Vector<void *>::value_argument_type)' inline
| |-ParmVarDecl 0x563f2ebd1a18 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x563f2ebd1a90 <col:43, col:69> col:63 v 'Vector<void *>::value_argument_type':'void *'
|-CXXMethodDecl 0x563f2ebd1d28 <line:150:5, col:55> col:49 begin 'Vector<void *>::iterator ()'
| |-NoInlineAttr 0x563f2ebd1e08 <col:20> Inherited
| `-OptimizeNoneAttr 0x563f2ebd1e60 <col:30> Inherited
|-CXXMethodDecl 0x563f2ebd1ea8 <line:151:5, col:53> col:49 end 'Vector<void *>::iterator ()'
| |-NoInlineAttr 0x563f2ebd1f58 <col:20> Inherited
| `-OptimizeNoneAttr 0x563f2ebd1fb0 <col:30> Inherited
|-CXXMethodDecl 0x563f2ebd2078 <line:152:5, col:63> col:55 begin 'Vector<void *>::const_iterator () const'
| |-NoInlineAttr 0x563f2ebd2128 <col:20> Inherited
| `-OptimizeNoneAttr 0x563f2ebd2180 <col:30> Inherited
|-CXXMethodDecl 0x563f2ebd21c8 <line:153:5, col:61> col:55 end 'Vector<void *>::const_iterator () const'
| |-NoInlineAttr 0x563f2ebd2278 <col:20> Inherited
| `-OptimizeNoneAttr 0x563f2ebd22d0 <col:30> Inherited
|-CXXMethodDecl 0x563f2ebd2318 <line:154:5, col:64> col:55 cbegin 'Vector<void *>::const_iterator () const'
| |-NoInlineAttr 0x563f2ebd23c8 <col:20> Inherited
| `-OptimizeNoneAttr 0x563f2ebd2420 <col:30> Inherited
|-CXXMethodDecl 0x563f2ebd2468 <line:155:5, col:62> col:55 cend 'Vector<void *>::const_iterator () const'
| |-NoInlineAttr 0x563f2ebd2518 <col:20> Inherited
| `-OptimizeNoneAttr 0x563f2ebd2570 <col:30> Inherited
|-CXXMethodDecl 0x563f2ebd2598 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x563f2ebd2648 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x563f2ebd26f8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x563f2ebd28b8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<void *>::value_argument_type)' inline
| |-ParmVarDecl 0x563f2ebd27a8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x563f2ebd2820 <col:37, col:63> col:57 v 'Vector<void *>::value_argument_type':'void *'
|-CXXMethodDecl 0x563f2ebd2a08 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x563f2ebd2978 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x563f2ebd2bb8 <line:163:5, col:65> col:43 operator[] 'void *&(Vector::size_type)'
| |-ParmVarDecl 0x563f2ebd2ac0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x563f2ebd2c70 <col:20>
| `-OptimizeNoneAttr 0x563f2ebd2cc8 <col:30>
|-CXXMethodDecl 0x563f2ebd2de8 <line:164:5, col:73> col:49 operator[] 'void *const &(Vector::size_type) const'
| |-ParmVarDecl 0x563f2ebd2cf0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x563f2ebd2ea0 <col:20>
| `-OptimizeNoneAttr 0x563f2ebd2ef8 <col:30>
|-CXXMethodDecl 0x563f2ebd2fb0 <line:165:5, col:29> col:15 at 'void *&(Vector::size_type)' inline
| `-ParmVarDecl 0x563f2ebd2f20 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x563f2ebd30f8 <line:166:5, col:37> col:21 at 'void *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x563f2ebd3068 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x563f2ebd3228 <line:167:5, col:21> col:15 front 'void *&()' inline
|-CXXMethodDecl 0x563f2ebd3358 <line:168:5, col:29> col:21 front 'void *const &() const' inline
|-CXXMethodDecl 0x563f2ebd3428 <line:169:5, col:20> col:15 back 'void *&()' inline
|-CXXMethodDecl 0x563f2ebd34f8 <line:170:5, col:28> col:21 back 'void *const &() const' inline
|-CXXMethodDecl 0x563f2ebd3638 <line:172:5, col:39> col:15 unchecked_at 'void *&(Vector::size_type)' inline
| `-ParmVarDecl 0x563f2ebd35a8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x563f2ebd3780 <line:173:5, col:47> col:21 unchecked_at 'void *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x563f2ebd36f0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x563f2ebd38c8 <line:174:5, col:59> col:15 at_u 'void *&(Vector::size_type)' inline
| |-ParmVarDecl 0x563f2ebd3838 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x563f2ebd3980 <col:48> Inherited "" ""
|-CXXMethodDecl 0x563f2ebd3a80 <line:175:5, col:71> col:21 at_u 'void *const &(Vector::size_type) const' inline
| |-ParmVarDecl 0x563f2ebd39f0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x563f2ebd3b38 <col:60> Inherited "" ""
|-CXXMethodDecl 0x563f2ebd3bf8 <line:177:5, col:20> col:15 data 'void **()' inline
|-CXXMethodDecl 0x563f2ebd3cf8 <line:178:5, col:28> col:21 data 'void *const *() const' inline
|-CXXMethodDecl 0x563f2ebd3e78 <line:180:5, col:48> col:17 push_back 'void (Vector<void *>::value_argument_type)' inline
| `-ParmVarDecl 0x563f2ebd3db8 <col:27, col:47> col:47 v 'Vector<void *>::value_argument_type':'void *'
|-FunctionTemplateDecl 0x563f2ebd4638 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x563f2ebd3f30 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<void *>':'fast_argument<void *, false>'
| `-CXXMethodDecl 0x563f2ebd4598 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (void *&&)' inline
|   `-ParmVarDecl 0x563f2ebd4498 <col:58, col:62> col:62 v 'void *&&'
|-CXXMethodDecl 0x563f2ebd4718 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x563f2ebd4868 <line:186:5, col:49> col:17 push_front 'void (Vector<void *>::value_argument_type)' inline
| `-ParmVarDecl 0x563f2ebd47d8 <col:28, col:48> col:48 v 'Vector<void *>::value_argument_type':'void *'
|-CXXMethodDecl 0x563f2ebd4920 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x563f2ebd4b68 <line:189:5, col:62> col:21 insert 'Vector<void *>::iterator (Vector<void *>::iterator, Vector<void *>::value_argument_type)' inline
| |-ParmVarDecl 0x563f2ebd49e0 <col:28, col:37> col:37 it 'Vector<void *>::iterator':'void **'
| `-ParmVarDecl 0x563f2ebd4a58 <col:41, col:61> col:61 v 'Vector<void *>::value_argument_type':'void *'
|-CXXMethodDecl 0x563f2ebd4d28 <line:190:5, col:38> col:21 erase 'Vector<void *>::iterator (Vector<void *>::iterator)' inline
| `-ParmVarDecl 0x563f2ebd4c38 <col:27, col:36> col:36 it 'Vector<void *>::iterator':'void **'
|-CXXMethodDecl 0x563f2ebd4f78 <line:191:5, col:49> col:21 erase 'Vector<void *>::iterator (Vector<void *>::iterator, Vector<void *>::iterator)' inline
| |-ParmVarDecl 0x563f2ebd4df0 <col:27, col:36> col:36 a 'Vector<void *>::iterator':'void **'
| `-ParmVarDecl 0x563f2ebd4e68 <col:39, col:48> col:48 b 'Vector<void *>::iterator':'void **'
|-CXXMethodDecl 0x563f2ebd5038 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x563f2ebd5298 <line:195:5, col:34> col:17 swap 'void (Vector<void *> &)' inline
| `-ParmVarDecl 0x563f2ebd51a0 <col:22, col:33> col:33 x 'Vector<void *> &'
`-CXXDestructorDecl 0x563f2ebd5368 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x563f2ebd5368

Layout: <CGRecordLayout
  LLVMType:%class.Vector.12 = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector.12 = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct Router::notifier_signals_t
         0 |   class String name
         0 |     struct String::rep_t _r
         0 |       const char * data
         8 |       int length
        16 |       struct String::memo_t * memo
        24 |   int nsig
        28 |   class atomic_uint32_t [128] sig
       544 |   struct Router::notifier_signals_t * next
           | [sizeof=552, dsize=552, align=8,
           |  nvsize=552, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563f2ebd5560 <../dummy_inc/click/router.hh:280:5, line:290:5> line:280:12 referenced struct notifier_signals_t definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x563f2ebd5678 <col:5, col:12> col:12 implicit referenced struct notifier_signals_t
|-EnumDecl 0x563f2ebd5708 <line:281:9, col:32> col:9
| `-EnumConstantDecl 0x563f2ebd5810 <col:16, col:27> col:16 referenced capacity 'Router::notifier_signals_t::(anonymous enum at ../dummy_inc/click/router.hh:281:9)'
|   `-ImplicitCastExpr 0x563f2ebd5860 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x563f2ebd57f0 <col:27> 'int' Int: 4096
|       `-IntegerLiteral 0x563f2ebd57d0 <col:27> 'int' 4096
|-FieldDecl 0x563f2ebd5888 <line:282:9, col:16> col:16 name 'String'
|-FieldDecl 0x563f2ebd58f0 <line:283:9, col:13> col:13 nsig 'int'
|-FieldDecl 0x563f2ebd5ae8 <line:284:9, col:42> col:25 referenced sig 'atomic_uint32_t [128]'
|-FieldDecl 0x563f2ebd5b78 <line:285:9, col:29> col:29 next 'Router::notifier_signals_t *'
|-CXXConstructorDecl 0x563f2ebd5d38 <line:286:9, line:289:9> line:286:9 notifier_signals_t 'void (const String &, Router::notifier_signals_t *)'
| |-ParmVarDecl 0x563f2ebd5bd8 <col:28, col:42> col:42 used n 'const String &'
| |-ParmVarDecl 0x563f2ebd5c50 <col:45, col:65> col:65 used nx 'Router::notifier_signals_t *'
| |-CXXCtorInitializer Field 0x563f2ebd5888 'name' 'String'
| | `-CXXConstructExpr 0x563f2ebe0d78 <line:287:15, col:21> 'String' 'void (const String &)'
| |   `-DeclRefExpr 0x563f2ebe0d38 <col:20> 'const String' lvalue ParmVar 0x563f2ebd5bd8 'n' 'const String &'
| |-CXXCtorInitializer Field 0x563f2ebd58f0 'nsig' 'int'
| | `-IntegerLiteral 0x563f2ebe0dd0 <col:29> 'int' 0
| |-CXXCtorInitializer Field 0x563f2ebd5ae8 'sig' 'atomic_uint32_t [128]'
| | `-CXXConstructExpr 0x563f2ebe0eb8 <line:286:9> 'atomic_uint32_t [128]' 'void () noexcept'
| |-CXXCtorInitializer Field 0x563f2ebd5b78 'next' 'Router::notifier_signals_t *'
| | `-ImplicitCastExpr 0x563f2ebe0e78 <line:287:38> 'Router::notifier_signals_t *' <LValueToRValue>
| |   `-DeclRefExpr 0x563f2ebe0e38 <col:38> 'Router::notifier_signals_t *' lvalue ParmVar 0x563f2ebd5c50 'nx' 'Router::notifier_signals_t *'
| `-CompoundStmt 0x563f2ebe1148 <col:42, line:289:9>
|   `-CallExpr 0x563f2ebe10f8 <line:288:13, col:43> 'void *'
|     |-ImplicitCastExpr 0x563f2ebe10e0 <col:13> 'void *(*)(void *, int, size_t) throw()' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x563f2ebe10c0 <col:13> 'void *(void *, int, size_t) throw()' lvalue Function 0x563f2e7158b8 'memset' 'void *(void *, int, size_t) throw()'
|     |-ImplicitCastExpr 0x563f2ebe1130 <col:20, col:26> 'void *' <BitCast>
|     | `-UnaryOperator 0x563f2ebe1008 <col:20, col:26> 'atomic_uint32_t *' prefix '&' cannot overflow
|     |   `-ArraySubscriptExpr 0x563f2ebe0fe8 <col:21, col:26> 'atomic_uint32_t' lvalue
|     |     |-ImplicitCastExpr 0x563f2ebe0fd0 <col:21> 'atomic_uint32_t *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x563f2ebe0f80 <col:21> 'atomic_uint32_t [128]' lvalue ->sig 0x563f2ebd5ae8
|     |     |   `-CXXThisExpr 0x563f2ebe0f70 <col:21> 'Router::notifier_signals_t *' implicit this
|     |     `-IntegerLiteral 0x563f2ebe0fb0 <col:25> 'int' 0
|     |-IntegerLiteral 0x563f2ebe1020 <col:29> 'int' 0
|     `-UnaryExprOrTypeTraitExpr 0x563f2ebe10a0 <col:32, col:42> 'unsigned long' sizeof
|       `-ParenExpr 0x563f2ebe1080 <col:38, col:42> 'atomic_uint32_t [128]' lvalue
|         `-MemberExpr 0x563f2ebe1050 <col:39> 'atomic_uint32_t [128]' lvalue ->sig 0x563f2ebd5ae8 non_odr_use_unevaluated
|           `-CXXThisExpr 0x563f2ebe1040 <col:39> 'Router::notifier_signals_t *' implicit this
|-CXXConstructorDecl 0x563f2ebd5e18 <line:280:12> col:12 implicit notifier_signals_t 'void (const Router::notifier_signals_t &)' inline default noexcept-unevaluated 0x563f2ebd5e18
| `-ParmVarDecl 0x563f2ebd5f28 <col:12> col:12 'const Router::notifier_signals_t &'
|-CXXConstructorDecl 0x563f2ebd5fc8 <col:12> col:12 implicit notifier_signals_t 'void (Router::notifier_signals_t &&)' inline default noexcept-unevaluated 0x563f2ebd5fc8
| `-ParmVarDecl 0x563f2ebd60d8 <col:12> col:12 'Router::notifier_signals_t &&'
|-CXXMethodDecl 0x563f2ebd6178 <col:12> col:12 implicit operator= 'Router::notifier_signals_t &(const Router::notifier_signals_t &)' inline default noexcept-unevaluated 0x563f2ebd6178
| `-ParmVarDecl 0x563f2ebd6288 <col:12> col:12 'const Router::notifier_signals_t &'
|-CXXMethodDecl 0x563f2ebd62f8 <col:12> col:12 implicit operator= 'Router::notifier_signals_t &(Router::notifier_signals_t &&)' inline default noexcept-unevaluated 0x563f2ebd62f8
| `-ParmVarDecl 0x563f2ebd6408 <col:12> col:12 'Router::notifier_signals_t &&'
`-CXXDestructorDecl 0x563f2ebd6490 <col:12> col:12 implicit ~notifier_signals_t 'void ()' inline default noexcept-unevaluated 0x563f2ebd6490

Layout: <CGRecordLayout
  LLVMType:%"struct.Router::notifier_signals_t" = type { %class.String, i32, [128 x %class.atomic_uint32_t], %"struct.Router::notifier_signals_t"* }
  NonVirtualBaseLLVMType:%"struct.Router::notifier_signals_t" = type { %class.String, i32, [128 x %class.atomic_uint32_t], %"struct.Router::notifier_signals_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class ThreadSched
         0 |   (ThreadSched vtable pointer)
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563f2eb92698 <../dummy_inc/click/standard/threadsched.hh:6:1, line:15:1> line:6:7 class ThreadSched definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple non_trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x563f2eb927b8 <col:1, col:7> col:7 implicit referenced class ThreadSched
|-AccessSpecDecl 0x563f2eb92848 <col:21, col:27> col:21 public
|-EnumDecl 0x563f2eb92870 <line:8:5, col:58> col:5
| |-EnumConstantDecl 0x563f2eb92988 <col:12, col:32> col:12 THREAD_QUIESCENT 'ThreadSched::(anonymous enum at ../dummy_inc/click/standard/threadsched.hh:8:5)'
| | `-ConstantExpr 0x563f2eb92968 <col:31, col:32> 'int' Int: -1
| |   `-UnaryOperator 0x563f2eb92950 <col:31, col:32> 'int' prefix '-'
| |     `-IntegerLiteral 0x563f2eb92930 <col:32> 'int' 1
| `-EnumConstantDecl 0x563f2eb92a30 <col:35, col:53> col:35 THREAD_UNKNOWN 'ThreadSched::(anonymous enum at ../dummy_inc/click/standard/threadsched.hh:8:5)'
|   `-ConstantExpr 0x563f2eb92a10 <col:52, col:53> 'int' Int: -1000
|     `-UnaryOperator 0x563f2eb929f8 <col:52, col:53> 'int' prefix '-'
|       `-IntegerLiteral 0x563f2eb929d8 <col:53> 'int' 1000
|-CXXConstructorDecl 0x563f2eb92ae0 <line:10:5, col:21> col:5 ThreadSched 'void ()'
| `-CompoundStmt 0x563f2eb93018 <col:19, col:21>
|-CXXDestructorDecl 0x563f2eb92bd0 <line:11:5, col:30> col:13 ~ThreadSched 'void () noexcept' virtual
| `-CompoundStmt 0x563f2eb93028 <col:28, col:30>
|-CXXMethodDecl 0x563f2eb92d90 <line:13:5, col:56> col:17 initial_home_thread_id 'int (const Element *)' virtual
| `-ParmVarDecl 0x563f2eb92cc0 <col:40, col:55> col:55 e 'const Element *'
`-CXXMethodDecl 0x563f2eb92e98 <line:6:7> col:7 implicit operator= 'ThreadSched &(const ThreadSched &)' inline default noexcept-unevaluated 0x563f2eb92e98
  `-ParmVarDecl 0x563f2eb92fa8 <col:7> col:7 'const ThreadSched &'

Layout: <CGRecordLayout
  LLVMType:%class.ThreadSched = type { i32 (...)** }
  NonVirtualBaseLLVMType:%class.ThreadSched = type { i32 (...)** }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563f2eb935d0 prev 0x563f2eb75380 <../dummy_inc/click/router.hh:23:1, line:352:1> line:23:7 referenced class Router definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-CXXRecordDecl 0x563f2eb936c8 <col:1, col:7> col:7 implicit referenced class Router
|-AccessSpecDecl 0x563f2eb93758 <col:16, col:22> col:16 public
|-CXXMethodDecl 0x563f2eb937c8 <line:28:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x563f2eb93888 <line:31:5, col:31> col:17 used initialized 'bool () const' inline
|-CXXMethodDecl 0x563f2eb93948 <line:32:5, col:34> col:17 handlers_ready 'bool () const' inline
|-CXXMethodDecl 0x563f2eb93a08 <line:33:5, col:27> col:17 running 'bool () const' inline
|-CXXMethodDecl 0x563f2eb93ac8 <line:34:5, col:25> col:17 dying 'bool () const' inline
|-EnumDecl 0x563f2eb93b68 <line:37:5, col:44> col:5
| `-EnumConstantDecl 0x563f2eb93cc8 <col:12, col:42> col:12 STOP_RUNCOUNT 'Router::(anonymous enum at ../dummy_inc/click/router.hh:37:5)'
|   `-ConstantExpr 0x563f2eb93ca8 <col:28, col:42> 'int' Int: -2147483648
|     `-BinaryOperator 0x563f2eb93c88 <col:28, col:42> 'int' '-'
|       |-UnaryOperator 0x563f2eb93c50 <col:28, col:29> 'int' prefix '-'
|       | `-IntegerLiteral 0x563f2eb93c30 <col:29> 'int' 2147483647
|       `-IntegerLiteral 0x563f2eb93c68 <col:42> 'int' 1
|-CXXMethodDecl 0x563f2eb93d68 <line:38:5, col:31> col:20 runcount 'int32_t () const' inline
|-CXXMethodDecl 0x563f2eb93ed8 <line:39:5, col:39> col:10 used adjust_runcount 'void (int32_t)'
| `-ParmVarDecl 0x563f2eb93e18 <col:26, col:34> col:34 delta 'int32_t':'int'
|-CXXMethodDecl 0x563f2eb94020 <line:40:5, col:33> col:10 set_runcount 'void (int32_t)'
| `-ParmVarDecl 0x563f2eb93f90 <col:23, col:31> col:31 rc 'int32_t':'int'
|-CXXMethodDecl 0x563f2eb940e8 <line:41:5, col:36> col:17 please_stop_driver 'void ()' inline
|-CXXMethodDecl 0x563f2eb94410 <line:44:5, col:47> col:36 elements 'const Vector<Element *> &() const' inline
|-CXXMethodDecl 0x563f2eb944d8 <line:45:5, col:28> col:16 nelements 'int () const' inline
|-CXXMethodDecl 0x563f2eb94658 <line:46:5, col:36> col:21 element 'Element *(int) const' inline
| `-ParmVarDecl 0x563f2eb94590 <col:29, col:33> col:33 i 'int'
|-CXXMethodDecl 0x563f2eb94720 <line:47:5, col:36> col:21 root_element 'Element *() const' inline
|-CXXMethodDecl 0x563f2eb94928 <line:48:5, col:56> col:21 used element 'Element *(const Router *, int)' static
| |-ParmVarDecl 0x563f2eb947d0 <col:29, col:43> col:43 router 'const Router *'
| `-ParmVarDecl 0x563f2eb94850 <col:51, col:55> col:55 i 'int'
|-CXXMethodDecl 0x563f2eb94a80 <line:50:5, col:32> col:19 ename 'const String &(int) const'
| `-ParmVarDecl 0x563f2eb949f0 <col:25, col:29> col:29 i 'int'
|-CXXMethodDecl 0x563f2eb94bd0 <line:51:5, col:33> col:12 ename_context 'String (int) const'
| `-ParmVarDecl 0x563f2eb94b40 <col:26, col:30> col:30 i 'int'
|-CXXMethodDecl 0x563f2eb94d20 <line:52:5, col:29> col:12 elandmark 'String (int) const'
| `-ParmVarDecl 0x563f2eb94c90 <col:22, col:26> col:26 i 'int'
|-CXXMethodDecl 0x563f2eb94e70 <line:53:5, col:41> col:19 econfiguration 'const String &(int) const'
| `-ParmVarDecl 0x563f2eb94de0 <col:34, col:38> col:38 i 'int'
|-CXXMethodDecl 0x563f2eb95040 <line:54:5, col:54> col:10 set_econfiguration 'void (int, const String &)'
| |-ParmVarDecl 0x563f2eb94f30 <col:29, col:33> col:33 i 'int'
| `-ParmVarDecl 0x563f2eb94fa8 <col:36, col:50> col:50 conf 'const String &'
|-CXXMethodDecl 0x563f2eb95248 <line:56:5, col:63> col:14 find 'Element *(const String &, ErrorHandler *) const'
| |-ParmVarDecl 0x563f2eb95100 <col:19, col:33> col:33 name 'const String &'
| `-ParmVarDecl 0x563f2eb95178 <col:39, col:60> col:53 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x563f2ebdd9c0 <col:60> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x563f2ebdd9a0 <col:60> 'int' 0
|-CXXMethodDecl 0x563f2eb954d8 <line:57:5, col:79> col:14 used find 'Element *(const String &, String, ErrorHandler *) const'
| |-ParmVarDecl 0x563f2eb95308 <col:19, col:33> col:33 name 'const String &'
| |-ParmVarDecl 0x563f2eb95380 <col:39, col:46> col:46 context 'String' destroyed
| `-ParmVarDecl 0x563f2eb953f8 <col:55, col:76> col:69 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x563f2ebdd9f8 <col:76> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x563f2ebdd9d8 <col:76> 'int' 0
|-CXXMethodDecl 0x563f2eb95778 <line:58:5, col:87> col:14 find 'Element *(const String &, const Element *, ErrorHandler *) const'
| |-ParmVarDecl 0x563f2eb955a0 <col:19, col:33> col:33 name 'const String &'
| |-ParmVarDecl 0x563f2eb95618 <col:39, col:54> col:54 context 'const Element *'
| `-ParmVarDecl 0x563f2eb95690 <col:63, col:84> col:77 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x563f2ebdda30 <col:84> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x563f2ebdda10 <col:84> 'int' 0
|-CXXMethodDecl 0x563f2eb95ad0 <line:60:5, col:76> col:9 used visit 'int (Element *, bool, int, RouterVisitor *) const'
| |-ParmVarDecl 0x563f2eb95840 <col:15, col:24> col:24 e 'Element *'
| |-ParmVarDecl 0x563f2eb958b8 <col:27, col:32> col:32 isoutput 'bool'
| |-ParmVarDecl 0x563f2eb95938 <col:42, col:46> col:46 port 'int'
| `-ParmVarDecl 0x563f2eb959d8 <col:52, col:67> col:67 visitor 'RouterVisitor *'
|-CXXMethodDecl 0x563f2eb95d80 <line:61:5, col:72> col:9 visit_downstream 'int (Element *, int, RouterVisitor *) const'
| |-ParmVarDecl 0x563f2eb95ba0 <col:26, col:35> col:35 e 'Element *'
| |-ParmVarDecl 0x563f2eb95c20 <col:38, col:42> col:42 port 'int'
| `-ParmVarDecl 0x563f2eb95c98 <col:48, col:63> col:63 visitor 'RouterVisitor *'
|-CXXMethodDecl 0x563f2eb95fe8 <line:62:5, col:70> col:9 visit_upstream 'int (Element *, int, RouterVisitor *) const'
| |-ParmVarDecl 0x563f2eb95e48 <col:24, col:33> col:33 e 'Element *'
| |-ParmVarDecl 0x563f2eb95ec8 <col:36, col:40> col:40 port 'int'
| `-ParmVarDecl 0x563f2eb95f40 <col:46, col:61> col:61 visitor 'RouterVisitor *'
|-CXXMethodDecl 0x563f2eb964a0 <line:64:5, col:126> col:9 downstream_elements 'int (Element *, int, ElementFilter *, Vector<Element *> &)'
| |-ParmVarDecl 0x563f2eb960b0 <col:29, col:38> col:38 e 'Element *'
| |-ParmVarDecl 0x563f2eb96130 <col:41, col:45> col:45 port 'int'
| |-ParmVarDecl 0x563f2eb961d8 <col:51, col:66> col:66 filter 'ElementFilter *'
| |-ParmVarDecl 0x563f2eb96350 <col:74, col:92> col:92 result 'Vector<Element *> &'
| `-DeprecatedAttr 0x563f2eb96560 <col:115> "" ""
|-CXXMethodDecl 0x563f2eb96920 <line:65:5, col:124> col:9 upstream_elements 'int (Element *, int, ElementFilter *, Vector<Element *> &)'
| |-ParmVarDecl 0x563f2eb965e0 <col:27, col:36> col:36 e 'Element *'
| |-ParmVarDecl 0x563f2eb96660 <col:39, col:43> col:43 port 'int'
| |-ParmVarDecl 0x563f2eb966d8 <col:49, col:64> col:64 filter 'ElementFilter *'
| |-ParmVarDecl 0x563f2eb96820 <col:72, col:90> col:90 result 'Vector<Element *> &'
| `-DeprecatedAttr 0x563f2eb969e0 <col:113> "" ""
|-CXXMethodDecl 0x563f2eb96b30 <line:67:5, col:55> col:24 flow_code_override 'const char *(int) const' inline
| `-ParmVarDecl 0x563f2eb96a68 <col:43, col:47> col:47 eindex 'int'
|-CXXMethodDecl 0x563f2eb96d00 <line:68:5, col:68> col:10 set_flow_code_override 'void (int, const String &)'
| |-ParmVarDecl 0x563f2eb96bf0 <col:33, col:37> col:37 eindex 'int'
| `-ParmVarDecl 0x563f2eb96c68 <col:45, col:59> col:59 flow_code 'const String &'
|-CXXMethodDecl 0x563f2eb96f08 <line:72:5, col:72> col:27 handler 'const Handler *(const Element *, const String &)' static
| |-ParmVarDecl 0x563f2eb96dc0 <col:35, col:50> col:50 e 'const Element *'
| `-ParmVarDecl 0x563f2eb96e38 <col:53, col:67> col:67 hname 'const String &'
|-CXXMethodDecl 0x563f2eb97308 <line:73:5, col:138> col:17 add_read_handler 'void (const Element *, const String &, ReadHandlerCallback, void *, uint32_t)' static
| |-ParmVarDecl 0x563f2eb96fc8 <col:34, col:49> col:49 e 'const Element *'
| |-ParmVarDecl 0x563f2eb97040 <col:52, col:66> col:66 hname 'const String &'
| |-ParmVarDecl 0x563f2eb970b8 <col:73, col:93> col:93 callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x563f2eb97138 <col:103, col:109> col:109 user_data 'void *'
| `-ParmVarDecl 0x563f2eb971b0 <col:120, col:137> col:129 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x563f2ebdda68 <col:137> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x563f2ebdda48 <col:137> 'int' 0
|-CXXMethodDecl 0x563f2eb97718 <line:74:5, col:140> col:17 add_write_handler 'void (const Element *, const String &, WriteHandlerCallback, void *, uint32_t)' static
| |-ParmVarDecl 0x563f2eb973e0 <col:35, col:50> col:50 e 'const Element *'
| |-ParmVarDecl 0x563f2eb97458 <col:53, col:67> col:67 hname 'const String &'
| |-ParmVarDecl 0x563f2eb974d0 <col:74, col:95> col:95 callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x563f2eb97550 <col:105, col:111> col:111 user_data 'void *'
| `-ParmVarDecl 0x563f2eb975c8 <col:122, col:139> col:131 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x563f2ebddaa0 <col:139> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x563f2ebdda80 <col:139> 'int' 0
|-CXXMethodDecl 0x563f2eb97bc8 <line:75:5, col:161> col:17 set_handler 'void (const Element *, const String &, uint32_t, HandlerCallback, void *, void *)' static
| |-ParmVarDecl 0x563f2eb977f0 <col:29, col:44> col:44 e 'const Element *'
| |-ParmVarDecl 0x563f2eb97868 <col:47, col:61> col:61 hname 'const String &'
| |-ParmVarDecl 0x563f2eb978e0 <col:68, col:77> col:77 flags 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x563f2eb97958 <col:84, col:100> col:100 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x563f2eb979d8 <col:110, col:133> col:116 read_user_data 'void *' cinit
| | `-ImplicitCastExpr 0x563f2ebddad8 <col:133> 'void *' <NullToPointer>
| |   `-IntegerLiteral 0x563f2ebddab8 <col:133> 'int' 0
| `-ParmVarDecl 0x563f2eb97a58 <col:136, col:160> col:142 write_user_data 'void *' cinit
|   `-ImplicitCastExpr 0x563f2ebddb10 <col:160> 'void *' <NullToPointer>
|     `-IntegerLiteral 0x563f2ebddaf0 <col:160> 'int' 0
|-CXXMethodDecl 0x563f2eb97f60 <line:76:5, col:117> col:16 set_handler_flags 'int (const Element *, const String &, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x563f2eb97ca8 <col:34, col:49> col:49 e 'const Element *'
| |-ParmVarDecl 0x563f2eb97d20 <col:52, col:66> col:66 hname 'const String &'
| |-ParmVarDecl 0x563f2eb97d98 <col:73, col:82> col:82 set_flags 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x563f2eb97e10 <col:93, col:116> col:102 clear_flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x563f2ebddb48 <col:116> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x563f2ebddb28 <col:116> 'int' 0
|-EnumDecl 0x563f2eb98020 <line:78:5, col:46> col:5
| `-EnumConstantDecl 0x563f2eb98120 <col:12, col:35> col:12 FIRST_GLOBAL_HANDLER 'Router::(anonymous enum at ../dummy_inc/click/router.hh:78:5)'
|   `-ImplicitCastExpr 0x563f2eb98170 <col:35> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x563f2eb98100 <col:35> 'int' Int: 1073741824
|       `-IntegerLiteral 0x563f2eb980e0 <col:35> 'int' 1073741824
|-CXXMethodDecl 0x563f2eb982f0 <line:79:5, col:60> col:16 hindex 'int (const Element *, const String &)' static
| |-ParmVarDecl 0x563f2eb98198 <col:23, col:38> col:38 e 'const Element *'
| `-ParmVarDecl 0x563f2eb98210 <col:41, col:55> col:55 hname 'const String &'
|-CXXMethodDecl 0x563f2eb98508 <line:80:5, col:67> col:27 handler 'const Handler *(const Router *, int)' static
| |-ParmVarDecl 0x563f2eb983b0 <col:35, col:49> col:49 router 'const Router *'
| `-ParmVarDecl 0x563f2eb98430 <col:57, col:61> col:61 hindex 'int'
|-CXXMethodDecl 0x563f2eb98838 <line:81:5, col:71> col:17 element_hindexes 'void (const Element *, Vector<int> &)' static
| |-ParmVarDecl 0x563f2eb985c8 <col:34, col:49> col:49 e 'const Element *'
| `-ParmVarDecl 0x563f2eb98720 <col:52, col:65> col:65 result 'Vector<int> &'
|-CXXMethodDecl 0x563f2eb989c0 <line:84:5, col:43> col:11 attachment 'void *(const String &) const'
| `-ParmVarDecl 0x563f2eb988f8 <col:22, col:36> col:36 aname 'const String &'
|-CXXMethodDecl 0x563f2eb98b40 <line:85:5, col:48> col:12 force_attachment 'void *&(const String &)'
| `-ParmVarDecl 0x563f2eb98a78 <col:29, col:43> col:43 aname 'const String &'
|-CXXMethodDecl 0x563f2eb98d50 <line:86:5, col:58> col:11 set_attachment 'void *(const String &, void *)'
| |-ParmVarDecl 0x563f2eb98bf8 <col:26, col:40> col:40 aname 'const String &'
| `-ParmVarDecl 0x563f2eb98c78 <col:47, col:53> col:53 value 'void *'
|-CXXMethodDecl 0x563f2eb9a7d8 <line:88:5, col:63> col:19 chatter_channel 'ErrorHandler *(const String &) const'
| `-ParmVarDecl 0x563f2eb9a710 <col:35, col:49> col:49 channel_name 'const String &'
|-CXXMethodDecl 0x563f2eb9a8f8 <line:89:5, col:43> col:27 arena_factory 'HashMap_ArenaFactory *() const'
|-CXXMethodDecl 0x563f2eb9a9e8 <line:91:5, col:40> col:25 thread_sched 'ThreadSched *() const' inline
|-CXXMethodDecl 0x563f2eb9ab58 <line:92:5, col:56> col:17 set_thread_sched 'void (ThreadSched *)' inline
| `-ParmVarDecl 0x563f2eb9aa98 <col:34, col:47> col:47 scheduler 'ThreadSched *'
|-CXXMethodDecl 0x563f2eb9ace0 <line:93:5, col:49> col:16 home_thread_id 'int (const Element *) const' inline
| `-ParmVarDecl 0x563f2eb9ac10 <col:31, col:46> col:46 e 'const Element *'
|-CXXMethodDecl 0x563f2eb9aee8 <line:94:5, col:69> col:17 set_home_thread_id 'void (const Element *, int)' inline
| |-ParmVarDecl 0x563f2eb9ad98 <col:36, col:51> col:51 e 'const Element *'
| `-ParmVarDecl 0x563f2eb9ae18 <col:54, col:58> col:58 home_thread 'int'
|-CXXMethodDecl 0x563f2eb9b018 <line:98:5, col:34> col:22 name_info 'NameInfo *() const' inline
|-CXXMethodDecl 0x563f2eb9b108 <line:99:5, col:31> col:15 force_name_info 'NameInfo *()'
|-CXXMethodDecl 0x563f2eb9b1c8 <line:103:5, col:35> col:12 configuration_string 'String () const'
|-CXXMethodDecl 0x563f2eb9b3c8 <line:104:5, col:68> col:10 unparse 'void (StringAccum &, const String &) const'
| |-ParmVarDecl 0x563f2eb9b278 <col:18, col:31> col:31 sa 'StringAccum &'
| `-ParmVarDecl 0x563f2eb9b2f0 <col:35, col:65> col:49 indent 'const String &' cinit
|   `-ExprWithCleanups 0x563f2ebddbf8 <col:58, col:65> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x563f2ebddbe0 <col:58, col:65> 'const String' lvalue
|       `-ImplicitCastExpr 0x563f2ebddbc8 <col:58, col:65> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x563f2ebddba8 <col:58, col:65> 'String' (CXXTemporary 0x563f2ebddba8)
|           `-CXXTemporaryObjectExpr 0x563f2ebddb70 <col:58, col:65> 'String' 'void ()'
|-CXXMethodDecl 0x563f2eb9b598 <line:105:5, col:81> col:10 unparse_requirements 'void (StringAccum &, const String &) const'
| |-ParmVarDecl 0x563f2eb9b488 <col:31, col:44> col:44 sa 'StringAccum &'
| `-ParmVarDecl 0x563f2eb9b500 <col:48, col:78> col:62 indent 'const String &' cinit
|   `-ExprWithCleanups 0x563f2ebddca8 <col:71, col:78> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x563f2ebddc90 <col:71, col:78> 'const String' lvalue
|       `-ImplicitCastExpr 0x563f2ebddc78 <col:71, col:78> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x563f2ebddc58 <col:71, col:78> 'String' (CXXTemporary 0x563f2ebddc58)
|           `-CXXTemporaryObjectExpr 0x563f2ebddc20 <col:71, col:78> 'String' 'void ()'
|-CXXMethodDecl 0x563f2eb9b768 <line:106:5, col:81> col:10 unparse_declarations 'void (StringAccum &, const String &) const'
| |-ParmVarDecl 0x563f2eb9b658 <col:31, col:44> col:44 sa 'StringAccum &'
| `-ParmVarDecl 0x563f2eb9b6d0 <col:48, col:78> col:62 indent 'const String &' cinit
|   `-ExprWithCleanups 0x563f2ebddd58 <col:71, col:78> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x563f2ebddd40 <col:71, col:78> 'const String' lvalue
|       `-ImplicitCastExpr 0x563f2ebddd28 <col:71, col:78> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x563f2ebddd08 <col:71, col:78> 'String' (CXXTemporary 0x563f2ebddd08)
|           `-CXXTemporaryObjectExpr 0x563f2ebddcd0 <col:71, col:78> 'String' 'void ()'
|-CXXMethodDecl 0x563f2eb9b938 <line:107:5, col:80> col:10 unparse_connections 'void (StringAccum &, const String &) const'
| |-ParmVarDecl 0x563f2eb9b828 <col:30, col:43> col:43 sa 'StringAccum &'
| `-ParmVarDecl 0x563f2eb9b8a0 <col:47, col:77> col:61 indent 'const String &' cinit
|   `-ExprWithCleanups 0x563f2ebdde08 <col:70, col:77> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x563f2ebdddf0 <col:70, col:77> 'const String' lvalue
|       `-ImplicitCastExpr 0x563f2ebdddd8 <col:70, col:77> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x563f2ebdddb8 <col:70, col:77> 'String' (CXXTemporary 0x563f2ebdddb8)
|           `-CXXTemporaryObjectExpr 0x563f2ebddd80 <col:70, col:77> 'String' 'void ()'
|-CXXMethodDecl 0x563f2eb9bab8 <line:109:5, col:51> col:12 element_ports_string 'String (const Element *) const'
| `-ParmVarDecl 0x563f2eb9b9f8 <col:33, col:48> col:48 e 'const Element *'
|-CXXConstructorDecl 0x563f2eb9bcd8 <line:115:5, col:55> col:5 Router 'void (const String &, Master *)'
| |-ParmVarDecl 0x563f2eb9bb70 <col:12, col:26> col:26 configuration 'const String &'
| `-ParmVarDecl 0x563f2eb9bbe8 <col:41, col:49> col:49 master 'Master *'
|-CXXDestructorDecl 0x563f2eb9bdd8 <line:116:5, col:13> col:5 ~Router 'void ()' noexcept-unevaluated 0x563f2eb9bdd8
|-CXXMethodDecl 0x563f2eb9bee0 <line:118:5, col:35> col:17 static_initialize 'void ()' static
|-CXXMethodDecl 0x563f2eb9bfa0 <line:119:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x563f2eb9c060 <line:121:5, col:21> col:17 use 'void ()' inline
|-CXXMethodDecl 0x563f2eb9c120 <line:122:5, col:16> col:10 unuse 'void ()'
|-CXXMethodDecl 0x563f2eb9c318 <line:124:5, col:65> col:10 add_requirement 'void (const String &, const String &)'
| |-ParmVarDecl 0x563f2eb9c1d0 <col:26, col:40> col:40 type 'const String &'
| `-ParmVarDecl 0x563f2eb9c248 <col:46, col:60> col:60 value 'const String &'
|-CXXMethodDecl 0x563f2eb9c6d0 <line:125:5, col:112> col:9 add_element 'int (Element *, const String &, const String &, const String &, unsigned int)'
| |-ParmVarDecl 0x563f2eb9c3d8 <col:21, col:30> col:30 e 'Element *'
| |-ParmVarDecl 0x563f2eb9c450 <col:33, col:47> col:47 name 'const String &'
| |-ParmVarDecl 0x563f2eb9c4c8 <col:53, col:67> col:67 conf 'const String &'
| |-ParmVarDecl 0x563f2eb9c540 <col:73, col:87> col:87 filename 'const String &'
| `-ParmVarDecl 0x563f2eb9c5c0 <col:97, col:106> col:106 lineno 'unsigned int'
|-CXXMethodDecl 0x563f2eb9ca30 <line:126:5, col:76> col:9 add_connection 'int (int, int, int, int)'
| |-ParmVarDecl 0x563f2eb9c7b0 <col:24, col:28> col:28 from_idx 'int'
| |-ParmVarDecl 0x563f2eb9c830 <col:38, col:42> col:42 from_port 'int'
| |-ParmVarDecl 0x563f2eb9c8b0 <col:53, col:57> col:57 to_idx 'int'
| `-ParmVarDecl 0x563f2eb9c930 <col:65, col:69> col:69 to_port 'int'
|-CXXMethodDecl 0x563f2eb9cb10 <line:131:5, col:37> col:20 hotswap_router 'Router *() const' inline
|-CXXMethodDecl 0x563f2eb9cc50 <line:132:5, col:43> col:10 set_hotswap_router 'void (Router *)'
| `-ParmVarDecl 0x563f2eb9cbc0 <col:29, col:37> col:37 router 'Router *'
|-CXXMethodDecl 0x563f2eb9cda0 <line:134:5, col:38> col:9 initialize 'int (ErrorHandler *)'
| `-ParmVarDecl 0x563f2eb9cd08 <col:20, col:34> col:34 errh 'ErrorHandler *'
|-CXXMethodDecl 0x563f2eb9cfa8 <line:135:5, col:54> col:10 used activate 'void (bool, ErrorHandler *)'
| |-ParmVarDecl 0x563f2eb9ce58 <col:19, col:24> col:24 foreground 'bool'
| `-ParmVarDecl 0x563f2eb9ced0 <col:36, col:50> col:50 errh 'ErrorHandler *'
|-CXXMethodDecl 0x563f2eb9d0f8 <line:136:5, col:44> col:17 activate 'void (ErrorHandler *)' inline
| `-ParmVarDecl 0x563f2eb9d068 <col:26, col:40> col:40 errh 'ErrorHandler *'
|-CXXMethodDecl 0x563f2eb9d240 <line:137:5, col:47> col:17 set_foreground 'void (bool)' inline
| `-ParmVarDecl 0x563f2eb9d1b0 <col:32, col:37> col:37 foreground 'bool'
|-CXXMethodDecl 0x563f2eb9d480 <line:139:5, col:69> col:9 new_notifier_signal 'int (const char *, NotifierSignal &)'
| |-ParmVarDecl 0x563f2eb9d300 <col:29, col:41> col:41 name 'const char *'
| `-ParmVarDecl 0x563f2eb9d3a8 <col:47, col:63> col:63 signal 'NotifierSignal &'
|-CXXMethodDecl 0x563f2eb9d608 <line:140:5, col:64> col:12 notifier_signal_name 'String (const atomic_uint32_t *) const'
| `-ParmVarDecl 0x563f2eb9d540 <col:33, col:56> col:56 signal 'const atomic_uint32_t *'
|-CXXRecordDecl 0x563f2eb9d6b0 <line:145:5, line:167:5> line:145:12 referenced struct Port definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x563f2eb9d7c8 <col:5, col:12> col:12 implicit referenced struct Port
| |-FieldDecl 0x563f2eb9d870 <line:146:9, col:13> col:13 referenced idx 'int'
| |-FieldDecl 0x563f2eb9d8d8 <line:147:9, col:13> col:13 referenced port 'int'
| |-CXXConstructorDecl 0x563f2eb9d990 <line:149:9, line:150:9> line:149:9 used Port 'void ()'
| | `-CompoundStmt 0x563f2ebdde30 <col:16, line:150:9>
| |-CXXConstructorDecl 0x563f2eb9db68 <line:151:9, line:153:9> line:151:9 used Port 'void (int, int)'
| | |-ParmVarDecl 0x563f2eb9da50 <col:14, col:18> col:18 used i 'int'
| | |-ParmVarDecl 0x563f2eb9dad0 <col:21, col:25> col:25 used p 'int'
| | |-CXXCtorInitializer Field 0x563f2eb9d870 'idx' 'int'
| | | `-ImplicitCastExpr 0x563f2ebdde80 <line:152:19> 'int' <LValueToRValue>
| | |   `-DeclRefExpr 0x563f2ebdde40 <col:19> 'int' lvalue ParmVar 0x563f2eb9da50 'i' 'int'
| | |-CXXCtorInitializer Field 0x563f2eb9d8d8 'port' 'int'
| | | `-ImplicitCastExpr 0x563f2ebddf00 <col:28> 'int' <LValueToRValue>
| | |   `-DeclRefExpr 0x563f2ebddec0 <col:28> 'int' lvalue ParmVar 0x563f2eb9dad0 'p' 'int'
| | `-CompoundStmt 0x563f2ebddf50 <col:31, line:153:9>
| |-CXXMethodDecl 0x563f2eb9dd48 <line:155:9, line:157:9> line:155:14 used operator== 'bool (const Router::Port &) const'
| | |-ParmVarDecl 0x563f2eb9dc58 <col:25, col:37> col:37 used x 'const Router::Port &'
| | `-CompoundStmt 0x563f2ebde150 <col:46, line:157:9>
| |   `-ReturnStmt 0x563f2ebde140 <line:156:13, col:46>
| |     `-BinaryOperator 0x563f2ebde120 <col:20, col:46> 'bool' '&&'
| |       |-BinaryOperator 0x563f2ebde020 <col:20, col:29> 'bool' '=='
| |       | |-ImplicitCastExpr 0x563f2ebddff0 <col:20> 'int' <LValueToRValue>
| |       | | `-MemberExpr 0x563f2ebddf70 <col:20> 'const int' lvalue ->idx 0x563f2eb9d870
| |       | |   `-CXXThisExpr 0x563f2ebddf60 <col:20> 'const Router::Port *' implicit this
| |       | `-ImplicitCastExpr 0x563f2ebde008 <col:27, col:29> 'int' <LValueToRValue>
| |       |   `-MemberExpr 0x563f2ebddfc0 <col:27, col:29> 'const int' lvalue .idx 0x563f2eb9d870
| |       |     `-DeclRefExpr 0x563f2ebddfa0 <col:27> 'const Router::Port' lvalue ParmVar 0x563f2eb9dc58 'x' 'const Router::Port &'
| |       `-BinaryOperator 0x563f2ebde100 <col:36, col:46> 'bool' '=='
| |         |-ImplicitCastExpr 0x563f2ebde0d0 <col:36> 'int' <LValueToRValue>
| |         | `-MemberExpr 0x563f2ebde050 <col:36> 'const int' lvalue ->port 0x563f2eb9d8d8
| |         |   `-CXXThisExpr 0x563f2ebde040 <col:36> 'const Router::Port *' implicit this
| |         `-ImplicitCastExpr 0x563f2ebde0e8 <col:44, col:46> 'int' <LValueToRValue>
| |           `-MemberExpr 0x563f2ebde0a0 <col:44, col:46> 'const int' lvalue .port 0x563f2eb9d8d8
| |             `-DeclRefExpr 0x563f2ebde080 <col:44> 'const Router::Port' lvalue ParmVar 0x563f2eb9dc58 'x' 'const Router::Port &'
| |-CXXMethodDecl 0x563f2eb9de90 <line:158:9, line:160:9> line:158:14 operator!= 'bool (const Router::Port &) const'
| | |-ParmVarDecl 0x563f2eb9de00 <col:25, col:37> col:37 used x 'const Router::Port &'
| | `-CompoundStmt 0x563f2ebde358 <col:46, line:160:9>
| |   `-ReturnStmt 0x563f2ebde348 <line:159:13, col:46>
| |     `-BinaryOperator 0x563f2ebde328 <col:20, col:46> 'bool' '||'
| |       |-BinaryOperator 0x563f2ebde228 <col:20, col:29> 'bool' '!='
| |       | |-ImplicitCastExpr 0x563f2ebde1f8 <col:20> 'int' <LValueToRValue>
| |       | | `-MemberExpr 0x563f2ebde178 <col:20> 'const int' lvalue ->idx 0x563f2eb9d870
| |       | |   `-CXXThisExpr 0x563f2ebde168 <col:20> 'const Router::Port *' implicit this
| |       | `-ImplicitCastExpr 0x563f2ebde210 <col:27, col:29> 'int' <LValueToRValue>
| |       |   `-MemberExpr 0x563f2ebde1c8 <col:27, col:29> 'const int' lvalue .idx 0x563f2eb9d870
| |       |     `-DeclRefExpr 0x563f2ebde1a8 <col:27> 'const Router::Port' lvalue ParmVar 0x563f2eb9de00 'x' 'const Router::Port &'
| |       `-BinaryOperator 0x563f2ebde308 <col:36, col:46> 'bool' '!='
| |         |-ImplicitCastExpr 0x563f2ebde2d8 <col:36> 'int' <LValueToRValue>
| |         | `-MemberExpr 0x563f2ebde258 <col:36> 'const int' lvalue ->port 0x563f2eb9d8d8
| |         |   `-CXXThisExpr 0x563f2ebde248 <col:36> 'const Router::Port *' implicit this
| |         `-ImplicitCastExpr 0x563f2ebde2f0 <col:44, col:46> 'int' <LValueToRValue>
| |           `-MemberExpr 0x563f2ebde2a8 <col:44, col:46> 'const int' lvalue .port 0x563f2eb9d8d8
| |             `-DeclRefExpr 0x563f2ebde288 <col:44> 'const Router::Port' lvalue ParmVar 0x563f2eb9de00 'x' 'const Router::Port &'
| |-CXXMethodDecl 0x563f2eb9dfd8 <line:161:9, line:163:9> line:161:14 used operator< 'bool (const Router::Port &) const'
| | |-ParmVarDecl 0x563f2eb9df48 <col:24, col:36> col:36 used x 'const Router::Port &'
| | `-CompoundStmt 0x563f2ebde680 <col:45, line:163:9>
| |   `-ReturnStmt 0x563f2ebde670 <line:162:13, col:65>
| |     `-BinaryOperator 0x563f2ebde650 <col:20, col:65> 'bool' '||'
| |       |-BinaryOperator 0x563f2ebde430 <col:20, col:28> 'bool' '<'
| |       | |-ImplicitCastExpr 0x563f2ebde400 <col:20> 'int' <LValueToRValue>
| |       | | `-MemberExpr 0x563f2ebde380 <col:20> 'const int' lvalue ->idx 0x563f2eb9d870
| |       | |   `-CXXThisExpr 0x563f2ebde370 <col:20> 'const Router::Port *' implicit this
| |       | `-ImplicitCastExpr 0x563f2ebde418 <col:26, col:28> 'int' <LValueToRValue>
| |       |   `-MemberExpr 0x563f2ebde3d0 <col:26, col:28> 'const int' lvalue .idx 0x563f2eb9d870
| |       |     `-DeclRefExpr 0x563f2ebde3b0 <col:26> 'const Router::Port' lvalue ParmVar 0x563f2eb9df48 'x' 'const Router::Port &'
| |       `-ParenExpr 0x563f2ebde630 <col:35, col:65> 'bool'
| |         `-BinaryOperator 0x563f2ebde610 <col:36, col:61> 'bool' '&&'
| |           |-BinaryOperator 0x563f2ebde510 <col:36, col:45> 'bool' '=='
| |           | |-ImplicitCastExpr 0x563f2ebde4e0 <col:36> 'int' <LValueToRValue>
| |           | | `-MemberExpr 0x563f2ebde460 <col:36> 'const int' lvalue ->idx 0x563f2eb9d870
| |           | |   `-CXXThisExpr 0x563f2ebde450 <col:36> 'const Router::Port *' implicit this
| |           | `-ImplicitCastExpr 0x563f2ebde4f8 <col:43, col:45> 'int' <LValueToRValue>
| |           |   `-MemberExpr 0x563f2ebde4b0 <col:43, col:45> 'const int' lvalue .idx 0x563f2eb9d870
| |           |     `-DeclRefExpr 0x563f2ebde490 <col:43> 'const Router::Port' lvalue ParmVar 0x563f2eb9df48 'x' 'const Router::Port &'
| |           `-BinaryOperator 0x563f2ebde5f0 <col:52, col:61> 'bool' '<'
| |             |-ImplicitCastExpr 0x563f2ebde5c0 <col:52> 'int' <LValueToRValue>
| |             | `-MemberExpr 0x563f2ebde540 <col:52> 'const int' lvalue ->port 0x563f2eb9d8d8
| |             |   `-CXXThisExpr 0x563f2ebde530 <col:52> 'const Router::Port *' implicit this
| |             `-ImplicitCastExpr 0x563f2ebde5d8 <col:59, col:61> 'int' <LValueToRValue>
| |               `-MemberExpr 0x563f2ebde590 <col:59, col:61> 'const int' lvalue .port 0x563f2eb9d8d8
| |                 `-DeclRefExpr 0x563f2ebde570 <col:59> 'const Router::Port' lvalue ParmVar 0x563f2eb9df48 'x' 'const Router::Port &'
| |-CXXMethodDecl 0x563f2eb9e120 <line:164:9, line:166:9> line:164:14 operator<= 'bool (const Router::Port &) const'
| | |-ParmVarDecl 0x563f2eb9e090 <col:25, col:37> col:37 used x 'const Router::Port &'
| | `-CompoundStmt 0x563f2ebde9a8 <col:46, line:166:9>
| |   `-ReturnStmt 0x563f2ebde998 <line:165:13, col:66>
| |     `-BinaryOperator 0x563f2ebde978 <col:20, col:66> 'bool' '||'
| |       |-BinaryOperator 0x563f2ebde758 <col:20, col:28> 'bool' '<'
| |       | |-ImplicitCastExpr 0x563f2ebde728 <col:20> 'int' <LValueToRValue>
| |       | | `-MemberExpr 0x563f2ebde6a8 <col:20> 'const int' lvalue ->idx 0x563f2eb9d870
| |       | |   `-CXXThisExpr 0x563f2ebde698 <col:20> 'const Router::Port *' implicit this
| |       | `-ImplicitCastExpr 0x563f2ebde740 <col:26, col:28> 'int' <LValueToRValue>
| |       |   `-MemberExpr 0x563f2ebde6f8 <col:26, col:28> 'const int' lvalue .idx 0x563f2eb9d870
| |       |     `-DeclRefExpr 0x563f2ebde6d8 <col:26> 'const Router::Port' lvalue ParmVar 0x563f2eb9e090 'x' 'const Router::Port &'
| |       `-ParenExpr 0x563f2ebde958 <col:35, col:66> 'bool'
| |         `-BinaryOperator 0x563f2ebde938 <col:36, col:62> 'bool' '&&'
| |           |-BinaryOperator 0x563f2ebde838 <col:36, col:45> 'bool' '=='
| |           | |-ImplicitCastExpr 0x563f2ebde808 <col:36> 'int' <LValueToRValue>
| |           | | `-MemberExpr 0x563f2ebde788 <col:36> 'const int' lvalue ->idx 0x563f2eb9d870
| |           | |   `-CXXThisExpr 0x563f2ebde778 <col:36> 'const Router::Port *' implicit this
| |           | `-ImplicitCastExpr 0x563f2ebde820 <col:43, col:45> 'int' <LValueToRValue>
| |           |   `-MemberExpr 0x563f2ebde7d8 <col:43, col:45> 'const int' lvalue .idx 0x563f2eb9d870
| |           |     `-DeclRefExpr 0x563f2ebde7b8 <col:43> 'const Router::Port' lvalue ParmVar 0x563f2eb9e090 'x' 'const Router::Port &'
| |           `-BinaryOperator 0x563f2ebde918 <col:52, col:62> 'bool' '<='
| |             |-ImplicitCastExpr 0x563f2ebde8e8 <col:52> 'int' <LValueToRValue>
| |             | `-MemberExpr 0x563f2ebde868 <col:52> 'const int' lvalue ->port 0x563f2eb9d8d8
| |             |   `-CXXThisExpr 0x563f2ebde858 <col:52> 'const Router::Port *' implicit this
| |             `-ImplicitCastExpr 0x563f2ebde900 <col:60, col:62> 'int' <LValueToRValue>
| |               `-MemberExpr 0x563f2ebde8b8 <col:60, col:62> 'const int' lvalue .port 0x563f2eb9d8d8
| |                 `-DeclRefExpr 0x563f2ebde898 <col:60> 'const Router::Port' lvalue ParmVar 0x563f2eb9e090 'x' 'const Router::Port &'
| |-CXXConstructorDecl 0x563f2ebde9c0 <line:145:12> col:12 implicit constexpr Port 'void (const Router::Port &)' inline default trivial noexcept-unevaluated 0x563f2ebde9c0
| | `-ParmVarDecl 0x563f2ebdead8 <col:12> col:12 'const Router::Port &'
| |-CXXConstructorDecl 0x563f2ebdeb78 <col:12> col:12 implicit constexpr Port 'void (Router::Port &&)' inline default trivial noexcept-unevaluated 0x563f2ebdeb78
| | `-ParmVarDecl 0x563f2ebdec88 <col:12> col:12 'Router::Port &&'
| |-CXXDestructorDecl 0x563f2ebded20 <col:12> col:12 implicit referenced ~Port 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x563f2ebdeff0 <col:12> col:12 implicit operator= 'Router::Port &(const Router::Port &)' inline default trivial noexcept-unevaluated 0x563f2ebdeff0
| | `-ParmVarDecl 0x563f2ebdf0f8 <col:12> col:12 'const Router::Port &'
| `-CXXMethodDecl 0x563f2ebdf168 <col:12> col:12 implicit used operator= 'Router::Port &(Router::Port &&) noexcept' inline default trivial
|   |-ParmVarDecl 0x563f2ebdf278 <col:12> col:12 used 'Router::Port &&'
|   `-CompoundStmt 0x563f2ebdf598 <col:12>
|     |-BinaryOperator 0x563f2ebdf438 <col:12> 'int' lvalue '='
|     | |-MemberExpr 0x563f2ebdf3f0 <col:12> 'int' lvalue ->idx 0x563f2eb9d870
|     | | `-CXXThisExpr 0x563f2ebdf3e0 <col:12> 'Router::Port *' this
|     | `-ImplicitCastExpr 0x563f2ebdf420 <col:12> 'int' <LValueToRValue>
|     |   `-MemberExpr 0x563f2ebdf3b0 <col:12> 'int' xvalue .idx 0x563f2eb9d870
|     |     `-CXXStaticCastExpr 0x563f2ebdf380 <col:12> 'Router::Port' xvalue static_cast<struct Router::Port &&> <NoOp>
|     |       `-DeclRefExpr 0x563f2ebdf350 <col:12> 'Router::Port' lvalue ParmVar 0x563f2ebdf278 '' 'Router::Port &&'
|     |-BinaryOperator 0x563f2ebdf540 <col:12> 'int' lvalue '='
|     | |-MemberExpr 0x563f2ebdf4f8 <col:12> 'int' lvalue ->port 0x563f2eb9d8d8
|     | | `-CXXThisExpr 0x563f2ebdf4e8 <col:12> 'Router::Port *' this
|     | `-ImplicitCastExpr 0x563f2ebdf528 <col:12> 'int' <LValueToRValue>
|     |   `-MemberExpr 0x563f2ebdf4b8 <col:12> 'int' xvalue .port 0x563f2eb9d8d8
|     |     `-CXXStaticCastExpr 0x563f2ebdf488 <col:12> 'Router::Port' xvalue static_cast<struct Router::Port &&> <NoOp>
|     |       `-DeclRefExpr 0x563f2ebdf458 <col:12> 'Router::Port' lvalue ParmVar 0x563f2ebdf278 '' 'Router::Port &&'
|     `-ReturnStmt 0x563f2ebdf588 <col:12>
|       `-UnaryOperator 0x563f2ebdf570 <col:12> 'Router::Port' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x563f2ebdf560 <col:12> 'Router::Port *' this
|-CXXRecordDecl 0x563f2eb9e1e0 <line:169:5, line:194:5> line:169:12 referenced struct Connection definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x563f2eb9e2f8 <col:5, col:12> col:12 implicit referenced struct Connection
| |-FieldDecl 0x563f2eb9e4e8 <line:170:9, col:17> col:14 referenced p 'Router::Port [2]'
| |-CXXConstructorDecl 0x563f2eb9e5a0 <line:172:9, line:173:9> line:172:9 Connection 'void ()'
| | |-CXXCtorInitializer Field 0x563f2eb9e4e8 'p' 'Router::Port [2]'
| | | `-CXXConstructExpr 0x563f2ebdecf8 <col:9> 'Router::Port [2]' 'void ()'
| | `-CompoundStmt 0x563f2ebdee30 <col:22, line:173:9>
| |-CXXConstructorDecl 0x563f2eb9e8d8 <line:174:9, line:177:9> line:174:9 Connection 'void (int, int, int, int)'
| | |-ParmVarDecl 0x563f2eb9e660 <col:20, col:24> col:24 used from_idx 'int'
| | |-ParmVarDecl 0x563f2eb9e6e0 <col:34, col:38> col:38 used from_port 'int'
| | |-ParmVarDecl 0x563f2eb9e760 <col:49, col:53> col:53 used to_idx 'int'
| | |-ParmVarDecl 0x563f2eb9e7e0 <col:61, col:65> col:65 used to_port 'int'
| | |-CXXCtorInitializer Field 0x563f2eb9e4e8 'p' 'Router::Port [2]'
| | | `-CXXConstructExpr 0x563f2ebdee40 <col:9> 'Router::Port [2]' 'void ()'
| | `-CompoundStmt 0x563f2ebdf878 <col:74, line:177:9>
| |   |-ExprWithCleanups 0x563f2ebdf668 <line:175:13, col:40> 'Router::Port' lvalue
| |   | `-CXXOperatorCallExpr 0x563f2ebdf630 <col:13, col:40> 'Router::Port' lvalue
| |   |   |-ImplicitCastExpr 0x563f2ebdf618 <col:18> 'Router::Port &(*)(Router::Port &&) noexcept' <FunctionToPointerDecay>
| |   |   | `-DeclRefExpr 0x563f2ebdf300 <col:18> 'Router::Port &(Router::Port &&) noexcept' lvalue CXXMethod 0x563f2ebdf168 'operator=' 'Router::Port &(Router::Port &&) noexcept'
| |   |   |-ArraySubscriptExpr 0x563f2ebdef10 <col:13, col:16> 'Router::Port' lvalue
| |   |   | |-ImplicitCastExpr 0x563f2ebdeef8 <col:13> 'Router::Port *' <ArrayToPointerDecay>
| |   |   | | `-MemberExpr 0x563f2ebdeea8 <col:13> 'Router::Port [2]' lvalue ->p 0x563f2eb9e4e8
| |   |   | |   `-CXXThisExpr 0x563f2ebdee98 <col:13> 'Router::Connection *' implicit this
| |   |   | `-IntegerLiteral 0x563f2ebdeed8 <col:15> 'int' 0
| |   |   `-MaterializeTemporaryExpr 0x563f2ebdf2e8 <col:20, col:40> 'Router::Port' xvalue
| |   |     `-CXXTemporaryObjectExpr 0x563f2ebdefb0 <col:20, col:40> 'Router::Port' 'void (int, int)'
| |   |       |-ImplicitCastExpr 0x563f2ebdef80 <col:25> 'int' <LValueToRValue>
| |   |       | `-DeclRefExpr 0x563f2ebdef40 <col:25> 'int' lvalue ParmVar 0x563f2eb9e760 'to_idx' 'int'
| |   |       `-ImplicitCastExpr 0x563f2ebdef98 <col:33> 'int' <LValueToRValue>
| |   |         `-DeclRefExpr 0x563f2ebdef60 <col:33> 'int' lvalue ParmVar 0x563f2eb9e7e0 'to_port' 'int'
| |   `-ExprWithCleanups 0x563f2ebdf860 <line:176:13, col:44> 'Router::Port' lvalue
| |     `-CXXOperatorCallExpr 0x563f2ebdf828 <col:13, col:44> 'Router::Port' lvalue
| |       |-ImplicitCastExpr 0x563f2ebdf810 <col:18> 'Router::Port &(*)(Router::Port &&) noexcept' <FunctionToPointerDecay>
| |       | `-DeclRefExpr 0x563f2ebdf7f0 <col:18> 'Router::Port &(Router::Port &&) noexcept' lvalue CXXMethod 0x563f2ebdf168 'operator=' 'Router::Port &(Router::Port &&) noexcept'
| |       |-ArraySubscriptExpr 0x563f2ebdf6f8 <col:13, col:16> 'Router::Port' lvalue
| |       | |-ImplicitCastExpr 0x563f2ebdf6e0 <col:13> 'Router::Port *' <ArrayToPointerDecay>
| |       | | `-MemberExpr 0x563f2ebdf690 <col:13> 'Router::Port [2]' lvalue ->p 0x563f2eb9e4e8
| |       | |   `-CXXThisExpr 0x563f2ebdf680 <col:13> 'Router::Connection *' implicit this
| |       | `-IntegerLiteral 0x563f2ebdf6c0 <col:15> 'int' 1
| |       `-MaterializeTemporaryExpr 0x563f2ebdf7d8 <col:20, col:44> 'Router::Port' xvalue
| |         `-CXXTemporaryObjectExpr 0x563f2ebdf798 <col:20, col:44> 'Router::Port' 'void (int, int)'
| |           |-ImplicitCastExpr 0x563f2ebdf768 <col:25> 'int' <LValueToRValue>
| |           | `-DeclRefExpr 0x563f2ebdf728 <col:25> 'int' lvalue ParmVar 0x563f2eb9e660 'from_idx' 'int'
| |           `-ImplicitCastExpr 0x563f2ebdf780 <col:35> 'int' <LValueToRValue>
| |             `-DeclRefExpr 0x563f2ebdf748 <col:35> 'int' lvalue ParmVar 0x563f2eb9e6e0 'from_port' 'int'
| |-CXXMethodDecl 0x563f2eb9eaa8 <line:179:9, line:182:9> line:179:21 operator[] 'const Router::Port &(int) const'
| | |-ParmVarDecl 0x563f2eb9e9b8 <col:32, col:36> col:36 used i 'int'
| | `-CompoundStmt 0x563f2ebdfe38 <col:45, line:182:9>
| |   |-ParenExpr 0x563f2ebdfd18 <line:180:13, col:169> 'void'
| |   | `-ConditionalOperator 0x563f2ebdfce8 <col:14, col:168> 'void'
| |   |   |-CXXStaticCastExpr 0x563f2ebdf9b8 <col:14, col:49> 'bool' static_cast<_Bool> <NoOp>
| |   |   | `-BinaryOperator 0x563f2ebdf988 <col:34, col:48> 'bool' '&&'
| |   |   |   |-BinaryOperator 0x563f2ebdf8f0 <col:34, col:39> 'bool' '>='
| |   |   |   | |-ImplicitCastExpr 0x563f2ebdf8d8 <col:34> 'int' <LValueToRValue>
| |   |   |   | | `-DeclRefExpr 0x563f2ebdf898 <col:34> 'int' lvalue ParmVar 0x563f2eb9e9b8 'i' 'int'
| |   |   |   | `-IntegerLiteral 0x563f2ebdf8b8 <col:39> 'int' 0
| |   |   |   `-BinaryOperator 0x563f2ebdf968 <col:44, col:48> 'bool' '<'
| |   |   |     |-ImplicitCastExpr 0x563f2ebdf950 <col:44> 'int' <LValueToRValue>
| |   |   |     | `-DeclRefExpr 0x563f2ebdf910 <col:44> 'int' lvalue ParmVar 0x563f2eb9e9b8 'i' 'int'
| |   |   |     `-IntegerLiteral 0x563f2ebdf930 <col:48> 'int' 2
| |   |   |-CXXFunctionalCastExpr 0x563f2ebdfa18 <col:53, col:60> 'void' functional cast to void <ToVoid>
| |   |   | `-IntegerLiteral 0x563f2ebdf9f8 <col:59> 'int' 0
| |   |   `-CallExpr 0x563f2ebdfc48 <col:64, col:168> 'void'
| |   |     |-ImplicitCastExpr 0x563f2ebdfc30 <col:64> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x563f2ebdfc10 <col:64> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x563f2e5515c0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
| |   |     |-ImplicitCastExpr 0x563f2ebdfc88 <col:79> 'const char *' <ArrayToPointerDecay>
| |   |     | `-StringLiteral 0x563f2ebdfa88 <col:79> 'const char [16]' lvalue "i >= 0 && i < 2"
| |   |     |-ImplicitCastExpr 0x563f2ebdfca0 <col:98> 'const char *' <ArrayToPointerDecay>
| |   |     | `-StringLiteral 0x563f2ebdfab0 <col:98> 'const char [29]' lvalue "../dummy_inc/click/router.hh"
| |   |     |-ImplicitCastExpr 0x563f2ebdfcb8 <col:130> 'unsigned int' <IntegralCast>
| |   |     | `-IntegerLiteral 0x563f2ebdfae8 <col:130> 'int' 180
| |   |     `-ImplicitCastExpr 0x563f2ebdfcd0 <col:135, col:149> 'const char *' <ArrayToPointerDecay>
| |   |       `-UnaryOperator 0x563f2ebdfbf8 <col:135, col:149> 'const char [62]' lvalue prefix '__extension__' cannot overflow
| |   |         `-PredefinedExpr 0x563f2ebdfbe0 <col:149> 'const char [62]' lvalue __PRETTY_FUNCTION__
| |   |           `-StringLiteral 0x563f2ebdfb88 <col:149> 'const char [62]' lvalue "const Router::Port &Router::Connection::operator[](int) const"
| |   `-ReturnStmt 0x563f2ebdfe28 <line:181:13, col:23>
| |     `-ArraySubscriptExpr 0x563f2ebdfe08 <col:20, col:23> 'const Router::Port' lvalue
| |       |-ImplicitCastExpr 0x563f2ebdfdd8 <col:20> 'const Router::Port *' <ArrayToPointerDecay>
| |       | `-MemberExpr 0x563f2ebdfd48 <col:20> 'Router::Port const[2]' lvalue ->p 0x563f2eb9e4e8
| |       |   `-CXXThisExpr 0x563f2ebdfd38 <col:20> 'const Router::Connection *' implicit this
| |       `-ImplicitCastExpr 0x563f2ebdfdf0 <col:22> 'int' <LValueToRValue>
| |         `-DeclRefExpr 0x563f2ebdfd78 <col:22> 'int' lvalue ParmVar 0x563f2eb9e9b8 'i' 'int'
| |-CXXMethodDecl 0x563f2eb9ec58 <line:183:9, line:186:9> line:183:15 operator[] 'Router::Port &(int)'
| | |-ParmVarDecl 0x563f2eb9eb68 <col:26, col:30> col:30 used i 'int'
| | `-CompoundStmt 0x563f2ebe03b0 <col:33, line:186:9>
| |   |-ParenExpr 0x563f2ebe02d0 <line:184:13, col:169> 'void'
| |   | `-ConditionalOperator 0x563f2ebe02a0 <col:14, col:168> 'void'
| |   |   |-CXXStaticCastExpr 0x563f2ebdff78 <col:14, col:49> 'bool' static_cast<_Bool> <NoOp>
| |   |   | `-BinaryOperator 0x563f2ebdff48 <col:34, col:48> 'bool' '&&'
| |   |   |   |-BinaryOperator 0x563f2ebdfeb0 <col:34, col:39> 'bool' '>='
| |   |   |   | |-ImplicitCastExpr 0x563f2ebdfe98 <col:34> 'int' <LValueToRValue>
| |   |   |   | | `-DeclRefExpr 0x563f2ebdfe58 <col:34> 'int' lvalue ParmVar 0x563f2eb9eb68 'i' 'int'
| |   |   |   | `-IntegerLiteral 0x563f2ebdfe78 <col:39> 'int' 0
| |   |   |   `-BinaryOperator 0x563f2ebdff28 <col:44, col:48> 'bool' '<'
| |   |   |     |-ImplicitCastExpr 0x563f2ebdff10 <col:44> 'int' <LValueToRValue>
| |   |   |     | `-DeclRefExpr 0x563f2ebdfed0 <col:44> 'int' lvalue ParmVar 0x563f2eb9eb68 'i' 'int'
| |   |   |     `-IntegerLiteral 0x563f2ebdfef0 <col:48> 'int' 2
| |   |   |-CXXFunctionalCastExpr 0x563f2ebdffd8 <col:53, col:60> 'void' functional cast to void <ToVoid>
| |   |   | `-IntegerLiteral 0x563f2ebdffb8 <col:59> 'int' 0
| |   |   `-CallExpr 0x563f2ebe0200 <col:64, col:168> 'void'
| |   |     |-ImplicitCastExpr 0x563f2ebe01e8 <col:64> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x563f2ebe01c8 <col:64> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x563f2e5515c0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
| |   |     |-ImplicitCastExpr 0x563f2ebe0240 <col:79> 'const char *' <ArrayToPointerDecay>
| |   |     | `-StringLiteral 0x563f2ebe0048 <col:79> 'const char [16]' lvalue "i >= 0 && i < 2"
| |   |     |-ImplicitCastExpr 0x563f2ebe0258 <col:98> 'const char *' <ArrayToPointerDecay>
| |   |     | `-StringLiteral 0x563f2ebe0070 <col:98> 'const char [29]' lvalue "../dummy_inc/click/router.hh"
| |   |     |-ImplicitCastExpr 0x563f2ebe0270 <col:130> 'unsigned int' <IntegralCast>
| |   |     | `-IntegerLiteral 0x563f2ebe00a8 <col:130> 'int' 184
| |   |     `-ImplicitCastExpr 0x563f2ebe0288 <col:135, col:149> 'const char *' <ArrayToPointerDecay>
| |   |       `-UnaryOperator 0x563f2ebe01b0 <col:135, col:149> 'const char [50]' lvalue prefix '__extension__' cannot overflow
| |   |         `-PredefinedExpr 0x563f2ebe0198 <col:149> 'const char [50]' lvalue __PRETTY_FUNCTION__
| |   |           `-StringLiteral 0x563f2ebe0148 <col:149> 'const char [50]' lvalue "Router::Port &Router::Connection::operator[](int)"
| |   `-ReturnStmt 0x563f2ebe03a0 <line:185:13, col:23>
| |     `-ArraySubscriptExpr 0x563f2ebe0380 <col:20, col:23> 'Router::Port' lvalue
| |       |-ImplicitCastExpr 0x563f2ebe0350 <col:20> 'Router::Port *' <ArrayToPointerDecay>
| |       | `-MemberExpr 0x563f2ebe0300 <col:20> 'Router::Port [2]' lvalue ->p 0x563f2eb9e4e8
| |       |   `-CXXThisExpr 0x563f2ebe02f0 <col:20> 'Router::Connection *' implicit this
| |       `-ImplicitCastExpr 0x563f2ebe0368 <col:22> 'int' <LValueToRValue>
| |         `-DeclRefExpr 0x563f2ebe0330 <col:22> 'int' lvalue ParmVar 0x563f2eb9eb68 'i' 'int'
| |-CXXMethodDecl 0x563f2eb9edf8 <line:188:9, line:190:9> line:188:14 operator== 'bool (const Router::Connection &) const'
| | |-ParmVarDecl 0x563f2eb9ed38 <col:25, col:43> col:43 used x 'const Router::Connection &'
| | `-CompoundStmt 0x563f2ebe0788 <col:52, line:190:9>
| |   `-ReturnStmt 0x563f2ebe0778 <line:189:13, col:51>
| |     `-BinaryOperator 0x563f2ebe0758 <col:20, col:51> 'bool' '&&'
| |       |-CXXOperatorCallExpr 0x563f2ebe0570 <col:20, col:33> 'bool'
| |       | |-ImplicitCastExpr 0x563f2ebe0558 <col:25> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
| |       | | `-DeclRefExpr 0x563f2ebe0510 <col:25> 'bool (const Router::Port &) const' lvalue CXXMethod 0x563f2eb9dd48 'operator==' 'bool (const Router::Port &) const'
| |       | |-ArraySubscriptExpr 0x563f2ebe0448 <col:20, col:23> 'const Router::Port' lvalue
| |       | | |-ImplicitCastExpr 0x563f2ebe0430 <col:20> 'const Router::Port *' <ArrayToPointerDecay>
| |       | | | `-MemberExpr 0x563f2ebe03e0 <col:20> 'Router::Port const[2]' lvalue ->p 0x563f2eb9e4e8
| |       | | |   `-CXXThisExpr 0x563f2ebe03d0 <col:20> 'const Router::Connection *' implicit this
| |       | | `-IntegerLiteral 0x563f2ebe0410 <col:22> 'int' 0
| |       | `-ArraySubscriptExpr 0x563f2ebe04f0 <col:28, col:33> 'const Router::Port' lvalue
| |       |   |-ImplicitCastExpr 0x563f2ebe04d8 <col:28, col:30> 'const Router::Port *' <ArrayToPointerDecay>
| |       |   | `-MemberExpr 0x563f2ebe0488 <col:28, col:30> 'Router::Port const[2]' lvalue .p 0x563f2eb9e4e8
| |       |   |   `-DeclRefExpr 0x563f2ebe0468 <col:28> 'const Router::Connection' lvalue ParmVar 0x563f2eb9ed38 'x' 'const Router::Connection &'
| |       |   `-IntegerLiteral 0x563f2ebe04b8 <col:32> 'int' 0
| |       `-CXXOperatorCallExpr 0x563f2ebe0720 <col:38, col:51> 'bool'
| |         |-ImplicitCastExpr 0x563f2ebe0708 <col:43> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
| |         | `-DeclRefExpr 0x563f2ebe06e8 <col:43> 'bool (const Router::Port &) const' lvalue CXXMethod 0x563f2eb9dd48 'operator==' 'bool (const Router::Port &) const'
| |         |-ArraySubscriptExpr 0x563f2ebe0620 <col:38, col:41> 'const Router::Port' lvalue
| |         | |-ImplicitCastExpr 0x563f2ebe0608 <col:38> 'const Router::Port *' <ArrayToPointerDecay>
| |         | | `-MemberExpr 0x563f2ebe05b8 <col:38> 'Router::Port const[2]' lvalue ->p 0x563f2eb9e4e8
| |         | |   `-CXXThisExpr 0x563f2ebe05a8 <col:38> 'const Router::Connection *' implicit this
| |         | `-IntegerLiteral 0x563f2ebe05e8 <col:40> 'int' 1
| |         `-ArraySubscriptExpr 0x563f2ebe06c8 <col:46, col:51> 'const Router::Port' lvalue
| |           |-ImplicitCastExpr 0x563f2ebe06b0 <col:46, col:48> 'const Router::Port *' <ArrayToPointerDecay>
| |           | `-MemberExpr 0x563f2ebe0660 <col:46, col:48> 'Router::Port const[2]' lvalue .p 0x563f2eb9e4e8
| |           |   `-DeclRefExpr 0x563f2ebe0640 <col:46> 'const Router::Connection' lvalue ParmVar 0x563f2eb9ed38 'x' 'const Router::Connection &'
| |           `-IntegerLiteral 0x563f2ebe0690 <col:50> 'int' 1
| `-CXXMethodDecl 0x563f2eb9ef40 <line:191:9, line:193:9> line:191:14 operator< 'bool (const Router::Connection &) const'
|   |-ParmVarDecl 0x563f2eb9eeb0 <col:24, col:42> col:42 used x 'const Router::Connection &'
|   `-CompoundStmt 0x563f2ebe0d20 <col:51, line:193:9>
|     `-ReturnStmt 0x563f2ebe0d10 <line:192:13, col:69>
|       `-BinaryOperator 0x563f2ebe0cf0 <col:20, col:69> 'bool' '||'
|         |-CXXOperatorCallExpr 0x563f2ebe0918 <col:20, col:32> 'bool'
|         | |-ImplicitCastExpr 0x563f2ebe0900 <col:25> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
|         | | `-DeclRefExpr 0x563f2ebe08e0 <col:25> 'bool (const Router::Port &) const' lvalue CXXMethod 0x563f2eb9dfd8 'operator<' 'bool (const Router::Port &) const'
|         | |-ArraySubscriptExpr 0x563f2ebe0818 <col:20, col:23> 'const Router::Port' lvalue
|         | | |-ImplicitCastExpr 0x563f2ebe0800 <col:20> 'const Router::Port *' <ArrayToPointerDecay>
|         | | | `-MemberExpr 0x563f2ebe07b0 <col:20> 'Router::Port const[2]' lvalue ->p 0x563f2eb9e4e8
|         | | |   `-CXXThisExpr 0x563f2ebe07a0 <col:20> 'const Router::Connection *' implicit this
|         | | `-IntegerLiteral 0x563f2ebe07e0 <col:22> 'int' 0
|         | `-ArraySubscriptExpr 0x563f2ebe08c0 <col:27, col:32> 'const Router::Port' lvalue
|         |   |-ImplicitCastExpr 0x563f2ebe08a8 <col:27, col:29> 'const Router::Port *' <ArrayToPointerDecay>
|         |   | `-MemberExpr 0x563f2ebe0858 <col:27, col:29> 'Router::Port const[2]' lvalue .p 0x563f2eb9e4e8
|         |   |   `-DeclRefExpr 0x563f2ebe0838 <col:27> 'const Router::Connection' lvalue ParmVar 0x563f2eb9eeb0 'x' 'const Router::Connection &'
|         |   `-IntegerLiteral 0x563f2ebe0888 <col:31> 'int' 0
|         `-ParenExpr 0x563f2ebe0cd0 <col:37, col:69> 'bool'
|           `-BinaryOperator 0x563f2ebe0cb0 <col:38, col:68> 'bool' '&&'
|             |-CXXOperatorCallExpr 0x563f2ebe0ac8 <col:38, col:51> 'bool'
|             | |-ImplicitCastExpr 0x563f2ebe0ab0 <col:43> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
|             | | `-DeclRefExpr 0x563f2ebe0a90 <col:43> 'bool (const Router::Port &) const' lvalue CXXMethod 0x563f2eb9dd48 'operator==' 'bool (const Router::Port &) const'
|             | |-ArraySubscriptExpr 0x563f2ebe09c8 <col:38, col:41> 'const Router::Port' lvalue
|             | | |-ImplicitCastExpr 0x563f2ebe09b0 <col:38> 'const Router::Port *' <ArrayToPointerDecay>
|             | | | `-MemberExpr 0x563f2ebe0960 <col:38> 'Router::Port const[2]' lvalue ->p 0x563f2eb9e4e8
|             | | |   `-CXXThisExpr 0x563f2ebe0950 <col:38> 'const Router::Connection *' implicit this
|             | | `-IntegerLiteral 0x563f2ebe0990 <col:40> 'int' 0
|             | `-ArraySubscriptExpr 0x563f2ebe0a70 <col:46, col:51> 'const Router::Port' lvalue
|             |   |-ImplicitCastExpr 0x563f2ebe0a58 <col:46, col:48> 'const Router::Port *' <ArrayToPointerDecay>
|             |   | `-MemberExpr 0x563f2ebe0a08 <col:46, col:48> 'Router::Port const[2]' lvalue .p 0x563f2eb9e4e8
|             |   |   `-DeclRefExpr 0x563f2ebe09e8 <col:46> 'const Router::Connection' lvalue ParmVar 0x563f2eb9eeb0 'x' 'const Router::Connection &'
|             |   `-IntegerLiteral 0x563f2ebe0a38 <col:50> 'int' 0
|             `-CXXOperatorCallExpr 0x563f2ebe0c78 <col:56, col:68> 'bool'
|               |-ImplicitCastExpr 0x563f2ebe0c60 <col:61> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x563f2ebe0c40 <col:61> 'bool (const Router::Port &) const' lvalue CXXMethod 0x563f2eb9dfd8 'operator<' 'bool (const Router::Port &) const'
|               |-ArraySubscriptExpr 0x563f2ebe0b78 <col:56, col:59> 'const Router::Port' lvalue
|               | |-ImplicitCastExpr 0x563f2ebe0b60 <col:56> 'const Router::Port *' <ArrayToPointerDecay>
|               | | `-MemberExpr 0x563f2ebe0b10 <col:56> 'Router::Port const[2]' lvalue ->p 0x563f2eb9e4e8
|               | |   `-CXXThisExpr 0x563f2ebe0b00 <col:56> 'const Router::Connection *' implicit this
|               | `-IntegerLiteral 0x563f2ebe0b40 <col:58> 'int' 1
|               `-ArraySubscriptExpr 0x563f2ebe0c20 <col:63, col:68> 'const Router::Port' lvalue
|                 |-ImplicitCastExpr 0x563f2ebe0c08 <col:63, col:65> 'const Router::Port *' <ArrayToPointerDecay>
|                 | `-MemberExpr 0x563f2ebe0bb8 <col:63, col:65> 'Router::Port const[2]' lvalue .p 0x563f2eb9e4e8
|                 |   `-DeclRefExpr 0x563f2ebe0b98 <col:63> 'const Router::Connection' lvalue ParmVar 0x563f2eb9eeb0 'x' 'const Router::Connection &'
|                 `-IntegerLiteral 0x563f2ebe0be8 <col:67> 'int' 1
|-AccessSpecDecl 0x563f2eb9f000 <line:216:3, col:10> col:3 private
|-CXXRecordDecl 0x563f2eb9f028 <line:218:5, col:11> col:11 class RouterContextErrh
|-EnumDecl 0x563f2eb9f0e0 <line:220:5, line:223:5> line:220:5
| |-EnumConstantDecl 0x563f2eb9f1a0 <line:221:9> col:9 ROUTER_NEW 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
| |-EnumConstantDecl 0x563f2eb9f1f0 <col:21> col:21 referenced ROUTER_PRECONFIGURE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
| |-EnumConstantDecl 0x563f2eb9f240 <col:42> col:42 ROUTER_PREINITIALIZE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
| |-EnumConstantDecl 0x563f2eb9f290 <line:222:9> col:9 referenced ROUTER_LIVE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
| `-EnumConstantDecl 0x563f2eb9f2e0 <col:22> col:22 ROUTER_DEAD 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
|-EnumDecl 0x563f2eb9f330 <line:224:5, line:227:5> line:224:5
| |-EnumConstantDecl 0x563f2eb9f448 <line:225:9, col:25> col:9 referenced RUNNING_DEAD 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
| | `-ConstantExpr 0x563f2eb9f428 <col:24, col:25> 'int' Int: -2
| |   `-UnaryOperator 0x563f2eb9f410 <col:24, col:25> 'int' prefix '-'
| |     `-IntegerLiteral 0x563f2eb9f3f0 <col:25> 'int' 2
| |-EnumConstantDecl 0x563f2eb9f4f0 <col:28, col:48> col:28 RUNNING_INACTIVE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
| | `-ConstantExpr 0x563f2eb9f4d0 <col:47, col:48> 'int' Int: -1
| |   `-UnaryOperator 0x563f2eb9f4b8 <col:47, col:48> 'int' prefix '-'
| |     `-IntegerLiteral 0x563f2eb9f498 <col:48> 'int' 1
| |-EnumConstantDecl 0x563f2eb9f580 <col:51, col:71> col:51 RUNNING_PREPARING 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
| | `-ConstantExpr 0x563f2eb9f560 <col:71> 'int' Int: 0
| |   `-IntegerLiteral 0x563f2eb9f540 <col:71> 'int' 0
| |-EnumConstantDecl 0x563f2eb9f610 <line:226:9, col:30> col:9 referenced RUNNING_BACKGROUND 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
| | `-ConstantExpr 0x563f2eb9f5f0 <col:30> 'int' Int: 1
| |   `-IntegerLiteral 0x563f2eb9f5d0 <col:30> 'int' 1
| `-EnumConstantDecl 0x563f2eb9f6a0 <col:33, col:50> col:33 referenced RUNNING_ACTIVE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
|   `-ConstantExpr 0x563f2eb9f680 <col:50> 'int' Int: 2
|     `-IntegerLiteral 0x563f2eb9f660 <col:50> 'int' 2
|-FieldDecl 0x563f2eb9f700 <line:229:5, col:13> col:13 referenced _master 'Master *'
|-FieldDecl 0x563f2eb9f760 <line:231:5, col:21> col:21 referenced _runcount 'atomic_uint32_t'
|-FieldDecl 0x563f2eb9f7c8 <line:233:5, col:18> col:18 referenced _state 'volatile int'
|-FieldDecl 0x563f2eb9f868 <line:234:5, col:30> col:10 _have_connections 'bool'
| `-ConstantExpr 0x563f2eb9f848 <col:30> 'int' Int: 1
|   `-IntegerLiteral 0x563f2eb9f818 <col:30> 'int' 1
|-FieldDecl 0x563f2eb9f908 <line:235:5, col:33> col:18 _conn_sorted 'bool' mutable
| `-ConstantExpr 0x563f2eb9f8e8 <col:33> 'int' Int: 1
|   `-IntegerLiteral 0x563f2eb9f8b8 <col:33> 'int' 1
|-FieldDecl 0x563f2eb9f9a8 <line:236:5, col:32> col:10 _have_configuration 'bool'
| `-ConstantExpr 0x563f2eb9f988 <col:32> 'int' Int: 1
|   `-IntegerLiteral 0x563f2eb9f958 <col:32> 'int' 1
|-FieldDecl 0x563f2eb9fa10 <line:237:5, col:18> col:18 referenced _running 'volatile int'
|-FieldDecl 0x563f2eb9fa70 <line:239:5, col:21> col:21 referenced _refcount 'atomic_uint32_t'
|-FieldDecl 0x563f2ebac750 <line:241:5, col:23> col:23 referenced _elements 'Vector<Element *>':'Vector<Element *>'
|-FieldDecl 0x563f2ebac850 <line:242:5, col:20> col:20 _element_names 'Vector<String>':'Vector<String>'
|-FieldDecl 0x563f2ebac950 <line:243:5, col:20> col:20 _element_configurations 'Vector<String>':'Vector<String>'
|-FieldDecl 0x563f2ebb4d00 <line:244:5, col:22> col:22 _element_landmarkids 'Vector<uint32_t>':'Vector<unsigned int>'
|-FieldDecl 0x563f2ebb4e10 <line:245:5, col:25> col:25 referenced _element_home_thread_ids 'Vector<int>':'Vector<int>' mutable
|-CXXRecordDecl 0x563f2ebb4e60 <line:247:5, line:250:5> line:247:12 referenced struct element_landmark_t definition
| |-DefinitionData aggregate standard_layout has_mutable_fields
| | |-DefaultConstructor exists non_trivial needs_implicit
| | |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveConstructor exists simple non_trivial needs_overload_resolution
| | |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveAssignment exists simple non_trivial needs_overload_resolution
| | `-Destructor simple non_trivial needs_overload_resolution
| |-CXXRecordDecl 0x563f2ebb4f78 <col:5, col:12> col:12 implicit struct element_landmark_t
| |-FieldDecl 0x563f2ebb5018 <line:248:9, col:18> col:18 first_landmarkid 'uint32_t':'unsigned int'
| |-FieldDecl 0x563f2ebb5078 <line:249:9, col:16> col:16 filename 'String'
| |-CXXConstructorDecl 0x563f2ebb5110 <line:247:12> col:12 implicit element_landmark_t 'void (const Router::element_landmark_t &)' inline default noexcept-unevaluated 0x563f2ebb5110
| | `-ParmVarDecl 0x563f2ebb5228 <col:12> col:12 'const Router::element_landmark_t &'
| |-CXXConstructorDecl 0x563f2ebb52c8 <col:12> col:12 implicit element_landmark_t 'void (Router::element_landmark_t &&)' inline default noexcept-unevaluated 0x563f2ebb52c8
| | `-ParmVarDecl 0x563f2ebb53d8 <col:12> col:12 'Router::element_landmark_t &&'
| |-CXXMethodDecl 0x563f2ebb5478 <col:12> col:12 implicit operator= 'Router::element_landmark_t &(const Router::element_landmark_t &)' inline default noexcept-unevaluated 0x563f2ebb5478
| | `-ParmVarDecl 0x563f2ebb5588 <col:12> col:12 'const Router::element_landmark_t &'
| |-CXXMethodDecl 0x563f2ebb55f8 <col:12> col:12 implicit operator= 'Router::element_landmark_t &(Router::element_landmark_t &&)' inline default noexcept-unevaluated 0x563f2ebb55f8
| | `-ParmVarDecl 0x563f2ebb5708 <col:12> col:12 'Router::element_landmark_t &&'
| `-CXXDestructorDecl 0x563f2ebb5790 <col:12> col:12 implicit ~element_landmark_t 'void ()' inline default noexcept-unevaluated 0x563f2ebb5790
|-FieldDecl 0x563f2ebc2170 <line:251:5, col:32> col:32 _element_landmarks 'Vector<Router::element_landmark_t>':'Vector<Router::element_landmark_t>'
|-FieldDecl 0x563f2ebc21d0 <line:252:5, col:14> col:14 _last_landmarkid 'uint32_t':'unsigned int'
|-FieldDecl 0x563f2ebc22e0 <line:254:5, col:25> col:25 _element_name_sorter 'Vector<int>':'Vector<int>' mutable
|-FieldDecl 0x563f2ebc2638 <line:255:5, col:40> col:17 referenced _element_gport_offset 'Vector<int> [2]'
|-FieldDecl 0x563f2ebc2740 <line:256:5, col:17> col:17 _element_configure_order 'Vector<int>':'Vector<int>'
|-FieldDecl 0x563f2ebcaa80 <line:258:5, col:32> col:32 _conn 'Vector<Router::Connection>':'Vector<Router::Connection>' mutable
|-FieldDecl 0x563f2ebcab90 <line:259:5, col:25> col:25 _conn_output_sorter 'Vector<int>':'Vector<int>' mutable
|-FieldDecl 0x563f2ebcac90 <line:261:5, col:20> col:20 _requirements 'Vector<String>':'Vector<String>'
|-FieldDecl 0x563f2ebcada0 <line:263:5, col:17> col:17 _ehandler_first_by_element 'Vector<int>':'Vector<int>'
|-FieldDecl 0x563f2ebcaeb0 <line:264:5, col:17> col:17 _ehandler_to_handler 'Vector<int>':'Vector<int>'
|-FieldDecl 0x563f2ebcafc0 <line:265:5, col:17> col:17 _ehandler_next 'Vector<int>':'Vector<int>'
|-FieldDecl 0x563f2ebcb0d0 <line:267:5, col:17> col:17 _handler_first_by_name 'Vector<int>':'Vector<int>'
|-EnumDecl 0x563f2ebcb120 <line:269:5, col:33> col:5
| `-EnumConstantDecl 0x563f2ebcb220 <col:12, col:29> col:12 HANDLER_BUFSIZ 'Router::(anonymous enum at ../dummy_inc/click/router.hh:269:5)'
|   `-ImplicitCastExpr 0x563f2ebcb270 <col:29> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x563f2ebcb200 <col:29> 'int' Int: 256
|       `-IntegerLiteral 0x563f2ebcb1e0 <col:29> 'int' 256
|-FieldDecl 0x563f2ebcb2d0 <line:270:5, col:15> col:15 _handler_bufs 'Handler **'
|-FieldDecl 0x563f2ebcb338 <line:271:5, col:9> col:9 _nhandlers_bufs 'int'
|-FieldDecl 0x563f2ebcb3a0 <line:272:5, col:9> col:9 _free_handler 'int'
|-FieldDecl 0x563f2ebcb4a0 <line:274:5, col:20> col:20 _attachment_names 'Vector<String>':'Vector<String>'
|-FieldDecl 0x563f2ebd5450 <line:275:5, col:19> col:19 _attachments 'Vector<void *>':'Vector<void *>'
|-FieldDecl 0x563f2ebd54b0 <line:277:5, col:14> col:14 referenced _root_element 'Element *'
|-FieldDecl 0x563f2ebd5510 <line:278:5, col:12> col:12 _configuration 'String'
|-CXXRecordDecl 0x563f2ebd5560 <line:280:5, line:290:5> line:280:12 referenced struct notifier_signals_t definition
| |-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| | |-DefaultConstructor
| | |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveConstructor exists simple non_trivial needs_overload_resolution
| | |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveAssignment exists simple non_trivial needs_overload_resolution
| | `-Destructor simple non_trivial needs_overload_resolution
| |-CXXRecordDecl 0x563f2ebd5678 <col:5, col:12> col:12 implicit referenced struct notifier_signals_t
| |-EnumDecl 0x563f2ebd5708 <line:281:9, col:32> col:9
| | `-EnumConstantDecl 0x563f2ebd5810 <col:16, col:27> col:16 referenced capacity 'Router::notifier_signals_t::(anonymous enum at ../dummy_inc/click/router.hh:281:9)'
| |   `-ImplicitCastExpr 0x563f2ebd5860 <col:27> 'unsigned int' <IntegralCast>
| |     `-ConstantExpr 0x563f2ebd57f0 <col:27> 'int' Int: 4096
| |       `-IntegerLiteral 0x563f2ebd57d0 <col:27> 'int' 4096
| |-FieldDecl 0x563f2ebd5888 <line:282:9, col:16> col:16 name 'String'
| |-FieldDecl 0x563f2ebd58f0 <line:283:9, col:13> col:13 nsig 'int'
| |-FieldDecl 0x563f2ebd5ae8 <line:284:9, col:42> col:25 referenced sig 'atomic_uint32_t [128]'
| |-FieldDecl 0x563f2ebd5b78 <line:285:9, col:29> col:29 next 'Router::notifier_signals_t *'
| |-CXXConstructorDecl 0x563f2ebd5d38 <line:286:9, line:289:9> line:286:9 notifier_signals_t 'void (const String &, Router::notifier_signals_t *)'
| | |-ParmVarDecl 0x563f2ebd5bd8 <col:28, col:42> col:42 used n 'const String &'
| | |-ParmVarDecl 0x563f2ebd5c50 <col:45, col:65> col:65 used nx 'Router::notifier_signals_t *'
| | |-CXXCtorInitializer Field 0x563f2ebd5888 'name' 'String'
| | | `-CXXConstructExpr 0x563f2ebe0d78 <line:287:15, col:21> 'String' 'void (const String &)'
| | |   `-DeclRefExpr 0x563f2ebe0d38 <col:20> 'const String' lvalue ParmVar 0x563f2ebd5bd8 'n' 'const String &'
| | |-CXXCtorInitializer Field 0x563f2ebd58f0 'nsig' 'int'
| | | `-IntegerLiteral 0x563f2ebe0dd0 <col:29> 'int' 0
| | |-CXXCtorInitializer Field 0x563f2ebd5ae8 'sig' 'atomic_uint32_t [128]'
| | | `-CXXConstructExpr 0x563f2ebe0eb8 <line:286:9> 'atomic_uint32_t [128]' 'void () noexcept'
| | |-CXXCtorInitializer Field 0x563f2ebd5b78 'next' 'Router::notifier_signals_t *'
| | | `-ImplicitCastExpr 0x563f2ebe0e78 <line:287:38> 'Router::notifier_signals_t *' <LValueToRValue>
| | |   `-DeclRefExpr 0x563f2ebe0e38 <col:38> 'Router::notifier_signals_t *' lvalue ParmVar 0x563f2ebd5c50 'nx' 'Router::notifier_signals_t *'
| | `-CompoundStmt 0x563f2ebe1148 <col:42, line:289:9>
| |   `-CallExpr 0x563f2ebe10f8 <line:288:13, col:43> 'void *'
| |     |-ImplicitCastExpr 0x563f2ebe10e0 <col:13> 'void *(*)(void *, int, size_t) throw()' <FunctionToPointerDecay>
| |     | `-DeclRefExpr 0x563f2ebe10c0 <col:13> 'void *(void *, int, size_t) throw()' lvalue Function 0x563f2e7158b8 'memset' 'void *(void *, int, size_t) throw()'
| |     |-ImplicitCastExpr 0x563f2ebe1130 <col:20, col:26> 'void *' <BitCast>
| |     | `-UnaryOperator 0x563f2ebe1008 <col:20, col:26> 'atomic_uint32_t *' prefix '&' cannot overflow
| |     |   `-ArraySubscriptExpr 0x563f2ebe0fe8 <col:21, col:26> 'atomic_uint32_t' lvalue
| |     |     |-ImplicitCastExpr 0x563f2ebe0fd0 <col:21> 'atomic_uint32_t *' <ArrayToPointerDecay>
| |     |     | `-MemberExpr 0x563f2ebe0f80 <col:21> 'atomic_uint32_t [128]' lvalue ->sig 0x563f2ebd5ae8
| |     |     |   `-CXXThisExpr 0x563f2ebe0f70 <col:21> 'Router::notifier_signals_t *' implicit this
| |     |     `-IntegerLiteral 0x563f2ebe0fb0 <col:25> 'int' 0
| |     |-IntegerLiteral 0x563f2ebe1020 <col:29> 'int' 0
| |     `-UnaryExprOrTypeTraitExpr 0x563f2ebe10a0 <col:32, col:42> 'unsigned long' sizeof
| |       `-ParenExpr 0x563f2ebe1080 <col:38, col:42> 'atomic_uint32_t [128]' lvalue
| |         `-MemberExpr 0x563f2ebe1050 <col:39> 'atomic_uint32_t [128]' lvalue ->sig 0x563f2ebd5ae8 non_odr_use_unevaluated
| |           `-CXXThisExpr 0x563f2ebe1040 <col:39> 'Router::notifier_signals_t *' implicit this
| |-CXXConstructorDecl 0x563f2ebd5e18 <line:280:12> col:12 implicit notifier_signals_t 'void (const Router::notifier_signals_t &)' inline default noexcept-unevaluated 0x563f2ebd5e18
| | `-ParmVarDecl 0x563f2ebd5f28 <col:12> col:12 'const Router::notifier_signals_t &'
| |-CXXConstructorDecl 0x563f2ebd5fc8 <col:12> col:12 implicit notifier_signals_t 'void (Router::notifier_signals_t &&)' inline default noexcept-unevaluated 0x563f2ebd5fc8
| | `-ParmVarDecl 0x563f2ebd60d8 <col:12> col:12 'Router::notifier_signals_t &&'
| |-CXXMethodDecl 0x563f2ebd6178 <col:12> col:12 implicit operator= 'Router::notifier_signals_t &(const Router::notifier_signals_t &)' inline default noexcept-unevaluated 0x563f2ebd6178
| | `-ParmVarDecl 0x563f2ebd6288 <col:12> col:12 'const Router::notifier_signals_t &'
| |-CXXMethodDecl 0x563f2ebd62f8 <col:12> col:12 implicit operator= 'Router::notifier_signals_t &(Router::notifier_signals_t &&)' inline default noexcept-unevaluated 0x563f2ebd62f8
| | `-ParmVarDecl 0x563f2ebd6408 <col:12> col:12 'Router::notifier_signals_t &&'
| `-CXXDestructorDecl 0x563f2ebd6490 <col:12> col:12 implicit ~notifier_signals_t 'void ()' inline default noexcept-unevaluated 0x563f2ebd6490
|-FieldDecl 0x563f2ebd6580 <line:291:5, col:25> col:25 _notifier_signals 'Router::notifier_signals_t *'
|-FieldDecl 0x563f2ebd65e0 <line:292:5, col:27> col:27 referenced _arena_factory 'HashMap_ArenaFactory *'
|-FieldDecl 0x563f2ebd6640 <line:293:5, col:13> col:13 referenced _hotswap_router 'Router *'
|-FieldDecl 0x563f2ebd66a0 <line:294:5, col:18> col:18 referenced _thread_sched 'ThreadSched *'
|-FieldDecl 0x563f2ebd6700 <line:295:5, col:23> col:23 referenced _name_info 'NameInfo *' mutable
|-FieldDecl 0x563f2ebd6810 <line:296:5, col:17> col:17 _flow_code_override_eindex 'Vector<int>':'Vector<int>'
|-FieldDecl 0x563f2ebd6910 <line:297:5, col:20> col:20 referenced _flow_code_override 'Vector<String>':'Vector<String>'
|-FieldDecl 0x563f2ebd6970 <line:299:5, col:13> col:13 _next_router 'Router *'
|-CXXConstructorDecl 0x563f2ebd6ab8 <line:305:5, col:25> col:5 Router 'void (const Router &)'
| `-ParmVarDecl 0x563f2ebd69f8 <col:12, col:24> col:25 'const Router &'
|-CXXMethodDecl 0x563f2ebd6c68 <line:306:5, col:36> col:13 operator= 'Router &(const Router &)'
| `-ParmVarDecl 0x563f2ebd6b78 <col:23, col:35> col:36 'const Router &'
|-CXXMethodDecl 0x563f2ebd6db0 <line:308:5, col:49> col:17 remove_connection 'Router::Connection *(Router::Connection *)'
| `-ParmVarDecl 0x563f2ebd6d20 <col:35, col:47> col:47 cp 'Router::Connection *'
|-CXXMethodDecl 0x563f2ebd7158 <line:309:5, line:310:62> line:309:10 hookup_error 'void (const Router::Port &, bool, const char *, ErrorHandler *, bool)'
| |-ParmVarDecl 0x563f2ebd6e68 <col:23, col:35> col:35 p 'const Router::Port &'
| |-ParmVarDecl 0x563f2ebd6ee0 <col:38, col:43> col:43 isoutput 'bool'
| |-ParmVarDecl 0x563f2ebd6f60 <col:53, col:65> col:65 message 'const char *'
| |-ParmVarDecl 0x563f2ebd6fd8 <line:310:23, col:37> col:37 errh 'ErrorHandler *'
| `-ParmVarDecl 0x563f2ebd7050 <col:43, col:57> col:48 active 'bool' cinit
|   `-CXXBoolLiteralExpr 0x563f2ebdde20 <col:57> 'bool' false
|-CXXMethodDecl 0x563f2ebd72c8 <line:311:5, col:44> col:9 check_hookup_elements 'int (ErrorHandler *)'
| `-ParmVarDecl 0x563f2ebd7230 <col:31, col:43> col:44 'ErrorHandler *'
|-CXXMethodDecl 0x563f2ebd7418 <line:312:5, col:41> col:9 check_hookup_range 'int (ErrorHandler *)'
| `-ParmVarDecl 0x563f2ebd7380 <col:28, col:40> col:41 'ErrorHandler *'
|-CXXMethodDecl 0x563f2ebd7568 <line:313:5, col:48> col:9 check_hookup_completeness 'int (ErrorHandler *)'
| `-ParmVarDecl 0x563f2ebd74d0 <col:35, col:47> col:48 'ErrorHandler *'
|-CXXMethodDecl 0x563f2ebd76c0 <line:315:5, col:48> col:17 used hard_flow_code_override 'const char *(int) const'
| `-ParmVarDecl 0x563f2ebd7628 <col:41, col:45> col:45 e 'int'
|-CXXMethodDecl 0x563f2ebd79e0 <line:316:5, col:74> col:9 processing_error 'int (const Router::Connection &, bool, int, ErrorHandler *)'
| |-ParmVarDecl 0x563f2ebd7778 <col:26, col:44> col:44 conn 'const Router::Connection &'
| |-ParmVarDecl 0x563f2ebd77f0 <col:50> col:54 'bool'
| |-ParmVarDecl 0x563f2ebd7870 <col:56> col:59 'int'
| `-ParmVarDecl 0x563f2ebd78e8 <col:61, col:73> col:74 'ErrorHandler *'
|-CXXMethodDecl 0x563f2ebdb7d0 <line:317:5, col:42> col:9 check_push_and_pull 'int (ErrorHandler *)'
| `-ParmVarDecl 0x563f2ebd7ab0 <col:29, col:41> col:42 'ErrorHandler *'
|-CXXMethodDecl 0x563f2ebdb898 <line:319:5, col:26> col:10 set_connections 'void ()'
|-CXXMethodDecl 0x563f2ebdb958 <line:320:5, col:29> col:10 sort_connections 'void () const'
|-CXXMethodDecl 0x563f2ebdbb60 <line:321:5, col:64> col:9 connindex_lower_bound 'int (bool, const Router::Port &) const'
| |-ParmVarDecl 0x563f2ebdba08 <col:31, col:36> col:36 isoutput 'bool'
| `-ParmVarDecl 0x563f2ebdba80 <col:46, col:58> col:58 port 'const Router::Port &'
|-CXXMethodDecl 0x563f2ebdbc30 <line:323:5, col:22> col:10 make_gports 'void ()'
|-CXXMethodDecl 0x563f2ebdbd78 <line:324:5, line:326:5> line:324:16 ngports 'int (bool) const' inline
| |-ParmVarDecl 0x563f2ebdbce0 <col:24, col:29> col:29 used isout 'bool'
| `-CompoundStmt 0x563f2ebe1380 <col:42, line:326:5>
|   `-ReturnStmt 0x563f2ebe1370 <line:325:9, col:50>
|     `-ImplicitCastExpr 0x563f2ebe1358 <col:16, col:50> 'int':'int' <LValueToRValue>
|       `-CXXMemberCallExpr 0x563f2ebe1338 <col:16, col:50> 'const int':'const int' lvalue
|         `-MemberExpr 0x563f2ebe1308 <col:16, col:45> '<bound member function type>' .back 0x563f2eae7b28
|           `-ArraySubscriptExpr 0x563f2ebe1288 <col:16, col:43> 'const Vector<int>':'const Vector<int>' lvalue
|             |-ImplicitCastExpr 0x563f2ebe1258 <col:16> 'const Vector<int> *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x563f2ebe1170 <col:16> 'Vector<int> const[2]' lvalue ->_element_gport_offset 0x563f2ebc2638
|             |   `-CXXThisExpr 0x563f2ebe1160 <col:16> 'const Router *' implicit this
|             `-ImplicitCastExpr 0x563f2ebe1270 <col:38> 'bool' <LValueToRValue>
|               `-DeclRefExpr 0x563f2ebe11a0 <col:38> 'bool' lvalue ParmVar 0x563f2ebdbce0 'isout' 'bool'
|-CXXMethodDecl 0x563f2ebdbf48 <line:327:5, col:55> col:16 gport 'int (bool, const Router::Port &) const' inline
| |-ParmVarDecl 0x563f2ebdbe30 <col:22, col:27> col:27 isoutput 'bool'
| `-ParmVarDecl 0x563f2ebdbea8 <col:37, col:49> col:49 port 'const Router::Port &'
|-CXXMethodDecl 0x563f2ebdc0a0 <line:329:5, col:47> col:9 used hard_home_thread_id 'int (const Element *) const'
| `-ParmVarDecl 0x563f2ebdc008 <col:29, col:44> col:44 e 'const Element *'
|-CXXMethodDecl 0x563f2ebdc348 <line:331:5, col:67> col:9 element_lerror 'int (ErrorHandler *, Element *, const char *, ...) const'
| |-ParmVarDecl 0x563f2ebdc158 <col:24, col:36> col:37 'ErrorHandler *'
| |-ParmVarDecl 0x563f2ebdc1d0 <col:39, col:46> col:47 'Element *'
| `-ParmVarDecl 0x563f2ebdc250 <col:49, col:59> col:60 'const char *'
|-CXXMethodDecl 0x563f2ebdc520 <line:334:5, col:40> col:10 initialize_handlers 'void (bool, bool)'
| |-ParmVarDecl 0x563f2ebdc410 <col:30> col:34 'bool'
| `-ParmVarDecl 0x563f2ebdc488 <col:36> col:40 'bool'
|-CXXMethodDecl 0x563f2ebdc6a8 <line:335:5, col:35> col:21 xhandler 'Handler *(int) const' inline
| `-ParmVarDecl 0x563f2ebdc5e8 <col:30> col:33 'int'
|-CXXMethodDecl 0x563f2ebdc940 <line:336:5, col:60> col:9 find_ehandler 'int (int, const String &, bool) const'
| |-ParmVarDecl 0x563f2ebdc768 <col:23> col:26 'int'
| |-ParmVarDecl 0x563f2ebdc7e0 <col:28, col:40> col:41 'const String &'
| `-ParmVarDecl 0x563f2ebdc858 <col:43, col:48> col:48 allow_star 'bool'
|-CXXMethodDecl 0x563f2ebdcb58 <line:337:5, col:70> col:27 fetch_handler 'Handler (const Element *, const String &)' static inline
| |-ParmVarDecl 0x563f2ebdca08 <col:41, col:54> col:55 'const Element *'
| `-ParmVarDecl 0x563f2ebdca80 <col:57, col:69> col:70 'const String &'
|-CXXMethodDecl 0x563f2ebdcd68 <line:338:5, col:52> col:10 store_local_handler 'void (int, Handler &)'
| |-ParmVarDecl 0x563f2ebdcc20 <col:30, col:34> col:34 eindex 'int'
| `-ParmVarDecl 0x563f2ebdcc98 <col:42, col:51> col:51 h 'Handler &'
|-CXXMethodDecl 0x563f2ebdcee8 <line:339:5, col:48> col:17 store_global_handler 'void (Handler &)' static
| `-ParmVarDecl 0x563f2ebdce28 <col:38, col:47> col:47 h 'Handler &'
|-CXXMethodDecl 0x563f2ebdd0e8 <line:340:5, col:72> col:24 store_handler 'void (const Element *, Handler &)' static inline
| |-ParmVarDecl 0x563f2ebdcfa0 <col:38, col:53> col:53 element 'const Element *'
| `-ParmVarDecl 0x563f2ebdd018 <col:62, col:71> col:71 h 'Handler &'
|-CXXMethodDecl 0x563f2ebdd2c0 <line:343:5, col:66> col:19 router_read_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x563f2ebdd1a8 <col:39, col:48> col:48 e 'Element *'
| `-ParmVarDecl 0x563f2ebdd228 <col:51, col:57> col:57 user_data 'void *'
|-CXXMethodDecl 0x563f2ebdd5a0 <line:344:5, col:103> col:16 router_write_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x563f2ebdd380 <col:37, col:51> col:51 str 'const String &'
| |-ParmVarDecl 0x563f2ebdd3f8 <col:56, col:65> col:65 e 'Element *'
| |-ParmVarDecl 0x563f2ebdd478 <col:68, col:74> col:74 user_data 'void *'
| `-ParmVarDecl 0x563f2ebdd4f0 <col:85, col:99> col:99 errh 'ErrorHandler *'
|-FriendDecl 0x563f2ebdd680 <line:347:5, col:18> col:12 'class Master':'Master'
|-FriendDecl 0x563f2ebdd6e0 <line:348:5, col:18> col:12 'class Task':'Task'
`-FriendDecl 0x563f2ebdd960 <line:349:5, col:44> col:25
  `-CXXMethodDecl 0x563f2ebdd860 parent 0x563f2ea17140 prev 0x563f2ea26d68 <col:5, col:44> col:25 set_nports 'int (int, int)'
    |-ParmVarDecl 0x563f2ebdd740 <col:36> col:39 'int'
    `-ParmVarDecl 0x563f2ebdd7c0 <col:41> col:44 'int'

Layout: <CGRecordLayout
  LLVMType:%class.Router = type { %class.Master*, %class.atomic_uint32_t, i32, i8, i32, %class.atomic_uint32_t, %class.Vector, %class.Vector.0, %class.Vector.0, %class.Vector.2, %class.Vector.5, %class.Vector.6, i32, %class.Vector.5, [2 x %class.Vector.5], %class.Vector.5, %class.Vector.8, %class.Vector.5, %class.Vector.0, %class.Vector.5, %class.Vector.5, %class.Vector.5, %class.Vector.5, %class.Handler**, i32, i32, %class.Vector.0, %class.Vector.12, %class.Element*, %class.String, %"struct.Router::notifier_signals_t"*, %class.HashMap_ArenaFactory*, %class.Router*, %class.ThreadSched*, %class.NameInfo*, %class.Vector.5, %class.Vector.0, %class.Router* }
  NonVirtualBaseLLVMType:%class.Router = type { %class.Master*, %class.atomic_uint32_t, i32, i8, i32, %class.atomic_uint32_t, %class.Vector, %class.Vector.0, %class.Vector.0, %class.Vector.2, %class.Vector.5, %class.Vector.6, i32, %class.Vector.5, [2 x %class.Vector.5], %class.Vector.5, %class.Vector.8, %class.Vector.5, %class.Vector.0, %class.Vector.5, %class.Vector.5, %class.Vector.5, %class.Vector.5, %class.Handler**, i32, i32, %class.Vector.0, %class.Vector.12, %class.Element*, %class.String, %"struct.Router::notifier_signals_t"*, %class.HashMap_ArenaFactory*, %class.Router*, %class.ThreadSched*, %class.NameInfo*, %class.Vector.5, %class.Vector.0, %class.Router* }
  IsZeroInitializable:1
  BitFields:[
    <CGBitFieldInfo Offset:0 Size:1 IsSigned:0 StorageSize:8 StorageOffset:16>
    <CGBitFieldInfo Offset:1 Size:1 IsSigned:0 StorageSize:8 StorageOffset:16>
    <CGBitFieldInfo Offset:2 Size:1 IsSigned:0 StorageSize:8 StorageOffset:16>
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563f2ea17140 prev 0x563f2ea16ec0 <../dummy_inc/click/element.hh:29:1, line:319:1> line:29:7 referenced class Element definition
|-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x563f2ea17238 <col:1, col:7> col:7 implicit referenced class Element
|-AccessSpecDecl 0x563f2ea172c8 <col:17, col:23> col:17 public
|-CXXConstructorDecl 0x563f2ea17328 <line:31:5, col:13> col:5 used Element 'void ()'
|-CXXDestructorDecl 0x563f2ea17418 <line:32:5, col:22> col:13 used ~Element 'void () noexcept' virtual
|-VarDecl 0x563f2ea17518 <line:33:5, col:16> col:16 nelements_allocated 'int' static
|-CXXMethodDecl 0x563f2ea176e8 <line:36:5, col:42> col:18 used push 'void (int, Packet *)' virtual
| |-ParmVarDecl 0x563f2ea17598 <col:23, col:27> col:27 port 'int'
| `-ParmVarDecl 0x563f2ea17610 <col:33, col:41> col:41 p 'Packet *'
|-CXXMethodDecl 0x563f2ea17878 <line:37:5, col:70> col:21 used pull 'Packet *(int)' virtual
| |-ParmVarDecl 0x563f2ea177b0 <col:26, col:30> col:30 port 'int'
| `-WarnUnusedResultAttr 0x563f2ea17920 <col:51> warn_unused_result ""
|-CXXMethodDecl 0x563f2ea17a58 <line:38:5, col:44> col:21 simple_action 'Packet *(Packet *)' virtual
| `-ParmVarDecl 0x563f2ea17990 <col:35, col:43> col:43 p 'Packet *'
|-CXXMethodDecl 0x563f2ea17bf8 <line:40:5, col:37> col:18 used run_task 'bool (Task *)' virtual
| `-ParmVarDecl 0x563f2ea17b38 <col:27, col:33> col:33 task 'Task *'
|-CXXMethodDecl 0x563f2ea17d98 <line:41:5, col:40> col:18 run_timer 'void (Timer *)' virtual
| `-ParmVarDecl 0x563f2ea17cd8 <col:28, col:35> col:35 timer 'Timer *'
|-EnumDecl 0x563f2ea17e40 <line:43:5, col:46> col:5
| |-EnumConstantDecl 0x563f2ea17f40 <col:12, col:26> col:12 SELECT_READ 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
| | `-ImplicitCastExpr 0x563f2ea18020 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563f2ea17f20 <col:26> 'int' Int: 1
| |     `-IntegerLiteral 0x563f2ea17f00 <col:26> 'int' 1
| `-EnumConstantDecl 0x563f2ea17fd0 <col:29, col:44> col:29 SELECT_WRITE 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
|   `-ImplicitCastExpr 0x563f2ea18038 <col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x563f2ea17fb0 <col:44> 'int' Int: 2
|       `-IntegerLiteral 0x563f2ea17f90 <col:44> 'int' 2
|-CXXMethodDecl 0x563f2ea18180 <line:44:5, col:43> col:18 selected 'void (int, int)' virtual
| |-ParmVarDecl 0x563f2ea18068 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x563f2ea180e8 <col:35, col:39> col:39 mask 'int'
|-CXXMethodDecl 0x563f2ea182d8 <line:45:5, col:33> col:18 selected 'void (int)' virtual
| `-ParmVarDecl 0x563f2ea18248 <col:27, col:31> col:31 fd 'int'
|-CXXMethodDecl 0x563f2ea18518 <line:48:5, col:86> col:45 checked_output_push 'void (int, Packet *) const'
| |-ParmVarDecl 0x563f2ea18398 <col:65, col:69> col:69 port 'int'
| |-ParmVarDecl 0x563f2ea18410 <col:75, col:83> col:83 p 'Packet *'
| |-NoInlineAttr 0x563f2ea185c8 <col:20>
| `-OptimizeNoneAttr 0x563f2ea18620 <col:30>
|-CXXMethodDecl 0x563f2ea18728 <line:49:5, col:77> col:48 checked_input_pull 'Packet *(int) const'
| |-ParmVarDecl 0x563f2ea18660 <col:67, col:71> col:71 port 'int'
| |-NoInlineAttr 0x563f2ea187d0 <col:20>
| `-OptimizeNoneAttr 0x563f2ea18828 <col:30>
|-CXXMethodDecl 0x563f2ea18878 <line:52:5, col:46> col:25 class_name 'const char *() const' virtual pure
|-CXXMethodDecl 0x563f2ea18940 <line:54:5, col:38> col:25 port_count 'const char *() const' virtual
|-VarDecl 0x563f2ea18a58 <line:55:5, col:33> col:23 PORTS_0_0 'const char []' static
|-VarDecl 0x563f2ea18ae0 <line:56:5, col:33> col:23 PORTS_0_1 'const char []' static
|-VarDecl 0x563f2ea18b68 <line:57:5, col:33> col:23 PORTS_1_0 'const char []' static
|-VarDecl 0x563f2ea18bf0 <line:58:5, col:33> col:23 used PORTS_1_1 'const char []' static
|-VarDecl 0x563f2ea18c78 <line:59:5, col:35> col:23 PORTS_1_1X2 'const char []' static
|-CXXMethodDecl 0x563f2ea18d08 <line:61:5, col:38> col:25 processing 'const char *() const' virtual
|-VarDecl 0x563f2ea18dc8 <line:62:5, col:32> col:23 AGNOSTIC 'const char []' static
|-VarDecl 0x563f2ea18e50 <line:63:5, col:28> col:23 PUSH 'const char []' static
|-VarDecl 0x563f2ea18ed8 <line:64:5, col:28> col:23 PULL 'const char []' static
|-VarDecl 0x563f2ea18f60 <line:65:5, col:36> col:23 PUSH_TO_PULL 'const char []' static
|-VarDecl 0x563f2ea18fe8 <line:66:5, col:36> col:23 PULL_TO_PUSH 'const char []' static
|-VarDecl 0x563f2ea19070 <line:67:5, col:39> col:23 PROCESSING_A_AH 'const char []' static
|-CXXMethodDecl 0x563f2ea19100 <line:69:5, col:37> col:25 flow_code 'const char *() const' virtual
|-VarDecl 0x563f2ea191c0 <line:70:5, col:37> col:23 COMPLETE_FLOW 'const char []' static
|-CXXMethodDecl 0x563f2ea19250 <line:72:5, col:33> col:25 flags 'const char *() const' virtual
|-CXXMethodDecl 0x563f2ea193a0 <line:73:5, col:30> col:9 flag_value 'int (int) const'
| `-ParmVarDecl 0x563f2ea19308 <col:20, col:24> col:24 flag 'int'
|-CXXMethodDecl 0x563f2ea19530 <line:75:5, col:40> col:19 cast 'void *(const char *)' virtual
| `-ParmVarDecl 0x563f2ea19460 <col:24, col:36> col:36 name 'const char *'
|-CXXMethodDecl 0x563f2ea197e0 <line:76:5, col:70> col:19 port_cast 'void *(bool, int, const char *)' virtual
| |-ParmVarDecl 0x563f2ea195e8 <col:29, col:34> col:34 isoutput 'bool'
| |-ParmVarDecl 0x563f2ea19668 <col:44, col:48> col:48 port 'int'
| `-ParmVarDecl 0x563f2ea196e8 <col:54, col:66> col:66 name 'const char *'
|-EnumDecl 0x563f2ea19898 <line:79:5, line:85:5> line:79:10 ConfigurePhase
| |-EnumConstantDecl 0x563f2ea199a0 <line:80:9, col:33> col:9 CONFIGURE_PHASE_FIRST 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x563f2ea19c30 <col:33> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563f2ea19980 <col:33> 'int' Int: 0
| |     `-IntegerLiteral 0x563f2ea19960 <col:33> 'int' 0
| |-EnumConstantDecl 0x563f2ea19a30 <line:81:9, col:32> col:9 CONFIGURE_PHASE_INFO 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x563f2ea19c48 <col:32> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563f2ea19a10 <col:32> 'int' Int: 20
| |     `-IntegerLiteral 0x563f2ea199f0 <col:32> 'int' 20
| |-EnumConstantDecl 0x563f2ea19ac0 <line:82:9, col:38> col:9 CONFIGURE_PHASE_PRIVILEGED 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x563f2ea19c60 <col:38> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563f2ea19aa0 <col:38> 'int' Int: 90
| |     `-IntegerLiteral 0x563f2ea19a80 <col:38> 'int' 90
| |-EnumConstantDecl 0x563f2ea19b50 <line:83:9, col:35> col:9 CONFIGURE_PHASE_DEFAULT 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x563f2ea19c78 <col:35> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563f2ea19b30 <col:35> 'int' Int: 100
| |     `-IntegerLiteral 0x563f2ea19b10 <col:35> 'int' 100
| `-EnumConstantDecl 0x563f2ea19be0 <line:84:9, col:32> col:9 CONFIGURE_PHASE_LAST 'Element::ConfigurePhase'
|   `-ImplicitCastExpr 0x563f2ea19c90 <col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x563f2ea19bc0 <col:32> 'int' Int: 2000
|       `-IntegerLiteral 0x563f2ea19ba0 <col:32> 'int' 2000
|-CXXMethodDecl 0x563f2ea19cd0 <line:86:5, col:35> col:17 configure_phase 'int () const' virtual
|-CXXMethodDecl 0x563f2ea1a110 <line:88:5, col:67> col:17 configure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x563f2ea19f80 <col:27, col:43> col:43 conf 'Vector<String> &'
| `-ParmVarDecl 0x563f2ea19ff8 <col:49, col:63> col:63 errh 'ErrorHandler *'
|-CXXMethodDecl 0x563f2ea1a1e0 <line:90:5, col:31> col:18 add_handlers 'void ()' virtual
|-CXXMethodDecl 0x563f2ea1a360 <line:92:5, col:46> col:17 initialize 'int (ErrorHandler *)' virtual
| `-ParmVarDecl 0x563f2ea1a290 <col:28, col:42> col:42 errh 'ErrorHandler *'
|-CXXMethodDecl 0x563f2ea1a568 <line:94:5, col:69> col:18 take_state 'void (Element *, ErrorHandler *)' virtual
| |-ParmVarDecl 0x563f2ea1a418 <col:29, col:38> col:38 old_element 'Element *'
| `-ParmVarDecl 0x563f2ea1a490 <col:51, col:65> col:65 errh 'ErrorHandler *'
|-CXXMethodDecl 0x563f2ea1a668 <line:95:5, col:40> col:22 hotswap_element 'Element *() const' virtual
|-EnumDecl 0x563f2ea1a708 <line:97:5, line:106:5> line:97:10 referenced CleanupStage
| |-EnumConstantDecl 0x563f2ea1a7d0 <line:98:9> col:9 referenced CLEANUP_NO_ROUTER 'Element::CleanupStage'
| |-EnumConstantDecl 0x563f2ea1a860 <line:99:9, col:36> col:9 CLEANUP_BEFORE_CONFIGURE 'Element::CleanupStage'
| | `-ImplicitCastExpr 0x563f2ea1aa90 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563f2ea1a840 <col:36> 'int' Int: 0
| |     `-DeclRefExpr 0x563f2ea1a820 <col:36> 'int' EnumConstant 0x563f2ea1a7d0 'CLEANUP_NO_ROUTER' 'Element::CleanupStage'
| |-EnumConstantDecl 0x563f2ea1a8b0 <line:100:9> col:9 CLEANUP_CONFIGURE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x563f2ea1a900 <line:101:9> col:9 CLEANUP_CONFIGURED 'Element::CleanupStage'
| |-EnumConstantDecl 0x563f2ea1a950 <line:102:9> col:9 CLEANUP_INITIALIZE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x563f2ea1a9a0 <line:103:9> col:9 CLEANUP_INITIALIZED 'Element::CleanupStage'
| |-EnumConstantDecl 0x563f2ea1a9f0 <line:104:9> col:9 CLEANUP_ROUTER_INITIALIZED 'Element::CleanupStage'
| `-EnumConstantDecl 0x563f2ea1aa40 <line:105:9> col:9 CLEANUP_MANUAL 'Element::CleanupStage'
|-CXXMethodDecl 0x563f2ea1ab78 <line:107:5, col:44> col:18 cleanup 'void (Element::CleanupStage)' virtual
| `-ParmVarDecl 0x563f2ea1aab8 <col:26, col:39> col:39 stage 'Element::CleanupStage'
|-CXXMethodDecl 0x563f2ea1ac40 <line:109:5, col:42> col:24 static_initialize 'void ()' static inline
|-CXXMethodDecl 0x563f2ea1ad00 <line:110:5, col:39> col:24 static_cleanup 'void ()' static inline
|-CXXMethodDecl 0x563f2ea1adc0 <line:113:5, col:19> col:12 name 'String () const'
|-CXXMethodDecl 0x563f2ea1ae80 <line:114:5, col:34> col:20 declaration 'String () const' virtual
|-CXXMethodDecl 0x563f2ea1af98 <line:116:5, col:29> col:20 used router 'Router *() const' inline
|-CXXMethodDecl 0x563f2ea1b060 <line:117:5, col:25> col:16 used eindex 'int () const' inline
|-CXXMethodDecl 0x563f2ea1b1e0 <line:118:5, col:34> col:16 eindex 'int (Router *) const' inline
| `-ParmVarDecl 0x563f2ea1b110 <col:23, col:31> col:31 r 'Router *'
|-CXXMethodDecl 0x563f2ea1b308 <line:121:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x563f2ea1b508 <line:123:5, line:127:5> line:123:17 attach_router 'void (Router *, int)' inline
| |-ParmVarDecl 0x563f2ea1b3b8 <col:31, col:39> col:39 used r 'Router *'
| |-ParmVarDecl 0x563f2ea1b438 <col:42, col:46> col:46 used eindex 'int'
| `-CompoundStmt 0x563f2ea28e58 <col:54, line:127:5>
|   |-ParenExpr 0x563f2ea28d08 <line:124:9, col:152> 'void'
|   | `-ConditionalOperator 0x563f2ea28cd8 <col:10, col:151> 'void'
|   |   |-CXXStaticCastExpr 0x563f2ea289c8 <col:10, col:38> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x563f2ea289a0 <col:30, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-ImplicitCastExpr 0x563f2ea28988 <col:31> 'bool' <PointerToBoolean>
|   |   |     `-ImplicitCastExpr 0x563f2ea28970 <col:31> 'Router *' <LValueToRValue>
|   |   |       `-MemberExpr 0x563f2ea28940 <col:31> 'Router *' lvalue ->_router 0x563f2ea26820
|   |   |         `-CXXThisExpr 0x563f2ea28930 <col:31> 'Element *' implicit this
|   |   |-CXXFunctionalCastExpr 0x563f2ea28a28 <col:42, col:49> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x563f2ea28a08 <col:48> 'int' 0
|   |   `-CallExpr 0x563f2ea28c38 <col:53, col:151> 'void'
|   |     |-ImplicitCastExpr 0x563f2ea28c20 <col:53> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x563f2ea28c00 <col:53> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x563f2e5515c0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x563f2ea28c78 <col:68> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563f2ea28a98 <col:68> 'const char [9]' lvalue "!_router"
|   |     |-ImplicitCastExpr 0x563f2ea28c90 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563f2ea28ab8 <col:80> 'const char [30]' lvalue "../dummy_inc/click/element.hh"
|   |     |-ImplicitCastExpr 0x563f2ea28ca8 <col:113> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x563f2ea28af0 <col:113> 'int' 124
|   |     `-ImplicitCastExpr 0x563f2ea28cc0 <col:118, col:132> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x563f2ea28be8 <col:118, col:132> 'const char [43]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x563f2ea28bd0 <col:132> 'const char [43]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x563f2ea28b88 <col:132> 'const char [43]' lvalue "void Element::attach_router(Router *, int)"
|   |-BinaryOperator 0x563f2ea28da0 <line:125:9, col:19> 'Router *' lvalue '='
|   | |-MemberExpr 0x563f2ea28d38 <col:9> 'Router *' lvalue ->_router 0x563f2ea26820
|   | | `-CXXThisExpr 0x563f2ea28d28 <col:9> 'Element *' implicit this
|   | `-ImplicitCastExpr 0x563f2ea28d88 <col:19> 'Router *' <LValueToRValue>
|   |   `-DeclRefExpr 0x563f2ea28d68 <col:19> 'Router *' lvalue ParmVar 0x563f2ea1b3b8 'r' 'Router *'
|   `-BinaryOperator 0x563f2ea28e38 <line:126:9, col:19> 'int' lvalue '='
|     |-MemberExpr 0x563f2ea28dd0 <col:9> 'int' lvalue ->_eindex 0x563f2ea26888
|     | `-CXXThisExpr 0x563f2ea28dc0 <col:9> 'Element *' implicit this
|     `-ImplicitCastExpr 0x563f2ea28e20 <col:19> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x563f2ea28e00 <col:19> 'int' lvalue ParmVar 0x563f2ea1b438 'eindex' 'int'
|-CXXMethodDecl 0x563f2ea1b690 <line:130:5, col:38> col:16 used nports 'int (bool) const' inline
| `-ParmVarDecl 0x563f2ea1b5c8 <col:23, col:28> col:28 isoutput 'bool'
|-CXXMethodDecl 0x563f2ea1b760 <line:131:5, col:26> col:16 used ninputs 'int () const' inline
|-CXXMethodDecl 0x563f2ea1b828 <line:132:5, col:27> col:16 used noutputs 'int () const' inline
|-CXXRecordDecl 0x563f2ea1b8c8 <line:134:5, col:11> col:11 referenced class Port
|-CXXMethodDecl 0x563f2ea1bb18 <line:135:5, col:82> col:52 used port 'const Element::Port &(bool, int) const'
| |-ParmVarDecl 0x563f2ea1b990 <col:57, col:62> col:62 isoutput 'bool'
| |-ParmVarDecl 0x563f2ea1ba10 <col:72, col:76> col:76 port 'int'
| |-NoInlineAttr 0x563f2ea1bbc8 <col:20>
| `-OptimizeNoneAttr 0x563f2ea1bc20 <col:30>
|-CXXMethodDecl 0x563f2ea1bd28 <line:136:5, col:68> col:52 input 'const Element::Port &(int) const'
| |-ParmVarDecl 0x563f2ea1bc60 <col:58, col:62> col:62 port 'int'
| |-NoInlineAttr 0x563f2ea1bdd0 <col:20>
| `-OptimizeNoneAttr 0x563f2ea1be28 <col:30>
|-CXXMethodDecl 0x563f2ea1bef8 <line:137:5, col:69> col:52 output 'const Element::Port &(int) const'
| |-ParmVarDecl 0x563f2ea1be68 <col:59, col:63> col:63 port 'int'
| |-NoInlineAttr 0x563f2ea1bfa0 <col:20>
| `-OptimizeNoneAttr 0x563f2ea1bff8 <col:30>
|-CXXMethodDecl 0x563f2ea1c188 <line:139:5, col:54> col:17 used port_active 'bool (bool, int) const' inline
| |-ParmVarDecl 0x563f2ea1c030 <col:29, col:34> col:34 isoutput 'bool'
| `-ParmVarDecl 0x563f2ea1c0b0 <col:44, col:48> col:48 port 'int'
|-CXXMethodDecl 0x563f2ea1c318 <line:140:5, col:41> col:17 input_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x563f2ea1c250 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x563f2ea1c468 <line:141:5, col:41> col:17 input_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x563f2ea1c3d8 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x563f2ea1c5b8 <line:142:5, col:42> col:17 output_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x563f2ea1c528 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x563f2ea1c708 <line:143:5, col:42> col:17 output_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x563f2ea1c678 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x563f2ea1c9c8 <line:144:5, col:57> col:10 port_flow 'void (bool, int, Bitvector *) const'
| |-ParmVarDecl 0x563f2ea1c7c0 <col:20, col:25> col:25 isoutput 'bool'
| |-ParmVarDecl 0x563f2ea1c840 <col:35, col:39> col:39 port 'int'
| `-ParmVarDecl 0x563f2ea1c8e8 <col:45, col:54> col:55 'Bitvector *'
|-CXXMethodDecl 0x563f2ea1caa0 <line:147:5, col:28> col:12 configuration 'String () const'
|-CXXMethodDecl 0x563f2ea1cb60 <line:149:5, col:41> col:18 can_live_reconfigure 'bool () const' virtual
|-CXXMethodDecl 0x563f2ea1ce30 <line:150:5, col:64> col:17 live_reconfigure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x563f2ea1cce0 <col:34, col:48> col:49 'Vector<String> &'
| `-ParmVarDecl 0x563f2ea1cd58 <col:51, col:63> col:64 'ErrorHandler *'
|-CXXMethodDecl 0x563f2ea1cf58 <line:152:5, col:33> col:19 home_thread 'RouterThread *() const'
|-CXXMethodDecl 0x563f2ea1d130 <line:156:5, col:36> col:9 add_select 'int (int, int)'
| |-ParmVarDecl 0x563f2ea1d010 <col:20, col:24> col:24 fd 'int'
| `-ParmVarDecl 0x563f2ea1d090 <col:28, col:32> col:32 mask 'int'
|-CXXMethodDecl 0x563f2ea1d318 <line:157:5, col:39> col:9 remove_select 'int (int, int)'
| |-ParmVarDecl 0x563f2ea1d1f8 <col:23, col:27> col:27 fd 'int'
| `-ParmVarDecl 0x563f2ea1d278 <col:31, col:35> col:35 mask 'int'
|-CXXMethodDecl 0x563f2ea1d688 <line:161:5, col:127> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x563f2ea1d3d8 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x563f2ea1d450 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x563f2ea1d4d0 <col:82, col:106> col:94 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x563f2ea28440 <col:106> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x563f2ea28420 <col:106> 'int' 0
| `-ParmVarDecl 0x563f2ea1d548 <col:109, col:126> col:118 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x563f2ea28478 <col:126> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x563f2ea28458 <col:126> 'int' 0
|-CXXMethodDecl 0x563f2ea1da28 <line:162:5, col:115> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x563f2ea1d758 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x563f2ea1d7f0 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x563f2ea1d870 <col:82, col:86> col:86 user_data 'int'
| `-ParmVarDecl 0x563f2ea1d8e8 <col:97, col:114> col:106 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x563f2ea284b0 <col:114> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x563f2ea28490 <col:114> 'int' 0
|-CXXMethodDecl 0x563f2ea1ddb8 <line:163:5, col:117> col:10 add_read_handler 'void (const char *, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x563f2ea1db00 <col:27, col:39> col:39 name 'const char *'
| |-ParmVarDecl 0x563f2ea1db78 <col:45, col:65> col:65 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x563f2ea1dbf8 <col:80, col:96> col:84 user_data 'int' cinit
| | `-IntegerLiteral 0x563f2ea284c8 <col:96> 'int' 0
| `-ParmVarDecl 0x563f2ea1dc70 <col:99, col:116> col:108 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x563f2ea28508 <col:116> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x563f2ea284e8 <col:116> 'int' 0
|-CXXMethodDecl 0x563f2ea1e138 <line:164:5, col:130> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x563f2ea1de88 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x563f2ea1df00 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x563f2ea1df80 <col:85, col:109> col:97 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x563f2ea28540 <col:109> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x563f2ea28520 <col:109> 'int' 0
| `-ParmVarDecl 0x563f2ea1dff8 <col:112, col:129> col:121 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x563f2ea28578 <col:129> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x563f2ea28558 <col:129> 'int' 0
|-CXXMethodDecl 0x563f2ea1e4b8 <line:165:5, col:118> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x563f2ea1e208 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x563f2ea1e280 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x563f2ea1e300 <col:85, col:89> col:89 user_data 'int'
| `-ParmVarDecl 0x563f2ea1e378 <col:100, col:117> col:109 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x563f2ea285b0 <col:117> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x563f2ea28590 <col:117> 'int' 0
|-CXXMethodDecl 0x563f2ea1e848 <line:166:5, col:120> col:10 add_write_handler 'void (const char *, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x563f2ea1e590 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x563f2ea1e608 <col:46, col:67> col:67 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x563f2ea1e688 <col:83, col:99> col:87 user_data 'int' cinit
| | `-IntegerLiteral 0x563f2ea285c8 <col:99> 'int' 0
| `-ParmVarDecl 0x563f2ea1e700 <col:102, col:119> col:111 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x563f2ea28608 <col:119> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x563f2ea285e8 <col:119> 'int' 0
|-CXXMethodDecl 0x563f2ea1ec68 <line:167:5, col:142> col:10 set_handler 'void (const String &, int, HandlerCallback, const void *, const void *)'
| |-ParmVarDecl 0x563f2ea1e918 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x563f2ea1e998 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x563f2ea1ea10 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x563f2ea1ea90 <col:79, col:108> col:91 read_user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x563f2ea28640 <col:108> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x563f2ea28620 <col:108> 'int' 0
| `-ParmVarDecl 0x563f2ea1eb10 <col:111, col:141> col:123 write_user_data 'const void *' cinit
|   `-ImplicitCastExpr 0x563f2ea28678 <col:141> 'const void *' <NullToPointer>
|     `-IntegerLiteral 0x563f2ea28658 <col:141> 'int' 0
|-CXXMethodDecl 0x563f2ea1f088 <line:168:5, col:122> col:10 set_handler 'void (const String &, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x563f2ea1ed40 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x563f2ea1edc0 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x563f2ea1ee38 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x563f2ea1eeb8 <col:79, col:83> col:83 read_user_data 'int'
| `-ParmVarDecl 0x563f2ea1ef38 <col:99, col:121> col:103 write_user_data 'int' cinit
|   `-IntegerLiteral 0x563f2ea28690 <col:121> 'int' 0
|-CXXMethodDecl 0x563f2ea1f4b8 <line:169:5, col:124> col:10 set_handler 'void (const char *, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x563f2ea1f168 <col:22, col:34> col:34 name 'const char *'
| |-ParmVarDecl 0x563f2ea1f1e8 <col:40, col:44> col:44 flags 'int'
| |-ParmVarDecl 0x563f2ea1f260 <col:51, col:67> col:67 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x563f2ea1f2e0 <col:77, col:98> col:81 read_user_data 'int' cinit
| | `-IntegerLiteral 0x563f2ea286b0 <col:98> 'int' 0
| `-ParmVarDecl 0x563f2ea1f360 <col:101, col:123> col:105 write_user_data 'int' cinit
|   `-IntegerLiteral 0x563f2ea286d0 <col:123> 'int' 0
|-CXXMethodDecl 0x563f2ea1f780 <line:170:5, col:81> col:9 set_handler_flags 'int (const String &, int, int)'
| |-ParmVarDecl 0x563f2ea1f590 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x563f2ea1f610 <col:47, col:51> col:51 set_flags 'int'
| `-ParmVarDecl 0x563f2ea1f690 <col:62, col:80> col:66 clear_flags 'int' cinit
|   `-IntegerLiteral 0x563f2ea286f0 <col:80> 'int' 0
|-EnumDecl 0x563f2ea1f838 <line:171:5, line:175:36> line:171:5
| |-EnumConstantDecl 0x563f2ea1f940 <col:12, col:42> col:12 TASKHANDLER_WRITE_SCHEDULED 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x563f2ea1fbd0 <col:42> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563f2ea1f920 <col:42> 'int' Int: 1
| |     `-IntegerLiteral 0x563f2ea1f900 <col:42> 'int' 1
| |-EnumConstantDecl 0x563f2ea1f9d0 <line:172:12, col:40> col:12 TASKHANDLER_WRITE_TICKETS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x563f2ea1fbe8 <col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563f2ea1f9b0 <col:40> 'int' Int: 2
| |     `-IntegerLiteral 0x563f2ea1f990 <col:40> 'int' 2
| |-EnumConstantDecl 0x563f2ea1fa60 <line:173:12, col:44> col:12 TASKHANDLER_WRITE_HOME_THREAD 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x563f2ea1fc00 <col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563f2ea1fa40 <col:44> 'int' Int: 4
| |     `-IntegerLiteral 0x563f2ea1fa20 <col:44> 'int' 4
| |-EnumConstantDecl 0x563f2ea1faf0 <line:174:12, col:36> col:12 TASKHANDLER_WRITE_ALL 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x563f2ea1fc18 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563f2ea1fad0 <col:36> 'int' Int: 7
| |     `-IntegerLiteral 0x563f2ea1fab0 <col:36> 'int' 7
| `-EnumConstantDecl 0x563f2ea1fb80 <line:175:12, col:34> col:12 referenced TASKHANDLER_DEFAULT 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|   `-ImplicitCastExpr 0x563f2ea1fc30 <col:34> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x563f2ea1fb60 <col:34> 'int' Int: 6
|       `-IntegerLiteral 0x563f2ea1fb40 <col:34> 'int' 6
|-CXXMethodDecl 0x563f2ea1fee8 <line:176:5, col:106> col:10 used add_task_handlers 'void (Task *, NotifierSignal *, int, const String &)'
| |-ParmVarDecl 0x563f2ea1fc58 <col:28, col:34> col:34 task 'Task *'
| |-ParmVarDecl 0x563f2ea1fcf8 <col:40, col:56> col:56 signal 'NotifierSignal *'
| |-ParmVarDecl 0x563f2ea1fd78 <col:64, col:68> col:68 flags 'int'
| `-ParmVarDecl 0x563f2ea1fdf0 <col:75, col:105> col:89 prefix 'const String &' cinit
|   `-ExprWithCleanups 0x563f2ea287a8 <col:98, col:105> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x563f2ea28790 <col:98, col:105> 'const String' lvalue
|       `-ImplicitCastExpr 0x563f2ea28778 <col:98, col:105> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x563f2ea28758 <col:98, col:105> 'String' (CXXTemporary 0x563f2ea28758)
|           `-CXXTemporaryObjectExpr 0x563f2ea28720 <col:98, col:105> 'String' 'void ()'
|-CXXMethodDecl 0x563f2ea20188 <line:177:5, line:179:5> line:177:17 add_task_handlers 'void (Task *, NotifierSignal *, const String &)' inline
| |-ParmVarDecl 0x563f2ea1ffb8 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x563f2ea20030 <col:47, col:63> col:63 used signal 'NotifierSignal *'
| |-ParmVarDecl 0x563f2ea200a8 <col:71, col:101> col:85 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x563f2ea28858 <col:94, col:101> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x563f2ea28840 <col:94, col:101> 'const String' lvalue
| |     `-ImplicitCastExpr 0x563f2ea28828 <col:94, col:101> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x563f2ea28808 <col:94, col:101> 'String' (CXXTemporary 0x563f2ea28808)
| |         `-CXXTemporaryObjectExpr 0x563f2ea287d0 <col:94, col:101> 'String' 'void ()'
| `-CompoundStmt 0x563f2ea29040 <col:104, line:179:5>
|   `-CXXMemberCallExpr 0x563f2ea28fb8 <line:178:9, col:68> 'void'
|     |-MemberExpr 0x563f2ea28f88 <col:9> '<bound member function type>' ->add_task_handlers 0x563f2ea1fee8
|     | `-CXXThisExpr 0x563f2ea28f78 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x563f2ea28ff8 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x563f2ea28ef8 <col:27> 'Task *' lvalue ParmVar 0x563f2ea1ffb8 'task' 'Task *'
|     |-ImplicitCastExpr 0x563f2ea29010 <col:33> 'NotifierSignal *' <LValueToRValue>
|     | `-DeclRefExpr 0x563f2ea28f18 <col:33> 'NotifierSignal *' lvalue ParmVar 0x563f2ea20030 'signal' 'NotifierSignal *'
|     |-ImplicitCastExpr 0x563f2ea29028 <col:41> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x563f2ea28f38 <col:41> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x563f2ea1fb80 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x563f2ea28f58 <col:62> 'const String' lvalue ParmVar 0x563f2ea200a8 'prefix' 'const String &'
|-CXXMethodDecl 0x563f2ea20398 <line:180:5, line:182:5> line:180:17 add_task_handlers 'void (Task *, const String &)' inline
| |-ParmVarDecl 0x563f2ea20250 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x563f2ea202c8 <col:47, col:77> col:61 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x563f2ea28908 <col:70, col:77> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x563f2ea288f0 <col:70, col:77> 'const String' lvalue
| |     `-ImplicitCastExpr 0x563f2ea288d8 <col:70, col:77> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x563f2ea288b8 <col:70, col:77> 'String' (CXXTemporary 0x563f2ea288b8)
| |         `-CXXTemporaryObjectExpr 0x563f2ea28880 <col:70, col:77> 'String' 'void ()'
| `-CompoundStmt 0x563f2ea29218 <col:80, line:182:5>
|   `-CXXMemberCallExpr 0x563f2ea29190 <line:181:9, col:63> 'void'
|     |-MemberExpr 0x563f2ea29160 <col:9> '<bound member function type>' ->add_task_handlers 0x563f2ea1fee8
|     | `-CXXThisExpr 0x563f2ea29150 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x563f2ea291d0 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x563f2ea290d0 <col:27> 'Task *' lvalue ParmVar 0x563f2ea20250 'task' 'Task *'
|     |-ImplicitCastExpr 0x563f2ea291e8 <col:33> 'NotifierSignal *' <NullToPointer>
|     | `-IntegerLiteral 0x563f2ea290f0 <col:33> 'int' 0
|     |-ImplicitCastExpr 0x563f2ea29200 <col:36> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x563f2ea29110 <col:36> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x563f2ea1fb80 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x563f2ea29130 <col:57> 'const String' lvalue ParmVar 0x563f2ea202c8 'prefix' 'const String &'
|-CXXMethodDecl 0x563f2ea20678 <line:184:5, col:70> col:10 add_data_handlers 'void (const char *, int, uint8_t *)'
| |-ParmVarDecl 0x563f2ea20460 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x563f2ea204e0 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x563f2ea20558 <col:57, col:66> col:66 data 'uint8_t *'
|-CXXMethodDecl 0x563f2ea20928 <line:185:5, col:67> col:10 add_data_handlers 'void (const char *, int, bool *)'
| |-ParmVarDecl 0x563f2ea20748 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x563f2ea207c8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x563f2ea20848 <col:57, col:63> col:63 data 'bool *'
|-CXXMethodDecl 0x563f2ea20c18 <line:186:5, col:71> col:10 add_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x563f2ea209f8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x563f2ea20a78 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x563f2ea20af0 <col:57, col:67> col:67 data 'uint16_t *'
|-CXXMethodDecl 0x563f2ea20ec8 <line:187:5, col:66> col:10 add_data_handlers 'void (const char *, int, int *)'
| |-ParmVarDecl 0x563f2ea20ce8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x563f2ea20d68 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x563f2ea20de8 <col:57, col:62> col:62 data 'int *'
|-CXXMethodDecl 0x563f2ea21178 <line:188:5, col:71> col:10 add_data_handlers 'void (const char *, int, unsigned int *)'
| |-ParmVarDecl 0x563f2ea20f98 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x563f2ea21018 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x563f2ea21098 <col:57, col:67> col:67 data 'unsigned int *'
|-CXXMethodDecl 0x563f2ea21428 <line:189:5, col:78> col:10 add_data_handlers 'void (const char *, int, atomic_uint32_t *)'
| |-ParmVarDecl 0x563f2ea21248 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x563f2ea212c8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x563f2ea21340 <col:57, col:74> col:74 data 'atomic_uint32_t *'
|-CXXMethodDecl 0x563f2ea216d8 <line:190:5, col:67> col:10 add_data_handlers 'void (const char *, int, long *)'
| |-ParmVarDecl 0x563f2ea214f8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x563f2ea21578 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x563f2ea215f8 <col:57, col:63> col:63 data 'long *'
|-CXXMethodDecl 0x563f2ea219e8 <line:191:5, col:76> col:10 add_data_handlers 'void (const char *, int, unsigned long *)'
| |-ParmVarDecl 0x563f2ea21800 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x563f2ea21880 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x563f2ea21900 <col:57, col:72> col:72 data 'unsigned long *'
|-CXXMethodDecl 0x563f2ea21cc8 <line:193:5, col:72> col:10 add_data_handlers 'void (const char *, int, long long *)'
| |-ParmVarDecl 0x563f2ea21ab8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x563f2ea21b38 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x563f2ea21be0 <col:57, col:68> col:68 data 'long long *'
|-CXXMethodDecl 0x563f2ea21fa8 <line:194:5, col:81> col:10 add_data_handlers 'void (const char *, int, unsigned long long *)'
| |-ParmVarDecl 0x563f2ea21d98 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x563f2ea21e18 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x563f2ea21ec0 <col:57, col:77> col:77 data 'unsigned long long *'
|-CXXMethodDecl 0x563f2ea22210 <line:196:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x563f2ea22078 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x563f2ea220f8 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x563f2ea22170 <col:67, col:77> col:77 data 'uint16_t *'
|-CXXMethodDecl 0x563f2ea224b8 <line:197:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint32_t *)'
| |-ParmVarDecl 0x563f2ea222e0 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x563f2ea22360 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x563f2ea223d8 <col:67, col:77> col:77 data 'uint32_t *'
|-CXXMethodDecl 0x563f2ea22768 <line:199:5, col:69> col:10 add_data_handlers 'void (const char *, int, double *)'
| |-ParmVarDecl 0x563f2ea22588 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x563f2ea22608 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x563f2ea22688 <col:57, col:65> col:65 data 'double *'
|-CXXMethodDecl 0x563f2ea22a18 <line:201:5, col:69> col:10 add_data_handlers 'void (const char *, int, String *)'
| |-ParmVarDecl 0x563f2ea22838 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x563f2ea228b8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x563f2ea22930 <col:57, col:65> col:65 data 'String *'
|-CXXMethodDecl 0x563f2ea22cc8 <line:202:5, col:72> col:10 add_data_handlers 'void (const char *, int, IPAddress *)'
| |-ParmVarDecl 0x563f2ea22ae8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x563f2ea22b68 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x563f2ea22be0 <col:57, col:68> col:68 data 'IPAddress *'
|-CXXMethodDecl 0x563f2ea22f98 <line:203:5, col:75> col:10 add_data_handlers 'void (const char *, int, EtherAddress *)'
| |-ParmVarDecl 0x563f2ea22d98 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x563f2ea22e18 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x563f2ea22eb8 <col:57, col:71> col:71 data 'EtherAddress *'
|-CXXMethodDecl 0x563f2ea232c8 <line:204:5, col:98> col:10 add_data_handlers 'void (const char *, int, Timestamp *, bool)'
| |-ParmVarDecl 0x563f2ea23068 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x563f2ea230e8 <col:46, col:50> col:50 flags 'int'
| |-ParmVarDecl 0x563f2ea23160 <col:57, col:68> col:68 data 'Timestamp *'
| `-ParmVarDecl 0x563f2ea231d8 <col:74, col:93> col:79 is_interval 'bool' cinit
|   `-CXXBoolLiteralExpr 0x563f2ea28920 <col:93> 'bool' false
|-CXXMethodDecl 0x563f2ea234b0 <line:206:5, col:58> col:19 read_positional_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x563f2ea23398 <col:43, col:50> col:51 'Element *'
| `-ParmVarDecl 0x563f2ea23418 <col:53, col:57> col:58 'void *'
|-CXXMethodDecl 0x563f2ea23688 <line:207:5, col:55> col:19 read_keyword_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x563f2ea23570 <col:40, col:47> col:48 'Element *'
| `-ParmVarDecl 0x563f2ea235f0 <col:50, col:54> col:55 'void *'
|-CXXMethodDecl 0x563f2ea23968 <line:208:5, col:92> col:16 reconfigure_positional_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x563f2ea23748 <col:47, col:59> col:60 'const String &'
| |-ParmVarDecl 0x563f2ea237c0 <col:62, col:69> col:70 'Element *'
| |-ParmVarDecl 0x563f2ea23840 <col:72, col:76> col:77 'void *'
| `-ParmVarDecl 0x563f2ea238b8 <col:79, col:91> col:92 'ErrorHandler *'
|-CXXMethodDecl 0x563f2ea23c58 <line:209:5, col:89> col:16 reconfigure_keyword_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x563f2ea23a38 <col:44, col:56> col:57 'const String &'
| |-ParmVarDecl 0x563f2ea23ab0 <col:59, col:66> col:67 'Element *'
| |-ParmVarDecl 0x563f2ea23b30 <col:69, col:73> col:74 'void *'
| `-ParmVarDecl 0x563f2ea23ba8 <col:76, col:88> col:89 'ErrorHandler *'
|-CXXMethodDecl 0x563f2ea23e90 <line:211:5, col:50> col:17 llrpc 'int (unsigned int, void *)' virtual
| |-ParmVarDecl 0x563f2ea23d30 <col:23, col:32> col:32 command 'unsigned int'
| `-ParmVarDecl 0x563f2ea23db0 <col:41, col:47> col:47 arg 'void *'
|-CXXMethodDecl 0x563f2ea24078 <line:212:5, col:48> col:9 local_llrpc 'int (unsigned int, void *)'
| |-ParmVarDecl 0x563f2ea23f58 <col:21, col:30> col:30 command 'unsigned int'
| `-ParmVarDecl 0x563f2ea23fd8 <col:39, col:45> col:45 arg 'void *'
|-CXXRecordDecl 0x563f2ea24128 prev 0x563f2ea1b8c8 <line:214:5, line:252:5> line:214:11 referenced class Port definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x563f2ea24220 <col:5, col:11> col:11 implicit referenced class Port
| |-AccessSpecDecl 0x563f2ea242b0 <col:18, col:24> col:18 public
| |-CXXMethodDecl 0x563f2ea24328 <line:216:9, col:30> col:21 used active 'bool () const' inline
| |-CXXMethodDecl 0x563f2ea243e8 <line:217:9, col:35> col:25 element 'Element *() const' inline
| |-CXXMethodDecl 0x563f2ea244b0 <line:218:9, col:27> col:20 port 'int () const' inline
| |-CXXMethodDecl 0x563f2ea24628 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| | |-ParmVarDecl 0x563f2ea24560 <col:54, col:62> col:62 p 'Packet *'
| | |-NoInlineAttr 0x563f2ea246d0 <col:24>
| | `-OptimizeNoneAttr 0x563f2ea24728 <col:34>
| |-CXXMethodDecl 0x563f2ea24770 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
| |-CXXMethodDecl 0x563f2ea24a28 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| | |-ParmVarDecl 0x563f2ea24820 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x563f2ea24898 <col:43, col:52> col:52 e 'Element *'
| | `-ParmVarDecl 0x563f2ea24918 <col:55, col:59> col:59 port 'int'
| |-AccessSpecDecl 0x563f2ea24ae0 <line:229:7, col:14> col:7 private
| |-FieldDecl 0x563f2ea24b18 <line:231:9, col:18> col:18 referenced _e 'Element *'
| |-FieldDecl 0x563f2ea24b80 <line:232:9, col:13> col:13 referenced _port 'int'
| |-CXXConstructorDecl 0x563f2ea24c08 <line:247:9, col:21> col:16 Port 'void ()' inline
| |-CXXMethodDecl 0x563f2ea24f28 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| | |-ParmVarDecl 0x563f2ea24cc0 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x563f2ea24d38 <col:43, col:52> col:52 owner 'Element *'
| | |-ParmVarDecl 0x563f2ea24db0 <col:59, col:68> col:68 e 'Element *'
| | `-ParmVarDecl 0x563f2ea24e30 <col:71, col:75> col:75 port 'int'
| |-FriendDecl 0x563f2ea25040 <line:250:9, col:22> col:16 'class Element':'Element'
| |-CXXConstructorDecl 0x563f2ea2c9b8 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x563f2ea2c9b8
| | `-ParmVarDecl 0x563f2ea2cac8 <col:11> col:11 'const Element::Port &'
| |-CXXConstructorDecl 0x563f2ea2cb68 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x563f2ea2cb68
| | `-ParmVarDecl 0x563f2ea2cc78 <col:11> col:11 'Element::Port &&'
| `-CXXDestructorDecl 0x563f2ebfd110 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x563f2ea250b8 <line:256:5, col:49> col:12 id 'String () const'
| `-DeprecatedAttr 0x563f2ea25158 <col:38> "" ""
|-CXXMethodDecl 0x563f2ea251e8 <line:257:5, col:55> col:12 landmark 'String () const'
| `-DeprecatedAttr 0x563f2ea25288 <col:44> "" ""
|-AccessSpecDecl 0x563f2ea252f8 <line:260:3, col:10> col:3 private
|-EnumDecl 0x563f2ea25320 <line:262:5, col:29> col:5
| `-EnumConstantDecl 0x563f2ea25420 <col:12, col:27> col:12 referenced INLINE_PORTS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:262:5)'
|   `-ImplicitCastExpr 0x563f2ea25470 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x563f2ea25400 <col:27> 'int' Int: 4
|       `-IntegerLiteral 0x563f2ea253e0 <col:27> 'int' 4
|-FieldDecl 0x563f2ea25528 <line:264:5, col:19> col:11 referenced _ports 'Element::Port *[2]'
|-FieldDecl 0x563f2ea256d8 <line:265:5, col:36> col:10 _inline_ports 'Element::Port [4]'
|-FieldDecl 0x563f2ea25790 <line:267:5, col:18> col:9 referenced _nports 'int [2]'
|-FieldDecl 0x563f2ea26820 <line:269:5, col:13> col:13 referenced _router 'Router *'
|-FieldDecl 0x563f2ea26888 <line:270:5, col:9> col:9 referenced _eindex 'int'
|-CXXConstructorDecl 0x563f2ea269d8 <line:292:5, col:28> col:5 Element 'void (const Element &)'
| `-ParmVarDecl 0x563f2ea26918 <col:13, col:27> col:28 'const Element &'
|-CXXMethodDecl 0x563f2ea26b88 <line:293:5, col:39> col:14 operator= 'Element &(const Element &)'
| `-ParmVarDecl 0x563f2ea26a98 <col:24, col:38> col:39 'const Element &'
|-CXXMethodDecl 0x563f2ea26d68 <line:296:5, col:28> col:9 set_nports 'int (int, int)'
| |-ParmVarDecl 0x563f2ea26c48 <col:20> col:23 'int'
| `-ParmVarDecl 0x563f2ea26cc8 <col:25> col:28 'int'
|-CXXMethodDecl 0x563f2ea27010 <line:297:5, col:47> col:9 notify_nports 'int (int, int, ErrorHandler *)'
| |-ParmVarDecl 0x563f2ea26e30 <col:23> col:26 'int'
| |-ParmVarDecl 0x563f2ea26eb0 <col:28> col:31 'int'
| `-ParmVarDecl 0x563f2ea26f28 <col:33, col:46> col:47 'ErrorHandler *'
|-EnumDecl 0x563f2ea270c8 <line:298:5, col:47> col:10 Processing
| |-EnumConstantDecl 0x563f2ea27190 <col:23> col:23 VAGNOSTIC 'Element::Processing'
| |-EnumConstantDecl 0x563f2ea271e0 <col:34> col:34 VPUSH 'Element::Processing'
| `-EnumConstantDecl 0x563f2ea27230 <col:41> col:41 VPULL 'Element::Processing'
|-CXXMethodDecl 0x563f2ea27410 <line:299:5, col:71> col:16 next_processing_code 'int (const char *&, ErrorHandler *)' static
| |-ParmVarDecl 0x563f2ea272c0 <col:37, col:50> col:50 p 'const char *&'
| `-ParmVarDecl 0x563f2ea27338 <col:53, col:67> col:67 errh 'ErrorHandler *'
|-CXXMethodDecl 0x563f2ea276b8 <line:300:5, col:80> col:10 processing_vector 'void (int *, int *, ErrorHandler *) const'
| |-ParmVarDecl 0x563f2ea274d8 <col:28, col:33> col:33 input_codes 'int *'
| |-ParmVarDecl 0x563f2ea27558 <col:46, col:51> col:51 output_codes 'int *'
| `-ParmVarDecl 0x563f2ea275d0 <col:65, col:77> col:78 'ErrorHandler *'
|-CXXMethodDecl 0x563f2ea278d8 <line:302:5, col:74> col:10 initialize_ports 'void (const int *, const int *)'
| |-ParmVarDecl 0x563f2ea27788 <col:27, col:38> col:38 input_codes 'const int *'
| `-ParmVarDecl 0x563f2ea27808 <col:51, col:62> col:62 output_codes 'const int *'
|-CXXMethodDecl 0x563f2ea27c10 <line:303:5, col:60> col:9 connect_port 'int (bool, int, Element *, int)'
| |-ParmVarDecl 0x563f2ea27998 <col:22, col:27> col:27 isoutput 'bool'
| |-ParmVarDecl 0x563f2ea27a18 <col:37, col:41> col:41 port 'int'
| |-ParmVarDecl 0x563f2ea27a90 <col:47, col:54> col:55 'Element *'
| `-ParmVarDecl 0x563f2ea27b10 <col:57> col:60 'int'
|-CXXMethodDecl 0x563f2ea27df8 <line:305:5, col:68> col:19 read_handlers_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x563f2ea27ce0 <col:41, col:50> col:50 e 'Element *'
| `-ParmVarDecl 0x563f2ea27d60 <col:53, col:59> col:59 user_data 'void *'
|-CXXMethodDecl 0x563f2ea27f48 <line:306:5, col:51> col:10 add_default_handlers 'void (bool)'
| `-ParmVarDecl 0x563f2ea27eb8 <col:31, col:36> col:36 writable_config 'bool'
|-CXXMethodDecl 0x563f2ea282c8 <line:307:5, col:100> col:17 add_data_handlers 'void (const char *, int, HandlerCallback, void *)' inline
| |-ParmVarDecl 0x563f2ea28008 <col:35, col:47> col:47 name 'const char *'
| |-ParmVarDecl 0x563f2ea28088 <col:53, col:57> col:57 flags 'int'
| |-ParmVarDecl 0x563f2ea28100 <col:64, col:80> col:80 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| `-ParmVarDecl 0x563f2ea28180 <col:90, col:96> col:96 data 'void *'
`-FriendDecl 0x563f2ea283e0 <line:309:5, col:18> col:12 'class Router':'Router'

Layout: <CGRecordLayout
  LLVMType:%class.Element = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Element.base = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class FixedEWMAXParameters<4, 10, unsigned long, long> (empty)
           | [sizeof=1, dsize=1, align=1,
           |  nvsize=1, nvalign=1]

*** Dumping AST Record Layout
         0 | class RateEWMAXParameters<4, 10, unsigned long, long> (empty)
         0 |   class FixedEWMAXParameters<4, 10, unsigned long, long> (base) (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=1, nvalign=1]

*** Dumping AST Record Layout
         0 | class DirectEWMAX<class RateEWMAXParameters<4, 10, unsigned long, long> >
         0 |   class RateEWMAXParameters<4, 10, unsigned long, long> (base) (empty)
         0 |     class FixedEWMAXParameters<4, 10, unsigned long, long> (base) (empty)
         0 |   DirectEWMAX<class RateEWMAXParameters<4, 10, unsigned long, long> >::value_type _avg
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class RateEWMAX<class RateEWMAXParameters<4, 10, unsigned long, long> >
         0 |   class RateEWMAXParameters<4, 10, unsigned long, long> (base) (empty)
         0 |     class FixedEWMAXParameters<4, 10, unsigned long, long> (base) (empty)
         0 |   unsigned int _current_epoch
         8 |   RateEWMAX<class RateEWMAXParameters<4, 10, unsigned long, long> >::value_type [1] _current
        16 |   DirectEWMAX<class RateEWMAXParameters<4, 10, unsigned long, long> > [1] _avg
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class FixedEWMAXParameters<4, 4, unsigned long, long> (empty)
           | [sizeof=1, dsize=1, align=1,
           |  nvsize=1, nvalign=1]

*** Dumping AST Record Layout
         0 | class RateEWMAXParameters<4, 4, unsigned long, long> (empty)
         0 |   class FixedEWMAXParameters<4, 4, unsigned long, long> (base) (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=1, nvalign=1]

*** Dumping AST Record Layout
         0 | class DirectEWMAX<class RateEWMAXParameters<4, 4, unsigned long, long> >
         0 |   class RateEWMAXParameters<4, 4, unsigned long, long> (base) (empty)
         0 |     class FixedEWMAXParameters<4, 4, unsigned long, long> (base) (empty)
         0 |   DirectEWMAX<class RateEWMAXParameters<4, 4, unsigned long, long> >::value_type _avg
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class RateEWMAX<class RateEWMAXParameters<4, 4, unsigned long, long> >
         0 |   class RateEWMAXParameters<4, 4, unsigned long, long> (base) (empty)
         0 |     class FixedEWMAXParameters<4, 4, unsigned long, long> (base) (empty)
         0 |   unsigned int _current_epoch
         8 |   RateEWMAX<class RateEWMAXParameters<4, 4, unsigned long, long> >::value_type [1] _current
        16 |   DirectEWMAX<class RateEWMAXParameters<4, 4, unsigned long, long> > [1] _avg
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class Counter
         0 |   class Element (primary base)
         0 |     (Element vtable pointer)
         8 |     class Element::Port *[2] _ports
        24 |     class Element::Port [4] _inline_ports
        88 |     int [2] _nports
        96 |     class Router * _router
       104 |     int _eindex
       112 |   Counter::counter_t _count
       120 |   Counter::counter_t _byte_count
       128 |   class RateEWMAX<class RateEWMAXParameters<4, 10, unsigned long, long> > _rate
       128 |     class RateEWMAXParameters<4, 10, unsigned long, long> (base) (empty)
       128 |       class FixedEWMAXParameters<4, 10, unsigned long, long> (base) (empty)
       128 |     unsigned int _current_epoch
       136 |     RateEWMAX<class RateEWMAXParameters<4, 10, unsigned long, long> >::value_type [1] _current
       144 |     DirectEWMAX<class RateEWMAXParameters<4, 10, unsigned long, long> > [1] _avg
       152 |   class RateEWMAX<class RateEWMAXParameters<4, 4, unsigned long, long> > _byte_rate
       152 |     class RateEWMAXParameters<4, 4, unsigned long, long> (base) (empty)
       152 |       class FixedEWMAXParameters<4, 4, unsigned long, long> (base) (empty)
       152 |     unsigned int _current_epoch
       160 |     RateEWMAX<class RateEWMAXParameters<4, 4, unsigned long, long> >::value_type [1] _current
       168 |     DirectEWMAX<class RateEWMAXParameters<4, 4, unsigned long, long> > [1] _avg
       176 |   Counter::counter_t _count_trigger
       184 |   class HandlerCall * _count_trigger_h
       192 |   Counter::counter_t _byte_trigger
       200 |   class HandlerCall * _byte_trigger_h
   208:0-0 |   _Bool _count_triggered
   208:1-1 |   _Bool _byte_triggered
           | [sizeof=216, dsize=209, align=8,
           |  nvsize=209, nvalign=8]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x563f2ea8a018 <../dummy_inc/click/ewma.hh:212:1, line:242:1> line:213:7 class FixedEWMAXParameters definition
|-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-TemplateArgument integral 4
|-TemplateArgument integral 10
|-TemplateArgument type 'unsigned long'
|-TemplateArgument type 'long'
|-CXXRecordDecl 0x563f2ea8a2c8 prev 0x563f2ea8a018 <col:1, col:7> col:7 implicit class FixedEWMAXParameters
|-AccessSpecDecl 0x563f2ea8a358 <col:30, col:36> col:30 public
|-TypedefDecl 0x563f2ea8a3b8 <line:215:5, col:15> col:15 referenced value_type 'unsigned long':'unsigned long'
| `-SubstTemplateTypeParmType 0x563f2ea8a380 'unsigned long' sugar
|   |-TemplateTypeParmType 0x563f2e99a250 'T' dependent depth 0 index 2
|   | `-TemplateTypeParm 0x563f2e99a200 'T'
|   `-BuiltinType 0x563f2e4b1640 'unsigned long'
|-TypedefDecl 0x563f2ea8a448 <line:216:5, col:15> col:15 referenced signed_value_type 'long':'long'
| `-SubstTemplateTypeParmType 0x563f2ea8a410 'long' sugar
|   |-TemplateTypeParmType 0x563f2e99a2e0 'U' dependent depth 0 index 3
|   | `-TemplateTypeParm 0x563f2e99a290 'U'
|   `-BuiltinType 0x563f2e4b15a0 'long'
|-CXXMethodDecl 0x563f2ea8a4a0 <line:220:5, line:222:5> line:220:21 stability_shift 'unsigned int ()' static
|-CXXMethodDecl 0x563f2ea8a550 <line:226:5, line:229:5> line:226:21 scale 'unsigned int ()' static
|-CXXMethodDecl 0x563f2ea8a668 <line:232:5, line:234:5> line:232:23 scaled_one 'FixedEWMAXParameters<4, 10, unsigned long, long>::value_type ()' static
|-CXXMethodDecl 0x563f2ea8a718 <line:238:5, line:240:5> line:238:21 compensation 'unsigned int ()' static
|-CXXConstructorDecl 0x563f2ebfa058 <line:213:7> col:7 implicit constexpr FixedEWMAXParameters 'void (const FixedEWMAXParameters<4, 10, unsigned long, long> &)' inline default trivial noexcept-unevaluated 0x563f2ebfa058
| `-ParmVarDecl 0x563f2ebfa168 <col:7> col:7 'const FixedEWMAXParameters<4, 10, unsigned long, long> &'
|-CXXConstructorDecl 0x563f2ebfa208 <col:7> col:7 implicit constexpr FixedEWMAXParameters 'void (FixedEWMAXParameters<4, 10, unsigned long, long> &&)' inline default trivial noexcept-unevaluated 0x563f2ebfa208
| `-ParmVarDecl 0x563f2ebfa318 <col:7> col:7 'FixedEWMAXParameters<4, 10, unsigned long, long> &&'
`-CXXDestructorDecl 0x563f2ebfa508 <col:7> col:7 implicit ~FixedEWMAXParameters 'void ()' inline default trivial noexcept-unevaluated 0x563f2ebfa508

Layout: <CGRecordLayout
  LLVMType:%class.FixedEWMAXParameters = type { i8 }
  NonVirtualBaseLLVMType:%class.FixedEWMAXParameters = type { i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x563f2ea89288 <../dummy_inc/click/ewma.hh:455:1, line:471:1> line:456:7 class RateEWMAXParameters definition
|-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-public 'FixedEWMAXParameters<4U, 10U, unsigned long, long>':'FixedEWMAXParameters<4, 10, unsigned long, long>'
|-TemplateArgument integral 4
|-TemplateArgument integral 10
|-TemplateArgument type 'unsigned long'
|-TemplateArgument type 'long'
|-CXXRecordDecl 0x563f2ea8a810 prev 0x563f2ea89288 <col:1, col:7> col:7 implicit class RateEWMAXParameters
|-AccessSpecDecl 0x563f2ea8a8a0 <col:83, col:89> col:83 public
|-EnumDecl 0x563f2ea8a8c8 <line:457:5> col:5
| `-EnumConstantDecl 0x563f2ea8a9c0 <line:458:2, col:15> col:2 referenced rate_count 'RateEWMAXParameters<4, 10, unsigned long, long>::(anonymous enum at ../dummy_inc/click/ewma.hh:457:5)'
|   `-ImplicitCastExpr 0x563f2ea8aa10 <col:15> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x563f2ea8a9a0 <col:15> 'int' Int: 1
|       `-IntegerLiteral 0x563f2ea84050 <col:15> 'int' 1
|-CXXMethodDecl 0x563f2ea8aa28 <line:463:5, line:465:5> line:463:21 epoch 'unsigned int ()' static
|-CXXMethodDecl 0x563f2ea8aad8 <line:468:5, line:470:5> line:468:21 epoch_frequency 'unsigned int ()' static
|-CXXConstructorDecl 0x563f2ebfa388 <line:456:7> col:7 implicit constexpr RateEWMAXParameters 'void (const RateEWMAXParameters<4, 10, unsigned long, long> &)' inline default trivial noexcept-unevaluated 0x563f2ebfa388
| `-ParmVarDecl 0x563f2ebfa498 <col:7> col:7 'const RateEWMAXParameters<4, 10, unsigned long, long> &'
|-CXXConstructorDecl 0x563f2ebfa618 <col:7> col:7 implicit constexpr RateEWMAXParameters 'void (RateEWMAXParameters<4, 10, unsigned long, long> &&)' inline default trivial noexcept-unevaluated 0x563f2ebfa618
| `-ParmVarDecl 0x563f2ebfa728 <col:7> col:7 'RateEWMAXParameters<4, 10, unsigned long, long> &&'
`-CXXDestructorDecl 0x563f2ebfa948 <col:7> col:7 implicit ~RateEWMAXParameters 'void ()' inline default trivial noexcept-unevaluated 0x563f2ebfa948

Layout: <CGRecordLayout
  LLVMType:%class.RateEWMAXParameters = type { i8 }
  NonVirtualBaseLLVMType:%class.RateEWMAXParameters = type { i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x563f2ea8f418 <../dummy_inc/click/ewma.hh:73:1, line:135:1> line:74:7 class DirectEWMAX definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-public 'RateEWMAXParameters<4, 10, unsigned long, long>':'RateEWMAXParameters<4, 10, unsigned long, long>'
|-TemplateArgument type 'RateEWMAXParameters<4, 10, unsigned long, long>'
|-CXXRecordDecl 0x563f2ea8f758 prev 0x563f2ea8f418 <col:1, col:7> col:7 implicit class DirectEWMAX
|-AccessSpecDecl 0x563f2ea8f7e8 <col:32, col:38> col:32 public
|-TypedefDecl 0x563f2ea8f8a0 <line:76:5, col:36> col:36 value_type 'typename RateEWMAXParameters<4, 10, unsigned long, long>::value_type':'unsigned long'
| `-ElaboratedType 0x563f2ea8f850 'typename RateEWMAXParameters<4, 10, unsigned long, long>::value_type' sugar
|   `-TypedefType 0x563f2ea8a600 'FixedEWMAXParameters<4, 10, unsigned long, long>::value_type' sugar
|     |-Typedef 0x563f2ea8a3b8 'value_type'
|     `-SubstTemplateTypeParmType 0x563f2ea8a380 'unsigned long' sugar
|       |-TemplateTypeParmType 0x563f2e99a250 'T' dependent depth 0 index 2
|       | `-TemplateTypeParm 0x563f2e99a200 'T'
|       `-BuiltinType 0x563f2e4b1640 'unsigned long'
|-CXXConstructorDecl 0x563f2ea8f930 <line:79:5, line:81:5> line:79:5 DirectEWMAX 'void ()'
|-CXXConstructorDecl 0x563f2ea8fb08 <line:84:5, line:86:5> line:84:5 DirectEWMAX 'void (DirectEWMAX<RateEWMAXParameters<4, 10, unsigned long, long> >::value_type)'
| `-ParmVarDecl 0x563f2ea8fa20 <col:17, col:28> col:28 scaled_value 'DirectEWMAX<RateEWMAXParameters<4, 10, unsigned long, long> >::value_type':'unsigned long'
|-CXXMethodDecl 0x563f2ea8fc18 <line:90:5, line:92:5> line:90:16 scaled_average 'DirectEWMAX<RateEWMAXParameters<4, 10, unsigned long, long> >::value_type () const'
|-CXXMethodDecl 0x563f2ea8fce8 <line:96:5, line:98:5> line:96:16 unscaled_average 'DirectEWMAX<RateEWMAXParameters<4, 10, unsigned long, long> >::value_type () const'
|-CXXMethodDecl 0x563f2ea8fd98 <line:101:5, line:103:5> line:101:10 clear 'void ()'
|-CXXMethodDecl 0x563f2ea8fee8 <line:106:5, line:108:5> line:106:17 assign 'void (DirectEWMAX<RateEWMAXParameters<4, 10, unsigned long, long> >::value_type)' inline
| `-ParmVarDecl 0x563f2ea8fe58 <col:24, col:35> col:35 scaled_value 'DirectEWMAX<RateEWMAXParameters<4, 10, unsigned long, long> >::value_type':'unsigned long'
|-CXXMethodDecl 0x563f2ea90040 <line:112:5, col:36> col:17 update 'void (DirectEWMAX<RateEWMAXParameters<4, 10, unsigned long, long> >::value_type)' inline
| `-ParmVarDecl 0x563f2ea8ffb0 <col:24, col:35> col:35 x 'DirectEWMAX<RateEWMAXParameters<4, 10, unsigned long, long> >::value_type':'unsigned long'
|-CXXMethodDecl 0x563f2ea90248 <line:119:5, col:43> col:10 update_n 'void (DirectEWMAX<RateEWMAXParameters<4, 10, unsigned long, long> >::value_type, unsigned int)'
| |-ParmVarDecl 0x563f2ea90108 <col:19, col:30> col:30 x 'DirectEWMAX<RateEWMAXParameters<4, 10, unsigned long, long> >::value_type':'unsigned long'
| `-ParmVarDecl 0x563f2ea90170 <col:33, col:42> col:42 n 'unsigned int'
|-CXXMethodDecl 0x563f2ea90308 <line:124:5, col:22> col:12 unparse 'String () const'
|-CXXMethodDecl 0x563f2ea90458 <line:129:5, col:69> col:17 update_with 'void (DirectEWMAX<RateEWMAXParameters<4, 10, unsigned long, long> >::value_type)' inline
| |-ParmVarDecl 0x563f2ea903c8 <col:29, col:40> col:40 x 'DirectEWMAX<RateEWMAXParameters<4, 10, unsigned long, long> >::value_type':'unsigned long'
| `-DeprecatedAttr 0x563f2ea90538 <col:58> Inherited "" ""
|-AccessSpecDecl 0x563f2ea905a8 <line:131:3, col:10> col:3 private
|-FieldDecl 0x563f2ea905e0 <line:133:5, col:16> col:16 _avg 'DirectEWMAX<RateEWMAXParameters<4, 10, unsigned long, long> >::value_type':'unsigned long'
|-CXXConstructorDecl 0x563f2ebfa7c8 <line:74:7> col:7 implicit constexpr DirectEWMAX 'void (const DirectEWMAX<RateEWMAXParameters<4, 10, unsigned long, long> > &)' inline default trivial noexcept-unevaluated 0x563f2ebfa7c8
| `-ParmVarDecl 0x563f2ebfa8d8 <col:7> col:7 'const DirectEWMAX<RateEWMAXParameters<4, 10, unsigned long, long> > &'
|-CXXConstructorDecl 0x563f2ebfaa58 <col:7> col:7 implicit constexpr DirectEWMAX 'void (DirectEWMAX<RateEWMAXParameters<4, 10, unsigned long, long> > &&)' inline default trivial noexcept-unevaluated 0x563f2ebfaa58
| `-ParmVarDecl 0x563f2ebfab68 <col:7> col:7 'DirectEWMAX<RateEWMAXParameters<4, 10, unsigned long, long> > &&'
`-CXXDestructorDecl 0x563f2ebfad58 <col:7> col:7 implicit ~DirectEWMAX 'void ()' inline default trivial noexcept-unevaluated 0x563f2ebfad58

Layout: <CGRecordLayout
  LLVMType:%class.DirectEWMAX = type { i64 }
  NonVirtualBaseLLVMType:%class.DirectEWMAX = type { i64 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x563f2ea89548 <../dummy_inc/click/ewma.hh:372:1, line:440:1> line:373:7 class RateEWMAX definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-public 'RateEWMAXParameters<4, 10, unsigned long, long>':'RateEWMAXParameters<4, 10, unsigned long, long>'
|-TemplateArgument type 'RateEWMAXParameters<4, 10, unsigned long, long>'
|-CXXRecordDecl 0x563f2ea8abd0 prev 0x563f2ea89548 <col:1, col:7> col:7 implicit class RateEWMAX
|-AccessSpecDecl 0x563f2ea8ac60 <col:30, col:36> col:30 public
|-TypedefDecl 0x563f2ea8ad10 <line:375:5, col:36> col:36 value_type 'typename RateEWMAXParameters<4, 10, unsigned long, long>::value_type':'unsigned long'
| `-ElaboratedType 0x563f2ea8acc0 'typename RateEWMAXParameters<4, 10, unsigned long, long>::value_type' sugar
|   `-TypedefType 0x563f2ea8a600 'FixedEWMAXParameters<4, 10, unsigned long, long>::value_type' sugar
|     |-Typedef 0x563f2ea8a3b8 'value_type'
|     `-SubstTemplateTypeParmType 0x563f2ea8a380 'unsigned long' sugar
|       |-TemplateTypeParmType 0x563f2e99a250 'T' dependent depth 0 index 2
|       | `-TemplateTypeParm 0x563f2e99a200 'T'
|       `-BuiltinType 0x563f2e4b1640 'unsigned long'
|-TypedefDecl 0x563f2ea8ae00 <line:376:5, col:43> col:43 signed_value_type 'typename RateEWMAXParameters<4, 10, unsigned long, long>::signed_value_type':'long'
| `-ElaboratedType 0x563f2ea8adb0 'typename RateEWMAXParameters<4, 10, unsigned long, long>::signed_value_type' sugar
|   `-TypedefType 0x563f2ea8ad90 'FixedEWMAXParameters<4, 10, unsigned long, long>::signed_value_type' sugar
|     |-Typedef 0x563f2ea8a448 'signed_value_type'
|     `-SubstTemplateTypeParmType 0x563f2ea8a410 'long' sugar
|       |-TemplateTypeParmType 0x563f2e99a2e0 'U' dependent depth 0 index 3
|       | `-TemplateTypeParm 0x563f2e99a290 'U'
|       `-BuiltinType 0x563f2e4b15a0 'long'
|-CXXConstructorDecl 0x563f2ea8e990 <line:379:5, line:383:5> line:379:5 used RateEWMAX 'void ()'
|-CXXMethodDecl 0x563f2ea8eb68 <line:392:5, line:395:5> line:392:23 scaled_average 'RateEWMAX<RateEWMAXParameters<4, 10, unsigned long, long> >::signed_value_type (unsigned int) const'
| `-ParmVarDecl 0x563f2ea8ea70 <col:38, col:57> col:47 ratenum 'unsigned int'
|-CXXMethodDecl 0x563f2ea8ecb8 <line:399:5, line:401:5> line:399:14 scale 'unsigned int (unsigned int) const'
| `-ParmVarDecl 0x563f2ea8ec20 <col:20, col:39> col:29 ratenum 'unsigned int'
|-CXXMethodDecl 0x563f2ea8ee08 <line:410:5, col:43> col:16 rate 'int (unsigned int) const' inline
| `-ParmVarDecl 0x563f2ea8ed70 <col:21, col:40> col:30 ratenum 'unsigned int'
|-CXXMethodDecl 0x563f2ea8f008 <line:420:5, col:69> col:17 update 'void (RateEWMAX<RateEWMAXParameters<4, 10, unsigned long, long> >::signed_value_type, unsigned int)' inline
| |-ParmVarDecl 0x563f2ea8eed0 <col:24, col:42> col:42 delta 'RateEWMAX<RateEWMAXParameters<4, 10, unsigned long, long> >::signed_value_type':'long'
| `-ParmVarDecl 0x563f2ea8ef38 <col:49, col:68> col:58 ratenum 'unsigned int'
|-CXXMethodDecl 0x563f2ea8f158 <line:430:5, col:47> col:12 unparse_rate 'String (unsigned int) const'
| `-ParmVarDecl 0x563f2ea8f0c8 <col:25, col:44> col:34 ratenum 'unsigned int'
|-AccessSpecDecl 0x563f2ea8f210 <line:432:3, col:10> col:3 private
|-FieldDecl 0x563f2ea8f238 <line:434:5, col:14> col:14 _current_epoch 'unsigned int'
|-FieldDecl 0x563f2ea8f3b8 <line:435:5, col:38> col:16 _current 'RateEWMAX<RateEWMAXParameters<4, 10, unsigned long, long> >::value_type [1]'
|-FieldDecl 0x563f2ea90648 <line:436:5, col:38> col:20 _avg 'DirectEWMAX<RateEWMAXParameters<4, 10, unsigned long, long> > [1]'
|-CXXMethodDecl 0x563f2ea90728 <line:438:5, col:41> col:17 update_time 'void (unsigned int)' inline
| `-ParmVarDecl 0x563f2ea90698 <col:29, col:38> col:38 now 'unsigned int'
|-CXXConstructorDecl 0x563f2ebfabd8 <line:373:7> col:7 implicit constexpr RateEWMAX 'void (const RateEWMAX<RateEWMAXParameters<4, 10, unsigned long, long> > &)' inline default trivial noexcept-unevaluated 0x563f2ebfabd8
| `-ParmVarDecl 0x563f2ebface8 <col:7> col:7 'const RateEWMAX<RateEWMAXParameters<4, 10, unsigned long, long> > &'
`-CXXConstructorDecl 0x563f2ebfae68 <col:7> col:7 implicit constexpr RateEWMAX 'void (RateEWMAX<RateEWMAXParameters<4, 10, unsigned long, long> > &&)' inline default trivial noexcept-unevaluated 0x563f2ebfae68
  `-ParmVarDecl 0x563f2ebfaf78 <col:7> col:7 'RateEWMAX<RateEWMAXParameters<4, 10, unsigned long, long> > &&'

Layout: <CGRecordLayout
  LLVMType:%class.RateEWMAX = type { i32, [1 x i64], [1 x %class.DirectEWMAX] }
  NonVirtualBaseLLVMType:%class.RateEWMAX = type { i32, [1 x i64], [1 x %class.DirectEWMAX] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x563f2ea90a70 <../dummy_inc/click/ewma.hh:212:1, line:242:1> line:213:7 class FixedEWMAXParameters definition
|-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-TemplateArgument integral 4
|-TemplateArgument integral 4
|-TemplateArgument type 'unsigned long'
|-TemplateArgument type 'long'
|-CXXRecordDecl 0x563f2ea90d28 prev 0x563f2ea90a70 <col:1, col:7> col:7 implicit class FixedEWMAXParameters
|-AccessSpecDecl 0x563f2ea90db8 <col:30, col:36> col:30 public
|-TypedefDecl 0x563f2ea90df0 <line:215:5, col:15> col:15 referenced value_type 'unsigned long':'unsigned long'
| `-SubstTemplateTypeParmType 0x563f2ea8a380 'unsigned long' sugar
|   |-TemplateTypeParmType 0x563f2e99a250 'T' dependent depth 0 index 2
|   | `-TemplateTypeParm 0x563f2e99a200 'T'
|   `-BuiltinType 0x563f2e4b1640 'unsigned long'
|-TypedefDecl 0x563f2ea90e58 <line:216:5, col:15> col:15 referenced signed_value_type 'long':'long'
| `-SubstTemplateTypeParmType 0x563f2ea8a410 'long' sugar
|   |-TemplateTypeParmType 0x563f2e99a2e0 'U' dependent depth 0 index 3
|   | `-TemplateTypeParm 0x563f2e99a290 'U'
|   `-BuiltinType 0x563f2e4b15a0 'long'
|-CXXMethodDecl 0x563f2ea90eb0 <line:220:5, line:222:5> line:220:21 stability_shift 'unsigned int ()' static
|-CXXMethodDecl 0x563f2ea90f60 <line:226:5, line:229:5> line:226:21 scale 'unsigned int ()' static
|-CXXMethodDecl 0x563f2ea91078 <line:232:5, line:234:5> line:232:23 scaled_one 'FixedEWMAXParameters<4, 4, unsigned long, long>::value_type ()' static
|-CXXMethodDecl 0x563f2ea91128 <line:238:5, line:240:5> line:238:21 compensation 'unsigned int ()' static
|-CXXConstructorDecl 0x563f2ebfb0e8 <line:213:7> col:7 implicit constexpr FixedEWMAXParameters 'void (const FixedEWMAXParameters<4, 4, unsigned long, long> &)' inline default trivial noexcept-unevaluated 0x563f2ebfb0e8
| `-ParmVarDecl 0x563f2ebfb1f8 <col:7> col:7 'const FixedEWMAXParameters<4, 4, unsigned long, long> &'
|-CXXConstructorDecl 0x563f2ebfb298 <col:7> col:7 implicit constexpr FixedEWMAXParameters 'void (FixedEWMAXParameters<4, 4, unsigned long, long> &&)' inline default trivial noexcept-unevaluated 0x563f2ebfb298
| `-ParmVarDecl 0x563f2ebfb3a8 <col:7> col:7 'FixedEWMAXParameters<4, 4, unsigned long, long> &&'
`-CXXDestructorDecl 0x563f2ebfb598 <col:7> col:7 implicit ~FixedEWMAXParameters 'void ()' inline default trivial noexcept-unevaluated 0x563f2ebfb598

Layout: <CGRecordLayout
  LLVMType:%class.FixedEWMAXParameters.15 = type { i8 }
  NonVirtualBaseLLVMType:%class.FixedEWMAXParameters.15 = type { i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x563f2ea89818 <../dummy_inc/click/ewma.hh:455:1, line:471:1> line:456:7 class RateEWMAXParameters definition
|-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-public 'FixedEWMAXParameters<4U, 4U, unsigned long, long>':'FixedEWMAXParameters<4, 4, unsigned long, long>'
|-TemplateArgument integral 4
|-TemplateArgument integral 4
|-TemplateArgument type 'unsigned long'
|-TemplateArgument type 'long'
|-CXXRecordDecl 0x563f2ea91220 prev 0x563f2ea89818 <col:1, col:7> col:7 implicit class RateEWMAXParameters
|-AccessSpecDecl 0x563f2ea912b0 <col:83, col:89> col:83 public
|-EnumDecl 0x563f2ea912d8 <line:457:5> col:5
| `-EnumConstantDecl 0x563f2ea913d0 <line:458:2, col:15> col:2 referenced rate_count 'RateEWMAXParameters<4, 4, unsigned long, long>::(anonymous enum at ../dummy_inc/click/ewma.hh:457:5)'
|   `-ImplicitCastExpr 0x563f2ea91420 <col:15> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x563f2ea913b0 <col:15> 'int' Int: 1
|       `-IntegerLiteral 0x563f2ea84050 <col:15> 'int' 1
|-CXXMethodDecl 0x563f2ea91438 <line:463:5, line:465:5> line:463:21 epoch 'unsigned int ()' static
|-CXXMethodDecl 0x563f2ea914e8 <line:468:5, line:470:5> line:468:21 epoch_frequency 'unsigned int ()' static
|-CXXConstructorDecl 0x563f2ebfb418 <line:456:7> col:7 implicit constexpr RateEWMAXParameters 'void (const RateEWMAXParameters<4, 4, unsigned long, long> &)' inline default trivial noexcept-unevaluated 0x563f2ebfb418
| `-ParmVarDecl 0x563f2ebfb528 <col:7> col:7 'const RateEWMAXParameters<4, 4, unsigned long, long> &'
|-CXXConstructorDecl 0x563f2ebfb6a8 <col:7> col:7 implicit constexpr RateEWMAXParameters 'void (RateEWMAXParameters<4, 4, unsigned long, long> &&)' inline default trivial noexcept-unevaluated 0x563f2ebfb6a8
| `-ParmVarDecl 0x563f2ebfc7e0 <col:7> col:7 'RateEWMAXParameters<4, 4, unsigned long, long> &&'
`-CXXDestructorDecl 0x563f2ebfc9f8 <col:7> col:7 implicit ~RateEWMAXParameters 'void ()' inline default trivial noexcept-unevaluated 0x563f2ebfc9f8

Layout: <CGRecordLayout
  LLVMType:%class.RateEWMAXParameters.14 = type { i8 }
  NonVirtualBaseLLVMType:%class.RateEWMAXParameters.14 = type { i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x563f2ea922b8 <../dummy_inc/click/ewma.hh:73:1, line:135:1> line:74:7 class DirectEWMAX definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-public 'RateEWMAXParameters<4, 4, unsigned long, long>':'RateEWMAXParameters<4, 4, unsigned long, long>'
|-TemplateArgument type 'RateEWMAXParameters<4, 4, unsigned long, long>'
|-CXXRecordDecl 0x563f2ea925f8 prev 0x563f2ea922b8 <col:1, col:7> col:7 implicit class DirectEWMAX
|-AccessSpecDecl 0x563f2ea92688 <col:32, col:38> col:32 public
|-TypedefDecl 0x563f2ea92740 <line:76:5, col:36> col:36 value_type 'typename RateEWMAXParameters<4, 4, unsigned long, long>::value_type':'unsigned long'
| `-ElaboratedType 0x563f2ea926f0 'typename RateEWMAXParameters<4, 4, unsigned long, long>::value_type' sugar
|   `-TypedefType 0x563f2ea91010 'FixedEWMAXParameters<4, 4, unsigned long, long>::value_type' sugar
|     |-Typedef 0x563f2ea90df0 'value_type'
|     `-SubstTemplateTypeParmType 0x563f2ea8a380 'unsigned long' sugar
|       |-TemplateTypeParmType 0x563f2e99a250 'T' dependent depth 0 index 2
|       | `-TemplateTypeParm 0x563f2e99a200 'T'
|       `-BuiltinType 0x563f2e4b1640 'unsigned long'
|-CXXConstructorDecl 0x563f2ea927d0 <line:79:5, line:81:5> line:79:5 DirectEWMAX 'void ()'
|-CXXConstructorDecl 0x563f2ea929a8 <line:84:5, line:86:5> line:84:5 DirectEWMAX 'void (DirectEWMAX<RateEWMAXParameters<4, 4, unsigned long, long> >::value_type)'
| `-ParmVarDecl 0x563f2ea928c0 <col:17, col:28> col:28 scaled_value 'DirectEWMAX<RateEWMAXParameters<4, 4, unsigned long, long> >::value_type':'unsigned long'
|-CXXMethodDecl 0x563f2ea92ab8 <line:90:5, line:92:5> line:90:16 scaled_average 'DirectEWMAX<RateEWMAXParameters<4, 4, unsigned long, long> >::value_type () const'
|-CXXMethodDecl 0x563f2ea92b88 <line:96:5, line:98:5> line:96:16 unscaled_average 'DirectEWMAX<RateEWMAXParameters<4, 4, unsigned long, long> >::value_type () const'
|-CXXMethodDecl 0x563f2ea92c38 <line:101:5, line:103:5> line:101:10 clear 'void ()'
|-CXXMethodDecl 0x563f2ea92d88 <line:106:5, line:108:5> line:106:17 assign 'void (DirectEWMAX<RateEWMAXParameters<4, 4, unsigned long, long> >::value_type)' inline
| `-ParmVarDecl 0x563f2ea92cf8 <col:24, col:35> col:35 scaled_value 'DirectEWMAX<RateEWMAXParameters<4, 4, unsigned long, long> >::value_type':'unsigned long'
|-CXXMethodDecl 0x563f2ea92ee0 <line:112:5, col:36> col:17 update 'void (DirectEWMAX<RateEWMAXParameters<4, 4, unsigned long, long> >::value_type)' inline
| `-ParmVarDecl 0x563f2ea92e50 <col:24, col:35> col:35 x 'DirectEWMAX<RateEWMAXParameters<4, 4, unsigned long, long> >::value_type':'unsigned long'
|-CXXMethodDecl 0x563f2ea930e8 <line:119:5, col:43> col:10 update_n 'void (DirectEWMAX<RateEWMAXParameters<4, 4, unsigned long, long> >::value_type, unsigned int)'
| |-ParmVarDecl 0x563f2ea92fa8 <col:19, col:30> col:30 x 'DirectEWMAX<RateEWMAXParameters<4, 4, unsigned long, long> >::value_type':'unsigned long'
| `-ParmVarDecl 0x563f2ea93010 <col:33, col:42> col:42 n 'unsigned int'
|-CXXMethodDecl 0x563f2ea931a8 <line:124:5, col:22> col:12 unparse 'String () const'
|-CXXMethodDecl 0x563f2ea932f8 <line:129:5, col:69> col:17 update_with 'void (DirectEWMAX<RateEWMAXParameters<4, 4, unsigned long, long> >::value_type)' inline
| |-ParmVarDecl 0x563f2ea93268 <col:29, col:40> col:40 x 'DirectEWMAX<RateEWMAXParameters<4, 4, unsigned long, long> >::value_type':'unsigned long'
| `-DeprecatedAttr 0x563f2ea933d8 <col:58> Inherited "" ""
|-AccessSpecDecl 0x563f2ea93448 <line:131:3, col:10> col:3 private
|-FieldDecl 0x563f2ea93480 <line:133:5, col:16> col:16 _avg 'DirectEWMAX<RateEWMAXParameters<4, 4, unsigned long, long> >::value_type':'unsigned long'
|-CXXConstructorDecl 0x563f2ebfc878 <line:74:7> col:7 implicit constexpr DirectEWMAX 'void (const DirectEWMAX<RateEWMAXParameters<4, 4, unsigned long, long> > &)' inline default trivial noexcept-unevaluated 0x563f2ebfc878
| `-ParmVarDecl 0x563f2ebfc988 <col:7> col:7 'const DirectEWMAX<RateEWMAXParameters<4, 4, unsigned long, long> > &'
|-CXXConstructorDecl 0x563f2ebfcb08 <col:7> col:7 implicit constexpr DirectEWMAX 'void (DirectEWMAX<RateEWMAXParameters<4, 4, unsigned long, long> > &&)' inline default trivial noexcept-unevaluated 0x563f2ebfcb08
| `-ParmVarDecl 0x563f2ebfcc18 <col:7> col:7 'DirectEWMAX<RateEWMAXParameters<4, 4, unsigned long, long> > &&'
`-CXXDestructorDecl 0x563f2ebfce08 <col:7> col:7 implicit ~DirectEWMAX 'void ()' inline default trivial noexcept-unevaluated 0x563f2ebfce08

Layout: <CGRecordLayout
  LLVMType:%class.DirectEWMAX.16 = type { i64 }
  NonVirtualBaseLLVMType:%class.DirectEWMAX.16 = type { i64 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x563f2ea89ad8 <../dummy_inc/click/ewma.hh:372:1, line:440:1> line:373:7 class RateEWMAX definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-public 'RateEWMAXParameters<4, 4, unsigned long, long>':'RateEWMAXParameters<4, 4, unsigned long, long>'
|-TemplateArgument type 'RateEWMAXParameters<4, 4, unsigned long, long>'
|-CXXRecordDecl 0x563f2ea915e0 prev 0x563f2ea89ad8 <col:1, col:7> col:7 implicit class RateEWMAX
|-AccessSpecDecl 0x563f2ea91670 <col:30, col:36> col:30 public
|-TypedefDecl 0x563f2ea91720 <line:375:5, col:36> col:36 value_type 'typename RateEWMAXParameters<4, 4, unsigned long, long>::value_type':'unsigned long'
| `-ElaboratedType 0x563f2ea916d0 'typename RateEWMAXParameters<4, 4, unsigned long, long>::value_type' sugar
|   `-TypedefType 0x563f2ea91010 'FixedEWMAXParameters<4, 4, unsigned long, long>::value_type' sugar
|     |-Typedef 0x563f2ea90df0 'value_type'
|     `-SubstTemplateTypeParmType 0x563f2ea8a380 'unsigned long' sugar
|       |-TemplateTypeParmType 0x563f2e99a250 'T' dependent depth 0 index 2
|       | `-TemplateTypeParm 0x563f2e99a200 'T'
|       `-BuiltinType 0x563f2e4b1640 'unsigned long'
|-TypedefDecl 0x563f2ea91810 <line:376:5, col:43> col:43 signed_value_type 'typename RateEWMAXParameters<4, 4, unsigned long, long>::signed_value_type':'long'
| `-ElaboratedType 0x563f2ea917c0 'typename RateEWMAXParameters<4, 4, unsigned long, long>::signed_value_type' sugar
|   `-TypedefType 0x563f2ea917a0 'FixedEWMAXParameters<4, 4, unsigned long, long>::signed_value_type' sugar
|     |-Typedef 0x563f2ea90e58 'signed_value_type'
|     `-SubstTemplateTypeParmType 0x563f2ea8a410 'long' sugar
|       |-TemplateTypeParmType 0x563f2e99a2e0 'U' dependent depth 0 index 3
|       | `-TemplateTypeParm 0x563f2e99a290 'U'
|       `-BuiltinType 0x563f2e4b15a0 'long'
|-CXXConstructorDecl 0x563f2ea918a0 <line:379:5, line:383:5> line:379:5 used RateEWMAX 'void ()'
|-CXXMethodDecl 0x563f2ea91a48 <line:392:5, line:395:5> line:392:23 scaled_average 'RateEWMAX<RateEWMAXParameters<4, 4, unsigned long, long> >::signed_value_type (unsigned int) const'
| `-ParmVarDecl 0x563f2ea91980 <col:38, col:57> col:47 ratenum 'unsigned int'
|-CXXMethodDecl 0x563f2ea91b98 <line:399:5, line:401:5> line:399:14 scale 'unsigned int (unsigned int) const'
| `-ParmVarDecl 0x563f2ea91b00 <col:20, col:39> col:29 ratenum 'unsigned int'
|-CXXMethodDecl 0x563f2ea91ce8 <line:410:5, col:43> col:16 rate 'int (unsigned int) const' inline
| `-ParmVarDecl 0x563f2ea91c50 <col:21, col:40> col:30 ratenum 'unsigned int'
|-CXXMethodDecl 0x563f2ea91ee8 <line:420:5, col:69> col:17 update 'void (RateEWMAX<RateEWMAXParameters<4, 4, unsigned long, long> >::signed_value_type, unsigned int)' inline
| |-ParmVarDecl 0x563f2ea91db0 <col:24, col:42> col:42 delta 'RateEWMAX<RateEWMAXParameters<4, 4, unsigned long, long> >::signed_value_type':'long'
| `-ParmVarDecl 0x563f2ea91e18 <col:49, col:68> col:58 ratenum 'unsigned int'
|-CXXMethodDecl 0x563f2ea92038 <line:430:5, col:47> col:12 unparse_rate 'String (unsigned int) const'
| `-ParmVarDecl 0x563f2ea91fa8 <col:25, col:44> col:34 ratenum 'unsigned int'
|-AccessSpecDecl 0x563f2ea920f0 <line:432:3, col:10> col:3 private
|-FieldDecl 0x563f2ea92118 <line:434:5, col:14> col:14 _current_epoch 'unsigned int'
|-FieldDecl 0x563f2ea92258 <line:435:5, col:38> col:16 _current 'RateEWMAX<RateEWMAXParameters<4, 4, unsigned long, long> >::value_type [1]'
|-FieldDecl 0x563f2ea934e8 <line:436:5, col:38> col:20 _avg 'DirectEWMAX<RateEWMAXParameters<4, 4, unsigned long, long> > [1]'
|-CXXMethodDecl 0x563f2ea935c8 <line:438:5, col:41> col:17 update_time 'void (unsigned int)' inline
| `-ParmVarDecl 0x563f2ea93538 <col:29, col:38> col:38 now 'unsigned int'
|-CXXConstructorDecl 0x563f2ebfcc88 <line:373:7> col:7 implicit constexpr RateEWMAX 'void (const RateEWMAX<RateEWMAXParameters<4, 4, unsigned long, long> > &)' inline default trivial noexcept-unevaluated 0x563f2ebfcc88
| `-ParmVarDecl 0x563f2ebfcd98 <col:7> col:7 'const RateEWMAX<RateEWMAXParameters<4, 4, unsigned long, long> > &'
`-CXXConstructorDecl 0x563f2ebfcf18 <col:7> col:7 implicit constexpr RateEWMAX 'void (RateEWMAX<RateEWMAXParameters<4, 4, unsigned long, long> > &&)' inline default trivial noexcept-unevaluated 0x563f2ebfcf18
  `-ParmVarDecl 0x563f2ebfd028 <col:7> col:7 'RateEWMAX<RateEWMAXParameters<4, 4, unsigned long, long> > &&'

Layout: <CGRecordLayout
  LLVMType:%class.RateEWMAX.13 = type { i32, [1 x i64], [1 x %class.DirectEWMAX.16] }
  NonVirtualBaseLLVMType:%class.RateEWMAX.13 = type { i32, [1 x i64], [1 x %class.DirectEWMAX.16] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class HandlerCall
         0 |   class Element * _e
         8 |   const class Handler * _h
        16 |   class String _value
        16 |     struct String::rep_t _r
        16 |       const char * data
        24 |       int length
        32 |       struct String::memo_t * memo
           | [sizeof=40, dsize=40, align=8,
           |  nvsize=40, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563f2e9cd9e0 prev 0x563f2ea87fe0 <../dummy_inc/click/handlercall.hh:143:1, line:470:1> line:143:7 referenced class HandlerCall definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x563f2e9cdad8 <col:1, col:7> col:7 implicit referenced class HandlerCall
|-AccessSpecDecl 0x563f2e9cdb68 <col:21, col:27> col:21 public
|-CXXMethodDecl 0x563f2e9cdd78 <line:147:5, line:148:30> line:147:19 call_read 'String (Element *, const String &, ErrorHandler *)' static
| |-ParmVarDecl 0x563f2e9cdba0 <col:29, col:38> col:38 e 'Element *'
| |-ParmVarDecl 0x563f2e9cdc18 <col:41, col:55> col:55 hname 'const String &'
| `-ParmVarDecl 0x563f2e9cdc90 <line:148:8, col:29> col:22 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x563f2ebf41b0 <col:29> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x563f2ebf4190 <col:29> 'int' 0
|-CXXMethodDecl 0x563f2e9ce018 <line:149:5, line:150:30> line:149:19 call_read 'String (const String &, const Element *, ErrorHandler *)' static
| |-ParmVarDecl 0x563f2e9cde40 <col:29, col:43> col:43 hdesc 'const String &'
| |-ParmVarDecl 0x563f2e9cdeb8 <col:50, col:65> col:65 context 'const Element *'
| `-ParmVarDecl 0x563f2e9cdf30 <line:150:8, col:29> col:22 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x563f2ebf41e8 <col:29> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x563f2ebf41c8 <col:29> 'int' 0
|-CXXMethodDecl 0x563f2e9ce2c0 <line:151:5, line:152:28> line:151:16 call_write 'int (Element *, const String &, ErrorHandler *)' static
| |-ParmVarDecl 0x563f2e9ce0e0 <col:27, col:36> col:36 e 'Element *'
| |-ParmVarDecl 0x563f2e9ce158 <col:39, col:53> col:53 hname 'const String &'
| `-ParmVarDecl 0x563f2e9ce1d0 <line:152:6, col:27> col:20 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x563f2ebf4220 <col:27> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x563f2ebf4200 <col:27> 'int' 0
|-CXXMethodDecl 0x563f2e9ce5f0 <line:153:5, line:154:28> line:153:16 used call_write 'int (Element *, const String &, const String &, ErrorHandler *)' static
| |-ParmVarDecl 0x563f2e9ce388 <col:27, col:36> col:36 e 'Element *'
| |-ParmVarDecl 0x563f2e9ce400 <col:39, col:53> col:53 hname 'const String &'
| |-ParmVarDecl 0x563f2e9ce478 <col:60, col:74> col:74 value 'const String &'
| `-ParmVarDecl 0x563f2e9ce4f0 <line:154:6, col:27> col:20 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x563f2ebf4258 <col:27> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x563f2ebf4238 <col:27> 'int' 0
|-CXXMethodDecl 0x563f2e9ce8a0 <line:155:5, line:156:52> line:155:16 call_write 'int (const String &, const Element *, ErrorHandler *)' static
| |-ParmVarDecl 0x563f2e9ce6c0 <col:27, col:41> col:41 hdesc 'const String &'
| |-ParmVarDecl 0x563f2e9ce738 <line:156:6, col:21> col:21 context 'const Element *'
| `-ParmVarDecl 0x563f2e9ce7b0 <col:30, col:51> col:44 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x563f2ebf4290 <col:51> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x563f2ebf4270 <col:51> 'int' 0
|-CXXMethodDecl 0x563f2e9cebd0 <line:157:5, line:158:52> line:157:16 call_write 'int (const String &, const String &, const Element *, ErrorHandler *)' static
| |-ParmVarDecl 0x563f2e9ce968 <col:27, col:41> col:41 hdesc 'const String &'
| |-ParmVarDecl 0x563f2e9ce9e0 <col:48, col:62> col:62 value 'const String &'
| |-ParmVarDecl 0x563f2e9cea58 <line:158:6, col:21> col:21 context 'const Element *'
| `-ParmVarDecl 0x563f2e9cead0 <col:30, col:51> col:44 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x563f2ebf42c8 <col:51> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x563f2ebf42a8 <col:51> 'int' 0
|-CXXConstructorDecl 0x563f2e9cecc8 <line:167:5, line:169:5> line:167:5 HandlerCall 'void ()'
| |-CXXCtorInitializer Field 0x563f2e9d2958 '_e' 'Element *'
| | `-ImplicitCastExpr 0x563f2ebf46a8 <line:168:7> 'Element *' <NullToPointer>
| |   `-IntegerLiteral 0x563f2ebf4668 <col:7> 'int' 0
| |-CXXCtorInitializer Field 0x563f2e9d29b8 '_h' 'const Handler *'
| | `-CallExpr 0x563f2ebf4790 <col:14, col:37> 'const Handler *'
| |   `-ImplicitCastExpr 0x563f2ebf4778 <col:14, col:23> 'const Handler *(*)()' <FunctionToPointerDecay>
| |     `-DeclRefExpr 0x563f2ebf4720 <col:14, col:23> 'const Handler *()' lvalue CXXMethod 0x563f2ea10ae8 'blank_handler' 'const Handler *()'
| |-CXXCtorInitializer Field 0x563f2e9d2a18 '_value' 'String'
| | `-CXXConstructExpr 0x563f2ebf47f8 <line:167:5> 'String' 'void ()'
| `-CompoundStmt 0x563f2ebf4860 <line:168:40, line:169:5>
|-CXXConstructorDecl 0x563f2e9cee10 <line:178:5, line:181:5> line:178:5 HandlerCall 'void (const String &)'
| |-ParmVarDecl 0x563f2e9ced80 <col:17, col:31> col:31 used hdesc 'const String &'
| |-CXXCtorInitializer Field 0x563f2e9d2958 '_e' 'Element *'
| | `-CXXReinterpretCastExpr 0x563f2ebf48a0 <line:179:7, col:36> 'Element *' reinterpret_cast<class Element *> <IntegralToPointer>
| |   `-IntegerLiteral 0x563f2ebf4870 <col:35> 'int' 4
| |-CXXCtorInitializer Field 0x563f2e9d29b8 '_h' 'const Handler *'
| | `-CallExpr 0x563f2ebf4998 <col:43, col:66> 'const Handler *'
| |   `-ImplicitCastExpr 0x563f2ebf4980 <col:43, col:52> 'const Handler *(*)()' <FunctionToPointerDecay>
| |     `-DeclRefExpr 0x563f2ebf4950 <col:43, col:52> 'const Handler *()' lvalue CXXMethod 0x563f2ea10ae8 'blank_handler' 'const Handler *()'
| |-CXXCtorInitializer Field 0x563f2e9d2a18 '_value' 'String'
| | `-CXXConstructExpr 0x563f2ebf4a40 <line:180:4, col:16> 'String' 'void (const String &)'
| |   `-DeclRefExpr 0x563f2ebf4a00 <col:11> 'const String' lvalue ParmVar 0x563f2e9ced80 'hdesc' 'const String &'
| `-CompoundStmt 0x563f2ebf4ab0 <col:18, line:181:5>
|-EnumDecl 0x563f2e9ceec0 <line:184:5, line:191:5> line:184:10 Flags
| |-EnumConstantDecl 0x563f2e9cf008 <line:185:2, col:22> col:2 readable 'HandlerCall::Flags'
| | `-ImplicitCastExpr 0x563f2e9cf400 <col:13, col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563f2e9cefe8 <col:13, col:22> 'Handler::Flags' Int: 1
| |     `-DeclRefExpr 0x563f2e9cefb8 <col:13, col:22> 'Handler::Flags' EnumConstant 0x563f2ea0e2e0 'f_read' 'Handler::Flags'
| |-EnumConstantDecl 0x563f2e9cf0e0 <line:186:2, col:20> col:2 referenced f_read 'HandlerCall::Flags'
| | `-ImplicitCastExpr 0x563f2e9cf418 <col:11, col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563f2e9cf0c0 <col:11, col:20> 'Handler::Flags' Int: 1
| |     `-DeclRefExpr 0x563f2e9cf090 <col:11, col:20> 'Handler::Flags' EnumConstant 0x563f2ea0e2e0 'f_read' 'Handler::Flags'
| |-EnumConstantDecl 0x563f2e9cf1b8 <line:187:2, col:22> col:2 writable 'HandlerCall::Flags'
| | `-ImplicitCastExpr 0x563f2e9cf430 <col:13, col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563f2e9cf198 <col:13, col:22> 'Handler::Flags' Int: 2
| |     `-DeclRefExpr 0x563f2e9cf168 <col:13, col:22> 'Handler::Flags' EnumConstant 0x563f2ea0e370 'f_write' 'Handler::Flags'
| |-EnumConstantDecl 0x563f2e9cf290 <line:188:2, col:21> col:2 referenced f_write 'HandlerCall::Flags'
| | `-ImplicitCastExpr 0x563f2e9cf448 <col:12, col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563f2e9cf270 <col:12, col:21> 'Handler::Flags' Int: 2
| |     `-DeclRefExpr 0x563f2e9cf240 <col:12, col:21> 'Handler::Flags' EnumConstant 0x563f2ea0e370 'f_write' 'Handler::Flags'
| |-EnumConstantDecl 0x563f2e9cf320 <line:189:2, col:20> col:2 referenced f_preinitialize 'HandlerCall::Flags'
| | `-ImplicitCastExpr 0x563f2e9cf460 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563f2e9cf300 <col:20> 'int' Int: 4
| |     `-IntegerLiteral 0x563f2e9cf2e0 <col:20> 'int' 4
| `-EnumConstantDecl 0x563f2e9cf3b0 <line:190:9, col:27> col:9 referenced f_unquote_param 'HandlerCall::Flags'
|   `-ImplicitCastExpr 0x563f2e9cf478 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x563f2e9cf390 <col:27> 'int' Int: 8
|       `-IntegerLiteral 0x563f2e9cf370 <col:27> 'int' 8
|-CXXMethodDecl 0x563f2e9cf680 <line:227:5, col:77> col:9 used initialize 'int (int, const Element *, ErrorHandler *)'
| |-ParmVarDecl 0x563f2e9cf4a8 <col:20, col:24> col:24 flags 'int'
| |-ParmVarDecl 0x563f2e9cf520 <col:31, col:46> col:46 context 'const Element *'
| `-ParmVarDecl 0x563f2e9cf598 <col:55, col:76> col:69 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x563f2ebf4300 <col:76> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x563f2ebf42e0 <col:76> 'int' 0
|-CXXMethodDecl 0x563f2e9cf8a0 <line:235:5, col:78> col:16 initialize_read 'int (const Element *, ErrorHandler *)' inline
| |-ParmVarDecl 0x563f2e9cf748 <col:32, col:47> col:47 context 'const Element *'
| `-ParmVarDecl 0x563f2e9cf7c0 <col:56, col:77> col:70 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x563f2ebf4338 <col:77> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x563f2ebf4318 <col:77> 'int' 0
|-CXXMethodDecl 0x563f2e9cfa78 <line:243:5, col:79> col:16 initialize_write 'int (const Element *, ErrorHandler *)' inline
| |-ParmVarDecl 0x563f2e9cf960 <col:33, col:48> col:48 context 'const Element *'
| `-ParmVarDecl 0x563f2e9cf9d8 <col:57, col:78> col:71 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x563f2ebf4370 <col:78> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x563f2ebf4350 <col:78> 'int' 0
|-TypedefDecl 0x563f2e9cfc38 <line:246:5, col:58> col:33 referenced unspecified_bool_type 'bool (HandlerCall::*)() const'
| `-MemberPointerType 0x563f2e9cfbb0 'bool (HandlerCall::*)() const'
|   |-RecordType 0x563f2ea30040 'HandlerCall'
|   | `-CXXRecord 0x563f2e9cd9e0 'HandlerCall'
|   `-ParenType 0x563f2e9cfb50 'bool () const' sugar
|     `-FunctionProtoType 0x563f2e55d5a0 'bool () const' const cdecl
|       `-BuiltinType 0x563f2e4b1500 'bool'
|-CXXConversionDecl 0x563f2e9cfd78 <line:252:5, line:254:5> line:252:5 operator bool (HandlerCall::*)() const 'HandlerCall::unspecified_bool_type () const'
| `-CompoundStmt 0x563f2ebf4d60 <col:44, line:254:5>
|   `-ReturnStmt 0x563f2ebf4d50 <line:253:2, col:70>
|     `-ConditionalOperator 0x563f2ebf4d20 <col:9, col:70> 'bool (HandlerCall::*)() const'
|       |-BinaryOperator 0x563f2ebf4c48 <col:9, col:43> 'bool' '||'
|       | |-BinaryOperator 0x563f2ebf4bb8 <col:9, col:38> 'bool' '!='
|       | | |-ImplicitCastExpr 0x563f2ebf4ba0 <col:9> 'const Handler *' <LValueToRValue>
|       | | | `-MemberExpr 0x563f2ebf4ad0 <col:9> 'const Handler *const' lvalue ->_h 0x563f2e9d29b8
|       | | |   `-CXXThisExpr 0x563f2ebf4ac0 <col:9> 'const HandlerCall *' implicit this
|       | | `-CallExpr 0x563f2ebf4b80 <col:15, col:38> 'const Handler *'
|       | |   `-ImplicitCastExpr 0x563f2ebf4b68 <col:15, col:24> 'const Handler *(*)()' <FunctionToPointerDecay>
|       | |     `-DeclRefExpr 0x563f2ebf4b38 <col:15, col:24> 'const Handler *()' lvalue CXXMethod 0x563f2ea10ae8 'blank_handler' 'const Handler *()'
|       | `-ImplicitCastExpr 0x563f2ebf4c30 <col:43> 'bool' <PointerToBoolean>
|       |   `-ImplicitCastExpr 0x563f2ebf4c18 <col:43> 'Element *' <LValueToRValue>
|       |     `-MemberExpr 0x563f2ebf4be8 <col:43> 'Element *const' lvalue ->_e 0x563f2e9d2958
|       |       `-CXXThisExpr 0x563f2ebf4bd8 <col:43> 'const HandlerCall *' implicit this
|       |-UnaryOperator 0x563f2ebf4cd0 <col:48, col:62> 'bool (HandlerCall::*)() const' prefix '&' cannot overflow
|       | `-DeclRefExpr 0x563f2ebf4ca0 <col:49, col:62> 'bool () const' CXXMethod 0x563f2e9cfe48 'empty' 'bool () const'
|       `-ImplicitCastExpr 0x563f2ebf4d08 <col:70> 'bool (HandlerCall::*)() const' <NullToMemberPointer>
|         `-IntegerLiteral 0x563f2ebf4ce8 <col:70> 'int' 0
|-CXXMethodDecl 0x563f2e9cfe48 <line:258:5, line:260:5> line:258:10 used empty 'bool () const'
| `-CompoundStmt 0x563f2ebf4f48 <col:24, line:260:5>
|   `-ReturnStmt 0x563f2ebf4f38 <line:259:2, col:44>
|     `-BinaryOperator 0x563f2ebf4f18 <col:9, col:44> 'bool' '&&'
|       |-BinaryOperator 0x563f2ebf4e70 <col:9, col:38> 'bool' '=='
|       | |-ImplicitCastExpr 0x563f2ebf4e58 <col:9> 'const Handler *' <LValueToRValue>
|       | | `-MemberExpr 0x563f2ebf4d88 <col:9> 'const Handler *const' lvalue ->_h 0x563f2e9d29b8
|       | |   `-CXXThisExpr 0x563f2ebf4d78 <col:9> 'const HandlerCall *' implicit this
|       | `-CallExpr 0x563f2ebf4e38 <col:15, col:38> 'const Handler *'
|       |   `-ImplicitCastExpr 0x563f2ebf4e20 <col:15, col:24> 'const Handler *(*)()' <FunctionToPointerDecay>
|       |     `-DeclRefExpr 0x563f2ebf4df0 <col:15, col:24> 'const Handler *()' lvalue CXXMethod 0x563f2ea10ae8 'blank_handler' 'const Handler *()'
|       `-UnaryOperator 0x563f2ebf4f00 <col:43, col:44> 'bool' prefix '!' cannot overflow
|         `-ImplicitCastExpr 0x563f2ebf4ee8 <col:44> 'bool' <PointerToBoolean>
|           `-ImplicitCastExpr 0x563f2ebf4ed0 <col:44> 'Element *' <LValueToRValue>
|             `-MemberExpr 0x563f2ebf4ea0 <col:44> 'Element *const' lvalue ->_e 0x563f2e9d2958
|               `-CXXThisExpr 0x563f2ebf4e90 <col:44> 'const HandlerCall *' implicit this
|-CXXMethodDecl 0x563f2e9cff08 <line:264:5, line:266:5> line:264:10 used initialized 'bool () const'
| `-CompoundStmt 0x563f2ebf5088 <col:30, line:266:5>
|   `-ReturnStmt 0x563f2ebf5078 <line:265:2, col:38>
|     `-BinaryOperator 0x563f2ebf5058 <col:9, col:38> 'bool' '!='
|       |-ImplicitCastExpr 0x563f2ebf5040 <col:9> 'const Handler *' <LValueToRValue>
|       | `-MemberExpr 0x563f2ebf4f70 <col:9> 'const Handler *const' lvalue ->_h 0x563f2e9d29b8
|       |   `-CXXThisExpr 0x563f2ebf4f60 <col:9> 'const HandlerCall *' implicit this
|       `-CallExpr 0x563f2ebf5020 <col:15, col:38> 'const Handler *'
|         `-ImplicitCastExpr 0x563f2ebf5008 <col:15, col:24> 'const Handler *(*)()' <FunctionToPointerDecay>
|           `-DeclRefExpr 0x563f2ebf4fd8 <col:15, col:24> 'const Handler *()' lvalue CXXMethod 0x563f2ea10ae8 'blank_handler' 'const Handler *()'
|-CXXMethodDecl 0x563f2e9d0078 <line:276:5, col:53> col:19 call_read 'String (ErrorHandler *) const' inline
| `-ParmVarDecl 0x563f2e9cffb8 <col:29, col:50> col:43 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x563f2ebf43a8 <col:50> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x563f2ebf4388 <col:50> 'int' 0
|-CXXMethodDecl 0x563f2e9d0200 <line:285:5, col:51> col:16 call_write 'int (ErrorHandler *) const' inline
| `-ParmVarDecl 0x563f2e9d0130 <col:27, col:48> col:41 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x563f2ebf43e0 <col:48> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x563f2ebf43c0 <col:48> 'int' 0
|-CXXMethodDecl 0x563f2e9d0440 <line:296:5, col:82> col:16 call_write 'int (const VariableExpander &, ErrorHandler *) const' inline
| |-ParmVarDecl 0x563f2e9d02e8 <col:27, col:51> col:51 scope 'const VariableExpander &'
| `-ParmVarDecl 0x563f2e9d0360 <col:58, col:79> col:72 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x563f2ebf4418 <col:79> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x563f2ebf43f8 <col:79> 'int' 0
|-CXXMethodDecl 0x563f2e9d0650 <line:309:5, col:76> col:16 call_write 'int (const String &, ErrorHandler *) const' inline
| |-ParmVarDecl 0x563f2e9d0500 <col:27, col:41> col:41 value_ext 'const String &'
| `-ParmVarDecl 0x563f2e9d0578 <col:52, col:73> col:66 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x563f2ebf4450 <col:73> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x563f2ebf4430 <col:73> 'int' 0
|-CXXMethodDecl 0x563f2e9d0a30 <line:333:5, line:334:54> line:333:16 used reset 'int (HandlerCall *&, const String &, int, const Element *, ErrorHandler *)' static
| |-ParmVarDecl 0x563f2e9d0740 <col:22, col:36> col:36 hcall 'HandlerCall *&'
| |-ParmVarDecl 0x563f2e9d07b8 <col:43, col:57> col:57 hdesc 'const String &'
| |-ParmVarDecl 0x563f2e9d0838 <col:64, col:68> col:68 flags 'int'
| |-ParmVarDecl 0x563f2e9d08b0 <line:334:8, col:23> col:23 context 'const Element *'
| `-ParmVarDecl 0x563f2e9d0928 <col:32, col:53> col:46 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x563f2ebf4488 <col:53> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x563f2ebf4468 <col:53> 'int' 0
|-CXXMethodDecl 0x563f2e9d0e90 <line:347:5, line:349:41> line:347:16 used reset 'int (HandlerCall *&, Element *, const String &, const String &, int, ErrorHandler *)' static
| |-ParmVarDecl 0x563f2e9d0b10 <col:22, col:36> col:36 hcall 'HandlerCall *&'
| |-ParmVarDecl 0x563f2e9d0b88 <line:348:8, col:17> col:17 e 'Element *'
| |-ParmVarDecl 0x563f2e9d0c00 <col:20, col:34> col:34 hname 'const String &'
| |-ParmVarDecl 0x563f2e9d0c78 <col:41, col:55> col:55 value 'const String &'
| |-ParmVarDecl 0x563f2e9d0cf8 <line:349:8, col:12> col:12 flags 'int'
| `-ParmVarDecl 0x563f2e9d0d70 <col:19, col:40> col:33 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x563f2ebf44c0 <col:40> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x563f2ebf44a0 <col:40> 'int' 0
|-CXXMethodDecl 0x563f2e9d11e0 <line:361:5, line:362:52> line:361:23 reset_read 'int (HandlerCall *&, const String &, const Element *, ErrorHandler *)' static inline
| |-ParmVarDecl 0x563f2e9d0f78 <col:34, col:48> col:48 hcall 'HandlerCall *&'
| |-ParmVarDecl 0x563f2e9d0ff0 <col:55, col:69> col:69 hdesc 'const String &'
| |-ParmVarDecl 0x563f2e9d1068 <line:362:6, col:21> col:21 context 'const Element *'
| `-ParmVarDecl 0x563f2e9d10e0 <col:30, col:51> col:44 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x563f2ebf44f8 <col:51> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x563f2ebf44d8 <col:51> 'int' 0
|-CXXMethodDecl 0x563f2e9d1520 <line:373:5, line:375:28> line:373:23 reset_read 'int (HandlerCall *&, Element *, const String &, ErrorHandler *)' static inline
| |-ParmVarDecl 0x563f2e9d12b8 <col:34, col:48> col:48 hcall 'HandlerCall *&'
| |-ParmVarDecl 0x563f2e9d1330 <line:374:6, col:15> col:15 e 'Element *'
| |-ParmVarDecl 0x563f2e9d13a8 <col:18, col:32> col:32 hname 'const String &'
| `-ParmVarDecl 0x563f2e9d1420 <line:375:6, col:27> col:20 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x563f2ebf4530 <col:27> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x563f2ebf4510 <col:27> 'int' 0
|-CXXMethodDecl 0x563f2e9d1810 <line:386:5, line:387:53> line:386:23 reset_write 'int (HandlerCall *&, const String &, const Element *, ErrorHandler *)' static inline
| |-ParmVarDecl 0x563f2e9d15f8 <col:35, col:49> col:49 hcall 'HandlerCall *&'
| |-ParmVarDecl 0x563f2e9d1670 <col:56, col:70> col:70 hdesc 'const String &'
| |-ParmVarDecl 0x563f2e9d16e8 <line:387:7, col:22> col:22 context 'const Element *'
| `-ParmVarDecl 0x563f2e9d1760 <col:31, col:52> col:45 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x563f2ebf4568 <col:52> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x563f2ebf4548 <col:52> 'int' 0
|-CXXMethodDecl 0x563f2e9d1bd0 <line:399:5, line:402:29> line:399:23 reset_write 'int (HandlerCall *&, Element *, const String &, const String &, ErrorHandler *)' static inline
| |-ParmVarDecl 0x563f2e9d18e8 <col:35, col:49> col:49 hcall 'HandlerCall *&'
| |-ParmVarDecl 0x563f2e9d1960 <line:400:7, col:16> col:16 e 'Element *'
| |-ParmVarDecl 0x563f2e9d19d8 <col:19, col:33> col:33 hname 'const String &'
| |-ParmVarDecl 0x563f2e9d1a50 <line:401:7, col:36> col:21 value 'const String &' cinit
| | `-ExprWithCleanups 0x563f2ebf4618 <col:29, col:36> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x563f2ebf4600 <col:29, col:36> 'const String' lvalue
| |     `-ImplicitCastExpr 0x563f2ebf45e8 <col:29, col:36> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x563f2ebf45c8 <col:29, col:36> 'String' (CXXTemporary 0x563f2ebf45c8)
| |         `-CXXTemporaryObjectExpr 0x563f2ebf4590 <col:29, col:36> 'String' 'void ()'
| `-ParmVarDecl 0x563f2e9d1ac8 <line:402:7, col:28> col:21 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x563f2ebf4650 <col:28> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x563f2ebf4630 <col:28> 'int' 0
|-CXXMethodDecl 0x563f2e9d1cb8 <line:409:5, line:411:5> line:409:14 element 'Element *() const'
| `-CompoundStmt 0x563f2ebf5108 <col:30, line:411:5>
|   `-ReturnStmt 0x563f2ebf50f8 <line:410:2, col:9>
|     `-ImplicitCastExpr 0x563f2ebf50e0 <col:9> 'Element *' <LValueToRValue>
|       `-MemberExpr 0x563f2ebf50b0 <col:9> 'Element *const' lvalue ->_e 0x563f2e9d2958
|         `-CXXThisExpr 0x563f2ebf50a0 <col:9> 'const HandlerCall *' implicit this
|-CXXMethodDecl 0x563f2e9d1da8 <line:416:5, line:418:5> line:416:20 handler 'const Handler *() const'
| `-CompoundStmt 0x563f2ebf5188 <col:36, line:418:5>
|   `-ReturnStmt 0x563f2ebf5178 <line:417:2, col:9>
|     `-ImplicitCastExpr 0x563f2ebf5160 <col:9> 'const Handler *' <LValueToRValue>
|       `-MemberExpr 0x563f2ebf5130 <col:9> 'const Handler *const' lvalue ->_h 0x563f2e9d29b8
|         `-CXXThisExpr 0x563f2ebf5120 <col:9> 'const HandlerCall *' implicit this
|-CXXMethodDecl 0x563f2e9d1e68 <line:423:5, line:425:5> line:423:19 value 'const String &() const'
| `-CompoundStmt 0x563f2ebf5350 <col:33, line:425:5>
|   `-ReturnStmt 0x563f2ebf5340 <line:424:2, col:53>
|     `-ConditionalOperator 0x563f2ebf5310 <col:9, col:53> 'const String' lvalue
|       |-CXXMemberCallExpr 0x563f2ebf51e0 <col:9, col:21> 'bool'
|       | `-MemberExpr 0x563f2ebf51b0 <col:9> '<bound member function type>' ->initialized 0x563f2e9cff08
|       |   `-CXXThisExpr 0x563f2ebf51a0 <col:9> 'const HandlerCall *' implicit this
|       |-MemberExpr 0x563f2ebf5210 <col:25> 'const String' lvalue ->_value 0x563f2e9d2a18
|       | `-CXXThisExpr 0x563f2ebf5200 <col:25> 'const HandlerCall *' implicit this
|       `-CallExpr 0x563f2ebf52f0 <col:34, col:53> 'const String' lvalue
|         `-ImplicitCastExpr 0x563f2ebf52d8 <col:34, col:42> 'const String &(*)()' <FunctionToPointerDecay>
|           `-DeclRefExpr 0x563f2ebf5278 <col:34, col:42> 'const String &()' lvalue CXXMethod 0x563f2e7f6408 'make_empty' 'const String &()'
|-CXXMethodDecl 0x563f2e9d1fa8 <line:431:5, line:434:5> line:431:10 set_value 'void (const String &)'
| |-ParmVarDecl 0x563f2e9d1f18 <col:20, col:34> col:34 used value 'const String &'
| `-CompoundStmt 0x563f2ebf54c8 <col:41, line:434:5>
|   `-IfStmt 0x563f2ebf54b0 <line:432:2, line:433:15>
|     |-CXXMemberCallExpr 0x563f2ebf53a8 <line:432:6, col:18> 'bool'
|     | `-MemberExpr 0x563f2ebf5378 <col:6> '<bound member function type>' ->initialized 0x563f2e9cff08
|     |   `-ImplicitCastExpr 0x563f2ebf53c8 <col:6> 'const HandlerCall *' <NoOp>
|     |     `-CXXThisExpr 0x563f2ebf5368 <col:6> 'HandlerCall *' implicit this
|     `-CXXOperatorCallExpr 0x563f2ebf5478 <line:433:6, col:15> 'String' lvalue
|       |-ImplicitCastExpr 0x563f2ebf5460 <col:13> 'String &(*)(const String &)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x563f2ebf5440 <col:13> 'String &(const String &)' lvalue CXXMethod 0x563f2e801350 'operator=' 'String &(const String &)'
|       |-MemberExpr 0x563f2ebf53f0 <col:6> 'String' lvalue ->_value 0x563f2e9d2a18
|       | `-CXXThisExpr 0x563f2ebf53e0 <col:6> 'HandlerCall *' implicit this
|       `-DeclRefExpr 0x563f2ebf5420 <col:15> 'const String' lvalue ParmVar 0x563f2e9d1f18 'value' 'const String &'
|-CXXMethodDecl 0x563f2e9d2070 <line:439:5, col:22> col:12 unparse 'String () const'
|-CXXMethodDecl 0x563f2e9d2130 <line:445:5, line:449:5> line:445:10 clear 'void ()'
| `-CompoundStmt 0x563f2ebf57c0 <col:18, line:449:5>
|   |-BinaryOperator 0x563f2ebf5558 <line:446:2, col:7> 'Element *' lvalue '='
|   | |-MemberExpr 0x563f2ebf54f0 <col:2> 'Element *' lvalue ->_e 0x563f2e9d2958
|   | | `-CXXThisExpr 0x563f2ebf54e0 <col:2> 'HandlerCall *' implicit this
|   | `-ImplicitCastExpr 0x563f2ebf5540 <col:7> 'Element *' <NullToPointer>
|   |   `-IntegerLiteral 0x563f2ebf5520 <col:7> 'int' 0
|   |-BinaryOperator 0x563f2ebf5658 <line:447:2, col:30> 'const Handler *' lvalue '='
|   | |-MemberExpr 0x563f2ebf5588 <col:2> 'const Handler *' lvalue ->_h 0x563f2e9d29b8
|   | | `-CXXThisExpr 0x563f2ebf5578 <col:2> 'HandlerCall *' implicit this
|   | `-CallExpr 0x563f2ebf5638 <col:7, col:30> 'const Handler *'
|   |   `-ImplicitCastExpr 0x563f2ebf5620 <col:7, col:16> 'const Handler *(*)()' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x563f2ebf55f0 <col:7, col:16> 'const Handler *()' lvalue CXXMethod 0x563f2ea10ae8 'blank_handler' 'const Handler *()'
|   `-ExprWithCleanups 0x563f2ebf57a8 <line:448:2, col:18> 'String' lvalue
|     `-CXXOperatorCallExpr 0x563f2ebf5770 <col:2, col:18> 'String' lvalue
|       |-ImplicitCastExpr 0x563f2ebf5758 <col:9> 'String &(*)(String &&)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x563f2ebf5738 <col:9> 'String &(String &&)' lvalue CXXMethod 0x563f2e801a58 'operator=' 'String &(String &&)'
|       |-MemberExpr 0x563f2ebf5688 <col:2> 'String' lvalue ->_value 0x563f2e9d2a18
|       | `-CXXThisExpr 0x563f2ebf5678 <col:2> 'HandlerCall *' implicit this
|       `-MaterializeTemporaryExpr 0x563f2ebf5720 <col:11, col:18> 'String' xvalue
|         `-CXXBindTemporaryExpr 0x563f2ebf5700 <col:11, col:18> 'String' (CXXTemporary 0x563f2ebf5700)
|           `-CXXTemporaryObjectExpr 0x563f2ebf56c8 <col:11, col:18> 'String' 'void ()'
|-EnumDecl 0x563f2e9d21d0 <line:453:5, line:458:5> line:453:5
| |-EnumConstantDecl 0x563f2e9d22d0 <line:454:9, col:22> col:9 CHECK_READ 'HandlerCall::(anonymous enum at ../dummy_inc/click/handlercall.hh:453:5)'
| | `-ImplicitCastExpr 0x563f2e9d2830 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563f2e9d22b0 <col:22> 'HandlerCall::Flags' Int: 1
| |     `-DeclRefExpr 0x563f2e9d2290 <col:22> 'HandlerCall::Flags' EnumConstant 0x563f2e9cf0e0 'f_read' 'HandlerCall::Flags'
| |-EnumConstantDecl 0x563f2e9d2360 <col:30, col:40> col:30 OP_READ 'HandlerCall::(anonymous enum at ../dummy_inc/click/handlercall.hh:453:5)'
| | `-ImplicitCastExpr 0x563f2e9d2848 <col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563f2e9d2340 <col:40> 'HandlerCall::Flags' Int: 1
| |     `-DeclRefExpr 0x563f2e9d2320 <col:40> 'HandlerCall::Flags' EnumConstant 0x563f2e9cf0e0 'f_read' 'HandlerCall::Flags'
| |-EnumConstantDecl 0x563f2e9d23f0 <col:48, col:57> col:48 h_read 'HandlerCall::(anonymous enum at ../dummy_inc/click/handlercall.hh:453:5)'
| | `-ImplicitCastExpr 0x563f2e9d2860 <col:57> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563f2e9d23d0 <col:57> 'HandlerCall::Flags' Int: 1
| |     `-DeclRefExpr 0x563f2e9d23b0 <col:57> 'HandlerCall::Flags' EnumConstant 0x563f2e9cf0e0 'f_read' 'HandlerCall::Flags'
| |-EnumConstantDecl 0x563f2e9d2480 <line:455:9, col:23> col:9 CHECK_WRITE 'HandlerCall::(anonymous enum at ../dummy_inc/click/handlercall.hh:453:5)'
| | `-ImplicitCastExpr 0x563f2e9d2878 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563f2e9d2460 <col:23> 'HandlerCall::Flags' Int: 2
| |     `-DeclRefExpr 0x563f2e9d2440 <col:23> 'HandlerCall::Flags' EnumConstant 0x563f2e9cf290 'f_write' 'HandlerCall::Flags'
| |-EnumConstantDecl 0x563f2e9d2510 <col:32, col:43> col:32 OP_WRITE 'HandlerCall::(anonymous enum at ../dummy_inc/click/handlercall.hh:453:5)'
| | `-ImplicitCastExpr 0x563f2e9d2890 <col:43> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563f2e9d24f0 <col:43> 'HandlerCall::Flags' Int: 2
| |     `-DeclRefExpr 0x563f2e9d24d0 <col:43> 'HandlerCall::Flags' EnumConstant 0x563f2e9cf290 'f_write' 'HandlerCall::Flags'
| |-EnumConstantDecl 0x563f2e9d25a0 <col:52, col:62> col:52 h_write 'HandlerCall::(anonymous enum at ../dummy_inc/click/handlercall.hh:453:5)'
| | `-ImplicitCastExpr 0x563f2e9d28a8 <col:62> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563f2e9d2580 <col:62> 'HandlerCall::Flags' Int: 2
| |     `-DeclRefExpr 0x563f2e9d2560 <col:62> 'HandlerCall::Flags' EnumConstant 0x563f2e9cf290 'f_write' 'HandlerCall::Flags'
| |-EnumConstantDecl 0x563f2e9d2630 <line:456:9, col:25> col:9 PREINITIALIZE 'HandlerCall::(anonymous enum at ../dummy_inc/click/handlercall.hh:453:5)'
| | `-ImplicitCastExpr 0x563f2e9d28c0 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563f2e9d2610 <col:25> 'HandlerCall::Flags' Int: 4
| |     `-DeclRefExpr 0x563f2e9d25f0 <col:25> 'HandlerCall::Flags' EnumConstant 0x563f2e9cf320 'f_preinitialize' 'HandlerCall::Flags'
| |-EnumConstantDecl 0x563f2e9d26c0 <col:42, col:60> col:42 h_preinitialize 'HandlerCall::(anonymous enum at ../dummy_inc/click/handlercall.hh:453:5)'
| | `-ImplicitCastExpr 0x563f2e9d28d8 <col:60> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563f2e9d26a0 <col:60> 'HandlerCall::Flags' Int: 4
| |     `-DeclRefExpr 0x563f2e9d2680 <col:60> 'HandlerCall::Flags' EnumConstant 0x563f2e9cf320 'f_preinitialize' 'HandlerCall::Flags'
| |-EnumConstantDecl 0x563f2e9d2750 <line:457:9, col:25> col:9 UNQUOTE_PARAM 'HandlerCall::(anonymous enum at ../dummy_inc/click/handlercall.hh:453:5)'
| | `-ImplicitCastExpr 0x563f2e9d28f0 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563f2e9d2730 <col:25> 'HandlerCall::Flags' Int: 8
| |     `-DeclRefExpr 0x563f2e9d2710 <col:25> 'HandlerCall::Flags' EnumConstant 0x563f2e9cf3b0 'f_unquote_param' 'HandlerCall::Flags'
| `-EnumConstantDecl 0x563f2e9d27e0 <col:42, col:60> col:42 h_unquote_param 'HandlerCall::(anonymous enum at ../dummy_inc/click/handlercall.hh:453:5)'
|   `-ImplicitCastExpr 0x563f2e9d2908 <col:60> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x563f2e9d27c0 <col:60> 'HandlerCall::Flags' Int: 8
|       `-DeclRefExpr 0x563f2e9d27a0 <col:60> 'HandlerCall::Flags' EnumConstant 0x563f2e9cf3b0 'f_unquote_param' 'HandlerCall::Flags'
|-AccessSpecDecl 0x563f2e9d2920 <line:461:3, col:10> col:3 private
|-FieldDecl 0x563f2e9d2958 <line:463:5, col:14> col:14 referenced _e 'Element *'
|-FieldDecl 0x563f2e9d29b8 <line:464:5, col:20> col:20 referenced _h 'const Handler *'
|-FieldDecl 0x563f2e9d2a18 <line:465:5, col:12> col:12 referenced _value 'String'
|-CXXMethodDecl 0x563f2e9d2c60 <line:467:5, col:49> col:9 parse 'int (int, Element *, ErrorHandler *)'
| |-ParmVarDecl 0x563f2e9d2a80 <col:15, col:19> col:19 flags 'int'
| |-ParmVarDecl 0x563f2e9d2af8 <col:26, col:33> col:34 'Element *'
| `-ParmVarDecl 0x563f2e9d2b70 <col:36, col:48> col:49 'ErrorHandler *'
|-CXXMethodDecl 0x563f2ebf3940 <line:468:5, col:80> col:9 assign 'int (Element *, const String &, const String &, int, ErrorHandler *)'
| |-ParmVarDecl 0x563f2e9d2d28 <col:16, col:23> col:24 'Element *'
| |-ParmVarDecl 0x563f2e9d2da0 <col:26, col:38> col:39 'const String &'
| |-ParmVarDecl 0x563f2e9d2e18 <col:41, col:53> col:54 'const String &'
| |-ParmVarDecl 0x563f2ebf37c0 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x563f2ebf3838 <col:67, col:79> col:80 'ErrorHandler *'
|-CXXConstructorDecl 0x563f2ebf3a38 <line:143:7> col:7 implicit HandlerCall 'void (const HandlerCall &)' inline default noexcept-unevaluated 0x563f2ebf3a38
| `-ParmVarDecl 0x563f2ebf3b48 <col:7> col:7 'const HandlerCall &'
|-CXXConstructorDecl 0x563f2ebf3be8 <col:7> col:7 implicit HandlerCall 'void (HandlerCall &&)' inline default noexcept-unevaluated 0x563f2ebf3be8
| `-ParmVarDecl 0x563f2ebf3cf8 <col:7> col:7 'HandlerCall &&'
|-CXXMethodDecl 0x563f2ebf3d98 <col:7> col:7 implicit operator= 'HandlerCall &(const HandlerCall &)' inline default noexcept-unevaluated 0x563f2ebf3d98
| `-ParmVarDecl 0x563f2ebf3ea8 <col:7> col:7 'const HandlerCall &'
|-CXXMethodDecl 0x563f2ebf3f18 <col:7> col:7 implicit operator= 'HandlerCall &(HandlerCall &&)' inline default noexcept-unevaluated 0x563f2ebf3f18
| `-ParmVarDecl 0x563f2ebf4028 <col:7> col:7 'HandlerCall &&'
`-CXXDestructorDecl 0x563f2ebf40b0 <col:7> col:7 implicit ~HandlerCall 'void ()' inline default noexcept-unevaluated 0x563f2ebf40b0

Layout: <CGRecordLayout
  LLVMType:%class.HandlerCall = type { %class.Element*, %class.Handler*, %class.String }
  NonVirtualBaseLLVMType:%class.HandlerCall = type { %class.Element*, %class.Handler*, %class.String }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563f2ea88070 <../elements/standard/counter.hh:101:1, line:153:1> line:101:7 class Counter definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-public 'Element'
|-CXXRecordDecl 0x563f2ea881c8 <col:1, col:7> col:7 implicit referenced class Counter
|-AccessSpecDecl 0x563f2ea88258 <col:34, col:40> col:34 public
|-TypedefDecl 0x563f2ea88290 <line:103:5, col:22> col:22 referenced counter_t 'uint64_t':'unsigned long'
| `-TypedefType 0x563f2e60acd0 'uint64_t' sugar
|   |-Typedef 0x563f2e51a530 'uint64_t'
|   `-TypedefType 0x563f2e4f36c0 '__uint64_t' sugar
|     |-Typedef 0x563f2e4f3278 '__uint64_t'
|     `-BuiltinType 0x563f2e4b1640 'unsigned long'
|-CXXConstructorDecl 0x563f2ea88350 <line:108:5, col:13> col:5 Counter 'void ()'
|-CXXDestructorDecl 0x563f2ea88440 <line:109:5, col:14> col:5 ~Counter 'void ()' noexcept-unevaluated 0x563f2ea88440
| `-Overrides: [ 0x563f2ea17418 Element::~Element 'void () noexcept' ]
|-CXXMethodDecl 0x563f2ea88570 <line:111:5, col:56> col:17 class_name 'const char *() const'
| |-Overrides: [ 0x563f2ea18878 Element::class_name 'const char *() const' ]
| `-CompoundStmt 0x563f2ea94240 <col:36, col:56>
|   `-ReturnStmt 0x563f2ea94230 <col:38, col:45>
|     `-ImplicitCastExpr 0x563f2ea94218 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x563f2ea941f8 <col:45> 'const char [8]' lvalue "Counter"
|-CXXMethodDecl 0x563f2ea88638 <line:112:5, col:56> col:17 port_count 'const char *() const'
| |-Overrides: [ 0x563f2ea18940 Element::port_count 'const char *() const' ]
| `-CompoundStmt 0x563f2ea942a0 <col:36, col:56>
|   `-ReturnStmt 0x563f2ea94290 <col:38, col:45>
|     `-ImplicitCastExpr 0x563f2ea94278 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-DeclRefExpr 0x563f2ea94258 <col:45> 'const char []' lvalue Var 0x563f2ea18bf0 'PORTS_1_1' 'const char []'
|-CXXMethodDecl 0x563f2ea88748 <line:114:5, col:46> col:15 count 'Counter::counter_t () const'
| `-CompoundStmt 0x563f2ea94320 <col:29, col:46>
|   `-ReturnStmt 0x563f2ea94310 <col:31, col:38>
|     `-ImplicitCastExpr 0x563f2ea942f8 <col:38> 'Counter::counter_t':'unsigned long' <LValueToRValue>
|       `-MemberExpr 0x563f2ea942c8 <col:38> 'const Counter::counter_t':'const unsigned long' lvalue ->_count 0x563f2ea89ce8
|         `-CXXThisExpr 0x563f2ea942b8 <col:38> 'const Counter *' implicit this
|-CXXMethodDecl 0x563f2ea88808 <line:115:5, col:56> col:15 byte_count 'Counter::counter_t () const'
| `-CompoundStmt 0x563f2ea943a0 <col:34, col:56>
|   `-ReturnStmt 0x563f2ea94390 <col:36, col:43>
|     `-ImplicitCastExpr 0x563f2ea94378 <col:43> 'Counter::counter_t':'unsigned long' <LValueToRValue>
|       `-MemberExpr 0x563f2ea94348 <col:43> 'const Counter::counter_t':'const unsigned long' lvalue ->_byte_count 0x563f2ea89d48
|         `-CXXThisExpr 0x563f2ea94338 <col:43> 'const Counter *' implicit this
|-CXXMethodDecl 0x563f2ea888c8 <line:116:5, col:16> col:10 reset 'void ()'
|-CXXMethodDecl 0x563f2ea88ba0 <line:118:5, col:51> col:9 configure 'int (Vector<String> &, ErrorHandler *)'
| |-Overrides: [ 0x563f2ea1a110 Element::configure 'int (Vector<String> &, ErrorHandler *)' ]
| |-ParmVarDecl 0x563f2ea88a50 <col:19, col:34> col:35 'Vector<String> &'
| `-ParmVarDecl 0x563f2ea88ac8 <col:37, col:50> col:51 'ErrorHandler *'
|-CXXMethodDecl 0x563f2ea88cf8 <line:119:5, col:34> col:9 initialize 'int (ErrorHandler *)'
| |-Overrides: [ 0x563f2ea1a360 Element::initialize 'int (ErrorHandler *)' ]
| `-ParmVarDecl 0x563f2ea88c60 <col:20, col:33> col:34 'ErrorHandler *'
|-CXXMethodDecl 0x563f2ea88dc0 <line:120:5, col:23> col:10 add_handlers 'void ()'
| `-Overrides: [ 0x563f2ea1a1e0 Element::add_handlers 'void ()' ]
|-CXXMethodDecl 0x563f2ea88f98 <line:121:5, col:31> col:9 llrpc 'int (unsigned int, void *)'
| |-Overrides: [ 0x563f2ea23e90 Element::llrpc 'int (unsigned int, void *)' ]
| |-ParmVarDecl 0x563f2ea88e78 <col:15> col:23 'unsigned int'
| `-ParmVarDecl 0x563f2ea88ef8 <col:25, col:30> col:31 'void *'
|-CXXMethodDecl 0x563f2ea890e8 <line:123:5, col:35> col:13 simple_action 'Packet *(Packet *)'
| |-Overrides: [ 0x563f2ea17a58 Element::simple_action 'Packet *(Packet *)' ]
| `-ParmVarDecl 0x563f2ea89058 <col:27, col:34> col:35 'Packet *'
|-AccessSpecDecl 0x563f2ea89190 <line:125:3, col:10> col:3 private
|-TypedefDecl 0x563f2ea896f0 <line:129:5, col:71> col:71 referenced rate_t 'RateEWMAX<RateEWMAXParameters<4, 10, uint64_t, int64_t> >':'RateEWMAX<RateEWMAXParameters<4, 10, unsigned long, long> >'
| `-TemplateSpecializationType 0x563f2ea89650 'RateEWMAX<RateEWMAXParameters<4, 10, uint64_t, int64_t> >' sugar RateEWMAX
|   |-TemplateArgument type 'RateEWMAXParameters<4, 10, uint64_t, int64_t>':'RateEWMAXParameters<4, 10, unsigned long, long>'
|   `-RecordType 0x563f2ea89630 'RateEWMAX<RateEWMAXParameters<4, 10, unsigned long, long> >'
|     `-ClassTemplateSpecialization 0x563f2ea89548 'RateEWMAX'
|-TypedefDecl 0x563f2ea89c80 <line:130:5, col:70> col:70 referenced byte_rate_t 'RateEWMAX<RateEWMAXParameters<4, 4, uint64_t, int64_t> >':'RateEWMAX<RateEWMAXParameters<4, 4, unsigned long, long> >'
| `-TemplateSpecializationType 0x563f2ea89be0 'RateEWMAX<RateEWMAXParameters<4, 4, uint64_t, int64_t> >' sugar RateEWMAX
|   |-TemplateArgument type 'RateEWMAXParameters<4, 4, uint64_t, int64_t>':'RateEWMAXParameters<4, 4, unsigned long, long>'
|   `-RecordType 0x563f2ea89bc0 'RateEWMAX<RateEWMAXParameters<4, 4, unsigned long, long> >'
|     `-ClassTemplateSpecialization 0x563f2ea89ad8 'RateEWMAX'
|-FieldDecl 0x563f2ea89ce8 <line:136:5, col:15> col:15 referenced _count 'Counter::counter_t':'unsigned long'
|-FieldDecl 0x563f2ea89d48 <line:137:5, col:15> col:15 referenced _byte_count 'Counter::counter_t':'unsigned long'
|-FieldDecl 0x563f2ea907f8 <line:138:5, col:12> col:12 _rate 'Counter::rate_t':'RateEWMAX<RateEWMAXParameters<4, 10, unsigned long, long> >'
|-FieldDecl 0x563f2ea93698 <line:139:5, col:17> col:17 _byte_rate 'Counter::byte_rate_t':'RateEWMAX<RateEWMAXParameters<4, 4, unsigned long, long> >'
|-FieldDecl 0x563f2ea936f8 <line:141:5, col:15> col:15 _count_trigger 'Counter::counter_t':'unsigned long'
|-FieldDecl 0x563f2ea93788 <line:142:5, col:18> col:18 _count_trigger_h 'HandlerCall *'
|-FieldDecl 0x563f2ea937e8 <line:144:5, col:15> col:15 _byte_trigger 'Counter::counter_t':'unsigned long'
|-FieldDecl 0x563f2ea93848 <line:145:5, col:18> col:18 _byte_trigger_h 'HandlerCall *'
|-FieldDecl 0x563f2ea938e8 <line:147:5, col:29> col:10 _count_triggered 'bool'
| `-ConstantExpr 0x563f2ea938c8 <col:29> 'int' Int: 1
|   `-IntegerLiteral 0x563f2ea93898 <col:29> 'int' 1
|-FieldDecl 0x563f2ea93988 <line:148:5, col:28> col:10 _byte_triggered 'bool'
| `-ConstantExpr 0x563f2ea93968 <col:28> 'int' Int: 1
|   `-IntegerLiteral 0x563f2ea93938 <col:28> 'int' 1
|-CXXMethodDecl 0x563f2ea93b00 <line:150:5, col:49> col:19 read_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x563f2ea939e8 <col:32, col:40> col:41 'Element *'
| `-ParmVarDecl 0x563f2ea93a68 <col:43, col:48> col:49 'void *'
|-CXXMethodDecl 0x563f2ea93de0 <line:151:5, col:75> col:16 write_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x563f2ea93bc0 <col:30, col:42> col:43 'const String &'
| |-ParmVarDecl 0x563f2ea93c38 <col:45, col:52> col:53 'Element *'
| |-ParmVarDecl 0x563f2ea93cb8 <col:55, col:59> col:60 'void *'
| `-ParmVarDecl 0x563f2ea93d30 <col:62, col:74> col:75 'ErrorHandler *'
|-CXXConstructorDecl 0x563f2ea93ec8 <line:101:7> col:7 implicit Counter 'void (const Counter &)' inline default_delete noexcept-unevaluated 0x563f2ea93ec8
| `-ParmVarDecl 0x563f2ea93fd8 <col:7> col:7 'const Counter &'
`-CXXMethodDecl 0x563f2ea94078 <col:7> col:7 implicit operator= 'Counter &(const Counter &)' inline default_delete noexcept-unevaluated 0x563f2ea94078
  `-ParmVarDecl 0x563f2ea94188 <col:7> col:7 'const Counter &'

Layout: <CGRecordLayout
  LLVMType:%class.Counter = type <{ %class.Element.base, [4 x i8], i64, i64, %class.RateEWMAX, %class.RateEWMAX.13, i64, %class.HandlerCall*, i64, %class.HandlerCall*, i8, [7 x i8] }>
  NonVirtualBaseLLVMType:%class.Counter.base = type <{ %class.Element.base, [4 x i8], i64, i64, %class.RateEWMAX, %class.RateEWMAX.13, i64, %class.HandlerCall*, i64, %class.HandlerCall*, i8 }>
  IsZeroInitializable:1
  BitFields:[
    <CGBitFieldInfo Offset:0 Size:1 IsSigned:0 StorageSize:8 StorageOffset:208>
    <CGBitFieldInfo Offset:1 Size:1 IsSigned:0 StorageSize:8 StorageOffset:208>
]>

*** Dumping AST Record Layout
         0 | class NumArg (empty)
           | [sizeof=1, dsize=1, align=1,
           |  nvsize=1, nvalign=1]

*** Dumping AST Record Layout
         0 | class IntArg
         0 |   class NumArg (base) (empty)
         0 |   int base
         4 |   int status
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | class ArgContext
         0 |   const class Element * _context
         8 |   class ErrorHandler * _errh
        16 |   const char * _arg_keyword
        24 |   _Bool _read_status
           | [sizeof=32, dsize=25, align=8,
           |  nvsize=25, nvalign=8]

*** Dumping AST Record Layout
         0 | class Args
         0 |   class ArgContext (base)
         0 |     const class Element * _context
         8 |     class ErrorHandler * _errh
        16 |     const char * _arg_keyword
        24 |     _Bool _read_status
        25 |   _Bool _my_conf
        26 |   _Bool _status
        27 |   uint8_t _simple_slotpos
        32 |   Vector<class String> * _conf
        40 |   class Vector<int> _kwpos
        40 |     class vector_memory<class sized_array_memory<4> > vm_
        40 |       vector_memory<class sized_array_memory<4> >::type * l_
        48 |       vector_memory::size_type n_
        52 |       vector_memory::size_type capacity_
        56 |   struct Args::Slot * _slots
        64 |   uint8_t [48] _simple_slotbuf
           | [sizeof=112, dsize=112, align=8,
           |  nvsize=112, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563f2eaad128 prev 0x563f2e9dc828 <../dummy_inc/click/args.hh:29:1, line:85:1> line:29:7 referenced class ArgContext definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x563f2eaad220 <col:1, col:7> col:7 implicit referenced class ArgContext
|-AccessSpecDecl 0x563f2eaad2b0 <col:20, col:26> col:20 public
|-CXXConstructorDecl 0x563f2eaad3b8 <line:33:5, line:38:5> line:33:5 ArgContext 'void (ErrorHandler *)'
| |-ParmVarDecl 0x563f2eaad2e8 <col:16, col:37> col:30 used errh 'ErrorHandler *' cinit
| | `-ImplicitCastExpr 0x563f2eaae790 <col:37> 'ErrorHandler *' <NullToPointer>
| |   `-IntegerLiteral 0x563f2eaae770 <col:37> 'int' 0
| |-CXXCtorInitializer Field 0x563f2eaae308 '_errh' 'ErrorHandler *'
| | `-ImplicitCastExpr 0x563f2eaae820 <line:34:17> 'ErrorHandler *' <LValueToRValue>
| |   `-DeclRefExpr 0x563f2eaae7e0 <col:17> 'ErrorHandler *' lvalue ParmVar 0x563f2eaad2e8 'errh' 'ErrorHandler *'
| |-CXXCtorInitializer Field 0x563f2eaae370 '_arg_keyword' 'const char *'
| | `-ImplicitCastExpr 0x563f2eaae8a0 <col:37> 'const char *' <NullToPointer>
| |   `-IntegerLiteral 0x563f2eaae860 <col:37> 'int' 0
| |-CXXCtorInitializer Field 0x563f2eaae3d0 '_read_status' 'bool'
| | `-CXXBoolLiteralExpr 0x563f2eaae8e0 <col:54> 'bool' false
| `-CompoundStmt 0x563f2eab0da8 <col:61, line:38:5>
|   `-BinaryOperator 0x563f2eab0d88 <line:36:9, col:20> 'const Element *' lvalue '='
|     |-MemberExpr 0x563f2eab0d20 <col:9> 'const Element *' lvalue ->_context 0x563f2eaae2a8
|     | `-CXXThisExpr 0x563f2eaae950 <col:9> 'ArgContext *' implicit this
|     `-ImplicitCastExpr 0x563f2eab0d70 <col:20> 'const Element *' <NullToPointer>
|       `-IntegerLiteral 0x563f2eab0d50 <col:20> 'int' 0
|-CXXConstructorDecl 0x563f2eaad5c8 <line:44:5, line:46:5> line:44:5 ArgContext 'void (const Element *, ErrorHandler *)'
| |-ParmVarDecl 0x563f2eaad478 <col:16, col:31> col:31 used context 'const Element *'
| |-ParmVarDecl 0x563f2eaad4f0 <col:40, col:61> col:54 used errh 'ErrorHandler *' cinit
| | `-ImplicitCastExpr 0x563f2eaae7c8 <col:61> 'ErrorHandler *' <NullToPointer>
| |   `-IntegerLiteral 0x563f2eaae7a8 <col:61> 'int' 0
| |-CXXCtorInitializer Field 0x563f2eaae2a8 '_context' 'const Element *'
| | `-ImplicitCastExpr 0x563f2eab0e00 <line:45:20> 'const Element *' <LValueToRValue>
| |   `-DeclRefExpr 0x563f2eab0dc0 <col:20> 'const Element *' lvalue ParmVar 0x563f2eaad478 'context' 'const Element *'
| |-CXXCtorInitializer Field 0x563f2eaae308 '_errh' 'ErrorHandler *'
| | `-ImplicitCastExpr 0x563f2eab0e80 <col:36> 'ErrorHandler *' <LValueToRValue>
| |   `-DeclRefExpr 0x563f2eab0e40 <col:36> 'ErrorHandler *' lvalue ParmVar 0x563f2eaad4f0 'errh' 'ErrorHandler *'
| |-CXXCtorInitializer Field 0x563f2eaae370 '_arg_keyword' 'const char *'
| | `-ImplicitCastExpr 0x563f2eab0f00 <col:56> 'const char *' <NullToPointer>
| |   `-IntegerLiteral 0x563f2eab0ec0 <col:56> 'int' 0
| |-CXXCtorInitializer Field 0x563f2eaae3d0 '_read_status' 'bool'
| | `-CXXBoolLiteralExpr 0x563f2eab0f40 <col:73> 'bool' false
| `-CompoundStmt 0x563f2eab0fb8 <col:80, line:46:5>
|-CXXMethodDecl 0x563f2eaad6f8 <line:49:5, line:51:5> line:49:20 context 'const Element *() const'
| `-CompoundStmt 0x563f2eab1030 <col:36, line:51:5>
|   `-ReturnStmt 0x563f2eab1020 <line:50:9, col:16>
|     `-ImplicitCastExpr 0x563f2eab1008 <col:16> 'const Element *' <LValueToRValue>
|       `-MemberExpr 0x563f2eab0fd8 <col:16> 'const Element *const' lvalue ->_context 0x563f2eaae2a8
|         `-CXXThisExpr 0x563f2eab0fc8 <col:16> 'const ArgContext *' implicit this
|-CXXMethodDecl 0x563f2eaad7e8 <line:55:5, line:57:5> line:55:19 errh 'ErrorHandler *() const'
| `-CompoundStmt 0x563f2eab10b0 <col:32, line:57:5>
|   `-ReturnStmt 0x563f2eab10a0 <line:56:9, col:16>
|     `-ImplicitCastExpr 0x563f2eab1088 <col:16> 'ErrorHandler *' <LValueToRValue>
|       `-MemberExpr 0x563f2eab1058 <col:16> 'ErrorHandler *const' lvalue ->_errh 0x563f2eaae308
|         `-CXXThisExpr 0x563f2eab1048 <col:16> 'const ArgContext *' implicit this
|-CXXMethodDecl 0x563f2eaad8a8 <line:62:5, col:27> col:12 error_prefix 'String () const'
|-CXXMethodDecl 0x563f2eaada30 <line:65:5, col:38> col:10 referenced error 'void (const char *, ...) const'
| `-ParmVarDecl 0x563f2eaad960 <col:16, col:28> col:28 fmt 'const char *'
|-CXXMethodDecl 0x563f2eaadb80 <line:68:5, col:40> col:10 warning 'void (const char *, ...) const'
| `-ParmVarDecl 0x563f2eaadaf0 <col:18, col:30> col:30 fmt 'const char *'
|-CXXMethodDecl 0x563f2eaadcd0 <line:71:5, col:40> col:10 message 'void (const char *, ...) const'
| `-ParmVarDecl 0x563f2eaadc40 <col:18, col:30> col:30 fmt 'const char *'
|-CXXMethodDecl 0x563f2eaaded8 <line:73:5, col:58> col:10 xmessage 'void (const String &, const String &) const'
| |-ParmVarDecl 0x563f2eaadd88 <col:19, col:33> col:33 anno 'const String &'
| `-ParmVarDecl 0x563f2eaade00 <col:39, col:53> col:53 str 'const String &'
|-CXXMethodDecl 0x563f2eaae1b8 <line:74:5, col:69> col:10 xmessage 'void (const String &, const char *, __va_list_tag *) const'
| |-ParmVarDecl 0x563f2eaadf98 <col:19, col:33> col:33 anno 'const String &'
| |-ParmVarDecl 0x563f2eaae018 <col:39, col:51> col:51 fmt 'const char *'
| `-ParmVarDecl 0x563f2eaae090 <col:56, col:64> col:64 val '__va_list_tag *':'__va_list_tag *'
|-AccessSpecDecl 0x563f2eaae270 <line:76:3, col:12> col:3 protected
|-FieldDecl 0x563f2eaae2a8 <line:79:5, col:20> col:20 referenced _context 'const Element *'
|-FieldDecl 0x563f2eaae308 <line:81:5, col:19> col:19 referenced _errh 'ErrorHandler *'
|-FieldDecl 0x563f2eaae370 <line:82:5, col:17> col:17 _arg_keyword 'const char *'
|-FieldDecl 0x563f2eaae3d0 <line:83:5, col:18> col:18 referenced _read_status 'bool' mutable
|-CXXConstructorDecl 0x563f2eaae420 <line:29:7> col:7 implicit constexpr ArgContext 'void (const ArgContext &)' inline default trivial noexcept-unevaluated 0x563f2eaae420
| `-ParmVarDecl 0x563f2eaae538 <col:7> col:7 'const ArgContext &'
|-CXXMethodDecl 0x563f2eaae5d8 <col:7> col:7 implicit operator= 'ArgContext &(const ArgContext &)' inline default trivial noexcept-unevaluated 0x563f2eaae5d8
| `-ParmVarDecl 0x563f2eaae6e8 <col:7> col:7 'const ArgContext &'
`-CXXDestructorDecl 0x563f2ebff898 <col:7> col:7 implicit ~ArgContext 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.ArgContext = type <{ %class.Element*, %class.ErrorHandler*, i8*, i8, [7 x i8] }>
  NonVirtualBaseLLVMType:%class.ArgContext.base = type <{ %class.Element*, %class.ErrorHandler*, i8*, i8 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct Args::Slot
         0 |   (Slot vtable pointer)
         8 |   struct Args::Slot * _next
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563f2eacf408 prev 0x563f2eab5fc8 <../dummy_inc/click/args.hh:826:5, line:833:5> line:826:12 referenced struct Slot definition
|-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x563f2eacf500 <col:5, col:12> col:12 implicit referenced struct Slot
|-CXXConstructorDecl 0x563f2eacf5f0 <line:827:9, line:828:9> line:827:9 used Slot 'void ()'
| `-CompoundStmt 0x563f2eafc710 <col:16, line:828:9>
|-CXXDestructorDecl 0x563f2eacf6e0 <line:829:9, line:830:9> line:829:17 used ~Slot 'void () noexcept' virtual
| `-CompoundStmt 0x563f2eafc720 <col:25, line:830:9>
|-CXXMethodDecl 0x563f2eacf7e0 <line:831:9, col:32> col:22 store 'void ()' virtual pure
|-FieldDecl 0x563f2eacf890 <line:832:9, col:15> col:15 _next 'Args::Slot *'
|-CXXMethodDecl 0x563f2eacf938 <line:826:12> col:12 implicit operator= 'Args::Slot &(const Args::Slot &)' inline default noexcept-unevaluated 0x563f2eacf938
| `-ParmVarDecl 0x563f2eacfa48 <col:12> col:12 'const Args::Slot &'
`-CXXConstructorDecl 0x563f2ead0208 <col:12> col:12 implicit constexpr Slot 'void (const Args::Slot &)' inline default noexcept-unevaluated 0x563f2ead0208
  `-ParmVarDecl 0x563f2ead0318 <col:12> col:12 'const Args::Slot &'

Layout: <CGRecordLayout
  LLVMType:%"struct.Args::Slot" = type { i32 (...)**, %"struct.Args::Slot"* }
  NonVirtualBaseLLVMType:%"struct.Args::Slot" = type { i32 (...)**, %"struct.Args::Slot"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563f2eab5dd8 <../dummy_inc/click/args.hh:247:1, line:898:1> line:247:7 referenced class Args definition
|-DefinitionData has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared
|-public 'ArgContext'
|-CXXRecordDecl 0x563f2eab5f38 <col:1, col:7> col:7 implicit referenced class Args
|-CXXRecordDecl 0x563f2eab5fc8 <line:248:5, col:12> col:12 struct Slot
|-AccessSpecDecl 0x563f2eab6080 <line:250:3, col:9> col:3 public
|-CXXConstructorDecl 0x563f2eab6188 <line:254:5, col:32> col:5 Args 'void (ErrorHandler *)'
| `-ParmVarDecl 0x563f2eab60b8 <col:10, col:31> col:24 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x563f2eaeaf58 <col:31> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x563f2eaeaf38 <col:31> 'int' 0
|-CXXConstructorDecl 0x563f2eab64a8 <line:259:5, col:60> col:5 Args 'void (const Vector<String> &, ErrorHandler *)'
| |-ParmVarDecl 0x563f2eab6320 <col:10, col:32> col:32 conf 'const Vector<String> &'
| `-ParmVarDecl 0x563f2eab6398 <col:38, col:59> col:52 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x563f2eaeaf90 <col:59> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x563f2eaeaf70 <col:59> 'int' 0
|-CXXConstructorDecl 0x563f2eab6680 <line:265:5, col:56> col:5 Args 'void (const Element *, ErrorHandler *)'
| |-ParmVarDecl 0x563f2eab6570 <col:10, col:25> col:25 context 'const Element *'
| `-ParmVarDecl 0x563f2eab65e8 <col:34, col:55> col:48 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x563f2eaeafc8 <col:55> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x563f2eaeafa8 <col:55> 'int' 0
|-CXXConstructorDecl 0x563f2eab6a38 <line:271:5, line:272:32> line:271:5 used Args 'void (const Vector<String> &, const Element *, ErrorHandler *)'
| |-ParmVarDecl 0x563f2eab6820 <col:10, col:32> col:32 conf 'const Vector<String> &'
| |-ParmVarDecl 0x563f2eab6898 <col:38, col:53> col:53 context 'const Element *'
| `-ParmVarDecl 0x563f2eab6910 <line:272:10, col:31> col:24 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x563f2eaeb000 <col:31> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x563f2eaeafe0 <col:31> 'int' 0
|-CXXConstructorDecl 0x563f2eab6bf8 <line:279:5, col:23> col:5 Args 'void (const Args &)'
| `-ParmVarDecl 0x563f2eab6b38 <col:10, col:22> col:22 x 'const Args &'
|-CXXDestructorDecl 0x563f2eab6cf0 <line:281:5, col:11> col:5 used ~Args 'void () noexcept'
|-CXXMethodDecl 0x563f2eab6ed8 <line:285:5, col:34> col:11 operator= 'Args &(const Args &)'
| `-ParmVarDecl 0x563f2eab6de0 <col:21, col:33> col:33 x 'const Args &'
|-CXXMethodDecl 0x563f2eab6fc8 <line:289:5, line:291:5> line:289:10 empty 'bool () const'
| `-CompoundStmt 0x563f2eaeb3b0 <col:24, line:291:5>
|   `-ReturnStmt 0x563f2eaeb3a0 <line:290:9, col:79>
|     `-BinaryOperator 0x563f2eaeb380 <col:16, col:79> 'bool' '&&'
|       |-BinaryOperator 0x563f2eaeb258 <col:16, col:47> 'bool' '&&'
|       | |-ParenExpr 0x563f2eaeb1b0 <col:16, col:41> 'bool'
|       | | `-BinaryOperator 0x563f2eaeb190 <col:17, col:40> 'bool' '||'
|       | |   |-UnaryOperator 0x563f2eaeb088 <col:17, col:18> 'bool' prefix '!' cannot overflow
|       | |   | `-ImplicitCastExpr 0x563f2eaeb070 <col:18> 'bool' <PointerToBoolean>
|       | |   |   `-ImplicitCastExpr 0x563f2eaeb058 <col:18> 'Vector<String> *' <LValueToRValue>
|       | |   |     `-MemberExpr 0x563f2eaeb028 <col:18> 'Vector<String> *const' lvalue ->_conf 0x563f2eadcd50
|       | |   |       `-CXXThisExpr 0x563f2eaeb018 <col:18> 'const Args *' implicit this
|       | |   `-UnaryOperator 0x563f2eaeb178 <col:27, col:40> 'bool' prefix '!' cannot overflow
|       | |     `-ImplicitCastExpr 0x563f2eaeb160 <col:28, col:40> 'bool' <IntegralToBoolean>
|       | |       `-CXXMemberCallExpr 0x563f2eaeb128 <col:28, col:40> 'Vector::size_type':'int'
|       | |         `-MemberExpr 0x563f2eaeb0f8 <col:28, col:35> '<bound member function type>' ->size 0x563f2ea632e8
|       | |           `-ImplicitCastExpr 0x563f2eaeb148 <col:28> 'const Vector<String> *' <NoOp>
|       | |             `-ImplicitCastExpr 0x563f2eaeb0e0 <col:28> 'Vector<String> *' <LValueToRValue>
|       | |               `-MemberExpr 0x563f2eaeb0b0 <col:28> 'Vector<String> *const' lvalue ->_conf 0x563f2eadcd50
|       | |                 `-CXXThisExpr 0x563f2eaeb0a0 <col:28> 'const Args *' implicit this
|       | `-UnaryOperator 0x563f2eaeb240 <col:46, col:47> 'bool' prefix '!' cannot overflow
|       |   `-ImplicitCastExpr 0x563f2eaeb228 <col:47> 'bool' <PointerToBoolean>
|       |     `-ImplicitCastExpr 0x563f2eaeb210 <col:47> 'Args::Slot *' <LValueToRValue>
|       |       `-MemberExpr 0x563f2eaeb1e0 <col:47> 'Args::Slot *const' lvalue ->_slots 0x563f2eae9ae0
|       |         `-CXXThisExpr 0x563f2eaeb1d0 <col:47> 'const Args *' implicit this
|       `-BinaryOperator 0x563f2eaeb360 <col:57, col:79> 'bool' '=='
|         |-ImplicitCastExpr 0x563f2eaeb348 <col:57, col:74> 'int' <IntegralCast>
|         | `-ImplicitCastExpr 0x563f2eaeb330 <col:57, col:74> 'uint8_t':'unsigned char' <LValueToRValue>
|         |   `-ArraySubscriptExpr 0x563f2eaeb2f0 <col:57, col:74> 'const uint8_t':'const unsigned char' lvalue
|         |     |-ImplicitCastExpr 0x563f2eaeb2d8 <col:57> 'const uint8_t *' <ArrayToPointerDecay>
|         |     | `-MemberExpr 0x563f2eaeb288 <col:57> 'uint8_t const[48]' lvalue ->_simple_slotbuf 0x563f2eae9b90
|         |     |   `-CXXThisExpr 0x563f2eaeb278 <col:57> 'const Args *' implicit this
|         |     `-IntegerLiteral 0x563f2eaeb2b8 <col:73> 'int' 0
|         `-IntegerLiteral 0x563f2eaeb310 <col:79> 'int' 0
|-CXXMethodDecl 0x563f2eab7088 <line:294:5, line:296:5> line:294:10 results_empty 'bool () const'
| `-CompoundStmt 0x563f2eaeb588 <col:32, line:296:5>
|   `-ReturnStmt 0x563f2eaeb578 <line:295:9, col:49>
|     `-BinaryOperator 0x563f2eaeb558 <col:16, col:49> 'bool' '&&'
|       |-UnaryOperator 0x563f2eaeb438 <col:16, col:17> 'bool' prefix '!' cannot overflow
|       | `-ImplicitCastExpr 0x563f2eaeb420 <col:17> 'bool' <PointerToBoolean>
|       |   `-ImplicitCastExpr 0x563f2eaeb408 <col:17> 'Args::Slot *' <LValueToRValue>
|       |     `-MemberExpr 0x563f2eaeb3d8 <col:17> 'Args::Slot *const' lvalue ->_slots 0x563f2eae9ae0
|       |       `-CXXThisExpr 0x563f2eaeb3c8 <col:17> 'const Args *' implicit this
|       `-BinaryOperator 0x563f2eaeb538 <col:27, col:49> 'bool' '=='
|         |-ImplicitCastExpr 0x563f2eaeb520 <col:27, col:44> 'int' <IntegralCast>
|         | `-ImplicitCastExpr 0x563f2eaeb508 <col:27, col:44> 'uint8_t':'unsigned char' <LValueToRValue>
|         |   `-ArraySubscriptExpr 0x563f2eaeb4c8 <col:27, col:44> 'const uint8_t':'const unsigned char' lvalue
|         |     |-ImplicitCastExpr 0x563f2eaeb4b0 <col:27> 'const uint8_t *' <ArrayToPointerDecay>
|         |     | `-MemberExpr 0x563f2eaeb460 <col:27> 'uint8_t const[48]' lvalue ->_simple_slotbuf 0x563f2eae9b90
|         |     |   `-CXXThisExpr 0x563f2eaeb450 <col:27> 'const Args *' implicit this
|         |     `-IntegerLiteral 0x563f2eaeb490 <col:43> 'int' 0
|         `-IntegerLiteral 0x563f2eaeb4e8 <col:49> 'int' 0
|-CXXMethodDecl 0x563f2eab7178 <line:301:5, line:306:5> line:301:11 clear 'Args &()'
| `-CompoundStmt 0x563f2eaeb798 <col:19, line:306:5>
|   |-IfStmt 0x563f2eaeb6b8 <line:302:9, line:303:26>
|   | |-ImplicitCastExpr 0x563f2eaeb5f8 <line:302:13> 'bool' <PointerToBoolean>
|   | | `-ImplicitCastExpr 0x563f2eaeb5e0 <col:13> 'Vector<String> *' <LValueToRValue>
|   | |   `-MemberExpr 0x563f2eaeb5b0 <col:13> 'Vector<String> *' lvalue ->_conf 0x563f2eadcd50
|   | |     `-CXXThisExpr 0x563f2eaeb5a0 <col:13> 'Args *' implicit this
|   | `-CXXMemberCallExpr 0x563f2eaeb698 <line:303:13, col:26> 'void'
|   |   `-MemberExpr 0x563f2eaeb668 <col:13, col:20> '<bound member function type>' ->clear 0x563f2ea65ce8
|   |     `-ImplicitCastExpr 0x563f2eaeb650 <col:13> 'Vector<String> *' <LValueToRValue>
|   |       `-MemberExpr 0x563f2eaeb620 <col:13> 'Vector<String> *' lvalue ->_conf 0x563f2eadcd50
|   |         `-CXXThisExpr 0x563f2eaeb610 <col:13> 'Args *' implicit this
|   |-CXXMemberCallExpr 0x563f2eaeb740 <line:304:9, col:22> 'void'
|   | `-MemberExpr 0x563f2eaeb710 <col:9, col:16> '<bound member function type>' .clear 0x563f2eae9668
|   |   `-MemberExpr 0x563f2eaeb6e0 <col:9> 'Vector<int>':'Vector<int>' lvalue ->_kwpos 0x563f2eae9a80
|   |     `-CXXThisExpr 0x563f2eaeb6d0 <col:9> 'Args *' implicit this
|   `-ReturnStmt 0x563f2eaeb788 <line:305:9, col:17>
|     `-UnaryOperator 0x563f2eaeb770 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x563f2eaeb760 <col:17> 'Args *' this
|-CXXMethodDecl 0x563f2eab73f8 <line:313:5, col:36> col:11 bind 'Args &(Vector<String> &)'
| `-ParmVarDecl 0x563f2eab7300 <col:16, col:32> col:32 conf 'Vector<String> &'
|-CXXMethodDecl 0x563f2eab7578 <line:317:5, col:38> col:11 push_back 'Args &(const String &)'
| `-ParmVarDecl 0x563f2eab74b0 <col:21, col:35> col:35 arg 'const String &'
|-FunctionTemplateDecl 0x563f2eab78f8 <line:321:5, line:327:5> line:321:35 push_back
| |-TemplateTypeParmDecl 0x563f2eab7620 <col:14, col:23> col:23 referenced typename depth 0 index 0 Iter
| `-CXXMethodDecl 0x563f2eab7858 <col:29, line:327:5> line:321:35 push_back 'Args &(Iter, Iter)'
|   |-ParmVarDecl 0x563f2eab76c8 <col:45, col:50> col:50 referenced begin 'Iter'
|   |-ParmVarDecl 0x563f2eab7740 <col:57, col:62> col:62 referenced end 'Iter'
|   `-CompoundStmt 0x563f2eaebab8 <col:67, line:327:5>
|     |-WhileStmt 0x563f2eaeba68 <line:322:9, line:325:9>
|     | |-CXXOperatorCallExpr 0x563f2eaeb880 <line:322:16, col:25> '<dependent type>'
|     | | |-UnresolvedLookupExpr 0x563f2eaeb800 <col:22> '<overloaded function type>' lvalue (ADL) = 'operator!=' 0x563f2e9d4cf8 0x563f2e81e2d8 0x563f2e81dfb0 0x563f2e80e780 0x563f2e80e430 0x563f2e80dd20 0x563f2e7e0690 0x563f2e76d940
|     | | |-DeclRefExpr 0x563f2eaeb7c0 <col:16> 'Iter' lvalue ParmVar 0x563f2eab76c8 'begin' 'Iter'
|     | | `-DeclRefExpr 0x563f2eaeb7e0 <col:25> 'Iter' lvalue ParmVar 0x563f2eab7740 'end' 'Iter'
|     | `-CompoundStmt 0x563f2eaeba48 <col:30, line:325:9>
|     |   |-CallExpr 0x563f2eaeb9e8 <line:323:13, col:29> '<dependent type>'
|     |   | |-UnresolvedMemberExpr 0x563f2eaeb8c8 <col:13> '<bound member function type>' lvalue
|     |   | `-CXXOperatorCallExpr 0x563f2eaeb9b8 <col:23, col:24> '<dependent type>'
|     |   |   |-UnresolvedLookupExpr 0x563f2eaeb948 <col:23> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x563f2e9d9e78 0x563f2e9d9a98 0x563f2e9d96c8 0x563f2e9d92e8 0x563f2e9d8f08 0x563f2e9d8b38
|     |   |   `-DeclRefExpr 0x563f2eaeb928 <col:24> 'Iter' lvalue ParmVar 0x563f2eab76c8 'begin' 'Iter'
|     |   `-UnaryOperator 0x563f2eaeba30 <line:324:13, col:15> '<dependent type>' prefix '++' cannot overflow
|     |     `-DeclRefExpr 0x563f2eaeba10 <col:15> 'Iter' lvalue ParmVar 0x563f2eab76c8 'begin' 'Iter'
|     `-ReturnStmt 0x563f2eaebaa8 <line:326:9, col:17>
|       `-UnaryOperator 0x563f2eaeba90 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x563f2eaeba80 <col:17> 'Args *' this
|-CXXMethodDecl 0x563f2eab7a00 <line:331:5, col:44> col:11 push_back_words 'Args &(const String &)'
| `-ParmVarDecl 0x563f2eab7970 <col:27, col:41> col:41 str 'const String &'
|-CXXMethodDecl 0x563f2eab7b48 <line:335:5, col:43> col:11 push_back_args 'Args &(const String &)'
| `-ParmVarDecl 0x563f2eab7ab8 <col:26, col:40> col:40 str 'const String &'
|-CXXMethodDecl 0x563f2eab7c10 <line:350:5, line:353:5> line:350:11 reset 'Args &()'
| `-CompoundStmt 0x563f2eaebb98 <col:19, line:353:5>
|   |-CXXMemberCallExpr 0x563f2eaebb38 <line:351:9, col:21> 'void'
|   | |-MemberExpr 0x563f2eaebae8 <col:9> '<bound member function type>' ->reset_from 0x563f2eae9f08
|   | | `-CXXThisExpr 0x563f2eaebad8 <col:9> 'Args *' implicit this
|   | `-IntegerLiteral 0x563f2eaebb18 <col:20> 'int' 0
|   `-ReturnStmt 0x563f2eaebb88 <line:352:9, col:17>
|     `-UnaryOperator 0x563f2eaebb70 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x563f2eaebb60 <col:17> 'Args *' this
|-VarDecl 0x563f2eab7cc8 <line:356:5, col:38> col:26 referenced mandatory 'const int' static constexpr cinit
| `-IntegerLiteral 0x563f2eab7d30 <col:38> 'int' 1
|-VarDecl 0x563f2eab7dc0 <line:357:5, col:39> col:26 referenced positional 'const int' static constexpr cinit
| `-IntegerLiteral 0x563f2eab7e28 <col:39> 'int' 2
|-VarDecl 0x563f2eab7eb8 <line:358:5, col:39> col:26 deprecated 'const int' static constexpr cinit
| `-IntegerLiteral 0x563f2eab7f20 <col:39> 'int' 4
|-VarDecl 0x563f2eab7fb0 <line:359:5, col:39> col:26 referenced firstmatch 'const int' static constexpr cinit
| `-IntegerLiteral 0x563f2eab8018 <col:39> 'int' 8
|-FunctionTemplateDecl 0x563f2eab8398 <line:368:5, line:371:5> line:369:11 read
| |-TemplateTypeParmDecl 0x563f2eab8090 <line:368:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x563f2eab82f8 <line:369:5, line:371:5> line:369:11 read 'Args &(const char *, T &)'
|   |-ParmVarDecl 0x563f2eab8140 <col:16, col:28> col:28 referenced keyword 'const char *'
|   |-ParmVarDecl 0x563f2eab81e8 <col:37, col:40> col:40 referenced x 'T &'
|   `-CompoundStmt 0x563f2eaebcf0 <col:43, line:371:5>
|     `-ReturnStmt 0x563f2eaebce0 <line:370:9, col:34>
|       `-CallExpr 0x563f2eaebca8 <col:16, col:34> '<dependent type>'
|         |-UnresolvedMemberExpr 0x563f2eaebbc8 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x563f2eaebc48 <col:21> 'const char *' lvalue ParmVar 0x563f2eab8140 'keyword' 'const char *'
|         |-IntegerLiteral 0x563f2eaebc68 <col:30> 'int' 0
|         `-DeclRefExpr 0x563f2eaebc88 <col:33> 'T' lvalue ParmVar 0x563f2eab81e8 'x' 'T &'
|-FunctionTemplateDecl 0x563f2eab86c8 <line:372:5, line:375:5> line:373:11 read_m
| |-TemplateTypeParmDecl 0x563f2eab8400 <line:372:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x563f2eab8628 <line:373:5, line:375:5> line:373:11 read_m 'Args &(const char *, T &)'
|   |-ParmVarDecl 0x563f2eab84b0 <col:18, col:30> col:30 referenced keyword 'const char *'
|   |-ParmVarDecl 0x563f2eab8558 <col:39, col:42> col:42 referenced x 'T &'
|   `-CompoundStmt 0x563f2eaebe40 <col:45, line:375:5>
|     `-ReturnStmt 0x563f2eaebe30 <line:374:9, col:42>
|       `-CallExpr 0x563f2eaebdf8 <col:16, col:42> '<dependent type>'
|         |-UnresolvedMemberExpr 0x563f2eaebd18 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x563f2eaebd98 <col:21> 'const char *' lvalue ParmVar 0x563f2eab84b0 'keyword' 'const char *'
|         |-DeclRefExpr 0x563f2eaebdb8 <col:30> 'const int' lvalue Var 0x563f2eab7cc8 'mandatory' 'const int'
|         `-DeclRefExpr 0x563f2eaebdd8 <col:41> 'T' lvalue ParmVar 0x563f2eab8558 'x' 'T &'
|-FunctionTemplateDecl 0x563f2eab89f8 <line:376:5, line:379:5> line:377:11 read_p
| |-TemplateTypeParmDecl 0x563f2eab8730 <line:376:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x563f2eab8958 <line:377:5, line:379:5> line:377:11 read_p 'Args &(const char *, T &)'
|   |-ParmVarDecl 0x563f2eab87e0 <col:18, col:30> col:30 referenced keyword 'const char *'
|   |-ParmVarDecl 0x563f2eab8888 <col:39, col:42> col:42 referenced x 'T &'
|   `-CompoundStmt 0x563f2eaebf90 <col:45, line:379:5>
|     `-ReturnStmt 0x563f2eaebf80 <line:378:9, col:43>
|       `-CallExpr 0x563f2eaebf48 <col:16, col:43> '<dependent type>'
|         |-UnresolvedMemberExpr 0x563f2eaebe68 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x563f2eaebee8 <col:21> 'const char *' lvalue ParmVar 0x563f2eab87e0 'keyword' 'const char *'
|         |-DeclRefExpr 0x563f2eaebf08 <col:30> 'const int' lvalue Var 0x563f2eab7dc0 'positional' 'const int'
|         `-DeclRefExpr 0x563f2eaebf28 <col:42> 'T' lvalue ParmVar 0x563f2eab8888 'x' 'T &'
|-FunctionTemplateDecl 0x563f2eabc300 <line:380:5, line:383:5> line:381:11 read_mp
| |-TemplateTypeParmDecl 0x563f2eab8a60 <line:380:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x563f2eabc260 <line:381:5, line:383:5> line:381:11 read_mp 'Args &(const char *, T &)'
|   |-ParmVarDecl 0x563f2eab8b10 <col:19, col:31> col:31 referenced keyword 'const char *'
|   |-ParmVarDecl 0x563f2eab8bb8 <col:40, col:43> col:43 referenced x 'T &'
|   `-CompoundStmt 0x563f2eaec190 <col:46, line:383:5>
|     `-ReturnStmt 0x563f2eaec180 <line:382:9, col:55>
|       `-CallExpr 0x563f2eaec148 <col:16, col:55> '<dependent type>'
|         |-UnresolvedMemberExpr 0x563f2eaebfb8 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x563f2eaec038 <col:21> 'const char *' lvalue ParmVar 0x563f2eab8b10 'keyword' 'const char *'
|         |-BinaryOperator 0x563f2eaec108 <col:30, col:42> 'int' '|'
|         | |-ImplicitCastExpr 0x563f2eaec0b8 <col:30> 'int' <LValueToRValue>
|         | | `-DeclRefExpr 0x563f2eaec098 <col:30> 'const int' lvalue Var 0x563f2eab7cc8 'mandatory' 'const int' non_odr_use_constant
|         | `-ImplicitCastExpr 0x563f2eaec0f0 <col:42> 'int' <LValueToRValue>
|         |   `-DeclRefExpr 0x563f2eaec0d0 <col:42> 'const int' lvalue Var 0x563f2eab7dc0 'positional' 'const int' non_odr_use_constant
|         `-DeclRefExpr 0x563f2eaec128 <col:54> 'T' lvalue ParmVar 0x563f2eab8bb8 'x' 'T &'
|-FunctionTemplateDecl 0x563f2eabc708 <line:384:5, line:388:5> line:385:11 read
| |-TemplateTypeParmDecl 0x563f2eabc368 <line:384:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x563f2eabc668 <line:385:5, line:388:5> line:385:11 read 'Args &(const char *, int, T &)'
|   |-ParmVarDecl 0x563f2eabc420 <col:16, col:28> col:28 referenced keyword 'const char *'
|   |-ParmVarDecl 0x563f2eabc4a0 <col:37, col:41> col:41 referenced flags 'int'
|   |-ParmVarDecl 0x563f2eabc548 <col:48, col:51> col:51 referenced x 'T &'
|   `-CompoundStmt 0x563f2eaec2d0 <col:54, line:388:5>
|     |-CallExpr 0x563f2eaec258 <line:386:9, col:47> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x563f2eaec1a8 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read' empty
|     | |-CXXThisExpr 0x563f2eaec1e8 <col:24> 'Args *' this
|     | |-DeclRefExpr 0x563f2eaec1f8 <col:30> 'const char *' lvalue ParmVar 0x563f2eabc420 'keyword' 'const char *'
|     | |-DeclRefExpr 0x563f2eaec218 <col:39> 'int' lvalue ParmVar 0x563f2eabc4a0 'flags' 'int'
|     | `-DeclRefExpr 0x563f2eaec238 <col:46> 'T' lvalue ParmVar 0x563f2eabc548 'x' 'T &'
|     `-ReturnStmt 0x563f2eaec2c0 <line:387:9, col:17>
|       `-UnaryOperator 0x563f2eaec2a8 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x563f2eaec298 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x563f2eabcbb8 <line:400:5, line:403:5> line:401:11 read_or_set
| |-TemplateTypeParmDecl 0x563f2eabc778 <line:400:15, col:24> col:24 referenced typename depth 0 index 0 T
| |-TemplateTypeParmDecl 0x563f2eabc7f8 <col:27, col:36> col:36 referenced typename depth 0 index 1 V
| `-CXXMethodDecl 0x563f2eabcb18 <line:401:5, line:403:5> line:401:11 read_or_set 'Args &(const char *, T &, const V &)'
|   |-ParmVarDecl 0x563f2eabc8b8 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x563f2eabc958 <col:44, col:47> col:47 referenced x 'T &'
|   |-ParmVarDecl 0x563f2eabc9f8 <col:50, col:59> col:59 referenced default_value 'const V &'
|   `-CompoundStmt 0x563f2eaec440 <col:74, line:403:5>
|     `-ReturnStmt 0x563f2eaec430 <line:402:9, col:56>
|       `-CallExpr 0x563f2eaec3f0 <col:16, col:56> '<dependent type>'
|         |-UnresolvedMemberExpr 0x563f2eaec300 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x563f2eaec370 <col:28> 'const char *' lvalue ParmVar 0x563f2eabc8b8 'keyword' 'const char *'
|         |-IntegerLiteral 0x563f2eaec390 <col:37> 'int' 0
|         |-DeclRefExpr 0x563f2eaec3b0 <col:40> 'T' lvalue ParmVar 0x563f2eabc958 'x' 'T &'
|         `-DeclRefExpr 0x563f2eaec3d0 <col:43> 'const V' lvalue ParmVar 0x563f2eabc9f8 'default_value' 'const V &'
|-FunctionTemplateDecl 0x563f2eabd028 <line:404:5, line:407:5> line:405:11 read_or_set_p
| |-TemplateTypeParmDecl 0x563f2eabcc28 <line:404:15, col:24> col:24 referenced typename depth 0 index 0 T
| |-TemplateTypeParmDecl 0x563f2eabcca8 <col:27, col:36> col:36 referenced typename depth 0 index 1 V
| `-CXXMethodDecl 0x563f2eabcf88 <line:405:5, line:407:5> line:405:11 read_or_set_p 'Args &(const char *, T &, const V &)'
|   |-ParmVarDecl 0x563f2eabcd68 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x563f2eabce08 <col:46, col:49> col:49 referenced x 'T &'
|   |-ParmVarDecl 0x563f2eabcea8 <col:52, col:61> col:61 referenced default_value 'const V &'
|   `-CompoundStmt 0x563f2eaec5a8 <col:76, line:407:5>
|     `-ReturnStmt 0x563f2eaec598 <line:406:9, col:65>
|       `-CallExpr 0x563f2eaec558 <col:16, col:65> '<dependent type>'
|         |-UnresolvedMemberExpr 0x563f2eaec468 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x563f2eaec4d8 <col:28> 'const char *' lvalue ParmVar 0x563f2eabcd68 'keyword' 'const char *'
|         |-DeclRefExpr 0x563f2eaec4f8 <col:37> 'const int' lvalue Var 0x563f2eab7dc0 'positional' 'const int'
|         |-DeclRefExpr 0x563f2eaec518 <col:49> 'T' lvalue ParmVar 0x563f2eabce08 'x' 'T &'
|         `-DeclRefExpr 0x563f2eaec538 <col:52> 'const V' lvalue ParmVar 0x563f2eabcea8 'default_value' 'const V &'
|-FunctionTemplateDecl 0x563f2eabd578 <line:408:5, line:412:5> line:409:11 read_or_set
| |-TemplateTypeParmDecl 0x563f2eabd098 <line:408:15, col:24> col:24 referenced typename depth 0 index 0 T
| |-TemplateTypeParmDecl 0x563f2eabd118 <col:27, col:36> col:36 referenced typename depth 0 index 1 V
| `-CXXMethodDecl 0x563f2eabd4d8 <line:409:5, line:412:5> line:409:11 read_or_set 'Args &(const char *, int, T &, const V &)'
|   |-ParmVarDecl 0x563f2eabd1d8 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x563f2eabd258 <col:44, col:48> col:48 referenced flags 'int'
|   |-ParmVarDecl 0x563f2eabd2f8 <col:55, col:58> col:58 referenced x 'T &'
|   |-ParmVarDecl 0x563f2eabd398 <col:61, col:70> col:70 referenced default_value 'const V &'
|   `-CompoundStmt 0x563f2eaec710 <col:85, line:412:5>
|     |-CallExpr 0x563f2eaec690 <line:410:9, col:69> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x563f2eaec5c0 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read_or_set' empty
|     | |-CXXThisExpr 0x563f2eaec600 <col:31> 'Args *' this
|     | |-DeclRefExpr 0x563f2eaec610 <col:37> 'const char *' lvalue ParmVar 0x563f2eabd1d8 'keyword' 'const char *'
|     | |-DeclRefExpr 0x563f2eaec630 <col:46> 'int' lvalue ParmVar 0x563f2eabd258 'flags' 'int'
|     | |-DeclRefExpr 0x563f2eaec650 <col:53> 'T' lvalue ParmVar 0x563f2eabd2f8 'x' 'T &'
|     | `-DeclRefExpr 0x563f2eaec670 <col:56> 'const V' lvalue ParmVar 0x563f2eabd398 'default_value' 'const V &'
|     `-ReturnStmt 0x563f2eaec700 <line:411:9, col:17>
|       `-UnaryOperator 0x563f2eaec6e8 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x563f2eaec6d8 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x563f2eabda08 <line:422:5, line:425:5> line:423:11 read
| |-TemplateTypeParmDecl 0x563f2eabd5f0 <line:422:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x563f2eabd668 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| |-CXXMethodDecl 0x563f2eabd968 <line:423:5, line:425:5> line:423:11 read 'Args &(const char *, P, T &)'
| | |-ParmVarDecl 0x563f2eabd728 <col:16, col:28> col:28 referenced keyword 'const char *'
| | |-ParmVarDecl 0x563f2eabd7a0 <col:37, col:39> col:39 referenced parser 'P'
| | |-ParmVarDecl 0x563f2eabd848 <col:47, col:50> col:50 referenced x 'T &'
| | `-CompoundStmt 0x563f2eaec890 <col:53, line:425:5>
| |   `-ReturnStmt 0x563f2eaec880 <line:424:9, col:42>
| |     `-CallExpr 0x563f2eaec840 <col:16, col:42> '<dependent type>'
| |       |-UnresolvedMemberExpr 0x563f2eaec740 <col:16> '<bound member function type>' lvalue
| |       |-DeclRefExpr 0x563f2eaec7c0 <col:21> 'const char *' lvalue ParmVar 0x563f2eabd728 'keyword' 'const char *'
| |       |-IntegerLiteral 0x563f2eaec7e0 <col:30> 'int' 0
| |       |-DeclRefExpr 0x563f2eaec800 <col:33> 'P' lvalue ParmVar 0x563f2eabd7a0 'parser' 'P'
| |       `-DeclRefExpr 0x563f2eaec820 <col:41> 'T' lvalue ParmVar 0x563f2eabd848 'x' 'T &'
| `-CXXMethodDecl 0x563f2ec00388 <line:423:5, line:425:5> line:423:11 used read 'Args &(const char *, AnyArg, String &)'
|   |-TemplateArgument type 'AnyArg'
|   |-TemplateArgument type 'String'
|   |-ParmVarDecl 0x563f2ec000f0 <col:16, col:28> col:28 keyword 'const char *'
|   |-ParmVarDecl 0x563f2ec00198 <col:37, col:39> col:39 parser 'AnyArg':'AnyArg'
|   `-ParmVarDecl 0x563f2ec00268 <col:47, col:50> col:50 x 'String &'
|-FunctionTemplateDecl 0x563f2eabde58 <line:426:5, line:429:5> line:427:11 read_m
| |-TemplateTypeParmDecl 0x563f2eabda78 <line:426:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x563f2eabdaf8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x563f2eabddb8 <line:427:5, line:429:5> line:427:11 read_m 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x563f2eabdbb8 <col:18, col:30> col:30 referenced keyword 'const char *'
|   |-ParmVarDecl 0x563f2eabdc30 <col:39, col:41> col:41 referenced parser 'P'
|   |-ParmVarDecl 0x563f2eabdcd8 <col:49, col:52> col:52 referenced x 'T &'
|   `-CompoundStmt 0x563f2eaeca08 <col:55, line:429:5>
|     `-ReturnStmt 0x563f2eaec9f8 <line:428:9, col:50>
|       `-CallExpr 0x563f2eaec9b8 <col:16, col:50> '<dependent type>'
|         |-UnresolvedMemberExpr 0x563f2eaec8b8 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x563f2eaec938 <col:21> 'const char *' lvalue ParmVar 0x563f2eabdbb8 'keyword' 'const char *'
|         |-DeclRefExpr 0x563f2eaec958 <col:30> 'const int' lvalue Var 0x563f2eab7cc8 'mandatory' 'const int'
|         |-DeclRefExpr 0x563f2eaec978 <col:41> 'P' lvalue ParmVar 0x563f2eabdc30 'parser' 'P'
|         `-DeclRefExpr 0x563f2eaec998 <col:49> 'T' lvalue ParmVar 0x563f2eabdcd8 'x' 'T &'
|-FunctionTemplateDecl 0x563f2eabe2a8 <line:430:5, line:433:5> line:431:11 read_p
| |-TemplateTypeParmDecl 0x563f2eabdec8 <line:430:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x563f2eabdf48 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x563f2eabe208 <line:431:5, line:433:5> line:431:11 read_p 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x563f2eabe008 <col:18, col:30> col:30 referenced keyword 'const char *'
|   |-ParmVarDecl 0x563f2eabe080 <col:39, col:41> col:41 referenced parser 'P'
|   |-ParmVarDecl 0x563f2eabe128 <col:49, col:52> col:52 referenced x 'T &'
|   `-CompoundStmt 0x563f2eaecb80 <col:55, line:433:5>
|     `-ReturnStmt 0x563f2eaecb70 <line:432:9, col:51>
|       `-CallExpr 0x563f2eaecb30 <col:16, col:51> '<dependent type>'
|         |-UnresolvedMemberExpr 0x563f2eaeca30 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x563f2eaecab0 <col:21> 'const char *' lvalue ParmVar 0x563f2eabe008 'keyword' 'const char *'
|         |-DeclRefExpr 0x563f2eaecad0 <col:30> 'const int' lvalue Var 0x563f2eab7dc0 'positional' 'const int'
|         |-DeclRefExpr 0x563f2eaecaf0 <col:42> 'P' lvalue ParmVar 0x563f2eabe080 'parser' 'P'
|         `-DeclRefExpr 0x563f2eaecb10 <col:50> 'T' lvalue ParmVar 0x563f2eabe128 'x' 'T &'
|-FunctionTemplateDecl 0x563f2eabe6f8 <line:434:5, line:437:5> line:435:11 read_mp
| |-TemplateTypeParmDecl 0x563f2eabe318 <line:434:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x563f2eabe398 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x563f2eabe658 <line:435:5, line:437:5> line:435:11 read_mp 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x563f2eabe458 <col:19, col:31> col:31 referenced keyword 'const char *'
|   |-ParmVarDecl 0x563f2eabe4d0 <col:40, col:42> col:42 referenced parser 'P'
|   |-ParmVarDecl 0x563f2eabe578 <col:50, col:53> col:53 referenced x 'T &'
|   `-CompoundStmt 0x563f2eaecda8 <col:56, line:437:5>
|     `-ReturnStmt 0x563f2eaecd98 <line:436:9, col:63>
|       `-CallExpr 0x563f2eaecd58 <col:16, col:63> '<dependent type>'
|         |-UnresolvedMemberExpr 0x563f2eaecba8 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x563f2eaecc28 <col:21> 'const char *' lvalue ParmVar 0x563f2eabe458 'keyword' 'const char *'
|         |-BinaryOperator 0x563f2eaeccf8 <col:30, col:42> 'int' '|'
|         | |-ImplicitCastExpr 0x563f2eaecca8 <col:30> 'int' <LValueToRValue>
|         | | `-DeclRefExpr 0x563f2eaecc88 <col:30> 'const int' lvalue Var 0x563f2eab7cc8 'mandatory' 'const int' non_odr_use_constant
|         | `-ImplicitCastExpr 0x563f2eaecce0 <col:42> 'int' <LValueToRValue>
|         |   `-DeclRefExpr 0x563f2eaeccc0 <col:42> 'const int' lvalue Var 0x563f2eab7dc0 'positional' 'const int' non_odr_use_constant
|         |-DeclRefExpr 0x563f2eaecd18 <col:54> 'P' lvalue ParmVar 0x563f2eabe4d0 'parser' 'P'
|         `-DeclRefExpr 0x563f2eaecd38 <col:62> 'T' lvalue ParmVar 0x563f2eabe578 'x' 'T &'
|-FunctionTemplateDecl 0x563f2eabec28 <line:438:5, line:442:5> line:439:11 read
| |-TemplateTypeParmDecl 0x563f2eabe768 <line:438:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x563f2eabe7e8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x563f2eabeb88 <line:439:5, line:442:5> line:439:11 read 'Args &(const char *, int, P, T &)'
|   |-ParmVarDecl 0x563f2eabe8a8 <col:16, col:28> col:28 referenced keyword 'const char *'
|   |-ParmVarDecl 0x563f2eabe928 <col:37, col:41> col:41 referenced flags 'int'
|   |-ParmVarDecl 0x563f2eabe9a0 <col:48, col:50> col:50 referenced parser 'P'
|   |-ParmVarDecl 0x563f2eabea48 <col:58, col:61> col:61 referenced x 'T &'
|   `-CompoundStmt 0x563f2eaecf10 <col:64, line:442:5>
|     |-CallExpr 0x563f2eaece90 <line:440:9, col:55> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x563f2eaecdc0 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read' empty
|     | |-CXXThisExpr 0x563f2eaece00 <col:24> 'Args *' this
|     | |-DeclRefExpr 0x563f2eaece10 <col:30> 'const char *' lvalue ParmVar 0x563f2eabe8a8 'keyword' 'const char *'
|     | |-DeclRefExpr 0x563f2eaece30 <col:39> 'int' lvalue ParmVar 0x563f2eabe928 'flags' 'int'
|     | |-DeclRefExpr 0x563f2eaece50 <col:46> 'P' lvalue ParmVar 0x563f2eabe9a0 'parser' 'P'
|     | `-DeclRefExpr 0x563f2eaece70 <col:54> 'T' lvalue ParmVar 0x563f2eabea48 'x' 'T &'
|     `-ReturnStmt 0x563f2eaecf00 <line:441:9, col:17>
|       `-UnaryOperator 0x563f2eaecee8 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x563f2eaeced8 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x563f2eabf228 <line:455:5, line:458:5> line:456:11 read_or_set
| |-TemplateTypeParmDecl 0x563f2eabeca0 <line:455:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x563f2eabed18 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| |-TemplateTypeParmDecl 0x563f2eabed98 <col:39, col:48> col:48 referenced typename depth 0 index 2 V
| `-CXXMethodDecl 0x563f2eabf188 <line:456:5, line:458:5> line:456:11 read_or_set 'Args &(const char *, P, T &, const V &)'
|   |-ParmVarDecl 0x563f2eabee60 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x563f2eabeed8 <col:44, col:46> col:46 referenced parser 'P'
|   |-ParmVarDecl 0x563f2eabef78 <col:54, col:57> col:57 referenced x 'T &'
|   |-ParmVarDecl 0x563f2eabf048 <col:60, col:69> col:69 referenced default_value 'const V &'
|   `-CompoundStmt 0x563f2eaed0a8 <col:84, line:458:5>
|     `-ReturnStmt 0x563f2eaed098 <line:457:9, col:64>
|       `-CallExpr 0x563f2eaed050 <col:16, col:64> '<dependent type>'
|         |-UnresolvedMemberExpr 0x563f2eaecf40 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x563f2eaecfb0 <col:28> 'const char *' lvalue ParmVar 0x563f2eabee60 'keyword' 'const char *'
|         |-IntegerLiteral 0x563f2eaecfd0 <col:37> 'int' 0
|         |-DeclRefExpr 0x563f2eaecff0 <col:40> 'P' lvalue ParmVar 0x563f2eabeed8 'parser' 'P'
|         |-DeclRefExpr 0x563f2eaed010 <col:48> 'T' lvalue ParmVar 0x563f2eabef78 'x' 'T &'
|         `-DeclRefExpr 0x563f2eaed030 <col:51> 'const V' lvalue ParmVar 0x563f2eabf048 'default_value' 'const V &'
|-FunctionTemplateDecl 0x563f2eabf7a8 <line:459:5, line:462:5> line:460:11 read_or_set_p
| |-TemplateTypeParmDecl 0x563f2eabf2a0 <line:459:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x563f2eabf318 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| |-TemplateTypeParmDecl 0x563f2eabf398 <col:39, col:48> col:48 referenced typename depth 0 index 2 V
| `-CXXMethodDecl 0x563f2eabf708 <line:460:5, line:462:5> line:460:11 read_or_set_p 'Args &(const char *, P, T &, const V &)'
|   |-ParmVarDecl 0x563f2eabf460 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x563f2eabf4d8 <col:46, col:48> col:48 referenced parser 'P'
|   |-ParmVarDecl 0x563f2eabf578 <col:56, col:59> col:59 referenced x 'T &'
|   |-ParmVarDecl 0x563f2eabf618 <col:62, col:71> col:71 referenced default_value 'const V &'
|   `-CompoundStmt 0x563f2eaed238 <col:86, line:462:5>
|     `-ReturnStmt 0x563f2eaed228 <line:461:9, col:73>
|       `-CallExpr 0x563f2eaed1e0 <col:16, col:73> '<dependent type>'
|         |-UnresolvedMemberExpr 0x563f2eaed0d0 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x563f2eaed140 <col:28> 'const char *' lvalue ParmVar 0x563f2eabf460 'keyword' 'const char *'
|         |-DeclRefExpr 0x563f2eaed160 <col:37> 'const int' lvalue Var 0x563f2eab7dc0 'positional' 'const int'
|         |-DeclRefExpr 0x563f2eaed180 <col:49> 'P' lvalue ParmVar 0x563f2eabf4d8 'parser' 'P'
|         |-DeclRefExpr 0x563f2eaed1a0 <col:57> 'T' lvalue ParmVar 0x563f2eabf578 'x' 'T &'
|         `-DeclRefExpr 0x563f2eaed1c0 <col:60> 'const V' lvalue ParmVar 0x563f2eabf618 'default_value' 'const V &'
|-FunctionTemplateDecl 0x563f2eabfe08 <line:463:5, line:467:5> line:464:11 read_or_set
| |-TemplateTypeParmDecl 0x563f2eabf820 <line:463:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x563f2eabf898 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| |-TemplateTypeParmDecl 0x563f2eabf918 <col:39, col:48> col:48 referenced typename depth 0 index 2 V
| `-CXXMethodDecl 0x563f2eabfd68 <line:464:5, line:467:5> line:464:11 read_or_set 'Args &(const char *, int, P, T &, const V &)'
|   |-ParmVarDecl 0x563f2eabf9e0 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x563f2eabfa60 <col:44, col:48> col:48 referenced flags 'int'
|   |-ParmVarDecl 0x563f2eabfad8 <col:55, col:57> col:57 referenced parser 'P'
|   |-ParmVarDecl 0x563f2eabfb78 <col:65, col:68> col:68 referenced x 'T &'
|   |-ParmVarDecl 0x563f2eabfc18 <col:71, col:80> col:80 referenced default_value 'const V &'
|   `-CompoundStmt 0x563f2eaed3c8 <col:95, line:467:5>
|     |-CallExpr 0x563f2eaed340 <line:465:9, col:77> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x563f2eaed250 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read_or_set' empty
|     | |-CXXThisExpr 0x563f2eaed290 <col:31> 'Args *' this
|     | |-DeclRefExpr 0x563f2eaed2a0 <col:37> 'const char *' lvalue ParmVar 0x563f2eabf9e0 'keyword' 'const char *'
|     | |-DeclRefExpr 0x563f2eaed2c0 <col:46> 'int' lvalue ParmVar 0x563f2eabfa60 'flags' 'int'
|     | |-DeclRefExpr 0x563f2eaed2e0 <col:53> 'P' lvalue ParmVar 0x563f2eabfad8 'parser' 'P'
|     | |-DeclRefExpr 0x563f2eaed300 <col:61> 'T' lvalue ParmVar 0x563f2eabfb78 'x' 'T &'
|     | `-DeclRefExpr 0x563f2eaed320 <col:64> 'const V' lvalue ParmVar 0x563f2eabfc18 'default_value' 'const V &'
|     `-ReturnStmt 0x563f2eaed3b8 <line:466:9, col:17>
|       `-UnaryOperator 0x563f2eaed3a0 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x563f2eaed390 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x563f2eac03e8 <line:478:5, line:481:5> line:479:11 read
| |-TemplateTypeParmDecl 0x563f2eabfe88 <line:478:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x563f2eabff08 <col:26, col:35> col:35 referenced typename depth 0 index 1 T1
| |-TemplateTypeParmDecl 0x563f2eabff88 <col:39, col:48> col:48 referenced typename depth 0 index 2 T2
| `-CXXMethodDecl 0x563f2eac0348 <line:479:5, line:481:5> line:479:11 read 'Args &(const char *, P, T1 &, T2 &)'
|   |-ParmVarDecl 0x563f2eac0050 <col:16, col:28> col:28 referenced keyword 'const char *'
|   |-ParmVarDecl 0x563f2eac00c8 <col:37, col:39> col:39 referenced parser 'P'
|   |-ParmVarDecl 0x563f2eac0168 <col:47, col:51> col:51 referenced x1 'T1 &'
|   |-ParmVarDecl 0x563f2eac0208 <col:55, col:59> col:59 referenced x2 'T2 &'
|   `-CompoundStmt 0x563f2eaed570 <col:63, line:481:5>
|     `-ReturnStmt 0x563f2eaed560 <line:480:9, col:47>
|       `-CallExpr 0x563f2eaed518 <col:16, col:47> '<dependent type>'
|         |-UnresolvedMemberExpr 0x563f2eaed3f8 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x563f2eaed478 <col:21> 'const char *' lvalue ParmVar 0x563f2eac0050 'keyword' 'const char *'
|         |-IntegerLiteral 0x563f2eaed498 <col:30> 'int' 0
|         |-DeclRefExpr 0x563f2eaed4b8 <col:33> 'P' lvalue ParmVar 0x563f2eac00c8 'parser' 'P'
|         |-DeclRefExpr 0x563f2eaed4d8 <col:41> 'T1' lvalue ParmVar 0x563f2eac0168 'x1' 'T1 &'
|         `-DeclRefExpr 0x563f2eaed4f8 <col:45> 'T2' lvalue ParmVar 0x563f2eac0208 'x2' 'T2 &'
|-FunctionTemplateDecl 0x563f2eac0968 <line:482:5, line:485:5> line:483:11 read_m
| |-TemplateTypeParmDecl 0x563f2eac0460 <line:482:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x563f2eac04d8 <col:26, col:35> col:35 referenced typename depth 0 index 1 T1
| |-TemplateTypeParmDecl 0x563f2eac0558 <col:39, col:48> col:48 referenced typename depth 0 index 2 T2
| `-CXXMethodDecl 0x563f2eac08c8 <line:483:5, line:485:5> line:483:11 read_m 'Args &(const char *, P, T1 &, T2 &)'
|   |-ParmVarDecl 0x563f2eac0620 <col:18, col:30> col:30 referenced keyword 'const char *'
|   |-ParmVarDecl 0x563f2eac0698 <col:39, col:41> col:41 referenced parser 'P'
|   |-ParmVarDecl 0x563f2eac0738 <col:49, col:53> col:53 referenced x1 'T1 &'
|   |-ParmVarDecl 0x563f2eac07d8 <col:57, col:61> col:61 referenced x2 'T2 &'
|   `-CompoundStmt 0x563f2eaed710 <col:65, line:485:5>
|     `-ReturnStmt 0x563f2eaed700 <line:484:9, col:55>
|       `-CallExpr 0x563f2eaed6b8 <col:16, col:55> '<dependent type>'
|         |-UnresolvedMemberExpr 0x563f2eaed598 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x563f2eaed618 <col:21> 'const char *' lvalue ParmVar 0x563f2eac0620 'keyword' 'const char *'
|         |-DeclRefExpr 0x563f2eaed638 <col:30> 'const int' lvalue Var 0x563f2eab7cc8 'mandatory' 'const int'
|         |-DeclRefExpr 0x563f2eaed658 <col:41> 'P' lvalue ParmVar 0x563f2eac0698 'parser' 'P'
|         |-DeclRefExpr 0x563f2eaed678 <col:49> 'T1' lvalue ParmVar 0x563f2eac0738 'x1' 'T1 &'
|         `-DeclRefExpr 0x563f2eaed698 <col:53> 'T2' lvalue ParmVar 0x563f2eac07d8 'x2' 'T2 &'
|-FunctionTemplateDecl 0x563f2eac0ee8 <line:486:5, line:489:5> line:487:11 read_p
| |-TemplateTypeParmDecl 0x563f2eac09e0 <line:486:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x563f2eac0a58 <col:26, col:35> col:35 referenced typename depth 0 index 1 T1
| |-TemplateTypeParmDecl 0x563f2eac0ad8 <col:39, col:48> col:48 referenced typename depth 0 index 2 T2
| `-CXXMethodDecl 0x563f2eac0e48 <line:487:5, line:489:5> line:487:11 read_p 'Args &(const char *, P, T1 &, T2 &)'
|   |-ParmVarDecl 0x563f2eac0ba0 <col:18, col:30> col:30 referenced keyword 'const char *'
|   |-ParmVarDecl 0x563f2eac0c18 <col:39, col:41> col:41 referenced parser 'P'
|   |-ParmVarDecl 0x563f2eac0cb8 <col:49, col:53> col:53 referenced x1 'T1 &'
|   |-ParmVarDecl 0x563f2eac0d58 <col:57, col:61> col:61 referenced x2 'T2 &'
|   `-CompoundStmt 0x563f2eaed8b0 <col:65, line:489:5>
|     `-ReturnStmt 0x563f2eaed8a0 <line:488:9, col:56>
|       `-CallExpr 0x563f2eaed858 <col:16, col:56> '<dependent type>'
|         |-UnresolvedMemberExpr 0x563f2eaed738 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x563f2eaed7b8 <col:21> 'const char *' lvalue ParmVar 0x563f2eac0ba0 'keyword' 'const char *'
|         |-DeclRefExpr 0x563f2eaed7d8 <col:30> 'const int' lvalue Var 0x563f2eab7dc0 'positional' 'const int'
|         |-DeclRefExpr 0x563f2eaed7f8 <col:42> 'P' lvalue ParmVar 0x563f2eac0c18 'parser' 'P'
|         |-DeclRefExpr 0x563f2eaed818 <col:50> 'T1' lvalue ParmVar 0x563f2eac0cb8 'x1' 'T1 &'
|         `-DeclRefExpr 0x563f2eaed838 <col:54> 'T2' lvalue ParmVar 0x563f2eac0d58 'x2' 'T2 &'
|-FunctionTemplateDecl 0x563f2eac1468 <line:490:5, line:493:5> line:491:11 read_mp
| |-TemplateTypeParmDecl 0x563f2eac0f60 <line:490:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x563f2eac0fd8 <col:26, col:35> col:35 referenced typename depth 0 index 1 T1
| |-TemplateTypeParmDecl 0x563f2eac1058 <col:39, col:48> col:48 referenced typename depth 0 index 2 T2
| `-CXXMethodDecl 0x563f2eac13c8 <line:491:5, line:493:5> line:491:11 read_mp 'Args &(const char *, P, T1 &, T2 &)'
|   |-ParmVarDecl 0x563f2eac1120 <col:19, col:31> col:31 referenced keyword 'const char *'
|   |-ParmVarDecl 0x563f2eac1198 <col:40, col:42> col:42 referenced parser 'P'
|   |-ParmVarDecl 0x563f2eac1238 <col:50, col:54> col:54 referenced x1 'T1 &'
|   |-ParmVarDecl 0x563f2eac12d8 <col:58, col:62> col:62 referenced x2 'T2 &'
|   `-CompoundStmt 0x563f2eaedb00 <col:66, line:493:5>
|     `-ReturnStmt 0x563f2eaedaf0 <line:492:9, col:68>
|       `-CallExpr 0x563f2eaedaa8 <col:16, col:68> '<dependent type>'
|         |-UnresolvedMemberExpr 0x563f2eaed8d8 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x563f2eaed958 <col:21> 'const char *' lvalue ParmVar 0x563f2eac1120 'keyword' 'const char *'
|         |-BinaryOperator 0x563f2eaeda28 <col:30, col:42> 'int' '|'
|         | |-ImplicitCastExpr 0x563f2eaed9d8 <col:30> 'int' <LValueToRValue>
|         | | `-DeclRefExpr 0x563f2eaed9b8 <col:30> 'const int' lvalue Var 0x563f2eab7cc8 'mandatory' 'const int' non_odr_use_constant
|         | `-ImplicitCastExpr 0x563f2eaeda10 <col:42> 'int' <LValueToRValue>
|         |   `-DeclRefExpr 0x563f2eaed9f0 <col:42> 'const int' lvalue Var 0x563f2eab7dc0 'positional' 'const int' non_odr_use_constant
|         |-DeclRefExpr 0x563f2eaeda48 <col:54> 'P' lvalue ParmVar 0x563f2eac1198 'parser' 'P'
|         |-DeclRefExpr 0x563f2eaeda68 <col:62> 'T1' lvalue ParmVar 0x563f2eac1238 'x1' 'T1 &'
|         `-DeclRefExpr 0x563f2eaeda88 <col:66> 'T2' lvalue ParmVar 0x563f2eac12d8 'x2' 'T2 &'
|-FunctionTemplateDecl 0x563f2eac1ac8 <line:494:5, line:498:5> line:495:11 read
| |-TemplateTypeParmDecl 0x563f2eac14e0 <line:494:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x563f2eac1558 <col:26, col:35> col:35 referenced typename depth 0 index 1 T1
| |-TemplateTypeParmDecl 0x563f2eac15d8 <col:39, col:48> col:48 referenced typename depth 0 index 2 T2
| `-CXXMethodDecl 0x563f2eac1a28 <line:495:5, line:498:5> line:495:11 read 'Args &(const char *, int, P, T1 &, T2 &)'
|   |-ParmVarDecl 0x563f2eac16a0 <col:16, col:28> col:28 referenced keyword 'const char *'
|   |-ParmVarDecl 0x563f2eac1720 <col:37, col:41> col:41 referenced flags 'int'
|   |-ParmVarDecl 0x563f2eac1798 <col:48, col:50> col:50 referenced parser 'P'
|   |-ParmVarDecl 0x563f2eac1838 <col:58, col:62> col:62 referenced x1 'T1 &'
|   |-ParmVarDecl 0x563f2eac18d8 <col:66, col:70> col:70 referenced x2 'T2 &'
|   `-CompoundStmt 0x563f2eaedc90 <col:74, line:498:5>
|     |-CallExpr 0x563f2eaedc08 <line:496:9, col:60> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x563f2eaedb18 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read' empty
|     | |-CXXThisExpr 0x563f2eaedb58 <col:24> 'Args *' this
|     | |-DeclRefExpr 0x563f2eaedb68 <col:30> 'const char *' lvalue ParmVar 0x563f2eac16a0 'keyword' 'const char *'
|     | |-DeclRefExpr 0x563f2eaedb88 <col:39> 'int' lvalue ParmVar 0x563f2eac1720 'flags' 'int'
|     | |-DeclRefExpr 0x563f2eaedba8 <col:46> 'P' lvalue ParmVar 0x563f2eac1798 'parser' 'P'
|     | |-DeclRefExpr 0x563f2eaedbc8 <col:54> 'T1' lvalue ParmVar 0x563f2eac1838 'x1' 'T1 &'
|     | `-DeclRefExpr 0x563f2eaedbe8 <col:58> 'T2' lvalue ParmVar 0x563f2eac18d8 'x2' 'T2 &'
|     `-ReturnStmt 0x563f2eaedc80 <line:497:9, col:17>
|       `-UnaryOperator 0x563f2eaedc68 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x563f2eaedc58 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x563f2eac1e28 <line:506:5, line:509:5> line:507:11 read_with
| |-TemplateTypeParmDecl 0x563f2eac1b48 <line:506:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x563f2eac1d88 <line:507:5, line:509:5> line:507:11 read_with 'Args &(const char *, P)'
|   |-ParmVarDecl 0x563f2eac1c00 <col:21, col:33> col:33 referenced keyword 'const char *'
|   |-ParmVarDecl 0x563f2eac1c78 <col:42, col:44> col:44 referenced parser 'P'
|   `-CompoundStmt 0x563f2eaeddd8 <col:52, line:509:5>
|     `-ReturnStmt 0x563f2eaeddc8 <line:508:9, col:44>
|       `-CallExpr 0x563f2eaedd90 <col:16, col:44> '<dependent type>'
|         |-UnresolvedMemberExpr 0x563f2eaedcc0 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x563f2eaedd30 <col:26> 'const char *' lvalue ParmVar 0x563f2eac1c00 'keyword' 'const char *'
|         |-IntegerLiteral 0x563f2eaedd50 <col:35> 'int' 0
|         `-DeclRefExpr 0x563f2eaedd70 <col:38> 'P' lvalue ParmVar 0x563f2eac1c78 'parser' 'P'
|-FunctionTemplateDecl 0x563f2eac2128 <line:510:5, line:513:5> line:511:11 read_m_with
| |-TemplateTypeParmDecl 0x563f2eac1e90 <line:510:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x563f2eac2088 <line:511:5, line:513:5> line:511:11 read_m_with 'Args &(const char *, P)'
|   |-ParmVarDecl 0x563f2eac1f40 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x563f2eac1fb8 <col:44, col:46> col:46 referenced parser 'P'
|   `-CompoundStmt 0x563f2eaedf18 <col:54, line:513:5>
|     `-ReturnStmt 0x563f2eaedf08 <line:512:9, col:52>
|       `-CallExpr 0x563f2eaeded0 <col:16, col:52> '<dependent type>'
|         |-UnresolvedMemberExpr 0x563f2eaede00 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x563f2eaede70 <col:26> 'const char *' lvalue ParmVar 0x563f2eac1f40 'keyword' 'const char *'
|         |-DeclRefExpr 0x563f2eaede90 <col:35> 'const int' lvalue Var 0x563f2eab7cc8 'mandatory' 'const int'
|         `-DeclRefExpr 0x563f2eaedeb0 <col:46> 'P' lvalue ParmVar 0x563f2eac1fb8 'parser' 'P'
|-FunctionTemplateDecl 0x563f2eac2428 <line:514:5, line:517:5> line:515:11 read_p_with
| |-TemplateTypeParmDecl 0x563f2eac2190 <line:514:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x563f2eac2388 <line:515:5, line:517:5> line:515:11 read_p_with 'Args &(const char *, P)'
|   |-ParmVarDecl 0x563f2eac2240 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x563f2eac22b8 <col:44, col:46> col:46 referenced parser 'P'
|   `-CompoundStmt 0x563f2eaee058 <col:54, line:517:5>
|     `-ReturnStmt 0x563f2eaee048 <line:516:9, col:53>
|       `-CallExpr 0x563f2eaee010 <col:16, col:53> '<dependent type>'
|         |-UnresolvedMemberExpr 0x563f2eaedf40 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x563f2eaedfb0 <col:26> 'const char *' lvalue ParmVar 0x563f2eac2240 'keyword' 'const char *'
|         |-DeclRefExpr 0x563f2eaedfd0 <col:35> 'const int' lvalue Var 0x563f2eab7dc0 'positional' 'const int'
|         `-DeclRefExpr 0x563f2eaedff0 <col:47> 'P' lvalue ParmVar 0x563f2eac22b8 'parser' 'P'
|-FunctionTemplateDecl 0x563f2eac2728 <line:518:5, line:521:5> line:519:11 read_mp_with
| |-TemplateTypeParmDecl 0x563f2eac2490 <line:518:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x563f2eac2688 <line:519:5, line:521:5> line:519:11 read_mp_with 'Args &(const char *, P)'
|   |-ParmVarDecl 0x563f2eac2540 <col:24, col:36> col:36 referenced keyword 'const char *'
|   |-ParmVarDecl 0x563f2eac25b8 <col:45, col:47> col:47 referenced parser 'P'
|   `-CompoundStmt 0x563f2eaee248 <col:55, line:521:5>
|     `-ReturnStmt 0x563f2eaee238 <line:520:9, col:65>
|       `-CallExpr 0x563f2eaee200 <col:16, col:65> '<dependent type>'
|         |-UnresolvedMemberExpr 0x563f2eaee080 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x563f2eaee0f0 <col:26> 'const char *' lvalue ParmVar 0x563f2eac2540 'keyword' 'const char *'
|         |-BinaryOperator 0x563f2eaee1c0 <col:35, col:47> 'int' '|'
|         | |-ImplicitCastExpr 0x563f2eaee170 <col:35> 'int' <LValueToRValue>
|         | | `-DeclRefExpr 0x563f2eaee150 <col:35> 'const int' lvalue Var 0x563f2eab7cc8 'mandatory' 'const int' non_odr_use_constant
|         | `-ImplicitCastExpr 0x563f2eaee1a8 <col:47> 'int' <LValueToRValue>
|         |   `-DeclRefExpr 0x563f2eaee188 <col:47> 'const int' lvalue Var 0x563f2eab7dc0 'positional' 'const int' non_odr_use_constant
|         `-DeclRefExpr 0x563f2eaee1e0 <col:59> 'P' lvalue ParmVar 0x563f2eac25b8 'parser' 'P'
|-FunctionTemplateDecl 0x563f2eac2af8 <line:522:5, line:526:5> line:523:11 read_with
| |-TemplateTypeParmDecl 0x563f2eac2790 <line:522:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x563f2eac2a58 <line:523:5, line:526:5> line:523:11 read_with 'Args &(const char *, int, P)'
|   |-ParmVarDecl 0x563f2eac2840 <col:21, col:33> col:33 referenced keyword 'const char *'
|   |-ParmVarDecl 0x563f2eac28c0 <col:42, col:46> col:46 referenced flags 'int'
|   |-ParmVarDecl 0x563f2eac2938 <col:53, col:55> col:55 referenced parser 'P'
|   `-CompoundStmt 0x563f2eaee388 <col:63, line:526:5>
|     |-CallExpr 0x563f2eaee310 <line:524:9, col:57> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x563f2eaee260 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read_with' empty
|     | |-CXXThisExpr 0x563f2eaee2a0 <col:29> 'Args *' this
|     | |-DeclRefExpr 0x563f2eaee2b0 <col:35> 'const char *' lvalue ParmVar 0x563f2eac2840 'keyword' 'const char *'
|     | |-DeclRefExpr 0x563f2eaee2d0 <col:44> 'int' lvalue ParmVar 0x563f2eac28c0 'flags' 'int'
|     | `-DeclRefExpr 0x563f2eaee2f0 <col:51> 'P' lvalue ParmVar 0x563f2eac2938 'parser' 'P'
|     `-ReturnStmt 0x563f2eaee378 <line:525:9, col:17>
|       `-UnaryOperator 0x563f2eaee360 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x563f2eaee350 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x563f2eac2f48 <line:538:5, line:541:5> line:539:11 read_with
| |-TemplateTypeParmDecl 0x563f2eac2b68 <line:538:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x563f2eac2be8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x563f2eac2ea8 <line:539:5, line:541:5> line:539:11 read_with 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x563f2eac2ca8 <col:21, col:33> col:33 referenced keyword 'const char *'
|   |-ParmVarDecl 0x563f2eac2d20 <col:42, col:44> col:44 referenced parser 'P'
|   |-ParmVarDecl 0x563f2eac2dc8 <col:52, col:55> col:55 referenced x 'T &'
|   `-CompoundStmt 0x563f2eaee4e0 <col:58, line:541:5>
|     `-ReturnStmt 0x563f2eaee4d0 <line:540:9, col:39>
|       `-CallExpr 0x563f2eaee498 <col:16, col:39> '<dependent type>'
|         |-UnresolvedMemberExpr 0x563f2eaee3b8 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x563f2eaee438 <col:21> 'const char *' lvalue ParmVar 0x563f2eac2ca8 'keyword' 'const char *'
|         |-DeclRefExpr 0x563f2eaee458 <col:30> 'P' lvalue ParmVar 0x563f2eac2d20 'parser' 'P'
|         `-DeclRefExpr 0x563f2eaee478 <col:38> 'T' lvalue ParmVar 0x563f2eac2dc8 'x' 'T &'
|-FunctionTemplateDecl 0x563f2eac3398 <line:542:5, line:545:5> line:543:11 read_m_with
| |-TemplateTypeParmDecl 0x563f2eac2fb8 <line:542:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x563f2eac3038 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x563f2eac32f8 <line:543:5, line:545:5> line:543:11 read_m_with 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x563f2eac30f8 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x563f2eac3170 <col:44, col:46> col:46 referenced parser 'P'
|   |-ParmVarDecl 0x563f2eac3218 <col:54, col:57> col:57 referenced x 'T &'
|   `-CompoundStmt 0x563f2eaee618 <col:60, line:545:5>
|     `-ReturnStmt 0x563f2eaee608 <line:544:9, col:41>
|       `-CallExpr 0x563f2eaee5d0 <col:16, col:41> '<dependent type>'
|         |-UnresolvedMemberExpr 0x563f2eaee508 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x563f2eaee570 <col:23> 'const char *' lvalue ParmVar 0x563f2eac30f8 'keyword' 'const char *'
|         |-DeclRefExpr 0x563f2eaee590 <col:32> 'P' lvalue ParmVar 0x563f2eac3170 'parser' 'P'
|         `-DeclRefExpr 0x563f2eaee5b0 <col:40> 'T' lvalue ParmVar 0x563f2eac3218 'x' 'T &'
|-FunctionTemplateDecl 0x563f2eac37e8 <line:546:5, line:549:5> line:547:11 read_p_with
| |-TemplateTypeParmDecl 0x563f2eac3408 <line:546:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x563f2eac3488 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x563f2eac3748 <line:547:5, line:549:5> line:547:11 read_p_with 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x563f2eac3548 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x563f2eac35c0 <col:44, col:46> col:46 referenced parser 'P'
|   |-ParmVarDecl 0x563f2eac3668 <col:54, col:57> col:57 referenced x 'T &'
|   `-CompoundStmt 0x563f2eaee750 <col:60, line:549:5>
|     `-ReturnStmt 0x563f2eaee740 <line:548:9, col:41>
|       `-CallExpr 0x563f2eaee708 <col:16, col:41> '<dependent type>'
|         |-UnresolvedMemberExpr 0x563f2eaee640 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x563f2eaee6a8 <col:23> 'const char *' lvalue ParmVar 0x563f2eac3548 'keyword' 'const char *'
|         |-DeclRefExpr 0x563f2eaee6c8 <col:32> 'P' lvalue ParmVar 0x563f2eac35c0 'parser' 'P'
|         `-DeclRefExpr 0x563f2eaee6e8 <col:40> 'T' lvalue ParmVar 0x563f2eac3668 'x' 'T &'
|-FunctionTemplateDecl 0x563f2eac3c38 <line:550:5, line:553:5> line:551:11 read_mp_with
| |-TemplateTypeParmDecl 0x563f2eac3858 <line:550:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x563f2eac38d8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x563f2eac3b98 <line:551:5, line:553:5> line:551:11 read_mp_with 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x563f2eac3998 <col:24, col:36> col:36 referenced keyword 'const char *'
|   |-ParmVarDecl 0x563f2eac3a10 <col:45, col:47> col:47 referenced parser 'P'
|   |-ParmVarDecl 0x563f2eac3ab8 <col:55, col:58> col:58 referenced x 'T &'
|   `-CompoundStmt 0x563f2eaf0618 <col:61, line:553:5>
|     `-ReturnStmt 0x563f2eaf0608 <line:552:9, col:42>
|       `-CallExpr 0x563f2eaf05d0 <col:16, col:42> '<dependent type>'
|         |-UnresolvedMemberExpr 0x563f2eaee778 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x563f2eaee7e0 <col:24> 'const char *' lvalue ParmVar 0x563f2eac3998 'keyword' 'const char *'
|         |-DeclRefExpr 0x563f2eaf0590 <col:33> 'P' lvalue ParmVar 0x563f2eac3a10 'parser' 'P'
|         `-DeclRefExpr 0x563f2eaf05b0 <col:41> 'T' lvalue ParmVar 0x563f2eac3ab8 'x' 'T &'
|-FunctionTemplateDecl 0x563f2eac4118 <line:554:5, line:557:5> line:555:11 read_with
| |-TemplateTypeParmDecl 0x563f2eac3ca8 <line:554:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x563f2eac3d28 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x563f2eac4078 <line:555:5, line:557:5> line:555:11 read_with 'Args &(const char *, int, P, T &)'
|   |-ParmVarDecl 0x563f2eac3de8 <col:21, col:33> col:33 referenced keyword 'const char *'
|   |-ParmVarDecl 0x563f2eac3e68 <col:42, col:46> col:46 referenced flags 'int'
|   |-ParmVarDecl 0x563f2eac3ee0 <col:53, col:55> col:55 referenced parser 'P'
|   |-ParmVarDecl 0x563f2eac3f88 <col:63, col:66> col:66 referenced x 'T &'
|   `-CompoundStmt 0x563f2eaf0790 <col:69, line:557:5>
|     `-ReturnStmt 0x563f2eaf0780 <line:556:9, col:46>
|       `-CallExpr 0x563f2eaf0740 <col:16, col:46> '<dependent type>'
|         |-UnresolvedMemberExpr 0x563f2eaf0640 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x563f2eaf06c0 <col:21> 'const char *' lvalue ParmVar 0x563f2eac3de8 'keyword' 'const char *'
|         |-DeclRefExpr 0x563f2eaf06e0 <col:30> 'int' lvalue ParmVar 0x563f2eac3e68 'flags' 'int'
|         |-DeclRefExpr 0x563f2eaf0700 <col:37> 'P' lvalue ParmVar 0x563f2eac3ee0 'parser' 'P'
|         `-DeclRefExpr 0x563f2eaf0720 <col:45> 'T' lvalue ParmVar 0x563f2eac3f88 'x' 'T &'
|-FunctionTemplateDecl 0x563f2eac9018 <line:568:5, line:571:5> line:569:11 read_all_with
| |-TemplateTypeParmDecl 0x563f2eac4190 <line:568:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x563f2eac8f78 <line:569:5, line:571:5> line:569:11 read_all_with 'Args &(const char *, P)'
|   |-ParmVarDecl 0x563f2eac8e30 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x563f2eac8ea8 <col:46, col:48> col:48 referenced parser 'P'
|   `-CompoundStmt 0x563f2eaf08d0 <col:56, line:571:5>
|     `-ReturnStmt 0x563f2eaf08c0 <line:570:9, col:48>
|       `-CallExpr 0x563f2eaf0888 <col:16, col:48> '<dependent type>'
|         |-UnresolvedMemberExpr 0x563f2eaf07b8 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x563f2eaf0828 <col:30> 'const char *' lvalue ParmVar 0x563f2eac8e30 'keyword' 'const char *'
|         |-IntegerLiteral 0x563f2eaf0848 <col:39> 'int' 0
|         `-DeclRefExpr 0x563f2eaf0868 <col:42> 'P' lvalue ParmVar 0x563f2eac8ea8 'parser' 'P'
|-FunctionTemplateDecl 0x563f2eac93a8 <line:572:5, line:576:5> line:573:11 read_all_with
| |-TemplateTypeParmDecl 0x563f2eac9080 <line:572:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x563f2eac9308 <line:573:5, line:576:5> line:573:11 read_all_with 'Args &(const char *, int, P)'
|   |-ParmVarDecl 0x563f2eac9130 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x563f2eac91b0 <col:46, col:50> col:50 referenced flags 'int'
|   |-ParmVarDecl 0x563f2eac9228 <col:57, col:59> col:59 referenced parser 'P'
|   `-CompoundStmt 0x563f2eaf0aa0 <col:67, line:576:5>
|     |-CallExpr 0x563f2eaf0a28 <line:574:9, col:74> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x563f2eaf08e8 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read_all_with' empty
|     | |-CXXThisExpr 0x563f2eaf0928 <col:33> 'Args *' this
|     | |-DeclRefExpr 0x563f2eaf0938 <col:39> 'const char *' lvalue ParmVar 0x563f2eac9130 'keyword' 'const char *'
|     | |-BinaryOperator 0x563f2eaf09e8 <col:48, col:56> 'int' '|'
|     | | |-ImplicitCastExpr 0x563f2eaf0998 <col:48> 'int' <LValueToRValue>
|     | | | `-DeclRefExpr 0x563f2eaf0958 <col:48> 'int' lvalue ParmVar 0x563f2eac91b0 'flags' 'int'
|     | | `-ImplicitCastExpr 0x563f2eaf09d0 <col:56> 'int' <LValueToRValue>
|     | |   `-DeclRefExpr 0x563f2eaf09b0 <col:56> 'const int' lvalue Var 0x563f2eab7fb0 'firstmatch' 'const int' non_odr_use_constant
|     | `-DeclRefExpr 0x563f2eaf0a08 <col:68> 'P' lvalue ParmVar 0x563f2eac9228 'parser' 'P'
|     `-ReturnStmt 0x563f2eaf0a90 <line:575:9, col:17>
|       `-UnaryOperator 0x563f2eaf0a78 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x563f2eaf0a68 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x563f2eac97f8 <line:589:5, line:592:5> line:590:11 read_all_with
| |-TemplateTypeParmDecl 0x563f2eac9418 <line:589:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x563f2eac9498 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x563f2eac9758 <line:590:5, line:592:5> line:590:11 read_all_with 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x563f2eac9558 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x563f2eac95d0 <col:46, col:48> col:48 referenced parser 'P'
|   |-ParmVarDecl 0x563f2eac9678 <col:56, col:59> col:59 referenced x 'T &'
|   `-CompoundStmt 0x563f2eaf0c10 <col:62, line:592:5>
|     `-ReturnStmt 0x563f2eaf0c00 <line:591:9, col:51>
|       `-CallExpr 0x563f2eaf0bc0 <col:16, col:51> '<dependent type>'
|         |-UnresolvedMemberExpr 0x563f2eaf0ad0 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x563f2eaf0b40 <col:30> 'const char *' lvalue ParmVar 0x563f2eac9558 'keyword' 'const char *'
|         |-IntegerLiteral 0x563f2eaf0b60 <col:39> 'int' 0
|         |-DeclRefExpr 0x563f2eaf0b80 <col:42> 'P' lvalue ParmVar 0x563f2eac95d0 'parser' 'P'
|         `-DeclRefExpr 0x563f2eaf0ba0 <col:50> 'T' lvalue ParmVar 0x563f2eac9678 'x' 'T &'
|-FunctionTemplateDecl 0x563f2eac9cd8 <line:593:5, line:597:5> line:594:11 read_all_with
| |-TemplateTypeParmDecl 0x563f2eac9868 <line:593:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x563f2eac98e8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x563f2eac9c38 <line:594:5, line:597:5> line:594:11 read_all_with 'Args &(const char *, int, P, T &)'
|   |-ParmVarDecl 0x563f2eac99a8 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x563f2eac9a28 <col:46, col:50> col:50 referenced flags 'int'
|   |-ParmVarDecl 0x563f2eac9aa0 <col:57, col:59> col:59 referenced parser 'P'
|   |-ParmVarDecl 0x563f2eac9b48 <col:67, col:70> col:70 referenced x 'T &'
|   `-CompoundStmt 0x563f2eaf0e08 <col:73, line:597:5>
|     |-CallExpr 0x563f2eaf0d88 <line:595:9, col:77> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x563f2eaf0c28 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read_all_with' empty
|     | |-CXXThisExpr 0x563f2eaf0c68 <col:33> 'Args *' this
|     | |-DeclRefExpr 0x563f2eaf0c78 <col:39> 'const char *' lvalue ParmVar 0x563f2eac99a8 'keyword' 'const char *'
|     | |-BinaryOperator 0x563f2eaf0d28 <col:48, col:56> 'int' '|'
|     | | |-ImplicitCastExpr 0x563f2eaf0cd8 <col:48> 'int' <LValueToRValue>
|     | | | `-DeclRefExpr 0x563f2eaf0c98 <col:48> 'int' lvalue ParmVar 0x563f2eac9a28 'flags' 'int'
|     | | `-ImplicitCastExpr 0x563f2eaf0d10 <col:56> 'int' <LValueToRValue>
|     | |   `-DeclRefExpr 0x563f2eaf0cf0 <col:56> 'const int' lvalue Var 0x563f2eab7fb0 'firstmatch' 'const int' non_odr_use_constant
|     | |-DeclRefExpr 0x563f2eaf0d48 <col:68> 'P' lvalue ParmVar 0x563f2eac9aa0 'parser' 'P'
|     | `-DeclRefExpr 0x563f2eaf0d68 <col:76> 'T' lvalue ParmVar 0x563f2eac9b48 'x' 'T &'
|     `-ReturnStmt 0x563f2eaf0df8 <line:596:9, col:17>
|       `-UnaryOperator 0x563f2eaf0de0 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x563f2eaf0dd0 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x563f2eaca288 <line:611:5, line:614:5> line:612:11 read_all
| |-TemplateTypeParmDecl 0x563f2eac9d50 <line:611:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x563f2eac9dc8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x563f2eaca1e8 <line:612:5, line:614:5> line:612:11 read_all 'Args &(const char *, P, Vector<T> &)'
|   |-ParmVarDecl 0x563f2eac9e88 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x563f2eac9f00 <col:41, col:43> col:43 referenced parser 'P'
|   |-ParmVarDecl 0x563f2eaca0c0 <col:51, col:62> col:62 referenced x 'Vector<T> &'
|   `-CompoundStmt 0x563f2eaf0f78 <col:65, line:614:5>
|     `-ReturnStmt 0x563f2eaf0f68 <line:613:9, col:46>
|       `-CallExpr 0x563f2eaf0f28 <col:16, col:46> '<dependent type>'
|         |-UnresolvedMemberExpr 0x563f2eaf0e38 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x563f2eaf0ea8 <col:25> 'const char *' lvalue ParmVar 0x563f2eac9e88 'keyword' 'const char *'
|         |-IntegerLiteral 0x563f2eaf0ec8 <col:34> 'int' 0
|         |-DeclRefExpr 0x563f2eaf0ee8 <col:37> 'P' lvalue ParmVar 0x563f2eac9f00 'parser' 'P'
|         `-DeclRefExpr 0x563f2eaf0f08 <col:45> 'Vector<T>' lvalue ParmVar 0x563f2eaca0c0 'x' 'Vector<T> &'
|-FunctionTemplateDecl 0x563f2eaca6b8 <line:615:5, line:618:5> line:616:11 read_all
| |-TemplateTypeParmDecl 0x563f2eaca2f8 <line:615:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x563f2eaca618 <line:616:5, line:618:5> line:616:11 read_all 'Args &(const char *, Vector<T> &)'
|   |-ParmVarDecl 0x563f2eaca3b0 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x563f2eaca500 <col:41, col:52> col:52 referenced x 'Vector<T> &'
|   `-CompoundStmt 0x563f2eaf1190 <col:55, line:618:5>
|     `-ReturnStmt 0x563f2eaf1180 <line:617:9, col:55>
|       `-CallExpr 0x563f2eaf1140 <col:16, col:55> '<dependent type>'
|         |-UnresolvedMemberExpr 0x563f2eaf0fa0 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x563f2eaf1010 <col:25> 'const char *' lvalue ParmVar 0x563f2eaca3b0 'keyword' 'const char *'
|         |-IntegerLiteral 0x563f2eaf1030 <col:34> 'int' 0
|         |-CXXUnresolvedConstructExpr 0x563f2eaf1100 <col:37, col:51> 'DefaultArg<T>' 'DefaultArg<T>'
|         `-DeclRefExpr 0x563f2eaf1120 <col:54> 'Vector<T>' lvalue ParmVar 0x563f2eaca500 'x' 'Vector<T> &'
|-FunctionTemplateDecl 0x563f2eacac88 <line:619:5, line:623:5> line:620:11 read_all
| |-TemplateTypeParmDecl 0x563f2eaca720 <line:619:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x563f2eaca798 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x563f2eacabe8 <line:620:5, line:623:5> line:620:11 read_all 'Args &(const char *, int, P, Vector<T> &)'
|   |-ParmVarDecl 0x563f2eaca858 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x563f2eaca8d8 <col:41, col:45> col:45 referenced flags 'int'
|   |-ParmVarDecl 0x563f2eaca950 <col:52, col:54> col:54 referenced parser 'P'
|   |-ParmVarDecl 0x563f2eacaaa0 <col:62, col:73> col:73 referenced x 'Vector<T> &'
|   `-CompoundStmt 0x563f2eaf1388 <col:76, line:623:5>
|     |-CallExpr 0x563f2eaf1308 <line:621:9, col:72> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x563f2eaf11a8 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read_all' empty
|     | |-CXXThisExpr 0x563f2eaf11e8 <col:28> 'Args *' this
|     | |-DeclRefExpr 0x563f2eaf11f8 <col:34> 'const char *' lvalue ParmVar 0x563f2eaca858 'keyword' 'const char *'
|     | |-BinaryOperator 0x563f2eaf12a8 <col:43, col:51> 'int' '|'
|     | | |-ImplicitCastExpr 0x563f2eaf1258 <col:43> 'int' <LValueToRValue>
|     | | | `-DeclRefExpr 0x563f2eaf1218 <col:43> 'int' lvalue ParmVar 0x563f2eaca8d8 'flags' 'int'
|     | | `-ImplicitCastExpr 0x563f2eaf1290 <col:51> 'int' <LValueToRValue>
|     | |   `-DeclRefExpr 0x563f2eaf1270 <col:51> 'const int' lvalue Var 0x563f2eab7fb0 'firstmatch' 'const int' non_odr_use_constant
|     | |-DeclRefExpr 0x563f2eaf12c8 <col:63> 'P' lvalue ParmVar 0x563f2eaca950 'parser' 'P'
|     | `-DeclRefExpr 0x563f2eaf12e8 <col:71> 'Vector<T>' lvalue ParmVar 0x563f2eacaaa0 'x' 'Vector<T> &'
|     `-ReturnStmt 0x563f2eaf1378 <line:622:9, col:17>
|       `-UnaryOperator 0x563f2eaf1360 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x563f2eaf1350 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x563f2eacb1c8 <line:624:5, line:627:5> line:625:11 read_all
| |-TemplateTypeParmDecl 0x563f2eacad00 <line:624:15, col:24> col:24 typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x563f2eacad78 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x563f2eacb128 <line:625:5, line:627:5> line:625:11 read_all 'Args &(const char *, int, Vector<T> &)'
|   |-ParmVarDecl 0x563f2eacae38 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x563f2eacaeb8 <col:41, col:45> col:45 referenced flags 'int'
|   |-ParmVarDecl 0x563f2eacb000 <col:52, col:63> col:63 referenced x 'Vector<T> &'
|   `-CompoundStmt 0x563f2eaf15f0 <col:66, line:627:5>
|     `-ReturnStmt 0x563f2eaf15e0 <line:626:9, col:59>
|       `-CallExpr 0x563f2eaf15a0 <col:16, col:59> '<dependent type>'
|         |-UnresolvedMemberExpr 0x563f2eaf13b8 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x563f2eaf1428 <col:25> 'const char *' lvalue ParmVar 0x563f2eacae38 'keyword' 'const char *'
|         |-DeclRefExpr 0x563f2eaf1448 <col:34> 'int' lvalue ParmVar 0x563f2eacaeb8 'flags' 'int'
|         |-CXXUnresolvedConstructExpr 0x563f2eaf1560 <col:41, col:55> 'DefaultArg<T>' 'DefaultArg<T>'
|         `-DeclRefExpr 0x563f2eaf1580 <col:58> 'Vector<T>' lvalue ParmVar 0x563f2eacb000 'x' 'Vector<T> &'
|-CXXMethodDecl 0x563f2eacb258 <line:631:5, line:633:5> line:631:10 status 'bool () const'
| `-CompoundStmt 0x563f2eaf1670 <col:25, line:633:5>
|   `-ReturnStmt 0x563f2eaf1660 <line:632:9, col:16>
|     `-ImplicitCastExpr 0x563f2eaf1648 <col:16> 'bool' <LValueToRValue>
|       `-MemberExpr 0x563f2eaf1618 <col:16> 'const bool' lvalue ->_status 0x563f2eadcbb8
|         `-CXXThisExpr 0x563f2eaf1608 <col:16> 'const Args *' implicit this
|-CXXMethodDecl 0x563f2eacb3d8 <line:636:5, line:639:5> line:636:11 status 'Args &(bool &)'
| |-ParmVarDecl 0x563f2eacb310 <col:18, col:24> col:24 used x 'bool &'
| `-CompoundStmt 0x563f2eaf1758 <col:27, line:639:5>
|   |-BinaryOperator 0x563f2eaf1700 <line:637:9, col:13> 'bool' lvalue '='
|   | |-DeclRefExpr 0x563f2eaf1688 <col:9> 'bool' lvalue ParmVar 0x563f2eacb310 'x' 'bool &'
|   | `-ImplicitCastExpr 0x563f2eaf16e8 <col:13> 'bool' <LValueToRValue>
|   |   `-MemberExpr 0x563f2eaf16b8 <col:13> 'bool' lvalue ->_status 0x563f2eadcbb8
|   |     `-CXXThisExpr 0x563f2eaf16a8 <col:13> 'Args *' implicit this
|   `-ReturnStmt 0x563f2eaf1748 <line:638:9, col:17>
|     `-UnaryOperator 0x563f2eaf1730 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x563f2eaf1720 <col:17> 'Args *' this
|-CXXMethodDecl 0x563f2eacb558 <line:641:5, line:644:5> line:641:17 status 'const Args &(bool &) const'
| |-ParmVarDecl 0x563f2eacb498 <col:24, col:30> col:30 used x 'bool &'
| `-CompoundStmt 0x563f2eaf1848 <col:39, line:644:5>
|   |-BinaryOperator 0x563f2eaf17f0 <line:642:9, col:13> 'bool' lvalue '='
|   | |-DeclRefExpr 0x563f2eaf1778 <col:9> 'bool' lvalue ParmVar 0x563f2eacb498 'x' 'bool &'
|   | `-ImplicitCastExpr 0x563f2eaf17d8 <col:13> 'bool' <LValueToRValue>
|   |   `-MemberExpr 0x563f2eaf17a8 <col:13> 'const bool' lvalue ->_status 0x563f2eadcbb8
|   |     `-CXXThisExpr 0x563f2eaf1798 <col:13> 'const Args *' implicit this
|   `-ReturnStmt 0x563f2eaf1838 <line:643:9, col:17>
|     `-UnaryOperator 0x563f2eaf1820 <col:16, col:17> 'const Args' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x563f2eaf1810 <col:17> 'const Args *' this
|-CXXMethodDecl 0x563f2eacb620 <line:649:5, line:651:5> line:649:10 read_status 'bool () const'
| `-CompoundStmt 0x563f2eaf18f0 <col:30, line:651:5>
|   `-ReturnStmt 0x563f2eaf18e0 <line:650:9, col:16>
|     `-ImplicitCastExpr 0x563f2eaf18c8 <col:16> 'bool' <LValueToRValue>
|       `-MemberExpr 0x563f2eaf1898 <col:16> 'bool' lvalue ->_read_status 0x563f2eaae3d0
|         `-ImplicitCastExpr 0x563f2eaf1878 <col:16> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|           `-CXXThisExpr 0x563f2eaf1868 <col:16> 'const Args *' implicit this
|-CXXMethodDecl 0x563f2eacb768 <line:655:5, line:658:5> line:655:11 read_status 'Args &(bool &)'
| |-ParmVarDecl 0x563f2eacb6d8 <col:23, col:29> col:29 used x 'bool &'
| `-CompoundStmt 0x563f2eaf19f8 <col:32, line:658:5>
|   |-BinaryOperator 0x563f2eaf19a0 <line:656:9, col:13> 'bool' lvalue '='
|   | |-DeclRefExpr 0x563f2eaf1908 <col:9> 'bool' lvalue ParmVar 0x563f2eacb6d8 'x' 'bool &'
|   | `-ImplicitCastExpr 0x563f2eaf1988 <col:13> 'bool' <LValueToRValue>
|   |   `-MemberExpr 0x563f2eaf1958 <col:13> 'bool' lvalue ->_read_status 0x563f2eaae3d0
|   |     `-ImplicitCastExpr 0x563f2eaf1938 <col:13> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|   |       `-CXXThisExpr 0x563f2eaf1928 <col:13> 'Args *' implicit this
|   `-ReturnStmt 0x563f2eaf19e8 <line:657:9, col:17>
|     `-UnaryOperator 0x563f2eaf19d0 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x563f2eaf19c0 <col:17> 'Args *' this
|-CXXMethodDecl 0x563f2eacb8b8 <line:660:5, line:663:5> line:660:17 read_status 'const Args &(bool &) const'
| |-ParmVarDecl 0x563f2eacb828 <col:29, col:35> col:35 used x 'bool &'
| `-CompoundStmt 0x563f2eaf1b08 <col:44, line:663:5>
|   |-BinaryOperator 0x563f2eaf1ab0 <line:661:9, col:13> 'bool' lvalue '='
|   | |-DeclRefExpr 0x563f2eaf1a18 <col:9> 'bool' lvalue ParmVar 0x563f2eacb828 'x' 'bool &'
|   | `-ImplicitCastExpr 0x563f2eaf1a98 <col:13> 'bool' <LValueToRValue>
|   |   `-MemberExpr 0x563f2eaf1a68 <col:13> 'bool' lvalue ->_read_status 0x563f2eaae3d0
|   |     `-ImplicitCastExpr 0x563f2eaf1a48 <col:13> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|   |       `-CXXThisExpr 0x563f2eaf1a38 <col:13> 'const Args *' implicit this
|   `-ReturnStmt 0x563f2eaf1af8 <line:662:9, col:17>
|     `-UnaryOperator 0x563f2eaf1ae0 <col:16, col:17> 'const Args' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x563f2eaf1ad0 <col:17> 'const Args *' this
|-CXXMethodDecl 0x563f2eacb980 <line:667:5, col:17> col:11 strip 'Args &()'
|-CXXMethodDecl 0x563f2eacba48 <line:675:5, col:17> col:9 execute 'int ()'
|-CXXMethodDecl 0x563f2eacbb10 <line:684:5, col:17> col:9 consume 'int ()'
|-CXXMethodDecl 0x563f2eacbbd8 <line:693:5, col:18> col:9 used complete 'int ()'
|-FunctionTemplateDecl 0x563f2eacbee8 <line:700:5, line:706:5> line:701:8 slot
| |-TemplateTypeParmDecl 0x563f2eacbc78 <line:700:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x563f2eacbe48 <line:701:5, line:706:5> line:701:8 slot 'T *(T &)'
|   |-ParmVarDecl 0x563f2eacbd58 <col:13, col:16> col:16 referenced x 'T &'
|   `-CompoundStmt 0x563f2eaf1ec0 <col:19, line:706:5>
|     `-IfStmt 0x563f2eaf1e98 <line:702:9, line:705:34> has_else
|       |-CXXDependentScopeMemberExpr 0x563f2eaf1c08 <line:702:13, col:34> '<dependent type>' lvalue ->value
|       |-ReturnStmt 0x563f2eaf1dc8 <line:703:13, col:68>
|       | `-CXXReinterpretCastExpr 0x563f2eaf1d98 <col:20, col:68> 'T *' reinterpret_cast<T *> <Dependent>
|       |   `-CallExpr 0x563f2eaf1d58 <col:42, col:67> '<dependent type>'
|       |     |-MemberExpr 0x563f2eaf1c60 <col:42> '<bound member function type>' ->simple_slot 0x563f2eaeabc0
|       |     | `-CXXThisExpr 0x563f2eaf1c50 <col:42> 'Args *' implicit this
|       |     |-CXXOperatorCallExpr 0x563f2eaf1cf8 <col:54, col:55> '<dependent type>'
|       |     | |-UnresolvedLookupExpr 0x563f2eaf1cb0 <col:54> '<overloaded function type>' lvalue (ADL) = 'operator&' 0x563f2e822d78
|       |     | `-DeclRefExpr 0x563f2eaf1c90 <col:55> 'T' lvalue ParmVar 0x563f2eacbd58 'x' 'T &'
|       |     `-UnaryExprOrTypeTraitExpr 0x563f2eaf1d38 <col:58, col:66> 'unsigned long' sizeof 'T'
|       `-ReturnStmt 0x563f2eaf1e88 <line:705:13, col:34>
|         `-CallExpr 0x563f2eaf1e60 <col:20, col:34> '<dependent type>'
|           |-UnresolvedMemberExpr 0x563f2eaf1de8 <col:20> '<bound member function type>' lvalue
|           `-DeclRefExpr 0x563f2eaf1e40 <col:33> 'T' lvalue ParmVar 0x563f2eacbd58 'x' 'T &'
|-FunctionTemplateDecl 0x563f2eacc1b8 <line:711:5, line:717:5> line:712:8 initialized_slot
| |-TemplateTypeParmDecl 0x563f2eacbf48 <line:711:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x563f2eacc118 <line:712:5, line:717:5> line:712:8 initialized_slot 'T *(T &)'
|   |-ParmVarDecl 0x563f2eacc028 <col:25, col:28> col:28 referenced x 'T &'
|   `-CompoundStmt 0x563f2eaf22a0 <col:31, line:717:5>
|     |-DeclStmt 0x563f2eaf2000 <line:713:9, col:23>
|     | `-VarDecl 0x563f2eaf1ee8 <col:9, col:22> col:12 referenced s 'T *' nrvo cinit
|     |   `-CallExpr 0x563f2eaf1fd8 <col:16, col:22> '<dependent type>'
|     |     |-UnresolvedMemberExpr 0x563f2eaf1f60 <col:16> '<bound member function type>' lvalue
|     |     `-DeclRefExpr 0x563f2eaf1fb8 <col:21> 'T' lvalue ParmVar 0x563f2eacc028 'x' 'T &'
|     |-IfStmt 0x563f2eaf2250 <line:714:9, line:715:20>
|     | |-CXXDependentScopeMemberExpr 0x563f2eaf20f8 <line:714:13, col:34> '<dependent type>' lvalue ->value
|     | `-BinaryOperator 0x563f2eaf2230 <line:715:13, col:20> '<dependent type>' '='
|     |   |-CXXOperatorCallExpr 0x563f2eaf21d0 <col:13, col:14> '<dependent type>'
|     |   | |-UnresolvedLookupExpr 0x563f2eaf2160 <col:13> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x563f2e9d9e78 0x563f2e9d9a98 0x563f2e9d96c8 0x563f2e9d92e8 0x563f2e9d8f08 0x563f2e9d8b38
|     |   | `-DeclRefExpr 0x563f2eaf2140 <col:14> 'T *' lvalue Var 0x563f2eaf1ee8 's' 'T *'
|     |   `-CXXUnresolvedConstructExpr 0x563f2eaf2210 <col:18, col:20> 'T' 'T'
|     `-ReturnStmt 0x563f2eaf2288 <line:716:9, col:16>
|       `-DeclRefExpr 0x563f2eaf2268 <col:16> 'T *' lvalue Var 0x563f2eaf1ee8 's' 'T *'
|-FunctionTemplateDecl 0x563f2eacc5c8 <line:721:5, line:726:5> line:722:11 set
| |-TemplateTypeParmDecl 0x563f2eacc218 <line:721:15, col:24> col:24 referenced typename depth 0 index 0 T
| |-TemplateTypeParmDecl 0x563f2eacc298 <col:27, col:36> col:36 referenced typename depth 0 index 1 V
| `-CXXMethodDecl 0x563f2eacc528 <line:722:5, line:726:5> line:722:11 set 'Args &(T &, const V &)'
|   |-ParmVarDecl 0x563f2eacc378 <col:15, col:18> col:18 referenced x 'T &'
|   |-ParmVarDecl 0x563f2eacc418 <col:21, col:30> col:30 referenced value 'const V &'
|   `-CompoundStmt 0x563f2eaf25b0 <col:37, line:726:5>
|     |-IfStmt 0x563f2eaf2540 <line:723:9, line:724:18> has_var
|     | |-DeclStmt 0x563f2eaf2560 <line:723:13, col:26>
|     | | `-VarDecl 0x563f2eaf2308 <col:13, col:26> col:16 referenced s 'T *' cinit
|     | |   `-CallExpr 0x563f2eaf23f8 <col:20, col:26> '<dependent type>'
|     | |     |-UnresolvedMemberExpr 0x563f2eaf2380 <col:20> '<bound member function type>' lvalue
|     | |     `-DeclRefExpr 0x563f2eaf23d8 <col:25> 'T' lvalue ParmVar 0x563f2eacc378 'x' 'T &'
|     | |-DeclRefExpr 0x563f2eaf2420 <col:16> 'T *' lvalue Var 0x563f2eaf2308 's' 'T *'
|     | `-BinaryOperator 0x563f2eaf2520 <line:724:13, col:18> '<dependent type>' '='
|     |   |-CXXOperatorCallExpr 0x563f2eaf24d0 <col:13, col:14> '<dependent type>'
|     |   | |-UnresolvedLookupExpr 0x563f2eaf2460 <col:13> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x563f2e9d9e78 0x563f2e9d9a98 0x563f2e9d96c8 0x563f2e9d92e8 0x563f2e9d8f08 0x563f2e9d8b38
|     |   | `-DeclRefExpr 0x563f2eaf2440 <col:14> 'T *' lvalue Var 0x563f2eaf2308 's' 'T *'
|     |   `-DeclRefExpr 0x563f2eaf2500 <col:18> 'const V' lvalue ParmVar 0x563f2eacc418 'value' 'const V &'
|     `-ReturnStmt 0x563f2eaf25a0 <line:725:9, col:17>
|       `-UnaryOperator 0x563f2eaf2588 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x563f2eaf2578 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x563f2eacc9c8 <line:730:5, line:737:5> line:731:10 base_read
| |-TemplateTypeParmDecl 0x563f2eacc630 <line:730:14, col:23> col:23 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x563f2eacc928 <line:731:5, line:737:5> line:731:10 base_read 'void (const char *, int, T &)'
|   |-ParmVarDecl 0x563f2eacc6e0 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x563f2eacc760 <col:41, col:45> col:45 referenced flags 'int'
|   |-ParmVarDecl 0x563f2eacc808 <col:52, col:55> col:55 referenced variable 'T &'
|   `-CompoundStmt 0x563f2eaf33d0 <col:65, line:737:5>
|     |-DeclStmt 0x563f2eaf2648 <line:732:9, col:26>
|     | `-VarDecl 0x563f2eaf25e0 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     `-IfStmt 0x563f2eaf3398 <line:733:9, line:736:9> has_var
|       |-DeclStmt 0x563f2eaf33b8 <line:733:13, col:58>
|       | `-VarDecl 0x563f2eaf2670 <col:13, col:58> col:20 referenced str 'String' cinit destroyed
|       |   `-ExprWithCleanups 0x563f2eaf2850 <col:26, col:58> 'String'
|       |     `-CXXConstructExpr 0x563f2eaf2820 <col:26, col:58> 'String' 'void (String &&)' elidable
|       |       `-MaterializeTemporaryExpr 0x563f2eaf2808 <col:26, col:58> 'String' xvalue
|       |         `-CXXBindTemporaryExpr 0x563f2eaf27e8 <col:26, col:58> 'String' (CXXTemporary 0x563f2eaf27e8)
|       |           `-CXXMemberCallExpr 0x563f2eaf2778 <col:26, col:58> 'String'
|       |             |-MemberExpr 0x563f2eaf26e8 <col:26> '<bound member function type>' ->find 0x563f2eaea1d8
|       |             | `-CXXThisExpr 0x563f2eaf26d8 <col:26> 'Args *' implicit this
|       |             |-ImplicitCastExpr 0x563f2eaf27b0 <col:31> 'const char *' <LValueToRValue>
|       |             | `-DeclRefExpr 0x563f2eaf2718 <col:31> 'const char *' lvalue ParmVar 0x563f2eacc6e0 'keyword' 'const char *'
|       |             |-ImplicitCastExpr 0x563f2eaf27c8 <col:40> 'int' <LValueToRValue>
|       |             | `-DeclRefExpr 0x563f2eaf2738 <col:40> 'int' lvalue ParmVar 0x563f2eacc760 'flags' 'int'
|       |             `-DeclRefExpr 0x563f2eaf2758 <col:47> 'Args::Slot *' lvalue Var 0x563f2eaf25e0 'slot_status' 'Args::Slot *'
|       |-ImplicitCastExpr 0x563f2eaf2908 <col:20> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x563f2eaf28f0 <col:20> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x563f2eaf28d0 <col:20> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x563f2eaf28a0 <col:20> '<bound member function type>' .operator int (String::*)() const 0x563f2e7e4d38
|       |       `-ImplicitCastExpr 0x563f2eaf2888 <col:20> 'const String' lvalue <NoOp>
|       |         `-DeclRefExpr 0x563f2eaf2868 <col:20> 'String' lvalue Var 0x563f2eaf2670 'str' 'String'
|       `-CompoundStmt 0x563f2eaf3378 <col:61, line:736:9>
|         |-DeclStmt 0x563f2eaf2dc0 <line:734:13, col:76>
|         | `-VarDecl 0x563f2eaf2958 <col:13, col:75> col:16 referenced s 'T *' cinit
|         |   `-CallExpr 0x563f2eaf2d90 <col:20, col:75> '<dependent type>'
|         |     |-CXXDependentScopeMemberExpr 0x563f2eaf2d00 <col:20, col:55> '<dependent type>' lvalue ->slot
|         |     |-DeclRefExpr 0x563f2eaf2d48 <col:60> 'T' lvalue ParmVar 0x563f2eacc808 'variable' 'T &'
|         |     `-UnaryOperator 0x563f2eaf2d78 <col:70, col:71> 'Args' lvalue prefix '*' cannot overflow
|         |       `-CXXThisExpr 0x563f2eaf2d68 <col:71> 'Args *' this
|         `-CallExpr 0x563f2eaf3348 <line:735:13, col:114> '<dependent type>'
|           |-MemberExpr 0x563f2eaf2de8 <col:13> '<bound member function type>' ->postparse 0x563f2eaea3e8
|           | `-CXXThisExpr 0x563f2eaf2dd8 <col:13> 'Args *' implicit this
|           |-BinaryOperator 0x563f2eaf3308 <col:23, col:100> '<dependent type>' '&&'
|           | |-DeclRefExpr 0x563f2eaf2e18 <col:23> 'T *' lvalue Var 0x563f2eaf2958 's' 'T *'
|           | `-CallExpr 0x563f2eaf32c8 <col:28, col:100> '<dependent type>'
|           |   |-CXXDependentScopeMemberExpr 0x563f2eaf30a0 <col:28, col:63> '<dependent type>' lvalue ->parse
|           |   |-CXXUnresolvedConstructExpr 0x563f2eaf31a0 <col:69, col:83> 'DefaultArg<T>' 'DefaultArg<T>'
|           |   |-DeclRefExpr 0x563f2eaf31c0 <col:86> 'String' lvalue Var 0x563f2eaf2670 'str' 'String'
|           |   |-CXXOperatorCallExpr 0x563f2eaf3270 <col:91, col:92> '<dependent type>'
|           |   | |-UnresolvedLookupExpr 0x563f2eaf3200 <col:91> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x563f2e9d9e78 0x563f2e9d9a98 0x563f2e9d96c8 0x563f2e9d92e8 0x563f2e9d8f08 0x563f2e9d8b38
|           |   | `-DeclRefExpr 0x563f2eaf31e0 <col:92> 'T *' lvalue Var 0x563f2eaf2958 's' 'T *'
|           |   `-UnaryOperator 0x563f2eaf32b0 <col:95, col:96> 'Args' lvalue prefix '*' cannot overflow
|           |     `-CXXThisExpr 0x563f2eaf32a0 <col:96> 'Args *' this
|           `-DeclRefExpr 0x563f2eaf3328 <col:103> 'Args::Slot *' lvalue Var 0x563f2eaf25e0 'slot_status' 'Args::Slot *'
|-FunctionTemplateDecl 0x563f2eaccf18 <line:739:5, line:745:5> line:740:10 base_read_or_set
| |-TemplateTypeParmDecl 0x563f2eacca38 <line:739:14, col:23> col:23 referenced typename depth 0 index 0 T
| |-TemplateTypeParmDecl 0x563f2eaccab8 <col:26, col:35> col:35 referenced typename depth 0 index 1 V
| `-CXXMethodDecl 0x563f2eacce78 <line:740:5, line:745:5> line:740:10 base_read_or_set 'void (const char *, int, T &, const V &)'
|   |-ParmVarDecl 0x563f2eaccb78 <col:27, col:39> col:39 referenced keyword 'const char *'
|   |-ParmVarDecl 0x563f2eaccbf8 <col:48, col:52> col:52 referenced flags 'int'
|   |-ParmVarDecl 0x563f2eaccc98 <col:59, col:62> col:62 referenced variable 'T &'
|   |-ParmVarDecl 0x563f2eaccd38 <col:72, col:81> col:81 referenced value 'const V &'
|   `-CompoundStmt 0x563f2eaf4270 <col:88, line:745:5>
|     |-DeclStmt 0x563f2eaf3468 <line:741:9, col:26>
|     | `-VarDecl 0x563f2eaf3400 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     |-DeclStmt 0x563f2eaf3688 <line:742:9, col:55>
|     | `-VarDecl 0x563f2eaf3490 <col:9, col:54> col:16 referenced str 'String' cinit destroyed
|     |   `-ExprWithCleanups 0x563f2eaf3670 <col:22, col:54> 'String'
|     |     `-CXXConstructExpr 0x563f2eaf3640 <col:22, col:54> 'String' 'void (String &&)' elidable
|     |       `-MaterializeTemporaryExpr 0x563f2eaf3628 <col:22, col:54> 'String' xvalue
|     |         `-CXXBindTemporaryExpr 0x563f2eaf3608 <col:22, col:54> 'String' (CXXTemporary 0x563f2eaf3608)
|     |           `-CXXMemberCallExpr 0x563f2eaf3598 <col:22, col:54> 'String'
|     |             |-MemberExpr 0x563f2eaf3508 <col:22> '<bound member function type>' ->find 0x563f2eaea1d8
|     |             | `-CXXThisExpr 0x563f2eaf34f8 <col:22> 'Args *' implicit this
|     |             |-ImplicitCastExpr 0x563f2eaf35d0 <col:27> 'const char *' <LValueToRValue>
|     |             | `-DeclRefExpr 0x563f2eaf3538 <col:27> 'const char *' lvalue ParmVar 0x563f2eaccb78 'keyword' 'const char *'
|     |             |-ImplicitCastExpr 0x563f2eaf35e8 <col:36> 'int' <LValueToRValue>
|     |             | `-DeclRefExpr 0x563f2eaf3558 <col:36> 'int' lvalue ParmVar 0x563f2eaccbf8 'flags' 'int'
|     |             `-DeclRefExpr 0x563f2eaf3578 <col:43> 'Args::Slot *' lvalue Var 0x563f2eaf3400 'slot_status' 'Args::Slot *'
|     |-DeclStmt 0x563f2eaf3a60 <line:743:9, col:72>
|     | `-VarDecl 0x563f2eaf36d8 <col:9, col:71> col:12 referenced s 'T *' cinit
|     |   `-CallExpr 0x563f2eaf3a30 <col:16, col:71> '<dependent type>'
|     |     |-CXXDependentScopeMemberExpr 0x563f2eaf39a0 <col:16, col:51> '<dependent type>' lvalue ->slot
|     |     |-DeclRefExpr 0x563f2eaf39e8 <col:56> 'T' lvalue ParmVar 0x563f2eaccc98 'variable' 'T &'
|     |     `-UnaryOperator 0x563f2eaf3a18 <col:66, col:67> 'Args' lvalue prefix '*' cannot overflow
|     |       `-CXXThisExpr 0x563f2eaf3a08 <col:67> 'Args *' this
|     `-CallExpr 0x563f2eaf4240 <line:744:9, col:139> '<dependent type>'
|       |-MemberExpr 0x563f2eaf3a88 <col:9> '<bound member function type>' ->postparse 0x563f2eaea3e8
|       | `-CXXThisExpr 0x563f2eaf3a78 <col:9> 'Args *' implicit this
|       |-BinaryOperator 0x563f2eaf4200 <col:19, col:125> '<dependent type>' '&&'
|       | |-DeclRefExpr 0x563f2eaf3ab8 <col:19> 'T *' lvalue Var 0x563f2eaf36d8 's' 'T *'
|       | `-ParenExpr 0x563f2eaf41e0 <col:24, col:125> '<dependent type>'
|       |   `-ConditionalOperator 0x563f2eaf41b0 <col:25, col:124> '<dependent type>'
|       |     |-ImplicitCastExpr 0x563f2eaf4198 <col:25> 'bool' <MemberPointerToBoolean>
|       |     | `-ImplicitCastExpr 0x563f2eaf4180 <col:25> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |     |   `-CXXMemberCallExpr 0x563f2eaf4160 <col:25> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     |     `-MemberExpr 0x563f2eaf4130 <col:25> '<bound member function type>' .operator int (String::*)() const 0x563f2e7e4d38
|       |     |       `-ImplicitCastExpr 0x563f2eaf4118 <col:25> 'const String' lvalue <NoOp>
|       |     |         `-DeclRefExpr 0x563f2eaf3ad8 <col:25> 'String' lvalue Var 0x563f2eaf3490 'str' 'String'
|       |     |-CallExpr 0x563f2eaf3f88 <col:31, col:103> '<dependent type>'
|       |     | |-CXXDependentScopeMemberExpr 0x563f2eaf3d60 <col:31, col:66> '<dependent type>' lvalue ->parse
|       |     | |-CXXUnresolvedConstructExpr 0x563f2eaf3e60 <col:72, col:86> 'DefaultArg<T>' 'DefaultArg<T>'
|       |     | |-DeclRefExpr 0x563f2eaf3e80 <col:89> 'String' lvalue Var 0x563f2eaf3490 'str' 'String'
|       |     | |-CXXOperatorCallExpr 0x563f2eaf3f30 <col:94, col:95> '<dependent type>'
|       |     | | |-UnresolvedLookupExpr 0x563f2eaf3ec0 <col:94> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x563f2e9d9e78 0x563f2e9d9a98 0x563f2e9d96c8 0x563f2e9d92e8 0x563f2e9d8f08 0x563f2e9d8b38
|       |     | | `-DeclRefExpr 0x563f2eaf3ea0 <col:95> 'T *' lvalue Var 0x563f2eaf36d8 's' 'T *'
|       |     | `-UnaryOperator 0x563f2eaf3f70 <col:98, col:99> 'Args' lvalue prefix '*' cannot overflow
|       |     |   `-CXXThisExpr 0x563f2eaf3f60 <col:99> 'Args *' this
|       |     `-ParenExpr 0x563f2eaf40f8 <col:107, col:124> '<dependent type>'
|       |       `-BinaryOperator 0x563f2eaf40d8 <col:108, col:120> '<dependent type>' ','
|       |         |-BinaryOperator 0x563f2eaf40a8 <col:108, col:113> '<dependent type>' '='
|       |         | |-CXXOperatorCallExpr 0x563f2eaf4058 <col:108, col:109> '<dependent type>'
|       |         | | |-UnresolvedLookupExpr 0x563f2eaf3fe8 <col:108> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x563f2e9d9e78 0x563f2e9d9a98 0x563f2e9d96c8 0x563f2e9d92e8 0x563f2e9d8f08 0x563f2e9d8b38
|       |         | | `-DeclRefExpr 0x563f2eaf3fc8 <col:109> 'T *' lvalue Var 0x563f2eaf36d8 's' 'T *'
|       |         | `-DeclRefExpr 0x563f2eaf4088 <col:113> 'const V' lvalue ParmVar 0x563f2eaccd38 'value' 'const V &'
|       |         `-CXXBoolLiteralExpr 0x563f2eaf40c8 <col:120> 'bool' true
|       `-DeclRefExpr 0x563f2eaf4220 <col:128> 'Args::Slot *' lvalue Var 0x563f2eaf3400 'slot_status' 'Args::Slot *'
|-FunctionTemplateDecl 0x563f2eacd448 <line:747:5, line:754:5> line:748:10 base_read
| |-TemplateTypeParmDecl 0x563f2eaccf90 <line:747:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x563f2eacd008 <col:26, col:35> col:35 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x563f2eacd3a8 <line:748:5, line:754:5> line:748:10 base_read 'void (const char *, int, P, T &)'
|   |-ParmVarDecl 0x563f2eacd0c8 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x563f2eacd148 <col:41, col:45> col:45 referenced flags 'int'
|   |-ParmVarDecl 0x563f2eacd1c0 <col:52, col:54> col:54 referenced parser 'P'
|   |-ParmVarDecl 0x563f2eacd268 <col:62, col:65> col:65 referenced variable 'T &'
|   `-CompoundStmt 0x563f2eaf4e68 <col:75, line:754:5>
|     |-DeclStmt 0x563f2eaf4318 <line:749:9, col:26>
|     | `-VarDecl 0x563f2eaf42b0 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     `-IfStmt 0x563f2eaf4e30 <line:750:9, line:753:9> has_var
|       |-DeclStmt 0x563f2eaf4e50 <line:750:13, col:58>
|       | `-VarDecl 0x563f2eaf4340 <col:13, col:58> col:20 referenced str 'String' cinit destroyed
|       |   `-ExprWithCleanups 0x563f2eaf4520 <col:26, col:58> 'String'
|       |     `-CXXConstructExpr 0x563f2eaf44f0 <col:26, col:58> 'String' 'void (String &&)' elidable
|       |       `-MaterializeTemporaryExpr 0x563f2eaf44d8 <col:26, col:58> 'String' xvalue
|       |         `-CXXBindTemporaryExpr 0x563f2eaf44b8 <col:26, col:58> 'String' (CXXTemporary 0x563f2eaf44b8)
|       |           `-CXXMemberCallExpr 0x563f2eaf4448 <col:26, col:58> 'String'
|       |             |-MemberExpr 0x563f2eaf43b8 <col:26> '<bound member function type>' ->find 0x563f2eaea1d8
|       |             | `-CXXThisExpr 0x563f2eaf43a8 <col:26> 'Args *' implicit this
|       |             |-ImplicitCastExpr 0x563f2eaf4480 <col:31> 'const char *' <LValueToRValue>
|       |             | `-DeclRefExpr 0x563f2eaf43e8 <col:31> 'const char *' lvalue ParmVar 0x563f2eacd0c8 'keyword' 'const char *'
|       |             |-ImplicitCastExpr 0x563f2eaf4498 <col:40> 'int' <LValueToRValue>
|       |             | `-DeclRefExpr 0x563f2eaf4408 <col:40> 'int' lvalue ParmVar 0x563f2eacd148 'flags' 'int'
|       |             `-DeclRefExpr 0x563f2eaf4428 <col:47> 'Args::Slot *' lvalue Var 0x563f2eaf42b0 'slot_status' 'Args::Slot *'
|       |-ImplicitCastExpr 0x563f2eaf45d8 <col:20> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x563f2eaf45c0 <col:20> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x563f2eaf45a0 <col:20> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x563f2eaf4570 <col:20> '<bound member function type>' .operator int (String::*)() const 0x563f2e7e4d38
|       |       `-ImplicitCastExpr 0x563f2eaf4558 <col:20> 'const String' lvalue <NoOp>
|       |         `-DeclRefExpr 0x563f2eaf4538 <col:20> 'String' lvalue Var 0x563f2eaf4340 'str' 'String'
|       `-CompoundStmt 0x563f2eaf4e10 <col:61, line:753:9>
|         |-DeclStmt 0x563f2eaf49b0 <line:751:13, col:63>
|         | `-VarDecl 0x563f2eaf4628 <col:13, col:62> col:16 referenced s 'T *' cinit
|         |   `-CallExpr 0x563f2eaf4980 <col:20, col:62> '<dependent type>'
|         |     |-CXXDependentScopeMemberExpr 0x563f2eaf48f0 <col:20, col:42> '<dependent type>' lvalue ->slot
|         |     |-DeclRefExpr 0x563f2eaf4938 <col:47> 'T' lvalue ParmVar 0x563f2eacd268 'variable' 'T &'
|         |     `-UnaryOperator 0x563f2eaf4968 <col:57, col:58> 'Args' lvalue prefix '*' cannot overflow
|         |       `-CXXThisExpr 0x563f2eaf4958 <col:58> 'Args *' this
|         `-CallExpr 0x563f2eaf4de0 <line:752:13, col:92> '<dependent type>'
|           |-MemberExpr 0x563f2eaf49d8 <col:13> '<bound member function type>' ->postparse 0x563f2eaea3e8
|           | `-CXXThisExpr 0x563f2eaf49c8 <col:13> 'Args *' implicit this
|           |-BinaryOperator 0x563f2eaf4da0 <col:23, col:78> '<dependent type>' '&&'
|           | |-DeclRefExpr 0x563f2eaf4a08 <col:23> 'T *' lvalue Var 0x563f2eaf4628 's' 'T *'
|           | `-CallExpr 0x563f2eaf4d60 <col:28, col:78> '<dependent type>'
|           |   |-CXXDependentScopeMemberExpr 0x563f2eaf4bf0 <col:28, col:50> '<dependent type>' lvalue ->parse
|           |   |-DeclRefExpr 0x563f2eaf4c38 <col:56> 'P' lvalue ParmVar 0x563f2eacd1c0 'parser' 'P'
|           |   |-DeclRefExpr 0x563f2eaf4c58 <col:64> 'String' lvalue Var 0x563f2eaf4340 'str' 'String'
|           |   |-CXXOperatorCallExpr 0x563f2eaf4d08 <col:69, col:70> '<dependent type>'
|           |   | |-UnresolvedLookupExpr 0x563f2eaf4c98 <col:69> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x563f2e9d9e78 0x563f2e9d9a98 0x563f2e9d96c8 0x563f2e9d92e8 0x563f2e9d8f08 0x563f2e9d8b38
|           |   | `-DeclRefExpr 0x563f2eaf4c78 <col:70> 'T *' lvalue Var 0x563f2eaf4628 's' 'T *'
|           |   `-UnaryOperator 0x563f2eaf4d48 <col:73, col:74> 'Args' lvalue prefix '*' cannot overflow
|           |     `-CXXThisExpr 0x563f2eaf4d38 <col:74> 'Args *' this
|           `-DeclRefExpr 0x563f2eaf4dc0 <col:81> 'Args::Slot *' lvalue Var 0x563f2eaf42b0 'slot_status' 'Args::Slot *'
|-FunctionTemplateDecl 0x563f2eacdaa8 <line:756:5, line:762:5> line:757:10 base_read_or_set
| |-TemplateTypeParmDecl 0x563f2eacd4c0 <line:756:14, col:23> col:23 referenced typename depth 0 index 0 T
| |-TemplateTypeParmDecl 0x563f2eacd538 <col:26, col:35> col:35 referenced typename depth 0 index 1 P
| |-TemplateTypeParmDecl 0x563f2eacd5b8 <col:38, col:47> col:47 referenced typename depth 0 index 2 V
| `-CXXMethodDecl 0x563f2eacda08 <line:757:5, line:762:5> line:757:10 base_read_or_set 'void (const char *, int, P, T &, const V &)'
|   |-ParmVarDecl 0x563f2eacd680 <col:27, col:39> col:39 referenced keyword 'const char *'
|   |-ParmVarDecl 0x563f2eacd700 <col:48, col:52> col:52 referenced flags 'int'
|   |-ParmVarDecl 0x563f2eacd778 <col:59, col:61> col:61 referenced parser 'P'
|   |-ParmVarDecl 0x563f2eacd818 <col:69, col:72> col:72 referenced variable 'T &'
|   |-ParmVarDecl 0x563f2eacd8b8 <col:82, col:91> col:91 referenced value 'const V &'
|   `-CompoundStmt 0x563f2eaf5bf8 <col:98, line:762:5>
|     |-DeclStmt 0x563f2eaf4f00 <line:758:9, col:26>
|     | `-VarDecl 0x563f2eaf4e98 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     |-DeclStmt 0x563f2eaf5120 <line:759:9, col:55>
|     | `-VarDecl 0x563f2eaf4f28 <col:9, col:54> col:16 referenced str 'String' cinit destroyed
|     |   `-ExprWithCleanups 0x563f2eaf5108 <col:22, col:54> 'String'
|     |     `-CXXConstructExpr 0x563f2eaf50d8 <col:22, col:54> 'String' 'void (String &&)' elidable
|     |       `-MaterializeTemporaryExpr 0x563f2eaf50c0 <col:22, col:54> 'String' xvalue
|     |         `-CXXBindTemporaryExpr 0x563f2eaf50a0 <col:22, col:54> 'String' (CXXTemporary 0x563f2eaf50a0)
|     |           `-CXXMemberCallExpr 0x563f2eaf5030 <col:22, col:54> 'String'
|     |             |-MemberExpr 0x563f2eaf4fa0 <col:22> '<bound member function type>' ->find 0x563f2eaea1d8
|     |             | `-CXXThisExpr 0x563f2eaf4f90 <col:22> 'Args *' implicit this
|     |             |-ImplicitCastExpr 0x563f2eaf5068 <col:27> 'const char *' <LValueToRValue>
|     |             | `-DeclRefExpr 0x563f2eaf4fd0 <col:27> 'const char *' lvalue ParmVar 0x563f2eacd680 'keyword' 'const char *'
|     |             |-ImplicitCastExpr 0x563f2eaf5080 <col:36> 'int' <LValueToRValue>
|     |             | `-DeclRefExpr 0x563f2eaf4ff0 <col:36> 'int' lvalue ParmVar 0x563f2eacd700 'flags' 'int'
|     |             `-DeclRefExpr 0x563f2eaf5010 <col:43> 'Args::Slot *' lvalue Var 0x563f2eaf4e98 'slot_status' 'Args::Slot *'
|     |-DeclStmt 0x563f2eaf5540 <line:760:9, col:59>
|     | `-VarDecl 0x563f2eaf5178 <col:9, col:58> col:12 referenced s 'T *' cinit
|     |   `-CallExpr 0x563f2eaf5510 <col:16, col:58> '<dependent type>'
|     |     |-CXXDependentScopeMemberExpr 0x563f2eaf5480 <col:16, col:38> '<dependent type>' lvalue ->slot
|     |     |-DeclRefExpr 0x563f2eaf54c8 <col:43> 'T' lvalue ParmVar 0x563f2eacd818 'variable' 'T &'
|     |     `-UnaryOperator 0x563f2eaf54f8 <col:53, col:54> 'Args' lvalue prefix '*' cannot overflow
|     |       `-CXXThisExpr 0x563f2eaf54e8 <col:54> 'Args *' this
|     `-CallExpr 0x563f2eaf5bc8 <line:761:9, col:117> '<dependent type>'
|       |-MemberExpr 0x563f2eaf5568 <col:9> '<bound member function type>' ->postparse 0x563f2eaea3e8
|       | `-CXXThisExpr 0x563f2eaf5558 <col:9> 'Args *' implicit this
|       |-BinaryOperator 0x563f2eaf5b88 <col:19, col:103> '<dependent type>' '&&'
|       | |-DeclRefExpr 0x563f2eaf5598 <col:19> 'T *' lvalue Var 0x563f2eaf5178 's' 'T *'
|       | `-ParenExpr 0x563f2eaf5b68 <col:24, col:103> '<dependent type>'
|       |   `-ConditionalOperator 0x563f2eaf5b38 <col:25, col:102> '<dependent type>'
|       |     |-ImplicitCastExpr 0x563f2eaf5b20 <col:25> 'bool' <MemberPointerToBoolean>
|       |     | `-ImplicitCastExpr 0x563f2eaf5b08 <col:25> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |     |   `-CXXMemberCallExpr 0x563f2eaf5ae8 <col:25> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     |     `-MemberExpr 0x563f2eaf5ab8 <col:25> '<bound member function type>' .operator int (String::*)() const 0x563f2e7e4d38
|       |     |       `-ImplicitCastExpr 0x563f2eaf5aa0 <col:25> 'const String' lvalue <NoOp>
|       |     |         `-DeclRefExpr 0x563f2eaf55b8 <col:25> 'String' lvalue Var 0x563f2eaf4f28 'str' 'String'
|       |     |-CallExpr 0x563f2eaf5910 <col:31, col:81> '<dependent type>'
|       |     | |-CXXDependentScopeMemberExpr 0x563f2eaf57a0 <col:31, col:53> '<dependent type>' lvalue ->parse
|       |     | |-DeclRefExpr 0x563f2eaf57e8 <col:59> 'P' lvalue ParmVar 0x563f2eacd778 'parser' 'P'
|       |     | |-DeclRefExpr 0x563f2eaf5808 <col:67> 'String' lvalue Var 0x563f2eaf4f28 'str' 'String'
|       |     | |-CXXOperatorCallExpr 0x563f2eaf58b8 <col:72, col:73> '<dependent type>'
|       |     | | |-UnresolvedLookupExpr 0x563f2eaf5848 <col:72> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x563f2e9d9e78 0x563f2e9d9a98 0x563f2e9d96c8 0x563f2e9d92e8 0x563f2e9d8f08 0x563f2e9d8b38
|       |     | | `-DeclRefExpr 0x563f2eaf5828 <col:73> 'T *' lvalue Var 0x563f2eaf5178 's' 'T *'
|       |     | `-UnaryOperator 0x563f2eaf58f8 <col:76, col:77> 'Args' lvalue prefix '*' cannot overflow
|       |     |   `-CXXThisExpr 0x563f2eaf58e8 <col:77> 'Args *' this
|       |     `-ParenExpr 0x563f2eaf5a80 <col:85, col:102> '<dependent type>'
|       |       `-BinaryOperator 0x563f2eaf5a60 <col:86, col:98> '<dependent type>' ','
|       |         |-BinaryOperator 0x563f2eaf5a30 <col:86, col:91> '<dependent type>' '='
|       |         | |-CXXOperatorCallExpr 0x563f2eaf59e0 <col:86, col:87> '<dependent type>'
|       |         | | |-UnresolvedLookupExpr 0x563f2eaf5970 <col:86> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x563f2e9d9e78 0x563f2e9d9a98 0x563f2e9d96c8 0x563f2e9d92e8 0x563f2e9d8f08 0x563f2e9d8b38
|       |         | | `-DeclRefExpr 0x563f2eaf5950 <col:87> 'T *' lvalue Var 0x563f2eaf5178 's' 'T *'
|       |         | `-DeclRefExpr 0x563f2eaf5a10 <col:91> 'const V' lvalue ParmVar 0x563f2eacd8b8 'value' 'const V &'
|       |         `-CXXBoolLiteralExpr 0x563f2eaf5a50 <col:98> 'bool' true
|       `-DeclRefExpr 0x563f2eaf5ba8 <col:106> 'Args::Slot *' lvalue Var 0x563f2eaf4e98 'slot_status' 'Args::Slot *'
|-FunctionTemplateDecl 0x563f2eace118 <line:764:5, line:773:5> line:765:10 base_read
| |-TemplateTypeParmDecl 0x563f2eacdb28 <line:764:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x563f2eacdba8 <col:26, col:35> col:35 referenced typename depth 0 index 1 T1
| |-TemplateTypeParmDecl 0x563f2eacdc28 <col:39, col:48> col:48 referenced typename depth 0 index 2 T2
| `-CXXMethodDecl 0x563f2eace078 <line:765:5, line:773:5> line:765:10 base_read 'void (const char *, int, P, T1 &, T2 &)'
|   |-ParmVarDecl 0x563f2eacdcf0 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x563f2eacdd70 <col:41, col:45> col:45 referenced flags 'int'
|   |-ParmVarDecl 0x563f2eacdde8 <line:766:20, col:22> col:22 referenced parser 'P'
|   |-ParmVarDecl 0x563f2eacde88 <col:30, col:34> col:34 referenced variable1 'T1 &'
|   |-ParmVarDecl 0x563f2eacdf28 <col:45, col:49> col:49 referenced variable2 'T2 &'
|   `-CompoundStmt 0x563f2eaf6bd8 <col:60, line:773:5>
|     |-DeclStmt 0x563f2eaf5ca0 <line:767:9, col:26>
|     | `-VarDecl 0x563f2eaf5c38 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     `-IfStmt 0x563f2eaf6ba0 <line:768:9, line:772:9> has_var
|       |-DeclStmt 0x563f2eaf6bc0 <line:768:13, col:58>
|       | `-VarDecl 0x563f2eaf5cc8 <col:13, col:58> col:20 referenced str 'String' cinit destroyed
|       |   `-ExprWithCleanups 0x563f2eaf5ea8 <col:26, col:58> 'String'
|       |     `-CXXConstructExpr 0x563f2eaf5e78 <col:26, col:58> 'String' 'void (String &&)' elidable
|       |       `-MaterializeTemporaryExpr 0x563f2eaf5e60 <col:26, col:58> 'String' xvalue
|       |         `-CXXBindTemporaryExpr 0x563f2eaf5e40 <col:26, col:58> 'String' (CXXTemporary 0x563f2eaf5e40)
|       |           `-CXXMemberCallExpr 0x563f2eaf5dd0 <col:26, col:58> 'String'
|       |             |-MemberExpr 0x563f2eaf5d40 <col:26> '<bound member function type>' ->find 0x563f2eaea1d8
|       |             | `-CXXThisExpr 0x563f2eaf5d30 <col:26> 'Args *' implicit this
|       |             |-ImplicitCastExpr 0x563f2eaf5e08 <col:31> 'const char *' <LValueToRValue>
|       |             | `-DeclRefExpr 0x563f2eaf5d70 <col:31> 'const char *' lvalue ParmVar 0x563f2eacdcf0 'keyword' 'const char *'
|       |             |-ImplicitCastExpr 0x563f2eaf5e20 <col:40> 'int' <LValueToRValue>
|       |             | `-DeclRefExpr 0x563f2eaf5d90 <col:40> 'int' lvalue ParmVar 0x563f2eacdd70 'flags' 'int'
|       |             `-DeclRefExpr 0x563f2eaf5db0 <col:47> 'Args::Slot *' lvalue Var 0x563f2eaf5c38 'slot_status' 'Args::Slot *'
|       |-ImplicitCastExpr 0x563f2eaf5f60 <col:20> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x563f2eaf5f48 <col:20> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x563f2eaf5f28 <col:20> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x563f2eaf5ef8 <col:20> '<bound member function type>' .operator int (String::*)() const 0x563f2e7e4d38
|       |       `-ImplicitCastExpr 0x563f2eaf5ee0 <col:20> 'const String' lvalue <NoOp>
|       |         `-DeclRefExpr 0x563f2eaf5ec0 <col:20> 'String' lvalue Var 0x563f2eaf5cc8 'str' 'String'
|       `-CompoundStmt 0x563f2eaf6b78 <col:61, line:772:9>
|         |-DeclStmt 0x563f2eaf62a0 <line:769:13, col:66>
|         | `-VarDecl 0x563f2eaf5fb8 <col:13, col:65> col:17 referenced s1 'T1 *' cinit
|         |   `-CallExpr 0x563f2eaf6270 <col:22, col:65> '<dependent type>'
|         |     |-CXXDependentScopeMemberExpr 0x563f2eaf61e0 <col:22, col:44> '<dependent type>' lvalue ->slot
|         |     |-DeclRefExpr 0x563f2eaf6228 <col:49> 'T1' lvalue ParmVar 0x563f2eacde88 'variable1' 'T1 &'
|         |     `-UnaryOperator 0x563f2eaf6258 <col:60, col:61> 'Args' lvalue prefix '*' cannot overflow
|         |       `-CXXThisExpr 0x563f2eaf6248 <col:61> 'Args *' this
|         |-DeclStmt 0x563f2eaf6610 <line:770:13, col:66>
|         | `-VarDecl 0x563f2eaf6328 <col:13, col:65> col:17 referenced s2 'T2 *' cinit
|         |   `-CallExpr 0x563f2eaf65e0 <col:22, col:65> '<dependent type>'
|         |     |-CXXDependentScopeMemberExpr 0x563f2eaf6550 <col:22, col:44> '<dependent type>' lvalue ->slot
|         |     |-DeclRefExpr 0x563f2eaf6598 <col:49> 'T2' lvalue ParmVar 0x563f2eacdf28 'variable2' 'T2 &'
|         |     `-UnaryOperator 0x563f2eaf65c8 <col:60, col:61> 'Args' lvalue prefix '*' cannot overflow
|         |       `-CXXThisExpr 0x563f2eaf65b8 <col:61> 'Args *' this
|         `-CallExpr 0x563f2eaf6b48 <line:771:13, col:105> '<dependent type>'
|           |-MemberExpr 0x563f2eaf6638 <col:13> '<bound member function type>' ->postparse 0x563f2eaea3e8
|           | `-CXXThisExpr 0x563f2eaf6628 <col:13> 'Args *' implicit this
|           |-BinaryOperator 0x563f2eaf6b08 <col:23, col:91> '<dependent type>' '&&'
|           | |-BinaryOperator 0x563f2eaf66a8 <col:23, col:29> '<dependent type>' '&&'
|           | | |-DeclRefExpr 0x563f2eaf6668 <col:23> 'T1 *' lvalue Var 0x563f2eaf5fb8 's1' 'T1 *'
|           | | `-DeclRefExpr 0x563f2eaf6688 <col:29> 'T2 *' lvalue Var 0x563f2eaf6328 's2' 'T2 *'
|           | `-CallExpr 0x563f2eaf6ac0 <col:35, col:91> '<dependent type>'
|           |   |-CXXDependentScopeMemberExpr 0x563f2eaf6890 <col:35, col:57> '<dependent type>' lvalue ->parse
|           |   |-DeclRefExpr 0x563f2eaf68d8 <col:63> 'P' lvalue ParmVar 0x563f2eacdde8 'parser' 'P'
|           |   |-DeclRefExpr 0x563f2eaf68f8 <col:71> 'String' lvalue Var 0x563f2eaf5cc8 'str' 'String'
|           |   |-CXXOperatorCallExpr 0x563f2eaf69a8 <col:76, col:77> '<dependent type>'
|           |   | |-UnresolvedLookupExpr 0x563f2eaf6938 <col:76> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x563f2e9d9e78 0x563f2e9d9a98 0x563f2e9d96c8 0x563f2e9d92e8 0x563f2e9d8f08 0x563f2e9d8b38
|           |   | `-DeclRefExpr 0x563f2eaf6918 <col:77> 'T1 *' lvalue Var 0x563f2eaf5fb8 's1' 'T1 *'
|           |   |-CXXOperatorCallExpr 0x563f2eaf6a68 <col:81, col:82> '<dependent type>'
|           |   | |-UnresolvedLookupExpr 0x563f2eaf69f8 <col:81> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x563f2e9d9e78 0x563f2e9d9a98 0x563f2e9d96c8 0x563f2e9d92e8 0x563f2e9d8f08 0x563f2e9d8b38
|           |   | `-DeclRefExpr 0x563f2eaf69d8 <col:82> 'T2 *' lvalue Var 0x563f2eaf6328 's2' 'T2 *'
|           |   `-UnaryOperator 0x563f2eaf6aa8 <col:86, col:87> 'Args' lvalue prefix '*' cannot overflow
|           |     `-CXXThisExpr 0x563f2eaf6a98 <col:87> 'Args *' this
|           `-DeclRefExpr 0x563f2eaf6b28 <col:94> 'Args::Slot *' lvalue Var 0x563f2eaf5c38 'slot_status' 'Args::Slot *'
|-FunctionTemplateDecl 0x563f2eace508 <line:775:5, line:780:5> line:776:10 base_read_with
| |-TemplateTypeParmDecl 0x563f2eace198 <line:775:14, col:23> col:23 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x563f2eace468 <line:776:5, line:780:5> line:776:10 base_read_with 'void (const char *, int, P)'
|   |-ParmVarDecl 0x563f2eace250 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x563f2eace2d0 <col:46, col:50> col:50 referenced flags 'int'
|   |-ParmVarDecl 0x563f2eace348 <col:57, col:59> col:59 referenced parser 'P'
|   `-CompoundStmt 0x563f2eaf70f0 <col:67, line:780:5>
|     |-DeclStmt 0x563f2eaf6c70 <line:777:9, col:26>
|     | `-VarDecl 0x563f2eaf6c08 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     `-IfStmt 0x563f2eaf70b8 <line:778:9, line:779:60> has_var
|       |-DeclStmt 0x563f2eaf70d8 <line:778:13, col:58>
|       | `-VarDecl 0x563f2eaf6c98 <col:13, col:58> col:20 referenced str 'String' cinit destroyed
|       |   `-ExprWithCleanups 0x563f2eaf6e78 <col:26, col:58> 'String'
|       |     `-CXXConstructExpr 0x563f2eaf6e48 <col:26, col:58> 'String' 'void (String &&)' elidable
|       |       `-MaterializeTemporaryExpr 0x563f2eaf6e30 <col:26, col:58> 'String' xvalue
|       |         `-CXXBindTemporaryExpr 0x563f2eaf6e10 <col:26, col:58> 'String' (CXXTemporary 0x563f2eaf6e10)
|       |           `-CXXMemberCallExpr 0x563f2eaf6da0 <col:26, col:58> 'String'
|       |             |-MemberExpr 0x563f2eaf6d10 <col:26> '<bound member function type>' ->find 0x563f2eaea1d8
|       |             | `-CXXThisExpr 0x563f2eaf6d00 <col:26> 'Args *' implicit this
|       |             |-ImplicitCastExpr 0x563f2eaf6dd8 <col:31> 'const char *' <LValueToRValue>
|       |             | `-DeclRefExpr 0x563f2eaf6d40 <col:31> 'const char *' lvalue ParmVar 0x563f2eace250 'keyword' 'const char *'
|       |             |-ImplicitCastExpr 0x563f2eaf6df0 <col:40> 'int' <LValueToRValue>
|       |             | `-DeclRefExpr 0x563f2eaf6d60 <col:40> 'int' lvalue ParmVar 0x563f2eace2d0 'flags' 'int'
|       |             `-DeclRefExpr 0x563f2eaf6d80 <col:47> 'Args::Slot *' lvalue Var 0x563f2eaf6c08 'slot_status' 'Args::Slot *'
|       |-ImplicitCastExpr 0x563f2eaf6f30 <col:20> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x563f2eaf6f18 <col:20> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x563f2eaf6ef8 <col:20> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x563f2eaf6ec8 <col:20> '<bound member function type>' .operator int (String::*)() const 0x563f2e7e4d38
|       |       `-ImplicitCastExpr 0x563f2eaf6eb0 <col:20> 'const String' lvalue <NoOp>
|       |         `-DeclRefExpr 0x563f2eaf6e90 <col:20> 'String' lvalue Var 0x563f2eaf6c98 'str' 'String'
|       `-CallExpr 0x563f2eaf7088 <line:779:13, col:60> '<dependent type>'
|         |-MemberExpr 0x563f2eaf6f58 <col:13> '<bound member function type>' ->postparse 0x563f2eaea3e8
|         | `-CXXThisExpr 0x563f2eaf6f48 <col:13> 'Args *' implicit this
|         |-CallExpr 0x563f2eaf7038 <col:23, col:46> '<dependent type>'
|         | |-CXXDependentScopeMemberExpr 0x563f2eaf6fa8 <col:23, col:30> '<dependent type>' lvalue .parse
|         | | `-DeclRefExpr 0x563f2eaf6f88 <col:23> 'P' lvalue ParmVar 0x563f2eace348 'parser' 'P'
|         | |-DeclRefExpr 0x563f2eaf6ff0 <col:36> 'String' lvalue Var 0x563f2eaf6c98 'str' 'String'
|         | `-UnaryOperator 0x563f2eaf7020 <col:41, col:42> 'Args' lvalue prefix '*' cannot overflow
|         |   `-CXXThisExpr 0x563f2eaf7010 <col:42> 'Args *' this
|         `-DeclRefExpr 0x563f2eaf7068 <col:49> 'Args::Slot *' lvalue Var 0x563f2eaf6c08 'slot_status' 'Args::Slot *'
|-FunctionTemplateDecl 0x563f2eace8a8 <line:782:5, line:792:5> line:783:10 base_read_all_with
| |-TemplateTypeParmDecl 0x563f2eace578 <line:782:14, col:23> col:23 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x563f2eace808 <line:783:5, line:792:5> line:783:10 base_read_all_with 'void (const char *, int, P)'
|   |-ParmVarDecl 0x563f2eace630 <col:29, col:41> col:41 referenced keyword 'const char *'
|   |-ParmVarDecl 0x563f2eace6b0 <col:50, col:54> col:54 referenced flags 'int'
|   |-ParmVarDecl 0x563f2eace728 <col:61, col:63> col:63 referenced parser 'P'
|   `-CompoundStmt 0x563f2eaf7a60 <col:71, line:792:5>
|     |-DeclStmt 0x563f2eaf7188 <line:784:9, col:26>
|     | `-VarDecl 0x563f2eaf7120 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     |-DeclStmt 0x563f2eaf7258 <line:785:9, col:29>
|     | `-VarDecl 0x563f2eaf71b8 <col:9, col:28> col:13 referenced read_status 'int' cinit
|     |   `-UnaryOperator 0x563f2eaf7240 <col:27, col:28> 'int' prefix '-'
|     |     `-IntegerLiteral 0x563f2eaf7220 <col:28> 'int' 1
|     |-WhileStmt 0x563f2eaf7910 <line:786:9, line:790:9> has_var
|     | |-DeclStmt 0x563f2eaf7930 <line:786:16, col:61>
|     | | `-VarDecl 0x563f2eaf7280 <col:16, col:61> col:23 referenced str 'String' cinit destroyed
|     | |   `-ExprWithCleanups 0x563f2eaf7460 <col:29, col:61> 'String'
|     | |     `-CXXConstructExpr 0x563f2eaf7430 <col:29, col:61> 'String' 'void (String &&)' elidable
|     | |       `-MaterializeTemporaryExpr 0x563f2eaf7418 <col:29, col:61> 'String' xvalue
|     | |         `-CXXBindTemporaryExpr 0x563f2eaf73f8 <col:29, col:61> 'String' (CXXTemporary 0x563f2eaf73f8)
|     | |           `-CXXMemberCallExpr 0x563f2eaf7388 <col:29, col:61> 'String'
|     | |             |-MemberExpr 0x563f2eaf72f8 <col:29> '<bound member function type>' ->find 0x563f2eaea1d8
|     | |             | `-CXXThisExpr 0x563f2eaf72e8 <col:29> 'Args *' implicit this
|     | |             |-ImplicitCastExpr 0x563f2eaf73c0 <col:34> 'const char *' <LValueToRValue>
|     | |             | `-DeclRefExpr 0x563f2eaf7328 <col:34> 'const char *' lvalue ParmVar 0x563f2eace630 'keyword' 'const char *'
|     | |             |-ImplicitCastExpr 0x563f2eaf73d8 <col:43> 'int' <LValueToRValue>
|     | |             | `-DeclRefExpr 0x563f2eaf7348 <col:43> 'int' lvalue ParmVar 0x563f2eace6b0 'flags' 'int'
|     | |             `-DeclRefExpr 0x563f2eaf7368 <col:50> 'Args::Slot *' lvalue Var 0x563f2eaf7120 'slot_status' 'Args::Slot *'
|     | |-ImplicitCastExpr 0x563f2eaf7518 <col:23> 'bool' <MemberPointerToBoolean>
|     | | `-ImplicitCastExpr 0x563f2eaf7500 <col:23> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|     | |   `-CXXMemberCallExpr 0x563f2eaf74e0 <col:23> 'String::unspecified_bool_type':'int (String::*)() const'
|     | |     `-MemberExpr 0x563f2eaf74b0 <col:23> '<bound member function type>' .operator int (String::*)() const 0x563f2e7e4d38
|     | |       `-ImplicitCastExpr 0x563f2eaf7498 <col:23> 'const String' lvalue <NoOp>
|     | |         `-DeclRefExpr 0x563f2eaf7478 <col:23> 'String' lvalue Var 0x563f2eaf7280 'str' 'String'
|     | `-CompoundStmt 0x563f2eaf78e8 <col:64, line:790:9>
|     |   |-CallExpr 0x563f2eaf7670 <line:787:13, col:60> '<dependent type>'
|     |   | |-MemberExpr 0x563f2eaf7540 <col:13> '<bound member function type>' ->postparse 0x563f2eaea3e8
|     |   | | `-CXXThisExpr 0x563f2eaf7530 <col:13> 'Args *' implicit this
|     |   | |-CallExpr 0x563f2eaf7620 <col:23, col:46> '<dependent type>'
|     |   | | |-CXXDependentScopeMemberExpr 0x563f2eaf7590 <col:23, col:30> '<dependent type>' lvalue .parse
|     |   | | | `-DeclRefExpr 0x563f2eaf7570 <col:23> 'P' lvalue ParmVar 0x563f2eace728 'parser' 'P'
|     |   | | |-DeclRefExpr 0x563f2eaf75d8 <col:36> 'String' lvalue Var 0x563f2eaf7280 'str' 'String'
|     |   | | `-UnaryOperator 0x563f2eaf7608 <col:41, col:42> 'Args' lvalue prefix '*' cannot overflow
|     |   | |   `-CXXThisExpr 0x563f2eaf75f8 <col:42> 'Args *' this
|     |   | `-DeclRefExpr 0x563f2eaf7650 <col:49> 'Args::Slot *' lvalue Var 0x563f2eaf7120 'slot_status' 'Args::Slot *'
|     |   |-BinaryOperator 0x563f2eaf7808 <line:788:13, col:49> 'int' lvalue '='
|     |   | |-DeclRefExpr 0x563f2eaf76a0 <col:13> 'int' lvalue Var 0x563f2eaf71b8 'read_status' 'int'
|     |   | `-ImplicitCastExpr 0x563f2eaf77f0 <col:27, col:49> 'int' <IntegralCast>
|     |   |   `-BinaryOperator 0x563f2eaf77d0 <col:27, col:49> 'bool' '&&'
|     |   |     |-ParenExpr 0x563f2eaf7738 <col:27, col:44> 'bool'
|     |   |     | `-BinaryOperator 0x563f2eaf7718 <col:28, col:43> 'bool' '!='
|     |   |     |   |-ImplicitCastExpr 0x563f2eaf7700 <col:28> 'int' <LValueToRValue>
|     |   |     |   | `-DeclRefExpr 0x563f2eaf76c0 <col:28> 'int' lvalue Var 0x563f2eaf71b8 'read_status' 'int'
|     |   |     |   `-IntegerLiteral 0x563f2eaf76e0 <col:43> 'int' 0
|     |   |     `-ImplicitCastExpr 0x563f2eaf77b8 <col:49> 'bool' <LValueToRValue>
|     |   |       `-MemberExpr 0x563f2eaf7788 <col:49> 'bool' lvalue ->_read_status 0x563f2eaae3d0
|     |   |         `-ImplicitCastExpr 0x563f2eaf7768 <col:49> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|     |   |           `-CXXThisExpr 0x563f2eaf7758 <col:49> 'Args *' implicit this
|     |   `-CompoundAssignOperator 0x563f2eaf78b8 <line:789:13, col:23> 'int' lvalue '&=' ComputeLHSTy='int' ComputeResultTy='int'
|     |     |-DeclRefExpr 0x563f2eaf7828 <col:13> 'int' lvalue ParmVar 0x563f2eace6b0 'flags' 'int'
|     |     `-UnaryOperator 0x563f2eaf78a0 <col:22, col:23> 'int' prefix '~' cannot overflow
|     |       `-ImplicitCastExpr 0x563f2eaf7888 <col:23> 'int' <LValueToRValue>
|     |         `-DeclRefExpr 0x563f2eaf7868 <col:23> 'const int' lvalue Var 0x563f2eab7cc8 'mandatory' 'const int' non_odr_use_constant
|     `-BinaryOperator 0x563f2eaf7a40 <line:791:9, col:41> 'bool' lvalue '='
|       |-MemberExpr 0x563f2eaf7978 <col:9> 'bool' lvalue ->_read_status 0x563f2eaae3d0
|       | `-ImplicitCastExpr 0x563f2eaf7958 <col:9> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|       |   `-CXXThisExpr 0x563f2eaf7948 <col:9> 'Args *' implicit this
|       `-ParenExpr 0x563f2eaf7a20 <col:24, col:41> 'bool'
|         `-BinaryOperator 0x563f2eaf7a00 <col:25, col:40> 'bool' '=='
|           |-ImplicitCastExpr 0x563f2eaf79e8 <col:25> 'int' <LValueToRValue>
|           | `-DeclRefExpr 0x563f2eaf79a8 <col:25> 'int' lvalue Var 0x563f2eaf71b8 'read_status' 'int'
|           `-IntegerLiteral 0x563f2eaf79c8 <col:40> 'int' 1
|-FunctionTemplateDecl 0x563f2eaced88 <line:794:5, line:805:5> line:795:10 base_read_all_with
| |-TemplateTypeParmDecl 0x563f2eace918 <line:794:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x563f2eace998 <col:26, col:35> col:35 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x563f2eacece8 <line:795:5, line:805:5> line:795:10 base_read_all_with 'void (const char *, int, P, T &)'
|   |-ParmVarDecl 0x563f2eacea58 <col:29, col:41> col:41 referenced keyword 'const char *'
|   |-ParmVarDecl 0x563f2eacead8 <col:50, col:54> col:54 referenced flags 'int'
|   |-ParmVarDecl 0x563f2eaceb50 <col:61, col:63> col:63 referenced parser 'P'
|   |-ParmVarDecl 0x563f2eacebf8 <col:71, col:74> col:74 referenced variable 'T &'
|   `-CompoundStmt 0x563f2eafb8d0 <col:84, line:805:5>
|     |-DeclStmt 0x563f2eaf7b08 <line:796:9, col:26>
|     | `-VarDecl 0x563f2eaf7aa0 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     |-DeclStmt 0x563f2eaf7bd8 <line:797:9, col:29>
|     | `-VarDecl 0x563f2eaf7b38 <col:9, col:28> col:13 referenced read_status 'int' cinit
|     |   `-UnaryOperator 0x563f2eaf7bc0 <col:27, col:28> 'int' prefix '-'
|     |     `-IntegerLiteral 0x563f2eaf7ba0 <col:28> 'int' 1
|     |-DeclStmt 0x563f2eaf7f10 <line:798:9, col:71>
|     | `-VarDecl 0x563f2eaf7c28 <col:9, col:70> col:12 referenced s 'T *' cinit
|     |   `-CallExpr 0x563f2eaf7ee0 <col:16, col:70> '<dependent type>'
|     |     |-CXXDependentScopeMemberExpr 0x563f2eaf7e50 <col:16, col:38> '<dependent type>' lvalue ->initialized_slot
|     |     |-DeclRefExpr 0x563f2eaf7e98 <col:55> 'T' lvalue ParmVar 0x563f2eacebf8 'variable' 'T &'
|     |     `-UnaryOperator 0x563f2eaf7ec8 <col:65, col:66> 'Args' lvalue prefix '*' cannot overflow
|     |       `-CXXThisExpr 0x563f2eaf7eb8 <col:66> 'Args *' this
|     |-WhileStmt 0x563f2eafb780 <line:799:9, line:803:9> has_var
|     | |-DeclStmt 0x563f2eafb7a0 <line:799:16, col:61>
|     | | `-VarDecl 0x563f2eaf7f38 <col:16, col:61> col:23 referenced str 'String' cinit destroyed
|     | |   `-ExprWithCleanups 0x563f2eaf8118 <col:29, col:61> 'String'
|     | |     `-CXXConstructExpr 0x563f2eaf80e8 <col:29, col:61> 'String' 'void (String &&)' elidable
|     | |       `-MaterializeTemporaryExpr 0x563f2eaf80d0 <col:29, col:61> 'String' xvalue
|     | |         `-CXXBindTemporaryExpr 0x563f2eaf80b0 <col:29, col:61> 'String' (CXXTemporary 0x563f2eaf80b0)
|     | |           `-CXXMemberCallExpr 0x563f2eaf8040 <col:29, col:61> 'String'
|     | |             |-MemberExpr 0x563f2eaf7fb0 <col:29> '<bound member function type>' ->find 0x563f2eaea1d8
|     | |             | `-CXXThisExpr 0x563f2eaf7fa0 <col:29> 'Args *' implicit this
|     | |             |-ImplicitCastExpr 0x563f2eaf8078 <col:34> 'const char *' <LValueToRValue>
|     | |             | `-DeclRefExpr 0x563f2eaf7fe0 <col:34> 'const char *' lvalue ParmVar 0x563f2eacea58 'keyword' 'const char *'
|     | |             |-ImplicitCastExpr 0x563f2eaf8090 <col:43> 'int' <LValueToRValue>
|     | |             | `-DeclRefExpr 0x563f2eaf8000 <col:43> 'int' lvalue ParmVar 0x563f2eacead8 'flags' 'int'
|     | |             `-DeclRefExpr 0x563f2eaf8020 <col:50> 'Args::Slot *' lvalue Var 0x563f2eaf7aa0 'slot_status' 'Args::Slot *'
|     | |-ImplicitCastExpr 0x563f2eaf81d0 <col:23> 'bool' <MemberPointerToBoolean>
|     | | `-ImplicitCastExpr 0x563f2eaf81b8 <col:23> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|     | |   `-CXXMemberCallExpr 0x563f2eaf8198 <col:23> 'String::unspecified_bool_type':'int (String::*)() const'
|     | |     `-MemberExpr 0x563f2eaf8168 <col:23> '<bound member function type>' .operator int (String::*)() const 0x563f2e7e4d38
|     | |       `-ImplicitCastExpr 0x563f2eaf8150 <col:23> 'const String' lvalue <NoOp>
|     | |         `-DeclRefExpr 0x563f2eaf8130 <col:23> 'String' lvalue Var 0x563f2eaf7f38 'str' 'String'
|     | `-CompoundStmt 0x563f2eafb758 <col:64, line:803:9>
|     |   |-CallExpr 0x563f2eafb4e0 <line:800:13, col:92> '<dependent type>'
|     |   | |-MemberExpr 0x563f2eaf81f8 <col:13> '<bound member function type>' ->postparse 0x563f2eaea3e8
|     |   | | `-CXXThisExpr 0x563f2eaf81e8 <col:13> 'Args *' implicit this
|     |   | |-BinaryOperator 0x563f2eafb4a0 <col:23, col:78> '<dependent type>' '&&'
|     |   | | |-DeclRefExpr 0x563f2eaf8228 <col:23> 'T *' lvalue Var 0x563f2eaf7c28 's' 'T *'
|     |   | | `-CallExpr 0x563f2eafb460 <col:28, col:78> '<dependent type>'
|     |   | |   |-CXXDependentScopeMemberExpr 0x563f2eaf8410 <col:28, col:50> '<dependent type>' lvalue ->parse
|     |   | |   |-DeclRefExpr 0x563f2eaf8458 <col:56> 'P' lvalue ParmVar 0x563f2eaceb50 'parser' 'P'
|     |   | |   |-DeclRefExpr 0x563f2eaf8478 <col:64> 'String' lvalue Var 0x563f2eaf7f38 'str' 'String'
|     |   | |   |-CXXOperatorCallExpr 0x563f2eaf8528 <col:69, col:70> '<dependent type>'
|     |   | |   | |-UnresolvedLookupExpr 0x563f2eaf84b8 <col:69> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x563f2e9d9e78 0x563f2e9d9a98 0x563f2e9d96c8 0x563f2e9d92e8 0x563f2e9d8f08 0x563f2e9d8b38
|     |   | |   | `-DeclRefExpr 0x563f2eaf8498 <col:70> 'T *' lvalue Var 0x563f2eaf7c28 's' 'T *'
|     |   | |   `-UnaryOperator 0x563f2eaf8568 <col:73, col:74> 'Args' lvalue prefix '*' cannot overflow
|     |   | |     `-CXXThisExpr 0x563f2eaf8558 <col:74> 'Args *' this
|     |   | `-DeclRefExpr 0x563f2eafb4c0 <col:81> 'Args::Slot *' lvalue Var 0x563f2eaf7aa0 'slot_status' 'Args::Slot *'
|     |   |-BinaryOperator 0x563f2eafb678 <line:801:13, col:49> 'int' lvalue '='
|     |   | |-DeclRefExpr 0x563f2eafb510 <col:13> 'int' lvalue Var 0x563f2eaf7b38 'read_status' 'int'
|     |   | `-ImplicitCastExpr 0x563f2eafb660 <col:27, col:49> 'int' <IntegralCast>
|     |   |   `-BinaryOperator 0x563f2eafb640 <col:27, col:49> 'bool' '&&'
|     |   |     |-ParenExpr 0x563f2eafb5a8 <col:27, col:44> 'bool'
|     |   |     | `-BinaryOperator 0x563f2eafb588 <col:28, col:43> 'bool' '!='
|     |   |     |   |-ImplicitCastExpr 0x563f2eafb570 <col:28> 'int' <LValueToRValue>
|     |   |     |   | `-DeclRefExpr 0x563f2eafb530 <col:28> 'int' lvalue Var 0x563f2eaf7b38 'read_status' 'int'
|     |   |     |   `-IntegerLiteral 0x563f2eafb550 <col:43> 'int' 0
|     |   |     `-ImplicitCastExpr 0x563f2eafb628 <col:49> 'bool' <LValueToRValue>
|     |   |       `-MemberExpr 0x563f2eafb5f8 <col:49> 'bool' lvalue ->_read_status 0x563f2eaae3d0
|     |   |         `-ImplicitCastExpr 0x563f2eafb5d8 <col:49> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|     |   |           `-CXXThisExpr 0x563f2eafb5c8 <col:49> 'Args *' implicit this
|     |   `-CompoundAssignOperator 0x563f2eafb728 <line:802:13, col:23> 'int' lvalue '&=' ComputeLHSTy='int' ComputeResultTy='int'
|     |     |-DeclRefExpr 0x563f2eafb698 <col:13> 'int' lvalue ParmVar 0x563f2eacead8 'flags' 'int'
|     |     `-UnaryOperator 0x563f2eafb710 <col:22, col:23> 'int' prefix '~' cannot overflow
|     |       `-ImplicitCastExpr 0x563f2eafb6f8 <col:23> 'int' <LValueToRValue>
|     |         `-DeclRefExpr 0x563f2eafb6d8 <col:23> 'const int' lvalue Var 0x563f2eab7cc8 'mandatory' 'const int' non_odr_use_constant
|     `-BinaryOperator 0x563f2eafb8b0 <line:804:9, col:41> 'bool' lvalue '='
|       |-MemberExpr 0x563f2eafb7e8 <col:9> 'bool' lvalue ->_read_status 0x563f2eaae3d0
|       | `-ImplicitCastExpr 0x563f2eafb7c8 <col:9> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|       |   `-CXXThisExpr 0x563f2eafb7b8 <col:9> 'Args *' implicit this
|       `-ParenExpr 0x563f2eafb890 <col:24, col:41> 'bool'
|         `-BinaryOperator 0x563f2eafb870 <col:25, col:40> 'bool' '=='
|           |-ImplicitCastExpr 0x563f2eafb858 <col:25> 'int' <LValueToRValue>
|           | `-DeclRefExpr 0x563f2eafb818 <col:25> 'int' lvalue Var 0x563f2eaf7b38 'read_status' 'int'
|           `-IntegerLiteral 0x563f2eafb838 <col:40> 'int' 1
|-FunctionTemplateDecl 0x563f2eacf368 <line:807:5, line:821:5> line:808:10 base_read_all
| |-TemplateTypeParmDecl 0x563f2eacee00 <line:807:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x563f2eacee78 <col:26, col:35> col:35 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x563f2eacf2c8 <line:808:5, line:821:5> line:808:10 base_read_all 'void (const char *, int, P, Vector<T> &)'
|   |-ParmVarDecl 0x563f2eacef38 <col:24, col:36> col:36 referenced keyword 'const char *'
|   |-ParmVarDecl 0x563f2eacefb8 <col:45, col:49> col:49 referenced flags 'int'
|   |-ParmVarDecl 0x563f2eacf030 <col:56, col:58> col:58 referenced parser 'P'
|   |-ParmVarDecl 0x563f2eacf180 <col:66, col:77> col:77 referenced variable 'Vector<T> &'
|   `-CompoundStmt 0x563f2eafc6d8 <col:87, line:821:5>
|     |-DeclStmt 0x563f2eafb980 <line:809:9, col:26>
|     | `-VarDecl 0x563f2eafb918 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     |-DeclStmt 0x563f2eafba50 <line:810:9, col:29>
|     | `-VarDecl 0x563f2eafb9b0 <col:9, col:28> col:13 referenced read_status 'int' cinit
|     |   `-UnaryOperator 0x563f2eafba38 <col:27, col:28> 'int' prefix '-'
|     |     `-IntegerLiteral 0x563f2eafba18 <col:28> 'int' 1
|     |-DeclStmt 0x563f2eafbc98 <line:811:9, col:38>
|     | `-VarDecl 0x563f2eafbb80 <col:9, col:37> col:20 referenced s 'Vector<T> *' cinit
|     |   `-CallExpr 0x563f2eafbc70 <col:24, col:37> '<dependent type>'
|     |     |-UnresolvedMemberExpr 0x563f2eafbbf8 <col:24> '<bound member function type>' lvalue
|     |     `-DeclRefExpr 0x563f2eafbc50 <col:29> 'Vector<T>' lvalue ParmVar 0x563f2eacf180 'variable' 'Vector<T> &'
|     |-WhileStmt 0x563f2eafc588 <line:812:9, line:819:9> has_var
|     | |-DeclStmt 0x563f2eafc5a8 <line:812:16, col:61>
|     | | `-VarDecl 0x563f2eafbcc0 <col:16, col:61> col:23 referenced str 'String' cinit destroyed
|     | |   `-ExprWithCleanups 0x563f2eafbea0 <col:29, col:61> 'String'
|     | |     `-CXXConstructExpr 0x563f2eafbe70 <col:29, col:61> 'String' 'void (String &&)' elidable
|     | |       `-MaterializeTemporaryExpr 0x563f2eafbe58 <col:29, col:61> 'String' xvalue
|     | |         `-CXXBindTemporaryExpr 0x563f2eafbe38 <col:29, col:61> 'String' (CXXTemporary 0x563f2eafbe38)
|     | |           `-CXXMemberCallExpr 0x563f2eafbdc8 <col:29, col:61> 'String'
|     | |             |-MemberExpr 0x563f2eafbd38 <col:29> '<bound member function type>' ->find 0x563f2eaea1d8
|     | |             | `-CXXThisExpr 0x563f2eafbd28 <col:29> 'Args *' implicit this
|     | |             |-ImplicitCastExpr 0x563f2eafbe00 <col:34> 'const char *' <LValueToRValue>
|     | |             | `-DeclRefExpr 0x563f2eafbd68 <col:34> 'const char *' lvalue ParmVar 0x563f2eacef38 'keyword' 'const char *'
|     | |             |-ImplicitCastExpr 0x563f2eafbe18 <col:43> 'int' <LValueToRValue>
|     | |             | `-DeclRefExpr 0x563f2eafbd88 <col:43> 'int' lvalue ParmVar 0x563f2eacefb8 'flags' 'int'
|     | |             `-DeclRefExpr 0x563f2eafbda8 <col:50> 'Args::Slot *' lvalue Var 0x563f2eafb918 'slot_status' 'Args::Slot *'
|     | |-ImplicitCastExpr 0x563f2eafbf58 <col:23> 'bool' <MemberPointerToBoolean>
|     | | `-ImplicitCastExpr 0x563f2eafbf40 <col:23> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|     | |   `-CXXMemberCallExpr 0x563f2eafbf20 <col:23> 'String::unspecified_bool_type':'int (String::*)() const'
|     | |     `-MemberExpr 0x563f2eafbef0 <col:23> '<bound member function type>' .operator int (String::*)() const 0x563f2e7e4d38
|     | |       `-ImplicitCastExpr 0x563f2eafbed8 <col:23> 'const String' lvalue <NoOp>
|     | |         `-DeclRefExpr 0x563f2eafbeb8 <col:23> 'String' lvalue Var 0x563f2eafbcc0 'str' 'String'
|     | `-CompoundStmt 0x563f2eafc550 <col:64, line:819:9>
|     |   |-DeclStmt 0x563f2eafc018 <line:813:13, col:23>
|     |   | `-VarDecl 0x563f2eafbf80 <col:13, col:22> col:15 referenced sx 'T' cinit
|     |   |   `-CXXUnresolvedConstructExpr 0x563f2eafbff8 <col:20, col:22> 'T' 'T'
|     |   |-CallExpr 0x563f2eafc198 <line:814:13, col:64> '<dependent type>'
|     |   | |-MemberExpr 0x563f2eafc040 <col:13> '<bound member function type>' ->postparse 0x563f2eaea3e8
|     |   | | `-CXXThisExpr 0x563f2eafc030 <col:13> 'Args *' implicit this
|     |   | |-CallExpr 0x563f2eafc140 <col:23, col:50> '<dependent type>'
|     |   | | |-CXXDependentScopeMemberExpr 0x563f2eafc090 <col:23, col:30> '<dependent type>' lvalue .parse
|     |   | | | `-DeclRefExpr 0x563f2eafc070 <col:23> 'P' lvalue ParmVar 0x563f2eacf030 'parser' 'P'
|     |   | | |-DeclRefExpr 0x563f2eafc0d8 <col:36> 'String' lvalue Var 0x563f2eafbcc0 'str' 'String'
|     |   | | |-DeclRefExpr 0x563f2eafc0f8 <col:41> 'T' lvalue Var 0x563f2eafbf80 'sx' 'T'
|     |   | | `-UnaryOperator 0x563f2eafc128 <col:45, col:46> 'Args' lvalue prefix '*' cannot overflow
|     |   | |   `-CXXThisExpr 0x563f2eafc118 <col:46> 'Args *' this
|     |   | `-DeclRefExpr 0x563f2eafc178 <col:53> 'Args::Slot *' lvalue Var 0x563f2eafb918 'slot_status' 'Args::Slot *'
|     |   |-IfStmt 0x563f2eafc2f0 <line:815:13, line:816:32>
|     |   | |-ImplicitCastExpr 0x563f2eafc228 <line:815:17> 'bool' <LValueToRValue>
|     |   | | `-MemberExpr 0x563f2eafc1f8 <col:17> 'bool' lvalue ->_read_status 0x563f2eaae3d0
|     |   | |   `-ImplicitCastExpr 0x563f2eafc1d8 <col:17> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|     |   | |     `-CXXThisExpr 0x563f2eafc1c8 <col:17> 'Args *' implicit this
|     |   | `-CallExpr 0x563f2eafc2c8 <line:816:17, col:32> '<dependent type>'
|     |   |   |-CXXDependentScopeMemberExpr 0x563f2eafc260 <col:17, col:20> '<dependent type>' lvalue ->push_back
|     |   |   | `-DeclRefExpr 0x563f2eafc240 <col:17> 'Vector<T> *' lvalue Var 0x563f2eafbb80 's' 'Vector<T> *'
|     |   |   `-DeclRefExpr 0x563f2eafc2a8 <col:30> 'T' lvalue Var 0x563f2eafbf80 'sx' 'T'
|     |   |-BinaryOperator 0x563f2eafc470 <line:817:13, col:49> 'int' lvalue '='
|     |   | |-DeclRefExpr 0x563f2eafc308 <col:13> 'int' lvalue Var 0x563f2eafb9b0 'read_status' 'int'
|     |   | `-ImplicitCastExpr 0x563f2eafc458 <col:27, col:49> 'int' <IntegralCast>
|     |   |   `-BinaryOperator 0x563f2eafc438 <col:27, col:49> 'bool' '&&'
|     |   |     |-ParenExpr 0x563f2eafc3a0 <col:27, col:44> 'bool'
|     |   |     | `-BinaryOperator 0x563f2eafc380 <col:28, col:43> 'bool' '!='
|     |   |     |   |-ImplicitCastExpr 0x563f2eafc368 <col:28> 'int' <LValueToRValue>
|     |   |     |   | `-DeclRefExpr 0x563f2eafc328 <col:28> 'int' lvalue Var 0x563f2eafb9b0 'read_status' 'int'
|     |   |     |   `-IntegerLiteral 0x563f2eafc348 <col:43> 'int' 0
|     |   |     `-ImplicitCastExpr 0x563f2eafc420 <col:49> 'bool' <LValueToRValue>
|     |   |       `-MemberExpr 0x563f2eafc3f0 <col:49> 'bool' lvalue ->_read_status 0x563f2eaae3d0
|     |   |         `-ImplicitCastExpr 0x563f2eafc3d0 <col:49> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|     |   |           `-CXXThisExpr 0x563f2eafc3c0 <col:49> 'Args *' implicit this
|     |   `-CompoundAssignOperator 0x563f2eafc520 <line:818:13, col:23> 'int' lvalue '&=' ComputeLHSTy='int' ComputeResultTy='int'
|     |     |-DeclRefExpr 0x563f2eafc490 <col:13> 'int' lvalue ParmVar 0x563f2eacefb8 'flags' 'int'
|     |     `-UnaryOperator 0x563f2eafc508 <col:22, col:23> 'int' prefix '~' cannot overflow
|     |       `-ImplicitCastExpr 0x563f2eafc4f0 <col:23> 'int' <LValueToRValue>
|     |         `-DeclRefExpr 0x563f2eafc4d0 <col:23> 'const int' lvalue Var 0x563f2eab7cc8 'mandatory' 'const int' non_odr_use_constant
|     `-BinaryOperator 0x563f2eafc6b8 <line:820:9, col:41> 'bool' lvalue '='
|       |-MemberExpr 0x563f2eafc5f0 <col:9> 'bool' lvalue ->_read_status 0x563f2eaae3d0
|       | `-ImplicitCastExpr 0x563f2eafc5d0 <col:9> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|       |   `-CXXThisExpr 0x563f2eafc5c0 <col:9> 'Args *' implicit this
|       `-ParenExpr 0x563f2eafc698 <col:24, col:41> 'bool'
|         `-BinaryOperator 0x563f2eafc678 <col:25, col:40> 'bool' '=='
|           |-ImplicitCastExpr 0x563f2eafc660 <col:25> 'int' <LValueToRValue>
|           | `-DeclRefExpr 0x563f2eafc620 <col:25> 'int' lvalue Var 0x563f2eafb9b0 'read_status' 'int'
|           `-IntegerLiteral 0x563f2eafc640 <col:40> 'int' 1
|-AccessSpecDecl 0x563f2eacf3e0 <line:824:3, col:10> col:3 private
|-CXXRecordDecl 0x563f2eacf408 prev 0x563f2eab5fc8 <line:826:5, line:833:5> line:826:12 referenced struct Slot definition
| |-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple non_trivial has_const_param implicit_has_const_param
| | |-MoveConstructor
| | |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| | |-MoveAssignment
| | `-Destructor non_trivial user_declared
| |-CXXRecordDecl 0x563f2eacf500 <col:5, col:12> col:12 implicit referenced struct Slot
| |-CXXConstructorDecl 0x563f2eacf5f0 <line:827:9, line:828:9> line:827:9 used Slot 'void ()'
| | `-CompoundStmt 0x563f2eafc710 <col:16, line:828:9>
| |-CXXDestructorDecl 0x563f2eacf6e0 <line:829:9, line:830:9> line:829:17 used ~Slot 'void () noexcept' virtual
| | `-CompoundStmt 0x563f2eafc720 <col:25, line:830:9>
| |-CXXMethodDecl 0x563f2eacf7e0 <line:831:9, col:32> col:22 store 'void ()' virtual pure
| |-FieldDecl 0x563f2eacf890 <line:832:9, col:15> col:15 _next 'Args::Slot *'
| |-CXXMethodDecl 0x563f2eacf938 <line:826:12> col:12 implicit operator= 'Args::Slot &(const Args::Slot &)' inline default noexcept-unevaluated 0x563f2eacf938
| | `-ParmVarDecl 0x563f2eacfa48 <col:12> col:12 'const Args::Slot &'
| `-CXXConstructorDecl 0x563f2ead0208 <col:12> col:12 implicit constexpr Slot 'void (const Args::Slot &)' inline default noexcept-unevaluated 0x563f2ead0208
|   `-ParmVarDecl 0x563f2ead0318 <col:12> col:12 'const Args::Slot &'
|-CXXRecordDecl 0x563f2eacfab8 <line:835:5, line:848:5> line:835:12 struct BytesSlot definition
| |-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor
| | |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveConstructor needs_overload_resolution
| | |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| | |-MoveAssignment needs_overload_resolution
| | `-Destructor non_trivial user_declared needs_overload_resolution
| |-public 'Args::Slot'
| |-CXXRecordDecl 0x563f2eacfc18 <col:5, col:12> col:12 implicit referenced struct BytesSlot
| |-CXXConstructorDecl 0x563f2eacfe10 <line:836:9, line:838:9> line:836:9 BytesSlot 'void (void *, size_t)'
| | |-ParmVarDecl 0x563f2eacfcc0 <col:19, col:25> col:25 used ptr 'void *'
| | |-ParmVarDecl 0x563f2eacfd38 <col:30, col:37> col:37 used size 'size_t':'unsigned long'
| | |-CXXCtorInitializer 'Args::Slot'
| | | `-CXXConstructExpr 0x563f2eafc900 <col:9> 'Args::Slot' 'void ()'
| | |-CXXCtorInitializer Field 0x563f2ead00c8 '_ptr' 'void *'
| | | `-ImplicitCastExpr 0x563f2eafc770 <line:837:20> 'void *' <LValueToRValue>
| | |   `-DeclRefExpr 0x563f2eafc730 <col:20> 'void *' lvalue ParmVar 0x563f2eacfcc0 'ptr' 'void *'
| | |-CXXCtorInitializer Field 0x563f2ead0130 '_slot' 'char *'
| | | `-CXXNewExpr 0x563f2eafc7f8 <col:32, col:45> 'char *' array Function 0x563f2e6087b8 'operator new[]' 'void *(std::size_t)'
| | |   `-ImplicitCastExpr 0x563f2eafc7e0 <col:41> 'size_t':'unsigned long' <LValueToRValue>
| | |     `-DeclRefExpr 0x563f2eafc7b0 <col:41> 'size_t':'unsigned long' lvalue ParmVar 0x563f2eacfd38 'size' 'size_t':'unsigned long'
| | |-CXXCtorInitializer Field 0x563f2ead0190 '_size' 'size_t':'unsigned long'
| | | `-ImplicitCastExpr 0x563f2eafc8c0 <col:55> 'size_t':'unsigned long' <LValueToRValue>
| | |   `-DeclRefExpr 0x563f2eafc880 <col:55> 'size_t':'unsigned long' lvalue ParmVar 0x563f2eacfd38 'size' 'size_t':'unsigned long'
| | `-CompoundStmt 0x563f2eafc980 <col:61, line:838:9>
| |-CXXDestructorDecl 0x563f2eacff10 <line:839:9, line:841:9> line:839:9 ~BytesSlot 'void () noexcept'
| | |-Overrides: [ 0x563f2eacf6e0 Slot::~Slot 'void () noexcept' ]
| | `-CompoundStmt 0x563f2eafca08 <col:22, line:841:9>
| |   `-CXXDeleteExpr 0x563f2eafc9e8 <line:840:13, col:22> 'void' array Function 0x563f2e608b18 'operator delete[]' 'void (void *) noexcept'
| |     `-ImplicitCastExpr 0x563f2eafc9d0 <col:22> 'char *' <LValueToRValue>
| |       `-MemberExpr 0x563f2eafc9a0 <col:22> 'char *' lvalue ->_slot 0x563f2ead0130
| |         `-CXXThisExpr 0x563f2eafc990 <col:22> 'Args::BytesSlot *' implicit this
| |-CXXMethodDecl 0x563f2ead0010 <line:842:9, line:844:9> line:842:14 store 'void ()'
| | |-Overrides: [ 0x563f2eacf7e0 Slot::store 'void ()' ]
| | `-CompoundStmt 0x563f2eafcbf8 <col:22, line:844:9>
| |   `-CallExpr 0x563f2eafcb60 <line:843:13, col:38> 'void *'
| |     |-ImplicitCastExpr 0x563f2eafcb48 <col:13> 'void *(*)(void *__restrict, const void *__restrict, size_t) throw()' <FunctionToPointerDecay>
| |     | `-DeclRefExpr 0x563f2eafcb28 <col:13> 'void *(void *__restrict, const void *__restrict, size_t) throw()' lvalue Function 0x563f2e714578 'memcpy' 'void *(void *__restrict, const void *__restrict, size_t) throw()'
| |     |-ImplicitCastExpr 0x563f2eafcb98 <col:20> 'void *' <LValueToRValue>
| |     | `-MemberExpr 0x563f2eafca78 <col:20> 'void *' lvalue ->_ptr 0x563f2ead00c8
| |     |   `-CXXThisExpr 0x563f2eafca68 <col:20> 'Args::BytesSlot *' implicit this
| |     |-ImplicitCastExpr 0x563f2eafcbc8 <col:26> 'const void *' <BitCast>
| |     | `-ImplicitCastExpr 0x563f2eafcbb0 <col:26> 'char *' <LValueToRValue>
| |     |   `-MemberExpr 0x563f2eafcab8 <col:26> 'char *' lvalue ->_slot 0x563f2ead0130
| |     |     `-CXXThisExpr 0x563f2eafcaa8 <col:26> 'Args::BytesSlot *' implicit this
| |     `-ImplicitCastExpr 0x563f2eafcbe0 <col:33> 'size_t':'unsigned long' <LValueToRValue>
| |       `-MemberExpr 0x563f2eafcaf8 <col:33> 'size_t':'unsigned long' lvalue ->_size 0x563f2ead0190
| |         `-CXXThisExpr 0x563f2eafcae8 <col:33> 'Args::BytesSlot *' implicit this
| |-FieldDecl 0x563f2ead00c8 <line:845:9, col:15> col:15 referenced _ptr 'void *'
| |-FieldDecl 0x563f2ead0130 <line:846:9, col:15> col:15 referenced _slot 'char *'
| |-FieldDecl 0x563f2ead0190 <line:847:9, col:16> col:16 referenced _size 'size_t':'unsigned long'
| |-CXXConstructorDecl 0x563f2ead0388 <line:835:12> col:12 implicit constexpr BytesSlot 'void (const Args::BytesSlot &)' inline default noexcept-unevaluated 0x563f2ead0388
| | `-ParmVarDecl 0x563f2ead0498 <col:12> col:12 'const Args::BytesSlot &'
| `-CXXMethodDecl 0x563f2ead0538 <col:12> col:12 implicit operator= 'Args::BytesSlot &(const Args::BytesSlot &)' inline default noexcept-unevaluated 0x563f2ead0538
|   `-ParmVarDecl 0x563f2ead0648 <col:12> col:12 'const Args::BytesSlot &'
|-ClassTemplateDecl 0x563f2ead07e8 <line:850:5, line:860:5> line:851:12 SlotT
| |-TemplateTypeParmDecl 0x563f2ead06b8 <line:850:14, col:23> col:23 referenced typename depth 0 index 0 T
| `-CXXRecordDecl 0x563f2ead0758 <line:851:5, line:860:5> line:851:12 struct SlotT definition
|   |-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
|   | |-DefaultConstructor
|   | |-CopyConstructor simple non_trivial has_const_param needs_implicit needs_overload_resolution implicit_has_const_param
|   | |-MoveConstructor exists simple non_trivial needs_implicit needs_overload_resolution
|   | |-CopyAssignment non_trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple non_trivial needs_implicit needs_overload_resolution
|   | `-Destructor simple non_trivial needs_implicit needs_overload_resolution
|   |-public 'Args::Slot'
|   |-CXXRecordDecl 0x563f2ead0a80 <col:5, col:12> col:12 implicit referenced struct SlotT
|   |-CXXConstructorDecl 0x563f2ead0c78 <line:852:9, line:854:9> line:852:9 SlotT<T> 'void (T *)'
|   | |-ParmVarDecl 0x563f2ead0b48 <col:15, col:18> col:18 referenced ptr 'T *'
|   | |-CXXCtorInitializer Field 0x563f2eadc910 '_ptr' 'T *'
|   | | `-ParenListExpr 0x563f2eafcc30 <line:853:19, col:23> 'NULL TYPE'
|   | |   `-DeclRefExpr 0x563f2eafcc10 <col:20> 'T *' lvalue ParmVar 0x563f2ead0b48 'ptr' 'T *'
|   | `-CompoundStmt 0x563f2eafcc80 <col:25, line:854:9>
|   |-CXXMethodDecl 0x563f2ead0d48 <line:855:9, line:857:9> line:855:14 store 'void ()'
|   | |-Overrides: [ 0x563f2eacf7e0 Slot::store 'void ()' ]
|   | `-CompoundStmt 0x563f2eafce30 <col:22, line:857:9>
|   |   `-CallExpr 0x563f2eafce00 <line:856:13, col:40> '<dependent type>'
|   |     |-UnresolvedLookupExpr 0x563f2eafcc90 <col:13> '<overloaded function type>' lvalue (ADL) = 'assign_consume' 0x563f2e7ccec8 0x563f2e776fd8
|   |     |-CXXOperatorCallExpr 0x563f2eafcd90 <col:28, col:29> '<dependent type>'
|   |     | |-UnresolvedLookupExpr 0x563f2eafcd20 <col:28> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x563f2e9d9e78 0x563f2e9d9a98 0x563f2e9d96c8 0x563f2e9d92e8 0x563f2e9d8f08 0x563f2e9d8b38
|   |     | `-MemberExpr 0x563f2eafccf0 <col:29> 'T *' lvalue ->_ptr 0x563f2eadc910
|   |     |   `-CXXThisExpr 0x563f2eafcce0 <col:29> 'SlotT<T> *' implicit this
|   |     `-MemberExpr 0x563f2eafcdd0 <col:35> 'T' lvalue ->_slot 0x563f2eadc970
|   |       `-CXXThisExpr 0x563f2eafcdc0 <col:35> 'SlotT<T> *' implicit this
|   |-FieldDecl 0x563f2eadc910 <line:858:9, col:12> col:12 referenced _ptr 'T *'
|   `-FieldDecl 0x563f2eadc970 <line:859:9, col:11> col:11 referenced _slot 'T'
|-EnumDecl 0x563f2eadc9d8 <line:862:5, line:868:5> line:862:5
| `-EnumConstantDecl 0x563f2eadcae0 <line:866:9, col:31> col:9 referenced simple_slotbuf_size 'Args::(anonymous enum at ../dummy_inc/click/args.hh:862:5)'
|   `-ImplicitCastExpr 0x563f2eadcb30 <col:31> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x563f2eadcac0 <col:31> 'int' Int: 48
|       `-IntegerLiteral 0x563f2eadcaa0 <col:31> 'int' 48
|-FieldDecl 0x563f2eadcb58 <line:871:5, col:10> col:10 _my_conf 'bool'
|-FieldDecl 0x563f2eadcbb8 <line:876:5, col:10> col:10 referenced _status 'bool'
|-FieldDecl 0x563f2eadcc18 <line:877:5, col:13> col:13 _simple_slotpos 'uint8_t':'unsigned char'
|-FieldDecl 0x563f2eadcd50 <line:879:5, col:21> col:21 referenced _conf 'Vector<String> *'
|-FieldDecl 0x563f2eae9a80 <line:880:5, col:17> col:17 referenced _kwpos 'Vector<int>':'Vector<int>'
|-FieldDecl 0x563f2eae9ae0 <line:882:5, col:11> col:11 referenced _slots 'Args::Slot *'
|-FieldDecl 0x563f2eae9b90 <line:883:5, col:48> col:13 referenced _simple_slotbuf 'uint8_t [48]'
|-CXXMethodDecl 0x563f2eae9db8 <line:885:5, col:54> col:17 initialize 'void (const Vector<String> *)' inline
| `-ParmVarDecl 0x563f2eae9cc0 <col:28, col:50> col:50 conf 'const Vector<String> *'
|-CXXMethodDecl 0x563f2eae9f08 <line:886:5, col:26> col:10 used reset_from 'void (int)'
| `-ParmVarDecl 0x563f2eae9e78 <col:21, col:25> col:25 i 'int'
|-CXXMethodDecl 0x563f2eaea1d8 <line:888:5, col:67> col:12 referenced find 'String (const char *, int, Args::Slot *&)'
| |-ParmVarDecl 0x563f2eae9fc8 <col:17, col:29> col:29 keyword 'const char *'
| |-ParmVarDecl 0x563f2eaea048 <col:38, col:42> col:42 flags 'int'
| `-ParmVarDecl 0x563f2eaea0f0 <col:49, col:56> col:56 slot_status 'Args::Slot *&'
|-CXXMethodDecl 0x563f2eaea3e8 <line:889:5, col:46> col:10 referenced postparse 'void (bool, Args::Slot *)'
| |-ParmVarDecl 0x563f2eaea2a0 <col:20, col:25> col:25 ok 'bool'
| `-ParmVarDecl 0x563f2eaea318 <col:29, col:35> col:35 slot_status 'Args::Slot *'
|-CXXMethodDecl 0x563f2eaea4b8 <line:890:5, col:25> col:10 check_complete 'void ()'
|-CXXMethodDecl 0x563f2eaea608 <line:892:5, col:48> col:23 simple_slot_size 'int (int)' static inline
| `-ParmVarDecl 0x563f2eaea570 <col:40, col:44> col:44 size 'int'
|-CXXMethodDecl 0x563f2eaea998 <line:893:5, line:894:62> line:893:17 simple_slot_info 'void (int, int, void *&, void **&)' inline
| |-ParmVarDecl 0x563f2eaea6c8 <col:34, col:38> col:38 offset 'int'
| |-ParmVarDecl 0x563f2eaea748 <col:46, col:50> col:50 size 'int'
| |-ParmVarDecl 0x563f2eaea7f0 <line:894:34, col:41> col:41 slot 'void *&'
| `-ParmVarDecl 0x563f2eaea8a8 <col:47, col:55> col:55 pointer 'void **&'
|-CXXMethodDecl 0x563f2eaeabc0 <line:895:5, col:46> col:11 referenced simple_slot 'void *(void *, size_t)'
| |-ParmVarDecl 0x563f2eaeaa70 <col:23, col:29> col:29 data 'void *'
| `-ParmVarDecl 0x563f2eaeaae8 <col:35, col:42> col:42 size 'size_t':'unsigned long'
`-FunctionTemplateDecl 0x563f2eaeaed8 <line:896:5, col:53> col:29 complex_slot
  |-TemplateTypeParmDecl 0x563f2eaeac70 <col:14, col:23> col:23 referenced typename depth 0 index 0 T
  `-CXXMethodDecl 0x563f2eaeae38 <col:26, col:53> col:29 complex_slot 'T *(T &)'
    `-ParmVarDecl 0x563f2eaead48 <col:42, col:45> col:45 variable 'T &'

Layout: <CGRecordLayout
  LLVMType:%class.Args = type { %class.ArgContext.base, i8, i8, i8, %class.Vector.0*, %class.Vector.5, %"struct.Args::Slot"*, [48 x i8] }
  NonVirtualBaseLLVMType:%class.Args = type { %class.ArgContext.base, i8, i8, i8, %class.Vector.0*, %class.Vector.5, %"struct.Args::Slot"*, [48 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class AnyArg (empty)
           | [sizeof=1, dsize=1, align=1,
           |  nvsize=1, nvalign=1]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563f2eb20240 <../dummy_inc/click/args.hh:1326:1, line:1338:1> line:1326:7 referenced class AnyArg definition
|-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |-DefaultConstructor exists trivial constexpr defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x563f2eb20358 <col:1, col:7> col:7 implicit class AnyArg
|-AccessSpecDecl 0x563f2eb203e8 <col:16, col:22> col:16 public
|-CXXMethodDecl 0x563f2eb20598 <line:1327:5, line:1329:5> line:1327:17 parse 'bool (const String &, const ArgContext &)' static
| |-ParmVarDecl 0x563f2eb20420 <col:23, col:36> col:37 'const String &'
| |-ParmVarDecl 0x563f2eb20498 <col:39, col:60> col:58 'const ArgContext &' cinit
| | `-DeclRefExpr 0x563f2eb20ca8 <col:60> 'const ArgContext' lvalue Var 0x563f2eafce58 'blank_args' 'const ArgContext'
| `-CompoundStmt 0x563f2eb20d28 <col:72, line:1329:5>
|   `-ReturnStmt 0x563f2eb20d18 <line:1328:9, col:16>
|     `-CXXBoolLiteralExpr 0x563f2eb20d08 <col:16> 'bool' true
|-CXXMethodDecl 0x563f2eb20828 <line:1330:5, line:1333:5> line:1330:17 parse 'bool (const String &, String &, const ArgContext &)' static
| |-ParmVarDecl 0x563f2eb20658 <col:23, col:37> col:37 used str 'const String &'
| |-ParmVarDecl 0x563f2eb206d0 <col:42, col:50> col:50 used result 'String &'
| |-ParmVarDecl 0x563f2eb20748 <col:58, col:79> col:77 'const ArgContext &' cinit
| | `-DeclRefExpr 0x563f2eb20cc8 <col:79> 'const ArgContext' lvalue Var 0x563f2eafce58 'blank_args' 'const ArgContext'
| `-CompoundStmt 0x563f2eb20e10 <col:91, line:1333:5>
|   |-CXXOperatorCallExpr 0x563f2eb20db8 <line:1331:9, col:18> 'String' lvalue
|   | |-ImplicitCastExpr 0x563f2eb20da0 <col:16> 'String &(*)(const String &)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x563f2eb20d80 <col:16> 'String &(const String &)' lvalue CXXMethod 0x563f2e801350 'operator=' 'String &(const String &)'
|   | |-DeclRefExpr 0x563f2eb20d40 <col:9> 'String' lvalue ParmVar 0x563f2eb206d0 'result' 'String &'
|   | `-DeclRefExpr 0x563f2eb20d60 <col:18> 'const String' lvalue ParmVar 0x563f2eb20658 'str' 'const String &'
|   `-ReturnStmt 0x563f2eb20e00 <line:1332:9, col:16>
|     `-CXXBoolLiteralExpr 0x563f2eb20df0 <col:16> 'bool' true
|-CXXMethodDecl 0x563f2eb20bd8 <line:1334:5, line:1337:5> line:1334:17 parse 'bool (const String &, Vector<String> &, const ArgContext &)' static
| |-ParmVarDecl 0x563f2eb208f0 <col:23, col:37> col:37 used str 'const String &'
| |-ParmVarDecl 0x563f2eb20a40 <col:42, col:58> col:58 used result 'Vector<String> &'
| |-ParmVarDecl 0x563f2eb20ab8 <col:66, col:87> col:85 'const ArgContext &' cinit
| | `-DeclRefExpr 0x563f2eb20ce8 <col:87> 'const ArgContext' lvalue Var 0x563f2eafce58 'blank_args' 'const ArgContext'
| `-CompoundStmt 0x563f2eb20f48 <col:99, line:1337:5>
|   |-CXXMemberCallExpr 0x563f2eb20f00 <line:1335:9, col:29> 'void'
|   | |-MemberExpr 0x563f2eb20ed0 <col:9, col:16> '<bound member function type>' .push_back 0x563f2ea64b98
|   | | `-DeclRefExpr 0x563f2eb20e30 <col:9> 'Vector<String>':'Vector<String>' lvalue ParmVar 0x563f2eb20a40 'result' 'Vector<String> &'
|   | `-DeclRefExpr 0x563f2eb20eb0 <col:26> 'const String' lvalue ParmVar 0x563f2eb208f0 'str' 'const String &'
|   `-ReturnStmt 0x563f2eb20f38 <line:1336:9, col:16>
|     `-CXXBoolLiteralExpr 0x563f2eb20f28 <col:16> 'bool' true
|-CXXConstructorDecl 0x563f2ebffa90 <line:1326:7> col:7 implicit referenced constexpr AnyArg 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x563f2ebffb98 <col:7> col:7 implicit constexpr AnyArg 'void (const AnyArg &)' inline default trivial noexcept-unevaluated 0x563f2ebffb98
| `-ParmVarDecl 0x563f2ebffca8 <col:7> col:7 'const AnyArg &'
|-CXXConstructorDecl 0x563f2ebffd48 <col:7> col:7 implicit used constexpr AnyArg 'void (AnyArg &&) noexcept' inline default trivial
| |-ParmVarDecl 0x563f2ebffe58 <col:7> col:7 'AnyArg &&'
| `-CompoundStmt 0x563f2ec00590 <col:7>
`-CXXDestructorDecl 0x563f2ebffef8 <col:7> col:7 implicit referenced ~AnyArg 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.AnyArg = type { i8 }
  NonVirtualBaseLLVMType:%class.AnyArg = type { i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563f2eb05580 <../dummy_inc/click/args.hh:1013:1, line:1027:1> line:1013:7 referenced class NumArg definition
|-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |-DefaultConstructor exists trivial constexpr defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x563f2eb05698 <col:1, col:7> col:7 implicit class NumArg
|-AccessSpecDecl 0x563f2eb05728 <col:16, col:22> col:16 public
|-EnumDecl 0x563f2eb05750 <line:1014:5, line:1026:5> line:1014:5
| |-EnumConstantDecl 0x563f2eb05850 <line:1015:9, col:21> col:9 status_ok 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| | `-ImplicitCastExpr 0x563f2eb05aa0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563f2eb05830 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x563f2eb05810 <col:21> 'int' 0
| |-EnumConstantDecl 0x563f2eb058e0 <line:1016:9, col:24> col:9 referenced status_inval 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| | `-ImplicitCastExpr 0x563f2eb05ab8 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563f2eb058c0 <col:24> 'int' Int: 22
| |     `-IntegerLiteral 0x563f2eb058a0 <col:24> 'int' 22
| |-EnumConstantDecl 0x563f2eb05970 <line:1017:9, col:24> col:9 referenced status_range 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| | `-ImplicitCastExpr 0x563f2eb05ad0 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563f2eb05950 <col:24> 'int' Int: 34
| |     `-IntegerLiteral 0x563f2eb05930 <col:24> 'int' 34
| |-EnumConstantDecl 0x563f2eb05a00 <line:1019:9, col:25> col:9 status_notsup 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| | `-ImplicitCastExpr 0x563f2eb05ae8 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563f2eb059e0 <col:25> 'int' Int: 95
| |     `-IntegerLiteral 0x563f2eb059c0 <col:25> 'int' 95
| `-EnumConstantDecl 0x563f2eb05a50 <line:1025:9> col:9 status_unitless 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
|-CXXConstructorDecl 0x563f2eb07460 <line:1013:7> col:7 implicit used constexpr NumArg 'void () noexcept' inline default trivial
| `-CompoundStmt 0x563f2eb07898 <col:7>
|-CXXConstructorDecl 0x563f2eb07568 <col:7> col:7 implicit constexpr NumArg 'void (const NumArg &)' inline default trivial noexcept-unevaluated 0x563f2eb07568
| `-ParmVarDecl 0x563f2eb07678 <col:7> col:7 'const NumArg &'
|-CXXConstructorDecl 0x563f2eb07718 <col:7> col:7 implicit constexpr NumArg 'void (NumArg &&)' inline default trivial noexcept-unevaluated 0x563f2eb07718
| `-ParmVarDecl 0x563f2eb07828 <col:7> col:7 'NumArg &&'
`-CXXDestructorDecl 0x563f2eb09998 <col:7> col:7 implicit ~NumArg 'void ()' inline default trivial noexcept-unevaluated 0x563f2eb09998

Layout: <CGRecordLayout
  LLVMType:%class.NumArg = type { i8 }
  NonVirtualBaseLLVMType:%class.NumArg = type { i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563f2eb05b18 <../dummy_inc/click/args.hh:1040:1, line:1095:1> line:1040:7 referenced class IntArg definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-public 'NumArg'
|-CXXRecordDecl 0x563f2eb05c78 <col:1, col:7> col:7 implicit referenced class IntArg
|-AccessSpecDecl 0x563f2eb05d08 <col:32, col:38> col:32 public
|-TypedefDecl 0x563f2eb05d40 <line:1042:5, col:22> col:22 referenced limb_type 'uint32_t':'unsigned int'
| `-TypedefType 0x563f2e60ab10 'uint32_t' sugar
|   |-Typedef 0x563f2e51a4c8 'uint32_t'
|   `-TypedefType 0x563f2e4f35a0 '__uint32_t' sugar
|     |-Typedef 0x563f2e4f3198 '__uint32_t'
|     `-BuiltinType 0x563f2e4b1620 'unsigned int'
|-CXXConstructorDecl 0x563f2eb05e88 <line:1044:5, line:1046:5> line:1044:5 used IntArg 'void (int)'
| |-ParmVarDecl 0x563f2eb05db0 <col:12, col:20> col:16 used b 'int' cinit
| | `-IntegerLiteral 0x563f2eb07368 <col:20> 'int' 0
| |-CXXCtorInitializer 'NumArg'
| | `-CXXConstructExpr 0x563f2eb078a8 <col:5> 'NumArg' 'void () noexcept'
| |-CXXCtorInitializer Field 0x563f2eb06c20 'base' 'int'
| | `-ImplicitCastExpr 0x563f2eb07408 <line:1045:16> 'int' <LValueToRValue>
| |   `-DeclRefExpr 0x563f2eb073c8 <col:16> 'int' lvalue ParmVar 0x563f2eb05db0 'b' 'int'
| `-CompoundStmt 0x563f2eb07918 <col:19, line:1046:5>
|-CXXMethodDecl 0x563f2eb06380 <line:1048:5, line:1050:50> line:1048:17 parse 'const char *(const char *, const char *, bool, int, IntArg::limb_type *, int)'
| |-ParmVarDecl 0x563f2eb05f50 <col:23, col:35> col:35 begin 'const char *'
| |-ParmVarDecl 0x563f2eb05fd0 <col:42, col:54> col:54 end 'const char *'
| |-ParmVarDecl 0x563f2eb06048 <line:1049:23, col:28> col:28 is_signed 'bool'
| |-ParmVarDecl 0x563f2eb060c8 <col:39, col:43> col:43 size 'int'
| |-ParmVarDecl 0x563f2eb06188 <line:1050:23, col:34> col:34 value 'IntArg::limb_type *'
| `-ParmVarDecl 0x563f2eb06208 <col:41, col:45> col:45 nlimb 'int'
|-FunctionTemplateDecl 0x563f2eb067d8 <line:1052:5, line:1067:5> line:1053:10 parse_saturating
| |-TemplateTypeParmDecl 0x563f2eb06450 <line:1052:14, col:23> col:23 referenced typename depth 0 index 0 V
| |-CXXMethodDecl 0x563f2eb06738 <line:1053:5, line:1067:5> line:1053:10 parse_saturating 'bool (const String &, V &, const ArgContext &)'
| | |-ParmVarDecl 0x563f2eb064f8 <col:27, col:41> col:41 referenced str 'const String &'
| | |-ParmVarDecl 0x563f2eb06598 <col:46, col:49> col:49 referenced result 'V &'
| | |-ParmVarDecl 0x563f2eb06610 <col:57, col:82> col:75 referenced args 'const ArgContext &' cinit
| | | `-DeclRefExpr 0x563f2eb07388 <col:82> 'const ArgContext' lvalue Var 0x563f2eafce58 'blank_args' 'const ArgContext'
| | `-CompoundStmt 0x563f2eb08848 <col:94, line:1067:5>
| |   |-DeclStmt 0x563f2eb07aa8 <line:1054:9, col:64>
| |   | `-VarDecl 0x563f2eb07938 <col:9, col:55> col:24 referenced is_signed 'const bool' constexpr cinit
| |   |   `-CXXDependentScopeMemberExpr 0x563f2eb07a60 <col:36, col:55> '<dependent type>' lvalue ->is_signed
| |   |-DeclStmt 0x563f2eb07cc8 <line:1055:9, col:91>
| |   | `-VarDecl 0x563f2eb07ad8 <col:9, col:90> col:23 referenced nlimb 'const int' constexpr cinit
| |   |   `-CXXFunctionalCastExpr 0x563f2eb07ca0 <col:31, col:90> 'int' functional cast to int <Dependent>
| |   |     `-BinaryOperator 0x563f2eb07c80 <col:35, col:89> 'unsigned long' '/'
| |   |       |-ParenExpr 0x563f2eb07c30 <col:35, col:69> 'unsigned long'
| |   |       | `-BinaryOperator 0x563f2eb07c10 <col:36, col:68> 'unsigned long' '-'
| |   |       |   |-BinaryOperator 0x563f2eb07bb8 <col:36, col:64> 'unsigned long' '+'
| |   |       |   | |-UnaryExprOrTypeTraitExpr 0x563f2eb07b68 <col:36, col:44> 'unsigned long' sizeof 'V'
| |   |       |   | `-UnaryExprOrTypeTraitExpr 0x563f2eb07b98 <col:48, col:64> 'unsigned long' sizeof 'IntArg::limb_type':'unsigned int'
| |   |       |   `-ImplicitCastExpr 0x563f2eb07bf8 <col:68> 'unsigned long' <IntegralCast>
| |   |       |     `-IntegerLiteral 0x563f2eb07bd8 <col:68> 'int' 1
| |   |       `-UnaryExprOrTypeTraitExpr 0x563f2eb07c60 <col:73, col:89> 'unsigned long' sizeof 'IntArg::limb_type':'unsigned int'
| |   |-DeclStmt 0x563f2eb07e28 <line:1056:9, col:27>
| |   | `-VarDecl 0x563f2eb07dc0 <col:9, col:26> col:19 referenced x 'IntArg::limb_type [nlimb]'
| |   |-IfStmt 0x563f2eb08270 <line:1057:9, line:1059:22>
| |   | |-CXXOperatorCallExpr 0x563f2eb081a0 <line:1057:13, line:1058:24> '<dependent type>'
| |   | | |-UnresolvedLookupExpr 0x563f2eb08120 <col:13> '<overloaded function type>' lvalue (ADL) = 'operator!=' 0x563f2e9d4cf8 0x563f2e81e2d8 0x563f2e81dfb0 0x563f2e80e780 0x563f2e80e430 0x563f2e80dd20 0x563f2e7e0690 0x563f2e76d940
| |   | | |-CallExpr 0x563f2eb08060 <line:1057:13, col:78> '<dependent type>'
| |   | | | |-UnresolvedMemberExpr 0x563f2eb07e50 <col:13> '<bound member function type>' lvalue
| |   | | | |-CXXMemberCallExpr 0x563f2eb07f00 <col:19, col:29> 'String::const_iterator':'const char *'
| |   | | | | `-MemberExpr 0x563f2eb07ed0 <col:19, col:23> '<bound member function type>' .begin 0x563f2e7fd988
| |   | | | |   `-DeclRefExpr 0x563f2eb07eb0 <col:19> 'const String' lvalue ParmVar 0x563f2eb064f8 'str' 'const String &'
| |   | | | |-CXXMemberCallExpr 0x563f2eb07f70 <col:32, col:40> 'String::const_iterator':'const char *'
| |   | | | | `-MemberExpr 0x563f2eb07f40 <col:32, col:36> '<bound member function type>' .end 0x563f2e7fdba0
| |   | | | |   `-DeclRefExpr 0x563f2eb07f20 <col:32> 'const String' lvalue ParmVar 0x563f2eb064f8 'str' 'const String &'
| |   | | | |-DeclRefExpr 0x563f2eb07f90 <col:43> 'const bool' lvalue Var 0x563f2eb07938 'is_signed' 'const bool'
| |   | | | |-CXXFunctionalCastExpr 0x563f2eb07ff8 <col:54, col:67> 'int' functional cast to int <Dependent>
| |   | | | | `-UnaryExprOrTypeTraitExpr 0x563f2eb07fd8 <col:58, col:66> 'unsigned long' sizeof 'V'
| |   | | | |-DeclRefExpr 0x563f2eb08020 <col:70> 'IntArg::limb_type [nlimb]' lvalue Var 0x563f2eb07dc0 'x' 'IntArg::limb_type [nlimb]'
| |   | | | `-DeclRefExpr 0x563f2eb08040 <col:73> 'const int' lvalue Var 0x563f2eb07ad8 'nlimb' 'const int'
| |   | | `-CXXMemberCallExpr 0x563f2eb08100 <line:1058:16, col:24> 'String::const_iterator':'const char *'
| |   | |   `-MemberExpr 0x563f2eb080d0 <col:16, col:20> '<bound member function type>' .end 0x563f2e7fdba0
| |   | |     `-DeclRefExpr 0x563f2eb080b0 <col:16> 'const String' lvalue ParmVar 0x563f2eb064f8 'str' 'const String &'
| |   | `-BinaryOperator 0x563f2eb08250 <line:1059:13, col:22> 'int' lvalue '='
| |   |   |-MemberExpr 0x563f2eb081e8 <col:13> 'int' lvalue ->status 0x563f2eb06c88
| |   |   | `-CXXThisExpr 0x563f2eb081d8 <col:13> 'IntArg *' implicit this
| |   |   `-ImplicitCastExpr 0x563f2eb08238 <col:22> 'int' <IntegralCast>
| |   |     `-DeclRefExpr 0x563f2eb08218 <col:22> 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)' EnumConstant 0x563f2eb058e0 'status_inval' 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| |   |-IfStmt 0x563f2eb084c0 <line:1060:9, line:1063:9>
| |   | |-BinaryOperator 0x563f2eb083a8 <line:1060:13, col:33> 'bool' '&&'
| |   | | |-ImplicitCastExpr 0x563f2eb08390 <col:13> 'bool' <IntegralToBoolean>
| |   | | | `-ImplicitCastExpr 0x563f2eb08378 <col:13> 'int' <LValueToRValue>
| |   | | |   `-MemberExpr 0x563f2eb08298 <col:13> 'int' lvalue ->status 0x563f2eb06c88
| |   | | |     `-CXXThisExpr 0x563f2eb08288 <col:13> 'IntArg *' implicit this
| |   | | `-BinaryOperator 0x563f2eb08358 <col:23, col:33> 'bool' '!='
| |   | |   |-ImplicitCastExpr 0x563f2eb08328 <col:23> 'int' <LValueToRValue>
| |   | |   | `-MemberExpr 0x563f2eb082d8 <col:23> 'int' lvalue ->status 0x563f2eb06c88
| |   | |   |   `-CXXThisExpr 0x563f2eb082c8 <col:23> 'IntArg *' implicit this
| |   | |   `-ImplicitCastExpr 0x563f2eb08340 <col:33> 'int' <IntegralCast>
| |   | |     `-DeclRefExpr 0x563f2eb08308 <col:33> 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)' EnumConstant 0x563f2eb05970 'status_range' 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| |   | `-CompoundStmt 0x563f2eb084a0 <col:47, line:1063:9>
| |   |   |-CXXMemberCallExpr 0x563f2eb08440 <line:1061:13, col:40> 'void'
| |   |   | |-MemberExpr 0x563f2eb083e8 <col:13, col:18> '<bound member function type>' .error 0x563f2eaada30
| |   |   | | `-DeclRefExpr 0x563f2eb083c8 <col:13> 'const ArgContext' lvalue ParmVar 0x563f2eb06610 'args' 'const ArgContext &'
| |   |   | `-ImplicitCastExpr 0x563f2eb08468 <col:24> 'const char *' <ArrayToPointerDecay>
| |   |   |   `-StringLiteral 0x563f2eb08418 <col:24> 'const char [15]' lvalue "invalid number"
| |   |   `-ReturnStmt 0x563f2eb08490 <line:1062:13, col:20>
| |   |     `-CXXBoolLiteralExpr 0x563f2eb08480 <col:20> 'bool' false
| |   |-DeclStmt 0x563f2eb08698 <line:1064:9, col:64>
| |   | `-TypedefDecl 0x563f2eb08640 <col:9, col:49> col:49 referenced unsigned_v_type 'typename make_unsigned<V>::type'
| |   |   `-DependentNameType 0x563f2eb085d0 'typename make_unsigned<V>::type' dependent
| |   |-CallExpr 0x563f2eb087f8 <line:1065:9, col:71> '<dependent type>'
| |   | |-UnresolvedLookupExpr 0x563f2eb086b0 <col:9> '<overloaded function type>' lvalue (ADL) = 'extract_integer' 0x563f2e7a1b28
| |   | |-DeclRefExpr 0x563f2eb086f8 <col:25> 'IntArg::limb_type [nlimb]' lvalue Var 0x563f2eb07dc0 'x' 'IntArg::limb_type [nlimb]'
| |   | `-CXXReinterpretCastExpr 0x563f2eb087c8 <col:28, col:70> 'unsigned_v_type':'typename make_unsigned<V>::type' lvalue reinterpret_cast<unsigned_v_type &> <Dependent>
| |   |   `-DeclRefExpr 0x563f2eb08740 <col:64> 'V' lvalue ParmVar 0x563f2eb06598 'result' 'V &'
| |   `-ReturnStmt 0x563f2eb08838 <line:1066:9, col:16>
| |     `-CXXBoolLiteralExpr 0x563f2eb08828 <col:16> 'bool' true
| `-CXXMethodDecl 0x563f2ec00f98 <line:1053:5, line:1067:5> line:1053:10 used parse_saturating 'bool (const String &, unsigned long &, const ArgContext &)'
|   |-TemplateArgument type 'unsigned long'
|   |-ParmVarDecl 0x563f2ec00d30 <col:27, col:41> col:41 str 'const String &'
|   |-ParmVarDecl 0x563f2ec00e08 <col:46, col:49> col:49 result 'unsigned long &'
|   `-ParmVarDecl 0x563f2ec00e70 <col:57, col:82> col:75 args 'const ArgContext &' cinit
|     `-DeclRefExpr 0x563f2eb07388 <col:82> 'const ArgContext' lvalue Var 0x563f2eafce58 'blank_args' 'const ArgContext'
|-FunctionTemplateDecl 0x563f2eb06b98 <line:1069:5, line:1083:5> line:1070:10 parse
| |-TemplateTypeParmDecl 0x563f2eb06848 <line:1069:14, col:23> col:23 referenced typename depth 0 index 0 V
| `-CXXMethodDecl 0x563f2eb06af8 <line:1070:5, line:1083:5> line:1070:10 parse 'bool (const String &, V &, const ArgContext &)'
|   |-ParmVarDecl 0x563f2eb068f8 <col:16, col:30> col:30 referenced str 'const String &'
|   |-ParmVarDecl 0x563f2eb06998 <col:35, col:38> col:38 referenced result 'V &'
|   |-ParmVarDecl 0x563f2eb06a10 <col:46, col:71> col:64 referenced args 'const ArgContext &' cinit
|   | `-DeclRefExpr 0x563f2eb073a8 <col:71> 'const ArgContext' lvalue Var 0x563f2eafce58 'blank_args' 'const ArgContext'
|   `-CompoundStmt 0x563f2eb08fb8 <col:83, line:1083:5>
|     |-DeclStmt 0x563f2eb08910 <line:1071:9, col:12>
|     | `-VarDecl 0x563f2eb088a8 <col:9, col:11> col:11 referenced x 'V'
|     `-IfStmt 0x563f2eb08f90 <line:1072:9, line:1082:9> has_else
|       |-BinaryOperator 0x563f2eb08ba0 <line:1072:13, line:1073:49> '<dependent type>' '||'
|       | |-UnaryOperator 0x563f2eb08a28 <line:1072:13, col:43> '<dependent type>' prefix '!' cannot overflow
|       | | `-CallExpr 0x563f2eb089f0 <col:14, col:43> '<dependent type>'
|       | |   |-UnresolvedMemberExpr 0x563f2eb08938 <col:14> '<bound member function type>' lvalue
|       | |   |-DeclRefExpr 0x563f2eb08990 <col:31> 'const String' lvalue ParmVar 0x563f2eb068f8 'str' 'const String &'
|       | |   |-DeclRefExpr 0x563f2eb089b0 <col:36> 'V' lvalue Var 0x563f2eb088a8 'x' 'V'
|       | |   `-DeclRefExpr 0x563f2eb089d0 <col:39> 'const ArgContext' lvalue ParmVar 0x563f2eb06a10 'args' 'const ArgContext &'
|       | `-ParenExpr 0x563f2eb08b80 <line:1073:16, col:49> 'bool'
|       |   `-BinaryOperator 0x563f2eb08b60 <col:17, col:37> 'bool' '&&'
|       |     |-ImplicitCastExpr 0x563f2eb08b48 <col:17> 'bool' <IntegralToBoolean>
|       |     | `-ImplicitCastExpr 0x563f2eb08b30 <col:17> 'int' <LValueToRValue>
|       |     |   `-MemberExpr 0x563f2eb08a50 <col:17> 'int' lvalue ->status 0x563f2eb06c88
|       |     |     `-CXXThisExpr 0x563f2eb08a40 <col:17> 'IntArg *' implicit this
|       |     `-BinaryOperator 0x563f2eb08b10 <col:27, col:37> 'bool' '!='
|       |       |-ImplicitCastExpr 0x563f2eb08ae0 <col:27> 'int' <LValueToRValue>
|       |       | `-MemberExpr 0x563f2eb08a90 <col:27> 'int' lvalue ->status 0x563f2eb06c88
|       |       |   `-CXXThisExpr 0x563f2eb08a80 <col:27> 'IntArg *' implicit this
|       |       `-ImplicitCastExpr 0x563f2eb08af8 <col:37> 'int' <IntegralCast>
|       |         `-DeclRefExpr 0x563f2eb08ac0 <col:37> 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)' EnumConstant 0x563f2eb05970 'status_range' 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
|       |-ReturnStmt 0x563f2eb08bd0 <line:1074:13, col:20>
|       | `-CXXBoolLiteralExpr 0x563f2eb08bc0 <col:20> 'bool' false
|       `-IfStmt 0x563f2eb08f68 <line:1075:14, line:1082:9> has_else
|         |-BinaryOperator 0x563f2eb08c70 <line:1075:18, col:28> 'bool' '=='
|         | |-ImplicitCastExpr 0x563f2eb08c40 <col:18> 'int' <LValueToRValue>
|         | | `-MemberExpr 0x563f2eb08bf0 <col:18> 'int' lvalue ->status 0x563f2eb06c88
|         | |   `-CXXThisExpr 0x563f2eb08be0 <col:18> 'IntArg *' implicit this
|         | `-ImplicitCastExpr 0x563f2eb08c58 <col:28> 'int' <IntegralCast>
|         |   `-DeclRefExpr 0x563f2eb08c20 <col:28> 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)' EnumConstant 0x563f2eb05970 'status_range' 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
|         |-CompoundStmt 0x563f2eb08ea8 <col:42, line:1079:9>
|         | |-CallExpr 0x563f2eb08e50 <line:1076:13, line:1077:45> '<dependent type>'
|         | | |-MemberExpr 0x563f2eb08ca0 <line:1076:13> '<bound member function type>' ->range_error 0x563f2eb07298
|         | | | `-CXXThisExpr 0x563f2eb08c90 <col:13> 'IntArg *' implicit this
|         | | |-DeclRefExpr 0x563f2eb08cd0 <col:25> 'const ArgContext' lvalue ParmVar 0x563f2eb06a10 'args' 'const ArgContext &'
|         | | |-CXXDependentScopeMemberExpr 0x563f2eb08db0 <col:31, col:50> '<dependent type>' lvalue ->is_signed
|         | | `-CXXUnresolvedConstructExpr 0x563f2eb08e28 <line:1077:25, col:44> 'click_int_large_t':'long long' 'click_int_large_t':'long long'
|         | |   `-DeclRefExpr 0x563f2eb08e08 <col:43> 'V' lvalue Var 0x563f2eb088a8 'x' 'V'
|         | `-ReturnStmt 0x563f2eb08e98 <line:1078:13, col:20>
|         |   `-CXXBoolLiteralExpr 0x563f2eb08e88 <col:20> 'bool' false
|         `-CompoundStmt 0x563f2eb08f48 <line:1079:16, line:1082:9>
|           |-BinaryOperator 0x563f2eb08f08 <line:1080:13, col:22> '<dependent type>' '='
|           | |-DeclRefExpr 0x563f2eb08ec8 <col:13> 'V' lvalue ParmVar 0x563f2eb06998 'result' 'V &'
|           | `-DeclRefExpr 0x563f2eb08ee8 <col:22> 'V' lvalue Var 0x563f2eb088a8 'x' 'V'
|           `-ReturnStmt 0x563f2eb08f38 <line:1081:13, col:20>
|             `-CXXBoolLiteralExpr 0x563f2eb08f28 <col:20> 'bool' true
|-FieldDecl 0x563f2eb06c20 <line:1085:5, col:9> col:9 base 'int'
|-FieldDecl 0x563f2eb06c88 <line:1086:5, col:9> col:9 referenced status 'int'
|-AccessSpecDecl 0x563f2eb06cd8 <line:1088:3, col:12> col:3 protected
|-CXXMethodDecl 0x563f2eb06f90 <line:1090:5, line:1091:51> line:1090:24 span 'const char *(const char *, const char *, bool, int &)' static
| |-ParmVarDecl 0x563f2eb06d18 <col:29, col:41> col:41 begin 'const char *'
| |-ParmVarDecl 0x563f2eb06d98 <col:48, col:60> col:60 end 'const char *'
| |-ParmVarDecl 0x563f2eb06e10 <line:1091:29, col:34> col:34 is_signed 'bool'
| `-ParmVarDecl 0x563f2eb06e90 <col:45, col:50> col:50 b 'int &'
|-CXXMethodDecl 0x563f2eb07298 <line:1092:5, line:1093:45> line:1092:10 referenced range_error 'void (const ArgContext &, bool, click_int_large_t)'
| |-ParmVarDecl 0x563f2eb07060 <col:22, col:40> col:40 args 'const ArgContext &'
| |-ParmVarDecl 0x563f2eb070d8 <col:46, col:51> col:51 is_signed 'bool'
| `-ParmVarDecl 0x563f2eb07170 <line:1093:22, col:40> col:40 value 'click_int_large_t':'long long'
|-CXXConstructorDecl 0x563f2eb09818 <line:1040:7> col:7 implicit constexpr IntArg 'void (const IntArg &)' inline default trivial noexcept-unevaluated 0x563f2eb09818
| `-ParmVarDecl 0x563f2eb09928 <col:7> col:7 'const IntArg &'
`-CXXConstructorDecl 0x563f2eb09aa8 <col:7> col:7 implicit constexpr IntArg 'void (IntArg &&)' inline default trivial noexcept-unevaluated 0x563f2eb09aa8
  `-ParmVarDecl 0x563f2eb09bb8 <col:7> col:7 'IntArg &&'

Layout: <CGRecordLayout
  LLVMType:%class.IntArg = type { i32, i32 }
  NonVirtualBaseLLVMType:%class.IntArg = type { i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | union Packet::Anno
         0 |   char [48] c
         0 |   uint8_t [48] u8
         0 |   uint16_t [24] u16
         0 |   uint32_t [12] u32
         0 |   uint64_t [6] u64
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Packet::AllAnno
         0 |   union Packet::Anno cb
         0 |     char [48] c
         0 |     uint8_t [48] u8
         0 |     uint16_t [24] u16
         0 |     uint32_t [12] u32
         0 |     uint64_t [6] u64
        48 |   unsigned char * mac
        56 |   unsigned char * nh
        64 |   unsigned char * h
        72 |   enum Packet::PacketType pkt_type
        76 |   char [8] timestamp
        88 |   class Packet * next
        96 |   class Packet * prev
           | [sizeof=104, dsize=104, align=8,
           |  nvsize=104, nvalign=8]

*** Dumping AST Record Layout
         0 | class Packet
         0 |   class atomic_uint32_t _use_count
         0 |     uint32_t _val
         8 |   class Packet * _data_packet
        16 |   unsigned char * _head
        24 |   unsigned char * _data
        32 |   unsigned char * _tail
        40 |   unsigned char * _end
        48 |   struct Packet::AllAnno _aa
        48 |     union Packet::Anno cb
        48 |       char [48] c
        48 |       uint8_t [48] u8
        48 |       uint16_t [24] u16
        48 |       uint32_t [12] u32
        48 |       uint64_t [6] u64
        96 |     unsigned char * mac
       104 |     unsigned char * nh
       112 |     unsigned char * h
       120 |     enum Packet::PacketType pkt_type
       124 |     char [8] timestamp
       136 |     class Packet * next
       144 |     class Packet * prev
       152 |   Packet::buffer_destructor_type _destructor
       160 |   void * _destructor_argument
           | [sizeof=168, dsize=168, align=8,
           |  nvsize=168, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563f2e9ef7d8 prev 0x563f2e9e49e0 <../dummy_inc/click/packet.hh:702:5, line:711:5> line:702:11 referenced union Anno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x563f2e9ef8d0 <col:5, col:11> col:11 implicit union Anno
|-FieldDecl 0x563f2e9ef9c0 <line:703:2, col:18> col:7 referenced c 'char [48]'
|-FieldDecl 0x563f2e9efae8 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
|-FieldDecl 0x563f2e9efc68 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
|-FieldDecl 0x563f2e9efde8 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
|-FieldDecl 0x563f2e9eff68 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
|-CXXConstructorDecl 0x563f2ea00d98 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| `-CompoundStmt 0x563f2ea01608 <col:11>
|-CXXDestructorDecl 0x563f2ea00e70 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x563f2ea00fa8 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x563f2ea00fa8
| `-ParmVarDecl 0x563f2ea010b8 <col:11> col:11 'const Packet::Anno &'
|-CXXConstructorDecl 0x563f2ea01158 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x563f2ea01158
| `-ParmVarDecl 0x563f2ea01268 <col:11> col:11 'Packet::Anno &&'
|-CXXMethodDecl 0x563f2ea04028 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| |-ParmVarDecl 0x563f2ea04138 <col:11> col:11 'const Packet::Anno &'
| `-CompoundStmt 0x563f2ea043b8 <col:11>
|   `-ReturnStmt 0x563f2ea043a8 <col:11>
|     `-UnaryOperator 0x563f2ea04390 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x563f2ea04380 <col:11> 'Packet::Anno *' this
`-CXXMethodDecl 0x563f2ea041a8 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x563f2ea041a8
  `-ParmVarDecl 0x563f2ea042b8 <col:11> col:11 'Packet::Anno &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Packet::Anno" = type { [6 x i64] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563f2e9effd0 <../dummy_inc/click/packet.hh:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x563f2e9f00e8 <col:5, col:12> col:12 implicit struct AllAnno
|-FieldDecl 0x563f2e9f0188 <line:717:2, col:7> col:7 cb 'Packet::Anno'
|-FieldDecl 0x563f2e9f01f0 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
|-FieldDecl 0x563f2e9f0258 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
|-FieldDecl 0x563f2e9f02c0 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
|-FieldDecl 0x563f2e9f0320 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
|-FieldDecl 0x563f2e9f03e0 <line:722:2, col:34> col:7 timestamp 'char [8]'
|-FieldDecl 0x563f2e9f0440 <line:723:2, col:10> col:10 referenced next 'Packet *'
|-FieldDecl 0x563f2e9f04a0 <line:724:2, col:10> col:10 referenced prev 'Packet *'
|-CXXConstructorDecl 0x563f2ea00ca8 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| |-CXXCtorInitializer Field 0x563f2e9f0188 'cb' 'Packet::Anno'
| | `-CXXConstructExpr 0x563f2ea01618 <col:12> 'Packet::Anno' 'void () noexcept'
| `-CompoundStmt 0x563f2ea01670 <col:12>
|-CXXConstructorDecl 0x563f2ea012d8 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x563f2ea012d8
| `-ParmVarDecl 0x563f2ea013e8 <col:12> col:12 'const Packet::AllAnno &'
|-CXXConstructorDecl 0x563f2ea01488 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x563f2ea01488
| `-ParmVarDecl 0x563f2ea01598 <col:12> col:12 'Packet::AllAnno &&'
`-CXXDestructorDecl 0x563f2ea03710 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  NonVirtualBaseLLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563f2e9de0f0 <../dummy_inc/click/packet.hh:35:1, line:775:1> line:35:7 referenced class Packet definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x563f2e9de208 <col:1, col:7> col:7 implicit referenced class Packet
|-AccessSpecDecl 0x563f2e9de298 <col:16, col:22> col:16 public
|-EnumDecl 0x563f2e9de2c0 <line:41:5, line:50:5> line:41:5
| |-EnumConstantDecl 0x563f2e9de3c0 <line:45:2, col:21> col:2 referenced default_headroom 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| | `-ImplicitCastExpr 0x563f2e9de4a0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563f2e9de3a0 <col:21> 'int' Int: 28
| |     `-IntegerLiteral 0x563f2e9de380 <col:21> 'int' 28
| `-EnumConstantDecl 0x563f2e9de450 <line:48:2, col:22> col:2 referenced min_buffer_length 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
|   `-ImplicitCastExpr 0x563f2e9de4b8 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x563f2e9de430 <col:22> 'int' Int: 64
|       `-IntegerLiteral 0x563f2e9de410 <col:22> 'int' 64
|-CXXMethodDecl 0x563f2e9de7f8 <line:52:5, line:53:75> line:52:28 used make 'WritablePacket *(uint32_t, const void *, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x563f2e9de4e0 <col:33, col:42> col:42 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x563f2e9de560 <col:52, col:64> col:64 data 'const void *'
| |-ParmVarDecl 0x563f2e9de5d8 <line:53:5, col:14> col:14 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x563f2e9de650 <col:22, col:31> col:31 tailroom 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x563f2e9de8b8 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x563f2e9deab8 <line:54:5, col:109> col:35 make 'WritablePacket *(const void *, uint32_t)' static inline
| |-ParmVarDecl 0x563f2e9de930 <col:40, col:52> col:52 data 'const void *'
| |-ParmVarDecl 0x563f2e9de9a8 <col:58, col:67> col:67 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x563f2e9deb68 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x563f2e9decc8 <line:55:5, col:91> col:35 make 'WritablePacket *(uint32_t)' static inline
| |-ParmVarDecl 0x563f2e9debd8 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x563f2e9ded70 <col:72> warn_unused_result ""
|-TypedefDecl 0x563f2e9df0d0 <line:65:5, col:89> col:20 referenced buffer_destructor_type 'void (*)(unsigned char *, size_t, void *)'
| `-PointerType 0x563f2e9df060 'void (*)(unsigned char *, size_t, void *)'
|   `-ParenType 0x563f2e9df000 'void (unsigned char *, size_t, void *)' sugar
|     `-FunctionProtoType 0x563f2e9defc0 'void (unsigned char *, size_t, void *)' cdecl
|       |-BuiltinType 0x563f2e4b14e0 'void'
|       |-PointerType 0x563f2e75e270 'unsigned char *'
|       | `-BuiltinType 0x563f2e4b15e0 'unsigned char'
|       |-TypedefType 0x563f2e55a860 'size_t' sugar
|       | |-Typedef 0x563f2e521be0 'size_t'
|       | `-BuiltinType 0x563f2e4b1640 'unsigned long'
|       `-PointerType 0x563f2e4b1ce0 'void *'
|         `-BuiltinType 0x563f2e4b14e0 'void'
|-CXXMethodDecl 0x563f2e9df548 <line:66:5, line:68:131> line:66:28 make 'WritablePacket *(unsigned char *, uint32_t, Packet::buffer_destructor_type, void *, int, int)' static
| |-ParmVarDecl 0x563f2e9df140 <col:33, col:48> col:48 data 'unsigned char *'
| |-ParmVarDecl 0x563f2e9df1b8 <col:54, col:63> col:63 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x563f2e9df250 <line:67:5, col:28> col:28 buffer_destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| |-ParmVarDecl 0x563f2e9df2d0 <line:68:33, col:58> col:39 argument 'void *' cinit
| | `-CStyleCastExpr 0x563f2e9f9c40 <col:50, col:58> 'void *' <NoOp>
| |   `-ImplicitCastExpr 0x563f2e9f9c28 <col:58> 'void *' <NullToPointer> part_of_explicit_cast
| |     `-IntegerLiteral 0x563f2e9f9bf0 <col:58> 'int' 0
| |-ParmVarDecl 0x563f2e9df350 <col:61, col:76> col:65 headroom 'int' cinit
| | `-IntegerLiteral 0x563f2e9f9c68 <col:76> 'int' 0
| |-ParmVarDecl 0x563f2e9df3d0 <col:79, col:94> col:83 tailroom 'int' cinit
| | `-IntegerLiteral 0x563f2e9f9c88 <col:94> 'int' 0
| `-WarnUnusedResultAttr 0x563f2e9df618 <col:112> warn_unused_result ""
|-CXXMethodDecl 0x563f2e9df698 <line:71:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x563f2e9df758 <line:73:5, col:50> col:45 used kill 'void ()'
| |-NoInlineAttr 0x563f2e9df7f8 <col:20>
| `-OptimizeNoneAttr 0x563f2e9df850 <col:30>
|-CXXMethodDecl 0x563f2e9df8c8 <line:75:5, col:54> col:45 used shared 'bool () const'
| |-NoInlineAttr 0x563f2e9df968 <col:20>
| `-OptimizeNoneAttr 0x563f2e9df9c0 <col:30>
|-CXXMethodDecl 0x563f2e9dfa38 <line:76:5, col:55> col:13 clone 'Packet *()'
| `-WarnUnusedResultAttr 0x563f2e9dfad8 <col:36> warn_unused_result ""
|-CXXMethodDecl 0x563f2e9dfb88 <line:77:5, col:102> col:56 uniqueify 'WritablePacket *()'
| |-NoInlineAttr 0x563f2e9dfc28 <col:20>
| |-OptimizeNoneAttr 0x563f2e9dfc80 <col:30>
| `-WarnUnusedResultAttr 0x563f2e9dfca8 <col:83> warn_unused_result ""
|-CXXMethodDecl 0x563f2e9dfd00 <line:79:5, col:68> col:61 used data 'const unsigned char *() const'
| |-NoInlineAttr 0x563f2e9dfda0 <col:20>
| `-OptimizeNoneAttr 0x563f2e9dfdf8 <col:30>
|-CXXMethodDecl 0x563f2e9dfe48 <line:80:5, col:72> col:61 used end_data 'const unsigned char *() const'
| |-NoInlineAttr 0x563f2e9dfee8 <col:20>
| `-OptimizeNoneAttr 0x563f2e9dff40 <col:30>
|-CXXMethodDecl 0x563f2e9dff88 <line:81:5, col:58> col:49 used length 'uint32_t () const'
| |-NoInlineAttr 0x563f2e9e0028 <col:20>
| `-OptimizeNoneAttr 0x563f2e9e0080 <col:30>
|-CXXMethodDecl 0x563f2e9e00c8 <line:82:5, col:32> col:21 used headroom 'uint32_t () const' inline
|-CXXMethodDecl 0x563f2e9e0188 <line:83:5, col:32> col:21 used tailroom 'uint32_t () const' inline
|-CXXMethodDecl 0x563f2e9e0250 <line:84:5, col:42> col:33 used buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x563f2e9e0318 <line:85:5, col:46> col:33 used end_buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x563f2e9e03d8 <line:86:5, col:37> col:21 used buffer_length 'uint32_t () const' inline
|-CXXMethodDecl 0x563f2e9e04f8 <line:97:5, line:99:5> line:97:28 buffer_destructor 'Packet::buffer_destructor_type () const'
| `-CompoundStmt 0x563f2e9f9d50 <col:54, line:99:5>
|   `-ReturnStmt 0x563f2e9f9d40 <line:98:2, col:9>
|     `-ImplicitCastExpr 0x563f2e9f9d28 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-MemberExpr 0x563f2e9f9cf8 <col:9> 'const Packet::buffer_destructor_type':'void (*const)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x563f2e9f07d8
|         `-CXXThisExpr 0x563f2e9f9ce8 <col:9> 'const Packet *' implicit this
|-CXXMethodDecl 0x563f2e9e0698 <line:101:5, line:103:5> line:101:10 set_buffer_destructor 'void (Packet::buffer_destructor_type)'
| |-ParmVarDecl 0x563f2e9e05a8 <col:32, col:55> col:55 used destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| `-CompoundStmt 0x563f2e9f9e00 <col:67, line:103:5>
|   `-BinaryOperator 0x563f2e9f9de0 <line:102:9, col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x563f2e9f9d78 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x563f2e9f07d8
|     | `-CXXThisExpr 0x563f2e9f9d68 <col:9> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x563f2e9f9dc8 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-DeclRefExpr 0x563f2e9f9da8 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ParmVar 0x563f2e9e05a8 'destructor' 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-CXXMethodDecl 0x563f2e9e0790 <line:105:5, line:107:5> line:105:11 destructor_argument 'void *()'
| `-CompoundStmt 0x563f2e9f9e80 <col:33, line:107:5>
|   `-ReturnStmt 0x563f2e9f9e70 <line:106:9, col:16>
|     `-ImplicitCastExpr 0x563f2e9f9e58 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x563f2e9f9e28 <col:16> 'void *' lvalue ->_destructor_argument 0x563f2e9f0840
|         `-CXXThisExpr 0x563f2e9f9e18 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x563f2e9e0850 <line:109:5, line:113:5> line:109:10 reset_buffer 'void ()'
| `-CompoundStmt 0x563f2e9fa4b0 <col:25, line:113:5>
|   |-ParenExpr 0x563f2e9fa1f8 <line:110:2, col:146> 'void'
|   | `-ConditionalOperator 0x563f2e9fa1c8 <col:3, col:145> 'void'
|   |   |-CXXStaticCastExpr 0x563f2e9f9f38 <col:3, col:32> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x563f2e9f9f10 <col:23, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-CXXMemberCallExpr 0x563f2e9f9ed8 <col:24, col:31> 'bool'
|   |   |     `-MemberExpr 0x563f2e9f9ea8 <col:24> '<bound member function type>' ->shared 0x563f2e9df8c8
|   |   |       `-ImplicitCastExpr 0x563f2e9f9ef8 <col:24> 'const Packet *' <NoOp>
|   |   |         `-CXXThisExpr 0x563f2e9f9e98 <col:24> 'Packet *' implicit this
|   |   |-CXXFunctionalCastExpr 0x563f2e9f9f98 <col:36, col:43> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x563f2e9f9f78 <col:42> 'int' 0
|   |   `-CallExpr 0x563f2e9fa128 <col:47, col:145> 'void'
|   |     |-ImplicitCastExpr 0x563f2e9fa110 <col:47> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x563f2e9fa0f0 <col:47> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x563f2e5515c0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x563f2e9fa168 <col:62> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563f2e9fa008 <col:62> 'const char [10]' lvalue "!shared()"
|   |     |-ImplicitCastExpr 0x563f2e9fa180 <col:75> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563f2e9fa030 <col:75> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x563f2e9fa198 <col:107> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x563f2e9fa068 <col:107> 'int' 110
|   |     `-ImplicitCastExpr 0x563f2e9fa1b0 <col:112, col:126> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x563f2e9fa0d8 <col:112, col:126> 'const char [28]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x563f2e9fa0c0 <col:126> 'const char [28]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x563f2e9fa088 <col:126> 'const char [28]' lvalue "void Packet::reset_buffer()"
|   |-BinaryOperator 0x563f2e9fa3f8 <line:111:2, col:33> 'unsigned char *' lvalue '='
|   | |-MemberExpr 0x563f2e9fa228 <col:2> 'unsigned char *' lvalue ->_head 0x563f2e9f05e0
|   | | `-CXXThisExpr 0x563f2e9fa218 <col:2> 'Packet *' implicit this
|   | `-ImplicitCastExpr 0x563f2e9fa3e0 <col:10, col:33> 'unsigned char *' <LValueToRValue>
|   |   `-BinaryOperator 0x563f2e9fa3c0 <col:10, col:33> 'unsigned char *' lvalue '='
|   |     |-MemberExpr 0x563f2e9fa268 <col:10> 'unsigned char *' lvalue ->_data 0x563f2e9f0648
|   |     | `-CXXThisExpr 0x563f2e9fa258 <col:10> 'Packet *' implicit this
|   |     `-ImplicitCastExpr 0x563f2e9fa3a8 <col:18, col:33> 'unsigned char *' <LValueToRValue>
|   |       `-BinaryOperator 0x563f2e9fa388 <col:18, col:33> 'unsigned char *' lvalue '='
|   |         |-MemberExpr 0x563f2e9fa2a8 <col:18> 'unsigned char *' lvalue ->_tail 0x563f2e9f06b0
|   |         | `-CXXThisExpr 0x563f2e9fa298 <col:18> 'Packet *' implicit this
|   |         `-ImplicitCastExpr 0x563f2e9fa370 <col:26, col:33> 'unsigned char *' <LValueToRValue>
|   |           `-BinaryOperator 0x563f2e9fa350 <col:26, col:33> 'unsigned char *' lvalue '='
|   |             |-MemberExpr 0x563f2e9fa2e8 <col:26> 'unsigned char *' lvalue ->_end 0x563f2e9f0718
|   |             | `-CXXThisExpr 0x563f2e9fa2d8 <col:26> 'Packet *' implicit this
|   |             `-ImplicitCastExpr 0x563f2e9fa338 <col:33> 'unsigned char *' <NullToPointer>
|   |               `-IntegerLiteral 0x563f2e9fa318 <col:33> 'int' 0
|   `-BinaryOperator 0x563f2e9fa490 <line:112:2, col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x563f2e9fa428 <col:2> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x563f2e9f07d8
|     | `-CXXThisExpr 0x563f2e9fa418 <col:2> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x563f2e9fa478 <col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <NullToPointer>
|       `-IntegerLiteral 0x563f2e9fa458 <col:16> 'int' 0
|-CXXMethodDecl 0x563f2e9e0990 <line:141:5, col:109> col:56 push 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x563f2e9e0900 <col:61, col:70> col:70 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x563f2e9e0a38 <col:20>
| |-OptimizeNoneAttr 0x563f2e9e0a90 <col:30>
| `-WarnUnusedResultAttr 0x563f2e9e0ab8 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x563f2e9e0b88 <line:152:5, col:120> col:56 push_mac_header 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x563f2e9e0af8 <col:72, col:81> col:81 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x563f2e9e0c30 <col:20>
| |-OptimizeNoneAttr 0x563f2e9e0c88 <col:30>
| `-WarnUnusedResultAttr 0x563f2e9e0cb0 <col:101> warn_unused_result ""
|-CXXMethodDecl 0x563f2e9e0de8 <line:171:5, col:76> col:13 nonunique_push 'Packet *(uint32_t)'
| |-ParmVarDecl 0x563f2e9e0cf0 <col:28, col:37> col:37 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x563f2e9e0e90 <col:57> warn_unused_result ""
|-CXXMethodDecl 0x563f2e9e0f90 <line:187:5, col:62> col:45 pull 'void (uint32_t)'
| |-ParmVarDecl 0x563f2e9e0f00 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x563f2e9e1038 <col:20>
| `-OptimizeNoneAttr 0x563f2e9e1090 <col:30>
|-CXXMethodDecl 0x563f2e9e1158 <line:213:5, col:73> col:21 put 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x563f2e9e10c8 <col:25, col:34> col:34 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x563f2e9e1200 <col:54> warn_unused_result ""
|-CXXMethodDecl 0x563f2e9e1300 <line:230:5, col:75> col:13 nonunique_put 'Packet *(uint32_t)'
| |-ParmVarDecl 0x563f2e9e1270 <col:27, col:36> col:36 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x563f2e9e13a8 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x563f2e9e14a8 <line:245:5, col:62> col:45 take 'void (uint32_t)'
| |-ParmVarDecl 0x563f2e9e1418 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x563f2e9e1550 <col:20>
| `-OptimizeNoneAttr 0x563f2e9e15a8 <col:30>
|-CXXMethodDecl 0x563f2e9e1738 <line:269:5, col:99> col:13 shift_data 'Packet *(int, bool)'
| |-ParmVarDecl 0x563f2e9e15e8 <col:24, col:28> col:28 offset 'int'
| |-ParmVarDecl 0x563f2e9e1660 <col:36, col:59> col:41 free_on_failure 'bool' cinit
| | `-CXXBoolLiteralExpr 0x563f2e9f9ca8 <col:59> 'bool' true
| `-WarnUnusedResultAttr 0x563f2e9e17e8 <col:80> warn_unused_result ""
|-CXXMethodDecl 0x563f2e9e19e8 <line:271:5, col:71> col:17 shrink_data 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x563f2e9e1860 <col:29, col:50> col:50 data 'const unsigned char *'
| `-ParmVarDecl 0x563f2e9e18d8 <col:56, col:65> col:65 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x563f2e9e1bf8 <line:272:5, col:78> col:17 change_headroom_and_length 'void (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x563f2e9e1aa8 <col:44, col:53> col:53 headroom 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x563f2e9e1b20 <col:63, col:72> col:72 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x563f2e9e1e08 <line:274:5, col:40> col:10 copy 'bool (Packet *, int)'
| |-ParmVarDecl 0x563f2e9e1cb8 <col:15, col:23> col:23 p 'Packet *'
| `-ParmVarDecl 0x563f2e9e1d38 <col:26, col:39> col:30 headroom 'int' cinit
|   `-IntegerLiteral 0x563f2e9f9cb8 <col:39> 'int' 0
|-CXXMethodDecl 0x563f2e9e1ed8 <line:279:5, col:34> col:17 has_mac_header 'bool () const' inline
|-CXXMethodDecl 0x563f2e9e1fa0 <line:280:5, col:46> col:33 used mac_header 'const unsigned char *() const' inline
|-CXXMethodDecl 0x563f2e9e2068 <line:281:5, col:36> col:16 mac_header_offset 'int () const' inline
|-CXXMethodDecl 0x563f2e9e2128 <line:282:5, col:41> col:21 mac_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x563f2e9e21f0 <line:283:5, col:29> col:16 mac_length 'int () const' inline
|-CXXMethodDecl 0x563f2e9e2338 <line:284:5, col:54> col:17 set_mac_header 'void (const unsigned char *)' inline
| `-ParmVarDecl 0x563f2e9e22a8 <col:32, col:53> col:53 p 'const unsigned char *'
|-CXXMethodDecl 0x563f2e9e2508 <line:285:5, col:68> col:17 used set_mac_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x563f2e9e23f8 <col:32, col:53> col:53 p 'const unsigned char *'
| `-ParmVarDecl 0x563f2e9e2470 <col:56, col:65> col:65 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x563f2e9e25d8 <line:286:5, col:34> col:17 clear_mac_header 'void ()' inline
|-CXXMethodDecl 0x563f2e9e2698 <line:288:5, col:66> col:45 has_network_header 'bool () const'
| |-NoInlineAttr 0x563f2e9e2738 <col:20>
| `-OptimizeNoneAttr 0x563f2e9e2790 <col:30>
|-CXXMethodDecl 0x563f2e9e27e0 <line:289:5, col:78> col:61 used network_header 'const unsigned char *() const'
| |-NoInlineAttr 0x563f2e9e2880 <col:20>
| `-OptimizeNoneAttr 0x563f2e9e28d8 <col:30>
|-CXXMethodDecl 0x563f2e9e2928 <line:290:5, col:40> col:16 used network_header_offset 'int () const' inline
|-CXXMethodDecl 0x563f2e9e29e8 <line:291:5, col:45> col:21 used network_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x563f2e9e2ab0 <line:292:5, col:61> col:44 network_length 'int () const'
| |-NoInlineAttr 0x563f2e9e2b50 <col:20>
| `-OptimizeNoneAttr 0x563f2e9e2ba8 <col:30>
|-CXXMethodDecl 0x563f2e9e2cf8 <line:293:5, col:72> col:17 set_network_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x563f2e9e2be8 <col:36, col:57> col:57 p 'const unsigned char *'
| `-ParmVarDecl 0x563f2e9e2c60 <col:60, col:69> col:69 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x563f2e9e2e48 <line:294:5, col:55> col:17 set_network_header_length 'void (uint32_t)' inline
| `-ParmVarDecl 0x563f2e9e2db8 <col:43, col:52> col:52 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x563f2e9e2f20 <line:295:5, col:38> col:17 clear_network_header 'void ()' inline
|-CXXMethodDecl 0x563f2e9e2fe0 <line:297:5, col:68> col:45 has_transport_header 'bool () const'
| |-NoInlineAttr 0x563f2e9e3080 <col:20>
| `-OptimizeNoneAttr 0x563f2e9e30d8 <col:30>
|-CXXMethodDecl 0x563f2e9e3128 <line:298:5, col:80> col:61 used transport_header 'const unsigned char *() const'
| |-NoInlineAttr 0x563f2e9e31c8 <col:20>
| `-OptimizeNoneAttr 0x563f2e9e3220 <col:30>
|-CXXMethodDecl 0x563f2e9e3270 <line:299:5, col:42> col:16 transport_header_offset 'int () const' inline
|-CXXMethodDecl 0x563f2e9e3338 <line:300:5, col:63> col:44 transport_length 'int () const'
| |-NoInlineAttr 0x563f2e9e33d8 <col:20>
| `-OptimizeNoneAttr 0x563f2e9e3430 <col:30>
|-CXXMethodDecl 0x563f2e9e3478 <line:301:5, col:40> col:17 clear_transport_header 'void ()' inline
|-CXXMethodDecl 0x563f2e9e3598 <line:304:5, col:46> col:31 ether_header 'const click_ether *() const' inline
|-CXXMethodDecl 0x563f2e9e3708 <line:305:5, col:57> col:17 set_ether_header 'void (const click_ether *)' inline
| `-ParmVarDecl 0x563f2e9e3648 <col:34, col:53> col:53 ethh 'const click_ether *'
|-CXXMethodDecl 0x563f2e9e37f8 <line:307:5, col:68> col:56 ip_header 'const click_ip *() const'
| |-NoInlineAttr 0x563f2e9e3898 <col:20>
| `-OptimizeNoneAttr 0x563f2e9e38f0 <col:30>
|-CXXMethodDecl 0x563f2e9e3940 <line:308:5, col:35> col:16 ip_header_offset 'int () const' inline
|-CXXMethodDecl 0x563f2e9e3a00 <line:309:5, col:40> col:21 ip_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x563f2e9e3c38 <line:310:5, col:92> col:45 set_ip_header 'void (const click_ip *, uint32_t)'
| |-ParmVarDecl 0x563f2e9e3ab0 <col:59, col:75> col:75 iph 'const click_ip *'
| |-ParmVarDecl 0x563f2e9e3b28 <col:80, col:89> col:89 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x563f2e9e3ce8 <col:20>
| `-OptimizeNoneAttr 0x563f2e9e3d40 <col:30>
|-CXXMethodDecl 0x563f2e9e3de8 <line:312:5, col:70> col:57 ip6_header 'const click_ip6 *() const'
| |-NoInlineAttr 0x563f2e9e3e88 <col:20>
| `-OptimizeNoneAttr 0x563f2e9e3ee0 <col:30>
|-CXXMethodDecl 0x563f2e9e3f30 <line:313:5, col:64> col:44 ip6_header_offset 'int () const'
| |-NoInlineAttr 0x563f2e9e3fd0 <col:20>
| `-OptimizeNoneAttr 0x563f2e9e4028 <col:30>
|-CXXMethodDecl 0x563f2e9e4070 <line:314:5, col:69> col:49 ip6_header_length 'uint32_t () const'
| |-NoInlineAttr 0x563f2e9e4110 <col:20>
| `-OptimizeNoneAttr 0x563f2e9e4168 <col:30>
|-CXXMethodDecl 0x563f2e9e4268 <line:315:5, col:81> col:45 set_ip6_header 'void (const click_ip6 *)'
| |-ParmVarDecl 0x563f2e9e41a0 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-NoInlineAttr 0x563f2e9e4310 <col:20>
| `-OptimizeNoneAttr 0x563f2e9e4368 <col:30>
|-CXXMethodDecl 0x563f2e9e4528 <line:316:5, col:95> col:45 set_ip6_header 'void (const click_ip6 *, uint32_t)'
| |-ParmVarDecl 0x563f2e9e43a0 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-ParmVarDecl 0x563f2e9e4418 <col:83, col:92> col:92 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x563f2e9e45d8 <col:20>
| `-OptimizeNoneAttr 0x563f2e9e4630 <col:30>
|-CXXMethodDecl 0x563f2e9e46d8 <line:318:5, col:44> col:30 used icmp_header 'const click_icmp *() const' inline
|-CXXMethodDecl 0x563f2e9e47f8 <line:319:5, col:42> col:29 used tcp_header 'const click_tcp *() const' inline
|-CXXMethodDecl 0x563f2e9e4918 <line:320:5, col:42> col:29 used udp_header 'const click_udp *() const' inline
|-AccessSpecDecl 0x563f2e9e49b8 <line:333:3, col:10> col:3 private
|-CXXRecordDecl 0x563f2e9e49e0 <line:335:5, col:11> col:11 referenced union Anno
|-CXXMethodDecl 0x563f2e9e4b08 <line:340:5, col:60> col:52 used xanno 'const Packet::Anno *() const'
| |-NoInlineAttr 0x563f2e9e4ba8 <col:20>
| `-OptimizeNoneAttr 0x563f2e9e4c00 <col:30>
|-CXXMethodDecl 0x563f2e9e4ca8 <line:341:5, col:52> col:46 used xanno 'Packet::Anno *()'
| |-NoInlineAttr 0x563f2e9e4d48 <col:20>
| `-OptimizeNoneAttr 0x563f2e9e4da0 <col:30>
|-AccessSpecDecl 0x563f2e9e4dc8 <line:344:3, col:9> col:3 public
|-EnumDecl 0x563f2e9e4df0 <line:349:5, line:351:5> line:349:5
| `-EnumConstantDecl 0x563f2e9e4ef0 <line:350:2, col:14> col:2 referenced anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   `-ImplicitCastExpr 0x563f2e9e4f40 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x563f2e9e4ed0 <col:14> 'int' Int: 48
|       `-IntegerLiteral 0x563f2e9e4eb0 <col:14> 'int' 48
|-CXXMethodDecl 0x563f2e9e4fa8 <line:354:5, col:74> col:57 used timestamp_anno 'const Timestamp &() const'
| |-NoInlineAttr 0x563f2e9e5048 <col:20>
| `-OptimizeNoneAttr 0x563f2e9e50a0 <col:30>
|-CXXMethodDecl 0x563f2e9e5118 <line:356:5, col:66> col:51 used timestamp_anno 'Timestamp &()'
| |-NoInlineAttr 0x563f2e9e51b8 <col:20>
| `-OptimizeNoneAttr 0x563f2e9e5210 <col:30>
|-CXXMethodDecl 0x563f2e9e52d8 <line:359:5, col:54> col:17 used set_timestamp_anno 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x563f2e9e5248 <col:36, col:53> col:53 t 'const Timestamp &'
|-CXXMethodDecl 0x563f2e9e5478 <line:362:5, col:38> col:24 used device_anno 'net_device *() const' inline
|-CXXMethodDecl 0x563f2e9e5618 <line:364:5, col:48> col:17 used set_device_anno 'void (net_device *)' inline
| `-ParmVarDecl 0x563f2e9e5528 <col:33, col:45> col:45 dev 'net_device *'
|-EnumDecl 0x563f2e9e56c0 <line:368:5, line:381:5> line:368:10 referenced PacketType
| |-EnumConstantDecl 0x563f2e9e57c0 <line:369:2, col:9> col:2 HOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x563f2e9e5b70 <col:9> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563f2e9e57a0 <col:9> 'int' Int: 0
| |     `-IntegerLiteral 0x563f2e9e5780 <col:9> 'int' 0
| |-EnumConstantDecl 0x563f2e9e5850 <line:370:2, col:14> col:2 BROADCAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x563f2e9e5b88 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563f2e9e5830 <col:14> 'int' Int: 1
| |     `-IntegerLiteral 0x563f2e9e5810 <col:14> 'int' 1
| |-EnumConstantDecl 0x563f2e9e58e0 <line:372:2, col:14> col:2 MULTICAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x563f2e9e5ba0 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563f2e9e58c0 <col:14> 'int' Int: 2
| |     `-IntegerLiteral 0x563f2e9e58a0 <col:14> 'int' 2
| |-EnumConstantDecl 0x563f2e9e5970 <line:374:2, col:14> col:2 OTHERHOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x563f2e9e5bb8 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563f2e9e5950 <col:14> 'int' Int: 3
| |     `-IntegerLiteral 0x563f2e9e5930 <col:14> 'int' 3
| |-EnumConstantDecl 0x563f2e9e5a00 <line:377:2, col:13> col:2 OUTGOING 'Packet::PacketType'
| | `-ImplicitCastExpr 0x563f2e9e5bd0 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563f2e9e59e0 <col:13> 'int' Int: 4
| |     `-IntegerLiteral 0x563f2e9e59c0 <col:13> 'int' 4
| |-EnumConstantDecl 0x563f2e9e5a90 <line:379:2, col:13> col:2 LOOPBACK 'Packet::PacketType'
| | `-ImplicitCastExpr 0x563f2e9e5be8 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563f2e9e5a70 <col:13> 'int' Int: 5
| |     `-IntegerLiteral 0x563f2e9e5a50 <col:13> 'int' 5
| `-EnumConstantDecl 0x563f2e9e5b20 <line:380:2, col:14> col:2 FASTROUTE 'Packet::PacketType'
|   `-ImplicitCastExpr 0x563f2e9e5c00 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x563f2e9e5b00 <col:14> 'int' Int: 6
|       `-IntegerLiteral 0x563f2e9e5ae0 <col:14> 'int' 6
|-CXXMethodDecl 0x563f2e9e5c68 <line:383:5, col:70> col:51 used packet_type_anno 'Packet::PacketType () const'
| |-NoInlineAttr 0x563f2e9e5d08 <col:20>
| `-OptimizeNoneAttr 0x563f2e9e5d60 <col:30>
|-CXXMethodDecl 0x563f2e9e5e58 <line:385:5, col:78> col:45 used set_packet_type_anno 'void (Packet::PacketType)'
| |-ParmVarDecl 0x563f2e9e5d98 <col:66, col:77> col:77 t 'Packet::PacketType'
| |-NoInlineAttr 0x563f2e9e5f00 <col:20>
| `-OptimizeNoneAttr 0x563f2e9e5f58 <col:30>
|-CXXMethodDecl 0x563f2e9e5fc8 <line:410:5, col:27> col:20 next 'Packet *() const' inline
|-CXXMethodDecl 0x563f2e9e60f0 <line:412:5, col:26> col:21 next 'Packet *&()' inline
|-CXXMethodDecl 0x563f2e9e6268 <line:414:5, col:35> col:17 set_next 'void (Packet *)' inline
| `-ParmVarDecl 0x563f2e9e61a0 <col:26, col:34> col:34 p 'Packet *'
|-CXXMethodDecl 0x563f2e9e6330 <line:417:5, col:27> col:20 prev 'Packet *() const' inline
|-CXXMethodDecl 0x563f2e9e63f8 <line:419:5, col:26> col:21 prev 'Packet *&()' inline
|-CXXMethodDecl 0x563f2e9e6538 <line:421:5, col:35> col:17 set_prev 'void (Packet *)' inline
| `-ParmVarDecl 0x563f2e9e64a8 <col:26, col:34> col:34 p 'Packet *'
|-EnumDecl 0x563f2e9e65e0 <line:423:5, line:426:5> line:423:5
| |-EnumConstantDecl 0x563f2e9e66e0 <line:424:2, col:23> col:2 referenced dst_ip_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x563f2e9e68e0 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563f2e9e66c0 <col:23> 'int' Int: 0
| |     `-IntegerLiteral 0x563f2e9e66a0 <col:23> 'int' 0
| |-EnumConstantDecl 0x563f2e9e6770 <col:26, col:45> col:26 dst_ip_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x563f2e9e68f8 <col:45> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563f2e9e6750 <col:45> 'int' Int: 4
| |     `-IntegerLiteral 0x563f2e9e6730 <col:45> 'int' 4
| |-EnumConstantDecl 0x563f2e9e6800 <line:425:2, col:24> col:2 dst_ip6_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x563f2e9e6910 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563f2e9e67e0 <col:24> 'int' Int: 0
| |     `-IntegerLiteral 0x563f2e9e67c0 <col:24> 'int' 0
| `-EnumConstantDecl 0x563f2e9e6890 <col:27, col:47> col:27 dst_ip6_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
|   `-ImplicitCastExpr 0x563f2e9e6928 <col:47> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x563f2e9e6870 <col:47> 'int' Int: 16
|       `-IntegerLiteral 0x563f2e9e6850 <col:47> 'int' 16
|-CXXMethodDecl 0x563f2e9e6988 <line:431:5, col:36> col:22 dst_ip_anno 'IPAddress () const' inline
|-CXXMethodDecl 0x563f2e9e6af8 <line:436:5, col:75> col:45 set_dst_ip_anno 'void (IPAddress)'
| |-ParmVarDecl 0x563f2e9e6a38 <col:61, col:71> col:71 addr 'IPAddress'
| |-NoInlineAttr 0x563f2e9e6ba0 <col:20>
| `-OptimizeNoneAttr 0x563f2e9e6bf8 <col:30>
|-CXXMethodDecl 0x563f2e9e6c48 <line:441:5, col:36> col:11 anno 'void *()'
| `-CompoundStmt 0x563f2e9fa5d0 <col:18, col:36>
|   `-ReturnStmt 0x563f2e9fa5c0 <col:20, col:33>
|     `-ImplicitCastExpr 0x563f2e9fa5a8 <col:27, col:33> 'void *' <BitCast>
|       `-CXXMemberCallExpr 0x563f2e9fa588 <col:27, col:33> 'Packet::Anno *'
|         `-MemberExpr 0x563f2e9fa558 <col:27> '<bound member function type>' ->xanno 0x563f2e9e4ca8
|           `-CXXThisExpr 0x563f2e9fa548 <col:27> 'Packet *' implicit this
|-CXXMethodDecl 0x563f2e9e6d40 <line:444:5, col:48> col:17 anno 'const void *() const'
| `-CompoundStmt 0x563f2e9fa6e0 <col:30, col:48>
|   `-ReturnStmt 0x563f2e9fa6d0 <col:32, col:45>
|     `-ImplicitCastExpr 0x563f2e9fa6b8 <col:39, col:45> 'const void *' <BitCast>
|       `-CXXMemberCallExpr 0x563f2e9fa698 <col:39, col:45> 'const Packet::Anno *'
|         `-MemberExpr 0x563f2e9fa668 <col:39> '<bound member function type>' ->xanno 0x563f2e9e4b08
|           `-CXXThisExpr 0x563f2e9fa658 <col:39> 'const Packet *' implicit this
|-CXXMethodDecl 0x563f2e9e6e28 <line:447:5, col:50> col:14 used anno_u8 'uint8_t *()'
| `-CompoundStmt 0x563f2e9fa878 <col:24, col:50>
|   `-ReturnStmt 0x563f2e9fa868 <col:26, col:47>
|     `-UnaryOperator 0x563f2e9fa850 <col:33, col:47> 'uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x563f2e9fa830 <col:34, col:47> 'uint8_t':'unsigned char' lvalue
|         |-ImplicitCastExpr 0x563f2e9fa818 <col:34, col:43> 'uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x563f2e9fa7c8 <col:34, col:43> 'uint8_t [48]' lvalue ->u8 0x563f2e9efae8
|         |   `-CXXMemberCallExpr 0x563f2e9fa7a8 <col:34, col:40> 'Packet::Anno *'
|         |     `-MemberExpr 0x563f2e9fa778 <col:34> '<bound member function type>' ->xanno 0x563f2e9e4ca8
|         |       `-CXXThisExpr 0x563f2e9fa768 <col:34> 'Packet *' implicit this
|         `-IntegerLiteral 0x563f2e9fa7f8 <col:46> 'int' 0
|-CXXMethodDecl 0x563f2e9e6f30 <line:450:5, col:62> col:20 used anno_u8 'const uint8_t *() const'
| `-CompoundStmt 0x563f2e9faa48 <col:36, col:62>
|   `-ReturnStmt 0x563f2e9faa38 <col:38, col:59>
|     `-UnaryOperator 0x563f2e9faa20 <col:45, col:59> 'const uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x563f2e9faa00 <col:46, col:59> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x563f2e9fa9e8 <col:46, col:55> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x563f2e9fa960 <col:46, col:55> 'uint8_t const[48]' lvalue ->u8 0x563f2e9efae8
|         |   `-CXXMemberCallExpr 0x563f2e9fa940 <col:46, col:52> 'const Packet::Anno *'
|         |     `-MemberExpr 0x563f2e9fa910 <col:46> '<bound member function type>' ->xanno 0x563f2e9e4b08
|         |       `-CXXThisExpr 0x563f2e9fa900 <col:46> 'const Packet *' implicit this
|         `-IntegerLiteral 0x563f2e9fa990 <col:58> 'int' 0
|-CXXMethodDecl 0x563f2e9e7048 <line:453:5, col:53> col:15 used anno_u32 'uint32_t *()'
| `-CompoundStmt 0x563f2e9fabe0 <col:26, col:53>
|   `-ReturnStmt 0x563f2e9fabd0 <col:28, col:50>
|     `-UnaryOperator 0x563f2e9fabb8 <col:35, col:50> 'uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x563f2e9fab98 <col:36, col:50> 'uint32_t':'unsigned int' lvalue
|         |-ImplicitCastExpr 0x563f2e9fab80 <col:36, col:45> 'uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x563f2e9fab30 <col:36, col:45> 'uint32_t [12]' lvalue ->u32 0x563f2e9efde8
|         |   `-CXXMemberCallExpr 0x563f2e9fab10 <col:36, col:42> 'Packet::Anno *'
|         |     `-MemberExpr 0x563f2e9faae0 <col:36> '<bound member function type>' ->xanno 0x563f2e9e4ca8
|         |       `-CXXThisExpr 0x563f2e9faad0 <col:36> 'Packet *' implicit this
|         `-IntegerLiteral 0x563f2e9fab60 <col:49> 'int' 0
|-CXXMethodDecl 0x563f2e9e7168 <line:456:5, col:65> col:21 used anno_u32 'const uint32_t *() const'
| `-CompoundStmt 0x563f2e9fadb8 <col:38, col:65>
|   `-ReturnStmt 0x563f2e9fada8 <col:40, col:62>
|     `-UnaryOperator 0x563f2e9fad90 <col:47, col:62> 'const uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x563f2e9fad70 <col:48, col:62> 'const uint32_t':'const unsigned int' lvalue
|         |-ImplicitCastExpr 0x563f2e9fad58 <col:48, col:57> 'const uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x563f2e9facc8 <col:48, col:57> 'uint32_t const[12]' lvalue ->u32 0x563f2e9efde8
|         |   `-CXXMemberCallExpr 0x563f2e9faca8 <col:48, col:54> 'const Packet::Anno *'
|         |     `-MemberExpr 0x563f2e9fac78 <col:48> '<bound member function type>' ->xanno 0x563f2e9e4b08
|         |       `-CXXThisExpr 0x563f2e9fac68 <col:48> 'const Packet *' implicit this
|         `-IntegerLiteral 0x563f2e9facf8 <col:61> 'int' 0
|-CXXMethodDecl 0x563f2e9e7318 <line:460:5, line:463:5> line:460:13 used anno_u8 'uint8_t (int) const'
| |-ParmVarDecl 0x563f2e9e7220 <col:21, col:25> col:25 used i 'int'
| `-CompoundStmt 0x563f2e9fb488 <col:34, line:463:5>
|   |-ParenExpr 0x563f2e9fb2d0 <line:461:2, col:174> 'void'
|   | `-ConditionalOperator 0x563f2e9fb2a0 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x563f2e9faf08 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x563f2e9faed8 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x563f2e9fae28 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x563f2e9fae10 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x563f2e9fadd0 <col:23> 'int' lvalue ParmVar 0x563f2e9e7220 'i' 'int'
|   |   |   | `-IntegerLiteral 0x563f2e9fadf0 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x563f2e9faeb8 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x563f2e9fae88 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x563f2e9fae48 <col:33> 'int' lvalue ParmVar 0x563f2e9e7220 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x563f2e9faea0 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x563f2e9fae68 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x563f2e9e4ef0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x563f2e9faf68 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x563f2e9faf48 <col:56> 'int' 0
|   |   `-CallExpr 0x563f2e9fb200 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x563f2e9fb1e8 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x563f2e9fb1c8 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x563f2e5515c0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x563f2e9fb240 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563f2e9fb058 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x563f2e9fb258 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563f2e9fb088 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x563f2e9fb270 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x563f2e9fb0c0 <col:135> 'int' 461
|   |     `-ImplicitCastExpr 0x563f2e9fb288 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x563f2e9fb1b0 <col:140, col:154> 'const char [35]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x563f2e9fb198 <col:154> 'const char [35]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x563f2e9fb158 <col:154> 'const char [35]' lvalue "uint8_t Packet::anno_u8(int) const"
|   `-ReturnStmt 0x563f2e9fb478 <line:462:2, col:22>
|     `-ImplicitCastExpr 0x563f2e9fb460 <col:9, col:22> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-ArraySubscriptExpr 0x563f2e9fb440 <col:9, col:22> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x563f2e9fb410 <col:9, col:18> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x563f2e9fb3c0 <col:9, col:18> 'uint8_t const[48]' lvalue ->u8 0x563f2e9efae8
|         |   `-CXXMemberCallExpr 0x563f2e9fb3a0 <col:9, col:15> 'const Packet::Anno *'
|         |     `-MemberExpr 0x563f2e9fb370 <col:9> '<bound member function type>' ->xanno 0x563f2e9e4b08
|         |       `-CXXThisExpr 0x563f2e9fb360 <col:9> 'const Packet *' implicit this
|         `-ImplicitCastExpr 0x563f2e9fb428 <col:21> 'int' <LValueToRValue>
|           `-DeclRefExpr 0x563f2e9fb3f0 <col:21> 'int' lvalue ParmVar 0x563f2e9e7220 'i' 'int'
|-CXXMethodDecl 0x563f2e9e7568 <line:469:5, line:472:5> line:469:10 used set_anno_u8 'void (int, uint8_t)'
| |-ParmVarDecl 0x563f2e9e73d8 <col:22, col:26> col:26 used i 'int'
| |-ParmVarDecl 0x563f2e9e7450 <col:29, col:37> col:37 used x 'uint8_t':'unsigned char'
| `-CompoundStmt 0x563f2e9fbb18 <col:40, line:472:5>
|   |-ParenExpr 0x563f2e9fb930 <line:470:2, col:174> 'void'
|   | `-ConditionalOperator 0x563f2e9fb900 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x563f2e9fb5e0 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x563f2e9fb5b0 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x563f2e9fb500 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x563f2e9fb4e8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x563f2e9fb4a8 <col:23> 'int' lvalue ParmVar 0x563f2e9e73d8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x563f2e9fb4c8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x563f2e9fb590 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x563f2e9fb560 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x563f2e9fb520 <col:33> 'int' lvalue ParmVar 0x563f2e9e73d8 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x563f2e9fb578 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x563f2e9fb540 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x563f2e9e4ef0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x563f2e9fb640 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x563f2e9fb620 <col:56> 'int' 0
|   |   `-CallExpr 0x563f2e9fb860 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x563f2e9fb848 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x563f2e9fb828 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x563f2e5515c0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x563f2e9fb8a0 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563f2e9fb6b0 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x563f2e9fb8b8 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563f2e9fb6e0 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x563f2e9fb8d0 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x563f2e9fb718 <col:135> 'int' 470
|   |     `-ImplicitCastExpr 0x563f2e9fb8e8 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x563f2e9fb810 <col:140, col:154> 'const char [39]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x563f2e9fb7f8 <col:154> 'const char [39]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x563f2e9fb7b8 <col:154> 'const char [39]' lvalue "void Packet::set_anno_u8(int, uint8_t)"
|   `-BinaryOperator 0x563f2e9fbaf8 <line:471:2, col:19> 'uint8_t':'unsigned char' lvalue '='
|     |-ArraySubscriptExpr 0x563f2e9fbaa0 <col:2, col:15> 'uint8_t':'unsigned char' lvalue
|     | |-ImplicitCastExpr 0x563f2e9fba70 <col:2, col:11> 'uint8_t *' <ArrayToPointerDecay>
|     | | `-MemberExpr 0x563f2e9fba20 <col:2, col:11> 'uint8_t [48]' lvalue ->u8 0x563f2e9efae8
|     | |   `-CXXMemberCallExpr 0x563f2e9fba00 <col:2, col:8> 'Packet::Anno *'
|     | |     `-MemberExpr 0x563f2e9fb9d0 <col:2> '<bound member function type>' ->xanno 0x563f2e9e4ca8
|     | |       `-CXXThisExpr 0x563f2e9fb9c0 <col:2> 'Packet *' implicit this
|     | `-ImplicitCastExpr 0x563f2e9fba88 <col:14> 'int' <LValueToRValue>
|     |   `-DeclRefExpr 0x563f2e9fba50 <col:14> 'int' lvalue ParmVar 0x563f2e9e73d8 'i' 'int'
|     `-ImplicitCastExpr 0x563f2e9fbae0 <col:19> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-DeclRefExpr 0x563f2e9fbac0 <col:19> 'uint8_t':'unsigned char' lvalue ParmVar 0x563f2e9e7450 'x' 'uint8_t':'unsigned char'
|-CXXMethodDecl 0x563f2e9e7728 <line:479:5, line:485:5> line:479:14 used anno_u16 'uint16_t (int) const'
| |-ParmVarDecl 0x563f2e9e7630 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x563f2e9fc298 <col:36, line:485:5>
|   |-ParenExpr 0x563f2e9fc000 <line:480:2, col:182> 'void'
|   | `-ConditionalOperator 0x563f2e9fbfd0 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x563f2e9fbcb0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x563f2e9fbc80 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x563f2e9fbb90 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x563f2e9fbb78 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x563f2e9fbb38 <col:23> 'int' lvalue ParmVar 0x563f2e9e7630 'i' 'int'
|   |   |   | `-IntegerLiteral 0x563f2e9fbb58 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x563f2e9fbc60 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x563f2e9fbc48 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x563f2e9fbbb0 <col:33> 'int' lvalue ParmVar 0x563f2e9e7630 'i' 'int'
|   |   |     `-BinaryOperator 0x563f2e9fbc28 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x563f2e9fbc10 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x563f2e9fbbd0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x563f2e9e4ef0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x563f2e9fbbf0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x563f2e9fbd10 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x563f2e9fbcf0 <col:60> 'int' 0
|   |   `-CallExpr 0x563f2e9fbf30 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x563f2e9fbf18 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x563f2e9fbef8 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x563f2e5515c0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x563f2e9fbf70 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563f2e9fbd80 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x563f2e9fbf88 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563f2e9fbdb8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x563f2e9fbfa0 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x563f2e9fbdf0 <col:143> 'int' 480
|   |     `-ImplicitCastExpr 0x563f2e9fbfb8 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x563f2e9fbee0 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x563f2e9fbec8 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x563f2e9fbe88 <col:162> 'const char [37]' lvalue "uint16_t Packet::anno_u16(int) const"
|   `-ReturnStmt 0x563f2e9fc288 <line:484:2, col:75>
|     `-ImplicitCastExpr 0x563f2e9fc270 <col:9, col:75> 'click_aliasable_uint16_t':'unsigned short' <LValueToRValue>
|       `-UnaryOperator 0x563f2e9fc258 <col:9, col:75> 'const click_aliasable_uint16_t':'const unsigned short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x563f2e9fc228 <col:10, col:75> 'const click_aliasable_uint16_t *' reinterpret_cast<const click_aliasable_uint16_t *> <BitCast>
|           `-BinaryOperator 0x563f2e9fc1c8 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x563f2e9fc198 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x563f2e9fc110 <col:61, col:70> 'char const[48]' lvalue ->c 0x563f2e9ef9c0
|             |   `-CXXMemberCallExpr 0x563f2e9fc0f0 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x563f2e9fc0c0 <col:61> '<bound member function type>' ->xanno 0x563f2e9e4b08
|             |       `-CXXThisExpr 0x563f2e9fc0b0 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x563f2e9fc1b0 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x563f2e9fc140 <col:74> 'int' lvalue ParmVar 0x563f2e9e7630 'i' 'int'
|-CXXMethodDecl 0x563f2e9e7978 <line:494:5, line:500:5> line:494:10 used set_anno_u16 'void (int, uint16_t)'
| |-ParmVarDecl 0x563f2e9e77e8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x563f2e9e7860 <col:30, col:39> col:39 used x 'uint16_t':'unsigned short'
| `-CompoundStmt 0x563f2e9fc9e8 <col:42, line:500:5>
|   |-ParenExpr 0x563f2e9fc780 <line:495:2, col:182> 'void'
|   | `-ConditionalOperator 0x563f2e9fc750 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x563f2e9fc430 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x563f2e9fc400 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x563f2e9fc310 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x563f2e9fc2f8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x563f2e9fc2b8 <col:23> 'int' lvalue ParmVar 0x563f2e9e77e8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x563f2e9fc2d8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x563f2e9fc3e0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x563f2e9fc3c8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x563f2e9fc330 <col:33> 'int' lvalue ParmVar 0x563f2e9e77e8 'i' 'int'
|   |   |     `-BinaryOperator 0x563f2e9fc3a8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x563f2e9fc390 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x563f2e9fc350 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x563f2e9e4ef0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x563f2e9fc370 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x563f2e9fc490 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x563f2e9fc470 <col:60> 'int' 0
|   |   `-CallExpr 0x563f2e9fc6b0 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x563f2e9fc698 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x563f2e9fc678 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x563f2e5515c0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x563f2e9fc6f0 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563f2e9fc500 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x563f2e9fc708 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563f2e9fc538 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x563f2e9fc720 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x563f2e9fc570 <col:143> 'int' 495
|   |     `-ImplicitCastExpr 0x563f2e9fc738 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x563f2e9fc660 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x563f2e9fc648 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x563f2e9fc608 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u16(int, uint16_t)"
|   `-BinaryOperator 0x563f2e9fc9c8 <line:499:2, col:66> 'click_aliasable_uint16_t':'unsigned short' lvalue '='
|     |-UnaryOperator 0x563f2e9fc978 <col:2, col:62> 'click_aliasable_uint16_t':'unsigned short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x563f2e9fc948 <col:3, col:62> 'click_aliasable_uint16_t *' reinterpret_cast<click_aliasable_uint16_t *> <BitCast>
|     |   `-BinaryOperator 0x563f2e9fc8f0 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x563f2e9fc8c0 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x563f2e9fc870 <col:48, col:57> 'char [48]' lvalue ->c 0x563f2e9ef9c0
|     |     |   `-CXXMemberCallExpr 0x563f2e9fc850 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x563f2e9fc820 <col:48> '<bound member function type>' ->xanno 0x563f2e9e4ca8
|     |     |       `-CXXThisExpr 0x563f2e9fc810 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x563f2e9fc8d8 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x563f2e9fc8a0 <col:61> 'int' lvalue ParmVar 0x563f2e9e77e8 'i' 'int'
|     `-ImplicitCastExpr 0x563f2e9fc9b0 <col:66> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x563f2e9fc990 <col:66> 'uint16_t':'unsigned short' lvalue ParmVar 0x563f2e9e7860 'x' 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x563f2e9e7b38 <line:507:5, line:513:5> line:507:13 anno_s16 'int16_t (int) const'
| |-ParmVarDecl 0x563f2e9e7a40 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x563f2e9fd148 <col:35, line:513:5>
|   |-ParenExpr 0x563f2e9fce58 <line:508:2, col:182> 'void'
|   | `-ConditionalOperator 0x563f2e9fce28 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x563f2e9fcb80 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x563f2e9fcb50 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x563f2e9fca60 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x563f2e9fca48 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x563f2e9fca08 <col:23> 'int' lvalue ParmVar 0x563f2e9e7a40 'i' 'int'
|   |   |   | `-IntegerLiteral 0x563f2e9fca28 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x563f2e9fcb30 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x563f2e9fcb18 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x563f2e9fca80 <col:33> 'int' lvalue ParmVar 0x563f2e9e7a40 'i' 'int'
|   |   |     `-BinaryOperator 0x563f2e9fcaf8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x563f2e9fcae0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x563f2e9fcaa0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x563f2e9e4ef0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x563f2e9fcac0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x563f2e9fcbe0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x563f2e9fcbc0 <col:60> 'int' 0
|   |   `-CallExpr 0x563f2e9fcd88 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x563f2e9fcd70 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x563f2e9fcd50 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x563f2e5515c0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x563f2e9fcdc8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563f2e9fcc50 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x563f2e9fcde0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563f2e9fcc88 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x563f2e9fcdf8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x563f2e9fccc0 <col:143> 'int' 508
|   |     `-ImplicitCastExpr 0x563f2e9fce10 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x563f2e9fcd38 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x563f2e9fcd20 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x563f2e9fcce0 <col:162> 'const char [36]' lvalue "int16_t Packet::anno_s16(int) const"
|   `-ReturnStmt 0x563f2e9fd138 <line:512:2, col:74>
|     `-ImplicitCastExpr 0x563f2e9fd120 <col:9, col:74> 'click_aliasable_int16_t':'short' <LValueToRValue>
|       `-UnaryOperator 0x563f2e9fd108 <col:9, col:74> 'const click_aliasable_int16_t':'const short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x563f2e9fd0d8 <col:10, col:74> 'const click_aliasable_int16_t *' reinterpret_cast<const click_aliasable_int16_t *> <BitCast>
|           `-BinaryOperator 0x563f2e9fd050 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x563f2e9fd020 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x563f2e9fcfd0 <col:60, col:69> 'char const[48]' lvalue ->c 0x563f2e9ef9c0
|             |   `-CXXMemberCallExpr 0x563f2e9fcfb0 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x563f2e9fcf80 <col:60> '<bound member function type>' ->xanno 0x563f2e9e4b08
|             |       `-CXXThisExpr 0x563f2e9fcf70 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x563f2e9fd038 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x563f2e9fd000 <col:73> 'int' lvalue ParmVar 0x563f2e9e7a40 'i' 'int'
|-CXXMethodDecl 0x563f2e9e7d88 <line:522:5, line:528:5> line:522:10 set_anno_s16 'void (int, int16_t)'
| |-ParmVarDecl 0x563f2e9e7bf8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x563f2e9e7c70 <col:30, col:38> col:38 used x 'int16_t':'short'
| `-CompoundStmt 0x563f2e9fd868 <col:41, line:528:5>
|   |-ParenExpr 0x563f2e9fd5f0 <line:523:2, col:182> 'void'
|   | `-ConditionalOperator 0x563f2e9fd5c0 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x563f2e9fd2e0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x563f2e9fd2b0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x563f2e9fd1c0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x563f2e9fd1a8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x563f2e9fd168 <col:23> 'int' lvalue ParmVar 0x563f2e9e7bf8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x563f2e9fd188 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x563f2e9fd290 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x563f2e9fd278 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x563f2e9fd1e0 <col:33> 'int' lvalue ParmVar 0x563f2e9e7bf8 'i' 'int'
|   |   |     `-BinaryOperator 0x563f2e9fd258 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x563f2e9fd240 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x563f2e9fd200 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x563f2e9e4ef0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x563f2e9fd220 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x563f2e9fd340 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x563f2e9fd320 <col:60> 'int' 0
|   |   `-CallExpr 0x563f2e9fd520 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x563f2e9fd508 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x563f2e9fd4e8 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x563f2e5515c0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x563f2e9fd560 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563f2e9fd3b0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x563f2e9fd578 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563f2e9fd3e8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x563f2e9fd590 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x563f2e9fd420 <col:143> 'int' 523
|   |     `-ImplicitCastExpr 0x563f2e9fd5a8 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x563f2e9fd4d0 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x563f2e9fd4b8 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x563f2e9fd478 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s16(int, int16_t)"
|   `-BinaryOperator 0x563f2e9fd848 <line:527:2, col:65> 'click_aliasable_int16_t':'short' lvalue '='
|     |-UnaryOperator 0x563f2e9fd7f8 <col:2, col:61> 'click_aliasable_int16_t':'short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x563f2e9fd7c8 <col:3, col:61> 'click_aliasable_int16_t *' reinterpret_cast<click_aliasable_int16_t *> <BitCast>
|     |   `-BinaryOperator 0x563f2e9fd770 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x563f2e9fd730 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x563f2e9fd6e0 <col:47, col:56> 'char [48]' lvalue ->c 0x563f2e9ef9c0
|     |     |   `-CXXMemberCallExpr 0x563f2e9fd6c0 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x563f2e9fd690 <col:47> '<bound member function type>' ->xanno 0x563f2e9e4ca8
|     |     |       `-CXXThisExpr 0x563f2e9fd680 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x563f2e9fd748 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x563f2e9fd710 <col:60> 'int' lvalue ParmVar 0x563f2e9e7bf8 'i' 'int'
|     `-ImplicitCastExpr 0x563f2e9fd830 <col:65> 'int16_t':'short' <LValueToRValue>
|       `-DeclRefExpr 0x563f2e9fd810 <col:65> 'int16_t':'short' lvalue ParmVar 0x563f2e9e7c70 'x' 'int16_t':'short'
|-CXXMethodDecl 0x563f2e9e7f48 <line:535:5, line:541:5> line:535:14 used anno_u32 'uint32_t (int) const'
| |-ParmVarDecl 0x563f2e9e7e50 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x563f2e9fdf38 <col:36, line:541:5>
|   |-ParenExpr 0x563f2e9fdcd8 <line:536:2, col:182> 'void'
|   | `-ConditionalOperator 0x563f2e9fdca8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x563f2e9fda00 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x563f2e9fd9d0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x563f2e9fd8e0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x563f2e9fd8c8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x563f2e9fd888 <col:23> 'int' lvalue ParmVar 0x563f2e9e7e50 'i' 'int'
|   |   |   | `-IntegerLiteral 0x563f2e9fd8a8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x563f2e9fd9b0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x563f2e9fd998 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x563f2e9fd900 <col:33> 'int' lvalue ParmVar 0x563f2e9e7e50 'i' 'int'
|   |   |     `-BinaryOperator 0x563f2e9fd978 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x563f2e9fd960 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x563f2e9fd920 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x563f2e9e4ef0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x563f2e9fd940 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x563f2e9fda60 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x563f2e9fda40 <col:60> 'int' 0
|   |   `-CallExpr 0x563f2e9fdc08 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x563f2e9fdbf0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x563f2e9fdbd0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x563f2e5515c0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x563f2e9fdc48 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563f2e9fdad0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x563f2e9fdc60 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563f2e9fdb08 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x563f2e9fdc78 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x563f2e9fdb40 <col:143> 'int' 536
|   |     `-ImplicitCastExpr 0x563f2e9fdc90 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x563f2e9fdbb8 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x563f2e9fdba0 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x563f2e9fdb60 <col:162> 'const char [37]' lvalue "uint32_t Packet::anno_u32(int) const"
|   `-ReturnStmt 0x563f2e9fdf28 <line:540:2, col:75>
|     `-ImplicitCastExpr 0x563f2e9fdf10 <col:9, col:75> 'click_aliasable_uint32_t':'unsigned int' <LValueToRValue>
|       `-UnaryOperator 0x563f2e9fdef8 <col:9, col:75> 'const click_aliasable_uint32_t':'const unsigned int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x563f2e9fdec8 <col:10, col:75> 'const click_aliasable_uint32_t *' reinterpret_cast<const click_aliasable_uint32_t *> <BitCast>
|           `-BinaryOperator 0x563f2e9fde70 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x563f2e9fde40 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x563f2e9fddf0 <col:61, col:70> 'char const[48]' lvalue ->c 0x563f2e9ef9c0
|             |   `-CXXMemberCallExpr 0x563f2e9fddd0 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x563f2e9fdda0 <col:61> '<bound member function type>' ->xanno 0x563f2e9e4b08
|             |       `-CXXThisExpr 0x563f2e9fdd90 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x563f2e9fde58 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x563f2e9fde20 <col:74> 'int' lvalue ParmVar 0x563f2e9e7e50 'i' 'int'
|-CXXMethodDecl 0x563f2e9e8118 <line:550:5, col:75> col:45 used set_anno_u32 'void (int, uint32_t)'
| |-ParmVarDecl 0x563f2e9e8008 <col:58, col:62> col:62 i 'int'
| |-ParmVarDecl 0x563f2e9e8080 <col:65, col:74> col:74 x 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x563f2e9e81c8 <col:20>
| `-OptimizeNoneAttr 0x563f2e9e8220 <col:30>
|-CXXMethodDecl 0x563f2e9e8358 <line:556:5, line:562:5> line:556:13 used anno_s32 'int32_t (int) const'
| |-ParmVarDecl 0x563f2e9e8260 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x563f2e9fe608 <col:35, line:562:5>
|   |-ParenExpr 0x563f2e9fe3a8 <line:557:2, col:182> 'void'
|   | `-ConditionalOperator 0x563f2e9fe378 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x563f2e9fe0d0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x563f2e9fe0a0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x563f2e9fdfb0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x563f2e9fdf98 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x563f2e9fdf58 <col:23> 'int' lvalue ParmVar 0x563f2e9e8260 'i' 'int'
|   |   |   | `-IntegerLiteral 0x563f2e9fdf78 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x563f2e9fe080 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x563f2e9fe068 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x563f2e9fdfd0 <col:33> 'int' lvalue ParmVar 0x563f2e9e8260 'i' 'int'
|   |   |     `-BinaryOperator 0x563f2e9fe048 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x563f2e9fe030 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x563f2e9fdff0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x563f2e9e4ef0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x563f2e9fe010 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x563f2e9fe130 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x563f2e9fe110 <col:60> 'int' 0
|   |   `-CallExpr 0x563f2e9fe2d8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x563f2e9fe2c0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x563f2e9fe2a0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x563f2e5515c0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x563f2e9fe318 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563f2e9fe1a0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x563f2e9fe330 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563f2e9fe1d8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x563f2e9fe348 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x563f2e9fe210 <col:143> 'int' 557
|   |     `-ImplicitCastExpr 0x563f2e9fe360 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x563f2e9fe288 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x563f2e9fe270 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x563f2e9fe230 <col:162> 'const char [36]' lvalue "int32_t Packet::anno_s32(int) const"
|   `-ReturnStmt 0x563f2e9fe5f8 <line:561:2, col:74>
|     `-ImplicitCastExpr 0x563f2e9fe5e0 <col:9, col:74> 'click_aliasable_int32_t':'int' <LValueToRValue>
|       `-UnaryOperator 0x563f2e9fe5c8 <col:9, col:74> 'const click_aliasable_int32_t':'const int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x563f2e9fe598 <col:10, col:74> 'const click_aliasable_int32_t *' reinterpret_cast<const click_aliasable_int32_t *> <BitCast>
|           `-BinaryOperator 0x563f2e9fe540 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x563f2e9fe510 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x563f2e9fe4c0 <col:60, col:69> 'char const[48]' lvalue ->c 0x563f2e9ef9c0
|             |   `-CXXMemberCallExpr 0x563f2e9fe4a0 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x563f2e9fe470 <col:60> '<bound member function type>' ->xanno 0x563f2e9e4b08
|             |       `-CXXThisExpr 0x563f2e9fe460 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x563f2e9fe528 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x563f2e9fe4f0 <col:73> 'int' lvalue ParmVar 0x563f2e9e8260 'i' 'int'
|-CXXMethodDecl 0x563f2e9e8568 <line:571:5, line:577:5> line:571:10 used set_anno_s32 'void (int, int32_t)'
| |-ParmVarDecl 0x563f2e9e8418 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x563f2e9e8490 <col:30, col:38> col:38 used x 'int32_t':'int'
| `-CompoundStmt 0x563f2e9fece8 <col:41, line:577:5>
|   |-ParenExpr 0x563f2e9fea78 <line:572:2, col:182> 'void'
|   | `-ConditionalOperator 0x563f2e9fea48 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x563f2e9fe7a0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x563f2e9fe770 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x563f2e9fe680 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x563f2e9fe668 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x563f2e9fe628 <col:23> 'int' lvalue ParmVar 0x563f2e9e8418 'i' 'int'
|   |   |   | `-IntegerLiteral 0x563f2e9fe648 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x563f2e9fe750 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x563f2e9fe738 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x563f2e9fe6a0 <col:33> 'int' lvalue ParmVar 0x563f2e9e8418 'i' 'int'
|   |   |     `-BinaryOperator 0x563f2e9fe718 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x563f2e9fe700 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x563f2e9fe6c0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x563f2e9e4ef0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x563f2e9fe6e0 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x563f2e9fe800 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x563f2e9fe7e0 <col:60> 'int' 0
|   |   `-CallExpr 0x563f2e9fe9a8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x563f2e9fe990 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x563f2e9fe970 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x563f2e5515c0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x563f2e9fe9e8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563f2e9fe870 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x563f2e9fea00 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563f2e9fe8a8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x563f2e9fea18 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x563f2e9fe8e0 <col:143> 'int' 572
|   |     `-ImplicitCastExpr 0x563f2e9fea30 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x563f2e9fe958 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x563f2e9fe940 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x563f2e9fe900 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s32(int, int32_t)"
|   `-BinaryOperator 0x563f2e9fecc8 <line:576:2, col:65> 'click_aliasable_int32_t':'int' lvalue '='
|     |-UnaryOperator 0x563f2e9fec78 <col:2, col:61> 'click_aliasable_int32_t':'int' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x563f2e9fec48 <col:3, col:61> 'click_aliasable_int32_t *' reinterpret_cast<click_aliasable_int32_t *> <BitCast>
|     |   `-BinaryOperator 0x563f2e9febe8 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x563f2e9febb8 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x563f2e9feb68 <col:47, col:56> 'char [48]' lvalue ->c 0x563f2e9ef9c0
|     |     |   `-CXXMemberCallExpr 0x563f2e9feb48 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x563f2e9feb18 <col:47> '<bound member function type>' ->xanno 0x563f2e9e4ca8
|     |     |       `-CXXThisExpr 0x563f2e9feb08 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x563f2e9febd0 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x563f2e9feb98 <col:60> 'int' lvalue ParmVar 0x563f2e9e8418 'i' 'int'
|     `-ImplicitCastExpr 0x563f2e9fecb0 <col:65> 'int32_t':'int' <LValueToRValue>
|       `-DeclRefExpr 0x563f2e9fec90 <col:65> 'int32_t':'int' lvalue ParmVar 0x563f2e9e8490 'x' 'int32_t':'int'
|-CXXMethodDecl 0x563f2e9e8728 <line:585:5, line:591:5> line:585:14 used anno_u64 'uint64_t (int) const'
| |-ParmVarDecl 0x563f2e9e8630 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x563f2e9ff418 <col:36, line:591:5>
|   |-ParenExpr 0x563f2e9ff158 <line:586:2, col:182> 'void'
|   | `-ConditionalOperator 0x563f2e9ff128 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x563f2e9fee80 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x563f2e9fee50 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x563f2e9fed60 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x563f2e9fed48 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x563f2e9fed08 <col:23> 'int' lvalue ParmVar 0x563f2e9e8630 'i' 'int'
|   |   |   | `-IntegerLiteral 0x563f2e9fed28 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x563f2e9fee30 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x563f2e9fee18 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x563f2e9fed80 <col:33> 'int' lvalue ParmVar 0x563f2e9e8630 'i' 'int'
|   |   |     `-BinaryOperator 0x563f2e9fedf8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x563f2e9fede0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x563f2e9feda0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x563f2e9e4ef0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x563f2e9fedc0 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x563f2e9feee0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x563f2e9feec0 <col:60> 'int' 0
|   |   `-CallExpr 0x563f2e9ff088 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x563f2e9ff070 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x563f2e9ff050 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x563f2e5515c0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x563f2e9ff0c8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563f2e9fef50 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x563f2e9ff0e0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563f2e9fef88 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x563f2e9ff0f8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x563f2e9fefc0 <col:143> 'int' 586
|   |     `-ImplicitCastExpr 0x563f2e9ff110 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x563f2e9ff038 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x563f2e9ff020 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x563f2e9fefe0 <col:162> 'const char [37]' lvalue "uint64_t Packet::anno_u64(int) const"
|   `-ReturnStmt 0x563f2e9ff408 <line:590:2, col:75>
|     `-ImplicitCastExpr 0x563f2e9ff3f0 <col:9, col:75> 'click_aliasable_uint64_t':'unsigned long' <LValueToRValue>
|       `-UnaryOperator 0x563f2e9ff3d8 <col:9, col:75> 'const click_aliasable_uint64_t':'const unsigned long' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x563f2e9ff3a8 <col:10, col:75> 'const click_aliasable_uint64_t *' reinterpret_cast<const click_aliasable_uint64_t *> <BitCast>
|           `-BinaryOperator 0x563f2e9ff320 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x563f2e9ff2f0 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x563f2e9ff2a0 <col:61, col:70> 'char const[48]' lvalue ->c 0x563f2e9ef9c0
|             |   `-CXXMemberCallExpr 0x563f2e9ff280 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x563f2e9ff250 <col:61> '<bound member function type>' ->xanno 0x563f2e9e4b08
|             |       `-CXXThisExpr 0x563f2e9ff240 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x563f2e9ff308 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x563f2e9ff2d0 <col:74> 'int' lvalue ParmVar 0x563f2e9e8630 'i' 'int'
|-CXXMethodDecl 0x563f2e9e8978 <line:600:5, line:606:5> line:600:10 used set_anno_u64 'void (int, uint64_t)'
| |-ParmVarDecl 0x563f2e9e87e8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x563f2e9e8860 <col:30, col:39> col:39 used x 'uint64_t':'unsigned long'
| `-CompoundStmt 0x563f2e9ffaf8 <col:42, line:606:5>
|   |-ParenExpr 0x563f2e9ff888 <line:601:2, col:182> 'void'
|   | `-ConditionalOperator 0x563f2e9ff858 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x563f2e9ff5b0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x563f2e9ff580 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x563f2e9ff490 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x563f2e9ff478 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x563f2e9ff438 <col:23> 'int' lvalue ParmVar 0x563f2e9e87e8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x563f2e9ff458 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x563f2e9ff560 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x563f2e9ff548 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x563f2e9ff4b0 <col:33> 'int' lvalue ParmVar 0x563f2e9e87e8 'i' 'int'
|   |   |     `-BinaryOperator 0x563f2e9ff528 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x563f2e9ff510 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x563f2e9ff4d0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x563f2e9e4ef0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x563f2e9ff4f0 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x563f2e9ff610 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x563f2e9ff5f0 <col:60> 'int' 0
|   |   `-CallExpr 0x563f2e9ff7b8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x563f2e9ff7a0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x563f2e9ff780 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x563f2e5515c0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x563f2e9ff7f8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563f2e9ff680 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x563f2e9ff810 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563f2e9ff6b8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x563f2e9ff828 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x563f2e9ff6f0 <col:143> 'int' 601
|   |     `-ImplicitCastExpr 0x563f2e9ff840 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x563f2e9ff768 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x563f2e9ff750 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x563f2e9ff710 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u64(int, uint64_t)"
|   `-BinaryOperator 0x563f2e9ffad8 <line:605:2, col:66> 'click_aliasable_uint64_t':'unsigned long' lvalue '='
|     |-UnaryOperator 0x563f2e9ffa88 <col:2, col:62> 'click_aliasable_uint64_t':'unsigned long' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x563f2e9ffa58 <col:3, col:62> 'click_aliasable_uint64_t *' reinterpret_cast<click_aliasable_uint64_t *> <BitCast>
|     |   `-BinaryOperator 0x563f2e9ff9f8 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x563f2e9ff9c8 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x563f2e9ff978 <col:48, col:57> 'char [48]' lvalue ->c 0x563f2e9ef9c0
|     |     |   `-CXXMemberCallExpr 0x563f2e9ff958 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x563f2e9ff928 <col:48> '<bound member function type>' ->xanno 0x563f2e9e4ca8
|     |     |       `-CXXThisExpr 0x563f2e9ff918 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x563f2e9ff9e0 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x563f2e9ff9a8 <col:61> 'int' lvalue ParmVar 0x563f2e9e87e8 'i' 'int'
|     `-ImplicitCastExpr 0x563f2e9ffac0 <col:66> 'uint64_t':'unsigned long' <LValueToRValue>
|       `-DeclRefExpr 0x563f2e9ffaa0 <col:66> 'uint64_t':'unsigned long' lvalue ParmVar 0x563f2e9e8860 'x' 'uint64_t':'unsigned long'
|-CXXMethodDecl 0x563f2e9e8b10 <line:614:5, line:620:5> line:614:11 anno_ptr 'void *(int) const'
| |-ParmVarDecl 0x563f2e9e8a40 <col:20, col:24> col:24 used i 'int'
| `-CompoundStmt 0x563f2ea00368 <col:33, line:620:5>
|   |-ParenExpr 0x563f2ea000e0 <line:615:2, col:220> 'void'
|   | `-ConditionalOperator 0x563f2ea000b0 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x563f2e9ffd00 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x563f2e9ffcd0 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x563f2e9ffb70 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x563f2e9ffb58 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x563f2e9ffb18 <col:23> 'int' lvalue ParmVar 0x563f2e9e8a40 'i' 'int'
|   |   |   | `-IntegerLiteral 0x563f2e9ffb38 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x563f2e9ffcb0 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x563f2e9ffc98 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x563f2e9ffb90 <col:33> 'int' lvalue ParmVar 0x563f2e9e8a40 'i' 'int'
|   |   |     `-BinaryOperator 0x563f2e9ffc78 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x563f2e9ffc60 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x563f2e9ffbb0 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x563f2e9e4ef0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x563f2e9ffc38 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x563f2e9ffc20 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x563f2e9ffbe8 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x563f2e9ffd60 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x563f2e9ffd40 <col:79> 'int' 0
|   |   `-CallExpr 0x563f2ea00010 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x563f2e9ffff8 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x563f2e9fffd8 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x563f2e5515c0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x563f2ea00050 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563f2e9ffe48 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x563f2ea00068 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563f2e9ffe90 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x563f2ea00080 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x563f2e9ffec8 <col:181> 'int' 615
|   |     `-ImplicitCastExpr 0x563f2ea00098 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x563f2e9fffc0 <col:186, col:200> 'const char [34]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x563f2e9fffa8 <col:200> 'const char [34]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x563f2e9fff68 <col:200> 'const char [34]' lvalue "void *Packet::anno_ptr(int) const"
|   `-ReturnStmt 0x563f2ea00358 <line:619:2, col:81>
|     `-ImplicitCastExpr 0x563f2ea00340 <col:9, col:81> 'click_aliasable_void_pointer_t':'void *' <LValueToRValue>
|       `-UnaryOperator 0x563f2ea00328 <col:9, col:81> 'const click_aliasable_void_pointer_t':'void *const' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x563f2ea002f8 <col:10, col:81> 'const click_aliasable_void_pointer_t *' reinterpret_cast<const click_aliasable_void_pointer_t *> <BitCast>
|           `-BinaryOperator 0x563f2ea00270 <col:67, col:80> 'const char *' '+'
|             |-ImplicitCastExpr 0x563f2ea00240 <col:67, col:76> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x563f2ea001f0 <col:67, col:76> 'char const[48]' lvalue ->c 0x563f2e9ef9c0
|             |   `-CXXMemberCallExpr 0x563f2ea001d0 <col:67, col:73> 'const Packet::Anno *'
|             |     `-MemberExpr 0x563f2ea001a0 <col:67> '<bound member function type>' ->xanno 0x563f2e9e4b08
|             |       `-CXXThisExpr 0x563f2ea00190 <col:67> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x563f2ea00258 <col:80> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x563f2ea00220 <col:80> 'int' lvalue ParmVar 0x563f2e9e8a40 'i' 'int'
|-CXXMethodDecl 0x563f2e9e8d28 <line:629:5, line:635:5> line:629:10 set_anno_ptr 'void (int, const void *)'
| |-ParmVarDecl 0x563f2e9e8bd0 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x563f2e9e8c50 <col:30, col:42> col:42 used x 'const void *'
| `-CompoundStmt 0x563f2ea00b90 <col:45, line:635:5>
|   |-ParenExpr 0x563f2ea008d8 <line:630:2, col:220> 'void'
|   | `-ConditionalOperator 0x563f2ea008a8 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x563f2ea00570 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x563f2ea00540 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x563f2ea003e0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x563f2ea003c8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x563f2ea00388 <col:23> 'int' lvalue ParmVar 0x563f2e9e8bd0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x563f2ea003a8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x563f2ea00520 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x563f2ea00508 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x563f2ea00400 <col:33> 'int' lvalue ParmVar 0x563f2e9e8bd0 'i' 'int'
|   |   |     `-BinaryOperator 0x563f2ea004e8 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x563f2ea004d0 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x563f2ea00420 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x563f2e9e4ef0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x563f2ea004a8 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x563f2ea00490 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x563f2ea00458 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x563f2ea005d0 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x563f2ea005b0 <col:79> 'int' 0
|   |   `-CallExpr 0x563f2ea00808 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x563f2ea007f0 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x563f2ea007d0 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x563f2e5515c0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x563f2ea00848 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563f2ea00640 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x563f2ea00860 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563f2ea00688 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x563f2ea00878 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x563f2ea006c0 <col:181> 'int' 630
|   |     `-ImplicitCastExpr 0x563f2ea00890 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x563f2ea007b8 <col:186, col:200> 'const char [45]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x563f2ea007a0 <col:200> 'const char [45]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x563f2ea00758 <col:200> 'const char [45]' lvalue "void Packet::set_anno_ptr(int, const void *)"
|   `-BinaryOperator 0x563f2ea00b70 <line:634:2, col:92> 'click_aliasable_void_pointer_t':'void *' lvalue '='
|     |-UnaryOperator 0x563f2ea00ad8 <col:2, col:68> 'click_aliasable_void_pointer_t':'void *' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x563f2ea00aa8 <col:3, col:68> 'click_aliasable_void_pointer_t *' reinterpret_cast<click_aliasable_void_pointer_t *> <BitCast>
|     |   `-BinaryOperator 0x563f2ea00a48 <col:54, col:67> 'char *' '+'
|     |     |-ImplicitCastExpr 0x563f2ea00a18 <col:54, col:63> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x563f2ea009c8 <col:54, col:63> 'char [48]' lvalue ->c 0x563f2e9ef9c0
|     |     |   `-CXXMemberCallExpr 0x563f2ea009a8 <col:54, col:60> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x563f2ea00978 <col:54> '<bound member function type>' ->xanno 0x563f2e9e4ca8
|     |     |       `-CXXThisExpr 0x563f2ea00968 <col:54> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x563f2ea00a30 <col:67> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x563f2ea009f8 <col:67> 'int' lvalue ParmVar 0x563f2e9e8bd0 'i' 'int'
|     `-CXXConstCastExpr 0x563f2ea00b40 <col:72, col:92> 'void *' const_cast<void *> <NoOp>
|       `-ImplicitCastExpr 0x563f2ea00b28 <col:91> 'const void *' <LValueToRValue> part_of_explicit_cast
|         `-DeclRefExpr 0x563f2ea00af0 <col:91> 'const void *' lvalue ParmVar 0x563f2e9e8c50 'x' 'const void *'
|-CXXMethodDecl 0x563f2e9e8df8 <line:638:5, line:640:5> line:638:20 data_packet 'Packet *()' inline
| `-CompoundStmt 0x563f2ea00c18 <col:34, line:640:5>
|   `-ReturnStmt 0x563f2ea00c08 <line:639:9, col:16>
|     `-ImplicitCastExpr 0x563f2ea00bf0 <col:16> 'Packet *' <LValueToRValue>
|       `-MemberExpr 0x563f2ea00bc0 <col:16> 'Packet *' lvalue ->_data_packet 0x563f2e9f0578
|         `-CXXThisExpr 0x563f2ea00bb0 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x563f2e9e8f38 <line:643:5, col:50> col:17 used clear_annotations 'void (bool)' inline
| `-ParmVarDecl 0x563f2e9e8ea8 <col:35, col:46> col:40 all 'bool' cinit
|   `-CXXBoolLiteralExpr 0x563f2e9f9cd8 <col:46> 'bool' true
|-CXXMethodDecl 0x563f2e9e90b8 <line:644:5, col:48> col:17 copy_annotations 'void (const Packet *)' inline
| `-ParmVarDecl 0x563f2e9e8ff0 <col:34, col:47> col:48 'const Packet *'
|-EnumDecl 0x563f2e9e9160 <line:648:5, line:660:5> line:648:5
| |-DeprecatedAttr 0x563f2e9e9910 <line:660:22> "" ""
| |-EnumConstantDecl 0x563f2e9e9260 <line:649:2, col:21> col:2 DEFAULT_HEADROOM 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x563f2e9e9980 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563f2e9e9240 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 28
| |     `-DeclRefExpr 0x563f2e9e9220 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x563f2e9de3c0 'default_headroom' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x563f2e9e92f0 <line:650:2, col:22> col:2 MIN_BUFFER_LENGTH 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x563f2e9e9998 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563f2e9e92d0 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 64
| |     `-DeclRefExpr 0x563f2e9e92b0 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x563f2e9de450 'min_buffer_length' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x563f2e9e9380 <line:651:2, col:21> col:2 referenced addr_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x563f2e9e99b0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563f2e9e9360 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x563f2e9e9340 <col:21> 'int' 0
| |-EnumConstantDecl 0x563f2e9e9410 <line:652:2, col:19> col:2 referenced addr_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x563f2e9e99c8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563f2e9e93f0 <col:19> 'int' Int: 16
| |     `-IntegerLiteral 0x563f2e9e93d0 <col:19> 'int' 16
| |-EnumConstantDecl 0x563f2e9e94a0 <line:653:2, col:21> col:2 referenced user_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x563f2e9e99e0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563f2e9e9480 <col:21> 'int' Int: 16
| |     `-IntegerLiteral 0x563f2e9e9460 <col:21> 'int' 16
| |-EnumConstantDecl 0x563f2e9e9530 <line:654:2, col:19> col:2 referenced user_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x563f2e9e99f8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563f2e9e9510 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x563f2e9e94f0 <col:19> 'int' 32
| |-EnumConstantDecl 0x563f2e9e95c0 <line:655:2, col:19> col:2 ADDR_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x563f2e9e9a10 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563f2e9e95a0 <col:19> 'int' Int: 16
| |     `-DeclRefExpr 0x563f2e9e9580 <col:19> 'int' EnumConstant 0x563f2e9e9410 'addr_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x563f2e9e9650 <line:656:2, col:19> col:2 referenced USER_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x563f2e9e9a28 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563f2e9e9630 <col:19> 'int' Int: 32
| |     `-DeclRefExpr 0x563f2e9e9610 <col:19> 'int' EnumConstant 0x563f2e9e9530 'user_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x563f2e9e9720 <line:657:2, col:40> col:2 USER_ANNO_U16_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x563f2e9e9a40 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563f2e9e9700 <col:23, col:40> 'int' Int: 16
| |     `-BinaryOperator 0x563f2e9e96e0 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x563f2e9e96a0 <col:23> 'int' EnumConstant 0x563f2e9e9650 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x563f2e9e96c0 <col:40> 'int' 2
| |-EnumConstantDecl 0x563f2e9e97f0 <line:658:2, col:40> col:2 USER_ANNO_U32_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x563f2e9e9a58 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563f2e9e97d0 <col:23, col:40> 'int' Int: 8
| |     `-BinaryOperator 0x563f2e9e97b0 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x563f2e9e9770 <col:23> 'int' EnumConstant 0x563f2e9e9650 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x563f2e9e9790 <col:40> 'int' 4
| `-EnumConstantDecl 0x563f2e9e98c0 <line:659:2, col:40> col:2 USER_ANNO_U64_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|   `-ImplicitCastExpr 0x563f2e9e9a70 <col:23, col:40> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x563f2e9e98a0 <col:23, col:40> 'int' Int: 4
|       `-BinaryOperator 0x563f2e9e9880 <col:23, col:40> 'int' '/'
|         |-DeclRefExpr 0x563f2e9e9840 <col:23> 'int' EnumConstant 0x563f2e9e9650 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|         `-IntegerLiteral 0x563f2e9e9860 <col:40> 'int' 8
|-CXXMethodDecl 0x563f2e9e9ab0 <line:661:5, col:79> col:33 buffer_data 'const unsigned char *() const' inline
| `-DeprecatedAttr 0x563f2e9e9b50 <col:68> "" ""
|-CXXMethodDecl 0x563f2e9e9be8 <line:662:5, col:56> col:18 addr_anno 'void *()' inline
| `-DeprecatedAttr 0x563f2e9e9c88 <col:45> "" ""
|-CXXMethodDecl 0x563f2e9e9d20 <line:663:5, col:68> col:24 addr_anno 'const void *() const' inline
| `-DeprecatedAttr 0x563f2e9e9dc0 <col:57> "" ""
|-CXXMethodDecl 0x563f2e9e9e58 <line:664:5, col:56> col:18 user_anno 'void *()' inline
| `-DeprecatedAttr 0x563f2e9e9ef8 <col:45> "" ""
|-CXXMethodDecl 0x563f2e9e9f90 <line:665:5, col:68> col:24 user_anno 'const void *() const' inline
| `-DeprecatedAttr 0x563f2e9ea030 <col:57> "" ""
|-CXXMethodDecl 0x563f2e9ea0c0 <line:666:5, col:62> col:21 user_anno_u8 'uint8_t *()' inline
| `-DeprecatedAttr 0x563f2e9ea160 <col:51> "" ""
|-CXXMethodDecl 0x563f2e9ea1f0 <line:667:5, col:74> col:27 user_anno_u8 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x563f2e9ea290 <col:63> "" ""
|-CXXMethodDecl 0x563f2e9ea320 <line:668:5, col:64> col:22 user_anno_u32 'uint32_t *()' inline
| `-DeprecatedAttr 0x563f2e9ea3c0 <col:53> "" ""
|-CXXMethodDecl 0x563f2e9ea450 <line:669:5, col:76> col:28 user_anno_u32 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x563f2e9ea4f0 <col:65> "" ""
|-CXXMethodDecl 0x563f2e9ea608 <line:670:5, col:72> col:20 user_anno_u8 'uint8_t (int) const' inline
| |-ParmVarDecl 0x563f2e9ea578 <col:33, col:37> col:37 i 'int'
| `-DeprecatedAttr 0x563f2e9ea6b0 <col:61> "" ""
|-CXXMethodDecl 0x563f2e9ea848 <line:671:5, col:78> col:17 set_user_anno_u8 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x563f2e9ea738 <col:34, col:38> col:38 i 'int'
| |-ParmVarDecl 0x563f2e9ea7b0 <col:41, col:49> col:49 v 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x563f2e9ea8f8 <col:67> "" ""
|-CXXMethodDecl 0x563f2e9eaa10 <line:672:5, col:74> col:21 user_anno_u16 'uint16_t (int) const' inline
| |-ParmVarDecl 0x563f2e9ea980 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x563f2e9eaab8 <col:63> "" ""
|-CXXMethodDecl 0x563f2e9eac50 <line:673:5, col:80> col:17 set_user_anno_u16 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x563f2e9eab40 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x563f2e9eabb8 <col:42, col:51> col:51 v 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x563f2e9ead00 <col:69> "" ""
|-CXXMethodDecl 0x563f2e9eae18 <line:674:5, col:74> col:21 user_anno_u32 'uint32_t (int) const' inline
| |-ParmVarDecl 0x563f2e9ead88 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x563f2e9eaec0 <col:63> "" ""
|-CXXMethodDecl 0x563f2e9ed598 <line:675:5, col:80> col:17 set_user_anno_u32 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x563f2e9ed488 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x563f2e9ed500 <col:42, col:51> col:51 v 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x563f2e9ed648 <col:69> "" ""
|-CXXMethodDecl 0x563f2e9ed760 <line:676:5, col:73> col:20 user_anno_s32 'int32_t (int) const' inline
| |-ParmVarDecl 0x563f2e9ed6d0 <col:34, col:38> col:38 i 'int'
| `-DeprecatedAttr 0x563f2e9ed808 <col:62> "" ""
|-CXXMethodDecl 0x563f2e9ed9a0 <line:677:5, col:79> col:17 set_user_anno_s32 'void (int, int32_t)' inline
| |-ParmVarDecl 0x563f2e9ed890 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x563f2e9ed908 <col:42, col:50> col:50 v 'int32_t':'int'
| `-DeprecatedAttr 0x563f2e9eda50 <col:68> "" ""
|-CXXMethodDecl 0x563f2e9edb68 <line:679:5, col:74> col:21 user_anno_u64 'uint64_t (int) const' inline
| |-ParmVarDecl 0x563f2e9edad8 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x563f2e9edc10 <col:63> "" ""
|-CXXMethodDecl 0x563f2e9edda8 <line:680:5, col:80> col:17 set_user_anno_u64 'void (int, uint64_t)' inline
| |-ParmVarDecl 0x563f2e9edc98 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x563f2e9edd10 <col:42, col:51> col:51 v 'uint64_t':'unsigned long'
| `-DeprecatedAttr 0x563f2e9ede58 <col:69> "" ""
|-CXXMethodDecl 0x563f2e9edee8 <line:682:5, col:75> col:27 all_user_anno 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x563f2e9edf88 <col:64> "" ""
|-CXXMethodDecl 0x563f2e9ee018 <line:683:5, col:63> col:21 all_user_anno 'uint8_t *()' inline
| `-DeprecatedAttr 0x563f2e9ee0b8 <col:52> "" ""
|-CXXMethodDecl 0x563f2e9ee148 <line:684:5, col:78> col:28 all_user_anno_u 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x563f2e9ee1e8 <col:67> "" ""
|-CXXMethodDecl 0x563f2e9ee278 <line:685:5, col:66> col:22 all_user_anno_u 'uint32_t *()' inline
| `-DeprecatedAttr 0x563f2e9ee318 <col:55> "" ""
|-CXXMethodDecl 0x563f2e9ee430 <line:686:5, col:69> col:20 user_anno_c 'uint8_t (int) const' inline
| |-ParmVarDecl 0x563f2e9ee3a0 <col:32> col:35 'int'
| `-DeprecatedAttr 0x563f2e9ee4d8 <col:58> "" ""
|-CXXMethodDecl 0x563f2e9ee670 <line:687:5, col:73> col:17 set_user_anno_c 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x563f2e9ee560 <col:33> col:36 'int'
| |-ParmVarDecl 0x563f2e9ee5d8 <col:38> col:45 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x563f2e9ee720 <col:62> "" ""
|-CXXMethodDecl 0x563f2e9ee838 <line:688:5, col:69> col:20 user_anno_s 'int16_t (int) const' inline
| |-ParmVarDecl 0x563f2e9ee7a8 <col:32> col:35 'int'
| `-DeprecatedAttr 0x563f2e9ee8e0 <col:58> "" ""
|-CXXMethodDecl 0x563f2e9eea78 <line:689:5, col:73> col:17 set_user_anno_s 'void (int, int16_t)' inline
| |-ParmVarDecl 0x563f2e9ee968 <col:33> col:36 'int'
| |-ParmVarDecl 0x563f2e9ee9e0 <col:38> col:45 'int16_t':'short'
| `-DeprecatedAttr 0x563f2e9eeb28 <col:62> "" ""
|-CXXMethodDecl 0x563f2e9eec40 <line:690:5, col:71> col:21 user_anno_us 'uint16_t (int) const' inline
| |-ParmVarDecl 0x563f2e9eebb0 <col:34> col:37 'int'
| `-DeprecatedAttr 0x563f2e9eece8 <col:60> "" ""
|-CXXMethodDecl 0x563f2e9eee80 <line:691:5, col:75> col:17 set_user_anno_us 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x563f2e9eed70 <col:34> col:37 'int'
| |-ParmVarDecl 0x563f2e9eede8 <col:39> col:47 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x563f2e9eef30 <col:64> "" ""
|-CXXMethodDecl 0x563f2e9ef048 <line:692:5, col:69> col:20 user_anno_i 'int32_t (int) const' inline
| |-ParmVarDecl 0x563f2e9eefb8 <col:32> col:35 'int'
| `-DeprecatedAttr 0x563f2e9ef0f0 <col:58> "" ""
|-CXXMethodDecl 0x563f2e9ef288 <line:693:5, col:73> col:17 set_user_anno_i 'void (int, int32_t)' inline
| |-ParmVarDecl 0x563f2e9ef178 <col:33> col:36 'int'
| |-ParmVarDecl 0x563f2e9ef1f0 <col:38> col:45 'int32_t':'int'
| `-DeprecatedAttr 0x563f2e9ef338 <col:62> "" ""
|-CXXMethodDecl 0x563f2e9ef450 <line:694:5, col:70> col:21 user_anno_u 'uint32_t (int) const' inline
| |-ParmVarDecl 0x563f2e9ef3c0 <col:33> col:36 'int'
| `-DeprecatedAttr 0x563f2e9ef4f8 <col:59> "" ""
|-CXXMethodDecl 0x563f2e9ef690 <line:695:5, col:74> col:17 set_user_anno_u 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x563f2e9ef580 <col:33> col:36 'int'
| |-ParmVarDecl 0x563f2e9ef5f8 <col:38> col:46 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x563f2e9ef740 <col:63> "" ""
|-AccessSpecDecl 0x563f2e9ef7b0 <line:698:3, col:10> col:3 private
|-CXXRecordDecl 0x563f2e9ef7d8 prev 0x563f2e9e49e0 <line:702:5, line:711:5> line:702:11 referenced union Anno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x563f2e9ef8d0 <col:5, col:11> col:11 implicit union Anno
| |-FieldDecl 0x563f2e9ef9c0 <line:703:2, col:18> col:7 referenced c 'char [48]'
| |-FieldDecl 0x563f2e9efae8 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
| |-FieldDecl 0x563f2e9efc68 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
| |-FieldDecl 0x563f2e9efde8 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
| |-FieldDecl 0x563f2e9eff68 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
| |-CXXConstructorDecl 0x563f2ea00d98 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x563f2ea01608 <col:11>
| |-CXXDestructorDecl 0x563f2ea00e70 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
| |-CXXConstructorDecl 0x563f2ea00fa8 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x563f2ea00fa8
| | `-ParmVarDecl 0x563f2ea010b8 <col:11> col:11 'const Packet::Anno &'
| |-CXXConstructorDecl 0x563f2ea01158 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x563f2ea01158
| | `-ParmVarDecl 0x563f2ea01268 <col:11> col:11 'Packet::Anno &&'
| |-CXXMethodDecl 0x563f2ea04028 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| | |-ParmVarDecl 0x563f2ea04138 <col:11> col:11 'const Packet::Anno &'
| | `-CompoundStmt 0x563f2ea043b8 <col:11>
| |   `-ReturnStmt 0x563f2ea043a8 <col:11>
| |     `-UnaryOperator 0x563f2ea04390 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x563f2ea04380 <col:11> 'Packet::Anno *' this
| `-CXXMethodDecl 0x563f2ea041a8 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x563f2ea041a8
|   `-ParmVarDecl 0x563f2ea042b8 <col:11> col:11 'Packet::Anno &&'
|-CXXRecordDecl 0x563f2e9effd0 <line:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x563f2e9f00e8 <col:5, col:12> col:12 implicit struct AllAnno
| |-FieldDecl 0x563f2e9f0188 <line:717:2, col:7> col:7 cb 'Packet::Anno'
| |-FieldDecl 0x563f2e9f01f0 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
| |-FieldDecl 0x563f2e9f0258 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
| |-FieldDecl 0x563f2e9f02c0 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
| |-FieldDecl 0x563f2e9f0320 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
| |-FieldDecl 0x563f2e9f03e0 <line:722:2, col:34> col:7 timestamp 'char [8]'
| |-FieldDecl 0x563f2e9f0440 <line:723:2, col:10> col:10 referenced next 'Packet *'
| |-FieldDecl 0x563f2e9f04a0 <line:724:2, col:10> col:10 referenced prev 'Packet *'
| |-CXXConstructorDecl 0x563f2ea00ca8 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| | |-CXXCtorInitializer Field 0x563f2e9f0188 'cb' 'Packet::Anno'
| | | `-CXXConstructExpr 0x563f2ea01618 <col:12> 'Packet::Anno' 'void () noexcept'
| | `-CompoundStmt 0x563f2ea01670 <col:12>
| |-CXXConstructorDecl 0x563f2ea012d8 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x563f2ea012d8
| | `-ParmVarDecl 0x563f2ea013e8 <col:12> col:12 'const Packet::AllAnno &'
| |-CXXConstructorDecl 0x563f2ea01488 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x563f2ea01488
| | `-ParmVarDecl 0x563f2ea01598 <col:12> col:12 'Packet::AllAnno &&'
| `-CXXDestructorDecl 0x563f2ea03710 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial
|-FieldDecl 0x563f2e9f0518 <line:731:5, col:21> col:21 referenced _use_count 'atomic_uint32_t'
|-FieldDecl 0x563f2e9f0578 <line:732:5, col:13> col:13 referenced _data_packet 'Packet *'
|-FieldDecl 0x563f2e9f05e0 <line:734:5, col:20> col:20 referenced _head 'unsigned char *'
|-FieldDecl 0x563f2e9f0648 <line:735:5, col:20> col:20 referenced _data 'unsigned char *'
|-FieldDecl 0x563f2e9f06b0 <line:736:5, col:20> col:20 referenced _tail 'unsigned char *'
|-FieldDecl 0x563f2e9f0718 <line:737:5, col:20> col:20 referenced _end 'unsigned char *'
|-FieldDecl 0x563f2e9f0778 <line:741:5, col:13> col:13 referenced _aa 'Packet::AllAnno'
|-FieldDecl 0x563f2e9f07d8 <line:746:5, col:28> col:28 referenced _destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-FieldDecl 0x563f2e9f0840 <line:747:5, col:11> col:11 referenced _destructor_argument 'void *'
|-CXXConstructorDecl 0x563f2e9f08c8 <line:751:5, line:755:5> line:751:12 used Packet 'void ()' inline
| |-CXXCtorInitializer Field 0x563f2e9f0518 '_use_count' 'atomic_uint32_t'
| | `-CXXConstructExpr 0x563f2ea00c40 <col:12> 'atomic_uint32_t' 'void () noexcept'
| |-CXXCtorInitializer Field 0x563f2e9f0778 '_aa' 'Packet::AllAnno'
| | `-CXXConstructExpr 0x563f2ea01680 <col:12> 'Packet::AllAnno' 'void () noexcept'
| `-CompoundStmt 0x563f2ea016e0 <col:21, line:755:5>
|-CXXConstructorDecl 0x563f2e9f0a68 <line:756:5, col:27> col:5 Packet 'void (const Packet &)'
| `-ParmVarDecl 0x563f2e9f09a8 <col:12, col:26> col:26 x 'const Packet &'
|-CXXDestructorDecl 0x563f2e9f0b60 <line:757:5, col:13> col:5 used ~Packet 'void () noexcept'
|-CXXMethodDecl 0x563f2e9f0d48 <line:758:5, col:38> col:13 operator= 'Packet &(const Packet &)'
| `-ParmVarDecl 0x563f2e9f0c50 <col:23, col:37> col:37 x 'const Packet &'
|-CXXMethodDecl 0x563f2e9f1018 <line:761:5, col:74> col:10 alloc_data 'bool (uint32_t, uint32_t, uint32_t)'
| |-ParmVarDecl 0x563f2e9f0e00 <col:21, col:30> col:30 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x563f2e9f0e78 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x563f2e9f0ef0 <col:57, col:66> col:66 tailroom 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x563f2e9f1238 <line:768:5, col:95> col:17 shift_header_annotations 'void (const unsigned char *, int32_t)' inline
| |-ParmVarDecl 0x563f2e9f10e8 <col:42, col:63> col:63 old_head 'const unsigned char *'
| `-ParmVarDecl 0x563f2e9f1160 <col:73, col:81> col:81 extra_headroom 'int32_t':'int'
|-CXXMethodDecl 0x563f2e9f9818 <line:769:5, col:109> col:21 expensive_uniqueify 'WritablePacket *(int32_t, int32_t, bool)'
| |-ParmVarDecl 0x563f2e9f12f8 <col:41, col:49> col:49 extra_headroom 'int32_t':'int'
| |-ParmVarDecl 0x563f2e9f1370 <col:65, col:73> col:73 extra_tailroom 'int32_t':'int'
| `-ParmVarDecl 0x563f2e9f13e8 <col:89, col:94> col:94 free_on_failure 'bool'
|-CXXMethodDecl 0x563f2e9f9970 <line:770:5, col:51> col:21 used expensive_push 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x563f2e9f98e0 <col:36, col:45> col:45 nbytes 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x563f2e9f9ab8 <line:771:5, col:50> col:21 used expensive_put 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x563f2e9f9a28 <col:35, col:44> col:44 nbytes 'uint32_t':'unsigned int'
`-FriendDecl 0x563f2e9f9bb0 <line:773:5, col:18> col:12 'class WritablePacket':'WritablePacket'

Layout: <CGRecordLayout
  LLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  NonVirtualBaseLLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct click_llrpc_counts_st
         0 |   uint32_t n
         4 |   uint32_t [8] keys
        36 |   uint32_t [8] values
           | [sizeof=68, dsize=68, align=4,
           |  nvsize=68, nvalign=4]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563f2ea878f0 <../dummy_inc/click/llrpc.h:97:1, line:101:1> line:97:8 referenced struct click_llrpc_counts_st definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x563f2ea87a08 <col:1, col:8> col:8 implicit struct click_llrpc_counts_st
|-FieldDecl 0x563f2ea87aa8 <line:98:5, col:14> col:14 referenced n 'uint32_t':'unsigned int'
|-FieldDecl 0x563f2ea87bd8 <line:99:5, col:20> col:14 referenced keys 'uint32_t [8]'
|-FieldDecl 0x563f2ea87c88 <line:100:5, col:22> col:14 referenced values 'uint32_t [8]'
|-CXXConstructorDecl 0x563f2ec5fd78 <line:97:8> col:8 implicit used click_llrpc_counts_st 'void () noexcept' inline default trivial
| `-CompoundStmt 0x563f2ec601a8 <col:8>
|-CXXConstructorDecl 0x563f2ec5fe78 <col:8> col:8 implicit constexpr click_llrpc_counts_st 'void (const click_llrpc_counts_st &)' inline default trivial noexcept-unevaluated 0x563f2ec5fe78
| `-ParmVarDecl 0x563f2ec5ff88 <col:8> col:8 'const click_llrpc_counts_st &'
`-CXXConstructorDecl 0x563f2ec60028 <col:8> col:8 implicit constexpr click_llrpc_counts_st 'void (click_llrpc_counts_st &&)' inline default trivial noexcept-unevaluated 0x563f2ec60028
  `-ParmVarDecl 0x563f2ec60138 <col:8> col:8 'click_llrpc_counts_st &&'

Layout: <CGRecordLayout
  LLVMType:%struct.click_llrpc_counts_st = type { i32, [8 x i32], [8 x i32] }
  NonVirtualBaseLLVMType:%struct.click_llrpc_counts_st = type { i32, [8 x i32], [8 x i32] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct TaskLink
         0 |   struct TaskLink * _prev
         8 |   struct TaskLink * _next
        16 |   unsigned int _pass
           | [sizeof=24, dsize=20, align=8,
           |  nvsize=20, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563f2eb31c30 <../dummy_inc/click/task.hh:31:1, line:47:1> line:31:8 referenced struct TaskLink definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x563f2eb31d48 <col:1, col:8> col:8 implicit referenced struct TaskLink
|-FieldDecl 0x563f2eb31e18 <line:33:5, col:15> col:15 referenced _prev 'TaskLink *'
|-FieldDecl 0x563f2eb31e78 <line:34:5, col:15> col:15 referenced _next 'TaskLink *'
|-FieldDecl 0x563f2eb31ee0 <line:37:5, col:14> col:14 referenced _pass 'unsigned int'
|-CXXConstructorDecl 0x563f2eb31f68 <line:39:5, line:46:5> line:39:5 used TaskLink 'void ()'
| `-CompoundStmt 0x563f2eb321d0 <col:16, line:46:5>
|   |-BinaryOperator 0x563f2eb32118 <line:41:9, col:25> 'TaskLink *' lvalue '='
|   | |-MemberExpr 0x563f2eb32038 <col:9> 'TaskLink *' lvalue ->_prev 0x563f2eb31e18
|   | | `-CXXThisExpr 0x563f2eb32028 <col:9> 'TaskLink *' implicit this
|   | `-ImplicitCastExpr 0x563f2eb32100 <col:17, col:25> 'TaskLink *' <LValueToRValue>
|   |   `-BinaryOperator 0x563f2eb320e0 <col:17, col:25> 'TaskLink *' lvalue '='
|   |     |-MemberExpr 0x563f2eb32078 <col:17> 'TaskLink *' lvalue ->_next 0x563f2eb31e78
|   |     | `-CXXThisExpr 0x563f2eb32068 <col:17> 'TaskLink *' implicit this
|   |     `-ImplicitCastExpr 0x563f2eb320c8 <col:25> 'TaskLink *' <NullToPointer>
|   |       `-IntegerLiteral 0x563f2eb320a8 <col:25> 'int' 0
|   `-BinaryOperator 0x563f2eb321b0 <line:44:9, col:17> 'unsigned int' lvalue '='
|     |-MemberExpr 0x563f2eb32148 <col:9> 'unsigned int' lvalue ->_pass 0x563f2eb31ee0
|     | `-CXXThisExpr 0x563f2eb32138 <col:9> 'TaskLink *' implicit this
|     `-ImplicitCastExpr 0x563f2eb32198 <col:17> 'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x563f2eb32178 <col:17> 'int' 0
|-CXXConstructorDecl 0x563f2eb869d8 <line:31:8> col:8 implicit constexpr TaskLink 'void (const TaskLink &)' inline default trivial noexcept-unevaluated 0x563f2eb869d8
| `-ParmVarDecl 0x563f2eb86ae8 <col:8> col:8 'const TaskLink &'
|-CXXConstructorDecl 0x563f2eb86b88 <col:8> col:8 implicit constexpr TaskLink 'void (TaskLink &&)' inline default trivial noexcept-unevaluated 0x563f2eb86b88
| `-ParmVarDecl 0x563f2eb86c98 <col:8> col:8 'TaskLink &&'
|-CXXDestructorDecl 0x563f2eb86e88 <col:8> col:8 implicit ~TaskLink 'void ()' inline default trivial noexcept-unevaluated 0x563f2eb86e88
|-CXXMethodDecl 0x563f2eb87688 <col:8> col:8 implicit operator= 'TaskLink &(const TaskLink &)' inline default trivial noexcept-unevaluated 0x563f2eb87688
| `-ParmVarDecl 0x563f2eb87798 <col:8> col:8 'const TaskLink &'
`-CXXMethodDecl 0x563f2eb87808 <col:8> col:8 implicit operator= 'TaskLink &(TaskLink &&)' inline default trivial noexcept-unevaluated 0x563f2eb87808
  `-ParmVarDecl 0x563f2eb87918 <col:8> col:8 'TaskLink &&'

Layout: <CGRecordLayout
  LLVMType:%struct.TaskLink = type <{ %struct.TaskLink*, %struct.TaskLink*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%struct.TaskLink.base = type <{ %struct.TaskLink*, %struct.TaskLink*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9)
         0 |   int16_t home_thread_id
         2 |   uint8_t is_scheduled
         3 |   uint8_t is_strong_unscheduled
           | [sizeof=4, dsize=4, align=2,
           |  nvsize=4, nvalign=2]

*** Dumping AST Record Layout
         0 | union Task::Status
         0 |   struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9) 
         0 |     int16_t home_thread_id
         2 |     uint8_t is_scheduled
         3 |     uint8_t is_strong_unscheduled
         0 |   uint32_t status
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Task::Pending
         0 |   class Task * t
         0 |   uintptr_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Task
         0 |   struct TaskLink (base)
         0 |     struct TaskLink * _prev
         8 |     struct TaskLink * _next
        16 |     unsigned int _pass
        20 |   unsigned int _stride
        24 |   int _tickets
        28 |   union Task::Status _status
        28 |     struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9) 
        28 |       int16_t home_thread_id
        30 |       uint8_t is_scheduled
        31 |       uint8_t is_strong_unscheduled
        28 |     uint32_t status
        32 |   TaskCallback _hook
        40 |   void * _thunk
        48 |   class RouterThread * _thread
        56 |   class Element * _owner
        64 |   union Task::Pending _pending_nextptr
        64 |     class Task * t
        64 |     uintptr_t x
           | [sizeof=72, dsize=72, align=8,
           |  nvsize=72, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563f2eb34738 <../dummy_inc/click/task.hh:315:9, line:319:9> line:315:9 struct definition
|-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x563f2eb34868 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
|-FieldDecl 0x563f2eb348c8 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
|-FieldDecl 0x563f2eb34928 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
|-CXXConstructorDecl 0x563f2eb8dbc8 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
|-CXXDestructorDecl 0x563f2eb8dca0 <col:9> col:9 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x563f2eb8dca0
|-CXXConstructorDecl 0x563f2eb8df58 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x563f2eb8df58
| `-ParmVarDecl 0x563f2eb8e068 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
`-CXXConstructorDecl 0x563f2eb8e108 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x563f2eb8e108
  `-ParmVarDecl 0x563f2eb8e218 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'

Layout: <CGRecordLayout
  LLVMType:%struct.anon = type { i16, i8, i8 }
  NonVirtualBaseLLVMType:%struct.anon = type { i16, i8, i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563f2eb34590 <../dummy_inc/click/task.hh:314:5, line:321:5> line:314:11 union Status definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x563f2eb346a8 <col:5, col:11> col:11 implicit union Status
|-CXXRecordDecl 0x563f2eb34738 <line:315:9, line:319:9> line:315:9 struct definition
| |-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x563f2eb34868 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
| |-FieldDecl 0x563f2eb348c8 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
| |-FieldDecl 0x563f2eb34928 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
| |-CXXConstructorDecl 0x563f2eb8dbc8 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
| |-CXXDestructorDecl 0x563f2eb8dca0 <col:9> col:9 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x563f2eb8dca0
| |-CXXConstructorDecl 0x563f2eb8df58 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x563f2eb8df58
| | `-ParmVarDecl 0x563f2eb8e068 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
| `-CXXConstructorDecl 0x563f2eb8e108 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x563f2eb8e108
|   `-ParmVarDecl 0x563f2eb8e218 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'
|-FieldDecl 0x563f2eb349e8 <col:9> col:9 implicit referenced 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
|-IndirectFieldDecl 0x563f2eb34a48 <line:316:21> col:21 implicit home_thread_id 'int16_t':'short'
| |-Field 0x563f2eb349e8 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x563f2eb34868 'home_thread_id' 'int16_t':'short'
|-IndirectFieldDecl 0x563f2eb34aa0 <line:317:21> col:21 implicit is_scheduled 'uint8_t':'unsigned char'
| |-Field 0x563f2eb349e8 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x563f2eb348c8 'is_scheduled' 'uint8_t':'unsigned char'
|-IndirectFieldDecl 0x563f2eb34af8 <line:318:21> col:21 implicit is_strong_unscheduled 'uint8_t':'unsigned char'
| |-Field 0x563f2eb349e8 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x563f2eb34928 'is_strong_unscheduled' 'uint8_t':'unsigned char'
|-FieldDecl 0x563f2eb34b50 <line:320:9, col:18> col:18 status 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x563f2eb8dad8 <line:314:11> col:11 implicit used Status 'void () noexcept' inline default trivial
| `-CompoundStmt 0x563f2eb8e438 <col:11>
|-CXXConstructorDecl 0x563f2eb8dda8 <col:11> col:11 implicit constexpr Status 'void (const Task::Status &)' inline default trivial noexcept-unevaluated 0x563f2eb8dda8
| `-ParmVarDecl 0x563f2eb8deb8 <col:11> col:11 'const Task::Status &'
`-CXXConstructorDecl 0x563f2eb8e2b8 <col:11> col:11 implicit constexpr Status 'void (Task::Status &&)' inline default trivial noexcept-unevaluated 0x563f2eb8e2b8
  `-ParmVarDecl 0x563f2eb8e3c8 <col:11> col:11 'Task::Status &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Task::Status" = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class Vector<struct TimerSet::heap_element>
         0 |   class vector_memory<class sized_array_memory<16> > vm_
         0 |     vector_memory<class sized_array_memory<16> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class Timer *>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class SimpleSpinlock (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class TimerSet
         0 |   class Timestamp _timer_expiry
         0 |     union Timestamp::rep_t _t
         0 |       int64_t x
         8 |   unsigned int _max_timer_stride
        12 |   unsigned int _timer_stride
        16 |   unsigned int _timer_count
        24 |   class Vector<struct TimerSet::heap_element> _timer_heap
        24 |     class vector_memory<class sized_array_memory<16> > vm_
        24 |       vector_memory<class sized_array_memory<16> >::type * l_
        32 |       vector_memory::size_type n_
        36 |       vector_memory::size_type capacity_
        40 |   class Vector<class Timer *> _timer_runchunk
        40 |     class vector_memory<class sized_array_memory<8> > vm_
        40 |       vector_memory<class sized_array_memory<8> >::type * l_
        48 |       vector_memory::size_type n_
        52 |       vector_memory::size_type capacity_
        56 |   class SimpleSpinlock _timer_lock (empty)
        64 |   class Timestamp _timer_check
        64 |     union Timestamp::rep_t _t
        64 |       int64_t x
        72 |   uint32_t _timer_check_reports
           | [sizeof=80, dsize=76, align=8,
           |  nvsize=76, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct pollfd>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<24> >
         0 |   vector_memory<class sized_array_memory<24> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct SelectSet::SelectorInfo>
         0 |   class vector_memory<class sized_array_memory<24> > vm_
         0 |     vector_memory<class sized_array_memory<24> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class SelectSet
         0 |   int [2] _wake_pipe
         8 |   volatile _Bool _wake_pipe_pending
        16 |   class Vector<struct pollfd> _pollfds
        16 |     class vector_memory<class sized_array_memory<8> > vm_
        16 |       vector_memory<class sized_array_memory<8> >::type * l_
        24 |       vector_memory::size_type n_
        28 |       vector_memory::size_type capacity_
        32 |   class Vector<struct SelectSet::SelectorInfo> _selinfo
        32 |     class vector_memory<class sized_array_memory<24> > vm_
        32 |       vector_memory<class sized_array_memory<24> >::type * l_
        40 |       vector_memory::size_type n_
        44 |       vector_memory::size_type capacity_
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | class Spinlock (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class SpinlockIRQ (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class RouterThread
         0 |   struct TaskLink _task_link
         0 |     struct TaskLink * _prev
         8 |     struct TaskLink * _next
        16 |     unsigned int _pass
        24 |   volatile _Bool _stop_flag
        32 |   class TimerSet _timers
        32 |     class Timestamp _timer_expiry
        32 |       union Timestamp::rep_t _t
        32 |         int64_t x
        40 |     unsigned int _max_timer_stride
        44 |     unsigned int _timer_stride
        48 |     unsigned int _timer_count
        56 |     class Vector<struct TimerSet::heap_element> _timer_heap
        56 |       class vector_memory<class sized_array_memory<16> > vm_
        56 |         vector_memory<class sized_array_memory<16> >::type * l_
        64 |         vector_memory::size_type n_
        68 |         vector_memory::size_type capacity_
        72 |     class Vector<class Timer *> _timer_runchunk
        72 |       class vector_memory<class sized_array_memory<8> > vm_
        72 |         vector_memory<class sized_array_memory<8> >::type * l_
        80 |         vector_memory::size_type n_
        84 |         vector_memory::size_type capacity_
        88 |     class SimpleSpinlock _timer_lock (empty)
        96 |     class Timestamp _timer_check
        96 |       union Timestamp::rep_t _t
        96 |         int64_t x
       104 |     uint32_t _timer_check_reports
       112 |   class SelectSet _selects
       112 |     int [2] _wake_pipe
       120 |     volatile _Bool _wake_pipe_pending
       128 |     class Vector<struct pollfd> _pollfds
       128 |       class vector_memory<class sized_array_memory<8> > vm_
       128 |         vector_memory<class sized_array_memory<8> >::type * l_
       136 |         vector_memory::size_type n_
       140 |         vector_memory::size_type capacity_
       144 |     class Vector<struct SelectSet::SelectorInfo> _selinfo
       144 |       class vector_memory<class sized_array_memory<24> > vm_
       144 |         vector_memory<class sized_array_memory<24> >::type * l_
       152 |         vector_memory::size_type n_
       156 |         vector_memory::size_type capacity_
       192 |   class Spinlock _task_lock (empty)
       196 |   class atomic_uint32_t _task_blocker
       196 |     uint32_t _val
       200 |   class atomic_uint32_t _task_blocker_waiting
       200 |     uint32_t _val
       208 |   union Task::Pending _pending_head
       208 |     class Task * t
       208 |     uintptr_t x
       216 |   class Task::Pending * _pending_tail
       224 |   class SpinlockIRQ _pending_lock (empty)
       256 |   class Master * _master
       264 |   int _id
       268 |   _Bool _driver_entered
       272 |   unsigned int _tasks_per_iter
       276 |   unsigned int _iters_per_os
           | [sizeof=320, dsize=280, align=64,
           |  nvsize=280, nvalign=64]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563f2e9afa70 prev 0x563f2e9a68b0 <../dummy_inc/click/timestamp.hh:539:5, line:566:5> line:539:11 referenced union rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x563f2e9afb68 <col:5, col:11> col:11 implicit union rep_t
|-FieldDecl 0x563f2e9afc08 <line:541:9, col:17> col:17 referenced x 'int64_t':'long'
|-CXXConstructorDecl 0x563f2e9b69d0 <line:539:11> col:11 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x563f2e9b6db8 <col:11>
|-CXXConstructorDecl 0x563f2e9b6ab0 <col:11> col:11 implicit used constexpr rep_t 'void (const Timestamp::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x563f2e9b6b98 <col:11> col:11 'const Timestamp::rep_t &'
| `-CompoundStmt 0x563f2e9b7500 <col:11>
|-CXXConstructorDecl 0x563f2e9b6c38 <col:11> col:11 implicit used constexpr rep_t 'void (Timestamp::rep_t &&) noexcept' inline default trivial
| |-ParmVarDecl 0x563f2e9b6d48 <col:11> col:11 'Timestamp::rep_t &&'
| `-CompoundStmt 0x563f2e9b8d58 <col:11>
|-CXXDestructorDecl 0x563f2e9b8068 <col:11> col:11 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x563f2e6bea28 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(const Timestamp::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x563f2e6beb38 <col:11> col:11 'const Timestamp::rep_t &'
| `-CompoundStmt 0x563f2e6bf400 <col:11>
|   `-ReturnStmt 0x563f2e6bf3f0 <col:11>
|     `-UnaryOperator 0x563f2e6bf3d8 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x563f2e6bf3c8 <col:11> 'Timestamp::rep_t *' this
`-CXXMethodDecl 0x563f2e6beba8 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(Timestamp::rep_t &&) noexcept' inline default trivial
  |-ParmVarDecl 0x563f2e6becb8 <col:11> col:11 'Timestamp::rep_t &&'
  `-CompoundStmt 0x563f2eb2ff30 <col:11>
    `-ReturnStmt 0x563f2eb2ff20 <col:11>
      `-UnaryOperator 0x563f2eb2ff08 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
        `-CXXThisExpr 0x563f2eb2fef8 <col:11> 'Timestamp::rep_t *' this

Layout: <CGRecordLayout
  LLVMType:%"union.Timestamp::rep_t" = type { i64 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563f2e9a5a68 prev 0x563f2e9a5778 <../dummy_inc/click/timestamp.hh:122:1, line:723:1> line:122:7 referenced class Timestamp definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x563f2e9a5b60 <col:1, col:7> col:7 implicit referenced class Timestamp
|-AccessSpecDecl 0x563f2e9a5bf0 <col:19, col:25> col:19 public
|-TypedefDecl 0x563f2e9a5c28 <line:125:5, col:21> col:21 referenced seconds_type 'int32_t':'int'
| `-TypedefType 0x563f2e60abf0 'int32_t' sugar
|   |-Typedef 0x563f2e51a328 'int32_t'
|   `-TypedefType 0x563f2e4f3510 '__int32_t' sugar
|     |-Typedef 0x563f2e4f3128 '__int32_t'
|     `-BuiltinType 0x563f2e4b1580 'int'
|-TypedefDecl 0x563f2e9a5c90 <line:128:5, col:21> col:21 referenced value_type 'int64_t':'long'
| `-TypedefType 0x563f2e60adb0 'int64_t' sugar
|   |-Typedef 0x563f2e51a390 'int64_t'
|   `-TypedefType 0x563f2e4f3630 '__int64_t' sugar
|     |-Typedef 0x563f2e4f3208 '__int64_t'
|     `-BuiltinType 0x563f2e4b15a0 'long'
|-EnumDecl 0x563f2e9a5ce8 <line:133:5, line:140:5> line:133:5
| |-EnumConstantDecl 0x563f2e9a5e60 <line:134:9, col:38> col:9 max_seconds 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:133:5)'
| | `-ConstantExpr 0x563f2e9a5e40 <col:23, col:38> 'Timestamp::seconds_type':'int' Int: 2147483647
| |   `-CStyleCastExpr 0x563f2e9a5e18 <col:23, col:38> 'Timestamp::seconds_type':'int' <NoOp>
| |     `-ImplicitCastExpr 0x563f2e9a5e00 <col:38> 'Timestamp::seconds_type':'int' <IntegralCast> part_of_explicit_cast
| |       `-IntegerLiteral 0x563f2e9a5dd0 <col:38> 'unsigned int' 2147483647
| `-EnumConstantDecl 0x563f2e9a5f58 <line:137:9, col:39> col:9 min_seconds 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:133:5)'
|   `-ConstantExpr 0x563f2e9a5f38 <col:23, col:39> 'Timestamp::seconds_type':'int' Int: -2147483648
|     `-CStyleCastExpr 0x563f2e9a5f10 <col:23, col:39> 'Timestamp::seconds_type':'int' <NoOp>
|       `-ImplicitCastExpr 0x563f2e9a5ef8 <col:38, col:39> 'Timestamp::seconds_type':'int' <IntegralCast> part_of_explicit_cast
|         `-UnaryOperator 0x563f2e9a5ed0 <col:38, col:39> 'unsigned int' prefix '-'
|           `-IntegerLiteral 0x563f2e9a5eb0 <col:39> 'unsigned int' 2147483648
|-EnumDecl 0x563f2e9a5fa8 <line:142:5, line:162:5> line:142:5
| |-EnumConstantDecl 0x563f2e9a60b0 <line:143:9, col:24> col:9 referenced nsec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x563f2e9a6600 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563f2e9a6090 <col:24> 'int' Int: 1000000000
| |     `-IntegerLiteral 0x563f2e9a6070 <col:24> 'int' 1000000000
| |-EnumConstantDecl 0x563f2e9a6140 <line:144:9, col:25> col:9 nsec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x563f2e9a6618 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563f2e9a6120 <col:25> 'int' Int: 1000000
| |     `-IntegerLiteral 0x563f2e9a6100 <col:25> 'int' 1000000
| |-EnumConstantDecl 0x563f2e9a61d0 <line:145:9, col:25> col:9 nsec_per_usec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x563f2e9a6630 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563f2e9a61b0 <col:25> 'int' Int: 1000
| |     `-IntegerLiteral 0x563f2e9a6190 <col:25> 'int' 1000
| |-EnumConstantDecl 0x563f2e9a6260 <line:146:9, col:24> col:9 referenced usec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x563f2e9a6648 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563f2e9a6240 <col:24> 'int' Int: 1000000
| |     `-IntegerLiteral 0x563f2e9a6220 <col:24> 'int' 1000000
| |-EnumConstantDecl 0x563f2e9a62f0 <line:147:9, col:25> col:9 usec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x563f2e9a6660 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563f2e9a62d0 <col:25> 'int' Int: 1000
| |     `-IntegerLiteral 0x563f2e9a62b0 <col:25> 'int' 1000
| |-EnumConstantDecl 0x563f2e9a6380 <line:148:9, col:24> col:9 referenced msec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x563f2e9a6678 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563f2e9a6360 <col:24> 'int' Int: 1000
| |     `-IntegerLiteral 0x563f2e9a6340 <col:24> 'int' 1000
| |-EnumConstantDecl 0x563f2e9a6410 <line:150:9, col:26> col:9 referenced subsec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x563f2e9a6690 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563f2e9a63f0 <col:26> 'int' Int: 1000000000
| |     `-DeclRefExpr 0x563f2e9a63d0 <col:26> 'int' EnumConstant 0x563f2e9a60b0 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| |-EnumConstantDecl 0x563f2e9a64e0 <line:157:9, col:44> col:9 referenced subsec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x563f2e9a66a8 <col:27, col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563f2e9a64c0 <col:27, col:44> 'int' Int: 1000000
| |     `-BinaryOperator 0x563f2e9a64a0 <col:27, col:44> 'int' '/'
| |       |-DeclRefExpr 0x563f2e9a6460 <col:27> 'int' EnumConstant 0x563f2e9a6410 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| |       `-DeclRefExpr 0x563f2e9a6480 <col:44> 'int' EnumConstant 0x563f2e9a6380 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| `-EnumConstantDecl 0x563f2e9a65b0 <line:158:9, col:44> col:9 referenced subsec_per_usec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ImplicitCastExpr 0x563f2e9a66c0 <col:27, col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x563f2e9a6590 <col:27, col:44> 'int' Int: 1000
|       `-BinaryOperator 0x563f2e9a6570 <col:27, col:44> 'int' '/'
|         |-DeclRefExpr 0x563f2e9a6530 <col:27> 'int' EnumConstant 0x563f2e9a6410 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|         `-DeclRefExpr 0x563f2e9a6550 <col:44> 'int' EnumConstant 0x563f2e9a6260 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-EnumDecl 0x563f2e9a66d8 <line:164:5, line:166:5> line:164:5
| `-EnumConstantDecl 0x563f2e9a67e0 <line:165:9, col:19> col:9 NSUBSEC 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:164:5)'
|   `-ImplicitCastExpr 0x563f2e9a6830 <col:19> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x563f2e9a67c0 <col:19> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' Int: 1000000000
|       `-DeclRefExpr 0x563f2e9a67a0 <col:19> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x563f2e9a6410 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-TypedefDecl 0x563f2e9a6858 <line:168:5, col:32> col:32 referenced uninitialized_t 'uninitialized_type'
| `-RecordType 0x563f2e60a820 'uninitialized_type'
|   `-CXXRecord 0x563f2e60a788 'uninitialized_type'
|-CXXRecordDecl 0x563f2e9a68b0 <line:170:5, col:11> col:11 referenced union rep_t
|-CXXConstructorDecl 0x563f2e9a69c0 <line:174:5, line:176:5> line:174:12 used Timestamp 'void ()' inline
| |-CXXCtorInitializer Field 0x563f2e9b0bb8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x563f2e9b6dc8 <col:12> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x563f2e9b6ee8 <col:24, line:176:5>
|   `-CXXMemberCallExpr 0x563f2e9b6ea0 <line:175:9, col:20> 'void'
|     |-MemberExpr 0x563f2e9b6e30 <col:9> '<bound member function type>' ->assign 0x563f2e9ab608
|     | `-CXXThisExpr 0x563f2e9b6e20 <col:9> 'Timestamp *' implicit this
|     |-IntegerLiteral 0x563f2e9b6e60 <col:16> 'int' 0
|     `-ImplicitCastExpr 0x563f2e9b6ed0 <col:19> 'uint32_t':'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x563f2e9b6e80 <col:19> 'int' 0
|-CXXConstructorDecl 0x563f2e9a6c08 <line:187:5, line:189:5> line:187:21 Timestamp 'void (long, uint32_t)' inline
| |-ParmVarDecl 0x563f2e9a6a80 <col:31, col:36> col:36 used sec 'long'
| |-ParmVarDecl 0x563f2e9a6af8 <col:41, col:59> col:50 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x563f2e9b2700 <col:59> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x563f2e9b26e0 <col:59> 'int' 0
| |-CXXCtorInitializer Field 0x563f2e9b0bb8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x563f2e9b6f00 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x563f2e9b7050 <col:62, line:189:5>
|   `-CXXMemberCallExpr 0x563f2e9b6fd8 <line:188:9, col:27> 'void'
|     |-MemberExpr 0x563f2e9b6f68 <col:9> '<bound member function type>' ->assign 0x563f2e9ab608
|     | `-CXXThisExpr 0x563f2e9b6f58 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x563f2e9b7020 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x563f2e9b7008 <col:16> 'long' <LValueToRValue>
|     |   `-DeclRefExpr 0x563f2e9b6f98 <col:16> 'long' lvalue ParmVar 0x563f2e9a6a80 'sec' 'long'
|     `-ImplicitCastExpr 0x563f2e9b7038 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x563f2e9b6fb8 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x563f2e9a6af8 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x563f2e9a6e68 <line:191:5, line:193:5> line:191:21 used Timestamp 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x563f2e9a6cd8 <col:31, col:35> col:35 used sec 'int'
| |-ParmVarDecl 0x563f2e9a6d50 <col:40, col:58> col:49 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x563f2e9b2738 <col:58> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x563f2e9b2718 <col:58> 'int' 0
| |-CXXCtorInitializer Field 0x563f2e9b0bb8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x563f2e9b7068 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x563f2e9b71a0 <col:61, line:193:5>
|   `-CXXMemberCallExpr 0x563f2e9b7140 <line:192:9, col:27> 'void'
|     |-MemberExpr 0x563f2e9b70d0 <col:9> '<bound member function type>' ->assign 0x563f2e9ab608
|     | `-CXXThisExpr 0x563f2e9b70c0 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x563f2e9b7170 <col:16> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x563f2e9b7100 <col:16> 'int' lvalue ParmVar 0x563f2e9a6cd8 'sec' 'int'
|     `-ImplicitCastExpr 0x563f2e9b7188 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x563f2e9b7120 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x563f2e9a6d50 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x563f2e9a70c8 <line:195:5, line:197:5> line:195:21 Timestamp 'void (unsigned long, uint32_t)' inline
| |-ParmVarDecl 0x563f2e9a6f38 <col:31, col:45> col:45 used sec 'unsigned long'
| |-ParmVarDecl 0x563f2e9a6fb0 <col:50, col:68> col:59 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x563f2e9b2770 <col:68> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x563f2e9b2750 <col:68> 'int' 0
| |-CXXCtorInitializer Field 0x563f2e9b0bb8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x563f2e9b71b8 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x563f2e9b7308 <col:71, line:197:5>
|   `-CXXMemberCallExpr 0x563f2e9b7290 <line:196:9, col:27> 'void'
|     |-MemberExpr 0x563f2e9b7220 <col:9> '<bound member function type>' ->assign 0x563f2e9ab608
|     | `-CXXThisExpr 0x563f2e9b7210 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x563f2e9b72d8 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x563f2e9b72c0 <col:16> 'unsigned long' <LValueToRValue>
|     |   `-DeclRefExpr 0x563f2e9b7250 <col:16> 'unsigned long' lvalue ParmVar 0x563f2e9a6f38 'sec' 'unsigned long'
|     `-ImplicitCastExpr 0x563f2e9b72f0 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x563f2e9b7270 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x563f2e9a6fb0 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x563f2e9a8260 <line:199:5, line:201:5> line:199:21 used Timestamp 'void (unsigned int, uint32_t)' inline
| |-ParmVarDecl 0x563f2e9a7198 <col:31, col:40> col:40 used sec 'unsigned int'
| |-ParmVarDecl 0x563f2e9a7210 <col:45, col:63> col:54 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x563f2e9b27a8 <col:63> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x563f2e9b2788 <col:63> 'int' 0
| |-CXXCtorInitializer Field 0x563f2e9b0bb8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x563f2e9b7320 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x563f2e9b7470 <col:66, line:201:5>
|   `-CXXMemberCallExpr 0x563f2e9b73f8 <line:200:9, col:27> 'void'
|     |-MemberExpr 0x563f2e9b7388 <col:9> '<bound member function type>' ->assign 0x563f2e9ab608
|     | `-CXXThisExpr 0x563f2e9b7378 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x563f2e9b7440 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x563f2e9b7428 <col:16> 'unsigned int' <LValueToRValue>
|     |   `-DeclRefExpr 0x563f2e9b73b8 <col:16> 'unsigned int' lvalue ParmVar 0x563f2e9a7198 'sec' 'unsigned int'
|     `-ImplicitCastExpr 0x563f2e9b7458 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x563f2e9b73d8 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x563f2e9a7210 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x563f2e9a83c0 <line:203:5, col:37> col:21 used Timestamp 'void (double)' inline
| `-ParmVarDecl 0x563f2e9a8330 <col:31> col:37 'double'
|-CXXConstructorDecl 0x563f2e9a8558 <line:206:5, col:46> col:12 Timestamp 'void (const struct timeval &)' inline
| `-ParmVarDecl 0x563f2e9a8498 <col:22, col:44> col:44 tv 'const struct timeval &'
|-CXXConstructorDecl 0x563f2e9a8788 <line:208:5, col:47> col:12 Timestamp 'void (const struct timespec &)' inline
| `-ParmVarDecl 0x563f2e9a8690 <col:22, col:45> col:45 ts 'const struct timespec &'
|-CXXConstructorDecl 0x563f2e9a8938 <line:212:5, line:214:5> line:212:12 Timestamp 'void (const Timestamp::rep_t &)' inline
| |-ParmVarDecl 0x563f2e9a8878 <col:22, col:35> col:35 used rep 'const Timestamp::rep_t &'
| |-CXXCtorInitializer Field 0x563f2e9b0bb8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x563f2e9b7510 <line:213:11, col:17> 'Timestamp::rep_t' 'void (const Timestamp::rep_t &) noexcept'
| |   `-DeclRefExpr 0x563f2e9b7488 <col:14> 'const Timestamp::rep_t' lvalue ParmVar 0x563f2e9a8878 'rep' 'const Timestamp::rep_t &'
| `-CompoundStmt 0x563f2e9b7570 <col:19, line:214:5>
|-CXXConstructorDecl 0x563f2e9a8b08 <line:217:5, line:219:5> line:217:12 used Timestamp 'void (const Timestamp::uninitialized_t &)' inline
| |-ParmVarDecl 0x563f2e9a8a48 <col:22, col:45> col:45 used unused 'const Timestamp::uninitialized_t &'
| |-CXXCtorInitializer Field 0x563f2e9b0bb8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x563f2e9b7580 <col:12> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x563f2e9b7630 <col:53, line:219:5>
|   `-CStyleCastExpr 0x563f2e9b7608 <line:218:9, col:16> 'void' <ToVoid>
|     `-DeclRefExpr 0x563f2e9b75d8 <col:16> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue ParmVar 0x563f2e9a8a48 'unused' 'const Timestamp::uninitialized_t &'
|-TypedefDecl 0x563f2e9a8cf8 <line:221:5, col:64> col:39 referenced unspecified_bool_type 'Timestamp::seconds_type (Timestamp::*)() const'
| `-MemberPointerType 0x563f2e9a8c70 'Timestamp::seconds_type (Timestamp::*)() const'
|   |-RecordType 0x563f2e9a5810 'Timestamp'
|   | `-CXXRecord 0x563f2e9a5a68 'Timestamp'
|   `-ParenType 0x563f2e9a8c10 'Timestamp::seconds_type () const' sugar
|     `-FunctionProtoType 0x563f2e9a8be0 'Timestamp::seconds_type () const' const cdecl
|       `-TypedefType 0x563f2e9a5db0 'Timestamp::seconds_type' sugar
|         |-Typedef 0x563f2e9a5c28 'seconds_type'
|         `-TypedefType 0x563f2e60abf0 'int32_t' sugar
|           |-Typedef 0x563f2e51a328 'int32_t'
|           `-TypedefType 0x563f2e4f3510 '__int32_t' sugar
|             |-Typedef 0x563f2e4f3128 '__int32_t'
|             `-BuiltinType 0x563f2e4b1580 'int'
|-CXXConversionDecl 0x563f2e9a8e38 <line:222:5, col:45> col:12 used operator int (Timestamp::*)() const 'Timestamp::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x563f2e9a8f08 <line:225:5, line:231:5> line:225:17 is_negative 'bool () const' inline
| `-CompoundStmt 0x563f2e9b7738 <col:37, line:231:5>
|   `-ReturnStmt 0x563f2e9b7728 <line:227:9, col:23>
|     `-BinaryOperator 0x563f2e9b7708 <col:16, col:23> 'bool' '<'
|       |-ImplicitCastExpr 0x563f2e9b76d8 <col:16, col:19> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x563f2e9b7688 <col:16, col:19> 'const int64_t':'const long' lvalue .x 0x563f2e9afc08
|       |   `-MemberExpr 0x563f2e9b7658 <col:16> 'const Timestamp::rep_t' lvalue ->_t 0x563f2e9b0bb8
|       |     `-CXXThisExpr 0x563f2e9b7648 <col:16> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x563f2e9b76f0 <col:23> 'long' <IntegralCast>
|         `-IntegerLiteral 0x563f2e9b76b8 <col:23> 'int' 0
|-CXXMethodDecl 0x563f2e9a8fc8 <line:233:5, col:31> col:25 used sec 'Timestamp::seconds_type () const' inline
|-CXXMethodDecl 0x563f2e9a9088 <line:234:5, col:30> col:21 used subsec 'uint32_t () const' inline
|-CXXMethodDecl 0x563f2e9a9148 <line:235:5, col:28> col:21 msec 'uint32_t () const' inline
|-CXXMethodDecl 0x563f2e9a9208 <line:236:5, col:28> col:21 used usec 'uint32_t () const' inline
|-CXXMethodDecl 0x563f2e9a92c8 <line:237:5, col:28> col:21 used nsec 'uint32_t () const' inline
|-CXXMethodDecl 0x563f2e9a9438 <line:239:5, col:41> col:17 set_sec 'void (Timestamp::seconds_type)' inline
| `-ParmVarDecl 0x563f2e9a9378 <col:25, col:38> col:38 sec 'Timestamp::seconds_type':'int'
|-CXXMethodDecl 0x563f2e9a9580 <line:240:5, col:43> col:17 set_subsec 'void (uint32_t)' inline
| `-ParmVarDecl 0x563f2e9a94f0 <col:28, col:37> col:37 subsec 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x563f2e9a9648 <line:242:5, col:65> col:25 msec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x563f2e9a96e8 <col:54> "" ""
|-CXXMethodDecl 0x563f2e9a9778 <line:243:5, col:65> col:25 usec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x563f2e9a9818 <col:54> "" ""
|-CXXMethodDecl 0x563f2e9a98a8 <line:244:5, col:65> col:25 nsec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x563f2e9a9948 <col:54> "" ""
|-CXXMethodDecl 0x563f2e9a9a48 <line:250:5, col:37> col:27 used timeval 'struct timeval () const' inline
|-CXXMethodDecl 0x563f2e9a9b18 <line:251:5, col:42> col:27 timeval_ceil 'struct timeval () const' inline
|-CXXMethodDecl 0x563f2e9a9c48 <line:257:5, col:39> col:28 timespec 'struct timespec () const' inline
|-CXXMethodDecl 0x563f2e9a9d40 <line:262:5, col:31> col:19 used doubleval 'double () const' inline
|-CXXMethodDecl 0x563f2e9a9e78 <line:265:5, line:271:5> line:265:23 msecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x563f2e9b7950 <col:39, line:271:5>
|   `-ReturnStmt 0x563f2e9b7940 <line:267:9, col:61>
|     `-CallExpr 0x563f2e9b78e0 <col:16, col:61> 'Timestamp::value_type':'long'
|       |-ImplicitCastExpr 0x563f2e9b78c8 <col:16> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x563f2e9b7750 <col:16> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x563f2e9b0ee8 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|       |-ImplicitCastExpr 0x563f2e9b7910 <col:26, col:29> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x563f2e9b77b0 <col:26, col:29> 'const int64_t':'const long' lvalue .x 0x563f2e9afc08
|       |   `-MemberExpr 0x563f2e9b7780 <col:26> 'const Timestamp::rep_t' lvalue ->_t 0x563f2e9b0bb8
|       |     `-CXXThisExpr 0x563f2e9b7770 <col:26> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x563f2e9b7928 <col:32, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|         `-BinaryOperator 0x563f2e9b7850 <col:32, col:49> 'int' '/'
|           |-ImplicitCastExpr 0x563f2e9b7820 <col:32> 'int' <IntegralCast>
|           | `-DeclRefExpr 0x563f2e9b77e0 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x563f2e9a6410 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|           `-ImplicitCastExpr 0x563f2e9b7838 <col:49> 'int' <IntegralCast>
|             `-DeclRefExpr 0x563f2e9b7800 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x563f2e9a6380 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x563f2e9a9f38 <line:273:5, line:279:5> line:273:23 usecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x563f2e9b7b10 <col:39, line:279:5>
|   `-ReturnStmt 0x563f2e9b7b00 <line:275:9, col:61>
|     `-CallExpr 0x563f2e9b7aa0 <col:16, col:61> 'Timestamp::value_type':'long'
|       |-ImplicitCastExpr 0x563f2e9b7a88 <col:16> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x563f2e9b7968 <col:16> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x563f2e9b0ee8 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|       |-ImplicitCastExpr 0x563f2e9b7ad0 <col:26, col:29> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x563f2e9b79c8 <col:26, col:29> 'const int64_t':'const long' lvalue .x 0x563f2e9afc08
|       |   `-MemberExpr 0x563f2e9b7998 <col:26> 'const Timestamp::rep_t' lvalue ->_t 0x563f2e9b0bb8
|       |     `-CXXThisExpr 0x563f2e9b7988 <col:26> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x563f2e9b7ae8 <col:32, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|         `-BinaryOperator 0x563f2e9b7a68 <col:32, col:49> 'int' '/'
|           |-ImplicitCastExpr 0x563f2e9b7a38 <col:32> 'int' <IntegralCast>
|           | `-DeclRefExpr 0x563f2e9b79f8 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x563f2e9a6410 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|           `-ImplicitCastExpr 0x563f2e9b7a50 <col:49> 'int' <IntegralCast>
|             `-DeclRefExpr 0x563f2e9b7a18 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x563f2e9a6260 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x563f2e9a9ff8 <line:281:5, line:287:5> line:281:23 nsecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x563f2e9b7ca8 <col:39, line:287:5>
|   `-ReturnStmt 0x563f2e9b7c98 <line:283:9, col:53>
|     `-BinaryOperator 0x563f2e9b7c78 <col:16, col:53> 'long' '*'
|       |-ImplicitCastExpr 0x563f2e9b7c48 <col:16, col:19> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x563f2e9b7b68 <col:16, col:19> 'const int64_t':'const long' lvalue .x 0x563f2e9afc08
|       |   `-MemberExpr 0x563f2e9b7b38 <col:16> 'const Timestamp::rep_t' lvalue ->_t 0x563f2e9b0bb8
|       |     `-CXXThisExpr 0x563f2e9b7b28 <col:16> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x563f2e9b7c60 <col:23, col:53> 'long' <IntegralCast>
|         `-ParenExpr 0x563f2e9b7c28 <col:23, col:53> 'int'
|           `-BinaryOperator 0x563f2e9b7c08 <col:24, col:39> 'int' '/'
|             |-ImplicitCastExpr 0x563f2e9b7bd8 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x563f2e9b7b98 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x563f2e9a60b0 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x563f2e9b7bf0 <col:39> 'int' <IntegralCast>
|               `-DeclRefExpr 0x563f2e9b7bb8 <col:39> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x563f2e9a6410 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x563f2e9aa0e8 <line:290:5, line:293:5> line:290:22 msec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x563f2e9b8f40 <col:40, line:293:5>
|   |-DeclStmt 0x563f2e9b7df0 <line:291:9, col:48>
|   | `-VarDecl 0x563f2e9b7cd0 <col:9, col:33> col:18 used x 'uint32_t':'unsigned int' cinit
|   |   `-BinaryOperator 0x563f2e9b7dd0 <col:22, col:33> 'unsigned int' '%'
|   |     |-CXXMemberCallExpr 0x563f2e9b7d78 <col:22, col:29> 'uint32_t':'unsigned int'
|   |     | `-MemberExpr 0x563f2e9b7d48 <col:22> '<bound member function type>' ->subsec 0x563f2e9a9088
|   |     |   `-CXXThisExpr 0x563f2e9b7d38 <col:22> 'const Timestamp *' implicit this
|   |     `-ImplicitCastExpr 0x563f2e9b7db8 <col:33> 'unsigned int' <IntegralCast>
|   |       `-DeclRefExpr 0x563f2e9b7d98 <col:33> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x563f2e9a64e0 'subsec_per_msec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x563f2e9b8f30 <line:292:9, col:70>
|     `-ExprWithCleanups 0x563f2e9b8f18 <col:16, col:70> 'Timestamp'
|       `-CXXConstructExpr 0x563f2e9b8ee8 <col:16, col:70> 'Timestamp' 'void (const Timestamp &) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x563f2e9b8ed0 <col:16, col:70> 'const Timestamp' lvalue
|           `-ParenExpr 0x563f2e9b8eb0 <col:16, col:70> 'const Timestamp'
|             `-ConditionalOperator 0x563f2e9b8e80 <col:17, col:66> 'const Timestamp'
|               |-ImplicitCastExpr 0x563f2e9b8c18 <col:17> 'bool' <IntegralToBoolean>
|               | `-ImplicitCastExpr 0x563f2e9b8c00 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|               |   `-DeclRefExpr 0x563f2e9b7e08 <col:17> 'uint32_t':'unsigned int' lvalue Var 0x563f2e9b7cd0 'x' 'uint32_t':'unsigned int'
|               |-CXXConstructExpr 0x563f2e9b8e20 <col:21, col:61> 'const Timestamp' 'void (const Timestamp &) noexcept' elidable
|               | `-MaterializeTemporaryExpr 0x563f2e9b8e08 <col:21, col:61> 'const Timestamp' lvalue
|               |   `-CXXConstructExpr 0x563f2e9b8dd8 <col:21, col:61> 'const Timestamp' 'void (Timestamp &&) noexcept' elidable
|               |     `-MaterializeTemporaryExpr 0x563f2e9b8c30 <col:21, col:61> 'Timestamp' xvalue
|               |       `-CXXOperatorCallExpr 0x563f2e9b8ba0 <col:21, col:61> 'Timestamp'
|               |         |-ImplicitCastExpr 0x563f2e9b8b88 <col:27> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|               |         | `-DeclRefExpr 0x563f2e9b8b38 <col:27> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x563f2e9a59b8 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|               |         |-CXXConstructExpr 0x563f2e9b8ad8 <col:21, col:22> 'Timestamp' 'void (const Timestamp &) noexcept'
|               |         | `-UnaryOperator 0x563f2e9b7e38 <col:21, col:22> 'const Timestamp' lvalue prefix '*' cannot overflow
|               |         |   `-CXXThisExpr 0x563f2e9b7e28 <col:22> 'const Timestamp *' this
|               |         `-MaterializeTemporaryExpr 0x563f2e9b8b20 <col:29, col:61> 'const Timestamp' lvalue
|               |           `-ImplicitCastExpr 0x563f2e9b8b08 <col:29, col:61> 'const Timestamp' <NoOp>
|               |             `-CXXTemporaryObjectExpr 0x563f2e9b82f8 <col:29, col:61> 'Timestamp' 'void (int, uint32_t)'
|               |               |-IntegerLiteral 0x563f2e9b7e60 <col:39> 'int' 0
|               |               `-BinaryOperator 0x563f2e9b7ef0 <col:42, col:60> 'unsigned int' '-'
|               |                 |-ImplicitCastExpr 0x563f2e9b7ec0 <col:42> 'unsigned int' <IntegralCast>
|               |                 | `-DeclRefExpr 0x563f2e9b7e80 <col:42> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x563f2e9a64e0 'subsec_per_msec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|               |                 `-ImplicitCastExpr 0x563f2e9b7ed8 <col:60> 'uint32_t':'unsigned int' <LValueToRValue>
|               |                   `-DeclRefExpr 0x563f2e9b7ea0 <col:60> 'uint32_t':'unsigned int' lvalue Var 0x563f2e9b7cd0 'x' 'uint32_t':'unsigned int'
|               `-CXXConstructExpr 0x563f2e9b8e50 <col:65, col:66> 'const Timestamp' 'void (const Timestamp &) noexcept'
|                 `-UnaryOperator 0x563f2e9b8be8 <col:65, col:66> 'const Timestamp' lvalue prefix '*' cannot overflow
|                   `-CXXThisExpr 0x563f2e9b8bd8 <col:66> 'const Timestamp *' this
|-CXXMethodDecl 0x563f2e9aa1a8 <line:295:5, line:302:5> line:295:22 usec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x563f2e9b9498 <col:40, line:302:5>
|   |-DeclStmt 0x563f2e9b9090 <line:297:9, col:48>
|   | `-VarDecl 0x563f2e9b8f70 <col:9, col:33> col:18 used x 'uint32_t':'unsigned int' cinit
|   |   `-BinaryOperator 0x563f2e9b9070 <col:22, col:33> 'unsigned int' '%'
|   |     |-CXXMemberCallExpr 0x563f2e9b9018 <col:22, col:29> 'uint32_t':'unsigned int'
|   |     | `-MemberExpr 0x563f2e9b8fe8 <col:22> '<bound member function type>' ->subsec 0x563f2e9a9088
|   |     |   `-CXXThisExpr 0x563f2e9b8fd8 <col:22> 'const Timestamp *' implicit this
|   |     `-ImplicitCastExpr 0x563f2e9b9058 <col:33> 'unsigned int' <IntegralCast>
|   |       `-DeclRefExpr 0x563f2e9b9038 <col:33> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x563f2e9a65b0 'subsec_per_usec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x563f2e9b9488 <line:298:9, col:70>
|     `-ExprWithCleanups 0x563f2e9b9470 <col:16, col:70> 'Timestamp'
|       `-CXXConstructExpr 0x563f2e9b9440 <col:16, col:70> 'Timestamp' 'void (const Timestamp &) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x563f2e9b9428 <col:16, col:70> 'const Timestamp' lvalue
|           `-ParenExpr 0x563f2e9b9408 <col:16, col:70> 'const Timestamp'
|             `-ConditionalOperator 0x563f2e9b93d8 <col:17, col:66> 'const Timestamp'
|               |-ImplicitCastExpr 0x563f2e9b9300 <col:17> 'bool' <IntegralToBoolean>
|               | `-ImplicitCastExpr 0x563f2e9b92e8 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|               |   `-DeclRefExpr 0x563f2e9b90a8 <col:17> 'uint32_t':'unsigned int' lvalue Var 0x563f2e9b8f70 'x' 'uint32_t':'unsigned int'
|               |-CXXConstructExpr 0x563f2e9b9378 <col:21, col:61> 'const Timestamp' 'void (const Timestamp &) noexcept' elidable
|               | `-MaterializeTemporaryExpr 0x563f2e9b9360 <col:21, col:61> 'const Timestamp' lvalue
|               |   `-CXXConstructExpr 0x563f2e9b9330 <col:21, col:61> 'const Timestamp' 'void (Timestamp &&) noexcept' elidable
|               |     `-MaterializeTemporaryExpr 0x563f2e9b9318 <col:21, col:61> 'Timestamp' xvalue
|               |       `-CXXOperatorCallExpr 0x563f2e9b9288 <col:21, col:61> 'Timestamp'
|               |         |-ImplicitCastExpr 0x563f2e9b9270 <col:27> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|               |         | `-DeclRefExpr 0x563f2e9b9250 <col:27> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x563f2e9a59b8 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|               |         |-CXXConstructExpr 0x563f2e9b91f0 <col:21, col:22> 'Timestamp' 'void (const Timestamp &) noexcept'
|               |         | `-UnaryOperator 0x563f2e9b90d8 <col:21, col:22> 'const Timestamp' lvalue prefix '*' cannot overflow
|               |         |   `-CXXThisExpr 0x563f2e9b90c8 <col:22> 'const Timestamp *' this
|               |         `-MaterializeTemporaryExpr 0x563f2e9b9238 <col:29, col:61> 'const Timestamp' lvalue
|               |           `-ImplicitCastExpr 0x563f2e9b9220 <col:29, col:61> 'const Timestamp' <NoOp>
|               |             `-CXXTemporaryObjectExpr 0x563f2e9b91b0 <col:29, col:61> 'Timestamp' 'void (int, uint32_t)'
|               |               |-IntegerLiteral 0x563f2e9b9100 <col:39> 'int' 0
|               |               `-BinaryOperator 0x563f2e9b9190 <col:42, col:60> 'unsigned int' '-'
|               |                 |-ImplicitCastExpr 0x563f2e9b9160 <col:42> 'unsigned int' <IntegralCast>
|               |                 | `-DeclRefExpr 0x563f2e9b9120 <col:42> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x563f2e9a65b0 'subsec_per_usec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|               |                 `-ImplicitCastExpr 0x563f2e9b9178 <col:60> 'uint32_t':'unsigned int' <LValueToRValue>
|               |                   `-DeclRefExpr 0x563f2e9b9140 <col:60> 'uint32_t':'unsigned int' lvalue Var 0x563f2e9b8f70 'x' 'uint32_t':'unsigned int'
|               `-CXXConstructExpr 0x563f2e9b93a8 <col:65, col:66> 'const Timestamp' 'void (const Timestamp &) noexcept'
|                 `-UnaryOperator 0x563f2e9b92d0 <col:65, col:66> 'const Timestamp' lvalue prefix '*' cannot overflow
|                   `-CXXThisExpr 0x563f2e9b92c0 <col:66> 'const Timestamp *' this
|-CXXMethodDecl 0x563f2e9aa268 <line:304:5, line:306:5> line:304:22 nsec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x563f2e9b9520 <col:40, line:306:5>
|   `-ReturnStmt 0x563f2e9b9510 <line:305:9, col:17>
|     `-CXXConstructExpr 0x563f2e9b94e0 <col:16, col:17> 'Timestamp' 'void (const Timestamp &) noexcept'
|       `-UnaryOperator 0x563f2e9b94c8 <col:16, col:17> 'const Timestamp' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x563f2e9b94b8 <col:17> 'const Timestamp *' this
|-CXXMethodDecl 0x563f2e9aa408 <line:310:5, col:65> col:29 make_jiffies 'Timestamp (click_jiffies_t)' static inline
| `-ParmVarDecl 0x563f2e9aa318 <col:42, col:58> col:58 jiffies 'click_jiffies_t':'unsigned int'
|-CXXMethodDecl 0x563f2e9aa5d8 <line:312:5, col:76> col:29 make_jiffies 'Timestamp (click_jiffies_difference_t)' static inline
| `-ParmVarDecl 0x563f2e9aa4e0 <col:42, col:69> col:69 jiffies 'click_jiffies_difference_t':'int'
|-CXXMethodDecl 0x563f2e9aa6c8 <line:314:5, col:38> col:28 jiffies 'click_jiffies_t () const' inline
|-CXXMethodDecl 0x563f2e9aa838 <line:318:5, line:320:5> line:318:29 make_sec 'Timestamp (Timestamp::seconds_type)' static inline
| |-ParmVarDecl 0x563f2e9aa778 <col:38, col:51> col:51 used sec 'Timestamp::seconds_type':'int'
| `-CompoundStmt 0x563f2e9b9668 <col:56, line:320:5>
|   `-ReturnStmt 0x563f2e9b9658 <line:319:9, col:32>
|     `-ExprWithCleanups 0x563f2e9b9640 <col:16, col:32> 'Timestamp'
|       `-CXXConstructExpr 0x563f2e9b9610 <col:16, col:32> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x563f2e9b95f8 <col:16, col:32> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x563f2e9b95b8 <col:16, col:32> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x563f2e9b9588 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x563f2e9b9548 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x563f2e9aa778 'sec' 'Timestamp::seconds_type':'int'
|             `-ImplicitCastExpr 0x563f2e9b95a0 <col:31> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x563f2e9b9568 <col:31> 'int' 0
|-CXXMethodDecl 0x563f2e9aaa78 <line:324:5, line:326:5> line:324:29 make_msec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x563f2e9aa8f0 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x563f2e9aa968 <col:57, col:66> col:66 used msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x563f2e9b9838 <col:72, line:326:5>
|   `-ReturnStmt 0x563f2e9b9828 <line:325:9, col:51>
|     `-ExprWithCleanups 0x563f2e9b9810 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x563f2e9b97e0 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x563f2e9b97c8 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x563f2e9b9788 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x563f2e9b9770 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x563f2e9b9690 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x563f2e9aa8f0 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x563f2e9b9730 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x563f2e9b9718 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x563f2e9b96b0 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x563f2e9af360 'msec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x563f2e9b9758 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x563f2e9b96d0 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x563f2e9aa968 'msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x563f2e9aac28 <line:328:5, line:337:5> line:328:29 used make_msec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x563f2e9aab38 <col:39, col:50> col:50 used msec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x563f2e9b9f00 <col:56, line:337:5>
|   |-DeclStmt 0x563f2e9b9b38 <line:329:9, col:51>
|   | `-VarDecl 0x563f2e9b9860 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x563f2e9b9b20 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x563f2e9b9af0 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x563f2e9b9ad8 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x563f2e9b9ac0 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x563f2e9b9a90 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x563f2e9b9a78 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x563f2e9b9a60 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x563f2e9b9950 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x563f2e9b9cf0 <line:331:9, col:55> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x563f2e9b9ba0 <col:9, col:14> 'int64_t':'long' lvalue .x 0x563f2e9afc08
|   | | `-MemberExpr 0x563f2e9b9b70 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x563f2e9b0bb8
|   | |   `-DeclRefExpr 0x563f2e9b9b50 <col:9> 'Timestamp' lvalue Var 0x563f2e9b9860 't' 'Timestamp'
|   | `-BinaryOperator 0x563f2e9b9cd0 <col:18, col:55> 'long' '*'
|   |   |-ImplicitCastExpr 0x563f2e9b9ca0 <col:18> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x563f2e9b9bd0 <col:18> 'Timestamp::value_type':'long' lvalue ParmVar 0x563f2e9aab38 'msec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x563f2e9b9cb8 <col:25, col:55> 'long' <IntegralCast>
|   |     `-ParenExpr 0x563f2e9b9c80 <col:25, col:55> 'int'
|   |       `-BinaryOperator 0x563f2e9b9c60 <col:26, col:43> 'int' '/'
|   |         |-ImplicitCastExpr 0x563f2e9b9c30 <col:26> 'int' <IntegralCast>
|   |         | `-DeclRefExpr 0x563f2e9b9bf0 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x563f2e9a6410 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |         `-ImplicitCastExpr 0x563f2e9b9c48 <col:43> 'int' <IntegralCast>
|   |           `-DeclRefExpr 0x563f2e9b9c10 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x563f2e9a6380 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x563f2e9b9ee8 <line:336:9, col:16>
|     `-CXXConstructExpr 0x563f2e9b9eb8 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x563f2e9b9ea0 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x563f2e9b9e80 <col:16> 'Timestamp' lvalue Var 0x563f2e9b9860 't' 'Timestamp'
|-CXXMethodDecl 0x563f2e9aadf0 <line:341:5, line:343:5> line:341:29 make_usec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x563f2e9aace0 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x563f2e9aad58 <col:57, col:66> col:66 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x563f2e9ba0b8 <col:72, line:343:5>
|   `-ReturnStmt 0x563f2e9ba0a8 <line:342:9, col:51>
|     `-ExprWithCleanups 0x563f2e9ba090 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x563f2e9ba060 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x563f2e9ba048 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x563f2e9ba008 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x563f2e9b9ff0 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x563f2e9b9f38 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x563f2e9aace0 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x563f2e9b9fb0 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x563f2e9b9f98 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x563f2e9b9f58 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x563f2e9af4a8 'usec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x563f2e9b9fd8 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x563f2e9b9f78 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x563f2e9aad58 'usec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x563f2e9aaf40 <line:345:5, line:354:5> line:345:29 used make_usec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x563f2e9aaeb0 <col:39, col:50> col:50 used usec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x563f2e9ba500 <col:56, line:354:5>
|   |-DeclStmt 0x563f2e9ba2a8 <line:346:9, col:51>
|   | `-VarDecl 0x563f2e9ba0e0 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x563f2e9ba290 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x563f2e9ba260 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x563f2e9ba248 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x563f2e9ba230 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x563f2e9ba200 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x563f2e9ba1e8 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x563f2e9ba1d0 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x563f2e9ba1a0 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x563f2e9ba460 <line:348:9, col:55> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x563f2e9ba310 <col:9, col:14> 'int64_t':'long' lvalue .x 0x563f2e9afc08
|   | | `-MemberExpr 0x563f2e9ba2e0 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x563f2e9b0bb8
|   | |   `-DeclRefExpr 0x563f2e9ba2c0 <col:9> 'Timestamp' lvalue Var 0x563f2e9ba0e0 't' 'Timestamp'
|   | `-BinaryOperator 0x563f2e9ba440 <col:18, col:55> 'long' '*'
|   |   |-ImplicitCastExpr 0x563f2e9ba410 <col:18> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x563f2e9ba340 <col:18> 'Timestamp::value_type':'long' lvalue ParmVar 0x563f2e9aaeb0 'usec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x563f2e9ba428 <col:25, col:55> 'long' <IntegralCast>
|   |     `-ParenExpr 0x563f2e9ba3f0 <col:25, col:55> 'int'
|   |       `-BinaryOperator 0x563f2e9ba3d0 <col:26, col:43> 'int' '/'
|   |         |-ImplicitCastExpr 0x563f2e9ba3a0 <col:26> 'int' <IntegralCast>
|   |         | `-DeclRefExpr 0x563f2e9ba360 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x563f2e9a6410 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |         `-ImplicitCastExpr 0x563f2e9ba3b8 <col:43> 'int' <IntegralCast>
|   |           `-DeclRefExpr 0x563f2e9ba380 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x563f2e9a6260 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x563f2e9ba4e8 <line:353:9, col:16>
|     `-CXXConstructExpr 0x563f2e9ba4b8 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x563f2e9ba4a0 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x563f2e9ba480 <col:16> 'Timestamp' lvalue Var 0x563f2e9ba0e0 't' 'Timestamp'
|-CXXMethodDecl 0x563f2e9ab108 <line:358:5, line:360:5> line:358:29 make_nsec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x563f2e9aaff8 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x563f2e9ab070 <col:57, col:66> col:66 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x563f2e9ba6b8 <col:72, line:360:5>
|   `-ReturnStmt 0x563f2e9ba6a8 <line:359:9, col:51>
|     `-ExprWithCleanups 0x563f2e9ba690 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x563f2e9ba660 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x563f2e9ba648 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x563f2e9ba608 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x563f2e9ba5f0 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x563f2e9ba538 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x563f2e9aaff8 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x563f2e9ba5b0 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x563f2e9ba598 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x563f2e9ba558 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x563f2e9af5f0 'nsec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x563f2e9ba5d8 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x563f2e9ba578 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x563f2e9ab070 'nsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x563f2e9ab258 <line:362:5, line:371:5> line:362:29 make_nsec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x563f2e9ab1c8 <col:39, col:50> col:50 used nsec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x563f2e9c7028 <col:56, line:371:5>
|   |-DeclStmt 0x563f2e9ba8a8 <line:363:9, col:51>
|   | `-VarDecl 0x563f2e9ba6e0 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x563f2e9ba890 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x563f2e9ba860 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x563f2e9ba848 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x563f2e9ba830 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x563f2e9ba800 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x563f2e9ba7e8 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x563f2e9ba7d0 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x563f2e9ba7a0 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x563f2e9c6f88 <line:365:9, col:63> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x563f2e9ba910 <col:9, col:14> 'int64_t':'long' lvalue .x 0x563f2e9afc08
|   | | `-MemberExpr 0x563f2e9ba8e0 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x563f2e9b0bb8
|   | |   `-DeclRefExpr 0x563f2e9ba8c0 <col:9> 'Timestamp' lvalue Var 0x563f2e9ba6e0 't' 'Timestamp'
|   | `-CallExpr 0x563f2e9c6f28 <col:18, col:63> 'Timestamp::value_type':'long'
|   |   |-ImplicitCastExpr 0x563f2e9c6f10 <col:18> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x563f2e9ba940 <col:18> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x563f2e9b0ee8 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|   |   |-ImplicitCastExpr 0x563f2e9c6f58 <col:28> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x563f2e9ba960 <col:28> 'Timestamp::value_type':'long' lvalue ParmVar 0x563f2e9ab1c8 'nsec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x563f2e9c6f70 <col:34, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|   |     `-BinaryOperator 0x563f2e9c6ef0 <col:34, col:49> 'int' '/'
|   |       |-ImplicitCastExpr 0x563f2e9c6ec0 <col:34> 'int' <IntegralCast>
|   |       | `-DeclRefExpr 0x563f2e9ba980 <col:34> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x563f2e9a60b0 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |       `-ImplicitCastExpr 0x563f2e9c6ed8 <col:49> 'int' <IntegralCast>
|   |         `-DeclRefExpr 0x563f2e9ba9a0 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x563f2e9a6410 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x563f2e9c7010 <line:370:9, col:16>
|     `-CXXConstructExpr 0x563f2e9c6fe0 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x563f2e9c6fc8 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x563f2e9c6fa8 <col:16> 'Timestamp' lvalue Var 0x563f2e9ba6e0 't' 'Timestamp'
|-CXXMethodDecl 0x563f2e9ab348 <line:375:5, line:377:5> line:375:29 epsilon 'Timestamp ()' static inline
| `-CompoundStmt 0x563f2e9c7168 <col:39, line:377:5>
|   `-ReturnStmt 0x563f2e9c7158 <line:376:9, col:30>
|     `-ExprWithCleanups 0x563f2e9c7140 <col:16, col:30> 'Timestamp'
|       `-CXXConstructExpr 0x563f2e9c7110 <col:16, col:30> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x563f2e9c70f8 <col:16, col:30> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x563f2e9c70b8 <col:16, col:30> 'Timestamp' 'void (int, uint32_t)'
|             |-IntegerLiteral 0x563f2e9c7060 <col:26> 'int' 0
|             `-ImplicitCastExpr 0x563f2e9c70a0 <col:29> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x563f2e9c7080 <col:29> 'int' 1
|-CXXMethodDecl 0x563f2e9ab408 <line:380:5, line:382:5> line:380:17 clear 'void ()' inline
| `-CompoundStmt 0x563f2e9c7248 <col:25, line:382:5>
|   `-CXXMemberCallExpr 0x563f2e9c7200 <line:381:9, col:20> 'void'
|     |-MemberExpr 0x563f2e9c7190 <col:9> '<bound member function type>' ->assign 0x563f2e9ab608
|     | `-CXXThisExpr 0x563f2e9c7180 <col:9> 'Timestamp *' implicit this
|     |-IntegerLiteral 0x563f2e9c71c0 <col:16> 'int' 0
|     `-ImplicitCastExpr 0x563f2e9c7230 <col:19> 'uint32_t':'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x563f2e9c71e0 <col:19> 'int' 0
|-CXXMethodDecl 0x563f2e9ab608 <line:388:5, line:395:5> line:388:17 used assign 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x563f2e9ab4b8 <col:24, col:37> col:37 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x563f2e9ab530 <col:42, col:60> col:51 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x563f2e9b27e0 <col:60> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x563f2e9b27c0 <col:60> 'int' 0
| `-CompoundStmt 0x563f2e9c7440 <col:63, line:395:5>
|   `-BinaryOperator 0x563f2e9c7420 <line:390:9, col:49> 'int64_t':'long' lvalue '='
|     |-MemberExpr 0x563f2e9c72a0 <col:9, col:12> 'int64_t':'long' lvalue .x 0x563f2e9afc08
|     | `-MemberExpr 0x563f2e9c7270 <col:9> 'Timestamp::rep_t' lvalue ->_t 0x563f2e9b0bb8
|     |   `-CXXThisExpr 0x563f2e9c7260 <col:9> 'Timestamp *' implicit this
|     `-BinaryOperator 0x563f2e9c7400 <col:16, col:49> 'long' '+'
|       |-BinaryOperator 0x563f2e9c7390 <col:16, col:32> 'long' '*'
|       | |-CStyleCastExpr 0x563f2e9c7330 <col:16, col:26> 'int64_t':'long' <NoOp>
|       | | `-ImplicitCastExpr 0x563f2e9c7318 <col:26> 'int64_t':'long' <IntegralCast> part_of_explicit_cast
|       | |   `-ImplicitCastExpr 0x563f2e9c7300 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue> part_of_explicit_cast
|       | |     `-DeclRefExpr 0x563f2e9c72d0 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x563f2e9ab4b8 'sec' 'Timestamp::seconds_type':'int'
|       | `-ImplicitCastExpr 0x563f2e9c7378 <col:32> 'long' <IntegralCast>
|       |   `-DeclRefExpr 0x563f2e9c7358 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x563f2e9a6410 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|       `-ImplicitCastExpr 0x563f2e9c73e8 <col:49> 'long' <IntegralCast>
|         `-ImplicitCastExpr 0x563f2e9c73d0 <col:49> 'uint32_t':'unsigned int' <LValueToRValue>
|           `-DeclRefExpr 0x563f2e9c73b0 <col:49> 'uint32_t':'unsigned int' lvalue ParmVar 0x563f2e9ab530 'subsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x563f2e9ab7d8 <line:397:5, line:399:5> line:397:17 used assign_usec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x563f2e9ab6c8 <col:29, col:42> col:42 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x563f2e9ab740 <col:47, col:56> col:56 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x563f2e9c7598 <col:62, line:399:5>
|   `-CXXMemberCallExpr 0x563f2e9c7550 <line:398:9, col:41> 'void'
|     |-MemberExpr 0x563f2e9c7468 <col:9> '<bound member function type>' ->assign 0x563f2e9ab608
|     | `-CXXThisExpr 0x563f2e9c7458 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x563f2e9c7580 <col:16> 'Timestamp::seconds_type':'int' <LValueToRValue>
|     | `-DeclRefExpr 0x563f2e9c7498 <col:16> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x563f2e9ab6c8 'sec' 'Timestamp::seconds_type':'int'
|     `-CallExpr 0x563f2e9c7510 <col:21, col:40> 'uint32_t':'unsigned int'
|       |-ImplicitCastExpr 0x563f2e9c74f8 <col:21> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x563f2e9c74b8 <col:21> 'uint32_t (uint32_t)' lvalue CXXMethod 0x563f2e9af4a8 'usec_to_subsec' 'uint32_t (uint32_t)'
|       `-ImplicitCastExpr 0x563f2e9c7538 <col:36> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x563f2e9c74d8 <col:36> 'uint32_t':'unsigned int' lvalue ParmVar 0x563f2e9ab740 'usec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x563f2e9ab9a8 <line:401:5, line:403:5> line:401:17 used assign_nsec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x563f2e9ab898 <col:29, col:42> col:42 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x563f2e9ab910 <col:47, col:56> col:56 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x563f2e9c76f0 <col:62, line:403:5>
|   `-CXXMemberCallExpr 0x563f2e9c76a8 <line:402:9, col:41> 'void'
|     |-MemberExpr 0x563f2e9c75c0 <col:9> '<bound member function type>' ->assign 0x563f2e9ab608
|     | `-CXXThisExpr 0x563f2e9c75b0 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x563f2e9c76d8 <col:16> 'Timestamp::seconds_type':'int' <LValueToRValue>
|     | `-DeclRefExpr 0x563f2e9c75f0 <col:16> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x563f2e9ab898 'sec' 'Timestamp::seconds_type':'int'
|     `-CallExpr 0x563f2e9c7668 <col:21, col:40> 'uint32_t':'unsigned int'
|       |-ImplicitCastExpr 0x563f2e9c7650 <col:21> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x563f2e9c7610 <col:21> 'uint32_t (uint32_t)' lvalue CXXMethod 0x563f2e9af5f0 'nsec_to_subsec' 'uint32_t (uint32_t)'
|       `-ImplicitCastExpr 0x563f2e9c7690 <col:36> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x563f2e9c7630 <col:36> 'uint32_t':'unsigned int' lvalue ParmVar 0x563f2e9ab910 'nsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x563f2e9abb78 <line:408:5, col:86> col:17 set 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x563f2e9aba68 <col:21, col:34> col:34 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x563f2e9abae0 <col:39, col:57> col:48 subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x563f2e9b2818 <col:57> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x563f2e9b27f8 <col:57> 'int' 0
| `-DeprecatedAttr 0x563f2e9abc28 <col:75> "" ""
|-CXXMethodDecl 0x563f2e9abdb8 <line:411:5, col:85> col:17 set_usec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x563f2e9abca8 <col:26, col:39> col:39 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x563f2e9abd20 <col:44, col:53> col:53 usec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x563f2e9abe68 <col:74> "" ""
|-CXXMethodDecl 0x563f2e9abff8 <line:414:5, col:85> col:17 set_nsec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x563f2e9abee8 <col:26, col:39> col:39 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x563f2e9abf60 <col:44, col:53> col:53 nsec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x563f2e9ac0a8 <col:74> "" ""
|-CXXMethodDecl 0x563f2e9ac138 <line:417:5, col:53> col:17 set_now 'void ()' inline
| `-DeprecatedAttr 0x563f2e9ac1d8 <col:42> "" ""
|-CXXMethodDecl 0x563f2e9aea10 <line:420:5, col:53> col:9 set_timeval_ioctl 'int (int, int)'
| |-ParmVarDecl 0x563f2e9ae8f0 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x563f2e9ae970 <col:35, col:39> col:39 ioctl_selector 'int'
|-CXXMethodDecl 0x563f2e9aeae0 <line:432:5, col:33> col:29 now 'Timestamp ()' static inline
|-CXXMethodDecl 0x563f2e9aeba0 <line:438:5, col:56> col:45 used assign_now 'void ()'
| |-NoInlineAttr 0x563f2e9aec40 <col:20>
| `-OptimizeNoneAttr 0x563f2e9aec98 <col:30>
|-CXXMethodDecl 0x563f2e9aece0 <line:446:5, col:36> col:29 used recent 'Timestamp ()' static inline
|-CXXMethodDecl 0x563f2e9aeda0 <line:452:5, col:31> col:17 used assign_recent 'void ()' inline
|-CXXMethodDecl 0x563f2e9aee60 <line:466:5, col:40> col:29 now_steady 'Timestamp ()' static inline
|-CXXMethodDecl 0x563f2e9aef20 <line:472:5, col:35> col:17 used assign_now_steady 'void ()' inline
|-CXXMethodDecl 0x563f2e9aefe0 <line:481:5, col:43> col:29 used recent_steady 'Timestamp ()' static inline
|-CXXMethodDecl 0x563f2e9af0a0 <line:487:5, col:38> col:17 used assign_recent_steady 'void ()' inline
|-CXXMethodDecl 0x563f2e9af160 <line:496:5, col:22> col:12 unparse 'String () const'
|-CXXMethodDecl 0x563f2e9af220 <line:501:5, col:31> col:12 unparse_interval 'String () const'
|-CXXMethodDecl 0x563f2e9af360 <line:510:5, line:512:5> line:510:28 used msec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x563f2e9af2d0 <col:43, col:52> col:52 used msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x563f2e9c7838 <col:58, line:512:5>
|   `-ReturnStmt 0x563f2e9c7828 <line:511:9, col:53>
|     `-BinaryOperator 0x563f2e9c7808 <col:16, col:53> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x563f2e9c77d8 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x563f2e9c7708 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x563f2e9af2d0 'msec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x563f2e9c77f0 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x563f2e9c77b8 <col:23, col:53> 'int'
|           `-BinaryOperator 0x563f2e9c7798 <col:24, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x563f2e9c7768 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x563f2e9c7728 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x563f2e9a6410 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x563f2e9c7780 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x563f2e9c7748 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x563f2e9a6380 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x563f2e9af4a8 <line:514:5, line:516:5> line:514:28 used usec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x563f2e9af418 <col:43, col:52> col:52 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x563f2e9c7980 <col:58, line:516:5>
|   `-ReturnStmt 0x563f2e9c7970 <line:515:9, col:53>
|     `-BinaryOperator 0x563f2e9c7950 <col:16, col:53> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x563f2e9c7920 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x563f2e9c7850 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x563f2e9af418 'usec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x563f2e9c7938 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x563f2e9c7900 <col:23, col:53> 'int'
|           `-BinaryOperator 0x563f2e9c78e0 <col:24, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x563f2e9c78b0 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x563f2e9c7870 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x563f2e9a6410 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x563f2e9c78c8 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x563f2e9c7890 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x563f2e9a6260 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x563f2e9af5f0 <line:518:5, line:520:5> line:518:28 used nsec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x563f2e9af560 <col:43, col:52> col:52 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x563f2e9c7ac8 <col:58, line:520:5>
|   `-ReturnStmt 0x563f2e9c7ab8 <line:519:9, col:53>
|     `-BinaryOperator 0x563f2e9c7a98 <col:16, col:53> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x563f2e9c7a68 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x563f2e9c7998 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x563f2e9af560 'nsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x563f2e9c7a80 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x563f2e9c7a48 <col:23, col:53> 'int'
|           `-BinaryOperator 0x563f2e9c7a28 <col:24, col:39> 'int' '/'
|             |-ImplicitCastExpr 0x563f2e9c79f8 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x563f2e9c79b8 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x563f2e9a60b0 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x563f2e9c7a10 <col:39> 'int' <IntegralCast>
|               `-DeclRefExpr 0x563f2e9c79d8 <col:39> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x563f2e9a6410 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x563f2e9af738 <line:522:5, line:524:5> line:522:28 used subsec_to_msec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x563f2e9af6a8 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x563f2e9c7c10 <col:60, line:524:5>
|   `-ReturnStmt 0x563f2e9c7c00 <line:523:9, col:55>
|     `-BinaryOperator 0x563f2e9c7be0 <col:16, col:55> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x563f2e9c7bb0 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x563f2e9c7ae0 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x563f2e9af6a8 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x563f2e9c7bc8 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x563f2e9c7b90 <col:25, col:55> 'int'
|           `-BinaryOperator 0x563f2e9c7b70 <col:26, col:43> 'int' '/'
|             |-ImplicitCastExpr 0x563f2e9c7b40 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x563f2e9c7b00 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x563f2e9a6410 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x563f2e9c7b58 <col:43> 'int' <IntegralCast>
|               `-DeclRefExpr 0x563f2e9c7b20 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x563f2e9a6380 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x563f2e9af880 <line:526:5, line:528:5> line:526:28 used subsec_to_usec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x563f2e9af7f0 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x563f2e9c7d58 <col:60, line:528:5>
|   `-ReturnStmt 0x563f2e9c7d48 <line:527:9, col:55>
|     `-BinaryOperator 0x563f2e9c7d28 <col:16, col:55> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x563f2e9c7cf8 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x563f2e9c7c28 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x563f2e9af7f0 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x563f2e9c7d10 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x563f2e9c7cd8 <col:25, col:55> 'int'
|           `-BinaryOperator 0x563f2e9c7cb8 <col:26, col:43> 'int' '/'
|             |-ImplicitCastExpr 0x563f2e9c7c88 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x563f2e9c7c48 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x563f2e9a6410 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x563f2e9c7ca0 <col:43> 'int' <IntegralCast>
|               `-DeclRefExpr 0x563f2e9c7c68 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x563f2e9a6260 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x563f2e9af9c8 <line:530:5, line:532:5> line:530:28 used subsec_to_nsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x563f2e9af938 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x563f2e9c7ea0 <col:60, line:532:5>
|   `-ReturnStmt 0x563f2e9c7e90 <line:531:9, col:55>
|     `-BinaryOperator 0x563f2e9c7e70 <col:16, col:55> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x563f2e9c7e40 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x563f2e9c7d70 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x563f2e9af938 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x563f2e9c7e58 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x563f2e9c7e20 <col:25, col:55> 'int'
|           `-BinaryOperator 0x563f2e9c7e00 <col:26, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x563f2e9c7dd0 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x563f2e9c7d90 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x563f2e9a60b0 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x563f2e9c7de8 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x563f2e9c7db0 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x563f2e9a6410 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXRecordDecl 0x563f2e9afa70 prev 0x563f2e9a68b0 <line:539:5, line:566:5> line:539:11 referenced union rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x563f2e9afb68 <col:5, col:11> col:11 implicit union rep_t
| |-FieldDecl 0x563f2e9afc08 <line:541:9, col:17> col:17 referenced x 'int64_t':'long'
| |-CXXConstructorDecl 0x563f2e9b69d0 <line:539:11> col:11 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x563f2e9b6db8 <col:11>
| |-CXXConstructorDecl 0x563f2e9b6ab0 <col:11> col:11 implicit used constexpr rep_t 'void (const Timestamp::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x563f2e9b6b98 <col:11> col:11 'const Timestamp::rep_t &'
| | `-CompoundStmt 0x563f2e9b7500 <col:11>
| |-CXXConstructorDecl 0x563f2e9b6c38 <col:11> col:11 implicit used constexpr rep_t 'void (Timestamp::rep_t &&) noexcept' inline default trivial
| | |-ParmVarDecl 0x563f2e9b6d48 <col:11> col:11 'Timestamp::rep_t &&'
| | `-CompoundStmt 0x563f2e9b8d58 <col:11>
| |-CXXDestructorDecl 0x563f2e9b8068 <col:11> col:11 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x563f2e6bea28 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(const Timestamp::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x563f2e6beb38 <col:11> col:11 'const Timestamp::rep_t &'
| | `-CompoundStmt 0x563f2e6bf400 <col:11>
| |   `-ReturnStmt 0x563f2e6bf3f0 <col:11>
| |     `-UnaryOperator 0x563f2e6bf3d8 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x563f2e6bf3c8 <col:11> 'Timestamp::rep_t *' this
| `-CXXMethodDecl 0x563f2e6beba8 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(Timestamp::rep_t &&) noexcept' inline default trivial
|   |-ParmVarDecl 0x563f2e6becb8 <col:11> col:11 'Timestamp::rep_t &&'
|   `-CompoundStmt 0x563f2eb2ff30 <col:11>
|     `-ReturnStmt 0x563f2eb2ff20 <col:11>
|       `-UnaryOperator 0x563f2eb2ff08 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x563f2eb2fef8 <col:11> 'Timestamp::rep_t *' this
|-EnumDecl 0x563f2e9afc70 <line:571:5, line:577:5> line:571:10 referenced warp_class_type
| |-EnumConstantDecl 0x563f2e9afd70 <line:572:9, col:21> col:9 warp_none 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x563f2e9aff70 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563f2e9afd50 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x563f2e9afd30 <col:21> 'int' 0
| |-EnumConstantDecl 0x563f2e9afe00 <line:573:9, col:23> col:9 warp_linear 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x563f2e9aff88 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563f2e9afde0 <col:23> 'int' Int: 1
| |     `-IntegerLiteral 0x563f2e9afdc0 <col:23> 'int' 1
| |-EnumConstantDecl 0x563f2e9afe90 <line:574:9, col:23> col:9 referenced warp_nowait 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x563f2e9affa0 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563f2e9afe70 <col:23> 'int' Int: 2
| |     `-IntegerLiteral 0x563f2e9afe50 <col:23> 'int' 2
| `-EnumConstantDecl 0x563f2e9aff20 <line:576:9, col:27> col:9 warp_simulation 'Timestamp::warp_class_type'
|   `-ImplicitCastExpr 0x563f2e9affb8 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x563f2e9aff00 <col:27> 'int' Int: 3
|       `-IntegerLiteral 0x563f2e9afee0 <col:27> 'int' 3
|-CXXMethodDecl 0x563f2e9afff8 <line:581:5, col:34> col:23 warp_class 'int ()' static inline
|-CXXMethodDecl 0x563f2e9b00c0 <line:588:5, col:37> col:26 warp_speed 'double ()' static inline
|-CXXMethodDecl 0x563f2e9b02c8 <line:621:5, col:65> col:17 warp_set_class 'void (Timestamp::warp_class_type, double)' static
| |-ParmVarDecl 0x563f2e9b0170 <col:32, col:48> col:48 w 'Timestamp::warp_class_type'
| `-ParmVarDecl 0x563f2e9b01f0 <col:51, col:62> col:58 s 'double' cinit
|   `-FloatingLiteral 0x563f2e9b2830 <col:62> 'double' 1.000000e+00
|-CXXMethodDecl 0x563f2e9b04d8 <line:628:5, col:82> col:17 warp_set_now 'void (const Timestamp &, const Timestamp &)' static
| |-ParmVarDecl 0x563f2e9b0388 <col:30, col:47> col:47 t_system 'const Timestamp &'
| `-ParmVarDecl 0x563f2e9b0400 <col:57, col:74> col:74 t_steady 'const Timestamp &'
|-CXXMethodDecl 0x563f2e9b05a8 <line:632:5, col:40> col:22 warp_real_delay 'Timestamp () const' inline
|-CXXMethodDecl 0x563f2e9b0668 <line:635:5, col:37> col:24 used warp_jumping 'bool ()' static inline
|-CXXMethodDecl 0x563f2e9b07d8 <line:640:5, col:57> col:17 warp_jump_steady 'void (const Timestamp &)' static
| `-ParmVarDecl 0x563f2e9b0718 <col:34, col:51> col:51 expiry 'const Timestamp &'
|-CXXMethodDecl 0x563f2e9b08a0 <line:647:5, col:42> col:29 now_unwarped 'Timestamp ()' static inline
|-CXXMethodDecl 0x563f2e9b0960 <line:653:5, col:37> col:17 used assign_now_unwarped 'void ()' inline
|-CXXMethodDecl 0x563f2e9b0a20 <line:659:5, col:49> col:29 now_steady_unwarped 'Timestamp ()' static inline
|-CXXMethodDecl 0x563f2e9b0ae0 <line:666:5, col:44> col:17 used assign_now_steady_unwarped 'void ()' inline
|-AccessSpecDecl 0x563f2e9b0b80 <line:670:3, col:10> col:3 private
|-FieldDecl 0x563f2e9b0bb8 <line:672:5, col:11> col:11 referenced _t 'Timestamp::rep_t'
|-CXXMethodDecl 0x563f2e9b0c28 <line:674:5, line:684:5> line:674:17 used add_fix 'void ()' inline
| `-CompoundStmt 0x563f2e9c7eb8 <col:27, line:684:5>
|-CXXMethodDecl 0x563f2e9b0ce8 <line:686:5, line:696:5> line:686:17 used sub_fix 'void ()' inline
| `-CompoundStmt 0x563f2e9c7ec8 <col:27, line:696:5>
|-CXXMethodDecl 0x563f2e9b0ee8 <line:698:5, line:700:5> line:698:30 used value_div 'Timestamp::value_type (Timestamp::value_type, uint32_t)' static inline
| |-ParmVarDecl 0x563f2e9b0d98 <col:40, col:51> col:51 used a 'Timestamp::value_type':'long'
| |-ParmVarDecl 0x563f2e9b0e10 <col:54, col:63> col:63 used b 'uint32_t':'unsigned int'
| `-CompoundStmt 0x563f2e9c8050 <col:66, line:700:5>
|   `-ReturnStmt 0x563f2e9c8040 <line:699:9, col:31>
|     `-CallExpr 0x563f2e9c7fe0 <col:16, col:31> 'int64_t':'long'
|       |-ImplicitCastExpr 0x563f2e9c7fc8 <col:16> 'int64_t (*)(int64_t, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x563f2e9c7f78 <col:16> 'int64_t (int64_t, uint32_t)' lvalue Function 0x563f2e833298 'int_divide' 'int64_t (int64_t, uint32_t)'
|       |-ImplicitCastExpr 0x563f2e9c8010 <col:27> 'Timestamp::value_type':'long' <LValueToRValue>
|       | `-DeclRefExpr 0x563f2e9c7f38 <col:27> 'Timestamp::value_type':'long' lvalue ParmVar 0x563f2e9b0d98 'a' 'Timestamp::value_type':'long'
|       `-ImplicitCastExpr 0x563f2e9c8028 <col:30> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x563f2e9c7f58 <col:30> 'uint32_t':'unsigned int' lvalue ParmVar 0x563f2e9b0e10 'b' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x563f2e9b1258 <line:702:5, line:707:5> line:702:24 value_div_mod 'void (int32_t &, int32_t &, Timestamp::value_type, uint32_t)' static inline
| |-ParmVarDecl 0x563f2e9b0fa8 <col:38, col:47> col:47 used div 'int32_t &'
| |-ParmVarDecl 0x563f2e9b1020 <col:52, col:61> col:61 used rem 'int32_t &'
| |-ParmVarDecl 0x563f2e9b1098 <line:703:38, col:49> col:49 used a 'Timestamp::value_type':'long'
| |-ParmVarDecl 0x563f2e9b1110 <col:52, col:61> col:61 used b 'uint32_t':'unsigned int'
| `-CompoundStmt 0x563f2e9c83a0 <col:64, line:707:5>
|   |-DeclStmt 0x563f2e9c80e0 <line:704:9, col:24>
|   | `-VarDecl 0x563f2e9c8078 <col:9, col:20> col:20 used quot 'Timestamp::value_type':'long'
|   |-BinaryOperator 0x563f2e9c82f0 <line:705:9, col:39> 'int32_t':'int' lvalue '='
|   | |-DeclRefExpr 0x563f2e9c80f8 <col:9> 'int32_t':'int' lvalue ParmVar 0x563f2e9b1020 'rem' 'int32_t &'
|   | `-ImplicitCastExpr 0x563f2e9c82d8 <col:15, col:39> 'int32_t':'int' <IntegralCast>
|   |   `-CallExpr 0x563f2e9c8270 <col:15, col:39> 'uint32_t':'unsigned int'
|   |     |-ImplicitCastExpr 0x563f2e9c8258 <col:15> 'uint32_t (*)(int64_t, uint32_t, int64_t &)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x563f2e9c81d8 <col:15> 'uint32_t (int64_t, uint32_t, int64_t &)' lvalue Function 0x563f2e838568 'int_remainder' 'uint32_t (int64_t, uint32_t, int64_t &)'
|   |     |-ImplicitCastExpr 0x563f2e9c82a8 <col:29> 'Timestamp::value_type':'long' <LValueToRValue>
|   |     | `-DeclRefExpr 0x563f2e9c8178 <col:29> 'Timestamp::value_type':'long' lvalue ParmVar 0x563f2e9b1098 'a' 'Timestamp::value_type':'long'
|   |     |-ImplicitCastExpr 0x563f2e9c82c0 <col:32> 'uint32_t':'unsigned int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x563f2e9c8198 <col:32> 'uint32_t':'unsigned int' lvalue ParmVar 0x563f2e9b1110 'b' 'uint32_t':'unsigned int'
|   |     `-DeclRefExpr 0x563f2e9c81b8 <col:35> 'Timestamp::value_type':'long' lvalue Var 0x563f2e9c8078 'quot' 'Timestamp::value_type':'long'
|   `-BinaryOperator 0x563f2e9c8380 <line:706:9, col:15> 'int32_t':'int' lvalue '='
|     |-DeclRefExpr 0x563f2e9c8310 <col:9> 'int32_t':'int' lvalue ParmVar 0x563f2e9b0fa8 'div' 'int32_t &'
|     `-ImplicitCastExpr 0x563f2e9c8368 <col:15> 'int32_t':'int' <IntegralCast>
|       `-ImplicitCastExpr 0x563f2e9c8350 <col:15> 'Timestamp::value_type':'long' <LValueToRValue>
|         `-DeclRefExpr 0x563f2e9c8330 <col:15> 'Timestamp::value_type':'long' lvalue Var 0x563f2e9c8078 'quot' 'Timestamp::value_type':'long'
|-CXXMethodDecl 0x563f2e9b14f8 <line:709:5, col:67> col:17 used assign_now 'void (bool, bool, bool)' inline
| |-ParmVarDecl 0x563f2e9b1328 <col:28, col:33> col:33 recent 'bool'
| |-ParmVarDecl 0x563f2e9b13a0 <col:41, col:46> col:46 steady 'bool'
| `-ParmVarDecl 0x563f2e9b1418 <col:54, col:59> col:59 unwarped 'bool'
|-CXXMethodDecl 0x563f2e9b1798 <line:712:5, col:98> col:24 warp_adjust 'void (bool, const Timestamp &, const Timestamp &)' static inline
| |-ParmVarDecl 0x563f2e9b15c0 <col:36, col:41> col:41 steady 'bool'
| |-ParmVarDecl 0x563f2e9b1638 <col:49, col:66> col:66 t_raw 'const Timestamp &'
| `-ParmVarDecl 0x563f2e9b16b0 <col:73, col:90> col:90 t_warped 'const Timestamp &'
|-CXXMethodDecl 0x563f2e9b1928 <line:713:5, col:42> col:22 warped 'Timestamp (bool) const' inline
| `-ParmVarDecl 0x563f2e9b1860 <col:29, col:34> col:34 steady 'bool'
|-CXXMethodDecl 0x563f2e9b1b28 <line:714:5, col:41> col:10 used warp 'void (bool, bool)'
| |-ParmVarDecl 0x563f2e9b19e0 <col:15, col:20> col:20 steady 'bool'
| `-ParmVarDecl 0x563f2e9b1a58 <col:28, col:33> col:33 from_now 'bool'
|-FriendDecl 0x563f2e9b1df8 <line:717:5, col:73> col:24
| `-FunctionDecl 0x563f2e9b1d38 parent 0x563f2e4b1488 <col:5, col:73> col:24 used operator== 'bool (const Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x563f2e9b1be8 <col:35, col:52> col:52 a 'const Timestamp &'
|   `-ParmVarDecl 0x563f2e9b1c60 <col:55, col:72> col:72 b 'const Timestamp &'
|-FriendDecl 0x563f2e9b2018 <line:718:5, col:72> col:24
| `-FunctionDecl 0x563f2e9b1f58 parent 0x563f2e4b1488 <col:5, col:72> col:24 used operator< 'bool (const Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x563f2e9b1e48 <col:34, col:51> col:51 a 'const Timestamp &'
|   `-ParmVarDecl 0x563f2e9b1ec0 <col:54, col:71> col:71 b 'const Timestamp &'
|-FriendDecl 0x563f2e9b21e0 <line:719:5, col:57> col:29
| `-FunctionDecl 0x563f2e9b2128 parent 0x563f2e4b1488 <col:5, col:57> col:29 operator- 'Timestamp (const Timestamp &)' inline
|   `-ParmVarDecl 0x563f2e9b2068 <col:39, col:56> col:56 b 'const Timestamp &'
|-FriendDecl 0x563f2e9b2468 <line:720:5, col:73> col:30
| `-FunctionDecl 0x563f2e9b23a8 parent 0x563f2e4b1488 <col:5, col:73> col:30 used operator+= 'Timestamp &(Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x563f2e9b2258 <col:41, col:52> col:52 a 'Timestamp &'
|   `-ParmVarDecl 0x563f2e9b22d0 <col:55, col:72> col:72 b 'const Timestamp &'
|-FriendDecl 0x563f2e9b2688 <line:721:5, col:73> col:30
| `-FunctionDecl 0x563f2e9b25c8 parent 0x563f2e4b1488 <col:5, col:73> col:30 used operator-= 'Timestamp &(Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x563f2e9b24b8 <col:41, col:52> col:52 a 'Timestamp &'
|   `-ParmVarDecl 0x563f2e9b2530 <col:55, col:72> col:72 b 'const Timestamp &'
|-CXXConstructorDecl 0x563f2e9b7f10 <line:122:7> col:7 implicit used constexpr Timestamp 'void (const Timestamp &) noexcept' inline default trivial
| |-ParmVarDecl 0x563f2e9b7ff8 <col:7> col:7 used 'const Timestamp &'
| |-CXXCtorInitializer Field 0x563f2e9b0bb8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x563f2e9b8a68 <col:7> 'Timestamp::rep_t' 'void (const Timestamp::rep_t &) noexcept'
| |   `-MemberExpr 0x563f2e9b8a20 <col:7> 'const Timestamp::rep_t' lvalue ._t 0x563f2e9b0bb8
| |     `-DeclRefExpr 0x563f2e9b8a00 <col:7> 'const Timestamp' lvalue ParmVar 0x563f2e9b7ff8 '' 'const Timestamp &'
| `-CompoundStmt 0x563f2e9b8ac8 <col:7>
|-CXXConstructorDecl 0x563f2e9b8178 <col:7> col:7 implicit used constexpr Timestamp 'void (Timestamp &&) noexcept' inline default trivial
| |-ParmVarDecl 0x563f2e9b8288 <col:7> col:7 used 'Timestamp &&'
| |-CXXCtorInitializer Field 0x563f2e9b0bb8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x563f2e9b8d68 <col:7> 'Timestamp::rep_t' 'void (Timestamp::rep_t &&) noexcept'
| |   `-MemberExpr 0x563f2e9b8d10 <col:7> 'Timestamp::rep_t' xvalue ._t 0x563f2e9b0bb8
| |     `-CXXStaticCastExpr 0x563f2e9b8ce0 <col:7> 'Timestamp' xvalue static_cast<class Timestamp &&> <NoOp>
| |       `-DeclRefExpr 0x563f2e9b8cb0 <col:7> 'Timestamp' lvalue ParmVar 0x563f2e9b8288 '' 'Timestamp &&'
| `-CompoundStmt 0x563f2e9b8dc8 <col:7>
|-CXXDestructorDecl 0x563f2e9b8338 <col:7> col:7 implicit referenced ~Timestamp 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x563f2e6be878 <col:7> col:7 implicit used operator= 'Timestamp &(const Timestamp &) noexcept' inline default trivial
| |-ParmVarDecl 0x563f2e6be988 <col:7> col:7 used 'const Timestamp &'
| `-CompoundStmt 0x563f2e6bf478 <col:7>
|   |-CXXMemberCallExpr 0x563f2e6bf418 <col:7> 'Timestamp::rep_t' lvalue
|   | |-MemberExpr 0x563f2e6bf358 <col:7> '<bound member function type>' .operator= 0x563f2e6bea28
|   | | `-MemberExpr 0x563f2e6bf268 <col:7> 'Timestamp::rep_t' lvalue ->_t 0x563f2e9b0bb8
|   | |   `-CXXThisExpr 0x563f2e6bf258 <col:7> 'Timestamp *' this
|   | `-MemberExpr 0x563f2e6bf328 <col:7> 'const Timestamp::rep_t' lvalue ._t 0x563f2e9b0bb8
|   |   `-DeclRefExpr 0x563f2e6bf308 <col:7> 'const Timestamp' lvalue ParmVar 0x563f2e6be988 '' 'const Timestamp &'
|   `-ReturnStmt 0x563f2e6bf468 <col:7>
|     `-UnaryOperator 0x563f2e6bf450 <col:7> 'Timestamp' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x563f2e6bf440 <col:7> 'Timestamp *' this
`-CXXMethodDecl 0x563f2e6bed28 <col:7> col:7 implicit used operator= 'Timestamp &(Timestamp &&) noexcept' inline default trivial
  |-ParmVarDecl 0x563f2e6bee38 <col:7> col:7 used 'Timestamp &&'
  `-CompoundStmt 0x563f2eb2ffa8 <col:7>
    |-CXXMemberCallExpr 0x563f2eb2ff48 <col:7> 'Timestamp::rep_t' lvalue
    | |-MemberExpr 0x563f2eb2feb0 <col:7> '<bound member function type>' .operator= 0x563f2e6beba8
    | | `-MemberExpr 0x563f2eb2fd80 <col:7> 'Timestamp::rep_t' lvalue ->_t 0x563f2e9b0bb8
    | |   `-CXXThisExpr 0x563f2eb2fd70 <col:7> 'Timestamp *' this
    | `-MemberExpr 0x563f2eb2fe80 <col:7> 'Timestamp::rep_t' xvalue ._t 0x563f2e9b0bb8
    |   `-CXXStaticCastExpr 0x563f2eb2fe50 <col:7> 'Timestamp' xvalue static_cast<class Timestamp &&> <NoOp>
    |     `-DeclRefExpr 0x563f2eb2fe20 <col:7> 'Timestamp' lvalue ParmVar 0x563f2e6bee38 '' 'Timestamp &&'
    `-ReturnStmt 0x563f2eb2ff98 <col:7>
      `-UnaryOperator 0x563f2eb2ff80 <col:7> 'Timestamp' lvalue prefix '*' cannot overflow
        `-CXXThisExpr 0x563f2eb2ff70 <col:7> 'Timestamp *' this

Layout: <CGRecordLayout
  LLVMType:%class.Timestamp = type { %"union.Timestamp::rep_t" }
  NonVirtualBaseLLVMType:%class.Timestamp = type { %"union.Timestamp::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x563f2eb38bd8 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'TimerSet::heap_element'
|-CXXRecordDecl 0x563f2eb38de8 prev 0x563f2eb38bd8 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x563f2eb39ff0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<heap_element>::type':'sized_array_memory<16>'
| `-ElaboratedType 0x563f2eb39fa0 'typename array_memory<heap_element>::type' sugar
|   `-TypedefType 0x563f2eb39f80 'conditional<true, sized_array_memory<16>, typed_array_memory<TimerSet::heap_element> >::type' sugar
|     |-Typedef 0x563f2eb39e30 'type'
|     `-SubstTemplateTypeParmType 0x563f2eb39c50 'sized_array_memory<16>' sugar
|       |-TemplateTypeParmType 0x563f2e77b200 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563f2e77b1a8 'T'
|       `-RecordType 0x563f2eb397a0 'sized_array_memory<16>'
|         `-ClassTemplateSpecialization 0x563f2eb396b8 'sized_array_memory'
|-FieldDecl 0x563f2eb3dc40 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<TimerSet::heap_element>::array_memory_type>':'vector_memory<sized_array_memory<16> >' mutable
|-AccessSpecDecl 0x563f2eb3dc90 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x563f2eb3dcc8 <line:118:5, col:15> col:15 value_type 'TimerSet::heap_element':'TimerSet::heap_element'
| `-SubstTemplateTypeParmType 0x563f2eb38e80 'TimerSet::heap_element' sugar
|   |-TemplateTypeParmType 0x563f2e7b3110 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x563f2e7b30b8 'T'
|   `-RecordType 0x563f2eb37de0 'TimerSet::heap_element'
|     `-CXXRecord 0x563f2eb37d50 'heap_element'
|-TypedefDecl 0x563f2eb3dd88 <line:119:5, col:16> col:16 reference 'TimerSet::heap_element &'
| `-LValueReferenceType 0x563f2eb3dd50 'TimerSet::heap_element &'
|   `-SubstTemplateTypeParmType 0x563f2eb38e80 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x563f2e7b3110 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x563f2e7b30b8 'T'
|     `-RecordType 0x563f2eb37de0 'TimerSet::heap_element'
|       `-CXXRecord 0x563f2eb37d50 'heap_element'
|-TypedefDecl 0x563f2eb3de18 <line:120:5, col:22> col:22 const_reference 'const TimerSet::heap_element &'
| `-LValueReferenceType 0x563f2eb3dde0 'const TimerSet::heap_element &'
|   `-QualType 0x563f2eb38e81 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x563f2eb38e80 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x563f2e7b3110 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563f2e7b30b8 'T'
|       `-RecordType 0x563f2eb37de0 'TimerSet::heap_element'
|         `-CXXRecord 0x563f2eb37d50 'heap_element'
|-TypedefDecl 0x563f2eb3dea8 <line:121:5, col:16> col:16 pointer 'TimerSet::heap_element *'
| `-PointerType 0x563f2eb3de70 'TimerSet::heap_element *'
|   `-SubstTemplateTypeParmType 0x563f2eb38e80 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x563f2e7b3110 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x563f2e7b30b8 'T'
|     `-RecordType 0x563f2eb37de0 'TimerSet::heap_element'
|       `-CXXRecord 0x563f2eb37d50 'heap_element'
|-TypedefDecl 0x563f2eb3df68 <line:122:5, col:22> col:22 const_pointer 'const TimerSet::heap_element *'
| `-PointerType 0x563f2eb3df30 'const TimerSet::heap_element *'
|   `-QualType 0x563f2eb38e81 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x563f2eb38e80 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x563f2e7b3110 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563f2e7b30b8 'T'
|       `-RecordType 0x563f2eb37de0 'TimerSet::heap_element'
|         `-CXXRecord 0x563f2eb37d50 'heap_element'
|-TypedefDecl 0x563f2eb3ebc0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<heap_element>::type':'const TimerSet::heap_element &'
| `-ElaboratedType 0x563f2eb3eb70 'typename fast_argument<heap_element>::type' sugar
|   `-TypedefType 0x563f2eb3eb50 'fast_argument<TimerSet::heap_element, true>::type' sugar
|     |-Typedef 0x563f2eb3ea88 'type'
|     `-LValueReferenceType 0x563f2eb3ea50 'const TimerSet::heap_element &'
|       `-QualType 0x563f2eb3e7f1 'const TimerSet::heap_element' const
|         `-SubstTemplateTypeParmType 0x563f2eb3e7f0 'TimerSet::heap_element' sugar
|           |-TemplateTypeParmType 0x563f2e7858d0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x563f2e785878 'T'
|           `-RecordType 0x563f2eb37de0 'TimerSet::heap_element'
|             `-CXXRecord 0x563f2eb37d50 'heap_element'
|-TypedefDecl 0x563f2eb3ec28 <line:126:5, col:22> col:22 const_access_type 'const TimerSet::heap_element &'
| `-LValueReferenceType 0x563f2eb3dde0 'const TimerSet::heap_element &'
|   `-QualType 0x563f2eb38e81 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x563f2eb38e80 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x563f2e7b3110 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563f2e7b30b8 'T'
|       `-RecordType 0x563f2eb37de0 'TimerSet::heap_element'
|         `-CXXRecord 0x563f2eb37d50 'heap_element'
|-TypedefDecl 0x563f2eb3ec80 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x563f2e4b1580 'int'
|-TypedefDecl 0x563f2eb3ece8 <line:130:5, col:16> col:16 iterator 'TimerSet::heap_element *'
| `-PointerType 0x563f2eb3de70 'TimerSet::heap_element *'
|   `-SubstTemplateTypeParmType 0x563f2eb38e80 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x563f2e7b3110 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x563f2e7b30b8 'T'
|     `-RecordType 0x563f2eb37de0 'TimerSet::heap_element'
|       `-CXXRecord 0x563f2eb37d50 'heap_element'
|-TypedefDecl 0x563f2eb3ed50 <line:131:5, col:22> col:22 const_iterator 'const TimerSet::heap_element *'
| `-PointerType 0x563f2eb3df30 'const TimerSet::heap_element *'
|   `-QualType 0x563f2eb38e81 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x563f2eb38e80 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x563f2e7b3110 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563f2e7b30b8 'T'
|       `-RecordType 0x563f2eb37de0 'TimerSet::heap_element'
|         `-CXXRecord 0x563f2eb37d50 'heap_element'
|-EnumDecl 0x563f2eb3eda8 <line:134:5> col:5
| `-EnumConstantDecl 0x563f2eb3eea0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<TimerSet::heap_element>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x563f2eb3ee80 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x563f2e7b4798 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x563f2e7b4770 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x563f2e7b4750 <col:40> 'int' 1
|-CXXConstructorDecl 0x563f2eb3ef28 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x563f2eb3f1b8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x563f2eb3efe0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x563f2eb3f080 <col:41, col:61> col:61 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXConstructorDecl 0x563f2eb3f478 <line:139:5, col:37> col:12 Vector 'void (const Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x563f2eb3f360 <col:19, col:36> col:36 x 'const Vector<TimerSet::heap_element> &'
|-CXXConstructorDecl 0x563f2eb3f738 <line:141:5, col:32> col:12 Vector 'void (Vector<TimerSet::heap_element> &&)' inline
| `-ParmVarDecl 0x563f2eb3f620 <col:19, col:31> col:31 x 'Vector<TimerSet::heap_element> &&'
|-CXXMethodDecl 0x563f2eb3fa80 <line:144:5, col:51> col:23 operator= 'Vector<TimerSet::heap_element> &(const Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x563f2eb3f960 <col:33, col:50> col:50 x 'const Vector<TimerSet::heap_element> &'
|-CXXMethodDecl 0x563f2eb3fd90 <line:146:5, col:46> col:23 operator= 'Vector<TimerSet::heap_element> &(Vector<TimerSet::heap_element> &&)' inline
| `-ParmVarDecl 0x563f2eb3fc70 <col:33, col:45> col:45 x 'Vector<TimerSet::heap_element> &&'
|-CXXMethodDecl 0x563f2eb40080 <line:148:5, col:70> col:23 assign 'Vector<TimerSet::heap_element> &(Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x563f2eb3fec8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x563f2eb3ff40 <col:43, col:69> col:63 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x563f2eb401d8 <line:150:5, col:55> col:49 begin 'Vector<TimerSet::heap_element>::iterator ()'
| |-NoInlineAttr 0x563f2eb402b8 <col:20> Inherited
| `-OptimizeNoneAttr 0x563f2eb40310 <col:30> Inherited
|-CXXMethodDecl 0x563f2eb40358 <line:151:5, col:53> col:49 end 'Vector<TimerSet::heap_element>::iterator ()'
| |-NoInlineAttr 0x563f2eb40408 <col:20> Inherited
| `-OptimizeNoneAttr 0x563f2eb40460 <col:30> Inherited
|-CXXMethodDecl 0x563f2eb40528 <line:152:5, col:63> col:55 begin 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x563f2eb405d8 <col:20> Inherited
| `-OptimizeNoneAttr 0x563f2eb40630 <col:30> Inherited
|-CXXMethodDecl 0x563f2eb40678 <line:153:5, col:61> col:55 end 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x563f2eb40728 <col:20> Inherited
| `-OptimizeNoneAttr 0x563f2eb40780 <col:30> Inherited
|-CXXMethodDecl 0x563f2eb407c8 <line:154:5, col:64> col:55 cbegin 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x563f2eb40878 <col:20> Inherited
| `-OptimizeNoneAttr 0x563f2eb408d0 <col:30> Inherited
|-CXXMethodDecl 0x563f2eb40918 <line:155:5, col:62> col:55 cend 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x563f2eb409c8 <col:20> Inherited
| `-OptimizeNoneAttr 0x563f2eb40a20 <col:30> Inherited
|-CXXMethodDecl 0x563f2eb40a48 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x563f2eb40af8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x563f2eb40ba8 <line:159:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x563f2eb40d68 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x563f2eb40c58 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x563f2eb40cd0 <col:37, col:63> col:57 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x563f2eb40eb8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x563f2eb40e28 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x563f2eb41068 <line:163:5, col:65> col:43 operator[] 'TimerSet::heap_element &(Vector::size_type)'
| |-ParmVarDecl 0x563f2eb40f70 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x563f2eb41120 <col:20>
| `-OptimizeNoneAttr 0x563f2eb41178 <col:30>
|-CXXMethodDecl 0x563f2eb41298 <line:164:5, col:73> col:49 operator[] 'const TimerSet::heap_element &(Vector::size_type) const'
| |-ParmVarDecl 0x563f2eb411a0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x563f2eb41350 <col:20>
| `-OptimizeNoneAttr 0x563f2eb413a8 <col:30>
|-CXXMethodDecl 0x563f2eb41460 <line:165:5, col:29> col:15 at 'TimerSet::heap_element &(Vector::size_type)' inline
| `-ParmVarDecl 0x563f2eb413d0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x563f2eb415a8 <line:166:5, col:37> col:21 at 'const TimerSet::heap_element &(Vector::size_type) const' inline
| `-ParmVarDecl 0x563f2eb41518 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x563f2eb416d8 <line:167:5, col:21> col:15 front 'TimerSet::heap_element &()' inline
|-CXXMethodDecl 0x563f2eb41808 <line:168:5, col:29> col:21 front 'const TimerSet::heap_element &() const' inline
|-CXXMethodDecl 0x563f2eb418d8 <line:169:5, col:20> col:15 back 'TimerSet::heap_element &()' inline
|-CXXMethodDecl 0x563f2eb419a8 <line:170:5, col:28> col:21 back 'const TimerSet::heap_element &() const' inline
|-CXXMethodDecl 0x563f2eb41ae8 <line:172:5, col:39> col:15 used unchecked_at 'TimerSet::heap_element &(Vector::size_type)' inline
| `-ParmVarDecl 0x563f2eb41a58 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x563f2eb41c30 <line:173:5, col:47> col:21 unchecked_at 'const TimerSet::heap_element &(Vector::size_type) const' inline
| `-ParmVarDecl 0x563f2eb41ba0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x563f2eb41d78 <line:174:5, col:59> col:15 at_u 'TimerSet::heap_element &(Vector::size_type)' inline
| |-ParmVarDecl 0x563f2eb41ce8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x563f2eb41e30 <col:48> Inherited "" ""
|-CXXMethodDecl 0x563f2eb41f30 <line:175:5, col:71> col:21 at_u 'const TimerSet::heap_element &(Vector::size_type) const' inline
| |-ParmVarDecl 0x563f2eb41ea0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x563f2eb41fe8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x563f2eb420a8 <line:177:5, col:20> col:15 data 'TimerSet::heap_element *()' inline
|-CXXMethodDecl 0x563f2eb421a8 <line:178:5, col:28> col:21 data 'const TimerSet::heap_element *() const' inline
|-CXXMethodDecl 0x563f2eb42358 <line:180:5, col:48> col:17 push_back 'void (Vector<TimerSet::heap_element>::value_argument_type)' inline
| `-ParmVarDecl 0x563f2eb42268 <col:27, col:47> col:47 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-FunctionTemplateDecl 0x563f2eb42b18 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x563f2eb42410 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<TimerSet::heap_element>':'fast_argument<TimerSet::heap_element, true>'
| `-CXXMethodDecl 0x563f2eb42a78 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (TimerSet::heap_element &&)' inline
|   `-ParmVarDecl 0x563f2eb42978 <col:58, col:62> col:62 v 'TimerSet::heap_element &&'
|-CXXMethodDecl 0x563f2eb42bf8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x563f2eb42d48 <line:186:5, col:49> col:17 push_front 'void (Vector<TimerSet::heap_element>::value_argument_type)' inline
| `-ParmVarDecl 0x563f2eb42cb8 <col:28, col:48> col:48 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x563f2eb42e00 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x563f2eb43048 <line:189:5, col:62> col:21 insert 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x563f2eb42ec0 <col:28, col:37> col:37 it 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
| `-ParmVarDecl 0x563f2eb42f38 <col:41, col:61> col:61 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x563f2eb43208 <line:190:5, col:38> col:21 erase 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator)' inline
| `-ParmVarDecl 0x563f2eb43118 <col:27, col:36> col:36 it 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
|-CXXMethodDecl 0x563f2eb43458 <line:191:5, col:49> col:21 erase 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator, Vector<TimerSet::heap_element>::iterator)' inline
| |-ParmVarDecl 0x563f2eb432d0 <col:27, col:36> col:36 a 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
| `-ParmVarDecl 0x563f2eb43348 <col:39, col:48> col:48 b 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
|-CXXMethodDecl 0x563f2eb43518 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x563f2eb43778 <line:195:5, col:34> col:17 swap 'void (Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x563f2eb43680 <col:22, col:33> col:33 x 'Vector<TimerSet::heap_element> &'
`-CXXDestructorDecl 0x563f2eb43848 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x563f2eb43848

Layout: <CGRecordLayout
  LLVMType:%class.Vector.17 = type { %class.vector_memory.9 }
  NonVirtualBaseLLVMType:%class.Vector.17 = type { %class.vector_memory.9 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x563f2eb43990 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Timer *'
|-CXXRecordDecl 0x563f2eb43b98 prev 0x563f2eb43990 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x563f2eb44ce0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<Timer *>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x563f2eb44c90 'typename array_memory<Timer *>::type' sugar
|   `-TypedefType 0x563f2eb44c70 'conditional<true, sized_array_memory<8>, typed_array_memory<Timer *> >::type' sugar
|     |-Typedef 0x563f2eb44b20 'type'
|     `-SubstTemplateTypeParmType 0x563f2eb44940 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x563f2e77b200 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563f2e77b1a8 'T'
|       `-RecordType 0x563f2eb44490 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x563f2eb443a8 'sized_array_memory'
|-FieldDecl 0x563f2eb48930 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Timer *>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x563f2eb48980 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x563f2eb489b8 <line:118:5, col:15> col:15 value_type 'Timer *':'Timer *'
| `-SubstTemplateTypeParmType 0x563f2eb43c30 'Timer *' sugar
|   |-TemplateTypeParmType 0x563f2e7b3110 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x563f2e7b30b8 'T'
|   `-PointerType 0x563f2ea17ca0 'Timer *'
|     `-RecordType 0x563f2ea16df0 'Timer'
|       `-CXXRecord 0x563f2eb297e8 'Timer'
|-TypedefDecl 0x563f2eb48a78 <line:119:5, col:16> col:16 reference 'Timer *&'
| `-LValueReferenceType 0x563f2eb48a40 'Timer *&'
|   `-SubstTemplateTypeParmType 0x563f2eb43c30 'Timer *' sugar
|     |-TemplateTypeParmType 0x563f2e7b3110 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x563f2e7b30b8 'T'
|     `-PointerType 0x563f2ea17ca0 'Timer *'
|       `-RecordType 0x563f2ea16df0 'Timer'
|         `-CXXRecord 0x563f2eb297e8 'Timer'
|-TypedefDecl 0x563f2eb48b38 <line:120:5, col:22> col:22 const_reference 'Timer *const &'
| `-LValueReferenceType 0x563f2eb48b00 'Timer *const &'
|   `-QualType 0x563f2eb43c31 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x563f2eb43c30 'Timer *' sugar
|       |-TemplateTypeParmType 0x563f2e7b3110 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563f2e7b30b8 'T'
|       `-PointerType 0x563f2ea17ca0 'Timer *'
|         `-RecordType 0x563f2ea16df0 'Timer'
|           `-CXXRecord 0x563f2eb297e8 'Timer'
|-TypedefDecl 0x563f2eb48bf8 <line:121:5, col:16> col:16 pointer 'Timer **'
| `-PointerType 0x563f2eb48bc0 'Timer **'
|   `-SubstTemplateTypeParmType 0x563f2eb43c30 'Timer *' sugar
|     |-TemplateTypeParmType 0x563f2e7b3110 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x563f2e7b30b8 'T'
|     `-PointerType 0x563f2ea17ca0 'Timer *'
|       `-RecordType 0x563f2ea16df0 'Timer'
|         `-CXXRecord 0x563f2eb297e8 'Timer'
|-TypedefDecl 0x563f2eb48cb8 <line:122:5, col:22> col:22 const_pointer 'Timer *const *'
| `-PointerType 0x563f2eb48c80 'Timer *const *'
|   `-QualType 0x563f2eb43c31 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x563f2eb43c30 'Timer *' sugar
|       |-TemplateTypeParmType 0x563f2e7b3110 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563f2e7b30b8 'T'
|       `-PointerType 0x563f2ea17ca0 'Timer *'
|         `-RecordType 0x563f2ea16df0 'Timer'
|           `-CXXRecord 0x563f2eb297e8 'Timer'
|-TypedefDecl 0x563f2eb49890 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<Timer *>::type':'Timer *'
| `-ElaboratedType 0x563f2eb49840 'typename fast_argument<Timer *>::type' sugar
|   `-TypedefType 0x563f2eb49820 'fast_argument<Timer *, false>::type' sugar
|     |-Typedef 0x563f2eb497b0 'type'
|     `-SubstTemplateTypeParmType 0x563f2eb49570 'Timer *' sugar
|       |-TemplateTypeParmType 0x563f2e786000 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563f2e785fb0 'T'
|       `-PointerType 0x563f2ea17ca0 'Timer *'
|         `-RecordType 0x563f2ea16df0 'Timer'
|           `-CXXRecord 0x563f2eb297e8 'Timer'
|-TypedefDecl 0x563f2eb498f8 <line:126:5, col:22> col:22 const_access_type 'Timer *const &'
| `-LValueReferenceType 0x563f2eb48b00 'Timer *const &'
|   `-QualType 0x563f2eb43c31 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x563f2eb43c30 'Timer *' sugar
|       |-TemplateTypeParmType 0x563f2e7b3110 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563f2e7b30b8 'T'
|       `-PointerType 0x563f2ea17ca0 'Timer *'
|         `-RecordType 0x563f2ea16df0 'Timer'
|           `-CXXRecord 0x563f2eb297e8 'Timer'
|-TypedefDecl 0x563f2eb49950 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x563f2e4b1580 'int'
|-TypedefDecl 0x563f2eb499b8 <line:130:5, col:16> col:16 iterator 'Timer **'
| `-PointerType 0x563f2eb48bc0 'Timer **'
|   `-SubstTemplateTypeParmType 0x563f2eb43c30 'Timer *' sugar
|     |-TemplateTypeParmType 0x563f2e7b3110 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x563f2e7b30b8 'T'
|     `-PointerType 0x563f2ea17ca0 'Timer *'
|       `-RecordType 0x563f2ea16df0 'Timer'
|         `-CXXRecord 0x563f2eb297e8 'Timer'
|-TypedefDecl 0x563f2eb49a20 <line:131:5, col:22> col:22 const_iterator 'Timer *const *'
| `-PointerType 0x563f2eb48c80 'Timer *const *'
|   `-QualType 0x563f2eb43c31 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x563f2eb43c30 'Timer *' sugar
|       |-TemplateTypeParmType 0x563f2e7b3110 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563f2e7b30b8 'T'
|       `-PointerType 0x563f2ea17ca0 'Timer *'
|         `-RecordType 0x563f2ea16df0 'Timer'
|           `-CXXRecord 0x563f2eb297e8 'Timer'
|-EnumDecl 0x563f2eb49a78 <line:134:5> col:5
| `-EnumConstantDecl 0x563f2eb49b70 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Timer *>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x563f2eb49b50 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x563f2e7b4798 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x563f2e7b4770 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x563f2e7b4750 <col:40> 'int' 1
|-CXXConstructorDecl 0x563f2eb49bf8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x563f2eb49e88 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x563f2eb49cb0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x563f2eb49d50 <col:41, col:61> col:61 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXConstructorDecl 0x563f2eb4a148 <line:139:5, col:37> col:12 Vector 'void (const Vector<Timer *> &)' inline
| `-ParmVarDecl 0x563f2eb4a030 <col:19, col:36> col:36 x 'const Vector<Timer *> &'
|-CXXConstructorDecl 0x563f2eb4a408 <line:141:5, col:32> col:12 Vector 'void (Vector<Timer *> &&)' inline
| `-ParmVarDecl 0x563f2eb4a2f0 <col:19, col:31> col:31 x 'Vector<Timer *> &&'
|-CXXMethodDecl 0x563f2eb4a750 <line:144:5, col:51> col:23 operator= 'Vector<Timer *> &(const Vector<Timer *> &)' inline
| `-ParmVarDecl 0x563f2eb4a630 <col:33, col:50> col:50 x 'const Vector<Timer *> &'
|-CXXMethodDecl 0x563f2eb4aa60 <line:146:5, col:46> col:23 operator= 'Vector<Timer *> &(Vector<Timer *> &&)' inline
| `-ParmVarDecl 0x563f2eb4a940 <col:33, col:45> col:45 x 'Vector<Timer *> &&'
|-CXXMethodDecl 0x563f2eb4ad50 <line:148:5, col:70> col:23 assign 'Vector<Timer *> &(Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x563f2eb4ab98 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x563f2eb4ac10 <col:43, col:69> col:63 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x563f2eb4aea8 <line:150:5, col:55> col:49 begin 'Vector<Timer *>::iterator ()'
| |-NoInlineAttr 0x563f2eb4af88 <col:20> Inherited
| `-OptimizeNoneAttr 0x563f2eb4afe0 <col:30> Inherited
|-CXXMethodDecl 0x563f2eb4b028 <line:151:5, col:53> col:49 end 'Vector<Timer *>::iterator ()'
| |-NoInlineAttr 0x563f2eb4b0d8 <col:20> Inherited
| `-OptimizeNoneAttr 0x563f2eb4b130 <col:30> Inherited
|-CXXMethodDecl 0x563f2eb4b1f8 <line:152:5, col:63> col:55 begin 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x563f2eb4b2a8 <col:20> Inherited
| `-OptimizeNoneAttr 0x563f2eb4b300 <col:30> Inherited
|-CXXMethodDecl 0x563f2eb4b348 <line:153:5, col:61> col:55 end 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x563f2eb4b3f8 <col:20> Inherited
| `-OptimizeNoneAttr 0x563f2eb4b450 <col:30> Inherited
|-CXXMethodDecl 0x563f2eb4b498 <line:154:5, col:64> col:55 cbegin 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x563f2eb4b548 <col:20> Inherited
| `-OptimizeNoneAttr 0x563f2eb4b5a0 <col:30> Inherited
|-CXXMethodDecl 0x563f2eb4b5e8 <line:155:5, col:62> col:55 cend 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x563f2eb4b698 <col:20> Inherited
| `-OptimizeNoneAttr 0x563f2eb4b6f0 <col:30> Inherited
|-CXXMethodDecl 0x563f2eb4b718 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x563f2eb4b7c8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x563f2eb4b878 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x563f2eb4ba38 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x563f2eb4b928 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x563f2eb4b9a0 <col:37, col:63> col:57 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x563f2eb4bb88 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x563f2eb4baf8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x563f2eb4bd38 <line:163:5, col:65> col:43 operator[] 'Timer *&(Vector::size_type)'
| |-ParmVarDecl 0x563f2eb4bc40 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x563f2eb4bdf0 <col:20>
| `-OptimizeNoneAttr 0x563f2eb4be48 <col:30>
|-CXXMethodDecl 0x563f2eb4bf68 <line:164:5, col:73> col:49 operator[] 'Timer *const &(Vector::size_type) const'
| |-ParmVarDecl 0x563f2eb4be70 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x563f2eb4c020 <col:20>
| `-OptimizeNoneAttr 0x563f2eb4c078 <col:30>
|-CXXMethodDecl 0x563f2eb4c130 <line:165:5, col:29> col:15 at 'Timer *&(Vector::size_type)' inline
| `-ParmVarDecl 0x563f2eb4c0a0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x563f2eb4c278 <line:166:5, col:37> col:21 at 'Timer *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x563f2eb4c1e8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x563f2eb4c3a8 <line:167:5, col:21> col:15 front 'Timer *&()' inline
|-CXXMethodDecl 0x563f2eb4c4d8 <line:168:5, col:29> col:21 front 'Timer *const &() const' inline
|-CXXMethodDecl 0x563f2eb4c5a8 <line:169:5, col:20> col:15 back 'Timer *&()' inline
|-CXXMethodDecl 0x563f2eb4c678 <line:170:5, col:28> col:21 back 'Timer *const &() const' inline
|-CXXMethodDecl 0x563f2eb4c7b8 <line:172:5, col:39> col:15 unchecked_at 'Timer *&(Vector::size_type)' inline
| `-ParmVarDecl 0x563f2eb4c728 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x563f2eb4c900 <line:173:5, col:47> col:21 unchecked_at 'Timer *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x563f2eb4c870 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x563f2eb4ca48 <line:174:5, col:59> col:15 at_u 'Timer *&(Vector::size_type)' inline
| |-ParmVarDecl 0x563f2eb4c9b8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x563f2eb4cb00 <col:48> Inherited "" ""
|-CXXMethodDecl 0x563f2eb4cc00 <line:175:5, col:71> col:21 at_u 'Timer *const &(Vector::size_type) const' inline
| |-ParmVarDecl 0x563f2eb4cb70 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x563f2eb4ccb8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x563f2eb4cd78 <line:177:5, col:20> col:15 data 'Timer **()' inline
|-CXXMethodDecl 0x563f2eb4ce78 <line:178:5, col:28> col:21 data 'Timer *const *() const' inline
|-CXXMethodDecl 0x563f2eb4cff8 <line:180:5, col:48> col:17 push_back 'void (Vector<Timer *>::value_argument_type)' inline
| `-ParmVarDecl 0x563f2eb4cf38 <col:27, col:47> col:47 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-FunctionTemplateDecl 0x563f2eb4f7d8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x563f2eb4d0b0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Timer *>':'fast_argument<Timer *, false>'
| `-CXXMethodDecl 0x563f2eb4f738 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Timer *&&)' inline
|   `-ParmVarDecl 0x563f2eb4f638 <col:58, col:62> col:62 v 'Timer *&&'
|-CXXMethodDecl 0x563f2eb4f8b8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x563f2eb4fa08 <line:186:5, col:49> col:17 push_front 'void (Vector<Timer *>::value_argument_type)' inline
| `-ParmVarDecl 0x563f2eb4f978 <col:28, col:48> col:48 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x563f2eb4fac0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x563f2eb4fd08 <line:189:5, col:62> col:21 insert 'Vector<Timer *>::iterator (Vector<Timer *>::iterator, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x563f2eb4fb80 <col:28, col:37> col:37 it 'Vector<Timer *>::iterator':'Timer **'
| `-ParmVarDecl 0x563f2eb4fbf8 <col:41, col:61> col:61 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x563f2eb4fec8 <line:190:5, col:38> col:21 erase 'Vector<Timer *>::iterator (Vector<Timer *>::iterator)' inline
| `-ParmVarDecl 0x563f2eb4fdd8 <col:27, col:36> col:36 it 'Vector<Timer *>::iterator':'Timer **'
|-CXXMethodDecl 0x563f2eb50118 <line:191:5, col:49> col:21 erase 'Vector<Timer *>::iterator (Vector<Timer *>::iterator, Vector<Timer *>::iterator)' inline
| |-ParmVarDecl 0x563f2eb4ff90 <col:27, col:36> col:36 a 'Vector<Timer *>::iterator':'Timer **'
| `-ParmVarDecl 0x563f2eb50008 <col:39, col:48> col:48 b 'Vector<Timer *>::iterator':'Timer **'
|-CXXMethodDecl 0x563f2eb501d8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x563f2eb50438 <line:195:5, col:34> col:17 swap 'void (Vector<Timer *> &)' inline
| `-ParmVarDecl 0x563f2eb50340 <col:22, col:33> col:33 x 'Vector<Timer *> &'
`-CXXDestructorDecl 0x563f2eb50508 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x563f2eb50508

Layout: <CGRecordLayout
  LLVMType:%class.Vector.18 = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector.18 = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563f2eb26220 <../dummy_inc/click/sync.hh:194:1, line:211:1> line:194:7 referenced class SimpleSpinlock definition
|-DefinitionData empty standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x563f2eb26338 <col:1, col:7> col:7 implicit referenced class SimpleSpinlock
|-AccessSpecDecl 0x563f2eb263c8 <col:24, col:30> col:24 public
|-CXXConstructorDecl 0x563f2eb26450 <line:196:5, col:27> col:12 SimpleSpinlock 'void ()' inline
|-CXXDestructorDecl 0x563f2eb26540 <line:197:5, col:28> col:12 ~SimpleSpinlock 'void () noexcept' inline
|-CXXMethodDecl 0x563f2eb26640 <line:199:5, col:25> col:17 acquire 'void ()' inline
|-CXXMethodDecl 0x563f2eb26700 <line:200:5, col:25> col:17 release 'void ()' inline
|-CXXMethodDecl 0x563f2eb267c0 <line:201:5, col:25> col:17 attempt 'bool ()' inline
|-CXXConstructorDecl 0x563f2eb268e8 <line:194:7> col:7 implicit constexpr SimpleSpinlock 'void (const SimpleSpinlock &)' inline default trivial noexcept-unevaluated 0x563f2eb268e8
| `-ParmVarDecl 0x563f2eb269f8 <col:7> col:7 'const SimpleSpinlock &'
`-CXXMethodDecl 0x563f2eb512b8 <col:7> col:7 implicit operator= 'SimpleSpinlock &(const SimpleSpinlock &)' inline default trivial noexcept-unevaluated 0x563f2eb512b8
  `-ParmVarDecl 0x563f2eb513c8 <col:7> col:7 'const SimpleSpinlock &'

Layout: <CGRecordLayout
  LLVMType:%class.SimpleSpinlock = type { i8 }
  NonVirtualBaseLLVMType:%class.SimpleSpinlock.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563f2eb36ed0 prev 0x563f2eb2da38 <../dummy_inc/click/timerset.hh:12:1, line:90:1> line:12:7 referenced class TimerSet definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x563f2eb36fc8 <col:1, col:7> col:7 implicit referenced class TimerSet
|-AccessSpecDecl 0x563f2eb37058 <col:18, col:24> col:18 public
|-CXXConstructorDecl 0x563f2eb370e0 <line:14:5, col:14> col:5 TimerSet 'void ()'
|-CXXMethodDecl 0x563f2eb371d8 <line:16:5, col:67> col:15 timer_expiry_steady 'Timestamp () const'
| `-CompoundStmt 0x563f2eb51730 <col:43, col:67>
|   `-ReturnStmt 0x563f2eb51720 <col:45, col:52>
|     `-CXXConstructExpr 0x563f2eb516f0 <col:52> 'Timestamp' 'void (const Timestamp &) noexcept'
|       `-MemberExpr 0x563f2eb516c0 <col:52> 'const Timestamp' lvalue ->_timer_expiry 0x563f2eb389c0
|         `-CXXThisExpr 0x563f2eb516b0 <col:52> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x563f2eb37298 <line:17:5, col:53> col:22 timer_expiry_steady_adjusted 'Timestamp () const' inline
|-CXXMethodDecl 0x563f2eb374a0 <line:19:5, col:64> col:16 next_timer_delay 'int (bool, Timestamp &) const' inline
| |-ParmVarDecl 0x563f2eb37348 <col:33, col:38> col:38 more_tasks 'bool'
| `-ParmVarDecl 0x563f2eb373c0 <col:50, col:61> col:61 t 'Timestamp &'
|-CXXMethodDecl 0x563f2eb37598 <line:22:5, col:23> col:12 next_timer 'Timer *()'
|-CXXMethodDecl 0x563f2eb37660 <line:24:5, col:67> col:14 max_timer_stride 'unsigned int () const'
| `-CompoundStmt 0x563f2eb517b0 <col:39, col:67>
|   `-ReturnStmt 0x563f2eb517a0 <col:41, col:48>
|     `-ImplicitCastExpr 0x563f2eb51788 <col:48> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x563f2eb51758 <col:48> 'const unsigned int' lvalue ->_max_timer_stride 0x563f2eb38aa8
|         `-CXXThisExpr 0x563f2eb51748 <col:48> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x563f2eb37728 <line:25:5, col:59> col:14 timer_stride 'unsigned int () const'
| `-CompoundStmt 0x563f2eb51830 <col:35, col:59>
|   `-ReturnStmt 0x563f2eb51820 <col:37, col:44>
|     `-ImplicitCastExpr 0x563f2eb51808 <col:44> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x563f2eb517d8 <col:44> 'const unsigned int' lvalue ->_timer_stride 0x563f2eb38b10
|         `-CXXThisExpr 0x563f2eb517c8 <col:44> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x563f2eb37870 <line:26:5, col:52> col:10 set_max_timer_stride 'void (unsigned int)'
| `-ParmVarDecl 0x563f2eb377e0 <col:31, col:40> col:40 timer_stride 'unsigned int'
|-CXXMethodDecl 0x563f2eb379b8 <line:28:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x563f2eb37928 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x563f2eb37bb8 <line:30:5, col:57> col:10 run_timers 'void (RouterThread *, Master *)'
| |-ParmVarDecl 0x563f2eb37a70 <col:21, col:35> col:35 thread 'RouterThread *'
| `-ParmVarDecl 0x563f2eb37ae8 <col:43, col:51> col:51 master 'Master *'
|-CXXMethodDecl 0x563f2eb37c88 <line:32:5, col:23> col:17 fence 'void ()' inline
|-AccessSpecDecl 0x563f2eb37d28 <line:34:3, col:10> col:3 private
|-CXXRecordDecl 0x563f2eb37d50 <line:36:5, line:45:5> line:36:12 referenced struct heap_element definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x563f2eb37e68 <col:5, col:12> col:12 implicit referenced struct heap_element
| |-FieldDecl 0x563f2eb37f08 <line:37:2, col:12> col:12 referenced expiry_s 'Timestamp'
| |-FieldDecl 0x563f2eb37f68 <line:38:2, col:9> col:9 referenced t 'Timer *'
| `-CXXConstructorDecl 0x563f2eb38098 <line:42:2, line:44:2> line:42:2 heap_element 'void (Timer *)'
|   |-ParmVarDecl 0x563f2eb37fc8 <col:15, col:22> col:22 used t_ 'Timer *'
|   |-CXXCtorInitializer Field 0x563f2eb37f08 'expiry_s' 'Timestamp'
|   | `-CXXConstructExpr 0x563f2eb51908 <line:43:8, col:36> 'Timestamp' 'void (const Timestamp &) noexcept'
|   |   `-CXXMemberCallExpr 0x563f2eb518b0 <col:17, col:35> 'const Timestamp' lvalue
|   |     `-MemberExpr 0x563f2eb51880 <col:17, col:21> '<bound member function type>' ->expiry_steady 0x563f2eb2ae58
|   |       `-ImplicitCastExpr 0x563f2eb518d0 <col:17> 'const Timer *' <NoOp>
|   |         `-ImplicitCastExpr 0x563f2eb51868 <col:17> 'Timer *' <LValueToRValue>
|   |           `-DeclRefExpr 0x563f2eb51848 <col:17> 'Timer *' lvalue ParmVar 0x563f2eb37fc8 't_' 'Timer *'
|   |-CXXCtorInitializer Field 0x563f2eb37f68 't' 'Timer *'
|   | `-ImplicitCastExpr 0x563f2eb519a0 <col:41> 'Timer *' <LValueToRValue>
|   |   `-DeclRefExpr 0x563f2eb51960 <col:41> 'Timer *' lvalue ParmVar 0x563f2eb37fc8 't_' 'Timer *'
|   `-CompoundStmt 0x563f2eb519f0 <col:45, line:44:2>
|-CXXRecordDecl 0x563f2eb38160 <line:46:5, line:50:5> line:46:12 struct heap_less definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x563f2eb38278 <col:5, col:12> col:12 implicit struct heap_less
| `-CXXMethodDecl 0x563f2eb384c8 <line:47:2, line:49:2> line:47:14 operator() 'bool (const TimerSet::heap_element &, const TimerSet::heap_element &)' inline
|   |-ParmVarDecl 0x563f2eb38348 <col:25, col:45> col:45 used a 'const TimerSet::heap_element &'
|   |-ParmVarDecl 0x563f2eb383c0 <col:48, col:68> col:68 used b 'const TimerSet::heap_element &'
|   `-CompoundStmt 0x563f2eb51b20 <col:71, line:49:2>
|     `-ReturnStmt 0x563f2eb51b10 <line:48:6, col:28>
|       `-CXXOperatorCallExpr 0x563f2eb51ad8 <col:13, col:28> 'bool'
|         |-ImplicitCastExpr 0x563f2eb51ac0 <col:24> 'bool (*)(const Timestamp &, const Timestamp &)' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x563f2eb51aa0 <col:24> 'bool (const Timestamp &, const Timestamp &)' lvalue Function 0x563f2e9d5008 'operator<' 'bool (const Timestamp &, const Timestamp &)'
|         |-MemberExpr 0x563f2eb51a20 <col:13, col:15> 'const Timestamp' lvalue .expiry_s 0x563f2eb37f08
|         | `-DeclRefExpr 0x563f2eb51a00 <col:13> 'const TimerSet::heap_element' lvalue ParmVar 0x563f2eb38348 'a' 'const TimerSet::heap_element &'
|         `-MemberExpr 0x563f2eb51a70 <col:26, col:28> 'const Timestamp' lvalue .expiry_s 0x563f2eb37f08
|           `-DeclRefExpr 0x563f2eb51a50 <col:26> 'const TimerSet::heap_element' lvalue ParmVar 0x563f2eb383c0 'b' 'const TimerSet::heap_element &'
|-CXXRecordDecl 0x563f2eb38590 <line:51:5, line:55:5> line:51:12 struct heap_place definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x563f2eb386a8 <col:5, col:12> col:12 implicit struct heap_place
| `-CXXMethodDecl 0x563f2eb388c8 <line:52:2, line:54:2> line:52:14 operator() 'void (TimerSet::heap_element *, TimerSet::heap_element *)' inline
|   |-ParmVarDecl 0x563f2eb38748 <col:25, col:39> col:39 used begin 'TimerSet::heap_element *'
|   |-ParmVarDecl 0x563f2eb387c0 <col:46, col:60> col:60 used t 'TimerSet::heap_element *'
|   `-CompoundStmt 0x563f2eb51d28 <col:63, line:54:2>
|     `-BinaryOperator 0x563f2eb51d08 <line:53:6, col:39> 'int' lvalue '='
|       |-MemberExpr 0x563f2eb51bb8 <col:6, col:12> 'int' lvalue ->_schedpos1 0x563f2eb2ce98
|       | `-ImplicitCastExpr 0x563f2eb51ba0 <col:6, col:9> 'Timer *' <LValueToRValue>
|       |   `-MemberExpr 0x563f2eb51b70 <col:6, col:9> 'Timer *' lvalue ->t 0x563f2eb37f68
|       |     `-ImplicitCastExpr 0x563f2eb51b58 <col:6> 'TimerSet::heap_element *' <LValueToRValue>
|       |       `-DeclRefExpr 0x563f2eb51b38 <col:6> 'TimerSet::heap_element *' lvalue ParmVar 0x563f2eb387c0 't' 'TimerSet::heap_element *'
|       `-ImplicitCastExpr 0x563f2eb51cf0 <col:25, col:39> 'int' <IntegralCast>
|         `-BinaryOperator 0x563f2eb51cd0 <col:25, col:39> 'long' '+'
|           |-ParenExpr 0x563f2eb51c78 <col:25, col:35> 'long'
|           | `-BinaryOperator 0x563f2eb51c58 <col:26, col:30> 'long' '-'
|           |   |-ImplicitCastExpr 0x563f2eb51c28 <col:26> 'TimerSet::heap_element *' <LValueToRValue>
|           |   | `-DeclRefExpr 0x563f2eb51be8 <col:26> 'TimerSet::heap_element *' lvalue ParmVar 0x563f2eb387c0 't' 'TimerSet::heap_element *'
|           |   `-ImplicitCastExpr 0x563f2eb51c40 <col:30> 'TimerSet::heap_element *' <LValueToRValue>
|           |     `-DeclRefExpr 0x563f2eb51c08 <col:30> 'TimerSet::heap_element *' lvalue ParmVar 0x563f2eb38748 'begin' 'TimerSet::heap_element *'
|           `-ImplicitCastExpr 0x563f2eb51cb8 <col:39> 'long' <IntegralCast>
|             `-IntegerLiteral 0x563f2eb51c98 <col:39> 'int' 1
|-FieldDecl 0x563f2eb389c0 <line:58:5, col:15> col:15 referenced _timer_expiry 'Timestamp'
| `-AlignedAttr 0x563f2eb38a30 <col:44, col:53> aligned
|   `-ConstantExpr 0x563f2eb38a10 <col:52> 'int' Int: 8
|     `-IntegerLiteral 0x563f2eb38990 <col:52> 'int' 8
|-FieldDecl 0x563f2eb38aa8 <line:60:5, col:14> col:14 referenced _max_timer_stride 'unsigned int'
|-FieldDecl 0x563f2eb38b10 <line:61:5, col:14> col:14 referenced _timer_stride 'unsigned int'
|-FieldDecl 0x563f2eb38b78 <line:62:5, col:14> col:14 _timer_count 'unsigned int'
|-FieldDecl 0x563f2eb43930 <line:63:5, col:26> col:26 referenced _timer_heap 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>'
|-FieldDecl 0x563f2eb505f0 <line:64:5, col:21> col:21 _timer_runchunk 'Vector<Timer *>':'Vector<Timer *>'
|-FieldDecl 0x563f2eb50650 <line:65:5, col:20> col:20 _timer_lock 'SimpleSpinlock'
|-FieldDecl 0x563f2eb506b0 <line:71:5, col:15> col:15 _timer_check 'Timestamp'
|-FieldDecl 0x563f2eb50710 <line:72:5, col:14> col:14 _timer_check_reports 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x563f2eb50800 <line:74:5, col:38> col:17 run_one_timer 'void (Timer *)' inline
| `-ParmVarDecl 0x563f2eb50770 <col:31, col:37> col:38 'Timer *'
|-CXXMethodDecl 0x563f2eb508c8 <line:76:5, line:81:5> line:76:10 set_timer_expiry 'void ()'
| `-CompoundStmt 0x563f2eb52180 <col:29, line:81:5>
|   `-IfStmt 0x563f2eb52158 <line:77:2, line:80:32> has_else
|     |-ImplicitCastExpr 0x563f2eb51e10 <line:77:6, col:23> 'bool' <IntegralToBoolean>
|     | `-CXXMemberCallExpr 0x563f2eb51db0 <col:6, col:23> 'Vector::size_type':'int'
|     |   `-MemberExpr 0x563f2eb51d80 <col:6, col:18> '<bound member function type>' .size 0x563f2eb40a48
|     |     `-ImplicitCastExpr 0x563f2eb51df8 <col:6> 'const Vector<TimerSet::heap_element>' lvalue <NoOp>
|     |       `-MemberExpr 0x563f2eb51d50 <col:6> 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>' lvalue ->_timer_heap 0x563f2eb43930
|     |         `-CXXThisExpr 0x563f2eb51d40 <col:6> 'TimerSet *' implicit this
|     |-CXXOperatorCallExpr 0x563f2eb52000 <line:78:6, col:50> 'Timestamp' lvalue
|     | |-ImplicitCastExpr 0x563f2eb51fe8 <col:20> 'Timestamp &(*)(const Timestamp &) noexcept' <FunctionToPointerDecay>
|     | | `-DeclRefExpr 0x563f2eb51fc8 <col:20> 'Timestamp &(const Timestamp &) noexcept' lvalue CXXMethod 0x563f2e6be878 'operator=' 'Timestamp &(const Timestamp &) noexcept'
|     | |-MemberExpr 0x563f2eb51e38 <col:6> 'Timestamp' lvalue ->_timer_expiry 0x563f2eb389c0
|     | | `-CXXThisExpr 0x563f2eb51e28 <col:6> 'TimerSet *' implicit this
|     | `-ImplicitCastExpr 0x563f2eb51fb0 <col:22, col:50> 'const Timestamp' lvalue <NoOp>
|     |   `-MemberExpr 0x563f2eb51f80 <col:22, col:50> 'Timestamp' lvalue .expiry_s 0x563f2eb37f08
|     |     `-CXXMemberCallExpr 0x563f2eb51f58 <col:22, col:48> 'TimerSet::heap_element':'TimerSet::heap_element' lvalue
|     |       |-MemberExpr 0x563f2eb51f28 <col:22, col:34> '<bound member function type>' .unchecked_at 0x563f2eb41ae8
|     |       | `-MemberExpr 0x563f2eb51e78 <col:22> 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>' lvalue ->_timer_heap 0x563f2eb43930
|     |       |   `-CXXThisExpr 0x563f2eb51e68 <col:22> 'TimerSet *' implicit this
|     |       `-IntegerLiteral 0x563f2eb51f08 <col:47> 'int' 0
|     `-ExprWithCleanups 0x563f2eb52140 <line:80:6, col:32> 'Timestamp' lvalue
|       `-CXXOperatorCallExpr 0x563f2eb52108 <col:6, col:32> 'Timestamp' lvalue
|         |-ImplicitCastExpr 0x563f2eb520f0 <col:20> 'Timestamp &(*)(Timestamp &&) noexcept' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x563f2eb520d0 <col:20> 'Timestamp &(Timestamp &&) noexcept' lvalue CXXMethod 0x563f2e6bed28 'operator=' 'Timestamp &(Timestamp &&) noexcept'
|         |-MemberExpr 0x563f2eb52048 <col:6> 'Timestamp' lvalue ->_timer_expiry 0x563f2eb389c0
|         | `-CXXThisExpr 0x563f2eb52038 <col:6> 'TimerSet *' implicit this
|         `-MaterializeTemporaryExpr 0x563f2eb520b8 <col:22, col:32> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x563f2eb52088 <col:22, col:32> 'Timestamp' 'void ()'
|-CXXMethodDecl 0x563f2eb50a08 <line:82:5, col:37> col:10 check_timer_expiry 'void (Timer *)'
| `-ParmVarDecl 0x563f2eb50978 <col:29, col:36> col:36 t 'Timer *'
|-CXXMethodDecl 0x563f2eb50ad0 <line:84:5, col:29> col:17 used lock_timers 'void ()' inline
|-CXXMethodDecl 0x563f2eb50b90 <line:85:5, col:37> col:17 attempt_lock_timers 'bool ()' inline
|-CXXMethodDecl 0x563f2eb50c50 <line:86:5, col:31> col:17 used unlock_timers 'void ()' inline
|-FriendDecl 0x563f2eb50d40 <line:88:5, col:18> col:12 'class Timer':'Timer'
|-CXXConstructorDecl 0x563f2eb50da8 <line:12:7> col:7 implicit TimerSet 'void (const TimerSet &)' inline default noexcept-unevaluated 0x563f2eb50da8
| `-ParmVarDecl 0x563f2eb50eb8 <col:7> col:7 'const TimerSet &'
|-CXXConstructorDecl 0x563f2eb50f58 <col:7> col:7 implicit TimerSet 'void (TimerSet &&)' inline default noexcept-unevaluated 0x563f2eb50f58
| `-ParmVarDecl 0x563f2eb51068 <col:7> col:7 'TimerSet &&'
|-CXXMethodDecl 0x563f2eb51108 <col:7> col:7 implicit operator= 'TimerSet &(const TimerSet &)' inline default noexcept-unevaluated 0x563f2eb51108
| `-ParmVarDecl 0x563f2eb51218 <col:7> col:7 'const TimerSet &'
|-CXXMethodDecl 0x563f2eb51438 <col:7> col:7 implicit operator= 'TimerSet &(TimerSet &&)' inline default noexcept-unevaluated 0x563f2eb51438
| `-ParmVarDecl 0x563f2eb51548 <col:7> col:7 'TimerSet &&'
`-CXXDestructorDecl 0x563f2eb515d0 <col:7> col:7 implicit ~TimerSet 'void ()' inline default noexcept-unevaluated 0x563f2eb515d0

Layout: <CGRecordLayout
  LLVMType:%class.TimerSet = type <{ %class.Timestamp, i32, i32, i32, [4 x i8], %class.Vector.17, %class.Vector.18, %class.SimpleSpinlock, [7 x i8], %class.Timestamp, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.TimerSet.base = type <{ %class.Timestamp, i32, i32, i32, [4 x i8], %class.Vector.17, %class.Vector.18, %class.SimpleSpinlock, [7 x i8], %class.Timestamp, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x563f2eb767e8 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'pollfd'
|-CXXRecordDecl 0x563f2eb769f8 prev 0x563f2eb767e8 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x563f2e8c83e0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<pollfd>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x563f2e8c8390 'typename array_memory<pollfd>::type' sugar
|   `-TypedefType 0x563f2e8c8370 'conditional<true, sized_array_memory<8>, typed_array_memory<pollfd> >::type' sugar
|     |-Typedef 0x563f2eb77910 'type'
|     `-SubstTemplateTypeParmType 0x563f2eb44940 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x563f2e77b200 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563f2e77b1a8 'T'
|       `-RecordType 0x563f2eb44490 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x563f2eb443a8 'sized_array_memory'
|-FieldDecl 0x563f2e8c84e0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<pollfd>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x563f2e8c8530 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x563f2e8c8568 <line:118:5, col:15> col:15 value_type 'pollfd':'pollfd'
| `-SubstTemplateTypeParmType 0x563f2eb76a90 'pollfd' sugar
|   |-TemplateTypeParmType 0x563f2e7b3110 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x563f2e7b30b8 'T'
|   `-RecordType 0x563f2eb748a0 'pollfd'
|     `-CXXRecord 0x563f2eb74810 'pollfd'
|-TypedefDecl 0x563f2e8c8628 <line:119:5, col:16> col:16 reference 'pollfd &'
| `-LValueReferenceType 0x563f2e8c85f0 'pollfd &'
|   `-SubstTemplateTypeParmType 0x563f2eb76a90 'pollfd' sugar
|     |-TemplateTypeParmType 0x563f2e7b3110 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x563f2e7b30b8 'T'
|     `-RecordType 0x563f2eb748a0 'pollfd'
|       `-CXXRecord 0x563f2eb74810 'pollfd'
|-TypedefDecl 0x563f2e8c86e8 <line:120:5, col:22> col:22 const_reference 'const pollfd &'
| `-LValueReferenceType 0x563f2e8c86b0 'const pollfd &'
|   `-QualType 0x563f2eb76a91 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x563f2eb76a90 'pollfd' sugar
|       |-TemplateTypeParmType 0x563f2e7b3110 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563f2e7b30b8 'T'
|       `-RecordType 0x563f2eb748a0 'pollfd'
|         `-CXXRecord 0x563f2eb74810 'pollfd'
|-TypedefDecl 0x563f2e8c8778 <line:121:5, col:16> col:16 pointer 'pollfd *'
| `-PointerType 0x563f2e8c8740 'pollfd *'
|   `-SubstTemplateTypeParmType 0x563f2eb76a90 'pollfd' sugar
|     |-TemplateTypeParmType 0x563f2e7b3110 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x563f2e7b30b8 'T'
|     `-RecordType 0x563f2eb748a0 'pollfd'
|       `-CXXRecord 0x563f2eb74810 'pollfd'
|-TypedefDecl 0x563f2e8c8838 <line:122:5, col:22> col:22 const_pointer 'const pollfd *'
| `-PointerType 0x563f2e8c8800 'const pollfd *'
|   `-QualType 0x563f2eb76a91 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x563f2eb76a90 'pollfd' sugar
|       |-TemplateTypeParmType 0x563f2e7b3110 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563f2e7b30b8 'T'
|       `-RecordType 0x563f2eb748a0 'pollfd'
|         `-CXXRecord 0x563f2eb74810 'pollfd'
|-TypedefDecl 0x563f2e8c9410 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<pollfd>::type':'pollfd'
| `-ElaboratedType 0x563f2e8c93c0 'typename fast_argument<pollfd>::type' sugar
|   `-TypedefType 0x563f2e8c93a0 'fast_argument<pollfd, false>::type' sugar
|     |-Typedef 0x563f2e8c9330 'type'
|     `-SubstTemplateTypeParmType 0x563f2e8c90f0 'pollfd' sugar
|       |-TemplateTypeParmType 0x563f2e786000 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563f2e785fb0 'T'
|       `-RecordType 0x563f2eb748a0 'pollfd'
|         `-CXXRecord 0x563f2eb74810 'pollfd'
|-TypedefDecl 0x563f2e8c9478 <line:126:5, col:22> col:22 const_access_type 'const pollfd &'
| `-LValueReferenceType 0x563f2e8c86b0 'const pollfd &'
|   `-QualType 0x563f2eb76a91 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x563f2eb76a90 'pollfd' sugar
|       |-TemplateTypeParmType 0x563f2e7b3110 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563f2e7b30b8 'T'
|       `-RecordType 0x563f2eb748a0 'pollfd'
|         `-CXXRecord 0x563f2eb74810 'pollfd'
|-TypedefDecl 0x563f2e8c94d0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x563f2e4b1580 'int'
|-TypedefDecl 0x563f2e8c9538 <line:130:5, col:16> col:16 iterator 'pollfd *'
| `-PointerType 0x563f2e8c8740 'pollfd *'
|   `-SubstTemplateTypeParmType 0x563f2eb76a90 'pollfd' sugar
|     |-TemplateTypeParmType 0x563f2e7b3110 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x563f2e7b30b8 'T'
|     `-RecordType 0x563f2eb748a0 'pollfd'
|       `-CXXRecord 0x563f2eb74810 'pollfd'
|-TypedefDecl 0x563f2e8c95a0 <line:131:5, col:22> col:22 const_iterator 'const pollfd *'
| `-PointerType 0x563f2e8c8800 'const pollfd *'
|   `-QualType 0x563f2eb76a91 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x563f2eb76a90 'pollfd' sugar
|       |-TemplateTypeParmType 0x563f2e7b3110 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563f2e7b30b8 'T'
|       `-RecordType 0x563f2eb748a0 'pollfd'
|         `-CXXRecord 0x563f2eb74810 'pollfd'
|-EnumDecl 0x563f2e8c95f8 <line:134:5> col:5
| `-EnumConstantDecl 0x563f2e8c96f0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<pollfd>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x563f2e8c96d0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x563f2e7b4798 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x563f2e7b4770 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x563f2e7b4750 <col:40> 'int' 1
|-CXXConstructorDecl 0x563f2e8c9778 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x563f2e8c9a08 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x563f2e8c9830 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x563f2e8c98d0 <col:41, col:61> col:61 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXConstructorDecl 0x563f2e8c9cc8 <line:139:5, col:37> col:12 Vector 'void (const Vector<pollfd> &)' inline
| `-ParmVarDecl 0x563f2e8c9bb0 <col:19, col:36> col:36 x 'const Vector<pollfd> &'
|-CXXConstructorDecl 0x563f2e8c9f88 <line:141:5, col:32> col:12 Vector 'void (Vector<pollfd> &&)' inline
| `-ParmVarDecl 0x563f2e8c9e70 <col:19, col:31> col:31 x 'Vector<pollfd> &&'
|-CXXMethodDecl 0x563f2e8ca2d0 <line:144:5, col:51> col:23 operator= 'Vector<pollfd> &(const Vector<pollfd> &)' inline
| `-ParmVarDecl 0x563f2e8ca1b0 <col:33, col:50> col:50 x 'const Vector<pollfd> &'
|-CXXMethodDecl 0x563f2e8ca5e0 <line:146:5, col:46> col:23 operator= 'Vector<pollfd> &(Vector<pollfd> &&)' inline
| `-ParmVarDecl 0x563f2e8ca4c0 <col:33, col:45> col:45 x 'Vector<pollfd> &&'
|-CXXMethodDecl 0x563f2e8ca8d0 <line:148:5, col:70> col:23 assign 'Vector<pollfd> &(Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x563f2e8ca718 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x563f2e8ca790 <col:43, col:69> col:63 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x563f2e8caa28 <line:150:5, col:55> col:49 begin 'Vector<pollfd>::iterator ()'
| |-NoInlineAttr 0x563f2e8cab08 <col:20> Inherited
| `-OptimizeNoneAttr 0x563f2e8cab60 <col:30> Inherited
|-CXXMethodDecl 0x563f2e8caba8 <line:151:5, col:53> col:49 end 'Vector<pollfd>::iterator ()'
| |-NoInlineAttr 0x563f2e8cac58 <col:20> Inherited
| `-OptimizeNoneAttr 0x563f2e8cacb0 <col:30> Inherited
|-CXXMethodDecl 0x563f2e8cad78 <line:152:5, col:63> col:55 begin 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x563f2e8cae28 <col:20> Inherited
| `-OptimizeNoneAttr 0x563f2e8cae80 <col:30> Inherited
|-CXXMethodDecl 0x563f2e8caec8 <line:153:5, col:61> col:55 end 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x563f2e8caf78 <col:20> Inherited
| `-OptimizeNoneAttr 0x563f2e8cafd0 <col:30> Inherited
|-CXXMethodDecl 0x563f2e8cb018 <line:154:5, col:64> col:55 cbegin 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x563f2e8cb0c8 <col:20> Inherited
| `-OptimizeNoneAttr 0x563f2e8cb120 <col:30> Inherited
|-CXXMethodDecl 0x563f2e8cb168 <line:155:5, col:62> col:55 cend 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x563f2e8cb218 <col:20> Inherited
| `-OptimizeNoneAttr 0x563f2e8cb270 <col:30> Inherited
|-CXXMethodDecl 0x563f2e8cb298 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x563f2e8cb348 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x563f2e8cb3f8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x563f2e8cb5b8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x563f2e8cb4a8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x563f2e8cb520 <col:37, col:63> col:57 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x563f2e8cb708 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x563f2e8cb678 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x563f2e8cb8b8 <line:163:5, col:65> col:43 operator[] 'pollfd &(Vector::size_type)'
| |-ParmVarDecl 0x563f2e8cb7c0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x563f2e8cb970 <col:20>
| `-OptimizeNoneAttr 0x563f2e8cb9c8 <col:30>
|-CXXMethodDecl 0x563f2e8cbae8 <line:164:5, col:73> col:49 operator[] 'const pollfd &(Vector::size_type) const'
| |-ParmVarDecl 0x563f2e8cb9f0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x563f2e8cbba0 <col:20>
| `-OptimizeNoneAttr 0x563f2e8cbbf8 <col:30>
|-CXXMethodDecl 0x563f2e8cbcb0 <line:165:5, col:29> col:15 at 'pollfd &(Vector::size_type)' inline
| `-ParmVarDecl 0x563f2e8cbc20 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x563f2e8cbdf8 <line:166:5, col:37> col:21 at 'const pollfd &(Vector::size_type) const' inline
| `-ParmVarDecl 0x563f2e8cbd68 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x563f2e8cbf28 <line:167:5, col:21> col:15 front 'pollfd &()' inline
|-CXXMethodDecl 0x563f2e8cc058 <line:168:5, col:29> col:21 front 'const pollfd &() const' inline
|-CXXMethodDecl 0x563f2e8cc128 <line:169:5, col:20> col:15 back 'pollfd &()' inline
|-CXXMethodDecl 0x563f2e8cc1f8 <line:170:5, col:28> col:21 back 'const pollfd &() const' inline
|-CXXMethodDecl 0x563f2e8cc338 <line:172:5, col:39> col:15 unchecked_at 'pollfd &(Vector::size_type)' inline
| `-ParmVarDecl 0x563f2e8cc2a8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x563f2e8cc480 <line:173:5, col:47> col:21 unchecked_at 'const pollfd &(Vector::size_type) const' inline
| `-ParmVarDecl 0x563f2e8cc3f0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x563f2e8cc5c8 <line:174:5, col:59> col:15 at_u 'pollfd &(Vector::size_type)' inline
| |-ParmVarDecl 0x563f2e8cc538 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x563f2e8cc680 <col:48> Inherited "" ""
|-CXXMethodDecl 0x563f2e8cc780 <line:175:5, col:71> col:21 at_u 'const pollfd &(Vector::size_type) const' inline
| |-ParmVarDecl 0x563f2e8cc6f0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x563f2e8cc838 <col:60> Inherited "" ""
|-CXXMethodDecl 0x563f2e8cc8f8 <line:177:5, col:20> col:15 data 'pollfd *()' inline
|-CXXMethodDecl 0x563f2e8cc9f8 <line:178:5, col:28> col:21 data 'const pollfd *() const' inline
|-CXXMethodDecl 0x563f2e8ccba8 <line:180:5, col:48> col:17 push_back 'void (Vector<pollfd>::value_argument_type)' inline
| `-ParmVarDecl 0x563f2e8ccab8 <col:27, col:47> col:47 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-FunctionTemplateDecl 0x563f2e8cd368 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x563f2e8ccc60 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<pollfd>':'fast_argument<pollfd, false>'
| `-CXXMethodDecl 0x563f2e8cd2c8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (pollfd &&)' inline
|   `-ParmVarDecl 0x563f2e8cd1c8 <col:58, col:62> col:62 v 'pollfd &&'
|-CXXMethodDecl 0x563f2e8cd448 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x563f2e8cd598 <line:186:5, col:49> col:17 push_front 'void (Vector<pollfd>::value_argument_type)' inline
| `-ParmVarDecl 0x563f2e8cd508 <col:28, col:48> col:48 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x563f2e8cd650 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x563f2e8cd898 <line:189:5, col:62> col:21 insert 'Vector<pollfd>::iterator (Vector<pollfd>::iterator, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x563f2e8cd710 <col:28, col:37> col:37 it 'Vector<pollfd>::iterator':'pollfd *'
| `-ParmVarDecl 0x563f2e8cd788 <col:41, col:61> col:61 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x563f2e8cda58 <line:190:5, col:38> col:21 erase 'Vector<pollfd>::iterator (Vector<pollfd>::iterator)' inline
| `-ParmVarDecl 0x563f2e8cd968 <col:27, col:36> col:36 it 'Vector<pollfd>::iterator':'pollfd *'
|-CXXMethodDecl 0x563f2e8cdca8 <line:191:5, col:49> col:21 erase 'Vector<pollfd>::iterator (Vector<pollfd>::iterator, Vector<pollfd>::iterator)' inline
| |-ParmVarDecl 0x563f2e8cdb20 <col:27, col:36> col:36 a 'Vector<pollfd>::iterator':'pollfd *'
| `-ParmVarDecl 0x563f2e8cdb98 <col:39, col:48> col:48 b 'Vector<pollfd>::iterator':'pollfd *'
|-CXXMethodDecl 0x563f2e8cdd68 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x563f2e8cdfc8 <line:195:5, col:34> col:17 swap 'void (Vector<pollfd> &)' inline
| `-ParmVarDecl 0x563f2e8cded0 <col:22, col:33> col:33 x 'Vector<pollfd> &'
`-CXXDestructorDecl 0x563f2e8ce098 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x563f2e8ce098

Layout: <CGRecordLayout
  LLVMType:%class.Vector.19 = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector.19 = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x563f2e8cf580 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<24>'
|-CXXRecordDecl 0x563f2e8cf758 prev 0x563f2e8cf580 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x563f2e8cf7e8 <col:46, col:52> col:46 public
|-TypedefDecl 0x563f2e8cf810 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x563f2e4b1580 'int'
|-TypedefDecl 0x563f2eb79b80 <line:13:5, col:31> col:31 type 'typename sized_array_memory<24>::type':'char_array<24>'
| `-ElaboratedType 0x563f2eb79b30 'typename sized_array_memory<24>::type' sugar
|   `-TypedefType 0x563f2e8cfcc0 'sized_array_memory<24>::type' sugar
|     |-Typedef 0x563f2e8cfbc0 'type'
|     `-TemplateSpecializationType 0x563f2e8cfb50 'char_array<24UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x563f2e8cfa30 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 24
|       |   `-SubstNonTypeTemplateParmExpr 0x563f2e8cfa10 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x563f2e8cf9f0 <col:24> 'unsigned long' 24
|       `-RecordType 0x563f2e8cfb30 'char_array<24>'
|         `-ClassTemplateSpecialization 0x563f2e8cfa50 'char_array'
|-TypedefDecl 0x563f2eb79c38 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<24> >::type *'
| `-PointerType 0x563f2eb79c00 'vector_memory<sized_array_memory<24> >::type *'
|   `-TypedefType 0x563f2eb79be0 'vector_memory<sized_array_memory<24> >::type' sugar
|     |-Typedef 0x563f2eb79b80 'type'
|     `-ElaboratedType 0x563f2eb79b30 'typename sized_array_memory<24>::type' sugar
|       `-TypedefType 0x563f2e8cfcc0 'sized_array_memory<24>::type' sugar
|         |-Typedef 0x563f2e8cfbc0 'type'
|         `-TemplateSpecializationType 0x563f2e8cfb50 'char_array<24UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x563f2e8cfa30 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 24
|           |   `-SubstNonTypeTemplateParmExpr 0x563f2e8cfa10 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x563f2e8cf9f0 <col:24> 'unsigned long' 24
|           `-RecordType 0x563f2e8cfb30 'char_array<24>'
|             `-ClassTemplateSpecialization 0x563f2e8cfa50 'char_array'
|-CXXMethodDecl 0x563f2eb79db8 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<24> >::type *) const' inline
| `-ParmVarDecl 0x563f2eb79cc8 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXConstructorDecl 0x563f2eb79ea8 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x563f2eb79f88 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x563f2eb79f88
|-CXXMethodDecl 0x563f2eb7a258 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<24> > &)'
| `-ParmVarDecl 0x563f2eb7a160 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<24> > &'
|-CXXMethodDecl 0x563f2eb7a498 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x563f2eb7a310 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x563f2eb7a388 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x563f2eb7a668 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x563f2eb7a558 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x563f2eb7a5d0 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x563f2eb7a7c8 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<24> >::iterator ()'
|-CXXMethodDecl 0x563f2eb7a898 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<24> >::iterator ()'
|-CXXMethodDecl 0x563f2eb7aae8 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<24> >::iterator (vector_memory<sized_array_memory<24> >::iterator, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x563f2eb7a958 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
| `-ParmVarDecl 0x563f2eb7a9d0 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x563f2eb7ad48 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<24> >::iterator (vector_memory<sized_array_memory<24> >::iterator, vector_memory<sized_array_memory<24> >::iterator)'
| |-ParmVarDecl 0x563f2eb7abb8 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
| `-ParmVarDecl 0x563f2eb7ac30 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x563f2eb7af08 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<24> >::type *)' inline
| `-ParmVarDecl 0x563f2eb7ae18 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x563f2eb7b0c8 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<24> >::type *)' inline
| `-ParmVarDecl 0x563f2eb7afd0 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x563f2eb7b180 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x563f2eb7b230 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x563f2eb7b468 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x563f2eb7b2e0 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x563f2eb7b358 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x563f2eb7b708 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<24> > &)'
| `-ParmVarDecl 0x563f2eb7b610 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<24> > &'
|-FieldDecl 0x563f2eb7b7d0 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<24> >::type *'
|-FieldDecl 0x563f2eb7b820 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x563f2eb7b870 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.21 = type { %struct.char_array.22*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.21 = type { %struct.char_array.22*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x563f2e8ce1e0 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'SelectSet::SelectorInfo'
|-CXXRecordDecl 0x563f2e8ce3e8 prev 0x563f2e8ce1e0 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x563f2e8cf4f0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<SelectorInfo>::type':'sized_array_memory<24>'
| `-ElaboratedType 0x563f2e8cf4a0 'typename array_memory<SelectorInfo>::type' sugar
|   `-TypedefType 0x563f2e8cf480 'conditional<true, sized_array_memory<24>, typed_array_memory<SelectSet::SelectorInfo> >::type' sugar
|     |-Typedef 0x563f2e8cf330 'type'
|     `-SubstTemplateTypeParmType 0x563f2e8cf150 'sized_array_memory<24>' sugar
|       |-TemplateTypeParmType 0x563f2e77b200 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563f2e77b1a8 'T'
|       `-RecordType 0x563f2ea5c3d0 'sized_array_memory<24>'
|         `-ClassTemplateSpecialization 0x563f2ea5c2e8 'sized_array_memory'
|-FieldDecl 0x563f2eb7b8c0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<SelectSet::SelectorInfo>::array_memory_type>':'vector_memory<sized_array_memory<24> >' mutable
|-AccessSpecDecl 0x563f2eb7b910 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x563f2eb7b948 <line:118:5, col:15> col:15 value_type 'SelectSet::SelectorInfo':'SelectSet::SelectorInfo'
| `-SubstTemplateTypeParmType 0x563f2e8ce480 'SelectSet::SelectorInfo' sugar
|   |-TemplateTypeParmType 0x563f2e7b3110 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x563f2e7b30b8 'T'
|   `-RecordType 0x563f2eb76350 'SelectSet::SelectorInfo'
|     `-CXXRecord 0x563f2eb762c0 'SelectorInfo'
|-TypedefDecl 0x563f2eb7ba08 <line:119:5, col:16> col:16 reference 'SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x563f2eb7b9d0 'SelectSet::SelectorInfo &'
|   `-SubstTemplateTypeParmType 0x563f2e8ce480 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x563f2e7b3110 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x563f2e7b30b8 'T'
|     `-RecordType 0x563f2eb76350 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x563f2eb762c0 'SelectorInfo'
|-TypedefDecl 0x563f2eb7bac8 <line:120:5, col:22> col:22 const_reference 'const SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x563f2eb7ba90 'const SelectSet::SelectorInfo &'
|   `-QualType 0x563f2e8ce481 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x563f2e8ce480 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x563f2e7b3110 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563f2e7b30b8 'T'
|       `-RecordType 0x563f2eb76350 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x563f2eb762c0 'SelectorInfo'
|-TypedefDecl 0x563f2eb7bb58 <line:121:5, col:16> col:16 pointer 'SelectSet::SelectorInfo *'
| `-PointerType 0x563f2eb7bb20 'SelectSet::SelectorInfo *'
|   `-SubstTemplateTypeParmType 0x563f2e8ce480 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x563f2e7b3110 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x563f2e7b30b8 'T'
|     `-RecordType 0x563f2eb76350 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x563f2eb762c0 'SelectorInfo'
|-TypedefDecl 0x563f2eb7bc18 <line:122:5, col:22> col:22 const_pointer 'const SelectSet::SelectorInfo *'
| `-PointerType 0x563f2eb7bbe0 'const SelectSet::SelectorInfo *'
|   `-QualType 0x563f2e8ce481 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x563f2e8ce480 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x563f2e7b3110 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563f2e7b30b8 'T'
|       `-RecordType 0x563f2eb76350 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x563f2eb762c0 'SelectorInfo'
|-TypedefDecl 0x563f2eb7c870 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<SelectorInfo>::type':'const SelectSet::SelectorInfo &'
| `-ElaboratedType 0x563f2eb7c820 'typename fast_argument<SelectorInfo>::type' sugar
|   `-TypedefType 0x563f2eb7c800 'fast_argument<SelectSet::SelectorInfo, true>::type' sugar
|     |-Typedef 0x563f2eb7c738 'type'
|     `-LValueReferenceType 0x563f2eb7c700 'const SelectSet::SelectorInfo &'
|       `-QualType 0x563f2eb7c4a1 'const SelectSet::SelectorInfo' const
|         `-SubstTemplateTypeParmType 0x563f2eb7c4a0 'SelectSet::SelectorInfo' sugar
|           |-TemplateTypeParmType 0x563f2e7858d0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x563f2e785878 'T'
|           `-RecordType 0x563f2eb76350 'SelectSet::SelectorInfo'
|             `-CXXRecord 0x563f2eb762c0 'SelectorInfo'
|-TypedefDecl 0x563f2eb7c8d8 <line:126:5, col:22> col:22 const_access_type 'const SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x563f2eb7ba90 'const SelectSet::SelectorInfo &'
|   `-QualType 0x563f2e8ce481 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x563f2e8ce480 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x563f2e7b3110 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563f2e7b30b8 'T'
|       `-RecordType 0x563f2eb76350 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x563f2eb762c0 'SelectorInfo'
|-TypedefDecl 0x563f2eb7c930 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x563f2e4b1580 'int'
|-TypedefDecl 0x563f2eb7c998 <line:130:5, col:16> col:16 iterator 'SelectSet::SelectorInfo *'
| `-PointerType 0x563f2eb7bb20 'SelectSet::SelectorInfo *'
|   `-SubstTemplateTypeParmType 0x563f2e8ce480 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x563f2e7b3110 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x563f2e7b30b8 'T'
|     `-RecordType 0x563f2eb76350 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x563f2eb762c0 'SelectorInfo'
|-TypedefDecl 0x563f2eb7ca00 <line:131:5, col:22> col:22 const_iterator 'const SelectSet::SelectorInfo *'
| `-PointerType 0x563f2eb7bbe0 'const SelectSet::SelectorInfo *'
|   `-QualType 0x563f2e8ce481 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x563f2e8ce480 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x563f2e7b3110 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563f2e7b30b8 'T'
|       `-RecordType 0x563f2eb76350 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x563f2eb762c0 'SelectorInfo'
|-EnumDecl 0x563f2eb7ca58 <line:134:5> col:5
| `-EnumConstantDecl 0x563f2eb7cb50 <col:12, col:40> col:12 RESERVE_GROW 'Vector<SelectSet::SelectorInfo>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x563f2eb7cb30 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x563f2e7b4798 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x563f2e7b4770 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x563f2e7b4750 <col:40> 'int' 1
|-CXXConstructorDecl 0x563f2eb7cbd8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x563f2eb7ce68 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x563f2eb7cc90 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x563f2eb7cd30 <col:41, col:61> col:61 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXConstructorDecl 0x563f2eb7d128 <line:139:5, col:37> col:12 Vector 'void (const Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x563f2eb7d010 <col:19, col:36> col:36 x 'const Vector<SelectSet::SelectorInfo> &'
|-CXXConstructorDecl 0x563f2eb7d3e8 <line:141:5, col:32> col:12 Vector 'void (Vector<SelectSet::SelectorInfo> &&)' inline
| `-ParmVarDecl 0x563f2eb7d2d0 <col:19, col:31> col:31 x 'Vector<SelectSet::SelectorInfo> &&'
|-CXXMethodDecl 0x563f2eb7d730 <line:144:5, col:51> col:23 operator= 'Vector<SelectSet::SelectorInfo> &(const Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x563f2eb7d610 <col:33, col:50> col:50 x 'const Vector<SelectSet::SelectorInfo> &'
|-CXXMethodDecl 0x563f2eb7da40 <line:146:5, col:46> col:23 operator= 'Vector<SelectSet::SelectorInfo> &(Vector<SelectSet::SelectorInfo> &&)' inline
| `-ParmVarDecl 0x563f2eb7d920 <col:33, col:45> col:45 x 'Vector<SelectSet::SelectorInfo> &&'
|-CXXMethodDecl 0x563f2eb7dd30 <line:148:5, col:70> col:23 assign 'Vector<SelectSet::SelectorInfo> &(Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x563f2eb7db78 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x563f2eb7dbf0 <col:43, col:69> col:63 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x563f2eb7de88 <line:150:5, col:55> col:49 begin 'Vector<SelectSet::SelectorInfo>::iterator ()'
| |-NoInlineAttr 0x563f2eb7df68 <col:20> Inherited
| `-OptimizeNoneAttr 0x563f2eb7dfc0 <col:30> Inherited
|-CXXMethodDecl 0x563f2eb7e008 <line:151:5, col:53> col:49 end 'Vector<SelectSet::SelectorInfo>::iterator ()'
| |-NoInlineAttr 0x563f2eb7e0b8 <col:20> Inherited
| `-OptimizeNoneAttr 0x563f2eb7e110 <col:30> Inherited
|-CXXMethodDecl 0x563f2eb7e1d8 <line:152:5, col:63> col:55 begin 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x563f2eb7e288 <col:20> Inherited
| `-OptimizeNoneAttr 0x563f2eb7e2e0 <col:30> Inherited
|-CXXMethodDecl 0x563f2eb7e328 <line:153:5, col:61> col:55 end 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x563f2eb7e3d8 <col:20> Inherited
| `-OptimizeNoneAttr 0x563f2eb7e430 <col:30> Inherited
|-CXXMethodDecl 0x563f2eb7e478 <line:154:5, col:64> col:55 cbegin 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x563f2eb7e528 <col:20> Inherited
| `-OptimizeNoneAttr 0x563f2eb7e580 <col:30> Inherited
|-CXXMethodDecl 0x563f2eb7e5c8 <line:155:5, col:62> col:55 cend 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x563f2eb7e678 <col:20> Inherited
| `-OptimizeNoneAttr 0x563f2eb7e6d0 <col:30> Inherited
|-CXXMethodDecl 0x563f2eb7e6f8 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x563f2eb7e7a8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x563f2eb7e858 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x563f2eb7ea18 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x563f2eb7e908 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x563f2eb7e980 <col:37, col:63> col:57 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x563f2eb7eb68 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x563f2eb7ead8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x563f2eb7ed18 <line:163:5, col:65> col:43 operator[] 'SelectSet::SelectorInfo &(Vector::size_type)'
| |-ParmVarDecl 0x563f2eb7ec20 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x563f2eb7edd0 <col:20>
| `-OptimizeNoneAttr 0x563f2eb7ee28 <col:30>
|-CXXMethodDecl 0x563f2eb7ef48 <line:164:5, col:73> col:49 operator[] 'const SelectSet::SelectorInfo &(Vector::size_type) const'
| |-ParmVarDecl 0x563f2eb7ee50 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x563f2eb7f000 <col:20>
| `-OptimizeNoneAttr 0x563f2eb7f058 <col:30>
|-CXXMethodDecl 0x563f2eb7f110 <line:165:5, col:29> col:15 at 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| `-ParmVarDecl 0x563f2eb7f080 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x563f2eb7f258 <line:166:5, col:37> col:21 at 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| `-ParmVarDecl 0x563f2eb7f1c8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x563f2eb7f388 <line:167:5, col:21> col:15 front 'SelectSet::SelectorInfo &()' inline
|-CXXMethodDecl 0x563f2eb7f4b8 <line:168:5, col:29> col:21 front 'const SelectSet::SelectorInfo &() const' inline
|-CXXMethodDecl 0x563f2eb7f588 <line:169:5, col:20> col:15 back 'SelectSet::SelectorInfo &()' inline
|-CXXMethodDecl 0x563f2eb7f658 <line:170:5, col:28> col:21 back 'const SelectSet::SelectorInfo &() const' inline
|-CXXMethodDecl 0x563f2eb7f798 <line:172:5, col:39> col:15 unchecked_at 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| `-ParmVarDecl 0x563f2eb7f708 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x563f2eb7f8e0 <line:173:5, col:47> col:21 unchecked_at 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| `-ParmVarDecl 0x563f2eb7f850 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x563f2eb7fa28 <line:174:5, col:59> col:15 at_u 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| |-ParmVarDecl 0x563f2eb7f998 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x563f2eb7fae0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x563f2eb7fbe0 <line:175:5, col:71> col:21 at_u 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| |-ParmVarDecl 0x563f2eb7fb50 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x563f2eb7fc98 <col:60> Inherited "" ""
|-CXXMethodDecl 0x563f2eb7fd58 <line:177:5, col:20> col:15 data 'SelectSet::SelectorInfo *()' inline
|-CXXMethodDecl 0x563f2eb7fe58 <line:178:5, col:28> col:21 data 'const SelectSet::SelectorInfo *() const' inline
|-CXXMethodDecl 0x563f2eb80008 <line:180:5, col:48> col:17 push_back 'void (Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| `-ParmVarDecl 0x563f2eb7ff18 <col:27, col:47> col:47 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-FunctionTemplateDecl 0x563f2eb807c8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x563f2eb800c0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<SelectSet::SelectorInfo>':'fast_argument<SelectSet::SelectorInfo, true>'
| `-CXXMethodDecl 0x563f2eb80728 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (SelectSet::SelectorInfo &&)' inline
|   `-ParmVarDecl 0x563f2eb80628 <col:58, col:62> col:62 v 'SelectSet::SelectorInfo &&'
|-CXXMethodDecl 0x563f2eb808a8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x563f2eb80a50 <line:186:5, col:49> col:17 push_front 'void (Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| `-ParmVarDecl 0x563f2eb809c0 <col:28, col:48> col:48 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x563f2eb80b08 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x563f2eb80d58 <line:189:5, col:62> col:21 insert 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x563f2eb80bc8 <col:28, col:37> col:37 it 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
| `-ParmVarDecl 0x563f2eb80c40 <col:41, col:61> col:61 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x563f2eb80f18 <line:190:5, col:38> col:21 erase 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator)' inline
| `-ParmVarDecl 0x563f2eb80e28 <col:27, col:36> col:36 it 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
|-CXXMethodDecl 0x563f2eb81168 <line:191:5, col:49> col:21 erase 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator, Vector<SelectSet::SelectorInfo>::iterator)' inline
| |-ParmVarDecl 0x563f2eb80fe0 <col:27, col:36> col:36 a 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
| `-ParmVarDecl 0x563f2eb81058 <col:39, col:48> col:48 b 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
|-CXXMethodDecl 0x563f2eb81228 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x563f2eb81488 <line:195:5, col:34> col:17 swap 'void (Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x563f2eb81390 <col:22, col:33> col:33 x 'Vector<SelectSet::SelectorInfo> &'
`-CXXDestructorDecl 0x563f2eb81558 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x563f2eb81558

Layout: <CGRecordLayout
  LLVMType:%class.Vector.20 = type { %class.vector_memory.21 }
  NonVirtualBaseLLVMType:%class.Vector.20 = type { %class.vector_memory.21 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563f2eb754a0 <../dummy_inc/click/selectset.hh:36:1, line:109:1> line:36:7 referenced class SelectSet definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x563f2eb755b8 <col:1, col:7> col:7 implicit referenced class SelectSet
|-AccessSpecDecl 0x563f2eb75648 <col:19, col:25> col:19 public
|-CXXConstructorDecl 0x563f2eb756d0 <line:38:5, col:15> col:5 SelectSet 'void ()'
|-CXXDestructorDecl 0x563f2eb757c0 <line:39:5, col:16> col:5 ~SelectSet 'void ()' noexcept-unevaluated 0x563f2eb757c0
|-CXXMethodDecl 0x563f2eb758c0 <line:41:5, col:21> col:10 initialize 'void ()'
|-CXXMethodDecl 0x563f2eb75b60 <line:43:5, col:54> col:9 add_select 'int (int, Element *, int)'
| |-ParmVarDecl 0x563f2eb75978 <col:20, col:24> col:24 fd 'int'
| |-ParmVarDecl 0x563f2eb759f0 <col:28, col:37> col:37 element 'Element *'
| `-ParmVarDecl 0x563f2eb75a70 <col:46, col:50> col:50 mask 'int'
|-CXXMethodDecl 0x563f2eb75dd0 <line:44:5, col:57> col:9 remove_select 'int (int, Element *, int)'
| |-ParmVarDecl 0x563f2eb75c30 <col:23, col:27> col:27 fd 'int'
| |-ParmVarDecl 0x563f2eb75ca8 <col:31, col:40> col:40 element 'Element *'
| `-ParmVarDecl 0x563f2eb75d28 <col:49, col:53> col:53 mask 'int'
|-CXXMethodDecl 0x563f2eb75f28 <line:46:5, col:42> col:10 run_selects 'void (RouterThread *)'
| `-ParmVarDecl 0x563f2eb75e98 <col:22, col:36> col:36 thread 'RouterThread *'
|-CXXMethodDecl 0x563f2eb75ff0 <line:47:5, line:50:5> line:47:17 used wake_immediate 'void ()' inline
| `-CompoundStmt 0x563f2eb82c08 <col:34, line:50:5>
|   |-BinaryOperator 0x563f2eb825d8 <line:48:2, col:23> 'volatile bool' lvalue '='
|   | |-MemberExpr 0x563f2eb82598 <col:2> 'volatile bool' lvalue ->_wake_pipe_pending 0x563f2eb76778
|   | | `-CXXThisExpr 0x563f2eb82588 <col:2> 'SelectSet *' implicit this
|   | `-CXXBoolLiteralExpr 0x563f2eb825c8 <col:23> 'bool' true
|   `-CallExpr 0x563f2eb82be0 <line:49:2, col:43> 'void'
|     |-ImplicitCastExpr 0x563f2eb82bc8 <col:2> 'void (*)(long)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x563f2eb82b48 <col:2> 'void (long)' lvalue Function 0x563f2eb82a48 'ignore_result' 'void (long)' (FunctionTemplate 0x563f2e7761a8 'ignore_result')
|     `-CallExpr 0x563f2eb827f0 <col:16, col:42> 'ssize_t':'long'
|       |-ImplicitCastExpr 0x563f2eb827d8 <col:16> 'ssize_t (*)(int, const void *, size_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x563f2eb82758 <col:16> 'ssize_t (int, const void *, size_t)' lvalue Function 0x563f2eb551a8 'write' 'ssize_t (int, const void *, size_t)'
|       |-ImplicitCastExpr 0x563f2eb82828 <col:22, col:34> 'int' <LValueToRValue>
|       | `-ArraySubscriptExpr 0x563f2eb82700 <col:22, col:34> 'int' lvalue
|       |   |-ImplicitCastExpr 0x563f2eb826e8 <col:22> 'int *' <ArrayToPointerDecay>
|       |   | `-MemberExpr 0x563f2eb82698 <col:22> 'int [2]' lvalue ->_wake_pipe 0x563f2eb76718
|       |   |   `-CXXThisExpr 0x563f2eb82688 <col:22> 'SelectSet *' implicit this
|       |   `-IntegerLiteral 0x563f2eb826c8 <col:33> 'int' 1
|       |-ImplicitCastExpr 0x563f2eb82858 <col:37> 'const void *' <BitCast>
|       | `-ImplicitCastExpr 0x563f2eb82840 <col:37> 'const char *' <ArrayToPointerDecay>
|       |   `-StringLiteral 0x563f2eb82720 <col:37> 'const char [1]' lvalue ""
|       `-ImplicitCastExpr 0x563f2eb82870 <col:41> 'size_t':'unsigned long' <IntegralCast>
|         `-IntegerLiteral 0x563f2eb82738 <col:41> 'int' 1
|-CXXMethodDecl 0x563f2eb76130 <line:52:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x563f2eb760a0 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x563f2eb761f8 <line:54:5, col:23> col:17 fence 'void ()' inline
|-AccessSpecDecl 0x563f2eb76298 <line:56:3, col:10> col:3 private
|-CXXRecordDecl 0x563f2eb762c0 <line:58:5, line:66:5> line:58:12 referenced struct SelectorInfo definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x563f2eb763d8 <col:5, col:12> col:12 implicit referenced struct SelectorInfo
| |-FieldDecl 0x563f2eb76478 <line:59:2, col:11> col:11 read 'Element *'
| |-FieldDecl 0x563f2eb764d8 <line:60:2, col:11> col:11 write 'Element *'
| |-FieldDecl 0x563f2eb76540 <line:61:2, col:6> col:6 pollfd 'int'
| `-CXXConstructorDecl 0x563f2eb765f0 <line:62:2, line:65:2> line:62:2 SelectorInfo 'void ()'
|   |-CXXCtorInitializer Field 0x563f2eb76478 'read' 'Element *'
|   | `-ImplicitCastExpr 0x563f2eb82c68 <line:63:13> 'Element *' <NullToPointer>
|   |   `-IntegerLiteral 0x563f2eb82c28 <col:13> 'int' 0
|   |-CXXCtorInitializer Field 0x563f2eb764d8 'write' 'Element *'
|   | `-ImplicitCastExpr 0x563f2eb82ce8 <col:23> 'Element *' <NullToPointer>
|   |   `-IntegerLiteral 0x563f2eb82ca8 <col:23> 'int' 0
|   |-CXXCtorInitializer Field 0x563f2eb76540 'pollfd' 'int'
|   | `-UnaryOperator 0x563f2eb82d48 <col:34, col:35> 'int' prefix '-'
|   |   `-IntegerLiteral 0x563f2eb82d28 <col:35> 'int' 1
|   `-CompoundStmt 0x563f2eb82dc0 <line:64:2, line:65:2>
|-FieldDecl 0x563f2eb76718 <line:68:5, col:21> col:9 referenced _wake_pipe 'int [2]'
|-FieldDecl 0x563f2eb76778 <line:69:5, col:19> col:19 referenced _wake_pipe_pending 'volatile bool'
|-FieldDecl 0x563f2e8ce180 <line:82:5, col:27> col:27 _pollfds 'Vector<struct pollfd>':'Vector<pollfd>'
|-FieldDecl 0x563f2eb81640 <line:83:5, col:26> col:26 _selinfo 'Vector<SelectSet::SelectorInfo>':'Vector<SelectSet::SelectorInfo>'
|-CXXMethodDecl 0x563f2eb81878 <line:89:5, col:63> col:10 register_select 'void (int, bool, bool)'
| |-ParmVarDecl 0x563f2eb816a8 <col:26, col:30> col:30 fd 'int'
| |-ParmVarDecl 0x563f2eb81720 <col:34, col:39> col:39 add_read 'bool'
| `-ParmVarDecl 0x563f2eb81798 <col:49, col:54> col:54 add_write 'bool'
|-CXXMethodDecl 0x563f2eb81a60 <line:90:5, col:41> col:10 remove_pollfd 'void (int, int)'
| |-ParmVarDecl 0x563f2eb81948 <col:24, col:28> col:28 pi 'int'
| `-ParmVarDecl 0x563f2eb819c8 <col:32, col:36> col:36 event 'int'
|-CXXMethodDecl 0x563f2eb81ca8 <line:91:5, col:49> col:17 call_selected 'void (int, int) const' inline
| |-ParmVarDecl 0x563f2eb81b28 <col:31, col:35> col:35 fd 'int'
| `-ParmVarDecl 0x563f2eb81ba8 <col:39, col:43> col:43 mask 'int'
|-CXXMethodDecl 0x563f2eb81eb8 <line:92:5, col:63> col:17 post_select 'bool (RouterThread *, bool)' inline
| |-ParmVarDecl 0x563f2eb81d68 <col:29, col:43> col:43 thread 'RouterThread *'
| `-ParmVarDecl 0x563f2eb81de0 <col:51, col:56> col:56 acquire 'bool'
|-CXXMethodDecl 0x563f2eb82008 <line:97:5, col:47> col:10 run_selects_poll 'void (RouterThread *)'
| `-ParmVarDecl 0x563f2eb81f78 <col:27, col:41> col:41 thread 'RouterThread *'
|-CXXMethodDecl 0x563f2eb820d0 <line:102:5, col:22> col:17 used lock 'void ()' inline
|-CXXMethodDecl 0x563f2eb82190 <line:103:5, col:24> col:17 used unlock 'void ()' inline
|-CXXConstructorDecl 0x563f2eb82258 <line:36:7> col:7 implicit SelectSet 'void (const SelectSet &)' inline default noexcept-unevaluated 0x563f2eb82258
| `-ParmVarDecl 0x563f2eb82368 <col:7> col:7 'const SelectSet &'
`-CXXMethodDecl 0x563f2eb82408 <col:7> col:7 implicit operator= 'SelectSet &(const SelectSet &)' inline default noexcept-unevaluated 0x563f2eb82408
  `-ParmVarDecl 0x563f2eb82518 <col:7> col:7 'const SelectSet &'

Layout: <CGRecordLayout
  LLVMType:%class.SelectSet = type { [2 x i32], i8, %class.Vector.19, %class.Vector.20 }
  NonVirtualBaseLLVMType:%class.SelectSet = type { [2 x i32], i8, %class.Vector.19, %class.Vector.20 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563f2eb25118 <../dummy_inc/click/sync.hh:46:1, line:64:1> line:46:7 referenced class Spinlock definition
|-DefinitionData empty standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x563f2eb25238 <col:1, col:7> col:7 implicit referenced class Spinlock
|-AccessSpecDecl 0x563f2eb252c8 <col:18, col:24> col:18 public
|-CXXConstructorDecl 0x563f2eb25350 <line:48:5, col:21> col:12 Spinlock 'void ()' inline
|-CXXDestructorDecl 0x563f2eb254b0 <line:49:5, col:22> col:12 ~Spinlock 'void () noexcept' inline
|-CXXMethodDecl 0x563f2eb255b0 <line:51:5, col:25> col:17 used acquire 'void ()' inline
|-CXXMethodDecl 0x563f2eb25670 <line:52:5, col:25> col:17 used release 'void ()' inline
|-CXXMethodDecl 0x563f2eb25730 <line:53:5, col:25> col:17 attempt 'bool ()' inline
|-CXXMethodDecl 0x563f2eb25818 <line:54:5, col:26> col:17 nested 'bool () const' inline
|-CXXConstructorDecl 0x563f2eb25938 <line:46:7> col:7 implicit constexpr Spinlock 'void (const Spinlock &)' inline default trivial noexcept-unevaluated 0x563f2eb25938
| `-ParmVarDecl 0x563f2eb25a48 <col:7> col:7 'const Spinlock &'
`-CXXMethodDecl 0x563f2eb879b8 <col:7> col:7 implicit operator= 'Spinlock &(const Spinlock &)' inline default trivial noexcept-unevaluated 0x563f2eb879b8
  `-ParmVarDecl 0x563f2eb87ac8 <col:7> col:7 'const Spinlock &'

Layout: <CGRecordLayout
  LLVMType:%class.Spinlock = type { i8 }
  NonVirtualBaseLLVMType:%class.Spinlock.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563f2eb34e08 <../dummy_inc/click/task.hh:339:5, line:342:5> line:339:11 referenced union Pending definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x563f2eb34f28 <col:5, col:11> col:11 implicit union Pending
|-FieldDecl 0x563f2eb34fc8 <line:340:9, col:15> col:15 t 'Task *'
|-FieldDecl 0x563f2eb35028 <line:341:9, col:19> col:19 referenced x 'uintptr_t':'unsigned long'
|-CXXConstructorDecl 0x563f2eb86fb8 <line:339:11> col:11 implicit constexpr Pending 'void (const Task::Pending &)' inline default trivial noexcept-unevaluated 0x563f2eb86fb8
| `-ParmVarDecl 0x563f2eb870c8 <col:11> col:11 'const Task::Pending &'
|-CXXConstructorDecl 0x563f2eb87168 <col:11> col:11 implicit constexpr Pending 'void (Task::Pending &&)' inline default trivial noexcept-unevaluated 0x563f2eb87168
| `-ParmVarDecl 0x563f2eb87278 <col:11> col:11 'Task::Pending &&'
|-CXXDestructorDecl 0x563f2eb872e8 <col:11> col:11 implicit ~Pending 'void ()' inline default trivial noexcept-unevaluated 0x563f2eb872e8
|-CXXMethodDecl 0x563f2eb87b68 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(const Task::Pending &)' inline default trivial noexcept-unevaluated 0x563f2eb87b68
| `-ParmVarDecl 0x563f2eb87c78 <col:11> col:11 'const Task::Pending &'
|-CXXMethodDecl 0x563f2eb87ce8 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(Task::Pending &&)' inline default trivial noexcept-unevaluated 0x563f2eb87ce8
| `-ParmVarDecl 0x563f2eb87df8 <col:11> col:11 'Task::Pending &&'
`-CXXConstructorDecl 0x563f2eb8e498 <col:11> col:11 implicit used Pending 'void () noexcept' inline default trivial
  `-CompoundStmt 0x563f2eb8e570 <col:11>

Layout: <CGRecordLayout
  LLVMType:%"union.Task::Pending" = type { %class.Task* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563f2eb27080 <../dummy_inc/click/sync.hh:303:1, line:324:1> line:303:7 referenced class SpinlockIRQ definition
|-DefinitionData pass_in_registers empty standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x563f2eb27198 <col:1, col:7> col:7 implicit referenced class SpinlockIRQ
|-AccessSpecDecl 0x563f2eb27228 <col:21, col:27> col:21 public
|-CXXConstructorDecl 0x563f2eb272b0 <line:305:5, col:24> col:12 SpinlockIRQ 'void ()' inline
|-TypedefDecl 0x563f2eb27370 <line:310:5, col:17> col:17 referenced flags_t 'int'
| `-BuiltinType 0x563f2e4b1580 'int'
|-CXXMethodDecl 0x563f2eb27438 <line:313:5, col:59> col:20 acquire 'SpinlockIRQ::flags_t ()' inline
| `-AlwaysInlineAttr 0x563f2eb274d8 <col:45> always_inline
|-CXXMethodDecl 0x563f2eb27608 <line:314:5, col:63> col:17 release 'void (SpinlockIRQ::flags_t)' inline
| |-ParmVarDecl 0x563f2eb27540 <col:25> col:32 'SpinlockIRQ::flags_t':'int'
| `-AlwaysInlineAttr 0x563f2eb276b0 <col:49> always_inline
|-CXXConstructorDecl 0x563f2eb277a8 <line:303:7> col:7 implicit constexpr SpinlockIRQ 'void (const SpinlockIRQ &)' inline default trivial noexcept-unevaluated 0x563f2eb277a8
| `-ParmVarDecl 0x563f2eb278b8 <col:7> col:7 'const SpinlockIRQ &'
|-CXXConstructorDecl 0x563f2eb27958 <col:7> col:7 implicit constexpr SpinlockIRQ 'void (SpinlockIRQ &&)' inline default trivial noexcept-unevaluated 0x563f2eb27958
| `-ParmVarDecl 0x563f2eb27a68 <col:7> col:7 'SpinlockIRQ &&'
|-CXXDestructorDecl 0x563f2eb873d0 <col:7> col:7 implicit ~SpinlockIRQ 'void ()' inline default trivial noexcept-unevaluated 0x563f2eb873d0
|-CXXMethodDecl 0x563f2eb87e98 <col:7> col:7 implicit operator= 'SpinlockIRQ &(const SpinlockIRQ &)' inline default trivial noexcept-unevaluated 0x563f2eb87e98
| `-ParmVarDecl 0x563f2eb87fa8 <col:7> col:7 'const SpinlockIRQ &'
`-CXXMethodDecl 0x563f2eb88018 <col:7> col:7 implicit operator= 'SpinlockIRQ &(SpinlockIRQ &&)' inline default trivial noexcept-unevaluated 0x563f2eb88018
  `-ParmVarDecl 0x563f2eb88128 <col:7> col:7 'SpinlockIRQ &&'

Layout: <CGRecordLayout
  LLVMType:%class.SpinlockIRQ = type { i8 }
  NonVirtualBaseLLVMType:%class.SpinlockIRQ.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563f2eb83230 prev 0x563f2eb75410 <../dummy_inc/click/routerthread.hh:28:1, line:248:1> line:28:7 referenced class RouterThread definition
|-DefinitionData has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-CXXRecordDecl 0x563f2eb83328 <col:1, col:7> col:7 implicit referenced class RouterThread
|-AccessSpecDecl 0x563f2eb833b8 <col:22, col:28> col:22 public
|-EnumDecl 0x563f2eb833e0 <line:30:5, col:58> col:5
| |-EnumConstantDecl 0x563f2eb834f8 <col:12, col:32> col:12 THREAD_QUIESCENT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:30:5)'
| | `-ConstantExpr 0x563f2eb834d8 <col:31, col:32> 'int' Int: -1
| |   `-UnaryOperator 0x563f2eb834c0 <col:31, col:32> 'int' prefix '-'
| |     `-IntegerLiteral 0x563f2eb834a0 <col:32> 'int' 1
| `-EnumConstantDecl 0x563f2eb835a0 <col:35, col:53> col:35 THREAD_UNKNOWN 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:30:5)'
|   `-ConstantExpr 0x563f2eb83580 <col:52, col:53> 'int' Int: -1000
|     `-UnaryOperator 0x563f2eb83568 <col:52, col:53> 'int' prefix '-'
|       `-IntegerLiteral 0x563f2eb83548 <col:53> 'int' 1000
|-CXXMethodDecl 0x563f2eb83640 <line:32:5, col:28> col:16 thread_id 'int () const' inline
|-CXXMethodDecl 0x563f2eb83700 <line:34:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x563f2eb837e8 <line:35:5, col:52> col:22 timer_set 'TimerSet &()' inline
| `-CompoundStmt 0x563f2eb881e8 <col:34, col:52>
|   `-ReturnStmt 0x563f2eb881d8 <col:36, col:43>
|     `-MemberExpr 0x563f2eb881a8 <col:43> 'TimerSet' lvalue ->_timers 0x563f2eb854b8
|       `-CXXThisExpr 0x563f2eb88198 <col:43> 'RouterThread *' implicit this
|-CXXMethodDecl 0x563f2eb838d8 <line:36:5, col:64> col:28 timer_set 'const TimerSet &() const' inline
| `-CompoundStmt 0x563f2eb88250 <col:46, col:64>
|   `-ReturnStmt 0x563f2eb88240 <col:48, col:55>
|     `-MemberExpr 0x563f2eb88210 <col:55> 'const TimerSet' lvalue ->_timers 0x563f2eb854b8
|       `-CXXThisExpr 0x563f2eb88200 <col:55> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x563f2eb839c8 <line:38:5, col:55> col:23 select_set 'SelectSet &()' inline
| `-CompoundStmt 0x563f2eb882b8 <col:36, col:55>
|   `-ReturnStmt 0x563f2eb882a8 <col:38, col:45>
|     `-MemberExpr 0x563f2eb88278 <col:45> 'SelectSet' lvalue ->_selects 0x563f2eb85518
|       `-CXXThisExpr 0x563f2eb88268 <col:45> 'RouterThread *' implicit this
|-CXXMethodDecl 0x563f2eb83ab8 <line:39:5, col:67> col:29 select_set 'const SelectSet &() const' inline
| `-CompoundStmt 0x563f2eb88320 <col:48, col:67>
|   `-ReturnStmt 0x563f2eb88310 <col:50, col:57>
|     `-MemberExpr 0x563f2eb882e0 <col:57> 'const SelectSet' lvalue ->_selects 0x563f2eb85518
|       `-CXXThisExpr 0x563f2eb882d0 <col:57> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x563f2eb83b78 <line:43:5, col:26> col:17 active 'bool () const' inline
|-CXXMethodDecl 0x563f2eb83c68 <line:44:5, col:31> col:18 task_begin 'Task *() const' inline
|-CXXMethodDecl 0x563f2eb83dd8 <line:45:5, col:40> col:18 task_next 'Task *(Task *) const' inline
| `-ParmVarDecl 0x563f2eb83d18 <col:28, col:34> col:34 task 'Task *'
|-CXXMethodDecl 0x563f2eb83ea0 <line:46:5, col:29> col:18 task_end 'Task *() const' inline
|-CXXMethodDecl 0x563f2eb842e8 <line:47:5, col:59> col:10 scheduled_tasks 'void (Router *, Vector<Task *> &)'
| |-ParmVarDecl 0x563f2eb83f50 <col:26, col:34> col:34 router 'Router *'
| `-ParmVarDecl 0x563f2eb841d0 <col:42, col:58> col:58 x 'Vector<Task *> &'
|-CXXMethodDecl 0x563f2eb843b8 <line:49:5, col:28> col:17 lock_tasks 'void ()' inline
|-CXXMethodDecl 0x563f2eb84478 <line:50:5, col:30> col:17 unlock_tasks 'void ()' inline
|-CXXMethodDecl 0x563f2eb84538 <line:52:5, col:38> col:17 schedule_block_tasks 'void ()' inline
|-CXXMethodDecl 0x563f2eb84678 <line:53:5, col:43> col:17 used block_tasks 'void (bool)' inline
| `-ParmVarDecl 0x563f2eb845e8 <col:29, col:34> col:34 scheduled 'bool'
|-CXXMethodDecl 0x563f2eb84740 <line:54:5, col:31> col:17 used unblock_tasks 'void ()' inline
|-CXXMethodDecl 0x563f2eb84800 <line:56:5, col:29> col:17 stop_flag 'bool () const' inline
|-CXXMethodDecl 0x563f2eb848c0 <line:58:5, col:35> col:17 mark_driver_entry 'void ()' inline
|-CXXMethodDecl 0x563f2eb84980 <line:59:5, col:17> col:10 driver 'void ()'
|-CXXMethodDecl 0x563f2eb84ac0 <line:61:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x563f2eb84a30 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x563f2eb84b88 <line:77:5, col:22> col:17 used wake 'void ()' inline
|-CXXMethodDecl 0x563f2eb84c48 <line:80:5, col:29> col:17 run_signals 'void ()' inline
|-EnumDecl 0x563f2eb84ce8 <line:83:5, line:86:20> line:83:5
| |-EnumConstantDecl 0x563f2eb84db0 <col:12> col:12 referenced S_PAUSED 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x563f2eb84e00 <col:22> col:22 referenced S_BLOCKED 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x563f2eb84e50 <col:33> col:33 referenced S_TIMERWAIT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x563f2eb84ea0 <line:84:12> col:12 S_LOCKSELECT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x563f2eb84ef0 <col:26> col:26 S_LOCKTASKS 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x563f2eb84f40 <line:85:12> col:12 S_RUNTASK 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x563f2eb84f90 <col:23> col:23 S_RUNTIMER 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x563f2eb84fe0 <col:35> col:35 S_RUNSIGNAL 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x563f2eb85030 <col:48> col:48 S_RUNPENDING 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x563f2eb85080 <col:62> col:62 S_RUNSELECT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| `-EnumConstantDecl 0x563f2eb850d0 <line:86:12> col:12 NSTATES 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
|-CXXMethodDecl 0x563f2eb851c8 <line:87:5, col:43> col:17 used set_thread_state 'void (int)' inline
| `-ParmVarDecl 0x563f2eb85138 <col:34, col:38> col:38 state 'int'
|-CXXMethodDecl 0x563f2eb85318 <line:88:5, col:61> col:17 set_thread_state_for_blocking 'void (int)' inline
| `-ParmVarDecl 0x563f2eb85288 <col:47, col:51> col:51 delay_type 'int'
|-AccessSpecDecl 0x563f2eb853c0 <line:104:3, col:10> col:3 private
|-FieldDecl 0x563f2eb853f8 <line:119:5, col:14> col:14 referenced _task_link 'TaskLink'
|-FieldDecl 0x563f2eb85458 <line:120:5, col:19> col:19 referenced _stop_flag 'volatile bool'
|-FieldDecl 0x563f2eb854b8 <line:125:5, col:14> col:14 referenced _timers 'TimerSet'
|-FieldDecl 0x563f2eb85518 <line:127:5, col:15> col:15 referenced _selects 'SelectSet'
|-FieldDecl 0x563f2eb85598 <line:148:5, col:14> col:14 referenced _task_lock 'Spinlock'
| `-AlignedAttr 0x563f2eb85608 <col:40, col:50> aligned
|   `-ConstantExpr 0x563f2eb855e8 <col:48> 'int' Int: 64
|     `-IntegerLiteral 0x563f2eb85568 <col:48> 'int' 64
|-FieldDecl 0x563f2eb85678 <line:149:5, col:21> col:21 referenced _task_blocker 'atomic_uint32_t'
|-FieldDecl 0x563f2eb856d8 <line:150:5, col:21> col:21 referenced _task_blocker_waiting 'atomic_uint32_t'
|-FieldDecl 0x563f2eb857d0 <line:152:5, col:19> col:19 referenced _pending_head 'Task::Pending':'Task::Pending'
|-FieldDecl 0x563f2eb858e0 <line:153:5, col:20> col:20 _pending_tail 'Task::Pending *'
|-FieldDecl 0x563f2eb85940 <line:154:5, col:17> col:17 _pending_lock 'SpinlockIRQ'
|-FieldDecl 0x563f2eb859c0 <line:157:5, col:13> col:13 referenced _master 'Master *'
| `-AlignedAttr 0x563f2eb85a30 <col:36, col:46> aligned
|   `-ConstantExpr 0x563f2eb85a10 <col:44> 'int' Int: 64
|     `-IntegerLiteral 0x563f2eb85990 <col:44> 'int' 64
|-FieldDecl 0x563f2eb85aa8 <line:158:5, col:9> col:9 referenced _id 'int'
|-FieldDecl 0x563f2eb85b08 <line:159:5, col:10> col:10 referenced _driver_entered 'bool'
|-AccessSpecDecl 0x563f2eb85b58 <line:170:3, col:9> col:3 public
|-FieldDecl 0x563f2eb85b98 <line:171:5, col:14> col:14 _tasks_per_iter 'unsigned int'
|-FieldDecl 0x563f2eb85c00 <line:172:5, col:14> col:14 _iters_per_os 'unsigned int'
|-AccessSpecDecl 0x563f2eb85c50 <line:173:3, col:10> col:3 private
|-CXXConstructorDecl 0x563f2eb85df8 <line:205:5, col:46> col:5 RouterThread 'void (Master *, int)'
| |-ParmVarDecl 0x563f2eb85c88 <col:18, col:26> col:26 master 'Master *'
| `-ParmVarDecl 0x563f2eb85d08 <col:34, col:38> col:38 threadno 'int'
|-CXXDestructorDecl 0x563f2eb85ef8 <line:206:5, col:19> col:5 ~RouterThread 'void ()' noexcept-unevaluated 0x563f2eb85ef8
|-CXXMethodDecl 0x563f2eb86000 <line:209:5, col:29> col:17 add_pending 'void ()' inline
|-CXXMethodDecl 0x563f2eb860c8 <line:211:5, line:217:5> line:211:21 pass 'unsigned int () const' inline
| `-CompoundStmt 0x563f2eb88418 <col:34, line:217:5>
|   `-ReturnStmt 0x563f2eb88408 <line:215:9, col:34>
|     `-ImplicitCastExpr 0x563f2eb883f0 <col:16, col:34> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x563f2eb883c0 <col:16, col:34> 'unsigned int' lvalue ->_pass 0x563f2eb31ee0
|         `-ImplicitCastExpr 0x563f2eb883a8 <col:16, col:27> 'TaskLink *' <LValueToRValue>
|           `-MemberExpr 0x563f2eb88378 <col:16, col:27> 'TaskLink *const' lvalue ._next 0x563f2eb31e78
|             `-MemberExpr 0x563f2eb88348 <col:16> 'const TaskLink' lvalue ->_task_link 0x563f2eb853f8
|               `-CXXThisExpr 0x563f2eb88338 <col:16> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x563f2eb86188 <line:221:5, col:28> col:10 driver_lock_tasks 'void ()'
|-CXXMethodDecl 0x563f2eb86248 <line:222:5, line:226:5> line:222:17 driver_unlock_tasks 'void ()' inline
| `-CompoundStmt 0x563f2eb88b68 <col:39, line:226:5>
|   |-DeclStmt 0x563f2eb88668 <line:223:9, col:68>
|   | `-VarDecl 0x563f2eb88440 <col:9, col:67> col:18 used val 'uint32_t':'unsigned int' cinit
|   |   `-CXXMemberCallExpr 0x563f2eb88620 <col:24, col:67> 'uint32_t':'unsigned int'
|   |     |-MemberExpr 0x563f2eb885f0 <col:24, col:38> '<bound member function type>' .compare_swap 0x563f2e7dba00
|   |     | `-MemberExpr 0x563f2eb884b8 <col:24> 'atomic_uint32_t' lvalue ->_task_blocker 0x563f2eb85678
|   |     |   `-CXXThisExpr 0x563f2eb884a8 <col:24> 'RouterThread *' implicit this
|   |     |-CStyleCastExpr 0x563f2eb885a8 <col:51, col:63> 'uint32_t':'unsigned int' <NoOp>
|   |     | `-ImplicitCastExpr 0x563f2eb88590 <col:62, col:63> 'uint32_t':'unsigned int' <IntegralCast> part_of_explicit_cast
|   |     |   `-UnaryOperator 0x563f2eb88568 <col:62, col:63> 'int' prefix '-'
|   |     |     `-IntegerLiteral 0x563f2eb88548 <col:63> 'int' 1
|   |     `-ImplicitCastExpr 0x563f2eb88650 <col:66> 'uint32_t':'unsigned int' <IntegralCast>
|   |       `-IntegerLiteral 0x563f2eb885d0 <col:66> 'int' 0
|   |-CStyleCastExpr 0x563f2eb886b0 <line:224:9, col:16> 'void' <ToVoid>
|   | `-DeclRefExpr 0x563f2eb88680 <col:16> 'uint32_t':'unsigned int' lvalue Var 0x563f2eb88440 'val' 'uint32_t':'unsigned int'
|   `-ParenExpr 0x563f2eb88b48 <line:225:9, col:181> 'void'
|     `-ConditionalOperator 0x563f2eb88b18 <col:10, col:180> 'void'
|       |-CXXStaticCastExpr 0x563f2eb887c8 <col:10, col:50> 'bool' static_cast<_Bool> <NoOp>
|       | `-BinaryOperator 0x563f2eb88798 <col:30, col:49> 'bool' '=='
|       |   |-ImplicitCastExpr 0x563f2eb88780 <col:30> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-DeclRefExpr 0x563f2eb886d8 <col:30> 'uint32_t':'unsigned int' lvalue Var 0x563f2eb88440 'val' 'uint32_t':'unsigned int'
|       |   `-CStyleCastExpr 0x563f2eb88758 <col:37, col:49> 'uint32_t':'unsigned int' <NoOp>
|       |     `-ImplicitCastExpr 0x563f2eb88740 <col:48, col:49> 'uint32_t':'unsigned int' <IntegralCast> part_of_explicit_cast
|       |       `-UnaryOperator 0x563f2eb88718 <col:48, col:49> 'int' prefix '-'
|       |         `-IntegerLiteral 0x563f2eb886f8 <col:49> 'int' 1
|       |-CXXFunctionalCastExpr 0x563f2eb88828 <col:54, col:61> 'void' functional cast to void <ToVoid>
|       | `-IntegerLiteral 0x563f2eb88808 <col:60> 'int' 0
|       `-CallExpr 0x563f2eb88a78 <col:65, col:180> 'void'
|         |-ImplicitCastExpr 0x563f2eb88a60 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x563f2eb88a40 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x563f2e5515c0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|         |-ImplicitCastExpr 0x563f2eb88ab8 <col:80> 'const char *' <ArrayToPointerDecay>
|         | `-StringLiteral 0x563f2eb88918 <col:80> 'const char [21]' lvalue "val == (uint32_t) -1"
|         |-ImplicitCastExpr 0x563f2eb88ad0 <col:104> 'const char *' <ArrayToPointerDecay>
|         | `-StringLiteral 0x563f2eb88948 <col:104> 'const char [35]' lvalue "../dummy_inc/click/routerthread.hh"
|         |-ImplicitCastExpr 0x563f2eb88ae8 <col:142> 'unsigned int' <IntegralCast>
|         | `-IntegerLiteral 0x563f2eb88988 <col:142> 'int' 225
|         `-ImplicitCastExpr 0x563f2eb88b00 <col:147, col:161> 'const char *' <ArrayToPointerDecay>
|           `-UnaryOperator 0x563f2eb88a28 <col:147, col:161> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|             `-PredefinedExpr 0x563f2eb88a10 <col:161> 'const char [41]' lvalue __PRETTY_FUNCTION__
|               `-StringLiteral 0x563f2eb889d0 <col:161> 'const char [41]' lvalue "void RouterThread::driver_unlock_tasks()"
|-CXXMethodDecl 0x563f2eb86390 <line:228:5, col:37> col:17 run_tasks 'void (int)' inline
| `-ParmVarDecl 0x563f2eb86300 <col:27, col:31> col:31 ntasks 'int'
|-CXXMethodDecl 0x563f2eb86458 <line:229:5, col:33> col:17 process_pending 'void ()' inline
|-CXXMethodDecl 0x563f2eb86518 <line:230:5, col:24> col:17 run_os 'void ()' inline
|-CXXMethodDecl 0x563f2eb865d8 <line:238:5, col:45> col:24 used running_in_interrupt 'bool ()' static inline
|-CXXMethodDecl 0x563f2eb86698 <line:239:5, col:45> col:17 used current_thread_is_running 'bool () const' inline
|-CXXMethodDecl 0x563f2eb86758 <line:240:5, col:53> col:17 current_thread_is_running_cleanup 'bool () const' inline
|-FriendDecl 0x563f2eb86850 <line:242:5, col:18> col:12 'class Task':'Task'
|-FriendDecl 0x563f2eb868b0 <line:243:5, col:18> col:12 'class Master':'Master'
|-FriendDecl 0x563f2eb86940 <line:245:5, col:18> col:12 'class SelectSet':'SelectSet'
|-CXXConstructorDecl 0x563f2eb86d08 <line:28:7> col:7 implicit RouterThread 'void (const RouterThread &)' inline default noexcept-unevaluated 0x563f2eb86d08
| `-ParmVarDecl 0x563f2eb86e18 <col:7> col:7 'const RouterThread &'
`-CXXMethodDecl 0x563f2eb874d8 <col:7> col:7 implicit operator= 'RouterThread &(const RouterThread &)' inline default noexcept-unevaluated 0x563f2eb874d8
  `-ParmVarDecl 0x563f2eb875e8 <col:7> col:7 'const RouterThread &'

Layout: <CGRecordLayout
  LLVMType:%class.RouterThread = type { %struct.TaskLink, i8, [7 x i8], %class.TimerSet, %class.SelectSet, [32 x i8], %class.Spinlock, %class.atomic_uint32_t, %class.atomic_uint32_t, %"union.Task::Pending", %"union.Task::Pending"*, %class.SpinlockIRQ, [31 x i8], %class.Master*, i32, i8, i32, i32, [40 x i8] }
  NonVirtualBaseLLVMType:%class.RouterThread.base = type { %struct.TaskLink, i8, [7 x i8], %class.TimerSet, %class.SelectSet, [32 x i8], %class.Spinlock, %class.atomic_uint32_t, %class.atomic_uint32_t, %"union.Task::Pending", %"union.Task::Pending"*, %class.SpinlockIRQ, [31 x i8], %class.Master*, i32, i8, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563f2eb321f0 prev 0x563f2ea16cb0 <../dummy_inc/click/task.hh:49:1, line:371:1> line:49:7 referenced class Task definition
|-DefinitionData has_user_declared_ctor can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-private 'TaskLink'
|-CXXRecordDecl 0x563f2eb32328 <col:1, col:7> col:7 implicit referenced class Task
|-AccessSpecDecl 0x563f2eb323b8 <col:33, col:39> col:33 public
|-EnumDecl 0x563f2eb323e0 <line:52:5, col:50> col:5
| |-EnumConstantDecl 0x563f2eb32520 <col:12, col:26> col:12 referenced STRIDE1 'Task::(anonymous enum at ../dummy_inc/click/task.hh:52:5)'
| | `-ConstantExpr 0x563f2eb32500 <col:22, col:26> 'unsigned int' Int: 65536
| |   `-BinaryOperator 0x563f2eb324e0 <col:22, col:26> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x563f2eb324a0 <col:22> 'unsigned int' 1
| |     `-IntegerLiteral 0x563f2eb324c0 <col:26> 'int' 16
| `-EnumConstantDecl 0x563f2eb325f0 <col:30, col:47> col:30 referenced MAX_STRIDE 'Task::(anonymous enum at ../dummy_inc/click/task.hh:52:5)'
|   `-ConstantExpr 0x563f2eb325d0 <col:43, col:47> 'unsigned int' Int: 2147483648
|     `-BinaryOperator 0x563f2eb325b0 <col:43, col:47> 'unsigned int' '<<'
|       |-IntegerLiteral 0x563f2eb32570 <col:43> 'unsigned int' 1
|       `-IntegerLiteral 0x563f2eb32590 <col:47> 'int' 31
|-EnumDecl 0x563f2eb32640 <line:53:5, col:57> col:5
| |-EnumConstantDecl 0x563f2eb32780 <col:12, col:29> col:12 referenced MAX_TICKETS 'Task::(anonymous enum at ../dummy_inc/click/task.hh:53:5)'
| | `-ImplicitCastExpr 0x563f2eb328a0 <col:26, col:29> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563f2eb32760 <col:26, col:29> 'int' Int: 32768
| |     `-BinaryOperator 0x563f2eb32740 <col:26, col:29> 'int' '<<'
| |       |-IntegerLiteral 0x563f2eb32700 <col:26> 'int' 1
| |       `-IntegerLiteral 0x563f2eb32720 <col:29> 'int' 15
| `-EnumConstantDecl 0x563f2eb32850 <col:33, col:54> col:33 DEFAULT_TICKETS 'Task::(anonymous enum at ../dummy_inc/click/task.hh:53:5)'
|   `-ImplicitCastExpr 0x563f2eb328b8 <col:51, col:54> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x563f2eb32830 <col:51, col:54> 'int' Int: 1024
|       `-BinaryOperator 0x563f2eb32810 <col:51, col:54> 'int' '<<'
|         |-IntegerLiteral 0x563f2eb327d0 <col:51> 'int' 1
|         `-IntegerLiteral 0x563f2eb327f0 <col:54> 'int' 10
|-CXXConstructorDecl 0x563f2eb32a88 <line:75:5, col:48> col:12 Task 'void (TaskCallback, void *)' inline
| |-ParmVarDecl 0x563f2eb328e0 <col:17, col:30> col:30 f 'TaskCallback':'bool (*)(Task *, void *)'
| `-ParmVarDecl 0x563f2eb32960 <col:33, col:39> col:39 user_data 'void *'
|-CXXConstructorDecl 0x563f2eb32be0 <line:86:5, col:27> col:12 Task 'void (Element *)' inline
| `-ParmVarDecl 0x563f2eb32b50 <col:17, col:26> col:26 e 'Element *'
|-CXXDestructorDecl 0x563f2eb32cd8 <line:91:5, col:11> col:5 ~Task 'void ()' noexcept-unevaluated 0x563f2eb32cd8
|-CXXMethodDecl 0x563f2eb32e68 <line:98:5, line:100:5> line:98:25 callback 'TaskCallback () const' inline
| `-CompoundStmt 0x563f2eb35fd8 <col:42, line:100:5>
|   `-ReturnStmt 0x563f2eb35fc8 <line:99:9, col:16>
|     `-ImplicitCastExpr 0x563f2eb35fb0 <col:16> 'TaskCallback':'bool (*)(Task *, void *)' <LValueToRValue>
|       `-MemberExpr 0x563f2eb35f80 <col:16> 'const TaskCallback':'bool (*const)(Task *, void *)' lvalue ->_hook 0x563f2eb34c90
|         `-CXXThisExpr 0x563f2eb35f70 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x563f2eb32f30 <line:103:5, line:105:5> line:103:18 user_data 'void *() const' inline
| `-CompoundStmt 0x563f2eb36058 <col:36, line:105:5>
|   `-ReturnStmt 0x563f2eb36048 <line:104:9, col:16>
|     `-ImplicitCastExpr 0x563f2eb36030 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x563f2eb36000 <col:16> 'void *const' lvalue ->_thunk 0x563f2eb34cf8
|         `-CXXThisExpr 0x563f2eb35ff0 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x563f2eb32ff0 <line:108:5, line:110:5> line:108:21 element 'Element *() const' inline
| `-CompoundStmt 0x563f2eb360d8 <col:37, line:110:5>
|   `-ReturnStmt 0x563f2eb360c8 <line:109:9, col:16>
|     `-ImplicitCastExpr 0x563f2eb360b0 <col:16> 'Element *' <LValueToRValue>
|       `-MemberExpr 0x563f2eb36080 <col:16> 'Element *const' lvalue ->_owner 0x563f2eb34db8
|         `-CXXThisExpr 0x563f2eb36070 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x563f2eb330b0 <line:114:5, col:31> col:17 initialized 'bool () const' inline
|-CXXMethodDecl 0x563f2eb33178 <line:123:5, col:33> col:16 home_thread_id 'int () const' inline
|-CXXMethodDecl 0x563f2eb33238 <line:132:5, col:35> col:26 thread 'RouterThread *() const' inline
|-CXXMethodDecl 0x563f2eb332f8 <line:135:5, line:137:5> line:135:20 router 'Router *() const' inline
| `-CompoundStmt 0x563f2eb361c0 <col:35, line:137:5>
|   `-ReturnStmt 0x563f2eb361b0 <line:136:9, col:31>
|     `-CXXMemberCallExpr 0x563f2eb36178 <col:16, col:31> 'Router *'
|       `-MemberExpr 0x563f2eb36148 <col:16, col:24> '<bound member function type>' ->router 0x563f2ea294c0
|         `-ImplicitCastExpr 0x563f2eb36198 <col:16> 'const Element *' <NoOp>
|           `-ImplicitCastExpr 0x563f2eb36130 <col:16> 'Element *' <LValueToRValue>
|             `-MemberExpr 0x563f2eb36100 <col:16> 'Element *const' lvalue ->_owner 0x563f2eb34db8
|               `-CXXThisExpr 0x563f2eb360f0 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x563f2eb333b8 <line:140:5, col:22> col:13 master 'Master *() const'
|-CXXMethodDecl 0x563f2eb33578 <line:159:5, col:50> col:10 initialize 'void (Element *, bool)'
| |-ParmVarDecl 0x563f2eb33468 <col:21, col:30> col:30 owner 'Element *'
| `-ParmVarDecl 0x563f2eb334e0 <col:37, col:42> col:42 schedule 'bool'
|-CXXMethodDecl 0x563f2eb33788 <line:169:5, col:50> col:10 initialize 'void (Router *, bool)'
| |-ParmVarDecl 0x563f2eb33638 <col:21, col:29> col:29 router 'Router *'
| `-ParmVarDecl 0x563f2eb336b0 <col:37, col:42> col:42 schedule 'bool'
|-CXXMethodDecl 0x563f2eb33858 <line:179:5, line:181:5> line:179:17 scheduled 'bool () const' inline
| `-CompoundStmt 0x563f2eb362d0 <col:35, line:181:5>
|   `-ReturnStmt 0x563f2eb362c0 <line:180:9, col:24>
|     `-ImplicitCastExpr 0x563f2eb362a8 <col:16, col:24> 'bool' <IntegralToBoolean>
|       `-ImplicitCastExpr 0x563f2eb36290 <col:16, col:24> 'uint8_t':'unsigned char' <LValueToRValue>
|         `-MemberExpr 0x563f2eb36260 <col:16, col:24> 'const uint8_t':'const unsigned char' lvalue .is_scheduled 0x563f2eb348c8
|           `-MemberExpr 0x563f2eb36218 <col:16, col:24> 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x563f2eb349e8
|             `-MemberExpr 0x563f2eb361e8 <col:16> 'const union Status':'const Task::Status' lvalue ->_status 0x563f2eb34c18
|               `-CXXThisExpr 0x563f2eb361d8 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x563f2eb33918 <line:190:5, line:192:5> line:190:17 unschedule 'void ()' inline
| `-CompoundStmt 0x563f2eb363e8 <col:30, line:192:5>
|   `-BinaryOperator 0x563f2eb363c8 <line:191:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x563f2eb36370 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x563f2eb348c8
|     | `-MemberExpr 0x563f2eb36328 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x563f2eb349e8
|     |   `-MemberExpr 0x563f2eb362f8 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x563f2eb34c18
|     |     `-CXXThisExpr 0x563f2eb362e8 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x563f2eb363b0 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x563f2eb363a0 <col:32> 'bool' false
|-CXXMethodDecl 0x563f2eb339d8 <line:201:5, line:206:5> line:201:17 used reschedule 'void ()' inline
| `-CompoundStmt 0x563f2eb36738 <col:30, line:206:5>
|   |-BinaryOperator 0x563f2eb364e0 <line:202:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x563f2eb36488 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x563f2eb348c8
|   | | `-MemberExpr 0x563f2eb36440 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x563f2eb349e8
|   | |   `-MemberExpr 0x563f2eb36410 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x563f2eb34c18
|   | |     `-CXXThisExpr 0x563f2eb36400 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x563f2eb364c8 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x563f2eb364b8 <col:32> 'bool' true
|   |-CallExpr 0x563f2eb36580 <line:203:9, col:21> 'void'
|   | `-ImplicitCastExpr 0x563f2eb36568 <col:9> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563f2eb36548 <col:9> 'void ()' lvalue Function 0x563f2eb24cd0 'click_fence' 'void ()'
|   `-IfStmt 0x563f2eb36720 <line:204:9, line:205:32>
|     |-BinaryOperator 0x563f2eb36660 <line:204:13, col:34> 'bool' '<'
|     | |-ImplicitCastExpr 0x563f2eb36630 <col:13, col:30> 'uintptr_t':'unsigned long' <LValueToRValue>
|     | | `-MemberExpr 0x563f2eb365e0 <col:13, col:30> 'uintptr_t':'unsigned long' lvalue .x 0x563f2eb35028
|     | |   `-MemberExpr 0x563f2eb365b0 <col:13> 'Task::Pending' lvalue ->_pending_nextptr 0x563f2eb350a0
|     | |     `-CXXThisExpr 0x563f2eb365a0 <col:13> 'Task *' implicit this
|     | `-ImplicitCastExpr 0x563f2eb36648 <col:34> 'unsigned long' <IntegralCast>
|     |   `-IntegerLiteral 0x563f2eb36610 <col:34> 'int' 2
|     `-CXXMemberCallExpr 0x563f2eb366e0 <line:205:13, col:32> 'void'
|       |-MemberExpr 0x563f2eb36690 <col:13> '<bound member function type>' ->complete_schedule 0x563f2eb35b10
|       | `-CXXThisExpr 0x563f2eb36680 <col:13> 'Task *' implicit this
|       `-ImplicitCastExpr 0x563f2eb36708 <col:31> 'RouterThread *' <NullToPointer>
|         `-IntegerLiteral 0x563f2eb366c0 <col:31> 'int' 0
|-CXXMethodDecl 0x563f2eb33a98 <line:238:5, line:240:5> line:238:17 fast_reschedule 'void ()' inline
| `-CompoundStmt 0x563f2eb36860 <col:35, line:240:5>
|   `-BinaryOperator 0x563f2eb36840 <line:239:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x563f2eb367e8 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x563f2eb348c8
|     | `-MemberExpr 0x563f2eb367a0 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x563f2eb349e8
|     |   `-MemberExpr 0x563f2eb36770 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x563f2eb34c18
|     |     `-CXXThisExpr 0x563f2eb36760 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x563f2eb36828 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x563f2eb36818 <col:32> 'bool' true
|-CXXMethodDecl 0x563f2eb33b58 <line:250:5, line:253:5> line:250:17 strong_unschedule 'void ()' inline
| `-CompoundStmt 0x563f2eb36a78 <col:37, line:253:5>
|   |-BinaryOperator 0x563f2eb36958 <line:251:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x563f2eb36900 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x563f2eb348c8
|   | | `-MemberExpr 0x563f2eb368b8 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x563f2eb349e8
|   | |   `-MemberExpr 0x563f2eb36888 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x563f2eb34c18
|   | |     `-CXXThisExpr 0x563f2eb36878 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x563f2eb36940 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x563f2eb36930 <col:32> 'bool' false
|   `-BinaryOperator 0x563f2eb36a58 <line:252:9, col:41> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x563f2eb36a00 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_strong_unscheduled 0x563f2eb34928
|     | `-MemberExpr 0x563f2eb369b8 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x563f2eb349e8
|     |   `-MemberExpr 0x563f2eb36988 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x563f2eb34c18
|     |     `-CXXThisExpr 0x563f2eb36978 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x563f2eb36a40 <col:41> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x563f2eb36a30 <col:41> 'bool' true
|-CXXMethodDecl 0x563f2eb33c18 <line:261:5, line:264:5> line:261:17 strong_reschedule 'void ()' inline
| `-CompoundStmt 0x563f2eb36bf8 <col:37, line:264:5>
|   |-BinaryOperator 0x563f2eb36b78 <line:262:9, col:41> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x563f2eb36b20 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_strong_unscheduled 0x563f2eb34928
|   | | `-MemberExpr 0x563f2eb36ad8 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x563f2eb349e8
|   | |   `-MemberExpr 0x563f2eb36aa8 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x563f2eb34c18
|   | |     `-CXXThisExpr 0x563f2eb36a98 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x563f2eb36b60 <col:41> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x563f2eb36b50 <col:41> 'bool' false
|   `-CXXMemberCallExpr 0x563f2eb36bd8 <line:263:9, col:20> 'void'
|     `-MemberExpr 0x563f2eb36ba8 <col:9> '<bound member function type>' ->reschedule 0x563f2eb339d8
|       `-CXXThisExpr 0x563f2eb36b98 <col:9> 'Task *' implicit this
|-CXXMethodDecl 0x563f2eb33d60 <line:275:5, col:39> col:10 move_thread 'void (int)'
| `-ParmVarDecl 0x563f2eb33cd0 <col:22, col:26> col:26 new_thread_id 'int'
|-CXXMethodDecl 0x563f2eb33e30 <line:279:5, col:26> col:16 tickets 'int () const' inline
|-CXXMethodDecl 0x563f2eb33f78 <line:280:5, col:34> col:17 used set_tickets 'void (int)' inline
| `-ParmVarDecl 0x563f2eb33ee8 <col:29, col:33> col:33 n 'int'
|-CXXMethodDecl 0x563f2eb340c8 <line:281:5, col:41> col:17 adjust_tickets 'void (int)' inline
| `-ParmVarDecl 0x563f2eb34038 <col:32, col:36> col:36 delta 'int'
|-CXXMethodDecl 0x563f2eb34190 <line:284:5, col:22> col:17 fire 'bool ()' inline
|-CXXMethodDecl 0x563f2eb34250 <line:299:5, col:64> col:25 hook 'TaskCallback () const' inline
| `-DeprecatedAttr 0x563f2eb342f0 <col:53> "" ""
|-CXXMethodDecl 0x563f2eb34388 <line:300:5, col:58> col:18 thunk 'void *() const' inline
| `-DeprecatedAttr 0x563f2eb34428 <col:47> "" ""
|-AccessSpecDecl 0x563f2eb34498 <line:303:3, col:10> col:3 private
|-FieldDecl 0x563f2eb344d8 <line:310:5, col:14> col:14 referenced _stride 'unsigned int'
|-FieldDecl 0x563f2eb34540 <line:311:5, col:9> col:9 referenced _tickets 'int'
|-CXXRecordDecl 0x563f2eb34590 <line:314:5, line:321:5> line:314:11 union Status definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x563f2eb346a8 <col:5, col:11> col:11 implicit union Status
| |-CXXRecordDecl 0x563f2eb34738 <line:315:9, line:319:9> line:315:9 struct definition
| | |-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | | |-DefaultConstructor exists trivial
| | | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | | |-MoveConstructor exists simple trivial
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial
| | |-FieldDecl 0x563f2eb34868 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
| | |-FieldDecl 0x563f2eb348c8 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
| | |-FieldDecl 0x563f2eb34928 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
| | |-CXXConstructorDecl 0x563f2eb8dbc8 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
| | |-CXXDestructorDecl 0x563f2eb8dca0 <col:9> col:9 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x563f2eb8dca0
| | |-CXXConstructorDecl 0x563f2eb8df58 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x563f2eb8df58
| | | `-ParmVarDecl 0x563f2eb8e068 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
| | `-CXXConstructorDecl 0x563f2eb8e108 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x563f2eb8e108
| |   `-ParmVarDecl 0x563f2eb8e218 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'
| |-FieldDecl 0x563f2eb349e8 <col:9> col:9 implicit referenced 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| |-IndirectFieldDecl 0x563f2eb34a48 <line:316:21> col:21 implicit home_thread_id 'int16_t':'short'
| | |-Field 0x563f2eb349e8 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x563f2eb34868 'home_thread_id' 'int16_t':'short'
| |-IndirectFieldDecl 0x563f2eb34aa0 <line:317:21> col:21 implicit is_scheduled 'uint8_t':'unsigned char'
| | |-Field 0x563f2eb349e8 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x563f2eb348c8 'is_scheduled' 'uint8_t':'unsigned char'
| |-IndirectFieldDecl 0x563f2eb34af8 <line:318:21> col:21 implicit is_strong_unscheduled 'uint8_t':'unsigned char'
| | |-Field 0x563f2eb349e8 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x563f2eb34928 'is_strong_unscheduled' 'uint8_t':'unsigned char'
| |-FieldDecl 0x563f2eb34b50 <line:320:9, col:18> col:18 status 'uint32_t':'unsigned int'
| |-CXXConstructorDecl 0x563f2eb8dad8 <line:314:11> col:11 implicit used Status 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x563f2eb8e438 <col:11>
| |-CXXConstructorDecl 0x563f2eb8dda8 <col:11> col:11 implicit constexpr Status 'void (const Task::Status &)' inline default trivial noexcept-unevaluated 0x563f2eb8dda8
| | `-ParmVarDecl 0x563f2eb8deb8 <col:11> col:11 'const Task::Status &'
| `-CXXConstructorDecl 0x563f2eb8e2b8 <col:11> col:11 implicit constexpr Status 'void (Task::Status &&)' inline default trivial noexcept-unevaluated 0x563f2eb8e2b8
|   `-ParmVarDecl 0x563f2eb8e3c8 <col:11> col:11 'Task::Status &&'
|-FieldDecl 0x563f2eb34c18 <col:5, line:321:7> col:7 referenced _status 'union Status':'Task::Status'
|-FieldDecl 0x563f2eb34c90 <line:323:5, col:18> col:18 referenced _hook 'TaskCallback':'bool (*)(Task *, void *)'
|-FieldDecl 0x563f2eb34cf8 <line:324:5, col:11> col:11 referenced _thunk 'void *'
|-FieldDecl 0x563f2eb34d58 <line:335:5, col:19> col:19 referenced _thread 'RouterThread *'
|-FieldDecl 0x563f2eb34db8 <line:337:5, col:14> col:14 referenced _owner 'Element *'
|-CXXRecordDecl 0x563f2eb34e08 <line:339:5, line:342:5> line:339:11 referenced union Pending definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x563f2eb34f28 <col:5, col:11> col:11 implicit union Pending
| |-FieldDecl 0x563f2eb34fc8 <line:340:9, col:15> col:15 t 'Task *'
| |-FieldDecl 0x563f2eb35028 <line:341:9, col:19> col:19 referenced x 'uintptr_t':'unsigned long'
| |-CXXConstructorDecl 0x563f2eb86fb8 <line:339:11> col:11 implicit constexpr Pending 'void (const Task::Pending &)' inline default trivial noexcept-unevaluated 0x563f2eb86fb8
| | `-ParmVarDecl 0x563f2eb870c8 <col:11> col:11 'const Task::Pending &'
| |-CXXConstructorDecl 0x563f2eb87168 <col:11> col:11 implicit constexpr Pending 'void (Task::Pending &&)' inline default trivial noexcept-unevaluated 0x563f2eb87168
| | `-ParmVarDecl 0x563f2eb87278 <col:11> col:11 'Task::Pending &&'
| |-CXXDestructorDecl 0x563f2eb872e8 <col:11> col:11 implicit ~Pending 'void ()' inline default trivial noexcept-unevaluated 0x563f2eb872e8
| |-CXXMethodDecl 0x563f2eb87b68 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(const Task::Pending &)' inline default trivial noexcept-unevaluated 0x563f2eb87b68
| | `-ParmVarDecl 0x563f2eb87c78 <col:11> col:11 'const Task::Pending &'
| |-CXXMethodDecl 0x563f2eb87ce8 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(Task::Pending &&)' inline default trivial noexcept-unevaluated 0x563f2eb87ce8
| | `-ParmVarDecl 0x563f2eb87df8 <col:11> col:11 'Task::Pending &&'
| `-CXXConstructorDecl 0x563f2eb8e498 <col:11> col:11 implicit used Pending 'void () noexcept' inline default trivial
|   `-CompoundStmt 0x563f2eb8e570 <col:11>
|-FieldDecl 0x563f2eb350a0 <line:343:5, col:13> col:13 referenced _pending_nextptr 'Task::Pending'
|-CXXConstructorDecl 0x563f2eb351e8 <line:345:5, col:23> col:5 Task 'void (const Task &)'
| `-ParmVarDecl 0x563f2eb35128 <col:10, col:22> col:22 x 'const Task &'
|-CXXMethodDecl 0x563f2eb35398 <line:346:5, col:34> col:11 operator= 'Task &(const Task &)'
| `-ParmVarDecl 0x563f2eb352a8 <col:21, col:33> col:33 x 'const Task &'
|-CXXMethodDecl 0x563f2eb354d0 <line:347:5, col:18> col:10 cleanup 'void ()'
|-CXXMethodDecl 0x563f2eb35590 <line:352:5, col:37> col:17 used on_scheduled_list 'bool () const' inline
|-CXXMethodDecl 0x563f2eb35650 <line:353:5, line:355:5> line:353:17 on_pending_list 'bool () const' inline
| `-CompoundStmt 0x563f2eb36d08 <col:41, line:355:5>
|   `-ReturnStmt 0x563f2eb36cf8 <line:354:9, col:38>
|     `-BinaryOperator 0x563f2eb36cd8 <col:16, col:38> 'bool' '!='
|       |-ImplicitCastExpr 0x563f2eb36ca8 <col:16, col:33> 'uintptr_t':'unsigned long' <LValueToRValue>
|       | `-MemberExpr 0x563f2eb36c58 <col:16, col:33> 'const uintptr_t':'const unsigned long' lvalue .x 0x563f2eb35028
|       |   `-MemberExpr 0x563f2eb36c28 <col:16> 'const Task::Pending' lvalue ->_pending_nextptr 0x563f2eb350a0
|       |     `-CXXThisExpr 0x563f2eb36c18 <col:16> 'const Task *' implicit this
|       `-ImplicitCastExpr 0x563f2eb36cc0 <col:38> 'unsigned long' <IntegralCast>
|         `-IntegerLiteral 0x563f2eb36c88 <col:38> 'int' 0
|-CXXMethodDecl 0x563f2eb35710 <line:356:5, col:33> col:17 needs_cleanup 'bool () const' inline
|-CXXMethodDecl 0x563f2eb35850 <line:361:5, col:33> col:10 add_pending 'void (bool)'
| `-ParmVarDecl 0x563f2eb357c0 <col:22, col:27> col:27 always 'bool'
|-CXXMethodDecl 0x563f2eb359c8 <line:362:5, col:46> col:10 process_pending 'void (RouterThread *)'
| `-ParmVarDecl 0x563f2eb35908 <col:26, col:40> col:40 thread 'RouterThread *'
|-CXXMethodDecl 0x563f2eb35b10 <line:364:5, col:64> col:10 used complete_schedule 'void (RouterThread *)'
| `-ParmVarDecl 0x563f2eb35a80 <col:28, col:42> col:42 process_pending_thread 'RouterThread *'
|-CXXMethodDecl 0x563f2eb35bd8 <line:365:5, col:44> col:17 remove_from_scheduled_list 'void ()' inline
|-CXXMethodDecl 0x563f2eb35da0 <line:367:5, col:55> col:17 error_hook 'bool (Task *, void *)' static
| |-ParmVarDecl 0x563f2eb35c88 <col:28, col:34> col:34 task 'Task *'
| `-ParmVarDecl 0x563f2eb35d08 <col:40, col:46> col:46 user_data 'void *'
|-FriendDecl 0x563f2eb35ea0 <line:369:5, col:18> col:12 'class RouterThread':'RouterThread'
`-FriendDecl 0x563f2eb35f30 <line:370:5, col:18> col:12 'class Master':'Master'

Layout: <CGRecordLayout
  LLVMType:%class.Task = type { %struct.TaskLink.base, i32, i32, %"union.Task::Status", i1 (%class.Task*, i8*)*, i8*, %class.RouterThread*, %class.Element*, %"union.Task::Pending" }
  NonVirtualBaseLLVMType:%class.Task = type { %struct.TaskLink.base, i32, i32, %"union.Task::Status", i1 (%class.Task*, i8*)*, i8*, %class.RouterThread*, %class.Element*, %"union.Task::Pending" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5)
         0 |   TimerCallback callback
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timer
         0 |   int _schedpos1
         8 |   class Timestamp _expiry_s
         8 |     union Timestamp::rep_t _t
         8 |       int64_t x
        16 |   union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5) _hook
        16 |     TimerCallback callback
        24 |   void * _thunk
        32 |   class Element * _owner
        40 |   class RouterThread * _thread
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563f2eb2cf48 <../dummy_inc/click/timer.hh:343:5, line:345:5> line:343:5 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x563f2eb2d078 <line:344:2, col:16> col:16 referenced callback 'TimerCallback':'void (*)(Timer *, void *)'
`-CXXDestructorDecl 0x563f2eb2dba8 <line:343:5> col:5 implicit ~ 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%union.anon.23 = type { void (%class.Timer*, i8*)* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563f2eb297e8 prev 0x563f2ea16d60 <../dummy_inc/click/timer.hh:14:1, line:358:1> line:14:7 class Timer definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x563f2eb298e0 <col:1, col:7> col:7 implicit referenced class Timer
|-AccessSpecDecl 0x563f2eb29970 <col:15, col:21> col:15 public
|-CXXConstructorDecl 0x563f2eb299d0 <line:22:5, col:11> col:5 Timer 'void ()'
|-CXXRecordDecl 0x563f2eb29a78 <line:24:5, line:25:5> line:24:12 referenced struct do_nothing_t definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| `-CXXRecordDecl 0x563f2eb29b98 <col:5, col:12> col:12 implicit struct do_nothing_t
|-CXXConstructorDecl 0x563f2eb29d38 <line:32:5, col:37> col:5 Timer 'void (const Timer::do_nothing_t &)'
| `-ParmVarDecl 0x563f2eb29c78 <col:11, col:31> col:31 unused 'const Timer::do_nothing_t &'
|-CXXConstructorDecl 0x563f2eb29f88 <line:38:5, col:43> col:5 Timer 'void (TimerCallback, void *)'
| |-ParmVarDecl 0x563f2eb29df8 <col:11, col:25> col:25 f 'TimerCallback':'void (*)(Timer *, void *)'
| `-ParmVarDecl 0x563f2eb29e78 <col:28, col:34> col:34 user_data 'void *'
|-CXXConstructorDecl 0x563f2eb2a118 <line:43:5, col:27> col:5 Timer 'void (Element *)'
| `-ParmVarDecl 0x563f2eb2a050 <col:11, col:20> col:20 element 'Element *'
|-CXXConstructorDecl 0x563f2eb2a298 <line:47:5, col:21> col:5 Timer 'void (Task *)'
| `-ParmVarDecl 0x563f2eb2a1d8 <col:11, col:17> col:17 task 'Task *'
|-CXXConstructorDecl 0x563f2eb2a448 <line:52:5, col:25> col:5 Timer 'void (const Timer &)'
| `-ParmVarDecl 0x563f2eb2a388 <col:11, col:24> col:24 x 'const Timer &'
|-CXXDestructorDecl 0x563f2eb2a540 <line:55:5, line:58:5> line:55:12 ~Timer 'void () noexcept' inline
| `-CompoundStmt 0x563f2eb2dd80 <col:21, line:58:5>
|   `-IfStmt 0x563f2eb2dd68 <line:56:2, line:57:17>
|     |-CXXMemberCallExpr 0x563f2eb2dcd0 <line:56:6, col:16> 'bool'
|     | `-MemberExpr 0x563f2eb2dca0 <col:6> '<bound member function type>' ->scheduled 0x563f2eb2ad98
|     |   `-ImplicitCastExpr 0x563f2eb2dcf0 <col:6> 'const Timer *' <NoOp>
|     |     `-CXXThisExpr 0x563f2eb2dc90 <col:6> 'Timer *' implicit this
|     `-CXXMemberCallExpr 0x563f2eb2dd48 <line:57:6, col:17> 'void'
|       `-MemberExpr 0x563f2eb2dd18 <col:6> '<bound member function type>' ->unschedule 0x563f2eb2c3f0
|         `-CXXThisExpr 0x563f2eb2dd08 <col:6> 'Timer *' implicit this
|-CXXMethodDecl 0x563f2eb2a640 <line:62:5, line:65:5> line:62:17 used assign 'void ()' inline
| `-CompoundStmt 0x563f2eb2df20 <col:26, line:65:5>
|   |-BinaryOperator 0x563f2eb2de40 <line:63:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x563f2eb2ddd8 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x563f2eb2d078
|   | | `-MemberExpr 0x563f2eb2dda8 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x563f2eb2d138
|   | |   `-CXXThisExpr 0x563f2eb2dd98 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x563f2eb2de28 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563f2eb2de08 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x563f2eb2d5d8 'do_nothing_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x563f2eb2df00 <line:64:2, col:20> 'void *' lvalue '='
|     |-MemberExpr 0x563f2eb2de70 <col:2> 'void *' lvalue ->_thunk 0x563f2eb2d1b8
|     | `-CXXThisExpr 0x563f2eb2de60 <col:2> 'Timer *' implicit this
|     `-CStyleCastExpr 0x563f2eb2ded8 <col:11, col:20> 'void *' <IntegralToPointer>
|       `-IntegerLiteral 0x563f2eb2dea0 <col:20> 'int' 1
|-CXXMethodDecl 0x563f2eb2a780 <line:68:5, line:71:5> line:68:17 assign 'void (const Timer::do_nothing_t &)' inline
| |-ParmVarDecl 0x563f2eb2a6f0 <col:24, col:44> col:44 used unused 'const Timer::do_nothing_t &'
| `-CompoundStmt 0x563f2eb2e080 <col:52, line:71:5>
|   |-CStyleCastExpr 0x563f2eb2df70 <line:69:2, col:9> 'void' <ToVoid>
|   | `-DeclRefExpr 0x563f2eb2df40 <col:9> 'const Timer::do_nothing_t' lvalue ParmVar 0x563f2eb2a6f0 'unused' 'const Timer::do_nothing_t &'
|   `-CXXMemberCallExpr 0x563f2eb2e060 <line:70:2, col:9> 'void'
|     `-MemberExpr 0x563f2eb2e030 <col:2> '<bound member function type>' ->assign 0x563f2eb2a640
|       `-CXXThisExpr 0x563f2eb2e020 <col:2> 'Timer *' implicit this
|-CXXMethodDecl 0x563f2eb2a950 <line:76:5, line:79:5> line:76:17 assign 'void (TimerCallback, void *)' inline
| |-ParmVarDecl 0x563f2eb2a838 <col:24, col:38> col:38 used f 'TimerCallback':'void (*)(Timer *, void *)'
| |-ParmVarDecl 0x563f2eb2a8b8 <col:41, col:47> col:47 used user_data 'void *'
| `-CompoundStmt 0x563f2eb2e200 <col:58, line:79:5>
|   |-BinaryOperator 0x563f2eb2e148 <line:77:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x563f2eb2e0e0 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x563f2eb2d078
|   | | `-MemberExpr 0x563f2eb2e0b0 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x563f2eb2d138
|   | |   `-CXXThisExpr 0x563f2eb2e0a0 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x563f2eb2e130 <col:19> 'TimerCallback':'void (*)(Timer *, void *)' <LValueToRValue>
|   |   `-DeclRefExpr 0x563f2eb2e110 <col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue ParmVar 0x563f2eb2a838 'f' 'TimerCallback':'void (*)(Timer *, void *)'
|   `-BinaryOperator 0x563f2eb2e1e0 <line:78:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x563f2eb2e178 <col:2> 'void *' lvalue ->_thunk 0x563f2eb2d1b8
|     | `-CXXThisExpr 0x563f2eb2e168 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x563f2eb2e1c8 <col:11> 'void *' <LValueToRValue>
|       `-DeclRefExpr 0x563f2eb2e1a8 <col:11> 'void *' lvalue ParmVar 0x563f2eb2a8b8 'user_data' 'void *'
|-CXXMethodDecl 0x563f2eb2aaa0 <line:84:5, line:87:5> line:84:10 assign 'void (Element *)'
| |-ParmVarDecl 0x563f2eb2aa10 <col:17, col:26> col:26 used element 'Element *'
| `-CompoundStmt 0x563f2eb2e398 <col:35, line:87:5>
|   |-BinaryOperator 0x563f2eb2e2c8 <line:85:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x563f2eb2e260 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x563f2eb2d078
|   | | `-MemberExpr 0x563f2eb2e230 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x563f2eb2d138
|   | |   `-CXXThisExpr 0x563f2eb2e220 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x563f2eb2e2b0 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563f2eb2e290 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x563f2eb2d7b0 'element_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x563f2eb2e378 <line:86:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x563f2eb2e2f8 <col:2> 'void *' lvalue ->_thunk 0x563f2eb2d1b8
|     | `-CXXThisExpr 0x563f2eb2e2e8 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x563f2eb2e360 <col:11> 'void *' <BitCast>
|       `-ImplicitCastExpr 0x563f2eb2e348 <col:11> 'Element *' <LValueToRValue>
|         `-DeclRefExpr 0x563f2eb2e328 <col:11> 'Element *' lvalue ParmVar 0x563f2eb2aa10 'element' 'Element *'
|-CXXMethodDecl 0x563f2eb2abe8 <line:91:5, line:94:5> line:91:10 assign 'void (Task *)'
| |-ParmVarDecl 0x563f2eb2ab58 <col:17, col:23> col:23 used task 'Task *'
| `-CompoundStmt 0x563f2eb2e530 <col:29, line:94:5>
|   |-BinaryOperator 0x563f2eb2e460 <line:92:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x563f2eb2e3f8 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x563f2eb2d078
|   | | `-MemberExpr 0x563f2eb2e3c8 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x563f2eb2d138
|   | |   `-CXXThisExpr 0x563f2eb2e3b8 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x563f2eb2e448 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563f2eb2e428 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x563f2eb2d988 'task_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x563f2eb2e510 <line:93:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x563f2eb2e490 <col:2> 'void *' lvalue ->_thunk 0x563f2eb2d1b8
|     | `-CXXThisExpr 0x563f2eb2e480 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x563f2eb2e4f8 <col:11> 'void *' <BitCast>
|       `-ImplicitCastExpr 0x563f2eb2e4e0 <col:11> 'Task *' <LValueToRValue>
|         `-DeclRefExpr 0x563f2eb2e4c0 <col:11> 'Task *' lvalue ParmVar 0x563f2eb2ab58 'task' 'Task *'
|-CXXMethodDecl 0x563f2eb2acd8 <line:98:5, line:100:5> line:98:17 initialized 'bool () const' inline
| `-CompoundStmt 0x563f2eb2e610 <col:37, line:100:5>
|   `-ReturnStmt 0x563f2eb2e600 <line:99:2, col:19>
|     `-BinaryOperator 0x563f2eb2e5e0 <col:9, col:19> 'bool' '!='
|       |-ImplicitCastExpr 0x563f2eb2e5b0 <col:9> 'Element *' <LValueToRValue>
|       | `-MemberExpr 0x563f2eb2e560 <col:9> 'Element *const' lvalue ->_owner 0x563f2eb2d218
|       |   `-CXXThisExpr 0x563f2eb2e550 <col:9> 'const Timer *' implicit this
|       `-ImplicitCastExpr 0x563f2eb2e5c8 <col:19> 'Element *' <NullToPointer>
|         `-IntegerLiteral 0x563f2eb2e590 <col:19> 'int' 0
|-CXXMethodDecl 0x563f2eb2ad98 <line:103:5, line:105:5> line:103:17 used scheduled 'bool () const' inline
| `-CompoundStmt 0x563f2eb2e6d0 <col:35, line:105:5>
|   `-ReturnStmt 0x563f2eb2e6c0 <line:104:2, col:23>
|     `-BinaryOperator 0x563f2eb2e6a0 <col:9, col:23> 'bool' '!='
|       |-ImplicitCastExpr 0x563f2eb2e688 <col:9> 'int' <LValueToRValue>
|       | `-MemberExpr 0x563f2eb2e638 <col:9> 'const int' lvalue ->_schedpos1 0x563f2eb2ce98
|       |   `-CXXThisExpr 0x563f2eb2e628 <col:9> 'const Timer *' implicit this
|       `-IntegerLiteral 0x563f2eb2e668 <col:23> 'int' 0
|-CXXMethodDecl 0x563f2eb2ae58 <line:116:5, line:118:5> line:116:29 used expiry_steady 'const Timestamp &() const' inline
| `-CompoundStmt 0x563f2eb2e738 <col:51, line:118:5>
|   `-ReturnStmt 0x563f2eb2e728 <line:117:2, col:9>
|     `-MemberExpr 0x563f2eb2e6f8 <col:9> 'const Timestamp' lvalue ->_expiry_s 0x563f2eb2cef8
|       `-CXXThisExpr 0x563f2eb2e6e8 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x563f2eb2af18 <line:131:5, line:136:5> line:131:22 expiry 'Timestamp () const' inline
| `-CompoundStmt 0x563f2eb2ec90 <col:37, line:136:5>
|   `-IfStmt 0x563f2eb2ec68 <line:132:2, line:135:13> has_else
|     |-ImplicitCastExpr 0x563f2eb2e7f8 <line:132:6> 'bool' <MemberPointerToBoolean>
|     | `-ImplicitCastExpr 0x563f2eb2e7e0 <col:6> 'Timestamp::unspecified_bool_type':'Timestamp::seconds_type (Timestamp::*)() const' <UserDefinedConversion>
|     |   `-CXXMemberCallExpr 0x563f2eb2e7c0 <col:6> 'Timestamp::unspecified_bool_type':'Timestamp::seconds_type (Timestamp::*)() const'
|     |     `-MemberExpr 0x563f2eb2e790 <col:6> '<bound member function type>' .operator int (Timestamp::*)() const 0x563f2e9a8e38
|     |       `-MemberExpr 0x563f2eb2e760 <col:6> 'const Timestamp' lvalue ->_expiry_s 0x563f2eb2cef8
|     |         `-CXXThisExpr 0x563f2eb2e750 <col:6> 'const Timer *' implicit this
|     |-ReturnStmt 0x563f2eb2ebd8 <line:133:6, col:72>
|     | `-ExprWithCleanups 0x563f2eb2ebc0 <col:13, col:72> 'Timestamp'
|     |   `-CXXConstructExpr 0x563f2eb2eb90 <col:13, col:72> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|     |     `-MaterializeTemporaryExpr 0x563f2eb2eb78 <col:13, col:72> 'Timestamp' xvalue
|     |       `-CXXOperatorCallExpr 0x563f2eb2eb40 <col:13, col:72> 'Timestamp'
|     |         |-ImplicitCastExpr 0x563f2eb2eb28 <col:45> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|     |         | `-DeclRefExpr 0x563f2eb2eb08 <col:45> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x563f2e9d7610 'operator-' 'Timestamp (Timestamp, const Timestamp &)'
|     |         |-CXXConstructExpr 0x563f2eb2eaa8 <col:13, col:43> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|     |         | `-MaterializeTemporaryExpr 0x563f2eb2ea90 <col:13, col:43> 'Timestamp' xvalue
|     |         |   `-CXXOperatorCallExpr 0x563f2eb2e9b8 <col:13, col:43> 'Timestamp'
|     |         |     |-ImplicitCastExpr 0x563f2eb2e9a0 <col:23> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|     |         |     | `-DeclRefExpr 0x563f2eb2e980 <col:23> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x563f2e9d72d0 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|     |         |     |-CXXConstructExpr 0x563f2eb2e920 <col:13> 'Timestamp' 'void (const Timestamp &) noexcept'
|     |         |     | `-MemberExpr 0x563f2eb2e820 <col:13> 'const Timestamp' lvalue ->_expiry_s 0x563f2eb2cef8
|     |         |     |   `-CXXThisExpr 0x563f2eb2e810 <col:13> 'const Timer *' implicit this
|     |         |     `-MaterializeTemporaryExpr 0x563f2eb2e968 <col:25, col:43> 'const Timestamp' lvalue
|     |         |       `-ImplicitCastExpr 0x563f2eb2e950 <col:25, col:43> 'const Timestamp' <NoOp>
|     |         |         `-CallExpr 0x563f2eb2e900 <col:25, col:43> 'Timestamp'
|     |         |           `-ImplicitCastExpr 0x563f2eb2e8e8 <col:25, col:36> 'Timestamp (*)()' <FunctionToPointerDecay>
|     |         |             `-DeclRefExpr 0x563f2eb2e888 <col:25, col:36> 'Timestamp ()' lvalue CXXMethod 0x563f2e9ca930 'recent' 'Timestamp ()'
|     |         `-MaterializeTemporaryExpr 0x563f2eb2eaf0 <col:47, col:72> 'const Timestamp' lvalue
|     |           `-ImplicitCastExpr 0x563f2eb2ead8 <col:47, col:72> 'const Timestamp' <NoOp>
|     |             `-CallExpr 0x563f2eb2ea70 <col:47, col:72> 'Timestamp'
|     |               `-ImplicitCastExpr 0x563f2eb2ea58 <col:47, col:58> 'Timestamp (*)()' <FunctionToPointerDecay>
|     |                 `-DeclRefExpr 0x563f2eb2ea28 <col:47, col:58> 'Timestamp ()' lvalue CXXMethod 0x563f2e825e80 'recent_steady' 'Timestamp ()'
|     `-ReturnStmt 0x563f2eb2ec58 <line:135:6, col:13>
|       `-CXXConstructExpr 0x563f2eb2ec28 <col:13> 'Timestamp' 'void (const Timestamp &) noexcept'
|         `-MemberExpr 0x563f2eb2ebf8 <col:13> 'const Timestamp' lvalue ->_expiry_s 0x563f2eb2cef8
|           `-CXXThisExpr 0x563f2eb2ebe8 <col:13> 'const Timer *' implicit this
|-CXXMethodDecl 0x563f2eb2afd8 <line:139:5, line:141:5> line:139:20 router 'Router *() const' inline
| `-CompoundStmt 0x563f2eb2ed78 <col:35, line:141:5>
|   `-ReturnStmt 0x563f2eb2ed68 <line:140:2, col:24>
|     `-CXXMemberCallExpr 0x563f2eb2ed30 <col:9, col:24> 'Router *'
|       `-MemberExpr 0x563f2eb2ed00 <col:9, col:17> '<bound member function type>' ->router 0x563f2ea294c0
|         `-ImplicitCastExpr 0x563f2eb2ed50 <col:9> 'const Element *' <NoOp>
|           `-ImplicitCastExpr 0x563f2eb2ece8 <col:9> 'Element *' <LValueToRValue>
|             `-MemberExpr 0x563f2eb2ecb8 <col:9> 'Element *const' lvalue ->_owner 0x563f2eb2d218
|               `-CXXThisExpr 0x563f2eb2eca8 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x563f2eb2b098 <line:144:5, line:146:5> line:144:21 element 'Element *() const' inline
| `-CompoundStmt 0x563f2eb2edf8 <col:37, line:146:5>
|   `-ReturnStmt 0x563f2eb2ede8 <line:145:2, col:9>
|     `-ImplicitCastExpr 0x563f2eb2edd0 <col:9> 'Element *' <LValueToRValue>
|       `-MemberExpr 0x563f2eb2eda0 <col:9> 'Element *const' lvalue ->_owner 0x563f2eb2d218
|         `-CXXThisExpr 0x563f2eb2ed90 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x563f2eb2b158 <line:149:5, line:151:5> line:149:26 thread 'RouterThread *() const' inline
| `-CompoundStmt 0x563f2eb2ee78 <col:41, line:151:5>
|   `-ReturnStmt 0x563f2eb2ee68 <line:150:2, col:9>
|     `-ImplicitCastExpr 0x563f2eb2ee50 <col:9> 'RouterThread *' <LValueToRValue>
|       `-MemberExpr 0x563f2eb2ee20 <col:9> 'RouterThread *const' lvalue ->_thread 0x563f2eb2d278
|         `-CXXThisExpr 0x563f2eb2ee10 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x563f2eb2b220 <line:154:5, col:26> col:9 home_thread_id 'int () const'
|-CXXMethodDecl 0x563f2eb2b418 <line:171:5, col:55> col:10 initialize 'void (Element *, bool)'
| |-ParmVarDecl 0x563f2eb2b2d0 <col:21, col:30> col:30 owner 'Element *'
| `-ParmVarDecl 0x563f2eb2b348 <col:37, col:50> col:42 quiet 'bool' cinit
|   `-CXXBoolLiteralExpr 0x563f2eb2db98 <col:50> 'bool' false
|-CXXMethodDecl 0x563f2eb2b598 <line:181:5, col:35> col:10 initialize 'void (Router *)'
| `-ParmVarDecl 0x563f2eb2b4d8 <col:21, col:29> col:29 router 'Router *'
|-CXXMethodDecl 0x563f2eb2b6e0 <line:191:5, col:57> col:10 used schedule_at_steady 'void (const Timestamp &)'
| `-ParmVarDecl 0x563f2eb2b650 <col:29, col:46> col:46 when_steady 'const Timestamp &'
|-CXXMethodDecl 0x563f2eb2b828 <line:197:5, col:59> col:10 reschedule_at_steady 'void (const Timestamp &)'
| `-ParmVarDecl 0x563f2eb2b798 <col:31, col:48> col:48 when_steady 'const Timestamp &'
|-CXXMethodDecl 0x563f2eb2b970 <line:210:5, col:50> col:17 used schedule_at 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x563f2eb2b8e0 <col:29, col:46> col:46 when 'const Timestamp &'
|-CXXMethodDecl 0x563f2eb2bab8 <line:216:5, col:52> col:17 reschedule_at 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x563f2eb2ba28 <col:31, col:48> col:48 when 'const Timestamp &'
|-CXXMethodDecl 0x563f2eb2bb80 <line:221:5, line:223:5> line:221:17 schedule_now 'void ()' inline
| `-CompoundStmt 0x563f2eb2efe0 <col:32, line:223:5>
|   `-ExprWithCleanups 0x563f2eb2efc8 <line:222:2, col:47> 'void'
|     `-CXXMemberCallExpr 0x563f2eb2ef70 <col:2, col:47> 'void'
|       |-MemberExpr 0x563f2eb2eea0 <col:2> '<bound member function type>' ->schedule_at_steady 0x563f2eb2b6e0
|       | `-CXXThisExpr 0x563f2eb2ee90 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x563f2eb2efb0 <col:21, col:46> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x563f2eb2ef98 <col:21, col:46> 'const Timestamp' <NoOp>
|           `-CallExpr 0x563f2eb2ef50 <col:21, col:46> 'Timestamp'
|             `-ImplicitCastExpr 0x563f2eb2ef38 <col:21, col:32> 'Timestamp (*)()' <FunctionToPointerDecay>
|               `-DeclRefExpr 0x563f2eb2ef08 <col:21, col:32> 'Timestamp ()' lvalue CXXMethod 0x563f2e825e80 'recent_steady' 'Timestamp ()'
|-CXXMethodDecl 0x563f2eb2bcc0 <line:233:5, col:47> col:10 used schedule_after 'void (const Timestamp &)'
| `-ParmVarDecl 0x563f2eb2bc30 <col:25, col:42> col:42 delta 'const Timestamp &'
|-CXXMethodDecl 0x563f2eb2be08 <line:239:5, line:241:5> line:239:17 used schedule_after_sec 'void (uint32_t)' inline
| |-ParmVarDecl 0x563f2eb2bd78 <col:36, col:45> col:45 used delta_sec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x563f2eb2f168 <col:56, line:241:5>
|   `-ExprWithCleanups 0x563f2eb2f150 <line:240:2, col:40> 'void'
|     `-CXXMemberCallExpr 0x563f2eb2f0f8 <col:2, col:40> 'void'
|       |-MemberExpr 0x563f2eb2f008 <col:2> '<bound member function type>' ->schedule_after 0x563f2eb2bcc0
|       | `-CXXThisExpr 0x563f2eb2eff8 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x563f2eb2f138 <col:17, col:39> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x563f2eb2f120 <col:17, col:39> 'const Timestamp' <NoOp>
|           `-CXXTemporaryObjectExpr 0x563f2eb2f0b8 <col:17, col:39> 'Timestamp' 'void (unsigned int, uint32_t)'
|             |-ImplicitCastExpr 0x563f2eb2f088 <col:27> 'uint32_t':'unsigned int' <LValueToRValue>
|             | `-DeclRefExpr 0x563f2eb2f048 <col:27> 'uint32_t':'unsigned int' lvalue ParmVar 0x563f2eb2bd78 'delta_sec' 'uint32_t':'unsigned int'
|             `-ImplicitCastExpr 0x563f2eb2f0a0 <col:38> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x563f2eb2f068 <col:38> 'int' 0
|-CXXMethodDecl 0x563f2eb2bf50 <line:247:5, line:249:5> line:247:17 used schedule_after_msec 'void (uint32_t)' inline
| |-ParmVarDecl 0x563f2eb2bec0 <col:37, col:46> col:46 used delta_msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x563f2eb2f3d8 <col:58, line:249:5>
|   `-ExprWithCleanups 0x563f2eb2f3c0 <line:248:2, col:49> 'void'
|     `-CXXMemberCallExpr 0x563f2eb2f368 <col:2, col:49> 'void'
|       |-MemberExpr 0x563f2eb2f190 <col:2> '<bound member function type>' ->schedule_after 0x563f2eb2bcc0
|       | `-CXXThisExpr 0x563f2eb2f180 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x563f2eb2f3a8 <col:17, col:48> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x563f2eb2f390 <col:17, col:48> 'const Timestamp' <NoOp>
|           `-CallExpr 0x563f2eb2f310 <col:17, col:48> 'Timestamp'
|             |-ImplicitCastExpr 0x563f2eb2f2f8 <col:17, col:28> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x563f2eb2f268 <col:17, col:28> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x563f2e9aac28 'make_msec' 'Timestamp (Timestamp::value_type)'
|             `-ImplicitCastExpr 0x563f2eb2f350 <col:38> 'Timestamp::value_type':'long' <IntegralCast>
|               `-ImplicitCastExpr 0x563f2eb2f338 <col:38> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x563f2eb2f248 <col:38> 'uint32_t':'unsigned int' lvalue ParmVar 0x563f2eb2bec0 'delta_msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x563f2eb2c098 <line:259:5, line:261:5> line:259:17 reschedule_after 'void (const Timestamp &)' inline
| |-ParmVarDecl 0x563f2eb2c008 <col:34, col:51> col:51 used delta 'const Timestamp &'
| `-CompoundStmt 0x563f2eb2f5b8 <col:58, line:261:5>
|   `-ExprWithCleanups 0x563f2eb2f5a0 <line:260:2, col:38> 'void'
|     `-CXXMemberCallExpr 0x563f2eb2f548 <col:2, col:38> 'void'
|       |-MemberExpr 0x563f2eb2f400 <col:2> '<bound member function type>' ->schedule_at_steady 0x563f2eb2b6e0
|       | `-CXXThisExpr 0x563f2eb2f3f0 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x563f2eb2f588 <col:21, col:33> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x563f2eb2f570 <col:21, col:33> 'const Timestamp' <NoOp>
|           `-CXXOperatorCallExpr 0x563f2eb2f510 <col:21, col:33> 'Timestamp'
|             |-ImplicitCastExpr 0x563f2eb2f4f8 <col:31> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x563f2eb2f4d8 <col:31> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x563f2e9d72d0 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|             |-CXXConstructExpr 0x563f2eb2f4a8 <col:21> 'Timestamp' 'void (const Timestamp &) noexcept'
|             | `-ImplicitCastExpr 0x563f2eb2f490 <col:21> 'const Timestamp' lvalue <NoOp>
|             |   `-MemberExpr 0x563f2eb2f440 <col:21> 'Timestamp' lvalue ->_expiry_s 0x563f2eb2cef8
|             |     `-CXXThisExpr 0x563f2eb2f430 <col:21> 'Timer *' implicit this
|             `-DeclRefExpr 0x563f2eb2f470 <col:33> 'const Timestamp' lvalue ParmVar 0x563f2eb2c008 'delta' 'const Timestamp &'
|-CXXMethodDecl 0x563f2eb2c1e0 <line:268:5, line:270:5> line:268:17 used reschedule_after_sec 'void (uint32_t)' inline
| |-ParmVarDecl 0x563f2eb2c150 <col:38, col:47> col:47 used delta_sec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x563f2eb2f890 <col:58, line:270:5>
|   `-ExprWithCleanups 0x563f2eb2f878 <line:269:2, col:79> 'void'
|     `-CXXMemberCallExpr 0x563f2eb2f820 <col:2, col:79> 'void'
|       |-MemberExpr 0x563f2eb2f5e0 <col:2> '<bound member function type>' ->schedule_at_steady 0x563f2eb2b6e0
|       | `-CXXThisExpr 0x563f2eb2f5d0 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x563f2eb2f860 <col:21, col:78> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x563f2eb2f848 <col:21, col:78> 'const Timestamp' <NoOp>
|           `-CXXTemporaryObjectExpr 0x563f2eb2f7e0 <col:21, col:78> 'Timestamp' 'void (unsigned int, uint32_t)'
|             |-BinaryOperator 0x563f2eb2f718 <col:31, col:49> 'unsigned int' '+'
|             | |-ImplicitCastExpr 0x563f2eb2f700 <col:31, col:45> 'unsigned int' <IntegralCast>
|             | | `-CXXMemberCallExpr 0x563f2eb2f690 <col:31, col:45> 'Timestamp::seconds_type':'int'
|             | |   `-MemberExpr 0x563f2eb2f660 <col:31, col:41> '<bound member function type>' .sec 0x563f2e827978
|             | |     `-ImplicitCastExpr 0x563f2eb2f6b0 <col:31> 'const Timestamp' lvalue <NoOp>
|             | |       `-MemberExpr 0x563f2eb2f630 <col:31> 'Timestamp' lvalue ->_expiry_s 0x563f2eb2cef8
|             | |         `-CXXThisExpr 0x563f2eb2f620 <col:31> 'Timer *' implicit this
|             | `-ImplicitCastExpr 0x563f2eb2f6e8 <col:49> 'uint32_t':'unsigned int' <LValueToRValue>
|             |   `-DeclRefExpr 0x563f2eb2f6c8 <col:49> 'uint32_t':'unsigned int' lvalue ParmVar 0x563f2eb2c150 'delta_sec' 'uint32_t':'unsigned int'
|             `-CXXMemberCallExpr 0x563f2eb2f7a8 <col:60, col:77> 'uint32_t':'unsigned int'
|               `-MemberExpr 0x563f2eb2f778 <col:60, col:70> '<bound member function type>' .subsec 0x563f2e828070
|                 `-ImplicitCastExpr 0x563f2eb2f7c8 <col:60> 'const Timestamp' lvalue <NoOp>
|                   `-MemberExpr 0x563f2eb2f748 <col:60> 'Timestamp' lvalue ->_expiry_s 0x563f2eb2cef8
|                     `-CXXThisExpr 0x563f2eb2f738 <col:60> 'Timer *' implicit this
|-CXXMethodDecl 0x563f2eb2c328 <line:277:5, line:279:5> line:277:17 used reschedule_after_msec 'void (uint32_t)' inline
| |-ParmVarDecl 0x563f2eb2c298 <col:39, col:48> col:48 used delta_msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x563f2eb2fbc8 <col:60, line:279:5>
|   `-ExprWithCleanups 0x563f2eb2fbb0 <line:278:2, col:65> 'void'
|     `-CXXMemberCallExpr 0x563f2eb2fb58 <col:2, col:65> 'void'
|       |-MemberExpr 0x563f2eb2f8b8 <col:2> '<bound member function type>' ->schedule_at_steady 0x563f2eb2b6e0
|       | `-CXXThisExpr 0x563f2eb2f8a8 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x563f2eb2fb98 <col:21, col:64> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x563f2eb2fb80 <col:21, col:64> 'const Timestamp' <NoOp>
|           `-CXXOperatorCallExpr 0x563f2eb2fb20 <col:21, col:64> 'Timestamp'
|             |-ImplicitCastExpr 0x563f2eb2fb08 <col:31> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x563f2eb2fae8 <col:31> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x563f2e9d72d0 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|             |-CXXConstructExpr 0x563f2eb2fa88 <col:21> 'Timestamp' 'void (const Timestamp &) noexcept'
|             | `-ImplicitCastExpr 0x563f2eb2fa70 <col:21> 'const Timestamp' lvalue <NoOp>
|             |   `-MemberExpr 0x563f2eb2f8f8 <col:21> 'Timestamp' lvalue ->_expiry_s 0x563f2eb2cef8
|             |     `-CXXThisExpr 0x563f2eb2f8e8 <col:21> 'Timer *' implicit this
|             `-MaterializeTemporaryExpr 0x563f2eb2fad0 <col:33, col:64> 'const Timestamp' lvalue
|               `-ImplicitCastExpr 0x563f2eb2fab8 <col:33, col:64> 'const Timestamp' <NoOp>
|                 `-CallExpr 0x563f2eb2fa18 <col:33, col:64> 'Timestamp'
|                   |-ImplicitCastExpr 0x563f2eb2fa00 <col:33, col:44> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|                   | `-DeclRefExpr 0x563f2eb2f9d0 <col:33, col:44> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x563f2e9aac28 'make_msec' 'Timestamp (Timestamp::value_type)'
|                   `-ImplicitCastExpr 0x563f2eb2fa58 <col:54> 'Timestamp::value_type':'long' <IntegralCast>
|                     `-ImplicitCastExpr 0x563f2eb2fa40 <col:54> 'uint32_t':'unsigned int' <LValueToRValue>
|                       `-DeclRefExpr 0x563f2eb2f9b0 <col:54> 'uint32_t':'unsigned int' lvalue ParmVar 0x563f2eb2c298 'delta_msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x563f2eb2c3f0 <line:285:5, col:21> col:10 used unschedule 'void ()'
|-CXXMethodDecl 0x563f2eb2c4b0 <line:288:5, line:291:5> line:288:17 clear 'void ()' inline
| `-CompoundStmt 0x563f2eb30090 <col:25, line:291:5>
|   |-CXXMemberCallExpr 0x563f2eb2fc20 <line:289:2, col:13> 'void'
|   | `-MemberExpr 0x563f2eb2fbf0 <col:2> '<bound member function type>' ->unschedule 0x563f2eb2c3f0
|   |   `-CXXThisExpr 0x563f2eb2fbe0 <col:2> 'Timer *' implicit this
|   `-ExprWithCleanups 0x563f2eb30078 <line:290:2, col:24> 'Timestamp' lvalue
|     `-CXXOperatorCallExpr 0x563f2eb30040 <col:2, col:24> 'Timestamp' lvalue
|       |-ImplicitCastExpr 0x563f2eb30028 <col:12> 'Timestamp &(*)(Timestamp &&) noexcept' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x563f2eb2fcd8 <col:12> 'Timestamp &(Timestamp &&) noexcept' lvalue CXXMethod 0x563f2e6bed28 'operator=' 'Timestamp &(Timestamp &&) noexcept'
|       |-MemberExpr 0x563f2eb2fc50 <col:2> 'Timestamp' lvalue ->_expiry_s 0x563f2eb2cef8
|       | `-CXXThisExpr 0x563f2eb2fc40 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x563f2eb2fcc0 <col:14, col:24> 'Timestamp' xvalue
|         `-CXXTemporaryObjectExpr 0x563f2eb2fc90 <col:14, col:24> 'Timestamp' 'void ()'
|-CXXMethodDecl 0x563f2eb2c570 <line:304:5, line:310:5> line:304:29 used adjustment 'Timestamp ()' static inline
| `-CompoundStmt 0x563f2eb303e8 <col:42, line:310:5>
|   |-IfStmt 0x563f2eb30230 <line:306:2, line:307:23>
|   | |-CallExpr 0x563f2eb30160 <line:306:6, col:30> 'bool'
|   | | `-ImplicitCastExpr 0x563f2eb30148 <col:6, col:17> 'bool (*)()' <FunctionToPointerDecay>
|   | |   `-DeclRefExpr 0x563f2eb300e8 <col:6, col:17> 'bool ()' lvalue CXXMethod 0x563f2e9c8da0 'warp_jumping' 'bool ()'
|   | `-ReturnStmt 0x563f2eb30220 <line:307:6, col:23>
|   |   `-ExprWithCleanups 0x563f2eb30208 <col:13, col:23> 'Timestamp'
|   |     `-CXXConstructExpr 0x563f2eb301d8 <col:13, col:23> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x563f2eb301c0 <col:13, col:23> 'Timestamp' xvalue
|   |         `-CXXTemporaryObjectExpr 0x563f2eb30190 <col:13, col:23> 'Timestamp' 'void ()'
|   `-ReturnStmt 0x563f2eb303d8 <line:309:2, col:33>
|     `-ExprWithCleanups 0x563f2eb303c0 <col:9, col:33> 'Timestamp'
|       `-CXXConstructExpr 0x563f2eb30390 <col:9, col:33> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x563f2eb30378 <col:9, col:33> 'Timestamp' xvalue
|           `-CallExpr 0x563f2eb30338 <col:9, col:33> 'Timestamp'
|             |-ImplicitCastExpr 0x563f2eb30320 <col:9, col:20> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x563f2eb302f0 <col:9, col:20> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x563f2e9aaf40 'make_usec' 'Timestamp (Timestamp::value_type)'
|             `-ImplicitCastExpr 0x563f2eb30360 <col:30> 'Timestamp::value_type':'long' <IntegralCast>
|               `-IntegerLiteral 0x563f2eb302d0 <col:30> 'int' 500
|-CXXMethodDecl 0x563f2eb2c6b0 <line:317:5, col:80> col:17 schedule_after_s 'void (uint32_t)' inline
| |-ParmVarDecl 0x563f2eb2c620 <col:34, col:43> col:43 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x563f2eb2c758 <col:69> "" ""
|-CXXMethodDecl 0x563f2eb2c868 <line:323:5, col:81> col:17 schedule_after_ms 'void (uint32_t)' inline
| |-ParmVarDecl 0x563f2eb2c7d8 <col:35, col:44> col:44 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x563f2eb2c910 <col:70> "" ""
|-CXXMethodDecl 0x563f2eb2ca20 <line:329:5, col:82> col:17 reschedule_after_s 'void (uint32_t)' inline
| |-ParmVarDecl 0x563f2eb2c990 <col:36, col:45> col:45 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x563f2eb2cac8 <col:71> "" ""
|-CXXMethodDecl 0x563f2eb2cbd8 <line:335:5, col:83> col:17 reschedule_after_ms 'void (uint32_t)' inline
| |-ParmVarDecl 0x563f2eb2cb48 <col:37, col:46> col:46 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x563f2eb2cc80 <col:72> "" ""
|-EnumDecl 0x563f2eb2ccf0 <line:337:5, col:27> col:5
| `-EnumConstantDecl 0x563f2eb2cdf0 <col:12, col:25> col:12 behind_sec 'Timer::(anonymous enum at ../dummy_inc/click/timer.hh:337:5)'
|   `-ImplicitCastExpr 0x563f2eb2ce40 <col:25> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x563f2eb2cdd0 <col:25> 'int' Int: 1
|       `-IntegerLiteral 0x563f2eb2cdb0 <col:25> 'int' 1
|-AccessSpecDecl 0x563f2eb2ce58 <line:339:3, col:10> col:3 private
|-FieldDecl 0x563f2eb2ce98 <line:341:5, col:9> col:9 referenced _schedpos1 'int'
|-FieldDecl 0x563f2eb2cef8 <line:342:5, col:15> col:15 referenced _expiry_s 'Timestamp'
|-CXXRecordDecl 0x563f2eb2cf48 <line:343:5, line:345:5> line:343:5 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x563f2eb2d078 <line:344:2, col:16> col:16 referenced callback 'TimerCallback':'void (*)(Timer *, void *)'
| `-CXXDestructorDecl 0x563f2eb2dba8 <line:343:5> col:5 implicit ~ 'void () noexcept' inline default trivial
|-FieldDecl 0x563f2eb2d138 <col:5, line:345:7> col:7 referenced _hook 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)'
|-FieldDecl 0x563f2eb2d1b8 <line:346:5, col:11> col:11 referenced _thunk 'void *'
|-FieldDecl 0x563f2eb2d218 <line:347:5, col:14> col:14 referenced _owner 'Element *'
|-FieldDecl 0x563f2eb2d278 <line:348:5, col:19> col:19 referenced _thread 'RouterThread *'
|-CXXMethodDecl 0x563f2eb2d3c8 <line:350:5, col:36> col:12 operator= 'Timer &(const Timer &)'
| `-ParmVarDecl 0x563f2eb2d2d8 <col:22, col:35> col:35 x 'const Timer &'
|-CXXMethodDecl 0x563f2eb2d5d8 <line:352:5, col:58> col:17 used do_nothing_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x563f2eb2d4c0 <col:33, col:40> col:40 t 'Timer *'
| `-ParmVarDecl 0x563f2eb2d540 <col:43, col:49> col:49 user_data 'void *'
|-CXXMethodDecl 0x563f2eb2d7b0 <line:353:5, col:55> col:17 used element_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x563f2eb2d698 <col:30, col:37> col:37 t 'Timer *'
| `-ParmVarDecl 0x563f2eb2d718 <col:40, col:46> col:46 user_data 'void *'
|-CXXMethodDecl 0x563f2eb2d988 <line:354:5, col:52> col:17 used task_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x563f2eb2d870 <col:27, col:34> col:34 t 'Timer *'
| `-ParmVarDecl 0x563f2eb2d8f0 <col:37, col:43> col:43 user_data 'void *'
`-FriendDecl 0x563f2eb2db58 <line:356:5, col:18> col:12 'class TimerSet':'TimerSet'

Layout: <CGRecordLayout
  LLVMType:%class.Timer = type { i32, %class.Timestamp, %union.anon.23, i8*, %class.Element*, %class.RouterThread* }
  NonVirtualBaseLLVMType:%class.Timer = type { i32, %class.Timestamp, %union.anon.23, i8*, %class.Element*, %class.RouterThread* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct char_array<16>
         0 |   char [16] x
           | [sizeof=16, dsize=16, align=1,
           |  nvsize=16, nvalign=1]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x563f2eb3a550 <../dummy_inc/click/type_traits.hh:165:1, line:167:1> line:165:28 struct char_array definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-TemplateArgument integral 16
|-PackedAttr 0x563f2ec82798 <line:167:18>
|-CXXRecordDecl 0x563f2ec82858 prev 0x563f2eb3a550 <line:165:21, col:28> col:28 implicit struct char_array
`-FieldDecl 0x563f2ec82968 <line:166:5, col:13> col:10 x 'char [16]'

Layout: <CGRecordLayout
  LLVMType:%struct.char_array.10 = type { [16 x i8] }
  NonVirtualBaseLLVMType:%struct.char_array.10 = type { [16 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct Args::SlotT<class String>
         0 |   struct Args::Slot (primary base)
         0 |     (Slot vtable pointer)
         8 |     struct Args::Slot * _next
        16 |   class String * _ptr
        24 |   class String _slot
        24 |     struct String::rep_t _r
        24 |       const char * data
        32 |       int length
        40 |       struct String::memo_t * memo
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x563f2ec8a8f8 <../dummy_inc/click/args.hh:850:5, line:860:5> line:851:12 struct SlotT definition
|-DefinitionData polymorphic has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-public 'Args::Slot'
|-TemplateArgument type 'String'
|-CXXRecordDecl 0x563f2ec8acf8 prev 0x563f2ec8a8f8 <col:5, col:12> col:12 implicit struct SlotT
|-CXXConstructorDecl 0x563f2ec8aef0 <line:852:9, line:854:9> line:852:9 used SlotT 'void (String *)'
| |-ParmVarDecl 0x563f2ec8adf8 <col:15, col:18> col:18 used ptr 'String *'
| |-CXXCtorInitializer 'Args::Slot'
| | `-CXXConstructExpr 0x563f2ec8be38 <col:9> 'Args::Slot' 'void ()'
| |-CXXCtorInitializer Field 0x563f2ec8b070 '_ptr' 'String *'
| | `-ImplicitCastExpr 0x563f2ec8bdf8 <line:853:20> 'String *' <LValueToRValue>
| |   `-DeclRefExpr 0x563f2ec8bdb8 <col:20> 'String *' lvalue ParmVar 0x563f2ec8adf8 'ptr' 'String *'
| |-CXXCtorInitializer Field 0x563f2ec8b0d0 '_slot' 'String':'String'
| | `-CXXConstructExpr 0x563f2ec8be98 <line:852:9> 'String':'String' 'void ()'
| `-CompoundStmt 0x563f2eafcc80 <line:853:25, line:854:9>
|-CXXMethodDecl 0x563f2ec8afb0 <line:855:9, line:857:9> line:855:14 used store 'void ()'
| |-Overrides: [ 0x563f2eacf7e0 Slot::store 'void ()' ]
| `-CompoundStmt 0x563f2ec8c5d8 <col:22, line:857:9>
|   `-CallExpr 0x563f2ec8c590 <line:856:13, col:40> 'void'
|     |-ImplicitCastExpr 0x563f2ec8c578 <col:13> 'void (*)(String &, const String &)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x563f2ec8c4f8 <col:13> 'void (String &, const String &)' lvalue Function 0x563f2ec8c3d8 'assign_consume' 'void (String &, const String &)' (FunctionTemplate 0x563f2e776fd8 'assign_consume')
|     |-UnaryOperator 0x563f2ec8c028 <col:28, col:29> 'String':'String' lvalue prefix '*' cannot overflow
|     | `-ImplicitCastExpr 0x563f2ec8c010 <col:29> 'String *' <LValueToRValue>
|     |   `-MemberExpr 0x563f2ec8bfe0 <col:29> 'String *' lvalue ->_ptr 0x563f2ec8b070
|     |     `-CXXThisExpr 0x563f2ec8bfd0 <col:29> 'Args::SlotT<String> *' implicit this
|     `-ImplicitCastExpr 0x563f2ec8c5c0 <col:35> 'const String':'const String' lvalue <NoOp>
|       `-MemberExpr 0x563f2ec8c050 <col:35> 'String':'String' lvalue ->_slot 0x563f2ec8b0d0
|         `-CXXThisExpr 0x563f2ec8c040 <col:35> 'Args::SlotT<String> *' implicit this
|-FieldDecl 0x563f2ec8b070 <line:858:9, col:12> col:12 referenced _ptr 'String *'
|-FieldDecl 0x563f2ec8b0d0 <line:859:9, col:11> col:11 referenced _slot 'String':'String'
|-CXXConstructorDecl 0x563f2ec8b148 <line:851:12> col:12 implicit SlotT 'void (const Args::SlotT<String> &)' inline default noexcept-unevaluated 0x563f2ec8b148
| `-ParmVarDecl 0x563f2ec8b258 <col:12> col:12 'const Args::SlotT<String> &'
|-CXXConstructorDecl 0x563f2ec8b2f8 <col:12> col:12 implicit SlotT 'void (Args::SlotT<String> &&)' inline default noexcept-unevaluated 0x563f2ec8b2f8
| `-ParmVarDecl 0x563f2ec8b408 <col:12> col:12 'Args::SlotT<String> &&'
|-CXXMethodDecl 0x563f2ec8b4a8 <col:12> col:12 implicit operator= 'Args::SlotT<String> &(const Args::SlotT<String> &)' inline default noexcept-unevaluated 0x563f2ec8b4a8
| `-ParmVarDecl 0x563f2ec8b5b8 <col:12> col:12 'const Args::SlotT<String> &'
|-CXXMethodDecl 0x563f2ec8b628 <col:12> col:12 implicit operator= 'Args::SlotT<String> &(Args::SlotT<String> &&)' inline default noexcept-unevaluated 0x563f2ec8b628
| `-ParmVarDecl 0x563f2ec8b738 <col:12> col:12 'Args::SlotT<String> &&'
`-CXXDestructorDecl 0x563f2ec8b7c0 <col:12> col:12 implicit used ~SlotT 'void () noexcept' inline default
  |-Overrides: [ 0x563f2eacf6e0 Slot::~Slot 'void () noexcept' ]
  `-CompoundStmt 0x563f2ec8bf00 <col:12>

Layout: <CGRecordLayout
  LLVMType:%"struct.Args::SlotT" = type { %"struct.Args::Slot", %class.String*, %class.String }
  NonVirtualBaseLLVMType:%"struct.Args::SlotT" = type { %"struct.Args::Slot", %class.String*, %class.String }
  IsZeroInitializable:1
  BitFields:[
]>
