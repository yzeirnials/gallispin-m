
*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17)
         0 |   unsigned long long __wseq
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_internal_list
         0 |   struct __pthread_internal_list * __prev
         8 |   struct __pthread_internal_list * __next
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_mutex_s
         0 |   int __lock
         4 |   unsigned int __count
         8 |   int __owner
        12 |   unsigned int __nusers
        16 |   int __kind
        20 |   short __spins
        22 |   short __elision
        24 |   struct __pthread_internal_list __list
        24 |     struct __pthread_internal_list * __prev
        32 |     struct __pthread_internal_list * __next
           | [sizeof=40, dsize=40, align=8,
           |  nvsize=40, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17)
         0 |   unsigned long long __g1_start
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s
         0 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17) 
         0 |     unsigned long long __wseq
         0 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |       unsigned int __low
         4 |       unsigned int __high
         8 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17) 
         8 |     unsigned long long __g1_start
         8 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         8 |       unsigned int __low
        12 |       unsigned int __high
        16 |   unsigned int [2] __g_refs
        24 |   unsigned int [2] __g_size
        32 |   unsigned int __g1_orig_size
        36 |   unsigned int __wrefs
        40 |   unsigned int [2] __g_signals
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_rwlock_arch_t
         0 |   unsigned int __readers
         4 |   unsigned int __writers
         8 |   unsigned int __wrphase_futex
        12 |   unsigned int __writers_futex
        16 |   unsigned int __pad3
        20 |   unsigned int __pad4
        24 |   int __cur_writer
        28 |   int __shared
        32 |   signed char __rwelision
        33 |   unsigned char [7] __pad1
        40 |   unsigned long __pad2
        48 |   unsigned int __flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | lldiv_t
         0 |   long long quot
         8 |   long long rem
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct msghdr
         0 |   void * msg_name
         8 |   socklen_t msg_namelen
        16 |   struct iovec * msg_iov
        24 |   size_t msg_iovlen
        32 |   void * msg_control
        40 |   size_t msg_controllen
        48 |   int msg_flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | struct in_addr
         0 |   in_addr_t s_addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5)
         0 |   uint8_t [16] __u6_addr8
         0 |   uint16_t [8] __u6_addr16
         0 |   uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr
         0 |   sa_family_t sa_family
         2 |   char [14] sa_data
           | [sizeof=16, dsize=16, align=2,
           |  nvsize=16, nvalign=2]

*** Dumping AST Record Layout
         0 | struct in6_addr
         0 |   union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         0 |     uint8_t [16] __u6_addr8
         0 |     uint16_t [8] __u6_addr16
         0 |     uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr_storage
         0 |   sa_family_t ss_family
         2 |   char [118] __ss_padding
       120 |   unsigned long __ss_align
           | [sizeof=128, dsize=128, align=8,
           |  nvsize=128, nvalign=8]

*** Dumping AST Record Layout
         0 | struct sockaddr_in6
         0 |   sa_family_t sin6_family
         2 |   in_port_t sin6_port
         4 |   uint32_t sin6_flowinfo
         8 |   struct in6_addr sin6_addr
         8 |     union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         8 |       uint8_t [16] __u6_addr8
         8 |       uint16_t [8] __u6_addr16
         8 |       uint32_t [4] __u6_addr32
        24 |   uint32_t sin6_scope_id
           | [sizeof=28, dsize=28, align=4,
           |  nvsize=28, nvalign=4]

*** Dumping AST Record Layout
         0 | struct timeval
         0 |   __time_t tv_sec
         8 |   __suseconds_t tv_usec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::memo_t
         0 |   volatile uint32_t refcount
         4 |   uint32_t capacity
         8 |   volatile uint32_t dirty
        12 |   char [8] real_data
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping AST Record Layout
         0 | class IPAddress
         0 |   uint32_t _addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Timestamp::rep_t
         0 |   int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timestamp
         0 |   union Timestamp::rep_t _t
         0 |     int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct timespec
         0 |   __time_t tv_sec
         8 |   __syscall_slong_t tv_nsec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element::Port
         0 |   class Element * _e
         8 |   int _port
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping AST Record Layout
         0 | struct TimerSet::heap_element
         0 |   class Timestamp expiry_s
         0 |     union Timestamp::rep_t _t
         0 |       int64_t x
         8 |   class Timer * t
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct pollfd
         0 |   int fd
         4 |   short events
         6 |   short revents
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | struct SelectSet::SelectorInfo
         0 |   class Element * read
         8 |   class Element * write
        16 |   int pollfd
           | [sizeof=24, dsize=20, align=8,
           |  nvsize=20, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element
         0 |   (Element vtable pointer)
         8 |   class Element::Port *[2] _ports
        24 |   class Element::Port [4] _inline_ports
        88 |   int [2] _nports
        96 |   class Router * _router
       104 |   int _eindex
           | [sizeof=112, dsize=108, align=8,
           |  nvsize=108, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x561d4a192878 prev 0x561d4a18a018 <../dummy_inc/click/element.hh:214:5, line:252:5> line:214:11 referenced class Port definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x561d4a192970 <col:5, col:11> col:11 implicit referenced class Port
|-AccessSpecDecl 0x561d4a192a00 <col:18, col:24> col:18 public
|-CXXMethodDecl 0x561d4a192a78 <line:216:9, col:30> col:21 used active 'bool () const' inline
|-CXXMethodDecl 0x561d4a192b38 <line:217:9, col:35> col:25 element 'Element *() const' inline
|-CXXMethodDecl 0x561d4a192c00 <line:218:9, col:27> col:20 port 'int () const' inline
|-CXXMethodDecl 0x561d4a192d78 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| |-ParmVarDecl 0x561d4a192cb0 <col:54, col:62> col:62 p 'Packet *'
| |-NoInlineAttr 0x561d4a192e20 <col:24>
| `-OptimizeNoneAttr 0x561d4a192e78 <col:34>
|-CXXMethodDecl 0x561d4a192ec0 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
|-CXXMethodDecl 0x561d4a193178 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| |-ParmVarDecl 0x561d4a192f70 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x561d4a192fe8 <col:43, col:52> col:52 e 'Element *'
| `-ParmVarDecl 0x561d4a193068 <col:55, col:59> col:59 port 'int'
|-AccessSpecDecl 0x561d4a193230 <line:229:7, col:14> col:7 private
|-FieldDecl 0x561d4a193268 <line:231:9, col:18> col:18 referenced _e 'Element *'
|-FieldDecl 0x561d4a1932d0 <line:232:9, col:13> col:13 referenced _port 'int'
|-CXXConstructorDecl 0x561d4a193358 <line:247:9, col:21> col:16 Port 'void ()' inline
|-CXXMethodDecl 0x561d4a193678 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| |-ParmVarDecl 0x561d4a193410 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x561d4a193488 <col:43, col:52> col:52 owner 'Element *'
| |-ParmVarDecl 0x561d4a193500 <col:59, col:68> col:68 e 'Element *'
| `-ParmVarDecl 0x561d4a193580 <col:71, col:75> col:75 port 'int'
|-FriendDecl 0x561d4a193790 <line:250:9, col:22> col:16 'class Element':'Element'
|-CXXConstructorDecl 0x561d4a19a0f8 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x561d4a19a0f8
| `-ParmVarDecl 0x561d4a19a208 <col:11> col:11 'const Element::Port &'
|-CXXConstructorDecl 0x561d4a19a2a8 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x561d4a19a2a8
| `-ParmVarDecl 0x561d4a19a3b8 <col:11> col:11 'Element::Port &&'
`-CXXDestructorDecl 0x561d4a276070 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"class.Element::Port" = type <{ %class.Element*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%"class.Element::Port.base" = type <{ %class.Element*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x561d4a185890 prev 0x561d4a185610 <../dummy_inc/click/element.hh:29:1, line:319:1> line:29:7 referenced class Element definition
|-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x561d4a185988 <col:1, col:7> col:7 implicit referenced class Element
|-AccessSpecDecl 0x561d4a185a18 <col:17, col:23> col:17 public
|-CXXConstructorDecl 0x561d4a185a78 <line:31:5, col:13> col:5 Element 'void ()'
|-CXXDestructorDecl 0x561d4a185b68 <line:32:5, col:22> col:13 used ~Element 'void () noexcept' virtual
|-VarDecl 0x561d4a185c68 <line:33:5, col:16> col:16 nelements_allocated 'int' static
|-CXXMethodDecl 0x561d4a185e38 <line:36:5, col:42> col:18 used push 'void (int, Packet *)' virtual
| |-ParmVarDecl 0x561d4a185ce8 <col:23, col:27> col:27 port 'int'
| `-ParmVarDecl 0x561d4a185d60 <col:33, col:41> col:41 p 'Packet *'
|-CXXMethodDecl 0x561d4a185fc8 <line:37:5, col:70> col:21 used pull 'Packet *(int)' virtual
| |-ParmVarDecl 0x561d4a185f00 <col:26, col:30> col:30 port 'int'
| `-WarnUnusedResultAttr 0x561d4a186070 <col:51> warn_unused_result ""
|-CXXMethodDecl 0x561d4a1861a8 <line:38:5, col:44> col:21 simple_action 'Packet *(Packet *)' virtual
| `-ParmVarDecl 0x561d4a1860e0 <col:35, col:43> col:43 p 'Packet *'
|-CXXMethodDecl 0x561d4a186348 <line:40:5, col:37> col:18 used run_task 'bool (Task *)' virtual
| `-ParmVarDecl 0x561d4a186288 <col:27, col:33> col:33 task 'Task *'
|-CXXMethodDecl 0x561d4a1864e8 <line:41:5, col:40> col:18 run_timer 'void (Timer *)' virtual
| `-ParmVarDecl 0x561d4a186428 <col:28, col:35> col:35 timer 'Timer *'
|-EnumDecl 0x561d4a186590 <line:43:5, col:46> col:5
| |-EnumConstantDecl 0x561d4a186690 <col:12, col:26> col:12 SELECT_READ 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
| | `-ImplicitCastExpr 0x561d4a186770 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561d4a186670 <col:26> 'int' Int: 1
| |     `-IntegerLiteral 0x561d4a186650 <col:26> 'int' 1
| `-EnumConstantDecl 0x561d4a186720 <col:29, col:44> col:29 SELECT_WRITE 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
|   `-ImplicitCastExpr 0x561d4a186788 <col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x561d4a186700 <col:44> 'int' Int: 2
|       `-IntegerLiteral 0x561d4a1866e0 <col:44> 'int' 2
|-CXXMethodDecl 0x561d4a1868d0 <line:44:5, col:43> col:18 selected 'void (int, int)' virtual
| |-ParmVarDecl 0x561d4a1867b8 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x561d4a186838 <col:35, col:39> col:39 mask 'int'
|-CXXMethodDecl 0x561d4a186a28 <line:45:5, col:33> col:18 selected 'void (int)' virtual
| `-ParmVarDecl 0x561d4a186998 <col:27, col:31> col:31 fd 'int'
|-CXXMethodDecl 0x561d4a186c68 <line:48:5, col:86> col:45 checked_output_push 'void (int, Packet *) const'
| |-ParmVarDecl 0x561d4a186ae8 <col:65, col:69> col:69 port 'int'
| |-ParmVarDecl 0x561d4a186b60 <col:75, col:83> col:83 p 'Packet *'
| |-NoInlineAttr 0x561d4a186d18 <col:20>
| `-OptimizeNoneAttr 0x561d4a186d70 <col:30>
|-CXXMethodDecl 0x561d4a186e78 <line:49:5, col:77> col:48 checked_input_pull 'Packet *(int) const'
| |-ParmVarDecl 0x561d4a186db0 <col:67, col:71> col:71 port 'int'
| |-NoInlineAttr 0x561d4a186f20 <col:20>
| `-OptimizeNoneAttr 0x561d4a186f78 <col:30>
|-CXXMethodDecl 0x561d4a186fc8 <line:52:5, col:46> col:25 class_name 'const char *() const' virtual pure
|-CXXMethodDecl 0x561d4a187090 <line:54:5, col:38> col:25 port_count 'const char *() const' virtual
|-VarDecl 0x561d4a1871a8 <line:55:5, col:33> col:23 PORTS_0_0 'const char []' static
|-VarDecl 0x561d4a187230 <line:56:5, col:33> col:23 PORTS_0_1 'const char []' static
|-VarDecl 0x561d4a1872b8 <line:57:5, col:33> col:23 PORTS_1_0 'const char []' static
|-VarDecl 0x561d4a187340 <line:58:5, col:33> col:23 PORTS_1_1 'const char []' static
|-VarDecl 0x561d4a1873c8 <line:59:5, col:35> col:23 used PORTS_1_1X2 'const char []' static
|-CXXMethodDecl 0x561d4a187458 <line:61:5, col:38> col:25 processing 'const char *() const' virtual
|-VarDecl 0x561d4a187518 <line:62:5, col:32> col:23 AGNOSTIC 'const char []' static
|-VarDecl 0x561d4a1875a0 <line:63:5, col:28> col:23 PUSH 'const char []' static
|-VarDecl 0x561d4a187628 <line:64:5, col:28> col:23 PULL 'const char []' static
|-VarDecl 0x561d4a1876b0 <line:65:5, col:36> col:23 PUSH_TO_PULL 'const char []' static
|-VarDecl 0x561d4a187738 <line:66:5, col:36> col:23 PULL_TO_PUSH 'const char []' static
|-VarDecl 0x561d4a1877c0 <line:67:5, col:39> col:23 PROCESSING_A_AH 'const char []' static
|-CXXMethodDecl 0x561d4a187850 <line:69:5, col:37> col:25 flow_code 'const char *() const' virtual
|-VarDecl 0x561d4a187910 <line:70:5, col:37> col:23 COMPLETE_FLOW 'const char []' static
|-CXXMethodDecl 0x561d4a1879a0 <line:72:5, col:33> col:25 flags 'const char *() const' virtual
|-CXXMethodDecl 0x561d4a187af0 <line:73:5, col:30> col:9 flag_value 'int (int) const'
| `-ParmVarDecl 0x561d4a187a58 <col:20, col:24> col:24 flag 'int'
|-CXXMethodDecl 0x561d4a187c80 <line:75:5, col:40> col:19 cast 'void *(const char *)' virtual
| `-ParmVarDecl 0x561d4a187bb0 <col:24, col:36> col:36 name 'const char *'
|-CXXMethodDecl 0x561d4a187f30 <line:76:5, col:70> col:19 port_cast 'void *(bool, int, const char *)' virtual
| |-ParmVarDecl 0x561d4a187d38 <col:29, col:34> col:34 isoutput 'bool'
| |-ParmVarDecl 0x561d4a187db8 <col:44, col:48> col:48 port 'int'
| `-ParmVarDecl 0x561d4a187e38 <col:54, col:66> col:66 name 'const char *'
|-EnumDecl 0x561d4a187fe8 <line:79:5, line:85:5> line:79:10 ConfigurePhase
| |-EnumConstantDecl 0x561d4a1880f0 <line:80:9, col:33> col:9 CONFIGURE_PHASE_FIRST 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x561d4a188380 <col:33> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561d4a1880d0 <col:33> 'int' Int: 0
| |     `-IntegerLiteral 0x561d4a1880b0 <col:33> 'int' 0
| |-EnumConstantDecl 0x561d4a188180 <line:81:9, col:32> col:9 CONFIGURE_PHASE_INFO 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x561d4a188398 <col:32> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561d4a188160 <col:32> 'int' Int: 20
| |     `-IntegerLiteral 0x561d4a188140 <col:32> 'int' 20
| |-EnumConstantDecl 0x561d4a188210 <line:82:9, col:38> col:9 CONFIGURE_PHASE_PRIVILEGED 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x561d4a1883b0 <col:38> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561d4a1881f0 <col:38> 'int' Int: 90
| |     `-IntegerLiteral 0x561d4a1881d0 <col:38> 'int' 90
| |-EnumConstantDecl 0x561d4a1882a0 <line:83:9, col:35> col:9 CONFIGURE_PHASE_DEFAULT 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x561d4a1883c8 <col:35> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561d4a188280 <col:35> 'int' Int: 100
| |     `-IntegerLiteral 0x561d4a188260 <col:35> 'int' 100
| `-EnumConstantDecl 0x561d4a188330 <line:84:9, col:32> col:9 CONFIGURE_PHASE_LAST 'Element::ConfigurePhase'
|   `-ImplicitCastExpr 0x561d4a1883e0 <col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x561d4a188310 <col:32> 'int' Int: 2000
|       `-IntegerLiteral 0x561d4a1882f0 <col:32> 'int' 2000
|-CXXMethodDecl 0x561d4a188420 <line:86:5, col:35> col:17 configure_phase 'int () const' virtual
|-CXXMethodDecl 0x561d4a188860 <line:88:5, col:67> col:17 configure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x561d4a1886d0 <col:27, col:43> col:43 conf 'Vector<String> &'
| `-ParmVarDecl 0x561d4a188748 <col:49, col:63> col:63 errh 'ErrorHandler *'
|-CXXMethodDecl 0x561d4a188930 <line:90:5, col:31> col:18 add_handlers 'void ()' virtual
|-CXXMethodDecl 0x561d4a188ab0 <line:92:5, col:46> col:17 initialize 'int (ErrorHandler *)' virtual
| `-ParmVarDecl 0x561d4a1889e0 <col:28, col:42> col:42 errh 'ErrorHandler *'
|-CXXMethodDecl 0x561d4a188cb8 <line:94:5, col:69> col:18 take_state 'void (Element *, ErrorHandler *)' virtual
| |-ParmVarDecl 0x561d4a188b68 <col:29, col:38> col:38 old_element 'Element *'
| `-ParmVarDecl 0x561d4a188be0 <col:51, col:65> col:65 errh 'ErrorHandler *'
|-CXXMethodDecl 0x561d4a188db8 <line:95:5, col:40> col:22 hotswap_element 'Element *() const' virtual
|-EnumDecl 0x561d4a188e58 <line:97:5, line:106:5> line:97:10 referenced CleanupStage
| |-EnumConstantDecl 0x561d4a188f20 <line:98:9> col:9 referenced CLEANUP_NO_ROUTER 'Element::CleanupStage'
| |-EnumConstantDecl 0x561d4a188fb0 <line:99:9, col:36> col:9 CLEANUP_BEFORE_CONFIGURE 'Element::CleanupStage'
| | `-ImplicitCastExpr 0x561d4a1891e0 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561d4a188f90 <col:36> 'int' Int: 0
| |     `-DeclRefExpr 0x561d4a188f70 <col:36> 'int' EnumConstant 0x561d4a188f20 'CLEANUP_NO_ROUTER' 'Element::CleanupStage'
| |-EnumConstantDecl 0x561d4a189000 <line:100:9> col:9 CLEANUP_CONFIGURE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x561d4a189050 <line:101:9> col:9 CLEANUP_CONFIGURED 'Element::CleanupStage'
| |-EnumConstantDecl 0x561d4a1890a0 <line:102:9> col:9 CLEANUP_INITIALIZE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x561d4a1890f0 <line:103:9> col:9 CLEANUP_INITIALIZED 'Element::CleanupStage'
| |-EnumConstantDecl 0x561d4a189140 <line:104:9> col:9 CLEANUP_ROUTER_INITIALIZED 'Element::CleanupStage'
| `-EnumConstantDecl 0x561d4a189190 <line:105:9> col:9 CLEANUP_MANUAL 'Element::CleanupStage'
|-CXXMethodDecl 0x561d4a1892c8 <line:107:5, col:44> col:18 cleanup 'void (Element::CleanupStage)' virtual
| `-ParmVarDecl 0x561d4a189208 <col:26, col:39> col:39 stage 'Element::CleanupStage'
|-CXXMethodDecl 0x561d4a189390 <line:109:5, col:42> col:24 static_initialize 'void ()' static inline
|-CXXMethodDecl 0x561d4a189450 <line:110:5, col:39> col:24 static_cleanup 'void ()' static inline
|-CXXMethodDecl 0x561d4a189510 <line:113:5, col:19> col:12 name 'String () const'
|-CXXMethodDecl 0x561d4a1895d0 <line:114:5, col:34> col:20 declaration 'String () const' virtual
|-CXXMethodDecl 0x561d4a1896e8 <line:116:5, col:29> col:20 used router 'Router *() const' inline
|-CXXMethodDecl 0x561d4a1897b0 <line:117:5, col:25> col:16 eindex 'int () const' inline
|-CXXMethodDecl 0x561d4a189930 <line:118:5, col:34> col:16 eindex 'int (Router *) const' inline
| `-ParmVarDecl 0x561d4a189860 <col:23, col:31> col:31 r 'Router *'
|-CXXMethodDecl 0x561d4a189a58 <line:121:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x561d4a189c58 <line:123:5, line:127:5> line:123:17 attach_router 'void (Router *, int)' inline
| |-ParmVarDecl 0x561d4a189b08 <col:31, col:39> col:39 used r 'Router *'
| |-ParmVarDecl 0x561d4a189b88 <col:42, col:46> col:46 used eindex 'int'
| `-CompoundStmt 0x561d4a196598 <col:54, line:127:5>
|   |-ParenExpr 0x561d4a196448 <line:124:9, col:152> 'void'
|   | `-ConditionalOperator 0x561d4a196418 <col:10, col:151> 'void'
|   |   |-CXXStaticCastExpr 0x561d4a196108 <col:10, col:38> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x561d4a1960e0 <col:30, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-ImplicitCastExpr 0x561d4a1960c8 <col:31> 'bool' <PointerToBoolean>
|   |   |     `-ImplicitCastExpr 0x561d4a1960b0 <col:31> 'Router *' <LValueToRValue>
|   |   |       `-MemberExpr 0x561d4a196080 <col:31> 'Router *' lvalue ->_router 0x561d4a193f60
|   |   |         `-CXXThisExpr 0x561d4a196070 <col:31> 'Element *' implicit this
|   |   |-CXXFunctionalCastExpr 0x561d4a196168 <col:42, col:49> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x561d4a196148 <col:48> 'int' 0
|   |   `-CallExpr 0x561d4a196378 <col:53, col:151> 'void'
|   |     |-ImplicitCastExpr 0x561d4a196360 <col:53> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x561d4a196340 <col:53> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x561d49cbcb90 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x561d4a1963b8 <col:68> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x561d4a1961d8 <col:68> 'const char [9]' lvalue "!_router"
|   |     |-ImplicitCastExpr 0x561d4a1963d0 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x561d4a1961f8 <col:80> 'const char [30]' lvalue "../dummy_inc/click/element.hh"
|   |     |-ImplicitCastExpr 0x561d4a1963e8 <col:113> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x561d4a196230 <col:113> 'int' 124
|   |     `-ImplicitCastExpr 0x561d4a196400 <col:118, col:132> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x561d4a196328 <col:118, col:132> 'const char [43]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x561d4a196310 <col:132> 'const char [43]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x561d4a1962c8 <col:132> 'const char [43]' lvalue "void Element::attach_router(Router *, int)"
|   |-BinaryOperator 0x561d4a1964e0 <line:125:9, col:19> 'Router *' lvalue '='
|   | |-MemberExpr 0x561d4a196478 <col:9> 'Router *' lvalue ->_router 0x561d4a193f60
|   | | `-CXXThisExpr 0x561d4a196468 <col:9> 'Element *' implicit this
|   | `-ImplicitCastExpr 0x561d4a1964c8 <col:19> 'Router *' <LValueToRValue>
|   |   `-DeclRefExpr 0x561d4a1964a8 <col:19> 'Router *' lvalue ParmVar 0x561d4a189b08 'r' 'Router *'
|   `-BinaryOperator 0x561d4a196578 <line:126:9, col:19> 'int' lvalue '='
|     |-MemberExpr 0x561d4a196510 <col:9> 'int' lvalue ->_eindex 0x561d4a193fc8
|     | `-CXXThisExpr 0x561d4a196500 <col:9> 'Element *' implicit this
|     `-ImplicitCastExpr 0x561d4a196560 <col:19> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x561d4a196540 <col:19> 'int' lvalue ParmVar 0x561d4a189b88 'eindex' 'int'
|-CXXMethodDecl 0x561d4a189de0 <line:130:5, col:38> col:16 used nports 'int (bool) const' inline
| `-ParmVarDecl 0x561d4a189d18 <col:23, col:28> col:28 isoutput 'bool'
|-CXXMethodDecl 0x561d4a189eb0 <line:131:5, col:26> col:16 used ninputs 'int () const' inline
|-CXXMethodDecl 0x561d4a189f78 <line:132:5, col:27> col:16 used noutputs 'int () const' inline
|-CXXRecordDecl 0x561d4a18a018 <line:134:5, col:11> col:11 referenced class Port
|-CXXMethodDecl 0x561d4a18a268 <line:135:5, col:82> col:52 used port 'const Element::Port &(bool, int) const'
| |-ParmVarDecl 0x561d4a18a0e0 <col:57, col:62> col:62 isoutput 'bool'
| |-ParmVarDecl 0x561d4a18a160 <col:72, col:76> col:76 port 'int'
| |-NoInlineAttr 0x561d4a18a318 <col:20>
| `-OptimizeNoneAttr 0x561d4a18a370 <col:30>
|-CXXMethodDecl 0x561d4a18a478 <line:136:5, col:68> col:52 input 'const Element::Port &(int) const'
| |-ParmVarDecl 0x561d4a18a3b0 <col:58, col:62> col:62 port 'int'
| |-NoInlineAttr 0x561d4a18a520 <col:20>
| `-OptimizeNoneAttr 0x561d4a18a578 <col:30>
|-CXXMethodDecl 0x561d4a18a648 <line:137:5, col:69> col:52 output 'const Element::Port &(int) const'
| |-ParmVarDecl 0x561d4a18a5b8 <col:59, col:63> col:63 port 'int'
| |-NoInlineAttr 0x561d4a18a6f0 <col:20>
| `-OptimizeNoneAttr 0x561d4a18a748 <col:30>
|-CXXMethodDecl 0x561d4a18a8d8 <line:139:5, col:54> col:17 used port_active 'bool (bool, int) const' inline
| |-ParmVarDecl 0x561d4a18a780 <col:29, col:34> col:34 isoutput 'bool'
| `-ParmVarDecl 0x561d4a18a800 <col:44, col:48> col:48 port 'int'
|-CXXMethodDecl 0x561d4a18aa68 <line:140:5, col:41> col:17 input_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x561d4a18a9a0 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x561d4a18abb8 <line:141:5, col:41> col:17 input_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x561d4a18ab28 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x561d4a18ad08 <line:142:5, col:42> col:17 output_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x561d4a18ac78 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x561d4a18ae58 <line:143:5, col:42> col:17 output_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x561d4a18adc8 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x561d4a18b118 <line:144:5, col:57> col:10 port_flow 'void (bool, int, Bitvector *) const'
| |-ParmVarDecl 0x561d4a18af10 <col:20, col:25> col:25 isoutput 'bool'
| |-ParmVarDecl 0x561d4a18af90 <col:35, col:39> col:39 port 'int'
| `-ParmVarDecl 0x561d4a18b038 <col:45, col:54> col:55 'Bitvector *'
|-CXXMethodDecl 0x561d4a18b1f0 <line:147:5, col:28> col:12 configuration 'String () const'
|-CXXMethodDecl 0x561d4a18b2b0 <line:149:5, col:41> col:18 can_live_reconfigure 'bool () const' virtual
|-CXXMethodDecl 0x561d4a18b580 <line:150:5, col:64> col:17 live_reconfigure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x561d4a18b430 <col:34, col:48> col:49 'Vector<String> &'
| `-ParmVarDecl 0x561d4a18b4a8 <col:51, col:63> col:64 'ErrorHandler *'
|-CXXMethodDecl 0x561d4a18b6a8 <line:152:5, col:33> col:19 home_thread 'RouterThread *() const'
|-CXXMethodDecl 0x561d4a18b880 <line:156:5, col:36> col:9 add_select 'int (int, int)'
| |-ParmVarDecl 0x561d4a18b760 <col:20, col:24> col:24 fd 'int'
| `-ParmVarDecl 0x561d4a18b7e0 <col:28, col:32> col:32 mask 'int'
|-CXXMethodDecl 0x561d4a18ba68 <line:157:5, col:39> col:9 remove_select 'int (int, int)'
| |-ParmVarDecl 0x561d4a18b948 <col:23, col:27> col:27 fd 'int'
| `-ParmVarDecl 0x561d4a18b9c8 <col:31, col:35> col:35 mask 'int'
|-CXXMethodDecl 0x561d4a18bdd8 <line:161:5, col:127> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x561d4a18bb28 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x561d4a18bba0 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x561d4a18bc20 <col:82, col:106> col:94 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x561d4a195b80 <col:106> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x561d4a195b60 <col:106> 'int' 0
| `-ParmVarDecl 0x561d4a18bc98 <col:109, col:126> col:118 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x561d4a195bb8 <col:126> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x561d4a195b98 <col:126> 'int' 0
|-CXXMethodDecl 0x561d4a18c178 <line:162:5, col:115> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x561d4a18bea8 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x561d4a18bf40 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x561d4a18bfc0 <col:82, col:86> col:86 user_data 'int'
| `-ParmVarDecl 0x561d4a18c038 <col:97, col:114> col:106 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x561d4a195bf0 <col:114> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x561d4a195bd0 <col:114> 'int' 0
|-CXXMethodDecl 0x561d4a18c508 <line:163:5, col:117> col:10 add_read_handler 'void (const char *, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x561d4a18c250 <col:27, col:39> col:39 name 'const char *'
| |-ParmVarDecl 0x561d4a18c2c8 <col:45, col:65> col:65 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x561d4a18c348 <col:80, col:96> col:84 user_data 'int' cinit
| | `-IntegerLiteral 0x561d4a195c08 <col:96> 'int' 0
| `-ParmVarDecl 0x561d4a18c3c0 <col:99, col:116> col:108 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x561d4a195c48 <col:116> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x561d4a195c28 <col:116> 'int' 0
|-CXXMethodDecl 0x561d4a18c888 <line:164:5, col:130> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x561d4a18c5d8 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x561d4a18c650 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x561d4a18c6d0 <col:85, col:109> col:97 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x561d4a195c80 <col:109> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x561d4a195c60 <col:109> 'int' 0
| `-ParmVarDecl 0x561d4a18c748 <col:112, col:129> col:121 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x561d4a195cb8 <col:129> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x561d4a195c98 <col:129> 'int' 0
|-CXXMethodDecl 0x561d4a18cc08 <line:165:5, col:118> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x561d4a18c958 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x561d4a18c9d0 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x561d4a18ca50 <col:85, col:89> col:89 user_data 'int'
| `-ParmVarDecl 0x561d4a18cac8 <col:100, col:117> col:109 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x561d4a195cf0 <col:117> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x561d4a195cd0 <col:117> 'int' 0
|-CXXMethodDecl 0x561d4a18cf98 <line:166:5, col:120> col:10 add_write_handler 'void (const char *, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x561d4a18cce0 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x561d4a18cd58 <col:46, col:67> col:67 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x561d4a18cdd8 <col:83, col:99> col:87 user_data 'int' cinit
| | `-IntegerLiteral 0x561d4a195d08 <col:99> 'int' 0
| `-ParmVarDecl 0x561d4a18ce50 <col:102, col:119> col:111 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x561d4a195d48 <col:119> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x561d4a195d28 <col:119> 'int' 0
|-CXXMethodDecl 0x561d4a18d3b8 <line:167:5, col:142> col:10 set_handler 'void (const String &, int, HandlerCallback, const void *, const void *)'
| |-ParmVarDecl 0x561d4a18d068 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x561d4a18d0e8 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x561d4a18d160 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x561d4a18d1e0 <col:79, col:108> col:91 read_user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x561d4a195d80 <col:108> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x561d4a195d60 <col:108> 'int' 0
| `-ParmVarDecl 0x561d4a18d260 <col:111, col:141> col:123 write_user_data 'const void *' cinit
|   `-ImplicitCastExpr 0x561d4a195db8 <col:141> 'const void *' <NullToPointer>
|     `-IntegerLiteral 0x561d4a195d98 <col:141> 'int' 0
|-CXXMethodDecl 0x561d4a18d7d8 <line:168:5, col:122> col:10 set_handler 'void (const String &, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x561d4a18d490 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x561d4a18d510 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x561d4a18d588 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x561d4a18d608 <col:79, col:83> col:83 read_user_data 'int'
| `-ParmVarDecl 0x561d4a18d688 <col:99, col:121> col:103 write_user_data 'int' cinit
|   `-IntegerLiteral 0x561d4a195dd0 <col:121> 'int' 0
|-CXXMethodDecl 0x561d4a18dc08 <line:169:5, col:124> col:10 set_handler 'void (const char *, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x561d4a18d8b8 <col:22, col:34> col:34 name 'const char *'
| |-ParmVarDecl 0x561d4a18d938 <col:40, col:44> col:44 flags 'int'
| |-ParmVarDecl 0x561d4a18d9b0 <col:51, col:67> col:67 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x561d4a18da30 <col:77, col:98> col:81 read_user_data 'int' cinit
| | `-IntegerLiteral 0x561d4a195df0 <col:98> 'int' 0
| `-ParmVarDecl 0x561d4a18dab0 <col:101, col:123> col:105 write_user_data 'int' cinit
|   `-IntegerLiteral 0x561d4a195e10 <col:123> 'int' 0
|-CXXMethodDecl 0x561d4a18ded0 <line:170:5, col:81> col:9 set_handler_flags 'int (const String &, int, int)'
| |-ParmVarDecl 0x561d4a18dce0 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x561d4a18dd60 <col:47, col:51> col:51 set_flags 'int'
| `-ParmVarDecl 0x561d4a18dde0 <col:62, col:80> col:66 clear_flags 'int' cinit
|   `-IntegerLiteral 0x561d4a195e30 <col:80> 'int' 0
|-EnumDecl 0x561d4a18df88 <line:171:5, line:175:36> line:171:5
| |-EnumConstantDecl 0x561d4a18e090 <col:12, col:42> col:12 TASKHANDLER_WRITE_SCHEDULED 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x561d4a18e320 <col:42> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561d4a18e070 <col:42> 'int' Int: 1
| |     `-IntegerLiteral 0x561d4a18e050 <col:42> 'int' 1
| |-EnumConstantDecl 0x561d4a18e120 <line:172:12, col:40> col:12 TASKHANDLER_WRITE_TICKETS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x561d4a18e338 <col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561d4a18e100 <col:40> 'int' Int: 2
| |     `-IntegerLiteral 0x561d4a18e0e0 <col:40> 'int' 2
| |-EnumConstantDecl 0x561d4a18e1b0 <line:173:12, col:44> col:12 TASKHANDLER_WRITE_HOME_THREAD 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x561d4a18e350 <col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561d4a18e190 <col:44> 'int' Int: 4
| |     `-IntegerLiteral 0x561d4a18e170 <col:44> 'int' 4
| |-EnumConstantDecl 0x561d4a18e240 <line:174:12, col:36> col:12 TASKHANDLER_WRITE_ALL 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x561d4a18e368 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561d4a18e220 <col:36> 'int' Int: 7
| |     `-IntegerLiteral 0x561d4a18e200 <col:36> 'int' 7
| `-EnumConstantDecl 0x561d4a18e2d0 <line:175:12, col:34> col:12 referenced TASKHANDLER_DEFAULT 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|   `-ImplicitCastExpr 0x561d4a18e380 <col:34> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x561d4a18e2b0 <col:34> 'int' Int: 6
|       `-IntegerLiteral 0x561d4a18e290 <col:34> 'int' 6
|-CXXMethodDecl 0x561d4a18e638 <line:176:5, col:106> col:10 used add_task_handlers 'void (Task *, NotifierSignal *, int, const String &)'
| |-ParmVarDecl 0x561d4a18e3a8 <col:28, col:34> col:34 task 'Task *'
| |-ParmVarDecl 0x561d4a18e448 <col:40, col:56> col:56 signal 'NotifierSignal *'
| |-ParmVarDecl 0x561d4a18e4c8 <col:64, col:68> col:68 flags 'int'
| `-ParmVarDecl 0x561d4a18e540 <col:75, col:105> col:89 prefix 'const String &' cinit
|   `-ExprWithCleanups 0x561d4a195ee8 <col:98, col:105> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x561d4a195ed0 <col:98, col:105> 'const String' lvalue
|       `-ImplicitCastExpr 0x561d4a195eb8 <col:98, col:105> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x561d4a195e98 <col:98, col:105> 'String' (CXXTemporary 0x561d4a195e98)
|           `-CXXTemporaryObjectExpr 0x561d4a195e60 <col:98, col:105> 'String' 'void ()'
|-CXXMethodDecl 0x561d4a18e8d8 <line:177:5, line:179:5> line:177:17 add_task_handlers 'void (Task *, NotifierSignal *, const String &)' inline
| |-ParmVarDecl 0x561d4a18e708 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x561d4a18e780 <col:47, col:63> col:63 used signal 'NotifierSignal *'
| |-ParmVarDecl 0x561d4a18e7f8 <col:71, col:101> col:85 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x561d4a195f98 <col:94, col:101> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x561d4a195f80 <col:94, col:101> 'const String' lvalue
| |     `-ImplicitCastExpr 0x561d4a195f68 <col:94, col:101> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x561d4a195f48 <col:94, col:101> 'String' (CXXTemporary 0x561d4a195f48)
| |         `-CXXTemporaryObjectExpr 0x561d4a195f10 <col:94, col:101> 'String' 'void ()'
| `-CompoundStmt 0x561d4a196780 <col:104, line:179:5>
|   `-CXXMemberCallExpr 0x561d4a1966f8 <line:178:9, col:68> 'void'
|     |-MemberExpr 0x561d4a1966c8 <col:9> '<bound member function type>' ->add_task_handlers 0x561d4a18e638
|     | `-CXXThisExpr 0x561d4a1966b8 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x561d4a196738 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x561d4a196638 <col:27> 'Task *' lvalue ParmVar 0x561d4a18e708 'task' 'Task *'
|     |-ImplicitCastExpr 0x561d4a196750 <col:33> 'NotifierSignal *' <LValueToRValue>
|     | `-DeclRefExpr 0x561d4a196658 <col:33> 'NotifierSignal *' lvalue ParmVar 0x561d4a18e780 'signal' 'NotifierSignal *'
|     |-ImplicitCastExpr 0x561d4a196768 <col:41> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x561d4a196678 <col:41> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x561d4a18e2d0 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x561d4a196698 <col:62> 'const String' lvalue ParmVar 0x561d4a18e7f8 'prefix' 'const String &'
|-CXXMethodDecl 0x561d4a18eae8 <line:180:5, line:182:5> line:180:17 add_task_handlers 'void (Task *, const String &)' inline
| |-ParmVarDecl 0x561d4a18e9a0 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x561d4a18ea18 <col:47, col:77> col:61 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x561d4a196048 <col:70, col:77> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x561d4a196030 <col:70, col:77> 'const String' lvalue
| |     `-ImplicitCastExpr 0x561d4a196018 <col:70, col:77> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x561d4a195ff8 <col:70, col:77> 'String' (CXXTemporary 0x561d4a195ff8)
| |         `-CXXTemporaryObjectExpr 0x561d4a195fc0 <col:70, col:77> 'String' 'void ()'
| `-CompoundStmt 0x561d4a196958 <col:80, line:182:5>
|   `-CXXMemberCallExpr 0x561d4a1968d0 <line:181:9, col:63> 'void'
|     |-MemberExpr 0x561d4a1968a0 <col:9> '<bound member function type>' ->add_task_handlers 0x561d4a18e638
|     | `-CXXThisExpr 0x561d4a196890 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x561d4a196910 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x561d4a196810 <col:27> 'Task *' lvalue ParmVar 0x561d4a18e9a0 'task' 'Task *'
|     |-ImplicitCastExpr 0x561d4a196928 <col:33> 'NotifierSignal *' <NullToPointer>
|     | `-IntegerLiteral 0x561d4a196830 <col:33> 'int' 0
|     |-ImplicitCastExpr 0x561d4a196940 <col:36> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x561d4a196850 <col:36> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x561d4a18e2d0 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x561d4a196870 <col:57> 'const String' lvalue ParmVar 0x561d4a18ea18 'prefix' 'const String &'
|-CXXMethodDecl 0x561d4a18edc8 <line:184:5, col:70> col:10 add_data_handlers 'void (const char *, int, uint8_t *)'
| |-ParmVarDecl 0x561d4a18ebb0 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x561d4a18ec30 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x561d4a18eca8 <col:57, col:66> col:66 data 'uint8_t *'
|-CXXMethodDecl 0x561d4a18f078 <line:185:5, col:67> col:10 add_data_handlers 'void (const char *, int, bool *)'
| |-ParmVarDecl 0x561d4a18ee98 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x561d4a18ef18 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x561d4a18ef98 <col:57, col:63> col:63 data 'bool *'
|-CXXMethodDecl 0x561d4a18f368 <line:186:5, col:71> col:10 add_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x561d4a18f148 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x561d4a18f1c8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x561d4a18f240 <col:57, col:67> col:67 data 'uint16_t *'
|-CXXMethodDecl 0x561d4a18f618 <line:187:5, col:66> col:10 add_data_handlers 'void (const char *, int, int *)'
| |-ParmVarDecl 0x561d4a18f438 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x561d4a18f4b8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x561d4a18f538 <col:57, col:62> col:62 data 'int *'
|-CXXMethodDecl 0x561d4a18f8c8 <line:188:5, col:71> col:10 add_data_handlers 'void (const char *, int, unsigned int *)'
| |-ParmVarDecl 0x561d4a18f6e8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x561d4a18f768 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x561d4a18f7e8 <col:57, col:67> col:67 data 'unsigned int *'
|-CXXMethodDecl 0x561d4a18fb78 <line:189:5, col:78> col:10 add_data_handlers 'void (const char *, int, atomic_uint32_t *)'
| |-ParmVarDecl 0x561d4a18f998 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x561d4a18fa18 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x561d4a18fa90 <col:57, col:74> col:74 data 'atomic_uint32_t *'
|-CXXMethodDecl 0x561d4a18fe28 <line:190:5, col:67> col:10 add_data_handlers 'void (const char *, int, long *)'
| |-ParmVarDecl 0x561d4a18fc48 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x561d4a18fcc8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x561d4a18fd48 <col:57, col:63> col:63 data 'long *'
|-CXXMethodDecl 0x561d4a190138 <line:191:5, col:76> col:10 add_data_handlers 'void (const char *, int, unsigned long *)'
| |-ParmVarDecl 0x561d4a18ff50 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x561d4a18ffd0 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x561d4a190050 <col:57, col:72> col:72 data 'unsigned long *'
|-CXXMethodDecl 0x561d4a190418 <line:193:5, col:72> col:10 add_data_handlers 'void (const char *, int, long long *)'
| |-ParmVarDecl 0x561d4a190208 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x561d4a190288 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x561d4a190330 <col:57, col:68> col:68 data 'long long *'
|-CXXMethodDecl 0x561d4a1906f8 <line:194:5, col:81> col:10 add_data_handlers 'void (const char *, int, unsigned long long *)'
| |-ParmVarDecl 0x561d4a1904e8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x561d4a190568 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x561d4a190610 <col:57, col:77> col:77 data 'unsigned long long *'
|-CXXMethodDecl 0x561d4a190960 <line:196:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x561d4a1907c8 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x561d4a190848 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x561d4a1908c0 <col:67, col:77> col:77 data 'uint16_t *'
|-CXXMethodDecl 0x561d4a190c08 <line:197:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint32_t *)'
| |-ParmVarDecl 0x561d4a190a30 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x561d4a190ab0 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x561d4a190b28 <col:67, col:77> col:77 data 'uint32_t *'
|-CXXMethodDecl 0x561d4a190eb8 <line:199:5, col:69> col:10 add_data_handlers 'void (const char *, int, double *)'
| |-ParmVarDecl 0x561d4a190cd8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x561d4a190d58 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x561d4a190dd8 <col:57, col:65> col:65 data 'double *'
|-CXXMethodDecl 0x561d4a191168 <line:201:5, col:69> col:10 add_data_handlers 'void (const char *, int, String *)'
| |-ParmVarDecl 0x561d4a190f88 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x561d4a191008 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x561d4a191080 <col:57, col:65> col:65 data 'String *'
|-CXXMethodDecl 0x561d4a191418 <line:202:5, col:72> col:10 add_data_handlers 'void (const char *, int, IPAddress *)'
| |-ParmVarDecl 0x561d4a191238 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x561d4a1912b8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x561d4a191330 <col:57, col:68> col:68 data 'IPAddress *'
|-CXXMethodDecl 0x561d4a1916e8 <line:203:5, col:75> col:10 add_data_handlers 'void (const char *, int, EtherAddress *)'
| |-ParmVarDecl 0x561d4a1914e8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x561d4a191568 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x561d4a191608 <col:57, col:71> col:71 data 'EtherAddress *'
|-CXXMethodDecl 0x561d4a191a18 <line:204:5, col:98> col:10 add_data_handlers 'void (const char *, int, Timestamp *, bool)'
| |-ParmVarDecl 0x561d4a1917b8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x561d4a191838 <col:46, col:50> col:50 flags 'int'
| |-ParmVarDecl 0x561d4a1918b0 <col:57, col:68> col:68 data 'Timestamp *'
| `-ParmVarDecl 0x561d4a191928 <col:74, col:93> col:79 is_interval 'bool' cinit
|   `-CXXBoolLiteralExpr 0x561d4a196060 <col:93> 'bool' false
|-CXXMethodDecl 0x561d4a191c00 <line:206:5, col:58> col:19 read_positional_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x561d4a191ae8 <col:43, col:50> col:51 'Element *'
| `-ParmVarDecl 0x561d4a191b68 <col:53, col:57> col:58 'void *'
|-CXXMethodDecl 0x561d4a191dd8 <line:207:5, col:55> col:19 read_keyword_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x561d4a191cc0 <col:40, col:47> col:48 'Element *'
| `-ParmVarDecl 0x561d4a191d40 <col:50, col:54> col:55 'void *'
|-CXXMethodDecl 0x561d4a1920b8 <line:208:5, col:92> col:16 reconfigure_positional_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x561d4a191e98 <col:47, col:59> col:60 'const String &'
| |-ParmVarDecl 0x561d4a191f10 <col:62, col:69> col:70 'Element *'
| |-ParmVarDecl 0x561d4a191f90 <col:72, col:76> col:77 'void *'
| `-ParmVarDecl 0x561d4a192008 <col:79, col:91> col:92 'ErrorHandler *'
|-CXXMethodDecl 0x561d4a1923a8 <line:209:5, col:89> col:16 reconfigure_keyword_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x561d4a192188 <col:44, col:56> col:57 'const String &'
| |-ParmVarDecl 0x561d4a192200 <col:59, col:66> col:67 'Element *'
| |-ParmVarDecl 0x561d4a192280 <col:69, col:73> col:74 'void *'
| `-ParmVarDecl 0x561d4a1922f8 <col:76, col:88> col:89 'ErrorHandler *'
|-CXXMethodDecl 0x561d4a1925e0 <line:211:5, col:50> col:17 llrpc 'int (unsigned int, void *)' virtual
| |-ParmVarDecl 0x561d4a192480 <col:23, col:32> col:32 command 'unsigned int'
| `-ParmVarDecl 0x561d4a192500 <col:41, col:47> col:47 arg 'void *'
|-CXXMethodDecl 0x561d4a1927c8 <line:212:5, col:48> col:9 local_llrpc 'int (unsigned int, void *)'
| |-ParmVarDecl 0x561d4a1926a8 <col:21, col:30> col:30 command 'unsigned int'
| `-ParmVarDecl 0x561d4a192728 <col:39, col:45> col:45 arg 'void *'
|-CXXRecordDecl 0x561d4a192878 prev 0x561d4a18a018 <line:214:5, line:252:5> line:214:11 referenced class Port definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x561d4a192970 <col:5, col:11> col:11 implicit referenced class Port
| |-AccessSpecDecl 0x561d4a192a00 <col:18, col:24> col:18 public
| |-CXXMethodDecl 0x561d4a192a78 <line:216:9, col:30> col:21 used active 'bool () const' inline
| |-CXXMethodDecl 0x561d4a192b38 <line:217:9, col:35> col:25 element 'Element *() const' inline
| |-CXXMethodDecl 0x561d4a192c00 <line:218:9, col:27> col:20 port 'int () const' inline
| |-CXXMethodDecl 0x561d4a192d78 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| | |-ParmVarDecl 0x561d4a192cb0 <col:54, col:62> col:62 p 'Packet *'
| | |-NoInlineAttr 0x561d4a192e20 <col:24>
| | `-OptimizeNoneAttr 0x561d4a192e78 <col:34>
| |-CXXMethodDecl 0x561d4a192ec0 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
| |-CXXMethodDecl 0x561d4a193178 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| | |-ParmVarDecl 0x561d4a192f70 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x561d4a192fe8 <col:43, col:52> col:52 e 'Element *'
| | `-ParmVarDecl 0x561d4a193068 <col:55, col:59> col:59 port 'int'
| |-AccessSpecDecl 0x561d4a193230 <line:229:7, col:14> col:7 private
| |-FieldDecl 0x561d4a193268 <line:231:9, col:18> col:18 referenced _e 'Element *'
| |-FieldDecl 0x561d4a1932d0 <line:232:9, col:13> col:13 referenced _port 'int'
| |-CXXConstructorDecl 0x561d4a193358 <line:247:9, col:21> col:16 Port 'void ()' inline
| |-CXXMethodDecl 0x561d4a193678 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| | |-ParmVarDecl 0x561d4a193410 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x561d4a193488 <col:43, col:52> col:52 owner 'Element *'
| | |-ParmVarDecl 0x561d4a193500 <col:59, col:68> col:68 e 'Element *'
| | `-ParmVarDecl 0x561d4a193580 <col:71, col:75> col:75 port 'int'
| |-FriendDecl 0x561d4a193790 <line:250:9, col:22> col:16 'class Element':'Element'
| |-CXXConstructorDecl 0x561d4a19a0f8 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x561d4a19a0f8
| | `-ParmVarDecl 0x561d4a19a208 <col:11> col:11 'const Element::Port &'
| |-CXXConstructorDecl 0x561d4a19a2a8 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x561d4a19a2a8
| | `-ParmVarDecl 0x561d4a19a3b8 <col:11> col:11 'Element::Port &&'
| `-CXXDestructorDecl 0x561d4a276070 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x561d4a193808 <line:256:5, col:49> col:12 id 'String () const'
| `-DeprecatedAttr 0x561d4a1938a8 <col:38> "" ""
|-CXXMethodDecl 0x561d4a193938 <line:257:5, col:55> col:12 landmark 'String () const'
| `-DeprecatedAttr 0x561d4a1939d8 <col:44> "" ""
|-AccessSpecDecl 0x561d4a193a48 <line:260:3, col:10> col:3 private
|-EnumDecl 0x561d4a193a70 <line:262:5, col:29> col:5
| `-EnumConstantDecl 0x561d4a193b70 <col:12, col:27> col:12 referenced INLINE_PORTS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:262:5)'
|   `-ImplicitCastExpr 0x561d4a193bc0 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x561d4a193b50 <col:27> 'int' Int: 4
|       `-IntegerLiteral 0x561d4a193b30 <col:27> 'int' 4
|-FieldDecl 0x561d4a193c78 <line:264:5, col:19> col:11 referenced _ports 'Element::Port *[2]'
|-FieldDecl 0x561d4a193e28 <line:265:5, col:36> col:10 _inline_ports 'Element::Port [4]'
|-FieldDecl 0x561d4a193ee0 <line:267:5, col:18> col:9 referenced _nports 'int [2]'
|-FieldDecl 0x561d4a193f60 <line:269:5, col:13> col:13 referenced _router 'Router *'
|-FieldDecl 0x561d4a193fc8 <line:270:5, col:9> col:9 referenced _eindex 'int'
|-CXXConstructorDecl 0x561d4a194118 <line:292:5, col:28> col:5 Element 'void (const Element &)'
| `-ParmVarDecl 0x561d4a194058 <col:13, col:27> col:28 'const Element &'
|-CXXMethodDecl 0x561d4a1942c8 <line:293:5, col:39> col:14 operator= 'Element &(const Element &)'
| `-ParmVarDecl 0x561d4a1941d8 <col:24, col:38> col:39 'const Element &'
|-CXXMethodDecl 0x561d4a1944a8 <line:296:5, col:28> col:9 set_nports 'int (int, int)'
| |-ParmVarDecl 0x561d4a194388 <col:20> col:23 'int'
| `-ParmVarDecl 0x561d4a194408 <col:25> col:28 'int'
|-CXXMethodDecl 0x561d4a194750 <line:297:5, col:47> col:9 notify_nports 'int (int, int, ErrorHandler *)'
| |-ParmVarDecl 0x561d4a194570 <col:23> col:26 'int'
| |-ParmVarDecl 0x561d4a1945f0 <col:28> col:31 'int'
| `-ParmVarDecl 0x561d4a194668 <col:33, col:46> col:47 'ErrorHandler *'
|-EnumDecl 0x561d4a194808 <line:298:5, col:47> col:10 Processing
| |-EnumConstantDecl 0x561d4a1948d0 <col:23> col:23 VAGNOSTIC 'Element::Processing'
| |-EnumConstantDecl 0x561d4a194920 <col:34> col:34 VPUSH 'Element::Processing'
| `-EnumConstantDecl 0x561d4a194970 <col:41> col:41 VPULL 'Element::Processing'
|-CXXMethodDecl 0x561d4a194b50 <line:299:5, col:71> col:16 next_processing_code 'int (const char *&, ErrorHandler *)' static
| |-ParmVarDecl 0x561d4a194a00 <col:37, col:50> col:50 p 'const char *&'
| `-ParmVarDecl 0x561d4a194a78 <col:53, col:67> col:67 errh 'ErrorHandler *'
|-CXXMethodDecl 0x561d4a194df8 <line:300:5, col:80> col:10 processing_vector 'void (int *, int *, ErrorHandler *) const'
| |-ParmVarDecl 0x561d4a194c18 <col:28, col:33> col:33 input_codes 'int *'
| |-ParmVarDecl 0x561d4a194c98 <col:46, col:51> col:51 output_codes 'int *'
| `-ParmVarDecl 0x561d4a194d10 <col:65, col:77> col:78 'ErrorHandler *'
|-CXXMethodDecl 0x561d4a195018 <line:302:5, col:74> col:10 initialize_ports 'void (const int *, const int *)'
| |-ParmVarDecl 0x561d4a194ec8 <col:27, col:38> col:38 input_codes 'const int *'
| `-ParmVarDecl 0x561d4a194f48 <col:51, col:62> col:62 output_codes 'const int *'
|-CXXMethodDecl 0x561d4a195350 <line:303:5, col:60> col:9 connect_port 'int (bool, int, Element *, int)'
| |-ParmVarDecl 0x561d4a1950d8 <col:22, col:27> col:27 isoutput 'bool'
| |-ParmVarDecl 0x561d4a195158 <col:37, col:41> col:41 port 'int'
| |-ParmVarDecl 0x561d4a1951d0 <col:47, col:54> col:55 'Element *'
| `-ParmVarDecl 0x561d4a195250 <col:57> col:60 'int'
|-CXXMethodDecl 0x561d4a195538 <line:305:5, col:68> col:19 read_handlers_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x561d4a195420 <col:41, col:50> col:50 e 'Element *'
| `-ParmVarDecl 0x561d4a1954a0 <col:53, col:59> col:59 user_data 'void *'
|-CXXMethodDecl 0x561d4a195688 <line:306:5, col:51> col:10 add_default_handlers 'void (bool)'
| `-ParmVarDecl 0x561d4a1955f8 <col:31, col:36> col:36 writable_config 'bool'
|-CXXMethodDecl 0x561d4a195a08 <line:307:5, col:100> col:17 add_data_handlers 'void (const char *, int, HandlerCallback, void *)' inline
| |-ParmVarDecl 0x561d4a195748 <col:35, col:47> col:47 name 'const char *'
| |-ParmVarDecl 0x561d4a1957c8 <col:53, col:57> col:57 flags 'int'
| |-ParmVarDecl 0x561d4a195840 <col:64, col:80> col:80 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| `-ParmVarDecl 0x561d4a1958c0 <col:90, col:96> col:96 data 'void *'
`-FriendDecl 0x561d4a195b20 <line:309:5, col:18> col:12 'class Router':'Router'

Layout: <CGRecordLayout
  LLVMType:%class.Element = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Element.base = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class Storage
         0 |   Storage::index_type _capacity
         4 |   volatile Storage::index_type _head
         8 |   volatile Storage::index_type _tail
           | [sizeof=12, dsize=12, align=4,
           |  nvsize=12, nvalign=4]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x561d4a2585d8 <../dummy_inc/click/standard/storage.hh:9:1, line:54:1> line:9:7 referenced class Storage definition
|-DefinitionData pass_in_registers trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x561d4a2586f8 <col:1, col:7> col:7 implicit referenced class Storage
|-AccessSpecDecl 0x561d4a258788 <col:17, col:23> col:17 public
|-TypedefDecl 0x561d4a2587c0 <line:11:5, col:22> col:22 referenced index_type 'uint32_t':'unsigned int'
| `-TypedefType 0x561d49d760f0 'uint32_t' sugar
|   |-Typedef 0x561d49c88408 'uint32_t'
|   `-TypedefType 0x561d49c61440 '__uint32_t' sugar
|     |-Typedef 0x561d49c61038 '__uint32_t'
|     `-BuiltinType 0x561d49c1f410 'unsigned int'
|-TypedefDecl 0x561d4a258828 <line:12:5, col:21> col:21 referenced signed_index_type 'int32_t':'int'
| `-TypedefType 0x561d49d761d0 'int32_t' sugar
|   |-Typedef 0x561d49c88268 'int32_t'
|   `-TypedefType 0x561d49c613b0 '__int32_t' sugar
|     |-Typedef 0x561d49c60fc8 '__int32_t'
|     `-BuiltinType 0x561d49c1f370 'int'
|-VarDecl 0x561d4a2588b0 <line:13:5, col:59> col:29 referenced invalid_index 'const Storage::index_type':'const unsigned int' static cinit
| `-CStyleCastExpr 0x561d4a258978 <col:45, col:59> 'Storage::index_type':'unsigned int' <NoOp>
|   `-ImplicitCastExpr 0x561d4a258960 <col:58, col:59> 'Storage::index_type':'unsigned int' <IntegralCast> part_of_explicit_cast
|     `-UnaryOperator 0x561d4a258938 <col:58, col:59> 'int' prefix '-'
|       `-IntegerLiteral 0x561d4a258918 <col:59> 'int' 1
|-CXXConstructorDecl 0x561d4a258a60 <line:15:5, col:38> col:5 Storage 'void ()'
| |-CXXCtorInitializer Field 0x561d4a25a2b0 '_head' 'volatile Storage::index_type':'volatile unsigned int'
| | `-ImplicitCastExpr 0x561d4a25a3b8 <col:23> 'volatile Storage::index_type':'volatile unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x561d4a25a378 <col:23> 'int' 0
| |-CXXCtorInitializer Field 0x561d4a25a310 '_tail' 'volatile Storage::index_type':'volatile unsigned int'
| | `-ImplicitCastExpr 0x561d4a25a438 <col:33> 'volatile Storage::index_type':'volatile unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x561d4a25a3f8 <col:33> 'int' 0
| `-CompoundStmt 0x561d4a25a488 <col:36, col:38>
|-CXXConversionDecl 0x561d4a258b68 <line:17:5, col:52> col:5 operator bool 'bool () const'
| `-CompoundStmt 0x561d4a25a578 <col:27, col:52>
|   `-ReturnStmt 0x561d4a25a568 <col:29, col:45>
|     `-BinaryOperator 0x561d4a25a548 <col:36, col:45> 'bool' '!='
|       |-ImplicitCastExpr 0x561d4a25a518 <col:36> 'Storage::index_type':'unsigned int' <LValueToRValue>
|       | `-MemberExpr 0x561d4a25a4a8 <col:36> 'const volatile Storage::index_type':'const volatile unsigned int' lvalue ->_head 0x561d4a25a2b0
|       |   `-CXXThisExpr 0x561d4a25a498 <col:36> 'const Storage *' implicit this
|       `-ImplicitCastExpr 0x561d4a25a530 <col:45> 'Storage::index_type':'unsigned int' <LValueToRValue>
|         `-MemberExpr 0x561d4a25a4e8 <col:45> 'const volatile Storage::index_type':'const volatile unsigned int' lvalue ->_tail 0x561d4a25a310
|           `-CXXThisExpr 0x561d4a25a4d8 <col:45> 'const Storage *' implicit this
|-CXXMethodDecl 0x561d4a258c38 <line:18:5, col:49> col:10 empty 'bool () const'
| `-CompoundStmt 0x561d4a25a670 <col:24, col:49>
|   `-ReturnStmt 0x561d4a25a660 <col:26, col:42>
|     `-BinaryOperator 0x561d4a25a640 <col:33, col:42> 'bool' '=='
|       |-ImplicitCastExpr 0x561d4a25a610 <col:33> 'Storage::index_type':'unsigned int' <LValueToRValue>
|       | `-MemberExpr 0x561d4a25a5a0 <col:33> 'const volatile Storage::index_type':'const volatile unsigned int' lvalue ->_head 0x561d4a25a2b0
|       |   `-CXXThisExpr 0x561d4a25a590 <col:33> 'const Storage *' implicit this
|       `-ImplicitCastExpr 0x561d4a25a628 <col:42> 'Storage::index_type':'unsigned int' <LValueToRValue>
|         `-MemberExpr 0x561d4a25a5e0 <col:42> 'const volatile Storage::index_type':'const volatile unsigned int' lvalue ->_tail 0x561d4a25a310
|           `-CXXThisExpr 0x561d4a25a5d0 <col:42> 'const Storage *' implicit this
|-CXXMethodDecl 0x561d4a258d00 <line:19:5, col:16> col:9 size 'int () const'
|-CXXMethodDecl 0x561d4a258f40 <line:20:5, col:48> col:9 used size 'int (Storage::index_type, Storage::index_type) const'
| |-ParmVarDecl 0x561d4a258db0 <col:14, col:25> col:25 head 'Storage::index_type':'unsigned int'
| `-ParmVarDecl 0x561d4a258e28 <col:31, col:42> col:42 tail 'Storage::index_type':'unsigned int'
|-CXXMethodDecl 0x561d4a259018 <line:21:5, col:46> col:9 capacity 'int () const'
| `-CompoundStmt 0x561d4a25a708 <col:26, col:46>
|   `-ReturnStmt 0x561d4a25a6f8 <col:28, col:35>
|     `-ImplicitCastExpr 0x561d4a25a6e0 <col:35> 'int' <IntegralCast>
|       `-ImplicitCastExpr 0x561d4a25a6c8 <col:35> 'Storage::index_type':'unsigned int' <LValueToRValue>
|         `-MemberExpr 0x561d4a25a698 <col:35> 'const Storage::index_type':'const unsigned int' lvalue ->_capacity 0x561d4a25a228
|           `-CXXThisExpr 0x561d4a25a688 <col:35> 'const Storage *' implicit this
|-CXXMethodDecl 0x561d4a259108 <line:23:5, col:45> col:16 used head 'Storage::index_type () const'
| `-CompoundStmt 0x561d4a25a788 <col:29, col:45>
|   `-ReturnStmt 0x561d4a25a778 <col:31, col:38>
|     `-ImplicitCastExpr 0x561d4a25a760 <col:38> 'Storage::index_type':'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x561d4a25a730 <col:38> 'const volatile Storage::index_type':'const volatile unsigned int' lvalue ->_head 0x561d4a25a2b0
|         `-CXXThisExpr 0x561d4a25a720 <col:38> 'const Storage *' implicit this
|-CXXMethodDecl 0x561d4a2591c8 <line:24:5, col:45> col:16 used tail 'Storage::index_type () const'
| `-CompoundStmt 0x561d4a25a808 <col:29, col:45>
|   `-ReturnStmt 0x561d4a25a7f8 <col:31, col:38>
|     `-ImplicitCastExpr 0x561d4a25a7e0 <col:38> 'Storage::index_type':'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x561d4a25a7b0 <col:38> 'const volatile Storage::index_type':'const volatile unsigned int' lvalue ->_tail 0x561d4a25a310
|         `-CXXThisExpr 0x561d4a25a7a0 <col:38> 'const Storage *' implicit this
|-CXXMethodDecl 0x561d4a259368 <line:26:5, line:28:5> line:26:16 used next_i 'Storage::index_type (Storage::index_type) const'
| |-ParmVarDecl 0x561d4a259278 <col:23, col:34> col:34 used i 'Storage::index_type':'unsigned int'
| `-CompoundStmt 0x561d4a25a9f8 <col:43, line:28:5>
|   `-ReturnStmt 0x561d4a25a9e8 <line:27:2, col:32>
|     `-ParenExpr 0x561d4a25a9c8 <col:9, col:32> 'unsigned int'
|       `-ConditionalOperator 0x561d4a25a998 <col:10, col:31> 'unsigned int'
|         |-BinaryOperator 0x561d4a25a8b0 <col:10, col:13> 'bool' '!='
|         | |-ImplicitCastExpr 0x561d4a25a880 <col:10> 'Storage::index_type':'unsigned int' <LValueToRValue>
|         | | `-DeclRefExpr 0x561d4a25a820 <col:10> 'Storage::index_type':'unsigned int' lvalue ParmVar 0x561d4a259278 'i' 'Storage::index_type':'unsigned int'
|         | `-ImplicitCastExpr 0x561d4a25a898 <col:13> 'Storage::index_type':'unsigned int' <LValueToRValue>
|         |   `-MemberExpr 0x561d4a25a850 <col:13> 'const Storage::index_type':'const unsigned int' lvalue ->_capacity 0x561d4a25a228
|         |     `-CXXThisExpr 0x561d4a25a840 <col:13> 'const Storage *' implicit this
|         |-BinaryOperator 0x561d4a25a940 <col:25, col:27> 'unsigned int' '+'
|         | |-ImplicitCastExpr 0x561d4a25a910 <col:25> 'Storage::index_type':'unsigned int' <LValueToRValue>
|         | | `-DeclRefExpr 0x561d4a25a8d0 <col:25> 'Storage::index_type':'unsigned int' lvalue ParmVar 0x561d4a259278 'i' 'Storage::index_type':'unsigned int'
|         | `-ImplicitCastExpr 0x561d4a25a928 <col:27> 'unsigned int' <IntegralCast>
|         |   `-IntegerLiteral 0x561d4a25a8f0 <col:27> 'int' 1
|         `-ImplicitCastExpr 0x561d4a25a980 <col:31> 'unsigned int' <IntegralCast>
|           `-IntegerLiteral 0x561d4a25a960 <col:31> 'int' 0
|-CXXMethodDecl 0x561d4a2594b0 <line:29:5, line:31:5> line:29:16 used prev_i 'Storage::index_type (Storage::index_type) const'
| |-ParmVarDecl 0x561d4a259420 <col:23, col:34> col:34 used i 'Storage::index_type':'unsigned int'
| `-CompoundStmt 0x561d4a25abe8 <col:43, line:31:5>
|   `-ReturnStmt 0x561d4a25abd8 <line:30:2, col:32>
|     `-ParenExpr 0x561d4a25abb8 <col:9, col:32> 'unsigned int'
|       `-ConditionalOperator 0x561d4a25ab88 <col:10, col:23> 'unsigned int'
|         |-BinaryOperator 0x561d4a25aa80 <col:10, col:13> 'bool' '!='
|         | |-ImplicitCastExpr 0x561d4a25aa50 <col:10> 'Storage::index_type':'unsigned int' <LValueToRValue>
|         | | `-DeclRefExpr 0x561d4a25aa10 <col:10> 'Storage::index_type':'unsigned int' lvalue ParmVar 0x561d4a259420 'i' 'Storage::index_type':'unsigned int'
|         | `-ImplicitCastExpr 0x561d4a25aa68 <col:13> 'unsigned int' <IntegralCast>
|         |   `-IntegerLiteral 0x561d4a25aa30 <col:13> 'int' 0
|         |-BinaryOperator 0x561d4a25ab10 <col:17, col:19> 'unsigned int' '-'
|         | |-ImplicitCastExpr 0x561d4a25aae0 <col:17> 'Storage::index_type':'unsigned int' <LValueToRValue>
|         | | `-DeclRefExpr 0x561d4a25aaa0 <col:17> 'Storage::index_type':'unsigned int' lvalue ParmVar 0x561d4a259420 'i' 'Storage::index_type':'unsigned int'
|         | `-ImplicitCastExpr 0x561d4a25aaf8 <col:19> 'unsigned int' <IntegralCast>
|         |   `-IntegerLiteral 0x561d4a25aac0 <col:19> 'int' 1
|         `-ImplicitCastExpr 0x561d4a25ab70 <col:23> 'Storage::index_type':'unsigned int' <LValueToRValue>
|           `-MemberExpr 0x561d4a25ab40 <col:23> 'const Storage::index_type':'const unsigned int' lvalue ->_capacity 0x561d4a25a228
|             `-CXXThisExpr 0x561d4a25ab30 <col:23> 'const Storage *' implicit this
|-CXXMethodDecl 0x561d4a259628 <line:34:5, col:54> col:10 set_capacity 'void (Storage::index_type)'
| |-ParmVarDecl 0x561d4a259568 <col:23, col:34> col:34 used c 'Storage::index_type':'unsigned int'
| `-CompoundStmt 0x561d4a25ac98 <col:37, col:54>
|   `-BinaryOperator 0x561d4a25ac78 <col:39, col:51> 'Storage::index_type':'unsigned int' lvalue '='
|     |-MemberExpr 0x561d4a25ac10 <col:39> 'Storage::index_type':'unsigned int' lvalue ->_capacity 0x561d4a25a228
|     | `-CXXThisExpr 0x561d4a25ac00 <col:39> 'Storage *' implicit this
|     `-ImplicitCastExpr 0x561d4a25ac60 <col:51> 'Storage::index_type':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x561d4a25ac40 <col:51> 'Storage::index_type':'unsigned int' lvalue ParmVar 0x561d4a259568 'c' 'Storage::index_type':'unsigned int'
|-CXXMethodDecl 0x561d4a259770 <line:35:5, col:38> col:17 used set_head 'void (Storage::index_type)' inline
| `-ParmVarDecl 0x561d4a2596e0 <col:26, col:37> col:37 h 'Storage::index_type':'unsigned int'
|-CXXMethodDecl 0x561d4a2598b8 <line:36:5, col:38> col:17 used set_tail 'void (Storage::index_type)' inline
| `-ParmVarDecl 0x561d4a259828 <col:26, col:37> col:37 t 'Storage::index_type':'unsigned int'
|-CXXMethodDecl 0x561d4a259a00 <line:37:5, col:46> col:17 used set_head_release 'void (Storage::index_type)' inline
| `-ParmVarDecl 0x561d4a259970 <col:34, col:45> col:45 h 'Storage::index_type':'unsigned int'
|-CXXMethodDecl 0x561d4a259b48 <line:38:5, col:46> col:17 set_tail_acquire 'void (Storage::index_type)' inline
| `-ParmVarDecl 0x561d4a259ab8 <col:34, col:45> col:45 t 'Storage::index_type':'unsigned int'
|-CXXMethodDecl 0x561d4a259c38 <line:39:5, col:43> col:23 reserve_tail_atomic 'Storage::index_type ()' inline
|-CXXMethodDecl 0x561d4a259ed8 <line:41:5, line:43:35> line:41:24 packet_memory_barrier 'void (Packet *volatile &, volatile Storage::index_type &)' static inline
| |-ParmVarDecl 0x561d4a259d20 <col:46, col:64> col:64 packet 'Packet *volatile &'
| |-ParmVarDecl 0x561d4a259dc8 <line:42:46, col:67> col:67 index 'volatile Storage::index_type &'
| `-DeprecatedAttr 0x561d4a259f88 <line:43:24> "" ""
|-CXXMethodDecl 0x561d4a25a0d8 <line:44:5, line:45:35> line:44:17 packet_memory_barrier 'void (Packet *volatile &)' inline
| |-ParmVarDecl 0x561d4a25a010 <col:39, col:57> col:57 packet 'Packet *volatile &'
| `-DeprecatedAttr 0x561d4a25a180 <line:45:24> "" ""
|-AccessSpecDecl 0x561d4a25a1f0 <line:47:3, col:12> col:3 protected
|-FieldDecl 0x561d4a25a228 <line:48:5, col:16> col:16 referenced _capacity 'Storage::index_type':'unsigned int'
|-AccessSpecDecl 0x561d4a25a278 <line:50:3, col:10> col:3 private
|-FieldDecl 0x561d4a25a2b0 <line:51:5, col:25> col:25 referenced _head 'volatile Storage::index_type':'volatile unsigned int'
|-FieldDecl 0x561d4a25a310 <line:52:5, col:25> col:25 referenced _tail 'volatile Storage::index_type':'volatile unsigned int'
`-CXXDestructorDecl 0x561d4a262e10 <line:9:7> col:7 implicit ~Storage 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.Storage = type { i32, i32, i32 }
  NonVirtualBaseLLVMType:%class.Storage = type { i32, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class SimpleQueue
         0 |   class Element (primary base)
         0 |     (Element vtable pointer)
         8 |     class Element::Port *[2] _ports
        24 |     class Element::Port [4] _inline_ports
        88 |     int [2] _nports
        96 |     class Router * _router
       104 |     int _eindex
       108 |   class Storage (base)
       108 |     Storage::index_type _capacity
       112 |     volatile Storage::index_type _head
       116 |     volatile Storage::index_type _tail
       120 |   class Packet *volatile * _q
       128 |   volatile int _drops
       132 |   int _highwater_length
           | [sizeof=136, dsize=136, align=8,
           |  nvsize=136, nvalign=8]

*** Dumping AST Record Layout
         0 | class atomic_uint32_t
         0 |   uint32_t _val
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Packet::Anno
         0 |   char [48] c
         0 |   uint8_t [48] u8
         0 |   uint16_t [24] u16
         0 |   uint32_t [12] u32
         0 |   uint64_t [6] u64
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Packet::AllAnno
         0 |   union Packet::Anno cb
         0 |     char [48] c
         0 |     uint8_t [48] u8
         0 |     uint16_t [24] u16
         0 |     uint32_t [12] u32
         0 |     uint64_t [6] u64
        48 |   unsigned char * mac
        56 |   unsigned char * nh
        64 |   unsigned char * h
        72 |   enum Packet::PacketType pkt_type
        76 |   char [8] timestamp
        88 |   class Packet * next
        96 |   class Packet * prev
           | [sizeof=104, dsize=104, align=8,
           |  nvsize=104, nvalign=8]

*** Dumping AST Record Layout
         0 | class Packet
         0 |   class atomic_uint32_t _use_count
         0 |     uint32_t _val
         8 |   class Packet * _data_packet
        16 |   unsigned char * _head
        24 |   unsigned char * _data
        32 |   unsigned char * _tail
        40 |   unsigned char * _end
        48 |   struct Packet::AllAnno _aa
        48 |     union Packet::Anno cb
        48 |       char [48] c
        48 |       uint8_t [48] u8
        48 |       uint16_t [24] u16
        48 |       uint32_t [12] u32
        48 |       uint64_t [6] u64
        96 |     unsigned char * mac
       104 |     unsigned char * nh
       112 |     unsigned char * h
       120 |     enum Packet::PacketType pkt_type
       124 |     char [8] timestamp
       136 |     class Packet * next
       144 |     class Packet * prev
       152 |   Packet::buffer_destructor_type _destructor
       160 |   void * _destructor_argument
           | [sizeof=168, dsize=168, align=8,
           |  nvsize=168, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x561d49f413b0 <../dummy_inc/click/atomic.hh:52:1, line:94:1> line:52:7 referenced class atomic_uint32_t definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x561d49f414c8 <col:1, col:7> col:7 implicit referenced class atomic_uint32_t
|-AccessSpecDecl 0x561d49f41558 <col:25, col:31> col:25 public
|-CXXMethodDecl 0x561d49f41628 <line:57:5, col:29> col:21 used value 'uint32_t () const' inline
|-CXXConversionDecl 0x561d49f41710 <line:58:5, col:32> col:12 used operator unsigned int 'uint32_t () const' inline
|-CXXMethodDecl 0x561d49f41928 <line:60:5, col:49> col:29 used operator= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x561d49f417d0 <col:39, col:48> col:48 x 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x561d49f41ad8 <line:62:5, col:53> col:29 operator+= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x561d49f419e0 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x561d49f41c20 <line:63:5, col:53> col:29 operator-= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x561d49f41b90 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x561d49f41d68 <line:64:5, col:53> col:29 operator|= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x561d49f41cd8 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x561d49f41eb0 <line:65:5, col:53> col:29 operator&= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x561d49f41e20 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x561d49f41f78 <line:67:5, col:28> col:17 used operator++ 'void ()' inline
|-CXXMethodDecl 0x561d49f420c0 <line:68:5, col:31> col:17 operator++ 'void (int)' inline
| `-ParmVarDecl 0x561d49f42030 <col:28> col:31 'int'
|-CXXMethodDecl 0x561d49f42188 <line:69:5, col:28> col:17 used operator-- 'void ()' inline
|-CXXMethodDecl 0x561d49f422d0 <line:70:5, col:31> col:17 operator-- 'void (int)' inline
| `-ParmVarDecl 0x561d49f42240 <col:28> col:31 'int'
|-CXXMethodDecl 0x561d49f42448 <line:72:5, col:42> col:21 swap 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x561d49f42388 <col:26, col:35> col:35 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x561d49f42590 <line:73:5, col:49> col:21 fetch_and_add 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x561d49f42500 <col:35, col:44> col:44 delta 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x561d49f42658 <line:74:5, col:30> col:17 dec_and_test 'bool ()' inline
|-CXXMethodDecl 0x561d49f42818 <line:75:5, col:69> col:21 used compare_swap 'uint32_t (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x561d49f42708 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x561d49f42780 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x561d49f42a68 <line:76:5, col:97> col:17 compare_and_swap 'bool (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x561d49f428d8 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x561d49f42950 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x561d49f42b18 <col:86> "" ""
|-CXXMethodDecl 0x561d49f42d88 <line:78:5, col:71> col:28 used swap 'uint32_t (volatile uint32_t &, uint32_t)' static inline
| |-ParmVarDecl 0x561d49f42bf8 <col:33, col:52> col:52 x 'volatile uint32_t &'
| `-ParmVarDecl 0x561d49f42c70 <col:55, col:64> col:64 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x561d49f42f38 <line:79:5, col:48> col:24 used inc 'void (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x561d49f42e48 <col:28, col:47> col:47 x 'volatile uint32_t &'
|-CXXMethodDecl 0x561d49f430e8 <line:80:5, col:57> col:24 used dec_and_test 'bool (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x561d49f42ff0 <col:37, col:56> col:56 x 'volatile uint32_t &'
|-CXXMethodDecl 0x561d49f433b8 <line:81:5, col:98> col:28 used compare_swap 'uint32_t (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x561d49f431a0 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x561d49f43218 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x561d49f43290 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x561d49f43698 <line:82:5, col:126> col:24 compare_and_swap 'bool (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x561d49f43480 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x561d49f434f8 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x561d49f43570 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x561d49f43750 <col:115> "" ""
|-AccessSpecDecl 0x561d49f437c0 <line:84:3, col:10> col:3 private
|-FieldDecl 0x561d49f437f8 <line:91:5, col:14> col:14 referenced _val 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x561d49f44d10 <line:52:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x561d49f44d10
| `-ParmVarDecl 0x561d49f44e18 <col:7> col:7 'const atomic_uint32_t &'
|-CXXMethodDecl 0x561d49f44eb8 <col:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x561d49f44eb8
| `-ParmVarDecl 0x561d49f44fc8 <col:7> col:7 'atomic_uint32_t &&'
|-CXXConstructorDecl 0x561d49f7a5f8 <col:7> col:7 implicit used atomic_uint32_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x561d4a16c970 <col:7>
|-CXXConstructorDecl 0x561d49f7a6d0 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x561d49f7a6d0
| `-ParmVarDecl 0x561d49f7a7e8 <col:7> col:7 'const atomic_uint32_t &'
|-CXXConstructorDecl 0x561d49f7a858 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x561d49f7a858
| `-ParmVarDecl 0x561d49f7a968 <col:7> col:7 'atomic_uint32_t &&'
`-CXXDestructorDecl 0x561d4a171d80 <col:7> col:7 implicit ~atomic_uint32_t 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.atomic_uint32_t = type { i32 }
  NonVirtualBaseLLVMType:%class.atomic_uint32_t = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x561d4a15b4d8 prev 0x561d4a1501a0 <../dummy_inc/click/packet.hh:702:5, line:711:5> line:702:11 referenced union Anno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x561d4a15b5d0 <col:5, col:11> col:11 implicit union Anno
|-FieldDecl 0x561d4a15b6c0 <line:703:2, col:18> col:7 referenced c 'char [48]'
|-FieldDecl 0x561d4a15b7e8 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
|-FieldDecl 0x561d4a15b968 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
|-FieldDecl 0x561d4a15bae8 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
|-FieldDecl 0x561d4a15bc68 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
|-CXXConstructorDecl 0x561d4a16cad8 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| `-CompoundStmt 0x561d4a16d348 <col:11>
|-CXXDestructorDecl 0x561d4a16cbb0 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x561d4a16cce8 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x561d4a16cce8
| `-ParmVarDecl 0x561d4a16cdf8 <col:11> col:11 'const Packet::Anno &'
|-CXXConstructorDecl 0x561d4a16ce98 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x561d4a16ce98
| `-ParmVarDecl 0x561d4a16cfa8 <col:11> col:11 'Packet::Anno &&'
|-CXXMethodDecl 0x561d4a172778 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| |-ParmVarDecl 0x561d4a172888 <col:11> col:11 'const Packet::Anno &'
| `-CompoundStmt 0x561d4a172b08 <col:11>
|   `-ReturnStmt 0x561d4a172af8 <col:11>
|     `-UnaryOperator 0x561d4a172ae0 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x561d4a172ad0 <col:11> 'Packet::Anno *' this
`-CXXMethodDecl 0x561d4a1728f8 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x561d4a1728f8
  `-ParmVarDecl 0x561d4a172a08 <col:11> col:11 'Packet::Anno &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Packet::Anno" = type { [6 x i64] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x561d4a15bcd0 <../dummy_inc/click/packet.hh:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x561d4a15bde8 <col:5, col:12> col:12 implicit struct AllAnno
|-FieldDecl 0x561d4a15be88 <line:717:2, col:7> col:7 cb 'Packet::Anno'
|-FieldDecl 0x561d4a15bef0 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
|-FieldDecl 0x561d4a15bf58 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
|-FieldDecl 0x561d4a15bfc0 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
|-FieldDecl 0x561d4a15c020 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
|-FieldDecl 0x561d4a15c0e0 <line:722:2, col:34> col:7 timestamp 'char [8]'
|-FieldDecl 0x561d4a15c140 <line:723:2, col:10> col:10 referenced next 'Packet *'
|-FieldDecl 0x561d4a15c1a0 <line:724:2, col:10> col:10 referenced prev 'Packet *'
|-CXXConstructorDecl 0x561d4a16c9e8 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| |-CXXCtorInitializer Field 0x561d4a15be88 'cb' 'Packet::Anno'
| | `-CXXConstructExpr 0x561d4a16d358 <col:12> 'Packet::Anno' 'void () noexcept'
| `-CompoundStmt 0x561d4a16d3b0 <col:12>
|-CXXConstructorDecl 0x561d4a16d018 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x561d4a16d018
| `-ParmVarDecl 0x561d4a16d128 <col:12> col:12 'const Packet::AllAnno &'
|-CXXConstructorDecl 0x561d4a16d1c8 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x561d4a16d1c8
| `-ParmVarDecl 0x561d4a16d2d8 <col:12> col:12 'Packet::AllAnno &&'
`-CXXDestructorDecl 0x561d4a171e60 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  NonVirtualBaseLLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x561d4a1498b0 <../dummy_inc/click/packet.hh:35:1, line:775:1> line:35:7 referenced class Packet definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x561d4a1499c8 <col:1, col:7> col:7 implicit referenced class Packet
|-AccessSpecDecl 0x561d4a149a58 <col:16, col:22> col:16 public
|-EnumDecl 0x561d4a149a80 <line:41:5, line:50:5> line:41:5
| |-EnumConstantDecl 0x561d4a149b80 <line:45:2, col:21> col:2 referenced default_headroom 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| | `-ImplicitCastExpr 0x561d4a149c60 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561d4a149b60 <col:21> 'int' Int: 28
| |     `-IntegerLiteral 0x561d4a149b40 <col:21> 'int' 28
| `-EnumConstantDecl 0x561d4a149c10 <line:48:2, col:22> col:2 referenced min_buffer_length 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
|   `-ImplicitCastExpr 0x561d4a149c78 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x561d4a149bf0 <col:22> 'int' Int: 64
|       `-IntegerLiteral 0x561d4a149bd0 <col:22> 'int' 64
|-CXXMethodDecl 0x561d4a149fb8 <line:52:5, line:53:75> line:52:28 used make 'WritablePacket *(uint32_t, const void *, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x561d4a149ca0 <col:33, col:42> col:42 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x561d4a149d20 <col:52, col:64> col:64 data 'const void *'
| |-ParmVarDecl 0x561d4a149d98 <line:53:5, col:14> col:14 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x561d4a149e10 <col:22, col:31> col:31 tailroom 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x561d4a14a078 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x561d4a14a278 <line:54:5, col:109> col:35 make 'WritablePacket *(const void *, uint32_t)' static inline
| |-ParmVarDecl 0x561d4a14a0f0 <col:40, col:52> col:52 data 'const void *'
| |-ParmVarDecl 0x561d4a14a168 <col:58, col:67> col:67 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x561d4a14a328 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x561d4a14a488 <line:55:5, col:91> col:35 make 'WritablePacket *(uint32_t)' static inline
| |-ParmVarDecl 0x561d4a14a398 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x561d4a14a530 <col:72> warn_unused_result ""
|-TypedefDecl 0x561d4a14a890 <line:65:5, col:89> col:20 referenced buffer_destructor_type 'void (*)(unsigned char *, size_t, void *)'
| `-PointerType 0x561d4a14a820 'void (*)(unsigned char *, size_t, void *)'
|   `-ParenType 0x561d4a14a7c0 'void (unsigned char *, size_t, void *)' sugar
|     `-FunctionProtoType 0x561d4a14a780 'void (unsigned char *, size_t, void *)' cdecl
|       |-BuiltinType 0x561d49c1f2d0 'void'
|       |-PointerType 0x561d49ec9a30 'unsigned char *'
|       | `-BuiltinType 0x561d49c1f3d0 'unsigned char'
|       |-TypedefType 0x561d49cc5d80 'size_t' sugar
|       | |-Typedef 0x561d49c8fb20 'size_t'
|       | `-BuiltinType 0x561d49c1f430 'unsigned long'
|       `-PointerType 0x561d49c1fad0 'void *'
|         `-BuiltinType 0x561d49c1f2d0 'void'
|-CXXMethodDecl 0x561d4a14ad08 <line:66:5, line:68:131> line:66:28 make 'WritablePacket *(unsigned char *, uint32_t, Packet::buffer_destructor_type, void *, int, int)' static
| |-ParmVarDecl 0x561d4a14a900 <col:33, col:48> col:48 data 'unsigned char *'
| |-ParmVarDecl 0x561d4a14a978 <col:54, col:63> col:63 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x561d4a14aa10 <line:67:5, col:28> col:28 buffer_destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| |-ParmVarDecl 0x561d4a14aa90 <line:68:33, col:58> col:39 argument 'void *' cinit
| | `-CStyleCastExpr 0x561d4a165980 <col:50, col:58> 'void *' <NoOp>
| |   `-ImplicitCastExpr 0x561d4a165968 <col:58> 'void *' <NullToPointer> part_of_explicit_cast
| |     `-IntegerLiteral 0x561d4a165930 <col:58> 'int' 0
| |-ParmVarDecl 0x561d4a14ab10 <col:61, col:76> col:65 headroom 'int' cinit
| | `-IntegerLiteral 0x561d4a1659a8 <col:76> 'int' 0
| |-ParmVarDecl 0x561d4a14ab90 <col:79, col:94> col:83 tailroom 'int' cinit
| | `-IntegerLiteral 0x561d4a1659c8 <col:94> 'int' 0
| `-WarnUnusedResultAttr 0x561d4a14add8 <col:112> warn_unused_result ""
|-CXXMethodDecl 0x561d4a14ae58 <line:71:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x561d4a14af18 <line:73:5, col:50> col:45 used kill 'void ()'
| |-NoInlineAttr 0x561d4a14afb8 <col:20>
| `-OptimizeNoneAttr 0x561d4a14b010 <col:30>
|-CXXMethodDecl 0x561d4a14b088 <line:75:5, col:54> col:45 used shared 'bool () const'
| |-NoInlineAttr 0x561d4a14b128 <col:20>
| `-OptimizeNoneAttr 0x561d4a14b180 <col:30>
|-CXXMethodDecl 0x561d4a14b1f8 <line:76:5, col:55> col:13 clone 'Packet *()'
| `-WarnUnusedResultAttr 0x561d4a14b298 <col:36> warn_unused_result ""
|-CXXMethodDecl 0x561d4a14b348 <line:77:5, col:102> col:56 uniqueify 'WritablePacket *()'
| |-NoInlineAttr 0x561d4a14b3e8 <col:20>
| |-OptimizeNoneAttr 0x561d4a14b440 <col:30>
| `-WarnUnusedResultAttr 0x561d4a14b468 <col:83> warn_unused_result ""
|-CXXMethodDecl 0x561d4a14b4c0 <line:79:5, col:68> col:61 used data 'const unsigned char *() const'
| |-NoInlineAttr 0x561d4a14b560 <col:20>
| `-OptimizeNoneAttr 0x561d4a14b5b8 <col:30>
|-CXXMethodDecl 0x561d4a14b608 <line:80:5, col:72> col:61 used end_data 'const unsigned char *() const'
| |-NoInlineAttr 0x561d4a14b6a8 <col:20>
| `-OptimizeNoneAttr 0x561d4a14b700 <col:30>
|-CXXMethodDecl 0x561d4a14b748 <line:81:5, col:58> col:49 length 'uint32_t () const'
| |-NoInlineAttr 0x561d4a14b7e8 <col:20>
| `-OptimizeNoneAttr 0x561d4a14b840 <col:30>
|-CXXMethodDecl 0x561d4a14b888 <line:82:5, col:32> col:21 used headroom 'uint32_t () const' inline
|-CXXMethodDecl 0x561d4a14b948 <line:83:5, col:32> col:21 used tailroom 'uint32_t () const' inline
|-CXXMethodDecl 0x561d4a14ba10 <line:84:5, col:42> col:33 used buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x561d4a14bad8 <line:85:5, col:46> col:33 used end_buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x561d4a14bb98 <line:86:5, col:37> col:21 used buffer_length 'uint32_t () const' inline
|-CXXMethodDecl 0x561d4a14bcb8 <line:97:5, line:99:5> line:97:28 buffer_destructor 'Packet::buffer_destructor_type () const'
| `-CompoundStmt 0x561d4a165a90 <col:54, line:99:5>
|   `-ReturnStmt 0x561d4a165a80 <line:98:2, col:9>
|     `-ImplicitCastExpr 0x561d4a165a68 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-MemberExpr 0x561d4a165a38 <col:9> 'const Packet::buffer_destructor_type':'void (*const)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x561d4a15c4d8
|         `-CXXThisExpr 0x561d4a165a28 <col:9> 'const Packet *' implicit this
|-CXXMethodDecl 0x561d4a14be58 <line:101:5, line:103:5> line:101:10 set_buffer_destructor 'void (Packet::buffer_destructor_type)'
| |-ParmVarDecl 0x561d4a14bd68 <col:32, col:55> col:55 used destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| `-CompoundStmt 0x561d4a165b40 <col:67, line:103:5>
|   `-BinaryOperator 0x561d4a165b20 <line:102:9, col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x561d4a165ab8 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x561d4a15c4d8
|     | `-CXXThisExpr 0x561d4a165aa8 <col:9> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x561d4a165b08 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-DeclRefExpr 0x561d4a165ae8 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ParmVar 0x561d4a14bd68 'destructor' 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-CXXMethodDecl 0x561d4a14bf50 <line:105:5, line:107:5> line:105:11 destructor_argument 'void *()'
| `-CompoundStmt 0x561d4a165bc0 <col:33, line:107:5>
|   `-ReturnStmt 0x561d4a165bb0 <line:106:9, col:16>
|     `-ImplicitCastExpr 0x561d4a165b98 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x561d4a165b68 <col:16> 'void *' lvalue ->_destructor_argument 0x561d4a15c540
|         `-CXXThisExpr 0x561d4a165b58 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x561d4a14c010 <line:109:5, line:113:5> line:109:10 reset_buffer 'void ()'
| `-CompoundStmt 0x561d4a1661f0 <col:25, line:113:5>
|   |-ParenExpr 0x561d4a165f38 <line:110:2, col:146> 'void'
|   | `-ConditionalOperator 0x561d4a165f08 <col:3, col:145> 'void'
|   |   |-CXXStaticCastExpr 0x561d4a165c78 <col:3, col:32> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x561d4a165c50 <col:23, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-CXXMemberCallExpr 0x561d4a165c18 <col:24, col:31> 'bool'
|   |   |     `-MemberExpr 0x561d4a165be8 <col:24> '<bound member function type>' ->shared 0x561d4a14b088
|   |   |       `-ImplicitCastExpr 0x561d4a165c38 <col:24> 'const Packet *' <NoOp>
|   |   |         `-CXXThisExpr 0x561d4a165bd8 <col:24> 'Packet *' implicit this
|   |   |-CXXFunctionalCastExpr 0x561d4a165cd8 <col:36, col:43> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x561d4a165cb8 <col:42> 'int' 0
|   |   `-CallExpr 0x561d4a165e68 <col:47, col:145> 'void'
|   |     |-ImplicitCastExpr 0x561d4a165e50 <col:47> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x561d4a165e30 <col:47> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x561d49cbcb90 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x561d4a165ea8 <col:62> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x561d4a165d48 <col:62> 'const char [10]' lvalue "!shared()"
|   |     |-ImplicitCastExpr 0x561d4a165ec0 <col:75> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x561d4a165d70 <col:75> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x561d4a165ed8 <col:107> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x561d4a165da8 <col:107> 'int' 110
|   |     `-ImplicitCastExpr 0x561d4a165ef0 <col:112, col:126> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x561d4a165e18 <col:112, col:126> 'const char [28]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x561d4a165e00 <col:126> 'const char [28]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x561d4a165dc8 <col:126> 'const char [28]' lvalue "void Packet::reset_buffer()"
|   |-BinaryOperator 0x561d4a166138 <line:111:2, col:33> 'unsigned char *' lvalue '='
|   | |-MemberExpr 0x561d4a165f68 <col:2> 'unsigned char *' lvalue ->_head 0x561d4a15c2e0
|   | | `-CXXThisExpr 0x561d4a165f58 <col:2> 'Packet *' implicit this
|   | `-ImplicitCastExpr 0x561d4a166120 <col:10, col:33> 'unsigned char *' <LValueToRValue>
|   |   `-BinaryOperator 0x561d4a166100 <col:10, col:33> 'unsigned char *' lvalue '='
|   |     |-MemberExpr 0x561d4a165fa8 <col:10> 'unsigned char *' lvalue ->_data 0x561d4a15c348
|   |     | `-CXXThisExpr 0x561d4a165f98 <col:10> 'Packet *' implicit this
|   |     `-ImplicitCastExpr 0x561d4a1660e8 <col:18, col:33> 'unsigned char *' <LValueToRValue>
|   |       `-BinaryOperator 0x561d4a1660c8 <col:18, col:33> 'unsigned char *' lvalue '='
|   |         |-MemberExpr 0x561d4a165fe8 <col:18> 'unsigned char *' lvalue ->_tail 0x561d4a15c3b0
|   |         | `-CXXThisExpr 0x561d4a165fd8 <col:18> 'Packet *' implicit this
|   |         `-ImplicitCastExpr 0x561d4a1660b0 <col:26, col:33> 'unsigned char *' <LValueToRValue>
|   |           `-BinaryOperator 0x561d4a166090 <col:26, col:33> 'unsigned char *' lvalue '='
|   |             |-MemberExpr 0x561d4a166028 <col:26> 'unsigned char *' lvalue ->_end 0x561d4a15c418
|   |             | `-CXXThisExpr 0x561d4a166018 <col:26> 'Packet *' implicit this
|   |             `-ImplicitCastExpr 0x561d4a166078 <col:33> 'unsigned char *' <NullToPointer>
|   |               `-IntegerLiteral 0x561d4a166058 <col:33> 'int' 0
|   `-BinaryOperator 0x561d4a1661d0 <line:112:2, col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x561d4a166168 <col:2> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x561d4a15c4d8
|     | `-CXXThisExpr 0x561d4a166158 <col:2> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x561d4a1661b8 <col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <NullToPointer>
|       `-IntegerLiteral 0x561d4a166198 <col:16> 'int' 0
|-CXXMethodDecl 0x561d4a14c150 <line:141:5, col:109> col:56 push 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x561d4a14c0c0 <col:61, col:70> col:70 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x561d4a14c1f8 <col:20>
| |-OptimizeNoneAttr 0x561d4a14c250 <col:30>
| `-WarnUnusedResultAttr 0x561d4a14c278 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x561d4a14c348 <line:152:5, col:120> col:56 push_mac_header 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x561d4a14c2b8 <col:72, col:81> col:81 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x561d4a14c3f0 <col:20>
| |-OptimizeNoneAttr 0x561d4a14c448 <col:30>
| `-WarnUnusedResultAttr 0x561d4a14c470 <col:101> warn_unused_result ""
|-CXXMethodDecl 0x561d4a14c5a8 <line:171:5, col:76> col:13 nonunique_push 'Packet *(uint32_t)'
| |-ParmVarDecl 0x561d4a14c4b0 <col:28, col:37> col:37 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x561d4a14c650 <col:57> warn_unused_result ""
|-CXXMethodDecl 0x561d4a14c750 <line:187:5, col:62> col:45 pull 'void (uint32_t)'
| |-ParmVarDecl 0x561d4a14c6c0 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x561d4a14c7f8 <col:20>
| `-OptimizeNoneAttr 0x561d4a14c850 <col:30>
|-CXXMethodDecl 0x561d4a14c918 <line:213:5, col:73> col:21 put 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x561d4a14c888 <col:25, col:34> col:34 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x561d4a14c9c0 <col:54> warn_unused_result ""
|-CXXMethodDecl 0x561d4a14cac0 <line:230:5, col:75> col:13 nonunique_put 'Packet *(uint32_t)'
| |-ParmVarDecl 0x561d4a14ca30 <col:27, col:36> col:36 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x561d4a14cb68 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x561d4a14cc68 <line:245:5, col:62> col:45 take 'void (uint32_t)'
| |-ParmVarDecl 0x561d4a14cbd8 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x561d4a14cd10 <col:20>
| `-OptimizeNoneAttr 0x561d4a14cd68 <col:30>
|-CXXMethodDecl 0x561d4a14cef8 <line:269:5, col:99> col:13 shift_data 'Packet *(int, bool)'
| |-ParmVarDecl 0x561d4a14cda8 <col:24, col:28> col:28 offset 'int'
| |-ParmVarDecl 0x561d4a14ce20 <col:36, col:59> col:41 free_on_failure 'bool' cinit
| | `-CXXBoolLiteralExpr 0x561d4a1659e8 <col:59> 'bool' true
| `-WarnUnusedResultAttr 0x561d4a14cfa8 <col:80> warn_unused_result ""
|-CXXMethodDecl 0x561d4a14d1a8 <line:271:5, col:71> col:17 shrink_data 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x561d4a14d020 <col:29, col:50> col:50 data 'const unsigned char *'
| `-ParmVarDecl 0x561d4a14d098 <col:56, col:65> col:65 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x561d4a14d3b8 <line:272:5, col:78> col:17 change_headroom_and_length 'void (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x561d4a14d268 <col:44, col:53> col:53 headroom 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x561d4a14d2e0 <col:63, col:72> col:72 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x561d4a14d5c8 <line:274:5, col:40> col:10 copy 'bool (Packet *, int)'
| |-ParmVarDecl 0x561d4a14d478 <col:15, col:23> col:23 p 'Packet *'
| `-ParmVarDecl 0x561d4a14d4f8 <col:26, col:39> col:30 headroom 'int' cinit
|   `-IntegerLiteral 0x561d4a1659f8 <col:39> 'int' 0
|-CXXMethodDecl 0x561d4a14d698 <line:279:5, col:34> col:17 has_mac_header 'bool () const' inline
|-CXXMethodDecl 0x561d4a14d760 <line:280:5, col:46> col:33 used mac_header 'const unsigned char *() const' inline
|-CXXMethodDecl 0x561d4a14d828 <line:281:5, col:36> col:16 mac_header_offset 'int () const' inline
|-CXXMethodDecl 0x561d4a14d8e8 <line:282:5, col:41> col:21 mac_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x561d4a14d9b0 <line:283:5, col:29> col:16 mac_length 'int () const' inline
|-CXXMethodDecl 0x561d4a14daf8 <line:284:5, col:54> col:17 set_mac_header 'void (const unsigned char *)' inline
| `-ParmVarDecl 0x561d4a14da68 <col:32, col:53> col:53 p 'const unsigned char *'
|-CXXMethodDecl 0x561d4a14dcc8 <line:285:5, col:68> col:17 used set_mac_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x561d4a14dbb8 <col:32, col:53> col:53 p 'const unsigned char *'
| `-ParmVarDecl 0x561d4a14dc30 <col:56, col:65> col:65 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x561d4a14dd98 <line:286:5, col:34> col:17 clear_mac_header 'void ()' inline
|-CXXMethodDecl 0x561d4a14de58 <line:288:5, col:66> col:45 has_network_header 'bool () const'
| |-NoInlineAttr 0x561d4a14def8 <col:20>
| `-OptimizeNoneAttr 0x561d4a14df50 <col:30>
|-CXXMethodDecl 0x561d4a14dfa0 <line:289:5, col:78> col:61 used network_header 'const unsigned char *() const'
| |-NoInlineAttr 0x561d4a14e040 <col:20>
| `-OptimizeNoneAttr 0x561d4a14e098 <col:30>
|-CXXMethodDecl 0x561d4a14e0e8 <line:290:5, col:40> col:16 used network_header_offset 'int () const' inline
|-CXXMethodDecl 0x561d4a14e1a8 <line:291:5, col:45> col:21 used network_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x561d4a14e270 <line:292:5, col:61> col:44 network_length 'int () const'
| |-NoInlineAttr 0x561d4a14e310 <col:20>
| `-OptimizeNoneAttr 0x561d4a14e368 <col:30>
|-CXXMethodDecl 0x561d4a14e4b8 <line:293:5, col:72> col:17 set_network_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x561d4a14e3a8 <col:36, col:57> col:57 p 'const unsigned char *'
| `-ParmVarDecl 0x561d4a14e420 <col:60, col:69> col:69 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x561d4a14e608 <line:294:5, col:55> col:17 set_network_header_length 'void (uint32_t)' inline
| `-ParmVarDecl 0x561d4a14e578 <col:43, col:52> col:52 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x561d4a14e6e0 <line:295:5, col:38> col:17 clear_network_header 'void ()' inline
|-CXXMethodDecl 0x561d4a14e7a0 <line:297:5, col:68> col:45 has_transport_header 'bool () const'
| |-NoInlineAttr 0x561d4a14e840 <col:20>
| `-OptimizeNoneAttr 0x561d4a14e898 <col:30>
|-CXXMethodDecl 0x561d4a14e8e8 <line:298:5, col:80> col:61 used transport_header 'const unsigned char *() const'
| |-NoInlineAttr 0x561d4a14e988 <col:20>
| `-OptimizeNoneAttr 0x561d4a14e9e0 <col:30>
|-CXXMethodDecl 0x561d4a14ea30 <line:299:5, col:42> col:16 transport_header_offset 'int () const' inline
|-CXXMethodDecl 0x561d4a14eaf8 <line:300:5, col:63> col:44 transport_length 'int () const'
| |-NoInlineAttr 0x561d4a14eb98 <col:20>
| `-OptimizeNoneAttr 0x561d4a14ebf0 <col:30>
|-CXXMethodDecl 0x561d4a14ec38 <line:301:5, col:40> col:17 clear_transport_header 'void ()' inline
|-CXXMethodDecl 0x561d4a14ed58 <line:304:5, col:46> col:31 ether_header 'const click_ether *() const' inline
|-CXXMethodDecl 0x561d4a14eec8 <line:305:5, col:57> col:17 set_ether_header 'void (const click_ether *)' inline
| `-ParmVarDecl 0x561d4a14ee08 <col:34, col:53> col:53 ethh 'const click_ether *'
|-CXXMethodDecl 0x561d4a14efb8 <line:307:5, col:68> col:56 ip_header 'const click_ip *() const'
| |-NoInlineAttr 0x561d4a14f058 <col:20>
| `-OptimizeNoneAttr 0x561d4a14f0b0 <col:30>
|-CXXMethodDecl 0x561d4a14f100 <line:308:5, col:35> col:16 ip_header_offset 'int () const' inline
|-CXXMethodDecl 0x561d4a14f1c0 <line:309:5, col:40> col:21 ip_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x561d4a14f3f8 <line:310:5, col:92> col:45 set_ip_header 'void (const click_ip *, uint32_t)'
| |-ParmVarDecl 0x561d4a14f270 <col:59, col:75> col:75 iph 'const click_ip *'
| |-ParmVarDecl 0x561d4a14f2e8 <col:80, col:89> col:89 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x561d4a14f4a8 <col:20>
| `-OptimizeNoneAttr 0x561d4a14f500 <col:30>
|-CXXMethodDecl 0x561d4a14f5a8 <line:312:5, col:70> col:57 ip6_header 'const click_ip6 *() const'
| |-NoInlineAttr 0x561d4a14f648 <col:20>
| `-OptimizeNoneAttr 0x561d4a14f6a0 <col:30>
|-CXXMethodDecl 0x561d4a14f6f0 <line:313:5, col:64> col:44 ip6_header_offset 'int () const'
| |-NoInlineAttr 0x561d4a14f790 <col:20>
| `-OptimizeNoneAttr 0x561d4a14f7e8 <col:30>
|-CXXMethodDecl 0x561d4a14f830 <line:314:5, col:69> col:49 ip6_header_length 'uint32_t () const'
| |-NoInlineAttr 0x561d4a14f8d0 <col:20>
| `-OptimizeNoneAttr 0x561d4a14f928 <col:30>
|-CXXMethodDecl 0x561d4a14fa28 <line:315:5, col:81> col:45 set_ip6_header 'void (const click_ip6 *)'
| |-ParmVarDecl 0x561d4a14f960 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-NoInlineAttr 0x561d4a14fad0 <col:20>
| `-OptimizeNoneAttr 0x561d4a14fb28 <col:30>
|-CXXMethodDecl 0x561d4a14fce8 <line:316:5, col:95> col:45 set_ip6_header 'void (const click_ip6 *, uint32_t)'
| |-ParmVarDecl 0x561d4a14fb60 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-ParmVarDecl 0x561d4a14fbd8 <col:83, col:92> col:92 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x561d4a14fd98 <col:20>
| `-OptimizeNoneAttr 0x561d4a14fdf0 <col:30>
|-CXXMethodDecl 0x561d4a14fe98 <line:318:5, col:44> col:30 used icmp_header 'const click_icmp *() const' inline
|-CXXMethodDecl 0x561d4a14ffb8 <line:319:5, col:42> col:29 used tcp_header 'const click_tcp *() const' inline
|-CXXMethodDecl 0x561d4a1500d8 <line:320:5, col:42> col:29 used udp_header 'const click_udp *() const' inline
|-AccessSpecDecl 0x561d4a150178 <line:333:3, col:10> col:3 private
|-CXXRecordDecl 0x561d4a1501a0 <line:335:5, col:11> col:11 referenced union Anno
|-CXXMethodDecl 0x561d4a1502c8 <line:340:5, col:60> col:52 used xanno 'const Packet::Anno *() const'
| |-NoInlineAttr 0x561d4a150368 <col:20>
| `-OptimizeNoneAttr 0x561d4a1503c0 <col:30>
|-CXXMethodDecl 0x561d4a150468 <line:341:5, col:52> col:46 used xanno 'Packet::Anno *()'
| |-NoInlineAttr 0x561d4a150508 <col:20>
| `-OptimizeNoneAttr 0x561d4a150560 <col:30>
|-AccessSpecDecl 0x561d4a150588 <line:344:3, col:9> col:3 public
|-EnumDecl 0x561d4a1505b0 <line:349:5, line:351:5> line:349:5
| `-EnumConstantDecl 0x561d4a1506b0 <line:350:2, col:14> col:2 referenced anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   `-ImplicitCastExpr 0x561d4a150700 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x561d4a150690 <col:14> 'int' Int: 48
|       `-IntegerLiteral 0x561d4a150670 <col:14> 'int' 48
|-CXXMethodDecl 0x561d4a150768 <line:354:5, col:74> col:57 used timestamp_anno 'const Timestamp &() const'
| |-NoInlineAttr 0x561d4a150808 <col:20>
| `-OptimizeNoneAttr 0x561d4a150860 <col:30>
|-CXXMethodDecl 0x561d4a1508d8 <line:356:5, col:66> col:51 used timestamp_anno 'Timestamp &()'
| |-NoInlineAttr 0x561d4a150978 <col:20>
| `-OptimizeNoneAttr 0x561d4a1509d0 <col:30>
|-CXXMethodDecl 0x561d4a150a98 <line:359:5, col:54> col:17 used set_timestamp_anno 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x561d4a150a08 <col:36, col:53> col:53 t 'const Timestamp &'
|-CXXMethodDecl 0x561d4a150c38 <line:362:5, col:38> col:24 used device_anno 'net_device *() const' inline
|-CXXMethodDecl 0x561d4a150dd8 <line:364:5, col:48> col:17 used set_device_anno 'void (net_device *)' inline
| `-ParmVarDecl 0x561d4a150ce8 <col:33, col:45> col:45 dev 'net_device *'
|-EnumDecl 0x561d4a150e80 <line:368:5, line:381:5> line:368:10 referenced PacketType
| |-EnumConstantDecl 0x561d4a150f80 <line:369:2, col:9> col:2 HOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x561d4a151330 <col:9> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561d4a150f60 <col:9> 'int' Int: 0
| |     `-IntegerLiteral 0x561d4a150f40 <col:9> 'int' 0
| |-EnumConstantDecl 0x561d4a151010 <line:370:2, col:14> col:2 BROADCAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x561d4a151348 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561d4a150ff0 <col:14> 'int' Int: 1
| |     `-IntegerLiteral 0x561d4a150fd0 <col:14> 'int' 1
| |-EnumConstantDecl 0x561d4a1510a0 <line:372:2, col:14> col:2 MULTICAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x561d4a151360 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561d4a151080 <col:14> 'int' Int: 2
| |     `-IntegerLiteral 0x561d4a151060 <col:14> 'int' 2
| |-EnumConstantDecl 0x561d4a151130 <line:374:2, col:14> col:2 OTHERHOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x561d4a151378 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561d4a151110 <col:14> 'int' Int: 3
| |     `-IntegerLiteral 0x561d4a1510f0 <col:14> 'int' 3
| |-EnumConstantDecl 0x561d4a1511c0 <line:377:2, col:13> col:2 OUTGOING 'Packet::PacketType'
| | `-ImplicitCastExpr 0x561d4a151390 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561d4a1511a0 <col:13> 'int' Int: 4
| |     `-IntegerLiteral 0x561d4a151180 <col:13> 'int' 4
| |-EnumConstantDecl 0x561d4a151250 <line:379:2, col:13> col:2 LOOPBACK 'Packet::PacketType'
| | `-ImplicitCastExpr 0x561d4a1513a8 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561d4a151230 <col:13> 'int' Int: 5
| |     `-IntegerLiteral 0x561d4a151210 <col:13> 'int' 5
| `-EnumConstantDecl 0x561d4a1512e0 <line:380:2, col:14> col:2 FASTROUTE 'Packet::PacketType'
|   `-ImplicitCastExpr 0x561d4a1513c0 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x561d4a1512c0 <col:14> 'int' Int: 6
|       `-IntegerLiteral 0x561d4a1512a0 <col:14> 'int' 6
|-CXXMethodDecl 0x561d4a151428 <line:383:5, col:70> col:51 used packet_type_anno 'Packet::PacketType () const'
| |-NoInlineAttr 0x561d4a1514c8 <col:20>
| `-OptimizeNoneAttr 0x561d4a151520 <col:30>
|-CXXMethodDecl 0x561d4a151618 <line:385:5, col:78> col:45 used set_packet_type_anno 'void (Packet::PacketType)'
| |-ParmVarDecl 0x561d4a151558 <col:66, col:77> col:77 t 'Packet::PacketType'
| |-NoInlineAttr 0x561d4a1516c0 <col:20>
| `-OptimizeNoneAttr 0x561d4a151718 <col:30>
|-CXXMethodDecl 0x561d4a151788 <line:410:5, col:27> col:20 next 'Packet *() const' inline
|-CXXMethodDecl 0x561d4a1518b0 <line:412:5, col:26> col:21 next 'Packet *&()' inline
|-CXXMethodDecl 0x561d4a151a28 <line:414:5, col:35> col:17 set_next 'void (Packet *)' inline
| `-ParmVarDecl 0x561d4a151960 <col:26, col:34> col:34 p 'Packet *'
|-CXXMethodDecl 0x561d4a151af0 <line:417:5, col:27> col:20 prev 'Packet *() const' inline
|-CXXMethodDecl 0x561d4a151bb8 <line:419:5, col:26> col:21 prev 'Packet *&()' inline
|-CXXMethodDecl 0x561d4a151cf8 <line:421:5, col:35> col:17 set_prev 'void (Packet *)' inline
| `-ParmVarDecl 0x561d4a151c68 <col:26, col:34> col:34 p 'Packet *'
|-EnumDecl 0x561d4a151da0 <line:423:5, line:426:5> line:423:5
| |-EnumConstantDecl 0x561d4a151ea0 <line:424:2, col:23> col:2 referenced dst_ip_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x561d4a1520a0 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561d4a151e80 <col:23> 'int' Int: 0
| |     `-IntegerLiteral 0x561d4a151e60 <col:23> 'int' 0
| |-EnumConstantDecl 0x561d4a151f30 <col:26, col:45> col:26 dst_ip_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x561d4a1520b8 <col:45> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561d4a151f10 <col:45> 'int' Int: 4
| |     `-IntegerLiteral 0x561d4a151ef0 <col:45> 'int' 4
| |-EnumConstantDecl 0x561d4a151fc0 <line:425:2, col:24> col:2 dst_ip6_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x561d4a1520d0 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561d4a151fa0 <col:24> 'int' Int: 0
| |     `-IntegerLiteral 0x561d4a151f80 <col:24> 'int' 0
| `-EnumConstantDecl 0x561d4a152050 <col:27, col:47> col:27 dst_ip6_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
|   `-ImplicitCastExpr 0x561d4a1520e8 <col:47> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x561d4a152030 <col:47> 'int' Int: 16
|       `-IntegerLiteral 0x561d4a152010 <col:47> 'int' 16
|-CXXMethodDecl 0x561d4a152148 <line:431:5, col:36> col:22 dst_ip_anno 'IPAddress () const' inline
|-CXXMethodDecl 0x561d4a1522b8 <line:436:5, col:75> col:45 set_dst_ip_anno 'void (IPAddress)'
| |-ParmVarDecl 0x561d4a1521f8 <col:61, col:71> col:71 addr 'IPAddress'
| |-NoInlineAttr 0x561d4a152360 <col:20>
| `-OptimizeNoneAttr 0x561d4a1523b8 <col:30>
|-CXXMethodDecl 0x561d4a152408 <line:441:5, col:36> col:11 anno 'void *()'
| `-CompoundStmt 0x561d4a166310 <col:18, col:36>
|   `-ReturnStmt 0x561d4a166300 <col:20, col:33>
|     `-ImplicitCastExpr 0x561d4a1662e8 <col:27, col:33> 'void *' <BitCast>
|       `-CXXMemberCallExpr 0x561d4a1662c8 <col:27, col:33> 'Packet::Anno *'
|         `-MemberExpr 0x561d4a166298 <col:27> '<bound member function type>' ->xanno 0x561d4a150468
|           `-CXXThisExpr 0x561d4a166288 <col:27> 'Packet *' implicit this
|-CXXMethodDecl 0x561d4a152500 <line:444:5, col:48> col:17 anno 'const void *() const'
| `-CompoundStmt 0x561d4a166420 <col:30, col:48>
|   `-ReturnStmt 0x561d4a166410 <col:32, col:45>
|     `-ImplicitCastExpr 0x561d4a1663f8 <col:39, col:45> 'const void *' <BitCast>
|       `-CXXMemberCallExpr 0x561d4a1663d8 <col:39, col:45> 'const Packet::Anno *'
|         `-MemberExpr 0x561d4a1663a8 <col:39> '<bound member function type>' ->xanno 0x561d4a1502c8
|           `-CXXThisExpr 0x561d4a166398 <col:39> 'const Packet *' implicit this
|-CXXMethodDecl 0x561d4a1525e8 <line:447:5, col:50> col:14 used anno_u8 'uint8_t *()'
| `-CompoundStmt 0x561d4a1665b8 <col:24, col:50>
|   `-ReturnStmt 0x561d4a1665a8 <col:26, col:47>
|     `-UnaryOperator 0x561d4a166590 <col:33, col:47> 'uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x561d4a166570 <col:34, col:47> 'uint8_t':'unsigned char' lvalue
|         |-ImplicitCastExpr 0x561d4a166558 <col:34, col:43> 'uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x561d4a166508 <col:34, col:43> 'uint8_t [48]' lvalue ->u8 0x561d4a15b7e8
|         |   `-CXXMemberCallExpr 0x561d4a1664e8 <col:34, col:40> 'Packet::Anno *'
|         |     `-MemberExpr 0x561d4a1664b8 <col:34> '<bound member function type>' ->xanno 0x561d4a150468
|         |       `-CXXThisExpr 0x561d4a1664a8 <col:34> 'Packet *' implicit this
|         `-IntegerLiteral 0x561d4a166538 <col:46> 'int' 0
|-CXXMethodDecl 0x561d4a1526f0 <line:450:5, col:62> col:20 used anno_u8 'const uint8_t *() const'
| `-CompoundStmt 0x561d4a166788 <col:36, col:62>
|   `-ReturnStmt 0x561d4a166778 <col:38, col:59>
|     `-UnaryOperator 0x561d4a166760 <col:45, col:59> 'const uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x561d4a166740 <col:46, col:59> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x561d4a166728 <col:46, col:55> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x561d4a1666a0 <col:46, col:55> 'uint8_t const[48]' lvalue ->u8 0x561d4a15b7e8
|         |   `-CXXMemberCallExpr 0x561d4a166680 <col:46, col:52> 'const Packet::Anno *'
|         |     `-MemberExpr 0x561d4a166650 <col:46> '<bound member function type>' ->xanno 0x561d4a1502c8
|         |       `-CXXThisExpr 0x561d4a166640 <col:46> 'const Packet *' implicit this
|         `-IntegerLiteral 0x561d4a1666d0 <col:58> 'int' 0
|-CXXMethodDecl 0x561d4a152808 <line:453:5, col:53> col:15 used anno_u32 'uint32_t *()'
| `-CompoundStmt 0x561d4a166920 <col:26, col:53>
|   `-ReturnStmt 0x561d4a166910 <col:28, col:50>
|     `-UnaryOperator 0x561d4a1668f8 <col:35, col:50> 'uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x561d4a1668d8 <col:36, col:50> 'uint32_t':'unsigned int' lvalue
|         |-ImplicitCastExpr 0x561d4a1668c0 <col:36, col:45> 'uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x561d4a166870 <col:36, col:45> 'uint32_t [12]' lvalue ->u32 0x561d4a15bae8
|         |   `-CXXMemberCallExpr 0x561d4a166850 <col:36, col:42> 'Packet::Anno *'
|         |     `-MemberExpr 0x561d4a166820 <col:36> '<bound member function type>' ->xanno 0x561d4a150468
|         |       `-CXXThisExpr 0x561d4a166810 <col:36> 'Packet *' implicit this
|         `-IntegerLiteral 0x561d4a1668a0 <col:49> 'int' 0
|-CXXMethodDecl 0x561d4a152928 <line:456:5, col:65> col:21 used anno_u32 'const uint32_t *() const'
| `-CompoundStmt 0x561d4a166af8 <col:38, col:65>
|   `-ReturnStmt 0x561d4a166ae8 <col:40, col:62>
|     `-UnaryOperator 0x561d4a166ad0 <col:47, col:62> 'const uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x561d4a166ab0 <col:48, col:62> 'const uint32_t':'const unsigned int' lvalue
|         |-ImplicitCastExpr 0x561d4a166a98 <col:48, col:57> 'const uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x561d4a166a08 <col:48, col:57> 'uint32_t const[12]' lvalue ->u32 0x561d4a15bae8
|         |   `-CXXMemberCallExpr 0x561d4a1669e8 <col:48, col:54> 'const Packet::Anno *'
|         |     `-MemberExpr 0x561d4a1669b8 <col:48> '<bound member function type>' ->xanno 0x561d4a1502c8
|         |       `-CXXThisExpr 0x561d4a1669a8 <col:48> 'const Packet *' implicit this
|         `-IntegerLiteral 0x561d4a166a38 <col:61> 'int' 0
|-CXXMethodDecl 0x561d4a152ad8 <line:460:5, line:463:5> line:460:13 used anno_u8 'uint8_t (int) const'
| |-ParmVarDecl 0x561d4a1529e0 <col:21, col:25> col:25 used i 'int'
| `-CompoundStmt 0x561d4a1671c8 <col:34, line:463:5>
|   |-ParenExpr 0x561d4a167010 <line:461:2, col:174> 'void'
|   | `-ConditionalOperator 0x561d4a166fe0 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x561d4a166c48 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x561d4a166c18 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x561d4a166b68 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x561d4a166b50 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x561d4a166b10 <col:23> 'int' lvalue ParmVar 0x561d4a1529e0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x561d4a166b30 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x561d4a166bf8 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x561d4a166bc8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x561d4a166b88 <col:33> 'int' lvalue ParmVar 0x561d4a1529e0 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x561d4a166be0 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x561d4a166ba8 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x561d4a1506b0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x561d4a166ca8 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x561d4a166c88 <col:56> 'int' 0
|   |   `-CallExpr 0x561d4a166f40 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x561d4a166f28 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x561d4a166f08 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x561d49cbcb90 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x561d4a166f80 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x561d4a166d98 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x561d4a166f98 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x561d4a166dc8 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x561d4a166fb0 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x561d4a166e00 <col:135> 'int' 461
|   |     `-ImplicitCastExpr 0x561d4a166fc8 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x561d4a166ef0 <col:140, col:154> 'const char [35]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x561d4a166ed8 <col:154> 'const char [35]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x561d4a166e98 <col:154> 'const char [35]' lvalue "uint8_t Packet::anno_u8(int) const"
|   `-ReturnStmt 0x561d4a1671b8 <line:462:2, col:22>
|     `-ImplicitCastExpr 0x561d4a1671a0 <col:9, col:22> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-ArraySubscriptExpr 0x561d4a167180 <col:9, col:22> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x561d4a167150 <col:9, col:18> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x561d4a167100 <col:9, col:18> 'uint8_t const[48]' lvalue ->u8 0x561d4a15b7e8
|         |   `-CXXMemberCallExpr 0x561d4a1670e0 <col:9, col:15> 'const Packet::Anno *'
|         |     `-MemberExpr 0x561d4a1670b0 <col:9> '<bound member function type>' ->xanno 0x561d4a1502c8
|         |       `-CXXThisExpr 0x561d4a1670a0 <col:9> 'const Packet *' implicit this
|         `-ImplicitCastExpr 0x561d4a167168 <col:21> 'int' <LValueToRValue>
|           `-DeclRefExpr 0x561d4a167130 <col:21> 'int' lvalue ParmVar 0x561d4a1529e0 'i' 'int'
|-CXXMethodDecl 0x561d4a152d28 <line:469:5, line:472:5> line:469:10 used set_anno_u8 'void (int, uint8_t)'
| |-ParmVarDecl 0x561d4a152b98 <col:22, col:26> col:26 used i 'int'
| |-ParmVarDecl 0x561d4a152c10 <col:29, col:37> col:37 used x 'uint8_t':'unsigned char'
| `-CompoundStmt 0x561d4a167858 <col:40, line:472:5>
|   |-ParenExpr 0x561d4a167670 <line:470:2, col:174> 'void'
|   | `-ConditionalOperator 0x561d4a167640 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x561d4a167320 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x561d4a1672f0 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x561d4a167240 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x561d4a167228 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x561d4a1671e8 <col:23> 'int' lvalue ParmVar 0x561d4a152b98 'i' 'int'
|   |   |   | `-IntegerLiteral 0x561d4a167208 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x561d4a1672d0 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x561d4a1672a0 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x561d4a167260 <col:33> 'int' lvalue ParmVar 0x561d4a152b98 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x561d4a1672b8 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x561d4a167280 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x561d4a1506b0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x561d4a167380 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x561d4a167360 <col:56> 'int' 0
|   |   `-CallExpr 0x561d4a1675a0 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x561d4a167588 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x561d4a167568 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x561d49cbcb90 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x561d4a1675e0 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x561d4a1673f0 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x561d4a1675f8 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x561d4a167420 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x561d4a167610 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x561d4a167458 <col:135> 'int' 470
|   |     `-ImplicitCastExpr 0x561d4a167628 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x561d4a167550 <col:140, col:154> 'const char [39]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x561d4a167538 <col:154> 'const char [39]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x561d4a1674f8 <col:154> 'const char [39]' lvalue "void Packet::set_anno_u8(int, uint8_t)"
|   `-BinaryOperator 0x561d4a167838 <line:471:2, col:19> 'uint8_t':'unsigned char' lvalue '='
|     |-ArraySubscriptExpr 0x561d4a1677e0 <col:2, col:15> 'uint8_t':'unsigned char' lvalue
|     | |-ImplicitCastExpr 0x561d4a1677b0 <col:2, col:11> 'uint8_t *' <ArrayToPointerDecay>
|     | | `-MemberExpr 0x561d4a167760 <col:2, col:11> 'uint8_t [48]' lvalue ->u8 0x561d4a15b7e8
|     | |   `-CXXMemberCallExpr 0x561d4a167740 <col:2, col:8> 'Packet::Anno *'
|     | |     `-MemberExpr 0x561d4a167710 <col:2> '<bound member function type>' ->xanno 0x561d4a150468
|     | |       `-CXXThisExpr 0x561d4a167700 <col:2> 'Packet *' implicit this
|     | `-ImplicitCastExpr 0x561d4a1677c8 <col:14> 'int' <LValueToRValue>
|     |   `-DeclRefExpr 0x561d4a167790 <col:14> 'int' lvalue ParmVar 0x561d4a152b98 'i' 'int'
|     `-ImplicitCastExpr 0x561d4a167820 <col:19> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-DeclRefExpr 0x561d4a167800 <col:19> 'uint8_t':'unsigned char' lvalue ParmVar 0x561d4a152c10 'x' 'uint8_t':'unsigned char'
|-CXXMethodDecl 0x561d4a152ee8 <line:479:5, line:485:5> line:479:14 used anno_u16 'uint16_t (int) const'
| |-ParmVarDecl 0x561d4a152df0 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x561d4a167fd8 <col:36, line:485:5>
|   |-ParenExpr 0x561d4a167d40 <line:480:2, col:182> 'void'
|   | `-ConditionalOperator 0x561d4a167d10 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x561d4a1679f0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x561d4a1679c0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x561d4a1678d0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x561d4a1678b8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x561d4a167878 <col:23> 'int' lvalue ParmVar 0x561d4a152df0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x561d4a167898 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x561d4a1679a0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x561d4a167988 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x561d4a1678f0 <col:33> 'int' lvalue ParmVar 0x561d4a152df0 'i' 'int'
|   |   |     `-BinaryOperator 0x561d4a167968 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x561d4a167950 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x561d4a167910 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x561d4a1506b0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x561d4a167930 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x561d4a167a50 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x561d4a167a30 <col:60> 'int' 0
|   |   `-CallExpr 0x561d4a167c70 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x561d4a167c58 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x561d4a167c38 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x561d49cbcb90 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x561d4a167cb0 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x561d4a167ac0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x561d4a167cc8 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x561d4a167af8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x561d4a167ce0 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x561d4a167b30 <col:143> 'int' 480
|   |     `-ImplicitCastExpr 0x561d4a167cf8 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x561d4a167c20 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x561d4a167c08 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x561d4a167bc8 <col:162> 'const char [37]' lvalue "uint16_t Packet::anno_u16(int) const"
|   `-ReturnStmt 0x561d4a167fc8 <line:484:2, col:75>
|     `-ImplicitCastExpr 0x561d4a167fb0 <col:9, col:75> 'click_aliasable_uint16_t':'unsigned short' <LValueToRValue>
|       `-UnaryOperator 0x561d4a167f98 <col:9, col:75> 'const click_aliasable_uint16_t':'const unsigned short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x561d4a167f68 <col:10, col:75> 'const click_aliasable_uint16_t *' reinterpret_cast<const click_aliasable_uint16_t *> <BitCast>
|           `-BinaryOperator 0x561d4a167f08 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x561d4a167ed8 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x561d4a167e50 <col:61, col:70> 'char const[48]' lvalue ->c 0x561d4a15b6c0
|             |   `-CXXMemberCallExpr 0x561d4a167e30 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x561d4a167e00 <col:61> '<bound member function type>' ->xanno 0x561d4a1502c8
|             |       `-CXXThisExpr 0x561d4a167df0 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x561d4a167ef0 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x561d4a167e80 <col:74> 'int' lvalue ParmVar 0x561d4a152df0 'i' 'int'
|-CXXMethodDecl 0x561d4a153138 <line:494:5, line:500:5> line:494:10 used set_anno_u16 'void (int, uint16_t)'
| |-ParmVarDecl 0x561d4a152fa8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x561d4a153020 <col:30, col:39> col:39 used x 'uint16_t':'unsigned short'
| `-CompoundStmt 0x561d4a168728 <col:42, line:500:5>
|   |-ParenExpr 0x561d4a1684c0 <line:495:2, col:182> 'void'
|   | `-ConditionalOperator 0x561d4a168490 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x561d4a168170 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x561d4a168140 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x561d4a168050 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x561d4a168038 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x561d4a167ff8 <col:23> 'int' lvalue ParmVar 0x561d4a152fa8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x561d4a168018 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x561d4a168120 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x561d4a168108 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x561d4a168070 <col:33> 'int' lvalue ParmVar 0x561d4a152fa8 'i' 'int'
|   |   |     `-BinaryOperator 0x561d4a1680e8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x561d4a1680d0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x561d4a168090 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x561d4a1506b0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x561d4a1680b0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x561d4a1681d0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x561d4a1681b0 <col:60> 'int' 0
|   |   `-CallExpr 0x561d4a1683f0 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x561d4a1683d8 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x561d4a1683b8 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x561d49cbcb90 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x561d4a168430 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x561d4a168240 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x561d4a168448 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x561d4a168278 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x561d4a168460 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x561d4a1682b0 <col:143> 'int' 495
|   |     `-ImplicitCastExpr 0x561d4a168478 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x561d4a1683a0 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x561d4a168388 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x561d4a168348 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u16(int, uint16_t)"
|   `-BinaryOperator 0x561d4a168708 <line:499:2, col:66> 'click_aliasable_uint16_t':'unsigned short' lvalue '='
|     |-UnaryOperator 0x561d4a1686b8 <col:2, col:62> 'click_aliasable_uint16_t':'unsigned short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x561d4a168688 <col:3, col:62> 'click_aliasable_uint16_t *' reinterpret_cast<click_aliasable_uint16_t *> <BitCast>
|     |   `-BinaryOperator 0x561d4a168630 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x561d4a168600 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x561d4a1685b0 <col:48, col:57> 'char [48]' lvalue ->c 0x561d4a15b6c0
|     |     |   `-CXXMemberCallExpr 0x561d4a168590 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x561d4a168560 <col:48> '<bound member function type>' ->xanno 0x561d4a150468
|     |     |       `-CXXThisExpr 0x561d4a168550 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x561d4a168618 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x561d4a1685e0 <col:61> 'int' lvalue ParmVar 0x561d4a152fa8 'i' 'int'
|     `-ImplicitCastExpr 0x561d4a1686f0 <col:66> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x561d4a1686d0 <col:66> 'uint16_t':'unsigned short' lvalue ParmVar 0x561d4a153020 'x' 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x561d4a1532f8 <line:507:5, line:513:5> line:507:13 anno_s16 'int16_t (int) const'
| |-ParmVarDecl 0x561d4a153200 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x561d4a168e88 <col:35, line:513:5>
|   |-ParenExpr 0x561d4a168b98 <line:508:2, col:182> 'void'
|   | `-ConditionalOperator 0x561d4a168b68 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x561d4a1688c0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x561d4a168890 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x561d4a1687a0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x561d4a168788 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x561d4a168748 <col:23> 'int' lvalue ParmVar 0x561d4a153200 'i' 'int'
|   |   |   | `-IntegerLiteral 0x561d4a168768 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x561d4a168870 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x561d4a168858 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x561d4a1687c0 <col:33> 'int' lvalue ParmVar 0x561d4a153200 'i' 'int'
|   |   |     `-BinaryOperator 0x561d4a168838 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x561d4a168820 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x561d4a1687e0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x561d4a1506b0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x561d4a168800 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x561d4a168920 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x561d4a168900 <col:60> 'int' 0
|   |   `-CallExpr 0x561d4a168ac8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x561d4a168ab0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x561d4a168a90 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x561d49cbcb90 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x561d4a168b08 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x561d4a168990 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x561d4a168b20 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x561d4a1689c8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x561d4a168b38 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x561d4a168a00 <col:143> 'int' 508
|   |     `-ImplicitCastExpr 0x561d4a168b50 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x561d4a168a78 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x561d4a168a60 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x561d4a168a20 <col:162> 'const char [36]' lvalue "int16_t Packet::anno_s16(int) const"
|   `-ReturnStmt 0x561d4a168e78 <line:512:2, col:74>
|     `-ImplicitCastExpr 0x561d4a168e60 <col:9, col:74> 'click_aliasable_int16_t':'short' <LValueToRValue>
|       `-UnaryOperator 0x561d4a168e48 <col:9, col:74> 'const click_aliasable_int16_t':'const short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x561d4a168e18 <col:10, col:74> 'const click_aliasable_int16_t *' reinterpret_cast<const click_aliasable_int16_t *> <BitCast>
|           `-BinaryOperator 0x561d4a168d90 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x561d4a168d60 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x561d4a168d10 <col:60, col:69> 'char const[48]' lvalue ->c 0x561d4a15b6c0
|             |   `-CXXMemberCallExpr 0x561d4a168cf0 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x561d4a168cc0 <col:60> '<bound member function type>' ->xanno 0x561d4a1502c8
|             |       `-CXXThisExpr 0x561d4a168cb0 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x561d4a168d78 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x561d4a168d40 <col:73> 'int' lvalue ParmVar 0x561d4a153200 'i' 'int'
|-CXXMethodDecl 0x561d4a153548 <line:522:5, line:528:5> line:522:10 set_anno_s16 'void (int, int16_t)'
| |-ParmVarDecl 0x561d4a1533b8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x561d4a153430 <col:30, col:38> col:38 used x 'int16_t':'short'
| `-CompoundStmt 0x561d4a1695a8 <col:41, line:528:5>
|   |-ParenExpr 0x561d4a169330 <line:523:2, col:182> 'void'
|   | `-ConditionalOperator 0x561d4a169300 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x561d4a169020 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x561d4a168ff0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x561d4a168f00 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x561d4a168ee8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x561d4a168ea8 <col:23> 'int' lvalue ParmVar 0x561d4a1533b8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x561d4a168ec8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x561d4a168fd0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x561d4a168fb8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x561d4a168f20 <col:33> 'int' lvalue ParmVar 0x561d4a1533b8 'i' 'int'
|   |   |     `-BinaryOperator 0x561d4a168f98 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x561d4a168f80 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x561d4a168f40 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x561d4a1506b0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x561d4a168f60 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x561d4a169080 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x561d4a169060 <col:60> 'int' 0
|   |   `-CallExpr 0x561d4a169260 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x561d4a169248 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x561d4a169228 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x561d49cbcb90 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x561d4a1692a0 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x561d4a1690f0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x561d4a1692b8 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x561d4a169128 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x561d4a1692d0 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x561d4a169160 <col:143> 'int' 523
|   |     `-ImplicitCastExpr 0x561d4a1692e8 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x561d4a169210 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x561d4a1691f8 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x561d4a1691b8 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s16(int, int16_t)"
|   `-BinaryOperator 0x561d4a169588 <line:527:2, col:65> 'click_aliasable_int16_t':'short' lvalue '='
|     |-UnaryOperator 0x561d4a169538 <col:2, col:61> 'click_aliasable_int16_t':'short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x561d4a169508 <col:3, col:61> 'click_aliasable_int16_t *' reinterpret_cast<click_aliasable_int16_t *> <BitCast>
|     |   `-BinaryOperator 0x561d4a1694b0 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x561d4a169470 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x561d4a169420 <col:47, col:56> 'char [48]' lvalue ->c 0x561d4a15b6c0
|     |     |   `-CXXMemberCallExpr 0x561d4a169400 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x561d4a1693d0 <col:47> '<bound member function type>' ->xanno 0x561d4a150468
|     |     |       `-CXXThisExpr 0x561d4a1693c0 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x561d4a169488 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x561d4a169450 <col:60> 'int' lvalue ParmVar 0x561d4a1533b8 'i' 'int'
|     `-ImplicitCastExpr 0x561d4a169570 <col:65> 'int16_t':'short' <LValueToRValue>
|       `-DeclRefExpr 0x561d4a169550 <col:65> 'int16_t':'short' lvalue ParmVar 0x561d4a153430 'x' 'int16_t':'short'
|-CXXMethodDecl 0x561d4a153708 <line:535:5, line:541:5> line:535:14 used anno_u32 'uint32_t (int) const'
| |-ParmVarDecl 0x561d4a153610 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x561d4a169c78 <col:36, line:541:5>
|   |-ParenExpr 0x561d4a169a18 <line:536:2, col:182> 'void'
|   | `-ConditionalOperator 0x561d4a1699e8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x561d4a169740 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x561d4a169710 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x561d4a169620 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x561d4a169608 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x561d4a1695c8 <col:23> 'int' lvalue ParmVar 0x561d4a153610 'i' 'int'
|   |   |   | `-IntegerLiteral 0x561d4a1695e8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x561d4a1696f0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x561d4a1696d8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x561d4a169640 <col:33> 'int' lvalue ParmVar 0x561d4a153610 'i' 'int'
|   |   |     `-BinaryOperator 0x561d4a1696b8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x561d4a1696a0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x561d4a169660 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x561d4a1506b0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x561d4a169680 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x561d4a1697a0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x561d4a169780 <col:60> 'int' 0
|   |   `-CallExpr 0x561d4a169948 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x561d4a169930 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x561d4a169910 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x561d49cbcb90 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x561d4a169988 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x561d4a169810 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x561d4a1699a0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x561d4a169848 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x561d4a1699b8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x561d4a169880 <col:143> 'int' 536
|   |     `-ImplicitCastExpr 0x561d4a1699d0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x561d4a1698f8 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x561d4a1698e0 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x561d4a1698a0 <col:162> 'const char [37]' lvalue "uint32_t Packet::anno_u32(int) const"
|   `-ReturnStmt 0x561d4a169c68 <line:540:2, col:75>
|     `-ImplicitCastExpr 0x561d4a169c50 <col:9, col:75> 'click_aliasable_uint32_t':'unsigned int' <LValueToRValue>
|       `-UnaryOperator 0x561d4a169c38 <col:9, col:75> 'const click_aliasable_uint32_t':'const unsigned int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x561d4a169c08 <col:10, col:75> 'const click_aliasable_uint32_t *' reinterpret_cast<const click_aliasable_uint32_t *> <BitCast>
|           `-BinaryOperator 0x561d4a169bb0 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x561d4a169b80 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x561d4a169b30 <col:61, col:70> 'char const[48]' lvalue ->c 0x561d4a15b6c0
|             |   `-CXXMemberCallExpr 0x561d4a169b10 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x561d4a169ae0 <col:61> '<bound member function type>' ->xanno 0x561d4a1502c8
|             |       `-CXXThisExpr 0x561d4a169ad0 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x561d4a169b98 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x561d4a169b60 <col:74> 'int' lvalue ParmVar 0x561d4a153610 'i' 'int'
|-CXXMethodDecl 0x561d4a1538d8 <line:550:5, col:75> col:45 used set_anno_u32 'void (int, uint32_t)'
| |-ParmVarDecl 0x561d4a1537c8 <col:58, col:62> col:62 i 'int'
| |-ParmVarDecl 0x561d4a153840 <col:65, col:74> col:74 x 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x561d4a153988 <col:20>
| `-OptimizeNoneAttr 0x561d4a1539e0 <col:30>
|-CXXMethodDecl 0x561d4a153b18 <line:556:5, line:562:5> line:556:13 used anno_s32 'int32_t (int) const'
| |-ParmVarDecl 0x561d4a153a20 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x561d4a16a348 <col:35, line:562:5>
|   |-ParenExpr 0x561d4a16a0e8 <line:557:2, col:182> 'void'
|   | `-ConditionalOperator 0x561d4a16a0b8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x561d4a169e10 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x561d4a169de0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x561d4a169cf0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x561d4a169cd8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x561d4a169c98 <col:23> 'int' lvalue ParmVar 0x561d4a153a20 'i' 'int'
|   |   |   | `-IntegerLiteral 0x561d4a169cb8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x561d4a169dc0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x561d4a169da8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x561d4a169d10 <col:33> 'int' lvalue ParmVar 0x561d4a153a20 'i' 'int'
|   |   |     `-BinaryOperator 0x561d4a169d88 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x561d4a169d70 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x561d4a169d30 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x561d4a1506b0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x561d4a169d50 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x561d4a169e70 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x561d4a169e50 <col:60> 'int' 0
|   |   `-CallExpr 0x561d4a16a018 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x561d4a16a000 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x561d4a169fe0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x561d49cbcb90 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x561d4a16a058 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x561d4a169ee0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x561d4a16a070 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x561d4a169f18 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x561d4a16a088 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x561d4a169f50 <col:143> 'int' 557
|   |     `-ImplicitCastExpr 0x561d4a16a0a0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x561d4a169fc8 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x561d4a169fb0 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x561d4a169f70 <col:162> 'const char [36]' lvalue "int32_t Packet::anno_s32(int) const"
|   `-ReturnStmt 0x561d4a16a338 <line:561:2, col:74>
|     `-ImplicitCastExpr 0x561d4a16a320 <col:9, col:74> 'click_aliasable_int32_t':'int' <LValueToRValue>
|       `-UnaryOperator 0x561d4a16a308 <col:9, col:74> 'const click_aliasable_int32_t':'const int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x561d4a16a2d8 <col:10, col:74> 'const click_aliasable_int32_t *' reinterpret_cast<const click_aliasable_int32_t *> <BitCast>
|           `-BinaryOperator 0x561d4a16a280 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x561d4a16a250 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x561d4a16a200 <col:60, col:69> 'char const[48]' lvalue ->c 0x561d4a15b6c0
|             |   `-CXXMemberCallExpr 0x561d4a16a1e0 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x561d4a16a1b0 <col:60> '<bound member function type>' ->xanno 0x561d4a1502c8
|             |       `-CXXThisExpr 0x561d4a16a1a0 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x561d4a16a268 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x561d4a16a230 <col:73> 'int' lvalue ParmVar 0x561d4a153a20 'i' 'int'
|-CXXMethodDecl 0x561d4a153d28 <line:571:5, line:577:5> line:571:10 used set_anno_s32 'void (int, int32_t)'
| |-ParmVarDecl 0x561d4a153bd8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x561d4a153c50 <col:30, col:38> col:38 used x 'int32_t':'int'
| `-CompoundStmt 0x561d4a16aa28 <col:41, line:577:5>
|   |-ParenExpr 0x561d4a16a7b8 <line:572:2, col:182> 'void'
|   | `-ConditionalOperator 0x561d4a16a788 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x561d4a16a4e0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x561d4a16a4b0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x561d4a16a3c0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x561d4a16a3a8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x561d4a16a368 <col:23> 'int' lvalue ParmVar 0x561d4a153bd8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x561d4a16a388 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x561d4a16a490 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x561d4a16a478 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x561d4a16a3e0 <col:33> 'int' lvalue ParmVar 0x561d4a153bd8 'i' 'int'
|   |   |     `-BinaryOperator 0x561d4a16a458 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x561d4a16a440 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x561d4a16a400 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x561d4a1506b0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x561d4a16a420 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x561d4a16a540 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x561d4a16a520 <col:60> 'int' 0
|   |   `-CallExpr 0x561d4a16a6e8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x561d4a16a6d0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x561d4a16a6b0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x561d49cbcb90 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x561d4a16a728 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x561d4a16a5b0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x561d4a16a740 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x561d4a16a5e8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x561d4a16a758 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x561d4a16a620 <col:143> 'int' 572
|   |     `-ImplicitCastExpr 0x561d4a16a770 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x561d4a16a698 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x561d4a16a680 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x561d4a16a640 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s32(int, int32_t)"
|   `-BinaryOperator 0x561d4a16aa08 <line:576:2, col:65> 'click_aliasable_int32_t':'int' lvalue '='
|     |-UnaryOperator 0x561d4a16a9b8 <col:2, col:61> 'click_aliasable_int32_t':'int' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x561d4a16a988 <col:3, col:61> 'click_aliasable_int32_t *' reinterpret_cast<click_aliasable_int32_t *> <BitCast>
|     |   `-BinaryOperator 0x561d4a16a928 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x561d4a16a8f8 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x561d4a16a8a8 <col:47, col:56> 'char [48]' lvalue ->c 0x561d4a15b6c0
|     |     |   `-CXXMemberCallExpr 0x561d4a16a888 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x561d4a16a858 <col:47> '<bound member function type>' ->xanno 0x561d4a150468
|     |     |       `-CXXThisExpr 0x561d4a16a848 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x561d4a16a910 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x561d4a16a8d8 <col:60> 'int' lvalue ParmVar 0x561d4a153bd8 'i' 'int'
|     `-ImplicitCastExpr 0x561d4a16a9f0 <col:65> 'int32_t':'int' <LValueToRValue>
|       `-DeclRefExpr 0x561d4a16a9d0 <col:65> 'int32_t':'int' lvalue ParmVar 0x561d4a153c50 'x' 'int32_t':'int'
|-CXXMethodDecl 0x561d4a153ee8 <line:585:5, line:591:5> line:585:14 used anno_u64 'uint64_t (int) const'
| |-ParmVarDecl 0x561d4a153df0 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x561d4a16b158 <col:36, line:591:5>
|   |-ParenExpr 0x561d4a16ae98 <line:586:2, col:182> 'void'
|   | `-ConditionalOperator 0x561d4a16ae68 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x561d4a16abc0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x561d4a16ab90 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x561d4a16aaa0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x561d4a16aa88 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x561d4a16aa48 <col:23> 'int' lvalue ParmVar 0x561d4a153df0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x561d4a16aa68 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x561d4a16ab70 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x561d4a16ab58 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x561d4a16aac0 <col:33> 'int' lvalue ParmVar 0x561d4a153df0 'i' 'int'
|   |   |     `-BinaryOperator 0x561d4a16ab38 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x561d4a16ab20 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x561d4a16aae0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x561d4a1506b0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x561d4a16ab00 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x561d4a16ac20 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x561d4a16ac00 <col:60> 'int' 0
|   |   `-CallExpr 0x561d4a16adc8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x561d4a16adb0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x561d4a16ad90 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x561d49cbcb90 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x561d4a16ae08 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x561d4a16ac90 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x561d4a16ae20 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x561d4a16acc8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x561d4a16ae38 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x561d4a16ad00 <col:143> 'int' 586
|   |     `-ImplicitCastExpr 0x561d4a16ae50 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x561d4a16ad78 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x561d4a16ad60 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x561d4a16ad20 <col:162> 'const char [37]' lvalue "uint64_t Packet::anno_u64(int) const"
|   `-ReturnStmt 0x561d4a16b148 <line:590:2, col:75>
|     `-ImplicitCastExpr 0x561d4a16b130 <col:9, col:75> 'click_aliasable_uint64_t':'unsigned long' <LValueToRValue>
|       `-UnaryOperator 0x561d4a16b118 <col:9, col:75> 'const click_aliasable_uint64_t':'const unsigned long' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x561d4a16b0e8 <col:10, col:75> 'const click_aliasable_uint64_t *' reinterpret_cast<const click_aliasable_uint64_t *> <BitCast>
|           `-BinaryOperator 0x561d4a16b060 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x561d4a16b030 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x561d4a16afe0 <col:61, col:70> 'char const[48]' lvalue ->c 0x561d4a15b6c0
|             |   `-CXXMemberCallExpr 0x561d4a16afc0 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x561d4a16af90 <col:61> '<bound member function type>' ->xanno 0x561d4a1502c8
|             |       `-CXXThisExpr 0x561d4a16af80 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x561d4a16b048 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x561d4a16b010 <col:74> 'int' lvalue ParmVar 0x561d4a153df0 'i' 'int'
|-CXXMethodDecl 0x561d4a154138 <line:600:5, line:606:5> line:600:10 used set_anno_u64 'void (int, uint64_t)'
| |-ParmVarDecl 0x561d4a153fa8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x561d4a154020 <col:30, col:39> col:39 used x 'uint64_t':'unsigned long'
| `-CompoundStmt 0x561d4a16b838 <col:42, line:606:5>
|   |-ParenExpr 0x561d4a16b5c8 <line:601:2, col:182> 'void'
|   | `-ConditionalOperator 0x561d4a16b598 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x561d4a16b2f0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x561d4a16b2c0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x561d4a16b1d0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x561d4a16b1b8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x561d4a16b178 <col:23> 'int' lvalue ParmVar 0x561d4a153fa8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x561d4a16b198 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x561d4a16b2a0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x561d4a16b288 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x561d4a16b1f0 <col:33> 'int' lvalue ParmVar 0x561d4a153fa8 'i' 'int'
|   |   |     `-BinaryOperator 0x561d4a16b268 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x561d4a16b250 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x561d4a16b210 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x561d4a1506b0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x561d4a16b230 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x561d4a16b350 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x561d4a16b330 <col:60> 'int' 0
|   |   `-CallExpr 0x561d4a16b4f8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x561d4a16b4e0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x561d4a16b4c0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x561d49cbcb90 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x561d4a16b538 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x561d4a16b3c0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x561d4a16b550 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x561d4a16b3f8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x561d4a16b568 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x561d4a16b430 <col:143> 'int' 601
|   |     `-ImplicitCastExpr 0x561d4a16b580 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x561d4a16b4a8 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x561d4a16b490 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x561d4a16b450 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u64(int, uint64_t)"
|   `-BinaryOperator 0x561d4a16b818 <line:605:2, col:66> 'click_aliasable_uint64_t':'unsigned long' lvalue '='
|     |-UnaryOperator 0x561d4a16b7c8 <col:2, col:62> 'click_aliasable_uint64_t':'unsigned long' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x561d4a16b798 <col:3, col:62> 'click_aliasable_uint64_t *' reinterpret_cast<click_aliasable_uint64_t *> <BitCast>
|     |   `-BinaryOperator 0x561d4a16b738 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x561d4a16b708 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x561d4a16b6b8 <col:48, col:57> 'char [48]' lvalue ->c 0x561d4a15b6c0
|     |     |   `-CXXMemberCallExpr 0x561d4a16b698 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x561d4a16b668 <col:48> '<bound member function type>' ->xanno 0x561d4a150468
|     |     |       `-CXXThisExpr 0x561d4a16b658 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x561d4a16b720 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x561d4a16b6e8 <col:61> 'int' lvalue ParmVar 0x561d4a153fa8 'i' 'int'
|     `-ImplicitCastExpr 0x561d4a16b800 <col:66> 'uint64_t':'unsigned long' <LValueToRValue>
|       `-DeclRefExpr 0x561d4a16b7e0 <col:66> 'uint64_t':'unsigned long' lvalue ParmVar 0x561d4a154020 'x' 'uint64_t':'unsigned long'
|-CXXMethodDecl 0x561d4a1542d0 <line:614:5, line:620:5> line:614:11 anno_ptr 'void *(int) const'
| |-ParmVarDecl 0x561d4a154200 <col:20, col:24> col:24 used i 'int'
| `-CompoundStmt 0x561d4a16c0a8 <col:33, line:620:5>
|   |-ParenExpr 0x561d4a16be20 <line:615:2, col:220> 'void'
|   | `-ConditionalOperator 0x561d4a16bdf0 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x561d4a16ba40 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x561d4a16ba10 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x561d4a16b8b0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x561d4a16b898 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x561d4a16b858 <col:23> 'int' lvalue ParmVar 0x561d4a154200 'i' 'int'
|   |   |   | `-IntegerLiteral 0x561d4a16b878 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x561d4a16b9f0 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x561d4a16b9d8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x561d4a16b8d0 <col:33> 'int' lvalue ParmVar 0x561d4a154200 'i' 'int'
|   |   |     `-BinaryOperator 0x561d4a16b9b8 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x561d4a16b9a0 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x561d4a16b8f0 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x561d4a1506b0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x561d4a16b978 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x561d4a16b960 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x561d4a16b928 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x561d4a16baa0 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x561d4a16ba80 <col:79> 'int' 0
|   |   `-CallExpr 0x561d4a16bd50 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x561d4a16bd38 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x561d4a16bd18 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x561d49cbcb90 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x561d4a16bd90 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x561d4a16bb88 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x561d4a16bda8 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x561d4a16bbd0 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x561d4a16bdc0 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x561d4a16bc08 <col:181> 'int' 615
|   |     `-ImplicitCastExpr 0x561d4a16bdd8 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x561d4a16bd00 <col:186, col:200> 'const char [34]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x561d4a16bce8 <col:200> 'const char [34]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x561d4a16bca8 <col:200> 'const char [34]' lvalue "void *Packet::anno_ptr(int) const"
|   `-ReturnStmt 0x561d4a16c098 <line:619:2, col:81>
|     `-ImplicitCastExpr 0x561d4a16c080 <col:9, col:81> 'click_aliasable_void_pointer_t':'void *' <LValueToRValue>
|       `-UnaryOperator 0x561d4a16c068 <col:9, col:81> 'const click_aliasable_void_pointer_t':'void *const' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x561d4a16c038 <col:10, col:81> 'const click_aliasable_void_pointer_t *' reinterpret_cast<const click_aliasable_void_pointer_t *> <BitCast>
|           `-BinaryOperator 0x561d4a16bfb0 <col:67, col:80> 'const char *' '+'
|             |-ImplicitCastExpr 0x561d4a16bf80 <col:67, col:76> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x561d4a16bf30 <col:67, col:76> 'char const[48]' lvalue ->c 0x561d4a15b6c0
|             |   `-CXXMemberCallExpr 0x561d4a16bf10 <col:67, col:73> 'const Packet::Anno *'
|             |     `-MemberExpr 0x561d4a16bee0 <col:67> '<bound member function type>' ->xanno 0x561d4a1502c8
|             |       `-CXXThisExpr 0x561d4a16bed0 <col:67> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x561d4a16bf98 <col:80> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x561d4a16bf60 <col:80> 'int' lvalue ParmVar 0x561d4a154200 'i' 'int'
|-CXXMethodDecl 0x561d4a1544e8 <line:629:5, line:635:5> line:629:10 set_anno_ptr 'void (int, const void *)'
| |-ParmVarDecl 0x561d4a154390 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x561d4a154410 <col:30, col:42> col:42 used x 'const void *'
| `-CompoundStmt 0x561d4a16c8d0 <col:45, line:635:5>
|   |-ParenExpr 0x561d4a16c618 <line:630:2, col:220> 'void'
|   | `-ConditionalOperator 0x561d4a16c5e8 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x561d4a16c2b0 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x561d4a16c280 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x561d4a16c120 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x561d4a16c108 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x561d4a16c0c8 <col:23> 'int' lvalue ParmVar 0x561d4a154390 'i' 'int'
|   |   |   | `-IntegerLiteral 0x561d4a16c0e8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x561d4a16c260 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x561d4a16c248 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x561d4a16c140 <col:33> 'int' lvalue ParmVar 0x561d4a154390 'i' 'int'
|   |   |     `-BinaryOperator 0x561d4a16c228 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x561d4a16c210 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x561d4a16c160 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x561d4a1506b0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x561d4a16c1e8 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x561d4a16c1d0 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x561d4a16c198 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x561d4a16c310 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x561d4a16c2f0 <col:79> 'int' 0
|   |   `-CallExpr 0x561d4a16c548 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x561d4a16c530 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x561d4a16c510 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x561d49cbcb90 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x561d4a16c588 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x561d4a16c380 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x561d4a16c5a0 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x561d4a16c3c8 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x561d4a16c5b8 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x561d4a16c400 <col:181> 'int' 630
|   |     `-ImplicitCastExpr 0x561d4a16c5d0 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x561d4a16c4f8 <col:186, col:200> 'const char [45]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x561d4a16c4e0 <col:200> 'const char [45]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x561d4a16c498 <col:200> 'const char [45]' lvalue "void Packet::set_anno_ptr(int, const void *)"
|   `-BinaryOperator 0x561d4a16c8b0 <line:634:2, col:92> 'click_aliasable_void_pointer_t':'void *' lvalue '='
|     |-UnaryOperator 0x561d4a16c818 <col:2, col:68> 'click_aliasable_void_pointer_t':'void *' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x561d4a16c7e8 <col:3, col:68> 'click_aliasable_void_pointer_t *' reinterpret_cast<click_aliasable_void_pointer_t *> <BitCast>
|     |   `-BinaryOperator 0x561d4a16c788 <col:54, col:67> 'char *' '+'
|     |     |-ImplicitCastExpr 0x561d4a16c758 <col:54, col:63> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x561d4a16c708 <col:54, col:63> 'char [48]' lvalue ->c 0x561d4a15b6c0
|     |     |   `-CXXMemberCallExpr 0x561d4a16c6e8 <col:54, col:60> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x561d4a16c6b8 <col:54> '<bound member function type>' ->xanno 0x561d4a150468
|     |     |       `-CXXThisExpr 0x561d4a16c6a8 <col:54> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x561d4a16c770 <col:67> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x561d4a16c738 <col:67> 'int' lvalue ParmVar 0x561d4a154390 'i' 'int'
|     `-CXXConstCastExpr 0x561d4a16c880 <col:72, col:92> 'void *' const_cast<void *> <NoOp>
|       `-ImplicitCastExpr 0x561d4a16c868 <col:91> 'const void *' <LValueToRValue> part_of_explicit_cast
|         `-DeclRefExpr 0x561d4a16c830 <col:91> 'const void *' lvalue ParmVar 0x561d4a154410 'x' 'const void *'
|-CXXMethodDecl 0x561d4a1545b8 <line:638:5, line:640:5> line:638:20 data_packet 'Packet *()' inline
| `-CompoundStmt 0x561d4a16c958 <col:34, line:640:5>
|   `-ReturnStmt 0x561d4a16c948 <line:639:9, col:16>
|     `-ImplicitCastExpr 0x561d4a16c930 <col:16> 'Packet *' <LValueToRValue>
|       `-MemberExpr 0x561d4a16c900 <col:16> 'Packet *' lvalue ->_data_packet 0x561d4a15c278
|         `-CXXThisExpr 0x561d4a16c8f0 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x561d4a1546f8 <line:643:5, col:50> col:17 used clear_annotations 'void (bool)' inline
| `-ParmVarDecl 0x561d4a154668 <col:35, col:46> col:40 all 'bool' cinit
|   `-CXXBoolLiteralExpr 0x561d4a165a18 <col:46> 'bool' true
|-CXXMethodDecl 0x561d4a154878 <line:644:5, col:48> col:17 copy_annotations 'void (const Packet *)' inline
| `-ParmVarDecl 0x561d4a1547b0 <col:34, col:47> col:48 'const Packet *'
|-EnumDecl 0x561d4a154920 <line:648:5, line:660:5> line:648:5
| |-DeprecatedAttr 0x561d4a1550d0 <line:660:22> "" ""
| |-EnumConstantDecl 0x561d4a154a20 <line:649:2, col:21> col:2 DEFAULT_HEADROOM 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x561d4a155140 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561d4a154a00 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 28
| |     `-DeclRefExpr 0x561d4a1549e0 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x561d4a149b80 'default_headroom' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x561d4a154ab0 <line:650:2, col:22> col:2 MIN_BUFFER_LENGTH 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x561d4a155158 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561d4a154a90 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 64
| |     `-DeclRefExpr 0x561d4a154a70 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x561d4a149c10 'min_buffer_length' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x561d4a154b40 <line:651:2, col:21> col:2 referenced addr_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x561d4a155170 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561d4a154b20 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x561d4a154b00 <col:21> 'int' 0
| |-EnumConstantDecl 0x561d4a154bd0 <line:652:2, col:19> col:2 referenced addr_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x561d4a155188 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561d4a154bb0 <col:19> 'int' Int: 16
| |     `-IntegerLiteral 0x561d4a154b90 <col:19> 'int' 16
| |-EnumConstantDecl 0x561d4a154c60 <line:653:2, col:21> col:2 referenced user_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x561d4a1551a0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561d4a154c40 <col:21> 'int' Int: 16
| |     `-IntegerLiteral 0x561d4a154c20 <col:21> 'int' 16
| |-EnumConstantDecl 0x561d4a154cf0 <line:654:2, col:19> col:2 referenced user_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x561d4a1551b8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561d4a154cd0 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x561d4a154cb0 <col:19> 'int' 32
| |-EnumConstantDecl 0x561d4a154d80 <line:655:2, col:19> col:2 ADDR_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x561d4a1551d0 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561d4a154d60 <col:19> 'int' Int: 16
| |     `-DeclRefExpr 0x561d4a154d40 <col:19> 'int' EnumConstant 0x561d4a154bd0 'addr_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x561d4a154e10 <line:656:2, col:19> col:2 referenced USER_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x561d4a1551e8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561d4a154df0 <col:19> 'int' Int: 32
| |     `-DeclRefExpr 0x561d4a154dd0 <col:19> 'int' EnumConstant 0x561d4a154cf0 'user_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x561d4a154ee0 <line:657:2, col:40> col:2 USER_ANNO_U16_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x561d4a155200 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561d4a154ec0 <col:23, col:40> 'int' Int: 16
| |     `-BinaryOperator 0x561d4a154ea0 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x561d4a154e60 <col:23> 'int' EnumConstant 0x561d4a154e10 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x561d4a154e80 <col:40> 'int' 2
| |-EnumConstantDecl 0x561d4a154fb0 <line:658:2, col:40> col:2 USER_ANNO_U32_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x561d4a155218 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561d4a154f90 <col:23, col:40> 'int' Int: 8
| |     `-BinaryOperator 0x561d4a154f70 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x561d4a154f30 <col:23> 'int' EnumConstant 0x561d4a154e10 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x561d4a154f50 <col:40> 'int' 4
| `-EnumConstantDecl 0x561d4a155080 <line:659:2, col:40> col:2 USER_ANNO_U64_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|   `-ImplicitCastExpr 0x561d4a155230 <col:23, col:40> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x561d4a155060 <col:23, col:40> 'int' Int: 4
|       `-BinaryOperator 0x561d4a155040 <col:23, col:40> 'int' '/'
|         |-DeclRefExpr 0x561d4a155000 <col:23> 'int' EnumConstant 0x561d4a154e10 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|         `-IntegerLiteral 0x561d4a155020 <col:40> 'int' 8
|-CXXMethodDecl 0x561d4a155270 <line:661:5, col:79> col:33 buffer_data 'const unsigned char *() const' inline
| `-DeprecatedAttr 0x561d4a155310 <col:68> "" ""
|-CXXMethodDecl 0x561d4a1553a8 <line:662:5, col:56> col:18 addr_anno 'void *()' inline
| `-DeprecatedAttr 0x561d4a155448 <col:45> "" ""
|-CXXMethodDecl 0x561d4a1554e0 <line:663:5, col:68> col:24 addr_anno 'const void *() const' inline
| `-DeprecatedAttr 0x561d4a155580 <col:57> "" ""
|-CXXMethodDecl 0x561d4a155618 <line:664:5, col:56> col:18 user_anno 'void *()' inline
| `-DeprecatedAttr 0x561d4a1556b8 <col:45> "" ""
|-CXXMethodDecl 0x561d4a155750 <line:665:5, col:68> col:24 user_anno 'const void *() const' inline
| `-DeprecatedAttr 0x561d4a1557f0 <col:57> "" ""
|-CXXMethodDecl 0x561d4a155880 <line:666:5, col:62> col:21 user_anno_u8 'uint8_t *()' inline
| `-DeprecatedAttr 0x561d4a155920 <col:51> "" ""
|-CXXMethodDecl 0x561d4a1559b0 <line:667:5, col:74> col:27 user_anno_u8 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x561d4a155a50 <col:63> "" ""
|-CXXMethodDecl 0x561d4a155ae0 <line:668:5, col:64> col:22 user_anno_u32 'uint32_t *()' inline
| `-DeprecatedAttr 0x561d4a155b80 <col:53> "" ""
|-CXXMethodDecl 0x561d4a155c10 <line:669:5, col:76> col:28 user_anno_u32 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x561d4a155cb0 <col:65> "" ""
|-CXXMethodDecl 0x561d4a155dc8 <line:670:5, col:72> col:20 user_anno_u8 'uint8_t (int) const' inline
| |-ParmVarDecl 0x561d4a155d38 <col:33, col:37> col:37 i 'int'
| `-DeprecatedAttr 0x561d4a155e70 <col:61> "" ""
|-CXXMethodDecl 0x561d4a156008 <line:671:5, col:78> col:17 set_user_anno_u8 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x561d4a155ef8 <col:34, col:38> col:38 i 'int'
| |-ParmVarDecl 0x561d4a155f70 <col:41, col:49> col:49 v 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x561d4a1560b8 <col:67> "" ""
|-CXXMethodDecl 0x561d4a1561d0 <line:672:5, col:74> col:21 user_anno_u16 'uint16_t (int) const' inline
| |-ParmVarDecl 0x561d4a156140 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x561d4a156278 <col:63> "" ""
|-CXXMethodDecl 0x561d4a156410 <line:673:5, col:80> col:17 set_user_anno_u16 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x561d4a156300 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x561d4a156378 <col:42, col:51> col:51 v 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x561d4a1564c0 <col:69> "" ""
|-CXXMethodDecl 0x561d4a1565d8 <line:674:5, col:74> col:21 user_anno_u32 'uint32_t (int) const' inline
| |-ParmVarDecl 0x561d4a156548 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x561d4a156680 <col:63> "" ""
|-CXXMethodDecl 0x561d4a159298 <line:675:5, col:80> col:17 set_user_anno_u32 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x561d4a159188 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x561d4a159200 <col:42, col:51> col:51 v 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x561d4a159348 <col:69> "" ""
|-CXXMethodDecl 0x561d4a159460 <line:676:5, col:73> col:20 user_anno_s32 'int32_t (int) const' inline
| |-ParmVarDecl 0x561d4a1593d0 <col:34, col:38> col:38 i 'int'
| `-DeprecatedAttr 0x561d4a159508 <col:62> "" ""
|-CXXMethodDecl 0x561d4a1596a0 <line:677:5, col:79> col:17 set_user_anno_s32 'void (int, int32_t)' inline
| |-ParmVarDecl 0x561d4a159590 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x561d4a159608 <col:42, col:50> col:50 v 'int32_t':'int'
| `-DeprecatedAttr 0x561d4a159750 <col:68> "" ""
|-CXXMethodDecl 0x561d4a159868 <line:679:5, col:74> col:21 user_anno_u64 'uint64_t (int) const' inline
| |-ParmVarDecl 0x561d4a1597d8 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x561d4a159910 <col:63> "" ""
|-CXXMethodDecl 0x561d4a159aa8 <line:680:5, col:80> col:17 set_user_anno_u64 'void (int, uint64_t)' inline
| |-ParmVarDecl 0x561d4a159998 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x561d4a159a10 <col:42, col:51> col:51 v 'uint64_t':'unsigned long'
| `-DeprecatedAttr 0x561d4a159b58 <col:69> "" ""
|-CXXMethodDecl 0x561d4a159be8 <line:682:5, col:75> col:27 all_user_anno 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x561d4a159c88 <col:64> "" ""
|-CXXMethodDecl 0x561d4a159d18 <line:683:5, col:63> col:21 all_user_anno 'uint8_t *()' inline
| `-DeprecatedAttr 0x561d4a159db8 <col:52> "" ""
|-CXXMethodDecl 0x561d4a159e48 <line:684:5, col:78> col:28 all_user_anno_u 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x561d4a159ee8 <col:67> "" ""
|-CXXMethodDecl 0x561d4a159f78 <line:685:5, col:66> col:22 all_user_anno_u 'uint32_t *()' inline
| `-DeprecatedAttr 0x561d4a15a018 <col:55> "" ""
|-CXXMethodDecl 0x561d4a15a130 <line:686:5, col:69> col:20 user_anno_c 'uint8_t (int) const' inline
| |-ParmVarDecl 0x561d4a15a0a0 <col:32> col:35 'int'
| `-DeprecatedAttr 0x561d4a15a1d8 <col:58> "" ""
|-CXXMethodDecl 0x561d4a15a370 <line:687:5, col:73> col:17 set_user_anno_c 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x561d4a15a260 <col:33> col:36 'int'
| |-ParmVarDecl 0x561d4a15a2d8 <col:38> col:45 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x561d4a15a420 <col:62> "" ""
|-CXXMethodDecl 0x561d4a15a538 <line:688:5, col:69> col:20 user_anno_s 'int16_t (int) const' inline
| |-ParmVarDecl 0x561d4a15a4a8 <col:32> col:35 'int'
| `-DeprecatedAttr 0x561d4a15a5e0 <col:58> "" ""
|-CXXMethodDecl 0x561d4a15a778 <line:689:5, col:73> col:17 set_user_anno_s 'void (int, int16_t)' inline
| |-ParmVarDecl 0x561d4a15a668 <col:33> col:36 'int'
| |-ParmVarDecl 0x561d4a15a6e0 <col:38> col:45 'int16_t':'short'
| `-DeprecatedAttr 0x561d4a15a828 <col:62> "" ""
|-CXXMethodDecl 0x561d4a15a940 <line:690:5, col:71> col:21 user_anno_us 'uint16_t (int) const' inline
| |-ParmVarDecl 0x561d4a15a8b0 <col:34> col:37 'int'
| `-DeprecatedAttr 0x561d4a15a9e8 <col:60> "" ""
|-CXXMethodDecl 0x561d4a15ab80 <line:691:5, col:75> col:17 set_user_anno_us 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x561d4a15aa70 <col:34> col:37 'int'
| |-ParmVarDecl 0x561d4a15aae8 <col:39> col:47 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x561d4a15ac30 <col:64> "" ""
|-CXXMethodDecl 0x561d4a15ad48 <line:692:5, col:69> col:20 user_anno_i 'int32_t (int) const' inline
| |-ParmVarDecl 0x561d4a15acb8 <col:32> col:35 'int'
| `-DeprecatedAttr 0x561d4a15adf0 <col:58> "" ""
|-CXXMethodDecl 0x561d4a15af88 <line:693:5, col:73> col:17 set_user_anno_i 'void (int, int32_t)' inline
| |-ParmVarDecl 0x561d4a15ae78 <col:33> col:36 'int'
| |-ParmVarDecl 0x561d4a15aef0 <col:38> col:45 'int32_t':'int'
| `-DeprecatedAttr 0x561d4a15b038 <col:62> "" ""
|-CXXMethodDecl 0x561d4a15b150 <line:694:5, col:70> col:21 user_anno_u 'uint32_t (int) const' inline
| |-ParmVarDecl 0x561d4a15b0c0 <col:33> col:36 'int'
| `-DeprecatedAttr 0x561d4a15b1f8 <col:59> "" ""
|-CXXMethodDecl 0x561d4a15b390 <line:695:5, col:74> col:17 set_user_anno_u 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x561d4a15b280 <col:33> col:36 'int'
| |-ParmVarDecl 0x561d4a15b2f8 <col:38> col:46 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x561d4a15b440 <col:63> "" ""
|-AccessSpecDecl 0x561d4a15b4b0 <line:698:3, col:10> col:3 private
|-CXXRecordDecl 0x561d4a15b4d8 prev 0x561d4a1501a0 <line:702:5, line:711:5> line:702:11 referenced union Anno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x561d4a15b5d0 <col:5, col:11> col:11 implicit union Anno
| |-FieldDecl 0x561d4a15b6c0 <line:703:2, col:18> col:7 referenced c 'char [48]'
| |-FieldDecl 0x561d4a15b7e8 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
| |-FieldDecl 0x561d4a15b968 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
| |-FieldDecl 0x561d4a15bae8 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
| |-FieldDecl 0x561d4a15bc68 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
| |-CXXConstructorDecl 0x561d4a16cad8 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x561d4a16d348 <col:11>
| |-CXXDestructorDecl 0x561d4a16cbb0 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
| |-CXXConstructorDecl 0x561d4a16cce8 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x561d4a16cce8
| | `-ParmVarDecl 0x561d4a16cdf8 <col:11> col:11 'const Packet::Anno &'
| |-CXXConstructorDecl 0x561d4a16ce98 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x561d4a16ce98
| | `-ParmVarDecl 0x561d4a16cfa8 <col:11> col:11 'Packet::Anno &&'
| |-CXXMethodDecl 0x561d4a172778 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| | |-ParmVarDecl 0x561d4a172888 <col:11> col:11 'const Packet::Anno &'
| | `-CompoundStmt 0x561d4a172b08 <col:11>
| |   `-ReturnStmt 0x561d4a172af8 <col:11>
| |     `-UnaryOperator 0x561d4a172ae0 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x561d4a172ad0 <col:11> 'Packet::Anno *' this
| `-CXXMethodDecl 0x561d4a1728f8 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x561d4a1728f8
|   `-ParmVarDecl 0x561d4a172a08 <col:11> col:11 'Packet::Anno &&'
|-CXXRecordDecl 0x561d4a15bcd0 <line:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x561d4a15bde8 <col:5, col:12> col:12 implicit struct AllAnno
| |-FieldDecl 0x561d4a15be88 <line:717:2, col:7> col:7 cb 'Packet::Anno'
| |-FieldDecl 0x561d4a15bef0 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
| |-FieldDecl 0x561d4a15bf58 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
| |-FieldDecl 0x561d4a15bfc0 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
| |-FieldDecl 0x561d4a15c020 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
| |-FieldDecl 0x561d4a15c0e0 <line:722:2, col:34> col:7 timestamp 'char [8]'
| |-FieldDecl 0x561d4a15c140 <line:723:2, col:10> col:10 referenced next 'Packet *'
| |-FieldDecl 0x561d4a15c1a0 <line:724:2, col:10> col:10 referenced prev 'Packet *'
| |-CXXConstructorDecl 0x561d4a16c9e8 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| | |-CXXCtorInitializer Field 0x561d4a15be88 'cb' 'Packet::Anno'
| | | `-CXXConstructExpr 0x561d4a16d358 <col:12> 'Packet::Anno' 'void () noexcept'
| | `-CompoundStmt 0x561d4a16d3b0 <col:12>
| |-CXXConstructorDecl 0x561d4a16d018 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x561d4a16d018
| | `-ParmVarDecl 0x561d4a16d128 <col:12> col:12 'const Packet::AllAnno &'
| |-CXXConstructorDecl 0x561d4a16d1c8 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x561d4a16d1c8
| | `-ParmVarDecl 0x561d4a16d2d8 <col:12> col:12 'Packet::AllAnno &&'
| `-CXXDestructorDecl 0x561d4a171e60 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial
|-FieldDecl 0x561d4a15c218 <line:731:5, col:21> col:21 referenced _use_count 'atomic_uint32_t'
|-FieldDecl 0x561d4a15c278 <line:732:5, col:13> col:13 referenced _data_packet 'Packet *'
|-FieldDecl 0x561d4a15c2e0 <line:734:5, col:20> col:20 referenced _head 'unsigned char *'
|-FieldDecl 0x561d4a15c348 <line:735:5, col:20> col:20 referenced _data 'unsigned char *'
|-FieldDecl 0x561d4a15c3b0 <line:736:5, col:20> col:20 referenced _tail 'unsigned char *'
|-FieldDecl 0x561d4a15c418 <line:737:5, col:20> col:20 referenced _end 'unsigned char *'
|-FieldDecl 0x561d4a15c478 <line:741:5, col:13> col:13 referenced _aa 'Packet::AllAnno'
|-FieldDecl 0x561d4a15c4d8 <line:746:5, col:28> col:28 referenced _destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-FieldDecl 0x561d4a15c540 <line:747:5, col:11> col:11 referenced _destructor_argument 'void *'
|-CXXConstructorDecl 0x561d4a15c5c8 <line:751:5, line:755:5> line:751:12 used Packet 'void ()' inline
| |-CXXCtorInitializer Field 0x561d4a15c218 '_use_count' 'atomic_uint32_t'
| | `-CXXConstructExpr 0x561d4a16c980 <col:12> 'atomic_uint32_t' 'void () noexcept'
| |-CXXCtorInitializer Field 0x561d4a15c478 '_aa' 'Packet::AllAnno'
| | `-CXXConstructExpr 0x561d4a16d3c0 <col:12> 'Packet::AllAnno' 'void () noexcept'
| `-CompoundStmt 0x561d4a16d420 <col:21, line:755:5>
|-CXXConstructorDecl 0x561d4a15c768 <line:756:5, col:27> col:5 Packet 'void (const Packet &)'
| `-ParmVarDecl 0x561d4a15c6a8 <col:12, col:26> col:26 x 'const Packet &'
|-CXXDestructorDecl 0x561d4a15c860 <line:757:5, col:13> col:5 used ~Packet 'void () noexcept'
|-CXXMethodDecl 0x561d4a15ca48 <line:758:5, col:38> col:13 operator= 'Packet &(const Packet &)'
| `-ParmVarDecl 0x561d4a15c950 <col:23, col:37> col:37 x 'const Packet &'
|-CXXMethodDecl 0x561d4a15cd18 <line:761:5, col:74> col:10 alloc_data 'bool (uint32_t, uint32_t, uint32_t)'
| |-ParmVarDecl 0x561d4a15cb00 <col:21, col:30> col:30 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x561d4a15cb78 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x561d4a15cbf0 <col:57, col:66> col:66 tailroom 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x561d4a15cf38 <line:768:5, col:95> col:17 shift_header_annotations 'void (const unsigned char *, int32_t)' inline
| |-ParmVarDecl 0x561d4a15cde8 <col:42, col:63> col:63 old_head 'const unsigned char *'
| `-ParmVarDecl 0x561d4a15ce60 <col:73, col:81> col:81 extra_headroom 'int32_t':'int'
|-CXXMethodDecl 0x561d4a165558 <line:769:5, col:109> col:21 expensive_uniqueify 'WritablePacket *(int32_t, int32_t, bool)'
| |-ParmVarDecl 0x561d4a15cff8 <col:41, col:49> col:49 extra_headroom 'int32_t':'int'
| |-ParmVarDecl 0x561d4a15d070 <col:65, col:73> col:73 extra_tailroom 'int32_t':'int'
| `-ParmVarDecl 0x561d4a15d0e8 <col:89, col:94> col:94 free_on_failure 'bool'
|-CXXMethodDecl 0x561d4a1656b0 <line:770:5, col:51> col:21 used expensive_push 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x561d4a165620 <col:36, col:45> col:45 nbytes 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x561d4a1657f8 <line:771:5, col:50> col:21 used expensive_put 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x561d4a165768 <col:35, col:44> col:44 nbytes 'uint32_t':'unsigned int'
`-FriendDecl 0x561d4a1658f0 <line:773:5, col:18> col:12 'class WritablePacket':'WritablePacket'

Layout: <CGRecordLayout
  LLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  NonVirtualBaseLLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x561d4a25f330 <../elements/standard/simplequeue.hh:65:1, line:114:1> line:65:7 referenced class SimpleQueue definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-public 'Element'
|-public 'Storage'
|-CXXRecordDecl 0x561d4a25f4c8 <col:1, col:7> col:7 implicit referenced class SimpleQueue
|-AccessSpecDecl 0x561d4a25f558 <col:54, col:60> col:54 public
|-CXXConstructorDecl 0x561d4a25f5e0 <line:67:5, col:17> col:5 SimpleQueue 'void ()'
|-CXXMethodDecl 0x561d4a25f6e0 <line:69:5, col:40> col:9 drops 'int () const'
| `-CompoundStmt 0x561d4a262f58 <col:23, col:40>
|   `-ReturnStmt 0x561d4a262f48 <col:25, col:32>
|     `-ImplicitCastExpr 0x561d4a262f30 <col:32> 'int' <LValueToRValue>
|       `-MemberExpr 0x561d4a262f00 <col:32> 'const volatile int' lvalue ->_drops 0x561d4a261b98
|         `-CXXThisExpr 0x561d4a262ef0 <col:32> 'const SimpleQueue *' implicit this
|-CXXMethodDecl 0x561d4a25f7a8 <line:70:5, col:62> col:9 highwater_length 'int () const'
| `-CompoundStmt 0x561d4a262fd8 <col:34, col:62>
|   `-ReturnStmt 0x561d4a262fc8 <col:36, col:43>
|     `-ImplicitCastExpr 0x561d4a262fb0 <col:43> 'int' <LValueToRValue>
|       `-MemberExpr 0x561d4a262f80 <col:43> 'const int' lvalue ->_highwater_length 0x561d4a261c00
|         `-CXXThisExpr 0x561d4a262f70 <col:43> 'const SimpleQueue *' implicit this
|-CXXMethodDecl 0x561d4a25f918 <line:72:5, col:28> col:17 enq 'bool (Packet *)' inline
| `-ParmVarDecl 0x561d4a25f858 <col:21, col:27> col:28 'Packet *'
|-CXXMethodDecl 0x561d4a25fa60 <line:73:5, col:33> col:17 lifo_enq 'void (Packet *)' inline
| `-ParmVarDecl 0x561d4a25f9d0 <col:26, col:32> col:33 'Packet *'
|-CXXMethodDecl 0x561d4a25fb28 <line:74:5, col:24> col:20 deq 'Packet *()' inline
|-CXXMethodDecl 0x561d4a25fc70 <line:77:5, col:49> col:13 packet 'Packet *(int) const'
| |-ParmVarDecl 0x561d4a25fbe0 <col:20, col:24> col:24 used i 'int'
| `-CompoundStmt 0x561d4a2630c8 <col:33, col:49>
|   `-ReturnStmt 0x561d4a2630b8 <col:35, col:46>
|     `-ImplicitCastExpr 0x561d4a2630a0 <col:42, col:46> 'Packet *' <LValueToRValue>
|       `-ArraySubscriptExpr 0x561d4a263080 <col:42, col:46> 'Packet *volatile' lvalue
|         |-ImplicitCastExpr 0x561d4a263050 <col:42> 'Packet *volatile *' <LValueToRValue>
|         | `-MemberExpr 0x561d4a263000 <col:42> 'Packet *volatile *const' lvalue ->_q 0x561d4a261b30
|         |   `-CXXThisExpr 0x561d4a262ff0 <col:42> 'const SimpleQueue *' implicit this
|         `-ImplicitCastExpr 0x561d4a263068 <col:45> 'int' <LValueToRValue>
|           `-DeclRefExpr 0x561d4a263030 <col:45> 'int' lvalue ParmVar 0x561d4a25fbe0 'i' 'int'
|-CXXMethodDecl 0x561d4a25fd38 <line:78:5, col:16> col:10 reset 'void ()'
|-FunctionTemplateDecl 0x561d4a260018 <line:80:5, col:52> col:40 yank1
| |-TemplateTypeParmDecl 0x561d4a25fdd8 <col:15, col:24> col:24 referenced typename depth 0 index 0 Filter
| `-CXXMethodDecl 0x561d4a25ff78 <col:32, col:52> col:40 yank1 'Packet *(Filter)'
|   `-ParmVarDecl 0x561d4a25fe88 <col:46> col:52 'Filter'
|-FunctionTemplateDecl 0x561d4a260288 <line:81:5, col:57> col:40 yank1_peek
| |-TemplateTypeParmDecl 0x561d4a260078 <col:15, col:24> col:24 referenced typename depth 0 index 0 Filter
| `-CXXMethodDecl 0x561d4a2601e8 <col:32, col:57> col:40 yank1_peek 'Packet *(Filter)'
|   `-ParmVarDecl 0x561d4a260128 <col:51> col:57 'Filter'
|-FunctionTemplateDecl 0x561d4a2607d0 <line:82:5, col:67> col:36 yank
| |-TemplateTypeParmDecl 0x561d4a2602e8 <col:15, col:24> col:24 referenced typename depth 0 index 0 Filter
| `-CXXMethodDecl 0x561d4a260730 <col:32, col:67> col:36 yank 'int (Filter, Vector<Packet *> &)'
|   |-ParmVarDecl 0x561d4a260398 <col:41> col:47 'Filter'
|   `-ParmVarDecl 0x561d4a260610 <col:49, col:66> col:67 'Vector<Packet *> &'
|-CXXMethodDecl 0x561d4a260860 <line:84:5, col:60> col:17 class_name 'const char *() const'
| |-Overrides: [ 0x561d4a186fc8 Element::class_name 'const char *() const' ]
| `-CompoundStmt 0x561d4a263130 <col:36, col:60>
|   `-ReturnStmt 0x561d4a263120 <col:38, col:45>
|     `-ImplicitCastExpr 0x561d4a263108 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x561d4a2630e0 <col:45> 'const char [12]' lvalue "SimpleQueue"
|-CXXMethodDecl 0x561d4a260928 <line:85:5, col:58> col:17 port_count 'const char *() const'
| |-Overrides: [ 0x561d4a187090 Element::port_count 'const char *() const' ]
| `-CompoundStmt 0x561d4a263190 <col:36, col:58>
|   `-ReturnStmt 0x561d4a263180 <col:38, col:45>
|     `-ImplicitCastExpr 0x561d4a263168 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-DeclRefExpr 0x561d4a263148 <col:45> 'const char []' lvalue Var 0x561d4a1873c8 'PORTS_1_1X2' 'const char []'
|-CXXMethodDecl 0x561d4a2609f0 <line:86:5, col:53> col:17 processing 'const char *() const'
| |-Overrides: [ 0x561d4a187458 Element::processing 'const char *() const' ]
| `-CompoundStmt 0x561d4a263270 <col:36, col:53>
|   `-ReturnStmt 0x561d4a263260 <col:38, col:45>
|     `-ImplicitCastExpr 0x561d4a263248 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x561d4a263228 <col:45> 'const char [5]' lvalue "h/lh"
|-CXXMethodDecl 0x561d4a260b40 <line:87:5, col:27> col:11 cast 'void *(const char *)'
| |-Overrides: [ 0x561d4a187c80 Element::cast 'void *(const char *)' ]
| `-ParmVarDecl 0x561d4a260aa8 <col:16, col:26> col:27 'const char *'
|-CXXMethodDecl 0x561d4a260e20 <line:89:5, col:49> col:9 configure 'int (Vector<String> &, ErrorHandler *)'
| |-Overrides: [ 0x561d4a188860 Element::configure 'int (Vector<String> &, ErrorHandler *)' ]
| |-ParmVarDecl 0x561d4a260cd0 <col:19, col:33> col:34 'Vector<String> &'
| `-ParmVarDecl 0x561d4a260d48 <col:36, col:48> col:49 'ErrorHandler *'
|-CXXMethodDecl 0x561d4a260f78 <line:90:5, col:33> col:9 initialize 'int (ErrorHandler *)'
| |-Overrides: [ 0x561d4a188ab0 Element::initialize 'int (ErrorHandler *)' ]
| `-ParmVarDecl 0x561d4a260ee0 <col:20, col:32> col:33 'ErrorHandler *'
|-CXXMethodDecl 0x561d4a2610c0 <line:91:5, col:30> col:10 cleanup 'void (Element::CleanupStage)'
| |-Overrides: [ 0x561d4a1892c8 Element::cleanup 'void (Element::CleanupStage)' ]
| `-ParmVarDecl 0x561d4a261030 <col:18> col:30 'Element::CleanupStage'
|-CXXMethodDecl 0x561d4a261188 <line:92:5, col:54> col:10 can_live_reconfigure 'bool () const'
| |-Overrides: [ 0x561d4a18b2b0 Element::can_live_reconfigure 'bool () const' ]
| `-CompoundStmt 0x561d4a2632a8 <col:39, col:54>
|   `-ReturnStmt 0x561d4a263298 <col:41, col:48>
|     `-CXXBoolLiteralExpr 0x561d4a263288 <col:48> 'bool' true
|-CXXMethodDecl 0x561d4a261460 <line:93:5, col:56> col:9 live_reconfigure 'int (Vector<String> &, ErrorHandler *)'
| |-Overrides: [ 0x561d4a18b580 Element::live_reconfigure 'int (Vector<String> &, ErrorHandler *)' ]
| |-ParmVarDecl 0x561d4a261310 <col:26, col:40> col:41 'Vector<String> &'
| `-ParmVarDecl 0x561d4a261388 <col:43, col:55> col:56 'ErrorHandler *'
|-CXXMethodDecl 0x561d4a261630 <line:94:5, col:44> col:10 take_state 'void (Element *, ErrorHandler *)'
| |-Overrides: [ 0x561d4a188cb8 Element::take_state 'void (Element *, ErrorHandler *)' ]
| |-ParmVarDecl 0x561d4a261520 <col:21, col:28> col:29 'Element *'
| `-ParmVarDecl 0x561d4a261598 <col:31, col:43> col:44 'ErrorHandler *'
|-CXXMethodDecl 0x561d4a261700 <line:95:5, col:23> col:10 add_handlers 'void ()'
| `-Overrides: [ 0x561d4a188930 Element::add_handlers 'void ()' ]
|-CXXMethodDecl 0x561d4a2618c8 <line:97:5, col:32> col:10 push 'void (int, Packet *)'
| |-Overrides: [ 0x561d4a185e38 Element::push 'void (int, Packet *)' ]
| |-ParmVarDecl 0x561d4a2617b8 <col:15, col:19> col:19 port 'int'
| `-ParmVarDecl 0x561d4a261830 <col:25, col:31> col:32 'Packet *'
|-CXXMethodDecl 0x561d4a261a20 <line:98:5, col:26> col:13 pull 'Packet *(int)'
| |-Overrides: [ 0x561d4a185fc8 Element::pull 'Packet *(int)' ]
| `-ParmVarDecl 0x561d4a261990 <col:18, col:22> col:22 port 'int'
|-AccessSpecDecl 0x561d4a261ac8 <line:100:3, col:12> col:3 protected
|-FieldDecl 0x561d4a261b30 <line:102:5, col:24> col:24 referenced _q 'Packet *volatile *'
|-FieldDecl 0x561d4a261b98 <line:103:5, col:18> col:18 referenced _drops 'volatile int'
|-FieldDecl 0x561d4a261c00 <line:104:5, col:9> col:9 referenced _highwater_length 'int'
|-FriendDecl 0x561d4a261d68 <line:106:5, col:18> col:12 'class MixedQueue':'MixedQueue'
|-FriendDecl 0x561d4a261ec8 <line:107:5, col:18> col:12 'class TokenQueue':'TokenQueue'
|-FriendDecl 0x561d4a262028 <line:108:5, col:18> col:12 'class InOrderQueue':'InOrderQueue'
|-FriendDecl 0x561d4a262188 <line:109:5, col:18> col:12 'class ECNQueue':'ECNQueue'
|-CXXMethodDecl 0x561d4a2622f0 <line:111:5, col:47> col:19 read_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x561d4a2621d8 <col:32, col:39> col:40 'Element *'
| `-ParmVarDecl 0x561d4a262258 <col:42, col:46> col:47 'void *'
|-CXXMethodDecl 0x561d4a2625d0 <line:112:5, col:75> col:16 write_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x561d4a2623b0 <col:30, col:42> col:43 'const String &'
| |-ParmVarDecl 0x561d4a262428 <col:45, col:52> col:53 'Element *'
| |-ParmVarDecl 0x561d4a2624a8 <col:55, col:59> col:60 'void *'
| `-ParmVarDecl 0x561d4a262520 <col:62, col:74> col:75 'ErrorHandler *'
|-CXXConstructorDecl 0x561d4a2626b8 <line:65:7> col:7 implicit SimpleQueue 'void (const SimpleQueue &)' inline default_delete noexcept-unevaluated 0x561d4a2626b8
| `-ParmVarDecl 0x561d4a2627c8 <col:7> col:7 'const SimpleQueue &'
|-CXXConstructorDecl 0x561d4a262868 <col:7> col:7 implicit SimpleQueue 'void (SimpleQueue &&)' inline default_delete noexcept-unevaluated 0x561d4a262868
| `-ParmVarDecl 0x561d4a262978 <col:7> col:7 'SimpleQueue &&'
|-CXXMethodDecl 0x561d4a262a18 <col:7> col:7 implicit operator= 'SimpleQueue &(const SimpleQueue &)' inline default_delete noexcept-unevaluated 0x561d4a262a18
| `-ParmVarDecl 0x561d4a262b28 <col:7> col:7 'const SimpleQueue &'
|-CXXMethodDecl 0x561d4a262b98 <col:7> col:7 implicit operator= 'SimpleQueue &(SimpleQueue &&)' inline default_delete noexcept-unevaluated 0x561d4a262b98
| `-ParmVarDecl 0x561d4a262ca8 <col:7> col:7 'SimpleQueue &&'
`-CXXDestructorDecl 0x561d4a262d30 <col:7> col:7 implicit used ~SimpleQueue 'void () noexcept' inline default
  |-Overrides: [ 0x561d4a185b68 Element::~Element 'void () noexcept' ]
  `-CompoundStmt 0x561d4a276150 <col:7>

Layout: <CGRecordLayout
  LLVMType:%class.SimpleQueue = type { %class.Element.base, %class.Storage, %class.Packet**, i32, i32 }
  NonVirtualBaseLLVMType:%class.SimpleQueue = type { %class.Element.base, %class.Storage, %class.Packet**, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | union NotifierSignal::vmvalue
         0 |   class atomic_uint32_t * v1
         0 |   struct NotifierSignal::vmpair * vm
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class NotifierSignal
         0 |   union NotifierSignal::vmvalue _v
         0 |     class atomic_uint32_t * v1
         0 |     struct NotifierSignal::vmpair * vm
         8 |   uint32_t _mask
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping AST Record Layout
         0 | class Notifier
         0 |   (Notifier vtable pointer)
         8 |   class NotifierSignal _signal
         8 |     union NotifierSignal::vmvalue _v
         8 |       class atomic_uint32_t * v1
         8 |       struct NotifierSignal::vmpair * vm
        16 |     uint32_t _mask
        24 |   enum Notifier::SearchOp _search_op
           | [sizeof=32, dsize=28, align=8,
           |  nvsize=28, nvalign=8]

*** Dumping AST Record Layout
         0 | class ActiveNotifier
         0 |   class Notifier (primary base)
         0 |     (Notifier vtable pointer)
         8 |     class NotifierSignal _signal
         8 |       union NotifierSignal::vmvalue _v
         8 |         class atomic_uint32_t * v1
         8 |         struct NotifierSignal::vmpair * vm
        16 |       uint32_t _mask
        24 |     enum Notifier::SearchOp _search_op
        32 |   class Task * _listener1
        40 |   ActiveNotifier::task_or_signal_t * _listeners
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | class NotifierQueue
         0 |   class SimpleQueue (primary base)
         0 |     class Element (primary base)
         0 |       (Element vtable pointer)
         8 |       class Element::Port *[2] _ports
        24 |       class Element::Port [4] _inline_ports
        88 |       int [2] _nports
        96 |       class Router * _router
       104 |       int _eindex
       108 |     class Storage (base)
       108 |       Storage::index_type _capacity
       112 |       volatile Storage::index_type _head
       116 |       volatile Storage::index_type _tail
       120 |     class Packet *volatile * _q
       128 |     volatile int _drops
       132 |     int _highwater_length
       136 |   int _sleepiness
       144 |   class ActiveNotifier _empty_note
       144 |     class Notifier (primary base)
       144 |       (Notifier vtable pointer)
       152 |       class NotifierSignal _signal
       152 |         union NotifierSignal::vmvalue _v
       152 |           class atomic_uint32_t * v1
       152 |           struct NotifierSignal::vmpair * vm
       160 |         uint32_t _mask
       168 |       enum Notifier::SearchOp _search_op
       176 |     class Task * _listener1
       184 |     ActiveNotifier::task_or_signal_t * _listeners
           | [sizeof=192, dsize=192, align=8,
           |  nvsize=192, nvalign=8]

*** Dumping AST Record Layout
         0 | struct NotifierSignal::vmpair
         0 |   class atomic_uint32_t * value
         8 |   uint32_t mask
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x561d4a23bc38 <../dummy_inc/click/notifier.hh:50:5, line:53:5> line:50:12 referenced struct vmpair definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x561d4a23bd58 <col:5, col:12> col:12 implicit struct vmpair
|-FieldDecl 0x561d4a23bdf8 <line:51:2, col:19> col:19 referenced value 'atomic_uint32_t *'
|-FieldDecl 0x561d4a23be58 <line:52:2, col:11> col:11 referenced mask 'uint32_t':'unsigned int'
`-CXXDestructorDecl 0x561d4a245208 <line:50:12> col:12 implicit ~vmpair 'void ()' inline default trivial noexcept-unevaluated 0x561d4a245208

Layout: <CGRecordLayout
  LLVMType:%"struct.NotifierSignal::vmpair" = type { %class.atomic_uint32_t*, i32 }
  NonVirtualBaseLLVMType:%"struct.NotifierSignal::vmpair" = type { %class.atomic_uint32_t*, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x561d4a23bec0 <../dummy_inc/click/notifier.hh:54:5, line:57:5> line:54:11 referenced union vmvalue definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x561d4a23bfd8 <col:5, col:11> col:11 implicit union vmvalue
|-FieldDecl 0x561d4a23c078 <line:55:2, col:19> col:19 referenced v1 'atomic_uint32_t *'
|-FieldDecl 0x561d4a23c108 <line:56:2, col:10> col:10 referenced vm 'NotifierSignal::vmpair *'
|-CXXConstructorDecl 0x561d4a243da0 <line:54:11> col:11 implicit used vmvalue 'void () noexcept' inline default trivial
| `-CompoundStmt 0x561d4a2441d8 <col:11>
|-CXXConstructorDecl 0x561d4a243ea8 <col:11> col:11 implicit constexpr vmvalue 'void (const NotifierSignal::vmvalue &)' inline default trivial noexcept-unevaluated 0x561d4a243ea8
| `-ParmVarDecl 0x561d4a243fb8 <col:11> col:11 'const NotifierSignal::vmvalue &'
|-CXXConstructorDecl 0x561d4a244058 <col:11> col:11 implicit constexpr vmvalue 'void (NotifierSignal::vmvalue &&)' inline default trivial noexcept-unevaluated 0x561d4a244058
| `-ParmVarDecl 0x561d4a244168 <col:11> col:11 'NotifierSignal::vmvalue &&'
`-CXXDestructorDecl 0x561d4a244ed0 <col:11> col:11 implicit ~vmvalue 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"union.NotifierSignal::vmvalue" = type { %class.atomic_uint32_t* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x561d4a239b70 prev 0x561d4a185560 <../dummy_inc/click/notifier.hh:12:1, line:71:1> line:12:7 referenced class NotifierSignal definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x561d4a239c68 <col:1, col:7> col:7 implicit referenced class NotifierSignal
|-AccessSpecDecl 0x561d4a239cf8 <line:13:3, col:9> col:3 public
|-TypedefDecl 0x561d4a239e28 <line:14:5, col:61> col:36 referenced unspecified_bool_type 'bool (NotifierSignal::*)() const'
| `-MemberPointerType 0x561d4a239da0 'bool (NotifierSignal::*)() const'
|   |-RecordType 0x561d4a1855f0 'NotifierSignal'
|   | `-CXXRecord 0x561d4a239b70 'NotifierSignal'
|   `-ParenType 0x561d4a239d40 'bool () const' sugar
|     `-FunctionProtoType 0x561d49cc8ac0 'bool () const' const cdecl
|       `-BuiltinType 0x561d49c1f2f0 'bool'
|-CXXConstructorDecl 0x561d4a239eb8 <line:16:5, col:27> col:12 NotifierSignal 'void ()' inline
|-CXXConstructorDecl 0x561d4a23a0f8 <line:17:5, col:64> col:12 used NotifierSignal 'void (atomic_uint32_t *, uint32_t)' inline
| |-ParmVarDecl 0x561d4a239f70 <col:27, col:44> col:44 value 'atomic_uint32_t *'
| `-ParmVarDecl 0x561d4a239fe8 <col:51, col:60> col:60 mask 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x561d4a23a2a8 <line:18:5, col:50> col:12 used NotifierSignal 'void (const NotifierSignal &)' inline
| `-ParmVarDecl 0x561d4a23a1e8 <col:27, col:49> col:49 x 'const NotifierSignal &'
|-CXXDestructorDecl 0x561d4a23a3a0 <line:19:5, col:28> col:12 used ~NotifierSignal 'void () noexcept' inline
|-CXXMethodDecl 0x561d4a23a4c8 <line:21:5, col:46> col:34 idle_signal 'NotifierSignal ()' static inline
|-CXXMethodDecl 0x561d4a23a588 <line:22:5, col:46> col:34 busy_signal 'NotifierSignal ()' static inline
|-CXXMethodDecl 0x561d4a23a648 <line:23:5, col:53> col:34 overderived_signal 'NotifierSignal ()' static inline
|-CXXMethodDecl 0x561d4a23a708 <line:24:5, col:55> col:34 used uninitialized_signal 'NotifierSignal ()' static inline
|-CXXMethodDecl 0x561d4a23a7f8 <line:26:5, col:26> col:17 used active 'bool () const' inline
|-CXXConversionDecl 0x561d4a23a968 <line:27:5, col:45> col:12 operator bool (NotifierSignal::*)() const 'NotifierSignal::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x561d4a23aae8 <line:29:5, col:39> col:17 used set_active 'bool (bool)' inline
| `-ParmVarDecl 0x561d4a23aa28 <col:28, col:33> col:33 active 'bool'
|-CXXMethodDecl 0x561d4a23abb0 <line:31:5, col:24> col:17 idle 'bool () const' inline
|-CXXMethodDecl 0x561d4a23ac70 <line:32:5, col:24> col:17 busy 'bool () const' inline
|-CXXMethodDecl 0x561d4a23ad30 <line:33:5, col:31> col:17 overderived 'bool () const' inline
|-CXXMethodDecl 0x561d4a23adf0 <line:34:5, col:31> col:17 used initialized 'bool () const' inline
|-FriendDecl 0x561d4a23b0a8 <line:36:5, col:76> col:17
| `-FunctionDecl 0x561d4a23afe8 parent 0x561d49c1f278 <col:5, col:76> col:17 used operator== 'bool (const NotifierSignal &, const NotifierSignal &)'
|   |-ParmVarDecl 0x561d4a23aea0 <col:28, col:50> col:50 a 'const NotifierSignal &'
|   `-ParmVarDecl 0x561d4a23af18 <col:53, col:75> col:75 b 'const NotifierSignal &'
|-FriendDecl 0x561d4a23b2c8 <line:37:5, col:76> col:17
| `-FunctionDecl 0x561d4a23b208 parent 0x561d49c1f278 <col:5, col:76> col:17 operator!= 'bool (const NotifierSignal &, const NotifierSignal &)'
|   |-ParmVarDecl 0x561d4a23b0f8 <col:28, col:50> col:50 a 'const NotifierSignal &'
|   `-ParmVarDecl 0x561d4a23b170 <col:53, col:75> col:75 b 'const NotifierSignal &'
|-CXXMethodDecl 0x561d4a23b408 <line:39:5, col:54> col:21 operator= 'NotifierSignal &(const NotifierSignal &)'
| `-ParmVarDecl 0x561d4a23b318 <col:31, col:53> col:53 x 'const NotifierSignal &'
|-CXXMethodDecl 0x561d4a23b550 <line:40:5, col:55> col:21 used operator+= 'NotifierSignal &(const NotifierSignal &)'
| `-ParmVarDecl 0x561d4a23b4c0 <col:32, col:54> col:54 x 'const NotifierSignal &'
|-FriendDecl 0x561d4a23b818 <line:41:5, col:78> col:27
| `-FunctionDecl 0x561d4a23b758 parent 0x561d49c1f278 <col:5, col:78> col:27 operator+ 'NotifierSignal (NotifierSignal, const NotifierSignal &)'
|   |-ParmVarDecl 0x561d4a23b608 <col:37, col:52> col:52 a 'NotifierSignal' destroyed
|   `-ParmVarDecl 0x561d4a23b680 <col:55, col:77> col:77 b 'const NotifierSignal &'
|-CXXMethodDecl 0x561d4a23b928 <line:43:5, col:39> col:17 used swap 'void (NotifierSignal &)' inline
| `-ParmVarDecl 0x561d4a23b868 <col:22, col:38> col:38 x 'NotifierSignal &'
|-CXXMethodDecl 0x561d4a23baa8 <line:45:5, col:36> col:12 unparse 'String (Router *) const'
| `-ParmVarDecl 0x561d4a23b9e0 <col:20, col:28> col:28 router 'Router *'
|-CXXMethodDecl 0x561d4a23bb70 <line:47:5, col:35> col:17 static_initialize 'void ()' static
|-AccessSpecDecl 0x561d4a23bc10 <line:49:3, col:10> col:3 private
|-CXXRecordDecl 0x561d4a23bc38 <line:50:5, line:53:5> line:50:12 referenced struct vmpair definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x561d4a23bd58 <col:5, col:12> col:12 implicit struct vmpair
| |-FieldDecl 0x561d4a23bdf8 <line:51:2, col:19> col:19 referenced value 'atomic_uint32_t *'
| |-FieldDecl 0x561d4a23be58 <line:52:2, col:11> col:11 referenced mask 'uint32_t':'unsigned int'
| `-CXXDestructorDecl 0x561d4a245208 <line:50:12> col:12 implicit ~vmpair 'void ()' inline default trivial noexcept-unevaluated 0x561d4a245208
|-CXXRecordDecl 0x561d4a23bec0 <line:54:5, line:57:5> line:54:11 referenced union vmvalue definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x561d4a23bfd8 <col:5, col:11> col:11 implicit union vmvalue
| |-FieldDecl 0x561d4a23c078 <line:55:2, col:19> col:19 referenced v1 'atomic_uint32_t *'
| |-FieldDecl 0x561d4a23c108 <line:56:2, col:10> col:10 referenced vm 'NotifierSignal::vmpair *'
| |-CXXConstructorDecl 0x561d4a243da0 <line:54:11> col:11 implicit used vmvalue 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x561d4a2441d8 <col:11>
| |-CXXConstructorDecl 0x561d4a243ea8 <col:11> col:11 implicit constexpr vmvalue 'void (const NotifierSignal::vmvalue &)' inline default trivial noexcept-unevaluated 0x561d4a243ea8
| | `-ParmVarDecl 0x561d4a243fb8 <col:11> col:11 'const NotifierSignal::vmvalue &'
| |-CXXConstructorDecl 0x561d4a244058 <col:11> col:11 implicit constexpr vmvalue 'void (NotifierSignal::vmvalue &&)' inline default trivial noexcept-unevaluated 0x561d4a244058
| | `-ParmVarDecl 0x561d4a244168 <col:11> col:11 'NotifierSignal::vmvalue &&'
| `-CXXDestructorDecl 0x561d4a244ed0 <col:11> col:11 implicit ~vmvalue 'void () noexcept' inline default trivial
|-FieldDecl 0x561d4a23c180 <line:59:5, col:13> col:13 referenced _v 'NotifierSignal::vmvalue'
|-FieldDecl 0x561d4a23c1e0 <line:60:5, col:14> col:14 referenced _mask 'uint32_t':'unsigned int'
|-EnumDecl 0x561d4a23c230 <line:62:5, line:65:5> line:62:5
| |-EnumConstantDecl 0x561d4a23c330 <line:63:2, col:14> col:2 referenced true_mask 'NotifierSignal::(anonymous enum at ../dummy_inc/click/notifier.hh:62:5)'
| | `-ImplicitCastExpr 0x561d4a23c530 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561d4a23c310 <col:14> 'int' Int: 1
| |     `-IntegerLiteral 0x561d4a23c2f0 <col:14> 'int' 1
| |-EnumConstantDecl 0x561d4a23c3c0 <col:17, col:30> col:17 referenced false_mask 'NotifierSignal::(anonymous enum at ../dummy_inc/click/notifier.hh:62:5)'
| | `-ImplicitCastExpr 0x561d4a23c548 <col:30> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561d4a23c3a0 <col:30> 'int' Int: 2
| |     `-IntegerLiteral 0x561d4a23c380 <col:30> 'int' 2
| |-EnumConstantDecl 0x561d4a23c450 <col:33, col:52> col:33 referenced overderived_mask 'NotifierSignal::(anonymous enum at ../dummy_inc/click/notifier.hh:62:5)'
| | `-ImplicitCastExpr 0x561d4a23c560 <col:52> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561d4a23c430 <col:52> 'int' Int: 4
| |     `-IntegerLiteral 0x561d4a23c410 <col:52> 'int' 4
| `-EnumConstantDecl 0x561d4a23c4e0 <line:64:2, col:23> col:2 referenced uninitialized_mask 'NotifierSignal::(anonymous enum at ../dummy_inc/click/notifier.hh:62:5)'
|   `-ImplicitCastExpr 0x561d4a23c578 <col:23> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x561d4a23c4c0 <col:23> 'int' Int: 8
|       `-IntegerLiteral 0x561d4a23c4a0 <col:23> 'int' 8
|-VarDecl 0x561d4a23c5a0 <line:66:5, col:28> col:28 used static_value 'atomic_uint32_t' static
|-CXXMethodDecl 0x561d4a23c6a8 <line:68:5, col:48> col:10 used hard_assign_vm 'void (const NotifierSignal &)'
| `-ParmVarDecl 0x561d4a23c618 <col:25, col:47> col:47 x 'const NotifierSignal &'
|-CXXMethodDecl 0x561d4a23c870 <line:69:5, col:63> col:10 hard_derive_one 'void (atomic_uint32_t *, uint32_t)'
| |-ParmVarDecl 0x561d4a23c760 <col:26, col:43> col:43 value 'atomic_uint32_t *'
| `-ParmVarDecl 0x561d4a23c7d8 <col:50, col:59> col:59 mask 'uint32_t':'unsigned int'
`-CXXMethodDecl 0x561d4a23caa8 <line:70:5, col:61> col:17 used hard_equals 'bool (const NotifierSignal::vmpair *, const NotifierSignal::vmpair *)' static
  |-ParmVarDecl 0x561d4a23c958 <col:29, col:43> col:43 a 'const NotifierSignal::vmpair *'
  `-ParmVarDecl 0x561d4a23c9d0 <col:46, col:60> col:60 b 'const NotifierSignal::vmpair *'

Layout: <CGRecordLayout
  LLVMType:%class.NotifierSignal = type <{ %"union.NotifierSignal::vmvalue", i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.NotifierSignal.base = type <{ %"union.NotifierSignal::vmvalue", i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x561d4a23cb58 <../dummy_inc/click/notifier.hh:73:1, line:130:1> line:73:7 referenced class Notifier definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-CXXRecordDecl 0x561d4a23cc78 <col:1, col:7> col:7 implicit referenced class Notifier
|-AccessSpecDecl 0x561d4a23cd08 <col:18, col:24> col:18 public
|-EnumDecl 0x561d4a23cd30 <line:75:5, col:76> col:10 referenced SearchOp
| |-EnumConstantDecl 0x561d4a23ce30 <col:21, col:35> col:21 referenced SEARCH_STOP 'Notifier::SearchOp'
| | `-ImplicitCastExpr 0x561d4a23cf20 <col:35> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561d4a23ce10 <col:35> 'int' Int: 0
| |     `-IntegerLiteral 0x561d4a23cdf0 <col:35> 'int' 0
| |-EnumConstantDecl 0x561d4a23ce80 <col:38> col:38 SEARCH_CONTINUE 'Notifier::SearchOp'
| `-EnumConstantDecl 0x561d4a23ced0 <col:55> col:55 SEARCH_CONTINUE_WAKE 'Notifier::SearchOp'
|-TypedefDecl 0x561d4a23d168 <line:76:5, col:53> col:20 referenced callback_type 'void (*)(void *, Notifier *)'
| `-PointerType 0x561d4a23d100 'void (*)(void *, Notifier *)'
|   `-ParenType 0x561d4a23d0a0 'void (void *, Notifier *)' sugar
|     `-FunctionProtoType 0x561d4a23d060 'void (void *, Notifier *)' cdecl
|       |-BuiltinType 0x561d49c1f2d0 'void'
|       |-PointerType 0x561d49c1fad0 'void *'
|       | `-BuiltinType 0x561d49c1f2d0 'void'
|       `-PointerType 0x561d4a23cfc0 'Notifier *'
|         `-RecordType 0x561d4a23cbf0 'Notifier'
|           `-CXXRecord 0x561d4a23cb58 'Notifier'
|-CXXConstructorDecl 0x561d4a23d2a8 <line:78:5, col:46> col:12 Notifier 'void (Notifier::SearchOp)' inline
| `-ParmVarDecl 0x561d4a23d1d0 <col:21, col:35> col:30 op 'Notifier::SearchOp' cinit
|   `-DeclRefExpr 0x561d4a241fa8 <col:35> 'Notifier::SearchOp' EnumConstant 0x561d4a23ce30 'SEARCH_STOP' 'Notifier::SearchOp'
|-CXXConstructorDecl 0x561d4a23d4b8 <line:79:5, col:76> col:12 Notifier 'void (const NotifierSignal &, Notifier::SearchOp)' inline
| |-ParmVarDecl 0x561d4a23d368 <col:21, col:43> col:43 signal 'const NotifierSignal &'
| `-ParmVarDecl 0x561d4a23d3e0 <col:51, col:65> col:60 op 'Notifier::SearchOp' cinit
|   `-DeclRefExpr 0x561d4a241fc8 <col:65> 'Notifier::SearchOp' EnumConstant 0x561d4a23ce30 'SEARCH_STOP' 'Notifier::SearchOp'
|-CXXDestructorDecl 0x561d4a23d5b8 <line:80:5, col:23> col:13 ~Notifier 'void () noexcept' virtual
|-CXXMethodDecl 0x561d4a23d6e8 <line:83:5, line:85:5> line:83:17 initialized 'bool () const' inline
| `-CompoundStmt 0x561d4a242088 <col:37, line:85:5>
|   `-ReturnStmt 0x561d4a242078 <line:84:2, col:29>
|     `-CXXMemberCallExpr 0x561d4a242058 <col:9, col:29> 'bool'
|       `-MemberExpr 0x561d4a242028 <col:9, col:17> '<bound member function type>' .initialized 0x561d4a23adf0
|         `-MemberExpr 0x561d4a241ff8 <col:9> 'const NotifierSignal' lvalue ->_signal 0x561d4a2419c8
|           `-CXXThisExpr 0x561d4a241fe8 <col:9> 'const Notifier *' implicit this
|-CXXMethodDecl 0x561d4a23d8f0 <line:87:5, col:52> col:9 initialize 'int (const char *, Router *)'
| |-ParmVarDecl 0x561d4a23d7a0 <col:20, col:32> col:32 name 'const char *'
| `-ParmVarDecl 0x561d4a23d818 <col:38, col:46> col:46 router 'Router *'
|-CXXMethodDecl 0x561d4a23d9e8 <line:89:5, col:43> col:34 signal 'const NotifierSignal &() const' inline
|-CXXMethodDecl 0x561d4a23dad8 <line:90:5, col:33> col:21 search_op 'Notifier::SearchOp () const' inline
|-CXXMethodDecl 0x561d4a23db98 <line:92:5, col:26> col:17 active 'bool () const' inline
|-CXXMethodDecl 0x561d4a23dcd8 <line:94:5, col:39> col:17 used set_active 'bool (bool)' inline
| `-ParmVarDecl 0x561d4a23dc48 <col:28, col:33> col:33 active 'bool'
|-CXXMethodDecl 0x561d4a23dda0 <line:95:5, col:22> col:17 wake 'void ()' inline
|-CXXMethodDecl 0x561d4a23ebd0 <line:96:5, col:23> col:17 sleep 'void ()' inline
|-CXXMethodDecl 0x561d4a23ee40 <line:98:5, col:71> col:17 used add_activate_callback 'int (Notifier::callback_type, void *)' virtual
| |-ParmVarDecl 0x561d4a23eca0 <col:39, col:53> col:53 f 'Notifier::callback_type':'void (*)(void *, Notifier *)'
| `-ParmVarDecl 0x561d4a23ed20 <col:56, col:62> col:62 user_data 'void *'
|-CXXMethodDecl 0x561d4a23f098 <line:99:5, col:75> col:18 used remove_activate_callback 'void (Notifier::callback_type, void *)' virtual
| |-ParmVarDecl 0x561d4a23ef00 <col:43, col:57> col:57 f 'Notifier::callback_type':'void (*)(void *, Notifier *)'
| `-ParmVarDecl 0x561d4a23ef80 <col:60, col:66> col:66 user_data 'void *'
|-CXXMethodDecl 0x561d4a23f220 <line:100:5, col:39> col:16 add_listener 'int (Task *)' inline
| `-ParmVarDecl 0x561d4a23f158 <col:29, col:35> col:35 task 'Task *'
|-CXXMethodDecl 0x561d4a23f368 <line:101:5, col:43> col:17 remove_listener 'void (Task *)' inline
| `-ParmVarDecl 0x561d4a23f2d8 <col:33, col:39> col:39 task 'Task *'
|-CXXMethodDecl 0x561d4a23f4f0 <line:102:5, col:59> col:16 add_dependent_signal 'int (NotifierSignal *)' inline
| `-ParmVarDecl 0x561d4a23f420 <col:37, col:53> col:53 signal 'NotifierSignal *'
|-CXXMethodDecl 0x561d4a23f668 <line:103:5, col:63> col:17 remove_dependent_signal 'void (NotifierSignal *)' inline
| `-ParmVarDecl 0x561d4a23f5a8 <col:41, col:57> col:57 signal 'NotifierSignal *'
|-VarDecl 0x561d4a23f730 <line:105:5, col:38> col:23 EMPTY_NOTIFIER 'const char []' static
|-VarDecl 0x561d4a23f7b8 <line:106:5, col:37> col:23 FULL_NOTIFIER 'const char []' static
|-CXXMethodDecl 0x561d4a23f988 <line:108:5, col:76> col:34 used upstream_empty_signal 'NotifierSignal (Element *, int)' static inline
| |-ParmVarDecl 0x561d4a23f830 <col:56, col:65> col:65 e 'Element *'
| `-ParmVarDecl 0x561d4a23f8b0 <col:68, col:72> col:72 port 'int'
|-CXXMethodDecl 0x561d4a23fc28 <line:109:5, col:88> col:34 upstream_empty_signal 'NotifierSignal (Element *, int, Task *)' static inline
| |-ParmVarDecl 0x561d4a23fa48 <col:56, col:65> col:65 e 'Element *'
| |-ParmVarDecl 0x561d4a23fac8 <col:68, col:72> col:72 port 'int'
| `-ParmVarDecl 0x561d4a23fb40 <col:78, col:84> col:84 task 'Task *'
|-CXXMethodDecl 0x561d4a23fec8 <line:110:5, col:106> col:34 used upstream_empty_signal 'NotifierSignal (Element *, int, Notifier *)' static inline
| |-ParmVarDecl 0x561d4a23fcf0 <col:56, col:65> col:65 e 'Element *'
| |-ParmVarDecl 0x561d4a23fd70 <col:68, col:72> col:72 port 'int'
| `-ParmVarDecl 0x561d4a23fde8 <col:78, col:88> col:88 dependent_notifier 'Notifier *'
|-CXXMethodDecl 0x561d4a240248 <line:111:5, col:103> col:27 used upstream_empty_signal 'NotifierSignal (Element *, int, Notifier::callback_type, void *)' static
| |-ParmVarDecl 0x561d4a23ff90 <col:49, col:58> col:58 e 'Element *'
| |-ParmVarDecl 0x561d4a240010 <col:61, col:65> col:65 port 'int'
| |-ParmVarDecl 0x561d4a240088 <col:71, col:85> col:85 f 'Notifier::callback_type':'void (*)(void *, Notifier *)'
| `-ParmVarDecl 0x561d4a240108 <col:88, col:94> col:94 user_data 'void *'
|-CXXMethodDecl 0x561d4a240430 <line:113:5, col:77> col:34 used downstream_full_signal 'NotifierSignal (Element *, int)' static inline
| |-ParmVarDecl 0x561d4a240318 <col:57, col:66> col:66 e 'Element *'
| `-ParmVarDecl 0x561d4a240398 <col:69, col:73> col:73 port 'int'
|-CXXMethodDecl 0x561d4a240688 <line:114:5, col:89> col:34 downstream_full_signal 'NotifierSignal (Element *, int, Task *)' static inline
| |-ParmVarDecl 0x561d4a2404f0 <col:57, col:66> col:66 e 'Element *'
| |-ParmVarDecl 0x561d4a240570 <col:69, col:73> col:73 port 'int'
| `-ParmVarDecl 0x561d4a2405e8 <col:79, col:85> col:85 task 'Task *'
|-CXXMethodDecl 0x561d4a2408e8 <line:115:5, col:107> col:34 used downstream_full_signal 'NotifierSignal (Element *, int, Notifier *)' static inline
| |-ParmVarDecl 0x561d4a240750 <col:57, col:66> col:66 e 'Element *'
| |-ParmVarDecl 0x561d4a2407d0 <col:69, col:73> col:73 port 'int'
| `-ParmVarDecl 0x561d4a240848 <col:79, col:89> col:89 dependent_notifier 'Notifier *'
|-CXXMethodDecl 0x561d4a240bd0 <line:116:5, col:104> col:27 used downstream_full_signal 'NotifierSignal (Element *, int, Notifier::callback_type, void *)' static
| |-ParmVarDecl 0x561d4a2409b0 <col:50, col:59> col:59 e 'Element *'
| |-ParmVarDecl 0x561d4a240a30 <col:62, col:66> col:66 port 'int'
| |-ParmVarDecl 0x561d4a240aa8 <col:72, col:86> col:86 f 'Notifier::callback_type':'void (*)(void *, Notifier *)'
| `-ParmVarDecl 0x561d4a240b28 <col:89, col:95> col:95 user_data 'void *'
|-CXXMethodDecl 0x561d4a240e88 <line:118:5, col:109> col:34 upstream_empty_signal 'NotifierSignal (Element *, int, int)' static inline
| |-ParmVarDecl 0x561d4a240ca0 <col:56, col:65> col:65 e 'Element *'
| |-ParmVarDecl 0x561d4a240d20 <col:68, col:72> col:72 port 'int'
| |-ParmVarDecl 0x561d4a240da0 <col:78> col:81 'int'
| `-DeprecatedAttr 0x561d4a240f40 <col:98> "" ""
|-CXXMethodDecl 0x561d4a241228 <line:119:5, col:121> col:34 upstream_empty_signal 'NotifierSignal (Element *, int, int, Notifier *)' static inline
| |-ParmVarDecl 0x561d4a240fc0 <col:56, col:65> col:65 e 'Element *'
| |-ParmVarDecl 0x561d4a241040 <col:68, col:72> col:72 port 'int'
| |-ParmVarDecl 0x561d4a2410c0 <col:78> col:81 'int'
| |-ParmVarDecl 0x561d4a241138 <col:83, col:92> col:93 'Notifier *'
| `-DeprecatedAttr 0x561d4a2412e8 <col:110> "" ""
|-CXXMethodDecl 0x561d4a241508 <line:120:5, col:110> col:34 downstream_full_signal 'NotifierSignal (Element *, int, int)' static inline
| |-ParmVarDecl 0x561d4a241368 <col:57, col:66> col:66 e 'Element *'
| |-ParmVarDecl 0x561d4a2413e8 <col:69, col:73> col:73 port 'int'
| |-ParmVarDecl 0x561d4a241468 <col:79> col:82 'int'
| `-DeprecatedAttr 0x561d4a2415c0 <col:99> "" ""
|-CXXMethodDecl 0x561d4a241860 <line:121:5, col:122> col:34 downstream_full_signal 'NotifierSignal (Element *, int, int, Notifier *)' static inline
| |-ParmVarDecl 0x561d4a241640 <col:57, col:66> col:66 e 'Element *'
| |-ParmVarDecl 0x561d4a2416c0 <col:69, col:73> col:73 port 'int'
| |-ParmVarDecl 0x561d4a241740 <col:79> col:82 'int'
| |-ParmVarDecl 0x561d4a2417b8 <col:84, col:93> col:94 'Notifier *'
| `-DeprecatedAttr 0x561d4a241920 <col:111> "" ""
|-AccessSpecDecl 0x561d4a241990 <line:123:3, col:10> col:3 private
|-FieldDecl 0x561d4a2419c8 <line:125:5, col:20> col:20 referenced _signal 'NotifierSignal'
|-FieldDecl 0x561d4a241a28 <line:126:5, col:14> col:14 referenced _search_op 'Notifier::SearchOp'
|-CXXMethodDecl 0x561d4a241ba0 <line:128:5, col:61> col:17 used dependent_signal_callback 'void (void *, Notifier *)' static
| |-ParmVarDecl 0x561d4a241a90 <col:43, col:48> col:49 'void *'
| `-ParmVarDecl 0x561d4a241b08 <col:51, col:60> col:61 'Notifier *'
|-CXXConstructorDecl 0x561d4a241c78 <line:73:7> col:7 implicit Notifier 'void (const Notifier &)' inline default noexcept-unevaluated 0x561d4a241c78
| `-ParmVarDecl 0x561d4a241d88 <col:7> col:7 'const Notifier &'
`-CXXMethodDecl 0x561d4a241e28 <col:7> col:7 implicit operator= 'Notifier &(const Notifier &)' inline default noexcept-unevaluated 0x561d4a241e28
  `-ParmVarDecl 0x561d4a241f38 <col:7> col:7 'const Notifier &'

Layout: <CGRecordLayout
  LLVMType:%class.Notifier = type <{ i32 (...)**, %class.NotifierSignal, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Notifier.base = type <{ i32 (...)**, %class.NotifierSignal, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct TaskLink
         0 |   struct TaskLink * _prev
         8 |   struct TaskLink * _next
        16 |   unsigned int _pass
           | [sizeof=24, dsize=20, align=8,
           |  nvsize=20, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x561d4a1a21a0 <../dummy_inc/click/task.hh:31:1, line:47:1> line:31:8 referenced struct TaskLink definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x561d4a1a22b8 <col:1, col:8> col:8 implicit referenced struct TaskLink
|-FieldDecl 0x561d4a1a2388 <line:33:5, col:15> col:15 referenced _prev 'TaskLink *'
|-FieldDecl 0x561d4a1a23e8 <line:34:5, col:15> col:15 referenced _next 'TaskLink *'
|-FieldDecl 0x561d4a1a2450 <line:37:5, col:14> col:14 referenced _pass 'unsigned int'
|-CXXConstructorDecl 0x561d4a1a24d8 <line:39:5, line:46:5> line:39:5 used TaskLink 'void ()'
| `-CompoundStmt 0x561d4a1a2740 <col:16, line:46:5>
|   |-BinaryOperator 0x561d4a1a2688 <line:41:9, col:25> 'TaskLink *' lvalue '='
|   | |-MemberExpr 0x561d4a1a25a8 <col:9> 'TaskLink *' lvalue ->_prev 0x561d4a1a2388
|   | | `-CXXThisExpr 0x561d4a1a2598 <col:9> 'TaskLink *' implicit this
|   | `-ImplicitCastExpr 0x561d4a1a2670 <col:17, col:25> 'TaskLink *' <LValueToRValue>
|   |   `-BinaryOperator 0x561d4a1a2650 <col:17, col:25> 'TaskLink *' lvalue '='
|   |     |-MemberExpr 0x561d4a1a25e8 <col:17> 'TaskLink *' lvalue ->_next 0x561d4a1a23e8
|   |     | `-CXXThisExpr 0x561d4a1a25d8 <col:17> 'TaskLink *' implicit this
|   |     `-ImplicitCastExpr 0x561d4a1a2638 <col:25> 'TaskLink *' <NullToPointer>
|   |       `-IntegerLiteral 0x561d4a1a2618 <col:25> 'int' 0
|   `-BinaryOperator 0x561d4a1a2720 <line:44:9, col:17> 'unsigned int' lvalue '='
|     |-MemberExpr 0x561d4a1a26b8 <col:9> 'unsigned int' lvalue ->_pass 0x561d4a1a2450
|     | `-CXXThisExpr 0x561d4a1a26a8 <col:9> 'TaskLink *' implicit this
|     `-ImplicitCastExpr 0x561d4a1a2708 <col:17> 'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x561d4a1a26e8 <col:17> 'int' 0
|-CXXConstructorDecl 0x561d4a22c9c8 <line:31:8> col:8 implicit constexpr TaskLink 'void (const TaskLink &)' inline default trivial noexcept-unevaluated 0x561d4a22c9c8
| `-ParmVarDecl 0x561d4a22cad8 <col:8> col:8 'const TaskLink &'
|-CXXConstructorDecl 0x561d4a22cb78 <col:8> col:8 implicit constexpr TaskLink 'void (TaskLink &&)' inline default trivial noexcept-unevaluated 0x561d4a22cb78
| `-ParmVarDecl 0x561d4a22cc88 <col:8> col:8 'TaskLink &&'
|-CXXDestructorDecl 0x561d4a22ce78 <col:8> col:8 implicit ~TaskLink 'void ()' inline default trivial noexcept-unevaluated 0x561d4a22ce78
|-CXXMethodDecl 0x561d4a22d678 <col:8> col:8 implicit operator= 'TaskLink &(const TaskLink &)' inline default trivial noexcept-unevaluated 0x561d4a22d678
| `-ParmVarDecl 0x561d4a22d788 <col:8> col:8 'const TaskLink &'
`-CXXMethodDecl 0x561d4a22d7f8 <col:8> col:8 implicit operator= 'TaskLink &(TaskLink &&)' inline default trivial noexcept-unevaluated 0x561d4a22d7f8
  `-ParmVarDecl 0x561d4a22d908 <col:8> col:8 'TaskLink &&'

Layout: <CGRecordLayout
  LLVMType:%struct.TaskLink = type <{ %struct.TaskLink*, %struct.TaskLink*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%struct.TaskLink.base = type <{ %struct.TaskLink*, %struct.TaskLink*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9)
         0 |   int16_t home_thread_id
         2 |   uint8_t is_scheduled
         3 |   uint8_t is_strong_unscheduled
           | [sizeof=4, dsize=4, align=2,
           |  nvsize=4, nvalign=2]

*** Dumping AST Record Layout
         0 | union Task::Status
         0 |   struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9) 
         0 |     int16_t home_thread_id
         2 |     uint8_t is_scheduled
         3 |     uint8_t is_strong_unscheduled
         0 |   uint32_t status
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Task::Pending
         0 |   class Task * t
         0 |   uintptr_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Task
         0 |   struct TaskLink (base)
         0 |     struct TaskLink * _prev
         8 |     struct TaskLink * _next
        16 |     unsigned int _pass
        20 |   unsigned int _stride
        24 |   int _tickets
        28 |   union Task::Status _status
        28 |     struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9) 
        28 |       int16_t home_thread_id
        30 |       uint8_t is_scheduled
        31 |       uint8_t is_strong_unscheduled
        28 |     uint32_t status
        32 |   TaskCallback _hook
        40 |   void * _thunk
        48 |   class RouterThread * _thread
        56 |   class Element * _owner
        64 |   union Task::Pending _pending_nextptr
        64 |     class Task * t
        64 |     uintptr_t x
           | [sizeof=72, dsize=72, align=8,
           |  nvsize=72, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x561d4a1028d8 <../dummy_inc/click/task.hh:315:9, line:319:9> line:315:9 struct definition
|-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x561d4a102a08 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
|-FieldDecl 0x561d4a102a68 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
|-FieldDecl 0x561d4a102ac8 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
|-CXXConstructorDecl 0x561d4a233b88 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
|-CXXDestructorDecl 0x561d4a233c60 <col:9> col:9 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x561d4a233c60
|-CXXConstructorDecl 0x561d4a233f18 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x561d4a233f18
| `-ParmVarDecl 0x561d4a234028 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
`-CXXConstructorDecl 0x561d4a2340c8 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x561d4a2340c8
  `-ParmVarDecl 0x561d4a2341d8 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'

Layout: <CGRecordLayout
  LLVMType:%struct.anon = type { i16, i8, i8 }
  NonVirtualBaseLLVMType:%struct.anon = type { i16, i8, i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x561d4a102728 <../dummy_inc/click/task.hh:314:5, line:321:5> line:314:11 union Status definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x561d4a102848 <col:5, col:11> col:11 implicit union Status
|-CXXRecordDecl 0x561d4a1028d8 <line:315:9, line:319:9> line:315:9 struct definition
| |-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x561d4a102a08 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
| |-FieldDecl 0x561d4a102a68 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
| |-FieldDecl 0x561d4a102ac8 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
| |-CXXConstructorDecl 0x561d4a233b88 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
| |-CXXDestructorDecl 0x561d4a233c60 <col:9> col:9 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x561d4a233c60
| |-CXXConstructorDecl 0x561d4a233f18 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x561d4a233f18
| | `-ParmVarDecl 0x561d4a234028 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
| `-CXXConstructorDecl 0x561d4a2340c8 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x561d4a2340c8
|   `-ParmVarDecl 0x561d4a2341d8 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'
|-FieldDecl 0x561d4a102b88 <col:9> col:9 implicit referenced 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
|-IndirectFieldDecl 0x561d4a102be8 <line:316:21> col:21 implicit home_thread_id 'int16_t':'short'
| |-Field 0x561d4a102b88 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x561d4a102a08 'home_thread_id' 'int16_t':'short'
|-IndirectFieldDecl 0x561d4a102c40 <line:317:21> col:21 implicit is_scheduled 'uint8_t':'unsigned char'
| |-Field 0x561d4a102b88 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x561d4a102a68 'is_scheduled' 'uint8_t':'unsigned char'
|-IndirectFieldDecl 0x561d4a102c98 <line:318:21> col:21 implicit is_strong_unscheduled 'uint8_t':'unsigned char'
| |-Field 0x561d4a102b88 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x561d4a102ac8 'is_strong_unscheduled' 'uint8_t':'unsigned char'
|-FieldDecl 0x561d4a102cf0 <line:320:9, col:18> col:18 status 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x561d4a233a98 <line:314:11> col:11 implicit used Status 'void () noexcept' inline default trivial
| `-CompoundStmt 0x561d4a2343f8 <col:11>
|-CXXConstructorDecl 0x561d4a233d68 <col:11> col:11 implicit constexpr Status 'void (const Task::Status &)' inline default trivial noexcept-unevaluated 0x561d4a233d68
| `-ParmVarDecl 0x561d4a233e78 <col:11> col:11 'const Task::Status &'
`-CXXConstructorDecl 0x561d4a234278 <col:11> col:11 implicit constexpr Status 'void (Task::Status &&)' inline default trivial noexcept-unevaluated 0x561d4a234278
  `-ParmVarDecl 0x561d4a234388 <col:11> col:11 'Task::Status &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Task::Status" = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<16> >
         0 |   vector_memory<class sized_array_memory<16> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct TimerSet::heap_element>
         0 |   class vector_memory<class sized_array_memory<16> > vm_
         0 |     vector_memory<class sized_array_memory<16> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<8> >
         0 |   vector_memory<class sized_array_memory<8> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class Timer *>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class SimpleSpinlock (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class TimerSet
         0 |   class Timestamp _timer_expiry
         0 |     union Timestamp::rep_t _t
         0 |       int64_t x
         8 |   unsigned int _max_timer_stride
        12 |   unsigned int _timer_stride
        16 |   unsigned int _timer_count
        24 |   class Vector<struct TimerSet::heap_element> _timer_heap
        24 |     class vector_memory<class sized_array_memory<16> > vm_
        24 |       vector_memory<class sized_array_memory<16> >::type * l_
        32 |       vector_memory::size_type n_
        36 |       vector_memory::size_type capacity_
        40 |   class Vector<class Timer *> _timer_runchunk
        40 |     class vector_memory<class sized_array_memory<8> > vm_
        40 |       vector_memory<class sized_array_memory<8> >::type * l_
        48 |       vector_memory::size_type n_
        52 |       vector_memory::size_type capacity_
        56 |   class SimpleSpinlock _timer_lock (empty)
        64 |   class Timestamp _timer_check
        64 |     union Timestamp::rep_t _t
        64 |       int64_t x
        72 |   uint32_t _timer_check_reports
           | [sizeof=80, dsize=76, align=8,
           |  nvsize=76, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct pollfd>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<24> >
         0 |   vector_memory<class sized_array_memory<24> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct SelectSet::SelectorInfo>
         0 |   class vector_memory<class sized_array_memory<24> > vm_
         0 |     vector_memory<class sized_array_memory<24> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class SelectSet
         0 |   int [2] _wake_pipe
         8 |   volatile _Bool _wake_pipe_pending
        16 |   class Vector<struct pollfd> _pollfds
        16 |     class vector_memory<class sized_array_memory<8> > vm_
        16 |       vector_memory<class sized_array_memory<8> >::type * l_
        24 |       vector_memory::size_type n_
        28 |       vector_memory::size_type capacity_
        32 |   class Vector<struct SelectSet::SelectorInfo> _selinfo
        32 |     class vector_memory<class sized_array_memory<24> > vm_
        32 |       vector_memory<class sized_array_memory<24> >::type * l_
        40 |       vector_memory::size_type n_
        44 |       vector_memory::size_type capacity_
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | class Spinlock (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class SpinlockIRQ (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class RouterThread
         0 |   struct TaskLink _task_link
         0 |     struct TaskLink * _prev
         8 |     struct TaskLink * _next
        16 |     unsigned int _pass
        24 |   volatile _Bool _stop_flag
        32 |   class TimerSet _timers
        32 |     class Timestamp _timer_expiry
        32 |       union Timestamp::rep_t _t
        32 |         int64_t x
        40 |     unsigned int _max_timer_stride
        44 |     unsigned int _timer_stride
        48 |     unsigned int _timer_count
        56 |     class Vector<struct TimerSet::heap_element> _timer_heap
        56 |       class vector_memory<class sized_array_memory<16> > vm_
        56 |         vector_memory<class sized_array_memory<16> >::type * l_
        64 |         vector_memory::size_type n_
        68 |         vector_memory::size_type capacity_
        72 |     class Vector<class Timer *> _timer_runchunk
        72 |       class vector_memory<class sized_array_memory<8> > vm_
        72 |         vector_memory<class sized_array_memory<8> >::type * l_
        80 |         vector_memory::size_type n_
        84 |         vector_memory::size_type capacity_
        88 |     class SimpleSpinlock _timer_lock (empty)
        96 |     class Timestamp _timer_check
        96 |       union Timestamp::rep_t _t
        96 |         int64_t x
       104 |     uint32_t _timer_check_reports
       112 |   class SelectSet _selects
       112 |     int [2] _wake_pipe
       120 |     volatile _Bool _wake_pipe_pending
       128 |     class Vector<struct pollfd> _pollfds
       128 |       class vector_memory<class sized_array_memory<8> > vm_
       128 |         vector_memory<class sized_array_memory<8> >::type * l_
       136 |         vector_memory::size_type n_
       140 |         vector_memory::size_type capacity_
       144 |     class Vector<struct SelectSet::SelectorInfo> _selinfo
       144 |       class vector_memory<class sized_array_memory<24> > vm_
       144 |         vector_memory<class sized_array_memory<24> >::type * l_
       152 |         vector_memory::size_type n_
       156 |         vector_memory::size_type capacity_
       192 |   class Spinlock _task_lock (empty)
       196 |   class atomic_uint32_t _task_blocker
       196 |     uint32_t _val
       200 |   class atomic_uint32_t _task_blocker_waiting
       200 |     uint32_t _val
       208 |   union Task::Pending _pending_head
       208 |     class Task * t
       208 |     uintptr_t x
       216 |   class Task::Pending * _pending_tail
       224 |   class SpinlockIRQ _pending_lock (empty)
       256 |   class Master * _master
       264 |   int _id
       268 |   _Bool _driver_entered
       272 |   unsigned int _tasks_per_iter
       276 |   unsigned int _iters_per_os
           | [sizeof=320, dsize=280, align=64,
           |  nvsize=280, nvalign=64]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x561d4a11b230 prev 0x561d4a112070 <../dummy_inc/click/timestamp.hh:539:5, line:566:5> line:539:11 referenced union rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x561d4a11b328 <col:5, col:11> col:11 implicit union rep_t
|-FieldDecl 0x561d4a11b3c8 <line:541:9, col:17> col:17 referenced x 'int64_t':'long'
|-CXXConstructorDecl 0x561d4a122190 <line:539:11> col:11 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x561d4a122578 <col:11>
|-CXXConstructorDecl 0x561d4a122270 <col:11> col:11 implicit used constexpr rep_t 'void (const Timestamp::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x561d4a122358 <col:11> col:11 'const Timestamp::rep_t &'
| `-CompoundStmt 0x561d4a122cc0 <col:11>
|-CXXConstructorDecl 0x561d4a1223f8 <col:11> col:11 implicit used constexpr rep_t 'void (Timestamp::rep_t &&) noexcept' inline default trivial
| |-ParmVarDecl 0x561d4a122508 <col:11> col:11 'Timestamp::rep_t &&'
| `-CompoundStmt 0x561d4a124518 <col:11>
|-CXXDestructorDecl 0x561d4a123828 <col:11> col:11 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x561d49e29f98 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(const Timestamp::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x561d49e2a0a8 <col:11> col:11 'const Timestamp::rep_t &'
| `-CompoundStmt 0x561d49e2a970 <col:11>
|   `-ReturnStmt 0x561d49e2a960 <col:11>
|     `-UnaryOperator 0x561d49e2a948 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x561d49e2a938 <col:11> 'Timestamp::rep_t *' this
`-CXXMethodDecl 0x561d49e2a118 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(Timestamp::rep_t &&) noexcept' inline default trivial
  |-ParmVarDecl 0x561d49e2a228 <col:11> col:11 'Timestamp::rep_t &&'
  `-CompoundStmt 0x561d4a1bc920 <col:11>
    `-ReturnStmt 0x561d4a1bc910 <col:11>
      `-UnaryOperator 0x561d4a1bc8f8 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
        `-CXXThisExpr 0x561d4a1bc8e8 <col:11> 'Timestamp::rep_t *' this

Layout: <CGRecordLayout
  LLVMType:%"union.Timestamp::rep_t" = type { i64 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x561d4a111228 prev 0x561d4a110f38 <../dummy_inc/click/timestamp.hh:122:1, line:723:1> line:122:7 referenced class Timestamp definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x561d4a111320 <col:1, col:7> col:7 implicit referenced class Timestamp
|-AccessSpecDecl 0x561d4a1113b0 <col:19, col:25> col:19 public
|-TypedefDecl 0x561d4a1113e8 <line:125:5, col:21> col:21 referenced seconds_type 'int32_t':'int'
| `-TypedefType 0x561d49d761d0 'int32_t' sugar
|   |-Typedef 0x561d49c88268 'int32_t'
|   `-TypedefType 0x561d49c613b0 '__int32_t' sugar
|     |-Typedef 0x561d49c60fc8 '__int32_t'
|     `-BuiltinType 0x561d49c1f370 'int'
|-TypedefDecl 0x561d4a111450 <line:128:5, col:21> col:21 referenced value_type 'int64_t':'long'
| `-TypedefType 0x561d49d76390 'int64_t' sugar
|   |-Typedef 0x561d49c882d0 'int64_t'
|   `-TypedefType 0x561d49c614d0 '__int64_t' sugar
|     |-Typedef 0x561d49c610a8 '__int64_t'
|     `-BuiltinType 0x561d49c1f390 'long'
|-EnumDecl 0x561d4a1114a8 <line:133:5, line:140:5> line:133:5
| |-EnumConstantDecl 0x561d4a111620 <line:134:9, col:38> col:9 max_seconds 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:133:5)'
| | `-ConstantExpr 0x561d4a111600 <col:23, col:38> 'Timestamp::seconds_type':'int' Int: 2147483647
| |   `-CStyleCastExpr 0x561d4a1115d8 <col:23, col:38> 'Timestamp::seconds_type':'int' <NoOp>
| |     `-ImplicitCastExpr 0x561d4a1115c0 <col:38> 'Timestamp::seconds_type':'int' <IntegralCast> part_of_explicit_cast
| |       `-IntegerLiteral 0x561d4a111590 <col:38> 'unsigned int' 2147483647
| `-EnumConstantDecl 0x561d4a111718 <line:137:9, col:39> col:9 min_seconds 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:133:5)'
|   `-ConstantExpr 0x561d4a1116f8 <col:23, col:39> 'Timestamp::seconds_type':'int' Int: -2147483648
|     `-CStyleCastExpr 0x561d4a1116d0 <col:23, col:39> 'Timestamp::seconds_type':'int' <NoOp>
|       `-ImplicitCastExpr 0x561d4a1116b8 <col:38, col:39> 'Timestamp::seconds_type':'int' <IntegralCast> part_of_explicit_cast
|         `-UnaryOperator 0x561d4a111690 <col:38, col:39> 'unsigned int' prefix '-'
|           `-IntegerLiteral 0x561d4a111670 <col:39> 'unsigned int' 2147483648
|-EnumDecl 0x561d4a111768 <line:142:5, line:162:5> line:142:5
| |-EnumConstantDecl 0x561d4a111870 <line:143:9, col:24> col:9 referenced nsec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x561d4a111dc0 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561d4a111850 <col:24> 'int' Int: 1000000000
| |     `-IntegerLiteral 0x561d4a111830 <col:24> 'int' 1000000000
| |-EnumConstantDecl 0x561d4a111900 <line:144:9, col:25> col:9 nsec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x561d4a111dd8 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561d4a1118e0 <col:25> 'int' Int: 1000000
| |     `-IntegerLiteral 0x561d4a1118c0 <col:25> 'int' 1000000
| |-EnumConstantDecl 0x561d4a111990 <line:145:9, col:25> col:9 nsec_per_usec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x561d4a111df0 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561d4a111970 <col:25> 'int' Int: 1000
| |     `-IntegerLiteral 0x561d4a111950 <col:25> 'int' 1000
| |-EnumConstantDecl 0x561d4a111a20 <line:146:9, col:24> col:9 referenced usec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x561d4a111e08 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561d4a111a00 <col:24> 'int' Int: 1000000
| |     `-IntegerLiteral 0x561d4a1119e0 <col:24> 'int' 1000000
| |-EnumConstantDecl 0x561d4a111ab0 <line:147:9, col:25> col:9 usec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x561d4a111e20 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561d4a111a90 <col:25> 'int' Int: 1000
| |     `-IntegerLiteral 0x561d4a111a70 <col:25> 'int' 1000
| |-EnumConstantDecl 0x561d4a111b40 <line:148:9, col:24> col:9 referenced msec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x561d4a111e38 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561d4a111b20 <col:24> 'int' Int: 1000
| |     `-IntegerLiteral 0x561d4a111b00 <col:24> 'int' 1000
| |-EnumConstantDecl 0x561d4a111bd0 <line:150:9, col:26> col:9 referenced subsec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x561d4a111e50 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561d4a111bb0 <col:26> 'int' Int: 1000000000
| |     `-DeclRefExpr 0x561d4a111b90 <col:26> 'int' EnumConstant 0x561d4a111870 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| |-EnumConstantDecl 0x561d4a111ca0 <line:157:9, col:44> col:9 referenced subsec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x561d4a111e68 <col:27, col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561d4a111c80 <col:27, col:44> 'int' Int: 1000000
| |     `-BinaryOperator 0x561d4a111c60 <col:27, col:44> 'int' '/'
| |       |-DeclRefExpr 0x561d4a111c20 <col:27> 'int' EnumConstant 0x561d4a111bd0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| |       `-DeclRefExpr 0x561d4a111c40 <col:44> 'int' EnumConstant 0x561d4a111b40 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| `-EnumConstantDecl 0x561d4a111d70 <line:158:9, col:44> col:9 referenced subsec_per_usec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ImplicitCastExpr 0x561d4a111e80 <col:27, col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x561d4a111d50 <col:27, col:44> 'int' Int: 1000
|       `-BinaryOperator 0x561d4a111d30 <col:27, col:44> 'int' '/'
|         |-DeclRefExpr 0x561d4a111cf0 <col:27> 'int' EnumConstant 0x561d4a111bd0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|         `-DeclRefExpr 0x561d4a111d10 <col:44> 'int' EnumConstant 0x561d4a111a20 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-EnumDecl 0x561d4a111e98 <line:164:5, line:166:5> line:164:5
| `-EnumConstantDecl 0x561d4a111fa0 <line:165:9, col:19> col:9 NSUBSEC 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:164:5)'
|   `-ImplicitCastExpr 0x561d4a111ff0 <col:19> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x561d4a111f80 <col:19> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' Int: 1000000000
|       `-DeclRefExpr 0x561d4a111f60 <col:19> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x561d4a111bd0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-TypedefDecl 0x561d4a112018 <line:168:5, col:32> col:32 referenced uninitialized_t 'uninitialized_type'
| `-RecordType 0x561d49d75e00 'uninitialized_type'
|   `-CXXRecord 0x561d49d75d68 'uninitialized_type'
|-CXXRecordDecl 0x561d4a112070 <line:170:5, col:11> col:11 referenced union rep_t
|-CXXConstructorDecl 0x561d4a112180 <line:174:5, line:176:5> line:174:12 used Timestamp 'void ()' inline
| |-CXXCtorInitializer Field 0x561d4a11c378 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x561d4a122588 <col:12> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x561d4a1226a8 <col:24, line:176:5>
|   `-CXXMemberCallExpr 0x561d4a122660 <line:175:9, col:20> 'void'
|     |-MemberExpr 0x561d4a1225f0 <col:9> '<bound member function type>' ->assign 0x561d4a116dc8
|     | `-CXXThisExpr 0x561d4a1225e0 <col:9> 'Timestamp *' implicit this
|     |-IntegerLiteral 0x561d4a122620 <col:16> 'int' 0
|     `-ImplicitCastExpr 0x561d4a122690 <col:19> 'uint32_t':'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x561d4a122640 <col:19> 'int' 0
|-CXXConstructorDecl 0x561d4a1123c8 <line:187:5, line:189:5> line:187:21 Timestamp 'void (long, uint32_t)' inline
| |-ParmVarDecl 0x561d4a112240 <col:31, col:36> col:36 used sec 'long'
| |-ParmVarDecl 0x561d4a1122b8 <col:41, col:59> col:50 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x561d4a11dec0 <col:59> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x561d4a11dea0 <col:59> 'int' 0
| |-CXXCtorInitializer Field 0x561d4a11c378 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x561d4a1226c0 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x561d4a122810 <col:62, line:189:5>
|   `-CXXMemberCallExpr 0x561d4a122798 <line:188:9, col:27> 'void'
|     |-MemberExpr 0x561d4a122728 <col:9> '<bound member function type>' ->assign 0x561d4a116dc8
|     | `-CXXThisExpr 0x561d4a122718 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x561d4a1227e0 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x561d4a1227c8 <col:16> 'long' <LValueToRValue>
|     |   `-DeclRefExpr 0x561d4a122758 <col:16> 'long' lvalue ParmVar 0x561d4a112240 'sec' 'long'
|     `-ImplicitCastExpr 0x561d4a1227f8 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x561d4a122778 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x561d4a1122b8 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x561d4a112628 <line:191:5, line:193:5> line:191:21 used Timestamp 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x561d4a112498 <col:31, col:35> col:35 used sec 'int'
| |-ParmVarDecl 0x561d4a112510 <col:40, col:58> col:49 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x561d4a11def8 <col:58> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x561d4a11ded8 <col:58> 'int' 0
| |-CXXCtorInitializer Field 0x561d4a11c378 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x561d4a122828 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x561d4a122960 <col:61, line:193:5>
|   `-CXXMemberCallExpr 0x561d4a122900 <line:192:9, col:27> 'void'
|     |-MemberExpr 0x561d4a122890 <col:9> '<bound member function type>' ->assign 0x561d4a116dc8
|     | `-CXXThisExpr 0x561d4a122880 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x561d4a122930 <col:16> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x561d4a1228c0 <col:16> 'int' lvalue ParmVar 0x561d4a112498 'sec' 'int'
|     `-ImplicitCastExpr 0x561d4a122948 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x561d4a1228e0 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x561d4a112510 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x561d4a112888 <line:195:5, line:197:5> line:195:21 Timestamp 'void (unsigned long, uint32_t)' inline
| |-ParmVarDecl 0x561d4a1126f8 <col:31, col:45> col:45 used sec 'unsigned long'
| |-ParmVarDecl 0x561d4a112770 <col:50, col:68> col:59 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x561d4a11df30 <col:68> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x561d4a11df10 <col:68> 'int' 0
| |-CXXCtorInitializer Field 0x561d4a11c378 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x561d4a122978 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x561d4a122ac8 <col:71, line:197:5>
|   `-CXXMemberCallExpr 0x561d4a122a50 <line:196:9, col:27> 'void'
|     |-MemberExpr 0x561d4a1229e0 <col:9> '<bound member function type>' ->assign 0x561d4a116dc8
|     | `-CXXThisExpr 0x561d4a1229d0 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x561d4a122a98 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x561d4a122a80 <col:16> 'unsigned long' <LValueToRValue>
|     |   `-DeclRefExpr 0x561d4a122a10 <col:16> 'unsigned long' lvalue ParmVar 0x561d4a1126f8 'sec' 'unsigned long'
|     `-ImplicitCastExpr 0x561d4a122ab0 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x561d4a122a30 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x561d4a112770 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x561d4a113a20 <line:199:5, line:201:5> line:199:21 used Timestamp 'void (unsigned int, uint32_t)' inline
| |-ParmVarDecl 0x561d4a112958 <col:31, col:40> col:40 used sec 'unsigned int'
| |-ParmVarDecl 0x561d4a1129d0 <col:45, col:63> col:54 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x561d4a11df68 <col:63> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x561d4a11df48 <col:63> 'int' 0
| |-CXXCtorInitializer Field 0x561d4a11c378 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x561d4a122ae0 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x561d4a122c30 <col:66, line:201:5>
|   `-CXXMemberCallExpr 0x561d4a122bb8 <line:200:9, col:27> 'void'
|     |-MemberExpr 0x561d4a122b48 <col:9> '<bound member function type>' ->assign 0x561d4a116dc8
|     | `-CXXThisExpr 0x561d4a122b38 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x561d4a122c00 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x561d4a122be8 <col:16> 'unsigned int' <LValueToRValue>
|     |   `-DeclRefExpr 0x561d4a122b78 <col:16> 'unsigned int' lvalue ParmVar 0x561d4a112958 'sec' 'unsigned int'
|     `-ImplicitCastExpr 0x561d4a122c18 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x561d4a122b98 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x561d4a1129d0 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x561d4a113b80 <line:203:5, col:37> col:21 used Timestamp 'void (double)' inline
| `-ParmVarDecl 0x561d4a113af0 <col:31> col:37 'double'
|-CXXConstructorDecl 0x561d4a113d18 <line:206:5, col:46> col:12 Timestamp 'void (const struct timeval &)' inline
| `-ParmVarDecl 0x561d4a113c58 <col:22, col:44> col:44 tv 'const struct timeval &'
|-CXXConstructorDecl 0x561d4a113f48 <line:208:5, col:47> col:12 Timestamp 'void (const struct timespec &)' inline
| `-ParmVarDecl 0x561d4a113e50 <col:22, col:45> col:45 ts 'const struct timespec &'
|-CXXConstructorDecl 0x561d4a1140f8 <line:212:5, line:214:5> line:212:12 Timestamp 'void (const Timestamp::rep_t &)' inline
| |-ParmVarDecl 0x561d4a114038 <col:22, col:35> col:35 used rep 'const Timestamp::rep_t &'
| |-CXXCtorInitializer Field 0x561d4a11c378 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x561d4a122cd0 <line:213:11, col:17> 'Timestamp::rep_t' 'void (const Timestamp::rep_t &) noexcept'
| |   `-DeclRefExpr 0x561d4a122c48 <col:14> 'const Timestamp::rep_t' lvalue ParmVar 0x561d4a114038 'rep' 'const Timestamp::rep_t &'
| `-CompoundStmt 0x561d4a122d30 <col:19, line:214:5>
|-CXXConstructorDecl 0x561d4a1142c8 <line:217:5, line:219:5> line:217:12 used Timestamp 'void (const Timestamp::uninitialized_t &)' inline
| |-ParmVarDecl 0x561d4a114208 <col:22, col:45> col:45 used unused 'const Timestamp::uninitialized_t &'
| |-CXXCtorInitializer Field 0x561d4a11c378 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x561d4a122d40 <col:12> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x561d4a122df0 <col:53, line:219:5>
|   `-CStyleCastExpr 0x561d4a122dc8 <line:218:9, col:16> 'void' <ToVoid>
|     `-DeclRefExpr 0x561d4a122d98 <col:16> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue ParmVar 0x561d4a114208 'unused' 'const Timestamp::uninitialized_t &'
|-TypedefDecl 0x561d4a1144b8 <line:221:5, col:64> col:39 referenced unspecified_bool_type 'Timestamp::seconds_type (Timestamp::*)() const'
| `-MemberPointerType 0x561d4a114430 'Timestamp::seconds_type (Timestamp::*)() const'
|   |-RecordType 0x561d4a110fd0 'Timestamp'
|   | `-CXXRecord 0x561d4a111228 'Timestamp'
|   `-ParenType 0x561d4a1143d0 'Timestamp::seconds_type () const' sugar
|     `-FunctionProtoType 0x561d4a1143a0 'Timestamp::seconds_type () const' const cdecl
|       `-TypedefType 0x561d4a111570 'Timestamp::seconds_type' sugar
|         |-Typedef 0x561d4a1113e8 'seconds_type'
|         `-TypedefType 0x561d49d761d0 'int32_t' sugar
|           |-Typedef 0x561d49c88268 'int32_t'
|           `-TypedefType 0x561d49c613b0 '__int32_t' sugar
|             |-Typedef 0x561d49c60fc8 '__int32_t'
|             `-BuiltinType 0x561d49c1f370 'int'
|-CXXConversionDecl 0x561d4a1145f8 <line:222:5, col:45> col:12 used operator int (Timestamp::*)() const 'Timestamp::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x561d4a1146c8 <line:225:5, line:231:5> line:225:17 is_negative 'bool () const' inline
| `-CompoundStmt 0x561d4a122ef8 <col:37, line:231:5>
|   `-ReturnStmt 0x561d4a122ee8 <line:227:9, col:23>
|     `-BinaryOperator 0x561d4a122ec8 <col:16, col:23> 'bool' '<'
|       |-ImplicitCastExpr 0x561d4a122e98 <col:16, col:19> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x561d4a122e48 <col:16, col:19> 'const int64_t':'const long' lvalue .x 0x561d4a11b3c8
|       |   `-MemberExpr 0x561d4a122e18 <col:16> 'const Timestamp::rep_t' lvalue ->_t 0x561d4a11c378
|       |     `-CXXThisExpr 0x561d4a122e08 <col:16> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x561d4a122eb0 <col:23> 'long' <IntegralCast>
|         `-IntegerLiteral 0x561d4a122e78 <col:23> 'int' 0
|-CXXMethodDecl 0x561d4a114788 <line:233:5, col:31> col:25 used sec 'Timestamp::seconds_type () const' inline
|-CXXMethodDecl 0x561d4a114848 <line:234:5, col:30> col:21 used subsec 'uint32_t () const' inline
|-CXXMethodDecl 0x561d4a114908 <line:235:5, col:28> col:21 msec 'uint32_t () const' inline
|-CXXMethodDecl 0x561d4a1149c8 <line:236:5, col:28> col:21 used usec 'uint32_t () const' inline
|-CXXMethodDecl 0x561d4a114a88 <line:237:5, col:28> col:21 used nsec 'uint32_t () const' inline
|-CXXMethodDecl 0x561d4a114bf8 <line:239:5, col:41> col:17 set_sec 'void (Timestamp::seconds_type)' inline
| `-ParmVarDecl 0x561d4a114b38 <col:25, col:38> col:38 sec 'Timestamp::seconds_type':'int'
|-CXXMethodDecl 0x561d4a114d40 <line:240:5, col:43> col:17 set_subsec 'void (uint32_t)' inline
| `-ParmVarDecl 0x561d4a114cb0 <col:28, col:37> col:37 subsec 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x561d4a114e08 <line:242:5, col:65> col:25 msec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x561d4a114ea8 <col:54> "" ""
|-CXXMethodDecl 0x561d4a114f38 <line:243:5, col:65> col:25 usec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x561d4a114fd8 <col:54> "" ""
|-CXXMethodDecl 0x561d4a115068 <line:244:5, col:65> col:25 nsec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x561d4a115108 <col:54> "" ""
|-CXXMethodDecl 0x561d4a115208 <line:250:5, col:37> col:27 used timeval 'struct timeval () const' inline
|-CXXMethodDecl 0x561d4a1152d8 <line:251:5, col:42> col:27 timeval_ceil 'struct timeval () const' inline
|-CXXMethodDecl 0x561d4a115408 <line:257:5, col:39> col:28 timespec 'struct timespec () const' inline
|-CXXMethodDecl 0x561d4a115500 <line:262:5, col:31> col:19 used doubleval 'double () const' inline
|-CXXMethodDecl 0x561d4a115638 <line:265:5, line:271:5> line:265:23 msecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x561d4a123110 <col:39, line:271:5>
|   `-ReturnStmt 0x561d4a123100 <line:267:9, col:61>
|     `-CallExpr 0x561d4a1230a0 <col:16, col:61> 'Timestamp::value_type':'long'
|       |-ImplicitCastExpr 0x561d4a123088 <col:16> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x561d4a122f10 <col:16> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x561d4a11c6a8 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|       |-ImplicitCastExpr 0x561d4a1230d0 <col:26, col:29> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x561d4a122f70 <col:26, col:29> 'const int64_t':'const long' lvalue .x 0x561d4a11b3c8
|       |   `-MemberExpr 0x561d4a122f40 <col:26> 'const Timestamp::rep_t' lvalue ->_t 0x561d4a11c378
|       |     `-CXXThisExpr 0x561d4a122f30 <col:26> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x561d4a1230e8 <col:32, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|         `-BinaryOperator 0x561d4a123010 <col:32, col:49> 'int' '/'
|           |-ImplicitCastExpr 0x561d4a122fe0 <col:32> 'int' <IntegralCast>
|           | `-DeclRefExpr 0x561d4a122fa0 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x561d4a111bd0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|           `-ImplicitCastExpr 0x561d4a122ff8 <col:49> 'int' <IntegralCast>
|             `-DeclRefExpr 0x561d4a122fc0 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x561d4a111b40 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x561d4a1156f8 <line:273:5, line:279:5> line:273:23 usecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x561d4a1232d0 <col:39, line:279:5>
|   `-ReturnStmt 0x561d4a1232c0 <line:275:9, col:61>
|     `-CallExpr 0x561d4a123260 <col:16, col:61> 'Timestamp::value_type':'long'
|       |-ImplicitCastExpr 0x561d4a123248 <col:16> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x561d4a123128 <col:16> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x561d4a11c6a8 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|       |-ImplicitCastExpr 0x561d4a123290 <col:26, col:29> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x561d4a123188 <col:26, col:29> 'const int64_t':'const long' lvalue .x 0x561d4a11b3c8
|       |   `-MemberExpr 0x561d4a123158 <col:26> 'const Timestamp::rep_t' lvalue ->_t 0x561d4a11c378
|       |     `-CXXThisExpr 0x561d4a123148 <col:26> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x561d4a1232a8 <col:32, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|         `-BinaryOperator 0x561d4a123228 <col:32, col:49> 'int' '/'
|           |-ImplicitCastExpr 0x561d4a1231f8 <col:32> 'int' <IntegralCast>
|           | `-DeclRefExpr 0x561d4a1231b8 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x561d4a111bd0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|           `-ImplicitCastExpr 0x561d4a123210 <col:49> 'int' <IntegralCast>
|             `-DeclRefExpr 0x561d4a1231d8 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x561d4a111a20 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x561d4a1157b8 <line:281:5, line:287:5> line:281:23 nsecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x561d4a123468 <col:39, line:287:5>
|   `-ReturnStmt 0x561d4a123458 <line:283:9, col:53>
|     `-BinaryOperator 0x561d4a123438 <col:16, col:53> 'long' '*'
|       |-ImplicitCastExpr 0x561d4a123408 <col:16, col:19> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x561d4a123328 <col:16, col:19> 'const int64_t':'const long' lvalue .x 0x561d4a11b3c8
|       |   `-MemberExpr 0x561d4a1232f8 <col:16> 'const Timestamp::rep_t' lvalue ->_t 0x561d4a11c378
|       |     `-CXXThisExpr 0x561d4a1232e8 <col:16> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x561d4a123420 <col:23, col:53> 'long' <IntegralCast>
|         `-ParenExpr 0x561d4a1233e8 <col:23, col:53> 'int'
|           `-BinaryOperator 0x561d4a1233c8 <col:24, col:39> 'int' '/'
|             |-ImplicitCastExpr 0x561d4a123398 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x561d4a123358 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x561d4a111870 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x561d4a1233b0 <col:39> 'int' <IntegralCast>
|               `-DeclRefExpr 0x561d4a123378 <col:39> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x561d4a111bd0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x561d4a1158a8 <line:290:5, line:293:5> line:290:22 msec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x561d4a124700 <col:40, line:293:5>
|   |-DeclStmt 0x561d4a1235b0 <line:291:9, col:48>
|   | `-VarDecl 0x561d4a123490 <col:9, col:33> col:18 used x 'uint32_t':'unsigned int' cinit
|   |   `-BinaryOperator 0x561d4a123590 <col:22, col:33> 'unsigned int' '%'
|   |     |-CXXMemberCallExpr 0x561d4a123538 <col:22, col:29> 'uint32_t':'unsigned int'
|   |     | `-MemberExpr 0x561d4a123508 <col:22> '<bound member function type>' ->subsec 0x561d4a114848
|   |     |   `-CXXThisExpr 0x561d4a1234f8 <col:22> 'const Timestamp *' implicit this
|   |     `-ImplicitCastExpr 0x561d4a123578 <col:33> 'unsigned int' <IntegralCast>
|   |       `-DeclRefExpr 0x561d4a123558 <col:33> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x561d4a111ca0 'subsec_per_msec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x561d4a1246f0 <line:292:9, col:70>
|     `-ExprWithCleanups 0x561d4a1246d8 <col:16, col:70> 'Timestamp'
|       `-CXXConstructExpr 0x561d4a1246a8 <col:16, col:70> 'Timestamp' 'void (const Timestamp &) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x561d4a124690 <col:16, col:70> 'const Timestamp' lvalue
|           `-ParenExpr 0x561d4a124670 <col:16, col:70> 'const Timestamp'
|             `-ConditionalOperator 0x561d4a124640 <col:17, col:66> 'const Timestamp'
|               |-ImplicitCastExpr 0x561d4a1243d8 <col:17> 'bool' <IntegralToBoolean>
|               | `-ImplicitCastExpr 0x561d4a1243c0 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|               |   `-DeclRefExpr 0x561d4a1235c8 <col:17> 'uint32_t':'unsigned int' lvalue Var 0x561d4a123490 'x' 'uint32_t':'unsigned int'
|               |-CXXConstructExpr 0x561d4a1245e0 <col:21, col:61> 'const Timestamp' 'void (const Timestamp &) noexcept' elidable
|               | `-MaterializeTemporaryExpr 0x561d4a1245c8 <col:21, col:61> 'const Timestamp' lvalue
|               |   `-CXXConstructExpr 0x561d4a124598 <col:21, col:61> 'const Timestamp' 'void (Timestamp &&) noexcept' elidable
|               |     `-MaterializeTemporaryExpr 0x561d4a1243f0 <col:21, col:61> 'Timestamp' xvalue
|               |       `-CXXOperatorCallExpr 0x561d4a124360 <col:21, col:61> 'Timestamp'
|               |         |-ImplicitCastExpr 0x561d4a124348 <col:27> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|               |         | `-DeclRefExpr 0x561d4a1242f8 <col:27> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x561d4a111178 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|               |         |-CXXConstructExpr 0x561d4a124298 <col:21, col:22> 'Timestamp' 'void (const Timestamp &) noexcept'
|               |         | `-UnaryOperator 0x561d4a1235f8 <col:21, col:22> 'const Timestamp' lvalue prefix '*' cannot overflow
|               |         |   `-CXXThisExpr 0x561d4a1235e8 <col:22> 'const Timestamp *' this
|               |         `-MaterializeTemporaryExpr 0x561d4a1242e0 <col:29, col:61> 'const Timestamp' lvalue
|               |           `-ImplicitCastExpr 0x561d4a1242c8 <col:29, col:61> 'const Timestamp' <NoOp>
|               |             `-CXXTemporaryObjectExpr 0x561d4a123ab8 <col:29, col:61> 'Timestamp' 'void (int, uint32_t)'
|               |               |-IntegerLiteral 0x561d4a123620 <col:39> 'int' 0
|               |               `-BinaryOperator 0x561d4a1236b0 <col:42, col:60> 'unsigned int' '-'
|               |                 |-ImplicitCastExpr 0x561d4a123680 <col:42> 'unsigned int' <IntegralCast>
|               |                 | `-DeclRefExpr 0x561d4a123640 <col:42> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x561d4a111ca0 'subsec_per_msec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|               |                 `-ImplicitCastExpr 0x561d4a123698 <col:60> 'uint32_t':'unsigned int' <LValueToRValue>
|               |                   `-DeclRefExpr 0x561d4a123660 <col:60> 'uint32_t':'unsigned int' lvalue Var 0x561d4a123490 'x' 'uint32_t':'unsigned int'
|               `-CXXConstructExpr 0x561d4a124610 <col:65, col:66> 'const Timestamp' 'void (const Timestamp &) noexcept'
|                 `-UnaryOperator 0x561d4a1243a8 <col:65, col:66> 'const Timestamp' lvalue prefix '*' cannot overflow
|                   `-CXXThisExpr 0x561d4a124398 <col:66> 'const Timestamp *' this
|-CXXMethodDecl 0x561d4a115968 <line:295:5, line:302:5> line:295:22 usec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x561d4a124c58 <col:40, line:302:5>
|   |-DeclStmt 0x561d4a124850 <line:297:9, col:48>
|   | `-VarDecl 0x561d4a124730 <col:9, col:33> col:18 used x 'uint32_t':'unsigned int' cinit
|   |   `-BinaryOperator 0x561d4a124830 <col:22, col:33> 'unsigned int' '%'
|   |     |-CXXMemberCallExpr 0x561d4a1247d8 <col:22, col:29> 'uint32_t':'unsigned int'
|   |     | `-MemberExpr 0x561d4a1247a8 <col:22> '<bound member function type>' ->subsec 0x561d4a114848
|   |     |   `-CXXThisExpr 0x561d4a124798 <col:22> 'const Timestamp *' implicit this
|   |     `-ImplicitCastExpr 0x561d4a124818 <col:33> 'unsigned int' <IntegralCast>
|   |       `-DeclRefExpr 0x561d4a1247f8 <col:33> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x561d4a111d70 'subsec_per_usec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x561d4a124c48 <line:298:9, col:70>
|     `-ExprWithCleanups 0x561d4a124c30 <col:16, col:70> 'Timestamp'
|       `-CXXConstructExpr 0x561d4a124c00 <col:16, col:70> 'Timestamp' 'void (const Timestamp &) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x561d4a124be8 <col:16, col:70> 'const Timestamp' lvalue
|           `-ParenExpr 0x561d4a124bc8 <col:16, col:70> 'const Timestamp'
|             `-ConditionalOperator 0x561d4a124b98 <col:17, col:66> 'const Timestamp'
|               |-ImplicitCastExpr 0x561d4a124ac0 <col:17> 'bool' <IntegralToBoolean>
|               | `-ImplicitCastExpr 0x561d4a124aa8 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|               |   `-DeclRefExpr 0x561d4a124868 <col:17> 'uint32_t':'unsigned int' lvalue Var 0x561d4a124730 'x' 'uint32_t':'unsigned int'
|               |-CXXConstructExpr 0x561d4a124b38 <col:21, col:61> 'const Timestamp' 'void (const Timestamp &) noexcept' elidable
|               | `-MaterializeTemporaryExpr 0x561d4a124b20 <col:21, col:61> 'const Timestamp' lvalue
|               |   `-CXXConstructExpr 0x561d4a124af0 <col:21, col:61> 'const Timestamp' 'void (Timestamp &&) noexcept' elidable
|               |     `-MaterializeTemporaryExpr 0x561d4a124ad8 <col:21, col:61> 'Timestamp' xvalue
|               |       `-CXXOperatorCallExpr 0x561d4a124a48 <col:21, col:61> 'Timestamp'
|               |         |-ImplicitCastExpr 0x561d4a124a30 <col:27> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|               |         | `-DeclRefExpr 0x561d4a124a10 <col:27> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x561d4a111178 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|               |         |-CXXConstructExpr 0x561d4a1249b0 <col:21, col:22> 'Timestamp' 'void (const Timestamp &) noexcept'
|               |         | `-UnaryOperator 0x561d4a124898 <col:21, col:22> 'const Timestamp' lvalue prefix '*' cannot overflow
|               |         |   `-CXXThisExpr 0x561d4a124888 <col:22> 'const Timestamp *' this
|               |         `-MaterializeTemporaryExpr 0x561d4a1249f8 <col:29, col:61> 'const Timestamp' lvalue
|               |           `-ImplicitCastExpr 0x561d4a1249e0 <col:29, col:61> 'const Timestamp' <NoOp>
|               |             `-CXXTemporaryObjectExpr 0x561d4a124970 <col:29, col:61> 'Timestamp' 'void (int, uint32_t)'
|               |               |-IntegerLiteral 0x561d4a1248c0 <col:39> 'int' 0
|               |               `-BinaryOperator 0x561d4a124950 <col:42, col:60> 'unsigned int' '-'
|               |                 |-ImplicitCastExpr 0x561d4a124920 <col:42> 'unsigned int' <IntegralCast>
|               |                 | `-DeclRefExpr 0x561d4a1248e0 <col:42> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x561d4a111d70 'subsec_per_usec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|               |                 `-ImplicitCastExpr 0x561d4a124938 <col:60> 'uint32_t':'unsigned int' <LValueToRValue>
|               |                   `-DeclRefExpr 0x561d4a124900 <col:60> 'uint32_t':'unsigned int' lvalue Var 0x561d4a124730 'x' 'uint32_t':'unsigned int'
|               `-CXXConstructExpr 0x561d4a124b68 <col:65, col:66> 'const Timestamp' 'void (const Timestamp &) noexcept'
|                 `-UnaryOperator 0x561d4a124a90 <col:65, col:66> 'const Timestamp' lvalue prefix '*' cannot overflow
|                   `-CXXThisExpr 0x561d4a124a80 <col:66> 'const Timestamp *' this
|-CXXMethodDecl 0x561d4a115a28 <line:304:5, line:306:5> line:304:22 nsec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x561d4a124ce0 <col:40, line:306:5>
|   `-ReturnStmt 0x561d4a124cd0 <line:305:9, col:17>
|     `-CXXConstructExpr 0x561d4a124ca0 <col:16, col:17> 'Timestamp' 'void (const Timestamp &) noexcept'
|       `-UnaryOperator 0x561d4a124c88 <col:16, col:17> 'const Timestamp' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x561d4a124c78 <col:17> 'const Timestamp *' this
|-CXXMethodDecl 0x561d4a115bc8 <line:310:5, col:65> col:29 make_jiffies 'Timestamp (click_jiffies_t)' static inline
| `-ParmVarDecl 0x561d4a115ad8 <col:42, col:58> col:58 jiffies 'click_jiffies_t':'unsigned int'
|-CXXMethodDecl 0x561d4a115d98 <line:312:5, col:76> col:29 make_jiffies 'Timestamp (click_jiffies_difference_t)' static inline
| `-ParmVarDecl 0x561d4a115ca0 <col:42, col:69> col:69 jiffies 'click_jiffies_difference_t':'int'
|-CXXMethodDecl 0x561d4a115e88 <line:314:5, col:38> col:28 jiffies 'click_jiffies_t () const' inline
|-CXXMethodDecl 0x561d4a115ff8 <line:318:5, line:320:5> line:318:29 make_sec 'Timestamp (Timestamp::seconds_type)' static inline
| |-ParmVarDecl 0x561d4a115f38 <col:38, col:51> col:51 used sec 'Timestamp::seconds_type':'int'
| `-CompoundStmt 0x561d4a124e28 <col:56, line:320:5>
|   `-ReturnStmt 0x561d4a124e18 <line:319:9, col:32>
|     `-ExprWithCleanups 0x561d4a124e00 <col:16, col:32> 'Timestamp'
|       `-CXXConstructExpr 0x561d4a124dd0 <col:16, col:32> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x561d4a124db8 <col:16, col:32> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x561d4a124d78 <col:16, col:32> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x561d4a124d48 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x561d4a124d08 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x561d4a115f38 'sec' 'Timestamp::seconds_type':'int'
|             `-ImplicitCastExpr 0x561d4a124d60 <col:31> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x561d4a124d28 <col:31> 'int' 0
|-CXXMethodDecl 0x561d4a116238 <line:324:5, line:326:5> line:324:29 make_msec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x561d4a1160b0 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x561d4a116128 <col:57, col:66> col:66 used msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x561d4a124ff8 <col:72, line:326:5>
|   `-ReturnStmt 0x561d4a124fe8 <line:325:9, col:51>
|     `-ExprWithCleanups 0x561d4a124fd0 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x561d4a124fa0 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x561d4a124f88 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x561d4a124f48 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x561d4a124f30 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x561d4a124e50 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x561d4a1160b0 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x561d4a124ef0 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x561d4a124ed8 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x561d4a124e70 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x561d4a11ab20 'msec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x561d4a124f18 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x561d4a124e90 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x561d4a116128 'msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x561d4a1163e8 <line:328:5, line:337:5> line:328:29 used make_msec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x561d4a1162f8 <col:39, col:50> col:50 used msec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x561d4a1256c0 <col:56, line:337:5>
|   |-DeclStmt 0x561d4a1252f8 <line:329:9, col:51>
|   | `-VarDecl 0x561d4a125020 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x561d4a1252e0 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x561d4a1252b0 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x561d4a125298 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x561d4a125280 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x561d4a125250 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x561d4a125238 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x561d4a125220 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x561d4a125110 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x561d4a1254b0 <line:331:9, col:55> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x561d4a125360 <col:9, col:14> 'int64_t':'long' lvalue .x 0x561d4a11b3c8
|   | | `-MemberExpr 0x561d4a125330 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x561d4a11c378
|   | |   `-DeclRefExpr 0x561d4a125310 <col:9> 'Timestamp' lvalue Var 0x561d4a125020 't' 'Timestamp'
|   | `-BinaryOperator 0x561d4a125490 <col:18, col:55> 'long' '*'
|   |   |-ImplicitCastExpr 0x561d4a125460 <col:18> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x561d4a125390 <col:18> 'Timestamp::value_type':'long' lvalue ParmVar 0x561d4a1162f8 'msec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x561d4a125478 <col:25, col:55> 'long' <IntegralCast>
|   |     `-ParenExpr 0x561d4a125440 <col:25, col:55> 'int'
|   |       `-BinaryOperator 0x561d4a125420 <col:26, col:43> 'int' '/'
|   |         |-ImplicitCastExpr 0x561d4a1253f0 <col:26> 'int' <IntegralCast>
|   |         | `-DeclRefExpr 0x561d4a1253b0 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x561d4a111bd0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |         `-ImplicitCastExpr 0x561d4a125408 <col:43> 'int' <IntegralCast>
|   |           `-DeclRefExpr 0x561d4a1253d0 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x561d4a111b40 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x561d4a1256a8 <line:336:9, col:16>
|     `-CXXConstructExpr 0x561d4a125678 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x561d4a125660 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x561d4a125640 <col:16> 'Timestamp' lvalue Var 0x561d4a125020 't' 'Timestamp'
|-CXXMethodDecl 0x561d4a1165b0 <line:341:5, line:343:5> line:341:29 make_usec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x561d4a1164a0 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x561d4a116518 <col:57, col:66> col:66 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x561d4a125878 <col:72, line:343:5>
|   `-ReturnStmt 0x561d4a125868 <line:342:9, col:51>
|     `-ExprWithCleanups 0x561d4a125850 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x561d4a125820 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x561d4a125808 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x561d4a1257c8 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x561d4a1257b0 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x561d4a1256f8 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x561d4a1164a0 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x561d4a125770 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x561d4a125758 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x561d4a125718 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x561d4a11ac68 'usec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x561d4a125798 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x561d4a125738 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x561d4a116518 'usec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x561d4a116700 <line:345:5, line:354:5> line:345:29 used make_usec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x561d4a116670 <col:39, col:50> col:50 used usec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x561d4a125cc0 <col:56, line:354:5>
|   |-DeclStmt 0x561d4a125a68 <line:346:9, col:51>
|   | `-VarDecl 0x561d4a1258a0 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x561d4a125a50 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x561d4a125a20 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x561d4a125a08 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x561d4a1259f0 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x561d4a1259c0 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x561d4a1259a8 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x561d4a125990 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x561d4a125960 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x561d4a125c20 <line:348:9, col:55> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x561d4a125ad0 <col:9, col:14> 'int64_t':'long' lvalue .x 0x561d4a11b3c8
|   | | `-MemberExpr 0x561d4a125aa0 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x561d4a11c378
|   | |   `-DeclRefExpr 0x561d4a125a80 <col:9> 'Timestamp' lvalue Var 0x561d4a1258a0 't' 'Timestamp'
|   | `-BinaryOperator 0x561d4a125c00 <col:18, col:55> 'long' '*'
|   |   |-ImplicitCastExpr 0x561d4a125bd0 <col:18> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x561d4a125b00 <col:18> 'Timestamp::value_type':'long' lvalue ParmVar 0x561d4a116670 'usec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x561d4a125be8 <col:25, col:55> 'long' <IntegralCast>
|   |     `-ParenExpr 0x561d4a125bb0 <col:25, col:55> 'int'
|   |       `-BinaryOperator 0x561d4a125b90 <col:26, col:43> 'int' '/'
|   |         |-ImplicitCastExpr 0x561d4a125b60 <col:26> 'int' <IntegralCast>
|   |         | `-DeclRefExpr 0x561d4a125b20 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x561d4a111bd0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |         `-ImplicitCastExpr 0x561d4a125b78 <col:43> 'int' <IntegralCast>
|   |           `-DeclRefExpr 0x561d4a125b40 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x561d4a111a20 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x561d4a125ca8 <line:353:9, col:16>
|     `-CXXConstructExpr 0x561d4a125c78 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x561d4a125c60 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x561d4a125c40 <col:16> 'Timestamp' lvalue Var 0x561d4a1258a0 't' 'Timestamp'
|-CXXMethodDecl 0x561d4a1168c8 <line:358:5, line:360:5> line:358:29 make_nsec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x561d4a1167b8 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x561d4a116830 <col:57, col:66> col:66 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x561d4a125e78 <col:72, line:360:5>
|   `-ReturnStmt 0x561d4a125e68 <line:359:9, col:51>
|     `-ExprWithCleanups 0x561d4a125e50 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x561d4a125e20 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x561d4a125e08 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x561d4a125dc8 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x561d4a125db0 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x561d4a125cf8 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x561d4a1167b8 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x561d4a125d70 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x561d4a125d58 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x561d4a125d18 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x561d4a11adb0 'nsec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x561d4a125d98 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x561d4a125d38 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x561d4a116830 'nsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x561d4a116a18 <line:362:5, line:371:5> line:362:29 make_nsec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x561d4a116988 <col:39, col:50> col:50 used nsec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x561d4a1327e8 <col:56, line:371:5>
|   |-DeclStmt 0x561d4a126068 <line:363:9, col:51>
|   | `-VarDecl 0x561d4a125ea0 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x561d4a126050 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x561d4a126020 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x561d4a126008 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x561d4a125ff0 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x561d4a125fc0 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x561d4a125fa8 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x561d4a125f90 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x561d4a125f60 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x561d4a132748 <line:365:9, col:63> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x561d4a1260d0 <col:9, col:14> 'int64_t':'long' lvalue .x 0x561d4a11b3c8
|   | | `-MemberExpr 0x561d4a1260a0 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x561d4a11c378
|   | |   `-DeclRefExpr 0x561d4a126080 <col:9> 'Timestamp' lvalue Var 0x561d4a125ea0 't' 'Timestamp'
|   | `-CallExpr 0x561d4a1326e8 <col:18, col:63> 'Timestamp::value_type':'long'
|   |   |-ImplicitCastExpr 0x561d4a1326d0 <col:18> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x561d4a126100 <col:18> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x561d4a11c6a8 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|   |   |-ImplicitCastExpr 0x561d4a132718 <col:28> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x561d4a126120 <col:28> 'Timestamp::value_type':'long' lvalue ParmVar 0x561d4a116988 'nsec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x561d4a132730 <col:34, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|   |     `-BinaryOperator 0x561d4a1326b0 <col:34, col:49> 'int' '/'
|   |       |-ImplicitCastExpr 0x561d4a132680 <col:34> 'int' <IntegralCast>
|   |       | `-DeclRefExpr 0x561d4a126140 <col:34> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x561d4a111870 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |       `-ImplicitCastExpr 0x561d4a132698 <col:49> 'int' <IntegralCast>
|   |         `-DeclRefExpr 0x561d4a126160 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x561d4a111bd0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x561d4a1327d0 <line:370:9, col:16>
|     `-CXXConstructExpr 0x561d4a1327a0 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x561d4a132788 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x561d4a132768 <col:16> 'Timestamp' lvalue Var 0x561d4a125ea0 't' 'Timestamp'
|-CXXMethodDecl 0x561d4a116b08 <line:375:5, line:377:5> line:375:29 epsilon 'Timestamp ()' static inline
| `-CompoundStmt 0x561d4a132928 <col:39, line:377:5>
|   `-ReturnStmt 0x561d4a132918 <line:376:9, col:30>
|     `-ExprWithCleanups 0x561d4a132900 <col:16, col:30> 'Timestamp'
|       `-CXXConstructExpr 0x561d4a1328d0 <col:16, col:30> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x561d4a1328b8 <col:16, col:30> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x561d4a132878 <col:16, col:30> 'Timestamp' 'void (int, uint32_t)'
|             |-IntegerLiteral 0x561d4a132820 <col:26> 'int' 0
|             `-ImplicitCastExpr 0x561d4a132860 <col:29> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x561d4a132840 <col:29> 'int' 1
|-CXXMethodDecl 0x561d4a116bc8 <line:380:5, line:382:5> line:380:17 clear 'void ()' inline
| `-CompoundStmt 0x561d4a132a08 <col:25, line:382:5>
|   `-CXXMemberCallExpr 0x561d4a1329c0 <line:381:9, col:20> 'void'
|     |-MemberExpr 0x561d4a132950 <col:9> '<bound member function type>' ->assign 0x561d4a116dc8
|     | `-CXXThisExpr 0x561d4a132940 <col:9> 'Timestamp *' implicit this
|     |-IntegerLiteral 0x561d4a132980 <col:16> 'int' 0
|     `-ImplicitCastExpr 0x561d4a1329f0 <col:19> 'uint32_t':'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x561d4a1329a0 <col:19> 'int' 0
|-CXXMethodDecl 0x561d4a116dc8 <line:388:5, line:395:5> line:388:17 used assign 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x561d4a116c78 <col:24, col:37> col:37 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x561d4a116cf0 <col:42, col:60> col:51 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x561d4a11dfa0 <col:60> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x561d4a11df80 <col:60> 'int' 0
| `-CompoundStmt 0x561d4a132c00 <col:63, line:395:5>
|   `-BinaryOperator 0x561d4a132be0 <line:390:9, col:49> 'int64_t':'long' lvalue '='
|     |-MemberExpr 0x561d4a132a60 <col:9, col:12> 'int64_t':'long' lvalue .x 0x561d4a11b3c8
|     | `-MemberExpr 0x561d4a132a30 <col:9> 'Timestamp::rep_t' lvalue ->_t 0x561d4a11c378
|     |   `-CXXThisExpr 0x561d4a132a20 <col:9> 'Timestamp *' implicit this
|     `-BinaryOperator 0x561d4a132bc0 <col:16, col:49> 'long' '+'
|       |-BinaryOperator 0x561d4a132b50 <col:16, col:32> 'long' '*'
|       | |-CStyleCastExpr 0x561d4a132af0 <col:16, col:26> 'int64_t':'long' <NoOp>
|       | | `-ImplicitCastExpr 0x561d4a132ad8 <col:26> 'int64_t':'long' <IntegralCast> part_of_explicit_cast
|       | |   `-ImplicitCastExpr 0x561d4a132ac0 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue> part_of_explicit_cast
|       | |     `-DeclRefExpr 0x561d4a132a90 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x561d4a116c78 'sec' 'Timestamp::seconds_type':'int'
|       | `-ImplicitCastExpr 0x561d4a132b38 <col:32> 'long' <IntegralCast>
|       |   `-DeclRefExpr 0x561d4a132b18 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x561d4a111bd0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|       `-ImplicitCastExpr 0x561d4a132ba8 <col:49> 'long' <IntegralCast>
|         `-ImplicitCastExpr 0x561d4a132b90 <col:49> 'uint32_t':'unsigned int' <LValueToRValue>
|           `-DeclRefExpr 0x561d4a132b70 <col:49> 'uint32_t':'unsigned int' lvalue ParmVar 0x561d4a116cf0 'subsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x561d4a116f98 <line:397:5, line:399:5> line:397:17 used assign_usec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x561d4a116e88 <col:29, col:42> col:42 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x561d4a116f00 <col:47, col:56> col:56 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x561d4a132d58 <col:62, line:399:5>
|   `-CXXMemberCallExpr 0x561d4a132d10 <line:398:9, col:41> 'void'
|     |-MemberExpr 0x561d4a132c28 <col:9> '<bound member function type>' ->assign 0x561d4a116dc8
|     | `-CXXThisExpr 0x561d4a132c18 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x561d4a132d40 <col:16> 'Timestamp::seconds_type':'int' <LValueToRValue>
|     | `-DeclRefExpr 0x561d4a132c58 <col:16> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x561d4a116e88 'sec' 'Timestamp::seconds_type':'int'
|     `-CallExpr 0x561d4a132cd0 <col:21, col:40> 'uint32_t':'unsigned int'
|       |-ImplicitCastExpr 0x561d4a132cb8 <col:21> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x561d4a132c78 <col:21> 'uint32_t (uint32_t)' lvalue CXXMethod 0x561d4a11ac68 'usec_to_subsec' 'uint32_t (uint32_t)'
|       `-ImplicitCastExpr 0x561d4a132cf8 <col:36> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x561d4a132c98 <col:36> 'uint32_t':'unsigned int' lvalue ParmVar 0x561d4a116f00 'usec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x561d4a117168 <line:401:5, line:403:5> line:401:17 used assign_nsec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x561d4a117058 <col:29, col:42> col:42 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x561d4a1170d0 <col:47, col:56> col:56 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x561d4a132eb0 <col:62, line:403:5>
|   `-CXXMemberCallExpr 0x561d4a132e68 <line:402:9, col:41> 'void'
|     |-MemberExpr 0x561d4a132d80 <col:9> '<bound member function type>' ->assign 0x561d4a116dc8
|     | `-CXXThisExpr 0x561d4a132d70 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x561d4a132e98 <col:16> 'Timestamp::seconds_type':'int' <LValueToRValue>
|     | `-DeclRefExpr 0x561d4a132db0 <col:16> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x561d4a117058 'sec' 'Timestamp::seconds_type':'int'
|     `-CallExpr 0x561d4a132e28 <col:21, col:40> 'uint32_t':'unsigned int'
|       |-ImplicitCastExpr 0x561d4a132e10 <col:21> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x561d4a132dd0 <col:21> 'uint32_t (uint32_t)' lvalue CXXMethod 0x561d4a11adb0 'nsec_to_subsec' 'uint32_t (uint32_t)'
|       `-ImplicitCastExpr 0x561d4a132e50 <col:36> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x561d4a132df0 <col:36> 'uint32_t':'unsigned int' lvalue ParmVar 0x561d4a1170d0 'nsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x561d4a117338 <line:408:5, col:86> col:17 set 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x561d4a117228 <col:21, col:34> col:34 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x561d4a1172a0 <col:39, col:57> col:48 subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x561d4a11dfd8 <col:57> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x561d4a11dfb8 <col:57> 'int' 0
| `-DeprecatedAttr 0x561d4a1173e8 <col:75> "" ""
|-CXXMethodDecl 0x561d4a117578 <line:411:5, col:85> col:17 set_usec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x561d4a117468 <col:26, col:39> col:39 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x561d4a1174e0 <col:44, col:53> col:53 usec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x561d4a117628 <col:74> "" ""
|-CXXMethodDecl 0x561d4a1177b8 <line:414:5, col:85> col:17 set_nsec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x561d4a1176a8 <col:26, col:39> col:39 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x561d4a117720 <col:44, col:53> col:53 nsec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x561d4a117868 <col:74> "" ""
|-CXXMethodDecl 0x561d4a1178f8 <line:417:5, col:53> col:17 set_now 'void ()' inline
| `-DeprecatedAttr 0x561d4a117998 <col:42> "" ""
|-CXXMethodDecl 0x561d4a11a1d0 <line:420:5, col:53> col:9 set_timeval_ioctl 'int (int, int)'
| |-ParmVarDecl 0x561d4a11a0b0 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x561d4a11a130 <col:35, col:39> col:39 ioctl_selector 'int'
|-CXXMethodDecl 0x561d4a11a2a0 <line:432:5, col:33> col:29 now 'Timestamp ()' static inline
|-CXXMethodDecl 0x561d4a11a360 <line:438:5, col:56> col:45 used assign_now 'void ()'
| |-NoInlineAttr 0x561d4a11a400 <col:20>
| `-OptimizeNoneAttr 0x561d4a11a458 <col:30>
|-CXXMethodDecl 0x561d4a11a4a0 <line:446:5, col:36> col:29 used recent 'Timestamp ()' static inline
|-CXXMethodDecl 0x561d4a11a560 <line:452:5, col:31> col:17 used assign_recent 'void ()' inline
|-CXXMethodDecl 0x561d4a11a620 <line:466:5, col:40> col:29 now_steady 'Timestamp ()' static inline
|-CXXMethodDecl 0x561d4a11a6e0 <line:472:5, col:35> col:17 used assign_now_steady 'void ()' inline
|-CXXMethodDecl 0x561d4a11a7a0 <line:481:5, col:43> col:29 used recent_steady 'Timestamp ()' static inline
|-CXXMethodDecl 0x561d4a11a860 <line:487:5, col:38> col:17 used assign_recent_steady 'void ()' inline
|-CXXMethodDecl 0x561d4a11a920 <line:496:5, col:22> col:12 unparse 'String () const'
|-CXXMethodDecl 0x561d4a11a9e0 <line:501:5, col:31> col:12 unparse_interval 'String () const'
|-CXXMethodDecl 0x561d4a11ab20 <line:510:5, line:512:5> line:510:28 used msec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x561d4a11aa90 <col:43, col:52> col:52 used msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x561d4a132ff8 <col:58, line:512:5>
|   `-ReturnStmt 0x561d4a132fe8 <line:511:9, col:53>
|     `-BinaryOperator 0x561d4a132fc8 <col:16, col:53> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x561d4a132f98 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x561d4a132ec8 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x561d4a11aa90 'msec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x561d4a132fb0 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x561d4a132f78 <col:23, col:53> 'int'
|           `-BinaryOperator 0x561d4a132f58 <col:24, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x561d4a132f28 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x561d4a132ee8 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x561d4a111bd0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x561d4a132f40 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x561d4a132f08 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x561d4a111b40 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x561d4a11ac68 <line:514:5, line:516:5> line:514:28 used usec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x561d4a11abd8 <col:43, col:52> col:52 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x561d4a133140 <col:58, line:516:5>
|   `-ReturnStmt 0x561d4a133130 <line:515:9, col:53>
|     `-BinaryOperator 0x561d4a133110 <col:16, col:53> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x561d4a1330e0 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x561d4a133010 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x561d4a11abd8 'usec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x561d4a1330f8 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x561d4a1330c0 <col:23, col:53> 'int'
|           `-BinaryOperator 0x561d4a1330a0 <col:24, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x561d4a133070 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x561d4a133030 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x561d4a111bd0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x561d4a133088 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x561d4a133050 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x561d4a111a20 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x561d4a11adb0 <line:518:5, line:520:5> line:518:28 used nsec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x561d4a11ad20 <col:43, col:52> col:52 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x561d4a133288 <col:58, line:520:5>
|   `-ReturnStmt 0x561d4a133278 <line:519:9, col:53>
|     `-BinaryOperator 0x561d4a133258 <col:16, col:53> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x561d4a133228 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x561d4a133158 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x561d4a11ad20 'nsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x561d4a133240 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x561d4a133208 <col:23, col:53> 'int'
|           `-BinaryOperator 0x561d4a1331e8 <col:24, col:39> 'int' '/'
|             |-ImplicitCastExpr 0x561d4a1331b8 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x561d4a133178 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x561d4a111870 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x561d4a1331d0 <col:39> 'int' <IntegralCast>
|               `-DeclRefExpr 0x561d4a133198 <col:39> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x561d4a111bd0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x561d4a11aef8 <line:522:5, line:524:5> line:522:28 used subsec_to_msec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x561d4a11ae68 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x561d4a1333d0 <col:60, line:524:5>
|   `-ReturnStmt 0x561d4a1333c0 <line:523:9, col:55>
|     `-BinaryOperator 0x561d4a1333a0 <col:16, col:55> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x561d4a133370 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x561d4a1332a0 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x561d4a11ae68 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x561d4a133388 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x561d4a133350 <col:25, col:55> 'int'
|           `-BinaryOperator 0x561d4a133330 <col:26, col:43> 'int' '/'
|             |-ImplicitCastExpr 0x561d4a133300 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x561d4a1332c0 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x561d4a111bd0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x561d4a133318 <col:43> 'int' <IntegralCast>
|               `-DeclRefExpr 0x561d4a1332e0 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x561d4a111b40 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x561d4a11b040 <line:526:5, line:528:5> line:526:28 used subsec_to_usec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x561d4a11afb0 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x561d4a133518 <col:60, line:528:5>
|   `-ReturnStmt 0x561d4a133508 <line:527:9, col:55>
|     `-BinaryOperator 0x561d4a1334e8 <col:16, col:55> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x561d4a1334b8 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x561d4a1333e8 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x561d4a11afb0 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x561d4a1334d0 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x561d4a133498 <col:25, col:55> 'int'
|           `-BinaryOperator 0x561d4a133478 <col:26, col:43> 'int' '/'
|             |-ImplicitCastExpr 0x561d4a133448 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x561d4a133408 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x561d4a111bd0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x561d4a133460 <col:43> 'int' <IntegralCast>
|               `-DeclRefExpr 0x561d4a133428 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x561d4a111a20 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x561d4a11b188 <line:530:5, line:532:5> line:530:28 used subsec_to_nsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x561d4a11b0f8 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x561d4a133660 <col:60, line:532:5>
|   `-ReturnStmt 0x561d4a133650 <line:531:9, col:55>
|     `-BinaryOperator 0x561d4a133630 <col:16, col:55> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x561d4a133600 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x561d4a133530 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x561d4a11b0f8 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x561d4a133618 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x561d4a1335e0 <col:25, col:55> 'int'
|           `-BinaryOperator 0x561d4a1335c0 <col:26, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x561d4a133590 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x561d4a133550 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x561d4a111870 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x561d4a1335a8 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x561d4a133570 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x561d4a111bd0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXRecordDecl 0x561d4a11b230 prev 0x561d4a112070 <line:539:5, line:566:5> line:539:11 referenced union rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x561d4a11b328 <col:5, col:11> col:11 implicit union rep_t
| |-FieldDecl 0x561d4a11b3c8 <line:541:9, col:17> col:17 referenced x 'int64_t':'long'
| |-CXXConstructorDecl 0x561d4a122190 <line:539:11> col:11 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x561d4a122578 <col:11>
| |-CXXConstructorDecl 0x561d4a122270 <col:11> col:11 implicit used constexpr rep_t 'void (const Timestamp::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x561d4a122358 <col:11> col:11 'const Timestamp::rep_t &'
| | `-CompoundStmt 0x561d4a122cc0 <col:11>
| |-CXXConstructorDecl 0x561d4a1223f8 <col:11> col:11 implicit used constexpr rep_t 'void (Timestamp::rep_t &&) noexcept' inline default trivial
| | |-ParmVarDecl 0x561d4a122508 <col:11> col:11 'Timestamp::rep_t &&'
| | `-CompoundStmt 0x561d4a124518 <col:11>
| |-CXXDestructorDecl 0x561d4a123828 <col:11> col:11 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x561d49e29f98 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(const Timestamp::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x561d49e2a0a8 <col:11> col:11 'const Timestamp::rep_t &'
| | `-CompoundStmt 0x561d49e2a970 <col:11>
| |   `-ReturnStmt 0x561d49e2a960 <col:11>
| |     `-UnaryOperator 0x561d49e2a948 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x561d49e2a938 <col:11> 'Timestamp::rep_t *' this
| `-CXXMethodDecl 0x561d49e2a118 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(Timestamp::rep_t &&) noexcept' inline default trivial
|   |-ParmVarDecl 0x561d49e2a228 <col:11> col:11 'Timestamp::rep_t &&'
|   `-CompoundStmt 0x561d4a1bc920 <col:11>
|     `-ReturnStmt 0x561d4a1bc910 <col:11>
|       `-UnaryOperator 0x561d4a1bc8f8 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x561d4a1bc8e8 <col:11> 'Timestamp::rep_t *' this
|-EnumDecl 0x561d4a11b430 <line:571:5, line:577:5> line:571:10 referenced warp_class_type
| |-EnumConstantDecl 0x561d4a11b530 <line:572:9, col:21> col:9 warp_none 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x561d4a11b730 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561d4a11b510 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x561d4a11b4f0 <col:21> 'int' 0
| |-EnumConstantDecl 0x561d4a11b5c0 <line:573:9, col:23> col:9 warp_linear 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x561d4a11b748 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561d4a11b5a0 <col:23> 'int' Int: 1
| |     `-IntegerLiteral 0x561d4a11b580 <col:23> 'int' 1
| |-EnumConstantDecl 0x561d4a11b650 <line:574:9, col:23> col:9 referenced warp_nowait 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x561d4a11b760 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561d4a11b630 <col:23> 'int' Int: 2
| |     `-IntegerLiteral 0x561d4a11b610 <col:23> 'int' 2
| `-EnumConstantDecl 0x561d4a11b6e0 <line:576:9, col:27> col:9 warp_simulation 'Timestamp::warp_class_type'
|   `-ImplicitCastExpr 0x561d4a11b778 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x561d4a11b6c0 <col:27> 'int' Int: 3
|       `-IntegerLiteral 0x561d4a11b6a0 <col:27> 'int' 3
|-CXXMethodDecl 0x561d4a11b7b8 <line:581:5, col:34> col:23 warp_class 'int ()' static inline
|-CXXMethodDecl 0x561d4a11b880 <line:588:5, col:37> col:26 warp_speed 'double ()' static inline
|-CXXMethodDecl 0x561d4a11ba88 <line:621:5, col:65> col:17 warp_set_class 'void (Timestamp::warp_class_type, double)' static
| |-ParmVarDecl 0x561d4a11b930 <col:32, col:48> col:48 w 'Timestamp::warp_class_type'
| `-ParmVarDecl 0x561d4a11b9b0 <col:51, col:62> col:58 s 'double' cinit
|   `-FloatingLiteral 0x561d4a11dff0 <col:62> 'double' 1.000000e+00
|-CXXMethodDecl 0x561d4a11bc98 <line:628:5, col:82> col:17 warp_set_now 'void (const Timestamp &, const Timestamp &)' static
| |-ParmVarDecl 0x561d4a11bb48 <col:30, col:47> col:47 t_system 'const Timestamp &'
| `-ParmVarDecl 0x561d4a11bbc0 <col:57, col:74> col:74 t_steady 'const Timestamp &'
|-CXXMethodDecl 0x561d4a11bd68 <line:632:5, col:40> col:22 warp_real_delay 'Timestamp () const' inline
|-CXXMethodDecl 0x561d4a11be28 <line:635:5, col:37> col:24 used warp_jumping 'bool ()' static inline
|-CXXMethodDecl 0x561d4a11bf98 <line:640:5, col:57> col:17 warp_jump_steady 'void (const Timestamp &)' static
| `-ParmVarDecl 0x561d4a11bed8 <col:34, col:51> col:51 expiry 'const Timestamp &'
|-CXXMethodDecl 0x561d4a11c060 <line:647:5, col:42> col:29 now_unwarped 'Timestamp ()' static inline
|-CXXMethodDecl 0x561d4a11c120 <line:653:5, col:37> col:17 used assign_now_unwarped 'void ()' inline
|-CXXMethodDecl 0x561d4a11c1e0 <line:659:5, col:49> col:29 now_steady_unwarped 'Timestamp ()' static inline
|-CXXMethodDecl 0x561d4a11c2a0 <line:666:5, col:44> col:17 used assign_now_steady_unwarped 'void ()' inline
|-AccessSpecDecl 0x561d4a11c340 <line:670:3, col:10> col:3 private
|-FieldDecl 0x561d4a11c378 <line:672:5, col:11> col:11 referenced _t 'Timestamp::rep_t'
|-CXXMethodDecl 0x561d4a11c3e8 <line:674:5, line:684:5> line:674:17 used add_fix 'void ()' inline
| `-CompoundStmt 0x561d4a133678 <col:27, line:684:5>
|-CXXMethodDecl 0x561d4a11c4a8 <line:686:5, line:696:5> line:686:17 used sub_fix 'void ()' inline
| `-CompoundStmt 0x561d4a133688 <col:27, line:696:5>
|-CXXMethodDecl 0x561d4a11c6a8 <line:698:5, line:700:5> line:698:30 used value_div 'Timestamp::value_type (Timestamp::value_type, uint32_t)' static inline
| |-ParmVarDecl 0x561d4a11c558 <col:40, col:51> col:51 used a 'Timestamp::value_type':'long'
| |-ParmVarDecl 0x561d4a11c5d0 <col:54, col:63> col:63 used b 'uint32_t':'unsigned int'
| `-CompoundStmt 0x561d4a133810 <col:66, line:700:5>
|   `-ReturnStmt 0x561d4a133800 <line:699:9, col:31>
|     `-CallExpr 0x561d4a1337a0 <col:16, col:31> 'int64_t':'long'
|       |-ImplicitCastExpr 0x561d4a133788 <col:16> 'int64_t (*)(int64_t, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x561d4a133738 <col:16> 'int64_t (int64_t, uint32_t)' lvalue Function 0x561d49f9ea58 'int_divide' 'int64_t (int64_t, uint32_t)'
|       |-ImplicitCastExpr 0x561d4a1337d0 <col:27> 'Timestamp::value_type':'long' <LValueToRValue>
|       | `-DeclRefExpr 0x561d4a1336f8 <col:27> 'Timestamp::value_type':'long' lvalue ParmVar 0x561d4a11c558 'a' 'Timestamp::value_type':'long'
|       `-ImplicitCastExpr 0x561d4a1337e8 <col:30> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x561d4a133718 <col:30> 'uint32_t':'unsigned int' lvalue ParmVar 0x561d4a11c5d0 'b' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x561d4a11ca18 <line:702:5, line:707:5> line:702:24 value_div_mod 'void (int32_t &, int32_t &, Timestamp::value_type, uint32_t)' static inline
| |-ParmVarDecl 0x561d4a11c768 <col:38, col:47> col:47 used div 'int32_t &'
| |-ParmVarDecl 0x561d4a11c7e0 <col:52, col:61> col:61 used rem 'int32_t &'
| |-ParmVarDecl 0x561d4a11c858 <line:703:38, col:49> col:49 used a 'Timestamp::value_type':'long'
| |-ParmVarDecl 0x561d4a11c8d0 <col:52, col:61> col:61 used b 'uint32_t':'unsigned int'
| `-CompoundStmt 0x561d4a133b60 <col:64, line:707:5>
|   |-DeclStmt 0x561d4a1338a0 <line:704:9, col:24>
|   | `-VarDecl 0x561d4a133838 <col:9, col:20> col:20 used quot 'Timestamp::value_type':'long'
|   |-BinaryOperator 0x561d4a133ab0 <line:705:9, col:39> 'int32_t':'int' lvalue '='
|   | |-DeclRefExpr 0x561d4a1338b8 <col:9> 'int32_t':'int' lvalue ParmVar 0x561d4a11c7e0 'rem' 'int32_t &'
|   | `-ImplicitCastExpr 0x561d4a133a98 <col:15, col:39> 'int32_t':'int' <IntegralCast>
|   |   `-CallExpr 0x561d4a133a30 <col:15, col:39> 'uint32_t':'unsigned int'
|   |     |-ImplicitCastExpr 0x561d4a133a18 <col:15> 'uint32_t (*)(int64_t, uint32_t, int64_t &)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x561d4a133998 <col:15> 'uint32_t (int64_t, uint32_t, int64_t &)' lvalue Function 0x561d49fa3d28 'int_remainder' 'uint32_t (int64_t, uint32_t, int64_t &)'
|   |     |-ImplicitCastExpr 0x561d4a133a68 <col:29> 'Timestamp::value_type':'long' <LValueToRValue>
|   |     | `-DeclRefExpr 0x561d4a133938 <col:29> 'Timestamp::value_type':'long' lvalue ParmVar 0x561d4a11c858 'a' 'Timestamp::value_type':'long'
|   |     |-ImplicitCastExpr 0x561d4a133a80 <col:32> 'uint32_t':'unsigned int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x561d4a133958 <col:32> 'uint32_t':'unsigned int' lvalue ParmVar 0x561d4a11c8d0 'b' 'uint32_t':'unsigned int'
|   |     `-DeclRefExpr 0x561d4a133978 <col:35> 'Timestamp::value_type':'long' lvalue Var 0x561d4a133838 'quot' 'Timestamp::value_type':'long'
|   `-BinaryOperator 0x561d4a133b40 <line:706:9, col:15> 'int32_t':'int' lvalue '='
|     |-DeclRefExpr 0x561d4a133ad0 <col:9> 'int32_t':'int' lvalue ParmVar 0x561d4a11c768 'div' 'int32_t &'
|     `-ImplicitCastExpr 0x561d4a133b28 <col:15> 'int32_t':'int' <IntegralCast>
|       `-ImplicitCastExpr 0x561d4a133b10 <col:15> 'Timestamp::value_type':'long' <LValueToRValue>
|         `-DeclRefExpr 0x561d4a133af0 <col:15> 'Timestamp::value_type':'long' lvalue Var 0x561d4a133838 'quot' 'Timestamp::value_type':'long'
|-CXXMethodDecl 0x561d4a11ccb8 <line:709:5, col:67> col:17 used assign_now 'void (bool, bool, bool)' inline
| |-ParmVarDecl 0x561d4a11cae8 <col:28, col:33> col:33 recent 'bool'
| |-ParmVarDecl 0x561d4a11cb60 <col:41, col:46> col:46 steady 'bool'
| `-ParmVarDecl 0x561d4a11cbd8 <col:54, col:59> col:59 unwarped 'bool'
|-CXXMethodDecl 0x561d4a11cf58 <line:712:5, col:98> col:24 warp_adjust 'void (bool, const Timestamp &, const Timestamp &)' static inline
| |-ParmVarDecl 0x561d4a11cd80 <col:36, col:41> col:41 steady 'bool'
| |-ParmVarDecl 0x561d4a11cdf8 <col:49, col:66> col:66 t_raw 'const Timestamp &'
| `-ParmVarDecl 0x561d4a11ce70 <col:73, col:90> col:90 t_warped 'const Timestamp &'
|-CXXMethodDecl 0x561d4a11d0e8 <line:713:5, col:42> col:22 warped 'Timestamp (bool) const' inline
| `-ParmVarDecl 0x561d4a11d020 <col:29, col:34> col:34 steady 'bool'
|-CXXMethodDecl 0x561d4a11d2e8 <line:714:5, col:41> col:10 used warp 'void (bool, bool)'
| |-ParmVarDecl 0x561d4a11d1a0 <col:15, col:20> col:20 steady 'bool'
| `-ParmVarDecl 0x561d4a11d218 <col:28, col:33> col:33 from_now 'bool'
|-FriendDecl 0x561d4a11d5b8 <line:717:5, col:73> col:24
| `-FunctionDecl 0x561d4a11d4f8 parent 0x561d49c1f278 <col:5, col:73> col:24 used operator== 'bool (const Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x561d4a11d3a8 <col:35, col:52> col:52 a 'const Timestamp &'
|   `-ParmVarDecl 0x561d4a11d420 <col:55, col:72> col:72 b 'const Timestamp &'
|-FriendDecl 0x561d4a11d7d8 <line:718:5, col:72> col:24
| `-FunctionDecl 0x561d4a11d718 parent 0x561d49c1f278 <col:5, col:72> col:24 used operator< 'bool (const Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x561d4a11d608 <col:34, col:51> col:51 a 'const Timestamp &'
|   `-ParmVarDecl 0x561d4a11d680 <col:54, col:71> col:71 b 'const Timestamp &'
|-FriendDecl 0x561d4a11d9a0 <line:719:5, col:57> col:29
| `-FunctionDecl 0x561d4a11d8e8 parent 0x561d49c1f278 <col:5, col:57> col:29 operator- 'Timestamp (const Timestamp &)' inline
|   `-ParmVarDecl 0x561d4a11d828 <col:39, col:56> col:56 b 'const Timestamp &'
|-FriendDecl 0x561d4a11dc28 <line:720:5, col:73> col:30
| `-FunctionDecl 0x561d4a11db68 parent 0x561d49c1f278 <col:5, col:73> col:30 used operator+= 'Timestamp &(Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x561d4a11da18 <col:41, col:52> col:52 a 'Timestamp &'
|   `-ParmVarDecl 0x561d4a11da90 <col:55, col:72> col:72 b 'const Timestamp &'
|-FriendDecl 0x561d4a11de48 <line:721:5, col:73> col:30
| `-FunctionDecl 0x561d4a11dd88 parent 0x561d49c1f278 <col:5, col:73> col:30 used operator-= 'Timestamp &(Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x561d4a11dc78 <col:41, col:52> col:52 a 'Timestamp &'
|   `-ParmVarDecl 0x561d4a11dcf0 <col:55, col:72> col:72 b 'const Timestamp &'
|-CXXConstructorDecl 0x561d4a1236d0 <line:122:7> col:7 implicit used constexpr Timestamp 'void (const Timestamp &) noexcept' inline default trivial
| |-ParmVarDecl 0x561d4a1237b8 <col:7> col:7 used 'const Timestamp &'
| |-CXXCtorInitializer Field 0x561d4a11c378 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x561d4a124228 <col:7> 'Timestamp::rep_t' 'void (const Timestamp::rep_t &) noexcept'
| |   `-MemberExpr 0x561d4a1241e0 <col:7> 'const Timestamp::rep_t' lvalue ._t 0x561d4a11c378
| |     `-DeclRefExpr 0x561d4a1241c0 <col:7> 'const Timestamp' lvalue ParmVar 0x561d4a1237b8 '' 'const Timestamp &'
| `-CompoundStmt 0x561d4a124288 <col:7>
|-CXXConstructorDecl 0x561d4a123938 <col:7> col:7 implicit used constexpr Timestamp 'void (Timestamp &&) noexcept' inline default trivial
| |-ParmVarDecl 0x561d4a123a48 <col:7> col:7 used 'Timestamp &&'
| |-CXXCtorInitializer Field 0x561d4a11c378 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x561d4a124528 <col:7> 'Timestamp::rep_t' 'void (Timestamp::rep_t &&) noexcept'
| |   `-MemberExpr 0x561d4a1244d0 <col:7> 'Timestamp::rep_t' xvalue ._t 0x561d4a11c378
| |     `-CXXStaticCastExpr 0x561d4a1244a0 <col:7> 'Timestamp' xvalue static_cast<class Timestamp &&> <NoOp>
| |       `-DeclRefExpr 0x561d4a124470 <col:7> 'Timestamp' lvalue ParmVar 0x561d4a123a48 '' 'Timestamp &&'
| `-CompoundStmt 0x561d4a124588 <col:7>
|-CXXDestructorDecl 0x561d4a123af8 <col:7> col:7 implicit referenced ~Timestamp 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x561d49e29de8 <col:7> col:7 implicit used operator= 'Timestamp &(const Timestamp &) noexcept' inline default trivial
| |-ParmVarDecl 0x561d49e29ef8 <col:7> col:7 used 'const Timestamp &'
| `-CompoundStmt 0x561d49e2a9e8 <col:7>
|   |-CXXMemberCallExpr 0x561d49e2a988 <col:7> 'Timestamp::rep_t' lvalue
|   | |-MemberExpr 0x561d49e2a8c8 <col:7> '<bound member function type>' .operator= 0x561d49e29f98
|   | | `-MemberExpr 0x561d49e2a7d8 <col:7> 'Timestamp::rep_t' lvalue ->_t 0x561d4a11c378
|   | |   `-CXXThisExpr 0x561d49e2a7c8 <col:7> 'Timestamp *' this
|   | `-MemberExpr 0x561d49e2a898 <col:7> 'const Timestamp::rep_t' lvalue ._t 0x561d4a11c378
|   |   `-DeclRefExpr 0x561d49e2a878 <col:7> 'const Timestamp' lvalue ParmVar 0x561d49e29ef8 '' 'const Timestamp &'
|   `-ReturnStmt 0x561d49e2a9d8 <col:7>
|     `-UnaryOperator 0x561d49e2a9c0 <col:7> 'Timestamp' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x561d49e2a9b0 <col:7> 'Timestamp *' this
`-CXXMethodDecl 0x561d49e2a298 <col:7> col:7 implicit used operator= 'Timestamp &(Timestamp &&) noexcept' inline default trivial
  |-ParmVarDecl 0x561d49e2a3a8 <col:7> col:7 used 'Timestamp &&'
  `-CompoundStmt 0x561d4a1bc998 <col:7>
    |-CXXMemberCallExpr 0x561d4a1bc938 <col:7> 'Timestamp::rep_t' lvalue
    | |-MemberExpr 0x561d4a1bc8a0 <col:7> '<bound member function type>' .operator= 0x561d49e2a118
    | | `-MemberExpr 0x561d4a1bc770 <col:7> 'Timestamp::rep_t' lvalue ->_t 0x561d4a11c378
    | |   `-CXXThisExpr 0x561d4a1bc760 <col:7> 'Timestamp *' this
    | `-MemberExpr 0x561d4a1bc870 <col:7> 'Timestamp::rep_t' xvalue ._t 0x561d4a11c378
    |   `-CXXStaticCastExpr 0x561d4a1bc840 <col:7> 'Timestamp' xvalue static_cast<class Timestamp &&> <NoOp>
    |     `-DeclRefExpr 0x561d4a1bc810 <col:7> 'Timestamp' lvalue ParmVar 0x561d49e2a3a8 '' 'Timestamp &&'
    `-ReturnStmt 0x561d4a1bc988 <col:7>
      `-UnaryOperator 0x561d4a1bc970 <col:7> 'Timestamp' lvalue prefix '*' cannot overflow
        `-CXXThisExpr 0x561d4a1bc960 <col:7> 'Timestamp *' this

Layout: <CGRecordLayout
  LLVMType:%class.Timestamp = type { %"union.Timestamp::rep_t" }
  NonVirtualBaseLLVMType:%class.Timestamp = type { %"union.Timestamp::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x561d4a1c1690 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<16>'
|-CXXRecordDecl 0x561d4a1c1868 prev 0x561d4a1c1690 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x561d4a1c18f8 <col:46, col:52> col:46 public
|-TypedefDecl 0x561d4a1c1920 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x561d49c1f370 'int'
|-TypedefDecl 0x561d4a1c7320 <line:13:5, col:31> col:31 type 'typename sized_array_memory<16>::type':'char_array<16>'
| `-ElaboratedType 0x561d4a1c72d0 'typename sized_array_memory<16>::type' sugar
|   `-TypedefType 0x561d4a1c1dd0 'sized_array_memory<16>::type' sugar
|     |-Typedef 0x561d4a1c1cd0 'type'
|     `-TemplateSpecializationType 0x561d4a1c1c60 'char_array<16UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x561d4a1c1b40 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 16
|       |   `-SubstNonTypeTemplateParmExpr 0x561d4a1c1b20 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x561d4a1c1b00 <col:24> 'unsigned long' 16
|       `-RecordType 0x561d4a1c1c40 'char_array<16>'
|         `-ClassTemplateSpecialization 0x561d4a1c1b60 'char_array'
|-TypedefDecl 0x561d4a1c73d8 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<16> >::type *'
| `-PointerType 0x561d4a1c73a0 'vector_memory<sized_array_memory<16> >::type *'
|   `-TypedefType 0x561d4a1c7380 'vector_memory<sized_array_memory<16> >::type' sugar
|     |-Typedef 0x561d4a1c7320 'type'
|     `-ElaboratedType 0x561d4a1c72d0 'typename sized_array_memory<16>::type' sugar
|       `-TypedefType 0x561d4a1c1dd0 'sized_array_memory<16>::type' sugar
|         |-Typedef 0x561d4a1c1cd0 'type'
|         `-TemplateSpecializationType 0x561d4a1c1c60 'char_array<16UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x561d4a1c1b40 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 16
|           |   `-SubstNonTypeTemplateParmExpr 0x561d4a1c1b20 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x561d4a1c1b00 <col:24> 'unsigned long' 16
|           `-RecordType 0x561d4a1c1c40 'char_array<16>'
|             `-ClassTemplateSpecialization 0x561d4a1c1b60 'char_array'
|-CXXMethodDecl 0x561d4a1c7558 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<16> >::type *) const' inline
| `-ParmVarDecl 0x561d4a1c7468 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXConstructorDecl 0x561d4a1c7648 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x561d4a1c7728 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x561d4a1c7728
|-CXXMethodDecl 0x561d4a1c79f8 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<16> > &)'
| `-ParmVarDecl 0x561d4a1c7900 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<16> > &'
|-CXXMethodDecl 0x561d4a1c7c38 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x561d4a1c7ab0 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x561d4a1c7b28 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x561d4a1c7e08 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x561d4a1c7cf8 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x561d4a1c7d70 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x561d4a1c7f68 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<16> >::iterator ()'
|-CXXMethodDecl 0x561d4a1c8038 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<16> >::iterator ()'
|-CXXMethodDecl 0x561d4a1c8288 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<16> >::iterator (vector_memory<sized_array_memory<16> >::iterator, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x561d4a1c80f8 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
| `-ParmVarDecl 0x561d4a1c8170 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x561d4a1c84e8 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<16> >::iterator (vector_memory<sized_array_memory<16> >::iterator, vector_memory<sized_array_memory<16> >::iterator)'
| |-ParmVarDecl 0x561d4a1c8358 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
| `-ParmVarDecl 0x561d4a1c83d0 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x561d4a1c86a8 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<16> >::type *)' inline
| `-ParmVarDecl 0x561d4a1c85b8 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x561d4a1c8868 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<16> >::type *)' inline
| `-ParmVarDecl 0x561d4a1c8770 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x561d4a1c8920 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x561d4a1c89d0 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x561d4a1c8c08 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x561d4a1c8a80 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x561d4a1c8af8 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x561d4a1c8ea8 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<16> > &)'
| `-ParmVarDecl 0x561d4a1c8db0 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<16> > &'
|-FieldDecl 0x561d4a1c8f70 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<16> >::type *'
|-FieldDecl 0x561d4a1c8fc0 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x561d4a1c9010 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory = type { %struct.char_array*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory = type { %struct.char_array*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x561d4a1bffa8 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'TimerSet::heap_element'
|-CXXRecordDecl 0x561d4a1c01b8 prev 0x561d4a1bffa8 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x561d4a1c1600 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<heap_element>::type':'sized_array_memory<16>'
| `-ElaboratedType 0x561d4a1c15b0 'typename array_memory<heap_element>::type' sugar
|   `-TypedefType 0x561d4a1c1590 'conditional<true, sized_array_memory<16>, typed_array_memory<TimerSet::heap_element> >::type' sugar
|     |-Typedef 0x561d4a1c1440 'type'
|     `-SubstTemplateTypeParmType 0x561d4a1c1260 'sized_array_memory<16>' sugar
|       |-TemplateTypeParmType 0x561d49ee69c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561d49ee6968 'T'
|       `-RecordType 0x561d4a1c0db0 'sized_array_memory<16>'
|         `-ClassTemplateSpecialization 0x561d4a1c0cc8 'sized_array_memory'
|-FieldDecl 0x561d4a1c9060 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<TimerSet::heap_element>::array_memory_type>':'vector_memory<sized_array_memory<16> >' mutable
|-AccessSpecDecl 0x561d4a1c90b0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x561d4a1c90e8 <line:118:5, col:15> col:15 value_type 'TimerSet::heap_element':'TimerSet::heap_element'
| `-SubstTemplateTypeParmType 0x561d4a1c0250 'TimerSet::heap_element' sugar
|   |-TemplateTypeParmType 0x561d49f1e8d0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x561d49f1e878 'T'
|   `-RecordType 0x561d4a1bf1b0 'TimerSet::heap_element'
|     `-CXXRecord 0x561d4a1bf120 'heap_element'
|-TypedefDecl 0x561d4a1c91a8 <line:119:5, col:16> col:16 reference 'TimerSet::heap_element &'
| `-LValueReferenceType 0x561d4a1c9170 'TimerSet::heap_element &'
|   `-SubstTemplateTypeParmType 0x561d4a1c0250 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x561d49f1e8d0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x561d49f1e878 'T'
|     `-RecordType 0x561d4a1bf1b0 'TimerSet::heap_element'
|       `-CXXRecord 0x561d4a1bf120 'heap_element'
|-TypedefDecl 0x561d4a1c9238 <line:120:5, col:22> col:22 const_reference 'const TimerSet::heap_element &'
| `-LValueReferenceType 0x561d4a1c9200 'const TimerSet::heap_element &'
|   `-QualType 0x561d4a1c0251 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x561d4a1c0250 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x561d49f1e8d0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561d49f1e878 'T'
|       `-RecordType 0x561d4a1bf1b0 'TimerSet::heap_element'
|         `-CXXRecord 0x561d4a1bf120 'heap_element'
|-TypedefDecl 0x561d4a1c92c8 <line:121:5, col:16> col:16 pointer 'TimerSet::heap_element *'
| `-PointerType 0x561d4a1c9290 'TimerSet::heap_element *'
|   `-SubstTemplateTypeParmType 0x561d4a1c0250 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x561d49f1e8d0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x561d49f1e878 'T'
|     `-RecordType 0x561d4a1bf1b0 'TimerSet::heap_element'
|       `-CXXRecord 0x561d4a1bf120 'heap_element'
|-TypedefDecl 0x561d4a1c9388 <line:122:5, col:22> col:22 const_pointer 'const TimerSet::heap_element *'
| `-PointerType 0x561d4a1c9350 'const TimerSet::heap_element *'
|   `-QualType 0x561d4a1c0251 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x561d4a1c0250 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x561d49f1e8d0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561d49f1e878 'T'
|       `-RecordType 0x561d4a1bf1b0 'TimerSet::heap_element'
|         `-CXXRecord 0x561d4a1bf120 'heap_element'
|-TypedefDecl 0x561d4a1ca1f0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<heap_element>::type':'const TimerSet::heap_element &'
| `-ElaboratedType 0x561d4a1ca1a0 'typename fast_argument<heap_element>::type' sugar
|   `-TypedefType 0x561d4a1ca180 'fast_argument<TimerSet::heap_element, true>::type' sugar
|     |-Typedef 0x561d4a1ca0b8 'type'
|     `-LValueReferenceType 0x561d4a1ca080 'const TimerSet::heap_element &'
|       `-QualType 0x561d4a1c9e21 'const TimerSet::heap_element' const
|         `-SubstTemplateTypeParmType 0x561d4a1c9e20 'TimerSet::heap_element' sugar
|           |-TemplateTypeParmType 0x561d49ef1090 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x561d49ef1038 'T'
|           `-RecordType 0x561d4a1bf1b0 'TimerSet::heap_element'
|             `-CXXRecord 0x561d4a1bf120 'heap_element'
|-TypedefDecl 0x561d4a1ca258 <line:126:5, col:22> col:22 const_access_type 'const TimerSet::heap_element &'
| `-LValueReferenceType 0x561d4a1c9200 'const TimerSet::heap_element &'
|   `-QualType 0x561d4a1c0251 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x561d4a1c0250 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x561d49f1e8d0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561d49f1e878 'T'
|       `-RecordType 0x561d4a1bf1b0 'TimerSet::heap_element'
|         `-CXXRecord 0x561d4a1bf120 'heap_element'
|-TypedefDecl 0x561d4a1ca2b0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x561d49c1f370 'int'
|-TypedefDecl 0x561d4a1ca318 <line:130:5, col:16> col:16 iterator 'TimerSet::heap_element *'
| `-PointerType 0x561d4a1c9290 'TimerSet::heap_element *'
|   `-SubstTemplateTypeParmType 0x561d4a1c0250 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x561d49f1e8d0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x561d49f1e878 'T'
|     `-RecordType 0x561d4a1bf1b0 'TimerSet::heap_element'
|       `-CXXRecord 0x561d4a1bf120 'heap_element'
|-TypedefDecl 0x561d4a1ca380 <line:131:5, col:22> col:22 const_iterator 'const TimerSet::heap_element *'
| `-PointerType 0x561d4a1c9350 'const TimerSet::heap_element *'
|   `-QualType 0x561d4a1c0251 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x561d4a1c0250 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x561d49f1e8d0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561d49f1e878 'T'
|       `-RecordType 0x561d4a1bf1b0 'TimerSet::heap_element'
|         `-CXXRecord 0x561d4a1bf120 'heap_element'
|-EnumDecl 0x561d4a1ca3d8 <line:134:5> col:5
| `-EnumConstantDecl 0x561d4a1ca4d0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<TimerSet::heap_element>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x561d4a1ca4b0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x561d49f1ff58 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x561d49f1ff30 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x561d49f1ff10 <col:40> 'int' 1
|-CXXConstructorDecl 0x561d4a1ca558 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x561d4a1ca7e8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x561d4a1ca610 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x561d4a1ca6b0 <col:41, col:61> col:61 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXConstructorDecl 0x561d4a1caaa8 <line:139:5, col:37> col:12 Vector 'void (const Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x561d4a1ca990 <col:19, col:36> col:36 x 'const Vector<TimerSet::heap_element> &'
|-CXXConstructorDecl 0x561d4a1cad68 <line:141:5, col:32> col:12 Vector 'void (Vector<TimerSet::heap_element> &&)' inline
| `-ParmVarDecl 0x561d4a1cac50 <col:19, col:31> col:31 x 'Vector<TimerSet::heap_element> &&'
|-CXXMethodDecl 0x561d4a1cb0b0 <line:144:5, col:51> col:23 operator= 'Vector<TimerSet::heap_element> &(const Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x561d4a1caf90 <col:33, col:50> col:50 x 'const Vector<TimerSet::heap_element> &'
|-CXXMethodDecl 0x561d4a1cb3c0 <line:146:5, col:46> col:23 operator= 'Vector<TimerSet::heap_element> &(Vector<TimerSet::heap_element> &&)' inline
| `-ParmVarDecl 0x561d4a1cb2a0 <col:33, col:45> col:45 x 'Vector<TimerSet::heap_element> &&'
|-CXXMethodDecl 0x561d4a1cb6b0 <line:148:5, col:70> col:23 assign 'Vector<TimerSet::heap_element> &(Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x561d4a1cb4f8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x561d4a1cb570 <col:43, col:69> col:63 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x561d4a1cb808 <line:150:5, col:55> col:49 begin 'Vector<TimerSet::heap_element>::iterator ()'
| |-NoInlineAttr 0x561d4a1cb8e8 <col:20> Inherited
| `-OptimizeNoneAttr 0x561d4a1cb940 <col:30> Inherited
|-CXXMethodDecl 0x561d4a1cb988 <line:151:5, col:53> col:49 end 'Vector<TimerSet::heap_element>::iterator ()'
| |-NoInlineAttr 0x561d4a1cba38 <col:20> Inherited
| `-OptimizeNoneAttr 0x561d4a1cba90 <col:30> Inherited
|-CXXMethodDecl 0x561d4a1cbb58 <line:152:5, col:63> col:55 begin 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x561d4a1cbc08 <col:20> Inherited
| `-OptimizeNoneAttr 0x561d4a1cbc60 <col:30> Inherited
|-CXXMethodDecl 0x561d4a1cbca8 <line:153:5, col:61> col:55 end 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x561d4a1cbd58 <col:20> Inherited
| `-OptimizeNoneAttr 0x561d4a1cbdb0 <col:30> Inherited
|-CXXMethodDecl 0x561d4a1cbdf8 <line:154:5, col:64> col:55 cbegin 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x561d4a1cbea8 <col:20> Inherited
| `-OptimizeNoneAttr 0x561d4a1cbf00 <col:30> Inherited
|-CXXMethodDecl 0x561d4a1cbf48 <line:155:5, col:62> col:55 cend 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x561d4a1cbff8 <col:20> Inherited
| `-OptimizeNoneAttr 0x561d4a1cc050 <col:30> Inherited
|-CXXMethodDecl 0x561d4a1cc078 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x561d4a1cc128 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x561d4a1cc1d8 <line:159:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x561d4a1cc398 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x561d4a1cc288 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x561d4a1cc300 <col:37, col:63> col:57 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x561d4a1cc4e8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x561d4a1cc458 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x561d4a1cc698 <line:163:5, col:65> col:43 operator[] 'TimerSet::heap_element &(Vector::size_type)'
| |-ParmVarDecl 0x561d4a1cc5a0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x561d4a1cc750 <col:20>
| `-OptimizeNoneAttr 0x561d4a1cc7a8 <col:30>
|-CXXMethodDecl 0x561d4a1cc8c8 <line:164:5, col:73> col:49 operator[] 'const TimerSet::heap_element &(Vector::size_type) const'
| |-ParmVarDecl 0x561d4a1cc7d0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x561d4a1cc980 <col:20>
| `-OptimizeNoneAttr 0x561d4a1cc9d8 <col:30>
|-CXXMethodDecl 0x561d4a1cca90 <line:165:5, col:29> col:15 at 'TimerSet::heap_element &(Vector::size_type)' inline
| `-ParmVarDecl 0x561d4a1cca00 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x561d4a1ccbd8 <line:166:5, col:37> col:21 at 'const TimerSet::heap_element &(Vector::size_type) const' inline
| `-ParmVarDecl 0x561d4a1ccb48 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x561d4a1ccd08 <line:167:5, col:21> col:15 front 'TimerSet::heap_element &()' inline
|-CXXMethodDecl 0x561d4a1cce38 <line:168:5, col:29> col:21 front 'const TimerSet::heap_element &() const' inline
|-CXXMethodDecl 0x561d4a1ccf08 <line:169:5, col:20> col:15 back 'TimerSet::heap_element &()' inline
|-CXXMethodDecl 0x561d4a1ccfd8 <line:170:5, col:28> col:21 back 'const TimerSet::heap_element &() const' inline
|-CXXMethodDecl 0x561d4a1cd118 <line:172:5, col:39> col:15 used unchecked_at 'TimerSet::heap_element &(Vector::size_type)' inline
| `-ParmVarDecl 0x561d4a1cd088 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x561d4a1cd260 <line:173:5, col:47> col:21 unchecked_at 'const TimerSet::heap_element &(Vector::size_type) const' inline
| `-ParmVarDecl 0x561d4a1cd1d0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x561d4a1cd3a8 <line:174:5, col:59> col:15 at_u 'TimerSet::heap_element &(Vector::size_type)' inline
| |-ParmVarDecl 0x561d4a1cd318 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x561d4a1cd460 <col:48> Inherited "" ""
|-CXXMethodDecl 0x561d4a1cd560 <line:175:5, col:71> col:21 at_u 'const TimerSet::heap_element &(Vector::size_type) const' inline
| |-ParmVarDecl 0x561d4a1cd4d0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x561d4a1cd618 <col:60> Inherited "" ""
|-CXXMethodDecl 0x561d4a1cd6d8 <line:177:5, col:20> col:15 data 'TimerSet::heap_element *()' inline
|-CXXMethodDecl 0x561d4a1cd7d8 <line:178:5, col:28> col:21 data 'const TimerSet::heap_element *() const' inline
|-CXXMethodDecl 0x561d4a1cd988 <line:180:5, col:48> col:17 push_back 'void (Vector<TimerSet::heap_element>::value_argument_type)' inline
| `-ParmVarDecl 0x561d4a1cd898 <col:27, col:47> col:47 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-FunctionTemplateDecl 0x561d4a1ce178 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x561d4a1cda40 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<TimerSet::heap_element>':'fast_argument<TimerSet::heap_element, true>'
| `-CXXMethodDecl 0x561d4a1ce0d8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (TimerSet::heap_element &&)' inline
|   `-ParmVarDecl 0x561d4a1cdfd8 <col:58, col:62> col:62 v 'TimerSet::heap_element &&'
|-CXXMethodDecl 0x561d4a1ce258 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x561d4a1ce3a8 <line:186:5, col:49> col:17 push_front 'void (Vector<TimerSet::heap_element>::value_argument_type)' inline
| `-ParmVarDecl 0x561d4a1ce318 <col:28, col:48> col:48 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x561d4a1ce460 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x561d4a1ce6a8 <line:189:5, col:62> col:21 insert 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x561d4a1ce520 <col:28, col:37> col:37 it 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
| `-ParmVarDecl 0x561d4a1ce598 <col:41, col:61> col:61 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x561d4a1ce900 <line:190:5, col:38> col:21 erase 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator)' inline
| `-ParmVarDecl 0x561d4a1ce778 <col:27, col:36> col:36 it 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
|-CXXMethodDecl 0x561d4a1ceb58 <line:191:5, col:49> col:21 erase 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator, Vector<TimerSet::heap_element>::iterator)' inline
| |-ParmVarDecl 0x561d4a1ce9c8 <col:27, col:36> col:36 a 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
| `-ParmVarDecl 0x561d4a1cea40 <col:39, col:48> col:48 b 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
|-CXXMethodDecl 0x561d4a1cec18 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x561d4a1cee78 <line:195:5, col:34> col:17 swap 'void (Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x561d4a1ced80 <col:22, col:33> col:33 x 'Vector<TimerSet::heap_element> &'
`-CXXDestructorDecl 0x561d4a1cef48 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x561d4a1cef48

Layout: <CGRecordLayout
  LLVMType:%class.Vector = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x561d4a1d0470 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<8>'
|-CXXRecordDecl 0x561d4a1d0648 prev 0x561d4a1d0470 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x561d4a1d06d8 <col:46, col:52> col:46 public
|-TypedefDecl 0x561d4a1d0700 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x561d49c1f370 'int'
|-TypedefDecl 0x561d4a1d22d0 <line:13:5, col:31> col:31 type 'typename sized_array_memory<8>::type':'char_array<8>'
| `-ElaboratedType 0x561d4a1d2280 'typename sized_array_memory<8>::type' sugar
|   `-TypedefType 0x561d4a1d0bb0 'sized_array_memory<8>::type' sugar
|     |-Typedef 0x561d4a1d0ab0 'type'
|     `-TemplateSpecializationType 0x561d4a1d0a40 'char_array<8UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x561d4a1d0920 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 8
|       |   `-SubstNonTypeTemplateParmExpr 0x561d4a1d0900 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x561d4a1d08e0 <col:24> 'unsigned long' 8
|       `-RecordType 0x561d4a1d0a20 'char_array<8>'
|         `-ClassTemplateSpecialization 0x561d4a1d0940 'char_array'
|-TypedefDecl 0x561d4a1d2388 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<8> >::type *'
| `-PointerType 0x561d4a1d2350 'vector_memory<sized_array_memory<8> >::type *'
|   `-TypedefType 0x561d4a1d2330 'vector_memory<sized_array_memory<8> >::type' sugar
|     |-Typedef 0x561d4a1d22d0 'type'
|     `-ElaboratedType 0x561d4a1d2280 'typename sized_array_memory<8>::type' sugar
|       `-TypedefType 0x561d4a1d0bb0 'sized_array_memory<8>::type' sugar
|         |-Typedef 0x561d4a1d0ab0 'type'
|         `-TemplateSpecializationType 0x561d4a1d0a40 'char_array<8UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x561d4a1d0920 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 8
|           |   `-SubstNonTypeTemplateParmExpr 0x561d4a1d0900 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x561d4a1d08e0 <col:24> 'unsigned long' 8
|           `-RecordType 0x561d4a1d0a20 'char_array<8>'
|             `-ClassTemplateSpecialization 0x561d4a1d0940 'char_array'
|-CXXMethodDecl 0x561d4a1d2508 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<8> >::type *) const' inline
| `-ParmVarDecl 0x561d4a1d2418 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXConstructorDecl 0x561d4a1d25f8 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x561d4a1d26d8 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x561d4a1d26d8
|-CXXMethodDecl 0x561d4a1d29a8 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<8> > &)'
| `-ParmVarDecl 0x561d4a1d28b0 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<8> > &'
|-CXXMethodDecl 0x561d4a1d2be8 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x561d4a1d2a60 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x561d4a1d2ad8 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x561d4a1d2db8 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x561d4a1d2ca8 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x561d4a1d2d20 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x561d4a1d2f18 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<8> >::iterator ()'
|-CXXMethodDecl 0x561d4a1d2fe8 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<8> >::iterator ()'
|-CXXMethodDecl 0x561d4a1d3238 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<8> >::iterator (vector_memory<sized_array_memory<8> >::iterator, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x561d4a1d30a8 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
| `-ParmVarDecl 0x561d4a1d3120 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x561d4a1d3498 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<8> >::iterator (vector_memory<sized_array_memory<8> >::iterator, vector_memory<sized_array_memory<8> >::iterator)'
| |-ParmVarDecl 0x561d4a1d3308 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
| `-ParmVarDecl 0x561d4a1d3380 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x561d4a1d3658 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<8> >::type *)' inline
| `-ParmVarDecl 0x561d4a1d3568 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x561d4a1d3818 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<8> >::type *)' inline
| `-ParmVarDecl 0x561d4a1d3720 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x561d4a1d38d0 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x561d4a1d3980 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x561d4a1d3bb8 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x561d4a1d3a30 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x561d4a1d3aa8 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x561d4a1d3e58 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<8> > &)'
| `-ParmVarDecl 0x561d4a1d3d60 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<8> > &'
|-FieldDecl 0x561d4a1d3f20 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<8> >::type *'
|-FieldDecl 0x561d4a1d3f70 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x561d4a1d3fc0 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.1 = type { %struct.char_array.2*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.1 = type { %struct.char_array.2*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x561d4a1cf090 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Timer *'
|-CXXRecordDecl 0x561d4a1cf298 prev 0x561d4a1cf090 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x561d4a1d03e0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<Timer *>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x561d4a1d0390 'typename array_memory<Timer *>::type' sugar
|   `-TypedefType 0x561d4a1d0370 'conditional<true, sized_array_memory<8>, typed_array_memory<Timer *> >::type' sugar
|     |-Typedef 0x561d4a1d0220 'type'
|     `-SubstTemplateTypeParmType 0x561d4a1d0040 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x561d49ee69c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561d49ee6968 'T'
|       `-RecordType 0x561d4a1cfb90 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x561d4a1cfaa8 'sized_array_memory'
|-FieldDecl 0x561d4a1d4010 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Timer *>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x561d4a1d4060 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x561d4a1d4098 <line:118:5, col:15> col:15 value_type 'Timer *':'Timer *'
| `-SubstTemplateTypeParmType 0x561d4a1cf330 'Timer *' sugar
|   |-TemplateTypeParmType 0x561d49f1e8d0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x561d49f1e878 'T'
|   `-PointerType 0x561d4a1863f0 'Timer *'
|     `-RecordType 0x561d4a185540 'Timer'
|       `-CXXRecord 0x561d4a105238 'Timer'
|-TypedefDecl 0x561d4a1d4158 <line:119:5, col:16> col:16 reference 'Timer *&'
| `-LValueReferenceType 0x561d4a1d4120 'Timer *&'
|   `-SubstTemplateTypeParmType 0x561d4a1cf330 'Timer *' sugar
|     |-TemplateTypeParmType 0x561d49f1e8d0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x561d49f1e878 'T'
|     `-PointerType 0x561d4a1863f0 'Timer *'
|       `-RecordType 0x561d4a185540 'Timer'
|         `-CXXRecord 0x561d4a105238 'Timer'
|-TypedefDecl 0x561d4a1d4218 <line:120:5, col:22> col:22 const_reference 'Timer *const &'
| `-LValueReferenceType 0x561d4a1d41e0 'Timer *const &'
|   `-QualType 0x561d4a1cf331 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x561d4a1cf330 'Timer *' sugar
|       |-TemplateTypeParmType 0x561d49f1e8d0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561d49f1e878 'T'
|       `-PointerType 0x561d4a1863f0 'Timer *'
|         `-RecordType 0x561d4a185540 'Timer'
|           `-CXXRecord 0x561d4a105238 'Timer'
|-TypedefDecl 0x561d4a1d42d8 <line:121:5, col:16> col:16 pointer 'Timer **'
| `-PointerType 0x561d4a1d42a0 'Timer **'
|   `-SubstTemplateTypeParmType 0x561d4a1cf330 'Timer *' sugar
|     |-TemplateTypeParmType 0x561d49f1e8d0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x561d49f1e878 'T'
|     `-PointerType 0x561d4a1863f0 'Timer *'
|       `-RecordType 0x561d4a185540 'Timer'
|         `-CXXRecord 0x561d4a105238 'Timer'
|-TypedefDecl 0x561d4a1d4398 <line:122:5, col:22> col:22 const_pointer 'Timer *const *'
| `-PointerType 0x561d4a1d4360 'Timer *const *'
|   `-QualType 0x561d4a1cf331 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x561d4a1cf330 'Timer *' sugar
|       |-TemplateTypeParmType 0x561d49f1e8d0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561d49f1e878 'T'
|       `-PointerType 0x561d4a1863f0 'Timer *'
|         `-RecordType 0x561d4a185540 'Timer'
|           `-CXXRecord 0x561d4a105238 'Timer'
|-TypedefDecl 0x561d4a1d4f70 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<Timer *>::type':'Timer *'
| `-ElaboratedType 0x561d4a1d4f20 'typename fast_argument<Timer *>::type' sugar
|   `-TypedefType 0x561d4a1d4f00 'fast_argument<Timer *, false>::type' sugar
|     |-Typedef 0x561d4a1d4e90 'type'
|     `-SubstTemplateTypeParmType 0x561d4a1d4c50 'Timer *' sugar
|       |-TemplateTypeParmType 0x561d49ef17c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561d49ef1770 'T'
|       `-PointerType 0x561d4a1863f0 'Timer *'
|         `-RecordType 0x561d4a185540 'Timer'
|           `-CXXRecord 0x561d4a105238 'Timer'
|-TypedefDecl 0x561d4a1d4fd8 <line:126:5, col:22> col:22 const_access_type 'Timer *const &'
| `-LValueReferenceType 0x561d4a1d41e0 'Timer *const &'
|   `-QualType 0x561d4a1cf331 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x561d4a1cf330 'Timer *' sugar
|       |-TemplateTypeParmType 0x561d49f1e8d0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561d49f1e878 'T'
|       `-PointerType 0x561d4a1863f0 'Timer *'
|         `-RecordType 0x561d4a185540 'Timer'
|           `-CXXRecord 0x561d4a105238 'Timer'
|-TypedefDecl 0x561d4a1d5030 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x561d49c1f370 'int'
|-TypedefDecl 0x561d4a1d5098 <line:130:5, col:16> col:16 iterator 'Timer **'
| `-PointerType 0x561d4a1d42a0 'Timer **'
|   `-SubstTemplateTypeParmType 0x561d4a1cf330 'Timer *' sugar
|     |-TemplateTypeParmType 0x561d49f1e8d0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x561d49f1e878 'T'
|     `-PointerType 0x561d4a1863f0 'Timer *'
|       `-RecordType 0x561d4a185540 'Timer'
|         `-CXXRecord 0x561d4a105238 'Timer'
|-TypedefDecl 0x561d4a1d5100 <line:131:5, col:22> col:22 const_iterator 'Timer *const *'
| `-PointerType 0x561d4a1d4360 'Timer *const *'
|   `-QualType 0x561d4a1cf331 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x561d4a1cf330 'Timer *' sugar
|       |-TemplateTypeParmType 0x561d49f1e8d0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561d49f1e878 'T'
|       `-PointerType 0x561d4a1863f0 'Timer *'
|         `-RecordType 0x561d4a185540 'Timer'
|           `-CXXRecord 0x561d4a105238 'Timer'
|-EnumDecl 0x561d4a1d5158 <line:134:5> col:5
| `-EnumConstantDecl 0x561d4a1d5250 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Timer *>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x561d4a1d5230 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x561d49f1ff58 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x561d49f1ff30 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x561d49f1ff10 <col:40> 'int' 1
|-CXXConstructorDecl 0x561d4a1d52d8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x561d4a1d5568 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x561d4a1d5390 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x561d4a1d5430 <col:41, col:61> col:61 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXConstructorDecl 0x561d4a1d5828 <line:139:5, col:37> col:12 Vector 'void (const Vector<Timer *> &)' inline
| `-ParmVarDecl 0x561d4a1d5710 <col:19, col:36> col:36 x 'const Vector<Timer *> &'
|-CXXConstructorDecl 0x561d4a1d5ae8 <line:141:5, col:32> col:12 Vector 'void (Vector<Timer *> &&)' inline
| `-ParmVarDecl 0x561d4a1d59d0 <col:19, col:31> col:31 x 'Vector<Timer *> &&'
|-CXXMethodDecl 0x561d4a1d5e30 <line:144:5, col:51> col:23 operator= 'Vector<Timer *> &(const Vector<Timer *> &)' inline
| `-ParmVarDecl 0x561d4a1d5d10 <col:33, col:50> col:50 x 'const Vector<Timer *> &'
|-CXXMethodDecl 0x561d4a1d6140 <line:146:5, col:46> col:23 operator= 'Vector<Timer *> &(Vector<Timer *> &&)' inline
| `-ParmVarDecl 0x561d4a1d6020 <col:33, col:45> col:45 x 'Vector<Timer *> &&'
|-CXXMethodDecl 0x561d4a1d6430 <line:148:5, col:70> col:23 assign 'Vector<Timer *> &(Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x561d4a1d6278 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x561d4a1d62f0 <col:43, col:69> col:63 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x561d4a1d6588 <line:150:5, col:55> col:49 begin 'Vector<Timer *>::iterator ()'
| |-NoInlineAttr 0x561d4a1d6668 <col:20> Inherited
| `-OptimizeNoneAttr 0x561d4a1d66c0 <col:30> Inherited
|-CXXMethodDecl 0x561d4a1d6708 <line:151:5, col:53> col:49 end 'Vector<Timer *>::iterator ()'
| |-NoInlineAttr 0x561d4a1d67b8 <col:20> Inherited
| `-OptimizeNoneAttr 0x561d4a1d6810 <col:30> Inherited
|-CXXMethodDecl 0x561d4a1da920 <line:152:5, col:63> col:55 begin 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x561d4a1da9d0 <col:20> Inherited
| `-OptimizeNoneAttr 0x561d4a1daa28 <col:30> Inherited
|-CXXMethodDecl 0x561d4a1daa70 <line:153:5, col:61> col:55 end 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x561d4a1dab20 <col:20> Inherited
| `-OptimizeNoneAttr 0x561d4a1dab78 <col:30> Inherited
|-CXXMethodDecl 0x561d4a1dabc0 <line:154:5, col:64> col:55 cbegin 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x561d4a1dac70 <col:20> Inherited
| `-OptimizeNoneAttr 0x561d4a1dacc8 <col:30> Inherited
|-CXXMethodDecl 0x561d4a1dad10 <line:155:5, col:62> col:55 cend 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x561d4a1dadc0 <col:20> Inherited
| `-OptimizeNoneAttr 0x561d4a1dae18 <col:30> Inherited
|-CXXMethodDecl 0x561d4a1dae40 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x561d4a1daef0 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x561d4a1dafa0 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x561d4a1db160 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x561d4a1db050 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x561d4a1db0c8 <col:37, col:63> col:57 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x561d4a1db2b0 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x561d4a1db220 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x561d4a1db458 <line:163:5, col:65> col:43 operator[] 'Timer *&(Vector::size_type)'
| |-ParmVarDecl 0x561d4a1db368 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x561d4a1db510 <col:20>
| `-OptimizeNoneAttr 0x561d4a1db568 <col:30>
|-CXXMethodDecl 0x561d4a1db688 <line:164:5, col:73> col:49 operator[] 'Timer *const &(Vector::size_type) const'
| |-ParmVarDecl 0x561d4a1db590 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x561d4a1db740 <col:20>
| `-OptimizeNoneAttr 0x561d4a1db798 <col:30>
|-CXXMethodDecl 0x561d4a1db850 <line:165:5, col:29> col:15 at 'Timer *&(Vector::size_type)' inline
| `-ParmVarDecl 0x561d4a1db7c0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x561d4a1db998 <line:166:5, col:37> col:21 at 'Timer *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x561d4a1db908 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x561d4a1dbac8 <line:167:5, col:21> col:15 front 'Timer *&()' inline
|-CXXMethodDecl 0x561d4a1dbbf8 <line:168:5, col:29> col:21 front 'Timer *const &() const' inline
|-CXXMethodDecl 0x561d4a1dbcc8 <line:169:5, col:20> col:15 back 'Timer *&()' inline
|-CXXMethodDecl 0x561d4a1dbd98 <line:170:5, col:28> col:21 back 'Timer *const &() const' inline
|-CXXMethodDecl 0x561d4a1dbed8 <line:172:5, col:39> col:15 unchecked_at 'Timer *&(Vector::size_type)' inline
| `-ParmVarDecl 0x561d4a1dbe48 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x561d4a1dc020 <line:173:5, col:47> col:21 unchecked_at 'Timer *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x561d4a1dbf90 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x561d4a1dc168 <line:174:5, col:59> col:15 at_u 'Timer *&(Vector::size_type)' inline
| |-ParmVarDecl 0x561d4a1dc0d8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x561d4a1dc220 <col:48> Inherited "" ""
|-CXXMethodDecl 0x561d4a1dc320 <line:175:5, col:71> col:21 at_u 'Timer *const &(Vector::size_type) const' inline
| |-ParmVarDecl 0x561d4a1dc290 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x561d4a1dc3d8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x561d4a1dc498 <line:177:5, col:20> col:15 data 'Timer **()' inline
|-CXXMethodDecl 0x561d4a1dc598 <line:178:5, col:28> col:21 data 'Timer *const *() const' inline
|-CXXMethodDecl 0x561d4a1dc718 <line:180:5, col:48> col:17 push_back 'void (Vector<Timer *>::value_argument_type)' inline
| `-ParmVarDecl 0x561d4a1dc658 <col:27, col:47> col:47 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-FunctionTemplateDecl 0x561d4a1dced8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x561d4a1dc7d0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Timer *>':'fast_argument<Timer *, false>'
| `-CXXMethodDecl 0x561d4a1dce38 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Timer *&&)' inline
|   `-ParmVarDecl 0x561d4a1dcd38 <col:58, col:62> col:62 v 'Timer *&&'
|-CXXMethodDecl 0x561d4a1dcfb8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x561d4a1dd108 <line:186:5, col:49> col:17 push_front 'void (Vector<Timer *>::value_argument_type)' inline
| `-ParmVarDecl 0x561d4a1dd078 <col:28, col:48> col:48 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x561d4a1dd1c0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x561d4a1dd408 <line:189:5, col:62> col:21 insert 'Vector<Timer *>::iterator (Vector<Timer *>::iterator, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x561d4a1dd280 <col:28, col:37> col:37 it 'Vector<Timer *>::iterator':'Timer **'
| `-ParmVarDecl 0x561d4a1dd2f8 <col:41, col:61> col:61 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x561d4a1dd5c8 <line:190:5, col:38> col:21 erase 'Vector<Timer *>::iterator (Vector<Timer *>::iterator)' inline
| `-ParmVarDecl 0x561d4a1dd4d8 <col:27, col:36> col:36 it 'Vector<Timer *>::iterator':'Timer **'
|-CXXMethodDecl 0x561d4a1dd818 <line:191:5, col:49> col:21 erase 'Vector<Timer *>::iterator (Vector<Timer *>::iterator, Vector<Timer *>::iterator)' inline
| |-ParmVarDecl 0x561d4a1dd690 <col:27, col:36> col:36 a 'Vector<Timer *>::iterator':'Timer **'
| `-ParmVarDecl 0x561d4a1dd708 <col:39, col:48> col:48 b 'Vector<Timer *>::iterator':'Timer **'
|-CXXMethodDecl 0x561d4a1dd8d8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x561d4a1ddb38 <line:195:5, col:34> col:17 swap 'void (Vector<Timer *> &)' inline
| `-ParmVarDecl 0x561d4a1dda40 <col:22, col:33> col:33 x 'Vector<Timer *> &'
`-CXXDestructorDecl 0x561d4a1ddc08 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x561d4a1ddc08

Layout: <CGRecordLayout
  LLVMType:%class.Vector.0 = type { %class.vector_memory.1 }
  NonVirtualBaseLLVMType:%class.Vector.0 = type { %class.vector_memory.1 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x561d4a19ea90 <../dummy_inc/click/sync.hh:194:1, line:211:1> line:194:7 referenced class SimpleSpinlock definition
|-DefinitionData empty standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x561d4a19eba8 <col:1, col:7> col:7 implicit referenced class SimpleSpinlock
|-AccessSpecDecl 0x561d4a19ec38 <col:24, col:30> col:24 public
|-CXXConstructorDecl 0x561d4a19ecc0 <line:196:5, col:27> col:12 SimpleSpinlock 'void ()' inline
|-CXXDestructorDecl 0x561d4a19edb0 <line:197:5, col:28> col:12 ~SimpleSpinlock 'void () noexcept' inline
|-CXXMethodDecl 0x561d4a19eeb0 <line:199:5, col:25> col:17 acquire 'void ()' inline
|-CXXMethodDecl 0x561d4a19ef70 <line:200:5, col:25> col:17 release 'void ()' inline
|-CXXMethodDecl 0x561d4a19f030 <line:201:5, col:25> col:17 attempt 'bool ()' inline
|-CXXConstructorDecl 0x561d4a19f158 <line:194:7> col:7 implicit constexpr SimpleSpinlock 'void (const SimpleSpinlock &)' inline default trivial noexcept-unevaluated 0x561d4a19f158
| `-ParmVarDecl 0x561d4a19f268 <col:7> col:7 'const SimpleSpinlock &'
`-CXXMethodDecl 0x561d4a1de9b8 <col:7> col:7 implicit operator= 'SimpleSpinlock &(const SimpleSpinlock &)' inline default trivial noexcept-unevaluated 0x561d4a1de9b8
  `-ParmVarDecl 0x561d4a1deac8 <col:7> col:7 'const SimpleSpinlock &'

Layout: <CGRecordLayout
  LLVMType:%class.SimpleSpinlock = type { i8 }
  NonVirtualBaseLLVMType:%class.SimpleSpinlock.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x561d4a1be2a0 prev 0x561d4a1093e8 <../dummy_inc/click/timerset.hh:12:1, line:90:1> line:12:7 referenced class TimerSet definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x561d4a1be398 <col:1, col:7> col:7 implicit referenced class TimerSet
|-AccessSpecDecl 0x561d4a1be428 <col:18, col:24> col:18 public
|-CXXConstructorDecl 0x561d4a1be4b0 <line:14:5, col:14> col:5 TimerSet 'void ()'
|-CXXMethodDecl 0x561d4a1be5a8 <line:16:5, col:67> col:15 timer_expiry_steady 'Timestamp () const'
| `-CompoundStmt 0x561d4a1dee30 <col:43, col:67>
|   `-ReturnStmt 0x561d4a1dee20 <col:45, col:52>
|     `-CXXConstructExpr 0x561d4a1dedf0 <col:52> 'Timestamp' 'void (const Timestamp &) noexcept'
|       `-MemberExpr 0x561d4a1dedc0 <col:52> 'const Timestamp' lvalue ->_timer_expiry 0x561d4a1bfd90
|         `-CXXThisExpr 0x561d4a1dedb0 <col:52> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x561d4a1be668 <line:17:5, col:53> col:22 timer_expiry_steady_adjusted 'Timestamp () const' inline
|-CXXMethodDecl 0x561d4a1be870 <line:19:5, col:64> col:16 next_timer_delay 'int (bool, Timestamp &) const' inline
| |-ParmVarDecl 0x561d4a1be718 <col:33, col:38> col:38 more_tasks 'bool'
| `-ParmVarDecl 0x561d4a1be790 <col:50, col:61> col:61 t 'Timestamp &'
|-CXXMethodDecl 0x561d4a1be968 <line:22:5, col:23> col:12 next_timer 'Timer *()'
|-CXXMethodDecl 0x561d4a1bea30 <line:24:5, col:67> col:14 max_timer_stride 'unsigned int () const'
| `-CompoundStmt 0x561d4a1deeb0 <col:39, col:67>
|   `-ReturnStmt 0x561d4a1deea0 <col:41, col:48>
|     `-ImplicitCastExpr 0x561d4a1dee88 <col:48> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x561d4a1dee58 <col:48> 'const unsigned int' lvalue ->_max_timer_stride 0x561d4a1bfe78
|         `-CXXThisExpr 0x561d4a1dee48 <col:48> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x561d4a1beaf8 <line:25:5, col:59> col:14 timer_stride 'unsigned int () const'
| `-CompoundStmt 0x561d4a1def30 <col:35, col:59>
|   `-ReturnStmt 0x561d4a1def20 <col:37, col:44>
|     `-ImplicitCastExpr 0x561d4a1def08 <col:44> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x561d4a1deed8 <col:44> 'const unsigned int' lvalue ->_timer_stride 0x561d4a1bfee0
|         `-CXXThisExpr 0x561d4a1deec8 <col:44> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x561d4a1bec40 <line:26:5, col:52> col:10 set_max_timer_stride 'void (unsigned int)'
| `-ParmVarDecl 0x561d4a1bebb0 <col:31, col:40> col:40 timer_stride 'unsigned int'
|-CXXMethodDecl 0x561d4a1bed88 <line:28:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x561d4a1becf8 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x561d4a1bef88 <line:30:5, col:57> col:10 run_timers 'void (RouterThread *, Master *)'
| |-ParmVarDecl 0x561d4a1bee40 <col:21, col:35> col:35 thread 'RouterThread *'
| `-ParmVarDecl 0x561d4a1beeb8 <col:43, col:51> col:51 master 'Master *'
|-CXXMethodDecl 0x561d4a1bf058 <line:32:5, col:23> col:17 fence 'void ()' inline
|-AccessSpecDecl 0x561d4a1bf0f8 <line:34:3, col:10> col:3 private
|-CXXRecordDecl 0x561d4a1bf120 <line:36:5, line:45:5> line:36:12 referenced struct heap_element definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x561d4a1bf238 <col:5, col:12> col:12 implicit referenced struct heap_element
| |-FieldDecl 0x561d4a1bf2d8 <line:37:2, col:12> col:12 referenced expiry_s 'Timestamp'
| |-FieldDecl 0x561d4a1bf338 <line:38:2, col:9> col:9 referenced t 'Timer *'
| `-CXXConstructorDecl 0x561d4a1bf468 <line:42:2, line:44:2> line:42:2 heap_element 'void (Timer *)'
|   |-ParmVarDecl 0x561d4a1bf398 <col:15, col:22> col:22 used t_ 'Timer *'
|   |-CXXCtorInitializer Field 0x561d4a1bf2d8 'expiry_s' 'Timestamp'
|   | `-CXXConstructExpr 0x561d4a1df008 <line:43:8, col:36> 'Timestamp' 'void (const Timestamp &) noexcept'
|   |   `-CXXMemberCallExpr 0x561d4a1defb0 <col:17, col:35> 'const Timestamp' lvalue
|   |     `-MemberExpr 0x561d4a1def80 <col:17, col:21> '<bound member function type>' ->expiry_steady 0x561d4a106878
|   |       `-ImplicitCastExpr 0x561d4a1defd0 <col:17> 'const Timer *' <NoOp>
|   |         `-ImplicitCastExpr 0x561d4a1def68 <col:17> 'Timer *' <LValueToRValue>
|   |           `-DeclRefExpr 0x561d4a1def48 <col:17> 'Timer *' lvalue ParmVar 0x561d4a1bf398 't_' 'Timer *'
|   |-CXXCtorInitializer Field 0x561d4a1bf338 't' 'Timer *'
|   | `-ImplicitCastExpr 0x561d4a1df0a0 <col:41> 'Timer *' <LValueToRValue>
|   |   `-DeclRefExpr 0x561d4a1df060 <col:41> 'Timer *' lvalue ParmVar 0x561d4a1bf398 't_' 'Timer *'
|   `-CompoundStmt 0x561d4a1df0f0 <col:45, line:44:2>
|-CXXRecordDecl 0x561d4a1bf530 <line:46:5, line:50:5> line:46:12 struct heap_less definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x561d4a1bf648 <col:5, col:12> col:12 implicit struct heap_less
| `-CXXMethodDecl 0x561d4a1bf898 <line:47:2, line:49:2> line:47:14 operator() 'bool (const TimerSet::heap_element &, const TimerSet::heap_element &)' inline
|   |-ParmVarDecl 0x561d4a1bf718 <col:25, col:45> col:45 used a 'const TimerSet::heap_element &'
|   |-ParmVarDecl 0x561d4a1bf790 <col:48, col:68> col:68 used b 'const TimerSet::heap_element &'
|   `-CompoundStmt 0x561d4a1df220 <col:71, line:49:2>
|     `-ReturnStmt 0x561d4a1df210 <line:48:6, col:28>
|       `-CXXOperatorCallExpr 0x561d4a1df1d8 <col:13, col:28> 'bool'
|         |-ImplicitCastExpr 0x561d4a1df1c0 <col:24> 'bool (*)(const Timestamp &, const Timestamp &)' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x561d4a1df1a0 <col:24> 'bool (const Timestamp &, const Timestamp &)' lvalue Function 0x561d4a1407c8 'operator<' 'bool (const Timestamp &, const Timestamp &)'
|         |-MemberExpr 0x561d4a1df120 <col:13, col:15> 'const Timestamp' lvalue .expiry_s 0x561d4a1bf2d8
|         | `-DeclRefExpr 0x561d4a1df100 <col:13> 'const TimerSet::heap_element' lvalue ParmVar 0x561d4a1bf718 'a' 'const TimerSet::heap_element &'
|         `-MemberExpr 0x561d4a1df170 <col:26, col:28> 'const Timestamp' lvalue .expiry_s 0x561d4a1bf2d8
|           `-DeclRefExpr 0x561d4a1df150 <col:26> 'const TimerSet::heap_element' lvalue ParmVar 0x561d4a1bf790 'b' 'const TimerSet::heap_element &'
|-CXXRecordDecl 0x561d4a1bf960 <line:51:5, line:55:5> line:51:12 struct heap_place definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x561d4a1bfa78 <col:5, col:12> col:12 implicit struct heap_place
| `-CXXMethodDecl 0x561d4a1bfc98 <line:52:2, line:54:2> line:52:14 operator() 'void (TimerSet::heap_element *, TimerSet::heap_element *)' inline
|   |-ParmVarDecl 0x561d4a1bfb18 <col:25, col:39> col:39 used begin 'TimerSet::heap_element *'
|   |-ParmVarDecl 0x561d4a1bfb90 <col:46, col:60> col:60 used t 'TimerSet::heap_element *'
|   `-CompoundStmt 0x561d4a1df428 <col:63, line:54:2>
|     `-BinaryOperator 0x561d4a1df408 <line:53:6, col:39> 'int' lvalue '='
|       |-MemberExpr 0x561d4a1df2b8 <col:6, col:12> 'int' lvalue ->_schedpos1 0x561d4a108888
|       | `-ImplicitCastExpr 0x561d4a1df2a0 <col:6, col:9> 'Timer *' <LValueToRValue>
|       |   `-MemberExpr 0x561d4a1df270 <col:6, col:9> 'Timer *' lvalue ->t 0x561d4a1bf338
|       |     `-ImplicitCastExpr 0x561d4a1df258 <col:6> 'TimerSet::heap_element *' <LValueToRValue>
|       |       `-DeclRefExpr 0x561d4a1df238 <col:6> 'TimerSet::heap_element *' lvalue ParmVar 0x561d4a1bfb90 't' 'TimerSet::heap_element *'
|       `-ImplicitCastExpr 0x561d4a1df3f0 <col:25, col:39> 'int' <IntegralCast>
|         `-BinaryOperator 0x561d4a1df3d0 <col:25, col:39> 'long' '+'
|           |-ParenExpr 0x561d4a1df378 <col:25, col:35> 'long'
|           | `-BinaryOperator 0x561d4a1df358 <col:26, col:30> 'long' '-'
|           |   |-ImplicitCastExpr 0x561d4a1df328 <col:26> 'TimerSet::heap_element *' <LValueToRValue>
|           |   | `-DeclRefExpr 0x561d4a1df2e8 <col:26> 'TimerSet::heap_element *' lvalue ParmVar 0x561d4a1bfb90 't' 'TimerSet::heap_element *'
|           |   `-ImplicitCastExpr 0x561d4a1df340 <col:30> 'TimerSet::heap_element *' <LValueToRValue>
|           |     `-DeclRefExpr 0x561d4a1df308 <col:30> 'TimerSet::heap_element *' lvalue ParmVar 0x561d4a1bfb18 'begin' 'TimerSet::heap_element *'
|           `-ImplicitCastExpr 0x561d4a1df3b8 <col:39> 'long' <IntegralCast>
|             `-IntegerLiteral 0x561d4a1df398 <col:39> 'int' 1
|-FieldDecl 0x561d4a1bfd90 <line:58:5, col:15> col:15 referenced _timer_expiry 'Timestamp'
| `-AlignedAttr 0x561d4a1bfe00 <col:44, col:53> aligned
|   `-ConstantExpr 0x561d4a1bfde0 <col:52> 'int' Int: 8
|     `-IntegerLiteral 0x561d4a1bfd60 <col:52> 'int' 8
|-FieldDecl 0x561d4a1bfe78 <line:60:5, col:14> col:14 referenced _max_timer_stride 'unsigned int'
|-FieldDecl 0x561d4a1bfee0 <line:61:5, col:14> col:14 referenced _timer_stride 'unsigned int'
|-FieldDecl 0x561d4a1bff48 <line:62:5, col:14> col:14 _timer_count 'unsigned int'
|-FieldDecl 0x561d4a1cf030 <line:63:5, col:26> col:26 referenced _timer_heap 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>'
|-FieldDecl 0x561d4a1ddcf0 <line:64:5, col:21> col:21 _timer_runchunk 'Vector<Timer *>':'Vector<Timer *>'
|-FieldDecl 0x561d4a1ddd50 <line:65:5, col:20> col:20 _timer_lock 'SimpleSpinlock'
|-FieldDecl 0x561d4a1dddb0 <line:71:5, col:15> col:15 _timer_check 'Timestamp'
|-FieldDecl 0x561d4a1dde10 <line:72:5, col:14> col:14 _timer_check_reports 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x561d4a1ddf00 <line:74:5, col:38> col:17 run_one_timer 'void (Timer *)' inline
| `-ParmVarDecl 0x561d4a1dde70 <col:31, col:37> col:38 'Timer *'
|-CXXMethodDecl 0x561d4a1ddfc8 <line:76:5, line:81:5> line:76:10 set_timer_expiry 'void ()'
| `-CompoundStmt 0x561d4a1df880 <col:29, line:81:5>
|   `-IfStmt 0x561d4a1df858 <line:77:2, line:80:32> has_else
|     |-ImplicitCastExpr 0x561d4a1df510 <line:77:6, col:23> 'bool' <IntegralToBoolean>
|     | `-CXXMemberCallExpr 0x561d4a1df4b0 <col:6, col:23> 'Vector::size_type':'int'
|     |   `-MemberExpr 0x561d4a1df480 <col:6, col:18> '<bound member function type>' .size 0x561d4a1cc078
|     |     `-ImplicitCastExpr 0x561d4a1df4f8 <col:6> 'const Vector<TimerSet::heap_element>' lvalue <NoOp>
|     |       `-MemberExpr 0x561d4a1df450 <col:6> 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>' lvalue ->_timer_heap 0x561d4a1cf030
|     |         `-CXXThisExpr 0x561d4a1df440 <col:6> 'TimerSet *' implicit this
|     |-CXXOperatorCallExpr 0x561d4a1df700 <line:78:6, col:50> 'Timestamp' lvalue
|     | |-ImplicitCastExpr 0x561d4a1df6e8 <col:20> 'Timestamp &(*)(const Timestamp &) noexcept' <FunctionToPointerDecay>
|     | | `-DeclRefExpr 0x561d4a1df6c8 <col:20> 'Timestamp &(const Timestamp &) noexcept' lvalue CXXMethod 0x561d49e29de8 'operator=' 'Timestamp &(const Timestamp &) noexcept'
|     | |-MemberExpr 0x561d4a1df538 <col:6> 'Timestamp' lvalue ->_timer_expiry 0x561d4a1bfd90
|     | | `-CXXThisExpr 0x561d4a1df528 <col:6> 'TimerSet *' implicit this
|     | `-ImplicitCastExpr 0x561d4a1df6b0 <col:22, col:50> 'const Timestamp' lvalue <NoOp>
|     |   `-MemberExpr 0x561d4a1df680 <col:22, col:50> 'Timestamp' lvalue .expiry_s 0x561d4a1bf2d8
|     |     `-CXXMemberCallExpr 0x561d4a1df658 <col:22, col:48> 'TimerSet::heap_element':'TimerSet::heap_element' lvalue
|     |       |-MemberExpr 0x561d4a1df628 <col:22, col:34> '<bound member function type>' .unchecked_at 0x561d4a1cd118
|     |       | `-MemberExpr 0x561d4a1df578 <col:22> 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>' lvalue ->_timer_heap 0x561d4a1cf030
|     |       |   `-CXXThisExpr 0x561d4a1df568 <col:22> 'TimerSet *' implicit this
|     |       `-IntegerLiteral 0x561d4a1df608 <col:47> 'int' 0
|     `-ExprWithCleanups 0x561d4a1df840 <line:80:6, col:32> 'Timestamp' lvalue
|       `-CXXOperatorCallExpr 0x561d4a1df808 <col:6, col:32> 'Timestamp' lvalue
|         |-ImplicitCastExpr 0x561d4a1df7f0 <col:20> 'Timestamp &(*)(Timestamp &&) noexcept' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x561d4a1df7d0 <col:20> 'Timestamp &(Timestamp &&) noexcept' lvalue CXXMethod 0x561d49e2a298 'operator=' 'Timestamp &(Timestamp &&) noexcept'
|         |-MemberExpr 0x561d4a1df748 <col:6> 'Timestamp' lvalue ->_timer_expiry 0x561d4a1bfd90
|         | `-CXXThisExpr 0x561d4a1df738 <col:6> 'TimerSet *' implicit this
|         `-MaterializeTemporaryExpr 0x561d4a1df7b8 <col:22, col:32> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x561d4a1df788 <col:22, col:32> 'Timestamp' 'void ()'
|-CXXMethodDecl 0x561d4a1de108 <line:82:5, col:37> col:10 check_timer_expiry 'void (Timer *)'
| `-ParmVarDecl 0x561d4a1de078 <col:29, col:36> col:36 t 'Timer *'
|-CXXMethodDecl 0x561d4a1de1d0 <line:84:5, col:29> col:17 used lock_timers 'void ()' inline
|-CXXMethodDecl 0x561d4a1de290 <line:85:5, col:37> col:17 attempt_lock_timers 'bool ()' inline
|-CXXMethodDecl 0x561d4a1de350 <line:86:5, col:31> col:17 used unlock_timers 'void ()' inline
|-FriendDecl 0x561d4a1de440 <line:88:5, col:18> col:12 'class Timer':'Timer'
|-CXXConstructorDecl 0x561d4a1de4a8 <line:12:7> col:7 implicit TimerSet 'void (const TimerSet &)' inline default noexcept-unevaluated 0x561d4a1de4a8
| `-ParmVarDecl 0x561d4a1de5b8 <col:7> col:7 'const TimerSet &'
|-CXXConstructorDecl 0x561d4a1de658 <col:7> col:7 implicit TimerSet 'void (TimerSet &&)' inline default noexcept-unevaluated 0x561d4a1de658
| `-ParmVarDecl 0x561d4a1de768 <col:7> col:7 'TimerSet &&'
|-CXXMethodDecl 0x561d4a1de808 <col:7> col:7 implicit operator= 'TimerSet &(const TimerSet &)' inline default noexcept-unevaluated 0x561d4a1de808
| `-ParmVarDecl 0x561d4a1de918 <col:7> col:7 'const TimerSet &'
|-CXXMethodDecl 0x561d4a1deb38 <col:7> col:7 implicit operator= 'TimerSet &(TimerSet &&)' inline default noexcept-unevaluated 0x561d4a1deb38
| `-ParmVarDecl 0x561d4a1dec48 <col:7> col:7 'TimerSet &&'
`-CXXDestructorDecl 0x561d4a1decd0 <col:7> col:7 implicit ~TimerSet 'void ()' inline default noexcept-unevaluated 0x561d4a1decd0

Layout: <CGRecordLayout
  LLVMType:%class.TimerSet = type <{ %class.Timestamp, i32, i32, i32, [4 x i8], %class.Vector, %class.Vector.0, %class.SimpleSpinlock, [7 x i8], %class.Timestamp, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.TimerSet.base = type <{ %class.Timestamp, i32, i32, i32, [4 x i8], %class.Vector, %class.Vector.0, %class.SimpleSpinlock, [7 x i8], %class.Timestamp, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x561d4a215718 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'pollfd'
|-CXXRecordDecl 0x561d4a215928 prev 0x561d4a215718 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x561d4a216a00 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<pollfd>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x561d4a2169b0 'typename array_memory<pollfd>::type' sugar
|   `-TypedefType 0x561d4a216990 'conditional<true, sized_array_memory<8>, typed_array_memory<pollfd> >::type' sugar
|     |-Typedef 0x561d4a216840 'type'
|     `-SubstTemplateTypeParmType 0x561d4a1d0040 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x561d49ee69c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561d49ee6968 'T'
|       `-RecordType 0x561d4a1cfb90 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x561d4a1cfaa8 'sized_array_memory'
|-FieldDecl 0x561d4a216b00 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<pollfd>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x561d4a216b50 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x561d4a216b88 <line:118:5, col:15> col:15 value_type 'pollfd':'pollfd'
| `-SubstTemplateTypeParmType 0x561d4a2159c0 'pollfd' sugar
|   |-TemplateTypeParmType 0x561d49f1e8d0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x561d49f1e878 'T'
|   `-RecordType 0x561d4a209790 'pollfd'
|     `-CXXRecord 0x561d4a209700 'pollfd'
|-TypedefDecl 0x561d4a216c48 <line:119:5, col:16> col:16 reference 'pollfd &'
| `-LValueReferenceType 0x561d4a216c10 'pollfd &'
|   `-SubstTemplateTypeParmType 0x561d4a2159c0 'pollfd' sugar
|     |-TemplateTypeParmType 0x561d49f1e8d0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x561d49f1e878 'T'
|     `-RecordType 0x561d4a209790 'pollfd'
|       `-CXXRecord 0x561d4a209700 'pollfd'
|-TypedefDecl 0x561d4a216d08 <line:120:5, col:22> col:22 const_reference 'const pollfd &'
| `-LValueReferenceType 0x561d4a216cd0 'const pollfd &'
|   `-QualType 0x561d4a2159c1 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x561d4a2159c0 'pollfd' sugar
|       |-TemplateTypeParmType 0x561d49f1e8d0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561d49f1e878 'T'
|       `-RecordType 0x561d4a209790 'pollfd'
|         `-CXXRecord 0x561d4a209700 'pollfd'
|-TypedefDecl 0x561d4a216d98 <line:121:5, col:16> col:16 pointer 'pollfd *'
| `-PointerType 0x561d4a216d60 'pollfd *'
|   `-SubstTemplateTypeParmType 0x561d4a2159c0 'pollfd' sugar
|     |-TemplateTypeParmType 0x561d49f1e8d0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x561d49f1e878 'T'
|     `-RecordType 0x561d4a209790 'pollfd'
|       `-CXXRecord 0x561d4a209700 'pollfd'
|-TypedefDecl 0x561d4a216e58 <line:122:5, col:22> col:22 const_pointer 'const pollfd *'
| `-PointerType 0x561d4a216e20 'const pollfd *'
|   `-QualType 0x561d4a2159c1 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x561d4a2159c0 'pollfd' sugar
|       |-TemplateTypeParmType 0x561d49f1e8d0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561d49f1e878 'T'
|       `-RecordType 0x561d4a209790 'pollfd'
|         `-CXXRecord 0x561d4a209700 'pollfd'
|-TypedefDecl 0x561d4a217a30 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<pollfd>::type':'pollfd'
| `-ElaboratedType 0x561d4a2179e0 'typename fast_argument<pollfd>::type' sugar
|   `-TypedefType 0x561d4a2179c0 'fast_argument<pollfd, false>::type' sugar
|     |-Typedef 0x561d4a217950 'type'
|     `-SubstTemplateTypeParmType 0x561d4a217710 'pollfd' sugar
|       |-TemplateTypeParmType 0x561d49ef17c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561d49ef1770 'T'
|       `-RecordType 0x561d4a209790 'pollfd'
|         `-CXXRecord 0x561d4a209700 'pollfd'
|-TypedefDecl 0x561d4a217a98 <line:126:5, col:22> col:22 const_access_type 'const pollfd &'
| `-LValueReferenceType 0x561d4a216cd0 'const pollfd &'
|   `-QualType 0x561d4a2159c1 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x561d4a2159c0 'pollfd' sugar
|       |-TemplateTypeParmType 0x561d49f1e8d0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561d49f1e878 'T'
|       `-RecordType 0x561d4a209790 'pollfd'
|         `-CXXRecord 0x561d4a209700 'pollfd'
|-TypedefDecl 0x561d4a217af0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x561d49c1f370 'int'
|-TypedefDecl 0x561d4a217b58 <line:130:5, col:16> col:16 iterator 'pollfd *'
| `-PointerType 0x561d4a216d60 'pollfd *'
|   `-SubstTemplateTypeParmType 0x561d4a2159c0 'pollfd' sugar
|     |-TemplateTypeParmType 0x561d49f1e8d0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x561d49f1e878 'T'
|     `-RecordType 0x561d4a209790 'pollfd'
|       `-CXXRecord 0x561d4a209700 'pollfd'
|-TypedefDecl 0x561d4a217bc0 <line:131:5, col:22> col:22 const_iterator 'const pollfd *'
| `-PointerType 0x561d4a216e20 'const pollfd *'
|   `-QualType 0x561d4a2159c1 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x561d4a2159c0 'pollfd' sugar
|       |-TemplateTypeParmType 0x561d49f1e8d0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561d49f1e878 'T'
|       `-RecordType 0x561d4a209790 'pollfd'
|         `-CXXRecord 0x561d4a209700 'pollfd'
|-EnumDecl 0x561d4a217c18 <line:134:5> col:5
| `-EnumConstantDecl 0x561d4a217d10 <col:12, col:40> col:12 RESERVE_GROW 'Vector<pollfd>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x561d4a217cf0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x561d49f1ff58 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x561d49f1ff30 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x561d49f1ff10 <col:40> 'int' 1
|-CXXConstructorDecl 0x561d4a217d98 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x561d4a218028 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x561d4a217e50 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x561d4a217ef0 <col:41, col:61> col:61 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXConstructorDecl 0x561d4a2182e8 <line:139:5, col:37> col:12 Vector 'void (const Vector<pollfd> &)' inline
| `-ParmVarDecl 0x561d4a2181d0 <col:19, col:36> col:36 x 'const Vector<pollfd> &'
|-CXXConstructorDecl 0x561d4a2185a8 <line:141:5, col:32> col:12 Vector 'void (Vector<pollfd> &&)' inline
| `-ParmVarDecl 0x561d4a218490 <col:19, col:31> col:31 x 'Vector<pollfd> &&'
|-CXXMethodDecl 0x561d4a2188f0 <line:144:5, col:51> col:23 operator= 'Vector<pollfd> &(const Vector<pollfd> &)' inline
| `-ParmVarDecl 0x561d4a2187d0 <col:33, col:50> col:50 x 'const Vector<pollfd> &'
|-CXXMethodDecl 0x561d4a218c00 <line:146:5, col:46> col:23 operator= 'Vector<pollfd> &(Vector<pollfd> &&)' inline
| `-ParmVarDecl 0x561d4a218ae0 <col:33, col:45> col:45 x 'Vector<pollfd> &&'
|-CXXMethodDecl 0x561d4a218ef0 <line:148:5, col:70> col:23 assign 'Vector<pollfd> &(Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x561d4a218d38 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x561d4a218db0 <col:43, col:69> col:63 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x561d4a219048 <line:150:5, col:55> col:49 begin 'Vector<pollfd>::iterator ()'
| |-NoInlineAttr 0x561d4a219128 <col:20> Inherited
| `-OptimizeNoneAttr 0x561d4a219180 <col:30> Inherited
|-CXXMethodDecl 0x561d4a2191c8 <line:151:5, col:53> col:49 end 'Vector<pollfd>::iterator ()'
| |-NoInlineAttr 0x561d4a219278 <col:20> Inherited
| `-OptimizeNoneAttr 0x561d4a2192d0 <col:30> Inherited
|-CXXMethodDecl 0x561d4a219398 <line:152:5, col:63> col:55 begin 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x561d4a219448 <col:20> Inherited
| `-OptimizeNoneAttr 0x561d4a2194a0 <col:30> Inherited
|-CXXMethodDecl 0x561d4a2194e8 <line:153:5, col:61> col:55 end 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x561d4a219598 <col:20> Inherited
| `-OptimizeNoneAttr 0x561d4a2195f0 <col:30> Inherited
|-CXXMethodDecl 0x561d4a219638 <line:154:5, col:64> col:55 cbegin 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x561d4a2196e8 <col:20> Inherited
| `-OptimizeNoneAttr 0x561d4a219740 <col:30> Inherited
|-CXXMethodDecl 0x561d4a219788 <line:155:5, col:62> col:55 cend 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x561d4a219838 <col:20> Inherited
| `-OptimizeNoneAttr 0x561d4a219890 <col:30> Inherited
|-CXXMethodDecl 0x561d4a2198b8 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x561d4a219968 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x561d4a219a18 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x561d4a219bd8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x561d4a219ac8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x561d4a219b40 <col:37, col:63> col:57 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x561d4a219d28 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x561d4a219c98 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x561d4a219ed8 <line:163:5, col:65> col:43 operator[] 'pollfd &(Vector::size_type)'
| |-ParmVarDecl 0x561d4a219de0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x561d4a219f90 <col:20>
| `-OptimizeNoneAttr 0x561d4a219fe8 <col:30>
|-CXXMethodDecl 0x561d4a21a108 <line:164:5, col:73> col:49 operator[] 'const pollfd &(Vector::size_type) const'
| |-ParmVarDecl 0x561d4a21a010 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x561d4a21a1c0 <col:20>
| `-OptimizeNoneAttr 0x561d4a21a218 <col:30>
|-CXXMethodDecl 0x561d4a21a2d0 <line:165:5, col:29> col:15 at 'pollfd &(Vector::size_type)' inline
| `-ParmVarDecl 0x561d4a21a240 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x561d4a21a418 <line:166:5, col:37> col:21 at 'const pollfd &(Vector::size_type) const' inline
| `-ParmVarDecl 0x561d4a21a388 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x561d4a21a548 <line:167:5, col:21> col:15 front 'pollfd &()' inline
|-CXXMethodDecl 0x561d4a21a678 <line:168:5, col:29> col:21 front 'const pollfd &() const' inline
|-CXXMethodDecl 0x561d4a21a748 <line:169:5, col:20> col:15 back 'pollfd &()' inline
|-CXXMethodDecl 0x561d4a21a818 <line:170:5, col:28> col:21 back 'const pollfd &() const' inline
|-CXXMethodDecl 0x561d4a21a958 <line:172:5, col:39> col:15 unchecked_at 'pollfd &(Vector::size_type)' inline
| `-ParmVarDecl 0x561d4a21a8c8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x561d4a21aaa0 <line:173:5, col:47> col:21 unchecked_at 'const pollfd &(Vector::size_type) const' inline
| `-ParmVarDecl 0x561d4a21aa10 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x561d4a21abe8 <line:174:5, col:59> col:15 at_u 'pollfd &(Vector::size_type)' inline
| |-ParmVarDecl 0x561d4a21ab58 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x561d4a21aca0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x561d4a21ada0 <line:175:5, col:71> col:21 at_u 'const pollfd &(Vector::size_type) const' inline
| |-ParmVarDecl 0x561d4a21ad10 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x561d4a21ae58 <col:60> Inherited "" ""
|-CXXMethodDecl 0x561d4a21af18 <line:177:5, col:20> col:15 data 'pollfd *()' inline
|-CXXMethodDecl 0x561d4a21b018 <line:178:5, col:28> col:21 data 'const pollfd *() const' inline
|-CXXMethodDecl 0x561d4a21b1c8 <line:180:5, col:48> col:17 push_back 'void (Vector<pollfd>::value_argument_type)' inline
| `-ParmVarDecl 0x561d4a21b0d8 <col:27, col:47> col:47 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-FunctionTemplateDecl 0x561d4a21b988 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x561d4a21b280 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<pollfd>':'fast_argument<pollfd, false>'
| `-CXXMethodDecl 0x561d4a21b8e8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (pollfd &&)' inline
|   `-ParmVarDecl 0x561d4a21b7e8 <col:58, col:62> col:62 v 'pollfd &&'
|-CXXMethodDecl 0x561d4a21ba68 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x561d4a21bbb8 <line:186:5, col:49> col:17 push_front 'void (Vector<pollfd>::value_argument_type)' inline
| `-ParmVarDecl 0x561d4a21bb28 <col:28, col:48> col:48 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x561d4a21bc70 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x561d4a21beb8 <line:189:5, col:62> col:21 insert 'Vector<pollfd>::iterator (Vector<pollfd>::iterator, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x561d4a21bd30 <col:28, col:37> col:37 it 'Vector<pollfd>::iterator':'pollfd *'
| `-ParmVarDecl 0x561d4a21bda8 <col:41, col:61> col:61 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x561d4a21c078 <line:190:5, col:38> col:21 erase 'Vector<pollfd>::iterator (Vector<pollfd>::iterator)' inline
| `-ParmVarDecl 0x561d4a21bf88 <col:27, col:36> col:36 it 'Vector<pollfd>::iterator':'pollfd *'
|-CXXMethodDecl 0x561d4a21c2c8 <line:191:5, col:49> col:21 erase 'Vector<pollfd>::iterator (Vector<pollfd>::iterator, Vector<pollfd>::iterator)' inline
| |-ParmVarDecl 0x561d4a21c140 <col:27, col:36> col:36 a 'Vector<pollfd>::iterator':'pollfd *'
| `-ParmVarDecl 0x561d4a21c1b8 <col:39, col:48> col:48 b 'Vector<pollfd>::iterator':'pollfd *'
|-CXXMethodDecl 0x561d4a21c388 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x561d4a21c608 <line:195:5, col:34> col:17 swap 'void (Vector<pollfd> &)' inline
| `-ParmVarDecl 0x561d4a21c4f0 <col:22, col:33> col:33 x 'Vector<pollfd> &'
`-CXXDestructorDecl 0x561d4a21c6d8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x561d4a21c6d8

Layout: <CGRecordLayout
  LLVMType:%class.Vector.3 = type { %class.vector_memory.1 }
  NonVirtualBaseLLVMType:%class.Vector.3 = type { %class.vector_memory.1 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x561d4a21dcc0 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<24>'
|-CXXRecordDecl 0x561d4a21de98 prev 0x561d4a21dcc0 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x561d4a21df28 <col:46, col:52> col:46 public
|-TypedefDecl 0x561d4a21df50 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x561d49c1f370 'int'
|-TypedefDecl 0x561d4a21fb20 <line:13:5, col:31> col:31 type 'typename sized_array_memory<24>::type':'char_array<24>'
| `-ElaboratedType 0x561d4a21fad0 'typename sized_array_memory<24>::type' sugar
|   `-TypedefType 0x561d4a21e400 'sized_array_memory<24>::type' sugar
|     |-Typedef 0x561d4a21e300 'type'
|     `-TemplateSpecializationType 0x561d4a21e290 'char_array<24UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x561d4a21e170 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 24
|       |   `-SubstNonTypeTemplateParmExpr 0x561d4a21e150 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x561d4a21e130 <col:24> 'unsigned long' 24
|       `-RecordType 0x561d4a21e270 'char_array<24>'
|         `-ClassTemplateSpecialization 0x561d4a21e190 'char_array'
|-TypedefDecl 0x561d4a21fbd8 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<24> >::type *'
| `-PointerType 0x561d4a21fba0 'vector_memory<sized_array_memory<24> >::type *'
|   `-TypedefType 0x561d4a21fb80 'vector_memory<sized_array_memory<24> >::type' sugar
|     |-Typedef 0x561d4a21fb20 'type'
|     `-ElaboratedType 0x561d4a21fad0 'typename sized_array_memory<24>::type' sugar
|       `-TypedefType 0x561d4a21e400 'sized_array_memory<24>::type' sugar
|         |-Typedef 0x561d4a21e300 'type'
|         `-TemplateSpecializationType 0x561d4a21e290 'char_array<24UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x561d4a21e170 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 24
|           |   `-SubstNonTypeTemplateParmExpr 0x561d4a21e150 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x561d4a21e130 <col:24> 'unsigned long' 24
|           `-RecordType 0x561d4a21e270 'char_array<24>'
|             `-ClassTemplateSpecialization 0x561d4a21e190 'char_array'
|-CXXMethodDecl 0x561d4a21fd58 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<24> >::type *) const' inline
| `-ParmVarDecl 0x561d4a21fc68 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXConstructorDecl 0x561d4a21fe48 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x561d4a21ff28 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x561d4a21ff28
|-CXXMethodDecl 0x561d4a2201f8 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<24> > &)'
| `-ParmVarDecl 0x561d4a220100 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<24> > &'
|-CXXMethodDecl 0x561d4a220438 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x561d4a2202b0 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x561d4a220328 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x561d4a220608 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x561d4a2204f8 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x561d4a220570 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x561d4a220768 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<24> >::iterator ()'
|-CXXMethodDecl 0x561d4a220838 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<24> >::iterator ()'
|-CXXMethodDecl 0x561d4a220a88 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<24> >::iterator (vector_memory<sized_array_memory<24> >::iterator, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x561d4a2208f8 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
| `-ParmVarDecl 0x561d4a220970 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x561d4a220ce8 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<24> >::iterator (vector_memory<sized_array_memory<24> >::iterator, vector_memory<sized_array_memory<24> >::iterator)'
| |-ParmVarDecl 0x561d4a220b58 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
| `-ParmVarDecl 0x561d4a220bd0 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x561d4a220ea8 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<24> >::type *)' inline
| `-ParmVarDecl 0x561d4a220db8 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x561d4a221068 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<24> >::type *)' inline
| `-ParmVarDecl 0x561d4a220f70 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x561d4a221120 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x561d4a2211d0 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x561d4a221408 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x561d4a221280 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x561d4a2212f8 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x561d4a2216a8 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<24> > &)'
| `-ParmVarDecl 0x561d4a2215b0 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<24> > &'
|-FieldDecl 0x561d4a221770 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<24> >::type *'
|-FieldDecl 0x561d4a2217c0 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x561d4a221810 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.5 = type { %struct.char_array.6*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.5 = type { %struct.char_array.6*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x561d4a21c820 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'SelectSet::SelectorInfo'
|-CXXRecordDecl 0x561d4a21ca28 prev 0x561d4a21c820 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x561d4a21dc30 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<SelectorInfo>::type':'sized_array_memory<24>'
| `-ElaboratedType 0x561d4a21dbe0 'typename array_memory<SelectorInfo>::type' sugar
|   `-TypedefType 0x561d4a21dbc0 'conditional<true, sized_array_memory<24>, typed_array_memory<SelectSet::SelectorInfo> >::type' sugar
|     |-Typedef 0x561d4a21da70 'type'
|     `-SubstTemplateTypeParmType 0x561d4a21d890 'sized_array_memory<24>' sugar
|       |-TemplateTypeParmType 0x561d49ee69c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561d49ee6968 'T'
|       `-RecordType 0x561d4a21d3e0 'sized_array_memory<24>'
|         `-ClassTemplateSpecialization 0x561d4a21d300 'sized_array_memory'
|-FieldDecl 0x561d4a221860 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<SelectSet::SelectorInfo>::array_memory_type>':'vector_memory<sized_array_memory<24> >' mutable
|-AccessSpecDecl 0x561d4a2218b0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x561d4a2218e8 <line:118:5, col:15> col:15 value_type 'SelectSet::SelectorInfo':'SelectSet::SelectorInfo'
| `-SubstTemplateTypeParmType 0x561d4a21cac0 'SelectSet::SelectorInfo' sugar
|   |-TemplateTypeParmType 0x561d49f1e8d0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x561d49f1e878 'T'
|   `-RecordType 0x561d4a215280 'SelectSet::SelectorInfo'
|     `-CXXRecord 0x561d4a2151f0 'SelectorInfo'
|-TypedefDecl 0x561d4a2219a8 <line:119:5, col:16> col:16 reference 'SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x561d4a221970 'SelectSet::SelectorInfo &'
|   `-SubstTemplateTypeParmType 0x561d4a21cac0 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x561d49f1e8d0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x561d49f1e878 'T'
|     `-RecordType 0x561d4a215280 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x561d4a2151f0 'SelectorInfo'
|-TypedefDecl 0x561d4a221a68 <line:120:5, col:22> col:22 const_reference 'const SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x561d4a221a30 'const SelectSet::SelectorInfo &'
|   `-QualType 0x561d4a21cac1 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x561d4a21cac0 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x561d49f1e8d0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561d49f1e878 'T'
|       `-RecordType 0x561d4a215280 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x561d4a2151f0 'SelectorInfo'
|-TypedefDecl 0x561d4a221af8 <line:121:5, col:16> col:16 pointer 'SelectSet::SelectorInfo *'
| `-PointerType 0x561d4a221ac0 'SelectSet::SelectorInfo *'
|   `-SubstTemplateTypeParmType 0x561d4a21cac0 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x561d49f1e8d0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x561d49f1e878 'T'
|     `-RecordType 0x561d4a215280 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x561d4a2151f0 'SelectorInfo'
|-TypedefDecl 0x561d4a221bb8 <line:122:5, col:22> col:22 const_pointer 'const SelectSet::SelectorInfo *'
| `-PointerType 0x561d4a221b80 'const SelectSet::SelectorInfo *'
|   `-QualType 0x561d4a21cac1 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x561d4a21cac0 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x561d49f1e8d0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561d49f1e878 'T'
|       `-RecordType 0x561d4a215280 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x561d4a2151f0 'SelectorInfo'
|-TypedefDecl 0x561d4a222810 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<SelectorInfo>::type':'const SelectSet::SelectorInfo &'
| `-ElaboratedType 0x561d4a2227c0 'typename fast_argument<SelectorInfo>::type' sugar
|   `-TypedefType 0x561d4a2227a0 'fast_argument<SelectSet::SelectorInfo, true>::type' sugar
|     |-Typedef 0x561d4a2226d8 'type'
|     `-LValueReferenceType 0x561d4a2226a0 'const SelectSet::SelectorInfo &'
|       `-QualType 0x561d4a222441 'const SelectSet::SelectorInfo' const
|         `-SubstTemplateTypeParmType 0x561d4a222440 'SelectSet::SelectorInfo' sugar
|           |-TemplateTypeParmType 0x561d49ef1090 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x561d49ef1038 'T'
|           `-RecordType 0x561d4a215280 'SelectSet::SelectorInfo'
|             `-CXXRecord 0x561d4a2151f0 'SelectorInfo'
|-TypedefDecl 0x561d4a222878 <line:126:5, col:22> col:22 const_access_type 'const SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x561d4a221a30 'const SelectSet::SelectorInfo &'
|   `-QualType 0x561d4a21cac1 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x561d4a21cac0 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x561d49f1e8d0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561d49f1e878 'T'
|       `-RecordType 0x561d4a215280 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x561d4a2151f0 'SelectorInfo'
|-TypedefDecl 0x561d4a2228d0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x561d49c1f370 'int'
|-TypedefDecl 0x561d4a222938 <line:130:5, col:16> col:16 iterator 'SelectSet::SelectorInfo *'
| `-PointerType 0x561d4a221ac0 'SelectSet::SelectorInfo *'
|   `-SubstTemplateTypeParmType 0x561d4a21cac0 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x561d49f1e8d0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x561d49f1e878 'T'
|     `-RecordType 0x561d4a215280 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x561d4a2151f0 'SelectorInfo'
|-TypedefDecl 0x561d4a2229a0 <line:131:5, col:22> col:22 const_iterator 'const SelectSet::SelectorInfo *'
| `-PointerType 0x561d4a221b80 'const SelectSet::SelectorInfo *'
|   `-QualType 0x561d4a21cac1 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x561d4a21cac0 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x561d49f1e8d0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561d49f1e878 'T'
|       `-RecordType 0x561d4a215280 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x561d4a2151f0 'SelectorInfo'
|-EnumDecl 0x561d4a2229f8 <line:134:5> col:5
| `-EnumConstantDecl 0x561d4a222af0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<SelectSet::SelectorInfo>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x561d4a222ad0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x561d49f1ff58 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x561d49f1ff30 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x561d49f1ff10 <col:40> 'int' 1
|-CXXConstructorDecl 0x561d4a222b78 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x561d4a222e08 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x561d4a222c30 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x561d4a222cd0 <col:41, col:61> col:61 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXConstructorDecl 0x561d4a2230c8 <line:139:5, col:37> col:12 Vector 'void (const Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x561d4a222fb0 <col:19, col:36> col:36 x 'const Vector<SelectSet::SelectorInfo> &'
|-CXXConstructorDecl 0x561d4a223388 <line:141:5, col:32> col:12 Vector 'void (Vector<SelectSet::SelectorInfo> &&)' inline
| `-ParmVarDecl 0x561d4a223270 <col:19, col:31> col:31 x 'Vector<SelectSet::SelectorInfo> &&'
|-CXXMethodDecl 0x561d4a2236d0 <line:144:5, col:51> col:23 operator= 'Vector<SelectSet::SelectorInfo> &(const Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x561d4a2235b0 <col:33, col:50> col:50 x 'const Vector<SelectSet::SelectorInfo> &'
|-CXXMethodDecl 0x561d4a2239e0 <line:146:5, col:46> col:23 operator= 'Vector<SelectSet::SelectorInfo> &(Vector<SelectSet::SelectorInfo> &&)' inline
| `-ParmVarDecl 0x561d4a2238c0 <col:33, col:45> col:45 x 'Vector<SelectSet::SelectorInfo> &&'
|-CXXMethodDecl 0x561d4a223cd0 <line:148:5, col:70> col:23 assign 'Vector<SelectSet::SelectorInfo> &(Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x561d4a223b18 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x561d4a223b90 <col:43, col:69> col:63 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x561d4a223e28 <line:150:5, col:55> col:49 begin 'Vector<SelectSet::SelectorInfo>::iterator ()'
| |-NoInlineAttr 0x561d4a223f08 <col:20> Inherited
| `-OptimizeNoneAttr 0x561d4a223f60 <col:30> Inherited
|-CXXMethodDecl 0x561d4a223fa8 <line:151:5, col:53> col:49 end 'Vector<SelectSet::SelectorInfo>::iterator ()'
| |-NoInlineAttr 0x561d4a224058 <col:20> Inherited
| `-OptimizeNoneAttr 0x561d4a2240b0 <col:30> Inherited
|-CXXMethodDecl 0x561d4a224178 <line:152:5, col:63> col:55 begin 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x561d4a224228 <col:20> Inherited
| `-OptimizeNoneAttr 0x561d4a224280 <col:30> Inherited
|-CXXMethodDecl 0x561d4a2242c8 <line:153:5, col:61> col:55 end 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x561d4a224378 <col:20> Inherited
| `-OptimizeNoneAttr 0x561d4a2243d0 <col:30> Inherited
|-CXXMethodDecl 0x561d4a224418 <line:154:5, col:64> col:55 cbegin 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x561d4a2244c8 <col:20> Inherited
| `-OptimizeNoneAttr 0x561d4a224520 <col:30> Inherited
|-CXXMethodDecl 0x561d4a2245c0 <line:155:5, col:62> col:55 cend 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x561d4a224670 <col:20> Inherited
| `-OptimizeNoneAttr 0x561d4a2246c8 <col:30> Inherited
|-CXXMethodDecl 0x561d4a2246f0 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x561d4a2247a0 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x561d4a224850 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x561d4a224a10 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x561d4a224900 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x561d4a224978 <col:37, col:63> col:57 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x561d4a224b60 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x561d4a224ad0 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x561d4a224d08 <line:163:5, col:65> col:43 operator[] 'SelectSet::SelectorInfo &(Vector::size_type)'
| |-ParmVarDecl 0x561d4a224c18 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x561d4a224dc0 <col:20>
| `-OptimizeNoneAttr 0x561d4a224e18 <col:30>
|-CXXMethodDecl 0x561d4a224f38 <line:164:5, col:73> col:49 operator[] 'const SelectSet::SelectorInfo &(Vector::size_type) const'
| |-ParmVarDecl 0x561d4a224e40 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x561d4a224ff0 <col:20>
| `-OptimizeNoneAttr 0x561d4a225048 <col:30>
|-CXXMethodDecl 0x561d4a225100 <line:165:5, col:29> col:15 at 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| `-ParmVarDecl 0x561d4a225070 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x561d4a225248 <line:166:5, col:37> col:21 at 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| `-ParmVarDecl 0x561d4a2251b8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x561d4a225378 <line:167:5, col:21> col:15 front 'SelectSet::SelectorInfo &()' inline
|-CXXMethodDecl 0x561d4a2254a8 <line:168:5, col:29> col:21 front 'const SelectSet::SelectorInfo &() const' inline
|-CXXMethodDecl 0x561d4a225578 <line:169:5, col:20> col:15 back 'SelectSet::SelectorInfo &()' inline
|-CXXMethodDecl 0x561d4a225648 <line:170:5, col:28> col:21 back 'const SelectSet::SelectorInfo &() const' inline
|-CXXMethodDecl 0x561d4a225788 <line:172:5, col:39> col:15 unchecked_at 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| `-ParmVarDecl 0x561d4a2256f8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x561d4a2258d0 <line:173:5, col:47> col:21 unchecked_at 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| `-ParmVarDecl 0x561d4a225840 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x561d4a225a18 <line:174:5, col:59> col:15 at_u 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| |-ParmVarDecl 0x561d4a225988 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x561d4a225ad0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x561d4a225bd0 <line:175:5, col:71> col:21 at_u 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| |-ParmVarDecl 0x561d4a225b40 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x561d4a225c88 <col:60> Inherited "" ""
|-CXXMethodDecl 0x561d4a225d48 <line:177:5, col:20> col:15 data 'SelectSet::SelectorInfo *()' inline
|-CXXMethodDecl 0x561d4a225e48 <line:178:5, col:28> col:21 data 'const SelectSet::SelectorInfo *() const' inline
|-CXXMethodDecl 0x561d4a225ff8 <line:180:5, col:48> col:17 push_back 'void (Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| `-ParmVarDecl 0x561d4a225f08 <col:27, col:47> col:47 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-FunctionTemplateDecl 0x561d4a2267b8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x561d4a2260b0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<SelectSet::SelectorInfo>':'fast_argument<SelectSet::SelectorInfo, true>'
| `-CXXMethodDecl 0x561d4a226718 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (SelectSet::SelectorInfo &&)' inline
|   `-ParmVarDecl 0x561d4a226618 <col:58, col:62> col:62 v 'SelectSet::SelectorInfo &&'
|-CXXMethodDecl 0x561d4a226898 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x561d4a2269e8 <line:186:5, col:49> col:17 push_front 'void (Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| `-ParmVarDecl 0x561d4a226958 <col:28, col:48> col:48 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x561d4a226aa0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x561d4a226ce8 <line:189:5, col:62> col:21 insert 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x561d4a226b60 <col:28, col:37> col:37 it 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
| `-ParmVarDecl 0x561d4a226bd8 <col:41, col:61> col:61 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x561d4a226ea8 <line:190:5, col:38> col:21 erase 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator)' inline
| `-ParmVarDecl 0x561d4a226db8 <col:27, col:36> col:36 it 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
|-CXXMethodDecl 0x561d4a2270f8 <line:191:5, col:49> col:21 erase 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator, Vector<SelectSet::SelectorInfo>::iterator)' inline
| |-ParmVarDecl 0x561d4a226f70 <col:27, col:36> col:36 a 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
| `-ParmVarDecl 0x561d4a226fe8 <col:39, col:48> col:48 b 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
|-CXXMethodDecl 0x561d4a2271b8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x561d4a227418 <line:195:5, col:34> col:17 swap 'void (Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x561d4a227320 <col:22, col:33> col:33 x 'Vector<SelectSet::SelectorInfo> &'
`-CXXDestructorDecl 0x561d4a2274e8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x561d4a2274e8

Layout: <CGRecordLayout
  LLVMType:%class.Vector.4 = type { %class.vector_memory.5 }
  NonVirtualBaseLLVMType:%class.Vector.4 = type { %class.vector_memory.5 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x561d4a20a390 <../dummy_inc/click/selectset.hh:36:1, line:109:1> line:36:7 referenced class SelectSet definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x561d4a20a4a8 <col:1, col:7> col:7 implicit referenced class SelectSet
|-AccessSpecDecl 0x561d4a20a538 <col:19, col:25> col:19 public
|-CXXConstructorDecl 0x561d4a214600 <line:38:5, col:15> col:5 SelectSet 'void ()'
|-CXXDestructorDecl 0x561d4a2146f0 <line:39:5, col:16> col:5 ~SelectSet 'void ()' noexcept-unevaluated 0x561d4a2146f0
|-CXXMethodDecl 0x561d4a2147f0 <line:41:5, col:21> col:10 initialize 'void ()'
|-CXXMethodDecl 0x561d4a214a90 <line:43:5, col:54> col:9 add_select 'int (int, Element *, int)'
| |-ParmVarDecl 0x561d4a2148a8 <col:20, col:24> col:24 fd 'int'
| |-ParmVarDecl 0x561d4a214920 <col:28, col:37> col:37 element 'Element *'
| `-ParmVarDecl 0x561d4a2149a0 <col:46, col:50> col:50 mask 'int'
|-CXXMethodDecl 0x561d4a214d00 <line:44:5, col:57> col:9 remove_select 'int (int, Element *, int)'
| |-ParmVarDecl 0x561d4a214b60 <col:23, col:27> col:27 fd 'int'
| |-ParmVarDecl 0x561d4a214bd8 <col:31, col:40> col:40 element 'Element *'
| `-ParmVarDecl 0x561d4a214c58 <col:49, col:53> col:53 mask 'int'
|-CXXMethodDecl 0x561d4a214e58 <line:46:5, col:42> col:10 run_selects 'void (RouterThread *)'
| `-ParmVarDecl 0x561d4a214dc8 <col:22, col:36> col:36 thread 'RouterThread *'
|-CXXMethodDecl 0x561d4a214f20 <line:47:5, line:50:5> line:47:17 used wake_immediate 'void ()' inline
| `-CompoundStmt 0x561d4a228b98 <col:34, line:50:5>
|   |-BinaryOperator 0x561d4a228568 <line:48:2, col:23> 'volatile bool' lvalue '='
|   | |-MemberExpr 0x561d4a228528 <col:2> 'volatile bool' lvalue ->_wake_pipe_pending 0x561d4a2156a8
|   | | `-CXXThisExpr 0x561d4a228518 <col:2> 'SelectSet *' implicit this
|   | `-CXXBoolLiteralExpr 0x561d4a228558 <col:23> 'bool' true
|   `-CallExpr 0x561d4a228b70 <line:49:2, col:43> 'void'
|     |-ImplicitCastExpr 0x561d4a228b58 <col:2> 'void (*)(long)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x561d4a228ad8 <col:2> 'void (long)' lvalue Function 0x561d4a2289d8 'ignore_result' 'void (long)' (FunctionTemplate 0x561d49ee1968 'ignore_result')
|     `-CallExpr 0x561d4a228780 <col:16, col:42> 'ssize_t':'long'
|       |-ImplicitCastExpr 0x561d4a228768 <col:16> 'ssize_t (*)(int, const void *, size_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x561d4a2286e8 <col:16> 'ssize_t (int, const void *, size_t)' lvalue Function 0x561d4a1e2930 'write' 'ssize_t (int, const void *, size_t)'
|       |-ImplicitCastExpr 0x561d4a2287b8 <col:22, col:34> 'int' <LValueToRValue>
|       | `-ArraySubscriptExpr 0x561d4a228690 <col:22, col:34> 'int' lvalue
|       |   |-ImplicitCastExpr 0x561d4a228678 <col:22> 'int *' <ArrayToPointerDecay>
|       |   | `-MemberExpr 0x561d4a228628 <col:22> 'int [2]' lvalue ->_wake_pipe 0x561d4a215648
|       |   |   `-CXXThisExpr 0x561d4a228618 <col:22> 'SelectSet *' implicit this
|       |   `-IntegerLiteral 0x561d4a228658 <col:33> 'int' 1
|       |-ImplicitCastExpr 0x561d4a2287e8 <col:37> 'const void *' <BitCast>
|       | `-ImplicitCastExpr 0x561d4a2287d0 <col:37> 'const char *' <ArrayToPointerDecay>
|       |   `-StringLiteral 0x561d4a2286b0 <col:37> 'const char [1]' lvalue ""
|       `-ImplicitCastExpr 0x561d4a228800 <col:41> 'size_t':'unsigned long' <IntegralCast>
|         `-IntegerLiteral 0x561d4a2286c8 <col:41> 'int' 1
|-CXXMethodDecl 0x561d4a215060 <line:52:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x561d4a214fd0 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x561d4a215128 <line:54:5, col:23> col:17 fence 'void ()' inline
|-AccessSpecDecl 0x561d4a2151c8 <line:56:3, col:10> col:3 private
|-CXXRecordDecl 0x561d4a2151f0 <line:58:5, line:66:5> line:58:12 referenced struct SelectorInfo definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x561d4a215308 <col:5, col:12> col:12 implicit referenced struct SelectorInfo
| |-FieldDecl 0x561d4a2153a8 <line:59:2, col:11> col:11 read 'Element *'
| |-FieldDecl 0x561d4a215408 <line:60:2, col:11> col:11 write 'Element *'
| |-FieldDecl 0x561d4a215470 <line:61:2, col:6> col:6 pollfd 'int'
| `-CXXConstructorDecl 0x561d4a215520 <line:62:2, line:65:2> line:62:2 SelectorInfo 'void ()'
|   |-CXXCtorInitializer Field 0x561d4a2153a8 'read' 'Element *'
|   | `-ImplicitCastExpr 0x561d4a228bf8 <line:63:13> 'Element *' <NullToPointer>
|   |   `-IntegerLiteral 0x561d4a228bb8 <col:13> 'int' 0
|   |-CXXCtorInitializer Field 0x561d4a215408 'write' 'Element *'
|   | `-ImplicitCastExpr 0x561d4a228c78 <col:23> 'Element *' <NullToPointer>
|   |   `-IntegerLiteral 0x561d4a228c38 <col:23> 'int' 0
|   |-CXXCtorInitializer Field 0x561d4a215470 'pollfd' 'int'
|   | `-UnaryOperator 0x561d4a228cd8 <col:34, col:35> 'int' prefix '-'
|   |   `-IntegerLiteral 0x561d4a228cb8 <col:35> 'int' 1
|   `-CompoundStmt 0x561d4a228d50 <line:64:2, line:65:2>
|-FieldDecl 0x561d4a215648 <line:68:5, col:21> col:9 referenced _wake_pipe 'int [2]'
|-FieldDecl 0x561d4a2156a8 <line:69:5, col:19> col:19 referenced _wake_pipe_pending 'volatile bool'
|-FieldDecl 0x561d4a21c7c0 <line:82:5, col:27> col:27 _pollfds 'Vector<struct pollfd>':'Vector<pollfd>'
|-FieldDecl 0x561d4a2275d0 <line:83:5, col:26> col:26 _selinfo 'Vector<SelectSet::SelectorInfo>':'Vector<SelectSet::SelectorInfo>'
|-CXXMethodDecl 0x561d4a227808 <line:89:5, col:63> col:10 register_select 'void (int, bool, bool)'
| |-ParmVarDecl 0x561d4a227638 <col:26, col:30> col:30 fd 'int'
| |-ParmVarDecl 0x561d4a2276b0 <col:34, col:39> col:39 add_read 'bool'
| `-ParmVarDecl 0x561d4a227728 <col:49, col:54> col:54 add_write 'bool'
|-CXXMethodDecl 0x561d4a2279f0 <line:90:5, col:41> col:10 remove_pollfd 'void (int, int)'
| |-ParmVarDecl 0x561d4a2278d8 <col:24, col:28> col:28 pi 'int'
| `-ParmVarDecl 0x561d4a227958 <col:32, col:36> col:36 event 'int'
|-CXXMethodDecl 0x561d4a227c38 <line:91:5, col:49> col:17 call_selected 'void (int, int) const' inline
| |-ParmVarDecl 0x561d4a227ab8 <col:31, col:35> col:35 fd 'int'
| `-ParmVarDecl 0x561d4a227b38 <col:39, col:43> col:43 mask 'int'
|-CXXMethodDecl 0x561d4a227e48 <line:92:5, col:63> col:17 post_select 'bool (RouterThread *, bool)' inline
| |-ParmVarDecl 0x561d4a227cf8 <col:29, col:43> col:43 thread 'RouterThread *'
| `-ParmVarDecl 0x561d4a227d70 <col:51, col:56> col:56 acquire 'bool'
|-CXXMethodDecl 0x561d4a227f98 <line:97:5, col:47> col:10 run_selects_poll 'void (RouterThread *)'
| `-ParmVarDecl 0x561d4a227f08 <col:27, col:41> col:41 thread 'RouterThread *'
|-CXXMethodDecl 0x561d4a228060 <line:102:5, col:22> col:17 used lock 'void ()' inline
|-CXXMethodDecl 0x561d4a228120 <line:103:5, col:24> col:17 used unlock 'void ()' inline
|-CXXConstructorDecl 0x561d4a2281e8 <line:36:7> col:7 implicit SelectSet 'void (const SelectSet &)' inline default noexcept-unevaluated 0x561d4a2281e8
| `-ParmVarDecl 0x561d4a2282f8 <col:7> col:7 'const SelectSet &'
`-CXXMethodDecl 0x561d4a228398 <col:7> col:7 implicit operator= 'SelectSet &(const SelectSet &)' inline default noexcept-unevaluated 0x561d4a228398
  `-ParmVarDecl 0x561d4a2284a8 <col:7> col:7 'const SelectSet &'

Layout: <CGRecordLayout
  LLVMType:%class.SelectSet = type { [2 x i32], i8, %class.Vector.3, %class.Vector.4 }
  NonVirtualBaseLLVMType:%class.SelectSet = type { [2 x i32], i8, %class.Vector.3, %class.Vector.4 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x561d4a19d9f8 <../dummy_inc/click/sync.hh:46:1, line:64:1> line:46:7 referenced class Spinlock definition
|-DefinitionData empty standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x561d4a19db18 <col:1, col:7> col:7 implicit referenced class Spinlock
|-AccessSpecDecl 0x561d4a19dba8 <col:18, col:24> col:18 public
|-CXXConstructorDecl 0x561d4a19dc30 <line:48:5, col:21> col:12 Spinlock 'void ()' inline
|-CXXDestructorDecl 0x561d4a19dd20 <line:49:5, col:22> col:12 ~Spinlock 'void () noexcept' inline
|-CXXMethodDecl 0x561d4a19de20 <line:51:5, col:25> col:17 used acquire 'void ()' inline
|-CXXMethodDecl 0x561d4a19dee0 <line:52:5, col:25> col:17 used release 'void ()' inline
|-CXXMethodDecl 0x561d4a19dfa0 <line:53:5, col:25> col:17 attempt 'bool ()' inline
|-CXXMethodDecl 0x561d4a19e088 <line:54:5, col:26> col:17 nested 'bool () const' inline
|-CXXConstructorDecl 0x561d4a19e1a8 <line:46:7> col:7 implicit constexpr Spinlock 'void (const Spinlock &)' inline default trivial noexcept-unevaluated 0x561d4a19e1a8
| `-ParmVarDecl 0x561d4a19e2b8 <col:7> col:7 'const Spinlock &'
`-CXXMethodDecl 0x561d4a22d9a8 <col:7> col:7 implicit operator= 'Spinlock &(const Spinlock &)' inline default trivial noexcept-unevaluated 0x561d4a22d9a8
  `-ParmVarDecl 0x561d4a22dab8 <col:7> col:7 'const Spinlock &'

Layout: <CGRecordLayout
  LLVMType:%class.Spinlock = type { i8 }
  NonVirtualBaseLLVMType:%class.Spinlock.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x561d4a102fa8 <../dummy_inc/click/task.hh:339:5, line:342:5> line:339:11 referenced union Pending definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x561d4a1030c8 <col:5, col:11> col:11 implicit union Pending
|-FieldDecl 0x561d4a103168 <line:340:9, col:15> col:15 t 'Task *'
|-FieldDecl 0x561d4a1031c8 <line:341:9, col:19> col:19 referenced x 'uintptr_t':'unsigned long'
|-CXXConstructorDecl 0x561d4a22cfa8 <line:339:11> col:11 implicit constexpr Pending 'void (const Task::Pending &)' inline default trivial noexcept-unevaluated 0x561d4a22cfa8
| `-ParmVarDecl 0x561d4a22d0b8 <col:11> col:11 'const Task::Pending &'
|-CXXConstructorDecl 0x561d4a22d158 <col:11> col:11 implicit constexpr Pending 'void (Task::Pending &&)' inline default trivial noexcept-unevaluated 0x561d4a22d158
| `-ParmVarDecl 0x561d4a22d268 <col:11> col:11 'Task::Pending &&'
|-CXXDestructorDecl 0x561d4a22d2d8 <col:11> col:11 implicit ~Pending 'void ()' inline default trivial noexcept-unevaluated 0x561d4a22d2d8
|-CXXMethodDecl 0x561d4a22db58 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(const Task::Pending &)' inline default trivial noexcept-unevaluated 0x561d4a22db58
| `-ParmVarDecl 0x561d4a22dc68 <col:11> col:11 'const Task::Pending &'
|-CXXMethodDecl 0x561d4a22dcd8 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(Task::Pending &&)' inline default trivial noexcept-unevaluated 0x561d4a22dcd8
| `-ParmVarDecl 0x561d4a22dde8 <col:11> col:11 'Task::Pending &&'
`-CXXConstructorDecl 0x561d4a234458 <col:11> col:11 implicit used Pending 'void () noexcept' inline default trivial
  `-CompoundStmt 0x561d4a234530 <col:11>

Layout: <CGRecordLayout
  LLVMType:%"union.Task::Pending" = type { %class.Task* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x561d4a19f8f0 <../dummy_inc/click/sync.hh:303:1, line:324:1> line:303:7 referenced class SpinlockIRQ definition
|-DefinitionData pass_in_registers empty standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x561d4a19fa08 <col:1, col:7> col:7 implicit referenced class SpinlockIRQ
|-AccessSpecDecl 0x561d4a19fa98 <col:21, col:27> col:21 public
|-CXXConstructorDecl 0x561d4a19fb20 <line:305:5, col:24> col:12 SpinlockIRQ 'void ()' inline
|-TypedefDecl 0x561d4a19fbe0 <line:310:5, col:17> col:17 referenced flags_t 'int'
| `-BuiltinType 0x561d49c1f370 'int'
|-CXXMethodDecl 0x561d4a19fca8 <line:313:5, col:59> col:20 acquire 'SpinlockIRQ::flags_t ()' inline
| `-AlwaysInlineAttr 0x561d4a19fd48 <col:45> always_inline
|-CXXMethodDecl 0x561d4a19fe78 <line:314:5, col:63> col:17 release 'void (SpinlockIRQ::flags_t)' inline
| |-ParmVarDecl 0x561d4a19fdb0 <col:25> col:32 'SpinlockIRQ::flags_t':'int'
| `-AlwaysInlineAttr 0x561d4a19ff20 <col:49> always_inline
|-CXXConstructorDecl 0x561d4a1a0018 <line:303:7> col:7 implicit constexpr SpinlockIRQ 'void (const SpinlockIRQ &)' inline default trivial noexcept-unevaluated 0x561d4a1a0018
| `-ParmVarDecl 0x561d4a1a0128 <col:7> col:7 'const SpinlockIRQ &'
|-CXXConstructorDecl 0x561d4a1a01c8 <col:7> col:7 implicit constexpr SpinlockIRQ 'void (SpinlockIRQ &&)' inline default trivial noexcept-unevaluated 0x561d4a1a01c8
| `-ParmVarDecl 0x561d4a1a02d8 <col:7> col:7 'SpinlockIRQ &&'
|-CXXDestructorDecl 0x561d4a22d3c0 <col:7> col:7 implicit ~SpinlockIRQ 'void ()' inline default trivial noexcept-unevaluated 0x561d4a22d3c0
|-CXXMethodDecl 0x561d4a22de88 <col:7> col:7 implicit operator= 'SpinlockIRQ &(const SpinlockIRQ &)' inline default trivial noexcept-unevaluated 0x561d4a22de88
| `-ParmVarDecl 0x561d4a22df98 <col:7> col:7 'const SpinlockIRQ &'
`-CXXMethodDecl 0x561d4a22e008 <col:7> col:7 implicit operator= 'SpinlockIRQ &(SpinlockIRQ &&)' inline default trivial noexcept-unevaluated 0x561d4a22e008
  `-ParmVarDecl 0x561d4a22e118 <col:7> col:7 'SpinlockIRQ &&'

Layout: <CGRecordLayout
  LLVMType:%class.SpinlockIRQ = type { i8 }
  NonVirtualBaseLLVMType:%class.SpinlockIRQ.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x561d4a2291c0 prev 0x561d4a20a300 <../dummy_inc/click/routerthread.hh:28:1, line:248:1> line:28:7 referenced class RouterThread definition
|-DefinitionData has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-CXXRecordDecl 0x561d4a2292b8 <col:1, col:7> col:7 implicit referenced class RouterThread
|-AccessSpecDecl 0x561d4a229348 <col:22, col:28> col:22 public
|-EnumDecl 0x561d4a229370 <line:30:5, col:58> col:5
| |-EnumConstantDecl 0x561d4a229488 <col:12, col:32> col:12 THREAD_QUIESCENT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:30:5)'
| | `-ConstantExpr 0x561d4a229468 <col:31, col:32> 'int' Int: -1
| |   `-UnaryOperator 0x561d4a229450 <col:31, col:32> 'int' prefix '-'
| |     `-IntegerLiteral 0x561d4a229430 <col:32> 'int' 1
| `-EnumConstantDecl 0x561d4a229530 <col:35, col:53> col:35 THREAD_UNKNOWN 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:30:5)'
|   `-ConstantExpr 0x561d4a229510 <col:52, col:53> 'int' Int: -1000
|     `-UnaryOperator 0x561d4a2294f8 <col:52, col:53> 'int' prefix '-'
|       `-IntegerLiteral 0x561d4a2294d8 <col:53> 'int' 1000
|-CXXMethodDecl 0x561d4a2295d0 <line:32:5, col:28> col:16 thread_id 'int () const' inline
|-CXXMethodDecl 0x561d4a229690 <line:34:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x561d4a229778 <line:35:5, col:52> col:22 timer_set 'TimerSet &()' inline
| `-CompoundStmt 0x561d4a22e1d8 <col:34, col:52>
|   `-ReturnStmt 0x561d4a22e1c8 <col:36, col:43>
|     `-MemberExpr 0x561d4a22e198 <col:43> 'TimerSet' lvalue ->_timers 0x561d4a22b448
|       `-CXXThisExpr 0x561d4a22e188 <col:43> 'RouterThread *' implicit this
|-CXXMethodDecl 0x561d4a229868 <line:36:5, col:64> col:28 timer_set 'const TimerSet &() const' inline
| `-CompoundStmt 0x561d4a22e240 <col:46, col:64>
|   `-ReturnStmt 0x561d4a22e230 <col:48, col:55>
|     `-MemberExpr 0x561d4a22e200 <col:55> 'const TimerSet' lvalue ->_timers 0x561d4a22b448
|       `-CXXThisExpr 0x561d4a22e1f0 <col:55> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x561d4a229958 <line:38:5, col:55> col:23 select_set 'SelectSet &()' inline
| `-CompoundStmt 0x561d4a22e2a8 <col:36, col:55>
|   `-ReturnStmt 0x561d4a22e298 <col:38, col:45>
|     `-MemberExpr 0x561d4a22e268 <col:45> 'SelectSet' lvalue ->_selects 0x561d4a22b4a8
|       `-CXXThisExpr 0x561d4a22e258 <col:45> 'RouterThread *' implicit this
|-CXXMethodDecl 0x561d4a229a48 <line:39:5, col:67> col:29 select_set 'const SelectSet &() const' inline
| `-CompoundStmt 0x561d4a22e310 <col:48, col:67>
|   `-ReturnStmt 0x561d4a22e300 <col:50, col:57>
|     `-MemberExpr 0x561d4a22e2d0 <col:57> 'const SelectSet' lvalue ->_selects 0x561d4a22b4a8
|       `-CXXThisExpr 0x561d4a22e2c0 <col:57> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x561d4a229b08 <line:43:5, col:26> col:17 active 'bool () const' inline
|-CXXMethodDecl 0x561d4a229bf8 <line:44:5, col:31> col:18 task_begin 'Task *() const' inline
|-CXXMethodDecl 0x561d4a229d68 <line:45:5, col:40> col:18 task_next 'Task *(Task *) const' inline
| `-ParmVarDecl 0x561d4a229ca8 <col:28, col:34> col:34 task 'Task *'
|-CXXMethodDecl 0x561d4a229e30 <line:46:5, col:29> col:18 task_end 'Task *() const' inline
|-CXXMethodDecl 0x561d4a22a278 <line:47:5, col:59> col:10 scheduled_tasks 'void (Router *, Vector<Task *> &)'
| |-ParmVarDecl 0x561d4a229ee0 <col:26, col:34> col:34 router 'Router *'
| `-ParmVarDecl 0x561d4a22a160 <col:42, col:58> col:58 x 'Vector<Task *> &'
|-CXXMethodDecl 0x561d4a22a348 <line:49:5, col:28> col:17 lock_tasks 'void ()' inline
|-CXXMethodDecl 0x561d4a22a408 <line:50:5, col:30> col:17 unlock_tasks 'void ()' inline
|-CXXMethodDecl 0x561d4a22a4c8 <line:52:5, col:38> col:17 schedule_block_tasks 'void ()' inline
|-CXXMethodDecl 0x561d4a22a608 <line:53:5, col:43> col:17 used block_tasks 'void (bool)' inline
| `-ParmVarDecl 0x561d4a22a578 <col:29, col:34> col:34 scheduled 'bool'
|-CXXMethodDecl 0x561d4a22a6d0 <line:54:5, col:31> col:17 used unblock_tasks 'void ()' inline
|-CXXMethodDecl 0x561d4a22a790 <line:56:5, col:29> col:17 stop_flag 'bool () const' inline
|-CXXMethodDecl 0x561d4a22a850 <line:58:5, col:35> col:17 mark_driver_entry 'void ()' inline
|-CXXMethodDecl 0x561d4a22a910 <line:59:5, col:17> col:10 driver 'void ()'
|-CXXMethodDecl 0x561d4a22aa50 <line:61:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x561d4a22a9c0 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x561d4a22ab18 <line:77:5, col:22> col:17 used wake 'void ()' inline
|-CXXMethodDecl 0x561d4a22abd8 <line:80:5, col:29> col:17 run_signals 'void ()' inline
|-EnumDecl 0x561d4a22ac78 <line:83:5, line:86:20> line:83:5
| |-EnumConstantDecl 0x561d4a22ad40 <col:12> col:12 referenced S_PAUSED 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x561d4a22ad90 <col:22> col:22 referenced S_BLOCKED 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x561d4a22ade0 <col:33> col:33 referenced S_TIMERWAIT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x561d4a22ae30 <line:84:12> col:12 S_LOCKSELECT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x561d4a22ae80 <col:26> col:26 S_LOCKTASKS 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x561d4a22aed0 <line:85:12> col:12 S_RUNTASK 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x561d4a22af20 <col:23> col:23 S_RUNTIMER 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x561d4a22af70 <col:35> col:35 S_RUNSIGNAL 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x561d4a22afc0 <col:48> col:48 S_RUNPENDING 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x561d4a22b010 <col:62> col:62 S_RUNSELECT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| `-EnumConstantDecl 0x561d4a22b060 <line:86:12> col:12 NSTATES 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
|-CXXMethodDecl 0x561d4a22b158 <line:87:5, col:43> col:17 used set_thread_state 'void (int)' inline
| `-ParmVarDecl 0x561d4a22b0c8 <col:34, col:38> col:38 state 'int'
|-CXXMethodDecl 0x561d4a22b2a8 <line:88:5, col:61> col:17 set_thread_state_for_blocking 'void (int)' inline
| `-ParmVarDecl 0x561d4a22b218 <col:47, col:51> col:51 delay_type 'int'
|-AccessSpecDecl 0x561d4a22b350 <line:104:3, col:10> col:3 private
|-FieldDecl 0x561d4a22b388 <line:119:5, col:14> col:14 referenced _task_link 'TaskLink'
|-FieldDecl 0x561d4a22b3e8 <line:120:5, col:19> col:19 referenced _stop_flag 'volatile bool'
|-FieldDecl 0x561d4a22b448 <line:125:5, col:14> col:14 referenced _timers 'TimerSet'
|-FieldDecl 0x561d4a22b4a8 <line:127:5, col:15> col:15 referenced _selects 'SelectSet'
|-FieldDecl 0x561d4a22b528 <line:148:5, col:14> col:14 referenced _task_lock 'Spinlock'
| `-AlignedAttr 0x561d4a22b598 <col:40, col:50> aligned
|   `-ConstantExpr 0x561d4a22b578 <col:48> 'int' Int: 64
|     `-IntegerLiteral 0x561d4a22b4f8 <col:48> 'int' 64
|-FieldDecl 0x561d4a22b608 <line:149:5, col:21> col:21 referenced _task_blocker 'atomic_uint32_t'
|-FieldDecl 0x561d4a22b668 <line:150:5, col:21> col:21 referenced _task_blocker_waiting 'atomic_uint32_t'
|-FieldDecl 0x561d4a22b760 <line:152:5, col:19> col:19 referenced _pending_head 'Task::Pending':'Task::Pending'
|-FieldDecl 0x561d4a22b870 <line:153:5, col:20> col:20 _pending_tail 'Task::Pending *'
|-FieldDecl 0x561d4a22b8d0 <line:154:5, col:17> col:17 _pending_lock 'SpinlockIRQ'
|-FieldDecl 0x561d4a22b950 <line:157:5, col:13> col:13 referenced _master 'Master *'
| `-AlignedAttr 0x561d4a22b9c0 <col:36, col:46> aligned
|   `-ConstantExpr 0x561d4a22b9a0 <col:44> 'int' Int: 64
|     `-IntegerLiteral 0x561d4a22b920 <col:44> 'int' 64
|-FieldDecl 0x561d4a22ba38 <line:158:5, col:9> col:9 referenced _id 'int'
|-FieldDecl 0x561d4a22ba98 <line:159:5, col:10> col:10 referenced _driver_entered 'bool'
|-AccessSpecDecl 0x561d4a22bae8 <line:170:3, col:9> col:3 public
|-FieldDecl 0x561d4a22bb28 <line:171:5, col:14> col:14 _tasks_per_iter 'unsigned int'
|-FieldDecl 0x561d4a22bb90 <line:172:5, col:14> col:14 _iters_per_os 'unsigned int'
|-AccessSpecDecl 0x561d4a22bbe0 <line:173:3, col:10> col:3 private
|-CXXConstructorDecl 0x561d4a22bd88 <line:205:5, col:46> col:5 RouterThread 'void (Master *, int)'
| |-ParmVarDecl 0x561d4a22bc18 <col:18, col:26> col:26 master 'Master *'
| `-ParmVarDecl 0x561d4a22bc98 <col:34, col:38> col:38 threadno 'int'
|-CXXDestructorDecl 0x561d4a22be88 <line:206:5, col:19> col:5 ~RouterThread 'void ()' noexcept-unevaluated 0x561d4a22be88
|-CXXMethodDecl 0x561d4a22bf90 <line:209:5, col:29> col:17 add_pending 'void ()' inline
|-CXXMethodDecl 0x561d4a22c058 <line:211:5, line:217:5> line:211:21 pass 'unsigned int () const' inline
| `-CompoundStmt 0x561d4a22e408 <col:34, line:217:5>
|   `-ReturnStmt 0x561d4a22e3f8 <line:215:9, col:34>
|     `-ImplicitCastExpr 0x561d4a22e3e0 <col:16, col:34> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x561d4a22e3b0 <col:16, col:34> 'unsigned int' lvalue ->_pass 0x561d4a1a2450
|         `-ImplicitCastExpr 0x561d4a22e398 <col:16, col:27> 'TaskLink *' <LValueToRValue>
|           `-MemberExpr 0x561d4a22e368 <col:16, col:27> 'TaskLink *const' lvalue ._next 0x561d4a1a23e8
|             `-MemberExpr 0x561d4a22e338 <col:16> 'const TaskLink' lvalue ->_task_link 0x561d4a22b388
|               `-CXXThisExpr 0x561d4a22e328 <col:16> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x561d4a22c118 <line:221:5, col:28> col:10 driver_lock_tasks 'void ()'
|-CXXMethodDecl 0x561d4a22c1d8 <line:222:5, line:226:5> line:222:17 driver_unlock_tasks 'void ()' inline
| `-CompoundStmt 0x561d4a22eb30 <col:39, line:226:5>
|   |-DeclStmt 0x561d4a22e658 <line:223:9, col:68>
|   | `-VarDecl 0x561d4a22e430 <col:9, col:67> col:18 used val 'uint32_t':'unsigned int' cinit
|   |   `-CXXMemberCallExpr 0x561d4a22e610 <col:24, col:67> 'uint32_t':'unsigned int'
|   |     |-MemberExpr 0x561d4a22e5e0 <col:24, col:38> '<bound member function type>' .compare_swap 0x561d49f481d0
|   |     | `-MemberExpr 0x561d4a22e4a8 <col:24> 'atomic_uint32_t' lvalue ->_task_blocker 0x561d4a22b608
|   |     |   `-CXXThisExpr 0x561d4a22e498 <col:24> 'RouterThread *' implicit this
|   |     |-CStyleCastExpr 0x561d4a22e598 <col:51, col:63> 'uint32_t':'unsigned int' <NoOp>
|   |     | `-ImplicitCastExpr 0x561d4a22e580 <col:62, col:63> 'uint32_t':'unsigned int' <IntegralCast> part_of_explicit_cast
|   |     |   `-UnaryOperator 0x561d4a22e558 <col:62, col:63> 'int' prefix '-'
|   |     |     `-IntegerLiteral 0x561d4a22e538 <col:63> 'int' 1
|   |     `-ImplicitCastExpr 0x561d4a22e640 <col:66> 'uint32_t':'unsigned int' <IntegralCast>
|   |       `-IntegerLiteral 0x561d4a22e5c0 <col:66> 'int' 0
|   |-CStyleCastExpr 0x561d4a22e6a0 <line:224:9, col:16> 'void' <ToVoid>
|   | `-DeclRefExpr 0x561d4a22e670 <col:16> 'uint32_t':'unsigned int' lvalue Var 0x561d4a22e430 'val' 'uint32_t':'unsigned int'
|   `-ParenExpr 0x561d4a22eb10 <line:225:9, col:181> 'void'
|     `-ConditionalOperator 0x561d4a22eae0 <col:10, col:180> 'void'
|       |-CXXStaticCastExpr 0x561d4a22e7b8 <col:10, col:50> 'bool' static_cast<_Bool> <NoOp>
|       | `-BinaryOperator 0x561d4a22e788 <col:30, col:49> 'bool' '=='
|       |   |-ImplicitCastExpr 0x561d4a22e770 <col:30> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-DeclRefExpr 0x561d4a22e6c8 <col:30> 'uint32_t':'unsigned int' lvalue Var 0x561d4a22e430 'val' 'uint32_t':'unsigned int'
|       |   `-CStyleCastExpr 0x561d4a22e748 <col:37, col:49> 'uint32_t':'unsigned int' <NoOp>
|       |     `-ImplicitCastExpr 0x561d4a22e730 <col:48, col:49> 'uint32_t':'unsigned int' <IntegralCast> part_of_explicit_cast
|       |       `-UnaryOperator 0x561d4a22e708 <col:48, col:49> 'int' prefix '-'
|       |         `-IntegerLiteral 0x561d4a22e6e8 <col:49> 'int' 1
|       |-CXXFunctionalCastExpr 0x561d4a22e818 <col:54, col:61> 'void' functional cast to void <ToVoid>
|       | `-IntegerLiteral 0x561d4a22e7f8 <col:60> 'int' 0
|       `-CallExpr 0x561d4a22ea40 <col:65, col:180> 'void'
|         |-ImplicitCastExpr 0x561d4a22ea28 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x561d4a22ea08 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x561d49cbcb90 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|         |-ImplicitCastExpr 0x561d4a22ea80 <col:80> 'const char *' <ArrayToPointerDecay>
|         | `-StringLiteral 0x561d4a22e908 <col:80> 'const char [21]' lvalue "val == (uint32_t) -1"
|         |-ImplicitCastExpr 0x561d4a22ea98 <col:104> 'const char *' <ArrayToPointerDecay>
|         | `-StringLiteral 0x561d4a22e938 <col:104> 'const char [35]' lvalue "../dummy_inc/click/routerthread.hh"
|         |-ImplicitCastExpr 0x561d4a22eab0 <col:142> 'unsigned int' <IntegralCast>
|         | `-IntegerLiteral 0x561d4a22e978 <col:142> 'int' 225
|         `-ImplicitCastExpr 0x561d4a22eac8 <col:147, col:161> 'const char *' <ArrayToPointerDecay>
|           `-UnaryOperator 0x561d4a22e9f0 <col:147, col:161> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|             `-PredefinedExpr 0x561d4a22e9d8 <col:161> 'const char [41]' lvalue __PRETTY_FUNCTION__
|               `-StringLiteral 0x561d4a22e998 <col:161> 'const char [41]' lvalue "void RouterThread::driver_unlock_tasks()"
|-CXXMethodDecl 0x561d4a22c320 <line:228:5, col:37> col:17 run_tasks 'void (int)' inline
| `-ParmVarDecl 0x561d4a22c290 <col:27, col:31> col:31 ntasks 'int'
|-CXXMethodDecl 0x561d4a22c3e8 <line:229:5, col:33> col:17 process_pending 'void ()' inline
|-CXXMethodDecl 0x561d4a22c4a8 <line:230:5, col:24> col:17 run_os 'void ()' inline
|-CXXMethodDecl 0x561d4a22c5d0 <line:238:5, col:45> col:24 used running_in_interrupt 'bool ()' static inline
|-CXXMethodDecl 0x561d4a22c690 <line:239:5, col:45> col:17 used current_thread_is_running 'bool () const' inline
|-CXXMethodDecl 0x561d4a22c750 <line:240:5, col:53> col:17 current_thread_is_running_cleanup 'bool () const' inline
|-FriendDecl 0x561d4a22c840 <line:242:5, col:18> col:12 'class Task':'Task'
|-FriendDecl 0x561d4a22c8a0 <line:243:5, col:18> col:12 'class Master':'Master'
|-FriendDecl 0x561d4a22c930 <line:245:5, col:18> col:12 'class SelectSet':'SelectSet'
|-CXXConstructorDecl 0x561d4a22ccf8 <line:28:7> col:7 implicit RouterThread 'void (const RouterThread &)' inline default noexcept-unevaluated 0x561d4a22ccf8
| `-ParmVarDecl 0x561d4a22ce08 <col:7> col:7 'const RouterThread &'
`-CXXMethodDecl 0x561d4a22d4c8 <col:7> col:7 implicit operator= 'RouterThread &(const RouterThread &)' inline default noexcept-unevaluated 0x561d4a22d4c8
  `-ParmVarDecl 0x561d4a22d5d8 <col:7> col:7 'const RouterThread &'

Layout: <CGRecordLayout
  LLVMType:%class.RouterThread = type { %struct.TaskLink, i8, [7 x i8], %class.TimerSet, %class.SelectSet, [32 x i8], %class.Spinlock, %class.atomic_uint32_t, %class.atomic_uint32_t, %"union.Task::Pending", %"union.Task::Pending"*, %class.SpinlockIRQ, [31 x i8], %class.Master*, i32, i8, i32, i32, [40 x i8] }
  NonVirtualBaseLLVMType:%class.RouterThread.base = type { %struct.TaskLink, i8, [7 x i8], %class.TimerSet, %class.SelectSet, [32 x i8], %class.Spinlock, %class.atomic_uint32_t, %class.atomic_uint32_t, %"union.Task::Pending", %"union.Task::Pending"*, %class.SpinlockIRQ, [31 x i8], %class.Master*, i32, i8, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x561d4a1a2760 prev 0x561d4a185400 <../dummy_inc/click/task.hh:49:1, line:371:1> line:49:7 referenced class Task definition
|-DefinitionData has_user_declared_ctor can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-private 'TaskLink'
|-CXXRecordDecl 0x561d4a1a2898 <col:1, col:7> col:7 implicit referenced class Task
|-AccessSpecDecl 0x561d4a1a2928 <col:33, col:39> col:33 public
|-EnumDecl 0x561d4a1a2950 <line:52:5, col:50> col:5
| |-EnumConstantDecl 0x561d4a1a2a90 <col:12, col:26> col:12 referenced STRIDE1 'Task::(anonymous enum at ../dummy_inc/click/task.hh:52:5)'
| | `-ConstantExpr 0x561d4a1a2a70 <col:22, col:26> 'unsigned int' Int: 65536
| |   `-BinaryOperator 0x561d4a1a2a50 <col:22, col:26> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x561d4a1a2a10 <col:22> 'unsigned int' 1
| |     `-IntegerLiteral 0x561d4a1a2a30 <col:26> 'int' 16
| `-EnumConstantDecl 0x561d4a1a2b60 <col:30, col:47> col:30 referenced MAX_STRIDE 'Task::(anonymous enum at ../dummy_inc/click/task.hh:52:5)'
|   `-ConstantExpr 0x561d4a1a2b40 <col:43, col:47> 'unsigned int' Int: 2147483648
|     `-BinaryOperator 0x561d4a1a2b20 <col:43, col:47> 'unsigned int' '<<'
|       |-IntegerLiteral 0x561d4a1a2ae0 <col:43> 'unsigned int' 1
|       `-IntegerLiteral 0x561d4a1a2b00 <col:47> 'int' 31
|-EnumDecl 0x561d4a1a2bb0 <line:53:5, col:57> col:5
| |-EnumConstantDecl 0x561d4a1a2cf0 <col:12, col:29> col:12 referenced MAX_TICKETS 'Task::(anonymous enum at ../dummy_inc/click/task.hh:53:5)'
| | `-ImplicitCastExpr 0x561d4a1a2e10 <col:26, col:29> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561d4a1a2cd0 <col:26, col:29> 'int' Int: 32768
| |     `-BinaryOperator 0x561d4a1a2cb0 <col:26, col:29> 'int' '<<'
| |       |-IntegerLiteral 0x561d4a1a2c70 <col:26> 'int' 1
| |       `-IntegerLiteral 0x561d4a1a2c90 <col:29> 'int' 15
| `-EnumConstantDecl 0x561d4a1a2dc0 <col:33, col:54> col:33 DEFAULT_TICKETS 'Task::(anonymous enum at ../dummy_inc/click/task.hh:53:5)'
|   `-ImplicitCastExpr 0x561d4a1a2e28 <col:51, col:54> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x561d4a1a2da0 <col:51, col:54> 'int' Int: 1024
|       `-BinaryOperator 0x561d4a1a2d80 <col:51, col:54> 'int' '<<'
|         |-IntegerLiteral 0x561d4a1a2d40 <col:51> 'int' 1
|         `-IntegerLiteral 0x561d4a1a2d60 <col:54> 'int' 10
|-CXXConstructorDecl 0x561d4a1a2ff8 <line:75:5, col:48> col:12 Task 'void (TaskCallback, void *)' inline
| |-ParmVarDecl 0x561d4a1a2e50 <col:17, col:30> col:30 f 'TaskCallback':'bool (*)(Task *, void *)'
| `-ParmVarDecl 0x561d4a1a2ed0 <col:33, col:39> col:39 user_data 'void *'
|-CXXConstructorDecl 0x561d4a1a3188 <line:86:5, col:27> col:12 Task 'void (Element *)' inline
| `-ParmVarDecl 0x561d4a1a30c0 <col:17, col:26> col:26 e 'Element *'
|-CXXDestructorDecl 0x561d4a1a3280 <line:91:5, col:11> col:5 ~Task 'void ()' noexcept-unevaluated 0x561d4a1a3280
|-CXXMethodDecl 0x561d4a1a3408 <line:98:5, line:100:5> line:98:25 callback 'TaskCallback () const' inline
| `-CompoundStmt 0x561d4a104108 <col:42, line:100:5>
|   `-ReturnStmt 0x561d4a1040f8 <line:99:9, col:16>
|     `-ImplicitCastExpr 0x561d4a1040e0 <col:16> 'TaskCallback':'bool (*)(Task *, void *)' <LValueToRValue>
|       `-MemberExpr 0x561d4a1040b0 <col:16> 'const TaskCallback':'bool (*const)(Task *, void *)' lvalue ->_hook 0x561d4a102e30
|         `-CXXThisExpr 0x561d4a1040a0 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x561d4a1a34d0 <line:103:5, line:105:5> line:103:18 user_data 'void *() const' inline
| `-CompoundStmt 0x561d4a104188 <col:36, line:105:5>
|   `-ReturnStmt 0x561d4a104178 <line:104:9, col:16>
|     `-ImplicitCastExpr 0x561d4a104160 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x561d4a104130 <col:16> 'void *const' lvalue ->_thunk 0x561d4a102e98
|         `-CXXThisExpr 0x561d4a104120 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x561d4a1a3590 <line:108:5, line:110:5> line:108:21 element 'Element *() const' inline
| `-CompoundStmt 0x561d4a104208 <col:37, line:110:5>
|   `-ReturnStmt 0x561d4a1041f8 <line:109:9, col:16>
|     `-ImplicitCastExpr 0x561d4a1041e0 <col:16> 'Element *' <LValueToRValue>
|       `-MemberExpr 0x561d4a1041b0 <col:16> 'Element *const' lvalue ->_owner 0x561d4a102f58
|         `-CXXThisExpr 0x561d4a1041a0 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x561d4a1a3650 <line:114:5, col:31> col:17 initialized 'bool () const' inline
|-CXXMethodDecl 0x561d4a1a3718 <line:123:5, col:33> col:16 home_thread_id 'int () const' inline
|-CXXMethodDecl 0x561d4a1a37d8 <line:132:5, col:35> col:26 thread 'RouterThread *() const' inline
|-CXXMethodDecl 0x561d4a1a3898 <line:135:5, line:137:5> line:135:20 router 'Router *() const' inline
| `-CompoundStmt 0x561d4a1042f0 <col:35, line:137:5>
|   `-ReturnStmt 0x561d4a1042e0 <line:136:9, col:31>
|     `-CXXMemberCallExpr 0x561d4a1042a8 <col:16, col:31> 'Router *'
|       `-MemberExpr 0x561d4a104278 <col:16, col:24> '<bound member function type>' ->router 0x561d4a196c00
|         `-ImplicitCastExpr 0x561d4a1042c8 <col:16> 'const Element *' <NoOp>
|           `-ImplicitCastExpr 0x561d4a104260 <col:16> 'Element *' <LValueToRValue>
|             `-MemberExpr 0x561d4a104230 <col:16> 'Element *const' lvalue ->_owner 0x561d4a102f58
|               `-CXXThisExpr 0x561d4a104220 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x561d4a1a3958 <line:140:5, col:22> col:13 master 'Master *() const'
|-CXXMethodDecl 0x561d4a1a3b58 <line:159:5, col:50> col:10 initialize 'void (Element *, bool)'
| |-ParmVarDecl 0x561d4a1a3a08 <col:21, col:30> col:30 owner 'Element *'
| `-ParmVarDecl 0x561d4a1a3a80 <col:37, col:42> col:42 schedule 'bool'
|-CXXMethodDecl 0x561d4a1a3d68 <line:169:5, col:50> col:10 initialize 'void (Router *, bool)'
| |-ParmVarDecl 0x561d4a1a3c18 <col:21, col:29> col:29 router 'Router *'
| `-ParmVarDecl 0x561d4a1a3c90 <col:37, col:42> col:42 schedule 'bool'
|-CXXMethodDecl 0x561d4a1a3e38 <line:179:5, line:181:5> line:179:17 scheduled 'bool () const' inline
| `-CompoundStmt 0x561d4a104400 <col:35, line:181:5>
|   `-ReturnStmt 0x561d4a1043f0 <line:180:9, col:24>
|     `-ImplicitCastExpr 0x561d4a1043d8 <col:16, col:24> 'bool' <IntegralToBoolean>
|       `-ImplicitCastExpr 0x561d4a1043c0 <col:16, col:24> 'uint8_t':'unsigned char' <LValueToRValue>
|         `-MemberExpr 0x561d4a104390 <col:16, col:24> 'const uint8_t':'const unsigned char' lvalue .is_scheduled 0x561d4a102a68
|           `-MemberExpr 0x561d4a104348 <col:16, col:24> 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x561d4a102b88
|             `-MemberExpr 0x561d4a104318 <col:16> 'const union Status':'const Task::Status' lvalue ->_status 0x561d4a102db8
|               `-CXXThisExpr 0x561d4a104308 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x561d4a101ab0 <line:190:5, line:192:5> line:190:17 unschedule 'void ()' inline
| `-CompoundStmt 0x561d4a104518 <col:30, line:192:5>
|   `-BinaryOperator 0x561d4a1044f8 <line:191:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x561d4a1044a0 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x561d4a102a68
|     | `-MemberExpr 0x561d4a104458 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x561d4a102b88
|     |   `-MemberExpr 0x561d4a104428 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x561d4a102db8
|     |     `-CXXThisExpr 0x561d4a104418 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x561d4a1044e0 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x561d4a1044d0 <col:32> 'bool' false
|-CXXMethodDecl 0x561d4a101b70 <line:201:5, line:206:5> line:201:17 used reschedule 'void ()' inline
| `-CompoundStmt 0x561d4a104868 <col:30, line:206:5>
|   |-BinaryOperator 0x561d4a104610 <line:202:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x561d4a1045b8 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x561d4a102a68
|   | | `-MemberExpr 0x561d4a104570 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x561d4a102b88
|   | |   `-MemberExpr 0x561d4a104540 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x561d4a102db8
|   | |     `-CXXThisExpr 0x561d4a104530 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x561d4a1045f8 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x561d4a1045e8 <col:32> 'bool' true
|   |-CallExpr 0x561d4a1046b0 <line:203:9, col:21> 'void'
|   | `-ImplicitCastExpr 0x561d4a104698 <col:9> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561d4a104678 <col:9> 'void ()' lvalue Function 0x561d4a19d5b0 'click_fence' 'void ()'
|   `-IfStmt 0x561d4a104850 <line:204:9, line:205:32>
|     |-BinaryOperator 0x561d4a104790 <line:204:13, col:34> 'bool' '<'
|     | |-ImplicitCastExpr 0x561d4a104760 <col:13, col:30> 'uintptr_t':'unsigned long' <LValueToRValue>
|     | | `-MemberExpr 0x561d4a104710 <col:13, col:30> 'uintptr_t':'unsigned long' lvalue .x 0x561d4a1031c8
|     | |   `-MemberExpr 0x561d4a1046e0 <col:13> 'Task::Pending' lvalue ->_pending_nextptr 0x561d4a103240
|     | |     `-CXXThisExpr 0x561d4a1046d0 <col:13> 'Task *' implicit this
|     | `-ImplicitCastExpr 0x561d4a104778 <col:34> 'unsigned long' <IntegralCast>
|     |   `-IntegerLiteral 0x561d4a104740 <col:34> 'int' 2
|     `-CXXMemberCallExpr 0x561d4a104810 <line:205:13, col:32> 'void'
|       |-MemberExpr 0x561d4a1047c0 <col:13> '<bound member function type>' ->complete_schedule 0x561d4a103c40
|       | `-CXXThisExpr 0x561d4a1047b0 <col:13> 'Task *' implicit this
|       `-ImplicitCastExpr 0x561d4a104838 <col:31> 'RouterThread *' <NullToPointer>
|         `-IntegerLiteral 0x561d4a1047f0 <col:31> 'int' 0
|-CXXMethodDecl 0x561d4a101c30 <line:238:5, line:240:5> line:238:17 fast_reschedule 'void ()' inline
| `-CompoundStmt 0x561d4a104990 <col:35, line:240:5>
|   `-BinaryOperator 0x561d4a104970 <line:239:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x561d4a104918 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x561d4a102a68
|     | `-MemberExpr 0x561d4a1048d0 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x561d4a102b88
|     |   `-MemberExpr 0x561d4a1048a0 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x561d4a102db8
|     |     `-CXXThisExpr 0x561d4a104890 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x561d4a104958 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x561d4a104948 <col:32> 'bool' true
|-CXXMethodDecl 0x561d4a101cf0 <line:250:5, line:253:5> line:250:17 strong_unschedule 'void ()' inline
| `-CompoundStmt 0x561d4a104ba8 <col:37, line:253:5>
|   |-BinaryOperator 0x561d4a104a88 <line:251:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x561d4a104a30 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x561d4a102a68
|   | | `-MemberExpr 0x561d4a1049e8 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x561d4a102b88
|   | |   `-MemberExpr 0x561d4a1049b8 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x561d4a102db8
|   | |     `-CXXThisExpr 0x561d4a1049a8 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x561d4a104a70 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x561d4a104a60 <col:32> 'bool' false
|   `-BinaryOperator 0x561d4a104b88 <line:252:9, col:41> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x561d4a104b30 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_strong_unscheduled 0x561d4a102ac8
|     | `-MemberExpr 0x561d4a104ae8 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x561d4a102b88
|     |   `-MemberExpr 0x561d4a104ab8 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x561d4a102db8
|     |     `-CXXThisExpr 0x561d4a104aa8 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x561d4a104b70 <col:41> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x561d4a104b60 <col:41> 'bool' true
|-CXXMethodDecl 0x561d4a101db0 <line:261:5, line:264:5> line:261:17 strong_reschedule 'void ()' inline
| `-CompoundStmt 0x561d4a104d28 <col:37, line:264:5>
|   |-BinaryOperator 0x561d4a104ca8 <line:262:9, col:41> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x561d4a104c50 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_strong_unscheduled 0x561d4a102ac8
|   | | `-MemberExpr 0x561d4a104c08 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x561d4a102b88
|   | |   `-MemberExpr 0x561d4a104bd8 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x561d4a102db8
|   | |     `-CXXThisExpr 0x561d4a104bc8 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x561d4a104c90 <col:41> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x561d4a104c80 <col:41> 'bool' false
|   `-CXXMemberCallExpr 0x561d4a104d08 <line:263:9, col:20> 'void'
|     `-MemberExpr 0x561d4a104cd8 <col:9> '<bound member function type>' ->reschedule 0x561d4a101b70
|       `-CXXThisExpr 0x561d4a104cc8 <col:9> 'Task *' implicit this
|-CXXMethodDecl 0x561d4a101ef8 <line:275:5, col:39> col:10 move_thread 'void (int)'
| `-ParmVarDecl 0x561d4a101e68 <col:22, col:26> col:26 new_thread_id 'int'
|-CXXMethodDecl 0x561d4a101fc8 <line:279:5, col:26> col:16 tickets 'int () const' inline
|-CXXMethodDecl 0x561d4a102110 <line:280:5, col:34> col:17 used set_tickets 'void (int)' inline
| `-ParmVarDecl 0x561d4a102080 <col:29, col:33> col:33 n 'int'
|-CXXMethodDecl 0x561d4a102260 <line:281:5, col:41> col:17 adjust_tickets 'void (int)' inline
| `-ParmVarDecl 0x561d4a1021d0 <col:32, col:36> col:36 delta 'int'
|-CXXMethodDecl 0x561d4a102328 <line:284:5, col:22> col:17 fire 'bool ()' inline
|-CXXMethodDecl 0x561d4a1023e8 <line:299:5, col:64> col:25 hook 'TaskCallback () const' inline
| `-DeprecatedAttr 0x561d4a102488 <col:53> "" ""
|-CXXMethodDecl 0x561d4a102520 <line:300:5, col:58> col:18 thunk 'void *() const' inline
| `-DeprecatedAttr 0x561d4a1025c0 <col:47> "" ""
|-AccessSpecDecl 0x561d4a102630 <line:303:3, col:10> col:3 private
|-FieldDecl 0x561d4a102670 <line:310:5, col:14> col:14 referenced _stride 'unsigned int'
|-FieldDecl 0x561d4a1026d8 <line:311:5, col:9> col:9 referenced _tickets 'int'
|-CXXRecordDecl 0x561d4a102728 <line:314:5, line:321:5> line:314:11 union Status definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x561d4a102848 <col:5, col:11> col:11 implicit union Status
| |-CXXRecordDecl 0x561d4a1028d8 <line:315:9, line:319:9> line:315:9 struct definition
| | |-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | | |-DefaultConstructor exists trivial
| | | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | | |-MoveConstructor exists simple trivial
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial
| | |-FieldDecl 0x561d4a102a08 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
| | |-FieldDecl 0x561d4a102a68 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
| | |-FieldDecl 0x561d4a102ac8 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
| | |-CXXConstructorDecl 0x561d4a233b88 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
| | |-CXXDestructorDecl 0x561d4a233c60 <col:9> col:9 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x561d4a233c60
| | |-CXXConstructorDecl 0x561d4a233f18 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x561d4a233f18
| | | `-ParmVarDecl 0x561d4a234028 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
| | `-CXXConstructorDecl 0x561d4a2340c8 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x561d4a2340c8
| |   `-ParmVarDecl 0x561d4a2341d8 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'
| |-FieldDecl 0x561d4a102b88 <col:9> col:9 implicit referenced 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| |-IndirectFieldDecl 0x561d4a102be8 <line:316:21> col:21 implicit home_thread_id 'int16_t':'short'
| | |-Field 0x561d4a102b88 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x561d4a102a08 'home_thread_id' 'int16_t':'short'
| |-IndirectFieldDecl 0x561d4a102c40 <line:317:21> col:21 implicit is_scheduled 'uint8_t':'unsigned char'
| | |-Field 0x561d4a102b88 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x561d4a102a68 'is_scheduled' 'uint8_t':'unsigned char'
| |-IndirectFieldDecl 0x561d4a102c98 <line:318:21> col:21 implicit is_strong_unscheduled 'uint8_t':'unsigned char'
| | |-Field 0x561d4a102b88 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x561d4a102ac8 'is_strong_unscheduled' 'uint8_t':'unsigned char'
| |-FieldDecl 0x561d4a102cf0 <line:320:9, col:18> col:18 status 'uint32_t':'unsigned int'
| |-CXXConstructorDecl 0x561d4a233a98 <line:314:11> col:11 implicit used Status 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x561d4a2343f8 <col:11>
| |-CXXConstructorDecl 0x561d4a233d68 <col:11> col:11 implicit constexpr Status 'void (const Task::Status &)' inline default trivial noexcept-unevaluated 0x561d4a233d68
| | `-ParmVarDecl 0x561d4a233e78 <col:11> col:11 'const Task::Status &'
| `-CXXConstructorDecl 0x561d4a234278 <col:11> col:11 implicit constexpr Status 'void (Task::Status &&)' inline default trivial noexcept-unevaluated 0x561d4a234278
|   `-ParmVarDecl 0x561d4a234388 <col:11> col:11 'Task::Status &&'
|-FieldDecl 0x561d4a102db8 <col:5, line:321:7> col:7 referenced _status 'union Status':'Task::Status'
|-FieldDecl 0x561d4a102e30 <line:323:5, col:18> col:18 referenced _hook 'TaskCallback':'bool (*)(Task *, void *)'
|-FieldDecl 0x561d4a102e98 <line:324:5, col:11> col:11 referenced _thunk 'void *'
|-FieldDecl 0x561d4a102ef8 <line:335:5, col:19> col:19 referenced _thread 'RouterThread *'
|-FieldDecl 0x561d4a102f58 <line:337:5, col:14> col:14 referenced _owner 'Element *'
|-CXXRecordDecl 0x561d4a102fa8 <line:339:5, line:342:5> line:339:11 referenced union Pending definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x561d4a1030c8 <col:5, col:11> col:11 implicit union Pending
| |-FieldDecl 0x561d4a103168 <line:340:9, col:15> col:15 t 'Task *'
| |-FieldDecl 0x561d4a1031c8 <line:341:9, col:19> col:19 referenced x 'uintptr_t':'unsigned long'
| |-CXXConstructorDecl 0x561d4a22cfa8 <line:339:11> col:11 implicit constexpr Pending 'void (const Task::Pending &)' inline default trivial noexcept-unevaluated 0x561d4a22cfa8
| | `-ParmVarDecl 0x561d4a22d0b8 <col:11> col:11 'const Task::Pending &'
| |-CXXConstructorDecl 0x561d4a22d158 <col:11> col:11 implicit constexpr Pending 'void (Task::Pending &&)' inline default trivial noexcept-unevaluated 0x561d4a22d158
| | `-ParmVarDecl 0x561d4a22d268 <col:11> col:11 'Task::Pending &&'
| |-CXXDestructorDecl 0x561d4a22d2d8 <col:11> col:11 implicit ~Pending 'void ()' inline default trivial noexcept-unevaluated 0x561d4a22d2d8
| |-CXXMethodDecl 0x561d4a22db58 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(const Task::Pending &)' inline default trivial noexcept-unevaluated 0x561d4a22db58
| | `-ParmVarDecl 0x561d4a22dc68 <col:11> col:11 'const Task::Pending &'
| |-CXXMethodDecl 0x561d4a22dcd8 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(Task::Pending &&)' inline default trivial noexcept-unevaluated 0x561d4a22dcd8
| | `-ParmVarDecl 0x561d4a22dde8 <col:11> col:11 'Task::Pending &&'
| `-CXXConstructorDecl 0x561d4a234458 <col:11> col:11 implicit used Pending 'void () noexcept' inline default trivial
|   `-CompoundStmt 0x561d4a234530 <col:11>
|-FieldDecl 0x561d4a103240 <line:343:5, col:13> col:13 referenced _pending_nextptr 'Task::Pending'
|-CXXConstructorDecl 0x561d4a103388 <line:345:5, col:23> col:5 Task 'void (const Task &)'
| `-ParmVarDecl 0x561d4a1032c8 <col:10, col:22> col:22 x 'const Task &'
|-CXXMethodDecl 0x561d4a103538 <line:346:5, col:34> col:11 operator= 'Task &(const Task &)'
| `-ParmVarDecl 0x561d4a103448 <col:21, col:33> col:33 x 'const Task &'
|-CXXMethodDecl 0x561d4a103600 <line:347:5, col:18> col:10 cleanup 'void ()'
|-CXXMethodDecl 0x561d4a1036c0 <line:352:5, col:37> col:17 used on_scheduled_list 'bool () const' inline
|-CXXMethodDecl 0x561d4a103780 <line:353:5, line:355:5> line:353:17 on_pending_list 'bool () const' inline
| `-CompoundStmt 0x561d4a104e38 <col:41, line:355:5>
|   `-ReturnStmt 0x561d4a104e28 <line:354:9, col:38>
|     `-BinaryOperator 0x561d4a104e08 <col:16, col:38> 'bool' '!='
|       |-ImplicitCastExpr 0x561d4a104dd8 <col:16, col:33> 'uintptr_t':'unsigned long' <LValueToRValue>
|       | `-MemberExpr 0x561d4a104d88 <col:16, col:33> 'const uintptr_t':'const unsigned long' lvalue .x 0x561d4a1031c8
|       |   `-MemberExpr 0x561d4a104d58 <col:16> 'const Task::Pending' lvalue ->_pending_nextptr 0x561d4a103240
|       |     `-CXXThisExpr 0x561d4a104d48 <col:16> 'const Task *' implicit this
|       `-ImplicitCastExpr 0x561d4a104df0 <col:38> 'unsigned long' <IntegralCast>
|         `-IntegerLiteral 0x561d4a104db8 <col:38> 'int' 0
|-CXXMethodDecl 0x561d4a103840 <line:356:5, col:33> col:17 needs_cleanup 'bool () const' inline
|-CXXMethodDecl 0x561d4a103980 <line:361:5, col:33> col:10 add_pending 'void (bool)'
| `-ParmVarDecl 0x561d4a1038f0 <col:22, col:27> col:27 always 'bool'
|-CXXMethodDecl 0x561d4a103af8 <line:362:5, col:46> col:10 process_pending 'void (RouterThread *)'
| `-ParmVarDecl 0x561d4a103a38 <col:26, col:40> col:40 thread 'RouterThread *'
|-CXXMethodDecl 0x561d4a103c40 <line:364:5, col:64> col:10 used complete_schedule 'void (RouterThread *)'
| `-ParmVarDecl 0x561d4a103bb0 <col:28, col:42> col:42 process_pending_thread 'RouterThread *'
|-CXXMethodDecl 0x561d4a103d08 <line:365:5, col:44> col:17 remove_from_scheduled_list 'void ()' inline
|-CXXMethodDecl 0x561d4a103ed0 <line:367:5, col:55> col:17 error_hook 'bool (Task *, void *)' static
| |-ParmVarDecl 0x561d4a103db8 <col:28, col:34> col:34 task 'Task *'
| `-ParmVarDecl 0x561d4a103e38 <col:40, col:46> col:46 user_data 'void *'
|-FriendDecl 0x561d4a103fd0 <line:369:5, col:18> col:12 'class RouterThread':'RouterThread'
`-FriendDecl 0x561d4a104060 <line:370:5, col:18> col:12 'class Master':'Master'

Layout: <CGRecordLayout
  LLVMType:%class.Task = type { %struct.TaskLink.base, i32, i32, %"union.Task::Status", i1 (%class.Task*, i8*)*, i8*, %class.RouterThread*, %class.Element*, %"union.Task::Pending" }
  NonVirtualBaseLLVMType:%class.Task = type { %struct.TaskLink.base, i32, i32, %"union.Task::Status", i1 (%class.Task*, i8*)*, i8*, %class.RouterThread*, %class.Element*, %"union.Task::Pending" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | ActiveNotifier::task_or_signal_t
         0 |   class Task * t
         0 |   Notifier::callback_type f
         0 |   void * v
         0 |   uintptr_t p
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x561d4a242fc8 <../dummy_inc/click/notifier.hh:151:13, line:156:5> line:151:13 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-FieldDecl 0x561d4a2430f8 <line:152:2, col:8> col:8 referenced t 'Task *'
|-FieldDecl 0x561d4a243158 <line:153:2, col:16> col:16 referenced f 'Notifier::callback_type':'void (*)(void *, Notifier *)'
|-FieldDecl 0x561d4a2431c0 <line:154:2, col:8> col:8 referenced v 'void *'
`-FieldDecl 0x561d4a243220 <line:155:2, col:12> col:12 referenced p 'uintptr_t':'unsigned long'

Layout: <CGRecordLayout
  LLVMType:%"union.ActiveNotifier::task_or_signal_t" = type { %class.Task* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x561d4a2420a0 <../dummy_inc/click/notifier.hh:132:1, line:167:1> line:132:7 referenced class ActiveNotifier definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-public 'Notifier'
|-CXXRecordDecl 0x561d4a2421f8 <col:1, col:7> col:7 implicit referenced class ActiveNotifier
|-AccessSpecDecl 0x561d4a242288 <col:42, col:48> col:42 public
|-CXXConstructorDecl 0x561d4a242398 <line:134:5, col:45> col:5 ActiveNotifier 'void (Notifier::SearchOp)'
| `-ParmVarDecl 0x561d4a2422c0 <col:20, col:34> col:29 op 'Notifier::SearchOp' cinit
|   `-DeclRefExpr 0x561d4a243bb0 <col:34> 'Notifier::SearchOp' EnumConstant 0x561d4a23ce30 'SEARCH_STOP' 'Notifier::SearchOp'
|-CXXDestructorDecl 0x561d4a242490 <line:135:5, col:21> col:5 used ~ActiveNotifier 'void () noexcept'
| `-Overrides: [ 0x561d4a23d5b8 Notifier::~Notifier 'void () noexcept' ]
|-CXXMethodDecl 0x561d4a2426a0 <line:137:5, col:55> col:9 add_activate_callback 'int (Notifier::callback_type, void *)'
| |-Overrides: [ 0x561d4a23ee40 Notifier::add_activate_callback 'int (Notifier::callback_type, void *)' ]
| |-ParmVarDecl 0x561d4a242580 <col:31, col:45> col:45 f 'Notifier::callback_type':'void (*)(void *, Notifier *)'
| `-ParmVarDecl 0x561d4a242600 <col:48, col:54> col:54 v 'void *'
|-CXXMethodDecl 0x561d4a242878 <line:138:5, col:59> col:10 remove_activate_callback 'void (Notifier::callback_type, void *)'
| |-Overrides: [ 0x561d4a23f098 Notifier::remove_activate_callback 'void (Notifier::callback_type, void *)' ]
| |-ParmVarDecl 0x561d4a242760 <col:35, col:49> col:49 f 'Notifier::callback_type':'void (*)(void *, Notifier *)'
| `-ParmVarDecl 0x561d4a2427e0 <col:52, col:58> col:58 v 'void *'
|-CXXMethodDecl 0x561d4a242b38 <line:139:5, col:70> col:10 listeners 'void (Vector<Task *> &) const'
| |-ParmVarDecl 0x561d4a242a10 <col:20, col:35> col:35 v 'Vector<Task *> &'
| `-DeprecatedAttr 0x561d4a242be0 <col:59> "" ""
|-CXXMethodDecl 0x561d4a242d70 <line:141:5, col:61> col:17 used set_active 'void (bool, bool)' inline
| |-ParmVarDecl 0x561d4a242c60 <col:28, col:33> col:33 active 'bool'
| `-ParmVarDecl 0x561d4a242cd8 <col:41, col:57> col:46 schedule 'bool' cinit
|   `-CXXBoolLiteralExpr 0x561d4a243bd0 <col:57> 'bool' true
|-CXXMethodDecl 0x561d4a242e40 <line:142:5, col:22> col:17 wake 'void ()' inline
|-CXXMethodDecl 0x561d4a242f00 <line:143:5, col:23> col:17 sleep 'void ()' inline
|-AccessSpecDecl 0x561d4a242fa0 <line:149:3, col:10> col:3 private
|-CXXRecordDecl 0x561d4a242fc8 <line:151:13, line:156:5> line:151:13 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-FieldDecl 0x561d4a2430f8 <line:152:2, col:8> col:8 referenced t 'Task *'
| |-FieldDecl 0x561d4a243158 <line:153:2, col:16> col:16 referenced f 'Notifier::callback_type':'void (*)(void *, Notifier *)'
| |-FieldDecl 0x561d4a2431c0 <line:154:2, col:8> col:8 referenced v 'void *'
| `-FieldDecl 0x561d4a243220 <line:155:2, col:12> col:12 referenced p 'uintptr_t':'unsigned long'
|-TypedefDecl 0x561d4a2432e8 <line:151:5, line:156:7> col:7 referenced task_or_signal_t 'union task_or_signal_t':'ActiveNotifier::task_or_signal_t'
| `-ElaboratedType 0x561d4a243290 'union task_or_signal_t' sugar
|   `-RecordType 0x561d4a243060 'ActiveNotifier::task_or_signal_t'
|     `-CXXRecord 0x561d4a242fc8 ''
|-FieldDecl 0x561d4a243368 <line:158:5, col:11> col:11 referenced _listener1 'Task *'
|-FieldDecl 0x561d4a243448 <line:159:5, col:23> col:23 referenced _listeners 'ActiveNotifier::task_or_signal_t *'
|-CXXMethodDecl 0x561d4a2435c8 <line:161:5, col:46> col:9 listener_add 'int (Notifier::callback_type, void *)'
| |-ParmVarDecl 0x561d4a2434a8 <col:22, col:36> col:36 f 'Notifier::callback_type':'void (*)(void *, Notifier *)'
| `-ParmVarDecl 0x561d4a243528 <col:39, col:45> col:45 v 'void *'
|-CXXMethodDecl 0x561d4a2437a8 <line:162:5, col:49> col:9 listener_remove 'int (Notifier::callback_type, void *)'
| |-ParmVarDecl 0x561d4a243688 <col:25, col:39> col:39 f 'Notifier::callback_type':'void (*)(void *, Notifier *)'
| `-ParmVarDecl 0x561d4a243708 <col:42, col:48> col:48 v 'void *'
|-CXXConstructorDecl 0x561d4a243958 <line:164:5, col:41> col:5 ActiveNotifier 'void (const ActiveNotifier &)'
| `-ParmVarDecl 0x561d4a243898 <col:20, col:40> col:41 'const ActiveNotifier &'
`-CXXMethodDecl 0x561d4a243b08 <line:165:5, col:52> col:21 operator= 'ActiveNotifier &(const ActiveNotifier &)'
  `-ParmVarDecl 0x561d4a243a18 <col:31, col:51> col:52 'const ActiveNotifier &'

Layout: <CGRecordLayout
  LLVMType:%class.ActiveNotifier = type { %class.Notifier.base, %class.Task*, %"union.ActiveNotifier::task_or_signal_t"* }
  NonVirtualBaseLLVMType:%class.ActiveNotifier = type { %class.Notifier.base, %class.Task*, %"union.ActiveNotifier::task_or_signal_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x561d4a273690 <../elements/standard/notifierqueue.hh:71:1, line:101:1> line:71:7 referenced class NotifierQueue definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-public 'SimpleQueue'
|-CXXRecordDecl 0x561d4a2737e8 <col:1, col:7> col:7 implicit referenced class NotifierQueue
|-AccessSpecDecl 0x561d4a273878 <col:44, col:50> col:44 public
|-CXXConstructorDecl 0x561d4a273900 <line:73:5, col:19> col:5 used NotifierQueue 'void ()'
|-CXXMethodDecl 0x561d4a273a00 <line:75:5, col:62> col:17 class_name 'const char *() const'
| |-Overrides: [ 0x561d4a260860 SimpleQueue::class_name 'const char *() const' ]
| `-CompoundStmt 0x561d4a274e70 <col:36, col:62>
|   `-ReturnStmt 0x561d4a274e60 <col:38, col:45>
|     `-ImplicitCastExpr 0x561d4a274e48 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x561d4a274e20 <col:45> 'const char [14]' lvalue "NotifierQueue"
|-CXXMethodDecl 0x561d4a273b50 <line:76:5, col:28> col:11 cast 'void *(const char *)'
| |-Overrides: [ 0x561d4a260b40 SimpleQueue::cast 'void *(const char *)' ]
| `-ParmVarDecl 0x561d4a273ab8 <col:16, col:27> col:28 'const char *'
|-CXXMethodDecl 0x561d4a273e30 <line:78:5, col:55> col:9 configure 'int (Vector<String> &, ErrorHandler *)'
| |-Overrides: [ 0x561d4a260e20 SimpleQueue::configure 'int (Vector<String> &, ErrorHandler *)' ]
| |-ParmVarDecl 0x561d4a273ce0 <col:19, col:35> col:35 conf 'Vector<String> &'
| `-ParmVarDecl 0x561d4a273d58 <col:41, col:54> col:55 'ErrorHandler *'
|-CXXMethodDecl 0x561d4a274008 <line:80:5, col:33> col:10 push 'void (int, Packet *)'
| |-Overrides: [ 0x561d4a2618c8 SimpleQueue::push 'void (int, Packet *)' ]
| |-ParmVarDecl 0x561d4a273ef8 <col:15, col:19> col:19 port 'int'
| `-ParmVarDecl 0x561d4a273f70 <col:25, col:32> col:33 'Packet *'
|-CXXMethodDecl 0x561d4a274160 <line:81:5, col:26> col:13 pull 'Packet *(int)'
| |-Overrides: [ 0x561d4a261a20 SimpleQueue::pull 'Packet *(int)' ]
| `-ParmVarDecl 0x561d4a2740d0 <col:18, col:22> col:22 port 'int'
|-AccessSpecDecl 0x561d4a274208 <line:87:3, col:12> col:3 protected
|-EnumDecl 0x561d4a274230 <line:89:5, col:35> col:5
| `-EnumConstantDecl 0x561d4a274330 <col:12, col:33> col:12 SLEEPINESS_TRIGGER 'NotifierQueue::(anonymous enum at ../elements/standard/notifierqueue.hh:89:5)'
|   `-ImplicitCastExpr 0x561d4a274380 <col:33> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x561d4a274310 <col:33> 'int' Int: 9
|       `-IntegerLiteral 0x561d4a2742f0 <col:33> 'int' 9
|-FieldDecl 0x561d4a2743b0 <line:90:5, col:9> col:9 _sleepiness 'int'
|-FieldDecl 0x561d4a274410 <line:91:5, col:20> col:20 _empty_note 'ActiveNotifier'
|-FriendDecl 0x561d4a2744b0 <line:93:5, col:18> col:12 'class MixedQueue':'MixedQueue'
|-FriendDecl 0x561d4a274540 <line:94:5, col:18> col:12 'class InOrderQueue':'InOrderQueue'
|-FriendDecl 0x561d4a2745d0 <line:95:5, col:18> col:12 'class ECNQueue':'ECNQueue'
|-FriendDecl 0x561d4a274660 <line:96:5, col:18> col:12 'class TokenQueue':'TokenQueue'
|-CXXConstructorDecl 0x561d4a2746c8 <line:71:7> col:7 implicit NotifierQueue 'void (const NotifierQueue &)' inline default_delete noexcept-unevaluated 0x561d4a2746c8
| `-ParmVarDecl 0x561d4a2747d8 <col:7> col:7 'const NotifierQueue &'
|-CXXConstructorDecl 0x561d4a274878 <col:7> col:7 implicit NotifierQueue 'void (NotifierQueue &&)' inline default_delete noexcept-unevaluated 0x561d4a274878
| `-ParmVarDecl 0x561d4a274988 <col:7> col:7 'NotifierQueue &&'
|-CXXMethodDecl 0x561d4a274a28 <col:7> col:7 implicit operator= 'NotifierQueue &(const NotifierQueue &)' inline default_delete noexcept-unevaluated 0x561d4a274a28
| `-ParmVarDecl 0x561d4a274b38 <col:7> col:7 'const NotifierQueue &'
|-CXXMethodDecl 0x561d4a274ba8 <col:7> col:7 implicit operator= 'NotifierQueue &(NotifierQueue &&)' inline default_delete noexcept-unevaluated 0x561d4a274ba8
| `-ParmVarDecl 0x561d4a274cb8 <col:7> col:7 'NotifierQueue &&'
`-CXXDestructorDecl 0x561d4a274d40 <col:7> col:7 implicit used ~NotifierQueue 'void () noexcept' inline default
  |-Overrides: [ 0x561d4a262d30 SimpleQueue::~SimpleQueue 'void () noexcept' ]
  `-CompoundStmt 0x561d4a276160 <col:7>

Layout: <CGRecordLayout
  LLVMType:%class.NotifierQueue = type { %class.SimpleQueue, i32, %class.ActiveNotifier }
  NonVirtualBaseLLVMType:%class.NotifierQueue = type { %class.SimpleQueue, i32, %class.ActiveNotifier }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class MixedQueue
         0 |   class NotifierQueue (primary base)
         0 |     class SimpleQueue (primary base)
         0 |       class Element (primary base)
         0 |         (Element vtable pointer)
         8 |         class Element::Port *[2] _ports
        24 |         class Element::Port [4] _inline_ports
        88 |         int [2] _nports
        96 |         class Router * _router
       104 |         int _eindex
       108 |       class Storage (base)
       108 |         Storage::index_type _capacity
       112 |         volatile Storage::index_type _head
       116 |         volatile Storage::index_type _tail
       120 |       class Packet *volatile * _q
       128 |       volatile int _drops
       132 |       int _highwater_length
       136 |     int _sleepiness
       144 |     class ActiveNotifier _empty_note
       144 |       class Notifier (primary base)
       144 |         (Notifier vtable pointer)
       152 |         class NotifierSignal _signal
       152 |           union NotifierSignal::vmvalue _v
       152 |             class atomic_uint32_t * v1
       152 |             struct NotifierSignal::vmpair * vm
       160 |           uint32_t _mask
       168 |         enum Notifier::SearchOp _search_op
       176 |       class Task * _listener1
       184 |       ActiveNotifier::task_or_signal_t * _listeners
           | [sizeof=192, dsize=192, align=8,
           |  nvsize=192, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x561d4a274e88 prev 0x561d4a261c50 <../elements/standard/mixedqueue.hh:75:1, line:85:1> line:75:7 class MixedQueue definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists non_trivial needs_overload_resolution
| `-Destructor simple non_trivial
|-public 'NotifierQueue'
|-CXXRecordDecl 0x561d4a274fc0 <col:1, col:7> col:7 implicit referenced class MixedQueue
|-AccessSpecDecl 0x561d4a275050 <col:43, col:49> col:43 public
|-CXXConstructorDecl 0x561d4a2750e0 <line:77:5, col:16> col:5 MixedQueue 'void ()'
|-CXXMethodDecl 0x561d4a2751e0 <line:79:5, col:59> col:17 class_name 'const char *() const'
| |-Overrides: [ 0x561d4a273a00 NotifierQueue::class_name 'const char *() const' ]
| `-CompoundStmt 0x561d4a275e50 <col:36, col:59>
|   `-ReturnStmt 0x561d4a275e40 <col:38, col:45>
|     `-ImplicitCastExpr 0x561d4a275e28 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x561d4a275e00 <col:45> 'const char [11]' lvalue "MixedQueue"
|-CXXMethodDecl 0x561d4a2752a8 <line:80:5, col:54> col:17 port_count 'const char *() const'
| |-Overrides: [ 0x561d4a260928 SimpleQueue::port_count 'const char *() const' ]
| `-CompoundStmt 0x561d4a275eb0 <col:36, col:54>
|   `-ReturnStmt 0x561d4a275ea0 <col:38, col:45>
|     `-ImplicitCastExpr 0x561d4a275e88 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x561d4a275e68 <col:45> 'const char [6]' lvalue "2/1-2"
|-CXXMethodDecl 0x561d4a2753f8 <line:81:5, col:28> col:11 cast 'void *(const char *)'
| |-Overrides: [ 0x561d4a273b50 NotifierQueue::cast 'void *(const char *)' ]
| `-ParmVarDecl 0x561d4a275360 <col:16, col:27> col:28 'const char *'
|-CXXMethodDecl 0x561d4a2755c8 <line:83:5, col:33> col:10 push 'void (int, Packet *)'
| |-Overrides: [ 0x561d4a274008 NotifierQueue::push 'void (int, Packet *)' ]
| |-ParmVarDecl 0x561d4a2754b8 <col:15, col:19> col:19 port 'int'
| `-ParmVarDecl 0x561d4a275530 <col:25, col:32> col:33 'Packet *'
|-CXXConstructorDecl 0x561d4a2756a8 <line:75:7> col:7 implicit MixedQueue 'void (const MixedQueue &)' inline default_delete noexcept-unevaluated 0x561d4a2756a8
| `-ParmVarDecl 0x561d4a2757b8 <col:7> col:7 'const MixedQueue &'
|-CXXConstructorDecl 0x561d4a275858 <col:7> col:7 implicit MixedQueue 'void (MixedQueue &&)' inline default_delete noexcept-unevaluated 0x561d4a275858
| `-ParmVarDecl 0x561d4a275968 <col:7> col:7 'MixedQueue &&'
|-CXXMethodDecl 0x561d4a275a08 <col:7> col:7 implicit operator= 'MixedQueue &(const MixedQueue &)' inline default_delete noexcept-unevaluated 0x561d4a275a08
| `-ParmVarDecl 0x561d4a275b18 <col:7> col:7 'const MixedQueue &'
|-CXXMethodDecl 0x561d4a275b88 <col:7> col:7 implicit operator= 'MixedQueue &(MixedQueue &&)' inline default_delete noexcept-unevaluated 0x561d4a275b88
| `-ParmVarDecl 0x561d4a275c98 <col:7> col:7 'MixedQueue &&'
`-CXXDestructorDecl 0x561d4a275d20 <col:7> col:7 implicit ~MixedQueue 'void ()' inline default noexcept-unevaluated 0x561d4a275d20
  `-Overrides: [ 0x561d4a274d40 NotifierQueue::~NotifierQueue 'void () noexcept' ]

Layout: <CGRecordLayout
  LLVMType:%class.MixedQueue = type { %class.NotifierQueue }
  NonVirtualBaseLLVMType:%class.MixedQueue = type { %class.NotifierQueue }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5)
         0 |   TimerCallback callback
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timer
         0 |   int _schedpos1
         8 |   class Timestamp _expiry_s
         8 |     union Timestamp::rep_t _t
         8 |       int64_t x
        16 |   union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5) _hook
        16 |     TimerCallback callback
        24 |   void * _thunk
        32 |   class Element * _owner
        40 |   class RouterThread * _thread
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x561d4a108938 <../dummy_inc/click/timer.hh:343:5, line:345:5> line:343:5 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x561d4a108a68 <line:344:2, col:16> col:16 referenced callback 'TimerCallback':'void (*)(Timer *, void *)'
`-CXXDestructorDecl 0x561d4a109558 <line:343:5> col:5 implicit ~ 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%union.anon = type { void (%class.Timer*, i8*)* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x561d4a105238 prev 0x561d4a1854b0 <../dummy_inc/click/timer.hh:14:1, line:358:1> line:14:7 class Timer definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x561d4a105330 <col:1, col:7> col:7 implicit referenced class Timer
|-AccessSpecDecl 0x561d4a1053c0 <col:15, col:21> col:15 public
|-CXXConstructorDecl 0x561d4a105420 <line:22:5, col:11> col:5 Timer 'void ()'
|-CXXRecordDecl 0x561d4a1054c8 <line:24:5, line:25:5> line:24:12 referenced struct do_nothing_t definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| `-CXXRecordDecl 0x561d4a1055e8 <col:5, col:12> col:12 implicit struct do_nothing_t
|-CXXConstructorDecl 0x561d4a105788 <line:32:5, col:37> col:5 Timer 'void (const Timer::do_nothing_t &)'
| `-ParmVarDecl 0x561d4a1056c8 <col:11, col:31> col:31 unused 'const Timer::do_nothing_t &'
|-CXXConstructorDecl 0x561d4a1059d8 <line:38:5, col:43> col:5 Timer 'void (TimerCallback, void *)'
| |-ParmVarDecl 0x561d4a105848 <col:11, col:25> col:25 f 'TimerCallback':'void (*)(Timer *, void *)'
| `-ParmVarDecl 0x561d4a1058c8 <col:28, col:34> col:34 user_data 'void *'
|-CXXConstructorDecl 0x561d4a105b30 <line:43:5, col:27> col:5 Timer 'void (Element *)'
| `-ParmVarDecl 0x561d4a105aa0 <col:11, col:20> col:20 element 'Element *'
|-CXXConstructorDecl 0x561d4a105cb8 <line:47:5, col:21> col:5 Timer 'void (Task *)'
| `-ParmVarDecl 0x561d4a105bf0 <col:11, col:17> col:17 task 'Task *'
|-CXXConstructorDecl 0x561d4a105e68 <line:52:5, col:25> col:5 Timer 'void (const Timer &)'
| `-ParmVarDecl 0x561d4a105da8 <col:11, col:24> col:24 x 'const Timer &'
|-CXXDestructorDecl 0x561d4a105f60 <line:55:5, line:58:5> line:55:12 ~Timer 'void () noexcept' inline
| `-CompoundStmt 0x561d4a109730 <col:21, line:58:5>
|   `-IfStmt 0x561d4a109718 <line:56:2, line:57:17>
|     |-CXXMemberCallExpr 0x561d4a109680 <line:56:6, col:16> 'bool'
|     | `-MemberExpr 0x561d4a109650 <col:6> '<bound member function type>' ->scheduled 0x561d4a1067b8
|     |   `-ImplicitCastExpr 0x561d4a1096a0 <col:6> 'const Timer *' <NoOp>
|     |     `-CXXThisExpr 0x561d4a109640 <col:6> 'Timer *' implicit this
|     `-CXXMemberCallExpr 0x561d4a1096f8 <line:57:6, col:17> 'void'
|       `-MemberExpr 0x561d4a1096c8 <col:6> '<bound member function type>' ->unschedule 0x561d4a107de0
|         `-CXXThisExpr 0x561d4a1096b8 <col:6> 'Timer *' implicit this
|-CXXMethodDecl 0x561d4a106060 <line:62:5, line:65:5> line:62:17 used assign 'void ()' inline
| `-CompoundStmt 0x561d4a1098d0 <col:26, line:65:5>
|   |-BinaryOperator 0x561d4a1097f0 <line:63:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x561d4a109788 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x561d4a108a68
|   | | `-MemberExpr 0x561d4a109758 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x561d4a108b28
|   | |   `-CXXThisExpr 0x561d4a109748 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x561d4a1097d8 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561d4a1097b8 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x561d4a108f88 'do_nothing_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x561d4a1098b0 <line:64:2, col:20> 'void *' lvalue '='
|     |-MemberExpr 0x561d4a109820 <col:2> 'void *' lvalue ->_thunk 0x561d4a108ba8
|     | `-CXXThisExpr 0x561d4a109810 <col:2> 'Timer *' implicit this
|     `-CStyleCastExpr 0x561d4a109888 <col:11, col:20> 'void *' <IntegralToPointer>
|       `-IntegerLiteral 0x561d4a109850 <col:20> 'int' 1
|-CXXMethodDecl 0x561d4a1061a0 <line:68:5, line:71:5> line:68:17 assign 'void (const Timer::do_nothing_t &)' inline
| |-ParmVarDecl 0x561d4a106110 <col:24, col:44> col:44 used unused 'const Timer::do_nothing_t &'
| `-CompoundStmt 0x561d4a109a30 <col:52, line:71:5>
|   |-CStyleCastExpr 0x561d4a109920 <line:69:2, col:9> 'void' <ToVoid>
|   | `-DeclRefExpr 0x561d4a1098f0 <col:9> 'const Timer::do_nothing_t' lvalue ParmVar 0x561d4a106110 'unused' 'const Timer::do_nothing_t &'
|   `-CXXMemberCallExpr 0x561d4a109a10 <line:70:2, col:9> 'void'
|     `-MemberExpr 0x561d4a1099e0 <col:2> '<bound member function type>' ->assign 0x561d4a106060
|       `-CXXThisExpr 0x561d4a1099d0 <col:2> 'Timer *' implicit this
|-CXXMethodDecl 0x561d4a106370 <line:76:5, line:79:5> line:76:17 assign 'void (TimerCallback, void *)' inline
| |-ParmVarDecl 0x561d4a106258 <col:24, col:38> col:38 used f 'TimerCallback':'void (*)(Timer *, void *)'
| |-ParmVarDecl 0x561d4a1062d8 <col:41, col:47> col:47 used user_data 'void *'
| `-CompoundStmt 0x561d4a1babf0 <col:58, line:79:5>
|   |-BinaryOperator 0x561d4a1bab38 <line:77:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x561d4a1baad0 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x561d4a108a68
|   | | `-MemberExpr 0x561d4a109a60 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x561d4a108b28
|   | |   `-CXXThisExpr 0x561d4a109a50 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x561d4a1bab20 <col:19> 'TimerCallback':'void (*)(Timer *, void *)' <LValueToRValue>
|   |   `-DeclRefExpr 0x561d4a1bab00 <col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue ParmVar 0x561d4a106258 'f' 'TimerCallback':'void (*)(Timer *, void *)'
|   `-BinaryOperator 0x561d4a1babd0 <line:78:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x561d4a1bab68 <col:2> 'void *' lvalue ->_thunk 0x561d4a108ba8
|     | `-CXXThisExpr 0x561d4a1bab58 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x561d4a1babb8 <col:11> 'void *' <LValueToRValue>
|       `-DeclRefExpr 0x561d4a1bab98 <col:11> 'void *' lvalue ParmVar 0x561d4a1062d8 'user_data' 'void *'
|-CXXMethodDecl 0x561d4a1064c0 <line:84:5, line:87:5> line:84:10 assign 'void (Element *)'
| |-ParmVarDecl 0x561d4a106430 <col:17, col:26> col:26 used element 'Element *'
| `-CompoundStmt 0x561d4a1bad88 <col:35, line:87:5>
|   |-BinaryOperator 0x561d4a1bacb8 <line:85:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x561d4a1bac50 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x561d4a108a68
|   | | `-MemberExpr 0x561d4a1bac20 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x561d4a108b28
|   | |   `-CXXThisExpr 0x561d4a1bac10 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x561d4a1baca0 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561d4a1bac80 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x561d4a109160 'element_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x561d4a1bad68 <line:86:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x561d4a1bace8 <col:2> 'void *' lvalue ->_thunk 0x561d4a108ba8
|     | `-CXXThisExpr 0x561d4a1bacd8 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x561d4a1bad50 <col:11> 'void *' <BitCast>
|       `-ImplicitCastExpr 0x561d4a1bad38 <col:11> 'Element *' <LValueToRValue>
|         `-DeclRefExpr 0x561d4a1bad18 <col:11> 'Element *' lvalue ParmVar 0x561d4a106430 'element' 'Element *'
|-CXXMethodDecl 0x561d4a106608 <line:91:5, line:94:5> line:91:10 assign 'void (Task *)'
| |-ParmVarDecl 0x561d4a106578 <col:17, col:23> col:23 used task 'Task *'
| `-CompoundStmt 0x561d4a1baf20 <col:29, line:94:5>
|   |-BinaryOperator 0x561d4a1bae50 <line:92:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x561d4a1bade8 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x561d4a108a68
|   | | `-MemberExpr 0x561d4a1badb8 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x561d4a108b28
|   | |   `-CXXThisExpr 0x561d4a1bada8 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x561d4a1bae38 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561d4a1bae18 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x561d4a109338 'task_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x561d4a1baf00 <line:93:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x561d4a1bae80 <col:2> 'void *' lvalue ->_thunk 0x561d4a108ba8
|     | `-CXXThisExpr 0x561d4a1bae70 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x561d4a1baee8 <col:11> 'void *' <BitCast>
|       `-ImplicitCastExpr 0x561d4a1baed0 <col:11> 'Task *' <LValueToRValue>
|         `-DeclRefExpr 0x561d4a1baeb0 <col:11> 'Task *' lvalue ParmVar 0x561d4a106578 'task' 'Task *'
|-CXXMethodDecl 0x561d4a1066f8 <line:98:5, line:100:5> line:98:17 initialized 'bool () const' inline
| `-CompoundStmt 0x561d4a1bb000 <col:37, line:100:5>
|   `-ReturnStmt 0x561d4a1baff0 <line:99:2, col:19>
|     `-BinaryOperator 0x561d4a1bafd0 <col:9, col:19> 'bool' '!='
|       |-ImplicitCastExpr 0x561d4a1bafa0 <col:9> 'Element *' <LValueToRValue>
|       | `-MemberExpr 0x561d4a1baf50 <col:9> 'Element *const' lvalue ->_owner 0x561d4a108c08
|       |   `-CXXThisExpr 0x561d4a1baf40 <col:9> 'const Timer *' implicit this
|       `-ImplicitCastExpr 0x561d4a1bafb8 <col:19> 'Element *' <NullToPointer>
|         `-IntegerLiteral 0x561d4a1baf80 <col:19> 'int' 0
|-CXXMethodDecl 0x561d4a1067b8 <line:103:5, line:105:5> line:103:17 used scheduled 'bool () const' inline
| `-CompoundStmt 0x561d4a1bb0c0 <col:35, line:105:5>
|   `-ReturnStmt 0x561d4a1bb0b0 <line:104:2, col:23>
|     `-BinaryOperator 0x561d4a1bb090 <col:9, col:23> 'bool' '!='
|       |-ImplicitCastExpr 0x561d4a1bb078 <col:9> 'int' <LValueToRValue>
|       | `-MemberExpr 0x561d4a1bb028 <col:9> 'const int' lvalue ->_schedpos1 0x561d4a108888
|       |   `-CXXThisExpr 0x561d4a1bb018 <col:9> 'const Timer *' implicit this
|       `-IntegerLiteral 0x561d4a1bb058 <col:23> 'int' 0
|-CXXMethodDecl 0x561d4a106878 <line:116:5, line:118:5> line:116:29 used expiry_steady 'const Timestamp &() const' inline
| `-CompoundStmt 0x561d4a1bb128 <col:51, line:118:5>
|   `-ReturnStmt 0x561d4a1bb118 <line:117:2, col:9>
|     `-MemberExpr 0x561d4a1bb0e8 <col:9> 'const Timestamp' lvalue ->_expiry_s 0x561d4a1088e8
|       `-CXXThisExpr 0x561d4a1bb0d8 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x561d4a106938 <line:131:5, line:136:5> line:131:22 expiry 'Timestamp () const' inline
| `-CompoundStmt 0x561d4a1bb680 <col:37, line:136:5>
|   `-IfStmt 0x561d4a1bb658 <line:132:2, line:135:13> has_else
|     |-ImplicitCastExpr 0x561d4a1bb1e8 <line:132:6> 'bool' <MemberPointerToBoolean>
|     | `-ImplicitCastExpr 0x561d4a1bb1d0 <col:6> 'Timestamp::unspecified_bool_type':'Timestamp::seconds_type (Timestamp::*)() const' <UserDefinedConversion>
|     |   `-CXXMemberCallExpr 0x561d4a1bb1b0 <col:6> 'Timestamp::unspecified_bool_type':'Timestamp::seconds_type (Timestamp::*)() const'
|     |     `-MemberExpr 0x561d4a1bb180 <col:6> '<bound member function type>' .operator int (Timestamp::*)() const 0x561d4a1145f8
|     |       `-MemberExpr 0x561d4a1bb150 <col:6> 'const Timestamp' lvalue ->_expiry_s 0x561d4a1088e8
|     |         `-CXXThisExpr 0x561d4a1bb140 <col:6> 'const Timer *' implicit this
|     |-ReturnStmt 0x561d4a1bb5c8 <line:133:6, col:72>
|     | `-ExprWithCleanups 0x561d4a1bb5b0 <col:13, col:72> 'Timestamp'
|     |   `-CXXConstructExpr 0x561d4a1bb580 <col:13, col:72> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|     |     `-MaterializeTemporaryExpr 0x561d4a1bb568 <col:13, col:72> 'Timestamp' xvalue
|     |       `-CXXOperatorCallExpr 0x561d4a1bb530 <col:13, col:72> 'Timestamp'
|     |         |-ImplicitCastExpr 0x561d4a1bb518 <col:45> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|     |         | `-DeclRefExpr 0x561d4a1bb4f8 <col:45> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x561d4a142dd0 'operator-' 'Timestamp (Timestamp, const Timestamp &)'
|     |         |-CXXConstructExpr 0x561d4a1bb498 <col:13, col:43> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|     |         | `-MaterializeTemporaryExpr 0x561d4a1bb480 <col:13, col:43> 'Timestamp' xvalue
|     |         |   `-CXXOperatorCallExpr 0x561d4a1bb3a8 <col:13, col:43> 'Timestamp'
|     |         |     |-ImplicitCastExpr 0x561d4a1bb390 <col:23> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|     |         |     | `-DeclRefExpr 0x561d4a1bb370 <col:23> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x561d4a142a90 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|     |         |     |-CXXConstructExpr 0x561d4a1bb310 <col:13> 'Timestamp' 'void (const Timestamp &) noexcept'
|     |         |     | `-MemberExpr 0x561d4a1bb210 <col:13> 'const Timestamp' lvalue ->_expiry_s 0x561d4a1088e8
|     |         |     |   `-CXXThisExpr 0x561d4a1bb200 <col:13> 'const Timer *' implicit this
|     |         |     `-MaterializeTemporaryExpr 0x561d4a1bb358 <col:25, col:43> 'const Timestamp' lvalue
|     |         |       `-ImplicitCastExpr 0x561d4a1bb340 <col:25, col:43> 'const Timestamp' <NoOp>
|     |         |         `-CallExpr 0x561d4a1bb2f0 <col:25, col:43> 'Timestamp'
|     |         |           `-ImplicitCastExpr 0x561d4a1bb2d8 <col:25, col:36> 'Timestamp (*)()' <FunctionToPointerDecay>
|     |         |             `-DeclRefExpr 0x561d4a1bb278 <col:25, col:36> 'Timestamp ()' lvalue CXXMethod 0x561d4a1360f0 'recent' 'Timestamp ()'
|     |         `-MaterializeTemporaryExpr 0x561d4a1bb4e0 <col:47, col:72> 'const Timestamp' lvalue
|     |           `-ImplicitCastExpr 0x561d4a1bb4c8 <col:47, col:72> 'const Timestamp' <NoOp>
|     |             `-CallExpr 0x561d4a1bb460 <col:47, col:72> 'Timestamp'
|     |               `-ImplicitCastExpr 0x561d4a1bb448 <col:47, col:58> 'Timestamp (*)()' <FunctionToPointerDecay>
|     |                 `-DeclRefExpr 0x561d4a1bb418 <col:47, col:58> 'Timestamp ()' lvalue CXXMethod 0x561d49f91640 'recent_steady' 'Timestamp ()'
|     `-ReturnStmt 0x561d4a1bb648 <line:135:6, col:13>
|       `-CXXConstructExpr 0x561d4a1bb618 <col:13> 'Timestamp' 'void (const Timestamp &) noexcept'
|         `-MemberExpr 0x561d4a1bb5e8 <col:13> 'const Timestamp' lvalue ->_expiry_s 0x561d4a1088e8
|           `-CXXThisExpr 0x561d4a1bb5d8 <col:13> 'const Timer *' implicit this
|-CXXMethodDecl 0x561d4a1069f8 <line:139:5, line:141:5> line:139:20 router 'Router *() const' inline
| `-CompoundStmt 0x561d4a1bb768 <col:35, line:141:5>
|   `-ReturnStmt 0x561d4a1bb758 <line:140:2, col:24>
|     `-CXXMemberCallExpr 0x561d4a1bb720 <col:9, col:24> 'Router *'
|       `-MemberExpr 0x561d4a1bb6f0 <col:9, col:17> '<bound member function type>' ->router 0x561d4a196c00
|         `-ImplicitCastExpr 0x561d4a1bb740 <col:9> 'const Element *' <NoOp>
|           `-ImplicitCastExpr 0x561d4a1bb6d8 <col:9> 'Element *' <LValueToRValue>
|             `-MemberExpr 0x561d4a1bb6a8 <col:9> 'Element *const' lvalue ->_owner 0x561d4a108c08
|               `-CXXThisExpr 0x561d4a1bb698 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x561d4a106ab8 <line:144:5, line:146:5> line:144:21 element 'Element *() const' inline
| `-CompoundStmt 0x561d4a1bb7e8 <col:37, line:146:5>
|   `-ReturnStmt 0x561d4a1bb7d8 <line:145:2, col:9>
|     `-ImplicitCastExpr 0x561d4a1bb7c0 <col:9> 'Element *' <LValueToRValue>
|       `-MemberExpr 0x561d4a1bb790 <col:9> 'Element *const' lvalue ->_owner 0x561d4a108c08
|         `-CXXThisExpr 0x561d4a1bb780 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x561d4a106b78 <line:149:5, line:151:5> line:149:26 thread 'RouterThread *() const' inline
| `-CompoundStmt 0x561d4a1bb868 <col:41, line:151:5>
|   `-ReturnStmt 0x561d4a1bb858 <line:150:2, col:9>
|     `-ImplicitCastExpr 0x561d4a1bb840 <col:9> 'RouterThread *' <LValueToRValue>
|       `-MemberExpr 0x561d4a1bb810 <col:9> 'RouterThread *const' lvalue ->_thread 0x561d4a108c68
|         `-CXXThisExpr 0x561d4a1bb800 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x561d4a106c40 <line:154:5, col:26> col:9 home_thread_id 'int () const'
|-CXXMethodDecl 0x561d4a106e00 <line:171:5, col:55> col:10 initialize 'void (Element *, bool)'
| |-ParmVarDecl 0x561d4a106cf0 <col:21, col:30> col:30 owner 'Element *'
| `-ParmVarDecl 0x561d4a106d68 <col:37, col:50> col:42 quiet 'bool' cinit
|   `-CXXBoolLiteralExpr 0x561d4a109548 <col:50> 'bool' false
|-CXXMethodDecl 0x561d4a106f88 <line:181:5, col:35> col:10 initialize 'void (Router *)'
| `-ParmVarDecl 0x561d4a106ec0 <col:21, col:29> col:29 router 'Router *'
|-CXXMethodDecl 0x561d4a1070d0 <line:191:5, col:57> col:10 used schedule_at_steady 'void (const Timestamp &)'
| `-ParmVarDecl 0x561d4a107040 <col:29, col:46> col:46 when_steady 'const Timestamp &'
|-CXXMethodDecl 0x561d4a107218 <line:197:5, col:59> col:10 reschedule_at_steady 'void (const Timestamp &)'
| `-ParmVarDecl 0x561d4a107188 <col:31, col:48> col:48 when_steady 'const Timestamp &'
|-CXXMethodDecl 0x561d4a107360 <line:210:5, col:50> col:17 used schedule_at 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x561d4a1072d0 <col:29, col:46> col:46 when 'const Timestamp &'
|-CXXMethodDecl 0x561d4a1074a8 <line:216:5, col:52> col:17 reschedule_at 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x561d4a107418 <col:31, col:48> col:48 when 'const Timestamp &'
|-CXXMethodDecl 0x561d4a107570 <line:221:5, line:223:5> line:221:17 schedule_now 'void ()' inline
| `-CompoundStmt 0x561d4a1bb9d0 <col:32, line:223:5>
|   `-ExprWithCleanups 0x561d4a1bb9b8 <line:222:2, col:47> 'void'
|     `-CXXMemberCallExpr 0x561d4a1bb960 <col:2, col:47> 'void'
|       |-MemberExpr 0x561d4a1bb890 <col:2> '<bound member function type>' ->schedule_at_steady 0x561d4a1070d0
|       | `-CXXThisExpr 0x561d4a1bb880 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x561d4a1bb9a0 <col:21, col:46> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x561d4a1bb988 <col:21, col:46> 'const Timestamp' <NoOp>
|           `-CallExpr 0x561d4a1bb940 <col:21, col:46> 'Timestamp'
|             `-ImplicitCastExpr 0x561d4a1bb928 <col:21, col:32> 'Timestamp (*)()' <FunctionToPointerDecay>
|               `-DeclRefExpr 0x561d4a1bb8f8 <col:21, col:32> 'Timestamp ()' lvalue CXXMethod 0x561d49f91640 'recent_steady' 'Timestamp ()'
|-CXXMethodDecl 0x561d4a1076b0 <line:233:5, col:47> col:10 used schedule_after 'void (const Timestamp &)'
| `-ParmVarDecl 0x561d4a107620 <col:25, col:42> col:42 delta 'const Timestamp &'
|-CXXMethodDecl 0x561d4a1077f8 <line:239:5, line:241:5> line:239:17 used schedule_after_sec 'void (uint32_t)' inline
| |-ParmVarDecl 0x561d4a107768 <col:36, col:45> col:45 used delta_sec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x561d4a1bbb58 <col:56, line:241:5>
|   `-ExprWithCleanups 0x561d4a1bbb40 <line:240:2, col:40> 'void'
|     `-CXXMemberCallExpr 0x561d4a1bbae8 <col:2, col:40> 'void'
|       |-MemberExpr 0x561d4a1bb9f8 <col:2> '<bound member function type>' ->schedule_after 0x561d4a1076b0
|       | `-CXXThisExpr 0x561d4a1bb9e8 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x561d4a1bbb28 <col:17, col:39> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x561d4a1bbb10 <col:17, col:39> 'const Timestamp' <NoOp>
|           `-CXXTemporaryObjectExpr 0x561d4a1bbaa8 <col:17, col:39> 'Timestamp' 'void (unsigned int, uint32_t)'
|             |-ImplicitCastExpr 0x561d4a1bba78 <col:27> 'uint32_t':'unsigned int' <LValueToRValue>
|             | `-DeclRefExpr 0x561d4a1bba38 <col:27> 'uint32_t':'unsigned int' lvalue ParmVar 0x561d4a107768 'delta_sec' 'uint32_t':'unsigned int'
|             `-ImplicitCastExpr 0x561d4a1bba90 <col:38> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x561d4a1bba58 <col:38> 'int' 0
|-CXXMethodDecl 0x561d4a107940 <line:247:5, line:249:5> line:247:17 used schedule_after_msec 'void (uint32_t)' inline
| |-ParmVarDecl 0x561d4a1078b0 <col:37, col:46> col:46 used delta_msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x561d4a1bbdc8 <col:58, line:249:5>
|   `-ExprWithCleanups 0x561d4a1bbdb0 <line:248:2, col:49> 'void'
|     `-CXXMemberCallExpr 0x561d4a1bbd58 <col:2, col:49> 'void'
|       |-MemberExpr 0x561d4a1bbb80 <col:2> '<bound member function type>' ->schedule_after 0x561d4a1076b0
|       | `-CXXThisExpr 0x561d4a1bbb70 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x561d4a1bbd98 <col:17, col:48> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x561d4a1bbd80 <col:17, col:48> 'const Timestamp' <NoOp>
|           `-CallExpr 0x561d4a1bbd00 <col:17, col:48> 'Timestamp'
|             |-ImplicitCastExpr 0x561d4a1bbce8 <col:17, col:28> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x561d4a1bbc58 <col:17, col:28> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x561d4a1163e8 'make_msec' 'Timestamp (Timestamp::value_type)'
|             `-ImplicitCastExpr 0x561d4a1bbd40 <col:38> 'Timestamp::value_type':'long' <IntegralCast>
|               `-ImplicitCastExpr 0x561d4a1bbd28 <col:38> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x561d4a1bbc38 <col:38> 'uint32_t':'unsigned int' lvalue ParmVar 0x561d4a1078b0 'delta_msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x561d4a107a88 <line:259:5, line:261:5> line:259:17 reschedule_after 'void (const Timestamp &)' inline
| |-ParmVarDecl 0x561d4a1079f8 <col:34, col:51> col:51 used delta 'const Timestamp &'
| `-CompoundStmt 0x561d4a1bbfa8 <col:58, line:261:5>
|   `-ExprWithCleanups 0x561d4a1bbf90 <line:260:2, col:38> 'void'
|     `-CXXMemberCallExpr 0x561d4a1bbf38 <col:2, col:38> 'void'
|       |-MemberExpr 0x561d4a1bbdf0 <col:2> '<bound member function type>' ->schedule_at_steady 0x561d4a1070d0
|       | `-CXXThisExpr 0x561d4a1bbde0 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x561d4a1bbf78 <col:21, col:33> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x561d4a1bbf60 <col:21, col:33> 'const Timestamp' <NoOp>
|           `-CXXOperatorCallExpr 0x561d4a1bbf00 <col:21, col:33> 'Timestamp'
|             |-ImplicitCastExpr 0x561d4a1bbee8 <col:31> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x561d4a1bbec8 <col:31> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x561d4a142a90 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|             |-CXXConstructExpr 0x561d4a1bbe98 <col:21> 'Timestamp' 'void (const Timestamp &) noexcept'
|             | `-ImplicitCastExpr 0x561d4a1bbe80 <col:21> 'const Timestamp' lvalue <NoOp>
|             |   `-MemberExpr 0x561d4a1bbe30 <col:21> 'Timestamp' lvalue ->_expiry_s 0x561d4a1088e8
|             |     `-CXXThisExpr 0x561d4a1bbe20 <col:21> 'Timer *' implicit this
|             `-DeclRefExpr 0x561d4a1bbe60 <col:33> 'const Timestamp' lvalue ParmVar 0x561d4a1079f8 'delta' 'const Timestamp &'
|-CXXMethodDecl 0x561d4a107bd0 <line:268:5, line:270:5> line:268:17 used reschedule_after_sec 'void (uint32_t)' inline
| |-ParmVarDecl 0x561d4a107b40 <col:38, col:47> col:47 used delta_sec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x561d4a1bc280 <col:58, line:270:5>
|   `-ExprWithCleanups 0x561d4a1bc268 <line:269:2, col:79> 'void'
|     `-CXXMemberCallExpr 0x561d4a1bc210 <col:2, col:79> 'void'
|       |-MemberExpr 0x561d4a1bbfd0 <col:2> '<bound member function type>' ->schedule_at_steady 0x561d4a1070d0
|       | `-CXXThisExpr 0x561d4a1bbfc0 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x561d4a1bc250 <col:21, col:78> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x561d4a1bc238 <col:21, col:78> 'const Timestamp' <NoOp>
|           `-CXXTemporaryObjectExpr 0x561d4a1bc1d0 <col:21, col:78> 'Timestamp' 'void (unsigned int, uint32_t)'
|             |-BinaryOperator 0x561d4a1bc108 <col:31, col:49> 'unsigned int' '+'
|             | |-ImplicitCastExpr 0x561d4a1bc0f0 <col:31, col:45> 'unsigned int' <IntegralCast>
|             | | `-CXXMemberCallExpr 0x561d4a1bc080 <col:31, col:45> 'Timestamp::seconds_type':'int'
|             | |   `-MemberExpr 0x561d4a1bc050 <col:31, col:41> '<bound member function type>' .sec 0x561d49f93138
|             | |     `-ImplicitCastExpr 0x561d4a1bc0a0 <col:31> 'const Timestamp' lvalue <NoOp>
|             | |       `-MemberExpr 0x561d4a1bc020 <col:31> 'Timestamp' lvalue ->_expiry_s 0x561d4a1088e8
|             | |         `-CXXThisExpr 0x561d4a1bc010 <col:31> 'Timer *' implicit this
|             | `-ImplicitCastExpr 0x561d4a1bc0d8 <col:49> 'uint32_t':'unsigned int' <LValueToRValue>
|             |   `-DeclRefExpr 0x561d4a1bc0b8 <col:49> 'uint32_t':'unsigned int' lvalue ParmVar 0x561d4a107b40 'delta_sec' 'uint32_t':'unsigned int'
|             `-CXXMemberCallExpr 0x561d4a1bc198 <col:60, col:77> 'uint32_t':'unsigned int'
|               `-MemberExpr 0x561d4a1bc168 <col:60, col:70> '<bound member function type>' .subsec 0x561d49f93830
|                 `-ImplicitCastExpr 0x561d4a1bc1b8 <col:60> 'const Timestamp' lvalue <NoOp>
|                   `-MemberExpr 0x561d4a1bc138 <col:60> 'Timestamp' lvalue ->_expiry_s 0x561d4a1088e8
|                     `-CXXThisExpr 0x561d4a1bc128 <col:60> 'Timer *' implicit this
|-CXXMethodDecl 0x561d4a107d18 <line:277:5, line:279:5> line:277:17 used reschedule_after_msec 'void (uint32_t)' inline
| |-ParmVarDecl 0x561d4a107c88 <col:39, col:48> col:48 used delta_msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x561d4a1bc5b8 <col:60, line:279:5>
|   `-ExprWithCleanups 0x561d4a1bc5a0 <line:278:2, col:65> 'void'
|     `-CXXMemberCallExpr 0x561d4a1bc548 <col:2, col:65> 'void'
|       |-MemberExpr 0x561d4a1bc2a8 <col:2> '<bound member function type>' ->schedule_at_steady 0x561d4a1070d0
|       | `-CXXThisExpr 0x561d4a1bc298 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x561d4a1bc588 <col:21, col:64> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x561d4a1bc570 <col:21, col:64> 'const Timestamp' <NoOp>
|           `-CXXOperatorCallExpr 0x561d4a1bc510 <col:21, col:64> 'Timestamp'
|             |-ImplicitCastExpr 0x561d4a1bc4f8 <col:31> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x561d4a1bc4d8 <col:31> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x561d4a142a90 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|             |-CXXConstructExpr 0x561d4a1bc478 <col:21> 'Timestamp' 'void (const Timestamp &) noexcept'
|             | `-ImplicitCastExpr 0x561d4a1bc460 <col:21> 'const Timestamp' lvalue <NoOp>
|             |   `-MemberExpr 0x561d4a1bc2e8 <col:21> 'Timestamp' lvalue ->_expiry_s 0x561d4a1088e8
|             |     `-CXXThisExpr 0x561d4a1bc2d8 <col:21> 'Timer *' implicit this
|             `-MaterializeTemporaryExpr 0x561d4a1bc4c0 <col:33, col:64> 'const Timestamp' lvalue
|               `-ImplicitCastExpr 0x561d4a1bc4a8 <col:33, col:64> 'const Timestamp' <NoOp>
|                 `-CallExpr 0x561d4a1bc408 <col:33, col:64> 'Timestamp'
|                   |-ImplicitCastExpr 0x561d4a1bc3f0 <col:33, col:44> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|                   | `-DeclRefExpr 0x561d4a1bc3c0 <col:33, col:44> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x561d4a1163e8 'make_msec' 'Timestamp (Timestamp::value_type)'
|                   `-ImplicitCastExpr 0x561d4a1bc448 <col:54> 'Timestamp::value_type':'long' <IntegralCast>
|                     `-ImplicitCastExpr 0x561d4a1bc430 <col:54> 'uint32_t':'unsigned int' <LValueToRValue>
|                       `-DeclRefExpr 0x561d4a1bc3a0 <col:54> 'uint32_t':'unsigned int' lvalue ParmVar 0x561d4a107c88 'delta_msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x561d4a107de0 <line:285:5, col:21> col:10 used unschedule 'void ()'
|-CXXMethodDecl 0x561d4a107ea0 <line:288:5, line:291:5> line:288:17 clear 'void ()' inline
| `-CompoundStmt 0x561d4a1bca80 <col:25, line:291:5>
|   |-CXXMemberCallExpr 0x561d4a1bc610 <line:289:2, col:13> 'void'
|   | `-MemberExpr 0x561d4a1bc5e0 <col:2> '<bound member function type>' ->unschedule 0x561d4a107de0
|   |   `-CXXThisExpr 0x561d4a1bc5d0 <col:2> 'Timer *' implicit this
|   `-ExprWithCleanups 0x561d4a1bca68 <line:290:2, col:24> 'Timestamp' lvalue
|     `-CXXOperatorCallExpr 0x561d4a1bca30 <col:2, col:24> 'Timestamp' lvalue
|       |-ImplicitCastExpr 0x561d4a1bca18 <col:12> 'Timestamp &(*)(Timestamp &&) noexcept' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x561d4a1bc6c8 <col:12> 'Timestamp &(Timestamp &&) noexcept' lvalue CXXMethod 0x561d49e2a298 'operator=' 'Timestamp &(Timestamp &&) noexcept'
|       |-MemberExpr 0x561d4a1bc640 <col:2> 'Timestamp' lvalue ->_expiry_s 0x561d4a1088e8
|       | `-CXXThisExpr 0x561d4a1bc630 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x561d4a1bc6b0 <col:14, col:24> 'Timestamp' xvalue
|         `-CXXTemporaryObjectExpr 0x561d4a1bc680 <col:14, col:24> 'Timestamp' 'void ()'
|-CXXMethodDecl 0x561d4a107f60 <line:304:5, line:310:5> line:304:29 used adjustment 'Timestamp ()' static inline
| `-CompoundStmt 0x561d4a1bcdd8 <col:42, line:310:5>
|   |-IfStmt 0x561d4a1bcc20 <line:306:2, line:307:23>
|   | |-CallExpr 0x561d4a1bcb50 <line:306:6, col:30> 'bool'
|   | | `-ImplicitCastExpr 0x561d4a1bcb38 <col:6, col:17> 'bool (*)()' <FunctionToPointerDecay>
|   | |   `-DeclRefExpr 0x561d4a1bcad8 <col:6, col:17> 'bool ()' lvalue CXXMethod 0x561d4a134560 'warp_jumping' 'bool ()'
|   | `-ReturnStmt 0x561d4a1bcc10 <line:307:6, col:23>
|   |   `-ExprWithCleanups 0x561d4a1bcbf8 <col:13, col:23> 'Timestamp'
|   |     `-CXXConstructExpr 0x561d4a1bcbc8 <col:13, col:23> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x561d4a1bcbb0 <col:13, col:23> 'Timestamp' xvalue
|   |         `-CXXTemporaryObjectExpr 0x561d4a1bcb80 <col:13, col:23> 'Timestamp' 'void ()'
|   `-ReturnStmt 0x561d4a1bcdc8 <line:309:2, col:33>
|     `-ExprWithCleanups 0x561d4a1bcdb0 <col:9, col:33> 'Timestamp'
|       `-CXXConstructExpr 0x561d4a1bcd80 <col:9, col:33> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x561d4a1bcd68 <col:9, col:33> 'Timestamp' xvalue
|           `-CallExpr 0x561d4a1bcd28 <col:9, col:33> 'Timestamp'
|             |-ImplicitCastExpr 0x561d4a1bcd10 <col:9, col:20> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x561d4a1bcce0 <col:9, col:20> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x561d4a116700 'make_usec' 'Timestamp (Timestamp::value_type)'
|             `-ImplicitCastExpr 0x561d4a1bcd50 <col:30> 'Timestamp::value_type':'long' <IntegralCast>
|               `-IntegerLiteral 0x561d4a1bccc0 <col:30> 'int' 500
|-CXXMethodDecl 0x561d4a1080a0 <line:317:5, col:80> col:17 schedule_after_s 'void (uint32_t)' inline
| |-ParmVarDecl 0x561d4a108010 <col:34, col:43> col:43 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x561d4a108148 <col:69> "" ""
|-CXXMethodDecl 0x561d4a108258 <line:323:5, col:81> col:17 schedule_after_ms 'void (uint32_t)' inline
| |-ParmVarDecl 0x561d4a1081c8 <col:35, col:44> col:44 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x561d4a108300 <col:70> "" ""
|-CXXMethodDecl 0x561d4a108410 <line:329:5, col:82> col:17 reschedule_after_s 'void (uint32_t)' inline
| |-ParmVarDecl 0x561d4a108380 <col:36, col:45> col:45 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x561d4a1084b8 <col:71> "" ""
|-CXXMethodDecl 0x561d4a1085c8 <line:335:5, col:83> col:17 reschedule_after_ms 'void (uint32_t)' inline
| |-ParmVarDecl 0x561d4a108538 <col:37, col:46> col:46 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x561d4a108670 <col:72> "" ""
|-EnumDecl 0x561d4a1086e0 <line:337:5, col:27> col:5
| `-EnumConstantDecl 0x561d4a1087e0 <col:12, col:25> col:12 behind_sec 'Timer::(anonymous enum at ../dummy_inc/click/timer.hh:337:5)'
|   `-ImplicitCastExpr 0x561d4a108830 <col:25> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x561d4a1087c0 <col:25> 'int' Int: 1
|       `-IntegerLiteral 0x561d4a1087a0 <col:25> 'int' 1
|-AccessSpecDecl 0x561d4a108848 <line:339:3, col:10> col:3 private
|-FieldDecl 0x561d4a108888 <line:341:5, col:9> col:9 referenced _schedpos1 'int'
|-FieldDecl 0x561d4a1088e8 <line:342:5, col:15> col:15 referenced _expiry_s 'Timestamp'
|-CXXRecordDecl 0x561d4a108938 <line:343:5, line:345:5> line:343:5 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x561d4a108a68 <line:344:2, col:16> col:16 referenced callback 'TimerCallback':'void (*)(Timer *, void *)'
| `-CXXDestructorDecl 0x561d4a109558 <line:343:5> col:5 implicit ~ 'void () noexcept' inline default trivial
|-FieldDecl 0x561d4a108b28 <col:5, line:345:7> col:7 referenced _hook 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)'
|-FieldDecl 0x561d4a108ba8 <line:346:5, col:11> col:11 referenced _thunk 'void *'
|-FieldDecl 0x561d4a108c08 <line:347:5, col:14> col:14 referenced _owner 'Element *'
|-FieldDecl 0x561d4a108c68 <line:348:5, col:19> col:19 referenced _thread 'RouterThread *'
|-CXXMethodDecl 0x561d4a108db8 <line:350:5, col:36> col:12 operator= 'Timer &(const Timer &)'
| `-ParmVarDecl 0x561d4a108cc8 <col:22, col:35> col:35 x 'const Timer &'
|-CXXMethodDecl 0x561d4a108f88 <line:352:5, col:58> col:17 used do_nothing_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x561d4a108e70 <col:33, col:40> col:40 t 'Timer *'
| `-ParmVarDecl 0x561d4a108ef0 <col:43, col:49> col:49 user_data 'void *'
|-CXXMethodDecl 0x561d4a109160 <line:353:5, col:55> col:17 used element_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x561d4a109048 <col:30, col:37> col:37 t 'Timer *'
| `-ParmVarDecl 0x561d4a1090c8 <col:40, col:46> col:46 user_data 'void *'
|-CXXMethodDecl 0x561d4a109338 <line:354:5, col:52> col:17 used task_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x561d4a109220 <col:27, col:34> col:34 t 'Timer *'
| `-ParmVarDecl 0x561d4a1092a0 <col:37, col:43> col:43 user_data 'void *'
`-FriendDecl 0x561d4a109508 <line:356:5, col:18> col:12 'class TimerSet':'TimerSet'

Layout: <CGRecordLayout
  LLVMType:%class.Timer = type { i32, %class.Timestamp, %union.anon, i8*, %class.Element*, %class.RouterThread* }
  NonVirtualBaseLLVMType:%class.Timer = type { i32, %class.Timestamp, %union.anon, i8*, %class.Element*, %class.RouterThread* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct String::rep_t
         0 |   const char * data
         8 |   int length
        16 |   struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class String
         0 |   struct String::rep_t _r
         0 |     const char * data
         8 |     int length
        16 |     struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x561d49f567a0 <../dummy_inc/click/string.hh:189:5, line:198:5> line:189:12 referenced struct memo_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x561d49f568b8 <col:5, col:12> col:12 implicit struct memo_t
|-FieldDecl 0x561d49f56958 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
|-FieldDecl 0x561d49f569b8 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
|-FieldDecl 0x561d49f56a18 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
`-FieldDecl 0x561d49f56ac8 <line:197:2, col:18> col:7 real_data 'char [8]'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  NonVirtualBaseLLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x561d49f56dd0 <../dummy_inc/click/string.hh:204:5, line:208:5> line:204:12 referenced struct rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x561d49f56ee8 <col:5, col:12> col:12 implicit struct rep_t
|-FieldDecl 0x561d49f56f90 <line:205:2, col:14> col:14 referenced data 'const char *'
|-FieldDecl 0x561d49f56ff8 <line:206:2, col:6> col:6 referenced length 'int'
|-FieldDecl 0x561d49f57088 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
|-CXXConstructorDecl 0x561d49f5d120 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x561d49f5d558 <col:12>
|-CXXConstructorDecl 0x561d49f5d228 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x561d49f5d338 <col:12> col:12 used 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x561d49f56f90 'data' 'const char *'
| | `-ImplicitCastExpr 0x561d49f5fae0 <col:12> 'const char *' <LValueToRValue>
| |   `-MemberExpr 0x561d49f5fab0 <col:12> 'const char *const' lvalue .data 0x561d49f56f90
| |     `-DeclRefExpr 0x561d49f5fa90 <col:12> 'const String::rep_t' lvalue ParmVar 0x561d49f5d338 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x561d49f56ff8 'length' 'int'
| | `-ImplicitCastExpr 0x561d49f5fb70 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x561d49f5fb40 <col:12> 'const int' lvalue .length 0x561d49f56ff8
| |     `-DeclRefExpr 0x561d49f5fb20 <col:12> 'const String::rep_t' lvalue ParmVar 0x561d49f5d338 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x561d49f57088 'memo' 'String::memo_t *'
| | `-ImplicitCastExpr 0x561d49f5fc00 <col:12> 'String::memo_t *' <LValueToRValue>
| |   `-MemberExpr 0x561d49f5fbd0 <col:12> 'String::memo_t *const' lvalue .memo 0x561d49f57088
| |     `-DeclRefExpr 0x561d49f5fbb0 <col:12> 'const String::rep_t' lvalue ParmVar 0x561d49f5d338 '' 'const String::rep_t &'
| `-CompoundStmt 0x561d49f5fc58 <col:12>
|-CXXConstructorDecl 0x561d49f5d3d8 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x561d49f5d3d8
| `-ParmVarDecl 0x561d49f5d4e8 <col:12> col:12 'String::rep_t &&'
|-CXXDestructorDecl 0x561d49f62a40 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x561d49f6e458 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x561d49f6e568 <col:12> col:12 used 'const String::rep_t &'
| `-CompoundStmt 0x561d49f6ea80 <col:12>
|   |-BinaryOperator 0x561d49f6e898 <col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x561d49f6e850 <col:12> 'const char *' lvalue ->data 0x561d49f56f90
|   | | `-CXXThisExpr 0x561d49f6e840 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x561d49f6e880 <col:12> 'const char *' <LValueToRValue>
|   |   `-MemberExpr 0x561d49f6e810 <col:12> 'const char *const' lvalue .data 0x561d49f56f90
|   |     `-DeclRefExpr 0x561d49f6e7f0 <col:12> 'const String::rep_t' lvalue ParmVar 0x561d49f6e568 '' 'const String::rep_t &'
|   |-BinaryOperator 0x561d49f6e960 <col:12> 'int' lvalue '='
|   | |-MemberExpr 0x561d49f6e918 <col:12> 'int' lvalue ->length 0x561d49f56ff8
|   | | `-CXXThisExpr 0x561d49f6e908 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x561d49f6e948 <col:12> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x561d49f6e8d8 <col:12> 'const int' lvalue .length 0x561d49f56ff8
|   |     `-DeclRefExpr 0x561d49f6e8b8 <col:12> 'const String::rep_t' lvalue ParmVar 0x561d49f6e568 '' 'const String::rep_t &'
|   |-BinaryOperator 0x561d49f6ea28 <col:12> 'String::memo_t *' lvalue '='
|   | |-MemberExpr 0x561d49f6e9e0 <col:12> 'String::memo_t *' lvalue ->memo 0x561d49f57088
|   | | `-CXXThisExpr 0x561d49f6e9d0 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x561d49f6ea10 <col:12> 'String::memo_t *' <LValueToRValue>
|   |   `-MemberExpr 0x561d49f6e9a0 <col:12> 'String::memo_t *const' lvalue .memo 0x561d49f57088
|   |     `-DeclRefExpr 0x561d49f6e980 <col:12> 'const String::rep_t' lvalue ParmVar 0x561d49f6e568 '' 'const String::rep_t &'
|   `-ReturnStmt 0x561d49f6ea70 <col:12>
|     `-UnaryOperator 0x561d49f6ea58 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x561d49f6ea48 <col:12> 'String::rep_t *' this
`-CXXMethodDecl 0x561d49f6e5d8 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x561d49f6e5d8
  `-ParmVarDecl 0x561d49f6e6e8 <col:12> col:12 'String::rep_t &&'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  NonVirtualBaseLLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x561d49f4dd10 <../dummy_inc/click/string.hh:19:1, line:304:1> line:19:7 referenced class String definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x561d49f4de28 <col:1, col:7> col:7 implicit referenced class String
|-AccessSpecDecl 0x561d49f4deb8 <col:16, col:22> col:16 public
|-TypedefDecl 0x561d49f4def8 <line:21:5, col:25> col:25 referenced const_iterator 'const char *'
| `-PointerType 0x561d49c1fdc0 'const char *'
|   `-QualType 0x561d49c1f311 'const char' const
|     `-BuiltinType 0x561d49c1f310 'char'
|-TypedefDecl 0x561d49f4df80 <line:22:5, col:28> col:28 iterator 'String::const_iterator':'const char *'
| `-TypedefType 0x561d49f4df50 'String::const_iterator' sugar
|   |-Typedef 0x561d49f4def8 'const_iterator'
|   `-PointerType 0x561d49c1fdc0 'const char *'
|     `-QualType 0x561d49c1f311 'const char' const
|       `-BuiltinType 0x561d49c1f310 'char'
|-TypedefDecl 0x561d49f4e0f0 <line:24:5, col:52> col:27 referenced unspecified_bool_type 'int (String::*)() const'
| `-MemberPointerType 0x561d49f4e060 'int (String::*)() const'
|   |-RecordType 0x561d49f4dda0 'String'
|   | `-CXXRecord 0x561d49f4dd10 'String'
|   `-ParenType 0x561d49f4e000 'int () const' sugar
|     `-FunctionProtoType 0x561d49f21b90 'int () const' const cdecl
|       `-BuiltinType 0x561d49c1f370 'int'
|-TypedefDecl 0x561d49f4e158 <line:27:5, col:21> col:21 referenced intmax_t 'int64_t':'long'
| `-TypedefType 0x561d49d76390 'int64_t' sugar
|   |-Typedef 0x561d49c882d0 'int64_t'
|   `-TypedefType 0x561d49c614d0 '__int64_t' sugar
|     |-Typedef 0x561d49c610a8 '__int64_t'
|     `-BuiltinType 0x561d49c1f390 'long'
|-TypedefDecl 0x561d49f4e1c0 <line:28:5, col:22> col:22 referenced uintmax_t 'uint64_t':'unsigned long'
| `-TypedefType 0x561d49d762b0 'uint64_t' sugar
|   |-Typedef 0x561d49c88470 'uint64_t'
|   `-TypedefType 0x561d49c61560 '__uint64_t' sugar
|     |-Typedef 0x561d49c61118 '__uint64_t'
|     `-BuiltinType 0x561d49c1f430 'unsigned long'
|-TypedefDecl 0x561d49f4e250 <line:36:5, col:22> col:22 int_large_t 'String::intmax_t':'long'
| `-TypedefType 0x561d49f4e220 'String::intmax_t' sugar
|   |-Typedef 0x561d49f4e158 'intmax_t'
|   `-TypedefType 0x561d49d76390 'int64_t' sugar
|     |-Typedef 0x561d49c882d0 'int64_t'
|     `-TypedefType 0x561d49c614d0 '__int64_t' sugar
|       |-Typedef 0x561d49c610a8 '__int64_t'
|       `-BuiltinType 0x561d49c1f390 'long'
|-TypedefDecl 0x561d49f4e2e0 <line:37:5, col:23> col:23 uint_large_t 'String::uintmax_t':'unsigned long'
| `-TypedefType 0x561d49f4e2b0 'String::uintmax_t' sugar
|   |-Typedef 0x561d49f4e1c0 'uintmax_t'
|   `-TypedefType 0x561d49d762b0 'uint64_t' sugar
|     |-Typedef 0x561d49c88470 'uint64_t'
|     `-TypedefType 0x561d49c61560 '__uint64_t' sugar
|       |-Typedef 0x561d49c61118 '__uint64_t'
|       `-BuiltinType 0x561d49c1f430 'unsigned long'
|-CXXConstructorDecl 0x561d49f4e3a0 <line:39:5, col:19> col:12 used String 'void ()' inline
|-CXXConstructorDecl 0x561d49f4e548 <line:40:5, col:34> col:12 used String 'void (const String &)' inline
| `-ParmVarDecl 0x561d49f4e488 <col:19, col:33> col:33 x 'const String &'
|-CXXConstructorDecl 0x561d49f4e6f8 <line:42:5, col:29> col:12 used String 'void (String &&)' inline
| `-ParmVarDecl 0x561d49f4e638 <col:19, col:28> col:28 x 'String &&'
|-CXXConstructorDecl 0x561d49f4e850 <line:44:5, col:35> col:12 used String 'void (const char *)' inline
| `-ParmVarDecl 0x561d49f4e7c0 <col:19, col:31> col:31 cstr 'const char *'
|-CXXConstructorDecl 0x561d49f4ea68 <line:45:5, col:41> col:12 String 'void (const char *, int)' inline
| |-ParmVarDecl 0x561d49f4e918 <col:19, col:31> col:31 s 'const char *'
| `-ParmVarDecl 0x561d49f4e998 <col:34, col:38> col:38 len 'int'
|-CXXConstructorDecl 0x561d49f4ec88 <line:46:5, col:50> col:12 String 'void (const unsigned char *, int)' inline
| |-ParmVarDecl 0x561d49f4eb38 <col:19, col:40> col:40 s 'const unsigned char *'
| `-ParmVarDecl 0x561d49f4ebb8 <col:43, col:47> col:47 len 'int'
|-CXXConstructorDecl 0x561d49f4eea8 <line:47:5, col:54> col:12 used String 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x561d49f4ed58 <col:19, col:31> col:31 first 'const char *'
| `-ParmVarDecl 0x561d49f4edd8 <col:38, col:50> col:50 last 'const char *'
|-CXXConstructorDecl 0x561d49f4f0c8 <line:48:5, col:72> col:12 String 'void (const unsigned char *, const unsigned char *)' inline
| |-ParmVarDecl 0x561d49f4ef78 <col:19, col:40> col:40 first 'const unsigned char *'
| `-ParmVarDecl 0x561d49f4eff8 <col:47, col:68> col:68 last 'const unsigned char *'
|-CXXConstructorDecl 0x561d49f4f258 <line:49:5, col:34> col:21 String 'void (bool)' inline
| `-ParmVarDecl 0x561d49f4f190 <col:28, col:33> col:33 x 'bool'
|-CXXConstructorDecl 0x561d49f4f3d8 <line:50:5, col:34> col:21 String 'void (char)' inline
| `-ParmVarDecl 0x561d49f4f318 <col:28, col:33> col:33 c 'char'
|-CXXConstructorDecl 0x561d49f4f568 <line:51:5, col:43> col:21 String 'void (unsigned char)' inline
| `-ParmVarDecl 0x561d49f4f4a0 <col:28, col:42> col:42 c 'unsigned char'
|-CXXConstructorDecl 0x561d49f4f6c0 <line:52:5, col:26> col:14 String 'void (int)'
| `-ParmVarDecl 0x561d49f4f630 <col:21, col:25> col:25 x 'int'
|-CXXConstructorDecl 0x561d49f4f818 <line:53:5, col:31> col:14 String 'void (unsigned int)'
| `-ParmVarDecl 0x561d49f4f788 <col:21, col:30> col:30 x 'unsigned int'
|-CXXConstructorDecl 0x561d49f4f970 <line:54:5, col:27> col:14 String 'void (long)'
| `-ParmVarDecl 0x561d49f4f8e0 <col:21, col:26> col:26 x 'long'
|-CXXConstructorDecl 0x561d49f4faf8 <line:55:5, col:36> col:14 String 'void (unsigned long)'
| `-ParmVarDecl 0x561d49f4fa38 <col:21, col:35> col:35 x 'unsigned long'
|-CXXConstructorDecl 0x561d49f4fc88 <line:57:5, col:32> col:14 String 'void (long long)'
| `-ParmVarDecl 0x561d49f4fbc0 <col:21, col:31> col:31 x 'long long'
|-CXXConstructorDecl 0x561d49f4fe18 <line:58:5, col:41> col:14 String 'void (unsigned long long)'
| `-ParmVarDecl 0x561d49f4fd50 <col:21, col:40> col:40 x 'unsigned long long'
|-CXXConstructorDecl 0x561d49f4ffa8 <line:65:5, col:29> col:14 String 'void (double)'
| `-ParmVarDecl 0x561d49f4fee0 <col:21, col:28> col:28 x 'double'
|-CXXDestructorDecl 0x561d49f500a0 <line:67:5, col:20> col:12 used ~String 'void () noexcept' inline
|-CXXMethodDecl 0x561d49f501c8 <line:69:5, col:44> col:33 make_empty 'const String &()' static inline
|-CXXMethodDecl 0x561d49f50348 <line:70:5, col:52> col:26 used make_uninitialized 'String (int)' static inline
| `-ParmVarDecl 0x561d49f50280 <col:45, col:49> col:49 len 'int'
|-CXXMethodDecl 0x561d49f50498 <line:71:5, col:74> col:26 make_garbage 'String (int)' static inline
| |-ParmVarDecl 0x561d49f50408 <col:39, col:43> col:43 len 'int'
| `-DeprecatedAttr 0x561d49f50550 <col:63> "" ""
|-CXXMethodDecl 0x561d49f50698 <line:72:5, col:54> col:26 make_stable 'String (const char *)' static inline
| `-ParmVarDecl 0x561d49f505d8 <col:38, col:50> col:50 cstr 'const char *'
|-CXXMethodDecl 0x561d49f508a8 <line:73:5, col:60> col:26 make_stable 'String (const char *, int)' static inline
| |-ParmVarDecl 0x561d49f50758 <col:38, col:50> col:50 s 'const char *'
| `-ParmVarDecl 0x561d49f507d8 <col:53, col:57> col:57 len 'int'
|-CXXMethodDecl 0x561d49f50ac8 <line:74:5, col:73> col:26 make_stable 'String (const char *, const char *)' static inline
| |-ParmVarDecl 0x561d49f50970 <col:38, col:50> col:50 first 'const char *'
| `-ParmVarDecl 0x561d49f509f0 <col:57, col:69> col:69 last 'const char *'
|-CXXMethodDecl 0x561d49f50da8 <line:75:5, col:80> col:19 make_numeric 'String (String::intmax_t, int, bool)' static
| |-ParmVarDecl 0x561d49f50b88 <col:32, col:41> col:41 x 'String::intmax_t':'long'
| |-ParmVarDecl 0x561d49f50c08 <col:44, col:55> col:48 base 'int' cinit
| | `-IntegerLiteral 0x561d49f5cbf0 <col:55> 'int' 10
| `-ParmVarDecl 0x561d49f50c80 <col:59, col:76> col:64 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x561d49f5cc10 <col:76> 'bool' true
|-CXXMethodDecl 0x561d49f51088 <line:76:5, col:81> col:19 make_numeric 'String (String::uintmax_t, int, bool)' static
| |-ParmVarDecl 0x561d49f50e70 <col:32, col:42> col:42 x 'String::uintmax_t':'unsigned long'
| |-ParmVarDecl 0x561d49f50ef0 <col:45, col:56> col:49 base 'int' cinit
| | `-IntegerLiteral 0x561d49f5cc20 <col:56> 'int' 10
| `-ParmVarDecl 0x561d49f50f68 <col:60, col:77> col:65 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x561d49f5cc40 <col:77> 'bool' true
|-CXXMethodDecl 0x561d49f51190 <line:78:5, col:31> col:24 used data 'const char *() const' inline
|-CXXMethodDecl 0x561d49f51258 <line:79:5, col:25> col:16 used length 'int () const' inline
|-CXXMethodDecl 0x561d49f51320 <line:81:5, col:60> col:52 c_str 'const char *() const'
| |-NoInlineAttr 0x561d49f513c0 <col:20>
| `-OptimizeNoneAttr 0x561d49f51418 <col:30>
|-CXXConversionDecl 0x561d49f51508 <line:83:5, col:45> col:12 operator int (String::*)() const 'String::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x561d49f515d8 <line:84:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x561d49f51698 <line:85:5, col:29> col:17 operator! 'bool () const' inline
|-CXXMethodDecl 0x561d49f51788 <line:87:5, col:35> col:27 used begin 'String::const_iterator () const' inline
|-CXXMethodDecl 0x561d49f51848 <line:88:5, col:33> col:27 used end 'String::const_iterator () const' inline
|-CXXMethodDecl 0x561d49f519c8 <line:90:5, col:35> col:17 operator[] 'char (int) const' inline
| `-ParmVarDecl 0x561d49f51900 <col:28, col:32> col:32 i 'int'
|-CXXMethodDecl 0x561d49f51b18 <line:91:5, col:27> col:17 at 'char (int) const' inline
| `-ParmVarDecl 0x561d49f51a88 <col:20, col:24> col:24 i 'int'
|-CXXMethodDecl 0x561d49f51c08 <line:92:5, col:25> col:17 front 'char () const' inline
|-CXXMethodDecl 0x561d49f51cc8 <line:93:5, col:24> col:17 back 'char () const' inline
|-CXXMethodDecl 0x561d49f51f18 <line:95:5, col:64> col:21 used hashcode 'uint32_t (const char *, const char *)' static
| |-ParmVarDecl 0x561d49f51d80 <col:30, col:42> col:42 begin 'const char *'
| `-ParmVarDecl 0x561d49f51e00 <col:49, col:61> col:61 end 'const char *'
|-CXXMethodDecl 0x561d49f52178 <line:96:5, line:97:33> line:96:28 hashcode 'uint32_t (const unsigned char *, const unsigned char *)' static inline
| |-ParmVarDecl 0x561d49f51fe0 <col:37, col:58> col:58 begin 'const unsigned char *'
| `-ParmVarDecl 0x561d49f52060 <line:97:9, col:30> col:30 end 'const unsigned char *'
|-CXXMethodDecl 0x561d49f52248 <line:98:5, col:32> col:21 hashcode 'uint32_t () const' inline
|-CXXMethodDecl 0x561d49f52458 <line:100:5, col:65> col:19 substring 'String (const char *, const char *) const' inline
| |-ParmVarDecl 0x561d49f52300 <col:29, col:41> col:41 begin 'const char *'
| `-ParmVarDecl 0x561d49f52380 <col:48, col:60> col:60 end 'const char *'
|-CXXMethodDecl 0x561d49f52678 <line:101:5, col:40> col:12 used substring 'String (int, int) const'
| |-ParmVarDecl 0x561d49f52520 <col:22, col:26> col:26 pos 'int'
| `-ParmVarDecl 0x561d49f525a0 <col:31, col:35> col:35 len 'int'
|-CXXMethodDecl 0x561d49f52808 <line:102:5, col:38> col:19 substring 'String (int) const' inline
| `-ParmVarDecl 0x561d49f52740 <col:29, col:33> col:33 pos 'int'
|-CXXMethodDecl 0x561d49f528f8 <line:103:5, col:25> col:12 trim_space 'String () const'
|-CXXMethodDecl 0x561d49f52a68 <line:105:5, col:41> col:17 equals 'bool (const String &) const' inline
| `-ParmVarDecl 0x561d49f529a8 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x561d49f52c78 <line:106:5, col:48> col:17 used equals 'bool (const char *, int) const' inline
| |-ParmVarDecl 0x561d49f52b28 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x561d49f52ba8 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x561d49f52e90 <line:107:5, col:63> col:23 used compare 'int (const String &, const String &)' static inline
| |-ParmVarDecl 0x561d49f52d38 <col:31, col:45> col:45 a 'const String &'
| `-ParmVarDecl 0x561d49f52db0 <col:48, col:62> col:62 b 'const String &'
|-CXXMethodDecl 0x561d49f53020 <line:108:5, col:41> col:16 used compare 'int (const String &) const' inline
| `-ParmVarDecl 0x561d49f52f50 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x561d49f53240 <line:109:5, col:41> col:9 used compare 'int (const char *, int) const'
| |-ParmVarDecl 0x561d49f530e0 <col:17, col:29> col:29 s 'const char *'
| `-ParmVarDecl 0x561d49f53160 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x561d49f53390 <line:110:5, col:46> col:17 starts_with 'bool (const String &) const' inline
| `-ParmVarDecl 0x561d49f53300 <col:29, col:43> col:43 x 'const String &'
|-CXXMethodDecl 0x561d49f53568 <line:111:5, col:46> col:10 used starts_with 'bool (const char *, int) const'
| |-ParmVarDecl 0x561d49f53450 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x561d49f534d0 <col:37, col:41> col:41 len 'int'
|-CXXMethodDecl 0x561d49f536b8 <line:112:5, col:44> col:10 glob_match 'bool (const String &) const'
| `-ParmVarDecl 0x561d49f53628 <col:21, col:35> col:35 pattern 'const String &'
|-CXXMethodDecl 0x561d49f538d0 <line:125:5, col:42> col:9 find_left 'int (char, int) const'
| |-ParmVarDecl 0x561d49f53770 <col:19, col:24> col:24 c 'char'
| `-ParmVarDecl 0x561d49f537f0 <col:27, col:39> col:31 start 'int' cinit
|   `-IntegerLiteral 0x561d49f5cc50 <col:39> 'int' 0
|-CXXMethodDecl 0x561d49f53af0 <line:126:5, col:51> col:9 find_left 'int (const String &, int) const'
| |-ParmVarDecl 0x561d49f53990 <col:19, col:33> col:33 x 'const String &'
| `-ParmVarDecl 0x561d49f53a10 <col:36, col:48> col:40 start 'int' cinit
|   `-IntegerLiteral 0x561d49f5cc70 <col:48> 'int' 0
|-CXXMethodDecl 0x561d49f53cd0 <line:127:5, col:52> col:9 find_right 'int (char, int) const'
| |-ParmVarDecl 0x561d49f53bb0 <col:20, col:25> col:25 c 'char'
| `-ParmVarDecl 0x561d49f53c30 <col:28, col:40> col:32 start 'int' cinit
|   `-IntegerLiteral 0x561d49f5cc90 <col:40> 'int' 2147483647
|-CXXMethodDecl 0x561d49f53da0 <line:129:5, col:20> col:12 lower 'String () const'
|-CXXMethodDecl 0x561d49f53e60 <line:130:5, col:20> col:12 upper 'String () const'
|-CXXMethodDecl 0x561d49f53f20 <line:131:5, col:24> col:12 printable 'String () const'
|-CXXMethodDecl 0x561d49f53fe0 <line:132:5, col:25> col:12 quoted_hex 'String () const'
|-CXXMethodDecl 0x561d49f540a0 <line:133:5, col:26> col:12 encode_json 'String () const'
|-CXXMethodDecl 0x561d49f54248 <line:135:5, col:45> col:20 operator= 'String &(const String &)' inline
| `-ParmVarDecl 0x561d49f54150 <col:30, col:44> col:44 x 'const String &'
|-CXXMethodDecl 0x561d49f543c8 <line:137:5, col:40> col:20 operator= 'String &(String &&)' inline
| `-ParmVarDecl 0x561d49f54300 <col:30, col:39> col:39 x 'String &&'
|-CXXMethodDecl 0x561d49f545a0 <line:139:5, col:46> col:20 operator= 'String &(const char *)' inline
| `-ParmVarDecl 0x561d49f54488 <col:30, col:42> col:42 cstr 'const char *'
|-CXXMethodDecl 0x561d49f54718 <line:141:5, col:31> col:17 swap 'void (String &)' inline
| `-ParmVarDecl 0x561d49f54658 <col:22, col:30> col:30 x 'String &'
|-CXXMethodDecl 0x561d49f54860 <line:143:5, col:39> col:17 append 'void (const String &)' inline
| `-ParmVarDecl 0x561d49f547d0 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x561d49f549b0 <line:144:5, col:40> col:17 used append 'void (const char *)' inline
| `-ParmVarDecl 0x561d49f54920 <col:24, col:36> col:36 cstr 'const char *'
|-CXXMethodDecl 0x561d49f54b88 <line:145:5, col:46> col:17 used append 'void (const char *, int)' inline
| |-ParmVarDecl 0x561d49f54a70 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x561d49f54af0 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x561d49f54d68 <line:146:5, col:59> col:17 append 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x561d49f54c50 <col:24, col:36> col:36 first 'const char *'
| `-ParmVarDecl 0x561d49f54cd0 <col:43, col:55> col:55 last 'const char *'
|-CXXMethodDecl 0x561d49f54eb8 <line:147:5, col:30> col:17 append 'void (char)' inline
| `-ParmVarDecl 0x561d49f54e28 <col:24, col:29> col:29 c 'char'
|-CXXMethodDecl 0x561d49f550c8 <line:148:5, col:36> col:10 append_fill 'void (int, int)'
| |-ParmVarDecl 0x561d49f54f78 <col:22, col:26> col:26 c 'int'
| `-ParmVarDecl 0x561d49f54ff8 <col:29, col:33> col:33 len 'int'
|-CXXMethodDecl 0x561d49f55228 <line:149:5, col:39> col:11 used append_uninitialized 'char *(int)'
| `-ParmVarDecl 0x561d49f55190 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x561d49f55380 <line:150:5, col:68> col:18 append_garbage 'char *(int)' inline
| |-ParmVarDecl 0x561d49f552e8 <col:33, col:37> col:37 len 'int'
| `-DeprecatedAttr 0x561d49f55428 <col:57> "" ""
|-CXXMethodDecl 0x561d49f55538 <line:152:5, col:46> col:20 used operator+= 'String &(const String &)' inline
| `-ParmVarDecl 0x561d49f554a8 <col:31, col:45> col:45 x 'const String &'
|-CXXMethodDecl 0x561d49f55688 <line:153:5, col:47> col:20 operator+= 'String &(const char *)' inline
| `-ParmVarDecl 0x561d49f555f8 <col:31, col:43> col:43 cstr 'const char *'
|-CXXMethodDecl 0x561d49f55808 <line:154:5, col:37> col:20 operator+= 'String &(char)' inline
| `-ParmVarDecl 0x561d49f55740 <col:31, col:36> col:36 c 'char'
|-CXXMethodDecl 0x561d49f558d0 <line:160:5, col:29> col:17 is_shared 'bool () const' inline
|-CXXMethodDecl 0x561d49f55990 <line:161:5, col:29> col:17 is_stable 'bool () const' inline
|-CXXMethodDecl 0x561d49f55a50 <line:163:5, col:60> col:19 unique 'String () const' inline
| `-DeprecatedAttr 0x561d49f55af0 <col:49> "" ""
|-CXXMethodDecl 0x561d49f55b80 <line:164:5, col:30> col:19 used unshared 'String () const' inline
|-CXXMethodDecl 0x561d49f55c40 <line:165:5, col:29> col:19 compact 'String () const' inline
|-CXXMethodDecl 0x561d49f55d30 <line:167:5, col:24> col:11 mutable_data 'char *()'
|-CXXMethodDecl 0x561d49f55df8 <line:168:5, col:25> col:11 mutable_c_str 'char *()'
|-CXXMethodDecl 0x561d49f55eb8 <line:170:5, col:52> col:33 make_out_of_memory 'const String &()' static inline
|-CXXMethodDecl 0x561d49f55f78 <line:171:5, col:33> col:17 out_of_memory 'bool () const' inline
|-CXXMethodDecl 0x561d49f56070 <line:172:5, col:50> col:31 out_of_memory_data 'const char *()' static inline
|-CXXMethodDecl 0x561d49f56138 <line:173:5, col:44> col:23 out_of_memory_length 'int ()' static inline
|-CXXMethodDecl 0x561d49f56200 <line:174:5, col:42> col:31 empty_data 'const char *()' static inline
|-CXXMethodDecl 0x561d49f563d8 <line:180:5, col:81> col:31 skip_utf8_char 'const char *(const char *, const char *)' static inline
| |-ParmVarDecl 0x561d49f562b8 <col:46, col:58> col:58 first 'const char *'
| `-ParmVarDecl 0x561d49f56338 <col:65, col:77> col:77 last 'const char *'
|-CXXMethodDecl 0x561d49f56600 <line:181:5, line:182:38> line:181:33 used skip_utf8_char 'const unsigned char *(const unsigned char *, const unsigned char *)' static
| |-ParmVarDecl 0x561d49f564a0 <col:48, col:69> col:69 first 'const unsigned char *'
| `-ParmVarDecl 0x561d49f56520 <line:182:13, col:34> col:34 last 'const unsigned char *'
|-VarDecl 0x561d49f56710 <line:184:5, col:35> col:23 used bool_data 'const char [11]' static
|-AccessSpecDecl 0x561d49f56778 <line:186:3, col:10> col:3 private
|-CXXRecordDecl 0x561d49f567a0 <line:189:5, line:198:5> line:189:12 referenced struct memo_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x561d49f568b8 <col:5, col:12> col:12 implicit struct memo_t
| |-FieldDecl 0x561d49f56958 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
| |-FieldDecl 0x561d49f569b8 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
| |-FieldDecl 0x561d49f56a18 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
| `-FieldDecl 0x561d49f56ac8 <line:197:2, col:18> col:7 real_data 'char [8]'
|-EnumDecl 0x561d49f56b30 <line:200:5, line:202:5> line:200:5
| `-EnumConstantDecl 0x561d49f56d68 <line:201:2, col:32> col:2 MEMO_SPACE 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)'
|   `-ImplicitCastExpr 0x561d49f56db8 <col:15, col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x561d49f56d48 <col:15, col:32> 'unsigned long' Int: 12
|       `-BinaryOperator 0x561d49f56c58 <col:15, col:32> 'unsigned long' '-'
|         |-UnaryExprOrTypeTraitExpr 0x561d49f56c00 <col:15, col:28> 'unsigned long' sizeof 'String::memo_t'
|         `-ImplicitCastExpr 0x561d49f56c40 <col:32> 'unsigned long' <IntegralCast>
|           `-IntegerLiteral 0x561d49f56c20 <col:32> 'int' 8
|-CXXRecordDecl 0x561d49f56dd0 <line:204:5, line:208:5> line:204:12 referenced struct rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x561d49f56ee8 <col:5, col:12> col:12 implicit struct rep_t
| |-FieldDecl 0x561d49f56f90 <line:205:2, col:14> col:14 referenced data 'const char *'
| |-FieldDecl 0x561d49f56ff8 <line:206:2, col:6> col:6 referenced length 'int'
| |-FieldDecl 0x561d49f57088 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
| |-CXXConstructorDecl 0x561d49f5d120 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x561d49f5d558 <col:12>
| |-CXXConstructorDecl 0x561d49f5d228 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x561d49f5d338 <col:12> col:12 used 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x561d49f56f90 'data' 'const char *'
| | | `-ImplicitCastExpr 0x561d49f5fae0 <col:12> 'const char *' <LValueToRValue>
| | |   `-MemberExpr 0x561d49f5fab0 <col:12> 'const char *const' lvalue .data 0x561d49f56f90
| | |     `-DeclRefExpr 0x561d49f5fa90 <col:12> 'const String::rep_t' lvalue ParmVar 0x561d49f5d338 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x561d49f56ff8 'length' 'int'
| | | `-ImplicitCastExpr 0x561d49f5fb70 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x561d49f5fb40 <col:12> 'const int' lvalue .length 0x561d49f56ff8
| | |     `-DeclRefExpr 0x561d49f5fb20 <col:12> 'const String::rep_t' lvalue ParmVar 0x561d49f5d338 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x561d49f57088 'memo' 'String::memo_t *'
| | | `-ImplicitCastExpr 0x561d49f5fc00 <col:12> 'String::memo_t *' <LValueToRValue>
| | |   `-MemberExpr 0x561d49f5fbd0 <col:12> 'String::memo_t *const' lvalue .memo 0x561d49f57088
| | |     `-DeclRefExpr 0x561d49f5fbb0 <col:12> 'const String::rep_t' lvalue ParmVar 0x561d49f5d338 '' 'const String::rep_t &'
| | `-CompoundStmt 0x561d49f5fc58 <col:12>
| |-CXXConstructorDecl 0x561d49f5d3d8 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x561d49f5d3d8
| | `-ParmVarDecl 0x561d49f5d4e8 <col:12> col:12 'String::rep_t &&'
| |-CXXDestructorDecl 0x561d49f62a40 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x561d49f6e458 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x561d49f6e568 <col:12> col:12 used 'const String::rep_t &'
| | `-CompoundStmt 0x561d49f6ea80 <col:12>
| |   |-BinaryOperator 0x561d49f6e898 <col:12> 'const char *' lvalue '='
| |   | |-MemberExpr 0x561d49f6e850 <col:12> 'const char *' lvalue ->data 0x561d49f56f90
| |   | | `-CXXThisExpr 0x561d49f6e840 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x561d49f6e880 <col:12> 'const char *' <LValueToRValue>
| |   |   `-MemberExpr 0x561d49f6e810 <col:12> 'const char *const' lvalue .data 0x561d49f56f90
| |   |     `-DeclRefExpr 0x561d49f6e7f0 <col:12> 'const String::rep_t' lvalue ParmVar 0x561d49f6e568 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x561d49f6e960 <col:12> 'int' lvalue '='
| |   | |-MemberExpr 0x561d49f6e918 <col:12> 'int' lvalue ->length 0x561d49f56ff8
| |   | | `-CXXThisExpr 0x561d49f6e908 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x561d49f6e948 <col:12> 'int' <LValueToRValue>
| |   |   `-MemberExpr 0x561d49f6e8d8 <col:12> 'const int' lvalue .length 0x561d49f56ff8
| |   |     `-DeclRefExpr 0x561d49f6e8b8 <col:12> 'const String::rep_t' lvalue ParmVar 0x561d49f6e568 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x561d49f6ea28 <col:12> 'String::memo_t *' lvalue '='
| |   | |-MemberExpr 0x561d49f6e9e0 <col:12> 'String::memo_t *' lvalue ->memo 0x561d49f57088
| |   | | `-CXXThisExpr 0x561d49f6e9d0 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x561d49f6ea10 <col:12> 'String::memo_t *' <LValueToRValue>
| |   |   `-MemberExpr 0x561d49f6e9a0 <col:12> 'String::memo_t *const' lvalue .memo 0x561d49f57088
| |   |     `-DeclRefExpr 0x561d49f6e980 <col:12> 'const String::rep_t' lvalue ParmVar 0x561d49f6e568 '' 'const String::rep_t &'
| |   `-ReturnStmt 0x561d49f6ea70 <col:12>
| |     `-UnaryOperator 0x561d49f6ea58 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x561d49f6ea48 <col:12> 'String::rep_t *' this
| `-CXXMethodDecl 0x561d49f6e5d8 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x561d49f6e5d8
|   `-ParmVarDecl 0x561d49f6e6e8 <col:12> col:12 'String::rep_t &&'
|-FieldDecl 0x561d49f57100 <line:211:5, col:19> col:19 referenced _r 'String::rep_t' mutable
|-CXXMethodDecl 0x561d49f57348 <line:256:5, line:261:5> line:256:17 used assign_memo 'void (const char *, int, String::memo_t *) const' inline
| |-ParmVarDecl 0x561d49f57168 <col:29, col:41> col:41 used data 'const char *'
| |-ParmVarDecl 0x561d49f571e8 <col:47, col:51> col:51 used length 'int'
| |-ParmVarDecl 0x561d49f57260 <col:59, col:67> col:67 used memo 'String::memo_t *'
| `-CompoundStmt 0x561d49f5d0e0 <col:79, line:261:5>
|   |-BinaryOperator 0x561d49f5cd58 <line:257:2, col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x561d49f5ccf0 <col:2, col:5> 'const char *' lvalue .data 0x561d49f56f90
|   | | `-MemberExpr 0x561d49f5ccc0 <col:2> 'String::rep_t' lvalue ->_r 0x561d49f57100
|   | |   `-CXXThisExpr 0x561d49f5ccb0 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x561d49f5cd40 <col:12> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x561d49f5cd20 <col:12> 'const char *' lvalue ParmVar 0x561d49f57168 'data' 'const char *'
|   |-BinaryOperator 0x561d49f5ce20 <line:258:2, col:14> 'int' lvalue '='
|   | |-MemberExpr 0x561d49f5cdb8 <col:2, col:5> 'int' lvalue .length 0x561d49f56ff8
|   | | `-MemberExpr 0x561d49f5cd88 <col:2> 'String::rep_t' lvalue ->_r 0x561d49f57100
|   | |   `-CXXThisExpr 0x561d49f5cd78 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x561d49f5ce08 <col:14> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x561d49f5cde8 <col:14> 'int' lvalue ParmVar 0x561d49f571e8 'length' 'int'
|   `-IfStmt 0x561d49f5d0c8 <line:259:2, line:260:41>
|     |-ImplicitCastExpr 0x561d49f5cf40 <line:259:6, col:21> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x561d49f5cf28 <col:6, col:21> 'String::memo_t *' <LValueToRValue>
|     |   `-ParenExpr 0x561d49f5cf08 <col:6, col:21> 'String::memo_t *' lvalue
|     |     `-BinaryOperator 0x561d49f5cee8 <col:7, col:17> 'String::memo_t *' lvalue '='
|     |       |-MemberExpr 0x561d49f5ce80 <col:7, col:10> 'String::memo_t *' lvalue .memo 0x561d49f57088
|     |       | `-MemberExpr 0x561d49f5ce50 <col:7> 'String::rep_t' lvalue ->_r 0x561d49f57100
|     |       |   `-CXXThisExpr 0x561d49f5ce40 <col:7> 'const String *' implicit this
|     |       `-ImplicitCastExpr 0x561d49f5ced0 <col:17> 'String::memo_t *' <LValueToRValue>
|     |         `-DeclRefExpr 0x561d49f5ceb0 <col:17> 'String::memo_t *' lvalue ParmVar 0x561d49f57260 'memo' 'String::memo_t *'
|     `-CallExpr 0x561d49f5d0a0 <line:260:6, col:41> 'void'
|       |-ImplicitCastExpr 0x561d49f5d088 <col:6, col:23> 'void (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x561d49f5cf90 <col:6, col:23> 'void (volatile uint32_t &)' lvalue CXXMethod 0x561d49f45d78 'inc' 'void (volatile uint32_t &)'
|       `-MemberExpr 0x561d49f5cff8 <col:27, col:33> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x561d49f56958
|         `-ImplicitCastExpr 0x561d49f5cfe0 <col:27> 'String::memo_t *' <LValueToRValue>
|           `-DeclRefExpr 0x561d49f5cfc0 <col:27> 'String::memo_t *' lvalue ParmVar 0x561d49f57260 'memo' 'String::memo_t *'
|-CXXConstructorDecl 0x561d49f575f8 <line:263:5, line:265:5> line:263:12 used String 'void (const char *, int, String::memo_t *)' inline
| |-ParmVarDecl 0x561d49f57418 <col:19, col:31> col:31 used data 'const char *'
| |-ParmVarDecl 0x561d49f57498 <col:37, col:41> col:41 used length 'int'
| |-ParmVarDecl 0x561d49f57510 <col:49, col:57> col:57 used memo 'String::memo_t *'
| |-CXXCtorInitializer Field 0x561d49f57100 '_r' 'String::rep_t'
| | `-CXXConstructExpr 0x561d49f5d568 <col:12> 'String::rep_t' 'void () noexcept'
| `-CompoundStmt 0x561d49f5d6f8 <col:63, line:265:5>
|   `-CXXMemberCallExpr 0x561d49f5d660 <line:264:2, col:32> 'void'
|     |-MemberExpr 0x561d49f5d5d0 <col:2> '<bound member function type>' ->assign_memo 0x561d49f57348
|     | `-ImplicitCastExpr 0x561d49f5d698 <col:2> 'const String *' <NoOp>
|     |   `-CXXThisExpr 0x561d49f5d5c0 <col:2> 'String *' implicit this
|     |-ImplicitCastExpr 0x561d49f5d6b0 <col:14> 'const char *' <LValueToRValue>
|     | `-DeclRefExpr 0x561d49f5d600 <col:14> 'const char *' lvalue ParmVar 0x561d49f57418 'data' 'const char *'
|     |-ImplicitCastExpr 0x561d49f5d6c8 <col:20> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x561d49f5d620 <col:20> 'int' lvalue ParmVar 0x561d49f57498 'length' 'int'
|     `-ImplicitCastExpr 0x561d49f5d6e0 <col:28> 'String::memo_t *' <LValueToRValue>
|       `-DeclRefExpr 0x561d49f5d640 <col:28> 'String::memo_t *' lvalue ParmVar 0x561d49f57510 'memo' 'String::memo_t *'
|-CXXMethodDecl 0x561d49f57788 <line:267:5, line:269:5> line:267:17 used assign 'void (const String &) const' inline
| |-ParmVarDecl 0x561d49f576c8 <col:24, col:38> col:38 used x 'const String &'
| `-CompoundStmt 0x561d49f5d950 <col:47, line:269:5>
|   `-CXXMemberCallExpr 0x561d49f5d8d0 <line:268:2, col:47> 'void'
|     |-MemberExpr 0x561d49f5d720 <col:2> '<bound member function type>' ->assign_memo 0x561d49f57348
|     | `-CXXThisExpr 0x561d49f5d710 <col:2> 'const String *' implicit this
|     |-ImplicitCastExpr 0x561d49f5d908 <col:14, col:19> 'const char *' <LValueToRValue>
|     | `-MemberExpr 0x561d49f5d7a0 <col:14, col:19> 'const char *' lvalue .data 0x561d49f56f90
|     |   `-MemberExpr 0x561d49f5d770 <col:14, col:16> 'String::rep_t' lvalue ._r 0x561d49f57100
|     |     `-DeclRefExpr 0x561d49f5d750 <col:14> 'const String' lvalue ParmVar 0x561d49f576c8 'x' 'const String &'
|     |-ImplicitCastExpr 0x561d49f5d920 <col:25, col:30> 'int' <LValueToRValue>
|     | `-MemberExpr 0x561d49f5d820 <col:25, col:30> 'int' lvalue .length 0x561d49f56ff8
|     |   `-MemberExpr 0x561d49f5d7f0 <col:25, col:27> 'String::rep_t' lvalue ._r 0x561d49f57100
|     |     `-DeclRefExpr 0x561d49f5d7d0 <col:25> 'const String' lvalue ParmVar 0x561d49f576c8 'x' 'const String &'
|     `-ImplicitCastExpr 0x561d49f5d938 <col:38, col:43> 'String::memo_t *' <LValueToRValue>
|       `-MemberExpr 0x561d49f5d8a0 <col:38, col:43> 'String::memo_t *' lvalue .memo 0x561d49f57088
|         `-MemberExpr 0x561d49f5d870 <col:38, col:40> 'String::rep_t' lvalue ._r 0x561d49f57100
|           `-DeclRefExpr 0x561d49f5d850 <col:38> 'const String' lvalue ParmVar 0x561d49f576c8 'x' 'const String &'
|-CXXMethodDecl 0x561d49f57850 <line:271:5, line:278:5> line:271:17 used deref 'void () const' inline
| `-CompoundStmt 0x561d49f5e310 <col:31, line:278:5>
|   `-IfStmt 0x561d49f5e2f8 <line:272:2, line:277:2>
|     |-ImplicitCastExpr 0x561d49f5d9f0 <line:272:6, col:9> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x561d49f5d9d8 <col:6, col:9> 'String::memo_t *' <LValueToRValue>
|     |   `-MemberExpr 0x561d49f5d9a8 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x561d49f57088
|     |     `-MemberExpr 0x561d49f5d978 <col:6> 'String::rep_t' lvalue ->_r 0x561d49f57100
|     |       `-CXXThisExpr 0x561d49f5d968 <col:6> 'const String *' implicit this
|     `-CompoundStmt 0x561d49f5e2d0 <col:15, line:277:2>
|       |-ParenExpr 0x561d49f5dea0 <line:273:6, col:166> 'void'
|       | `-ConditionalOperator 0x561d49f5de70 <col:7, col:165> 'void'
|       |   |-CXXStaticCastExpr 0x561d49f5db00 <col:7, col:44> 'bool' static_cast<_Bool> <NoOp>
|       |   | `-ImplicitCastExpr 0x561d49f5dae8 <col:27, col:36> 'bool' <IntegralToBoolean> part_of_explicit_cast
|       |   |   `-ImplicitCastExpr 0x561d49f5dad0 <col:27, col:36> 'uint32_t':'unsigned int' <LValueToRValue> part_of_explicit_cast
|       |   |     `-MemberExpr 0x561d49f5da90 <col:27, col:36> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x561d49f56958
|       |   |       `-ImplicitCastExpr 0x561d49f5da78 <col:27, col:30> 'String::memo_t *' <LValueToRValue>
|       |   |         `-MemberExpr 0x561d49f5da48 <col:27, col:30> 'String::memo_t *' lvalue .memo 0x561d49f57088
|       |   |           `-MemberExpr 0x561d49f5da18 <col:27> 'String::rep_t' lvalue ->_r 0x561d49f57100
|       |   |             `-CXXThisExpr 0x561d49f5da08 <col:27> 'const String *' implicit this
|       |   |-CXXFunctionalCastExpr 0x561d49f5db60 <col:48, col:55> 'void' functional cast to void <ToVoid>
|       |   | `-IntegerLiteral 0x561d49f5db40 <col:54> 'int' 0
|       |   `-CallExpr 0x561d49f5ddd0 <col:59, col:165> 'void'
|       |     |-ImplicitCastExpr 0x561d49f5ddb8 <col:59> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x561d49f5dd38 <col:59> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x561d49cbcb90 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|       |     |-ImplicitCastExpr 0x561d49f5de10 <col:74> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x561d49f5dc48 <col:74> 'const char [18]' lvalue "_r.memo->refcount"
|       |     |-ImplicitCastExpr 0x561d49f5de28 <col:95> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x561d49f5dc78 <col:95> 'const char [29]' lvalue "../dummy_inc/click/string.hh"
|       |     |-ImplicitCastExpr 0x561d49f5de40 <col:127> 'unsigned int' <IntegralCast>
|       |     | `-IntegerLiteral 0x561d49f5dcb0 <col:127> 'int' 273
|       |     `-ImplicitCastExpr 0x561d49f5de58 <col:132, col:146> 'const char *' <ArrayToPointerDecay>
|       |       `-UnaryOperator 0x561d49f5dd20 <col:132, col:146> 'const char [27]' lvalue prefix '__extension__' cannot overflow
|       |         `-PredefinedExpr 0x561d49f5dd08 <col:146> 'const char [27]' lvalue __PRETTY_FUNCTION__
|       |           `-StringLiteral 0x561d49f5dcd0 <col:146> 'const char [27]' lvalue "void String::deref() const"
|       |-IfStmt 0x561d49f5e1f0 <line:274:6, line:275:22>
|       | |-CallExpr 0x561d49f5e0b0 <line:274:10, col:57> 'bool'
|       | | |-ImplicitCastExpr 0x561d49f5e098 <col:10, col:27> 'bool (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | | | `-DeclRefExpr 0x561d49f5e010 <col:10, col:27> 'bool (volatile uint32_t &)' lvalue CXXMethod 0x561d49f471c0 'dec_and_test' 'bool (volatile uint32_t &)'
|       | | `-MemberExpr 0x561d49f5dfe0 <col:40, col:49> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x561d49f56958
|       | |   `-ImplicitCastExpr 0x561d49f5dfc8 <col:40, col:43> 'String::memo_t *' <LValueToRValue>
|       | |     `-MemberExpr 0x561d49f5df98 <col:40, col:43> 'String::memo_t *' lvalue .memo 0x561d49f57088
|       | |       `-MemberExpr 0x561d49f5df68 <col:40> 'String::rep_t' lvalue ->_r 0x561d49f57100
|       | |         `-CXXThisExpr 0x561d49f5df58 <col:40> 'const String *' implicit this
|       | `-CallExpr 0x561d49f5e1b0 <line:275:3, col:22> 'void'
|       |   |-ImplicitCastExpr 0x561d49f5e198 <col:3> 'void (*)(String::memo_t *)' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x561d49f5e0d8 <col:3> 'void (String::memo_t *)' lvalue CXXMethod 0x561d49f5c030 'delete_memo' 'void (String::memo_t *)'
|       |   `-ImplicitCastExpr 0x561d49f5e1d8 <col:15, col:18> 'String::memo_t *' <LValueToRValue>
|       |     `-MemberExpr 0x561d49f5e138 <col:15, col:18> 'String::memo_t *' lvalue .memo 0x561d49f57088
|       |       `-MemberExpr 0x561d49f5e108 <col:15> 'String::rep_t' lvalue ->_r 0x561d49f57100
|       |         `-CXXThisExpr 0x561d49f5e0f8 <col:15> 'const String *' implicit this
|       `-BinaryOperator 0x561d49f5e2b0 <line:276:6, col:16> 'String::memo_t *' lvalue '='
|         |-MemberExpr 0x561d49f5e248 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x561d49f57088
|         | `-MemberExpr 0x561d49f5e218 <col:6> 'String::rep_t' lvalue ->_r 0x561d49f57100
|         |   `-CXXThisExpr 0x561d49f5e208 <col:6> 'const String *' implicit this
|         `-ImplicitCastExpr 0x561d49f5e298 <col:16> 'String::memo_t *' <NullToPointer>
|           `-IntegerLiteral 0x561d49f5e278 <col:16> 'int' 0
|-CXXMethodDecl 0x561d49f57ae8 <line:280:5, col:56> col:10 used assign 'void (const char *, int, bool)'
| |-ParmVarDecl 0x561d49f57908 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x561d49f57988 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x561d49f57a00 <col:41, col:46> col:46 need_deref 'bool'
|-CXXMethodDecl 0x561d49f57bc0 <line:281:5, col:31> col:10 assign_out_of_memory 'void ()'
|-CXXMethodDecl 0x561d49f57e10 <line:282:5, col:53> col:10 used append 'void (const char *, int, String::memo_t *)'
| |-ParmVarDecl 0x561d49f57c78 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x561d49f57cf8 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x561d49f57d70 <col:41, col:49> col:49 memo 'String::memo_t *'
|-CXXMethodDecl 0x561d49f57ff8 <line:283:5, col:58> col:19 used hard_make_stable 'String (const char *, int)' static
| |-ParmVarDecl 0x561d49f57ee0 <col:36, col:48> col:48 s 'const char *'
| `-ParmVarDecl 0x561d49f57f60 <col:51, col:55> col:55 len 'int'
|-CXXMethodDecl 0x561d49f580f8 <line:284:5, line:286:5> line:284:27 used absent_memo 'String::memo_t *()' static inline
| `-CompoundStmt 0x561d49f5e3e8 <col:41, line:286:5>
|   `-ReturnStmt 0x561d49f5e3d8 <line:285:2, col:48>
|     `-CXXReinterpretCastExpr 0x561d49f5e3a8 <col:9, col:48> 'String::memo_t *' reinterpret_cast<struct String::memo_t *> <IntegralToPointer>
|       `-CXXFunctionalCastExpr 0x561d49f5e370 <col:36, col:47> 'uintptr_t':'unsigned long' functional cast to uintptr_t <NoOp>
|         `-ImplicitCastExpr 0x561d49f5e358 <col:46> 'uintptr_t':'unsigned long' <IntegralCast> part_of_explicit_cast
|           `-IntegerLiteral 0x561d49f5e338 <col:46> 'int' 1
|-CXXMethodDecl 0x561d49f58398 <line:287:5, col:68> col:20 create_memo 'String::memo_t *(char *, int, int)' static
| |-ParmVarDecl 0x561d49f581b0 <col:32, col:38> col:38 space 'char *'
| |-ParmVarDecl 0x561d49f58230 <col:45, col:49> col:49 dirty 'int'
| `-ParmVarDecl 0x561d49f582b0 <col:56, col:60> col:60 capacity 'int'
|-CXXMethodDecl 0x561d49f5c030 <line:288:5, col:41> col:17 used delete_memo 'void (String::memo_t *)' static
| `-ParmVarDecl 0x561d49f58460 <col:29, col:37> col:37 memo 'String::memo_t *'
|-CXXMethodDecl 0x561d49f5c100 <line:289:5, col:30> col:17 hard_c_str 'const char *() const'
|-CXXMethodDecl 0x561d49f5c2d0 <line:290:5, col:46> col:10 used hard_equals 'bool (const char *, int) const'
| |-ParmVarDecl 0x561d49f5c1b8 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x561d49f5c238 <col:37, col:41> col:41 len 'int'
|-VarDecl 0x561d49f5c390 <line:292:5, col:23> col:23 used null_data 'const char' static
|-VarDecl 0x561d49f5c458 <line:293:5, col:34> col:23 used oom_data 'const char [15]' static
|-VarDecl 0x561d49f5c558 <line:294:5, col:34> col:23 int_data 'const char [20]' static
|-VarDecl 0x561d49f5c5d0 <line:295:5, col:24> col:24 used null_string_rep 'const String::rep_t' static
|-VarDecl 0x561d49f5c648 <line:296:5, col:24> col:24 used oom_string_rep 'const String::rep_t' static
|-EnumDecl 0x561d49f5c6b0 <line:297:5, col:25> col:5
| `-EnumConstantDecl 0x561d49f5c7b0 <col:12, col:22> col:12 referenced oom_len 'String::(anonymous enum at ../dummy_inc/click/string.hh:297:5)'
|   `-ImplicitCastExpr 0x561d49f5c800 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x561d49f5c790 <col:22> 'int' Int: 14
|       `-IntegerLiteral 0x561d49f5c770 <col:22> 'int' 14
|-CXXMethodDecl 0x561d49f5ca18 <line:299:5, col:46> col:19 make_claim 'String (char *, int, int)' static
| |-ParmVarDecl 0x561d49f5c830 <col:30, col:35> col:36 'char *'
| |-ParmVarDecl 0x561d49f5c8b0 <col:38> col:41 'int'
| `-ParmVarDecl 0x561d49f5c930 <col:43> col:46 'int'
|-FriendDecl 0x561d49f5cb20 <line:301:5, col:19> col:12 'struct rep_t':'String::rep_t'
`-FriendDecl 0x561d49f5cbb0 <line:302:5, col:18> col:12 'class StringAccum':'StringAccum'

Layout: <CGRecordLayout
  LLVMType:%class.String = type { %"struct.String::rep_t" }
  NonVirtualBaseLLVMType:%class.String = type { %"struct.String::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct char_array<16>
         0 |   char [16] x
           | [sizeof=16, dsize=16, align=1,
           |  nvsize=16, nvalign=1]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x561d4a1c1b60 <../dummy_inc/click/type_traits.hh:165:1, line:167:1> line:165:28 struct char_array definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-TemplateArgument integral 16
|-PackedAttr 0x561d4a2984b8 <line:167:18>
|-CXXRecordDecl 0x561d4a298578 prev 0x561d4a1c1b60 <line:165:21, col:28> col:28 implicit struct char_array
`-FieldDecl 0x561d4a298688 <line:166:5, col:13> col:10 x 'char [16]'

Layout: <CGRecordLayout
  LLVMType:%struct.char_array = type { [16 x i8] }
  NonVirtualBaseLLVMType:%struct.char_array = type { [16 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>
