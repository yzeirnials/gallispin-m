
*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17)
         0 |   unsigned long long __wseq
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_internal_list
         0 |   struct __pthread_internal_list * __prev
         8 |   struct __pthread_internal_list * __next
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_mutex_s
         0 |   int __lock
         4 |   unsigned int __count
         8 |   int __owner
        12 |   unsigned int __nusers
        16 |   int __kind
        20 |   short __spins
        22 |   short __elision
        24 |   struct __pthread_internal_list __list
        24 |     struct __pthread_internal_list * __prev
        32 |     struct __pthread_internal_list * __next
           | [sizeof=40, dsize=40, align=8,
           |  nvsize=40, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17)
         0 |   unsigned long long __g1_start
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s
         0 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17) 
         0 |     unsigned long long __wseq
         0 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |       unsigned int __low
         4 |       unsigned int __high
         8 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17) 
         8 |     unsigned long long __g1_start
         8 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         8 |       unsigned int __low
        12 |       unsigned int __high
        16 |   unsigned int [2] __g_refs
        24 |   unsigned int [2] __g_size
        32 |   unsigned int __g1_orig_size
        36 |   unsigned int __wrefs
        40 |   unsigned int [2] __g_signals
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_rwlock_arch_t
         0 |   unsigned int __readers
         4 |   unsigned int __writers
         8 |   unsigned int __wrphase_futex
        12 |   unsigned int __writers_futex
        16 |   unsigned int __pad3
        20 |   unsigned int __pad4
        24 |   int __cur_writer
        28 |   int __shared
        32 |   signed char __rwelision
        33 |   unsigned char [7] __pad1
        40 |   unsigned long __pad2
        48 |   unsigned int __flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | lldiv_t
         0 |   long long quot
         8 |   long long rem
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct msghdr
         0 |   void * msg_name
         8 |   socklen_t msg_namelen
        16 |   struct iovec * msg_iov
        24 |   size_t msg_iovlen
        32 |   void * msg_control
        40 |   size_t msg_controllen
        48 |   int msg_flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | struct in_addr
         0 |   in_addr_t s_addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5)
         0 |   uint8_t [16] __u6_addr8
         0 |   uint16_t [8] __u6_addr16
         0 |   uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr
         0 |   sa_family_t sa_family
         2 |   char [14] sa_data
           | [sizeof=16, dsize=16, align=2,
           |  nvsize=16, nvalign=2]

*** Dumping AST Record Layout
         0 | struct in6_addr
         0 |   union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         0 |     uint8_t [16] __u6_addr8
         0 |     uint16_t [8] __u6_addr16
         0 |     uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr_storage
         0 |   sa_family_t ss_family
         2 |   char [118] __ss_padding
       120 |   unsigned long __ss_align
           | [sizeof=128, dsize=128, align=8,
           |  nvsize=128, nvalign=8]

*** Dumping AST Record Layout
         0 | struct sockaddr_in6
         0 |   sa_family_t sin6_family
         2 |   in_port_t sin6_port
         4 |   uint32_t sin6_flowinfo
         8 |   struct in6_addr sin6_addr
         8 |     union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         8 |       uint8_t [16] __u6_addr8
         8 |       uint16_t [8] __u6_addr16
         8 |       uint32_t [4] __u6_addr32
        24 |   uint32_t sin6_scope_id
           | [sizeof=28, dsize=28, align=4,
           |  nvsize=28, nvalign=4]

*** Dumping AST Record Layout
         0 | struct timeval
         0 |   __time_t tv_sec
         8 |   __suseconds_t tv_usec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::memo_t
         0 |   volatile uint32_t refcount
         4 |   uint32_t capacity
         8 |   volatile uint32_t dirty
        12 |   char [8] real_data
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping AST Record Layout
         0 | class IPAddress
         0 |   uint32_t _addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Timestamp::rep_t
         0 |   int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timestamp
         0 |   union Timestamp::rep_t _t
         0 |     int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct timespec
         0 |   __time_t tv_sec
         8 |   __syscall_slong_t tv_nsec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element::Port
         0 |   class Element * _e
         8 |   int _port
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element
         0 |   (Element vtable pointer)
         8 |   class Element::Port *[2] _ports
        24 |   class Element::Port [4] _inline_ports
        88 |   int [2] _nports
        96 |   class Router * _router
       104 |   int _eindex
           | [sizeof=112, dsize=108, align=8,
           |  nvsize=108, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558d5b66d758 prev 0x558d5b664ef8 <../dummy_inc/click/element.hh:214:5, line:252:5> line:214:11 referenced class Port definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x558d5b66d850 <col:5, col:11> col:11 implicit referenced class Port
|-AccessSpecDecl 0x558d5b66d8e0 <col:18, col:24> col:18 public
|-CXXMethodDecl 0x558d5b66d958 <line:216:9, col:30> col:21 used active 'bool () const' inline
|-CXXMethodDecl 0x558d5b66da18 <line:217:9, col:35> col:25 element 'Element *() const' inline
|-CXXMethodDecl 0x558d5b66dae0 <line:218:9, col:27> col:20 port 'int () const' inline
|-CXXMethodDecl 0x558d5b66dc58 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| |-ParmVarDecl 0x558d5b66db90 <col:54, col:62> col:62 p 'Packet *'
| |-NoInlineAttr 0x558d5b66dd00 <col:24>
| `-OptimizeNoneAttr 0x558d5b66dd58 <col:34>
|-CXXMethodDecl 0x558d5b66dda0 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
|-CXXMethodDecl 0x558d5b66e058 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| |-ParmVarDecl 0x558d5b66de50 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x558d5b66dec8 <col:43, col:52> col:52 e 'Element *'
| `-ParmVarDecl 0x558d5b66df48 <col:55, col:59> col:59 port 'int'
|-AccessSpecDecl 0x558d5b66e110 <line:229:7, col:14> col:7 private
|-FieldDecl 0x558d5b66e148 <line:231:9, col:18> col:18 referenced _e 'Element *'
|-FieldDecl 0x558d5b66e1b0 <line:232:9, col:13> col:13 referenced _port 'int'
|-CXXConstructorDecl 0x558d5b66e238 <line:247:9, col:21> col:16 Port 'void ()' inline
|-CXXMethodDecl 0x558d5b66e558 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| |-ParmVarDecl 0x558d5b66e2f0 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x558d5b66e368 <col:43, col:52> col:52 owner 'Element *'
| |-ParmVarDecl 0x558d5b66e3e0 <col:59, col:68> col:68 e 'Element *'
| `-ParmVarDecl 0x558d5b66e460 <col:71, col:75> col:75 port 'int'
|-FriendDecl 0x558d5b66e670 <line:250:9, col:22> col:16 'class Element':'Element'
|-CXXConstructorDecl 0x558d5b675fe8 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x558d5b675fe8
| `-ParmVarDecl 0x558d5b6760f8 <col:11> col:11 'const Element::Port &'
|-CXXConstructorDecl 0x558d5b676198 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x558d5b676198
| `-ParmVarDecl 0x558d5b6762a8 <col:11> col:11 'Element::Port &&'
`-CXXDestructorDecl 0x558d5b67a1e0 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"class.Element::Port" = type <{ %class.Element*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%"class.Element::Port.base" = type <{ %class.Element*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558d5b660770 prev 0x558d5b6604f0 <../dummy_inc/click/element.hh:29:1, line:319:1> line:29:7 referenced class Element definition
|-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x558d5b660868 <col:1, col:7> col:7 implicit referenced class Element
|-AccessSpecDecl 0x558d5b6608f8 <col:17, col:23> col:17 public
|-CXXConstructorDecl 0x558d5b660958 <line:31:5, col:13> col:5 used Element 'void ()'
|-CXXDestructorDecl 0x558d5b660a48 <line:32:5, col:22> col:13 used ~Element 'void () noexcept' virtual
|-VarDecl 0x558d5b660b48 <line:33:5, col:16> col:16 nelements_allocated 'int' static
|-CXXMethodDecl 0x558d5b660d18 <line:36:5, col:42> col:18 used push 'void (int, Packet *)' virtual
| |-ParmVarDecl 0x558d5b660bc8 <col:23, col:27> col:27 port 'int'
| `-ParmVarDecl 0x558d5b660c40 <col:33, col:41> col:41 p 'Packet *'
|-CXXMethodDecl 0x558d5b660ea8 <line:37:5, col:70> col:21 used pull 'Packet *(int)' virtual
| |-ParmVarDecl 0x558d5b660de0 <col:26, col:30> col:30 port 'int'
| `-WarnUnusedResultAttr 0x558d5b660f50 <col:51> warn_unused_result ""
|-CXXMethodDecl 0x558d5b661088 <line:38:5, col:44> col:21 simple_action 'Packet *(Packet *)' virtual
| `-ParmVarDecl 0x558d5b660fc0 <col:35, col:43> col:43 p 'Packet *'
|-CXXMethodDecl 0x558d5b661228 <line:40:5, col:37> col:18 run_task 'bool (Task *)' virtual
| `-ParmVarDecl 0x558d5b661168 <col:27, col:33> col:33 task 'Task *'
|-CXXMethodDecl 0x558d5b6613c8 <line:41:5, col:40> col:18 run_timer 'void (Timer *)' virtual
| `-ParmVarDecl 0x558d5b661308 <col:28, col:35> col:35 timer 'Timer *'
|-EnumDecl 0x558d5b661470 <line:43:5, col:46> col:5
| |-EnumConstantDecl 0x558d5b661570 <col:12, col:26> col:12 SELECT_READ 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
| | `-ImplicitCastExpr 0x558d5b661650 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558d5b661550 <col:26> 'int' Int: 1
| |     `-IntegerLiteral 0x558d5b661530 <col:26> 'int' 1
| `-EnumConstantDecl 0x558d5b661600 <col:29, col:44> col:29 SELECT_WRITE 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
|   `-ImplicitCastExpr 0x558d5b661668 <col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x558d5b6615e0 <col:44> 'int' Int: 2
|       `-IntegerLiteral 0x558d5b6615c0 <col:44> 'int' 2
|-CXXMethodDecl 0x558d5b6617b0 <line:44:5, col:43> col:18 selected 'void (int, int)' virtual
| |-ParmVarDecl 0x558d5b661698 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x558d5b661718 <col:35, col:39> col:39 mask 'int'
|-CXXMethodDecl 0x558d5b661908 <line:45:5, col:33> col:18 selected 'void (int)' virtual
| `-ParmVarDecl 0x558d5b661878 <col:27, col:31> col:31 fd 'int'
|-CXXMethodDecl 0x558d5b661b48 <line:48:5, col:86> col:45 checked_output_push 'void (int, Packet *) const'
| |-ParmVarDecl 0x558d5b6619c8 <col:65, col:69> col:69 port 'int'
| |-ParmVarDecl 0x558d5b661a40 <col:75, col:83> col:83 p 'Packet *'
| |-NoInlineAttr 0x558d5b661bf8 <col:20>
| `-OptimizeNoneAttr 0x558d5b661c50 <col:30>
|-CXXMethodDecl 0x558d5b661d58 <line:49:5, col:77> col:48 checked_input_pull 'Packet *(int) const'
| |-ParmVarDecl 0x558d5b661c90 <col:67, col:71> col:71 port 'int'
| |-NoInlineAttr 0x558d5b661e00 <col:20>
| `-OptimizeNoneAttr 0x558d5b661e58 <col:30>
|-CXXMethodDecl 0x558d5b661ea8 <line:52:5, col:46> col:25 class_name 'const char *() const' virtual pure
|-CXXMethodDecl 0x558d5b661f70 <line:54:5, col:38> col:25 port_count 'const char *() const' virtual
|-VarDecl 0x558d5b662088 <line:55:5, col:33> col:23 PORTS_0_0 'const char []' static
|-VarDecl 0x558d5b662110 <line:56:5, col:33> col:23 PORTS_0_1 'const char []' static
|-VarDecl 0x558d5b662198 <line:57:5, col:33> col:23 PORTS_1_0 'const char []' static
|-VarDecl 0x558d5b662220 <line:58:5, col:33> col:23 PORTS_1_1 'const char []' static
|-VarDecl 0x558d5b6622a8 <line:59:5, col:35> col:23 PORTS_1_1X2 'const char []' static
|-CXXMethodDecl 0x558d5b662338 <line:61:5, col:38> col:25 processing 'const char *() const' virtual
|-VarDecl 0x558d5b6623f8 <line:62:5, col:32> col:23 AGNOSTIC 'const char []' static
|-VarDecl 0x558d5b662480 <line:63:5, col:28> col:23 PUSH 'const char []' static
|-VarDecl 0x558d5b662508 <line:64:5, col:28> col:23 PULL 'const char []' static
|-VarDecl 0x558d5b662590 <line:65:5, col:36> col:23 PUSH_TO_PULL 'const char []' static
|-VarDecl 0x558d5b662618 <line:66:5, col:36> col:23 PULL_TO_PUSH 'const char []' static
|-VarDecl 0x558d5b6626a0 <line:67:5, col:39> col:23 PROCESSING_A_AH 'const char []' static
|-CXXMethodDecl 0x558d5b662730 <line:69:5, col:37> col:25 flow_code 'const char *() const' virtual
|-VarDecl 0x558d5b6627f0 <line:70:5, col:37> col:23 COMPLETE_FLOW 'const char []' static
|-CXXMethodDecl 0x558d5b662880 <line:72:5, col:33> col:25 flags 'const char *() const' virtual
|-CXXMethodDecl 0x558d5b6629d0 <line:73:5, col:30> col:9 flag_value 'int (int) const'
| `-ParmVarDecl 0x558d5b662938 <col:20, col:24> col:24 flag 'int'
|-CXXMethodDecl 0x558d5b662b60 <line:75:5, col:40> col:19 cast 'void *(const char *)' virtual
| `-ParmVarDecl 0x558d5b662a90 <col:24, col:36> col:36 name 'const char *'
|-CXXMethodDecl 0x558d5b662e10 <line:76:5, col:70> col:19 port_cast 'void *(bool, int, const char *)' virtual
| |-ParmVarDecl 0x558d5b662c18 <col:29, col:34> col:34 isoutput 'bool'
| |-ParmVarDecl 0x558d5b662c98 <col:44, col:48> col:48 port 'int'
| `-ParmVarDecl 0x558d5b662d18 <col:54, col:66> col:66 name 'const char *'
|-EnumDecl 0x558d5b662ec8 <line:79:5, line:85:5> line:79:10 ConfigurePhase
| |-EnumConstantDecl 0x558d5b662fd0 <line:80:9, col:33> col:9 CONFIGURE_PHASE_FIRST 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x558d5b663260 <col:33> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558d5b662fb0 <col:33> 'int' Int: 0
| |     `-IntegerLiteral 0x558d5b662f90 <col:33> 'int' 0
| |-EnumConstantDecl 0x558d5b663060 <line:81:9, col:32> col:9 CONFIGURE_PHASE_INFO 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x558d5b663278 <col:32> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558d5b663040 <col:32> 'int' Int: 20
| |     `-IntegerLiteral 0x558d5b663020 <col:32> 'int' 20
| |-EnumConstantDecl 0x558d5b6630f0 <line:82:9, col:38> col:9 CONFIGURE_PHASE_PRIVILEGED 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x558d5b663290 <col:38> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558d5b6630d0 <col:38> 'int' Int: 90
| |     `-IntegerLiteral 0x558d5b6630b0 <col:38> 'int' 90
| |-EnumConstantDecl 0x558d5b663180 <line:83:9, col:35> col:9 CONFIGURE_PHASE_DEFAULT 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x558d5b6632a8 <col:35> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558d5b663160 <col:35> 'int' Int: 100
| |     `-IntegerLiteral 0x558d5b663140 <col:35> 'int' 100
| `-EnumConstantDecl 0x558d5b663210 <line:84:9, col:32> col:9 CONFIGURE_PHASE_LAST 'Element::ConfigurePhase'
|   `-ImplicitCastExpr 0x558d5b6632c0 <col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x558d5b6631f0 <col:32> 'int' Int: 2000
|       `-IntegerLiteral 0x558d5b6631d0 <col:32> 'int' 2000
|-CXXMethodDecl 0x558d5b663300 <line:86:5, col:35> col:17 configure_phase 'int () const' virtual
|-CXXMethodDecl 0x558d5b663740 <line:88:5, col:67> col:17 configure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x558d5b6635b0 <col:27, col:43> col:43 conf 'Vector<String> &'
| `-ParmVarDecl 0x558d5b663628 <col:49, col:63> col:63 errh 'ErrorHandler *'
|-CXXMethodDecl 0x558d5b663810 <line:90:5, col:31> col:18 add_handlers 'void ()' virtual
|-CXXMethodDecl 0x558d5b663990 <line:92:5, col:46> col:17 initialize 'int (ErrorHandler *)' virtual
| `-ParmVarDecl 0x558d5b6638c0 <col:28, col:42> col:42 errh 'ErrorHandler *'
|-CXXMethodDecl 0x558d5b663b98 <line:94:5, col:69> col:18 take_state 'void (Element *, ErrorHandler *)' virtual
| |-ParmVarDecl 0x558d5b663a48 <col:29, col:38> col:38 old_element 'Element *'
| `-ParmVarDecl 0x558d5b663ac0 <col:51, col:65> col:65 errh 'ErrorHandler *'
|-CXXMethodDecl 0x558d5b663c98 <line:95:5, col:40> col:22 hotswap_element 'Element *() const' virtual
|-EnumDecl 0x558d5b663d38 <line:97:5, line:106:5> line:97:10 referenced CleanupStage
| |-EnumConstantDecl 0x558d5b663e00 <line:98:9> col:9 referenced CLEANUP_NO_ROUTER 'Element::CleanupStage'
| |-EnumConstantDecl 0x558d5b663e90 <line:99:9, col:36> col:9 CLEANUP_BEFORE_CONFIGURE 'Element::CleanupStage'
| | `-ImplicitCastExpr 0x558d5b6640c0 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558d5b663e70 <col:36> 'int' Int: 0
| |     `-DeclRefExpr 0x558d5b663e50 <col:36> 'int' EnumConstant 0x558d5b663e00 'CLEANUP_NO_ROUTER' 'Element::CleanupStage'
| |-EnumConstantDecl 0x558d5b663ee0 <line:100:9> col:9 CLEANUP_CONFIGURE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x558d5b663f30 <line:101:9> col:9 CLEANUP_CONFIGURED 'Element::CleanupStage'
| |-EnumConstantDecl 0x558d5b663f80 <line:102:9> col:9 CLEANUP_INITIALIZE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x558d5b663fd0 <line:103:9> col:9 CLEANUP_INITIALIZED 'Element::CleanupStage'
| |-EnumConstantDecl 0x558d5b664020 <line:104:9> col:9 CLEANUP_ROUTER_INITIALIZED 'Element::CleanupStage'
| `-EnumConstantDecl 0x558d5b664070 <line:105:9> col:9 CLEANUP_MANUAL 'Element::CleanupStage'
|-CXXMethodDecl 0x558d5b6641a8 <line:107:5, col:44> col:18 cleanup 'void (Element::CleanupStage)' virtual
| `-ParmVarDecl 0x558d5b6640e8 <col:26, col:39> col:39 stage 'Element::CleanupStage'
|-CXXMethodDecl 0x558d5b664270 <line:109:5, col:42> col:24 static_initialize 'void ()' static inline
|-CXXMethodDecl 0x558d5b664330 <line:110:5, col:39> col:24 static_cleanup 'void ()' static inline
|-CXXMethodDecl 0x558d5b6643f0 <line:113:5, col:19> col:12 name 'String () const'
|-CXXMethodDecl 0x558d5b6644b0 <line:114:5, col:34> col:20 declaration 'String () const' virtual
|-CXXMethodDecl 0x558d5b6645c8 <line:116:5, col:29> col:20 used router 'Router *() const' inline
|-CXXMethodDecl 0x558d5b664690 <line:117:5, col:25> col:16 eindex 'int () const' inline
|-CXXMethodDecl 0x558d5b664810 <line:118:5, col:34> col:16 eindex 'int (Router *) const' inline
| `-ParmVarDecl 0x558d5b664740 <col:23, col:31> col:31 r 'Router *'
|-CXXMethodDecl 0x558d5b664938 <line:121:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x558d5b664b38 <line:123:5, line:127:5> line:123:17 attach_router 'void (Router *, int)' inline
| |-ParmVarDecl 0x558d5b6649e8 <col:31, col:39> col:39 used r 'Router *'
| |-ParmVarDecl 0x558d5b664a68 <col:42, col:46> col:46 used eindex 'int'
| `-CompoundStmt 0x558d5b672488 <col:54, line:127:5>
|   |-ParenExpr 0x558d5b672338 <line:124:9, col:152> 'void'
|   | `-ConditionalOperator 0x558d5b672308 <col:10, col:151> 'void'
|   |   |-CXXStaticCastExpr 0x558d5b671ff8 <col:10, col:38> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x558d5b671fd0 <col:30, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-ImplicitCastExpr 0x558d5b671fb8 <col:31> 'bool' <PointerToBoolean>
|   |   |     `-ImplicitCastExpr 0x558d5b671fa0 <col:31> 'Router *' <LValueToRValue>
|   |   |       `-MemberExpr 0x558d5b671f70 <col:31> 'Router *' lvalue ->_router 0x558d5b66fe50
|   |   |         `-CXXThisExpr 0x558d5b671f60 <col:31> 'Element *' implicit this
|   |   |-CXXFunctionalCastExpr 0x558d5b672058 <col:42, col:49> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x558d5b672038 <col:48> 'int' 0
|   |   `-CallExpr 0x558d5b672268 <col:53, col:151> 'void'
|   |     |-ImplicitCastExpr 0x558d5b672250 <col:53> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x558d5b672230 <col:53> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x558d5b19ae40 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x558d5b6722a8 <col:68> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558d5b6720c8 <col:68> 'const char [9]' lvalue "!_router"
|   |     |-ImplicitCastExpr 0x558d5b6722c0 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558d5b6720e8 <col:80> 'const char [30]' lvalue "../dummy_inc/click/element.hh"
|   |     |-ImplicitCastExpr 0x558d5b6722d8 <col:113> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x558d5b672120 <col:113> 'int' 124
|   |     `-ImplicitCastExpr 0x558d5b6722f0 <col:118, col:132> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x558d5b672218 <col:118, col:132> 'const char [43]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x558d5b672200 <col:132> 'const char [43]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x558d5b6721b8 <col:132> 'const char [43]' lvalue "void Element::attach_router(Router *, int)"
|   |-BinaryOperator 0x558d5b6723d0 <line:125:9, col:19> 'Router *' lvalue '='
|   | |-MemberExpr 0x558d5b672368 <col:9> 'Router *' lvalue ->_router 0x558d5b66fe50
|   | | `-CXXThisExpr 0x558d5b672358 <col:9> 'Element *' implicit this
|   | `-ImplicitCastExpr 0x558d5b6723b8 <col:19> 'Router *' <LValueToRValue>
|   |   `-DeclRefExpr 0x558d5b672398 <col:19> 'Router *' lvalue ParmVar 0x558d5b6649e8 'r' 'Router *'
|   `-BinaryOperator 0x558d5b672468 <line:126:9, col:19> 'int' lvalue '='
|     |-MemberExpr 0x558d5b672400 <col:9> 'int' lvalue ->_eindex 0x558d5b66feb8
|     | `-CXXThisExpr 0x558d5b6723f0 <col:9> 'Element *' implicit this
|     `-ImplicitCastExpr 0x558d5b672450 <col:19> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x558d5b672430 <col:19> 'int' lvalue ParmVar 0x558d5b664a68 'eindex' 'int'
|-CXXMethodDecl 0x558d5b664cc0 <line:130:5, col:38> col:16 used nports 'int (bool) const' inline
| `-ParmVarDecl 0x558d5b664bf8 <col:23, col:28> col:28 isoutput 'bool'
|-CXXMethodDecl 0x558d5b664d90 <line:131:5, col:26> col:16 used ninputs 'int () const' inline
|-CXXMethodDecl 0x558d5b664e58 <line:132:5, col:27> col:16 used noutputs 'int () const' inline
|-CXXRecordDecl 0x558d5b664ef8 <line:134:5, col:11> col:11 referenced class Port
|-CXXMethodDecl 0x558d5b665148 <line:135:5, col:82> col:52 used port 'const Element::Port &(bool, int) const'
| |-ParmVarDecl 0x558d5b664fc0 <col:57, col:62> col:62 isoutput 'bool'
| |-ParmVarDecl 0x558d5b665040 <col:72, col:76> col:76 port 'int'
| |-NoInlineAttr 0x558d5b6651f8 <col:20>
| `-OptimizeNoneAttr 0x558d5b665250 <col:30>
|-CXXMethodDecl 0x558d5b665358 <line:136:5, col:68> col:52 input 'const Element::Port &(int) const'
| |-ParmVarDecl 0x558d5b665290 <col:58, col:62> col:62 port 'int'
| |-NoInlineAttr 0x558d5b665400 <col:20>
| `-OptimizeNoneAttr 0x558d5b665458 <col:30>
|-CXXMethodDecl 0x558d5b665528 <line:137:5, col:69> col:52 output 'const Element::Port &(int) const'
| |-ParmVarDecl 0x558d5b665498 <col:59, col:63> col:63 port 'int'
| |-NoInlineAttr 0x558d5b6655d0 <col:20>
| `-OptimizeNoneAttr 0x558d5b665628 <col:30>
|-CXXMethodDecl 0x558d5b6657b8 <line:139:5, col:54> col:17 used port_active 'bool (bool, int) const' inline
| |-ParmVarDecl 0x558d5b665660 <col:29, col:34> col:34 isoutput 'bool'
| `-ParmVarDecl 0x558d5b6656e0 <col:44, col:48> col:48 port 'int'
|-CXXMethodDecl 0x558d5b665948 <line:140:5, col:41> col:17 input_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x558d5b665880 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x558d5b665a98 <line:141:5, col:41> col:17 input_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x558d5b665a08 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x558d5b665be8 <line:142:5, col:42> col:17 output_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x558d5b665b58 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x558d5b665d38 <line:143:5, col:42> col:17 output_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x558d5b665ca8 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x558d5b665ff8 <line:144:5, col:57> col:10 port_flow 'void (bool, int, Bitvector *) const'
| |-ParmVarDecl 0x558d5b665df0 <col:20, col:25> col:25 isoutput 'bool'
| |-ParmVarDecl 0x558d5b665e70 <col:35, col:39> col:39 port 'int'
| `-ParmVarDecl 0x558d5b665f18 <col:45, col:54> col:55 'Bitvector *'
|-CXXMethodDecl 0x558d5b6660d0 <line:147:5, col:28> col:12 configuration 'String () const'
|-CXXMethodDecl 0x558d5b666190 <line:149:5, col:41> col:18 can_live_reconfigure 'bool () const' virtual
|-CXXMethodDecl 0x558d5b666460 <line:150:5, col:64> col:17 live_reconfigure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x558d5b666310 <col:34, col:48> col:49 'Vector<String> &'
| `-ParmVarDecl 0x558d5b666388 <col:51, col:63> col:64 'ErrorHandler *'
|-CXXMethodDecl 0x558d5b666588 <line:152:5, col:33> col:19 home_thread 'RouterThread *() const'
|-CXXMethodDecl 0x558d5b666760 <line:156:5, col:36> col:9 add_select 'int (int, int)'
| |-ParmVarDecl 0x558d5b666640 <col:20, col:24> col:24 fd 'int'
| `-ParmVarDecl 0x558d5b6666c0 <col:28, col:32> col:32 mask 'int'
|-CXXMethodDecl 0x558d5b666948 <line:157:5, col:39> col:9 remove_select 'int (int, int)'
| |-ParmVarDecl 0x558d5b666828 <col:23, col:27> col:27 fd 'int'
| `-ParmVarDecl 0x558d5b6668a8 <col:31, col:35> col:35 mask 'int'
|-CXXMethodDecl 0x558d5b666cb8 <line:161:5, col:127> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x558d5b666a08 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x558d5b666a80 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x558d5b666b00 <col:82, col:106> col:94 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x558d5b671a70 <col:106> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x558d5b671a50 <col:106> 'int' 0
| `-ParmVarDecl 0x558d5b666b78 <col:109, col:126> col:118 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x558d5b671aa8 <col:126> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x558d5b671a88 <col:126> 'int' 0
|-CXXMethodDecl 0x558d5b667058 <line:162:5, col:115> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x558d5b666d88 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x558d5b666e20 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x558d5b666ea0 <col:82, col:86> col:86 user_data 'int'
| `-ParmVarDecl 0x558d5b666f18 <col:97, col:114> col:106 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x558d5b671ae0 <col:114> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x558d5b671ac0 <col:114> 'int' 0
|-CXXMethodDecl 0x558d5b6673e8 <line:163:5, col:117> col:10 add_read_handler 'void (const char *, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x558d5b667130 <col:27, col:39> col:39 name 'const char *'
| |-ParmVarDecl 0x558d5b6671a8 <col:45, col:65> col:65 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x558d5b667228 <col:80, col:96> col:84 user_data 'int' cinit
| | `-IntegerLiteral 0x558d5b671af8 <col:96> 'int' 0
| `-ParmVarDecl 0x558d5b6672a0 <col:99, col:116> col:108 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x558d5b671b38 <col:116> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x558d5b671b18 <col:116> 'int' 0
|-CXXMethodDecl 0x558d5b667768 <line:164:5, col:130> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x558d5b6674b8 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x558d5b667530 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x558d5b6675b0 <col:85, col:109> col:97 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x558d5b671b70 <col:109> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x558d5b671b50 <col:109> 'int' 0
| `-ParmVarDecl 0x558d5b667628 <col:112, col:129> col:121 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x558d5b671ba8 <col:129> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x558d5b671b88 <col:129> 'int' 0
|-CXXMethodDecl 0x558d5b667ae8 <line:165:5, col:118> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x558d5b667838 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x558d5b6678b0 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x558d5b667930 <col:85, col:89> col:89 user_data 'int'
| `-ParmVarDecl 0x558d5b6679a8 <col:100, col:117> col:109 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x558d5b671be0 <col:117> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x558d5b671bc0 <col:117> 'int' 0
|-CXXMethodDecl 0x558d5b667e78 <line:166:5, col:120> col:10 add_write_handler 'void (const char *, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x558d5b667bc0 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x558d5b667c38 <col:46, col:67> col:67 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x558d5b667cb8 <col:83, col:99> col:87 user_data 'int' cinit
| | `-IntegerLiteral 0x558d5b671bf8 <col:99> 'int' 0
| `-ParmVarDecl 0x558d5b667d30 <col:102, col:119> col:111 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x558d5b671c38 <col:119> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x558d5b671c18 <col:119> 'int' 0
|-CXXMethodDecl 0x558d5b668298 <line:167:5, col:142> col:10 set_handler 'void (const String &, int, HandlerCallback, const void *, const void *)'
| |-ParmVarDecl 0x558d5b667f48 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x558d5b667fc8 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x558d5b668040 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x558d5b6680c0 <col:79, col:108> col:91 read_user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x558d5b671c70 <col:108> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x558d5b671c50 <col:108> 'int' 0
| `-ParmVarDecl 0x558d5b668140 <col:111, col:141> col:123 write_user_data 'const void *' cinit
|   `-ImplicitCastExpr 0x558d5b671ca8 <col:141> 'const void *' <NullToPointer>
|     `-IntegerLiteral 0x558d5b671c88 <col:141> 'int' 0
|-CXXMethodDecl 0x558d5b6686b8 <line:168:5, col:122> col:10 set_handler 'void (const String &, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x558d5b668370 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x558d5b6683f0 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x558d5b668468 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x558d5b6684e8 <col:79, col:83> col:83 read_user_data 'int'
| `-ParmVarDecl 0x558d5b668568 <col:99, col:121> col:103 write_user_data 'int' cinit
|   `-IntegerLiteral 0x558d5b671cc0 <col:121> 'int' 0
|-CXXMethodDecl 0x558d5b668ae8 <line:169:5, col:124> col:10 set_handler 'void (const char *, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x558d5b668798 <col:22, col:34> col:34 name 'const char *'
| |-ParmVarDecl 0x558d5b668818 <col:40, col:44> col:44 flags 'int'
| |-ParmVarDecl 0x558d5b668890 <col:51, col:67> col:67 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x558d5b668910 <col:77, col:98> col:81 read_user_data 'int' cinit
| | `-IntegerLiteral 0x558d5b671ce0 <col:98> 'int' 0
| `-ParmVarDecl 0x558d5b668990 <col:101, col:123> col:105 write_user_data 'int' cinit
|   `-IntegerLiteral 0x558d5b671d00 <col:123> 'int' 0
|-CXXMethodDecl 0x558d5b668db0 <line:170:5, col:81> col:9 set_handler_flags 'int (const String &, int, int)'
| |-ParmVarDecl 0x558d5b668bc0 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x558d5b668c40 <col:47, col:51> col:51 set_flags 'int'
| `-ParmVarDecl 0x558d5b668cc0 <col:62, col:80> col:66 clear_flags 'int' cinit
|   `-IntegerLiteral 0x558d5b671d20 <col:80> 'int' 0
|-EnumDecl 0x558d5b668e68 <line:171:5, line:175:36> line:171:5
| |-EnumConstantDecl 0x558d5b668f70 <col:12, col:42> col:12 TASKHANDLER_WRITE_SCHEDULED 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x558d5b669200 <col:42> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558d5b668f50 <col:42> 'int' Int: 1
| |     `-IntegerLiteral 0x558d5b668f30 <col:42> 'int' 1
| |-EnumConstantDecl 0x558d5b669000 <line:172:12, col:40> col:12 TASKHANDLER_WRITE_TICKETS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x558d5b669218 <col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558d5b668fe0 <col:40> 'int' Int: 2
| |     `-IntegerLiteral 0x558d5b668fc0 <col:40> 'int' 2
| |-EnumConstantDecl 0x558d5b669090 <line:173:12, col:44> col:12 TASKHANDLER_WRITE_HOME_THREAD 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x558d5b669230 <col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558d5b669070 <col:44> 'int' Int: 4
| |     `-IntegerLiteral 0x558d5b669050 <col:44> 'int' 4
| |-EnumConstantDecl 0x558d5b669120 <line:174:12, col:36> col:12 TASKHANDLER_WRITE_ALL 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x558d5b669248 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558d5b669100 <col:36> 'int' Int: 7
| |     `-IntegerLiteral 0x558d5b6690e0 <col:36> 'int' 7
| `-EnumConstantDecl 0x558d5b6691b0 <line:175:12, col:34> col:12 referenced TASKHANDLER_DEFAULT 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|   `-ImplicitCastExpr 0x558d5b669260 <col:34> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x558d5b669190 <col:34> 'int' Int: 6
|       `-IntegerLiteral 0x558d5b669170 <col:34> 'int' 6
|-CXXMethodDecl 0x558d5b669518 <line:176:5, col:106> col:10 used add_task_handlers 'void (Task *, NotifierSignal *, int, const String &)'
| |-ParmVarDecl 0x558d5b669288 <col:28, col:34> col:34 task 'Task *'
| |-ParmVarDecl 0x558d5b669328 <col:40, col:56> col:56 signal 'NotifierSignal *'
| |-ParmVarDecl 0x558d5b6693a8 <col:64, col:68> col:68 flags 'int'
| `-ParmVarDecl 0x558d5b669420 <col:75, col:105> col:89 prefix 'const String &' cinit
|   `-ExprWithCleanups 0x558d5b671dd8 <col:98, col:105> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x558d5b671dc0 <col:98, col:105> 'const String' lvalue
|       `-ImplicitCastExpr 0x558d5b671da8 <col:98, col:105> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x558d5b671d88 <col:98, col:105> 'String' (CXXTemporary 0x558d5b671d88)
|           `-CXXTemporaryObjectExpr 0x558d5b671d50 <col:98, col:105> 'String' 'void ()'
|-CXXMethodDecl 0x558d5b6697b8 <line:177:5, line:179:5> line:177:17 add_task_handlers 'void (Task *, NotifierSignal *, const String &)' inline
| |-ParmVarDecl 0x558d5b6695e8 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x558d5b669660 <col:47, col:63> col:63 used signal 'NotifierSignal *'
| |-ParmVarDecl 0x558d5b6696d8 <col:71, col:101> col:85 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x558d5b671e88 <col:94, col:101> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x558d5b671e70 <col:94, col:101> 'const String' lvalue
| |     `-ImplicitCastExpr 0x558d5b671e58 <col:94, col:101> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x558d5b671e38 <col:94, col:101> 'String' (CXXTemporary 0x558d5b671e38)
| |         `-CXXTemporaryObjectExpr 0x558d5b671e00 <col:94, col:101> 'String' 'void ()'
| `-CompoundStmt 0x558d5b672670 <col:104, line:179:5>
|   `-CXXMemberCallExpr 0x558d5b6725e8 <line:178:9, col:68> 'void'
|     |-MemberExpr 0x558d5b6725b8 <col:9> '<bound member function type>' ->add_task_handlers 0x558d5b669518
|     | `-CXXThisExpr 0x558d5b6725a8 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x558d5b672628 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x558d5b672528 <col:27> 'Task *' lvalue ParmVar 0x558d5b6695e8 'task' 'Task *'
|     |-ImplicitCastExpr 0x558d5b672640 <col:33> 'NotifierSignal *' <LValueToRValue>
|     | `-DeclRefExpr 0x558d5b672548 <col:33> 'NotifierSignal *' lvalue ParmVar 0x558d5b669660 'signal' 'NotifierSignal *'
|     |-ImplicitCastExpr 0x558d5b672658 <col:41> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x558d5b672568 <col:41> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x558d5b6691b0 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x558d5b672588 <col:62> 'const String' lvalue ParmVar 0x558d5b6696d8 'prefix' 'const String &'
|-CXXMethodDecl 0x558d5b6699c8 <line:180:5, line:182:5> line:180:17 add_task_handlers 'void (Task *, const String &)' inline
| |-ParmVarDecl 0x558d5b669880 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x558d5b6698f8 <col:47, col:77> col:61 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x558d5b671f38 <col:70, col:77> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x558d5b671f20 <col:70, col:77> 'const String' lvalue
| |     `-ImplicitCastExpr 0x558d5b671f08 <col:70, col:77> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x558d5b671ee8 <col:70, col:77> 'String' (CXXTemporary 0x558d5b671ee8)
| |         `-CXXTemporaryObjectExpr 0x558d5b671eb0 <col:70, col:77> 'String' 'void ()'
| `-CompoundStmt 0x558d5b672848 <col:80, line:182:5>
|   `-CXXMemberCallExpr 0x558d5b6727c0 <line:181:9, col:63> 'void'
|     |-MemberExpr 0x558d5b672790 <col:9> '<bound member function type>' ->add_task_handlers 0x558d5b669518
|     | `-CXXThisExpr 0x558d5b672780 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x558d5b672800 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x558d5b672700 <col:27> 'Task *' lvalue ParmVar 0x558d5b669880 'task' 'Task *'
|     |-ImplicitCastExpr 0x558d5b672818 <col:33> 'NotifierSignal *' <NullToPointer>
|     | `-IntegerLiteral 0x558d5b672720 <col:33> 'int' 0
|     |-ImplicitCastExpr 0x558d5b672830 <col:36> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x558d5b672740 <col:36> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x558d5b6691b0 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x558d5b672760 <col:57> 'const String' lvalue ParmVar 0x558d5b6698f8 'prefix' 'const String &'
|-CXXMethodDecl 0x558d5b669ca8 <line:184:5, col:70> col:10 add_data_handlers 'void (const char *, int, uint8_t *)'
| |-ParmVarDecl 0x558d5b669a90 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x558d5b669b10 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x558d5b669b88 <col:57, col:66> col:66 data 'uint8_t *'
|-CXXMethodDecl 0x558d5b669f58 <line:185:5, col:67> col:10 add_data_handlers 'void (const char *, int, bool *)'
| |-ParmVarDecl 0x558d5b669d78 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x558d5b669df8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x558d5b669e78 <col:57, col:63> col:63 data 'bool *'
|-CXXMethodDecl 0x558d5b66a248 <line:186:5, col:71> col:10 add_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x558d5b66a028 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x558d5b66a0a8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x558d5b66a120 <col:57, col:67> col:67 data 'uint16_t *'
|-CXXMethodDecl 0x558d5b66a4f8 <line:187:5, col:66> col:10 add_data_handlers 'void (const char *, int, int *)'
| |-ParmVarDecl 0x558d5b66a318 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x558d5b66a398 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x558d5b66a418 <col:57, col:62> col:62 data 'int *'
|-CXXMethodDecl 0x558d5b66a7a8 <line:188:5, col:71> col:10 add_data_handlers 'void (const char *, int, unsigned int *)'
| |-ParmVarDecl 0x558d5b66a5c8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x558d5b66a648 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x558d5b66a6c8 <col:57, col:67> col:67 data 'unsigned int *'
|-CXXMethodDecl 0x558d5b66aa58 <line:189:5, col:78> col:10 add_data_handlers 'void (const char *, int, atomic_uint32_t *)'
| |-ParmVarDecl 0x558d5b66a878 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x558d5b66a8f8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x558d5b66a970 <col:57, col:74> col:74 data 'atomic_uint32_t *'
|-CXXMethodDecl 0x558d5b66ad08 <line:190:5, col:67> col:10 add_data_handlers 'void (const char *, int, long *)'
| |-ParmVarDecl 0x558d5b66ab28 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x558d5b66aba8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x558d5b66ac28 <col:57, col:63> col:63 data 'long *'
|-CXXMethodDecl 0x558d5b66b018 <line:191:5, col:76> col:10 add_data_handlers 'void (const char *, int, unsigned long *)'
| |-ParmVarDecl 0x558d5b66ae30 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x558d5b66aeb0 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x558d5b66af30 <col:57, col:72> col:72 data 'unsigned long *'
|-CXXMethodDecl 0x558d5b66b2f8 <line:193:5, col:72> col:10 add_data_handlers 'void (const char *, int, long long *)'
| |-ParmVarDecl 0x558d5b66b0e8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x558d5b66b168 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x558d5b66b210 <col:57, col:68> col:68 data 'long long *'
|-CXXMethodDecl 0x558d5b66b5d8 <line:194:5, col:81> col:10 add_data_handlers 'void (const char *, int, unsigned long long *)'
| |-ParmVarDecl 0x558d5b66b3c8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x558d5b66b448 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x558d5b66b4f0 <col:57, col:77> col:77 data 'unsigned long long *'
|-CXXMethodDecl 0x558d5b66b840 <line:196:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x558d5b66b6a8 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x558d5b66b728 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x558d5b66b7a0 <col:67, col:77> col:77 data 'uint16_t *'
|-CXXMethodDecl 0x558d5b66bae8 <line:197:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint32_t *)'
| |-ParmVarDecl 0x558d5b66b910 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x558d5b66b990 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x558d5b66ba08 <col:67, col:77> col:77 data 'uint32_t *'
|-CXXMethodDecl 0x558d5b66bd98 <line:199:5, col:69> col:10 add_data_handlers 'void (const char *, int, double *)'
| |-ParmVarDecl 0x558d5b66bbb8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x558d5b66bc38 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x558d5b66bcb8 <col:57, col:65> col:65 data 'double *'
|-CXXMethodDecl 0x558d5b66c048 <line:201:5, col:69> col:10 add_data_handlers 'void (const char *, int, String *)'
| |-ParmVarDecl 0x558d5b66be68 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x558d5b66bee8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x558d5b66bf60 <col:57, col:65> col:65 data 'String *'
|-CXXMethodDecl 0x558d5b66c2f8 <line:202:5, col:72> col:10 add_data_handlers 'void (const char *, int, IPAddress *)'
| |-ParmVarDecl 0x558d5b66c118 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x558d5b66c198 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x558d5b66c210 <col:57, col:68> col:68 data 'IPAddress *'
|-CXXMethodDecl 0x558d5b66c5c8 <line:203:5, col:75> col:10 add_data_handlers 'void (const char *, int, EtherAddress *)'
| |-ParmVarDecl 0x558d5b66c3c8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x558d5b66c448 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x558d5b66c4e8 <col:57, col:71> col:71 data 'EtherAddress *'
|-CXXMethodDecl 0x558d5b66c8f8 <line:204:5, col:98> col:10 add_data_handlers 'void (const char *, int, Timestamp *, bool)'
| |-ParmVarDecl 0x558d5b66c698 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x558d5b66c718 <col:46, col:50> col:50 flags 'int'
| |-ParmVarDecl 0x558d5b66c790 <col:57, col:68> col:68 data 'Timestamp *'
| `-ParmVarDecl 0x558d5b66c808 <col:74, col:93> col:79 is_interval 'bool' cinit
|   `-CXXBoolLiteralExpr 0x558d5b671f50 <col:93> 'bool' false
|-CXXMethodDecl 0x558d5b66cae0 <line:206:5, col:58> col:19 read_positional_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x558d5b66c9c8 <col:43, col:50> col:51 'Element *'
| `-ParmVarDecl 0x558d5b66ca48 <col:53, col:57> col:58 'void *'
|-CXXMethodDecl 0x558d5b66ccb8 <line:207:5, col:55> col:19 read_keyword_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x558d5b66cba0 <col:40, col:47> col:48 'Element *'
| `-ParmVarDecl 0x558d5b66cc20 <col:50, col:54> col:55 'void *'
|-CXXMethodDecl 0x558d5b66cf98 <line:208:5, col:92> col:16 reconfigure_positional_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x558d5b66cd78 <col:47, col:59> col:60 'const String &'
| |-ParmVarDecl 0x558d5b66cdf0 <col:62, col:69> col:70 'Element *'
| |-ParmVarDecl 0x558d5b66ce70 <col:72, col:76> col:77 'void *'
| `-ParmVarDecl 0x558d5b66cee8 <col:79, col:91> col:92 'ErrorHandler *'
|-CXXMethodDecl 0x558d5b66d288 <line:209:5, col:89> col:16 reconfigure_keyword_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x558d5b66d068 <col:44, col:56> col:57 'const String &'
| |-ParmVarDecl 0x558d5b66d0e0 <col:59, col:66> col:67 'Element *'
| |-ParmVarDecl 0x558d5b66d160 <col:69, col:73> col:74 'void *'
| `-ParmVarDecl 0x558d5b66d1d8 <col:76, col:88> col:89 'ErrorHandler *'
|-CXXMethodDecl 0x558d5b66d4c0 <line:211:5, col:50> col:17 llrpc 'int (unsigned int, void *)' virtual
| |-ParmVarDecl 0x558d5b66d360 <col:23, col:32> col:32 command 'unsigned int'
| `-ParmVarDecl 0x558d5b66d3e0 <col:41, col:47> col:47 arg 'void *'
|-CXXMethodDecl 0x558d5b66d6a8 <line:212:5, col:48> col:9 local_llrpc 'int (unsigned int, void *)'
| |-ParmVarDecl 0x558d5b66d588 <col:21, col:30> col:30 command 'unsigned int'
| `-ParmVarDecl 0x558d5b66d608 <col:39, col:45> col:45 arg 'void *'
|-CXXRecordDecl 0x558d5b66d758 prev 0x558d5b664ef8 <line:214:5, line:252:5> line:214:11 referenced class Port definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x558d5b66d850 <col:5, col:11> col:11 implicit referenced class Port
| |-AccessSpecDecl 0x558d5b66d8e0 <col:18, col:24> col:18 public
| |-CXXMethodDecl 0x558d5b66d958 <line:216:9, col:30> col:21 used active 'bool () const' inline
| |-CXXMethodDecl 0x558d5b66da18 <line:217:9, col:35> col:25 element 'Element *() const' inline
| |-CXXMethodDecl 0x558d5b66dae0 <line:218:9, col:27> col:20 port 'int () const' inline
| |-CXXMethodDecl 0x558d5b66dc58 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| | |-ParmVarDecl 0x558d5b66db90 <col:54, col:62> col:62 p 'Packet *'
| | |-NoInlineAttr 0x558d5b66dd00 <col:24>
| | `-OptimizeNoneAttr 0x558d5b66dd58 <col:34>
| |-CXXMethodDecl 0x558d5b66dda0 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
| |-CXXMethodDecl 0x558d5b66e058 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| | |-ParmVarDecl 0x558d5b66de50 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x558d5b66dec8 <col:43, col:52> col:52 e 'Element *'
| | `-ParmVarDecl 0x558d5b66df48 <col:55, col:59> col:59 port 'int'
| |-AccessSpecDecl 0x558d5b66e110 <line:229:7, col:14> col:7 private
| |-FieldDecl 0x558d5b66e148 <line:231:9, col:18> col:18 referenced _e 'Element *'
| |-FieldDecl 0x558d5b66e1b0 <line:232:9, col:13> col:13 referenced _port 'int'
| |-CXXConstructorDecl 0x558d5b66e238 <line:247:9, col:21> col:16 Port 'void ()' inline
| |-CXXMethodDecl 0x558d5b66e558 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| | |-ParmVarDecl 0x558d5b66e2f0 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x558d5b66e368 <col:43, col:52> col:52 owner 'Element *'
| | |-ParmVarDecl 0x558d5b66e3e0 <col:59, col:68> col:68 e 'Element *'
| | `-ParmVarDecl 0x558d5b66e460 <col:71, col:75> col:75 port 'int'
| |-FriendDecl 0x558d5b66e670 <line:250:9, col:22> col:16 'class Element':'Element'
| |-CXXConstructorDecl 0x558d5b675fe8 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x558d5b675fe8
| | `-ParmVarDecl 0x558d5b6760f8 <col:11> col:11 'const Element::Port &'
| |-CXXConstructorDecl 0x558d5b676198 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x558d5b676198
| | `-ParmVarDecl 0x558d5b6762a8 <col:11> col:11 'Element::Port &&'
| `-CXXDestructorDecl 0x558d5b67a1e0 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x558d5b66e6e8 <line:256:5, col:49> col:12 id 'String () const'
| `-DeprecatedAttr 0x558d5b66e788 <col:38> "" ""
|-CXXMethodDecl 0x558d5b66e818 <line:257:5, col:55> col:12 landmark 'String () const'
| `-DeprecatedAttr 0x558d5b66e8b8 <col:44> "" ""
|-AccessSpecDecl 0x558d5b66e928 <line:260:3, col:10> col:3 private
|-EnumDecl 0x558d5b66e950 <line:262:5, col:29> col:5
| `-EnumConstantDecl 0x558d5b66ea50 <col:12, col:27> col:12 referenced INLINE_PORTS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:262:5)'
|   `-ImplicitCastExpr 0x558d5b66eaa0 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x558d5b66ea30 <col:27> 'int' Int: 4
|       `-IntegerLiteral 0x558d5b66ea10 <col:27> 'int' 4
|-FieldDecl 0x558d5b66eb58 <line:264:5, col:19> col:11 referenced _ports 'Element::Port *[2]'
|-FieldDecl 0x558d5b66ed08 <line:265:5, col:36> col:10 _inline_ports 'Element::Port [4]'
|-FieldDecl 0x558d5b66edc0 <line:267:5, col:18> col:9 referenced _nports 'int [2]'
|-FieldDecl 0x558d5b66fe50 <line:269:5, col:13> col:13 referenced _router 'Router *'
|-FieldDecl 0x558d5b66feb8 <line:270:5, col:9> col:9 referenced _eindex 'int'
|-CXXConstructorDecl 0x558d5b670008 <line:292:5, col:28> col:5 Element 'void (const Element &)'
| `-ParmVarDecl 0x558d5b66ff48 <col:13, col:27> col:28 'const Element &'
|-CXXMethodDecl 0x558d5b6701b8 <line:293:5, col:39> col:14 operator= 'Element &(const Element &)'
| `-ParmVarDecl 0x558d5b6700c8 <col:24, col:38> col:39 'const Element &'
|-CXXMethodDecl 0x558d5b670398 <line:296:5, col:28> col:9 set_nports 'int (int, int)'
| |-ParmVarDecl 0x558d5b670278 <col:20> col:23 'int'
| `-ParmVarDecl 0x558d5b6702f8 <col:25> col:28 'int'
|-CXXMethodDecl 0x558d5b670640 <line:297:5, col:47> col:9 notify_nports 'int (int, int, ErrorHandler *)'
| |-ParmVarDecl 0x558d5b670460 <col:23> col:26 'int'
| |-ParmVarDecl 0x558d5b6704e0 <col:28> col:31 'int'
| `-ParmVarDecl 0x558d5b670558 <col:33, col:46> col:47 'ErrorHandler *'
|-EnumDecl 0x558d5b6706f8 <line:298:5, col:47> col:10 Processing
| |-EnumConstantDecl 0x558d5b6707c0 <col:23> col:23 VAGNOSTIC 'Element::Processing'
| |-EnumConstantDecl 0x558d5b670810 <col:34> col:34 VPUSH 'Element::Processing'
| `-EnumConstantDecl 0x558d5b670860 <col:41> col:41 VPULL 'Element::Processing'
|-CXXMethodDecl 0x558d5b670a40 <line:299:5, col:71> col:16 next_processing_code 'int (const char *&, ErrorHandler *)' static
| |-ParmVarDecl 0x558d5b6708f0 <col:37, col:50> col:50 p 'const char *&'
| `-ParmVarDecl 0x558d5b670968 <col:53, col:67> col:67 errh 'ErrorHandler *'
|-CXXMethodDecl 0x558d5b670ce8 <line:300:5, col:80> col:10 processing_vector 'void (int *, int *, ErrorHandler *) const'
| |-ParmVarDecl 0x558d5b670b08 <col:28, col:33> col:33 input_codes 'int *'
| |-ParmVarDecl 0x558d5b670b88 <col:46, col:51> col:51 output_codes 'int *'
| `-ParmVarDecl 0x558d5b670c00 <col:65, col:77> col:78 'ErrorHandler *'
|-CXXMethodDecl 0x558d5b670f08 <line:302:5, col:74> col:10 initialize_ports 'void (const int *, const int *)'
| |-ParmVarDecl 0x558d5b670db8 <col:27, col:38> col:38 input_codes 'const int *'
| `-ParmVarDecl 0x558d5b670e38 <col:51, col:62> col:62 output_codes 'const int *'
|-CXXMethodDecl 0x558d5b671240 <line:303:5, col:60> col:9 connect_port 'int (bool, int, Element *, int)'
| |-ParmVarDecl 0x558d5b670fc8 <col:22, col:27> col:27 isoutput 'bool'
| |-ParmVarDecl 0x558d5b671048 <col:37, col:41> col:41 port 'int'
| |-ParmVarDecl 0x558d5b6710c0 <col:47, col:54> col:55 'Element *'
| `-ParmVarDecl 0x558d5b671140 <col:57> col:60 'int'
|-CXXMethodDecl 0x558d5b671428 <line:305:5, col:68> col:19 read_handlers_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x558d5b671310 <col:41, col:50> col:50 e 'Element *'
| `-ParmVarDecl 0x558d5b671390 <col:53, col:59> col:59 user_data 'void *'
|-CXXMethodDecl 0x558d5b671578 <line:306:5, col:51> col:10 add_default_handlers 'void (bool)'
| `-ParmVarDecl 0x558d5b6714e8 <col:31, col:36> col:36 writable_config 'bool'
|-CXXMethodDecl 0x558d5b6718f8 <line:307:5, col:100> col:17 add_data_handlers 'void (const char *, int, HandlerCallback, void *)' inline
| |-ParmVarDecl 0x558d5b671638 <col:35, col:47> col:47 name 'const char *'
| |-ParmVarDecl 0x558d5b6716b8 <col:53, col:57> col:57 flags 'int'
| |-ParmVarDecl 0x558d5b671730 <col:64, col:80> col:80 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| `-ParmVarDecl 0x558d5b6717b0 <col:90, col:96> col:96 data 'void *'
`-FriendDecl 0x558d5b671a10 <line:309:5, col:18> col:12 'class Router':'Router'

Layout: <CGRecordLayout
  LLVMType:%class.Element = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Element.base = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class ClickyInfo
         0 |   class Element (primary base)
         0 |     (Element vtable pointer)
         8 |     class Element::Port *[2] _ports
        24 |     class Element::Port [4] _inline_ports
        88 |     int [2] _nports
        96 |     class Router * _router
       104 |     int _eindex
           | [sizeof=112, dsize=108, align=8,
           |  nvsize=108, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558d5b679158 <../elements/standard/clickyinfo.hh:20:1, line:27:1> line:20:7 class ClickyInfo definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-public 'Element'
|-CXXRecordDecl 0x558d5b6792b8 <col:1, col:7> col:7 implicit referenced class ClickyInfo
|-AccessSpecDecl 0x558d5b679348 <col:37, col:43> col:37 public
|-CXXConstructorDecl 0x558d5b6793d0 <line:22:5, col:16> col:5 ClickyInfo 'void ()'
|-CXXMethodDecl 0x558d5b6794d0 <line:24:5, col:59> col:17 class_name 'const char *() const'
| |-Overrides: [ 0x558d5b661ea8 Element::class_name 'const char *() const' ]
| `-CompoundStmt 0x558d5b67a020 <col:36, col:59>
|   `-ReturnStmt 0x558d5b67a010 <col:38, col:45>
|     `-ImplicitCastExpr 0x558d5b679ff8 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x558d5b679fd0 <col:45> 'const char [11]' lvalue "ClickyInfo"
|-CXXMethodDecl 0x558d5b6797a0 <line:25:5, col:59> col:9 configure 'int (Vector<String> &, ErrorHandler *)'
| |-Overrides: [ 0x558d5b663740 Element::configure 'int (Vector<String> &, ErrorHandler *)' ]
| |-ParmVarDecl 0x558d5b679650 <col:19, col:35> col:35 conf 'Vector<String> &'
| `-ParmVarDecl 0x558d5b6796c8 <col:41, col:55> col:55 errh 'ErrorHandler *'
|-CXXConstructorDecl 0x558d5b679878 <line:20:7> col:7 implicit ClickyInfo 'void (const ClickyInfo &)' inline default_delete noexcept-unevaluated 0x558d5b679878
| `-ParmVarDecl 0x558d5b679988 <col:7> col:7 'const ClickyInfo &'
|-CXXConstructorDecl 0x558d5b679a28 <col:7> col:7 implicit ClickyInfo 'void (ClickyInfo &&)' inline default_delete noexcept-unevaluated 0x558d5b679a28
| `-ParmVarDecl 0x558d5b679b38 <col:7> col:7 'ClickyInfo &&'
|-CXXMethodDecl 0x558d5b679bd8 <col:7> col:7 implicit operator= 'ClickyInfo &(const ClickyInfo &)' inline default_delete noexcept-unevaluated 0x558d5b679bd8
| `-ParmVarDecl 0x558d5b679ce8 <col:7> col:7 'const ClickyInfo &'
|-CXXMethodDecl 0x558d5b679d58 <col:7> col:7 implicit operator= 'ClickyInfo &(ClickyInfo &&)' inline default_delete noexcept-unevaluated 0x558d5b679d58
| `-ParmVarDecl 0x558d5b679e68 <col:7> col:7 'ClickyInfo &&'
`-CXXDestructorDecl 0x558d5b679ef0 <col:7> col:7 implicit ~ClickyInfo 'void ()' inline default noexcept-unevaluated 0x558d5b679ef0
  `-Overrides: [ 0x558d5b660a48 Element::~Element 'void () noexcept' ]

Layout: <CGRecordLayout
  LLVMType:%class.ClickyInfo = type { %class.Element.base, [4 x i8] }
  NonVirtualBaseLLVMType:%class.ClickyInfo.base = type { %class.Element.base }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class atomic_uint32_t
         0 |   uint32_t _val
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Packet::Anno
         0 |   char [48] c
         0 |   uint8_t [48] u8
         0 |   uint16_t [24] u16
         0 |   uint32_t [12] u32
         0 |   uint64_t [6] u64
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Packet::AllAnno
         0 |   union Packet::Anno cb
         0 |     char [48] c
         0 |     uint8_t [48] u8
         0 |     uint16_t [24] u16
         0 |     uint32_t [12] u32
         0 |     uint64_t [6] u64
        48 |   unsigned char * mac
        56 |   unsigned char * nh
        64 |   unsigned char * h
        72 |   enum Packet::PacketType pkt_type
        76 |   char [8] timestamp
        88 |   class Packet * next
        96 |   class Packet * prev
           | [sizeof=104, dsize=104, align=8,
           |  nvsize=104, nvalign=8]

*** Dumping AST Record Layout
         0 | class Packet
         0 |   class atomic_uint32_t _use_count
         0 |     uint32_t _val
         8 |   class Packet * _data_packet
        16 |   unsigned char * _head
        24 |   unsigned char * _data
        32 |   unsigned char * _tail
        40 |   unsigned char * _end
        48 |   struct Packet::AllAnno _aa
        48 |     union Packet::Anno cb
        48 |       char [48] c
        48 |       uint8_t [48] u8
        48 |       uint16_t [24] u16
        48 |       uint32_t [12] u32
        48 |       uint64_t [6] u64
        96 |     unsigned char * mac
       104 |     unsigned char * nh
       112 |     unsigned char * h
       120 |     enum Packet::PacketType pkt_type
       124 |     char [8] timestamp
       136 |     class Packet * next
       144 |     class Packet * prev
       152 |   Packet::buffer_destructor_type _destructor
       160 |   void * _destructor_argument
           | [sizeof=168, dsize=168, align=8,
           |  nvsize=168, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558d5b41f220 <../dummy_inc/click/atomic.hh:52:1, line:94:1> line:52:7 referenced class atomic_uint32_t definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x558d5b41f338 <col:1, col:7> col:7 implicit referenced class atomic_uint32_t
|-AccessSpecDecl 0x558d5b41f3c8 <col:25, col:31> col:25 public
|-CXXMethodDecl 0x558d5b41f498 <line:57:5, col:29> col:21 used value 'uint32_t () const' inline
|-CXXConversionDecl 0x558d5b41f580 <line:58:5, col:32> col:12 operator unsigned int 'uint32_t () const' inline
|-CXXMethodDecl 0x558d5b41f798 <line:60:5, col:49> col:29 used operator= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x558d5b41f640 <col:39, col:48> col:48 x 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558d5b41f948 <line:62:5, col:53> col:29 operator+= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x558d5b41f850 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x558d5b41fa90 <line:63:5, col:53> col:29 operator-= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x558d5b41fa00 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x558d5b41fbd8 <line:64:5, col:53> col:29 operator|= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x558d5b41fb48 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558d5b41fd20 <line:65:5, col:53> col:29 operator&= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x558d5b41fc90 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558d5b41fde8 <line:67:5, col:28> col:17 operator++ 'void ()' inline
|-CXXMethodDecl 0x558d5b41ff30 <line:68:5, col:31> col:17 operator++ 'void (int)' inline
| `-ParmVarDecl 0x558d5b41fea0 <col:28> col:31 'int'
|-CXXMethodDecl 0x558d5b41fff8 <line:69:5, col:28> col:17 operator-- 'void ()' inline
|-CXXMethodDecl 0x558d5b420140 <line:70:5, col:31> col:17 operator-- 'void (int)' inline
| `-ParmVarDecl 0x558d5b4200b0 <col:28> col:31 'int'
|-CXXMethodDecl 0x558d5b4202b8 <line:72:5, col:42> col:21 swap 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x558d5b4201f8 <col:26, col:35> col:35 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558d5b420400 <line:73:5, col:49> col:21 fetch_and_add 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x558d5b420370 <col:35, col:44> col:44 delta 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558d5b4204c8 <line:74:5, col:30> col:17 dec_and_test 'bool ()' inline
|-CXXMethodDecl 0x558d5b420688 <line:75:5, col:69> col:21 compare_swap 'uint32_t (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x558d5b420578 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x558d5b4205f0 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558d5b4208d8 <line:76:5, col:97> col:17 compare_and_swap 'bool (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x558d5b420748 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x558d5b4207c0 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x558d5b420988 <col:86> "" ""
|-CXXMethodDecl 0x558d5b420bf8 <line:78:5, col:71> col:28 used swap 'uint32_t (volatile uint32_t &, uint32_t)' static inline
| |-ParmVarDecl 0x558d5b420a68 <col:33, col:52> col:52 x 'volatile uint32_t &'
| `-ParmVarDecl 0x558d5b420ae0 <col:55, col:64> col:64 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558d5b420da8 <line:79:5, col:48> col:24 used inc 'void (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x558d5b420cb8 <col:28, col:47> col:47 x 'volatile uint32_t &'
|-CXXMethodDecl 0x558d5b420f58 <line:80:5, col:57> col:24 used dec_and_test 'bool (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x558d5b420e60 <col:37, col:56> col:56 x 'volatile uint32_t &'
|-CXXMethodDecl 0x558d5b421228 <line:81:5, col:98> col:28 compare_swap 'uint32_t (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x558d5b421010 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x558d5b421088 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x558d5b421100 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558d5b421508 <line:82:5, col:126> col:24 compare_and_swap 'bool (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x558d5b4212f0 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x558d5b421368 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x558d5b4213e0 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x558d5b4215c0 <col:115> "" ""
|-AccessSpecDecl 0x558d5b421630 <line:84:3, col:10> col:3 private
|-FieldDecl 0x558d5b421668 <line:91:5, col:14> col:14 referenced _val 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558d5b422b80 <line:52:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x558d5b422b80
| `-ParmVarDecl 0x558d5b422c88 <col:7> col:7 'const atomic_uint32_t &'
|-CXXMethodDecl 0x558d5b422d28 <col:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x558d5b422d28
| `-ParmVarDecl 0x558d5b422e38 <col:7> col:7 'atomic_uint32_t &&'
|-CXXConstructorDecl 0x558d5b458468 <col:7> col:7 implicit used atomic_uint32_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x558d5b64a260 <col:7>
|-CXXConstructorDecl 0x558d5b458540 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x558d5b458540
| `-ParmVarDecl 0x558d5b458658 <col:7> col:7 'const atomic_uint32_t &'
|-CXXConstructorDecl 0x558d5b4586c8 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x558d5b4586c8
| `-ParmVarDecl 0x558d5b4587d8 <col:7> col:7 'atomic_uint32_t &&'
`-CXXDestructorDecl 0x558d5b64cc60 <col:7> col:7 implicit ~atomic_uint32_t 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.atomic_uint32_t = type { i32 }
  NonVirtualBaseLLVMType:%class.atomic_uint32_t = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558d5b638e08 prev 0x558d5b62e010 <../dummy_inc/click/packet.hh:702:5, line:711:5> line:702:11 referenced union Anno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x558d5b638f00 <col:5, col:11> col:11 implicit union Anno
|-FieldDecl 0x558d5b638ff0 <line:703:2, col:18> col:7 referenced c 'char [48]'
|-FieldDecl 0x558d5b639118 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
|-FieldDecl 0x558d5b639298 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
|-FieldDecl 0x558d5b639418 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
|-FieldDecl 0x558d5b639598 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
|-CXXConstructorDecl 0x558d5b64a3c8 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| `-CompoundStmt 0x558d5b64ac38 <col:11>
|-CXXDestructorDecl 0x558d5b64a4a0 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x558d5b64a5d8 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x558d5b64a5d8
| `-ParmVarDecl 0x558d5b64a6e8 <col:11> col:11 'const Packet::Anno &'
|-CXXConstructorDecl 0x558d5b64a788 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x558d5b64a788
| `-ParmVarDecl 0x558d5b64a898 <col:11> col:11 'Packet::Anno &&'
|-CXXMethodDecl 0x558d5b64d658 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| |-ParmVarDecl 0x558d5b64d768 <col:11> col:11 'const Packet::Anno &'
| `-CompoundStmt 0x558d5b64d9e8 <col:11>
|   `-ReturnStmt 0x558d5b64d9d8 <col:11>
|     `-UnaryOperator 0x558d5b64d9c0 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x558d5b64d9b0 <col:11> 'Packet::Anno *' this
`-CXXMethodDecl 0x558d5b64d7d8 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x558d5b64d7d8
  `-ParmVarDecl 0x558d5b64d8e8 <col:11> col:11 'Packet::Anno &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Packet::Anno" = type { [6 x i64] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558d5b639600 <../dummy_inc/click/packet.hh:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x558d5b639718 <col:5, col:12> col:12 implicit struct AllAnno
|-FieldDecl 0x558d5b6397b8 <line:717:2, col:7> col:7 cb 'Packet::Anno'
|-FieldDecl 0x558d5b639820 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
|-FieldDecl 0x558d5b639888 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
|-FieldDecl 0x558d5b6398f0 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
|-FieldDecl 0x558d5b639950 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
|-FieldDecl 0x558d5b639a10 <line:722:2, col:34> col:7 timestamp 'char [8]'
|-FieldDecl 0x558d5b639a70 <line:723:2, col:10> col:10 referenced next 'Packet *'
|-FieldDecl 0x558d5b639ad0 <line:724:2, col:10> col:10 referenced prev 'Packet *'
|-CXXConstructorDecl 0x558d5b64a2d8 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| |-CXXCtorInitializer Field 0x558d5b6397b8 'cb' 'Packet::Anno'
| | `-CXXConstructExpr 0x558d5b64ac48 <col:12> 'Packet::Anno' 'void () noexcept'
| `-CompoundStmt 0x558d5b64aca0 <col:12>
|-CXXConstructorDecl 0x558d5b64a908 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x558d5b64a908
| `-ParmVarDecl 0x558d5b64aa18 <col:12> col:12 'const Packet::AllAnno &'
|-CXXConstructorDecl 0x558d5b64aab8 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x558d5b64aab8
| `-ParmVarDecl 0x558d5b64abc8 <col:12> col:12 'Packet::AllAnno &&'
`-CXXDestructorDecl 0x558d5b64cd40 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  NonVirtualBaseLLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558d5b627720 <../dummy_inc/click/packet.hh:35:1, line:775:1> line:35:7 referenced class Packet definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x558d5b627838 <col:1, col:7> col:7 implicit referenced class Packet
|-AccessSpecDecl 0x558d5b6278c8 <col:16, col:22> col:16 public
|-EnumDecl 0x558d5b6278f0 <line:41:5, line:50:5> line:41:5
| |-EnumConstantDecl 0x558d5b6279f0 <line:45:2, col:21> col:2 referenced default_headroom 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| | `-ImplicitCastExpr 0x558d5b627ad0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558d5b6279d0 <col:21> 'int' Int: 28
| |     `-IntegerLiteral 0x558d5b6279b0 <col:21> 'int' 28
| `-EnumConstantDecl 0x558d5b627a80 <line:48:2, col:22> col:2 referenced min_buffer_length 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
|   `-ImplicitCastExpr 0x558d5b627ae8 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x558d5b627a60 <col:22> 'int' Int: 64
|       `-IntegerLiteral 0x558d5b627a40 <col:22> 'int' 64
|-CXXMethodDecl 0x558d5b627e28 <line:52:5, line:53:75> line:52:28 used make 'WritablePacket *(uint32_t, const void *, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x558d5b627b10 <col:33, col:42> col:42 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x558d5b627b90 <col:52, col:64> col:64 data 'const void *'
| |-ParmVarDecl 0x558d5b627c08 <line:53:5, col:14> col:14 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x558d5b627c80 <col:22, col:31> col:31 tailroom 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x558d5b627ee8 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x558d5b6280e8 <line:54:5, col:109> col:35 make 'WritablePacket *(const void *, uint32_t)' static inline
| |-ParmVarDecl 0x558d5b627f60 <col:40, col:52> col:52 data 'const void *'
| |-ParmVarDecl 0x558d5b627fd8 <col:58, col:67> col:67 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x558d5b628198 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x558d5b6282f8 <line:55:5, col:91> col:35 make 'WritablePacket *(uint32_t)' static inline
| |-ParmVarDecl 0x558d5b628208 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x558d5b6283a0 <col:72> warn_unused_result ""
|-TypedefDecl 0x558d5b628700 <line:65:5, col:89> col:20 referenced buffer_destructor_type 'void (*)(unsigned char *, size_t, void *)'
| `-PointerType 0x558d5b628690 'void (*)(unsigned char *, size_t, void *)'
|   `-ParenType 0x558d5b628630 'void (unsigned char *, size_t, void *)' sugar
|     `-FunctionProtoType 0x558d5b6285f0 'void (unsigned char *, size_t, void *)' cdecl
|       |-BuiltinType 0x558d5b1012d0 'void'
|       |-PointerType 0x558d5b3a7ac0 'unsigned char *'
|       | `-BuiltinType 0x558d5b1013d0 'unsigned char'
|       |-TypedefType 0x558d5b1a4030 'size_t' sugar
|       | |-Typedef 0x558d5b171b20 'size_t'
|       | `-BuiltinType 0x558d5b101430 'unsigned long'
|       `-PointerType 0x558d5b101ad0 'void *'
|         `-BuiltinType 0x558d5b1012d0 'void'
|-CXXMethodDecl 0x558d5b628b78 <line:66:5, line:68:131> line:66:28 make 'WritablePacket *(unsigned char *, uint32_t, Packet::buffer_destructor_type, void *, int, int)' static
| |-ParmVarDecl 0x558d5b628770 <col:33, col:48> col:48 data 'unsigned char *'
| |-ParmVarDecl 0x558d5b6287e8 <col:54, col:63> col:63 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x558d5b628880 <line:67:5, col:28> col:28 buffer_destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| |-ParmVarDecl 0x558d5b628900 <line:68:33, col:58> col:39 argument 'void *' cinit
| | `-CStyleCastExpr 0x558d5b643270 <col:50, col:58> 'void *' <NoOp>
| |   `-ImplicitCastExpr 0x558d5b643258 <col:58> 'void *' <NullToPointer> part_of_explicit_cast
| |     `-IntegerLiteral 0x558d5b643220 <col:58> 'int' 0
| |-ParmVarDecl 0x558d5b628980 <col:61, col:76> col:65 headroom 'int' cinit
| | `-IntegerLiteral 0x558d5b643298 <col:76> 'int' 0
| |-ParmVarDecl 0x558d5b628a00 <col:79, col:94> col:83 tailroom 'int' cinit
| | `-IntegerLiteral 0x558d5b6432b8 <col:94> 'int' 0
| `-WarnUnusedResultAttr 0x558d5b628c48 <col:112> warn_unused_result ""
|-CXXMethodDecl 0x558d5b628cc8 <line:71:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x558d5b628d88 <line:73:5, col:50> col:45 used kill 'void ()'
| |-NoInlineAttr 0x558d5b628e28 <col:20>
| `-OptimizeNoneAttr 0x558d5b628e80 <col:30>
|-CXXMethodDecl 0x558d5b628ef8 <line:75:5, col:54> col:45 used shared 'bool () const'
| |-NoInlineAttr 0x558d5b628f98 <col:20>
| `-OptimizeNoneAttr 0x558d5b628ff0 <col:30>
|-CXXMethodDecl 0x558d5b629068 <line:76:5, col:55> col:13 clone 'Packet *()'
| `-WarnUnusedResultAttr 0x558d5b629108 <col:36> warn_unused_result ""
|-CXXMethodDecl 0x558d5b6291b8 <line:77:5, col:102> col:56 uniqueify 'WritablePacket *()'
| |-NoInlineAttr 0x558d5b629258 <col:20>
| |-OptimizeNoneAttr 0x558d5b6292b0 <col:30>
| `-WarnUnusedResultAttr 0x558d5b6292d8 <col:83> warn_unused_result ""
|-CXXMethodDecl 0x558d5b629330 <line:79:5, col:68> col:61 used data 'const unsigned char *() const'
| |-NoInlineAttr 0x558d5b6293d0 <col:20>
| `-OptimizeNoneAttr 0x558d5b629428 <col:30>
|-CXXMethodDecl 0x558d5b629478 <line:80:5, col:72> col:61 used end_data 'const unsigned char *() const'
| |-NoInlineAttr 0x558d5b629518 <col:20>
| `-OptimizeNoneAttr 0x558d5b629570 <col:30>
|-CXXMethodDecl 0x558d5b6295b8 <line:81:5, col:58> col:49 length 'uint32_t () const'
| |-NoInlineAttr 0x558d5b629658 <col:20>
| `-OptimizeNoneAttr 0x558d5b6296b0 <col:30>
|-CXXMethodDecl 0x558d5b6296f8 <line:82:5, col:32> col:21 used headroom 'uint32_t () const' inline
|-CXXMethodDecl 0x558d5b6297b8 <line:83:5, col:32> col:21 used tailroom 'uint32_t () const' inline
|-CXXMethodDecl 0x558d5b629880 <line:84:5, col:42> col:33 used buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x558d5b629948 <line:85:5, col:46> col:33 used end_buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x558d5b629a08 <line:86:5, col:37> col:21 used buffer_length 'uint32_t () const' inline
|-CXXMethodDecl 0x558d5b629b28 <line:97:5, line:99:5> line:97:28 buffer_destructor 'Packet::buffer_destructor_type () const'
| `-CompoundStmt 0x558d5b643380 <col:54, line:99:5>
|   `-ReturnStmt 0x558d5b643370 <line:98:2, col:9>
|     `-ImplicitCastExpr 0x558d5b643358 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-MemberExpr 0x558d5b643328 <col:9> 'const Packet::buffer_destructor_type':'void (*const)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x558d5b639e08
|         `-CXXThisExpr 0x558d5b643318 <col:9> 'const Packet *' implicit this
|-CXXMethodDecl 0x558d5b629cc8 <line:101:5, line:103:5> line:101:10 set_buffer_destructor 'void (Packet::buffer_destructor_type)'
| |-ParmVarDecl 0x558d5b629bd8 <col:32, col:55> col:55 used destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| `-CompoundStmt 0x558d5b643430 <col:67, line:103:5>
|   `-BinaryOperator 0x558d5b643410 <line:102:9, col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x558d5b6433a8 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x558d5b639e08
|     | `-CXXThisExpr 0x558d5b643398 <col:9> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x558d5b6433f8 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-DeclRefExpr 0x558d5b6433d8 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ParmVar 0x558d5b629bd8 'destructor' 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-CXXMethodDecl 0x558d5b629dc0 <line:105:5, line:107:5> line:105:11 destructor_argument 'void *()'
| `-CompoundStmt 0x558d5b6434b0 <col:33, line:107:5>
|   `-ReturnStmt 0x558d5b6434a0 <line:106:9, col:16>
|     `-ImplicitCastExpr 0x558d5b643488 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x558d5b643458 <col:16> 'void *' lvalue ->_destructor_argument 0x558d5b639e70
|         `-CXXThisExpr 0x558d5b643448 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x558d5b629e80 <line:109:5, line:113:5> line:109:10 reset_buffer 'void ()'
| `-CompoundStmt 0x558d5b643ae0 <col:25, line:113:5>
|   |-ParenExpr 0x558d5b643828 <line:110:2, col:146> 'void'
|   | `-ConditionalOperator 0x558d5b6437f8 <col:3, col:145> 'void'
|   |   |-CXXStaticCastExpr 0x558d5b643568 <col:3, col:32> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x558d5b643540 <col:23, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-CXXMemberCallExpr 0x558d5b643508 <col:24, col:31> 'bool'
|   |   |     `-MemberExpr 0x558d5b6434d8 <col:24> '<bound member function type>' ->shared 0x558d5b628ef8
|   |   |       `-ImplicitCastExpr 0x558d5b643528 <col:24> 'const Packet *' <NoOp>
|   |   |         `-CXXThisExpr 0x558d5b6434c8 <col:24> 'Packet *' implicit this
|   |   |-CXXFunctionalCastExpr 0x558d5b6435c8 <col:36, col:43> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x558d5b6435a8 <col:42> 'int' 0
|   |   `-CallExpr 0x558d5b643758 <col:47, col:145> 'void'
|   |     |-ImplicitCastExpr 0x558d5b643740 <col:47> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x558d5b643720 <col:47> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x558d5b19ae40 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x558d5b643798 <col:62> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558d5b643638 <col:62> 'const char [10]' lvalue "!shared()"
|   |     |-ImplicitCastExpr 0x558d5b6437b0 <col:75> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558d5b643660 <col:75> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x558d5b6437c8 <col:107> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x558d5b643698 <col:107> 'int' 110
|   |     `-ImplicitCastExpr 0x558d5b6437e0 <col:112, col:126> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x558d5b643708 <col:112, col:126> 'const char [28]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x558d5b6436f0 <col:126> 'const char [28]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x558d5b6436b8 <col:126> 'const char [28]' lvalue "void Packet::reset_buffer()"
|   |-BinaryOperator 0x558d5b643a28 <line:111:2, col:33> 'unsigned char *' lvalue '='
|   | |-MemberExpr 0x558d5b643858 <col:2> 'unsigned char *' lvalue ->_head 0x558d5b639c10
|   | | `-CXXThisExpr 0x558d5b643848 <col:2> 'Packet *' implicit this
|   | `-ImplicitCastExpr 0x558d5b643a10 <col:10, col:33> 'unsigned char *' <LValueToRValue>
|   |   `-BinaryOperator 0x558d5b6439f0 <col:10, col:33> 'unsigned char *' lvalue '='
|   |     |-MemberExpr 0x558d5b643898 <col:10> 'unsigned char *' lvalue ->_data 0x558d5b639c78
|   |     | `-CXXThisExpr 0x558d5b643888 <col:10> 'Packet *' implicit this
|   |     `-ImplicitCastExpr 0x558d5b6439d8 <col:18, col:33> 'unsigned char *' <LValueToRValue>
|   |       `-BinaryOperator 0x558d5b6439b8 <col:18, col:33> 'unsigned char *' lvalue '='
|   |         |-MemberExpr 0x558d5b6438d8 <col:18> 'unsigned char *' lvalue ->_tail 0x558d5b639ce0
|   |         | `-CXXThisExpr 0x558d5b6438c8 <col:18> 'Packet *' implicit this
|   |         `-ImplicitCastExpr 0x558d5b6439a0 <col:26, col:33> 'unsigned char *' <LValueToRValue>
|   |           `-BinaryOperator 0x558d5b643980 <col:26, col:33> 'unsigned char *' lvalue '='
|   |             |-MemberExpr 0x558d5b643918 <col:26> 'unsigned char *' lvalue ->_end 0x558d5b639d48
|   |             | `-CXXThisExpr 0x558d5b643908 <col:26> 'Packet *' implicit this
|   |             `-ImplicitCastExpr 0x558d5b643968 <col:33> 'unsigned char *' <NullToPointer>
|   |               `-IntegerLiteral 0x558d5b643948 <col:33> 'int' 0
|   `-BinaryOperator 0x558d5b643ac0 <line:112:2, col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x558d5b643a58 <col:2> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x558d5b639e08
|     | `-CXXThisExpr 0x558d5b643a48 <col:2> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x558d5b643aa8 <col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <NullToPointer>
|       `-IntegerLiteral 0x558d5b643a88 <col:16> 'int' 0
|-CXXMethodDecl 0x558d5b629fc0 <line:141:5, col:109> col:56 push 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x558d5b629f30 <col:61, col:70> col:70 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x558d5b62a068 <col:20>
| |-OptimizeNoneAttr 0x558d5b62a0c0 <col:30>
| `-WarnUnusedResultAttr 0x558d5b62a0e8 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x558d5b62a1b8 <line:152:5, col:120> col:56 push_mac_header 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x558d5b62a128 <col:72, col:81> col:81 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x558d5b62a260 <col:20>
| |-OptimizeNoneAttr 0x558d5b62a2b8 <col:30>
| `-WarnUnusedResultAttr 0x558d5b62a2e0 <col:101> warn_unused_result ""
|-CXXMethodDecl 0x558d5b62a418 <line:171:5, col:76> col:13 nonunique_push 'Packet *(uint32_t)'
| |-ParmVarDecl 0x558d5b62a320 <col:28, col:37> col:37 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x558d5b62a4c0 <col:57> warn_unused_result ""
|-CXXMethodDecl 0x558d5b62a5c0 <line:187:5, col:62> col:45 pull 'void (uint32_t)'
| |-ParmVarDecl 0x558d5b62a530 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x558d5b62a668 <col:20>
| `-OptimizeNoneAttr 0x558d5b62a6c0 <col:30>
|-CXXMethodDecl 0x558d5b62a788 <line:213:5, col:73> col:21 put 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x558d5b62a6f8 <col:25, col:34> col:34 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x558d5b62a830 <col:54> warn_unused_result ""
|-CXXMethodDecl 0x558d5b62a930 <line:230:5, col:75> col:13 nonunique_put 'Packet *(uint32_t)'
| |-ParmVarDecl 0x558d5b62a8a0 <col:27, col:36> col:36 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x558d5b62a9d8 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x558d5b62aad8 <line:245:5, col:62> col:45 take 'void (uint32_t)'
| |-ParmVarDecl 0x558d5b62aa48 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x558d5b62ab80 <col:20>
| `-OptimizeNoneAttr 0x558d5b62abd8 <col:30>
|-CXXMethodDecl 0x558d5b62ad68 <line:269:5, col:99> col:13 shift_data 'Packet *(int, bool)'
| |-ParmVarDecl 0x558d5b62ac18 <col:24, col:28> col:28 offset 'int'
| |-ParmVarDecl 0x558d5b62ac90 <col:36, col:59> col:41 free_on_failure 'bool' cinit
| | `-CXXBoolLiteralExpr 0x558d5b6432d8 <col:59> 'bool' true
| `-WarnUnusedResultAttr 0x558d5b62ae18 <col:80> warn_unused_result ""
|-CXXMethodDecl 0x558d5b62b018 <line:271:5, col:71> col:17 shrink_data 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x558d5b62ae90 <col:29, col:50> col:50 data 'const unsigned char *'
| `-ParmVarDecl 0x558d5b62af08 <col:56, col:65> col:65 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558d5b62b228 <line:272:5, col:78> col:17 change_headroom_and_length 'void (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x558d5b62b0d8 <col:44, col:53> col:53 headroom 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x558d5b62b150 <col:63, col:72> col:72 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558d5b62b438 <line:274:5, col:40> col:10 copy 'bool (Packet *, int)'
| |-ParmVarDecl 0x558d5b62b2e8 <col:15, col:23> col:23 p 'Packet *'
| `-ParmVarDecl 0x558d5b62b368 <col:26, col:39> col:30 headroom 'int' cinit
|   `-IntegerLiteral 0x558d5b6432e8 <col:39> 'int' 0
|-CXXMethodDecl 0x558d5b62b508 <line:279:5, col:34> col:17 has_mac_header 'bool () const' inline
|-CXXMethodDecl 0x558d5b62b5d0 <line:280:5, col:46> col:33 used mac_header 'const unsigned char *() const' inline
|-CXXMethodDecl 0x558d5b62b698 <line:281:5, col:36> col:16 mac_header_offset 'int () const' inline
|-CXXMethodDecl 0x558d5b62b758 <line:282:5, col:41> col:21 mac_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x558d5b62b820 <line:283:5, col:29> col:16 mac_length 'int () const' inline
|-CXXMethodDecl 0x558d5b62b968 <line:284:5, col:54> col:17 set_mac_header 'void (const unsigned char *)' inline
| `-ParmVarDecl 0x558d5b62b8d8 <col:32, col:53> col:53 p 'const unsigned char *'
|-CXXMethodDecl 0x558d5b62bb38 <line:285:5, col:68> col:17 used set_mac_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x558d5b62ba28 <col:32, col:53> col:53 p 'const unsigned char *'
| `-ParmVarDecl 0x558d5b62baa0 <col:56, col:65> col:65 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558d5b62bc08 <line:286:5, col:34> col:17 clear_mac_header 'void ()' inline
|-CXXMethodDecl 0x558d5b62bcc8 <line:288:5, col:66> col:45 has_network_header 'bool () const'
| |-NoInlineAttr 0x558d5b62bd68 <col:20>
| `-OptimizeNoneAttr 0x558d5b62bdc0 <col:30>
|-CXXMethodDecl 0x558d5b62be10 <line:289:5, col:78> col:61 used network_header 'const unsigned char *() const'
| |-NoInlineAttr 0x558d5b62beb0 <col:20>
| `-OptimizeNoneAttr 0x558d5b62bf08 <col:30>
|-CXXMethodDecl 0x558d5b62bf58 <line:290:5, col:40> col:16 used network_header_offset 'int () const' inline
|-CXXMethodDecl 0x558d5b62c018 <line:291:5, col:45> col:21 used network_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x558d5b62c0e0 <line:292:5, col:61> col:44 network_length 'int () const'
| |-NoInlineAttr 0x558d5b62c180 <col:20>
| `-OptimizeNoneAttr 0x558d5b62c1d8 <col:30>
|-CXXMethodDecl 0x558d5b62c328 <line:293:5, col:72> col:17 set_network_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x558d5b62c218 <col:36, col:57> col:57 p 'const unsigned char *'
| `-ParmVarDecl 0x558d5b62c290 <col:60, col:69> col:69 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558d5b62c478 <line:294:5, col:55> col:17 set_network_header_length 'void (uint32_t)' inline
| `-ParmVarDecl 0x558d5b62c3e8 <col:43, col:52> col:52 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558d5b62c550 <line:295:5, col:38> col:17 clear_network_header 'void ()' inline
|-CXXMethodDecl 0x558d5b62c610 <line:297:5, col:68> col:45 has_transport_header 'bool () const'
| |-NoInlineAttr 0x558d5b62c6b0 <col:20>
| `-OptimizeNoneAttr 0x558d5b62c708 <col:30>
|-CXXMethodDecl 0x558d5b62c758 <line:298:5, col:80> col:61 used transport_header 'const unsigned char *() const'
| |-NoInlineAttr 0x558d5b62c7f8 <col:20>
| `-OptimizeNoneAttr 0x558d5b62c850 <col:30>
|-CXXMethodDecl 0x558d5b62c8a0 <line:299:5, col:42> col:16 transport_header_offset 'int () const' inline
|-CXXMethodDecl 0x558d5b62c968 <line:300:5, col:63> col:44 transport_length 'int () const'
| |-NoInlineAttr 0x558d5b62ca08 <col:20>
| `-OptimizeNoneAttr 0x558d5b62ca60 <col:30>
|-CXXMethodDecl 0x558d5b62caa8 <line:301:5, col:40> col:17 clear_transport_header 'void ()' inline
|-CXXMethodDecl 0x558d5b62cbc8 <line:304:5, col:46> col:31 ether_header 'const click_ether *() const' inline
|-CXXMethodDecl 0x558d5b62cd38 <line:305:5, col:57> col:17 set_ether_header 'void (const click_ether *)' inline
| `-ParmVarDecl 0x558d5b62cc78 <col:34, col:53> col:53 ethh 'const click_ether *'
|-CXXMethodDecl 0x558d5b62ce28 <line:307:5, col:68> col:56 ip_header 'const click_ip *() const'
| |-NoInlineAttr 0x558d5b62cec8 <col:20>
| `-OptimizeNoneAttr 0x558d5b62cf20 <col:30>
|-CXXMethodDecl 0x558d5b62cf70 <line:308:5, col:35> col:16 ip_header_offset 'int () const' inline
|-CXXMethodDecl 0x558d5b62d030 <line:309:5, col:40> col:21 ip_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x558d5b62d268 <line:310:5, col:92> col:45 set_ip_header 'void (const click_ip *, uint32_t)'
| |-ParmVarDecl 0x558d5b62d0e0 <col:59, col:75> col:75 iph 'const click_ip *'
| |-ParmVarDecl 0x558d5b62d158 <col:80, col:89> col:89 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x558d5b62d318 <col:20>
| `-OptimizeNoneAttr 0x558d5b62d370 <col:30>
|-CXXMethodDecl 0x558d5b62d418 <line:312:5, col:70> col:57 ip6_header 'const click_ip6 *() const'
| |-NoInlineAttr 0x558d5b62d4b8 <col:20>
| `-OptimizeNoneAttr 0x558d5b62d510 <col:30>
|-CXXMethodDecl 0x558d5b62d560 <line:313:5, col:64> col:44 ip6_header_offset 'int () const'
| |-NoInlineAttr 0x558d5b62d600 <col:20>
| `-OptimizeNoneAttr 0x558d5b62d658 <col:30>
|-CXXMethodDecl 0x558d5b62d6a0 <line:314:5, col:69> col:49 ip6_header_length 'uint32_t () const'
| |-NoInlineAttr 0x558d5b62d740 <col:20>
| `-OptimizeNoneAttr 0x558d5b62d798 <col:30>
|-CXXMethodDecl 0x558d5b62d898 <line:315:5, col:81> col:45 set_ip6_header 'void (const click_ip6 *)'
| |-ParmVarDecl 0x558d5b62d7d0 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-NoInlineAttr 0x558d5b62d940 <col:20>
| `-OptimizeNoneAttr 0x558d5b62d998 <col:30>
|-CXXMethodDecl 0x558d5b62db58 <line:316:5, col:95> col:45 set_ip6_header 'void (const click_ip6 *, uint32_t)'
| |-ParmVarDecl 0x558d5b62d9d0 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-ParmVarDecl 0x558d5b62da48 <col:83, col:92> col:92 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x558d5b62dc08 <col:20>
| `-OptimizeNoneAttr 0x558d5b62dc60 <col:30>
|-CXXMethodDecl 0x558d5b62dd08 <line:318:5, col:44> col:30 used icmp_header 'const click_icmp *() const' inline
|-CXXMethodDecl 0x558d5b62de28 <line:319:5, col:42> col:29 used tcp_header 'const click_tcp *() const' inline
|-CXXMethodDecl 0x558d5b62df48 <line:320:5, col:42> col:29 used udp_header 'const click_udp *() const' inline
|-AccessSpecDecl 0x558d5b62dfe8 <line:333:3, col:10> col:3 private
|-CXXRecordDecl 0x558d5b62e010 <line:335:5, col:11> col:11 referenced union Anno
|-CXXMethodDecl 0x558d5b62e138 <line:340:5, col:60> col:52 used xanno 'const Packet::Anno *() const'
| |-NoInlineAttr 0x558d5b62e1d8 <col:20>
| `-OptimizeNoneAttr 0x558d5b62e230 <col:30>
|-CXXMethodDecl 0x558d5b62e2d8 <line:341:5, col:52> col:46 used xanno 'Packet::Anno *()'
| |-NoInlineAttr 0x558d5b62e378 <col:20>
| `-OptimizeNoneAttr 0x558d5b62e3d0 <col:30>
|-AccessSpecDecl 0x558d5b62e3f8 <line:344:3, col:9> col:3 public
|-EnumDecl 0x558d5b62e420 <line:349:5, line:351:5> line:349:5
| `-EnumConstantDecl 0x558d5b62e520 <line:350:2, col:14> col:2 referenced anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   `-ImplicitCastExpr 0x558d5b62e570 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x558d5b62e500 <col:14> 'int' Int: 48
|       `-IntegerLiteral 0x558d5b62e4e0 <col:14> 'int' 48
|-CXXMethodDecl 0x558d5b62e5d8 <line:354:5, col:74> col:57 used timestamp_anno 'const Timestamp &() const'
| |-NoInlineAttr 0x558d5b62e678 <col:20>
| `-OptimizeNoneAttr 0x558d5b62e6d0 <col:30>
|-CXXMethodDecl 0x558d5b62e748 <line:356:5, col:66> col:51 used timestamp_anno 'Timestamp &()'
| |-NoInlineAttr 0x558d5b62e7e8 <col:20>
| `-OptimizeNoneAttr 0x558d5b62e840 <col:30>
|-CXXMethodDecl 0x558d5b62e908 <line:359:5, col:54> col:17 used set_timestamp_anno 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x558d5b62e878 <col:36, col:53> col:53 t 'const Timestamp &'
|-CXXMethodDecl 0x558d5b62eaa8 <line:362:5, col:38> col:24 used device_anno 'net_device *() const' inline
|-CXXMethodDecl 0x558d5b62ec48 <line:364:5, col:48> col:17 used set_device_anno 'void (net_device *)' inline
| `-ParmVarDecl 0x558d5b62eb58 <col:33, col:45> col:45 dev 'net_device *'
|-EnumDecl 0x558d5b62ecf0 <line:368:5, line:381:5> line:368:10 referenced PacketType
| |-EnumConstantDecl 0x558d5b62edf0 <line:369:2, col:9> col:2 HOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x558d5b62f1a0 <col:9> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558d5b62edd0 <col:9> 'int' Int: 0
| |     `-IntegerLiteral 0x558d5b62edb0 <col:9> 'int' 0
| |-EnumConstantDecl 0x558d5b62ee80 <line:370:2, col:14> col:2 BROADCAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x558d5b62f1b8 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558d5b62ee60 <col:14> 'int' Int: 1
| |     `-IntegerLiteral 0x558d5b62ee40 <col:14> 'int' 1
| |-EnumConstantDecl 0x558d5b62ef10 <line:372:2, col:14> col:2 MULTICAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x558d5b62f1d0 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558d5b62eef0 <col:14> 'int' Int: 2
| |     `-IntegerLiteral 0x558d5b62eed0 <col:14> 'int' 2
| |-EnumConstantDecl 0x558d5b62efa0 <line:374:2, col:14> col:2 OTHERHOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x558d5b62f1e8 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558d5b62ef80 <col:14> 'int' Int: 3
| |     `-IntegerLiteral 0x558d5b62ef60 <col:14> 'int' 3
| |-EnumConstantDecl 0x558d5b62f030 <line:377:2, col:13> col:2 OUTGOING 'Packet::PacketType'
| | `-ImplicitCastExpr 0x558d5b62f200 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558d5b62f010 <col:13> 'int' Int: 4
| |     `-IntegerLiteral 0x558d5b62eff0 <col:13> 'int' 4
| |-EnumConstantDecl 0x558d5b62f0c0 <line:379:2, col:13> col:2 LOOPBACK 'Packet::PacketType'
| | `-ImplicitCastExpr 0x558d5b62f218 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558d5b62f0a0 <col:13> 'int' Int: 5
| |     `-IntegerLiteral 0x558d5b62f080 <col:13> 'int' 5
| `-EnumConstantDecl 0x558d5b62f150 <line:380:2, col:14> col:2 FASTROUTE 'Packet::PacketType'
|   `-ImplicitCastExpr 0x558d5b62f230 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x558d5b62f130 <col:14> 'int' Int: 6
|       `-IntegerLiteral 0x558d5b62f110 <col:14> 'int' 6
|-CXXMethodDecl 0x558d5b62f298 <line:383:5, col:70> col:51 used packet_type_anno 'Packet::PacketType () const'
| |-NoInlineAttr 0x558d5b62f338 <col:20>
| `-OptimizeNoneAttr 0x558d5b62f390 <col:30>
|-CXXMethodDecl 0x558d5b62f488 <line:385:5, col:78> col:45 used set_packet_type_anno 'void (Packet::PacketType)'
| |-ParmVarDecl 0x558d5b62f3c8 <col:66, col:77> col:77 t 'Packet::PacketType'
| |-NoInlineAttr 0x558d5b62f530 <col:20>
| `-OptimizeNoneAttr 0x558d5b62f588 <col:30>
|-CXXMethodDecl 0x558d5b62f5f8 <line:410:5, col:27> col:20 next 'Packet *() const' inline
|-CXXMethodDecl 0x558d5b62f720 <line:412:5, col:26> col:21 next 'Packet *&()' inline
|-CXXMethodDecl 0x558d5b62f898 <line:414:5, col:35> col:17 set_next 'void (Packet *)' inline
| `-ParmVarDecl 0x558d5b62f7d0 <col:26, col:34> col:34 p 'Packet *'
|-CXXMethodDecl 0x558d5b62f960 <line:417:5, col:27> col:20 prev 'Packet *() const' inline
|-CXXMethodDecl 0x558d5b62fa28 <line:419:5, col:26> col:21 prev 'Packet *&()' inline
|-CXXMethodDecl 0x558d5b62fb68 <line:421:5, col:35> col:17 set_prev 'void (Packet *)' inline
| `-ParmVarDecl 0x558d5b62fad8 <col:26, col:34> col:34 p 'Packet *'
|-EnumDecl 0x558d5b62fc10 <line:423:5, line:426:5> line:423:5
| |-EnumConstantDecl 0x558d5b62fd10 <line:424:2, col:23> col:2 referenced dst_ip_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x558d5b62ff10 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558d5b62fcf0 <col:23> 'int' Int: 0
| |     `-IntegerLiteral 0x558d5b62fcd0 <col:23> 'int' 0
| |-EnumConstantDecl 0x558d5b62fda0 <col:26, col:45> col:26 dst_ip_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x558d5b62ff28 <col:45> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558d5b62fd80 <col:45> 'int' Int: 4
| |     `-IntegerLiteral 0x558d5b62fd60 <col:45> 'int' 4
| |-EnumConstantDecl 0x558d5b62fe30 <line:425:2, col:24> col:2 dst_ip6_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x558d5b62ff40 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558d5b62fe10 <col:24> 'int' Int: 0
| |     `-IntegerLiteral 0x558d5b62fdf0 <col:24> 'int' 0
| `-EnumConstantDecl 0x558d5b62fec0 <col:27, col:47> col:27 dst_ip6_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
|   `-ImplicitCastExpr 0x558d5b62ff58 <col:47> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x558d5b62fea0 <col:47> 'int' Int: 16
|       `-IntegerLiteral 0x558d5b62fe80 <col:47> 'int' 16
|-CXXMethodDecl 0x558d5b62ffb8 <line:431:5, col:36> col:22 dst_ip_anno 'IPAddress () const' inline
|-CXXMethodDecl 0x558d5b630128 <line:436:5, col:75> col:45 set_dst_ip_anno 'void (IPAddress)'
| |-ParmVarDecl 0x558d5b630068 <col:61, col:71> col:71 addr 'IPAddress'
| |-NoInlineAttr 0x558d5b6301d0 <col:20>
| `-OptimizeNoneAttr 0x558d5b630228 <col:30>
|-CXXMethodDecl 0x558d5b630278 <line:441:5, col:36> col:11 anno 'void *()'
| `-CompoundStmt 0x558d5b643c00 <col:18, col:36>
|   `-ReturnStmt 0x558d5b643bf0 <col:20, col:33>
|     `-ImplicitCastExpr 0x558d5b643bd8 <col:27, col:33> 'void *' <BitCast>
|       `-CXXMemberCallExpr 0x558d5b643bb8 <col:27, col:33> 'Packet::Anno *'
|         `-MemberExpr 0x558d5b643b88 <col:27> '<bound member function type>' ->xanno 0x558d5b62e2d8
|           `-CXXThisExpr 0x558d5b643b78 <col:27> 'Packet *' implicit this
|-CXXMethodDecl 0x558d5b630370 <line:444:5, col:48> col:17 anno 'const void *() const'
| `-CompoundStmt 0x558d5b643d10 <col:30, col:48>
|   `-ReturnStmt 0x558d5b643d00 <col:32, col:45>
|     `-ImplicitCastExpr 0x558d5b643ce8 <col:39, col:45> 'const void *' <BitCast>
|       `-CXXMemberCallExpr 0x558d5b643cc8 <col:39, col:45> 'const Packet::Anno *'
|         `-MemberExpr 0x558d5b643c98 <col:39> '<bound member function type>' ->xanno 0x558d5b62e138
|           `-CXXThisExpr 0x558d5b643c88 <col:39> 'const Packet *' implicit this
|-CXXMethodDecl 0x558d5b630458 <line:447:5, col:50> col:14 used anno_u8 'uint8_t *()'
| `-CompoundStmt 0x558d5b643ea8 <col:24, col:50>
|   `-ReturnStmt 0x558d5b643e98 <col:26, col:47>
|     `-UnaryOperator 0x558d5b643e80 <col:33, col:47> 'uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x558d5b643e60 <col:34, col:47> 'uint8_t':'unsigned char' lvalue
|         |-ImplicitCastExpr 0x558d5b643e48 <col:34, col:43> 'uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x558d5b643df8 <col:34, col:43> 'uint8_t [48]' lvalue ->u8 0x558d5b639118
|         |   `-CXXMemberCallExpr 0x558d5b643dd8 <col:34, col:40> 'Packet::Anno *'
|         |     `-MemberExpr 0x558d5b643da8 <col:34> '<bound member function type>' ->xanno 0x558d5b62e2d8
|         |       `-CXXThisExpr 0x558d5b643d98 <col:34> 'Packet *' implicit this
|         `-IntegerLiteral 0x558d5b643e28 <col:46> 'int' 0
|-CXXMethodDecl 0x558d5b630560 <line:450:5, col:62> col:20 used anno_u8 'const uint8_t *() const'
| `-CompoundStmt 0x558d5b644078 <col:36, col:62>
|   `-ReturnStmt 0x558d5b644068 <col:38, col:59>
|     `-UnaryOperator 0x558d5b644050 <col:45, col:59> 'const uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x558d5b644030 <col:46, col:59> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x558d5b644018 <col:46, col:55> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x558d5b643f90 <col:46, col:55> 'uint8_t const[48]' lvalue ->u8 0x558d5b639118
|         |   `-CXXMemberCallExpr 0x558d5b643f70 <col:46, col:52> 'const Packet::Anno *'
|         |     `-MemberExpr 0x558d5b643f40 <col:46> '<bound member function type>' ->xanno 0x558d5b62e138
|         |       `-CXXThisExpr 0x558d5b643f30 <col:46> 'const Packet *' implicit this
|         `-IntegerLiteral 0x558d5b643fc0 <col:58> 'int' 0
|-CXXMethodDecl 0x558d5b630678 <line:453:5, col:53> col:15 used anno_u32 'uint32_t *()'
| `-CompoundStmt 0x558d5b644210 <col:26, col:53>
|   `-ReturnStmt 0x558d5b644200 <col:28, col:50>
|     `-UnaryOperator 0x558d5b6441e8 <col:35, col:50> 'uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x558d5b6441c8 <col:36, col:50> 'uint32_t':'unsigned int' lvalue
|         |-ImplicitCastExpr 0x558d5b6441b0 <col:36, col:45> 'uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x558d5b644160 <col:36, col:45> 'uint32_t [12]' lvalue ->u32 0x558d5b639418
|         |   `-CXXMemberCallExpr 0x558d5b644140 <col:36, col:42> 'Packet::Anno *'
|         |     `-MemberExpr 0x558d5b644110 <col:36> '<bound member function type>' ->xanno 0x558d5b62e2d8
|         |       `-CXXThisExpr 0x558d5b644100 <col:36> 'Packet *' implicit this
|         `-IntegerLiteral 0x558d5b644190 <col:49> 'int' 0
|-CXXMethodDecl 0x558d5b630798 <line:456:5, col:65> col:21 used anno_u32 'const uint32_t *() const'
| `-CompoundStmt 0x558d5b6443e8 <col:38, col:65>
|   `-ReturnStmt 0x558d5b6443d8 <col:40, col:62>
|     `-UnaryOperator 0x558d5b6443c0 <col:47, col:62> 'const uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x558d5b6443a0 <col:48, col:62> 'const uint32_t':'const unsigned int' lvalue
|         |-ImplicitCastExpr 0x558d5b644388 <col:48, col:57> 'const uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x558d5b6442f8 <col:48, col:57> 'uint32_t const[12]' lvalue ->u32 0x558d5b639418
|         |   `-CXXMemberCallExpr 0x558d5b6442d8 <col:48, col:54> 'const Packet::Anno *'
|         |     `-MemberExpr 0x558d5b6442a8 <col:48> '<bound member function type>' ->xanno 0x558d5b62e138
|         |       `-CXXThisExpr 0x558d5b644298 <col:48> 'const Packet *' implicit this
|         `-IntegerLiteral 0x558d5b644328 <col:61> 'int' 0
|-CXXMethodDecl 0x558d5b630948 <line:460:5, line:463:5> line:460:13 used anno_u8 'uint8_t (int) const'
| |-ParmVarDecl 0x558d5b630850 <col:21, col:25> col:25 used i 'int'
| `-CompoundStmt 0x558d5b644ab8 <col:34, line:463:5>
|   |-ParenExpr 0x558d5b644900 <line:461:2, col:174> 'void'
|   | `-ConditionalOperator 0x558d5b6448d0 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x558d5b644538 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x558d5b644508 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x558d5b644458 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x558d5b644440 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x558d5b644400 <col:23> 'int' lvalue ParmVar 0x558d5b630850 'i' 'int'
|   |   |   | `-IntegerLiteral 0x558d5b644420 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x558d5b6444e8 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x558d5b6444b8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x558d5b644478 <col:33> 'int' lvalue ParmVar 0x558d5b630850 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x558d5b6444d0 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x558d5b644498 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x558d5b62e520 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x558d5b644598 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x558d5b644578 <col:56> 'int' 0
|   |   `-CallExpr 0x558d5b644830 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x558d5b644818 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x558d5b6447f8 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x558d5b19ae40 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x558d5b644870 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558d5b644688 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x558d5b644888 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558d5b6446b8 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x558d5b6448a0 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x558d5b6446f0 <col:135> 'int' 461
|   |     `-ImplicitCastExpr 0x558d5b6448b8 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x558d5b6447e0 <col:140, col:154> 'const char [35]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x558d5b6447c8 <col:154> 'const char [35]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x558d5b644788 <col:154> 'const char [35]' lvalue "uint8_t Packet::anno_u8(int) const"
|   `-ReturnStmt 0x558d5b644aa8 <line:462:2, col:22>
|     `-ImplicitCastExpr 0x558d5b644a90 <col:9, col:22> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-ArraySubscriptExpr 0x558d5b644a70 <col:9, col:22> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x558d5b644a40 <col:9, col:18> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x558d5b6449f0 <col:9, col:18> 'uint8_t const[48]' lvalue ->u8 0x558d5b639118
|         |   `-CXXMemberCallExpr 0x558d5b6449d0 <col:9, col:15> 'const Packet::Anno *'
|         |     `-MemberExpr 0x558d5b6449a0 <col:9> '<bound member function type>' ->xanno 0x558d5b62e138
|         |       `-CXXThisExpr 0x558d5b644990 <col:9> 'const Packet *' implicit this
|         `-ImplicitCastExpr 0x558d5b644a58 <col:21> 'int' <LValueToRValue>
|           `-DeclRefExpr 0x558d5b644a20 <col:21> 'int' lvalue ParmVar 0x558d5b630850 'i' 'int'
|-CXXMethodDecl 0x558d5b630b98 <line:469:5, line:472:5> line:469:10 used set_anno_u8 'void (int, uint8_t)'
| |-ParmVarDecl 0x558d5b630a08 <col:22, col:26> col:26 used i 'int'
| |-ParmVarDecl 0x558d5b630a80 <col:29, col:37> col:37 used x 'uint8_t':'unsigned char'
| `-CompoundStmt 0x558d5b645148 <col:40, line:472:5>
|   |-ParenExpr 0x558d5b644f60 <line:470:2, col:174> 'void'
|   | `-ConditionalOperator 0x558d5b644f30 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x558d5b644c10 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x558d5b644be0 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x558d5b644b30 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x558d5b644b18 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x558d5b644ad8 <col:23> 'int' lvalue ParmVar 0x558d5b630a08 'i' 'int'
|   |   |   | `-IntegerLiteral 0x558d5b644af8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x558d5b644bc0 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x558d5b644b90 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x558d5b644b50 <col:33> 'int' lvalue ParmVar 0x558d5b630a08 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x558d5b644ba8 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x558d5b644b70 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x558d5b62e520 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x558d5b644c70 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x558d5b644c50 <col:56> 'int' 0
|   |   `-CallExpr 0x558d5b644e90 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x558d5b644e78 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x558d5b644e58 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x558d5b19ae40 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x558d5b644ed0 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558d5b644ce0 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x558d5b644ee8 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558d5b644d10 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x558d5b644f00 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x558d5b644d48 <col:135> 'int' 470
|   |     `-ImplicitCastExpr 0x558d5b644f18 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x558d5b644e40 <col:140, col:154> 'const char [39]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x558d5b644e28 <col:154> 'const char [39]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x558d5b644de8 <col:154> 'const char [39]' lvalue "void Packet::set_anno_u8(int, uint8_t)"
|   `-BinaryOperator 0x558d5b645128 <line:471:2, col:19> 'uint8_t':'unsigned char' lvalue '='
|     |-ArraySubscriptExpr 0x558d5b6450d0 <col:2, col:15> 'uint8_t':'unsigned char' lvalue
|     | |-ImplicitCastExpr 0x558d5b6450a0 <col:2, col:11> 'uint8_t *' <ArrayToPointerDecay>
|     | | `-MemberExpr 0x558d5b645050 <col:2, col:11> 'uint8_t [48]' lvalue ->u8 0x558d5b639118
|     | |   `-CXXMemberCallExpr 0x558d5b645030 <col:2, col:8> 'Packet::Anno *'
|     | |     `-MemberExpr 0x558d5b645000 <col:2> '<bound member function type>' ->xanno 0x558d5b62e2d8
|     | |       `-CXXThisExpr 0x558d5b644ff0 <col:2> 'Packet *' implicit this
|     | `-ImplicitCastExpr 0x558d5b6450b8 <col:14> 'int' <LValueToRValue>
|     |   `-DeclRefExpr 0x558d5b645080 <col:14> 'int' lvalue ParmVar 0x558d5b630a08 'i' 'int'
|     `-ImplicitCastExpr 0x558d5b645110 <col:19> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-DeclRefExpr 0x558d5b6450f0 <col:19> 'uint8_t':'unsigned char' lvalue ParmVar 0x558d5b630a80 'x' 'uint8_t':'unsigned char'
|-CXXMethodDecl 0x558d5b630d58 <line:479:5, line:485:5> line:479:14 used anno_u16 'uint16_t (int) const'
| |-ParmVarDecl 0x558d5b630c60 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x558d5b6458c8 <col:36, line:485:5>
|   |-ParenExpr 0x558d5b645630 <line:480:2, col:182> 'void'
|   | `-ConditionalOperator 0x558d5b645600 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x558d5b6452e0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x558d5b6452b0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x558d5b6451c0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x558d5b6451a8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x558d5b645168 <col:23> 'int' lvalue ParmVar 0x558d5b630c60 'i' 'int'
|   |   |   | `-IntegerLiteral 0x558d5b645188 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x558d5b645290 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x558d5b645278 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x558d5b6451e0 <col:33> 'int' lvalue ParmVar 0x558d5b630c60 'i' 'int'
|   |   |     `-BinaryOperator 0x558d5b645258 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x558d5b645240 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x558d5b645200 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x558d5b62e520 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x558d5b645220 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x558d5b645340 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x558d5b645320 <col:60> 'int' 0
|   |   `-CallExpr 0x558d5b645560 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x558d5b645548 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x558d5b645528 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x558d5b19ae40 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x558d5b6455a0 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558d5b6453b0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x558d5b6455b8 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558d5b6453e8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x558d5b6455d0 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x558d5b645420 <col:143> 'int' 480
|   |     `-ImplicitCastExpr 0x558d5b6455e8 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x558d5b645510 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x558d5b6454f8 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x558d5b6454b8 <col:162> 'const char [37]' lvalue "uint16_t Packet::anno_u16(int) const"
|   `-ReturnStmt 0x558d5b6458b8 <line:484:2, col:75>
|     `-ImplicitCastExpr 0x558d5b6458a0 <col:9, col:75> 'click_aliasable_uint16_t':'unsigned short' <LValueToRValue>
|       `-UnaryOperator 0x558d5b645888 <col:9, col:75> 'const click_aliasable_uint16_t':'const unsigned short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x558d5b645858 <col:10, col:75> 'const click_aliasable_uint16_t *' reinterpret_cast<const click_aliasable_uint16_t *> <BitCast>
|           `-BinaryOperator 0x558d5b6457f8 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x558d5b6457c8 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x558d5b645740 <col:61, col:70> 'char const[48]' lvalue ->c 0x558d5b638ff0
|             |   `-CXXMemberCallExpr 0x558d5b645720 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x558d5b6456f0 <col:61> '<bound member function type>' ->xanno 0x558d5b62e138
|             |       `-CXXThisExpr 0x558d5b6456e0 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x558d5b6457e0 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x558d5b645770 <col:74> 'int' lvalue ParmVar 0x558d5b630c60 'i' 'int'
|-CXXMethodDecl 0x558d5b630fa8 <line:494:5, line:500:5> line:494:10 used set_anno_u16 'void (int, uint16_t)'
| |-ParmVarDecl 0x558d5b630e18 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x558d5b630e90 <col:30, col:39> col:39 used x 'uint16_t':'unsigned short'
| `-CompoundStmt 0x558d5b646018 <col:42, line:500:5>
|   |-ParenExpr 0x558d5b645db0 <line:495:2, col:182> 'void'
|   | `-ConditionalOperator 0x558d5b645d80 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x558d5b645a60 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x558d5b645a30 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x558d5b645940 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x558d5b645928 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x558d5b6458e8 <col:23> 'int' lvalue ParmVar 0x558d5b630e18 'i' 'int'
|   |   |   | `-IntegerLiteral 0x558d5b645908 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x558d5b645a10 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x558d5b6459f8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x558d5b645960 <col:33> 'int' lvalue ParmVar 0x558d5b630e18 'i' 'int'
|   |   |     `-BinaryOperator 0x558d5b6459d8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x558d5b6459c0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x558d5b645980 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x558d5b62e520 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x558d5b6459a0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x558d5b645ac0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x558d5b645aa0 <col:60> 'int' 0
|   |   `-CallExpr 0x558d5b645ce0 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x558d5b645cc8 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x558d5b645ca8 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x558d5b19ae40 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x558d5b645d20 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558d5b645b30 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x558d5b645d38 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558d5b645b68 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x558d5b645d50 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x558d5b645ba0 <col:143> 'int' 495
|   |     `-ImplicitCastExpr 0x558d5b645d68 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x558d5b645c90 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x558d5b645c78 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x558d5b645c38 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u16(int, uint16_t)"
|   `-BinaryOperator 0x558d5b645ff8 <line:499:2, col:66> 'click_aliasable_uint16_t':'unsigned short' lvalue '='
|     |-UnaryOperator 0x558d5b645fa8 <col:2, col:62> 'click_aliasable_uint16_t':'unsigned short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x558d5b645f78 <col:3, col:62> 'click_aliasable_uint16_t *' reinterpret_cast<click_aliasable_uint16_t *> <BitCast>
|     |   `-BinaryOperator 0x558d5b645f20 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x558d5b645ef0 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x558d5b645ea0 <col:48, col:57> 'char [48]' lvalue ->c 0x558d5b638ff0
|     |     |   `-CXXMemberCallExpr 0x558d5b645e80 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x558d5b645e50 <col:48> '<bound member function type>' ->xanno 0x558d5b62e2d8
|     |     |       `-CXXThisExpr 0x558d5b645e40 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x558d5b645f08 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x558d5b645ed0 <col:61> 'int' lvalue ParmVar 0x558d5b630e18 'i' 'int'
|     `-ImplicitCastExpr 0x558d5b645fe0 <col:66> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x558d5b645fc0 <col:66> 'uint16_t':'unsigned short' lvalue ParmVar 0x558d5b630e90 'x' 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x558d5b631168 <line:507:5, line:513:5> line:507:13 anno_s16 'int16_t (int) const'
| |-ParmVarDecl 0x558d5b631070 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x558d5b646778 <col:35, line:513:5>
|   |-ParenExpr 0x558d5b646488 <line:508:2, col:182> 'void'
|   | `-ConditionalOperator 0x558d5b646458 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x558d5b6461b0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x558d5b646180 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x558d5b646090 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x558d5b646078 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x558d5b646038 <col:23> 'int' lvalue ParmVar 0x558d5b631070 'i' 'int'
|   |   |   | `-IntegerLiteral 0x558d5b646058 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x558d5b646160 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x558d5b646148 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x558d5b6460b0 <col:33> 'int' lvalue ParmVar 0x558d5b631070 'i' 'int'
|   |   |     `-BinaryOperator 0x558d5b646128 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x558d5b646110 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x558d5b6460d0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x558d5b62e520 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x558d5b6460f0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x558d5b646210 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x558d5b6461f0 <col:60> 'int' 0
|   |   `-CallExpr 0x558d5b6463b8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x558d5b6463a0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x558d5b646380 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x558d5b19ae40 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x558d5b6463f8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558d5b646280 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x558d5b646410 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558d5b6462b8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x558d5b646428 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x558d5b6462f0 <col:143> 'int' 508
|   |     `-ImplicitCastExpr 0x558d5b646440 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x558d5b646368 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x558d5b646350 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x558d5b646310 <col:162> 'const char [36]' lvalue "int16_t Packet::anno_s16(int) const"
|   `-ReturnStmt 0x558d5b646768 <line:512:2, col:74>
|     `-ImplicitCastExpr 0x558d5b646750 <col:9, col:74> 'click_aliasable_int16_t':'short' <LValueToRValue>
|       `-UnaryOperator 0x558d5b646738 <col:9, col:74> 'const click_aliasable_int16_t':'const short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x558d5b646708 <col:10, col:74> 'const click_aliasable_int16_t *' reinterpret_cast<const click_aliasable_int16_t *> <BitCast>
|           `-BinaryOperator 0x558d5b646680 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x558d5b646650 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x558d5b646600 <col:60, col:69> 'char const[48]' lvalue ->c 0x558d5b638ff0
|             |   `-CXXMemberCallExpr 0x558d5b6465e0 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x558d5b6465b0 <col:60> '<bound member function type>' ->xanno 0x558d5b62e138
|             |       `-CXXThisExpr 0x558d5b6465a0 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x558d5b646668 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x558d5b646630 <col:73> 'int' lvalue ParmVar 0x558d5b631070 'i' 'int'
|-CXXMethodDecl 0x558d5b6313b8 <line:522:5, line:528:5> line:522:10 set_anno_s16 'void (int, int16_t)'
| |-ParmVarDecl 0x558d5b631228 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x558d5b6312a0 <col:30, col:38> col:38 used x 'int16_t':'short'
| `-CompoundStmt 0x558d5b646e98 <col:41, line:528:5>
|   |-ParenExpr 0x558d5b646c20 <line:523:2, col:182> 'void'
|   | `-ConditionalOperator 0x558d5b646bf0 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x558d5b646910 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x558d5b6468e0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x558d5b6467f0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x558d5b6467d8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x558d5b646798 <col:23> 'int' lvalue ParmVar 0x558d5b631228 'i' 'int'
|   |   |   | `-IntegerLiteral 0x558d5b6467b8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x558d5b6468c0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x558d5b6468a8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x558d5b646810 <col:33> 'int' lvalue ParmVar 0x558d5b631228 'i' 'int'
|   |   |     `-BinaryOperator 0x558d5b646888 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x558d5b646870 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x558d5b646830 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x558d5b62e520 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x558d5b646850 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x558d5b646970 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x558d5b646950 <col:60> 'int' 0
|   |   `-CallExpr 0x558d5b646b50 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x558d5b646b38 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x558d5b646b18 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x558d5b19ae40 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x558d5b646b90 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558d5b6469e0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x558d5b646ba8 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558d5b646a18 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x558d5b646bc0 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x558d5b646a50 <col:143> 'int' 523
|   |     `-ImplicitCastExpr 0x558d5b646bd8 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x558d5b646b00 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x558d5b646ae8 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x558d5b646aa8 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s16(int, int16_t)"
|   `-BinaryOperator 0x558d5b646e78 <line:527:2, col:65> 'click_aliasable_int16_t':'short' lvalue '='
|     |-UnaryOperator 0x558d5b646e28 <col:2, col:61> 'click_aliasable_int16_t':'short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x558d5b646df8 <col:3, col:61> 'click_aliasable_int16_t *' reinterpret_cast<click_aliasable_int16_t *> <BitCast>
|     |   `-BinaryOperator 0x558d5b646da0 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x558d5b646d60 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x558d5b646d10 <col:47, col:56> 'char [48]' lvalue ->c 0x558d5b638ff0
|     |     |   `-CXXMemberCallExpr 0x558d5b646cf0 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x558d5b646cc0 <col:47> '<bound member function type>' ->xanno 0x558d5b62e2d8
|     |     |       `-CXXThisExpr 0x558d5b646cb0 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x558d5b646d78 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x558d5b646d40 <col:60> 'int' lvalue ParmVar 0x558d5b631228 'i' 'int'
|     `-ImplicitCastExpr 0x558d5b646e60 <col:65> 'int16_t':'short' <LValueToRValue>
|       `-DeclRefExpr 0x558d5b646e40 <col:65> 'int16_t':'short' lvalue ParmVar 0x558d5b6312a0 'x' 'int16_t':'short'
|-CXXMethodDecl 0x558d5b631578 <line:535:5, line:541:5> line:535:14 used anno_u32 'uint32_t (int) const'
| |-ParmVarDecl 0x558d5b631480 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x558d5b647568 <col:36, line:541:5>
|   |-ParenExpr 0x558d5b647308 <line:536:2, col:182> 'void'
|   | `-ConditionalOperator 0x558d5b6472d8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x558d5b647030 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x558d5b647000 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x558d5b646f10 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x558d5b646ef8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x558d5b646eb8 <col:23> 'int' lvalue ParmVar 0x558d5b631480 'i' 'int'
|   |   |   | `-IntegerLiteral 0x558d5b646ed8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x558d5b646fe0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x558d5b646fc8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x558d5b646f30 <col:33> 'int' lvalue ParmVar 0x558d5b631480 'i' 'int'
|   |   |     `-BinaryOperator 0x558d5b646fa8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x558d5b646f90 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x558d5b646f50 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x558d5b62e520 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x558d5b646f70 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x558d5b647090 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x558d5b647070 <col:60> 'int' 0
|   |   `-CallExpr 0x558d5b647238 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x558d5b647220 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x558d5b647200 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x558d5b19ae40 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x558d5b647278 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558d5b647100 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x558d5b647290 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558d5b647138 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x558d5b6472a8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x558d5b647170 <col:143> 'int' 536
|   |     `-ImplicitCastExpr 0x558d5b6472c0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x558d5b6471e8 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x558d5b6471d0 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x558d5b647190 <col:162> 'const char [37]' lvalue "uint32_t Packet::anno_u32(int) const"
|   `-ReturnStmt 0x558d5b647558 <line:540:2, col:75>
|     `-ImplicitCastExpr 0x558d5b647540 <col:9, col:75> 'click_aliasable_uint32_t':'unsigned int' <LValueToRValue>
|       `-UnaryOperator 0x558d5b647528 <col:9, col:75> 'const click_aliasable_uint32_t':'const unsigned int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x558d5b6474f8 <col:10, col:75> 'const click_aliasable_uint32_t *' reinterpret_cast<const click_aliasable_uint32_t *> <BitCast>
|           `-BinaryOperator 0x558d5b6474a0 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x558d5b647470 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x558d5b647420 <col:61, col:70> 'char const[48]' lvalue ->c 0x558d5b638ff0
|             |   `-CXXMemberCallExpr 0x558d5b647400 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x558d5b6473d0 <col:61> '<bound member function type>' ->xanno 0x558d5b62e138
|             |       `-CXXThisExpr 0x558d5b6473c0 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x558d5b647488 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x558d5b647450 <col:74> 'int' lvalue ParmVar 0x558d5b631480 'i' 'int'
|-CXXMethodDecl 0x558d5b631748 <line:550:5, col:75> col:45 used set_anno_u32 'void (int, uint32_t)'
| |-ParmVarDecl 0x558d5b631638 <col:58, col:62> col:62 i 'int'
| |-ParmVarDecl 0x558d5b6316b0 <col:65, col:74> col:74 x 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x558d5b6317f8 <col:20>
| `-OptimizeNoneAttr 0x558d5b631850 <col:30>
|-CXXMethodDecl 0x558d5b631988 <line:556:5, line:562:5> line:556:13 used anno_s32 'int32_t (int) const'
| |-ParmVarDecl 0x558d5b631890 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x558d5b647c38 <col:35, line:562:5>
|   |-ParenExpr 0x558d5b6479d8 <line:557:2, col:182> 'void'
|   | `-ConditionalOperator 0x558d5b6479a8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x558d5b647700 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x558d5b6476d0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x558d5b6475e0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x558d5b6475c8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x558d5b647588 <col:23> 'int' lvalue ParmVar 0x558d5b631890 'i' 'int'
|   |   |   | `-IntegerLiteral 0x558d5b6475a8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x558d5b6476b0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x558d5b647698 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x558d5b647600 <col:33> 'int' lvalue ParmVar 0x558d5b631890 'i' 'int'
|   |   |     `-BinaryOperator 0x558d5b647678 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x558d5b647660 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x558d5b647620 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x558d5b62e520 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x558d5b647640 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x558d5b647760 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x558d5b647740 <col:60> 'int' 0
|   |   `-CallExpr 0x558d5b647908 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x558d5b6478f0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x558d5b6478d0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x558d5b19ae40 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x558d5b647948 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558d5b6477d0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x558d5b647960 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558d5b647808 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x558d5b647978 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x558d5b647840 <col:143> 'int' 557
|   |     `-ImplicitCastExpr 0x558d5b647990 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x558d5b6478b8 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x558d5b6478a0 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x558d5b647860 <col:162> 'const char [36]' lvalue "int32_t Packet::anno_s32(int) const"
|   `-ReturnStmt 0x558d5b647c28 <line:561:2, col:74>
|     `-ImplicitCastExpr 0x558d5b647c10 <col:9, col:74> 'click_aliasable_int32_t':'int' <LValueToRValue>
|       `-UnaryOperator 0x558d5b647bf8 <col:9, col:74> 'const click_aliasable_int32_t':'const int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x558d5b647bc8 <col:10, col:74> 'const click_aliasable_int32_t *' reinterpret_cast<const click_aliasable_int32_t *> <BitCast>
|           `-BinaryOperator 0x558d5b647b70 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x558d5b647b40 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x558d5b647af0 <col:60, col:69> 'char const[48]' lvalue ->c 0x558d5b638ff0
|             |   `-CXXMemberCallExpr 0x558d5b647ad0 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x558d5b647aa0 <col:60> '<bound member function type>' ->xanno 0x558d5b62e138
|             |       `-CXXThisExpr 0x558d5b647a90 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x558d5b647b58 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x558d5b647b20 <col:73> 'int' lvalue ParmVar 0x558d5b631890 'i' 'int'
|-CXXMethodDecl 0x558d5b631b98 <line:571:5, line:577:5> line:571:10 used set_anno_s32 'void (int, int32_t)'
| |-ParmVarDecl 0x558d5b631a48 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x558d5b631ac0 <col:30, col:38> col:38 used x 'int32_t':'int'
| `-CompoundStmt 0x558d5b648318 <col:41, line:577:5>
|   |-ParenExpr 0x558d5b6480a8 <line:572:2, col:182> 'void'
|   | `-ConditionalOperator 0x558d5b648078 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x558d5b647dd0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x558d5b647da0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x558d5b647cb0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x558d5b647c98 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x558d5b647c58 <col:23> 'int' lvalue ParmVar 0x558d5b631a48 'i' 'int'
|   |   |   | `-IntegerLiteral 0x558d5b647c78 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x558d5b647d80 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x558d5b647d68 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x558d5b647cd0 <col:33> 'int' lvalue ParmVar 0x558d5b631a48 'i' 'int'
|   |   |     `-BinaryOperator 0x558d5b647d48 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x558d5b647d30 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x558d5b647cf0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x558d5b62e520 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x558d5b647d10 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x558d5b647e30 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x558d5b647e10 <col:60> 'int' 0
|   |   `-CallExpr 0x558d5b647fd8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x558d5b647fc0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x558d5b647fa0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x558d5b19ae40 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x558d5b648018 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558d5b647ea0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x558d5b648030 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558d5b647ed8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x558d5b648048 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x558d5b647f10 <col:143> 'int' 572
|   |     `-ImplicitCastExpr 0x558d5b648060 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x558d5b647f88 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x558d5b647f70 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x558d5b647f30 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s32(int, int32_t)"
|   `-BinaryOperator 0x558d5b6482f8 <line:576:2, col:65> 'click_aliasable_int32_t':'int' lvalue '='
|     |-UnaryOperator 0x558d5b6482a8 <col:2, col:61> 'click_aliasable_int32_t':'int' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x558d5b648278 <col:3, col:61> 'click_aliasable_int32_t *' reinterpret_cast<click_aliasable_int32_t *> <BitCast>
|     |   `-BinaryOperator 0x558d5b648218 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x558d5b6481e8 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x558d5b648198 <col:47, col:56> 'char [48]' lvalue ->c 0x558d5b638ff0
|     |     |   `-CXXMemberCallExpr 0x558d5b648178 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x558d5b648148 <col:47> '<bound member function type>' ->xanno 0x558d5b62e2d8
|     |     |       `-CXXThisExpr 0x558d5b648138 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x558d5b648200 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x558d5b6481c8 <col:60> 'int' lvalue ParmVar 0x558d5b631a48 'i' 'int'
|     `-ImplicitCastExpr 0x558d5b6482e0 <col:65> 'int32_t':'int' <LValueToRValue>
|       `-DeclRefExpr 0x558d5b6482c0 <col:65> 'int32_t':'int' lvalue ParmVar 0x558d5b631ac0 'x' 'int32_t':'int'
|-CXXMethodDecl 0x558d5b631d58 <line:585:5, line:591:5> line:585:14 used anno_u64 'uint64_t (int) const'
| |-ParmVarDecl 0x558d5b631c60 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x558d5b648a48 <col:36, line:591:5>
|   |-ParenExpr 0x558d5b648788 <line:586:2, col:182> 'void'
|   | `-ConditionalOperator 0x558d5b648758 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x558d5b6484b0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x558d5b648480 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x558d5b648390 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x558d5b648378 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x558d5b648338 <col:23> 'int' lvalue ParmVar 0x558d5b631c60 'i' 'int'
|   |   |   | `-IntegerLiteral 0x558d5b648358 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x558d5b648460 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x558d5b648448 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x558d5b6483b0 <col:33> 'int' lvalue ParmVar 0x558d5b631c60 'i' 'int'
|   |   |     `-BinaryOperator 0x558d5b648428 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x558d5b648410 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x558d5b6483d0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x558d5b62e520 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x558d5b6483f0 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x558d5b648510 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x558d5b6484f0 <col:60> 'int' 0
|   |   `-CallExpr 0x558d5b6486b8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x558d5b6486a0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x558d5b648680 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x558d5b19ae40 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x558d5b6486f8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558d5b648580 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x558d5b648710 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558d5b6485b8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x558d5b648728 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x558d5b6485f0 <col:143> 'int' 586
|   |     `-ImplicitCastExpr 0x558d5b648740 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x558d5b648668 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x558d5b648650 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x558d5b648610 <col:162> 'const char [37]' lvalue "uint64_t Packet::anno_u64(int) const"
|   `-ReturnStmt 0x558d5b648a38 <line:590:2, col:75>
|     `-ImplicitCastExpr 0x558d5b648a20 <col:9, col:75> 'click_aliasable_uint64_t':'unsigned long' <LValueToRValue>
|       `-UnaryOperator 0x558d5b648a08 <col:9, col:75> 'const click_aliasable_uint64_t':'const unsigned long' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x558d5b6489d8 <col:10, col:75> 'const click_aliasable_uint64_t *' reinterpret_cast<const click_aliasable_uint64_t *> <BitCast>
|           `-BinaryOperator 0x558d5b648950 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x558d5b648920 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x558d5b6488d0 <col:61, col:70> 'char const[48]' lvalue ->c 0x558d5b638ff0
|             |   `-CXXMemberCallExpr 0x558d5b6488b0 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x558d5b648880 <col:61> '<bound member function type>' ->xanno 0x558d5b62e138
|             |       `-CXXThisExpr 0x558d5b648870 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x558d5b648938 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x558d5b648900 <col:74> 'int' lvalue ParmVar 0x558d5b631c60 'i' 'int'
|-CXXMethodDecl 0x558d5b631fa8 <line:600:5, line:606:5> line:600:10 used set_anno_u64 'void (int, uint64_t)'
| |-ParmVarDecl 0x558d5b631e18 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x558d5b631e90 <col:30, col:39> col:39 used x 'uint64_t':'unsigned long'
| `-CompoundStmt 0x558d5b649128 <col:42, line:606:5>
|   |-ParenExpr 0x558d5b648eb8 <line:601:2, col:182> 'void'
|   | `-ConditionalOperator 0x558d5b648e88 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x558d5b648be0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x558d5b648bb0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x558d5b648ac0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x558d5b648aa8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x558d5b648a68 <col:23> 'int' lvalue ParmVar 0x558d5b631e18 'i' 'int'
|   |   |   | `-IntegerLiteral 0x558d5b648a88 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x558d5b648b90 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x558d5b648b78 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x558d5b648ae0 <col:33> 'int' lvalue ParmVar 0x558d5b631e18 'i' 'int'
|   |   |     `-BinaryOperator 0x558d5b648b58 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x558d5b648b40 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x558d5b648b00 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x558d5b62e520 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x558d5b648b20 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x558d5b648c40 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x558d5b648c20 <col:60> 'int' 0
|   |   `-CallExpr 0x558d5b648de8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x558d5b648dd0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x558d5b648db0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x558d5b19ae40 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x558d5b648e28 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558d5b648cb0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x558d5b648e40 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558d5b648ce8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x558d5b648e58 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x558d5b648d20 <col:143> 'int' 601
|   |     `-ImplicitCastExpr 0x558d5b648e70 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x558d5b648d98 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x558d5b648d80 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x558d5b648d40 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u64(int, uint64_t)"
|   `-BinaryOperator 0x558d5b649108 <line:605:2, col:66> 'click_aliasable_uint64_t':'unsigned long' lvalue '='
|     |-UnaryOperator 0x558d5b6490b8 <col:2, col:62> 'click_aliasable_uint64_t':'unsigned long' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x558d5b649088 <col:3, col:62> 'click_aliasable_uint64_t *' reinterpret_cast<click_aliasable_uint64_t *> <BitCast>
|     |   `-BinaryOperator 0x558d5b649028 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x558d5b648ff8 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x558d5b648fa8 <col:48, col:57> 'char [48]' lvalue ->c 0x558d5b638ff0
|     |     |   `-CXXMemberCallExpr 0x558d5b648f88 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x558d5b648f58 <col:48> '<bound member function type>' ->xanno 0x558d5b62e2d8
|     |     |       `-CXXThisExpr 0x558d5b648f48 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x558d5b649010 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x558d5b648fd8 <col:61> 'int' lvalue ParmVar 0x558d5b631e18 'i' 'int'
|     `-ImplicitCastExpr 0x558d5b6490f0 <col:66> 'uint64_t':'unsigned long' <LValueToRValue>
|       `-DeclRefExpr 0x558d5b6490d0 <col:66> 'uint64_t':'unsigned long' lvalue ParmVar 0x558d5b631e90 'x' 'uint64_t':'unsigned long'
|-CXXMethodDecl 0x558d5b632140 <line:614:5, line:620:5> line:614:11 anno_ptr 'void *(int) const'
| |-ParmVarDecl 0x558d5b632070 <col:20, col:24> col:24 used i 'int'
| `-CompoundStmt 0x558d5b649998 <col:33, line:620:5>
|   |-ParenExpr 0x558d5b649710 <line:615:2, col:220> 'void'
|   | `-ConditionalOperator 0x558d5b6496e0 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x558d5b649330 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x558d5b649300 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x558d5b6491a0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x558d5b649188 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x558d5b649148 <col:23> 'int' lvalue ParmVar 0x558d5b632070 'i' 'int'
|   |   |   | `-IntegerLiteral 0x558d5b649168 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x558d5b6492e0 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x558d5b6492c8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x558d5b6491c0 <col:33> 'int' lvalue ParmVar 0x558d5b632070 'i' 'int'
|   |   |     `-BinaryOperator 0x558d5b6492a8 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x558d5b649290 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x558d5b6491e0 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x558d5b62e520 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x558d5b649268 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x558d5b649250 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x558d5b649218 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x558d5b649390 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x558d5b649370 <col:79> 'int' 0
|   |   `-CallExpr 0x558d5b649640 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x558d5b649628 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x558d5b649608 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x558d5b19ae40 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x558d5b649680 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558d5b649478 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x558d5b649698 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558d5b6494c0 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x558d5b6496b0 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x558d5b6494f8 <col:181> 'int' 615
|   |     `-ImplicitCastExpr 0x558d5b6496c8 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x558d5b6495f0 <col:186, col:200> 'const char [34]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x558d5b6495d8 <col:200> 'const char [34]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x558d5b649598 <col:200> 'const char [34]' lvalue "void *Packet::anno_ptr(int) const"
|   `-ReturnStmt 0x558d5b649988 <line:619:2, col:81>
|     `-ImplicitCastExpr 0x558d5b649970 <col:9, col:81> 'click_aliasable_void_pointer_t':'void *' <LValueToRValue>
|       `-UnaryOperator 0x558d5b649958 <col:9, col:81> 'const click_aliasable_void_pointer_t':'void *const' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x558d5b649928 <col:10, col:81> 'const click_aliasable_void_pointer_t *' reinterpret_cast<const click_aliasable_void_pointer_t *> <BitCast>
|           `-BinaryOperator 0x558d5b6498a0 <col:67, col:80> 'const char *' '+'
|             |-ImplicitCastExpr 0x558d5b649870 <col:67, col:76> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x558d5b649820 <col:67, col:76> 'char const[48]' lvalue ->c 0x558d5b638ff0
|             |   `-CXXMemberCallExpr 0x558d5b649800 <col:67, col:73> 'const Packet::Anno *'
|             |     `-MemberExpr 0x558d5b6497d0 <col:67> '<bound member function type>' ->xanno 0x558d5b62e138
|             |       `-CXXThisExpr 0x558d5b6497c0 <col:67> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x558d5b649888 <col:80> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x558d5b649850 <col:80> 'int' lvalue ParmVar 0x558d5b632070 'i' 'int'
|-CXXMethodDecl 0x558d5b632358 <line:629:5, line:635:5> line:629:10 set_anno_ptr 'void (int, const void *)'
| |-ParmVarDecl 0x558d5b632200 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x558d5b632280 <col:30, col:42> col:42 used x 'const void *'
| `-CompoundStmt 0x558d5b64a1c0 <col:45, line:635:5>
|   |-ParenExpr 0x558d5b649f08 <line:630:2, col:220> 'void'
|   | `-ConditionalOperator 0x558d5b649ed8 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x558d5b649ba0 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x558d5b649b70 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x558d5b649a10 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x558d5b6499f8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x558d5b6499b8 <col:23> 'int' lvalue ParmVar 0x558d5b632200 'i' 'int'
|   |   |   | `-IntegerLiteral 0x558d5b6499d8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x558d5b649b50 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x558d5b649b38 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x558d5b649a30 <col:33> 'int' lvalue ParmVar 0x558d5b632200 'i' 'int'
|   |   |     `-BinaryOperator 0x558d5b649b18 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x558d5b649b00 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x558d5b649a50 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x558d5b62e520 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x558d5b649ad8 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x558d5b649ac0 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x558d5b649a88 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x558d5b649c00 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x558d5b649be0 <col:79> 'int' 0
|   |   `-CallExpr 0x558d5b649e38 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x558d5b649e20 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x558d5b649e00 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x558d5b19ae40 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x558d5b649e78 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558d5b649c70 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x558d5b649e90 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558d5b649cb8 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x558d5b649ea8 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x558d5b649cf0 <col:181> 'int' 630
|   |     `-ImplicitCastExpr 0x558d5b649ec0 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x558d5b649de8 <col:186, col:200> 'const char [45]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x558d5b649dd0 <col:200> 'const char [45]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x558d5b649d88 <col:200> 'const char [45]' lvalue "void Packet::set_anno_ptr(int, const void *)"
|   `-BinaryOperator 0x558d5b64a1a0 <line:634:2, col:92> 'click_aliasable_void_pointer_t':'void *' lvalue '='
|     |-UnaryOperator 0x558d5b64a108 <col:2, col:68> 'click_aliasable_void_pointer_t':'void *' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x558d5b64a0d8 <col:3, col:68> 'click_aliasable_void_pointer_t *' reinterpret_cast<click_aliasable_void_pointer_t *> <BitCast>
|     |   `-BinaryOperator 0x558d5b64a078 <col:54, col:67> 'char *' '+'
|     |     |-ImplicitCastExpr 0x558d5b64a048 <col:54, col:63> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x558d5b649ff8 <col:54, col:63> 'char [48]' lvalue ->c 0x558d5b638ff0
|     |     |   `-CXXMemberCallExpr 0x558d5b649fd8 <col:54, col:60> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x558d5b649fa8 <col:54> '<bound member function type>' ->xanno 0x558d5b62e2d8
|     |     |       `-CXXThisExpr 0x558d5b649f98 <col:54> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x558d5b64a060 <col:67> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x558d5b64a028 <col:67> 'int' lvalue ParmVar 0x558d5b632200 'i' 'int'
|     `-CXXConstCastExpr 0x558d5b64a170 <col:72, col:92> 'void *' const_cast<void *> <NoOp>
|       `-ImplicitCastExpr 0x558d5b64a158 <col:91> 'const void *' <LValueToRValue> part_of_explicit_cast
|         `-DeclRefExpr 0x558d5b64a120 <col:91> 'const void *' lvalue ParmVar 0x558d5b632280 'x' 'const void *'
|-CXXMethodDecl 0x558d5b632428 <line:638:5, line:640:5> line:638:20 data_packet 'Packet *()' inline
| `-CompoundStmt 0x558d5b64a248 <col:34, line:640:5>
|   `-ReturnStmt 0x558d5b64a238 <line:639:9, col:16>
|     `-ImplicitCastExpr 0x558d5b64a220 <col:16> 'Packet *' <LValueToRValue>
|       `-MemberExpr 0x558d5b64a1f0 <col:16> 'Packet *' lvalue ->_data_packet 0x558d5b639ba8
|         `-CXXThisExpr 0x558d5b64a1e0 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x558d5b632568 <line:643:5, col:50> col:17 used clear_annotations 'void (bool)' inline
| `-ParmVarDecl 0x558d5b6324d8 <col:35, col:46> col:40 all 'bool' cinit
|   `-CXXBoolLiteralExpr 0x558d5b643308 <col:46> 'bool' true
|-CXXMethodDecl 0x558d5b6326e8 <line:644:5, col:48> col:17 copy_annotations 'void (const Packet *)' inline
| `-ParmVarDecl 0x558d5b632620 <col:34, col:47> col:48 'const Packet *'
|-EnumDecl 0x558d5b632790 <line:648:5, line:660:5> line:648:5
| |-DeprecatedAttr 0x558d5b632f40 <line:660:22> "" ""
| |-EnumConstantDecl 0x558d5b632890 <line:649:2, col:21> col:2 DEFAULT_HEADROOM 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x558d5b632fb0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558d5b632870 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 28
| |     `-DeclRefExpr 0x558d5b632850 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x558d5b6279f0 'default_headroom' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x558d5b632920 <line:650:2, col:22> col:2 MIN_BUFFER_LENGTH 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x558d5b632fc8 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558d5b632900 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 64
| |     `-DeclRefExpr 0x558d5b6328e0 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x558d5b627a80 'min_buffer_length' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x558d5b6329b0 <line:651:2, col:21> col:2 referenced addr_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x558d5b632fe0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558d5b632990 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x558d5b632970 <col:21> 'int' 0
| |-EnumConstantDecl 0x558d5b632a40 <line:652:2, col:19> col:2 referenced addr_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x558d5b632ff8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558d5b632a20 <col:19> 'int' Int: 16
| |     `-IntegerLiteral 0x558d5b632a00 <col:19> 'int' 16
| |-EnumConstantDecl 0x558d5b632ad0 <line:653:2, col:21> col:2 referenced user_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x558d5b633010 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558d5b632ab0 <col:21> 'int' Int: 16
| |     `-IntegerLiteral 0x558d5b632a90 <col:21> 'int' 16
| |-EnumConstantDecl 0x558d5b632b60 <line:654:2, col:19> col:2 referenced user_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x558d5b633028 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558d5b632b40 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x558d5b632b20 <col:19> 'int' 32
| |-EnumConstantDecl 0x558d5b632bf0 <line:655:2, col:19> col:2 ADDR_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x558d5b633040 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558d5b632bd0 <col:19> 'int' Int: 16
| |     `-DeclRefExpr 0x558d5b632bb0 <col:19> 'int' EnumConstant 0x558d5b632a40 'addr_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x558d5b632c80 <line:656:2, col:19> col:2 referenced USER_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x558d5b633058 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558d5b632c60 <col:19> 'int' Int: 32
| |     `-DeclRefExpr 0x558d5b632c40 <col:19> 'int' EnumConstant 0x558d5b632b60 'user_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x558d5b632d50 <line:657:2, col:40> col:2 USER_ANNO_U16_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x558d5b633070 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558d5b632d30 <col:23, col:40> 'int' Int: 16
| |     `-BinaryOperator 0x558d5b632d10 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x558d5b632cd0 <col:23> 'int' EnumConstant 0x558d5b632c80 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x558d5b632cf0 <col:40> 'int' 2
| |-EnumConstantDecl 0x558d5b632e20 <line:658:2, col:40> col:2 USER_ANNO_U32_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x558d5b633088 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558d5b632e00 <col:23, col:40> 'int' Int: 8
| |     `-BinaryOperator 0x558d5b632de0 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x558d5b632da0 <col:23> 'int' EnumConstant 0x558d5b632c80 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x558d5b632dc0 <col:40> 'int' 4
| `-EnumConstantDecl 0x558d5b632ef0 <line:659:2, col:40> col:2 USER_ANNO_U64_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|   `-ImplicitCastExpr 0x558d5b6330a0 <col:23, col:40> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x558d5b632ed0 <col:23, col:40> 'int' Int: 4
|       `-BinaryOperator 0x558d5b632eb0 <col:23, col:40> 'int' '/'
|         |-DeclRefExpr 0x558d5b632e70 <col:23> 'int' EnumConstant 0x558d5b632c80 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|         `-IntegerLiteral 0x558d5b632e90 <col:40> 'int' 8
|-CXXMethodDecl 0x558d5b6330e0 <line:661:5, col:79> col:33 buffer_data 'const unsigned char *() const' inline
| `-DeprecatedAttr 0x558d5b633180 <col:68> "" ""
|-CXXMethodDecl 0x558d5b633218 <line:662:5, col:56> col:18 addr_anno 'void *()' inline
| `-DeprecatedAttr 0x558d5b6332b8 <col:45> "" ""
|-CXXMethodDecl 0x558d5b633350 <line:663:5, col:68> col:24 addr_anno 'const void *() const' inline
| `-DeprecatedAttr 0x558d5b6333f0 <col:57> "" ""
|-CXXMethodDecl 0x558d5b633488 <line:664:5, col:56> col:18 user_anno 'void *()' inline
| `-DeprecatedAttr 0x558d5b633528 <col:45> "" ""
|-CXXMethodDecl 0x558d5b6335c0 <line:665:5, col:68> col:24 user_anno 'const void *() const' inline
| `-DeprecatedAttr 0x558d5b633660 <col:57> "" ""
|-CXXMethodDecl 0x558d5b6336f0 <line:666:5, col:62> col:21 user_anno_u8 'uint8_t *()' inline
| `-DeprecatedAttr 0x558d5b633790 <col:51> "" ""
|-CXXMethodDecl 0x558d5b633820 <line:667:5, col:74> col:27 user_anno_u8 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x558d5b6338c0 <col:63> "" ""
|-CXXMethodDecl 0x558d5b633950 <line:668:5, col:64> col:22 user_anno_u32 'uint32_t *()' inline
| `-DeprecatedAttr 0x558d5b6339f0 <col:53> "" ""
|-CXXMethodDecl 0x558d5b633a80 <line:669:5, col:76> col:28 user_anno_u32 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x558d5b633b20 <col:65> "" ""
|-CXXMethodDecl 0x558d5b633c38 <line:670:5, col:72> col:20 user_anno_u8 'uint8_t (int) const' inline
| |-ParmVarDecl 0x558d5b633ba8 <col:33, col:37> col:37 i 'int'
| `-DeprecatedAttr 0x558d5b633ce0 <col:61> "" ""
|-CXXMethodDecl 0x558d5b633e78 <line:671:5, col:78> col:17 set_user_anno_u8 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x558d5b633d68 <col:34, col:38> col:38 i 'int'
| |-ParmVarDecl 0x558d5b633de0 <col:41, col:49> col:49 v 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x558d5b633f28 <col:67> "" ""
|-CXXMethodDecl 0x558d5b634040 <line:672:5, col:74> col:21 user_anno_u16 'uint16_t (int) const' inline
| |-ParmVarDecl 0x558d5b633fb0 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x558d5b6340e8 <col:63> "" ""
|-CXXMethodDecl 0x558d5b634280 <line:673:5, col:80> col:17 set_user_anno_u16 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x558d5b634170 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x558d5b6341e8 <col:42, col:51> col:51 v 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x558d5b634330 <col:69> "" ""
|-CXXMethodDecl 0x558d5b634448 <line:674:5, col:74> col:21 user_anno_u32 'uint32_t (int) const' inline
| |-ParmVarDecl 0x558d5b6343b8 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x558d5b6344f0 <col:63> "" ""
|-CXXMethodDecl 0x558d5b636bc8 <line:675:5, col:80> col:17 set_user_anno_u32 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x558d5b636ab8 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x558d5b636b30 <col:42, col:51> col:51 v 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x558d5b636c78 <col:69> "" ""
|-CXXMethodDecl 0x558d5b636d90 <line:676:5, col:73> col:20 user_anno_s32 'int32_t (int) const' inline
| |-ParmVarDecl 0x558d5b636d00 <col:34, col:38> col:38 i 'int'
| `-DeprecatedAttr 0x558d5b636e38 <col:62> "" ""
|-CXXMethodDecl 0x558d5b636fd0 <line:677:5, col:79> col:17 set_user_anno_s32 'void (int, int32_t)' inline
| |-ParmVarDecl 0x558d5b636ec0 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x558d5b636f38 <col:42, col:50> col:50 v 'int32_t':'int'
| `-DeprecatedAttr 0x558d5b637080 <col:68> "" ""
|-CXXMethodDecl 0x558d5b637198 <line:679:5, col:74> col:21 user_anno_u64 'uint64_t (int) const' inline
| |-ParmVarDecl 0x558d5b637108 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x558d5b637240 <col:63> "" ""
|-CXXMethodDecl 0x558d5b6373d8 <line:680:5, col:80> col:17 set_user_anno_u64 'void (int, uint64_t)' inline
| |-ParmVarDecl 0x558d5b6372c8 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x558d5b637340 <col:42, col:51> col:51 v 'uint64_t':'unsigned long'
| `-DeprecatedAttr 0x558d5b637488 <col:69> "" ""
|-CXXMethodDecl 0x558d5b637518 <line:682:5, col:75> col:27 all_user_anno 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x558d5b6375b8 <col:64> "" ""
|-CXXMethodDecl 0x558d5b637648 <line:683:5, col:63> col:21 all_user_anno 'uint8_t *()' inline
| `-DeprecatedAttr 0x558d5b6376e8 <col:52> "" ""
|-CXXMethodDecl 0x558d5b637778 <line:684:5, col:78> col:28 all_user_anno_u 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x558d5b637818 <col:67> "" ""
|-CXXMethodDecl 0x558d5b6378a8 <line:685:5, col:66> col:22 all_user_anno_u 'uint32_t *()' inline
| `-DeprecatedAttr 0x558d5b637948 <col:55> "" ""
|-CXXMethodDecl 0x558d5b637a60 <line:686:5, col:69> col:20 user_anno_c 'uint8_t (int) const' inline
| |-ParmVarDecl 0x558d5b6379d0 <col:32> col:35 'int'
| `-DeprecatedAttr 0x558d5b637b08 <col:58> "" ""
|-CXXMethodDecl 0x558d5b637ca0 <line:687:5, col:73> col:17 set_user_anno_c 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x558d5b637b90 <col:33> col:36 'int'
| |-ParmVarDecl 0x558d5b637c08 <col:38> col:45 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x558d5b637d50 <col:62> "" ""
|-CXXMethodDecl 0x558d5b637e68 <line:688:5, col:69> col:20 user_anno_s 'int16_t (int) const' inline
| |-ParmVarDecl 0x558d5b637dd8 <col:32> col:35 'int'
| `-DeprecatedAttr 0x558d5b637f10 <col:58> "" ""
|-CXXMethodDecl 0x558d5b6380a8 <line:689:5, col:73> col:17 set_user_anno_s 'void (int, int16_t)' inline
| |-ParmVarDecl 0x558d5b637f98 <col:33> col:36 'int'
| |-ParmVarDecl 0x558d5b638010 <col:38> col:45 'int16_t':'short'
| `-DeprecatedAttr 0x558d5b638158 <col:62> "" ""
|-CXXMethodDecl 0x558d5b638270 <line:690:5, col:71> col:21 user_anno_us 'uint16_t (int) const' inline
| |-ParmVarDecl 0x558d5b6381e0 <col:34> col:37 'int'
| `-DeprecatedAttr 0x558d5b638318 <col:60> "" ""
|-CXXMethodDecl 0x558d5b6384b0 <line:691:5, col:75> col:17 set_user_anno_us 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x558d5b6383a0 <col:34> col:37 'int'
| |-ParmVarDecl 0x558d5b638418 <col:39> col:47 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x558d5b638560 <col:64> "" ""
|-CXXMethodDecl 0x558d5b638678 <line:692:5, col:69> col:20 user_anno_i 'int32_t (int) const' inline
| |-ParmVarDecl 0x558d5b6385e8 <col:32> col:35 'int'
| `-DeprecatedAttr 0x558d5b638720 <col:58> "" ""
|-CXXMethodDecl 0x558d5b6388b8 <line:693:5, col:73> col:17 set_user_anno_i 'void (int, int32_t)' inline
| |-ParmVarDecl 0x558d5b6387a8 <col:33> col:36 'int'
| |-ParmVarDecl 0x558d5b638820 <col:38> col:45 'int32_t':'int'
| `-DeprecatedAttr 0x558d5b638968 <col:62> "" ""
|-CXXMethodDecl 0x558d5b638a80 <line:694:5, col:70> col:21 user_anno_u 'uint32_t (int) const' inline
| |-ParmVarDecl 0x558d5b6389f0 <col:33> col:36 'int'
| `-DeprecatedAttr 0x558d5b638b28 <col:59> "" ""
|-CXXMethodDecl 0x558d5b638cc0 <line:695:5, col:74> col:17 set_user_anno_u 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x558d5b638bb0 <col:33> col:36 'int'
| |-ParmVarDecl 0x558d5b638c28 <col:38> col:46 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x558d5b638d70 <col:63> "" ""
|-AccessSpecDecl 0x558d5b638de0 <line:698:3, col:10> col:3 private
|-CXXRecordDecl 0x558d5b638e08 prev 0x558d5b62e010 <line:702:5, line:711:5> line:702:11 referenced union Anno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x558d5b638f00 <col:5, col:11> col:11 implicit union Anno
| |-FieldDecl 0x558d5b638ff0 <line:703:2, col:18> col:7 referenced c 'char [48]'
| |-FieldDecl 0x558d5b639118 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
| |-FieldDecl 0x558d5b639298 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
| |-FieldDecl 0x558d5b639418 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
| |-FieldDecl 0x558d5b639598 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
| |-CXXConstructorDecl 0x558d5b64a3c8 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x558d5b64ac38 <col:11>
| |-CXXDestructorDecl 0x558d5b64a4a0 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
| |-CXXConstructorDecl 0x558d5b64a5d8 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x558d5b64a5d8
| | `-ParmVarDecl 0x558d5b64a6e8 <col:11> col:11 'const Packet::Anno &'
| |-CXXConstructorDecl 0x558d5b64a788 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x558d5b64a788
| | `-ParmVarDecl 0x558d5b64a898 <col:11> col:11 'Packet::Anno &&'
| |-CXXMethodDecl 0x558d5b64d658 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| | |-ParmVarDecl 0x558d5b64d768 <col:11> col:11 'const Packet::Anno &'
| | `-CompoundStmt 0x558d5b64d9e8 <col:11>
| |   `-ReturnStmt 0x558d5b64d9d8 <col:11>
| |     `-UnaryOperator 0x558d5b64d9c0 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x558d5b64d9b0 <col:11> 'Packet::Anno *' this
| `-CXXMethodDecl 0x558d5b64d7d8 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x558d5b64d7d8
|   `-ParmVarDecl 0x558d5b64d8e8 <col:11> col:11 'Packet::Anno &&'
|-CXXRecordDecl 0x558d5b639600 <line:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x558d5b639718 <col:5, col:12> col:12 implicit struct AllAnno
| |-FieldDecl 0x558d5b6397b8 <line:717:2, col:7> col:7 cb 'Packet::Anno'
| |-FieldDecl 0x558d5b639820 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
| |-FieldDecl 0x558d5b639888 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
| |-FieldDecl 0x558d5b6398f0 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
| |-FieldDecl 0x558d5b639950 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
| |-FieldDecl 0x558d5b639a10 <line:722:2, col:34> col:7 timestamp 'char [8]'
| |-FieldDecl 0x558d5b639a70 <line:723:2, col:10> col:10 referenced next 'Packet *'
| |-FieldDecl 0x558d5b639ad0 <line:724:2, col:10> col:10 referenced prev 'Packet *'
| |-CXXConstructorDecl 0x558d5b64a2d8 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| | |-CXXCtorInitializer Field 0x558d5b6397b8 'cb' 'Packet::Anno'
| | | `-CXXConstructExpr 0x558d5b64ac48 <col:12> 'Packet::Anno' 'void () noexcept'
| | `-CompoundStmt 0x558d5b64aca0 <col:12>
| |-CXXConstructorDecl 0x558d5b64a908 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x558d5b64a908
| | `-ParmVarDecl 0x558d5b64aa18 <col:12> col:12 'const Packet::AllAnno &'
| |-CXXConstructorDecl 0x558d5b64aab8 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x558d5b64aab8
| | `-ParmVarDecl 0x558d5b64abc8 <col:12> col:12 'Packet::AllAnno &&'
| `-CXXDestructorDecl 0x558d5b64cd40 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial
|-FieldDecl 0x558d5b639b48 <line:731:5, col:21> col:21 referenced _use_count 'atomic_uint32_t'
|-FieldDecl 0x558d5b639ba8 <line:732:5, col:13> col:13 referenced _data_packet 'Packet *'
|-FieldDecl 0x558d5b639c10 <line:734:5, col:20> col:20 referenced _head 'unsigned char *'
|-FieldDecl 0x558d5b639c78 <line:735:5, col:20> col:20 referenced _data 'unsigned char *'
|-FieldDecl 0x558d5b639ce0 <line:736:5, col:20> col:20 referenced _tail 'unsigned char *'
|-FieldDecl 0x558d5b639d48 <line:737:5, col:20> col:20 referenced _end 'unsigned char *'
|-FieldDecl 0x558d5b639da8 <line:741:5, col:13> col:13 referenced _aa 'Packet::AllAnno'
|-FieldDecl 0x558d5b639e08 <line:746:5, col:28> col:28 referenced _destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-FieldDecl 0x558d5b639e70 <line:747:5, col:11> col:11 referenced _destructor_argument 'void *'
|-CXXConstructorDecl 0x558d5b639ef8 <line:751:5, line:755:5> line:751:12 used Packet 'void ()' inline
| |-CXXCtorInitializer Field 0x558d5b639b48 '_use_count' 'atomic_uint32_t'
| | `-CXXConstructExpr 0x558d5b64a270 <col:12> 'atomic_uint32_t' 'void () noexcept'
| |-CXXCtorInitializer Field 0x558d5b639da8 '_aa' 'Packet::AllAnno'
| | `-CXXConstructExpr 0x558d5b64acb0 <col:12> 'Packet::AllAnno' 'void () noexcept'
| `-CompoundStmt 0x558d5b64ad10 <col:21, line:755:5>
|-CXXConstructorDecl 0x558d5b63a098 <line:756:5, col:27> col:5 Packet 'void (const Packet &)'
| `-ParmVarDecl 0x558d5b639fd8 <col:12, col:26> col:26 x 'const Packet &'
|-CXXDestructorDecl 0x558d5b63a190 <line:757:5, col:13> col:5 used ~Packet 'void () noexcept'
|-CXXMethodDecl 0x558d5b63a378 <line:758:5, col:38> col:13 operator= 'Packet &(const Packet &)'
| `-ParmVarDecl 0x558d5b63a280 <col:23, col:37> col:37 x 'const Packet &'
|-CXXMethodDecl 0x558d5b63a648 <line:761:5, col:74> col:10 alloc_data 'bool (uint32_t, uint32_t, uint32_t)'
| |-ParmVarDecl 0x558d5b63a430 <col:21, col:30> col:30 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x558d5b63a4a8 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x558d5b63a520 <col:57, col:66> col:66 tailroom 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558d5b63a868 <line:768:5, col:95> col:17 shift_header_annotations 'void (const unsigned char *, int32_t)' inline
| |-ParmVarDecl 0x558d5b63a718 <col:42, col:63> col:63 old_head 'const unsigned char *'
| `-ParmVarDecl 0x558d5b63a790 <col:73, col:81> col:81 extra_headroom 'int32_t':'int'
|-CXXMethodDecl 0x558d5b642e48 <line:769:5, col:109> col:21 expensive_uniqueify 'WritablePacket *(int32_t, int32_t, bool)'
| |-ParmVarDecl 0x558d5b63a928 <col:41, col:49> col:49 extra_headroom 'int32_t':'int'
| |-ParmVarDecl 0x558d5b63a9a0 <col:65, col:73> col:73 extra_tailroom 'int32_t':'int'
| `-ParmVarDecl 0x558d5b63aa18 <col:89, col:94> col:94 free_on_failure 'bool'
|-CXXMethodDecl 0x558d5b642fa0 <line:770:5, col:51> col:21 used expensive_push 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x558d5b642f10 <col:36, col:45> col:45 nbytes 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558d5b6430e8 <line:771:5, col:50> col:21 used expensive_put 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x558d5b643058 <col:35, col:44> col:44 nbytes 'uint32_t':'unsigned int'
`-FriendDecl 0x558d5b6431e0 <line:773:5, col:18> col:12 'class WritablePacket':'WritablePacket'

Layout: <CGRecordLayout
  LLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  NonVirtualBaseLLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct String::rep_t
         0 |   const char * data
         8 |   int length
        16 |   struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class String
         0 |   struct String::rep_t _r
         0 |     const char * data
         8 |     int length
        16 |     struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558d5b434610 <../dummy_inc/click/string.hh:189:5, line:198:5> line:189:12 referenced struct memo_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x558d5b434728 <col:5, col:12> col:12 implicit struct memo_t
|-FieldDecl 0x558d5b4347c8 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
|-FieldDecl 0x558d5b434828 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
|-FieldDecl 0x558d5b434888 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
`-FieldDecl 0x558d5b434938 <line:197:2, col:18> col:7 real_data 'char [8]'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  NonVirtualBaseLLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558d5b434c40 <../dummy_inc/click/string.hh:204:5, line:208:5> line:204:12 referenced struct rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x558d5b434d58 <col:5, col:12> col:12 implicit struct rep_t
|-FieldDecl 0x558d5b434e00 <line:205:2, col:14> col:14 referenced data 'const char *'
|-FieldDecl 0x558d5b434e68 <line:206:2, col:6> col:6 referenced length 'int'
|-FieldDecl 0x558d5b434ef8 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
|-CXXConstructorDecl 0x558d5b43af90 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x558d5b43b3c8 <col:12>
|-CXXConstructorDecl 0x558d5b43b098 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x558d5b43b1a8 <col:12> col:12 used 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x558d5b434e00 'data' 'const char *'
| | `-ImplicitCastExpr 0x558d5b43d950 <col:12> 'const char *' <LValueToRValue>
| |   `-MemberExpr 0x558d5b43d920 <col:12> 'const char *const' lvalue .data 0x558d5b434e00
| |     `-DeclRefExpr 0x558d5b43d900 <col:12> 'const String::rep_t' lvalue ParmVar 0x558d5b43b1a8 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x558d5b434e68 'length' 'int'
| | `-ImplicitCastExpr 0x558d5b43d9e0 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x558d5b43d9b0 <col:12> 'const int' lvalue .length 0x558d5b434e68
| |     `-DeclRefExpr 0x558d5b43d990 <col:12> 'const String::rep_t' lvalue ParmVar 0x558d5b43b1a8 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x558d5b434ef8 'memo' 'String::memo_t *'
| | `-ImplicitCastExpr 0x558d5b43da70 <col:12> 'String::memo_t *' <LValueToRValue>
| |   `-MemberExpr 0x558d5b43da40 <col:12> 'String::memo_t *const' lvalue .memo 0x558d5b434ef8
| |     `-DeclRefExpr 0x558d5b43da20 <col:12> 'const String::rep_t' lvalue ParmVar 0x558d5b43b1a8 '' 'const String::rep_t &'
| `-CompoundStmt 0x558d5b43dac8 <col:12>
|-CXXConstructorDecl 0x558d5b43b248 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x558d5b43b248
| `-ParmVarDecl 0x558d5b43b358 <col:12> col:12 'String::rep_t &&'
|-CXXDestructorDecl 0x558d5b4408b0 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x558d5b44c2c8 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x558d5b44c3d8 <col:12> col:12 used 'const String::rep_t &'
| `-CompoundStmt 0x558d5b44c8f0 <col:12>
|   |-BinaryOperator 0x558d5b44c708 <col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x558d5b44c6c0 <col:12> 'const char *' lvalue ->data 0x558d5b434e00
|   | | `-CXXThisExpr 0x558d5b44c6b0 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x558d5b44c6f0 <col:12> 'const char *' <LValueToRValue>
|   |   `-MemberExpr 0x558d5b44c680 <col:12> 'const char *const' lvalue .data 0x558d5b434e00
|   |     `-DeclRefExpr 0x558d5b44c660 <col:12> 'const String::rep_t' lvalue ParmVar 0x558d5b44c3d8 '' 'const String::rep_t &'
|   |-BinaryOperator 0x558d5b44c7d0 <col:12> 'int' lvalue '='
|   | |-MemberExpr 0x558d5b44c788 <col:12> 'int' lvalue ->length 0x558d5b434e68
|   | | `-CXXThisExpr 0x558d5b44c778 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x558d5b44c7b8 <col:12> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x558d5b44c748 <col:12> 'const int' lvalue .length 0x558d5b434e68
|   |     `-DeclRefExpr 0x558d5b44c728 <col:12> 'const String::rep_t' lvalue ParmVar 0x558d5b44c3d8 '' 'const String::rep_t &'
|   |-BinaryOperator 0x558d5b44c898 <col:12> 'String::memo_t *' lvalue '='
|   | |-MemberExpr 0x558d5b44c850 <col:12> 'String::memo_t *' lvalue ->memo 0x558d5b434ef8
|   | | `-CXXThisExpr 0x558d5b44c840 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x558d5b44c880 <col:12> 'String::memo_t *' <LValueToRValue>
|   |   `-MemberExpr 0x558d5b44c810 <col:12> 'String::memo_t *const' lvalue .memo 0x558d5b434ef8
|   |     `-DeclRefExpr 0x558d5b44c7f0 <col:12> 'const String::rep_t' lvalue ParmVar 0x558d5b44c3d8 '' 'const String::rep_t &'
|   `-ReturnStmt 0x558d5b44c8e0 <col:12>
|     `-UnaryOperator 0x558d5b44c8c8 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x558d5b44c8b8 <col:12> 'String::rep_t *' this
`-CXXMethodDecl 0x558d5b44c448 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x558d5b44c448
  `-ParmVarDecl 0x558d5b44c558 <col:12> col:12 'String::rep_t &&'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  NonVirtualBaseLLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558d5b42bb80 <../dummy_inc/click/string.hh:19:1, line:304:1> line:19:7 referenced class String definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x558d5b42bc98 <col:1, col:7> col:7 implicit referenced class String
|-AccessSpecDecl 0x558d5b42bd28 <col:16, col:22> col:16 public
|-TypedefDecl 0x558d5b42bd68 <line:21:5, col:25> col:25 referenced const_iterator 'const char *'
| `-PointerType 0x558d5b101dc0 'const char *'
|   `-QualType 0x558d5b101311 'const char' const
|     `-BuiltinType 0x558d5b101310 'char'
|-TypedefDecl 0x558d5b42bdf0 <line:22:5, col:28> col:28 iterator 'String::const_iterator':'const char *'
| `-TypedefType 0x558d5b42bdc0 'String::const_iterator' sugar
|   |-Typedef 0x558d5b42bd68 'const_iterator'
|   `-PointerType 0x558d5b101dc0 'const char *'
|     `-QualType 0x558d5b101311 'const char' const
|       `-BuiltinType 0x558d5b101310 'char'
|-TypedefDecl 0x558d5b42bf60 <line:24:5, col:52> col:27 referenced unspecified_bool_type 'int (String::*)() const'
| `-MemberPointerType 0x558d5b42bed0 'int (String::*)() const'
|   |-RecordType 0x558d5b42bc10 'String'
|   | `-CXXRecord 0x558d5b42bb80 'String'
|   `-ParenType 0x558d5b42be70 'int () const' sugar
|     `-FunctionProtoType 0x558d5b3ffa00 'int () const' const cdecl
|       `-BuiltinType 0x558d5b101370 'int'
|-TypedefDecl 0x558d5b42bfc8 <line:27:5, col:21> col:21 referenced intmax_t 'int64_t':'long'
| `-TypedefType 0x558d5b2545e0 'int64_t' sugar
|   |-Typedef 0x558d5b16a2d0 'int64_t'
|   `-TypedefType 0x558d5b1434d0 '__int64_t' sugar
|     |-Typedef 0x558d5b1430a8 '__int64_t'
|     `-BuiltinType 0x558d5b101390 'long'
|-TypedefDecl 0x558d5b42c030 <line:28:5, col:22> col:22 referenced uintmax_t 'uint64_t':'unsigned long'
| `-TypedefType 0x558d5b254500 'uint64_t' sugar
|   |-Typedef 0x558d5b16a470 'uint64_t'
|   `-TypedefType 0x558d5b143560 '__uint64_t' sugar
|     |-Typedef 0x558d5b143118 '__uint64_t'
|     `-BuiltinType 0x558d5b101430 'unsigned long'
|-TypedefDecl 0x558d5b42c0c0 <line:36:5, col:22> col:22 int_large_t 'String::intmax_t':'long'
| `-TypedefType 0x558d5b42c090 'String::intmax_t' sugar
|   |-Typedef 0x558d5b42bfc8 'intmax_t'
|   `-TypedefType 0x558d5b2545e0 'int64_t' sugar
|     |-Typedef 0x558d5b16a2d0 'int64_t'
|     `-TypedefType 0x558d5b1434d0 '__int64_t' sugar
|       |-Typedef 0x558d5b1430a8 '__int64_t'
|       `-BuiltinType 0x558d5b101390 'long'
|-TypedefDecl 0x558d5b42c150 <line:37:5, col:23> col:23 uint_large_t 'String::uintmax_t':'unsigned long'
| `-TypedefType 0x558d5b42c120 'String::uintmax_t' sugar
|   |-Typedef 0x558d5b42c030 'uintmax_t'
|   `-TypedefType 0x558d5b254500 'uint64_t' sugar
|     |-Typedef 0x558d5b16a470 'uint64_t'
|     `-TypedefType 0x558d5b143560 '__uint64_t' sugar
|       |-Typedef 0x558d5b143118 '__uint64_t'
|       `-BuiltinType 0x558d5b101430 'unsigned long'
|-CXXConstructorDecl 0x558d5b42c210 <line:39:5, col:19> col:12 used String 'void ()' inline
|-CXXConstructorDecl 0x558d5b42c3b8 <line:40:5, col:34> col:12 used String 'void (const String &)' inline
| `-ParmVarDecl 0x558d5b42c2f8 <col:19, col:33> col:33 x 'const String &'
|-CXXConstructorDecl 0x558d5b42c568 <line:42:5, col:29> col:12 used String 'void (String &&)' inline
| `-ParmVarDecl 0x558d5b42c4a8 <col:19, col:28> col:28 x 'String &&'
|-CXXConstructorDecl 0x558d5b42c6c0 <line:44:5, col:35> col:12 used String 'void (const char *)' inline
| `-ParmVarDecl 0x558d5b42c630 <col:19, col:31> col:31 cstr 'const char *'
|-CXXConstructorDecl 0x558d5b42c8d8 <line:45:5, col:41> col:12 String 'void (const char *, int)' inline
| |-ParmVarDecl 0x558d5b42c788 <col:19, col:31> col:31 s 'const char *'
| `-ParmVarDecl 0x558d5b42c808 <col:34, col:38> col:38 len 'int'
|-CXXConstructorDecl 0x558d5b42caf8 <line:46:5, col:50> col:12 String 'void (const unsigned char *, int)' inline
| |-ParmVarDecl 0x558d5b42c9a8 <col:19, col:40> col:40 s 'const unsigned char *'
| `-ParmVarDecl 0x558d5b42ca28 <col:43, col:47> col:47 len 'int'
|-CXXConstructorDecl 0x558d5b42cd18 <line:47:5, col:54> col:12 used String 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x558d5b42cbc8 <col:19, col:31> col:31 first 'const char *'
| `-ParmVarDecl 0x558d5b42cc48 <col:38, col:50> col:50 last 'const char *'
|-CXXConstructorDecl 0x558d5b42cf38 <line:48:5, col:72> col:12 String 'void (const unsigned char *, const unsigned char *)' inline
| |-ParmVarDecl 0x558d5b42cde8 <col:19, col:40> col:40 first 'const unsigned char *'
| `-ParmVarDecl 0x558d5b42ce68 <col:47, col:68> col:68 last 'const unsigned char *'
|-CXXConstructorDecl 0x558d5b42d0c8 <line:49:5, col:34> col:21 String 'void (bool)' inline
| `-ParmVarDecl 0x558d5b42d000 <col:28, col:33> col:33 x 'bool'
|-CXXConstructorDecl 0x558d5b42d248 <line:50:5, col:34> col:21 String 'void (char)' inline
| `-ParmVarDecl 0x558d5b42d188 <col:28, col:33> col:33 c 'char'
|-CXXConstructorDecl 0x558d5b42d3d8 <line:51:5, col:43> col:21 String 'void (unsigned char)' inline
| `-ParmVarDecl 0x558d5b42d310 <col:28, col:42> col:42 c 'unsigned char'
|-CXXConstructorDecl 0x558d5b42d530 <line:52:5, col:26> col:14 String 'void (int)'
| `-ParmVarDecl 0x558d5b42d4a0 <col:21, col:25> col:25 x 'int'
|-CXXConstructorDecl 0x558d5b42d688 <line:53:5, col:31> col:14 String 'void (unsigned int)'
| `-ParmVarDecl 0x558d5b42d5f8 <col:21, col:30> col:30 x 'unsigned int'
|-CXXConstructorDecl 0x558d5b42d7e0 <line:54:5, col:27> col:14 String 'void (long)'
| `-ParmVarDecl 0x558d5b42d750 <col:21, col:26> col:26 x 'long'
|-CXXConstructorDecl 0x558d5b42d968 <line:55:5, col:36> col:14 String 'void (unsigned long)'
| `-ParmVarDecl 0x558d5b42d8a8 <col:21, col:35> col:35 x 'unsigned long'
|-CXXConstructorDecl 0x558d5b42daf8 <line:57:5, col:32> col:14 String 'void (long long)'
| `-ParmVarDecl 0x558d5b42da30 <col:21, col:31> col:31 x 'long long'
|-CXXConstructorDecl 0x558d5b42dc88 <line:58:5, col:41> col:14 String 'void (unsigned long long)'
| `-ParmVarDecl 0x558d5b42dbc0 <col:21, col:40> col:40 x 'unsigned long long'
|-CXXConstructorDecl 0x558d5b42de18 <line:65:5, col:29> col:14 String 'void (double)'
| `-ParmVarDecl 0x558d5b42dd50 <col:21, col:28> col:28 x 'double'
|-CXXDestructorDecl 0x558d5b42df10 <line:67:5, col:20> col:12 used ~String 'void () noexcept' inline
|-CXXMethodDecl 0x558d5b42e038 <line:69:5, col:44> col:33 make_empty 'const String &()' static inline
|-CXXMethodDecl 0x558d5b42e1b8 <line:70:5, col:52> col:26 used make_uninitialized 'String (int)' static inline
| `-ParmVarDecl 0x558d5b42e0f0 <col:45, col:49> col:49 len 'int'
|-CXXMethodDecl 0x558d5b42e308 <line:71:5, col:74> col:26 make_garbage 'String (int)' static inline
| |-ParmVarDecl 0x558d5b42e278 <col:39, col:43> col:43 len 'int'
| `-DeprecatedAttr 0x558d5b42e3c0 <col:63> "" ""
|-CXXMethodDecl 0x558d5b42e508 <line:72:5, col:54> col:26 make_stable 'String (const char *)' static inline
| `-ParmVarDecl 0x558d5b42e448 <col:38, col:50> col:50 cstr 'const char *'
|-CXXMethodDecl 0x558d5b42e718 <line:73:5, col:60> col:26 make_stable 'String (const char *, int)' static inline
| |-ParmVarDecl 0x558d5b42e5c8 <col:38, col:50> col:50 s 'const char *'
| `-ParmVarDecl 0x558d5b42e648 <col:53, col:57> col:57 len 'int'
|-CXXMethodDecl 0x558d5b42e938 <line:74:5, col:73> col:26 make_stable 'String (const char *, const char *)' static inline
| |-ParmVarDecl 0x558d5b42e7e0 <col:38, col:50> col:50 first 'const char *'
| `-ParmVarDecl 0x558d5b42e860 <col:57, col:69> col:69 last 'const char *'
|-CXXMethodDecl 0x558d5b42ec18 <line:75:5, col:80> col:19 make_numeric 'String (String::intmax_t, int, bool)' static
| |-ParmVarDecl 0x558d5b42e9f8 <col:32, col:41> col:41 x 'String::intmax_t':'long'
| |-ParmVarDecl 0x558d5b42ea78 <col:44, col:55> col:48 base 'int' cinit
| | `-IntegerLiteral 0x558d5b43aa60 <col:55> 'int' 10
| `-ParmVarDecl 0x558d5b42eaf0 <col:59, col:76> col:64 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x558d5b43aa80 <col:76> 'bool' true
|-CXXMethodDecl 0x558d5b42eef8 <line:76:5, col:81> col:19 make_numeric 'String (String::uintmax_t, int, bool)' static
| |-ParmVarDecl 0x558d5b42ece0 <col:32, col:42> col:42 x 'String::uintmax_t':'unsigned long'
| |-ParmVarDecl 0x558d5b42ed60 <col:45, col:56> col:49 base 'int' cinit
| | `-IntegerLiteral 0x558d5b43aa90 <col:56> 'int' 10
| `-ParmVarDecl 0x558d5b42edd8 <col:60, col:77> col:65 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x558d5b43aab0 <col:77> 'bool' true
|-CXXMethodDecl 0x558d5b42f000 <line:78:5, col:31> col:24 used data 'const char *() const' inline
|-CXXMethodDecl 0x558d5b42f0c8 <line:79:5, col:25> col:16 used length 'int () const' inline
|-CXXMethodDecl 0x558d5b42f190 <line:81:5, col:60> col:52 c_str 'const char *() const'
| |-NoInlineAttr 0x558d5b42f230 <col:20>
| `-OptimizeNoneAttr 0x558d5b42f288 <col:30>
|-CXXConversionDecl 0x558d5b42f378 <line:83:5, col:45> col:12 operator int (String::*)() const 'String::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x558d5b42f448 <line:84:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x558d5b42f508 <line:85:5, col:29> col:17 operator! 'bool () const' inline
|-CXXMethodDecl 0x558d5b42f5f8 <line:87:5, col:35> col:27 used begin 'String::const_iterator () const' inline
|-CXXMethodDecl 0x558d5b42f6b8 <line:88:5, col:33> col:27 used end 'String::const_iterator () const' inline
|-CXXMethodDecl 0x558d5b42f838 <line:90:5, col:35> col:17 operator[] 'char (int) const' inline
| `-ParmVarDecl 0x558d5b42f770 <col:28, col:32> col:32 i 'int'
|-CXXMethodDecl 0x558d5b42f988 <line:91:5, col:27> col:17 at 'char (int) const' inline
| `-ParmVarDecl 0x558d5b42f8f8 <col:20, col:24> col:24 i 'int'
|-CXXMethodDecl 0x558d5b42fa78 <line:92:5, col:25> col:17 front 'char () const' inline
|-CXXMethodDecl 0x558d5b42fb38 <line:93:5, col:24> col:17 back 'char () const' inline
|-CXXMethodDecl 0x558d5b42fd88 <line:95:5, col:64> col:21 used hashcode 'uint32_t (const char *, const char *)' static
| |-ParmVarDecl 0x558d5b42fbf0 <col:30, col:42> col:42 begin 'const char *'
| `-ParmVarDecl 0x558d5b42fc70 <col:49, col:61> col:61 end 'const char *'
|-CXXMethodDecl 0x558d5b42ffe8 <line:96:5, line:97:33> line:96:28 hashcode 'uint32_t (const unsigned char *, const unsigned char *)' static inline
| |-ParmVarDecl 0x558d5b42fe50 <col:37, col:58> col:58 begin 'const unsigned char *'
| `-ParmVarDecl 0x558d5b42fed0 <line:97:9, col:30> col:30 end 'const unsigned char *'
|-CXXMethodDecl 0x558d5b4300b8 <line:98:5, col:32> col:21 hashcode 'uint32_t () const' inline
|-CXXMethodDecl 0x558d5b4302c8 <line:100:5, col:65> col:19 substring 'String (const char *, const char *) const' inline
| |-ParmVarDecl 0x558d5b430170 <col:29, col:41> col:41 begin 'const char *'
| `-ParmVarDecl 0x558d5b4301f0 <col:48, col:60> col:60 end 'const char *'
|-CXXMethodDecl 0x558d5b4304e8 <line:101:5, col:40> col:12 used substring 'String (int, int) const'
| |-ParmVarDecl 0x558d5b430390 <col:22, col:26> col:26 pos 'int'
| `-ParmVarDecl 0x558d5b430410 <col:31, col:35> col:35 len 'int'
|-CXXMethodDecl 0x558d5b430678 <line:102:5, col:38> col:19 substring 'String (int) const' inline
| `-ParmVarDecl 0x558d5b4305b0 <col:29, col:33> col:33 pos 'int'
|-CXXMethodDecl 0x558d5b430768 <line:103:5, col:25> col:12 trim_space 'String () const'
|-CXXMethodDecl 0x558d5b4308d8 <line:105:5, col:41> col:17 equals 'bool (const String &) const' inline
| `-ParmVarDecl 0x558d5b430818 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x558d5b430ae8 <line:106:5, col:48> col:17 used equals 'bool (const char *, int) const' inline
| |-ParmVarDecl 0x558d5b430998 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x558d5b430a18 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x558d5b430d00 <line:107:5, col:63> col:23 used compare 'int (const String &, const String &)' static inline
| |-ParmVarDecl 0x558d5b430ba8 <col:31, col:45> col:45 a 'const String &'
| `-ParmVarDecl 0x558d5b430c20 <col:48, col:62> col:62 b 'const String &'
|-CXXMethodDecl 0x558d5b430e90 <line:108:5, col:41> col:16 used compare 'int (const String &) const' inline
| `-ParmVarDecl 0x558d5b430dc0 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x558d5b4310b0 <line:109:5, col:41> col:9 used compare 'int (const char *, int) const'
| |-ParmVarDecl 0x558d5b430f50 <col:17, col:29> col:29 s 'const char *'
| `-ParmVarDecl 0x558d5b430fd0 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x558d5b431200 <line:110:5, col:46> col:17 starts_with 'bool (const String &) const' inline
| `-ParmVarDecl 0x558d5b431170 <col:29, col:43> col:43 x 'const String &'
|-CXXMethodDecl 0x558d5b4313d8 <line:111:5, col:46> col:10 used starts_with 'bool (const char *, int) const'
| |-ParmVarDecl 0x558d5b4312c0 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x558d5b431340 <col:37, col:41> col:41 len 'int'
|-CXXMethodDecl 0x558d5b431528 <line:112:5, col:44> col:10 glob_match 'bool (const String &) const'
| `-ParmVarDecl 0x558d5b431498 <col:21, col:35> col:35 pattern 'const String &'
|-CXXMethodDecl 0x558d5b431740 <line:125:5, col:42> col:9 find_left 'int (char, int) const'
| |-ParmVarDecl 0x558d5b4315e0 <col:19, col:24> col:24 c 'char'
| `-ParmVarDecl 0x558d5b431660 <col:27, col:39> col:31 start 'int' cinit
|   `-IntegerLiteral 0x558d5b43aac0 <col:39> 'int' 0
|-CXXMethodDecl 0x558d5b431960 <line:126:5, col:51> col:9 find_left 'int (const String &, int) const'
| |-ParmVarDecl 0x558d5b431800 <col:19, col:33> col:33 x 'const String &'
| `-ParmVarDecl 0x558d5b431880 <col:36, col:48> col:40 start 'int' cinit
|   `-IntegerLiteral 0x558d5b43aae0 <col:48> 'int' 0
|-CXXMethodDecl 0x558d5b431b40 <line:127:5, col:52> col:9 find_right 'int (char, int) const'
| |-ParmVarDecl 0x558d5b431a20 <col:20, col:25> col:25 c 'char'
| `-ParmVarDecl 0x558d5b431aa0 <col:28, col:40> col:32 start 'int' cinit
|   `-IntegerLiteral 0x558d5b43ab00 <col:40> 'int' 2147483647
|-CXXMethodDecl 0x558d5b431c10 <line:129:5, col:20> col:12 lower 'String () const'
|-CXXMethodDecl 0x558d5b431cd0 <line:130:5, col:20> col:12 upper 'String () const'
|-CXXMethodDecl 0x558d5b431d90 <line:131:5, col:24> col:12 printable 'String () const'
|-CXXMethodDecl 0x558d5b431e50 <line:132:5, col:25> col:12 quoted_hex 'String () const'
|-CXXMethodDecl 0x558d5b431f10 <line:133:5, col:26> col:12 encode_json 'String () const'
|-CXXMethodDecl 0x558d5b4320b8 <line:135:5, col:45> col:20 operator= 'String &(const String &)' inline
| `-ParmVarDecl 0x558d5b431fc0 <col:30, col:44> col:44 x 'const String &'
|-CXXMethodDecl 0x558d5b432238 <line:137:5, col:40> col:20 operator= 'String &(String &&)' inline
| `-ParmVarDecl 0x558d5b432170 <col:30, col:39> col:39 x 'String &&'
|-CXXMethodDecl 0x558d5b432410 <line:139:5, col:46> col:20 operator= 'String &(const char *)' inline
| `-ParmVarDecl 0x558d5b4322f8 <col:30, col:42> col:42 cstr 'const char *'
|-CXXMethodDecl 0x558d5b432588 <line:141:5, col:31> col:17 swap 'void (String &)' inline
| `-ParmVarDecl 0x558d5b4324c8 <col:22, col:30> col:30 x 'String &'
|-CXXMethodDecl 0x558d5b4326d0 <line:143:5, col:39> col:17 append 'void (const String &)' inline
| `-ParmVarDecl 0x558d5b432640 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x558d5b432820 <line:144:5, col:40> col:17 used append 'void (const char *)' inline
| `-ParmVarDecl 0x558d5b432790 <col:24, col:36> col:36 cstr 'const char *'
|-CXXMethodDecl 0x558d5b4329f8 <line:145:5, col:46> col:17 used append 'void (const char *, int)' inline
| |-ParmVarDecl 0x558d5b4328e0 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x558d5b432960 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x558d5b432bd8 <line:146:5, col:59> col:17 append 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x558d5b432ac0 <col:24, col:36> col:36 first 'const char *'
| `-ParmVarDecl 0x558d5b432b40 <col:43, col:55> col:55 last 'const char *'
|-CXXMethodDecl 0x558d5b432d28 <line:147:5, col:30> col:17 append 'void (char)' inline
| `-ParmVarDecl 0x558d5b432c98 <col:24, col:29> col:29 c 'char'
|-CXXMethodDecl 0x558d5b432f38 <line:148:5, col:36> col:10 append_fill 'void (int, int)'
| |-ParmVarDecl 0x558d5b432de8 <col:22, col:26> col:26 c 'int'
| `-ParmVarDecl 0x558d5b432e68 <col:29, col:33> col:33 len 'int'
|-CXXMethodDecl 0x558d5b433098 <line:149:5, col:39> col:11 used append_uninitialized 'char *(int)'
| `-ParmVarDecl 0x558d5b433000 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x558d5b4331f0 <line:150:5, col:68> col:18 append_garbage 'char *(int)' inline
| |-ParmVarDecl 0x558d5b433158 <col:33, col:37> col:37 len 'int'
| `-DeprecatedAttr 0x558d5b433298 <col:57> "" ""
|-CXXMethodDecl 0x558d5b4333a8 <line:152:5, col:46> col:20 used operator+= 'String &(const String &)' inline
| `-ParmVarDecl 0x558d5b433318 <col:31, col:45> col:45 x 'const String &'
|-CXXMethodDecl 0x558d5b4334f8 <line:153:5, col:47> col:20 operator+= 'String &(const char *)' inline
| `-ParmVarDecl 0x558d5b433468 <col:31, col:43> col:43 cstr 'const char *'
|-CXXMethodDecl 0x558d5b433678 <line:154:5, col:37> col:20 operator+= 'String &(char)' inline
| `-ParmVarDecl 0x558d5b4335b0 <col:31, col:36> col:36 c 'char'
|-CXXMethodDecl 0x558d5b433740 <line:160:5, col:29> col:17 is_shared 'bool () const' inline
|-CXXMethodDecl 0x558d5b433800 <line:161:5, col:29> col:17 is_stable 'bool () const' inline
|-CXXMethodDecl 0x558d5b4338c0 <line:163:5, col:60> col:19 unique 'String () const' inline
| `-DeprecatedAttr 0x558d5b433960 <col:49> "" ""
|-CXXMethodDecl 0x558d5b4339f0 <line:164:5, col:30> col:19 used unshared 'String () const' inline
|-CXXMethodDecl 0x558d5b433ab0 <line:165:5, col:29> col:19 compact 'String () const' inline
|-CXXMethodDecl 0x558d5b433ba0 <line:167:5, col:24> col:11 mutable_data 'char *()'
|-CXXMethodDecl 0x558d5b433c68 <line:168:5, col:25> col:11 mutable_c_str 'char *()'
|-CXXMethodDecl 0x558d5b433d28 <line:170:5, col:52> col:33 make_out_of_memory 'const String &()' static inline
|-CXXMethodDecl 0x558d5b433de8 <line:171:5, col:33> col:17 out_of_memory 'bool () const' inline
|-CXXMethodDecl 0x558d5b433ee0 <line:172:5, col:50> col:31 out_of_memory_data 'const char *()' static inline
|-CXXMethodDecl 0x558d5b433fa8 <line:173:5, col:44> col:23 out_of_memory_length 'int ()' static inline
|-CXXMethodDecl 0x558d5b434070 <line:174:5, col:42> col:31 empty_data 'const char *()' static inline
|-CXXMethodDecl 0x558d5b434248 <line:180:5, col:81> col:31 skip_utf8_char 'const char *(const char *, const char *)' static inline
| |-ParmVarDecl 0x558d5b434128 <col:46, col:58> col:58 first 'const char *'
| `-ParmVarDecl 0x558d5b4341a8 <col:65, col:77> col:77 last 'const char *'
|-CXXMethodDecl 0x558d5b434470 <line:181:5, line:182:38> line:181:33 used skip_utf8_char 'const unsigned char *(const unsigned char *, const unsigned char *)' static
| |-ParmVarDecl 0x558d5b434310 <col:48, col:69> col:69 first 'const unsigned char *'
| `-ParmVarDecl 0x558d5b434390 <line:182:13, col:34> col:34 last 'const unsigned char *'
|-VarDecl 0x558d5b434580 <line:184:5, col:35> col:23 used bool_data 'const char [11]' static
|-AccessSpecDecl 0x558d5b4345e8 <line:186:3, col:10> col:3 private
|-CXXRecordDecl 0x558d5b434610 <line:189:5, line:198:5> line:189:12 referenced struct memo_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x558d5b434728 <col:5, col:12> col:12 implicit struct memo_t
| |-FieldDecl 0x558d5b4347c8 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
| |-FieldDecl 0x558d5b434828 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
| |-FieldDecl 0x558d5b434888 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
| `-FieldDecl 0x558d5b434938 <line:197:2, col:18> col:7 real_data 'char [8]'
|-EnumDecl 0x558d5b4349a0 <line:200:5, line:202:5> line:200:5
| `-EnumConstantDecl 0x558d5b434bd8 <line:201:2, col:32> col:2 MEMO_SPACE 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)'
|   `-ImplicitCastExpr 0x558d5b434c28 <col:15, col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x558d5b434bb8 <col:15, col:32> 'unsigned long' Int: 12
|       `-BinaryOperator 0x558d5b434ac8 <col:15, col:32> 'unsigned long' '-'
|         |-UnaryExprOrTypeTraitExpr 0x558d5b434a70 <col:15, col:28> 'unsigned long' sizeof 'String::memo_t'
|         `-ImplicitCastExpr 0x558d5b434ab0 <col:32> 'unsigned long' <IntegralCast>
|           `-IntegerLiteral 0x558d5b434a90 <col:32> 'int' 8
|-CXXRecordDecl 0x558d5b434c40 <line:204:5, line:208:5> line:204:12 referenced struct rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x558d5b434d58 <col:5, col:12> col:12 implicit struct rep_t
| |-FieldDecl 0x558d5b434e00 <line:205:2, col:14> col:14 referenced data 'const char *'
| |-FieldDecl 0x558d5b434e68 <line:206:2, col:6> col:6 referenced length 'int'
| |-FieldDecl 0x558d5b434ef8 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
| |-CXXConstructorDecl 0x558d5b43af90 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x558d5b43b3c8 <col:12>
| |-CXXConstructorDecl 0x558d5b43b098 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x558d5b43b1a8 <col:12> col:12 used 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x558d5b434e00 'data' 'const char *'
| | | `-ImplicitCastExpr 0x558d5b43d950 <col:12> 'const char *' <LValueToRValue>
| | |   `-MemberExpr 0x558d5b43d920 <col:12> 'const char *const' lvalue .data 0x558d5b434e00
| | |     `-DeclRefExpr 0x558d5b43d900 <col:12> 'const String::rep_t' lvalue ParmVar 0x558d5b43b1a8 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x558d5b434e68 'length' 'int'
| | | `-ImplicitCastExpr 0x558d5b43d9e0 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x558d5b43d9b0 <col:12> 'const int' lvalue .length 0x558d5b434e68
| | |     `-DeclRefExpr 0x558d5b43d990 <col:12> 'const String::rep_t' lvalue ParmVar 0x558d5b43b1a8 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x558d5b434ef8 'memo' 'String::memo_t *'
| | | `-ImplicitCastExpr 0x558d5b43da70 <col:12> 'String::memo_t *' <LValueToRValue>
| | |   `-MemberExpr 0x558d5b43da40 <col:12> 'String::memo_t *const' lvalue .memo 0x558d5b434ef8
| | |     `-DeclRefExpr 0x558d5b43da20 <col:12> 'const String::rep_t' lvalue ParmVar 0x558d5b43b1a8 '' 'const String::rep_t &'
| | `-CompoundStmt 0x558d5b43dac8 <col:12>
| |-CXXConstructorDecl 0x558d5b43b248 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x558d5b43b248
| | `-ParmVarDecl 0x558d5b43b358 <col:12> col:12 'String::rep_t &&'
| |-CXXDestructorDecl 0x558d5b4408b0 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x558d5b44c2c8 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x558d5b44c3d8 <col:12> col:12 used 'const String::rep_t &'
| | `-CompoundStmt 0x558d5b44c8f0 <col:12>
| |   |-BinaryOperator 0x558d5b44c708 <col:12> 'const char *' lvalue '='
| |   | |-MemberExpr 0x558d5b44c6c0 <col:12> 'const char *' lvalue ->data 0x558d5b434e00
| |   | | `-CXXThisExpr 0x558d5b44c6b0 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x558d5b44c6f0 <col:12> 'const char *' <LValueToRValue>
| |   |   `-MemberExpr 0x558d5b44c680 <col:12> 'const char *const' lvalue .data 0x558d5b434e00
| |   |     `-DeclRefExpr 0x558d5b44c660 <col:12> 'const String::rep_t' lvalue ParmVar 0x558d5b44c3d8 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x558d5b44c7d0 <col:12> 'int' lvalue '='
| |   | |-MemberExpr 0x558d5b44c788 <col:12> 'int' lvalue ->length 0x558d5b434e68
| |   | | `-CXXThisExpr 0x558d5b44c778 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x558d5b44c7b8 <col:12> 'int' <LValueToRValue>
| |   |   `-MemberExpr 0x558d5b44c748 <col:12> 'const int' lvalue .length 0x558d5b434e68
| |   |     `-DeclRefExpr 0x558d5b44c728 <col:12> 'const String::rep_t' lvalue ParmVar 0x558d5b44c3d8 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x558d5b44c898 <col:12> 'String::memo_t *' lvalue '='
| |   | |-MemberExpr 0x558d5b44c850 <col:12> 'String::memo_t *' lvalue ->memo 0x558d5b434ef8
| |   | | `-CXXThisExpr 0x558d5b44c840 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x558d5b44c880 <col:12> 'String::memo_t *' <LValueToRValue>
| |   |   `-MemberExpr 0x558d5b44c810 <col:12> 'String::memo_t *const' lvalue .memo 0x558d5b434ef8
| |   |     `-DeclRefExpr 0x558d5b44c7f0 <col:12> 'const String::rep_t' lvalue ParmVar 0x558d5b44c3d8 '' 'const String::rep_t &'
| |   `-ReturnStmt 0x558d5b44c8e0 <col:12>
| |     `-UnaryOperator 0x558d5b44c8c8 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x558d5b44c8b8 <col:12> 'String::rep_t *' this
| `-CXXMethodDecl 0x558d5b44c448 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x558d5b44c448
|   `-ParmVarDecl 0x558d5b44c558 <col:12> col:12 'String::rep_t &&'
|-FieldDecl 0x558d5b434f70 <line:211:5, col:19> col:19 referenced _r 'String::rep_t' mutable
|-CXXMethodDecl 0x558d5b4351b8 <line:256:5, line:261:5> line:256:17 used assign_memo 'void (const char *, int, String::memo_t *) const' inline
| |-ParmVarDecl 0x558d5b434fd8 <col:29, col:41> col:41 used data 'const char *'
| |-ParmVarDecl 0x558d5b435058 <col:47, col:51> col:51 used length 'int'
| |-ParmVarDecl 0x558d5b4350d0 <col:59, col:67> col:67 used memo 'String::memo_t *'
| `-CompoundStmt 0x558d5b43af50 <col:79, line:261:5>
|   |-BinaryOperator 0x558d5b43abc8 <line:257:2, col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x558d5b43ab60 <col:2, col:5> 'const char *' lvalue .data 0x558d5b434e00
|   | | `-MemberExpr 0x558d5b43ab30 <col:2> 'String::rep_t' lvalue ->_r 0x558d5b434f70
|   | |   `-CXXThisExpr 0x558d5b43ab20 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x558d5b43abb0 <col:12> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x558d5b43ab90 <col:12> 'const char *' lvalue ParmVar 0x558d5b434fd8 'data' 'const char *'
|   |-BinaryOperator 0x558d5b43ac90 <line:258:2, col:14> 'int' lvalue '='
|   | |-MemberExpr 0x558d5b43ac28 <col:2, col:5> 'int' lvalue .length 0x558d5b434e68
|   | | `-MemberExpr 0x558d5b43abf8 <col:2> 'String::rep_t' lvalue ->_r 0x558d5b434f70
|   | |   `-CXXThisExpr 0x558d5b43abe8 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x558d5b43ac78 <col:14> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x558d5b43ac58 <col:14> 'int' lvalue ParmVar 0x558d5b435058 'length' 'int'
|   `-IfStmt 0x558d5b43af38 <line:259:2, line:260:41>
|     |-ImplicitCastExpr 0x558d5b43adb0 <line:259:6, col:21> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x558d5b43ad98 <col:6, col:21> 'String::memo_t *' <LValueToRValue>
|     |   `-ParenExpr 0x558d5b43ad78 <col:6, col:21> 'String::memo_t *' lvalue
|     |     `-BinaryOperator 0x558d5b43ad58 <col:7, col:17> 'String::memo_t *' lvalue '='
|     |       |-MemberExpr 0x558d5b43acf0 <col:7, col:10> 'String::memo_t *' lvalue .memo 0x558d5b434ef8
|     |       | `-MemberExpr 0x558d5b43acc0 <col:7> 'String::rep_t' lvalue ->_r 0x558d5b434f70
|     |       |   `-CXXThisExpr 0x558d5b43acb0 <col:7> 'const String *' implicit this
|     |       `-ImplicitCastExpr 0x558d5b43ad40 <col:17> 'String::memo_t *' <LValueToRValue>
|     |         `-DeclRefExpr 0x558d5b43ad20 <col:17> 'String::memo_t *' lvalue ParmVar 0x558d5b4350d0 'memo' 'String::memo_t *'
|     `-CallExpr 0x558d5b43af10 <line:260:6, col:41> 'void'
|       |-ImplicitCastExpr 0x558d5b43aef8 <col:6, col:23> 'void (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x558d5b43ae00 <col:6, col:23> 'void (volatile uint32_t &)' lvalue CXXMethod 0x558d5b423be8 'inc' 'void (volatile uint32_t &)'
|       `-MemberExpr 0x558d5b43ae68 <col:27, col:33> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x558d5b4347c8
|         `-ImplicitCastExpr 0x558d5b43ae50 <col:27> 'String::memo_t *' <LValueToRValue>
|           `-DeclRefExpr 0x558d5b43ae30 <col:27> 'String::memo_t *' lvalue ParmVar 0x558d5b4350d0 'memo' 'String::memo_t *'
|-CXXConstructorDecl 0x558d5b435468 <line:263:5, line:265:5> line:263:12 used String 'void (const char *, int, String::memo_t *)' inline
| |-ParmVarDecl 0x558d5b435288 <col:19, col:31> col:31 used data 'const char *'
| |-ParmVarDecl 0x558d5b435308 <col:37, col:41> col:41 used length 'int'
| |-ParmVarDecl 0x558d5b435380 <col:49, col:57> col:57 used memo 'String::memo_t *'
| |-CXXCtorInitializer Field 0x558d5b434f70 '_r' 'String::rep_t'
| | `-CXXConstructExpr 0x558d5b43b3d8 <col:12> 'String::rep_t' 'void () noexcept'
| `-CompoundStmt 0x558d5b43b568 <col:63, line:265:5>
|   `-CXXMemberCallExpr 0x558d5b43b4d0 <line:264:2, col:32> 'void'
|     |-MemberExpr 0x558d5b43b440 <col:2> '<bound member function type>' ->assign_memo 0x558d5b4351b8
|     | `-ImplicitCastExpr 0x558d5b43b508 <col:2> 'const String *' <NoOp>
|     |   `-CXXThisExpr 0x558d5b43b430 <col:2> 'String *' implicit this
|     |-ImplicitCastExpr 0x558d5b43b520 <col:14> 'const char *' <LValueToRValue>
|     | `-DeclRefExpr 0x558d5b43b470 <col:14> 'const char *' lvalue ParmVar 0x558d5b435288 'data' 'const char *'
|     |-ImplicitCastExpr 0x558d5b43b538 <col:20> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x558d5b43b490 <col:20> 'int' lvalue ParmVar 0x558d5b435308 'length' 'int'
|     `-ImplicitCastExpr 0x558d5b43b550 <col:28> 'String::memo_t *' <LValueToRValue>
|       `-DeclRefExpr 0x558d5b43b4b0 <col:28> 'String::memo_t *' lvalue ParmVar 0x558d5b435380 'memo' 'String::memo_t *'
|-CXXMethodDecl 0x558d5b4355f8 <line:267:5, line:269:5> line:267:17 used assign 'void (const String &) const' inline
| |-ParmVarDecl 0x558d5b435538 <col:24, col:38> col:38 used x 'const String &'
| `-CompoundStmt 0x558d5b43b7c0 <col:47, line:269:5>
|   `-CXXMemberCallExpr 0x558d5b43b740 <line:268:2, col:47> 'void'
|     |-MemberExpr 0x558d5b43b590 <col:2> '<bound member function type>' ->assign_memo 0x558d5b4351b8
|     | `-CXXThisExpr 0x558d5b43b580 <col:2> 'const String *' implicit this
|     |-ImplicitCastExpr 0x558d5b43b778 <col:14, col:19> 'const char *' <LValueToRValue>
|     | `-MemberExpr 0x558d5b43b610 <col:14, col:19> 'const char *' lvalue .data 0x558d5b434e00
|     |   `-MemberExpr 0x558d5b43b5e0 <col:14, col:16> 'String::rep_t' lvalue ._r 0x558d5b434f70
|     |     `-DeclRefExpr 0x558d5b43b5c0 <col:14> 'const String' lvalue ParmVar 0x558d5b435538 'x' 'const String &'
|     |-ImplicitCastExpr 0x558d5b43b790 <col:25, col:30> 'int' <LValueToRValue>
|     | `-MemberExpr 0x558d5b43b690 <col:25, col:30> 'int' lvalue .length 0x558d5b434e68
|     |   `-MemberExpr 0x558d5b43b660 <col:25, col:27> 'String::rep_t' lvalue ._r 0x558d5b434f70
|     |     `-DeclRefExpr 0x558d5b43b640 <col:25> 'const String' lvalue ParmVar 0x558d5b435538 'x' 'const String &'
|     `-ImplicitCastExpr 0x558d5b43b7a8 <col:38, col:43> 'String::memo_t *' <LValueToRValue>
|       `-MemberExpr 0x558d5b43b710 <col:38, col:43> 'String::memo_t *' lvalue .memo 0x558d5b434ef8
|         `-MemberExpr 0x558d5b43b6e0 <col:38, col:40> 'String::rep_t' lvalue ._r 0x558d5b434f70
|           `-DeclRefExpr 0x558d5b43b6c0 <col:38> 'const String' lvalue ParmVar 0x558d5b435538 'x' 'const String &'
|-CXXMethodDecl 0x558d5b4356c0 <line:271:5, line:278:5> line:271:17 used deref 'void () const' inline
| `-CompoundStmt 0x558d5b43c180 <col:31, line:278:5>
|   `-IfStmt 0x558d5b43c168 <line:272:2, line:277:2>
|     |-ImplicitCastExpr 0x558d5b43b860 <line:272:6, col:9> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x558d5b43b848 <col:6, col:9> 'String::memo_t *' <LValueToRValue>
|     |   `-MemberExpr 0x558d5b43b818 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x558d5b434ef8
|     |     `-MemberExpr 0x558d5b43b7e8 <col:6> 'String::rep_t' lvalue ->_r 0x558d5b434f70
|     |       `-CXXThisExpr 0x558d5b43b7d8 <col:6> 'const String *' implicit this
|     `-CompoundStmt 0x558d5b43c140 <col:15, line:277:2>
|       |-ParenExpr 0x558d5b43bd10 <line:273:6, col:166> 'void'
|       | `-ConditionalOperator 0x558d5b43bce0 <col:7, col:165> 'void'
|       |   |-CXXStaticCastExpr 0x558d5b43b970 <col:7, col:44> 'bool' static_cast<_Bool> <NoOp>
|       |   | `-ImplicitCastExpr 0x558d5b43b958 <col:27, col:36> 'bool' <IntegralToBoolean> part_of_explicit_cast
|       |   |   `-ImplicitCastExpr 0x558d5b43b940 <col:27, col:36> 'uint32_t':'unsigned int' <LValueToRValue> part_of_explicit_cast
|       |   |     `-MemberExpr 0x558d5b43b900 <col:27, col:36> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x558d5b4347c8
|       |   |       `-ImplicitCastExpr 0x558d5b43b8e8 <col:27, col:30> 'String::memo_t *' <LValueToRValue>
|       |   |         `-MemberExpr 0x558d5b43b8b8 <col:27, col:30> 'String::memo_t *' lvalue .memo 0x558d5b434ef8
|       |   |           `-MemberExpr 0x558d5b43b888 <col:27> 'String::rep_t' lvalue ->_r 0x558d5b434f70
|       |   |             `-CXXThisExpr 0x558d5b43b878 <col:27> 'const String *' implicit this
|       |   |-CXXFunctionalCastExpr 0x558d5b43b9d0 <col:48, col:55> 'void' functional cast to void <ToVoid>
|       |   | `-IntegerLiteral 0x558d5b43b9b0 <col:54> 'int' 0
|       |   `-CallExpr 0x558d5b43bc40 <col:59, col:165> 'void'
|       |     |-ImplicitCastExpr 0x558d5b43bc28 <col:59> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x558d5b43bba8 <col:59> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x558d5b19ae40 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|       |     |-ImplicitCastExpr 0x558d5b43bc80 <col:74> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x558d5b43bab8 <col:74> 'const char [18]' lvalue "_r.memo->refcount"
|       |     |-ImplicitCastExpr 0x558d5b43bc98 <col:95> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x558d5b43bae8 <col:95> 'const char [29]' lvalue "../dummy_inc/click/string.hh"
|       |     |-ImplicitCastExpr 0x558d5b43bcb0 <col:127> 'unsigned int' <IntegralCast>
|       |     | `-IntegerLiteral 0x558d5b43bb20 <col:127> 'int' 273
|       |     `-ImplicitCastExpr 0x558d5b43bcc8 <col:132, col:146> 'const char *' <ArrayToPointerDecay>
|       |       `-UnaryOperator 0x558d5b43bb90 <col:132, col:146> 'const char [27]' lvalue prefix '__extension__' cannot overflow
|       |         `-PredefinedExpr 0x558d5b43bb78 <col:146> 'const char [27]' lvalue __PRETTY_FUNCTION__
|       |           `-StringLiteral 0x558d5b43bb40 <col:146> 'const char [27]' lvalue "void String::deref() const"
|       |-IfStmt 0x558d5b43c060 <line:274:6, line:275:22>
|       | |-CallExpr 0x558d5b43bf20 <line:274:10, col:57> 'bool'
|       | | |-ImplicitCastExpr 0x558d5b43bf08 <col:10, col:27> 'bool (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | | | `-DeclRefExpr 0x558d5b43be80 <col:10, col:27> 'bool (volatile uint32_t &)' lvalue CXXMethod 0x558d5b425030 'dec_and_test' 'bool (volatile uint32_t &)'
|       | | `-MemberExpr 0x558d5b43be50 <col:40, col:49> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x558d5b4347c8
|       | |   `-ImplicitCastExpr 0x558d5b43be38 <col:40, col:43> 'String::memo_t *' <LValueToRValue>
|       | |     `-MemberExpr 0x558d5b43be08 <col:40, col:43> 'String::memo_t *' lvalue .memo 0x558d5b434ef8
|       | |       `-MemberExpr 0x558d5b43bdd8 <col:40> 'String::rep_t' lvalue ->_r 0x558d5b434f70
|       | |         `-CXXThisExpr 0x558d5b43bdc8 <col:40> 'const String *' implicit this
|       | `-CallExpr 0x558d5b43c020 <line:275:3, col:22> 'void'
|       |   |-ImplicitCastExpr 0x558d5b43c008 <col:3> 'void (*)(String::memo_t *)' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x558d5b43bf48 <col:3> 'void (String::memo_t *)' lvalue CXXMethod 0x558d5b439ea0 'delete_memo' 'void (String::memo_t *)'
|       |   `-ImplicitCastExpr 0x558d5b43c048 <col:15, col:18> 'String::memo_t *' <LValueToRValue>
|       |     `-MemberExpr 0x558d5b43bfa8 <col:15, col:18> 'String::memo_t *' lvalue .memo 0x558d5b434ef8
|       |       `-MemberExpr 0x558d5b43bf78 <col:15> 'String::rep_t' lvalue ->_r 0x558d5b434f70
|       |         `-CXXThisExpr 0x558d5b43bf68 <col:15> 'const String *' implicit this
|       `-BinaryOperator 0x558d5b43c120 <line:276:6, col:16> 'String::memo_t *' lvalue '='
|         |-MemberExpr 0x558d5b43c0b8 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x558d5b434ef8
|         | `-MemberExpr 0x558d5b43c088 <col:6> 'String::rep_t' lvalue ->_r 0x558d5b434f70
|         |   `-CXXThisExpr 0x558d5b43c078 <col:6> 'const String *' implicit this
|         `-ImplicitCastExpr 0x558d5b43c108 <col:16> 'String::memo_t *' <NullToPointer>
|           `-IntegerLiteral 0x558d5b43c0e8 <col:16> 'int' 0
|-CXXMethodDecl 0x558d5b435958 <line:280:5, col:56> col:10 used assign 'void (const char *, int, bool)'
| |-ParmVarDecl 0x558d5b435778 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x558d5b4357f8 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x558d5b435870 <col:41, col:46> col:46 need_deref 'bool'
|-CXXMethodDecl 0x558d5b435a30 <line:281:5, col:31> col:10 assign_out_of_memory 'void ()'
|-CXXMethodDecl 0x558d5b435c80 <line:282:5, col:53> col:10 used append 'void (const char *, int, String::memo_t *)'
| |-ParmVarDecl 0x558d5b435ae8 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x558d5b435b68 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x558d5b435be0 <col:41, col:49> col:49 memo 'String::memo_t *'
|-CXXMethodDecl 0x558d5b435e68 <line:283:5, col:58> col:19 used hard_make_stable 'String (const char *, int)' static
| |-ParmVarDecl 0x558d5b435d50 <col:36, col:48> col:48 s 'const char *'
| `-ParmVarDecl 0x558d5b435dd0 <col:51, col:55> col:55 len 'int'
|-CXXMethodDecl 0x558d5b435f68 <line:284:5, line:286:5> line:284:27 used absent_memo 'String::memo_t *()' static inline
| `-CompoundStmt 0x558d5b43c258 <col:41, line:286:5>
|   `-ReturnStmt 0x558d5b43c248 <line:285:2, col:48>
|     `-CXXReinterpretCastExpr 0x558d5b43c218 <col:9, col:48> 'String::memo_t *' reinterpret_cast<struct String::memo_t *> <IntegralToPointer>
|       `-CXXFunctionalCastExpr 0x558d5b43c1e0 <col:36, col:47> 'uintptr_t':'unsigned long' functional cast to uintptr_t <NoOp>
|         `-ImplicitCastExpr 0x558d5b43c1c8 <col:46> 'uintptr_t':'unsigned long' <IntegralCast> part_of_explicit_cast
|           `-IntegerLiteral 0x558d5b43c1a8 <col:46> 'int' 1
|-CXXMethodDecl 0x558d5b436208 <line:287:5, col:68> col:20 create_memo 'String::memo_t *(char *, int, int)' static
| |-ParmVarDecl 0x558d5b436020 <col:32, col:38> col:38 space 'char *'
| |-ParmVarDecl 0x558d5b4360a0 <col:45, col:49> col:49 dirty 'int'
| `-ParmVarDecl 0x558d5b436120 <col:56, col:60> col:60 capacity 'int'
|-CXXMethodDecl 0x558d5b439ea0 <line:288:5, col:41> col:17 used delete_memo 'void (String::memo_t *)' static
| `-ParmVarDecl 0x558d5b4362d0 <col:29, col:37> col:37 memo 'String::memo_t *'
|-CXXMethodDecl 0x558d5b439f70 <line:289:5, col:30> col:17 hard_c_str 'const char *() const'
|-CXXMethodDecl 0x558d5b43a140 <line:290:5, col:46> col:10 used hard_equals 'bool (const char *, int) const'
| |-ParmVarDecl 0x558d5b43a028 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x558d5b43a0a8 <col:37, col:41> col:41 len 'int'
|-VarDecl 0x558d5b43a200 <line:292:5, col:23> col:23 used null_data 'const char' static
|-VarDecl 0x558d5b43a2c8 <line:293:5, col:34> col:23 used oom_data 'const char [15]' static
|-VarDecl 0x558d5b43a3c8 <line:294:5, col:34> col:23 int_data 'const char [20]' static
|-VarDecl 0x558d5b43a440 <line:295:5, col:24> col:24 used null_string_rep 'const String::rep_t' static
|-VarDecl 0x558d5b43a4b8 <line:296:5, col:24> col:24 used oom_string_rep 'const String::rep_t' static
|-EnumDecl 0x558d5b43a520 <line:297:5, col:25> col:5
| `-EnumConstantDecl 0x558d5b43a620 <col:12, col:22> col:12 referenced oom_len 'String::(anonymous enum at ../dummy_inc/click/string.hh:297:5)'
|   `-ImplicitCastExpr 0x558d5b43a670 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x558d5b43a600 <col:22> 'int' Int: 14
|       `-IntegerLiteral 0x558d5b43a5e0 <col:22> 'int' 14
|-CXXMethodDecl 0x558d5b43a888 <line:299:5, col:46> col:19 make_claim 'String (char *, int, int)' static
| |-ParmVarDecl 0x558d5b43a6a0 <col:30, col:35> col:36 'char *'
| |-ParmVarDecl 0x558d5b43a720 <col:38> col:41 'int'
| `-ParmVarDecl 0x558d5b43a7a0 <col:43> col:46 'int'
|-FriendDecl 0x558d5b43a990 <line:301:5, col:19> col:12 'struct rep_t':'String::rep_t'
`-FriendDecl 0x558d5b43aa20 <line:302:5, col:18> col:12 'class StringAccum':'StringAccum'

Layout: <CGRecordLayout
  LLVMType:%class.String = type { %"struct.String::rep_t" }
  NonVirtualBaseLLVMType:%class.String = type { %"struct.String::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>
